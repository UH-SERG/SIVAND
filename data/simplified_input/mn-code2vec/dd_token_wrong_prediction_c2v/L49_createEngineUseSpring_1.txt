
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/henryyan__activiti-in-action-codes/chapter14-management/src/test/java/me/kafeitu/activiti/chapter7/engine/CreateEngineUseSpringProxy_createEngineUseSpring.java
method_name = createEngineUseSpring
method_body = @Test public void createEngineUseSpring() { ClassPathXmlApplicationContext context = new ClassPathXmlApplicationContext("applicationContext-test.xml"); ProcessEngineFactoryBean factoryBean = context.getBean(ProcessEngineFactoryBean.class); assertNotNull(factoryBean); RuntimeService bean = context.getBean(RuntimeService.class); assertNotNull(bean); }
predict, score, loss = afterPropertiesSet, 0.7751396894454956, 16.619455337524414

Trace of simplified code(s):
{"time": "2021-02-24 02:15:42.193317", "score": "0.7751", "loss": "16.6195", "code": "@Test public void createEngineUseSpring() { ClassPathXmlApplicationContext context = new ClassPathXmlApplicationContext(\"applicationContext-test.xml\"); ProcessEngineFactoryBean factoryBean = context.getBean(ProcessEngineFactoryBean.class); assertNotNull(factoryBean); RuntimeService bean = context.getBean(RuntimeService.class); assertNotNull(bean); }", "n_tokens": 78, "n_pass": [1, 1, 1]}
{"time": "2021-02-24 02:15:44.813962", "score": "0.6679", "loss": "16.717", "code": "@Test public void createEngineUseSpring() { ClassPathXmlApplicationContext context =  context.getBean(ProcessEngineFactoryBean.class); assertNotNull(factoryBean); RuntimeService bean = context.getBean(RuntimeService.class); assertNotNull(bean); }", "n_tokens": 59, "n_pass": [9, 2, 2]}
{"time": "2021-02-24 02:15:50.286168", "score": "0.8714", "loss": "17.0896", "code": "@Test public void createEngineUseSpring() { ClassPathXmlApplicationContext context =  context.getBean(ProcessEngineFactoryBean.class);; RuntimeService bean = context.getBean(RuntimeService.class); assertNotNull(bean); }", "n_tokens": 54, "n_pass": [39, 4, 3]}
{"time": "2021-02-24 02:15:52.927023", "score": "0.911", "loss": "15.5549", "code": "@Test public void createEngineUseSpring() { ClassPathXmlApplicationContext context =  context.getBean(ProcessEngineFactoryBean.class);; RuntimeService bean = context.getBean(RuntimeService.classbean); }", "n_tokens": 49, "n_pass": [42, 5, 4]}
{"time": "2021-02-24 02:15:55.543385", "score": "0.2909", "loss": "13.9521", "code": " void createEngineUseSpring() { ClassPathXmlApplicationContext context =  context.getBean(ProcessEngineFactoryBean.class);; RuntimeService bean = context.getBean(RuntimeService.classbean); }", "n_tokens": 45, "n_pass": [44, 6, 5]}
{"time": "2021-02-24 02:15:59.258895", "score": "0.8794", "loss": "16.5607", "code": " void createEngineUseSpring() { context =  context.getBean(ProcessEngineFactoryBean.class);; RuntimeService bean = context.getBean(RuntimeService.classbean); }", "n_tokens": 43, "n_pass": [76, 7, 6]}
{"time": "2021-02-24 02:16:01.870348", "score": "0.8794", "loss": "16.5607", "code": " void createEngineUseSpring() { context =context.getBean(ProcessEngineFactoryBean.class);; RuntimeService bean = context.getBean(RuntimeService.classbean); }", "n_tokens": 41, "n_pass": [79, 8, 7]}
{"time": "2021-02-24 02:16:04.474455", "score": "0.8802", "loss": "15.9347", "code": " void createEngineUseSpring() { context =getBean(ProcessEngineFactoryBean.class);; RuntimeService bean = context.getBean(RuntimeService.classbean); }", "n_tokens": 39, "n_pass": [80, 9, 8]}
{"time": "2021-02-24 02:16:07.148697", "score": "0.9775", "loss": "19.9561", "code": " void createEngineUseSpring() { context =getBean(ProcessEngineFactoryBean.class);; RuntimeService bean = (RuntimeService.classbean); }", "n_tokens": 36, "n_pass": [86, 10, 9]}
{"time": "2021-02-24 02:16:10.160158", "score": "0.6486", "loss": "16.7762", "code": " void createEngineUseSpring() { contextgetBean(ProcessEngineFactoryBean.class);; RuntimeService bean = (RuntimeService.classbean); }", "n_tokens": 34, "n_pass": [95, 11, 10]}
{"time": "2021-02-24 02:16:13.192057", "score": "0.7859", "loss": "16.7648", "code": " void createEngineUseSpring() {getBean(ProcessEngineFactoryBean.class);; RuntimeService bean = (RuntimeService.classbean); }", "n_tokens": 32, "n_pass": [108, 12, 11]}
{"time": "2021-02-24 02:16:23.323030", "score": "0.7859", "loss": "16.7648", "code": " void createEngineUseSpring() {getBean(ProcessEngineFactoryBean.class); RuntimeService bean = (RuntimeService.classbean); }", "n_tokens": 31, "n_pass": [151, 15, 12]}
{"time": "2021-02-24 02:16:25.930033", "score": "0.7683", "loss": "17.3472", "code": " void createEngineUseSpring() {getBean(ProcessEngineFactoryBean.class); bean = (RuntimeService.classbean); }", "n_tokens": 29, "n_pass": [153, 16, 13]}
{"time": "2021-02-24 02:16:28.547189", "score": "0.2359", "loss": "15.1785", "code": " void createEngineUseSpring() {getBean(ProcessEngineFactoryBean.class); bean (RuntimeService.classbean); }", "n_tokens": 27, "n_pass": [155, 17, 14]}
{"time": "2021-02-24 02:16:31.147179", "score": "0.7727", "loss": "16.0523", "code": " void createEngineUseSpring() {getBean(ProcessEngineFactoryBean.class); bean (classbean); }", "n_tokens": 25, "n_pass": [157, 18, 15]}
{"time": "2021-02-24 02:16:33.751561", "score": "0.7215", "loss": "17.9303", "code": " void createEngineUseSpring() {getBean(ProcessEngineFactoryBean.class); bean (); }", "n_tokens": 23, "n_pass": [158, 19, 16]}
{"time": "2021-02-24 02:16:36.328973", "score": "0.7215", "loss": "17.9303", "code": "void createEngineUseSpring() {getBean(ProcessEngineFactoryBean.class); bean (); }", "n_tokens": 22, "n_pass": [161, 20, 17]}
{"time": "2021-02-24 02:16:39.779476", "score": "0.7215", "loss": "17.9303", "code": "void createEngineUseSpring(){getBean(ProcessEngineFactoryBean.class); bean (); }", "n_tokens": 21, "n_pass": [167, 21, 18]}
{"time": "2021-02-24 02:16:42.394283", "score": "0.9118", "loss": "16.9556", "code": "void createEngineUseSpring(){(ProcessEngineFactoryBean.class); bean (); }", "n_tokens": 20, "n_pass": [169, 22, 19]}
{"time": "2021-02-24 02:16:49.849999", "score": "0.9118", "loss": "16.9556", "code": "void createEngineUseSpring(){(ProcessEngineFactoryBean.class);bean (); }", "n_tokens": 19, "n_pass": [194, 24, 20]}
{"time": "2021-02-24 02:16:52.504650", "score": "0.9118", "loss": "16.9556", "code": "void createEngineUseSpring(){(ProcessEngineFactoryBean.class);bean(); }", "n_tokens": 18, "n_pass": [195, 25, 21]}
{"time": "2021-02-24 02:16:55.078036", "score": "0.9118", "loss": "16.9556", "code": "void createEngineUseSpring(){(ProcessEngineFactoryBean.class);bean();}", "n_tokens": 17, "n_pass": [199, 26, 22]}

Minimal simplified code:
void createEngineUseSpring(){(ProcessEngineFactoryBean.class);bean();}

