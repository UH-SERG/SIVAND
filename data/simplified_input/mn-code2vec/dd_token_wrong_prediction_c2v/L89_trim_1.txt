
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/bcgit__bc-java/core/src/main/java/org/bouncycastle/math/ec/WNafUtil_trim.java
method_name = trim
method_body = private static int[] trim(int[] a, int length) { int[] result = new int[length]; System.arraycopy(a, 0, result, 0, result.length); return result; }
predict, score, loss = concat, 0.5894633531570435, 3.8276333808898926

Trace of simplified code(s):
{"time": "2021-02-23 23:56:02.843732", "score": "0.5895", "loss": "3.8276", "code": "private static int[] trim(int[] a, int length) { int[] result = new int[length]; System.arraycopy(a, 0, result, 0, result.length); return result; }", "n_tokens": 68, "n_pass": [1, 1, 1]}
{"time": "2021-02-23 23:56:06.189179", "score": "0.6126", "loss": "3.9996", "code": "private static int[] trim(int[] a, int length) { new int[length]; System.arraycopy(a, 0, result, 0, result.length); return result; }", "n_tokens": 60, "n_pass": [23, 2, 2]}
{"time": "2021-02-23 23:56:09.548164", "score": "0.2211", "loss": "4.896", "code": "private static int[] trim(int[] a, int length) { new int[length]; System.arraycopy(a, 00, result.length); return result; }", "n_tokens": 55, "n_pass": [49, 3, 3]}
{"time": "2021-02-23 23:56:12.451185", "score": "0.2211", "loss": "4.896", "code": "int[] trim(int[] a, int length) { new int[length]; System.arraycopy(a, 00, result.length); return result; }", "n_tokens": 51, "n_pass": [53, 4, 4]}
{"time": "2021-02-23 23:56:25.384406", "score": "0.2606", "loss": "4.8636", "code": "int[] trim(int[] a, int length) { new int[length]; System.arraycopy(a,0, result.length); return result; }", "n_tokens": 49, "n_pass": [107, 8, 5]}
{"time": "2021-02-23 23:56:31.261796", "score": "0.2925", "loss": "5.2402", "code": "int[] trim(int[] a, int length) { new int[length]; System.arraycopy(a,0, result); return result; }", "n_tokens": 47, "n_pass": [110, 10, 6]}
{"time": "2021-02-23 23:56:51.157128", "score": "0.2925", "loss": "5.2402", "code": "int[] trim(int[] a, int length) { new int[length]; System.arraycopy(a,0, result);return result; }", "n_tokens": 46, "n_pass": [179, 15, 7]}
{"time": "2021-02-23 23:56:57.115525", "score": "0.2925", "loss": "5.2402", "code": "int[]trim(int[] a, int length) { new int[length]; System.arraycopy(a,0, result);return result; }", "n_tokens": 45, "n_pass": [186, 17, 8]}
{"time": "2021-02-23 23:57:00.040740", "score": "0.2925", "loss": "5.2402", "code": "int[]trim(int[]a, int length) { new int[length]; System.arraycopy(a,0, result);return result; }", "n_tokens": 44, "n_pass": [192, 18, 9]}
{"time": "2021-02-23 23:57:02.953498", "score": "0.2925", "loss": "5.2402", "code": "int[]trim(int[]a,int length) { new int[length]; System.arraycopy(a,0, result);return result; }", "n_tokens": 43, "n_pass": [195, 19, 10]}
{"time": "2021-02-23 23:57:05.885105", "score": "0.2925", "loss": "5.2402", "code": "int[]trim(int[]a,int length){ new int[length]; System.arraycopy(a,0, result);return result; }", "n_tokens": 42, "n_pass": [200, 20, 11]}
{"time": "2021-02-23 23:57:08.768288", "score": "0.2925", "loss": "5.2402", "code": "int[]trim(int[]a,int length){new int[length]; System.arraycopy(a,0, result);return result; }", "n_tokens": 41, "n_pass": [202, 21, 12]}
{"time": "2021-02-23 23:57:11.654338", "score": "0.2743", "loss": "5.0979", "code": "int[]trim(int[]a,int length){newint[length]; System.arraycopy(a,0, result);return result; }", "n_tokens": 40, "n_pass": [204, 22, 13]}
{"time": "2021-02-23 23:57:14.519215", "score": "0.2743", "loss": "5.0979", "code": "int[]trim(int[]a,int length){newint[length];System.arraycopy(a,0, result);return result; }", "n_tokens": 39, "n_pass": [210, 23, 14]}
{"time": "2021-02-23 23:57:23.252381", "score": "0.2743", "loss": "5.0979", "code": "int[]trim(int[]a,int length){newint[length];System.arraycopy(a,0,result);return result; }", "n_tokens": 38, "n_pass": [219, 26, 15]}
{"time": "2021-02-23 23:57:44.657874", "score": "0.2743", "loss": "5.0979", "code": "int[]trim(int[]a,int length){newint[length];System.arraycopy(a,0,result);return result;}", "n_tokens": 37, "n_pass": [265, 33, 16]}

Minimal simplified code:
int[]trim(int[]a,int length){newint[length];System.arraycopy(a,0,result);return result;}

