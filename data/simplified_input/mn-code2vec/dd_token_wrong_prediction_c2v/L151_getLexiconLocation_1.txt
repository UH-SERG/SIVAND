
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/CogComp__cogcomp-nlp/md/src/main/java/org/cogcomp/md/LbjGen/extent_classifier_getLexiconLocation.java
method_name = getLexiconLocation
method_body = public java.net.URL getLexiconLocation() { if (isClone) { loadInstance(); return instance.getLexiconLocation(); } return super.getLexiconLocation(); }
predict, score, loss = makeProxy, 0.3426705598831177, 15.167089462280273

Trace of simplified code(s):
{"time": "2021-02-24 15:07:33.559683", "score": "0.3427", "loss": "15.1671", "code": "public java.net.URL getLexiconLocation() { if (isClone) { loadInstance(); return instance.getLexiconLocation(); } return super.getLexiconLocation(); }", "n_tokens": 48, "n_pass": [1, 1, 1]}
{"time": "2021-02-24 15:07:46.652505", "score": "0.3427", "loss": "15.1671", "code": " java.net.URL getLexiconLocation() { if (isClone) { loadInstance(); return instance.getLexiconLocation(); } return super.getLexiconLocation(); }", "n_tokens": 47, "n_pass": [92, 5, 2]}
{"time": "2021-02-24 15:07:49.264439", "score": "0.3427", "loss": "15.1671", "code": "java.net.URL getLexiconLocation() { if (isClone) { loadInstance(); return instance.getLexiconLocation(); } return super.getLexiconLocation(); }", "n_tokens": 46, "n_pass": [93, 6, 3]}
{"time": "2021-02-24 15:07:57.140683", "score": "0.3427", "loss": "15.1671", "code": "java.net.URL getLexiconLocation(){ if (isClone) { loadInstance(); return instance.getLexiconLocation(); } return super.getLexiconLocation(); }", "n_tokens": 45, "n_pass": [102, 9, 4]}
{"time": "2021-02-24 15:07:59.736789", "score": "0.3427", "loss": "15.1671", "code": "java.net.URL getLexiconLocation(){if (isClone) { loadInstance(); return instance.getLexiconLocation(); } return super.getLexiconLocation(); }", "n_tokens": 44, "n_pass": [104, 10, 5]}
{"time": "2021-02-24 15:08:02.371521", "score": "0.3427", "loss": "15.1671", "code": "java.net.URL getLexiconLocation(){if(isClone) { loadInstance(); return instance.getLexiconLocation(); } return super.getLexiconLocation(); }", "n_tokens": 43, "n_pass": [106, 11, 6]}
{"time": "2021-02-24 15:08:10.314677", "score": "0.4194", "loss": "15.5455", "code": "java.net.URL getLexiconLocation(){if(isClone) { loadInstance(); return instance.getLexiconLocation; } return super.getLexiconLocation(); }", "n_tokens": 41, "n_pass": [115, 14, 7]}
{"time": "2021-02-24 15:08:12.974937", "score": "0.4267", "loss": "15.1626", "code": "java.net.URL getLexiconLocation(){if(isClone) { loadInstance(); return instance.getLexiconLocation; } super.getLexiconLocation(); }", "n_tokens": 39, "n_pass": [118, 15, 8]}
{"time": "2021-02-24 15:08:34.991200", "score": "0.4267", "loss": "15.1626", "code": "java.net.URL getLexiconLocation(){if(isClone) { loadInstance(); return instance.getLexiconLocation; } super.getLexiconLocation();}", "n_tokens": 38, "n_pass": [177, 22, 9]}
{"time": "2021-02-24 15:08:42.819773", "score": "0.4267", "loss": "15.1626", "code": "java.net.URL getLexiconLocation(){if(isClone){ loadInstance(); return instance.getLexiconLocation; } super.getLexiconLocation();}", "n_tokens": 37, "n_pass": [192, 25, 10]}
{"time": "2021-02-24 15:08:45.426489", "score": "0.4267", "loss": "15.1626", "code": "java.net.URL getLexiconLocation(){if(isClone){loadInstance(); return instance.getLexiconLocation; } super.getLexiconLocation();}", "n_tokens": 36, "n_pass": [194, 26, 11]}
{"time": "2021-02-24 15:08:48.053455", "score": "0.4267", "loss": "15.1626", "code": "java.net.URL getLexiconLocation(){if(isClone){loadInstance();return instance.getLexiconLocation; } super.getLexiconLocation();}", "n_tokens": 35, "n_pass": [199, 27, 12]}
{"time": "2021-02-24 15:08:55.980522", "score": "0.3941", "loss": "15.5927", "code": "java.net.URL getLexiconLocation(){if(isClone){loadInstance();return instancegetLexiconLocation; } super.getLexiconLocation();}", "n_tokens": 34, "n_pass": [203, 30, 13]}
{"time": "2021-02-24 15:09:01.204503", "score": "0.3941", "loss": "15.5927", "code": "java.net.URL getLexiconLocation(){if(isClone){loadInstance();return instancegetLexiconLocation;} super.getLexiconLocation();}", "n_tokens": 33, "n_pass": [206, 32, 14]}
{"time": "2021-02-24 15:09:03.801382", "score": "0.3941", "loss": "15.5927", "code": "java.net.URL getLexiconLocation(){if(isClone){loadInstance();return instancegetLexiconLocation;}super.getLexiconLocation();}", "n_tokens": 32, "n_pass": [208, 33, 15]}
{"time": "2021-02-24 15:09:19.482590", "score": "0.3941", "loss": "15.5927", "code": "java.net.URL getLexiconLocation(){if(isClone){loadInstance();return getLexiconLocation;}super.getLexiconLocation();}", "n_tokens": 31, "n_pass": [237, 39, 16]}

Minimal simplified code:
java.net.URL getLexiconLocation(){if(isClone){loadInstance();return getLexiconLocation;}super.getLexiconLocation();}

