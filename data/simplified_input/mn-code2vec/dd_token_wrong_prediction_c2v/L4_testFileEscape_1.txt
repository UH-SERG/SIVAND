
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/sakaiproject__sakai/content-review/impl/compilatio/src/test/java/org/sakaiproject/contentreview/logic/CompilatioTest_testFileEscape.java
method_name = testFileEscape
method_body = @Test public void testFileEscape() { CompilatioReviewServiceImpl compilatioService = new CompilatioReviewServiceImpl(); String someEscaping = compilatioService.escapeFileName("Practical%203.docx", "contentId"); Assert.assertEquals("Practical_3.docx", someEscaping); someEscaping = compilatioService.escapeFileName("Practical%203%.docx", "contentId"); Assert.assertEquals("contentId", someEscaping); someEscaping = compilatioService.escapeFileName("Practical3.docx", "contentId"); Assert.assertEquals("Practical3.docx", someEscaping); }
predict, score, loss = setup, 0.7332393527030945, 18.105655670166016

Trace of simplified code(s):
{"time": "2021-02-24 03:02:44.581434", "score": "0.7132", "loss": "17.617", "code": "@Test public void testFileEscape() { CompilatioReviewServiceImpl compilatioService = new CompilatioReviewServiceImpl(); String someEscaping = compilatioService.escapeFileName(\"Practical%203.docx\", \"contentId\"); Assert.assertEquals(\"Practical_3.docx\", someEscaping); someEscaping = compilatioService.escapeFileName(\"Practical%203%.docx\", \"contentId\"); Assert.assertEquals(\"contentId\", someEscaping); someEscaping = compilatioService.escapeFileName(\"Practical3.docx\", \"contentId\"); Assert.assertEquals(\"Practical3.docx\", someEscaping); }", "n_tokens": 148, "n_pass": [1, 1, 1]}
{"time": "2021-02-24 03:02:47.328112", "score": "0.5987", "loss": "17.1935", "code": "@Test public void testFileEscape() { CompilatioReviewServiceImpl compilatioService = new CompilatioReviewServiceImpl(); String someEscaping = compilatioService.escapeFileName(\"Practical%203.docx\", \"contentId\"); Assert= compilatioService.escapeFileName(\"Practical%203%.docx\", \"contentId\"); Assert.assertEquals(\"contentId\", someEscaping); someEscaping = compilatioService.escapeFileName(\"Practical3.docx\", \"contentId\"); Assert.assertEquals(\"Practical3.docx\", someEscaping); }", "n_tokens": 130, "n_pass": [23, 2, 2]}
{"time": "2021-02-24 03:02:52.727080", "score": "0.4833", "loss": "17.6476", "code": "@Test public void testFileEscape() { CompilatioReviewServiceImpl compilatioService = new CompilatioReviewServiceImpl(); String someEscaping = compilatioService.escapeFileName(\"Practical%203.docx\", \"contentId\"); Assert= compilatioService.escapeFileName(\"Practical%203%.docx\", \"contentId\"); Assert.assertEquals someEscaping = compilatioService.escapeFileName(\"Practical3.docx\", \"contentId\"); Assert.assertEquals(\"Practical3.docx\", someEscaping); }", "n_tokens": 121, "n_pass": [48, 4, 3]}
{"time": "2021-02-24 03:02:55.362188", "score": "0.6974", "loss": "17.325", "code": "@Test public void testFileEscape() { CompilatioReviewServiceImpl compilatioService = someEscaping = compilatioService.escapeFileName(\"Practical%203.docx\", \"contentId\"); Assert= compilatioService.escapeFileName(\"Practical%203%.docx\", \"contentId\"); Assert.assertEquals someEscaping = compilatioService.escapeFileName(\"Practical3.docx\", \"contentId\"); Assert.assertEquals(\"Practical3.docx\", someEscaping); }", "n_tokens": 112, "n_pass": [55, 5, 4]}
{"time": "2021-02-24 03:02:58.024047", "score": "0.5105", "loss": "17.8177", "code": "@Test public void testFileEscape() { CompilatioReviewServiceImpl compilatioService = compilatioService.escapeFileName(\"Practical%203.docx\", \"contentId\"); Assert= compilatioService.escapeFileName(\"Practical%203%.docx\", \"contentId\"); Assert.assertEquals someEscaping = compilatioService.escapeFileName(\"Practical3.docx\", \"contentId\"); Assert.assertEquals(\"Practical3.docx\", someEscaping); }", "n_tokens": 108, "n_pass": [92, 6, 5]}
{"time": "2021-02-24 03:03:00.683350", "score": "0.2107", "loss": "17.4876", "code": "@Test public void testFileEscape() { CompilatioReviewServiceImpl compilatioService = compilatioService.escapeFileName(\"3.docx\", \"contentId\"); Assert= compilatioService.escapeFileName(\"Practical%203%.docx\", \"contentId\"); Assert.assertEquals someEscaping = compilatioService.escapeFileName(\"Practical3.docx\", \"contentId\"); Assert.assertEquals(\"Practical3.docx\", someEscaping); }", "n_tokens": 104, "n_pass": [95, 7, 6]}
{"time": "2021-02-24 03:03:06.240003", "score": "0.2759", "loss": "16.5268", "code": "@Test public void testFileEscape() { CompilatioReviewServiceImpl compilatioService = compilatioService.escapeFileName(\"3.docx\", \"contentId\"); Assert= compilatioService.escapeFileName(\"Practical%203%.docx\", \"contentId\"); Assert.assertEqualscompilatioService.escapeFileName(\"Practical3.docx\", \"contentId\"); Assert.assertEquals(\"Practical3.docx\", someEscaping); }", "n_tokens": 99, "n_pass": [104, 9, 7]}
{"time": "2021-02-24 03:03:08.861483", "score": "0.4561", "loss": "17.3892", "code": "@Test public void testFileEscape() { CompilatioReviewServiceImpl compilatioService = compilatioService.escapeFileName(\"3.docx\", \"contentId\"); Assert= compilatioService.escapeFileName(\"Practical%203%.docx\", \"contentId\"); Assert.assertEqualscompilatioService.escapeFileName(\"Practical3.docx\"); Assert.assertEquals(\"Practical3.docx\", someEscaping); }", "n_tokens": 94, "n_pass": [107, 10, 8]}
{"time": "2021-02-24 03:03:14.171574", "score": "0.2395", "loss": "17.3236", "code": "@Test public void testFileEscape() { CompilatioReviewServiceImpl compilatioService = compilatioService.escapeFileName(\"3.docx\", \"contentId\"); Assert= compilatioService.escapeFileName(\"%.docx\", \"contentId\"); Assert.assertEqualscompilatioService.escapeFileName(\"Practical3.docx\"); Assert.assertEquals(\"Practical3.docx\", someEscaping); }", "n_tokens": 89, "n_pass": [122, 12, 9]}
{"time": "2021-02-24 03:03:22.773504", "score": "0.2395", "loss": "17.3236", "code": "@Test public void testFileEscape() { CompilatioReviewServiceImpl compilatioService = compilatioService.escapeFileName(\"3.docx\", \"contentId\"); Assert= compilatioService.escapeFileName(\"docx\", \"contentId\"); Assert.assertEqualscompilatioService.escapeFileName(\"Practical3.docx\"); Assert.assertEquals(\"Practical3.docx\", someEscaping); }", "n_tokens": 87, "n_pass": [182, 15, 10]}
{"time": "2021-02-24 03:03:25.494872", "score": "0.2617", "loss": "17.4834", "code": "@Test public void testFileEscape() { CompilatioReviewServiceImpl compilatioService = compilatioService.escapeFileName(\"3.docx\", \"contentId\"); Assert= compilatioService.escapeFileName(\"docx\", \"contentId\"); compilatioService.escapeFileName(\"Practical3.docx\"); Assert.assertEquals(\"Practical3.docx\", someEscaping); }", "n_tokens": 84, "n_pass": [187, 16, 11]}
{"time": "2021-02-24 03:03:41.545568", "score": "0.2617", "loss": "17.4834", "code": "@Test void testFileEscape() { CompilatioReviewServiceImpl compilatioService = compilatioService.escapeFileName(\"3.docx\", \"contentId\"); Assert= compilatioService.escapeFileName(\"docx\", \"contentId\"); compilatioService.escapeFileName(\"Practical3.docx\"); Assert.assertEquals(\"Practical3.docx\", someEscaping); }", "n_tokens": 82, "n_pass": [199, 22, 12]}
{"time": "2021-02-24 03:03:44.546658", "score": "0.5444", "loss": "18.4941", "code": "@Test void testFileEscape() { compilatioService = compilatioService.escapeFileName(\"3.docx\", \"contentId\"); Assert= compilatioService.escapeFileName(\"docx\", \"contentId\"); compilatioService.escapeFileName(\"Practical3.docx\"); Assert.assertEquals(\"Practical3.docx\", someEscaping); }", "n_tokens": 80, "n_pass": [204, 23, 13]}
{"time": "2021-02-24 03:03:47.200926", "score": "0.5605", "loss": "16.7544", "code": "@Test void testFileEscape() { compilatioService = compilatioService(\"3.docx\", \"contentId\"); Assert= compilatioService.escapeFileName(\"docx\", \"contentId\"); compilatioService.escapeFileName(\"Practical3.docx\"); Assert.assertEquals(\"Practical3.docx\", someEscaping); }", "n_tokens": 78, "n_pass": [208, 24, 14]}
{"time": "2021-02-24 03:03:49.835573", "score": "0.5605", "loss": "16.7544", "code": "@Test void testFileEscape() { compilatioService = compilatioService(\"docx\", \"contentId\"); Assert= compilatioService.escapeFileName(\"docx\", \"contentId\"); compilatioService.escapeFileName(\"Practical3.docx\"); Assert.assertEquals(\"Practical3.docx\", someEscaping); }", "n_tokens": 76, "n_pass": [210, 25, 15]}
{"time": "2021-02-24 03:03:55.074978", "score": "0.1964", "loss": "15.3857", "code": "@Test void testFileEscape() { compilatioService = compilatioService(\"docx\", \"contentId\"); Assert= compilatioService(\"docx\", \"contentId\"); compilatioService.escapeFileName(\"Practical3.docx\"); Assert.assertEquals(\"Practical3.docx\", someEscaping); }", "n_tokens": 74, "n_pass": [218, 27, 16]}
{"time": "2021-02-24 03:04:02.919050", "score": "0.194", "loss": "15.361", "code": "@Test void testFileEscape() { compilatioService = compilatioService(\"docx\", \"contentId\"); Assert= compilatioService(\"docx\", \"contentId\"); compilatioService.escapeFileName(\"Practical3.docx\");assertEquals(\"Practical3.docx\", someEscaping); }", "n_tokens": 71, "n_pass": [228, 30, 17]}
{"time": "2021-02-24 03:04:33.844888", "score": "0.194", "loss": "15.361", "code": "@Test void testFileEscape(){ compilatioService = compilatioService(\"docx\", \"contentId\"); Assert= compilatioService(\"docx\", \"contentId\"); compilatioService.escapeFileName(\"Practical3.docx\");assertEquals(\"Practical3.docx\", someEscaping); }", "n_tokens": 70, "n_pass": [337, 39, 18]}
{"time": "2021-02-24 03:04:36.478438", "score": "0.194", "loss": "15.361", "code": "@Test void testFileEscape(){compilatioService = compilatioService(\"docx\", \"contentId\"); Assert= compilatioService(\"docx\", \"contentId\"); compilatioService.escapeFileName(\"Practical3.docx\");assertEquals(\"Practical3.docx\", someEscaping); }", "n_tokens": 69, "n_pass": [338, 40, 19]}
{"time": "2021-02-24 03:04:39.104729", "score": "0.194", "loss": "15.361", "code": "@Test void testFileEscape(){compilatioService= compilatioService(\"docx\", \"contentId\"); Assert= compilatioService(\"docx\", \"contentId\"); compilatioService.escapeFileName(\"Practical3.docx\");assertEquals(\"Practical3.docx\", someEscaping); }", "n_tokens": 68, "n_pass": [340, 41, 20]}
{"time": "2021-02-24 03:04:41.722349", "score": "0.194", "loss": "15.361", "code": "@Test void testFileEscape(){compilatioService=compilatioService(\"docx\", \"contentId\"); Assert= compilatioService(\"docx\", \"contentId\"); compilatioService.escapeFileName(\"Practical3.docx\");assertEquals(\"Practical3.docx\", someEscaping); }", "n_tokens": 67, "n_pass": [342, 42, 21]}
{"time": "2021-02-24 03:04:44.349116", "score": "0.4057", "loss": "15.3935", "code": "@Test void testFileEscape(){compilatioService=compilatioService(\"\", \"contentId\"); Assert= compilatioService(\"docx\", \"contentId\"); compilatioService.escapeFileName(\"Practical3.docx\");assertEquals(\"Practical3.docx\", someEscaping); }", "n_tokens": 66, "n_pass": [346, 43, 22]}
{"time": "2021-02-24 03:04:47.091032", "score": "0.4057", "loss": "15.3935", "code": "@Test void testFileEscape(){compilatioService=compilatioService(\"\",\"contentId\"); Assert= compilatioService(\"docx\", \"contentId\"); compilatioService.escapeFileName(\"Practical3.docx\");assertEquals(\"Practical3.docx\", someEscaping); }", "n_tokens": 65, "n_pass": [349, 44, 23]}
{"time": "2021-02-24 03:04:49.732859", "score": "0.563", "loss": "15.6897", "code": "@Test void testFileEscape(){compilatioService=compilatioService(\"\",\"\"); Assert= compilatioService(\"docx\", \"contentId\"); compilatioService.escapeFileName(\"Practical3.docx\");assertEquals(\"Practical3.docx\", someEscaping); }", "n_tokens": 64, "n_pass": [351, 45, 24]}
{"time": "2021-02-24 03:04:52.357816", "score": "0.563", "loss": "15.6897", "code": "@Test void testFileEscape(){compilatioService=compilatioService(\"\",\"\");Assert= compilatioService(\"docx\", \"contentId\"); compilatioService.escapeFileName(\"Practical3.docx\");assertEquals(\"Practical3.docx\", someEscaping); }", "n_tokens": 63, "n_pass": [355, 46, 25]}
{"time": "2021-02-24 03:04:54.989028", "score": "0.563", "loss": "15.6897", "code": "@Test void testFileEscape(){compilatioService=compilatioService(\"\",\"\");Assert=compilatioService(\"docx\", \"contentId\"); compilatioService.escapeFileName(\"Practical3.docx\");assertEquals(\"Practical3.docx\", someEscaping); }", "n_tokens": 62, "n_pass": [358, 47, 26]}
{"time": "2021-02-24 03:04:57.598684", "score": "0.8031", "loss": "16.2367", "code": "@Test void testFileEscape(){compilatioService=compilatioService(\"\",\"\");Assert=compilatioService(\"\", \"contentId\"); compilatioService.escapeFileName(\"Practical3.docx\");assertEquals(\"Practical3.docx\", someEscaping); }", "n_tokens": 61, "n_pass": [362, 48, 27]}
{"time": "2021-02-24 03:05:00.215094", "score": "0.8031", "loss": "16.2367", "code": "@Test void testFileEscape(){compilatioService=compilatioService(\"\",\"\");Assert=compilatioService(\"\",\"contentId\"); compilatioService.escapeFileName(\"Practical3.docx\");assertEquals(\"Practical3.docx\", someEscaping); }", "n_tokens": 60, "n_pass": [365, 49, 28]}
{"time": "2021-02-24 03:05:02.825908", "score": "0.8124", "loss": "17.0761", "code": "@Test void testFileEscape(){compilatioService=compilatioService(\"\",\"\");Assert=compilatioService(\"\",\"\"); compilatioService.escapeFileName(\"Practical3.docx\");assertEquals(\"Practical3.docx\", someEscaping); }", "n_tokens": 59, "n_pass": [367, 50, 29]}
{"time": "2021-02-24 03:05:05.434368", "score": "0.8124", "loss": "17.0761", "code": "@Test void testFileEscape(){compilatioService=compilatioService(\"\",\"\");Assert=compilatioService(\"\",\"\");compilatioService.escapeFileName(\"Practical3.docx\");assertEquals(\"Practical3.docx\", someEscaping); }", "n_tokens": 58, "n_pass": [371, 51, 30]}
{"time": "2021-02-24 03:05:22.488001", "score": "0.65", "loss": "16.5552", "code": "@Test void testFileEscape(){compilatioServicecompilatioService(\"\",\"\");Assert=compilatioService(\"\",\"\");compilatioService.escapeFileName(\"Practical3.docx\");assertEquals(\"Practical3.docx\", someEscaping); }", "n_tokens": 57, "n_pass": [398, 57, 31]}
{"time": "2021-02-24 03:05:25.190024", "score": "0.65", "loss": "16.5552", "code": "@Test void testFileEscape(){compilatioService(\"\",\"\");Assert=compilatioService(\"\",\"\");compilatioService.escapeFileName(\"Practical3.docx\");assertEquals(\"Practical3.docx\", someEscaping); }", "n_tokens": 56, "n_pass": [399, 58, 32]}
{"time": "2021-02-24 03:05:27.853196", "score": "0.3864", "loss": "16.7778", "code": "@Test void testFileEscape(){compilatioService(\"\",\"\");AssertcompilatioService(\"\",\"\");compilatioService.escapeFileName(\"Practical3.docx\");assertEquals(\"Practical3.docx\", someEscaping); }", "n_tokens": 55, "n_pass": [409, 59, 33]}
{"time": "2021-02-24 03:05:30.482669", "score": "0.4235", "loss": "16.7223", "code": "@Test void testFileEscape(){compilatioService(\"\",\"\");Assert(\"\",\"\");compilatioService.escapeFileName(\"Practical3.docx\");assertEquals(\"Practical3.docx\", someEscaping); }", "n_tokens": 54, "n_pass": [410, 60, 34]}
{"time": "2021-02-24 03:05:51.506878", "score": "0.4235", "loss": "16.7223", "code": "@Test void testFileEscape(){compilatioService(\"\",\"\");Assert(\"\",\"\");compilatioService.escapeFileName(\"Practical.docx\");assertEquals(\"Practical3.docx\", someEscaping); }", "n_tokens": 53, "n_pass": [477, 67, 35]}
{"time": "2021-02-24 03:05:54.128569", "score": "0.4235", "loss": "16.7223", "code": "@Test void testFileEscape(){compilatioService(\"\",\"\");Assert(\"\",\"\");compilatioService.escapeFileName(\"Practicaldocx\");assertEquals(\"Practical3.docx\", someEscaping); }", "n_tokens": 52, "n_pass": [478, 68, 36]}
{"time": "2021-02-24 03:06:02.056293", "score": "0.4235", "loss": "16.7223", "code": "@Test void testFileEscape(){compilatioService(\"\",\"\");Assert(\"\",\"\");compilatioService.escapeFileName(\"Practicaldocx\");assertEquals(\"Practical.docx\", someEscaping); }", "n_tokens": 51, "n_pass": [487, 71, 37]}
{"time": "2021-02-24 03:06:04.656641", "score": "0.4235", "loss": "16.7223", "code": "@Test void testFileEscape(){compilatioService(\"\",\"\");Assert(\"\",\"\");compilatioService.escapeFileName(\"Practicaldocx\");assertEquals(\"Practicaldocx\", someEscaping); }", "n_tokens": 50, "n_pass": [488, 72, 38]}
{"time": "2021-02-24 03:06:09.969745", "score": "0.4235", "loss": "16.7223", "code": "@Test void testFileEscape(){compilatioService(\"\",\"\");Assert(\"\",\"\");compilatioService.escapeFileName(\"Practicaldocx\");assertEquals(\"Practicaldocx\",someEscaping); }", "n_tokens": 49, "n_pass": [492, 74, 39]}
{"time": "2021-02-24 03:06:12.590094", "score": "0.4235", "loss": "16.7223", "code": "@Test void testFileEscape(){compilatioService(\"\",\"\");Assert(\"\",\"\");compilatioService.escapeFileName(\"Practicaldocx\");assertEquals(\"Practicaldocx\",someEscaping);}", "n_tokens": 48, "n_pass": [496, 75, 40]}

Minimal simplified code:
@Test void testFileEscape(){compilatioService("","");Assert("","");compilatioService.escapeFileName("Practicaldocx");assertEquals("Practicaldocx",someEscaping);}

