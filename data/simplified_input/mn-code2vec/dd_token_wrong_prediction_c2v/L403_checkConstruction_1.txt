
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/bcgit__bc-java/core/src/test/java/org/bouncycastle/asn1/test/RestrictionUnitTest_checkConstruction.java
method_name = checkConstruction
method_body = private void checkConstruction(Restriction restriction, DirectoryString res) throws IOException { checkValues(restriction, res); restriction = Restriction.getInstance(restriction); checkValues(restriction, res); ASN1InputStream aIn = new ASN1InputStream(restriction.toASN1Primitive().getEncoded()); ASN1String str = (ASN1String) aIn.readObject(); restriction = Restriction.getInstance(str); checkValues(restriction, res); }
predict, score, loss = decode, 0.7485326528549194, 13.285470008850098

Trace of simplified code(s):
{"time": "2021-02-24 05:58:58.749845", "score": "0.7166", "loss": "13.3649", "code": "private void checkConstruction(Restriction restriction, DirectoryString res) throws IOException { checkValues(restriction, res); restriction = Restriction.getInstance(restriction); checkValues(restriction, res); ASN1InputStream aIn = new ASN1InputStream(restriction.toASN1Primitive().getEncoded()); ASN1String str = (ASN1String) aIn.readObject(); restriction = Restriction.getInstance(str); checkValues(restriction, res); }", "n_tokens": 123, "n_pass": [1, 1, 1]}
{"time": "2021-02-24 05:59:01.391758", "score": "0.3434", "loss": "13.1999", "code": "private void checkConstruction(Restriction restriction, DirectoryString res) throws IOException { checkValues(restriction, res); ASN1InputStream(restriction.toASN1Primitive().getEncoded()); ASN1String str = (ASN1String) aIn.readObject(); restriction = Restriction.getInstance(str); checkValues(restriction, res); }", "n_tokens": 92, "n_pass": [9, 2, 2]}
{"time": "2021-02-24 05:59:04.029615", "score": "0.4645", "loss": "13.1263", "code": "private void checkConstruction(Restriction restriction, DirectoryString res) throws IOException { checkValues(restriction, res.toASN1Primitive().getEncoded()); ASN1String str = (ASN1String) aIn.readObject(); restriction = Restriction.getInstance(str); checkValues(restriction, res); }", "n_tokens": 84, "n_pass": [36, 3, 3]}
{"time": "2021-02-24 05:59:06.709497", "score": "0.4474", "loss": "13.132", "code": "private void checkConstruction(Restriction restriction, DirectoryString res) throws IOException { checkValues(restriction, res()); ASN1String str = (ASN1String) aIn.readObject(); restriction = Restriction.getInstance(str); checkValues(restriction, res); }", "n_tokens": 76, "n_pass": [37, 4, 4]}
{"time": "2021-02-24 05:59:09.388862", "score": "0.686", "loss": "12.9551", "code": "private void checkConstruction(Restriction restriction, DirectoryString res) throws IOException { checkValues(restriction, res()); str = (ASN1String) aIn.readObject(); restriction = Restriction.getInstance(str); checkValues(restriction, res); }", "n_tokens": 72, "n_pass": [69, 5, 5]}
{"time": "2021-02-24 05:59:12.469502", "score": "0.6089", "loss": "12.8169", "code": "private void checkConstruction(Restriction restriction, DirectoryString res) throws IOException { checkValues(restriction, res()); str = (ASN1String) aIn; restriction = Restriction.getInstance(str); checkValues(restriction, res); }", "n_tokens": 68, "n_pass": [73, 6, 6]}
{"time": "2021-02-24 05:59:15.473474", "score": "0.6398", "loss": "13.1554", "code": "private void checkConstruction(Restriction restriction, DirectoryString res) throws IOException { checkValues(restriction, res()); str = (ASN1String) aIn; restriction = Restriction.getInstance(str); checkValues(); }", "n_tokens": 64, "n_pass": [78, 7, 7]}
{"time": "2021-02-24 05:59:18.534477", "score": "0.2003", "loss": "12.9998", "code": "private void checkConstruction(Restriction restriction, DirectoryString res) { checkValues(restriction, res()); str = (ASN1String) aIn; restriction = Restriction.getInstance(str); checkValues(); }", "n_tokens": 60, "n_pass": [85, 8, 8]}
{"time": "2021-02-24 05:59:26.419559", "score": "0.2033", "loss": "13.0026", "code": "private void checkConstruction(Restriction restriction, DirectoryString res) { checkValues(restriction, res); str = (ASN1String) aIn; restriction = Restriction.getInstance(str); checkValues(); }", "n_tokens": 58, "n_pass": [138, 10, 9]}
{"time": "2021-02-24 05:59:31.704474", "score": "0.1646", "loss": "13.674", "code": "private void checkConstruction(Restriction restriction, DirectoryString res) { checkValues(restriction, res); str = (ASN1String); restriction = Restriction.getInstance(str); checkValues(); }", "n_tokens": 56, "n_pass": [144, 12, 10]}
{"time": "2021-02-24 05:59:34.699194", "score": "0.1923", "loss": "13.5917", "code": "private void checkConstruction(Restriction restriction, DirectoryString res) { checkValues(restriction, res); str = (ASN1String); restriction = getInstance(str); checkValues(); }", "n_tokens": 54, "n_pass": [148, 13, 11]}
{"time": "2021-02-24 05:59:37.319553", "score": "0.1923", "loss": "13.5917", "code": " void checkConstruction(Restriction restriction, DirectoryString res) { checkValues(restriction, res); str = (ASN1String); restriction = getInstance(str); checkValues(); }", "n_tokens": 53, "n_pass": [155, 14, 12]}
{"time": "2021-02-24 05:59:39.925245", "score": "0.1923", "loss": "13.5917", "code": "void checkConstruction(Restriction restriction, DirectoryString res) { checkValues(restriction, res); str = (ASN1String); restriction = getInstance(str); checkValues(); }", "n_tokens": 52, "n_pass": [156, 15, 13]}
{"time": "2021-02-24 05:59:45.972744", "score": "0.1501", "loss": "13.1606", "code": "void checkConstruction(Restriction restriction, DirectoryString res) { checkValues(restriction, res); str (ASN1String); restriction = getInstance(str); checkValues(); }", "n_tokens": 50, "n_pass": [171, 17, 14]}
{"time": "2021-02-24 05:59:54.644993", "score": "0.1775", "loss": "13.6306", "code": "void checkConstruction(Restriction restriction, DirectoryString res) { checkValues(restriction, res); (ASN1String); restriction = getInstance(str); checkValues(); }", "n_tokens": 48, "n_pass": [197, 20, 15]}
{"time": "2021-02-24 06:00:09.333029", "score": "0.1775", "loss": "13.6306", "code": "void checkConstruction(Restriction restriction, DirectoryString res) { checkValues(restriction, res);(ASN1String); restriction = getInstance(str); checkValues(); }", "n_tokens": 47, "n_pass": [269, 23, 16]}
{"time": "2021-02-24 06:00:11.963222", "score": "0.1775", "loss": "13.6306", "code": "void checkConstruction(Restriction restriction, DirectoryString res) { checkValues(restriction, res);(ASNString); restriction = getInstance(str); checkValues(); }", "n_tokens": 46, "n_pass": [271, 24, 17]}
{"time": "2021-02-24 06:00:17.588069", "score": "0.1775", "loss": "13.6306", "code": "void checkConstruction(Restriction restriction, DirectoryString res) { checkValues(restriction, res);(ASNString);restriction = getInstance(str); checkValues(); }", "n_tokens": 45, "n_pass": [275, 26, 18]}
{"time": "2021-02-24 06:00:20.219703", "score": "0.1775", "loss": "13.6306", "code": "void checkConstruction(Restriction restriction, DirectoryString res) { checkValues(restriction, res);(ASNString);restriction= getInstance(str); checkValues(); }", "n_tokens": 44, "n_pass": [277, 27, 19]}
{"time": "2021-02-24 06:00:22.827573", "score": "0.1775", "loss": "13.6306", "code": "void checkConstruction(Restriction restriction, DirectoryString res) { checkValues(restriction, res);(ASNString);restriction=getInstance(str); checkValues(); }", "n_tokens": 43, "n_pass": [279, 28, 20]}
{"time": "2021-02-24 06:00:30.682073", "score": "0.1775", "loss": "13.6306", "code": "void checkConstruction(Restriction restriction, DirectoryString res) { checkValues(restriction, res);(ASNString);restriction=getInstance(str);checkValues(); }", "n_tokens": 42, "n_pass": [285, 31, 21]}
{"time": "2021-02-24 06:00:33.297759", "score": "0.1775", "loss": "13.6306", "code": "void checkConstruction(Restriction restriction, DirectoryString res) { checkValues(restriction, res);(ASNString);restriction=getInstance(str);checkValues();}", "n_tokens": 41, "n_pass": [290, 32, 22]}
{"time": "2021-02-24 06:00:36.669241", "score": "0.1775", "loss": "13.6306", "code": "void checkConstruction(Restriction restriction,DirectoryString res) { checkValues(restriction, res);(ASNString);restriction=getInstance(str);checkValues();}", "n_tokens": 40, "n_pass": [300, 33, 23]}
{"time": "2021-02-24 06:00:39.277787", "score": "0.1775", "loss": "13.6306", "code": "void checkConstruction(Restriction restriction,DirectoryString res){ checkValues(restriction, res);(ASNString);restriction=getInstance(str);checkValues();}", "n_tokens": 39, "n_pass": [305, 34, 24]}
{"time": "2021-02-24 06:00:41.887197", "score": "0.1775", "loss": "13.6306", "code": "void checkConstruction(Restriction restriction,DirectoryString res){checkValues(restriction, res);(ASNString);restriction=getInstance(str);checkValues();}", "n_tokens": 38, "n_pass": [307, 35, 25]}
{"time": "2021-02-24 06:00:44.495172", "score": "0.1775", "loss": "13.6306", "code": "void checkConstruction(Restriction restriction,DirectoryString res){checkValues(restriction,res);(ASNString);restriction=getInstance(str);checkValues();}", "n_tokens": 37, "n_pass": [312, 36, 26]}
{"time": "2021-02-24 06:00:52.773091", "score": "0.2681", "loss": "13.6753", "code": "void checkConstruction(Restriction restriction,DirectoryString res){checkValues(restriction,res);(ASNString);restrictiongetInstance(str);checkValues();}", "n_tokens": 36, "n_pass": [322, 39, 27]}

Minimal simplified code:
void checkConstruction(Restriction restriction,DirectoryString res){checkValues(restriction,res);(ASNString);restrictiongetInstance(str);checkValues();}

