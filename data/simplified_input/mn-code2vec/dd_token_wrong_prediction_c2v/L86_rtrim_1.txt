
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/codefollower__Tomcat-Research/java/org/apache/jasper/compiler/Node_rtrim.java
method_name = rtrim
method_body = public void rtrim() { int index = text.length(); while ((index > 0) && (text.charAt(index - 1) <= ' ')) { index--; } text = text.substring(0, index); }
predict, score, loss = resetText, 0.2605542838573456, 4.339892387390137

Trace of simplified code(s):
{"time": "2021-02-23 17:45:21.222942", "score": "0.2606", "loss": "4.3399", "code": "public void rtrim() { int index = text.length(); while ((index > 0) && (text.charAt(index - 1) <= ' ')) { index--; } text = text.substring(0, index); }", "n_tokens": 83, "n_pass": [1, 1, 1]}
{"time": "2021-02-23 17:45:29.227567", "score": "0.2481", "loss": "4.2979", "code": "public void rtrim() { int index = text.length(); while ((index > 0) && (text.charAt(index - 1) <= ' ')) { } text = text.substring(0, index); }", "n_tokens": 78, "n_pass": [56, 4, 2]}
{"time": "2021-02-23 17:45:37.213847", "score": "0.2481", "loss": "4.2979", "code": "void rtrim() { int index = text.length(); while ((index > 0) && (text.charAt(index - 1) <= ' ')) { } text = text.substring(0, index); }", "n_tokens": 76, "n_pass": [108, 7, 3]}
{"time": "2021-02-23 17:45:42.949059", "score": "0.1923", "loss": "4.2157", "code": "void rtrim() { int index = length(); while ((index > 0) && (text.charAt(index - 1) <= ' ')) { } text = text.substring(0, index); }", "n_tokens": 74, "n_pass": [116, 9, 4]}
{"time": "2021-02-23 17:45:48.270198", "score": "0.1967", "loss": "4.2264", "code": "void rtrim() { int index = length(); while ((index > 0) && (text.charAt( 1) <= ' ')) { } text = text.substring(0, index); }", "n_tokens": 71, "n_pass": [126, 11, 5]}
{"time": "2021-02-23 17:45:53.994957", "score": "0.2146", "loss": "4.6988", "code": "void rtrim() { index = length(); while ((index > 0) && (text.charAt( 1) <= ' ')) { } text = text.substring(0, index); }", "n_tokens": 69, "n_pass": [142, 13, 6]}
{"time": "2021-02-23 17:45:56.623528", "score": "0.2245", "loss": "4.6566", "code": "void rtrim() { index = length(); while (( 0) && (text.charAt( 1) <= ' ')) { } text = text.substring(0, index); }", "n_tokens": 66, "n_pass": [149, 14, 7]}
{"time": "2021-02-23 17:46:07.004611", "score": "0.2245", "loss": "4.6566", "code": "void rtrim() { index = length(); while ((0) && (text.charAt( 1) <= ' ')) { } text = text.substring(0, index); }", "n_tokens": 65, "n_pass": [226, 16, 8]}
{"time": "2021-02-23 17:46:09.668512", "score": "0.2245", "loss": "4.6566", "code": "void rtrim() { index = length(); while ((0)&& (text.charAt( 1) <= ' ')) { } text = text.substring(0, index); }", "n_tokens": 64, "n_pass": [229, 17, 9]}
{"time": "2021-02-23 17:46:12.325689", "score": "0.2245", "loss": "4.6566", "code": "void rtrim() { index = length(); while ((0)& (text.charAt( 1) <= ' ')) { } text = text.substring(0, index); }", "n_tokens": 63, "n_pass": [230, 18, 10]}
{"time": "2021-02-23 17:46:14.971150", "score": "0.2245", "loss": "4.6566", "code": "void rtrim() { index = length(); while ((0)&(text.charAt( 1) <= ' ')) { } text = text.substring(0, index); }", "n_tokens": 62, "n_pass": [232, 19, 11]}
{"time": "2021-02-23 17:46:20.253953", "score": "0.2245", "loss": "4.6566", "code": "void rtrim() { index = length(); while ((0)&(text.charAt(1) <= ' ')) { } text = text.substring(0, index); }", "n_tokens": 61, "n_pass": [238, 21, 12]}
{"time": "2021-02-23 17:46:32.102434", "score": "0.2245", "loss": "4.6566", "code": "void rtrim(){ index = length(); while ((0)&(text.charAt(1) <= ' ')) { } text = text.substring(0, index); }", "n_tokens": 60, "n_pass": [260, 25, 13]}
{"time": "2021-02-23 17:46:34.766571", "score": "0.2245", "loss": "4.6566", "code": "void rtrim(){index = length(); while ((0)&(text.charAt(1) <= ' ')) { } text = text.substring(0, index); }", "n_tokens": 59, "n_pass": [262, 26, 14]}
{"time": "2021-02-23 17:46:37.411484", "score": "0.2245", "loss": "4.6566", "code": "void rtrim(){index= length(); while ((0)&(text.charAt(1) <= ' ')) { } text = text.substring(0, index); }", "n_tokens": 58, "n_pass": [264, 27, 15]}
{"time": "2021-02-23 17:46:40.062683", "score": "0.2245", "loss": "4.6566", "code": "void rtrim(){index=length(); while ((0)&(text.charAt(1) <= ' ')) { } text = text.substring(0, index); }", "n_tokens": 57, "n_pass": [266, 28, 16]}
{"time": "2021-02-23 17:46:42.706578", "score": "0.2245", "loss": "4.6566", "code": "void rtrim(){index=length();while ((0)&(text.charAt(1) <= ' ')) { } text = text.substring(0, index); }", "n_tokens": 56, "n_pass": [271, 29, 17]}
{"time": "2021-02-23 17:46:45.343388", "score": "0.2245", "loss": "4.6566", "code": "void rtrim(){index=length();while((0)&(text.charAt(1) <= ' ')) { } text = text.substring(0, index); }", "n_tokens": 55, "n_pass": [273, 30, 18]}
{"time": "2021-02-23 17:47:09.435156", "score": "0.2245", "loss": "4.6566", "code": "void rtrim(){index=length();while((0)&(text.charAt(1)<= ' ')) { } text = text.substring(0, index); }", "n_tokens": 54, "n_pass": [347, 37, 19]}
{"time": "2021-02-23 17:47:14.755891", "score": "0.2245", "loss": "4.6566", "code": "void rtrim(){index=length();while((0)&(text.charAt(1)<=' ')) { } text = text.substring(0, index); }", "n_tokens": 53, "n_pass": [349, 39, 20]}
{"time": "2021-02-23 17:47:17.794553", "score": "0.2245", "loss": "4.6566", "code": "void rtrim(){index=length();while((0)&(text.charAt(1)<=' ')){ } text = text.substring(0, index); }", "n_tokens": 52, "n_pass": [355, 40, 21]}
{"time": "2021-02-23 17:47:20.434327", "score": "0.2245", "loss": "4.6566", "code": "void rtrim(){index=length();while((0)&(text.charAt(1)<=' ')){} text = text.substring(0, index); }", "n_tokens": 51, "n_pass": [357, 41, 22]}
{"time": "2021-02-23 17:47:23.090566", "score": "0.2245", "loss": "4.6566", "code": "void rtrim(){index=length();while((0)&(text.charAt(1)<=' ')){}text = text.substring(0, index); }", "n_tokens": 50, "n_pass": [359, 42, 23]}
{"time": "2021-02-23 17:47:25.740458", "score": "0.2245", "loss": "4.6566", "code": "void rtrim(){index=length();while((0)&(text.charAt(1)<=' ')){}text= text.substring(0, index); }", "n_tokens": 49, "n_pass": [361, 43, 24]}
{"time": "2021-02-23 17:47:28.398915", "score": "0.2245", "loss": "4.6566", "code": "void rtrim(){index=length();while((0)&(text.charAt(1)<=' ')){}text=text.substring(0, index); }", "n_tokens": 48, "n_pass": [363, 44, 25]}
{"time": "2021-02-23 17:47:33.725054", "score": "0.2245", "loss": "4.6566", "code": "void rtrim(){index=length();while((0)&(text.charAt(1)<=' ')){}text=text.substring(0,index); }", "n_tokens": 47, "n_pass": [370, 46, 26]}
{"time": "2021-02-23 17:47:36.369786", "score": "0.2245", "loss": "4.6566", "code": "void rtrim(){index=length();while((0)&(text.charAt(1)<=' ')){}text=text.substring(0,index);}", "n_tokens": 46, "n_pass": [374, 47, 27]}

Minimal simplified code:
void rtrim(){index=length();while((0)&(text.charAt(1)<=' ')){}text=text.substring(0,index);}

