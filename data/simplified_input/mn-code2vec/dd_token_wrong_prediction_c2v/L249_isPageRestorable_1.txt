
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/sakaiproject__sakai/rwiki/rwiki-tool/tool/src/java/uk/ac/cam/caret/sakai/rwiki/tool/RWikiServlet_isPageRestorable.java
method_name = isPageRestorable
method_body = private boolean isPageRestorable(HttpServletRequest request) { if (RequestHelper.TITLE_PANEL.equals(request.getParameter(RequestHelper.PANEL))) return false; if (WikiPageAction.PUBLICVIEW_ACTION.getName().equals(request.getParameter(RequestHelper.ACTION))) return false; if ("GET".equalsIgnoreCase(request.getMethod())) return true; return false; }
predict, score, loss = getUrl, 0.1828727424144745, 15.399227142333984

Trace of simplified code(s):
{"time": "2021-02-24 02:49:19.899460", "score": "0.1913", "loss": "15.6849", "code": "private boolean isPageRestorable(HttpServletRequest request) { if (RequestHelper.TITLE_PANEL.equals(request.getParameter(RequestHelper.PANEL))) return false; if (WikiPageAction.PUBLICVIEW_ACTION.getName().equals(request.getParameter(RequestHelper.ACTION))) return false; if (\"GET\".equalsIgnoreCase(request.getMethod())) return true; return false; }", "n_tokens": 99, "n_pass": [1, 1, 1]}
{"time": "2021-02-24 02:49:22.576149", "score": "0.2261", "loss": "15.3538", "code": "private boolean isPageRestorable(HttpServletRequest request) { if (RequestHelper.TITLE_PANEL.equals(request.getParameter(RequestHelper.PANEL))) return false; if (WikiPageAction.PUBLICVIEW_ACTION(request.getParameter(RequestHelper.ACTION))) return false; if (\"GET\".equalsIgnoreCase(request.getMethod())) return true; return false; }", "n_tokens": 93, "n_pass": [52, 2, 2]}
{"time": "2021-02-24 02:49:25.258050", "score": "0.2191", "loss": "16.1121", "code": "private boolean isPageRestorable(HttpServletRequest request) { if (RequestHelper.TITLE_PANEL.equals(request.getParameter(RequestHelper.PANEL))) return false; if (WikiPageAction.PUBLICVIEW_ACTION(request.getParameter(RequestHelper.ACTION))) ; if (\"GET\".equalsIgnoreCase(request.getMethod())) return true; return false; }", "n_tokens": 90, "n_pass": [101, 3, 3]}
{"time": "2021-02-24 02:49:27.952322", "score": "0.2239", "loss": "16.3037", "code": "private boolean isPageRestorable(HttpServletRequest request) { if (RequestHelper.TITLE_PANEL.equals(request.getParameter(RequestHelper.PANEL))) return false; if (WikiPageAction.PUBLICVIEW_ACTION(request.getParameter(RequestHelper.ACTION))) ; if (\"GET\".equalsIgnoreCase(request.getMethod())); return false; }", "n_tokens": 86, "n_pass": [107, 4, 4]}
{"time": "2021-02-24 02:49:30.601453", "score": "0.2383", "loss": "16.3915", "code": "private boolean isPageRestorable(HttpServletRequest request) { if (RequestHelper.TITLE_PANEL.equals(request.getParameter(RequestHelper.PANEL))) return false; if (WikiPageAction.PUBLICVIEW_ACTION(request.getParameter(RequestHelper.ACTION))) ; if (\"GET\".equalsIgnoreCase(request.getMethod()))false; }", "n_tokens": 82, "n_pass": [108, 5, 5]}
{"time": "2021-02-24 02:49:44.479506", "score": "0.2444", "loss": "16.3937", "code": " boolean isPageRestorable(HttpServletRequest request) { if (RequestHelper.TITLE_PANEL.equals(request.getParameter(RequestHelper.PANEL))) return false; if (WikiPageAction.PUBLICVIEW_ACTION(request.getParameter(RequestHelper.ACTION))) ; if (\"GET\".equalsIgnoreCase(request.getMethod()))false; }", "n_tokens": 81, "n_pass": [192, 9, 6]}
{"time": "2021-02-24 02:49:47.096436", "score": "0.2424", "loss": "16.393", "code": "boolean isPageRestorable(HttpServletRequest request) { if (RequestHelper.TITLE_PANEL.equals(request.getParameter(RequestHelper.PANEL))) return false; if (WikiPageAction.PUBLICVIEW_ACTION(request.getParameter(RequestHelper.ACTION))) ; if (\"GET\".equalsIgnoreCase(request.getMethod()))false; }", "n_tokens": 80, "n_pass": [193, 10, 7]}
{"time": "2021-02-24 02:49:50.255530", "score": "0.2536", "loss": "16.4653", "code": "boolean isPageRestorable(HttpServletRequest request){ if (RequestHelper.TITLE_PANEL.equals(request.getParameter(RequestHelper.PANEL))) return false; if (WikiPageAction.PUBLICVIEW_ACTION(request.getParameter(RequestHelper.ACTION))) ; if (\"GET\".equalsIgnoreCase(request.getMethod()))false; }", "n_tokens": 79, "n_pass": [201, 11, 8]}
{"time": "2021-02-24 02:49:52.887665", "score": "0.25", "loss": "16.4465", "code": "boolean isPageRestorable(HttpServletRequest request){if (RequestHelper.TITLE_PANEL.equals(request.getParameter(RequestHelper.PANEL))) return false; if (WikiPageAction.PUBLICVIEW_ACTION(request.getParameter(RequestHelper.ACTION))) ; if (\"GET\".equalsIgnoreCase(request.getMethod()))false; }", "n_tokens": 78, "n_pass": [203, 12, 9]}
{"time": "2021-02-24 02:49:55.481871", "score": "0.1967", "loss": "16.1678", "code": "boolean isPageRestorable(HttpServletRequest request){if(RequestHelper.TITLE_PANEL.equals(request.getParameter(RequestHelper.PANEL))) return false; if (WikiPageAction.PUBLICVIEW_ACTION(request.getParameter(RequestHelper.ACTION))) ; if (\"GET\".equalsIgnoreCase(request.getMethod()))false; }", "n_tokens": 77, "n_pass": [205, 13, 10]}
{"time": "2021-02-24 02:50:00.780853", "score": "0.3164", "loss": "17.8635", "code": "boolean isPageRestorable(HttpServletRequest request){if(RequestHelper._PANEL.equals(request.getParameter(RequestHelper.PANEL))) return false; if (WikiPageAction.PUBLICVIEW_ACTION(request.getParameter(RequestHelper.ACTION))) ; if (\"GET\".equalsIgnoreCase(request.getMethod()))false; }", "n_tokens": 76, "n_pass": [209, 15, 11]}
{"time": "2021-02-24 02:50:03.451401", "score": "0.3216", "loss": "18.0247", "code": "boolean isPageRestorable(HttpServletRequest request){if(RequestHelper.PANEL.equals(request.getParameter(RequestHelper.PANEL))) return false; if (WikiPageAction.PUBLICVIEW_ACTION(request.getParameter(RequestHelper.ACTION))) ; if (\"GET\".equalsIgnoreCase(request.getMethod()))false; }", "n_tokens": 75, "n_pass": [210, 16, 12]}
{"time": "2021-02-24 02:50:06.091115", "score": "0.317", "loss": "18.0711", "code": "boolean isPageRestorable(HttpServletRequest request){if(RequestHelper.PANELequals(request.getParameter(RequestHelper.PANEL))) return false; if (WikiPageAction.PUBLICVIEW_ACTION(request.getParameter(RequestHelper.ACTION))) ; if (\"GET\".equalsIgnoreCase(request.getMethod()))false; }", "n_tokens": 74, "n_pass": [212, 17, 13]}
{"time": "2021-02-24 02:50:08.780169", "score": "0.3208", "loss": "17.974", "code": "boolean isPageRestorable(HttpServletRequest request){if(RequestHelper.PANEL(request.getParameter(RequestHelper.PANEL))) return false; if (WikiPageAction.PUBLICVIEW_ACTION(request.getParameter(RequestHelper.ACTION))) ; if (\"GET\".equalsIgnoreCase(request.getMethod()))false; }", "n_tokens": 73, "n_pass": [213, 18, 14]}
{"time": "2021-02-24 02:50:11.409910", "score": "0.3169", "loss": "17.7722", "code": "boolean isPageRestorable(HttpServletRequest request){if(RequestHelper.PANEL(requestgetParameter(RequestHelper.PANEL))) return false; if (WikiPageAction.PUBLICVIEW_ACTION(request.getParameter(RequestHelper.ACTION))) ; if (\"GET\".equalsIgnoreCase(request.getMethod()))false; }", "n_tokens": 72, "n_pass": [216, 19, 15]}
{"time": "2021-02-24 02:50:14.086284", "score": "0.2928", "loss": "17.8119", "code": "boolean isPageRestorable(HttpServletRequest request){if(RequestHelper.PANEL(requestgetParameter(PANEL))) return false; if (WikiPageAction.PUBLICVIEW_ACTION(request.getParameter(RequestHelper.ACTION))) ; if (\"GET\".equalsIgnoreCase(request.getMethod()))false; }", "n_tokens": 70, "n_pass": [218, 20, 16]}
{"time": "2021-02-24 02:50:16.737807", "score": "0.3668", "loss": "18.3081", "code": "boolean isPageRestorable(HttpServletRequest request){if(RequestHelper.PANEL(requestgetParameter(PANEL))) false; if (WikiPageAction.PUBLICVIEW_ACTION(request.getParameter(RequestHelper.ACTION))) ; if (\"GET\".equalsIgnoreCase(request.getMethod()))false; }", "n_tokens": 68, "n_pass": [221, 21, 17]}
{"time": "2021-02-24 02:50:19.360558", "score": "0.3449", "loss": "18.3306", "code": "boolean isPageRestorable(HttpServletRequest request){if(RequestHelper.PANEL(requestgetParameter(PANEL))); if (WikiPageAction.PUBLICVIEW_ACTION(request.getParameter(RequestHelper.ACTION))) ; if (\"GET\".equalsIgnoreCase(request.getMethod()))false; }", "n_tokens": 66, "n_pass": [222, 22, 18]}
{"time": "2021-02-24 02:50:30.036077", "score": "0.3449", "loss": "18.3306", "code": "boolean isPageRestorable(HttpServletRequest request){if(RequestHelper.PANEL(requestgetParameter(PANEL))); if (WikiPageAction.PUBLICVIEW(request.getParameter(RequestHelper.ACTION))) ; if (\"GET\".equalsIgnoreCase(request.getMethod()))false; }", "n_tokens": 64, "n_pass": [227, 26, 19]}
{"time": "2021-02-24 02:50:37.951518", "score": "0.3161", "loss": "18.3344", "code": "boolean isPageRestorable(HttpServletRequest request){if(RequestHelper.PANEL(requestgetParameter(PANEL))); if (WikiPageAction.PUBLICVIEW(request.getParameter(RequestHelper.ACTION))) if (\"GET\".equalsIgnoreCase(request.getMethod()))false; }", "n_tokens": 62, "n_pass": [234, 29, 20]}
{"time": "2021-02-24 02:50:40.669179", "score": "0.3525", "loss": "18.5781", "code": "boolean isPageRestorable(HttpServletRequest request){if(RequestHelper.PANEL(requestgetParameter(PANEL))); if (WikiPageAction.PUBLICVIEW(request.getParameter(RequestHelper.ACTION))) if (\"GET\".equalsIgnoreCase(request()))false; }", "n_tokens": 60, "n_pass": [240, 30, 21]}
{"time": "2021-02-24 02:50:43.372606", "score": "0.3423", "loss": "18.5535", "code": "boolean isPageRestorable(HttpServletRequest request){if(RequestHelper.PANEL(requestgetParameter(PANEL))); if (WikiPageAction.PUBLICVIEW(request.getParameter(RequestHelper.ACTION))) if (\"GET\".equalsIgnoreCase(request))false; }", "n_tokens": 58, "n_pass": [241, 31, 22]}
{"time": "2021-02-24 02:50:52.079531", "score": "0.5585", "loss": "18.0515", "code": "boolean isPageRestorable(HttpServletRequest request){if(RequestHelper.PANEL(getParameter(PANEL))); if (WikiPageAction.PUBLICVIEW(request.getParameter(RequestHelper.ACTION))) if (\"GET\".equalsIgnoreCase(request))false; }", "n_tokens": 57, "n_pass": [260, 34, 23]}
{"time": "2021-02-24 02:51:06.092617", "score": "0.4206", "loss": "17.5601", "code": "boolean isPageRestorable(HttpServletRequest request){(RequestHelper.PANEL(getParameter(PANEL))); if (WikiPageAction.PUBLICVIEW(request.getParameter(RequestHelper.ACTION))) if (\"GET\".equalsIgnoreCase(request))false; }", "n_tokens": 56, "n_pass": [291, 39, 24]}
{"time": "2021-02-24 02:51:25.764681", "score": "0.3742", "loss": "17.7766", "code": "boolean isPageRestorable(HttpServletRequest request){(RequestHelper.PANEL(getParameter())); if (WikiPageAction.PUBLICVIEW(request.getParameter(RequestHelper.ACTION))) if (\"GET\".equalsIgnoreCase(request))false; }", "n_tokens": 55, "n_pass": [371, 45, 25]}
{"time": "2021-02-24 02:51:28.413344", "score": "0.3742", "loss": "17.7766", "code": "boolean isPageRestorable(HttpServletRequest request){(RequestHelper.PANEL(getParameter()));if (WikiPageAction.PUBLICVIEW(request.getParameter(RequestHelper.ACTION))) if (\"GET\".equalsIgnoreCase(request))false; }", "n_tokens": 54, "n_pass": [375, 46, 26]}
{"time": "2021-02-24 02:51:31.087665", "score": "0.3742", "loss": "17.7766", "code": "boolean isPageRestorable(HttpServletRequest request){(RequestHelper.PANEL(getParameter()));if(WikiPageAction.PUBLICVIEW(request.getParameter(RequestHelper.ACTION))) if (\"GET\".equalsIgnoreCase(request))false; }", "n_tokens": 53, "n_pass": [377, 47, 27]}
{"time": "2021-02-24 02:51:41.773765", "score": "0.3742", "loss": "17.7766", "code": "boolean isPageRestorable(HttpServletRequest request){(RequestHelper.PANEL(getParameter()));if(WikiPageAction.PUBLICVIEW(request.getParameter(RequestHelper.ACTION)))if (\"GET\".equalsIgnoreCase(request))false; }", "n_tokens": 52, "n_pass": [393, 51, 28]}
{"time": "2021-02-24 02:51:44.388766", "score": "0.3742", "loss": "17.7766", "code": "boolean isPageRestorable(HttpServletRequest request){(RequestHelper.PANEL(getParameter()));if(WikiPageAction.PUBLICVIEW(request.getParameter(RequestHelper.ACTION)))if(\"GET\".equalsIgnoreCase(request))false; }", "n_tokens": 51, "n_pass": [395, 52, 29]}
{"time": "2021-02-24 02:51:47.008424", "score": "0.3687", "loss": "17.7767", "code": "boolean isPageRestorable(HttpServletRequest request){(RequestHelper.PANEL(getParameter()));if(WikiPageAction.PUBLICVIEW(request.getParameter(RequestHelper.ACTION)))if(\"\".equalsIgnoreCase(request))false; }", "n_tokens": 50, "n_pass": [398, 53, 30]}
{"time": "2021-02-24 02:51:49.621637", "score": "0.3656", "loss": "17.7698", "code": "boolean isPageRestorable(HttpServletRequest request){(RequestHelper.PANEL(getParameter()));if(WikiPageAction.PUBLICVIEW(request.getParameter(RequestHelper.ACTION)))if(\"\".equalsIgnoreCase())false; }", "n_tokens": 49, "n_pass": [403, 54, 31]}
{"time": "2021-02-24 02:51:52.347060", "score": "0.358", "loss": "17.8435", "code": "boolean isPageRestorable(HttpServletRequest request){(RequestHelper.PANEL(getParameter()));if(WikiPageAction.PUBLICVIEW(request.getParameter(RequestHelper.ACTION)))if(\"\".equalsIgnoreCase()); }", "n_tokens": 48, "n_pass": [406, 55, 32]}
{"time": "2021-02-24 02:51:54.964402", "score": "0.358", "loss": "17.8435", "code": "boolean isPageRestorable(HttpServletRequest request){(RequestHelper.PANEL(getParameter()));if(WikiPageAction.PUBLICVIEW(request.getParameter(RequestHelper.ACTION)))if(\"\".equalsIgnoreCase());}", "n_tokens": 47, "n_pass": [408, 56, 33]}
{"time": "2021-02-24 02:52:09.115016", "score": "0.3645", "loss": "17.9731", "code": "boolean isPageRestorable(HttpServletRequest request){(RequestHelper.PANEL(getParameter()));if(WikiPageAction.PUBLICVIEW(request.getParameter(RequestHelper.ACTION)))(\"\".equalsIgnoreCase());}", "n_tokens": 46, "n_pass": [446, 61, 34]}

Minimal simplified code:
boolean isPageRestorable(HttpServletRequest request){(RequestHelper.PANEL(getParameter()));if(WikiPageAction.PUBLICVIEW(request.getParameter(RequestHelper.ACTION)))("".equalsIgnoreCase());}

