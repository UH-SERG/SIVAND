
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/XiaoMi__linden/linden-core/src/test/java/com/xiaomi/linden/core/TestLindenAggregation_init.java
method_name = init
method_body = @Override public void init() throws Exception { LindenSchema schema = new LindenSchema().setId("id"); schema.addToFields(new LindenFieldSchema().setName("intValue").setType(LindenType.INTEGER).setDocValues(true)); lindenConfig.setSchema(schema); }
predict, score, loss = setSchema, 0.326613187789917, 5.0409393310546875

Trace of simplified code(s):
{"time": "2021-02-24 12:57:44.079661", "score": "0.3266", "loss": "5.0409", "code": "@Override public void init() throws Exception { LindenSchema schema = new LindenSchema().setId(\"id\"); schema.addToFields(new LindenFieldSchema().setName(\"intValue\").setType(LindenType.INTEGER).setDocValues(true)); lindenConfig.setSchema(schema); }", "n_tokens": 77, "n_pass": [1, 1, 1]}
{"time": "2021-02-24 12:57:46.878371", "score": "0.3181", "loss": "6.242", "code": "@Override public void init() throws Exception { LindenSchema .addToFields(new LindenFieldSchema().setName(\"intValue\").setType(LindenType.INTEGER).setDocValues(true)); lindenConfig.setSchema(schema); }", "n_tokens": 58, "n_pass": [9, 2, 2]}
{"time": "2021-02-24 12:57:52.508435", "score": "0.3511", "loss": "7.357", "code": "@Override public void init() throws Exception { LindenSchema .addToFields(new LindenFieldSchema().setName(\"intValue\".INTEGER).setDocValues(true)); lindenConfig.setSchema(schema); }", "n_tokens": 53, "n_pass": [39, 4, 3]}
{"time": "2021-02-24 12:57:55.339542", "score": "0.281", "loss": "6.7957", "code": " void init() throws Exception { LindenSchema .addToFields(new LindenFieldSchema().setName(\"intValue\".INTEGER).setDocValues(true)); lindenConfig.setSchema(schema); }", "n_tokens": 49, "n_pass": [44, 5, 4]}
{"time": "2021-02-24 12:58:01.372486", "score": "0.6605", "loss": "9.1643", "code": " void init() throws Exception { LindenSchemaaddToFields(new LindenFieldSchema().setName(\"intValue\".INTEGER).setDocValues(true)); lindenConfig.setSchema(schema); }", "n_tokens": 47, "n_pass": [82, 7, 5]}
{"time": "2021-02-24 12:58:04.182936", "score": "0.6118", "loss": "8.8978", "code": " void init() throws Exception { LindenSchemaaddToFields(LindenFieldSchema().setName(\"intValue\".INTEGER).setDocValues(true)); lindenConfig.setSchema(schema); }", "n_tokens": 45, "n_pass": [84, 8, 6]}
{"time": "2021-02-24 12:58:06.984811", "score": "0.5698", "loss": "5.5635", "code": " void init() throws Exception { LindenSchemaaddToFields(LindenFieldSchema().setName(\"intValue\".INTEGER).setDocValues); lindenConfig.setSchema(schema); }", "n_tokens": 42, "n_pass": [90, 9, 7]}
{"time": "2021-02-24 12:58:15.751701", "score": "0.5698", "loss": "5.5635", "code": " void init() throws Exception {addToFields(LindenFieldSchema().setName(\"intValue\".INTEGER).setDocValues); lindenConfig.setSchema(schema); }", "n_tokens": 40, "n_pass": [101, 12, 8]}
{"time": "2021-02-24 12:58:26.606250", "score": "0.859", "loss": "9.4995", "code": " void init() throws Exception {(LindenFieldSchema().setName(\"intValue\".INTEGER).setDocValues); lindenConfig.setSchema(schema); }", "n_tokens": 39, "n_pass": [150, 15, 9]}
{"time": "2021-02-24 12:58:29.369916", "score": "0.8605", "loss": "9.5398", "code": " void init() throws Exception {(LindenFieldSchema().setName(\"\".INTEGER).setDocValues); lindenConfig.setSchema(schema); }", "n_tokens": 38, "n_pass": [158, 16, 10]}
{"time": "2021-02-24 12:58:32.186630", "score": "0.9102", "loss": "11.4096", "code": " void init() throws Exception {(LindenFieldSchema().setName(\"\".INTEGER)); lindenConfig.setSchema(schema); }", "n_tokens": 36, "n_pass": [162, 17, 11]}
{"time": "2021-02-24 12:58:37.748904", "score": "0.9102", "loss": "11.4096", "code": "void init() throws Exception {(LindenFieldSchema().setName(\"\".INTEGER)); lindenConfig.setSchema(schema); }", "n_tokens": 35, "n_pass": [169, 19, 12]}
{"time": "2021-02-24 12:58:41.398763", "score": "0.9102", "loss": "11.4096", "code": "void init()throws Exception {(LindenFieldSchema().setName(\"\".INTEGER)); lindenConfig.setSchema(schema); }", "n_tokens": 34, "n_pass": [175, 20, 13]}
{"time": "2021-02-24 12:58:44.152622", "score": "0.9102", "loss": "11.4096", "code": "void init()throws Exception{(LindenFieldSchema().setName(\"\".INTEGER)); lindenConfig.setSchema(schema); }", "n_tokens": 33, "n_pass": [179, 21, 14]}
{"time": "2021-02-24 12:58:52.307838", "score": "0.9102", "loss": "11.4096", "code": "void init()throws Exception{(LindenFieldSchema().setName(\"\".INTEGER));lindenConfig.setSchema(schema); }", "n_tokens": 32, "n_pass": [224, 23, 15]}
{"time": "2021-02-24 12:58:57.842941", "score": "0.8332", "loss": "8.5433", "code": "void init()throws Exception{(LindenFieldSchema().setName(\"\".INTEGER));lindenConfig.setSchema(); }", "n_tokens": 31, "n_pass": [228, 25, 16]}
{"time": "2021-02-24 12:59:00.604348", "score": "0.8332", "loss": "8.5433", "code": "void init()throws Exception{(LindenFieldSchema().setName(\"\".INTEGER));lindenConfig.setSchema();}", "n_tokens": 30, "n_pass": [231, 26, 17]}

Minimal simplified code:
void init()throws Exception{(LindenFieldSchema().setName("".INTEGER));lindenConfig.setSchema();}

