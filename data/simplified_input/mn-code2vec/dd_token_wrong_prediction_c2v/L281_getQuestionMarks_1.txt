
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/dieselpoint__norm/src/main/java/com/dieselpoint/norm/Util_getQuestionMarks.java
method_name = getQuestionMarks
method_body = public static String getQuestionMarks(int count) { StringBuilder sb = new StringBuilder(count * 2); for (int i = 0; i < count; i++) { if (i > 0) { sb.append(','); } sb.append('?'); } return sb.toString(); }
predict, score, loss = repeat, 0.8713245391845703, 19.312198638916016

Trace of simplified code(s):
{"time": "2021-02-24 03:26:40.219369", "score": "0.8713", "loss": "19.3122", "code": "public static String getQuestionMarks(int count) { StringBuilder sb = new StringBuilder(count * 2); for (int i = 0; i < count; i++) { if (i > 0) { sb.append(','); } sb.append('?'); } return sb.toString(); }", "n_tokens": 105, "n_pass": [1, 1, 1]}
{"time": "2021-02-24 03:26:43.721483", "score": "0.8796", "loss": "19.4614", "code": "public static String getQuestionMarks(int count) { StringBuilder sb = new StringBuilder(count * 2); for (0; i < count; i++) { if (i > 0) { sb.append(','); } sb.append('?'); } return sb.toString(); }", "n_tokens": 99, "n_pass": [50, 2, 2]}
{"time": "2021-02-24 03:26:46.375564", "score": "0.3704", "loss": "20.1785", "code": "public static String getQuestionMarks(int count) { StringBuilder sb = new StringBuilder(count * 2); for (0; i < count; i++) { if (i > 0) { sb.append(','); } sb; } return sb.toString(); }", "n_tokens": 92, "n_pass": [57, 3, 3]}
{"time": "2021-02-24 03:26:49.400752", "score": "0.3754", "loss": "20.2068", "code": "public static String getQuestionMarks(int count) { StringBuilder sb = new StringBuilder(count * 2); for (0; i < count; i++) { if (i > 0) { sb.append(','); }} return sb.toString(); }", "n_tokens": 88, "n_pass": [100, 4, 4]}
{"time": "2021-02-24 03:26:52.022885", "score": "0.3754", "loss": "20.2068", "code": " String getQuestionMarks(int count) { StringBuilder sb = new StringBuilder(count * 2); for (0; i < count; i++) { if (i > 0) { sb.append(','); }} return sb.toString(); }", "n_tokens": 85, "n_pass": [104, 5, 5]}
{"time": "2021-02-24 03:27:03.010407", "score": "0.4477", "loss": "20.2305", "code": " String getQuestionMarks(int count) { StringBuilder sb = new StringBuilder(count * 2); for (0; i < count; i++) { if (i0) { sb.append(','); }} return sb.toString(); }", "n_tokens": 82, "n_pass": [123, 9, 6]}
{"time": "2021-02-24 03:27:05.623933", "score": "0.4646", "loss": "20.3072", "code": " String getQuestionMarks(int count) { StringBuilder sb = new StringBuilder(count * 2); for (0; i < count; i++) { if (i0) {(','); }} return sb.toString(); }", "n_tokens": 78, "n_pass": [125, 10, 7]}
{"time": "2021-02-24 03:27:11.270983", "score": "0.3541", "loss": "20.7832", "code": " String getQuestionMarks(int count) { StringBuilder sb = new StringBuilder(count ); for (0; i < count; i++) { if (i0) {(','); }} return sb.toString(); }", "n_tokens": 75, "n_pass": [139, 12, 8]}
{"time": "2021-02-24 03:27:25.515479", "score": "0.3568", "loss": "20.7566", "code": " String getQuestionMarks(int count) { StringBuilder sb = new StringBuilder(count ); for (0; i < count; i) { if (i0) {(','); }} return sb.toString(); }", "n_tokens": 73, "n_pass": [222, 16, 9]}
{"time": "2021-02-24 03:27:30.858597", "score": "0.3235", "loss": "20.6062", "code": " String getQuestionMarks(int count) { StringBuilder sb = new StringBuilder(count ); for (0; i < count; i) { if (i0) {(','); }} return toString(); }", "n_tokens": 71, "n_pass": [235, 18, 10]}
{"time": "2021-02-24 03:27:33.481624", "score": "0.3235", "loss": "20.6062", "code": "String getQuestionMarks(int count) { StringBuilder sb = new StringBuilder(count ); for (0; i < count; i) { if (i0) {(','); }} return toString(); }", "n_tokens": 70, "n_pass": [239, 19, 11]}
{"time": "2021-02-24 03:27:37.275393", "score": "0.3235", "loss": "20.6062", "code": "String getQuestionMarks(int count){ StringBuilder sb = new StringBuilder(count ); for (0; i < count; i) { if (i0) {(','); }} return toString(); }", "n_tokens": 69, "n_pass": [248, 20, 12]}
{"time": "2021-02-24 03:27:39.911254", "score": "0.3235", "loss": "20.6062", "code": "String getQuestionMarks(int count){StringBuilder sb = new StringBuilder(count ); for (0; i < count; i) { if (i0) {(','); }} return toString(); }", "n_tokens": 68, "n_pass": [250, 21, 13]}
{"time": "2021-02-24 03:27:50.459420", "score": "0.3235", "loss": "20.6062", "code": "String getQuestionMarks(int count){StringBuilder sb= new StringBuilder(count ); for (0; i < count; i) { if (i0) {(','); }} return toString(); }", "n_tokens": 67, "n_pass": [254, 25, 14]}
{"time": "2021-02-24 03:27:55.774629", "score": "0.317", "loss": "20.6305", "code": "String getQuestionMarks(int count){StringBuilder sb= new StringBuilder(count ); for (0; i < count;) { if (i0) {(','); }} return toString(); }", "n_tokens": 65, "n_pass": [267, 27, 15]}
{"time": "2021-02-24 03:27:58.458135", "score": "0.2932", "loss": "20.3318", "code": "String getQuestionMarks(int count){StringBuilder sb= new StringBuilder(count ); for (0; i < count;) { if (i0) {(','); }} toString(); }", "n_tokens": 63, "n_pass": [279, 28, 16]}
{"time": "2021-02-24 03:28:20.117373", "score": "0.2932", "loss": "20.3318", "code": "String getQuestionMarks(int count){StringBuilder sb= new StringBuilder(count ); for (0; i < count;) { if (i0) {(','); }} toString();}", "n_tokens": 62, "n_pass": [371, 33, 17]}
{"time": "2021-02-24 03:28:31.846008", "score": "0.2932", "loss": "20.3318", "code": "String getQuestionMarks(int count){StringBuilder sb=new StringBuilder(count ); for (0; i < count;) { if (i0) {(','); }} toString();}", "n_tokens": 61, "n_pass": [385, 37, 18]}
{"time": "2021-02-24 03:28:42.471497", "score": "0.2932", "loss": "20.3318", "code": "String getQuestionMarks(int count){StringBuilder sb=new StringBuilder(count); for (0; i < count;) { if (i0) {(','); }} toString();}", "n_tokens": 60, "n_pass": [391, 41, 19]}
{"time": "2021-02-24 03:28:45.098636", "score": "0.2932", "loss": "20.3318", "code": "String getQuestionMarks(int count){StringBuilder sb=new StringBuilder(count);for (0; i < count;) { if (i0) {(','); }} toString();}", "n_tokens": 59, "n_pass": [394, 42, 20]}
{"time": "2021-02-24 03:28:47.716676", "score": "0.2932", "loss": "20.3318", "code": "String getQuestionMarks(int count){StringBuilder sb=new StringBuilder(count);for(0; i < count;) { if (i0) {(','); }} toString();}", "n_tokens": 58, "n_pass": [396, 43, 21]}
{"time": "2021-02-24 03:28:50.355377", "score": "0.2978", "loss": "20.4564", "code": "String getQuestionMarks(int count){StringBuilder sb=new StringBuilder(count);for(; i < count;) { if (i0) {(','); }} toString();}", "n_tokens": 57, "n_pass": [398, 44, 22]}
{"time": "2021-02-24 03:28:52.967038", "score": "0.2978", "loss": "20.4564", "code": "String getQuestionMarks(int count){StringBuilder sb=new StringBuilder(count);for(;i < count;) { if (i0) {(','); }} toString();}", "n_tokens": 56, "n_pass": [400, 45, 23]}
{"time": "2021-02-24 03:28:55.575709", "score": "0.2978", "loss": "20.4564", "code": "String getQuestionMarks(int count){StringBuilder sb=new StringBuilder(count);for(;i< count;) { if (i0) {(','); }} toString();}", "n_tokens": 55, "n_pass": [402, 46, 24]}
{"time": "2021-02-24 03:28:58.186806", "score": "0.2978", "loss": "20.4564", "code": "String getQuestionMarks(int count){StringBuilder sb=new StringBuilder(count);for(;i<count;) { if (i0) {(','); }} toString();}", "n_tokens": 54, "n_pass": [404, 47, 25]}
{"time": "2021-02-24 03:29:00.821470", "score": "0.2978", "loss": "20.4564", "code": "String getQuestionMarks(int count){StringBuilder sb=new StringBuilder(count);for(;i<count;){ if (i0) {(','); }} toString();}", "n_tokens": 53, "n_pass": [408, 48, 26]}
{"time": "2021-02-24 03:29:03.457987", "score": "0.2978", "loss": "20.4564", "code": "String getQuestionMarks(int count){StringBuilder sb=new StringBuilder(count);for(;i<count;){if (i0) {(','); }} toString();}", "n_tokens": 52, "n_pass": [410, 49, 27]}
{"time": "2021-02-24 03:29:06.076629", "score": "0.2978", "loss": "20.4564", "code": "String getQuestionMarks(int count){StringBuilder sb=new StringBuilder(count);for(;i<count;){if(i0) {(','); }} toString();}", "n_tokens": 51, "n_pass": [412, 50, 28]}
{"time": "2021-02-24 03:29:11.300125", "score": "0.2978", "loss": "20.4564", "code": "String getQuestionMarks(int count){StringBuilder sb=new StringBuilder(count);for(;i<count;){if(i) {(','); }} toString();}", "n_tokens": 50, "n_pass": [415, 52, 29]}
{"time": "2021-02-24 03:29:13.912696", "score": "0.2978", "loss": "20.4564", "code": "String getQuestionMarks(int count){StringBuilder sb=new StringBuilder(count);for(;i<count;){if(i){(','); }} toString();}", "n_tokens": 49, "n_pass": [417, 53, 30]}
{"time": "2021-02-24 03:29:16.898714", "score": "0.2978", "loss": "20.4564", "code": "String getQuestionMarks(int count){StringBuilder sb=new StringBuilder(count);for(;i<count;){if(i){(',');}} toString();}", "n_tokens": 48, "n_pass": [425, 54, 31]}
{"time": "2021-02-24 03:29:19.543890", "score": "0.2978", "loss": "20.4564", "code": "String getQuestionMarks(int count){StringBuilder sb=new StringBuilder(count);for(;i<count;){if(i){(',');}}toString();}", "n_tokens": 47, "n_pass": [428, 55, 32]}

Minimal simplified code:
String getQuestionMarks(int count){StringBuilder sb=new StringBuilder(count);for(;i<count;){if(i){(',');}}toString();}

