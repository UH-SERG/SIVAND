
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/ahmetaa__zemberek-nlp/morphology/src/main/java/zemberek/morphology/ambiguity/PerceptronAmbiguityResolver_pruneNearZeroWeights.java
method_name = pruneNearZeroWeights
method_body = void pruneNearZeroWeights() { FloatValueMap<String> pruned = new FloatValueMap<>(); for (String key : data) { float w = data.get(key); if (Math.abs(w) > epsilon) { pruned.set(key, w); } } this.data = pruned; }
predict, score, loss = run, 0.22358214855194092, 15.168852806091309

Trace of simplified code(s):
{"time": "2021-02-24 01:07:27.349464", "score": "0.2236", "loss": "15.1689", "code": "void pruneNearZeroWeights() { FloatValueMap<String> pruned = new FloatValueMap<>(); for (String key : data) { float w = data.get(key); if (Math.abs(w) > epsilon) { pruned.set(key, w); } } this.data = pruned; }", "n_tokens": 96, "n_pass": [1, 1, 1]}
{"time": "2021-02-24 01:07:30.578169", "score": "0.2567", "loss": "16.8574", "code": "void pruneNearZeroWeights() { FloatValueMap<String> pruned = new FloatValueMap<>(); for (String key : data) { float w = data.get(key); if (Math.absepsilon) { pruned.set(key, w); } } this.data = pruned; }", "n_tokens": 90, "n_pass": [54, 2, 2]}
{"time": "2021-02-24 01:07:43.017307", "score": "0.2356", "loss": "16.7853", "code": "void pruneNearZeroWeights() { FloatValueMap<String> pruned = new FloatValueMap<>(); for (String key : data) {w = data.get(key); if (Math.absepsilon) { pruned.set(key, w); } } this.data = pruned; }", "n_tokens": 87, "n_pass": [122, 6, 3]}
{"time": "2021-02-24 01:07:48.551267", "score": "0.3207", "loss": "16.7782", "code": "void pruneNearZeroWeights() { FloatValueMap<String> pruned = new FloatValueMap<>(); for (String key : data) {w =get(key); if (Math.absepsilon) { pruned.set(key, w); } } this.data = pruned; }", "n_tokens": 84, "n_pass": [124, 8, 4]}
{"time": "2021-02-24 01:07:51.288047", "score": "0.2337", "loss": "16.4316", "code": "void pruneNearZeroWeights() { FloatValueMap<String> pruned = new FloatValueMap<>(); for (String key : data) {w =get(key); if (epsilon) { pruned.set(key, w); } } this.data = pruned; }", "n_tokens": 81, "n_pass": [128, 9, 5]}
{"time": "2021-02-24 01:08:00.112551", "score": "0.2377", "loss": "16.3447", "code": "void pruneNearZeroWeights() { FloatValueMap pruned = new FloatValueMap<>(); for (String key : data) {w =get(key); if (epsilon) { pruned.set(key, w); } } this.data = pruned; }", "n_tokens": 78, "n_pass": [142, 12, 6]}
{"time": "2021-02-24 01:08:19.017665", "score": "0.2377", "loss": "16.3447", "code": "void pruneNearZeroWeights() {FloatValueMap pruned = new FloatValueMap<>(); for (String key : data) {w =get(key); if (epsilon) { pruned.set(key, w); } } this.data = pruned; }", "n_tokens": 77, "n_pass": [222, 17, 7]}
{"time": "2021-02-24 01:08:30.089816", "score": "0.2377", "loss": "16.3447", "code": "void pruneNearZeroWeights() {FloatValueMap pruned= new FloatValueMap<>(); for (String key : data) {w =get(key); if (epsilon) { pruned.set(key, w); } } this.data = pruned; }", "n_tokens": 76, "n_pass": [226, 21, 8]}
{"time": "2021-02-24 01:08:32.866322", "score": "0.2377", "loss": "16.3447", "code": "void pruneNearZeroWeights() {FloatValueMap pruned=new FloatValueMap<>(); for (String key : data) {w =get(key); if (epsilon) { pruned.set(key, w); } } this.data = pruned; }", "n_tokens": 75, "n_pass": [228, 22, 9]}
{"time": "2021-02-24 01:08:35.662848", "score": "0.2377", "loss": "16.3447", "code": "void pruneNearZeroWeights() {FloatValueMap pruned=new FloatValueMap<>();for (String key : data) {w =get(key); if (epsilon) { pruned.set(key, w); } } this.data = pruned; }", "n_tokens": 74, "n_pass": [237, 23, 10]}
{"time": "2021-02-24 01:08:38.424184", "score": "0.2377", "loss": "16.3447", "code": "void pruneNearZeroWeights() {FloatValueMap pruned=new FloatValueMap<>();for(String key : data) {w =get(key); if (epsilon) { pruned.set(key, w); } } this.data = pruned; }", "n_tokens": 73, "n_pass": [239, 24, 11]}
{"time": "2021-02-24 01:08:46.739270", "score": "0.4423", "loss": "16.5282", "code": "void pruneNearZeroWeights() {FloatValueMap pruned=new FloatValueMap<>();for(String key : data) {w =get(key); if (epsilon) { pruned.set(keyw); } } this.data = pruned; }", "n_tokens": 71, "n_pass": [257, 27, 12]}
{"time": "2021-02-24 01:08:49.504178", "score": "0.5614", "loss": "17.4094", "code": "void pruneNearZeroWeights() {FloatValueMap pruned=new FloatValueMap<>();for(String key : data) {w =get(key); if (epsilon) { pruned.set(keyw); } } data = pruned; }", "n_tokens": 69, "n_pass": [262, 28, 13]}
{"time": "2021-02-24 01:08:55.896228", "score": "0.5614", "loss": "17.4094", "code": "void pruneNearZeroWeights(){FloatValueMap pruned=new FloatValueMap<>();for(String key : data) {w =get(key); if (epsilon) { pruned.set(keyw); } } data = pruned; }", "n_tokens": 68, "n_pass": [272, 30, 14]}
{"time": "2021-02-24 01:08:58.669722", "score": "0.5051", "loss": "17.374", "code": "void pruneNearZeroWeights(){ pruned=new FloatValueMap<>();for(String key : data) {w =get(key); if (epsilon) { pruned.set(keyw); } } data = pruned; }", "n_tokens": 67, "n_pass": [274, 31, 15]}
{"time": "2021-02-24 01:09:01.442776", "score": "0.5051", "loss": "17.374", "code": "void pruneNearZeroWeights(){pruned=new FloatValueMap<>();for(String key : data) {w =get(key); if (epsilon) { pruned.set(keyw); } } data = pruned; }", "n_tokens": 66, "n_pass": [275, 32, 16]}
{"time": "2021-02-24 01:09:04.187985", "score": "0.307", "loss": "17.2857", "code": "void pruneNearZeroWeights(){pruned=new FloatValueMap<>();for(String key : data) {w (key); if (epsilon) { pruned.set(keyw); } } data = pruned; }", "n_tokens": 64, "n_pass": [294, 33, 17]}
{"time": "2021-02-24 01:09:09.735450", "score": "0.3083", "loss": "17.3655", "code": "void pruneNearZeroWeights(){pruned=new FloatValueMap<>();for(String key : data) {w (key); if (epsilon) { pruned.set(keyw); } } data pruned; }", "n_tokens": 62, "n_pass": [309, 35, 18]}
{"time": "2021-02-24 01:09:19.009123", "score": "0.1958", "loss": "16.8296", "code": "void pruneNearZeroWeights(){pruned=new FloatValueMap<>();for(String key : data) {w (key); if (epsilon) { pruned.set(keyw); } } pruned; }", "n_tokens": 60, "n_pass": [349, 38, 19]}
{"time": "2021-02-24 01:09:21.758983", "score": "0.1985", "loss": "16.8343", "code": "void pruneNearZeroWeights(){pruned=new FloatValueMap<>();for(String key : data) {w (key); if (epsilon) { pruned.set(keyw); } }  }", "n_tokens": 58, "n_pass": [350, 39, 20]}
{"time": "2021-02-24 01:09:25.410611", "score": "0.2978", "loss": "17.0936", "code": "void pruneNearZeroWeights(){pruned=new FloatValueMap<>();for(String key : data) {(key); if (epsilon) { pruned.set(keyw); } }  }", "n_tokens": 56, "n_pass": [375, 40, 21]}
{"time": "2021-02-24 01:09:37.799506", "score": "0.2978", "loss": "17.0936", "code": "void pruneNearZeroWeights(){pruned=new FloatValueMap<>();for(String key : data) {(key); if(epsilon) { pruned.set(keyw); } }  }", "n_tokens": 55, "n_pass": [451, 42, 22]}
{"time": "2021-02-24 01:09:40.677111", "score": "0.2978", "loss": "17.0936", "code": "void pruneNearZeroWeights(){pruned=new FloatValueMap<>();for(String key : data) {(key); if(epsilon){ pruned.set(keyw); } }  }", "n_tokens": 54, "n_pass": [454, 43, 23]}
{"time": "2021-02-24 01:09:43.413629", "score": "0.2978", "loss": "17.0936", "code": "void pruneNearZeroWeights(){pruned=new FloatValueMap<>();for(String key : data) {(key); if(epsilon){pruned.set(keyw); } }  }", "n_tokens": 53, "n_pass": [456, 44, 24]}
{"time": "2021-02-24 01:09:54.542090", "score": "0.2978", "loss": "17.0936", "code": "void pruneNearZeroWeights(){pruned=new FloatValueMap<>();for(String key : data) {(key); if(epsilon){pruned.set(keyw);} }  }", "n_tokens": 52, "n_pass": [465, 48, 25]}
{"time": "2021-02-24 01:09:57.281502", "score": "0.2978", "loss": "17.0936", "code": "void pruneNearZeroWeights(){pruned=new FloatValueMap<>();for(String key : data) {(key); if(epsilon){pruned.set(keyw);}}  }", "n_tokens": 51, "n_pass": [467, 49, 26]}
{"time": "2021-02-24 01:10:00.070347", "score": "0.2978", "loss": "17.0936", "code": "void pruneNearZeroWeights(){pruned=new FloatValueMap<>();for(String key : data) {(key); if(epsilon){pruned.set(keyw);}} }", "n_tokens": 50, "n_pass": [469, 50, 27]}
{"time": "2021-02-24 01:10:02.825526", "score": "0.2978", "loss": "17.0936", "code": "void pruneNearZeroWeights(){pruned=new FloatValueMap<>();for(String key : data) {(key); if(epsilon){pruned.set(keyw);}}}", "n_tokens": 49, "n_pass": [470, 51, 28]}
{"time": "2021-02-24 01:10:06.558658", "score": "0.2978", "loss": "17.0936", "code": "void pruneNearZeroWeights(){pruned=new FloatValueMap<>();for(String key: data) {(key); if(epsilon){pruned.set(keyw);}}}", "n_tokens": 48, "n_pass": [493, 52, 29]}
{"time": "2021-02-24 01:10:09.366076", "score": "0.2978", "loss": "17.0936", "code": "void pruneNearZeroWeights(){pruned=new FloatValueMap<>();for(String key:data) {(key); if(epsilon){pruned.set(keyw);}}}", "n_tokens": 47, "n_pass": [495, 53, 30]}
{"time": "2021-02-24 01:10:12.135953", "score": "0.2978", "loss": "17.0936", "code": "void pruneNearZeroWeights(){pruned=new FloatValueMap<>();for(String key:data){(key); if(epsilon){pruned.set(keyw);}}}", "n_tokens": 46, "n_pass": [498, 54, 31]}
{"time": "2021-02-24 01:10:14.935034", "score": "0.2978", "loss": "17.0936", "code": "void pruneNearZeroWeights(){pruned=new FloatValueMap<>();for(String key:data){(key);if(epsilon){pruned.set(keyw);}}}", "n_tokens": 45, "n_pass": [504, 55, 32]}

Minimal simplified code:
void pruneNearZeroWeights(){pruned=new FloatValueMap<>();for(String key:data){(key);if(epsilon){pruned.set(keyw);}}}

