
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/adamkewley__jobson/src/main/java/com/github/jobson/Helpers_streamBinaryData.java
method_name = streamBinaryData
method_body = public static BinaryData streamBinaryData(Path p, String mimeType) { try { final long size = Files.size(p); final InputStream dataStream = Files.newInputStream(p); return new BinaryData(dataStream, size, mimeType); } catch (IOException ex) { throw new RuntimeException(ex); } }
predict, score, loss = decode, 0.39033204317092896, 20.628253936767578

Trace of simplified code(s):
{"time": "2021-02-23 19:20:04.817101", "score": "0.3903", "loss": "20.6283", "code": "public static BinaryData streamBinaryData(Path p, String mimeType) { try { final long size = Files.size(p); final InputStream dataStream = Files.newInputStream(p); return new BinaryData(dataStream, size, mimeType); } catch (IOException ex) { throw new RuntimeException(ex); } }", "n_tokens": 97, "n_pass": [1, 1, 1]}
{"time": "2021-02-23 19:20:13.326446", "score": "0.3903", "loss": "20.6283", "code": " BinaryData streamBinaryData(Path p, String mimeType) { try { final long size = Files.size(p); final InputStream dataStream = Files.newInputStream(p); return new BinaryData(dataStream, size, mimeType); } catch (IOException ex) { throw new RuntimeException(ex); } }", "n_tokens": 94, "n_pass": [92, 4, 2]}
{"time": "2021-02-23 19:20:16.000057", "score": "0.4193", "loss": "19.354", "code": " BinaryData streamBinaryData(Path p, String mimeType) { try {  size = Files.size(p); final InputStream dataStream = Files.newInputStream(p); return new BinaryData(dataStream, size, mimeType); } catch (IOException ex) { throw new RuntimeException(ex); } }", "n_tokens": 91, "n_pass": [99, 5, 3]}
{"time": "2021-02-23 19:20:18.667095", "score": "0.3386", "loss": "19.8934", "code": " BinaryData streamBinaryData(Path p, String mimeType) { try {  size .size(p); final InputStream dataStream = Files.newInputStream(p); return new BinaryData(dataStream, size, mimeType); } catch (IOException ex) { throw new RuntimeException(ex); } }", "n_tokens": 88, "n_pass": [101, 6, 4]}
{"time": "2021-02-23 19:20:21.366689", "score": "0.3386", "loss": "19.8934", "code": " BinaryData streamBinaryData(Path p, String mimeType) { try {  size .size(p);InputStream dataStream = Files.newInputStream(p); return new BinaryData(dataStream, size, mimeType); } catch (IOException ex) { throw new RuntimeException(ex); } }", "n_tokens": 85, "n_pass": [104, 7, 5]}
{"time": "2021-02-23 19:20:26.685312", "score": "0.2637", "loss": "19.2722", "code": " BinaryData streamBinaryData(Path p, String mimeType) { try {  size .size(p);InputStream dataStream = Files.newInputStream; return new BinaryData(dataStream, size, mimeType); } catch (IOException ex) { throw new RuntimeException(ex); } }", "n_tokens": 82, "n_pass": [108, 9, 6]}
{"time": "2021-02-23 19:20:32.049201", "score": "0.3435", "loss": "19.6366", "code": " BinaryData streamBinaryData(Path p, String mimeType) { try {  size .size(p);InputStream dataStream = Files.newInputStream; return new BinaryData(dataStream, mimeType); } catch (IOException ex) { throw new RuntimeException(ex); } }", "n_tokens": 79, "n_pass": [112, 11, 7]}
{"time": "2021-02-23 19:20:34.726596", "score": "0.4547", "loss": "19.8609", "code": " BinaryData streamBinaryData(Path p, String mimeType) { try {  size .size(p);InputStream dataStream = Files.newInputStream; return new BinaryData(dataStream); } catch (IOException ex) { throw new RuntimeException(ex); } }", "n_tokens": 76, "n_pass": [113, 12, 8]}
{"time": "2021-02-23 19:20:37.390704", "score": "0.4546", "loss": "19.8619", "code": " BinaryData streamBinaryData(Path p, String mimeType) { try {  size .size(p);InputStream dataStream = Files.newInputStream; return new BinaryData(dataStream); } catch (IOException ex) {  RuntimeException(ex); } }", "n_tokens": 73, "n_pass": [119, 13, 9]}
{"time": "2021-02-23 19:20:47.833864", "score": "0.455", "loss": "19.8647", "code": " BinaryData streamBinaryData(Path p, String mimeType) { try {  size .size(p);InputStream dataStream = Files.newInputStream; return new BinaryData(dataStream); } catch (IOException ex) { (ex); } }", "n_tokens": 71, "n_pass": [193, 15, 10]}
{"time": "2021-02-23 19:20:50.501369", "score": "0.455", "loss": "19.8647", "code": "BinaryData streamBinaryData(Path p, String mimeType) { try {  size .size(p);InputStream dataStream = Files.newInputStream; return new BinaryData(dataStream); } catch (IOException ex) { (ex); } }", "n_tokens": 70, "n_pass": [198, 16, 11]}
{"time": "2021-02-23 19:20:54.410908", "score": "0.455", "loss": "19.8647", "code": "BinaryData streamBinaryData(Path p,String mimeType) { try {  size .size(p);InputStream dataStream = Files.newInputStream; return new BinaryData(dataStream); } catch (IOException ex) { (ex); } }", "n_tokens": 69, "n_pass": [207, 17, 12]}
{"time": "2021-02-23 19:20:57.095564", "score": "0.455", "loss": "19.8647", "code": "BinaryData streamBinaryData(Path p,String mimeType){ try {  size .size(p);InputStream dataStream = Files.newInputStream; return new BinaryData(dataStream); } catch (IOException ex) { (ex); } }", "n_tokens": 68, "n_pass": [212, 18, 13]}
{"time": "2021-02-23 19:20:59.758679", "score": "0.455", "loss": "19.8647", "code": "BinaryData streamBinaryData(Path p,String mimeType){try {  size .size(p);InputStream dataStream = Files.newInputStream; return new BinaryData(dataStream); } catch (IOException ex) { (ex); } }", "n_tokens": 67, "n_pass": [214, 19, 14]}
{"time": "2021-02-23 19:21:02.422453", "score": "0.455", "loss": "19.8647", "code": "BinaryData streamBinaryData(Path p,String mimeType){try{  size .size(p);InputStream dataStream = Files.newInputStream; return new BinaryData(dataStream); } catch (IOException ex) { (ex); } }", "n_tokens": 66, "n_pass": [216, 20, 15]}
{"time": "2021-02-23 19:21:05.101478", "score": "0.455", "loss": "19.8647", "code": "BinaryData streamBinaryData(Path p,String mimeType){try{ size .size(p);InputStream dataStream = Files.newInputStream; return new BinaryData(dataStream); } catch (IOException ex) { (ex); } }", "n_tokens": 65, "n_pass": [218, 21, 16]}
{"time": "2021-02-23 19:21:07.792084", "score": "0.455", "loss": "19.8647", "code": "BinaryData streamBinaryData(Path p,String mimeType){try{size .size(p);InputStream dataStream = Files.newInputStream; return new BinaryData(dataStream); } catch (IOException ex) { (ex); } }", "n_tokens": 64, "n_pass": [219, 22, 17]}
{"time": "2021-02-23 19:21:10.448446", "score": "0.4386", "loss": "20.141", "code": "BinaryData streamBinaryData(Path p,String mimeType){try{sizesize(p);InputStream dataStream = Files.newInputStream; return new BinaryData(dataStream); } catch (IOException ex) { (ex); } }", "n_tokens": 62, "n_pass": [221, 23, 18]}
{"time": "2021-02-23 19:21:13.107473", "score": "0.3077", "loss": "20.4817", "code": "BinaryData streamBinaryData(Path p,String mimeType){try{sizesize(p);InputStream = Files.newInputStream; return new BinaryData(dataStream); } catch (IOException ex) { (ex); } }", "n_tokens": 60, "n_pass": [225, 24, 19]}
{"time": "2021-02-23 19:21:25.040127", "score": "0.3269", "loss": "20.5981", "code": "BinaryData streamBinaryData(Path p,String mimeType){try{size(p);InputStream = Files.newInputStream; return new BinaryData(dataStream); } catch (IOException ex) { (ex); } }", "n_tokens": 59, "n_pass": [260, 28, 20]}
{"time": "2021-02-23 19:21:43.995850", "score": "0.3269", "loss": "20.5981", "code": "BinaryData streamBinaryData(Path p,String mimeType){try{size(p);InputStream =Files.newInputStream; return new BinaryData(dataStream); } catch (IOException ex) { (ex); } }", "n_tokens": 58, "n_pass": [342, 32, 21]}
{"time": "2021-02-23 19:21:49.340615", "score": "0.3269", "loss": "20.5981", "code": "BinaryData streamBinaryData(Path p,String mimeType){try{size(p);InputStream =Files.newInputStream;return new BinaryData(dataStream); } catch (IOException ex) { (ex); } }", "n_tokens": 57, "n_pass": [346, 34, 22]}
{"time": "2021-02-23 19:22:02.681221", "score": "0.3269", "loss": "20.5981", "code": "BinaryData streamBinaryData(Path p,String mimeType){try{size(p);InputStream =Files.newInputStream;return new BinaryData(dataStream);} catch (IOException ex) { (ex); } }", "n_tokens": 56, "n_pass": [356, 39, 23]}
{"time": "2021-02-23 19:22:05.374259", "score": "0.3269", "loss": "20.5981", "code": "BinaryData streamBinaryData(Path p,String mimeType){try{size(p);InputStream =Files.newInputStream;return new BinaryData(dataStream);}catch (IOException ex) { (ex); } }", "n_tokens": 55, "n_pass": [358, 40, 24]}
{"time": "2021-02-23 19:22:08.027208", "score": "0.3269", "loss": "20.5981", "code": "BinaryData streamBinaryData(Path p,String mimeType){try{size(p);InputStream =Files.newInputStream;return new BinaryData(dataStream);}catch(IOException ex) { (ex); } }", "n_tokens": 54, "n_pass": [360, 41, 25]}
{"time": "2021-02-23 19:22:10.681966", "score": "0.3269", "loss": "20.5981", "code": "BinaryData streamBinaryData(Path p,String mimeType){try{size(p);InputStream =Files.newInputStream;return new BinaryData(dataStream);}catch(IOException ex){ (ex); } }", "n_tokens": 53, "n_pass": [366, 42, 26]}
{"time": "2021-02-23 19:22:13.366706", "score": "0.3269", "loss": "20.5981", "code": "BinaryData streamBinaryData(Path p,String mimeType){try{size(p);InputStream =Files.newInputStream;return new BinaryData(dataStream);}catch(IOException ex){(ex); } }", "n_tokens": 52, "n_pass": [368, 43, 27]}
{"time": "2021-02-23 19:22:16.023346", "score": "0.3269", "loss": "20.5981", "code": "BinaryData streamBinaryData(Path p,String mimeType){try{size(p);InputStream =Files.newInputStream;return new BinaryData(dataStream);}catch(IOException ex){(ex);} }", "n_tokens": 51, "n_pass": [373, 44, 28]}
{"time": "2021-02-23 19:22:18.673846", "score": "0.3269", "loss": "20.5981", "code": "BinaryData streamBinaryData(Path p,String mimeType){try{size(p);InputStream =Files.newInputStream;return new BinaryData(dataStream);}catch(IOException ex){(ex);}}", "n_tokens": 50, "n_pass": [375, 45, 29]}
{"time": "2021-02-23 19:22:22.587602", "score": "0.368", "loss": "21.3969", "code": "BinaryData streamBinaryData(Path p,String mimeType){try{(p);InputStream =Files.newInputStream;return new BinaryData(dataStream);}catch(IOException ex){(ex);}}", "n_tokens": 49, "n_pass": [392, 46, 30]}
{"time": "2021-02-23 19:22:25.665747", "score": "0.368", "loss": "21.3969", "code": "BinaryData streamBinaryData(Path p,String mimeType){try{(p);InputStream=Files.newInputStream;return new BinaryData(dataStream);}catch(IOException ex){(ex);}}", "n_tokens": 48, "n_pass": [398, 47, 31]}
{"time": "2021-02-23 19:22:28.315533", "score": "0.3734", "loss": "21.066", "code": "BinaryData streamBinaryData(Path p,String mimeType){try{(p);InputStreamFiles.newInputStream;return new BinaryData(dataStream);}catch(IOException ex){(ex);}}", "n_tokens": 47, "n_pass": [399, 48, 32]}
{"time": "2021-02-23 19:22:30.987896", "score": "0.3833", "loss": "20.9858", "code": "BinaryData streamBinaryData(Path p,String mimeType){try{(p);InputStream.newInputStream;return new BinaryData(dataStream);}catch(IOException ex){(ex);}}", "n_tokens": 46, "n_pass": [400, 49, 33]}
{"time": "2021-02-23 19:22:33.630189", "score": "0.3632", "loss": "21.3275", "code": "BinaryData streamBinaryData(Path p,String mimeType){try{(p);InputStreamnewInputStream;return new BinaryData(dataStream);}catch(IOException ex){(ex);}}", "n_tokens": 45, "n_pass": [401, 50, 34]}
{"time": "2021-02-23 19:22:36.293966", "score": "0.3705", "loss": "21.2383", "code": "BinaryData streamBinaryData(Path p,String mimeType){try{(p);InputStream;return new BinaryData(dataStream);}catch(IOException ex){(ex);}}", "n_tokens": 44, "n_pass": [402, 51, 35]}
{"time": "2021-02-23 19:22:51.276526", "score": "0.3649", "loss": "21.3965", "code": "BinaryData streamBinaryData(Path p,String mimeType){try{(p);;return new BinaryData(dataStream);}catch(IOException ex){(ex);}}", "n_tokens": 43, "n_pass": [446, 56, 36]}
{"time": "2021-02-23 19:22:53.914559", "score": "0.3649", "loss": "21.3965", "code": "BinaryData streamBinaryData(Path p,String mimeType){try{(p);return new BinaryData(dataStream);}catch(IOException ex){(ex);}}", "n_tokens": 42, "n_pass": [447, 57, 37]}

Minimal simplified code:
BinaryData streamBinaryData(Path p,String mimeType){try{(p);return new BinaryData(dataStream);}catch(IOException ex){(ex);}}

