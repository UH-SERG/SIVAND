
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/apache__aurora/src/main/java/org/apache/aurora/scheduler/config/validators/PositiveNumber_validate.java
method_name = validate
method_body = @Override public void validate(String name, Number value) throws ParameterException { if (value.longValue() <= 0) { throw new ParameterException(String.format("%s must be positive", name)); } }
predict, score, loss = assertIsPositive, 0.8607780933380127, 2.711942195892334

Trace of simplified code(s):
{"time": "2021-02-23 05:30:41.925683", "score": "0.8608", "loss": "2.7119", "code": "@Override public void validate(String name, Number value) throws ParameterException { if (value.longValue() <= 0) { throw new ParameterException(String.format(\"%s must be positive\", name)); } }", "n_tokens": 72, "n_pass": [1, 1, 1]}
{"time": "2021-02-23 05:30:44.637229", "score": "0.9783", "loss": "9.8222", "code": " void validate(String name, Number value) throws ParameterException { if (value.longValue() <= 0) { throw new ParameterException(String.format(\"%s must be positive\", name)); } }", "n_tokens": 68, "n_pass": [44, 2, 2]}
{"time": "2021-02-23 05:30:47.320370", "score": "0.9869", "loss": "9.3448", "code": " void validate(String namevalue) throws ParameterException { if (value.longValue() <= 0) { throw new ParameterException(String.format(\"%s must be positive\", name)); } }", "n_tokens": 64, "n_pass": [47, 3, 3]}
{"time": "2021-02-23 05:30:49.998365", "score": "0.9986", "loss": "11.9498", "code": " void validate(String namevalue) throws ParameterException { if (value.longValue() <= 0) { (String.format(\"%s must be positive\", name)); } }", "n_tokens": 59, "n_pass": [54, 4, 4]}
{"time": "2021-02-23 05:30:52.706021", "score": "0.9098", "loss": "5.2489", "code": " void validate(String namevalue) throws ParameterException { if (value.longValue() <= 0) { (String(\"%s must be positive\", name)); } }", "n_tokens": 57, "n_pass": [96, 5, 5]}
{"time": "2021-02-23 05:31:01.197017", "score": "0.7767", "loss": "4.7165", "code": " void validate(String namevalue) throws ParameterException { if (longValue() <= 0) { (String(\"%s must be positive\", name)); } }", "n_tokens": 55, "n_pass": [114, 8, 6]}
{"time": "2021-02-23 05:31:15.234675", "score": "0.7767", "loss": "4.7165", "code": " void validate(String namevalue) throws ParameterException { if (longValue()<= 0) { (String(\"%s must be positive\", name)); } }", "n_tokens": 54, "n_pass": [190, 11, 7]}
{"time": "2021-02-23 05:31:18.323561", "score": "0.9046", "loss": "5.4867", "code": " void validate(String namevalue) throws ParameterException { if (longValue()< 0) { (String(\"%s must be positive\", name)); } }", "n_tokens": 53, "n_pass": [192, 12, 8]}
{"time": "2021-02-23 05:31:21.000562", "score": "0.9046", "loss": "5.4867", "code": " void validate(String namevalue) throws ParameterException { if (longValue()<0) { (String(\"%s must be positive\", name)); } }", "n_tokens": 52, "n_pass": [193, 13, 9]}
{"time": "2021-02-23 05:31:23.677992", "score": "0.9046", "loss": "5.4867", "code": " void validate(String namevalue) throws ParameterException { if (longValue()<0){ (String(\"%s must be positive\", name)); } }", "n_tokens": 51, "n_pass": [196, 14, 10]}
{"time": "2021-02-23 05:31:26.346664", "score": "0.9046", "loss": "5.4867", "code": " void validate(String namevalue) throws ParameterException { if (longValue()<0){(String(\"%s must be positive\", name)); } }", "n_tokens": 50, "n_pass": [198, 15, 11]}
{"time": "2021-02-23 05:31:29.017932", "score": "0.9046", "loss": "5.4867", "code": " void validate(String namevalue) throws ParameterException { if (longValue()<0){(String(\"s must be positive\", name)); } }", "n_tokens": 49, "n_pass": [203, 16, 12]}
{"time": "2021-02-23 05:31:34.400886", "score": "0.9046", "loss": "5.4867", "code": " void validate(String namevalue) throws ParameterException { if (longValue()<0){(String(\"smust be positive\", name)); } }", "n_tokens": 48, "n_pass": [205, 18, 13]}
{"time": "2021-02-23 05:31:39.735409", "score": "0.9046", "loss": "5.4867", "code": " void validate(String namevalue) throws ParameterException { if (longValue()<0){(String(\"smustbe positive\", name)); } }", "n_tokens": 47, "n_pass": [207, 20, 14]}
{"time": "2021-02-23 05:31:45.112804", "score": "0.9046", "loss": "5.4867", "code": "void validate(String namevalue) throws ParameterException { if (longValue()<0){(String(\"smustbe positive\", name)); } }", "n_tokens": 46, "n_pass": [215, 22, 15]}
{"time": "2021-02-23 05:31:48.632957", "score": "0.9185", "loss": "7.2429", "code": "void validate(String value) throws ParameterException { if (longValue()<0){(String(\"smustbe positive\", name)); } }", "n_tokens": 45, "n_pass": [222, 23, 16]}
{"time": "2021-02-23 05:31:51.300550", "score": "0.9185", "loss": "7.2429", "code": "void validate(String value)throws ParameterException { if (longValue()<0){(String(\"smustbe positive\", name)); } }", "n_tokens": 44, "n_pass": [225, 24, 17]}
{"time": "2021-02-23 05:31:53.994620", "score": "0.9185", "loss": "7.2429", "code": "void validate(String value)throws ParameterException{ if (longValue()<0){(String(\"smustbe positive\", name)); } }", "n_tokens": 43, "n_pass": [229, 25, 18]}
{"time": "2021-02-23 05:31:56.669751", "score": "0.9185", "loss": "7.2429", "code": "void validate(String value)throws ParameterException{if (longValue()<0){(String(\"smustbe positive\", name)); } }", "n_tokens": 42, "n_pass": [231, 26, 19]}
{"time": "2021-02-23 05:31:59.351160", "score": "0.9185", "loss": "7.2429", "code": "void validate(String value)throws ParameterException{if(longValue()<0){(String(\"smustbe positive\", name)); } }", "n_tokens": 41, "n_pass": [233, 27, 20]}
{"time": "2021-02-23 05:32:15.599325", "score": "0.9185", "loss": "7.2429", "code": "void validate(String value)throws ParameterException{if(longValue()<0){(String(\"smustbepositive\", name)); } }", "n_tokens": 40, "n_pass": [283, 32, 21]}
{"time": "2021-02-23 05:32:20.968625", "score": "0.9185", "loss": "7.2429", "code": "void validate(String value)throws ParameterException{if(longValue()<0){(String(\"smustbepositive\",name)); } }", "n_tokens": 39, "n_pass": [287, 34, 22]}
{"time": "2021-02-23 05:32:23.653884", "score": "0.9185", "loss": "7.2429", "code": "void validate(String value)throws ParameterException{if(longValue()<0){(String(\"smustbepositive\",name));} }", "n_tokens": 38, "n_pass": [292, 35, 23]}
{"time": "2021-02-23 05:32:26.323698", "score": "0.9185", "loss": "7.2429", "code": "void validate(String value)throws ParameterException{if(longValue()<0){(String(\"smustbepositive\",name));}}", "n_tokens": 37, "n_pass": [294, 36, 24]}

Minimal simplified code:
void validate(String value)throws ParameterException{if(longValue()<0){(String("smustbepositive",name));}}

