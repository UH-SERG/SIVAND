
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/codefollower__Tomcat-Research/java/org/apache/tomcat/util/net/NioSelectorPool_put.java
method_name = put
method_body = public void put(Selector s) throws IOException { if (SHARED) return; if (enabled) active.decrementAndGet(); if (enabled && (maxSpareSelectors == -1 || spare.get() < Math.min(maxSpareSelectors, maxSelectors))) { spare.incrementAndGet(); selectors.offer(s); } else s.close(); }
predict, score, loss = update, 0.32347360253334045, 2.775372266769409

Trace of simplified code(s):
{"time": "2021-02-23 05:17:41.966705", "score": "0.3235", "loss": "2.7754", "code": "public void put(Selector s) throws IOException { if (SHARED) return; if (enabled) active.decrementAndGet(); if (enabled && (maxSpareSelectors == -1 || spare.get() < Math.min(maxSpareSelectors, maxSelectors))) { spare.incrementAndGet(); selectors.offer(s); } else s.close(); }", "n_tokens": 108, "n_pass": [1, 1, 1]}
{"time": "2021-02-23 05:17:47.409160", "score": "0.385", "loss": "2.9047", "code": "public void put(Selector s) throws IOException { if (SHARED) return; if (enabled) active.decrementAndGet(); if (enabled && (maxSpareSelectors == Math.min(maxSpareSelectors, maxSelectors))) { spare.incrementAndGet(); selectors.offer(s); } else s.close(); }", "n_tokens": 94, "n_pass": [24, 3, 2]}
{"time": "2021-02-23 05:17:58.215505", "score": "0.3855", "loss": "3.6724", "code": "public void put(Selector s) throws IOException { if (SHARED) return; if (enabled) active.decrementAndGet(); if (enabled && (maxSpareSelectors == Math.min(maxSpareSelectors, maxSelectors))) { spare.incrementAndGet();; } else s.close(); }", "n_tokens": 87, "n_pass": [49, 7, 3]}
{"time": "2021-02-23 05:18:12.226705", "score": "0.4179", "loss": "3.2687", "code": "public void put(Selector s) throws IOException { if (SHARED) return; if (enabled) active.decrementAndGet(); if (enabled && (maxSpareSelectors =min(maxSpareSelectors, maxSelectors))) { spare.incrementAndGet();; } else s.close(); }", "n_tokens": 83, "n_pass": [109, 12, 4]}
{"time": "2021-02-23 05:18:20.791882", "score": "0.4709", "loss": "3.2406", "code": "public void put(Selector s) throws IOException { if (SHARED) return; if (enabled) active.decrementAndGet(); if (enabled && (min(maxSpareSelectors, maxSelectors))) { spare.incrementAndGet();; } else s.close(); }", "n_tokens": 80, "n_pass": [134, 15, 5]}
{"time": "2021-02-23 05:18:23.914373", "score": "0.2108", "loss": "6.4337", "code": "public void put() throws IOException { if (SHARED) return; if (enabled) active.decrementAndGet(); if (enabled && (min(maxSpareSelectors, maxSelectors))) { spare.incrementAndGet();; } else s.close(); }", "n_tokens": 77, "n_pass": [145, 16, 6]}
{"time": "2021-02-23 05:18:32.942261", "score": "0.2108", "loss": "6.4337", "code": "public void put()throws IOException { if (SHARED) return; if (enabled) active.decrementAndGet(); if (enabled && (min(maxSpareSelectors, maxSelectors))) { spare.incrementAndGet();; } else s.close(); }", "n_tokens": 76, "n_pass": [218, 18, 7]}
{"time": "2021-02-23 05:18:35.635794", "score": "0.2108", "loss": "6.4337", "code": "public void put()throws IOException{ if (SHARED) return; if (enabled) active.decrementAndGet(); if (enabled && (min(maxSpareSelectors, maxSelectors))) { spare.incrementAndGet();; } else s.close(); }", "n_tokens": 75, "n_pass": [222, 19, 8]}
{"time": "2021-02-23 05:18:38.331475", "score": "0.2108", "loss": "6.4337", "code": "public void put()throws IOException{if (SHARED) return; if (enabled) active.decrementAndGet(); if (enabled && (min(maxSpareSelectors, maxSelectors))) { spare.incrementAndGet();; } else s.close(); }", "n_tokens": 74, "n_pass": [224, 20, 9]}
{"time": "2021-02-23 05:18:41.031377", "score": "0.2108", "loss": "6.4337", "code": "public void put()throws IOException{if (SHARED); if (enabled) active.decrementAndGet(); if (enabled && (min(maxSpareSelectors, maxSelectors))) { spare.incrementAndGet();; } else s.close(); }", "n_tokens": 72, "n_pass": [228, 21, 10]}
{"time": "2021-02-23 05:18:57.676103", "score": "0.2108", "loss": "6.4337", "code": "public void put()throws IOException{if (SHARED); if (enabled) active.decrementAndGet(); if (enabled && (min(maxSpareSelectors, maxSelectors))) { spare.incrementAndGet();} else s.close(); }", "n_tokens": 70, "n_pass": [250, 27, 11]}
{"time": "2021-02-23 05:19:05.800412", "score": "0.2108", "loss": "6.4337", "code": " void put()throws IOException{if (SHARED); if (enabled) active.decrementAndGet(); if (enabled && (min(maxSpareSelectors, maxSelectors))) { spare.incrementAndGet();} else s.close(); }", "n_tokens": 69, "n_pass": [257, 30, 12]}
{"time": "2021-02-23 05:19:08.483546", "score": "0.2108", "loss": "6.4337", "code": "void put()throws IOException{if (SHARED); if (enabled) active.decrementAndGet(); if (enabled && (min(maxSpareSelectors, maxSelectors))) { spare.incrementAndGet();} else s.close(); }", "n_tokens": 68, "n_pass": [258, 31, 13]}
{"time": "2021-02-23 05:19:41.197978", "score": "0.2108", "loss": "6.4337", "code": "void put()throws IOException{if(SHARED); if (enabled) active.decrementAndGet(); if (enabled && (min(maxSpareSelectors, maxSelectors))) { spare.incrementAndGet();} else s.close(); }", "n_tokens": 67, "n_pass": [356, 40, 14]}
{"time": "2021-02-23 05:19:46.598096", "score": "0.2108", "loss": "6.4337", "code": "void put()throws IOException{if(SHARED);if (enabled) active.decrementAndGet(); if (enabled && (min(maxSpareSelectors, maxSelectors))) { spare.incrementAndGet();} else s.close(); }", "n_tokens": 66, "n_pass": [360, 42, 15]}
{"time": "2021-02-23 05:19:49.718845", "score": "0.2108", "loss": "6.4337", "code": "void put()throws IOException{if(SHARED);if(enabled) active.decrementAndGet(); if (enabled && (min(maxSpareSelectors, maxSelectors))) { spare.incrementAndGet();} else s.close(); }", "n_tokens": 65, "n_pass": [362, 43, 16]}
{"time": "2021-02-23 05:19:52.438928", "score": "0.2108", "loss": "6.4337", "code": "void put()throws IOException{if(SHARED);if(enabled)active.decrementAndGet(); if (enabled && (min(maxSpareSelectors, maxSelectors))) { spare.incrementAndGet();} else s.close(); }", "n_tokens": 64, "n_pass": [366, 44, 17]}
{"time": "2021-02-23 05:19:57.836421", "score": "0.2108", "loss": "6.4337", "code": "void put()throws IOException{if(SHARED);if(enabled)active.decrementAndGet();if (enabled && (min(maxSpareSelectors, maxSelectors))) { spare.incrementAndGet();} else s.close(); }", "n_tokens": 63, "n_pass": [373, 46, 18]}
{"time": "2021-02-23 05:20:00.538456", "score": "0.2108", "loss": "6.4337", "code": "void put()throws IOException{if(SHARED);if(enabled)active.decrementAndGet();if(enabled && (min(maxSpareSelectors, maxSelectors))) { spare.incrementAndGet();} else s.close(); }", "n_tokens": 62, "n_pass": [375, 47, 19]}
{"time": "2021-02-23 05:20:03.245895", "score": "0.2108", "loss": "6.4337", "code": "void put()throws IOException{if(SHARED);if(enabled)active.decrementAndGet();if(enabled&& (min(maxSpareSelectors, maxSelectors))) { spare.incrementAndGet();} else s.close(); }", "n_tokens": 61, "n_pass": [378, 48, 20]}
{"time": "2021-02-23 05:20:11.324348", "score": "0.2108", "loss": "6.4337", "code": "void put()throws IOException{if(SHARED);if(enabled)active.decrementAndGet();if(enabled&&(min(maxSpareSelectors, maxSelectors))) { spare.incrementAndGet();} else s.close(); }", "n_tokens": 60, "n_pass": [381, 51, 21]}
{"time": "2021-02-23 05:20:14.022844", "score": "0.2108", "loss": "6.4337", "code": "void put()throws IOException{if(SHARED);if(enabled)active.decrementAndGet();if(enabled&&(min(maxSpareSelectors,maxSelectors))) { spare.incrementAndGet();} else s.close(); }", "n_tokens": 59, "n_pass": [387, 52, 22]}
{"time": "2021-02-23 05:20:16.737837", "score": "0.2108", "loss": "6.4337", "code": "void put()throws IOException{if(SHARED);if(enabled)active.decrementAndGet();if(enabled&&(min(maxSpareSelectors,maxSelectors))){ spare.incrementAndGet();} else s.close(); }", "n_tokens": 58, "n_pass": [392, 53, 23]}
{"time": "2021-02-23 05:20:19.422871", "score": "0.2108", "loss": "6.4337", "code": "void put()throws IOException{if(SHARED);if(enabled)active.decrementAndGet();if(enabled&&(min(maxSpareSelectors,maxSelectors))){spare.incrementAndGet();} else s.close(); }", "n_tokens": 57, "n_pass": [394, 54, 24]}
{"time": "2021-02-23 05:20:24.804274", "score": "0.2108", "loss": "6.4337", "code": "void put()throws IOException{if(SHARED);if(enabled)active.decrementAndGet();if(enabled&&(min(maxSpareSelectors,maxSelectors))){spare.incrementAndGet();}else s.close(); }", "n_tokens": 56, "n_pass": [402, 56, 25]}
{"time": "2021-02-23 05:20:35.631996", "score": "0.2108", "loss": "6.4337", "code": "void put()throws IOException{if(SHARED);if(enabled)active.decrementAndGet();if(enabled&&(min(maxSpareSelectors,maxSelectors))){spare.incrementAndGet();}else s.close();}", "n_tokens": 55, "n_pass": [411, 60, 26]}

Minimal simplified code:
void put()throws IOException{if(SHARED);if(enabled)active.decrementAndGet();if(enabled&&(min(maxSpareSelectors,maxSelectors))){spare.incrementAndGet();}else s.close();}

