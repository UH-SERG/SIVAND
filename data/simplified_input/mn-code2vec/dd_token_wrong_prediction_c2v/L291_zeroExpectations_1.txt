
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/mimno__Mallet/src/cc/mallet/fst/semi_supervised/constraints/OneLabelGEConstraints_zeroExpectations.java
method_name = zeroExpectations
method_body = public void zeroExpectations() { for (ObjectCursor<OneLabelGEConstraint> cursor : constraints.values()) { cursor.value.expectation = new double[map.getNumLabels()]; } }
predict, score, loss = addExpectation, 0.27295219898223877, 17.47433853149414

Trace of simplified code(s):
{"time": "2021-02-24 07:25:37.379753", "score": "0.273", "loss": "17.4743", "code": "public void zeroExpectations() { for (ObjectCursor<OneLabelGEConstraint> cursor : constraints.values()) { cursor.value.expectation = new double[map.getNumLabels()]; } }", "n_tokens": 54, "n_pass": [1, 1, 1]}
{"time": "2021-02-24 07:25:40.384218", "score": "0.2761", "loss": "18.0722", "code": "public void zeroExpectations() { for (ObjectCursor<OneLabelGEConstraint> cursor :values()) { cursor.value.expectation = new double[map.getNumLabels()]; } }", "n_tokens": 51, "n_pass": [51, 2, 2]}
{"time": "2021-02-24 07:25:44.511803", "score": "0.3253", "loss": "16.7049", "code": "public void zeroExpectations() { for (ObjectCursor<OneLabelGEConstraint> cursor :values()) { cursor.expectation = new double[map.getNumLabels()]; } }", "n_tokens": 49, "n_pass": [102, 3, 3]}
{"time": "2021-02-24 07:25:49.801923", "score": "0.1732", "loss": "14.6583", "code": "public void zeroExpectations() { for (ObjectCursor<OneLabelGEConstraint> cursor :values()) { cursor.expectation = new double[map()]; } }", "n_tokens": 47, "n_pass": [108, 5, 4]}
{"time": "2021-02-24 07:25:55.017090", "score": "0.1732", "loss": "14.6583", "code": " void zeroExpectations() { for (ObjectCursor<OneLabelGEConstraint> cursor :values()) { cursor.expectation = new double[map()]; } }", "n_tokens": 46, "n_pass": [113, 7, 5]}
{"time": "2021-02-24 07:25:57.641659", "score": "0.1732", "loss": "14.6583", "code": "void zeroExpectations() { for (ObjectCursor<OneLabelGEConstraint> cursor :values()) { cursor.expectation = new double[map()]; } }", "n_tokens": 45, "n_pass": [114, 8, 6]}
{"time": "2021-02-24 07:26:01.012844", "score": "0.1732", "loss": "14.6583", "code": "void zeroExpectations(){ for (ObjectCursor<OneLabelGEConstraint> cursor :values()) { cursor.expectation = new double[map()]; } }", "n_tokens": 44, "n_pass": [120, 9, 7]}
{"time": "2021-02-24 07:26:13.879706", "score": "0.1732", "loss": "14.6583", "code": "void zeroExpectations(){ for(ObjectCursor<OneLabelGEConstraint> cursor :values()) { cursor.expectation = new double[map()]; } }", "n_tokens": 43, "n_pass": [184, 12, 8]}
{"time": "2021-02-24 07:26:16.525606", "score": "0.1732", "loss": "14.6583", "code": "void zeroExpectations(){ for(ObjectCursor<OneLabelGEConstraint>cursor :values()) { cursor.expectation = new double[map()]; } }", "n_tokens": 42, "n_pass": [189, 13, 9]}
{"time": "2021-02-24 07:26:19.129712", "score": "0.1732", "loss": "14.6583", "code": "void zeroExpectations(){ for(ObjectCursor<OneLabelGEConstraint>cursor:values()) { cursor.expectation = new double[map()]; } }", "n_tokens": 41, "n_pass": [191, 14, 10]}
{"time": "2021-02-24 07:26:21.778680", "score": "0.1732", "loss": "14.6583", "code": "void zeroExpectations(){ for(ObjectCursor<OneLabelGEConstraint>cursor:values()){ cursor.expectation = new double[map()]; } }", "n_tokens": 40, "n_pass": [197, 15, 11]}
{"time": "2021-02-24 07:26:24.418445", "score": "0.1732", "loss": "14.6583", "code": "void zeroExpectations(){ for(ObjectCursor<OneLabelGEConstraint>cursor:values()){cursor.expectation = new double[map()]; } }", "n_tokens": 39, "n_pass": [199, 16, 12]}
{"time": "2021-02-24 07:26:29.681602", "score": "0.1732", "loss": "14.6583", "code": "void zeroExpectations(){ for(ObjectCursor<OneLabelGEConstraint>cursor:values()){cursor.expectation= new double[map()]; } }", "n_tokens": 38, "n_pass": [203, 18, 13]}
{"time": "2021-02-24 07:26:32.286372", "score": "0.1732", "loss": "14.6583", "code": "void zeroExpectations(){ for(ObjectCursor<OneLabelGEConstraint>cursor:values()){cursor.expectation=new double[map()]; } }", "n_tokens": 37, "n_pass": [205, 19, 14]}
{"time": "2021-02-24 07:26:37.569961", "score": "0.1732", "loss": "14.6583", "code": "void zeroExpectations(){ for(ObjectCursor<OneLabelGEConstraint>cursor:values()){cursor.expectation=new double[map()];} }", "n_tokens": 36, "n_pass": [215, 21, 15]}
{"time": "2021-02-24 07:26:40.182568", "score": "0.1732", "loss": "14.6583", "code": "void zeroExpectations(){ for(ObjectCursor<OneLabelGEConstraint>cursor:values()){cursor.expectation=new double[map()];}}", "n_tokens": 35, "n_pass": [217, 22, 16]}
{"time": "2021-02-24 07:26:43.601288", "score": "0.1732", "loss": "14.6583", "code": "void zeroExpectations(){for(ObjectCursor<OneLabelGEConstraint>cursor:values()){cursor.expectation=new double[map()];}}", "n_tokens": 34, "n_pass": [225, 23, 17]}

Minimal simplified code:
void zeroExpectations(){for(ObjectCursor<OneLabelGEConstraint>cursor:values()){cursor.expectation=new double[map()];}}

