
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/mimno__Mallet/src/cc/mallet/topics/HierarchicalLDA_getNewLeaf.java
method_name = getNewLeaf
method_body = public NCRPNode getNewLeaf() { NCRPNode node = this; for (int l = level; l < numLevels - 1; l++) { node = node.addChild(); } return node; }
predict, score, loss = build, 0.5377991199493408, 17.471858978271484

Trace of simplified code(s):
{"time": "2021-02-24 07:14:26.850943", "score": "0.5378", "loss": "17.4719", "code": "public NCRPNode getNewLeaf() { NCRPNode node = this; for (int l = level; l < numLevels - 1; l++) { node = node.addChild(); } return node; }", "n_tokens": 68, "n_pass": [1, 1, 1]}
{"time": "2021-02-24 07:14:35.636693", "score": "0.3319", "loss": "18.0762", "code": "public NCRPNode getNewLeaf() { NCRPNode node = this; for (int l = level; l < numLevels; l++) { node = node.addChild(); } return node; }", "n_tokens": 64, "n_pass": [53, 4, 2]}
{"time": "2021-02-24 07:14:38.270810", "score": "0.4642", "loss": "17.8921", "code": "public NCRPNode getNewLeaf() { NCRPNode node = this; for (int l = level; l < numLevels; l++) {node.addChild(); } return node; }", "n_tokens": 59, "n_pass": [56, 5, 3]}
{"time": "2021-02-24 07:14:43.902477", "score": "0.5776", "loss": "18.1934", "code": "public NCRPNode getNewLeaf() { NCRPNode node = this; for (int level; l < numLevels; l++) {node.addChild(); } return node; }", "n_tokens": 55, "n_pass": [66, 7, 4]}
{"time": "2021-02-24 07:14:46.508738", "score": "0.5205", "loss": "18.4109", "code": "public NCRPNode getNewLeaf() { NCRPNode node = this; for (int level; l; l++) {node.addChild(); } return node; }", "n_tokens": 51, "n_pass": [68, 8, 5]}
{"time": "2021-02-24 07:14:52.492651", "score": "0.5917", "loss": "21.9653", "code": "public NCRPNode getNewLeaf() { NCRPNode node = this; for (int level; l; l++) {addChild(); } return node; }", "n_tokens": 49, "n_pass": [109, 10, 6]}
{"time": "2021-02-24 07:14:55.107063", "score": "0.596", "loss": "21.7658", "code": "public NCRPNode getNewLeaf() { NCRPNode node = this; for (int level; l; l++) {addChild(); } ; }", "n_tokens": 46, "n_pass": [113, 11, 7]}
{"time": "2021-02-24 07:14:57.712878", "score": "0.596", "loss": "21.7658", "code": "NCRPNode getNewLeaf() { NCRPNode node = this; for (int level; l; l++) {addChild(); } ; }", "n_tokens": 44, "n_pass": [115, 12, 8]}
{"time": "2021-02-24 07:15:08.584321", "score": "0.598", "loss": "21.8288", "code": "NCRPNode getNewLeaf() { NCRPNode node = this; for (int level;; l++) {addChild(); } ; }", "n_tokens": 42, "n_pass": [128, 16, 9]}
{"time": "2021-02-24 07:15:25.593527", "score": "0.598", "loss": "21.8288", "code": "NCRPNode getNewLeaf() { NCRPNode node = this; for (int level;;l++) {addChild(); } ; }", "n_tokens": 41, "n_pass": [190, 20, 10]}
{"time": "2021-02-24 07:15:28.211563", "score": "0.598", "loss": "21.8288", "code": "NCRPNode getNewLeaf() { NCRPNode node = this; for (int level;;l++){addChild(); } ; }", "n_tokens": 40, "n_pass": [195, 21, 11]}
{"time": "2021-02-24 07:15:30.842812", "score": "0.598", "loss": "21.8288", "code": "NCRPNode getNewLeaf() { NCRPNode node = this; for (int level;;l++){addChild();} ; }", "n_tokens": 39, "n_pass": [201, 22, 12]}
{"time": "2021-02-24 07:15:33.481961", "score": "0.598", "loss": "21.8288", "code": "NCRPNode getNewLeaf() { NCRPNode node = this; for (int level;;l++){addChild();} }", "n_tokens": 37, "n_pass": [203, 23, 13]}
{"time": "2021-02-24 07:15:37.264233", "score": "0.598", "loss": "21.8288", "code": "NCRPNode getNewLeaf(){ NCRPNode node = this; for (int level;;l++){addChild();} }", "n_tokens": 36, "n_pass": [210, 24, 14]}
{"time": "2021-02-24 07:15:39.898152", "score": "0.598", "loss": "21.8288", "code": "NCRPNode getNewLeaf(){NCRPNode node = this; for (int level;;l++){addChild();} }", "n_tokens": 35, "n_pass": [212, 25, 15]}
{"time": "2021-02-24 07:15:50.398626", "score": "0.598", "loss": "21.8288", "code": "NCRPNode getNewLeaf(){NCRPNode node= this; for (int level;;l++){addChild();} }", "n_tokens": 34, "n_pass": [216, 29, 16]}
{"time": "2021-02-24 07:15:53.024059", "score": "0.598", "loss": "21.8288", "code": "NCRPNode getNewLeaf(){NCRPNode node=this; for (int level;;l++){addChild();} }", "n_tokens": 33, "n_pass": [218, 30, 17]}
{"time": "2021-02-24 07:15:55.641772", "score": "0.598", "loss": "21.8288", "code": "NCRPNode getNewLeaf(){NCRPNode node=this;for (int level;;l++){addChild();} }", "n_tokens": 32, "n_pass": [221, 31, 18]}
{"time": "2021-02-24 07:15:58.285400", "score": "0.598", "loss": "21.8288", "code": "NCRPNode getNewLeaf(){NCRPNode node=this;for(int level;;l++){addChild();} }", "n_tokens": 31, "n_pass": [223, 32, 19]}
{"time": "2021-02-24 07:16:15.357657", "score": "0.414", "loss": "21.9947", "code": "NCRPNode getNewLeaf(){NCRPNode nodethis;for(int level;;l++){addChild();} }", "n_tokens": 30, "n_pass": [250, 38, 20]}
{"time": "2021-02-24 07:16:32.622479", "score": "0.414", "loss": "21.9947", "code": "NCRPNode getNewLeaf(){NCRPNode nodethis;for(int level;;l++){addChild();}}", "n_tokens": 29, "n_pass": [282, 44, 21]}

Minimal simplified code:
NCRPNode getNewLeaf(){NCRPNode nodethis;for(int level;;l++){addChild();}}

