
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/bcgit__bc-java/core/src/main/java/org/bouncycastle/crypto/tls/TlsSRPKeyExchange_processServerCredentials.java
method_name = processServerCredentials
method_body = public void processServerCredentials(TlsCredentials serverCredentials) throws IOException { if ((keyExchange == KeyExchangeAlgorithm.SRP) || !(serverCredentials instanceof TlsSignerCredentials)) { throw new TlsFatalAlert(AlertDescription.internal_error); } processServerCertificate(serverCredentials.getCertificate()); this.serverCredentials = (TlsSignerCredentials) serverCredentials; }
predict, score, loss = authenticate, 0.9862558245658875, 20.02729034423828

Trace of simplified code(s):
{"time": "2021-02-23 21:33:14.238218", "score": "0.9863", "loss": "20.0273", "code": "public void processServerCredentials(TlsCredentials serverCredentials) throws IOException { if ((keyExchange == KeyExchangeAlgorithm.SRP) || !(serverCredentials instanceof TlsSignerCredentials)) { throw new TlsFatalAlert(AlertDescription.internal_error); } processServerCertificate(serverCredentials.getCertificate()); this.serverCredentials = (TlsSignerCredentials) serverCredentials; }", "n_tokens": 86, "n_pass": [1, 1, 1]}
{"time": "2021-02-23 21:33:16.937509", "score": "0.9865", "loss": "19.721", "code": "public void processServerCredentials(TlsCredentials serverCredentials) throws IOException { if ((keyExchange == KeyExchangeAlgorithm.SRP) ) { throw new TlsFatalAlert(AlertDescription.internal_error); } processServerCertificate(serverCredentials.getCertificate()); this.serverCredentials = (TlsSignerCredentials) serverCredentials; }", "n_tokens": 75, "n_pass": [23, 2, 2]}
{"time": "2021-02-23 21:33:19.618271", "score": "0.9843", "loss": "19.7659", "code": "public void processServerCredentials(TlsCredentials serverCredentials) throws IOException { if ((keyExchange == KeyExchangeAlgorithm.SRP) ) { (AlertDescription.internal_error); } processServerCertificate(serverCredentials.getCertificate()); this.serverCredentials = (TlsSignerCredentials) serverCredentials; }", "n_tokens": 70, "n_pass": [46, 3, 3]}
{"time": "2021-02-23 21:33:22.325369", "score": "0.9831", "loss": "19.4493", "code": "public void processServerCredentials(TlsCredentials serverCredentials){ if ((keyExchange == KeyExchangeAlgorithm.SRP) ) { (AlertDescription.internal_error); } processServerCertificate(serverCredentials.getCertificate()); this.serverCredentials = (TlsSignerCredentials) serverCredentials; }", "n_tokens": 65, "n_pass": [55, 4, 4]}
{"time": "2021-02-23 21:33:25.026183", "score": "0.9819", "loss": "19.2735", "code": "public void processServerCredentials(TlsCredentials serverCredentials){ if ((keyExchange ==SRP) ) { (AlertDescription.internal_error); } processServerCertificate(serverCredentials.getCertificate()); this.serverCredentials = (TlsSignerCredentials) serverCredentials; }", "n_tokens": 62, "n_pass": [97, 5, 5]}
{"time": "2021-02-23 21:33:27.745799", "score": "0.982", "loss": "19.2838", "code": "public void processServerCredentials(TlsCredentials serverCredentials){ if ((keyExchange ==SRP) ) { (AlertDescriptionerror); } processServerCertificate(serverCredentials.getCertificate()); this.serverCredentials = (TlsSignerCredentials) serverCredentials; }", "n_tokens": 59, "n_pass": [101, 6, 6]}
{"time": "2021-02-23 21:33:30.455533", "score": "0.9952", "loss": "20.429", "code": "public void processServerCredentials(TlsCredentials serverCredentials){ if ((keyExchange ==SRP) ) { (AlertDescriptionerror); } processServerCertificate(serverCredentials.getCertificate());serverCredentials = (TlsSignerCredentials) serverCredentials; }", "n_tokens": 56, "n_pass": [107, 7, 7]}
{"time": "2021-02-23 21:33:33.570485", "score": "0.9952", "loss": "20.429", "code": "void processServerCredentials(TlsCredentials serverCredentials){ if ((keyExchange ==SRP) ) { (AlertDescriptionerror); } processServerCertificate(serverCredentials.getCertificate());serverCredentials = (TlsSignerCredentials) serverCredentials; }", "n_tokens": 54, "n_pass": [112, 8, 8]}
{"time": "2021-02-23 21:33:36.651453", "score": "0.9945", "loss": "20.6794", "code": "void processServerCredentials(TlsCredentials serverCredentials){ if ((keyExchangeSRP) ) { (AlertDescriptionerror); } processServerCertificate(serverCredentials.getCertificate());serverCredentials = (TlsSignerCredentials) serverCredentials; }", "n_tokens": 51, "n_pass": [120, 9, 9]}
{"time": "2021-02-23 21:33:42.895751", "score": "0.9944", "loss": "20.6306", "code": "void processServerCredentials(TlsCredentials serverCredentials){ if ((SRP) ) { (AlertDescriptionerror); } processServerCertificate(serverCredentials.getCertificate());serverCredentials = (TlsSignerCredentials) serverCredentials; }", "n_tokens": 50, "n_pass": [178, 10, 10]}
{"time": "2021-02-23 21:33:45.576416", "score": "0.9944", "loss": "20.6306", "code": "void processServerCredentials(TlsCredentials serverCredentials){ if ((SRP)) { (AlertDescriptionerror); } processServerCertificate(serverCredentials.getCertificate());serverCredentials = (TlsSignerCredentials) serverCredentials; }", "n_tokens": 49, "n_pass": [181, 11, 11]}
{"time": "2021-02-23 21:33:48.264334", "score": "0.9944", "loss": "20.6306", "code": "void processServerCredentials(TlsCredentials serverCredentials){ if ((SRP)){ (AlertDescriptionerror); } processServerCertificate(serverCredentials.getCertificate());serverCredentials = (TlsSignerCredentials) serverCredentials; }", "n_tokens": 48, "n_pass": [183, 12, 12]}
{"time": "2021-02-23 21:33:50.959131", "score": "0.9944", "loss": "20.6306", "code": "void processServerCredentials(TlsCredentials serverCredentials){ if ((SRP)){(AlertDescriptionerror); } processServerCertificate(serverCredentials.getCertificate());serverCredentials = (TlsSignerCredentials) serverCredentials; }", "n_tokens": 47, "n_pass": [185, 13, 13]}
{"time": "2021-02-23 21:33:53.637869", "score": "0.9944", "loss": "20.6221", "code": "void processServerCredentials(TlsCredentials serverCredentials){ if ((SRP)){(error); } processServerCertificate(serverCredentials.getCertificate());serverCredentials = (TlsSignerCredentials) serverCredentials; }", "n_tokens": 46, "n_pass": [187, 14, 14]}
{"time": "2021-02-23 21:33:56.335238", "score": "0.9945", "loss": "20.5085", "code": "void processServerCredentials(TlsCredentials serverCredentials){ if ((SRP)){(error); }(serverCredentials.getCertificate());serverCredentials = (TlsSignerCredentials) serverCredentials; }", "n_tokens": 44, "n_pass": [191, 15, 15]}
{"time": "2021-02-23 21:33:58.987053", "score": "0.9946", "loss": "20.723", "code": "void processServerCredentials(TlsCredentials serverCredentials){ if ((SRP)){(error); }(serverCredentials());serverCredentials = (TlsSignerCredentials) serverCredentials; }", "n_tokens": 42, "n_pass": [193, 16, 16]}
{"time": "2021-02-23 21:34:01.665710", "score": "0.9947", "loss": "20.7244", "code": "void processServerCredentials(TlsCredentials serverCredentials){ if ((SRP)){(error); }(serverCredentials);serverCredentials = (TlsSignerCredentials) serverCredentials; }", "n_tokens": 40, "n_pass": [194, 17, 17]}
{"time": "2021-02-23 21:34:05.197442", "score": "0.9947", "loss": "20.7244", "code": "void processServerCredentials(TlsCredentials serverCredentials){if ((SRP)){(error); }(serverCredentials);serverCredentials = (TlsSignerCredentials) serverCredentials; }", "n_tokens": 39, "n_pass": [211, 18, 18]}
{"time": "2021-02-23 21:34:07.873793", "score": "0.9947", "loss": "20.7244", "code": "void processServerCredentials(TlsCredentials serverCredentials){if((SRP)){(error); }(serverCredentials);serverCredentials = (TlsSignerCredentials) serverCredentials; }", "n_tokens": 38, "n_pass": [213, 19, 19]}
{"time": "2021-02-23 21:34:14.519120", "score": "0.9947", "loss": "20.7244", "code": "void processServerCredentials(TlsCredentials serverCredentials){if((SRP)){(error);}(serverCredentials);serverCredentials = (TlsSignerCredentials) serverCredentials; }", "n_tokens": 37, "n_pass": [264, 20, 20]}
{"time": "2021-02-23 21:34:17.615456", "score": "0.9947", "loss": "20.7244", "code": "void processServerCredentials(TlsCredentials serverCredentials){if((SRP)){(error);}(serverCredentials);serverCredentials= (TlsSignerCredentials) serverCredentials; }", "n_tokens": 36, "n_pass": [270, 21, 21]}
{"time": "2021-02-23 21:34:20.300417", "score": "0.9947", "loss": "20.7244", "code": "void processServerCredentials(TlsCredentials serverCredentials){if((SRP)){(error);}(serverCredentials);serverCredentials=(TlsSignerCredentials) serverCredentials; }", "n_tokens": 35, "n_pass": [272, 22, 22]}
{"time": "2021-02-23 21:34:22.979177", "score": "0.9947", "loss": "20.7244", "code": "void processServerCredentials(TlsCredentials serverCredentials){if((SRP)){(error);}(serverCredentials);serverCredentials=(TlsSignerCredentials)serverCredentials; }", "n_tokens": 34, "n_pass": [276, 23, 23]}
{"time": "2021-02-23 21:34:25.654871", "score": "0.9947", "loss": "20.8393", "code": "void processServerCredentials(TlsCredentials serverCredentials){if((SRP)){(error);}(serverCredentials);serverCredentials=(TlsSignerCredentials); }", "n_tokens": 33, "n_pass": [277, 24, 24]}
{"time": "2021-02-23 21:34:28.330044", "score": "0.9947", "loss": "20.8393", "code": "void processServerCredentials(TlsCredentials serverCredentials){if((SRP)){(error);}(serverCredentials);serverCredentials=(TlsSignerCredentials);}", "n_tokens": 32, "n_pass": [279, 25, 25]}
{"time": "2021-02-23 21:34:32.283112", "score": "0.9852", "loss": "21.0455", "code": "void processServerCredentials(TlsCredentials serverCredentials){if((SRP)){(error);}(serverCredentials);serverCredentials(TlsSignerCredentials);}", "n_tokens": 31, "n_pass": [307, 26, 26]}
{"time": "2021-02-23 21:34:34.972968", "score": "0.9903", "loss": "20.8889", "code": "void processServerCredentials(TlsCredentials serverCredentials){if((SRP)){(error);}(serverCredentials);serverCredentials();}", "n_tokens": 30, "n_pass": [309, 27, 27]}

Minimal simplified code:
void processServerCredentials(TlsCredentials serverCredentials){if((SRP)){(error);}(serverCredentials);serverCredentials();}

