
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/amazon-archives__kinesis-storm-spout/src/main/java/com/amazonaws/services/kinesis/stormspout/state/zookeeper/ZookeeperStateManager_rebalance.java
method_name = rebalance
method_body = @Override public void rebalance(final int newTaskIndex, final int newTotalNumTasks) { checkState(active, "Cannot rebalance if state is not active (a ZK connection" + " is necessary)."); this.taskIndex = newTaskIndex; this.totalNumTasks = newTotalNumTasks; commitShardStates(); bootstrapStateFromZookeeper(); }
predict, score, loss = onData, 0.16761061549186707, 13.89502239227295

Trace of simplified code(s):
{"time": "2021-02-23 19:14:35.073774", "score": "0.1676", "loss": "13.895", "code": "@Override public void rebalance(final int newTaskIndex, final int newTotalNumTasks) { checkState(active, \"Cannot rebalance if state is not active (a ZK connection\" + \" is necessary).\"); this.taskIndex = newTaskIndex; this.totalNumTasks = newTotalNumTasks; commitShardStates(); bootstrapStateFromZookeeper(); }", "n_tokens": 95, "n_pass": [1, 1, 1]}
{"time": "2021-02-23 19:14:38.150751", "score": "0.1676", "loss": "13.895", "code": "@Override public void rebalance(final int newTaskIndex, final int newTotalNumTasks) { checkState(active, \"Cannot rebalance  ZK connection\" + \" is necessary).\"); this.taskIndex = newTaskIndex; this.totalNumTasks = newTotalNumTasks; commitShardStates(); bootstrapStateFromZookeeper(); }", "n_tokens": 83, "n_pass": [23, 2, 2]}
{"time": "2021-02-23 19:14:54.193032", "score": "0.1538", "loss": "13.9242", "code": "@Override public void rebalance(final int newTaskIndex, final int newTotalNumTasks) { checkState(active, \"Cannot rebalance  ZK connection\" + \" is necessary).\"); this.taskIndex = newTaskIndex; this.totalNumTasks = newTotalNumTasks;bootstrapStateFromZookeeper(); }", "n_tokens": 77, "n_pass": [50, 8, 3]}
{"time": "2021-02-23 19:15:15.940426", "score": "0.1538", "loss": "13.9242", "code": "@Override public void rebalance(final int newTaskIndex, final int newTotalNumTasks) { checkState(active, \"Cannot ZK connection\" + \" is necessary).\"); this.taskIndex = newTaskIndex; this.totalNumTasks = newTotalNumTasks;bootstrapStateFromZookeeper(); }", "n_tokens": 74, "n_pass": [102, 16, 4]}
{"time": "2021-02-23 19:15:18.599825", "score": "0.1538", "loss": "13.9242", "code": "@Override public void rebalance(final int newTaskIndex, final int newTotalNumTasks) { checkState(active, \"Cannotconnection\" + \" is necessary).\"); this.taskIndex = newTaskIndex; this.totalNumTasks = newTotalNumTasks;bootstrapStateFromZookeeper(); }", "n_tokens": 71, "n_pass": [103, 17, 5]}
{"time": "2021-02-23 19:15:52.570748", "score": "0.1538", "loss": "13.9242", "code": "@Override public void rebalance(final int newTaskIndex, final int newTotalNumTasks){ checkState(active, \"Cannotconnection\" + \" is necessary).\"); this.taskIndex = newTaskIndex; this.totalNumTasks = newTotalNumTasks;bootstrapStateFromZookeeper(); }", "n_tokens": 70, "n_pass": [176, 28, 6]}
{"time": "2021-02-23 19:15:55.258897", "score": "0.1538", "loss": "13.9242", "code": "@Override public void rebalance(final int newTaskIndex, final int newTotalNumTasks){checkState(active, \"Cannotconnection\" + \" is necessary).\"); this.taskIndex = newTaskIndex; this.totalNumTasks = newTotalNumTasks;bootstrapStateFromZookeeper(); }", "n_tokens": 69, "n_pass": [178, 29, 7]}
{"time": "2021-02-23 19:16:19.650014", "score": "0.1538", "loss": "13.9242", "code": "@Override  void rebalance(final int newTaskIndex, final int newTotalNumTasks){checkState(active, \"Cannotconnection\" + \" is necessary).\"); this.taskIndex = newTaskIndex; this.totalNumTasks = newTotalNumTasks;bootstrapStateFromZookeeper(); }", "n_tokens": 68, "n_pass": [205, 38, 8]}
{"time": "2021-02-23 19:16:22.306416", "score": "0.1538", "loss": "13.9242", "code": "@Override void rebalance(final int newTaskIndex, final int newTotalNumTasks){checkState(active, \"Cannotconnection\" + \" is necessary).\"); this.taskIndex = newTaskIndex; this.totalNumTasks = newTotalNumTasks;bootstrapStateFromZookeeper(); }", "n_tokens": 67, "n_pass": [206, 39, 9]}
{"time": "2021-02-23 19:16:25.818141", "score": "0.1538", "loss": "13.9242", "code": "@Override void rebalance( int newTaskIndex, final int newTotalNumTasks){checkState(active, \"Cannotconnection\" + \" is necessary).\"); this.taskIndex = newTaskIndex; this.totalNumTasks = newTotalNumTasks;bootstrapStateFromZookeeper(); }", "n_tokens": 66, "n_pass": [211, 40, 10]}
{"time": "2021-02-23 19:16:28.480760", "score": "0.1538", "loss": "13.9242", "code": "@Override void rebalance(int newTaskIndex, final int newTotalNumTasks){checkState(active, \"Cannotconnection\" + \" is necessary).\"); this.taskIndex = newTaskIndex; this.totalNumTasks = newTotalNumTasks;bootstrapStateFromZookeeper(); }", "n_tokens": 65, "n_pass": [212, 41, 11]}
{"time": "2021-02-23 19:16:31.162746", "score": "0.1538", "loss": "13.9242", "code": "@Override void rebalance(int newTaskIndex,final int newTotalNumTasks){checkState(active, \"Cannotconnection\" + \" is necessary).\"); this.taskIndex = newTaskIndex; this.totalNumTasks = newTotalNumTasks;bootstrapStateFromZookeeper(); }", "n_tokens": 64, "n_pass": [217, 42, 12]}
{"time": "2021-02-23 19:16:33.825618", "score": "0.1538", "loss": "13.9242", "code": "@Override void rebalance(int newTaskIndex, int newTotalNumTasks){checkState(active, \"Cannotconnection\" + \" is necessary).\"); this.taskIndex = newTaskIndex; this.totalNumTasks = newTotalNumTasks;bootstrapStateFromZookeeper(); }", "n_tokens": 63, "n_pass": [218, 43, 13]}
{"time": "2021-02-23 19:16:36.474995", "score": "0.1538", "loss": "13.9242", "code": "@Override void rebalance(int newTaskIndex,int newTotalNumTasks){checkState(active, \"Cannotconnection\" + \" is necessary).\"); this.taskIndex = newTaskIndex; this.totalNumTasks = newTotalNumTasks;bootstrapStateFromZookeeper(); }", "n_tokens": 62, "n_pass": [219, 44, 14]}
{"time": "2021-02-23 19:17:05.708318", "score": "0.1538", "loss": "13.9242", "code": "@Override void rebalance(int newTaskIndex,int newTotalNumTasks){checkState(active,\"Cannotconnection\" + \" is necessary).\"); this.taskIndex = newTaskIndex; this.totalNumTasks = newTotalNumTasks;bootstrapStateFromZookeeper(); }", "n_tokens": 61, "n_pass": [308, 52, 15]}
{"time": "2021-02-23 19:17:13.708608", "score": "0.1538", "loss": "13.9242", "code": "@Override void rebalance(int newTaskIndex,int newTotalNumTasks){checkState(active,\"Cannotconnection\"+ \" is necessary).\"); this.taskIndex = newTaskIndex; this.totalNumTasks = newTotalNumTasks;bootstrapStateFromZookeeper(); }", "n_tokens": 60, "n_pass": [312, 55, 16]}
{"time": "2021-02-23 19:17:16.389506", "score": "0.1538", "loss": "13.9242", "code": "@Override void rebalance(int newTaskIndex,int newTotalNumTasks){checkState(active,\"Cannotconnection\"+\" is necessary).\"); this.taskIndex = newTaskIndex; this.totalNumTasks = newTotalNumTasks;bootstrapStateFromZookeeper(); }", "n_tokens": 59, "n_pass": [314, 56, 17]}
{"time": "2021-02-23 19:17:19.058071", "score": "0.1538", "loss": "13.9242", "code": "@Override void rebalance(int newTaskIndex,int newTotalNumTasks){checkState(active,\"Cannotconnection\"+\"is necessary).\"); this.taskIndex = newTaskIndex; this.totalNumTasks = newTotalNumTasks;bootstrapStateFromZookeeper(); }", "n_tokens": 58, "n_pass": [316, 57, 18]}
{"time": "2021-02-23 19:17:24.398151", "score": "0.1538", "loss": "13.9242", "code": "@Override void rebalance(int newTaskIndex,int newTotalNumTasks){checkState(active,\"Cannotconnection\"+\"isnecessary).\"); this.taskIndex = newTaskIndex; this.totalNumTasks = newTotalNumTasks;bootstrapStateFromZookeeper(); }", "n_tokens": 57, "n_pass": [318, 59, 19]}
{"time": "2021-02-23 19:17:29.715994", "score": "0.1538", "loss": "13.9242", "code": "@Override void rebalance(int newTaskIndex,int newTotalNumTasks){checkState(active,\"Cannotconnection\"+\"isnecessary.\"); this.taskIndex = newTaskIndex; this.totalNumTasks = newTotalNumTasks;bootstrapStateFromZookeeper(); }", "n_tokens": 56, "n_pass": [320, 61, 20]}
{"time": "2021-02-23 19:17:32.370665", "score": "0.1538", "loss": "13.9242", "code": "@Override void rebalance(int newTaskIndex,int newTotalNumTasks){checkState(active,\"Cannotconnection\"+\"isnecessary\"); this.taskIndex = newTaskIndex; this.totalNumTasks = newTotalNumTasks;bootstrapStateFromZookeeper(); }", "n_tokens": 55, "n_pass": [321, 62, 21]}
{"time": "2021-02-23 19:17:35.026979", "score": "0.1538", "loss": "13.9242", "code": "@Override void rebalance(int newTaskIndex,int newTotalNumTasks){checkState(active,\"Cannotconnection\"+\"isnecessary\");this.taskIndex = newTaskIndex; this.totalNumTasks = newTotalNumTasks;bootstrapStateFromZookeeper(); }", "n_tokens": 54, "n_pass": [325, 63, 22]}
{"time": "2021-02-23 19:17:40.345240", "score": "0.1538", "loss": "13.9242", "code": "@Override void rebalance(int newTaskIndex,int newTotalNumTasks){checkState(active,\"Cannotconnection\"+\"isnecessary\");this.taskIndex= newTaskIndex; this.totalNumTasks = newTotalNumTasks;bootstrapStateFromZookeeper(); }", "n_tokens": 53, "n_pass": [329, 65, 23]}
{"time": "2021-02-23 19:17:43.016524", "score": "0.1538", "loss": "13.9242", "code": "@Override void rebalance(int newTaskIndex,int newTotalNumTasks){checkState(active,\"Cannotconnection\"+\"isnecessary\");this.taskIndex=newTaskIndex; this.totalNumTasks = newTotalNumTasks;bootstrapStateFromZookeeper(); }", "n_tokens": 52, "n_pass": [331, 66, 24]}
{"time": "2021-02-23 19:17:45.672632", "score": "0.1538", "loss": "13.9242", "code": "@Override void rebalance(int newTaskIndex,int newTotalNumTasks){checkState(active,\"Cannotconnection\"+\"isnecessary\");this.taskIndex=newTaskIndex;this.totalNumTasks = newTotalNumTasks;bootstrapStateFromZookeeper(); }", "n_tokens": 51, "n_pass": [334, 67, 25]}
{"time": "2021-02-23 19:17:51.006164", "score": "0.1538", "loss": "13.9242", "code": "@Override void rebalance(int newTaskIndex,int newTotalNumTasks){checkState(active,\"Cannotconnection\"+\"isnecessary\");this.taskIndex=newTaskIndex;this.totalNumTasks= newTotalNumTasks;bootstrapStateFromZookeeper(); }", "n_tokens": 50, "n_pass": [338, 69, 26]}
{"time": "2021-02-23 19:17:53.659683", "score": "0.1538", "loss": "13.9242", "code": "@Override void rebalance(int newTaskIndex,int newTotalNumTasks){checkState(active,\"Cannotconnection\"+\"isnecessary\");this.taskIndex=newTaskIndex;this.totalNumTasks=newTotalNumTasks;bootstrapStateFromZookeeper(); }", "n_tokens": 49, "n_pass": [340, 70, 27]}
{"time": "2021-02-23 19:17:58.986955", "score": "0.1538", "loss": "13.9242", "code": "@Override void rebalance(int newTaskIndex,int newTotalNumTasks){checkState(active,\"Cannotconnection\"+\"isnecessary\");this.taskIndex=newTaskIndex;this.totalNumTasks=newTotalNumTasks;bootstrapStateFromZookeeper();}", "n_tokens": 48, "n_pass": [347, 72, 28]}

Minimal simplified code:
@Override void rebalance(int newTaskIndex,int newTotalNumTasks){checkState(active,"Cannotconnection"+"isnecessary");this.taskIndex=newTaskIndex;this.totalNumTasks=newTotalNumTasks;bootstrapStateFromZookeeper();}

