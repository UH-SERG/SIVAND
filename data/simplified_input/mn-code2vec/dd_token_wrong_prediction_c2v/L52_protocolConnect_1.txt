
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/javaee__javamail/mbox/src/main/java/com/sun/mail/mbox/MboxStore_protocolConnect.java
method_name = protocolConnect
method_body = protected boolean protocolConnect(String host, int port, String user, String passwd) throws MessagingException { if (passwd != null) throw new AuthenticationFailedException("mbox does not allow passwords"); return true; }
predict, score, loss = login, 0.6535376906394958, 25.918376922607422

Trace of simplified code(s):
{"time": "2021-02-24 14:59:25.778272", "score": "0.6535", "loss": "25.9184", "code": "protected boolean protocolConnect(String host, int port, String user, String passwd) throws MessagingException { if (passwd != null) throw new AuthenticationFailedException(\"mbox does not allow passwords\"); return true; }", "n_tokens": 69, "n_pass": [1, 1, 1]}
{"time": "2021-02-24 14:59:28.779231", "score": "0.5226", "loss": "25.2027", "code": "protected boolean protocolConnect(String  port, String user, String passwd) throws MessagingException { if (passwd != null) throw new AuthenticationFailedException(\"mbox does not allow passwords\"); return true; }", "n_tokens": 65, "n_pass": [46, 2, 2]}
{"time": "2021-02-24 14:59:34.001914", "score": "0.7347", "loss": "24.6922", "code": "protected boolean protocolConnect(String  port, String user, String passwd) throws MessagingException { if (passwdnull) throw new AuthenticationFailedException(\"mbox does not allow passwords\"); return true; }", "n_tokens": 61, "n_pass": [52, 4, 3]}
{"time": "2021-02-24 14:59:36.613822", "score": "0.7347", "loss": "24.6922", "code": "protected boolean protocolConnect(String  port, String user, String passwd) throws MessagingException { if (passwdnull) throw new AuthenticationFailedException(\"mbox does \"); return true; }", "n_tokens": 56, "n_pass": [56, 5, 4]}
{"time": "2021-02-24 14:59:42.251248", "score": "0.6865", "loss": "23.4261", "code": "protected boolean protocolConnect(String  port, String user, String passwd) throws MessagingException { if (passwdnull) throw new AuthenticationFailedException(\"mbox does \"); ; }", "n_tokens": 53, "n_pass": [98, 7, 5]}
{"time": "2021-02-24 14:59:44.863014", "score": "0.6865", "loss": "23.4261", "code": "boolean protocolConnect(String  port, String user, String passwd) throws MessagingException { if (passwdnull) throw new AuthenticationFailedException(\"mbox does \"); ; }", "n_tokens": 51, "n_pass": [100, 8, 6]}
{"time": "2021-02-24 14:59:47.857996", "score": "0.6732", "loss": "21.9781", "code": "boolean protocolConnect(String  port, String user, String passwd) throws MessagingException { if (passwdnull) new AuthenticationFailedException(\"mbox does \"); ; }", "n_tokens": 49, "n_pass": [117, 9, 7]}
{"time": "2021-02-24 14:59:50.463984", "score": "0.7397", "loss": "24.2276", "code": "boolean protocolConnect(String  port, String user, String passwd) throws MessagingException { if (passwdnull) AuthenticationFailedException(\"mbox does \"); ; }", "n_tokens": 47, "n_pass": [118, 10, 8]}
{"time": "2021-02-24 14:59:53.052012", "score": "0.5079", "loss": "19.9154", "code": "boolean protocolConnect(String  port, String user, String passwd) throws MessagingException { if (passwdnull)(\"mbox does \"); ; }", "n_tokens": 45, "n_pass": [119, 11, 9]}
{"time": "2021-02-24 14:59:55.690296", "score": "0.5028", "loss": "19.8074", "code": "boolean protocolConnect(String  port, String user, String passwd) throws MessagingException { if (passwdnull)(\"does \"); ; }", "n_tokens": 43, "n_pass": [121, 12, 10]}
{"time": "2021-02-24 15:00:04.058807", "score": "0.5071", "loss": "19.9021", "code": "boolean protocolConnect(String  port, String user, String passwd) throws MessagingException { if (passwdnull)(\" \"); ; }", "n_tokens": 42, "n_pass": [182, 13, 11]}
{"time": "2021-02-24 15:00:06.645292", "score": "0.5061", "loss": "19.9035", "code": "boolean protocolConnect(String  port, String user, String passwd) throws MessagingException { if (passwdnull)(\"\"); ; }", "n_tokens": 41, "n_pass": [183, 14, 12]}
{"time": "2021-02-24 15:00:09.262168", "score": "0.5061", "loss": "19.9035", "code": "boolean protocolConnect(String  port, String user, String passwd) throws MessagingException { if (passwdnull)(\"\"); }", "n_tokens": 39, "n_pass": [185, 15, 13]}
{"time": "2021-02-24 15:00:12.617326", "score": "0.5061", "loss": "19.9035", "code": "boolean protocolConnect(String port, String user, String passwd) throws MessagingException { if (passwdnull)(\"\"); }", "n_tokens": 38, "n_pass": [192, 16, 14]}
{"time": "2021-02-24 15:00:15.233626", "score": "0.5061", "loss": "19.9035", "code": "boolean protocolConnect(String port,String user, String passwd) throws MessagingException { if (passwdnull)(\"\"); }", "n_tokens": 37, "n_pass": [196, 17, 15]}
{"time": "2021-02-24 15:00:17.814934", "score": "0.5061", "loss": "19.9035", "code": "boolean protocolConnect(String port,String user,String passwd) throws MessagingException { if (passwdnull)(\"\"); }", "n_tokens": 36, "n_pass": [201, 18, 16]}
{"time": "2021-02-24 15:00:20.412395", "score": "0.5061", "loss": "19.9035", "code": "boolean protocolConnect(String port,String user,String passwd)throws MessagingException { if (passwdnull)(\"\"); }", "n_tokens": 35, "n_pass": [206, 19, 17]}
{"time": "2021-02-24 15:00:23.025816", "score": "0.5061", "loss": "19.9035", "code": "boolean protocolConnect(String port,String user,String passwd)throws MessagingException{ if (passwdnull)(\"\"); }", "n_tokens": 34, "n_pass": [210, 20, 18]}
{"time": "2021-02-24 15:00:25.615769", "score": "0.5061", "loss": "19.9035", "code": "boolean protocolConnect(String port,String user,String passwd)throws MessagingException{if (passwdnull)(\"\"); }", "n_tokens": 33, "n_pass": [212, 21, 19]}
{"time": "2021-02-24 15:00:28.586218", "score": "0.5061", "loss": "19.9035", "code": "boolean protocolConnect(String port,String user,String passwd)throws MessagingException{if(passwdnull)(\"\"); }", "n_tokens": 32, "n_pass": [214, 22, 20]}
{"time": "2021-02-24 15:00:31.177189", "score": "0.4985", "loss": "19.8934", "code": "boolean protocolConnect(String port,String user,String passwd)throws MessagingException{if(null)(\"\"); }", "n_tokens": 31, "n_pass": [216, 23, 21]}
{"time": "2021-02-24 15:00:35.280199", "score": "0.4985", "loss": "19.8934", "code": "boolean protocolConnect(String port,String user,String passwd)throws MessagingException{if(null)(\"\");}", "n_tokens": 30, "n_pass": [252, 24, 22]}

Minimal simplified code:
boolean protocolConnect(String port,String user,String passwd)throws MessagingException{if(null)("");}

