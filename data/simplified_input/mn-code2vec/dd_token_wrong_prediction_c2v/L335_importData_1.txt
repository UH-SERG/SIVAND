
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/mucommander__mucommander/src/main/java/com/mucommander/ui/theme/ThemeData_importData.java
method_name = importData
method_body = public void importData(ThemeData data) { int i; for (i = 0; i < COLOR_COUNT; i++) setColor(i, data.colors[i]); for (i = 0; i < FONT_COUNT; i++) setFont(i, data.fonts[i]); }
predict, score, loss = changeStyle, 0.36054959893226624, 13.04533576965332

Trace of simplified code(s):
{"time": "2021-02-24 11:28:13.601147", "score": "0.3657", "loss": "13.4996", "code": "public void importData(ThemeData data) { int i; for (i = 0; i < COLOR_COUNT; i++) setColor(i, data.colors[i]); for (i = 0; i < FONT_COUNT; i++) setFont(i, data.fonts[i]); }", "n_tokens": 95, "n_pass": [1, 1, 1]}
{"time": "2021-02-24 11:28:16.874872", "score": "0.2738", "loss": "12.4815", "code": "public void importData(ThemeData data) { int i; for (i = 0; i; i++) setColor(i, data.colors[i]); for (i = 0; i < FONT_COUNT; i++) setFont(i, data.fonts[i]); }", "n_tokens": 89, "n_pass": [49, 2, 2]}
{"time": "2021-02-24 11:28:22.443992", "score": "0.4149", "loss": "13.045", "code": "public void importData(ThemeData data) { int i; for (i = 0; i; i++) setColor(data.colors[i]); for (i = 0; i < FONT_COUNT; i++) setFont(i, data.fonts[i]); }", "n_tokens": 86, "n_pass": [97, 4, 3]}
{"time": "2021-02-24 11:28:27.971216", "score": "0.4197", "loss": "12.9813", "code": "public void importData(ThemeData data) { int i; for (i = 0; i; i++) setColor(data.colors[i]); for ( 0; i < FONT_COUNT; i++) setFont(i, data.fonts[i]); }", "n_tokens": 83, "n_pass": [102, 6, 4]}
{"time": "2021-02-24 11:28:30.798070", "score": "0.4047", "loss": "12.374", "code": "public void importData(ThemeData data) { int i; for (i = 0; i; i++) setColor(data.colors[i]); for ( 0; i < FONT_COUNT; i++) setFont(i.fonts[i]); }", "n_tokens": 80, "n_pass": [110, 7, 5]}
{"time": "2021-02-24 11:28:33.544050", "score": "0.4047", "loss": "12.374", "code": "void importData(ThemeData data) { int i; for (i = 0; i; i++) setColor(data.colors[i]); for ( 0; i < FONT_COUNT; i++) setFont(i.fonts[i]); }", "n_tokens": 78, "n_pass": [114, 8, 6]}
{"time": "2021-02-24 11:28:36.305525", "score": "0.459", "loss": "12.8551", "code": "void importData(ThemeData data) { int i; for (i ; i; i++) setColor(data.colors[i]); for ( 0; i < FONT_COUNT; i++) setFont(i.fonts[i]); }", "n_tokens": 75, "n_pass": [122, 9, 7]}
{"time": "2021-02-24 11:28:39.081573", "score": "0.3172", "loss": "13.0679", "code": "void importData(ThemeData data) { int i; for (i ; i; i++) setColor(data.colors); for ( 0; i < FONT_COUNT; i++) setFont(i.fonts[i]); }", "n_tokens": 72, "n_pass": [128, 10, 8]}
{"time": "2021-02-24 11:28:52.856558", "score": "0.343", "loss": "12.8447", "code": "void importData(ThemeData data) { int i; for (i ; i; i++) setColor(data); for ( 0; i < FONT_COUNT; i++) setFont(i.fonts[i]); }", "n_tokens": 70, "n_pass": [206, 13, 9]}
{"time": "2021-02-24 11:28:55.595270", "score": "0.331", "loss": "12.9086", "code": "void importData(ThemeData data) { int i; for (i ; i; i++) setColor(data); for (; i < FONT_COUNT; i++) setFont(i.fonts[i]); }", "n_tokens": 68, "n_pass": [210, 14, 10]}
{"time": "2021-02-24 11:29:01.080116", "score": "0.3314", "loss": "12.8993", "code": "void importData(ThemeData data) { int i; for (i ; i; i++) setColor(data); for (; i < FONT_COUNT; i) setFont(i.fonts[i]); }", "n_tokens": 66, "n_pass": [217, 16, 11]}
{"time": "2021-02-24 11:29:07.536062", "score": "0.3314", "loss": "12.8993", "code": "void importData(ThemeData data){ int i; for (i ; i; i++) setColor(data); for (; i < FONT_COUNT; i) setFont(i.fonts[i]); }", "n_tokens": 65, "n_pass": [233, 18, 12]}
{"time": "2021-02-24 11:29:10.275598", "score": "0.3314", "loss": "12.8993", "code": "void importData(ThemeData data){int i; for (i ; i; i++) setColor(data); for (; i < FONT_COUNT; i) setFont(i.fonts[i]); }", "n_tokens": 64, "n_pass": [235, 19, 13]}
{"time": "2021-02-24 11:29:12.996520", "score": "0.3377", "loss": "12.9734", "code": "void importData(ThemeData data){ i; for (i ; i; i++) setColor(data); for (; i < FONT_COUNT; i) setFont(i.fonts[i]); }", "n_tokens": 63, "n_pass": [236, 20, 14]}
{"time": "2021-02-24 11:29:15.719653", "score": "0.3377", "loss": "12.9734", "code": "void importData(ThemeData data){i; for (i ; i; i++) setColor(data); for (; i < FONT_COUNT; i) setFont(i.fonts[i]); }", "n_tokens": 62, "n_pass": [237, 21, 15]}
{"time": "2021-02-24 11:29:18.442018", "score": "0.3349", "loss": "12.9692", "code": "void importData(ThemeData data){; for (i ; i; i++) setColor(data); for (; i < FONT_COUNT; i) setFont(i.fonts[i]); }", "n_tokens": 61, "n_pass": [238, 22, 16]}
{"time": "2021-02-24 11:29:21.161839", "score": "0.3349", "loss": "12.9692", "code": "void importData(ThemeData data){ for (i ; i; i++) setColor(data); for (; i < FONT_COUNT; i) setFont(i.fonts[i]); }", "n_tokens": 60, "n_pass": [239, 23, 17]}
{"time": "2021-02-24 11:29:23.878861", "score": "0.3349", "loss": "12.9692", "code": "void importData(ThemeData data){for (i ; i; i++) setColor(data); for (; i < FONT_COUNT; i) setFont(i.fonts[i]); }", "n_tokens": 59, "n_pass": [240, 24, 18]}
{"time": "2021-02-24 11:29:26.608223", "score": "0.3349", "loss": "12.9692", "code": "void importData(ThemeData data){for(i ; i; i++) setColor(data); for (; i < FONT_COUNT; i) setFont(i.fonts[i]); }", "n_tokens": 58, "n_pass": [242, 25, 19]}
{"time": "2021-02-24 11:29:29.318598", "score": "0.3333", "loss": "12.9622", "code": "void importData(ThemeData data){for( ; i; i++) setColor(data); for (; i < FONT_COUNT; i) setFont(i.fonts[i]); }", "n_tokens": 57, "n_pass": [244, 26, 20]}
{"time": "2021-02-24 11:29:32.033167", "score": "0.3333", "loss": "12.9622", "code": "void importData(ThemeData data){for(; i; i++) setColor(data); for (; i < FONT_COUNT; i) setFont(i.fonts[i]); }", "n_tokens": 56, "n_pass": [245, 27, 21]}
{"time": "2021-02-24 11:29:34.753745", "score": "0.3333", "loss": "12.9622", "code": "void importData(ThemeData data){for(;i; i++) setColor(data); for (; i < FONT_COUNT; i) setFont(i.fonts[i]); }", "n_tokens": 55, "n_pass": [247, 28, 22]}
{"time": "2021-02-24 11:29:37.485866", "score": "0.3306", "loss": "12.9573", "code": "void importData(ThemeData data){for(;; i++) setColor(data); for (; i < FONT_COUNT; i) setFont(i.fonts[i]); }", "n_tokens": 54, "n_pass": [248, 29, 23]}
{"time": "2021-02-24 11:29:45.671789", "score": "0.3302", "loss": "12.9543", "code": "void importData(ThemeData data){for(;; i++) setColor(data); for (; i < FONT_COUNT;) setFont(i.fonts[i]); }", "n_tokens": 52, "n_pass": [262, 32, 24]}
{"time": "2021-02-24 11:30:06.147302", "score": "0.3089", "loss": "12.7298", "code": "void importData(ThemeData data){for(;; i++) setColor(data); for (; i < FONT_COUNT;) setFont(ifonts[i]); }", "n_tokens": 51, "n_pass": [338, 37, 25]}
{"time": "2021-02-24 11:30:08.879050", "score": "0.3224", "loss": "12.7534", "code": "void importData(ThemeData data){for(;; i++) setColor(data); for (; i < FONT_COUNT;) setFont(i[i]); }", "n_tokens": 50, "n_pass": [339, 38, 26]}
{"time": "2021-02-24 11:30:11.611221", "score": "0.3224", "loss": "12.7534", "code": "void importData(ThemeData data){for(;; i++) setColor(data); for (; i < FONT_COUNT;) setFont(i[i]);}", "n_tokens": 49, "n_pass": [345, 39, 27]}
{"time": "2021-02-24 11:30:15.251513", "score": "0.3224", "loss": "12.7534", "code": "void importData(ThemeData data){for(;;i++) setColor(data); for (; i < FONT_COUNT;) setFont(i[i]);}", "n_tokens": 48, "n_pass": [360, 40, 28]}
{"time": "2021-02-24 11:30:18.010327", "score": "0.3224", "loss": "12.7534", "code": "void importData(ThemeData data){for(;;i++)setColor(data); for (; i < FONT_COUNT;) setFont(i[i]);}", "n_tokens": 47, "n_pass": [365, 41, 29]}
{"time": "2021-02-24 11:30:26.192131", "score": "0.3224", "loss": "12.7534", "code": "void importData(ThemeData data){for(;;i++)setColor(data);for (; i < FONT_COUNT;) setFont(i[i]);}", "n_tokens": 46, "n_pass": [371, 44, 30]}
{"time": "2021-02-24 11:30:28.920089", "score": "0.3224", "loss": "12.7534", "code": "void importData(ThemeData data){for(;;i++)setColor(data);for(; i < FONT_COUNT;) setFont(i[i]);}", "n_tokens": 45, "n_pass": [373, 45, 31]}
{"time": "2021-02-24 11:30:31.648575", "score": "0.3224", "loss": "12.7534", "code": "void importData(ThemeData data){for(;;i++)setColor(data);for(;i < FONT_COUNT;) setFont(i[i]);}", "n_tokens": 44, "n_pass": [376, 46, 32]}
{"time": "2021-02-24 11:30:34.380257", "score": "0.3224", "loss": "12.7534", "code": "void importData(ThemeData data){for(;;i++)setColor(data);for(;i< FONT_COUNT;) setFont(i[i]);}", "n_tokens": 43, "n_pass": [378, 47, 33]}
{"time": "2021-02-24 11:30:37.120837", "score": "0.3224", "loss": "12.7534", "code": "void importData(ThemeData data){for(;;i++)setColor(data);for(;i<FONT_COUNT;) setFont(i[i]);}", "n_tokens": 42, "n_pass": [380, 48, 34]}
{"time": "2021-02-24 11:30:42.587603", "score": "0.3224", "loss": "12.7534", "code": "void importData(ThemeData data){for(;;i++)setColor(data);for(;i<FONTCOUNT;) setFont(i[i]);}", "n_tokens": 41, "n_pass": [382, 50, 35]}
{"time": "2021-02-24 11:30:48.033544", "score": "0.3224", "loss": "12.7534", "code": "void importData(ThemeData data){for(;;i++)setColor(data);for(;i<FONTCOUNT;)setFont(i[i]);}", "n_tokens": 40, "n_pass": [386, 52, 36]}

Minimal simplified code:
void importData(ThemeData data){for(;;i++)setColor(data);for(;i<FONTCOUNT;)setFont(i[i]);}

