
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/jamesdbloom__mockserver/mockserver-proxy-war/src/test/java/org/mockserver/proxy/ProxyServletTest_shouldStop.java
method_name = shouldStop
method_body = @Test public void shouldStop() throws InterruptedException { MockHttpServletRequest statusRequest = buildHttpServletRequest("PUT", "/stop", ""); proxyServlet.service(statusRequest, response); assertResponse(response, 501, ""); }
predict, score, loss = testSync, 0.29883143305778503, 14.495502471923828

Trace of simplified code(s):
{"time": "2021-02-24 06:26:28.807047", "score": "0.2988", "loss": "14.4955", "code": "@Test public void shouldStop() throws InterruptedException { MockHttpServletRequest statusRequest = buildHttpServletRequest(\"PUT\", \"/stop\", \"\"); proxyServlet.service(statusRequest, response); assertResponse(response, 501, \"\"); }", "n_tokens": 68, "n_pass": [1, 1, 1]}
{"time": "2021-02-24 06:26:31.491390", "score": "0.3484", "loss": "12.0885", "code": "@Test public void shouldStop() throws InterruptedException { MockHttpServletRequest statusRequest = buildHttpServletRequest(\"PUT\", \"/stop\", \"\"); ; assertResponse(response, 501, \"\"); }", "n_tokens": 59, "n_pass": [25, 2, 2]}
{"time": "2021-02-24 06:26:34.164500", "score": "0.3189", "loss": "10.6408", "code": " void shouldStop() throws InterruptedException { MockHttpServletRequest statusRequest = buildHttpServletRequest(\"PUT\", \"/stop\", \"\"); ; assertResponse(response, 501, \"\"); }", "n_tokens": 55, "n_pass": [51, 3, 3]}
{"time": "2021-02-24 06:26:37.527542", "score": "0.5256", "loss": "13.8392", "code": " void shouldStop() throws InterruptedException { statusRequest = buildHttpServletRequest(\"PUT\", \"/stop\", \"\"); ; assertResponse(response, 501, \"\"); }", "n_tokens": 53, "n_pass": [96, 4, 4]}
{"time": "2021-02-24 06:26:40.144201", "score": "0.5256", "loss": "13.8392", "code": " void shouldStop() throws InterruptedException { statusRequest = buildHttpServletRequest(\"PUT\", \"/stop\", \"\"); assertResponse(response, 501, \"\"); }", "n_tokens": 51, "n_pass": [107, 5, 5]}
{"time": "2021-02-24 06:26:45.379483", "score": "0.5471", "loss": "13.8996", "code": " void shouldStop() throws InterruptedException { statusRequest = buildHttpServletRequest(\"PUT\", \"/stop\", \"\"); assertResponse(response, 1, \"\"); }", "n_tokens": 49, "n_pass": [111, 7, 6]}
{"time": "2021-02-24 06:26:58.566245", "score": "0.5471", "loss": "13.8996", "code": " void shouldStop() throws InterruptedException { statusRequest = buildHttpServletRequest(\"PUT\", \"/stop\", \"\"); assertResponse(response, 1,\"\"); }", "n_tokens": 48, "n_pass": [183, 10, 7]}
{"time": "2021-02-24 06:27:01.173399", "score": "0.5471", "loss": "13.8996", "code": "void shouldStop() throws InterruptedException { statusRequest = buildHttpServletRequest(\"PUT\", \"/stop\", \"\"); assertResponse(response, 1,\"\"); }", "n_tokens": 47, "n_pass": [187, 11, 8]}
{"time": "2021-02-24 06:27:04.542238", "score": "0.5471", "loss": "13.8996", "code": "void shouldStop()throws InterruptedException { statusRequest = buildHttpServletRequest(\"PUT\", \"/stop\", \"\"); assertResponse(response, 1,\"\"); }", "n_tokens": 46, "n_pass": [193, 12, 9]}
{"time": "2021-02-24 06:27:07.146621", "score": "0.5471", "loss": "13.8996", "code": "void shouldStop()throws InterruptedException{ statusRequest = buildHttpServletRequest(\"PUT\", \"/stop\", \"\"); assertResponse(response, 1,\"\"); }", "n_tokens": 45, "n_pass": [197, 13, 10]}
{"time": "2021-02-24 06:27:09.775384", "score": "0.5471", "loss": "13.8996", "code": "void shouldStop()throws InterruptedException{statusRequest = buildHttpServletRequest(\"PUT\", \"/stop\", \"\"); assertResponse(response, 1,\"\"); }", "n_tokens": 44, "n_pass": [199, 14, 11]}
{"time": "2021-02-24 06:27:12.380784", "score": "0.5471", "loss": "13.8996", "code": "void shouldStop()throws InterruptedException{statusRequest= buildHttpServletRequest(\"PUT\", \"/stop\", \"\"); assertResponse(response, 1,\"\"); }", "n_tokens": 43, "n_pass": [201, 15, 12]}
{"time": "2021-02-24 06:27:14.994480", "score": "0.5471", "loss": "13.8996", "code": "void shouldStop()throws InterruptedException{statusRequest=buildHttpServletRequest(\"PUT\", \"/stop\", \"\"); assertResponse(response, 1,\"\"); }", "n_tokens": 42, "n_pass": [203, 16, 13]}
{"time": "2021-02-24 06:27:17.598426", "score": "0.5367", "loss": "13.4569", "code": "void shouldStop()throws InterruptedException{statusRequest=buildHttpServletRequest(\"\", \"/stop\", \"\"); assertResponse(response, 1,\"\"); }", "n_tokens": 41, "n_pass": [207, 17, 14]}
{"time": "2021-02-24 06:27:20.213111", "score": "0.5367", "loss": "13.4569", "code": "void shouldStop()throws InterruptedException{statusRequest=buildHttpServletRequest(\"\",\"/stop\", \"\"); assertResponse(response, 1,\"\"); }", "n_tokens": 40, "n_pass": [210, 18, 15]}
{"time": "2021-02-24 06:27:22.819700", "score": "0.5367", "loss": "13.4569", "code": "void shouldStop()throws InterruptedException{statusRequest=buildHttpServletRequest(\"\",\"stop\", \"\"); assertResponse(response, 1,\"\"); }", "n_tokens": 39, "n_pass": [212, 19, 16]}
{"time": "2021-02-24 06:27:25.427618", "score": "0.4928", "loss": "15.0653", "code": "void shouldStop()throws InterruptedException{statusRequest=buildHttpServletRequest(\"\",\"\", \"\"); assertResponse(response, 1,\"\"); }", "n_tokens": 38, "n_pass": [213, 20, 17]}
{"time": "2021-02-24 06:27:28.031489", "score": "0.4928", "loss": "15.0653", "code": "void shouldStop()throws InterruptedException{statusRequest=buildHttpServletRequest(\"\",\"\",\"\"); assertResponse(response, 1,\"\"); }", "n_tokens": 37, "n_pass": [216, 21, 18]}
{"time": "2021-02-24 06:27:30.662351", "score": "0.4928", "loss": "15.0653", "code": "void shouldStop()throws InterruptedException{statusRequest=buildHttpServletRequest(\"\",\"\",\"\");assertResponse(response, 1,\"\"); }", "n_tokens": 36, "n_pass": [221, 22, 19]}
{"time": "2021-02-24 06:27:33.271950", "score": "0.4928", "loss": "15.0653", "code": "void shouldStop()throws InterruptedException{statusRequest=buildHttpServletRequest(\"\",\"\",\"\");assertResponse(response,1,\"\"); }", "n_tokens": 35, "n_pass": [226, 23, 20]}
{"time": "2021-02-24 06:27:36.649125", "score": "0.5945", "loss": "17.6462", "code": "void shouldStop()throws InterruptedException{statusRequestbuildHttpServletRequest(\"\",\"\",\"\");assertResponse(response,1,\"\"); }", "n_tokens": 34, "n_pass": [242, 24, 21]}
{"time": "2021-02-24 06:27:39.248391", "score": "0.6038", "loss": "15.0981", "code": "void shouldStop()throws InterruptedException{statusRequest(\"\",\"\",\"\");assertResponse(response,1,\"\"); }", "n_tokens": 33, "n_pass": [243, 25, 22]}
{"time": "2021-02-24 06:27:45.944848", "score": "0.6038", "loss": "15.0981", "code": "void shouldStop()throws InterruptedException{statusRequest(\"\",\"\",\"\");assertResponse(response,1,\"\");}", "n_tokens": 32, "n_pass": [284, 27, 23]}

Minimal simplified code:
void shouldStop()throws InterruptedException{statusRequest("","","");assertResponse(response,1,"");}

