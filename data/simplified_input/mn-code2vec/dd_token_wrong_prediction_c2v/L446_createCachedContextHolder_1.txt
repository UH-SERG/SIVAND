
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/OpenRock__OpenAM/openam-radius/openam-radius-server/src/test/java/org/forgerock/openam/radius/server/spi/handlers/amhandler/ContextHolderCacheTest_createCachedContextHolder.java
method_name = createCachedContextHolder
method_body = @Test public void createCachedContextHolder() { final ContextCacheSize cacheSize = mock(ContextCacheSize.class); when(cacheSize.getDesiredCacheSize()).thenReturn(5); final ContextHolderCache cache = new ContextHolderCache(cacheSize); final ContextHolder cachedContext = cache.createCachedContextHolder(); assertThat(cachedContext).isNotNull(); assertThat(cachedContext.getCacheKey()).isNotNull(); }
predict, score, loss = getCacheKey, 0.4689441919326782, 18.81626319885254

Trace of simplified code(s):
{"time": "2021-02-23 19:26:39.461881", "score": "0.4689", "loss": "18.8163", "code": "@Test public void createCachedContextHolder() { final ContextCacheSize cacheSize = mock(ContextCacheSize.class); when(cacheSize.getDesiredCacheSize()).thenReturn(5); final ContextHolderCache cache = new ContextHolderCache(cacheSize); final ContextHolder cachedContext = cache.createCachedContextHolder(); assertThat(cachedContext).isNotNull(); assertThat(cachedContext.getCacheKey()).isNotNull(); }", "n_tokens": 100, "n_pass": [1, 1, 1]}
{"time": "2021-02-23 19:26:42.547625", "score": "0.4892", "loss": "21.473", "code": "@Test public void createCachedContextHolder() { final ContextCacheSize cacheSize = mock(ContextCacheSize).thenReturn(5); final ContextHolderCache cache = new ContextHolderCache(cacheSize); final ContextHolder cachedContext = cache.createCachedContextHolder(); assertThat(cachedContext).isNotNull(); assertThat(cachedContext.getCacheKey()).isNotNull(); }", "n_tokens": 88, "n_pass": [22, 2, 2]}
{"time": "2021-02-23 19:26:48.352969", "score": "0.5425", "loss": "21.8507", "code": "@Test public void createCachedContextHolder() { final ContextCacheSize cacheSize = mock(ContextCacheSize).thenReturn; final ContextHolderCache cache = new ContextHolderCache(cacheSize); final ContextHolder cachedContext = cache.createCachedContextHolder(); assertThat(cachedContext).isNotNull(); assertThat(cachedContext.getCacheKey()).isNotNull(); }", "n_tokens": 85, "n_pass": [87, 4, 3]}
{"time": "2021-02-23 19:26:51.031901", "score": "0.4638", "loss": "18.0647", "code": "@Test public void createCachedContextHolder() { final ContextCacheSize cacheSize = mock(ContextCacheSize).thenReturn; finalcache = new ContextHolderCache(cacheSize); final ContextHolder cachedContext = cache.createCachedContextHolder(); assertThat(cachedContext).isNotNull(); assertThat(cachedContext.getCacheKey()).isNotNull(); }", "n_tokens": 82, "n_pass": [89, 5, 4]}
{"time": "2021-02-23 19:26:53.700007", "score": "0.5498", "loss": "19.0875", "code": "@Test public void createCachedContextHolder() { final ContextCacheSize cacheSize = mock(ContextCacheSize).thenReturn; finalcache =ContextHolderCache(cacheSize); final ContextHolder cachedContext = cache.createCachedContextHolder(); assertThat(cachedContext).isNotNull(); assertThat(cachedContext.getCacheKey()).isNotNull(); }", "n_tokens": 79, "n_pass": [91, 6, 5]}
{"time": "2021-02-23 19:27:04.413642", "score": "0.4105", "loss": "18.8986", "code": "public void createCachedContextHolder() { final ContextCacheSize cacheSize = mock(ContextCacheSize).thenReturn; finalcache =ContextHolderCache(cacheSize); final ContextHolder cachedContext = cache.createCachedContextHolder(); assertThat(cachedContext).isNotNull(); assertThat(cachedContext.getCacheKey()).isNotNull(); }", "n_tokens": 76, "n_pass": [106, 10, 6]}
{"time": "2021-02-23 19:27:07.510128", "score": "0.4105", "loss": "18.8986", "code": "public void createCachedContextHolder() {ContextCacheSize cacheSize = mock(ContextCacheSize).thenReturn; finalcache =ContextHolderCache(cacheSize); final ContextHolder cachedContext = cache.createCachedContextHolder(); assertThat(cachedContext).isNotNull(); assertThat(cachedContext.getCacheKey()).isNotNull(); }", "n_tokens": 73, "n_pass": [110, 11, 7]}
{"time": "2021-02-23 19:27:27.163642", "score": "0.4105", "loss": "18.8986", "code": "public void createCachedContextHolder(){ContextCacheSize cacheSize = mock(ContextCacheSize).thenReturn; finalcache =ContextHolderCache(cacheSize); final ContextHolder cachedContext = cache.createCachedContextHolder(); assertThat(cachedContext).isNotNull(); assertThat(cachedContext.getCacheKey()).isNotNull(); }", "n_tokens": 72, "n_pass": [181, 17, 8]}
{"time": "2021-02-23 19:27:29.833771", "score": "0.3781", "loss": "17.2261", "code": "public void createCachedContextHolder(){ cacheSize = mock(ContextCacheSize).thenReturn; finalcache =ContextHolderCache(cacheSize); final ContextHolder cachedContext = cache.createCachedContextHolder(); assertThat(cachedContext).isNotNull(); assertThat(cachedContext.getCacheKey()).isNotNull(); }", "n_tokens": 71, "n_pass": [183, 18, 9]}
{"time": "2021-02-23 19:27:32.500099", "score": "0.3781", "loss": "17.2261", "code": "public void createCachedContextHolder(){cacheSize = mock(ContextCacheSize).thenReturn; finalcache =ContextHolderCache(cacheSize); final ContextHolder cachedContext = cache.createCachedContextHolder(); assertThat(cachedContext).isNotNull(); assertThat(cachedContext.getCacheKey()).isNotNull(); }", "n_tokens": 70, "n_pass": [184, 19, 10]}
{"time": "2021-02-23 19:27:35.185553", "score": "0.3781", "loss": "17.2261", "code": "public void createCachedContextHolder(){cacheSize= mock(ContextCacheSize).thenReturn; finalcache =ContextHolderCache(cacheSize); final ContextHolder cachedContext = cache.createCachedContextHolder(); assertThat(cachedContext).isNotNull(); assertThat(cachedContext.getCacheKey()).isNotNull(); }", "n_tokens": 69, "n_pass": [186, 20, 11]}
{"time": "2021-02-23 19:27:37.858362", "score": "0.3781", "loss": "17.2261", "code": "public void createCachedContextHolder(){cacheSize=mock(ContextCacheSize).thenReturn; finalcache =ContextHolderCache(cacheSize); final ContextHolder cachedContext = cache.createCachedContextHolder(); assertThat(cachedContext).isNotNull(); assertThat(cachedContext.getCacheKey()).isNotNull(); }", "n_tokens": 68, "n_pass": [188, 21, 12]}
{"time": "2021-02-23 19:27:40.524922", "score": "0.416", "loss": "17.977", "code": "public void createCachedContextHolder(){cacheSize=(ContextCacheSize).thenReturn; finalcache =ContextHolderCache(cacheSize); final ContextHolder cachedContext = cache.createCachedContextHolder(); assertThat(cachedContext).isNotNull(); assertThat(cachedContext.getCacheKey()).isNotNull(); }", "n_tokens": 67, "n_pass": [189, 22, 13]}
{"time": "2021-02-23 19:27:43.195945", "score": "0.4202", "loss": "18.5553", "code": "public void createCachedContextHolder(){cacheSize=(ContextCacheSize); finalcache =ContextHolderCache(cacheSize); final ContextHolder cachedContext = cache.createCachedContextHolder(); assertThat(cachedContext).isNotNull(); assertThat(cachedContext.getCacheKey()).isNotNull(); }", "n_tokens": 65, "n_pass": [193, 23, 14]}
{"time": "2021-02-23 19:27:46.299586", "score": "0.3583", "loss": "18.5136", "code": "public void createCachedContextHolder(){cacheSize=(ContextCacheSize); finalcacheContextHolderCache(cacheSize); final ContextHolder cachedContext = cache.createCachedContextHolder(); assertThat(cachedContext).isNotNull(); assertThat(cachedContext.getCacheKey()).isNotNull(); }", "n_tokens": 63, "n_pass": [196, 24, 15]}
{"time": "2021-02-23 19:27:48.954715", "score": "0.3583", "loss": "18.5136", "code": "public void createCachedContextHolder(){cacheSize=(ContextCacheSize); finalcacheContextHolderCache(cacheSize); ContextHolder cachedContext = cache.createCachedContextHolder(); assertThat(cachedContext).isNotNull(); assertThat(cachedContext.getCacheKey()).isNotNull(); }", "n_tokens": 61, "n_pass": [200, 25, 16]}
{"time": "2021-02-23 19:27:54.279233", "score": "0.4353", "loss": "16.7233", "code": "public void createCachedContextHolder(){cacheSize=(ContextCacheSize); finalcacheContextHolderCache(cacheSize); ContextHolder = cache.createCachedContextHolder(); assertThat(cachedContext).isNotNull(); assertThat(cachedContext.getCacheKey()).isNotNull(); }", "n_tokens": 59, "n_pass": [202, 27, 17]}
{"time": "2021-02-23 19:27:56.940751", "score": "0.451", "loss": "16.4891", "code": "public void createCachedContextHolder(){cacheSize=(ContextCacheSize); finalcacheContextHolderCache(cacheSize); ContextHolder = createCachedContextHolder(); assertThat(cachedContext).isNotNull(); assertThat(cachedContext.getCacheKey()).isNotNull(); }", "n_tokens": 57, "n_pass": [204, 28, 18]}
{"time": "2021-02-23 19:27:59.594709", "score": "0.2727", "loss": "15.1474", "code": "public void createCachedContextHolder(){cacheSize=(ContextCacheSize); finalcacheContextHolderCache(cacheSize); ContextHolder = createCachedContextHolder();(cachedContext).isNotNull(); assertThat(cachedContext.getCacheKey()).isNotNull(); }", "n_tokens": 55, "n_pass": [207, 29, 19]}
{"time": "2021-02-23 19:28:10.210730", "score": "0.2727", "loss": "15.1474", "code": " void createCachedContextHolder(){cacheSize=(ContextCacheSize); finalcacheContextHolderCache(cacheSize); ContextHolder = createCachedContextHolder();(cachedContext).isNotNull(); assertThat(cachedContext.getCacheKey()).isNotNull(); }", "n_tokens": 54, "n_pass": [220, 33, 20]}
{"time": "2021-02-23 19:28:12.874814", "score": "0.2727", "loss": "15.1474", "code": "void createCachedContextHolder(){cacheSize=(ContextCacheSize); finalcacheContextHolderCache(cacheSize); ContextHolder = createCachedContextHolder();(cachedContext).isNotNull(); assertThat(cachedContext.getCacheKey()).isNotNull(); }", "n_tokens": 53, "n_pass": [221, 34, 21]}
{"time": "2021-02-23 19:28:16.351974", "score": "0.2909", "loss": "15.0833", "code": "void createCachedContextHolder(){cacheSize(ContextCacheSize); finalcacheContextHolderCache(cacheSize); ContextHolder = createCachedContextHolder();(cachedContext).isNotNull(); assertThat(cachedContext.getCacheKey()).isNotNull(); }", "n_tokens": 52, "n_pass": [229, 35, 22]}
{"time": "2021-02-23 19:28:19.027970", "score": "0.2928", "loss": "15.1418", "code": "void createCachedContextHolder(){cacheSize(); finalcacheContextHolderCache(cacheSize); ContextHolder = createCachedContextHolder();(cachedContext).isNotNull(); assertThat(cachedContext.getCacheKey()).isNotNull(); }", "n_tokens": 51, "n_pass": [231, 36, 23]}
{"time": "2021-02-23 19:28:21.667556", "score": "0.2928", "loss": "15.1418", "code": "void createCachedContextHolder(){cacheSize(); ContextHolderCache(cacheSize); ContextHolder = createCachedContextHolder();(cachedContext).isNotNull(); assertThat(cachedContext.getCacheKey()).isNotNull(); }", "n_tokens": 49, "n_pass": [234, 37, 24]}
{"time": "2021-02-23 19:28:37.402434", "score": "0.2928", "loss": "15.1418", "code": "void createCachedContextHolder(){cacheSize(); ContextHolderCache(cacheSize);ContextHolder = createCachedContextHolder();(cachedContext).isNotNull(); assertThat(cachedContext.getCacheKey()).isNotNull(); }", "n_tokens": 48, "n_pass": [304, 41, 25]}
{"time": "2021-02-23 19:28:40.056675", "score": "0.2928", "loss": "15.1418", "code": "void createCachedContextHolder(){cacheSize(); ContextHolderCache(cacheSize);ContextHolder= createCachedContextHolder();(cachedContext).isNotNull(); assertThat(cachedContext.getCacheKey()).isNotNull(); }", "n_tokens": 47, "n_pass": [306, 42, 26]}
{"time": "2021-02-23 19:28:42.701275", "score": "0.2928", "loss": "15.1418", "code": "void createCachedContextHolder(){cacheSize(); ContextHolderCache(cacheSize);ContextHolder=createCachedContextHolder();(cachedContext).isNotNull(); assertThat(cachedContext.getCacheKey()).isNotNull(); }", "n_tokens": 46, "n_pass": [308, 43, 27]}
{"time": "2021-02-23 19:28:45.766060", "score": "0.2928", "loss": "15.1418", "code": "void createCachedContextHolder(){cacheSize(); ContextHolderCache(cacheSize);ContextHolder=createCachedContextHolder();(cachedContext).isNotNull();assertThat(cachedContext.getCacheKey()).isNotNull(); }", "n_tokens": 45, "n_pass": [321, 44, 28]}
{"time": "2021-02-23 19:28:53.726651", "score": "0.2928", "loss": "15.1418", "code": "void createCachedContextHolder(){cacheSize(); ContextHolderCache(cacheSize);ContextHolder=createCachedContextHolder();(cachedContext).isNotNull();assertThat(cachedContext.getCacheKey()).isNotNull();}", "n_tokens": 44, "n_pass": [335, 47, 29]}
{"time": "2021-02-23 19:28:57.190343", "score": "0.2928", "loss": "15.1418", "code": "void createCachedContextHolder(){cacheSize();ContextHolderCache(cacheSize);ContextHolder=createCachedContextHolder();(cachedContext).isNotNull();assertThat(cachedContext.getCacheKey()).isNotNull();}", "n_tokens": 43, "n_pass": [347, 48, 30]}
{"time": "2021-02-23 19:28:59.834528", "score": "0.4111", "loss": "19.3069", "code": "void createCachedContextHolder(){cacheSize();(cacheSize);ContextHolder=createCachedContextHolder();(cachedContext).isNotNull();assertThat(cachedContext.getCacheKey()).isNotNull();}", "n_tokens": 42, "n_pass": [348, 49, 31]}
{"time": "2021-02-23 19:29:05.941224", "score": "0.3808", "loss": "16.3423", "code": "void createCachedContextHolder(){cacheSize();(cacheSize);ContextHolder=createCachedContextHolder();(cachedContext).isNotNull();(cachedContext.getCacheKey()).isNotNull();}", "n_tokens": 41, "n_pass": [367, 51, 32]}
{"time": "2021-02-23 19:29:12.435969", "score": "0.8303", "loss": "15.9651", "code": "void createCachedContextHolder(){cacheSize();(cacheSize);ContextHoldercreateCachedContextHolder();(cachedContext).isNotNull();(cachedContext.getCacheKey()).isNotNull();}", "n_tokens": 40, "n_pass": [396, 53, 33]}
{"time": "2021-02-23 19:29:22.015607", "score": "0.8303", "loss": "15.9651", "code": "void createCachedContextHolder(){cacheSize();(cacheSize);createCachedContextHolder();(cachedContext).isNotNull();(cachedContext.getCacheKey()).isNotNull();}", "n_tokens": 39, "n_pass": [436, 56, 34]}

Minimal simplified code:
void createCachedContextHolder(){cacheSize();(cacheSize);createCachedContextHolder();(cachedContext).isNotNull();(cachedContext.getCacheKey()).isNotNull();}

