
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/CogComp__cogcomp-nlp/inference/src/main/java/edu/illinois/cs/cogcomp/infer/ilp/GurobiHook_printModelStatus.java
method_name = printModelStatus
method_body = public void printModelStatus() throws GRBException { int status = model.get(GRB.IntAttr.Status); System.out.println("Model status: " + status); if (status == GRB.INFEASIBLE) { System.out.println("INFEASIBLE"); } }
predict, score, loss = foo, 0.9190664291381836, 17.85366439819336

Trace of simplified code(s):
{"time": "2021-02-23 23:51:32.169346", "score": "0.9191", "loss": "17.8537", "code": "public void printModelStatus() throws GRBException { int status = model.get(GRB.IntAttr.Status); System.out.println(\"Model status: \" + status); if (status == GRB.INFEASIBLE) { System.out.println(\"INFEASIBLE\"); } }", "n_tokens": 82, "n_pass": [1, 1, 1]}
{"time": "2021-02-23 23:51:34.961509", "score": "0.7848", "loss": "15.1958", "code": "public void printModelStatus() throws GRBException { intmodel.get(GRB.IntAttr.Status); System.out.println(\"Model status: \" + status); if (status == GRB.INFEASIBLE) { System.out.println(\"INFEASIBLE\"); } }", "n_tokens": 77, "n_pass": [47, 2, 2]}
{"time": "2021-02-23 23:51:37.776500", "score": "0.179", "loss": "14.3396", "code": "public void printModelStatus() throws GRBException { intmodel.get(GRB.IntAttr.Status).println(\"Model status: \" + status); if (status == GRB.INFEASIBLE) { System.out.println(\"INFEASIBLE\"); } }", "n_tokens": 72, "n_pass": [50, 3, 3]}
{"time": "2021-02-23 23:51:43.377253", "score": "0.1817", "loss": "15.2621", "code": "public void printModelStatus() throws GRBException { intmodel.get(GRB.Status).println(\"Model status: \" + status); if (status == GRB.INFEASIBLE) { System.out.println(\"INFEASIBLE\"); } }", "n_tokens": 70, "n_pass": [93, 5, 4]}
{"time": "2021-02-23 23:51:51.731264", "score": "0.8642", "loss": "18.7035", "code": "public void printModelStatus() throws GRBException { intmodel.get(GRB.Status).println(\"Model status: \" ); if (status == GRB.INFEASIBLE) { System.out.println(\"INFEASIBLE\"); } }", "n_tokens": 67, "n_pass": [99, 8, 5]}
{"time": "2021-02-23 23:51:57.284591", "score": "0.8642", "loss": "18.7035", "code": "void printModelStatus() throws GRBException { intmodel.get(GRB.Status).println(\"Model status: \" ); if (status == GRB.INFEASIBLE) { System.out.println(\"INFEASIBLE\"); } }", "n_tokens": 65, "n_pass": [111, 10, 6]}
{"time": "2021-02-23 23:52:00.519522", "score": "0.836", "loss": "15.2131", "code": "void printModelStatus() throws GRBException { intmodel(GRB.Status).println(\"Model status: \" ); if (status == GRB.INFEASIBLE) { System.out.println(\"INFEASIBLE\"); } }", "n_tokens": 63, "n_pass": [119, 11, 7]}
{"time": "2021-02-23 23:52:03.303272", "score": "0.9305", "loss": "18.1815", "code": "void printModelStatus() throws GRBException { intmodel(GRB).println(\"Model status: \" ); if (status == GRB.INFEASIBLE) { System.out.println(\"INFEASIBLE\"); } }", "n_tokens": 61, "n_pass": [121, 12, 8]}
{"time": "2021-02-23 23:52:06.070349", "score": "0.8482", "loss": "17.6883", "code": "void printModelStatus() throws GRBException { intmodel(GRB).println(\"Model \" ); if (status == GRB.INFEASIBLE) { System.out.println(\"INFEASIBLE\"); } }", "n_tokens": 58, "n_pass": [124, 13, 9]}
{"time": "2021-02-23 23:52:12.123635", "score": "0.9881", "loss": "23.8519", "code": "void printModelStatus() throws GRBException { (GRB).println(\"Model \" ); if (status == GRB.INFEASIBLE) { System.out.println(\"INFEASIBLE\"); } }", "n_tokens": 56, "n_pass": [143, 15, 10]}
{"time": "2021-02-23 23:52:14.925202", "score": "0.848", "loss": "18.9325", "code": "void printModelStatus() throws GRBException { (GRB).println(\"Model \" ); if (status == GRB.INFEASIBLE) { System.out.println(); } }", "n_tokens": 53, "n_pass": [156, 16, 11]}
{"time": "2021-02-23 23:52:23.198616", "score": "0.848", "loss": "18.9325", "code": "void printModelStatus()throws GRBException { (GRB).println(\"Model \" ); if (status == GRB.INFEASIBLE) { System.out.println(); } }", "n_tokens": 52, "n_pass": [226, 17, 12]}
{"time": "2021-02-23 23:52:25.964765", "score": "0.848", "loss": "18.9325", "code": "void printModelStatus()throws GRBException{ (GRB).println(\"Model \" ); if (status == GRB.INFEASIBLE) { System.out.println(); } }", "n_tokens": 51, "n_pass": [230, 18, 13]}
{"time": "2021-02-23 23:52:28.722657", "score": "0.848", "loss": "18.9325", "code": "void printModelStatus()throws GRBException{(GRB).println(\"Model \" ); if (status == GRB.INFEASIBLE) { System.out.println(); } }", "n_tokens": 50, "n_pass": [232, 19, 14]}
{"time": "2021-02-23 23:52:31.974426", "score": "0.9195", "loss": "19.7849", "code": "void printModelStatus()throws GRBException{(GRB).println(\" \" ); if (status == GRB.INFEASIBLE) { System.out.println(); } }", "n_tokens": 49, "n_pass": [240, 20, 15]}
{"time": "2021-02-23 23:52:34.777490", "score": "0.9103", "loss": "20.0767", "code": "void printModelStatus()throws GRBException{(GRB).println(\"\" ); if (status == GRB.INFEASIBLE) { System.out.println(); } }", "n_tokens": 48, "n_pass": [241, 21, 16]}
{"time": "2021-02-23 23:52:37.569363", "score": "0.9103", "loss": "20.0767", "code": "void printModelStatus()throws GRBException{(GRB).println(\"\"); if (status == GRB.INFEASIBLE) { System.out.println(); } }", "n_tokens": 47, "n_pass": [243, 22, 17]}
{"time": "2021-02-23 23:52:40.364754", "score": "0.9103", "loss": "20.0767", "code": "void printModelStatus()throws GRBException{(GRB).println(\"\");if (status == GRB.INFEASIBLE) { System.out.println(); } }", "n_tokens": 46, "n_pass": [246, 23, 18]}
{"time": "2021-02-23 23:52:45.896468", "score": "0.9262", "loss": "20.5658", "code": "void printModelStatus()throws GRBException{(GRB).println(\"\");if (status == GRB.INFEASIBLE) { out.println(); } }", "n_tokens": 44, "n_pass": [255, 25, 19]}
{"time": "2021-02-23 23:52:48.675939", "score": "0.9631", "loss": "21.4619", "code": "void printModelStatus()throws GRBException{(GRB).println(\"\");if (status == GRB.INFEASIBLE) { println(); } }", "n_tokens": 42, "n_pass": [256, 26, 20]}
{"time": "2021-02-23 23:52:59.122902", "score": "0.9631", "loss": "21.4619", "code": "void printModelStatus()throws GRBException{(GRB).println(\"\");if (status == GRB.INFEASIBLE) { println();} }", "n_tokens": 41, "n_pass": [312, 28, 21]}
{"time": "2021-02-23 23:53:01.927651", "score": "0.9631", "loss": "21.4619", "code": "void printModelStatus()throws GRBException{(GRB).println(\"\");if (status == GRB.INFEASIBLE) { println();}}", "n_tokens": 40, "n_pass": [313, 29, 22]}
{"time": "2021-02-23 23:53:06.128386", "score": "0.9631", "loss": "21.4619", "code": "void printModelStatus()throws GRBException{(GRB).println(\"\");if(status == GRB.INFEASIBLE) { println();}}", "n_tokens": 39, "n_pass": [335, 30, 23]}
{"time": "2021-02-23 23:53:08.970919", "score": "0.9631", "loss": "21.4619", "code": "void printModelStatus()throws GRBException{(GRB).println(\"\");if(status== GRB.INFEASIBLE) { println();}}", "n_tokens": 38, "n_pass": [338, 31, 24]}
{"time": "2021-02-23 23:53:11.741864", "score": "0.8822", "loss": "23.1116", "code": "void printModelStatus()throws GRBException{(GRB).println(\"\");if(status= GRB.INFEASIBLE) { println();}}", "n_tokens": 37, "n_pass": [339, 32, 25]}
{"time": "2021-02-23 23:53:14.536488", "score": "0.8822", "loss": "23.1116", "code": "void printModelStatus()throws GRBException{(GRB).println(\"\");if(status=GRB.INFEASIBLE) { println();}}", "n_tokens": 36, "n_pass": [341, 33, 26]}
{"time": "2021-02-23 23:53:20.123373", "score": "0.8822", "loss": "23.1116", "code": "void printModelStatus()throws GRBException{(GRB).println(\"\");if(status=GRB.INFEASIBLE){ println();}}", "n_tokens": 35, "n_pass": [346, 35, 27]}
{"time": "2021-02-23 23:53:22.895817", "score": "0.8822", "loss": "23.1116", "code": "void printModelStatus()throws GRBException{(GRB).println(\"\");if(status=GRB.INFEASIBLE){println();}}", "n_tokens": 34, "n_pass": [348, 36, 28]}
{"time": "2021-02-23 23:53:27.038478", "score": "0.9281", "loss": "25.8297", "code": "void printModelStatus()throws GRBException{(GRB).println(\"\");if(statusGRB.INFEASIBLE){println();}}", "n_tokens": 33, "n_pass": [377, 37, 29]}
{"time": "2021-02-23 23:53:29.788594", "score": "0.9086", "loss": "25.4122", "code": "void printModelStatus()throws GRBException{(GRB).println(\"\");if(status.INFEASIBLE){println();}}", "n_tokens": 32, "n_pass": [378, 38, 30]}

Minimal simplified code:
void printModelStatus()throws GRBException{(GRB).println("");if(status.INFEASIBLE){println();}}

