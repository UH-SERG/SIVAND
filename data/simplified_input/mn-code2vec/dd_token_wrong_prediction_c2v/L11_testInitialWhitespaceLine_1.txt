
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/javaee__javamail/mail/src/test/java/javax/mail/internet/InternetHeadersTest_testInitialWhitespaceLine.java
method_name = testInitialWhitespaceLine
method_body = private void testInitialWhitespaceLine(InternetHeaders ih) throws Exception { assertEquals(1, ih.getHeader("Subject").length); assertEquals("test", ih.getHeader("Subject")[0]); Enumeration<Header> e = ih.getAllHeaders(); while (e.hasMoreElements()) { Header h = e.nextElement(); assertEquals("Subject", h.getName()); assertEquals("test", h.getValue()); } }
predict, score, loss = readHeaders, 0.4986073076725006, 15.861189842224121

Trace of simplified code(s):
{"time": "2021-02-23 19:29:31.704443", "score": "0.4579", "loss": "17.5636", "code": "private void testInitialWhitespaceLine(InternetHeaders ih) throws Exception { assertEquals(1, ih.getHeader(\"Subject\").length); assertEquals(\"test\", ih.getHeader(\"Subject\")[0]); Enumeration<Header> e = ih.getAllHeaders(); while (e.hasMoreElements()) { Header h = e.nextElement(); assertEquals(\"Subject\", h.getName()); assertEquals(\"test\", h.getValue()); } }", "n_tokens": 130, "n_pass": [1, 1, 1]}
{"time": "2021-02-23 19:29:34.421532", "score": "0.5174", "loss": "17.0976", "code": "private void testInitialWhitespaceLine(InternetHeaders ih) throws Exception { assertEquals(1, ih.getHeader(\"Subject\").length, ih.getHeader(\"Subject\")[0]); Enumeration<Header> e = ih.getAllHeaders(); while (e.hasMoreElements()) { Header h = e.nextElement(); assertEquals(\"Subject\", h.getName()); assertEquals(\"test\", h.getValue()); } }", "n_tokens": 122, "n_pass": [48, 2, 2]}
{"time": "2021-02-23 19:29:37.097684", "score": "0.5326", "loss": "16.1903", "code": "private void testInitialWhitespaceLine(InternetHeaders ih) throws Exception { assertEquals(1, ih.getHeader(\"Subject\").length, ih.getHeader(\"Subject\")[0]);  ih.getAllHeaders(); while (e.hasMoreElements()) { Header h = e.nextElement(); assertEquals(\"Subject\", h.getName()); assertEquals(\"test\", h.getValue()); } }", "n_tokens": 114, "n_pass": [50, 3, 3]}
{"time": "2021-02-23 19:29:39.773522", "score": "0.4656", "loss": "14.6543", "code": "private void testInitialWhitespaceLine(InternetHeaders ih) throws Exception { assertEquals(1, ih.getHeader(\"Subject\").length, ih.getHeader(\"Subject\")[0]); while (e.hasMoreElements()) { Header h = e.nextElement(); assertEquals(\"Subject\", h.getName()); assertEquals(\"test\", h.getValue()); } }", "n_tokens": 106, "n_pass": [51, 4, 4]}
{"time": "2021-02-23 19:29:42.472455", "score": "0.5044", "loss": "14.9088", "code": "private void testInitialWhitespaceLine(InternetHeaders ih) throws Exception { assertEquals(1, ih.getHeader(\"Subject\").length, ih.getHeader(\"Subject\")[0]); while (e) { Header h = e.nextElement(); assertEquals(\"Subject\", h.getName()); assertEquals(\"test\", h.getValue()); } }", "n_tokens": 102, "n_pass": [92, 5, 5]}
{"time": "2021-02-23 19:29:45.141078", "score": "0.5188", "loss": "15.1786", "code": "private void testInitialWhitespaceLine(InternetHeaders ih) throws Exception { assertEquals(1, ih.getHeader(\"Subject\").length, ih.getHeader(\"Subject\")[0]); while (e) { Header h = e. assertEquals(\"Subject\", h.getName()); assertEquals(\"test\", h.getValue()); } }", "n_tokens": 98, "n_pass": [96, 6, 6]}
{"time": "2021-02-23 19:29:48.267659", "score": "0.5205", "loss": "15.1152", "code": "private void testInitialWhitespaceLine(InternetHeaders ih) throws Exception { assertEquals(1, ih.getHeader(\"Subject\").lengthgetHeader(\"Subject\")[0]); while (e) { Header h = e. assertEquals(\"Subject\", h.getName()); assertEquals(\"test\", h.getValue()); } }", "n_tokens": 94, "n_pass": [113, 7, 7]}
{"time": "2021-02-23 19:29:52.164396", "score": "0.4592", "loss": "14.7024", "code": "private void testInitialWhitespaceLine(InternetHeaders ih) throws Exception { assertEquals(1, ih.getHeader(\"Subject\").lengthgetHeader(\"Subject\")[0]); while (e) { h = e. assertEquals(\"Subject\", h.getName()); assertEquals(\"test\", h.getValue()); } }", "n_tokens": 92, "n_pass": [193, 8, 8]}
{"time": "2021-02-23 19:29:54.831313", "score": "0.4663", "loss": "14.7261", "code": "private void testInitialWhitespaceLine(InternetHeaders ih) throws Exception { assertEquals(1, ih.getHeader(\"Subject\").lengthgetHeader(\"Subject\")[0]); while (e) { h =  assertEquals(\"Subject\", h.getName()); assertEquals(\"test\", h.getValue()); } }", "n_tokens": 90, "n_pass": [195, 9, 9]}
{"time": "2021-02-23 19:29:57.531027", "score": "0.4454", "loss": "14.5012", "code": "private void testInitialWhitespaceLine(InternetHeaders ih) throws Exception { assertEquals(1, ih.getHeader(\"Subject\").lengthgetHeader(\"Subject\")[0]); while (e) { h =  assertEquals(\"Subject\", getName()); assertEquals(\"test\", h.getValue()); } }", "n_tokens": 88, "n_pass": [200, 10, 10]}
{"time": "2021-02-23 19:30:00.233089", "score": "0.446", "loss": "14.4898", "code": "private void testInitialWhitespaceLine(InternetHeaders ih) throws Exception { assertEquals(1, ih.getHeader(\"Subject\").lengthgetHeader(\"Subject\")[0]); while (e) { h =  assertEquals(\"Subject\", getName()); assertEquals(\"test\", h()); } }", "n_tokens": 86, "n_pass": [208, 11, 11]}
{"time": "2021-02-23 19:30:02.893206", "score": "0.4459", "loss": "14.5443", "code": "private void testInitialWhitespaceLine(InternetHeaders ih) throws Exception { assertEquals(1, ih.getHeader(\"Subject\").lengthgetHeader(\"Subject\")[0]); while (e) { h =  assertEquals(\"Subject\", getName()); assertEquals(\"test\", h); } }", "n_tokens": 84, "n_pass": [209, 12, 12]}
{"time": "2021-02-23 19:30:05.550018", "score": "0.4459", "loss": "14.5443", "code": "void testInitialWhitespaceLine(InternetHeaders ih) throws Exception { assertEquals(1, ih.getHeader(\"Subject\").lengthgetHeader(\"Subject\")[0]); while (e) { h =  assertEquals(\"Subject\", getName()); assertEquals(\"test\", h); } }", "n_tokens": 82, "n_pass": [212, 13, 13]}
{"time": "2021-02-23 19:30:08.641415", "score": "0.456", "loss": "14.4755", "code": "void testInitialWhitespaceLine(InternetHeaders ih) throws Exception { assertEquals(1, getHeader(\"Subject\").lengthgetHeader(\"Subject\")[0]); while (e) { h =  assertEquals(\"Subject\", getName()); assertEquals(\"test\", h); } }", "n_tokens": 80, "n_pass": [223, 14, 14]}
{"time": "2021-02-23 19:30:19.450714", "score": "0.4536", "loss": "14.5659", "code": "void testInitialWhitespaceLine(InternetHeaders ih) throws Exception { assertEquals(1, (\"Subject\").lengthgetHeader(\"Subject\")[0]); while (e) { h =  assertEquals(\"Subject\", getName()); assertEquals(\"test\", h); } }", "n_tokens": 79, "n_pass": [341, 15, 15]}
{"time": "2021-02-23 19:30:22.098575", "score": "0.4559", "loss": "14.575", "code": "void testInitialWhitespaceLine(InternetHeaders ih) throws Exception { assertEquals(1, (\"\").lengthgetHeader(\"Subject\")[0]); while (e) { h =  assertEquals(\"Subject\", getName()); assertEquals(\"test\", h); } }", "n_tokens": 78, "n_pass": [343, 16, 16]}
{"time": "2021-02-23 19:30:24.746926", "score": "0.4611", "loss": "14.9352", "code": "void testInitialWhitespaceLine(InternetHeaders ih) throws Exception { assertEquals(1, (\"\").getHeader(\"Subject\")[0]); while (e) { h =  assertEquals(\"Subject\", getName()); assertEquals(\"test\", h); } }", "n_tokens": 77, "n_pass": [347, 17, 17]}
{"time": "2021-02-23 19:30:27.400402", "score": "0.4671", "loss": "14.9445", "code": "void testInitialWhitespaceLine(InternetHeaders ih) throws Exception { assertEquals(1, (\"\").getHeader(\"\")[0]); while (e) { h =  assertEquals(\"Subject\", getName()); assertEquals(\"test\", h); } }", "n_tokens": 76, "n_pass": [351, 18, 18]}
{"time": "2021-02-23 19:30:30.084353", "score": "0.4671", "loss": "14.9445", "code": "void testInitialWhitespaceLine(InternetHeaders ih) throws Exception { assertEquals(1, (\"\").getHeader(\"\")[0]);while (e) { h =  assertEquals(\"Subject\", getName()); assertEquals(\"test\", h); } }", "n_tokens": 75, "n_pass": [359, 19, 19]}
{"time": "2021-02-23 19:30:32.774569", "score": "0.4671", "loss": "14.9445", "code": "void testInitialWhitespaceLine(InternetHeaders ih) throws Exception { assertEquals(1, (\"\").getHeader(\"\")[0]);while(e) { h =  assertEquals(\"Subject\", getName()); assertEquals(\"test\", h); } }", "n_tokens": 74, "n_pass": [361, 20, 20]}
{"time": "2021-02-23 19:30:35.435518", "score": "0.4671", "loss": "14.9445", "code": "void testInitialWhitespaceLine(InternetHeaders ih) throws Exception { assertEquals(1, (\"\").getHeader(\"\")[0]);while(e){ h =  assertEquals(\"Subject\", getName()); assertEquals(\"test\", h); } }", "n_tokens": 73, "n_pass": [365, 21, 21]}
{"time": "2021-02-23 19:30:38.121726", "score": "0.4671", "loss": "14.9445", "code": "void testInitialWhitespaceLine(InternetHeaders ih) throws Exception { assertEquals(1, (\"\").getHeader(\"\")[0]);while(e){h =  assertEquals(\"Subject\", getName()); assertEquals(\"test\", h); } }", "n_tokens": 72, "n_pass": [367, 22, 22]}
{"time": "2021-02-23 19:30:40.795557", "score": "0.4671", "loss": "14.9445", "code": "void testInitialWhitespaceLine(InternetHeaders ih) throws Exception { assertEquals(1, (\"\").getHeader(\"\")[0]);while(e){h=  assertEquals(\"Subject\", getName()); assertEquals(\"test\", h); } }", "n_tokens": 71, "n_pass": [369, 23, 23]}
{"time": "2021-02-23 19:30:43.446611", "score": "0.4671", "loss": "14.9445", "code": "void testInitialWhitespaceLine(InternetHeaders ih) throws Exception { assertEquals(1, (\"\").getHeader(\"\")[0]);while(e){h= assertEquals(\"Subject\", getName()); assertEquals(\"test\", h); } }", "n_tokens": 70, "n_pass": [371, 24, 24]}
{"time": "2021-02-23 19:30:46.097825", "score": "0.4671", "loss": "14.9445", "code": "void testInitialWhitespaceLine(InternetHeaders ih) throws Exception { assertEquals(1, (\"\").getHeader(\"\")[0]);while(e){h=assertEquals(\"Subject\", getName()); assertEquals(\"test\", h); } }", "n_tokens": 69, "n_pass": [372, 25, 25]}
{"time": "2021-02-23 19:30:48.756054", "score": "0.4804", "loss": "15.3069", "code": "void testInitialWhitespaceLine(InternetHeaders ih) throws Exception { assertEquals(1, (\"\").getHeader(\"\")[0]);while(e){h=assertEquals(\"\", getName()); assertEquals(\"test\", h); } }", "n_tokens": 68, "n_pass": [376, 26, 26]}
{"time": "2021-02-23 19:30:51.441856", "score": "0.4804", "loss": "15.3069", "code": "void testInitialWhitespaceLine(InternetHeaders ih) throws Exception { assertEquals(1, (\"\").getHeader(\"\")[0]);while(e){h=assertEquals(\"\",getName()); assertEquals(\"test\", h); } }", "n_tokens": 67, "n_pass": [379, 27, 27]}
{"time": "2021-02-23 19:30:54.104700", "score": "0.4804", "loss": "15.3069", "code": "void testInitialWhitespaceLine(InternetHeaders ih) throws Exception { assertEquals(1, (\"\").getHeader(\"\")[0]);while(e){h=assertEquals(\"\",getName());assertEquals(\"test\", h); } }", "n_tokens": 66, "n_pass": [385, 28, 28]}
{"time": "2021-02-23 19:30:56.789487", "score": "0.4637", "loss": "15.3947", "code": "void testInitialWhitespaceLine(InternetHeaders ih) throws Exception { assertEquals(1, (\"\").getHeader(\"\")[0]);while(e){h=assertEquals(\"\",getName());assertEquals(\"\", h); } }", "n_tokens": 65, "n_pass": [389, 29, 29]}
{"time": "2021-02-23 19:30:59.455511", "score": "0.4637", "loss": "15.3947", "code": "void testInitialWhitespaceLine(InternetHeaders ih) throws Exception { assertEquals(1, (\"\").getHeader(\"\")[0]);while(e){h=assertEquals(\"\",getName());assertEquals(\"\",h); } }", "n_tokens": 64, "n_pass": [392, 30, 30]}
{"time": "2021-02-23 19:31:02.976372", "score": "0.4637", "loss": "15.3947", "code": "void testInitialWhitespaceLine(InternetHeaders ih)throws Exception { assertEquals(1, (\"\").getHeader(\"\")[0]);while(e){h=assertEquals(\"\",getName());assertEquals(\"\",h); } }", "n_tokens": 63, "n_pass": [406, 31, 31]}
{"time": "2021-02-23 19:31:05.632726", "score": "0.4637", "loss": "15.3947", "code": "void testInitialWhitespaceLine(InternetHeaders ih)throws Exception{ assertEquals(1, (\"\").getHeader(\"\")[0]);while(e){h=assertEquals(\"\",getName());assertEquals(\"\",h); } }", "n_tokens": 62, "n_pass": [410, 32, 32]}
{"time": "2021-02-23 19:31:08.308862", "score": "0.4637", "loss": "15.3947", "code": "void testInitialWhitespaceLine(InternetHeaders ih)throws Exception{assertEquals(1, (\"\").getHeader(\"\")[0]);while(e){h=assertEquals(\"\",getName());assertEquals(\"\",h); } }", "n_tokens": 61, "n_pass": [412, 33, 33]}
{"time": "2021-02-23 19:31:10.984052", "score": "0.4637", "loss": "15.3947", "code": "void testInitialWhitespaceLine(InternetHeaders ih)throws Exception{assertEquals(1,(\"\").getHeader(\"\")[0]);while(e){h=assertEquals(\"\",getName());assertEquals(\"\",h); } }", "n_tokens": 60, "n_pass": [417, 34, 34]}
{"time": "2021-02-23 19:31:13.680222", "score": "0.4488", "loss": "15.4604", "code": "void testInitialWhitespaceLine(InternetHeaders ih)throws Exception{assertEquals(1,(\"\").getHeader(\"\")[0]);while(e){hassertEquals(\"\",getName());assertEquals(\"\",h); } }", "n_tokens": 59, "n_pass": [439, 35, 35]}
{"time": "2021-02-23 19:31:16.333570", "score": "0.4432", "loss": "15.4407", "code": "void testInitialWhitespaceLine(InternetHeaders ih)throws Exception{assertEquals(1,(\"\").getHeader(\"\")[0]);while(e){h(\"\",getName());assertEquals(\"\",h); } }", "n_tokens": 58, "n_pass": [440, 36, 36]}
{"time": "2021-02-23 19:31:20.625555", "score": "0.4432", "loss": "15.4407", "code": "void testInitialWhitespaceLine(InternetHeaders ih)throws Exception{assertEquals(1,(\"\").getHeader(\"\")[0]);while(e){h(\"\",getName());assertEquals(\"\",h);} }", "n_tokens": 57, "n_pass": [501, 37, 37]}
{"time": "2021-02-23 19:31:23.278607", "score": "0.4432", "loss": "15.4407", "code": "void testInitialWhitespaceLine(InternetHeaders ih)throws Exception{assertEquals(1,(\"\").getHeader(\"\")[0]);while(e){h(\"\",getName());assertEquals(\"\",h);}}", "n_tokens": 56, "n_pass": [502, 38, 38]}

Minimal simplified code:
void testInitialWhitespaceLine(InternetHeaders ih)throws Exception{assertEquals(1,("").getHeader("")[0]);while(e){h("",getName());assertEquals("",h);}}

