
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/OpenRock__OpenAM/openam-core/src/main/java/com/sun/identity/monitoring/Agent_usage.java
method_name = usage
method_body = public static void usage() { println("java Agent <nb_traps>"); println("where"); println(" -nb_traps: " + "number of traps the SNMP agent will send."); println(" " + "If not specified, the agent will send traps continuously."); }
predict, score, loss = printUsage, 0.46113935112953186, 4.735435485839844

Trace of simplified code(s):
{"time": "2021-02-23 23:47:22.066543", "score": "0.4611", "loss": "4.7354", "code": "public static void usage() { println(\"java Agent <nb_traps>\"); println(\"where\"); println(\" -nb_traps: \" + \"number of traps the SNMP agent will send.\"); println(\" \" + \"If not specified, the agent will send traps continuously.\"); }", "n_tokens": 104, "n_pass": [1, 1, 1]}
{"time": "2021-02-23 23:47:24.831029", "score": "0.2978", "loss": "5.323", "code": "public static void usage() { println; println(\"where\"); println(\" -nb_traps: \" + \"number of traps the SNMP agent will send.\"); println(\" \" + \"If not specified, the agent will send traps continuously.\"); }", "n_tokens": 91, "n_pass": [21, 2, 2]}
{"time": "2021-02-23 23:47:27.587891", "score": "0.4237", "loss": "4.3789", "code": "public static void usage() { println; println(\"where\"); println(\" of traps the SNMP agent will send.\"); println(\" \" + \"If not specified, the agent will send traps continuously.\"); }", "n_tokens": 78, "n_pass": [23, 3, 3]}
{"time": "2021-02-23 23:47:33.291525", "score": "0.4237", "loss": "4.3789", "code": "public static void usage() { println; println(\"where\"); println(\" of traps will send.\"); println(\" \" + \"If not specified, the agent will send traps continuously.\"); }", "n_tokens": 72, "n_pass": [43, 5, 4]}
{"time": "2021-02-23 23:47:36.124952", "score": "0.4237", "loss": "4.3789", "code": "public static void usage() { println; println(\"where\"); println(\" of traps will send.\"); println(\" \" + \"If not will send traps continuously.\"); }", "n_tokens": 65, "n_pass": [47, 6, 5]}
{"time": "2021-02-23 23:47:38.898487", "score": "0.4237", "loss": "4.3789", "code": "public static void usage() { println; println(\"where\"); println(\" of traps will send.\"); println(\" \" + \"If notcontinuously.\"); }", "n_tokens": 58, "n_pass": [48, 7, 6]}
{"time": "2021-02-23 23:47:42.134300", "score": "0.4237", "loss": "4.3789", "code": " void usage() { println; println(\"where\"); println(\" of traps will send.\"); println(\" \" + \"If notcontinuously.\"); }", "n_tokens": 55, "n_pass": [78, 8, 7]}
{"time": "2021-02-23 23:47:44.918452", "score": "0.4149", "loss": "4.514", "code": " void usage() { println(\"where\"); println(\" of traps will send.\"); println(\" \" + \"If notcontinuously.\"); }", "n_tokens": 52, "n_pass": [81, 9, 8]}
{"time": "2021-02-23 23:47:47.718779", "score": "0.4149", "loss": "4.514", "code": " void usage() { println(\"where\"); println(\"  will send.\"); println(\" \" + \"If notcontinuously.\"); }", "n_tokens": 49, "n_pass": [86, 10, 9]}
{"time": "2021-02-23 23:48:04.583725", "score": "0.4149", "loss": "4.514", "code": " void usage() { println(\"where\"); println(\"  will send.\"); println(\" \" + \"notcontinuously.\"); }", "n_tokens": 47, "n_pass": [143, 15, 10]}
{"time": "2021-02-23 23:48:10.159761", "score": "0.4149", "loss": "4.514", "code": "void usage() { println(\"where\"); println(\"  will send.\"); println(\" \" + \"notcontinuously.\"); }", "n_tokens": 46, "n_pass": [148, 17, 11]}
{"time": "2021-02-23 23:48:13.854115", "score": "0.4149", "loss": "4.514", "code": "void usage(){ println(\"where\"); println(\"  will send.\"); println(\" \" + \"notcontinuously.\"); }", "n_tokens": 45, "n_pass": [154, 18, 12]}
{"time": "2021-02-23 23:48:16.604504", "score": "0.4149", "loss": "4.514", "code": "void usage(){println(\"where\"); println(\"  will send.\"); println(\" \" + \"notcontinuously.\"); }", "n_tokens": 44, "n_pass": [156, 19, 13]}
{"time": "2021-02-23 23:48:19.376486", "score": "0.3736", "loss": "1.9937", "code": "void usage(){(\"where\"); println(\"  will send.\"); println(\" \" + \"notcontinuously.\"); }", "n_tokens": 43, "n_pass": [157, 20, 14]}
{"time": "2021-02-23 23:48:39.318125", "score": "0.3736", "loss": "1.9937", "code": "void usage(){(\"where\");println(\"  will send.\"); println(\" \" + \"notcontinuously.\"); }", "n_tokens": 42, "n_pass": [221, 25, 15]}
{"time": "2021-02-23 23:48:44.857547", "score": "0.3736", "loss": "1.9937", "code": "void usage(){(\"where\");println(\" will send.\"); println(\" \" + \"notcontinuously.\"); }", "n_tokens": 41, "n_pass": [225, 27, 16]}
{"time": "2021-02-23 23:48:47.621428", "score": "0.3736", "loss": "1.9937", "code": "void usage(){(\"where\");println(\"will send.\"); println(\" \" + \"notcontinuously.\"); }", "n_tokens": 40, "n_pass": [226, 28, 17]}
{"time": "2021-02-23 23:48:53.154166", "score": "0.3736", "loss": "1.9937", "code": "void usage(){(\"where\");println(\"willsend.\"); println(\" \" + \"notcontinuously.\"); }", "n_tokens": 39, "n_pass": [228, 30, 18]}
{"time": "2021-02-23 23:48:58.670538", "score": "0.3736", "loss": "1.9937", "code": "void usage(){(\"where\");println(\"willsend\"); println(\" \" + \"notcontinuously.\"); }", "n_tokens": 38, "n_pass": [230, 32, 19]}
{"time": "2021-02-23 23:49:01.412348", "score": "0.3736", "loss": "1.9937", "code": "void usage(){(\"where\");println(\"willsend\");println(\" \" + \"notcontinuously.\"); }", "n_tokens": 37, "n_pass": [234, 33, 20]}
{"time": "2021-02-23 23:49:06.942879", "score": "0.4392", "loss": "2.4638", "code": "void usage(){(\"where\");println(\"willsend\");println(\"\" + \"notcontinuously.\"); }", "n_tokens": 36, "n_pass": [238, 35, 21]}
{"time": "2021-02-23 23:49:09.693696", "score": "0.4392", "loss": "2.4638", "code": "void usage(){(\"where\");println(\"willsend\");println(\"\"+ \"notcontinuously.\"); }", "n_tokens": 35, "n_pass": [240, 36, 22]}
{"time": "2021-02-23 23:49:12.449383", "score": "0.4392", "loss": "2.4638", "code": "void usage(){(\"where\");println(\"willsend\");println(\"\"+\"notcontinuously.\"); }", "n_tokens": 34, "n_pass": [242, 37, 23]}
{"time": "2021-02-23 23:49:15.208452", "score": "0.4392", "loss": "2.4638", "code": "void usage(){(\"where\");println(\"willsend\");println(\"\"+\"continuously.\"); }", "n_tokens": 33, "n_pass": [244, 38, 24]}
{"time": "2021-02-23 23:49:20.699868", "score": "0.4392", "loss": "2.4638", "code": "void usage(){(\"where\");println(\"willsend\");println(\"\"+\"continuously\"); }", "n_tokens": 32, "n_pass": [246, 40, 25]}
{"time": "2021-02-23 23:49:23.466597", "score": "0.4392", "loss": "2.4638", "code": "void usage(){(\"where\");println(\"willsend\");println(\"\"+\"continuously\");}", "n_tokens": 31, "n_pass": [250, 41, 26]}
{"time": "2021-02-23 23:49:27.203384", "score": "0.4247", "loss": "2.2847", "code": "void usage(){(\"\");println(\"willsend\");println(\"\"+\"continuously\");}", "n_tokens": 30, "n_pass": [260, 42, 27]}

Minimal simplified code:
void usage(){("");println("willsend");println(""+"continuously");}

