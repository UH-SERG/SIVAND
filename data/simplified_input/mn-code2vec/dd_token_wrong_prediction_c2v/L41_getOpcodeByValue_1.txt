
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/droidefense__engine/mods/memapktool/src/main/java/org/jf/dexlib2/Opcodes_getOpcodeByValue.java
method_name = getOpcodeByValue
method_body = public Opcode getOpcodeByValue(int opcodeValue) { switch(opcodeValue) { case 0x100: return Opcode.PACKED_SWITCH_PAYLOAD; case 0x200: return Opcode.SPARSE_SWITCH_PAYLOAD; case 0x300: return Opcode.ARRAY_PAYLOAD; default: if (opcodeValue >= 0 && opcodeValue < opcodesByValue.length) { return opcodesByValue[opcodeValue]; } return null; } }
predict, score, loss = readFrom, 0.9024337530136108, 21.79950523376465

Trace of simplified code(s):
{"time": "2021-02-23 19:18:32.276766", "score": "0.9024", "loss": "21.7995", "code": "public Opcode getOpcodeByValue(int opcodeValue) { switch(opcodeValue) { case 0x100: return Opcode.PACKED_SWITCH_PAYLOAD; case 0x200: return Opcode.SPARSE_SWITCH_PAYLOAD; case 0x300: return Opcode.ARRAY_PAYLOAD; default: if (opcodeValue >= 0 && opcodeValue < opcodesByValue.length) { return opcodesByValue[opcodeValue]; } return null; } }", "n_tokens": 123, "n_pass": [1, 1, 1]}
{"time": "2021-02-23 19:18:34.961955", "score": "0.9096", "loss": "22.1602", "code": "public Opcode getOpcodeByValue(int opcodeValue) { switch(opcodeValue) { case 0x100: return00: return Opcode.SPARSE_SWITCH_PAYLOAD; case 0x300: return Opcode.ARRAY_PAYLOAD; default: if (opcodeValue >= 0 && opcodeValue < opcodesByValue.length) { return opcodesByValue[opcodeValue]; } return null; } }", "n_tokens": 108, "n_pass": [22, 2, 2]}
{"time": "2021-02-23 19:18:37.740367", "score": "0.9599", "loss": "23.6707", "code": "public Opcode getOpcodeByValue(int opcodeValue) { switch(opcodeValue) { case 0x100: return00: return Opcode.SPARSE_SWITCH_PAYLOAD; PAYLOAD; default: if (opcodeValue >= 0 && opcodeValue < opcodesByValue.length) { return opcodesByValue[opcodeValue]; } return null; } }", "n_tokens": 93, "n_pass": [24, 3, 3]}
{"time": "2021-02-23 19:18:40.411200", "score": "0.9379", "loss": "22.8169", "code": "public Opcode getOpcodeByValue(int opcodeValue) { switch(opcodeValue) { case 0x100: returnPAYLOAD; default: if (opcodeValue >= 0 && opcodeValue < opcodesByValue.length) { return opcodesByValue[opcodeValue]; } return null; } }", "n_tokens": 78, "n_pass": [30, 4, 4]}
{"time": "2021-02-23 19:18:43.097620", "score": "0.913", "loss": "21.98", "code": "public Opcode getOpcodeByValue(int opcodeValue) { switch(opcodeValue) { case 0x100: returnPAYLOAD; default: if (opcodeValue >= 0 .length) { return opcodesByValue[opcodeValue]; } return null; } }", "n_tokens": 70, "n_pass": [48, 5, 5]}
{"time": "2021-02-23 19:18:45.756969", "score": "0.9185", "loss": "21.7685", "code": "public Opcode getOpcodeByValue(int opcodeValue) { switch(opcodeValue) { case 0x100: returnPAYLOAD; default: if (opcodeValue >= 0 .length) { return ; } return null; } }", "n_tokens": 66, "n_pass": [77, 6, 6]}
{"time": "2021-02-23 19:18:48.402915", "score": "0.9213", "loss": "22.0207", "code": "public Opcode getOpcodeByValue(int opcodeValue) { switch(opcodeValue) { case 0x100: returnPAYLOAD; default: if (opcodeValue >= 0 .length) { return ; }  } }", "n_tokens": 62, "n_pass": [78, 7, 7]}
{"time": "2021-02-23 19:18:51.469081", "score": "0.9213", "loss": "22.0023", "code": "public Opcode getOpcodeByValue(int opcodeValue) { switch(opcodeValue) { case 0: returnPAYLOAD; default: if (opcodeValue >= 0 .length) { return ; }  } }", "n_tokens": 58, "n_pass": [86, 8, 8]}
{"time": "2021-02-23 19:18:55.314439", "score": "0.9462", "loss": "22.8584", "code": "public Opcode getOpcodeByValue(int opcodeValue) { switch(opcodeValue) { case 0:PAYLOAD; default: if (opcodeValue >= 0 .length) { return ; }  } }", "n_tokens": 56, "n_pass": [133, 9, 9]}
{"time": "2021-02-23 19:18:57.982767", "score": "0.9454", "loss": "22.8685", "code": "public Opcode getOpcodeByValue(int opcodeValue) { switch(opcodeValue) { case 0: default: if (opcodeValue >= 0 .length) { return ; }  } }", "n_tokens": 54, "n_pass": [134, 10, 10]}
{"time": "2021-02-23 19:19:00.629588", "score": "0.8099", "loss": "22.6076", "code": "public Opcode getOpcodeByValue(int opcodeValue) { switch(opcodeValue) { case 0: default: if (opcodeValue= 0 .length) { return ; }  } }", "n_tokens": 52, "n_pass": [139, 11, 11]}
{"time": "2021-02-23 19:19:03.269400", "score": "0.9867", "loss": "24.5022", "code": "public Opcode getOpcodeByValue(int opcodeValue) { switch(opcodeValue) { case 0: default: if (opcodeValue0 .length) { return ; }  } }", "n_tokens": 50, "n_pass": [140, 12, 12]}
{"time": "2021-02-23 19:19:05.929545", "score": "0.9867", "loss": "24.5022", "code": "public Opcode getOpcodeByValue(int opcodeValue) { switch(opcodeValue) { case 0: default: if (opcodeValue.length) { return ; }  } }", "n_tokens": 48, "n_pass": [141, 13, 13]}
{"time": "2021-02-23 19:19:08.604063", "score": "0.9752", "loss": "23.9326", "code": "public Opcode getOpcodeByValue(int opcodeValue) { switch(opcodeValue) { case 0: default: if (opcodeValue) { return ; }  } }", "n_tokens": 46, "n_pass": [142, 14, 14]}
{"time": "2021-02-23 19:19:11.230418", "score": "0.9752", "loss": "23.9326", "code": "public Opcode getOpcodeByValue(int opcodeValue) { switch(opcodeValue) { case 0: default: if (opcodeValue) { ; }  } }", "n_tokens": 44, "n_pass": [145, 15, 15]}
{"time": "2021-02-23 19:19:13.860760", "score": "0.9752", "loss": "23.9326", "code": "public Opcode getOpcodeByValue(int opcodeValue) { switch(opcodeValue) { case 0: default: if (opcodeValue) { }  } }", "n_tokens": 42, "n_pass": [146, 16, 16]}
{"time": "2021-02-23 19:19:16.492405", "score": "0.9752", "loss": "23.9326", "code": " Opcode getOpcodeByValue(int opcodeValue) { switch(opcodeValue) { case 0: default: if (opcodeValue) { }  } }", "n_tokens": 41, "n_pass": [150, 17, 17]}
{"time": "2021-02-23 19:19:19.139375", "score": "0.9752", "loss": "23.9326", "code": "Opcode getOpcodeByValue(int opcodeValue) { switch(opcodeValue) { case 0: default: if (opcodeValue) { }  } }", "n_tokens": 40, "n_pass": [151, 18, 18]}
{"time": "2021-02-23 19:19:29.213210", "score": "0.9752", "loss": "23.9326", "code": "Opcode getOpcodeByValue(int opcodeValue){ switch(opcodeValue) { case 0: default: if (opcodeValue) { }  } }", "n_tokens": 39, "n_pass": [220, 19, 19]}
{"time": "2021-02-23 19:19:31.856464", "score": "0.9752", "loss": "23.9326", "code": "Opcode getOpcodeByValue(int opcodeValue){switch(opcodeValue) { case 0: default: if (opcodeValue) { }  } }", "n_tokens": 38, "n_pass": [221, 20, 20]}
{"time": "2021-02-23 19:19:34.502385", "score": "0.9752", "loss": "23.9326", "code": "Opcode getOpcodeByValue(int opcodeValue){switch(opcodeValue){ case 0: default: if (opcodeValue) { }  } }", "n_tokens": 37, "n_pass": [226, 21, 21]}
{"time": "2021-02-23 19:19:37.136471", "score": "0.9752", "loss": "23.9326", "code": "Opcode getOpcodeByValue(int opcodeValue){switch(opcodeValue){case 0: default: if (opcodeValue) { }  } }", "n_tokens": 36, "n_pass": [228, 22, 22]}
{"time": "2021-02-23 19:19:39.763440", "score": "0.9752", "loss": "23.9326", "code": "Opcode getOpcodeByValue(int opcodeValue){switch(opcodeValue){case 0:default: if (opcodeValue) { }  } }", "n_tokens": 35, "n_pass": [233, 23, 23]}
{"time": "2021-02-23 19:19:42.390568", "score": "0.9752", "loss": "23.9326", "code": "Opcode getOpcodeByValue(int opcodeValue){switch(opcodeValue){case 0:default:if (opcodeValue) { }  } }", "n_tokens": 34, "n_pass": [236, 24, 24]}
{"time": "2021-02-23 19:19:45.019429", "score": "0.9752", "loss": "23.9326", "code": "Opcode getOpcodeByValue(int opcodeValue){switch(opcodeValue){case 0:default:if(opcodeValue) { }  } }", "n_tokens": 33, "n_pass": [238, 25, 25]}
{"time": "2021-02-23 19:19:47.645350", "score": "0.9752", "loss": "23.9326", "code": "Opcode getOpcodeByValue(int opcodeValue){switch(opcodeValue){case 0:default:if(opcodeValue){ }  } }", "n_tokens": 32, "n_pass": [242, 26, 26]}
{"time": "2021-02-23 19:19:50.280783", "score": "0.9752", "loss": "23.9326", "code": "Opcode getOpcodeByValue(int opcodeValue){switch(opcodeValue){case 0:default:if(opcodeValue){}  } }", "n_tokens": 31, "n_pass": [244, 27, 27]}
{"time": "2021-02-23 19:19:52.922865", "score": "0.9752", "loss": "23.9326", "code": "Opcode getOpcodeByValue(int opcodeValue){switch(opcodeValue){case 0:default:if(opcodeValue){} } }", "n_tokens": 30, "n_pass": [246, 28, 28]}
{"time": "2021-02-23 19:19:55.546409", "score": "0.9752", "loss": "23.9326", "code": "Opcode getOpcodeByValue(int opcodeValue){switch(opcodeValue){case 0:default:if(opcodeValue){}} }", "n_tokens": 29, "n_pass": [247, 29, 29]}
{"time": "2021-02-23 19:19:58.194216", "score": "0.9752", "loss": "23.9326", "code": "Opcode getOpcodeByValue(int opcodeValue){switch(opcodeValue){case 0:default:if(opcodeValue){}}}", "n_tokens": 28, "n_pass": [249, 30, 30]}

Minimal simplified code:
Opcode getOpcodeByValue(int opcodeValue){switch(opcodeValue){case 0:default:if(opcodeValue){}}}

