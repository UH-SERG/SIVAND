
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/CogComp__cogcomp-nlp/quantifier/src/main/java/edu/illinois/cs/cogcomp/quant/driver/Quantifier_trainOnAll.java
method_name = trainOnAll
method_body = public void trainOnAll() { QuantitiesClassifier classifier = new QuantitiesClassifier(modelName + ".lc", modelName + ".lex"); QuantitiesDataReader trainReader = new QuantitiesDataReader(dataDir + "/allData.txt", "train"); BatchTrainer trainer = new BatchTrainer(classifier, trainReader); trainer.train(45); classifier.save(); }
predict, score, loss = run, 0.32533174753189087, 16.9288330078125

Trace of simplified code(s):
{"time": "2021-02-24 02:17:03.697317", "score": "0.3253", "loss": "16.9288", "code": "public void trainOnAll() { QuantitiesClassifier classifier = new QuantitiesClassifier(modelName + \".lc\", modelName + \".lex\"); QuantitiesDataReader trainReader = new QuantitiesDataReader(dataDir + \"/allData.txt\", \"train\"); BatchTrainer trainer = new BatchTrainer(classifier, trainReader); trainer.train(45); classifier.save(); }", "n_tokens": 103, "n_pass": [1, 1, 1]}
{"time": "2021-02-24 02:17:11.685101", "score": "0.5202", "loss": "15.9821", "code": "public void trainOnAll() { QuantitiesClassifier classifier = new QuantitiesClassifier(modelName + \".lc\", modelName + \".lex\"); QuantitiesDataReader trainReader = new QuantitiesDataReader(dataDir + \"/allData.txt\", \"train\"); BatchTrainer trainer = new BatchTrainer(classifier, trainReader); trainer.train.save(); }", "n_tokens": 96, "n_pass": [58, 4, 2]}
{"time": "2021-02-24 02:17:14.331430", "score": "0.3152", "loss": "15.8119", "code": "public void trainOnAll() { QuantitiesClassifier classifier = new QuantitiesClassifier(modelName + modelName + \".lex\"); QuantitiesDataReader trainReader = new QuantitiesDataReader(dataDir + \"/allData.txt\", \"train\"); BatchTrainer trainer = new BatchTrainer(classifier, trainReader); trainer.train.save(); }", "n_tokens": 90, "n_pass": [64, 5, 3]}
{"time": "2021-02-24 02:17:19.666067", "score": "0.3928", "loss": "15.9044", "code": "public void trainOnAll() { QuantitiesClassifier classifier = new QuantitiesClassifier(modelName +  \".lex\"); QuantitiesDataReader trainReader = new QuantitiesDataReader(dataDir + \"/allData.txt\", \"train\"); BatchTrainer trainer = new BatchTrainer(classifier, trainReader); trainer.train.save(); }", "n_tokens": 87, "n_pass": [107, 7, 4]}
{"time": "2021-02-24 02:17:24.937958", "score": "0.3804", "loss": "15.9153", "code": "public void trainOnAll() { QuantitiesClassifier classifier = new QuantitiesClassifier(modelName +  \".lex\"); QuantitiesDataReader trainReader = new QuantitiesDataReader( \"/allData.txt\", \"train\"); BatchTrainer trainer = new BatchTrainer(classifier, trainReader); trainer.train.save(); }", "n_tokens": 84, "n_pass": [113, 9, 5]}
{"time": "2021-02-24 02:17:27.575477", "score": "0.3704", "loss": "15.8121", "code": "public void trainOnAll() { QuantitiesClassifier classifier = new QuantitiesClassifier(modelName +  \".lex\"); QuantitiesDataReader trainReader = new QuantitiesDataReader( \"/\", \"train\"); BatchTrainer trainer = new BatchTrainer(classifier, trainReader); trainer.train.save(); }", "n_tokens": 81, "n_pass": [115, 10, 6]}
{"time": "2021-02-24 02:17:33.267360", "score": "0.3544", "loss": "15.5879", "code": "public void trainOnAll() { QuantitiesClassifier classifier =QuantitiesClassifier(modelName +  \".lex\"); QuantitiesDataReader trainReader = new QuantitiesDataReader( \"/\", \"train\"); BatchTrainer trainer = new BatchTrainer(classifier, trainReader); trainer.train.save(); }", "n_tokens": 78, "n_pass": [131, 12, 7]}
{"time": "2021-02-24 02:17:47.322804", "score": "0.532", "loss": "17.0512", "code": "public void trainOnAll() { QuantitiesClassifierclassifier =QuantitiesClassifier(modelName +  \".lex\"); QuantitiesDataReader trainReader = new QuantitiesDataReader( \"/\", \"train\"); BatchTrainer trainer = new BatchTrainer(classifier, trainReader); trainer.train.save(); }", "n_tokens": 77, "n_pass": [205, 16, 8]}
{"time": "2021-02-24 02:17:50.033061", "score": "0.532", "loss": "17.0512", "code": "public void trainOnAll() { QuantitiesClassifier =QuantitiesClassifier(modelName +  \".lex\"); QuantitiesDataReader trainReader = new QuantitiesDataReader( \"/\", \"train\"); BatchTrainer trainer = new BatchTrainer(classifier, trainReader); trainer.train.save(); }", "n_tokens": 76, "n_pass": [206, 17, 9]}
{"time": "2021-02-24 02:17:52.715627", "score": "0.532", "loss": "17.0512", "code": "public void trainOnAll() { QuantitiesClassifier=QuantitiesClassifier(modelName +  \".lex\"); QuantitiesDataReader trainReader = new QuantitiesDataReader( \"/\", \"train\"); BatchTrainer trainer = new BatchTrainer(classifier, trainReader); trainer.train.save(); }", "n_tokens": 75, "n_pass": [207, 18, 10]}
{"time": "2021-02-24 02:17:58.059732", "score": "0.4249", "loss": "17.1173", "code": "public void trainOnAll() { QuantitiesClassifier=(modelName +  \".lex\"); QuantitiesDataReader trainReader = new QuantitiesDataReader( \"/\", \"train\"); BatchTrainer trainer = new BatchTrainer(classifier, trainReader); trainer.train.save(); }", "n_tokens": 74, "n_pass": [209, 20, 11]}
{"time": "2021-02-24 02:18:00.684286", "score": "0.3803", "loss": "17.2198", "code": "public void trainOnAll() { QuantitiesClassifier=( +  \".lex\"); QuantitiesDataReader trainReader = new QuantitiesDataReader( \"/\", \"train\"); BatchTrainer trainer = new BatchTrainer(classifier, trainReader); trainer.train.save(); }", "n_tokens": 73, "n_pass": [211, 21, 12]}
{"time": "2021-02-24 02:18:03.315836", "score": "0.383", "loss": "17.1968", "code": "public void trainOnAll() { QuantitiesClassifier=(  \".lex\"); QuantitiesDataReader trainReader = new QuantitiesDataReader( \"/\", \"train\"); BatchTrainer trainer = new BatchTrainer(classifier, trainReader); trainer.train.save(); }", "n_tokens": 71, "n_pass": [212, 22, 13]}
{"time": "2021-02-24 02:18:05.987158", "score": "0.383", "loss": "17.1968", "code": "public void trainOnAll() { QuantitiesClassifier=(\".lex\"); QuantitiesDataReader trainReader = new QuantitiesDataReader( \"/\", \"train\"); BatchTrainer trainer = new BatchTrainer(classifier, trainReader); trainer.train.save(); }", "n_tokens": 69, "n_pass": [213, 23, 14]}
{"time": "2021-02-24 02:18:32.496790", "score": "0.383", "loss": "17.1968", "code": " void trainOnAll() { QuantitiesClassifier=(\".lex\"); QuantitiesDataReader trainReader = new QuantitiesDataReader( \"/\", \"train\"); BatchTrainer trainer = new BatchTrainer(classifier, trainReader); trainer.train.save(); }", "n_tokens": 68, "n_pass": [242, 33, 15]}
{"time": "2021-02-24 02:18:35.154241", "score": "0.383", "loss": "17.1968", "code": "void trainOnAll() { QuantitiesClassifier=(\".lex\"); QuantitiesDataReader trainReader = new QuantitiesDataReader( \"/\", \"train\"); BatchTrainer trainer = new BatchTrainer(classifier, trainReader); trainer.train.save(); }", "n_tokens": 67, "n_pass": [243, 34, 16]}
{"time": "2021-02-24 02:18:38.561286", "score": "0.383", "loss": "17.1968", "code": "void trainOnAll(){ QuantitiesClassifier=(\".lex\"); QuantitiesDataReader trainReader = new QuantitiesDataReader( \"/\", \"train\"); BatchTrainer trainer = new BatchTrainer(classifier, trainReader); trainer.train.save(); }", "n_tokens": 66, "n_pass": [249, 35, 17]}
{"time": "2021-02-24 02:18:41.193444", "score": "0.383", "loss": "17.1968", "code": "void trainOnAll(){QuantitiesClassifier=(\".lex\"); QuantitiesDataReader trainReader = new QuantitiesDataReader( \"/\", \"train\"); BatchTrainer trainer = new BatchTrainer(classifier, trainReader); trainer.train.save(); }", "n_tokens": 65, "n_pass": [251, 36, 18]}
{"time": "2021-02-24 02:19:18.175689", "score": "0.383", "loss": "17.1968", "code": "void trainOnAll(){QuantitiesClassifier=(\"lex\"); QuantitiesDataReader trainReader = new QuantitiesDataReader( \"/\", \"train\"); BatchTrainer trainer = new BatchTrainer(classifier, trainReader); trainer.train.save(); }", "n_tokens": 64, "n_pass": [345, 47, 19]}
{"time": "2021-02-24 02:19:20.846524", "score": "0.3864", "loss": "17.2558", "code": "void trainOnAll(){QuantitiesClassifier=(\"\"); QuantitiesDataReader trainReader = new QuantitiesDataReader( \"/\", \"train\"); BatchTrainer trainer = new BatchTrainer(classifier, trainReader); trainer.train.save(); }", "n_tokens": 63, "n_pass": [346, 48, 20]}
{"time": "2021-02-24 02:19:23.477558", "score": "0.3864", "loss": "17.2558", "code": "void trainOnAll(){QuantitiesClassifier=(\"\");QuantitiesDataReader trainReader = new QuantitiesDataReader( \"/\", \"train\"); BatchTrainer trainer = new BatchTrainer(classifier, trainReader); trainer.train.save(); }", "n_tokens": 62, "n_pass": [350, 49, 21]}
{"time": "2021-02-24 02:19:34.119683", "score": "0.3864", "loss": "17.2558", "code": "void trainOnAll(){QuantitiesClassifier=(\"\");QuantitiesDataReader trainReader= new QuantitiesDataReader( \"/\", \"train\"); BatchTrainer trainer = new BatchTrainer(classifier, trainReader); trainer.train.save(); }", "n_tokens": 61, "n_pass": [354, 53, 22]}
{"time": "2021-02-24 02:19:36.786723", "score": "0.3864", "loss": "17.2558", "code": "void trainOnAll(){QuantitiesClassifier=(\"\");QuantitiesDataReader trainReader=new QuantitiesDataReader( \"/\", \"train\"); BatchTrainer trainer = new BatchTrainer(classifier, trainReader); trainer.train.save(); }", "n_tokens": 60, "n_pass": [356, 54, 23]}
{"time": "2021-02-24 02:19:44.717441", "score": "0.3864", "loss": "17.2558", "code": "void trainOnAll(){QuantitiesClassifier=(\"\");QuantitiesDataReader trainReader=new QuantitiesDataReader(\"/\", \"train\"); BatchTrainer trainer = new BatchTrainer(classifier, trainReader); trainer.train.save(); }", "n_tokens": 59, "n_pass": [361, 57, 24]}
{"time": "2021-02-24 02:19:47.485604", "score": "0.4057", "loss": "17.4349", "code": "void trainOnAll(){QuantitiesClassifier=(\"\");QuantitiesDataReader trainReader=new QuantitiesDataReader(\"\", \"train\"); BatchTrainer trainer = new BatchTrainer(classifier, trainReader); trainer.train.save(); }", "n_tokens": 58, "n_pass": [363, 58, 25]}
{"time": "2021-02-24 02:19:50.206467", "score": "0.4057", "loss": "17.4349", "code": "void trainOnAll(){QuantitiesClassifier=(\"\");QuantitiesDataReader trainReader=new QuantitiesDataReader(\"\",\"train\"); BatchTrainer trainer = new BatchTrainer(classifier, trainReader); trainer.train.save(); }", "n_tokens": 57, "n_pass": [366, 59, 26]}
{"time": "2021-02-24 02:19:52.838880", "score": "0.615", "loss": "16.9415", "code": "void trainOnAll(){QuantitiesClassifier=(\"\");QuantitiesDataReader trainReader=new QuantitiesDataReader(\"\",\"\"); BatchTrainer trainer = new BatchTrainer(classifier, trainReader); trainer.train.save(); }", "n_tokens": 56, "n_pass": [368, 60, 27]}
{"time": "2021-02-24 02:19:55.480674", "score": "0.615", "loss": "16.9415", "code": "void trainOnAll(){QuantitiesClassifier=(\"\");QuantitiesDataReader trainReader=new QuantitiesDataReader(\"\",\"\");BatchTrainer trainer = new BatchTrainer(classifier, trainReader); trainer.train.save(); }", "n_tokens": 55, "n_pass": [372, 61, 28]}
{"time": "2021-02-24 02:20:05.989714", "score": "0.615", "loss": "16.9415", "code": "void trainOnAll(){QuantitiesClassifier=(\"\");QuantitiesDataReader trainReader=new QuantitiesDataReader(\"\",\"\");BatchTrainer trainer= new BatchTrainer(classifier, trainReader); trainer.train.save(); }", "n_tokens": 54, "n_pass": [376, 65, 29]}
{"time": "2021-02-24 02:20:08.644284", "score": "0.615", "loss": "16.9415", "code": "void trainOnAll(){QuantitiesClassifier=(\"\");QuantitiesDataReader trainReader=new QuantitiesDataReader(\"\",\"\");BatchTrainer trainer=new BatchTrainer(classifier, trainReader); trainer.train.save(); }", "n_tokens": 53, "n_pass": [378, 66, 30]}
{"time": "2021-02-24 02:20:11.334881", "score": "0.4789", "loss": "16.5832", "code": "void trainOnAll(){QuantitiesClassifier=(\"\");QuantitiesDataReader trainReader=new QuantitiesDataReader(\"\",\"\");BatchTrainer trainer= BatchTrainer(classifier, trainReader); trainer.train.save(); }", "n_tokens": 52, "n_pass": [379, 67, 31]}
{"time": "2021-02-24 02:20:13.966158", "score": "0.4789", "loss": "16.5832", "code": "void trainOnAll(){QuantitiesClassifier=(\"\");QuantitiesDataReader trainReader=new QuantitiesDataReader(\"\",\"\");BatchTrainer trainer=BatchTrainer(classifier, trainReader); trainer.train.save(); }", "n_tokens": 51, "n_pass": [380, 68, 32]}
{"time": "2021-02-24 02:20:16.599700", "score": "0.4789", "loss": "16.5832", "code": "void trainOnAll(){QuantitiesClassifier=(\"\");QuantitiesDataReader trainReader=new QuantitiesDataReader(\"\",\"\");BatchTrainer trainer=BatchTrainer(classifier,trainReader); trainer.train.save(); }", "n_tokens": 50, "n_pass": [385, 69, 33]}
{"time": "2021-02-24 02:20:19.232144", "score": "0.4789", "loss": "16.5832", "code": "void trainOnAll(){QuantitiesClassifier=(\"\");QuantitiesDataReader trainReader=new QuantitiesDataReader(\"\",\"\");BatchTrainer trainer=BatchTrainer(classifier,trainReader);trainer.train.save(); }", "n_tokens": 49, "n_pass": [389, 70, 34]}
{"time": "2021-02-24 02:20:24.482685", "score": "0.5944", "loss": "16.7552", "code": "void trainOnAll(){QuantitiesClassifier=(\"\");QuantitiesDataReader trainReader=new QuantitiesDataReader(\"\",\"\");BatchTrainer trainer=BatchTrainer(classifier,trainReader);trainer.trainsave(); }", "n_tokens": 48, "n_pass": [393, 72, 35]}
{"time": "2021-02-24 02:20:29.788090", "score": "0.5944", "loss": "16.7552", "code": "void trainOnAll(){QuantitiesClassifier=(\"\");QuantitiesDataReader trainReader=new QuantitiesDataReader(\"\",\"\");BatchTrainer trainer=BatchTrainer(classifier,trainReader);trainer.trainsave();}", "n_tokens": 47, "n_pass": [398, 74, 36]}
{"time": "2021-02-24 02:20:33.212564", "score": "0.5955", "loss": "17.0076", "code": "void trainOnAll(){QuantitiesClassifier(\"\");QuantitiesDataReader trainReader=new QuantitiesDataReader(\"\",\"\");BatchTrainer trainer=BatchTrainer(classifier,trainReader);trainer.trainsave();}", "n_tokens": 46, "n_pass": [407, 75, 37]}
{"time": "2021-02-24 02:20:35.885175", "score": "0.4817", "loss": "18.3243", "code": "void trainOnAll(){QuantitiesClassifier(\"\"); trainReader=new QuantitiesDataReader(\"\",\"\");BatchTrainer trainer=BatchTrainer(classifier,trainReader);trainer.trainsave();}", "n_tokens": 45, "n_pass": [413, 76, 38]}
{"time": "2021-02-24 02:20:38.536200", "score": "0.4817", "loss": "18.3243", "code": "void trainOnAll(){QuantitiesClassifier(\"\");trainReader=new QuantitiesDataReader(\"\",\"\");BatchTrainer trainer=BatchTrainer(classifier,trainReader);trainer.trainsave();}", "n_tokens": 44, "n_pass": [414, 77, 39]}
{"time": "2021-02-24 02:20:41.172140", "score": "0.398", "loss": "17.9273", "code": "void trainOnAll(){QuantitiesClassifier(\"\");trainReader= QuantitiesDataReader(\"\",\"\");BatchTrainer trainer=BatchTrainer(classifier,trainReader);trainer.trainsave();}", "n_tokens": 43, "n_pass": [417, 78, 40]}
{"time": "2021-02-24 02:20:43.796881", "score": "0.398", "loss": "17.9273", "code": "void trainOnAll(){QuantitiesClassifier(\"\");trainReader=QuantitiesDataReader(\"\",\"\");BatchTrainer trainer=BatchTrainer(classifier,trainReader);trainer.trainsave();}", "n_tokens": 42, "n_pass": [418, 79, 41]}
{"time": "2021-02-24 02:20:54.296329", "score": "0.2928", "loss": "19.496", "code": "void trainOnAll(){QuantitiesClassifier(\"\");trainReader=QuantitiesDataReader(\"\",\"\");BatchTrainer trainer=BatchTrainer(classifiertrainReader);trainer.trainsave();}", "n_tokens": 41, "n_pass": [435, 83, 42]}
{"time": "2021-02-24 02:20:56.901333", "score": "0.2434", "loss": "18.6476", "code": "void trainOnAll(){QuantitiesClassifier(\"\");trainReader=QuantitiesDataReader(\"\",\"\");BatchTrainer trainer=BatchTrainer(classifier);trainer.trainsave();}", "n_tokens": 40, "n_pass": [436, 84, 43]}
{"time": "2021-02-24 02:20:59.585533", "score": "0.3615", "loss": "18.2263", "code": "void trainOnAll(){QuantitiesClassifier(\"\");trainReader=QuantitiesDataReader(\"\",\"\");BatchTrainer trainer=BatchTrainer(classifier);trainertrainsave();}", "n_tokens": 39, "n_pass": [440, 85, 44]}
{"time": "2021-02-24 02:21:02.208212", "score": "0.3615", "loss": "18.2263", "code": "void trainOnAll(){QuantitiesClassifier(\"\");trainReader=QuantitiesDataReader(\"\",\"\");BatchTrainer trainer=BatchTrainer(classifier);trainersave();}", "n_tokens": 38, "n_pass": [441, 86, 45]}
{"time": "2021-02-24 02:21:04.841690", "score": "0.3425", "loss": "18.0442", "code": "void trainOnAll(){QuantitiesClassifier(\"\");trainReader=QuantitiesDataReader(\"\",\"\");BatchTrainer trainer=BatchTrainer(classifier);trainer();}", "n_tokens": 37, "n_pass": [442, 87, 46]}
{"time": "2021-02-24 02:21:10.953662", "score": "0.6243", "loss": "18.5604", "code": "void trainOnAll(){QuantitiesClassifier(\"\");trainReaderQuantitiesDataReader(\"\",\"\");BatchTrainer trainer=BatchTrainer(classifier);trainer();}", "n_tokens": 36, "n_pass": [460, 89, 47]}
{"time": "2021-02-24 02:21:13.561406", "score": "0.5204", "loss": "18.5914", "code": "void trainOnAll(){QuantitiesClassifier(\"\");trainReader(\"\",\"\");BatchTrainer trainer=BatchTrainer(classifier);trainer();}", "n_tokens": 35, "n_pass": [461, 90, 48]}
{"time": "2021-02-24 02:21:23.995958", "score": "0.612", "loss": "19.5354", "code": "void trainOnAll(){QuantitiesClassifier(\"\");trainReader(\"\",\"\");BatchTrainer trainer=(classifier);trainer();}", "n_tokens": 34, "n_pass": [474, 94, 49]}
{"time": "2021-02-24 02:21:30.002458", "score": "0.6261", "loss": "19.7095", "code": "void trainOnAll(){(\"\");trainReader(\"\",\"\");BatchTrainer trainer=(classifier);trainer();}", "n_tokens": 33, "n_pass": [490, 96, 50]}
{"time": "2021-02-24 02:21:32.618207", "score": "0.4179", "loss": "19.11", "code": "void trainOnAll(){(\"\");trainReader(\"\",\"\"); trainer=(classifier);trainer();}", "n_tokens": 32, "n_pass": [505, 97, 51]}
{"time": "2021-02-24 02:21:35.607921", "score": "0.4179", "loss": "19.11", "code": "void trainOnAll(){(\"\");trainReader(\"\",\"\");trainer=(classifier);trainer();}", "n_tokens": 31, "n_pass": [506, 98, 52]}
{"time": "2021-02-24 02:21:38.199415", "score": "0.3645", "loss": "17.8283", "code": "void trainOnAll(){(\"\");trainReader(\"\",\"\");trainer(classifier);trainer();}", "n_tokens": 30, "n_pass": [508, 99, 53]}
{"time": "2021-02-24 02:21:40.769759", "score": "0.3207", "loss": "18.4967", "code": "void trainOnAll(){(\"\");trainReader(\"\",\"\");trainer();trainer();}", "n_tokens": 29, "n_pass": [510, 100, 54]}

Minimal simplified code:
void trainOnAll(){("");trainReader("","");trainer();trainer();}

