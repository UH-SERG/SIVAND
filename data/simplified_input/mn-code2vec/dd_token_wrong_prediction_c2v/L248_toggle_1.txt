
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/bladecoder__bladecoder-adventure-engine/blade-engine/src/com/bladecoder/engine/util/EngineLogger_toggle.java
method_name = toggle
method_body = public static void toggle() { if (level == Application.LOG_DEBUG) level = Application.LOG_ERROR; else level = Application.LOG_DEBUG; Gdx.app.setLogLevel(level); }
predict, score, loss = setLogLevel, 0.7957816123962402, 12.408586502075195

Trace of simplified code(s):
{"time": "2021-02-24 05:02:11.448695", "score": "0.7958", "loss": "12.4086", "code": "public static void toggle() { if (level == Application.LOG_DEBUG) level = Application.LOG_ERROR; else level = Application.LOG_DEBUG; Gdx.app.setLogLevel(level); }", "n_tokens": 62, "n_pass": [1, 1, 1]}
{"time": "2021-02-24 05:02:14.110659", "score": "0.9101", "loss": "15.1746", "code": "public static void toggle() { if (level == Application.LOG_DEBUG) level =LOG_DEBUG; Gdx.app.setLogLevel(level); }", "n_tokens": 46, "n_pass": [10, 2, 2]}
{"time": "2021-02-24 05:02:16.788306", "score": "0.6131", "loss": "9.7139", "code": "public static void toggle() { if (level == Application.LOG_DEBUG) level = Gdx.app.setLogLevel(level); }", "n_tokens": 42, "n_pass": [38, 3, 3]}
{"time": "2021-02-24 05:02:19.394777", "score": "0.6131", "loss": "9.7139", "code": " void toggle() { if (level == Application.LOG_DEBUG) level = Gdx.app.setLogLevel(level); }", "n_tokens": 39, "n_pass": [41, 4, 4]}
{"time": "2021-02-24 05:02:22.372795", "score": "0.5552", "loss": "14.1694", "code": " void toggle() { if (level =LOG_DEBUG) level = Gdx.app.setLogLevel(level); }", "n_tokens": 35, "n_pass": [46, 5, 5]}
{"time": "2021-02-24 05:02:24.973611", "score": "0.7881", "loss": "11.6348", "code": " void toggle() { if (level =LOG_DEBUG) Gdx.app.setLogLevel(level); }", "n_tokens": 31, "n_pass": [48, 6, 6]}
{"time": "2021-02-24 05:02:28.330244", "score": "0.7393", "loss": "12.4319", "code": " void toggle() { if (level =LOG_DEBUG) Gdx.setLogLevel(level); }", "n_tokens": 29, "n_pass": [74, 7, 7]}
{"time": "2021-02-24 05:02:33.524191", "score": "0.7393", "loss": "12.4319", "code": "void toggle() { if (level =LOG_DEBUG) Gdx.setLogLevel(level); }", "n_tokens": 28, "n_pass": [79, 9, 8]}
{"time": "2021-02-24 05:02:36.481647", "score": "0.7452", "loss": "10.3542", "code": "void toggle() { if (levelLOG_DEBUG) Gdx.setLogLevel(level); }", "n_tokens": 26, "n_pass": [86, 10, 9]}
{"time": "2021-02-24 05:02:39.116554", "score": "0.618", "loss": "12.4814", "code": "void toggle() { if (levelDEBUG) Gdx.setLogLevel(level); }", "n_tokens": 24, "n_pass": [87, 11, 10]}
{"time": "2021-02-24 05:02:47.538724", "score": "0.6461", "loss": "11.2281", "code": "void toggle() { if (level) Gdx.setLogLevel(level); }", "n_tokens": 23, "n_pass": [124, 13, 11]}
{"time": "2021-02-24 05:02:50.156614", "score": "0.6461", "loss": "11.2281", "code": "void toggle() { if (level)Gdx.setLogLevel(level); }", "n_tokens": 22, "n_pass": [125, 14, 12]}
{"time": "2021-02-24 05:02:55.387354", "score": "0.7145", "loss": "10.2371", "code": "void toggle() { if (level)Gdx.setLogLevel(); }", "n_tokens": 21, "n_pass": [130, 16, 13]}
{"time": "2021-02-24 05:02:57.966500", "score": "0.7145", "loss": "10.2371", "code": "void toggle() { if (level)Gdx.setLogLevel();}", "n_tokens": 20, "n_pass": [133, 17, 14]}
{"time": "2021-02-24 05:03:01.293377", "score": "0.7145", "loss": "10.2371", "code": "void toggle(){ if (level)Gdx.setLogLevel();}", "n_tokens": 19, "n_pass": [140, 18, 15]}
{"time": "2021-02-24 05:03:03.862943", "score": "0.7145", "loss": "10.2371", "code": "void toggle(){if (level)Gdx.setLogLevel();}", "n_tokens": 18, "n_pass": [142, 19, 16]}
{"time": "2021-02-24 05:03:06.826032", "score": "0.7145", "loss": "10.2371", "code": "void toggle(){if(level)Gdx.setLogLevel();}", "n_tokens": 17, "n_pass": [144, 20, 17]}

Minimal simplified code:
void toggle(){if(level)Gdx.setLogLevel();}

