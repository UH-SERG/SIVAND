
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/mimno__Mallet/src/cc/mallet/types/SparseMatrixn_computeSingleSIze.java
method_name = computeSingleSIze
method_body = private void computeSingleSIze() { int product = 1; for (int i = 0; i < sizes.length; i++) { int size = sizes[i]; product *= size; } singleSize = product; }
predict, score, loss = init, 0.355429470539093, 17.732999801635742

Trace of simplified code(s):
{"time": "2021-02-23 21:08:26.962750", "score": "0.3554", "loss": "17.733", "code": "private void computeSingleSIze() { int product = 1; for (int i = 0; i < sizes.length; i++) { int size = sizes[i]; product *= size; } singleSize = product; }", "n_tokens": 77, "n_pass": [1, 1, 1]}
{"time": "2021-02-23 21:08:30.023528", "score": "0.522", "loss": "18.0821", "code": "private void computeSingleSIze() { for (int i = 0; i < sizes.length; i++) { int size = sizes[i]; product *= size; } singleSize = product; }", "n_tokens": 68, "n_pass": [21, 2, 2]}
{"time": "2021-02-23 21:08:32.690972", "score": "0.5218", "loss": "16.3595", "code": "private void computeSingleSIze() { for (int i = 0; i < sizes.length; i++) { ; product *= size; } singleSize = product; }", "n_tokens": 58, "n_pass": [25, 3, 3]}
{"time": "2021-02-23 21:08:35.341343", "score": "0.6239", "loss": "18.0803", "code": "private void computeSingleSIze() { for (int i = 0; i < sizes.length; i++) { } singleSize = product; }", "n_tokens": 48, "n_pass": [26, 4, 4]}
{"time": "2021-02-23 21:08:38.405937", "score": "0.436", "loss": "17.3188", "code": "private void computeSingleSIze() { for ( 0; i < sizes.length; i++) { } singleSize = product; }", "n_tokens": 43, "n_pass": [47, 5, 5]}
{"time": "2021-02-23 21:08:44.499545", "score": "0.8554", "loss": "16.8737", "code": "private void computeSingleSIze() { for ( 0; i < sizes.length; i++)  singleSize = product; }", "n_tokens": 40, "n_pass": [83, 7, 6]}
{"time": "2021-02-23 21:08:49.810686", "score": "0.8554", "loss": "16.8737", "code": "void computeSingleSIze() { for ( 0; i < sizes.length; i++)  singleSize = product; }", "n_tokens": 38, "n_pass": [87, 9, 7]}
{"time": "2021-02-23 21:09:00.971099", "score": "0.8554", "loss": "16.8737", "code": "void computeSingleSIze(){ for ( 0; i < sizes.length; i++)  singleSize = product; }", "n_tokens": 37, "n_pass": [141, 11, 8]}
{"time": "2021-02-23 21:09:03.611385", "score": "0.8554", "loss": "16.8737", "code": "void computeSingleSIze(){for ( 0; i < sizes.length; i++)  singleSize = product; }", "n_tokens": 36, "n_pass": [143, 12, 9]}
{"time": "2021-02-23 21:09:06.270471", "score": "0.8554", "loss": "16.8737", "code": "void computeSingleSIze(){for( 0; i < sizes.length; i++)  singleSize = product; }", "n_tokens": 35, "n_pass": [145, 13, 10]}
{"time": "2021-02-23 21:09:08.911104", "score": "0.8554", "loss": "16.8737", "code": "void computeSingleSIze(){for(0; i < sizes.length; i++)  singleSize = product; }", "n_tokens": 34, "n_pass": [147, 14, 11]}
{"time": "2021-02-23 21:09:11.557996", "score": "0.823", "loss": "16.3986", "code": "void computeSingleSIze(){for(; i < sizes.length; i++)  singleSize = product; }", "n_tokens": 33, "n_pass": [148, 15, 12]}
{"time": "2021-02-23 21:09:14.206262", "score": "0.823", "loss": "16.3986", "code": "void computeSingleSIze(){for(;i < sizes.length; i++)  singleSize = product; }", "n_tokens": 32, "n_pass": [150, 16, 13]}
{"time": "2021-02-23 21:09:16.854325", "score": "0.823", "loss": "16.3986", "code": "void computeSingleSIze(){for(;i< sizes.length; i++)  singleSize = product; }", "n_tokens": 31, "n_pass": [152, 17, 14]}
{"time": "2021-02-23 21:09:19.512034", "score": "0.823", "loss": "16.3986", "code": "void computeSingleSIze(){for(;i<sizes.length; i++)  singleSize = product; }", "n_tokens": 30, "n_pass": [154, 18, 15]}
{"time": "2021-02-23 21:09:22.177460", "score": "0.4014", "loss": "15.9727", "code": "void computeSingleSIze(){for(;i<sizeslength; i++)  singleSize = product; }", "n_tokens": 29, "n_pass": [156, 19, 16]}
{"time": "2021-02-23 21:09:24.941018", "score": "0.6558", "loss": "15.5898", "code": "void computeSingleSIze(){for(;i<sizes; i++)  singleSize = product; }", "n_tokens": 28, "n_pass": [157, 20, 17]}
{"time": "2021-02-23 21:09:27.580821", "score": "0.6558", "loss": "15.5898", "code": "void computeSingleSIze(){for(;i<sizes;i++)  singleSize = product; }", "n_tokens": 27, "n_pass": [159, 21, 18]}
{"time": "2021-02-23 21:09:30.212607", "score": "0.6558", "loss": "15.5898", "code": "void computeSingleSIze(){for(;i<sizes;i++)singleSize = product; }", "n_tokens": 25, "n_pass": [163, 22, 19]}
{"time": "2021-02-23 21:09:33.649885", "score": "0.4621", "loss": "16.2769", "code": "void computeSingleSIze(){for(;isizes;i++)singleSize = product; }", "n_tokens": 24, "n_pass": [178, 23, 20]}
{"time": "2021-02-23 21:09:36.260819", "score": "0.3657", "loss": "16.2713", "code": "void computeSingleSIze(){for(;i;i++)singleSize = product; }", "n_tokens": 23, "n_pass": [179, 24, 21]}
{"time": "2021-02-23 21:09:39.690867", "score": "0.5012", "loss": "16.4469", "code": "void computeSingleSIze(){for(;;i++)singleSize = product; }", "n_tokens": 22, "n_pass": [197, 25, 22]}
{"time": "2021-02-23 21:09:44.662917", "score": "0.5012", "loss": "16.4469", "code": "void computeSingleSIze(){for(;;i++)singleSize= product; }", "n_tokens": 21, "n_pass": [228, 26, 23]}
{"time": "2021-02-23 21:09:47.302239", "score": "0.5012", "loss": "16.4469", "code": "void computeSingleSIze(){for(;;i++)singleSize=product; }", "n_tokens": 20, "n_pass": [230, 27, 24]}
{"time": "2021-02-23 21:09:49.915178", "score": "0.5012", "loss": "16.4469", "code": "void computeSingleSIze(){for(;;i++)singleSize=product;}", "n_tokens": 19, "n_pass": [233, 28, 25]}

Minimal simplified code:
void computeSingleSIze(){for(;;i++)singleSize=product;}

