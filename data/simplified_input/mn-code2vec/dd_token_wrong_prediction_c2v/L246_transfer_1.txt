
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/codefollower__Tomcat-Research/java/org/apache/coyote/http11/InternalAprOutputBuffer_transfer.java
method_name = transfer
method_body = private void transfer(ByteBuffer from, ByteBuffer to) { int max = Math.min(from.remaining(), to.remaining()); int fromLimit = from.limit(); from.limit(from.position() + max); to.put(from); from.limit(fromLimit); }
predict, score, loss = copy, 0.8367769718170166, 7.7746686935424805

Trace of simplified code(s):
{"time": "2021-02-23 17:47:59.307130", "score": "0.8671", "loss": "7.7636", "code": "private void transfer(ByteBuffer from, ByteBuffer to) { int max = Math.min(from.remaining(), to.remaining()); int fromLimit = from.limit(); from.limit(from.position() + max); to.put(from); from.limit(fromLimit); }", "n_tokens": 89, "n_pass": [1, 1, 1]}
{"time": "2021-02-23 17:48:01.992543", "score": "0.8293", "loss": "8.6086", "code": "private void transfer(ByteBuffer from, ByteBuffer to) { int max = Math.min(from.remaining(), to.remaining()); int fromLimit = from.limit(); from.limit(from.position() ); from.limit(fromLimit); }", "n_tokens": 78, "n_pass": [26, 2, 2]}
{"time": "2021-02-23 17:48:04.658134", "score": "0.8468", "loss": "9.2974", "code": "private void transfer(ByteBuffer from, ByteBuffer to) { int max = Math.min(from.remaining(), to.remaining()); from.limit(); from.limit(from.position() ); from.limit(fromLimit); }", "n_tokens": 72, "n_pass": [57, 3, 3]}
{"time": "2021-02-23 17:48:07.319197", "score": "0.848", "loss": "8.8968", "code": "private void transfer(ByteBuffer from, ByteBuffer to) { int max = Math.min(from.remaining(), to.remaining());; from.limit(from.position() ); from.limit(fromLimit); }", "n_tokens": 66, "n_pass": [58, 4, 4]}
{"time": "2021-02-23 17:48:09.981485", "score": "0.8725", "loss": "9.1081", "code": "private void transfer(ByteBuffer from, ByteBuffer to) { int max = Math.min(from.remaining(), to.remaining());; from.limit(); from.limit(fromLimit); }", "n_tokens": 60, "n_pass": [60, 5, 5]}
{"time": "2021-02-23 17:48:12.644026", "score": "0.8976", "loss": "8.526", "code": "private void transfer(ByteBuffer from, ByteBuffer to) { int max = Math.min(from.remaining(), to.remaining());; from.limit(); (fromLimit); }", "n_tokens": 57, "n_pass": [95, 6, 6]}
{"time": "2021-02-23 17:48:15.292861", "score": "0.8966", "loss": "8.5396", "code": "private void transfer(ByteBuffer from, ByteBuffer to) { int max = Math.min(from.remaining(), to.remaining());; from.limit(); ; }", "n_tokens": 54, "n_pass": [96, 7, 7]}
{"time": "2021-02-23 17:48:17.964474", "score": "0.8966", "loss": "8.5396", "code": "void transfer(ByteBuffer from, ByteBuffer to) { int max = Math.min(from.remaining(), to.remaining());; from.limit(); ; }", "n_tokens": 52, "n_pass": [98, 8, 8]}
{"time": "2021-02-23 17:48:21.042663", "score": "0.8872", "loss": "8.8373", "code": "void transfer(ByteBuffer from, ByteBuffer to) { int max = Math.min(from.remaining().remaining());; from.limit(); ; }", "n_tokens": 49, "n_pass": [111, 9, 9]}
{"time": "2021-02-23 17:48:24.110977", "score": "0.8967", "loss": "8.7208", "code": "void transfer(ByteBuffer from, ByteBuffer to) { int max = (from.remaining().remaining());; from.limit(); ; }", "n_tokens": 46, "n_pass": [127, 10, 10]}
{"time": "2021-02-23 17:48:31.446831", "score": "0.8967", "loss": "8.7208", "code": "void transfer(ByteBuffer from, ByteBuffer to) { int max= (from.remaining().remaining());; from.limit(); ; }", "n_tokens": 45, "n_pass": [180, 11, 11]}
{"time": "2021-02-23 17:48:34.079033", "score": "0.8967", "loss": "8.7208", "code": "void transfer(ByteBuffer from, ByteBuffer to) { int max=(from.remaining().remaining());; from.limit(); ; }", "n_tokens": 44, "n_pass": [182, 12, 12]}
{"time": "2021-02-23 17:48:36.726299", "score": "0.9048", "loss": "9.3879", "code": "void transfer(ByteBuffer from, ByteBuffer to) { int max=(from().remaining());; from.limit(); ; }", "n_tokens": 42, "n_pass": [184, 13, 13]}
{"time": "2021-02-23 17:48:39.377636", "score": "0.8925", "loss": "9.5231", "code": "void transfer(ByteBuffer from, ByteBuffer to) { int max=(from.remaining());; from.limit(); ; }", "n_tokens": 40, "n_pass": [185, 14, 14]}
{"time": "2021-02-23 17:48:42.049314", "score": "0.8751", "loss": "9.5575", "code": "void transfer(ByteBuffer from, ByteBuffer to) { int max=(from());; from.limit(); ; }", "n_tokens": 38, "n_pass": [186, 15, 15]}
{"time": "2021-02-23 17:48:44.691622", "score": "0.8696", "loss": "9.591", "code": "void transfer(ByteBuffer from, ByteBuffer to) { int max=(from);; from.limit(); ; }", "n_tokens": 36, "n_pass": [187, 16, 16]}
{"time": "2021-02-23 17:48:47.349827", "score": "0.8696", "loss": "9.591", "code": "void transfer(ByteBuffer from, ByteBuffer to) { int max=(from);from.limit(); ; }", "n_tokens": 34, "n_pass": [189, 17, 17]}
{"time": "2021-02-23 17:48:50.007250", "score": "0.7037", "loss": "5.5387", "code": "void transfer(ByteBuffer from, ByteBuffer to) { int max=(from);limit(); ; }", "n_tokens": 32, "n_pass": [190, 18, 18]}
{"time": "2021-02-23 17:48:52.684834", "score": "0.7037", "loss": "5.5387", "code": "void transfer(ByteBuffer from, ByteBuffer to) { int max=(from);limit(); }", "n_tokens": 30, "n_pass": [193, 19, 19]}
{"time": "2021-02-23 17:48:56.182313", "score": "0.7037", "loss": "5.5387", "code": "void transfer(ByteBuffer from,ByteBuffer to) { int max=(from);limit(); }", "n_tokens": 29, "n_pass": [203, 20, 20]}
{"time": "2021-02-23 17:48:58.840414", "score": "0.7037", "loss": "5.5387", "code": "void transfer(ByteBuffer from,ByteBuffer to){ int max=(from);limit(); }", "n_tokens": 28, "n_pass": [208, 21, 21]}
{"time": "2021-02-23 17:49:01.515668", "score": "0.7037", "loss": "5.5387", "code": "void transfer(ByteBuffer from,ByteBuffer to){int max=(from);limit(); }", "n_tokens": 27, "n_pass": [210, 22, 22]}
{"time": "2021-02-23 17:49:11.495304", "score": "0.894", "loss": "5.4616", "code": "void transfer(ByteBuffer from,ByteBuffer to){int max=(from)limit(); }", "n_tokens": 26, "n_pass": [246, 25, 23]}
{"time": "2021-02-23 17:49:14.163925", "score": "0.894", "loss": "5.4616", "code": "void transfer(ByteBuffer from,ByteBuffer to){int max=(from)limit();}", "n_tokens": 25, "n_pass": [251, 26, 24]}
{"time": "2021-02-23 17:49:17.632820", "score": "0.5407", "loss": "6.5987", "code": "void transfer(ByteBuffer from,ByteBuffer to){ max=(from)limit();}", "n_tokens": 24, "n_pass": [266, 27, 25]}
{"time": "2021-02-23 17:49:20.269912", "score": "0.5407", "loss": "6.5987", "code": "void transfer(ByteBuffer from,ByteBuffer to){max=(from)limit();}", "n_tokens": 23, "n_pass": [267, 28, 26]}

Minimal simplified code:
void transfer(ByteBuffer from,ByteBuffer to){max=(from)limit();}

