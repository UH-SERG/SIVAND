
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/OpenRock__OpenAM/openam-core/src/test/java/com/sun/identity/authentication/jaas/LoginContextTest_sufficientSuccess.java
method_name = sufficientSuccess
method_body = @Test public void sufficientSuccess() throws LoginException { whenLoginReturnTrue(requiredDelegate, requisiteDelegate, sufficientDelegate); whenCommitReturnTrue(requiredDelegate, requisiteDelegate, sufficientDelegate); context.login(); verifyInitialize(requiredDelegate, requisiteDelegate, sufficientDelegate); verifyLogin(requiredDelegate, requisiteDelegate, sufficientDelegate); verifyCommit(requiredDelegate, requisiteDelegate, sufficientDelegate); verifyNoMoreInteractions(requiredDelegate, requisiteDelegate, sufficientDelegate, optionalDelegate); }
predict, score, loss = clusterSetupAtBegining, 0.7410500645637512, 15.73886775970459

Trace of simplified code(s):
{"time": "2021-02-24 06:42:37.801509", "score": "0.6322", "loss": "15.8655", "code": "@Test public void sufficientSuccess() throws LoginException { whenLoginReturnTrue(requiredDelegate, requisiteDelegate, sufficientDelegate); whenCommitReturnTrue(requiredDelegate, requisiteDelegate, sufficientDelegate); context.login(); verifyInitialize(requiredDelegate, requisiteDelegate, sufficientDelegate); verifyLogin(requiredDelegate, requisiteDelegate, sufficientDelegate); verifyCommit(requiredDelegate, requisiteDelegate, sufficientDelegate); verifyNoMoreInteractions(requiredDelegate, requisiteDelegate, sufficientDelegate, optionalDelegate); }", "n_tokens": 100, "n_pass": [1, 1, 1]}
{"time": "2021-02-24 06:42:40.500766", "score": "0.8841", "loss": "15.8351", "code": "@Test public void sufficientSuccess() throws LoginException { whenLoginReturnTrue(requiredDelegate, requisiteDelegate, requiredDelegate, requisiteDelegate, sufficientDelegate); verifyLogin(requiredDelegate, requisiteDelegate, sufficientDelegate); verifyCommit(requiredDelegate, requisiteDelegate, sufficientDelegate); verifyNoMoreInteractions(requiredDelegate, requisiteDelegate, sufficientDelegate, optionalDelegate); }", "n_tokens": 75, "n_pass": [9, 2, 2]}
{"time": "2021-02-24 06:42:43.184817", "score": "0.8779", "loss": "15.7384", "code": "@Test public void sufficientSuccess() throws LoginException { whenLoginReturnTrue(requiredDelegate, requisiteDelegate, sufficientDelegate); verifyLogin(requiredDelegate, requisiteDelegate, sufficientDelegate); verifyCommit(requiredDelegate, requisiteDelegate, sufficientDelegate); verifyNoMoreInteractions(requiredDelegate, requisiteDelegate, sufficientDelegate, optionalDelegate); }", "n_tokens": 69, "n_pass": [36, 3, 3]}
{"time": "2021-02-24 06:42:45.856970", "score": "0.9145", "loss": "16.2019", "code": "@Test public void sufficientSuccess() throws LoginException { whenLoginReturnTrue(requiredDelegate, requisiteDelegate, sufficientDelegate); verifyLogin(requiredDelegate, requisiteDelegate, sufficientDelegate); verifyCommit(requiredDelegate, requisiteDelegate,requiredDelegate, requisiteDelegate, sufficientDelegate, optionalDelegate); }", "n_tokens": 62, "n_pass": [40, 4, 4]}
{"time": "2021-02-24 06:42:48.860302", "score": "0.9257", "loss": "16.3569", "code": "@Test public void sufficientSuccess() throws LoginException { whenLoginReturnTrue(requiredDelegate, requisiteDelegate, sufficientDelegate); verifyLogin(requiredDelegate, requisiteDelegate, sufficientDelegate); verifyCommit(requiredDelegate, requisiteDelegate,requisiteDelegate, sufficientDelegate, optionalDelegate); }", "n_tokens": 59, "n_pass": [71, 5, 5]}
{"time": "2021-02-24 06:42:51.490096", "score": "0.9203", "loss": "16.303", "code": "@Test public void sufficientSuccess() throws LoginException { whenLoginReturnTrue(requiredDelegate, requisiteDelegate, sufficientDelegate); verifyLogin(requiredDelegate, requisiteDelegate, sufficientDelegate); verifyCommit(requiredDelegate, requisiteDelegate,sufficientDelegate, optionalDelegate); }", "n_tokens": 56, "n_pass": [72, 6, 6]}
{"time": "2021-02-24 06:42:54.156601", "score": "0.4968", "loss": "15.7009", "code": "public void sufficientSuccess() throws LoginException { whenLoginReturnTrue(requiredDelegate, requisiteDelegate, sufficientDelegate); verifyLogin(requiredDelegate, requisiteDelegate, sufficientDelegate); verifyCommit(requiredDelegate, requisiteDelegate,sufficientDelegate, optionalDelegate); }", "n_tokens": 53, "n_pass": [75, 7, 7]}
{"time": "2021-02-24 06:42:57.156695", "score": "0.5035", "loss": "15.7102", "code": "public void sufficientSuccess() throws LoginException { whenLoginReturnTrue(requiredDelegate, sufficientDelegate); verifyLogin(requiredDelegate, requisiteDelegate, sufficientDelegate); verifyCommit(requiredDelegate, requisiteDelegate,sufficientDelegate, optionalDelegate); }", "n_tokens": 50, "n_pass": [82, 8, 8]}
{"time": "2021-02-24 06:42:59.830130", "score": "0.8991", "loss": "17.6265", "code": "public void sufficientSuccess() throws LoginException { whenLoginReturnTrue(requiredDelegate, sufficientDelegate); verifyLogin(requiredDelegate, sufficientDelegate); verifyCommit(requiredDelegate, requisiteDelegate,sufficientDelegate, optionalDelegate); }", "n_tokens": 47, "n_pass": [86, 9, 9]}
{"time": "2021-02-24 06:43:02.446192", "score": "0.9099", "loss": "17.9729", "code": "public void sufficientSuccess() throws LoginException { whenLoginReturnTrue(requiredDelegate, sufficientDelegate); verifyLogin(requiredDelegate, sufficientDelegate); verifyCommit(requiredDelegate,sufficientDelegate, optionalDelegate); }", "n_tokens": 44, "n_pass": [90, 10, 10]}
{"time": "2021-02-24 06:43:07.592993", "score": "0.9134", "loss": "18.1372", "code": "public void sufficientSuccess() throws LoginException { whenLoginReturnTrue(requiredDelegate, sufficientDelegate); verifyLogin(requiredDelegate, sufficientDelegate); verifyCommit(requiredDelegate, optionalDelegate); }", "n_tokens": 42, "n_pass": [133, 11, 11]}
{"time": "2021-02-24 06:43:10.199634", "score": "0.9134", "loss": "18.1372", "code": " void sufficientSuccess() throws LoginException { whenLoginReturnTrue(requiredDelegate, sufficientDelegate); verifyLogin(requiredDelegate, sufficientDelegate); verifyCommit(requiredDelegate, optionalDelegate); }", "n_tokens": 41, "n_pass": [136, 12, 12]}
{"time": "2021-02-24 06:43:12.804202", "score": "0.9134", "loss": "18.1372", "code": "void sufficientSuccess() throws LoginException { whenLoginReturnTrue(requiredDelegate, sufficientDelegate); verifyLogin(requiredDelegate, sufficientDelegate); verifyCommit(requiredDelegate, optionalDelegate); }", "n_tokens": 40, "n_pass": [137, 13, 13]}
{"time": "2021-02-24 06:43:16.178062", "score": "0.9134", "loss": "18.1372", "code": "void sufficientSuccess()throws LoginException { whenLoginReturnTrue(requiredDelegate, sufficientDelegate); verifyLogin(requiredDelegate, sufficientDelegate); verifyCommit(requiredDelegate, optionalDelegate); }", "n_tokens": 39, "n_pass": [143, 14, 14]}
{"time": "2021-02-24 06:43:18.778330", "score": "0.9134", "loss": "18.1372", "code": "void sufficientSuccess()throws LoginException{ whenLoginReturnTrue(requiredDelegate, sufficientDelegate); verifyLogin(requiredDelegate, sufficientDelegate); verifyCommit(requiredDelegate, optionalDelegate); }", "n_tokens": 38, "n_pass": [147, 15, 15]}
{"time": "2021-02-24 06:43:21.370340", "score": "0.9171", "loss": "18.2333", "code": "void sufficientSuccess()throws LoginException{ whenLoginReturnTrue( sufficientDelegate); verifyLogin(requiredDelegate, sufficientDelegate); verifyCommit(requiredDelegate, optionalDelegate); }", "n_tokens": 36, "n_pass": [150, 16, 16]}
{"time": "2021-02-24 06:43:23.979820", "score": "0.9302", "loss": "18.6032", "code": "void sufficientSuccess()throws LoginException{ whenLoginReturnTrue(); verifyLogin(requiredDelegate, sufficientDelegate); verifyCommit(requiredDelegate, optionalDelegate); }", "n_tokens": 34, "n_pass": [151, 17, 17]}
{"time": "2021-02-24 06:43:26.652171", "score": "0.8373", "loss": "16.6069", "code": "void sufficientSuccess()throws LoginException{ whenLoginReturnTrue(); verifyLogin(requiredDelegatesufficientDelegate); verifyCommit(requiredDelegate, optionalDelegate); }", "n_tokens": 32, "n_pass": [155, 18, 18]}
{"time": "2021-02-24 06:43:29.312722", "score": "0.836", "loss": "16.7848", "code": "void sufficientSuccess()throws LoginException{ whenLoginReturnTrue(); verifyLogin(requiredDelegatesufficientDelegate); verifyCommit( optionalDelegate); }", "n_tokens": 30, "n_pass": [159, 19, 19]}
{"time": "2021-02-24 06:43:31.895954", "score": "0.8421", "loss": "16.9387", "code": "void sufficientSuccess()throws LoginException{ whenLoginReturnTrue(); verifyLogin(requiredDelegatesufficientDelegate); verifyCommit(); }", "n_tokens": 28, "n_pass": [160, 20, 20]}
{"time": "2021-02-24 06:43:40.375071", "score": "0.8421", "loss": "16.9387", "code": "void sufficientSuccess()throws LoginException{ whenLoginReturnTrue(); verifyLogin(requiredDelegatesufficientDelegate); verifyCommit();}", "n_tokens": 27, "n_pass": [201, 22, 21]}
{"time": "2021-02-24 06:43:43.712363", "score": "0.8421", "loss": "16.9387", "code": "void sufficientSuccess()throws LoginException{whenLoginReturnTrue(); verifyLogin(requiredDelegatesufficientDelegate); verifyCommit();}", "n_tokens": 26, "n_pass": [211, 23, 22]}
{"time": "2021-02-24 06:43:46.320202", "score": "0.8421", "loss": "16.9387", "code": "void sufficientSuccess()throws LoginException{whenLoginReturnTrue();verifyLogin(requiredDelegatesufficientDelegate); verifyCommit();}", "n_tokens": 25, "n_pass": [216, 24, 23]}
{"time": "2021-02-24 06:43:51.493822", "score": "0.8421", "loss": "16.9387", "code": "void sufficientSuccess()throws LoginException{whenLoginReturnTrue();verifyLogin(sufficientDelegate); verifyCommit();}", "n_tokens": 24, "n_pass": [219, 26, 24]}
{"time": "2021-02-24 06:43:56.744476", "score": "0.8421", "loss": "16.9387", "code": "void sufficientSuccess()throws LoginException{whenLoginReturnTrue();verifyLogin(sufficientDelegate);verifyCommit();}", "n_tokens": 23, "n_pass": [223, 28, 25]}

Minimal simplified code:
void sufficientSuccess()throws LoginException{whenLoginReturnTrue();verifyLogin(sufficientDelegate);verifyCommit();}

