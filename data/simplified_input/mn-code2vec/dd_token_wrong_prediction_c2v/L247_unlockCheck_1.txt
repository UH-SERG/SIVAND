
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/sakaiproject__sakai/kernel/kernel-impl/src/main/java/org/sakaiproject/user/impl/BaseUserDirectoryService_unlockCheck.java
method_name = unlockCheck
method_body = protected boolean unlockCheck(List<String> locks, String resource) { Iterator<String> locksIterator = locks.iterator(); while (locksIterator.hasNext()) { if (securityService().unlock(locksIterator.next(), resource)) return true; } return false; }
predict, score, loss = contains, 0.19543753564357758, 16.22500991821289

Trace of simplified code(s):
{"time": "2021-02-24 14:40:21.785502", "score": "0.1954", "loss": "16.225", "code": "protected boolean unlockCheck(List<String> locks, String resource) { Iterator<String> locksIterator = locks.iterator(); while (locksIterator.hasNext()) { if (securityService().unlock(locksIterator.next(), resource)) return true; } return false; }", "n_tokens": 82, "n_pass": [1, 1, 1]}
{"time": "2021-02-24 14:40:27.177475", "score": "0.4121", "loss": "16.303", "code": "protected boolean unlockCheck(List<String> resource) { Iterator<String> locksIterator = locks.iterator(); while (locksIterator.hasNext()) { if (securityService().unlock(locksIterator.next(), resource)) return true; } return false; }", "n_tokens": 77, "n_pass": [46, 3, 2]}
{"time": "2021-02-24 14:40:36.330866", "score": "0.46", "loss": "16.248", "code": "protected boolean unlockCheck(List<String> resource) { Iterator<String> locksIterator = locks.iterator(); while (locksIterator.hasNext()) { if (securityService().unlock(locksIterator.next(), resource)) return true; } ; }", "n_tokens": 74, "n_pass": [115, 6, 3]}
{"time": "2021-02-24 14:40:38.945293", "score": "0.46", "loss": "16.248", "code": "boolean unlockCheck(List<String> resource) { Iterator<String> locksIterator = locks.iterator(); while (locksIterator.hasNext()) { if (securityService().unlock(locksIterator.next(), resource)) return true; } ; }", "n_tokens": 72, "n_pass": [116, 7, 4]}
{"time": "2021-02-24 14:40:47.806083", "score": "0.46", "loss": "16.248", "code": "boolean unlockCheck(List<String>resource) { Iterator<String> locksIterator = locks.iterator(); while (locksIterator.hasNext()) { if (securityService().unlock(locksIterator.next(), resource)) return true; } ; }", "n_tokens": 71, "n_pass": [209, 8, 5]}
{"time": "2021-02-24 14:40:50.418797", "score": "0.46", "loss": "16.248", "code": "boolean unlockCheck(List<String>resource){ Iterator<String> locksIterator = locks.iterator(); while (locksIterator.hasNext()) { if (securityService().unlock(locksIterator.next(), resource)) return true; } ; }", "n_tokens": 70, "n_pass": [211, 9, 6]}
{"time": "2021-02-24 14:40:53.039780", "score": "0.46", "loss": "16.248", "code": "boolean unlockCheck(List<String>resource){Iterator<String> locksIterator = locks.iterator(); while (locksIterator.hasNext()) { if (securityService().unlock(locksIterator.next(), resource)) return true; } ; }", "n_tokens": 69, "n_pass": [213, 10, 7]}
{"time": "2021-02-24 14:40:56.033603", "score": "0.46", "loss": "16.248", "code": "boolean unlockCheck(List<String>resource){Iterator<String>locksIterator = locks.iterator(); while (locksIterator.hasNext()) { if (securityService().unlock(locksIterator.next(), resource)) return true; } ; }", "n_tokens": 68, "n_pass": [218, 11, 8]}
{"time": "2021-02-24 14:40:58.686623", "score": "0.46", "loss": "16.248", "code": "boolean unlockCheck(List<String>resource){Iterator<String>locksIterator= locks.iterator(); while (locksIterator.hasNext()) { if (securityService().unlock(locksIterator.next(), resource)) return true; } ; }", "n_tokens": 67, "n_pass": [220, 12, 9]}
{"time": "2021-02-24 14:41:01.311320", "score": "0.46", "loss": "16.248", "code": "boolean unlockCheck(List<String>resource){Iterator<String>locksIterator=locks.iterator(); while (locksIterator.hasNext()) { if (securityService().unlock(locksIterator.next(), resource)) return true; } ; }", "n_tokens": 66, "n_pass": [222, 13, 10]}
{"time": "2021-02-24 14:41:03.929940", "score": "0.461", "loss": "16.696", "code": "boolean unlockCheck(List<String>resource){Iterator<String>locksIterator=locksiterator(); while (locksIterator.hasNext()) { if (securityService().unlock(locksIterator.next(), resource)) return true; } ; }", "n_tokens": 65, "n_pass": [224, 14, 11]}
{"time": "2021-02-24 14:41:06.552114", "score": "0.4613", "loss": "16.5016", "code": "boolean unlockCheck(List<String>resource){Iterator<String>locksIterator=locks(); while (locksIterator.hasNext()) { if (securityService().unlock(locksIterator.next(), resource)) return true; } ; }", "n_tokens": 64, "n_pass": [225, 15, 12]}
{"time": "2021-02-24 14:41:09.178533", "score": "0.4613", "loss": "16.5016", "code": "boolean unlockCheck(List<String>resource){Iterator<String>locksIterator=locks();while (locksIterator.hasNext()) { if (securityService().unlock(locksIterator.next(), resource)) return true; } ; }", "n_tokens": 63, "n_pass": [229, 16, 13]}
{"time": "2021-02-24 14:41:11.793972", "score": "0.4613", "loss": "16.5016", "code": "boolean unlockCheck(List<String>resource){Iterator<String>locksIterator=locks();while(locksIterator.hasNext()) { if (securityService().unlock(locksIterator.next(), resource)) return true; } ; }", "n_tokens": 62, "n_pass": [231, 17, 14]}
{"time": "2021-02-24 14:41:14.412906", "score": "0.2955", "loss": "16.5076", "code": "boolean unlockCheck(List<String>resource){Iterator<String>locksIterator=locks();while(locksIteratorhasNext()) { if (securityService().unlock(locksIterator.next(), resource)) return true; } ; }", "n_tokens": 61, "n_pass": [234, 18, 15]}
{"time": "2021-02-24 14:41:17.035484", "score": "0.2955", "loss": "16.5076", "code": "boolean unlockCheck(List<String>resource){Iterator<String>locksIterator=locks();while(locksIterator()) { if (securityService().unlock(locksIterator.next(), resource)) return true; } ; }", "n_tokens": 60, "n_pass": [235, 19, 16]}
{"time": "2021-02-24 14:41:19.661168", "score": "0.2955", "loss": "16.5076", "code": "boolean unlockCheck(List<String>resource){Iterator<String>locksIterator=locks();while(locksIterator()){ if (securityService().unlock(locksIterator.next(), resource)) return true; } ; }", "n_tokens": 59, "n_pass": [239, 20, 17]}
{"time": "2021-02-24 14:41:22.286267", "score": "0.1631", "loss": "16.3559", "code": "boolean unlockCheck(List<String>resource){Iterator<String>locksIterator=locks();while(locksIterator()){ if (securityService.unlock(locksIterator.next(), resource)) return true; } ; }", "n_tokens": 57, "n_pass": [243, 21, 18]}
{"time": "2021-02-24 14:41:35.417686", "score": "0.1631", "loss": "16.3559", "code": "boolean unlockCheck(List<String>resource){Iterator<String>locksIterator=locks();while(locksIterator()){ if (securityService.unlock(locksIterator.next(), resource)) return true; } }", "n_tokens": 55, "n_pass": [254, 26, 19]}
{"time": "2021-02-24 14:41:53.739483", "score": "0.1631", "loss": "16.3559", "code": "boolean unlockCheck(List<String>resource){Iterator<String>locksIterator=locks();while(locksIterator()){ if (securityService.unlock(locksIterator.next(), resource)) return true; }}", "n_tokens": 54, "n_pass": [324, 31, 20]}
{"time": "2021-02-24 14:41:58.686182", "score": "0.1631", "loss": "16.3559", "code": "boolean unlockCheck(List<String>resource){Iterator<String>locksIterator=locks();while(locksIterator()){if (securityService.unlock(locksIterator.next(), resource)) return true; }}", "n_tokens": 53, "n_pass": [353, 32, 21]}
{"time": "2021-02-24 14:42:01.308944", "score": "0.1631", "loss": "16.3559", "code": "boolean unlockCheck(List<String>resource){Iterator<String>locksIterator=locks();while(locksIterator()){if(securityService.unlock(locksIterator.next(), resource)) return true; }}", "n_tokens": 52, "n_pass": [355, 33, 22]}
{"time": "2021-02-24 14:42:09.245700", "score": "0.1631", "loss": "16.3559", "code": "boolean unlockCheck(List<String>resource){Iterator<String>locksIterator=locks();while(locksIterator()){if(securityService.unlock(locksIterator.next(),resource)) return true; }}", "n_tokens": 51, "n_pass": [367, 36, 23]}
{"time": "2021-02-24 14:42:11.877978", "score": "0.1631", "loss": "16.3559", "code": "boolean unlockCheck(List<String>resource){Iterator<String>locksIterator=locks();while(locksIterator()){if(securityService.unlock(locksIterator.next(),resource))return true; }}", "n_tokens": 50, "n_pass": [371, 37, 24]}
{"time": "2021-02-24 14:42:22.360972", "score": "0.1631", "loss": "16.3559", "code": "boolean unlockCheck(List<String>resource){Iterator<String>locksIterator=locks();while(locksIterator()){if(securityService.unlock(locksIterator.next(),resource))return true;}}", "n_tokens": 49, "n_pass": [376, 41, 25]}

Minimal simplified code:
boolean unlockCheck(List<String>resource){Iterator<String>locksIterator=locks();while(locksIterator()){if(securityService.unlock(locksIterator.next(),resource))return true;}}

