
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/MariaDB__mariadb-connector-j/src/main/java/org/mariadb/jdbc/internal/protocol/MasterProtocol_getNewProtocol.java
method_name = getNewProtocol
method_body = private static MasterProtocol getNewProtocol(FailoverProxy proxy, final GlobalStateInfo globalInfo, UrlParser urlParser) { MasterProtocol newProtocol = new MasterProtocol(urlParser, globalInfo, proxy.lock); newProtocol.setProxy(proxy); return newProtocol; }
predict, score, loss = create, 0.8446352481842041, 17.261577606201172

Trace of simplified code(s):
{"time": "2021-02-24 02:45:18.787217", "score": "0.8446", "loss": "17.2616", "code": "private static MasterProtocol getNewProtocol(FailoverProxy proxy, final GlobalStateInfo globalInfo, UrlParser urlParser) { MasterProtocol newProtocol = new MasterProtocol(urlParser, globalInfo, proxy.lock); newProtocol.setProxy(proxy); return newProtocol; }", "n_tokens": 63, "n_pass": [1, 1, 1]}
{"time": "2021-02-24 02:45:21.484061", "score": "0.942", "loss": "17.3675", "code": "private static MasterProtocol getNewProtocol(FailoverProxy proxy, final GlobalStateInfo globalInfo, UrlParser urlParser) { MasterProtocol newProtocol ; newProtocol.setProxy(proxy); return newProtocol; }", "n_tokens": 47, "n_pass": [10, 2, 2]}
{"time": "2021-02-24 02:45:24.252022", "score": "0.5666", "loss": "16.106", "code": "private static MasterProtocol getNewProtocol(FailoverProxy proxy, final GlobalStateInfo globalInfo, UrlParser urlParser) { MasterProtocol newProtocol ; return newProtocol; }", "n_tokens": 39, "n_pass": [19, 3, 3]}
{"time": "2021-02-24 02:45:26.972696", "score": "0.5666", "loss": "16.106", "code": " MasterProtocol getNewProtocol(FailoverProxy proxy, final GlobalStateInfo globalInfo, UrlParser urlParser) { MasterProtocol newProtocol ; return newProtocol; }", "n_tokens": 36, "n_pass": [36, 4, 4]}
{"time": "2021-02-24 02:45:29.902735", "score": "0.7269", "loss": "17.9388", "code": " MasterProtocol getNewProtocol(FailoverProxy proxy, final  UrlParser urlParser) { MasterProtocol newProtocol ; return newProtocol; }", "n_tokens": 32, "n_pass": [39, 5, 5]}
{"time": "2021-02-24 02:45:32.646373", "score": "0.5915", "loss": "17.8611", "code": " MasterProtocol getNewProtocol(FailoverProxy proxy, final  UrlParser urlParser) { ; return newProtocol; }", "n_tokens": 28, "n_pass": [42, 6, 6]}
{"time": "2021-02-24 02:45:38.282072", "score": "0.5915", "loss": "17.8611", "code": " MasterProtocol getNewProtocol(FailoverProxy proxy, final  UrlParser urlParser) { return newProtocol; }", "n_tokens": 26, "n_pass": [64, 8, 7]}
{"time": "2021-02-24 02:45:41.774993", "score": "0.5915", "loss": "17.8611", "code": " MasterProtocol getNewProtocol(FailoverProxy proxy,  UrlParser urlParser) { return newProtocol; }", "n_tokens": 24, "n_pass": [72, 9, 8]}
{"time": "2021-02-24 02:45:51.828709", "score": "0.5915", "loss": "17.8611", "code": " MasterProtocol getNewProtocol(FailoverProxy proxy, UrlParser urlParser) { return newProtocol; }", "n_tokens": 23, "n_pass": [109, 11, 9]}
{"time": "2021-02-24 02:45:54.466839", "score": "0.5915", "loss": "17.8611", "code": " MasterProtocol getNewProtocol(FailoverProxy proxy, UrlParser urlParser){ return newProtocol; }", "n_tokens": 22, "n_pass": [113, 12, 10]}
{"time": "2021-02-24 02:45:57.101886", "score": "0.5915", "loss": "17.8611", "code": " MasterProtocol getNewProtocol(FailoverProxy proxy, UrlParser urlParser){return newProtocol; }", "n_tokens": 21, "n_pass": [115, 13, 11]}
{"time": "2021-02-24 02:46:07.573583", "score": "0.5915", "loss": "17.8611", "code": " MasterProtocol getNewProtocol(FailoverProxy proxy, UrlParser urlParser){return newProtocol;}", "n_tokens": 20, "n_pass": [120, 17, 12]}
{"time": "2021-02-24 02:46:10.206874", "score": "0.5915", "loss": "17.8611", "code": "MasterProtocol getNewProtocol(FailoverProxy proxy, UrlParser urlParser){return newProtocol;}", "n_tokens": 19, "n_pass": [122, 18, 13]}
{"time": "2021-02-24 02:46:14.036158", "score": "0.5915", "loss": "17.8611", "code": "MasterProtocol getNewProtocol(FailoverProxy proxy,UrlParser urlParser){return newProtocol;}", "n_tokens": 18, "n_pass": [131, 19, 14]}

Minimal simplified code:
MasterProtocol getNewProtocol(FailoverProxy proxy,UrlParser urlParser){return newProtocol;}

