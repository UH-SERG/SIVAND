
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/spring-cloud__spring-cloud-connectors/spring-cloud-localconfig-connector/src/test/java/org/springframework/cloud/localconfig/PropertiesFileResolverTest_testSecurityExceptionHandling.java
method_name = testSecurityExceptionHandling
method_body = @Test public void testSecurityExceptionHandling() { env = mock(PassthroughEnvironmentAccessor.class); resolver = new PropertiesFileResolver(env); when(env.getSystemProperty(LocalConfigConnector.PROPERTIES_FILE_PROPERTY)).thenThrow(new SecurityException()); assertNull(resolver.findCloudPropertiesFileFromSystem()); verify(env).getSystemProperty(LocalConfigConnector.PROPERTIES_FILE_PROPERTY); }
predict, score, loss = before, 0.3205040991306305, 14.819744110107422

Trace of simplified code(s):
{"time": "2021-02-24 06:20:47.985573", "score": "0.3205", "loss": "14.8197", "code": "@Test public void testSecurityExceptionHandling() { env = mock(PassthroughEnvironmentAccessor.class); resolver = new PropertiesFileResolver(env); when(env.getSystemProperty(LocalConfigConnector.PROPERTIES_FILE_PROPERTY)).thenThrow(new SecurityException()); assertNull(resolver.findCloudPropertiesFileFromSystem()); verify(env).getSystemProperty(LocalConfigConnector.PROPERTIES_FILE_PROPERTY); }", "n_tokens": 91, "n_pass": [1, 1, 1]}
{"time": "2021-02-24 06:20:53.694985", "score": "0.5816", "loss": "15.6573", "code": "@Test public void testSecurityExceptionHandling() { env = mock(PassthroughEnvironmentAccessor.class); resolver = new PropertiesFileResolver(env); when(env.getSystemProperty(LocalConfigConnector.PROPERTIES_FILE_PROPERTY)).thenThrow(findCloudPropertiesFileFromSystem()); verify(env).getSystemProperty(LocalConfigConnector.PROPERTIES_FILE_PROPERTY); }", "n_tokens": 79, "n_pass": [25, 3, 2]}
{"time": "2021-02-24 06:20:56.700241", "score": "0.2739", "loss": "14.5101", "code": "@Test public void testSecurityExceptionHandling() { env = mock(PassthroughEnvironmentAccessor.classenv); when(env.getSystemProperty(LocalConfigConnector.PROPERTIES_FILE_PROPERTY)).thenThrow(findCloudPropertiesFileFromSystem()); verify(env).getSystemProperty(LocalConfigConnector.PROPERTIES_FILE_PROPERTY); }", "n_tokens": 68, "n_pass": [30, 4, 3]}
{"time": "2021-02-24 06:20:59.704587", "score": "0.3411", "loss": "14.4723", "code": "@Test public void testSecurityExceptionHandling() { env = mock(PassthroughEnvironmentAccessor.classenv); when(env.getSystemProperty(PROPERTY)).thenThrow(findCloudPropertiesFileFromSystem()); verify(env).getSystemProperty(LocalConfigConnector.PROPERTIES_FILE_PROPERTY); }", "n_tokens": 62, "n_pass": [51, 5, 4]}
{"time": "2021-02-24 06:21:07.633033", "score": "0.3526", "loss": "15.5018", "code": "@Test public void testSecurityExceptionHandling() { env = mock(PassthroughEnvironmentAccessor.classenv); when(env.getSystemProperty(PROPERTY)).thenThrow(); verify(env).getSystemProperty(LocalConfigConnector.PROPERTIES_FILE_PROPERTY); }", "n_tokens": 59, "n_pass": [87, 8, 5]}
{"time": "2021-02-24 06:21:10.292443", "score": "0.3616", "loss": "15.4977", "code": "@Test public void testSecurityExceptionHandling() { env = mock(PassthroughEnvironmentAccessor.classenv); when(env.getSystemProperty(PROPERTY)).thenThrow(); verify(env).getSystemProperty(LocalConfigConnector._PROPERTY); }", "n_tokens": 56, "n_pass": [91, 9, 6]}
{"time": "2021-02-24 06:21:15.554577", "score": "0.3616", "loss": "15.4977", "code": "@Test void testSecurityExceptionHandling() { env = mock(PassthroughEnvironmentAccessor.classenv); when(env.getSystemProperty(PROPERTY)).thenThrow(); verify(env).getSystemProperty(LocalConfigConnector._PROPERTY); }", "n_tokens": 54, "n_pass": [95, 11, 7]}
{"time": "2021-02-24 06:21:18.590933", "score": "0.1898", "loss": "15.2688", "code": "@Test void testSecurityExceptionHandling() { envmock(PassthroughEnvironmentAccessor.classenv); when(env.getSystemProperty(PROPERTY)).thenThrow(); verify(env).getSystemProperty(LocalConfigConnector._PROPERTY); }", "n_tokens": 51, "n_pass": [100, 12, 8]}
{"time": "2021-02-24 06:21:21.287917", "score": "0.1966", "loss": "15.7983", "code": "@Test void testSecurityExceptionHandling() { envmock(PassthroughEnvironmentAccessor); when(env.getSystemProperty(PROPERTY)).thenThrow(); verify(env).getSystemProperty(LocalConfigConnector._PROPERTY); }", "n_tokens": 48, "n_pass": [102, 13, 9]}
{"time": "2021-02-24 06:21:29.010609", "score": "0.219", "loss": "15.8397", "code": "@Test void testSecurityExceptionHandling() { env(PassthroughEnvironmentAccessor); when(env.getSystemProperty(PROPERTY)).thenThrow(); verify(env).getSystemProperty(LocalConfigConnector._PROPERTY); }", "n_tokens": 47, "n_pass": [154, 15, 10]}
{"time": "2021-02-24 06:21:34.223151", "score": "0.219", "loss": "15.8397", "code": "@Test void testSecurityExceptionHandling() { env(PassthroughEnvironmentAccessor);when(env.getSystemProperty(PROPERTY)).thenThrow(); verify(env).getSystemProperty(LocalConfigConnector._PROPERTY); }", "n_tokens": 46, "n_pass": [159, 17, 11]}
{"time": "2021-02-24 06:21:42.103477", "score": "0.2524", "loss": "15.6705", "code": "@Test void testSecurityExceptionHandling() { env(PassthroughEnvironmentAccessor);when(env.getSystemProperty(PROPERTY)).thenThrow();(env).getSystemProperty(LocalConfigConnector._PROPERTY); }", "n_tokens": 44, "n_pass": [168, 20, 12]}
{"time": "2021-02-24 06:21:44.704662", "score": "0.2743", "loss": "15.7396", "code": "@Test void testSecurityExceptionHandling() { env(PassthroughEnvironmentAccessor);when(env.getSystemProperty(PROPERTY)).thenThrow();(env).getSystemProperty(_PROPERTY); }", "n_tokens": 42, "n_pass": [172, 21, 13]}
{"time": "2021-02-24 06:21:51.047689", "score": "0.2743", "loss": "15.7396", "code": "@Test void testSecurityExceptionHandling(){ env(PassthroughEnvironmentAccessor);when(env.getSystemProperty(PROPERTY)).thenThrow();(env).getSystemProperty(_PROPERTY); }", "n_tokens": 41, "n_pass": [184, 23, 14]}
{"time": "2021-02-24 06:21:53.648998", "score": "0.2743", "loss": "15.7396", "code": "@Test void testSecurityExceptionHandling(){env(PassthroughEnvironmentAccessor);when(env.getSystemProperty(PROPERTY)).thenThrow();(env).getSystemProperty(_PROPERTY); }", "n_tokens": 40, "n_pass": [186, 24, 15]}
{"time": "2021-02-24 06:21:56.254948", "score": "0.297", "loss": "16.0356", "code": "@Test void testSecurityExceptionHandling(){(PassthroughEnvironmentAccessor);when(env.getSystemProperty(PROPERTY)).thenThrow();(env).getSystemProperty(_PROPERTY); }", "n_tokens": 39, "n_pass": [187, 25, 16]}
{"time": "2021-02-24 06:22:14.926577", "score": "0.297", "loss": "16.0356", "code": "@Test void testSecurityExceptionHandling(){(PassthroughEnvironmentAccessor);when(env.getSystemProperty(PROPERTY)).thenThrow();(env).getSystemProperty(PROPERTY); }", "n_tokens": 38, "n_pass": [257, 31, 17]}
{"time": "2021-02-24 06:22:17.540164", "score": "0.297", "loss": "16.0356", "code": "@Test void testSecurityExceptionHandling(){(PassthroughEnvironmentAccessor);when(env.getSystemProperty(PROPERTY)).thenThrow();(env).getSystemProperty(PROPERTY);}", "n_tokens": 37, "n_pass": [260, 32, 18]}

Minimal simplified code:
@Test void testSecurityExceptionHandling(){(PassthroughEnvironmentAccessor);when(env.getSystemProperty(PROPERTY)).thenThrow();(env).getSystemProperty(PROPERTY);}

