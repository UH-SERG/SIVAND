
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/bluestreak01__questdb/core/src/test/java/com/questdb/ql/analytic/NextAnalyticFunctionTest_testLong.java
method_name = testLong
method_body = @Test public void testLong() throws Exception { final String expected = "8920866532787660373\tBZ\tBZ\t2016-05-01T10:21:00.000Z\t-6253307669002054137\n" + "-6943924477733600060\tXX\tBZ\t2016-05-01T10:22:00.000Z\t-7387846268299105911\n" + "-6856503215590263904\tKK\tXX\t2016-05-01T10:23:00.000Z\t7122109662042058469\n" + "8416773233910814357\tAX\tXX\t2016-05-01T10:24:00.000Z\t7199909180655756830\n" + "7199909180655756830\tAX\tXX\t2016-05-01T10:25:00.000Z\t6270672455202306717\n" + "6270672455202306717\tAX\tBZ\t2016-05-01T10:26:00.000Z\t-7316123607359392486\n" + "-6253307669002054137\tBZ\tXX\t2016-05-01T10:27:00.000Z\t7392877322819819290\n" + "7392877322819819290\tBZ\tKK\t2016-05-01T10:28:00.000Z\t-3107239868490395663\n" + "-7316123607359392486\tAX\tKK\t2016-05-01T10:29:00.000Z\t-6626590012581323602\n" + "-3107239868490395663\tBZ\tAX\t2016-05-01T10:30:00.000Z\t8611582118025429627\n" + "-7387846268299105911\tXX\tKK\t2016-05-01T10:31:00.000Z\t-8082754367165748693\n" + "7122109662042058469\tKK\tAX\t2016-05-01T10:32:00.000Z\tNaN\n" + "-6626590012581323602\tAX\tAX\t2016-05-01T10:33:00.000Z\t6574958665733670985\n" + "8611582118025429627\tBZ\tBZ\t2016-05-01T10:34:00.000Z\t8152044974329490473\n" + "-8082754367165748693\tXX\tAX\t2016-05-01T10:35:00.000Z\t3446015290144635451\n" + "6574958665733670985\tAX\tAX\t2016-05-01T10:36:00.000Z\t8889492928577876455\n" + "3446015290144635451\tXX\tKK\t2016-05-01T10:37:00.000Z\tNaN\n" + "8889492928577876455\tAX\tAX\t2016-05-01T10:38:00.000Z\tNaN\n" + "8152044974329490473\tBZ\tBZ\t2016-05-01T10:39:00.000Z\t-6071768268784020226\n" + "-6071768268784020226\tBZ\tAX\t2016-05-01T10:40:00.000Z\tNaN\n"; assertThat(expected, "select l, str, sym, timestamp , next(l) over (partition by str) from abc"); assertThat(expected, "select l, str, sym, timestamp , next(l) over (partition by str) from '*!*abc'"); }
predict, score, loss = alterAddTwoCol, 0.2675785422325134, 7.734185218811035

Trace of simplified code(s):
{"time": "2021-02-24 00:27:14.826814", "score": "0.2676", "loss": "7.7342", "code": "@Test public void testLong() throws Exception { final String expected = \"8920866532787660373\\tBZ\\tBZ\\t2016-05-01T10:21:00.000Z\\t-6253307669002054137\\n\" + \"-6943924477733600060\\tXX\\tBZ\\t2016-05-01T10:22:00.000Z\\t-7387846268299105911\\n\" + \"-6856503215590263904\\tKK\\tXX\\t2016-05-01T10:23:00.000Z\\t7122109662042058469\\n\" + \"8416773233910814357\\tAX\\tXX\\t2016-05-01T10:24:00.000Z\\t7199909180655756830\\n\" + \"7199909180655756830\\tAX\\tXX\\t2016-05-01T10:25:00.000Z\\t6270672455202306717\\n\" + \"6270672455202306717\\tAX\\tBZ\\t2016-05-01T10:26:00.000Z\\t-7316123607359392486\\n\" + \"-6253307669002054137\\tBZ\\tXX\\t2016-05-01T10:27:00.000Z\\t7392877322819819290\\n\" + \"7392877322819819290\\tBZ\\tKK\\t2016-05-01T10:28:00.000Z\\t-3107239868490395663\\n\" + \"-7316123607359392486\\tAX\\tKK\\t2016-05-01T10:29:00.000Z\\t-6626590012581323602\\n\" + \"-3107239868490395663\\tBZ\\tAX\\t2016-05-01T10:30:00.000Z\\t8611582118025429627\\n\" + \"-7387846268299105911\\tXX\\tKK\\t2016-05-01T10:31:00.000Z\\t-8082754367165748693\\n\" + \"7122109662042058469\\tKK\\tAX\\t2016-05-01T10:32:00.000Z\\tNaN\\n\" + \"-6626590012581323602\\tAX\\tAX\\t2016-05-01T10:33:00.000Z\\t6574958665733670985\\n\" + \"8611582118025429627\\tBZ\\tBZ\\t2016-05-01T10:34:00.000Z\\t8152044974329490473\\n\" + \"-8082754367165748693\\tXX\\tAX\\t2016-05-01T10:35:00.000Z\\t3446015290144635451\\n\" + \"6574958665733670985\\tAX\\tAX\\t2016-05-01T10:36:00.000Z\\t8889492928577876455\\n\" + \"3446015290144635451\\tXX\\tKK\\t2016-05-01T10:37:00.000Z\\tNaN\\n\" + \"8889492928577876455\\tAX\\tAX\\t2016-05-01T10:38:00.000Z\\tNaN\\n\" + \"8152044974329490473\\tBZ\\tBZ\\t2016-05-01T10:39:00.000Z\\t-6071768268784020226\\n\" + \"-6071768268784020226\\tBZ\\tAX\\t2016-05-01T10:40:00.000Z\\tNaN\\n\"; assertThat(expected, \"select l, str, sym, timestamp , next(l) over (partition by str) from abc\"); assertThat(expected, \"select l, str, sym, timestamp , next(l) over (partition by str) from '*!*abc'\"); }", "n_tokens": 1596, "n_pass": [1, 1, 1]}
{"time": "2021-02-24 00:28:14.523225", "score": "0.2676", "loss": "7.7342", "code": "@Test public void testLong() throws Exception { final String expected = \"8920866532787660373\\tBZ\\tBZn\" + \"-6943924477733600060\\tXX\\tBZ\\t2016-05-01T10:22:00.000Z\\t-7387846268299105911\\n\" + \"-6856503215590263904\\tKK\\tXX\\t2016-05-01T10:23:00.000Z\\t7122109662042058469\\n\" + \"8416773233910814357\\tAX\\tXX\\t2016-05-01T10:24:00.000Z\\t7199909180655756830\\n\" + \"7199909180655756830\\tAX\\tXX\\t2016-05-01T10:25:00.000Z\\t6270672455202306717\\n\" + \"6270672455202306717\\tAX\\tBZ\\t2016-05-01T10:26:00.000Z\\t-7316123607359392486\\n\" + \"-6253307669002054137\\tBZ\\tXX\\t2016-05-01T10:27:00.000Z\\t7392877322819819290\\n\" + \"7392877322819819290\\tBZ\\tKK\\t2016-05-01T10:28:00.000Z\\t-3107239868490395663\\n\" + \"-7316123607359392486\\tAX\\tKK\\t2016-05-01T10:29:00.000Z\\t-6626590012581323602\\n\" + \"-3107239868490395663\\tBZ\\tAX\\t2016-05-01T10:30:00.000Z\\t8611582118025429627\\n\" + \"-7387846268299105911\\tXX\\tKK\\t2016-05-01T10:31:00.000Z\\t-8082754367165748693\\n\" + \"7122109662042058469\\tKK\\tAX\\t2016-05-01T10:32:00.000Z\\tNaN\\n\" + \"-6626590012581323602\\tAX\\tAX\\t2016-05-01T10:33:00.000Z\\t6574958665733670985\\n\" + \"8611582118025429627\\tBZ\\tBZ\\t2016-05-01T10:34:00.000Z\\t8152044974329490473\\n\" + \"-8082754367165748693\\tXX\\tAX\\t2016-05-01T10:35:00.000Z\\t3446015290144635451\\n\" + \"6574958665733670985\\tAX\\tAX\\t2016-05-01T10:36:00.000Z\\t8889492928577876455\\n\" + \"3446015290144635451\\tXX\\tKK\\t2016-05-01T10:37:00.000Z\\tNaN\\n\" + \"8889492928577876455\\tAX\\tAX\\t2016-05-01T10:38:00.000Z\\tNaN\\n\" + \"8152044974329490473\\tBZ\\tBZ\\t2016-05-01T10:39:00.000Z\\t-6071768268784020226\\n\" + \"-6071768268784020226\\tBZ\\tAX\\t2016-05-01T10:40:00.000Z\\tNaN\\n\"; assertThat(expected, \"select l, str, sym, timestamp , next(l) over (partition by str) from abc\"); assertThat(expected, \"select l, str, sym, timestamp , next(l) over (partition by str) from '*!*abc'\"); }", "n_tokens": 1547, "n_pass": [93, 22, 2]}
{"time": "2021-02-24 00:28:23.133931", "score": "0.2676", "loss": "7.7342", "code": "@Test public void testLong() throws Exception { final String expected = \"8920866532787660373\\tBZ\\tBZn\" + \"-6943924477733600060\\tXX\\tBZ\\t2016-05-01T10:22:00.000Z\\t-7387846268299105911\\n\" + \"-68565032155942058469\\n\" + \"8416773233910814357\\tAX\\tXX\\t2016-05-01T10:24:00.000Z\\t7199909180655756830\\n\" + \"7199909180655756830\\tAX\\tXX\\t2016-05-01T10:25:00.000Z\\t6270672455202306717\\n\" + \"6270672455202306717\\tAX\\tBZ\\t2016-05-01T10:26:00.000Z\\t-7316123607359392486\\n\" + \"-6253307669002054137\\tBZ\\tXX\\t2016-05-01T10:27:00.000Z\\t7392877322819819290\\n\" + \"7392877322819819290\\tBZ\\tKK\\t2016-05-01T10:28:00.000Z\\t-3107239868490395663\\n\" + \"-7316123607359392486\\tAX\\tKK\\t2016-05-01T10:29:00.000Z\\t-6626590012581323602\\n\" + \"-3107239868490395663\\tBZ\\tAX\\t2016-05-01T10:30:00.000Z\\t8611582118025429627\\n\" + \"-7387846268299105911\\tXX\\tKK\\t2016-05-01T10:31:00.000Z\\t-8082754367165748693\\n\" + \"7122109662042058469\\tKK\\tAX\\t2016-05-01T10:32:00.000Z\\tNaN\\n\" + \"-6626590012581323602\\tAX\\tAX\\t2016-05-01T10:33:00.000Z\\t6574958665733670985\\n\" + \"8611582118025429627\\tBZ\\tBZ\\t2016-05-01T10:34:00.000Z\\t8152044974329490473\\n\" + \"-8082754367165748693\\tXX\\tAX\\t2016-05-01T10:35:00.000Z\\t3446015290144635451\\n\" + \"6574958665733670985\\tAX\\tAX\\t2016-05-01T10:36:00.000Z\\t8889492928577876455\\n\" + \"3446015290144635451\\tXX\\tKK\\t2016-05-01T10:37:00.000Z\\tNaN\\n\" + \"8889492928577876455\\tAX\\tAX\\t2016-05-01T10:38:00.000Z\\tNaN\\n\" + \"8152044974329490473\\tBZ\\tBZ\\t2016-05-01T10:39:00.000Z\\t-6071768268784020226\\n\" + \"-6071768268784020226\\tBZ\\tAX\\t2016-05-01T10:40:00.000Z\\tNaN\\n\"; assertThat(expected, \"select l, str, sym, timestamp , next(l) over (partition by str) from abc\"); assertThat(expected, \"select l, str, sym, timestamp , next(l) over (partition by str) from '*!*abc'\"); }", "n_tokens": 1497, "n_pass": [96, 25, 3]}
{"time": "2021-02-24 00:28:31.621973", "score": "0.2676", "loss": "7.7342", "code": "@Test public void testLong() throws Exception { final String expected = \"8920866532787660373\\tBZ\\tBZn\" + \"-6943924477733600060\\tXX\\tBZ\\t2016-05-01T10:22:00.000Z\\t-7387846268299105911\\n\" + \"-68565032155942058469\\n\" + \"8416773233910814357\\tAX\\tXX\\t2016-05-01T10:24:00.000Z\\t7199909180655756830\\n\" + \"71999091455202306717\\n\" + \"6270672455202306717\\tAX\\tBZ\\t2016-05-01T10:26:00.000Z\\t-7316123607359392486\\n\" + \"-6253307669002054137\\tBZ\\tXX\\t2016-05-01T10:27:00.000Z\\t7392877322819819290\\n\" + \"7392877322819819290\\tBZ\\tKK\\t2016-05-01T10:28:00.000Z\\t-3107239868490395663\\n\" + \"-7316123607359392486\\tAX\\tKK\\t2016-05-01T10:29:00.000Z\\t-6626590012581323602\\n\" + \"-3107239868490395663\\tBZ\\tAX\\t2016-05-01T10:30:00.000Z\\t8611582118025429627\\n\" + \"-7387846268299105911\\tXX\\tKK\\t2016-05-01T10:31:00.000Z\\t-8082754367165748693\\n\" + \"7122109662042058469\\tKK\\tAX\\t2016-05-01T10:32:00.000Z\\tNaN\\n\" + \"-6626590012581323602\\tAX\\tAX\\t2016-05-01T10:33:00.000Z\\t6574958665733670985\\n\" + \"8611582118025429627\\tBZ\\tBZ\\t2016-05-01T10:34:00.000Z\\t8152044974329490473\\n\" + \"-8082754367165748693\\tXX\\tAX\\t2016-05-01T10:35:00.000Z\\t3446015290144635451\\n\" + \"6574958665733670985\\tAX\\tAX\\t2016-05-01T10:36:00.000Z\\t8889492928577876455\\n\" + \"3446015290144635451\\tXX\\tKK\\t2016-05-01T10:37:00.000Z\\tNaN\\n\" + \"8889492928577876455\\tAX\\tAX\\t2016-05-01T10:38:00.000Z\\tNaN\\n\" + \"8152044974329490473\\tBZ\\tBZ\\t2016-05-01T10:39:00.000Z\\t-6071768268784020226\\n\" + \"-6071768268784020226\\tBZ\\tAX\\t2016-05-01T10:40:00.000Z\\tNaN\\n\"; assertThat(expected, \"select l, str, sym, timestamp , next(l) over (partition by str) from abc\"); assertThat(expected, \"select l, str, sym, timestamp , next(l) over (partition by str) from '*!*abc'\"); }", "n_tokens": 1447, "n_pass": [99, 28, 4]}
{"time": "2021-02-24 00:28:40.355245", "score": "0.2676", "loss": "7.7342", "code": "@Test public void testLong() throws Exception { final String expected = \"8920866532787660373\\tBZ\\tBZn\" + \"-6943924477733600060\\tXX\\tBZ\\t2016-05-01T10:22:00.000Z\\t-7387846268299105911\\n\" + \"-68565032155942058469\\n\" + \"8416773233910814357\\tAX\\tXX\\t2016-05-01T10:24:00.000Z\\t7199909180655756830\\n\" + \"71999091455202306717\\n\" + \"6270672455202306717\\tAX\\tBZ\\t2016-05-01T10:26:00.000Z\\t-7316123607359392486\\n\" + \"-62392877322819819290\\n\" + \"7392877322819819290\\tBZ\\tKK\\t2016-05-01T10:28:00.000Z\\t-3107239868490395663\\n\" + \"-7316123607359392486\\tAX\\tKK\\t2016-05-01T10:29:00.000Z\\t-6626590012581323602\\n\" + \"-3107239868490395663\\tBZ\\tAX\\t2016-05-01T10:30:00.000Z\\t8611582118025429627\\n\" + \"-7387846268299105911\\tXX\\tKK\\t2016-05-01T10:31:00.000Z\\t-8082754367165748693\\n\" + \"7122109662042058469\\tKK\\tAX\\t2016-05-01T10:32:00.000Z\\tNaN\\n\" + \"-6626590012581323602\\tAX\\tAX\\t2016-05-01T10:33:00.000Z\\t6574958665733670985\\n\" + \"8611582118025429627\\tBZ\\tBZ\\t2016-05-01T10:34:00.000Z\\t8152044974329490473\\n\" + \"-8082754367165748693\\tXX\\tAX\\t2016-05-01T10:35:00.000Z\\t3446015290144635451\\n\" + \"6574958665733670985\\tAX\\tAX\\t2016-05-01T10:36:00.000Z\\t8889492928577876455\\n\" + \"3446015290144635451\\tXX\\tKK\\t2016-05-01T10:37:00.000Z\\tNaN\\n\" + \"8889492928577876455\\tAX\\tAX\\t2016-05-01T10:38:00.000Z\\tNaN\\n\" + \"8152044974329490473\\tBZ\\tBZ\\t2016-05-01T10:39:00.000Z\\t-6071768268784020226\\n\" + \"-6071768268784020226\\tBZ\\tAX\\t2016-05-01T10:40:00.000Z\\tNaN\\n\"; assertThat(expected, \"select l, str, sym, timestamp , next(l) over (partition by str) from abc\"); assertThat(expected, \"select l, str, sym, timestamp , next(l) over (partition by str) from '*!*abc'\"); }", "n_tokens": 1397, "n_pass": [102, 31, 5]}
{"time": "2021-02-24 00:28:48.850755", "score": "0.2676", "loss": "7.7342", "code": "@Test public void testLong() throws Exception { final String expected = \"8920866532787660373\\tBZ\\tBZn\" + \"-6943924477733600060\\tXX\\tBZ\\t2016-05-01T10:22:00.000Z\\t-7387846268299105911\\n\" + \"-68565032155942058469\\n\" + \"8416773233910814357\\tAX\\tXX\\t2016-05-01T10:24:00.000Z\\t7199909180655756830\\n\" + \"71999091455202306717\\n\" + \"6270672455202306717\\tAX\\tBZ\\t2016-05-01T10:26:00.000Z\\t-7316123607359392486\\n\" + \"-62392877322819819290\\n\" + \"7392877322819819290\\tBZ\\tKK\\t2016-05-01T10:28:00.000Z\\t-3107239868490395663\\n\" + \"-7316123607359392486\\tAX\\tKK\\t2016-05-01T10:29:00.000Z\\t-6626590012581323602\\n\" + \"-31072398684903956627\\n\" + \"-7387846268299105911\\tXX\\tKK\\t2016-05-01T10:31:00.000Z\\t-8082754367165748693\\n\" + \"7122109662042058469\\tKK\\tAX\\t2016-05-01T10:32:00.000Z\\tNaN\\n\" + \"-6626590012581323602\\tAX\\tAX\\t2016-05-01T10:33:00.000Z\\t6574958665733670985\\n\" + \"8611582118025429627\\tBZ\\tBZ\\t2016-05-01T10:34:00.000Z\\t8152044974329490473\\n\" + \"-8082754367165748693\\tXX\\tAX\\t2016-05-01T10:35:00.000Z\\t3446015290144635451\\n\" + \"6574958665733670985\\tAX\\tAX\\t2016-05-01T10:36:00.000Z\\t8889492928577876455\\n\" + \"3446015290144635451\\tXX\\tKK\\t2016-05-01T10:37:00.000Z\\tNaN\\n\" + \"8889492928577876455\\tAX\\tAX\\t2016-05-01T10:38:00.000Z\\tNaN\\n\" + \"8152044974329490473\\tBZ\\tBZ\\t2016-05-01T10:39:00.000Z\\t-6071768268784020226\\n\" + \"-6071768268784020226\\tBZ\\tAX\\t2016-05-01T10:40:00.000Z\\tNaN\\n\"; assertThat(expected, \"select l, str, sym, timestamp , next(l) over (partition by str) from abc\"); assertThat(expected, \"select l, str, sym, timestamp , next(l) over (partition by str) from '*!*abc'\"); }", "n_tokens": 1347, "n_pass": [107, 34, 6]}
{"time": "2021-02-24 00:29:00.229427", "score": "0.2676", "loss": "7.7342", "code": "@Test public void testLong() throws Exception { final String expected = \"8920866532787660373\\tBZ\\tBZn\" + \"-6943924477733600060\\tXX\\tBZ\\t2016-05-01T10:22:00.000Z\\t-7387846268299105911\\n\" + \"-68565032155942058469\\n\" + \"8416773233910814357\\tAX\\tXX\\t2016-05-01T10:24:00.000Z\\t7199909180655756830\\n\" + \"71999091455202306717\\n\" + \"6270672455202306717\\tAX\\tBZ\\t2016-05-01T10:26:00.000Z\\t-7316123607359392486\\n\" + \"-62392877322819819290\\n\" + \"7392877322819819290\\tBZ\\tKK\\t2016-05-01T10:28:00.000Z\\t-3107239868490395663\\n\" + \"-7316123607359392486\\tAX\\tKK\\t2016-05-01T10:29:00.000Z\\t-6626590012581323602\\n\" + \"-31072398684903956627\\n\" + \"-7387846268299105911\\tXX\\tKK\\t2016-05-01T10:31:00.000Z\\t-8082754367165748693\\n\" + \"7122109662042058469\\tKK\\tAX\\t2016-05-01T10:32:00.000Z\\tNaN\\n\" + \"-66574958665733670985\\n\" + \"8611582118025429627\\tBZ\\tBZ\\t2016-05-01T10:34:00.000Z\\t8152044974329490473\\n\" + \"-8082754367165748693\\tXX\\tAX\\t2016-05-01T10:35:00.000Z\\t3446015290144635451\\n\" + \"6574958665733670985\\tAX\\tAX\\t2016-05-01T10:36:00.000Z\\t8889492928577876455\\n\" + \"3446015290144635451\\tXX\\tKK\\t2016-05-01T10:37:00.000Z\\tNaN\\n\" + \"8889492928577876455\\tAX\\tAX\\t2016-05-01T10:38:00.000Z\\tNaN\\n\" + \"8152044974329490473\\tBZ\\tBZ\\t2016-05-01T10:39:00.000Z\\t-6071768268784020226\\n\" + \"-6071768268784020226\\tBZ\\tAX\\t2016-05-01T10:40:00.000Z\\tNaN\\n\"; assertThat(expected, \"select l, str, sym, timestamp , next(l) over (partition by str) from abc\"); assertThat(expected, \"select l, str, sym, timestamp , next(l) over (partition by str) from '*!*abc'\"); }", "n_tokens": 1297, "n_pass": [111, 38, 7]}
{"time": "2021-02-24 00:29:09.450959", "score": "0.2676", "loss": "7.7342", "code": "@Test public void testLong() throws Exception { final String expected = \"8920866532787660373\\tBZ\\tBZn\" + \"-6943924477733600060\\tXX\\tBZ\\t2016-05-01T10:22:00.000Z\\t-7387846268299105911\\n\" + \"-68565032155942058469\\n\" + \"8416773233910814357\\tAX\\tXX\\t2016-05-01T10:24:00.000Z\\t7199909180655756830\\n\" + \"71999091455202306717\\n\" + \"6270672455202306717\\tAX\\tBZ\\t2016-05-01T10:26:00.000Z\\t-7316123607359392486\\n\" + \"-62392877322819819290\\n\" + \"7392877322819819290\\tBZ\\tKK\\t2016-05-01T10:28:00.000Z\\t-3107239868490395663\\n\" + \"-7316123607359392486\\tAX\\tKK\\t2016-05-01T10:29:00.000Z\\t-6626590012581323602\\n\" + \"-31072398684903956627\\n\" + \"-7387846268299105911\\tXX\\tKK\\t2016-05-01T10:31:00.000Z\\t-8082754367165748693\\n\" + \"7122109662042058469\\tKK\\tAX\\t2016-05-01T10:32:00.000Z\\tNaN\\n\" + \"-66574958665733670985\\n\" + \"8611582118025429627\\tBZ\\tBZ\\t2016-05-01T10:34:00.000Z\\t8152044974329490473\\n\" + \"-8082754367165748693\\tXX\\tAX\\t2016-05-01T10:35:00.000Z\\t3446015290144635451\\n\" + \"6574958665733670985\\\\n\" + \"3446015290144635451\\tXX\\tKK\\t2016-05-01T10:37:00.000Z\\tNaN\\n\" + \"8889492928577876455\\tAX\\tAX\\t2016-05-01T10:38:00.000Z\\tNaN\\n\" + \"8152044974329490473\\tBZ\\tBZ\\t2016-05-01T10:39:00.000Z\\t-6071768268784020226\\n\" + \"-6071768268784020226\\tBZ\\tAX\\t2016-05-01T10:40:00.000Z\\tNaN\\n\"; assertThat(expected, \"select l, str, sym, timestamp , next(l) over (partition by str) from abc\"); assertThat(expected, \"select l, str, sym, timestamp , next(l) over (partition by str) from '*!*abc'\"); }", "n_tokens": 1247, "n_pass": [116, 41, 8]}
{"time": "2021-02-24 00:30:01.600920", "score": "0.2676", "loss": "7.7342", "code": "@Test public void testLong() throws Exception { final String expected = \"8920866532787660373\\tBZ\\tBZn\" + \"-6943924477733600060\\tXX\\tBZ\\t2016-05-01T10:22:00.000Z\\t-7387846268299105911\\n\" + \"-68565032155942058469\\n\" + \"8416773233910814357\\tAX\\tXX\\t2016-05-01T10:24:00.000Z\\t7199909180655756830\\n\" + \"71999091455202306717\\n\" + \"6270672455202306717\\tAX\\tBZ\\t2016-05-01T10:26:00.000Z\\t-7316123607359392486\\n\" + \"-62392877322819819290\\n\" + \"7392877322819819290\\tBZ\\tKK\\t2016-05-01T10:28:00.000Z\\t-3107239868490395663\\n\" + \"-7316123607359392486\\tAX\\tKK\\t2016-05-01T10:29:00.000Z\\t-6626590012581323602\\n\" + \"-31072398684903956627\\n\" + \"-7387846268299105911\\tXX\\tKK\\t2016-05-01T10:31:00.000Z\\t-8082754367165748693\\n\" + \"7122109662042058469\\tKK\\tAX\\t2016-05-01T10:32:00.000Z\\tNaN\\n\" + \"-66574958665733670985\\n\" + \"8611582118025429627\\tBZ\\tBZ\\t2016-05-01T10:34:00.000Z\\t8152044974329490473\\n\" + \"-8082754367165748693\\tXX\\tAX\\t2016-05-01T10:35:00.000Z\\t3446015290144635451\\n\" + \"6574958665733670985\\\\n\" + \"3446015290144635450.000Z\\tNaN\\n\" + \"8889492928577876455\\tAX\\tAX\\t2016-05-01T10:38:00.000Z\\tNaN\\n\" + \"8152044974329490473\\tBZ\\tBZ\\t2016-05-01T10:39:00.000Z\\t-6071768268784020226\\n\" + \"-6071768268784020226\\tBZ\\tAX\\t2016-05-01T10:40:00.000Z\\tNaN\\n\"; assertThat(expected, \"select l, str, sym, timestamp , next(l) over (partition by str) from abc\"); assertThat(expected, \"select l, str, sym, timestamp , next(l) over (partition by str) from '*!*abc'\"); }", "n_tokens": 1222, "n_pass": [193, 59, 9]}
{"time": "2021-02-24 00:30:07.358350", "score": "0.2676", "loss": "7.7342", "code": "@Test public void testLong() throws Exception { final String expected = \"8920866532787660373\\tBZ\\tBZn\" + \"-6943924477733600060\\tXX\\tBZ\\t2016-05-01T10:22:00.000Z\\t-7387846268299105911\\n\" + \"-68565032155942058469\\n\" + \"8416773233910814357\\tAX\\tXX\\t2016-05-01T10:24:00.000Z\\t7199909180655756830\\n\" + \"71999091455202306717\\n\" + \"6270672455202306717\\tAX\\tBZ\\t2016-05-01T10:26:00.000Z\\t-7316123607359392486\\n\" + \"-62392877322819819290\\n\" + \"7392877322819819290\\tBZ\\tKK\\t2016-05-01T10:28:00.000Z\\t-3107239868490395663\\n\" + \"-7316123607359392486\\tAX\\tKK\\t2016-05-01T10:29:00.000Z\\t-6626590012581323602\\n\" + \"-31072398684903956627\\n\" + \"-7387846268299105911\\tXX\\tKK\\t2016-05-01T10:31:00.000Z\\t-8082754367165748693\\n\" + \"7122109662042058469\\tKK\\tAX\\t2016-05-01T10:32:00.000Z\\tNaN\\n\" + \"-66574958665733670985\\n\" + \"8611582118025429627\\tBZ\\tBZ\\t2016-05-01T10:34:00.000Z\\t8152044974329490473\\n\" + \"-8082754367165748693\\tXX\\tAX\\t2016-05-01T10:35:00.000Z\\t3446015290144635451\\n\" + \"6574958665733670985\\\\n\" + \"3446015290144635450.000Z\\tNaN\\n\" + \"8889492928T10:38:00.000Z\\tNaN\\n\" + \"8152044974329490473\\tBZ\\tBZ\\t2016-05-01T10:39:00.000Z\\t-6071768268784020226\\n\" + \"-6071768268784020226\\tBZ\\tAX\\t2016-05-01T10:40:00.000Z\\tNaN\\n\"; assertThat(expected, \"select l, str, sym, timestamp , next(l) over (partition by str) from abc\"); assertThat(expected, \"select l, str, sym, timestamp , next(l) over (partition by str) from '*!*abc'\"); }", "n_tokens": 1197, "n_pass": [195, 61, 10]}
{"time": "2021-02-24 00:30:16.067976", "score": "0.2676", "loss": "7.7342", "code": "@Test public void testLong() throws Exception { final String expected = \"8920866532787660373\\tBZ\\tBZn\" + \"-6943924477733600060\\tXX\\tBZ\\t2016-05-01T10:22:00.000Z\\t-7387846268299105911\\n\" + \"-68565032155942058469\\n\" + \"8416773233910814357\\tAX\\tXX\\t2016-05-01T10:24:00.000Z\\t7199909180655756830\\n\" + \"71999091455202306717\\n\" + \"6270672455202306717\\tAX\\tBZ\\t2016-05-01T10:26:00.000Z\\t-7316123607359392486\\n\" + \"-62392877322819819290\\n\" + \"7392877322819819290\\tBZ\\tKK\\t2016-05-01T10:28:00.000Z\\t-3107239868490395663\\n\" + \"-7316123607359392486\\tAX\\tKK\\t2016-05-01T10:29:00.000Z\\t-6626590012581323602\\n\" + \"-31072398684903956627\\n\" + \"-7387846268299105911\\tXX\\tKK\\t2016-05-01T10:31:00.000Z\\t-8082754367165748693\\n\" + \"7122109662042058469\\tKK\\tAX\\t2016-05-01T10:32:00.000Z\\tNaN\\n\" + \"-66574958665733670985\\n\" + \"8611582118025429627\\tBZ\\tBZ\\t2016-05-01T10:34:00.000Z\\t8152044974329490473\\n\" + \"-8082754367165748693\\tXX\\tAX\\t2016-05-01T10:35:00.000Z\\t3446015290144635451\\n\" + \"6574958665733670985\\\\n\" + \"3446015290144635450.000Z\\tNaN\\n\" + \"8889492928T10:38:00.000Z\\tNaN\\n\" + \"8152044974329490473\\tBZ\\tBZ\\t206071768268784020226\\n\" + \"-6071768268784020226\\tBZ\\tAX\\t2016-05-01T10:40:00.000Z\\tNaN\\n\"; assertThat(expected, \"select l, str, sym, timestamp , next(l) over (partition by str) from abc\"); assertThat(expected, \"select l, str, sym, timestamp , next(l) over (partition by str) from '*!*abc'\"); }", "n_tokens": 1172, "n_pass": [198, 64, 11]}
{"time": "2021-02-24 00:30:18.971668", "score": "0.2676", "loss": "7.7342", "code": "@Test public void testLong() throws Exception { final String expected = \"8920866532787660373\\tBZ\\tBZn\" + \"-6943924477733600060\\tXX\\tBZ\\t2016-05-01T10:22:00.000Z\\t-7387846268299105911\\n\" + \"-68565032155942058469\\n\" + \"8416773233910814357\\tAX\\tXX\\t2016-05-01T10:24:00.000Z\\t7199909180655756830\\n\" + \"71999091455202306717\\n\" + \"6270672455202306717\\tAX\\tBZ\\t2016-05-01T10:26:00.000Z\\t-7316123607359392486\\n\" + \"-62392877322819819290\\n\" + \"7392877322819819290\\tBZ\\tKK\\t2016-05-01T10:28:00.000Z\\t-3107239868490395663\\n\" + \"-7316123607359392486\\tAX\\tKK\\t2016-05-01T10:29:00.000Z\\t-6626590012581323602\\n\" + \"-31072398684903956627\\n\" + \"-7387846268299105911\\tXX\\tKK\\t2016-05-01T10:31:00.000Z\\t-8082754367165748693\\n\" + \"7122109662042058469\\tKK\\tAX\\t2016-05-01T10:32:00.000Z\\tNaN\\n\" + \"-66574958665733670985\\n\" + \"8611582118025429627\\tBZ\\tBZ\\t2016-05-01T10:34:00.000Z\\t8152044974329490473\\n\" + \"-8082754367165748693\\tXX\\tAX\\t2016-05-01T10:35:00.000Z\\t3446015290144635451\\n\" + \"6574958665733670985\\\\n\" + \"3446015290144635450.000Z\\tNaN\\n\" + \"8889492928T10:38:00.000Z\\tNaN\\n\" + \"8152044974329490473\\tBZ\\tBZ\\t206071768268784020226\\n\" + \"-6071768268784020226\\tBZ\\tAXZ\\tNaN\\n\"; assertThat(expected, \"select l, str, sym, timestamp , next(l) over (partition by str) from abc\"); assertThat(expected, \"select l, str, sym, timestamp , next(l) over (partition by str) from '*!*abc'\"); }", "n_tokens": 1147, "n_pass": [201, 65, 12]}
{"time": "2021-02-24 00:30:24.886836", "score": "0.2557", "loss": "7.9972", "code": "@Test public void testLong() throws Exception { final String expected = \"8920866532787660373\\tBZ\\tBZn\" + \"-6943924477733600:00.000Z\\t-7387846268299105911\\n\" + \"-68565032155942058469\\n\" + \"8416773233910814357\\tAX\\tXX\\t2016-05-01T10:24:00.000Z\\t7199909180655756830\\n\" + \"71999091455202306717\\n\" + \"6270672455202306717\\tAX\\tBZ\\t2016-05-01T10:26:00.000Z\\t-7316123607359392486\\n\" + \"-62392877322819819290\\n\" + \"7392877322819819290\\tBZ\\tKK\\t2016-05-01T10:28:00.000Z\\t-3107239868490395663\\n\" + \"-7316123607359392486\\tAX\\tKK\\t2016-05-01T10:29:00.000Z\\t-6626590012581323602\\n\" + \"-31072398684903956627\\n\" + \"-7387846268299105911\\tXX\\tKK\\t2016-05-01T10:31:00.000Z\\t-8082754367165748693\\n\" + \"7122109662042058469\\tKK\\tAX\\t2016-05-01T10:32:00.000Z\\tNaN\\n\" + \"-66574958665733670985\\n\" + \"8611582118025429627\\tBZ\\tBZ\\t2016-05-01T10:34:00.000Z\\t8152044974329490473\\n\" + \"-8082754367165748693\\tXX\\tAX\\t2016-05-01T10:35:00.000Z\\t3446015290144635451\\n\" + \"6574958665733670985\\\\n\" + \"3446015290144635450.000Z\\tNaN\\n\" + \"8889492928T10:38:00.000Z\\tNaN\\n\" + \"8152044974329490473\\tBZ\\tBZ\\t206071768268784020226\\n\" + \"-6071768268784020226\\tBZ\\tAXZ\\tNaN\\n\"; assertThat(expected, \"select l, str, sym, timestamp , next(l) over (partition by str) from abc\"); assertThat(expected, \"select l, str, sym, timestamp , next(l) over (partition by str) from '*!*abc'\"); }", "n_tokens": 1122, "n_pass": [209, 67, 13]}
{"time": "2021-02-24 00:30:27.742438", "score": "0.2676", "loss": "7.7342", "code": "@Test public void testLong() throws Exception { final String expected = \"8920866532787660373\\tBZ\\tBZn\" + \"-694392447773360005911\\n\" + \"-68565032155942058469\\n\" + \"8416773233910814357\\tAX\\tXX\\t2016-05-01T10:24:00.000Z\\t7199909180655756830\\n\" + \"71999091455202306717\\n\" + \"6270672455202306717\\tAX\\tBZ\\t2016-05-01T10:26:00.000Z\\t-7316123607359392486\\n\" + \"-62392877322819819290\\n\" + \"7392877322819819290\\tBZ\\tKK\\t2016-05-01T10:28:00.000Z\\t-3107239868490395663\\n\" + \"-7316123607359392486\\tAX\\tKK\\t2016-05-01T10:29:00.000Z\\t-6626590012581323602\\n\" + \"-31072398684903956627\\n\" + \"-7387846268299105911\\tXX\\tKK\\t2016-05-01T10:31:00.000Z\\t-8082754367165748693\\n\" + \"7122109662042058469\\tKK\\tAX\\t2016-05-01T10:32:00.000Z\\tNaN\\n\" + \"-66574958665733670985\\n\" + \"8611582118025429627\\tBZ\\tBZ\\t2016-05-01T10:34:00.000Z\\t8152044974329490473\\n\" + \"-8082754367165748693\\tXX\\tAX\\t2016-05-01T10:35:00.000Z\\t3446015290144635451\\n\" + \"6574958665733670985\\\\n\" + \"3446015290144635450.000Z\\tNaN\\n\" + \"8889492928T10:38:00.000Z\\tNaN\\n\" + \"8152044974329490473\\tBZ\\tBZ\\t206071768268784020226\\n\" + \"-6071768268784020226\\tBZ\\tAXZ\\tNaN\\n\"; assertThat(expected, \"select l, str, sym, timestamp , next(l) over (partition by str) from abc\"); assertThat(expected, \"select l, str, sym, timestamp , next(l) over (partition by str) from '*!*abc'\"); }", "n_tokens": 1097, "n_pass": [210, 68, 14]}
{"time": "2021-02-24 00:30:39.099707", "score": "0.2676", "loss": "7.7342", "code": "@Test public void testLong() throws Exception { final String expected = \"8920866532787660373\\tBZ\\tBZn\" + \"-694392447773360005911\\n\" + \"-68565032155942058469\\n\" + \"8416773233910814357\\tAX\\tXX\\t2016-05-010655756830\\n\" + \"71999091455202306717\\n\" + \"6270672455202306717\\tAX\\tBZ\\t2016-05-01T10:26:00.000Z\\t-7316123607359392486\\n\" + \"-62392877322819819290\\n\" + \"7392877322819819290\\tBZ\\tKK\\t2016-05-01T10:28:00.000Z\\t-3107239868490395663\\n\" + \"-7316123607359392486\\tAX\\tKK\\t2016-05-01T10:29:00.000Z\\t-6626590012581323602\\n\" + \"-31072398684903956627\\n\" + \"-7387846268299105911\\tXX\\tKK\\t2016-05-01T10:31:00.000Z\\t-8082754367165748693\\n\" + \"7122109662042058469\\tKK\\tAX\\t2016-05-01T10:32:00.000Z\\tNaN\\n\" + \"-66574958665733670985\\n\" + \"8611582118025429627\\tBZ\\tBZ\\t2016-05-01T10:34:00.000Z\\t8152044974329490473\\n\" + \"-8082754367165748693\\tXX\\tAX\\t2016-05-01T10:35:00.000Z\\t3446015290144635451\\n\" + \"6574958665733670985\\\\n\" + \"3446015290144635450.000Z\\tNaN\\n\" + \"8889492928T10:38:00.000Z\\tNaN\\n\" + \"8152044974329490473\\tBZ\\tBZ\\t206071768268784020226\\n\" + \"-6071768268784020226\\tBZ\\tAXZ\\tNaN\\n\"; assertThat(expected, \"select l, str, sym, timestamp , next(l) over (partition by str) from abc\"); assertThat(expected, \"select l, str, sym, timestamp , next(l) over (partition by str) from '*!*abc'\"); }", "n_tokens": 1072, "n_pass": [214, 72, 15]}
{"time": "2021-02-24 00:30:50.453329", "score": "0.2676", "loss": "7.7342", "code": "@Test public void testLong() throws Exception { final String expected = \"8920866532787660373\\tBZ\\tBZn\" + \"-694392447773360005911\\n\" + \"-68565032155942058469\\n\" + \"8416773233910814357\\tAX\\tXX\\t2016-05-010655756830\\n\" + \"71999091455202306717\\n\" + \"6270672455202306717\\tAX\\tBZ\\t2016-0123607359392486\\n\" + \"-62392877322819819290\\n\" + \"7392877322819819290\\tBZ\\tKK\\t2016-05-01T10:28:00.000Z\\t-3107239868490395663\\n\" + \"-7316123607359392486\\tAX\\tKK\\t2016-05-01T10:29:00.000Z\\t-6626590012581323602\\n\" + \"-31072398684903956627\\n\" + \"-7387846268299105911\\tXX\\tKK\\t2016-05-01T10:31:00.000Z\\t-8082754367165748693\\n\" + \"7122109662042058469\\tKK\\tAX\\t2016-05-01T10:32:00.000Z\\tNaN\\n\" + \"-66574958665733670985\\n\" + \"8611582118025429627\\tBZ\\tBZ\\t2016-05-01T10:34:00.000Z\\t8152044974329490473\\n\" + \"-8082754367165748693\\tXX\\tAX\\t2016-05-01T10:35:00.000Z\\t3446015290144635451\\n\" + \"6574958665733670985\\\\n\" + \"3446015290144635450.000Z\\tNaN\\n\" + \"8889492928T10:38:00.000Z\\tNaN\\n\" + \"8152044974329490473\\tBZ\\tBZ\\t206071768268784020226\\n\" + \"-6071768268784020226\\tBZ\\tAXZ\\tNaN\\n\"; assertThat(expected, \"select l, str, sym, timestamp , next(l) over (partition by str) from abc\"); assertThat(expected, \"select l, str, sym, timestamp , next(l) over (partition by str) from '*!*abc'\"); }", "n_tokens": 1047, "n_pass": [218, 76, 16]}
{"time": "2021-02-24 00:31:02.271512", "score": "0.2676", "loss": "7.7342", "code": "@Test public void testLong() throws Exception { final String expected = \"8920866532787660373\\tBZ\\tBZn\" + \"-694392447773360005911\\n\" + \"-68565032155942058469\\n\" + \"8416773233910814357\\tAX\\tXX\\t2016-05-010655756830\\n\" + \"71999091455202306717\\n\" + \"6270672455202306717\\tAX\\tBZ\\t2016-0123607359392486\\n\" + \"-62392877322819819290\\n\" + \"7392877322819819290\\tBZ\\tKK\\tt-3107239868490395663\\n\" + \"-7316123607359392486\\tAX\\tKK\\t2016-05-01T10:29:00.000Z\\t-6626590012581323602\\n\" + \"-31072398684903956627\\n\" + \"-7387846268299105911\\tXX\\tKK\\t2016-05-01T10:31:00.000Z\\t-8082754367165748693\\n\" + \"7122109662042058469\\tKK\\tAX\\t2016-05-01T10:32:00.000Z\\tNaN\\n\" + \"-66574958665733670985\\n\" + \"8611582118025429627\\tBZ\\tBZ\\t2016-05-01T10:34:00.000Z\\t8152044974329490473\\n\" + \"-8082754367165748693\\tXX\\tAX\\t2016-05-01T10:35:00.000Z\\t3446015290144635451\\n\" + \"6574958665733670985\\\\n\" + \"3446015290144635450.000Z\\tNaN\\n\" + \"8889492928T10:38:00.000Z\\tNaN\\n\" + \"8152044974329490473\\tBZ\\tBZ\\t206071768268784020226\\n\" + \"-6071768268784020226\\tBZ\\tAXZ\\tNaN\\n\"; assertThat(expected, \"select l, str, sym, timestamp , next(l) over (partition by str) from abc\"); assertThat(expected, \"select l, str, sym, timestamp , next(l) over (partition by str) from '*!*abc'\"); }", "n_tokens": 1022, "n_pass": [222, 80, 17]}
{"time": "2021-02-24 00:31:05.115262", "score": "0.2676", "loss": "7.7342", "code": "@Test public void testLong() throws Exception { final String expected = \"8920866532787660373\\tBZ\\tBZn\" + \"-694392447773360005911\\n\" + \"-68565032155942058469\\n\" + \"8416773233910814357\\tAX\\tXX\\t2016-05-010655756830\\n\" + \"71999091455202306717\\n\" + \"6270672455202306717\\tAX\\tBZ\\t2016-0123607359392486\\n\" + \"-62392877322819819290\\n\" + \"7392877322819819290\\tBZ\\tKK\\tt-3107239868490395663\\n\" + \"-7316123607359392486\\tAX00Z\\t-6626590012581323602\\n\" + \"-31072398684903956627\\n\" + \"-7387846268299105911\\tXX\\tKK\\t2016-05-01T10:31:00.000Z\\t-8082754367165748693\\n\" + \"7122109662042058469\\tKK\\tAX\\t2016-05-01T10:32:00.000Z\\tNaN\\n\" + \"-66574958665733670985\\n\" + \"8611582118025429627\\tBZ\\tBZ\\t2016-05-01T10:34:00.000Z\\t8152044974329490473\\n\" + \"-8082754367165748693\\tXX\\tAX\\t2016-05-01T10:35:00.000Z\\t3446015290144635451\\n\" + \"6574958665733670985\\\\n\" + \"3446015290144635450.000Z\\tNaN\\n\" + \"8889492928T10:38:00.000Z\\tNaN\\n\" + \"8152044974329490473\\tBZ\\tBZ\\t206071768268784020226\\n\" + \"-6071768268784020226\\tBZ\\tAXZ\\tNaN\\n\"; assertThat(expected, \"select l, str, sym, timestamp , next(l) over (partition by str) from abc\"); assertThat(expected, \"select l, str, sym, timestamp , next(l) over (partition by str) from '*!*abc'\"); }", "n_tokens": 997, "n_pass": [225, 81, 18]}
{"time": "2021-02-24 00:31:07.960927", "score": "0.2554", "loss": "7.4699", "code": "@Test public void testLong() throws Exception { final String expected = \"8920866532787660373\\tBZ\\tBZn\" + \"-694392447773360005911\\n\" + \"-68565032155942058469\\n\" + \"8416773233910814357\\tAX\\tXX\\t2016-05-010655756830\\n\" + \"71999091455202306717\\n\" + \"6270672455202306717\\tAX\\tBZ\\t2016-0123607359392486\\n\" + \"-62392877322819819290\\n\" + \"7392877322819819290\\tBZ\\tKK\\tt-3107239868490395663\\n\" + \"-7316123607359392486\\tAX\\n\" + \"-31072398684903956627\\n\" + \"-7387846268299105911\\tXX\\tKK\\t2016-05-01T10:31:00.000Z\\t-8082754367165748693\\n\" + \"7122109662042058469\\tKK\\tAX\\t2016-05-01T10:32:00.000Z\\tNaN\\n\" + \"-66574958665733670985\\n\" + \"8611582118025429627\\tBZ\\tBZ\\t2016-05-01T10:34:00.000Z\\t8152044974329490473\\n\" + \"-8082754367165748693\\tXX\\tAX\\t2016-05-01T10:35:00.000Z\\t3446015290144635451\\n\" + \"6574958665733670985\\\\n\" + \"3446015290144635450.000Z\\tNaN\\n\" + \"8889492928T10:38:00.000Z\\tNaN\\n\" + \"8152044974329490473\\tBZ\\tBZ\\t206071768268784020226\\n\" + \"-6071768268784020226\\tBZ\\tAXZ\\tNaN\\n\"; assertThat(expected, \"select l, str, sym, timestamp , next(l) over (partition by str) from abc\"); assertThat(expected, \"select l, str, sym, timestamp , next(l) over (partition by str) from '*!*abc'\"); }", "n_tokens": 972, "n_pass": [226, 82, 19]}
{"time": "2021-02-24 00:31:19.257098", "score": "0.2554", "loss": "7.4699", "code": "@Test public void testLong() throws Exception { final String expected = \"8920866532787660373\\tBZ\\tBZn\" + \"-694392447773360005911\\n\" + \"-68565032155942058469\\n\" + \"8416773233910814357\\tAX\\tXX\\t2016-05-010655756830\\n\" + \"71999091455202306717\\n\" + \"6270672455202306717\\tAX\\tBZ\\t2016-0123607359392486\\n\" + \"-62392877322819819290\\n\" + \"7392877322819819290\\tBZ\\tKK\\tt-3107239868490395663\\n\" + \"-7316123607359392486\\tAX\\n\" + \"-31072398684903956627\\n\" + \"-7387846268299105911\\tXX\\tKK\\t2016-05-01T10:5748693\\n\" + \"7122109662042058469\\tKK\\tAX\\t2016-05-01T10:32:00.000Z\\tNaN\\n\" + \"-66574958665733670985\\n\" + \"8611582118025429627\\tBZ\\tBZ\\t2016-05-01T10:34:00.000Z\\t8152044974329490473\\n\" + \"-8082754367165748693\\tXX\\tAX\\t2016-05-01T10:35:00.000Z\\t3446015290144635451\\n\" + \"6574958665733670985\\\\n\" + \"3446015290144635450.000Z\\tNaN\\n\" + \"8889492928T10:38:00.000Z\\tNaN\\n\" + \"8152044974329490473\\tBZ\\tBZ\\t206071768268784020226\\n\" + \"-6071768268784020226\\tBZ\\tAXZ\\tNaN\\n\"; assertThat(expected, \"select l, str, sym, timestamp , next(l) over (partition by str) from abc\"); assertThat(expected, \"select l, str, sym, timestamp , next(l) over (partition by str) from '*!*abc'\"); }", "n_tokens": 947, "n_pass": [230, 86, 20]}
{"time": "2021-02-24 00:31:24.895440", "score": "0.2554", "loss": "7.4699", "code": "@Test public void testLong() throws Exception { final String expected = \"8920866532787660373\\tBZ\\tBZn\" + \"-694392447773360005911\\n\" + \"-68565032155942058469\\n\" + \"8416773233910814357\\tAX\\tXX\\t2016-05-010655756830\\n\" + \"71999091455202306717\\n\" + \"6270672455202306717\\tAX\\tBZ\\t2016-0123607359392486\\n\" + \"-62392877322819819290\\n\" + \"7392877322819819290\\tBZ\\tKK\\tt-3107239868490395663\\n\" + \"-7316123607359392486\\tAX\\n\" + \"-31072398684903956627\\n\" + \"-7387846268299105911\\tXX\\tKK\\t2016-05-01T10:5748693\\n\" + \"7122109662010:32:00.000Z\\tNaN\\n\" + \"-66574958665733670985\\n\" + \"8611582118025429627\\tBZ\\tBZ\\t2016-05-01T10:34:00.000Z\\t8152044974329490473\\n\" + \"-8082754367165748693\\tXX\\tAX\\t2016-05-01T10:35:00.000Z\\t3446015290144635451\\n\" + \"6574958665733670985\\\\n\" + \"3446015290144635450.000Z\\tNaN\\n\" + \"8889492928T10:38:00.000Z\\tNaN\\n\" + \"8152044974329490473\\tBZ\\tBZ\\t206071768268784020226\\n\" + \"-6071768268784020226\\tBZ\\tAXZ\\tNaN\\n\"; assertThat(expected, \"select l, str, sym, timestamp , next(l) over (partition by str) from abc\"); assertThat(expected, \"select l, str, sym, timestamp , next(l) over (partition by str) from '*!*abc'\"); }", "n_tokens": 922, "n_pass": [232, 88, 21]}
{"time": "2021-02-24 00:31:36.371989", "score": "0.2554", "loss": "7.4699", "code": "@Test public void testLong() throws Exception { final String expected = \"8920866532787660373\\tBZ\\tBZn\" + \"-694392447773360005911\\n\" + \"-68565032155942058469\\n\" + \"8416773233910814357\\tAX\\tXX\\t2016-05-010655756830\\n\" + \"71999091455202306717\\n\" + \"6270672455202306717\\tAX\\tBZ\\t2016-0123607359392486\\n\" + \"-62392877322819819290\\n\" + \"7392877322819819290\\tBZ\\tKK\\tt-3107239868490395663\\n\" + \"-7316123607359392486\\tAX\\n\" + \"-31072398684903956627\\n\" + \"-7387846268299105911\\tXX\\tKK\\t2016-05-01T10:5748693\\n\" + \"7122109662010:32:00.000Z\\tNaN\\n\" + \"-66574958665733670985\\n\" + \"8611582118025429627\\tBZ\\tBZ\\tt8152044974329490473\\n\" + \"-8082754367165748693\\tXX\\tAX\\t2016-05-01T10:35:00.000Z\\t3446015290144635451\\n\" + \"6574958665733670985\\\\n\" + \"3446015290144635450.000Z\\tNaN\\n\" + \"8889492928T10:38:00.000Z\\tNaN\\n\" + \"8152044974329490473\\tBZ\\tBZ\\t206071768268784020226\\n\" + \"-6071768268784020226\\tBZ\\tAXZ\\tNaN\\n\"; assertThat(expected, \"select l, str, sym, timestamp , next(l) over (partition by str) from abc\"); assertThat(expected, \"select l, str, sym, timestamp , next(l) over (partition by str) from '*!*abc'\"); }", "n_tokens": 897, "n_pass": [236, 92, 22]}
{"time": "2021-02-24 00:31:39.236726", "score": "0.2554", "loss": "7.4699", "code": "@Test public void testLong() throws Exception { final String expected = \"8920866532787660373\\tBZ\\tBZn\" + \"-694392447773360005911\\n\" + \"-68565032155942058469\\n\" + \"8416773233910814357\\tAX\\tXX\\t2016-05-010655756830\\n\" + \"71999091455202306717\\n\" + \"6270672455202306717\\tAX\\tBZ\\t2016-0123607359392486\\n\" + \"-62392877322819819290\\n\" + \"7392877322819819290\\tBZ\\tKK\\tt-3107239868490395663\\n\" + \"-7316123607359392486\\tAX\\n\" + \"-31072398684903956627\\n\" + \"-7387846268299105911\\tXX\\tKK\\t2016-05-01T10:5748693\\n\" + \"7122109662010:32:00.000Z\\tNaN\\n\" + \"-66574958665733670985\\n\" + \"8611582118025429627\\tBZ\\tBZ\\tt8152044974329490473\\n\" + \"-8082754367165748693\\tXX\\0Z\\t3446015290144635451\\n\" + \"6574958665733670985\\\\n\" + \"3446015290144635450.000Z\\tNaN\\n\" + \"8889492928T10:38:00.000Z\\tNaN\\n\" + \"8152044974329490473\\tBZ\\tBZ\\t206071768268784020226\\n\" + \"-6071768268784020226\\tBZ\\tAXZ\\tNaN\\n\"; assertThat(expected, \"select l, str, sym, timestamp , next(l) over (partition by str) from abc\"); assertThat(expected, \"select l, str, sym, timestamp , next(l) over (partition by str) from '*!*abc'\"); }", "n_tokens": 872, "n_pass": [239, 93, 23]}
{"time": "2021-02-24 00:31:53.402176", "score": "0.2554", "loss": "7.4699", "code": "@Test public void testLong() throws Exception { final String expected = \"8920866532787660373\\tBZ\\tBZn\" + \"-694392447773360005911\\n\" + \"-68565032155942058469\\n\" + \"8416773233910814357\\tAX\\tXX\\t2016-05-010655756830\\n\" + \"71999091455202306717\\n\" + \"6270672455202306717\\tAX\\tBZ\\t2016-0123607359392486\\n\" + \"-62392877322819819290\\n\" + \"7392877322819819290\\tBZ\\tKK\\tt-3107239868490395663\\n\" + \"-7316123607359392486\\tAX\\n\" + \"-31072398684903956627\\n\" + \"-7387846268299105911\\tXX\\tKK\\t2016-05-01T10:5748693\\n\" + \"7122109662010:32:00.000Z\\tNaN\\n\" + \"-66574958665733670985\\n\" + \"8611582118025429627\\tBZ\\tBZ\\tt8152044974329490473\\n\" + \"-8082754367165748693\\tXX\\0Z\\t3446015290144635451\\n\" + \"6574958665733670985\\\\n\" + \"3446015290144635450.000Z\\tNaN\\n\" + \"8889492928T10:38:00.000Z\\tNaN\\n\" + \"816071768268784020226\\n\" + \"-6071768268784020226\\tBZ\\tAXZ\\tNaN\\n\"; assertThat(expected, \"select l, str, sym, timestamp , next(l) over (partition by str) from abc\"); assertThat(expected, \"select l, str, sym, timestamp , next(l) over (partition by str) from '*!*abc'\"); }", "n_tokens": 847, "n_pass": [245, 98, 24]}
{"time": "2021-02-24 00:31:59.189957", "score": "0.2219", "loss": "7.5114", "code": "@Test public void testLong() throws Exception { final String expected = \"8920866532787660373\\tBZ\\tBZn\" + \"-694392447773360042058469\\n\" + \"8416773233910814357\\tAX\\tXX\\t2016-05-010655756830\\n\" + \"71999091455202306717\\n\" + \"6270672455202306717\\tAX\\tBZ\\t2016-0123607359392486\\n\" + \"-62392877322819819290\\n\" + \"7392877322819819290\\tBZ\\tKK\\tt-3107239868490395663\\n\" + \"-7316123607359392486\\tAX\\n\" + \"-31072398684903956627\\n\" + \"-7387846268299105911\\tXX\\tKK\\t2016-05-01T10:5748693\\n\" + \"7122109662010:32:00.000Z\\tNaN\\n\" + \"-66574958665733670985\\n\" + \"8611582118025429627\\tBZ\\tBZ\\tt8152044974329490473\\n\" + \"-8082754367165748693\\tXX\\0Z\\t3446015290144635451\\n\" + \"6574958665733670985\\\\n\" + \"3446015290144635450.000Z\\tNaN\\n\" + \"8889492928T10:38:00.000Z\\tNaN\\n\" + \"816071768268784020226\\n\" + \"-6071768268784020226\\tBZ\\tAXZ\\tNaN\\n\"; assertThat(expected, \"select l, str, sym, timestamp , next(l) over (partition by str) from abc\"); assertThat(expected, \"select l, str, sym, timestamp , next(l) over (partition by str) from '*!*abc'\"); }", "n_tokens": 822, "n_pass": [255, 100, 25]}
{"time": "2021-02-24 00:32:04.971968", "score": "0.2219", "loss": "7.5114", "code": "@Test public void testLong() throws Exception { final String expected = \"8920866532787660373\\tBZ\\tBZn\" + \"-694392447773360042058469\\n\" + \"84167732330655756830\\n\" + \"71999091455202306717\\n\" + \"6270672455202306717\\tAX\\tBZ\\t2016-0123607359392486\\n\" + \"-62392877322819819290\\n\" + \"7392877322819819290\\tBZ\\tKK\\tt-3107239868490395663\\n\" + \"-7316123607359392486\\tAX\\n\" + \"-31072398684903956627\\n\" + \"-7387846268299105911\\tXX\\tKK\\t2016-05-01T10:5748693\\n\" + \"7122109662010:32:00.000Z\\tNaN\\n\" + \"-66574958665733670985\\n\" + \"8611582118025429627\\tBZ\\tBZ\\tt8152044974329490473\\n\" + \"-8082754367165748693\\tXX\\0Z\\t3446015290144635451\\n\" + \"6574958665733670985\\\\n\" + \"3446015290144635450.000Z\\tNaN\\n\" + \"8889492928T10:38:00.000Z\\tNaN\\n\" + \"816071768268784020226\\n\" + \"-6071768268784020226\\tBZ\\tAXZ\\tNaN\\n\"; assertThat(expected, \"select l, str, sym, timestamp , next(l) over (partition by str) from abc\"); assertThat(expected, \"select l, str, sym, timestamp , next(l) over (partition by str) from '*!*abc'\"); }", "n_tokens": 797, "n_pass": [257, 102, 26]}
{"time": "2021-02-24 00:32:13.394019", "score": "0.2219", "loss": "7.5114", "code": "@Test public void testLong() throws Exception { final String expected = \"8920866532787660373\\tBZ\\tBZn\" + \"-694392447773360042058469\\n\" + \"84167732330655756830\\n\" + \"71999091455202306717\\n\" + \"627067123607359392486\\n\" + \"-62392877322819819290\\n\" + \"7392877322819819290\\tBZ\\tKK\\tt-3107239868490395663\\n\" + \"-7316123607359392486\\tAX\\n\" + \"-31072398684903956627\\n\" + \"-7387846268299105911\\tXX\\tKK\\t2016-05-01T10:5748693\\n\" + \"7122109662010:32:00.000Z\\tNaN\\n\" + \"-66574958665733670985\\n\" + \"8611582118025429627\\tBZ\\tBZ\\tt8152044974329490473\\n\" + \"-8082754367165748693\\tXX\\0Z\\t3446015290144635451\\n\" + \"6574958665733670985\\\\n\" + \"3446015290144635450.000Z\\tNaN\\n\" + \"8889492928T10:38:00.000Z\\tNaN\\n\" + \"816071768268784020226\\n\" + \"-6071768268784020226\\tBZ\\tAXZ\\tNaN\\n\"; assertThat(expected, \"select l, str, sym, timestamp , next(l) over (partition by str) from abc\"); assertThat(expected, \"select l, str, sym, timestamp , next(l) over (partition by str) from '*!*abc'\"); }", "n_tokens": 772, "n_pass": [260, 105, 27]}
{"time": "2021-02-24 00:32:30.563528", "score": "0.2219", "loss": "7.5114", "code": "@Test public void testLong() throws Exception { final String expected = \"8920866532787660373\\tBZ\\tBZn\" + \"-694392447773360042058469\\n\" + \"84167732330655756830\\n\" + \"71999091455202306717\\n\" + \"627067123607359392486\\n\" + \"-62392877322819819290\\n\" + \"7392877322819819290\\tBZ\\tKK\\tt-3107239868490395663\\n\" + \"-7316123607359392486\\tAX\\n\" + \"-31072398684903956627\\n\" + \"-738784626829915748693\\n\" + \"7122109662010:32:00.000Z\\tNaN\\n\" + \"-66574958665733670985\\n\" + \"8611582118025429627\\tBZ\\tBZ\\tt8152044974329490473\\n\" + \"-8082754367165748693\\tXX\\0Z\\t3446015290144635451\\n\" + \"6574958665733670985\\\\n\" + \"3446015290144635450.000Z\\tNaN\\n\" + \"8889492928T10:38:00.000Z\\tNaN\\n\" + \"816071768268784020226\\n\" + \"-6071768268784020226\\tBZ\\tAXZ\\tNaN\\n\"; assertThat(expected, \"select l, str, sym, timestamp , next(l) over (partition by str) from abc\"); assertThat(expected, \"select l, str, sym, timestamp , next(l) over (partition by str) from '*!*abc'\"); }", "n_tokens": 747, "n_pass": [268, 111, 28]}
{"time": "2021-02-24 00:33:21.018008", "score": "0.2219", "loss": "7.5114", "code": "@Test public void testLong() throws Exception { final String expected = \"8920866532787660373\\tBZ\\tBZn\" + \"-694392447773360042058469\\n\" + \"84167732330655756830\\n\" + \"71999091455202306717\\n\" + \"627067123607359392486\\n\" + \"-62392877322819819290\\n\" + \"7392877322819819290\\tBZ\\tKK\\tt-3107239868490395663\\n\" + \"-7316123607359392486\\tAX\\n\" + \"-31072398684903956627\\n\" + \"-738748693\\n\" + \"7122109662010:32:00.000Z\\tNaN\\n\" + \"-66574958665733670985\\n\" + \"8611582118025429627\\tBZ\\tBZ\\tt8152044974329490473\\n\" + \"-8082754367165748693\\tXX\\0Z\\t3446015290144635451\\n\" + \"6574958665733670985\\\\n\" + \"3446015290144635450.000Z\\tNaN\\n\" + \"8889492928T10:38:00.000Z\\tNaN\\n\" + \"816071768268784020226\\n\" + \"-6071768268784020226\\tBZ\\tAXZ\\tNaN\\n\"; assertThat(expected, \"select l, str, sym, timestamp , next(l) over (partition by str) from abc\"); assertThat(expected, \"select l, str, sym, timestamp , next(l) over (partition by str) from '*!*abc'\"); }", "n_tokens": 735, "n_pass": [359, 129, 29]}
{"time": "2021-02-24 00:33:26.597222", "score": "0.2219", "loss": "7.5114", "code": "@Test public void testLong() throws Exception { final String expected = \"8920866532787660373\\tBZ\\tBZn\" + \"-694392447773360042058469\\n\" + \"84167732330655756830\\n\" + \"71999091455202306717\\n\" + \"627067123607359392486\\n\" + \"-62392877322819819290\\n\" + \"7392877322819819290\\tBZ\\tKK\\tt-3107239868490395663\\n\" + \"-7316123607359392486\\tAX\\n\" + \"-31072398684903956627\\n\" + \"-738748693\\n\" + \"0:32:00.000Z\\tNaN\\n\" + \"-66574958665733670985\\n\" + \"8611582118025429627\\tBZ\\tBZ\\tt8152044974329490473\\n\" + \"-8082754367165748693\\tXX\\0Z\\t3446015290144635451\\n\" + \"6574958665733670985\\\\n\" + \"3446015290144635450.000Z\\tNaN\\n\" + \"8889492928T10:38:00.000Z\\tNaN\\n\" + \"816071768268784020226\\n\" + \"-6071768268784020226\\tBZ\\tAXZ\\tNaN\\n\"; assertThat(expected, \"select l, str, sym, timestamp , next(l) over (partition by str) from abc\"); assertThat(expected, \"select l, str, sym, timestamp , next(l) over (partition by str) from '*!*abc'\"); }", "n_tokens": 723, "n_pass": [361, 131, 30]}
{"time": "2021-02-24 00:33:30.058500", "score": "0.2219", "loss": "7.5114", "code": "@Test public void testLong() throws Exception { final String expected = \"8920866532787660373\\tBZ\\tBZn\" + \"-694392447773360042058469\\n\" + \"84167732330655756830\\n\" + \"71999091455202306717\\n\" + \"627067123607359392486\\n\" + \"-62392877322819819290\\n\" + \"7392877322819819290\\tBZ\\tKK\\tt-3107239868490395663\\n\" + \"-7316123607359392486\\tAX\\n\" + \"-31072398684903956627\\n\" + \"-738748693\\n\" + \"\\tNaN\\n\" + \"-66574958665733670985\\n\" + \"8611582118025429627\\tBZ\\tBZ\\tt8152044974329490473\\n\" + \"-8082754367165748693\\tXX\\0Z\\t3446015290144635451\\n\" + \"6574958665733670985\\\\n\" + \"3446015290144635450.000Z\\tNaN\\n\" + \"8889492928T10:38:00.000Z\\tNaN\\n\" + \"816071768268784020226\\n\" + \"-6071768268784020226\\tBZ\\tAXZ\\tNaN\\n\"; assertThat(expected, \"select l, str, sym, timestamp , next(l) over (partition by str) from abc\"); assertThat(expected, \"select l, str, sym, timestamp , next(l) over (partition by str) from '*!*abc'\"); }", "n_tokens": 711, "n_pass": [362, 132, 31]}
{"time": "2021-02-24 00:33:35.599368", "score": "0.2219", "loss": "7.5114", "code": "@Test public void testLong() throws Exception { final String expected = \"8920866532787660373\\tBZ\\tBZn\" + \"-694392447773360042058469\\n\" + \"84167732330655756830\\n\" + \"71999091455202306717\\n\" + \"627067123607359392486\\n\" + \"-62392877322819819290\\n\" + \"7392877322819819290\\tBZ\\tKK\\tt-3107239868490395663\\n\" + \"-7316123607359392486\\tAX\\n\" + \"-31072398684903956627\\n\" + \"-738748693\\n\" + \"\\tNaN\\n\" + \"-66670985\\n\" + \"8611582118025429627\\tBZ\\tBZ\\tt8152044974329490473\\n\" + \"-8082754367165748693\\tXX\\0Z\\t3446015290144635451\\n\" + \"6574958665733670985\\\\n\" + \"3446015290144635450.000Z\\tNaN\\n\" + \"8889492928T10:38:00.000Z\\tNaN\\n\" + \"816071768268784020226\\n\" + \"-6071768268784020226\\tBZ\\tAXZ\\tNaN\\n\"; assertThat(expected, \"select l, str, sym, timestamp , next(l) over (partition by str) from abc\"); assertThat(expected, \"select l, str, sym, timestamp , next(l) over (partition by str) from '*!*abc'\"); }", "n_tokens": 699, "n_pass": [364, 134, 32]}
{"time": "2021-02-24 00:33:41.193799", "score": "0.2219", "loss": "7.5114", "code": "@Test public void testLong() throws Exception { final String expected = \"8920866532787660373\\tBZ\\tBZn\" + \"-694392447773360042058469\\n\" + \"84167732330655756830\\n\" + \"71999091455202306717\\n\" + \"627067123607359392486\\n\" + \"-62392877322819819290\\n\" + \"7392877322819819290\\tBZ\\tKK\\tt-3107239868490395663\\n\" + \"-7316123607359392486\\tAX\\n\" + \"-31072398684903956627\\n\" + \"-738748693\\n\" + \"\\tNaN\\n\" + \"-66670985\\n\" + \"8611582118025429627\\tBZ\\tBZ\\t9490473\\n\" + \"-8082754367165748693\\tXX\\0Z\\t3446015290144635451\\n\" + \"6574958665733670985\\\\n\" + \"3446015290144635450.000Z\\tNaN\\n\" + \"8889492928T10:38:00.000Z\\tNaN\\n\" + \"816071768268784020226\\n\" + \"-6071768268784020226\\tBZ\\tAXZ\\tNaN\\n\"; assertThat(expected, \"select l, str, sym, timestamp , next(l) over (partition by str) from abc\"); assertThat(expected, \"select l, str, sym, timestamp , next(l) over (partition by str) from '*!*abc'\"); }", "n_tokens": 686, "n_pass": [368, 136, 33]}
{"time": "2021-02-24 00:33:46.767145", "score": "0.2219", "loss": "7.5114", "code": "@Test public void testLong() throws Exception { final String expected = \"8920866532787660373\\tBZ\\tBZn\" + \"-694392447773360042058469\\n\" + \"84167732330655756830\\n\" + \"71999091455202306717\\n\" + \"627067123607359392486\\n\" + \"-62392877322819819290\\n\" + \"7392877322819819290\\tBZ\\tKK\\tt-3107239868490395663\\n\" + \"-7316123607359392486\\tAX\\n\" + \"-31072398684903956627\\n\" + \"-738748693\\n\" + \"\\tNaN\\n\" + \"-66670985\\n\" + \"8611582118025429627\\tBZ\\tBZ\\t9490473\\n\" + \"-8082754367165748693\\tXX\\0Z44635451\\n\" + \"6574958665733670985\\\\n\" + \"3446015290144635450.000Z\\tNaN\\n\" + \"8889492928T10:38:00.000Z\\tNaN\\n\" + \"816071768268784020226\\n\" + \"-6071768268784020226\\tBZ\\tAXZ\\tNaN\\n\"; assertThat(expected, \"select l, str, sym, timestamp , next(l) over (partition by str) from abc\"); assertThat(expected, \"select l, str, sym, timestamp , next(l) over (partition by str) from '*!*abc'\"); }", "n_tokens": 673, "n_pass": [372, 138, 34]}
{"time": "2021-02-24 00:33:49.588430", "score": "0.2219", "loss": "7.5114", "code": "@Test public void testLong() throws Exception { final String expected = \"8920866532787660373\\tBZ\\tBZn\" + \"-694392447773360042058469\\n\" + \"84167732330655756830\\n\" + \"71999091455202306717\\n\" + \"627067123607359392486\\n\" + \"-62392877322819819290\\n\" + \"7392877322819819290\\tBZ\\tKK\\tt-3107239868490395663\\n\" + \"-7316123607359392486\\tAX\\n\" + \"-31072398684903956627\\n\" + \"-738748693\\n\" + \"\\tNaN\\n\" + \"-66670985\\n\" + \"8611582118025429627\\tBZ\\tBZ\\t9490473\\n\" + \"-8082754367165748693\\tXX\\0Z44635451\\n\" + \"6574958665733670985\\\\n\" + \"3446015290Z\\tNaN\\n\" + \"8889492928T10:38:00.000Z\\tNaN\\n\" + \"816071768268784020226\\n\" + \"-6071768268784020226\\tBZ\\tAXZ\\tNaN\\n\"; assertThat(expected, \"select l, str, sym, timestamp , next(l) over (partition by str) from abc\"); assertThat(expected, \"select l, str, sym, timestamp , next(l) over (partition by str) from '*!*abc'\"); }", "n_tokens": 660, "n_pass": [377, 139, 35]}
{"time": "2021-02-24 00:33:55.223583", "score": "0.2219", "loss": "7.5114", "code": "@Test public void testLong() throws Exception { final String expected = \"8920866532787660373\\tBZ\\tBZn\" + \"-694392447773360042058469\\n\" + \"84167732330655756830\\n\" + \"71999091455202306717\\n\" + \"627067123607359392486\\n\" + \"-62392877322819819290\\n\" + \"7392877322819819290\\tBZ\\tKK\\tt-3107239868490395663\\n\" + \"-7316123607359392486\\tAX\\n\" + \"-31072398684903956627\\n\" + \"-738748693\\n\" + \"\\tNaN\\n\" + \"-66670985\\n\" + \"8611582118025429627\\tBZ\\tBZ\\t9490473\\n\" + \"-8082754367165748693\\tXX\\0Z44635451\\n\" + \"6574958665733670985\\\\n\" + \"3446015290Z\\tNaN\\n\" + \"888:00.000Z\\tNaN\\n\" + \"816071768268784020226\\n\" + \"-6071768268784020226\\tBZ\\tAXZ\\tNaN\\n\"; assertThat(expected, \"select l, str, sym, timestamp , next(l) over (partition by str) from abc\"); assertThat(expected, \"select l, str, sym, timestamp , next(l) over (partition by str) from '*!*abc'\"); }", "n_tokens": 647, "n_pass": [379, 141, 36]}
{"time": "2021-02-24 00:34:00.819952", "score": "0.2219", "loss": "7.5114", "code": "@Test public void testLong() throws Exception { final String expected = \"8920866532787660373\\tBZ\\tBZn\" + \"-694392447773360042058469\\n\" + \"84167732330655756830\\n\" + \"71999091455202306717\\n\" + \"627067123607359392486\\n\" + \"-62392877322819819290\\n\" + \"7392877322819819290\\tBZ\\tKK\\tt-3107239868490395663\\n\" + \"-7316123607359392486\\tAX\\n\" + \"-31072398684903956627\\n\" + \"-738748693\\n\" + \"\\tNaN\\n\" + \"-66670985\\n\" + \"8611582118025429627\\tBZ\\tBZ\\t9490473\\n\" + \"-8082754367165748693\\tXX\\0Z44635451\\n\" + \"6574958665733670985\\\\n\" + \"3446015290Z\\tNaN\\n\" + \"888:00.000Z\\tNaN\\n\" + \"816071768268784020226\\n\" + \"-607176\\tBZ\\tAXZ\\tNaN\\n\"; assertThat(expected, \"select l, str, sym, timestamp , next(l) over (partition by str) from abc\"); assertThat(expected, \"select l, str, sym, timestamp , next(l) over (partition by str) from '*!*abc'\"); }", "n_tokens": 634, "n_pass": [384, 143, 37]}
{"time": "2021-02-24 00:34:03.638044", "score": "0.2219", "loss": "7.5114", "code": "@Test public void testLong() throws Exception { final String expected = \"8920866532787660373\\tBZ\\tBZn\" + \"-694392447773360042058469\\n\" + \"84167732330655756830\\n\" + \"71999091455202306717\\n\" + \"627067123607359392486\\n\" + \"-62392877322819819290\\n\" + \"7392877322819819290\\tBZ\\tKK\\tt-3107239868490395663\\n\" + \"-7316123607359392486\\tAX\\n\" + \"-31072398684903956627\\n\" + \"-738748693\\n\" + \"\\tNaN\\n\" + \"-66670985\\n\" + \"8611582118025429627\\tBZ\\tBZ\\t9490473\\n\" + \"-8082754367165748693\\tXX\\0Z44635451\\n\" + \"6574958665733670985\\\\n\" + \"3446015290Z\\tNaN\\n\" + \"888:00.000Z\\tNaN\\n\" + \"816071768268784020226\\n\" + \"-607176\\tBZ\\tAXZ\\tNaN\\n\"; assertThat(expected, \"select l, str,  (partition by str) from abc\"); assertThat(expected, \"select l, str, sym, timestamp , next(l) over (partition by str) from '*!*abc'\"); }", "n_tokens": 621, "n_pass": [387, 144, 38]}
{"time": "2021-02-24 00:34:06.483010", "score": "0.2219", "loss": "7.5114", "code": "@Test public void testLong() throws Exception { final String expected = \"8920866532787660373\\tBZ\\tBZn\" + \"-694392447773360042058469\\n\" + \"84167732330655756830\\n\" + \"71999091455202306717\\n\" + \"627067123607359392486\\n\" + \"-62392877322819819290\\n\" + \"7392877322819819290\\tBZ\\tKK\\tt-3107239868490395663\\n\" + \"-7316123607359392486\\tAX\\n\" + \"-31072398684903956627\\n\" + \"-738748693\\n\" + \"\\tNaN\\n\" + \"-66670985\\n\" + \"8611582118025429627\\tBZ\\tBZ\\t9490473\\n\" + \"-8082754367165748693\\tXX\\0Z44635451\\n\" + \"6574958665733670985\\\\n\" + \"3446015290Z\\tNaN\\n\" + \"888:00.000Z\\tNaN\\n\" + \"816071768268784020226\\n\" + \"-607176\\tBZ\\tAXZ\\tNaN\\n\"; assertThat(expected, \"select l, str,  (partition by str) from abc\"); assertThat(expected, \"select l,l) over (partition by str) from '*!*abc'\"); }", "n_tokens": 608, "n_pass": [390, 145, 39]}
{"time": "2021-02-24 00:34:09.730662", "score": "0.2219", "loss": "7.5114", "code": "@Test public void testLong() throws Exception { final String expected = \"8920866532787660373\\tBZ\\tBZn\" + \"-694392447773360042058469\\n\" + \"84167732330655756830\\n\" + \"71999091455202306717\\n\" + \"627067123607359392486\\n\" + \"-62392877322819819290\\n\" + \"7392877322819819290\\tBZ\\tKK\\tt-3107239868490395663\\n\" + \"-7316123607359392486\\tAX\\n\" + \"-31072398684903956627\\n\" + \"-738748693\\n\" + \"\\tNaN\\n\" + \"-66670985\\n\" + \"8611582118025429627\\tBZ\\tBZ\\t9490473\\n\" + \"-8082754367165748693\\tXX\\0Z44635451\\n\" + \"6574958665733670985\\\\n\" + \"3446015290Z\\tNaN\\n\" + \"888:00.000Z\\tNaN\\n\" + \"816071768268784020226\\n\" + \"-607176\\tBZ\\tAXZ\\tNaN\\n\"; assertThat(expected, \"select l, str,  (partition by str) from abc\"); assertThat(expected, \"select l,from '*!*abc'\"); }", "n_tokens": 595, "n_pass": [391, 146, 40]}
{"time": "2021-02-24 00:34:12.517466", "score": "0.2219", "loss": "7.5114", "code": "@Test public void testLong() throws Exception { final String expected = \"8920866532tBZn\" + \"-694392447773360042058469\\n\" + \"84167732330655756830\\n\" + \"71999091455202306717\\n\" + \"627067123607359392486\\n\" + \"-62392877322819819290\\n\" + \"7392877322819819290\\tBZ\\tKK\\tt-3107239868490395663\\n\" + \"-7316123607359392486\\tAX\\n\" + \"-31072398684903956627\\n\" + \"-738748693\\n\" + \"\\tNaN\\n\" + \"-66670985\\n\" + \"8611582118025429627\\tBZ\\tBZ\\t9490473\\n\" + \"-8082754367165748693\\tXX\\0Z44635451\\n\" + \"6574958665733670985\\\\n\" + \"3446015290Z\\tNaN\\n\" + \"888:00.000Z\\tNaN\\n\" + \"816071768268784020226\\n\" + \"-607176\\tBZ\\tAXZ\\tNaN\\n\"; assertThat(expected, \"select l, str,  (partition by str) from abc\"); assertThat(expected, \"select l,from '*!*abc'\"); }", "n_tokens": 583, "n_pass": [396, 147, 41]}
{"time": "2021-02-24 00:34:18.096944", "score": "0.2219", "loss": "7.5114", "code": "@Test public void testLong() throws Exception { final String expected = \"8920866532tBZn\" + \"-694342058469\\n\" + \"84167732330655756830\\n\" + \"71999091455202306717\\n\" + \"627067123607359392486\\n\" + \"-62392877322819819290\\n\" + \"7392877322819819290\\tBZ\\tKK\\tt-3107239868490395663\\n\" + \"-7316123607359392486\\tAX\\n\" + \"-31072398684903956627\\n\" + \"-738748693\\n\" + \"\\tNaN\\n\" + \"-66670985\\n\" + \"8611582118025429627\\tBZ\\tBZ\\t9490473\\n\" + \"-8082754367165748693\\tXX\\0Z44635451\\n\" + \"6574958665733670985\\\\n\" + \"3446015290Z\\tNaN\\n\" + \"888:00.000Z\\tNaN\\n\" + \"816071768268784020226\\n\" + \"-607176\\tBZ\\tAXZ\\tNaN\\n\"; assertThat(expected, \"select l, str,  (partition by str) from abc\"); assertThat(expected, \"select l,from '*!*abc'\"); }", "n_tokens": 571, "n_pass": [398, 149, 42]}
{"time": "2021-02-24 00:34:20.890721", "score": "0.215", "loss": "7.4535", "code": "@Test public void testLong() throws Exception { final String expected = \"8920866532tBZn\" + \"-694342058469\\n\" + \"841677323n\" + \"71999091455202306717\\n\" + \"627067123607359392486\\n\" + \"-62392877322819819290\\n\" + \"7392877322819819290\\tBZ\\tKK\\tt-3107239868490395663\\n\" + \"-7316123607359392486\\tAX\\n\" + \"-31072398684903956627\\n\" + \"-738748693\\n\" + \"\\tNaN\\n\" + \"-66670985\\n\" + \"8611582118025429627\\tBZ\\tBZ\\t9490473\\n\" + \"-8082754367165748693\\tXX\\0Z44635451\\n\" + \"6574958665733670985\\\\n\" + \"3446015290Z\\tNaN\\n\" + \"888:00.000Z\\tNaN\\n\" + \"816071768268784020226\\n\" + \"-607176\\tBZ\\tAXZ\\tNaN\\n\"; assertThat(expected, \"select l, str,  (partition by str) from abc\"); assertThat(expected, \"select l,from '*!*abc'\"); }", "n_tokens": 559, "n_pass": [401, 150, 43]}
{"time": "2021-02-24 00:34:26.456028", "score": "0.215", "loss": "7.4535", "code": "@Test public void testLong() throws Exception { final String expected = \"8920866532tBZn\" + \"-694342058469\\n\" + \"841677323n\" + \"71999017\\n\" + \"627067123607359392486\\n\" + \"-62392877322819819290\\n\" + \"7392877322819819290\\tBZ\\tKK\\tt-3107239868490395663\\n\" + \"-7316123607359392486\\tAX\\n\" + \"-31072398684903956627\\n\" + \"-738748693\\n\" + \"\\tNaN\\n\" + \"-66670985\\n\" + \"8611582118025429627\\tBZ\\tBZ\\t9490473\\n\" + \"-8082754367165748693\\tXX\\0Z44635451\\n\" + \"6574958665733670985\\\\n\" + \"3446015290Z\\tNaN\\n\" + \"888:00.000Z\\tNaN\\n\" + \"816071768268784020226\\n\" + \"-607176\\tBZ\\tAXZ\\tNaN\\n\"; assertThat(expected, \"select l, str,  (partition by str) from abc\"); assertThat(expected, \"select l,from '*!*abc'\"); }", "n_tokens": 547, "n_pass": [403, 152, 44]}
{"time": "2021-02-24 00:34:29.238748", "score": "0.238", "loss": "7.2508", "code": "@Test public void testLong() throws Exception { final String expected = \"8920866532tBZn\" + \"-694342058469\\n\" + \"841677323n\" + \"719990067123607359392486\\n\" + \"-62392877322819819290\\n\" + \"7392877322819819290\\tBZ\\tKK\\tt-3107239868490395663\\n\" + \"-7316123607359392486\\tAX\\n\" + \"-31072398684903956627\\n\" + \"-738748693\\n\" + \"\\tNaN\\n\" + \"-66670985\\n\" + \"8611582118025429627\\tBZ\\tBZ\\t9490473\\n\" + \"-8082754367165748693\\tXX\\0Z44635451\\n\" + \"6574958665733670985\\\\n\" + \"3446015290Z\\tNaN\\n\" + \"888:00.000Z\\tNaN\\n\" + \"816071768268784020226\\n\" + \"-607176\\tBZ\\tAXZ\\tNaN\\n\"; assertThat(expected, \"select l, str,  (partition by str) from abc\"); assertThat(expected, \"select l,from '*!*abc'\"); }", "n_tokens": 535, "n_pass": [404, 153, 45]}
{"time": "2021-02-24 00:34:32.054529", "score": "0.238", "loss": "7.2508", "code": "@Test public void testLong() throws Exception { final String expected = \"8920866532tBZn\" + \"-694342058469\\n\" + \"841677323n\" + \"719990392486\\n\" + \"-62392877322819819290\\n\" + \"7392877322819819290\\tBZ\\tKK\\tt-3107239868490395663\\n\" + \"-7316123607359392486\\tAX\\n\" + \"-31072398684903956627\\n\" + \"-738748693\\n\" + \"\\tNaN\\n\" + \"-66670985\\n\" + \"8611582118025429627\\tBZ\\tBZ\\t9490473\\n\" + \"-8082754367165748693\\tXX\\0Z44635451\\n\" + \"6574958665733670985\\\\n\" + \"3446015290Z\\tNaN\\n\" + \"888:00.000Z\\tNaN\\n\" + \"816071768268784020226\\n\" + \"-607176\\tBZ\\tAXZ\\tNaN\\n\"; assertThat(expected, \"select l, str,  (partition by str) from abc\"); assertThat(expected, \"select l,from '*!*abc'\"); }", "n_tokens": 523, "n_pass": [405, 154, 46]}
{"time": "2021-02-24 00:34:34.843071", "score": "0.238", "loss": "7.2508", "code": "@Test public void testLong() throws Exception { final String expected = \"8920866532tBZn\" + \"-694342058469\\n\" + \"841677323n\" + \"719990392486\\n\" + \"-6239287732\" + \"7392877322819819290\\tBZ\\tKK\\tt-3107239868490395663\\n\" + \"-7316123607359392486\\tAX\\n\" + \"-31072398684903956627\\n\" + \"-738748693\\n\" + \"\\tNaN\\n\" + \"-66670985\\n\" + \"8611582118025429627\\tBZ\\tBZ\\t9490473\\n\" + \"-8082754367165748693\\tXX\\0Z44635451\\n\" + \"6574958665733670985\\\\n\" + \"3446015290Z\\tNaN\\n\" + \"888:00.000Z\\tNaN\\n\" + \"816071768268784020226\\n\" + \"-607176\\tBZ\\tAXZ\\tNaN\\n\"; assertThat(expected, \"select l, str,  (partition by str) from abc\"); assertThat(expected, \"select l,from '*!*abc'\"); }", "n_tokens": 511, "n_pass": [408, 155, 47]}
{"time": "2021-02-24 00:34:37.623442", "score": "0.2251", "loss": "7.2031", "code": "@Test public void testLong() throws Exception { final String expected = \"8920866532tBZn\" + \"-694342058469\\n\" + \"841677323n\" + \"719990392486\\n\" + \"-6239287732322819819290\\tBZ\\tKK\\tt-3107239868490395663\\n\" + \"-7316123607359392486\\tAX\\n\" + \"-31072398684903956627\\n\" + \"-738748693\\n\" + \"\\tNaN\\n\" + \"-66670985\\n\" + \"8611582118025429627\\tBZ\\tBZ\\t9490473\\n\" + \"-8082754367165748693\\tXX\\0Z44635451\\n\" + \"6574958665733670985\\\\n\" + \"3446015290Z\\tNaN\\n\" + \"888:00.000Z\\tNaN\\n\" + \"816071768268784020226\\n\" + \"-607176\\tBZ\\tAXZ\\tNaN\\n\"; assertThat(expected, \"select l, str,  (partition by str) from abc\"); assertThat(expected, \"select l,from '*!*abc'\"); }", "n_tokens": 499, "n_pass": [409, 156, 48]}
{"time": "2021-02-24 00:34:40.411854", "score": "0.2251", "loss": "7.2031", "code": "@Test public void testLong() throws Exception { final String expected = \"8920866532tBZn\" + \"-694342058469\\n\" + \"841677323n\" + \"719990392486\\n\" + \"-6239287732\\tBZ\\tKK\\tt-3107239868490395663\\n\" + \"-7316123607359392486\\tAX\\n\" + \"-31072398684903956627\\n\" + \"-738748693\\n\" + \"\\tNaN\\n\" + \"-66670985\\n\" + \"8611582118025429627\\tBZ\\tBZ\\t9490473\\n\" + \"-8082754367165748693\\tXX\\0Z44635451\\n\" + \"6574958665733670985\\\\n\" + \"3446015290Z\\tNaN\\n\" + \"888:00.000Z\\tNaN\\n\" + \"816071768268784020226\\n\" + \"-607176\\tBZ\\tAXZ\\tNaN\\n\"; assertThat(expected, \"select l, str,  (partition by str) from abc\"); assertThat(expected, \"select l,from '*!*abc'\"); }", "n_tokens": 487, "n_pass": [410, 157, 49]}
{"time": "2021-02-24 00:34:43.188141", "score": "0.2251", "loss": "7.2031", "code": "@Test public void testLong() throws Exception { final String expected = \"8920866532tBZn\" + \"-694342058469\\n\" + \"841677323n\" + \"719990392486\\n\" + \"-6239287732239868490395663\\n\" + \"-7316123607359392486\\tAX\\n\" + \"-31072398684903956627\\n\" + \"-738748693\\n\" + \"\\tNaN\\n\" + \"-66670985\\n\" + \"8611582118025429627\\tBZ\\tBZ\\t9490473\\n\" + \"-8082754367165748693\\tXX\\0Z44635451\\n\" + \"6574958665733670985\\\\n\" + \"3446015290Z\\tNaN\\n\" + \"888:00.000Z\\tNaN\\n\" + \"816071768268784020226\\n\" + \"-607176\\tBZ\\tAXZ\\tNaN\\n\"; assertThat(expected, \"select l, str,  (partition by str) from abc\"); assertThat(expected, \"select l,from '*!*abc'\"); }", "n_tokens": 475, "n_pass": [411, 158, 50]}
{"time": "2021-02-24 00:34:46.001283", "score": "0.2251", "loss": "7.2031", "code": "@Test public void testLong() throws Exception { final String expected = \"8920866532tBZn\" + \"-694342058469\\n\" + \"841677323n\" + \"719990392486\\n\" + \"-6239287732663\\n\" + \"-7316123607359392486\\tAX\\n\" + \"-31072398684903956627\\n\" + \"-738748693\\n\" + \"\\tNaN\\n\" + \"-66670985\\n\" + \"8611582118025429627\\tBZ\\tBZ\\t9490473\\n\" + \"-8082754367165748693\\tXX\\0Z44635451\\n\" + \"6574958665733670985\\\\n\" + \"3446015290Z\\tNaN\\n\" + \"888:00.000Z\\tNaN\\n\" + \"816071768268784020226\\n\" + \"-607176\\tBZ\\tAXZ\\tNaN\\n\"; assertThat(expected, \"select l, str,  (partition by str) from abc\"); assertThat(expected, \"select l,from '*!*abc'\"); }", "n_tokens": 463, "n_pass": [412, 159, 51]}
{"time": "2021-02-24 00:34:51.579344", "score": "0.2251", "loss": "7.2031", "code": "@Test public void testLong() throws Exception { final String expected = \"8920866532tBZn\" + \"-694342058469\\n\" + \"841677323n\" + \"719990392486\\n\" + \"-6239287732663\\n\" + \"-7392486\\tAX\\n\" + \"-31072398684903956627\\n\" + \"-738748693\\n\" + \"\\tNaN\\n\" + \"-66670985\\n\" + \"8611582118025429627\\tBZ\\tBZ\\t9490473\\n\" + \"-8082754367165748693\\tXX\\0Z44635451\\n\" + \"6574958665733670985\\\\n\" + \"3446015290Z\\tNaN\\n\" + \"888:00.000Z\\tNaN\\n\" + \"816071768268784020226\\n\" + \"-607176\\tBZ\\tAXZ\\tNaN\\n\"; assertThat(expected, \"select l, str,  (partition by str) from abc\"); assertThat(expected, \"select l,from '*!*abc'\"); }", "n_tokens": 451, "n_pass": [414, 161, 52]}
{"time": "2021-02-24 00:34:54.386742", "score": "0.2251", "loss": "7.2031", "code": "@Test public void testLong() throws Exception { final String expected = \"8920866532tBZn\" + \"-694342058469\\n\" + \"841677323n\" + \"719990392486\\n\" + \"-6239287732663\\n\" + \"-7392486\\tAX\\n\" + \"-31072398\\n\" + \"-738748693\\n\" + \"\\tNaN\\n\" + \"-66670985\\n\" + \"8611582118025429627\\tBZ\\tBZ\\t9490473\\n\" + \"-8082754367165748693\\tXX\\0Z44635451\\n\" + \"6574958665733670985\\\\n\" + \"3446015290Z\\tNaN\\n\" + \"888:00.000Z\\tNaN\\n\" + \"816071768268784020226\\n\" + \"-607176\\tBZ\\tAXZ\\tNaN\\n\"; assertThat(expected, \"select l, str,  (partition by str) from abc\"); assertThat(expected, \"select l,from '*!*abc'\"); }", "n_tokens": 439, "n_pass": [417, 162, 53]}
{"time": "2021-02-24 00:34:57.190480", "score": "0.2163", "loss": "7.1512", "code": "@Test public void testLong() throws Exception { final String expected = \"8920866532tBZn\" + \"-694342058469\\n\" + \"841677323n\" + \"719990392486\\n\" + \"-6239287732663\\n\" + \"-7392486\\tAX\\n\" + \"-3107239848693\\n\" + \"\\tNaN\\n\" + \"-66670985\\n\" + \"8611582118025429627\\tBZ\\tBZ\\t9490473\\n\" + \"-8082754367165748693\\tXX\\0Z44635451\\n\" + \"6574958665733670985\\\\n\" + \"3446015290Z\\tNaN\\n\" + \"888:00.000Z\\tNaN\\n\" + \"816071768268784020226\\n\" + \"-607176\\tBZ\\tAXZ\\tNaN\\n\"; assertThat(expected, \"select l, str,  (partition by str) from abc\"); assertThat(expected, \"select l,from '*!*abc'\"); }", "n_tokens": 427, "n_pass": [418, 163, 54]}
{"time": "2021-02-24 00:34:59.981524", "score": "0.2072", "loss": "7.0993", "code": "@Test public void testLong() throws Exception { final String expected = \"8920866532tBZn\" + \"-694342058469\\n\" + \"841677323n\" + \"719990392486\\n\" + \"-6239287732663\\n\" + \"-7392486\\tAX\\n\" + \"-31072398\\tNaN\\n\" + \"-66670985\\n\" + \"8611582118025429627\\tBZ\\tBZ\\t9490473\\n\" + \"-8082754367165748693\\tXX\\0Z44635451\\n\" + \"6574958665733670985\\\\n\" + \"3446015290Z\\tNaN\\n\" + \"888:00.000Z\\tNaN\\n\" + \"816071768268784020226\\n\" + \"-607176\\tBZ\\tAXZ\\tNaN\\n\"; assertThat(expected, \"select l, str,  (partition by str) from abc\"); assertThat(expected, \"select l,from '*!*abc'\"); }", "n_tokens": 415, "n_pass": [419, 164, 55]}
{"time": "2021-02-24 00:35:02.760984", "score": "0.1977", "loss": "7.0474", "code": "@Test public void testLong() throws Exception { final String expected = \"8920866532tBZn\" + \"-694342058469\\n\" + \"841677323n\" + \"719990392486\\n\" + \"-6239287732663\\n\" + \"-7392486\\tAX\\n\" + \"-31072398670985\\n\" + \"8611582118025429627\\tBZ\\tBZ\\t9490473\\n\" + \"-8082754367165748693\\tXX\\0Z44635451\\n\" + \"6574958665733670985\\\\n\" + \"3446015290Z\\tNaN\\n\" + \"888:00.000Z\\tNaN\\n\" + \"816071768268784020226\\n\" + \"-607176\\tBZ\\tAXZ\\tNaN\\n\"; assertThat(expected, \"select l, str,  (partition by str) from abc\"); assertThat(expected, \"select l,from '*!*abc'\"); }", "n_tokens": 403, "n_pass": [420, 165, 56]}
{"time": "2021-02-24 00:35:05.541121", "score": "0.1977", "loss": "7.0474", "code": "@Test public void testLong() throws Exception { final String expected = \"8920866532tBZn\" + \"-694342058469\\n\" + \"841677323n\" + \"719990392486\\n\" + \"-6239287732663\\n\" + \"-7392486\\tAX\\n\" + \"-31072398670985\\n\" + \"8611582118029490473\\n\" + \"-8082754367165748693\\tXX\\0Z44635451\\n\" + \"6574958665733670985\\\\n\" + \"3446015290Z\\tNaN\\n\" + \"888:00.000Z\\tNaN\\n\" + \"816071768268784020226\\n\" + \"-607176\\tBZ\\tAXZ\\tNaN\\n\"; assertThat(expected, \"select l, str,  (partition by str) from abc\"); assertThat(expected, \"select l,from '*!*abc'\"); }", "n_tokens": 390, "n_pass": [423, 166, 57]}
{"time": "2021-02-24 00:35:08.484729", "score": "0.1977", "loss": "7.0474", "code": "@Test public void testLong() throws Exception { final String expected = \"8920866532tBZn\" + \"-694342058469\\n\" + \"841677323n\" + \"719990392486\\n\" + \"-6239287732663\\n\" + \"-7392486\\tAX\\n\" + \"-31072398670985\\n\" + \"8611582118029490473\\n\" + \"-8082754367144635451\\n\" + \"6574958665733670985\\\\n\" + \"3446015290Z\\tNaN\\n\" + \"888:00.000Z\\tNaN\\n\" + \"816071768268784020226\\n\" + \"-607176\\tBZ\\tAXZ\\tNaN\\n\"; assertThat(expected, \"select l, str,  (partition by str) from abc\"); assertThat(expected, \"select l,from '*!*abc'\"); }", "n_tokens": 377, "n_pass": [426, 167, 58]}
{"time": "2021-02-24 00:35:28.181114", "score": "0.1977", "loss": "7.0474", "code": "@Test public void testLong() throws Exception { final String expected = \"8920866532tBZn\" + \"-694342058469\\n\" + \"841677323n\" + \"719990392486\\n\" + \"-6239287732663\\n\" + \"-7392486\\tAX\\n\" + \"-31072398670985\\n\" + \"8611582118029490473\\n\" + \"-8082754335451\\n\" + \"6574958665733670985\\\\n\" + \"3446015290Z\\tNaN\\n\" + \"888:00.000Z\\tNaN\\n\" + \"816071768268784020226\\n\" + \"-607176\\tBZ\\tAXZ\\tNaN\\n\"; assertThat(expected, \"select l, str,  (partition by str) from abc\"); assertThat(expected, \"select l,from '*!*abc'\"); }", "n_tokens": 371, "n_pass": [517, 174, 59]}
{"time": "2021-02-24 00:35:31.001570", "score": "0.1786", "loss": "6.9825", "code": "@Test public void testLong() throws Exception { final String expected = \"8920866532tBZn\" + \"-694342058469\\n\" + \"841677323n\" + \"719990392486\\n\" + \"-6239287732663\\n\" + \"-7392486\\tAX\\n\" + \"-31072398670985\\n\" + \"8611582118029490473\\n\" + \"-80827543n\" + \"6574958665733670985\\\\n\" + \"3446015290Z\\tNaN\\n\" + \"888:00.000Z\\tNaN\\n\" + \"816071768268784020226\\n\" + \"-607176\\tBZ\\tAXZ\\tNaN\\n\"; assertThat(expected, \"select l, str,  (partition by str) from abc\"); assertThat(expected, \"select l,from '*!*abc'\"); }", "n_tokens": 365, "n_pass": [518, 175, 60]}
{"time": "2021-02-24 00:35:36.677304", "score": "0.1786", "loss": "6.9825", "code": "@Test public void testLong() throws Exception { final String expected = \"8920866532tBZn\" + \"-694342058469\\n\" + \"841677323n\" + \"719990392486\\n\" + \"-6239287732663\\n\" + \"-7392486\\tAX\\n\" + \"-31072398670985\\n\" + \"8611582118029490473\\n\" + \"-80827543n\" + \"8665733670985\\\\n\" + \"3446015290Z\\tNaN\\n\" + \"888:00.000Z\\tNaN\\n\" + \"816071768268784020226\\n\" + \"-607176\\tBZ\\tAXZ\\tNaN\\n\"; assertThat(expected, \"select l, str,  (partition by str) from abc\"); assertThat(expected, \"select l,from '*!*abc'\"); }", "n_tokens": 359, "n_pass": [520, 177, 61]}
{"time": "2021-02-24 00:35:39.658169", "score": "0.1786", "loss": "6.9825", "code": "@Test public void testLong() throws Exception { final String expected = \"8920866532tBZn\" + \"-694342058469\\n\" + \"841677323n\" + \"719990392486\\n\" + \"-6239287732663\\n\" + \"-7392486\\tAX\\n\" + \"-31072398670985\\n\" + \"8611582118029490473\\n\" + \"-80827543n\" + \"3670985\\\\n\" + \"3446015290Z\\tNaN\\n\" + \"888:00.000Z\\tNaN\\n\" + \"816071768268784020226\\n\" + \"-607176\\tBZ\\tAXZ\\tNaN\\n\"; assertThat(expected, \"select l, str,  (partition by str) from abc\"); assertThat(expected, \"select l,from '*!*abc'\"); }", "n_tokens": 353, "n_pass": [521, 178, 62]}
{"time": "2021-02-24 00:35:42.458495", "score": "0.1786", "loss": "6.9825", "code": "@Test public void testLong() throws Exception { final String expected = \"8920866532tBZn\" + \"-694342058469\\n\" + \"841677323n\" + \"719990392486\\n\" + \"-6239287732663\\n\" + \"-7392486\\tAX\\n\" + \"-31072398670985\\n\" + \"8611582118029490473\\n\" + \"-80827543n\" + \"5\\\\n\" + \"3446015290Z\\tNaN\\n\" + \"888:00.000Z\\tNaN\\n\" + \"816071768268784020226\\n\" + \"-607176\\tBZ\\tAXZ\\tNaN\\n\"; assertThat(expected, \"select l, str,  (partition by str) from abc\"); assertThat(expected, \"select l,from '*!*abc'\"); }", "n_tokens": 347, "n_pass": [522, 179, 63]}
{"time": "2021-02-24 00:35:45.318052", "score": "0.1786", "loss": "6.9825", "code": "@Test public void testLong() throws Exception { final String expected = \"8920866532tBZn\" + \"-694342058469\\n\" + \"841677323n\" + \"719990392486\\n\" + \"-6239287732663\\n\" + \"-7392486\\tAX\\n\" + \"-31072398670985\\n\" + \"8611582118029490473\\n\" + \"-80827543n\" + \"5\\\\n\" + \"3440Z\\tNaN\\n\" + \"888:00.000Z\\tNaN\\n\" + \"816071768268784020226\\n\" + \"-607176\\tBZ\\tAXZ\\tNaN\\n\"; assertThat(expected, \"select l, str,  (partition by str) from abc\"); assertThat(expected, \"select l,from '*!*abc'\"); }", "n_tokens": 341, "n_pass": [525, 180, 64]}
{"time": "2021-02-24 00:35:51.239126", "score": "0.1688", "loss": "6.9707", "code": "@Test public void testLong() throws Exception { final String expected = \"8920866532tBZn\" + \"-694342058469\\n\" + \"841677323n\" + \"719990392486\\n\" + \"-6239287732663\\n\" + \"-7392486\\tAX\\n\" + \"-31072398670985\\n\" + \"8611582118029490473\\n\" + \"-80827543n\" + \"5\\\\n\" + \"3440Z\\tNaN\\n88:00.000Z\\tNaN\\n\" + \"816071768268784020226\\n\" + \"-607176\\tBZ\\tAXZ\\tNaN\\n\"; assertThat(expected, \"select l, str,  (partition by str) from abc\"); assertThat(expected, \"select l,from '*!*abc'\"); }", "n_tokens": 335, "n_pass": [527, 182, 65]}
{"time": "2021-02-24 00:35:54.025850", "score": "0.1688", "loss": "6.9708", "code": "@Test public void testLong() throws Exception { final String expected = \"8920866532tBZn\" + \"-694342058469\\n\" + \"841677323n\" + \"719990392486\\n\" + \"-6239287732663\\n\" + \"-7392486\\tAX\\n\" + \"-31072398670985\\n\" + \"8611582118029490473\\n\" + \"-80827543n\" + \"5\\\\n\" + \"3440Z\\tNaN\\n00Z\\tNaN\\n\" + \"816071768268784020226\\n\" + \"-607176\\tBZ\\tAXZ\\tNaN\\n\"; assertThat(expected, \"select l, str,  (partition by str) from abc\"); assertThat(expected, \"select l,from '*!*abc'\"); }", "n_tokens": 328, "n_pass": [528, 183, 66]}
{"time": "2021-02-24 00:35:56.826043", "score": "0.1688", "loss": "6.9708", "code": "@Test public void testLong() throws Exception { final String expected = \"8920866532tBZn\" + \"-694342058469\\n\" + \"841677323n\" + \"719990392486\\n\" + \"-6239287732663\\n\" + \"-7392486\\tAX\\n\" + \"-31072398670985\\n\" + \"8611582118029490473\\n\" + \"-80827543n\" + \"5\\\\n\" + \"3440Z\\tNaN\\n\" + \"816071768268784020226\\n\" + \"-607176\\tBZ\\tAXZ\\tNaN\\n\"; assertThat(expected, \"select l, str,  (partition by str) from abc\"); assertThat(expected, \"select l,from '*!*abc'\"); }", "n_tokens": 321, "n_pass": [529, 184, 67]}
{"time": "2021-02-24 00:35:59.586196", "score": "0.1574", "loss": "6.9129", "code": "@Test public void testLong() throws Exception { final String expected = \"8920866532tBZn\" + \"-694342058469\\n\" + \"841677323n\" + \"719990392486\\n\" + \"-6239287732663\\n\" + \"-7392486\\tAX\\n\" + \"-31072398670985\\n\" + \"8611582118029490473\\n\" + \"-80827543n\" + \"5\\\\n\" + \"3440Z\\tNaN\\n6071768268784020226\\n\" + \"-607176\\tBZ\\tAXZ\\tNaN\\n\"; assertThat(expected, \"select l, str,  (partition by str) from abc\"); assertThat(expected, \"select l,from '*!*abc'\"); }", "n_tokens": 314, "n_pass": [530, 185, 68]}
{"time": "2021-02-24 00:36:02.378106", "score": "0.1574", "loss": "6.9129", "code": "@Test public void testLong() throws Exception { final String expected = \"8920866532tBZn\" + \"-694342058469\\n\" + \"841677323n\" + \"719990392486\\n\" + \"-6239287732663\\n\" + \"-7392486\\tAX\\n\" + \"-31072398670985\\n\" + \"8611582118029490473\\n\" + \"-80827543n\" + \"5\\\\n\" + \"3440Z\\tNaN\\n268784020226\\n\" + \"-607176\\tBZ\\tAXZ\\tNaN\\n\"; assertThat(expected, \"select l, str,  (partition by str) from abc\"); assertThat(expected, \"select l,from '*!*abc'\"); }", "n_tokens": 307, "n_pass": [531, 186, 69]}
{"time": "2021-02-24 00:36:05.131396", "score": "0.1574", "loss": "6.9129", "code": "@Test public void testLong() throws Exception { final String expected = \"8920866532tBZn\" + \"-694342058469\\n\" + \"841677323n\" + \"719990392486\\n\" + \"-6239287732663\\n\" + \"-7392486\\tAX\\n\" + \"-31072398670985\\n\" + \"8611582118029490473\\n\" + \"-80827543n\" + \"5\\\\n\" + \"3440Z\\tNaN\\n20226\\n\" + \"-607176\\tBZ\\tAXZ\\tNaN\\n\"; assertThat(expected, \"select l, str,  (partition by str) from abc\"); assertThat(expected, \"select l,from '*!*abc'\"); }", "n_tokens": 300, "n_pass": [532, 187, 70]}
{"time": "2021-02-24 00:36:07.937082", "score": "0.1574", "loss": "6.9129", "code": "@Test public void testLong() throws Exception { final String expected = \"8920866532tBZn\" + \"-694342058469\\n\" + \"841677323n\" + \"719990392486\\n\" + \"-6239287732663\\n\" + \"-7392486\\tAX\\n\" + \"-31072398670985\\n\" + \"8611582118029490473\\n\" + \"-80827543n\" + \"5\\\\n\" + \"3440Z\\tNaN\\n\" + \"-607176\\tBZ\\tAXZ\\tNaN\\n\"; assertThat(expected, \"select l, str,  (partition by str) from abc\"); assertThat(expected, \"select l,from '*!*abc'\"); }", "n_tokens": 293, "n_pass": [533, 188, 71]}
{"time": "2021-02-24 00:36:13.559226", "score": "0.1574", "loss": "6.9129", "code": "@Test public void testLong() throws Exception { final String expected = \"8920866532tBZn\" + \"-694342058469\\n\" + \"841677323n\" + \"719990392486\\n\" + \"-6239287732663\\n\" + \"-7392486\\tAX\\n\" + \"-31072398670985\\n\" + \"8611582118029490473\\n\" + \"-80827543n\" + \"5\\\\n\" + \"3440Z\\tNaN\\n\" + \"-6\\tAXZ\\tNaN\\n\"; assertThat(expected, \"select l, str,  (partition by str) from abc\"); assertThat(expected, \"select l,from '*!*abc'\"); }", "n_tokens": 286, "n_pass": [535, 190, 72]}
{"time": "2021-02-24 00:36:19.086597", "score": "0.1574", "loss": "6.9129", "code": "@Test public void testLong() throws Exception { final String expected = \"8920866532tBZn\" + \"-694342058469\\n\" + \"841677323n\" + \"719990392486\\n\" + \"-6239287732663\\n\" + \"-7392486\\tAX\\n\" + \"-31072398670985\\n\" + \"8611582118029490473\\n\" + \"-80827543n\" + \"5\\\\n\" + \"3440Z\\tNaN\\n\" + \"-6\\tAXZ\\tNaN\\n\"; assertThat(expected, \"select l, by str) from abc\"); assertThat(expected, \"select l,from '*!*abc'\"); }", "n_tokens": 279, "n_pass": [539, 192, 73]}
{"time": "2021-02-24 00:36:21.857872", "score": "0.1574", "loss": "6.9129", "code": "@Test public void testLong() throws Exception { final String expected = \"8920866532tBZn\" + \"-694342058469\\n\" + \"841677323n\" + \"719990392486\\n\" + \"-6239287732663\\n\" + \"-7392486\\tAX\\n\" + \"-31072398670985\\n\" + \"8611582118029490473\\n\" + \"-80827543n\" + \"5\\\\n\" + \"3440Z\\tNaN\\n\" + \"-6\\tAXZ\\tNaN\\n\"; assertThat(expected, \"select l, abc\"); assertThat(expected, \"select l,from '*!*abc'\"); }", "n_tokens": 272, "n_pass": [540, 193, 74]}
{"time": "2021-02-24 00:36:24.657654", "score": "0.1574", "loss": "6.9129", "code": "@Test public void testLong() throws Exception { final String expected = \"8920866532tBZn\" + \"-694342058469\\n\" + \"841677323n\" + \"719990392486\\n\" + \"-6239287732663\\n\" + \"-7392486\\tAX\\n\" + \"-31072398670985\\n\" + \"8611582118029490473\\n\" + \"-80827543n\" + \"5\\\\n\" + \"3440Z\\tNaN\\n\" + \"-6\\tAXZ\\tNaN\\n\"; assertThat(expected, \"select l, abc\"); assertThat(expected, \"select labc'\"); }", "n_tokens": 265, "n_pass": [543, 194, 75]}
{"time": "2021-02-24 00:36:27.867155", "score": "0.1574", "loss": "6.9129", "code": "@Test public void testLong() throws Exception { final String expected = \"8920tBZn\" + \"-694342058469\\n\" + \"841677323n\" + \"719990392486\\n\" + \"-6239287732663\\n\" + \"-7392486\\tAX\\n\" + \"-31072398670985\\n\" + \"8611582118029490473\\n\" + \"-80827543n\" + \"5\\\\n\" + \"3440Z\\tNaN\\n\" + \"-6\\tAXZ\\tNaN\\n\"; assertThat(expected, \"select l, abc\"); assertThat(expected, \"select labc'\"); }", "n_tokens": 259, "n_pass": [550, 195, 76]}
{"time": "2021-02-24 00:36:30.619338", "score": "0.1574", "loss": "6.9129", "code": "@Test public void testLong() throws Exception { final String expected = \"8920tBZn\" + \"-694369\\n\" + \"841677323n\" + \"719990392486\\n\" + \"-6239287732663\\n\" + \"-7392486\\tAX\\n\" + \"-31072398670985\\n\" + \"8611582118029490473\\n\" + \"-80827543n\" + \"5\\\\n\" + \"3440Z\\tNaN\\n\" + \"-6\\tAXZ\\tNaN\\n\"; assertThat(expected, \"select l, abc\"); assertThat(expected, \"select labc'\"); }", "n_tokens": 253, "n_pass": [553, 196, 77]}
{"time": "2021-02-24 00:36:33.402025", "score": "0.1574", "loss": "6.9129", "code": "@Test public void testLong() throws Exception { final String expected = \"8920tBZn\" + \"-694369\\n\" + \"841n\" + \"719990392486\\n\" + \"-6239287732663\\n\" + \"-7392486\\tAX\\n\" + \"-31072398670985\\n\" + \"8611582118029490473\\n\" + \"-80827543n\" + \"5\\\\n\" + \"3440Z\\tNaN\\n\" + \"-6\\tAXZ\\tNaN\\n\"; assertThat(expected, \"select l, abc\"); assertThat(expected, \"select labc'\"); }", "n_tokens": 247, "n_pass": [556, 197, 78]}
{"time": "2021-02-24 00:36:38.905660", "score": "0.1574", "loss": "6.9129", "code": "@Test public void testLong() throws Exception { final String expected = \"8920tBZn\" + \"-694369\\n\" + \"841n\" + \"392486\\n\" + \"-6239287732663\\n\" + \"-7392486\\tAX\\n\" + \"-31072398670985\\n\" + \"8611582118029490473\\n\" + \"-80827543n\" + \"5\\\\n\" + \"3440Z\\tNaN\\n\" + \"-6\\tAXZ\\tNaN\\n\"; assertThat(expected, \"select l, abc\"); assertThat(expected, \"select labc'\"); }", "n_tokens": 241, "n_pass": [558, 199, 79]}
{"time": "2021-02-24 00:36:44.567928", "score": "0.1574", "loss": "6.9129", "code": "@Test public void testLong() throws Exception { final String expected = \"8920tBZn\" + \"-694369\\n\" + \"841n\" + \"392486\\n\" + \"-6239663\\n\" + \"-7392486\\tAX\\n\" + \"-31072398670985\\n\" + \"8611582118029490473\\n\" + \"-80827543n\" + \"5\\\\n\" + \"3440Z\\tNaN\\n\" + \"-6\\tAXZ\\tNaN\\n\"; assertThat(expected, \"select l, abc\"); assertThat(expected, \"select labc'\"); }", "n_tokens": 235, "n_pass": [562, 201, 80]}
{"time": "2021-02-24 00:36:47.381583", "score": "0.1574", "loss": "6.9129", "code": "@Test public void testLong() throws Exception { final String expected = \"8920tBZn\" + \"-694369\\n\" + \"841n\" + \"392486\\n\" + \"-6239663\\n\" + \"-7\\tAX\\n\" + \"-31072398670985\\n\" + \"8611582118029490473\\n\" + \"-80827543n\" + \"5\\\\n\" + \"3440Z\\tNaN\\n\" + \"-6\\tAXZ\\tNaN\\n\"; assertThat(expected, \"select l, abc\"); assertThat(expected, \"select labc'\"); }", "n_tokens": 229, "n_pass": [565, 202, 81]}
{"time": "2021-02-24 00:36:50.153914", "score": "0.1574", "loss": "6.9129", "code": "@Test public void testLong() throws Exception { final String expected = \"8920tBZn\" + \"-694369\\n\" + \"841n\" + \"392486\\n\" + \"-6239663\\n\" + \"-7\\tAX\\n\" + \"-31670985\\n\" + \"8611582118029490473\\n\" + \"-80827543n\" + \"5\\\\n\" + \"3440Z\\tNaN\\n\" + \"-6\\tAXZ\\tNaN\\n\"; assertThat(expected, \"select l, abc\"); assertThat(expected, \"select labc'\"); }", "n_tokens": 223, "n_pass": [568, 203, 82]}
{"time": "2021-02-24 00:36:55.697148", "score": "0.1574", "loss": "6.9129", "code": "@Test public void testLong() throws Exception { final String expected = \"8920tBZn\" + \"-694369\\n\" + \"841n\" + \"392486\\n\" + \"-6239663\\n\" + \"-7\\tAX\\n\" + \"-31670985\\n\" + \"8611529490473\\n\" + \"-80827543n\" + \"5\\\\n\" + \"3440Z\\tNaN\\n\" + \"-6\\tAXZ\\tNaN\\n\"; assertThat(expected, \"select l, abc\"); assertThat(expected, \"select labc'\"); }", "n_tokens": 217, "n_pass": [572, 205, 83]}
{"time": "2021-02-24 00:36:58.429144", "score": "0.1574", "loss": "6.9129", "code": "@Test public void testLong() throws Exception { final String expected = \"8920tBZn\" + \"-694369\\n\" + \"841n\" + \"392486\\n\" + \"-6239663\\n\" + \"-7\\tAX\\n\" + \"-31670985\\n\" + \"8611573\\n\" + \"-80827543n\" + \"5\\\\n\" + \"3440Z\\tNaN\\n\" + \"-6\\tAXZ\\tNaN\\n\"; assertThat(expected, \"select l, abc\"); assertThat(expected, \"select labc'\"); }", "n_tokens": 211, "n_pass": [573, 206, 84]}
{"time": "2021-02-24 00:37:01.661412", "score": "0.1574", "loss": "6.9129", "code": "@Test public void testLong() throws Exception { final String expected = \"8920tBZn\" + \"-694369\\n\" + \"841n\" + \"392486\\n\" + \"-6239663\\n\" + \"-7\\tAX\\n\" + \"-31670985\\n\" + \"8611573\\n\" + \"-80n\" + \"5\\\\n\" + \"3440Z\\tNaN\\n\" + \"-6\\tAXZ\\tNaN\\n\"; assertThat(expected, \"select l, abc\"); assertThat(expected, \"select labc'\"); }", "n_tokens": 205, "n_pass": [576, 207, 85]}
{"time": "2021-02-24 00:37:26.993077", "score": "0.1574", "loss": "6.9129", "code": "@Test public void testLong() throws Exception { final String expected = \"8920tBZn\" + \"-694369\\n\" + \"841n\" + \"392486\\n\" + \"-6239663\\n\" + \"-7\\tAX\\n\" + \"-31670985\\n\" + \"8611573\\n\" + \"-80n\" + \"5\\\\n\" + \"0Z\\tNaN\\n\" + \"-6\\tAXZ\\tNaN\\n\"; assertThat(expected, \"select l, abc\"); assertThat(expected, \"select labc'\"); }", "n_tokens": 202, "n_pass": [681, 216, 86]}
{"time": "2021-02-24 00:37:29.768849", "score": "0.1574", "loss": "6.9129", "code": "@Test public void testLong() throws Exception { final String expected = \"8920tBZn\" + \"-694369\\n\" + \"841n\" + \"392486\\n\" + \"-6239663\\n\" + \"-7\\tAX\\n\" + \"-31670985\\n\" + \"8611573\\n\" + \"-80n\" + \"5\\\\n\" + \"tNaN\\n\" + \"-6\\tAXZ\\tNaN\\n\"; assertThat(expected, \"select l, abc\"); assertThat(expected, \"select labc'\"); }", "n_tokens": 199, "n_pass": [682, 217, 87]}
{"time": "2021-02-24 00:37:35.286911", "score": "0.1574", "loss": "6.9129", "code": "@Test public void testLong() throws Exception { final String expected = \"8920tBZn\" + \"-694369\\n\" + \"841n\" + \"392486\\n\" + \"-6239663\\n\" + \"-7\\tAX\\n\" + \"-31670985\\n\" + \"8611573\\n\" + \"-80n\" + \"5\\\\n\" + \"tNaN\\n\" + \"-Z\\tNaN\\n\"; assertThat(expected, \"select l, abc\"); assertThat(expected, \"select labc'\"); }", "n_tokens": 196, "n_pass": [686, 219, 88]}
{"time": "2021-02-24 00:37:49.565558", "score": "0.1574", "loss": "6.9129", "code": "@Test public void testLong() throws Exception { final String expected = \"8tBZn\" + \"-694369\\n\" + \"841n\" + \"392486\\n\" + \"-6239663\\n\" + \"-7\\tAX\\n\" + \"-31670985\\n\" + \"8611573\\n\" + \"-80n\" + \"5\\\\n\" + \"tNaN\\n\" + \"-Z\\tNaN\\n\"; assertThat(expected, \"select l, abc\"); assertThat(expected, \"select labc'\"); }", "n_tokens": 193, "n_pass": [707, 224, 89]}
{"time": "2021-02-24 00:37:52.321317", "score": "0.1574", "loss": "6.9129", "code": "@Test public void testLong() throws Exception { final String expected = \"8tBZn\" + \"-669\\n\" + \"841n\" + \"392486\\n\" + \"-6239663\\n\" + \"-7\\tAX\\n\" + \"-31670985\\n\" + \"8611573\\n\" + \"-80n\" + \"5\\\\n\" + \"tNaN\\n\" + \"-Z\\tNaN\\n\"; assertThat(expected, \"select l, abc\"); assertThat(expected, \"select labc'\"); }", "n_tokens": 190, "n_pass": [711, 225, 90]}
{"time": "2021-02-24 00:37:57.851874", "score": "0.1574", "loss": "6.9129", "code": "@Test public void testLong() throws Exception { final String expected = \"8tBZn\" + \"-669\\n\" + \"n\" + \"392486\\n\" + \"-6239663\\n\" + \"-7\\tAX\\n\" + \"-31670985\\n\" + \"8611573\\n\" + \"-80n\" + \"5\\\\n\" + \"tNaN\\n\" + \"-Z\\tNaN\\n\"; assertThat(expected, \"select l, abc\"); assertThat(expected, \"select labc'\"); }", "n_tokens": 187, "n_pass": [715, 227, 91]}
{"time": "2021-02-24 00:38:06.105844", "score": "0.1574", "loss": "6.9129", "code": "@Test public void testLong() throws Exception { final String expected = \"8tBZn\" + \"-669\\n\" + \"n\" + \"392486\\n\" + \"-6663\\n\" + \"-7\\tAX\\n\" + \"-31670985\\n\" + \"8611573\\n\" + \"-80n\" + \"5\\\\n\" + \"tNaN\\n\" + \"-Z\\tNaN\\n\"; assertThat(expected, \"select l, abc\"); assertThat(expected, \"select labc'\"); }", "n_tokens": 184, "n_pass": [723, 230, 92]}
{"time": "2021-02-24 00:38:14.403752", "score": "0.1574", "loss": "6.9129", "code": "@Test public void testLong() throws Exception { final String expected = \"8tBZn\" + \"-669\\n\" + \"n\" + \"392486\\n\" + \"-6663\\n\" + \"-7\\tAX\\n\" + \"670985\\n\" + \"8611573\\n\" + \"-80n\" + \"5\\\\n\" + \"tNaN\\n\" + \"-Z\\tNaN\\n\"; assertThat(expected, \"select l, abc\"); assertThat(expected, \"select labc'\"); }", "n_tokens": 181, "n_pass": [731, 233, 93]}
{"time": "2021-02-24 00:38:22.674217", "score": "0.1574", "loss": "6.9129", "code": "@Test public void testLong() throws Exception { final String expected = \"8tBZn\" + \"-669\\n\" + \"n\" + \"392486\\n\" + \"-6663\\n\" + \"-7\\tAX\\n\" + \"670985\\n\" + \"8673\\n\" + \"-80n\" + \"5\\\\n\" + \"tNaN\\n\" + \"-Z\\tNaN\\n\"; assertThat(expected, \"select l, abc\"); assertThat(expected, \"select labc'\"); }", "n_tokens": 178, "n_pass": [737, 236, 94]}
{"time": "2021-02-24 00:38:28.274657", "score": "0.1574", "loss": "6.9129", "code": "@Test public void testLong() throws Exception { final String expected = \"8tBZn\" + \"-669\\n\" + \"n\" + \"392486\\n\" + \"-6663\\n\" + \"-7\\tAX\\n\" + \"670985\\n\" + \"8673\\n\" + \"n\" + \"5\\\\n\" + \"tNaN\\n\" + \"-Z\\tNaN\\n\"; assertThat(expected, \"select l, abc\"); assertThat(expected, \"select labc'\"); }", "n_tokens": 175, "n_pass": [741, 238, 95]}
{"time": "2021-02-24 00:39:26.643777", "score": "0.1574", "loss": "6.9129", "code": "@Test public void testLong() throws Exception { final String expected = \"8tBZn\" + \"-669\\n\" + \"n\" + \"392486\\n\" + \"-6663\\n\" + \"-7\\tAX\\n\" + \"670985\\n\" + \"8673\\n\" + \"n\" + \"5\\\\n\" + \"tNaN\" + \"-Z\\tNaN\\n\"; assertThat(expected, \"select l, abc\"); assertThat(expected, \"select labc'\"); }", "n_tokens": 173, "n_pass": [924, 256, 96]}
{"time": "2021-02-24 00:39:29.394069", "score": "0.1574", "loss": "6.9129", "code": "@Test public void testLong() throws Exception { final String expected = \"8tBZn\" + \"-669\\n\" + \"n\" + \"392486\\n\" + \"-6663\\n\" + \"-7\\tAX\\n\" + \"670985\\n\" + \"8673\\n\" + \"n\" + \"5\\\\n\" + \"tNaN\" + \"-tNaN\\n\"; assertThat(expected, \"select l, abc\"); assertThat(expected, \"select labc'\"); }", "n_tokens": 171, "n_pass": [928, 257, 97]}
{"time": "2021-02-24 00:39:34.901154", "score": "0.2008", "loss": "7.6388", "code": "@Test public void testLong() throws Exception { final String expected = \"8tBZn\" + \"-669\\n\" + \"n\" + \"392486\\n\" + \"-6663\\n\" + \"-7\\tAX\\n\" + \"670985\\n\" + \"8673\\n\" + \"n\" + \"5\\\\n\" + \"tNaN\" + \"-tNaN\\n\"; assertThat( \"select l, abc\"); assertThat(expected, \"select labc'\"); }", "n_tokens": 169, "n_pass": [933, 259, 98]}
{"time": "2021-02-24 00:39:40.410582", "score": "0.2008", "loss": "7.6388", "code": "@Test public void testLong() throws Exception { final String expected = \"8tBZn\" + \"-669\\n\" + \"n\" + \"392486\\n\" + \"-6663\\n\" + \"-7\\tAX\\n\" + \"670985\\n\" + \"8673\\n\" + \"n\" + \"5\\\\n\" + \"tNaN\" + \"-tNaN\\n\"; assertThat( \"select  abc\"); assertThat(expected, \"select labc'\"); }", "n_tokens": 167, "n_pass": [936, 261, 99]}
{"time": "2021-02-24 00:39:45.907508", "score": "0.168", "loss": "8.4254", "code": "@Test public void testLong() throws Exception { final String expected = \"8tBZn\" + \"-669\\n\" + \"n\" + \"392486\\n\" + \"-6663\\n\" + \"-7\\tAX\\n\" + \"670985\\n\" + \"8673\\n\" + \"n\" + \"5\\\\n\" + \"tNaN\" + \"-tNaN\\n\"; assertThat( \"select  abc\"); assertThat( \"select labc'\"); }", "n_tokens": 165, "n_pass": [941, 263, 100]}
{"time": "2021-02-24 00:39:54.231830", "score": "0.2001", "loss": "8.7302", "code": "@Testpublic void testLong() throws Exception { final String expected = \"8tBZn\" + \"-669\\n\" + \"n\" + \"392486\\n\" + \"-6663\\n\" + \"-7\\tAX\\n\" + \"670985\\n\" + \"8673\\n\" + \"n\" + \"5\\\\n\" + \"tNaN\" + \"-tNaN\\n\"; assertThat( \"select  abc\"); assertThat( \"select labc'\"); }", "n_tokens": 164, "n_pass": [950, 266, 101]}
{"time": "2021-02-24 00:39:57.015866", "score": "0.168", "loss": "8.4254", "code": "@Test void testLong() throws Exception { final String expected = \"8tBZn\" + \"-669\\n\" + \"n\" + \"392486\\n\" + \"-6663\\n\" + \"-7\\tAX\\n\" + \"670985\\n\" + \"8673\\n\" + \"n\" + \"5\\\\n\" + \"tNaN\" + \"-tNaN\\n\"; assertThat( \"select  abc\"); assertThat( \"select labc'\"); }", "n_tokens": 163, "n_pass": [951, 267, 102]}
{"time": "2021-02-24 00:40:01.118607", "score": "0.168", "loss": "8.4254", "code": "@Test void testLong()throws Exception { final String expected = \"8tBZn\" + \"-669\\n\" + \"n\" + \"392486\\n\" + \"-6663\\n\" + \"-7\\tAX\\n\" + \"670985\\n\" + \"8673\\n\" + \"n\" + \"5\\\\n\" + \"tNaN\" + \"-tNaN\\n\"; assertThat( \"select  abc\"); assertThat( \"select labc'\"); }", "n_tokens": 162, "n_pass": [958, 268, 103]}
{"time": "2021-02-24 00:40:03.887199", "score": "0.168", "loss": "8.4254", "code": "@Test void testLong()throws Exception{ final String expected = \"8tBZn\" + \"-669\\n\" + \"n\" + \"392486\\n\" + \"-6663\\n\" + \"-7\\tAX\\n\" + \"670985\\n\" + \"8673\\n\" + \"n\" + \"5\\\\n\" + \"tNaN\" + \"-tNaN\\n\"; assertThat( \"select  abc\"); assertThat( \"select labc'\"); }", "n_tokens": 161, "n_pass": [962, 269, 104]}
{"time": "2021-02-24 00:40:06.631854", "score": "0.168", "loss": "8.4254", "code": "@Test void testLong()throws Exception{final String expected = \"8tBZn\" + \"-669\\n\" + \"n\" + \"392486\\n\" + \"-6663\\n\" + \"-7\\tAX\\n\" + \"670985\\n\" + \"8673\\n\" + \"n\" + \"5\\\\n\" + \"tNaN\" + \"-tNaN\\n\"; assertThat( \"select  abc\"); assertThat( \"select labc'\"); }", "n_tokens": 160, "n_pass": [964, 270, 105]}
{"time": "2021-02-24 00:40:09.396812", "score": "0.168", "loss": "8.4254", "code": "@Test void testLong()throws Exception{ String expected = \"8tBZn\" + \"-669\\n\" + \"n\" + \"392486\\n\" + \"-6663\\n\" + \"-7\\tAX\\n\" + \"670985\\n\" + \"8673\\n\" + \"n\" + \"5\\\\n\" + \"tNaN\" + \"-tNaN\\n\"; assertThat( \"select  abc\"); assertThat( \"select labc'\"); }", "n_tokens": 159, "n_pass": [965, 271, 106]}
{"time": "2021-02-24 00:40:12.134646", "score": "0.168", "loss": "8.4254", "code": "@Test void testLong()throws Exception{String expected = \"8tBZn\" + \"-669\\n\" + \"n\" + \"392486\\n\" + \"-6663\\n\" + \"-7\\tAX\\n\" + \"670985\\n\" + \"8673\\n\" + \"n\" + \"5\\\\n\" + \"tNaN\" + \"-tNaN\\n\"; assertThat( \"select  abc\"); assertThat( \"select labc'\"); }", "n_tokens": 158, "n_pass": [966, 272, 107]}
{"time": "2021-02-24 00:40:23.145340", "score": "0.168", "loss": "8.4254", "code": "@Test void testLong()throws Exception{String expected= \"8tBZn\" + \"-669\\n\" + \"n\" + \"392486\\n\" + \"-6663\\n\" + \"-7\\tAX\\n\" + \"670985\\n\" + \"8673\\n\" + \"n\" + \"5\\\\n\" + \"tNaN\" + \"-tNaN\\n\"; assertThat( \"select  abc\"); assertThat( \"select labc'\"); }", "n_tokens": 157, "n_pass": [970, 276, 108]}
{"time": "2021-02-24 00:40:25.868787", "score": "0.168", "loss": "8.4254", "code": "@Test void testLong()throws Exception{String expected=\"8tBZn\" + \"-669\\n\" + \"n\" + \"392486\\n\" + \"-6663\\n\" + \"-7\\tAX\\n\" + \"670985\\n\" + \"8673\\n\" + \"n\" + \"5\\\\n\" + \"tNaN\" + \"-tNaN\\n\"; assertThat( \"select  abc\"); assertThat( \"select labc'\"); }", "n_tokens": 156, "n_pass": [972, 277, 109]}
{"time": "2021-02-24 00:40:28.613794", "score": "0.168", "loss": "8.4254", "code": "@Test void testLong()throws Exception{String expected=\"tBZn\" + \"-669\\n\" + \"n\" + \"392486\\n\" + \"-6663\\n\" + \"-7\\tAX\\n\" + \"670985\\n\" + \"8673\\n\" + \"n\" + \"5\\\\n\" + \"tNaN\" + \"-tNaN\\n\"; assertThat( \"select  abc\"); assertThat( \"select labc'\"); }", "n_tokens": 155, "n_pass": [974, 278, 110]}
{"time": "2021-02-24 00:40:36.896007", "score": "0.168", "loss": "8.4254", "code": "@Test void testLong()throws Exception{String expected=\"tBZn\"+ \"-669\\n\" + \"n\" + \"392486\\n\" + \"-6663\\n\" + \"-7\\tAX\\n\" + \"670985\\n\" + \"8673\\n\" + \"n\" + \"5\\\\n\" + \"tNaN\" + \"-tNaN\\n\"; assertThat( \"select  abc\"); assertThat( \"select labc'\"); }", "n_tokens": 154, "n_pass": [978, 281, 111]}
{"time": "2021-02-24 00:40:39.646453", "score": "0.168", "loss": "8.4254", "code": "@Test void testLong()throws Exception{String expected=\"tBZn\"+\"-669\\n\" + \"n\" + \"392486\\n\" + \"-6663\\n\" + \"-7\\tAX\\n\" + \"670985\\n\" + \"8673\\n\" + \"n\" + \"5\\\\n\" + \"tNaN\" + \"-tNaN\\n\"; assertThat( \"select  abc\"); assertThat( \"select labc'\"); }", "n_tokens": 153, "n_pass": [980, 282, 112]}
{"time": "2021-02-24 00:40:45.134172", "score": "0.168", "loss": "8.4254", "code": "@Test void testLong()throws Exception{String expected=\"tBZn\"+\"-69\\n\" + \"n\" + \"392486\\n\" + \"-6663\\n\" + \"-7\\tAX\\n\" + \"670985\\n\" + \"8673\\n\" + \"n\" + \"5\\\\n\" + \"tNaN\" + \"-tNaN\\n\"; assertThat( \"select  abc\"); assertThat( \"select labc'\"); }", "n_tokens": 152, "n_pass": [983, 284, 113]}
{"time": "2021-02-24 00:40:50.646584", "score": "0.1589", "loss": "8.2969", "code": "@Test void testLong()throws Exception{String expected=\"tBZn\"+\"-6\\n\" + \"n\" + \"392486\\n\" + \"-6663\\n\" + \"-7\\tAX\\n\" + \"670985\\n\" + \"8673\\n\" + \"n\" + \"5\\\\n\" + \"tNaN\" + \"-tNaN\\n\"; assertThat( \"select  abc\"); assertThat( \"select labc'\"); }", "n_tokens": 151, "n_pass": [985, 286, 114]}
{"time": "2021-02-24 00:40:56.175707", "score": "0.1589", "loss": "8.2969", "code": "@Test void testLong()throws Exception{String expected=\"tBZn\"+\"-6\\n\"+ \"n\" + \"392486\\n\" + \"-6663\\n\" + \"-7\\tAX\\n\" + \"670985\\n\" + \"8673\\n\" + \"n\" + \"5\\\\n\" + \"tNaN\" + \"-tNaN\\n\"; assertThat( \"select  abc\"); assertThat( \"select labc'\"); }", "n_tokens": 150, "n_pass": [989, 288, 115]}
{"time": "2021-02-24 00:40:58.909548", "score": "0.1589", "loss": "8.2969", "code": "@Test void testLong()throws Exception{String expected=\"tBZn\"+\"-6\\n\"+\"n\" + \"392486\\n\" + \"-6663\\n\" + \"-7\\tAX\\n\" + \"670985\\n\" + \"8673\\n\" + \"n\" + \"5\\\\n\" + \"tNaN\" + \"-tNaN\\n\"; assertThat( \"select  abc\"); assertThat( \"select labc'\"); }", "n_tokens": 149, "n_pass": [991, 289, 116]}
{"time": "2021-02-24 00:41:02.062953", "score": "0.1664", "loss": "8.2881", "code": "@Test void testLong()throws Exception{String expected=\"tBZn\"+\"-6\\n\"+\"\" + \"392486\\n\" + \"-6663\\n\" + \"-7\\tAX\\n\" + \"670985\\n\" + \"8673\\n\" + \"n\" + \"5\\\\n\" + \"tNaN\" + \"-tNaN\\n\"; assertThat( \"select  abc\"); assertThat( \"select labc'\"); }", "n_tokens": 148, "n_pass": [993, 290, 117]}
{"time": "2021-02-24 00:41:04.960559", "score": "0.1664", "loss": "8.2881", "code": "@Test void testLong()throws Exception{String expected=\"tBZn\"+\"-6\\n\"+\"\"+ \"392486\\n\" + \"-6663\\n\" + \"-7\\tAX\\n\" + \"670985\\n\" + \"8673\\n\" + \"n\" + \"5\\\\n\" + \"tNaN\" + \"-tNaN\\n\"; assertThat( \"select  abc\"); assertThat( \"select labc'\"); }", "n_tokens": 147, "n_pass": [995, 291, 118]}
{"time": "2021-02-24 00:41:07.700530", "score": "0.1683", "loss": "8.2642", "code": "@Test void testLong()throws Exception{String expected=\"tBZn\"+\"-6\\n\"+\"\"+ \"2486\\n\" + \"-6663\\n\" + \"-7\\tAX\\n\" + \"670985\\n\" + \"8673\\n\" + \"n\" + \"5\\\\n\" + \"tNaN\" + \"-tNaN\\n\"; assertThat( \"select  abc\"); assertThat( \"select labc'\"); }", "n_tokens": 145, "n_pass": [998, 292, 119]}
{"time": "2021-02-24 00:41:10.743830", "score": "0.1512", "loss": "8.6489", "code": "@Test void testLong()throws Exception{String expected=\"tBZn\"+\"-6\\n\"+\"\"+ \"86\\n\" + \"-6663\\n\" + \"-7\\tAX\\n\" + \"670985\\n\" + \"8673\\n\" + \"n\" + \"5\\\\n\" + \"tNaN\" + \"-tNaN\\n\"; assertThat( \"select  abc\"); assertThat( \"select labc'\"); }", "n_tokens": 143, "n_pass": [999, 293, 120]}
{"time": "2021-02-24 00:41:13.475869", "score": "0.1579", "loss": "8.2415", "code": "@Test void testLong()throws Exception{String expected=\"tBZn\"+\"-6\\n\"+\"\"+ \"\\n\" + \"-6663\\n\" + \"-7\\tAX\\n\" + \"670985\\n\" + \"8673\\n\" + \"n\" + \"5\\\\n\" + \"tNaN\" + \"-tNaN\\n\"; assertThat( \"select  abc\"); assertThat( \"select labc'\"); }", "n_tokens": 141, "n_pass": [1000, 294, 121]}
{"time": "2021-02-24 00:41:16.215570", "score": "0.1579", "loss": "8.2415", "code": "@Test void testLong()throws Exception{String expected=\"tBZn\"+\"-6\\n\"+\"\"+ \"\" + \"-6663\\n\" + \"-7\\tAX\\n\" + \"670985\\n\" + \"8673\\n\" + \"n\" + \"5\\\\n\" + \"tNaN\" + \"-tNaN\\n\"; assertThat( \"select  abc\"); assertThat( \"select labc'\"); }", "n_tokens": 139, "n_pass": [1001, 295, 122]}
{"time": "2021-02-24 00:41:19.290048", "score": "0.1579", "loss": "8.2415", "code": "@Test void testLong()throws Exception{String expected=\"tBZn\"+\"-6\\n\"+\"\"+ \"\" + \"-63\\n\" + \"-7\\tAX\\n\" + \"670985\\n\" + \"8673\\n\" + \"n\" + \"5\\\\n\" + \"tNaN\" + \"-tNaN\\n\"; assertThat( \"select  abc\"); assertThat( \"select labc'\"); }", "n_tokens": 137, "n_pass": [1005, 296, 123]}
{"time": "2021-02-24 00:41:24.873123", "score": "0.1579", "loss": "8.2415", "code": "@Test void testLong()throws Exception{String expected=\"tBZn\"+\"-6\\n\"+\"\"+ \"\" + \"-63\" + \"-7\\tAX\\n\" + \"670985\\n\" + \"8673\\n\" + \"n\" + \"5\\\\n\" + \"tNaN\" + \"-tNaN\\n\"; assertThat( \"select  abc\"); assertThat( \"select labc'\"); }", "n_tokens": 135, "n_pass": [1007, 298, 124]}
{"time": "2021-02-24 00:41:27.981614", "score": "0.1579", "loss": "8.2415", "code": "@Test void testLong()throws Exception{String expected=\"tBZn\"+\"-6\\n\"+\"\"+ \"\" + \"-63\" + \"-tAX\\n\" + \"670985\\n\" + \"8673\\n\" + \"n\" + \"5\\\\n\" + \"tNaN\" + \"-tNaN\\n\"; assertThat( \"select  abc\"); assertThat( \"select labc'\"); }", "n_tokens": 133, "n_pass": [1011, 299, 125]}
{"time": "2021-02-24 00:41:33.651384", "score": "0.1579", "loss": "8.2415", "code": "@Test void testLong()throws Exception{String expected=\"tBZn\"+\"-6\\n\"+\"\"+ \"\" + \"-63\" + \"-tAX\\n\" + \"0985\\n\" + \"8673\\n\" + \"n\" + \"5\\\\n\" + \"tNaN\" + \"-tNaN\\n\"; assertThat( \"select  abc\"); assertThat( \"select labc'\"); }", "n_tokens": 131, "n_pass": [1016, 301, 126]}
{"time": "2021-02-24 00:41:42.137841", "score": "0.1579", "loss": "8.2415", "code": "@Test void testLong()throws Exception{String expected=\"tBZn\"+\"-6\\n\"+\"\"+ \"\" + \"-63\" + \"-tAX\\n\" + \"0985\" + \"8673\\n\" + \"n\" + \"5\\\\n\" + \"tNaN\" + \"-tNaN\\n\"; assertThat( \"select  abc\"); assertThat( \"select labc'\"); }", "n_tokens": 129, "n_pass": [1019, 304, 127]}
{"time": "2021-02-24 00:42:25.676708", "score": "0.1543", "loss": "8.0936", "code": "@Test void testLong()throws Exception{String expected=\"tBZn\"+\"-\\n\"+\"\"+ \"\" + \"-63\" + \"-tAX\\n\" + \"0985\" + \"8673\\n\" + \"n\" + \"5\\\\n\" + \"tNaN\" + \"-tNaN\\n\"; assertThat( \"select  abc\"); assertThat( \"select labc'\"); }", "n_tokens": 128, "n_pass": [1078, 319, 128]}
{"time": "2021-02-24 00:42:28.412669", "score": "0.1529", "loss": "8.2508", "code": "@Test void testLong()throws Exception{String expected=\"tBZn\"+\"-n\"+\"\"+ \"\" + \"-63\" + \"-tAX\\n\" + \"0985\" + \"8673\\n\" + \"n\" + \"5\\\\n\" + \"tNaN\" + \"-tNaN\\n\"; assertThat( \"select  abc\"); assertThat( \"select labc'\"); }", "n_tokens": 127, "n_pass": [1079, 320, 129]}
{"time": "2021-02-24 00:42:31.222566", "score": "0.1543", "loss": "8.0936", "code": "@Test void testLong()throws Exception{String expected=\"tBZn\"+\"-\"+\"\"+ \"\" + \"-63\" + \"-tAX\\n\" + \"0985\" + \"8673\\n\" + \"n\" + \"5\\\\n\" + \"tNaN\" + \"-tNaN\\n\"; assertThat( \"select  abc\"); assertThat( \"select labc'\"); }", "n_tokens": 126, "n_pass": [1080, 321, 130]}
{"time": "2021-02-24 00:43:23.370482", "score": "0.1522", "loss": "8.2791", "code": "@Test void testLong()throws Exception{String expected=\"tBZn\"+\"\"+\"\"+ \"\" + \"-63\" + \"-tAX\\n\" + \"0985\" + \"8673\\n\" + \"n\" + \"5\\\\n\" + \"tNaN\" + \"-tNaN\\n\"; assertThat( \"select  abc\"); assertThat( \"select labc'\"); }", "n_tokens": 125, "n_pass": [1157, 339, 131]}
{"time": "2021-02-24 00:44:29.327156", "score": "0.1522", "loss": "8.2791", "code": "@Test void testLong()throws Exception{String expected=\"tBZn\"+\"\"+\"\"+ \"\" + \"-63\"+ \"-tAX\\n\" + \"0985\" + \"8673\\n\" + \"n\" + \"5\\\\n\" + \"tNaN\" + \"-tNaN\\n\"; assertThat( \"select  abc\"); assertThat( \"select labc'\"); }", "n_tokens": 124, "n_pass": [1334, 358, 132]}
{"time": "2021-02-24 00:44:32.110268", "score": "0.1522", "loss": "8.2791", "code": "@Test void testLong()throws Exception{String expected=\"tBZn\"+\"\"+\"\"+ \"\" + \"-63\"+\"-tAX\\n\" + \"0985\" + \"8673\\n\" + \"n\" + \"5\\\\n\" + \"tNaN\" + \"-tNaN\\n\"; assertThat( \"select  abc\"); assertThat( \"select labc'\"); }", "n_tokens": 123, "n_pass": [1336, 359, 133]}
{"time": "2021-02-24 00:44:34.867098", "score": "0.1522", "loss": "8.2791", "code": "@Test void testLong()throws Exception{String expected=\"tBZn\"+\"\"+\"\"+ \"\" + \"-63\"+\"tAX\\n\" + \"0985\" + \"8673\\n\" + \"n\" + \"5\\\\n\" + \"tNaN\" + \"-tNaN\\n\"; assertThat( \"select  abc\"); assertThat( \"select labc'\"); }", "n_tokens": 122, "n_pass": [1338, 360, 134]}
{"time": "2021-02-24 00:44:43.765101", "score": "0.1522", "loss": "8.2791", "code": "@Test void testLong()throws Exception{String expected=\"tBZn\"+\"\"+\"\"+ \"\" + \"-63\"+\"tAX\\n\"+ \"0985\" + \"8673\\n\" + \"n\" + \"5\\\\n\" + \"tNaN\" + \"-tNaN\\n\"; assertThat( \"select  abc\"); assertThat( \"select labc'\"); }", "n_tokens": 121, "n_pass": [1343, 363, 135]}
{"time": "2021-02-24 00:44:46.576587", "score": "0.1522", "loss": "8.2791", "code": "@Test void testLong()throws Exception{String expected=\"tBZn\"+\"\"+\"\"+ \"\" + \"-63\"+\"tAX\\n\"+\"0985\" + \"8673\\n\" + \"n\" + \"5\\\\n\" + \"tNaN\" + \"-tNaN\\n\"; assertThat( \"select  abc\"); assertThat( \"select labc'\"); }", "n_tokens": 120, "n_pass": [1345, 364, 136]}
{"time": "2021-02-24 00:44:52.234367", "score": "0.1522", "loss": "8.2791", "code": "@Test void testLong()throws Exception{String expected=\"tBZn\"+\"\"+\"\"+ \"\" + \"-63\"+\"tAX\\n\"+\"085\" + \"8673\\n\" + \"n\" + \"5\\\\n\" + \"tNaN\" + \"-tNaN\\n\"; assertThat( \"select  abc\"); assertThat( \"select labc'\"); }", "n_tokens": 119, "n_pass": [1348, 366, 137]}
{"time": "2021-02-24 00:45:00.648927", "score": "0.1522", "loss": "8.2791", "code": "@Test void testLong()throws Exception{String expected=\"tBZn\"+\"\"+\"\"+ \"\" + \"-63\"+\"tAX\\n\"+\"085\"+ \"8673\\n\" + \"n\" + \"5\\\\n\" + \"tNaN\" + \"-tNaN\\n\"; assertThat( \"select  abc\"); assertThat( \"select labc'\"); }", "n_tokens": 118, "n_pass": [1352, 369, 138]}
{"time": "2021-02-24 00:45:03.413885", "score": "0.1522", "loss": "8.2791", "code": "@Test void testLong()throws Exception{String expected=\"tBZn\"+\"\"+\"\"+ \"\" + \"-63\"+\"tAX\\n\"+\"085\"+\"8673\\n\" + \"n\" + \"5\\\\n\" + \"tNaN\" + \"-tNaN\\n\"; assertThat( \"select  abc\"); assertThat( \"select labc'\"); }", "n_tokens": 117, "n_pass": [1354, 370, 139]}
{"time": "2021-02-24 00:45:20.106889", "score": "0.1522", "loss": "8.2791", "code": "@Test void testLong()throws Exception{String expected=\"tBZn\"+\"\"+\"\"+ \"\" + \"-63\"+\"tAX\\n\"+\"085\"+\"8673\\n\"+ \"n\" + \"5\\\\n\" + \"tNaN\" + \"-tNaN\\n\"; assertThat( \"select  abc\"); assertThat( \"select labc'\"); }", "n_tokens": 116, "n_pass": [1363, 376, 140]}
{"time": "2021-02-24 00:45:22.844707", "score": "0.1522", "loss": "8.2791", "code": "@Test void testLong()throws Exception{String expected=\"tBZn\"+\"\"+\"\"+ \"\" + \"-63\"+\"tAX\\n\"+\"085\"+\"8673\\n\"+\"n\" + \"5\\\\n\" + \"tNaN\" + \"-tNaN\\n\"; assertThat( \"select  abc\"); assertThat( \"select labc'\"); }", "n_tokens": 115, "n_pass": [1365, 377, 141]}
{"time": "2021-02-24 00:45:25.584112", "score": "0.1645", "loss": "8.2664", "code": "@Test void testLong()throws Exception{String expected=\"tBZn\"+\"\"+\"\"+ \"\" + \"-63\"+\"tAX\\n\"+\"085\"+\"8673\\n\"+\"\" + \"5\\\\n\" + \"tNaN\" + \"-tNaN\\n\"; assertThat( \"select  abc\"); assertThat( \"select labc'\"); }", "n_tokens": 114, "n_pass": [1367, 378, 142]}
{"time": "2021-02-24 00:45:28.316085", "score": "0.1645", "loss": "8.2664", "code": "@Test void testLong()throws Exception{String expected=\"tBZn\"+\"\"+\"\"+ \"\" + \"-63\"+\"tAX\\n\"+\"085\"+\"8673\\n\"+\"\"+ \"5\\\\n\" + \"tNaN\" + \"-tNaN\\n\"; assertThat( \"select  abc\"); assertThat( \"select labc'\"); }", "n_tokens": 113, "n_pass": [1369, 379, 143]}
{"time": "2021-02-24 00:45:31.101824", "score": "0.1645", "loss": "8.2664", "code": "@Test void testLong()throws Exception{String expected=\"tBZn\"+\"\"+\"\"+ \"\" + \"-63\"+\"tAX\\n\"+\"085\"+\"8673\\n\"+\"\"+\"5\\\\n\" + \"tNaN\" + \"-tNaN\\n\"; assertThat( \"select  abc\"); assertThat( \"select labc'\"); }", "n_tokens": 112, "n_pass": [1371, 380, 144]}
{"time": "2021-02-24 00:45:42.156719", "score": "0.1645", "loss": "8.2664", "code": "@Test void testLong()throws Exception{String expected=\"tBZn\"+\"\"+\"\"+ \"\" + \"-63\"+\"tAX\\n\"+\"085\"+\"8673\\n\"+\"\"+\"5\\\\\" + \"tNaN\" + \"-tNaN\\n\"; assertThat( \"select  abc\"); assertThat( \"select labc'\"); }", "n_tokens": 111, "n_pass": [1376, 384, 145]}
{"time": "2021-02-24 00:45:44.928783", "score": "0.1645", "loss": "8.2664", "code": "@Test void testLong()throws Exception{String expected=\"tBZn\"+\"\"+\"\"+ \"\" + \"-63\"+\"tAX\\n\"+\"085\"+\"8673\\n\"+\"\"+\"5\\\\\"+ \"tNaN\" + \"-tNaN\\n\"; assertThat( \"select  abc\"); assertThat( \"select labc'\"); }", "n_tokens": 110, "n_pass": [1378, 385, 146]}
{"time": "2021-02-24 00:45:47.808234", "score": "0.1645", "loss": "8.2664", "code": "@Test void testLong()throws Exception{String expected=\"tBZn\"+\"\"+\"\"+ \"\" + \"-63\"+\"tAX\\n\"+\"085\"+\"8673\\n\"+\"\"+\"5\\\\\"+\"tNaN\" + \"-tNaN\\n\"; assertThat( \"select  abc\"); assertThat( \"select labc'\"); }", "n_tokens": 109, "n_pass": [1380, 386, 147]}
{"time": "2021-02-24 00:45:53.386159", "score": "0.1645", "loss": "8.2664", "code": "@Test void testLong()throws Exception{String expected=\"tBZn\"+\"\"+\"\"+ \"\" + \"-63\"+\"tAX\\n\"+\"085\"+\"8673\\n\"+\"\"+\"5\\\\\"+\"tNaN\"+ \"-tNaN\\n\"; assertThat( \"select  abc\"); assertThat( \"select labc'\"); }", "n_tokens": 108, "n_pass": [1384, 388, 148]}
{"time": "2021-02-24 00:45:56.209339", "score": "0.1645", "loss": "8.2664", "code": "@Test void testLong()throws Exception{String expected=\"tBZn\"+\"\"+\"\"+ \"\" + \"-63\"+\"tAX\\n\"+\"085\"+\"8673\\n\"+\"\"+\"5\\\\\"+\"tNaN\"+\"-tNaN\\n\"; assertThat( \"select  abc\"); assertThat( \"select labc'\"); }", "n_tokens": 107, "n_pass": [1386, 389, 149]}
{"time": "2021-02-24 00:45:58.949943", "score": "0.1645", "loss": "8.2664", "code": "@Test void testLong()throws Exception{String expected=\"tBZn\"+\"\"+\"\"+ \"\" + \"-63\"+\"tAX\\n\"+\"085\"+\"8673\\n\"+\"\"+\"5\\\\\"+\"tNaN\"+\"tNaN\\n\"; assertThat( \"select  abc\"); assertThat( \"select labc'\"); }", "n_tokens": 106, "n_pass": [1388, 390, 150]}
{"time": "2021-02-24 00:46:04.485527", "score": "0.1645", "loss": "8.2664", "code": "@Test void testLong()throws Exception{String expected=\"tBZn\"+\"\"+\"\"+ \"\" + \"-63\"+\"tAX\\n\"+\"085\"+\"8673\\n\"+\"\"+\"5\\\\\"+\"tNaN\"+\"tNaNn\"; assertThat( \"select  abc\"); assertThat( \"select labc'\"); }", "n_tokens": 105, "n_pass": [1390, 392, 151]}
{"time": "2021-02-24 00:46:07.262165", "score": "0.1645", "loss": "8.2664", "code": "@Test void testLong()throws Exception{String expected=\"tBZn\"+\"\"+\"\"+ \"\" + \"-63\"+\"tAX\\n\"+\"085\"+\"8673\\n\"+\"\"+\"5\\\\\"+\"tNaN\"+\"tNaN\"; assertThat( \"select  abc\"); assertThat( \"select labc'\"); }", "n_tokens": 104, "n_pass": [1391, 393, 152]}
{"time": "2021-02-24 00:46:10.034136", "score": "0.1645", "loss": "8.2664", "code": "@Test void testLong()throws Exception{String expected=\"tBZn\"+\"\"+\"\"+ \"\" + \"-63\"+\"tAX\\n\"+\"085\"+\"8673\\n\"+\"\"+\"5\\\\\"+\"tNaN\"+\"tNaN\";assertThat( \"select  abc\"); assertThat( \"select labc'\"); }", "n_tokens": 103, "n_pass": [1394, 394, 153]}
{"time": "2021-02-24 00:46:12.806505", "score": "0.2139", "loss": "7.9508", "code": "@Test void testLong()throws Exception{String expected=\"tBZn\"+\"\"+\"\"+ \"\" + \"-63\"+\"tAX\\n\"+\"085\"+\"8673\\n\"+\"\"+\"5\\\\\"+\"tNaN\"+\"tNaN\";( \"select  abc\"); assertThat( \"select labc'\"); }", "n_tokens": 102, "n_pass": [1395, 395, 154]}
{"time": "2021-02-24 00:46:15.586250", "score": "0.2139", "loss": "7.9508", "code": "@Test void testLong()throws Exception{String expected=\"tBZn\"+\"\"+\"\"+ \"\" + \"-63\"+\"tAX\\n\"+\"085\"+\"8673\\n\"+\"\"+\"5\\\\\"+\"tNaN\"+\"tNaN\";(\"select  abc\"); assertThat( \"select labc'\"); }", "n_tokens": 101, "n_pass": [1397, 396, 155]}
{"time": "2021-02-24 00:46:18.329500", "score": "0.2035", "loss": "7.9174", "code": "@Test void testLong()throws Exception{String expected=\"tBZn\"+\"\"+\"\"+ \"\" + \"-63\"+\"tAX\\n\"+\"085\"+\"8673\\n\"+\"\"+\"5\\\\\"+\"tNaN\"+\"tNaN\";(\"  abc\"); assertThat( \"select labc'\"); }", "n_tokens": 100, "n_pass": [1399, 397, 156]}
{"time": "2021-02-24 00:46:21.073539", "score": "0.2035", "loss": "7.9174", "code": "@Test void testLong()throws Exception{String expected=\"tBZn\"+\"\"+\"\"+ \"\" + \"-63\"+\"tAX\\n\"+\"085\"+\"8673\\n\"+\"\"+\"5\\\\\"+\"tNaN\"+\"tNaN\";(\" abc\"); assertThat( \"select labc'\"); }", "n_tokens": 99, "n_pass": [1400, 398, 157]}
{"time": "2021-02-24 00:46:23.836689", "score": "0.2035", "loss": "7.9174", "code": "@Test void testLong()throws Exception{String expected=\"tBZn\"+\"\"+\"\"+ \"\" + \"-63\"+\"tAX\\n\"+\"085\"+\"8673\\n\"+\"\"+\"5\\\\\"+\"tNaN\"+\"tNaN\";(\"abc\"); assertThat( \"select labc'\"); }", "n_tokens": 98, "n_pass": [1401, 399, 158]}
{"time": "2021-02-24 00:46:26.583650", "score": "0.2123", "loss": "7.9339", "code": "@Test void testLong()throws Exception{String expected=\"tBZn\"+\"\"+\"\"+ \"\" + \"-63\"+\"tAX\\n\"+\"085\"+\"8673\\n\"+\"\"+\"5\\\\\"+\"tNaN\"+\"tNaN\";(\"\"); assertThat( \"select labc'\"); }", "n_tokens": 97, "n_pass": [1402, 400, 159]}
{"time": "2021-02-24 00:46:29.383173", "score": "0.2123", "loss": "7.9339", "code": "@Test void testLong()throws Exception{String expected=\"tBZn\"+\"\"+\"\"+ \"\" + \"-63\"+\"tAX\\n\"+\"085\"+\"8673\\n\"+\"\"+\"5\\\\\"+\"tNaN\"+\"tNaN\";(\"\");assertThat( \"select labc'\"); }", "n_tokens": 96, "n_pass": [1406, 401, 160]}
{"time": "2021-02-24 00:46:34.950541", "score": "0.2123", "loss": "7.9339", "code": "@Test void testLong()throws Exception{String expected=\"tBZn\"+\"\"+\"\"+ \"\" + \"-63\"+\"tAX\\n\"+\"085\"+\"8673\\n\"+\"\"+\"5\\\\\"+\"tNaN\"+\"tNaN\";(\"\");assertThat(\"select labc'\"); }", "n_tokens": 95, "n_pass": [1409, 403, 161]}
{"time": "2021-02-24 00:46:40.500151", "score": "0.2123", "loss": "7.9339", "code": "@Test void testLong()throws Exception{String expected=\"tBZn\"+\"\"+\"\"+ \"\" + \"-63\"+\"tAX\\n\"+\"085\"+\"8673\\n\"+\"\"+\"5\\\\\"+\"tNaN\"+\"tNaN\";(\"\");assertThat(\"selectlabc'\"); }", "n_tokens": 94, "n_pass": [1412, 405, 162]}
{"time": "2021-02-24 00:46:43.260690", "score": "0.2123", "loss": "7.9339", "code": "@Test void testLong()throws Exception{String expected=\"tBZn\"+\"\"+\"\"+ \"\" + \"-63\"+\"tAX\\n\"+\"085\"+\"8673\\n\"+\"\"+\"5\\\\\"+\"tNaN\"+\"tNaN\";(\"\");assertThat(\"selectabc'\"); }", "n_tokens": 93, "n_pass": [1413, 406, 163]}
{"time": "2021-02-24 00:46:48.863730", "score": "0.2123", "loss": "7.9339", "code": "@Test void testLong()throws Exception{String expected=\"tBZn\"+\"\"+\"\"+ \"\" + \"-63\"+\"tAX\\n\"+\"085\"+\"8673\\n\"+\"\"+\"5\\\\\"+\"tNaN\"+\"tNaN\";(\"\");assertThat(\"selectabc\"); }", "n_tokens": 92, "n_pass": [1415, 408, 164]}
{"time": "2021-02-24 00:46:51.634341", "score": "0.2123", "loss": "7.9339", "code": "@Test void testLong()throws Exception{String expected=\"tBZn\"+\"\"+\"\"+ \"\" + \"-63\"+\"tAX\\n\"+\"085\"+\"8673\\n\"+\"\"+\"5\\\\\"+\"tNaN\"+\"tNaN\";(\"\");assertThat(\"selectabc\");}", "n_tokens": 91, "n_pass": [1419, 409, 165]}
{"time": "2021-02-24 00:47:03.951114", "score": "0.1887", "loss": "7.8081", "code": "@Test void testLong()throws Exception{String expected=\"n\"+\"\"+\"\"+ \"\" + \"-63\"+\"tAX\\n\"+\"085\"+\"8673\\n\"+\"\"+\"5\\\\\"+\"tNaN\"+\"tNaN\";(\"\");assertThat(\"selectabc\");}", "n_tokens": 90, "n_pass": [1438, 413, 166]}
{"time": "2021-02-24 00:47:06.803203", "score": "0.1987", "loss": "7.8733", "code": "@Test void testLong()throws Exception{String expected=\"\"+\"\"+\"\"+ \"\" + \"-63\"+\"tAX\\n\"+\"085\"+\"8673\\n\"+\"\"+\"5\\\\\"+\"tNaN\"+\"tNaN\";(\"\");assertThat(\"selectabc\");}", "n_tokens": 89, "n_pass": [1439, 414, 167]}
{"time": "2021-02-24 00:47:09.560601", "score": "0.1987", "loss": "7.8733", "code": "@Test void testLong()throws Exception{String expected=\"\"+\"\"+\"\"+\"\" + \"-63\"+\"tAX\\n\"+\"085\"+\"8673\\n\"+\"\"+\"5\\\\\"+\"tNaN\"+\"tNaN\";(\"\");assertThat(\"selectabc\");}", "n_tokens": 88, "n_pass": [1448, 415, 168]}
{"time": "2021-02-24 00:47:12.360898", "score": "0.1987", "loss": "7.8733", "code": "@Test void testLong()throws Exception{String expected=\"\"+\"\"+\"\"+\"\"+ \"-63\"+\"tAX\\n\"+\"085\"+\"8673\\n\"+\"\"+\"5\\\\\"+\"tNaN\"+\"tNaN\";(\"\");assertThat(\"selectabc\");}", "n_tokens": 87, "n_pass": [1451, 416, 169]}
{"time": "2021-02-24 00:47:15.139984", "score": "0.1987", "loss": "7.8733", "code": "@Test void testLong()throws Exception{String expected=\"\"+\"\"+\"\"+\"\"+\"-63\"+\"tAX\\n\"+\"085\"+\"8673\\n\"+\"\"+\"5\\\\\"+\"tNaN\"+\"tNaN\";(\"\");assertThat(\"selectabc\");}", "n_tokens": 86, "n_pass": [1453, 417, 170]}
{"time": "2021-02-24 00:47:29.008967", "score": "0.2094", "loss": "8.4104", "code": "@Test void testLong()throws Exception{String expected=\"\"+\"\"+\"\"+\"\"+\"-63\"+\"tAXn\"+\"085\"+\"8673\\n\"+\"\"+\"5\\\\\"+\"tNaN\"+\"tNaN\";(\"\");assertThat(\"selectabc\");}", "n_tokens": 85, "n_pass": [1462, 422, 171]}
{"time": "2021-02-24 00:47:31.793699", "score": "0.1987", "loss": "7.8733", "code": "@Test void testLong()throws Exception{String expected=\"\"+\"\"+\"\"+\"\"+\"-63\"+\"tAX\"+\"085\"+\"8673\\n\"+\"\"+\"5\\\\\"+\"tNaN\"+\"tNaN\";(\"\");assertThat(\"selectabc\");}", "n_tokens": 84, "n_pass": [1463, 423, 172]}
{"time": "2021-02-24 00:47:54.095259", "score": "0.1515", "loss": "7.8106", "code": "@Test void testLong()throws Exception{String expected=\"\"+\"\"+\"\"+\"\"+\"-63\"+\"tAX\"+\"085\"+\"8673n\"+\"\"+\"5\\\\\"+\"tNaN\"+\"tNaN\";(\"\");assertThat(\"selectabc\");}", "n_tokens": 83, "n_pass": [1477, 431, 173]}
{"time": "2021-02-24 00:47:56.835706", "score": "0.1987", "loss": "7.8733", "code": "@Test void testLong()throws Exception{String expected=\"\"+\"\"+\"\"+\"\"+\"-63\"+\"tAX\"+\"085\"+\"8673\"+\"\"+\"5\\\\\"+\"tNaN\"+\"tNaN\";(\"\");assertThat(\"selectabc\");}", "n_tokens": 82, "n_pass": [1478, 432, 174]}

Minimal simplified code:
@Test void testLong()throws Exception{String expected=""+""+""+""+"-63"+"tAX"+"085"+"8673"+""+"5\\"+"tNaN"+"tNaN";("");assertThat("selectabc");}

