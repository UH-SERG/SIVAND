
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/bluestreak01__questdb/core/src/test/java/com/questdb/parser/sql/QueryParserTest_testUnderTerminatedOver.java
method_name = testUnderTerminatedOver
method_body = @Test public void testUnderTerminatedOver() { try { parser.parse("select a,b, f(c) my over (partition by b order by ts from xyz"); Assert.fail(); } catch (ParserException e) { Assert.assertEquals(53, QueryError.getPosition()); } }
predict, score, loss = run, 0.6286761164665222, 20.264184951782227

Trace of simplified code(s):
{"time": "2021-02-23 20:17:24.917500", "score": "0.6287", "loss": "20.2642", "code": "@Test public void testUnderTerminatedOver() { try { parser.parse(\"select a,b, f(c) my over (partition by b order by ts from xyz\"); Assert.fail(); } catch (ParserException e) { Assert.assertEquals(53, QueryError.getPosition()); } }", "n_tokens": 96, "n_pass": [1, 1, 1]}
{"time": "2021-02-23 20:17:27.569489", "score": "0.6287", "loss": "20.2642", "code": "@Test public void testUnderTerminatedOver() { try { parser.parse(\"select  ts from xyz\"); Assert.fail(); } catch (ParserException e) { Assert.assertEquals(53, QueryError.getPosition()); } }", "n_tokens": 72, "n_pass": [9, 2, 2]}
{"time": "2021-02-23 20:17:30.268313", "score": "0.6389", "loss": "20.1", "code": "@Test public void testUnderTerminatedOver() { try { parser.parse(\"select \"); Assert.fail(); } catch (ParserException e) { Assert.assertEquals(53, QueryError.getPosition()); } }", "n_tokens": 66, "n_pass": [36, 3, 3]}
{"time": "2021-02-23 20:17:33.345083", "score": "0.7506", "loss": "20.2386", "code": "@Test public void testUnderTerminatedOver() { try { parser.parse(\"select \");fail(); } catch (ParserException e) { Assert.assertEquals(53, QueryError.getPosition()); } }", "n_tokens": 63, "n_pass": [70, 4, 4]}
{"time": "2021-02-23 20:17:35.997041", "score": "0.7359", "loss": "20.6482", "code": "@Test public void testUnderTerminatedOver() { try { parser.parse(\"select \");; } catch (ParserException e) { Assert.assertEquals(53, QueryError.getPosition()); } }", "n_tokens": 60, "n_pass": [71, 5, 5]}
{"time": "2021-02-23 20:17:41.334048", "score": "0.8492", "loss": "19.7166", "code": "@Test public void testUnderTerminatedOver() { try { parser.parse(\"select \");; } catch (ParserException e) { Assert.assertEquals(53,getPosition()); } }", "n_tokens": 57, "n_pass": [79, 7, 6]}
{"time": "2021-02-23 20:17:44.004633", "score": "0.7638", "loss": "18.1246", "code": "public void testUnderTerminatedOver() { try { parser.parse(\"select \");; } catch (ParserException e) { Assert.assertEquals(53,getPosition()); } }", "n_tokens": 54, "n_pass": [83, 8, 7]}
{"time": "2021-02-23 20:17:47.093435", "score": "0.9011", "loss": "19.2393", "code": "public void testUnderTerminatedOver() { try { parser.parse(\"select \");; } catch (ParserException e) { Assert.assertEquals(getPosition()); } }", "n_tokens": 51, "n_pass": [98, 9, 8]}
{"time": "2021-02-23 20:17:49.737492", "score": "0.8867", "loss": "19.3894", "code": "public void testUnderTerminatedOver() { try { parser.parse(\"select \");; } catch (ParserException e) { Assert.assertEquals(); } }", "n_tokens": 48, "n_pass": [99, 10, 9]}
{"time": "2021-02-23 20:17:55.524358", "score": "0.8867", "loss": "19.3894", "code": " void testUnderTerminatedOver() { try { parser.parse(\"select \");; } catch (ParserException e) { Assert.assertEquals(); } }", "n_tokens": 47, "n_pass": [152, 11, 10]}
{"time": "2021-02-23 20:17:58.162062", "score": "0.8867", "loss": "19.3894", "code": "void testUnderTerminatedOver() { try { parser.parse(\"select \");; } catch (ParserException e) { Assert.assertEquals(); } }", "n_tokens": 46, "n_pass": [153, 12, 11]}
{"time": "2021-02-23 20:18:01.224494", "score": "0.8867", "loss": "19.3894", "code": "void testUnderTerminatedOver(){ try { parser.parse(\"select \");; } catch (ParserException e) { Assert.assertEquals(); } }", "n_tokens": 45, "n_pass": [158, 13, 12]}
{"time": "2021-02-23 20:18:03.863876", "score": "0.8867", "loss": "19.3894", "code": "void testUnderTerminatedOver(){try { parser.parse(\"select \");; } catch (ParserException e) { Assert.assertEquals(); } }", "n_tokens": 44, "n_pass": [160, 14, 13]}
{"time": "2021-02-23 20:18:06.503388", "score": "0.8867", "loss": "19.3894", "code": "void testUnderTerminatedOver(){try{ parser.parse(\"select \");; } catch (ParserException e) { Assert.assertEquals(); } }", "n_tokens": 43, "n_pass": [162, 15, 14]}
{"time": "2021-02-23 20:18:09.161298", "score": "0.8867", "loss": "19.3894", "code": "void testUnderTerminatedOver(){try{parser.parse(\"select \");; } catch (ParserException e) { Assert.assertEquals(); } }", "n_tokens": 42, "n_pass": [164, 16, 15]}
{"time": "2021-02-23 20:18:14.466574", "score": "0.8867", "loss": "19.3894", "code": "void testUnderTerminatedOver(){try{parser.parse(\"select \");} catch (ParserException e) { Assert.assertEquals(); } }", "n_tokens": 40, "n_pass": [171, 18, 16]}
{"time": "2021-02-23 20:18:17.118999", "score": "0.8924", "loss": "19.4728", "code": "void testUnderTerminatedOver(){try{parser.parse(\"select \");} catch (ParserException e) { assertEquals(); } }", "n_tokens": 38, "n_pass": [178, 19, 17]}
{"time": "2021-02-23 20:18:27.097030", "score": "0.8924", "loss": "19.4728", "code": "void testUnderTerminatedOver(){try{parser.parse(\"select \");} catch (ParserException e) { assertEquals();} }", "n_tokens": 37, "n_pass": [234, 21, 18]}
{"time": "2021-02-23 20:18:29.742316", "score": "0.8924", "loss": "19.4728", "code": "void testUnderTerminatedOver(){try{parser.parse(\"select \");} catch (ParserException e) { assertEquals();}}", "n_tokens": 36, "n_pass": [235, 22, 19]}
{"time": "2021-02-23 20:18:38.498130", "score": "0.8924", "loss": "19.4728", "code": "void testUnderTerminatedOver(){try{parser.parse(\"select\");} catch (ParserException e) { assertEquals();}}", "n_tokens": 35, "n_pass": [251, 25, 20]}
{"time": "2021-02-23 20:18:41.172038", "score": "0.8924", "loss": "19.4728", "code": "void testUnderTerminatedOver(){try{parser.parse(\"select\");}catch (ParserException e) { assertEquals();}}", "n_tokens": 34, "n_pass": [256, 26, 21]}
{"time": "2021-02-23 20:18:43.816270", "score": "0.8924", "loss": "19.4728", "code": "void testUnderTerminatedOver(){try{parser.parse(\"select\");}catch(ParserException e) { assertEquals();}}", "n_tokens": 33, "n_pass": [258, 27, 22]}
{"time": "2021-02-23 20:18:46.449908", "score": "0.8924", "loss": "19.4728", "code": "void testUnderTerminatedOver(){try{parser.parse(\"select\");}catch(ParserException e){ assertEquals();}}", "n_tokens": 32, "n_pass": [264, 28, 23]}
{"time": "2021-02-23 20:18:49.088081", "score": "0.8924", "loss": "19.4728", "code": "void testUnderTerminatedOver(){try{parser.parse(\"select\");}catch(ParserException e){assertEquals();}}", "n_tokens": 31, "n_pass": [266, 29, 24]}

Minimal simplified code:
void testUnderTerminatedOver(){try{parser.parse("select");}catch(ParserException e){assertEquals();}}

