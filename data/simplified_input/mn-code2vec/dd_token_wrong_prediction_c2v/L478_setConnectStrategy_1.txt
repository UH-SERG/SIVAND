
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/kaazing__gateway/service/proxy/src/main/java/org/kaazing/gateway/service/proxy/AbstractProxyHandler_setConnectStrategy.java
method_name = setConnectStrategy
method_body = protected void setConnectStrategy(Strategy connectStrategy, int preparedConnectionCount, int maxConnectionCount) { this.connectStrategy = ProxyConnectStrategy.newInstance(connectStrategy, preparedConnectionCount, maxConnectionCount); if (LOGGER.isDebugEnabled()) { LOGGER.debug("Proxy handler " + this + ": connect.strategy=" + connectStrategy + "."); } }
predict, score, loss = init, 0.38921383023262024, 15.526263236999512

Trace of simplified code(s):
{"time": "2021-02-23 06:10:53.818107", "score": "0.3892", "loss": "15.5263", "code": "protected void setConnectStrategy(Strategy connectStrategy, int preparedConnectionCount, int maxConnectionCount) { this.connectStrategy = ProxyConnectStrategy.newInstance(connectStrategy, preparedConnectionCount, maxConnectionCount); if (LOGGER.isDebugEnabled()) { LOGGER.debug(\"Proxy handler \" + this + \": connect.strategy=\" + connectStrategy + \".\"); } }", "n_tokens": 96, "n_pass": [1, 1, 1]}
{"time": "2021-02-23 06:10:56.568083", "score": "0.3852", "loss": "15.5871", "code": "protected void setConnectStrategy(Strategy connectStrategy, int preparedConnectionCount, int maxConnectionCount) { this.connectStrategy = ProxyConnectStrategy.newInstance(connectStrategy, preparedConnectionCount, maxConnectionCount); if (LOGGER.isDebugEnabled()) { LOGGER.debug(\"Proxy handler \" + this +  + \".\"); } }", "n_tokens": 84, "n_pass": [26, 2, 2]}
{"time": "2021-02-23 06:11:02.008804", "score": "0.3196", "loss": "14.6475", "code": "protected void setConnectStrategy(Strategy connectStrategy, int preparedConnectionCount, int maxConnectionCount) { this.connectStrategy = ProxyConnectStrategy.newInstance(connectStrategy, preparedConnectionCount, maxConnectionCount); if (LOGGER.isDebugEnabled()) { LOGGER.debug(\"Proxy handler \"  + \".\"); } }", "n_tokens": 78, "n_pass": [60, 4, 3]}
{"time": "2021-02-23 06:11:04.705918", "score": "0.3183", "loss": "15.1782", "code": "protected void setConnectStrategy(Strategy connectStrategy, int preparedConnectionCount, int maxConnectionCount) { this.connectStrategy = ProxyConnectStrategy.newInstance(connectStrategy, preparedConnectionCount, maxConnectionCount); if (LOGGER.isDebugEnabled()) { LOGGER.debug(\"Proxy handler \" ); } }", "n_tokens": 72, "n_pass": [61, 5, 4]}
{"time": "2021-02-23 06:11:21.804849", "score": "0.2983", "loss": "16.6009", "code": "protected void setConnectStrategy(Strategy connectStrategy, int preparedConnectionCount, int maxConnectionCount) { this.connectStrategy = ProxyConnectStrategy.newInstance(connectStrategy, preparedConnectionCount, maxConnectionCount); if (LOGGER.isDebugEnabled()) { LOGGER.debug(\" \" ); } }", "n_tokens": 69, "n_pass": [120, 11, 5]}
{"time": "2021-02-23 06:11:28.059849", "score": "0.2794", "loss": "16.1951", "code": "protected void setConnectStrategy(Strategy connectStrategy, int preparedConnectionCount, int maxConnectionCount) { this.connectStrategy = ProxyConnectStrategy.newInstance(preparedConnectionCount, maxConnectionCount); if (LOGGER.isDebugEnabled()) { LOGGER.debug(\" \" ); } }", "n_tokens": 66, "n_pass": [134, 13, 6]}
{"time": "2021-02-23 06:11:30.759586", "score": "0.3109", "loss": "16.1944", "code": "protected void setConnectStrategy(Strategy connectStrategy, int preparedConnectionCount, int maxConnectionCount) { this.connectStrategy = ProxyConnectStrategy.newInstance(maxConnectionCount); if (LOGGER.isDebugEnabled()) { LOGGER.debug(\" \" ); } }", "n_tokens": 63, "n_pass": [135, 14, 7]}
{"time": "2021-02-23 06:11:33.474891", "score": "0.2923", "loss": "16.2149", "code": "protected void setConnectStrategy(Strategy connectStrategy, int preparedConnectionCount, int maxConnectionCount) { this.connectStrategy = ProxyConnectStrategy.newInstance(maxConnectionCount); if (LOGGER.isDebugEnabled()) {debug(\" \" ); } }", "n_tokens": 60, "n_pass": [141, 15, 8]}
{"time": "2021-02-23 06:11:42.529643", "score": "0.2923", "loss": "16.2149", "code": " void setConnectStrategy(Strategy connectStrategy, int preparedConnectionCount, int maxConnectionCount) { this.connectStrategy = ProxyConnectStrategy.newInstance(maxConnectionCount); if (LOGGER.isDebugEnabled()) {debug(\" \" ); } }", "n_tokens": 59, "n_pass": [210, 17, 9]}
{"time": "2021-02-23 06:11:45.221720", "score": "0.2923", "loss": "16.2149", "code": "void setConnectStrategy(Strategy connectStrategy, int preparedConnectionCount, int maxConnectionCount) { this.connectStrategy = ProxyConnectStrategy.newInstance(maxConnectionCount); if (LOGGER.isDebugEnabled()) {debug(\" \" ); } }", "n_tokens": 58, "n_pass": [211, 18, 10]}
{"time": "2021-02-23 06:11:48.339301", "score": "0.2923", "loss": "16.2149", "code": "void setConnectStrategy(Strategy connectStrategy,int preparedConnectionCount, int maxConnectionCount) { this.connectStrategy = ProxyConnectStrategy.newInstance(maxConnectionCount); if (LOGGER.isDebugEnabled()) {debug(\" \" ); } }", "n_tokens": 57, "n_pass": [219, 19, 11]}
{"time": "2021-02-23 06:11:51.041125", "score": "0.2923", "loss": "16.2149", "code": "void setConnectStrategy(Strategy connectStrategy,int preparedConnectionCount,int maxConnectionCount) { this.connectStrategy = ProxyConnectStrategy.newInstance(maxConnectionCount); if (LOGGER.isDebugEnabled()) {debug(\" \" ); } }", "n_tokens": 56, "n_pass": [224, 20, 12]}
{"time": "2021-02-23 06:11:56.866784", "score": "0.1996", "loss": "15.5816", "code": "void setConnectStrategy(Strategy connectStrategy,int preparedConnectionCount,int maxConnectionCount) { this.connectStrategy = ProxyConnectStrategy.newInstance(maxConnectionCount); if (isDebugEnabled()) {debug(\" \" ); } }", "n_tokens": 54, "n_pass": [239, 22, 13]}
{"time": "2021-02-23 06:12:08.687156", "score": "0.1996", "loss": "15.5816", "code": "void setConnectStrategy(Strategy connectStrategy,int preparedConnectionCount,int maxConnectionCount) { this.connectStrategy = ProxyConnectStrategy.newInstance(maxConnectionCount); if (isDebugEnabled()){debug(\" \" ); } }", "n_tokens": 53, "n_pass": [313, 24, 14]}
{"time": "2021-02-23 06:12:11.401170", "score": "0.2308", "loss": "15.8949", "code": "void setConnectStrategy(Strategy connectStrategy,int preparedConnectionCount,int maxConnectionCount) { this.connectStrategy = ProxyConnectStrategy.newInstance(maxConnectionCount); if (isDebugEnabled()){(\" \" ); } }", "n_tokens": 52, "n_pass": [314, 25, 15]}
{"time": "2021-02-23 06:12:14.108973", "score": "0.2314", "loss": "15.8878", "code": "void setConnectStrategy(Strategy connectStrategy,int preparedConnectionCount,int maxConnectionCount) { this.connectStrategy = ProxyConnectStrategy.newInstance(maxConnectionCount); if (isDebugEnabled()){(\"\" ); } }", "n_tokens": 51, "n_pass": [317, 26, 16]}
{"time": "2021-02-23 06:12:16.809910", "score": "0.2314", "loss": "15.8878", "code": "void setConnectStrategy(Strategy connectStrategy,int preparedConnectionCount,int maxConnectionCount) { this.connectStrategy = ProxyConnectStrategy.newInstance(maxConnectionCount); if (isDebugEnabled()){(\"\"); } }", "n_tokens": 50, "n_pass": [319, 27, 17]}
{"time": "2021-02-23 06:12:19.513841", "score": "0.2314", "loss": "15.8878", "code": "void setConnectStrategy(Strategy connectStrategy,int preparedConnectionCount,int maxConnectionCount) { this.connectStrategy = ProxyConnectStrategy.newInstance(maxConnectionCount); if (isDebugEnabled()){(\"\");} }", "n_tokens": 49, "n_pass": [322, 28, 18]}
{"time": "2021-02-23 06:12:22.228776", "score": "0.2314", "loss": "15.8878", "code": "void setConnectStrategy(Strategy connectStrategy,int preparedConnectionCount,int maxConnectionCount) { this.connectStrategy = ProxyConnectStrategy.newInstance(maxConnectionCount); if (isDebugEnabled()){(\"\");}}", "n_tokens": 48, "n_pass": [324, 29, 19]}
{"time": "2021-02-23 06:12:25.779780", "score": "0.2314", "loss": "15.8878", "code": "void setConnectStrategy(Strategy connectStrategy,int preparedConnectionCount,int maxConnectionCount){ this.connectStrategy = ProxyConnectStrategy.newInstance(maxConnectionCount); if (isDebugEnabled()){(\"\");}}", "n_tokens": 47, "n_pass": [342, 30, 20]}
{"time": "2021-02-23 06:12:28.484673", "score": "0.2314", "loss": "15.8878", "code": "void setConnectStrategy(Strategy connectStrategy,int preparedConnectionCount,int maxConnectionCount){this.connectStrategy = ProxyConnectStrategy.newInstance(maxConnectionCount); if (isDebugEnabled()){(\"\");}}", "n_tokens": 46, "n_pass": [344, 31, 21]}
{"time": "2021-02-23 06:12:33.913283", "score": "0.2314", "loss": "15.8878", "code": "void setConnectStrategy(Strategy connectStrategy,int preparedConnectionCount,int maxConnectionCount){this.connectStrategy= ProxyConnectStrategy.newInstance(maxConnectionCount); if (isDebugEnabled()){(\"\");}}", "n_tokens": 45, "n_pass": [348, 33, 22]}
{"time": "2021-02-23 06:12:36.620265", "score": "0.2314", "loss": "15.8878", "code": "void setConnectStrategy(Strategy connectStrategy,int preparedConnectionCount,int maxConnectionCount){this.connectStrategy=ProxyConnectStrategy.newInstance(maxConnectionCount); if (isDebugEnabled()){(\"\");}}", "n_tokens": 44, "n_pass": [350, 34, 23]}
{"time": "2021-02-23 06:12:42.000515", "score": "0.2639", "loss": "16.0011", "code": "void setConnectStrategy(Strategy connectStrategy,int preparedConnectionCount,int maxConnectionCount){this.connectStrategy=ProxyConnectStrategy.newInstance(); if (isDebugEnabled()){(\"\");}}", "n_tokens": 43, "n_pass": [355, 36, 24]}
{"time": "2021-02-23 06:12:44.690565", "score": "0.2639", "loss": "16.0011", "code": "void setConnectStrategy(Strategy connectStrategy,int preparedConnectionCount,int maxConnectionCount){this.connectStrategy=ProxyConnectStrategy.newInstance();if (isDebugEnabled()){(\"\");}}", "n_tokens": 42, "n_pass": [358, 37, 25]}
{"time": "2021-02-23 06:12:47.397119", "score": "0.2639", "loss": "16.0011", "code": "void setConnectStrategy(Strategy connectStrategy,int preparedConnectionCount,int maxConnectionCount){this.connectStrategy=ProxyConnectStrategy.newInstance();if(isDebugEnabled()){(\"\");}}", "n_tokens": 41, "n_pass": [360, 38, 26]}

Minimal simplified code:
void setConnectStrategy(Strategy connectStrategy,int preparedConnectionCount,int maxConnectionCount){this.connectStrategy=ProxyConnectStrategy.newInstance();if(isDebugEnabled()){("");}}

