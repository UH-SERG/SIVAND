
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/bcgit__bc-java/pg/src/test/java/org/bouncycastle/openpgp/test/PGPECDHTest_performTest.java
method_name = performTest
method_body = public void performTest() throws Exception { PGPPublicKeyRing pubKeyRing = new PGPPublicKeyRing(testPubKey, new JcaKeyFingerprintCalculator()); doBasicKeyRingCheck(pubKeyRing); PGPSecretKeyRing secretKeyRing = new PGPSecretKeyRing(testPrivKey, new JcaKeyFingerprintCalculator()); testDecrypt(secretKeyRing); encryptDecryptTest(); encryptDecryptBCTest(); generate(); }
predict, score, loss = load, 0.9829733371734619, 15.293237686157227

Trace of simplified code(s):
{"time": "2021-02-23 03:09:56.533836", "score": "0.983", "loss": "15.2932", "code": "public void performTest() throws Exception { PGPPublicKeyRing pubKeyRing = new PGPPublicKeyRing(testPubKey, new JcaKeyFingerprintCalculator()); doBasicKeyRingCheck(pubKeyRing); PGPSecretKeyRing secretKeyRing = new PGPSecretKeyRing(testPrivKey, new JcaKeyFingerprintCalculator()); testDecrypt(secretKeyRing); encryptDecryptTest(); encryptDecryptBCTest(); generate(); }", "n_tokens": 84, "n_pass": [1, 1, 1]}
{"time": "2021-02-23 03:09:59.324055", "score": "0.9784", "loss": "14.8703", "code": "public void performTest() throws Exception { PGPPublicKeyRing pubKeyRing = new PGPPublicKeyRing(testPubKey, new JcaKeyFingerprintCalculator()); doBasicKeyRingCheck(pubKeyRing); PGPSecretKeyRing(secretKeyRing); encryptDecryptTest(); encryptDecryptBCTest(); generate(); }", "n_tokens": 63, "n_pass": [10, 2, 2]}
{"time": "2021-02-23 03:10:02.066831", "score": "0.5923", "loss": "13.3738", "code": "public void performTest() throws Exception { PGPPublicKeyRing pubKeyRing = new PGPPublicKeyRing(testPubKey, new JcaKeyFingerprintCalculator()); doBasicKeyRingCheck(pubKeyRing); encryptDecryptBCTest(); generate(); }", "n_tokens": 52, "n_pass": [19, 3, 3]}
{"time": "2021-02-23 03:10:04.809685", "score": "0.5331", "loss": "13.6684", "code": "public void performTest() throws Exception { PGPPublicKeyRing pubKeyRing = new PGPPublicKeyRing(testPubKey, new JcaKeyFingerprintCalculator()); doBasicKeyRingCheck(pubKeyRing);generate(); }", "n_tokens": 46, "n_pass": [35, 4, 4]}
{"time": "2021-02-23 03:10:07.608898", "score": "0.5349", "loss": "12.6144", "code": "public void performTest() throws Exception { PGPPublicKeyRing pubKeyRing = new PGPPublicKeyRing(testPubKey()); doBasicKeyRingCheck(pubKeyRing);generate(); }", "n_tokens": 41, "n_pass": [42, 5, 5]}
{"time": "2021-02-23 03:10:10.453474", "score": "0.3958", "loss": "13.3686", "code": "public void performTest() throws Exception { PGPPublicKeyRing pubKeyRing = new PGPPublicKeyRing(testPubKey()); generate(); }", "n_tokens": 36, "n_pass": [44, 6, 6]}
{"time": "2021-02-23 03:10:13.246749", "score": "0.276", "loss": "13.6975", "code": "public void performTest() throws Exception { PGPPublicKeyRing pubKeyRing = new PGPPublicKeyRing(testPubKey()); ; }", "n_tokens": 33, "n_pass": [66, 7, 7]}
{"time": "2021-02-23 03:10:16.044998", "score": "0.276", "loss": "13.6975", "code": "void performTest() throws Exception { PGPPublicKeyRing pubKeyRing = new PGPPublicKeyRing(testPubKey()); ; }", "n_tokens": 31, "n_pass": [67, 8, 8]}
{"time": "2021-02-23 03:10:28.909949", "score": "0.276", "loss": "13.6975", "code": "void performTest()throws Exception { PGPPublicKeyRing pubKeyRing = new PGPPublicKeyRing(testPubKey()); ; }", "n_tokens": 30, "n_pass": [109, 11, 9]}
{"time": "2021-02-23 03:10:31.678972", "score": "0.276", "loss": "13.6975", "code": "void performTest()throws Exception{ PGPPublicKeyRing pubKeyRing = new PGPPublicKeyRing(testPubKey()); ; }", "n_tokens": 29, "n_pass": [113, 12, 10]}
{"time": "2021-02-23 03:10:34.507159", "score": "0.276", "loss": "13.6975", "code": "void performTest()throws Exception{PGPPublicKeyRing pubKeyRing = new PGPPublicKeyRing(testPubKey()); ; }", "n_tokens": 28, "n_pass": [115, 13, 11]}
{"time": "2021-02-23 03:10:45.572418", "score": "0.276", "loss": "13.6975", "code": "void performTest()throws Exception{PGPPublicKeyRing pubKeyRing= new PGPPublicKeyRing(testPubKey()); ; }", "n_tokens": 27, "n_pass": [119, 17, 12]}
{"time": "2021-02-23 03:10:53.953909", "score": "0.276", "loss": "13.6975", "code": "void performTest()throws Exception{PGPPublicKeyRing pubKeyRing= new PGPPublicKeyRing(testPubKey()); }", "n_tokens": 25, "n_pass": [126, 20, 13]}
{"time": "2021-02-23 03:11:13.192864", "score": "0.276", "loss": "13.6975", "code": "void performTest()throws Exception{PGPPublicKeyRing pubKeyRing= new PGPPublicKeyRing(testPubKey());}", "n_tokens": 24, "n_pass": [158, 26, 14]}
{"time": "2021-02-23 03:11:25.192735", "score": "0.276", "loss": "13.6975", "code": "void performTest()throws Exception{PGPPublicKeyRing pubKeyRing=new PGPPublicKeyRing(testPubKey());}", "n_tokens": 23, "n_pass": [172, 30, 15]}

Minimal simplified code:
void performTest()throws Exception{PGPPublicKeyRing pubKeyRing=new PGPPublicKeyRing(testPubKey());}

