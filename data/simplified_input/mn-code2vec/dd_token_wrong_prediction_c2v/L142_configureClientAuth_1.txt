
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/codefollower__Tomcat-Research/java/org/apache/tomcat/util/net/jsse/JSSESocketFactory_configureClientAuth.java
method_name = configureClientAuth
method_body = protected void configureClientAuth(SSLServerSocket socket) { if (wantClientAuth) { socket.setWantClientAuth(wantClientAuth); } else { socket.setNeedClientAuth(requireClientAuth); } }
predict, score, loss = createSslSocket, 0.5833537578582764, 18.823352813720703

Trace of simplified code(s):
{"time": "2021-02-24 12:41:50.533455", "score": "0.5834", "loss": "18.8234", "code": "protected void configureClientAuth(SSLServerSocket socket) { if (wantClientAuth) { socket.setWantClientAuth(wantClientAuth); } else { socket.setNeedClientAuth(requireClientAuth); } }", "n_tokens": 46, "n_pass": [1, 1, 1]}
{"time": "2021-02-24 12:41:53.695149", "score": "0.614", "loss": "18.7484", "code": "protected void configureClientAuth(SSLServerSocket socket) { if (wantClientAuth) { socket.setWantClientAuth(wantClientAuth); socket.setNeedClientAuth(requireClientAuth); } }", "n_tokens": 40, "n_pass": [25, 2, 2]}
{"time": "2021-02-24 12:41:56.452776", "score": "0.4913", "loss": "18.2083", "code": "protected void configureClientAuth(SSLServerSocket socket) { if (wantClientAuth) { socket.setWantClientAuth(wantClientAuth);setNeedClientAuth(requireClientAuth); } }", "n_tokens": 37, "n_pass": [46, 3, 3]}
{"time": "2021-02-24 12:41:59.166761", "score": "0.4913", "loss": "18.2083", "code": "void configureClientAuth(SSLServerSocket socket) { if (wantClientAuth) { socket.setWantClientAuth(wantClientAuth);setNeedClientAuth(requireClientAuth); } }", "n_tokens": 35, "n_pass": [49, 4, 4]}
{"time": "2021-02-24 12:42:05.366963", "score": "0.4913", "loss": "18.2083", "code": "void configureClientAuth(SSLServerSocket socket){ if (wantClientAuth) { socket.setWantClientAuth(wantClientAuth);setNeedClientAuth(requireClientAuth); } }", "n_tokens": 34, "n_pass": [94, 5, 5]}
{"time": "2021-02-24 12:42:08.107978", "score": "0.4913", "loss": "18.2083", "code": "void configureClientAuth(SSLServerSocket socket){if (wantClientAuth) { socket.setWantClientAuth(wantClientAuth);setNeedClientAuth(requireClientAuth); } }", "n_tokens": 33, "n_pass": [96, 6, 6]}
{"time": "2021-02-24 12:42:10.832517", "score": "0.4913", "loss": "18.2083", "code": "void configureClientAuth(SSLServerSocket socket){if(wantClientAuth) { socket.setWantClientAuth(wantClientAuth);setNeedClientAuth(requireClientAuth); } }", "n_tokens": 32, "n_pass": [98, 7, 7]}
{"time": "2021-02-24 12:42:13.557290", "score": "0.3779", "loss": "18.1828", "code": "void configureClientAuth(SSLServerSocket socket){if(wantClientAuth) { setWantClientAuth(wantClientAuth);setNeedClientAuth(requireClientAuth); } }", "n_tokens": 30, "n_pass": [102, 8, 8]}
{"time": "2021-02-24 12:42:25.149601", "score": "0.3779", "loss": "18.1828", "code": "void configureClientAuth(SSLServerSocket socket){if(wantClientAuth) { setWantClientAuth(wantClientAuth);setNeedClientAuth(requireClientAuth);} }", "n_tokens": 29, "n_pass": [150, 11, 9]}
{"time": "2021-02-24 12:42:27.872460", "score": "0.3779", "loss": "18.1828", "code": "void configureClientAuth(SSLServerSocket socket){if(wantClientAuth) { setWantClientAuth(wantClientAuth);setNeedClientAuth(requireClientAuth);}}", "n_tokens": 28, "n_pass": [151, 12, 10]}
{"time": "2021-02-24 12:42:31.520390", "score": "0.3779", "loss": "18.1828", "code": "void configureClientAuth(SSLServerSocket socket){if(wantClientAuth){ setWantClientAuth(wantClientAuth);setNeedClientAuth(requireClientAuth);}}", "n_tokens": 27, "n_pass": [166, 13, 11]}
{"time": "2021-02-24 12:42:34.280959", "score": "0.3779", "loss": "18.1828", "code": "void configureClientAuth(SSLServerSocket socket){if(wantClientAuth){setWantClientAuth(wantClientAuth);setNeedClientAuth(requireClientAuth);}}", "n_tokens": 26, "n_pass": [168, 14, 12]}

Minimal simplified code:
void configureClientAuth(SSLServerSocket socket){if(wantClientAuth){setWantClientAuth(wantClientAuth);setNeedClientAuth(requireClientAuth);}}

