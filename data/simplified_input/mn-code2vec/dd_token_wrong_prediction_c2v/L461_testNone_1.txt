
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/dmfs__opentasks/opentasks-provider/src/test/java/org/dmfs/provider/tasks/processors/tasks/instancedata/StartDatedTest_testNone.java
method_name = testNone
method_body = @Test public void testNone() throws Exception { ContentValues instanceData = new StartDated(absent(), ContentValues::new).value(); assertThat(instanceData, new ContentValuesWithLong(TaskContract.Instances.INSTANCE_START, nullValue(Long.class))); assertThat(instanceData, new ContentValuesWithLong(TaskContract.Instances.INSTANCE_START_SORTING, nullValue(Long.class))); assertThat(instanceData.size(), is(0)); }
predict, score, loss = setUp, 0.8071030974388123, 16.39923667907715

Trace of simplified code(s):
{"time": "2021-02-24 09:48:21.226203", "score": "0.8048", "loss": "16.6313", "code": "@Test public void testNone() throws Exception { ContentValues instanceData = new StartDated(absent(), ContentValues::new).value(); assertThat(instanceData, new ContentValuesWithLong(TaskContract.Instances.INSTANCE_START, nullValue(Long.class))); assertThat(instanceData, new ContentValuesWithLong(TaskContract.Instances.INSTANCE_START_SORTING, nullValue(Long.class))); assertThat(instanceData.size(), is(0)); }", "n_tokens": 118, "n_pass": [1, 1, 1]}
{"time": "2021-02-24 09:48:23.986290", "score": "0.7483", "loss": "14.7426", "code": "@Test public void testNone() throws Exception { ContentValues instanceData = new StartDated(absent(START, nullValue(Long.class))); assertThat(instanceData, new ContentValuesWithLong(TaskContract.Instances.INSTANCE_START_SORTING, nullValue(Long.class))); assertThat(instanceData.size(), is(0)); }", "n_tokens": 89, "n_pass": [9, 2, 2]}
{"time": "2021-02-24 09:48:30.444540", "score": "0.7277", "loss": "15.4133", "code": "@Test public void testNone() throws Exception { ContentValues instanceData = new StartDated(absent((Long.class))); assertThat(instanceData, new ContentValuesWithLong(TaskContract.Instances.INSTANCE_START_SORTING, nullValue(Long.class))); assertThat(instanceData.size(), is(0)); }", "n_tokens": 85, "n_pass": [74, 4, 3]}
{"time": "2021-02-24 09:48:38.772561", "score": "0.3344", "loss": "12.9113", "code": "@Test public void testNone() throws Exception { ContentValues instanceData = new StartDated(absent((Long.class))); assertThat(instanceData, new ContentValuesWithLong(TaskContract.Instances.INSTANCE_START_SORTING, nullValue(Long.class))); assertThat(instanceData.sizeis(0)); }", "n_tokens": 81, "n_pass": [86, 7, 4]}
{"time": "2021-02-24 09:48:41.584517", "score": "0.8343", "loss": "16.9823", "code": "@Test public void testNone() throws Exception { ContentValues instanceData = new StartDated(absent((Long.class))); assertThat(instanceData, new ContentValuesWithLong(TaskContract.Instances.INSTANCE_START_SORTING, nullValue(Long.class))); assertThat(instanceData.size); }", "n_tokens": 77, "n_pass": [87, 8, 5]}
{"time": "2021-02-24 09:48:44.377689", "score": "0.6159", "loss": "16.5895", "code": "public void testNone() throws Exception { ContentValues instanceData = new StartDated(absent((Long.class))); assertThat(instanceData, new ContentValuesWithLong(TaskContract.Instances.INSTANCE_START_SORTING, nullValue(Long.class))); assertThat(instanceData.size); }", "n_tokens": 74, "n_pass": [89, 9, 6]}
{"time": "2021-02-24 09:48:47.611210", "score": "0.7042", "loss": "16.1254", "code": "public void testNone() throws Exception { ContentValues= new StartDated(absent((Long.class))); assertThat(instanceData, new ContentValuesWithLong(TaskContract.Instances.INSTANCE_START_SORTING, nullValue(Long.class))); assertThat(instanceData.size); }", "n_tokens": 71, "n_pass": [95, 10, 7]}
{"time": "2021-02-24 09:48:50.363954", "score": "0.6234", "loss": "16.2567", "code": "public void testNone() throws Exception { ContentValuesStartDated(absent((Long.class))); assertThat(instanceData, new ContentValuesWithLong(TaskContract.Instances.INSTANCE_START_SORTING, nullValue(Long.class))); assertThat(instanceData.size); }", "n_tokens": 67, "n_pass": [96, 11, 8]}
{"time": "2021-02-24 09:48:59.976521", "score": "0.6117", "loss": "16.2241", "code": "public void testNone() throws Exception { ContentValuesStartDated(absent((Long))); assertThat(instanceData, new ContentValuesWithLong(TaskContract.Instances.INSTANCE_START_SORTING, nullValue(Long.class))); assertThat(instanceData.size); }", "n_tokens": 65, "n_pass": [154, 14, 9]}
{"time": "2021-02-24 09:49:02.746414", "score": "0.6682", "loss": "12.2051", "code": "public void testNone() throws Exception { ContentValuesStartDated(absent((Long))); assertThat(instanceData, ContentValuesWithLong(TaskContract.Instances.INSTANCE_START_SORTING, nullValue(Long.class))); assertThat(instanceData.size); }", "n_tokens": 63, "n_pass": [160, 15, 10]}
{"time": "2021-02-24 09:49:11.028168", "score": "0.6682", "loss": "12.2051", "code": "public void testNone() throws Exception { ContentValuesStartDated(absent((Long))); assertThat(instanceData, ContentValuesWithLong(TaskContract.Instances.START_SORTING, nullValue(Long.class))); assertThat(instanceData.size); }", "n_tokens": 61, "n_pass": [164, 18, 11]}
{"time": "2021-02-24 09:49:13.765248", "score": "0.4786", "loss": "11.5618", "code": "public void testNone() throws Exception { ContentValuesStartDated(absent((Long))); assertThat(instanceData, ContentValuesWithLong(TaskContract.Instances.SORTING, nullValue(Long.class))); assertThat(instanceData.size); }", "n_tokens": 59, "n_pass": [165, 19, 12]}
{"time": "2021-02-24 09:49:19.308738", "score": "0.4713", "loss": "11.8397", "code": "public void testNone() throws Exception { ContentValuesStartDated(absent((Long))); assertThat(instanceData, ContentValuesWithLong(TaskContract.Instances.SORTING,(Long.class))); assertThat(instanceData.size); }", "n_tokens": 57, "n_pass": [167, 21, 13]}
{"time": "2021-02-24 09:49:22.047900", "score": "0.471", "loss": "11.8338", "code": "public void testNone() throws Exception { ContentValuesStartDated(absent((Long))); assertThat(instanceData, ContentValuesWithLong(TaskContract.Instances.SORTING,(Long))); assertThat(instanceData.size); }", "n_tokens": 55, "n_pass": [169, 22, 14]}
{"time": "2021-02-24 09:49:24.784255", "score": "0.4354", "loss": "12.5427", "code": "public void testNone() throws Exception { ContentValuesStartDated(absent((Long))); assertThat(instanceData, ContentValuesWithLong(TaskContract.Instances.SORTING,(Long)));(instanceData.size); }", "n_tokens": 53, "n_pass": [172, 23, 15]}
{"time": "2021-02-24 09:49:27.508630", "score": "0.3905", "loss": "12.5157", "code": "public void testNone() throws Exception { ContentValuesStartDated(absent((Long))); assertThat(instanceData, ContentValuesWithLong(TaskContract.Instances.SORTING,(Long)));(instanceData); }", "n_tokens": 51, "n_pass": [174, 24, 16]}
{"time": "2021-02-24 09:49:30.255661", "score": "0.3905", "loss": "12.5157", "code": " void testNone() throws Exception { ContentValuesStartDated(absent((Long))); assertThat(instanceData, ContentValuesWithLong(TaskContract.Instances.SORTING,(Long)));(instanceData); }", "n_tokens": 50, "n_pass": [177, 25, 17]}
{"time": "2021-02-24 09:49:33.004551", "score": "0.3905", "loss": "12.5157", "code": "void testNone() throws Exception { ContentValuesStartDated(absent((Long))); assertThat(instanceData, ContentValuesWithLong(TaskContract.Instances.SORTING,(Long)));(instanceData); }", "n_tokens": 49, "n_pass": [178, 26, 18]}
{"time": "2021-02-24 09:49:36.629390", "score": "0.3905", "loss": "12.5157", "code": "void testNone() throws Exception {StartDated(absent((Long))); assertThat(instanceData, ContentValuesWithLong(TaskContract.Instances.SORTING,(Long)));(instanceData); }", "n_tokens": 47, "n_pass": [186, 27, 19]}
{"time": "2021-02-24 09:49:52.448605", "score": "0.5153", "loss": "13.3916", "code": "void testNone() throws Exception {StartDated(((Long))); assertThat(instanceData, ContentValuesWithLong(TaskContract.Instances.SORTING,(Long)));(instanceData); }", "n_tokens": 46, "n_pass": [256, 31, 20]}
{"time": "2021-02-24 09:49:55.179703", "score": "0.5153", "loss": "13.3916", "code": "void testNone() throws Exception {StartDated(((Long)));assertThat(instanceData, ContentValuesWithLong(TaskContract.Instances.SORTING,(Long)));(instanceData); }", "n_tokens": 45, "n_pass": [263, 32, 21]}
{"time": "2021-02-24 09:49:57.910765", "score": "0.5153", "loss": "13.3916", "code": "void testNone() throws Exception {StartDated(((Long)));assertThat(instanceData,ContentValuesWithLong(TaskContract.Instances.SORTING,(Long)));(instanceData); }", "n_tokens": 44, "n_pass": [268, 33, 22]}
{"time": "2021-02-24 09:50:08.935266", "score": "0.5153", "loss": "13.3916", "code": "void testNone() throws Exception {StartDated(((Long)));assertThat(instanceData,ContentValuesWithLong(TaskContract.Instances.SORTING,(Long)));(instanceData);}", "n_tokens": 43, "n_pass": [287, 37, 23]}
{"time": "2021-02-24 09:50:12.561995", "score": "0.5153", "loss": "13.3916", "code": "void testNone()throws Exception {StartDated(((Long)));assertThat(instanceData,ContentValuesWithLong(TaskContract.Instances.SORTING,(Long)));(instanceData);}", "n_tokens": 42, "n_pass": [294, 38, 24]}
{"time": "2021-02-24 09:50:15.290808", "score": "0.5153", "loss": "13.3916", "code": "void testNone()throws Exception{StartDated(((Long)));assertThat(instanceData,ContentValuesWithLong(TaskContract.Instances.SORTING,(Long)));(instanceData);}", "n_tokens": 41, "n_pass": [298, 39, 25]}
{"time": "2021-02-24 09:50:18.015255", "score": "0.6012", "loss": "13.8716", "code": "void testNone()throws Exception{(((Long)));assertThat(instanceData,ContentValuesWithLong(TaskContract.Instances.SORTING,(Long)));(instanceData);}", "n_tokens": 40, "n_pass": [300, 40, 26]}

Minimal simplified code:
void testNone()throws Exception{(((Long)));assertThat(instanceData,ContentValuesWithLong(TaskContract.Instances.SORTING,(Long)));(instanceData);}

