
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/sakaiproject__sakai/kernel/kernel-impl/src/main/java/org/sakaiproject/tool/impl/ToolComponent_matchCriteria.java
method_name = matchCriteria
method_body = @SuppressWarnings("unchecked") protected boolean matchCriteria(Set criteria, Set target) { if ((criteria == null) || (criteria.isEmpty())) return true; for (Iterator i = target.iterator(); i.hasNext(); ) { String t = (String) i.next(); if (criteria.contains(t)) return true; } return false; }
predict, score, loss = contains, 0.6898223161697388, 18.506603240966797

Trace of simplified code(s):
{"time": "2021-02-24 05:13:53.176460", "score": "0.7013", "loss": "18.6414", "code": "@SuppressWarnings(\"unchecked\") protected boolean matchCriteria(Set criteria, Set target) { if ((criteria == null) || (criteria.isEmpty())) return true; for (Iterator i = target.iterator(); i.hasNext(); ) { String t = (String) i.next(); if (criteria.contains(t)) return true; } return false; }", "n_tokens": 123, "n_pass": [1, 1, 1]}
{"time": "2021-02-24 05:13:55.890329", "score": "0.7574", "loss": "19.136", "code": " protected boolean matchCriteria(Set criteria, Set target) { if ((criteria == null) || (criteria.isEmpty())) return true; for (Iterator i = target.iterator(); i.hasNext(); ) { String t = (String) i.next(); if (criteria.contains(t)) return true; } return false; }", "n_tokens": 116, "n_pass": [44, 2, 2]}
{"time": "2021-02-24 05:13:58.561092", "score": "0.8218", "loss": "19.197", "code": " protected boolean matchCriteria(Set criteria, Set target) { if ((criteria == null) || (criteria.isEmpty())) return true; for (Iterator(); i.hasNext(); ) { String t = (String) i.next(); if (criteria.contains(t)) return true; } return false; }", "n_tokens": 108, "n_pass": [52, 3, 3]}
{"time": "2021-02-24 05:14:01.223165", "score": "0.8194", "loss": "19.2107", "code": " protected boolean matchCriteria(Set criteria, Set target) { if ((criteria == null) || (criteria.isEmpty())) return true; for (Iterator(); i.hasNext(); ) { String t = i.next(); if (criteria.contains(t)) return true; } return false; }", "n_tokens": 104, "n_pass": [100, 4, 4]}
{"time": "2021-02-24 05:14:03.869300", "score": "0.8194", "loss": "19.2107", "code": "boolean matchCriteria(Set criteria, Set target) { if ((criteria == null) || (criteria.isEmpty())) return true; for (Iterator(); i.hasNext(); ) { String t = i.next(); if (criteria.contains(t)) return true; } return false; }", "n_tokens": 101, "n_pass": [109, 5, 5]}
{"time": "2021-02-24 05:14:06.499725", "score": "0.8645", "loss": "19.755", "code": "boolean matchCriteria(Set criteria, Set target) { if ((criterianull) || (criteria.isEmpty())) return true; for (Iterator(); i.hasNext(); ) { String t = i.next(); if (criteria.contains(t)) return true; } return false; }", "n_tokens": 97, "n_pass": [116, 6, 6]}
{"time": "2021-02-24 05:14:09.149759", "score": "0.9211", "loss": "20.8978", "code": "boolean matchCriteria(Set criteria, Set target) { if ((criterianull) || (criteria)) return true; for (Iterator(); i.hasNext(); ) { String t = i.next(); if (criteria.contains(t)) return true; } return false; }", "n_tokens": 93, "n_pass": [119, 7, 7]}
{"time": "2021-02-24 05:14:13.586316", "score": "0.8891", "loss": "20.6634", "code": "boolean matchCriteria(Set criteria, Set target) { if ((criterianull) || (criteria)) true; for (Iterator(); i.hasNext(); ) { String t = i.next(); if (criteria.contains(t)) return true; } return false; }", "n_tokens": 91, "n_pass": [193, 8, 8]}
{"time": "2021-02-24 05:14:16.205163", "score": "0.8904", "loss": "20.7087", "code": "boolean matchCriteria(Set criteria, Set target) { if ((criterianull) || (criteria)); for (Iterator(); i.hasNext(); ) { String t = i.next(); if (criteria.contains(t)) return true; } return false; }", "n_tokens": 89, "n_pass": [194, 9, 9]}
{"time": "2021-02-24 05:14:18.821236", "score": "0.2992", "loss": "17.1044", "code": "boolean matchCriteria(Set criteria, Set target) { if ((criterianull) || (criteria))for (Iterator(); i.hasNext(); ) { String t = i.next(); if (criteria.contains(t)) return true; } return false; }", "n_tokens": 87, "n_pass": [195, 10, 10]}
{"time": "2021-02-24 05:14:21.470234", "score": "0.3049", "loss": "17.3836", "code": "boolean matchCriteria(Set criteria, Set target) { if ((criterianull) || (criteria))for (Iterator; i.hasNext(); ) { String t = i.next(); if (criteria.contains(t)) return true; } return false; }", "n_tokens": 85, "n_pass": [198, 11, 11]}
{"time": "2021-02-24 05:14:24.091314", "score": "0.2864", "loss": "17.0509", "code": "boolean matchCriteria(Set criteria, Set target) { if ((criterianull) || (criteria))for (Iterator; hasNext(); ) { String t = i.next(); if (criteria.contains(t)) return true; } return false; }", "n_tokens": 83, "n_pass": [200, 12, 12]}
{"time": "2021-02-24 05:14:26.707005", "score": "0.2997", "loss": "17.5617", "code": "boolean matchCriteria(Set criteria, Set target) { if ((criterianull) || (criteria))for (Iterator; hasNext(); ) { t = i.next(); if (criteria.contains(t)) return true; } return false; }", "n_tokens": 81, "n_pass": [205, 13, 13]}
{"time": "2021-02-24 05:14:32.086084", "score": "0.325", "loss": "17.4186", "code": "boolean matchCriteria(Set criteria, Set target) { if ((criterianull) || (criteria))for (Iterator; hasNext(); ) { t = i.next; if (criteria.contains(t)) return true; } return false; }", "n_tokens": 79, "n_pass": [210, 15, 14]}
{"time": "2021-02-24 05:14:34.755731", "score": "0.2297", "loss": "17.0749", "code": "boolean matchCriteria(Set criteria, Set target) { if ((criterianull) || (criteria))for (Iterator; hasNext(); ) { t = i.next; if (criteria(t)) return true; } return false; }", "n_tokens": 77, "n_pass": [214, 16, 15]}
{"time": "2021-02-24 05:14:37.395344", "score": "0.2295", "loss": "17.0325", "code": "boolean matchCriteria(Set criteria, Set target) { if ((criterianull) || (criteria))for (Iterator; hasNext(); ) { t = i.next; if (criteria(t)) true; } return false; }", "n_tokens": 75, "n_pass": [217, 17, 16]}
{"time": "2021-02-24 05:14:40.012471", "score": "0.2281", "loss": "17.056", "code": "boolean matchCriteria(Set criteria, Set target) { if ((criterianull) || (criteria))for (Iterator; hasNext(); ) { t = i.next; if (criteria(t)); } return false; }", "n_tokens": 73, "n_pass": [218, 18, 17]}
{"time": "2021-02-24 05:14:46.057298", "score": "0.2281", "loss": "17.056", "code": "boolean matchCriteria(Set criteria, Set target) { if ((criterianull)| (criteria))for (Iterator; hasNext(); ) { t = i.next; if (criteria(t)); } return false; }", "n_tokens": 71, "n_pass": [237, 20, 18]}
{"time": "2021-02-24 05:15:11.542863", "score": "0.2281", "loss": "17.056", "code": "boolean matchCriteria(Set criteria, Set target) { if ((criterianull)|(criteria))for (Iterator; hasNext(); ) { t = i.next; if (criteria(t)); } return false; }", "n_tokens": 70, "n_pass": [343, 26, 19]}
{"time": "2021-02-24 05:15:14.165834", "score": "0.2281", "loss": "17.056", "code": "boolean matchCriteria(Set criteria, Set target) { if ((criterianull)|(criteria))for(Iterator; hasNext(); ) { t = i.next; if (criteria(t)); } return false; }", "n_tokens": 69, "n_pass": [349, 27, 20]}
{"time": "2021-02-24 05:15:19.403883", "score": "0.2281", "loss": "17.056", "code": "boolean matchCriteria(Set criteria, Set target) { if ((criterianull)|(criteria))for(Iterator;hasNext(); ) { t = i.next; if (criteria(t)); } return false; }", "n_tokens": 68, "n_pass": [353, 29, 21]}
{"time": "2021-02-24 05:15:22.017609", "score": "0.2281", "loss": "17.056", "code": "boolean matchCriteria(Set criteria, Set target) { if ((criterianull)|(criteria))for(Iterator;hasNext();) { t = i.next; if (criteria(t)); } return false; }", "n_tokens": 67, "n_pass": [358, 30, 22]}
{"time": "2021-02-24 05:15:24.659184", "score": "0.2281", "loss": "17.056", "code": "boolean matchCriteria(Set criteria, Set target) { if ((criterianull)|(criteria))for(Iterator;hasNext();){ t = i.next; if (criteria(t)); } return false; }", "n_tokens": 66, "n_pass": [360, 31, 23]}
{"time": "2021-02-24 05:15:27.269183", "score": "0.2281", "loss": "17.056", "code": "boolean matchCriteria(Set criteria, Set target) { if ((criterianull)|(criteria))for(Iterator;hasNext();){t = i.next; if (criteria(t)); } return false; }", "n_tokens": 65, "n_pass": [362, 32, 24]}
{"time": "2021-02-24 05:15:29.877210", "score": "0.2281", "loss": "17.056", "code": "boolean matchCriteria(Set criteria, Set target) { if ((criterianull)|(criteria))for(Iterator;hasNext();){t= i.next; if (criteria(t)); } return false; }", "n_tokens": 64, "n_pass": [364, 33, 25]}
{"time": "2021-02-24 05:15:32.494123", "score": "0.2281", "loss": "17.056", "code": "boolean matchCriteria(Set criteria, Set target) { if ((criterianull)|(criteria))for(Iterator;hasNext();){t=i.next; if (criteria(t)); } return false; }", "n_tokens": 63, "n_pass": [366, 34, 26]}
{"time": "2021-02-24 05:15:37.778852", "score": "0.2281", "loss": "17.056", "code": "boolean matchCriteria(Set criteria, Set target) { if ((criterianull)|(criteria))for(Iterator;hasNext();){t=i.next;if (criteria(t)); } return false; }", "n_tokens": 62, "n_pass": [371, 36, 27]}
{"time": "2021-02-24 05:15:43.046089", "score": "0.2281", "loss": "17.056", "code": "boolean matchCriteria(Set criteria, Set target) { if ((criterianull)|(criteria))for(Iterator;hasNext();){t=i.next;if(criteria(t)); } return false; }", "n_tokens": 61, "n_pass": [373, 38, 28]}
{"time": "2021-02-24 05:15:48.319878", "score": "0.2263", "loss": "17.0619", "code": "boolean matchCriteria(Set criteria, Set target) { if ((criterianull)|(criteria))for(Iterator;hasNext();){t=i.next;if(criteria()); } return false; }", "n_tokens": 60, "n_pass": [377, 40, 29]}
{"time": "2021-02-24 05:15:50.943328", "score": "0.2263", "loss": "17.0619", "code": "boolean matchCriteria(Set criteria, Set target) { if ((criterianull)|(criteria))for(Iterator;hasNext();){t=i.next;if(criteria());} return false; }", "n_tokens": 59, "n_pass": [381, 41, 30]}
{"time": "2021-02-24 05:15:53.566195", "score": "0.2263", "loss": "17.0619", "code": "boolean matchCriteria(Set criteria, Set target) { if ((criterianull)|(criteria))for(Iterator;hasNext();){t=i.next;if(criteria());}return false; }", "n_tokens": 58, "n_pass": [383, 42, 31]}
{"time": "2021-02-24 05:16:04.121115", "score": "0.2263", "loss": "17.0619", "code": "boolean matchCriteria(Set criteria, Set target) { if ((criterianull)|(criteria))for(Iterator;hasNext();){t=i.next;if(criteria());}return false;}", "n_tokens": 57, "n_pass": [388, 46, 32]}
{"time": "2021-02-24 05:16:07.526185", "score": "0.2263", "loss": "17.0619", "code": "boolean matchCriteria(Set criteria,Set target) { if ((criterianull)|(criteria))for(Iterator;hasNext();){t=i.next;if(criteria());}return false;}", "n_tokens": 56, "n_pass": [398, 47, 33]}
{"time": "2021-02-24 05:16:10.148711", "score": "0.2263", "loss": "17.0619", "code": "boolean matchCriteria(Set criteria,Set target){ if ((criterianull)|(criteria))for(Iterator;hasNext();){t=i.next;if(criteria());}return false;}", "n_tokens": 55, "n_pass": [403, 48, 34]}
{"time": "2021-02-24 05:16:12.775551", "score": "0.2263", "loss": "17.0619", "code": "boolean matchCriteria(Set criteria,Set target){if ((criterianull)|(criteria))for(Iterator;hasNext();){t=i.next;if(criteria());}return false;}", "n_tokens": 54, "n_pass": [405, 49, 35]}
{"time": "2021-02-24 05:16:15.396613", "score": "0.2263", "loss": "17.0619", "code": "boolean matchCriteria(Set criteria,Set target){if((criterianull)|(criteria))for(Iterator;hasNext();){t=i.next;if(criteria());}return false;}", "n_tokens": 53, "n_pass": [407, 50, 36]}
{"time": "2021-02-24 05:16:18.038481", "score": "0.2309", "loss": "17.0523", "code": "boolean matchCriteria(Set criteria,Set target){if((null)|(criteria))for(Iterator;hasNext();){t=i.next;if(criteria());}return false;}", "n_tokens": 52, "n_pass": [410, 51, 37]}
{"time": "2021-02-24 05:16:20.686783", "score": "0.2157", "loss": "17.1199", "code": "boolean matchCriteria(Set criteria,Set target){if((null)|(criteria))for(;hasNext();){t=i.next;if(criteria());}return false;}", "n_tokens": 51, "n_pass": [420, 52, 38]}
{"time": "2021-02-24 05:16:28.531855", "score": "0.3391", "loss": "15.5525", "code": "boolean matchCriteria(Set criteria,Set target){if((null)|(criteria))for(;hasNext();){t=i.nextif(criteria());}return false;}", "n_tokens": 50, "n_pass": [433, 55, 39]}
{"time": "2021-02-24 05:16:42.410174", "score": "0.3444", "loss": "15.4286", "code": "boolean matchCriteria(Set criteria,Set target){if((null)|(criteria))for(;hasNext();){ti.nextif(criteria());}return false;}", "n_tokens": 49, "n_pass": [480, 60, 40]}
{"time": "2021-02-24 05:16:45.017470", "score": "0.3439", "loss": "15.4278", "code": "boolean matchCriteria(Set criteria,Set target){if((null)|(criteria))for(;hasNext();){t.nextif(criteria());}return false;}", "n_tokens": 48, "n_pass": [481, 61, 41]}
{"time": "2021-02-24 05:16:52.863727", "score": "0.1641", "loss": "15.0613", "code": "boolean matchCriteria(Set criteria,Set target){if((null)|(criteria))for(;hasNext();){t.nextif(criteria());} false;}", "n_tokens": 47, "n_pass": [492, 64, 42]}
{"time": "2021-02-24 05:16:55.488635", "score": "0.1641", "loss": "15.0613", "code": "boolean matchCriteria(Set criteria,Set target){if((null)|(criteria))for(;hasNext();){t.nextif(criteria());}false;}", "n_tokens": 46, "n_pass": [493, 65, 43]}

Minimal simplified code:
boolean matchCriteria(Set criteria,Set target){if((null)|(criteria))for(;hasNext();){t.nextif(criteria());}false;}

