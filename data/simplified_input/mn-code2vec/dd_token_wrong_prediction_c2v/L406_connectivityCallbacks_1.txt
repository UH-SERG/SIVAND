
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/novoda__merlin/core/src/main/java/com/novoda/merlin/ConnectivityChangesRegister_connectivityCallbacks.java
method_name = connectivityCallbacks
method_body = private ConnectivityCallbacks connectivityCallbacks(MerlinService.ConnectivityChangesNotifier connectivityChangesNotifier) { if (connectivityCallbacks == null) { connectivityCallbacks = new ConnectivityCallbacks(connectivityChangesNotifier, connectivityChangeEventExtractor); } return connectivityCallbacks; }
predict, score, loss = getInstance, 0.9388926029205322, 21.75674819946289

Trace of simplified code(s):
{"time": "2021-02-24 03:19:59.245154", "score": "0.9389", "loss": "21.7567", "code": "private ConnectivityCallbacks connectivityCallbacks(MerlinService.ConnectivityChangesNotifier connectivityChangesNotifier) { if (connectivityCallbacks == null) { connectivityCallbacks = new ConnectivityCallbacks(connectivityChangesNotifier, connectivityChangeEventExtractor); } return connectivityCallbacks; }", "n_tokens": 51, "n_pass": [1, 1, 1]}
{"time": "2021-02-24 03:20:02.632568", "score": "0.9233", "loss": "21.3507", "code": "private ConnectivityCallbacks connectivityCallbacks(MerlinService.ConnectivityChangesNotifier connectivityChangesNotifier) { if (connectivityCallbacks == null) { connectivityCallbacks = new ConnectivityCallbacks(connectivityChangeEventExtractor); } return connectivityCallbacks; }", "n_tokens": 48, "n_pass": [56, 2, 2]}
{"time": "2021-02-24 03:20:07.054507", "score": "0.7397", "loss": "21.0996", "code": "private ConnectivityCallbacks connectivityCallbacks(MerlinService.ConnectivityChangesNotifier connectivityChangesNotifier) { if (connectivityCallbacks == null) { connectivityCallbacks = new ConnectivityCallbacks(connectivityChangeEventExtractor); } connectivityCallbacks; }", "n_tokens": 46, "n_pass": [105, 3, 3]}
{"time": "2021-02-24 03:20:09.687574", "score": "0.741", "loss": "21.1781", "code": "private ConnectivityCallbacks connectivityCallbacks(MerlinService.ConnectivityChangesNotifier connectivityChangesNotifier) { if (connectivityCallbacks == null) { connectivityCallbacks = new ConnectivityCallbacks(connectivityChangeEventExtractor); }  }", "n_tokens": 44, "n_pass": [106, 4, 4]}
{"time": "2021-02-24 03:20:12.295610", "score": "0.741", "loss": "21.1781", "code": " ConnectivityCallbacks connectivityCallbacks(MerlinService.ConnectivityChangesNotifier connectivityChangesNotifier) { if (connectivityCallbacks == null) { connectivityCallbacks = new ConnectivityCallbacks(connectivityChangeEventExtractor); }  }", "n_tokens": 43, "n_pass": [108, 5, 5]}
{"time": "2021-02-24 03:20:14.916109", "score": "0.741", "loss": "21.1781", "code": "ConnectivityCallbacks connectivityCallbacks(MerlinService.ConnectivityChangesNotifier connectivityChangesNotifier) { if (connectivityCallbacks == null) { connectivityCallbacks = new ConnectivityCallbacks(connectivityChangeEventExtractor); }  }", "n_tokens": 42, "n_pass": [109, 6, 6]}
{"time": "2021-02-24 03:20:18.693206", "score": "0.8196", "loss": "21.7355", "code": "ConnectivityCallbacks connectivityCallbacks(MerlinServiceConnectivityChangesNotifier connectivityChangesNotifier) { if (connectivityCallbacks == null) { connectivityCallbacks = new ConnectivityCallbacks(connectivityChangeEventExtractor); }  }", "n_tokens": 41, "n_pass": [115, 7, 7]}
{"time": "2021-02-24 03:20:21.314771", "score": "0.8196", "loss": "21.7355", "code": "ConnectivityCallbacks connectivityCallbacks(MerlinService connectivityChangesNotifier) { if (connectivityCallbacks == null) { connectivityCallbacks = new ConnectivityCallbacks(connectivityChangeEventExtractor); }  }", "n_tokens": 40, "n_pass": [116, 8, 8]}
{"time": "2021-02-24 03:20:23.920647", "score": "0.608", "loss": "20.3514", "code": "ConnectivityCallbacks connectivityCallbacks(MerlinService connectivityChangesNotifier) { if (connectivityCallbacks == null) { connectivityCallbacks = ConnectivityCallbacks(connectivityChangeEventExtractor); }  }", "n_tokens": 38, "n_pass": [130, 9, 9]}
{"time": "2021-02-24 03:20:32.314857", "score": "0.595", "loss": "20.4882", "code": "ConnectivityCallbacks connectivityCallbacks(MerlinService connectivityChangesNotifier) { if (connectivityCallbacks == null) { connectivityCallbacks = ConnectivityCallbacks(); }  }", "n_tokens": 37, "n_pass": [185, 10, 10]}
{"time": "2021-02-24 03:20:34.907462", "score": "0.595", "loss": "20.4882", "code": "ConnectivityCallbacks connectivityCallbacks(MerlinService connectivityChangesNotifier) { if (connectivityCallbacks == null) { connectivityCallbacks = ConnectivityCallbacks();}  }", "n_tokens": 36, "n_pass": [187, 11, 11]}
{"time": "2021-02-24 03:20:37.512333", "score": "0.595", "loss": "20.4882", "code": "ConnectivityCallbacks connectivityCallbacks(MerlinService connectivityChangesNotifier) { if (connectivityCallbacks == null) { connectivityCallbacks = ConnectivityCallbacks();} }", "n_tokens": 35, "n_pass": [189, 12, 12]}
{"time": "2021-02-24 03:20:40.121994", "score": "0.595", "loss": "20.4882", "code": "ConnectivityCallbacks connectivityCallbacks(MerlinService connectivityChangesNotifier) { if (connectivityCallbacks == null) { connectivityCallbacks = ConnectivityCallbacks();}}", "n_tokens": 34, "n_pass": [190, 13, 13]}
{"time": "2021-02-24 03:20:43.896977", "score": "0.595", "loss": "20.4882", "code": "ConnectivityCallbacks connectivityCallbacks(MerlinService connectivityChangesNotifier){ if (connectivityCallbacks == null) { connectivityCallbacks = ConnectivityCallbacks();}}", "n_tokens": 33, "n_pass": [200, 14, 14]}
{"time": "2021-02-24 03:20:46.522619", "score": "0.595", "loss": "20.4882", "code": "ConnectivityCallbacks connectivityCallbacks(MerlinService connectivityChangesNotifier){if (connectivityCallbacks == null) { connectivityCallbacks = ConnectivityCallbacks();}}", "n_tokens": 32, "n_pass": [202, 15, 15]}
{"time": "2021-02-24 03:20:49.135070", "score": "0.595", "loss": "20.4882", "code": "ConnectivityCallbacks connectivityCallbacks(MerlinService connectivityChangesNotifier){if(connectivityCallbacks == null) { connectivityCallbacks = ConnectivityCallbacks();}}", "n_tokens": 31, "n_pass": [204, 16, 16]}
{"time": "2021-02-24 03:20:51.746317", "score": "0.595", "loss": "20.4882", "code": "ConnectivityCallbacks connectivityCallbacks(MerlinService connectivityChangesNotifier){if(connectivityCallbacks== null) { connectivityCallbacks = ConnectivityCallbacks();}}", "n_tokens": 30, "n_pass": [207, 17, 17]}
{"time": "2021-02-24 03:20:54.398718", "score": "0.4734", "loss": "19.3308", "code": "ConnectivityCallbacks connectivityCallbacks(MerlinService connectivityChangesNotifier){if(connectivityCallbacks= null) { connectivityCallbacks = ConnectivityCallbacks();}}", "n_tokens": 29, "n_pass": [208, 18, 18]}
{"time": "2021-02-24 03:20:56.989000", "score": "0.4734", "loss": "19.3308", "code": "ConnectivityCallbacks connectivityCallbacks(MerlinService connectivityChangesNotifier){if(connectivityCallbacks=null) { connectivityCallbacks = ConnectivityCallbacks();}}", "n_tokens": 28, "n_pass": [210, 19, 19]}
{"time": "2021-02-24 03:20:59.593815", "score": "0.4734", "loss": "19.3308", "code": "ConnectivityCallbacks connectivityCallbacks(MerlinService connectivityChangesNotifier){if(connectivityCallbacks=null){ connectivityCallbacks = ConnectivityCallbacks();}}", "n_tokens": 27, "n_pass": [213, 20, 20]}
{"time": "2021-02-24 03:21:02.194652", "score": "0.4734", "loss": "19.3308", "code": "ConnectivityCallbacks connectivityCallbacks(MerlinService connectivityChangesNotifier){if(connectivityCallbacks=null){connectivityCallbacks = ConnectivityCallbacks();}}", "n_tokens": 26, "n_pass": [215, 21, 21]}
{"time": "2021-02-24 03:21:04.820701", "score": "0.4734", "loss": "19.3308", "code": "ConnectivityCallbacks connectivityCallbacks(MerlinService connectivityChangesNotifier){if(connectivityCallbacks=null){connectivityCallbacks= ConnectivityCallbacks();}}", "n_tokens": 25, "n_pass": [217, 22, 22]}
{"time": "2021-02-24 03:21:07.425903", "score": "0.4734", "loss": "19.3308", "code": "ConnectivityCallbacks connectivityCallbacks(MerlinService connectivityChangesNotifier){if(connectivityCallbacks=null){connectivityCallbacks=ConnectivityCallbacks();}}", "n_tokens": 24, "n_pass": [219, 23, 23]}
{"time": "2021-02-24 03:21:11.174533", "score": "0.4633", "loss": "19.8907", "code": "ConnectivityCallbacks connectivityCallbacks(MerlinService connectivityChangesNotifier){if(connectivityCallbacksnull){connectivityCallbacks=ConnectivityCallbacks();}}", "n_tokens": 23, "n_pass": [238, 24, 24]}
{"time": "2021-02-24 03:21:13.770769", "score": "0.4633", "loss": "19.8907", "code": "ConnectivityCallbacks connectivityCallbacks(MerlinService connectivityChangesNotifier){if(connectivityCallbacks){connectivityCallbacks=ConnectivityCallbacks();}}", "n_tokens": 22, "n_pass": [239, 25, 25]}
{"time": "2021-02-24 03:21:16.354547", "score": "0.323", "loss": "19.7254", "code": "ConnectivityCallbacks connectivityCallbacks(MerlinService connectivityChangesNotifier){if(connectivityCallbacks){connectivityCallbacksConnectivityCallbacks();}}", "n_tokens": 21, "n_pass": [243, 26, 26]}
{"time": "2021-02-24 03:21:18.935864", "score": "0.323", "loss": "19.7254", "code": "ConnectivityCallbacks connectivityCallbacks(MerlinService connectivityChangesNotifier){if(connectivityCallbacks){connectivityCallbacks();}}", "n_tokens": 20, "n_pass": [244, 27, 27]}

Minimal simplified code:
ConnectivityCallbacks connectivityCallbacks(MerlinService connectivityChangesNotifier){if(connectivityCallbacks){connectivityCallbacks();}}

