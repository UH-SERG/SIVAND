
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/OpenRock__OpenAM/openam-core/src/main/java/com/iplanet/services/ldap/aci/ACI_trimSurroundingQuotes.java
method_name = trimSurroundingQuotes
method_body = static String trimSurroundingQuotes(String str) { if (str != null && str.length() > 1 && (str.charAt(0) == '"') && (str.charAt(str.length() - 1) == '"')) { str = str.substring(1, str.length() - 1); } return str; }
predict, score, loss = capitalize, 0.2794073522090912, 19.623628616333008

Trace of simplified code(s):
{"time": "2021-02-23 03:58:35.060426", "score": "0.2794", "loss": "19.6236", "code": "static String trimSurroundingQuotes(String str) { if (str != null && str.length() > 1 && (str.charAt(0) == '\"') && (str.charAt(str.length() - 1) == '\"')) { str = str.substring(1, str.length() - 1); } return str; }", "n_tokens": 116, "n_pass": [1, 1, 1]}
{"time": "2021-02-23 03:58:37.803637", "score": "0.4889", "loss": "19.8732", "code": "static String trimSurroundingQuotes(String str) { if (str != null && str.length(str.charAt(str.length() - 1) == '\"')) { str = str.substring(1, str.length() - 1); } return str; }", "n_tokens": 87, "n_pass": [9, 2, 2]}
{"time": "2021-02-23 03:58:40.521588", "score": "0.4985", "loss": "20.4361", "code": "static String trimSurroundingQuotes(String str) { if (str != null && str.length(str.charAt(str1) == '\"')) { str = str.substring(1, str.length() - 1); } return str; }", "n_tokens": 80, "n_pass": [37, 3, 3]}
{"time": "2021-02-23 03:58:43.229331", "score": "0.5682", "loss": "20.6571", "code": "static String trimSurroundingQuotes(String str) { if (str != length(str.charAt(str1) == '\"')) { str = str.substring(1, str.length() - 1); } return str; }", "n_tokens": 73, "n_pass": [47, 4, 4]}
{"time": "2021-02-23 03:58:45.958752", "score": "0.4538", "loss": "20.8913", "code": "static String trimSurroundingQuotes(String str) { if (str != length(str.charAt(str1) == '\"')) { str.substring(1, str.length() - 1); } return str; }", "n_tokens": 69, "n_pass": [84, 5, 5]}
{"time": "2021-02-23 03:58:55.693658", "score": "0.4873", "loss": "20.0661", "code": "static String trimSurroundingQuotes(String str) { if (str != length(str.charAt(str1) == '\"')) { str.substring(1, length() - 1); } return str; }", "n_tokens": 67, "n_pass": [146, 8, 6]}
{"time": "2021-02-23 03:58:58.389801", "score": "0.3627", "loss": "19.0862", "code": "static String trimSurroundingQuotes(String str) { if (str != length(str.charAt(str1) == '\"')) { str.substring(1, length() - 1); } str; }", "n_tokens": 65, "n_pass": [152, 9, 7]}
{"time": "2021-02-23 03:59:01.087259", "score": "0.3364", "loss": "19.0245", "code": "static String trimSurroundingQuotes(String str) { if (str != length(str.charAt(str1) == '\"')) { str.substring(1, length() - 1); }  }", "n_tokens": 63, "n_pass": [153, 10, 8]}
{"time": "2021-02-23 03:59:03.785148", "score": "0.3364", "loss": "19.0245", "code": " String trimSurroundingQuotes(String str) { if (str != length(str.charAt(str1) == '\"')) { str.substring(1, length() - 1); }  }", "n_tokens": 62, "n_pass": [155, 11, 9]}
{"time": "2021-02-23 03:59:06.475816", "score": "0.3364", "loss": "19.0245", "code": "String trimSurroundingQuotes(String str) { if (str != length(str.charAt(str1) == '\"')) { str.substring(1, length() - 1); }  }", "n_tokens": 61, "n_pass": [156, 12, 10]}
{"time": "2021-02-23 03:59:10.466147", "score": "0.4652", "loss": "19.2981", "code": "String trimSurroundingQuotes(String str) { if (str= length(str.charAt(str1) == '\"')) { str.substring(1, length() - 1); }  }", "n_tokens": 59, "n_pass": [167, 13, 11]}
{"time": "2021-02-23 03:59:15.832524", "score": "0.4547", "loss": "19.1802", "code": "String trimSurroundingQuotes(String str) { if (str= length(charAt(str1) == '\"')) { str.substring(1, length() - 1); }  }", "n_tokens": 57, "n_pass": [170, 15, 12]}
{"time": "2021-02-23 03:59:18.526697", "score": "0.3863", "loss": "18.8315", "code": "String trimSurroundingQuotes(String str) { if (str= length(charAt() == '\"')) { str.substring(1, length() - 1); }  }", "n_tokens": 55, "n_pass": [172, 16, 13]}
{"time": "2021-02-23 03:59:35.041544", "score": "0.3863", "loss": "18.8315", "code": "String trimSurroundingQuotes(String str) { if (str= length(charAt() =='\"')) { str.substring(1, length() - 1); }  }", "n_tokens": 54, "n_pass": [255, 19, 14]}
{"time": "2021-02-23 03:59:38.096007", "score": "0.3863", "loss": "18.8315", "code": "String trimSurroundingQuotes(String str) { if (str= length(charAt() =='\"')){ str.substring(1, length() - 1); }  }", "n_tokens": 53, "n_pass": [260, 20, 15]}
{"time": "2021-02-23 03:59:40.792227", "score": "0.3863", "loss": "18.8315", "code": "String trimSurroundingQuotes(String str) { if (str= length(charAt() =='\"')){str.substring(1, length() - 1); }  }", "n_tokens": 52, "n_pass": [262, 21, 16]}
{"time": "2021-02-23 03:59:46.178776", "score": "0.3863", "loss": "18.8315", "code": "String trimSurroundingQuotes(String str) { if (str= length(charAt() =='\"')){str.substring(1,length() - 1); }  }", "n_tokens": 51, "n_pass": [269, 23, 17]}
{"time": "2021-02-23 03:59:48.873991", "score": "0.3863", "loss": "18.8315", "code": "String trimSurroundingQuotes(String str) { if (str= length(charAt() =='\"')){str.substring(1,length()- 1); }  }", "n_tokens": 50, "n_pass": [273, 24, 18]}
{"time": "2021-02-23 03:59:51.558877", "score": "0.3863", "loss": "18.8315", "code": "String trimSurroundingQuotes(String str) { if (str= length(charAt() =='\"')){str.substring(1,length()-1); }  }", "n_tokens": 49, "n_pass": [275, 25, 19]}
{"time": "2021-02-23 03:59:54.249174", "score": "0.3863", "loss": "18.8315", "code": "String trimSurroundingQuotes(String str) { if (str= length(charAt() =='\"')){str.substring(1,length()-1);}  }", "n_tokens": 48, "n_pass": [279, 26, 20]}
{"time": "2021-02-23 03:59:56.952503", "score": "0.3863", "loss": "18.8315", "code": "String trimSurroundingQuotes(String str) { if (str= length(charAt() =='\"')){str.substring(1,length()-1);} }", "n_tokens": 47, "n_pass": [281, 27, 21]}
{"time": "2021-02-23 03:59:59.641182", "score": "0.3863", "loss": "18.8315", "code": "String trimSurroundingQuotes(String str) { if (str= length(charAt() =='\"')){str.substring(1,length()-1);}}", "n_tokens": 46, "n_pass": [282, 28, 22]}
{"time": "2021-02-23 04:00:03.599752", "score": "0.3863", "loss": "18.8315", "code": "String trimSurroundingQuotes(String str){ if (str= length(charAt() =='\"')){str.substring(1,length()-1);}}", "n_tokens": 45, "n_pass": [292, 29, 23]}
{"time": "2021-02-23 04:00:06.288019", "score": "0.3863", "loss": "18.8315", "code": "String trimSurroundingQuotes(String str){if (str= length(charAt() =='\"')){str.substring(1,length()-1);}}", "n_tokens": 44, "n_pass": [294, 30, 24]}
{"time": "2021-02-23 04:00:09.013049", "score": "0.3863", "loss": "18.8315", "code": "String trimSurroundingQuotes(String str){if(str= length(charAt() =='\"')){str.substring(1,length()-1);}}", "n_tokens": 43, "n_pass": [296, 31, 25]}
{"time": "2021-02-23 04:00:11.705640", "score": "0.3863", "loss": "18.8315", "code": "String trimSurroundingQuotes(String str){if(str=length(charAt() =='\"')){str.substring(1,length()-1);}}", "n_tokens": 42, "n_pass": [300, 32, 26]}
{"time": "2021-02-23 04:00:14.379408", "score": "0.3915", "loss": "18.6512", "code": "String trimSurroundingQuotes(String str){if(str=(charAt() =='\"')){str.substring(1,length()-1);}}", "n_tokens": 41, "n_pass": [301, 33, 27]}
{"time": "2021-02-23 04:00:17.068681", "score": "0.3915", "loss": "18.6512", "code": "String trimSurroundingQuotes(String str){if(str=(charAt()=='\"')){str.substring(1,length()-1);}}", "n_tokens": 40, "n_pass": [306, 34, 28]}
{"time": "2021-02-23 04:00:24.935258", "score": "0.403", "loss": "18.9989", "code": "String trimSurroundingQuotes(String str){if(str(charAt()=='\"')){str.substring(1,length()-1);}}", "n_tokens": 39, "n_pass": [342, 36, 29]}
{"time": "2021-02-23 04:00:32.793694", "score": "0.3884", "loss": "18.2927", "code": "String trimSurroundingQuotes(String str){if((charAt()=='\"')){str.substring(1,length()-1);}}", "n_tokens": 38, "n_pass": [381, 38, 30]}

Minimal simplified code:
String trimSurroundingQuotes(String str){if((charAt()=='"')){str.substring(1,length()-1);}}

