
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/henryyan__activiti-in-action-codes/chapter17-jpa/src/test/java/me/kafeitu/activiti/chapter7/engine/ProcessEngineConfigurationTest_userDefaultName.java
method_name = userDefaultName
method_body = @Test public void userDefaultName() { ProcessEngine processEngine = ProcessEngineConfiguration.createStandaloneInMemProcessEngineConfiguration().buildProcessEngine(); System.out.println(processEngine.hashCode()); assertEquals("default", processEngine.getName()); }
predict, score, loss = initializeProcessEngine, 0.8769833445549011, 17.30771827697754

Trace of simplified code(s):
{"time": "2021-02-23 19:46:18.545392", "score": "0.877", "loss": "17.3077", "code": "@Test public void userDefaultName() { ProcessEngine processEngine = ProcessEngineConfiguration.createStandaloneInMemProcessEngineConfiguration().buildProcessEngine(); System.out.println(processEngine.hashCode()); assertEquals(\"default\", processEngine.getName()); }", "n_tokens": 60, "n_pass": [1, 1, 1]}
{"time": "2021-02-23 19:46:21.629609", "score": "0.7866", "loss": "15.8482", "code": "@Test public void userDefaultName() { ProcessEnginecreateStandaloneInMemProcessEngineConfiguration().buildProcessEngine(); System.out.println(processEngine.hashCode()); assertEquals(\"default\", processEngine.getName()); }", "n_tokens": 53, "n_pass": [22, 2, 2]}
{"time": "2021-02-23 19:46:29.988447", "score": "0.7527", "loss": "16.4991", "code": "@Test public void userDefaultName() { ProcessEnginecreateStandaloneInMemProcessEngineConfiguration().buildProcessEngine(); System.out.println(processEngine.hashCode()); assertEquals(\"default\", processEngine); }", "n_tokens": 49, "n_pass": [52, 5, 3]}
{"time": "2021-02-23 19:46:32.661852", "score": "0.4017", "loss": "14.8039", "code": "public void userDefaultName() { ProcessEnginecreateStandaloneInMemProcessEngineConfiguration().buildProcessEngine(); System.out.println(processEngine.hashCode()); assertEquals(\"default\", processEngine); }", "n_tokens": 46, "n_pass": [53, 6, 4]}
{"time": "2021-02-23 19:46:39.522868", "score": "0.4017", "loss": "14.8039", "code": " void userDefaultName() { ProcessEnginecreateStandaloneInMemProcessEngineConfiguration().buildProcessEngine(); System.out.println(processEngine.hashCode()); assertEquals(\"default\", processEngine); }", "n_tokens": 45, "n_pass": [90, 8, 5]}
{"time": "2021-02-23 19:46:42.172449", "score": "0.4017", "loss": "14.8039", "code": "void userDefaultName() { ProcessEnginecreateStandaloneInMemProcessEngineConfiguration().buildProcessEngine(); System.out.println(processEngine.hashCode()); assertEquals(\"default\", processEngine); }", "n_tokens": 44, "n_pass": [91, 9, 6]}
{"time": "2021-02-23 19:46:45.249373", "score": "0.3407", "loss": "14.77", "code": "void userDefaultName() { ProcessEnginecreateStandaloneInMemProcessEngineConfiguration.buildProcessEngine(); System.out.println(processEngine.hashCode()); assertEquals(\"default\", processEngine); }", "n_tokens": 42, "n_pass": [97, 10, 7]}
{"time": "2021-02-23 19:46:53.174867", "score": "0.3588", "loss": "15.0196", "code": "void userDefaultName() { ProcessEnginecreateStandaloneInMemProcessEngineConfiguration.buildProcessEngine(); out.println(processEngine.hashCode()); assertEquals(\"default\", processEngine); }", "n_tokens": 40, "n_pass": [101, 13, 8]}
{"time": "2021-02-23 19:46:58.440725", "score": "0.3745", "loss": "14.7167", "code": "void userDefaultName() { ProcessEnginecreateStandaloneInMemProcessEngineConfiguration.buildProcessEngine(); out.println(hashCode()); assertEquals(\"default\", processEngine); }", "n_tokens": 38, "n_pass": [104, 15, 9]}
{"time": "2021-02-23 19:47:06.751079", "score": "0.4473", "loss": "15.1294", "code": "void userDefaultName() { ProcessEnginecreateStandaloneInMemProcessEngineConfiguration.buildProcessEngine(); println(hashCode()); assertEquals(\"default\", processEngine); }", "n_tokens": 36, "n_pass": [122, 18, 10]}
{"time": "2021-02-23 19:47:18.957150", "score": "0.7123", "loss": "15.8312", "code": "void userDefaultName() { ProcessEnginecreateStandaloneInMemProcessEngineConfiguration.buildProcessEngine(); (hashCode()); assertEquals(\"default\", processEngine); }", "n_tokens": 35, "n_pass": [177, 21, 11]}
{"time": "2021-02-23 19:47:21.597623", "score": "0.7123", "loss": "15.8312", "code": "void userDefaultName() { ProcessEnginecreateStandaloneInMemProcessEngineConfiguration.buildProcessEngine(); (hashCode());assertEquals(\"default\", processEngine); }", "n_tokens": 34, "n_pass": [183, 22, 12]}
{"time": "2021-02-23 19:47:24.247472", "score": "0.6875", "loss": "16.546", "code": "void userDefaultName() { ProcessEnginecreateStandaloneInMemProcessEngineConfiguration.buildProcessEngine(); (hashCode());assertEquals(\"\", processEngine); }", "n_tokens": 33, "n_pass": [187, 23, 13]}
{"time": "2021-02-23 19:47:26.889732", "score": "0.6875", "loss": "16.546", "code": "void userDefaultName() { ProcessEnginecreateStandaloneInMemProcessEngineConfiguration.buildProcessEngine(); (hashCode());assertEquals(\"\",processEngine); }", "n_tokens": 32, "n_pass": [190, 24, 14]}
{"time": "2021-02-23 19:47:29.505414", "score": "0.6875", "loss": "16.546", "code": "void userDefaultName() { ProcessEnginecreateStandaloneInMemProcessEngineConfiguration.buildProcessEngine(); (hashCode());assertEquals(\"\",processEngine);}", "n_tokens": 31, "n_pass": [194, 25, 15]}
{"time": "2021-02-23 19:47:32.953920", "score": "0.6875", "loss": "16.546", "code": "void userDefaultName(){ ProcessEnginecreateStandaloneInMemProcessEngineConfiguration.buildProcessEngine(); (hashCode());assertEquals(\"\",processEngine);}", "n_tokens": 30, "n_pass": [201, 26, 16]}
{"time": "2021-02-23 19:47:35.593946", "score": "0.6875", "loss": "16.546", "code": "void userDefaultName(){ProcessEnginecreateStandaloneInMemProcessEngineConfiguration.buildProcessEngine(); (hashCode());assertEquals(\"\",processEngine);}", "n_tokens": 29, "n_pass": [203, 27, 17]}
{"time": "2021-02-23 19:47:38.236954", "score": "0.8853", "loss": "17.7688", "code": "void userDefaultName(){createStandaloneInMemProcessEngineConfiguration.buildProcessEngine(); (hashCode());assertEquals(\"\",processEngine);}", "n_tokens": 28, "n_pass": [204, 28, 18]}
{"time": "2021-02-23 19:47:43.531876", "score": "0.8853", "loss": "17.7688", "code": "void userDefaultName(){createStandaloneInMemProcessEngineConfiguration.buildProcessEngine();(hashCode());assertEquals(\"\",processEngine);}", "n_tokens": 27, "n_pass": [211, 30, 19]}

Minimal simplified code:
void userDefaultName(){createStandaloneInMemProcessEngineConfiguration.buildProcessEngine();(hashCode());assertEquals("",processEngine);}

