
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/semanticvectors__semanticvectors/src/main/java/pitt/search/semanticvectors/VectorStoreReaderLucene_getNumVectors.java
method_name = getNumVectors
method_body = public int getNumVectors() { Enumeration<ObjectVector> allVectors = this.getAllVectors(); int i = 0; while (allVectors.hasMoreElements()) { allVectors.nextElement(); ++i; } return i; }
predict, score, loss = size, 0.9592277407646179, 18.63416862487793

Trace of simplified code(s):
{"time": "2021-02-24 07:00:04.728174", "score": "0.9592", "loss": "18.6342", "code": "public int getNumVectors() { Enumeration<ObjectVector> allVectors = this.getAllVectors(); int i = 0; while (allVectors.hasMoreElements()) { allVectors.nextElement(); ++i; } return i; }", "n_tokens": 67, "n_pass": [1, 1, 1]}
{"time": "2021-02-24 07:00:07.344499", "score": "0.9104", "loss": "16.3989", "code": "public int getNumVectors() { Enumeration<ObjectVector> allVectors; while (allVectors.hasMoreElements()) { allVectors.nextElement(); ++i; } return i; }", "n_tokens": 50, "n_pass": [9, 2, 2]}
{"time": "2021-02-24 07:00:10.348562", "score": "0.9209", "loss": "16.5419", "code": "public int getNumVectors() { Enumeration<ObjectVector> allVectors; while (allVectors.hasMoreElements()) { allVectors.nextElement();; } return i; }", "n_tokens": 46, "n_pass": [41, 3, 3]}
{"time": "2021-02-24 07:00:14.078660", "score": "0.9209", "loss": "16.5419", "code": "public int getNumVectors() { Enumeration<ObjectVector> allVectors; while (allVectors.hasMoreElements()) { allVectors.nextElement();} return i; }", "n_tokens": 44, "n_pass": [75, 4, 4]}
{"time": "2021-02-24 07:00:16.686268", "score": "0.9794", "loss": "19.8243", "code": "public int getNumVectors() { Enumeration<ObjectVector> allVectors; while (allVectors.hasMoreElements()) { allVectors.nextElement();} ; }", "n_tokens": 41, "n_pass": [77, 5, 5]}
{"time": "2021-02-24 07:00:19.308082", "score": "0.9794", "loss": "19.8243", "code": "int getNumVectors() { Enumeration<ObjectVector> allVectors; while (allVectors.hasMoreElements()) { allVectors.nextElement();} ; }", "n_tokens": 39, "n_pass": [79, 6, 6]}
{"time": "2021-02-24 07:00:25.756899", "score": "0.9846", "loss": "21.4201", "code": "int getNumVectors() { Enumeration<ObjectVector> allVectors; while (allVectors.hasMoreElements) { allVectors.nextElement();} ; }", "n_tokens": 37, "n_pass": [91, 8, 7]}
{"time": "2021-02-24 07:00:28.450706", "score": "0.2717", "loss": "15.9102", "code": "int getNumVectors() { Enumeration<ObjectVector> allVectors; while (allVectors.hasMoreElements) { nextElement();} ; }", "n_tokens": 35, "n_pass": [94, 9, 8]}
{"time": "2021-02-24 07:00:39.145723", "score": "0.2717", "loss": "15.9102", "code": "int getNumVectors() { Enumeration<ObjectVector> allVectors; while (allVectors.hasMoreElements) { nextElement();}; }", "n_tokens": 34, "n_pass": [151, 11, 9]}
{"time": "2021-02-24 07:00:41.762790", "score": "0.2717", "loss": "15.9102", "code": "int getNumVectors() { Enumeration<ObjectVector> allVectors; while (allVectors.hasMoreElements) { nextElement();} }", "n_tokens": 33, "n_pass": [152, 12, 10]}
{"time": "2021-02-24 07:00:45.149762", "score": "0.2717", "loss": "15.9102", "code": "int getNumVectors(){ Enumeration<ObjectVector> allVectors; while (allVectors.hasMoreElements) { nextElement();} }", "n_tokens": 32, "n_pass": [159, 13, 11]}
{"time": "2021-02-24 07:00:47.766411", "score": "0.2717", "loss": "15.9102", "code": "int getNumVectors(){Enumeration<ObjectVector> allVectors; while (allVectors.hasMoreElements) { nextElement();} }", "n_tokens": 31, "n_pass": [161, 14, 12]}
{"time": "2021-02-24 07:00:50.743066", "score": "0.2717", "loss": "15.9102", "code": "int getNumVectors(){Enumeration<ObjectVector>allVectors; while (allVectors.hasMoreElements) { nextElement();} }", "n_tokens": 30, "n_pass": [166, 15, 13]}
{"time": "2021-02-24 07:00:53.391116", "score": "0.2717", "loss": "15.9102", "code": "int getNumVectors(){Enumeration<ObjectVector>allVectors;while (allVectors.hasMoreElements) { nextElement();} }", "n_tokens": 29, "n_pass": [169, 16, 14]}
{"time": "2021-02-24 07:00:56.018602", "score": "0.2717", "loss": "15.9102", "code": "int getNumVectors(){Enumeration<ObjectVector>allVectors;while(allVectors.hasMoreElements) { nextElement();} }", "n_tokens": 28, "n_pass": [171, 17, 15]}
{"time": "2021-02-24 07:01:01.221840", "score": "0.2717", "loss": "15.9102", "code": "int getNumVectors(){Enumeration<ObjectVector>allVectors;while(allVectors.hasMoreElements){ nextElement();} }", "n_tokens": 27, "n_pass": [177, 19, 16]}
{"time": "2021-02-24 07:01:03.833955", "score": "0.2717", "loss": "15.9102", "code": "int getNumVectors(){Enumeration<ObjectVector>allVectors;while(allVectors.hasMoreElements){nextElement();} }", "n_tokens": 26, "n_pass": [179, 20, 17]}
{"time": "2021-02-24 07:01:10.936269", "score": "0.2717", "loss": "15.9102", "code": "int getNumVectors(){Enumeration<ObjectVector>allVectors;while(allVectors.hasMoreElements){nextElement();}}", "n_tokens": 25, "n_pass": [207, 22, 18]}

Minimal simplified code:
int getNumVectors(){Enumeration<ObjectVector>allVectors;while(allVectors.hasMoreElements){nextElement();}}

