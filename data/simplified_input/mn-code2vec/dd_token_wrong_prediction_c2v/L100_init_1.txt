
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/timols__jenkins-gitlab-merge-request-builder-plugin/src/main/java/org/jenkinsci/plugins/gitlab/GitlabRepository_init.java
method_name = init
method_body = public void init() { checkState(); for (GitlabMergeRequestWrapper mergeRequestWrapper : mergeRequests.values()) { mergeRequestWrapper.init(builder, project); } }
predict, score, loss = cleanup, 0.4141106903553009, 4.234766960144043

Trace of simplified code(s):
{"time": "2021-02-23 21:41:05.637310", "score": "0.4141", "loss": "4.2348", "code": "public void init() { checkState(); for (GitlabMergeRequestWrapper mergeRequestWrapper : mergeRequests.values()) { mergeRequestWrapper.init(builder, project); } }", "n_tokens": 47, "n_pass": [1, 1, 1]}
{"time": "2021-02-23 21:41:08.369422", "score": "0.4141", "loss": "4.2348", "code": "void init() { checkState(); for (GitlabMergeRequestWrapper mergeRequestWrapper : mergeRequests.values()) { mergeRequestWrapper.init(builder, project); } }", "n_tokens": 45, "n_pass": [44, 2, 2]}
{"time": "2021-02-23 21:41:13.770414", "score": "0.6869", "loss": "7.8559", "code": "void init() { checkState(); for (GitlabMergeRequestWrapper mergeRequestWrapper : mergeRequests.values()) {init(builder, project); } }", "n_tokens": 42, "n_pass": [54, 4, 3]}
{"time": "2021-02-23 21:41:16.443548", "score": "0.4182", "loss": "7.3285", "code": "void init() { checkState(); for (GitlabMergeRequestWrapper mergeRequestWrapper : mergeRequests.values()) {init(builder); } }", "n_tokens": 39, "n_pass": [56, 5, 4]}
{"time": "2021-02-23 21:41:24.684417", "score": "0.4182", "loss": "7.3285", "code": "void init(){ checkState(); for (GitlabMergeRequestWrapper mergeRequestWrapper : mergeRequests.values()) {init(builder); } }", "n_tokens": 38, "n_pass": [105, 7, 5]}
{"time": "2021-02-23 21:41:27.341342", "score": "0.4182", "loss": "7.3285", "code": "void init(){checkState(); for (GitlabMergeRequestWrapper mergeRequestWrapper : mergeRequests.values()) {init(builder); } }", "n_tokens": 37, "n_pass": [107, 8, 6]}
{"time": "2021-02-23 21:41:30.042539", "score": "0.4182", "loss": "7.3285", "code": "void init(){checkState();for (GitlabMergeRequestWrapper mergeRequestWrapper : mergeRequests.values()) {init(builder); } }", "n_tokens": 36, "n_pass": [112, 9, 7]}
{"time": "2021-02-23 21:41:42.144240", "score": "0.4182", "loss": "7.3285", "code": "void init(){checkState();for (GitlabMergeRequestWrapper mergeRequestWrapper: mergeRequests.values()) {init(builder); } }", "n_tokens": 35, "n_pass": [163, 12, 8]}
{"time": "2021-02-23 21:41:44.820225", "score": "0.4182", "loss": "7.3285", "code": "void init(){checkState();for (GitlabMergeRequestWrapper mergeRequestWrapper:mergeRequests.values()) {init(builder); } }", "n_tokens": 34, "n_pass": [164, 13, 9]}
{"time": "2021-02-23 21:41:50.202899", "score": "0.4182", "loss": "7.3285", "code": "void init(){checkState();for (GitlabMergeRequestWrapper mergeRequestWrapper:mergeRequests.values()){init(builder); } }", "n_tokens": 33, "n_pass": [171, 15, 10]}
{"time": "2021-02-23 21:41:52.890854", "score": "0.6297", "loss": "19.2851", "code": "void init(){checkState();for (GitlabMergeRequestWrapper mergeRequestWrapper:mergeRequests.values()){(builder); } }", "n_tokens": 32, "n_pass": [173, 16, 11]}
{"time": "2021-02-23 21:41:55.616634", "score": "0.6297", "loss": "19.2851", "code": "void init(){checkState();for (GitlabMergeRequestWrapper mergeRequestWrapper:mergeRequests.values()){(builder);} }", "n_tokens": 31, "n_pass": [178, 17, 12]}
{"time": "2021-02-23 21:41:58.304413", "score": "0.6297", "loss": "19.2851", "code": "void init(){checkState();for (GitlabMergeRequestWrapper mergeRequestWrapper:mergeRequests.values()){(builder);}}", "n_tokens": 30, "n_pass": [180, 18, 13]}
{"time": "2021-02-23 21:42:01.862758", "score": "0.6297", "loss": "19.2851", "code": "void init(){checkState();for(GitlabMergeRequestWrapper mergeRequestWrapper:mergeRequests.values()){(builder);}}", "n_tokens": 29, "n_pass": [193, 19, 14]}

Minimal simplified code:
void init(){checkState();for(GitlabMergeRequestWrapper mergeRequestWrapper:mergeRequests.values()){(builder);}}

