
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/spring-cloud__spring-cloud-function/spring-cloud-function-adapters/spring-cloud-function-adapter-aws/src/test/java/org/springframework/cloud/function/adapter/aws/SpringFunctionInitializerTests_supplierCatalog.java
method_name = supplierCatalog
method_body = @Test public void supplierCatalog() { initializer = new SpringFunctionInitializer(SupplierConfig.class); initializer.initialize(); Flux<?> result = Flux.from(initializer.apply(Flux.empty())); assertThat(result.blockFirst()).isInstanceOf(Bar.class); }
predict, score, loss = initialize, 0.538590133190155, 15.847349166870117

Trace of simplified code(s):
{"time": "2021-02-24 04:06:44.640285", "score": "0.5386", "loss": "15.8473", "code": "@Test public void supplierCatalog() { initializer = new SpringFunctionInitializer(SupplierConfig.class); initializer.initialize(); Flux<?> result = Flux.from(initializer.apply(Flux.empty())); assertThat(result.blockFirst()).isInstanceOf(Bar.class); }", "n_tokens": 78, "n_pass": [1, 1, 1]}
{"time": "2021-02-24 04:06:50.016697", "score": "0.9123", "loss": "19.7253", "code": "@Test public void supplierCatalog() { initializer = new SpringFunctionInitializer(SupplierConfig.class); initializer.initialize(); Flux<?> result = Flux.from(initializer.apply(Flux.empty())).isInstanceOf(Bar.class); }", "n_tokens": 68, "n_pass": [26, 3, 2]}
{"time": "2021-02-24 04:06:52.701941", "score": "0.4189", "loss": "16.4904", "code": "@Test public void supplierCatalog() { initializer = new SpringFunctionInitializer(SupplierConfig.class); initializer result = Flux.from(initializer.apply(Flux.empty())).isInstanceOf(Bar.class); }", "n_tokens": 58, "n_pass": [30, 4, 3]}
{"time": "2021-02-24 04:06:55.378948", "score": "0.7115", "loss": "18.8098", "code": "@Test public void supplierCatalog() { initializer = new SpringFunctionInitializer(SupplierConfig.class); initializerFlux.from(initializer.apply(Flux.empty())).isInstanceOf(Bar.class); }", "n_tokens": 53, "n_pass": [49, 5, 4]}
{"time": "2021-02-24 04:07:03.309406", "score": "0.6723", "loss": "19.211", "code": "@Test public void supplierCatalog() { initializer = new SpringFunctionInitializer(SupplierConfig.class); initializerFlux.from((Flux.empty())).isInstanceOf(Bar.class); }", "n_tokens": 50, "n_pass": [85, 8, 5]}
{"time": "2021-02-24 04:07:08.556357", "score": "0.6723", "loss": "19.211", "code": "@Test void supplierCatalog() { initializer = new SpringFunctionInitializer(SupplierConfig.class); initializerFlux.from((Flux.empty())).isInstanceOf(Bar.class); }", "n_tokens": 48, "n_pass": [93, 10, 6]}
{"time": "2021-02-24 04:07:11.581799", "score": "0.3675", "loss": "18.1927", "code": "@Test void supplierCatalog() { initializer = SpringFunctionInitializer(SupplierConfig.class); initializerFlux.from((Flux.empty())).isInstanceOf(Bar.class); }", "n_tokens": 46, "n_pass": [100, 11, 7]}
{"time": "2021-02-24 04:07:14.181548", "score": "0.6011", "loss": "16.6399", "code": "@Test void supplierCatalog() { initializer =(SupplierConfig.class); initializerFlux.from((Flux.empty())).isInstanceOf(Bar.class); }", "n_tokens": 44, "n_pass": [101, 12, 8]}
{"time": "2021-02-24 04:07:16.799316", "score": "0.5933", "loss": "16.6256", "code": "@Test void supplierCatalog() { initializer =(SupplierConfig); initializerFlux.from((Flux.empty())).isInstanceOf(Bar.class); }", "n_tokens": 42, "n_pass": [103, 13, 9]}
{"time": "2021-02-24 04:07:27.524541", "score": "0.5558", "loss": "18.6696", "code": "@Test void supplierCatalog() { initializer =(SupplierConfig) initializerFlux.from((Flux.empty())).isInstanceOf(Bar.class); }", "n_tokens": 41, "n_pass": [156, 16, 10]}
{"time": "2021-02-24 04:07:30.151508", "score": "0.5558", "loss": "18.6696", "code": "@Test void supplierCatalog() { initializer =(SupplierConfig)initializerFlux.from((Flux.empty())).isInstanceOf(Bar.class); }", "n_tokens": 40, "n_pass": [157, 17, 11]}
{"time": "2021-02-24 04:07:32.754940", "score": "0.3972", "loss": "17.7084", "code": "@Test void supplierCatalog() { initializer =(SupplierConfig)Flux.from((Flux.empty())).isInstanceOf(Bar.class); }", "n_tokens": 39, "n_pass": [158, 18, 12]}
{"time": "2021-02-24 04:07:35.348948", "score": "0.4039", "loss": "19.2279", "code": "@Test void supplierCatalog() { initializer =(SupplierConfig).from((Flux.empty())).isInstanceOf(Bar.class); }", "n_tokens": 38, "n_pass": [159, 19, 13]}
{"time": "2021-02-24 04:07:40.577659", "score": "0.4145", "loss": "19.4061", "code": "@Test void supplierCatalog() { initializer =(SupplierConfig).from((Flux())).isInstanceOf(Bar.class); }", "n_tokens": 36, "n_pass": [165, 21, 14]}
{"time": "2021-02-24 04:07:43.182908", "score": "0.403", "loss": "19.0747", "code": "@Test void supplierCatalog() { initializer =(SupplierConfig).from((Flux)).isInstanceOf(Bar.class); }", "n_tokens": 34, "n_pass": [166, 22, 15]}
{"time": "2021-02-24 04:07:45.776646", "score": "0.4998", "loss": "18.6083", "code": "@Test void supplierCatalog() { initializer =(SupplierConfig).from((Flux)).isInstanceOf(Bar); }", "n_tokens": 32, "n_pass": [170, 23, 16]}
{"time": "2021-02-24 04:07:49.528365", "score": "0.4998", "loss": "18.6083", "code": "@Test void supplierCatalog(){ initializer =(SupplierConfig).from((Flux)).isInstanceOf(Bar); }", "n_tokens": 31, "n_pass": [181, 24, 17]}
{"time": "2021-02-24 04:07:52.138145", "score": "0.4998", "loss": "18.6083", "code": "@Test void supplierCatalog(){initializer =(SupplierConfig).from((Flux)).isInstanceOf(Bar); }", "n_tokens": 30, "n_pass": [183, 25, 18]}
{"time": "2021-02-24 04:07:54.734767", "score": "0.4998", "loss": "18.6083", "code": "@Test void supplierCatalog(){initializer=(SupplierConfig).from((Flux)).isInstanceOf(Bar); }", "n_tokens": 29, "n_pass": [185, 26, 19]}
{"time": "2021-02-24 04:08:04.390221", "score": "0.7011", "loss": "18.63", "code": "@Test void supplierCatalog(){initializer=(SupplierConfig).from((Flux)).isInstanceOf(); }", "n_tokens": 28, "n_pass": [225, 29, 20]}
{"time": "2021-02-24 04:08:06.988252", "score": "0.7011", "loss": "18.63", "code": "@Test void supplierCatalog(){initializer=(SupplierConfig).from((Flux)).isInstanceOf();}", "n_tokens": 27, "n_pass": [228, 30, 21]}

Minimal simplified code:
@Test void supplierCatalog(){initializer=(SupplierConfig).from((Flux)).isInstanceOf();}

