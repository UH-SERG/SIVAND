
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/mimno__Mallet/src/cc/mallet/types/Dirichlet_digammaDifference.java
method_name = digammaDifference
method_body = public static double digammaDifference(double x, int n) { double sum = 0; for (int i = 0; i < n; i++) { sum += 1 / (x + i); } return sum; }
predict, score, loss = reduce, 0.6111194491386414, 23.42435646057129

Trace of simplified code(s):
{"time": "2021-02-24 02:31:59.549154", "score": "0.6111", "loss": "23.4244", "code": "public static double digammaDifference(double x, int n) { double sum = 0; for (int i = 0; i < n; i++) { sum += 1 / (x + i); } return sum; }", "n_tokens": 81, "n_pass": [1, 1, 1]}
{"time": "2021-02-24 02:32:05.628692", "score": "0.7695", "loss": "22.5853", "code": "public static double digammaDifference(double x, int n) {  0; for (int i = 0; i < n; i++) { sum += 1 / (x + i); } return sum; }", "n_tokens": 76, "n_pass": [48, 3, 2]}
{"time": "2021-02-24 02:32:08.303988", "score": "0.8224", "loss": "21.9121", "code": "public static double digammaDifference(double x, int n) {  0; for (int i = 0;n; i++) { sum += 1 / (x + i); } return sum; }", "n_tokens": 71, "n_pass": [51, 4, 3]}
{"time": "2021-02-24 02:32:11.731489", "score": "0.6015", "loss": "20.665", "code": "public static double digammaDifference(double n) {  0; for (int i = 0;n; i++) { sum += 1 / (x + i); } return sum; }", "n_tokens": 66, "n_pass": [61, 5, 4]}
{"time": "2021-02-24 02:32:15.626528", "score": "0.6015", "loss": "20.665", "code": "public static double digammaDifference(double n) {0; for (int i = 0;n; i++) { sum += 1 / (x + i); } return sum; }", "n_tokens": 64, "n_pass": [104, 6, 5]}
{"time": "2021-02-24 02:32:18.314029", "score": "0.5741", "loss": "20.6368", "code": "public static double digammaDifference(double n) { for (int i = 0;n; i++) { sum += 1 / (x + i); } return sum; }", "n_tokens": 62, "n_pass": [105, 7, 6]}
{"time": "2021-02-24 02:32:21.045696", "score": "0.6637", "loss": "21.9194", "code": "public static double digammaDifference(double n) { for (i = 0;n; i++) { sum += 1 / (x + i); } return sum; }", "n_tokens": 60, "n_pass": [108, 8, 7]}
{"time": "2021-02-24 02:32:23.701633", "score": "0.5876", "loss": "20.782", "code": "public static double digammaDifference(double n) { for ( 0;n; i++) { sum += 1 / (x + i); } return sum; }", "n_tokens": 57, "n_pass": [109, 9, 8]}
{"time": "2021-02-24 02:32:26.334199", "score": "0.5915", "loss": "20.8716", "code": "public static double digammaDifference(double n) { for ( 0;n; ) { sum += 1 / (x + i); } return sum; }", "n_tokens": 54, "n_pass": [112, 10, 9]}
{"time": "2021-02-24 02:32:28.970012", "score": "0.8303", "loss": "21.5714", "code": "public static double digammaDifference(double n) { for ( 0;n; ) { sum +=  (x + i); } return sum; }", "n_tokens": 51, "n_pass": [116, 11, 10]}
{"time": "2021-02-24 02:32:31.578609", "score": "0.5782", "loss": "20.3891", "code": "public static double digammaDifference(double n) { for ( 0;n; ) { sum +=  (xi); } return sum; }", "n_tokens": 48, "n_pass": [118, 12, 11]}
{"time": "2021-02-24 02:32:36.935360", "score": "0.5782", "loss": "20.3891", "code": "static double digammaDifference(double n) { for ( 0;n; ) { sum +=  (xi); } return sum; }", "n_tokens": 46, "n_pass": [123, 14, 12]}
{"time": "2021-02-24 02:32:39.554664", "score": "0.5782", "loss": "20.3891", "code": "double digammaDifference(double n) { for ( 0;n; ) { sum +=  (xi); } return sum; }", "n_tokens": 44, "n_pass": [124, 15, 13]}
{"time": "2021-02-24 02:32:42.572665", "score": "0.9975", "loss": "28.958", "code": "double digammaDifference(double n) { for ( 0;n; ) { sum  (xi); } return sum; }", "n_tokens": 41, "n_pass": [136, 16, 14]}
{"time": "2021-02-24 02:32:45.169453", "score": "0.7102", "loss": "19.9993", "code": "double digammaDifference(double n) { for ( 0;n; ) { sum  (xi); } ; }", "n_tokens": 38, "n_pass": [140, 17, 15]}
{"time": "2021-02-24 02:32:54.845755", "score": "0.7102", "loss": "19.9993", "code": "double digammaDifference(double n) { for ( 0;n; ) { sum  (xi); } }", "n_tokens": 36, "n_pass": [186, 19, 16]}
{"time": "2021-02-24 02:32:58.320747", "score": "0.7102", "loss": "19.9993", "code": "double digammaDifference(double n){ for ( 0;n; ) { sum  (xi); } }", "n_tokens": 35, "n_pass": [196, 20, 17]}
{"time": "2021-02-24 02:33:00.965902", "score": "0.7102", "loss": "19.9993", "code": "double digammaDifference(double n){for ( 0;n; ) { sum  (xi); } }", "n_tokens": 34, "n_pass": [198, 21, 18]}
{"time": "2021-02-24 02:33:03.592833", "score": "0.7102", "loss": "19.9993", "code": "double digammaDifference(double n){for( 0;n; ) { sum  (xi); } }", "n_tokens": 33, "n_pass": [200, 22, 19]}
{"time": "2021-02-24 02:33:06.251481", "score": "0.7102", "loss": "19.9993", "code": "double digammaDifference(double n){for(0;n; ) { sum  (xi); } }", "n_tokens": 32, "n_pass": [202, 23, 20]}
{"time": "2021-02-24 02:33:08.868627", "score": "0.7088", "loss": "20.0768", "code": "double digammaDifference(double n){for(;n; ) { sum  (xi); } }", "n_tokens": 31, "n_pass": [203, 24, 21]}
{"time": "2021-02-24 02:33:11.481248", "score": "0.7028", "loss": "20.096", "code": "double digammaDifference(double n){for(;; ) { sum  (xi); } }", "n_tokens": 30, "n_pass": [205, 25, 22]}
{"time": "2021-02-24 02:33:14.185600", "score": "0.7028", "loss": "20.096", "code": "double digammaDifference(double n){for(;;) { sum  (xi); } }", "n_tokens": 29, "n_pass": [207, 26, 23]}
{"time": "2021-02-24 02:33:16.830319", "score": "0.7028", "loss": "20.096", "code": "double digammaDifference(double n){for(;;){ sum  (xi); } }", "n_tokens": 28, "n_pass": [209, 27, 24]}
{"time": "2021-02-24 02:33:22.047052", "score": "0.6514", "loss": "23.2186", "code": "double digammaDifference(double n){for(;;){ sum  (); } }", "n_tokens": 26, "n_pass": [213, 29, 25]}
{"time": "2021-02-24 02:33:27.748234", "score": "0.6514", "loss": "23.2186", "code": "double digammaDifference(double n){for(;;){ sum  ();} }", "n_tokens": 25, "n_pass": [246, 30, 26]}
{"time": "2021-02-24 02:33:30.353012", "score": "0.6514", "loss": "23.2186", "code": "double digammaDifference(double n){for(;;){ sum  ();}}", "n_tokens": 24, "n_pass": [247, 31, 27]}
{"time": "2021-02-24 02:33:33.936124", "score": "0.6514", "loss": "23.2186", "code": "double digammaDifference(double n){for(;;){sum  ();}}", "n_tokens": 23, "n_pass": [264, 32, 28]}
{"time": "2021-02-24 02:33:36.530746", "score": "0.6514", "loss": "23.2186", "code": "double digammaDifference(double n){for(;;){sum ();}}", "n_tokens": 22, "n_pass": [266, 33, 29]}
{"time": "2021-02-24 02:33:39.141419", "score": "0.6514", "loss": "23.2186", "code": "double digammaDifference(double n){for(;;){sum();}}", "n_tokens": 21, "n_pass": [267, 34, 30]}

Minimal simplified code:
double digammaDifference(double n){for(;;){sum();}}

