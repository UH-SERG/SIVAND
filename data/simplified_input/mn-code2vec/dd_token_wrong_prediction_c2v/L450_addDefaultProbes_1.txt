
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/bluestreak01__questdb/core/src/main/java/com/questdb/parser/typeprobe/TypeProbeCollection_addDefaultProbes.java
method_name = addDefaultProbes
method_body = private void addDefaultProbes() { probes.add(new IntProbe()); probes.add(new LongProbe()); probes.add(new DoubleProbe()); probes.add(new BooleanProbe()); }
predict, score, loss = run, 0.39380842447280884, 18.323549270629883

Trace of simplified code(s):
{"time": "2021-02-24 01:54:12.938864", "score": "0.3938", "loss": "18.3235", "code": "private void addDefaultProbes() { probes.add(new IntProbe()); probes.add(new LongProbe()); probes.add(new DoubleProbe()); probes.add(new BooleanProbe()); }", "n_tokens": 59, "n_pass": [1, 1, 1]}
{"time": "2021-02-24 01:54:16.358166", "score": "0.3261", "loss": "17.5732", "code": "private void addDefaultProbes() {add(new IntProbe()); probes.add(new LongProbe()); probes.add(new DoubleProbe()); probes.add(new BooleanProbe()); }", "n_tokens": 56, "n_pass": [47, 2, 2]}
{"time": "2021-02-24 01:54:25.362326", "score": "0.3224", "loss": "17.2748", "code": "private void addDefaultProbes() {add(new IntProbe()); probes.add(new LongProbe()); probes.add(new DoubleProbe()); probes(new BooleanProbe()); }", "n_tokens": 54, "n_pass": [111, 5, 3]}
{"time": "2021-02-24 01:54:27.990815", "score": "0.3224", "loss": "17.2748", "code": " void addDefaultProbes() {add(new IntProbe()); probes.add(new LongProbe()); probes.add(new DoubleProbe()); probes(new BooleanProbe()); }", "n_tokens": 53, "n_pass": [116, 6, 4]}
{"time": "2021-02-24 01:54:30.601450", "score": "0.3224", "loss": "17.2748", "code": "void addDefaultProbes() {add(new IntProbe()); probes.add(new LongProbe()); probes.add(new DoubleProbe()); probes(new BooleanProbe()); }", "n_tokens": 52, "n_pass": [117, 7, 5]}
{"time": "2021-02-24 01:54:39.305211", "score": "0.308", "loss": "17.2596", "code": "void addDefaultProbes() {add(new IntProbe()); probes.add(new LongProbe()); probes.add(new DoubleProbe());(new BooleanProbe()); }", "n_tokens": 50, "n_pass": [139, 10, 6]}
{"time": "2021-02-24 01:54:52.256150", "score": "0.308", "loss": "17.2596", "code": "void addDefaultProbes() {add(new IntProbe()); probes.add(new LongProbe()); probes.add(new DoubleProbe());( BooleanProbe()); }", "n_tokens": 49, "n_pass": [215, 13, 7]}
{"time": "2021-02-24 01:54:54.861074", "score": "0.308", "loss": "17.2596", "code": "void addDefaultProbes() {add(new IntProbe()); probes.add(new LongProbe()); probes.add(new DoubleProbe());(BooleanProbe()); }", "n_tokens": 48, "n_pass": [216, 14, 8]}
{"time": "2021-02-24 01:54:57.471254", "score": "0.308", "loss": "17.2596", "code": "void addDefaultProbes() {add(new IntProbe()); probes.add(new LongProbe()); probes.add(new DoubleProbe());(BooleanProbe());}", "n_tokens": 47, "n_pass": [222, 15, 9]}
{"time": "2021-02-24 01:55:00.883330", "score": "0.308", "loss": "17.2596", "code": "void addDefaultProbes(){add(new IntProbe()); probes.add(new LongProbe()); probes.add(new DoubleProbe());(BooleanProbe());}", "n_tokens": 46, "n_pass": [229, 16, 10]}
{"time": "2021-02-24 01:55:03.486338", "score": "0.5663", "loss": "18.0394", "code": "void addDefaultProbes(){(new IntProbe()); probes.add(new LongProbe()); probes.add(new DoubleProbe());(BooleanProbe());}", "n_tokens": 45, "n_pass": [231, 17, 11]}
{"time": "2021-02-24 01:55:06.081104", "score": "0.5663", "loss": "18.0394", "code": "void addDefaultProbes(){( IntProbe()); probes.add(new LongProbe()); probes.add(new DoubleProbe());(BooleanProbe());}", "n_tokens": 44, "n_pass": [233, 18, 12]}
{"time": "2021-02-24 01:55:08.714246", "score": "0.5663", "loss": "18.0394", "code": "void addDefaultProbes(){(IntProbe()); probes.add(new LongProbe()); probes.add(new DoubleProbe());(BooleanProbe());}", "n_tokens": 43, "n_pass": [234, 19, 13]}
{"time": "2021-02-24 01:55:11.306767", "score": "0.5663", "loss": "18.0394", "code": "void addDefaultProbes(){(IntProbe());probes.add(new LongProbe()); probes.add(new DoubleProbe());(BooleanProbe());}", "n_tokens": 42, "n_pass": [240, 20, 14]}
{"time": "2021-02-24 01:55:13.957877", "score": "0.4633", "loss": "16.5462", "code": "void addDefaultProbes(){(IntProbe());probesadd(new LongProbe()); probes.add(new DoubleProbe());(BooleanProbe());}", "n_tokens": 41, "n_pass": [242, 21, 15]}
{"time": "2021-02-24 01:55:16.609473", "score": "0.4053", "loss": "17.3262", "code": "void addDefaultProbes(){(IntProbe());probes(new LongProbe()); probes.add(new DoubleProbe());(BooleanProbe());}", "n_tokens": 40, "n_pass": [243, 22, 16]}
{"time": "2021-02-24 01:55:24.411169", "score": "0.4053", "loss": "17.3262", "code": "void addDefaultProbes(){(IntProbe());probes(new LongProbe());probes.add(new DoubleProbe());(BooleanProbe());}", "n_tokens": 39, "n_pass": [252, 25, 17]}
{"time": "2021-02-24 01:55:27.022597", "score": "0.2832", "loss": "15.9278", "code": "void addDefaultProbes(){(IntProbe());probes(new LongProbe());probesadd(new DoubleProbe());(BooleanProbe());}", "n_tokens": 38, "n_pass": [254, 26, 18]}
{"time": "2021-02-24 01:55:32.295525", "score": "0.3732", "loss": "15.8593", "code": "void addDefaultProbes(){(IntProbe());probes(new LongProbe());probesadd( DoubleProbe());(BooleanProbe());}", "n_tokens": 37, "n_pass": [257, 28, 19]}
{"time": "2021-02-24 01:55:34.895037", "score": "0.3732", "loss": "15.8593", "code": "void addDefaultProbes(){(IntProbe());probes(new LongProbe());probesadd(DoubleProbe());(BooleanProbe());}", "n_tokens": 36, "n_pass": [258, 29, 20]}
{"time": "2021-02-24 01:55:38.342539", "score": "0.2815", "loss": "17.6314", "code": "void addDefaultProbes(){(IntProbe());(new LongProbe());probesadd(DoubleProbe());(BooleanProbe());}", "n_tokens": 35, "n_pass": [283, 30, 21]}
{"time": "2021-02-24 01:55:40.941231", "score": "0.2815", "loss": "17.6314", "code": "void addDefaultProbes(){(IntProbe());( LongProbe());probesadd(DoubleProbe());(BooleanProbe());}", "n_tokens": 34, "n_pass": [285, 31, 22]}
{"time": "2021-02-24 01:55:43.530480", "score": "0.2815", "loss": "17.6314", "code": "void addDefaultProbes(){(IntProbe());(LongProbe());probesadd(DoubleProbe());(BooleanProbe());}", "n_tokens": 33, "n_pass": [286, 32, 23]}
{"time": "2021-02-24 01:55:48.710365", "score": "0.5717", "loss": "17.8504", "code": "void addDefaultProbes(){(IntProbe());(LongProbe());probes(DoubleProbe());(BooleanProbe());}", "n_tokens": 32, "n_pass": [293, 34, 24]}

Minimal simplified code:
void addDefaultProbes(){(IntProbe());(LongProbe());probes(DoubleProbe());(BooleanProbe());}

