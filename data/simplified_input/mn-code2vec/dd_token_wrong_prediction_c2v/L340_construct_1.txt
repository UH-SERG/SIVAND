
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/XiaoMi__linden/linden-core/src/main/java/com/xiaomi/linden/core/search/query/WildcardQueryConstructor_construct.java
method_name = construct
method_body = @Override protected Query construct(LindenQuery lindenQuery, LindenConfig config) throws IOException { if (lindenQuery.isSetWildcardQuery()) { LindenWildcardQuery lindenWildcardQuery = lindenQuery.getWildcardQuery(); return new WildcardQuery(new Term(lindenWildcardQuery.getField(), lindenWildcardQuery.getQuery())); } return null; }
predict, score, loss = getSearchResults, 0.44497352838516235, 15.542010307312012

Trace of simplified code(s):
{"time": "2021-02-23 16:58:22.206823", "score": "0.445", "loss": "15.542", "code": "@Override protected Query construct(LindenQuery lindenQuery, LindenConfig config) throws IOException { if (lindenQuery.isSetWildcardQuery()) { LindenWildcardQuery lindenWildcardQuery = lindenQuery.getWildcardQuery(); return new WildcardQuery(new Term(lindenWildcardQuery.getField(), lindenWildcardQuery.getQuery())); } return null; }", "n_tokens": 84, "n_pass": [1, 1, 1]}
{"time": "2021-02-23 16:58:24.879580", "score": "0.582", "loss": "16.1401", "code": "Query construct(LindenQuery lindenQuery, LindenConfig config) throws IOException { if (lindenQuery.isSetWildcardQuery()) { LindenWildcardQuery lindenWildcardQuery = lindenQuery.getWildcardQuery(); return new WildcardQuery(new Term(lindenWildcardQuery.getField(), lindenWildcardQuery.getQuery())); } return null; }", "n_tokens": 79, "n_pass": [44, 2, 2]}
{"time": "2021-02-23 16:58:27.550320", "score": "0.5266", "loss": "15.96", "code": "Query construct(LindenQuery config) throws IOException { if (lindenQuery.isSetWildcardQuery()) { LindenWildcardQuery lindenWildcardQuery = lindenQuery.getWildcardQuery(); return new WildcardQuery(new Term(lindenWildcardQuery.getField(), lindenWildcardQuery.getQuery())); } return null; }", "n_tokens": 74, "n_pass": [45, 3, 3]}
{"time": "2021-02-23 16:58:32.885408", "score": "0.5594", "loss": "16.21", "code": "Query construct(LindenQuery config) throws IOException { if (lindenQuery.isSetWildcardQuery()) { LindenWildcardQuery lindenWildcardQuery = lindenQuery.getWildcardQuery(); return new WildcardQuery(new Term( lindenWildcardQuery.getQuery())); } return null; }", "n_tokens": 68, "n_pass": [55, 5, 4]}
{"time": "2021-02-23 16:58:35.554692", "score": "0.5942", "loss": "16.3277", "code": "Query construct(LindenQuery config) throws IOException { if (lindenQuery.isSetWildcardQuery()) { LindenWildcardQuery lindenWildcardQuery = lindenQuery.getWildcardQuery(); return new WildcardQuery(new Term()); } return null; }", "n_tokens": 62, "n_pass": [56, 6, 5]}
{"time": "2021-02-23 16:58:40.877640", "score": "0.6042", "loss": "16.4906", "code": "Query construct(LindenQuery config) throws IOException { if (lindenQuery.isSetWildcardQuery()) { LindenWildcardQuery lindenWildcardQuery = lindenQuery.getWildcardQuery(); return new WildcardQuery(new Term()); } ; }", "n_tokens": 59, "n_pass": [95, 8, 6]}
{"time": "2021-02-23 16:58:43.940221", "score": "0.5112", "loss": "15.9763", "code": "Query construct(LindenQuery config) throws IOException { if (isSetWildcardQuery()) { LindenWildcardQuery lindenWildcardQuery = lindenQuery.getWildcardQuery(); return new WildcardQuery(new Term()); } ; }", "n_tokens": 57, "n_pass": [105, 9, 7]}
{"time": "2021-02-23 16:58:46.623092", "score": "0.5816", "loss": "16.1478", "code": "Query construct(LindenQuery config) throws IOException { if (isSetWildcardQuery()) {lindenWildcardQuery = lindenQuery.getWildcardQuery(); return new WildcardQuery(new Term()); } ; }", "n_tokens": 54, "n_pass": [108, 10, 8]}
{"time": "2021-02-23 16:58:49.266348", "score": "0.2988", "loss": "15.2395", "code": "Query construct(LindenQuery config) throws IOException { if (isSetWildcardQuery()) { lindenQuery.getWildcardQuery(); return new WildcardQuery(new Term()); } ; }", "n_tokens": 51, "n_pass": [109, 11, 9]}
{"time": "2021-02-23 16:58:51.897266", "score": "0.3176", "loss": "15.2311", "code": "Query construct(LindenQuery config) throws IOException { if (isSetWildcardQuery()) {getWildcardQuery(); return new WildcardQuery(new Term()); } ; }", "n_tokens": 48, "n_pass": [110, 12, 10]}
{"time": "2021-02-23 16:58:54.529007", "score": "0.271", "loss": "15.98", "code": "Query construct(LindenQuery config) throws IOException { if (isSetWildcardQuery()) {; return new WildcardQuery(new Term()); } ; }", "n_tokens": 45, "n_pass": [111, 13, 11]}
{"time": "2021-02-23 16:59:07.126759", "score": "0.271", "loss": "15.98", "code": "Query construct(LindenQuery config) throws IOException { if (isSetWildcardQuery()){; return new WildcardQuery(new Term()); } ; }", "n_tokens": 44, "n_pass": [166, 16, 12]}
{"time": "2021-02-23 16:59:09.783289", "score": "0.271", "loss": "15.98", "code": "Query construct(LindenQuery config) throws IOException { if (isSetWildcardQuery()){ return new WildcardQuery(new Term()); } ; }", "n_tokens": 43, "n_pass": [168, 17, 13]}
{"time": "2021-02-23 16:59:12.419061", "score": "0.271", "loss": "15.98", "code": "Query construct(LindenQuery config) throws IOException { if (isSetWildcardQuery()){return new WildcardQuery(new Term()); } ; }", "n_tokens": 42, "n_pass": [169, 18, 14]}
{"time": "2021-02-23 16:59:20.348509", "score": "0.271", "loss": "15.98", "code": "Query construct(LindenQuery config) throws IOException { if (isSetWildcardQuery()){return new WildcardQuery(new Term()); } }", "n_tokens": 40, "n_pass": [178, 21, 15]}
{"time": "2021-02-23 16:59:24.226420", "score": "0.271", "loss": "15.98", "code": "Query construct(LindenQuery config)throws IOException { if (isSetWildcardQuery()){return new WildcardQuery(new Term()); } }", "n_tokens": 39, "n_pass": [188, 22, 16]}
{"time": "2021-02-23 16:59:26.868439", "score": "0.271", "loss": "15.98", "code": "Query construct(LindenQuery config)throws IOException{ if (isSetWildcardQuery()){return new WildcardQuery(new Term()); } }", "n_tokens": 38, "n_pass": [192, 23, 17]}
{"time": "2021-02-23 16:59:29.520831", "score": "0.271", "loss": "15.98", "code": "Query construct(LindenQuery config)throws IOException{if (isSetWildcardQuery()){return new WildcardQuery(new Term()); } }", "n_tokens": 37, "n_pass": [194, 24, 18]}
{"time": "2021-02-23 16:59:32.157010", "score": "0.271", "loss": "15.98", "code": "Query construct(LindenQuery config)throws IOException{if(isSetWildcardQuery()){return new WildcardQuery(new Term()); } }", "n_tokens": 36, "n_pass": [196, 25, 19]}
{"time": "2021-02-23 16:59:48.986749", "score": "0.2255", "loss": "15.5597", "code": "Query construct(LindenQuery config)throws IOException{if(isSetWildcardQuery()){return new WildcardQuery( Term()); } }", "n_tokens": 35, "n_pass": [246, 30, 20]}
{"time": "2021-02-23 16:59:51.653187", "score": "0.2255", "loss": "15.5597", "code": "Query construct(LindenQuery config)throws IOException{if(isSetWildcardQuery()){return new WildcardQuery(Term()); } }", "n_tokens": 34, "n_pass": [247, 31, 21]}
{"time": "2021-02-23 16:59:54.298953", "score": "0.2255", "loss": "15.5597", "code": "Query construct(LindenQuery config)throws IOException{if(isSetWildcardQuery()){return new WildcardQuery(Term());} }", "n_tokens": 33, "n_pass": [253, 32, 22]}
{"time": "2021-02-23 16:59:56.938599", "score": "0.2255", "loss": "15.5597", "code": "Query construct(LindenQuery config)throws IOException{if(isSetWildcardQuery()){return new WildcardQuery(Term());}}", "n_tokens": 32, "n_pass": [255, 33, 23]}

Minimal simplified code:
Query construct(LindenQuery config)throws IOException{if(isSetWildcardQuery()){return new WildcardQuery(Term());}}

