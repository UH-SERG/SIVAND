
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/OpenRock__OpenAM/openam-tools/openam-license-core/src/main/java/org/forgerock/openam/license/PersistentLicenseLocator_getRequiredLicenses.java
method_name = getRequiredLicenses
method_body = public LicenseSet getRequiredLicenses() { List<License> licenses = new ArrayList<License>(); for (License license : delegate.getRequiredLicenses()) { License persistentLicense = new PersistentLicense(log, license, username); licenses.add(persistentLicense); } return new LicenseSet(licenses); }
predict, score, loss = create, 0.4471813142299652, 25.971900939941406

Trace of simplified code(s):
{"time": "2021-02-23 21:15:37.651563", "score": "0.4472", "loss": "25.9719", "code": "public LicenseSet getRequiredLicenses() { List<License> licenses = new ArrayList<License>(); for (License license : delegate.getRequiredLicenses()) { License persistentLicense = new PersistentLicense(log, license, username); licenses.add(persistentLicense); } return new LicenseSet(licenses); }", "n_tokens": 88, "n_pass": [1, 1, 1]}
{"time": "2021-02-23 21:15:40.331242", "score": "0.699", "loss": "27.9022", "code": "public LicenseSet getRequiredLicenses() { List<License> licenses = new ArrayList<License>(); for (License license : delegate.getRequiredLicenses()) { License persistentLicense = new  licenses.add(persistentLicense); } return new LicenseSet(licenses); }", "n_tokens": 77, "n_pass": [25, 2, 2]}
{"time": "2021-02-23 21:15:43.044060", "score": "0.7376", "loss": "28.1739", "code": "public LicenseSet getRequiredLicenses() { List<License> licenses = new ArrayList<License>(); for (License license : delegate.getRequiredLicenses()) { License persistentLicense = (persistentLicense); } return new LicenseSet(licenses); }", "n_tokens": 71, "n_pass": [46, 3, 3]}
{"time": "2021-02-23 21:15:48.425516", "score": "0.709", "loss": "28.0277", "code": "public LicenseSet getRequiredLicenses() { licenses = new ArrayList<License>(); for (License license : delegate.getRequiredLicenses()) { License persistentLicense = (persistentLicense); } return new LicenseSet(licenses); }", "n_tokens": 66, "n_pass": [52, 5, 4]}
{"time": "2021-02-23 21:15:51.126354", "score": "0.6945", "loss": "28.3396", "code": "public LicenseSet getRequiredLicenses() { licenses = new ArrayList<License>(); for (License license : delegate.getRequiredLicenses()) { (persistentLicense); } return new LicenseSet(licenses); }", "n_tokens": 60, "n_pass": [59, 6, 5]}
{"time": "2021-02-23 21:15:56.489959", "score": "0.6971", "loss": "28.3845", "code": "public LicenseSet getRequiredLicenses() { licenses = new ArrayList<License>(); for (License license : delegate.getRequiredLicenses()) { ; } return new LicenseSet(licenses); }", "n_tokens": 57, "n_pass": [93, 8, 6]}
{"time": "2021-02-23 21:16:04.541705", "score": "0.6971", "loss": "28.3845", "code": "LicenseSet getRequiredLicenses() { licenses = new ArrayList<License>(); for (License license : delegate.getRequiredLicenses()) { ; } return new LicenseSet(licenses); }", "n_tokens": 55, "n_pass": [98, 11, 7]}
{"time": "2021-02-23 21:16:18.161231", "score": "0.6971", "loss": "28.3845", "code": "LicenseSet getRequiredLicenses(){ licenses = new ArrayList<License>(); for (License license : delegate.getRequiredLicenses()) { ; } return new LicenseSet(licenses); }", "n_tokens": 54, "n_pass": [164, 14, 8]}
{"time": "2021-02-23 21:16:20.825970", "score": "0.6971", "loss": "28.3845", "code": "LicenseSet getRequiredLicenses(){licenses = new ArrayList<License>(); for (License license : delegate.getRequiredLicenses()) { ; } return new LicenseSet(licenses); }", "n_tokens": 53, "n_pass": [166, 15, 9]}
{"time": "2021-02-23 21:16:23.496696", "score": "0.6971", "loss": "28.3845", "code": "LicenseSet getRequiredLicenses(){licenses= new ArrayList<License>(); for (License license : delegate.getRequiredLicenses()) { ; } return new LicenseSet(licenses); }", "n_tokens": 52, "n_pass": [168, 16, 10]}
{"time": "2021-02-23 21:16:26.161671", "score": "0.6971", "loss": "28.3845", "code": "LicenseSet getRequiredLicenses(){licenses=new ArrayList<License>(); for (License license : delegate.getRequiredLicenses()) { ; } return new LicenseSet(licenses); }", "n_tokens": 51, "n_pass": [170, 17, 11]}
{"time": "2021-02-23 21:16:28.853170", "score": "0.4695", "loss": "27.9309", "code": "LicenseSet getRequiredLicenses(){licenses=new ArrayList<>(); for (License license : delegate.getRequiredLicenses()) { ; } return new LicenseSet(licenses); }", "n_tokens": 50, "n_pass": [175, 18, 12]}
{"time": "2021-02-23 21:16:31.528528", "score": "0.4695", "loss": "27.9309", "code": "LicenseSet getRequiredLicenses(){licenses=new ArrayList<>();for (License license : delegate.getRequiredLicenses()) { ; } return new LicenseSet(licenses); }", "n_tokens": 49, "n_pass": [180, 19, 13]}
{"time": "2021-02-23 21:16:34.202067", "score": "0.4695", "loss": "27.9309", "code": "LicenseSet getRequiredLicenses(){licenses=new ArrayList<>();for(License license : delegate.getRequiredLicenses()) { ; } return new LicenseSet(licenses); }", "n_tokens": 48, "n_pass": [182, 20, 14]}
{"time": "2021-02-23 21:16:39.551619", "score": "0.4695", "loss": "27.9309", "code": "LicenseSet getRequiredLicenses(){licenses=new ArrayList<>();for(License license : delegate.getRequiredLicenses()) { } return new LicenseSet(licenses); }", "n_tokens": 46, "n_pass": [191, 22, 15]}
{"time": "2021-02-23 21:17:06.010143", "score": "0.4695", "loss": "27.9309", "code": "LicenseSet getRequiredLicenses(){licenses=new ArrayList<>();for(License license : delegate.getRequiredLicenses()) { } return new LicenseSet(licenses);}", "n_tokens": 45, "n_pass": [261, 30, 16]}
{"time": "2021-02-23 21:17:09.937455", "score": "0.4695", "loss": "27.9309", "code": "LicenseSet getRequiredLicenses(){licenses=new ArrayList<>();for(License license: delegate.getRequiredLicenses()) { } return new LicenseSet(licenses);}", "n_tokens": 44, "n_pass": [283, 31, 17]}
{"time": "2021-02-23 21:17:12.616503", "score": "0.4695", "loss": "27.9309", "code": "LicenseSet getRequiredLicenses(){licenses=new ArrayList<>();for(License license:delegate.getRequiredLicenses()) { } return new LicenseSet(licenses);}", "n_tokens": 43, "n_pass": [285, 32, 18]}
{"time": "2021-02-23 21:17:17.991909", "score": "0.4695", "loss": "27.9309", "code": "LicenseSet getRequiredLicenses(){licenses=new ArrayList<>();for(License license:delegate.getRequiredLicenses()){ } return new LicenseSet(licenses);}", "n_tokens": 42, "n_pass": [292, 34, 19]}
{"time": "2021-02-23 21:17:20.657173", "score": "0.4695", "loss": "27.9309", "code": "LicenseSet getRequiredLicenses(){licenses=new ArrayList<>();for(License license:delegate.getRequiredLicenses()){} return new LicenseSet(licenses);}", "n_tokens": 41, "n_pass": [294, 35, 20]}
{"time": "2021-02-23 21:17:23.314504", "score": "0.4695", "loss": "27.9309", "code": "LicenseSet getRequiredLicenses(){licenses=new ArrayList<>();for(License license:delegate.getRequiredLicenses()){}return new LicenseSet(licenses);}", "n_tokens": 40, "n_pass": [296, 36, 21]}

Minimal simplified code:
LicenseSet getRequiredLicenses(){licenses=new ArrayList<>();for(License license:delegate.getRequiredLicenses()){}return new LicenseSet(licenses);}

