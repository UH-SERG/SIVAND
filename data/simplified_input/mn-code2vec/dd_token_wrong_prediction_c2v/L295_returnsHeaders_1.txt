
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/jamesdbloom__mockserver/mockserver-core/src/test/java/org/mockserver/model/HttpResponseTest_returnsHeaders.java
method_name = returnsHeaders
method_body = @Test public void returnsHeaders() { assertEquals(new Header("name", "value"), new HttpResponse().withHeaders(new Header("name", "value")).getHeaderList().get(0)); assertEquals(new Header("name", "value"), new HttpResponse().withHeaders(Arrays.asList(new Header("name", "value"))).getHeaderList().get(0)); assertEquals(new Header("name", "value"), new HttpRequest().withHeader(new Header("name", "value")).getHeaderList().get(0)); assertEquals(new Header("name", "value_one", "value_two"), new HttpRequest().withHeader(new Header("name", "value_one")).withHeader(new Header("name", "value_two")).getHeaderList().get(0)); }
predict, score, loss = sendHeaders, 0.6003612875938416, 18.546743392944336

Trace of simplified code(s):
{"time": "2021-02-24 11:58:32.862981", "score": "0.5755", "loss": "17.3561", "code": "@Test public void returnsHeaders() { assertEquals(new Header(\"name\", \"value\"), new HttpResponse().withHeaders(new Header(\"name\", \"value\")).getHeaderList().get(0)); assertEquals(new Header(\"name\", \"value\"), new HttpResponse().withHeaders(Arrays.asList(new Header(\"name\", \"value\"))).getHeaderList().get(0)); assertEquals(new Header(\"name\", \"value\"), new HttpRequest().withHeader(new Header(\"name\", \"value\")).getHeaderList().get(0)); assertEquals(new Header(\"name\", \"value_one\", \"value_two\"), new HttpRequest().withHeader(new Header(\"name\", \"value_one\")).withHeader(new Header(\"name\", \"value_two\")).getHeaderList().get(0)); }", "n_tokens": 253, "n_pass": [1, 1, 1]}
{"time": "2021-02-24 11:58:44.667965", "score": "0.4079", "loss": "18.1518", "code": "@Test public void returnsHeaders() { assertEquals(new Header(\"name\", \"value\"),(new Header(\"name\", \"value\")).getHeaderList().get(0)); assertEquals(new Header(\"name\", \"value\"), new HttpResponse().withHeaders(Arrays.asList(new Header(\"name\", \"value\"))).getHeaderList().get(0)); assertEquals(new Header(\"name\", \"value\"), new HttpRequest().withHeader(new Header(\"name\", \"value\")).getHeaderList().get(0)); assertEquals(new Header(\"name\", \"value_one\", \"value_two\"), new HttpRequest().withHeader(new Header(\"name\", \"value_one\")).withHeader(new Header(\"name\", \"value_two\")).getHeaderList().get(0)); }", "n_tokens": 245, "n_pass": [96, 5, 2]}
{"time": "2021-02-24 11:58:47.457482", "score": "0.5757", "loss": "18.6669", "code": "@Test public void returnsHeaders() { assertEquals(new Header(\"name\", \"value\"),(new Header(\"name\", \"value\")).getHeaderList().get(0)); assertEquals(new Header(\"name\", \"value\"), new HttpResponse().withHeaders(Arrays.asList(new Header(\"name\", \"value\"))).getHeaderList().get(0)); assertEquals(new Header(\"name\", \"value\"), new HttpRequest().withHeader(new Header()).getHeaderList().get(0)); assertEquals(new Header(\"name\", \"value_one\", \"value_two\"), new HttpRequest().withHeader(new Header(\"name\", \"value_one\")).withHeader(new Header(\"name\", \"value_two\")).getHeaderList().get(0)); }", "n_tokens": 237, "n_pass": [111, 6, 3]}
{"time": "2021-02-24 11:59:10.283784", "score": "0.3069", "loss": "17.7009", "code": "public void returnsHeaders() { assertEquals(new Header(\"name\", \"value\"),(new Header(\"name\", \"value\")).getHeaderList().get(0)); assertEquals(new Header(\"name\", \"value\"), new HttpResponse().withHeaders(Arrays.asList(new Header(\"name\", \"value\"))).getHeaderList().get(0)); assertEquals(new Header(\"name\", \"value\"), new HttpRequest().withHeader(new Header()).getHeaderList().get(0)); assertEquals(new Header(\"name\", \"value_one\", \"value_two\"), new HttpRequest().withHeader(new Header(\"name\", \"value_one\")).withHeader(new Header(\"name\", \"value_two\")).getHeaderList().get(0)); }", "n_tokens": 234, "n_pass": [226, 14, 4]}
{"time": "2021-02-24 11:59:19.107840", "score": "0.2935", "loss": "18.5005", "code": "public void returnsHeaders() { assertEquals(new Header(\"name\", \"value\"),(new Header(\"name\", \"value\")).getHeaderList().get(0)); assertEquals(new Header(\"name\", \"value\"), new HttpResponse(Arrays.asList(new Header(\"name\", \"value\"))).getHeaderList().get(0)); assertEquals(new Header(\"name\", \"value\"), new HttpRequest().withHeader(new Header()).getHeaderList().get(0)); assertEquals(new Header(\"name\", \"value_one\", \"value_two\"), new HttpRequest().withHeader(new Header(\"name\", \"value_one\")).withHeader(new Header(\"name\", \"value_two\")).getHeaderList().get(0)); }", "n_tokens": 230, "n_pass": [246, 17, 5]}
{"time": "2021-02-24 11:59:24.699509", "score": "0.4742", "loss": "18.0147", "code": "public void returnsHeaders() { assertEquals(new Header(\"name\", \"value\"),(new Header(\"name\", \"value\")).getHeaderList().get(0)); assertEquals(new Header(\"name\", \"value\"), new HttpResponse(Arrays.asList(new Header(\"name\", \"value\"))).get(0)); assertEquals(new Header(\"name\", \"value\"), new HttpRequest().withHeader(new Header()).getHeaderList().get(0)); assertEquals(new Header(\"name\", \"value_one\", \"value_two\"), new HttpRequest().withHeader(new Header(\"name\", \"value_one\")).withHeader(new Header(\"name\", \"value_two\")).getHeaderList().get(0)); }", "n_tokens": 226, "n_pass": [252, 19, 6]}
{"time": "2021-02-24 11:59:33.099577", "score": "0.3652", "loss": "18.6221", "code": "public void returnsHeaders() { assertEquals(new Header(\"name\", \"value\"),(new Header(\"name\", \"value\")).getHeaderList().get(0)); assertEquals(new Header(\"name\", \"value\"), new HttpResponse(Arrays.asList(new Header(\"name\", \"value\"))).get(0)); assertEquals(new Header(\"name\", \"value\"), new HttpRequest().withHeader(new Header()).getHeaderList().get(0)); assertEquals(new Header( \"value_one\", \"value_two\"), new HttpRequest().withHeader(new Header(\"name\", \"value_one\")).withHeader(new Header(\"name\", \"value_two\")).getHeaderList().get(0)); }", "n_tokens": 222, "n_pass": [267, 22, 7]}
{"time": "2021-02-24 11:59:50.318669", "score": "0.3996", "loss": "17.1454", "code": "public void returnsHeaders() { assertEquals(new Header(\"name\", \"value\"),(new Header(\"name\", \"value\")).getHeaderList().get(0)); assertEquals(new Header(\"name\", \"value\"), new HttpResponse(Arrays.asList(new Header( \"value\"))).get(0)); assertEquals(new Header(\"name\", \"value\"), new HttpRequest().withHeader(new Header()).getHeaderList().get(0)); assertEquals(new Header( \"value_one\", \"value_two\"), new HttpRequest().withHeader(new Header(\"name\", \"value_one\")).withHeader(new Header(\"name\", \"value_two\")).getHeaderList().get(0)); }", "n_tokens": 218, "n_pass": [307, 28, 8]}
{"time": "2021-02-24 12:00:01.505366", "score": "0.4404", "loss": "18.7662", "code": "public void returnsHeaders() { assertEquals(new Header(\"name\", \"value\"),(new Header(\"name\", \"value\")).getHeaderList().get(0)); assertEquals(new Header(\"name\", \"value\"), new HttpResponse(Arrays.asList(new Header( \"value\"))).get(0)); assertEquals(new Header(\"name\", \"value\"), new HttpRequest().withHeader(new Header()).getHeaderList().get(0)); assertEquals(new Header( \"value_one\", \"value_two\"), new HttpRequest(new Header(\"name\", \"value_one\")).withHeader(new Header(\"name\", \"value_two\")).getHeaderList().get(0)); }", "n_tokens": 214, "n_pass": [329, 32, 9]}
{"time": "2021-02-24 12:00:18.657180", "score": "0.4808", "loss": "17.9573", "code": "public void returnsHeaders() { assertEquals(new Header(\"name\", \"value\"),(new Header(\"name\", \"value\")).getHeaderList().get(0)); assertEquals(new Header(\"name\", \"value\"), new HttpResponse(Arrays.asList(new Header( \"value\"))).get(0)); assertEquals(new Header(\"name\", \"value\"), new HttpRequest(new Header()).getHeaderList().get(0)); assertEquals(new Header( \"value_one\", \"value_two\"), new HttpRequest(new Header(\"name\", \"value_one\")).withHeader(new Header(\"name\", \"value_two\")).getHeaderList().get(0)); }", "n_tokens": 210, "n_pass": [372, 38, 10]}
{"time": "2021-02-24 12:00:50.569697", "score": "0.555", "loss": "19.5484", "code": "public void returnsHeaders() { assertEquals(new Header(\"name\", \"value\"),(new Header(\"name\", \"value\")).getHeaderList().get(0)); assertEquals(new Header(\"name\", \"value\"), new HttpResponse(Arrays.asList(new Header( \"value\"))).get(0)); assertEquals(new Header(\"name\", \"value\"), new HttpRequest(new Header()).getHeaderList().get(0)); assertEquals(new Header( \"value_one\", \"value\"), new HttpRequest(new Header(\"name\", \"value_one\")).withHeader(new Header(\"name\", \"value_two\")).getHeaderList().get(0)); }", "n_tokens": 208, "n_pass": [549, 49, 11]}
{"time": "2021-02-24 12:00:58.928796", "score": "0.424", "loss": "17.2504", "code": "public void returnsHeaders() { assertEquals(new Header(\"name\", \"value\"),(new Header(\"name\", \"value\")).getHeaderList().get(0)); assertEquals(new Header(\"name\", \"value\"), new HttpResponse(Arrays.asList(new Header( \"value\"))).get(0)); assertEquals(new Header(\"name\", \"value\"), new HttpRequest(new Header()).getHeaderList().get(0)); assertEquals(new Header( \"value_one\", \"value\"), new HttpRequest(new Header(\"name\", \"one\")).withHeader(new Header(\"name\", \"value_two\")).getHeaderList().get(0)); }", "n_tokens": 206, "n_pass": [559, 52, 12]}
{"time": "2021-02-24 12:01:01.719934", "score": "0.4667", "loss": "19.6494", "code": "public void returnsHeaders() { assertEquals(new Header(\"name\", \"value\"),(new Header(\"name\", \"value\")).getHeaderList().get(0)); assertEquals(new Header(\"name\", \"value\"), new HttpResponse(Arrays.asList(new Header( \"value\"))).get(0)); assertEquals(new Header(\"name\", \"value\"), new HttpRequest(new Header()).getHeaderList().get(0)); assertEquals(new Header( \"value_one\", \"value\"), new HttpRequest(new Header(\"name\", \"one\")).withHeader(new Header(\"name\", \"value\")).getHeaderList().get(0)); }", "n_tokens": 204, "n_pass": [569, 53, 13]}
{"time": "2021-02-24 12:01:19.081349", "score": "0.4812", "loss": "19.6623", "code": "public void returnsHeaders() { assertEquals(new Header(\"name\", \"value\"),(new Header(\"name\", \"value\")).getHeaderList().get(0)); assertEquals(new Header(\"name\", \"value\"), new HttpResponse(Arrays.asList(Header( \"value\"))).get(0)); assertEquals(new Header(\"name\", \"value\"), new HttpRequest(new Header()).getHeaderList().get(0)); assertEquals(new Header( \"value_one\", \"value\"), new HttpRequest(new Header(\"name\", \"one\")).withHeader(new Header(\"name\", \"value\")).getHeaderList().get(0)); }", "n_tokens": 202, "n_pass": [618, 59, 14]}
{"time": "2021-02-24 12:01:21.926634", "score": "0.3415", "loss": "18.8208", "code": "public void returnsHeaders() { assertEquals(new Header(\"name\", \"value\"),(new Header(\"name\", \"value\")).getHeaderList().get(0)); assertEquals(new Header(\"name\", \"value\"), new HttpResponse(Arrays.asList(Header( \"value\"))).get(0)); assertEquals(new Header(\"name\", \"value\"), HttpRequest(new Header()).getHeaderList().get(0)); assertEquals(new Header( \"value_one\", \"value\"), new HttpRequest(new Header(\"name\", \"one\")).withHeader(new Header(\"name\", \"value\")).getHeaderList().get(0)); }", "n_tokens": 200, "n_pass": [636, 60, 15]}
{"time": "2021-02-24 12:01:24.753239", "score": "0.7312", "loss": "21.8905", "code": "public void returnsHeaders() { assertEquals(new Header(\"name\", \"value\"),(new Header(\"name\", \"value\")).getHeaderList().get(0)); assertEquals(new Header(\"name\", \"value\"), new HttpResponse(Arrays.asList(Header( \"value\"))).get(0)); assertEquals(new Header(\"name\", \"value\"), HttpRequest(Header()).getHeaderList().get(0)); assertEquals(new Header( \"value_one\", \"value\"), new HttpRequest(new Header(\"name\", \"one\")).withHeader(new Header(\"name\", \"value\")).getHeaderList().get(0)); }", "n_tokens": 198, "n_pass": [638, 61, 16]}
{"time": "2021-02-24 12:01:27.558396", "score": "0.4846", "loss": "18.7789", "code": "public void returnsHeaders() { assertEquals(new Header(\"name\", \"value\"),(new Header(\"name\", \"value\")).getHeaderList().get(0)); assertEquals(new Header(\"name\", \"value\"), new HttpResponse(Arrays.asList(Header( \"value\"))).get(0)); assertEquals(new Header(\"name\", \"value\"), HttpRequest(Header()).getHeaderList.get(0)); assertEquals(new Header( \"value_one\", \"value\"), new HttpRequest(new Header(\"name\", \"one\")).withHeader(new Header(\"name\", \"value\")).getHeaderList().get(0)); }", "n_tokens": 196, "n_pass": [642, 62, 17]}
{"time": "2021-02-24 12:01:33.170872", "score": "0.5087", "loss": "18.4691", "code": "public void returnsHeaders() { assertEquals(new Header(\"name\", \"value\"),(new Header(\"name\", \"value\")).getHeaderList().get(0)); assertEquals(new Header(\"name\", \"value\"), new HttpResponse(Arrays.asList(Header( \"value\"))).get(0)); assertEquals(new Header(\"name\", \"value\"), HttpRequest(Header()).getHeaderList.get(0)); assertEquals(Header( \"value_one\", \"value\"), new HttpRequest(new Header(\"name\", \"one\")).withHeader(new Header(\"name\", \"value\")).getHeaderList().get(0)); }", "n_tokens": 194, "n_pass": [648, 64, 18]}
{"time": "2021-02-24 12:01:41.579949", "score": "0.285", "loss": "18.8445", "code": "public void returnsHeaders() { assertEquals(new Header(\"name\", \"value\"),(new Header(\"name\", \"value\")).getHeaderList().get(0)); assertEquals(new Header(\"name\", \"value\"), new HttpResponse(Arrays.asList(Header( \"value\"))).get(0)); assertEquals(new Header(\"name\", \"value\"), HttpRequest(Header()).getHeaderList.get(0)); assertEquals(Header( \"value_one\", \"value\"), new HttpRequest(Header(\"name\", \"one\")).withHeader(new Header(\"name\", \"value\")).getHeaderList().get(0)); }", "n_tokens": 192, "n_pass": [659, 67, 19]}
{"time": "2021-02-24 12:01:56.072293", "score": "0.4515", "loss": "18.1837", "code": "public void returnsHeaders() { assertEquals(new Header(\"name\", \"value\"),(new Header(\"name\", \"value\")).getHeaderList().get(0)); assertEquals(new Header(\"name\", \"value\"), new HttpResponse(asList(Header( \"value\"))).get(0)); assertEquals(new Header(\"name\", \"value\"), HttpRequest(Header()).getHeaderList.get(0)); assertEquals(Header( \"value_one\", \"value\"), new HttpRequest(Header(\"name\", \"one\")).withHeader(new Header(\"name\", \"value\")).getHeaderList().get(0)); }", "n_tokens": 190, "n_pass": [719, 72, 20]}
{"time": "2021-02-24 12:02:07.227584", "score": "0.5842", "loss": "18.4605", "code": "public void returnsHeaders() { assertEquals(new Header(\"name\", \"value\"),(new Header(\"name\", \"value\")).getHeaderList().get(0)); assertEquals(new Header(\"name\", \"value\"), new HttpResponse(asList(Header( \"value\"))).get(0)); assertEquals(new Header(\"name\", \"value\"), HttpRequest(Header()).getHeaderList.get(0)); assertEquals(Header( \"value_one\", \"value\"), HttpRequest(Header(\"name\", \"one\")).withHeader(new Header(\"name\", \"value\")).getHeaderList().get(0)); }", "n_tokens": 188, "n_pass": [755, 76, 21]}
{"time": "2021-02-24 12:02:56.270960", "score": "0.588", "loss": "18.6112", "code": "public void returnsHeaders() { assertEquals(new Header(\"name\", \"value\"),(new Header(\"name\", \"value\")).getHeaderList().get(0)); assertEquals(new Header(\"name\", \"value\"), new HttpResponse(asList(Header( \"value\"))).get(0)); assertEquals(new Header(\"name\", \"value\"), HttpRequest(Header()).getHeaderList.get(0)); assertEquals(Header( \"value_one\", \"value\"), HttpRequest(Header(\"name\", \"one\")).withHeader(newHeader(\"name\", \"value\")).getHeaderList().get(0)); }", "n_tokens": 187, "n_pass": [1055, 89, 22]}
{"time": "2021-02-24 12:03:10.249496", "score": "0.4915", "loss": "18.2563", "code": "public void returnsHeaders() { assertEquals(new Header(\"name\", \"value\"),(new Header(\"name\", \"value\")).getHeaderList().get(0)); assertEquals(new Header(\"name\", \"value\"), new HttpResponse(asList(Header( \"value\"))).get(0)); assertEquals(new Header(\"name\", \"value\"), HttpRequest(Header()).getHeaderList.get(0)); assertEquals(Header( \"value_one\", \"value\"), HttpRequest(Header(\"name\", \"one\")).withHeader(newHeader(\"name\", \"value\")).getHeaderList().get(0));}", "n_tokens": 186, "n_pass": [1078, 94, 23]}
{"time": "2021-02-24 12:03:33.358375", "score": "0.3947", "loss": "17.3701", "code": "public void returnsHeaders() { assertEquals(new Header(\"name\",\"value\"),(new Header(\"name\", \"value\")).getHeaderList().get(0)); assertEquals(new Header(\"name\", \"value\"), new HttpResponse(asList(Header( \"value\"))).get(0)); assertEquals(new Header(\"name\", \"value\"), HttpRequest(Header()).getHeaderList.get(0)); assertEquals(Header( \"value_one\", \"value\"), HttpRequest(Header(\"name\", \"one\")).withHeader(newHeader(\"name\", \"value\")).getHeaderList().get(0));}", "n_tokens": 185, "n_pass": [1100, 102, 24]}
{"time": "2021-02-24 12:03:44.463626", "score": "0.4621", "loss": "18.4417", "code": "public void returnsHeaders() { assertEquals(new Header(\"name\",\"value\"),(new Header(\"\", \"value\")).getHeaderList().get(0)); assertEquals(new Header(\"name\", \"value\"), new HttpResponse(asList(Header( \"value\"))).get(0)); assertEquals(new Header(\"name\", \"value\"), HttpRequest(Header()).getHeaderList.get(0)); assertEquals(Header( \"value_one\", \"value\"), HttpRequest(Header(\"name\", \"one\")).withHeader(newHeader(\"name\", \"value\")).getHeaderList().get(0));}", "n_tokens": 184, "n_pass": [1112, 106, 25]}
{"time": "2021-02-24 12:03:55.644074", "score": "0.4158", "loss": "18.0538", "code": "public void returnsHeaders() { assertEquals(new Header(\"name\",\"value\"),(new Header(\"\", \"value\")).getHeaderList().get(0));assertEquals(new Header(\"name\", \"value\"), new HttpResponse(asList(Header( \"value\"))).get(0)); assertEquals(new Header(\"name\", \"value\"), HttpRequest(Header()).getHeaderList.get(0)); assertEquals(Header( \"value_one\", \"value\"), HttpRequest(Header(\"name\", \"one\")).withHeader(newHeader(\"name\", \"value\")).getHeaderList().get(0));}", "n_tokens": 183, "n_pass": [1132, 110, 26]}
{"time": "2021-02-24 12:04:12.367591", "score": "0.3674", "loss": "16.0259", "code": "public void returnsHeaders() { assertEquals(new Header(\"name\",\"value\"),(new Header(\"\", \"value\")).getHeaderList().get(0));assertEquals(new Header(\"name\", \"value\"),new HttpResponse(asList(Header( \"value\"))).get(0)); assertEquals(new Header(\"name\", \"value\"), HttpRequest(Header()).getHeaderList.get(0)); assertEquals(Header( \"value_one\", \"value\"), HttpRequest(Header(\"name\", \"one\")).withHeader(newHeader(\"name\", \"value\")).getHeaderList().get(0));}", "n_tokens": 182, "n_pass": [1149, 116, 27]}
{"time": "2021-02-24 12:04:34.632311", "score": "0.4453", "loss": "18.6184", "code": "public void returnsHeaders() { assertEquals(new Header(\"name\",\"value\"),(new Header(\"\", \"value\")).getHeaderList().get(0));assertEquals(new Header(\"name\", \"value\"),new HttpResponse(asList(Header( \"value\"))).get(0));assertEquals(new Header(\"name\", \"value\"), HttpRequest(Header()).getHeaderList.get(0)); assertEquals(Header( \"value_one\", \"value\"), HttpRequest(Header(\"name\", \"one\")).withHeader(newHeader(\"name\", \"value\")).getHeaderList().get(0));}", "n_tokens": 181, "n_pass": [1172, 124, 28]}
{"time": "2021-02-24 12:04:37.429293", "score": "0.4771", "loss": "18.1302", "code": "public void returnsHeaders() { assertEquals(new Header(\"name\",\"value\"),(new Header(\"\", \"value\")).getHeaderList().get(0));assertEquals(new Header(\"name\", \"value\"),new HttpResponse(asList(Header( \"value\"))).get(0));assertEquals( Header(\"name\", \"value\"), HttpRequest(Header()).getHeaderList.get(0)); assertEquals(Header( \"value_one\", \"value\"), HttpRequest(Header(\"name\", \"one\")).withHeader(newHeader(\"name\", \"value\")).getHeaderList().get(0));}", "n_tokens": 180, "n_pass": [1175, 125, 29]}
{"time": "2021-02-24 12:04:45.754116", "score": "0.7885", "loss": "16.2643", "code": "public void returnsHeaders() { assertEquals(new Header(\"name\",\"value\"),(new Header(\"\", \"value\")).getHeaderList().get(0));assertEquals(new Header(\"name\", \"value\"),new HttpResponse(asList(Header( \"value\"))).get(0));assertEquals( Header(\"name\",\"value\"), HttpRequest(Header()).getHeaderList.get(0)); assertEquals(Header( \"value_one\", \"value\"), HttpRequest(Header(\"name\", \"one\")).withHeader(newHeader(\"name\", \"value\")).getHeaderList().get(0));}", "n_tokens": 179, "n_pass": [1183, 128, 30]}
{"time": "2021-02-24 12:04:59.670556", "score": "0.6125", "loss": "17.4965", "code": "public void returnsHeaders() { assertEquals(new Header(\"name\",\"value\"),(new Header(\"\", \"value\")).getHeaderList().get(0));assertEquals(new Header(\"name\", \"value\"),new HttpResponse(asList(Header( \"value\"))).get(0));assertEquals( Header(\"name\",\"value\"), HttpRequest(Header()).getHeaderList.get()); assertEquals(Header( \"value_one\", \"value\"), HttpRequest(Header(\"name\", \"one\")).withHeader(newHeader(\"name\", \"value\")).getHeaderList().get(0));}", "n_tokens": 178, "n_pass": [1201, 133, 31]}
{"time": "2021-02-24 12:05:10.765354", "score": "0.5355", "loss": "17.2733", "code": "public void returnsHeaders() { assertEquals(new Header(\"name\",\"value\"),(new Header(\"\", \"value\")).getHeaderList().get(0));assertEquals(new Header(\"name\", \"value\"),new HttpResponse(asList(Header( \"value\"))).get(0));assertEquals( Header(\"name\",\"value\"), HttpRequest(Header()).getHeaderList.get()); assertEquals(Header( \"valueone\", \"value\"), HttpRequest(Header(\"name\", \"one\")).withHeader(newHeader(\"name\", \"value\")).getHeaderList().get(0));}", "n_tokens": 177, "n_pass": [1213, 137, 32]}
{"time": "2021-02-24 12:05:13.536638", "score": "0.485", "loss": "17.1316", "code": "public void returnsHeaders() { assertEquals(new Header(\"name\",\"value\"),(new Header(\"\", \"value\")).getHeaderList().get(0));assertEquals(new Header(\"name\", \"value\"),new HttpResponse(asList(Header( \"value\"))).get(0));assertEquals( Header(\"name\",\"value\"), HttpRequest(Header()).getHeaderList.get()); assertEquals(Header( \"value\", \"value\"), HttpRequest(Header(\"name\", \"one\")).withHeader(newHeader(\"name\", \"value\")).getHeaderList().get(0));}", "n_tokens": 176, "n_pass": [1214, 138, 33]}
{"time": "2021-02-24 12:05:16.316604", "score": "0.5399", "loss": "16.122", "code": "public void returnsHeaders() { assertEquals(new Header(\"name\",\"value\"),(new Header(\"\", \"value\")).getHeaderList().get(0));assertEquals(new Header(\"name\", \"value\"),new HttpResponse(asList(Header( \"value\"))).get(0));assertEquals( Header(\"name\",\"value\"), HttpRequest(Header()).getHeaderList.get()); assertEquals(Header( \"value\",\"value\"), HttpRequest(Header(\"name\", \"one\")).withHeader(newHeader(\"name\", \"value\")).getHeaderList().get(0));}", "n_tokens": 175, "n_pass": [1217, 139, 34]}
{"time": "2021-02-24 12:05:19.098373", "score": "0.5446", "loss": "18.4987", "code": "public void returnsHeaders() { assertEquals(new Header(\"name\",\"value\"),(new Header(\"\", \"value\")).getHeaderList().get(0));assertEquals(new Header(\"name\", \"value\"),new HttpResponse(asList(Header( \"value\"))).get(0));assertEquals( Header(\"name\",\"value\"), HttpRequest(Header()).getHeaderList.get()); assertEquals(Header( \"value\",\"\"), HttpRequest(Header(\"name\", \"one\")).withHeader(newHeader(\"name\", \"value\")).getHeaderList().get(0));}", "n_tokens": 174, "n_pass": [1219, 140, 35]}
{"time": "2021-02-24 12:05:21.877083", "score": "0.7642", "loss": "18.5562", "code": "public void returnsHeaders() { assertEquals(new Header(\"name\",\"value\"),(new Header(\"\", \"value\")).getHeaderList().get(0));assertEquals(new Header(\"name\", \"value\"),new HttpResponse(asList(Header( \"value\"))).get(0));assertEquals( Header(\"name\",\"value\"), HttpRequest(Header()).getHeaderList.get()); assertEquals(Header( \"value\",\"\"),HttpRequest(Header(\"name\", \"one\")).withHeader(newHeader(\"name\", \"value\")).getHeaderList().get(0));}", "n_tokens": 173, "n_pass": [1223, 141, 36]}
{"time": "2021-02-24 12:05:27.432866", "score": "0.4201", "loss": "16.4724", "code": "public void returnsHeaders() { assertEquals(new Header(\"name\",\"value\"),(new Header(\"\", \"value\")).getHeaderList().get(0));assertEquals(new Header(\"name\", \"value\"),new HttpResponse(asList(Header( \"value\"))).get(0));assertEquals( Header(\"name\",\"value\"), HttpRequest(Header()).getHeaderList.get()); assertEquals(Header( \"value\",\"\"),HttpRequest(Header(\"\", \"one\")).withHeader(newHeader(\"name\", \"value\")).getHeaderList().get(0));}", "n_tokens": 172, "n_pass": [1229, 143, 37]}
{"time": "2021-02-24 12:05:30.199805", "score": "0.4911", "loss": "17.3682", "code": "public void returnsHeaders() { assertEquals(new Header(\"name\",\"value\"),(new Header(\"\", \"value\")).getHeaderList().get(0));assertEquals(new Header(\"name\", \"value\"),new HttpResponse(asList(Header( \"value\"))).get(0));assertEquals( Header(\"name\",\"value\"), HttpRequest(Header()).getHeaderList.get()); assertEquals(Header( \"value\",\"\"),HttpRequest(Header(\"\",\"one\")).withHeader(newHeader(\"name\", \"value\")).getHeaderList().get(0));}", "n_tokens": 171, "n_pass": [1232, 144, 38]}
{"time": "2021-02-24 12:05:33.003046", "score": "0.5118", "loss": "16.8583", "code": "public void returnsHeaders() { assertEquals(new Header(\"name\",\"value\"),(new Header(\"\", \"value\")).getHeaderList().get(0));assertEquals(new Header(\"name\", \"value\"),new HttpResponse(asList(Header( \"value\"))).get(0));assertEquals( Header(\"name\",\"value\"), HttpRequest(Header()).getHeaderList.get()); assertEquals(Header( \"value\",\"\"),HttpRequest(Header(\"\",\"\")).withHeader(newHeader(\"name\", \"value\")).getHeaderList().get(0));}", "n_tokens": 170, "n_pass": [1234, 145, 39]}
{"time": "2021-02-24 12:05:35.793625", "score": "0.5672", "loss": "16.9775", "code": "public void returnsHeaders() { assertEquals(new Header(\"name\",\"value\"),(new Header(\"\", \"value\")).getHeaderList().get(0));assertEquals(new Header(\"name\", \"value\"),new HttpResponse(asList(Header( \"value\"))).get(0));assertEquals( Header(\"name\",\"value\"), HttpRequest(Header()).getHeaderList.get()); assertEquals(Header( \"value\",\"\"),HttpRequest(Header(\"\",\"\")).withHeader(Header(\"name\", \"value\")).getHeaderList().get(0));}", "n_tokens": 169, "n_pass": [1241, 146, 40]}
{"time": "2021-02-24 12:05:41.351033", "score": "0.8485", "loss": "18.5054", "code": "public void returnsHeaders() { assertEquals(new Header(\"name\",\"value\"),(new Header(\"\", \"value\")).getHeaderList().get(0));assertEquals(new Header(\"name\", \"value\"),new HttpResponse(asList(Header( \"value\"))).get(0));assertEquals( Header(\"name\",\"value\"), HttpRequest(Header()).getHeaderList.get()); assertEquals(Header( \"value\",\"\"),HttpRequest(Header(\"\",\"\")).withHeader(Header(\"name\",\"value\")).getHeaderList().get(0));}", "n_tokens": 168, "n_pass": [1248, 148, 41]}
{"time": "2021-02-24 12:05:44.151938", "score": "0.8684", "loss": "17.6304", "code": "public void returnsHeaders() { assertEquals(new Header(\"name\",\"value\"),(new Header(\"\", \"value\")).getHeaderList().get(0));assertEquals(new Header(\"name\", \"value\"),new HttpResponse(asList(Header( \"value\"))).get(0));assertEquals( Header(\"name\",\"value\"), HttpRequest(Header()).getHeaderList.get()); assertEquals(Header( \"value\",\"\"),HttpRequest(Header(\"\",\"\")).withHeader(Header(\"name\",\"\")).getHeaderList().get(0));}", "n_tokens": 167, "n_pass": [1250, 149, 42]}
{"time": "2021-02-24 12:05:49.710242", "score": "0.6527", "loss": "17.2852", "code": " void returnsHeaders() { assertEquals(new Header(\"name\",\"value\"),(new Header(\"\", \"value\")).getHeaderList().get(0));assertEquals(new Header(\"name\", \"value\"),new HttpResponse(asList(Header( \"value\"))).get(0));assertEquals( Header(\"name\",\"value\"), HttpRequest(Header()).getHeaderList.get()); assertEquals(Header( \"value\",\"\"),HttpRequest(Header(\"\",\"\")).withHeader(Header(\"name\",\"\")).getHeaderList().get(0));}", "n_tokens": 166, "n_pass": [1266, 151, 43]}
{"time": "2021-02-24 12:05:56.135152", "score": "0.7555", "loss": "18.6347", "code": " void returnsHeaders(){ assertEquals(new Header(\"name\",\"value\"),(new Header(\"\", \"value\")).getHeaderList().get(0));assertEquals(new Header(\"name\", \"value\"),new HttpResponse(asList(Header( \"value\"))).get(0));assertEquals( Header(\"name\",\"value\"), HttpRequest(Header()).getHeaderList.get()); assertEquals(Header( \"value\",\"\"),HttpRequest(Header(\"\",\"\")).withHeader(Header(\"name\",\"\")).getHeaderList().get(0));}", "n_tokens": 165, "n_pass": [1273, 153, 44]}
{"time": "2021-02-24 12:06:01.664532", "score": "0.6237", "loss": "16.3545", "code": " void returnsHeaders(){ assertEquals( Header(\"name\",\"value\"),(new Header(\"\", \"value\")).getHeaderList().get(0));assertEquals(new Header(\"name\", \"value\"),new HttpResponse(asList(Header( \"value\"))).get(0));assertEquals( Header(\"name\",\"value\"), HttpRequest(Header()).getHeaderList.get()); assertEquals(Header( \"value\",\"\"),HttpRequest(Header(\"\",\"\")).withHeader(Header(\"name\",\"\")).getHeaderList().get(0));}", "n_tokens": 164, "n_pass": [1278, 155, 45]}
{"time": "2021-02-24 12:06:04.431715", "score": "0.4044", "loss": "16.1848", "code": " void returnsHeaders(){ assertEquals(Header(\"name\",\"value\"),(new Header(\"\", \"value\")).getHeaderList().get(0));assertEquals(new Header(\"name\", \"value\"),new HttpResponse(asList(Header( \"value\"))).get(0));assertEquals( Header(\"name\",\"value\"), HttpRequest(Header()).getHeaderList.get()); assertEquals(Header( \"value\",\"\"),HttpRequest(Header(\"\",\"\")).withHeader(Header(\"name\",\"\")).getHeaderList().get(0));}", "n_tokens": 163, "n_pass": [1279, 156, 46]}
{"time": "2021-02-24 12:06:07.234764", "score": "0.4404", "loss": "15.9406", "code": " void returnsHeaders(){ assertEquals(Header(\"\",\"value\"),(new Header(\"\", \"value\")).getHeaderList().get(0));assertEquals(new Header(\"name\", \"value\"),new HttpResponse(asList(Header( \"value\"))).get(0));assertEquals( Header(\"name\",\"value\"), HttpRequest(Header()).getHeaderList.get()); assertEquals(Header( \"value\",\"\"),HttpRequest(Header(\"\",\"\")).withHeader(Header(\"name\",\"\")).getHeaderList().get(0));}", "n_tokens": 162, "n_pass": [1283, 157, 47]}
{"time": "2021-02-24 12:06:10.021368", "score": "0.8293", "loss": "17.0091", "code": " void returnsHeaders(){ assertEquals(Header(\"\",\"\"),(new Header(\"\", \"value\")).getHeaderList().get(0));assertEquals(new Header(\"name\", \"value\"),new HttpResponse(asList(Header( \"value\"))).get(0));assertEquals( Header(\"name\",\"value\"), HttpRequest(Header()).getHeaderList.get()); assertEquals(Header( \"value\",\"\"),HttpRequest(Header(\"\",\"\")).withHeader(Header(\"name\",\"\")).getHeaderList().get(0));}", "n_tokens": 161, "n_pass": [1287, 158, 48]}
{"time": "2021-02-24 12:06:12.783757", "score": "0.6061", "loss": "15.8976", "code": " void returnsHeaders(){ assertEquals(Header(\"\",\"\"),( Header(\"\", \"value\")).getHeaderList().get(0));assertEquals(new Header(\"name\", \"value\"),new HttpResponse(asList(Header( \"value\"))).get(0));assertEquals( Header(\"name\",\"value\"), HttpRequest(Header()).getHeaderList.get()); assertEquals(Header( \"value\",\"\"),HttpRequest(Header(\"\",\"\")).withHeader(Header(\"name\",\"\")).getHeaderList().get(0));}", "n_tokens": 160, "n_pass": [1292, 159, 49]}
{"time": "2021-02-24 12:06:15.541181", "score": "0.7664", "loss": "16.5293", "code": " void returnsHeaders(){ assertEquals(Header(\"\",\"\"),(Header(\"\", \"value\")).getHeaderList().get(0));assertEquals(new Header(\"name\", \"value\"),new HttpResponse(asList(Header( \"value\"))).get(0));assertEquals( Header(\"name\",\"value\"), HttpRequest(Header()).getHeaderList.get()); assertEquals(Header( \"value\",\"\"),HttpRequest(Header(\"\",\"\")).withHeader(Header(\"name\",\"\")).getHeaderList().get(0));}", "n_tokens": 159, "n_pass": [1293, 160, 50]}
{"time": "2021-02-24 12:06:18.328963", "score": "0.6128", "loss": "16.8593", "code": " void returnsHeaders(){ assertEquals(Header(\"\",\"\"),(Header(\"\",\"value\")).getHeaderList().get(0));assertEquals(new Header(\"name\", \"value\"),new HttpResponse(asList(Header( \"value\"))).get(0));assertEquals( Header(\"name\",\"value\"), HttpRequest(Header()).getHeaderList.get()); assertEquals(Header( \"value\",\"\"),HttpRequest(Header(\"\",\"\")).withHeader(Header(\"name\",\"\")).getHeaderList().get(0));}", "n_tokens": 158, "n_pass": [1299, 161, 51]}
{"time": "2021-02-24 12:06:26.635457", "score": "0.6256", "loss": "16.4011", "code": " void returnsHeaders(){ assertEquals(Header(\"\",\"\"),(Header(\"\",\"value\")).getHeaderList().get(0));assertEquals( Header(\"name\", \"value\"),new HttpResponse(asList(Header( \"value\"))).get(0));assertEquals( Header(\"name\",\"value\"), HttpRequest(Header()).getHeaderList.get()); assertEquals(Header( \"value\",\"\"),HttpRequest(Header(\"\",\"\")).withHeader(Header(\"name\",\"\")).getHeaderList().get(0));}", "n_tokens": 157, "n_pass": [1318, 164, 52]}
{"time": "2021-02-24 12:06:29.393559", "score": "0.624", "loss": "16.5661", "code": " void returnsHeaders(){ assertEquals(Header(\"\",\"\"),(Header(\"\",\"value\")).getHeaderList().get(0));assertEquals(Header(\"name\", \"value\"),new HttpResponse(asList(Header( \"value\"))).get(0));assertEquals( Header(\"name\",\"value\"), HttpRequest(Header()).getHeaderList.get()); assertEquals(Header( \"value\",\"\"),HttpRequest(Header(\"\",\"\")).withHeader(Header(\"name\",\"\")).getHeaderList().get(0));}", "n_tokens": 156, "n_pass": [1319, 165, 53]}
{"time": "2021-02-24 12:06:37.695326", "score": "0.8261", "loss": "17.0106", "code": " void returnsHeaders(){ assertEquals(Header(\"\",\"\"),(Header(\"\",\"value\")).getHeaderList().get(0));assertEquals(Header(\"name\", \"\"),new HttpResponse(asList(Header( \"value\"))).get(0));assertEquals( Header(\"name\",\"value\"), HttpRequest(Header()).getHeaderList.get()); assertEquals(Header( \"value\",\"\"),HttpRequest(Header(\"\",\"\")).withHeader(Header(\"name\",\"\")).getHeaderList().get(0));}", "n_tokens": 155, "n_pass": [1328, 168, 54]}
{"time": "2021-02-24 12:06:40.451327", "score": "0.285", "loss": "16.0616", "code": " void returnsHeaders(){ assertEquals(Header(\"\",\"\"),(Header(\"\",\"value\")).getHeaderList().get(0));assertEquals(Header(\"name\", \"\"), HttpResponse(asList(Header( \"value\"))).get(0));assertEquals( Header(\"name\",\"value\"), HttpRequest(Header()).getHeaderList.get()); assertEquals(Header( \"value\",\"\"),HttpRequest(Header(\"\",\"\")).withHeader(Header(\"name\",\"\")).getHeaderList().get(0));}", "n_tokens": 154, "n_pass": [1332, 169, 55]}
{"time": "2021-02-24 12:06:43.226004", "score": "0.8033", "loss": "16.9858", "code": " void returnsHeaders(){ assertEquals(Header(\"\",\"\"),(Header(\"\",\"value\")).getHeaderList().get(0));assertEquals(Header(\"name\", \"\"),HttpResponse(asList(Header( \"value\"))).get(0));assertEquals( Header(\"name\",\"value\"), HttpRequest(Header()).getHeaderList.get()); assertEquals(Header( \"value\",\"\"),HttpRequest(Header(\"\",\"\")).withHeader(Header(\"name\",\"\")).getHeaderList().get(0));}", "n_tokens": 153, "n_pass": [1333, 170, 56]}
{"time": "2021-02-24 12:06:48.738151", "score": "0.3776", "loss": "16.4071", "code": " void returnsHeaders(){ assertEquals(Header(\"\",\"\"),(Header(\"\",\"value\")).getHeaderList().get(0));assertEquals(Header(\"name\", \"\"),HttpResponse((Header( \"value\"))).get(0));assertEquals( Header(\"name\",\"value\"), HttpRequest(Header()).getHeaderList.get()); assertEquals(Header( \"value\",\"\"),HttpRequest(Header(\"\",\"\")).withHeader(Header(\"name\",\"\")).getHeaderList().get(0));}", "n_tokens": 152, "n_pass": [1336, 172, 57]}
{"time": "2021-02-24 12:06:51.525181", "score": "0.4066", "loss": "16.4988", "code": " void returnsHeaders(){ assertEquals(Header(\"\",\"\"),(Header(\"\",\"value\")).getHeaderList().get(0));assertEquals(Header(\"name\", \"\"),HttpResponse((( \"value\"))).get(0));assertEquals( Header(\"name\",\"value\"), HttpRequest(Header()).getHeaderList.get()); assertEquals(Header( \"value\",\"\"),HttpRequest(Header(\"\",\"\")).withHeader(Header(\"name\",\"\")).getHeaderList().get(0));}", "n_tokens": 151, "n_pass": [1338, 173, 58]}
{"time": "2021-02-24 12:06:54.321120", "score": "0.7518", "loss": "17.0492", "code": " void returnsHeaders(){ assertEquals(Header(\"\",\"\"),(Header(\"\",\"value\")).getHeaderList().get(0));assertEquals(Header(\"name\", \"\"),HttpResponse(((\"value\"))).get(0));assertEquals( Header(\"name\",\"value\"), HttpRequest(Header()).getHeaderList.get()); assertEquals(Header( \"value\",\"\"),HttpRequest(Header(\"\",\"\")).withHeader(Header(\"name\",\"\")).getHeaderList().get(0));}", "n_tokens": 150, "n_pass": [1340, 174, 59]}
{"time": "2021-02-24 12:06:57.089747", "score": "0.4518", "loss": "16.3012", "code": " void returnsHeaders(){ assertEquals(Header(\"\",\"\"),(Header(\"\",\"value\")).getHeaderList().get(0));assertEquals(Header(\"name\", \"\"),HttpResponse(((\"\"))).get(0));assertEquals( Header(\"name\",\"value\"), HttpRequest(Header()).getHeaderList.get()); assertEquals(Header( \"value\",\"\"),HttpRequest(Header(\"\",\"\")).withHeader(Header(\"name\",\"\")).getHeaderList().get(0));}", "n_tokens": 149, "n_pass": [1342, 175, 60]}
{"time": "2021-02-24 12:06:59.866344", "score": "0.8769", "loss": "17.3303", "code": " void returnsHeaders(){ assertEquals(Header(\"\",\"\"),(Header(\"\",\"value\")).getHeaderList().get(0));assertEquals(Header(\"name\", \"\"),HttpResponse(((\"\"))).get());assertEquals( Header(\"name\",\"value\"), HttpRequest(Header()).getHeaderList.get()); assertEquals(Header( \"value\",\"\"),HttpRequest(Header(\"\",\"\")).withHeader(Header(\"name\",\"\")).getHeaderList().get(0));}", "n_tokens": 148, "n_pass": [1350, 176, 61]}
{"time": "2021-02-24 12:07:02.661937", "score": "0.4801", "loss": "17.6791", "code": " void returnsHeaders(){ assertEquals(Header(\"\",\"\"),(Header(\"\",\"value\")).getHeaderList().get(0));assertEquals(Header(\"name\", \"\"),HttpResponse(((\"\"))).get());assertEquals(Header(\"name\",\"value\"), HttpRequest(Header()).getHeaderList.get()); assertEquals(Header( \"value\",\"\"),HttpRequest(Header(\"\",\"\")).withHeader(Header(\"name\",\"\")).getHeaderList().get(0));}", "n_tokens": 147, "n_pass": [1356, 177, 62]}
{"time": "2021-02-24 12:07:05.443028", "score": "0.6034", "loss": "16.7353", "code": " void returnsHeaders(){ assertEquals(Header(\"\",\"\"),(Header(\"\",\"value\")).getHeaderList().get(0));assertEquals(Header(\"name\", \"\"),HttpResponse(((\"\"))).get());assertEquals(Header(\"\",\"value\"), HttpRequest(Header()).getHeaderList.get()); assertEquals(Header( \"value\",\"\"),HttpRequest(Header(\"\",\"\")).withHeader(Header(\"name\",\"\")).getHeaderList().get(0));}", "n_tokens": 146, "n_pass": [1360, 178, 63]}
{"time": "2021-02-24 12:07:08.203716", "score": "0.6874", "loss": "17.0901", "code": " void returnsHeaders(){ assertEquals(Header(\"\",\"\"),(Header(\"\",\"value\")).getHeaderList().get(0));assertEquals(Header(\"name\", \"\"),HttpResponse(((\"\"))).get());assertEquals(Header(\"\",\"\"), HttpRequest(Header()).getHeaderList.get()); assertEquals(Header( \"value\",\"\"),HttpRequest(Header(\"\",\"\")).withHeader(Header(\"name\",\"\")).getHeaderList().get(0));}", "n_tokens": 145, "n_pass": [1364, 179, 64]}
{"time": "2021-02-24 12:07:10.973359", "score": "0.5348", "loss": "17.4268", "code": " void returnsHeaders(){ assertEquals(Header(\"\",\"\"),(Header(\"\",\"value\")).getHeaderList().get(0));assertEquals(Header(\"name\", \"\"),HttpResponse(((\"\"))).get());assertEquals(Header(\"\",\"\"),HttpRequest(Header()).getHeaderList.get()); assertEquals(Header( \"value\",\"\"),HttpRequest(Header(\"\",\"\")).withHeader(Header(\"name\",\"\")).getHeaderList().get(0));}", "n_tokens": 144, "n_pass": [1368, 180, 65]}
{"time": "2021-02-24 12:07:22.039288", "score": "0.403", "loss": "17.9333", "code": " void returnsHeaders(){ assertEquals(Header(\"\",\"\"),(Header(\"\",\"value\")).getHeaderList().get(0));assertEquals(Header(\"name\", \"\"),HttpResponse(((\"\"))).get());assertEquals(Header(\"\",\"\"),HttpRequest(Header()).getHeaderList.get()); assertEquals(Header(\"value\",\"\"),HttpRequest(Header(\"\",\"\")).withHeader(Header(\"name\",\"\")).getHeaderList().get(0));}", "n_tokens": 143, "n_pass": [1388, 184, 66]}
{"time": "2021-02-24 12:07:24.804471", "score": "0.6788", "loss": "18.0203", "code": " void returnsHeaders(){ assertEquals(Header(\"\",\"\"),(Header(\"\",\"value\")).getHeaderList().get(0));assertEquals(Header(\"name\", \"\"),HttpResponse(((\"\"))).get());assertEquals(Header(\"\",\"\"),HttpRequest(Header()).getHeaderList.get()); assertEquals(Header(\"\",\"\"),HttpRequest(Header(\"\",\"\")).withHeader(Header(\"name\",\"\")).getHeaderList().get(0));}", "n_tokens": 142, "n_pass": [1390, 185, 67]}
{"time": "2021-02-24 12:07:35.893607", "score": "0.7103", "loss": "18.6968", "code": "void returnsHeaders(){ assertEquals(Header(\"\",\"\"),(Header(\"\",\"value\")).getHeaderList().get(0));assertEquals(Header(\"name\", \"\"),HttpResponse(((\"\"))).get());assertEquals(Header(\"\",\"\"),HttpRequest(Header()).getHeaderList.get()); assertEquals(Header(\"\",\"\"),HttpRequest(Header(\"\",\"\")).withHeader(Header(\"name\",\"\")).getHeaderList().get(0));}", "n_tokens": 141, "n_pass": [1433, 189, 68]}
{"time": "2021-02-24 12:07:42.324748", "score": "0.5151", "loss": "18.5257", "code": "void returnsHeaders(){ assertEquals(Header(\"\",\"\"),(Header(\"\",\"\")).getHeaderList().get(0));assertEquals(Header(\"name\", \"\"),HttpResponse(((\"\"))).get());assertEquals(Header(\"\",\"\"),HttpRequest(Header()).getHeaderList.get()); assertEquals(Header(\"\",\"\"),HttpRequest(Header(\"\",\"\")).withHeader(Header(\"name\",\"\")).getHeaderList().get(0));}", "n_tokens": 140, "n_pass": [1459, 191, 69]}
{"time": "2021-02-24 12:07:45.082517", "score": "0.7026", "loss": "17.555", "code": "void returnsHeaders(){ assertEquals(Header(\"\",\"\"),(Header(\"\",\"\")).getHeaderList().get());assertEquals(Header(\"name\", \"\"),HttpResponse(((\"\"))).get());assertEquals(Header(\"\",\"\"),HttpRequest(Header()).getHeaderList.get()); assertEquals(Header(\"\",\"\"),HttpRequest(Header(\"\",\"\")).withHeader(Header(\"name\",\"\")).getHeaderList().get(0));}", "n_tokens": 139, "n_pass": [1470, 192, 70]}
{"time": "2021-02-24 12:08:10.018492", "score": "0.6256", "loss": "18.114", "code": "void returnsHeaders(){ assertEquals(Header(\"\",\"\"),(Header(\"\",\"\")).getHeaderList().get());assertEquals(Header(\"name\", \"\"),HttpResponse(((\"\"))).get());assertEquals(Header(\"\",\"\"),HttpRequest(Header()).getHeaderList.get()); assertEquals(Header(\"\",\"\"),HttpRequest(Header(\"\",\"\")).withHeader(Header(\"name\",\"\")).getHeaderList().get());}", "n_tokens": 138, "n_pass": [1570, 201, 71]}
{"time": "2021-02-24 12:08:16.493928", "score": "0.5003", "loss": "18.4872", "code": "void returnsHeaders(){ assertEquals(Header(\"\",\"\"),(Header(\"\",\"\")).getHeaderList().get());assertEquals(Header(\"\", \"\"),HttpResponse(((\"\"))).get());assertEquals(Header(\"\",\"\"),HttpRequest(Header()).getHeaderList.get()); assertEquals(Header(\"\",\"\"),HttpRequest(Header(\"\",\"\")).withHeader(Header(\"name\",\"\")).getHeaderList().get());}", "n_tokens": 137, "n_pass": [1618, 203, 72]}
{"time": "2021-02-24 12:08:22.014162", "score": "0.523", "loss": "18.4662", "code": "void returnsHeaders(){ assertEquals(Header(\"\",\"\"),(Header(\"\",\"\")).getHeaderList().get());assertEquals(Header(\"\", \"\"),(((\"\"))).get());assertEquals(Header(\"\",\"\"),HttpRequest(Header()).getHeaderList.get()); assertEquals(Header(\"\",\"\"),HttpRequest(Header(\"\",\"\")).withHeader(Header(\"name\",\"\")).getHeaderList().get());}", "n_tokens": 136, "n_pass": [1626, 205, 73]}
{"time": "2021-02-24 12:08:24.814792", "score": "0.5372", "loss": "18.7589", "code": "void returnsHeaders(){ assertEquals(Header(\"\",\"\"),(Header(\"\",\"\")).getHeaderList().get());assertEquals(Header(\"\", \"\"),(((\"\"))).get());assertEquals(Header(\"\",\"\"),(Header()).getHeaderList.get()); assertEquals(Header(\"\",\"\"),HttpRequest(Header(\"\",\"\")).withHeader(Header(\"name\",\"\")).getHeaderList().get());}", "n_tokens": 135, "n_pass": [1652, 206, 74]}
{"time": "2021-02-24 12:08:30.338691", "score": "0.5309", "loss": "18.5824", "code": "void returnsHeaders(){ assertEquals(Header(\"\",\"\"),(Header(\"\",\"\")).getHeaderList().get());assertEquals(Header(\"\", \"\"),(((\"\"))).get());assertEquals(Header(\"\",\"\"),(Header()).getHeaderList.get());assertEquals(Header(\"\",\"\"),HttpRequest(Header(\"\",\"\")).withHeader(Header(\"name\",\"\")).getHeaderList().get());}", "n_tokens": 134, "n_pass": [1666, 208, 75]}
{"time": "2021-02-24 12:08:42.372760", "score": "0.6138", "loss": "18.7571", "code": "void returnsHeaders(){ assertEquals(Header(\"\",\"\"),(Header(\"\",\"\")).getHeaderList().get());assertEquals(Header(\"\",\"\"),(((\"\"))).get());assertEquals(Header(\"\",\"\"),(Header()).getHeaderList.get());assertEquals(Header(\"\",\"\"),HttpRequest(Header(\"\",\"\")).withHeader(Header(\"name\",\"\")).getHeaderList().get());}", "n_tokens": 133, "n_pass": [1758, 212, 76]}
{"time": "2021-02-24 12:08:54.420104", "score": "0.5625", "loss": "18.9471", "code": "void returnsHeaders(){assertEquals(Header(\"\",\"\"),(Header(\"\",\"\")).getHeaderList().get());assertEquals(Header(\"\",\"\"),(((\"\"))).get());assertEquals(Header(\"\",\"\"),(Header()).getHeaderList.get());assertEquals(Header(\"\",\"\"),HttpRequest(Header(\"\",\"\")).withHeader(Header(\"name\",\"\")).getHeaderList().get());}", "n_tokens": 132, "n_pass": [1853, 216, 77]}
{"time": "2021-02-24 12:09:02.818510", "score": "0.4692", "loss": "18.4356", "code": "void returnsHeaders(){assertEquals(Header(\"\",\"\"),(Header(\"\",\"\")).getHeaderList().get());assertEquals(Header(\"\",\"\"),(((\"\"))).get());assertEquals(Header(\"\",\"\"),(Header()).getHeaderList.get());assertEquals(Header(\"\",\"\"),HttpRequest(Header(\"\",\"\")).withHeader(Header(\"\",\"\")).getHeaderList().get());}", "n_tokens": 131, "n_pass": [1962, 219, 78]}
{"time": "2021-02-24 12:09:09.340052", "score": "0.4304", "loss": "18.5282", "code": "void returnsHeaders(){assertEquals(Header(\"\",\"\"),(Header(\"\",\"\")).getHeaderList().get());assertEquals(Header(\"\",\"\"),(((\"\"))).get());assertEquals(Header(\"\",\"\"),(Header()).getHeaderList.get());assertEquals(Header(\"\",\"\"),(Header(\"\",\"\")).withHeader(Header(\"\",\"\")).getHeaderList().get());}", "n_tokens": 130, "n_pass": [2077, 221, 79]}

Minimal simplified code:
void returnsHeaders(){assertEquals(Header("",""),(Header("","")).getHeaderList().get());assertEquals(Header("",""),(((""))).get());assertEquals(Header("",""),(Header()).getHeaderList.get());assertEquals(Header("",""),(Header("","")).withHeader(Header("","")).getHeaderList().get());}

