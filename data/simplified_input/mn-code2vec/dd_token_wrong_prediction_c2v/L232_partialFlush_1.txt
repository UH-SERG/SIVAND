
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/bcgit__bc-java/pg/src/main/java/org/bouncycastle/bcpg/BCPGOutputStream_partialFlush.java
method_name = partialFlush
method_body = private void partialFlush(boolean isLast) throws IOException { if (isLast) { writeNewPacketLength(partialOffset); out.write(partialBuffer, 0, partialOffset); } else { out.write(0xE0 | partialPower); out.write(partialBuffer, 0, partialBufferLength); } partialOffset = 0; }
predict, score, loss = write, 0.32069873809814453, 17.871097564697266

Trace of simplified code(s):
{"time": "2021-02-24 02:55:08.786783", "score": "0.3287", "loss": "17.912", "code": "private void partialFlush(boolean isLast) throws IOException { if (isLast) { writeNewPacketLength(partialOffset); out.write(partialBuffer, 0, partialOffset); } else { out.write(0xE0 | partialPower); out.write(partialBuffer, 0, partialBufferLength); } partialOffset = 0; }", "n_tokens": 89, "n_pass": [1, 1, 1]}
{"time": "2021-02-24 02:55:11.441468", "score": "0.4447", "loss": "17.5291", "code": "private void partialFlush(boolean isLast) throws IOException { if (isLast) { writeNewPacketLength(partialOffset); out.write(partialBuffer, 0, partialOffset); } else { out.write(0xE0 | partialPower); out; } partialOffset = 0; }", "n_tokens": 78, "n_pass": [26, 2, 2]}
{"time": "2021-02-24 02:55:14.083734", "score": "0.541", "loss": "17.1844", "code": "private void partialFlush(boolean isLast){ if (isLast) { writeNewPacketLength(partialOffset); out.write(partialBuffer, 0, partialOffset); } else { out.write(0xE0 | partialPower); out; } partialOffset = 0; }", "n_tokens": 73, "n_pass": [51, 3, 3]}
{"time": "2021-02-24 02:55:16.749478", "score": "0.349", "loss": "16.7765", "code": "private void partialFlush(boolean isLast){ if (isLast) {  out.write(partialBuffer, 0, partialOffset); } else { out.write(0xE0 | partialPower); out; } partialOffset = 0; }", "n_tokens": 68, "n_pass": [54, 4, 4]}
{"time": "2021-02-24 02:55:19.429331", "score": "0.5404", "loss": "16.2554", "code": "private void partialFlush(boolean isLast){ if (isLast) {  out.write(partialBuffer); } else { out.write(0xE0 | partialPower); out; } partialOffset = 0; }", "n_tokens": 62, "n_pass": [56, 5, 5]}
{"time": "2021-02-24 02:55:24.680027", "score": "0.5802", "loss": "16.3097", "code": "private void partialFlush(boolean isLast){ if (isLast) {  out.write(partialBuffer); } else { out.write(0xE0 | partialPower); } partialOffset = 0; }", "n_tokens": 59, "n_pass": [97, 7, 6]}
{"time": "2021-02-24 02:55:27.353710", "score": "0.6869", "loss": "18.6465", "code": "private void partialFlush(boolean isLast){ if (isLast) {  out.write(partialBuffer); } else { out.write(0xE0 | partialPower); } partialOffset ; }", "n_tokens": 56, "n_pass": [100, 8, 7]}
{"time": "2021-02-24 02:55:30.022528", "score": "0.6869", "loss": "18.6465", "code": "void partialFlush(boolean isLast){ if (isLast) {  out.write(partialBuffer); } else { out.write(0xE0 | partialPower); } partialOffset ; }", "n_tokens": 54, "n_pass": [102, 9, 8]}
{"time": "2021-02-24 02:55:33.034595", "score": "0.8825", "loss": "19.7672", "code": "void partialFlush(boolean isLast){ if (isLast) { write(partialBuffer); } else { out.write(0xE0 | partialPower); } partialOffset ; }", "n_tokens": 51, "n_pass": [110, 10, 9]}
{"time": "2021-02-24 02:55:35.660565", "score": "0.6026", "loss": "16.4063", "code": "void partialFlush(boolean isLast){ if (isLast) { write(partialBuffer); } else { (0xE0 | partialPower); } partialOffset ; }", "n_tokens": 48, "n_pass": [115, 11, 10]}
{"time": "2021-02-24 02:55:38.345174", "score": "0.6316", "loss": "16.5788", "code": "void partialFlush(boolean isLast){ if (isLast) { write(partialBuffer); } else { (0xE0 | partialPower); }; }", "n_tokens": 45, "n_pass": [120, 12, 11]}
{"time": "2021-02-24 02:55:44.626018", "score": "0.6316", "loss": "16.5788", "code": "void partialFlush(boolean isLast){if (isLast) { write(partialBuffer); } else { (0xE0 | partialPower); }; }", "n_tokens": 44, "n_pass": [180, 13, 12]}
{"time": "2021-02-24 02:55:47.295059", "score": "0.6316", "loss": "16.5788", "code": "void partialFlush(boolean isLast){if(isLast) { write(partialBuffer); } else { (0xE0 | partialPower); }; }", "n_tokens": 43, "n_pass": [182, 14, 13]}
{"time": "2021-02-24 02:55:49.920639", "score": "0.6316", "loss": "16.5788", "code": "void partialFlush(boolean isLast){if(isLast){ write(partialBuffer); } else { (0xE0 | partialPower); }; }", "n_tokens": 42, "n_pass": [186, 15, 14]}
{"time": "2021-02-24 02:55:52.532303", "score": "0.6316", "loss": "16.5788", "code": "void partialFlush(boolean isLast){if(isLast){write(partialBuffer); } else { (0xE0 | partialPower); }; }", "n_tokens": 41, "n_pass": [188, 16, 15]}
{"time": "2021-02-24 02:55:57.768240", "score": "0.405", "loss": "15.7792", "code": "void partialFlush(boolean isLast){if(isLast){write(partialBuffer); } { (0xE0 | partialPower); }; }", "n_tokens": 39, "n_pass": [193, 18, 16]}
{"time": "2021-02-24 02:56:00.384459", "score": "0.4208", "loss": "16.5687", "code": "void partialFlush(boolean isLast){if(isLast){write(partialBuffer); } { (0 | partialPower); }; }", "n_tokens": 37, "n_pass": [196, 19, 17]}
{"time": "2021-02-24 02:56:10.123151", "score": "0.4208", "loss": "16.5687", "code": "void partialFlush(boolean isLast){if(isLast){write(partialBuffer); } { (0 |partialPower); }; }", "n_tokens": 36, "n_pass": [245, 21, 18]}
{"time": "2021-02-24 02:56:12.932363", "score": "0.4208", "loss": "16.5687", "code": "void partialFlush(boolean isLast){if(isLast){write(partialBuffer); } { (0 |partialPower);}; }", "n_tokens": 35, "n_pass": [249, 22, 19]}
{"time": "2021-02-24 02:56:15.583409", "score": "0.4208", "loss": "16.5687", "code": "void partialFlush(boolean isLast){if(isLast){write(partialBuffer); } { (0 |partialPower);} }", "n_tokens": 34, "n_pass": [251, 23, 20]}
{"time": "2021-02-24 02:56:18.218957", "score": "0.4208", "loss": "16.5687", "code": "void partialFlush(boolean isLast){if(isLast){write(partialBuffer); } { (0 |partialPower);}}", "n_tokens": 33, "n_pass": [252, 24, 21]}
{"time": "2021-02-24 02:56:26.962581", "score": "0.4208", "loss": "16.5687", "code": "void partialFlush(boolean isLast){if(isLast){write(partialBuffer);} { (0 |partialPower);}}", "n_tokens": 32, "n_pass": [273, 27, 22]}
{"time": "2021-02-24 02:56:29.637660", "score": "0.4208", "loss": "16.5687", "code": "void partialFlush(boolean isLast){if(isLast){write(partialBuffer);}{ (0 |partialPower);}}", "n_tokens": 31, "n_pass": [275, 28, 23]}
{"time": "2021-02-24 02:56:32.260089", "score": "0.4208", "loss": "16.5687", "code": "void partialFlush(boolean isLast){if(isLast){write(partialBuffer);}{(0 |partialPower);}}", "n_tokens": 30, "n_pass": [277, 29, 24]}
{"time": "2021-02-24 02:56:34.908431", "score": "0.4208", "loss": "16.5687", "code": "void partialFlush(boolean isLast){if(isLast){write(partialBuffer);}{(0|partialPower);}}", "n_tokens": 29, "n_pass": [280, 30, 25]}

Minimal simplified code:
void partialFlush(boolean isLast){if(isLast){write(partialBuffer);}{(0|partialPower);}}

