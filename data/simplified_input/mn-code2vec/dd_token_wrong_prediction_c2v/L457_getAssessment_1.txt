
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/sakaiproject__sakai/samigo/samigo-services/src/java/org/sakaiproject/tool/assessment/facade/SectionFacade_getAssessment.java
method_name = getAssessment
method_body = public AssessmentIfc getAssessment() throws DataFacadeException { try { this.data = (SectionDataIfc) section.getData(); } catch (AssessmentException ex) { throw new DataFacadeException(ex.getMessage()); } return new AssessmentFacade(this.data.getAssessment()); }
predict, score, loss = extraTransaction, 0.23554594814777374, 15.580970764160156

Trace of simplified code(s):
{"time": "2021-02-24 02:59:49.317697", "score": "0.2355", "loss": "15.581", "code": "public AssessmentIfc getAssessment() throws DataFacadeException { try { this.data = (SectionDataIfc) section.getData(); } catch (AssessmentException ex) { throw new DataFacadeException(ex.getMessage()); } return new AssessmentFacade(this.data.getAssessment()); }", "n_tokens": 80, "n_pass": [1, 1, 1]}
{"time": "2021-02-24 02:59:51.945250", "score": "0.2365", "loss": "16.2951", "code": "public AssessmentIfc getAssessment() throws DataFacadeException { try { this.getData(); } catch (AssessmentException ex) { throw new DataFacadeException(ex.getMessage()); } return new AssessmentFacade(this.data.getAssessment()); }", "n_tokens": 70, "n_pass": [22, 2, 2]}
{"time": "2021-02-24 02:59:54.608852", "score": "0.2518", "loss": "16.6744", "code": "public AssessmentIfc getAssessment() throws DataFacadeException { try { getData(); } catch (AssessmentException ex) { throw new DataFacadeException(ex.getMessage()); } return new AssessmentFacade(this.data.getAssessment()); }", "n_tokens": 68, "n_pass": [86, 3, 3]}
{"time": "2021-02-24 02:59:57.265208", "score": "0.2601", "loss": "16.6316", "code": "public AssessmentIfc getAssessment() throws DataFacadeException { try { getData(); } catch (AssessmentException ex) {  DataFacadeException(ex.getMessage()); } return new AssessmentFacade(this.data.getAssessment()); }", "n_tokens": 65, "n_pass": [94, 4, 4]}
{"time": "2021-02-24 02:59:59.910872", "score": "0.4321", "loss": "15.4252", "code": "public AssessmentIfc getAssessment() throws DataFacadeException { try { getData(); } catch (AssessmentException ex) {  DataFacadeException(ex.getMessage()); }new AssessmentFacade(this.data.getAssessment()); }", "n_tokens": 62, "n_pass": [99, 5, 5]}
{"time": "2021-02-24 03:00:02.536992", "score": "0.2849", "loss": "15.8179", "code": "public AssessmentIfc getAssessment() throws DataFacadeException { try { getData(); } catch (AssessmentException ex) {  DataFacadeException(ex.getMessage()); }(this.data.getAssessment()); }", "n_tokens": 59, "n_pass": [100, 6, 6]}
{"time": "2021-02-24 03:00:05.228163", "score": "0.2849", "loss": "15.8179", "code": "AssessmentIfc getAssessment() throws DataFacadeException { try { getData(); } catch (AssessmentException ex) {  DataFacadeException(ex.getMessage()); }(this.data.getAssessment()); }", "n_tokens": 57, "n_pass": [105, 7, 7]}
{"time": "2021-02-24 03:00:14.765715", "score": "0.2849", "loss": "15.8179", "code": "AssessmentIfc getAssessment()throws DataFacadeException { try { getData(); } catch (AssessmentException ex) {  DataFacadeException(ex.getMessage()); }(this.data.getAssessment()); }", "n_tokens": 56, "n_pass": [180, 8, 8]}
{"time": "2021-02-24 03:00:17.387672", "score": "0.2849", "loss": "15.8179", "code": "AssessmentIfc getAssessment()throws DataFacadeException{ try { getData(); } catch (AssessmentException ex) {  DataFacadeException(ex.getMessage()); }(this.data.getAssessment()); }", "n_tokens": 55, "n_pass": [184, 9, 9]}
{"time": "2021-02-24 03:00:20.001620", "score": "0.2849", "loss": "15.8179", "code": "AssessmentIfc getAssessment()throws DataFacadeException{try { getData(); } catch (AssessmentException ex) {  DataFacadeException(ex.getMessage()); }(this.data.getAssessment()); }", "n_tokens": 54, "n_pass": [186, 10, 10]}
{"time": "2021-02-24 03:00:22.617742", "score": "0.2849", "loss": "15.8179", "code": "AssessmentIfc getAssessment()throws DataFacadeException{try{ getData(); } catch (AssessmentException ex) {  DataFacadeException(ex.getMessage()); }(this.data.getAssessment()); }", "n_tokens": 53, "n_pass": [188, 11, 11]}
{"time": "2021-02-24 03:00:25.291772", "score": "0.2849", "loss": "15.8179", "code": "AssessmentIfc getAssessment()throws DataFacadeException{try{getData(); } catch (AssessmentException ex) {  DataFacadeException(ex.getMessage()); }(this.data.getAssessment()); }", "n_tokens": 52, "n_pass": [190, 12, 12]}
{"time": "2021-02-24 03:00:27.934488", "score": "0.2849", "loss": "15.8179", "code": "AssessmentIfc getAssessment()throws DataFacadeException{try{getData();} catch (AssessmentException ex) {  DataFacadeException(ex.getMessage()); }(this.data.getAssessment()); }", "n_tokens": 51, "n_pass": [195, 13, 13]}
{"time": "2021-02-24 03:00:30.556652", "score": "0.2849", "loss": "15.8179", "code": "AssessmentIfc getAssessment()throws DataFacadeException{try{getData();}catch (AssessmentException ex) {  DataFacadeException(ex.getMessage()); }(this.data.getAssessment()); }", "n_tokens": 50, "n_pass": [197, 14, 14]}
{"time": "2021-02-24 03:00:33.188291", "score": "0.2849", "loss": "15.8179", "code": "AssessmentIfc getAssessment()throws DataFacadeException{try{getData();}catch(AssessmentException ex) {  DataFacadeException(ex.getMessage()); }(this.data.getAssessment()); }", "n_tokens": 49, "n_pass": [199, 15, 15]}
{"time": "2021-02-24 03:00:35.828356", "score": "0.2849", "loss": "15.8179", "code": "AssessmentIfc getAssessment()throws DataFacadeException{try{getData();}catch(AssessmentException ex){  DataFacadeException(ex.getMessage()); }(this.data.getAssessment()); }", "n_tokens": 48, "n_pass": [205, 16, 16]}
{"time": "2021-02-24 03:00:38.447426", "score": "0.2849", "loss": "15.8179", "code": "AssessmentIfc getAssessment()throws DataFacadeException{try{getData();}catch(AssessmentException ex){ DataFacadeException(ex.getMessage()); }(this.data.getAssessment()); }", "n_tokens": 47, "n_pass": [207, 17, 17]}
{"time": "2021-02-24 03:00:41.058404", "score": "0.2849", "loss": "15.8179", "code": "AssessmentIfc getAssessment()throws DataFacadeException{try{getData();}catch(AssessmentException ex){DataFacadeException(ex.getMessage()); }(this.data.getAssessment()); }", "n_tokens": 46, "n_pass": [208, 18, 18]}
{"time": "2021-02-24 03:00:43.672418", "score": "0.2475", "loss": "16.0041", "code": "AssessmentIfc getAssessment()throws DataFacadeException{try{getData();}catch(AssessmentException ex){(ex.getMessage()); }(this.data.getAssessment()); }", "n_tokens": 45, "n_pass": [209, 19, 19]}
{"time": "2021-02-24 03:00:46.294300", "score": "0.2629", "loss": "16.07", "code": "AssessmentIfc getAssessment()throws DataFacadeException{try{getData();}catch(AssessmentException ex){(ex()); }(this.data.getAssessment()); }", "n_tokens": 43, "n_pass": [211, 20, 20]}
{"time": "2021-02-24 03:00:48.912080", "score": "0.2618", "loss": "16.0498", "code": "AssessmentIfc getAssessment()throws DataFacadeException{try{getData();}catch(AssessmentException ex){(ex); }(this.data.getAssessment()); }", "n_tokens": 41, "n_pass": [212, 21, 21]}
{"time": "2021-02-24 03:00:51.529013", "score": "0.3788", "loss": "16.3674", "code": "AssessmentIfc getAssessment()throws DataFacadeException{try{getData();}catch(AssessmentException ex){(ex); }(this.getAssessment()); }", "n_tokens": 39, "n_pass": [216, 22, 22]}
{"time": "2021-02-24 03:00:54.565648", "score": "0.2836", "loss": "17.2624", "code": "AssessmentIfc getAssessment()throws DataFacadeException{try{getData();}catch(AssessmentException ex){(ex); }(this.getAssessment); }", "n_tokens": 37, "n_pass": [218, 23, 23]}
{"time": "2021-02-24 03:01:02.453633", "score": "0.2836", "loss": "17.2624", "code": "AssessmentIfc getAssessment()throws DataFacadeException{try{getData();}catch(AssessmentException ex){(ex); }(this.getAssessment);}", "n_tokens": 36, "n_pass": [264, 25, 24]}
{"time": "2021-02-24 03:01:06.215564", "score": "0.2836", "loss": "17.2624", "code": "AssessmentIfc getAssessment()throws DataFacadeException{try{getData();}catch(AssessmentException ex){(ex);}(this.getAssessment);}", "n_tokens": 35, "n_pass": [292, 26, 25]}

Minimal simplified code:
AssessmentIfc getAssessment()throws DataFacadeException{try{getData();}catch(AssessmentException ex){(ex);}(this.getAssessment);}

