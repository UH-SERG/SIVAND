
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/sakaiproject__sakai/calendar/calendar-impl/impl/src/test/org/sakaiproject/calendar/impl/PDFExportServiceTest_newTimeRange.java
method_name = newTimeRange
method_body = private TimeRange newTimeRange(String start, String length) { Instant beginning = Instant.parse(start); Duration duration = Duration.parse(length); return timeService.newTimeRange(beginning.toEpochMilli(), duration.toMillis()); }
predict, score, loss = parse, 0.660027027130127, 17.510608673095703

Trace of simplified code(s):
{"time": "2021-02-24 09:32:50.936952", "score": "0.66", "loss": "17.5106", "code": "private TimeRange newTimeRange(String start, String length) { Instant beginning = Instant.parse(start); Duration duration = Duration.parse(length); return timeService.newTimeRange(beginning.toEpochMilli(), duration.toMillis()); }", "n_tokens": 68, "n_pass": [1, 1, 1]}
{"time": "2021-02-24 09:32:53.722582", "score": "0.2474", "loss": "16.8571", "code": "private TimeRange newTimeRange(String start, String length) {duration = Duration.parse(length); return timeService.newTimeRange(beginning.toEpochMilli(), duration.toMillis()); }", "n_tokens": 51, "n_pass": [9, 2, 2]}
{"time": "2021-02-24 09:33:02.404484", "score": "0.2013", "loss": "16.1558", "code": "private TimeRange newTimeRange(String  length) {duration = Duration.parse(length); return timeService.newTimeRange(beginning.toEpochMilli(), duration.toMillis()); }", "n_tokens": 47, "n_pass": [46, 5, 3]}
{"time": "2021-02-24 09:33:22.188216", "score": "0.2013", "loss": "16.1558", "code": "TimeRange newTimeRange(String  length) {duration = Duration.parse(length); return timeService.newTimeRange(beginning.toEpochMilli(), duration.toMillis()); }", "n_tokens": 45, "n_pass": [97, 12, 4]}
{"time": "2021-02-24 09:33:44.195554", "score": "0.2013", "loss": "16.1558", "code": "TimeRange newTimeRange(String length) {duration = Duration.parse(length); return timeService.newTimeRange(beginning.toEpochMilli(), duration.toMillis()); }", "n_tokens": 44, "n_pass": [165, 18, 5]}
{"time": "2021-02-24 09:33:46.958171", "score": "0.2013", "loss": "16.1558", "code": "TimeRange newTimeRange(String length){duration = Duration.parse(length); return timeService.newTimeRange(beginning.toEpochMilli(), duration.toMillis()); }", "n_tokens": 43, "n_pass": [169, 19, 6]}
{"time": "2021-02-24 09:33:49.717242", "score": "0.2013", "loss": "16.1558", "code": "TimeRange newTimeRange(String length){duration= Duration.parse(length); return timeService.newTimeRange(beginning.toEpochMilli(), duration.toMillis()); }", "n_tokens": 42, "n_pass": [172, 20, 7]}
{"time": "2021-02-24 09:33:52.453153", "score": "0.2013", "loss": "16.1558", "code": "TimeRange newTimeRange(String length){duration=Duration.parse(length); return timeService.newTimeRange(beginning.toEpochMilli(), duration.toMillis()); }", "n_tokens": 41, "n_pass": [174, 21, 8]}
{"time": "2021-02-24 09:34:00.689022", "score": "0.2013", "loss": "16.1558", "code": "TimeRange newTimeRange(String length){duration=Duration.parse(length);return timeService.newTimeRange(beginning.toEpochMilli(), duration.toMillis()); }", "n_tokens": 40, "n_pass": [182, 24, 9]}
{"time": "2021-02-24 09:34:06.155534", "score": "0.8356", "loss": "16.6606", "code": "TimeRange newTimeRange(String length){duration=Duration.parse(length);returntimeService.newTimeRange(beginning.toEpochMilli(), duration.toMillis()); }", "n_tokens": 39, "n_pass": [184, 26, 10]}
{"time": "2021-02-24 09:34:08.938591", "score": "0.4121", "loss": "15.9179", "code": "TimeRange newTimeRange(String length){duration=Duration.parse(length);returntimeServicenewTimeRange(beginning.toEpochMilli(), duration.toMillis()); }", "n_tokens": 38, "n_pass": [186, 27, 11]}
{"time": "2021-02-24 09:34:11.669619", "score": "0.4121", "loss": "15.9179", "code": "TimeRange newTimeRange(String length){duration=Duration.parse(length);returntimeService(beginning.toEpochMilli(), duration.toMillis()); }", "n_tokens": 37, "n_pass": [187, 28, 12]}
{"time": "2021-02-24 09:34:14.472882", "score": "0.7714", "loss": "17.4979", "code": "TimeRange newTimeRange(String length){duration=Duration.parse(length);returntimeService(beginningtoEpochMilli(), duration.toMillis()); }", "n_tokens": 36, "n_pass": [190, 29, 13]}
{"time": "2021-02-24 09:34:19.932337", "score": "0.7714", "loss": "17.4979", "code": "TimeRange newTimeRange(String length){duration=Duration.parse(length);returntimeService(beginningtoEpochMilli(),duration.toMillis()); }", "n_tokens": 35, "n_pass": [195, 31, 14]}
{"time": "2021-02-24 09:34:22.650805", "score": "0.6297", "loss": "16.8406", "code": "TimeRange newTimeRange(String length){duration=Duration.parse(length);returntimeService(beginningtoEpochMilli(),durationtoMillis()); }", "n_tokens": 34, "n_pass": [197, 32, 15]}
{"time": "2021-02-24 09:34:25.395158", "score": "0.2587", "loss": "17.6405", "code": "TimeRange newTimeRange(String length){duration=Duration.parse(length);returntimeService(beginningtoEpochMilli(),duration()); }", "n_tokens": 33, "n_pass": [198, 33, 16]}
{"time": "2021-02-24 09:34:28.131696", "score": "0.3102", "loss": "17.6676", "code": "TimeRange newTimeRange(String length){duration=Duration.parse(length);returntimeService(beginningtoEpochMilli(),duration); }", "n_tokens": 31, "n_pass": [199, 34, 17]}
{"time": "2021-02-24 09:34:32.268688", "score": "0.9922", "loss": "20.1651", "code": "TimeRange newTimeRange(String length){durationDuration.parse(length);returntimeService(beginningtoEpochMilli(),duration); }", "n_tokens": 30, "n_pass": [212, 35, 18]}
{"time": "2021-02-24 09:34:35.007951", "score": "0.991", "loss": "20.0163", "code": "TimeRange newTimeRange(String length){duration.parse(length);returntimeService(beginningtoEpochMilli(),duration); }", "n_tokens": 29, "n_pass": [213, 36, 19]}
{"time": "2021-02-24 09:34:40.490457", "score": "0.9037", "loss": "17.4332", "code": "TimeRange newTimeRange(String length){duration.parse();returntimeService(beginningtoEpochMilli(),duration); }", "n_tokens": 28, "n_pass": [217, 38, 20]}
{"time": "2021-02-24 09:34:45.949119", "score": "0.9127", "loss": "18.3737", "code": "TimeRange newTimeRange(String length){duration.parse();returntimeService(toEpochMilli(),duration); }", "n_tokens": 27, "n_pass": [223, 40, 21]}
{"time": "2021-02-24 09:34:56.348165", "score": "0.9127", "loss": "18.3737", "code": "TimeRange newTimeRange(String length){duration.parse();returntimeService(toEpochMilli(),duration);}", "n_tokens": 26, "n_pass": [255, 43, 22]}

Minimal simplified code:
TimeRange newTimeRange(String length){duration.parse();returntimeService(toEpochMilli(),duration);}

