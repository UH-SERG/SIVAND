
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/codefollower__Tomcat-Research/java/org/apache/catalina/core/StandardWrapper_findSecurityReferences.java
method_name = findSecurityReferences
method_body = @Override public String[] findSecurityReferences() { try { referencesLock.readLock().lock(); String[] results = new String[references.size()]; return references.keySet().toArray(results); } finally { referencesLock.readLock().unlock(); } }
predict, score, loss = toArray, 0.5569519996643066, 16.22684097290039

Trace of simplified code(s):
{"time": "2021-02-24 06:52:59.864052", "score": "0.557", "loss": "16.2268", "code": "@Override public String[] findSecurityReferences() { try { referencesLock.readLock().lock(); String[] results = new String[references.size()]; return references.keySet().toArray(results); } finally { referencesLock.readLock().unlock(); } }", "n_tokens": 84, "n_pass": [1, 1, 1]}
{"time": "2021-02-24 06:53:02.497712", "score": "0.6911", "loss": "16.255", "code": "@Override public String[] findSecurityReferences() { try { referencesLockString[] results = new String[references.size()]; return references.keySet().toArray(results); } finally { referencesLock.readLock().unlock(); } }", "n_tokens": 74, "n_pass": [22, 2, 2]}
{"time": "2021-02-24 06:53:05.138757", "score": "0.7823", "loss": "15.6735", "code": "@Override public String[] findSecurityReferences() { try { referencesLockString[references.size()]; return references.keySet().toArray(results); } finally { referencesLock.readLock().unlock(); } }", "n_tokens": 64, "n_pass": [23, 3, 3]}
{"time": "2021-02-24 06:53:07.759993", "score": "0.8526", "loss": "14.7232", "code": "@Override public String[] findSecurityReferences() { try { referencesLockString[references.size()]; return; } finally { referencesLock.readLock().unlock(); } }", "n_tokens": 53, "n_pass": [25, 4, 4]}
{"time": "2021-02-24 06:53:10.377971", "score": "0.3043", "loss": "15.2958", "code": "@Override public String[] findSecurityReferences() { try { referencesLock; } finally { referencesLock.readLock().unlock(); } }", "n_tokens": 42, "n_pass": [30, 5, 5]}
{"time": "2021-02-24 06:53:13.052885", "score": "0.33", "loss": "15.1735", "code": "String[] findSecurityReferences() { try { referencesLock; } finally { referencesLock.readLock().unlock(); } }", "n_tokens": 37, "n_pass": [47, 6, 6]}
{"time": "2021-02-24 06:53:15.649303", "score": "0.6245", "loss": "14.8914", "code": "String[] findSecurityReferences() { try { } finally { referencesLock.readLock().unlock(); } }", "n_tokens": 34, "n_pass": [74, 7, 7]}
{"time": "2021-02-24 06:53:18.230527", "score": "0.809", "loss": "20.2837", "code": "String[] findSecurityReferences() { try { } finally {readLock().unlock(); } }", "n_tokens": 31, "n_pass": [77, 8, 8]}
{"time": "2021-02-24 06:53:22.977490", "score": "0.809", "loss": "20.2837", "code": "String[]findSecurityReferences() { try { } finally {readLock().unlock(); } }", "n_tokens": 30, "n_pass": [125, 9, 9]}
{"time": "2021-02-24 06:53:25.559591", "score": "0.809", "loss": "20.2837", "code": "String[]findSecurityReferences(){ try { } finally {readLock().unlock(); } }", "n_tokens": 29, "n_pass": [129, 10, 10]}
{"time": "2021-02-24 06:53:28.145286", "score": "0.809", "loss": "20.2837", "code": "String[]findSecurityReferences(){try { } finally {readLock().unlock(); } }", "n_tokens": 28, "n_pass": [131, 11, 11]}
{"time": "2021-02-24 06:53:30.765690", "score": "0.809", "loss": "20.2837", "code": "String[]findSecurityReferences(){try{ } finally {readLock().unlock(); } }", "n_tokens": 27, "n_pass": [133, 12, 12]}
{"time": "2021-02-24 06:53:33.369469", "score": "0.809", "loss": "20.2837", "code": "String[]findSecurityReferences(){try{} finally {readLock().unlock(); } }", "n_tokens": 26, "n_pass": [135, 13, 13]}
{"time": "2021-02-24 06:53:35.949275", "score": "0.809", "loss": "20.2837", "code": "String[]findSecurityReferences(){try{}finally {readLock().unlock(); } }", "n_tokens": 25, "n_pass": [137, 14, 14]}
{"time": "2021-02-24 06:53:39.978531", "score": "0.809", "loss": "20.2837", "code": "String[]findSecurityReferences(){try{}finally {readLock().unlock();} }", "n_tokens": 24, "n_pass": [178, 15, 15]}
{"time": "2021-02-24 06:53:42.574218", "score": "0.809", "loss": "20.2837", "code": "String[]findSecurityReferences(){try{}finally {readLock().unlock();}}", "n_tokens": 23, "n_pass": [179, 16, 16]}
{"time": "2021-02-24 06:53:45.198223", "score": "0.809", "loss": "20.2837", "code": "String[]findSecurityReferences(){try{}finally{readLock().unlock();}}", "n_tokens": 22, "n_pass": [192, 17, 17]}

Minimal simplified code:
String[]findSecurityReferences(){try{}finally{readLock().unlock();}}

