
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/Treeptik__cloudunit/cu-core/src/main/java/fr/treeptik/cloudunit/utils/CheckUtils_validateInputSizeMax.java
method_name = validateInputSizeMax
method_body = public static void validateInputSizeMax(String field, String message, int size) throws CheckException { if (field == null || field.trim().length() == 0 || field.length() > size) { String messageTranslated = messageSource.getMessage(message, null, Locale.ENGLISH); throw new CheckException(messageTranslated + " : " + field); } }
predict, score, loss = require, 0.28808534145355225, 16.992671966552734

Trace of simplified code(s):
{"time": "2021-02-24 01:44:14.112494", "score": "0.2881", "loss": "16.9927", "code": "public static void validateInputSizeMax(String field, String message, int size) throws CheckException { if (field == null || field.trim().length() == 0 || field.length() > size) { String messageTranslated = messageSource.getMessage(message, null, Locale.ENGLISH); throw new CheckException(messageTranslated + \" : \" + field); } }", "n_tokens": 120, "n_pass": [1, 1, 1]}
{"time": "2021-02-24 01:44:17.010578", "score": "0.5294", "loss": "16.494", "code": "public static void validateInputSizeMax(String field, String message, int size) throws CheckException { if (field == null || field.trimfield.length() > size) { String messageTranslated = messageSource.getMessage(message, null, Locale.ENGLISH); throw new CheckException(messageTranslated + \" : \" + field); } }", "n_tokens": 105, "n_pass": [23, 2, 2]}
{"time": "2021-02-24 01:44:19.792208", "score": "0.4571", "loss": "16.4256", "code": "public static void validateInputSizeMax(String field, String message, int size) throws CheckException { if (field == null || field.trimfield.length() > size) { String messageTranslated = messageSource.getMessage(message, null, Locale.ENGLISH); throw new CheckException(messageTranslated + field); } }", "n_tokens": 97, "n_pass": [50, 3, 3]}
{"time": "2021-02-24 01:44:22.571685", "score": "0.5042", "loss": "16.8896", "code": "public static void validateInputSizeMax(String field, String message, int size) throws CheckException { if (field =field.trimfield.length() > size) { String messageTranslated = messageSource.getMessage(message, null, Locale.ENGLISH); throw new CheckException(messageTranslated + field); } }", "n_tokens": 90, "n_pass": [57, 4, 4]}
{"time": "2021-02-24 01:44:25.330465", "score": "0.4775", "loss": "16.5175", "code": "public static void validateInputSizeMax(String field, String message, int size) throws CheckException { if (field =field.trimfield.length() > size) { String messageTranslated = messageSource.getMessage(message, null, Locale.ENGLISH); throw(messageTranslated + field); } }", "n_tokens": 86, "n_pass": [104, 5, 5]}
{"time": "2021-02-24 01:44:28.071293", "score": "0.4775", "loss": "16.5175", "code": " void validateInputSizeMax(String field, String message, int size) throws CheckException { if (field =field.trimfield.length() > size) { String messageTranslated = messageSource.getMessage(message, null, Locale.ENGLISH); throw(messageTranslated + field); } }", "n_tokens": 83, "n_pass": [107, 6, 6]}
{"time": "2021-02-24 01:44:34.876572", "score": "0.4775", "loss": "16.5175", "code": "void validateInputSizeMax(String field, String message, int size) throws CheckException { if (field =field.trimfield.length() > size) { String messageTranslated = messageSource.getMessage(message, null, Locale.ENGLISH); throw(messageTranslated + field); } }", "n_tokens": 82, "n_pass": [174, 8, 7]}
{"time": "2021-02-24 01:44:38.579681", "score": "0.4751", "loss": "15.3176", "code": "void validateInputSizeMax(String field, String message, int size) throws CheckException { if (field .trimfield.length() > size) { String messageTranslated = messageSource.getMessage(message, null, Locale.ENGLISH); throw(messageTranslated + field); } }", "n_tokens": 80, "n_pass": [192, 9, 8]}
{"time": "2021-02-24 01:44:49.799293", "score": "0.3848", "loss": "15.2125", "code": "void validateInputSizeMax(String field, String message, int size) throws CheckException { if (field .trimfield.length() > size) { String messageTranslated = messageSource(message, null, Locale.ENGLISH); throw(messageTranslated + field); } }", "n_tokens": 78, "n_pass": [204, 13, 9]}
{"time": "2021-02-24 01:44:55.289712", "score": "0.3646", "loss": "15.2477", "code": "void validateInputSizeMax(String field, String message, int size) throws CheckException { if (field .trimfield.length() > size) { String messageTranslated = messageSource(message,  Locale.ENGLISH); throw(messageTranslated + field); } }", "n_tokens": 76, "n_pass": [207, 15, 10]}
{"time": "2021-02-24 01:44:58.332186", "score": "0.3492", "loss": "15.1751", "code": "void validateInputSizeMax(String field, String message, int size) throws CheckException { if (field .trimfield.length() > size) { String messageTranslated = messageSource(message,  Locale); throw(messageTranslated + field); } }", "n_tokens": 74, "n_pass": [209, 16, 11]}
{"time": "2021-02-24 01:45:01.060639", "score": "0.3492", "loss": "15.1751", "code": "void validateInputSizeMax(String field, String message, int size) throws CheckException { if (field .trimfield.length() > size) { String messageTranslated = messageSource(message,  Locale);(messageTranslated + field); } }", "n_tokens": 72, "n_pass": [211, 17, 12]}
{"time": "2021-02-24 01:45:07.544396", "score": "0.4153", "loss": "15.2707", "code": "void validateInputSizeMax(String field, String message, int size) throws CheckException { if (field .trimfield.length() > size) { messageTranslated = messageSource(message,  Locale);(messageTranslated + field); } }", "n_tokens": 70, "n_pass": [242, 19, 13]}
{"time": "2021-02-24 01:45:24.651490", "score": "0.4153", "loss": "15.2707", "code": "void validateInputSizeMax(String field, String message, int size) throws CheckException { if (field .trimfield.length() > size) { messageTranslated= messageSource(message,  Locale);(messageTranslated + field); } }", "n_tokens": 69, "n_pass": [347, 21, 14]}
{"time": "2021-02-24 01:45:27.391428", "score": "0.4153", "loss": "15.2707", "code": "void validateInputSizeMax(String field, String message, int size) throws CheckException { if (field .trimfield.length() > size) { messageTranslated=messageSource(message,  Locale);(messageTranslated + field); } }", "n_tokens": 68, "n_pass": [348, 22, 15]}
{"time": "2021-02-24 01:45:30.141356", "score": "0.4153", "loss": "15.2707", "code": "void validateInputSizeMax(String field, String message, int size) throws CheckException { if (field .trimfield.length() > size) { messageTranslated=messageSource(message, Locale);(messageTranslated + field); } }", "n_tokens": 67, "n_pass": [353, 23, 16]}
{"time": "2021-02-24 01:45:32.870128", "score": "0.4153", "loss": "15.2707", "code": "void validateInputSizeMax(String field, String message, int size) throws CheckException { if (field .trimfield.length() > size) { messageTranslated=messageSource(message,Locale);(messageTranslated + field); } }", "n_tokens": 66, "n_pass": [354, 24, 17]}
{"time": "2021-02-24 01:45:35.630903", "score": "0.412", "loss": "15.2878", "code": "void validateInputSizeMax(String field, String message, int size) throws CheckException { if (field .trimfield.length() > size) { messageTranslated=messageSource(message,Locale);( + field); } }", "n_tokens": 65, "n_pass": [359, 25, 18]}
{"time": "2021-02-24 01:45:38.390069", "score": "0.412", "loss": "15.2878", "code": "void validateInputSizeMax(String field, String message, int size) throws CheckException { if (field .trimfield.length() > size) { messageTranslated=messageSource(message,Locale);(+ field); } }", "n_tokens": 64, "n_pass": [360, 26, 19]}
{"time": "2021-02-24 01:45:41.134262", "score": "0.4096", "loss": "15.2697", "code": "void validateInputSizeMax(String field, String message, int size) throws CheckException { if (field .trimfield.length() > size) { messageTranslated=messageSource(message,Locale);( field); } }", "n_tokens": 63, "n_pass": [361, 27, 20]}
{"time": "2021-02-24 01:45:43.881423", "score": "0.4096", "loss": "15.2697", "code": "void validateInputSizeMax(String field, String message, int size) throws CheckException { if (field .trimfield.length() > size) { messageTranslated=messageSource(message,Locale);(field); } }", "n_tokens": 62, "n_pass": [362, 28, 21]}
{"time": "2021-02-24 01:45:46.622967", "score": "0.4096", "loss": "15.2697", "code": "void validateInputSizeMax(String field, String message, int size) throws CheckException { if (field .trimfield.length() > size) { messageTranslated=messageSource(message,Locale);(field);} }", "n_tokens": 61, "n_pass": [366, 29, 22]}
{"time": "2021-02-24 01:45:49.376396", "score": "0.4096", "loss": "15.2697", "code": "void validateInputSizeMax(String field, String message, int size) throws CheckException { if (field .trimfield.length() > size) { messageTranslated=messageSource(message,Locale);(field);}}", "n_tokens": 60, "n_pass": [368, 30, 23]}
{"time": "2021-02-24 01:45:52.993746", "score": "0.4096", "loss": "15.2697", "code": "void validateInputSizeMax(String field,String message, int size) throws CheckException { if (field .trimfield.length() > size) { messageTranslated=messageSource(message,Locale);(field);}}", "n_tokens": 59, "n_pass": [378, 31, 24]}
{"time": "2021-02-24 01:45:55.851161", "score": "0.4096", "loss": "15.2697", "code": "void validateInputSizeMax(String field,String message,int size) throws CheckException { if (field .trimfield.length() > size) { messageTranslated=messageSource(message,Locale);(field);}}", "n_tokens": 58, "n_pass": [383, 32, 25]}
{"time": "2021-02-24 01:45:58.597772", "score": "0.4096", "loss": "15.2697", "code": "void validateInputSizeMax(String field,String message,int size)throws CheckException { if (field .trimfield.length() > size) { messageTranslated=messageSource(message,Locale);(field);}}", "n_tokens": 57, "n_pass": [388, 33, 26]}
{"time": "2021-02-24 01:46:01.355963", "score": "0.4096", "loss": "15.2697", "code": "void validateInputSizeMax(String field,String message,int size)throws CheckException{ if (field .trimfield.length() > size) { messageTranslated=messageSource(message,Locale);(field);}}", "n_tokens": 56, "n_pass": [392, 34, 27]}
{"time": "2021-02-24 01:46:04.101822", "score": "0.4096", "loss": "15.2697", "code": "void validateInputSizeMax(String field,String message,int size)throws CheckException{if (field .trimfield.length() > size) { messageTranslated=messageSource(message,Locale);(field);}}", "n_tokens": 55, "n_pass": [394, 35, 28]}
{"time": "2021-02-24 01:46:06.835681", "score": "0.4096", "loss": "15.2697", "code": "void validateInputSizeMax(String field,String message,int size)throws CheckException{if(field .trimfield.length() > size) { messageTranslated=messageSource(message,Locale);(field);}}", "n_tokens": 54, "n_pass": [396, 36, 29]}
{"time": "2021-02-24 01:46:09.605767", "score": "0.4096", "loss": "15.2697", "code": "void validateInputSizeMax(String field,String message,int size)throws CheckException{if(field.trimfield.length() > size) { messageTranslated=messageSource(message,Locale);(field);}}", "n_tokens": 53, "n_pass": [399, 37, 30]}
{"time": "2021-02-24 01:46:12.337404", "score": "0.3767", "loss": "16.0897", "code": "void validateInputSizeMax(String field,String message,int size)throws CheckException{if(fieldtrimfield.length() > size) { messageTranslated=messageSource(message,Locale);(field);}}", "n_tokens": 52, "n_pass": [400, 38, 31]}
{"time": "2021-02-24 01:46:17.796950", "score": "0.3767", "loss": "16.0897", "code": "void validateInputSizeMax(String field,String message,int size)throws CheckException{if(fieldtrim.length() > size) { messageTranslated=messageSource(message,Locale);(field);}}", "n_tokens": 51, "n_pass": [402, 40, 32]}
{"time": "2021-02-24 01:46:20.531178", "score": "0.267", "loss": "15.7114", "code": "void validateInputSizeMax(String field,String message,int size)throws CheckException{if(fieldtrimlength() > size) { messageTranslated=messageSource(message,Locale);(field);}}", "n_tokens": 50, "n_pass": [403, 41, 33]}
{"time": "2021-02-24 01:46:23.264271", "score": "0.267", "loss": "15.7114", "code": "void validateInputSizeMax(String field,String message,int size)throws CheckException{if(fieldtrim() > size) { messageTranslated=messageSource(message,Locale);(field);}}", "n_tokens": 49, "n_pass": [404, 42, 34]}
{"time": "2021-02-24 01:46:26.001631", "score": "0.267", "loss": "15.7114", "code": "void validateInputSizeMax(String field,String message,int size)throws CheckException{if(fieldtrim()> size) { messageTranslated=messageSource(message,Locale);(field);}}", "n_tokens": 48, "n_pass": [407, 43, 35]}
{"time": "2021-02-24 01:46:28.723142", "score": "0.267", "loss": "15.7114", "code": "void validateInputSizeMax(String field,String message,int size)throws CheckException{if(fieldtrim()>size) { messageTranslated=messageSource(message,Locale);(field);}}", "n_tokens": 47, "n_pass": [409, 44, 36]}
{"time": "2021-02-24 01:46:31.481298", "score": "0.267", "loss": "15.7114", "code": "void validateInputSizeMax(String field,String message,int size)throws CheckException{if(fieldtrim()>size){ messageTranslated=messageSource(message,Locale);(field);}}", "n_tokens": 46, "n_pass": [412, 45, 37]}
{"time": "2021-02-24 01:46:34.214775", "score": "0.267", "loss": "15.7114", "code": "void validateInputSizeMax(String field,String message,int size)throws CheckException{if(fieldtrim()>size){messageTranslated=messageSource(message,Locale);(field);}}", "n_tokens": 45, "n_pass": [414, 46, 38]}
{"time": "2021-02-24 01:46:36.966527", "score": "0.5477", "loss": "16.2978", "code": "void validateInputSizeMax(String field,String message,int size)throws CheckException{if(fieldtrim()>size){messageTranslatedmessageSource(message,Locale);(field);}}", "n_tokens": 44, "n_pass": [416, 47, 39]}
{"time": "2021-02-24 01:46:39.702234", "score": "0.5477", "loss": "16.2978", "code": "void validateInputSizeMax(String field,String message,int size)throws CheckException{if(fieldtrim()>size){messageTranslated(message,Locale);(field);}}", "n_tokens": 43, "n_pass": [417, 48, 40]}
{"time": "2021-02-24 01:46:46.070005", "score": "0.5421", "loss": "16.2021", "code": "void validateInputSizeMax(String field,String message,int size)throws CheckException{if(trim()>size){messageTranslated(message,Locale);(field);}}", "n_tokens": 42, "n_pass": [452, 50, 41]}

Minimal simplified code:
void validateInputSizeMax(String field,String message,int size)throws CheckException{if(trim()>size){messageTranslated(message,Locale);(field);}}

