
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/pagehelper__Mybatis-PageHelper/src/test/java/com/github/pagehelper/test/basic/PageHelperTest_shouldGetAllCountries.java
method_name = shouldGetAllCountries
method_body = @Test public void shouldGetAllCountries() { SqlSession sqlSession = MybatisHelper.getSqlSession(); try { List<Country> list = sqlSession.selectList("selectAll"); assertEquals(183, list.size()); } finally { sqlSession.close(); } }
predict, score, loss = testOrderBy, 0.396320641040802, 16.72635841369629

Trace of simplified code(s):
{"time": "2021-02-24 02:52:25.726991", "score": "0.3963", "loss": "16.7264", "code": "@Test public void shouldGetAllCountries() { SqlSession sqlSession = MybatisHelper.getSqlSession(); try { List<Country> list = sqlSession.selectList(\"selectAll\"); assertEquals(183, list.size()); } finally { sqlSession.close(); } }", "n_tokens": 80, "n_pass": [1, 1, 1]}
{"time": "2021-02-24 02:52:28.778355", "score": "0.4097", "loss": "18.9185", "code": "@Test public void shouldGetAllCountries() { SqlSession sqlSession = MybatisHelper.getSqlSession(); try { List<Country> list = sqlSession(183, list.size()); } finally { sqlSession.close(); } }", "n_tokens": 70, "n_pass": [24, 2, 2]}
{"time": "2021-02-24 02:52:31.860545", "score": "0.6409", "loss": "22.1803", "code": "@Test public void shouldGetAllCountries() { SqlSession sqlSession = MybatisHelper.getSqlSession(); try { List<Country> list = sqlSession(183, list.size()); } finally { ; } }", "n_tokens": 65, "n_pass": [49, 3, 3]}
{"time": "2021-02-24 02:52:34.498501", "score": "0.3821", "loss": "17.628", "code": "void shouldGetAllCountries() { SqlSession sqlSession = MybatisHelper.getSqlSession(); try { List<Country> list = sqlSession(183, list.size()); } finally { ; } }", "n_tokens": 60, "n_pass": [50, 4, 4]}
{"time": "2021-02-24 02:52:40.120298", "score": "0.6757", "loss": "14.3048", "code": "void shouldGetAllCountries() { SqlSession sqlSession = MybatisHelper.getSqlSession(); try { list = sqlSession(183, list.size()); } finally { ; } }", "n_tokens": 55, "n_pass": [56, 6, 5]}
{"time": "2021-02-24 02:52:46.176616", "score": "0.4806", "loss": "16.8352", "code": "void shouldGetAllCountries() { SqlSession sqlSession = MybatisHelper.getSqlSession(); try {  sqlSession(183, list.size()); } finally { ; } }", "n_tokens": 52, "n_pass": [92, 8, 6]}
{"time": "2021-02-24 02:52:48.853718", "score": "0.4806", "loss": "16.8352", "code": "void shouldGetAllCountries() { SqlSession sqlSession = MybatisHelper.getSqlSession(); try {  sqlSession(183, list.size()); } finally {} }", "n_tokens": 49, "n_pass": [100, 9, 7]}
{"time": "2021-02-24 02:53:05.332289", "score": "0.4806", "loss": "16.8352", "code": "void shouldGetAllCountries(){ SqlSession sqlSession = MybatisHelper.getSqlSession(); try {  sqlSession(183, list.size()); } finally {} }", "n_tokens": 48, "n_pass": [168, 13, 8]}
{"time": "2021-02-24 02:53:07.971047", "score": "0.4806", "loss": "16.8352", "code": "void shouldGetAllCountries(){SqlSession sqlSession = MybatisHelper.getSqlSession(); try {  sqlSession(183, list.size()); } finally {} }", "n_tokens": 47, "n_pass": [170, 14, 9]}
{"time": "2021-02-24 02:53:18.645078", "score": "0.4806", "loss": "16.8352", "code": "void shouldGetAllCountries(){SqlSession sqlSession= MybatisHelper.getSqlSession(); try {  sqlSession(183, list.size()); } finally {} }", "n_tokens": 46, "n_pass": [174, 18, 10]}
{"time": "2021-02-24 02:53:21.257616", "score": "0.4806", "loss": "16.8352", "code": "void shouldGetAllCountries(){SqlSession sqlSession=MybatisHelper.getSqlSession(); try {  sqlSession(183, list.size()); } finally {} }", "n_tokens": 45, "n_pass": [176, 19, 11]}
{"time": "2021-02-24 02:53:26.498540", "score": "0.4806", "loss": "16.8352", "code": "void shouldGetAllCountries(){SqlSession sqlSession=MybatisHelper.getSqlSession();try {  sqlSession(183, list.size()); } finally {} }", "n_tokens": 44, "n_pass": [183, 21, 12]}
{"time": "2021-02-24 02:53:29.171519", "score": "0.4806", "loss": "16.8352", "code": "void shouldGetAllCountries(){SqlSession sqlSession=MybatisHelper.getSqlSession();try{  sqlSession(183, list.size()); } finally {} }", "n_tokens": 43, "n_pass": [185, 22, 13]}
{"time": "2021-02-24 02:53:31.861543", "score": "0.4806", "loss": "16.8352", "code": "void shouldGetAllCountries(){SqlSession sqlSession=MybatisHelper.getSqlSession();try{ sqlSession(183, list.size()); } finally {} }", "n_tokens": 42, "n_pass": [187, 23, 14]}
{"time": "2021-02-24 02:53:34.473480", "score": "0.4806", "loss": "16.8352", "code": "void shouldGetAllCountries(){SqlSession sqlSession=MybatisHelper.getSqlSession();try{sqlSession(183, list.size()); } finally {} }", "n_tokens": 41, "n_pass": [188, 24, 15]}
{"time": "2021-02-24 02:53:45.118210", "score": "0.4313", "loss": "16.6446", "code": "void shouldGetAllCountries(){SqlSession sqlSession=MybatisHelper.getSqlSession();try{sqlSession(183, size()); } finally {} }", "n_tokens": 39, "n_pass": [195, 28, 16]}
{"time": "2021-02-24 02:54:09.325963", "score": "0.4313", "loss": "16.6446", "code": "void shouldGetAllCountries(){SqlSession sqlSession=MybatisHelper.getSqlSession();try{sqlSession(183, size());} finally {} }", "n_tokens": 38, "n_pass": [243, 36, 17]}
{"time": "2021-02-24 02:54:11.967795", "score": "0.4313", "loss": "16.6446", "code": "void shouldGetAllCountries(){SqlSession sqlSession=MybatisHelper.getSqlSession();try{sqlSession(183, size());}finally {} }", "n_tokens": 37, "n_pass": [245, 37, 18]}
{"time": "2021-02-24 02:54:14.579907", "score": "0.4313", "loss": "16.6446", "code": "void shouldGetAllCountries(){SqlSession sqlSession=MybatisHelper.getSqlSession();try{sqlSession(183, size());}finally{} }", "n_tokens": 36, "n_pass": [247, 38, 19]}
{"time": "2021-02-24 02:54:17.245873", "score": "0.4313", "loss": "16.6446", "code": "void shouldGetAllCountries(){SqlSession sqlSession=MybatisHelper.getSqlSession();try{sqlSession(183, size());}finally{}}", "n_tokens": 35, "n_pass": [250, 39, 20]}
{"time": "2021-02-24 02:54:39.058661", "score": "0.4313", "loss": "16.6446", "code": "void shouldGetAllCountries(){SqlSession sqlSession=MybatisHelper.getSqlSession();try{sqlSession(183,size());}finally{}}", "n_tokens": 34, "n_pass": [276, 47, 21]}

Minimal simplified code:
void shouldGetAllCountries(){SqlSession sqlSession=MybatisHelper.getSqlSession();try{sqlSession(183,size());}finally{}}

