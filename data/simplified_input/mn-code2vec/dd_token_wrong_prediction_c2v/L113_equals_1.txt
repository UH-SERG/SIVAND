
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/mimno__Mallet/src/cc/mallet/types/Label_equals.java
method_name = equals
method_body = public boolean equals(Object l) { if (l instanceof Label) { return ((Label) l).compareTo(this) == 0; } else throw new IllegalArgumentException("Cannot compare a Label object with a " + l.getClass().getName() + " object."); }
predict, score, loss = isNull, 0.4070453941822052, 1.4671072959899902

Trace of simplified code(s):
{"time": "2021-02-24 06:13:19.100888", "score": "0.407", "loss": "1.4671", "code": "public boolean equals(Object l) { if (l instanceof Label) { return ((Label) l).compareTo(this) == 0; } else throw new IllegalArgumentException(\"Cannot compare a Label object with a \" + l.getClass().getName() + \" object.\"); }", "n_tokens": 96, "n_pass": [1, 1, 1]}
{"time": "2021-02-24 06:13:22.152008", "score": "0.4115", "loss": "1.6386", "code": "public boolean equals(Object l) { if (l instanceof Label) { return ((Label) l).compareTo(this) == 0; } else throw new IllegalArgumentException(\"Cannot compare a Label object with a \" + \" object.\"); }", "n_tokens": 84, "n_pass": [26, 2, 2]}
{"time": "2021-02-24 06:13:27.835520", "score": "0.4115", "loss": "1.6386", "code": "public boolean equals(Object l) { if (l instanceof Label) { return ((Label) l).compareTo(this) == 0; } else throw new IllegalArgumentException(\"Cannot compare with a \" + \" object.\"); }", "n_tokens": 78, "n_pass": [59, 4, 3]}
{"time": "2021-02-24 06:13:33.096537", "score": "0.4115", "loss": "1.6386", "code": "public boolean equals(Object l) { if (l instanceof Label) { return ((Label) l).compareTo(this) == 0; } else throw new IllegalArgumentException(\"Cannot comparea \" + \" object.\"); }", "n_tokens": 75, "n_pass": [98, 6, 4]}
{"time": "2021-02-24 06:13:36.107054", "score": "0.5019", "loss": "4.1797", "code": "public boolean equals() { if (l instanceof Label) { return ((Label) l).compareTo(this) == 0; } else throw new IllegalArgumentException(\"Cannot comparea \" + \" object.\"); }", "n_tokens": 72, "n_pass": [105, 7, 5]}
{"time": "2021-02-24 06:13:38.775428", "score": "0.2617", "loss": "5.2993", "code": "public boolean equals() { if (l ) { return ((Label) l).compareTo(this) == 0; } else throw new IllegalArgumentException(\"Cannot comparea \" + \" object.\"); }", "n_tokens": 69, "n_pass": [109, 8, 6]}
{"time": "2021-02-24 06:13:44.472057", "score": "0.2123", "loss": "4.6291", "code": "public boolean equals() { if (l ) { return ((Label) l).compareTo(this) == 0; }  new IllegalArgumentException(\"Cannot comparea \" + \" object.\"); }", "n_tokens": 66, "n_pass": [119, 10, 7]}
{"time": "2021-02-24 06:13:47.122716", "score": "0.334", "loss": "4.5324", "code": "public boolean equals() { if (l ) { return ((Label) l).compareTo(this) == 0; } IllegalArgumentException(\"Cannot comparea \" + \" object.\"); }", "n_tokens": 63, "n_pass": [120, 11, 8]}
{"time": "2021-02-24 06:14:09.985082", "score": "0.334", "loss": "4.5324", "code": " boolean equals() { if (l ) { return ((Label) l).compareTo(this) == 0; } IllegalArgumentException(\"Cannot comparea \" + \" object.\"); }", "n_tokens": 62, "n_pass": [198, 18, 9]}
{"time": "2021-02-24 06:14:12.610480", "score": "0.334", "loss": "4.5324", "code": "boolean equals() { if (l ) { return ((Label) l).compareTo(this) == 0; } IllegalArgumentException(\"Cannot comparea \" + \" object.\"); }", "n_tokens": 61, "n_pass": [199, 19, 10]}
{"time": "2021-02-24 06:14:15.599811", "score": "0.334", "loss": "4.5324", "code": "boolean equals(){ if (l ) { return ((Label) l).compareTo(this) == 0; } IllegalArgumentException(\"Cannot comparea \" + \" object.\"); }", "n_tokens": 60, "n_pass": [204, 20, 11]}
{"time": "2021-02-24 06:14:18.226405", "score": "0.334", "loss": "4.5324", "code": "boolean equals(){if (l ) { return ((Label) l).compareTo(this) == 0; } IllegalArgumentException(\"Cannot comparea \" + \" object.\"); }", "n_tokens": 59, "n_pass": [206, 21, 12]}
{"time": "2021-02-24 06:14:20.824300", "score": "0.334", "loss": "4.5324", "code": "boolean equals(){if(l ) { return ((Label) l).compareTo(this) == 0; } IllegalArgumentException(\"Cannot comparea \" + \" object.\"); }", "n_tokens": 58, "n_pass": [208, 22, 13]}
{"time": "2021-02-24 06:14:23.433733", "score": "0.334", "loss": "4.5324", "code": "boolean equals(){if(l) { return ((Label) l).compareTo(this) == 0; } IllegalArgumentException(\"Cannot comparea \" + \" object.\"); }", "n_tokens": 57, "n_pass": [211, 23, 14]}
{"time": "2021-02-24 06:14:26.039432", "score": "0.334", "loss": "4.5324", "code": "boolean equals(){if(l){ return ((Label) l).compareTo(this) == 0; } IllegalArgumentException(\"Cannot comparea \" + \" object.\"); }", "n_tokens": 56, "n_pass": [213, 24, 15]}
{"time": "2021-02-24 06:14:28.641689", "score": "0.334", "loss": "4.5324", "code": "boolean equals(){if(l){return ((Label) l).compareTo(this) == 0; } IllegalArgumentException(\"Cannot comparea \" + \" object.\"); }", "n_tokens": 55, "n_pass": [215, 25, 16]}
{"time": "2021-02-24 06:14:31.641469", "score": "0.334", "loss": "4.5324", "code": "boolean equals(){if(l){return((Label) l).compareTo(this) == 0; } IllegalArgumentException(\"Cannot comparea \" + \" object.\"); }", "n_tokens": 54, "n_pass": [217, 26, 17]}
{"time": "2021-02-24 06:14:34.251491", "score": "0.2287", "loss": "4.7695", "code": "boolean equals(){if(l){return((Label)).compareTo(this) == 0; } IllegalArgumentException(\"Cannot comparea \" + \" object.\"); }", "n_tokens": 52, "n_pass": [220, 27, 18]}
{"time": "2021-02-24 06:14:53.574531", "score": "0.2287", "loss": "4.7695", "code": "boolean equals(){if(l){return((Label)).compareTo(this)== 0; } IllegalArgumentException(\"Cannot comparea \" + \" object.\"); }", "n_tokens": 51, "n_pass": [293, 32, 19]}
{"time": "2021-02-24 06:14:56.583384", "score": "0.2287", "loss": "4.7695", "code": "boolean equals(){if(l){return((Label)).compareTo(this)==0; } IllegalArgumentException(\"Cannot comparea \" + \" object.\"); }", "n_tokens": 50, "n_pass": [295, 33, 20]}
{"time": "2021-02-24 06:14:59.191084", "score": "0.2287", "loss": "4.7695", "code": "boolean equals(){if(l){return((Label)).compareTo(this)==0;} IllegalArgumentException(\"Cannot comparea \" + \" object.\"); }", "n_tokens": 49, "n_pass": [298, 34, 21]}
{"time": "2021-02-24 06:15:01.795727", "score": "0.2287", "loss": "4.7695", "code": "boolean equals(){if(l){return((Label)).compareTo(this)==0;}IllegalArgumentException(\"Cannot comparea \" + \" object.\"); }", "n_tokens": 48, "n_pass": [300, 35, 22]}
{"time": "2021-02-24 06:15:09.643833", "score": "0.2287", "loss": "4.7695", "code": "boolean equals(){if(l){return((Label)).compareTo(this)==0;}IllegalArgumentException(\"Cannotcomparea \" + \" object.\"); }", "n_tokens": 47, "n_pass": [305, 38, 23]}
{"time": "2021-02-24 06:15:12.245829", "score": "0.2287", "loss": "4.7695", "code": "boolean equals(){if(l){return((Label)).compareTo(this)==0;}IllegalArgumentException(\"Cannota \" + \" object.\"); }", "n_tokens": 46, "n_pass": [306, 39, 24]}
{"time": "2021-02-24 06:15:17.516709", "score": "0.2287", "loss": "4.7695", "code": "boolean equals(){if(l){return((Label)).compareTo(this)==0;}IllegalArgumentException(\"Cannota\" + \" object.\"); }", "n_tokens": 45, "n_pass": [308, 41, 25]}
{"time": "2021-02-24 06:15:20.131495", "score": "0.2287", "loss": "4.7695", "code": "boolean equals(){if(l){return((Label)).compareTo(this)==0;}IllegalArgumentException(\"Cannota\"+ \" object.\"); }", "n_tokens": 44, "n_pass": [310, 42, 26]}
{"time": "2021-02-24 06:15:22.767998", "score": "0.2287", "loss": "4.7695", "code": "boolean equals(){if(l){return((Label)).compareTo(this)==0;}IllegalArgumentException(\"Cannota\"+\" object.\"); }", "n_tokens": 43, "n_pass": [312, 43, 27]}
{"time": "2021-02-24 06:15:25.380117", "score": "0.2287", "loss": "4.7695", "code": "boolean equals(){if(l){return((Label)).compareTo(this)==0;}IllegalArgumentException(\"Cannota\"+\"object.\"); }", "n_tokens": 42, "n_pass": [314, 44, 28]}
{"time": "2021-02-24 06:15:30.614021", "score": "0.2287", "loss": "4.7695", "code": "boolean equals(){if(l){return((Label)).compareTo(this)==0;}IllegalArgumentException(\"Cannota\"+\"object\"); }", "n_tokens": 41, "n_pass": [316, 46, 29]}
{"time": "2021-02-24 06:15:33.224821", "score": "0.2287", "loss": "4.7695", "code": "boolean equals(){if(l){return((Label)).compareTo(this)==0;}IllegalArgumentException(\"Cannota\"+\"object\");}", "n_tokens": 40, "n_pass": [320, 47, 30]}
{"time": "2021-02-24 06:15:37.042479", "score": "0.3978", "loss": "3.9038", "code": "boolean equals(){if(l){return((Label)).compareTo()==0;}IllegalArgumentException(\"Cannota\"+\"object\");}", "n_tokens": 39, "n_pass": [342, 48, 31]}
{"time": "2021-02-24 06:15:40.425025", "score": "0.2273", "loss": "3.8322", "code": "boolean equals(){if(l){return((Label)).compareTo()==0;}(\"Cannota\"+\"object\");}", "n_tokens": 38, "n_pass": [349, 49, 32]}
{"time": "2021-02-24 06:15:43.022352", "score": "0.2086", "loss": "3.6986", "code": "boolean equals(){if(l){return((Label)).compareTo()==0;}(\"a\"+\"object\");}", "n_tokens": 37, "n_pass": [352, 50, 33]}
{"time": "2021-02-24 06:15:45.647334", "score": "0.2308", "loss": "3.9048", "code": "boolean equals(){if(l){return((Label)).compareTo()==0;}(\"\"+\"object\");}", "n_tokens": 36, "n_pass": [353, 51, 34]}
{"time": "2021-02-24 06:15:48.241861", "score": "0.2128", "loss": "4.145", "code": "boolean equals(){if(l){return((Label)).compareTo()==0;}(\"\"+\"\");}", "n_tokens": 35, "n_pass": [357, 52, 35]}

Minimal simplified code:
boolean equals(){if(l){return((Label)).compareTo()==0;}(""+"");}

