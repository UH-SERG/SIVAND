
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/sakaiproject__sakai/search/elasticsearch/util/src/java/org/sakaiproject/search/elasticsearch/BaseElasticSearchIndexBuilder_getNDocs.java
method_name = getNDocs
method_body = @Override public int getNDocs() { assureIndex(); CountResponse response = client.prepareCount(indexName).setQuery(filteredQuery(matchAllQuery(), termFilter(SearchService.FIELD_INDEXED, true))).execute().actionGet(); return (int) response.getCount(); }
predict, score, loss = count, 0.2323950231075287, 14.983803749084473

Trace of simplified code(s):
{"time": "2021-02-24 15:31:52.321660", "score": "0.2324", "loss": "14.9838", "code": "@Override public int getNDocs() { assureIndex(); CountResponse response = client.prepareCount(indexName).setQuery(filteredQuery(matchAllQuery(), termFilter(SearchService.FIELD_INDEXED, true))).execute().actionGet(); return (int) response.getCount(); }", "n_tokens": 77, "n_pass": [1, 1, 1]}
{"time": "2021-02-24 15:32:05.652289", "score": "0.376", "loss": "18.3667", "code": "@Override public int getNDocs() { assureIndex(); CountResponse response = client.prepareCount(indexName).setQuery(filteredQuery(matchAllQuery(SearchService.FIELD_INDEXED, true))).execute().actionGet(); return (int) response.getCount(); }", "n_tokens": 72, "n_pass": [52, 6, 2]}
{"time": "2021-02-24 15:32:08.294529", "score": "0.3128", "loss": "17.3295", "code": " int getNDocs() { assureIndex(); CountResponse response = client.prepareCount(indexName).setQuery(filteredQuery(matchAllQuery(SearchService.FIELD_INDEXED, true))).execute().actionGet(); return (int) response.getCount(); }", "n_tokens": 68, "n_pass": [59, 7, 3]}
{"time": "2021-02-24 15:32:10.943763", "score": "0.3159", "loss": "17.4759", "code": " int getNDocs() { CountResponse response = client.prepareCount(indexName).setQuery(filteredQuery(matchAllQuery(SearchService.FIELD_INDEXED, true))).execute().actionGet(); return (int) response.getCount(); }", "n_tokens": 63, "n_pass": [62, 8, 4]}
{"time": "2021-02-24 15:32:26.904193", "score": "0.2895", "loss": "17.6224", "code": " int getNDocs() { CountResponse response = client.prepareCount(indexName).setQuery(filteredQuery(matchAllQuery(SearchService.FIELD_INDEXED))).execute().actionGet(); return (int) response.getCount(); }", "n_tokens": 60, "n_pass": [114, 14, 5]}
{"time": "2021-02-24 15:32:29.924039", "score": "0.3879", "loss": "17.8303", "code": " int getNDocs() { CountResponse response = client.prepareCount(indexName).setQuery(filteredQuery(matchAllQuery(SearchService.FIELD_INDEXED))).execute().actionGet(); return  response.getCount(); }", "n_tokens": 57, "n_pass": [120, 15, 6]}
{"time": "2021-02-24 15:32:43.467198", "score": "0.2929", "loss": "17.5329", "code": " int getNDocs() { CountResponse response = client.prepareCount(indexName).setQuery(filteredQuery(matchAllQuery(FIELD_INDEXED))).execute().actionGet(); return  response.getCount(); }", "n_tokens": 55, "n_pass": [138, 20, 7]}
{"time": "2021-02-24 15:32:46.100269", "score": "0.2997", "loss": "17.9832", "code": " int getNDocs() { CountResponse response = client.prepareCount(indexName).setQuery(filteredQuery(matchAllQuery())).execute().actionGet(); return  response.getCount(); }", "n_tokens": 52, "n_pass": [139, 21, 8]}
{"time": "2021-02-24 15:33:13.072741", "score": "0.2997", "loss": "17.9832", "code": "int getNDocs() { CountResponse response = client.prepareCount(indexName).setQuery(filteredQuery(matchAllQuery())).execute().actionGet(); return  response.getCount(); }", "n_tokens": 51, "n_pass": [222, 30, 9]}
{"time": "2021-02-24 15:33:16.098052", "score": "0.2997", "loss": "17.9832", "code": "int getNDocs(){ CountResponse response = client.prepareCount(indexName).setQuery(filteredQuery(matchAllQuery())).execute().actionGet(); return  response.getCount(); }", "n_tokens": 50, "n_pass": [227, 31, 10]}
{"time": "2021-02-24 15:33:18.717761", "score": "0.2997", "loss": "17.9832", "code": "int getNDocs(){CountResponse response = client.prepareCount(indexName).setQuery(filteredQuery(matchAllQuery())).execute().actionGet(); return  response.getCount(); }", "n_tokens": 49, "n_pass": [229, 32, 11]}
{"time": "2021-02-24 15:33:29.211473", "score": "0.2997", "loss": "17.9832", "code": "int getNDocs(){CountResponse response= client.prepareCount(indexName).setQuery(filteredQuery(matchAllQuery())).execute().actionGet(); return  response.getCount(); }", "n_tokens": 48, "n_pass": [233, 36, 12]}
{"time": "2021-02-24 15:33:31.849298", "score": "0.2997", "loss": "17.9832", "code": "int getNDocs(){CountResponse response=client.prepareCount(indexName).setQuery(filteredQuery(matchAllQuery())).execute().actionGet(); return  response.getCount(); }", "n_tokens": 47, "n_pass": [235, 37, 13]}
{"time": "2021-02-24 15:33:39.712935", "score": "0.4176", "loss": "20.2816", "code": "int getNDocs(){CountResponse response=client.prepareCount(indexName).setQuery((matchAllQuery())).execute().actionGet(); return  response.getCount(); }", "n_tokens": 46, "n_pass": [245, 40, 14]}
{"time": "2021-02-24 15:34:06.231573", "score": "0.4176", "loss": "20.2816", "code": "int getNDocs(){CountResponse response=client.prepareCount(indexName).setQuery((matchAllQuery())).execute().actionGet();return  response.getCount(); }", "n_tokens": 45, "n_pass": [304, 49, 15]}
{"time": "2021-02-24 15:34:08.867495", "score": "0.4176", "loss": "20.2816", "code": "int getNDocs(){CountResponse response=client.prepareCount(indexName).setQuery((matchAllQuery())).execute().actionGet();return response.getCount(); }", "n_tokens": 44, "n_pass": [305, 50, 16]}
{"time": "2021-02-24 15:34:16.714288", "score": "0.4176", "loss": "20.2816", "code": "int getNDocs(){CountResponse response=client.prepareCount(indexName).setQuery((matchAllQuery())).execute().actionGet();return response.getCount();}", "n_tokens": 43, "n_pass": [313, 53, 17]}

Minimal simplified code:
int getNDocs(){CountResponse response=client.prepareCount(indexName).setQuery((matchAllQuery())).execute().actionGet();return response.getCount();}

