
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/MariaDB__mariadb-connector-j/src/main/java/org/mariadb/jdbc/internal/com/read/resultset/UpdatableResultSet_moveToInsertRow.java
method_name = moveToInsertRow
method_body = public void moveToInsertRow() throws SQLException { if (!canBeInserted) throw new SQLException(exceptionInsertMsg); Arrays.fill(parameterHolders, null); state = STATE_INSERT; notInsertRowPointer = getRowPointer(); }
predict, score, loss = clear, 0.7155274748802185, 12.40303897857666

Trace of simplified code(s):
{"time": "2021-02-24 01:25:14.162824", "score": "0.7155", "loss": "12.403", "code": "public void moveToInsertRow() throws SQLException { if (!canBeInserted) throw new SQLException(exceptionInsertMsg); Arrays.fill(parameterHolders, null); state = STATE_INSERT; notInsertRowPointer = getRowPointer(); }", "n_tokens": 61, "n_pass": [1, 1, 1]}
{"time": "2021-02-24 01:25:22.503012", "score": "0.6045", "loss": "12.5916", "code": "public void moveToInsertRow() throws SQLException { if (!canBeInserted) ; Arrays.fill(parameterHolders, null); state = STATE_INSERT; notInsertRowPointer = getRowPointer(); }", "n_tokens": 53, "n_pass": [23, 4, 2]}
{"time": "2021-02-24 01:25:28.425795", "score": "0.7221", "loss": "13.2381", "code": "public void moveToInsertRow() throws SQLException { if (!canBeInserted) fill(parameterHolders, null); state = STATE_INSERT; notInsertRowPointer = getRowPointer(); }", "n_tokens": 49, "n_pass": [45, 6, 3]}
{"time": "2021-02-24 01:25:31.166605", "score": "0.5886", "loss": "19.011", "code": "public void moveToInsertRow() throws SQLException { if (!canBeInserted) fill(parameterHolders, null); STATE_INSERT; notInsertRowPointer = getRowPointer(); }", "n_tokens": 45, "n_pass": [47, 7, 4]}
{"time": "2021-02-24 01:25:33.906387", "score": "0.4914", "loss": "20.0253", "code": "public void moveToInsertRow() throws SQLException { if (!canBeInserted) fill(parameterHolders, null);; notInsertRowPointer = getRowPointer(); }", "n_tokens": 41, "n_pass": [48, 8, 5]}
{"time": "2021-02-24 01:25:37.984099", "score": "0.4914", "loss": "20.0253", "code": "public void moveToInsertRow() throws SQLException { if (!canBeInserted) fill(parameterHolders, null);notInsertRowPointer = getRowPointer(); }", "n_tokens": 39, "n_pass": [82, 9, 6]}
{"time": "2021-02-24 01:25:40.782380", "score": "0.4914", "loss": "20.0253", "code": " void moveToInsertRow() throws SQLException { if (!canBeInserted) fill(parameterHolders, null);notInsertRowPointer = getRowPointer(); }", "n_tokens": 38, "n_pass": [87, 10, 7]}
{"time": "2021-02-24 01:25:43.590984", "score": "0.4914", "loss": "20.0253", "code": "void moveToInsertRow() throws SQLException { if (!canBeInserted) fill(parameterHolders, null);notInsertRowPointer = getRowPointer(); }", "n_tokens": 37, "n_pass": [88, 11, 8]}
{"time": "2021-02-24 01:25:46.756317", "score": "0.7551", "loss": "16.6184", "code": "void moveToInsertRow() throws SQLException { if (!canBeInserted) fill( null);notInsertRowPointer = getRowPointer(); }", "n_tokens": 35, "n_pass": [100, 12, 9]}
{"time": "2021-02-24 01:25:58.070363", "score": "0.7551", "loss": "16.6184", "code": "void moveToInsertRow() throws SQLException { if (!canBeInserted) fill(null);notInsertRowPointer = getRowPointer(); }", "n_tokens": 34, "n_pass": [153, 14, 10]}
{"time": "2021-02-24 01:26:00.792403", "score": "0.7551", "loss": "16.6184", "code": "void moveToInsertRow() throws SQLException { if (!canBeInserted) fill(null);notInsertRowPointer= getRowPointer(); }", "n_tokens": 33, "n_pass": [157, 15, 11]}
{"time": "2021-02-24 01:26:03.506190", "score": "0.7551", "loss": "16.6184", "code": "void moveToInsertRow() throws SQLException { if (!canBeInserted) fill(null);notInsertRowPointer=getRowPointer(); }", "n_tokens": 32, "n_pass": [159, 16, 12]}
{"time": "2021-02-24 01:26:06.243824", "score": "0.7551", "loss": "16.6184", "code": "void moveToInsertRow() throws SQLException { if (!canBeInserted) fill(null);notInsertRowPointer=getRowPointer();}", "n_tokens": 31, "n_pass": [164, 17, 13]}
{"time": "2021-02-24 01:26:09.868457", "score": "0.7551", "loss": "16.6184", "code": "void moveToInsertRow()throws SQLException { if (!canBeInserted) fill(null);notInsertRowPointer=getRowPointer();}", "n_tokens": 30, "n_pass": [171, 18, 14]}
{"time": "2021-02-24 01:26:12.612176", "score": "0.7551", "loss": "16.6184", "code": "void moveToInsertRow()throws SQLException{ if (!canBeInserted) fill(null);notInsertRowPointer=getRowPointer();}", "n_tokens": 29, "n_pass": [175, 19, 15]}
{"time": "2021-02-24 01:26:15.650226", "score": "0.7551", "loss": "16.6184", "code": "void moveToInsertRow()throws SQLException{if (!canBeInserted) fill(null);notInsertRowPointer=getRowPointer();}", "n_tokens": 28, "n_pass": [177, 20, 16]}
{"time": "2021-02-24 01:26:18.420689", "score": "0.7551", "loss": "16.6184", "code": "void moveToInsertRow()throws SQLException{if(!canBeInserted) fill(null);notInsertRowPointer=getRowPointer();}", "n_tokens": 27, "n_pass": [179, 21, 17]}
{"time": "2021-02-24 01:26:21.140215", "score": "0.4193", "loss": "14.2905", "code": "void moveToInsertRow()throws SQLException{if(canBeInserted) fill(null);notInsertRowPointer=getRowPointer();}", "n_tokens": 26, "n_pass": [181, 22, 18]}
{"time": "2021-02-24 01:26:23.874359", "score": "0.4193", "loss": "14.2905", "code": "void moveToInsertRow()throws SQLException{if(canBeInserted)fill(null);notInsertRowPointer=getRowPointer();}", "n_tokens": 25, "n_pass": [184, 23, 19]}
{"time": "2021-02-24 01:26:29.729674", "score": "0.3385", "loss": "13.6492", "code": "void moveToInsertRow()throws SQLException{if(canBeInserted)fill();notInsertRowPointer=getRowPointer();}", "n_tokens": 24, "n_pass": [187, 25, 20]}
{"time": "2021-02-24 01:26:32.677891", "score": "0.4113", "loss": "14.3512", "code": "void moveToInsertRow()throws SQLException{if(canBeInserted)fill();notInsertRowPointergetRowPointer();}", "n_tokens": 23, "n_pass": [191, 26, 21]}
{"time": "2021-02-24 01:26:35.536639", "score": "0.4113", "loss": "14.3512", "code": "void moveToInsertRow()throws SQLException{if(canBeInserted)fill();notInsertRowPointer();}", "n_tokens": 22, "n_pass": [192, 27, 22]}

Minimal simplified code:
void moveToInsertRow()throws SQLException{if(canBeInserted)fill();notInsertRowPointer();}

