
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/droidefense__engine/mods/core/src/main/java/droidefense/emulator/machine/base/AbstractVirtualMachine_resetThreads.java
method_name = resetThreads
method_body = public void resetThreads() { if (threads != null) { threads.clear(); } else { threads = new Vector<>(); } }
predict, score, loss = clear, 0.9328532218933105, 19.53801155090332

Trace of simplified code(s):
{"time": "2021-02-24 02:27:47.642355", "score": "0.9329", "loss": "19.538", "code": "public void resetThreads() { if (threads != null) { threads.clear(); } else { threads = new Vector<>(); } }", "n_tokens": 52, "n_pass": [1, 1, 1]}
{"time": "2021-02-24 02:27:50.261583", "score": "0.8899", "loss": "20.7575", "code": "public void resetThreads() { if (threads != null) { threads.clear(); } else { threads (); } }", "n_tokens": 45, "n_pass": [26, 2, 2]}
{"time": "2021-02-24 02:27:54.837419", "score": "0.8899", "loss": "20.7575", "code": " void resetThreads() { if (threads != null) { threads.clear(); } else { threads (); } }", "n_tokens": 44, "n_pass": [94, 3, 3]}
{"time": "2021-02-24 02:27:57.498986", "score": "0.8899", "loss": "20.7575", "code": "void resetThreads() { if (threads != null) { threads.clear(); } else { threads (); } }", "n_tokens": 43, "n_pass": [95, 4, 4]}
{"time": "2021-02-24 02:28:00.499772", "score": "0.8899", "loss": "20.7575", "code": "void resetThreads(){ if (threads != null) { threads.clear(); } else { threads (); } }", "n_tokens": 42, "n_pass": [100, 5, 5]}
{"time": "2021-02-24 02:28:03.164719", "score": "0.8899", "loss": "20.7575", "code": "void resetThreads(){if (threads != null) { threads.clear(); } else { threads (); } }", "n_tokens": 41, "n_pass": [102, 6, 6]}
{"time": "2021-02-24 02:28:05.849315", "score": "0.3268", "loss": "18.4774", "code": "void resetThreads(){if (threads != null) { clear(); } else { threads (); } }", "n_tokens": 39, "n_pass": [110, 7, 7]}
{"time": "2021-02-24 02:28:16.959149", "score": "0.3268", "loss": "18.4774", "code": "void resetThreads(){if (threads != null) { clear();} else { threads (); } }", "n_tokens": 38, "n_pass": [167, 9, 8]}
{"time": "2021-02-24 02:28:19.621583", "score": "0.3268", "loss": "18.4774", "code": "void resetThreads(){if (threads != null) { clear();}else { threads (); } }", "n_tokens": 37, "n_pass": [168, 10, 9]}
{"time": "2021-02-24 02:28:24.854871", "score": "0.3268", "loss": "18.4774", "code": "void resetThreads(){if (threads != null) { clear();}else{ threads (); } }", "n_tokens": 36, "n_pass": [170, 12, 10]}
{"time": "2021-02-24 02:28:27.529296", "score": "0.3268", "loss": "18.4774", "code": "void resetThreads(){if (threads != null) { clear();}else{threads (); } }", "n_tokens": 35, "n_pass": [172, 13, 11]}
{"time": "2021-02-24 02:28:30.174499", "score": "0.3268", "loss": "18.4774", "code": "void resetThreads(){if (threads != null) { clear();}else{threads(); } }", "n_tokens": 34, "n_pass": [174, 14, 12]}
{"time": "2021-02-24 02:28:32.886019", "score": "0.3268", "loss": "18.4774", "code": "void resetThreads(){if (threads != null) { clear();}else{threads();} }", "n_tokens": 33, "n_pass": [178, 15, 13]}
{"time": "2021-02-24 02:28:35.504884", "score": "0.3268", "loss": "18.4774", "code": "void resetThreads(){if (threads != null) { clear();}else{threads();}}", "n_tokens": 32, "n_pass": [180, 16, 14]}
{"time": "2021-02-24 02:28:39.077712", "score": "0.3268", "loss": "18.4774", "code": "void resetThreads(){if(threads != null) { clear();}else{threads();}}", "n_tokens": 31, "n_pass": [189, 17, 15]}
{"time": "2021-02-24 02:28:41.739251", "score": "0.3268", "loss": "18.4774", "code": "void resetThreads(){if(threads!= null) { clear();}else{threads();}}", "n_tokens": 30, "n_pass": [192, 18, 16]}
{"time": "2021-02-24 02:28:44.521861", "score": "0.7248", "loss": "19.6568", "code": "void resetThreads(){if(threads= null) { clear();}else{threads();}}", "n_tokens": 29, "n_pass": [193, 19, 17]}
{"time": "2021-02-24 02:28:47.124427", "score": "0.7248", "loss": "19.6568", "code": "void resetThreads(){if(threads=null) { clear();}else{threads();}}", "n_tokens": 28, "n_pass": [195, 20, 18]}
{"time": "2021-02-24 02:28:49.770994", "score": "0.7248", "loss": "19.6568", "code": "void resetThreads(){if(threads=null){ clear();}else{threads();}}", "n_tokens": 27, "n_pass": [198, 21, 19]}
{"time": "2021-02-24 02:28:52.388890", "score": "0.7248", "loss": "19.6568", "code": "void resetThreads(){if(threads=null){clear();}else{threads();}}", "n_tokens": 26, "n_pass": [200, 22, 20]}
{"time": "2021-02-24 02:28:55.443717", "score": "0.4726", "loss": "16.7326", "code": "void resetThreads(){if(threads=null){clear();}{threads();}}", "n_tokens": 25, "n_pass": [206, 23, 21]}

Minimal simplified code:
void resetThreads(){if(threads=null){clear();}{threads();}}

