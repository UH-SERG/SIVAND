
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/CogComp__cogcomp-nlp/lbjava-nlp-tools/src/main/java/edu/illinois/cs/cogcomp/lbjava/nlp/ColumnFormat_next.java
method_name = next
method_body = public Object next() { String line = readLine(); if (line == null) return null; if (line.length() == 0) return new String[0]; return line.split("\\s+"); }
predict, score, loss = getLine, 0.8465508818626404, 5.547613620758057

Trace of simplified code(s):
{"time": "2021-02-23 21:13:01.175009", "score": "0.8466", "loss": "5.5476", "code": "public Object next() { String line = readLine(); if (line == null) return null; if (line.length() == 0) return new String[0]; return line.split(\"\\\\s+\"); }", "n_tokens": 78, "n_pass": [1, 1, 1]}
{"time": "2021-02-23 21:13:04.326141", "score": "0.8466", "loss": "5.5476", "code": "Object next() { String line = readLine(); if (line == null) return null; if (line.length() == 0) return new String[0]; return line.split(\"\\\\s+\"); }", "n_tokens": 76, "n_pass": [92, 2, 2]}
{"time": "2021-02-23 21:13:07.010403", "score": "0.8549", "loss": "4.3795", "code": "Object next() { line = readLine(); if (line == null) return null; if (line.length() == 0) return new String[0]; return line.split(\"\\\\s+\"); }", "n_tokens": 74, "n_pass": [96, 3, 3]}
{"time": "2021-02-23 21:13:09.672913", "score": "0.7337", "loss": "3.3044", "code": "Object next() { line = readLine(); if (line == null) null; if (line.length() == 0) return new String[0]; return line.split(\"\\\\s+\"); }", "n_tokens": 72, "n_pass": [107, 4, 4]}
{"time": "2021-02-23 21:13:15.027065", "score": "0.7138", "loss": "2.1829", "code": "Object next() { line = readLine(); if (line == null) null; if (line.length() == 0)new String[0]; return line.split(\"\\\\s+\"); }", "n_tokens": 69, "n_pass": [114, 6, 5]}
{"time": "2021-02-23 21:13:20.425274", "score": "0.3997", "loss": "2.6482", "code": "Object next() { line = readLine(); if (line == null) null; if (line.length() == 0)new String[0]; return line.split(\"+\"); }", "n_tokens": 66, "n_pass": [120, 8, 6]}
{"time": "2021-02-23 21:13:36.246401", "score": "0.3997", "loss": "2.6482", "code": "Object next(){ line = readLine(); if (line == null) null; if (line.length() == 0)new String[0]; return line.split(\"+\"); }", "n_tokens": 65, "n_pass": [211, 11, 7]}
{"time": "2021-02-23 21:13:38.958847", "score": "0.3997", "loss": "2.6482", "code": "Object next(){line = readLine(); if (line == null) null; if (line.length() == 0)new String[0]; return line.split(\"+\"); }", "n_tokens": 64, "n_pass": [213, 12, 8]}
{"time": "2021-02-23 21:13:41.687319", "score": "0.3997", "loss": "2.6482", "code": "Object next(){line= readLine(); if (line == null) null; if (line.length() == 0)new String[0]; return line.split(\"+\"); }", "n_tokens": 63, "n_pass": [215, 13, 9]}
{"time": "2021-02-23 21:13:44.425835", "score": "0.3997", "loss": "2.6482", "code": "Object next(){line=readLine(); if (line == null) null; if (line.length() == 0)new String[0]; return line.split(\"+\"); }", "n_tokens": 62, "n_pass": [217, 14, 10]}
{"time": "2021-02-23 21:13:47.126591", "score": "0.3997", "loss": "2.6482", "code": "Object next(){line=readLine();if (line == null) null; if (line.length() == 0)new String[0]; return line.split(\"+\"); }", "n_tokens": 61, "n_pass": [222, 15, 11]}
{"time": "2021-02-23 21:13:49.839472", "score": "0.3997", "loss": "2.6482", "code": "Object next(){line=readLine();if(line == null) null; if (line.length() == 0)new String[0]; return line.split(\"+\"); }", "n_tokens": 60, "n_pass": [224, 16, 12]}
{"time": "2021-02-23 21:13:52.542534", "score": "0.3997", "loss": "2.6482", "code": "Object next(){line=readLine();if(line== null) null; if (line.length() == 0)new String[0]; return line.split(\"+\"); }", "n_tokens": 59, "n_pass": [227, 17, 13]}
{"time": "2021-02-23 21:13:55.217636", "score": "0.3189", "loss": "2.6702", "code": "Object next(){line=readLine();if(line= null) null; if (line.length() == 0)new String[0]; return line.split(\"+\"); }", "n_tokens": 58, "n_pass": [228, 18, 14]}
{"time": "2021-02-23 21:13:57.925533", "score": "0.3189", "loss": "2.6702", "code": "Object next(){line=readLine();if(line=null) null; if (line.length() == 0)new String[0]; return line.split(\"+\"); }", "n_tokens": 57, "n_pass": [230, 19, 15]}
{"time": "2021-02-23 21:14:00.601291", "score": "0.3189", "loss": "2.6702", "code": "Object next(){line=readLine();if(line=null)null; if (line.length() == 0)new String[0]; return line.split(\"+\"); }", "n_tokens": 56, "n_pass": [233, 20, 16]}
{"time": "2021-02-23 21:14:03.315692", "score": "0.311", "loss": "2.6982", "code": "Object next(){line=readLine();if(line=null); if (line.length() == 0)new String[0]; return line.split(\"+\"); }", "n_tokens": 55, "n_pass": [234, 21, 17]}
{"time": "2021-02-23 21:14:08.699496", "score": "0.311", "loss": "2.6982", "code": "Object next(){line=readLine();if(line=null);if (line.length() == 0)new String[0]; return line.split(\"+\"); }", "n_tokens": 54, "n_pass": [236, 23, 18]}
{"time": "2021-02-23 21:14:11.374878", "score": "0.311", "loss": "2.6982", "code": "Object next(){line=readLine();if(line=null);if(line.length() == 0)new String[0]; return line.split(\"+\"); }", "n_tokens": 53, "n_pass": [238, 24, 19]}
{"time": "2021-02-23 21:14:14.074486", "score": "0.8461", "loss": "5.457", "code": "Object next(){line=readLine();if(line=null);if(linelength() == 0)new String[0]; return line.split(\"+\"); }", "n_tokens": 52, "n_pass": [241, 25, 20]}
{"time": "2021-02-23 21:14:16.780315", "score": "0.6565", "loss": "3.3804", "code": "Object next(){line=readLine();if(line=null);if(line() == 0)new String[0]; return line.split(\"+\"); }", "n_tokens": 51, "n_pass": [242, 26, 21]}
{"time": "2021-02-23 21:14:19.480406", "score": "0.6565", "loss": "3.3804", "code": "Object next(){line=readLine();if(line=null);if(line()== 0)new String[0]; return line.split(\"+\"); }", "n_tokens": 50, "n_pass": [245, 27, 22]}
{"time": "2021-02-23 21:14:25.699291", "score": "0.4301", "loss": "3.1751", "code": "Object next(){line=readLine();if(line=null);if(line()== 0)new String[0]; return line(\"+\"); }", "n_tokens": 48, "n_pass": [255, 29, 23]}
{"time": "2021-02-23 21:14:32.374343", "score": "0.4289", "loss": "3.1755", "code": "Object next(){line=readLine();(line=null);if(line()== 0)new String[0]; return line(\"+\"); }", "n_tokens": 47, "n_pass": [272, 31, 24]}
{"time": "2021-02-23 21:14:35.042549", "score": "0.4008", "loss": "3.1452", "code": "Object next(){line=readLine();(linenull);if(line()== 0)new String[0]; return line(\"+\"); }", "n_tokens": 46, "n_pass": [275, 32, 25]}
{"time": "2021-02-23 21:14:37.734795", "score": "0.4235", "loss": "3.1964", "code": "Object next(){line=readLine();(line);if(line()== 0)new String[0]; return line(\"+\"); }", "n_tokens": 45, "n_pass": [276, 33, 26]}
{"time": "2021-02-23 21:14:53.272598", "score": "0.4235", "loss": "3.1964", "code": "Object next(){line=readLine();(line);if(line()==0)new String[0]; return line(\"+\"); }", "n_tokens": 44, "n_pass": [333, 37, 27]}
{"time": "2021-02-23 21:14:55.942621", "score": "0.4254", "loss": "3.0852", "code": "Object next(){line=readLine();(line);if(line()==0) String[0]; return line(\"+\"); }", "n_tokens": 43, "n_pass": [335, 38, 28]}
{"time": "2021-02-23 21:14:58.608578", "score": "0.4254", "loss": "3.0852", "code": "Object next(){line=readLine();(line);if(line()==0)String[0]; return line(\"+\"); }", "n_tokens": 42, "n_pass": [336, 39, 29]}
{"time": "2021-02-23 21:15:01.302072", "score": "0.4254", "loss": "3.0852", "code": "Object next(){line=readLine();(line);if(line()==0)String[0];return line(\"+\"); }", "n_tokens": 41, "n_pass": [342, 40, 30]}
{"time": "2021-02-23 21:15:12.079799", "score": "0.4835", "loss": "4.1085", "code": "Object next(){line=readLine();(line);if(line()==0)String[0];return line(\"\"); }", "n_tokens": 40, "n_pass": [348, 44, 31]}
{"time": "2021-02-23 21:15:14.775683", "score": "0.4835", "loss": "4.1085", "code": "Object next(){line=readLine();(line);if(line()==0)String[0];return line(\"\");}", "n_tokens": 39, "n_pass": [352, 45, 32]}
{"time": "2021-02-23 21:15:18.650631", "score": "0.8011", "loss": "3.9604", "code": "Object next(){linereadLine();(line);if(line()==0)String[0];return line(\"\");}", "n_tokens": 38, "n_pass": [361, 46, 33]}
{"time": "2021-02-23 21:15:21.332031", "score": "0.8538", "loss": "4.3464", "code": "Object next(){line();(line);if(line()==0)String[0];return line(\"\");}", "n_tokens": 37, "n_pass": [362, 47, 34]}
{"time": "2021-02-23 21:15:24.862652", "score": "0.435", "loss": "2.6227", "code": "Object next(){line();(line);if(line()==0)String[0]; line(\"\");}", "n_tokens": 36, "n_pass": [384, 48, 35]}
{"time": "2021-02-23 21:15:27.500252", "score": "0.435", "loss": "2.6227", "code": "Object next(){line();(line);if(line()==0)String[0];line(\"\");}", "n_tokens": 35, "n_pass": [385, 49, 36]}

Minimal simplified code:
Object next(){line();(line);if(line()==0)String[0];line("");}

