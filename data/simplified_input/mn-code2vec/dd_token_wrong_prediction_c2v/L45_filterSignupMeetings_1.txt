
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/sakaiproject__sakai/signup/tool/src/java/org/sakaiproject/signup/tool/jsf/signupFilter_filterSignupMeetings.java
method_name = filterSignupMeetings
method_body = public void filterSignupMeetings(List<SignupMeetingWrapper> sMeetingWrps) { if (VIEW_MY_SIGNED_UP.equals(filterChoice)) getMySignedUpOnes(sMeetingWrps); else if (VIEW_IMMEDIATE_AVAIL.equals(filterChoice)) getImmediateAvailOnes(sMeetingWrps); }
predict, score, loss = visit, 0.726631224155426, 19.532638549804688

Trace of simplified code(s):
{"time": "2021-02-24 11:42:58.985213", "score": "0.7266", "loss": "19.5326", "code": "public void filterSignupMeetings(List<SignupMeetingWrapper> sMeetingWrps) { if (VIEW_MY_SIGNED_UP.equals(filterChoice)) getMySignedUpOnes(sMeetingWrps); else if (VIEW_IMMEDIATE_AVAIL.equals(filterChoice)) getImmediateAvailOnes(sMeetingWrps); }", "n_tokens": 63, "n_pass": [1, 1, 1]}
{"time": "2021-02-24 11:43:01.774846", "score": "0.6223", "loss": "18.2325", "code": "public void filterSignupMeetings(List<SignupMeetingWrapper> sMeetingWrps) { if (VIEW_MY_) getMySignedUpOnes(sMeetingWrps); else if (VIEW_IMMEDIATE_AVAIL.equals(filterChoice)) getImmediateAvailOnes(sMeetingWrps); }", "n_tokens": 55, "n_pass": [23, 2, 2]}
{"time": "2021-02-24 11:43:04.534376", "score": "0.6096", "loss": "17.7608", "code": "public void filterSignupMeetings(List<SignupMeetingWrapper> sMeetingWrps) { if (VIEW_MY_sMeetingWrps); else if (VIEW_IMMEDIATE_AVAIL.equals(filterChoice)) getImmediateAvailOnes(sMeetingWrps); }", "n_tokens": 51, "n_pass": [44, 3, 3]}
{"time": "2021-02-24 11:43:07.322140", "score": "0.2938", "loss": "18.3584", "code": "public void filterSignupMeetings(List<SignupMeetingWrapper> sMeetingWrps) { if (VIEW_MY_sMeetingWrps); else if (VIEW_IMMEDIATE(filterChoice)) getImmediateAvailOnes(sMeetingWrps); }", "n_tokens": 47, "n_pass": [47, 4, 4]}
{"time": "2021-02-24 11:43:10.498343", "score": "0.2938", "loss": "18.3584", "code": "public void filterSignupMeetings(List<SignupMeetingWrapper> sMeetingWrps) { if (sMeetingWrps); else if (VIEW_IMMEDIATE(filterChoice)) getImmediateAvailOnes(sMeetingWrps); }", "n_tokens": 43, "n_pass": [56, 5, 5]}
{"time": "2021-02-24 11:43:14.118989", "score": "0.2583", "loss": "17.0001", "code": "public void filterSignupMeetings(List<SignupMeetingWrapper> sMeetingWrps) { if (sMeetingWrps); if (VIEW_IMMEDIATE(filterChoice)) getImmediateAvailOnes(sMeetingWrps); }", "n_tokens": 41, "n_pass": [92, 6, 6]}
{"time": "2021-02-24 11:43:22.311350", "score": "0.2583", "loss": "17.0001", "code": " void filterSignupMeetings(List<SignupMeetingWrapper> sMeetingWrps) { if (sMeetingWrps); if (VIEW_IMMEDIATE(filterChoice)) getImmediateAvailOnes(sMeetingWrps); }", "n_tokens": 40, "n_pass": [101, 9, 7]}
{"time": "2021-02-24 11:43:25.505242", "score": "0.3926", "loss": "16.4029", "code": " void filterSignupMeetings(List<SignupMeetingWrapper> sMeetingWrps) { (sMeetingWrps); if (VIEW_IMMEDIATE(filterChoice)) getImmediateAvailOnes(sMeetingWrps); }", "n_tokens": 38, "n_pass": [109, 10, 8]}
{"time": "2021-02-24 11:43:38.775202", "score": "0.3926", "loss": "16.4029", "code": " void filterSignupMeetings(List<SignupMeetingWrapper> sMeetingWrps) {(sMeetingWrps); if (VIEW_IMMEDIATE(filterChoice)) getImmediateAvailOnes(sMeetingWrps); }", "n_tokens": 37, "n_pass": [167, 13, 9]}
{"time": "2021-02-24 11:43:41.504886", "score": "0.3926", "loss": "16.4029", "code": " void filterSignupMeetings(List<SignupMeetingWrapper> sMeetingWrps) {(sMeetingWrps);if (VIEW_IMMEDIATE(filterChoice)) getImmediateAvailOnes(sMeetingWrps); }", "n_tokens": 36, "n_pass": [171, 14, 10]}
{"time": "2021-02-24 11:43:44.249545", "score": "0.3926", "loss": "16.4029", "code": " void filterSignupMeetings(List<SignupMeetingWrapper> sMeetingWrps) {(sMeetingWrps);if(VIEW_IMMEDIATE(filterChoice)) getImmediateAvailOnes(sMeetingWrps); }", "n_tokens": 35, "n_pass": [173, 15, 11]}
{"time": "2021-02-24 11:43:49.696935", "score": "0.3926", "loss": "16.4029", "code": " void filterSignupMeetings(List<SignupMeetingWrapper> sMeetingWrps) {(sMeetingWrps);if(VIEWIMMEDIATE(filterChoice)) getImmediateAvailOnes(sMeetingWrps); }", "n_tokens": 34, "n_pass": [176, 17, 12]}
{"time": "2021-02-24 11:43:55.161585", "score": "0.2875", "loss": "16.3424", "code": " void filterSignupMeetings(List<SignupMeetingWrapper> sMeetingWrps) {(sMeetingWrps);if(VIEWIMMEDIATE()) getImmediateAvailOnes(sMeetingWrps); }", "n_tokens": 33, "n_pass": [179, 19, 13]}
{"time": "2021-02-24 11:43:57.883140", "score": "0.2875", "loss": "16.3424", "code": " void filterSignupMeetings(List<SignupMeetingWrapper> sMeetingWrps) {(sMeetingWrps);if(VIEWIMMEDIATE())getImmediateAvailOnes(sMeetingWrps); }", "n_tokens": 32, "n_pass": [182, 20, 14]}
{"time": "2021-02-24 11:44:03.389791", "score": "0.4137", "loss": "15.9003", "code": " void filterSignupMeetings(List<SignupMeetingWrapper> sMeetingWrps) {(sMeetingWrps);if(VIEWIMMEDIATE())getImmediateAvailOnes(); }", "n_tokens": 31, "n_pass": [185, 22, 15]}
{"time": "2021-02-24 11:44:06.105763", "score": "0.4137", "loss": "15.9003", "code": " void filterSignupMeetings(List<SignupMeetingWrapper> sMeetingWrps) {(sMeetingWrps);if(VIEWIMMEDIATE())getImmediateAvailOnes();}", "n_tokens": 30, "n_pass": [188, 23, 16]}
{"time": "2021-02-24 11:44:08.820225", "score": "0.4137", "loss": "15.9003", "code": "void filterSignupMeetings(List<SignupMeetingWrapper> sMeetingWrps) {(sMeetingWrps);if(VIEWIMMEDIATE())getImmediateAvailOnes();}", "n_tokens": 29, "n_pass": [190, 24, 17]}
{"time": "2021-02-24 11:44:12.426133", "score": "0.4137", "loss": "15.9003", "code": "void filterSignupMeetings(List<SignupMeetingWrapper>sMeetingWrps) {(sMeetingWrps);if(VIEWIMMEDIATE())getImmediateAvailOnes();}", "n_tokens": 28, "n_pass": [199, 25, 18]}
{"time": "2021-02-24 11:44:15.170319", "score": "0.4137", "loss": "15.9003", "code": "void filterSignupMeetings(List<SignupMeetingWrapper>sMeetingWrps){(sMeetingWrps);if(VIEWIMMEDIATE())getImmediateAvailOnes();}", "n_tokens": 27, "n_pass": [202, 26, 19]}

Minimal simplified code:
void filterSignupMeetings(List<SignupMeetingWrapper>sMeetingWrps){(sMeetingWrps);if(VIEWIMMEDIATE())getImmediateAvailOnes();}

