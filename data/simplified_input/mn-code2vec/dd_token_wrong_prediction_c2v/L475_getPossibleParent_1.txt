
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/alphatica__genotick/src/main/java/com/alphatica/genotick/breeder/SimpleBreeder_getPossibleParent.java
method_name = getPossibleParent
method_body = private Robot getPossibleParent(Population population, List<RobotInfo> list) { double totalWeight = sumTotalWeight(list); double target = Math.abs(totalWeight * mutator.getNextDouble()); double weightSoFar = 0; Iterator<RobotInfo> iterator = list.iterator(); while (iterator.hasNext()) { RobotInfo robotInfo = iterator.next(); weightSoFar += Math.abs(robotInfo.getWeight()); if (weightSoFar >= target) { iterator.remove(); return population.getRobot(robotInfo.getName()); } } return null; }
predict, score, loss = select, 0.19085554778575897, 18.034378051757812

Trace of simplified code(s):
{"time": "2021-02-23 02:49:13.753502", "score": "0.3339", "loss": "17.7216", "code": "private Robot getPossibleParent(Population population, List<RobotInfo> list) { double totalWeight = sumTotalWeight(list); double target = Math.abs(totalWeight * mutator.getNextDouble()); double weightSoFar = 0; Iterator<RobotInfo> iterator = list.iterator(); while (iterator.hasNext()) { RobotInfo robotInfo = iterator.next(); weightSoFar += Math.abs(robotInfo.getWeight()); if (weightSoFar >= target) { iterator.remove(); return population.getRobot(robotInfo.getName()); } } return null; }", "n_tokens": 166, "n_pass": [1, 1, 1]}
{"time": "2021-02-23 02:49:50.551942", "score": "0.2199", "loss": "17.0929", "code": "private Robot getPossibleParent(Population population, List<RobotInfo> list) { double totalWeight = sumTotalWeight(list); target = Math.abs(totalWeight * mutator.getNextDouble()); double weightSoFar = 0; Iterator<RobotInfo> iterator = list.iterator(); while (iterator.hasNext()) { RobotInfo robotInfo = iterator.next(); weightSoFar += Math.abs(robotInfo.getWeight()); if (weightSoFar >= target) { iterator.remove(); return population.getRobot(robotInfo.getName()); } } return null; }", "n_tokens": 164, "n_pass": [204, 14, 2]}
{"time": "2021-02-23 02:49:58.799580", "score": "0.508", "loss": "17.8549", "code": "private Robot getPossibleParent(Population population, List<RobotInfo> list) { double totalWeight = sumTotalWeight(list); target = Math.abs(totalWeight * mutator.getNextDouble); double weightSoFar = 0; Iterator<RobotInfo> iterator = list.iterator(); while (iterator.hasNext()) { RobotInfo robotInfo = iterator.next(); weightSoFar += Math.abs(robotInfo.getWeight()); if (weightSoFar >= target) { iterator.remove(); return population.getRobot(robotInfo.getName()); } } return null; }", "n_tokens": 162, "n_pass": [213, 17, 3]}
{"time": "2021-02-23 02:50:01.527268", "score": "0.2343", "loss": "17.3246", "code": "private Robot getPossibleParent(Population population, List<RobotInfo> list) { double totalWeight = sumTotalWeight(list); target = Math.abs(totalWeight * mutator.getNextDouble); double weightSoFar0; Iterator<RobotInfo> iterator = list.iterator(); while (iterator.hasNext()) { RobotInfo robotInfo = iterator.next(); weightSoFar += Math.abs(robotInfo.getWeight()); if (weightSoFar >= target) { iterator.remove(); return population.getRobot(robotInfo.getName()); } } return null; }", "n_tokens": 159, "n_pass": [216, 18, 4]}
{"time": "2021-02-23 02:50:49.214239", "score": "0.2177", "loss": "17.2694", "code": "private Robot getPossibleParent(Population population, List<RobotInfo> list) { double totalWeight = sumTotalWeight(list); target = Math.abs(totalWeight * mutator.getNextDouble); double weightSoFar; Iterator<RobotInfo> iterator = list.iterator(); while (iterator.hasNext()) { RobotInfo robotInfo = iterator.next(); weightSoFar += Math.abs(robotInfo.getWeight()); if (weightSoFar >= target) { iterator.remove(); return population.getRobot(robotInfo.getName()); } } return null; }", "n_tokens": 158, "n_pass": [402, 30, 5]}
{"time": "2021-02-23 02:50:58.197115", "score": "0.2187", "loss": "17.434", "code": "private Robot getPossibleParent(Population population, List<RobotInfo> list) { double totalWeight = sumTotalWeight(list); target = Math.abs(totalWeight * mutator.getNextDouble); double weightSoFar; Iterator<RobotInfo> iterator= list.iterator(); while (iterator.hasNext()) { RobotInfo robotInfo = iterator.next(); weightSoFar += Math.abs(robotInfo.getWeight()); if (weightSoFar >= target) { iterator.remove(); return population.getRobot(robotInfo.getName()); } } return null; }", "n_tokens": 157, "n_pass": [411, 33, 6]}
{"time": "2021-02-23 02:51:03.705441", "score": "0.3682", "loss": "17.5642", "code": "private Robot getPossibleParent(Population population, List<RobotInfo> list) { double totalWeight = sumTotalWeight(list); target = Math.abs(totalWeight * mutator.getNextDouble); double weightSoFar; Iterator<RobotInfo> iterator= listiterator(); while (iterator.hasNext()) { RobotInfo robotInfo = iterator.next(); weightSoFar += Math.abs(robotInfo.getWeight()); if (weightSoFar >= target) { iterator.remove(); return population.getRobot(robotInfo.getName()); } } return null; }", "n_tokens": 156, "n_pass": [415, 35, 7]}
{"time": "2021-02-23 02:51:20.200456", "score": "0.3144", "loss": "17.3313", "code": "private Robot getPossibleParent(Population population, List<RobotInfo> list) { double totalWeight = sumTotalWeight(list); target = Math.abs(totalWeight * mutator.getNextDouble); double weightSoFar; Iterator<RobotInfo> iterator= listiterator(); while (iterator.hasNext()) {RobotInfo robotInfo = iterator.next(); weightSoFar += Math.abs(robotInfo.getWeight()); if (weightSoFar >= target) { iterator.remove(); return population.getRobot(robotInfo.getName()); } } return null; }", "n_tokens": 155, "n_pass": [432, 41, 8]}
{"time": "2021-02-23 02:51:34.557185", "score": "0.2343", "loss": "17.5877", "code": "private Robot getPossibleParent(Population population, List<RobotInfo> list) { double totalWeight = sumTotalWeight(list); target = Math.abs(totalWeight * mutator.getNextDouble); double weightSoFar; Iterator<RobotInfo> iterator= listiterator(); while (iterator.hasNext()) {RobotInfo robotInfo = iterator.next(); weightSoFar += abs(robotInfo.getWeight()); if (weightSoFar >= target) { iterator.remove(); return population.getRobot(robotInfo.getName()); } } return null; }", "n_tokens": 153, "n_pass": [442, 46, 9]}
{"time": "2021-02-23 02:51:51.083785", "score": "0.3928", "loss": "17.6085", "code": "private Robot getPossibleParent(Population population, List<RobotInfo> list) { double totalWeight = sumTotalWeight(list); target = Math.abs(totalWeight * mutator.getNextDouble); double weightSoFar; Iterator<RobotInfo> iterator= listiterator(); while (iterator.hasNext()) {RobotInfo robotInfo = iterator.next(); weightSoFar += abs(robotInfo.getWeight()); if (weightSoFar >= target) { iterator.remove(); population.getRobot(robotInfo.getName()); } } return null; }", "n_tokens": 151, "n_pass": [458, 52, 10]}
{"time": "2021-02-23 02:51:53.848081", "score": "0.5405", "loss": "18.1926", "code": "private Robot getPossibleParent(Population population, List<RobotInfo> list) { double totalWeight = sumTotalWeight(list); target = Math.abs(totalWeight * mutator.getNextDouble); double weightSoFar; Iterator<RobotInfo> iterator= listiterator(); while (iterator.hasNext()) {RobotInfo robotInfo = iterator.next(); weightSoFar += abs(robotInfo.getWeight()); if (weightSoFar >= target) { iterator.remove(); getRobot(robotInfo.getName()); } } return null; }", "n_tokens": 149, "n_pass": [459, 53, 11]}
{"time": "2021-02-23 02:51:56.611952", "score": "0.4046", "loss": "17.6105", "code": "private Robot getPossibleParent(Population population, List<RobotInfo> list) { double totalWeight = sumTotalWeight(list); target = Math.abs(totalWeight * mutator.getNextDouble); double weightSoFar; Iterator<RobotInfo> iterator= listiterator(); while (iterator.hasNext()) {RobotInfo robotInfo = iterator.next(); weightSoFar += abs(robotInfo.getWeight()); if (weightSoFar >= target) { iterator.remove(); getRobot(getName()); } } return null; }", "n_tokens": 147, "n_pass": [461, 54, 12]}
{"time": "2021-02-23 02:51:59.379021", "score": "0.5258", "loss": "18.133", "code": "private Robot getPossibleParent(Population population, List<RobotInfo> list) { double totalWeight = sumTotalWeight(list); target = Math.abs(totalWeight * mutator.getNextDouble); double weightSoFar; Iterator<RobotInfo> iterator= listiterator(); while (iterator.hasNext()) {RobotInfo robotInfo = iterator.next(); weightSoFar += abs(robotInfo.getWeight()); if (weightSoFar >= target) { iterator.remove(); getRobot(getName()); } } null; }", "n_tokens": 145, "n_pass": [467, 55, 13]}
{"time": "2021-02-23 02:52:02.105457", "score": "0.5262", "loss": "18.423", "code": "private Robot getPossibleParent(Population population, List<RobotInfo> list) { double totalWeight = sumTotalWeight(list); target = Math.abs(totalWeight * mutator.getNextDouble); double weightSoFar; Iterator<RobotInfo> iterator= listiterator(); while (iterator.hasNext()) {RobotInfo robotInfo = iterator.next(); weightSoFar += abs(robotInfo.getWeight()); if (weightSoFar >= target) { iterator.remove(); getRobot(getName()); } }  }", "n_tokens": 143, "n_pass": [468, 56, 14]}
{"time": "2021-02-23 02:52:04.861062", "score": "0.493", "loss": "18.0697", "code": " Robot getPossibleParent(Population population, List<RobotInfo> list) { double totalWeight = sumTotalWeight(list); target = Math.abs(totalWeight * mutator.getNextDouble); double weightSoFar; Iterator<RobotInfo> iterator= listiterator(); while (iterator.hasNext()) {RobotInfo robotInfo = iterator.next(); weightSoFar += abs(robotInfo.getWeight()); if (weightSoFar >= target) { iterator.remove(); getRobot(getName()); } }  }", "n_tokens": 142, "n_pass": [470, 57, 15]}
{"time": "2021-02-23 02:52:07.622038", "score": "0.4279", "loss": "17.3718", "code": "Robot getPossibleParent(Population population, List<RobotInfo> list) { double totalWeight = sumTotalWeight(list); target = Math.abs(totalWeight * mutator.getNextDouble); double weightSoFar; Iterator<RobotInfo> iterator= listiterator(); while (iterator.hasNext()) {RobotInfo robotInfo = iterator.next(); weightSoFar += abs(robotInfo.getWeight()); if (weightSoFar >= target) { iterator.remove(); getRobot(getName()); } }  }", "n_tokens": 141, "n_pass": [471, 58, 16]}
{"time": "2021-02-23 02:52:11.651197", "score": "0.5119", "loss": "18.3036", "code": "Robot getPossibleParent(Population population,List<RobotInfo> list) { double totalWeight = sumTotalWeight(list); target = Math.abs(totalWeight * mutator.getNextDouble); double weightSoFar; Iterator<RobotInfo> iterator= listiterator(); while (iterator.hasNext()) {RobotInfo robotInfo = iterator.next(); weightSoFar += abs(robotInfo.getWeight()); if (weightSoFar >= target) { iterator.remove(); getRobot(getName()); } }  }", "n_tokens": 140, "n_pass": [480, 59, 17]}
{"time": "2021-02-23 02:52:14.415771", "score": "0.5077", "loss": "17.8671", "code": "Robot getPossibleParent(Population population,List<RobotInfo>list) { double totalWeight = sumTotalWeight(list); target = Math.abs(totalWeight * mutator.getNextDouble); double weightSoFar; Iterator<RobotInfo> iterator= listiterator(); while (iterator.hasNext()) {RobotInfo robotInfo = iterator.next(); weightSoFar += abs(robotInfo.getWeight()); if (weightSoFar >= target) { iterator.remove(); getRobot(getName()); } }  }", "n_tokens": 139, "n_pass": [485, 60, 18]}
{"time": "2021-02-23 02:52:17.163595", "score": "0.525", "loss": "17.9413", "code": "Robot getPossibleParent(Population population,List<RobotInfo>list){ double totalWeight = sumTotalWeight(list); target = Math.abs(totalWeight * mutator.getNextDouble); double weightSoFar; Iterator<RobotInfo> iterator= listiterator(); while (iterator.hasNext()) {RobotInfo robotInfo = iterator.next(); weightSoFar += abs(robotInfo.getWeight()); if (weightSoFar >= target) { iterator.remove(); getRobot(getName()); } }  }", "n_tokens": 138, "n_pass": [488, 61, 19]}
{"time": "2021-02-23 02:52:19.891097", "score": "0.4482", "loss": "18.1463", "code": "Robot getPossibleParent(Population population,List<RobotInfo>list){double totalWeight = sumTotalWeight(list); target = Math.abs(totalWeight * mutator.getNextDouble); double weightSoFar; Iterator<RobotInfo> iterator= listiterator(); while (iterator.hasNext()) {RobotInfo robotInfo = iterator.next(); weightSoFar += abs(robotInfo.getWeight()); if (weightSoFar >= target) { iterator.remove(); getRobot(getName()); } }  }", "n_tokens": 137, "n_pass": [490, 62, 20]}
{"time": "2021-02-23 02:52:22.648066", "score": "0.5821", "loss": "18.4392", "code": "Robot getPossibleParent(Population population,List<RobotInfo>list){ totalWeight = sumTotalWeight(list); target = Math.abs(totalWeight * mutator.getNextDouble); double weightSoFar; Iterator<RobotInfo> iterator= listiterator(); while (iterator.hasNext()) {RobotInfo robotInfo = iterator.next(); weightSoFar += abs(robotInfo.getWeight()); if (weightSoFar >= target) { iterator.remove(); getRobot(getName()); } }  }", "n_tokens": 136, "n_pass": [491, 63, 21]}
{"time": "2021-02-23 02:52:25.497621", "score": "0.5738", "loss": "18.2853", "code": "Robot getPossibleParent(Population population,List<RobotInfo>list){totalWeight = sumTotalWeight(list); target = Math.abs(totalWeight * mutator.getNextDouble); double weightSoFar; Iterator<RobotInfo> iterator= listiterator(); while (iterator.hasNext()) {RobotInfo robotInfo = iterator.next(); weightSoFar += abs(robotInfo.getWeight()); if (weightSoFar >= target) { iterator.remove(); getRobot(getName()); } }  }", "n_tokens": 135, "n_pass": [492, 64, 22]}
{"time": "2021-02-23 02:52:28.226081", "score": "0.534", "loss": "18.1947", "code": "Robot getPossibleParent(Population population,List<RobotInfo>list){totalWeight= sumTotalWeight(list); target = Math.abs(totalWeight * mutator.getNextDouble); double weightSoFar; Iterator<RobotInfo> iterator= listiterator(); while (iterator.hasNext()) {RobotInfo robotInfo = iterator.next(); weightSoFar += abs(robotInfo.getWeight()); if (weightSoFar >= target) { iterator.remove(); getRobot(getName()); } }  }", "n_tokens": 134, "n_pass": [494, 65, 23]}
{"time": "2021-02-23 02:52:30.980318", "score": "0.549", "loss": "18.25", "code": "Robot getPossibleParent(Population population,List<RobotInfo>list){totalWeight=sumTotalWeight(list); target = Math.abs(totalWeight * mutator.getNextDouble); double weightSoFar; Iterator<RobotInfo> iterator= listiterator(); while (iterator.hasNext()) {RobotInfo robotInfo = iterator.next(); weightSoFar += abs(robotInfo.getWeight()); if (weightSoFar >= target) { iterator.remove(); getRobot(getName()); } }  }", "n_tokens": 133, "n_pass": [496, 66, 24]}
{"time": "2021-02-23 02:52:33.700605", "score": "0.4881", "loss": "18.1016", "code": "Robot getPossibleParent(Population population,List<RobotInfo>list){totalWeight=(list); target = Math.abs(totalWeight * mutator.getNextDouble); double weightSoFar; Iterator<RobotInfo> iterator= listiterator(); while (iterator.hasNext()) {RobotInfo robotInfo = iterator.next(); weightSoFar += abs(robotInfo.getWeight()); if (weightSoFar >= target) { iterator.remove(); getRobot(getName()); } }  }", "n_tokens": 132, "n_pass": [497, 67, 25]}
{"time": "2021-02-23 02:52:36.931151", "score": "0.4602", "loss": "18.0816", "code": "Robot getPossibleParent(Population population,List<RobotInfo>list){totalWeight=(list);target = Math.abs(totalWeight * mutator.getNextDouble); double weightSoFar; Iterator<RobotInfo> iterator= listiterator(); while (iterator.hasNext()) {RobotInfo robotInfo = iterator.next(); weightSoFar += abs(robotInfo.getWeight()); if (weightSoFar >= target) { iterator.remove(); getRobot(getName()); } }  }", "n_tokens": 131, "n_pass": [502, 68, 26]}
{"time": "2021-02-23 02:52:39.658917", "score": "0.5285", "loss": "18.3935", "code": "Robot getPossibleParent(Population population,List<RobotInfo>list){totalWeight=(list);target= Math.abs(totalWeight * mutator.getNextDouble); double weightSoFar; Iterator<RobotInfo> iterator= listiterator(); while (iterator.hasNext()) {RobotInfo robotInfo = iterator.next(); weightSoFar += abs(robotInfo.getWeight()); if (weightSoFar >= target) { iterator.remove(); getRobot(getName()); } }  }", "n_tokens": 130, "n_pass": [504, 69, 27]}
{"time": "2021-02-23 02:52:42.390396", "score": "0.4724", "loss": "18.2752", "code": "Robot getPossibleParent(Population population,List<RobotInfo>list){totalWeight=(list);target=Math.abs(totalWeight * mutator.getNextDouble); double weightSoFar; Iterator<RobotInfo> iterator= listiterator(); while (iterator.hasNext()) {RobotInfo robotInfo = iterator.next(); weightSoFar += abs(robotInfo.getWeight()); if (weightSoFar >= target) { iterator.remove(); getRobot(getName()); } }  }", "n_tokens": 129, "n_pass": [506, 70, 28]}
{"time": "2021-02-23 02:52:45.120010", "score": "0.5512", "loss": "18.302", "code": "Robot getPossibleParent(Population population,List<RobotInfo>list){totalWeight=(list);target=Mathabs(totalWeight * mutator.getNextDouble); double weightSoFar; Iterator<RobotInfo> iterator= listiterator(); while (iterator.hasNext()) {RobotInfo robotInfo = iterator.next(); weightSoFar += abs(robotInfo.getWeight()); if (weightSoFar >= target) { iterator.remove(); getRobot(getName()); } }  }", "n_tokens": 128, "n_pass": [508, 71, 29]}
{"time": "2021-02-23 02:52:47.872490", "score": "0.5256", "loss": "18.2247", "code": "Robot getPossibleParent(Population population,List<RobotInfo>list){totalWeight=(list);target=Math(totalWeight * mutator.getNextDouble); double weightSoFar; Iterator<RobotInfo> iterator= listiterator(); while (iterator.hasNext()) {RobotInfo robotInfo = iterator.next(); weightSoFar += abs(robotInfo.getWeight()); if (weightSoFar >= target) { iterator.remove(); getRobot(getName()); } }  }", "n_tokens": 127, "n_pass": [509, 72, 30]}
{"time": "2021-02-23 02:52:50.626365", "score": "0.6617", "loss": "18.3154", "code": "Robot getPossibleParent(Population population,List<RobotInfo>list){totalWeight=(list);target=Math(totalWeight* mutator.getNextDouble); double weightSoFar; Iterator<RobotInfo> iterator= listiterator(); while (iterator.hasNext()) {RobotInfo robotInfo = iterator.next(); weightSoFar += abs(robotInfo.getWeight()); if (weightSoFar >= target) { iterator.remove(); getRobot(getName()); } }  }", "n_tokens": 126, "n_pass": [512, 73, 31]}
{"time": "2021-02-23 02:52:53.369632", "score": "0.6031", "loss": "18.3098", "code": "Robot getPossibleParent(Population population,List<RobotInfo>list){totalWeight=(list);target=Math(totalWeight*mutator.getNextDouble); double weightSoFar; Iterator<RobotInfo> iterator= listiterator(); while (iterator.hasNext()) {RobotInfo robotInfo = iterator.next(); weightSoFar += abs(robotInfo.getWeight()); if (weightSoFar >= target) { iterator.remove(); getRobot(getName()); } }  }", "n_tokens": 125, "n_pass": [514, 74, 32]}
{"time": "2021-02-23 02:52:56.117537", "score": "0.6073", "loss": "18.428", "code": "Robot getPossibleParent(Population population,List<RobotInfo>list){totalWeight=(list);target=Math(totalWeight*mutatorgetNextDouble); double weightSoFar; Iterator<RobotInfo> iterator= listiterator(); while (iterator.hasNext()) {RobotInfo robotInfo = iterator.next(); weightSoFar += abs(robotInfo.getWeight()); if (weightSoFar >= target) { iterator.remove(); getRobot(getName()); } }  }", "n_tokens": 124, "n_pass": [516, 75, 33]}
{"time": "2021-02-23 02:52:58.852514", "score": "0.6269", "loss": "18.4549", "code": "Robot getPossibleParent(Population population,List<RobotInfo>list){totalWeight=(list);target=Math(totalWeight*mutator); double weightSoFar; Iterator<RobotInfo> iterator= listiterator(); while (iterator.hasNext()) {RobotInfo robotInfo = iterator.next(); weightSoFar += abs(robotInfo.getWeight()); if (weightSoFar >= target) { iterator.remove(); getRobot(getName()); } }  }", "n_tokens": 123, "n_pass": [517, 76, 34]}
{"time": "2021-02-23 02:53:01.611358", "score": "0.6063", "loss": "18.3623", "code": "Robot getPossibleParent(Population population,List<RobotInfo>list){totalWeight=(list);target=Math(totalWeight*mutator);double weightSoFar; Iterator<RobotInfo> iterator= listiterator(); while (iterator.hasNext()) {RobotInfo robotInfo = iterator.next(); weightSoFar += abs(robotInfo.getWeight()); if (weightSoFar >= target) { iterator.remove(); getRobot(getName()); } }  }", "n_tokens": 122, "n_pass": [520, 77, 35]}
{"time": "2021-02-23 02:53:04.356926", "score": "0.5751", "loss": "17.3752", "code": "Robot getPossibleParent(Population population,List<RobotInfo>list){totalWeight=(list);target=Math(totalWeight*mutator); weightSoFar; Iterator<RobotInfo> iterator= listiterator(); while (iterator.hasNext()) {RobotInfo robotInfo = iterator.next(); weightSoFar += abs(robotInfo.getWeight()); if (weightSoFar >= target) { iterator.remove(); getRobot(getName()); } }  }", "n_tokens": 121, "n_pass": [521, 78, 36]}
{"time": "2021-02-23 02:53:07.113487", "score": "0.5751", "loss": "17.3752", "code": "Robot getPossibleParent(Population population,List<RobotInfo>list){totalWeight=(list);target=Math(totalWeight*mutator);weightSoFar; Iterator<RobotInfo> iterator= listiterator(); while (iterator.hasNext()) {RobotInfo robotInfo = iterator.next(); weightSoFar += abs(robotInfo.getWeight()); if (weightSoFar >= target) { iterator.remove(); getRobot(getName()); } }  }", "n_tokens": 120, "n_pass": [522, 79, 37]}
{"time": "2021-02-23 02:53:09.829625", "score": "0.5899", "loss": "17.7286", "code": "Robot getPossibleParent(Population population,List<RobotInfo>list){totalWeight=(list);target=Math(totalWeight*mutator);; Iterator<RobotInfo> iterator= listiterator(); while (iterator.hasNext()) {RobotInfo robotInfo = iterator.next(); weightSoFar += abs(robotInfo.getWeight()); if (weightSoFar >= target) { iterator.remove(); getRobot(getName()); } }  }", "n_tokens": 119, "n_pass": [523, 80, 38]}
{"time": "2021-02-23 02:53:12.554726", "score": "0.635", "loss": "17.271", "code": "Robot getPossibleParent(Population population,List<RobotInfo>list){totalWeight=(list);target=Math(totalWeight*mutator); Iterator<RobotInfo> iterator= listiterator(); while (iterator.hasNext()) {RobotInfo robotInfo = iterator.next(); weightSoFar += abs(robotInfo.getWeight()); if (weightSoFar >= target) { iterator.remove(); getRobot(getName()); } }  }", "n_tokens": 118, "n_pass": [524, 81, 39]}
{"time": "2021-02-23 02:53:15.293555", "score": "0.635", "loss": "17.271", "code": "Robot getPossibleParent(Population population,List<RobotInfo>list){totalWeight=(list);target=Math(totalWeight*mutator);Iterator<RobotInfo> iterator= listiterator(); while (iterator.hasNext()) {RobotInfo robotInfo = iterator.next(); weightSoFar += abs(robotInfo.getWeight()); if (weightSoFar >= target) { iterator.remove(); getRobot(getName()); } }  }", "n_tokens": 117, "n_pass": [525, 82, 40]}
{"time": "2021-02-23 02:53:18.427327", "score": "0.635", "loss": "17.271", "code": "Robot getPossibleParent(Population population,List<RobotInfo>list){totalWeight=(list);target=Math(totalWeight*mutator);Iterator<RobotInfo>iterator= listiterator(); while (iterator.hasNext()) {RobotInfo robotInfo = iterator.next(); weightSoFar += abs(robotInfo.getWeight()); if (weightSoFar >= target) { iterator.remove(); getRobot(getName()); } }  }", "n_tokens": 116, "n_pass": [530, 83, 41]}
{"time": "2021-02-23 02:53:21.598027", "score": "0.635", "loss": "17.271", "code": "Robot getPossibleParent(Population population,List<RobotInfo>list){totalWeight=(list);target=Math(totalWeight*mutator);Iterator<RobotInfo>iterator=listiterator(); while (iterator.hasNext()) {RobotInfo robotInfo = iterator.next(); weightSoFar += abs(robotInfo.getWeight()); if (weightSoFar >= target) { iterator.remove(); getRobot(getName()); } }  }", "n_tokens": 115, "n_pass": [533, 84, 42]}
{"time": "2021-02-23 02:53:24.337742", "score": "0.6556", "loss": "17.0637", "code": "Robot getPossibleParent(Population population,List<RobotInfo>list){totalWeight=(list);target=Math(totalWeight*mutator);Iterator<RobotInfo>iterator=iterator(); while (iterator.hasNext()) {RobotInfo robotInfo = iterator.next(); weightSoFar += abs(robotInfo.getWeight()); if (weightSoFar >= target) { iterator.remove(); getRobot(getName()); } }  }", "n_tokens": 114, "n_pass": [534, 85, 43]}
{"time": "2021-02-23 02:53:27.079578", "score": "0.6556", "loss": "17.0637", "code": "Robot getPossibleParent(Population population,List<RobotInfo>list){totalWeight=(list);target=Math(totalWeight*mutator);Iterator<RobotInfo>iterator=iterator();while (iterator.hasNext()) {RobotInfo robotInfo = iterator.next(); weightSoFar += abs(robotInfo.getWeight()); if (weightSoFar >= target) { iterator.remove(); getRobot(getName()); } }  }", "n_tokens": 113, "n_pass": [539, 86, 44]}
{"time": "2021-02-23 02:53:29.816423", "score": "0.6556", "loss": "17.0637", "code": "Robot getPossibleParent(Population population,List<RobotInfo>list){totalWeight=(list);target=Math(totalWeight*mutator);Iterator<RobotInfo>iterator=iterator();while(iterator.hasNext()) {RobotInfo robotInfo = iterator.next(); weightSoFar += abs(robotInfo.getWeight()); if (weightSoFar >= target) { iterator.remove(); getRobot(getName()); } }  }", "n_tokens": 112, "n_pass": [541, 87, 45]}
{"time": "2021-02-23 02:53:32.531372", "score": "0.7198", "loss": "17.7068", "code": "Robot getPossibleParent(Population population,List<RobotInfo>list){totalWeight=(list);target=Math(totalWeight*mutator);Iterator<RobotInfo>iterator=iterator();while(iteratorhasNext()) {RobotInfo robotInfo = iterator.next(); weightSoFar += abs(robotInfo.getWeight()); if (weightSoFar >= target) { iterator.remove(); getRobot(getName()); } }  }", "n_tokens": 111, "n_pass": [544, 88, 46]}
{"time": "2021-02-23 02:53:35.276545", "score": "0.7385", "loss": "17.8431", "code": "Robot getPossibleParent(Population population,List<RobotInfo>list){totalWeight=(list);target=Math(totalWeight*mutator);Iterator<RobotInfo>iterator=iterator();while(iterator()) {RobotInfo robotInfo = iterator.next(); weightSoFar += abs(robotInfo.getWeight()); if (weightSoFar >= target) { iterator.remove(); getRobot(getName()); } }  }", "n_tokens": 110, "n_pass": [545, 89, 47]}
{"time": "2021-02-23 02:53:38.003480", "score": "0.7385", "loss": "17.8431", "code": "Robot getPossibleParent(Population population,List<RobotInfo>list){totalWeight=(list);target=Math(totalWeight*mutator);Iterator<RobotInfo>iterator=iterator();while(iterator()){RobotInfo robotInfo = iterator.next(); weightSoFar += abs(robotInfo.getWeight()); if (weightSoFar >= target) { iterator.remove(); getRobot(getName()); } }  }", "n_tokens": 109, "n_pass": [549, 90, 48]}
{"time": "2021-02-23 02:53:40.742820", "score": "0.7121", "loss": "18.0101", "code": "Robot getPossibleParent(Population population,List<RobotInfo>list){totalWeight=(list);target=Math(totalWeight*mutator);Iterator<RobotInfo>iterator=iterator();while(iterator()){robotInfo = iterator.next(); weightSoFar += abs(robotInfo.getWeight()); if (weightSoFar >= target) { iterator.remove(); getRobot(getName()); } }  }", "n_tokens": 107, "n_pass": [551, 91, 49]}
{"time": "2021-02-23 02:53:43.456324", "score": "0.7117", "loss": "17.7418", "code": "Robot getPossibleParent(Population population,List<RobotInfo>list){totalWeight=(list);target=Math(totalWeight*mutator);Iterator<RobotInfo>iterator=iterator();while(iterator()){robotInfo = next(); weightSoFar += abs(robotInfo.getWeight()); if (weightSoFar >= target) { iterator.remove(); getRobot(getName()); } }  }", "n_tokens": 105, "n_pass": [554, 92, 50]}
{"time": "2021-02-23 02:53:46.571716", "score": "0.8719", "loss": "18.5116", "code": "Robot getPossibleParent(Population population,List<RobotInfo>list){totalWeight=(list);target=Math(totalWeight*mutator);Iterator<RobotInfo>iterator=iterator();while(iterator()){robotInfo = next(); weightSoFar= abs(robotInfo.getWeight()); if (weightSoFar >= target) { iterator.remove(); getRobot(getName()); } }  }", "n_tokens": 103, "n_pass": [558, 93, 51]}
{"time": "2021-02-23 02:53:49.303316", "score": "0.8943", "loss": "19.1423", "code": "Robot getPossibleParent(Population population,List<RobotInfo>list){totalWeight=(list);target=Math(totalWeight*mutator);Iterator<RobotInfo>iterator=iterator();while(iterator()){robotInfo = next(); weightSoFarabs(robotInfo.getWeight()); if (weightSoFar >= target) { iterator.remove(); getRobot(getName()); } }  }", "n_tokens": 101, "n_pass": [559, 94, 52]}
{"time": "2021-02-23 02:53:52.032240", "score": "0.8911", "loss": "19.1128", "code": "Robot getPossibleParent(Population population,List<RobotInfo>list){totalWeight=(list);target=Math(totalWeight*mutator);Iterator<RobotInfo>iterator=iterator();while(iterator()){robotInfo = next(); weightSoFarabs(getWeight()); if (weightSoFar >= target) { iterator.remove(); getRobot(getName()); } }  }", "n_tokens": 99, "n_pass": [561, 95, 53]}
{"time": "2021-02-23 02:53:54.749504", "score": "0.4011", "loss": "18.864", "code": "Robot getPossibleParent(Population population,List<RobotInfo>list){totalWeight=(list);target=Math(totalWeight*mutator);Iterator<RobotInfo>iterator=iterator();while(iterator()){robotInfo = next(); weightSoFarabs(getWeight()); if (weightSoFar= target) { iterator.remove(); getRobot(getName()); } }  }", "n_tokens": 97, "n_pass": [567, 96, 54]}
{"time": "2021-02-23 02:53:57.470638", "score": "0.7887", "loss": "18.2227", "code": "Robot getPossibleParent(Population population,List<RobotInfo>list){totalWeight=(list);target=Math(totalWeight*mutator);Iterator<RobotInfo>iterator=iterator();while(iterator()){robotInfo = next(); weightSoFarabs(getWeight()); if (weightSoFartarget) { iterator.remove(); getRobot(getName()); } }  }", "n_tokens": 95, "n_pass": [568, 97, 55]}
{"time": "2021-02-23 02:54:00.194330", "score": "0.8226", "loss": "18.4445", "code": "Robot getPossibleParent(Population population,List<RobotInfo>list){totalWeight=(list);target=Math(totalWeight*mutator);Iterator<RobotInfo>iterator=iterator();while(iterator()){robotInfo = next(); weightSoFarabs(getWeight()); if (weightSoFartarget) { iterator(); getRobot(getName()); } }  }", "n_tokens": 93, "n_pass": [572, 98, 56]}
{"time": "2021-02-23 02:54:02.927730", "score": "0.8376", "loss": "18.5699", "code": "Robot getPossibleParent(Population population,List<RobotInfo>list){totalWeight=(list);target=Math(totalWeight*mutator);Iterator<RobotInfo>iterator=iterator();while(iterator()){robotInfo = next(); weightSoFarabs(getWeight()); if (weightSoFartarget) { iterator; getRobot(getName()); } }  }", "n_tokens": 91, "n_pass": [573, 99, 57]}
{"time": "2021-02-23 02:54:05.766497", "score": "0.8807", "loss": "18.7238", "code": "Robot getPossibleParent(Population population,List<RobotInfo>list){totalWeight=(list);target=Math(totalWeight*mutator);Iterator<RobotInfo>iterator=iterator();while(iterator()){robotInfo = next(); weightSoFarabs(getWeight()); if (weightSoFartarget) { iteratorgetRobot(getName()); } }  }", "n_tokens": 89, "n_pass": [574, 100, 58]}
{"time": "2021-02-23 02:54:09.915540", "score": "0.7144", "loss": "17.2208", "code": "Robot getPossibleParent(Population population,List<RobotInfo>list){totalWeight(list);target=Math(totalWeight*mutator);Iterator<RobotInfo>iterator=iterator();while(iterator()){robotInfo = next(); weightSoFarabs(getWeight()); if (weightSoFartarget) { iteratorgetRobot(getName()); } }  }", "n_tokens": 88, "n_pass": [598, 101, 59]}
{"time": "2021-02-23 02:54:12.652181", "score": "0.8322", "loss": "18.4128", "code": "Robot getPossibleParent(Population population,List<RobotInfo>list){totalWeight();target=Math(totalWeight*mutator);Iterator<RobotInfo>iterator=iterator();while(iterator()){robotInfo = next(); weightSoFarabs(getWeight()); if (weightSoFartarget) { iteratorgetRobot(getName()); } }  }", "n_tokens": 87, "n_pass": [600, 102, 60]}
{"time": "2021-02-23 02:54:15.365482", "score": "0.6224", "loss": "18.4295", "code": "Robot getPossibleParent(Population population,List<RobotInfo>list){totalWeight();targetMath(totalWeight*mutator);Iterator<RobotInfo>iterator=iterator();while(iterator()){robotInfo = next(); weightSoFarabs(getWeight()); if (weightSoFartarget) { iteratorgetRobot(getName()); } }  }", "n_tokens": 86, "n_pass": [604, 103, 61]}
{"time": "2021-02-23 02:54:18.093488", "score": "0.6943", "loss": "18.3823", "code": "Robot getPossibleParent(Population population,List<RobotInfo>list){totalWeight();target(totalWeight*mutator);Iterator<RobotInfo>iterator=iterator();while(iterator()){robotInfo = next(); weightSoFarabs(getWeight()); if (weightSoFartarget) { iteratorgetRobot(getName()); } }  }", "n_tokens": 85, "n_pass": [605, 104, 62]}
{"time": "2021-02-23 02:54:20.842787", "score": "0.6817", "loss": "19.3036", "code": "Robot getPossibleParent(Population population,List<RobotInfo>list){totalWeight();target(totalWeightmutator);Iterator<RobotInfo>iterator=iterator();while(iterator()){robotInfo = next(); weightSoFarabs(getWeight()); if (weightSoFartarget) { iteratorgetRobot(getName()); } }  }", "n_tokens": 84, "n_pass": [608, 105, 63]}
{"time": "2021-02-23 02:54:23.546287", "score": "0.7188", "loss": "19.6431", "code": "Robot getPossibleParent(Population population,List<RobotInfo>list){totalWeight();target(totalWeight);Iterator<RobotInfo>iterator=iterator();while(iterator()){robotInfo = next(); weightSoFarabs(getWeight()); if (weightSoFartarget) { iteratorgetRobot(getName()); } }  }", "n_tokens": 83, "n_pass": [609, 106, 64]}
{"time": "2021-02-23 02:54:30.717755", "score": "0.6356", "loss": "19.4683", "code": "Robot getPossibleParent(Population population,List<RobotInfo>list){totalWeight();target(totalWeight);Iterator<RobotInfo>iterator=iterator();while(iterator()){robotInfo = next(); weightSoFarabs(getWeight()); if (weightSoFartarget) {getRobot(getName()); } }  }", "n_tokens": 81, "n_pass": [642, 108, 65]}
{"time": "2021-02-23 02:54:34.743242", "score": "0.5568", "loss": "19.274", "code": "Robot getPossibleParent(Population population,List<RobotInfo>list){totalWeight();(totalWeight);Iterator<RobotInfo>iterator=iterator();while(iterator()){robotInfo = next(); weightSoFarabs(getWeight()); if (weightSoFartarget) {getRobot(getName()); } }  }", "n_tokens": 80, "n_pass": [669, 109, 66]}
{"time": "2021-02-23 02:54:48.765821", "score": "0.5568", "loss": "19.274", "code": "Robot getPossibleParent(Population population,List<RobotInfo>list){totalWeight();(totalWeight);Iterator<RobotInfo>iterator=iterator();while(iterator()){robotInfo= next(); weightSoFarabs(getWeight()); if (weightSoFartarget) {getRobot(getName()); } }  }", "n_tokens": 79, "n_pass": [771, 111, 67]}
{"time": "2021-02-23 02:54:51.495156", "score": "0.5568", "loss": "19.274", "code": "Robot getPossibleParent(Population population,List<RobotInfo>list){totalWeight();(totalWeight);Iterator<RobotInfo>iterator=iterator();while(iterator()){robotInfo=next(); weightSoFarabs(getWeight()); if (weightSoFartarget) {getRobot(getName()); } }  }", "n_tokens": 78, "n_pass": [773, 112, 68]}
{"time": "2021-02-23 02:54:54.225014", "score": "0.5568", "loss": "19.274", "code": "Robot getPossibleParent(Population population,List<RobotInfo>list){totalWeight();(totalWeight);Iterator<RobotInfo>iterator=iterator();while(iterator()){robotInfo=next();weightSoFarabs(getWeight()); if (weightSoFartarget) {getRobot(getName()); } }  }", "n_tokens": 77, "n_pass": [778, 113, 69]}
{"time": "2021-02-23 02:55:02.336795", "score": "0.5568", "loss": "19.274", "code": "Robot getPossibleParent(Population population,List<RobotInfo>list){totalWeight();(totalWeight);Iterator<RobotInfo>iterator=iterator();while(iterator()){robotInfo=next();weightSoFarabs(getWeight());if (weightSoFartarget) {getRobot(getName()); } }  }", "n_tokens": 76, "n_pass": [787, 116, 70]}
{"time": "2021-02-23 02:55:05.044049", "score": "0.5568", "loss": "19.274", "code": "Robot getPossibleParent(Population population,List<RobotInfo>list){totalWeight();(totalWeight);Iterator<RobotInfo>iterator=iterator();while(iterator()){robotInfo=next();weightSoFarabs(getWeight());if(weightSoFartarget) {getRobot(getName()); } }  }", "n_tokens": 75, "n_pass": [789, 117, 71]}
{"time": "2021-02-23 02:55:07.773069", "score": "0.5928", "loss": "19.4659", "code": "Robot getPossibleParent(Population population,List<RobotInfo>list){totalWeight();(totalWeight);Iterator<RobotInfo>iterator=iterator();while(iterator()){robotInfo=next();weightSoFarabs(getWeight());if(target) {getRobot(getName()); } }  }", "n_tokens": 74, "n_pass": [791, 118, 72]}
{"time": "2021-02-23 02:55:10.496805", "score": "0.5928", "loss": "19.4659", "code": "Robot getPossibleParent(Population population,List<RobotInfo>list){totalWeight();(totalWeight);Iterator<RobotInfo>iterator=iterator();while(iterator()){robotInfo=next();weightSoFarabs(getWeight());if(target){getRobot(getName()); } }  }", "n_tokens": 73, "n_pass": [794, 119, 73]}
{"time": "2021-02-23 02:55:13.229782", "score": "0.6639", "loss": "19.7716", "code": "Robot getPossibleParent(Population population,List<RobotInfo>list){totalWeight();(totalWeight);Iterator<RobotInfo>iterator=iterator();while(iterator()){robotInfo=next();weightSoFarabs(getWeight());if(target){(getName()); } }  }", "n_tokens": 72, "n_pass": [796, 120, 74]}
{"time": "2021-02-23 02:55:15.979461", "score": "0.6639", "loss": "19.7716", "code": "Robot getPossibleParent(Population population,List<RobotInfo>list){totalWeight();(totalWeight);Iterator<RobotInfo>iterator=iterator();while(iterator()){robotInfo=next();weightSoFarabs(getWeight());if(target){(getName());} }  }", "n_tokens": 71, "n_pass": [803, 121, 75]}
{"time": "2021-02-23 02:55:18.700728", "score": "0.6639", "loss": "19.7716", "code": "Robot getPossibleParent(Population population,List<RobotInfo>list){totalWeight();(totalWeight);Iterator<RobotInfo>iterator=iterator();while(iterator()){robotInfo=next();weightSoFarabs(getWeight());if(target){(getName());}}  }", "n_tokens": 70, "n_pass": [805, 122, 76]}
{"time": "2021-02-23 02:55:21.405778", "score": "0.6639", "loss": "19.7716", "code": "Robot getPossibleParent(Population population,List<RobotInfo>list){totalWeight();(totalWeight);Iterator<RobotInfo>iterator=iterator();while(iterator()){robotInfo=next();weightSoFarabs(getWeight());if(target){(getName());}} }", "n_tokens": 69, "n_pass": [807, 123, 77]}
{"time": "2021-02-23 02:55:24.109333", "score": "0.6639", "loss": "19.7716", "code": "Robot getPossibleParent(Population population,List<RobotInfo>list){totalWeight();(totalWeight);Iterator<RobotInfo>iterator=iterator();while(iterator()){robotInfo=next();weightSoFarabs(getWeight());if(target){(getName());}}}", "n_tokens": 68, "n_pass": [808, 124, 78]}
{"time": "2021-02-23 02:55:30.252623", "score": "0.6703", "loss": "19.9534", "code": "Robot getPossibleParent(Population population,List<RobotInfo>list){totalWeight();(totalWeight);Iterator<RobotInfo>iterator=iterator();while(iterator()){robotInfonext();weightSoFarabs(getWeight());if(target){(getName());}}}", "n_tokens": 67, "n_pass": [851, 125, 79]}
{"time": "2021-02-23 02:55:32.975950", "score": "0.6703", "loss": "19.9534", "code": "Robot getPossibleParent(Population population,List<RobotInfo>list){totalWeight();(totalWeight);Iterator<RobotInfo>iterator=iterator();while(iterator()){robotInfo();weightSoFarabs(getWeight());if(target){(getName());}}}", "n_tokens": 66, "n_pass": [852, 126, 80]}

Minimal simplified code:
Robot getPossibleParent(Population population,List<RobotInfo>list){totalWeight();(totalWeight);Iterator<RobotInfo>iterator=iterator();while(iterator()){robotInfo();weightSoFarabs(getWeight());if(target){(getName());}}}

