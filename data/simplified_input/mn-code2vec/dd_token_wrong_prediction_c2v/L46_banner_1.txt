
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/Mr5m1th__POC-Collect/JbossAS/JbossAS_v5.x_v6.x_CVE-2017-12149/JavaDeserH2HC/VulnerableHTTPServer_banner.java
method_name = banner
method_body = public static void banner() { System.out.println("* =============================================================== *"); System.out.println("* Simple Java HTTP Server for Deserialization Lab v0.01 *"); System.out.println("* https://github.com/joaomatosf/JavaDeserH2HC *"); System.out.println("* =============================================================== *"); System.out.println("You can inject java serialized objects in the following formats:"); System.out.println("\n 1) Binary in HTTP POST (ie \\xAC\\xED). Ex:\n" + " $ curl 127.0.0.1:8000 --data-binary @ObjectFile.ser\n" + "\n 2) Base64 or Gzip+Base64 via HTTP POST parameters. Ex:\n" + " $ curl 127.0.0.1:8000 -d \"ViewState=rO0ABXNy...\"\n" + " $ curl 127.0.0.1:8000 -d \"ViewState=H4sICAeH...\"\n" + "\n 3) Base64 or Gzip+Base64 in cookies. Ex:\n" + " $ curl 127.0.0.1:8000 -H \"Cookie: JSESSIONID=rO0ABXNy...\"\n" + " $ curl 127.0.0.1:8000 -H \"Cookie: JSESSIONID=H4sICAeH...\"\n" + "\n 4) Base64 of AES-CBC encrypted with hardcoded Apache Shiro key. Ex:\n" + " $ curl 127.0.0.1:8000 -H \"Cookie: rememberMe=MTIzNDU2Nzg...\"\n" + "\n 5) XML for XStream RCE vulnerability/serialization. Ex:\n" + " $ curl 127.0.0.1:8000 -d @file.xml\n -H \"Content-Type: application/xml\""); System.out.println("OBS: To test gadgets in specific libraries, run with -cp param. Ex:\n" + "$ java -cp .:commons-collections-3.2.1.jar VulnerableHTTPServer"); System.out.println("=================================================================="); }
predict, score, loss = printUsage, 0.5977082252502441, 8.587101936340332

Trace of simplified code(s):
{"time": "2021-02-24 07:03:01.505641", "score": "0.6094", "loss": "8.5294", "code": "public static void banner() { System.out.println(\"* =============================================================== *\"); System.out.println(\"* Simple Java HTTP Server for Deserialization Lab v0.01 *\"); System.out.println(\"* https://github.com/joaomatosf/JavaDeserH2HC *\"); System.out.println(\"* =============================================================== *\"); System.out.println(\"You can inject java serialized objects in the following formats:\"); System.out.println(\"\\n 1) Binary in HTTP POST (ie \\\\xAC\\\\xED). Ex:\\n\" + \" $ curl 127.0.0.1:8000 --data-binary @ObjectFile.ser\\n\" + \"\\n 2) Base64 or Gzip+Base64 via HTTP POST parameters. Ex:\\n\" + \" $ curl 127.0.0.1:8000 -d \\\"ViewState=rO0ABXNy...\\\"\\n\" + \" $ curl 127.0.0.1:8000 -d \\\"ViewState=H4sICAeH...\\\"\\n\" + \"\\n 3) Base64 or Gzip+Base64 in cookies. Ex:\\n\" + \" $ curl 127.0.0.1:8000 -H \\\"Cookie: JSESSIONID=rO0ABXNy...\\\"\\n\" + \" $ curl 127.0.0.1:8000 -H \\\"Cookie: JSESSIONID=H4sICAeH...\\\"\\n\" + \"\\n 4) Base64 of AES-CBC encrypted with hardcoded Apache Shiro key. Ex:\\n\" + \" $ curl 127.0.0.1:8000 -H \\\"Cookie: rememberMe=MTIzNDU2Nzg...\\\"\\n\" + \"\\n 5) XML for XStream RCE vulnerability/serialization. Ex:\\n\" + \" $ curl 127.0.0.1:8000 -d @file.xml\\n -H \\\"Content-Type: application/xml\\\"\"); System.out.println(\"OBS: To test gadgets in specific libraries, run with -cp param. Ex:\\n\" + \"$ java -cp .:commons-collections-3.2.1.jar VulnerableHTTPServer\"); System.out.println(\"==================================================================\"); }", "n_tokens": 888, "n_pass": [1, 1, 1]}
{"time": "2021-02-24 07:03:04.175021", "score": "0.5581", "loss": "7.1418", "code": "public static void banner() { System.out.println(\"* =============================================================== *\"); System.out.println(\"* Simple Java HTTP Server for Deserialization Lab v0.01 *\"); System.out.println(\"* https://github.com/joaomatosf/JavaDeserH2HC *\"); System.out.println(\"* ==============================================================H4sICAeH...\\\"\\n\" + \"\\n 3) Base64 or Gzip+Base64 in cookies. Ex:\\n\" + \" $ curl 127.0.0.1:8000 -H \\\"Cookie: JSESSIONID=rO0ABXNy...\\\"\\n\" + \" $ curl 127.0.0.1:8000 -H \\\"Cookie: JSESSIONID=H4sICAeH...\\\"\\n\" + \"\\n 4) Base64 of AES-CBC encrypted with hardcoded Apache Shiro key. Ex:\\n\" + \" $ curl 127.0.0.1:8000 -H \\\"Cookie: rememberMe=MTIzNDU2Nzg...\\\"\\n\" + \"\\n 5) XML for XStream RCE vulnerability/serialization. Ex:\\n\" + \" $ curl 127.0.0.1:8000 -d @file.xml\\n -H \\\"Content-Type: application/xml\\\"\"); System.out.println(\"OBS: To test gadgets in specific libraries, run with -cp param. Ex:\\n\" + \"$ java -cp .:commons-collections-3.2.1.jar VulnerableHTTPServer\"); System.out.println(\"==================================================================\"); }", "n_tokens": 666, "n_pass": [9, 2, 2]}
{"time": "2021-02-24 07:03:06.843245", "score": "0.5303", "loss": "7.0371", "code": "public static void banner() { System.out.println(\"* =============================================================== *\"); System.out.println(\"* Simple Java HTTP Server for Deserialization Lab v0.01 *\"); System.out.println(\"* https://github.com/joaomatosf/JavaDeserH2HC *\"); System.out.println(\"* =============================================================n 5) XML for XStream RCE vulnerability/serialization. Ex:\\n\" + \" $ curl 127.0.0.1:8000 -d @file.xml\\n -H \\\"Content-Type: application/xml\\\"\"); System.out.println(\"OBS: To test gadgets in specific libraries, run with -cp param. Ex:\\n\" + \"$ java -cp .:commons-collections-3.2.1.jar VulnerableHTTPServer\"); System.out.println(\"==================================================================\"); }", "n_tokens": 444, "n_pass": [10, 3, 3]}
{"time": "2021-02-24 07:03:09.492298", "score": "0.4945", "loss": "6.8406", "code": "public static void banner() { System.out.println(\"* =============================================================== *\"); System.out.println(\"* Simple Java HTTP Server for Deserialization Lab v0.01 *\"); System.out.println(\"* https://github.com/joaomatosf/JavaDeserH2HC *\"); System.out.println(\"* =============================================================\\n\" + \"$ java -cp .:commons-collections-3.2.1.jar VulnerableHTTPServer\"); System.out.println(\"==================================================================\"); }", "n_tokens": 333, "n_pass": [15, 4, 4]}
{"time": "2021-02-24 07:03:14.757788", "score": "0.5989", "loss": "9.5005", "code": "public static void banner() { System.out.println(\"* =============================================================== *\"); System.out.println(\"* Simple Java HTTP Server for Deserialization Lab v0.01 *\"); System.out.println(\"* https://github.com/joaomatosf/JavaDeserH2HC *\"); System.out.println(\"* ===============================================================================================================\"); }", "n_tokens": 277, "n_pass": [24, 6, 5]}
{"time": "2021-02-24 07:03:17.390793", "score": "0.5605", "loss": "9.1721", "code": "public static void banner() { System.out.println(\"* ================================== Lab v0.01 *\"); System.out.println(\"* https://github.com/joaomatosf/JavaDeserH2HC *\"); System.out.println(\"* ===============================================================================================================\"); }", "n_tokens": 222, "n_pass": [27, 7, 6]}
{"time": "2021-02-24 07:03:22.586673", "score": "0.5605", "loss": "9.1721", "code": "public static void banner() { System.out.println(\"* ================================== Lab v0.01 *\"); System.out.println(\"* https://github.com/joaomatosf/JavaDeserH2HC *\"); System.out.println(\"* =======================================================\"); }", "n_tokens": 166, "n_pass": [29, 9, 7]}
{"time": "2021-02-24 07:03:27.837268", "score": "0.5605", "loss": "9.1721", "code": "public static void banner() { System.out.println(\"* ================================== Lab v0.01 *\"); System.out.println(\"* https://github.com/joaomatosf/JavaDeserH2HC *\"); System.out.println(\"* ===========================\"); }", "n_tokens": 138, "n_pass": [39, 11, 8]}
{"time": "2021-02-24 07:03:30.449784", "score": "0.5605", "loss": "9.1721", "code": "public static void banner() { System.out.println(\"* ======= Lab v0.01 *\"); System.out.println(\"* https://github.com/joaomatosf/JavaDeserH2HC *\"); System.out.println(\"* ===========================\"); }", "n_tokens": 111, "n_pass": [41, 12, 9]}
{"time": "2021-02-24 07:03:33.061335", "score": "0.3541", "loss": "8.7735", "code": "public static void banner() { System.out.println(\"* ======github.com/joaomatosf/JavaDeserH2HC *\"); System.out.println(\"* ===========================\"); }", "n_tokens": 83, "n_pass": [42, 13, 10]}
{"time": "2021-02-24 07:03:38.254974", "score": "0.3541", "loss": "8.7735", "code": "public static void banner() { System.out.println(\"* ======github.com/joaomatosf/JavaDeserH2HC *\"); System.out.println(\"* =============\"); }", "n_tokens": 69, "n_pass": [54, 15, 11]}
{"time": "2021-02-24 07:03:40.850958", "score": "0.3541", "loss": "8.7735", "code": "public static void banner() { System.out.println(\"* ======github.com/joaomatosf/JavaDeserH2HC *\"); System.out.println(\"* ======\"); }", "n_tokens": 62, "n_pass": [69, 16, 12]}
{"time": "2021-02-24 07:03:43.815545", "score": "0.3541", "loss": "8.7735", "code": "public static void banner() { System.out.println(\"*github.com/joaomatosf/JavaDeserH2HC *\"); System.out.println(\"* ======\"); }", "n_tokens": 55, "n_pass": [73, 17, 13]}
{"time": "2021-02-24 07:03:49.410412", "score": "0.3541", "loss": "8.7735", "code": "public static void banner() { System.out.println(\"*githubjoaomatosf/JavaDeserH2HC *\"); System.out.println(\"* ======\"); }", "n_tokens": 52, "n_pass": [99, 19, 14]}
{"time": "2021-02-24 07:03:52.035572", "score": "0.3541", "loss": "8.7735", "code": "public static void banner() { System.out.println(\"*github2HC *\"); System.out.println(\"* ======\"); }", "n_tokens": 49, "n_pass": [100, 20, 15]}
{"time": "2021-02-24 07:03:57.270294", "score": "0.253", "loss": "8.0546", "code": "public static void banner() { System.out.println(\"*github2HC *\"); println(\"* ======\"); }", "n_tokens": 45, "n_pass": [103, 22, 16]}
{"time": "2021-02-24 07:03:59.891921", "score": "0.253", "loss": "8.0546", "code": "public static void banner() { System.out.println(\"*github2HC *\"); println(\"*===\"); }", "n_tokens": 41, "n_pass": [105, 23, 17]}
{"time": "2021-02-24 07:04:02.492461", "score": "0.253", "loss": "8.0546", "code": " void banner() { System.out.println(\"*github2HC *\"); println(\"*===\"); }", "n_tokens": 38, "n_pass": [108, 24, 18]}
{"time": "2021-02-24 07:04:09.130496", "score": "0.253", "loss": "8.0546", "code": "void banner() { System.out.println(\"*github2HC *\"); println(\"*===\"); }", "n_tokens": 37, "n_pass": [142, 26, 19]}
{"time": "2021-02-24 07:04:12.477660", "score": "0.3844", "loss": "7.6269", "code": "void banner() { System.println(\"*github2HC *\"); println(\"*===\"); }", "n_tokens": 35, "n_pass": [150, 27, 20]}
{"time": "2021-02-24 07:04:22.844419", "score": "0.3844", "loss": "7.6269", "code": "void banner() { System.println(\"*github2HC\"); println(\"*===\"); }", "n_tokens": 33, "n_pass": [155, 31, 21]}
{"time": "2021-02-24 07:04:38.727595", "score": "0.3844", "loss": "7.6269", "code": "void banner() { System.println(\"*github2HC\");println(\"*===\"); }", "n_tokens": 32, "n_pass": [204, 36, 22]}
{"time": "2021-02-24 07:04:46.525428", "score": "0.3844", "loss": "7.6269", "code": "void banner() { System.println(\"*github2HC\");println(\"*==\"); }", "n_tokens": 31, "n_pass": [209, 39, 23]}
{"time": "2021-02-24 07:04:54.285002", "score": "0.3844", "loss": "7.6269", "code": "void banner() { System.println(\"*github2HC\");println(\"*==\");}", "n_tokens": 30, "n_pass": [215, 42, 24]}
{"time": "2021-02-24 07:04:57.617920", "score": "0.3844", "loss": "7.6269", "code": "void banner(){ System.println(\"*github2HC\");println(\"*==\");}", "n_tokens": 29, "n_pass": [222, 43, 25]}
{"time": "2021-02-24 07:05:00.202755", "score": "0.3844", "loss": "7.6269", "code": "void banner(){System.println(\"*github2HC\");println(\"*==\");}", "n_tokens": 28, "n_pass": [224, 44, 26]}
{"time": "2021-02-24 07:05:05.399979", "score": "0.3844", "loss": "7.6269", "code": "void banner(){System.println(\"github2HC\");println(\"*==\");}", "n_tokens": 27, "n_pass": [230, 46, 27]}
{"time": "2021-02-24 07:05:10.552236", "score": "0.3844", "loss": "7.6269", "code": "void banner(){System.println(\"githubHC\");println(\"*==\");}", "n_tokens": 26, "n_pass": [232, 48, 28]}

Minimal simplified code:
void banner(){System.println("githubHC");println("*==");}

