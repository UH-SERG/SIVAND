
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/tang-jie__NettyRPC/src/main/java/com/newlandframework/rpc/netty/MessageSendHandler_sendRequest.java
method_name = sendRequest
method_body = public MessageCallBack sendRequest(MessageRequest request) { MessageCallBack callBack = new MessageCallBack(request); mapCallBack.put(request.getMessageId(), callBack); channel.writeAndFlush(request); return callBack; }
predict, score, loss = broadcast, 0.4262751042842865, 1.6997113227844238

Trace of simplified code(s):
{"time": "2021-02-23 19:03:33.513359", "score": "0.4263", "loss": "1.6997", "code": "public MessageCallBack sendRequest(MessageRequest request) { MessageCallBack callBack = new MessageCallBack(request); mapCallBack.put(request.getMessageId(), callBack); channel.writeAndFlush(request); return callBack; }", "n_tokens": 56, "n_pass": [1, 1, 1]}
{"time": "2021-02-23 19:03:36.172782", "score": "0.4697", "loss": "2.4015", "code": "public MessageCallBack sendRequest(MessageRequest request) { MessageCallBack.put(request.getMessageId(), callBack); channel.writeAndFlush(request); return callBack; }", "n_tokens": 42, "n_pass": [9, 2, 2]}
{"time": "2021-02-23 19:03:38.809762", "score": "0.6696", "loss": "4.3863", "code": "public MessageCallBack sendRequest(MessageRequest request) { MessageCallBackchannel.writeAndFlush(request); return callBack; }", "n_tokens": 28, "n_pass": [10, 3, 3]}
{"time": "2021-02-23 19:03:41.472910", "score": "0.7029", "loss": "5.8534", "code": "public MessageCallBack sendRequest(MessageRequest request) {writeAndFlush(request); return callBack; }", "n_tokens": 24, "n_pass": [27, 4, 4]}
{"time": "2021-02-23 19:03:44.090779", "score": "0.5159", "loss": "8.8136", "code": "public MessageCallBack sendRequest(MessageRequest request) {; return callBack; }", "n_tokens": 20, "n_pass": [28, 5, 5]}
{"time": "2021-02-23 19:03:46.713000", "score": "0.5108", "loss": "9.2642", "code": "public MessageCallBack sendRequest(MessageRequest request) {callBack; }", "n_tokens": 16, "n_pass": [29, 6, 6]}
{"time": "2021-02-23 19:03:55.664883", "score": "0.5108", "loss": "9.2642", "code": " MessageCallBack sendRequest(MessageRequest request) {callBack; }", "n_tokens": 15, "n_pass": [47, 9, 7]}
{"time": "2021-02-23 19:03:58.280382", "score": "0.5108", "loss": "9.2642", "code": "MessageCallBack sendRequest(MessageRequest request) {callBack; }", "n_tokens": 14, "n_pass": [48, 10, 8]}
{"time": "2021-02-23 19:04:05.766872", "score": "0.5108", "loss": "9.2642", "code": "MessageCallBack sendRequest(MessageRequest request){callBack; }", "n_tokens": 13, "n_pass": [74, 12, 9]}
{"time": "2021-02-23 19:04:08.409961", "score": "0.5099", "loss": "9.2968", "code": "MessageCallBack sendRequest(MessageRequest request){; }", "n_tokens": 12, "n_pass": [75, 13, 10]}
{"time": "2021-02-23 19:04:13.522556", "score": "0.5099", "loss": "9.2968", "code": "MessageCallBack sendRequest(MessageRequest request){;}", "n_tokens": 11, "n_pass": [77, 15, 11]}

Minimal simplified code:
MessageCallBack sendRequest(MessageRequest request){;}

