
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/bluestreak01__questdb/core/src/main/java/com/questdb/std/LongList_seed.java
method_name = seed
method_body = public void seed(int fromIndex, int count, long value) { int capacity = fromIndex + count; ensureCapacity(capacity); pos = capacity; Arrays.fill(buffer, fromIndex, capacity, value); }
predict, score, loss = fill, 0.9002808332443237, 15.251913070678711

Trace of simplified code(s):
{"time": "2021-02-23 17:43:44.024575", "score": "0.9003", "loss": "15.2519", "code": "public void seed(int fromIndex, int count, long value) { int capacity = fromIndex + count; ensureCapacity(capacity); pos = capacity; Arrays.fill(buffer, fromIndex, capacity, value); }", "n_tokens": 67, "n_pass": [1, 1, 1]}
{"time": "2021-02-23 17:43:46.700075", "score": "0.9029", "loss": "15.0927", "code": "public void seed(int fromIndex, int count, long value) { int count; ensureCapacity(capacity); pos = capacity; Arrays.fill(buffer, fromIndex, capacity, value); }", "n_tokens": 59, "n_pass": [23, 2, 2]}
{"time": "2021-02-23 17:43:49.388950", "score": "0.9316", "loss": "15.1614", "code": "public void seed(int fromIndex, int count, long value) { intensureCapacity(capacity); pos = capacity; Arrays.fill(buffer, fromIndex, capacity, value); }", "n_tokens": 55, "n_pass": [45, 3, 3]}
{"time": "2021-02-23 17:43:52.478251", "score": "0.7815", "loss": "11.8756", "code": "public void seed(int fromIndex, int count, long value) { intensureCapacity(capacity); pos = capacity; Arrays.fill(buffer, fromIndexvalue); }", "n_tokens": 50, "n_pass": [50, 4, 4]}
{"time": "2021-02-23 17:43:55.547308", "score": "0.7673", "loss": "11.8871", "code": "public void seed(int  count, long value) { intensureCapacity(capacity); pos = capacity; Arrays.fill(buffer, fromIndexvalue); }", "n_tokens": 46, "n_pass": [54, 5, 5]}
{"time": "2021-02-23 17:43:59.430838", "score": "0.6598", "loss": "12.5567", "code": "public void seed(int  count, long value) {ensureCapacity(capacity); pos = capacity; Arrays.fill(buffer, fromIndexvalue); }", "n_tokens": 44, "n_pass": [93, 6, 6]}
{"time": "2021-02-23 17:44:02.080522", "score": "0.8779", "loss": "14.9275", "code": "public void seed(int  count, long value) {ensureCapacity(capacity); pos capacity; Arrays.fill(buffer, fromIndexvalue); }", "n_tokens": 42, "n_pass": [98, 7, 7]}
{"time": "2021-02-23 17:44:10.075836", "score": "0.8779", "loss": "14.9275", "code": "void seed(int  count, long value) {ensureCapacity(capacity); pos capacity; Arrays.fill(buffer, fromIndexvalue); }", "n_tokens": 40, "n_pass": [106, 10, 8]}
{"time": "2021-02-23 17:44:13.174151", "score": "0.8602", "loss": "14.8728", "code": "void seed(int  count, long value) {ensureCapacity(capacity); capacity; Arrays.fill(buffer, fromIndexvalue); }", "n_tokens": 38, "n_pass": [118, 11, 9]}
{"time": "2021-02-23 17:44:15.803070", "score": "0.8796", "loss": "14.9403", "code": "void seed(int  count, long value) {ensureCapacity(capacity);  Arrays.fill(buffer, fromIndexvalue); }", "n_tokens": 36, "n_pass": [119, 12, 10]}
{"time": "2021-02-23 17:44:28.015159", "score": "0.8796", "loss": "14.9403", "code": "void seed(int  count, long value) {ensureCapacity(capacity); Arrays.fill(buffer, fromIndexvalue); }", "n_tokens": 35, "n_pass": [171, 15, 11]}
{"time": "2021-02-23 17:44:33.267211", "score": "0.8796", "loss": "14.9403", "code": "void seed(int  count, long value) {ensureCapacity(capacity); Arrays.fill(buffer,fromIndexvalue); }", "n_tokens": 34, "n_pass": [177, 17, 12]}
{"time": "2021-02-23 17:44:35.928389", "score": "0.9377", "loss": "16.4125", "code": "void seed(int  count, long value) {ensureCapacity(capacity); Arrays.fill(buffer,value); }", "n_tokens": 33, "n_pass": [178, 18, 13]}
{"time": "2021-02-23 17:44:39.385643", "score": "0.9377", "loss": "16.4125", "code": "void seed(int count, long value) {ensureCapacity(capacity); Arrays.fill(buffer,value); }", "n_tokens": 32, "n_pass": [187, 19, 14]}
{"time": "2021-02-23 17:44:42.016010", "score": "0.9377", "loss": "16.4125", "code": "void seed(int count,long value) {ensureCapacity(capacity); Arrays.fill(buffer,value); }", "n_tokens": 31, "n_pass": [191, 20, 15]}
{"time": "2021-02-23 17:44:44.643535", "score": "0.9377", "loss": "16.4125", "code": "void seed(int count,long value){ensureCapacity(capacity); Arrays.fill(buffer,value); }", "n_tokens": 30, "n_pass": [196, 21, 16]}
{"time": "2021-02-23 17:44:47.263653", "score": "0.968", "loss": "17.3982", "code": "void seed(int count,long value){(capacity); Arrays.fill(buffer,value); }", "n_tokens": 29, "n_pass": [198, 22, 17]}
{"time": "2021-02-23 17:44:50.282158", "score": "0.968", "loss": "17.3982", "code": "void seed(int count,long value){(capacity);Arrays.fill(buffer,value); }", "n_tokens": 28, "n_pass": [203, 23, 18]}
{"time": "2021-02-23 17:44:55.573610", "score": "0.8981", "loss": "16.3389", "code": "void seed(int count,long value){(capacity);Arrays.fill(buffervalue); }", "n_tokens": 27, "n_pass": [209, 25, 19]}
{"time": "2021-02-23 17:44:58.208911", "score": "0.9008", "loss": "15.6784", "code": "void seed(int count,long value){(capacity);Arrays.fill(buffer); }", "n_tokens": 26, "n_pass": [210, 26, 20]}
{"time": "2021-02-23 17:45:04.711855", "score": "0.6252", "loss": "14.8419", "code": "void seed(int count,long value){(capacity);Arrays.fill(); }", "n_tokens": 25, "n_pass": [234, 28, 21]}
{"time": "2021-02-23 17:45:12.019407", "score": "0.6252", "loss": "14.8419", "code": "void seed(int count,long value){(capacity);Arrays.fill();}", "n_tokens": 24, "n_pass": [263, 30, 22]}

Minimal simplified code:
void seed(int count,long value){(capacity);Arrays.fill();}

