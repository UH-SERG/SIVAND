
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/OpenRock__OpenAM/openam-core/src/main/java/com/sun/identity/policy/PolicyEvaluator_isAllowed.java
method_name = isAllowed
method_body = public boolean isAllowed(SSOToken token, String resourceName, String actionName, Map envParameters) throws SSOException, PolicyException { if (PolicyManager.isMigratedToEntitlementService()) { return isAllowedE(token, resourceName, actionName, envParameters); } return isAllowedO(token, resourceName, actionName, envParameters); }
predict, score, loss = executeCommand, 0.5228889584541321, 14.620198249816895

Trace of simplified code(s):
{"time": "2021-02-24 11:44:27.057798", "score": "0.5229", "loss": "14.6202", "code": "public boolean isAllowed(SSOToken token, String resourceName, String actionName, Map envParameters) throws SSOException, PolicyException { if (PolicyManager.isMigratedToEntitlementService()) { return isAllowedE(token, resourceName, actionName, envParameters); } return isAllowedO(token, resourceName, actionName, envParameters); }", "n_tokens": 84, "n_pass": [1, 1, 1]}
{"time": "2021-02-24 11:44:29.808244", "score": "0.3773", "loss": "15.7082", "code": "public boolean isAllowed(SSOToken token, Map envParameters) throws SSOException, PolicyException { if (PolicyManager.isMigratedToEntitlementService()) { return isAllowedE(token, resourceName, actionName, envParameters); } return isAllowedO(token, resourceName, actionName, envParameters); }", "n_tokens": 74, "n_pass": [21, 2, 2]}
{"time": "2021-02-24 11:44:38.098160", "score": "0.5167", "loss": "17.6465", "code": "public boolean isAllowed(SSOToken token, Map envParameters) throws  PolicyException { if (PolicyManager.isMigratedToEntitlementService()) { return isAllowedE(token, resourceName, actionName, envParameters); } return isAllowedO(token, resourceName, actionName, envParameters); }", "n_tokens": 72, "n_pass": [90, 5, 3]}
{"time": "2021-02-24 11:44:54.561286", "score": "0.5167", "loss": "17.6465", "code": "boolean isAllowed(SSOToken token, Map envParameters) throws  PolicyException { if (PolicyManager.isMigratedToEntitlementService()) { return isAllowedE(token, resourceName, actionName, envParameters); } return isAllowedO(token, resourceName, actionName, envParameters); }", "n_tokens": 70, "n_pass": [109, 11, 4]}
{"time": "2021-02-24 11:45:17.871103", "score": "0.5167", "loss": "17.6465", "code": "boolean isAllowed(SSOToken token,Map envParameters) throws  PolicyException { if (PolicyManager.isMigratedToEntitlementService()) { return isAllowedE(token, resourceName, actionName, envParameters); } return isAllowedO(token, resourceName, actionName, envParameters); }", "n_tokens": 69, "n_pass": [196, 17, 5]}
{"time": "2021-02-24 11:45:20.610468", "score": "0.5167", "loss": "17.6465", "code": "boolean isAllowed(SSOToken token,Map envParameters)throws  PolicyException { if (PolicyManager.isMigratedToEntitlementService()) { return isAllowedE(token, resourceName, actionName, envParameters); } return isAllowedO(token, resourceName, actionName, envParameters); }", "n_tokens": 68, "n_pass": [200, 18, 6]}
{"time": "2021-02-24 11:45:23.349337", "score": "0.5167", "loss": "17.6465", "code": "boolean isAllowed(SSOToken token,Map envParameters)throws PolicyException { if (PolicyManager.isMigratedToEntitlementService()) { return isAllowedE(token, resourceName, actionName, envParameters); } return isAllowedO(token, resourceName, actionName, envParameters); }", "n_tokens": 67, "n_pass": [202, 19, 7]}
{"time": "2021-02-24 11:45:26.081084", "score": "0.5167", "loss": "17.6465", "code": "boolean isAllowed(SSOToken token,Map envParameters)throws PolicyException{ if (PolicyManager.isMigratedToEntitlementService()) { return isAllowedE(token, resourceName, actionName, envParameters); } return isAllowedO(token, resourceName, actionName, envParameters); }", "n_tokens": 66, "n_pass": [205, 20, 8]}
{"time": "2021-02-24 11:45:28.820108", "score": "0.5167", "loss": "17.6465", "code": "boolean isAllowed(SSOToken token,Map envParameters)throws PolicyException{if (PolicyManager.isMigratedToEntitlementService()) { return isAllowedE(token, resourceName, actionName, envParameters); } return isAllowedO(token, resourceName, actionName, envParameters); }", "n_tokens": 65, "n_pass": [207, 21, 9]}
{"time": "2021-02-24 11:45:31.569598", "score": "0.5167", "loss": "17.6465", "code": "boolean isAllowed(SSOToken token,Map envParameters)throws PolicyException{if(PolicyManager.isMigratedToEntitlementService()) { return isAllowedE(token, resourceName, actionName, envParameters); } return isAllowedO(token, resourceName, actionName, envParameters); }", "n_tokens": 64, "n_pass": [209, 22, 10]}
{"time": "2021-02-24 11:45:34.348510", "score": "0.6697", "loss": "18.6341", "code": "boolean isAllowed(SSOToken token,Map envParameters)throws PolicyException{if(PolicyManagerisMigratedToEntitlementService()) { return isAllowedE(token, resourceName, actionName, envParameters); } return isAllowedO(token, resourceName, actionName, envParameters); }", "n_tokens": 63, "n_pass": [212, 23, 11]}
{"time": "2021-02-24 11:45:39.834051", "score": "0.6697", "loss": "18.6341", "code": "boolean isAllowed(SSOToken token,Map envParameters)throws PolicyException{if(PolicyManagerisMigratedToEntitlementService()){ return isAllowedE(token, resourceName, actionName, envParameters); } return isAllowedO(token, resourceName, actionName, envParameters); }", "n_tokens": 62, "n_pass": [217, 25, 12]}
{"time": "2021-02-24 11:45:42.567108", "score": "0.6697", "loss": "18.6341", "code": "boolean isAllowed(SSOToken token,Map envParameters)throws PolicyException{if(PolicyManagerisMigratedToEntitlementService()){return isAllowedE(token, resourceName, actionName, envParameters); } return isAllowedO(token, resourceName, actionName, envParameters); }", "n_tokens": 61, "n_pass": [219, 26, 13]}
{"time": "2021-02-24 11:45:45.349909", "score": "0.69", "loss": "17.6622", "code": "boolean isAllowed(SSOToken token,Map envParameters)throws PolicyException{if(PolicyManagerisMigratedToEntitlementService()){ isAllowedE(token, resourceName, actionName, envParameters); } return isAllowedO(token, resourceName, actionName, envParameters); }", "n_tokens": 60, "n_pass": [220, 27, 14]}
{"time": "2021-02-24 11:45:48.111589", "score": "0.7096", "loss": "18.3643", "code": "boolean isAllowed(SSOToken token,Map envParameters)throws PolicyException{if(PolicyManagerisMigratedToEntitlementService()){ isAllowedE(tokenresourceName, actionName, envParameters); } return isAllowedO(token, resourceName, actionName, envParameters); }", "n_tokens": 58, "n_pass": [223, 28, 15]}
{"time": "2021-02-24 11:45:50.866850", "score": "0.5332", "loss": "17.6365", "code": "boolean isAllowed(SSOToken token,Map envParameters)throws PolicyException{if(PolicyManagerisMigratedToEntitlementService()){ isAllowedE(tokenresourceName, actionNameenvParameters); } return isAllowedO(token, resourceName, actionName, envParameters); }", "n_tokens": 56, "n_pass": [226, 29, 16]}
{"time": "2021-02-24 11:45:53.618324", "score": "0.6179", "loss": "18.8541", "code": "boolean isAllowed(SSOToken token,Map envParameters)throws PolicyException{if(PolicyManagerisMigratedToEntitlementService()){ isAllowedE(tokenresourceName, actionNameenvParameters); } isAllowedO(token, resourceName, actionName, envParameters); }", "n_tokens": 54, "n_pass": [230, 30, 17]}
{"time": "2021-02-24 11:45:56.351429", "score": "0.4234", "loss": "19.2448", "code": "boolean isAllowed(SSOToken token,Map envParameters)throws PolicyException{if(PolicyManagerisMigratedToEntitlementService()){ isAllowedE(tokenresourceName, actionNameenvParameters); } isAllowedO( resourceName, actionName, envParameters); }", "n_tokens": 52, "n_pass": [232, 31, 18]}
{"time": "2021-02-24 11:46:05.444829", "score": "0.4234", "loss": "19.2448", "code": "boolean isAllowed(SSOToken token,Map envParameters)throws PolicyException{if(isMigratedToEntitlementService()){ isAllowedE(tokenresourceName, actionNameenvParameters); } isAllowedO( resourceName, actionName, envParameters); }", "n_tokens": 51, "n_pass": [257, 34, 19]}
{"time": "2021-02-24 11:46:08.175062", "score": "0.6081", "loss": "20.2989", "code": "boolean isAllowed(SSOToken token,Map envParameters)throws PolicyException{if(isMigratedToEntitlementService()){ isAllowedE(tokenresourceName,envParameters); } isAllowedO( resourceName, actionName, envParameters); }", "n_tokens": 49, "n_pass": [266, 35, 20]}
{"time": "2021-02-24 11:46:17.255495", "score": "0.4248", "loss": "19.3307", "code": "boolean isAllowed(SSOToken token,Map envParameters)throws PolicyException{if(isMigratedToEntitlementService()){ isAllowedE(tokenenvParameters); } isAllowedO( resourceName, actionName, envParameters); }", "n_tokens": 47, "n_pass": [302, 38, 21]}
{"time": "2021-02-24 11:46:26.349009", "score": "0.3738", "loss": "19.5228", "code": "boolean isAllowed(SSOToken token,Map envParameters)throws PolicyException{if(isMigratedToEntitlementService()){(tokenenvParameters); } isAllowedO( resourceName, actionName, envParameters); }", "n_tokens": 45, "n_pass": [336, 41, 22]}
{"time": "2021-02-24 11:46:38.836237", "score": "0.3738", "loss": "19.5228", "code": "boolean isAllowed(SSOToken token,Map envParameters)throws PolicyException{if(isMigratedToEntitlementService()){(tokenenvParameters); }isAllowedO( resourceName, actionName, envParameters); }", "n_tokens": 44, "n_pass": [393, 44, 23]}
{"time": "2021-02-24 11:46:41.554814", "score": "0.3738", "loss": "19.5228", "code": "boolean isAllowed(SSOToken token,Map envParameters)throws PolicyException{if(isMigratedToEntitlementService()){(tokenenvParameters); }isAllowedO(resourceName, actionName, envParameters); }", "n_tokens": 43, "n_pass": [396, 45, 24]}
{"time": "2021-02-24 11:46:44.284839", "score": "0.3738", "loss": "19.5228", "code": "boolean isAllowed(SSOToken token,Map envParameters)throws PolicyException{if(isMigratedToEntitlementService()){(tokenenvParameters); }isAllowedO(resourceName,actionName, envParameters); }", "n_tokens": 42, "n_pass": [399, 46, 25]}
{"time": "2021-02-24 11:46:47.013072", "score": "0.3738", "loss": "19.5228", "code": "boolean isAllowed(SSOToken token,Map envParameters)throws PolicyException{if(isMigratedToEntitlementService()){(tokenenvParameters); }isAllowedO(resourceName,actionName,envParameters); }", "n_tokens": 41, "n_pass": [402, 47, 26]}
{"time": "2021-02-24 11:46:49.729817", "score": "0.3738", "loss": "19.5228", "code": "boolean isAllowed(SSOToken token,Map envParameters)throws PolicyException{if(isMigratedToEntitlementService()){(tokenenvParameters); }isAllowedO(resourceName,actionName,envParameters);}", "n_tokens": 40, "n_pass": [406, 48, 27]}
{"time": "2021-02-24 11:46:53.358610", "score": "0.3873", "loss": "19.5563", "code": "boolean isAllowed(SSOToken token,Map envParameters)throws PolicyException{if(isMigratedToEntitlementService()){(envParameters); }isAllowedO(resourceName,actionName,envParameters);}", "n_tokens": 39, "n_pass": [432, 49, 28]}
{"time": "2021-02-24 11:46:56.085382", "score": "0.3873", "loss": "19.5563", "code": "boolean isAllowed(SSOToken token,Map envParameters)throws PolicyException{if(isMigratedToEntitlementService()){(envParameters);}isAllowedO(resourceName,actionName,envParameters);}", "n_tokens": 38, "n_pass": [436, 50, 29]}

Minimal simplified code:
boolean isAllowed(SSOToken token,Map envParameters)throws PolicyException{if(isMigratedToEntitlementService()){(envParameters);}isAllowedO(resourceName,actionName,envParameters);}

