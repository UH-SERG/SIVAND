
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/jopt-simple__jopt-simple/src/main/java/joptsimple/OptionParser_isHelpOptionPresent.java
method_name = isHelpOptionPresent
method_body = private boolean isHelpOptionPresent(OptionSet options) { boolean helpOptionPresent = false; for (AbstractOptionSpec<?> each : recognizedOptions.toJavaUtilMap().values()) { if (each.isForHelp() && options.has(each)) { helpOptionPresent = true; break; } } return helpOptionPresent; }
predict, score, loss = parse, 0.18538634479045868, 16.259910583496094

Trace of simplified code(s):
{"time": "2021-02-24 11:26:08.728012", "score": "0.1854", "loss": "16.2599", "code": "private boolean isHelpOptionPresent(OptionSet options) { boolean helpOptionPresent = false; for (AbstractOptionSpec<?> each : recognizedOptions.toJavaUtilMap().values()) { if (each.isForHelp() && options.has(each)) { helpOptionPresent = true; break; } } return helpOptionPresent; }", "n_tokens": 89, "n_pass": [1, 1, 1]}
{"time": "2021-02-24 11:26:17.574055", "score": "0.2793", "loss": "15.9664", "code": "private boolean isHelpOptionPresent(OptionSet options) { boolean helpOptionPresent = false; for (AbstractOptionSpec<?> each : recognizedOptions.toJavaUtilMap().values()) { if (each.isForHelpoptions.has(each)) { helpOptionPresent = true; break; } } return helpOptionPresent; }", "n_tokens": 83, "n_pass": [54, 4, 2]}
{"time": "2021-02-24 11:26:20.343362", "score": "0.3497", "loss": "16.389", "code": "private boolean isHelpOptionPresent(OptionSet options) { boolean helpOptionPresent = false; for (AbstractOptionSpec<?> each : recognizedOptions.toJavaUtilMap().values()) { if (each.isForHelp) { helpOptionPresent = true; break; } } return helpOptionPresent; }", "n_tokens": 77, "n_pass": [55, 5, 3]}
{"time": "2021-02-24 11:26:23.070768", "score": "0.3434", "loss": "16.4034", "code": "private boolean isHelpOptionPresent(OptionSet options) { boolean helpOptionPresent = false; for (AbstractOptionSpec<?> each : recognizedOptions.toJavaUtilMap().values()) { if (each.isForHelp) { helpOptionPresent ; } } return helpOptionPresent; }", "n_tokens": 71, "n_pass": [57, 6, 4]}
{"time": "2021-02-24 11:26:28.548888", "score": "0.5622", "loss": "18.4705", "code": "private boolean isHelpOptionPresent(OptionSet options) { boolean helpOptionPresent = false; for (AbstractOptionSpec<?> each : recognizedOptions.toJavaUtilMap().values()) { if (each.isForHelp) { helpOptionPresent ; } } ; }", "n_tokens": 68, "n_pass": [99, 8, 5]}
{"time": "2021-02-24 11:26:31.277176", "score": "0.5622", "loss": "18.4705", "code": "boolean isHelpOptionPresent(OptionSet options) { boolean helpOptionPresent = false; for (AbstractOptionSpec<?> each : recognizedOptions.toJavaUtilMap().values()) { if (each.isForHelp) { helpOptionPresent ; } } ; }", "n_tokens": 66, "n_pass": [100, 9, 6]}
{"time": "2021-02-24 11:26:34.515002", "score": "0.6509", "loss": "17.6145", "code": "boolean isHelpOptionPresent(OptionSet options) { helpOptionPresent = false; for (AbstractOptionSpec<?> each : recognizedOptions.toJavaUtilMap().values()) { if (each.isForHelp) { helpOptionPresent ; } } ; }", "n_tokens": 64, "n_pass": [106, 10, 7]}
{"time": "2021-02-24 11:26:37.245947", "score": "0.6907", "loss": "18.7039", "code": "boolean isHelpOptionPresent(OptionSet options) { helpOptionPresent ; for (AbstractOptionSpec<?> each : recognizedOptions.toJavaUtilMap().values()) { if (each.isForHelp) { helpOptionPresent ; } } ; }", "n_tokens": 61, "n_pass": [108, 11, 8]}
{"time": "2021-02-24 11:26:42.711361", "score": "0.6902", "loss": "18.731", "code": "boolean isHelpOptionPresent(OptionSet options) { helpOptionPresent ; for (AbstractOptionSpec<?> each : recognizedOptions.toJavaUtilMap().values()) { if (each.isForHelp) {; } } ; }", "n_tokens": 58, "n_pass": [121, 13, 9]}
{"time": "2021-02-24 11:26:45.900059", "score": "0.7038", "loss": "18.7576", "code": "boolean isHelpOptionPresent(OptionSet options) {; for (AbstractOptionSpec<?> each : recognizedOptions.toJavaUtilMap().values()) { if (each.isForHelp) {; } } ; }", "n_tokens": 55, "n_pass": [130, 14, 10]}
{"time": "2021-02-24 11:26:56.081186", "score": "0.7038", "loss": "18.7576", "code": "boolean isHelpOptionPresent(OptionSet options) { for (AbstractOptionSpec<?> each : recognizedOptions.toJavaUtilMap().values()) { if (each.isForHelp) {; } } ; }", "n_tokens": 54, "n_pass": [191, 16, 11]}
{"time": "2021-02-24 11:26:58.816895", "score": "0.7038", "loss": "18.7576", "code": "boolean isHelpOptionPresent(OptionSet options) {for (AbstractOptionSpec<?> each : recognizedOptions.toJavaUtilMap().values()) { if (each.isForHelp) {; } } ; }", "n_tokens": 53, "n_pass": [192, 17, 12]}
{"time": "2021-02-24 11:27:01.568518", "score": "0.7038", "loss": "18.7576", "code": "boolean isHelpOptionPresent(OptionSet options) {for(AbstractOptionSpec<?> each : recognizedOptions.toJavaUtilMap().values()) { if (each.isForHelp) {; } } ; }", "n_tokens": 52, "n_pass": [193, 18, 13]}
{"time": "2021-02-24 11:27:04.312183", "score": "0.7038", "loss": "18.7576", "code": "boolean isHelpOptionPresent(OptionSet options) {for(AbstractOptionSpec<?>each : recognizedOptions.toJavaUtilMap().values()) { if (each.isForHelp) {; } } ; }", "n_tokens": 51, "n_pass": [199, 19, 14]}
{"time": "2021-02-24 11:27:07.060879", "score": "0.7038", "loss": "18.7576", "code": "boolean isHelpOptionPresent(OptionSet options) {for(AbstractOptionSpec<?>each: recognizedOptions.toJavaUtilMap().values()) { if (each.isForHelp) {; } } ; }", "n_tokens": 50, "n_pass": [201, 20, 15]}
{"time": "2021-02-24 11:27:09.798144", "score": "0.7038", "loss": "18.7576", "code": "boolean isHelpOptionPresent(OptionSet options) {for(AbstractOptionSpec<?>each:recognizedOptions.toJavaUtilMap().values()) { if (each.isForHelp) {; } } ; }", "n_tokens": 49, "n_pass": [203, 21, 16]}
{"time": "2021-02-24 11:27:20.891030", "score": "0.6191", "loss": "18.7808", "code": "boolean isHelpOptionPresent(OptionSet options) {for(AbstractOptionSpec<?>each:recognizedOptions.toJavaUtilMap().values()) { if (each) {; } } ; }", "n_tokens": 47, "n_pass": [213, 25, 17]}
{"time": "2021-02-24 11:27:23.613900", "score": "0.6191", "loss": "18.7808", "code": "boolean isHelpOptionPresent(OptionSet options) {for(AbstractOptionSpec<?>each:recognizedOptions.toJavaUtilMap().values()) { if (each) {; } } }", "n_tokens": 45, "n_pass": [218, 26, 18]}
{"time": "2021-02-24 11:27:27.252260", "score": "0.6191", "loss": "18.7808", "code": "boolean isHelpOptionPresent(OptionSet options){for(AbstractOptionSpec<?>each:recognizedOptions.toJavaUtilMap().values()) { if (each) {; } } }", "n_tokens": 44, "n_pass": [228, 27, 19]}
{"time": "2021-02-24 11:27:45.215813", "score": "0.6191", "loss": "18.7808", "code": "boolean isHelpOptionPresent(OptionSet options){for(AbstractOptionSpec<?>each:recognizedOptions.toJavaUtilMap().values()){ if (each) {; } } }", "n_tokens": 43, "n_pass": [295, 32, 20]}
{"time": "2021-02-24 11:27:47.927058", "score": "0.6191", "loss": "18.7808", "code": "boolean isHelpOptionPresent(OptionSet options){for(AbstractOptionSpec<?>each:recognizedOptions.toJavaUtilMap().values()){if (each) {; } } }", "n_tokens": 42, "n_pass": [297, 33, 21]}
{"time": "2021-02-24 11:27:50.671444", "score": "0.6191", "loss": "18.7808", "code": "boolean isHelpOptionPresent(OptionSet options){for(AbstractOptionSpec<?>each:recognizedOptions.toJavaUtilMap().values()){if(each) {; } } }", "n_tokens": 41, "n_pass": [299, 34, 22]}
{"time": "2021-02-24 11:27:53.414585", "score": "0.6191", "loss": "18.7808", "code": "boolean isHelpOptionPresent(OptionSet options){for(AbstractOptionSpec<?>each:recognizedOptions.toJavaUtilMap().values()){if(each){; } } }", "n_tokens": 40, "n_pass": [303, 35, 23]}
{"time": "2021-02-24 11:27:56.135565", "score": "0.6191", "loss": "18.7808", "code": "boolean isHelpOptionPresent(OptionSet options){for(AbstractOptionSpec<?>each:recognizedOptions.toJavaUtilMap().values()){if(each){ } } }", "n_tokens": 39, "n_pass": [305, 36, 24]}
{"time": "2021-02-24 11:27:58.869334", "score": "0.6191", "loss": "18.7808", "code": "boolean isHelpOptionPresent(OptionSet options){for(AbstractOptionSpec<?>each:recognizedOptions.toJavaUtilMap().values()){if(each){} } }", "n_tokens": 38, "n_pass": [306, 37, 25]}
{"time": "2021-02-24 11:28:01.618458", "score": "0.6191", "loss": "18.7808", "code": "boolean isHelpOptionPresent(OptionSet options){for(AbstractOptionSpec<?>each:recognizedOptions.toJavaUtilMap().values()){if(each){}} }", "n_tokens": 37, "n_pass": [308, 38, 26]}
{"time": "2021-02-24 11:28:04.327023", "score": "0.6191", "loss": "18.7808", "code": "boolean isHelpOptionPresent(OptionSet options){for(AbstractOptionSpec<?>each:recognizedOptions.toJavaUtilMap().values()){if(each){}}}", "n_tokens": 36, "n_pass": [310, 39, 27]}

Minimal simplified code:
boolean isHelpOptionPresent(OptionSet options){for(AbstractOptionSpec<?>each:recognizedOptions.toJavaUtilMap().values()){if(each){}}}

