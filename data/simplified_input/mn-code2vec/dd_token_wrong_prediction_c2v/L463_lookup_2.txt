
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/facebook__stetho/stetho/src/main/java/com/facebook/stetho/server/http/HandlerRegistry_lookup.java
method_name = lookup
method_body = @Nullable public synchronized HttpHandler lookup(String path) { for (int i = 0, N = mPathMatchers.size(); i < N; i++) { if (mPathMatchers.get(i).match(path)) { return mHttpHandlers.get(i); } } return null; }
predict, score, loss = getHandler, 0.8899019360542297, 6.062285423278809

Trace of simplified code(s):
{"time": "2021-02-24 00:08:55.820009", "score": "0.8899", "loss": "6.0623", "code": "@Nullable public synchronized HttpHandler lookup(String path) { for (int i = 0, N = mPathMatchers.size(); i < N; i++) { if (mPathMatchers.get(i).match(path)) { return mHttpHandlers.get(i); } } return null; }", "n_tokens": 93, "n_pass": [1, 1, 1]}
{"time": "2021-02-24 00:08:58.634611", "score": "0.884", "loss": "5.2357", "code": "synchronized HttpHandler lookup(String path) { for (int i = 0, N = mPathMatchers.size(); i < N; i++) { if (mPathMatchers.get(i).match(path)) { return mHttpHandlers.get(i); } } return null; }", "n_tokens": 88, "n_pass": [44, 2, 2]}
{"time": "2021-02-24 00:09:01.556640", "score": "0.8634", "loss": "5.3535", "code": "synchronized HttpHandler lookup(String path) { for (0, N = mPathMatchers.size(); i < N; i++) { if (mPathMatchers.get(i).match(path)) { return mHttpHandlers.get(i); } } return null; }", "n_tokens": 82, "n_pass": [48, 3, 3]}
{"time": "2021-02-24 00:09:04.342495", "score": "0.9072", "loss": "5.5891", "code": "synchronized HttpHandler lookup(String path) { for ( mPathMatchers.size(); i < N; i++) { if (mPathMatchers.get(i).match(path)) { return mHttpHandlers.get(i); } } return null; }", "n_tokens": 76, "n_pass": [49, 4, 4]}
{"time": "2021-02-24 00:09:07.144076", "score": "0.891", "loss": "5.4533", "code": "synchronized HttpHandler lookup(String path) { for (; i < N; i++) { if (mPathMatchers.get(i).match(path)) { return mHttpHandlers.get(i); } } return null; }", "n_tokens": 70, "n_pass": [50, 5, 5]}
{"time": "2021-02-24 00:09:10.017353", "score": "0.9349", "loss": "6.5613", "code": "synchronized HttpHandler lookup(String path) { for (; i < N; i++) { if (mPathMatchers.get(i).match(path)) { return ; } } return null; }", "n_tokens": 64, "n_pass": [57, 6, 6]}
{"time": "2021-02-24 00:09:12.784358", "score": "0.7866", "loss": "9.7482", "code": "synchronized HttpHandler lookup(String path) { for (; i < N; i++) { if (mPathMatchers.get(i).match(path)) { return ; } } ; }", "n_tokens": 61, "n_pass": [93, 7, 7]}
{"time": "2021-02-24 00:09:15.535618", "score": "0.7866", "loss": "9.7482", "code": "HttpHandler lookup(String path) { for (; i < N; i++) { if (mPathMatchers.get(i).match(path)) { return ; } } ; }", "n_tokens": 59, "n_pass": [94, 8, 8]}
{"time": "2021-02-24 00:09:18.738081", "score": "0.7824", "loss": "10.0239", "code": "HttpHandler lookup(String path) { for (; iN; i++) { if (mPathMatchers.get(i).match(path)) { return ; } } ; }", "n_tokens": 56, "n_pass": [101, 9, 9]}
{"time": "2021-02-24 00:09:21.505821", "score": "0.7808", "loss": "10.0418", "code": "HttpHandler lookup(String path) { for (; iN; ) { if (mPathMatchers.get(i).match(path)) { return ; } } ; }", "n_tokens": 53, "n_pass": [103, 10, 10]}
{"time": "2021-02-24 00:09:24.252256", "score": "0.7664", "loss": "10.5219", "code": "HttpHandler lookup(String path) { for (; iN; ) { if (mPathMatchers.get(i).match) { return ; } } ; }", "n_tokens": 50, "n_pass": [109, 11, 11]}
{"time": "2021-02-24 00:09:26.990030", "score": "0.7664", "loss": "10.5219", "code": "HttpHandler lookup(String path) { for (; iN; ) { if (mPathMatchers.get(i).match) {; } } ; }", "n_tokens": 47, "n_pass": [111, 12, 12]}
{"time": "2021-02-24 00:09:33.724019", "score": "0.7664", "loss": "10.5219", "code": "HttpHandler lookup(String path) { for (; iN; ) { if (mPathMatchers.get(i).match) {; } } }", "n_tokens": 45, "n_pass": [164, 13, 13]}
{"time": "2021-02-24 00:09:37.851187", "score": "0.7664", "loss": "10.5219", "code": "HttpHandler lookup(String path){ for (; iN; ) { if (mPathMatchers.get(i).match) {; } } }", "n_tokens": 44, "n_pass": [174, 14, 14]}
{"time": "2021-02-24 00:09:40.624069", "score": "0.7664", "loss": "10.5219", "code": "HttpHandler lookup(String path){for (; iN; ) { if (mPathMatchers.get(i).match) {; } } }", "n_tokens": 43, "n_pass": [176, 15, 15]}
{"time": "2021-02-24 00:09:43.394222", "score": "0.7664", "loss": "10.5219", "code": "HttpHandler lookup(String path){for(; iN; ) { if (mPathMatchers.get(i).match) {; } } }", "n_tokens": 42, "n_pass": [178, 16, 16]}
{"time": "2021-02-24 00:09:46.169119", "score": "0.7664", "loss": "10.5219", "code": "HttpHandler lookup(String path){for(;iN; ) { if (mPathMatchers.get(i).match) {; } } }", "n_tokens": 41, "n_pass": [181, 17, 17]}
{"time": "2021-02-24 00:09:48.954576", "score": "0.7671", "loss": "10.5077", "code": "HttpHandler lookup(String path){for(;N; ) { if (mPathMatchers.get(i).match) {; } } }", "n_tokens": 40, "n_pass": [182, 18, 18]}
{"time": "2021-02-24 00:09:51.701626", "score": "0.7617", "loss": "10.5975", "code": "HttpHandler lookup(String path){for(;N; ) { if (get(i).match) {; } } }", "n_tokens": 38, "n_pass": [188, 19, 19]}
{"time": "2021-02-24 00:09:54.448732", "score": "0.7697", "loss": "10.6889", "code": "HttpHandler lookup(String path){for(;N; ) { if (get(i)) {; } } }", "n_tokens": 36, "n_pass": [191, 20, 20]}
{"time": "2021-02-24 00:10:02.860524", "score": "0.7697", "loss": "10.6889", "code": "HttpHandler lookup(String path){for(;N; ) { if (get(i)) { } } }", "n_tokens": 35, "n_pass": [241, 21, 21]}
{"time": "2021-02-24 00:10:05.626652", "score": "0.7697", "loss": "10.6889", "code": "HttpHandler lookup(String path){for(;N; ) { if (get(i)) {} } }", "n_tokens": 34, "n_pass": [242, 22, 22]}
{"time": "2021-02-24 00:10:08.390144", "score": "0.7697", "loss": "10.6889", "code": "HttpHandler lookup(String path){for(;N; ) { if (get(i)) {}} }", "n_tokens": 33, "n_pass": [244, 23, 23]}
{"time": "2021-02-24 00:10:11.131041", "score": "0.7697", "loss": "10.6889", "code": "HttpHandler lookup(String path){for(;N; ) { if (get(i)) {}}}", "n_tokens": 32, "n_pass": [246, 24, 24]}
{"time": "2021-02-24 00:10:15.375932", "score": "0.7672", "loss": "10.7244", "code": "HttpHandler lookup(String path){for(;; ) { if (get(i)) {}}}", "n_tokens": 31, "n_pass": [260, 25, 25]}
{"time": "2021-02-24 00:10:18.110856", "score": "0.7672", "loss": "10.7244", "code": "HttpHandler lookup(String path){for(;;) { if (get(i)) {}}}", "n_tokens": 30, "n_pass": [262, 26, 26]}
{"time": "2021-02-24 00:10:20.844418", "score": "0.7672", "loss": "10.7244", "code": "HttpHandler lookup(String path){for(;;){ if (get(i)) {}}}", "n_tokens": 29, "n_pass": [264, 27, 27]}
{"time": "2021-02-24 00:10:23.616380", "score": "0.7672", "loss": "10.7244", "code": "HttpHandler lookup(String path){for(;;){if (get(i)) {}}}", "n_tokens": 28, "n_pass": [266, 28, 28]}
{"time": "2021-02-24 00:10:26.439568", "score": "0.7672", "loss": "10.7244", "code": "HttpHandler lookup(String path){for(;;){if(get(i)) {}}}", "n_tokens": 27, "n_pass": [268, 29, 29]}
{"time": "2021-02-24 00:10:29.182780", "score": "0.7463", "loss": "11.1208", "code": "HttpHandler lookup(String path){for(;;){if((i)) {}}}", "n_tokens": 26, "n_pass": [270, 30, 30]}
{"time": "2021-02-24 00:10:31.998991", "score": "0.7463", "loss": "11.1208", "code": "HttpHandler lookup(String path){for(;;){if((i)){}}}", "n_tokens": 25, "n_pass": [275, 31, 31]}

Minimal simplified code:
HttpHandler lookup(String path){for(;;){if((i)){}}}

