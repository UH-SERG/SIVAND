
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/bcgit__bc-java/core/src/main/java/org/bouncycastle/crypto/prng/X931RNG_process.java
method_name = process
method_body = private void process(byte[] res, byte[] a, byte[] b) { for (int i = 0; i != res.length; i++) { res[i] = (byte) (a[i] ^ b[i]); } engine.processBlock(res, 0, res, 0); }
predict, score, loss = returnByte, 0.5210856199264526, 8.117807388305664

Trace of simplified code(s):
{"time": "2021-02-24 14:45:32.367425", "score": "0.4144", "loss": "6.9408", "code": "private void process(byte[] res, byte[] a, byte[] b) { for (int i = 0; i != res.length; i++) { res[i] = (byte) (a[i] ^ b[i]); } engine.processBlock(res, 0, res, 0); }", "n_tokens": 104, "n_pass": [1, 1, 1]}
{"time": "2021-02-24 14:45:35.461965", "score": "0.4201", "loss": "6.9648", "code": "private void process( byte[] a, byte[] b) { for (int i = 0; i != res.length; i++) { res[i] = (byte) (a[i] ^ b[i]); } engine.processBlock(res, 0, res, 0); }", "n_tokens": 98, "n_pass": [45, 2, 2]}
{"time": "2021-02-24 14:45:38.101139", "score": "0.4311", "loss": "6.2027", "code": "private void process( byte[] ab) { for (int i = 0; i != res.length; i++) { res[i] = (byte) (a[i] ^ b[i]); } engine.processBlock(res, 0, res, 0); }", "n_tokens": 92, "n_pass": [47, 3, 3]}
{"time": "2021-02-24 14:45:40.787121", "score": "0.443", "loss": "6.1585", "code": "private void process( byte[] ab) { for (int i = 0; ilength; i++) { res[i] = (byte) (a[i] ^ b[i]); } engine.processBlock(res, 0, res, 0); }", "n_tokens": 86, "n_pass": [51, 4, 4]}
{"time": "2021-02-24 14:45:43.447871", "score": "0.452", "loss": "6.3408", "code": "private void process( byte[] ab) { for (int i = 0; ilength; ) { res[i] = (byte) (a[i] ^ b[i]); } engine.processBlock(res, 0, res, 0); }", "n_tokens": 83, "n_pass": [92, 5, 5]}
{"time": "2021-02-24 14:45:46.106015", "score": "0.2849", "loss": "5.175", "code": "private void process( byte[] ab) { for (int i = 0; ilength; ) { res[i] = (byte) (a[i] ^ b[i]); } engine.processBlock(res,res, 0); }", "n_tokens": 79, "n_pass": [104, 6, 6]}
{"time": "2021-02-24 14:45:49.146492", "score": "0.2924", "loss": "5.6462", "code": "private void process( byte[] ab) { for (int i ; ilength; ) { res[i] = (byte) (a[i] ^ b[i]); } engine.processBlock(res,res, 0); }", "n_tokens": 76, "n_pass": [115, 7, 7]}
{"time": "2021-02-24 14:45:55.061422", "score": "0.2715", "loss": "6.3552", "code": "private void process( byte[] ab) { for (i ; ilength; ) { res[i] = (byte) (a[i] ^ b[i]); } engine.processBlock(res,res, 0); }", "n_tokens": 74, "n_pass": [187, 8, 8]}
{"time": "2021-02-24 14:45:57.718807", "score": "0.2715", "loss": "6.398", "code": "private void process( byte[] ab) { for (; ilength; ) { res[i] = (byte) (a[i] ^ b[i]); } engine.processBlock(res,res, 0); }", "n_tokens": 72, "n_pass": [188, 9, 9]}
{"time": "2021-02-24 14:46:10.886461", "score": "0.2715", "loss": "6.398", "code": " void process( byte[] ab) { for (; ilength; ) { res[i] = (byte) (a[i] ^ b[i]); } engine.processBlock(res,res, 0); }", "n_tokens": 71, "n_pass": [215, 14, 10]}
{"time": "2021-02-24 14:46:13.529569", "score": "0.2715", "loss": "6.398", "code": "void process( byte[] ab) { for (; ilength; ) { res[i] = (byte) (a[i] ^ b[i]); } engine.processBlock(res,res, 0); }", "n_tokens": 70, "n_pass": [216, 15, 11]}
{"time": "2021-02-24 14:46:16.928921", "score": "0.2715", "loss": "6.398", "code": "void process(byte[] ab) { for (; ilength; ) { res[i] = (byte) (a[i] ^ b[i]); } engine.processBlock(res,res, 0); }", "n_tokens": 69, "n_pass": [221, 16, 12]}
{"time": "2021-02-24 14:46:19.553950", "score": "0.2715", "loss": "6.398", "code": "void process(byte[]ab) { for (; ilength; ) { res[i] = (byte) (a[i] ^ b[i]); } engine.processBlock(res,res, 0); }", "n_tokens": 68, "n_pass": [225, 17, 13]}
{"time": "2021-02-24 14:46:27.451606", "score": "0.2715", "loss": "6.398", "code": "void process(byte[]ab){ for (; ilength; ) { res[i] = (byte) (a[i] ^ b[i]); } engine.processBlock(res,res, 0); }", "n_tokens": 67, "n_pass": [229, 20, 14]}
{"time": "2021-02-24 14:46:58.665895", "score": "0.2715", "loss": "6.398", "code": "void process(byte[]ab){ for (; ilength;) { res[i] = (byte) (a[i] ^ b[i]); } engine.processBlock(res,res, 0); }", "n_tokens": 66, "n_pass": [328, 29, 15]}
{"time": "2021-02-24 14:47:01.288895", "score": "0.2715", "loss": "6.398", "code": "void process(byte[]ab){ for (; ilength;){ res[i] = (byte) (a[i] ^ b[i]); } engine.processBlock(res,res, 0); }", "n_tokens": 65, "n_pass": [330, 30, 16]}
{"time": "2021-02-24 14:47:03.933151", "score": "0.2715", "loss": "6.398", "code": "void process(byte[]ab){ for (; ilength;){res[i] = (byte) (a[i] ^ b[i]); } engine.processBlock(res,res, 0); }", "n_tokens": 64, "n_pass": [332, 31, 17]}
{"time": "2021-02-24 14:47:06.555533", "score": "0.2715", "loss": "6.398", "code": "void process(byte[]ab){ for (; ilength;){res[i]= (byte) (a[i] ^ b[i]); } engine.processBlock(res,res, 0); }", "n_tokens": 63, "n_pass": [337, 32, 18]}
{"time": "2021-02-24 14:47:09.185762", "score": "0.2715", "loss": "6.398", "code": "void process(byte[]ab){ for (; ilength;){res[i]=(byte) (a[i] ^ b[i]); } engine.processBlock(res,res, 0); }", "n_tokens": 62, "n_pass": [339, 33, 19]}
{"time": "2021-02-24 14:47:11.805214", "score": "0.2715", "loss": "6.398", "code": "void process(byte[]ab){ for (; ilength;){res[i]=(byte)(a[i] ^ b[i]); } engine.processBlock(res,res, 0); }", "n_tokens": 61, "n_pass": [343, 34, 20]}
{"time": "2021-02-24 14:47:14.426123", "score": "0.2715", "loss": "6.398", "code": "void process(byte[]ab){ for (; ilength;){res[i]=(byte)(a[i]^ b[i]); } engine.processBlock(res,res, 0); }", "n_tokens": 60, "n_pass": [349, 35, 21]}
{"time": "2021-02-24 14:47:17.060898", "score": "0.2715", "loss": "6.398", "code": "void process(byte[]ab){ for (; ilength;){res[i]=(byte)(a[i]^b[i]); } engine.processBlock(res,res, 0); }", "n_tokens": 59, "n_pass": [351, 36, 22]}
{"time": "2021-02-24 14:47:19.773362", "score": "0.2715", "loss": "6.398", "code": "void process(byte[]ab){ for (; ilength;){res[i]=(byte)(a[i]^b[i]);} engine.processBlock(res,res, 0); }", "n_tokens": 58, "n_pass": [358, 37, 23]}
{"time": "2021-02-24 14:47:22.387832", "score": "0.2715", "loss": "6.398", "code": "void process(byte[]ab){ for (; ilength;){res[i]=(byte)(a[i]^b[i]);}engine.processBlock(res,res, 0); }", "n_tokens": 57, "n_pass": [360, 38, 24]}
{"time": "2021-02-24 14:47:30.319960", "score": "0.2715", "loss": "6.398", "code": "void process(byte[]ab){ for (; ilength;){res[i]=(byte)(a[i]^b[i]);}engine.processBlock(res,res,0); }", "n_tokens": 56, "n_pass": [369, 41, 25]}
{"time": "2021-02-24 14:47:32.978479", "score": "0.2715", "loss": "6.398", "code": "void process(byte[]ab){ for (; ilength;){res[i]=(byte)(a[i]^b[i]);}engine.processBlock(res,res,0);}", "n_tokens": 55, "n_pass": [373, 42, 26]}
{"time": "2021-02-24 14:47:41.626198", "score": "0.2715", "loss": "6.398", "code": "void process(byte[]ab){for (; ilength;){res[i]=(byte)(a[i]^b[i]);}engine.processBlock(res,res,0);}", "n_tokens": 54, "n_pass": [386, 45, 27]}
{"time": "2021-02-24 14:47:44.262299", "score": "0.2715", "loss": "6.398", "code": "void process(byte[]ab){for(; ilength;){res[i]=(byte)(a[i]^b[i]);}engine.processBlock(res,res,0);}", "n_tokens": 53, "n_pass": [388, 46, 28]}
{"time": "2021-02-24 14:47:46.881579", "score": "0.2715", "loss": "6.398", "code": "void process(byte[]ab){for(;ilength;){res[i]=(byte)(a[i]^b[i]);}engine.processBlock(res,res,0);}", "n_tokens": 52, "n_pass": [391, 47, 29]}

Minimal simplified code:
void process(byte[]ab){for(;ilength;){res[i]=(byte)(a[i]^b[i]);}engine.processBlock(res,res,0);}

