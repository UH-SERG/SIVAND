
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/jamesdbloom__mockserver/mockserver-core/src/test/java/org/mockserver/client/serialization/ExpectationWithResponseTemplateSerializerTest_shouldDeserializeObject.java
method_name = shouldDeserializeObject
method_body = @Test public void shouldDeserializeObject() throws IOException { when(objectMapper.readValue(eq("requestBytes"), same(ExpectationDTO.class))).thenReturn(fullExpectationDTO); when(expectationValidator.isValid("requestBytes")).thenReturn(""); Expectation expectation = expectationSerializer.deserialize("requestBytes"); assertThat(expectation, is(fullExpectation)); }
predict, score, loss = sendRequest, 0.8359250426292419, 17.211315155029297

Trace of simplified code(s):
{"time": "2021-02-24 11:39:34.985034", "score": "0.8359", "loss": "17.2113", "code": "@Test public void shouldDeserializeObject() throws IOException { when(objectMapper.readValue(eq(\"requestBytes\"), same(ExpectationDTO.class))).thenReturn(fullExpectationDTO); when(expectationValidator.isValid(\"requestBytes\")).thenReturn(\"\"); Expectation expectation = expectationSerializer.deserialize(\"requestBytes\"); assertThat(expectation, is(fullExpectation)); }", "n_tokens": 94, "n_pass": [1, 1, 1]}
{"time": "2021-02-24 11:39:37.726417", "score": "0.8102", "loss": "16.9739", "code": "@Test public void shouldDeserializeObject() throws IOException { when(objectMapper.readValue(eq(\"requestBytes\"), same(ExpectationDTO.class))).thenReturn(fullExpectationDTO);  expectationSerializer.deserialize(\"requestBytes\"); assertThat(expectation, is(fullExpectation)); }", "n_tokens": 70, "n_pass": [10, 2, 2]}
{"time": "2021-02-24 11:39:40.462272", "score": "0.2367", "loss": "17.1269", "code": "void shouldDeserializeObject() throws IOException { when(objectMapper.readValue(eq(\"requestBytes\"), same(ExpectationDTO.class))).thenReturn(fullExpectationDTO);  expectationSerializer.deserialize(\"requestBytes\"); assertThat(expectation, is(fullExpectation)); }", "n_tokens": 65, "n_pass": [42, 3, 3]}
{"time": "2021-02-24 11:39:43.207941", "score": "0.9293", "loss": "17.4087", "code": "void shouldDeserializeObject() throws IOException { when(objectMapper.readValue(eq(\"requestBytes\"), same(ExpectationDTO.class))). expectationSerializer.deserialize(\"requestBytes\"); assertThat(expectation, is(fullExpectation)); }", "n_tokens": 59, "n_pass": [49, 4, 4]}
{"time": "2021-02-24 11:39:45.993820", "score": "0.848", "loss": "16.0299", "code": "void shouldDeserializeObject() throws IOException { when(objectMapper.readValue(eq(\"requestBytes\"), same(ExpectationDTO.class))).deserialize(\"requestBytes\"); assertThat(expectation, is(fullExpectation)); }", "n_tokens": 56, "n_pass": [80, 5, 5]}
{"time": "2021-02-24 11:39:49.208977", "score": "0.3144", "loss": "15.0166", "code": "void shouldDeserializeObject() throws IOException { when(objectMapper.readValue(eq(), same(ExpectationDTO.class))).deserialize(\"requestBytes\"); assertThat(expectation, is(fullExpectation)); }", "n_tokens": 53, "n_pass": [94, 6, 6]}
{"time": "2021-02-24 11:39:54.549786", "score": "0.6307", "loss": "15.7359", "code": "void shouldDeserializeObject() throws IOException { when(objectMapperreadValue(eq(), same(ExpectationDTO.class))).deserialize(\"requestBytes\"); assertThat(expectation, is(fullExpectation)); }", "n_tokens": 52, "n_pass": [150, 7, 7]}
{"time": "2021-02-24 11:39:57.340805", "score": "0.4547", "loss": "16.3029", "code": "void shouldDeserializeObject() throws IOException { when(objectMapper(eq(), same(ExpectationDTO.class))).deserialize(\"requestBytes\"); assertThat(expectation, is(fullExpectation)); }", "n_tokens": 51, "n_pass": [151, 8, 8]}
{"time": "2021-02-24 11:40:00.078049", "score": "0.5381", "loss": "16.1419", "code": "void shouldDeserializeObject() throws IOException { when(objectMapper(eq, same(ExpectationDTO.class))).deserialize(\"requestBytes\"); assertThat(expectation, is(fullExpectation)); }", "n_tokens": 49, "n_pass": [154, 9, 9]}
{"time": "2021-02-24 11:40:02.804647", "score": "0.5758", "loss": "15.9864", "code": "void shouldDeserializeObject() throws IOException { when(objectMapper(eqsame(ExpectationDTO.class))).deserialize(\"requestBytes\"); assertThat(expectation, is(fullExpectation)); }", "n_tokens": 47, "n_pass": [155, 10, 10]}
{"time": "2021-02-24 11:40:05.579912", "score": "0.5612", "loss": "16.8576", "code": "void shouldDeserializeObject() throws IOException { when(objectMapper(eqsame(ExpectationDTO.class))).deserialize(\"requestBytes\"); assertThat(expectationis(fullExpectation)); }", "n_tokens": 45, "n_pass": [166, 11, 11]}
{"time": "2021-02-24 11:40:09.188299", "score": "0.5612", "loss": "16.8576", "code": "void shouldDeserializeObject()throws IOException { when(objectMapper(eqsame(ExpectationDTO.class))).deserialize(\"requestBytes\"); assertThat(expectationis(fullExpectation)); }", "n_tokens": 44, "n_pass": [176, 12, 12]}
{"time": "2021-02-24 11:40:11.883013", "score": "0.5612", "loss": "16.8576", "code": "void shouldDeserializeObject()throws IOException{ when(objectMapper(eqsame(ExpectationDTO.class))).deserialize(\"requestBytes\"); assertThat(expectationis(fullExpectation)); }", "n_tokens": 43, "n_pass": [180, 13, 13]}
{"time": "2021-02-24 11:40:14.584439", "score": "0.5612", "loss": "16.8576", "code": "void shouldDeserializeObject()throws IOException{when(objectMapper(eqsame(ExpectationDTO.class))).deserialize(\"requestBytes\"); assertThat(expectationis(fullExpectation)); }", "n_tokens": 42, "n_pass": [182, 14, 14]}
{"time": "2021-02-24 11:40:17.298491", "score": "0.3414", "loss": "16.6652", "code": "void shouldDeserializeObject()throws IOException{(objectMapper(eqsame(ExpectationDTO.class))).deserialize(\"requestBytes\"); assertThat(expectationis(fullExpectation)); }", "n_tokens": 41, "n_pass": [183, 15, 15]}
{"time": "2021-02-24 11:40:20.033078", "score": "0.222", "loss": "17.4479", "code": "void shouldDeserializeObject()throws IOException{((eqsame(ExpectationDTO.class))).deserialize(\"requestBytes\"); assertThat(expectationis(fullExpectation)); }", "n_tokens": 40, "n_pass": [185, 16, 16]}
{"time": "2021-02-24 11:40:22.770202", "score": "0.2698", "loss": "16.8633", "code": "void shouldDeserializeObject()throws IOException{((same(ExpectationDTO.class))).deserialize(\"requestBytes\"); assertThat(expectationis(fullExpectation)); }", "n_tokens": 39, "n_pass": [187, 17, 17]}
{"time": "2021-02-24 11:40:25.476539", "score": "0.3979", "loss": "18.7099", "code": "void shouldDeserializeObject()throws IOException{((same(ExpectationDTO.class))).deserialize(\"requestBytes\");(expectationis(fullExpectation)); }", "n_tokens": 37, "n_pass": [196, 18, 18]}
{"time": "2021-02-24 11:40:30.337429", "score": "0.5669", "loss": "17.6792", "code": "void shouldDeserializeObject()throws IOException{((same(ExpectationDTO.class))).deserialize(\"requestBytes\");(expectation(fullExpectation)); }", "n_tokens": 36, "n_pass": [247, 19, 19]}
{"time": "2021-02-24 11:40:33.034332", "score": "0.5", "loss": "18.2479", "code": "void shouldDeserializeObject()throws IOException{((same(ExpectationDTO.class))).deserialize(\"requestBytes\");(expectation()); }", "n_tokens": 35, "n_pass": [248, 20, 20]}
{"time": "2021-02-24 11:40:35.740041", "score": "0.5", "loss": "18.2479", "code": "void shouldDeserializeObject()throws IOException{((same(ExpectationDTO.class))).deserialize(\"requestBytes\");(expectation());}", "n_tokens": 34, "n_pass": [252, 21, 21]}
{"time": "2021-02-24 11:40:39.331880", "score": "0.5176", "loss": "19.2411", "code": "void shouldDeserializeObject()throws IOException{(((ExpectationDTO.class))).deserialize(\"requestBytes\");(expectation());}", "n_tokens": 33, "n_pass": [265, 22, 22]}
{"time": "2021-02-24 11:40:42.029611", "score": "0.5174", "loss": "19.2282", "code": "void shouldDeserializeObject()throws IOException{(((ExpectationDTOclass))).deserialize(\"requestBytes\");(expectation());}", "n_tokens": 32, "n_pass": [268, 23, 23]}
{"time": "2021-02-24 11:40:44.734315", "score": "0.5174", "loss": "19.2282", "code": "void shouldDeserializeObject()throws IOException{(((ExpectationDTO))).deserialize(\"requestBytes\");(expectation());}", "n_tokens": 31, "n_pass": [269, 24, 24]}

Minimal simplified code:
void shouldDeserializeObject()throws IOException{(((ExpectationDTO))).deserialize("requestBytes");(expectation());}

