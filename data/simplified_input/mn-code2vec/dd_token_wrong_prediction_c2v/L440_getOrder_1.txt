
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/codefollower__Tomcat-Research/test/org/apache/tomcat/util/descriptor/web/TestWebXmlOrdering_getOrder.java
method_name = getOrder
method_body = private String getOrder(Set<WebXml> ordered) { StringBuilder sb = new StringBuilder(ordered.size()); for (WebXml webXml : ordered) { sb.append(webXml.getName()); } return sb.toString(); }
predict, score, loss = toStrings, 0.4171590209007263, 13.484160423278809

Trace of simplified code(s):
{"time": "2021-02-24 06:01:14.865445", "score": "0.4172", "loss": "13.4842", "code": "private String getOrder(Set<WebXml> ordered) { StringBuilder sb = new StringBuilder(ordered.size()); for (WebXml webXml : ordered) { sb.append(webXml.getName()); } return sb.toString(); }", "n_tokens": 72, "n_pass": [1, 1, 1]}
{"time": "2021-02-24 06:01:20.973239", "score": "0.4172", "loss": "13.4842", "code": "String getOrder(Set<WebXml> ordered) { StringBuilder sb = new StringBuilder(ordered.size()); for (WebXml webXml : ordered) { sb.append(webXml.getName()); } return sb.toString(); }", "n_tokens": 70, "n_pass": [92, 3, 2]}
{"time": "2021-02-24 06:01:28.926815", "score": "0.3563", "loss": "13.306", "code": "String getOrder(Set<WebXml> ordered) { StringBuilder sb = StringBuilder(ordered.size()); for (WebXml webXml : ordered) { sb.append(webXml.getName()); } return sb.toString(); }", "n_tokens": 68, "n_pass": [102, 6, 3]}
{"time": "2021-02-24 06:01:31.573587", "score": "0.4048", "loss": "13.967", "code": "String getOrder(Set<WebXml> ordered) { StringBuilder sb = StringBuilder(size()); for (WebXml webXml : ordered) { sb.append(webXml.getName()); } return sb.toString(); }", "n_tokens": 66, "n_pass": [104, 7, 4]}
{"time": "2021-02-24 06:01:36.975028", "score": "0.5076", "loss": "14.1324", "code": "String getOrder(Set<WebXml> ordered) { StringBuilder sb = StringBuilder(size()); for (WebXml webXml : ordered) { sb.append(webXml.getName()); } returntoString(); }", "n_tokens": 63, "n_pass": [120, 9, 5]}
{"time": "2021-02-24 06:01:39.613333", "score": "0.6477", "loss": "13.4771", "code": "String getOrder(Set<WebXml> ordered) { StringBuilder sb = StringBuilder(size()); for (WebXml webXml : ordered) { sb.append(webXml.getName()); } return; }", "n_tokens": 60, "n_pass": [121, 10, 6]}
{"time": "2021-02-24 06:01:42.684767", "score": "0.588", "loss": "13.5549", "code": "String getOrder(Set<WebXml> ordered) { sb = StringBuilder(size()); for (WebXml webXml : ordered) { sb.append(webXml.getName()); } return; }", "n_tokens": 58, "n_pass": [130, 11, 7]}
{"time": "2021-02-24 06:01:53.697990", "score": "0.588", "loss": "13.5549", "code": "String getOrder(Set<WebXml> ordered) { sb= StringBuilder(size()); for (WebXml webXml : ordered) { sb.append(webXml.getName()); } return; }", "n_tokens": 57, "n_pass": [210, 13, 8]}
{"time": "2021-02-24 06:01:56.313643", "score": "0.588", "loss": "13.5549", "code": "String getOrder(Set<WebXml> ordered) { sb=StringBuilder(size()); for (WebXml webXml : ordered) { sb.append(webXml.getName()); } return; }", "n_tokens": 56, "n_pass": [212, 14, 9]}
{"time": "2021-02-24 06:01:58.930386", "score": "0.6356", "loss": "13.7408", "code": "String getOrder(Set<WebXml> ordered) { sb=(size()); for (WebXml webXml : ordered) { sb.append(webXml.getName()); } return; }", "n_tokens": 55, "n_pass": [213, 15, 10]}
{"time": "2021-02-24 06:02:01.553899", "score": "0.6356", "loss": "13.7408", "code": "String getOrder(Set<WebXml> ordered) { sb=(size());for (WebXml webXml : ordered) { sb.append(webXml.getName()); } return; }", "n_tokens": 54, "n_pass": [220, 16, 11]}
{"time": "2021-02-24 06:02:04.187649", "score": "0.6356", "loss": "13.7408", "code": "String getOrder(Set<WebXml> ordered) { sb=(size());for(WebXml webXml : ordered) { sb.append(webXml.getName()); } return; }", "n_tokens": 53, "n_pass": [222, 17, 12]}
{"time": "2021-02-24 06:02:06.807328", "score": "0.6356", "loss": "13.7408", "code": "String getOrder(Set<WebXml> ordered) { sb=(size());for(WebXml webXml: ordered) { sb.append(webXml.getName()); } return; }", "n_tokens": 52, "n_pass": [227, 18, 13]}
{"time": "2021-02-24 06:02:09.437580", "score": "0.6356", "loss": "13.7408", "code": "String getOrder(Set<WebXml> ordered) { sb=(size());for(WebXml webXml:ordered) { sb.append(webXml.getName()); } return; }", "n_tokens": 51, "n_pass": [229, 19, 14]}
{"time": "2021-02-24 06:02:12.041718", "score": "0.6356", "loss": "13.7408", "code": "String getOrder(Set<WebXml> ordered) { sb=(size());for(WebXml webXml:ordered){ sb.append(webXml.getName()); } return; }", "n_tokens": 50, "n_pass": [232, 20, 15]}
{"time": "2021-02-24 06:02:14.657889", "score": "0.6356", "loss": "13.7408", "code": "String getOrder(Set<WebXml> ordered) { sb=(size());for(WebXml webXml:ordered){sb.append(webXml.getName()); } return; }", "n_tokens": 49, "n_pass": [234, 21, 16]}
{"time": "2021-02-24 06:02:22.549591", "score": "0.6356", "loss": "13.7408", "code": "String getOrder(Set<WebXml> ordered) { sb=(size());for(WebXml webXml:ordered){sb.append(webXml.getName()); }  }", "n_tokens": 47, "n_pass": [245, 24, 17]}
{"time": "2021-02-24 06:02:26.357732", "score": "0.6356", "loss": "13.7408", "code": "String getOrder(Set<WebXml>ordered) { sb=(size());for(WebXml webXml:ordered){sb.append(webXml.getName()); }  }", "n_tokens": 46, "n_pass": [255, 25, 18]}
{"time": "2021-02-24 06:02:28.981694", "score": "0.6356", "loss": "13.7408", "code": "String getOrder(Set<WebXml>ordered){ sb=(size());for(WebXml webXml:ordered){sb.append(webXml.getName()); }  }", "n_tokens": 45, "n_pass": [258, 26, 19]}
{"time": "2021-02-24 06:02:31.617591", "score": "0.6356", "loss": "13.7408", "code": "String getOrder(Set<WebXml>ordered){sb=(size());for(WebXml webXml:ordered){sb.append(webXml.getName()); }  }", "n_tokens": 44, "n_pass": [260, 27, 20]}
{"time": "2021-02-24 06:02:44.768995", "score": "0.6356", "loss": "13.7408", "code": "String getOrder(Set<WebXml>ordered){sb=(size());for(WebXml webXml:ordered){sb.append(webXml.getName());}  }", "n_tokens": 43, "n_pass": [315, 31, 21]}
{"time": "2021-02-24 06:02:47.397776", "score": "0.6356", "loss": "13.7408", "code": "String getOrder(Set<WebXml>ordered){sb=(size());for(WebXml webXml:ordered){sb.append(webXml.getName());} }", "n_tokens": 42, "n_pass": [317, 32, 22]}
{"time": "2021-02-24 06:02:50.025299", "score": "0.6356", "loss": "13.7408", "code": "String getOrder(Set<WebXml>ordered){sb=(size());for(WebXml webXml:ordered){sb.append(webXml.getName());}}", "n_tokens": 41, "n_pass": [318, 33, 23]}

Minimal simplified code:
String getOrder(Set<WebXml>ordered){sb=(size());for(WebXml webXml:ordered){sb.append(webXml.getName());}}

