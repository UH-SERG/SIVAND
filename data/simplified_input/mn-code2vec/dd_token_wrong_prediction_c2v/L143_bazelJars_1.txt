
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/georgewfraser__vscode-javac/src/main/java/org/javacs/InferConfig_bazelJars.java
method_name = bazelJars
method_body = private Stream<Path> bazelJars(Path bazelGenFiles) { try { Path target = Files.readSymbolicLink(bazelGenFiles); return Files.walk(target).filter(file -> file.getFileName().toString().endsWith(".jar")); } catch (IOException e) { throw new RuntimeException(e); } }
predict, score, loss = accept, 0.2500963807106018, 15.702991485595703

Trace of simplified code(s):
{"time": "2021-02-24 05:41:21.998521", "score": "0.2501", "loss": "15.703", "code": "private Stream<Path> bazelJars(Path bazelGenFiles) { try { Path target = Files.readSymbolicLink(bazelGenFiles); return Files.walk(target).filter(file -> file.getFileName().toString().endsWith(\".jar\")); } catch (IOException e) { throw new RuntimeException(e); } }", "n_tokens": 95, "n_pass": [1, 1, 1]}
{"time": "2021-02-24 05:41:35.369764", "score": "0.2501", "loss": "15.703", "code": "Stream<Path> bazelJars(Path bazelGenFiles) { try { Path target = Files.readSymbolicLink(bazelGenFiles); return Files.walk(target).filter(file -> file.getFileName().toString().endsWith(\".jar\")); } catch (IOException e) { throw new RuntimeException(e); } }", "n_tokens": 93, "n_pass": [92, 6, 2]}
{"time": "2021-02-24 05:41:45.986427", "score": "0.2627", "loss": "15.706", "code": "Stream<Path> bazelJars(Path bazelGenFiles) { try { Path target = Files.readSymbolicLink(bazelGenFiles); return Files.walk(target).filter(file -> file.getFileNametoString().endsWith(\".jar\")); } catch (IOException e) { throw new RuntimeException(e); } }", "n_tokens": 90, "n_pass": [109, 10, 3]}
{"time": "2021-02-24 05:41:51.265013", "score": "0.2846", "loss": "15.7221", "code": "Stream<Path> bazelJars(Path bazelGenFiles) { try { Path target = Files.readSymbolicLink(bazelGenFiles); return Files.walk(target).filter(file -> file.getFileNametoString().endsWith(\".jar\")); } catch (IOException e) { throwRuntimeException(e); } }", "n_tokens": 87, "n_pass": [119, 12, 4]}
{"time": "2021-02-24 05:42:01.946233", "score": "0.2599", "loss": "15.8644", "code": "Stream<Path> bazelJars(Path bazelGenFiles) { try { Path target = Files.readSymbolicLink(bazelGenFiles); return Files.walk(target).filter(file -> toString().endsWith(\".jar\")); } catch (IOException e) { throwRuntimeException(e); } }", "n_tokens": 84, "n_pass": [139, 16, 5]}
{"time": "2021-02-24 05:42:21.804921", "score": "0.2407", "loss": "15.8629", "code": "Stream<Path> bazelJars(Path bazelGenFiles) { try { Path target = Files.readSymbolicLink(bazelGenFiles); return Files.walk(target).filter(file -> toString().endsWith(\".jar\")); } catch (IOException e) { (e); } }", "n_tokens": 82, "n_pass": [243, 22, 6]}
{"time": "2021-02-24 05:42:24.874640", "score": "0.2407", "loss": "15.8629", "code": "Stream<Path>bazelJars(Path bazelGenFiles) { try { Path target = Files.readSymbolicLink(bazelGenFiles); return Files.walk(target).filter(file -> toString().endsWith(\".jar\")); } catch (IOException e) { (e); } }", "n_tokens": 81, "n_pass": [252, 23, 7]}
{"time": "2021-02-24 05:42:27.526827", "score": "0.2407", "loss": "15.8629", "code": "Stream<Path>bazelJars(Path bazelGenFiles){ try { Path target = Files.readSymbolicLink(bazelGenFiles); return Files.walk(target).filter(file -> toString().endsWith(\".jar\")); } catch (IOException e) { (e); } }", "n_tokens": 80, "n_pass": [259, 24, 8]}
{"time": "2021-02-24 05:42:30.178377", "score": "0.2407", "loss": "15.8629", "code": "Stream<Path>bazelJars(Path bazelGenFiles){try { Path target = Files.readSymbolicLink(bazelGenFiles); return Files.walk(target).filter(file -> toString().endsWith(\".jar\")); } catch (IOException e) { (e); } }", "n_tokens": 79, "n_pass": [261, 25, 9]}
{"time": "2021-02-24 05:42:32.821769", "score": "0.2407", "loss": "15.8629", "code": "Stream<Path>bazelJars(Path bazelGenFiles){try{ Path target = Files.readSymbolicLink(bazelGenFiles); return Files.walk(target).filter(file -> toString().endsWith(\".jar\")); } catch (IOException e) { (e); } }", "n_tokens": 78, "n_pass": [263, 26, 10]}
{"time": "2021-02-24 05:42:35.450593", "score": "0.2407", "loss": "15.8629", "code": "Stream<Path>bazelJars(Path bazelGenFiles){try{Path target = Files.readSymbolicLink(bazelGenFiles); return Files.walk(target).filter(file -> toString().endsWith(\".jar\")); } catch (IOException e) { (e); } }", "n_tokens": 77, "n_pass": [265, 27, 11]}
{"time": "2021-02-24 05:42:46.066730", "score": "0.2407", "loss": "15.8629", "code": "Stream<Path>bazelJars(Path bazelGenFiles){try{Path target= Files.readSymbolicLink(bazelGenFiles); return Files.walk(target).filter(file -> toString().endsWith(\".jar\")); } catch (IOException e) { (e); } }", "n_tokens": 76, "n_pass": [269, 31, 12]}
{"time": "2021-02-24 05:42:48.713042", "score": "0.2407", "loss": "15.8629", "code": "Stream<Path>bazelJars(Path bazelGenFiles){try{Path target=Files.readSymbolicLink(bazelGenFiles); return Files.walk(target).filter(file -> toString().endsWith(\".jar\")); } catch (IOException e) { (e); } }", "n_tokens": 75, "n_pass": [271, 32, 13]}
{"time": "2021-02-24 05:42:53.973069", "score": "0.4541", "loss": "16.0387", "code": "Stream<Path>bazelJars(Path bazelGenFiles){try{Path target=Files.readSymbolicLink(bazelGenFiles); Files.walk(target).filter(file -> toString().endsWith(\".jar\")); } catch (IOException e) { (e); } }", "n_tokens": 73, "n_pass": [278, 34, 14]}
{"time": "2021-02-24 05:43:12.905879", "score": "0.2139", "loss": "17.4199", "code": "Stream<Path>bazelJars(Path bazelGenFiles){try{Path target=FilesreadSymbolicLink(bazelGenFiles); Files.walk(target).filter(file -> toString().endsWith(\".jar\")); } catch (IOException e) { (e); } }", "n_tokens": 72, "n_pass": [321, 41, 15]}
{"time": "2021-02-24 05:43:15.520228", "score": "0.2279", "loss": "17.4214", "code": "Stream<Path>bazelJars(Path bazelGenFiles){try{Path target=Files(bazelGenFiles); Files.walk(target).filter(file -> toString().endsWith(\".jar\")); } catch (IOException e) { (e); } }", "n_tokens": 71, "n_pass": [322, 42, 16]}
{"time": "2021-02-24 05:43:18.172044", "score": "0.2556", "loss": "16.955", "code": "Stream<Path>bazelJars(Path bazelGenFiles){try{Path target=Files(bazelGenFiles); walk(target).filter(file -> toString().endsWith(\".jar\")); } catch (IOException e) { (e); } }", "n_tokens": 69, "n_pass": [326, 43, 17]}
{"time": "2021-02-24 05:43:31.758574", "score": "0.2767", "loss": "17.1449", "code": "Stream<Path>bazelJars(Path bazelGenFiles){try{Path =Files(bazelGenFiles); walk(target).filter(file -> toString().endsWith(\".jar\")); } catch (IOException e) { (e); } }", "n_tokens": 68, "n_pass": [365, 48, 18]}
{"time": "2021-02-24 05:43:34.366963", "score": "0.3012", "loss": "17.1272", "code": "Stream<Path>bazelJars(Path bazelGenFiles){try{Path =(bazelGenFiles); walk(target).filter(file -> toString().endsWith(\".jar\")); } catch (IOException e) { (e); } }", "n_tokens": 67, "n_pass": [367, 49, 19]}
{"time": "2021-02-24 05:43:45.324057", "score": "0.3012", "loss": "17.1272", "code": "Stream<Path>bazelJars(Path bazelGenFiles){try{Path=(bazelGenFiles); walk(target).filter(file -> toString().endsWith(\".jar\")); } catch (IOException e) { (e); } }", "n_tokens": 66, "n_pass": [408, 53, 20]}
{"time": "2021-02-24 05:43:47.943697", "score": "0.3108", "loss": "16.8824", "code": "Stream<Path>bazelJars(Path bazelGenFiles){try{Path(bazelGenFiles); walk(target).filter(file -> toString().endsWith(\".jar\")); } catch (IOException e) { (e); } }", "n_tokens": 65, "n_pass": [409, 54, 21]}
{"time": "2021-02-24 05:44:03.819990", "score": "0.3108", "loss": "16.8824", "code": "Stream<Path>bazelJars(Path bazelGenFiles){try{Path(bazelGenFiles); walk(target).filter(file-> toString().endsWith(\".jar\")); } catch (IOException e) { (e); } }", "n_tokens": 64, "n_pass": [505, 58, 22]}
{"time": "2021-02-24 05:44:09.093532", "score": "0.3108", "loss": "16.8824", "code": "Stream<Path>bazelJars(Path bazelGenFiles){try{Path(bazelGenFiles); walk(target).filter(file->toString().endsWith(\".jar\")); } catch (IOException e) { (e); } }", "n_tokens": 63, "n_pass": [507, 60, 23]}
{"time": "2021-02-24 05:44:11.727386", "score": "0.3108", "loss": "16.8824", "code": "Stream<Path>bazelJars(Path bazelGenFiles){try{Path(bazelGenFiles); walk(target).filter(file->toString().endsWith(\"jar\")); } catch (IOException e) { (e); } }", "n_tokens": 62, "n_pass": [515, 61, 24]}
{"time": "2021-02-24 05:44:16.966406", "score": "0.3108", "loss": "16.8824", "code": "Stream<Path>bazelJars(Path bazelGenFiles){try{Path(bazelGenFiles); walk(target).filter(file->toString().endsWith(\"jar\"));} catch (IOException e) { (e); } }", "n_tokens": 61, "n_pass": [521, 63, 25]}
{"time": "2021-02-24 05:44:19.582754", "score": "0.3108", "loss": "16.8824", "code": "Stream<Path>bazelJars(Path bazelGenFiles){try{Path(bazelGenFiles); walk(target).filter(file->toString().endsWith(\"jar\"));}catch (IOException e) { (e); } }", "n_tokens": 60, "n_pass": [523, 64, 26]}
{"time": "2021-02-24 05:44:22.219660", "score": "0.3108", "loss": "16.8824", "code": "Stream<Path>bazelJars(Path bazelGenFiles){try{Path(bazelGenFiles); walk(target).filter(file->toString().endsWith(\"jar\"));}catch(IOException e) { (e); } }", "n_tokens": 59, "n_pass": [525, 65, 27]}
{"time": "2021-02-24 05:44:24.858868", "score": "0.3108", "loss": "16.8824", "code": "Stream<Path>bazelJars(Path bazelGenFiles){try{Path(bazelGenFiles); walk(target).filter(file->toString().endsWith(\"jar\"));}catch(IOException e){ (e); } }", "n_tokens": 58, "n_pass": [531, 66, 28]}
{"time": "2021-02-24 05:44:27.489096", "score": "0.3108", "loss": "16.8824", "code": "Stream<Path>bazelJars(Path bazelGenFiles){try{Path(bazelGenFiles); walk(target).filter(file->toString().endsWith(\"jar\"));}catch(IOException e){(e); } }", "n_tokens": 57, "n_pass": [533, 67, 29]}
{"time": "2021-02-24 05:44:30.110662", "score": "0.3108", "loss": "16.8824", "code": "Stream<Path>bazelJars(Path bazelGenFiles){try{Path(bazelGenFiles); walk(target).filter(file->toString().endsWith(\"jar\"));}catch(IOException e){(e);} }", "n_tokens": 56, "n_pass": [538, 68, 30]}
{"time": "2021-02-24 05:44:32.730122", "score": "0.3108", "loss": "16.8824", "code": "Stream<Path>bazelJars(Path bazelGenFiles){try{Path(bazelGenFiles); walk(target).filter(file->toString().endsWith(\"jar\"));}catch(IOException e){(e);}}", "n_tokens": 55, "n_pass": [540, 69, 31]}
{"time": "2021-02-24 05:44:41.009084", "score": "0.3108", "loss": "16.8824", "code": "Stream<Path>bazelJars(Path bazelGenFiles){try{Path(bazelGenFiles);walk(target).filter(file->toString().endsWith(\"jar\"));}catch(IOException e){(e);}}", "n_tokens": 54, "n_pass": [560, 72, 32]}
{"time": "2021-02-24 05:44:46.245856", "score": "0.2511", "loss": "17.2886", "code": "Stream<Path>bazelJars(Path bazelGenFiles){try{Path(bazelGenFiles);walk().filter(file->toString().endsWith(\"jar\"));}catch(IOException e){(e);}}", "n_tokens": 53, "n_pass": [563, 74, 33]}
{"time": "2021-02-24 05:44:59.790223", "score": "0.2168", "loss": "17.3949", "code": "Stream<Path>bazelJars(Path bazelGenFiles){try{Path();walk().filter(file->toString().endsWith(\"jar\"));}catch(IOException e){(e);}}", "n_tokens": 52, "n_pass": [612, 79, 34]}

Minimal simplified code:
Stream<Path>bazelJars(Path bazelGenFiles){try{Path();walk().filter(file->toString().endsWith("jar"));}catch(IOException e){(e);}}

