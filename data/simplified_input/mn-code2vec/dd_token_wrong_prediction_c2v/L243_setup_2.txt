
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/rakam-io__rakam/rakam-postgresql/src/main/java/org/rakam/postgresql/plugin/user/PostgresqlUserModule_setup.java
method_name = setup
method_body = @Override protected void setup(Binder binder) { JDBCConfig config = buildConfigObject(JDBCConfig.class, "store.adapter.postgresql"); binder.bind(JDBCPoolDataSource.class).annotatedWith(Names.named("store.adapter.postgresql")).toInstance(JDBCPoolDataSource.getOrCreateDataSource(config)); binder.bind(PostgresqlQueryExecutor.class).in(Scopes.SINGLETON); binder.bind(UserStorage.class).to(AbstractPostgresqlUserStorage.class).in(Scopes.SINGLETON); binder.bind(boolean.class).annotatedWith(Names.named("user.storage.postgresql")).toInstance("postgresql".equals(true)); }
predict, score, loss = configure, 0.9903141856193542, 7.048703670501709

Trace of simplified code(s):
{"time": "2021-02-24 06:12:06.490273", "score": "0.994", "loss": "8.6673", "code": "@Override protected void setup(Binder binder) { JDBCConfig config = buildConfigObject(JDBCConfig.class, \"store.adapter.postgresql\"); binder.bind(JDBCPoolDataSource.class).annotatedWith(Names.named(\"store.adapter.postgresql\")).toInstance(JDBCPoolDataSource.getOrCreateDataSource(config)); binder.bind(PostgresqlQueryExecutor.class).in(Scopes.SINGLETON); binder.bind(UserStorage.class).to(AbstractPostgresqlUserStorage.class).in(Scopes.SINGLETON); binder.bind(boolean.class).annotatedWith(Names.named(\"user.storage.postgresql\")).toInstance(\"postgresql\".equals(true)); }", "n_tokens": 155, "n_pass": [1, 1, 1]}
{"time": "2021-02-24 06:12:09.202334", "score": "0.997", "loss": "9.6295", "code": "@Override protected void setup(Binder binder) { JDBCConfig config = buildConfigObject(JDBCConfig.class, \"store.adapter.postgresql\");bind(PostgresqlQueryExecutor.class).in(Scopes.SINGLETON); binder.bind(UserStorage.class).to(AbstractPostgresqlUserStorage.class).in(Scopes.SINGLETON); binder.bind(boolean.class).annotatedWith(Names.named(\"user.storage.postgresql\")).toInstance(\"postgresql\".equals(true)); }", "n_tokens": 116, "n_pass": [9, 2, 2]}
{"time": "2021-02-24 06:12:11.853742", "score": "0.9549", "loss": "6.9029", "code": "@Override protected void setup(Binder binder) { JDBCConfig config = buildConfigObject(JDBCConfig.class, \"store.adapter.postgresql\");binder.bind(boolean.class).annotatedWith(Names.named(\"user.storage.postgresql\")).toInstance(\"postgresql\".equals(true)); }", "n_tokens": 77, "n_pass": [10, 3, 3]}
{"time": "2021-02-24 06:12:14.520063", "score": "0.948", "loss": "7.9364", "code": " void setup(Binder binder) { JDBCConfig config = buildConfigObject(JDBCConfig.class, \"store.adapter.postgresql\");binder.bind(boolean.class).annotatedWith(Names.named(\"user.storage.postgresql\")).toInstance(\"postgresql\".equals(true)); }", "n_tokens": 73, "n_pass": [59, 4, 4]}
{"time": "2021-02-24 06:12:17.191011", "score": "0.9991", "loss": "10.6481", "code": " void setup(Binder binder) { JDBCConfigbuildConfigObject(JDBCConfig.class, \"store.adapter.postgresql\");binder.bind(boolean.class).annotatedWith(Names.named(\"user.storage.postgresql\")).toInstance(\"postgresql\".equals(true)); }", "n_tokens": 68, "n_pass": [63, 5, 5]}
{"time": "2021-02-24 06:12:19.883758", "score": "0.9973", "loss": "8.9443", "code": " void setup(Binder binder) { JDBCConfigbuildConfigObject(JDBCConfig, \"store.adapter.postgresql\");binder.bind(boolean.class).annotatedWith(Names.named(\"user.storage.postgresql\")).toInstance(\"postgresql\".equals(true)); }", "n_tokens": 66, "n_pass": [108, 6, 6]}
{"time": "2021-02-24 06:12:22.519862", "score": "0.9973", "loss": "8.9443", "code": " void setup(Binder binder) { JDBCConfigbuildConfigObject(JDBCConfig, \"store.postgresql\");binder.bind(boolean.class).annotatedWith(Names.named(\"user.storage.postgresql\")).toInstance(\"postgresql\".equals(true)); }", "n_tokens": 64, "n_pass": [111, 7, 7]}
{"time": "2021-02-24 06:12:25.160769", "score": "0.9962", "loss": "8.5117", "code": " void setup(Binder binder) { JDBCConfigbuildConfigObject(JDBCConfig, \"store\");binder.bind(boolean.class).annotatedWith(Names.named(\"user.storage.postgresql\")).toInstance(\"postgresql\".equals(true)); }", "n_tokens": 62, "n_pass": [112, 8, 8]}
{"time": "2021-02-24 06:12:27.845879", "score": "0.9892", "loss": "9.6694", "code": " void setup(Binder binder) { JDBCConfigbuildConfigObject(JDBCConfig, \"store\").bind(boolean.class).annotatedWith(Names.named(\"user.storage.postgresql\")).toInstance(\"postgresql\".equals(true)); }", "n_tokens": 60, "n_pass": [114, 9, 9]}
{"time": "2021-02-24 06:12:30.455905", "score": "0.9815", "loss": "8.7511", "code": " void setup(Binder binder) { JDBCConfigbuildConfigObject(JDBCConfig, \"store\").bind(boolean.class).annotatedWith(Names.named(\"user.\")).toInstance(\"postgresql\".equals(true)); }", "n_tokens": 57, "n_pass": [121, 10, 10]}
{"time": "2021-02-24 06:12:35.624243", "score": "0.9896", "loss": "9.7197", "code": " void setup(Binder binder) { JDBCConfigbuildConfigObject(JDBCConfig, \"store\").bind(boolean.class).annotatedWith(Names.named(\"\")).toInstance(\"postgresql\".equals(true)); }", "n_tokens": 55, "n_pass": [193, 11, 11]}
{"time": "2021-02-24 06:12:38.259374", "score": "0.9896", "loss": "9.7197", "code": "void setup(Binder binder) { JDBCConfigbuildConfigObject(JDBCConfig, \"store\").bind(boolean.class).annotatedWith(Names.named(\"\")).toInstance(\"postgresql\".equals(true)); }", "n_tokens": 54, "n_pass": [203, 12, 12]}
{"time": "2021-02-24 06:12:41.662428", "score": "0.9896", "loss": "9.7197", "code": "void setup(Binder binder){ JDBCConfigbuildConfigObject(JDBCConfig, \"store\").bind(boolean.class).annotatedWith(Names.named(\"\")).toInstance(\"postgresql\".equals(true)); }", "n_tokens": 53, "n_pass": [212, 13, 13]}
{"time": "2021-02-24 06:12:44.290832", "score": "0.9896", "loss": "9.7197", "code": "void setup(Binder binder){JDBCConfigbuildConfigObject(JDBCConfig, \"store\").bind(boolean.class).annotatedWith(Names.named(\"\")).toInstance(\"postgresql\".equals(true)); }", "n_tokens": 52, "n_pass": [214, 14, 14]}
{"time": "2021-02-24 06:12:46.938356", "score": "0.9896", "loss": "9.7197", "code": "void setup(Binder binder){buildConfigObject(JDBCConfig, \"store\").bind(boolean.class).annotatedWith(Names.named(\"\")).toInstance(\"postgresql\".equals(true)); }", "n_tokens": 51, "n_pass": [215, 15, 15]}
{"time": "2021-02-24 06:12:49.589232", "score": "0.9896", "loss": "9.7197", "code": "void setup(Binder binder){buildConfigObject(JDBCConfig,\"store\").bind(boolean.class).annotatedWith(Names.named(\"\")).toInstance(\"postgresql\".equals(true)); }", "n_tokens": 50, "n_pass": [220, 16, 16]}
{"time": "2021-02-24 06:12:52.253473", "score": "0.9954", "loss": "10.3824", "code": "void setup(Binder binder){buildConfigObject(JDBCConfig,\"\").bind(boolean.class).annotatedWith(Names.named(\"\")).toInstance(\"postgresql\".equals(true)); }", "n_tokens": 49, "n_pass": [222, 17, 17]}
{"time": "2021-02-24 06:12:54.937115", "score": "0.9848", "loss": "10.4464", "code": "void setup(Binder binder){buildConfigObject(JDBCConfig,\"\").bind(booleanclass).annotatedWith(Names.named(\"\")).toInstance(\"postgresql\".equals(true)); }", "n_tokens": 48, "n_pass": [229, 18, 18]}
{"time": "2021-02-24 06:12:57.588123", "score": "0.9664", "loss": "10.0704", "code": "void setup(Binder binder){buildConfigObject(JDBCConfig,\"\").bind(booleanclass).annotatedWith(Namesnamed(\"\")).toInstance(\"postgresql\".equals(true)); }", "n_tokens": 47, "n_pass": [236, 19, 19]}
{"time": "2021-02-24 06:13:00.191439", "score": "0.9722", "loss": "10.2321", "code": "void setup(Binder binder){buildConfigObject(JDBCConfig,\"\").bind(booleanclass).annotatedWith(Names(\"\")).toInstance(\"postgresql\".equals(true)); }", "n_tokens": 46, "n_pass": [237, 20, 20]}
{"time": "2021-02-24 06:13:03.577233", "score": "0.9594", "loss": "10.1074", "code": "void setup(Binder binder){buildConfigObject(JDBCConfig,\"\").bind(booleanclass).annotatedWith((\"\")).toInstance(\"postgresql\".equals(true)); }", "n_tokens": 45, "n_pass": [273, 21, 21]}
{"time": "2021-02-24 06:13:07.681336", "score": "0.9312", "loss": "11.8606", "code": "void setup(Binder binder){buildConfigObject(JDBCConfig,\"\").bind(booleanclass).annotatedWith((\"\")).toInstance(\"\".equals(true)); }", "n_tokens": 44, "n_pass": [331, 22, 22]}
{"time": "2021-02-24 06:13:10.351441", "score": "0.9004", "loss": "11.8984", "code": "void setup(Binder binder){buildConfigObject(JDBCConfig,\"\").bind(booleanclass).annotatedWith((\"\")).toInstance(\"\".equals()); }", "n_tokens": 43, "n_pass": [336, 23, 23]}
{"time": "2021-02-24 06:13:12.978258", "score": "0.9004", "loss": "11.8984", "code": "void setup(Binder binder){buildConfigObject(JDBCConfig,\"\").bind(booleanclass).annotatedWith((\"\")).toInstance(\"\".equals());}", "n_tokens": 42, "n_pass": [340, 24, 24]}

Minimal simplified code:
void setup(Binder binder){buildConfigObject(JDBCConfig,"").bind(booleanclass).annotatedWith(("")).toInstance("".equals());}

