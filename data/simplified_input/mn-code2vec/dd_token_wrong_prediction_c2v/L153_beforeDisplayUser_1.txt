
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/OpenRock__OpenAM/openam-core/src/main/java/com/sun/identity/common/BackwardCompSupport_beforeDisplayUser.java
method_name = beforeDisplayUser
method_body = private void beforeDisplayUser(Set attributeSchemas) { for (Iterator iter = attributeSchemas.iterator(); iter.hasNext(); ) { AttributeSchema as = (AttributeSchema) iter.next(); String name = as.getName(); if (name.equals(namingAttribute) || name.equals("ChangePassword")) { iter.remove(); } } }
predict, score, loss = changePassword, 0.49300265312194824, 21.674625396728516

Trace of simplified code(s):
{"time": "2021-02-24 06:10:10.161016", "score": "0.493", "loss": "21.6746", "code": "private void beforeDisplayUser(Set attributeSchemas) { for (Iterator iter = attributeSchemas.iterator(); iter.hasNext(); ) { AttributeSchema as = (AttributeSchema) iter.next(); String name = as.getName(); if (name.equals(namingAttribute) || name.equals(\"ChangePassword\")) { iter.remove(); } } }", "n_tokens": 107, "n_pass": [1, 1, 1]}
{"time": "2021-02-24 06:10:12.867562", "score": "0.497", "loss": "22.3486", "code": "private void beforeDisplayUser(Set attributeSchemas) { for (Iterator iter = attributeSchemas.iterator(); iter.hasNext(); ) {next(); String name = as.getName(); if (name.equals(namingAttribute) || name.equals(\"ChangePassword\")) { iter.remove(); } } }", "n_tokens": 94, "n_pass": [23, 2, 2]}
{"time": "2021-02-24 06:10:15.511721", "score": "0.5043", "loss": "22.381", "code": "private void beforeDisplayUser(Set attributeSchemas) { for (Iterator iter = attributeSchemas.iterator(); iter.hasNext(); ) {getName(); if (name.equals(namingAttribute) || name.equals(\"ChangePassword\")) { iter.remove(); } } }", "n_tokens": 81, "n_pass": [24, 3, 3]}
{"time": "2021-02-24 06:10:20.805857", "score": "0.5243", "loss": "22.5839", "code": "private void beforeDisplayUser(Set attributeSchemas) { for (Iterator iter = attributeSchemas.iterator(); iter.hasNext(); ) {; if (name.equals(namingAttribute) || name.equals(\"ChangePassword\")) { iter.remove(); } } }", "n_tokens": 78, "n_pass": [80, 5, 4]}
{"time": "2021-02-24 06:10:23.899577", "score": "0.5052", "loss": "22.8089", "code": "private void beforeDisplayUser() { for (Iterator iter = attributeSchemas.iterator(); iter.hasNext(); ) {; if (name.equals(namingAttribute) || name.equals(\"ChangePassword\")) { iter.remove(); } } }", "n_tokens": 75, "n_pass": [93, 6, 5]}
{"time": "2021-02-24 06:10:26.593666", "score": "0.4951", "loss": "22.6036", "code": "private void beforeDisplayUser() { for (Iterator iter =iterator(); iter.hasNext(); ) {; if (name.equals(namingAttribute) || name.equals(\"ChangePassword\")) { iter.remove(); } } }", "n_tokens": 72, "n_pass": [98, 7, 6]}
{"time": "2021-02-24 06:10:34.419992", "score": "0.5521", "loss": "22.8163", "code": "private void beforeDisplayUser() { for (Iterator iter =iterator(); iter(); ) {; if (name.equals(namingAttribute) || name.equals(\"ChangePassword\")) { iter.remove(); } } }", "n_tokens": 70, "n_pass": [168, 9, 7]}
{"time": "2021-02-24 06:10:37.053672", "score": "0.5521", "loss": "22.8163", "code": "private void beforeDisplayUser() { for (Iterator iter =iterator(); iter; ) {; if (name.equals(namingAttribute) || name.equals(\"ChangePassword\")) { iter.remove(); } } }", "n_tokens": 68, "n_pass": [169, 10, 8]}
{"time": "2021-02-24 06:10:39.733194", "score": "0.5592", "loss": "22.7918", "code": "private void beforeDisplayUser() { for (Iterator iter =iterator(); iter; ) {; if (equals(namingAttribute) || name.equals(\"ChangePassword\")) { iter.remove(); } } }", "n_tokens": 66, "n_pass": [175, 11, 9]}
{"time": "2021-02-24 06:10:42.405785", "score": "0.4306", "loss": "22.3602", "code": "private void beforeDisplayUser() { for (Iterator iter =iterator(); iter; ) {; if (equals(namingAttribute)| name.equals(\"ChangePassword\")) { iter.remove(); } } }", "n_tokens": 64, "n_pass": [178, 12, 10]}
{"time": "2021-02-24 06:10:45.086878", "score": "0.5481", "loss": "21.119", "code": "private void beforeDisplayUser() { for (Iterator iter =iterator(); iter; ) {; if (equals(namingAttribute)| equals(\"ChangePassword\")) { iter.remove(); } } }", "n_tokens": 62, "n_pass": [180, 13, 11]}
{"time": "2021-02-24 06:10:47.697145", "score": "0.6169", "loss": "21.5101", "code": "private void beforeDisplayUser() { for (Iterator iter =iterator(); iter; ) {; if (equals(namingAttribute)| equals(\"ChangePassword\")) { remove(); } } }", "n_tokens": 60, "n_pass": [186, 14, 12]}
{"time": "2021-02-24 06:10:50.331078", "score": "0.6169", "loss": "21.5101", "code": " void beforeDisplayUser() { for (Iterator iter =iterator(); iter; ) {; if (equals(namingAttribute)| equals(\"ChangePassword\")) { remove(); } } }", "n_tokens": 59, "n_pass": [192, 15, 13]}
{"time": "2021-02-24 06:10:52.950640", "score": "0.6169", "loss": "21.5101", "code": "void beforeDisplayUser() { for (Iterator iter =iterator(); iter; ) {; if (equals(namingAttribute)| equals(\"ChangePassword\")) { remove(); } } }", "n_tokens": 58, "n_pass": [193, 16, 14]}
{"time": "2021-02-24 06:10:56.360572", "score": "0.6169", "loss": "21.5101", "code": "void beforeDisplayUser(){ for (Iterator iter =iterator(); iter; ) {; if (equals(namingAttribute)| equals(\"ChangePassword\")) { remove(); } } }", "n_tokens": 57, "n_pass": [199, 17, 15]}
{"time": "2021-02-24 06:10:59.015959", "score": "0.6169", "loss": "21.5101", "code": "void beforeDisplayUser(){for (Iterator iter =iterator(); iter; ) {; if (equals(namingAttribute)| equals(\"ChangePassword\")) { remove(); } } }", "n_tokens": 56, "n_pass": [201, 18, 16]}
{"time": "2021-02-24 06:11:01.640271", "score": "0.6169", "loss": "21.5101", "code": "void beforeDisplayUser(){for(Iterator iter =iterator(); iter; ) {; if (equals(namingAttribute)| equals(\"ChangePassword\")) { remove(); } } }", "n_tokens": 55, "n_pass": [203, 19, 17]}
{"time": "2021-02-24 06:11:04.261137", "score": "0.7589", "loss": "22.389", "code": "void beforeDisplayUser(){for(Iterator =iterator(); iter; ) {; if (equals(namingAttribute)| equals(\"ChangePassword\")) { remove(); } } }", "n_tokens": 53, "n_pass": [205, 20, 18]}
{"time": "2021-02-24 06:11:06.871416", "score": "0.8735", "loss": "23.1298", "code": "void beforeDisplayUser(){for(Iteratoriterator(); iter; ) {; if (equals(namingAttribute)| equals(\"ChangePassword\")) { remove(); } } }", "n_tokens": 51, "n_pass": [206, 21, 19]}
{"time": "2021-02-24 06:11:09.478888", "score": "0.92", "loss": "23.3241", "code": "void beforeDisplayUser(){for(Iteratoriterator();; ) {; if (equals(namingAttribute)| equals(\"ChangePassword\")) { remove(); } } }", "n_tokens": 49, "n_pass": [209, 22, 20]}
{"time": "2021-02-24 06:11:17.874701", "score": "0.92", "loss": "23.3241", "code": "void beforeDisplayUser(){for(Iteratoriterator();; ) { if (equals(namingAttribute)| equals(\"ChangePassword\")) { remove(); } } }", "n_tokens": 48, "n_pass": [281, 23, 21]}
{"time": "2021-02-24 06:11:20.513695", "score": "0.92", "loss": "23.3241", "code": "void beforeDisplayUser(){for(Iteratoriterator();; ) {if (equals(namingAttribute)| equals(\"ChangePassword\")) { remove(); } } }", "n_tokens": 47, "n_pass": [282, 24, 22]}
{"time": "2021-02-24 06:11:23.138422", "score": "0.92", "loss": "23.3241", "code": "void beforeDisplayUser(){for(Iteratoriterator();; ) {if(equals(namingAttribute)| equals(\"ChangePassword\")) { remove(); } } }", "n_tokens": 46, "n_pass": [284, 25, 23]}
{"time": "2021-02-24 06:11:25.737225", "score": "0.9321", "loss": "23.5735", "code": "void beforeDisplayUser(){for(Iteratoriterator();; ) {if((namingAttribute)| equals(\"ChangePassword\")) { remove(); } } }", "n_tokens": 45, "n_pass": [286, 26, 24]}
{"time": "2021-02-24 06:11:28.328897", "score": "0.554", "loss": "24.9678", "code": "void beforeDisplayUser(){for(Iteratoriterator();; ) {if((namingAttribute) equals(\"ChangePassword\")) { remove(); } } }", "n_tokens": 44, "n_pass": [290, 27, 25]}
{"time": "2021-02-24 06:11:30.908707", "score": "0.554", "loss": "24.9678", "code": "void beforeDisplayUser(){for(Iteratoriterator();; ) {if((namingAttribute)equals(\"ChangePassword\")) { remove(); } } }", "n_tokens": 43, "n_pass": [291, 28, 26]}
{"time": "2021-02-24 06:11:33.513156", "score": "0.8602", "loss": "24.7616", "code": "void beforeDisplayUser(){for(Iteratoriterator();; ) {if((namingAttribute)(\"ChangePassword\")) { remove(); } } }", "n_tokens": 42, "n_pass": [292, 29, 27]}
{"time": "2021-02-24 06:11:38.698462", "score": "0.8602", "loss": "24.7616", "code": "void beforeDisplayUser(){for(Iteratoriterator();; ) {if((namingAttribute)(\"ChangePassword\")){ remove(); } } }", "n_tokens": 41, "n_pass": [299, 31, 28]}
{"time": "2021-02-24 06:11:41.293667", "score": "0.8602", "loss": "24.7616", "code": "void beforeDisplayUser(){for(Iteratoriterator();; ) {if((namingAttribute)(\"ChangePassword\")){remove(); } } }", "n_tokens": 40, "n_pass": [301, 32, 29]}
{"time": "2021-02-24 06:11:43.896142", "score": "0.8602", "loss": "24.7616", "code": "void beforeDisplayUser(){for(Iteratoriterator();; ) {if((namingAttribute)(\"ChangePassword\")){remove();} } }", "n_tokens": 39, "n_pass": [306, 33, 30]}
{"time": "2021-02-24 06:11:46.493755", "score": "0.8602", "loss": "24.7616", "code": "void beforeDisplayUser(){for(Iteratoriterator();; ) {if((namingAttribute)(\"ChangePassword\")){remove();}} }", "n_tokens": 38, "n_pass": [308, 34, 31]}
{"time": "2021-02-24 06:11:49.090754", "score": "0.8602", "loss": "24.7616", "code": "void beforeDisplayUser(){for(Iteratoriterator();; ) {if((namingAttribute)(\"ChangePassword\")){remove();}}}", "n_tokens": 37, "n_pass": [310, 35, 32]}
{"time": "2021-02-24 06:11:52.451158", "score": "0.8032", "loss": "24.3269", "code": "void beforeDisplayUser(){for(iterator();; ) {if((namingAttribute)(\"ChangePassword\")){remove();}}}", "n_tokens": 36, "n_pass": [320, 36, 33]}
{"time": "2021-02-24 06:11:55.039493", "score": "0.8032", "loss": "24.3269", "code": "void beforeDisplayUser(){for(iterator();;) {if((namingAttribute)(\"ChangePassword\")){remove();}}}", "n_tokens": 35, "n_pass": [326, 37, 34]}
{"time": "2021-02-24 06:11:57.637393", "score": "0.8032", "loss": "24.3269", "code": "void beforeDisplayUser(){for(iterator();;){if((namingAttribute)(\"ChangePassword\")){remove();}}}", "n_tokens": 34, "n_pass": [328, 38, 35]}

Minimal simplified code:
void beforeDisplayUser(){for(iterator();;){if((namingAttribute)("ChangePassword")){remove();}}}

