
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/bcgit__bc-java/tls/src/main/java/org/bouncycastle/tls/TlsECDHKeyExchange_processClientKeyExchange.java
method_name = processClientKeyExchange
method_body = public void processClientKeyExchange(InputStream input) throws IOException { if (ecdhPeerCertificate != null) { return; } byte[] point = TlsUtils.readOpaque8(input); processEphemeral(serverECPointFormats, point); }
predict, score, loss = compute, 0.9798650741577148, 28.35658836364746

Trace of simplified code(s):
{"time": "2021-02-24 05:17:09.402522", "score": "0.9799", "loss": "28.3566", "code": "public void processClientKeyExchange(InputStream input) throws IOException { if (ecdhPeerCertificate != null) { return; } byte[] point = TlsUtils.readOpaque8(input); processEphemeral(serverECPointFormats, point); }", "n_tokens": 62, "n_pass": [1, 1, 1]}
{"time": "2021-02-24 05:17:12.832055", "score": "0.9928", "loss": "28.5371", "code": "public void processClientKeyExchange(InputStream input) { if (ecdhPeerCertificate != null) { return; } byte[] point = TlsUtils.readOpaque8(input); processEphemeral(serverECPointFormats, point); }", "n_tokens": 58, "n_pass": [47, 2, 2]}
{"time": "2021-02-24 05:17:15.448499", "score": "0.9933", "loss": "28.7166", "code": "public void processClientKeyExchange(InputStream input) { if (ecdhPeerCertificate ) { return; } byte[] point = TlsUtils.readOpaque8(input); processEphemeral(serverECPointFormats, point); }", "n_tokens": 54, "n_pass": [50, 3, 3]}
{"time": "2021-02-24 05:17:18.065591", "score": "0.7243", "loss": "23.1089", "code": "public void processClientKeyExchange(InputStream input) { if (ecdhPeerCertificate ) { return; } point = TlsUtils.readOpaque8(input); processEphemeral(serverECPointFormats, point); }", "n_tokens": 50, "n_pass": [53, 4, 4]}
{"time": "2021-02-24 05:17:20.713661", "score": "0.8502", "loss": "25.245", "code": "public void processClientKeyExchange(InputStream input) { if (ecdhPeerCertificate ) { return; } TlsUtils.readOpaque8(input); processEphemeral(serverECPointFormats, point); }", "n_tokens": 46, "n_pass": [54, 5, 5]}
{"time": "2021-02-24 05:17:23.346597", "score": "0.3217", "loss": "17.7456", "code": "public void processClientKeyExchange(InputStream input) { if (ecdhPeerCertificate ) { return; } TlsUtils.readOpaque; processEphemeral(serverECPointFormats, point); }", "n_tokens": 42, "n_pass": [56, 6, 6]}
{"time": "2021-02-24 05:17:25.952693", "score": "0.8299", "loss": "19.5616", "code": "public void processClientKeyExchange(InputStream input) { if (ecdhPeerCertificate ) { return; } TlsUtils.readOpaque; processEphemeral(); }", "n_tokens": 38, "n_pass": [58, 7, 7]}
{"time": "2021-02-24 05:17:32.334605", "score": "0.8299", "loss": "19.5616", "code": " void processClientKeyExchange(InputStream input) { if (ecdhPeerCertificate ) { return; } TlsUtils.readOpaque; processEphemeral(); }", "n_tokens": 37, "n_pass": [91, 9, 8]}
{"time": "2021-02-24 05:17:34.936882", "score": "0.8299", "loss": "19.5616", "code": "void processClientKeyExchange(InputStream input) { if (ecdhPeerCertificate ) { return; } TlsUtils.readOpaque; processEphemeral(); }", "n_tokens": 36, "n_pass": [92, 10, 9]}
{"time": "2021-02-24 05:17:37.939539", "score": "0.8299", "loss": "19.5616", "code": "void processClientKeyExchange(InputStream input) { if (ecdhPeerCertificate ) {  } TlsUtils.readOpaque; processEphemeral(); }", "n_tokens": 34, "n_pass": [103, 11, 10]}
{"time": "2021-02-24 05:17:40.535693", "score": "0.8265", "loss": "19.6778", "code": "void processClientKeyExchange(InputStream input) { if (ecdhPeerCertificate ) {  } TlsUtils; processEphemeral(); }", "n_tokens": 32, "n_pass": [106, 12, 11]}
{"time": "2021-02-24 05:17:53.780998", "score": "0.8265", "loss": "19.6778", "code": "void processClientKeyExchange(InputStream input) { if (ecdhPeerCertificate ) {  } TlsUtils;processEphemeral(); }", "n_tokens": 31, "n_pass": [156, 15, 12]}
{"time": "2021-02-24 05:17:56.378221", "score": "0.8265", "loss": "19.6778", "code": "void processClientKeyExchange(InputStream input) { if (ecdhPeerCertificate ) {  } TlsUtils;processEphemeral();}", "n_tokens": 30, "n_pass": [161, 16, 13]}
{"time": "2021-02-24 05:17:59.737081", "score": "0.8265", "loss": "19.6778", "code": "void processClientKeyExchange(InputStream input){ if (ecdhPeerCertificate ) {  } TlsUtils;processEphemeral();}", "n_tokens": 29, "n_pass": [171, 17, 14]}
{"time": "2021-02-24 05:18:02.345546", "score": "0.8265", "loss": "19.6778", "code": "void processClientKeyExchange(InputStream input){if (ecdhPeerCertificate ) {  } TlsUtils;processEphemeral();}", "n_tokens": 28, "n_pass": [173, 18, 15]}
{"time": "2021-02-24 05:18:04.945983", "score": "0.8265", "loss": "19.6778", "code": "void processClientKeyExchange(InputStream input){if(ecdhPeerCertificate ) {  } TlsUtils;processEphemeral();}", "n_tokens": 27, "n_pass": [175, 19, 16]}
{"time": "2021-02-24 05:18:07.547484", "score": "0.8265", "loss": "19.6778", "code": "void processClientKeyExchange(InputStream input){if(ecdhPeerCertificate) {  } TlsUtils;processEphemeral();}", "n_tokens": 26, "n_pass": [178, 20, 17]}
{"time": "2021-02-24 05:18:10.164432", "score": "0.8265", "loss": "19.6778", "code": "void processClientKeyExchange(InputStream input){if(ecdhPeerCertificate){  } TlsUtils;processEphemeral();}", "n_tokens": 25, "n_pass": [180, 21, 18]}
{"time": "2021-02-24 05:18:12.765414", "score": "0.8265", "loss": "19.6778", "code": "void processClientKeyExchange(InputStream input){if(ecdhPeerCertificate){ } TlsUtils;processEphemeral();}", "n_tokens": 24, "n_pass": [182, 22, 19]}
{"time": "2021-02-24 05:18:15.363856", "score": "0.8265", "loss": "19.6778", "code": "void processClientKeyExchange(InputStream input){if(ecdhPeerCertificate){} TlsUtils;processEphemeral();}", "n_tokens": 23, "n_pass": [183, 23, 20]}
{"time": "2021-02-24 05:18:17.964949", "score": "0.8265", "loss": "19.6778", "code": "void processClientKeyExchange(InputStream input){if(ecdhPeerCertificate){}TlsUtils;processEphemeral();}", "n_tokens": 22, "n_pass": [185, 24, 21]}

Minimal simplified code:
void processClientKeyExchange(InputStream input){if(ecdhPeerCertificate){}TlsUtils;processEphemeral();}

