
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/OpenRock__OpenAM/openam-core/src/test/java/org/forgerock/openam/cts/api/tokens/TokenTest_shouldCopyToken.java
method_name = shouldCopyToken
method_body = @Test public void shouldCopyToken() { Token token = new Token("badger", TokenType.SAML2); token.setAttribute(CoreTokenField.INTEGER_ONE, 1234); token.setAttribute(CoreTokenField.STRING_ONE, "Weasel"); token.setAttribute(CoreTokenField.DATE_ONE, Calendar.getInstance()); Token result = new Token(token); TokenTestUtils.assertTokenEquals(result, token); }
predict, score, loss = run, 0.16085919737815857, 15.683984756469727

Trace of simplified code(s):
{"time": "2021-02-24 06:04:45.642511", "score": "0.1427", "loss": "14.8247", "code": "@Test public void shouldCopyToken() { Token token = new Token(\"badger\", TokenType.SAML2); token.setAttribute(CoreTokenField.INTEGER_ONE, 1234); token.setAttribute(CoreTokenField.STRING_ONE, \"Weasel\"); token.setAttribute(CoreTokenField.DATE_ONE, Calendar.getInstance()); Token result = new Token(token); TokenTestUtils.assertTokenEquals(result, token); }", "n_tokens": 115, "n_pass": [1, 1, 1]}
{"time": "2021-02-24 06:04:48.352904", "score": "0.7585", "loss": "15.7884", "code": "@Test public void shouldCopyToken() { Token token = new Token(\"badger\", CoreTokenField.STRING_ONE, \"Weasel\"); token.setAttribute(CoreTokenField.DATE_ONE, Calendar.getInstance()); Token result = new Token(token); TokenTestUtils.assertTokenEquals(result, token); }", "n_tokens": 86, "n_pass": [9, 2, 2]}
{"time": "2021-02-24 06:04:51.049653", "score": "0.779", "loss": "15.9129", "code": "@Test public void shouldCopyToken() { Token token = new Token(\"badger\", \"Weasel\"); token.setAttribute(CoreTokenField.DATE_ONE, Calendar.getInstance()); Token result = new Token(token); TokenTestUtils.assertTokenEquals(result, token); }", "n_tokens": 79, "n_pass": [36, 3, 3]}
{"time": "2021-02-24 06:04:56.786975", "score": "0.9015", "loss": "15.1766", "code": "@Test public void shouldCopyToken() { TokenToken(\"badger\", \"Weasel\"); token.setAttribute(CoreTokenField.DATE_ONE, Calendar.getInstance()); Token result = new Token(token); TokenTestUtils.assertTokenEquals(result, token); }", "n_tokens": 72, "n_pass": [45, 5, 4]}
{"time": "2021-02-24 06:04:59.413599", "score": "0.5775", "loss": "14.5083", "code": "@Test public void shouldCopyToken() { TokenToken(\"badger\", \"Weasel\"); token.setAttribute(CoreTokenField.DATE_ONE, Calendar.getInstance()); Token result = new Token(result, token); }", "n_tokens": 64, "n_pass": [52, 6, 5]}
{"time": "2021-02-24 06:05:02.432704", "score": "0.5707", "loss": "14.559", "code": "@Test public void shouldCopyToken() { TokenToken(\"badger\", \"Weasel\"); token.setAttribute(CoreTokenField.DATE_ONE, Calendar.getInstance()); Token result = new Token(); }", "n_tokens": 60, "n_pass": [80, 7, 6]}
{"time": "2021-02-24 06:05:05.065718", "score": "0.4236", "loss": "14.3232", "code": "public void shouldCopyToken() { TokenToken(\"badger\", \"Weasel\"); token.setAttribute(CoreTokenField.DATE_ONE, Calendar.getInstance()); Token result = new Token(); }", "n_tokens": 57, "n_pass": [81, 8, 7]}
{"time": "2021-02-24 06:05:14.437737", "score": "0.4236", "loss": "14.3232", "code": " void shouldCopyToken() { TokenToken(\"badger\", \"Weasel\"); token.setAttribute(CoreTokenField.DATE_ONE, Calendar.getInstance()); Token result = new Token(); }", "n_tokens": 56, "n_pass": [130, 11, 8]}
{"time": "2021-02-24 06:05:17.047540", "score": "0.4236", "loss": "14.3232", "code": "void shouldCopyToken() { TokenToken(\"badger\", \"Weasel\"); token.setAttribute(CoreTokenField.DATE_ONE, Calendar.getInstance()); Token result = new Token(); }", "n_tokens": 55, "n_pass": [131, 12, 9]}
{"time": "2021-02-24 06:05:22.702079", "score": "0.8005", "loss": "18.4019", "code": "void shouldCopyToken() { TokenToken(\"badger\", \"Weasel\"); token(CoreTokenField.DATE_ONE, Calendar.getInstance()); Token result = new Token(); }", "n_tokens": 53, "n_pass": [145, 14, 10]}
{"time": "2021-02-24 06:05:33.306581", "score": "0.812", "loss": "18.5223", "code": "void shouldCopyToken() { TokenToken(\"badger\", \"Weasel\"); token(CoreTokenField.DATE_ONE, getInstance()); Token result = new Token(); }", "n_tokens": 51, "n_pass": [150, 18, 11]}
{"time": "2021-02-24 06:05:35.973274", "score": "0.788", "loss": "18.7138", "code": "void shouldCopyToken() { TokenToken(\"badger\", \"Weasel\"); token(CoreTokenField.DATE_ONE, getInstance()); result = new Token(); }", "n_tokens": 49, "n_pass": [154, 19, 12]}
{"time": "2021-02-24 06:05:38.562047", "score": "0.8004", "loss": "18.3849", "code": "void shouldCopyToken() { TokenToken(\"badger\", \"Weasel\"); token(CoreTokenField.DATE_ONE, getInstance()); result = Token(); }", "n_tokens": 47, "n_pass": [157, 20, 13]}
{"time": "2021-02-24 06:05:56.637698", "score": "0.8004", "loss": "18.3849", "code": "void shouldCopyToken() { TokenToken(\"badger\", \"Weasel\"); token(CoreTokenField.DATE_ONE, getInstance()); result = Token();}", "n_tokens": 46, "n_pass": [230, 25, 14]}
{"time": "2021-02-24 06:06:00.002973", "score": "0.8004", "loss": "18.3849", "code": "void shouldCopyToken(){ TokenToken(\"badger\", \"Weasel\"); token(CoreTokenField.DATE_ONE, getInstance()); result = Token();}", "n_tokens": 45, "n_pass": [236, 26, 15]}
{"time": "2021-02-24 06:06:02.614083", "score": "0.8004", "loss": "18.3849", "code": "void shouldCopyToken(){TokenToken(\"badger\", \"Weasel\"); token(CoreTokenField.DATE_ONE, getInstance()); result = Token();}", "n_tokens": 44, "n_pass": [238, 27, 16]}
{"time": "2021-02-24 06:06:10.463432", "score": "0.9768", "loss": "23.0079", "code": "void shouldCopyToken(){TokenToken(\"\", \"Weasel\"); token(CoreTokenField.DATE_ONE, getInstance()); result = Token();}", "n_tokens": 43, "n_pass": [243, 30, 17]}
{"time": "2021-02-24 06:06:13.091378", "score": "0.9768", "loss": "23.0079", "code": "void shouldCopyToken(){TokenToken(\"\",\"Weasel\"); token(CoreTokenField.DATE_ONE, getInstance()); result = Token();}", "n_tokens": 42, "n_pass": [246, 31, 18]}
{"time": "2021-02-24 06:06:15.697560", "score": "0.9821", "loss": "23.4353", "code": "void shouldCopyToken(){TokenToken(\"\",\"\"); token(CoreTokenField.DATE_ONE, getInstance()); result = Token();}", "n_tokens": 41, "n_pass": [248, 32, 19]}
{"time": "2021-02-24 06:06:18.332936", "score": "0.9821", "loss": "23.4353", "code": "void shouldCopyToken(){TokenToken(\"\",\"\");token(CoreTokenField.DATE_ONE, getInstance()); result = Token();}", "n_tokens": 40, "n_pass": [252, 33, 20]}
{"time": "2021-02-24 06:06:20.980645", "score": "0.9931", "loss": "23.7249", "code": "void shouldCopyToken(){TokenToken(\"\",\"\");token(CoreTokenFieldDATE_ONE, getInstance()); result = Token();}", "n_tokens": 39, "n_pass": [256, 34, 21]}
{"time": "2021-02-24 06:06:23.584475", "score": "0.9931", "loss": "23.7249", "code": "void shouldCopyToken(){TokenToken(\"\",\"\");token(CoreTokenField_ONE, getInstance()); result = Token();}", "n_tokens": 38, "n_pass": [257, 35, 22]}
{"time": "2021-02-24 06:06:26.178764", "score": "0.9931", "loss": "23.7249", "code": "void shouldCopyToken(){TokenToken(\"\",\"\");token(CoreTokenFieldONE, getInstance()); result = Token();}", "n_tokens": 37, "n_pass": [258, 36, 23]}
{"time": "2021-02-24 06:06:28.789703", "score": "0.9931", "loss": "23.7249", "code": "void shouldCopyToken(){TokenToken(\"\",\"\");token(CoreTokenField, getInstance()); result = Token();}", "n_tokens": 36, "n_pass": [259, 37, 24]}
{"time": "2021-02-24 06:06:31.381126", "score": "0.9931", "loss": "23.7249", "code": "void shouldCopyToken(){TokenToken(\"\",\"\");token(CoreTokenField,getInstance()); result = Token();}", "n_tokens": 35, "n_pass": [261, 38, 25]}
{"time": "2021-02-24 06:06:34.022533", "score": "0.9931", "loss": "23.7249", "code": "void shouldCopyToken(){TokenToken(\"\",\"\");token(CoreTokenField,getInstance());result = Token();}", "n_tokens": 34, "n_pass": [267, 39, 26]}
{"time": "2021-02-24 06:06:36.647286", "score": "0.9931", "loss": "23.7249", "code": "void shouldCopyToken(){TokenToken(\"\",\"\");token(CoreTokenField,getInstance());result= Token();}", "n_tokens": 33, "n_pass": [269, 40, 27]}
{"time": "2021-02-24 06:06:39.239925", "score": "0.9931", "loss": "23.7249", "code": "void shouldCopyToken(){TokenToken(\"\",\"\");token(CoreTokenField,getInstance());result=Token();}", "n_tokens": 32, "n_pass": [271, 41, 28]}
{"time": "2021-02-24 06:06:47.919994", "score": "0.9946", "loss": "24.2491", "code": "void shouldCopyToken(){TokenToken(\"\",\"\");token(CoreTokenFieldgetInstance());result=Token();}", "n_tokens": 31, "n_pass": [296, 44, 29]}
{"time": "2021-02-24 06:06:50.528938", "score": "0.9946", "loss": "24.2491", "code": "void shouldCopyToken(){TokenToken(\"\",\"\");token(CoreTokenField());result=Token();}", "n_tokens": 30, "n_pass": [297, 45, 30]}
{"time": "2021-02-24 06:06:53.182129", "score": "0.9989", "loss": "25.403", "code": "void shouldCopyToken(){TokenToken(\"\",\"\");token(CoreTokenField());resultToken();}", "n_tokens": 29, "n_pass": [303, 46, 31]}
{"time": "2021-02-24 06:06:55.770684", "score": "0.9984", "loss": "25.9478", "code": "void shouldCopyToken(){TokenToken(\"\",\"\");token(CoreTokenField());result();}", "n_tokens": 28, "n_pass": [304, 47, 32]}
{"time": "2021-02-24 06:07:04.309676", "score": "0.9992", "loss": "27.7843", "code": "void shouldCopyToken(){TokenToken(\"\",\"\");(CoreTokenField());result();}", "n_tokens": 27, "n_pass": [325, 50, 33]}

Minimal simplified code:
void shouldCopyToken(){TokenToken("","");(CoreTokenField());result();}

