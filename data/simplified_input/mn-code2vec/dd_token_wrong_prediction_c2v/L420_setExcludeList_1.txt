
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/bladecoder__bladecoder-adventure-engine/blade-engine/src/com/bladecoder/engine/ui/TesterBot_setExcludeList.java
method_name = setExcludeList
method_body = public void setExcludeList(String l) { String[] split = l.split(","); excludeList.clear(); for (int i = 0; i < split.length; i++) excludeList.add(split[i].trim()); }
predict, score, loss = load, 0.27158719301223755, 6.740434646606445

Trace of simplified code(s):
{"time": "2021-02-23 17:41:56.448252", "score": "0.2716", "loss": "6.7404", "code": "public void setExcludeList(String l) { String[] split = l.split(\",\"); excludeList.clear(); for (int i = 0; i < split.length; i++) excludeList.add(split[i].trim()); }", "n_tokens": 80, "n_pass": [1, 1, 1]}
{"time": "2021-02-23 17:42:02.253100", "score": "0.2716", "loss": "6.7404", "code": "void setExcludeList(String l) { String[] split = l.split(\",\"); excludeList.clear(); for (int i = 0; i < split.length; i++) excludeList.add(split[i].trim()); }", "n_tokens": 78, "n_pass": [92, 3, 2]}
{"time": "2021-02-23 17:42:05.343560", "score": "0.3354", "loss": "6.6782", "code": "void setExcludeList(String l) { String split = l.split(\",\"); excludeList.clear(); for (int i = 0; i < split.length; i++) excludeList.add(split[i].trim()); }", "n_tokens": 76, "n_pass": [99, 4, 3]}
{"time": "2021-02-23 17:42:08.005922", "score": "0.4854", "loss": "7.1834", "code": "void setExcludeList(String l) { String = l.split(\",\"); excludeList.clear(); for (int i = 0; i < split.length; i++) excludeList.add(split[i].trim()); }", "n_tokens": 74, "n_pass": [100, 5, 4]}
{"time": "2021-02-23 17:42:10.669150", "score": "0.4167", "loss": "7.2567", "code": "void setExcludeList(String l) { String = l(\",\"); excludeList.clear(); for (int i = 0; i < split.length; i++) excludeList.add(split[i].trim()); }", "n_tokens": 72, "n_pass": [103, 6, 5]}
{"time": "2021-02-23 17:42:13.337408", "score": "0.4155", "loss": "7.144", "code": "void setExcludeList(String l) { String = l(\",\"); excludeList.clear(); for (int i0; i < split.length; i++) excludeList.add(split[i].trim()); }", "n_tokens": 69, "n_pass": [112, 7, 6]}
{"time": "2021-02-23 17:42:15.989972", "score": "0.4238", "loss": "6.932", "code": "void setExcludeList(String l) { String = l(\",\"); excludeList.clear(); for (int i0;  split.length; i++) excludeList.add(split[i].trim()); }", "n_tokens": 66, "n_pass": [114, 8, 7]}
{"time": "2021-02-23 17:42:18.638122", "score": "0.4125", "loss": "6.9036", "code": "void setExcludeList(String l) { String = l(\",\"); excludeList.clear(); for (int i0; length; i++) excludeList.add(split[i].trim()); }", "n_tokens": 63, "n_pass": [115, 9, 8]}
{"time": "2021-02-23 17:42:21.317481", "score": "0.3978", "loss": "6.7349", "code": "void setExcludeList(String l) { String = l(\",\"); excludeList.clear(); for (int i0; length; ) excludeList.add(split[i].trim()); }", "n_tokens": 60, "n_pass": [117, 10, 9]}
{"time": "2021-02-23 17:42:24.430250", "score": "0.3296", "loss": "5.7576", "code": "void setExcludeList(String l) { String =(\",\"); excludeList.clear(); for (int i0; length; ) excludeList.add(split[i].trim()); }", "n_tokens": 58, "n_pass": [131, 11, 10]}
{"time": "2021-02-23 17:42:27.076339", "score": "0.3391", "loss": "5.7379", "code": "void setExcludeList(String l) { String =(\",\"); excludeList.clear(); for (0; length; ) excludeList.add(split[i].trim()); }", "n_tokens": 55, "n_pass": [139, 12, 11]}
{"time": "2021-02-23 17:42:30.166359", "score": "0.2934", "loss": "5.756", "code": "void setExcludeList(String l) { String(\",\"); excludeList.clear(); for (0; length; ) excludeList.add(split[i].trim()); }", "n_tokens": 53, "n_pass": [154, 13, 12]}
{"time": "2021-02-23 17:42:33.243468", "score": "0.3372", "loss": "5.6218", "code": "void setExcludeList(String l) {(\",\"); excludeList.clear(); for (0; length; ) excludeList.add(split[i].trim()); }", "n_tokens": 51, "n_pass": [175, 14, 13]}
{"time": "2021-02-23 17:42:40.202274", "score": "0.3372", "loss": "5.6218", "code": "void setExcludeList(String l) {(\"\"); excludeList.clear(); for (0; length; ) excludeList.add(split[i].trim()); }", "n_tokens": 50, "n_pass": [238, 15, 14]}
{"time": "2021-02-23 17:42:42.888991", "score": "0.3372", "loss": "5.6218", "code": "void setExcludeList(String l) {(\"\");excludeList.clear(); for (0; length; ) excludeList.add(split[i].trim()); }", "n_tokens": 49, "n_pass": [241, 16, 15]}
{"time": "2021-02-23 17:42:48.272259", "score": "0.3372", "loss": "5.6218", "code": "void setExcludeList(String l) {(\"\");excludeList.clear();for (0; length; ) excludeList.add(split[i].trim()); }", "n_tokens": 48, "n_pass": [248, 18, 16]}
{"time": "2021-02-23 17:42:50.916920", "score": "0.3372", "loss": "5.6218", "code": "void setExcludeList(String l) {(\"\");excludeList.clear();for(0; length; ) excludeList.add(split[i].trim()); }", "n_tokens": 47, "n_pass": [250, 19, 17]}
{"time": "2021-02-23 17:42:53.576644", "score": "0.3275", "loss": "5.6136", "code": "void setExcludeList(String l) {(\"\");excludeList.clear();for(; length; ) excludeList.add(split[i].trim()); }", "n_tokens": 46, "n_pass": [252, 20, 18]}
{"time": "2021-02-23 17:42:56.242185", "score": "0.3251", "loss": "5.5974", "code": "void setExcludeList(String l) {(\"\");excludeList.clear();for(;; ) excludeList.add(split[i].trim()); }", "n_tokens": 44, "n_pass": [254, 21, 19]}
{"time": "2021-02-23 17:43:01.515497", "score": "0.3958", "loss": "5.6244", "code": "void setExcludeList(String l) {(\"\");excludeList.clear();for(;; ) excludeList.add(split[i].trim); }", "n_tokens": 42, "n_pass": [262, 23, 20]}
{"time": "2021-02-23 17:43:05.015667", "score": "0.3958", "loss": "5.6244", "code": "void setExcludeList(String l){(\"\");excludeList.clear();for(;; ) excludeList.add(split[i].trim); }", "n_tokens": 41, "n_pass": [273, 24, 21]}
{"time": "2021-02-23 17:43:12.993605", "score": "0.3533", "loss": "5.3717", "code": "void setExcludeList(String l){(\"\");excludeList.clear();for(;; ) excludeList.add(split[i]); }", "n_tokens": 39, "n_pass": [295, 27, 22]}
{"time": "2021-02-23 17:43:23.730154", "score": "0.3533", "loss": "5.3717", "code": "void setExcludeList(String l){(\"\");excludeList.clear();for(;; ) excludeList.add(split[i]);}", "n_tokens": 38, "n_pass": [344, 30, 23]}
{"time": "2021-02-23 17:43:29.861594", "score": "0.3533", "loss": "5.3717", "code": "void setExcludeList(String l){(\"\");excludeList.clear();for(;;) excludeList.add(split[i]);}", "n_tokens": 37, "n_pass": [369, 32, 24]}
{"time": "2021-02-23 17:43:32.521306", "score": "0.3533", "loss": "5.3717", "code": "void setExcludeList(String l){(\"\");excludeList.clear();for(;;)excludeList.add(split[i]);}", "n_tokens": 36, "n_pass": [371, 33, 25]}

Minimal simplified code:
void setExcludeList(String l){("");excludeList.clear();for(;;)excludeList.add(split[i]);}

