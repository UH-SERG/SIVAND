
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/apache__commons-codec/src/test/java/org/apache/commons/codec/binary/BaseNCodecTest_setUp.java
method_name = setUp
method_body = @Before public void setUp() { codec = new BaseNCodec(0, 0, 0, 0) { @Override protected boolean isInAlphabet(final byte b) { return b == 'O' || b == 'K'; } @Override void encode(final byte[] pArray, final int i, final int length, final Context context) { } @Override void decode(final byte[] pArray, final int i, final int length, final Context context) { } }; }
predict, score, loss = setup, 0.8332614302635193, 2.315699815750122

Trace of simplified code(s):
{"time": "2021-02-24 03:12:25.306995", "score": "0.6402", "loss": "1.1635", "code": "@Before public void setUp() { codec = new BaseNCodec(0, 0, 0, 0) { @Override protected boolean isInAlphabet(final byte b) { return b == 'O' || b == 'K'; } @Override void encode(final byte[] pArray, final int i, final int length, final Context context) { } @Override void decode(final byte[] pArray, final int i, final int length, final Context context) { } }; }", "n_tokens": 165, "n_pass": [1, 1, 1]}
{"time": "2021-02-24 03:12:27.971903", "score": "0.6456", "loss": "1.3784", "code": "@Before public void setUp() { codec = new BaseNCodec(0, 0, 0, 0) { @Override protected booleanvoid encode(final byte[] pArray, final int i, final int length, final Context context) { } @Override void decode(final byte[] pArray, final int i, final int length, final Context context) { } }; }", "n_tokens": 124, "n_pass": [9, 2, 2]}
{"time": "2021-02-24 03:12:30.616035", "score": "0.6646", "loss": "1.2701", "code": "@Before public void setUp() { codec = new BaseNCodec(0, 0, 0, 0) { @Override protected booleanvoid decode(final byte[] pArray, final int i, final int length, final Context context) { } }; }", "n_tokens": 83, "n_pass": [10, 3, 3]}
{"time": "2021-02-24 03:12:36.156009", "score": "0.6077", "loss": "1.1638", "code": "@Before public void setUp() { codec = new BaseNCodec(0, 0, 0, 0) { @Override protected booleanvoid decode(final byte[] pArray, final int i, final int  context) { } }; }", "n_tokens": 77, "n_pass": [56, 5, 4]}
{"time": "2021-02-24 03:12:41.472037", "score": "0.605", "loss": "1.1375", "code": "@Before public void setUp() { codec = new BaseNCodec(0, 00) { @Override protected booleanvoid decode(final byte[] pArray, final int i, final int  context) { } }; }", "n_tokens": 72, "n_pass": [64, 7, 5]}
{"time": "2021-02-24 03:12:44.107325", "score": "0.629", "loss": "1.1251", "code": "@Before public void setUp() { codec = new BaseNCodec(0, 00) { booleanvoid decode(final byte[] pArray, final int i, final int  context) { } }; }", "n_tokens": 67, "n_pass": [66, 8, 6]}
{"time": "2021-02-24 03:12:52.156449", "score": "0.629", "loss": "1.1251", "code": "@Before public void setUp() { codec = new BaseNCodec(0, 00) { booleanvoid decode(final byte[] pArray,int i, final int  context) { } }; }", "n_tokens": 64, "n_pass": [112, 11, 7]}
{"time": "2021-02-24 03:12:57.495588", "score": "0.629", "loss": "1.1251", "code": "@Before void setUp() { codec = new BaseNCodec(0, 00) { booleanvoid decode(final byte[] pArray,int i, final int  context) { } }; }", "n_tokens": 62, "n_pass": [121, 13, 8]}
{"time": "2021-02-24 03:13:00.546829", "score": "0.6528", "loss": "3.6064", "code": "@Before void setUp() { codec = new BaseNCodec(00) { booleanvoid decode(final byte[] pArray,int i, final int  context) { } }; }", "n_tokens": 59, "n_pass": [131, 14, 9]}
{"time": "2021-02-24 03:13:10.226749", "score": "0.6512", "loss": "3.6219", "code": "@Before void setUp() { codec = new BaseNCodec(0) { booleanvoid decode(final byte[] pArray,int i, final int  context) { } }; }", "n_tokens": 58, "n_pass": [201, 16, 10]}
{"time": "2021-02-24 03:13:12.893839", "score": "0.6512", "loss": "3.6219", "code": "@Before void setUp() { codec = new BaseNCodec(0){ booleanvoid decode(final byte[] pArray,int i, final int  context) { } }; }", "n_tokens": 57, "n_pass": [203, 17, 11]}
{"time": "2021-02-24 03:13:15.531145", "score": "0.6512", "loss": "3.6219", "code": "@Before void setUp() { codec = new BaseNCodec(0){booleanvoid decode(final byte[] pArray,int i, final int  context) { } }; }", "n_tokens": 56, "n_pass": [205, 18, 12]}
{"time": "2021-02-24 03:13:18.150943", "score": "0.8353", "loss": "3.7564", "code": "@Before void setUp() { codec = new BaseNCodec(0){void decode(final byte[] pArray,int i, final int  context) { } }; }", "n_tokens": 55, "n_pass": [206, 19, 13]}
{"time": "2021-02-24 03:13:20.807416", "score": "0.673", "loss": "2.3687", "code": "@Before void setUp() { codec = new BaseNCodec(0){ decode(final byte[] pArray,int i, final int  context) { } }; }", "n_tokens": 54, "n_pass": [207, 20, 14]}
{"time": "2021-02-24 03:13:23.469476", "score": "0.673", "loss": "2.3687", "code": "@Before void setUp() { codec = new BaseNCodec(0){decode(final byte[] pArray,int i, final int  context) { } }; }", "n_tokens": 53, "n_pass": [208, 21, 15]}
{"time": "2021-02-24 03:13:26.122179", "score": "0.673", "loss": "2.3687", "code": "@Before void setUp() { codec = new BaseNCodec(0){decode( byte[] pArray,int i, final int  context) { } }; }", "n_tokens": 52, "n_pass": [211, 22, 16]}
{"time": "2021-02-24 03:13:28.780287", "score": "0.673", "loss": "2.3687", "code": "@Before void setUp() { codec = new BaseNCodec(0){decode(byte[] pArray,int i, final int  context) { } }; }", "n_tokens": 51, "n_pass": [212, 23, 17]}
{"time": "2021-02-24 03:13:31.431522", "score": "0.6904", "loss": "2.3547", "code": "@Before void setUp() { codec = new BaseNCodec(0){decode(byte pArray,int i, final int  context) { } }; }", "n_tokens": 49, "n_pass": [214, 24, 18]}
{"time": "2021-02-24 03:13:34.051938", "score": "0.6904", "loss": "2.3547", "code": "@Before void setUp() { codec = new BaseNCodec(0){decode(byte pArray,int i, int  context) { } }; }", "n_tokens": 47, "n_pass": [219, 25, 19]}
{"time": "2021-02-24 03:13:37.846426", "score": "0.6904", "loss": "2.3547", "code": "@Before void setUp(){ codec = new BaseNCodec(0){decode(byte pArray,int i, int  context) { } }; }", "n_tokens": 46, "n_pass": [235, 26, 20]}
{"time": "2021-02-24 03:13:40.485873", "score": "0.6904", "loss": "2.3547", "code": "@Before void setUp(){codec = new BaseNCodec(0){decode(byte pArray,int i, int  context) { } }; }", "n_tokens": 45, "n_pass": [237, 27, 21]}
{"time": "2021-02-24 03:13:43.118205", "score": "0.6904", "loss": "2.3547", "code": "@Before void setUp(){codec= new BaseNCodec(0){decode(byte pArray,int i, int  context) { } }; }", "n_tokens": 44, "n_pass": [239, 28, 22]}
{"time": "2021-02-24 03:13:45.771868", "score": "0.6904", "loss": "2.3547", "code": "@Before void setUp(){codec=new BaseNCodec(0){decode(byte pArray,int i, int  context) { } }; }", "n_tokens": 43, "n_pass": [241, 29, 23]}
{"time": "2021-02-24 03:13:48.409979", "score": "0.6993", "loss": "2.2707", "code": "@Before void setUp(){codec=new BaseNCodec(){decode(byte pArray,int i, int  context) { } }; }", "n_tokens": 42, "n_pass": [246, 30, 24]}
{"time": "2021-02-24 03:13:55.833644", "score": "0.6993", "loss": "2.2707", "code": "@Before void setUp(){codec=new BaseNCodec(){decode(byte pArray,int i,int  context) { } }; }", "n_tokens": 41, "n_pass": [307, 31, 25]}
{"time": "2021-02-24 03:13:58.453145", "score": "0.6993", "loss": "2.2707", "code": "@Before void setUp(){codec=new BaseNCodec(){decode(byte pArray,int i,int context) { } }; }", "n_tokens": 40, "n_pass": [309, 32, 26]}
{"time": "2021-02-24 03:14:01.106354", "score": "0.6993", "loss": "2.2707", "code": "@Before void setUp(){codec=new BaseNCodec(){decode(byte pArray,int i,int context){ } }; }", "n_tokens": 39, "n_pass": [313, 33, 27]}
{"time": "2021-02-24 03:14:03.759083", "score": "0.6993", "loss": "2.2707", "code": "@Before void setUp(){codec=new BaseNCodec(){decode(byte pArray,int i,int context){} }; }", "n_tokens": 38, "n_pass": [315, 34, 28]}
{"time": "2021-02-24 03:14:06.397705", "score": "0.6993", "loss": "2.2707", "code": "@Before void setUp(){codec=new BaseNCodec(){decode(byte pArray,int i,int context){}}; }", "n_tokens": 37, "n_pass": [317, 35, 29]}
{"time": "2021-02-24 03:14:09.006339", "score": "0.6993", "loss": "2.2707", "code": "@Before void setUp(){codec=new BaseNCodec(){decode(byte pArray,int i,int context){}};}", "n_tokens": 36, "n_pass": [320, 36, 30]}

Minimal simplified code:
@Before void setUp(){codec=new BaseNCodec(){decode(byte pArray,int i,int context){}};}

