
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/dronekit__dronekit-android/ClientLib/src/main/java/org/droidplanner/services/android/impl/core/MAVLink/MavLinkCalibration_sendCalibrationAckMessage.java
method_name = sendCalibrationAckMessage
method_body = public static void sendCalibrationAckMessage(MavLinkDrone drone, int count) { msg_command_ack msg = new msg_command_ack(); msg.command = count; msg.result = MAV_CMD_ACK.MAV_CMD_ACK_OK; drone.getMavClient().sendMessage(msg, null); }
predict, score, loss = broadcast, 0.3475659191608429, 16.03972625732422

Trace of simplified code(s):
{"time": "2021-02-23 17:25:02.803812", "score": "0.3476", "loss": "16.0397", "code": "public static void sendCalibrationAckMessage(MavLinkDrone drone, int count) { msg_command_ack msg = new msg_command_ack(); msg.command = count; msg.result = MAV_CMD_ACK.MAV_CMD_ACK_OK; drone.getMavClient().sendMessage(msg, null); }", "n_tokens": 87, "n_pass": [1, 1, 1]}
{"time": "2021-02-23 17:25:19.259211", "score": "0.4032", "loss": "15.8147", "code": "public static void sendCalibrationAckMessage(MavLinkDrone count) { msg_command_ack msg = new msg_command_ack(); msg.command = count; msg.result = MAV_CMD_ACK.MAV_CMD_ACK_OK; drone.getMavClient().sendMessage(msg, null); }", "n_tokens": 82, "n_pass": [46, 7, 2]}
{"time": "2021-02-23 17:25:21.921057", "score": "0.3712", "loss": "15.8697", "code": "public static void sendCalibrationAckMessage(MavLinkDrone count) {  msg = new msg_command_ack(); msg.command = count; msg.result = MAV_CMD_ACK.MAV_CMD_ACK_OK; drone.getMavClient().sendMessage(msg, null); }", "n_tokens": 77, "n_pass": [48, 8, 3]}
{"time": "2021-02-23 17:25:24.585753", "score": "0.394", "loss": "15.7556", "code": "public static void sendCalibrationAckMessage(MavLinkDrone count) { new msg_command_ack(); msg.command = count; msg.result = MAV_CMD_ACK.MAV_CMD_ACK_OK; drone.getMavClient().sendMessage(msg, null); }", "n_tokens": 72, "n_pass": [49, 9, 4]}
{"time": "2021-02-23 17:25:27.239064", "score": "0.3222", "loss": "15.9336", "code": "public static void sendCalibrationAckMessage(MavLinkDrone count) { _ack(); msg.command = count; msg.result = MAV_CMD_ACK.MAV_CMD_ACK_OK; drone.getMavClient().sendMessage(msg, null); }", "n_tokens": 67, "n_pass": [50, 10, 5]}
{"time": "2021-02-23 17:25:29.915102", "score": "0.3662", "loss": "15.8639", "code": "public static void sendCalibrationAckMessage(MavLinkDrone count) {  msg.command = count; msg.result = MAV_CMD_ACK.MAV_CMD_ACK_OK; drone.getMavClient().sendMessage(msg, null); }", "n_tokens": 62, "n_pass": [51, 11, 6]}
{"time": "2021-02-23 17:25:43.232361", "score": "0.2256", "loss": "15.4052", "code": "public static void sendCalibrationAckMessage(MavLinkDrone count) {  msg.command = count; msg.result = MAV_CMD_ACK.MAV_CMD_ACK_OK; drone.getMavClient( null); }", "n_tokens": 56, "n_pass": [58, 16, 7]}
{"time": "2021-02-23 17:25:51.638494", "score": "0.1948", "loss": "15.491", "code": "public static void sendCalibrationAckMessage(MavLinkDrone count) {  msg.command = count; msg.result = MAV_CMD_ACK_OK; drone.getMavClient( null); }", "n_tokens": 50, "n_pass": [66, 19, 8]}
{"time": "2021-02-23 17:26:02.647211", "score": "0.1948", "loss": "15.491", "code": "public static void sendCalibrationAckMessage(MavLinkDrone count) {  msg.command = count; msg.result = MAVACK_OK; drone.getMavClient( null); }", "n_tokens": 47, "n_pass": [94, 23, 9]}
{"time": "2021-02-23 17:26:07.981382", "score": "0.1948", "loss": "15.491", "code": "static void sendCalibrationAckMessage(MavLinkDrone count) {  msg.command = count; msg.result = MAVACK_OK; drone.getMavClient( null); }", "n_tokens": 45, "n_pass": [99, 25, 10]}
{"time": "2021-02-23 17:26:10.618023", "score": "0.1948", "loss": "15.491", "code": "void sendCalibrationAckMessage(MavLinkDrone count) {  msg.command = count; msg.result = MAVACK_OK; drone.getMavClient( null); }", "n_tokens": 43, "n_pass": [100, 26, 11]}
{"time": "2021-02-23 17:26:24.298335", "score": "0.1972", "loss": "15.4133", "code": "void sendCalibrationAckMessage(MavLinkDrone count) {  msg.command = count; msg= MAVACK_OK; drone.getMavClient( null); }", "n_tokens": 40, "n_pass": [109, 31, 12]}
{"time": "2021-02-23 17:26:51.171932", "score": "0.2091", "loss": "15.6677", "code": "void sendCalibrationAckMessage(MavLinkDrone count) {  msg.command =  msg= MAVACK_OK; drone.getMavClient( null); }", "n_tokens": 38, "n_pass": [153, 40, 13]}
{"time": "2021-02-23 17:26:59.051556", "score": "0.2091", "loss": "15.6677", "code": "void sendCalibrationAckMessage(MavLinkDrone count) {  msg.command =  msg= MAVACK; drone.getMavClient( null); }", "n_tokens": 36, "n_pass": [157, 43, 14]}
{"time": "2021-02-23 17:27:06.996003", "score": "0.3077", "loss": "15.6943", "code": "void sendCalibrationAckMessage(MavLinkDrone count) {  msg.command =  msg= MAVACK; drone.getMavClient(); }", "n_tokens": 34, "n_pass": [161, 46, 15]}
{"time": "2021-02-23 17:27:10.466944", "score": "0.3077", "loss": "15.6943", "code": "void sendCalibrationAckMessage(MavLinkDrone count){  msg.command =  msg= MAVACK; drone.getMavClient(); }", "n_tokens": 33, "n_pass": [172, 47, 16]}
{"time": "2021-02-23 17:27:13.112490", "score": "0.3077", "loss": "15.6943", "code": "void sendCalibrationAckMessage(MavLinkDrone count){ msg.command =  msg= MAVACK; drone.getMavClient(); }", "n_tokens": 32, "n_pass": [174, 48, 17]}
{"time": "2021-02-23 17:27:15.773767", "score": "0.3077", "loss": "15.6943", "code": "void sendCalibrationAckMessage(MavLinkDrone count){msg.command =  msg= MAVACK; drone.getMavClient(); }", "n_tokens": 31, "n_pass": [175, 49, 18]}
{"time": "2021-02-23 17:27:21.101450", "score": "0.3077", "loss": "15.6943", "code": "void sendCalibrationAckMessage(MavLinkDrone count){msg.command=  msg= MAVACK; drone.getMavClient(); }", "n_tokens": 30, "n_pass": [179, 51, 19]}
{"time": "2021-02-23 17:27:26.386635", "score": "0.2159", "loss": "15.7003", "code": "void sendCalibrationAckMessage(MavLinkDrone count){msg.command=  msgMAVACK; drone.getMavClient(); }", "n_tokens": 28, "n_pass": [182, 53, 20]}
{"time": "2021-02-23 17:27:29.026240", "score": "0.3798", "loss": "16.0372", "code": "void sendCalibrationAckMessage(MavLinkDrone count){msg.command=  msg; drone.getMavClient(); }", "n_tokens": 26, "n_pass": [183, 54, 21]}
{"time": "2021-02-23 17:27:48.004397", "score": "0.3798", "loss": "16.0372", "code": "void sendCalibrationAckMessage(MavLinkDrone count){msg.command=  msg; drone.getMavClient();}", "n_tokens": 25, "n_pass": [222, 60, 22]}
{"time": "2021-02-23 17:27:56.784557", "score": "0.3798", "loss": "16.0372", "code": "void sendCalibrationAckMessage(MavLinkDrone count){msg.command= msg; drone.getMavClient();}", "n_tokens": 24, "n_pass": [236, 63, 23]}
{"time": "2021-02-23 17:27:59.430800", "score": "0.3798", "loss": "16.0372", "code": "void sendCalibrationAckMessage(MavLinkDrone count){msg.command=msg; drone.getMavClient();}", "n_tokens": 23, "n_pass": [237, 64, 24]}
{"time": "2021-02-23 17:28:02.053028", "score": "0.3798", "loss": "16.0372", "code": "void sendCalibrationAckMessage(MavLinkDrone count){msg.command=msg;drone.getMavClient();}", "n_tokens": 22, "n_pass": [240, 65, 25]}

Minimal simplified code:
void sendCalibrationAckMessage(MavLinkDrone count){msg.command=msg;drone.getMavClient();}

