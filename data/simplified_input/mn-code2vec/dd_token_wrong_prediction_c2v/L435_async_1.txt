
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/lowlevel-studios__storo/library/src/main/java/st/lowlevel/storo/model/BaseMethod_async.java
method_name = async
method_body = public void async(@Nullable final Callback<T> callback) { ExecutorService executor = Executors.newSingleThreadExecutor(); executor.execute(new Runnable() { @Override public void run() { T result = execute(); if (callback != null) { callback.onResult(result); } } }); executor.shutdown(); }
predict, score, loss = start, 0.2656864821910858, 2.3265724182128906

Trace of simplified code(s):
{"time": "2021-02-24 07:28:52.336690", "score": "0.2657", "loss": "2.3266", "code": "public void async(@Nullable final Callback<T> callback) { ExecutorService executor = Executors.newSingleThreadExecutor(); executor.execute(new Runnable() { @Override public void run() { T result = execute(); if (callback != null) { callback.onResult(result); } } }); executor.shutdown(); }", "n_tokens": 107, "n_pass": [1, 1, 1]}
{"time": "2021-02-24 07:28:55.050338", "score": "0.5005", "loss": "1.6217", "code": "public void async(@Nullable final Callback<T> callback) { ExecutorService executor = Executors.newSingleThreadExecutor(new Runnable() { @Override public void run() { T result = execute(); if (callback != null) { callback.onResult(result); } } }); executor.shutdown(); }", "n_tokens": 100, "n_pass": [49, 2, 2]}
{"time": "2021-02-24 07:28:57.687001", "score": "0.5981", "loss": "2.2271", "code": "public void async(@Nullable final Callback<T> callback) { ExecutorService executor = Executors.newSingleThreadExecutor(new Runnable() { @Override public void run() {execute(); if (callback != null) { callback.onResult(result); } } }); executor.shutdown(); }", "n_tokens": 93, "n_pass": [53, 3, 3]}
{"time": "2021-02-24 07:29:00.345216", "score": "0.4825", "loss": "2.4303", "code": "public void async(@Nullable final Callback<T> callback) { ExecutorService executor = Executors.newSingleThreadExecutor(new Runnable() { @Override public void run() {; if (callback != null) { callback.onResult(result); } } }); executor.shutdown(); }", "n_tokens": 90, "n_pass": [97, 4, 4]}
{"time": "2021-02-24 07:29:02.980240", "score": "0.421", "loss": "2.3924", "code": "public void async(@Nullable final Callback<T> callback) { ExecutorService executor = Executors.newSingleThreadExecutor(new Runnable() { @Override public void run() {; if (callback ) { callback.onResult(result); } } }); executor.shutdown(); }", "n_tokens": 86, "n_pass": [100, 5, 5]}
{"time": "2021-02-24 07:29:06.018461", "score": "0.4867", "loss": "2.254", "code": "public void async(final Callback<T> callback) { ExecutorService executor = Executors.newSingleThreadExecutor(new Runnable() { @Override public void run() {; if (callback ) { callback.onResult(result); } } }); executor.shutdown(); }", "n_tokens": 83, "n_pass": [110, 6, 6]}
{"time": "2021-02-24 07:29:08.703376", "score": "0.3575", "loss": "2.2918", "code": "public void async(final Callback callback) { ExecutorService executor = Executors.newSingleThreadExecutor(new Runnable() { @Override public void run() {; if (callback ) { callback.onResult(result); } } }); executor.shutdown(); }", "n_tokens": 80, "n_pass": [112, 7, 7]}
{"time": "2021-02-24 07:29:16.646546", "score": "0.2286", "loss": "2.6349", "code": "public void async(final Callback callback) { ExecutorService executor = Executors.newSingleThreadExecutor(new Runnable() { @Override  run() {; if (callback ) { callback.onResult(result); } } }); executor.shutdown(); }", "n_tokens": 77, "n_pass": [122, 10, 8]}
{"time": "2021-02-24 07:29:22.301817", "score": "0.211", "loss": "2.6017", "code": "public void async(final Callback callback) { ExecutorService executor = Executors.newSingleThreadExecutor(new Runnable() {  run() {; if (callback ) { callback.onResult(result); } } }); executor.shutdown(); }", "n_tokens": 74, "n_pass": [145, 12, 9]}
{"time": "2021-02-24 07:29:30.881172", "score": "0.211", "loss": "2.6017", "code": "public void async(final Callback callback) { ExecutorService executor = Executors.newSingleThreadExecutor(new Runnable() {run() {; if (callback ) { callback.onResult(result); } } }); executor.shutdown(); }", "n_tokens": 72, "n_pass": [213, 14, 10]}
{"time": "2021-02-24 07:29:36.152498", "score": "0.2004", "loss": "3.0606", "code": "public void async(final Callback callback) { ExecutorService executor = Executors.newSingleThreadExecutor(new Runnable() {run() {; if (callback ) { callback.onResult(result); } } }); shutdown(); }", "n_tokens": 70, "n_pass": [230, 16, 11]}
{"time": "2021-02-24 07:29:38.789928", "score": "0.2004", "loss": "3.0606", "code": " void async(final Callback callback) { ExecutorService executor = Executors.newSingleThreadExecutor(new Runnable() {run() {; if (callback ) { callback.onResult(result); } } }); shutdown(); }", "n_tokens": 69, "n_pass": [234, 17, 12]}
{"time": "2021-02-24 07:29:41.435233", "score": "0.2004", "loss": "3.0606", "code": "void async(final Callback callback) { ExecutorService executor = Executors.newSingleThreadExecutor(new Runnable() {run() {; if (callback ) { callback.onResult(result); } } }); shutdown(); }", "n_tokens": 68, "n_pass": [235, 18, 13]}
{"time": "2021-02-24 07:29:44.831891", "score": "0.2004", "loss": "3.0606", "code": "void async( Callback callback) { ExecutorService executor = Executors.newSingleThreadExecutor(new Runnable() {run() {; if (callback ) { callback.onResult(result); } } }); shutdown(); }", "n_tokens": 67, "n_pass": [240, 19, 14]}
{"time": "2021-02-24 07:29:47.471416", "score": "0.2004", "loss": "3.0606", "code": "void async(Callback callback) { ExecutorService executor = Executors.newSingleThreadExecutor(new Runnable() {run() {; if (callback ) { callback.onResult(result); } } }); shutdown(); }", "n_tokens": 66, "n_pass": [241, 20, 15]}
{"time": "2021-02-24 07:29:50.094216", "score": "0.2004", "loss": "3.0606", "code": "void async(Callback callback){ ExecutorService executor = Executors.newSingleThreadExecutor(new Runnable() {run() {; if (callback ) { callback.onResult(result); } } }); shutdown(); }", "n_tokens": 65, "n_pass": [246, 21, 16]}
{"time": "2021-02-24 07:29:52.730397", "score": "0.5034", "loss": "2.2965", "code": "void async(Callback callback){ executor = Executors.newSingleThreadExecutor(new Runnable() {run() {; if (callback ) { callback.onResult(result); } } }); shutdown(); }", "n_tokens": 63, "n_pass": [248, 22, 17]}
{"time": "2021-02-24 07:29:55.338585", "score": "0.4894", "loss": "2.7061", "code": "void async(Callback callback){ executor = Executors(new Runnable() {run() {; if (callback ) { callback.onResult(result); } } }); shutdown(); }", "n_tokens": 61, "n_pass": [252, 23, 18]}
{"time": "2021-02-24 07:29:57.938895", "score": "0.4653", "loss": "2.5128", "code": "void async(Callback callback){ executor = Executors(new Runnable() {run() {; if (callback ) { onResult(result); } } }); shutdown(); }", "n_tokens": 59, "n_pass": [265, 24, 19]}
{"time": "2021-02-24 07:30:11.078320", "score": "0.4102", "loss": "2.5322", "code": "void async(Callback callback){ executor = Executors(new Runnable() {run() {; if (callback ) { onResult(); } } }); shutdown(); }", "n_tokens": 58, "n_pass": [350, 26, 20]}
{"time": "2021-02-24 07:30:13.690054", "score": "0.4102", "loss": "2.5322", "code": "void async(Callback callback){ executor = Executors(new Runnable() {run() {; if (callback ) { onResult();} } }); shutdown(); }", "n_tokens": 57, "n_pass": [352, 27, 21]}
{"time": "2021-02-24 07:30:16.323680", "score": "0.4102", "loss": "2.5322", "code": "void async(Callback callback){ executor = Executors(new Runnable() {run() {; if (callback ) { onResult();}} }); shutdown(); }", "n_tokens": 56, "n_pass": [354, 28, 22]}
{"time": "2021-02-24 07:30:18.937433", "score": "0.4102", "loss": "2.5322", "code": "void async(Callback callback){ executor = Executors(new Runnable() {run() {; if (callback ) { onResult();}}}); shutdown(); }", "n_tokens": 55, "n_pass": [356, 29, 23]}
{"time": "2021-02-24 07:30:21.568991", "score": "0.4102", "loss": "2.5322", "code": "void async(Callback callback){ executor = Executors(new Runnable() {run() {; if (callback ) { onResult();}}});shutdown(); }", "n_tokens": 54, "n_pass": [360, 30, 24]}
{"time": "2021-02-24 07:30:24.188363", "score": "0.4102", "loss": "2.5322", "code": "void async(Callback callback){ executor = Executors(new Runnable() {run() {; if (callback ) { onResult();}}});shutdown();}", "n_tokens": 53, "n_pass": [365, 31, 25]}
{"time": "2021-02-24 07:30:27.581621", "score": "0.4102", "loss": "2.5322", "code": "void async(Callback callback){executor = Executors(new Runnable() {run() {; if (callback ) { onResult();}}});shutdown();}", "n_tokens": 52, "n_pass": [376, 32, 26]}
{"time": "2021-02-24 07:30:30.196257", "score": "0.4102", "loss": "2.5322", "code": "void async(Callback callback){executor= Executors(new Runnable() {run() {; if (callback ) { onResult();}}});shutdown();}", "n_tokens": 51, "n_pass": [378, 33, 27]}
{"time": "2021-02-24 07:30:32.812717", "score": "0.4102", "loss": "2.5322", "code": "void async(Callback callback){executor=Executors(new Runnable() {run() {; if (callback ) { onResult();}}});shutdown();}", "n_tokens": 50, "n_pass": [380, 34, 28]}
{"time": "2021-02-24 07:30:38.074469", "score": "0.4102", "loss": "2.5322", "code": "void async(Callback callback){executor=Executors(new Runnable(){run() {; if (callback ) { onResult();}}});shutdown();}", "n_tokens": 49, "n_pass": [388, 36, 29]}
{"time": "2021-02-24 07:30:40.705822", "score": "0.4102", "loss": "2.5322", "code": "void async(Callback callback){executor=Executors(new Runnable(){run(){; if (callback ) { onResult();}}});shutdown();}", "n_tokens": 48, "n_pass": [393, 37, 30]}
{"time": "2021-02-24 07:30:43.336397", "score": "0.4102", "loss": "2.5322", "code": "void async(Callback callback){executor=Executors(new Runnable(){run(){ if (callback ) { onResult();}}});shutdown();}", "n_tokens": 47, "n_pass": [395, 38, 31]}
{"time": "2021-02-24 07:30:45.962981", "score": "0.4102", "loss": "2.5322", "code": "void async(Callback callback){executor=Executors(new Runnable(){run(){if (callback ) { onResult();}}});shutdown();}", "n_tokens": 46, "n_pass": [396, 39, 32]}
{"time": "2021-02-24 07:30:48.592964", "score": "0.4102", "loss": "2.5322", "code": "void async(Callback callback){executor=Executors(new Runnable(){run(){if(callback ) { onResult();}}});shutdown();}", "n_tokens": 45, "n_pass": [398, 40, 33]}
{"time": "2021-02-24 07:30:51.224925", "score": "0.4102", "loss": "2.5322", "code": "void async(Callback callback){executor=Executors(new Runnable(){run(){if(callback) { onResult();}}});shutdown();}", "n_tokens": 44, "n_pass": [401, 41, 34]}
{"time": "2021-02-24 07:30:53.842207", "score": "0.4102", "loss": "2.5322", "code": "void async(Callback callback){executor=Executors(new Runnable(){run(){if(callback){ onResult();}}});shutdown();}", "n_tokens": 43, "n_pass": [403, 42, 35]}
{"time": "2021-02-24 07:30:56.454401", "score": "0.4102", "loss": "2.5322", "code": "void async(Callback callback){executor=Executors(new Runnable(){run(){if(callback){onResult();}}});shutdown();}", "n_tokens": 42, "n_pass": [405, 43, 36]}

Minimal simplified code:
void async(Callback callback){executor=Executors(new Runnable(){run(){if(callback){onResult();}}});shutdown();}

