
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/OpenRock__OpenAM/openam-tools/openam-installtools/src/main/java/com/sun/identity/install/tools/configurator/OrderedPropertyStore_put.java
method_name = put
method_body = void put(String key, String value) { keyValueMap.put(key, value); int index = removeFromList(key); if (index != -1) { keyValueList.add(index, new KeyValue(key, value)); } else { keyValueList.add(new KeyValue(key, value)); } }
predict, score, loss = setFields, 0.22675691545009613, 6.169528484344482

Trace of simplified code(s):
{"time": "2021-02-23 19:47:52.349614", "score": "0.2268", "loss": "6.1695", "code": "void put(String key, String value) { keyValueMap.put(key, value); int index = removeFromList(key); if (index != -1) { keyValueList.add(index, new KeyValue(key, value)); } else { keyValueList.add(new KeyValue(key, value)); } }", "n_tokens": 97, "n_pass": [1, 1, 1]}
{"time": "2021-02-23 19:47:55.019938", "score": "0.1596", "loss": "7.7554", "code": "void put(String key, String value) { keyValueMap.put(key, value); if (index != -1) { keyValueList.add(index, new KeyValue(key, value)); } else { keyValueList.add(new KeyValue(key, value)); } }", "n_tokens": 85, "n_pass": [22, 2, 2]}
{"time": "2021-02-23 19:47:57.682094", "score": "0.1354", "loss": "7.8307", "code": "void put(String key, String value) { keyValueMap.put(key, value); if (1) { keyValueList.add(index, new KeyValue(key, value)); } else { keyValueList.add(new KeyValue(key, value)); } }", "n_tokens": 79, "n_pass": [44, 3, 3]}
{"time": "2021-02-23 19:48:00.346056", "score": "0.1571", "loss": "6.7615", "code": "void put(String key, String value) { keyValueMap.put(key, value); if (1) { keyValueList.add(index, new KeyValue(key, value)); keyValueList.add(new KeyValue(key, value)); } }", "n_tokens": 73, "n_pass": [49, 4, 4]}
{"time": "2021-02-23 19:48:05.687894", "score": "0.15", "loss": "6.8171", "code": "void put(String key, String value) { keyValueMap.put(key, value); if (1) { keyValueList.add(index, new KeyValue(key, value)); keyValueList.add(new KeyValue(key)); } }", "n_tokens": 70, "n_pass": [89, 6, 5]}
{"time": "2021-02-23 19:48:13.704360", "score": "0.1891", "loss": "7.2628", "code": "void put(String key, String value) { keyValueMap.put(key, value); if (1) { keyValueList.add(new KeyValue(key, value)); keyValueList.add(new KeyValue(key)); } }", "n_tokens": 67, "n_pass": [105, 9, 6]}
{"time": "2021-02-23 19:48:30.196038", "score": "0.1762", "loss": "6.9925", "code": "void put(String key, String value) { keyValueMap.put(key, value); if (1) { keyValueList.add(KeyValue(key, value)); keyValueList.add(new KeyValue(key)); } }", "n_tokens": 65, "n_pass": [176, 14, 7]}
{"time": "2021-02-23 19:48:32.841997", "score": "0.2158", "loss": "7.0772", "code": "void put(String key, String value) { keyValueMap.put(key, value); if (1) { keyValueList.add(KeyValue( value)); keyValueList.add(new KeyValue(key)); } }", "n_tokens": 63, "n_pass": [178, 15, 8]}
{"time": "2021-02-23 19:48:35.494850", "score": "0.1809", "loss": "7.2527", "code": "void put(String key, String value) { keyValueMap.put(key, value); if (1) { keyValueList.add(KeyValue()); keyValueList.add(new KeyValue(key)); } }", "n_tokens": 61, "n_pass": [179, 16, 9]}
{"time": "2021-02-23 19:48:44.302209", "score": "0.1809", "loss": "7.2527", "code": "void put(String key,String value) { keyValueMap.put(key, value); if (1) { keyValueList.add(KeyValue()); keyValueList.add(new KeyValue(key)); } }", "n_tokens": 60, "n_pass": [198, 19, 10]}
{"time": "2021-02-23 19:48:46.962563", "score": "0.1809", "loss": "7.2527", "code": "void put(String key,String value){ keyValueMap.put(key, value); if (1) { keyValueList.add(KeyValue()); keyValueList.add(new KeyValue(key)); } }", "n_tokens": 59, "n_pass": [203, 20, 11]}
{"time": "2021-02-23 19:48:49.618001", "score": "0.1809", "loss": "7.2527", "code": "void put(String key,String value){keyValueMap.put(key, value); if (1) { keyValueList.add(KeyValue()); keyValueList.add(new KeyValue(key)); } }", "n_tokens": 58, "n_pass": [205, 21, 12]}
{"time": "2021-02-23 19:49:11.040404", "score": "0.1809", "loss": "7.2527", "code": "void put(String key,String value){keyValueMap.put(key,value); if (1) { keyValueList.add(KeyValue()); keyValueList.add(new KeyValue(key)); } }", "n_tokens": 57, "n_pass": [284, 27, 13]}
{"time": "2021-02-23 19:49:13.687861", "score": "0.1809", "loss": "7.2527", "code": "void put(String key,String value){keyValueMap.put(key,value);if (1) { keyValueList.add(KeyValue()); keyValueList.add(new KeyValue(key)); } }", "n_tokens": 56, "n_pass": [288, 28, 14]}
{"time": "2021-02-23 19:49:16.359127", "score": "0.1809", "loss": "7.2527", "code": "void put(String key,String value){keyValueMap.put(key,value);if(1) { keyValueList.add(KeyValue()); keyValueList.add(new KeyValue(key)); } }", "n_tokens": 55, "n_pass": [290, 29, 15]}
{"time": "2021-02-23 19:49:19.019292", "score": "0.1809", "loss": "7.2527", "code": "void put(String key,String value){keyValueMap.put(key,value);if(1){ keyValueList.add(KeyValue()); keyValueList.add(new KeyValue(key)); } }", "n_tokens": 54, "n_pass": [294, 30, 16]}
{"time": "2021-02-23 19:49:21.674066", "score": "0.1809", "loss": "7.2527", "code": "void put(String key,String value){keyValueMap.put(key,value);if(1){keyValueList.add(KeyValue()); keyValueList.add(new KeyValue(key)); } }", "n_tokens": 53, "n_pass": [296, 31, 17]}
{"time": "2021-02-23 19:49:27.018113", "score": "0.1809", "loss": "7.2527", "code": "void put(String key,String value){keyValueMap.put(key,value);if(1){keyValueList.add(KeyValue());keyValueList.add(new KeyValue(key)); } }", "n_tokens": 52, "n_pass": [306, 33, 18]}
{"time": "2021-02-23 19:49:37.627719", "score": "0.1864", "loss": "7.3017", "code": "void put(String key,String value){keyValueMap.put(key,value);if(1){keyValueList.add(KeyValue());keyValueList.add(new KeyValue()); } }", "n_tokens": 51, "n_pass": [315, 37, 19]}
{"time": "2021-02-23 19:49:40.276433", "score": "0.1864", "loss": "7.3017", "code": "void put(String key,String value){keyValueMap.put(key,value);if(1){keyValueList.add(KeyValue());keyValueList.add(new KeyValue());} }", "n_tokens": 50, "n_pass": [319, 38, 20]}
{"time": "2021-02-23 19:49:42.925612", "score": "0.1864", "loss": "7.3017", "code": "void put(String key,String value){keyValueMap.put(key,value);if(1){keyValueList.add(KeyValue());keyValueList.add(new KeyValue());}}", "n_tokens": 49, "n_pass": [321, 39, 21]}
{"time": "2021-02-23 19:49:49.058111", "score": "0.2078", "loss": "7.4683", "code": "void put(String key,String value){keyValueMap.put(keyvalue);if(1){keyValueList.add(KeyValue());keyValueList.add(new KeyValue());}}", "n_tokens": 48, "n_pass": [341, 41, 22]}
{"time": "2021-02-23 19:50:08.475367", "score": "0.2035", "loss": "7.5186", "code": "void put(String key,String value){keyValueMap.put(value);if(1){keyValueList.add(KeyValue());keyValueList.add(new KeyValue());}}", "n_tokens": 47, "n_pass": [389, 48, 23]}
{"time": "2021-02-23 19:50:11.127703", "score": "0.1659", "loss": "7.7631", "code": "void put(String key,String value){keyValueMap.put();if(1){keyValueList.add(KeyValue());keyValueList.add(new KeyValue());}}", "n_tokens": 46, "n_pass": [390, 49, 24]}

Minimal simplified code:
void put(String key,String value){keyValueMap.put();if(1){keyValueList.add(KeyValue());keyValueList.add(new KeyValue());}}

