
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/OpenRock__OpenAM/openam-console/src/main/java/com/sun/identity/console/idm/model/EntitiesModelImpl_hasDisplayableAttributes.java
method_name = hasDisplayableAttributes
method_body = public boolean hasDisplayableAttributes(String serviceName) { SchemaType st = SchemaType.USER; if ((getEntityType() != null) && (!getEntityType().equals("user"))) { st = SchemaType.DYNAMIC; } return hasAttributeSchema(serviceName, st); }
predict, score, loss = setServiceName, 0.46336469054222107, 14.335990905761719

Trace of simplified code(s):
{"time": "2021-02-24 01:26:42.426829", "score": "0.4634", "loss": "14.336", "code": "public boolean hasDisplayableAttributes(String serviceName) { SchemaType st = SchemaType.USER; if ((getEntityType() != null) && (!getEntityType().equals(\"user\"))) { st = SchemaType.DYNAMIC; } return hasAttributeSchema(serviceName, st); }", "n_tokens": 81, "n_pass": [1, 1, 1]}
{"time": "2021-02-24 01:26:45.632789", "score": "0.8419", "loss": "13.8446", "code": "public boolean hasDisplayableAttributes(String serviceName) { SchemaType .USER; if ((getEntityType() != null) && (!getEntityType().equals(\"user\"))) { st = SchemaType.DYNAMIC; } return hasAttributeSchema(serviceName, st); }", "n_tokens": 76, "n_pass": [47, 2, 2]}
{"time": "2021-02-24 01:26:48.398752", "score": "0.6469", "loss": "15.085", "code": "public boolean hasDisplayableAttributes(String serviceName) { SchemaType .USER; if ((getEntityType() != null) && (!getEntityType().equals(\"user\"))) { st ; } return hasAttributeSchema(serviceName, st); }", "n_tokens": 71, "n_pass": [56, 3, 3]}
{"time": "2021-02-24 01:26:51.172137", "score": "0.6406", "loss": "15.1829", "code": "public boolean hasDisplayableAttributes(String serviceName) { SchemaType .USER; if ((getEntityType() != null) && (!getEntityType().equals(\"user\"))) {  } return hasAttributeSchema(serviceName, st); }", "n_tokens": 68, "n_pass": [99, 4, 4]}
{"time": "2021-02-24 01:26:53.914471", "score": "0.6406", "loss": "15.1829", "code": "boolean hasDisplayableAttributes(String serviceName) { SchemaType .USER; if ((getEntityType() != null) && (!getEntityType().equals(\"user\"))) {  } return hasAttributeSchema(serviceName, st); }", "n_tokens": 66, "n_pass": [105, 5, 5]}
{"time": "2021-02-24 01:26:57.078201", "score": "0.5791", "loss": "15.4184", "code": "boolean hasDisplayableAttributes(String serviceName) { SchemaTypeUSER; if ((getEntityType() != null) && (!getEntityType().equals(\"user\"))) {  } return hasAttributeSchema(serviceName, st); }", "n_tokens": 64, "n_pass": [112, 6, 6]}
{"time": "2021-02-24 01:26:59.839240", "score": "0.6582", "loss": "15.8026", "code": "boolean hasDisplayableAttributes(String serviceName) { SchemaTypeUSER; if ((getEntityType != null) && (!getEntityType().equals(\"user\"))) {  } return hasAttributeSchema(serviceName, st); }", "n_tokens": 62, "n_pass": [117, 7, 7]}
{"time": "2021-02-24 01:27:02.591140", "score": "0.6387", "loss": "15.9094", "code": "boolean hasDisplayableAttributes(String serviceName) { SchemaTypeUSER; if ((getEntityType != null) && (!getEntityType().equals())) {  } return hasAttributeSchema(serviceName, st); }", "n_tokens": 59, "n_pass": [124, 8, 8]}
{"time": "2021-02-24 01:27:05.790725", "score": "0.6409", "loss": "15.8879", "code": "boolean hasDisplayableAttributes(String serviceName) {USER; if ((getEntityType != null) && (!getEntityType().equals())) {  } return hasAttributeSchema(serviceName, st); }", "n_tokens": 57, "n_pass": [137, 9, 9]}
{"time": "2021-02-24 01:27:08.518890", "score": "0.6438", "loss": "15.9197", "code": "boolean hasDisplayableAttributes(String serviceName) { if ((getEntityType != null) && (!getEntityType().equals())) {  } return hasAttributeSchema(serviceName, st); }", "n_tokens": 55, "n_pass": [138, 10, 10]}
{"time": "2021-02-24 01:27:15.865728", "score": "0.6438", "loss": "15.9197", "code": "boolean hasDisplayableAttributes(String serviceName) {if ((getEntityType != null) && (!getEntityType().equals())) {  } return hasAttributeSchema(serviceName, st); }", "n_tokens": 54, "n_pass": [202, 11, 11]}
{"time": "2021-02-24 01:27:18.644677", "score": "0.6438", "loss": "15.9197", "code": "boolean hasDisplayableAttributes(String serviceName) {if((getEntityType != null) && (!getEntityType().equals())) {  } return hasAttributeSchema(serviceName, st); }", "n_tokens": 53, "n_pass": [203, 12, 12]}
{"time": "2021-02-24 01:27:21.707749", "score": "0.6438", "loss": "15.9197", "code": "boolean hasDisplayableAttributes(String serviceName) {if((getEntityType!= null) && (!getEntityType().equals())) {  } return hasAttributeSchema(serviceName, st); }", "n_tokens": 52, "n_pass": [207, 13, 13]}
{"time": "2021-02-24 01:27:24.450760", "score": "0.6309", "loss": "15.6294", "code": "boolean hasDisplayableAttributes(String serviceName) {if((getEntityType= null) && (!getEntityType().equals())) {  } return hasAttributeSchema(serviceName, st); }", "n_tokens": 51, "n_pass": [208, 14, 14]}
{"time": "2021-02-24 01:27:27.203851", "score": "0.6309", "loss": "15.6294", "code": "boolean hasDisplayableAttributes(String serviceName) {if((getEntityType=null) && (!getEntityType().equals())) {  } return hasAttributeSchema(serviceName, st); }", "n_tokens": 50, "n_pass": [210, 15, 15]}
{"time": "2021-02-24 01:27:29.963814", "score": "0.6309", "loss": "15.6294", "code": "boolean hasDisplayableAttributes(String serviceName) {if((getEntityType=null)&& (!getEntityType().equals())) {  } return hasAttributeSchema(serviceName, st); }", "n_tokens": 49, "n_pass": [213, 16, 16]}
{"time": "2021-02-24 01:27:32.690073", "score": "0.629", "loss": "15.636", "code": "boolean hasDisplayableAttributes(String serviceName) {if((getEntityType=null)& (!getEntityType().equals())) {  } return hasAttributeSchema(serviceName, st); }", "n_tokens": 48, "n_pass": [214, 17, 17]}
{"time": "2021-02-24 01:27:35.462251", "score": "0.629", "loss": "15.636", "code": "boolean hasDisplayableAttributes(String serviceName) {if((getEntityType=null)&(!getEntityType().equals())) {  } return hasAttributeSchema(serviceName, st); }", "n_tokens": 47, "n_pass": [216, 18, 18]}
{"time": "2021-02-24 01:27:38.204339", "score": "0.6179", "loss": "15.6396", "code": "boolean hasDisplayableAttributes(String serviceName) {if((getEntityType=null)&(getEntityType().equals())) {  } return hasAttributeSchema(serviceName, st); }", "n_tokens": 46, "n_pass": [218, 19, 19]}
{"time": "2021-02-24 01:27:40.926529", "score": "0.6717", "loss": "15.7514", "code": "boolean hasDisplayableAttributes(String serviceName) {if((getEntityType=null)&(getEntityType.equals())) {  } return hasAttributeSchema(serviceName, st); }", "n_tokens": 44, "n_pass": [220, 20, 20]}
{"time": "2021-02-24 01:27:43.665004", "score": "0.7094", "loss": "15.8123", "code": "boolean hasDisplayableAttributes(String serviceName) {if((getEntityType=null)&(getEntityType())) {  } return hasAttributeSchema(serviceName, st); }", "n_tokens": 42, "n_pass": [221, 21, 21]}
{"time": "2021-02-24 01:27:46.404906", "score": "0.7094", "loss": "15.8123", "code": "boolean hasDisplayableAttributes(String serviceName) {if((getEntityType=null)&(getEntityType)) {  } return hasAttributeSchema(serviceName, st); }", "n_tokens": 40, "n_pass": [222, 22, 22]}
{"time": "2021-02-24 01:27:49.142307", "score": "0.7094", "loss": "15.8123", "code": "boolean hasDisplayableAttributes(String serviceName) {if((getEntityType=null)&(getEntityType)) {} return hasAttributeSchema(serviceName, st); }", "n_tokens": 38, "n_pass": [225, 23, 23]}
{"time": "2021-02-24 01:27:51.925503", "score": "0.9253", "loss": "16.5323", "code": "boolean hasDisplayableAttributes(String serviceName) {if((getEntityType=null)&(getEntityType)) {} hasAttributeSchema(serviceName, st); }", "n_tokens": 36, "n_pass": [227, 24, 24]}
{"time": "2021-02-24 01:27:54.650990", "score": "0.4967", "loss": "15.9286", "code": "boolean hasDisplayableAttributes(String serviceName) {if((getEntityType=null)&(getEntityType)) {} hasAttributeSchema( st); }", "n_tokens": 34, "n_pass": [229, 25, 25]}
{"time": "2021-02-24 01:28:01.078340", "score": "0.4967", "loss": "15.9286", "code": "boolean hasDisplayableAttributes(String serviceName){if((getEntityType=null)&(getEntityType)) {} hasAttributeSchema( st); }", "n_tokens": 33, "n_pass": [241, 27, 26]}
{"time": "2021-02-24 01:28:03.831562", "score": "0.3561", "loss": "16.6411", "code": "boolean hasDisplayableAttributes(String serviceName){if((getEntityTypenull)&(getEntityType)) {} hasAttributeSchema( st); }", "n_tokens": 32, "n_pass": [247, 28, 27]}
{"time": "2021-02-24 01:28:06.552333", "score": "0.476", "loss": "16.5873", "code": "boolean hasDisplayableAttributes(String serviceName){if((getEntityType)&(getEntityType)) {} hasAttributeSchema( st); }", "n_tokens": 31, "n_pass": [248, 29, 28]}
{"time": "2021-02-24 01:28:17.998049", "score": "0.476", "loss": "16.5873", "code": "boolean hasDisplayableAttributes(String serviceName){if((getEntityType)&(getEntityType)){} hasAttributeSchema( st); }", "n_tokens": 30, "n_pass": [289, 32, 29]}
{"time": "2021-02-24 01:28:20.786016", "score": "0.476", "loss": "16.5873", "code": "boolean hasDisplayableAttributes(String serviceName){if((getEntityType)&(getEntityType)){}hasAttributeSchema( st); }", "n_tokens": 29, "n_pass": [291, 33, 30]}
{"time": "2021-02-24 01:28:26.277480", "score": "0.476", "loss": "16.5873", "code": "boolean hasDisplayableAttributes(String serviceName){if((getEntityType)&(getEntityType)){}hasAttributeSchema(st); }", "n_tokens": 28, "n_pass": [294, 35, 31]}
{"time": "2021-02-24 01:28:31.799699", "score": "0.476", "loss": "16.5873", "code": "boolean hasDisplayableAttributes(String serviceName){if((getEntityType)&(getEntityType)){}hasAttributeSchema(st);}", "n_tokens": 27, "n_pass": [298, 37, 32]}

Minimal simplified code:
boolean hasDisplayableAttributes(String serviceName){if((getEntityType)&(getEntityType)){}hasAttributeSchema(st);}

