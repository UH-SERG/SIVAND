
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/bcgit__bc-java/tls/src/test/java/org/bouncycastle/tls/test/MockPSKTlsServer_getServerVersion.java
method_name = getServerVersion
method_body = public ProtocolVersion getServerVersion() throws IOException { ProtocolVersion serverVersion = super.getServerVersion(); System.out.println("TLS-PSK server negotiated " + serverVersion); return serverVersion; }
predict, score, loss = getServerVersion, 0.9886972904205322, 0.011499196290969849

Trace of simplified code(s):
{"time": "2021-02-24 21:05:38.699445", "score": "0.9887", "loss": "0.0115", "code": "public ProtocolVersion getServerVersion() throws IOException { ProtocolVersion serverVersion = super.getServerVersion(); System.out.println(\"TLS-PSK server negotiated \" + serverVersion); return serverVersion; }", "n_tokens": 210, "n_pass": [1, 1, 1]}
{"time": "2021-02-24 21:05:41.790768", "score": "0.9578", "loss": "0.0437", "code": "public ProtocolVersion getServerVersion() throws IOException { ProtocolVersionServerVersion(); System.out.println(\"TLS-PSK server negotiated \" + serverVersion); return serverVersion; }", "n_tokens": 184, "n_pass": [23, 2, 2]}
{"time": "2021-02-24 21:05:44.454402", "score": "0.9598", "loss": "0.0415", "code": "public ProtocolVersion getServerVersion() throws IOException { ProtocolVersiont.println(\"TLS-PSK server negotiated \" + serverVersion); return serverVersion; }", "n_tokens": 158, "n_pass": [24, 3, 3]}
{"time": "2021-02-24 21:05:47.514766", "score": "0.9598", "loss": "0.0415", "code": "public ProtocolVersion getServerVersion() throws IOException { ProtocolVersiont.println(\"TLnegotiated \" + serverVersion); return serverVersion; }", "n_tokens": 145, "n_pass": [44, 4, 4]}
{"time": "2021-02-24 21:05:50.190393", "score": "0.9894", "loss": "0.0107", "code": "olVersion getServerVersion() throws IOException { ProtocolVersiont.println(\"TLnegotiated \" + serverVersion); return serverVersion; }", "n_tokens": 132, "n_pass": [49, 5, 5]}
{"time": "2021-02-24 21:05:53.691711", "score": "0.9856", "loss": "0.0146", "code": "olVersion getServerVersion() throws IOException { Prt.println(\"TLnegotiated \" + serverVersion); return serverVersion; }", "n_tokens": 119, "n_pass": [54, 6, 6]}
{"time": "2021-02-24 21:05:57.175428", "score": "0.9931", "loss": "0.0071", "code": "olVersion getServerVersion() throws IOException {intln(\"TLnegotiated \" + serverVersion); return serverVersion; }", "n_tokens": 112, "n_pass": [82, 7, 7]}
{"time": "2021-02-24 21:05:59.814230", "score": "0.9931", "loss": "0.0071", "code": "olVersion getServerVersion() throws IOException {intln(\"iated \" + serverVersion); return serverVersion; }", "n_tokens": 105, "n_pass": [84, 8, 8]}
{"time": "2021-02-24 21:06:02.472603", "score": "0.9929", "loss": "0.0077", "code": "olVersion getServerVersion() throws IOException {intln(\"iated \" + servon); return serverVersion; }", "n_tokens": 98, "n_pass": [87, 9, 9]}
{"time": "2021-02-24 21:06:10.383573", "score": "0.9923", "loss": "0.0084", "code": "ion getServerVersion() throws IOException {intln(\"iated \" + servon); return serverVersion; }", "n_tokens": 92, "n_pass": [92, 12, 10]}
{"time": "2021-02-24 21:06:14.304271", "score": "0.997", "loss": "0.0031", "code": "ion getServerVersion() throws ption {intln(\"iated \" + servon); return serverVersion; }", "n_tokens": 86, "n_pass": [98, 13, 11]}
{"time": "2021-02-24 21:06:23.502563", "score": "0.995", "loss": "0.0058", "code": "ion getServerVersion() throws on {intln(\"iated \" + servon); return serverVersion; }", "n_tokens": 83, "n_pass": [138, 16, 12]}
{"time": "2021-02-24 21:06:26.156308", "score": "0.9954", "loss": "0.0056", "code": "ion getServerVersion() throws on {in(\"iated \" + servon); return serverVersion; }", "n_tokens": 80, "n_pass": [141, 17, 13]}
{"time": "2021-02-24 21:06:28.797577", "score": "0.9933", "loss": "0.0081", "code": "ion getServerVersion() throws on {in(\"id \" + servon); return serverVersion; }", "n_tokens": 77, "n_pass": [143, 18, 14]}
{"time": "2021-02-24 21:06:31.430270", "score": "0.9912", "loss": "0.0125", "code": "ion getServerVersion() throws on {in(\"id \" + on); return serverVersion; }", "n_tokens": 73, "n_pass": [146, 19, 15]}
{"time": "2021-02-24 21:07:16.903075", "score": "0.9899", "loss": "0.0165", "code": "on getServerVersion() throws on {in(\"id \" + on); return serverVersion; }", "n_tokens": 72, "n_pass": [227, 35, 16]}
{"time": "2021-02-24 21:07:19.606513", "score": "0.9958", "loss": "0.0053", "code": "n getServerVersion() throws on {in(\"id \" + on); return serverVersion; }", "n_tokens": 71, "n_pass": [228, 36, 17]}
{"time": "2021-02-24 21:07:28.210702", "score": "0.9915", "loss": "0.0098", "code": "n getServerVersion() throws o{in(\"id \" + on); return serverVersion; }", "n_tokens": 69, "n_pass": [249, 37, 18]}
{"time": "2021-02-24 21:07:30.918174", "score": "0.995", "loss": "0.0055", "code": "n getServerVersion() throws o{in(\"i\" + on); return serverVersion; }", "n_tokens": 67, "n_pass": [253, 38, 19]}
{"time": "2021-02-24 21:07:33.594964", "score": "0.4512", "loss": "0.8875", "code": "n getServerVersion() throws o{in(\"i\" + on);eturn serverVersion; }", "n_tokens": 65, "n_pass": [258, 39, 20]}
{"time": "2021-02-24 21:08:10.067622", "score": "0.4512", "loss": "0.8875", "code": "n getServerVersion() throws o{in(\"i\" + on);etun serverVersion; }", "n_tokens": 64, "n_pass": [350, 49, 21]}
{"time": "2021-02-24 21:08:53.238055", "score": "0.4512", "loss": "0.8875", "code": "n getServerVersion() throws o{in(\"i\" + on);etun serverVersion;}", "n_tokens": 63, "n_pass": [367, 65, 22]}
{"time": "2021-02-24 21:09:03.662659", "score": "0.4512", "loss": "0.8875", "code": "n getServerVersion()throws o{in(\"i\" + on);etun serverVersion;}", "n_tokens": 62, "n_pass": [389, 66, 23]}
{"time": "2021-02-24 21:09:06.347523", "score": "0.5772", "loss": "0.6527", "code": "n getServerVersion()throws o{n(\"i\" + on);etun serverVersion;}", "n_tokens": 61, "n_pass": [399, 67, 24]}
{"time": "2021-02-24 21:09:14.439576", "score": "0.5772", "loss": "0.6527", "code": "n getServerVersion()throws o{n(\"i\"+ on);etun serverVersion;}", "n_tokens": 60, "n_pass": [405, 70, 25]}
{"time": "2021-02-24 21:09:17.142370", "score": "0.5772", "loss": "0.6527", "code": "n getServerVersion()throws o{n(\"i\"+on);etun serverVersion;}", "n_tokens": 59, "n_pass": [407, 71, 26]}
{"time": "2021-02-24 21:09:19.853034", "score": "0.7377", "loss": "0.3787", "code": "n getServerVersion()throws o{n(\"i\"+n);etun serverVersion;}", "n_tokens": 58, "n_pass": [408, 72, 27]}
{"time": "2021-02-24 21:09:25.207797", "score": "0.7377", "loss": "0.3787", "code": "n getServerVersion()throws o{n(\"i\"+n);eun serverVersion;}", "n_tokens": 57, "n_pass": [413, 74, 28]}
{"time": "2021-02-24 21:09:27.880940", "score": "0.758", "loss": "0.3418", "code": "n getServerVersion()throws o{n(\"i\"+n);en serverVersion;}", "n_tokens": 56, "n_pass": [414, 75, 29]}
{"time": "2021-02-24 21:09:30.589972", "score": "0.6824", "loss": "0.4779", "code": "n getServerVersion()throws o{n(\"i\"+n);e serverVersion;}", "n_tokens": 55, "n_pass": [415, 76, 30]}

Minimal simplified code:
n getServerVersion()throws o{n("i"+n);e serverVersion;}

