
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/codefollower__Tomcat-Research/java/org/apache/catalina/tribes/UniqueId_equals.java
method_name = equals
method_body = @Override public boolean equals(Object other) { boolean result = (other instanceof UniqueId); if (result) { UniqueId uid = (UniqueId) other; if (this.id == null && uid.id == null) result = true; else if (this.id == null && uid.id != null) result = false; else if (this.id != null && uid.id == null) result = false; else result = Arrays.equals(this.id, uid.id); } return result; }
predict, score, loss = equals, 0.3435264527797699, 1.8601806163787842

Trace of simplified code(s):
{"time": "2021-02-22 21:06:34.973751", "score": "0.7269", "loss": "0.711", "code": "@Override public boolean equals(Object other) { boolean result = (other instanceof UniqueId); if (result) { UniqueId uid = (UniqueId) other; if (this.id == null && uid.id == null) result = true; else if (this.id == null && uid.id != null) result = false; else if (this.id != null && uid.id == null) result = false; else result = Arrays.equals(this.id, uid.id); } return result; }", "n_tokens": 379, "n_pass": [1, 1, 1]}
{"time": "2021-02-22 21:06:38.018319", "score": "0.4119", "loss": "1.358", "code": "@Override public boolean equals(Object other) {if (result) { UniqueId uid = (UniqueId) other; if (this.id == null && uid.id == null) result = true; else if (this.id == null && uid.id != null) result = false; else if (this.id != null && uid.id == null) result = false; else result = Arrays.equals(this.id, uid.id); } return result; }", "n_tokens": 332, "n_pass": [21, 2, 2]}
{"time": "2021-02-22 21:06:40.662680", "score": "0.943", "loss": "0.0761", "code": "@Override public boolean equals(Object other) {if (result) { UniqueId uid = (UniqueId) other; if (this.id == null && uid.id == null) result = true; else if (this.id == null && uid.id != nuuid.id == null) result = false; else result = Arrays.equals(this.id, uid.id); } return result; }", "n_tokens": 284, "n_pass": [25, 3, 3]}
{"time": "2021-02-22 21:06:43.314499", "score": "0.8787", "loss": "0.4783", "code": "@Override public boolean equals(Object other) {if (result) { UniqueId uid = (UniqueId) other; if (this.id == null && uid.id == null) result = true; else if (this.id == null && uid.id != nuuid.id == null) result =rays.equals(this.id, uid.id); } return result; }", "n_tokens": 260, "n_pass": [45, 4, 4]}
{"time": "2021-02-22 21:06:45.945164", "score": "0.408", "loss": "2.434", "code": "n equals(Object other) {if (result) { UniqueId uid = (UniqueId) other; if (this.id == null && uid.id == null) result = true; else if (this.id == null && uid.id != nuuid.id == null) result =rays.equals(this.id, uid.id); } return result; }", "n_tokens": 237, "n_pass": [48, 5, 5]}
{"time": "2021-02-22 21:06:48.957050", "score": "0.3387", "loss": "2.7308", "code": "n equals(Object other) {if (result) { UniqueId; if (this.id == null && uid.id == null) result = true; else if (this.id == null && uid.id != nuuid.id == null) result =rays.equals(this.id, uid.id); } return result; }", "n_tokens": 214, "n_pass": [51, 6, 6]}
{"time": "2021-02-22 21:06:54.682809", "score": "0.633", "loss": "2.0805", "code": "n equals(Object other) {if (result) { UniqueId; if (this.id == null &&ull) result = true; else if (this.id == null && uid.id != nuuid.id == null) result =rays.equals(this.id, uid.id); } return result; }", "n_tokens": 202, "n_pass": [81, 8, 7]}
{"time": "2021-02-22 21:06:57.397914", "score": "0.2758", "loss": "3.2054", "code": "n equals(Object other) {if (result) { UniqueId; if (this.id == null &&ull) result = true; else if (this.iduid.id != nuuid.id == null) result =rays.equals(this.id, uid.id); } return result; }", "n_tokens": 190, "n_pass": [84, 9, 8]}
{"time": "2021-02-22 21:07:00.034965", "score": "0.2775", "loss": "3.2801", "code": "n equals(Object other) {if (result) { UniqueId; if (this.id == null &&ull) result = true; else if (this.iduid.id == null) result =rays.equals(this.id, uid.id); } return result; }", "n_tokens": 178, "n_pass": [85, 10, 9]}
{"time": "2021-02-22 21:07:02.657408", "score": "0.4362", "loss": "2.4728", "code": "n equals(Object other) {if (result) { UniqueId; if (this.id == null &&ull) result = true; else if (this.idll) result =rays.equals(this.id, uid.id); } return result; }", "n_tokens": 166, "n_pass": [86, 11, 10]}
{"time": "2021-02-22 21:07:07.930376", "score": "0.2342", "loss": "3.8629", "code": "n equals(Object other) {if (result) { UniqueId; if (this.id == null &&ull) result = true; else if (this.idll) rerays.equals(this.id, uid.id); } return result; }", "n_tokens": 160, "n_pass": [130, 13, 11]}
{"time": "2021-02-22 21:07:15.786895", "score": "0.2569", "loss": "3.6744", "code": "n equals(Object other) {if (result) { UniqueId; if (this.id == null &&ull) result = true; else if (this.idll) rerays.equals(this.i.id); } return result; }", "n_tokens": 154, "n_pass": [134, 16, 12]}
{"time": "2021-02-22 21:07:18.418934", "score": "0.2506", "loss": "3.6874", "code": "n equals(Object other) {if (result) { UniqueId; if (this.id == null &&ull) result = true; else if (this.idll) rerays.equals(this.i.id); } retuult; }", "n_tokens": 148, "n_pass": [137, 17, 13]}
{"time": "2021-02-22 21:07:21.439156", "score": "0.2295", "loss": "3.7547", "code": "n equals(Object other) {if (result) { Un; if (this.id == null &&ull) result = true; else if (this.idll) rerays.equals(this.i.id); } retuult; }", "n_tokens": 142, "n_pass": [146, 18, 14]}
{"time": "2021-02-22 21:07:24.045018", "score": "0.2185", "loss": "3.7413", "code": "n equals(Object other) {if (result) { Un; if (d == null &&ull) result = true; else if (this.idll) rerays.equals(this.i.id); } retuult; }", "n_tokens": 136, "n_pass": [148, 19, 15]}
{"time": "2021-02-22 21:07:26.651709", "score": "0.2906", "loss": "2.329", "code": "n equals(Object other) {if (result) { Un; if (ull &&ull) result = true; else if (this.idll) rerays.equals(this.i.id); } retuult; }", "n_tokens": 130, "n_pass": [149, 20, 16]}
{"time": "2021-02-22 21:07:29.257748", "score": "0.5267", "loss": "2.0031", "code": "n equals(Object other) {if (result) { Un; if (ull) result = true; else if (this.idll) rerays.equals(this.i.id); } retuult; }", "n_tokens": 124, "n_pass": [150, 21, 17]}
{"time": "2021-02-22 21:07:31.892891", "score": "0.5289", "loss": "1.9746", "code": "n equals(Object other) {if (result) { Un; if (ull) r= true; else if (this.idll) rerays.equals(this.i.id); } retuult; }", "n_tokens": 118, "n_pass": [152, 22, 18]}
{"time": "2021-02-22 21:07:34.487531", "score": "0.4657", "loss": "2.0524", "code": "n equals(Object other) {if (result) { Un; if (ull) r; else if (this.idll) rerays.equals(this.i.id); } retuult; }", "n_tokens": 112, "n_pass": [153, 23, 19]}
{"time": "2021-02-22 21:07:37.135286", "score": "0.6506", "loss": "1.5538", "code": "n equals(Object other) {if (result) { Un; if (ull) r; else if (tll) rerays.equals(this.i.id); } retuult; }", "n_tokens": 106, "n_pass": [156, 24, 20]}
{"time": "2021-02-22 21:07:39.751406", "score": "0.2401", "loss": "2.8566", "code": "n equals(Object other) {if (result) { Un; if (ull) r; else if (tll) requals(this.i.id); } retuult; }", "n_tokens": 100, "n_pass": [158, 25, 21]}
{"time": "2021-02-22 21:07:45.373260", "score": "0.2442", "loss": "2.834", "code": "n equals(Object other) {if (result) { Un; if (ull) r; else if (tll) requals(s.i.id); } retuult; }", "n_tokens": 97, "n_pass": [212, 27, 22]}
{"time": "2021-02-22 21:07:50.588139", "score": "0.2442", "loss": "2.834", "code": "n equals(Object other) {if (result) { Un; if (ull) r; else if (tll) requals(s.i.id); } rult; }", "n_tokens": 94, "n_pass": [216, 29, 23]}
{"time": "2021-02-22 21:07:53.209345", "score": "0.2452", "loss": "2.8151", "code": "n equals(Object other) {if (result) { Un; if (ull) r; else if (tll) requals(s.i.id); } r; }", "n_tokens": 91, "n_pass": [217, 30, 24]}
{"time": "2021-02-22 21:08:02.201518", "score": "0.2933", "loss": "4.1095", "code": "n equals(Object other) {if (ult) { Un; if (ull) r; else if (tll) requals(s.i.id); } r; }", "n_tokens": 88, "n_pass": [229, 33, 25]}
{"time": "2021-02-22 21:08:04.810330", "score": "0.2825", "loss": "4.1401", "code": "n equals(Object other) {if (ult) {; if (ull) r; else if (tll) requals(s.i.id); } r; }", "n_tokens": 85, "n_pass": [232, 34, 26]}
{"time": "2021-02-22 21:08:13.090959", "score": "0.2592", "loss": "4.0528", "code": "n equals(Object other) {if (ult) {; if (ull) r; else if (tll) requals(s.i); } r; }", "n_tokens": 82, "n_pass": [246, 37, 27]}
{"time": "2021-02-22 21:08:27.723131", "score": "0.3201", "loss": "3.9499", "code": "n equals(Object other) {if (ult) {; if (ull) r; else if (tll) requals(); } r; }", "n_tokens": 79, "n_pass": [274, 42, 28]}
{"time": "2021-02-22 21:08:37.080910", "score": "0.3284", "loss": "3.6418", "code": "n equals(Object other) {if (ult) {; if (ull) r; else if (tll)quals(); } r; }", "n_tokens": 76, "n_pass": [299, 45, 29]}
{"time": "2021-02-22 21:08:39.694837", "score": "0.3149", "loss": "3.9197", "code": "n equals(Object other) {if (ult) {; if (ull) r; else if (tll)ls(); } r; }", "n_tokens": 73, "n_pass": [300, 46, 30]}
{"time": "2021-02-22 21:08:53.466732", "score": "0.3154", "loss": "3.9887", "code": "n equals(Object other) {if (ult) {; if (ull) r; else if (tll)ls; } r; }", "n_tokens": 71, "n_pass": [379, 50, 31]}
{"time": "2021-02-22 21:08:56.087265", "score": "0.3088", "loss": "4.0175", "code": "n equals(Object other) {if (ult) {; if (ull) r; else if (tll)ls; }  }", "n_tokens": 69, "n_pass": [382, 51, 32]}
{"time": "2021-02-22 21:09:30.467716", "score": "0.3088", "loss": "4.0175", "code": "n equals(Object other){if (ult) {; if (ull) r; else if (tll)ls; }  }", "n_tokens": 68, "n_pass": [406, 63, 33]}
{"time": "2021-02-22 21:09:33.063207", "score": "0.3088", "loss": "4.0175", "code": "n equals(Object other){if(ult) {; if (ull) r; else if (tll)ls; }  }", "n_tokens": 67, "n_pass": [410, 64, 34]}
{"time": "2021-02-22 21:09:43.862568", "score": "0.3174", "loss": "3.9729", "code": "n equals(Object other){if(ult) {; if (ull) r; else if (tll); }  }", "n_tokens": 65, "n_pass": [428, 68, 35]}
{"time": "2021-02-22 21:10:35.834754", "score": "0.3174", "loss": "3.9729", "code": "n equals(Object other){if(ult) {; if (ull) r; else if (tll);}  }", "n_tokens": 64, "n_pass": [514, 85, 36]}
{"time": "2021-02-22 21:10:38.449647", "score": "0.3174", "loss": "3.9729", "code": "n equals(Object other){if(ult) {; if (ull) r; else if (tll);} }", "n_tokens": 63, "n_pass": [516, 86, 37]}
{"time": "2021-02-22 21:10:41.044763", "score": "0.3174", "loss": "3.9729", "code": "n equals(Object other){if(ult) {; if (ull) r; else if (tll);}}", "n_tokens": 62, "n_pass": [517, 87, 38]}
{"time": "2021-02-22 21:11:20.443161", "score": "0.2031", "loss": "3.1808", "code": "n equals(Object other){if(ul) {; if (ull) r; else if (tll);}}", "n_tokens": 61, "n_pass": [547, 101, 39]}
{"time": "2021-02-22 21:11:23.040758", "score": "0.2031", "loss": "3.1808", "code": "n equals(Object other){if(ul){; if (ull) r; else if (tll);}}", "n_tokens": 60, "n_pass": [549, 102, 40]}
{"time": "2021-02-22 21:11:25.643166", "score": "0.2031", "loss": "3.1808", "code": "n equals(Object other){if(ul){ if (ull) r; else if (tll);}}", "n_tokens": 59, "n_pass": [551, 103, 41]}
{"time": "2021-02-22 21:11:28.234952", "score": "0.2031", "loss": "3.1808", "code": "n equals(Object other){if(ul){if (ull) r; else if (tll);}}", "n_tokens": 58, "n_pass": [552, 104, 42]}
{"time": "2021-02-22 21:11:30.874185", "score": "0.2031", "loss": "3.1808", "code": "n equals(Object other){if(ul){if(ull) r; else if (tll);}}", "n_tokens": 57, "n_pass": [555, 105, 43]}
{"time": "2021-02-22 21:11:41.313116", "score": "0.2031", "loss": "3.1808", "code": "n equals(Object other){if(ul){if(ull)r; else if (tll);}}", "n_tokens": 56, "n_pass": [561, 109, 44]}
{"time": "2021-02-22 21:11:43.902343", "score": "0.1954", "loss": "3.22", "code": "n equals(Object other){if(ul){if(ull); else if (tll);}}", "n_tokens": 55, "n_pass": [562, 110, 45]}
{"time": "2021-02-22 21:11:46.500336", "score": "0.1954", "loss": "3.22", "code": "n equals(Object other){if(ul){if(ull);else if (tll);}}", "n_tokens": 54, "n_pass": [564, 111, 46]}
{"time": "2021-02-22 21:11:56.960768", "score": "0.1954", "loss": "3.22", "code": "n equals(Object other){if(ul){if(ull);else if(tll);}}", "n_tokens": 53, "n_pass": [572, 115, 47]}
{"time": "2021-02-22 21:12:39.210747", "score": "0.3463", "loss": "2.8169", "code": "n equals(Object other){if(l){if(ull);else if(tll);}}", "n_tokens": 52, "n_pass": [607, 130, 48]}

Minimal simplified code:
n equals(Object other){if(l){if(ull);else if(tll);}}

