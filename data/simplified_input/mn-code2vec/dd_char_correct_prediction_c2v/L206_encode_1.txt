
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/bcgit__bc-java/core/src/main/java/org/bouncycastle/asn1/ASN1UTCTime_encode.java
method_name = encode
method_body = void encode(ASN1OutputStream out) throws IOException { out.write(BERTags.UTC_TIME); int length = time.length; out.writeLength(length); for (int i = 0; i != length; i++) { out.write((byte) time[i]); } }
predict, score, loss = encode, 0.9997537732124329, 0.0004231034545227885

Trace of simplified code(s):
{"time": "2021-02-22 19:43:16.655363", "score": "0.9997", "loss": "0.0004", "code": "void encode(ASN1OutputStream out) throws IOException { out.write(BERTags.UTC_TIME); int length = time.length; out.writeLength(length); for (int i = 0; i != length; i++) { out.write((byte) time[i]); } }", "n_tokens": 201, "n_pass": [1, 1, 1]}
{"time": "2021-02-22 19:43:19.335621", "score": "0.9999", "loss": "0.0001", "code": "void encode(ASN1OutputStream out) throws IOException { out.write(BERTags.UTC_TIME); int length = tim(length); for (int i = 0; i != length; i++) { out.write((byte) time[i]); } }", "n_tokens": 176, "n_pass": [24, 2, 2]}
{"time": "2021-02-22 19:43:21.977268", "score": "0.9987", "loss": "0.0016", "code": "void encode(ream out) throws IOException { out.write(BERTags.UTC_TIME); int length = tim(length); for (int i = 0; i != length; i++) { out.write((byte) time[i]); } }", "n_tokens": 164, "n_pass": [52, 3, 3]}
{"time": "2021-02-22 19:43:24.596681", "score": "0.9991", "loss": "0.0011", "code": "void encode(ream out) throws IOException { out.write(BERTags.UTC_TIME); iim(length); for (int i = 0; i != length; i++) { out.write((byte) time[i]); } }", "n_tokens": 151, "n_pass": [58, 4, 4]}
{"time": "2021-02-22 19:43:27.235244", "score": "0.9992", "loss": "0.001", "code": "void encode(ream out) throws IOException { out.write(BERTags.UTC_TIME); iim(length); for (int i = 0; igth; i++) { out.write((byte) time[i]); } }", "n_tokens": 144, "n_pass": [100, 5, 5]}
{"time": "2021-02-22 19:43:29.904795", "score": "0.9992", "loss": "0.0011", "code": "void encode(ream out) throws IOException { out.write(BERTags.UTC_TIME); iim(length); for (int i = 0; igth; i++) { ou((byte) time[i]); } }", "n_tokens": 137, "n_pass": [103, 6, 6]}
{"time": "2021-02-22 19:43:32.911764", "score": "0.9985", "loss": "0.0019", "code": "void encode(ream out) throws Ition { out.write(BERTags.UTC_TIME); iim(length); for (int i = 0; igth; i++) { ou((byte) time[i]); } }", "n_tokens": 131, "n_pass": [112, 7, 7]}
{"time": "2021-02-22 19:43:35.575591", "score": "0.9628", "loss": "0.0761", "code": "void encode(ream out) throws Ition {rite(BERTags.UTC_TIME); iim(length); for (int i = 0; igth; i++) { ou((byte) time[i]); } }", "n_tokens": 125, "n_pass": [114, 8, 8]}
{"time": "2021-02-22 19:43:43.851836", "score": "0.9593", "loss": "0.0673", "code": "void encode(ream out) throws Ition {e(BERTags.UTC_TIME); iim(length); for (int i = 0; igth; i++) { ou((byte) time[i]); } }", "n_tokens": 122, "n_pass": [175, 11, 9]}
{"time": "2021-02-22 19:43:54.430299", "score": "0.9817", "loss": "0.0237", "code": "void encode(ream out) throws Ition {e(BERTags.UTIME); iim(length); for (int i = 0; igth; i++) { ou((byte) time[i]); } }", "n_tokens": 119, "n_pass": [179, 15, 10]}
{"time": "2021-02-22 19:43:57.055943", "score": "0.9936", "loss": "0.0077", "code": "void encode(ream out) throws Ition {e(BERTags.UT); iim(length); for (int i = 0; igth; i++) { ou((byte) time[i]); } }", "n_tokens": 116, "n_pass": [180, 16, 11]}
{"time": "2021-02-22 19:43:59.689405", "score": "0.993", "loss": "0.0083", "code": "void encode(ream out) throws Ition {e(BERTags.UT); (length); for (int i = 0; igth; i++) { ou((byte) time[i]); } }", "n_tokens": 113, "n_pass": [182, 17, 12]}
{"time": "2021-02-22 19:44:02.379685", "score": "0.9961", "loss": "0.0052", "code": "void encode(ream out) throws Ition {e(BERTags.UT); (leh); for (int i = 0; igth; i++) { ou((byte) time[i]); } }", "n_tokens": 110, "n_pass": [184, 18, 13]}
{"time": "2021-02-22 19:44:04.994702", "score": "0.996", "loss": "0.0053", "code": "void encode(ream out) throws Ition {e(BERTags.UT); (leh); for ( i = 0; igth; i++) { ou((byte) time[i]); } }", "n_tokens": 107, "n_pass": [188, 19, 14]}
{"time": "2021-02-22 19:44:07.605667", "score": "0.9962", "loss": "0.005", "code": "void encode(ream out) throws Ition {e(BERTags.UT); (leh); for ( i ; igth; i++) { ou((byte) time[i]); } }", "n_tokens": 104, "n_pass": [190, 20, 15]}
{"time": "2021-02-22 19:44:10.215409", "score": "0.9961", "loss": "0.0051", "code": "void encode(ream out) throws Ition {e(BERTags.UT); (leh); for ( i ; i; i++) { ou((byte) time[i]); } }", "n_tokens": 101, "n_pass": [192, 21, 16]}
{"time": "2021-02-22 19:44:12.830125", "score": "0.9954", "loss": "0.0058", "code": "d encode(ream out) throws Ition {e(BERTags.UT); (leh); for ( i ; i; i++) { ou((byte) time[i]); } }", "n_tokens": 98, "n_pass": [202, 22, 17]}
{"time": "2021-02-22 19:44:16.217374", "score": "0.9912", "loss": "0.0136", "code": "d encode(m out) throws Ition {e(BERTags.UT); (leh); for ( i ; i; i++) { ou((byte) time[i]); } }", "n_tokens": 95, "n_pass": [206, 23, 18]}
{"time": "2021-02-22 19:44:18.827283", "score": "0.9739", "loss": "0.0322", "code": "d encode(m out) throws In {e(BERTags.UT); (leh); for ( i ; i; i++) { ou((byte) time[i]); } }", "n_tokens": 92, "n_pass": [212, 24, 19]}
{"time": "2021-02-22 19:44:26.707332", "score": "0.9745", "loss": "0.0315", "code": "d encode(m out) throws In {e(BERTags); (leh); for ( i ; i; i++) { ou((byte) time[i]); } }", "n_tokens": 89, "n_pass": [217, 27, 20]}
{"time": "2021-02-22 19:44:29.330236", "score": "0.9739", "loss": "0.0321", "code": "d encode(m out) throws In {e(BERTags); (leh); for (; i; i++) { ou((byte) time[i]); } }", "n_tokens": 86, "n_pass": [223, 28, 21]}
{"time": "2021-02-22 19:44:39.712473", "score": "0.9734", "loss": "0.0325", "code": "d encode(m out) throws In {e(BERTags); (leh); for (;; i++) { ou((byte) time[i]); } }", "n_tokens": 84, "n_pass": [308, 31, 22]}
{"time": "2021-02-22 19:44:42.324996", "score": "0.9842", "loss": "0.0184", "code": "d encode(m out) throws In {e(BERTags); (leh); for (;; i++) {u((byte) time[i]); } }", "n_tokens": 82, "n_pass": [313, 32, 23]}
{"time": "2021-02-22 19:44:44.927283", "score": "0.9794", "loss": "0.0232", "code": "d encode(m out) throws In {e(BERTags); (leh); for (;; i++) {u((be) time[i]); } }", "n_tokens": 80, "n_pass": [316, 33, 24]}
{"time": "2021-02-22 19:44:47.520022", "score": "0.98", "loss": "0.0226", "code": "d encode(m out) throws In {e(BERTags); (leh); for (;; i++) {u((be)ime[i]); } }", "n_tokens": 78, "n_pass": [318, 34, 25]}
{"time": "2021-02-22 19:44:50.118386", "score": "0.9891", "loss": "0.0126", "code": "d encode(m out) throws In {e(BERTags); (leh); for (;; i++) {u((be)e[i]); } }", "n_tokens": 76, "n_pass": [319, 35, 26]}
{"time": "2021-02-22 19:44:55.841038", "score": "0.9478", "loss": "0.0711", "code": "d encode(m ut) throws In {e(BERTags); (leh); for (;; i++) {u((be)e[i]); } }", "n_tokens": 75, "n_pass": [336, 36, 27]}
{"time": "2021-02-22 19:44:58.435892", "score": "0.9721", "loss": "0.0355", "code": "d encode(m t) throws In {e(BERTags); (leh); for (;; i++) {u((be)e[i]); } }", "n_tokens": 74, "n_pass": [337, 37, 28]}
{"time": "2021-02-22 19:45:01.036436", "score": "0.9721", "loss": "0.0355", "code": "d encode(m t)throws In {e(BERTags); (leh); for (;; i++) {u((be)e[i]); } }", "n_tokens": 73, "n_pass": [340, 38, 29]}
{"time": "2021-02-22 19:45:03.644827", "score": "0.9809", "loss": "0.0251", "code": "d encode(m t)throws I{e(BERTags); (leh); for (;; i++) {u((be)e[i]); } }", "n_tokens": 71, "n_pass": [348, 39, 30]}
{"time": "2021-02-22 19:45:14.023598", "score": "0.9374", "loss": "0.0807", "code": "d encode(m t)throws I{e(BERTags); (h); for (;; i++) {u((be)e[i]); } }", "n_tokens": 69, "n_pass": [356, 43, 31]}
{"time": "2021-02-22 19:45:32.205476", "score": "0.9374", "loss": "0.0807", "code": "d encode(m t)throws I{e(BERTags); (h); for(;; i++) {u((be)e[i]); } }", "n_tokens": 68, "n_pass": [451, 47, 32]}
{"time": "2021-02-22 19:45:34.821198", "score": "0.9374", "loss": "0.0807", "code": "d encode(m t)throws I{e(BERTags); (h); for(;;i++) {u((be)e[i]); } }", "n_tokens": 67, "n_pass": [455, 48, 33]}
{"time": "2021-02-22 19:45:37.442170", "score": "0.9374", "loss": "0.0807", "code": "d encode(m t)throws I{e(BERTags); (h); for(;;i++){u((be)e[i]); } }", "n_tokens": 66, "n_pass": [460, 49, 34]}
{"time": "2021-02-22 19:45:40.048113", "score": "0.9583", "loss": "0.0503", "code": "d encode(m t)throws I{e(BERTags); (h); for(;;i++){((be)e[i]); } }", "n_tokens": 65, "n_pass": [462, 50, 35]}
{"time": "2021-02-22 19:45:42.650954", "score": "0.9477", "loss": "0.0629", "code": "d encode(m t)throws I{e(BERTags); (h); for(;;i++){((e)e[i]); } }", "n_tokens": 64, "n_pass": [465, 51, 36]}
{"time": "2021-02-22 19:45:45.280606", "score": "0.9585", "loss": "0.0492", "code": "d encode(m t)throws I{e(BERTags); (h); for(;;i++){((e)[i]); } }", "n_tokens": 63, "n_pass": [468, 52, 37]}
{"time": "2021-02-22 19:45:47.887732", "score": "0.9585", "loss": "0.0492", "code": "d encode(m t)throws I{e(BERTags); (h); for(;;i++){((e)[i]);} }", "n_tokens": 62, "n_pass": [474, 53, 38]}
{"time": "2021-02-22 19:45:50.491699", "score": "0.9585", "loss": "0.0492", "code": "d encode(m t)throws I{e(BERTags); (h); for(;;i++){((e)[i]);}}", "n_tokens": 61, "n_pass": [476, 54, 39]}
{"time": "2021-02-22 19:45:56.191090", "score": "0.9414", "loss": "0.0769", "code": "d encode(m t)throws I{(BERTags); (h); for(;;i++){((e)[i]);}}", "n_tokens": 60, "n_pass": [500, 55, 40]}
{"time": "2021-02-22 19:46:17.414089", "score": "0.9414", "loss": "0.0769", "code": "d encode(m t)throws I{(BERTags);(h); for(;;i++){((e)[i]);}}", "n_tokens": 59, "n_pass": [511, 63, 41]}
{"time": "2021-02-22 19:46:20.046651", "score": "0.9414", "loss": "0.0769", "code": "d encode(m t)throws I{(BERTags);(h);for(;;i++){((e)[i]);}}", "n_tokens": 58, "n_pass": [516, 64, 42]}

Minimal simplified code:
d encode(m t)throws I{(BERTags);(h);for(;;i++){((e)[i]);}}

