
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/bcgit__bc-java/prov/src/main/jdk1.3/org/bouncycastle/jce/cert/CertPathBuilderException_printStackTrace.java
method_name = printStackTrace
method_body = public void printStackTrace(PrintWriter pw) { super.printStackTrace(pw); if (getCause() != null) { getCause().printStackTrace(pw); } }
predict, score, loss = printStackTrace, 0.9969223141670227, 0.005588858854025602

Trace of simplified code(s):
{"time": "2021-02-22 19:35:19.013975", "score": "0.9969", "loss": "0.0056", "code": "public void printStackTrace(PrintWriter pw) { super.printStackTrace(pw); if (getCause() != null) { getCause().printStackTrace(pw); } }", "n_tokens": 134, "n_pass": [1, 1, 1]}
{"time": "2021-02-22 19:35:22.031562", "score": "0.4799", "loss": "1.3297", "code": "public void printStackTrace(PrintWriter pw) { supe(pw); if (getCause() != null) { getCause().printStackTrace(pw); } }", "n_tokens": 117, "n_pass": [23, 2, 2]}
{"time": "2021-02-22 19:35:27.646560", "score": "0.4317", "loss": "1.3708", "code": "public void printStackTrace(PrintWriter pw) { supe(pw); if (getC= null) { getCause().printStackTrace(pw); } }", "n_tokens": 109, "n_pass": [47, 4, 3]}
{"time": "2021-02-22 19:35:32.915154", "score": "0.796", "loss": "0.6067", "code": "public void printStackTrace(PrintWriter pw) { supe(pw); if (getC= null) { getCause().printS(pw); } }", "n_tokens": 100, "n_pass": [51, 6, 4]}
{"time": "2021-02-22 19:35:35.507565", "score": "0.7571", "loss": "0.7275", "code": "oid printStackTrace(PrintWriter pw) { supe(pw); if (getC= null) { getCause().printS(pw); } }", "n_tokens": 92, "n_pass": [53, 7, 5]}
{"time": "2021-02-22 19:35:43.102158", "score": "0.1689", "loss": "4.1796", "code": "oid printStackTrace(tWriter pw) { supe(pw); if (getC= null) { getCause().printS(pw); } }", "n_tokens": 88, "n_pass": [92, 9, 6]}
{"time": "2021-02-22 19:36:03.450359", "score": "0.2017", "loss": "3.1779", "code": "oid printStackTrace(riter pw) { supe(pw); if (getC= null) { getCause().printS(pw); } }", "n_tokens": 86, "n_pass": [155, 16, 7]}
{"time": "2021-02-22 19:36:08.673779", "score": "0.2284", "loss": "2.8891", "code": "oid printStackTrace(riter pw) { pe(pw); if (getC= null) { getCause().printS(pw); } }", "n_tokens": 84, "n_pass": [161, 18, 8]}
{"time": "2021-02-22 19:36:26.872820", "score": "0.3506", "loss": "2.8389", "code": "oid printStackTrace(riter pw) { pe(pw); if (getC= null) { tCause().printS(pw); } }", "n_tokens": 82, "n_pass": [175, 25, 9]}
{"time": "2021-02-22 19:36:45.134950", "score": "0.3988", "loss": "2.6085", "code": "d printStackTrace(riter pw) { pe(pw); if (getC= null) { tCause().printS(pw); } }", "n_tokens": 80, "n_pass": [186, 32, 10]}
{"time": "2021-02-22 19:36:56.078520", "score": "0.3653", "loss": "2.8286", "code": "d printStackTrace(riter pw) { (pw); if (getC= null) { tCause().printS(pw); } }", "n_tokens": 78, "n_pass": [202, 35, 11]}
{"time": "2021-02-22 19:36:58.711003", "score": "0.3644", "loss": "2.7843", "code": "d printStackTrace(riter pw) { (pw); if (tC= null) { tCause().printS(pw); } }", "n_tokens": 76, "n_pass": [208, 36, 12]}
{"time": "2021-02-22 19:37:01.356586", "score": "0.4243", "loss": "2.6157", "code": "d printStackTrace(riter pw) { (pw); if (tCnull) { tCause().printS(pw); } }", "n_tokens": 74, "n_pass": [210, 37, 13]}
{"time": "2021-02-22 19:37:03.967530", "score": "0.4731", "loss": "2.3998", "code": "d printStackTrace(riter pw) { (pw); if (tCll) { tCause().printS(pw); } }", "n_tokens": 72, "n_pass": [211, 38, 14]}
{"time": "2021-02-22 19:37:06.556901", "score": "0.4188", "loss": "2.4474", "code": "d printStackTrace(riter pw) { (pw); if (tC) { tCause().printS(pw); } }", "n_tokens": 70, "n_pass": [212, 39, 15]}
{"time": "2021-02-22 19:37:36.416682", "score": "0.4188", "loss": "2.4474", "code": "d printStackTrace(riter pw) { (pw); if (tC){ tCause().printS(pw); } }", "n_tokens": 69, "n_pass": [313, 48, 16]}
{"time": "2021-02-22 19:37:39.004178", "score": "0.4188", "loss": "2.4474", "code": "d printStackTrace(riter pw) { (pw); if (tC){tCause().printS(pw); } }", "n_tokens": 68, "n_pass": [315, 49, 17]}
{"time": "2021-02-22 19:38:22.167361", "score": "0.449", "loss": "1.7111", "code": "d printStackTrace(iter pw) { (pw); if (tC){tCause().printS(pw); } }", "n_tokens": 67, "n_pass": [354, 63, 18]}
{"time": "2021-02-22 19:38:30.009239", "score": "0.447", "loss": "1.6317", "code": "d printStackTrace(itr pw) { (pw); if (tC){tCause().printS(pw); } }", "n_tokens": 66, "n_pass": [357, 66, 19]}
{"time": "2021-02-22 19:38:35.207248", "score": "0.7116", "loss": "1.6282", "code": "d printStackTrace(itr w) { (pw); if (tC){tCause().printS(pw); } }", "n_tokens": 65, "n_pass": [360, 68, 20]}
{"time": "2021-02-22 19:38:37.831543", "score": "0.7116", "loss": "1.6282", "code": "d printStackTrace(itr w){ (pw); if (tC){tCause().printS(pw); } }", "n_tokens": 64, "n_pass": [363, 69, 21]}
{"time": "2021-02-22 19:38:40.438216", "score": "0.7116", "loss": "1.6282", "code": "d printStackTrace(itr w){(pw); if (tC){tCause().printS(pw); } }", "n_tokens": 63, "n_pass": [365, 70, 22]}
{"time": "2021-02-22 19:38:43.039710", "score": "0.725", "loss": "1.6023", "code": "d printStackTrace(itr w){(w); if (tC){tCause().printS(pw); } }", "n_tokens": 62, "n_pass": [367, 71, 23]}
{"time": "2021-02-22 19:38:45.660970", "score": "0.725", "loss": "1.6023", "code": "d printStackTrace(itr w){(w);if (tC){tCause().printS(pw); } }", "n_tokens": 61, "n_pass": [371, 72, 24]}
{"time": "2021-02-22 19:38:48.260929", "score": "0.725", "loss": "1.6023", "code": "d printStackTrace(itr w){(w);if(tC){tCause().printS(pw); } }", "n_tokens": 60, "n_pass": [374, 73, 25]}
{"time": "2021-02-22 19:38:50.856344", "score": "0.6999", "loss": "1.6176", "code": "d printStackTrace(itr w){(w);if(C){tCause().printS(pw); } }", "n_tokens": 59, "n_pass": [376, 74, 26]}
{"time": "2021-02-22 19:38:53.468285", "score": "0.3965", "loss": "2.2006", "code": "d printStackTrace(itr w){(w);if(C){Cause().printS(pw); } }", "n_tokens": 58, "n_pass": [380, 75, 27]}
{"time": "2021-02-22 19:38:56.072544", "score": "0.3687", "loss": "2.1961", "code": "d printStackTrace(itr w){(w);if(C){ause().printS(pw); } }", "n_tokens": 57, "n_pass": [381, 76, 28]}
{"time": "2021-02-22 19:38:58.671364", "score": "0.3129", "loss": "2.3753", "code": "d printStackTrace(itr w){(w);if(C){use().printS(pw); } }", "n_tokens": 56, "n_pass": [382, 77, 29]}
{"time": "2021-02-22 19:39:01.272702", "score": "0.3765", "loss": "2.147", "code": "d printStackTrace(itr w){(w);if(C){se().printS(pw); } }", "n_tokens": 55, "n_pass": [383, 78, 30]}
{"time": "2021-02-22 19:39:03.878758", "score": "0.3831", "loss": "2.1297", "code": "d printStackTrace(itr w){(w);if(C){e().printS(pw); } }", "n_tokens": 54, "n_pass": [384, 79, 31]}
{"time": "2021-02-22 19:39:33.913001", "score": "0.3911", "loss": "2.093", "code": "d printStackTrace(ir w){(w);if(C){e().printS(pw); } }", "n_tokens": 53, "n_pass": [419, 88, 32]}
{"time": "2021-02-22 19:39:36.537772", "score": "0.5102", "loss": "2.0323", "code": "d printStackTrace(i w){(w);if(C){e().printS(pw); } }", "n_tokens": 52, "n_pass": [420, 89, 33]}
{"time": "2021-02-22 19:40:10.270149", "score": "0.5102", "loss": "2.0323", "code": "d printStackTrace(i w){(w);if(C){e().printS(pw);} }", "n_tokens": 51, "n_pass": [481, 99, 34]}
{"time": "2021-02-22 19:40:12.867612", "score": "0.5102", "loss": "2.0323", "code": "d printStackTrace(i w){(w);if(C){e().printS(pw);}}", "n_tokens": 50, "n_pass": [482, 100, 35]}

Minimal simplified code:
d printStackTrace(i w){(w);if(C){e().printS(pw);}}

