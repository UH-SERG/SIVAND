
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/facebook__stetho/stetho/src/main/java/com/facebook/stetho/common/ProcessUtil_getProcessName.java
method_name = getProcessName
method_body = @Nullable public static synchronized String getProcessName() { if (!sProcessNameRead) { sProcessNameRead = true; try { sProcessName = readProcessName(); } catch (IOException e) { } } return sProcessName; }
predict, score, loss = getProcessName, 0.9999912977218628, 3.361645576660521e-05

Trace of simplified code(s):
{"time": "2021-02-22 12:39:46.577073", "score": "1.0", "loss": "0.0", "code": "@Nullable public static synchronized String getProcessName() { if (!sProcessNameRead) { sProcessNameRead = true; try { sProcessName = readProcessName(); } catch (IOException e) { } } return sProcessName; }", "n_tokens": 205, "n_pass": [1, 1, 1]}
{"time": "2021-02-22 12:39:49.995973", "score": "1.0", "loss": "0.0", "code": "@Nullable public static  String getProcessName() { if (!sProcessNameRead) { sProcessNameRead = true; try { sProcessName = readProcessName(); } catch (IOException e) { } } return sProcessName; }", "n_tokens": 193, "n_pass": [46, 2, 2]}
{"time": "2021-02-22 12:39:52.988256", "score": "0.9995", "loss": "0.0025", "code": "@Nullable public static  String getProcessName() { if (!sProcessNameRead) { ead = true; try { sProcessName = readProcessName(); } catch (IOException e) { } } return sProcessName; }", "n_tokens": 180, "n_pass": [51, 3, 3]}
{"time": "2021-02-22 12:39:55.593102", "score": "0.9928", "loss": "0.0242", "code": "@Nullable public static  String getProcessName() { if (!sProcessNameRead) { ead = true; try { sProcessocessName(); } catch (IOException e) { } } return sProcessName; }", "n_tokens": 167, "n_pass": [54, 4, 4]}
{"time": "2021-02-22 12:39:58.588004", "score": "0.9928", "loss": "0.0242", "code": "@Nullable public static  String getProcessName() { if (!sProcessNameRead) { ead = true; try { sPressName(); } catch (IOException e) { } } return sProcessName; }", "n_tokens": 160, "n_pass": [94, 5, 5]}
{"time": "2021-02-22 12:40:01.260662", "score": "0.9928", "loss": "0.0237", "code": "@Nullable public static  String getProcessName() { if (!sProcessNameRead) { ead = true; try { sPr(); } catch (IOException e) { } } return sProcessName; }", "n_tokens": 153, "n_pass": [95, 6, 6]}
{"time": "2021-02-22 12:40:03.878291", "score": "0.9912", "loss": "0.0302", "code": "@Nullable public static  String getProcessName() { if (!sProcessNameRead) { ead = true; try { sPr(); } catch (Iion e) { } } return sProcessName; }", "n_tokens": 146, "n_pass": [98, 7, 7]}
{"time": "2021-02-22 12:40:11.775039", "score": "0.9912", "loss": "0.0303", "code": "@Nullablic static  String getProcessName() { if (!sProcessNameRead) { ead = true; try { sPr(); } catch (Iion e) { } } return sProcessName; }", "n_tokens": 140, "n_pass": [105, 10, 8]}
{"time": "2021-02-22 12:40:14.374038", "score": "0.9912", "loss": "0.0303", "code": "@Nullatatic  String getProcessName() { if (!sProcessNameRead) { ead = true; try { sPr(); } catch (Iion e) { } } return sProcessName; }", "n_tokens": 134, "n_pass": [106, 11, 9]}
{"time": "2021-02-22 12:40:17.048793", "score": "0.9872", "loss": "0.0473", "code": "@Nulla String getProcessName() { if (!sProcessNameRead) { ead = true; try { sPr(); } catch (Iion e) { } } return sProcessName; }", "n_tokens": 128, "n_pass": [107, 12, 10]}
{"time": "2021-02-22 12:40:20.904127", "score": "0.9872", "loss": "0.0473", "code": "@Nulla String getProcessName() { if (!sPromeRead) { ead = true; try { sPr(); } catch (Iion e) { } } return sProcessName; }", "n_tokens": 122, "n_pass": [114, 13, 11]}
{"time": "2021-02-22 12:40:23.499754", "score": "0.9872", "loss": "0.0473", "code": "@Nulla String getProcessName() { if (!sPro) { ead = true; try { sPr(); } catch (Iion e) { } } return sProcessName; }", "n_tokens": 116, "n_pass": [115, 14, 12]}
{"time": "2021-02-22 12:40:26.102689", "score": "0.9999", "loss": "0.0002", "code": "@Nulla String getProcessName() { if (!sPro) { eaue; try { sPr(); } catch (Iion e) { } } return sProcessName; }", "n_tokens": 110, "n_pass": [117, 15, 13]}
{"time": "2021-02-22 12:40:33.981802", "score": "1.0", "loss": "0.0", "code": " String getProcessName() { if (!sPro) { eaue; try { sPr(); } catch (Iion e) { } } return sProcessName; }", "n_tokens": 104, "n_pass": [127, 18, 14]}
{"time": "2021-02-22 12:40:36.584498", "score": "1.0", "loss": "0.0", "code": "g getProcessName() { if (!sPro) { eaue; try { sPr(); } catch (Iion e) { } } return sProcessName; }", "n_tokens": 98, "n_pass": [128, 19, 15]}
{"time": "2021-02-22 12:40:47.446058", "score": "1.0", "loss": "0.0", "code": "g getProcessName() { if (!s) { eaue; try { sPr(); } catch (Iion e) { } } return sProcessName; }", "n_tokens": 95, "n_pass": [183, 22, 16]}
{"time": "2021-02-22 12:40:50.051108", "score": "1.0", "loss": "0.0", "code": "g getProcessName() { if (!s) {ue; try { sPr(); } catch (Iion e) { } } return sProcessName; }", "n_tokens": 92, "n_pass": [185, 23, 17]}
{"time": "2021-02-22 12:40:52.648145", "score": "1.0", "loss": "0.0", "code": "g getProcessName() { if (!s) { try { sPr(); } catch (Iion e) { } } return sProcessName; }", "n_tokens": 89, "n_pass": [186, 24, 18]}
{"time": "2021-02-22 12:40:55.247538", "score": "1.0", "loss": "0.0", "code": "g getProcessName() { if (!s) { try {r(); } catch (Iion e) { } } return sProcessName; }", "n_tokens": 86, "n_pass": [189, 25, 19]}
{"time": "2021-02-22 12:40:57.853323", "score": "1.0", "loss": "0.0", "code": "g getProcessName() { if (!s) { try {; } catch (Iion e) { } } return sProcessName; }", "n_tokens": 83, "n_pass": [190, 26, 20]}
{"time": "2021-02-22 12:41:00.492847", "score": "1.0", "loss": "0.0", "code": "g getProcessName() { if (!s) { try {; } catch (I e) { } } return sProcessName; }", "n_tokens": 80, "n_pass": [195, 27, 21]}
{"time": "2021-02-22 12:41:03.129245", "score": "0.9987", "loss": "0.0025", "code": "g getProcessName() { if (!s) { try {; } catch (I e) { } } re sProcessName; }", "n_tokens": 76, "n_pass": [199, 28, 22]}
{"time": "2021-02-22 12:41:38.120223", "score": "0.9987", "loss": "0.0025", "code": "g getProcessName() { if (!s) { try {} catch (I e) { } } re sProcessName; }", "n_tokens": 74, "n_pass": [303, 38, 23]}
{"time": "2021-02-22 12:42:10.858129", "score": "0.9987", "loss": "0.0025", "code": "g getProcessName() { if (!s) { try {} catch(I e) { } } re sProcessName; }", "n_tokens": 73, "n_pass": [408, 46, 24]}
{"time": "2021-02-22 12:42:13.470409", "score": "0.9987", "loss": "0.0025", "code": "g getProcessName() { if (!s) { try {} catch(I e){ } } re sProcessName; }", "n_tokens": 72, "n_pass": [414, 47, 25]}
{"time": "2021-02-22 12:42:16.063756", "score": "0.9987", "loss": "0.0025", "code": "g getProcessName() { if (!s) { try {} catch(I e){} } re sProcessName; }", "n_tokens": 71, "n_pass": [416, 48, 26]}
{"time": "2021-02-22 12:42:18.660059", "score": "0.9987", "loss": "0.0025", "code": "g getProcessName() { if (!s) { try {} catch(I e){}} re sProcessName; }", "n_tokens": 70, "n_pass": [418, 49, 27]}
{"time": "2021-02-22 12:42:21.281767", "score": "0.9987", "loss": "0.0025", "code": "g getProcessName() { if (!s) { try {} catch(I e){}}re sProcessName; }", "n_tokens": 69, "n_pass": [420, 50, 28]}
{"time": "2021-02-22 12:42:23.875369", "score": "0.9979", "loss": "0.0041", "code": "g getProcessName() { if (!s) { try {} catch(I e){}}e sProcessName; }", "n_tokens": 68, "n_pass": [421, 51, 29]}
{"time": "2021-02-22 12:43:02.930424", "score": "0.9979", "loss": "0.0041", "code": "g getProcessName() { if (!s) { try {} catch(I e){}}e sProcessName;}", "n_tokens": 67, "n_pass": [437, 66, 30]}
{"time": "2021-02-22 12:43:11.843274", "score": "0.9979", "loss": "0.0041", "code": "g getProcessName(){ if (!s) { try {} catch(I e){}}e sProcessName;}", "n_tokens": 66, "n_pass": [457, 67, 31]}
{"time": "2021-02-22 12:43:14.455361", "score": "0.9979", "loss": "0.0041", "code": "g getProcessName(){if (!s) { try {} catch(I e){}}e sProcessName;}", "n_tokens": 65, "n_pass": [459, 68, 32]}
{"time": "2021-02-22 12:43:17.045771", "score": "0.9979", "loss": "0.0041", "code": "g getProcessName(){if(!s) { try {} catch(I e){}}e sProcessName;}", "n_tokens": 64, "n_pass": [462, 69, 33]}
{"time": "2021-02-22 12:43:19.674945", "score": "0.9962", "loss": "0.0067", "code": "g getProcessName(){if(s) { try {} catch(I e){}}e sProcessName;}", "n_tokens": 63, "n_pass": [464, 70, 34]}
{"time": "2021-02-22 12:43:22.267691", "score": "0.9962", "loss": "0.0067", "code": "g getProcessName(){if(s){ try {} catch(I e){}}e sProcessName;}", "n_tokens": 62, "n_pass": [467, 71, 35]}
{"time": "2021-02-22 12:43:24.873266", "score": "0.9962", "loss": "0.0067", "code": "g getProcessName(){if(s){try {} catch(I e){}}e sProcessName;}", "n_tokens": 61, "n_pass": [469, 72, 36]}
{"time": "2021-02-22 12:43:27.460399", "score": "0.9962", "loss": "0.0067", "code": "g getProcessName(){if(s){try{} catch(I e){}}e sProcessName;}", "n_tokens": 60, "n_pass": [473, 73, 37]}
{"time": "2021-02-22 12:43:30.089745", "score": "0.9962", "loss": "0.0067", "code": "g getProcessName(){if(s){try{}catch(I e){}}e sProcessName;}", "n_tokens": 59, "n_pass": [476, 74, 38]}

Minimal simplified code:
g getProcessName(){if(s){try{}catch(I e){}}e sProcessName;}

