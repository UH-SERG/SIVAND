
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/OpenRock__OpenAM/openam-entitlements/src/main/java/org/forgerock/openam/entitlement/conditions/environment/SimpleTimeCondition_hashCode.java
method_name = hashCode
method_body = @Override public int hashCode() { int hc = super.hashCode(); hc = 31 * hc + startHour; hc = 31 * hc + startMinute; hc = 31 * hc + endHour; hc = 31 * hc + endMinute; hc = 31 * hc + startDayInt; hc = 31 * hc + endDayInt; if (startDateCal != null) { hc = 31 * hc + startDateCal.hashCode(); } if (endDateCal != null) { hc = 31 * hc + endDateCal.hashCode(); } if (enforcementTZ != null) { hc = 31 * hc + enforcementTZ.hashCode(); } return hc; }
predict, score, loss = hashCode, 0.9998427629470825, 0.0001722425949992612

Trace of simplified code(s):
{"time": "2021-02-25 02:46:48.629295", "score": "0.9996", "loss": "0.0004", "code": "@Override public int hashCode() { int hc = super.hashCode(); hc = 31 * hc + startHour; hc = 31 * hc + startMinute; hc = 31 * hc + endHour; hc = 31 * hc + endMinute; hc = 31 * hc + startDayInt; hc = 31 * hc + endDayInt; if (startDateCal != null) { hc = 31 * hc + startDateCal.hashCode(); } if (endDateCal != null) { hc = 31 * hc + endDateCal.hashCode(); } if (enforcementTZ != null) { hc = 31 * hc + enforcementTZ.hashCode(); } return hc; }", "n_tokens": 439, "n_pass": [1, 1, 1]}
{"time": "2021-02-25 02:46:51.341866", "score": "0.9997", "loss": "0.0003", "code": "@Override public int hashCode() { int hc = super.hashCnute; hc = 31 * hc + endHour; hc = 31 * hc + endMinute; hc = 31 * hc + startDayInt; hc = 31 * hc + endDayInt; if (startDateCal != null) { hc = 31 * hc + startDateCal.hashCode(); } if (endDateCal != null) { hc = 31 * hc + endDateCal.hashCode(); } if (enforcementTZ != null) { hc = 31 * hc + enforcementTZ.hashCode(); } return hc; }", "n_tokens": 384, "n_pass": [21, 2, 2]}
{"time": "2021-02-25 02:46:54.239783", "score": "0.9998", "loss": "0.0002", "code": "@Override public int hashCode() { int hc = super.hashCnute; hc = 31 * hc + endHour; hc = 31 * hc + endMinute;if (startDateCal != null) { hc = 31 * hc + startDateCal.hashCode(); } if (endDateCal != null) { hc = 31 * hc + endDateCal.hashCode(); } if (enforcementTZ != null) { hc = 31 * hc + enforcementTZ.hashCode(); } return hc; }", "n_tokens": 329, "n_pass": [23, 3, 3]}
{"time": "2021-02-25 02:46:57.359291", "score": "0.9997", "loss": "0.0004", "code": "@Override public int hashCode() { int hc = super.hashCnute; hc = 31 * hc + endHour; hc = 31 * hc + endMinute;if (startDateCal != null) { hc = 31 * hc + startDateCal.hashCode(); } if (endDateCal != null) { hc = 31 * hc + endDateCal.hashCode(); } if (enforcementTZ != null) {Z.hashCode(); } return hc; }", "n_tokens": 301, "n_pass": [48, 4, 4]}
{"time": "2021-02-25 02:47:00.423023", "score": "0.9999", "loss": "0.0002", "code": "@Override public int hashCode() { int hc = super.hashCr; hc = 31 * hc + endMinute;if (startDateCal != null) { hc = 31 * hc + startDateCal.hashCode(); } if (endDateCal != null) { hc = 31 * hc + endDateCal.hashCode(); } if (enforcementTZ != null) {Z.hashCode(); } return hc; }", "n_tokens": 274, "n_pass": [52, 5, 5]}
{"time": "2021-02-25 02:47:03.078648", "score": "0.9997", "loss": "0.0003", "code": "@Override public int hashCode() { int hc = super.hashC;if (startDateCal != null) { hc = 31 * hc + startDateCal.hashCode(); } if (endDateCal != null) { hc = 31 * hc + endDateCal.hashCode(); } if (enforcementTZ != null) {Z.hashCode(); } return hc; }", "n_tokens": 247, "n_pass": [53, 6, 6]}
{"time": "2021-02-25 02:47:06.178237", "score": "0.9992", "loss": "0.0009", "code": "@Override public int hashCode() { int hc = super.hashC;if (startD) { hc = 31 * hc + startDateCal.hashCode(); } if (endDateCal != null) { hc = 31 * hc + endDateCal.hashCode(); } if (enforcementTZ != null) {Z.hashCode(); } return hc; }", "n_tokens": 233, "n_pass": [82, 7, 7]}
{"time": "2021-02-25 02:47:08.835492", "score": "0.9998", "loss": "0.0002", "code": "@Override public int hashCode() { int hc = super.hashC;if (startD) { hc = 31 * Cal.hashCode(); } if (endDateCal != null) { hc = 31 * hc + endDateCal.hashCode(); } if (enforcementTZ != null) {Z.hashCode(); } return hc; }", "n_tokens": 219, "n_pass": [84, 8, 8]}
{"time": "2021-02-25 02:47:11.517433", "score": "0.9997", "loss": "0.0004", "code": "@Override public int hashCode() { int hc = super.hashC;if (startD) { hc = 31 * Cal.hashCode(); } if (endDateCal != null) { hc = 31 * hchashCode(); } if (enforcementTZ != null) {Z.hashCode(); } return hc; }", "n_tokens": 205, "n_pass": [89, 9, 9]}
{"time": "2021-02-25 02:47:14.179819", "score": "0.9997", "loss": "0.0005", "code": "@Override public int hashCode() { int hc = super.hashC;if (startD) { hc = 31 * Cal.hashCode(); } if (endDateCal != null) { hc = 31 * hchashCode(); } if (enforcementTZ != null) {} return hc; }", "n_tokens": 191, "n_pass": [93, 10, 10]}
{"time": "2021-02-25 02:47:17.222033", "score": "0.9998", "loss": "0.0003", "code": "@Override public int hashCode() { int hhC;if (startD) { hc = 31 * Cal.hashCode(); } if (endDateCal != null) { hc = 31 * hchashCode(); } if (enforcementTZ != null) {} return hc; }", "n_tokens": 178, "n_pass": [98, 11, 11]}
{"time": "2021-02-25 02:47:20.404382", "score": "0.9964", "loss": "0.0057", "code": "@Override public int hashCode() { int hhC;if (startD) { hc = 31 * hCode(); } if (endDateCal != null) { hc = 31 * hchashCode(); } if (enforcementTZ != null) {} return hc; }", "n_tokens": 171, "n_pass": [142, 12, 12]}
{"time": "2021-02-25 02:47:23.045799", "score": "0.9998", "loss": "0.0003", "code": "@Override public int hashCode() { int hhC;if (startD) { hc = 31 * hCode(); } if (endDateCal != null) { hc = hashCode(); } if (enforcementTZ != null) {} return hc; }", "n_tokens": 164, "n_pass": [148, 13, 13]}
{"time": "2021-02-25 02:47:25.688611", "score": "0.9983", "loss": "0.0026", "code": "@Override public int hashCode() { int hhC;if (startD) { hc = 31 * hCode(); } if (endDateCal != null) { hc = e(); } if (enforcementTZ != null) {} return hc; }", "n_tokens": 157, "n_pass": [149, 14, 14]}
{"time": "2021-02-25 02:47:28.368057", "score": "0.9983", "loss": "0.0026", "code": "@Override public int hashCode() { int hhC;if (startD) { hc = 31 * hCode(); } if (endDateCal != null) { hc = e(); } if (enftTZ != null) {} return hc; }", "n_tokens": 150, "n_pass": [152, 15, 15]}
{"time": "2021-02-25 02:47:31.041451", "score": "0.9984", "loss": "0.0024", "code": "@Override public int hashCode() { int hhC;if (startD) { hc = 31 * hCode(); } if (endDateCal != null) { hc = e(); } if (enfnull) {} return hc; }", "n_tokens": 143, "n_pass": [153, 16, 16]}
{"time": "2021-02-25 02:47:33.699541", "score": "0.9982", "loss": "0.0027", "code": "@Overrblic int hashCode() { int hhC;if (startD) { hc = 31 * hCode(); } if (endDateCal != null) { hc = e(); } if (enfnull) {} return hc; }", "n_tokens": 137, "n_pass": [158, 17, 17]}
{"time": "2021-02-25 02:47:37.554872", "score": "0.9982", "loss": "0.0027", "code": "@Overrc int hashCode() { int hhC;if (startD) { hc = 31 * hCode(); } if (endDateCal != null) { hc = e(); } if (enfnull) {} return hc; }", "n_tokens": 134, "n_pass": [219, 18, 18]}
{"time": "2021-02-25 02:47:41.470767", "score": "0.9982", "loss": "0.0028", "code": "@Overrc int hashCode() {t hhC;if (startD) { hc = 31 * hCode(); } if (endDateCal != null) { hc = e(); } if (enfnull) {} return hc; }", "n_tokens": 131, "n_pass": [225, 19, 19]}
{"time": "2021-02-25 02:47:44.120515", "score": "0.9981", "loss": "0.0028", "code": "@Overrc int hashCode() {hC;if (startD) { hc = 31 * hCode(); } if (endDateCal != null) { hc = e(); } if (enfnull) {} return hc; }", "n_tokens": 128, "n_pass": [226, 20, 20]}
{"time": "2021-02-25 02:47:46.799944", "score": "0.9981", "loss": "0.0028", "code": "@Overrc int hashCode() {if (startD) { hc = 31 * hCode(); } if (endDateCal != null) { hc = e(); } if (enfnull) {} return hc; }", "n_tokens": 125, "n_pass": [227, 21, 21]}
{"time": "2021-02-25 02:47:49.547850", "score": "0.9975", "loss": "0.0041", "code": "@Overrc int hashCode() {if (stD) { hc = 31 * hCode(); } if (endDateCal != null) { hc = e(); } if (enfnull) {} return hc; }", "n_tokens": 122, "n_pass": [230, 22, 22]}
{"time": "2021-02-25 02:47:52.222576", "score": "0.9964", "loss": "0.006", "code": "@Overrc int hashCode() {if (stD) { hc = 31 * de(); } if (endDateCal != null) { hc = e(); } if (enfnull) {} return hc; }", "n_tokens": 119, "n_pass": [236, 23, 23]}
{"time": "2021-02-25 02:47:54.950908", "score": "0.9964", "loss": "0.006", "code": "@Overrc int hashCode() {if (stD) { hc = 31 * de(); } if (eneCal != null) { hc = e(); } if (enfnull) {} return hc; }", "n_tokens": 115, "n_pass": [241, 24, 24]}
{"time": "2021-02-25 02:47:57.700145", "score": "0.9953", "loss": "0.0077", "code": "@Overrc int hashCode() {if (stD) { hc = 31 * de(); } if (en != null) { hc = e(); } if (enfnull) {} return hc; }", "n_tokens": 111, "n_pass": [242, 25, 25]}
{"time": "2021-02-25 02:48:00.342675", "score": "0.9971", "loss": "0.0046", "code": "@Overrc int hashCode() {if (stD) { hc = 31 * de(); } if (ennull) { hc = e(); } if (enfnull) {} return hc; }", "n_tokens": 107, "n_pass": [243, 26, 26]}
{"time": "2021-02-25 02:48:02.973261", "score": "0.9967", "loss": "0.0053", "code": "@Overrc int hashCode() {if (stD) { hc = 31 * de(); } if (en) { hc = e(); } if (enfnull) {} return hc; }", "n_tokens": 103, "n_pass": [244, 27, 27]}
{"time": "2021-02-25 02:48:05.686228", "score": "0.9954", "loss": "0.0087", "code": "@Overrc int hashCode() {if (stD) { hc = 31 * de(); } if (en) {  e(); } if (enfnull) {} return hc; }", "n_tokens": 99, "n_pass": [246, 28, 28]}
{"time": "2021-02-25 02:48:08.358685", "score": "0.9957", "loss": "0.0078", "code": "@Overrc int hashCode() {if (stD) { hc = 31 * de(); } if (en) { ; } if (enfnull) {} return hc; }", "n_tokens": 95, "n_pass": [247, 29, 29]}
{"time": "2021-02-25 02:48:10.981871", "score": "0.9985", "loss": "0.0025", "code": "@Overrc int hashCode() {if (stD) { hc = 31 * de(); } if (en) { ; } if (ull) {} return hc; }", "n_tokens": 91, "n_pass": [250, 30, 30]}
{"time": "2021-02-25 02:48:13.684432", "score": "0.9978", "loss": "0.0027", "code": "@Overrc int hashCode() {if (stD) { hc = 31 * de(); } if (en) { ; } if (ull)return hc; }", "n_tokens": 87, "n_pass": [252, 31, 31]}
{"time": "2021-02-25 02:48:16.349991", "score": "0.997", "loss": "0.0085", "code": "@Overrc int hashCode() {if (stD) { hc = 31 * de(); } if (en) { ; } if (ull)retuc; }", "n_tokens": 83, "n_pass": [254, 32, 32]}
{"time": "2021-02-25 02:48:19.002296", "score": "0.9968", "loss": "0.0091", "code": "@Ovc int hashCode() {if (stD) { hc = 31 * de(); } if (en) { ; } if (ull)retuc; }", "n_tokens": 80, "n_pass": [257, 33, 33]}
{"time": "2021-02-25 02:48:23.341064", "score": "0.9969", "loss": "0.0087", "code": "@Ovc int hashCode() {if (stD) { hc = 31 * de(); } if (en) { ; } if (ull)c; }", "n_tokens": 76, "n_pass": [279, 34, 34]}
{"time": "2021-02-25 02:48:29.638983", "score": "0.9973", "loss": "0.0064", "code": "@vc int hashCode() {if (stD) { hc = 31 * de(); } if (en) { ; } if (ull)c; }", "n_tokens": 75, "n_pass": [352, 35, 35]}
{"time": "2021-02-25 02:48:32.292799", "score": "0.9978", "loss": "0.0057", "code": "@c int hashCode() {if (stD) { hc = 31 * de(); } if (en) { ; } if (ull)c; }", "n_tokens": 74, "n_pass": [353, 36, 36]}
{"time": "2021-02-25 02:48:46.659377", "score": "0.9986", "loss": "0.0033", "code": "@c int hashCode() {if (s) { hc = 31 * de(); } if (en) { ; } if (ull)c; }", "n_tokens": 72, "n_pass": [372, 40, 37]}
{"time": "2021-02-25 02:48:49.285344", "score": "0.9981", "loss": "0.0043", "code": "@c int hashCode() {if (s) { hc =1 * de(); } if (en) { ; } if (ull)c; }", "n_tokens": 70, "n_pass": [377, 41, 38]}
{"time": "2021-02-25 02:48:51.906494", "score": "0.999", "loss": "0.002", "code": "@c int hashCode() {if (s) { hc =1 * de; } if (en) { ; } if (ull)c; }", "n_tokens": 68, "n_pass": [381, 42, 39]}
{"time": "2021-02-25 02:48:54.557406", "score": "0.999", "loss": "0.002", "code": "@c int hashCode() {if (s) { hc =1 * de; } if (en) { } if (ull)c; }", "n_tokens": 66, "n_pass": [389, 43, 40]}
{"time": "2021-02-25 02:48:57.593020", "score": "0.999", "loss": "0.002", "code": "@c int hashCode() {if (s) { hc =1 * de; } if (en) { } if (l)c; }", "n_tokens": 64, "n_pass": [393, 44, 41]}
{"time": "2021-02-25 02:49:18.972717", "score": "0.999", "loss": "0.0019", "code": "@c int hashCode() {if (s) { hc =1 * de; } if (en) { } if (l); }", "n_tokens": 63, "n_pass": [484, 48, 42]}
{"time": "2021-02-25 02:49:21.610015", "score": "0.999", "loss": "0.0019", "code": "@c int hashCode() {if (s) { hc =1 * de; } if (en) { } if (l);}", "n_tokens": 62, "n_pass": [485, 49, 43]}
{"time": "2021-02-25 02:49:36.175201", "score": "0.999", "loss": "0.0019", "code": "@c int hashCode(){if (s) { hc =1 * de; } if (en) { } if (l);}", "n_tokens": 61, "n_pass": [504, 53, 44]}
{"time": "2021-02-25 02:49:38.809712", "score": "0.999", "loss": "0.0019", "code": "@c int hashCode(){if(s) { hc =1 * de; } if (en) { } if (l);}", "n_tokens": 60, "n_pass": [508, 54, 45]}
{"time": "2021-02-25 02:49:41.547082", "score": "0.999", "loss": "0.0019", "code": "@c int hashCode(){if(s){ hc =1 * de; } if (en) { } if (l);}", "n_tokens": 59, "n_pass": [512, 55, 46]}
{"time": "2021-02-25 02:49:44.205873", "score": "0.999", "loss": "0.0019", "code": "@c int hashCode(){if(s){hc =1 * de; } if (en) { } if (l);}", "n_tokens": 58, "n_pass": [514, 56, 47]}
{"time": "2021-02-25 02:49:46.823865", "score": "0.6334", "loss": "0.5248", "code": "@c int hashCode(){if(s){c =1 * de; } if (en) { } if (l);}", "n_tokens": 57, "n_pass": [515, 57, 48]}
{"time": "2021-02-25 02:49:49.512709", "score": "0.6334", "loss": "0.5248", "code": "@c int hashCode(){if(s){c=1 * de; } if (en) { } if (l);}", "n_tokens": 56, "n_pass": [517, 58, 49]}
{"time": "2021-02-25 02:49:52.543295", "score": "0.6334", "loss": "0.5248", "code": "@c int hashCode(){if(s){c=1* de; } if (en) { } if (l);}", "n_tokens": 55, "n_pass": [520, 59, 50]}
{"time": "2021-02-25 02:49:55.162418", "score": "0.6334", "loss": "0.5248", "code": "@c int hashCode(){if(s){c=1*de; } if (en) { } if (l);}", "n_tokens": 54, "n_pass": [522, 60, 51]}
{"time": "2021-02-25 02:49:57.874671", "score": "0.6602", "loss": "0.4772", "code": "@c int hashCode(){if(s){c=1*e; } if (en) { } if (l);}", "n_tokens": 53, "n_pass": [523, 61, 52]}
{"time": "2021-02-25 02:50:00.558434", "score": "0.6602", "loss": "0.4772", "code": "@c int hashCode(){if(s){c=1*e;} if (en) { } if (l);}", "n_tokens": 52, "n_pass": [526, 62, 53]}
{"time": "2021-02-25 02:50:03.549897", "score": "0.6602", "loss": "0.4772", "code": "@c int hashCode(){if(s){c=1*e;}if (en) { } if (l);}", "n_tokens": 51, "n_pass": [528, 63, 54]}
{"time": "2021-02-25 02:50:06.279761", "score": "0.6602", "loss": "0.4772", "code": "@c int hashCode(){if(s){c=1*e;}if(en) { } if (l);}", "n_tokens": 50, "n_pass": [531, 64, 55]}
{"time": "2021-02-25 02:50:08.913453", "score": "0.6756", "loss": "0.4417", "code": "@c int hashCode(){if(s){c=1*e;}if(n) { } if (l);}", "n_tokens": 49, "n_pass": [533, 65, 56]}
{"time": "2021-02-25 02:50:11.530020", "score": "0.6756", "loss": "0.4417", "code": "@c int hashCode(){if(s){c=1*e;}if(n){ } if (l);}", "n_tokens": 48, "n_pass": [536, 66, 57]}
{"time": "2021-02-25 02:50:14.164361", "score": "0.6756", "loss": "0.4417", "code": "@c int hashCode(){if(s){c=1*e;}if(n){} if (l);}", "n_tokens": 47, "n_pass": [538, 67, 58]}
{"time": "2021-02-25 02:50:16.813613", "score": "0.6756", "loss": "0.4417", "code": "@c int hashCode(){if(s){c=1*e;}if(n){}if (l);}", "n_tokens": 46, "n_pass": [540, 68, 59]}
{"time": "2021-02-25 02:50:19.476538", "score": "0.2566", "loss": "1.6754", "code": "@c int hashCode(){if(s){c=1*e;}if(n){}f (l);}", "n_tokens": 45, "n_pass": [541, 69, 60]}
{"time": "2021-02-25 02:50:22.108965", "score": "0.4346", "loss": "0.971", "code": "@c int hashCode(){if(s){c=1*e;}if(n){} (l);}", "n_tokens": 44, "n_pass": [542, 70, 61]}
{"time": "2021-02-25 02:50:24.732179", "score": "0.4346", "loss": "0.971", "code": "@c int hashCode(){if(s){c=1*e;}if(n){}(l);}", "n_tokens": 43, "n_pass": [543, 71, 62]}

Minimal simplified code:
@c int hashCode(){if(s){c=1*e;}if(n){}(l);}

