
path = /scratch/rabin/data/code2vec/transforms/Methods/java-large/test/bcgit__bc-java/prov/src/test/java/org/bouncycastle/jce/provider/test/CertPathTest_getEncoded.java
method_name = getEncoded
method_body = public byte[] getEncoded(String encoding) throws CertificateEncodingException { if (getType().equals(encoding)) { return (byte[]) this.encoding.clone(); } throw new CertificateEncodingException("Encoding not supported: " + encoding); }
predict, score, loss = getEncoded, 0.9839522242546082, 0.021815452724695206

Trace of simplified code(s):
{"time": "2021-05-26 07:49:37.630850", "score": "0.984", "loss": "0.0218", "code": "public byte[] getEncoded(String encoding) throws CertificateEncodingException { if (getType().equals(encoding)) { return (byte[]) this.encoding.clone(); } throw new CertificateEncodingException(\"Encoding not supported: \" + encoding); }", "n_tokens": 235, "n_pass": [1, 1, 1]}
{"time": "2021-05-26 07:49:40.303056", "score": "0.9802", "loss": "0.0273", "code": "public byte[] getEncoded(String encoding) throws CertificateEncodingException { if (getType().equals(encoding)) { relone(); } throw new CertificateEncodingException(\"Encoding not supported: \" + encoding); }", "n_tokens": 206, "n_pass": [24, 2, 2]}
{"time": "2021-05-26 07:49:43.017694", "score": "0.9966", "loss": "0.0078", "code": "public byte[] getEncoded(String encoding) throws CertificateEncodingException { if (getType().equals(encoding)) { relone(); } throweEncodingException(\"Encoding not supported: \" + encoding); }", "n_tokens": 191, "n_pass": [47, 3, 3]}
{"time": "2021-05-26 07:49:45.662767", "score": "0.9966", "loss": "0.0078", "code": "public byte[] getEncoded(String encoding) throws CertificateEncodingException { if (getType().equals(encoding)) { relone(); } throwion(\"Encoding not supported: \" + encoding); }", "n_tokens": 176, "n_pass": [48, 4, 4]}
{"time": "2021-05-26 07:49:48.781083", "score": "0.8328", "loss": "0.3462", "code": "public byte[] getEncoded(String encoding) throws Certifieption { if (getType().equals(encoding)) { relone(); } throwion(\"Encoding not supported: \" + encoding); }", "n_tokens": 161, "n_pass": [56, 5, 5]}
{"time": "2021-05-26 07:49:51.844236", "score": "0.8328", "loss": "0.3462", "code": "public byte[] getEncoded(String encoding) throws Certifi{ if (getType().equals(encoding)) { relone(); } throwion(\"Encoding not supported: \" + encoding); }", "n_tokens": 154, "n_pass": [90, 6, 6]}
{"time": "2021-05-26 07:50:02.532652", "score": "0.8328", "loss": "0.3462", "code": "byte[] getEncoded(String encoding) throws Certifi{ if (getType().equals(encoding)) { relone(); } throwion(\"Encoding not supported: \" + encoding); }", "n_tokens": 147, "n_pass": [104, 10, 7]}
{"time": "2021-05-26 07:50:14.063790", "score": "0.797", "loss": "0.4181", "code": "e[] getEncoded(String encoding) throws Certifi{ if (getType().equals(encoding)) { relone(); } throwion(\"Encoding not supported: \" + encoding); }", "n_tokens": 144, "n_pass": [165, 14, 8]}
{"time": "2021-05-26 07:50:20.978918", "score": "0.8092", "loss": "0.399", "code": "e[] getEncoded(Str encoding) throws Certifi{ if (getType().equals(encoding)) { relone(); } throwion(\"Encoding not supported: \" + encoding); }", "n_tokens": 141, "n_pass": [172, 16, 9]}
{"time": "2021-05-26 07:50:23.617111", "score": "0.7601", "loss": "0.5059", "code": "e[] getEncoded(Str ening) throws Certifi{ if (getType().equals(encoding)) { relone(); } throwion(\"Encoding not supported: \" + encoding); }", "n_tokens": 138, "n_pass": [174, 17, 10]}
{"time": "2021-05-26 07:50:26.248380", "score": "0.7689", "loss": "0.4877", "code": "e[] getEncoded(Str en) throws Certifi{ if (getType().equals(encoding)) { relone(); } throwion(\"Encoding not supported: \" + encoding); }", "n_tokens": 135, "n_pass": [175, 18, 11]}
{"time": "2021-05-26 07:50:28.877577", "score": "0.7187", "loss": "0.6264", "code": "e[] getEncoded(Str en) throws Cfi{ if (getType().equals(encoding)) { relone(); } throwion(\"Encoding not supported: \" + encoding); }", "n_tokens": 131, "n_pass": [179, 19, 12]}
{"time": "2021-05-26 07:50:31.523752", "score": "0.7202", "loss": "0.6303", "code": "e[] getEncoded(Str en) throws Cfi{ if (ype().equals(encoding)) { relone(); } throwion(\"Encoding not supported: \" + encoding); }", "n_tokens": 127, "n_pass": [182, 20, 13]}
{"time": "2021-05-26 07:50:34.173486", "score": "0.6948", "loss": "0.6952", "code": "e[] getEncoded(Str en) throws Cfi{ if (ype().eq(encoding)) { relone(); } throwion(\"Encoding not supported: \" + encoding); }", "n_tokens": 123, "n_pass": [185, 21, 14]}
{"time": "2021-05-26 07:50:36.810728", "score": "0.5498", "loss": "1.0795", "code": "e[] getEncoded(Str en) throws Cfi{ if (ype().eq(encg)) { relone(); } throwion(\"Encoding not supported: \" + encoding); }", "n_tokens": 119, "n_pass": [187, 22, 15]}
{"time": "2021-05-26 07:50:39.446811", "score": "0.5388", "loss": "1.0847", "code": "e[] getEncoded(Str en) throws Cfi{ if (ype().eq(encg)) { re(); } throwion(\"Encoding not supported: \" + encoding); }", "n_tokens": 115, "n_pass": [190, 23, 16]}
{"time": "2021-05-26 07:50:42.074479", "score": "0.5388", "loss": "1.0847", "code": "e[] getEncoded(Str en) throws Cfi{ if (ype().eq(encg)) { re(); } thon(\"Encoding not supported: \" + encoding); }", "n_tokens": 111, "n_pass": [193, 24, 17]}
{"time": "2021-05-26 07:51:00.848264", "score": "0.4515", "loss": "1.4437", "code": "e[] getEncoded(Str en) throws Cfi{ if (ype().eq(encg)) { re(); } thon(\"Encoding not supported: \" + ding); }", "n_tokens": 107, "n_pass": [202, 31, 18]}
{"time": "2021-05-26 07:51:22.126782", "score": "0.4861", "loss": "1.2445", "code": "e[] getEncoded(Str en) throws Cfi{ if (ype().eq(encg)) { re(); } thon(\"Encoding not supported: \" + ng); }", "n_tokens": 105, "n_pass": [290, 38, 19]}
{"time": "2021-05-26 07:51:24.921482", "score": "0.4861", "loss": "1.2445", "code": "e[]getEncoded(Str en) throws Cfi{ if (ype().eq(encg)) { re(); } thon(\"Encoding not supported: \" + ng); }", "n_tokens": 104, "n_pass": [296, 39, 20]}
{"time": "2021-05-26 07:51:30.630549", "score": "0.461", "loss": "1.303", "code": "e[]getEncoded(r en) throws Cfi{ if (ype().eq(encg)) { re(); } thon(\"Encoding not supported: \" + ng); }", "n_tokens": 102, "n_pass": [305, 40, 21]}
{"time": "2021-05-26 07:51:33.264886", "score": "0.6481", "loss": "0.7469", "code": "e[]getEncoded(r en) throws C{ if (ype().eq(encg)) { re(); } thon(\"Encoding not supported: \" + ng); }", "n_tokens": 100, "n_pass": [313, 41, 22]}
{"time": "2021-05-26 07:51:35.902015", "score": "0.6385", "loss": "0.7676", "code": "e[]getEncoded(r en) throws C{ if (e().eq(encg)) { re(); } thon(\"Encoding not supported: \" + ng); }", "n_tokens": 98, "n_pass": [317, 42, 23]}
{"time": "2021-05-26 07:51:38.544209", "score": "0.5398", "loss": "1.1305", "code": "e[]getEncoded(r en) throws C{ if (e().eq(eg)) { re(); } thon(\"Encoding not supported: \" + ng); }", "n_tokens": 96, "n_pass": [322, 43, 24]}
{"time": "2021-05-26 07:51:41.215031", "score": "0.5359", "loss": "1.1372", "code": "e[]getEncoded(r en) throws C{ if (e().eq(eg)) { re; } thon(\"Encoding not supported: \" + ng); }", "n_tokens": 94, "n_pass": [327, 44, 25]}
{"time": "2021-05-26 07:51:43.856498", "score": "0.4775", "loss": "1.3196", "code": "e[]getEncoded(r en) throws C{ if (e().eq(eg)) { re; } on(\"Encoding not supported: \" + ng); }", "n_tokens": 92, "n_pass": [330, 45, 26]}
{"time": "2021-05-26 07:52:18.492430", "score": "0.4775", "loss": "1.3196", "code": "e[]getEncoded(r en) throws C{ if (e().eq(eg)) { re; } on(\"Encoding not supported\" + ng); }", "n_tokens": 90, "n_pass": [344, 58, 27]}
{"time": "2021-05-26 07:52:24.014989", "score": "0.479", "loss": "1.3146", "code": "e[]getEncoded(r en) throws C{ if (e().eq(eg)) { ; } on(\"Encoding not supported\" + ng); }", "n_tokens": 88, "n_pass": [378, 59, 28]}
{"time": "2021-05-26 07:52:26.643333", "score": "0.479", "loss": "1.3146", "code": "e[]getEncoded(r en) throws C{ if (e().eq(eg)) { } on(\"Encoding not supported\" + ng); }", "n_tokens": 86, "n_pass": [379, 60, 29]}
{"time": "2021-05-26 07:53:09.568170", "score": "0.5159", "loss": "1.1544", "code": "e[]getEncoded(r en) throws C{ if (e().eq(eg)) { } o(\"Encoding not supported\" + ng); }", "n_tokens": 85, "n_pass": [505, 73, 30]}
{"time": "2021-05-26 07:53:33.546488", "score": "0.5159", "loss": "1.1544", "code": "e[]getEncoded(r en) throws C{ if (e().eq(eg)) { } o(\"Encodingnot supported\" + ng); }", "n_tokens": 84, "n_pass": [516, 82, 31]}
{"time": "2021-05-26 07:53:44.249911", "score": "0.5159", "loss": "1.1544", "code": "e[]getEncoded(r en) throws C{ if (e().eq(eg)) { } o(\"Encodingnotsupported\" + ng); }", "n_tokens": 83, "n_pass": [520, 86, 32]}
{"time": "2021-05-26 07:54:11.007220", "score": "0.5159", "loss": "1.1544", "code": "e[]getEncoded(r en) throws C{ if (e().eq(eg)) { } o(\"Encodingnotsupported\"+ ng); }", "n_tokens": 82, "n_pass": [531, 96, 33]}
{"time": "2021-05-26 07:54:13.711944", "score": "0.5159", "loss": "1.1544", "code": "e[]getEncoded(r en) throws C{ if (e().eq(eg)) { } o(\"Encodingnotsupported\"+ng); }", "n_tokens": 81, "n_pass": [533, 97, 34]}
{"time": "2021-05-26 07:54:16.388020", "score": "0.4995", "loss": "1.1986", "code": "e[]getEncoded(r en) throws C{ if (e().eq(eg)) { } o(\"Encodingnotsupported\"+g); }", "n_tokens": 80, "n_pass": [534, 98, 35]}
{"time": "2021-05-26 07:54:19.042410", "score": "0.4995", "loss": "1.1986", "code": "e[]getEncoded(r en) throws C{ if (e().eq(eg)) { } o(\"Encodingnotsupported\"+g);}", "n_tokens": 79, "n_pass": [538, 99, 36]}
{"time": "2021-05-26 07:54:25.891620", "score": "0.508", "loss": "1.1917", "code": "e[]getEncoded(r n) throws C{ if (e().eq(eg)) { } o(\"Encodingnotsupported\"+g);}", "n_tokens": 78, "n_pass": [556, 100, 37]}
{"time": "2021-05-26 07:54:28.536982", "score": "0.508", "loss": "1.1917", "code": "e[]getEncoded(r n)throws C{ if (e().eq(eg)) { } o(\"Encodingnotsupported\"+g);}", "n_tokens": 77, "n_pass": [559, 101, 38]}
{"time": "2021-05-26 07:54:31.209860", "score": "0.508", "loss": "1.1917", "code": "e[]getEncoded(r n)throws C{if (e().eq(eg)) { } o(\"Encodingnotsupported\"+g);}", "n_tokens": 76, "n_pass": [569, 102, 39]}
{"time": "2021-05-26 07:54:33.854474", "score": "0.508", "loss": "1.1917", "code": "e[]getEncoded(r n)throws C{if(e().eq(eg)) { } o(\"Encodingnotsupported\"+g);}", "n_tokens": 75, "n_pass": [572, 103, 40]}
{"time": "2021-05-26 07:54:36.507702", "score": "0.5519", "loss": "1.126", "code": "e[]getEncoded(r n)throws C{if(e().q(eg)) { } o(\"Encodingnotsupported\"+g);}", "n_tokens": 74, "n_pass": [578, 104, 41]}
{"time": "2021-05-26 07:54:39.219703", "score": "0.4724", "loss": "1.2457", "code": "e[]getEncoded(r n)throws C{if(e().q(g)) { } o(\"Encodingnotsupported\"+g);}", "n_tokens": 73, "n_pass": [581, 105, 42]}
{"time": "2021-05-26 07:54:41.877643", "score": "0.6969", "loss": "0.6888", "code": "e[]getEncoded(r n)throws C{if(e().q()) { } o(\"Encodingnotsupported\"+g);}", "n_tokens": 72, "n_pass": [582, 106, 43]}
{"time": "2021-05-26 07:54:44.590436", "score": "0.6969", "loss": "0.6888", "code": "e[]getEncoded(r n)throws C{if(e().q()){ } o(\"Encodingnotsupported\"+g);}", "n_tokens": 71, "n_pass": [585, 107, 44]}
{"time": "2021-05-26 07:54:47.232884", "score": "0.6969", "loss": "0.6888", "code": "e[]getEncoded(r n)throws C{if(e().q()){} o(\"Encodingnotsupported\"+g);}", "n_tokens": 70, "n_pass": [587, 108, 45]}
{"time": "2021-05-26 07:54:49.925466", "score": "0.6969", "loss": "0.6888", "code": "e[]getEncoded(r n)throws C{if(e().q()){}o(\"Encodingnotsupported\"+g);}", "n_tokens": 69, "n_pass": [589, 109, 46]}

Minimal simplified code:
e[]getEncoded(r n)throws C{if(e().q()){}o("Encodingnotsupported"+g);}

