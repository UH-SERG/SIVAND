
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/qqchenjian318__VideoEditor-For-Android/app/src/main/java/com/example/cj/videoeditor/gpufilter/filter/MagicHefeFilter_onInit.java
method_name = onInit
method_body = protected void onInit() { super.onInit(); for (int i = 0; i < inputTextureUniformLocations.length; i++) inputTextureUniformLocations[i] = GLES20.glGetUniformLocation(getProgram(), "inputImageTexture" + (2 + i)); mGLStrengthLocation = GLES20.glGetUniformLocation(mGLProgId, "strength"); }
predict, score, loss = onInit, 0.9999960660934448, 6.556489552167477e-06

Trace of simplified code(s):
{"time": "2021-02-22 10:06:48.819610", "score": "1.0", "loss": "0.0", "code": "protected void onInit() { super.onInit(); for (int i = 0; i < inputTextureUniformLocations.length; i++) inputTextureUniformLocations[i] = GLES20.glGetUniformLocation(getProgram(), \"inputImageTexture\" + (2 + i)); mGLStrengthLocation = GLES20.glGetUniformLocation(mGLProgId, \"strength\"); }", "n_tokens": 287, "n_pass": [1, 1, 1]}
{"time": "2021-02-22 10:06:51.449461", "score": "0.9996", "loss": "0.0005", "code": "protected void onInit() { super.onInit(); for (int i = 0; i < inputTextureUniformLocations.length; i++) inputTextureUniformLocations[i] = GLES2StrengthLocation = GLES20.glGetUniformLocation(mGLProgId, \"strength\"); }", "n_tokens": 215, "n_pass": [10, 2, 2]}
{"time": "2021-02-22 10:06:56.761136", "score": "0.9865", "loss": "0.0149", "code": "protected void onInit() { super.onInit(); for (int i = 0; i < inputTextureUniformLocations.length; i++) inpStrengthLocation = GLES20.glGetUniformLocation(mGLProgId, \"strength\"); }", "n_tokens": 179, "n_pass": [24, 4, 3]}
{"time": "2021-02-22 10:06:59.425782", "score": "0.9886", "loss": "0.0125", "code": "protected void onInit() { super.onInit(); for (int i = 0; i < inputTextureUniformLocations.length; i++) inprmLocation(mGLProgId, \"strength\"); }", "n_tokens": 143, "n_pass": [25, 5, 4]}
{"time": "2021-02-22 10:07:02.437779", "score": "0.9888", "loss": "0.0123", "code": "protected void onInit() { super.onInit(); for (int i = 0; i < inputTexts.length; i++) inprmLocation(mGLProgId, \"strength\"); }", "n_tokens": 125, "n_pass": [44, 6, 5]}
{"time": "2021-02-22 10:07:05.471810", "score": "0.9888", "loss": "0.0123", "code": "protected void onInit() { super.onInit(); for (int i = 0; i < inputTexts.length; i++) inpn(mGLProgId, \"strength\"); }", "n_tokens": 116, "n_pass": [67, 7, 6]}
{"time": "2021-02-22 10:07:11.190636", "score": "0.9886", "loss": "0.0125", "code": "protected void onInit() { super.onInit(); for (int i = 0; i < s.length; i++) inpn(mGLProgId, \"strength\"); }", "n_tokens": 107, "n_pass": [77, 9, 7]}
{"time": "2021-02-22 10:07:16.830699", "score": "0.9887", "loss": "0.0124", "code": "protected void onInit() { super.onInit(); for (int i = 0;s.length; i++) inpn(mGLProgId, \"strength\"); }", "n_tokens": 102, "n_pass": [114, 11, 8]}
{"time": "2021-02-22 10:07:19.445891", "score": "0.9887", "loss": "0.0124", "code": "protected void onInit() { super.onInit(); for (int i = 0;gth; i++) inpn(mGLProgId, \"strength\"); }", "n_tokens": 97, "n_pass": [115, 12, 9]}
{"time": "2021-02-22 10:07:22.058488", "score": "0.9999", "loss": "0.0001", "code": "protected void onInit() { super.onInit(); for (int i = 0;gth; i++) inpn(ogId, \"strength\"); }", "n_tokens": 92, "n_pass": [119, 13, 10]}
{"time": "2021-02-22 10:07:24.662120", "score": "0.9999", "loss": "0.0001", "code": "protected void onInit() { super.onInit(); for (int i = 0;gth; i++) inpn( \"strength\"); }", "n_tokens": 87, "n_pass": [120, 14, 11]}
{"time": "2021-02-22 10:07:27.319710", "score": "0.9999", "loss": "0.0001", "code": "protected void onInit() { super.onInit(); for (int i = 0;gth; i++) inpn( \"str\"); }", "n_tokens": 82, "n_pass": [122, 15, 12]}
{"time": "2021-02-22 10:07:29.925063", "score": "0.9999", "loss": "0.0001", "code": "protecteid onInit() { super.onInit(); for (int i = 0;gth; i++) inpn( \"str\"); }", "n_tokens": 78, "n_pass": [126, 16, 13]}
{"time": "2021-02-22 10:07:41.141080", "score": "0.9999", "loss": "0.0001", "code": "protecteid onInit() { super.onInit(); for (i = 0;gth; i++) inpn( \"str\"); }", "n_tokens": 74, "n_pass": [136, 20, 14]}
{"time": "2021-02-22 10:07:43.764053", "score": "0.9999", "loss": "0.0001", "code": "ecteid onInit() { super.onInit(); for (i = 0;gth; i++) inpn( \"str\"); }", "n_tokens": 70, "n_pass": [143, 21, 15]}
{"time": "2021-02-22 10:07:46.366485", "score": "0.9999", "loss": "0.0001", "code": "id onInit() { super.onInit(); for (i = 0;gth; i++) inpn( \"str\"); }", "n_tokens": 66, "n_pass": [144, 22, 16]}
{"time": "2021-02-22 10:07:59.772350", "score": "0.8485", "loss": "0.2616", "code": "id onInit() { per.onInit(); for (i = 0;gth; i++) inpn( \"str\"); }", "n_tokens": 64, "n_pass": [197, 26, 17]}
{"time": "2021-02-22 10:08:15.403353", "score": "0.884", "loss": "0.387", "code": "id onInit() { per.onInit; for (i = 0;gth; i++) inpn( \"str\"); }", "n_tokens": 62, "n_pass": [203, 32, 18]}
{"time": "2021-02-22 10:08:18.010260", "score": "0.8997", "loss": "0.3497", "code": "id onInit() { per.onInit; for (i = 0;g; i++) inpn( \"str\"); }", "n_tokens": 60, "n_pass": [211, 33, 19]}
{"time": "2021-02-22 10:08:20.604264", "score": "0.8953", "loss": "0.3547", "code": "id onInit() { per.onInit; for (i = 0;g; i++) n( \"str\"); }", "n_tokens": 57, "n_pass": [215, 34, 20]}
{"time": "2021-02-22 10:08:42.026706", "score": "0.8953", "loss": "0.3547", "code": "id onInit() { per.onInit; for (i = 0;g; i++)n( \"str\"); }", "n_tokens": 56, "n_pass": [294, 40, 21]}
{"time": "2021-02-22 10:08:44.612549", "score": "0.8876", "loss": "0.2739", "code": "id onInit() { per.onInit; for (i = 0;g; i++)( \"str\"); }", "n_tokens": 55, "n_pass": [295, 41, 22]}
{"time": "2021-02-22 10:08:47.204293", "score": "0.8937", "loss": "0.2617", "code": "id onInit() { per.onInit; for (i = 0;g; i++)( \"r\"); }", "n_tokens": 53, "n_pass": [298, 42, 23]}
{"time": "2021-02-22 10:08:49.793002", "score": "0.9966", "loss": "0.0088", "code": "d onInit() { per.onInit; for (i = 0;g; i++)( \"r\"); }", "n_tokens": 52, "n_pass": [302, 43, 24]}
{"time": "2021-02-22 10:08:55.452902", "score": "0.9966", "loss": "0.0088", "code": "d onInit(){ per.onInit; for (i = 0;g; i++)( \"r\"); }", "n_tokens": 51, "n_pass": [313, 44, 25]}
{"time": "2021-02-22 10:08:58.069536", "score": "0.9966", "loss": "0.0088", "code": "d onInit(){per.onInit; for (i = 0;g; i++)( \"r\"); }", "n_tokens": 50, "n_pass": [315, 45, 26]}
{"time": "2021-02-22 10:09:00.667207", "score": "0.9828", "loss": "0.0491", "code": "d onInit(){er.onInit; for (i = 0;g; i++)( \"r\"); }", "n_tokens": 49, "n_pass": [316, 46, 27]}
{"time": "2021-02-22 10:09:03.287383", "score": "0.9747", "loss": "0.0734", "code": "d onInit(){r.onInit; for (i = 0;g; i++)( \"r\"); }", "n_tokens": 48, "n_pass": [317, 47, 28]}
{"time": "2021-02-22 10:09:24.051855", "score": "0.9747", "loss": "0.0734", "code": "d onInit(){r.onInit;for (i = 0;g; i++)( \"r\"); }", "n_tokens": 47, "n_pass": [327, 55, 29]}
{"time": "2021-02-22 10:09:26.635619", "score": "0.9747", "loss": "0.0734", "code": "d onInit(){r.onInit;for(i = 0;g; i++)( \"r\"); }", "n_tokens": 46, "n_pass": [331, 56, 30]}
{"time": "2021-02-22 10:09:29.228990", "score": "0.9747", "loss": "0.0734", "code": "d onInit(){r.onInit;for(i= 0;g; i++)( \"r\"); }", "n_tokens": 45, "n_pass": [334, 57, 31]}
{"time": "2021-02-22 10:09:31.821954", "score": "0.9747", "loss": "0.0734", "code": "d onInit(){r.onInit;for(i=0;g; i++)( \"r\"); }", "n_tokens": 44, "n_pass": [336, 58, 32]}
{"time": "2021-02-22 10:09:34.410696", "score": "0.999", "loss": "0.0018", "code": "d onInit(){r.onInit;for(i=0;; i++)( \"r\"); }", "n_tokens": 43, "n_pass": [339, 59, 33]}
{"time": "2021-02-22 10:09:37.027721", "score": "0.999", "loss": "0.0018", "code": "d onInit(){r.onInit;for(i=0;;i++)( \"r\"); }", "n_tokens": 42, "n_pass": [341, 60, 34]}
{"time": "2021-02-22 10:10:00.996743", "score": "0.999", "loss": "0.0019", "code": "d onInit(){r.onInit;for(i0;;i++)( \"r\"); }", "n_tokens": 41, "n_pass": [376, 68, 35]}
{"time": "2021-02-22 10:10:03.572708", "score": "0.999", "loss": "0.0019", "code": "d onInit(){r.onInit;for(i;;i++)( \"r\"); }", "n_tokens": 40, "n_pass": [377, 69, 36]}
{"time": "2021-02-22 10:10:27.270758", "score": "0.9989", "loss": "0.002", "code": "d onInit(){r.onInit;for(;;i++)( \"r\"); }", "n_tokens": 39, "n_pass": [413, 77, 37]}
{"time": "2021-02-22 10:10:52.176521", "score": "0.9989", "loss": "0.002", "code": "d onInit(){r.onInit;for(;;i++)(\"r\"); }", "n_tokens": 38, "n_pass": [457, 85, 38]}
{"time": "2021-02-22 10:10:54.754645", "score": "0.9988", "loss": "0.0023", "code": "d onInit(){r.onInit;for(;;i++)(\"\"); }", "n_tokens": 37, "n_pass": [458, 86, 39]}
{"time": "2021-02-22 10:10:57.346971", "score": "0.9988", "loss": "0.0023", "code": "d onInit(){r.onInit;for(;;i++)(\"\");}", "n_tokens": 36, "n_pass": [462, 87, 40]}

Minimal simplified code:
d onInit(){r.onInit;for(;;i++)("");}

