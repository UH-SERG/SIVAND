
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/smuyyh__EasyAdapter/library/src/main/java/com/yuyh/easyadapter/recyclerview/EasyRVHolder_setAlpha.java
method_name = setAlpha
method_body = @Override public EasyRVHolder setAlpha(int viewId, float value) { if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.HONEYCOMB) { getView(viewId).setAlpha(value); } else { AlphaAnimation alpha = new AlphaAnimation(value, value); alpha.setDuration(0); alpha.setFillAfter(true); getView(viewId).startAnimation(alpha); } return this; }
predict, score, loss = setAlpha, 0.9966015815734863, 0.005331345833837986

Trace of simplified code(s):
{"time": "2021-02-24 19:09:46.238817", "score": "0.9969", "loss": "0.0046", "code": "@Override public EasyRVHolder setAlpha(int viewId, float value) { if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.HONEYCOMB) { getView(viewId).setAlpha(value); } else { AlphaAnimation alpha = new AlphaAnimation(value, value); alpha.setDuration(0); alpha.setFillAfter(true); getView(viewId).startAnimation(alpha); } return this; }", "n_tokens": 330, "n_pass": [1, 1, 1]}
{"time": "2021-02-24 19:09:48.946542", "score": "0.9977", "loss": "0.0034", "code": "@Override public EasyRVHolder setAlpha(int viewId, float value) { if (Build.VERSIOB) { getView(viewId).setAlpha(value); } else { AlphaAnimation alpha = new AlphaAnimation(value, value); alpha.setDuration(0); alpha.setFillAfter(true); getView(viewId).startAnimation(alpha); } return this; }", "n_tokens": 289, "n_pass": [22, 2, 2]}
{"time": "2021-02-24 19:09:51.633306", "score": "0.9312", "loss": "0.1055", "code": "@Override public EasyRVHolder setAlpha(int viewId, float value) { if (Build.VERSIOB) { getView(viewId).setAlpha(value); } else { AlphaAnimation alpha = new AlphaAnimation(value, value); alpha.setDuration(0d).startAnimation(alpha); } return this; }", "n_tokens": 247, "n_pass": [25, 3, 3]}
{"time": "2021-02-24 19:09:54.324429", "score": "0.9493", "loss": "0.0734", "code": "yRVHolder setAlpha(int viewId, float value) { if (Build.VERSIOB) { getView(viewId).setAlpha(value); } else { AlphaAnimation alpha = new AlphaAnimation(value, value); alpha.setDuration(0d).startAnimation(alpha); } return this; }", "n_tokens": 227, "n_pass": [46, 4, 4]}
{"time": "2021-02-24 19:09:57.015395", "score": "0.9366", "loss": "0.1057", "code": "yRVHolder setAlpha(int viewId, float value) { if (Build.VERSIOB) { getView(viewId).setAlpha(value); } else { AlphaAnimatioimation(value, value); alpha.setDuration(0d).startAnimation(alpha); } return this; }", "n_tokens": 206, "n_pass": [53, 5, 5]}
{"time": "2021-02-24 19:09:59.699843", "score": "0.955", "loss": "0.07", "code": "yRVHolder setAlpha(int viewId, float value) { if (Build.VERSIOB) { getView(viewId).setAlpha(value); } else { AlphaAnimatio; alpha.setDuration(0d).startAnimation(alpha); } return this; }", "n_tokens": 185, "n_pass": [54, 6, 6]}
{"time": "2021-02-24 19:10:02.390332", "score": "0.9484", "loss": "0.0834", "code": "yRVHolder setAlpha(int viewId, float value) { if (Build.VERSIOB) { getView(viewId).setAlpha(value); } else { AlphaAnimatsetDuration(0d).startAnimation(alpha); } return this; }", "n_tokens": 175, "n_pass": [82, 7, 7]}
{"time": "2021-02-24 19:10:05.077556", "score": "0.9484", "loss": "0.0834", "code": "yRVHolder setAlpha(int viewId, float value) { if (Build.VERSIOB) { getView(viewId).setAlpha(value); } else { AlphaAnimat(0d).startAnimation(alpha); } return this; }", "n_tokens": 164, "n_pass": [83, 8, 8]}
{"time": "2021-02-24 19:10:07.765528", "score": "0.9943", "loss": "0.0099", "code": "yRVHolder setAlpha(int viewId, float value) { if (Build.VERSIOB) { getView(viewId).setAlpha(value); } else { AlphaAnimatnimation(alpha); } return this; }", "n_tokens": 153, "n_pass": [84, 9, 9]}
{"time": "2021-02-24 19:10:10.891888", "score": "0.6327", "loss": "0.5572", "code": "yRVHolder setAlpha(int viewId, float value) { if (IOB) { getView(viewId).setAlpha(value); } else { AlphaAnimatnimation(alpha); } return this; }", "n_tokens": 143, "n_pass": [93, 10, 10]}
{"time": "2021-02-24 19:10:13.573272", "score": "0.6338", "loss": "0.566", "code": "yRVHolder setAlpha(int viewId, float value) { if (IOB) { getView(viewId).setAlpha(value); lphaAnimatnimation(alpha); } return this; }", "n_tokens": 133, "n_pass": [98, 11, 11]}
{"time": "2021-02-24 19:10:16.240728", "score": "0.6338", "loss": "0.566", "code": "yRVHolder setAlpha(int viewId, float value) { if (IOB) { getView(viewId).setAlpha(value); nimation(alpha); } return this; }", "n_tokens": 123, "n_pass": [99, 12, 12]}
{"time": "2021-02-24 19:10:19.326886", "score": "0.4117", "loss": "1.2112", "code": "yRVHolder setAlpha(int viewId, float value) { if (IOB) { getView(viewId).setAlphnimation(alpha); } return this; }", "n_tokens": 113, "n_pass": [111, 13, 13]}
{"time": "2021-02-24 19:10:22.430630", "score": "0.4117", "loss": "1.2112", "code": "yRVHolder setAlpha(int viewId, float value) { if (IOB) { getView(viewId).setAlphion(alpha); } return this; }", "n_tokens": 108, "n_pass": [145, 14, 14]}
{"time": "2021-02-24 19:10:25.096688", "score": "0.6371", "loss": "0.785", "code": "yRVHolder setAlpha(int viewId, float value) { if (IOB) { getView(viewId).setAlphion(alpha); } rehis; }", "n_tokens": 102, "n_pass": [149, 15, 15]}
{"time": "2021-02-24 19:10:27.743528", "score": "0.6371", "loss": "0.785", "code": "lder setAlpha(int viewId, float value) { if (IOB) { getView(viewId).setAlphion(alpha); } rehis; }", "n_tokens": 97, "n_pass": [151, 16, 16]}
{"time": "2021-02-24 19:10:31.228284", "score": "0.4504", "loss": "1.3204", "code": "lder setAlpha(int viewId,t value) { if (IOB) { getView(viewId).setAlphion(alpha); } rehis; }", "n_tokens": 92, "n_pass": [157, 17, 17]}
{"time": "2021-02-24 19:10:36.530612", "score": "0.4504", "loss": "1.3204", "code": "lder setAlpha(int viewId,t value) { if (IOB) { getView(viewId).seion(alpha); } rehis; }", "n_tokens": 87, "n_pass": [166, 19, 18]}
{"time": "2021-02-24 19:10:42.696388", "score": "0.6381", "loss": "1.1284", "code": "lder setAlpha(int viewId,t value) { if (IOB) { getView(viewId).on(alpha); } rehis; }", "n_tokens": 84, "n_pass": [218, 21, 19]}
{"time": "2021-02-24 19:10:48.017194", "score": "0.6396", "loss": "1.1285", "code": "lder setAlpha(int viewId,t value) { if (IOB) { getView(viewId).on(alpha); }his; }", "n_tokens": 81, "n_pass": [223, 23, 20]}
{"time": "2021-02-24 19:10:50.687707", "score": "0.6392", "loss": "1.1232", "code": "lder setAlpha(int viewId,t value) { if (IOB) { getView(viewId).on(alpha); }; }", "n_tokens": 78, "n_pass": [224, 24, 21]}
{"time": "2021-02-24 19:10:53.363935", "score": "0.5631", "loss": "1.3259", "code": "er setAlpha(int viewId,t value) { if (IOB) { getView(viewId).on(alpha); }; }", "n_tokens": 76, "n_pass": [226, 25, 22]}
{"time": "2021-02-24 19:10:58.146691", "score": "0.3779", "loss": "2.0334", "code": "er setAlpha(t viewId,t value) { if (IOB) { getView(viewId).on(alpha); }; }", "n_tokens": 74, "n_pass": [233, 26, 23]}
{"time": "2021-02-24 19:11:08.776755", "score": "0.383", "loss": "1.9658", "code": "er setAlpha(t viewId,t vue) { if (IOB) { getView(viewId).on(alpha); }; }", "n_tokens": 72, "n_pass": [240, 30, 24]}
{"time": "2021-02-24 19:11:11.445331", "score": "0.5466", "loss": "1.631", "code": "er setAlpha(t viewId,t vue) { if (IOB) { giew(viewId).on(alpha); }; }", "n_tokens": 69, "n_pass": [247, 31, 25]}
{"time": "2021-02-24 19:11:14.103994", "score": "0.5535", "loss": "1.5816", "code": "er setAlpha(t viewId,t vue) { if (IOB) { g(viewId).on(alpha); }; }", "n_tokens": 66, "n_pass": [248, 32, 26]}
{"time": "2021-02-24 19:11:16.761681", "score": "0.3777", "loss": "2.1489", "code": "er setAlpha(t viewId,t vue) { if (IOB) { g(vid).on(alpha); }; }", "n_tokens": 63, "n_pass": [250, 33, 27]}
{"time": "2021-02-24 19:11:34.932135", "score": "0.3757", "loss": "2.2468", "code": "er setAlpha(t viewId,t vue) { if (IOB) { g(d).on(alpha); }; }", "n_tokens": 61, "n_pass": [328, 38, 28]}
{"time": "2021-02-24 19:11:42.952498", "score": "0.4053", "loss": "2.046", "code": "r setAlpha(t viewId,t vue) { if (IOB) { g(d).on(alpha); }; }", "n_tokens": 60, "n_pass": [338, 41, 29]}
{"time": "2021-02-24 19:12:11.100060", "score": "0.2388", "loss": "2.8203", "code": "r setAlpha(t viewId,t vu) { if (IOB) { g(d).on(alpha); }; }", "n_tokens": 59, "n_pass": [363, 50, 30]}
{"time": "2021-02-24 19:12:13.736745", "score": "0.2388", "loss": "2.8203", "code": "r setAlpha(t viewId,t vu){ if (IOB) { g(d).on(alpha); }; }", "n_tokens": 58, "n_pass": [365, 51, 31]}
{"time": "2021-02-24 19:12:16.396789", "score": "0.2388", "loss": "2.8203", "code": "r setAlpha(t viewId,t vu){if (IOB) { g(d).on(alpha); }; }", "n_tokens": 57, "n_pass": [367, 52, 32]}
{"time": "2021-02-24 19:12:19.068897", "score": "0.2388", "loss": "2.8203", "code": "r setAlpha(t viewId,t vu){if(IOB) { g(d).on(alpha); }; }", "n_tokens": 56, "n_pass": [370, 53, 33]}
{"time": "2021-02-24 19:12:21.713912", "score": "0.3299", "loss": "1.9581", "code": "r setAlpha(t viewId,t vu){if(OB) { g(d).on(alpha); }; }", "n_tokens": 55, "n_pass": [372, 54, 34]}
{"time": "2021-02-24 19:12:24.386027", "score": "0.347", "loss": "1.9076", "code": "r setAlpha(t viewId,t vu){if(B) { g(d).on(alpha); }; }", "n_tokens": 54, "n_pass": [373, 55, 35]}
{"time": "2021-02-24 19:12:52.485417", "score": "0.7517", "loss": "0.5263", "code": "r setAlpha(t viewId,t u){if(B) { g(d).on(alpha); }; }", "n_tokens": 53, "n_pass": [409, 64, 36]}
{"time": "2021-02-24 19:13:23.052249", "score": "0.7517", "loss": "0.5263", "code": "r setAlpha(t viewId,t u){if(B){ g(d).on(alpha); }; }", "n_tokens": 52, "n_pass": [476, 73, 37]}
{"time": "2021-02-24 19:13:25.704897", "score": "0.7517", "loss": "0.5263", "code": "r setAlpha(t viewId,t u){if(B){g(d).on(alpha); }; }", "n_tokens": 51, "n_pass": [478, 74, 38]}
{"time": "2021-02-24 19:13:28.350146", "score": "0.7635", "loss": "0.4799", "code": "r setAlpha(t viewId,t u){if(B){(d).on(alpha); }; }", "n_tokens": 50, "n_pass": [479, 75, 39]}
{"time": "2021-02-24 19:13:31.430138", "score": "0.8431", "loss": "0.2571", "code": "r setAlpha(t viewId,t u){if(B){(d).n(alpha); }; }", "n_tokens": 49, "n_pass": [484, 76, 40]}
{"time": "2021-02-24 19:13:47.395058", "score": "0.8431", "loss": "0.2571", "code": "r setAlpha(t viewId,t u){if(B){(d).n(alpha);}; }", "n_tokens": 48, "n_pass": [494, 82, 41]}
{"time": "2021-02-24 19:13:50.053966", "score": "0.8431", "loss": "0.2571", "code": "r setAlpha(t viewId,t u){if(B){(d).n(alpha);} }", "n_tokens": 47, "n_pass": [496, 83, 42]}
{"time": "2021-02-24 19:13:52.701677", "score": "0.8431", "loss": "0.2571", "code": "r setAlpha(t viewId,t u){if(B){(d).n(alpha);}}", "n_tokens": 46, "n_pass": [497, 84, 43]}

Minimal simplified code:
r setAlpha(t viewId,t u){if(B){(d).n(alpha);}}

