
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/fengjiachun__Jupiter/jupiter-common/src/main/java/org/jupiter/common/util/collection/ByteObjectHashMap_toString.java
method_name = toString
method_body = @Override public String toString() { if (isEmpty()) { return "{}"; } StringBuilder sb = new StringBuilder(4 * size); sb.append('{'); boolean first = true; for (int i = 0; i < values.length; ++i) { V value = values[i]; if (value != null) { if (!first) { sb.append(", "); } sb.append(keyToString(keys[i])).append('=').append(value == this ? "(this Map)" : toExternal(value)); first = false; } } return sb.append('}').toString(); }
predict, score, loss = toString, 0.9997017979621887, 0.00041392818093299866

Trace of simplified code(s):
{"time": "2021-02-22 17:13:45.868349", "score": "0.9996", "loss": "0.0007", "code": "@Override public String toString() { if (isEmpty()) { return \"{}\"; } StringBuilder sb = new StringBuilder(4 * size); sb.append('{'); boolean first = true; for (int i = 0; i < values.length; ++i) { V value = values[i]; if (value != null) { if (!first) { sb.append(\", \"); } sb.append(keyToString(keys[i])).append('=').append(value == this ? \"(this Map)\" : toExternal(value)); first = false; } } return sb.append('}').toString(); }", "n_tokens": 428, "n_pass": [1, 1, 1]}
{"time": "2021-02-22 17:13:48.539311", "score": "0.9995", "loss": "0.0007", "code": "@Override public String toString() { if (isEmpty()) { return \"{}\"; } StringBuilder sb = new StringBuilder(4 * size); sb.append('{'); boolean first = true; for (int i = 0; i < values.length; ++i) { V value = values[i]; if (value != null) { if (!first) { sb.append(\", \"); } sb.append(keyToString(keys[i])).append('=').appefirst = false; } } return sb.append('}').toString(); }", "n_tokens": 374, "n_pass": [26, 2, 2]}
{"time": "2021-02-22 17:13:51.600011", "score": "0.9997", "loss": "0.0005", "code": "@Override public String toString() { if (isEmpty()) { return \"{}\"; } StringBuir(4 * size); sb.append('{'); boolean first = true; for (int i = 0; i < values.length; ++i) { V value = values[i]; if (value != null) { if (!first) { sb.append(\", \"); } sb.append(keyToString(keys[i])).append('=').appefirst = false; } } return sb.append('}').toString(); }", "n_tokens": 348, "n_pass": [53, 3, 3]}
{"time": "2021-02-22 17:13:54.248879", "score": "0.9994", "loss": "0.0008", "code": "@Override public String toString() { if (isEmpty()) { return \"{}\"; } StringBui; boolean first = true; for (int i = 0; i < values.length; ++i) { V value = values[i]; if (value != null) { if (!first) { sb.append(\", \"); } sb.append(keyToString(keys[i])).append('=').appefirst = false; } } return sb.append('}').toString(); }", "n_tokens": 321, "n_pass": [54, 4, 4]}
{"time": "2021-02-22 17:13:57.321011", "score": "0.9994", "loss": "0.0009", "code": "@Override public String toString() { if (isEmpty()) ; boolean first = true; for (int i = 0; i < values.length; ++i) { V value = values[i]; if (value != null) { if (!first) { sb.append(\", \"); } sb.append(keyToString(keys[i])).append('=').appefirst = false; } } return sb.append('}').toString(); }", "n_tokens": 295, "n_pass": [66, 5, 5]}
{"time": "2021-02-22 17:14:00.403274", "score": "0.9989", "loss": "0.0017", "code": "@Override public String toString() { if (isEmpty()) st = true; for (int i = 0; i < values.length; ++i) { V value = values[i]; if (value != null) { if (!first) { sb.append(\", \"); } sb.append(keyToString(keys[i])).append('=').appefirst = false; } } return sb.append('}').toString(); }", "n_tokens": 282, "n_pass": [100, 6, 6]}
{"time": "2021-02-22 17:14:03.071873", "score": "0.9995", "loss": "0.0007", "code": "@Override public String toString() { if (isEmpty()) st = true; for (int i = 0;ength; ++i) { V value = values[i]; if (value != null) { if (!first) { sb.append(\", \"); } sb.append(keyToString(keys[i])).append('=').appefirst = false; } } return sb.append('}').toString(); }", "n_tokens": 269, "n_pass": [103, 7, 7]}
{"time": "2021-02-22 17:14:05.714648", "score": "0.9994", "loss": "0.0007", "code": "@Override public String toString() { if (isEmpty()) st = true; for (int i = 0;ength; ++i) {lues[i]; if (value != null) { if (!first) { sb.append(\", \"); } sb.append(keyToString(keys[i])).append('=').appefirst = false; } } return sb.append('}').toString(); }", "n_tokens": 256, "n_pass": [105, 8, 8]}
{"time": "2021-02-22 17:14:08.368839", "score": "0.9994", "loss": "0.0008", "code": "@Override public String toString() { if (isEmpty()) st = true; for (int i = 0;ength; ++i) {lues[i]; if (value != null) { if (!first) { sb.append(\", \"); } sb.append(keyToString(keys[i])).pefirst = false; } } return sb.append('}').toString(); }", "n_tokens": 242, "n_pass": [113, 9, 9]}
{"time": "2021-02-22 17:14:10.998392", "score": "0.9994", "loss": "0.0008", "code": "@Override public String toString() { if (isEmpty()) st = true; for (int i = 0;ength; ++i) {lues[i]; if (value != null) { if (!first) { sb.append(\", \"); } sb.append(keyToString(keys[i])).e; } } return sb.append('}').toString(); }", "n_tokens": 228, "n_pass": [114, 10, 10]}
{"time": "2021-02-22 17:14:14.094550", "score": "0.9989", "loss": "0.0017", "code": "@Override public String toString() { ifst = true; for (int i = 0;ength; ++i) {lues[i]; if (value != null) { if (!first) { sb.append(\", \"); } sb.append(keyToString(keys[i])).e; } } return sb.append('}').toString(); }", "n_tokens": 215, "n_pass": [121, 11, 11]}
{"time": "2021-02-22 17:14:17.144349", "score": "0.9993", "loss": "0.001", "code": "@Override public String toString() { ifst ; for (int i = 0;ength; ++i) {lues[i]; if (value != null) { if (!first) { sb.append(\", \"); } sb.append(keyToString(keys[i])).e; } } return sb.append('}').toString(); }", "n_tokens": 209, "n_pass": [171, 12, 12]}
{"time": "2021-02-22 17:14:19.829973", "score": "0.9979", "loss": "0.0056", "code": "@Override public String toString() { ifst ; for (int i = 0;ength; ++i) {lues[i]; if (valuel) { if (!first) { sb.append(\", \"); } sb.append(keyToString(keys[i])).e; } } return sb.append('}').toString(); }", "n_tokens": 202, "n_pass": [179, 13, 13]}
{"time": "2021-02-22 17:14:22.483621", "score": "0.9979", "loss": "0.0054", "code": "@Override public String toString() { ifst ; for (int i = 0;ength; ++i) {lues[i]; if (valuel) { if (!first) { sb(\", \"); } sb.append(keyToString(keys[i])).e; } } return sb.append('}').toString(); }", "n_tokens": 195, "n_pass": [183, 14, 14]}
{"time": "2021-02-22 17:14:25.107080", "score": "0.9839", "loss": "0.1259", "code": "@Override public String toString() { ifst ; for (int i = 0;ength; ++i) {lues[i]; if (valuel) { if (!first) { sb(\", \"); } sb.append(king(keys[i])).e; } } return sb.append('}').toString(); }", "n_tokens": 188, "n_pass": [187, 15, 15]}
{"time": "2021-02-22 17:14:27.741064", "score": "0.987", "loss": "0.1213", "code": "@Override public String toString() { ifst ; for (int i = 0;ength; ++i) {lues[i]; if (valuel) { if (!first) { sb(\", \"); } sb.append(king(keys[i])).e; } } sb.append('}').toString(); }", "n_tokens": 181, "n_pass": [191, 16, 16]}
{"time": "2021-02-22 17:14:30.428453", "score": "0.3168", "loss": "4.2336", "code": "@Override public String toString() { ifst ; for (int i = 0;ength; ++i) {lues[i]; if (valuel) { if (!first) { sb(\", \"); } sb.append(king(keys[i])).e; } } nd('}').toString(); }", "n_tokens": 174, "n_pass": [192, 17, 17]}
{"time": "2021-02-22 17:14:33.048103", "score": "0.3023", "loss": "4.2963", "code": "@Overrblic String toString() { ifst ; for (int i = 0;ength; ++i) {lues[i]; if (valuel) { if (!first) { sb(\", \"); } sb.append(king(keys[i])).e; } } nd('}').toString(); }", "n_tokens": 168, "n_pass": [197, 18, 18]}
{"time": "2021-02-22 17:14:36.854765", "score": "0.3182", "loss": "4.2092", "code": "@Overrblic String toString() {; for (int i = 0;ength; ++i) {lues[i]; if (valuel) { if (!first) { sb(\", \"); } sb.append(king(keys[i])).e; } } nd('}').toString(); }", "n_tokens": 162, "n_pass": [202, 19, 19]}
{"time": "2021-02-22 17:14:40.824586", "score": "0.1794", "loss": "5.1813", "code": "@Overrblic String toString() {; for (in = 0;ength; ++i) {lues[i]; if (valuel) { if (!first) { sb(\", \"); } sb.append(king(keys[i])).e; } } nd('}').toString(); }", "n_tokens": 159, "n_pass": [278, 20, 20]}
{"time": "2021-02-22 17:14:43.437674", "score": "0.1821", "loss": "5.0172", "code": "@Overrblic String toString() {; for (in0;ength; ++i) {lues[i]; if (valuel) { if (!first) { sb(\", \"); } sb.append(king(keys[i])).e; } } nd('}').toString(); }", "n_tokens": 156, "n_pass": [279, 21, 21]}
{"time": "2021-02-22 17:14:46.051960", "score": "0.1876", "loss": "4.985", "code": "@Overrblic String toString() {; for (in0;eh; ++i) {lues[i]; if (valuel) { if (!first) { sb(\", \"); } sb.append(king(keys[i])).e; } } nd('}').toString(); }", "n_tokens": 153, "n_pass": [281, 22, 22]}
{"time": "2021-02-22 17:14:51.366776", "score": "0.2362", "loss": "4.6422", "code": "@Overrblic String toString() {; for (in0;eh; ++i) {s[i]; if (valuel) { if (!first) { sb(\", \"); } sb.append(king(keys[i])).e; } } nd('}').toString(); }", "n_tokens": 150, "n_pass": [285, 24, 23]}
{"time": "2021-02-22 17:14:56.691807", "score": "0.231", "loss": "4.5379", "code": "@Overrblic String toString() {; for (in0;eh; ++i) {s[i]; if (valuel) { if (rst) { sb(\", \"); } sb.append(king(keys[i])).e; } } nd('}').toString(); }", "n_tokens": 147, "n_pass": [294, 26, 24]}
{"time": "2021-02-22 17:15:02.000607", "score": "0.2019", "loss": "4.713", "code": "@Overrblic String toString() {; for (in0;eh; ++i) {s[i]; if (valuel) { if (rst) { sb(\", \"); } sb.ap(king(keys[i])).e; } } nd('}').toString(); }", "n_tokens": 143, "n_pass": [301, 28, 25]}
{"time": "2021-02-22 17:15:07.263001", "score": "0.2019", "loss": "4.713", "code": "@Ovblic String toString() {; for (in0;eh; ++i) {s[i]; if (valuel) { if (rst) { sb(\", \"); } sb.ap(king(keys[i])).e; } } nd('}').toString(); }", "n_tokens": 140, "n_pass": [314, 30, 26]}
{"time": "2021-02-22 17:15:09.896006", "score": "0.243", "loss": "4.5724", "code": "@Ovc String toString() {; for (in0;eh; ++i) {s[i]; if (valuel) { if (rst) { sb(\", \"); } sb.ap(king(keys[i])).e; } } nd('}').toString(); }", "n_tokens": 137, "n_pass": [315, 31, 27]}
{"time": "2021-02-22 17:15:29.016350", "score": "0.2103", "loss": "4.6784", "code": "@Oc String toString() {; for (in0;eh; ++i) {s[i]; if (valuel) { if (rst) { sb(\", \"); } sb.ap(king(keys[i])).e; } } nd('}').toString(); }", "n_tokens": 136, "n_pass": [436, 37, 28]}
{"time": "2021-02-22 17:15:31.633192", "score": "0.21", "loss": "4.6743", "code": "@O String toString() {; for (in0;eh; ++i) {s[i]; if (valuel) { if (rst) { sb(\", \"); } sb.ap(king(keys[i])).e; } } nd('}').toString(); }", "n_tokens": 135, "n_pass": [437, 38, 29]}
{"time": "2021-02-22 17:15:39.880810", "score": "0.2424", "loss": "5.2304", "code": "@O Sting toString() {; for (in0;eh; ++i) {s[i]; if (valuel) { if (rst) { sb(\", \"); } sb.ap(king(keys[i])).e; } } nd('}').toString(); }", "n_tokens": 134, "n_pass": [441, 41, 30]}
{"time": "2021-02-22 17:15:53.897170", "score": "0.2424", "loss": "5.2304", "code": "@O Sting toString(){; for (in0;eh; ++i) {s[i]; if (valuel) { if (rst) { sb(\", \"); } sb.ap(king(keys[i])).e; } } nd('}').toString(); }", "n_tokens": 133, "n_pass": [456, 45, 31]}
{"time": "2021-02-22 17:15:56.513373", "score": "0.2161", "loss": "5.3117", "code": "@O Sting toString(){; for (0;eh; ++i) {s[i]; if (valuel) { if (rst) { sb(\", \"); } sb.ap(king(keys[i])).e; } } nd('}').toString(); }", "n_tokens": 131, "n_pass": [461, 46, 32]}
{"time": "2021-02-22 17:15:59.160564", "score": "0.2102", "loss": "5.3462", "code": "@O Sting toString(){; for (0;; ++i) {s[i]; if (valuel) { if (rst) { sb(\", \"); } sb.ap(king(keys[i])).e; } } nd('}').toString(); }", "n_tokens": 129, "n_pass": [463, 47, 33]}
{"time": "2021-02-22 17:16:12.358174", "score": "0.2118", "loss": "5.3489", "code": "@O Sting toString(){; for (0;; ++i) {s[i]; if (valuel) { if (t) { sb(\", \"); } sb.ap(king(keys[i])).e; } } nd('}').toString(); }", "n_tokens": 127, "n_pass": [480, 52, 34]}
{"time": "2021-02-22 17:16:14.995937", "score": "0.2025", "loss": "5.4566", "code": "@O Sting toString(){; for (0;; ++i) {s[i]; if (valuel) { if (t) {b(\", \"); } sb.ap(king(keys[i])).e; } } nd('}').toString(); }", "n_tokens": 125, "n_pass": [483, 53, 35]}
{"time": "2021-02-22 17:16:17.630511", "score": "0.2007", "loss": "5.4739", "code": "@O Sting toString(){; for (0;; ++i) {s[i]; if (valuel) { if (t) {b(\", \"); }b.ap(king(keys[i])).e; } } nd('}').toString(); }", "n_tokens": 123, "n_pass": [489, 54, 36]}
{"time": "2021-02-22 17:16:30.895144", "score": "0.172", "loss": "5.5552", "code": "@O Sting toString(){; for (0;; ++i) {s[i]; if (valuel) { if (t) {b(\", \"); }b.ap(king(keys[i])).e; } }d('}').toString(); }", "n_tokens": 121, "n_pass": [503, 59, 37]}
{"time": "2021-02-22 17:17:49.241710", "score": "0.172", "loss": "5.5552", "code": "@O Sting toString(){; for (0;; ++i) {s[i]; if (valuel) { if (t) {b(\", \"); }b.ap(king(keys[i])).e; } }d('}').toString();}", "n_tokens": 120, "n_pass": [692, 84, 38]}
{"time": "2021-02-22 17:18:09.269380", "score": "0.172", "loss": "5.5552", "code": "@O Sting toString(){ for (0;; ++i) {s[i]; if (valuel) { if (t) {b(\", \"); }b.ap(king(keys[i])).e; } }d('}').toString();}", "n_tokens": 119, "n_pass": [713, 90, 39]}
{"time": "2021-02-22 17:18:11.881329", "score": "0.172", "loss": "5.5552", "code": "@O Sting toString(){for (0;; ++i) {s[i]; if (valuel) { if (t) {b(\", \"); }b.ap(king(keys[i])).e; } }d('}').toString();}", "n_tokens": 118, "n_pass": [714, 91, 40]}
{"time": "2021-02-22 17:18:14.487735", "score": "0.172", "loss": "5.5552", "code": "@O Sting toString(){for(0;; ++i) {s[i]; if (valuel) { if (t) {b(\", \"); }b.ap(king(keys[i])).e; } }d('}').toString();}", "n_tokens": 117, "n_pass": [718, 92, 41]}
{"time": "2021-02-22 17:18:17.129676", "score": "0.2148", "loss": "5.3945", "code": "@O Sting toString(){for(;; ++i) {s[i]; if (valuel) { if (t) {b(\", \"); }b.ap(king(keys[i])).e; } }d('}').toString();}", "n_tokens": 116, "n_pass": [720, 93, 42]}
{"time": "2021-02-22 17:18:19.762166", "score": "0.2148", "loss": "5.3945", "code": "@O Sting toString(){for(;;++i) {s[i]; if (valuel) { if (t) {b(\", \"); }b.ap(king(keys[i])).e; } }d('}').toString();}", "n_tokens": 115, "n_pass": [723, 94, 43]}
{"time": "2021-02-22 17:18:22.370428", "score": "0.144", "loss": "5.8723", "code": "@O Sting toString(){for(;;+i) {s[i]; if (valuel) { if (t) {b(\", \"); }b.ap(king(keys[i])).e; } }d('}').toString();}", "n_tokens": 114, "n_pass": [724, 95, 44]}
{"time": "2021-02-22 17:18:24.981158", "score": "0.1442", "loss": "5.8714", "code": "@O Sting toString(){for(;;i) {s[i]; if (valuel) { if (t) {b(\", \"); }b.ap(king(keys[i])).e; } }d('}').toString();}", "n_tokens": 113, "n_pass": [725, 96, 45]}
{"time": "2021-02-22 17:18:27.584349", "score": "0.145", "loss": "5.8853", "code": "@O Sting toString(){for(;;) {s[i]; if (valuel) { if (t) {b(\", \"); }b.ap(king(keys[i])).e; } }d('}').toString();}", "n_tokens": 112, "n_pass": [726, 97, 46]}
{"time": "2021-02-22 17:18:30.190924", "score": "0.145", "loss": "5.8853", "code": "@O Sting toString(){for(;;){s[i]; if (valuel) { if (t) {b(\", \"); }b.ap(king(keys[i])).e; } }d('}').toString();}", "n_tokens": 111, "n_pass": [728, 98, 47]}
{"time": "2021-02-22 17:18:32.821363", "score": "0.145", "loss": "5.8853", "code": "@O Sting toString(){for(;;){s[i];if (valuel) { if (t) {b(\", \"); }b.ap(king(keys[i])).e; } }d('}').toString();}", "n_tokens": 110, "n_pass": [735, 99, 48]}
{"time": "2021-02-22 17:18:35.443692", "score": "0.145", "loss": "5.8853", "code": "@O Sting toString(){for(;;){s[i];if(valuel) { if (t) {b(\", \"); }b.ap(king(keys[i])).e; } }d('}').toString();}", "n_tokens": 109, "n_pass": [738, 100, 49]}
{"time": "2021-02-22 17:18:53.715798", "score": "0.145", "loss": "5.8853", "code": "@O Sting toString(){for(;;){s[i];if(valuel){ if (t) {b(\", \"); }b.ap(king(keys[i])).e; } }d('}').toString();}", "n_tokens": 108, "n_pass": [747, 107, 50]}
{"time": "2021-02-22 17:18:56.344489", "score": "0.145", "loss": "5.8853", "code": "@O Sting toString(){for(;;){s[i];if(valuel){if (t) {b(\", \"); }b.ap(king(keys[i])).e; } }d('}').toString();}", "n_tokens": 107, "n_pass": [749, 108, 51]}
{"time": "2021-02-22 17:18:58.988835", "score": "0.145", "loss": "5.8853", "code": "@O Sting toString(){for(;;){s[i];if(valuel){if(t) {b(\", \"); }b.ap(king(keys[i])).e; } }d('}').toString();}", "n_tokens": 106, "n_pass": [752, 109, 52]}
{"time": "2021-02-22 17:19:01.604091", "score": "0.145", "loss": "5.8853", "code": "@O Sting toString(){for(;;){s[i];if(valuel){if(t){b(\", \"); }b.ap(king(keys[i])).e; } }d('}').toString();}", "n_tokens": 105, "n_pass": [756, 110, 53]}
{"time": "2021-02-22 17:19:06.875856", "score": "0.145", "loss": "5.8853", "code": "@O Sting toString(){for(;;){s[i];if(valuel){if(t){b(\" \"); }b.ap(king(keys[i])).e; } }d('}').toString();}", "n_tokens": 104, "n_pass": [761, 112, 54]}
{"time": "2021-02-22 17:19:12.123362", "score": "0.145", "loss": "5.8853", "code": "@O Sting toString(){for(;;){s[i];if(valuel){if(t){b(\" \");}b.ap(king(keys[i])).e; } }d('}').toString();}", "n_tokens": 103, "n_pass": [766, 114, 55]}
{"time": "2021-02-22 17:19:17.420649", "score": "0.1426", "loss": "5.8978", "code": "@O Sting toString(){for(;;){s[i];if(valuel){if(t){b(\" \");}b.p(king(keys[i])).e; } }d('}').toString();}", "n_tokens": 102, "n_pass": [770, 116, 56]}
{"time": "2021-02-22 17:19:35.873836", "score": "0.2581", "loss": "4.1961", "code": "@O Sting toString(){for(;;){s[i];if(valuel){if(t){b(\" \");}b.p(king(kes[i])).e; } }d('}').toString();}", "n_tokens": 101, "n_pass": [780, 123, 57]}
{"time": "2021-02-22 17:19:41.108516", "score": "0.2581", "loss": "4.1961", "code": "@O Sting toString(){for(;;){s[i];if(valuel){if(t){b(\" \");}b.p(king(kes[i])).e;} }d('}').toString();}", "n_tokens": 100, "n_pass": [790, 125, 58]}
{"time": "2021-02-22 17:19:43.741659", "score": "0.2581", "loss": "4.1961", "code": "@O Sting toString(){for(;;){s[i];if(valuel){if(t){b(\" \");}b.p(king(kes[i])).e;}}d('}').toString();}", "n_tokens": 99, "n_pass": [792, 126, 59]}
{"time": "2021-02-22 17:19:46.375712", "score": "0.259", "loss": "4.1831", "code": "@O Sting toString(){for(;;){s[i];if(valuel){if(t){b(\" \");}b.p(king(kes[i])).e;}}('}').toString();}", "n_tokens": 98, "n_pass": [794, 127, 60]}
{"time": "2021-02-22 17:20:13.848889", "score": "0.2757", "loss": "4.3365", "code": "@O Sing toString(){for(;;){s[i];if(valuel){if(t){b(\" \");}b.p(king(kes[i])).e;}}('}').toString();}", "n_tokens": 97, "n_pass": [817, 137, 61]}
{"time": "2021-02-22 17:20:16.454148", "score": "0.2042", "loss": "4.1786", "code": "@O Sng toString(){for(;;){s[i];if(valuel){if(t){b(\" \");}b.p(king(kes[i])).e;}}('}').toString();}", "n_tokens": 96, "n_pass": [818, 138, 62]}
{"time": "2021-02-22 17:20:43.748010", "score": "0.2164", "loss": "4.0016", "code": "@O Sng toString(){for(;;){s[i];if(valuel){if(t){(\" \");}b.p(king(kes[i])).e;}}('}').toString();}", "n_tokens": 95, "n_pass": [863, 147, 63]}
{"time": "2021-02-22 17:20:46.363733", "score": "0.2176", "loss": "3.9962", "code": "@O Sng toString(){for(;;){s[i];if(valuel){if(t){(\"\");}b.p(king(kes[i])).e;}}('}').toString();}", "n_tokens": 94, "n_pass": [866, 148, 64]}
{"time": "2021-02-22 17:20:54.234578", "score": "0.3312", "loss": "3.6159", "code": "@O Sng toString(){for(;;){s[i];if(valuel){if(t){(\"\");}b.p(kng(kes[i])).e;}}('}').toString();}", "n_tokens": 93, "n_pass": [876, 151, 65]}
{"time": "2021-02-22 17:20:56.859562", "score": "0.367", "loss": "3.7783", "code": "@O Sng toString(){for(;;){s[i];if(valuel){if(t){(\"\");}b.p(kg(kes[i])).e;}}('}').toString();}", "n_tokens": 92, "n_pass": [877, 152, 66]}
{"time": "2021-02-22 17:20:59.472030", "score": "0.3894", "loss": "3.0066", "code": "@O Sng toString(){for(;;){s[i];if(valuel){if(t){(\"\");}b.p(k(kes[i])).e;}}('}').toString();}", "n_tokens": 91, "n_pass": [878, 153, 67]}
{"time": "2021-02-22 17:21:04.768651", "score": "0.2135", "loss": "3.8537", "code": "@O Sng toString(){for(;;){s[i];if(valuel){if(t){(\"\");}b.p(k(ks[i])).e;}}('}').toString();}", "n_tokens": 90, "n_pass": [881, 155, 68]}
{"time": "2021-02-22 17:21:32.214890", "score": "0.6527", "loss": "1.2964", "code": "@O ng toString(){for(;;){s[i];if(valuel){if(t){(\"\");}b.p(k(ks[i])).e;}}('}').toString();}", "n_tokens": 89, "n_pass": [914, 165, 69]}
{"time": "2021-02-22 17:21:34.836512", "score": "0.7154", "loss": "1.964", "code": "@O g toString(){for(;;){s[i];if(valuel){if(t){(\"\");}b.p(k(ks[i])).e;}}('}').toString();}", "n_tokens": 88, "n_pass": [915, 166, 70]}
{"time": "2021-02-22 17:21:57.088878", "score": "0.7154", "loss": "1.9509", "code": "@O g toString(){for(;;){s[i];if(valuel){if(t){(\"\");}bp(k(ks[i])).e;}}('}').toString();}", "n_tokens": 87, "n_pass": [966, 173, 71]}
{"time": "2021-02-22 17:21:59.730158", "score": "0.7321", "loss": "1.8025", "code": "@O g toString(){for(;;){s[i];if(valuel){if(t){(\"\");}b(k(ks[i])).e;}}('}').toString();}", "n_tokens": 86, "n_pass": [967, 174, 72]}
{"time": "2021-02-22 17:22:02.366644", "score": "0.6793", "loss": "1.51", "code": "@O g toString(){for(;;){s[i];if(valuel){if(t){(\"\");}b((ks[i])).e;}}('}').toString();}", "n_tokens": 85, "n_pass": [969, 175, 73]}
{"time": "2021-02-22 17:22:04.998237", "score": "0.7014", "loss": "1.3874", "code": "@O g toString(){for(;;){s[i];if(valuel){if(t){(\"\");}b((s[i])).e;}}('}').toString();}", "n_tokens": 84, "n_pass": [971, 176, 74]}
{"time": "2021-02-22 17:22:33.700488", "score": "0.6379", "loss": "0.7654", "code": "@O g toString(){for(;;){s[i];if(aluel){if(t){(\"\");}b((s[i])).e;}}('}').toString();}", "n_tokens": 83, "n_pass": [1033, 185, 75]}
{"time": "2021-02-22 17:22:36.296329", "score": "0.6379", "loss": "0.7654", "code": "@O g toString(){for(;;){s[i];if(luel){if(t){(\"\");}b((s[i])).e;}}('}').toString();}", "n_tokens": 82, "n_pass": [1034, 186, 76]}
{"time": "2021-02-22 17:22:38.895902", "score": "0.799", "loss": "0.4308", "code": "@O g toString(){for(;;){s[i];if(uel){if(t){(\"\");}b((s[i])).e;}}('}').toString();}", "n_tokens": 81, "n_pass": [1035, 187, 77]}
{"time": "2021-02-22 17:22:41.504206", "score": "0.6437", "loss": "0.7543", "code": "@O g toString(){for(;;){s[i];if(el){if(t){(\"\");}b((s[i])).e;}}('}').toString();}", "n_tokens": 80, "n_pass": [1036, 188, 78]}
{"time": "2021-02-22 17:22:44.111670", "score": "0.637", "loss": "0.7067", "code": "@O g toString(){for(;;){s[i];if(l){if(t){(\"\");}b((s[i])).e;}}('}').toString();}", "n_tokens": 79, "n_pass": [1037, 189, 79]}
{"time": "2021-02-22 17:22:46.729772", "score": "0.6939", "loss": "0.6024", "code": "@O g toString(){for(;;){s[i];if(l){if(t){(\"\");}((s[i])).e;}}('}').toString();}", "n_tokens": 78, "n_pass": [1053, 190, 80]}

Minimal simplified code:
@O g toString(){for(;;){s[i];if(l){if(t){("");}((s[i])).e;}}('}').toString();}

