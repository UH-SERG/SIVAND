
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/OpenRock__OpenAM/openam-core/src/main/java/com/sun/identity/idsvcs/opensso/IdentityServicesImpl_addMember.java
method_name = addMember
method_body = private void addMember(AMIdentityRepository repo, AMIdentity amIdentity, AMIdentity member) throws IdRepoException, SSOException, ForbiddenException { if (!member.isMember(amIdentity)) { if (isOperationSupported(repo, amIdentity.getType(), IdOperation.EDIT)) { amIdentity.addMember(member); } else { throw new ForbiddenException(""); } } }
predict, score, loss = addMember, 0.9855234622955322, 0.016014639288187027

Trace of simplified code(s):
{"time": "2021-02-22 09:03:30.082667", "score": "0.9855", "loss": "0.016", "code": "private void addMember(AMIdentityRepository repo, AMIdentity amIdentity, AMIdentity member) throws IdRepoException, SSOException, ForbiddenException { if (!member.isMember(amIdentity)) { if (isOperationSupported(repo, amIdentity.getType(), IdOperation.EDIT)) { amIdentity.addMember(member); } else { throw new ForbiddenException(\"\"); } } }", "n_tokens": 339, "n_pass": [1, 1, 1]}
{"time": "2021-02-22 09:03:33.136661", "score": "0.9864", "loss": "0.0148", "code": "private void addMember(AMIdentityRepository repo, AMIdentity ammember) throws IdRepoException, SSOException, ForbiddenException { if (!member.isMember(amIdentity)) { if (isOperationSupported(repo, amIdentity.getType(), IdOperation.EDIT)) { amIdentity.addMember(member); } else { throw new ForbiddenException(\"\"); } } }", "n_tokens": 318, "n_pass": [47, 2, 2]}
{"time": "2021-02-22 09:03:35.783635", "score": "0.982", "loss": "0.02", "code": "private void addMember(AMIdentityRepository repo, AMIdentity ammember) throws IdRepoon, ForbiddenException { if (!member.isMember(amIdentity)) { if (isOperationSupported(repo, amIdentity.getType(), IdOperation.EDIT)) { amIdentity.addMember(member); } else { throw new ForbiddenException(\"\"); } } }", "n_tokens": 297, "n_pass": [49, 3, 3]}
{"time": "2021-02-22 09:03:38.428305", "score": "0.9877", "loss": "0.0136", "code": "private void addMember(AMIdentityRepository repo, AMIdentity ammember) throws IdRepon { if (!member.isMember(amIdentity)) { if (isOperationSupported(repo, amIdentity.getType(), IdOperation.EDIT)) { amIdentity.addMember(member); } else { throw new ForbiddenException(\"\"); } } }", "n_tokens": 276, "n_pass": [50, 4, 4]}
{"time": "2021-02-22 09:03:41.059644", "score": "0.9879", "loss": "0.0126", "code": "private void addMember(AMIdentityRepository repo, AMIdentity ammember) throws IdRepon { if (!member.isMember(amIdentity)) { if (isOperationSupported(repo, amIdentity.geEDIT)) { amIdentity.addMember(member); } else { throw new ForbiddenException(\"\"); } } }", "n_tokens": 255, "n_pass": [55, 5, 5]}
{"time": "2021-02-22 09:03:44.088310", "score": "0.9742", "loss": "0.0274", "code": "private void addMember(AMIdentityRepository repo, AMIdentity ammember) throws IdRepon { if (!member.isMember(amIdentity)) { if (isOperationSupported(repo, amIdentity.geEDIT)) { addMember(member); } else { throw new ForbiddenException(\"\"); } } }", "n_tokens": 244, "n_pass": [93, 6, 6]}
{"time": "2021-02-22 09:03:46.712881", "score": "0.9899", "loss": "0.0112", "code": "private void addMember(AMIdentityRepository repo, AMIdentity ammember) throws IdRepon { if (!member.isMember(amIdentity)) { if (isOperationSupported(repo, amIdentity.geEDIT)) { addMember(member); } else { throw enException(\"\"); } } }", "n_tokens": 233, "n_pass": [97, 7, 7]}
{"time": "2021-02-22 09:03:49.348257", "score": "0.9905", "loss": "0.0105", "code": "private void addMember(AMIdentityRepository repo, AMIdentity ammember) throws IdRepon { if (!member.isMember(amIdentity)) { if (isOperationSupported(repo, amIdentity.geEDIT)) { addMember(member); } else { throw (\"\"); } } }", "n_tokens": 222, "n_pass": [98, 8, 8]}
{"time": "2021-02-22 09:03:51.965506", "score": "0.9762", "loss": "0.0295", "code": "id addMember(AMIdentityRepository repo, AMIdentity ammember) throws IdRepon { if (!member.isMember(amIdentity)) { if (isOperationSupported(repo, amIdentity.geEDIT)) { addMember(member); } else { throw (\"\"); } } }", "n_tokens": 212, "n_pass": [100, 9, 9]}
{"time": "2021-02-22 09:03:54.991814", "score": "0.9762", "loss": "0.0295", "code": "id addMember(AMIdentory repo, AMIdentity ammember) throws IdRepon { if (!member.isMember(amIdentity)) { if (isOperationSupported(repo, amIdentity.geEDIT)) { addMember(member); } else { throw (\"\"); } } }", "n_tokens": 202, "n_pass": [103, 10, 10]}
{"time": "2021-02-22 09:03:57.653765", "score": "0.9871", "loss": "0.0147", "code": "id addMember(AMIdentAMIdentity ammember) throws IdRepon { if (!member.isMember(amIdentity)) { if (isOperationSupported(repo, amIdentity.geEDIT)) { addMember(member); } else { throw (\"\"); } } }", "n_tokens": 192, "n_pass": [104, 11, 11]}
{"time": "2021-02-22 09:04:00.263162", "score": "0.9871", "loss": "0.0147", "code": "id addMember(AMIdent ammember) throws IdRepon { if (!member.isMember(amIdentity)) { if (isOperationSupported(repo, amIdentity.geEDIT)) { addMember(member); } else { throw (\"\"); } } }", "n_tokens": 182, "n_pass": [105, 12, 12]}
{"time": "2021-02-22 09:04:02.881144", "score": "0.9871", "loss": "0.0147", "code": "id addMember(AMIdent ammember) throws IdRepon { if (!member.isMember(amIdentity)) { if (isOperted(repo, amIdentity.geEDIT)) { addMember(member); } else { throw (\"\"); } } }", "n_tokens": 171, "n_pass": [113, 13, 13]}
{"time": "2021-02-22 09:04:05.491928", "score": "0.9916", "loss": "0.0096", "code": "id addMember(AMIdent ammember) throws IdRepon { if (!member.isMember(amIdentity)) { if (isOperted(repo, aeEDIT)) { addMember(member); } else { throw (\"\"); } } }", "n_tokens": 160, "n_pass": [115, 14, 14]}
{"time": "2021-02-22 09:04:08.529160", "score": "0.9493", "loss": "0.101", "code": "id addMember(AMIdent ammember) throws IdRepon { if (!member.isMember(amIdentity)) { if (isOperted(reEDIT)) { addMember(member); } else { throw (\"\"); } } }", "n_tokens": 154, "n_pass": [161, 15, 15]}
{"time": "2021-02-22 09:04:13.758612", "score": "0.9493", "loss": "0.101", "code": "id addMember(AMIdent ammember) throws IdRepon { if (!member.isMember(amIdentity)) { if (isOperted(reEDIT)) { addMember(member); } else { (\"\"); } } }", "n_tokens": 148, "n_pass": [168, 17, 16]}
{"time": "2021-02-22 09:04:16.347165", "score": "0.9495", "loss": "0.1003", "code": "id addMember(AMIdent ammember) throws IdRepon { if (!member.isMember(amIdentity)) { if (isOperted(reEDIT)) { addMember(member); } else { } } }", "n_tokens": 142, "n_pass": [169, 18, 17]}
{"time": "2021-02-22 09:04:19.741264", "score": "0.9723", "loss": "0.0332", "code": "id addMember(AM ammember) throws IdRepon { if (!member.isMember(amIdentity)) { if (isOperted(reEDIT)) { addMember(member); } else { } } }", "n_tokens": 137, "n_pass": [174, 19, 18]}
{"time": "2021-02-22 09:04:22.414179", "score": "0.9723", "loss": "0.0329", "code": "id addMember(AM ammember) throws Id { if (!member.isMember(amIdentity)) { if (isOperted(reEDIT)) { addMember(member); } else { } } }", "n_tokens": 132, "n_pass": [179, 20, 19]}
{"time": "2021-02-22 09:04:25.076797", "score": "0.9835", "loss": "0.0194", "code": "id addMember(AM ammember) throws Id { if (!meisMember(amIdentity)) { if (isOperted(reEDIT)) { addMember(member); } else { } } }", "n_tokens": 127, "n_pass": [182, 21, 20]}
{"time": "2021-02-22 09:04:27.771970", "score": "0.9835", "loss": "0.0194", "code": "id addMember(AM ammember) throws Id { if (!meber(amIdentity)) { if (isOperted(reEDIT)) { addMember(member); } else { } } }", "n_tokens": 122, "n_pass": [183, 22, 21]}
{"time": "2021-02-22 09:04:30.401121", "score": "0.9835", "loss": "0.0194", "code": "id addMember(AM ammember) throws Id { if (!meber(atity)) { if (isOperted(reEDIT)) { addMember(member); } else { } } }", "n_tokens": 117, "n_pass": [185, 23, 22]}
{"time": "2021-02-22 09:04:32.998079", "score": "0.9835", "loss": "0.0194", "code": "id addMember(AM ammember) throws Id { if (!meber(atity)) { if (ised(reEDIT)) { addMember(member); } else { } } }", "n_tokens": 112, "n_pass": [189, 24, 23]}
{"time": "2021-02-22 09:04:39.052251", "score": "0.9826", "loss": "0.0202", "code": "id addMember(AM ammember) throws Id { if (!meber(atity)) { if (i(reEDIT)) { addMember(member); } else { } } }", "n_tokens": 109, "n_pass": [253, 26, 24]}
{"time": "2021-02-22 09:04:41.641657", "score": "0.9933", "loss": "0.0073", "code": "id addMember(AM ammember) throws Id { if (!meber(atity)) { if (i(reT)) { addMember(member); } else { } } }", "n_tokens": 106, "n_pass": [255, 27, 25]}
{"time": "2021-02-22 09:04:52.053641", "score": "0.9837", "loss": "0.0343", "code": "id addMember(AM ammember) throws Id { if (!meber(atity)) { if (i(reT)) { addMember(mer); } else { } } }", "n_tokens": 103, "n_pass": [262, 31, 26]}
{"time": "2021-02-22 09:04:56.964731", "score": "0.9889", "loss": "0.0206", "code": "id addMember(AM member) throws Id { if (!meber(atity)) { if (i(reT)) { addMember(mer); } else { } } }", "n_tokens": 101, "n_pass": [277, 32, 27]}
{"time": "2021-02-22 09:04:59.564688", "score": "0.9837", "loss": "0.0343", "code": "id addMember(AM mber) throws Id { if (!meber(atity)) { if (i(reT)) { addMember(mer); } else { } } }", "n_tokens": 99, "n_pass": [278, 33, 28]}
{"time": "2021-02-22 09:05:02.176631", "score": "0.9836", "loss": "0.0337", "code": "id addMember(AM er) throws Id { if (!meber(atity)) { if (i(reT)) { addMember(mer); } else { } } }", "n_tokens": 97, "n_pass": [279, 34, 29]}
{"time": "2021-02-22 09:05:04.793259", "score": "0.9834", "loss": "0.0338", "code": "id addMember(AM er) throws Id { if (!er(atity)) { if (i(reT)) { addMember(mer); } else { } } }", "n_tokens": 94, "n_pass": [288, 35, 30]}
{"time": "2021-02-22 09:05:07.397475", "score": "0.9815", "loss": "0.039", "code": "id addMember(AM er) throws Id { if (!er(ty)) { if (i(reT)) { addMember(mer); } else { } } }", "n_tokens": 91, "n_pass": [290, 36, 31]}
{"time": "2021-02-22 09:05:23.381859", "score": "0.9815", "loss": "0.039", "code": "id addMember(AM er) throws Id { if(!er(ty)) { if (i(reT)) { addMember(mer); } else { } } }", "n_tokens": 90, "n_pass": [393, 40, 32]}
{"time": "2021-02-22 09:05:25.985702", "score": "0.9705", "loss": "0.0566", "code": "id addMember(AM er) throws Id { if(er(ty)) { if (i(reT)) { addMember(mer); } else { } } }", "n_tokens": 89, "n_pass": [395, 41, 33]}
{"time": "2021-02-22 09:05:28.588869", "score": "0.9654", "loss": "0.0703", "code": "id addMember(AM er) throws Id { if(r(ty)) { if (i(reT)) { addMember(mer); } else { } } }", "n_tokens": 88, "n_pass": [396, 42, 34]}
{"time": "2021-02-22 09:05:31.188399", "score": "0.9824", "loss": "0.0367", "code": "id addMember(AM er) throws Id { if((ty)) { if (i(reT)) { addMember(mer); } else { } } }", "n_tokens": 87, "n_pass": [397, 43, 35]}
{"time": "2021-02-22 09:05:33.788844", "score": "0.9841", "loss": "0.0327", "code": "id addMember(AM er) throws Id { if((y)) { if (i(reT)) { addMember(mer); } else { } } }", "n_tokens": 86, "n_pass": [399, 44, 36]}
{"time": "2021-02-22 09:05:36.401636", "score": "0.9841", "loss": "0.0327", "code": "id addMember(AM er) throws Id { if((y)){ if (i(reT)) { addMember(mer); } else { } } }", "n_tokens": 85, "n_pass": [403, 45, 37]}
{"time": "2021-02-22 09:05:38.996560", "score": "0.9818", "loss": "0.0399", "code": "id addMember(AM er) throws Id { if((y)){ if (i(T)) { addMember(mer); } else { } } }", "n_tokens": 83, "n_pass": [408, 46, 38]}
{"time": "2021-02-22 09:05:52.007158", "score": "0.9796", "loss": "0.0466", "code": "id addMember(AM er) throws Id { if((y)){ if (i(T)) { addMember(r); } else { } } }", "n_tokens": 81, "n_pass": [417, 51, 39]}
{"time": "2021-02-22 09:05:54.623700", "score": "0.9861", "loss": "0.0216", "code": "d addMember(AM er) throws Id { if((y)){ if (i(T)) { addMember(r); } else { } } }", "n_tokens": 80, "n_pass": [427, 52, 40]}
{"time": "2021-02-22 09:06:01.496071", "score": "0.9805", "loss": "0.0303", "code": "d addMember(M er) throws Id { if((y)){ if (i(T)) { addMember(r); } else { } } }", "n_tokens": 79, "n_pass": [440, 53, 41]}
{"time": "2021-02-22 09:06:04.106859", "score": "0.9786", "loss": "0.0324", "code": "d addMember(M r) throws Id { if((y)){ if (i(T)) { addMember(r); } else { } } }", "n_tokens": 78, "n_pass": [443, 54, 42]}
{"time": "2021-02-22 09:06:06.705962", "score": "0.9786", "loss": "0.0324", "code": "d addMember(M r)throws Id { if((y)){ if (i(T)) { addMember(r); } else { } } }", "n_tokens": 77, "n_pass": [446, 55, 43]}
{"time": "2021-02-22 09:06:09.321762", "score": "0.9797", "loss": "0.0293", "code": "d addMember(M r)throws d { if((y)){ if (i(T)) { addMember(r); } else { } } }", "n_tokens": 76, "n_pass": [454, 56, 44]}
{"time": "2021-02-22 09:06:11.916427", "score": "0.9797", "loss": "0.0293", "code": "d addMember(M r)throws d{ if((y)){ if (i(T)) { addMember(r); } else { } } }", "n_tokens": 75, "n_pass": [456, 57, 45]}
{"time": "2021-02-22 09:06:14.514878", "score": "0.9797", "loss": "0.0293", "code": "d addMember(M r)throws d{if((y)){ if (i(T)) { addMember(r); } else { } } }", "n_tokens": 74, "n_pass": [458, 58, 46]}
{"time": "2021-02-22 09:06:35.684065", "score": "0.9797", "loss": "0.0293", "code": "d addMember(M r)throws d{if((y)){ if(i(T)) { addMember(r); } else { } } }", "n_tokens": 73, "n_pass": [556, 63, 47]}
{"time": "2021-02-22 09:06:38.284714", "score": "0.7778", "loss": "0.3183", "code": "d addMember(M r)throws d{if((y)){ if((T)) { addMember(r); } else { } } }", "n_tokens": 72, "n_pass": [557, 64, 48]}
{"time": "2021-02-22 09:06:40.884250", "score": "0.7778", "loss": "0.3183", "code": "d addMember(M r)throws d{if((y)){ if((T)){ addMember(r); } else { } } }", "n_tokens": 71, "n_pass": [562, 65, 49]}
{"time": "2021-02-22 09:06:43.481611", "score": "0.7778", "loss": "0.3183", "code": "d addMember(M r)throws d{if((y)){ if((T)){addMember(r); } else { } } }", "n_tokens": 70, "n_pass": [564, 66, 50]}
{"time": "2021-02-22 09:07:12.069769", "score": "0.7778", "loss": "0.3183", "code": "d addMember(M r)throws d{if((y)){ if((T)){addMember(r);} else { } } }", "n_tokens": 69, "n_pass": [578, 77, 51]}
{"time": "2021-02-22 09:07:14.696110", "score": "0.7778", "loss": "0.3183", "code": "d addMember(M r)throws d{if((y)){ if((T)){addMember(r);}else { } } }", "n_tokens": 68, "n_pass": [580, 78, 52]}
{"time": "2021-02-22 09:07:17.297619", "score": "0.7778", "loss": "0.3183", "code": "d addMember(M r)throws d{if((y)){ if((T)){addMember(r);}else{ } } }", "n_tokens": 67, "n_pass": [585, 79, 53]}
{"time": "2021-02-22 09:07:19.891374", "score": "0.7778", "loss": "0.3183", "code": "d addMember(M r)throws d{if((y)){ if((T)){addMember(r);}else{} } }", "n_tokens": 66, "n_pass": [587, 80, 54]}
{"time": "2021-02-22 09:07:22.511662", "score": "0.7778", "loss": "0.3183", "code": "d addMember(M r)throws d{if((y)){ if((T)){addMember(r);}else{}} }", "n_tokens": 65, "n_pass": [589, 81, 55]}
{"time": "2021-02-22 09:07:25.111476", "score": "0.7778", "loss": "0.3183", "code": "d addMember(M r)throws d{if((y)){ if((T)){addMember(r);}else{}}}", "n_tokens": 64, "n_pass": [591, 82, 56]}
{"time": "2021-02-22 09:07:31.967740", "score": "0.7778", "loss": "0.3183", "code": "d addMember(M r)throws d{if((y)){if((T)){addMember(r);}else{}}}", "n_tokens": 63, "n_pass": [626, 83, 57]}

Minimal simplified code:
d addMember(M r)throws d{if((y)){if((T)){addMember(r);}else{}}}

