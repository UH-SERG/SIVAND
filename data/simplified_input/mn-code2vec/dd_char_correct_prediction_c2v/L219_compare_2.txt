
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/rover12421__ShakaApktool/shaka/lib/src/main/java/com/rover12421/shaka/lib/multiLanguage/MultiLanguageSupport_compare.java
method_name = compare
method_body = @Override public int compare(String o1, String o2) { if (o2.length() == o1.length()) { return o2.compareTo(o1); } return o2.length() - o1.length(); }
predict, score, loss = compare, 0.9455487728118896, 0.05599488317966461

Trace of simplified code(s):
{"time": "2021-02-22 20:46:29.456430", "score": "0.9455", "loss": "0.056", "code": "@Override public int compare(String o1, String o2) { if (o2.length() == o1.length()) { return o2.compareTo(o1); } return o2.length() - o1.length(); }", "n_tokens": 149, "n_pass": [1, 1, 1]}
{"time": "2021-02-22 20:46:32.099546", "score": "0.9821", "loss": "0.0181", "code": "nt compare(String o1, String o2) { if (o2.length() == o1.length()) { return o2.compareTo(o1); } return o2.length() - o1.length(); }", "n_tokens": 131, "n_pass": [20, 2, 2]}
{"time": "2021-02-22 20:46:35.161724", "score": "0.981", "loss": "0.0192", "code": "nt compare(String o1, String o2) { if (o2.leno1.length()) { return o2.compareTo(o1); } return o2.length() - o1.length(); }", "n_tokens": 122, "n_pass": [47, 3, 3]}
{"time": "2021-02-22 20:46:37.794467", "score": "0.9576", "loss": "0.0434", "code": "nt compare(String o1, String o2) { if (o2.len()) { return o2.compareTo(o1); } return o2.length() - o1.length(); }", "n_tokens": 113, "n_pass": [48, 4, 4]}
{"time": "2021-02-22 20:46:40.412874", "score": "0.9958", "loss": "0.0042", "code": "nt compare(String o1, String o2) { if (o2.len()) { retmpareTo(o1); } return o2.length() - o1.length(); }", "n_tokens": 104, "n_pass": [50, 5, 5]}
{"time": "2021-02-22 20:46:43.396795", "score": "0.9617", "loss": "0.1171", "code": "nt compare(String o1, String o2) { if (o2.len()) { retmpareTo(o1); } return o2.lengtength(); }", "n_tokens": 94, "n_pass": [54, 6, 6]}
{"time": "2021-02-22 20:46:46.379062", "score": "0.7737", "loss": "0.5615", "code": "nt compare(String o1, String o2) { if (o2.len()) { retmpareTo(o1); } returength(); }", "n_tokens": 84, "n_pass": [64, 7, 7]}
{"time": "2021-02-22 20:46:49.387685", "score": "0.7737", "loss": "0.5615", "code": "nt compare(String o1, String o2) { if (o2.len()) { retmpareTo(o1); } retur(); }", "n_tokens": 79, "n_pass": [92, 8, 8]}
{"time": "2021-02-22 20:46:52.765017", "score": "0.7086", "loss": "0.5357", "code": "nt compare(Sg o1, String o2) { if (o2.len()) { retmpareTo(o1); } retur(); }", "n_tokens": 75, "n_pass": [96, 9, 9]}
{"time": "2021-02-22 20:46:55.378434", "score": "0.4666", "loss": "1.1932", "code": "nt compare(Sg o1, String o2) { if (n()) { retmpareTo(o1); } retur(); }", "n_tokens": 70, "n_pass": [102, 10, 10]}
{"time": "2021-02-22 20:46:57.980985", "score": "0.4666", "loss": "1.1932", "code": "nt compare(Sg o1, String o2) { if (n()) { retTo(o1); } retur(); }", "n_tokens": 65, "n_pass": [105, 11, 11]}
{"time": "2021-02-22 20:47:04.023984", "score": "0.4129", "loss": "1.3539", "code": "nt compare(Sg o1, String o2) { if (n()) { re(o1); } retur(); }", "n_tokens": 62, "n_pass": [149, 13, 12]}
{"time": "2021-02-22 20:47:06.622981", "score": "0.3049", "loss": "1.6817", "code": "nt compare(Sg o1, String o2) { if (n()) { re(o1); } rr(); }", "n_tokens": 59, "n_pass": [153, 14, 13]}
{"time": "2021-02-22 20:47:09.230640", "score": "0.2646", "loss": "1.8383", "code": "nt compare(Sg o1, String o2) { if (n()) { re(o1); } r; }", "n_tokens": 56, "n_pass": [154, 15, 14]}
{"time": "2021-02-22 20:47:13.759483", "score": "0.3046", "loss": "1.87", "code": "nt compare(Sg o1, ring o2) { if (n()) { re(o1); } r; }", "n_tokens": 54, "n_pass": [165, 16, 15]}
{"time": "2021-02-22 20:47:16.361755", "score": "0.4762", "loss": "1.0927", "code": "nt compare(Sg o1, ng o2) { if (n()) { re(o1); } r; }", "n_tokens": 52, "n_pass": [166, 17, 16]}
{"time": "2021-02-22 20:47:18.957667", "score": "0.4933", "loss": "1.0655", "code": "nt compare(Sg o1, ng o2) { if (n) { re(o1); } r; }", "n_tokens": 50, "n_pass": [174, 18, 17]}
{"time": "2021-02-22 20:47:29.620044", "score": "0.4933", "loss": "1.0655", "code": "nt compare(Sg o1, ng o2) { if (n){ re(o1); } r; }", "n_tokens": 49, "n_pass": [242, 20, 18]}
{"time": "2021-02-22 20:47:32.242950", "score": "0.4933", "loss": "1.0655", "code": "nt compare(Sg o1, ng o2) { if (n){re(o1); } r; }", "n_tokens": 48, "n_pass": [244, 21, 19]}
{"time": "2021-02-22 20:47:34.832836", "score": "0.3348", "loss": "1.3603", "code": "nt compare(Sg o1, ng o2) { if (n){e(o1); } r; }", "n_tokens": 47, "n_pass": [245, 22, 20]}
{"time": "2021-02-22 20:47:40.011294", "score": "0.3439", "loss": "1.3205", "code": "nt compare(Sg o1, ng o2) { if (n){e(o1); }  }", "n_tokens": 45, "n_pass": [251, 24, 21]}
{"time": "2021-02-22 20:47:42.607166", "score": "0.4204", "loss": "1.0332", "code": "t compare(Sg o1, ng o2) { if (n){e(o1); }  }", "n_tokens": 44, "n_pass": [253, 25, 22]}
{"time": "2021-02-22 20:47:53.892405", "score": "0.4204", "loss": "1.0332", "code": "t compare(Sg o, ng o2) { if (n){e(o1); }  }", "n_tokens": 43, "n_pass": [268, 28, 23]}
{"time": "2021-02-22 20:47:56.486175", "score": "0.4204", "loss": "1.0332", "code": "t compare(Sg o,ng o2) { if (n){e(o1); }  }", "n_tokens": 42, "n_pass": [270, 29, 24]}
{"time": "2021-02-22 20:48:04.302963", "score": "0.4204", "loss": "1.0332", "code": "t compare(Sg o,ng o) { if (n){e(o1); }  }", "n_tokens": 41, "n_pass": [275, 32, 25]}
{"time": "2021-02-22 20:48:06.892333", "score": "0.4204", "loss": "1.0332", "code": "t compare(Sg o,ng o){ if (n){e(o1); }  }", "n_tokens": 40, "n_pass": [277, 33, 26]}
{"time": "2021-02-22 20:48:09.503003", "score": "0.4204", "loss": "1.0332", "code": "t compare(Sg o,ng o){if (n){e(o1); }  }", "n_tokens": 39, "n_pass": [279, 34, 27]}
{"time": "2021-02-22 20:48:12.132971", "score": "0.4204", "loss": "1.0332", "code": "t compare(Sg o,ng o){if(n){e(o1); }  }", "n_tokens": 38, "n_pass": [282, 35, 28]}
{"time": "2021-02-22 20:48:35.214349", "score": "0.4204", "loss": "1.0332", "code": "t compare(Sg o,ng o){if(n){e(o); }  }", "n_tokens": 37, "n_pass": [328, 42, 29]}
{"time": "2021-02-22 20:48:37.827427", "score": "0.4204", "loss": "1.0332", "code": "t compare(Sg o,ng o){if(n){e(o);}  }", "n_tokens": 36, "n_pass": [330, 43, 30]}
{"time": "2021-02-22 20:48:40.431657", "score": "0.4204", "loss": "1.0332", "code": "t compare(Sg o,ng o){if(n){e(o);} }", "n_tokens": 35, "n_pass": [332, 44, 31]}
{"time": "2021-02-22 20:48:43.032612", "score": "0.4204", "loss": "1.0332", "code": "t compare(Sg o,ng o){if(n){e(o);}}", "n_tokens": 34, "n_pass": [333, 45, 32]}
{"time": "2021-02-22 20:49:02.075339", "score": "0.3392", "loss": "1.3418", "code": "t compare(Sg o,ng o){if(n){e();}}", "n_tokens": 33, "n_pass": [364, 51, 33]}

Minimal simplified code:
t compare(Sg o,ng o){if(n){e();}}

