
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/sakaiproject__sakai/kernel/api/src/main/java/org/sakaiproject/tool/api/StoreableBreakdown_hashCode.java
method_name = hashCode
method_body = @Override public int hashCode() { int result = className.hashCode(); result = 31 * result + size.hashCode(); result = 31 * result + data.hashCode(); return result; }
predict, score, loss = hashCode, 0.9996906518936157, 0.0003407612966839224

Trace of simplified code(s):
{"time": "2021-02-22 14:01:17.695780", "score": "0.9997", "loss": "0.0003", "code": "@Override public int hashCode() { int result = className.hashCode(); result = 31 * result + size.hashCode(); result = 31 * result + data.hashCode(); return result; }", "n_tokens": 165, "n_pass": [1, 1, 1]}
{"time": "2021-02-22 14:01:20.310178", "score": "0.9998", "loss": "0.0002", "code": "@Override public int hashCode() { int result = className.hashCode(); result = 31 *result + data.hashCode(); return result; }", "n_tokens": 124, "n_pass": [10, 2, 2]}
{"time": "2021-02-22 14:01:22.905713", "score": "0.9999", "loss": "0.0001", "code": "@Override public int hashCode() { int result = className.hashCode(); result = 31 *e(); return result; }", "n_tokens": 103, "n_pass": [19, 3, 3]}
{"time": "2021-02-22 14:01:25.896360", "score": "0.8692", "loss": "0.3672", "code": "@Override public int hashCode() { int result = className.hashe(); return result; }", "n_tokens": 82, "n_pass": [23, 4, 4]}
{"time": "2021-02-22 14:01:34.562665", "score": "0.9022", "loss": "0.3708", "code": "@Override public int hashCode() { int result = className.hashe();rn result; }", "n_tokens": 77, "n_pass": [61, 7, 5]}
{"time": "2021-02-22 14:01:37.168150", "score": "0.9098", "loss": "0.3347", "code": "@Override public int hashCode() { int result = className.hashe();ult; }", "n_tokens": 71, "n_pass": [62, 8, 6]}
{"time": "2021-02-22 14:01:39.769349", "score": "0.8318", "loss": "0.6383", "code": "@Overpublic int hashCode() { int result = className.hashe();ult; }", "n_tokens": 66, "n_pass": [65, 9, 7]}
{"time": "2021-02-22 14:01:42.398636", "score": "0.8318", "loss": "0.6383", "code": "@Overc int hashCode() { int result = className.hashe();ult; }", "n_tokens": 61, "n_pass": [66, 10, 8]}
{"time": "2021-02-22 14:01:48.364343", "score": "0.8195", "loss": "0.6845", "code": "@Overc int hashCode() { int re= className.hashe();ult; }", "n_tokens": 56, "n_pass": [72, 12, 9]}
{"time": "2021-02-22 14:01:53.595312", "score": "0.373", "loss": "2.1405", "code": "@Overc int hashCode() { int re= classNamhe();ult; }", "n_tokens": 51, "n_pass": [75, 14, 10]}
{"time": "2021-02-22 14:01:56.171129", "score": "0.4646", "loss": "1.3225", "code": "@Overc int hashCode() { int re= classNamult; }", "n_tokens": 46, "n_pass": [76, 15, 11]}
{"time": "2021-02-22 14:02:04.721047", "score": "0.4646", "loss": "1.3225", "code": "@Overc int hashCode() { int re= clault; }", "n_tokens": 41, "n_pass": [85, 18, 12]}
{"time": "2021-02-22 14:02:13.222711", "score": "0.3868", "loss": "1.5751", "code": "@Overc int hashCode() { int re= cla; }", "n_tokens": 38, "n_pass": [110, 21, 13]}
{"time": "2021-02-22 14:02:15.812596", "score": "0.5759", "loss": "1.0944", "code": "@Orc int hashCode() { int re= cla; }", "n_tokens": 36, "n_pass": [112, 22, 14]}
{"time": "2021-02-22 14:02:18.398872", "score": "0.4273", "loss": "1.3366", "code": "@O int hashCode() { int re= cla; }", "n_tokens": 34, "n_pass": [113, 23, 15]}
{"time": "2021-02-22 14:02:25.125975", "score": "0.4107", "loss": "1.3961", "code": "@O int hashCode() {t re= cla; }", "n_tokens": 31, "n_pass": [121, 25, 16]}
{"time": "2021-02-22 14:02:30.273563", "score": "0.2616", "loss": "1.7844", "code": "@O int hashCode() {t rcla; }", "n_tokens": 28, "n_pass": [123, 27, 17]}
{"time": "2021-02-22 14:02:32.861308", "score": "0.2874", "loss": "1.687", "code": "@O int hashCode() {t r; }", "n_tokens": 25, "n_pass": [124, 28, 18]}
{"time": "2021-02-22 14:03:01.246342", "score": "0.2874", "loss": "1.687", "code": "@O int hashCode() {t r;}", "n_tokens": 24, "n_pass": [186, 36, 19]}
{"time": "2021-02-22 14:03:15.547372", "score": "0.2874", "loss": "1.687", "code": "@O int hashCode(){t r;}", "n_tokens": 23, "n_pass": [204, 40, 20]}

Minimal simplified code:
@O int hashCode(){t r;}

