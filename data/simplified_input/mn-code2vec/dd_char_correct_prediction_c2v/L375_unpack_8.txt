
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/dronekit__dronekit-android/dependencyLibs/Mavlink/src/com/MAVLink/common/msg_manual_setpoint_unpack.java
method_name = unpack
method_body = public void unpack(MAVLinkPayload payload) { payload.resetIndex(); this.time_boot_ms = payload.getUnsignedInt(); this.roll = payload.getFloat(); this.pitch = payload.getFloat(); this.yaw = payload.getFloat(); this.thrust = payload.getFloat(); this.mode_switch = payload.getUnsignedByte(); this.manual_override_switch = payload.getUnsignedByte(); }
predict, score, loss = unpack, 0.9996663331985474, 0.0008148210472427309

Trace of simplified code(s):
{"time": "2021-02-25 07:44:58.404420", "score": "0.9964", "loss": "0.0058", "code": "public void unpack(MAVLinkPayload payload) { payload.resetIndex(); this.time_boot_ms = payload.getUnsignedInt(); this.roll = payload.getFloat(); this.pitch = payload.getFloat(); this.yaw = payload.getFloat(); this.thrust = payload.getFloat(); this.mode_switch = payload.getUnsignedByte(); this.manual_override_switch = payload.getUnsignedByte(); }", "n_tokens": 347, "n_pass": [1, 1, 1]}
{"time": "2021-02-25 07:45:01.073748", "score": "0.9999", "loss": "0.0002", "code": "public void unpack(MAVLinkPayload payload) { payload.resetIndex(); this.time_boot_ms =t(); this.yaw = payload.getFloat(); this.thrust = payload.getFloat(); this.mode_switch = payload.getUnsignedByte(); this.manual_override_switch = payload.getUnsignedByte(); }", "n_tokens": 260, "n_pass": [9, 2, 2]}
{"time": "2021-02-25 07:45:04.169680", "score": "0.9983", "loss": "0.0019", "code": "public void unpack(MAVLinkPayload payload) { payload.resetIndex(); this.time_boot_ms =rust = payload.getFloat(); this.mode_switch = payload.getUnsignedByte(); this.manual_override_switch = payload.getUnsignedByte(); }", "n_tokens": 217, "n_pass": [18, 3, 3]}
{"time": "2021-02-25 07:45:06.797399", "score": "0.9991", "loss": "0.0009", "code": "public void unpack(MAVLinkPayload payload) { payload.resetIndex(); this.time_boot_ms =rust = payload.getFloat(); this.mode_switcherride_switch = payload.getUnsignedByte(); }", "n_tokens": 173, "n_pass": [20, 4, 4]}
{"time": "2021-02-25 07:45:09.795447", "score": "0.999", "loss": "0.001", "code": "public void unpack(MAVLinkPayload payload) { payload.resetIndex(); this.time_boot_ms =erride_switch = payload.getUnsignedByte(); }", "n_tokens": 130, "n_pass": [24, 5, 5]}
{"time": "2021-02-25 07:45:12.810293", "score": "0.9995", "loss": "0.0006", "code": "public void unpack(MAVLinkPayload payload) { payload.resetIndex(); this.time_boot_ms =d.getUnsignedByte(); }", "n_tokens": 108, "n_pass": [33, 6, 6]}
{"time": "2021-02-25 07:45:15.419070", "score": "0.9999", "loss": "0.0001", "code": "public void unpack(MAVLinkPayload payload) { payload.resetIndex(); this.time_boot_ms =edByte(); }", "n_tokens": 97, "n_pass": [48, 7, 7]}
{"time": "2021-02-25 07:45:18.026825", "score": "0.9999", "loss": "0.0001", "code": "d unpack(MAVLinkPayload payload) { payload.resetIndex(); this.time_boot_ms =edByte(); }", "n_tokens": 87, "n_pass": [49, 8, 8]}
{"time": "2021-02-25 07:45:20.681949", "score": "0.6731", "loss": "0.4112", "code": "d unpack(Mad payload) { payload.resetIndex(); this.time_boot_ms =edByte(); }", "n_tokens": 76, "n_pass": [51, 9, 9]}
{"time": "2021-02-25 07:45:25.901839", "score": "0.5754", "loss": "0.5679", "code": "d unpack(Mad pa) { payload.resetIndex(); this.time_boot_ms =edByte(); }", "n_tokens": 71, "n_pass": [74, 11, 10]}
{"time": "2021-02-25 07:45:57.827466", "score": "0.4702", "loss": "1.6637", "code": "d unpack(Mad pa) { payload.resetex(); this.time_boot_ms =edByte(); }", "n_tokens": 68, "n_pass": [121, 23, 11]}
{"time": "2021-02-25 07:46:00.438143", "score": "0.5311", "loss": "1.4791", "code": "d unpack(Mad pa) { payload.resetex(); s.time_boot_ms =edByte(); }", "n_tokens": 65, "n_pass": [124, 24, 12]}
{"time": "2021-02-25 07:46:18.815960", "score": "0.3563", "loss": "2.051", "code": "d unpack(Mad pa) { payload.resetex(); s.time_boot_ms =edByt; }", "n_tokens": 62, "n_pass": [132, 31, 13]}
{"time": "2021-02-25 07:46:22.995035", "score": "0.9634", "loss": "0.0649", "code": "d unpack(M pa) { payload.resetex(); s.time_boot_ms =edByt; }", "n_tokens": 60, "n_pass": [139, 32, 14]}
{"time": "2021-02-25 07:46:25.611755", "score": "0.6831", "loss": "0.7858", "code": "d unpack(M pa) { poad.resetex(); s.time_boot_ms =edByt; }", "n_tokens": 57, "n_pass": [143, 33, 15]}
{"time": "2021-02-25 07:46:28.234607", "score": "0.6117", "loss": "0.9991", "code": "d unpack(M pa) { p.resetex(); s.time_boot_ms =edByt; }", "n_tokens": 54, "n_pass": [144, 34, 16]}
{"time": "2021-02-25 07:46:33.532900", "score": "0.6117", "loss": "0.9991", "code": "d unpack(M pa) { p.reex(); s.time_boot_ms =edByt; }", "n_tokens": 51, "n_pass": [146, 36, 17]}
{"time": "2021-02-25 07:46:51.935514", "score": "0.7111", "loss": "0.8816", "code": "d unpack(M pa) { p.reex(); s.time_boot_ms =ed; }", "n_tokens": 48, "n_pass": [155, 43, 18]}
{"time": "2021-02-25 07:47:18.926104", "score": "0.3946", "loss": "1.7274", "code": "d unpack(M a) { p.reex(); s.time_boot_ms =ed; }", "n_tokens": 47, "n_pass": [223, 51, 19]}
{"time": "2021-02-25 07:47:21.527095", "score": "0.3946", "loss": "1.7274", "code": "d unpack(M a){ p.reex(); s.time_boot_ms =ed; }", "n_tokens": 46, "n_pass": [226, 52, 20]}
{"time": "2021-02-25 07:47:24.126761", "score": "0.3946", "loss": "1.7274", "code": "d unpack(M a){p.reex(); s.time_boot_ms =ed; }", "n_tokens": 45, "n_pass": [228, 53, 21]}
{"time": "2021-02-25 07:47:29.454188", "score": "0.352", "loss": "2.2502", "code": "d unpack(M a){p.eex(); s.time_boot_ms =ed; }", "n_tokens": 44, "n_pass": [231, 55, 22]}
{"time": "2021-02-25 07:47:32.130814", "score": "0.3161", "loss": "2.2748", "code": "d unpack(M a){p.ex(); s.time_boot_ms =ed; }", "n_tokens": 43, "n_pass": [232, 56, 23]}
{"time": "2021-02-25 07:47:34.743014", "score": "0.529", "loss": "1.3564", "code": "d unpack(M a){p.x(); s.time_boot_ms =ed; }", "n_tokens": 42, "n_pass": [233, 57, 24]}
{"time": "2021-02-25 07:48:18.787048", "score": "0.529", "loss": "1.3564", "code": "d unpack(M a){p.x(); s.timeboot_ms =ed; }", "n_tokens": 41, "n_pass": [293, 72, 25]}
{"time": "2021-02-25 07:48:31.868037", "score": "0.529", "loss": "1.3564", "code": "d unpack(M a){p.x(); s.timebootms =ed; }", "n_tokens": 40, "n_pass": [298, 77, 26]}
{"time": "2021-02-25 07:48:39.707721", "score": "0.529", "loss": "1.3564", "code": "d unpack(M a){p.x(); s.timebootms=ed; }", "n_tokens": 39, "n_pass": [301, 80, 27]}
{"time": "2021-02-25 07:48:44.919204", "score": "0.4394", "loss": "1.1909", "code": "d unpack(M a){p.x(); s.timebootms=d; }", "n_tokens": 38, "n_pass": [303, 82, 28]}
{"time": "2021-02-25 07:48:47.532271", "score": "0.4394", "loss": "1.1909", "code": "d unpack(M a){p.x(); s.timebootms=d;}", "n_tokens": 37, "n_pass": [306, 83, 29]}
{"time": "2021-02-25 07:48:55.875397", "score": "0.4394", "loss": "1.1909", "code": "d unpack(M a){p.x();s.timebootms=d;}", "n_tokens": 36, "n_pass": [328, 85, 30]}

Minimal simplified code:
d unpack(M a){p.x();s.timebootms=d;}

