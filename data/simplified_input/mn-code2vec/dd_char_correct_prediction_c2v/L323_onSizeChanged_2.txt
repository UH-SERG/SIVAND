
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/HotBitmapGG__RingProgressBar/library/src/main/java/io/netopen/hotbitmapgg/library/view/RingProgressBar_onSizeChanged.java
method_name = onSizeChanged
method_body = @Override protected void onSizeChanged(int w, int h, int oldw, int oldh) { super.onSizeChanged(w, h, oldw, oldh); width = w; height = h; }
predict, score, loss = onSizeChanged, 0.9999998807907104, 1.1920928244535389e-07

Trace of simplified code(s):
{"time": "2021-02-25 01:32:59.219156", "score": "1.0", "loss": "0.0", "code": "@Override protected void onSizeChanged(int w, int h, int oldw, int oldh) { super.onSizeChanged(w, h, oldw, oldh); width = w; height = h; }", "n_tokens": 138, "n_pass": [1, 1, 1]}
{"time": "2021-02-25 01:33:02.679321", "score": "1.0", "loss": "0.0", "code": "@Override protected void onSizeChanged(int w, int hldh) { super.onSizeChanged(w, h, oldw, oldh); width = w; height = h; }", "n_tokens": 121, "n_pass": [23, 2, 2]}
{"time": "2021-02-25 01:33:05.751578", "score": "1.0", "loss": "0.0", "code": "@Override protected void onSizeChanged(int w, int hldh) { izeChanged(w, h, oldw, oldh); width = w; height = h; }", "n_tokens": 112, "n_pass": [45, 3, 3]}
{"time": "2021-02-25 01:33:08.385644", "score": "1.0", "loss": "0.0001", "code": "@Override protected void onSizeChanged(int w, int hldh) { d(w, h, oldw, oldh); width = w; height = h; }", "n_tokens": 103, "n_pass": [46, 4, 4]}
{"time": "2021-02-25 01:33:13.797343", "score": "0.9999", "loss": "0.0001", "code": "@Override protected void onSizeChanged(int w, int hldh) { d(w, h, oldw, oldh); width ht = h; }", "n_tokens": 94, "n_pass": [50, 6, 5]}
{"time": "2021-02-25 01:33:16.469058", "score": "0.9999", "loss": "0.0001", "code": "@Overridted void onSizeChanged(int w, int hldh) { d(w, h, oldw, oldh); width ht = h; }", "n_tokens": 86, "n_pass": [53, 7, 6]}
{"time": "2021-02-25 01:33:20.142781", "score": "0.9998", "loss": "0.0002", "code": "@Overridted void onSizeChanged(i hldh) { d(w, h, oldw, oldh); width ht = h; }", "n_tokens": 77, "n_pass": [57, 8, 7]}
{"time": "2021-02-25 01:33:26.345119", "score": "0.9286", "loss": "0.0805", "code": "@Overridted void onSizeChanged(i hldh) { d(w, h,w, oldh); width ht = h; }", "n_tokens": 73, "n_pass": [89, 10, 8]}
{"time": "2021-02-25 01:33:31.632162", "score": "0.9504", "loss": "0.0565", "code": "@Overridted void onSizeChanged(i hldh) { d(w, h,w, oldh);  ht = h; }", "n_tokens": 68, "n_pass": [92, 12, 9]}
{"time": "2021-02-25 01:33:34.315185", "score": "0.9107", "loss": "0.0995", "code": "@Overridted void onSizeChanged(i hldh) { d(w, h,w, oldh);  h; }", "n_tokens": 63, "n_pass": [93, 13, 10]}
{"time": "2021-02-25 01:33:37.010645", "score": "0.9107", "loss": "0.0995", "code": "@Oveted void onSizeChanged(i hldh) { d(w, h,w, oldh);  h; }", "n_tokens": 59, "n_pass": [96, 14, 11]}
{"time": "2021-02-25 01:33:41.653895", "score": "0.8387", "loss": "0.2415", "code": "@Oveted void onSizeChanged(i hldh) { d(ww, oldh);  h; }", "n_tokens": 55, "n_pass": [106, 15, 12]}
{"time": "2021-02-25 01:33:54.438850", "score": "0.8111", "loss": "0.2851", "code": "@Oveted void onSizeChanged(i hldh) { d(ww, oldh);; }", "n_tokens": 52, "n_pass": [150, 19, 13]}
{"time": "2021-02-25 01:33:57.059612", "score": "0.8111", "loss": "0.2851", "code": "@Oted void onSizeChanged(i hldh) { d(ww, oldh);; }", "n_tokens": 50, "n_pass": [153, 20, 14]}
{"time": "2021-02-25 01:33:59.695757", "score": "0.79", "loss": "0.3624", "code": "@Od void onSizeChanged(i hldh) { d(ww, oldh);; }", "n_tokens": 48, "n_pass": [154, 21, 15]}
{"time": "2021-02-25 01:34:02.746338", "score": "0.3465", "loss": "2.3478", "code": "@Od id onSizeChanged(i hldh) { d(ww, oldh);; }", "n_tokens": 46, "n_pass": [156, 22, 16]}
{"time": "2021-02-25 01:34:08.529062", "score": "0.2155", "loss": "2.8896", "code": "@Od id onSizeChanged(i hh) { d(ww, oldh);; }", "n_tokens": 44, "n_pass": [167, 23, 17]}
{"time": "2021-02-25 01:34:22.640877", "score": "0.5996", "loss": "1.2277", "code": "@Od id onSizeChanged(i h) { d(ww, oldh);; }", "n_tokens": 43, "n_pass": [231, 26, 18]}
{"time": "2021-02-25 01:34:25.264581", "score": "0.5996", "loss": "1.2277", "code": "@Od id onSizeChanged(i h){ d(ww, oldh);; }", "n_tokens": 42, "n_pass": [232, 27, 19]}
{"time": "2021-02-25 01:34:27.882166", "score": "0.5996", "loss": "1.2277", "code": "@Od id onSizeChanged(i h){d(ww, oldh);; }", "n_tokens": 41, "n_pass": [234, 28, 20]}
{"time": "2021-02-25 01:34:30.514316", "score": "0.7296", "loss": "0.919", "code": "@Od id onSizeChanged(i h){d(w, oldh);; }", "n_tokens": 40, "n_pass": [237, 29, 21]}
{"time": "2021-02-25 01:34:33.132729", "score": "0.7296", "loss": "0.919", "code": "@Od id onSizeChanged(i h){d(w,oldh);; }", "n_tokens": 39, "n_pass": [240, 30, 22]}
{"time": "2021-02-25 01:34:46.343059", "score": "0.8276", "loss": "0.3608", "code": "@d id onSizeChanged(i h){d(w,oldh);; }", "n_tokens": 38, "n_pass": [249, 35, 23]}
{"time": "2021-02-25 01:34:49.766576", "score": "0.9204", "loss": "0.1071", "code": "@d d onSizeChanged(i h){d(w,oldh);; }", "n_tokens": 37, "n_pass": [252, 36, 24]}
{"time": "2021-02-25 01:35:13.593297", "score": "0.9204", "loss": "0.1071", "code": "@d d onSizeChanged(i h){d(w,oldh); }", "n_tokens": 36, "n_pass": [292, 42, 25]}
{"time": "2021-02-25 01:35:16.201470", "score": "0.9204", "loss": "0.1071", "code": "@d d onSizeChanged(i h){d(w,oldh);}", "n_tokens": 35, "n_pass": [293, 43, 26]}

Minimal simplified code:
@d d onSizeChanged(i h){d(w,oldh);}

