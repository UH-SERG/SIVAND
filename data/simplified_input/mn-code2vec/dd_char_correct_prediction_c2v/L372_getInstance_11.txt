
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/bcgit__bc-java/core/src/main/java/org/bouncycastle/asn1/DERUniversalString_getInstance.java
method_name = getInstance
method_body = public static DERUniversalString getInstance(ASN1TaggedObject obj, boolean explicit) { ASN1Primitive o = obj.getObject(); if (explicit || o instanceof DERUniversalString) { return getInstance(o); } else { return new DERUniversalString(((ASN1OctetString) o).getOctets()); } }
predict, score, loss = getInstance, 0.99994957447052, 6.925819616299123e-05

Trace of simplified code(s):
{"time": "2021-02-25 07:30:35.263539", "score": "0.9999", "loss": "0.0001", "code": "public static DERUniversalString getInstance(ASN1TaggedObject obj, boolean explicit) { ASN1Primitive o = obj.getObject(); if (explicit || o instanceof DERUniversalString) { return getInstance(o); } else { return new DERUniversalString(((ASN1OctetString) o).getOctets()); } }", "n_tokens": 274, "n_pass": [1, 1, 1]}
{"time": "2021-02-25 07:30:38.361810", "score": "0.9999", "loss": "0.0002", "code": "UniversalString getInstance(ASN1TaggedObject obj, boolean explicit) { ASN1Primitive o = obj.getObject(); if (explicit || o instanceof DERUniversalString) { return getInstance(o); } else { return new DERUniversalString(((ASN1OctetString) o).getOctets()); } }", "n_tokens": 257, "n_pass": [44, 2, 2]}
{"time": "2021-02-25 07:30:41.003019", "score": "0.9834", "loss": "0.0218", "code": "UniversalString getInstance(ASN1Taoolean explicit) { ASN1Primitive o = obj.getObject(); if (explicit || o instanceof DERUniversalString) { return getInstance(o); } else { return new DERUniversalString(((ASN1OctetString) o).getOctets()); } }", "n_tokens": 240, "n_pass": [46, 3, 3]}
{"time": "2021-02-25 07:30:43.634888", "score": "0.9719", "loss": "0.0389", "code": "UniversalString getInstance(ASN1Taoolean explicit) { ASN1Primitive o = obj.getObject(); if (explicit |RUniversalString) { return getInstance(o); } else { return new DERUniversalString(((ASN1OctetString) o).getOctets()); } }", "n_tokens": 223, "n_pass": [51, 4, 4]}
{"time": "2021-02-25 07:30:49.384261", "score": "0.9847", "loss": "0.0221", "code": "UniversalString getInstance(ASN1Taoolean explicit) { ASN1Primitive o = obj.getObject(); if (expliversalString) { return getInstance(o); } else { return new DERUniversalString(((ASN1OctetString) o).getOctets()); } }", "n_tokens": 214, "n_pass": [91, 6, 5]}
{"time": "2021-02-25 07:30:52.030408", "score": "0.9847", "loss": "0.0221", "code": "UniversalString getInstance(ASN1Taoolean explicit) { ASN1Primitive o = obj.getObject(); if (expliing) { return getInstance(o); } else { return new DERUniversalString(((ASN1OctetString) o).getOctets()); } }", "n_tokens": 205, "n_pass": [92, 7, 6]}
{"time": "2021-02-25 07:30:54.702347", "score": "0.9648", "loss": "0.0527", "code": "UniversalString getInstance(ASN1Taoolean explicit) { ASN1Primitive o = obj.getObject(); if (expliing) { renstance(o); } else { return new DERUniversalString(((ASN1OctetString) o).getOctets()); } }", "n_tokens": 196, "n_pass": [94, 8, 7]}
{"time": "2021-02-25 07:31:02.689446", "score": "0.9812", "loss": "0.0263", "code": "UniversalString getInstance(ASN1Taoolean explicit) { ASN1Primitive o = obj.getObject(); if (expliing) { renstance(o); } else { return new DERUniversalString(((Atring) o).getOctets()); } }", "n_tokens": 187, "n_pass": [101, 11, 8]}
{"time": "2021-02-25 07:31:05.367449", "score": "0.9839", "loss": "0.0238", "code": "lString getInstance(ASN1Taoolean explicit) { ASN1Primitive o = obj.getObject(); if (expliing) { renstance(o); } else { return new DERUniversalString(((Atring) o).getOctets()); } }", "n_tokens": 179, "n_pass": [105, 12, 9]}
{"time": "2021-02-25 07:31:08.836685", "score": "0.9935", "loss": "0.0102", "code": "lString getInstance(ASN1 explicit) { ASN1Primitive o = obj.getObject(); if (expliing) { renstance(o); } else { return new DERUniversalString(((Atring) o).getOctets()); } }", "n_tokens": 171, "n_pass": [109, 13, 10]}
{"time": "2021-02-25 07:31:11.463447", "score": "0.9919", "loss": "0.0102", "code": "lString getInstance(ASN1 explicit) { ASNve o = obj.getObject(); if (expliing) { renstance(o); } else { return new DERUniversalString(((Atring) o).getOctets()); } }", "n_tokens": 163, "n_pass": [112, 14, 11]}
{"time": "2021-02-25 07:31:14.125751", "score": "0.9951", "loss": "0.0059", "code": "lString getInstance(ASN1 explicit) { ASNbj.getObject(); if (expliing) { renstance(o); } else { return new DERUniversalString(((Atring) o).getOctets()); } }", "n_tokens": 155, "n_pass": [113, 15, 12]}
{"time": "2021-02-25 07:31:16.799045", "score": "0.9926", "loss": "0.0091", "code": "lString getInstance(ASN1 explicit) { ASNject(); if (expliing) { renstance(o); } else { return new DERUniversalString(((Atring) o).getOctets()); } }", "n_tokens": 147, "n_pass": [114, 16, 13]}
{"time": "2021-02-25 07:31:25.538237", "score": "0.9939", "loss": "0.0072", "code": "lString getInstance(ASN1 explicit) { ASN(); if (expliing) { renstance(o); } else { return new DERUniversalString(((Atring) o).getOctets()); } }", "n_tokens": 143, "n_pass": [166, 19, 14]}
{"time": "2021-02-25 07:31:28.186575", "score": "0.9939", "loss": "0.0072", "code": "lString getInstance(ASN1 explicit) { ASN(); if (iing) { renstance(o); } else { return new DERUniversalString(((Atring) o).getOctets()); } }", "n_tokens": 139, "n_pass": [168, 20, 15]}
{"time": "2021-02-25 07:31:30.807252", "score": "0.9939", "loss": "0.0072", "code": "lString getInstance(ASN1 explicit) { ASN(); if (iing) { tance(o); } else { return new DERUniversalString(((Atring) o).getOctets()); } }", "n_tokens": 135, "n_pass": [171, 21, 16]}
{"time": "2021-02-25 07:31:33.435977", "score": "0.9941", "loss": "0.0071", "code": "lString getInstance(ASN1 explicit) { ASN(); if (iing) { e(o); } else { return new DERUniversalString(((Atring) o).getOctets()); } }", "n_tokens": 131, "n_pass": [172, 22, 17]}
{"time": "2021-02-25 07:31:36.059447", "score": "0.9936", "loss": "0.0076", "code": "lString getInstance(ASN1 explicit) { ASN(); if (iing) { ; } else { return new DERUniversalString(((Atring) o).getOctets()); } }", "n_tokens": 127, "n_pass": [173, 23, 18]}
{"time": "2021-02-25 07:31:38.766812", "score": "0.5861", "loss": "1.3302", "code": "lString getInstance(ASN1 explicit) { ASN(); if (iing) { ; }  { return new DERUniversalString(((Atring) o).getOctets()); } }", "n_tokens": 123, "n_pass": [175, 24, 19]}
{"time": "2021-02-25 07:31:49.388299", "score": "0.6106", "loss": "1.1631", "code": "lString getInstance(ASN1 explicit) { ASN(); if (iing) { ; }  { return new DERUniversalString(((Atring) o).gets()); } }", "n_tokens": 118, "n_pass": [186, 28, 20]}
{"time": "2021-02-25 07:31:52.011466", "score": "0.8679", "loss": "0.2404", "code": "ing getInstance(ASN1 explicit) { ASN(); if (iing) { ; }  { return new DERUniversalString(((Atring) o).gets()); } }", "n_tokens": 114, "n_pass": [189, 29, 21]}
{"time": "2021-02-25 07:31:58.492330", "score": "0.678", "loss": "0.617", "code": "ing getInstance(ASN1 explicit) { ASN(); if (iing) { ; }  { return newniversalString(((Atring) o).gets()); } }", "n_tokens": 109, "n_pass": [207, 31, 22]}
{"time": "2021-02-25 07:32:01.121926", "score": "0.678", "loss": "0.617", "code": "ing getInstance(ASN1 explicit) { ASN(); if (iing) { ; }  { return newsalString(((Atring) o).gets()); } }", "n_tokens": 104, "n_pass": [208, 32, 23]}
{"time": "2021-02-25 07:32:03.744030", "score": "0.678", "loss": "0.617", "code": "ing getInstance(ASN1 explicit) { ASN(); if (iing) { ; }  { return newring(((Atring) o).gets()); } }", "n_tokens": 99, "n_pass": [209, 33, 24]}
{"time": "2021-02-25 07:32:10.220404", "score": "0.6935", "loss": "0.6457", "code": "ing getInstance(ASN1 explicit) { ASN(); if (iing) { ; }  { returring(((Atring) o).gets()); } }", "n_tokens": 94, "n_pass": [232, 35, 25]}
{"time": "2021-02-25 07:32:16.640815", "score": "0.6935", "loss": "0.6457", "code": "ing getInstance(ASN1 explicit) { ASN(); if (iing) { ; }  { rring(((Atring) o).gets()); } }", "n_tokens": 90, "n_pass": [254, 37, 26]}
{"time": "2021-02-25 07:32:23.834744", "score": "0.2523", "loss": "1.9845", "code": "ing getInstance(ASN1 explicit) { ASN(); if (iing) { ; }  { rng(((Atring) o).gets()); } }", "n_tokens": 88, "n_pass": [318, 39, 27]}
{"time": "2021-02-25 07:32:26.465449", "score": "0.6731", "loss": "0.6787", "code": "ing getInstance(ASN1 explicit) { ASN(); if (iing) { ; }  { r(((Atring) o).gets()); } }", "n_tokens": 86, "n_pass": [319, 40, 28]}
{"time": "2021-02-25 07:32:29.081623", "score": "0.6731", "loss": "0.6787", "code": "ing getInstance(ASN1 explicit) { ASN(); if (iing) { ; }  { r(((Aing) o).gets()); } }", "n_tokens": 84, "n_pass": [322, 41, 29]}
{"time": "2021-02-25 07:32:31.695805", "score": "0.6713", "loss": "0.6882", "code": "ing getInstance(ASN1 explicit) { ASN(); if (iing) { ; }  { r(((Ag) o).gets()); } }", "n_tokens": 82, "n_pass": [323, 42, 30]}
{"time": "2021-02-25 07:32:34.312491", "score": "0.589", "loss": "0.7236", "code": "ing getInstance(ASN1 explicit) { ASN(); if (iing) { ; }  { r(((Ag) o).s()); } }", "n_tokens": 79, "n_pass": [326, 43, 31]}
{"time": "2021-02-25 07:32:36.927807", "score": "0.7786", "loss": "0.6516", "code": "g getInstance(ASN1 explicit) { ASN(); if (iing) { ; }  { r(((Ag) o).s()); } }", "n_tokens": 77, "n_pass": [330, 44, 32]}
{"time": "2021-02-25 07:32:47.145152", "score": "0.8951", "loss": "0.4196", "code": "g getInstance(ASN1 elicit) { ASN(); if (iing) { ; }  { r(((Ag) o).s()); } }", "n_tokens": 75, "n_pass": [341, 47, 33]}
{"time": "2021-02-25 07:32:49.755952", "score": "0.8951", "loss": "0.4196", "code": "g getInstance(ASN1 ecit) { ASN(); if (iing) { ; }  { r(((Ag) o).s()); } }", "n_tokens": 73, "n_pass": [342, 48, 34]}
{"time": "2021-02-25 07:32:52.417546", "score": "0.8355", "loss": "0.6492", "code": "g getInstance(ASN1 et) { ASN(); if (iing) { ; }  { r(((Ag) o).s()); } }", "n_tokens": 71, "n_pass": [343, 49, 35]}
{"time": "2021-02-25 07:32:55.024086", "score": "0.8628", "loss": "0.5765", "code": "g getInstance(ASN1 et) {SN(); if (iing) { ; }  { r(((Ag) o).s()); } }", "n_tokens": 69, "n_pass": [346, 50, 36]}
{"time": "2021-02-25 07:32:57.624886", "score": "0.8675", "loss": "0.553", "code": "g getInstance(ASN1 et) {SN; if (iing) { ; }  { r(((Ag) o).s()); } }", "n_tokens": 67, "n_pass": [348, 51, 37]}
{"time": "2021-02-25 07:33:00.271983", "score": "0.8046", "loss": "0.6696", "code": "g getInstance(ASN1 et) {SN; if (ng) { ; }  { r(((Ag) o).s()); } }", "n_tokens": 65, "n_pass": [352, 52, 38]}
{"time": "2021-02-25 07:33:02.881618", "score": "0.8046", "loss": "0.6696", "code": "g getInstance(ASN1 et) {SN; if (ng) { }  { r(((Ag) o).s()); } }", "n_tokens": 63, "n_pass": [356, 53, 39]}
{"time": "2021-02-25 07:33:05.502799", "score": "0.9245", "loss": "0.2447", "code": "g getInstance(ASN1 et) {SN; if (ng) { }  {(((Ag) o).s()); } }", "n_tokens": 61, "n_pass": [359, 54, 40]}
{"time": "2021-02-25 07:33:15.697494", "score": "0.9291", "loss": "0.2285", "code": "g getInstance(ASN1 et) {; if (ng) { }  {(((Ag) o).s()); } }", "n_tokens": 59, "n_pass": [379, 57, 41]}
{"time": "2021-02-25 07:33:18.340995", "score": "0.9291", "loss": "0.2285", "code": "g getInstance(ASN1 et) {if (ng) { }  {(((Ag) o).s()); } }", "n_tokens": 57, "n_pass": [380, 58, 42]}
{"time": "2021-02-25 07:33:31.828566", "score": "0.9291", "loss": "0.2285", "code": "g getInstance(ASN1 et) {if(ng) { }  {(((Ag) o).s()); } }", "n_tokens": 56, "n_pass": [461, 61, 43]}
{"time": "2021-02-25 07:33:34.437873", "score": "0.9325", "loss": "0.2002", "code": "g getInstance(ASN1 et) {if(g) { }  {(((Ag) o).s()); } }", "n_tokens": 55, "n_pass": [462, 62, 44]}
{"time": "2021-02-25 07:33:37.080737", "score": "0.9325", "loss": "0.2002", "code": "g getInstance(ASN1 et) {if(g){ }  {(((Ag) o).s()); } }", "n_tokens": 54, "n_pass": [465, 63, 45]}
{"time": "2021-02-25 07:33:39.701319", "score": "0.9325", "loss": "0.2002", "code": "g getInstance(ASN1 et) {if(g){}  {(((Ag) o).s()); } }", "n_tokens": 53, "n_pass": [467, 64, 46]}
{"time": "2021-02-25 07:33:42.312036", "score": "0.9325", "loss": "0.2002", "code": "g getInstance(ASN1 et) {if(g){} {(((Ag) o).s()); } }", "n_tokens": 52, "n_pass": [469, 65, 47]}
{"time": "2021-02-25 07:33:44.923696", "score": "0.9325", "loss": "0.2002", "code": "g getInstance(ASN1 et) {if(g){}{(((Ag) o).s()); } }", "n_tokens": 51, "n_pass": [470, 66, 48]}
{"time": "2021-02-25 07:33:47.530904", "score": "0.9279", "loss": "0.2102", "code": "g getInstance(ASN1 et) {if(g){}{(((g) o).s()); } }", "n_tokens": 50, "n_pass": [475, 67, 49]}
{"time": "2021-02-25 07:33:50.157404", "score": "0.9279", "loss": "0.2102", "code": "g getInstance(ASN1 et) {if(g){}{(((g)o).s()); } }", "n_tokens": 49, "n_pass": [478, 68, 50]}
{"time": "2021-02-25 07:33:52.775729", "score": "0.9361", "loss": "0.1873", "code": "g getInstance(ASN1 et) {if(g){}{(((g)).s()); } }", "n_tokens": 48, "n_pass": [479, 69, 51]}
{"time": "2021-02-25 07:33:55.396907", "score": "0.9361", "loss": "0.1873", "code": "g getInstance(ASN1 et) {if(g){}{(((g)).s); } }", "n_tokens": 46, "n_pass": [482, 70, 52]}
{"time": "2021-02-25 07:34:10.927171", "score": "0.9361", "loss": "0.1873", "code": "g getInstance(ASN et) {if(g){}{(((g)).s); } }", "n_tokens": 45, "n_pass": [503, 74, 53]}
{"time": "2021-02-25 07:34:13.551859", "score": "0.9372", "loss": "0.1302", "code": "g getInstance(ASN t) {if(g){}{(((g)).s); } }", "n_tokens": 44, "n_pass": [505, 75, 54]}
{"time": "2021-02-25 07:34:16.156633", "score": "0.9372", "loss": "0.1302", "code": "g getInstance(ASN t){if(g){}{(((g)).s); } }", "n_tokens": 43, "n_pass": [508, 76, 55]}
{"time": "2021-02-25 07:34:18.768284", "score": "0.9313", "loss": "0.1413", "code": "g getInstance(ASN t){if(g){}{(((g))); } }", "n_tokens": 41, "n_pass": [524, 77, 56]}
{"time": "2021-02-25 07:34:35.332805", "score": "0.9313", "loss": "0.1413", "code": "g getInstance(ASN t){if(g){}{(((g)));} }", "n_tokens": 40, "n_pass": [569, 81, 57]}
{"time": "2021-02-25 07:34:37.936909", "score": "0.9313", "loss": "0.1413", "code": "g getInstance(ASN t){if(g){}{(((g)));}}", "n_tokens": 39, "n_pass": [570, 82, 58]}

Minimal simplified code:
g getInstance(ASN t){if(g){}{(((g)));}}

