
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/bcgit__bc-java/core/src/main/java/org/bouncycastle/util/io/TeeInputStream_read.java
method_name = read
method_body = public int read() throws IOException { int i = input.read(); if (i >= 0) { output.write(i); } return i; }
predict, score, loss = read, 0.963586688041687, 0.045477546751499176

Trace of simplified code(s):
{"time": "2021-02-22 23:37:47.033902", "score": "0.9636", "loss": "0.0455", "code": "public int read() throws IOException { int i = input.read(); if (i >= 0) { output.write(i); } return i; }", "n_tokens": 105, "n_pass": [1, 1, 1]}
{"time": "2021-02-22 23:37:50.056972", "score": "0.9636", "loss": "0.0455", "code": " int read() throws IOException { int i = input.read(); if (i >= 0) { output.write(i); } return i; }", "n_tokens": 99, "n_pass": [44, 2, 2]}
{"time": "2021-02-22 23:37:55.678431", "score": "0.6432", "loss": "0.4915", "code": " int read() throws IOException { intput.read(); if (i >= 0) { output.write(i); } return i; }", "n_tokens": 92, "n_pass": [51, 4, 3]}
{"time": "2021-02-22 23:38:00.818694", "score": "0.915", "loss": "0.1017", "code": " int read() throws IOException { intput.read(); if (i >= 0) { ouite(i); } return i; }", "n_tokens": 85, "n_pass": [56, 6, 4]}
{"time": "2021-02-22 23:38:08.965313", "score": "0.9106", "loss": "0.1068", "code": " int read() throws IOException { intput.read(); if (i >= 0) {te(i); } return i; }", "n_tokens": 81, "n_pass": [96, 9, 5]}
{"time": "2021-02-22 23:38:11.550231", "score": "0.9724", "loss": "0.055", "code": " int read() throws IOException { intput.read(); if (i >= 0) {te(i); }urn i; }", "n_tokens": 77, "n_pass": [99, 10, 6]}
{"time": "2021-02-22 23:38:14.224124", "score": "0.9789", "loss": "0.0316", "code": " int read() throws IOException { intput.read(); if (i >= 0) {te(i); }i; }", "n_tokens": 73, "n_pass": [100, 11, 7]}
{"time": "2021-02-22 23:38:16.809105", "score": "0.9003", "loss": "0.144", "code": "t read() throws IOException { intput.read(); if (i >= 0) {te(i); }i; }", "n_tokens": 70, "n_pass": [102, 12, 8]}
{"time": "2021-02-22 23:38:20.141290", "score": "0.8929", "loss": "0.2414", "code": "t read() throws IOeption { intput.read(); if (i >= 0) {te(i); }i; }", "n_tokens": 67, "n_pass": [109, 13, 9]}
{"time": "2021-02-22 23:38:22.742020", "score": "0.8929", "loss": "0.2414", "code": "t read() throws IOion { intput.read(); if (i >= 0) {te(i); }i; }", "n_tokens": 64, "n_pass": [110, 14, 10]}
{"time": "2021-02-22 23:38:25.346184", "score": "0.2416", "loss": "1.983", "code": "t read() throws IO { intput.read(); if (i >= 0) {te(i); }i; }", "n_tokens": 61, "n_pass": [111, 15, 11]}
{"time": "2021-02-22 23:38:27.925141", "score": "0.3577", "loss": "1.5738", "code": "t read() throws IO { put.read(); if (i >= 0) {te(i); }i; }", "n_tokens": 58, "n_pass": [113, 16, 12]}
{"time": "2021-02-22 23:38:34.562678", "score": "0.4468", "loss": "1.1788", "code": "t read() throws IO {ut.read(); if (i >= 0) {te(i); }i; }", "n_tokens": 56, "n_pass": [171, 18, 13]}
{"time": "2021-02-22 23:38:47.547684", "score": "0.5391", "loss": "0.927", "code": "t read() throws IO {ut.read(); if (i >= 0) {(i); }i; }", "n_tokens": 54, "n_pass": [184, 23, 14]}
{"time": "2021-02-22 23:38:50.141593", "score": "0.517", "loss": "0.9774", "code": "t read() throws IO {ut.read(); if (i >= 0) {(i); } }", "n_tokens": 52, "n_pass": [188, 24, 15]}
{"time": "2021-02-22 23:38:55.108515", "score": "0.517", "loss": "0.9774", "code": "t read()throws IO {ut.read(); if (i >= 0) {(i); } }", "n_tokens": 51, "n_pass": [198, 25, 16]}
{"time": "2021-02-22 23:39:14.080154", "score": "0.7621", "loss": "0.3222", "code": "t read()throws O {ut.read(); if (i >= 0) {(i); } }", "n_tokens": 50, "n_pass": [271, 30, 17]}
{"time": "2021-02-22 23:39:16.676155", "score": "0.7621", "loss": "0.3222", "code": "t read()throws O{ut.read(); if (i >= 0) {(i); } }", "n_tokens": 49, "n_pass": [272, 31, 18]}
{"time": "2021-02-22 23:39:19.695687", "score": "0.6313", "loss": "0.5546", "code": "t read()throws O{t.read(); if (i >= 0) {(i); } }", "n_tokens": 48, "n_pass": [274, 32, 19]}
{"time": "2021-02-22 23:39:35.277838", "score": "0.6313", "loss": "0.5546", "code": "t read()throws O{t.read();if (i >= 0) {(i); } }", "n_tokens": 47, "n_pass": [284, 38, 20]}
{"time": "2021-02-22 23:39:37.866565", "score": "0.6313", "loss": "0.5546", "code": "t read()throws O{t.read();if(i >= 0) {(i); } }", "n_tokens": 46, "n_pass": [287, 39, 21]}
{"time": "2021-02-22 23:39:40.464200", "score": "0.6313", "loss": "0.5546", "code": "t read()throws O{t.read();if(i>= 0) {(i); } }", "n_tokens": 45, "n_pass": [290, 40, 22]}
{"time": "2021-02-22 23:39:43.035301", "score": "0.5174", "loss": "0.8905", "code": "t read()throws O{t.read();if(i= 0) {(i); } }", "n_tokens": 44, "n_pass": [291, 41, 23]}
{"time": "2021-02-22 23:39:45.625615", "score": "0.5174", "loss": "0.8905", "code": "t read()throws O{t.read();if(i=0) {(i); } }", "n_tokens": 43, "n_pass": [293, 42, 24]}
{"time": "2021-02-22 23:39:48.192627", "score": "0.5174", "loss": "0.8905", "code": "t read()throws O{t.read();if(i=0){(i); } }", "n_tokens": 42, "n_pass": [296, 43, 25]}
{"time": "2021-02-22 23:39:50.750880", "score": "0.5174", "loss": "0.8905", "code": "t read()throws O{t.read();if(i=0){(i);} }", "n_tokens": 41, "n_pass": [302, 44, 26]}
{"time": "2021-02-22 23:39:53.342755", "score": "0.5174", "loss": "0.8905", "code": "t read()throws O{t.read();if(i=0){(i);}}", "n_tokens": 40, "n_pass": [304, 45, 27]}
{"time": "2021-02-22 23:40:11.156802", "score": "0.3758", "loss": "1.1955", "code": "t read()throws O{t.read();if(i0){(i);}}", "n_tokens": 39, "n_pass": [336, 51, 28]}
{"time": "2021-02-22 23:40:13.771522", "score": "0.3758", "loss": "1.1955", "code": "t read()throws O{t.read();if(i){(i);}}", "n_tokens": 38, "n_pass": [337, 52, 29]}

Minimal simplified code:
t read()throws O{t.read();if(i){(i);}}

