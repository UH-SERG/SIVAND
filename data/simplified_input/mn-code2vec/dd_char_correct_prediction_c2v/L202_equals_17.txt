
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/OpenRock__OpenAM/openam-sts/openam-common-sts/src/main/java/org/forgerock/openam/sts/service/invocation/TokenGenerationServiceInvocationState_equals.java
method_name = equals
method_body = @Override public boolean equals(Object other) { if (other == this) { return true; } if (other instanceof TokenGenerationServiceInvocationState) { TokenGenerationServiceInvocationState oc = (TokenGenerationServiceInvocationState) other; return ssoTokenString.equals(oc.getSsoTokenString()) && tokenType.equals(oc.getTokenType()) && stsInstanceId.equals(oc.getStsInstanceId()) && stsType.equals(oc.getStsType()) && Objects.equal(saml2TokenGenerationState, oc.getSaml2TokenGenerationState()) && Objects.equal(openIdConnectTokenGenerationState, oc.getOpenIdConnectTokenGenerationState()) && realm.equals(oc.getRealm()); } return false; }
predict, score, loss = equals, 0.9999067783355713, 0.00013720047718379647

Trace of simplified code(s):
{"time": "2021-02-22 19:24:05.092097", "score": "0.9993", "loss": "0.0008", "code": "@Override public boolean equals(Object other) { if (other == this) { return true; } if (other instanceof TokenGenerationServiceInvocationState) { TokenGenerationServiceInvocationState oc = (TokenGenerationServiceInvocationState) other; return ssoTokenString.equals(oc.getSsoTokenString()) && tokenType.equals(oc.getTokenType()) && stsInstanceId.equals(oc.getStsInstanceId()) && stsType.equals(oc.getStsType()) && Objects.equal(saml2TokenGenerationState, oc.getSaml2TokenGenerationState()) && Objects.equal(openIdConnectTokenGenerationState, oc.getOpenIdConnectTokenGenerationState()) && realm.equals(oc.getRealm()); } return false; }", "n_tokens": 633, "n_pass": [1, 1, 1]}
{"time": "2021-02-22 19:24:07.797514", "score": "0.9999", "loss": "0.0002", "code": "@Override public boolean equals(Object other) { if (other == this) { return true; } if (other instanceof TokenGenerationServiceInvocationState) { TokenGenerationServiceInvocationState oc = (TokenGenerationServiceInvocationState) other; return ssoTokenString.equals(oc.getSsoTokenString()) && tokenType.equals(oc.getTrationState()) && Objects.equal(openIdConnectTokenGenerationState, oc.getOpenIdConnectTokenGenerationState()) && realm.equals(oc.getRealm()); } return false; }", "n_tokens": 475, "n_pass": [10, 2, 2]}
{"time": "2021-02-22 19:24:10.433858", "score": "0.9999", "loss": "0.0001", "code": "@Override public boolean equals(Object other) { if (other == this) { return true; } if (other instanceof TokenGenerationServiceInvocationState) { TokenGenerationServiceInvocationState oc = (TokenGenerationServiceInvocationState) other; return ssoTokenString.equals(oc.getSsoTokenString()) && tokenType.equals(oc.getTConnectTokenGenerationState()) && realm.equals(oc.getRealm()); } return false; }", "n_tokens": 396, "n_pass": [19, 3, 3]}
{"time": "2021-02-22 19:24:13.172539", "score": "0.9999", "loss": "0.0001", "code": "@Override public boolean equals(Object other) { if (other == this) { return true; } if (other instanceof TokenGenerationServiceInvocationState) { TokenGenerationServiceInvocationState oc = (TokenGenerationServiceInvocationState) other; return ssoTokenString.equals(oc.getSsoToConnectTokenGenerationState()) && realm.equals(oc.getRealm()); } return false; }", "n_tokens": 356, "n_pass": [43, 4, 4]}
{"time": "2021-02-22 19:24:15.826084", "score": "0.9999", "loss": "0.0001", "code": "@Override public boolean equals(Object other) { if (other == this) { return true; } if (other instanceof TokenGenerationServiceInvocationState) { TokenGenerationServiceInvocationState oc = (TokenGenerationServiceInvocationState) other; return ssoTokenString.equals(oc.getSsoToonState()) && realm.equals(oc.getRealm()); } return false; }", "n_tokens": 336, "n_pass": [71, 5, 5]}
{"time": "2021-02-22 19:24:18.452245", "score": "0.9997", "loss": "0.0005", "code": "olean equals(Object other) { if (other == this) { return true; } if (other instanceof TokenGenerationServiceInvocationState) { TokenGenerationServiceInvocationState oc = (TokenGenerationServiceInvocationState) other; return ssoTokenString.equals(oc.getSsoToonState()) && realm.equals(oc.getRealm()); } return false; }", "n_tokens": 317, "n_pass": [74, 6, 6]}
{"time": "2021-02-22 19:24:21.106317", "score": "0.9997", "loss": "0.0005", "code": "olean equals(Object other) { if (other == this) { return true; } if (other instanceof TokenGeneranState) { TokenGenerationServiceInvocationState oc = (TokenGenerationServiceInvocationState) other; return ssoTokenString.equals(oc.getSsoToonState()) && realm.equals(oc.getRealm()); } return false; }", "n_tokens": 297, "n_pass": [80, 7, 7]}
{"time": "2021-02-22 19:24:23.730972", "score": "0.9997", "loss": "0.0005", "code": "olean equals(Object other) { if (other == this) { return true; } if (other instanceof TokenGeneranState) { TokenGeneronState oc = (TokenGenerationServiceInvocationState) other; return ssoTokenString.equals(oc.getSsoToonState()) && realm.equals(oc.getRealm()); } return false; }", "n_tokens": 277, "n_pass": [82, 8, 8]}
{"time": "2021-02-22 19:24:26.367004", "score": "0.9997", "loss": "0.0005", "code": "olean equals(Object other) { if (other == this) { return true; } if (other instanceof TokenGeneranState) { TokenGeneronState oc = (TokenGcationState) other; return ssoTokenString.equals(oc.getSsoToonState()) && realm.equals(oc.getRealm()); } return false; }", "n_tokens": 257, "n_pass": [84, 9, 9]}
{"time": "2021-02-22 19:24:29.396726", "score": "0.9997", "loss": "0.0005", "code": "olean equals(Object other) { if (other == this) { return true; } if (other instanceof TokenGeneranState) { TokenGeneronState oc = (TokenGe) other; return ssoTokenString.equals(oc.getSsoToonState()) && realm.equals(oc.getRealm()); } return false; }", "n_tokens": 247, "n_pass": [124, 10, 10]}
{"time": "2021-02-22 19:24:32.403228", "score": "0.9997", "loss": "0.0005", "code": "olean equals(Object other) { if (other == this) { return true; } if (other instanceof TokenGeneranState) { TokenGeneronState oc = (TokenGe) other; return ssog.equals(oc.getSsoToonState()) && realm.equals(oc.getRealm()); } return false; }", "n_tokens": 237, "n_pass": [126, 11, 11]}
{"time": "2021-02-22 19:24:35.039068", "score": "0.9996", "loss": "0.0006", "code": "olean equals(Object other) { if (other == this) { return true; } if (other instanceof TokenGeneranState) { TokenGeneronState oc = (TokenGe) other; return ssog.equals(oonState()) && realm.equals(oc.getRealm()); } return false; }", "n_tokens": 227, "n_pass": [128, 12, 12]}
{"time": "2021-02-22 19:24:38.063042", "score": "0.9996", "loss": "0.0006", "code": "olean equals(Object other) { if (other == this) { return true; } if (other instanceof TnState) { TokenGeneronState oc = (TokenGe) other; return ssog.equals(oonState()) && realm.equals(oc.getRealm()); } return false; }", "n_tokens": 217, "n_pass": [144, 13, 13]}
{"time": "2021-02-22 19:24:40.744160", "score": "0.9999", "loss": "0.0002", "code": "olean equals(Object other) { if (other == this) { return true; } if (other instanceof TnState) { onState oc = (TokenGe) other; return ssog.equals(oonState()) && realm.equals(oc.getRealm()); } return false; }", "n_tokens": 207, "n_pass": [146, 14, 14]}
{"time": "2021-02-22 19:24:44.176038", "score": "0.9994", "loss": "0.001", "code": "olean equals(Object other) { if (other == this) { return true; } if (other instanceof TnState) { te oc = (TokenGe) other; return ssog.equals(oonState()) && realm.equals(oc.getRealm()); } return false; }", "n_tokens": 202, "n_pass": [210, 15, 15]}
{"time": "2021-02-22 19:24:46.801019", "score": "0.9994", "loss": "0.001", "code": "olean equals(Object other) { if (other == this) { return true; } if (other instanceof TnState) { te oc = (Te) other; return ssog.equals(oonState()) && realm.equals(oc.getRealm()); } return false; }", "n_tokens": 197, "n_pass": [212, 16, 16]}
{"time": "2021-02-22 19:24:49.848489", "score": "0.999", "loss": "0.0021", "code": "olean equals(Object other) { if (other == this) { return true; } if (other instanceof TnState) { te oc = (Te) other; return ssoals(oonState()) && realm.equals(oc.getRealm()); } return false; }", "n_tokens": 192, "n_pass": [217, 17, 17]}
{"time": "2021-02-22 19:24:52.466489", "score": "0.998", "loss": "0.0045", "code": "olean equals(Object other) { if (other == this) { return true; } if (other instanceof TnState) { te oc = (Te) other; return ssoals(ote()) && realm.equals(oc.getRealm()); } return false; }", "n_tokens": 187, "n_pass": [219, 18, 18]}
{"time": "2021-02-22 19:24:55.106841", "score": "0.9958", "loss": "0.011", "code": "olean equals(Object other) { if (other == this) { return true; } if (other instanceof TnState) { te oc = (Te) other; return ssoals(ote()) && requals(oc.getRealm()); } return false; }", "n_tokens": 182, "n_pass": [222, 19, 19]}
{"time": "2021-02-22 19:24:57.715292", "score": "0.9959", "loss": "0.0109", "code": "olean equals(Object other) { if (other == this) { return true; } if (other instanceof TnState) { te oc = (Te) other; return ssoals(ote()) && rs(oc.getRealm()); } return false; }", "n_tokens": 177, "n_pass": [223, 20, 20]}
{"time": "2021-02-22 19:25:00.330647", "score": "0.9965", "loss": "0.0068", "code": "olean equals(Object other) { if (other == this) { return true; } if (other instanceof TnState) { te oc = (Te) other; return ssoals(ote()) && rs(oc.alm()); } return false; }", "n_tokens": 172, "n_pass": [225, 21, 21]}
{"time": "2021-02-22 19:25:02.944927", "score": "0.9889", "loss": "0.0317", "code": "olean equals(Object other) { if (other == this) { return true; } if (other instanceof TnState) { te oc = (Te) other; return ssoals(ote()) && rs(oc.alm()); } returse; }", "n_tokens": 167, "n_pass": [229, 22, 22]}
{"time": "2021-02-22 19:25:05.557378", "score": "0.9835", "loss": "0.0587", "code": "n equals(Object other) { if (other == this) { return true; } if (other instanceof TnState) { te oc = (Te) other; return ssoals(ote()) && rs(oc.alm()); } returse; }", "n_tokens": 163, "n_pass": [231, 23, 23]}
{"time": "2021-02-22 19:25:08.965865", "score": "0.271", "loss": "3.9501", "code": "n equals(Object other) { if (othethis) { return true; } if (other instanceof TnState) { te oc = (Te) other; return ssoals(ote()) && rs(oc.alm()); } returse; }", "n_tokens": 158, "n_pass": [239, 24, 24]}
{"time": "2021-02-22 19:25:11.602320", "score": "0.1455", "loss": "4.6397", "code": "n equals(Object other) { if (othethis) { retrue; } if (other instanceof TnState) { te oc = (Te) other; return ssoals(ote()) && rs(oc.alm()); } returse; }", "n_tokens": 153, "n_pass": [242, 25, 25]}
{"time": "2021-02-22 19:25:14.227697", "score": "0.137", "loss": "4.6701", "code": "n equals(Object other) { if (othethis) { retrue; } if (other instanceof Te) { te oc = (Te) other; return ssoals(ote()) && rs(oc.alm()); } returse; }", "n_tokens": 148, "n_pass": [249, 26, 26]}
{"time": "2021-02-22 19:25:17.269956", "score": "0.1349", "loss": "4.6776", "code": "n equals(Object other) { if (othethis) { retrue; } if (other instanceof Te) { te oc = (Te) other; return ssoals(ote()) && rs(oc.alm()); } se; }", "n_tokens": 143, "n_pass": [263, 27, 27]}
{"time": "2021-02-22 19:25:21.104218", "score": "0.1342", "loss": "4.694", "code": "n equals(Object other) { if (othethis) { retrue; } if (other instanceof Te) { te oc = (Te) other; return ssoals(ote()) && rs(oc.alm()); }; }", "n_tokens": 140, "n_pass": [351, 28, 28]}
{"time": "2021-02-22 19:25:35.890841", "score": "0.1342", "loss": "4.694", "code": "n equals(Object other) { if (oethis) { retrue; } if (other instanceof Te) { te oc = (Te) other; return ssoals(ote()) && rs(oc.alm()); }; }", "n_tokens": 138, "n_pass": [368, 33, 29]}
{"time": "2021-02-22 19:25:38.543069", "score": "0.1342", "loss": "4.694", "code": "n equals(Object other) { if (ohis) { retrue; } if (other instanceof Te) { te oc = (Te) other; return ssoals(ote()) && rs(oc.alm()); }; }", "n_tokens": 136, "n_pass": [369, 34, 30]}
{"time": "2021-02-22 19:25:41.171628", "score": "0.1526", "loss": "4.6708", "code": "n equals(Object other) { if (os) { retrue; } if (other instanceof Te) { te oc = (Te) other; return ssoals(ote()) && rs(oc.alm()); }; }", "n_tokens": 134, "n_pass": [370, 35, 31]}
{"time": "2021-02-22 19:25:43.802406", "score": "0.1526", "loss": "4.6708", "code": "n equals(Object other) { if (os) {etrue; } if (other instanceof Te) { te oc = (Te) other; return ssoals(ote()) && rs(oc.alm()); }; }", "n_tokens": 132, "n_pass": [373, 36, 32]}
{"time": "2021-02-22 19:25:46.442084", "score": "0.202", "loss": "4.3431", "code": "n equals(Object other) { if (os) {rue; } if (other instanceof Te) { te oc = (Te) other; return ssoals(ote()) && rs(oc.alm()); }; }", "n_tokens": 130, "n_pass": [374, 37, 33]}
{"time": "2021-02-22 19:25:49.081833", "score": "0.1497", "loss": "4.6796", "code": "n equals(Object other) { if (os) {e; } if (other instanceof Te) { te oc = (Te) other; return ssoals(ote()) && rs(oc.alm()); }; }", "n_tokens": 128, "n_pass": [375, 38, 34]}
{"time": "2021-02-22 19:25:51.707367", "score": "0.1488", "loss": "4.7001", "code": "n equals(Object other) { if (os) { } if (other instanceof Te) { te oc = (Te) other; return ssoals(ote()) && rs(oc.alm()); }; }", "n_tokens": 126, "n_pass": [376, 39, 35]}
{"time": "2021-02-22 19:25:57.016733", "score": "0.6621", "loss": "2.4087", "code": "n equals(Object other) { if (os) { } if (oth instanceof Te) { te oc = (Te) other; return ssoals(ote()) && rs(oc.alm()); }; }", "n_tokens": 124, "n_pass": [382, 41, 36]}
{"time": "2021-02-22 19:25:59.630746", "score": "0.6841", "loss": "2.1483", "code": "n equals(Object other) { if (os) { } if (oth instanceof Te) { oc = (Te) other; return ssoals(ote()) && rs(oc.alm()); }; }", "n_tokens": 121, "n_pass": [389, 42, 37]}
{"time": "2021-02-22 19:26:02.250202", "score": "0.6154", "loss": "2.509", "code": "n equals(Object other) { if (os) { } if (oth instanceof Te) { oc = (Te) or; return ssoals(ote()) && rs(oc.alm()); }; }", "n_tokens": 118, "n_pass": [394, 43, 38]}
{"time": "2021-02-22 19:26:05.246962", "score": "0.3864", "loss": "3.0881", "code": "n equals(Object other) { if (os) { } if (oth instanceof Te) { oc = (Te) or; return sss(ote()) && rs(oc.alm()); }; }", "n_tokens": 115, "n_pass": [399, 44, 39]}
{"time": "2021-02-22 19:26:07.885490", "score": "0.4766", "loss": "2.6783", "code": "n equals(Object other) { if (os) { } if (oth instanceof Te) { oc = (Te) or; return sss(ote()) && rs(alm()); }; }", "n_tokens": 112, "n_pass": [405, 45, 40]}
{"time": "2021-02-22 19:26:12.084880", "score": "0.1931", "loss": "4.2676", "code": "n equals(Oect other) { if (os) { } if (oth instanceof Te) { oc = (Te) or; return sss(ote()) && rs(alm()); }; }", "n_tokens": 110, "n_pass": [415, 46, 41]}
{"time": "2021-02-22 19:26:38.449918", "score": "0.2136", "loss": "4.2069", "code": "n equals(Oec other) { if (os) { } if (oth instanceof Te) { oc = (Te) or; return sss(ote()) && rs(alm()); }; }", "n_tokens": 109, "n_pass": [550, 53, 42]}
{"time": "2021-02-22 19:26:43.726411", "score": "0.117", "loss": "5.7183", "code": "n equals(Oec oher) { if (os) { } if (oth instanceof Te) { oc = (Te) or; return sss(ote()) && rs(alm()); }; }", "n_tokens": 108, "n_pass": [552, 55, 43]}
{"time": "2021-02-22 19:26:46.356921", "score": "0.117", "loss": "5.7183", "code": "n equals(Oec oer) { if (os) { } if (oth instanceof Te) { oc = (Te) or; return sss(ote()) && rs(alm()); }; }", "n_tokens": 107, "n_pass": [553, 56, 44]}
{"time": "2021-02-22 19:26:51.611857", "score": "0.132", "loss": "5.5545", "code": "n equals(Oec oe) { if (os) { } if (oth instanceof Te) { oc = (Te) or; return sss(ote()) && rs(alm()); }; }", "n_tokens": 106, "n_pass": [555, 58, 45]}
{"time": "2021-02-22 19:26:54.227427", "score": "0.132", "loss": "5.5545", "code": "n equals(Oec oe){ if (os) { } if (oth instanceof Te) { oc = (Te) or; return sss(ote()) && rs(alm()); }; }", "n_tokens": 105, "n_pass": [557, 59, 46]}
{"time": "2021-02-22 19:26:56.867561", "score": "0.132", "loss": "5.5545", "code": "n equals(Oec oe){if (os) { } if (oth instanceof Te) { oc = (Te) or; return sss(ote()) && rs(alm()); }; }", "n_tokens": 104, "n_pass": [559, 60, 47]}
{"time": "2021-02-22 19:26:59.499241", "score": "0.132", "loss": "5.5545", "code": "n equals(Oec oe){if(os) { } if (oth instanceof Te) { oc = (Te) or; return sss(ote()) && rs(alm()); }; }", "n_tokens": 103, "n_pass": [562, 61, 48]}
{"time": "2021-02-22 19:27:04.731164", "score": "0.1437", "loss": "5.1968", "code": "n equals(Oec oe){if(o) { } if (oth instanceof Te) { oc = (Te) or; return sss(ote()) && rs(alm()); }; }", "n_tokens": 102, "n_pass": [565, 63, 49]}
{"time": "2021-02-22 19:27:07.368548", "score": "0.1437", "loss": "5.1968", "code": "n equals(Oec oe){if(o){ } if (oth instanceof Te) { oc = (Te) or; return sss(ote()) && rs(alm()); }; }", "n_tokens": 101, "n_pass": [567, 64, 50]}
{"time": "2021-02-22 19:27:09.979177", "score": "0.1437", "loss": "5.1968", "code": "n equals(Oec oe){if(o){} if (oth instanceof Te) { oc = (Te) or; return sss(ote()) && rs(alm()); }; }", "n_tokens": 100, "n_pass": [569, 65, 51]}
{"time": "2021-02-22 19:27:12.593123", "score": "0.1437", "loss": "5.1968", "code": "n equals(Oec oe){if(o){}if (oth instanceof Te) { oc = (Te) or; return sss(ote()) && rs(alm()); }; }", "n_tokens": 99, "n_pass": [571, 66, 52]}
{"time": "2021-02-22 19:27:15.199685", "score": "0.1437", "loss": "5.1968", "code": "n equals(Oec oe){if(o){}if(oth instanceof Te) { oc = (Te) or; return sss(ote()) && rs(alm()); }; }", "n_tokens": 98, "n_pass": [574, 67, 53]}
{"time": "2021-02-22 19:27:30.887659", "score": "0.1437", "loss": "5.1968", "code": "n equals(Oec oe){if(o){}if(oth instanceof Te){ oc = (Te) or; return sss(ote()) && rs(alm()); }; }", "n_tokens": 97, "n_pass": [594, 73, 54]}
{"time": "2021-02-22 19:27:33.510201", "score": "0.1437", "loss": "5.1968", "code": "n equals(Oec oe){if(o){}if(oth instanceof Te){oc = (Te) or; return sss(ote()) && rs(alm()); }; }", "n_tokens": 96, "n_pass": [596, 74, 55]}
{"time": "2021-02-22 19:27:41.366450", "score": "0.1437", "loss": "5.1968", "code": "n equals(Oec oe){if(o){}if(oth instanceof Te){oc= (Te) or; return sss(ote()) && rs(alm()); }; }", "n_tokens": 95, "n_pass": [599, 77, 56]}
{"time": "2021-02-22 19:27:43.981922", "score": "0.1437", "loss": "5.1968", "code": "n equals(Oec oe){if(o){}if(oth instanceof Te){oc=(Te) or; return sss(ote()) && rs(alm()); }; }", "n_tokens": 94, "n_pass": [601, 78, 57]}
{"time": "2021-02-22 19:27:49.589153", "score": "0.1823", "loss": "4.2441", "code": "n equals(Oec oe){if(o){}if(oth instanceof Te){oc=(Te) or; return s(ote()) && rs(alm()); }; }", "n_tokens": 92, "n_pass": [611, 80, 58]}
{"time": "2021-02-22 19:27:57.507951", "score": "0.2572", "loss": "3.5261", "code": "n equals(Oec oe){if(o){}if(oth instanceof Te){oc=(Te) or; return s(ote()) &&s(alm()); }; }", "n_tokens": 90, "n_pass": [617, 83, 59]}
{"time": "2021-02-22 19:28:00.121948", "score": "0.1677", "loss": "3.8892", "code": "n equals(Oec oe){if(o){}if(oth instanceof Te){oc=(Te) or; return s(ote()) &&s(m()); }; }", "n_tokens": 88, "n_pass": [619, 84, 60]}
{"time": "2021-02-22 19:28:08.478251", "score": "0.3399", "loss": "1.9984", "code": "n equals(Oc oe){if(o){}if(oth instanceof Te){oc=(Te) or; return s(ote()) &&s(m()); }; }", "n_tokens": 87, "n_pass": [635, 86, 61]}
{"time": "2021-02-22 19:28:11.115830", "score": "0.4692", "loss": "1.4245", "code": "n equals(O oe){if(o){}if(oth instanceof Te){oc=(Te) or; return s(ote()) &&s(m()); }; }", "n_tokens": 86, "n_pass": [636, 87, 62]}
{"time": "2021-02-22 19:28:16.437142", "score": "0.6779", "loss": "0.8201", "code": "n equals(O o){if(o){}if(oth instanceof Te){oc=(Te) or; return s(ote()) &&s(m()); }; }", "n_tokens": 85, "n_pass": [639, 89, 63]}
{"time": "2021-02-22 19:28:26.939347", "score": "0.6172", "loss": "0.959", "code": "n equals(O o){if(o){}if(oth instanceof e){oc=(Te) or; return s(ote()) &&s(m()); }; }", "n_tokens": 84, "n_pass": [667, 93, 64]}
{"time": "2021-02-22 19:28:29.556803", "score": "0.5667", "loss": "1.0502", "code": "n equals(O o){if(o){}if(oth instanceof e){c=(Te) or; return s(ote()) &&s(m()); }; }", "n_tokens": 83, "n_pass": [671, 94, 65]}
{"time": "2021-02-22 19:28:32.167635", "score": "0.5243", "loss": "1.0288", "code": "n equals(O o){if(o){}if(oth instanceof e){c=(Te) ; return s(ote()) &&s(m()); }; }", "n_tokens": 81, "n_pass": [677, 95, 66]}
{"time": "2021-02-22 19:28:34.793039", "score": "0.7781", "loss": "0.5002", "code": "n equals(O o){if(o){}if(oth instanceof e){c=(Te) ; return(ote()) &&s(m()); }; }", "n_tokens": 79, "n_pass": [682, 96, 67]}
{"time": "2021-02-22 19:28:37.394631", "score": "0.8326", "loss": "0.2862", "code": "n equals(O o){if(o){}if(oth instanceof e){c=(Te) ; return(o()) &&s(m()); }; }", "n_tokens": 77, "n_pass": [684, 97, 68]}
{"time": "2021-02-22 19:28:39.999035", "score": "0.8327", "loss": "0.2875", "code": "n equals(O o){if(o){}if(oth instanceof e){c=(Te) ; return(o) &&s(m()); }; }", "n_tokens": 75, "n_pass": [685, 98, 69]}
{"time": "2021-02-22 19:28:56.169571", "score": "0.8544", "loss": "0.2798", "code": "n equals(O o){if(o){}if(oth instanceof e){c(Te) ; return(o) &&s(m()); }; }", "n_tokens": 74, "n_pass": [737, 103, 70]}
{"time": "2021-02-22 19:28:58.767515", "score": "0.9006", "loss": "0.1724", "code": "n equals(O o){if(o){}if(oth instanceof e){c() ; return(o) &&s(m()); }; }", "n_tokens": 72, "n_pass": [739, 104, 71]}
{"time": "2021-02-22 19:29:18.894212", "score": "0.9006", "loss": "0.1724", "code": "n equals(O o){if(o){}if(oth instanceof e){c() ; return(o)&&s(m()); }; }", "n_tokens": 71, "n_pass": [829, 109, 72]}
{"time": "2021-02-22 19:29:29.329379", "score": "0.9006", "loss": "0.1724", "code": "n equals(O o){if(o){}if(oth instanceof e){c() ; return(o)&&s(m());}; }", "n_tokens": 70, "n_pass": [839, 113, 73]}
{"time": "2021-02-22 19:29:31.912358", "score": "0.9006", "loss": "0.1724", "code": "n equals(O o){if(o){}if(oth instanceof e){c() ; return(o)&&s(m());} }", "n_tokens": 69, "n_pass": [841, 114, 74]}
{"time": "2021-02-22 19:29:34.500508", "score": "0.9006", "loss": "0.1724", "code": "n equals(O o){if(o){}if(oth instanceof e){c() ; return(o)&&s(m());}}", "n_tokens": 68, "n_pass": [842, 115, 75]}
{"time": "2021-02-22 19:29:48.005766", "score": "0.9006", "loss": "0.1724", "code": "n equals(O o){if(o){}if(oth instanceof e){c(); return(o)&&s(m());}}", "n_tokens": 67, "n_pass": [889, 119, 76]}
{"time": "2021-02-22 19:29:50.615382", "score": "0.9006", "loss": "0.1724", "code": "n equals(O o){if(o){}if(oth instanceof e){c();return(o)&&s(m());}}", "n_tokens": 66, "n_pass": [891, 120, 77]}

Minimal simplified code:
n equals(O o){if(o){}if(oth instanceof e){c();return(o)&&s(m());}}

