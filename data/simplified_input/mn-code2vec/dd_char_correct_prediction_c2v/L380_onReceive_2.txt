
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/qpython-android__qpython/qpysl4a/src/main/java/org/qpython/qsl4a/qsl4a/bluetooth/BluetoothDiscoveryHelper_onReceive.java
method_name = onReceive
method_body = @Override public void onReceive(Context context, Intent intent) { final String action = intent.getAction(); if (BluetoothDevice.ACTION_FOUND.equals(action)) { BluetoothDevice device = intent.getParcelableExtra(BluetoothDevice.EXTRA_DEVICE); if (device.getBondState() != BluetoothDevice.BOND_BONDED) { mListener.addDevice(device.getName(), device.getAddress()); } } else if (BluetoothAdapter.ACTION_DISCOVERY_FINISHED.equals(action)) { mListener.scanDone(); } }
predict, score, loss = onReceive, 0.9999752044677734, 3.71926071238704e-05

Trace of simplified code(s):
{"time": "2021-02-25 08:06:21.538009", "score": "1.0", "loss": "0.0001", "code": "@Override public void onReceive(Context context, Intent intent) { final String action = intent.getAction(); if (BluetoothDevice.ACTION_FOUND.equals(action)) { BluetoothDevice device = intent.getParcelableExtra(BluetoothDevice.EXTRA_DEVICE); if (device.getBondState() != BluetoothDevice.BOND_BONDED) { mListener.addDevice(device.getName(), device.getAddress()); } } else if (BluetoothAdapter.ACTION_DISCOVERY_FINISHED.equals(action)) { mListener.scanDone(); } }", "n_tokens": 460, "n_pass": [1, 1, 1]}
{"time": "2021-02-25 08:06:24.682771", "score": "1.0", "loss": "0.0", "code": "@Override public void onReceive(Context context, Intent intent) { final String action = intent.getAction(); if (equals(action)) { BluetoothDevice device = intent.getParcelableExtra(BluetoothDevice.EXTRA_DEVICE); if (device.getBondState() != BluetoothDevice.BOND_BONDED) { mListener.addDevice(device.getName(), device.getAddress()); } } else if (BluetoothAdapter.ACTION_DISCOVERY_FINISHED.equals(action)) { mListener.scanDone(); } }", "n_tokens": 431, "n_pass": [48, 2, 2]}
{"time": "2021-02-25 08:06:27.402323", "score": "0.9999", "loss": "0.0002", "code": "@Override public void onReceive(Context context, Intent intent) { final String action = intent.getAction(); if (equals(action)) { BluetoothDelableExtra(BluetoothDevice.EXTRA_DEVICE); if (device.getBondState() != BluetoothDevice.BOND_BONDED) { mListener.addDevice(device.getName(), device.getAddress()); } } else if (BluetoothAdapter.ACTION_DISCOVERY_FINISHED.equals(action)) { mListener.scanDone(); } }", "n_tokens": 402, "n_pass": [50, 3, 3]}
{"time": "2021-02-25 08:06:30.100940", "score": "1.0", "loss": "0.0", "code": "@Override public void onReceive(Context context, Intent intent) { final String action = intent.getAction(); if (equals(action)) { BluetoothDelableExtra(BluetoothDevice.EXTRA_DEVICE); if (device.getBoBOND_BONDED) { mListener.addDevice(device.getName(), device.getAddress()); } } else if (BluetoothAdapter.ACTION_DISCOVERY_FINISHED.equals(action)) { mListener.scanDone(); } }", "n_tokens": 373, "n_pass": [53, 4, 4]}
{"time": "2021-02-25 08:06:32.815461", "score": "0.9915", "loss": "0.0269", "code": "@Override public void onReceive(Context context, Intent intent) { final String action = intent.getAction(); if (equals(action)) { BluetoothDelableExtra(BluetoothDevice.EXTRA_DEVICE); if (device.getBoBOND_BONDED) { mListener.addDevice(device.getName(), device.getAddress()); } } else if (BluetoothAdapter.ACTION_DISC) { mListener.scanDone(); } }", "n_tokens": 344, "n_pass": [58, 5, 5]}
{"time": "2021-02-25 08:06:36.279690", "score": "0.876", "loss": "0.3837", "code": "@Override public void onReceive(Context cointent) { final String action = intent.getAction(); if (equals(action)) { BluetoothDelableExtra(BluetoothDevice.EXTRA_DEVICE); if (device.getBoBOND_BONDED) { mListener.addDevice(device.getName(), device.getAddress()); } } else if (BluetoothAdapter.ACTION_DISC) { mListener.scanDone(); } }", "n_tokens": 330, "n_pass": [100, 6, 6]}
{"time": "2021-02-25 08:06:38.988668", "score": "0.8885", "loss": "0.5077", "code": "@Override public void onReceive(Context cointent) { finan = intent.getAction(); if (equals(action)) { BluetoothDelableExtra(BluetoothDevice.EXTRA_DEVICE); if (device.getBoBOND_BONDED) { mListener.addDevice(device.getName(), device.getAddress()); } } else if (BluetoothAdapter.ACTION_DISC) { mListener.scanDone(); } }", "n_tokens": 316, "n_pass": [102, 7, 7]}
{"time": "2021-02-25 08:06:41.678891", "score": "0.5597", "loss": "1.0398", "code": "@Override public void onReceive(Context cointent) { finaAction(); if (equals(action)) { BluetoothDelableExtra(BluetoothDevice.EXTRA_DEVICE); if (device.getBoBOND_BONDED) { mListener.addDevice(device.getName(), device.getAddress()); } } else if (BluetoothAdapter.ACTION_DISC) { mListener.scanDone(); } }", "n_tokens": 302, "n_pass": [103, 8, 8]}
{"time": "2021-02-25 08:06:47.009540", "score": "0.7855", "loss": "0.758", "code": "@Override public void onReceive(Context cointent) { finaAction(); if (equals(action)) { BluetoothDelableExtra(BluetoothDevice.EXTRA_DEVICE); if (device.ge) { mListener.addDevice(device.getName(), device.getAddress()); } } else if (BluetoothAdapter.ACTION_DISC) { mListener.scanDone(); } }", "n_tokens": 288, "n_pass": [111, 10, 9]}
{"time": "2021-02-25 08:06:49.645939", "score": "0.84", "loss": "0.5588", "code": "@Override public void onReceive(Context cointent) { finaAction(); if (equals(action)) { BluetoothDelableExtra(BluetoothDevice.EXTRA_DEVICE); if (device.ge) { mListener.addDevice(devicvice.getAddress()); } } else if (BluetoothAdapter.ACTION_DISC) { mListener.scanDone(); } }", "n_tokens": 273, "n_pass": [114, 11, 10]}
{"time": "2021-02-25 08:06:52.334087", "score": "0.8169", "loss": "0.6268", "code": "@Override public void onReceive(Context cointent) { finaAction(); if (equals(action)) { BluetoothDelableExtra(BluetoothDevice.EXTRA_DEVICE); if (device.ge) { mListener.addDevice(devic()); } } else if (BluetoothAdapter.ACTION_DISC) { mListener.scanDone(); } }", "n_tokens": 258, "n_pass": [115, 12, 11]}
{"time": "2021-02-25 08:06:55.023800", "score": "0.8068", "loss": "0.6359", "code": "@Override public void onReceive(Context cointent) { finaAction(); if (equals(action)) { BluetoothDelableExtra(BluetoothDevice.EXTRA_DEVICE); if (device.ge) { mListener.addDevice(devic()); } } else if (BluetoothAdaC) { mListener.scanDone(); } }", "n_tokens": 243, "n_pass": [118, 13, 12]}
{"time": "2021-02-25 08:06:58.113010", "score": "0.1747", "loss": "2.5952", "code": "@Override public void onReceive(Context cointent) { finaAction(); if (equals(action)) { BluetoothDelableExtra(BlEXTRA_DEVICE); if (device.ge) { mListener.addDevice(devic()); } } else if (BluetoothAdaC) { mListener.scanDone(); } }", "n_tokens": 229, "n_pass": [129, 14, 13]}
{"time": "2021-02-25 08:07:01.163835", "score": "0.1747", "loss": "2.5952", "code": "@Override public void onReceive(Context cointent) { finaAction(); if (equals(action)) { BluetoothDelableExtra(BlEVICE); if (device.ge) { mListener.addDevice(devic()); } } else if (BluetoothAdaC) { mListener.scanDone(); } }", "n_tokens": 222, "n_pass": [178, 15, 14]}
{"time": "2021-02-25 08:07:11.797866", "score": "0.1747", "loss": "2.5952", "code": "@Override public void onReceive(Context cointent) { finaAction(); if (equals(action)) { BluetoothDelableExtra(BlEVICE); if (device.ge) { mListener.addDevice(devic()); } } else if (BldaC) { mListener.scanDone(); } }", "n_tokens": 214, "n_pass": [188, 19, 15]}
{"time": "2021-02-25 08:07:14.468438", "score": "0.161", "loss": "2.7392", "code": "@Override public void onReceive(Context cointent) { finaAction(); if (equals(action)) { BluetoothDelableExtra(BlEVICE); if (device.ge) { mListener.addDevice(devic()); } } else if (BldaC) { m.scanDone(); } }", "n_tokens": 206, "n_pass": [190, 20, 16]}
{"time": "2021-02-25 08:07:25.488012", "score": "0.161", "loss": "2.7392", "code": "@Override public void onReceive(Context cointent) { finaAction(); if (equals(action)) { BluelableExtra(BlEVICE); if (device.ge) { mListener.addDevice(devic()); } } else if (BldaC) { m.scanDone(); } }", "n_tokens": 199, "n_pass": [206, 24, 17]}
{"time": "2021-02-25 08:07:28.120989", "score": "0.161", "loss": "2.7392", "code": "@Override public void onReceive(Context cointent) { finaAction(); if (equals(action)) { Bluxtra(BlEVICE); if (device.ge) { mListener.addDevice(devic()); } } else if (BldaC) { m.scanDone(); } }", "n_tokens": 192, "n_pass": [207, 25, 18]}
{"time": "2021-02-25 08:07:57.591449", "score": "0.1768", "loss": "2.777", "code": "@Override public void onReceive(Context cointent) { finaAction(); if (equals(action)) { Bluxtra(BlEVICE); if (device.ge) { mList.addDevice(devic()); } } else if (BldaC) { m.scanDone(); } }", "n_tokens": 188, "n_pass": [301, 36, 19]}
{"time": "2021-02-25 08:08:05.553536", "score": "0.1934", "loss": "2.5386", "code": "@Override public void onReceive(Context cointent) { finaAction(); if (equals(action)) { Bluxtra(BlEVICE); if (device.ge) { mList.addDevice(d()); } } else if (BldaC) { m.scanDone(); } }", "n_tokens": 184, "n_pass": [305, 39, 20]}
{"time": "2021-02-25 08:08:13.490386", "score": "0.1824", "loss": "2.6249", "code": "@Ovide public void onReceive(Context cointent) { finaAction(); if (equals(action)) { Bluxtra(BlEVICE); if (device.ge) { mList.addDevice(d()); } } else if (BldaC) { m.scanDone(); } }", "n_tokens": 181, "n_pass": [318, 42, 21]}
{"time": "2021-02-25 08:08:18.783368", "score": "0.1824", "loss": "2.6249", "code": "@Ovideblic void onReceive(Context cointent) { finaAction(); if (equals(action)) { Bluxtra(BlEVICE); if (device.ge) { mList.addDevice(d()); } } else if (BldaC) { m.scanDone(); } }", "n_tokens": 178, "n_pass": [320, 44, 22]}
{"time": "2021-02-25 08:08:21.439297", "score": "0.1824", "loss": "2.6249", "code": "@Ovidec void onReceive(Context cointent) { finaAction(); if (equals(action)) { Bluxtra(BlEVICE); if (device.ge) { mList.addDevice(d()); } } else if (BldaC) { m.scanDone(); } }", "n_tokens": 175, "n_pass": [321, 45, 23]}
{"time": "2021-02-25 08:08:33.560497", "score": "0.1824", "loss": "2.6249", "code": "@Ovidec void onReceive(Context coent) { finaAction(); if (equals(action)) { Bluxtra(BlEVICE); if (device.ge) { mList.addDevice(d()); } } else if (BldaC) { m.scanDone(); } }", "n_tokens": 172, "n_pass": [331, 49, 24]}
{"time": "2021-02-25 08:08:36.181270", "score": "0.2177", "loss": "2.4459", "code": "@Ovidec void onReceive(Context co) { finaAction(); if (equals(action)) { Bluxtra(BlEVICE); if (device.ge) { mList.addDevice(d()); } } else if (BldaC) { m.scanDone(); } }", "n_tokens": 169, "n_pass": [332, 50, 25]}
{"time": "2021-02-25 08:08:38.816016", "score": "0.2177", "loss": "2.4459", "code": "@Ovidec void onReceive(Context co) {naAction(); if (equals(action)) { Bluxtra(BlEVICE); if (device.ge) { mList.addDevice(d()); } } else if (BldaC) { m.scanDone(); } }", "n_tokens": 166, "n_pass": [334, 51, 26]}
{"time": "2021-02-25 08:08:41.447742", "score": "0.2177", "loss": "2.4459", "code": "@Ovidec void onReceive(Context co) {ction(); if (equals(action)) { Bluxtra(BlEVICE); if (device.ge) { mList.addDevice(d()); } } else if (BldaC) { m.scanDone(); } }", "n_tokens": 163, "n_pass": [335, 52, 27]}
{"time": "2021-02-25 08:08:46.769271", "score": "0.4285", "loss": "1.8131", "code": "@Ovidec void onReceive(Context co) {ction(); if (eq(action)) { Bluxtra(BlEVICE); if (device.ge) { mList.addDevice(d()); } } else if (BldaC) { m.scanDone(); } }", "n_tokens": 159, "n_pass": [341, 54, 28]}
{"time": "2021-02-25 08:08:52.039933", "score": "0.3397", "loss": "2.013", "code": "@Ovidec void onReceive(Context co) {ction(); if (eq(action)) { Bluxtra(ICE); if (device.ge) { mList.addDevice(d()); } } else if (BldaC) { m.scanDone(); } }", "n_tokens": 155, "n_pass": [347, 56, 29]}
{"time": "2021-02-25 08:08:54.689418", "score": "0.2845", "loss": "2.242", "code": "@Ovidec void onReceive(Context co) {ction(); if (eq(action)) { Bluxtra(ICE); if (de.ge) { mList.addDevice(d()); } } else if (BldaC) { m.scanDone(); } }", "n_tokens": 151, "n_pass": [351, 57, 30]}
{"time": "2021-02-25 08:08:57.331259", "score": "0.259", "loss": "2.3366", "code": "@Ovidec void onReceive(Context co) {ction(); if (eq(action)) { Bluxtra(ICE); if (de.ge) { m.addDevice(d()); } } else if (BldaC) { m.scanDone(); } }", "n_tokens": 147, "n_pass": [354, 58, 31]}
{"time": "2021-02-25 08:09:10.505649", "score": "0.2581", "loss": "2.4294", "code": "@Ovc void onReceive(Context co) {ction(); if (eq(action)) { Bluxtra(ICE); if (de.ge) { m.addDevice(d()); } } else if (BldaC) { m.scanDone(); } }", "n_tokens": 144, "n_pass": [370, 63, 32]}
{"time": "2021-02-25 08:09:39.859842", "score": "0.2878", "loss": "2.2429", "code": "@Oc void onReceive(Context co) {ction(); if (eq(action)) { Bluxtra(ICE); if (de.ge) { m.addDevice(d()); } } else if (BldaC) { m.scanDone(); } }", "n_tokens": 143, "n_pass": [491, 73, 33]}
{"time": "2021-02-25 08:09:42.494439", "score": "0.2647", "loss": "2.279", "code": "@O void onReceive(Context co) {ction(); if (eq(action)) { Bluxtra(ICE); if (de.ge) { m.addDevice(d()); } } else if (BldaC) { m.scanDone(); } }", "n_tokens": 142, "n_pass": [492, 74, 34]}
{"time": "2021-02-25 08:10:12.491367", "score": "0.3502", "loss": "1.7768", "code": "@O void onReceive(Context co) {ction; if (eq(action)) { Bluxtra(ICE); if (de.ge) { m.addDevice(d()); } } else if (BldaC) { m.scanDone(); } }", "n_tokens": 140, "n_pass": [516, 84, 35]}
{"time": "2021-02-25 08:10:20.464010", "score": "0.2852", "loss": "1.9325", "code": "@O void onReceive(Context co) {ction; if (eq(actn)) { Bluxtra(ICE); if (de.ge) { m.addDevice(d()); } } else if (BldaC) { m.scanDone(); } }", "n_tokens": 138, "n_pass": [523, 87, 36]}
{"time": "2021-02-25 08:10:23.093922", "score": "0.2852", "loss": "1.9325", "code": "@O void onReceive(Context co) {ction; if (eq(actn)) { uxtra(ICE); if (de.ge) { m.addDevice(d()); } } else if (BldaC) { m.scanDone(); } }", "n_tokens": 136, "n_pass": [527, 88, 37]}
{"time": "2021-02-25 08:10:28.442328", "score": "0.2852", "loss": "1.9325", "code": "@O void onReceive(Context co) {ction; if (eq(actn)) { uxa(ICE); if (de.ge) { m.addDevice(d()); } } else if (BldaC) { m.scanDone(); } }", "n_tokens": 134, "n_pass": [529, 90, 38]}
{"time": "2021-02-25 08:10:49.577260", "score": "0.3206", "loss": "1.7898", "code": "@O void onReceive(Context co) {ction; if (eq(actn)) { uxa(ICE); if (de.ge) { m.addDevice(d); } } else if (BldaC) { m.scanDone(); } }", "n_tokens": 132, "n_pass": [547, 98, 39]}
{"time": "2021-02-25 08:10:54.937367", "score": "0.2929", "loss": "2.0229", "code": "@O void onReceive(Context co) {ction; if (eq(actn)) { uxa(ICE); if (de.ge) { m.addDevice(d); } } else if (BlC) { m.scanDone(); } }", "n_tokens": 130, "n_pass": [557, 100, 40]}
{"time": "2021-02-25 08:10:57.594087", "score": "0.2151", "loss": "2.2576", "code": "@O void onReceive(Context co) {ction; if (eq(actn)) { uxa(ICE); if (de.ge) { m.addDevice(d); } } else if (BlC) { mcanDone(); } }", "n_tokens": 128, "n_pass": [561, 101, 41]}
{"time": "2021-02-25 08:11:00.233107", "score": "0.2151", "loss": "2.2576", "code": "@O void onReceive(Context co) {ction; if (eq(actn)) { uxa(ICE); if (de.ge) { m.addDevice(d); } } else if (BlC) { mnDone(); } }", "n_tokens": 126, "n_pass": [562, 102, 42]}
{"time": "2021-02-25 08:11:05.539751", "score": "0.2151", "loss": "2.2576", "code": "@O void onReceive(Context co) {ction; if (eq(actn)) { uxa(ICE); if (de.ge) { m.addDevice(d); } } else if (BlC) { mnDe(); } }", "n_tokens": 124, "n_pass": [564, 104, 43]}
{"time": "2021-02-25 08:11:30.160934", "score": "0.2091", "loss": "2.2957", "code": "@O void onReceive(Context co) {con; if (eq(actn)) { uxa(ICE); if (de.ge) { m.addDevice(d); } } else if (BlC) { mnDe(); } }", "n_tokens": 122, "n_pass": [592, 112, 44]}
{"time": "2021-02-25 08:11:32.788112", "score": "0.217", "loss": "2.2457", "code": "@O void onReceive(Context co) {c; if (eq(actn)) { uxa(ICE); if (de.ge) { m.addDevice(d); } } else if (BlC) { mnDe(); } }", "n_tokens": 120, "n_pass": [593, 113, 45]}
{"time": "2021-02-25 08:11:43.321889", "score": "0.2523", "loss": "2.1067", "code": "@O void onReceive(Context co) {c; if (eq(actn)) { uxa(E); if (de.ge) { m.addDevice(d); } } else if (BlC) { mnDe(); } }", "n_tokens": 118, "n_pass": [605, 117, 46]}
{"time": "2021-02-25 08:11:46.006262", "score": "0.2732", "loss": "2.4092", "code": "@O void onReceive(Context co) {c; if (eq(actn)) { uxa(E); if (dee) { m.addDevice(d); } } else if (BlC) { mnDe(); } }", "n_tokens": 116, "n_pass": [611, 118, 47]}
{"time": "2021-02-25 08:12:01.858397", "score": "0.237", "loss": "2.3211", "code": "@O void onReceive(Context co) {c; if (eq(actn)) { uxa(E); if (dee) { m.addDevice(d); } } else if (C) { mnDe(); } }", "n_tokens": 114, "n_pass": [629, 124, 48]}
{"time": "2021-02-25 08:12:04.490511", "score": "0.2768", "loss": "2.2114", "code": "@O void onReceive(Context co) {c; if (eq(actn)) { uxa(E); if (dee) { m.addDevice(d); } } else if (C) {nDe(); } }", "n_tokens": 112, "n_pass": [632, 125, 49]}
{"time": "2021-02-25 08:12:07.114060", "score": "0.2441", "loss": "2.3065", "code": "@O void onReceive(Context co) {c; if (eq(actn)) { uxa(E); if (dee) { m.addDevice(d); } } else if (C) {e(); } }", "n_tokens": 110, "n_pass": [633, 126, 50]}
{"time": "2021-02-25 08:12:31.656289", "score": "0.1593", "loss": "3.6504", "code": "@O void onReceive(Context co) {c; if ((actn)) { uxa(E); if (dee) { m.addDevice(d); } } else if (C) {e(); } }", "n_tokens": 108, "n_pass": [664, 134, 51]}
{"time": "2021-02-25 08:12:34.277859", "score": "0.1847", "loss": "3.3892", "code": "@O void onReceive(Context co) {c; if ((an)) { uxa(E); if (dee) { m.addDevice(d); } } else if (C) {e(); } }", "n_tokens": 106, "n_pass": [666, 135, 52]}
{"time": "2021-02-25 08:12:36.897179", "score": "0.1583", "loss": "3.5865", "code": "@O void onReceive(Context co) {c; if ((an)) { a(E); if (dee) { m.addDevice(d); } } else if (C) {e(); } }", "n_tokens": 104, "n_pass": [670, 136, 53]}
{"time": "2021-02-25 08:13:25.256242", "score": "0.1583", "loss": "3.5865", "code": "@O void onReceive(Context co) {c; if ((an)) { a(E); if(dee) { m.addDevice(d); } } else if (C) {e(); } }", "n_tokens": 103, "n_pass": [822, 150, 54]}
{"time": "2021-02-25 08:13:35.776101", "score": "0.1583", "loss": "3.5865", "code": "@O void onReceive(Context co) {c; if ((an)) { a(E); if(dee){ m.addDevice(d); } } else if (C) {e(); } }", "n_tokens": 102, "n_pass": [827, 154, 55]}
{"time": "2021-02-25 08:13:38.424765", "score": "0.1583", "loss": "3.5865", "code": "@O void onReceive(Context co) {c; if ((an)) { a(E); if(dee){m.addDevice(d); } } else if (C) {e(); } }", "n_tokens": 101, "n_pass": [829, 155, 56]}
{"time": "2021-02-25 08:14:09.981645", "score": "0.1583", "loss": "3.5865", "code": "@O void onReceive(Context co) {c; if ((an)) { a(E); if(dee){m.addDevice(d);} } else if (C) {e(); } }", "n_tokens": 100, "n_pass": [845, 167, 57]}
{"time": "2021-02-25 08:14:12.603938", "score": "0.1583", "loss": "3.5865", "code": "@O void onReceive(Context co) {c; if ((an)) { a(E); if(dee){m.addDevice(d);}} else if (C) {e(); } }", "n_tokens": 99, "n_pass": [847, 168, 58]}
{"time": "2021-02-25 08:14:15.226287", "score": "0.1583", "loss": "3.5865", "code": "@O void onReceive(Context co) {c; if ((an)) { a(E); if(dee){m.addDevice(d);}}else if (C) {e(); } }", "n_tokens": 98, "n_pass": [849, 169, 59]}
{"time": "2021-02-25 08:14:17.861507", "score": "0.1583", "loss": "3.5865", "code": "@O void onReceive(Context co) {c; if ((an)) { a(E); if(dee){m.addDevice(d);}}else if(C) {e(); } }", "n_tokens": 97, "n_pass": [857, 170, 60]}
{"time": "2021-02-25 08:14:20.517982", "score": "0.1583", "loss": "3.5865", "code": "@O void onReceive(Context co) {c; if ((an)) { a(E); if(dee){m.addDevice(d);}}else if(C){e(); } }", "n_tokens": 96, "n_pass": [861, 171, 61]}
{"time": "2021-02-25 08:14:23.143888", "score": "0.1583", "loss": "3.5865", "code": "@O void onReceive(Context co) {c; if ((an)) { a(E); if(dee){m.addDevice(d);}}else if(C){e();} }", "n_tokens": 95, "n_pass": [867, 172, 62]}
{"time": "2021-02-25 08:14:25.781663", "score": "0.1583", "loss": "3.5865", "code": "@O void onReceive(Context co) {c; if ((an)) { a(E); if(dee){m.addDevice(d);}}else if(C){e();}}", "n_tokens": 94, "n_pass": [869, 173, 63]}
{"time": "2021-02-25 08:14:53.822754", "score": "0.1783", "loss": "3.6971", "code": "@O void onReceive(Contxt co) {c; if ((an)) { a(E); if(dee){m.addDevice(d);}}else if(C){e();}}", "n_tokens": 93, "n_pass": [893, 182, 64]}
{"time": "2021-02-25 08:15:01.739569", "score": "0.1685", "loss": "3.5744", "code": "@O void onReceive(Contxt o) {c; if ((an)) { a(E); if(dee){m.addDevice(d);}}else if(C){e();}}", "n_tokens": 92, "n_pass": [897, 185, 65]}
{"time": "2021-02-25 08:15:04.386534", "score": "0.1685", "loss": "3.5744", "code": "@O void onReceive(Contxt o){c; if ((an)) { a(E); if(dee){m.addDevice(d);}}else if(C){e();}}", "n_tokens": 91, "n_pass": [900, 186, 66]}
{"time": "2021-02-25 08:15:07.004926", "score": "0.1686", "loss": "3.562", "code": "@O void onReceive(Contxt o){; if ((an)) { a(E); if(dee){m.addDevice(d);}}else if(C){e();}}", "n_tokens": 90, "n_pass": [902, 187, 67]}
{"time": "2021-02-25 08:15:09.630100", "score": "0.1686", "loss": "3.562", "code": "@O void onReceive(Contxt o){ if ((an)) { a(E); if(dee){m.addDevice(d);}}else if(C){e();}}", "n_tokens": 89, "n_pass": [903, 188, 68]}
{"time": "2021-02-25 08:15:12.269309", "score": "0.1686", "loss": "3.562", "code": "@O void onReceive(Contxt o){if ((an)) { a(E); if(dee){m.addDevice(d);}}else if(C){e();}}", "n_tokens": 88, "n_pass": [904, 189, 69]}
{"time": "2021-02-25 08:15:14.892014", "score": "0.1686", "loss": "3.562", "code": "@O void onReceive(Contxt o){if((an)) { a(E); if(dee){m.addDevice(d);}}else if(C){e();}}", "n_tokens": 87, "n_pass": [907, 190, 70]}
{"time": "2021-02-25 08:15:20.125930", "score": "0.1564", "loss": "3.6338", "code": "@O void onReceive(Contxt o){if((a)) { a(E); if(dee){m.addDevice(d);}}else if(C){e();}}", "n_tokens": 86, "n_pass": [911, 192, 71]}
{"time": "2021-02-25 08:15:22.743171", "score": "0.1564", "loss": "3.6338", "code": "@O void onReceive(Contxt o){if((a)){ a(E); if(dee){m.addDevice(d);}}else if(C){e();}}", "n_tokens": 85, "n_pass": [914, 193, 72]}
{"time": "2021-02-25 08:15:25.369518", "score": "0.1564", "loss": "3.6338", "code": "@O void onReceive(Contxt o){if((a)){a(E); if(dee){m.addDevice(d);}}else if(C){e();}}", "n_tokens": 84, "n_pass": [916, 194, 73]}
{"time": "2021-02-25 08:15:28.042343", "score": "0.2072", "loss": "3.3133", "code": "@O void onReceive(Contxt o){if((a)){(E); if(dee){m.addDevice(d);}}else if(C){e();}}", "n_tokens": 83, "n_pass": [917, 195, 74]}
{"time": "2021-02-25 08:15:30.681804", "score": "0.2072", "loss": "3.3133", "code": "@O void onReceive(Contxt o){if((a)){(E);if(dee){m.addDevice(d);}}else if(C){e();}}", "n_tokens": 82, "n_pass": [922, 196, 75]}

Minimal simplified code:
@O void onReceive(Contxt o){if((a)){(E);if(dee){m.addDevice(d);}}else if(C){e();}}

