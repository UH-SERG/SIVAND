
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/kaazing__gateway/mina.core/core/src/main/java/org/apache/mina/util/byteaccess/BufferByteArray_setIndex.java
method_name = setIndex
method_body = public void setIndex(int index) { if (index < 0 || index > last()) { throw new IndexOutOfBoundsException(); } this.index = index; }
predict, score, loss = setIndex, 0.9682988524436951, 0.03549395129084587

Trace of simplified code(s):
{"time": "2021-02-21 22:35:23.711705", "score": "0.9683", "loss": "0.0355", "code": "public void setIndex(int index) { if (index < 0 || index > last()) { throw new IndexOutOfBoundsException(); } this.index = index; }", "n_tokens": 131, "n_pass": [1, 1, 1]}
{"time": "2021-02-21 22:35:27.362876", "score": "0.9549", "loss": "0.0497", "code": "public void setIndex(int index) { if (index < 0 || index > last()) { throw new Iception(); } this.index = index; }", "n_tokens": 114, "n_pass": [25, 2, 2]}
{"time": "2021-02-21 22:35:33.406111", "score": "0.9427", "loss": "0.0637", "code": "oid setIndex(int index) { if (index < 0 || index > last()) { throw new Iception(); } this.index = index; }", "n_tokens": 106, "n_pass": [51, 4, 3]}
{"time": "2021-02-21 22:35:36.187355", "score": "0.8435", "loss": "0.2125", "code": "oid setIndex(int index) { if (in|| index > last()) { throw new Iception(); } this.index = index; }", "n_tokens": 98, "n_pass": [55, 5, 4]}
{"time": "2021-02-21 22:35:39.137689", "score": "0.9369", "loss": "0.0811", "code": "oid setIndex(int index) { if (in > last()) { throw new Iception(); } this.index = index; }", "n_tokens": 90, "n_pass": [56, 6, 5]}
{"time": "2021-02-21 22:35:41.881776", "score": "0.9326", "loss": "0.0853", "code": "oid setIndex(int index) { if (in > last()) { thrception(); } this.index = index; }", "n_tokens": 82, "n_pass": [59, 7, 6]}
{"time": "2021-02-21 22:35:47.862631", "score": "0.9326", "loss": "0.0853", "code": "oid setIndex(int index) { if (in > last()) { thrion(); } this.index = index; }", "n_tokens": 78, "n_pass": [90, 9, 7]}
{"time": "2021-02-21 22:35:50.646537", "score": "0.9339", "loss": "0.0857", "code": "oid setIndex(int index) { if (in > last()) { thrion(); }s.index = index; }", "n_tokens": 74, "n_pass": [92, 10, 8]}
{"time": "2021-02-21 22:35:56.252822", "score": "0.5813", "loss": "1.006", "code": "oid setIndex(int index) { if (in > last()) { thrion(); }s.in= index; }", "n_tokens": 70, "n_pass": [94, 12, 9]}
{"time": "2021-02-21 22:36:03.040941", "score": "0.4579", "loss": "1.5271", "code": "oid setIndex(int index) { if (inast()) { thrion(); }s.in= index; }", "n_tokens": 66, "n_pass": [105, 14, 10]}
{"time": "2021-02-21 22:36:05.854089", "score": "0.4837", "loss": "1.4643", "code": "oid setIndex(int index) { if (inast()) {ion(); }s.in= index; }", "n_tokens": 62, "n_pass": [108, 15, 11]}
{"time": "2021-02-21 22:36:12.606248", "score": "0.5184", "loss": "1.2082", "code": "oid setIndex(int index) { if (inast()) {n(); }s.in= index; }", "n_tokens": 60, "n_pass": [154, 17, 12]}
{"time": "2021-02-21 22:36:15.529471", "score": "0.8726", "loss": "0.335", "code": "oid setIndex(int index) { if (inast()) {n(); }in= index; }", "n_tokens": 58, "n_pass": [157, 18, 13]}
{"time": "2021-02-21 22:36:26.713996", "score": "0.5121", "loss": "0.8371", "code": "d setIndex(int index) { if (inast()) {n(); }in= index; }", "n_tokens": 56, "n_pass": [163, 22, 14]}
{"time": "2021-02-21 22:36:31.569148", "score": "0.4575", "loss": "0.8913", "code": "d setIndex(i index) { if (inast()) {n(); }in= index; }", "n_tokens": 54, "n_pass": [170, 23, 15]}
{"time": "2021-02-21 22:36:40.127529", "score": "0.3066", "loss": "1.2978", "code": "d setIndex(i index) { if (ast()) {n(); }in= index; }", "n_tokens": 52, "n_pass": [178, 26, 16]}
{"time": "2021-02-21 22:36:59.097292", "score": "0.3136", "loss": "1.2731", "code": "d setIndex(i ind) { if (ast()) {n(); }in= index; }", "n_tokens": 50, "n_pass": [199, 32, 17]}
{"time": "2021-02-21 22:37:21.588833", "score": "0.3136", "loss": "1.2731", "code": "d setIndex(i ind){ if (ast()) {n(); }in= index; }", "n_tokens": 49, "n_pass": [273, 38, 18]}
{"time": "2021-02-21 22:37:24.429243", "score": "0.3136", "loss": "1.2731", "code": "d setIndex(i ind){if (ast()) {n(); }in= index; }", "n_tokens": 48, "n_pass": [275, 39, 19]}
{"time": "2021-02-21 22:37:27.245038", "score": "0.3136", "loss": "1.2731", "code": "d setIndex(i ind){if(ast()) {n(); }in= index; }", "n_tokens": 47, "n_pass": [278, 40, 20]}
{"time": "2021-02-21 22:37:32.879099", "score": "0.599", "loss": "0.6155", "code": "d setIndex(i ind){if(at()) {n(); }in= index; }", "n_tokens": 46, "n_pass": [281, 42, 21]}
{"time": "2021-02-21 22:37:38.562888", "score": "0.599", "loss": "0.6155", "code": "d setIndex(i ind){if(at()){n(); }in= index; }", "n_tokens": 45, "n_pass": [286, 44, 22]}
{"time": "2021-02-21 22:37:41.339507", "score": "0.599", "loss": "0.6155", "code": "d setIndex(i ind){if(at()){n();}in= index; }", "n_tokens": 44, "n_pass": [292, 45, 23]}
{"time": "2021-02-21 22:37:44.148730", "score": "0.7457", "loss": "0.3408", "code": "d setIndex(i ind){if(at()){n();}n= index; }", "n_tokens": 43, "n_pass": [294, 46, 24]}
{"time": "2021-02-21 22:37:49.941673", "score": "0.7457", "loss": "0.3408", "code": "d setIndex(i ind){if(at()){n();}n=index; }", "n_tokens": 42, "n_pass": [297, 48, 25]}
{"time": "2021-02-21 22:38:01.132151", "score": "0.7438", "loss": "0.3214", "code": "d setIndex(i ind){if(at()){n();}n=indx; }", "n_tokens": 41, "n_pass": [301, 52, 26]}
{"time": "2021-02-21 22:38:08.029763", "score": "0.6505", "loss": "0.4846", "code": "d setIndex(i nd){if(at()){n();}n=indx; }", "n_tokens": 40, "n_pass": [317, 53, 27]}
{"time": "2021-02-21 22:38:10.955736", "score": "0.4985", "loss": "0.7463", "code": "d setIndex(i d){if(at()){n();}n=indx; }", "n_tokens": 39, "n_pass": [318, 54, 28]}
{"time": "2021-02-21 22:38:22.207565", "score": "0.3255", "loss": "1.2892", "code": "d setIndex(i d){if(at()){n();}n=ndx; }", "n_tokens": 38, "n_pass": [338, 58, 29]}
{"time": "2021-02-21 22:38:47.048341", "score": "0.3255", "loss": "1.2892", "code": "d setIndex(i d){if(at()){n();}n=ndx;}", "n_tokens": 37, "n_pass": [381, 65, 30]}

Minimal simplified code:
d setIndex(i d){if(at()){n();}n=ndx;}

