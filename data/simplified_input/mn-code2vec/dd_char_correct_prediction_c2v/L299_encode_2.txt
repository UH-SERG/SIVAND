
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/qpython-android__qpython/qpysl4a/src/main/java/org/qpython/qsl4a/codec/Base64Codec_encode.java
method_name = encode
method_body = public byte[] encode(byte[] pArray) { reset(); if (pArray == null || pArray.length == 0) { return pArray; } long len = getEncodeLength(pArray, lineLength, lineSeparator); byte[] buf = new byte[(int) len]; setInitialBuffer(buf, 0, buf.length); encode(pArray, 0, pArray.length); encode(pArray, 0, -1); if (buffer != buf) { readResults(buf, 0, buf.length); } if (isUrlSafe() && pos < buf.length) { byte[] smallerBuf = new byte[pos]; System.arraycopy(buf, 0, smallerBuf, 0, pos); buf = smallerBuf; } return buf; }
predict, score, loss = encode, 0.9969518184661865, 0.0034355446696281433

Trace of simplified code(s):
{"time": "2021-02-24 22:09:34.898260", "score": "0.999", "loss": "0.001", "code": "public byte[] encode(byte[] pArray) { reset(); if (pArray == null || pArray.length == 0) { return pArray; } long len = getEncodeLength(pArray, lineLength, lineSeparator); byte[] buf = new byte[(int) len]; setInitialBuffer(buf, 0, buf.length); encode(pArray, 0, pArray.length); encode(pArray, 0, -1); if (buffer != buf) { readResults(buf, 0, buf.length); } if (isUrlSafe() && pos < buf.length) { byte[] smallerBuf = new byte[pos]; System.arraycopy(buf, 0, smallerBuf, 0, pos); buf = smallerBuf; } return buf; }", "n_tokens": 509, "n_pass": [1, 1, 1]}
{"time": "2021-02-24 22:09:37.688886", "score": "0.9994", "loss": "0.0007", "code": "public byte[] encode(byte[] pArray) { reset(); if (pArray == null || pArray.length == 0) { return pArray; } long len = getEncoyte[(int) len]; setInitialBuffer(buf, 0, buf.length); encode(pArray, 0, pArray.length); encode(pArray, 0, -1); if (buffer != buf) { readResults(buf, 0, buf.length); } if (isUrlSafe() && pos < buf.length) { byte[] smallerBuf = new byte[pos]; System.arraycopy(buf, 0, smallerBuf, 0, pos); buf = smallerBuf; } return buf; }", "n_tokens": 446, "n_pass": [22, 2, 2]}
{"time": "2021-02-24 22:09:40.463047", "score": "1.0", "loss": "0.0", "code": "public byte[] encode(byte[] pArray) { reset(); if (pArray == null || pArray.length == 0) { return pArray; } long len = getEncoyte[(int) len]; setInitialBuffer(buf, 0, buf.length); encode(pArray, 0, pArray.length); encode(pArray, 0, -1); if (buffer != bufbuf.length) { byte[] smallerBuf = new byte[pos]; System.arraycopy(buf, 0, smallerBuf, 0, pos); buf = smallerBuf; } return buf; }", "n_tokens": 382, "n_pass": [25, 3, 3]}
{"time": "2021-02-24 22:09:43.246603", "score": "0.9688", "loss": "0.0329", "code": "public byte[] encode(byte[] pArray) { reset(); if (pArray == null || pArray.length == 0) { return pArray; } long len = getEncoyte[(int) len]; setInitialBuffer(buf, 0, buf.length); encode(pArray, 0, pArray.length); encode(pArray, 0, -1); if (buffer != bufbuf.length) { byte[] smallerBuf = new byte[pos]; System.arraycopuf = smallerBuf; } return buf; }", "n_tokens": 350, "n_pass": [46, 4, 4]}
{"time": "2021-02-24 22:09:45.992127", "score": "0.9991", "loss": "0.0011", "code": "public byte[] encode(byte[] pArray) { reset(); if (pArray == null || pArray.length == 0) { return pArray; } long len = getEnco(buf, 0, buf.length); encode(pArray, 0, pArray.length); encode(pArray, 0, -1); if (buffer != bufbuf.length) { byte[] smallerBuf = new byte[pos]; System.arraycopuf = smallerBuf; } return buf; }", "n_tokens": 318, "n_pass": [51, 5, 5]}
{"time": "2021-02-24 22:09:48.724411", "score": "0.9994", "loss": "0.0007", "code": "public byte[] encode(byte[] pArray) { reset(); if (pArray == null || pArray.length == 0) { return pArray; } long len = getEnco(buf, 0, buf.length); encode(pArArray, 0, -1); if (buffer != bufbuf.length) { byte[] smallerBuf = new byte[pos]; System.arraycopuf = smallerBuf; } return buf; }", "n_tokens": 286, "n_pass": [53, 6, 6]}
{"time": "2021-02-24 22:09:51.503938", "score": "0.9992", "loss": "0.001", "code": "public byte[] encode(byte[] pArray) { reset(); if (pArray == null || pArray.length == 0) { return pArray; } long len = getEnco(buf, 0, buf.length); encode(pArArray, 0, -1); if (buffer != bufbuf.length) { by= new byte[pos]; System.arraycopuf = smallerBuf; } return buf; }", "n_tokens": 270, "n_pass": [84, 7, 7]}
{"time": "2021-02-24 22:09:54.272869", "score": "0.999", "loss": "0.0013", "code": "public byte[] encode(byte[] pArray) { reset(); if (pArray == null || pArray.length == 0) { return pArray; } long len = getEnco(buf, 0, buf.length); encode(pArArray, 0, -1); if (buffer != bufbuf.length) { by= new byte[pos];uf = smallerBuf; } return buf; }", "n_tokens": 254, "n_pass": [86, 8, 8]}
{"time": "2021-02-24 22:09:57.064512", "score": "0.9763", "loss": "0.0262", "code": "public byte[] encode(byte[] pArray) { reset(); if (pArray == null || pArray.length == 0) { return pArray; } long len = getEnco(buf, 0, buf.length); encode(pArArray, 0, -1); if (buffer != bufbuf.length) { by= new byte[pos]; } return buf; }", "n_tokens": 238, "n_pass": [87, 9, 9]}
{"time": "2021-02-24 22:10:00.259762", "score": "0.9864", "loss": "0.0159", "code": "public byte[] encode(byte[] pArray) { reset(); if (pArray == nngth == 0) { return pArray; } long len = getEnco(buf, 0, buf.length); encode(pArArray, 0, -1); if (buffer != bufbuf.length) { by= new byte[pos]; } return buf; }", "n_tokens": 222, "n_pass": [93, 10, 10]}
{"time": "2021-02-24 22:10:02.975249", "score": "0.9818", "loss": "0.0247", "code": "public byte[] encode(byte[] pArray) { reset(); if (pArray == nngth == 0) { return pArray; } lo(buf, 0, buf.length); encode(pArArray, 0, -1); if (buffer != bufbuf.length) { by= new byte[pos]; } return buf; }", "n_tokens": 206, "n_pass": [96, 11, 11]}
{"time": "2021-02-24 22:10:09.054083", "score": "0.979", "loss": "0.0275", "code": "public byte[] encode(byte[] pArray) { reset(); if (pArray == nngth == 0) { return pArray; } lo(buf, 0,gth); encode(pArArray, 0, -1); if (buffer != bufbuf.length) { by= new byte[pos]; } return buf; }", "n_tokens": 198, "n_pass": [137, 13, 12]}
{"time": "2021-02-24 22:10:11.839324", "score": "0.9339", "loss": "0.0809", "code": "public byte[] encode(byte[] pArray) { reset(); if (pArray == nngth == 0) { return pArray; } lo(buf, 0,gth); encode(pAr, -1); if (buffer != bufbuf.length) { by= new byte[pos]; } return buf; }", "n_tokens": 190, "n_pass": [140, 14, 13]}
{"time": "2021-02-24 22:10:14.570759", "score": "0.9395", "loss": "0.0741", "code": "public byte[] encode(byte[] pArray) { reset(); if (pArray == nngth == 0) { return pArray; } lo(buf, 0,gth); encode(pAr, -1); if (buffebuf.length) { by= new byte[pos]; } return buf; }", "n_tokens": 182, "n_pass": [143, 15, 14]}
{"time": "2021-02-24 22:10:17.337618", "score": "0.9375", "loss": "0.0761", "code": "public byte[] encode(byte[] pArray) { reset(); if (pArray == nngth == 0) { return pArray; } lo(buf, 0,gth); encode(pAr, -1); if (buffeth) { by= new byte[pos]; } return buf; }", "n_tokens": 174, "n_pass": [144, 16, 15]}
{"time": "2021-02-24 22:10:20.136348", "score": "0.9375", "loss": "0.0761", "code": "byte[] encode(byte[] pArray) { reset(); if (pArray == nngth == 0) { return pArray; } lo(buf, 0,gth); encode(pAr, -1); if (buffeth) { by= new byte[pos]; } return buf; }", "n_tokens": 167, "n_pass": [150, 17, 16]}
{"time": "2021-02-24 22:10:23.376691", "score": "0.941", "loss": "0.0714", "code": "byte[] encode(byte[] pArray) {  if (pArray == nngth == 0) { return pArray; } lo(buf, 0,gth); encode(pAr, -1); if (buffeth) { by= new byte[pos]; } return buf; }", "n_tokens": 159, "n_pass": [155, 18, 17]}
{"time": "2021-02-24 22:10:26.132014", "score": "0.9496", "loss": "0.0619", "code": "byte[] encode(byte[] pArray) {  if (pArngth == 0) { return pArray; } lo(buf, 0,gth); encode(pAr, -1); if (buffeth) { by= new byte[pos]; } return buf; }", "n_tokens": 151, "n_pass": [157, 19, 18]}
{"time": "2021-02-24 22:10:28.890353", "score": "0.9119", "loss": "0.105", "code": "byte[] encode(byte[] pArray) {  if (pAr0) { return pArray; } lo(buf, 0,gth); encode(pAr, -1); if (buffeth) { by= new byte[pos]; } return buf; }", "n_tokens": 143, "n_pass": [158, 20, 19]}
{"time": "2021-02-24 22:10:31.647683", "score": "0.9358", "loss": "0.1054", "code": "byte[] encode(byte[] pArray) {  if (pAr0) { retay; } lo(buf, 0,gth); encode(pAr, -1); if (buffeth) { by= new byte[pos]; } return buf; }", "n_tokens": 135, "n_pass": [160, 21, 20]}
{"time": "2021-02-24 22:10:34.969414", "score": "0.949", "loss": "0.0724", "code": "byte[] encode(byte[] pArray) {  if (pAr0) { retay; } lo(bufgth); encode(pAr, -1); if (buffeth) { by= new byte[pos]; } return buf; }", "n_tokens": 131, "n_pass": [215, 22, 21]}
{"time": "2021-02-24 22:10:40.484633", "score": "0.847", "loss": "0.3444", "code": "byte[] encode(byte[] pArray) {  if (pAr0) { retay; } lo(bufgth); encode(pAr); if (buffeth) { by= new byte[pos]; } return buf; }", "n_tokens": 127, "n_pass": [220, 24, 22]}
{"time": "2021-02-24 22:10:43.260710", "score": "0.656", "loss": "0.7769", "code": "byte[] encode(byte[] pArray) {  if (pAr0) { retay; } lo(bufgth); encode(pAr); if (bth) { by= new byte[pos]; } return buf; }", "n_tokens": 123, "n_pass": [223, 25, 23]}
{"time": "2021-02-24 22:10:46.045859", "score": "0.6224", "loss": "0.8085", "code": "byte[] encode(byte[] pArray) {  if (pAr0) { retay; } lo(bufgth); encode(pAr); if (bth) { by= nete[pos]; } return buf; }", "n_tokens": 119, "n_pass": [227, 26, 24]}
{"time": "2021-02-24 22:10:48.806850", "score": "0.6923", "loss": "0.6878", "code": "byte[] encode(byte[] pArray) {  if (pAr0) { retay; } lo(bufgth); encode(pAr); if (bth) { by= nete[pos]; } rn buf; }", "n_tokens": 115, "n_pass": [231, 27, 25]}
{"time": "2021-02-24 22:10:51.568107", "score": "0.7082", "loss": "0.7097", "code": "byte[] encode(byte[] pArray) {  if (pAr0) { retay; } lo(bufgth); encode(pAr); if (bth) { by= nete[pos]; } rf; }", "n_tokens": 111, "n_pass": [232, 28, 26]}
{"time": "2021-02-24 22:10:54.354253", "score": "0.6109", "loss": "0.9014", "code": "e[] encode(byte[] pArray) {  if (pAr0) { retay; } lo(bufgth); encode(pAr); if (bth) { by= nete[pos]; } rf; }", "n_tokens": 108, "n_pass": [234, 29, 27]}
{"time": "2021-02-24 22:11:00.723410", "score": "0.5591", "loss": "1.0598", "code": "e[] encode(byte[] pArray) {  if (pAr0) {ay; } lo(bufgth); encode(pAr); if (bth) { by= nete[pos]; } rf; }", "n_tokens": 104, "n_pass": [245, 31, 28]}
{"time": "2021-02-24 22:11:03.480603", "score": "0.6085", "loss": "0.9081", "code": "e[] encode(byte[] pArray) {  if (pAr0) {} lo(bufgth); encode(pAr); if (bth) { by= nete[pos]; } rf; }", "n_tokens": 100, "n_pass": [246, 32, 29]}
{"time": "2021-02-24 22:11:13.143368", "score": "0.6168", "loss": "0.8274", "code": "e[] encode(byte[] pArray) {  if (pAr0) {} (bufgth); encode(pAr); if (bth) { by= nete[pos]; } rf; }", "n_tokens": 98, "n_pass": [323, 35, 30]}
{"time": "2021-02-24 22:11:15.927808", "score": "0.6168", "loss": "0.8274", "code": "e[] encode(byte[] pArray) {  if (pAr0) {} (bgth); encode(pAr); if (bth) { by= nete[pos]; } rf; }", "n_tokens": 96, "n_pass": [325, 36, 31]}
{"time": "2021-02-24 22:11:18.681551", "score": "0.6051", "loss": "0.8959", "code": "e[] encode(byte[] pArray) {  if (pAr0) {} (bh); encode(pAr); if (bth) { by= nete[pos]; } rf; }", "n_tokens": 94, "n_pass": [326, 37, 32]}
{"time": "2021-02-24 22:11:30.360850", "score": "0.6805", "loss": "0.8278", "code": "e[] encode(byte[] pArray) {  if (pAr0) {} (bh); encode(p); if (bth) { by= nete[pos]; } rf; }", "n_tokens": 92, "n_pass": [333, 41, 33]}
{"time": "2021-02-24 22:11:33.869511", "score": "0.8274", "loss": "0.391", "code": "e[] encode(byte[] pArray) {  if (pAr0) {} (bh); encode(p); if (b) { by= nete[pos]; } rf; }", "n_tokens": 90, "n_pass": [338, 42, 34]}
{"time": "2021-02-24 22:11:36.663080", "score": "0.9546", "loss": "0.0578", "code": "e[] encode(byte[] pArray) {  if (pAr0) {} (bh); encode(p); if (b) { bynete[pos]; } rf; }", "n_tokens": 88, "n_pass": [342, 43, 35]}
{"time": "2021-02-24 22:11:39.432959", "score": "0.9546", "loss": "0.0578", "code": "e[] encode(byte[] pArray) {  if (pAr0) {} (bh); encode(p); if (b) { byne[pos]; } rf; }", "n_tokens": 86, "n_pass": [344, 44, 36]}
{"time": "2021-02-24 22:11:42.198382", "score": "0.9559", "loss": "0.0561", "code": "e[] encode(byte[] pArray) {  if (pAr0) {} (bh); encode(p); if (b) { byne[p]; } rf; }", "n_tokens": 84, "n_pass": [346, 45, 37]}
{"time": "2021-02-24 22:11:44.989419", "score": "0.9573", "loss": "0.0548", "code": "e[] encode(byte[] pArray) {  if (pAr0) {} (bh); encode(p); if (b) { byne[p]; }f; }", "n_tokens": 82, "n_pass": [349, 46, 38]}
{"time": "2021-02-24 22:11:47.801714", "score": "0.9563", "loss": "0.0555", "code": "e[] encode(byte[] pArray) {  if (pAr0) {} (bh); encode(p); if (b) { byne[p]; } }", "n_tokens": 80, "n_pass": [350, 47, 39]}
{"time": "2021-02-24 22:11:51.968000", "score": "0.9779", "loss": "0.0333", "code": "e[] encode(be[] pArray) {  if (pAr0) {} (bh); encode(p); if (b) { byne[p]; } }", "n_tokens": 78, "n_pass": [358, 48, 40]}
{"time": "2021-02-24 22:11:54.777708", "score": "0.6866", "loss": "1.1016", "code": "e[] encode(be[] rray) {  if (pAr0) {} (bh); encode(p); if (b) { byne[p]; } }", "n_tokens": 76, "n_pass": [361, 49, 41]}
{"time": "2021-02-24 22:12:00.378817", "score": "0.5927", "loss": "1.2687", "code": "e[] encode(be[] rr) {  if (pAr0) {} (bh); encode(p); if (b) { byne[p]; } }", "n_tokens": 74, "n_pass": [363, 51, 42]}
{"time": "2021-02-24 22:12:03.204009", "score": "0.4502", "loss": "1.5766", "code": "e[] encode(be[] rr) {  if (p0) {} (bh); encode(p); if (b) { byne[p]; } }", "n_tokens": 72, "n_pass": [369, 52, 43]}
{"time": "2021-02-24 22:12:14.836605", "score": "0.3468", "loss": "1.8698", "code": "e[] encode(be[] rr) {  if (p0) {} (bh); encode(p); if (b) { ne[p]; } }", "n_tokens": 70, "n_pass": [386, 56, 44]}
{"time": "2021-02-24 22:12:34.853472", "score": "0.4146", "loss": "1.6752", "code": "e[] encode(be[] rr) {  if (p0) {} (bh); encode(p); if (b) { e[p]; } }", "n_tokens": 69, "n_pass": [492, 60, 45]}
{"time": "2021-02-24 22:12:37.594540", "score": "0.4146", "loss": "1.6752", "code": "e[] encode(be[] rr) {  if (p0) {} (bh); encode(p); if (b) { e[p];} }", "n_tokens": 68, "n_pass": [497, 61, 46]}
{"time": "2021-02-24 22:12:40.333293", "score": "0.4146", "loss": "1.6752", "code": "e[] encode(be[] rr) {  if (p0) {} (bh); encode(p); if (b) { e[p];}}", "n_tokens": 67, "n_pass": [499, 62, 47]}
{"time": "2021-02-24 22:12:43.076417", "score": "0.4146", "loss": "1.6752", "code": "e[]encode(be[] rr) {  if (p0) {} (bh); encode(p); if (b) { e[p];}}", "n_tokens": 66, "n_pass": [504, 63, 48]}
{"time": "2021-02-24 22:12:48.481033", "score": "0.1747", "loss": "2.5819", "code": "e[]encode(e[] rr) {  if (p0) {} (bh); encode(p); if (b) { e[p];}}", "n_tokens": 65, "n_pass": [512, 64, 49]}
{"time": "2021-02-24 22:12:51.305425", "score": "0.1747", "loss": "2.5819", "code": "e[]encode(e[]rr) {  if (p0) {} (bh); encode(p); if (b) { e[p];}}", "n_tokens": 64, "n_pass": [516, 65, 50]}
{"time": "2021-02-24 22:12:59.639178", "score": "0.1747", "loss": "2.5819", "code": "e[]encode(e[]rr){  if (p0) {} (bh); encode(p); if (b) { e[p];}}", "n_tokens": 63, "n_pass": [520, 68, 51]}
{"time": "2021-02-24 22:13:02.457502", "score": "0.1747", "loss": "2.5819", "code": "e[]encode(e[]rr){ if (p0) {} (bh); encode(p); if (b) { e[p];}}", "n_tokens": 62, "n_pass": [522, 69, 52]}
{"time": "2021-02-24 22:13:05.231335", "score": "0.1747", "loss": "2.5819", "code": "e[]encode(e[]rr){if (p0) {} (bh); encode(p); if (b) { e[p];}}", "n_tokens": 61, "n_pass": [523, 70, 53]}
{"time": "2021-02-24 22:13:08.059128", "score": "0.1747", "loss": "2.5819", "code": "e[]encode(e[]rr){if(p0) {} (bh); encode(p); if (b) { e[p];}}", "n_tokens": 60, "n_pass": [526, 71, 54]}
{"time": "2021-02-24 22:13:10.843685", "score": "0.1767", "loss": "2.556", "code": "e[]encode(e[]rr){if(0) {} (bh); encode(p); if (b) { e[p];}}", "n_tokens": 59, "n_pass": [528, 72, 55]}
{"time": "2021-02-24 22:13:13.656333", "score": "0.1767", "loss": "2.556", "code": "e[]encode(e[]rr){if(0){} (bh); encode(p); if (b) { e[p];}}", "n_tokens": 58, "n_pass": [531, 73, 56]}
{"time": "2021-02-24 22:13:16.466181", "score": "0.1767", "loss": "2.556", "code": "e[]encode(e[]rr){if(0){}(bh); encode(p); if (b) { e[p];}}", "n_tokens": 57, "n_pass": [534, 74, 57]}
{"time": "2021-02-24 22:13:19.259468", "score": "0.2546", "loss": "2.1741", "code": "e[]encode(e[]rr){if(0){}(h); encode(p); if (b) { e[p];}}", "n_tokens": 56, "n_pass": [536, 75, 58]}
{"time": "2021-02-24 22:13:22.465433", "score": "0.2546", "loss": "2.1741", "code": "e[]encode(e[]rr){if(0){}(h);encode(p); if (b) { e[p];}}", "n_tokens": 55, "n_pass": [540, 76, 59]}
{"time": "2021-02-24 22:13:42.951094", "score": "0.3303", "loss": "1.7333", "code": "e[]encode(e[]rr){if(0){}(h);encode(); if (b) { e[p];}}", "n_tokens": 54, "n_pass": [548, 83, 60]}
{"time": "2021-02-24 22:13:45.724943", "score": "0.3303", "loss": "1.7333", "code": "e[]encode(e[]rr){if(0){}(h);encode();if (b) { e[p];}}", "n_tokens": 53, "n_pass": [551, 84, 61]}
{"time": "2021-02-24 22:13:48.542561", "score": "0.3303", "loss": "1.7333", "code": "e[]encode(e[]rr){if(0){}(h);encode();if(b) { e[p];}}", "n_tokens": 52, "n_pass": [554, 85, 62]}
{"time": "2021-02-24 22:13:51.315853", "score": "0.3303", "loss": "1.7333", "code": "e[]encode(e[]rr){if(0){}(h);encode();if(b){ e[p];}}", "n_tokens": 51, "n_pass": [558, 86, 63]}
{"time": "2021-02-24 22:13:54.088821", "score": "0.3303", "loss": "1.7333", "code": "e[]encode(e[]rr){if(0){}(h);encode();if(b){e[p];}}", "n_tokens": 50, "n_pass": [560, 87, 64]}
{"time": "2021-02-24 22:13:59.433105", "score": "0.4208", "loss": "1.4185", "code": "e[]encode(e[]r){if(0){}(h);encode();if(b){e[p];}}", "n_tokens": 49, "n_pass": [581, 88, 65]}

Minimal simplified code:
e[]encode(e[]r){if(0){}(h);encode();if(b){e[p];}}

