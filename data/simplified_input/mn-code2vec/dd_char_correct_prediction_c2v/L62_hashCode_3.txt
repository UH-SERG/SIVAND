
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/OpenRock__OpenAM/openam-ldap-utils/src/main/java/org/forgerock/openam/ldap/LDAPURL_hashCode.java
method_name = hashCode
method_body = @Override public int hashCode() { int hash = 7; hash = 19 * hash + (this.host != null ? this.host.hashCode() : 0); hash = 19 * hash + this.port; hash = 19 * hash + (this.isSSL != null ? this.isSSL.hashCode() : 0); return hash; }
predict, score, loss = hashCode, 0.9999663829803467, 4.756337511935271e-05

Trace of simplified code(s):
{"time": "2021-02-22 02:07:48.582594", "score": "1.0", "loss": "0.0", "code": "@Override public int hashCode() { int hash = 7; hash = 19 * hash + (this.host != null ? this.host.hashCode() : 0); hash = 19 * hash + this.port; hash = 19 * hash + (this.isSSL != null ? this.isSSL.hashCode() : 0); return hash; }", "n_tokens": 228, "n_pass": [1, 1, 1]}
{"time": "2021-02-22 02:07:51.627550", "score": "1.0", "loss": "0.0001", "code": "@Override public int hashCode() { int hash = 7; hash = 19 * hash + (this.host != nul); hash = 19 * hash + this.port; hash = 19 * hash + (this.isSSL != null ? this.isSSL.hashCode() : 0); return hash; }", "n_tokens": 200, "n_pass": [23, 2, 2]}
{"time": "2021-02-22 02:07:54.661856", "score": "0.9983", "loss": "0.0019", "code": "@Override public int hashCode() { int hash = 7; hash = 19 * hash + (this.host != nul); hash = 19 *ort; hash = 19 * hash + (this.isSSL != null ? this.isSSL.hashCode() : 0); return hash; }", "n_tokens": 186, "n_pass": [46, 3, 3]}
{"time": "2021-02-22 02:07:57.299616", "score": "0.9934", "loss": "0.0076", "code": "@Override public int hashCode() { int hash = 7; hash = 19 * hash + (this.host != nul); hash = 19 *ort; hash = 19 * hash + (thi ? this.isSSL.hashCode() : 0); return hash; }", "n_tokens": 171, "n_pass": [49, 4, 4]}
{"time": "2021-02-22 02:08:00.330978", "score": "0.9937", "loss": "0.0072", "code": "@Override public int hashCode() { int hash = 7; hash = 19 * hash + (th); hash = 19 *ort; hash = 19 * hash + (thi ? this.isSSL.hashCode() : 0); return hash; }", "n_tokens": 157, "n_pass": [58, 5, 5]}
{"time": "2021-02-22 02:08:03.362102", "score": "0.9993", "loss": "0.0009", "code": "@Override public int hashCode() { int hash = 7; hash = 19 * hash + (th); hashort; hash = 19 * hash + (thi ? this.isSSL.hashCode() : 0); return hash; }", "n_tokens": 150, "n_pass": [93, 6, 6]}
{"time": "2021-02-22 02:08:05.998298", "score": "0.9996", "loss": "0.0006", "code": "@Override public int hashCode() { int hash = 7; hash = 19 * hash + (th); hashsh = 19 * hash + (thi ? this.isSSL.hashCode() : 0); return hash; }", "n_tokens": 143, "n_pass": [94, 7, 7]}
{"time": "2021-02-22 02:08:09.007416", "score": "0.9989", "loss": "0.002", "code": "@Override public int hashCode() { int hash = 7; hash = 19 * hash + (th); hashsh = 19 + (thi ? this.isSSL.hashCode() : 0); return hash; }", "n_tokens": 136, "n_pass": [96, 8, 8]}
{"time": "2021-02-22 02:08:11.622473", "score": "0.9856", "loss": "0.0743", "code": "@Override public int hashCode() { int hash = 7; hash = 19 * hash + (th); hashsh = 19 + (thi ? thishashCode() : 0); return hash; }", "n_tokens": 129, "n_pass": [99, 9, 9]}
{"time": "2021-02-22 02:08:14.240999", "score": "0.9977", "loss": "0.005", "code": "@Override public int hashCode() { int hash = 7; hash = 19 * hash + (th); hashsh = 19 + (thi ? thise() : 0); return hash; }", "n_tokens": 122, "n_pass": [100, 10, 10]}
{"time": "2021-02-22 02:08:16.974273", "score": "0.9976", "loss": "0.0053", "code": "@Overriic int hashCode() { int hash = 7; hash = 19 * hash + (th); hashsh = 19 + (thi ? thise() : 0); return hash; }", "n_tokens": 115, "n_pass": [105, 11, 11]}
{"time": "2021-02-22 02:08:20.014041", "score": "0.9957", "loss": "0.0102", "code": "@Overriic int hashCode() { i = 7; hash = 19 * hash + (th); hashsh = 19 + (thi ? thise() : 0); return hash; }", "n_tokens": 108, "n_pass": [109, 12, 12]}
{"time": "2021-02-22 02:08:22.620081", "score": "0.9953", "loss": "0.0153", "code": "@Overriic int hashCode() { iash = 19 * hash + (th); hashsh = 19 + (thi ? thise() : 0); return hash; }", "n_tokens": 101, "n_pass": [110, 13, 13]}
{"time": "2021-02-22 02:08:26.542641", "score": "0.9966", "loss": "0.0094", "code": "@Overriic int hashCode() { h = 19 * hash + (th); hashsh = 19 + (thi ? thise() : 0); return hash; }", "n_tokens": 98, "n_pass": [154, 14, 14]}
{"time": "2021-02-22 02:08:29.519645", "score": "0.7302", "loss": "1.6921", "code": "@Overriic int hashCode() { h = 19 * ha (th); hashsh = 19 + (thi ? thise() : 0); return hash; }", "n_tokens": 94, "n_pass": [158, 15, 15]}
{"time": "2021-02-22 02:08:32.136115", "score": "0.8621", "loss": "1.0002", "code": "@Overriic int hashCode() { h = 19 * ha (th); hh = 19 + (thi ? thise() : 0); return hash; }", "n_tokens": 90, "n_pass": [161, 16, 16]}
{"time": "2021-02-22 02:08:35.144145", "score": "0.9121", "loss": "0.8296", "code": "@Overriic int hashCode() { h = 19 * ha (th); hh =  (thi ? thise() : 0); return hash; }", "n_tokens": 86, "n_pass": [163, 17, 17]}
{"time": "2021-02-22 02:08:37.782873", "score": "0.9555", "loss": "0.3646", "code": "@Overriic int hashCode() { h = 19 * ha (th); hh =  (thi ? e() : 0); return hash; }", "n_tokens": 82, "n_pass": [166, 18, 18]}
{"time": "2021-02-22 02:08:40.389515", "score": "0.871", "loss": "1.0616", "code": "@Overriic int hashCode() { h = 19 * ha (th); hh =  (thi ? e() : 0); re hash; }", "n_tokens": 78, "n_pass": [170, 19, 19]}
{"time": "2021-02-22 02:08:43.223708", "score": "0.7352", "loss": "2.2938", "code": "@Overriic int hashCode() { h = 19 * ha (th); hh =  (thi ? e() : 0); reh; }", "n_tokens": 74, "n_pass": [171, 20, 20]}
{"time": "2021-02-22 02:08:45.817731", "score": "0.7352", "loss": "2.2938", "code": "@Oviic int hashCode() { h = 19 * ha (th); hh =  (thi ? e() : 0); reh; }", "n_tokens": 71, "n_pass": [174, 21, 21]}
{"time": "2021-02-22 02:08:48.415886", "score": "0.7261", "loss": "1.8043", "code": "@Ov int hashCode() { h = 19 * ha (th); hh =  (thi ? e() : 0); reh; }", "n_tokens": 68, "n_pass": [175, 22, 22]}
{"time": "2021-02-22 02:08:55.662999", "score": "0.9827", "loss": "0.0314", "code": " int hashCode() { h = 19 * ha (th); hh =  (thi ? e() : 0); reh; }", "n_tokens": 65, "n_pass": [194, 24, 23]}
{"time": "2021-02-22 02:08:58.308323", "score": "0.3376", "loss": "3.8613", "code": "t hashCode() { h = 19 * ha (th); hh =  (thi ? e() : 0); reh; }", "n_tokens": 62, "n_pass": [195, 25, 24]}
{"time": "2021-02-22 02:09:08.905242", "score": "0.2699", "loss": "4.1726", "code": "t hashCode() { h =9 * ha (th); hh =  (thi ? e() : 0); reh; }", "n_tokens": 60, "n_pass": [259, 27, 25]}
{"time": "2021-02-22 02:09:11.782009", "score": "0.2386", "loss": "3.9521", "code": "t hashCode() { h =9 *  (th); hh =  (thi ? e() : 0); reh; }", "n_tokens": 58, "n_pass": [261, 28, 26]}
{"time": "2021-02-22 02:09:14.546993", "score": "0.6315", "loss": "2.5514", "code": "t hashCode() { h =9 *  (th);h =  (thi ? e() : 0); reh; }", "n_tokens": 56, "n_pass": [265, 29, 27]}
{"time": "2021-02-22 02:09:25.157386", "score": "0.3961", "loss": "2.8657", "code": "t hashCode() { h =9 *  (th);h =  (thi ? e() : 0); h; }", "n_tokens": 54, "n_pass": [277, 33, 28]}
{"time": "2021-02-22 02:09:27.768936", "score": "0.3939", "loss": "2.9451", "code": "t hashCode() { h =9 *  (th);h =  (thi ? e() : 0);  }", "n_tokens": 52, "n_pass": [278, 34, 29]}
{"time": "2021-02-22 02:09:47.853860", "score": "0.3939", "loss": "2.9451", "code": "t hashCode() { h =9 *  (th);h =  (thi ? e() : 0); }", "n_tokens": 51, "n_pass": [354, 38, 30]}
{"time": "2021-02-22 02:09:54.448345", "score": "0.3939", "loss": "2.9451", "code": "t hashCode(){ h =9 *  (th);h =  (thi ? e() : 0); }", "n_tokens": 50, "n_pass": [367, 39, 31]}
{"time": "2021-02-22 02:09:57.070208", "score": "0.3939", "loss": "2.9451", "code": "t hashCode(){h =9 *  (th);h =  (thi ? e() : 0); }", "n_tokens": 49, "n_pass": [369, 40, 32]}
{"time": "2021-02-22 02:09:59.683861", "score": "0.3939", "loss": "2.9451", "code": "t hashCode(){h=9 *  (th);h =  (thi ? e() : 0); }", "n_tokens": 48, "n_pass": [371, 41, 33]}
{"time": "2021-02-22 02:10:02.691982", "score": "0.3939", "loss": "2.9451", "code": "t hashCode(){h=9*  (th);h =  (thi ? e() : 0); }", "n_tokens": 47, "n_pass": [374, 42, 34]}
{"time": "2021-02-22 02:10:05.384934", "score": "0.3939", "loss": "2.9451", "code": "t hashCode(){h=9* (th);h =  (thi ? e() : 0); }", "n_tokens": 46, "n_pass": [376, 43, 35]}
{"time": "2021-02-22 02:10:08.055137", "score": "0.3939", "loss": "2.9451", "code": "t hashCode(){h=9*(th);h =  (thi ? e() : 0); }", "n_tokens": 45, "n_pass": [377, 44, 36]}
{"time": "2021-02-22 02:10:10.673251", "score": "0.3691", "loss": "2.9585", "code": "t hashCode(){h=9*(h);h =  (thi ? e() : 0); }", "n_tokens": 44, "n_pass": [379, 45, 37]}
{"time": "2021-02-22 02:10:13.738392", "score": "0.3691", "loss": "2.9585", "code": "t hashCode(){h=9*(h);h=  (thi ? e() : 0); }", "n_tokens": 43, "n_pass": [384, 46, 38]}
{"time": "2021-02-22 02:10:18.995933", "score": "0.3691", "loss": "2.9585", "code": "t hashCode(){h=9*(h);h= (thi ? e() : 0); }", "n_tokens": 42, "n_pass": [386, 48, 39]}
{"time": "2021-02-22 02:10:21.631670", "score": "0.3691", "loss": "2.9585", "code": "t hashCode(){h=9*(h);h=(thi ? e() : 0); }", "n_tokens": 41, "n_pass": [387, 49, 40]}
{"time": "2021-02-22 02:10:32.179739", "score": "0.3691", "loss": "2.9585", "code": "t hashCode(){h=9*(h);h=(thi? e() : 0); }", "n_tokens": 40, "n_pass": [392, 53, 41]}
{"time": "2021-02-22 02:10:34.789803", "score": "0.3691", "loss": "2.9585", "code": "t hashCode(){h=9*(h);h=(thi?e() : 0); }", "n_tokens": 39, "n_pass": [394, 54, 42]}
{"time": "2021-02-22 02:10:37.431901", "score": "0.3691", "loss": "2.9585", "code": "t hashCode(){h=9*(h);h=(thi?e(): 0); }", "n_tokens": 38, "n_pass": [398, 55, 43]}
{"time": "2021-02-22 02:10:40.056911", "score": "0.3691", "loss": "2.9585", "code": "t hashCode(){h=9*(h);h=(thi?e():0); }", "n_tokens": 37, "n_pass": [400, 56, 44]}
{"time": "2021-02-22 02:10:42.889123", "score": "0.3691", "loss": "2.9585", "code": "t hashCode(){h=9*(h);h=(thi?e():0);}", "n_tokens": 36, "n_pass": [404, 57, 45]}

Minimal simplified code:
t hashCode(){h=9*(h);h=(thi?e():0);}

