
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/jmockit__jmockit1/main/src/com/sun/tools/attach/VirtualMachineDescriptor_toString.java
method_name = toString
method_body = public String toString() { String s = provider.toString() + ": " + id; if (displayName != id) { s += " " + displayName; } return s; }
predict, score, loss = toString, 0.9720758199691772, 0.030384449288249016

Trace of simplified code(s):
{"time": "2021-02-24 23:57:27.200753", "score": "0.9721", "loss": "0.0304", "code": "public String toString() { String s = provider.toString() + \": \" + id; if (displayName != id) { s += \" \" + displayName; } return s; }", "n_tokens": 133, "n_pass": [1, 1, 1]}
{"time": "2021-02-24 23:57:29.981869", "score": "0.8613", "loss": "0.1553", "code": "public String toString() { String id; if (displayName != id) { s += \" \" + displayName; } return s; }", "n_tokens": 100, "n_pass": [9, 2, 2]}
{"time": "2021-02-24 23:57:36.304371", "score": "0.9607", "loss": "0.0486", "code": "public String toString() { String id; if (displayName != id) { s += \" \" +ame; } return s; }", "n_tokens": 91, "n_pass": [41, 4, 3]}
{"time": "2021-02-24 23:57:42.157019", "score": "0.474", "loss": "0.8091", "code": "public String toString() { String id; if (displayName != id) { same; } return s; }", "n_tokens": 82, "n_pass": [52, 6, 4]}
{"time": "2021-02-24 23:58:08.260199", "score": "0.627", "loss": "0.4913", "code": "public String toString() { String id; if (displayName != id) { se; } return s; }", "n_tokens": 80, "n_pass": [143, 15, 5]}
{"time": "2021-02-24 23:58:16.367530", "score": "0.5328", "loss": "0.6821", "code": "public String toString() { String id; if (displayName != id) { se; } retn s; }", "n_tokens": 78, "n_pass": [147, 18, 6]}
{"time": "2021-02-24 23:58:40.413472", "score": "0.5418", "loss": "0.6523", "code": "public String toString() { Strinid; if (displayName != id) { se; } retn s; }", "n_tokens": 76, "n_pass": [166, 26, 7]}
{"time": "2021-02-24 23:58:43.123630", "score": "0.5805", "loss": "0.6077", "code": "public String toString() { Strin; if (displayName != id) { se; } retn s; }", "n_tokens": 74, "n_pass": [167, 27, 8]}
{"time": "2021-02-24 23:59:02.329491", "score": "0.6554", "loss": "0.4937", "code": "public String toString() { Strin; if (displayName !=d) { se; } retn s; }", "n_tokens": 72, "n_pass": [178, 34, 9]}
{"time": "2021-02-24 23:59:05.048164", "score": "0.6825", "loss": "0.4587", "code": "public String toString() { Strin; if (displayName !=d) {e; } retn s; }", "n_tokens": 70, "n_pass": [181, 35, 10]}
{"time": "2021-02-24 23:59:07.764248", "score": "0.6674", "loss": "0.4662", "code": "public String toString() { Strin; if (displayName !=d) { } retn s; }", "n_tokens": 68, "n_pass": [182, 36, 11]}
{"time": "2021-02-24 23:59:10.490286", "score": "0.5712", "loss": "0.6178", "code": "public String toString() { Strin; if (displayName !=d) { }etn s; }", "n_tokens": 66, "n_pass": [184, 37, 12]}
{"time": "2021-02-24 23:59:28.918401", "score": "0.686", "loss": "0.4341", "code": "public String toString() {trin; if (displayName !=d) { }etn s; }", "n_tokens": 64, "n_pass": [201, 43, 13]}
{"time": "2021-02-24 23:59:34.479203", "score": "0.5239", "loss": "0.6713", "code": "public String toString() {tr; if (displayName !=d) { }etn s; }", "n_tokens": 62, "n_pass": [203, 45, 14]}
{"time": "2021-02-25 00:00:15.427708", "score": "0.5239", "loss": "0.6713", "code": "public String toString() {tr;if (displayName !=d) { }etn s; }", "n_tokens": 61, "n_pass": [295, 58, 15]}
{"time": "2021-02-25 00:00:18.163548", "score": "0.5239", "loss": "0.6713", "code": "public String toString() {tr;if(displayName !=d) { }etn s; }", "n_tokens": 60, "n_pass": [298, 59, 16]}
{"time": "2021-02-25 00:00:28.919353", "score": "0.6086", "loss": "0.5152", "code": "public String toString() {tr;if(dislayName !=d) { }etn s; }", "n_tokens": 59, "n_pass": [303, 63, 17]}
{"time": "2021-02-25 00:00:50.474982", "score": "0.6086", "loss": "0.5152", "code": "public String toString() {tr;if(dislayName!=d) { }etn s; }", "n_tokens": 58, "n_pass": [311, 71, 18]}
{"time": "2021-02-25 00:00:55.827952", "score": "0.6086", "loss": "0.5152", "code": "public String toString() {tr;if(dislayName!=d){ }etn s; }", "n_tokens": 57, "n_pass": [316, 73, 19]}
{"time": "2021-02-25 00:00:58.493583", "score": "0.6086", "loss": "0.5152", "code": "public String toString() {tr;if(dislayName!=d){}etn s; }", "n_tokens": 56, "n_pass": [318, 74, 20]}
{"time": "2021-02-25 00:01:01.159019", "score": "0.5348", "loss": "0.6375", "code": "public String toString() {tr;if(dislayName!=d){}tn s; }", "n_tokens": 55, "n_pass": [320, 75, 21]}
{"time": "2021-02-25 00:01:03.827439", "score": "0.5096", "loss": "0.6853", "code": "public String toString() {tr;if(dislayName!=d){}n s; }", "n_tokens": 54, "n_pass": [321, 76, 22]}
{"time": "2021-02-25 00:01:06.540032", "score": "0.49", "loss": "0.7215", "code": "public String toString() {tr;if(dislayName!=d){} s; }", "n_tokens": 53, "n_pass": [322, 77, 23]}
{"time": "2021-02-25 00:01:09.233138", "score": "0.49", "loss": "0.7215", "code": "public String toString() {tr;if(dislayName!=d){}s; }", "n_tokens": 52, "n_pass": [323, 78, 24]}
{"time": "2021-02-25 00:01:30.847576", "score": "0.4712", "loss": "1.4578", "code": "public Strin toString() {tr;if(dislayName!=d){}s; }", "n_tokens": 51, "n_pass": [338, 86, 25]}
{"time": "2021-02-25 00:01:37.308469", "score": "0.4712", "loss": "1.4578", "code": "public Strin toString(){tr;if(dislayName!=d){}s; }", "n_tokens": 50, "n_pass": [350, 87, 26]}
{"time": "2021-02-25 00:01:40.018849", "score": "0.4653", "loss": "1.4722", "code": "public Strin toString(){r;if(dislayName!=d){}s; }", "n_tokens": 49, "n_pass": [352, 88, 27]}
{"time": "2021-02-25 00:01:42.689700", "score": "0.4631", "loss": "1.4752", "code": "public Strin toString(){;if(dislayName!=d){}s; }", "n_tokens": 48, "n_pass": [353, 89, 28]}
{"time": "2021-02-25 00:01:45.336987", "score": "0.4631", "loss": "1.4752", "code": "public Strin toString(){if(dislayName!=d){}s; }", "n_tokens": 47, "n_pass": [354, 90, 29]}
{"time": "2021-02-25 00:02:17.356441", "score": "0.4593", "loss": "1.4837", "code": "public Strin toString(){if(dislayName!=d){} }", "n_tokens": 45, "n_pass": [374, 102, 30]}
{"time": "2021-02-25 00:03:10.449755", "score": "0.4593", "loss": "1.4837", "code": "public Strin toString(){if(dislayName!=d){}}", "n_tokens": 44, "n_pass": [421, 120, 31]}

Minimal simplified code:
public Strin toString(){if(dislayName!=d){}}

