
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/OpenRock__OpenAM/openam-shared/src/main/java/com/iplanet/security/util/BigInt_equals.java
method_name = equals
method_body = public boolean equals(BigInt other) { if (this == other) return true; byte[] otherPlaces = other.toByteArray(); if (places.length != otherPlaces.length) return false; for (int i = 0; i < places.length; i++) if (places[i] != otherPlaces[i]) return false; return true; }
predict, score, loss = equals, 0.9373878836631775, 0.1499001532793045

Trace of simplified code(s):
{"time": "2021-02-22 21:01:06.462368", "score": "0.8112", "loss": "0.5765", "code": "public boolean equals(BigInt other) { if (this == other) return true; byte[] otherPlaces = other.toByteArray(); if (places.length != otherPlaces.length) return false; for (int i = 0; i < places.length; i++) if (places[i] != otherPlaces[i]) return false; return true; }", "n_tokens": 268, "n_pass": [1, 1, 1]}
{"time": "2021-02-22 21:01:09.120042", "score": "0.6035", "loss": "1.359", "code": "public boolean equals(BigInt other) { if (this == other) return trByteArray(); if (places.length != otherPlaces.length) return false; for (int i = 0; i < places.length; i++) if (places[i] != otherPlaces[i]) return false; return true; }", "n_tokens": 235, "n_pass": [22, 2, 2]}
{"time": "2021-02-22 21:01:11.771709", "score": "0.8198", "loss": "0.5093", "code": "public boolean equals(BigInt other) { if (this == other) return trByteArray(); if (places.length !=th) return false; for (int i = 0; i < places.length; i++) if (places[i] != otherPlaces[i]) return false; return true; }", "n_tokens": 218, "n_pass": [46, 3, 3]}
{"time": "2021-02-22 21:01:14.430242", "score": "0.6967", "loss": "0.988", "code": "public boolean equals(BigInt other) { if (this == other) return trByteArray(); if (places.length !=th) return false; for (int i = 0; ; i++) if (places[i] != otherPlaces[i]) return false; return true; }", "n_tokens": 201, "n_pass": [48, 4, 4]}
{"time": "2021-02-22 21:01:17.053885", "score": "0.3961", "loss": "1.7803", "code": "public boolean equals(BigInt other) { if (this == other) return trByteArray(); if (places.length !=th) return false; for (int i = 0; ; i++) if (placess[i]) return false; return true; }", "n_tokens": 184, "n_pass": [50, 5, 5]}
{"time": "2021-02-22 21:01:20.148413", "score": "0.7267", "loss": "0.7905", "code": "public boolean equals(BigInt other) { if (this == other) return trByteArray(); if (places.length !=th) return false; for (int i = 0; ; i++) if (placess[i]) rse; return true; }", "n_tokens": 175, "n_pass": [85, 6, 6]}
{"time": "2021-02-22 21:01:22.786826", "score": "0.5761", "loss": "1.3634", "code": "oolean equals(BigInt other) { if (this == other) return trByteArray(); if (places.length !=th) return false; for (int i = 0; ; i++) if (placess[i]) rse; return true; }", "n_tokens": 167, "n_pass": [88, 7, 7]}
{"time": "2021-02-22 21:01:25.839128", "score": "0.5611", "loss": "0.9623", "code": "oolean equals(BigInt other) { if (this == other)trByteArray(); if (places.length !=th) return false; for (int i = 0; ; i++) if (placess[i]) rse; return true; }", "n_tokens": 159, "n_pass": [95, 8, 8]}
{"time": "2021-02-22 21:01:28.523773", "score": "0.5055", "loss": "1.1505", "code": "oolean equals(BigInt other) { if (this == other)ray(); if (places.length !=th) return false; for (int i = 0; ; i++) if (placess[i]) rse; return true; }", "n_tokens": 151, "n_pass": [96, 9, 9]}
{"time": "2021-02-22 21:01:31.147664", "score": "0.5696", "loss": "1.0611", "code": "oolean equals(BigInt other) { if (this == other)ray(); if (place !=th) return false; for (int i = 0; ; i++) if (placess[i]) rse; return true; }", "n_tokens": 143, "n_pass": [99, 10, 10]}
{"time": "2021-02-22 21:01:36.803101", "score": "0.409", "loss": "1.5804", "code": "oolean equals(BigInt other) { if (this == other)ray(); if (placeh) return false; for (int i = 0; ; i++) if (placess[i]) rse; return true; }", "n_tokens": 139, "n_pass": [151, 12, 11]}
{"time": "2021-02-22 21:01:42.066749", "score": "0.389", "loss": "1.6325", "code": "oolean equals(BigInt other) { if (this == other)ray(); if (placeh) return false; for (in= 0; ; i++) if (placess[i]) rse; return true; }", "n_tokens": 135, "n_pass": [157, 14, 12]}
{"time": "2021-02-22 21:01:44.696136", "score": "0.3907", "loss": "1.6202", "code": "oolean equals(BigInt other) { if (this == other)ray(); if (placeh) return false; for (in= 0; ; i++) if (ps[i]) rse; return true; }", "n_tokens": 130, "n_pass": [162, 15, 13]}
{"time": "2021-02-22 21:01:47.339004", "score": "0.3489", "loss": "1.6348", "code": "oolean equals(BigInt other) { if (this == other)ray(); if (placeh) return false; for (in= 0; ; i++) if (ps[i]) return true; }", "n_tokens": 125, "n_pass": [164, 16, 14]}
{"time": "2021-02-22 21:01:49.955270", "score": "0.3229", "loss": "1.6684", "code": "oolean equals(BigInt other) { if (this == other)ray(); if (placeh) return false; for (in= 0; ; i++) if (ps[i]) retuue; }", "n_tokens": 120, "n_pass": [166, 17, 15]}
{"time": "2021-02-22 21:01:52.572167", "score": "0.6036", "loss": "0.8279", "code": "an equals(BigInt other) { if (this == other)ray(); if (placeh) return false; for (in= 0; ; i++) if (ps[i]) retuue; }", "n_tokens": 116, "n_pass": [168, 18, 16]}
{"time": "2021-02-22 21:01:55.990031", "score": "0.8594", "loss": "0.2643", "code": "an equals(Bi other) { if (this == other)ray(); if (placeh) return false; for (in= 0; ; i++) if (ps[i]) retuue; }", "n_tokens": 112, "n_pass": [172, 19, 17]}
{"time": "2021-02-22 21:01:58.605457", "score": "0.4505", "loss": "1.8576", "code": "an equals(Bi other) { if (th= other)ray(); if (placeh) return false; for (in= 0; ; i++) if (ps[i]) retuue; }", "n_tokens": 108, "n_pass": [177, 20, 18]}
{"time": "2021-02-22 21:02:01.215382", "score": "0.4155", "loss": "2.5203", "code": "an equals(Bi other) { if (thher)ray(); if (placeh) return false; for (in= 0; ; i++) if (ps[i]) retuue; }", "n_tokens": 104, "n_pass": [178, 21, 19]}
{"time": "2021-02-22 21:02:03.835549", "score": "0.622", "loss": "2.3592", "code": "an equals(Bi other) { if (thher)ray(); if (ph) return false; for (in= 0; ; i++) if (ps[i]) retuue; }", "n_tokens": 100, "n_pass": [183, 22, 20]}
{"time": "2021-02-22 21:02:09.072666", "score": "0.5421", "loss": "2.7165", "code": "an equals(Bi other) { if (thher)ray(); if (ph) return false; for (in= 0; ; i++) if (ps[i])ue; }", "n_tokens": 95, "n_pass": [195, 24, 21]}
{"time": "2021-02-22 21:02:12.472392", "score": "0.141", "loss": "4.0974", "code": "an equals(Bi other) { if (thher)ray(); if (ph) returlse; for (in= 0; ; i++) if (ps[i])ue; }", "n_tokens": 91, "n_pass": [210, 25, 22]}
{"time": "2021-02-22 21:02:15.889023", "score": "0.141", "loss": "4.0974", "code": "an equals(Bi other) { if (thher)ray(); if (ph) rlse; for (in= 0; ; i++) if (ps[i])ue; }", "n_tokens": 87, "n_pass": [232, 26, 23]}
{"time": "2021-02-22 21:02:24.908504", "score": "0.1454", "loss": "4.042", "code": "an equals(Bi other) { if (thher)ray(); if (ph) rlse; for (in= 0; ; i) if (ps[i])ue; }", "n_tokens": 85, "n_pass": [306, 29, 24]}
{"time": "2021-02-22 21:02:27.510605", "score": "0.1497", "loss": "4.0637", "code": "an equals(Bi other) { if (thher)ray(); if (ph) rlse; for (in= 0; ; i) if (ps)ue; }", "n_tokens": 82, "n_pass": [310, 30, 25]}
{"time": "2021-02-22 21:02:34.299036", "score": "0.351", "loss": "2.6546", "code": "an equals(Bi oth) { if (thher)ray(); if (ph) rlse; for (in= 0; ; i) if (ps)ue; }", "n_tokens": 80, "n_pass": [321, 32, 26]}
{"time": "2021-02-22 21:02:42.543442", "score": "0.3071", "loss": "2.2582", "code": "an equals(Bi oth) { if (thher)y(); if (ph) rlse; for (in= 0; ; i) if (ps)ue; }", "n_tokens": 78, "n_pass": [329, 35, 27]}
{"time": "2021-02-22 21:02:45.184662", "score": "0.2895", "loss": "2.732", "code": "an equals(Bi oth) { if (thher)y(); if (ph)lse; for (in= 0; ; i) if (ps)ue; }", "n_tokens": 76, "n_pass": [336, 36, 28]}
{"time": "2021-02-22 21:02:47.793036", "score": "0.2945", "loss": "2.2953", "code": "an equals(Bi oth) { if (thher)y(); if (ph)e; for (in= 0; ; i) if (ps)ue; }", "n_tokens": 74, "n_pass": [337, 37, 29]}
{"time": "2021-02-22 21:02:50.392564", "score": "0.2719", "loss": "2.2565", "code": "an equals(Bi oth) { if (thher)y(); if (ph) for (in= 0; ; i) if (ps)ue; }", "n_tokens": 72, "n_pass": [338, 38, 30]}
{"time": "2021-02-22 21:02:52.998566", "score": "0.256", "loss": "2.3136", "code": "an equals(Bi oth) { if (thher)y(); if (ph) for (in0; ; i) if (ps)ue; }", "n_tokens": 70, "n_pass": [343, 39, 31]}
{"time": "2021-02-22 21:02:55.610808", "score": "0.2514", "loss": "2.3333", "code": "an equals(Bi oth) { if (thher)y(); if (ph) for (in0; ;) if (ps)ue; }", "n_tokens": 68, "n_pass": [346, 40, 32]}
{"time": "2021-02-22 21:03:08.345225", "score": "0.2492", "loss": "2.3209", "code": "an equals(Bi oth) { if (thher)y(); if (ph) for (0; ;) if (ps)ue; }", "n_tokens": 66, "n_pass": [377, 44, 33]}
{"time": "2021-02-22 21:03:26.426941", "score": "0.235", "loss": "2.38", "code": "an equals(Bi oth) { if (thher)y(); if (ph) for (; ;) if (ps)ue; }", "n_tokens": 65, "n_pass": [474, 48, 34]}
{"time": "2021-02-22 21:03:29.032287", "score": "0.235", "loss": "2.38", "code": "an equals(Bi oth) { if (thher)y(); if (ph) for (;;) if (ps)ue; }", "n_tokens": 64, "n_pass": [475, 49, 35]}
{"time": "2021-02-22 21:03:31.618931", "score": "0.235", "loss": "2.38", "code": "an equals(Bi oth) { if (thher)y(); if (ph) for (;;)if (ps)ue; }", "n_tokens": 63, "n_pass": [478, 50, 36]}
{"time": "2021-02-22 21:03:34.230289", "score": "0.235", "loss": "2.38", "code": "an equals(Bi oth) { if (thher)y(); if (ph) for (;;)if(ps)ue; }", "n_tokens": 62, "n_pass": [481, 51, 37]}
{"time": "2021-02-22 21:03:36.832939", "score": "0.2363", "loss": "2.3621", "code": "an equals(Bi oth) { if (thher)y(); if (ph) for (;;)if(s)ue; }", "n_tokens": 61, "n_pass": [483, 52, 38]}
{"time": "2021-02-22 21:03:39.423150", "score": "0.2225", "loss": "2.3936", "code": "an equals(Bi oth) { if (thher)y(); if (ph) for (;;)if(s)e; }", "n_tokens": 60, "n_pass": [486, 53, 39]}
{"time": "2021-02-22 21:04:02.933692", "score": "0.2225", "loss": "2.3936", "code": "an equals(Bi oth){ if (thher)y(); if (ph) for (;;)if(s)e; }", "n_tokens": 59, "n_pass": [506, 61, 40]}
{"time": "2021-02-22 21:04:05.551668", "score": "0.2225", "loss": "2.3936", "code": "an equals(Bi oth){if (thher)y(); if (ph) for (;;)if(s)e; }", "n_tokens": 58, "n_pass": [508, 62, 41]}
{"time": "2021-02-22 21:04:08.172348", "score": "0.2225", "loss": "2.3936", "code": "an equals(Bi oth){if(thher)y(); if (ph) for (;;)if(s)e; }", "n_tokens": 57, "n_pass": [511, 63, 42]}
{"time": "2021-02-22 21:04:10.769886", "score": "0.2225", "loss": "2.3936", "code": "an equals(Bi oth){if(hher)y(); if (ph) for (;;)if(s)e; }", "n_tokens": 56, "n_pass": [513, 64, 43]}
{"time": "2021-02-22 21:04:18.554006", "score": "0.2225", "loss": "2.3936", "code": "an equals(Bi oth){if(hhr)y(); if (ph) for (;;)if(s)e; }", "n_tokens": 55, "n_pass": [516, 67, 44]}
{"time": "2021-02-22 21:04:23.769129", "score": "0.2225", "loss": "2.3936", "code": "an equals(Bi oth){if(hhr)y();if (ph) for (;;)if(s)e; }", "n_tokens": 54, "n_pass": [523, 69, 45]}
{"time": "2021-02-22 21:04:26.386051", "score": "0.2225", "loss": "2.3936", "code": "an equals(Bi oth){if(hhr)y();if(ph) for (;;)if(s)e; }", "n_tokens": 53, "n_pass": [526, 70, 46]}
{"time": "2021-02-22 21:04:34.195703", "score": "0.2225", "loss": "2.3936", "code": "an equals(Bi oth){if(hhr)y();if(ph)for (;;)if(s)e; }", "n_tokens": 52, "n_pass": [531, 73, 47]}
{"time": "2021-02-22 21:04:36.793947", "score": "0.2225", "loss": "2.3936", "code": "an equals(Bi oth){if(hhr)y();if(ph)for(;;)if(s)e; }", "n_tokens": 51, "n_pass": [535, 74, 48]}
{"time": "2021-02-22 21:05:13.995840", "score": "0.2264", "loss": "2.3731", "code": "an equals(Bi oth){if(hhr)y();if(ph)for(;;)if(s); }", "n_tokens": 50, "n_pass": [589, 87, 49]}
{"time": "2021-02-22 21:05:16.596014", "score": "0.2264", "loss": "2.3731", "code": "an equals(Bi oth){if(hhr)y();if(ph)for(;;)if(s);}", "n_tokens": 49, "n_pass": [590, 88, 50]}
{"time": "2021-02-22 21:05:53.094334", "score": "0.1966", "loss": "2.5507", "code": "an equals(Bi oth){if(hhr)y();if(ph)for(;;)f(s);}", "n_tokens": 48, "n_pass": [634, 101, 51]}
{"time": "2021-02-22 21:05:55.701136", "score": "0.2253", "loss": "2.3786", "code": "an equals(Bi oth){if(hhr)y();if(ph)for(;;)(s);}", "n_tokens": 47, "n_pass": [635, 102, 52]}

Minimal simplified code:
an equals(Bi oth){if(hhr)y();if(ph)for(;;)(s);}

