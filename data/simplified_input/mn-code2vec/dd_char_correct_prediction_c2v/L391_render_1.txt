
path = /scratch/rabin/data/code2vec/transforms/Methods/java-large/test/mbrlabs__Mundus/commons/src/main/com/mbrlabs/mundus/commons/scene3d/GameObject_render.java
method_name = render
method_body = public void render(float delta) { if (active) { for (Component component : this.components) { component.render(delta); } if (getChildren() != null) { for (GameObject node : getChildren()) { node.render(delta); } } } }
predict, score, loss = render, 0.9649978876113892, 0.04388519376516342

Trace of simplified code(s):
{"time": "2021-05-26 05:34:23.205776", "score": "0.965", "loss": "0.0439", "code": "public void render(float delta) { if (active) { for (Component component : this.components) { component.render(delta); } if (getChildren() != null) { for (GameObject node : getChildren()) { node.render(delta); } } } }", "n_tokens": 217, "n_pass": [1, 1, 1]}
{"time": "2021-05-26 05:34:26.465561", "score": "0.965", "loss": "0.0439", "code": " void render(float delta) { if (active) { for (Component component : this.components) { component.render(delta); } if (getChildren() != null) { for (GameObject node : getChildren()) { node.render(delta); } } } }", "n_tokens": 211, "n_pass": [92, 2, 2]}
{"time": "2021-05-26 05:34:29.710974", "score": "0.9652", "loss": "0.0436", "code": " void render(float delta) { if (active) { for (Component nt : this.components) { component.render(delta); } if (getChildren() != null) { for (GameObject node : getChildren()) { node.render(delta); } } } }", "n_tokens": 204, "n_pass": [102, 3, 3]}
{"time": "2021-05-26 05:34:32.440098", "score": "0.9841", "loss": "0.0175", "code": " void render(float delta) { if (active) { for (Component nt : thonents) { component.render(delta); } if (getChildren() != null) { for (GameObject node : getChildren()) { node.render(delta); } } } }", "n_tokens": 197, "n_pass": [104, 4, 4]}
{"time": "2021-05-26 05:34:35.186889", "score": "0.8883", "loss": "0.1254", "code": " void render(float delta) { if (active) { for (Component nt : thonents) { compender(delta); } if (getChildren() != null) { for (GameObject node : getChildren()) { node.render(delta); } } } }", "n_tokens": 190, "n_pass": [107, 5, 5]}
{"time": "2021-05-26 05:34:37.946285", "score": "0.9131", "loss": "0.0952", "code": " void render(float delta) { if (active) { for (Component nt : thonents) { compender(delta); } if (gren() != null) { for (GameObject node : getChildren()) { node.render(delta); } } } }", "n_tokens": 183, "n_pass": [111, 6, 6]}
{"time": "2021-05-26 05:34:40.663126", "score": "0.9238", "loss": "0.0841", "code": " void render(float delta) { if (active) { for (Component nt : thonents) { compender(delta); } if (g= null) { for (GameObject node : getChildren()) { node.render(delta); } } } }", "n_tokens": 176, "n_pass": [112, 7, 7]}
{"time": "2021-05-26 05:34:43.337768", "score": "0.8645", "loss": "0.156", "code": " void render(float delta) { if (active) { for (Component nt : thonents) { compender(delta); } if (g= null) { for (GameObject node : geen()) { node.render(delta); } } } }", "n_tokens": 169, "n_pass": [118, 8, 8]}
{"time": "2021-05-26 05:34:49.175351", "score": "0.8732", "loss": "0.1459", "code": " void render(float delta) { if (active) { for (Component nt : thonents) { compender(delta); } if (g= null) { for (GameObject node : geen()) {e.render(delta); } } } }", "n_tokens": 165, "n_pass": [197, 10, 9]}
{"time": "2021-05-26 05:34:57.365860", "score": "0.503", "loss": "0.7516", "code": "id render(float delta) { if (active) { for (Component nt : thonents) { compender(delta); } if (g= null) { for (GameObject node : geen()) {e.render(delta); } } } }", "n_tokens": 162, "n_pass": [204, 13, 10]}
{"time": "2021-05-26 05:35:04.081691", "score": "0.8446", "loss": "0.2074", "code": "id render(float de) { if (active) { for (Component nt : thonents) { compender(delta); } if (g= null) { for (GameObject node : geen()) {e.render(delta); } } } }", "n_tokens": 159, "n_pass": [211, 15, 11]}
{"time": "2021-05-26 05:35:09.461684", "score": "0.8478", "loss": "0.2011", "code": "id render(float de) { if (active) { for (Conent nt : thonents) { compender(delta); } if (g= null) { for (GameObject node : geen()) {e.render(delta); } } } }", "n_tokens": 156, "n_pass": [220, 17, 12]}
{"time": "2021-05-26 05:35:12.181472", "score": "0.8341", "loss": "0.2212", "code": "id render(float de) { if (active) { for (Cnt nt : thonents) { compender(delta); } if (g= null) { for (GameObject node : geen()) {e.render(delta); } } } }", "n_tokens": 153, "n_pass": [221, 18, 13]}
{"time": "2021-05-26 05:35:14.910382", "score": "0.8341", "loss": "0.2212", "code": "id render(float de) { if (active) { for (Cnt nt : tents) { compender(delta); } if (g= null) { for (GameObject node : geen()) {e.render(delta); } } } }", "n_tokens": 150, "n_pass": [225, 19, 14]}
{"time": "2021-05-26 05:35:17.629717", "score": "0.8265", "loss": "0.231", "code": "id render(float de) { if (active) { for (Cnt nt : ts) { compender(delta); } if (g= null) { for (GameObject node : geen()) {e.render(delta); } } } }", "n_tokens": 147, "n_pass": [226, 20, 15]}
{"time": "2021-05-26 05:35:20.348911", "score": "0.8265", "loss": "0.231", "code": "id render(float de) { if (active) { for (Cnt nt : ts) { cender(delta); } if (g= null) { for (GameObject node : geen()) {e.render(delta); } } } }", "n_tokens": 144, "n_pass": [229, 21, 16]}
{"time": "2021-05-26 05:35:23.094550", "score": "0.7445", "loss": "0.359", "code": "id render(float de) { if (active) { for (Cnt nt : ts) { cer(delta); } if (g= null) { for (GameObject node : geen()) {e.render(delta); } } } }", "n_tokens": 141, "n_pass": [230, 22, 17]}
{"time": "2021-05-26 05:35:25.834835", "score": "0.86", "loss": "0.2092", "code": "id render(float de) { if (active) { for (Cnt nt : ts) { cer(ta); } if (g= null) { for (GameObject node : geen()) {e.render(delta); } } } }", "n_tokens": 138, "n_pass": [232, 23, 18]}
{"time": "2021-05-26 05:35:28.517796", "score": "0.865", "loss": "0.1903", "code": "id render(float de) { if (active) { for (Cnt nt : ts) { cer(ta); } if (g= null) { for (Gamect node : geen()) {e.render(delta); } } } }", "n_tokens": 134, "n_pass": [241, 24, 19]}
{"time": "2021-05-26 05:35:37.873998", "score": "0.6345", "loss": "0.7724", "code": "id render(fl de) { if (active) { for (Cnt nt : ts) { cer(ta); } if (g= null) { for (Gamect node : geen()) {e.render(delta); } } } }", "n_tokens": 131, "n_pass": [257, 27, 20]}
{"time": "2021-05-26 05:35:52.110786", "score": "0.6554", "loss": "0.6535", "code": "id render(l de) { if (active) { for (Cnt nt : ts) { cer(ta); } if (g= null) { for (Gamect node : geen()) {e.render(delta); } } } }", "n_tokens": 130, "n_pass": [374, 31, 21]}
{"time": "2021-05-26 05:35:54.800780", "score": "0.4415", "loss": "1.2881", "code": "id render(l e) { if (active) { for (Cnt nt : ts) { cer(ta); } if (g= null) { for (Gamect node : geen()) {e.render(delta); } } } }", "n_tokens": 129, "n_pass": [377, 32, 22]}
{"time": "2021-05-26 05:35:57.558527", "score": "0.4415", "loss": "1.2881", "code": "id render(l e){ if (active) { for (Cnt nt : ts) { cer(ta); } if (g= null) { for (Gamect node : geen()) {e.render(delta); } } } }", "n_tokens": 128, "n_pass": [380, 33, 23]}
{"time": "2021-05-26 05:36:00.307782", "score": "0.4415", "loss": "1.2881", "code": "id render(l e){if (active) { for (Cnt nt : ts) { cer(ta); } if (g= null) { for (Gamect node : geen()) {e.render(delta); } } } }", "n_tokens": 127, "n_pass": [382, 34, 24]}
{"time": "2021-05-26 05:36:03.000137", "score": "0.5255", "loss": "1.0854", "code": "id render(l e){if (tive) { for (Cnt nt : ts) { cer(ta); } if (g= null) { for (Gamect node : geen()) {e.render(delta); } } } }", "n_tokens": 125, "n_pass": [386, 35, 25]}
{"time": "2021-05-26 05:36:05.676227", "score": "0.5236", "loss": "1.1355", "code": "id render(l e){if (ve) { for (Cnt nt : ts) { cer(ta); } if (g= null) { for (Gamect node : geen()) {e.render(delta); } } } }", "n_tokens": 123, "n_pass": [387, 36, 26]}
{"time": "2021-05-26 05:36:08.404824", "score": "0.5572", "loss": "1.0459", "code": "id render(l e){if (ve) { for (C nt : ts) { cer(ta); } if (g= null) { for (Gamect node : geen()) {e.render(delta); } } } }", "n_tokens": 121, "n_pass": [394, 37, 27]}
{"time": "2021-05-26 05:36:11.168536", "score": "0.5532", "loss": "1.0563", "code": "id render(l e){if (ve) { for (C n: ts) { cer(ta); } if (g= null) { for (Gamect node : geen()) {e.render(delta); } } } }", "n_tokens": 119, "n_pass": [396, 38, 28]}
{"time": "2021-05-26 05:36:13.847042", "score": "0.6069", "loss": "0.9099", "code": "id render(l e){if (ve) { for (C n: ts) { r(ta); } if (g= null) { for (Gamect node : geen()) {e.render(delta); } } } }", "n_tokens": 117, "n_pass": [401, 39, 29]}
{"time": "2021-05-26 05:36:16.538712", "score": "0.6387", "loss": "0.8336", "code": "id render(l e){if (ve) { for (C n: ts) { r(); } if (g= null) { for (Gamect node : geen()) {e.render(delta); } } } }", "n_tokens": 115, "n_pass": [403, 40, 30]}
{"time": "2021-05-26 05:36:21.949675", "score": "0.5822", "loss": "0.9188", "code": "id render(l e){if (ve) { for (C n: ts) { r(); } if (g= ll) { for (Gamect node : geen()) {e.render(delta); } } } }", "n_tokens": 113, "n_pass": [410, 42, 31]}
{"time": "2021-05-26 05:36:24.700097", "score": "0.5822", "loss": "0.9188", "code": "id render(l e){if (ve) { for (C n: ts) { r(); } if (g= ll) { for (Gect node : geen()) {e.render(delta); } } } }", "n_tokens": 111, "n_pass": [417, 43, 32]}
{"time": "2021-05-26 05:36:27.413994", "score": "0.4908", "loss": "1.127", "code": "id render(l e){if (ve) { for (C n: ts) { r(); } if (g= ll) { for (Gt node : geen()) {e.render(delta); } } } }", "n_tokens": 109, "n_pass": [418, 44, 33]}
{"time": "2021-05-26 05:36:30.086746", "score": "0.4891", "loss": "1.1326", "code": "id render(l e){if (ve) { for (C n: ts) { r(); } if (g= ll) { for (Gt de : geen()) {e.render(delta); } } } }", "n_tokens": 107, "n_pass": [420, 45, 34]}
{"time": "2021-05-26 05:36:32.796533", "score": "0.714", "loss": "0.6282", "code": "id render(l e){if (ve) { for (C n: ts) { r(); } if (g= ll) { for (Gt de :een()) {e.render(delta); } } } }", "n_tokens": 105, "n_pass": [423, 46, 35]}
{"time": "2021-05-26 05:36:54.499954", "score": "0.8945", "loss": "0.1502", "code": "d render(l e){if (ve) { for (C n: ts) { r(); } if (g= ll) { for (Gt de :een()) {e.render(delta); } } } }", "n_tokens": 104, "n_pass": [440, 54, 36]}
{"time": "2021-05-26 05:37:00.647800", "score": "0.9123", "loss": "0.1583", "code": "d render(l e){if (ve) { for (C n: ts) { r(); } if (gll) { for (Gt de :een()) {e.render(delta); } } } }", "n_tokens": 102, "n_pass": [475, 55, 37]}
{"time": "2021-05-26 05:37:03.392436", "score": "0.8925", "loss": "0.1473", "code": "d render(l e){if (ve) { for (C n: ts) { r(); } if (g) { for (Gt de :een()) {e.render(delta); } } } }", "n_tokens": 100, "n_pass": [476, 56, 38]}
{"time": "2021-05-26 05:37:06.071971", "score": "0.7042", "loss": "0.3901", "code": "d render(l e){if (ve) { for (C n: ts) { r(); } if (g) { for (Gt de :n()) {e.render(delta); } } } }", "n_tokens": 98, "n_pass": [485, 57, 39]}
{"time": "2021-05-26 05:37:37.147011", "score": "0.7042", "loss": "0.3901", "code": "d render(l e){if (ve) { for (C n: ts) { r(); } if (g) { for (Gt de :n()){e.render(delta); } } } }", "n_tokens": 97, "n_pass": [625, 64, 40]}
{"time": "2021-05-26 05:38:09.498417", "score": "0.6449", "loss": "0.5293", "code": "d render(l e){if (ve) { for (C n: ts) { r(); } if (g) { for (Gt de :n()){e.render(delt); } } } }", "n_tokens": 96, "n_pass": [639, 76, 41]}
{"time": "2021-05-26 05:38:12.195654", "score": "0.6449", "loss": "0.5293", "code": "d render(l e){if (ve) { for (C n: ts) { r(); } if (g) { for (Gt de :n()){e.render(delt);} } } }", "n_tokens": 95, "n_pass": [642, 77, 42]}
{"time": "2021-05-26 05:38:14.855339", "score": "0.6449", "loss": "0.5293", "code": "d render(l e){if (ve) { for (C n: ts) { r(); } if (g) { for (Gt de :n()){e.render(delt);}} } }", "n_tokens": 94, "n_pass": [644, 78, 43]}
{"time": "2021-05-26 05:38:17.577289", "score": "0.6449", "loss": "0.5293", "code": "d render(l e){if (ve) { for (C n: ts) { r(); } if (g) { for (Gt de :n()){e.render(delt);}}} }", "n_tokens": 93, "n_pass": [646, 79, 44]}
{"time": "2021-05-26 05:38:20.237120", "score": "0.6449", "loss": "0.5293", "code": "d render(l e){if (ve) { for (C n: ts) { r(); } if (g) { for (Gt de :n()){e.render(delt);}}}}", "n_tokens": 92, "n_pass": [648, 80, 45]}
{"time": "2021-05-26 05:38:26.285432", "score": "0.6449", "loss": "0.5293", "code": "d render(l e){if(ve) { for (C n: ts) { r(); } if (g) { for (Gt de :n()){e.render(delt);}}}}", "n_tokens": 91, "n_pass": [666, 81, 46]}
{"time": "2021-05-26 05:38:29.002706", "score": "0.668", "loss": "0.4989", "code": "d render(l e){if(e) { for (C n: ts) { r(); } if (g) { for (Gt de :n()){e.render(delt);}}}}", "n_tokens": 90, "n_pass": [668, 82, 47]}
{"time": "2021-05-26 05:38:31.669279", "score": "0.668", "loss": "0.4989", "code": "d render(l e){if(e){ for (C n: ts) { r(); } if (g) { for (Gt de :n()){e.render(delt);}}}}", "n_tokens": 89, "n_pass": [671, 83, 48]}
{"time": "2021-05-26 05:38:34.332721", "score": "0.668", "loss": "0.4989", "code": "d render(l e){if(e){for (C n: ts) { r(); } if (g) { for (Gt de :n()){e.render(delt);}}}}", "n_tokens": 88, "n_pass": [673, 84, 49]}
{"time": "2021-05-26 05:38:36.994224", "score": "0.668", "loss": "0.4989", "code": "d render(l e){if(e){for(C n: ts) { r(); } if (g) { for (Gt de :n()){e.render(delt);}}}}", "n_tokens": 87, "n_pass": [677, 85, 50]}
{"time": "2021-05-26 05:38:39.715778", "score": "0.668", "loss": "0.4989", "code": "d render(l e){if(e){for(C n:ts) { r(); } if (g) { for (Gt de :n()){e.render(delt);}}}}", "n_tokens": 86, "n_pass": [683, 86, 51]}
{"time": "2021-05-26 05:38:42.396370", "score": "0.6555", "loss": "0.5164", "code": "d render(l e){if(e){for(C n:s) { r(); } if (g) { for (Gt de :n()){e.render(delt);}}}}", "n_tokens": 85, "n_pass": [684, 87, 52]}
{"time": "2021-05-26 05:38:45.061118", "score": "0.6555", "loss": "0.5164", "code": "d render(l e){if(e){for(C n:s){ r(); } if (g) { for (Gt de :n()){e.render(delt);}}}}", "n_tokens": 84, "n_pass": [687, 88, 53]}
{"time": "2021-05-26 05:38:47.725918", "score": "0.6555", "loss": "0.5164", "code": "d render(l e){if(e){for(C n:s){r(); } if (g) { for (Gt de :n()){e.render(delt);}}}}", "n_tokens": 83, "n_pass": [689, 89, 54]}
{"time": "2021-05-26 05:38:50.412716", "score": "0.6555", "loss": "0.5164", "code": "d render(l e){if(e){for(C n:s){r();} if (g) { for (Gt de :n()){e.render(delt);}}}}", "n_tokens": 82, "n_pass": [694, 90, 55]}
{"time": "2021-05-26 05:38:53.140302", "score": "0.6555", "loss": "0.5164", "code": "d render(l e){if(e){for(C n:s){r();}if (g) { for (Gt de :n()){e.render(delt);}}}}", "n_tokens": 81, "n_pass": [696, 91, 56]}
{"time": "2021-05-26 05:38:55.878417", "score": "0.6555", "loss": "0.5164", "code": "d render(l e){if(e){for(C n:s){r();}if(g) { for (Gt de :n()){e.render(delt);}}}}", "n_tokens": 80, "n_pass": [699, 92, 57]}
{"time": "2021-05-26 05:38:58.549872", "score": "0.6555", "loss": "0.5164", "code": "d render(l e){if(e){for(C n:s){r();}if(g){ for (Gt de :n()){e.render(delt);}}}}", "n_tokens": 79, "n_pass": [703, 93, 58]}
{"time": "2021-05-26 05:39:01.475939", "score": "0.6555", "loss": "0.5164", "code": "d render(l e){if(e){for(C n:s){r();}if(g){for (Gt de :n()){e.render(delt);}}}}", "n_tokens": 78, "n_pass": [705, 94, 59]}
{"time": "2021-05-26 05:39:04.163853", "score": "0.6555", "loss": "0.5164", "code": "d render(l e){if(e){for(C n:s){r();}if(g){for(Gt de :n()){e.render(delt);}}}}", "n_tokens": 77, "n_pass": [709, 95, 60]}
{"time": "2021-05-26 05:39:06.848348", "score": "0.8019", "loss": "0.2795", "code": "d render(l e){if(e){for(C n:s){r();}if(g){for(t de :n()){e.render(delt);}}}}", "n_tokens": 76, "n_pass": [711, 96, 61]}
{"time": "2021-05-26 05:39:09.511422", "score": "0.8027", "loss": "0.2786", "code": "d render(l e){if(e){for(C n:s){r();}if(g){for(t e :n()){e.render(delt);}}}}", "n_tokens": 75, "n_pass": [714, 97, 62]}
{"time": "2021-05-26 05:39:12.182101", "score": "0.8027", "loss": "0.2786", "code": "d render(l e){if(e){for(C n:s){r();}if(g){for(t e:n()){e.render(delt);}}}}", "n_tokens": 74, "n_pass": [716, 98, 63]}
{"time": "2021-05-26 05:39:39.342637", "score": "0.7451", "loss": "0.3796", "code": "d render(l e){if(e){for(C n:s){r();}if(g){for(t e:n()){e.render(det);}}}}", "n_tokens": 73, "n_pass": [734, 108, 64]}
{"time": "2021-05-26 05:40:10.003667", "score": "0.3693", "loss": "1.1085", "code": "d render(l e){if(e){for(C n:s){r();}if(g){for(t e:n()){e.render(dt);}}}}", "n_tokens": 72, "n_pass": [807, 118, 65]}

Minimal simplified code:
d render(l e){if(e){for(C n:s){r();}if(g){for(t e:n()){e.render(dt);}}}}

