
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/CogComp__cogcomp-nlp/quantifier/src/main/java/edu/illinois/cs/cogcomp/quant/lbj/QuantitiesClassifier_readModel.java
method_name = readModel
method_body = public void readModel(java.net.URL a0) { if (isClone) { loadInstance(); instance.readModel(a0); return; } super.readModel(a0); }
predict, score, loss = readModel, 0.9514424204826355, 0.08676507323980331

Trace of simplified code(s):
{"time": "2021-02-25 07:24:45.631143", "score": "0.9514", "loss": "0.0868", "code": "public void readModel(java.net.URL a0) { if (isClone) { loadInstance(); instance.readModel(a0); return; } super.readModel(a0); }", "n_tokens": 128, "n_pass": [1, 1, 1]}
{"time": "2021-02-25 07:24:48.250862", "score": "0.955", "loss": "0.0732", "code": "public void readModel(java.net.URL a0) { if (isClone) { loadInstreturn; } super.readModel(a0); }", "n_tokens": 96, "n_pass": [10, 2, 2]}
{"time": "2021-02-25 07:24:53.887740", "score": "0.9625", "loss": "0.0625", "code": "oid readModel(java.net.URL a0) { if (isClone) { loadInstreturn; } super.readModel(a0); }", "n_tokens": 88, "n_pass": [41, 4, 3]}
{"time": "2021-02-25 07:24:56.510734", "score": "0.9759", "loss": "0.0315", "code": "oid readModel(jaRL a0) { if (isClone) { loadInstreturn; } super.readModel(a0); }", "n_tokens": 80, "n_pass": [43, 5, 4]}
{"time": "2021-02-25 07:24:59.136151", "score": "0.9757", "loss": "0.0317", "code": "oid readModel(jaRL a0) { if (isClone) { return; } super.readModel(a0); }", "n_tokens": 72, "n_pass": [47, 6, 5]}
{"time": "2021-02-25 07:25:01.742611", "score": "0.9757", "loss": "0.0317", "code": "oid readModel(jaRL a0) { if (isClone) { } super.readModel(a0); }", "n_tokens": 64, "n_pass": [48, 7, 6]}
{"time": "2021-02-25 07:25:16.391538", "score": "0.9123", "loss": "0.1271", "code": "oid readModel(jaRL a0) { if (isC) { } super.readModel(a0); }", "n_tokens": 60, "n_pass": [87, 12, 7]}
{"time": "2021-02-25 07:25:28.197751", "score": "0.8436", "loss": "0.3263", "code": "oid readModel(jaRL a0) { if (isC) { } per.readModel(a0); }", "n_tokens": 58, "n_pass": [135, 16, 8]}
{"time": "2021-02-25 07:25:30.806197", "score": "0.8979", "loss": "0.1443", "code": "oid readModel(jaRL a0) { if (isC) { } r.readModel(a0); }", "n_tokens": 56, "n_pass": [136, 17, 9]}
{"time": "2021-02-25 07:25:33.429599", "score": "0.8058", "loss": "0.4021", "code": "oid readModel(jaRL a0) { if (isC) { } readModel(a0); }", "n_tokens": 54, "n_pass": [137, 18, 10]}
{"time": "2021-02-25 07:25:46.457885", "score": "0.6119", "loss": "0.9786", "code": "oid readModel(jaRL a0) { if (isC) { } readModel(); }", "n_tokens": 52, "n_pass": [143, 23, 11]}
{"time": "2021-02-25 07:25:49.079010", "score": "0.3417", "loss": "1.5531", "code": "d readModel(jaRL a0) { if (isC) { } readModel(); }", "n_tokens": 50, "n_pass": [146, 24, 12]}
{"time": "2021-02-25 07:25:58.860728", "score": "0.4352", "loss": "1.097", "code": "d readModel(jaRL a0) { if (i) { } readModel(); }", "n_tokens": 48, "n_pass": [161, 27, 13]}
{"time": "2021-02-25 07:26:13.865569", "score": "0.4801", "loss": "0.9884", "code": "d readModel(RL a0) { if (i) { } readModel(); }", "n_tokens": 46, "n_pass": [178, 32, 14]}
{"time": "2021-02-25 07:26:32.453676", "score": "0.2163", "loss": "1.8623", "code": "d readModel(L a0) { if (i) { } readModel(); }", "n_tokens": 45, "n_pass": [248, 37, 15]}
{"time": "2021-02-25 07:26:35.056213", "score": "0.2163", "loss": "1.8623", "code": "d readModel(L a) { if (i) { } readModel(); }", "n_tokens": 44, "n_pass": [251, 38, 16]}
{"time": "2021-02-25 07:26:37.663891", "score": "0.2163", "loss": "1.8623", "code": "d readModel(L a){ if (i) { } readModel(); }", "n_tokens": 43, "n_pass": [253, 39, 17]}
{"time": "2021-02-25 07:26:40.264372", "score": "0.2163", "loss": "1.8623", "code": "d readModel(L a){if (i) { } readModel(); }", "n_tokens": 42, "n_pass": [255, 40, 18]}
{"time": "2021-02-25 07:26:42.866955", "score": "0.2163", "loss": "1.8623", "code": "d readModel(L a){if(i) { } readModel(); }", "n_tokens": 41, "n_pass": [258, 41, 19]}
{"time": "2021-02-25 07:26:45.467421", "score": "0.2163", "loss": "1.8623", "code": "d readModel(L a){if(i){ } readModel(); }", "n_tokens": 40, "n_pass": [262, 42, 20]}
{"time": "2021-02-25 07:26:48.058495", "score": "0.2163", "loss": "1.8623", "code": "d readModel(L a){if(i){} readModel(); }", "n_tokens": 39, "n_pass": [264, 43, 21]}
{"time": "2021-02-25 07:26:50.648443", "score": "0.2163", "loss": "1.8623", "code": "d readModel(L a){if(i){}readModel(); }", "n_tokens": 38, "n_pass": [266, 44, 22]}
{"time": "2021-02-25 07:27:16.796761", "score": "0.2163", "loss": "1.8623", "code": "d readModel(L a){if(i){}readModel();}", "n_tokens": 37, "n_pass": [279, 54, 23]}

Minimal simplified code:
d readModel(L a){if(i){}readModel();}

