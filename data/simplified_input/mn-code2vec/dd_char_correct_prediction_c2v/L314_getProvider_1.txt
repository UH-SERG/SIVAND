
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/bcgit__bc-java/prov/src/main/jdk1.1/org/bouncycastle/x509/X509Util_getProvider.java
method_name = getProvider
method_body = static Provider getProvider(String provider) throws NoSuchProviderException { Provider prov = Security.getProvider(provider); if (prov == null) { throw new NoSuchProviderException("Provider " + provider + " not found"); } return prov; }
predict, score, loss = getProvider, 0.9786307215690613, 0.022379115223884583

Trace of simplified code(s):
{"time": "2021-02-25 00:25:00.652579", "score": "0.9786", "loss": "0.0224", "code": "static Provider getProvider(String provider) throws NoSuchProviderException { Provider prov = Security.getProvider(provider); if (prov == null) { throw new NoSuchProviderException(\"Provider \" + provider + \" not found\"); } return prov; }", "n_tokens": 236, "n_pass": [1, 1, 1]}
{"time": "2021-02-25 00:25:03.386097", "score": "0.9545", "loss": "0.0472", "code": "static Provider getProvider(String provider) throws NoSuchProviderException { Provider prov = Security.getProvider(provider); if (prov == null) { ion(\"Provider \" + provider + \" not found\"); } return prov; }", "n_tokens": 206, "n_pass": [25, 2, 2]}
{"time": "2021-02-25 00:25:06.141163", "score": "0.9692", "loss": "0.0322", "code": "r getProvider(String provider) throws NoSuchProviderException { Provider prov = Security.getProvider(provider); if (prov == null) { ion(\"Provider \" + provider + \" not found\"); } return prov; }", "n_tokens": 192, "n_pass": [51, 3, 3]}
{"time": "2021-02-25 00:25:08.835476", "score": "0.9913", "loss": "0.0089", "code": "r getProvider(String provider) throws NoSution { Provider prov = Security.getProvider(provider); if (prov == null) { ion(\"Provider \" + provider + \" not found\"); } return prov; }", "n_tokens": 177, "n_pass": [55, 4, 4]}
{"time": "2021-02-25 00:25:11.525605", "score": "0.9949", "loss": "0.0054", "code": "r getProvider(String provider) throws NoSution { Providery.getProvider(provider); if (prov == null) { ion(\"Provider \" + provider + \" not found\"); } return prov; }", "n_tokens": 162, "n_pass": [57, 5, 5]}
{"time": "2021-02-25 00:25:14.230670", "score": "0.9769", "loss": "0.024", "code": "r getProvider(String provider) throws NoSution { Providerovider(provider); if (prov == null) { ion(\"Provider \" + provider + \" not found\"); } return prov; }", "n_tokens": 155, "n_pass": [91, 6, 6]}
{"time": "2021-02-25 00:25:16.930054", "score": "0.8414", "loss": "0.1761", "code": "r getProvider(String provider) throws NoSution { Provide(provider); if (prov == null) { ion(\"Provider \" + provider + \" not found\"); } return prov; }", "n_tokens": 148, "n_pass": [92, 7, 7]}
{"time": "2021-02-25 00:25:19.642381", "score": "0.7939", "loss": "0.2339", "code": "r getProvider(String provider) throws NoSution { Provide(provider); if (prov ) { ion(\"Provider \" + provider + \" not found\"); } return prov; }", "n_tokens": 141, "n_pass": [96, 8, 8]}
{"time": "2021-02-25 00:25:22.772480", "score": "0.8525", "loss": "0.1682", "code": "r getProvider(String r) throws NoSution { Provide(provider); if (prov ) { ion(\"Provider \" + provider + \" not found\"); } return prov; }", "n_tokens": 134, "n_pass": [108, 9, 9]}
{"time": "2021-02-25 00:25:25.440728", "score": "0.9718", "loss": "0.0318", "code": "r getProvider(String r) throws NoSution { (provider); if (prov ) { ion(\"Provider \" + provider + \" not found\"); } return prov; }", "n_tokens": 127, "n_pass": [112, 10, 10]}
{"time": "2021-02-25 00:25:28.564985", "score": "0.9707", "loss": "0.0332", "code": "r getProvider(String r) throws NoSution { (ider); if (prov ) { ion(\"Provider \" + provider + \" not found\"); } return prov; }", "n_tokens": 123, "n_pass": [165, 11, 11]}
{"time": "2021-02-25 00:25:31.238829", "score": "0.97", "loss": "0.0358", "code": "r getProvider(String r) throws NoSution { (ider); if (p) { ion(\"Provider \" + provider + \" not found\"); } return prov; }", "n_tokens": 119, "n_pass": [169, 12, 12]}
{"time": "2021-02-25 00:25:33.925350", "score": "0.9598", "loss": "0.0493", "code": "r getProvider(String r) throws NoSution { (ider); if (p) { ion(\"Pror \" + provider + \" not found\"); } return prov; }", "n_tokens": 115, "n_pass": [173, 13, 13]}
{"time": "2021-02-25 00:25:36.617385", "score": "0.9243", "loss": "0.1096", "code": "r getProvider(String r) throws NoSution { (ider); if (p) { ion(\"Pror \" + prer + \" not found\"); } return prov; }", "n_tokens": 111, "n_pass": [176, 14, 14]}
{"time": "2021-02-25 00:25:39.328068", "score": "0.6147", "loss": "0.5239", "code": "r getProvider(String r) throws NoSution { (ider); if (p) { ion(\"Pror \" + prer + \" nound\"); } return prov; }", "n_tokens": 107, "n_pass": [179, 15, 15]}
{"time": "2021-02-25 00:25:42.074617", "score": "0.588", "loss": "0.5991", "code": "r getProvider(String r) throws NoSution { (ider); if (p) { ion(\"Pror \" + prer + \" n\"); } return prov; }", "n_tokens": 103, "n_pass": [180, 16, 16]}
{"time": "2021-02-25 00:25:51.777108", "score": "0.4971", "loss": "1.0419", "code": "r getProvider(Sng r) throws NoSution { (ider); if (p) { ion(\"Pror \" + prer + \" n\"); } return prov; }", "n_tokens": 100, "n_pass": [191, 19, 17]}
{"time": "2021-02-25 00:25:57.269017", "score": "0.4971", "loss": "1.0419", "code": "r getProvider(Sng r) throws NoSu { (ider); if (p) { ion(\"Pror \" + prer + \" n\"); } return prov; }", "n_tokens": 96, "n_pass": [197, 21, 18]}
{"time": "2021-02-25 00:26:07.822957", "score": "0.4973", "loss": "1.0426", "code": "r getProvider(Sng r) throws NoSu { (er); if (p) { ion(\"Pror \" + prer + \" n\"); } return prov; }", "n_tokens": 94, "n_pass": [278, 24, 19]}
{"time": "2021-02-25 00:26:10.498166", "score": "0.683", "loss": "0.5683", "code": "r getProvider(Sng r) throws NoSu { (er); if (p) { n(\"Pror \" + prer + \" n\"); } return prov; }", "n_tokens": 92, "n_pass": [285, 25, 20]}
{"time": "2021-02-25 00:26:13.232668", "score": "0.6862", "loss": "0.5581", "code": "r getProvider(Sng r) throws NoSu { (er); if (p) { n(\"Pr \" + prer + \" n\"); } return prov; }", "n_tokens": 90, "n_pass": [288, 26, 21]}
{"time": "2021-02-25 00:26:15.921976", "score": "0.6928", "loss": "0.5416", "code": "r getProvider(Sng r) throws NoSu { (er); if (p) { n(\"P\" + prer + \" n\"); } return prov; }", "n_tokens": 88, "n_pass": [289, 27, 22]}
{"time": "2021-02-25 00:26:18.603401", "score": "0.7057", "loss": "0.4981", "code": "r getProvider(Sng r) throws NoSu { (er); if (p) { n(\"P\" + er + \" n\"); } return prov; }", "n_tokens": 86, "n_pass": [292, 28, 23]}
{"time": "2021-02-25 00:26:21.279821", "score": "0.6625", "loss": "0.6189", "code": "r getProvider(Sng r) throws NoSu { (er); if (p) { n(\"P\" +  + \" n\"); } return prov; }", "n_tokens": 84, "n_pass": [293, 29, 24]}
{"time": "2021-02-25 00:26:24.011015", "score": "0.7057", "loss": "0.4931", "code": "r getProvider(Sng r) throws NoSu { (er); if (p) { n(\"P\" +  \" n\"); } return prov; }", "n_tokens": 82, "n_pass": [294, 30, 25]}
{"time": "2021-02-25 00:26:26.736505", "score": "0.673", "loss": "0.5759", "code": "r getProvider(Sng r) throws NoSu { (er); if (p) { n(\"P\" +  \"\"); } return prov; }", "n_tokens": 80, "n_pass": [296, 31, 26]}
{"time": "2021-02-25 00:26:50.081357", "score": "0.4945", "loss": "1.0907", "code": "r getProvider(Sng r) throws Su { (er); if (p) { n(\"P\" +  \"\"); } return prov; }", "n_tokens": 78, "n_pass": [325, 38, 27]}
{"time": "2021-02-25 00:27:20.764250", "score": "0.4945", "loss": "1.0907", "code": "r getProvider(Sng r) throws Su {(er); if (p) { n(\"P\" +  \"\"); } return prov; }", "n_tokens": 77, "n_pass": [439, 45, 28]}
{"time": "2021-02-25 00:27:23.517635", "score": "0.496", "loss": "1.0881", "code": "r getProvider(Sng r) throws Su {(r); if (p) { n(\"P\" +  \"\"); } return prov; }", "n_tokens": 76, "n_pass": [440, 46, 29]}
{"time": "2021-02-25 00:27:26.202297", "score": "0.496", "loss": "1.0881", "code": "r getProvider(Sng r) throws Su {(r);if (p) { n(\"P\" +  \"\"); } return prov; }", "n_tokens": 75, "n_pass": [444, 47, 30]}
{"time": "2021-02-25 00:27:28.858150", "score": "0.496", "loss": "1.0881", "code": "r getProvider(Sng r) throws Su {(r);if(p) { n(\"P\" +  \"\"); } return prov; }", "n_tokens": 74, "n_pass": [447, 48, 31]}
{"time": "2021-02-25 00:27:31.529907", "score": "0.496", "loss": "1.0881", "code": "r getProvider(Sng r) throws Su {(r);if(p){ n(\"P\" +  \"\"); } return prov; }", "n_tokens": 73, "n_pass": [451, 49, 32]}
{"time": "2021-02-25 00:27:34.203793", "score": "0.496", "loss": "1.0881", "code": "r getProvider(Sng r) throws Su {(r);if(p){n(\"P\" +  \"\"); } return prov; }", "n_tokens": 72, "n_pass": [453, 50, 33]}
{"time": "2021-02-25 00:27:36.914852", "score": "0.4174", "loss": "1.3937", "code": "r getProvider(Sng r) throws Su {(r);if(p){(\"P\" +  \"\"); } return prov; }", "n_tokens": 71, "n_pass": [454, 51, 34]}
{"time": "2021-02-25 00:27:39.587395", "score": "0.4166", "loss": "1.3984", "code": "r getProvider(Sng r) throws Su {(r);if(p){(\"\" +  \"\"); } return prov; }", "n_tokens": 70, "n_pass": [457, 52, 35]}
{"time": "2021-02-25 00:27:42.297990", "score": "0.4166", "loss": "1.3984", "code": "r getProvider(Sng r) throws Su {(r);if(p){(\"\"+  \"\"); } return prov; }", "n_tokens": 69, "n_pass": [459, 53, 36]}
{"time": "2021-02-25 00:27:44.938715", "score": "0.4166", "loss": "1.3984", "code": "r getProvider(Sng r) throws Su {(r);if(p){(\"\"+ \"\"); } return prov; }", "n_tokens": 68, "n_pass": [461, 54, 37]}
{"time": "2021-02-25 00:27:47.607772", "score": "0.4166", "loss": "1.3984", "code": "r getProvider(Sng r) throws Su {(r);if(p){(\"\"+\"\"); } return prov; }", "n_tokens": 67, "n_pass": [462, 55, 38]}
{"time": "2021-02-25 00:27:50.280966", "score": "0.4166", "loss": "1.3984", "code": "r getProvider(Sng r) throws Su {(r);if(p){(\"\"+\"\");} return prov; }", "n_tokens": 66, "n_pass": [467, 56, 39]}
{"time": "2021-02-25 00:27:52.968292", "score": "0.4166", "loss": "1.3984", "code": "r getProvider(Sng r) throws Su {(r);if(p){(\"\"+\"\");}return prov; }", "n_tokens": 65, "n_pass": [469, 57, 40]}
{"time": "2021-02-25 00:28:25.144571", "score": "0.4166", "loss": "1.3984", "code": "r getProvider(Sng r) throws Su {(r);if(p){(\"\"+\"\");}return prov;}", "n_tokens": 64, "n_pass": [482, 69, 41]}
{"time": "2021-02-25 00:28:41.493418", "score": "0.4166", "loss": "1.3984", "code": "r getProvider(Sng r)throws Su {(r);if(p){(\"\"+\"\");}return prov;}", "n_tokens": 63, "n_pass": [504, 73, 42]}
{"time": "2021-02-25 00:28:44.346188", "score": "0.5293", "loss": "0.9887", "code": "r getProvider(Sng r)throws u {(r);if(p){(\"\"+\"\");}return prov;}", "n_tokens": 62, "n_pass": [512, 74, 43]}
{"time": "2021-02-25 00:28:47.012014", "score": "0.5293", "loss": "0.9887", "code": "r getProvider(Sng r)throws u{(r);if(p){(\"\"+\"\");}return prov;}", "n_tokens": 61, "n_pass": [514, 75, 44]}
{"time": "2021-02-25 00:29:29.933262", "score": "0.4674", "loss": "0.872", "code": "r getProvider(Sn r)throws u{(r);if(p){(\"\"+\"\");}return prov;}", "n_tokens": 60, "n_pass": [564, 89, 45]}

Minimal simplified code:
r getProvider(Sn r)throws u{(r);if(p){(""+"");}return prov;}

