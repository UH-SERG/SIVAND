
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/Waikato__meka/src/main/java/meka/core/StatUtils_main.java
method_name = main
method_body = public static void main(String[] args) throws Exception { Instances D = Evaluation.loadDataset(args); MLUtils.prepareData(D); int L = D.classIndex(); double[][] CD = null; if (args[2].equals("L")) { String I = "I"; if (args.length >= 3) I = args[3]; CD = StatUtils.LEAD(D, new SMO(), new Random(), I); } else { CD = StatUtils.margDepMatrix(D, args[2]); } System.out.println(MatrixUtils.toString(CD, "M" + args[2])); }
predict, score, loss = main, 0.738651692867279, 0.36839038133621216

Trace of simplified code(s):
{"time": "2021-02-25 05:35:31.016954", "score": "0.9918", "loss": "0.011", "code": "public static void main(String[] args) throws Exception { Instances D = Evaluation.loadDataset(args); MLUtils.prepareData(D); int L = D.classIndex(); double[][] CD = null; if (args[2].equals(\"L\")) { String I = \"I\"; if (args.length >= 3) I = args[3]; CD = StatUtils.LEAD(D, new SMO(), new Random(), I); } else { CD = StatUtils.margDepMatrix(D, args[2]); } System.out.println(MatrixUtils.toString(CD, \"M\" + args[2])); }", "n_tokens": 417, "n_pass": [1, 1, 1]}
{"time": "2021-02-25 05:35:33.769813", "score": "0.9932", "loss": "0.0071", "code": "public static void main(String[] args) throws Exception { Instances D = Evaluation.loadDataset(args); ML[][] CD = null; if (args[2].equals(\"L\")) { String I = \"I\"; if (args.length >= 3) I = args[3]; CD = StatUtils.LEAD(D, new SMO(), new Random(), I); } else { CD = StatUtils.margDepMatrix(D, args[2]); } System.out.println(MatrixUtils.toString(CD, \"M\" + args[2])); }", "n_tokens": 365, "n_pass": [22, 2, 2]}
{"time": "2021-02-25 05:35:36.515358", "score": "0.9999", "loss": "0.0001", "code": "public static void main(String[] args) throws Exception { Instances D = Evaluation.loadDataset(args); ML[][] CD = null; if (args[2].equals(\"L\")) { String I = \"I\"; if (args.length >= 3) I = args[3]; CD = StatUD = StatUtils.margDepMatrix(D, args[2]); } System.out.println(MatrixUtils.toString(CD, \"M\" + args[2])); }", "n_tokens": 313, "n_pass": [24, 3, 3]}
{"time": "2021-02-25 05:35:39.262195", "score": "0.9999", "loss": "0.0001", "code": "public static void main(String[] args) throws Exception { Instances D = Evaluation.loadDataset(args); ML[][] CD = null; if (args[2].equals(\"L\")) { String I = \"I\"; if (args.length >= 3) I = args[3]; CD = StatUx(D, args[2]); } System.out.println(MatrixUtils.toString(CD, \"M\" + args[2])); }", "n_tokens": 287, "n_pass": [43, 4, 4]}
{"time": "2021-02-25 05:35:42.000809", "score": "0.9999", "loss": "0.0001", "code": "public static void main(String[] args) throws Exception { Instances D = Evaluation.loadDataset(args); ML[][] CD = null; if (args[2].equals(\"L\")) { String I = \"I\"; if (args.length >= 3) I = args[3]; CD = StatU; } System.out.println(MatrixUtils.toString(CD, \"M\" + args[2])); }", "n_tokens": 274, "n_pass": [76, 5, 5]}
{"time": "2021-02-25 05:35:44.732859", "score": "0.9994", "loss": "0.0006", "code": "public static void main(String[] args) throws Exception { Instances D = Evaluation.loadDataset(args); ML[][] CD = null; if (args[2].equals(\"L\")) { String I = \"I\"; if (args.length >= 3) I = args[3]; CD = StatU; } System.out.println(Matring(CD, \"M\" + args[2])); }", "n_tokens": 261, "n_pass": [78, 6, 6]}
{"time": "2021-02-25 05:35:47.415931", "score": "0.9995", "loss": "0.0006", "code": " void main(String[] args) throws Exception { Instances D = Evaluation.loadDataset(args); ML[][] CD = null; if (args[2].equals(\"L\")) { String I = \"I\"; if (args.length >= 3) I = args[3]; CD = StatU; } System.out.println(Matring(CD, \"M\" + args[2])); }", "n_tokens": 248, "n_pass": [81, 7, 7]}
{"time": "2021-02-25 05:35:50.142876", "score": "0.9999", "loss": "0.0001", "code": " void main(String[] args) throws Exception { Instanction.loadDataset(args); ML[][] CD = null; if (args[2].equals(\"L\")) { String I = \"I\"; if (args.length >= 3) I = args[3]; CD = StatU; } System.out.println(Matring(CD, \"M\" + args[2])); }", "n_tokens": 235, "n_pass": [86, 8, 8]}
{"time": "2021-02-25 05:35:52.851859", "score": "0.9998", "loss": "0.0002", "code": " void main(String[] args) throws Exception { Instancset(args); ML[][] CD = null; if (args[2].equals(\"L\")) { String I = \"I\"; if (args.length >= 3) I = args[3]; CD = StatU; } System.out.println(Matring(CD, \"M\" + args[2])); }", "n_tokens": 222, "n_pass": [87, 9, 9]}
{"time": "2021-02-25 05:35:55.539570", "score": "0.9981", "loss": "0.0026", "code": " void main(String[] args) throws Exception { Instanc[][] CD = null; if (args[2].equals(\"L\")) { String I = \"I\"; if (args.length >= 3) I = args[3]; CD = StatU; } System.out.println(Matring(CD, \"M\" + args[2])); }", "n_tokens": 209, "n_pass": [88, 10, 10]}
{"time": "2021-02-25 05:35:58.211699", "score": "0.9999", "loss": "0.0002", "code": " void main(String[] args) throws Exception { Instancl; if (args[2].equals(\"L\")) { String I = \"I\"; if (args.length >= 3) I = args[3]; CD = StatU; } System.out.println(Matring(CD, \"M\" + args[2])); }", "n_tokens": 196, "n_pass": [89, 11, 11]}
{"time": "2021-02-25 05:36:00.932146", "score": "0.9977", "loss": "0.0036", "code": " void main(String[] args) throws Exception { Instancl; if (args[2].equals(\"L\")) { String I = \"I\"; if (ar3) I = args[3]; CD = StatU; } System.out.println(Matring(CD, \"M\" + args[2])); }", "n_tokens": 183, "n_pass": [94, 12, 12]}
{"time": "2021-02-25 05:36:03.740321", "score": "0.9986", "loss": "0.0024", "code": " void main(String[] args) throws Exception { Instancl; if (args[2].equals(\"L\")) { String I = \"I\"; i I = args[3]; CD = StatU; } System.out.println(Matring(CD, \"M\" + args[2])); }", "n_tokens": 176, "n_pass": [137, 13, 13]}
{"time": "2021-02-25 05:36:06.452351", "score": "0.9992", "loss": "0.001", "code": " void main(String[] args) throws Exception { Instancl; if (args[2].equals(\"L\")) { String I = \"I\"; igs[3]; CD = StatU; } System.out.println(Matring(CD, \"M\" + args[2])); }", "n_tokens": 169, "n_pass": [138, 14, 14]}
{"time": "2021-02-25 05:36:09.162053", "score": "0.9997", "loss": "0.0005", "code": " void main(String[] args) throws Exception { Instancl; if (args[2].equals(\"L\")) { String I = \"I\"; iCD = StatU; } System.out.println(Matring(CD, \"M\" + args[2])); }", "n_tokens": 162, "n_pass": [139, 15, 15]}
{"time": "2021-02-25 05:36:11.803130", "score": "1.0", "loss": "0.0", "code": " void main(String[] args) throws Exception { Instancl; if (args[2].equals(\"L\")) { String I = \"I\"; iatU; } System.out.println(Matring(CD, \"M\" + args[2])); }", "n_tokens": 155, "n_pass": [140, 16, 16]}
{"time": "2021-02-25 05:36:14.487248", "score": "0.9994", "loss": "0.0007", "code": " void main(String[] args) throws Exception { Instancl; if (args[2].equals(\"L\")) { String I = \"I\"; iatU; } out.println(Matring(CD, \"M\" + args[2])); }", "n_tokens": 148, "n_pass": [142, 17, 17]}
{"time": "2021-02-25 05:36:17.173448", "score": "0.9996", "loss": "0.0004", "code": " void main(String[] args) throws Exception { Instancl; if (args[2].equals(\"L\")) { String I = \"I\"; iatU; } ntln(Matring(CD, \"M\" + args[2])); }", "n_tokens": 141, "n_pass": [143, 18, 18]}
{"time": "2021-02-25 05:36:19.860518", "score": "0.9999", "loss": "0.0001", "code": " void main(String[] args) throws Exception { Instancl; if (args[2].equals(\"L\")) { String I = \"I\"; iatU; } ntln(Matring(C+ args[2])); }", "n_tokens": 134, "n_pass": [146, 19, 19]}
{"time": "2021-02-25 05:36:22.911615", "score": "0.9997", "loss": "0.0003", "code": " void main(String[] args) throws Exc { Instancl; if (args[2].equals(\"L\")) { String I = \"I\"; iatU; } ntln(Matring(C+ args[2])); }", "n_tokens": 128, "n_pass": [155, 20, 20]}
{"time": "2021-02-25 05:36:25.596945", "score": "0.9775", "loss": "0.0271", "code": " void main(String[] args) throws Exc { Instancl; if (a.equals(\"L\")) { String I = \"I\"; iatU; } ntln(Matring(C+ args[2])); }", "n_tokens": 122, "n_pass": [159, 21, 21]}
{"time": "2021-02-25 05:36:28.282245", "score": "0.9782", "loss": "0.0387", "code": " void main(String[] args) throws Exc { Instancl; if (as(\"L\")) { String I = \"I\"; iatU; } ntln(Matring(C+ args[2])); }", "n_tokens": 116, "n_pass": [160, 22, 22]}
{"time": "2021-02-25 05:36:30.958844", "score": "0.9951", "loss": "0.0064", "code": " void main(String[] args) throws Exc { Instancl; if (a) { String I = \"I\"; iatU; } ntln(Matring(C+ args[2])); }", "n_tokens": 110, "n_pass": [161, 23, 23]}
{"time": "2021-02-25 05:36:33.634755", "score": "0.9945", "loss": "0.0069", "code": " void main(String[] args) throws Exc { Instancl; if (a) { String I =atU; } ntln(Matring(C+ args[2])); }", "n_tokens": 103, "n_pass": [164, 24, 24]}
{"time": "2021-02-25 05:36:36.651570", "score": "0.9952", "loss": "0.006", "code": " void main(String[] args) throws Exc { Instancl; if (a) { StratU; } ntln(Matring(C+ args[2])); }", "n_tokens": 96, "n_pass": [180, 25, 25]}
{"time": "2021-02-25 05:36:39.720668", "score": "0.9945", "loss": "0.0062", "code": " void main(String[] args) throws Exc { Instancl; if (a) { StU; } ntln(Matring(C+ args[2])); }", "n_tokens": 93, "n_pass": [226, 26, 26]}
{"time": "2021-02-25 05:36:42.342206", "score": "0.9935", "loss": "0.0072", "code": " void main(String[] args) throws Exc { Instancl; if (a) { StU; } n(Matring(C+ args[2])); }", "n_tokens": 90, "n_pass": [229, 27, 27]}
{"time": "2021-02-25 05:36:44.961367", "score": "0.9894", "loss": "0.012", "code": " void main(String[] args) throws Exc { Instancl; if (a) { StU; } n(Mat(C+ args[2])); }", "n_tokens": 86, "n_pass": [231, 28, 28]}
{"time": "2021-02-25 05:36:51.002316", "score": "0.9579", "loss": "0.0513", "code": " void main(Sng[] args) throws Exc { Instancl; if (a) { StU; } n(Mat(C+ args[2])); }", "n_tokens": 83, "n_pass": [240, 30, 29]}
{"time": "2021-02-25 05:36:56.263314", "score": "0.9579", "loss": "0.0513", "code": " void main(Sng[] args) throws Exc { tancl; if (a) { StU; } n(Mat(C+ args[2])); }", "n_tokens": 80, "n_pass": [249, 32, 30]}
{"time": "2021-02-25 05:36:58.884754", "score": "0.9573", "loss": "0.0516", "code": " void main(Sng[] args) throws Exc { cl; if (a) { StU; } n(Mat(C+ args[2])); }", "n_tokens": 77, "n_pass": [250, 33, 31]}
{"time": "2021-02-25 05:37:01.501738", "score": "0.9653", "loss": "0.0422", "code": " void main(Sng[] args) throws Exc {  if (a) { StU; } n(Mat(C+ args[2])); }", "n_tokens": 74, "n_pass": [251, 34, 32]}
{"time": "2021-02-25 05:37:04.119577", "score": "0.9848", "loss": "0.0289", "code": " void main(Sng[] args) throws Exc {  if (a) {U; } n(Mat(C+ args[2])); }", "n_tokens": 71, "n_pass": [255, 35, 33]}
{"time": "2021-02-25 05:37:06.732943", "score": "0.9873", "loss": "0.0245", "code": " void main(Sng[] args) throws Exc {  if (a) {} n(Mat(C+ args[2])); }", "n_tokens": 68, "n_pass": [256, 36, 34]}
{"time": "2021-02-25 05:37:16.543726", "score": "0.9878", "loss": "0.0289", "code": " void main(Sng[] args) throws Exc {  if (a)  n(Mat(C+ args[2])); }", "n_tokens": 66, "n_pass": [320, 39, 35]}
{"time": "2021-02-25 05:37:19.206033", "score": "0.9881", "loss": "0.0269", "code": " void main(Sng[] args) throws Exc {  if (a) (Mat(C+ args[2])); }", "n_tokens": 64, "n_pass": [321, 40, 36]}
{"time": "2021-02-25 05:37:21.819915", "score": "0.9925", "loss": "0.018", "code": " void main(Sng[] args) throws Exc {  if (a) (M(C+ args[2])); }", "n_tokens": 62, "n_pass": [323, 41, 37]}
{"time": "2021-02-25 05:37:24.483355", "score": "0.9901", "loss": "0.0271", "code": " void main(Sng[] args) throws Exc {  if (a) (M(Cargs[2])); }", "n_tokens": 60, "n_pass": [325, 42, 38]}
{"time": "2021-02-25 05:37:27.179767", "score": "0.9921", "loss": "0.017", "code": " void main(Sng[] args) throws Exc {  if (a) (M(Cgs[2])); }", "n_tokens": 58, "n_pass": [326, 43, 39]}
{"time": "2021-02-25 05:37:29.799646", "score": "0.9913", "loss": "0.0186", "code": " void main(Sng[] args) throws Exc {  if (a) (M(C[2])); }", "n_tokens": 56, "n_pass": [327, 44, 40]}
{"time": "2021-02-25 05:37:32.412600", "score": "0.9913", "loss": "0.0186", "code": "void main(Sng[] args) throws Exc {  if (a) (M(C[2])); }", "n_tokens": 55, "n_pass": [332, 45, 41]}
{"time": "2021-02-25 05:37:47.530900", "score": "0.9914", "loss": "0.013", "code": "void main(ng[] args) throws Exc {  if (a) (M(C[2])); }", "n_tokens": 54, "n_pass": [343, 50, 42]}
{"time": "2021-02-25 05:37:50.138937", "score": "0.9744", "loss": "0.0298", "code": "void main(g[] args) throws Exc {  if (a) (M(C[2])); }", "n_tokens": 53, "n_pass": [344, 51, 43]}
{"time": "2021-02-25 05:37:52.755312", "score": "0.2975", "loss": "1.4603", "code": "void main(g[]rgs) throws Exc {  if (a) (M(C[2])); }", "n_tokens": 51, "n_pass": [348, 52, 44]}
{"time": "2021-02-25 05:37:57.971988", "score": "0.4046", "loss": "1.0373", "code": "void main(g[]rgs) throws c {  if (a) (M(C[2])); }", "n_tokens": 49, "n_pass": [355, 54, 45]}
{"time": "2021-02-25 05:38:18.868716", "score": "0.4046", "loss": "1.0373", "code": "void main(g[]rgs) throws c {  if(a) (M(C[2])); }", "n_tokens": 48, "n_pass": [425, 60, 46]}
{"time": "2021-02-25 05:38:21.484913", "score": "0.4046", "loss": "1.0373", "code": "void main(g[]rgs) throws c {  if(a)(M(C[2])); }", "n_tokens": 47, "n_pass": [429, 61, 47]}
{"time": "2021-02-25 05:38:24.097717", "score": "0.4907", "loss": "0.8471", "code": "void main(g[]rgs) throws c {  if(a)((C[2])); }", "n_tokens": 46, "n_pass": [431, 62, 48]}
{"time": "2021-02-25 05:38:26.717900", "score": "0.4907", "loss": "0.8471", "code": "void main(g[]rgs) throws c {  if(a)((C[2]));}", "n_tokens": 45, "n_pass": [440, 63, 49]}
{"time": "2021-02-25 05:38:49.598838", "score": "0.4907", "loss": "0.8471", "code": "void main(g[]rgs)throws c {  if(a)((C[2]));}", "n_tokens": 44, "n_pass": [459, 71, 50]}
{"time": "2021-02-25 05:38:52.208203", "score": "0.4907", "loss": "0.8471", "code": "void main(g[]rgs)throws c{  if(a)((C[2]));}", "n_tokens": 43, "n_pass": [468, 72, 51]}
{"time": "2021-02-25 05:38:54.819705", "score": "0.4907", "loss": "0.8471", "code": "void main(g[]rgs)throws c{ if(a)((C[2]));}", "n_tokens": 42, "n_pass": [470, 73, 52]}
{"time": "2021-02-25 05:38:57.426763", "score": "0.4907", "loss": "0.8471", "code": "void main(g[]rgs)throws c{if(a)((C[2]));}", "n_tokens": 41, "n_pass": [471, 74, 53]}

Minimal simplified code:
void main(g[]rgs)throws c{if(a)((C[2]));}

