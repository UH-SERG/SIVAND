
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/sakaiproject__sakai/msgcntr/messageforums-hbm/src/java/org/sakaiproject/component/app/messageforums/dao/hibernate/util/comparator/RankImageByCreatedDateDesc_compare.java
method_name = compare
method_body = public int compare(RankImage o1, RankImage o2) { if (o1 == null && o2 == null) { return 0; } else if (o2 == null || o2.getCreated() == null) { return o1.getCreated() == null ? 0 : -1; } else if (o1 == null || o1.getCreated() == null) { return o2.getCreated() == null ? 0 : 1; } else { int rval = o2.getCreated().compareTo(o1.getCreated()); if (rval == 0) { return o2.getId().compareTo(o1.getId()); } else { return rval; } } }
predict, score, loss = compare, 0.9884494543075562, 0.015341139398515224

Trace of simplified code(s):
{"time": "2021-02-22 09:28:55.182475", "score": "0.9369", "loss": "0.0924", "code": "public int compare(RankImage o1, RankImage o2) { if (o1 == null && o2 == null) { return 0; } else if (o2 == null || o2.getCreated() == null) { return o1.getCreated() == null ? 0 : -1; } else if (o1 == null || o1.getCreated() == null) { return o2.getCreated() == null ? 0 : 1; } else { int rval = o2.getCreated().compareTo(o1.getCreated()); if (rval == 0) { return o2.getId().compareTo(o1.getId()); } else { return rval; } } }", "n_tokens": 425, "n_pass": [1, 1, 1]}
{"time": "2021-02-22 09:28:57.880193", "score": "0.7878", "loss": "0.2529", "code": "public int compare(RankImage o1, RankImage o2) { if (o1 == null && o2 == null) { return 0; } else if (o2 =getCreated() == null) { return o2.getCreated() == null ? 0 : 1; } else { int rval = o2.getCreated().compareTo(o1.getCreated()); if (rval == 0) { return o2.getId().compareTo(o1.getId()); } else { return rval; } } }", "n_tokens": 319, "n_pass": [9, 2, 2]}
{"time": "2021-02-22 09:29:00.541886", "score": "0.7983", "loss": "0.2508", "code": "public int compare(RankImage o1, RankImage o2) { if (o1 == null && o2 == null) { return 0; } else if (o2 =getCreated() == null) { return o2.getCreated() == nuleTo(o1.getCreated()); if (rval == 0) { return o2.getId().compareTo(o1.getId()); } else { return rval; } } }", "n_tokens": 266, "n_pass": [19, 3, 3]}
{"time": "2021-02-22 09:29:03.209293", "score": "0.8859", "loss": "0.1381", "code": "public int compare(RankImage o1, RankImage o2) { if (getCreated() == null) { return o2.getCreated() == nuleTo(o1.getCreated()); if (rval == 0) { return o2.getId().compareTo(o1.getId()); } else { return rval; } } }", "n_tokens": 213, "n_pass": [23, 4, 4]}
{"time": "2021-02-22 09:29:05.919477", "score": "0.9167", "loss": "0.0922", "code": "public int compare(RankImage o1, RankImage o2) { if (getCreated() == null) { rleTo(o1.getCreated()); if (rval == 0) { return o2.getId().compareTo(o1.getId()); } else { return rval; } } }", "n_tokens": 186, "n_pass": [37, 5, 5]}
{"time": "2021-02-22 09:29:08.573337", "score": "0.7685", "loss": "0.9625", "code": "public int compare(RankImage o1, RankImage o2) { if (getCreated() == null) { rleTo(o1.getCreated()); if (rval == 0) {tId().compareTo(o1.getId()); } else { return rval; } } }", "n_tokens": 173, "n_pass": [62, 6, 6]}
{"time": "2021-02-22 09:29:11.223441", "score": "0.5725", "loss": "1.5727", "code": "public int compare(RankImage o1, RankImage o2) { if (getCreated() == null) { rleTo(o1.getCreated()); if (rval == 0) {o(o1.getId()); } else { return rval; } } }", "n_tokens": 159, "n_pass": [63, 7, 7]}
{"time": "2021-02-22 09:29:13.859888", "score": "0.3813", "loss": "2.1693", "code": "public int compare(RankImage o1, RankImage o2) { if (getCreated() == null) { rleTo(o1.getCreated()); if (rval == 0) { } else { return rval; } } }", "n_tokens": 145, "n_pass": [64, 8, 8]}
{"time": "2021-02-22 09:29:16.483272", "score": "0.3597", "loss": "2.0954", "code": "public int compare(RankImage o1, RankImage o2) { if (getCreated() == null) { rleTo(o1.getCreated()); if (rval == 0) {rn rval; } } }", "n_tokens": 131, "n_pass": [65, 9, 9]}
{"time": "2021-02-22 09:29:22.113018", "score": "0.3662", "loss": "2.0576", "code": "public int compare(RankImage o1, RankImage o2) { if (getCreated() == null) { rleTo(o1.getCreated()); if (rval == 0) {; } } }", "n_tokens": 124, "n_pass": [96, 11, 10]}
{"time": "2021-02-22 09:29:24.738061", "score": "0.3662", "loss": "2.0576", "code": " int compare(RankImage o1, RankImage o2) { if (getCreated() == null) { rleTo(o1.getCreated()); if (rval == 0) {; } } }", "n_tokens": 118, "n_pass": [97, 12, 11]}
{"time": "2021-02-22 09:29:28.159814", "score": "0.6079", "loss": "1.6242", "code": " int compare(RankImage o1, Ran o2) { if (getCreated() == null) { rleTo(o1.getCreated()); if (rval == 0) {; } } }", "n_tokens": 112, "n_pass": [103, 13, 12]}
{"time": "2021-02-22 09:29:30.796905", "score": "0.479", "loss": "3.3959", "code": " int compare(RankImage o1, Ran o2) { if (ged() == null) { rleTo(o1.getCreated()); if (rval == 0) {; } } }", "n_tokens": 105, "n_pass": [106, 14, 13]}
{"time": "2021-02-22 09:29:33.403014", "score": "0.3421", "loss": "3.5993", "code": " int compare(RankImage o1, Ran o2) { if (ged() == null) { rleTo(o1.get()); if (rval == 0) {; } } }", "n_tokens": 98, "n_pass": [111, 15, 14]}
{"time": "2021-02-22 09:29:37.153733", "score": "0.3543", "loss": "3.5555", "code": " int compare(RankImage o1, Ran o2) { if (ged() == null) { rleTo(o1()); if (rval == 0) {; } } }", "n_tokens": 94, "n_pass": [157, 16, 15]}
{"time": "2021-02-22 09:29:39.758136", "score": "0.3219", "loss": "3.533", "code": "t compare(RankImage o1, Ran o2) { if (ged() == null) { rleTo(o1()); if (rval == 0) {; } } }", "n_tokens": 91, "n_pass": [165, 17, 16]}
{"time": "2021-02-22 09:29:43.515739", "score": "0.3219", "loss": "3.533", "code": "t compare(Ramage o1, Ran o2) { if (ged() == null) { rleTo(o1()); if (rval == 0) {; } } }", "n_tokens": 88, "n_pass": [170, 18, 17]}
{"time": "2021-02-22 09:29:49.177057", "score": "0.3169", "loss": "3.6013", "code": "t compare(Ramage o1, Ran o2) { if (ged() == n) { rleTo(o1()); if (rval == 0) {; } } }", "n_tokens": 85, "n_pass": [182, 20, 18]}
{"time": "2021-02-22 09:30:06.857974", "score": "0.4133", "loss": "2.7804", "code": "t compare(Ramage o1, Ran o2) { if (ged() == n) { rleTo(o1); if (rval == 0) {; } } }", "n_tokens": 83, "n_pass": [269, 26, 19]}
{"time": "2021-02-22 09:30:09.481366", "score": "0.3901", "loss": "2.8846", "code": "t compare(Ramage o1, Ran o2) { if (ged() == n) { rleTo(o1); if (rl == 0) {; } } }", "n_tokens": 81, "n_pass": [273, 27, 20]}
{"time": "2021-02-22 09:30:12.086378", "score": "0.421", "loss": "2.765", "code": "t compare(Ramage o1, Ran o2) { if (ged() == n) { rleTo(o1); if (r== 0) {; } } }", "n_tokens": 79, "n_pass": [274, 28, 21]}
{"time": "2021-02-22 09:30:18.181852", "score": "0.421", "loss": "2.765", "code": "t compare(amage o1, Ran o2) { if (ged() == n) { rleTo(o1); if (r== 0) {; } } }", "n_tokens": 78, "n_pass": [292, 29, 22]}
{"time": "2021-02-22 09:30:23.498727", "score": "0.421", "loss": "2.765", "code": "t compare(aage o1, Ran o2) { if (ged() == n) { rleTo(o1); if (r== 0) {; } } }", "n_tokens": 77, "n_pass": [294, 31, 23]}
{"time": "2021-02-22 09:30:26.127623", "score": "0.2374", "loss": "3.1184", "code": "t compare(age o1, Ran o2) { if (ged() == n) { rleTo(o1); if (r== 0) {; } } }", "n_tokens": 76, "n_pass": [295, 32, 24]}
{"time": "2021-02-22 09:30:28.786785", "score": "0.6396", "loss": "1.9502", "code": "t compare(ae o1, Ran o2) { if (ged() == n) { rleTo(o1); if (r== 0) {; } } }", "n_tokens": 75, "n_pass": [296, 33, 25]}
{"time": "2021-02-22 09:30:31.391880", "score": "0.5388", "loss": "1.9919", "code": "t compare(a o1, Ran o2) { if (ged() == n) { rleTo(o1); if (r== 0) {; } } }", "n_tokens": 74, "n_pass": [297, 34, 26]}
{"time": "2021-02-22 09:30:34.000957", "score": "0.5388", "loss": "1.9919", "code": "t compare(a o, Ran o2) { if (ged() == n) { rleTo(o1); if (r== 0) {; } } }", "n_tokens": 73, "n_pass": [300, 35, 27]}
{"time": "2021-02-22 09:30:36.608343", "score": "0.5144", "loss": "1.5387", "code": "t compare(a o, n o2) { if (ged() == n) { rleTo(o1); if (r== 0) {; } } }", "n_tokens": 71, "n_pass": [302, 36, 28]}
{"time": "2021-02-22 09:30:39.215397", "score": "0.4958", "loss": "1.1294", "code": "t compare(a o, n o2) { if (d() == n) { rleTo(o1); if (r== 0) {; } } }", "n_tokens": 69, "n_pass": [309, 37, 29]}
{"time": "2021-02-22 09:30:59.643342", "score": "0.4958", "loss": "1.1294", "code": "t compare(a o, n o2) { if (d() ==n) { rleTo(o1); if (r== 0) {; } } }", "n_tokens": 68, "n_pass": [407, 41, 30]}
{"time": "2021-02-22 09:31:02.243522", "score": "0.4958", "loss": "1.1294", "code": "t compare(a o, n o2) { if (d() ==n){ rleTo(o1); if (r== 0) {; } } }", "n_tokens": 67, "n_pass": [409, 42, 31]}
{"time": "2021-02-22 09:31:04.849317", "score": "0.4958", "loss": "1.1294", "code": "t compare(a o, n o2) { if (d() ==n){rleTo(o1); if (r== 0) {; } } }", "n_tokens": 66, "n_pass": [411, 43, 32]}
{"time": "2021-02-22 09:31:07.478173", "score": "0.4958", "loss": "1.1294", "code": "t compare(a o, n o2) { if (d() ==n){leTo(o1); if (r== 0) {; } } }", "n_tokens": 65, "n_pass": [412, 44, 33]}
{"time": "2021-02-22 09:31:23.248707", "score": "0.4958", "loss": "1.1294", "code": "t compare(a o, n o2) { if (d() ==n){leTo(o); if (r== 0) {; } } }", "n_tokens": 64, "n_pass": [419, 50, 34]}
{"time": "2021-02-22 09:31:25.861782", "score": "0.4958", "loss": "1.1294", "code": "t compare(a o, n o2) { if (d() ==n){leTo(o);if (r== 0) {; } } }", "n_tokens": 63, "n_pass": [422, 51, 35]}
{"time": "2021-02-22 09:31:28.481092", "score": "0.4958", "loss": "1.1294", "code": "t compare(a o, n o2) { if (d() ==n){leTo(o);if(r== 0) {; } } }", "n_tokens": 62, "n_pass": [425, 52, 36]}
{"time": "2021-02-22 09:31:31.079781", "score": "0.2837", "loss": "1.9224", "code": "t compare(a o, n o2) { if (d() ==n){leTo(o);if(r= 0) {; } } }", "n_tokens": 61, "n_pass": [428, 53, 37]}
{"time": "2021-02-22 09:31:33.678669", "score": "0.2837", "loss": "1.9224", "code": "t compare(a o, n o2) { if (d() ==n){leTo(o);if(r=0) {; } } }", "n_tokens": 60, "n_pass": [430, 54, 38]}
{"time": "2021-02-22 09:31:36.283054", "score": "0.2837", "loss": "1.9224", "code": "t compare(a o, n o2) { if (d() ==n){leTo(o);if(r=0){; } } }", "n_tokens": 59, "n_pass": [433, 55, 39]}
{"time": "2021-02-22 09:31:38.905882", "score": "0.2837", "loss": "1.9224", "code": "t compare(a o, n o2) { if (d() ==n){leTo(o);if(r=0){ } } }", "n_tokens": 58, "n_pass": [435, 56, 40]}
{"time": "2021-02-22 09:31:41.512031", "score": "0.2837", "loss": "1.9224", "code": "t compare(a o, n o2) { if (d() ==n){leTo(o);if(r=0){} } }", "n_tokens": 57, "n_pass": [436, 57, 41]}
{"time": "2021-02-22 09:31:44.140973", "score": "0.2837", "loss": "1.9224", "code": "t compare(a o, n o2) { if (d() ==n){leTo(o);if(r=0){}} }", "n_tokens": 56, "n_pass": [438, 58, 42]}
{"time": "2021-02-22 09:31:46.746832", "score": "0.2837", "loss": "1.9224", "code": "t compare(a o, n o2) { if (d() ==n){leTo(o);if(r=0){}}}", "n_tokens": 55, "n_pass": [440, 59, 43]}
{"time": "2021-02-22 09:31:52.859244", "score": "0.2837", "loss": "1.9224", "code": "t compare(a o,n o2) { if (d() ==n){leTo(o);if(r=0){}}}", "n_tokens": 54, "n_pass": [456, 60, 44]}
{"time": "2021-02-22 09:31:55.475442", "score": "0.2837", "loss": "1.9224", "code": "t compare(a o,n o) { if (d() ==n){leTo(o);if(r=0){}}}", "n_tokens": 53, "n_pass": [460, 61, 45]}
{"time": "2021-02-22 09:31:58.082282", "score": "0.2837", "loss": "1.9224", "code": "t compare(a o,n o){ if (d() ==n){leTo(o);if(r=0){}}}", "n_tokens": 52, "n_pass": [462, 62, 46]}
{"time": "2021-02-22 09:32:00.709860", "score": "0.2837", "loss": "1.9224", "code": "t compare(a o,n o){if (d() ==n){leTo(o);if(r=0){}}}", "n_tokens": 51, "n_pass": [464, 63, 47]}
{"time": "2021-02-22 09:32:03.321060", "score": "0.2837", "loss": "1.9224", "code": "t compare(a o,n o){if(d() ==n){leTo(o);if(r=0){}}}", "n_tokens": 50, "n_pass": [467, 64, 48]}
{"time": "2021-02-22 09:32:05.930853", "score": "0.2837", "loss": "1.9224", "code": "t compare(a o,n o){if(d()==n){leTo(o);if(r=0){}}}", "n_tokens": 49, "n_pass": [472, 65, 49]}
{"time": "2021-02-22 09:32:22.383596", "score": "0.27", "loss": "1.9607", "code": "t compare(a o,n o){if(d()==n){leTo(o);if(r0){}}}", "n_tokens": 48, "n_pass": [490, 71, 50]}
{"time": "2021-02-22 09:32:24.970118", "score": "0.27", "loss": "1.9607", "code": "t compare(a o,n o){if(d()==n){leTo(o);if(r){}}}", "n_tokens": 47, "n_pass": [491, 72, 51]}

Minimal simplified code:
t compare(a o,n o){if(d()==n){leTo(o);if(r){}}}

