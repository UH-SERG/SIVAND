
path = /scratch/rabin/data/code2vec/transforms/Methods/java-large/test/fengjiachun__Jupiter/jupiter-common/src/test/java/org/jupiter/common/concurrent/collection/NonBlockingMapTest_main.java
method_name = main
method_body = public static void main(String[] args) { NonBlockingHashMap<Integer, String> map = new NonBlockingHashMap<>(); for (int i = 0; i < 100; i++) { map.put(i, "--" + i); } String val = map.get(3); System.out.println(val); }
predict, score, loss = main, 0.999998927116394, 2.145764938177308e-06

Trace of simplified code(s):
{"time": "2021-05-26 14:30:29.186302", "score": "1.0", "loss": "0.0", "code": "public static void main(String[] args) { NonBlockingHashMap<Integer, String> map = new NonBlockingHashMap<>(); for (int i = 0; i < 100; i++) { map.put(i, \"--\" + i); } String val = map.get(3); System.out.println(val); }", "n_tokens": 218, "n_pass": [1, 1, 1]}
{"time": "2021-05-26 14:30:31.842752", "score": "0.9999", "loss": "0.0001", "code": "public static void main(String[] args) { NonBlockingHa= new NonBlockingHashMap<>(); for (int i = 0; i < 100; i++) { map.put(i, \"--\" + i); } String val = map.get(3); System.out.println(val); }", "n_tokens": 191, "n_pass": [22, 2, 2]}
{"time": "2021-05-26 14:30:34.478270", "score": "1.0", "loss": "0.0001", "code": "public static void main(String[] args) { NonBlockingHa= new NonBlockingHashMap<>(); for (int i = 0; i < 100; i++) { map.put(i, \"--\" + i); } String va; System.out.println(val); }", "n_tokens": 177, "n_pass": [50, 3, 3]}
{"time": "2021-05-26 14:30:37.094690", "score": "1.0", "loss": "0.0001", "code": " void main(String[] args) { NonBlockingHa= new NonBlockingHashMap<>(); for (int i = 0; i < 100; i++) { map.put(i, \"--\" + i); } String va; System.out.println(val); }", "n_tokens": 164, "n_pass": [53, 4, 4]}
{"time": "2021-05-26 14:30:40.124554", "score": "1.0", "loss": "0.0001", "code": " void main(String[] args) { NongHa= new NonBlockingHashMap<>(); for (int i = 0; i < 100; i++) { map.put(i, \"--\" + i); } String va; System.out.println(val); }", "n_tokens": 157, "n_pass": [95, 5, 5]}
{"time": "2021-05-26 14:30:42.755012", "score": "1.0", "loss": "0.0", "code": " void main(String[] args) { NongHa= new NonBlashMap<>(); for (int i = 0; i < 100; i++) { map.put(i, \"--\" + i); } String va; System.out.println(val); }", "n_tokens": 150, "n_pass": [98, 6, 6]}
{"time": "2021-05-26 14:30:45.361680", "score": "0.9999", "loss": "0.0001", "code": " void main(String[] args) { NongHa= new NonBlashMap<>(); for (int i = 0; ; i++) { map.put(i, \"--\" + i); } String va; System.out.println(val); }", "n_tokens": 143, "n_pass": [103, 7, 7]}
{"time": "2021-05-26 14:30:47.961807", "score": "0.9998", "loss": "0.0003", "code": " void main(String[] args) { NongHa= new NonBlashMap<>(); for (int i = 0; ; i++) { map.put(i, \"--\" + i); } St; System.out.println(val); }", "n_tokens": 136, "n_pass": [109, 8, 8]}
{"time": "2021-05-26 14:30:50.551443", "score": "0.9995", "loss": "0.001", "code": " void main(String[] args) { NongHa= new NonBlashMap<>(); for (int i = 0; ; i++) { map.put(i, \"--\" + i); } Stm.out.println(val); }", "n_tokens": 129, "n_pass": [110, 9, 9]}
{"time": "2021-05-26 14:30:53.166238", "score": "0.9976", "loss": "0.0035", "code": " void main(String[] args) { NongHa= new NonBlashMap<>(); for (int i = 0; ; i++) { map.put(i, \"--\" + i); } Strintln(val); }", "n_tokens": 122, "n_pass": [111, 10, 10]}
{"time": "2021-05-26 14:30:56.207094", "score": "0.9976", "loss": "0.0035", "code": " void main(String[] args) { NongHa= new NonBlashMap<>(); for (int i = 0; ; i++) { map.put(i, \"--\" + i); } ntln(val); }", "n_tokens": 118, "n_pass": [166, 11, 11]}
{"time": "2021-05-26 14:30:58.794524", "score": "0.9969", "loss": "0.0043", "code": " void main(String[] args) { NongHa= new NonBlashMap<>(); for (int i = 0; ; i++) { map.put(i, \"--\" + i); } (val); }", "n_tokens": 114, "n_pass": [167, 12, 12]}
{"time": "2021-05-26 14:31:01.445777", "score": "0.87", "loss": "0.2419", "code": "id main(String[] args) { NongHa= new NonBlashMap<>(); for (int i = 0; ; i++) { map.put(i, \"--\" + i); } (val); }", "n_tokens": 111, "n_pass": [170, 13, 13]}
{"time": "2021-05-26 14:31:10.082803", "score": "0.87", "loss": "0.2419", "code": "id main(String[] args) {ngHa= new NonBlashMap<>(); for (int i = 0; ; i++) { map.put(i, \"--\" + i); } (val); }", "n_tokens": 108, "n_pass": [179, 16, 14]}
{"time": "2021-05-26 14:31:12.676182", "score": "0.8794", "loss": "0.1882", "code": "id main(String[] args) {a= new NonBlashMap<>(); for (int i = 0; ; i++) { map.put(i, \"--\" + i); } (val); }", "n_tokens": 105, "n_pass": [180, 17, 15]}
{"time": "2021-05-26 14:31:15.263428", "score": "0.999", "loss": "0.0016", "code": "id main(String[] args) {new NonBlashMap<>(); for (int i = 0; ; i++) { map.put(i, \"--\" + i); } (val); }", "n_tokens": 102, "n_pass": [181, 18, 16]}
{"time": "2021-05-26 14:31:17.863775", "score": "0.999", "loss": "0.0016", "code": "id main(String[] args) {new NoashMap<>(); for (int i = 0; ; i++) { map.put(i, \"--\" + i); } (val); }", "n_tokens": 99, "n_pass": [184, 19, 17]}
{"time": "2021-05-26 14:31:20.518452", "score": "1.0", "loss": "0.0", "code": "id main(String[] args) {new NoMap<>(); for (int i = 0; ; i++) { map.put(i, \"--\" + i); } (val); }", "n_tokens": 96, "n_pass": [185, 20, 18]}
{"time": "2021-05-26 14:31:23.110224", "score": "0.9983", "loss": "0.0025", "code": "id main(String[] args) {new No<>(); for (int i = 0; ; i++) { map.put(i, \"--\" + i); } (val); }", "n_tokens": 93, "n_pass": [186, 21, 19]}
{"time": "2021-05-26 14:31:25.702975", "score": "0.9977", "loss": "0.0038", "code": "id main(String[] args) {new No<>(); for (ii = 0; ; i++) { map.put(i, \"--\" + i); } (val); }", "n_tokens": 90, "n_pass": [191, 22, 20]}
{"time": "2021-05-26 14:31:28.306327", "score": "0.9985", "loss": "0.0022", "code": "id main(String[] args) {new No<>(); for (i0; ; i++) { map.put(i, \"--\" + i); } (val); }", "n_tokens": 86, "n_pass": [192, 23, 21]}
{"time": "2021-05-26 14:31:30.893520", "score": "0.9985", "loss": "0.0021", "code": "id main(String[] args) {new No<>(); for (i0; ;) { map.put(i, \"--\" + i); } (val); }", "n_tokens": 82, "n_pass": [194, 24, 22]}
{"time": "2021-05-26 14:31:33.464222", "score": "0.9958", "loss": "0.0061", "code": "id main(String[] args) {new No<>(); for (i0; ;) { put(i, \"--\" + i); } (val); }", "n_tokens": 78, "n_pass": [196, 25, 23]}
{"time": "2021-05-26 14:31:36.843250", "score": "0.5752", "loss": "0.9487", "code": "id main(Sng[] args) {new No<>(); for (i0; ;) { put(i, \"--\" + i); } (val); }", "n_tokens": 75, "n_pass": [207, 26, 24]}
{"time": "2021-05-26 14:31:44.687595", "score": "0.9488", "loss": "0.0645", "code": "id main(ng[] args) {new No<>(); for (i0; ;) { put(i, \"--\" + i); } (val); }", "n_tokens": 74, "n_pass": [276, 28, 25]}
{"time": "2021-05-26 14:31:47.282742", "score": "0.9935", "loss": "0.0083", "code": "id main(g[] args) {new No<>(); for (i0; ;) { put(i, \"--\" + i); } (val); }", "n_tokens": 73, "n_pass": [277, 29, 26]}
{"time": "2021-05-26 14:31:52.472404", "score": "0.3294", "loss": "1.4051", "code": "id main(g[] as) {new No<>(); for (i0; ;) { put(i, \"--\" + i); } (val); }", "n_tokens": 71, "n_pass": [282, 31, 27]}
{"time": "2021-05-26 14:31:55.081834", "score": "0.3294", "loss": "1.4051", "code": "id main(g[] as) {new No(); for (i0; ;) { put(i, \"--\" + i); } (val); }", "n_tokens": 69, "n_pass": [288, 32, 28]}
{"time": "2021-05-26 14:31:57.656286", "score": "0.6099", "loss": "0.7609", "code": "id main(g[] as) {new No(); for (i0; ;) { t(i, \"--\" + i); } (val); }", "n_tokens": 67, "n_pass": [298, 33, 29]}
{"time": "2021-05-26 14:32:00.223328", "score": "0.692", "loss": "0.5201", "code": "id main(g[] as) {new No(); for (i0; ;) { t( \"--\" + i); } (val); }", "n_tokens": 65, "n_pass": [300, 34, 30]}
{"time": "2021-05-26 14:32:02.830651", "score": "0.6951", "loss": "0.5081", "code": "id main(g[] as) {new No(); for (i0; ;) { t( \"\" + i); } (val); }", "n_tokens": 63, "n_pass": [302, 35, 31]}
{"time": "2021-05-26 14:32:05.439459", "score": "0.6881", "loss": "0.5206", "code": "id main(g[] as) {new No(); for (i0; ;) { t( \"\" + i); } (v); }", "n_tokens": 61, "n_pass": [309, 36, 32]}
{"time": "2021-05-26 14:32:08.060885", "score": "0.9991", "loss": "0.0015", "code": "d main(g[] as) {new No(); for (i0; ;) { t( \"\" + i); } (v); }", "n_tokens": 60, "n_pass": [312, 37, 33]}
{"time": "2021-05-26 14:32:13.020771", "score": "0.9996", "loss": "0.0006", "code": "d main(g[]s) {new No(); for (i0; ;) { t( \"\" + i); } (v); }", "n_tokens": 58, "n_pass": [323, 38, 34]}
{"time": "2021-05-26 14:32:29.672205", "score": "0.8971", "loss": "0.1241", "code": "d main(g[]s) {new o(); for (i0; ;) { t( \"\" + i); } (v); }", "n_tokens": 57, "n_pass": [407, 41, 35]}
{"time": "2021-05-26 14:32:32.279955", "score": "0.8971", "loss": "0.1241", "code": "d main(g[]s) {new o();for (i0; ;) { t( \"\" + i); } (v); }", "n_tokens": 56, "n_pass": [411, 42, 36]}
{"time": "2021-05-26 14:32:34.862403", "score": "0.8971", "loss": "0.1241", "code": "d main(g[]s) {new o();for(i0; ;) { t( \"\" + i); } (v); }", "n_tokens": 55, "n_pass": [415, 43, 37]}
{"time": "2021-05-26 14:32:37.472753", "score": "0.8878", "loss": "0.1361", "code": "d main(g[]s) {new o();for(0; ;) { t( \"\" + i); } (v); }", "n_tokens": 54, "n_pass": [417, 44, 38]}
{"time": "2021-05-26 14:32:40.057560", "score": "0.908", "loss": "0.1104", "code": "d main(g[]s) {new o();for(; ;) { t( \"\" + i); } (v); }", "n_tokens": 53, "n_pass": [418, 45, 39]}
{"time": "2021-05-26 14:32:42.642957", "score": "0.908", "loss": "0.1104", "code": "d main(g[]s) {new o();for(;;) { t( \"\" + i); } (v); }", "n_tokens": 52, "n_pass": [420, 46, 40]}
{"time": "2021-05-26 14:32:45.230945", "score": "0.908", "loss": "0.1104", "code": "d main(g[]s) {new o();for(;;){ t( \"\" + i); } (v); }", "n_tokens": 51, "n_pass": [423, 47, 41]}
{"time": "2021-05-26 14:32:47.805994", "score": "0.908", "loss": "0.1104", "code": "d main(g[]s) {new o();for(;;){t( \"\" + i); } (v); }", "n_tokens": 50, "n_pass": [425, 48, 42]}
{"time": "2021-05-26 14:32:50.385826", "score": "0.948", "loss": "0.0605", "code": "d main(g[]s) {new o();for(;;){( \"\" + i); } (v); }", "n_tokens": 49, "n_pass": [426, 49, 43]}
{"time": "2021-05-26 14:32:52.954032", "score": "0.948", "loss": "0.0605", "code": "d main(g[]s) {new o();for(;;){(\"\" + i); } (v); }", "n_tokens": 48, "n_pass": [428, 50, 44]}
{"time": "2021-05-26 14:32:55.553074", "score": "0.948", "loss": "0.0605", "code": "d main(g[]s) {new o();for(;;){(\"\"+ i); } (v); }", "n_tokens": 47, "n_pass": [431, 51, 45]}
{"time": "2021-05-26 14:32:58.125060", "score": "0.948", "loss": "0.0605", "code": "d main(g[]s) {new o();for(;;){(\"\"+i); } (v); }", "n_tokens": 46, "n_pass": [433, 52, 46]}
{"time": "2021-05-26 14:33:00.661404", "score": "0.948", "loss": "0.0605", "code": "d main(g[]s) {new o();for(;;){(\"\"+i);} (v); }", "n_tokens": 45, "n_pass": [437, 53, 47]}
{"time": "2021-05-26 14:33:03.222794", "score": "0.948", "loss": "0.0605", "code": "d main(g[]s) {new o();for(;;){(\"\"+i);}(v); }", "n_tokens": 44, "n_pass": [439, 54, 48]}
{"time": "2021-05-26 14:33:05.792290", "score": "0.948", "loss": "0.0605", "code": "d main(g[]s) {new o();for(;;){(\"\"+i);}(v);}", "n_tokens": 43, "n_pass": [444, 55, 49]}
{"time": "2021-05-26 14:33:10.718090", "score": "0.948", "loss": "0.0605", "code": "d main(g[]s){new o();for(;;){(\"\"+i);}(v);}", "n_tokens": 42, "n_pass": [458, 56, 50]}

Minimal simplified code:
d main(g[]s){new o();for(;;){(""+i);}(v);}

