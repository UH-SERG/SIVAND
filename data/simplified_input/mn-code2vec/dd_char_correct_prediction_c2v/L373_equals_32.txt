
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/dronekit__dronekit-android/ClientLib/src/main/java/com/o3dr/services/android/lib/drone/property/Gps_equals.java
method_name = equals
method_body = @Override public boolean equals(Object o) { if (this == o) return true; if (!(o instanceof Gps)) return false; Gps gps = (Gps) o; if (fixType != gps.fixType) return false; if (Double.compare(gps.gpsEph, gpsEph) != 0) return false; if (satCount != gps.satCount) return false; if (position != null ? !position.equals(gps.position) : gps.position != null) return false; if (vehicleArmed != gps.vehicleArmed) return false; if (ekfStatus != null ? !ekfStatus.equals(gps.ekfStatus) : gps.ekfStatus != null) return false; return true; }
predict, score, loss = equals, 0.999998927116394, 1.4305104514278355e-06

Trace of simplified code(s):
{"time": "2021-02-25 07:34:56.308955", "score": "1.0", "loss": "0.0", "code": "@Override public boolean equals(Object o) { if (this == o) return true; if (!(o instanceof Gps)) return false; Gps gps = (Gps) o; if (fixType != gps.fixType) return false; if (Double.compare(gps.gpsEph, gpsEph) != 0) return false; if (satCount != gps.satCount) return false; if (position != null ? !position.equals(gps.position) : gps.position != null) return false; if (vehicleArmed != gps.vehicleArmed) return false; if (ekfStatus != null ? !ekfStatus.equals(gps.ekfStatus) : gps.ekfStatus != null) return false; return true; }", "n_tokens": 529, "n_pass": [1, 1, 1]}
{"time": "2021-02-25 07:34:59.061678", "score": "1.0", "loss": "0.0", "code": "@Override public boolean equals(Object o) { if (this == o) return true; if (!(o instanceof Gps)) return false; Gps gps = (Gps) o; if (fixType != gps.fixType) return false; if (Double.compare(gps.gpsEph, gpsEph) != 0) return false; if (satCount != gps.satCount) return false; if (position != null ? !position.equals(gps.position) :leArmed) return false; if (ekfStatus != null ? !ekfStatus.equals(gps.ekfStatus) : gps.ekfStatus != null) return false; return true; }", "n_tokens": 463, "n_pass": [25, 2, 2]}
{"time": "2021-02-25 07:35:01.759539", "score": "1.0", "loss": "0.0", "code": "@Override public boolean equals(Object o) { if (this == o) return true; if (!(o instanceof Gps)) return false; Gps gps = (Gps) o; if (fixType != gps.fixType) return false; if (Double.compare(gps.gpsEph, gpsEph) != 0) return false; if (satCount != gps.satCount) return false; if (position != null ? !position.equals(gps.position) :tus != null ? !ekfStatus.equals(gps.ekfStatus) : gps.ekfStatus != null) return false; return true; }", "n_tokens": 430, "n_pass": [46, 3, 3]}
{"time": "2021-02-25 07:35:04.492577", "score": "1.0", "loss": "0.0", "code": "@Override public boolean equals(Object o) { if (this == o) return true; if (!(o instanceof Gps)) return false; Gps gps = (Gps) o; iffalse; if (Double.compare(gps.gpsEph, gpsEph) != 0) return false; if (satCount != gps.satCount) return false; if (position != null ? !position.equals(gps.position) :tus != null ? !ekfStatus.equals(gps.ekfStatus) : gps.ekfStatus != null) return false; return true; }", "n_tokens": 397, "n_pass": [53, 4, 4]}
{"time": "2021-02-25 07:35:07.250968", "score": "1.0", "loss": "0.0", "code": "@Override public boolean equals(Object o) { if (this == o) return true; if (!(o instanceof Gps)) refalse; if (Double.compare(gps.gpsEph, gpsEph) != 0) return false; if (satCount != gps.satCount) return false; if (position != null ? !position.equals(gps.position) :tus != null ? !ekfStatus.equals(gps.ekfStatus) : gps.ekfStatus != null) return false; return true; }", "n_tokens": 364, "n_pass": [65, 5, 5]}
{"time": "2021-02-25 07:35:09.968154", "score": "1.0", "loss": "0.0", "code": "@Override public boolean equals(Object o) { if (this == o) return false; if (Double.compare(gps.gpsEph, gpsEph) != 0) return false; if (satCount != gps.satCount) return false; if (position != null ? !position.equals(gps.position) :tus != null ? !ekfStatus.equals(gps.ekfStatus) : gps.ekfStatus != null) return false; return true; }", "n_tokens": 331, "n_pass": [76, 6, 6]}
{"time": "2021-02-25 07:35:12.706579", "score": "1.0", "loss": "0.0", "code": "@Override public boolean equals(Object o) { if (this == o) return false; if (Double.compare(gps.gpsEph, gpsEph) != 0) return false; if (satCount != gps.satCount) return false; if (position != null ? !position.equ :tus != null ? !ekfStatus.equals(gps.ekfStatus) : gps.ekfStatus != null) return false; return true; }", "n_tokens": 314, "n_pass": [116, 7, 7]}
{"time": "2021-02-25 07:35:15.411531", "score": "0.9999", "loss": "0.0001", "code": "@Override public boolean equals(Object o) { if (this == o) return false; if (Double.compare(gps.gpsEph, gpsEph) != 0) return false; if (satCount != gps.satCount) return false; if (position != null ? !position.equekfStatus.equals(gps.ekfStatus) : gps.ekfStatus != null) return false; return true; }", "n_tokens": 297, "n_pass": [117, 8, 8]}
{"time": "2021-02-25 07:35:18.066815", "score": "1.0", "loss": "0.0", "code": "@Override public boolean equals(Object o) { if (this == o) return false; if (Double.compare(gps.gpsEph, gpsEph) != 0) return false; if (satCount != gps.satCount) return false; if (position != null ? !position.equekfStatus.equals(gps.ekfStatus) : null) return false; return true; }", "n_tokens": 280, "n_pass": [120, 9, 9]}
{"time": "2021-02-25 07:35:20.783465", "score": "1.0", "loss": "0.0", "code": " boolean equals(Object o) { if (this == o) return false; if (Double.compare(gps.gpsEph, gpsEph) != 0) return false; if (satCount != gps.satCount) return false; if (position != null ? !position.equekfStatus.equals(gps.ekfStatus) : null) return false; return true; }", "n_tokens": 264, "n_pass": [123, 10, 10]}
{"time": "2021-02-25 07:35:23.986039", "score": "0.9998", "loss": "0.0003", "code": " boolean equals() { if (this == o) return false; if (Double.compare(gps.gpsEph, gpsEph) != 0) return false; if (satCount != gps.satCount) return false; if (position != null ? !position.equekfStatus.equals(gps.ekfStatus) : null) return false; return true; }", "n_tokens": 256, "n_pass": [174, 11, 11]}
{"time": "2021-02-25 07:35:26.676936", "score": "1.0", "loss": "0.0", "code": " boolean equals() { if (o) return false; if (Double.compare(gps.gpsEph, gpsEph) != 0) return false; if (satCount != gps.satCount) return false; if (position != null ? !position.equekfStatus.equals(gps.ekfStatus) : null) return false; return true; }", "n_tokens": 248, "n_pass": [175, 12, 12]}
{"time": "2021-02-25 07:35:29.380809", "score": "0.9789", "loss": "0.0303", "code": " boolean equals() { if (o) return false; if (Douare(gps.gpsEph, gpsEph) != 0) return false; if (satCount != gps.satCount) return false; if (position != null ? !position.equekfStatus.equals(gps.ekfStatus) : null) return false; return true; }", "n_tokens": 240, "n_pass": [179, 13, 13]}
{"time": "2021-02-25 07:35:32.034041", "score": "0.9806", "loss": "0.0274", "code": " boolean equals() { if (o) return false; if (Douare(gps.gpsEph) != 0) return false; if (satCount != gps.satCount) return false; if (position != null ? !position.equekfStatus.equals(gps.ekfStatus) : null) return false; return true; }", "n_tokens": 232, "n_pass": [181, 14, 14]}
{"time": "2021-02-25 07:35:34.672145", "score": "0.968", "loss": "0.0539", "code": " boolean equals() { if (o) return false; if (Douare(gps.gpsEph) != 0) rese; if (satCount != gps.satCount) return false; if (position != null ? !position.equekfStatus.equals(gps.ekfStatus) : null) return false; return true; }", "n_tokens": 224, "n_pass": [184, 15, 15]}
{"time": "2021-02-25 07:35:37.356321", "score": "1.0", "loss": "0.0001", "code": " boolean equals() { if (o) return false; if (Douare(gps.gpsEph) != 0) rese; if (satCountsatCount) return false; if (position != null ? !position.equekfStatus.equals(gps.ekfStatus) : null) return false; return true; }", "n_tokens": 216, "n_pass": [187, 16, 16]}
{"time": "2021-02-25 07:35:40.006310", "score": "0.9984", "loss": "0.0029", "code": " boolean equals() { if (o) return false; if (Douare(gps.gpsEph) != 0) rese; if (satCount) return false; if (position != null ? !position.equekfStatus.equals(gps.ekfStatus) : null) return false; return true; }", "n_tokens": 208, "n_pass": [188, 17, 17]}
{"time": "2021-02-25 07:35:42.643430", "score": "0.9975", "loss": "0.0048", "code": " boolean equals() { if (o) return false; if (Douare(gps.gpsEph) != 0) rese; if (satCount) return false; if (posinull ? !position.equekfStatus.equals(gps.ekfStatus) : null) return false; return true; }", "n_tokens": 200, "n_pass": [192, 18, 18]}
{"time": "2021-02-25 07:35:45.324717", "score": "0.9977", "loss": "0.0045", "code": " boolean equals() { if (o) return false; if (Douare(gps.gpsEph) != 0) rese; if (satCount) return false; if (posinull ? !positionatus.equals(gps.ekfStatus) : null) return false; return true; }", "n_tokens": 191, "n_pass": [195, 19, 19]}
{"time": "2021-02-25 07:35:50.632225", "score": "0.9944", "loss": "0.0106", "code": " boolean equals() { if (o) return false; if (Douare(gps.gpsEph) != 0) rese; if (satCount) return false; if (posinull ? !positionatus.equals(gps.ekfStatus) : null) rse; return true; }", "n_tokens": 182, "n_pass": [200, 21, 20]}
{"time": "2021-02-25 07:35:53.661822", "score": "0.9944", "loss": "0.0106", "code": " boolean equals() { if (o) return false; if (Douare(gps.gpsEph) != 0) rese; if (satCount) return false; if (posinull ? !atus.equals(gps.ekfStatus) : null) rse; return true; }", "n_tokens": 174, "n_pass": [218, 22, 21]}
{"time": "2021-02-25 07:36:01.958538", "score": "0.9643", "loss": "0.0616", "code": " boolean equals() { if (o) return false; if (Douare(gps.gpsEph) != 0) rese; if (satCount) return false; if (posinull ? !atus.equals(ekfStatus) : null) rse; return true; }", "n_tokens": 170, "n_pass": [285, 25, 22]}
{"time": "2021-02-25 07:36:04.584160", "score": "0.9643", "loss": "0.0616", "code": " boolean equals() { if (o) return false; if (Douare(gps.gpsEph) != 0) rese; if (satCount) return false; if (posinull ? !atus.equals(tatus) : null) rse; return true; }", "n_tokens": 166, "n_pass": [286, 26, 23]}
{"time": "2021-02-25 07:36:07.209041", "score": "0.9654", "loss": "0.0596", "code": " boolean equals() { if (o) return false; if (Douare(gps.gpsEph) != 0) rese; if (satCount) return false; if (posinull ? !atus.equals(s) : null) rse; return true; }", "n_tokens": 162, "n_pass": [287, 27, 24]}
{"time": "2021-02-25 07:36:15.194439", "score": "0.9549", "loss": "0.0721", "code": "lean equals() { if (o) return false; if (Douare(gps.gpsEph) != 0) rese; if (satCount) return false; if (posinull ? !atus.equals(s) : null) rse; return true; }", "n_tokens": 158, "n_pass": [294, 30, 25]}
{"time": "2021-02-25 07:36:18.596624", "score": "0.9493", "loss": "0.0717", "code": "lean equals() { if (o) returlse; if (Douare(gps.gpsEph) != 0) rese; if (satCount) return false; if (posinull ? !atus.equals(s) : null) rse; return true; }", "n_tokens": 154, "n_pass": [302, 31, 26]}
{"time": "2021-02-25 07:36:21.250255", "score": "0.9711", "loss": "0.0474", "code": "lean equals() { if (o) returlse; if (Douare(gpsEph) != 0) rese; if (satCount) return false; if (posinull ? !atus.equals(s) : null) rse; return true; }", "n_tokens": 150, "n_pass": [307, 32, 27]}
{"time": "2021-02-25 07:36:23.862637", "score": "0.9735", "loss": "0.0435", "code": "lean equals() { if (o) returlse; if (Douare(ph) != 0) rese; if (satCount) return false; if (posinull ? !atus.equals(s) : null) rse; return true; }", "n_tokens": 146, "n_pass": [308, 33, 28]}
{"time": "2021-02-25 07:36:26.482350", "score": "0.9839", "loss": "0.0279", "code": "lean equals() { if (o) returlse; if (Douare(ph) ) rese; if (satCount) return false; if (posinull ? !atus.equals(s) : null) rse; return true; }", "n_tokens": 142, "n_pass": [310, 34, 29]}
{"time": "2021-02-25 07:36:29.103832", "score": "0.9988", "loss": "0.0016", "code": "lean equals() { if (o) returlse; if (Douare(ph) ) rese; if (ount) return false; if (posinull ? !atus.equals(s) : null) rse; return true; }", "n_tokens": 138, "n_pass": [314, 35, 30]}
{"time": "2021-02-25 07:36:31.723461", "score": "0.997", "loss": "0.0033", "code": "lean equals() { if (o) returlse; if (Douare(ph) ) rese; if (ount) returnse; if (posinull ? !atus.equals(s) : null) rse; return true; }", "n_tokens": 134, "n_pass": [318, 36, 31]}
{"time": "2021-02-25 07:36:34.374523", "score": "0.997", "loss": "0.0033", "code": "lean equals() { if (o) returlse; if (Douare(ph) ) rese; if (ount) returnse; if (null ? !atus.equals(s) : null) rse; return true; }", "n_tokens": 130, "n_pass": [321, 37, 32]}
{"time": "2021-02-25 07:36:45.653859", "score": "0.997", "loss": "0.0033", "code": "lean equals() { if (o) rlse; if (Douare(ph) ) rese; if (ount) returnse; if (null ? !atus.equals(s) : null) rse; return true; }", "n_tokens": 126, "n_pass": [339, 41, 33]}
{"time": "2021-02-25 07:36:48.282230", "score": "0.9968", "loss": "0.0035", "code": "lean equals() { if (o) rlse; if (Douare(ph) ) rese; if (ount) rese; if (null ? !atus.equals(s) : null) rse; return true; }", "n_tokens": 122, "n_pass": [350, 42, 34]}
{"time": "2021-02-25 07:37:00.267935", "score": "0.997", "loss": "0.0032", "code": "lean equals() { if (o) rlse; if (Douare(ph) ) rese; if (ount) re; if (null ? !atus.equals(s) : null) rse; return true; }", "n_tokens": 120, "n_pass": [438, 46, 35]}
{"time": "2021-02-25 07:37:02.894860", "score": "0.997", "loss": "0.0033", "code": "lean equals() { if (o) rlse; if (Douare(ph) ) rese; if (ount) re; if (ll ? !atus.equals(s) : null) rse; return true; }", "n_tokens": 118, "n_pass": [441, 47, 36]}
{"time": "2021-02-25 07:37:08.170681", "score": "0.9966", "loss": "0.0037", "code": "lean equals() { if (o) rlse; if (Douare(ph) ) rese; if (ount) re; if (ll ? !us.equals(s) : null) rse; return true; }", "n_tokens": 116, "n_pass": [445, 49, 37]}
{"time": "2021-02-25 07:37:13.413963", "score": "0.7959", "loss": "0.2353", "code": "lean equals() { if (o) rlse; if (Douare(ph) ) rese; if (ount) re; if (ll ? !us.eals(s) : null) rse; return true; }", "n_tokens": 114, "n_pass": [448, 51, 38]}
{"time": "2021-02-25 07:37:18.724385", "score": "0.688", "loss": "0.3901", "code": "lean equals() { if (o) rlse; if (Douare(ph) ) rese; if (ount) re; if (ll ? !us.eals(s) :ull) rse; return true; }", "n_tokens": 112, "n_pass": [453, 53, 39]}
{"time": "2021-02-25 07:37:21.347720", "score": "0.7703", "loss": "0.2695", "code": "lean equals() { if (o) rlse; if (Douare(ph) ) rese; if (ount) re; if (ll ? !us.eals(s) :l) rse; return true; }", "n_tokens": 110, "n_pass": [454, 54, 40]}
{"time": "2021-02-25 07:37:23.995182", "score": "0.7583", "loss": "0.284", "code": "lean equals() { if (o) rlse; if (Douare(ph) ) rese; if (ount) re; if (ll ? !us.eals(s) :l)se; return true; }", "n_tokens": 108, "n_pass": [456, 55, 41]}
{"time": "2021-02-25 07:37:34.506363", "score": "0.8326", "loss": "0.1865", "code": "an equals() { if (o) rlse; if (Douare(ph) ) rese; if (ount) re; if (ll ? !us.eals(s) :l)se; return true; }", "n_tokens": 106, "n_pass": [463, 59, 42]}
{"time": "2021-02-25 07:37:39.081705", "score": "0.8619", "loss": "0.1522", "code": "an equals() { if (o)lse; if (Douare(ph) ) rese; if (ount) re; if (ll ? !us.eals(s) :l)se; return true; }", "n_tokens": 104, "n_pass": [474, 60, 43]}
{"time": "2021-02-25 07:37:41.702494", "score": "0.8315", "loss": "0.1878", "code": "an equals() { if (o)e; if (Douare(ph) ) rese; if (ount) re; if (ll ? !us.eals(s) :l)se; return true; }", "n_tokens": 102, "n_pass": [475, 61, 44]}
{"time": "2021-02-25 07:37:44.389687", "score": "0.911", "loss": "0.0955", "code": "an equals() { if (o) if (Douare(ph) ) rese; if (ount) re; if (ll ? !us.eals(s) :l)se; return true; }", "n_tokens": 100, "n_pass": [476, 62, 45]}
{"time": "2021-02-25 07:37:47.029344", "score": "0.911", "loss": "0.0955", "code": "an equals() { if (o) if (Dare(ph) ) rese; if (ount) re; if (ll ? !us.eals(s) :l)se; return true; }", "n_tokens": 98, "n_pass": [480, 63, 46]}
{"time": "2021-02-25 07:37:49.650490", "score": "0.9216", "loss": "0.0841", "code": "an equals() { if (o) if (De(ph) ) rese; if (ount) re; if (ll ? !us.eals(s) :l)se; return true; }", "n_tokens": 96, "n_pass": [481, 64, 47]}
{"time": "2021-02-25 07:37:52.270560", "score": "0.9325", "loss": "0.0714", "code": "an equals() { if (o) if (De() ) rese; if (ount) re; if (ll ? !us.eals(s) :l)se; return true; }", "n_tokens": 94, "n_pass": [483, 65, 48]}
{"time": "2021-02-25 07:37:54.891666", "score": "0.9328", "loss": "0.071", "code": "an equals() { if (o) if (De() ) se; if (ount) re; if (ll ? !us.eals(s) :l)se; return true; }", "n_tokens": 92, "n_pass": [486, 66, 49]}
{"time": "2021-02-25 07:37:57.522213", "score": "0.9332", "loss": "0.0706", "code": "an equals() { if (o) if (De() ) ; if (ount) re; if (ll ? !us.eals(s) :l)se; return true; }", "n_tokens": 90, "n_pass": [487, 67, 50]}
{"time": "2021-02-25 07:38:00.224151", "score": "0.9697", "loss": "0.032", "code": "an equals() { if (o) if (De() ) if (ount) re; if (ll ? !us.eals(s) :l)se; return true; }", "n_tokens": 88, "n_pass": [488, 68, 51]}
{"time": "2021-02-25 07:38:03.231502", "score": "0.9612", "loss": "0.041", "code": "an equals() { if (o) if (De() ) if (nt) re; if (ll ? !us.eals(s) :l)se; return true; }", "n_tokens": 86, "n_pass": [491, 69, 52]}
{"time": "2021-02-25 07:38:05.879702", "score": "0.9612", "loss": "0.0409", "code": "an equals() { if (o) if (De() ) if (nt) ; if (ll ? !us.eals(s) :l)se; return true; }", "n_tokens": 84, "n_pass": [494, 70, 53]}
{"time": "2021-02-25 07:38:28.404037", "score": "0.9598", "loss": "0.0419", "code": "an equals() { if (o) if (De() )  (nt) ; if (ll ? !us.eals(s) :l)se; return true; }", "n_tokens": 82, "n_pass": [530, 78, 54]}
{"time": "2021-02-25 07:38:54.832302", "score": "0.9598", "loss": "0.0419", "code": "an equals() { if (o) if (De() ) (nt) ; if (ll ? !us.eals(s) :l)se; return true; }", "n_tokens": 81, "n_pass": [645, 85, 55]}
{"time": "2021-02-25 07:38:57.473731", "score": "0.9607", "loss": "0.0409", "code": "an equals() { if (o) if (De() ) (t) ; if (ll ? !us.eals(s) :l)se; return true; }", "n_tokens": 80, "n_pass": [646, 86, 56]}
{"time": "2021-02-25 07:39:00.083262", "score": "0.9607", "loss": "0.0409", "code": "an equals() { if (o) if (De() ) (t); if (ll ? !us.eals(s) :l)se; return true; }", "n_tokens": 79, "n_pass": [649, 87, 57]}
{"time": "2021-02-25 07:39:02.735077", "score": "0.9607", "loss": "0.0409", "code": "an equals() { if (o) if (De() ) (t);if (ll ? !us.eals(s) :l)se; return true; }", "n_tokens": 78, "n_pass": [651, 88, 58]}
{"time": "2021-02-25 07:39:05.373800", "score": "0.9607", "loss": "0.0409", "code": "an equals() { if (o) if (De() ) (t);if(ll ? !us.eals(s) :l)se; return true; }", "n_tokens": 77, "n_pass": [654, 89, 59]}
{"time": "2021-02-25 07:39:07.987062", "score": "0.962", "loss": "0.0395", "code": "an equals() { if (o) if (De() ) (t);if(l ? !us.eals(s) :l)se; return true; }", "n_tokens": 76, "n_pass": [656, 90, 60]}
{"time": "2021-02-25 07:39:10.603691", "score": "0.962", "loss": "0.0395", "code": "an equals() { if (o) if (De() ) (t);if(l? !us.eals(s) :l)se; return true; }", "n_tokens": 75, "n_pass": [658, 91, 61]}
{"time": "2021-02-25 07:39:13.240992", "score": "0.962", "loss": "0.0395", "code": "an equals() { if (o) if (De() ) (t);if(l?!us.eals(s) :l)se; return true; }", "n_tokens": 74, "n_pass": [660, 92, 62]}
{"time": "2021-02-25 07:39:18.456769", "score": "0.9692", "loss": "0.032", "code": "an equals() { if (o) if (De() ) (t);if(l?!s.eals(s) :l)se; return true; }", "n_tokens": 73, "n_pass": [662, 94, 63]}
{"time": "2021-02-25 07:39:23.719928", "score": "0.9024", "loss": "0.1045", "code": "an equals() { if (o) if (De() ) (t);if(l?!s.als(s) :l)se; return true; }", "n_tokens": 72, "n_pass": [665, 96, 64]}
{"time": "2021-02-25 07:39:26.341460", "score": "0.8085", "loss": "0.2211", "code": "an equals() { if (o) if (De() ) (t);if(l?!s.ls(s) :l)se; return true; }", "n_tokens": 71, "n_pass": [666, 97, 65]}
{"time": "2021-02-25 07:39:28.958194", "score": "0.7651", "loss": "0.2802", "code": "an equals() { if (o) if (De() ) (t);if(l?!s.s(s) :l)se; return true; }", "n_tokens": 70, "n_pass": [667, 98, 66]}
{"time": "2021-02-25 07:39:34.221810", "score": "0.7651", "loss": "0.2802", "code": "an equals() { if (o) if (De() ) (t);if(l?!s.s(s):l)se; return true; }", "n_tokens": 69, "n_pass": [672, 100, 67]}
{"time": "2021-02-25 07:39:36.867079", "score": "0.7574", "loss": "0.2909", "code": "an equals() { if (o) if (De() ) (t);if(l?!s.s(s):l)e; return true; }", "n_tokens": 68, "n_pass": [676, 101, 68]}
{"time": "2021-02-25 07:39:39.490172", "score": "0.7679", "loss": "0.2764", "code": "an equals() { if (o) if (De() ) (t);if(l?!s.s(s):l); return true; }", "n_tokens": 67, "n_pass": [677, 102, 69]}
{"time": "2021-02-25 07:39:44.725092", "score": "0.7679", "loss": "0.2764", "code": "an equals() { if (o) if (De() ) (t);if(l?!s.s(s):l);return true; }", "n_tokens": 66, "n_pass": [679, 104, 70]}
{"time": "2021-02-25 07:39:52.583716", "score": "0.7273", "loss": "0.3346", "code": "n equals() { if (o) if (De() ) (t);if(l?!s.s(s):l);return true; }", "n_tokens": 65, "n_pass": [688, 107, 71]}
{"time": "2021-02-25 07:39:58.331403", "score": "0.7273", "loss": "0.3346", "code": "n equals(){ if (o) if (De() ) (t);if(l?!s.s(s):l);return true; }", "n_tokens": 64, "n_pass": [699, 108, 72]}
{"time": "2021-02-25 07:40:00.920062", "score": "0.7273", "loss": "0.3346", "code": "n equals(){if (o) if (De() ) (t);if(l?!s.s(s):l);return true; }", "n_tokens": 63, "n_pass": [701, 109, 73]}
{"time": "2021-02-25 07:40:03.547272", "score": "0.7273", "loss": "0.3346", "code": "n equals(){if(o) if (De() ) (t);if(l?!s.s(s):l);return true; }", "n_tokens": 62, "n_pass": [704, 110, 74]}
{"time": "2021-02-25 07:40:06.168884", "score": "0.7273", "loss": "0.3346", "code": "n equals(){if(o)if (De() ) (t);if(l?!s.s(s):l);return true; }", "n_tokens": 61, "n_pass": [708, 111, 75]}
{"time": "2021-02-25 07:40:08.769230", "score": "0.7273", "loss": "0.3346", "code": "n equals(){if(o)if(De() ) (t);if(l?!s.s(s):l);return true; }", "n_tokens": 60, "n_pass": [711, 112, 76]}
{"time": "2021-02-25 07:40:11.371270", "score": "0.6381", "loss": "0.4695", "code": "n equals(){if(o)if(e() ) (t);if(l?!s.s(s):l);return true; }", "n_tokens": 59, "n_pass": [713, 113, 77]}
{"time": "2021-02-25 07:40:14.000620", "score": "0.6381", "loss": "0.4695", "code": "n equals(){if(o)if(e()) (t);if(l?!s.s(s):l);return true; }", "n_tokens": 58, "n_pass": [717, 114, 78]}
{"time": "2021-02-25 07:40:16.603348", "score": "0.6381", "loss": "0.4695", "code": "n equals(){if(o)if(e())(t);if(l?!s.s(s):l);return true; }", "n_tokens": 57, "n_pass": [719, 115, 79]}
{"time": "2021-02-25 07:40:57.658686", "score": "0.6381", "loss": "0.4695", "code": "n equals(){if(o)if(e())(t);if(l?!s.s(s):l);return true;}", "n_tokens": 56, "n_pass": [793, 129, 80]}

Minimal simplified code:
n equals(){if(o)if(e())(t);if(l?!s.s(s):l);return true;}

