
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/bluestreak01__questdb/core/src/main/java/com/questdb/net/SecureSocketChannel_close.java
method_name = close
method_body = @Override public void close() throws IOException { socketChannel.close(); ByteBuffers.release(inBuf); ByteBuffers.release(outBuf); ByteBuffers.release(swapBuf); if (engine.isOutboundDone()) { engine.closeOutbound(); } while (!engine.isInboundDone()) { try { engine.closeInbound(); } catch (SSLException ignored) { } } }
predict, score, loss = close, 0.9484725594520569, 0.05947169288992882

Trace of simplified code(s):
{"time": "2021-02-25 01:44:37.606286", "score": "0.9485", "loss": "0.0595", "code": "@Override public void close() throws IOException { socketChannel.close(); ByteBuffers.release(inBuf); ByteBuffers.release(outBuf); ByteBuffers.release(swapBuf); if (engine.isOutboundDone()) { engine.closeOutbound(); } while (!engine.isInboundDone()) { try { engine.closeInbound(); } catch (SSLException ignored) { } } }", "n_tokens": 319, "n_pass": [1, 1, 1]}
{"time": "2021-02-25 01:44:40.259878", "score": "0.8566", "loss": "0.1791", "code": "@Override public void close() throws IOException { socketChannel.close(); ByteB; if (engine.isOutboundDone()) { engine.closeOutbound(); } while (!engine.isInboundDone()) { try { engine.closeInbound(); } catch (SSLException ignored) { } } }", "n_tokens": 239, "n_pass": [9, 2, 2]}
{"time": "2021-02-25 01:44:42.987973", "score": "0.8769", "loss": "0.1537", "code": "@Override public void close() throws IOException { socketChannel.close(); ByteB; if (engine.isOutboundDone()) { engine.closeOutbound(); } while (!engine.isInboundDone()) { try { e; } catch (SSLException ignored) { } } }", "n_tokens": 219, "n_pass": [41, 3, 3]}
{"time": "2021-02-25 01:44:45.623483", "score": "0.6814", "loss": "0.4384", "code": "id close() throws IOException { socketChannel.close(); ByteB; if (engine.isOutboundDone()) { engine.closeOutbound(); } while (!engine.isInboundDone()) { try { e; } catch (SSLException ignored) { } } }", "n_tokens": 200, "n_pass": [44, 4, 4]}
{"time": "2021-02-25 01:44:48.270087", "score": "0.6095", "loss": "0.5772", "code": "id close() throws IOException { socketCh; if (engine.isOutboundDone()) { engine.closeOutbound(); } while (!engine.isInboundDone()) { try { e; } catch (SSLException ignored) { } } }", "n_tokens": 180, "n_pass": [47, 5, 5]}
{"time": "2021-02-25 01:44:50.933129", "score": "0.6688", "loss": "0.5299", "code": "id close() throws IOException { socketCh; if (engiundDone()) { engine.closeOutbound(); } while (!engine.isInboundDone()) { try { e; } catch (SSLException ignored) { } } }", "n_tokens": 170, "n_pass": [76, 6, 6]}
{"time": "2021-02-25 01:44:56.284160", "score": "0.6512", "loss": "0.5413", "code": "id close() throws IOException { socketCh; if (engiundDone()) { engine.closeOutbound(); } while (!engundDone()) { try { e; } catch (SSLException ignored) { } } }", "n_tokens": 160, "n_pass": [82, 8, 7]}
{"time": "2021-02-25 01:44:58.949949", "score": "0.3841", "loss": "1.0981", "code": "id close() throws IO{ socketCh; if (engiundDone()) { engine.closeOutbound(); } while (!engundDone()) { try { e; } catch (SSLException ignored) { } } }", "n_tokens": 150, "n_pass": [91, 9, 8]}
{"time": "2021-02-25 01:45:22.870837", "score": "0.3841", "loss": "1.0981", "code": "id close() throws IO{ socketCh; if (engiundDone()) { engine.closeOutbound(); } while (!engne()) { try { e; } catch (SSLException ignored) { } } }", "n_tokens": 145, "n_pass": [151, 18, 9]}
{"time": "2021-02-25 01:45:25.529532", "score": "0.3897", "loss": "1.0574", "code": "id close() throws IO{ socketCh; if (engiundDone()) { engine.closeOutbound(); } while (!engne()) { try { e; } catch (SSLEion ignored) { } } }", "n_tokens": 140, "n_pass": [157, 19, 10]}
{"time": "2021-02-25 01:45:28.184680", "score": "0.3686", "loss": "1.1132", "code": "id close() throws IO{ socketCh; if (engiundDone()) { engine.closeOutbound(); } while (!engne()) { try { e; } catch (SSLEion id) { } } }", "n_tokens": 135, "n_pass": [159, 20, 11]}
{"time": "2021-02-25 01:45:54.562953", "score": "0.6534", "loss": "0.5548", "code": "id close() throws IO{ sockCh; if (engiundDone()) { engine.closeOutbound(); } while (!engne()) { try { e; } catch (SSLEion id) { } } }", "n_tokens": 133, "n_pass": [258, 29, 12]}
{"time": "2021-02-25 01:45:59.956849", "score": "0.6534", "loss": "0.5548", "code": "id close() throws IO{ sockCh; if (giundDone()) { engine.closeOutbound(); } while (!engne()) { try { e; } catch (SSLEion id) { } } }", "n_tokens": 131, "n_pass": [263, 31, 13]}
{"time": "2021-02-25 01:46:02.604019", "score": "0.6534", "loss": "0.5548", "code": "id close() throws IO{ sockCh; if (undDone()) { engine.closeOutbound(); } while (!engne()) { try { e; } catch (SSLEion id) { } } }", "n_tokens": 129, "n_pass": [264, 32, 14]}
{"time": "2021-02-25 01:46:05.272442", "score": "0.6534", "loss": "0.5548", "code": "id close() throws IO{ sockCh; if (dDone()) { engine.closeOutbound(); } while (!engne()) { try { e; } catch (SSLEion id) { } } }", "n_tokens": 127, "n_pass": [265, 33, 15]}
{"time": "2021-02-25 01:46:07.893460", "score": "0.6641", "loss": "0.6094", "code": "id close() throws IO{ sockCh; if (one()) { engine.closeOutbound(); } while (!engne()) { try { e; } catch (SSLEion id) { } } }", "n_tokens": 125, "n_pass": [266, 34, 16]}
{"time": "2021-02-25 01:46:10.517546", "score": "0.6765", "loss": "0.5044", "code": "id close() throws IO{ sockCh; if (e()) { engine.closeOutbound(); } while (!engne()) { try { e; } catch (SSLEion id) { } } }", "n_tokens": 123, "n_pass": [267, 35, 17]}
{"time": "2021-02-25 01:46:13.152470", "score": "0.7445", "loss": "0.4028", "code": "id close() throws IO{ sockCh; if (e()) {ngine.closeOutbound(); } while (!engne()) { try { e; } catch (SSLEion id) { } } }", "n_tokens": 121, "n_pass": [271, 36, 18]}
{"time": "2021-02-25 01:46:15.809394", "score": "0.8079", "loss": "0.3089", "code": "id close() throws IO{ sockCh; if (e()) {ne.closeOutbound(); } while (!engne()) { try { e; } catch (SSLEion id) { } } }", "n_tokens": 118, "n_pass": [272, 37, 19]}
{"time": "2021-02-25 01:46:18.464432", "score": "0.8328", "loss": "0.547", "code": "id close() throws IO{ sockCh; if (e()) {closeOutbound(); } while (!engne()) { try { e; } catch (SSLEion id) { } } }", "n_tokens": 115, "n_pass": [273, 38, 20]}
{"time": "2021-02-25 01:46:34.298246", "score": "0.8453", "loss": "0.559", "code": "id close() throws IO{ sockCh; if (e()) {closeOutbound(); } while (!ne()) { try { e; } catch (SSLEion id) { } } }", "n_tokens": 112, "n_pass": [283, 44, 21]}
{"time": "2021-02-25 01:46:36.954165", "score": "0.8453", "loss": "0.559", "code": "id close() throws IO{ sockCh; if (e()) {closeOutbound(); } while (!ne()) { try { e; } catch (Sion id) { } } }", "n_tokens": 109, "n_pass": [293, 45, 22]}
{"time": "2021-02-25 01:46:39.580562", "score": "0.8541", "loss": "0.5267", "code": "id close() throws IO{ sockCh; if (e()) {closeOutbound(); } while (!ne()) { try { e; } catch (S id) { } } }", "n_tokens": 106, "n_pass": [294, 46, 23]}
{"time": "2021-02-25 01:46:44.032809", "score": "0.2146", "loss": "2.3306", "code": "id close() throws IO{ ckCh; if (e()) {closeOutbound(); } while (!ne()) { try { e; } catch (S id) { } } }", "n_tokens": 104, "n_pass": [310, 47, 24]}
{"time": "2021-02-25 01:46:46.658860", "score": "0.327", "loss": "1.985", "code": "id close() throws IO{ Ch; if (e()) {closeOutbound(); } while (!ne()) { try { e; } catch (S id) { } } }", "n_tokens": 102, "n_pass": [311, 48, 25]}
{"time": "2021-02-25 01:47:11.769416", "score": "0.1984", "loss": "2.3212", "code": "id close() throws IO{ h; if (e()) {closeOutbound(); } while (!ne()) { try { e; } catch (S id) { } } }", "n_tokens": 101, "n_pass": [432, 55, 26]}
{"time": "2021-02-25 01:47:14.428967", "score": "0.1984", "loss": "2.3212", "code": "id close() throws IO{ h;if (e()) {closeOutbound(); } while (!ne()) { try { e; } catch (S id) { } } }", "n_tokens": 100, "n_pass": [434, 56, 27]}
{"time": "2021-02-25 01:47:17.091266", "score": "0.1984", "loss": "2.3212", "code": "id close() throws IO{ h;if(e()) {closeOutbound(); } while (!ne()) { try { e; } catch (S id) { } } }", "n_tokens": 99, "n_pass": [437, 57, 28]}
{"time": "2021-02-25 01:47:19.851831", "score": "0.1984", "loss": "2.3212", "code": "id close() throws IO{ h;if(e()){closeOutbound(); } while (!ne()) { try { e; } catch (S id) { } } }", "n_tokens": 98, "n_pass": [443, 58, 29]}
{"time": "2021-02-25 01:47:57.041183", "score": "0.1984", "loss": "2.3212", "code": "id close() throws IO{ h;if(e()){closeOutbound();} while (!ne()) { try { e; } catch (S id) { } } }", "n_tokens": 97, "n_pass": [461, 72, 30]}
{"time": "2021-02-25 01:47:59.665061", "score": "0.1984", "loss": "2.3212", "code": "id close() throws IO{ h;if(e()){closeOutbound();}while (!ne()) { try { e; } catch (S id) { } } }", "n_tokens": 96, "n_pass": [463, 73, 31]}
{"time": "2021-02-25 01:48:04.951393", "score": "0.2013", "loss": "2.2988", "code": "id close() throws IO{ h;if(e()){closeOutbound();}while (!ne()) { try {; } catch (S id) { } } }", "n_tokens": 94, "n_pass": [476, 75, 32]}
{"time": "2021-02-25 01:48:07.815624", "score": "0.2013", "loss": "2.2988", "code": "id close() throws IO{ h;if(e()){closeOutbound();}while (!ne()) { try {} catch (S id) { } } }", "n_tokens": 92, "n_pass": [477, 76, 33]}
{"time": "2021-02-25 01:48:18.514004", "score": "0.2013", "loss": "2.2988", "code": "id close()throws IO{ h;if(e()){closeOutbound();}while (!ne()) { try {} catch (S id) { } } }", "n_tokens": 91, "n_pass": [499, 79, 34]}
{"time": "2021-02-25 01:48:26.447882", "score": "0.2013", "loss": "2.2988", "code": "id close()throws IO{h;if(e()){closeOutbound();}while (!ne()) { try {} catch (S id) { } } }", "n_tokens": 90, "n_pass": [510, 82, 35]}
{"time": "2021-02-25 01:49:26.455686", "score": "0.2013", "loss": "2.2988", "code": "id close()throws IO{h;if(e()){closeOutbound();}while(!ne()) { try {} catch (S id) { } } }", "n_tokens": 89, "n_pass": [623, 102, 36]}
{"time": "2021-02-25 01:49:29.104145", "score": "0.5444", "loss": "0.9637", "code": "id close()throws IO{h;if(e()){closeOutbound();}while(ne()) { try {} catch (S id) { } } }", "n_tokens": 88, "n_pass": [624, 103, 37]}
{"time": "2021-02-25 01:49:37.051792", "score": "0.5444", "loss": "0.9637", "code": "id close()throws IO{h;if(e()){closeOutbound();}while(ne()){ try {} catch (S id) { } } }", "n_tokens": 87, "n_pass": [630, 106, 38]}
{"time": "2021-02-25 01:49:39.725851", "score": "0.5444", "loss": "0.9637", "code": "id close()throws IO{h;if(e()){closeOutbound();}while(ne()){try {} catch (S id) { } } }", "n_tokens": 86, "n_pass": [632, 107, 39]}
{"time": "2021-02-25 01:49:42.373168", "score": "0.5444", "loss": "0.9637", "code": "id close()throws IO{h;if(e()){closeOutbound();}while(ne()){try{} catch (S id) { } } }", "n_tokens": 85, "n_pass": [636, 108, 40]}
{"time": "2021-02-25 01:49:45.016004", "score": "0.5444", "loss": "0.9637", "code": "id close()throws IO{h;if(e()){closeOutbound();}while(ne()){try{}catch (S id) { } } }", "n_tokens": 84, "n_pass": [639, 109, 41]}
{"time": "2021-02-25 01:49:47.654025", "score": "0.5444", "loss": "0.9637", "code": "id close()throws IO{h;if(e()){closeOutbound();}while(ne()){try{}catch(S id) { } } }", "n_tokens": 83, "n_pass": [645, 110, 42]}
{"time": "2021-02-25 01:49:50.294128", "score": "0.5527", "loss": "0.9752", "code": "id close()throws IO{h;if(e()){closeOutbound();}while(ne()){try{}catch(S d) { } } }", "n_tokens": 82, "n_pass": [649, 111, 43]}
{"time": "2021-02-25 01:49:52.950385", "score": "0.5527", "loss": "0.9752", "code": "id close()throws IO{h;if(e()){closeOutbound();}while(ne()){try{}catch(S d){ } } }", "n_tokens": 81, "n_pass": [652, 112, 44]}
{"time": "2021-02-25 01:49:55.578153", "score": "0.5527", "loss": "0.9752", "code": "id close()throws IO{h;if(e()){closeOutbound();}while(ne()){try{}catch(S d){} } }", "n_tokens": 80, "n_pass": [654, 113, 45]}
{"time": "2021-02-25 01:49:58.235597", "score": "0.5527", "loss": "0.9752", "code": "id close()throws IO{h;if(e()){closeOutbound();}while(ne()){try{}catch(S d){}} }", "n_tokens": 79, "n_pass": [656, 114, 46]}
{"time": "2021-02-25 01:50:00.863977", "score": "0.5527", "loss": "0.9752", "code": "id close()throws IO{h;if(e()){closeOutbound();}while(ne()){try{}catch(S d){}}}", "n_tokens": 78, "n_pass": [658, 115, 47]}
{"time": "2021-02-25 01:50:03.488294", "score": "0.7694", "loss": "0.3538", "code": "d close()throws IO{h;if(e()){closeOutbound();}while(ne()){try{}catch(S d){}}}", "n_tokens": 77, "n_pass": [660, 116, 48]}
{"time": "2021-02-25 01:50:08.937002", "score": "0.6172", "loss": "0.6867", "code": "d close()throws O{h;if(e()){closeOutbound();}while(ne()){try{}catch(S d){}}}", "n_tokens": 76, "n_pass": [677, 117, 49]}
{"time": "2021-02-25 01:50:11.564755", "score": "0.5185", "loss": "0.9407", "code": "d close()throws O{;if(e()){closeOutbound();}while(ne()){try{}catch(S d){}}}", "n_tokens": 75, "n_pass": [680, 118, 50]}
{"time": "2021-02-25 01:50:14.187727", "score": "0.5185", "loss": "0.9407", "code": "d close()throws O{if(e()){closeOutbound();}while(ne()){try{}catch(S d){}}}", "n_tokens": 74, "n_pass": [681, 119, 51]}

Minimal simplified code:
d close()throws O{if(e()){closeOutbound();}while(ne()){try{}catch(S d){}}}

