
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/kaazing__gateway/service/spi/src/main/java/org/kaazing/gateway/service/collections/MemoryCollectionsFactory_getLock.java
method_name = getLock
method_body = @Override public ILock getLock(String name) { synchronized (locks) { ILock lock = locks.get(name); if (lock == null) { ILockImpl newLock = new ILockImpl(name); locks.put(name, newLock); lock = newLock; } assert (lock != null); return lock; } }
predict, score, loss = getLock, 0.9643645286560059, 0.040558136999607086

Trace of simplified code(s):
{"time": "2021-02-22 09:42:07.691514", "score": "0.9644", "loss": "0.0406", "code": "@Override public ILock getLock(String name) { synchronized (locks) { ILock lock = locks.get(name); if (lock == null) { ILockImpl newLock = new ILockImpl(name); locks.put(name, newLock); lock = newLock; } assert (lock != null); return lock; } }", "n_tokens": 243, "n_pass": [1, 1, 1]}
{"time": "2021-02-22 09:42:10.404696", "score": "0.96", "loss": "0.048", "code": "@Override public ILock getLock(String name) { synchronized (locks) { ILock lock = locks.get(name); if (lock == null) { Ipl(name); locks.put(name, newLock); lock = newLock; } assert (lock != null); return lock; } }", "n_tokens": 213, "n_pass": [24, 2, 2]}
{"time": "2021-02-22 09:42:13.037201", "score": "0.9834", "loss": "0.0217", "code": "@Override public ILock getLock(String name) { synchronized (locks) { ILock lock = locks.get(name); if (lock == null) { I.put(name, newLock); lock = newLock; } assert (lock != null); return lock; } }", "n_tokens": 198, "n_pass": [46, 3, 3]}
{"time": "2021-02-22 09:42:16.073647", "score": "0.9895", "loss": "0.0172", "code": "@Override public ILock getLock(String name) { synchronized (locks) { ILock lock = locks.get(name); if (lock == null) { I.put(nLock); lock = newLock; } assert (lock != null); return lock; } }", "n_tokens": 190, "n_pass": [87, 4, 4]}
{"time": "2021-02-22 09:42:18.695421", "score": "0.9894", "loss": "0.0244", "code": "@Override public ILock getLock(String name) { synchronized (locks) { ILock lock = locks.get(name); if (lock == null) { I.put(nLock); lwLock; } assert (lock != null); return lock; } }", "n_tokens": 182, "n_pass": [89, 5, 5]}
{"time": "2021-02-22 09:42:21.317225", "score": "0.9885", "loss": "0.0279", "code": "@Override public ILock getLock(String name) { synchronized (locks) { ILock lock = locks.get(name); if (lock == null) { I.put(nLock); lwLock; }(lock != null); return lock; } }", "n_tokens": 174, "n_pass": [91, 6, 6]}
{"time": "2021-02-22 09:42:23.943865", "score": "0.916", "loss": "0.2445", "code": "@Override public ILock getLock(String name) { synchronized (locks) { ILock lock = locks.get(name); if (lock == null) { I.put(nLock); lwLock; }(lock != null); ock; } }", "n_tokens": 166, "n_pass": [94, 7, 7]}
{"time": "2021-02-22 09:42:26.590953", "score": "0.9082", "loss": "0.2655", "code": "@Overriic ILock getLock(String name) { synchronized (locks) { ILock lock = locks.get(name); if (lock == null) { I.put(nLock); lwLock; }(lock != null); ock; } }", "n_tokens": 159, "n_pass": [97, 8, 8]}
{"time": "2021-02-22 09:42:29.992449", "score": "0.8188", "loss": "0.747", "code": "@Overriic ILock getLock(String name) { synchronized (locks) { Ik = locks.get(name); if (lock == null) { I.put(nLock); lwLock; }(lock != null); ock; } }", "n_tokens": 151, "n_pass": [106, 9, 9]}
{"time": "2021-02-22 09:42:32.612973", "score": "0.5132", "loss": "1.2266", "code": "@Overriic ILock getLock(String name) { synchronized (locks) { Is.get(name); if (lock == null) { I.put(nLock); lwLock; }(lock != null); ock; } }", "n_tokens": 143, "n_pass": [107, 10, 10]}
{"time": "2021-02-22 09:42:36.031929", "score": "0.5897", "loss": "1.0907", "code": "@Overriic ILock getLock(String name) { synchronized (locks) { It(name); if (lock == null) { I.put(nLock); lwLock; }(lock != null); ock; } }", "n_tokens": 139, "n_pass": [165, 11, 11]}
{"time": "2021-02-22 09:42:38.693855", "score": "0.2676", "loss": "2.2546", "code": "@Overriic ILock getLock(String name) { synchronized (locks) { It(name); if (lock ==l) { I.put(nLock); lwLock; }(lock != null); ock; } }", "n_tokens": 135, "n_pass": [170, 12, 12]}
{"time": "2021-02-22 09:42:41.302606", "score": "0.2229", "loss": "2.3979", "code": "@Overriic ILock getLock(String name) { synchronized (locks) { It(name); if (lock ==l) {ut(nLock); lwLock; }(lock != null); ock; } }", "n_tokens": 131, "n_pass": [172, 13, 13]}
{"time": "2021-02-22 09:42:43.934780", "score": "0.2325", "loss": "2.341", "code": "@Overriic ILock getLock(String name) { synchronized (locks) { It(name); if (lock ==l) {ut(n); lwLock; }(lock != null); ock; } }", "n_tokens": 127, "n_pass": [174, 14, 14]}
{"time": "2021-02-22 09:42:46.593054", "score": "0.2984", "loss": "2.1384", "code": "@Overriic ILock getLock(String name) { synchronized (locks) { It(name); if (lock ==l) {ut(n); lk; }(lock != null); ock; } }", "n_tokens": 123, "n_pass": [176, 15, 15]}
{"time": "2021-02-22 09:42:49.209303", "score": "0.2948", "loss": "2.1475", "code": "@Overriic ILock getLock(String name) { synchronized (locks) { It(name); if (lock ==l) {ut(n); lk; }(lock !=l); ock; } }", "n_tokens": 119, "n_pass": [180, 16, 16]}
{"time": "2021-02-22 09:42:51.821617", "score": "0.2907", "loss": "2.1578", "code": "@Overriic ILock getLock(String name) { synchronized (locks) { It(name); if (lock ==l) {ut(n); lk; }(lock !=l);  } }", "n_tokens": 115, "n_pass": [182, 17, 17]}
{"time": "2021-02-22 09:42:54.459081", "score": "0.2907", "loss": "2.1578", "code": "@Oviic ILock getLock(String name) { synchronized (locks) { It(name); if (lock ==l) {ut(n); lk; }(lock !=l);  } }", "n_tokens": 112, "n_pass": [185, 18, 18]}
{"time": "2021-02-22 09:42:57.068756", "score": "0.4889", "loss": "1.6625", "code": "@Ov ILock getLock(String name) { synchronized (locks) { It(name); if (lock ==l) {ut(n); lk; }(lock !=l);  } }", "n_tokens": 109, "n_pass": [186, 19, 19]}
{"time": "2021-02-22 09:43:06.077190", "score": "0.6183", "loss": "1.1801", "code": "@Ov ILock getLock(String name) { synchronized (locks) { It(name); if (locl) {ut(n); lk; }(lock !=l);  } }", "n_tokens": 105, "n_pass": [206, 22, 20]}
{"time": "2021-02-22 09:43:08.698793", "score": "0.6002", "loss": "1.2321", "code": "@Ov ILock getLock(String name) { synchronized (locks) { It(name); if (locl) {ut(n); lk; }(locl);  } }", "n_tokens": 101, "n_pass": [212, 23, 21]}
{"time": "2021-02-22 09:43:11.310647", "score": "0.7648", "loss": "0.8037", "code": " ILock getLock(String name) { synchronized (locks) { It(name); if (locl) {ut(n); lk; }(locl);  } }", "n_tokens": 98, "n_pass": [215, 24, 22]}
{"time": "2021-02-22 09:43:23.277758", "score": "0.7648", "loss": "0.8037", "code": "ILock getLock(String name) { synchronized (locks) { It(name); if (locl) {ut(n); lk; }(locl);  } }", "n_tokens": 97, "n_pass": [294, 28, 23]}
{"time": "2021-02-22 09:43:45.898465", "score": "0.9421", "loss": "0.4539", "code": "ILock getLock(String me) { synchronized (locks) { It(name); if (locl) {ut(n); lk; }(locl);  } }", "n_tokens": 95, "n_pass": [308, 36, 24]}
{"time": "2021-02-22 09:43:53.753286", "score": "0.9492", "loss": "0.365", "code": "ILock getLock(String me) { synchronized (locks) {t(name); if (locl) {ut(n); lk; }(locl);  } }", "n_tokens": 93, "n_pass": [323, 39, 25]}
{"time": "2021-02-22 09:43:56.358480", "score": "0.9507", "loss": "0.2704", "code": "ILock getLock(String me) { synchronized (locks) {t(me); if (locl) {ut(n); lk; }(locl);  } }", "n_tokens": 91, "n_pass": [325, 40, 26]}
{"time": "2021-02-22 09:43:58.975879", "score": "0.9632", "loss": "0.2053", "code": "ILock getLock(String me) { synchronized (locks) {t(); if (locl) {ut(n); lk; }(locl);  } }", "n_tokens": 89, "n_pass": [326, 41, 27]}
{"time": "2021-02-22 09:44:01.592786", "score": "0.9572", "loss": "0.2146", "code": "ILock getLock(String me) { synchronized (locks) {t(); if (ll) {ut(n); lk; }(locl);  } }", "n_tokens": 87, "n_pass": [331, 42, 28]}
{"time": "2021-02-22 09:44:04.218404", "score": "0.9635", "loss": "0.1866", "code": "ILock getLock(String me) { synchronized (locks) {t(); if (ll) {(n); lk; }(locl);  } }", "n_tokens": 85, "n_pass": [334, 43, 29]}
{"time": "2021-02-22 09:44:06.811174", "score": "0.939", "loss": "0.2259", "code": "ILock getLock(String me) { synchronized (locks) {t(); if (ll) {(n);k; }(locl);  } }", "n_tokens": 83, "n_pass": [337, 44, 30]}
{"time": "2021-02-22 09:44:09.400766", "score": "0.9404", "loss": "0.2237", "code": "ILock getLock(String me) { synchronized (locks) {t(); if (ll) {(n); }(locl);  } }", "n_tokens": 81, "n_pass": [338, 45, 31]}
{"time": "2021-02-22 09:44:12.003615", "score": "0.9352", "loss": "0.2404", "code": "ILock getLock(String me) { synchronized (locks) {t(); if (ll) {(n); }(ll);  } }", "n_tokens": 79, "n_pass": [341, 46, 32]}
{"time": "2021-02-22 09:44:14.593261", "score": "0.697", "loss": "0.4977", "code": "Lock getLock(String me) { synchronized (locks) {t(); if (ll) {(n); }(ll);  } }", "n_tokens": 78, "n_pass": [346, 47, 33]}
{"time": "2021-02-22 09:44:17.193626", "score": "0.3145", "loss": "2.4992", "code": "ock getLock(String me) { synchronized (locks) {t(); if (ll) {(n); }(ll);  } }", "n_tokens": 77, "n_pass": [347, 48, 34]}
{"time": "2021-02-22 09:45:09.285535", "score": "0.3145", "loss": "2.4992", "code": "ock getLock(String me){ synchronized (locks) {t(); if (ll) {(n); }(ll);  } }", "n_tokens": 76, "n_pass": [481, 64, 35]}
{"time": "2021-02-22 09:45:11.886517", "score": "0.3145", "loss": "2.4992", "code": "ock getLock(String me){synchronized (locks) {t(); if (ll) {(n); }(ll);  } }", "n_tokens": 75, "n_pass": [483, 65, 36]}
{"time": "2021-02-22 09:45:14.508398", "score": "0.3145", "loss": "2.4992", "code": "ock getLock(String me){synchronized(locks) {t(); if (ll) {(n); }(ll);  } }", "n_tokens": 74, "n_pass": [496, 66, 37]}
{"time": "2021-02-22 09:45:30.084005", "score": "0.3145", "loss": "2.4992", "code": "ock getLock(String me){synchronized(locks){t(); if (ll) {(n); }(ll);  } }", "n_tokens": 73, "n_pass": [504, 72, 38]}
{"time": "2021-02-22 09:45:32.688492", "score": "0.3145", "loss": "2.4992", "code": "ock getLock(String me){synchronized(locks){t();if (ll) {(n); }(ll);  } }", "n_tokens": 72, "n_pass": [510, 73, 39]}
{"time": "2021-02-22 09:45:35.310871", "score": "0.3145", "loss": "2.4992", "code": "ock getLock(String me){synchronized(locks){t();if(ll) {(n); }(ll);  } }", "n_tokens": 71, "n_pass": [513, 74, 40]}
{"time": "2021-02-22 09:45:43.147416", "score": "0.3145", "loss": "2.4992", "code": "ock getLock(String me){synchronized(locks){t();if(ll){(n); }(ll);  } }", "n_tokens": 70, "n_pass": [518, 77, 41]}
{"time": "2021-02-22 09:45:45.745664", "score": "0.3145", "loss": "2.4992", "code": "ock getLock(String me){synchronized(locks){t();if(ll){(n);}(ll);  } }", "n_tokens": 69, "n_pass": [524, 78, 42]}
{"time": "2021-02-22 09:45:48.360118", "score": "0.3459", "loss": "2.2866", "code": "ock getLock(String me){synchronized(locks){t();if(ll){(n);}(l);  } }", "n_tokens": 68, "n_pass": [527, 79, 43]}
{"time": "2021-02-22 09:45:50.978882", "score": "0.3459", "loss": "2.2866", "code": "ock getLock(String me){synchronized(locks){t();if(ll){(n);}(l); } }", "n_tokens": 67, "n_pass": [531, 80, 44]}
{"time": "2021-02-22 09:45:53.572180", "score": "0.3459", "loss": "2.2866", "code": "ock getLock(String me){synchronized(locks){t();if(ll){(n);}(l);} }", "n_tokens": 66, "n_pass": [532, 81, 45]}
{"time": "2021-02-22 09:45:56.162992", "score": "0.3459", "loss": "2.2866", "code": "ock getLock(String me){synchronized(locks){t();if(ll){(n);}(l);}}", "n_tokens": 65, "n_pass": [534, 82, 46]}

Minimal simplified code:
ock getLock(String me){synchronized(locks){t();if(ll){(n);}(l);}}

