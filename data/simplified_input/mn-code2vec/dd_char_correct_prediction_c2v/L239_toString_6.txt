
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/OpenRock__OpenAM/openam-tools/openam-installtools/src/main/java/com/sun/identity/install/tools/configurator/StateData_toString.java
method_name = toString
method_body = public String toString() { StringBuffer sb = new StringBuffer(); sb.append(" instanceName: "); sb.append(instanceName).append(LINE_SEP); sb.append(" isInstanceData: "); sb.append(isInstanceData).append(LINE_SEP); sb.append(" nameValueMap:").append(LINE_SEP); Iterator iter = nameValueMap.entrySet().iterator(); while (iter.hasNext()) { Map.Entry me = (Map.Entry) iter.next(); sb.append(" "); sb.append((String) me.getKey()).append(" = "); sb.append(me.getValue().toString()).append("\n"); } return sb.toString(); }
predict, score, loss = toString, 0.8598777651786804, 0.6163914799690247

Trace of simplified code(s):
{"time": "2021-02-22 22:49:05.362459", "score": "0.9233", "loss": "0.278", "code": "public String toString() { StringBuffer sb = new StringBuffer(); sb.append(\" instanceName: \"); sb.append(instanceName).append(LINE_SEP); sb.append(\" isInstanceData: \"); sb.append(isInstanceData).append(LINE_SEP); sb.append(\" nameValueMap:\").append(LINE_SEP); Iterator iter = nameValueMap.entrySet().iterator(); while (iter.hasNext()) { Map.Entry me = (Map.Entry) iter.next(); sb.append(\" \"); sb.append((String) me.getKey()).append(\" = \"); sb.append(me.getValue().toString()).append(\"\\n\"); } return sb.toString(); }", "n_tokens": 514, "n_pass": [1, 1, 1]}
{"time": "2021-02-22 22:49:08.131164", "score": "0.8748", "loss": "0.3104", "code": "public String toString() { StringBuffer sb = new StringBuffer(); sb.append(\" instanceName: \"); sb.append(instanceName).append(LI); Iterator iter = nameValueMap.entrySet().iterator(); while (iter.hasNext()) { Map.Entry me = (Map.Entry) iter.next(); sb.append(\" \"); sb.append((String) me.getKey()).append(\" = \"); sb.append(me.getValue().toString()).append(\"\\n\"); } return sb.toString(); }", "n_tokens": 386, "n_pass": [9, 2, 2]}
{"time": "2021-02-22 22:49:11.259346", "score": "0.5611", "loss": "1.2702", "code": "public String toString() { StringBuffer sb = new StringBuffer(); sb.append(\" instanceName: \"); sb.append(instanceName).append(LI); Iterator iter = nameValueMap.entrySet().iterator(); while (iter.hasNext()) { Map.Entry me = (Map.Entry) iter.next(); sb.append(\" \"); sb.append((String) me.getKey()).append(\" = \"); sb.append(\"\\n\"); } return sb.toString(); }", "n_tokens": 353, "n_pass": [43, 3, 3]}
{"time": "2021-02-22 22:49:13.998694", "score": "0.6541", "loss": "0.9535", "code": "public String toString() { StringBuffer sb = new StringBuffer();b.append(instanceName).append(LI); Iterator iter = nameValueMap.entrySet().iterator(); while (iter.hasNext()) { Map.Entry me = (Map.Entry) iter.next(); sb.append(\" \"); sb.append((String) me.getKey()).append(\" = \"); sb.append(\"\\n\"); } return sb.toString(); }", "n_tokens": 321, "n_pass": [47, 4, 4]}
{"time": "2021-02-22 22:49:16.739519", "score": "0.6872", "loss": "1.0005", "code": "public String toString() { Strinb.append(instanceName).append(LI); Iterator iter = nameValueMap.entrySet().iterator(); while (iter.hasNext()) { Map.Entry me = (Map.Entry) iter.next(); sb.append(\" \"); sb.append((String) me.getKey()).append(\" = \"); sb.append(\"\\n\"); } return sb.toString(); }", "n_tokens": 289, "n_pass": [57, 5, 5]}
{"time": "2021-02-22 22:49:19.513077", "score": "0.3012", "loss": "2.4126", "code": "public String toString() { Strinb.append(instanc); Iterator iter = nameValueMap.entrySet().iterator(); while (iter.hasNext()) { Map.Entry me = (Map.Entry) iter.next(); sb.append(\" \"); sb.append((String) me.getKey()).append(\" = \"); sb.append(\"\\n\"); } return sb.toString(); }", "n_tokens": 273, "n_pass": [86, 6, 6]}
{"time": "2021-02-22 22:49:22.310228", "score": "0.482", "loss": "1.4407", "code": "public String toString() { Strinb.append(instanc); Iterator iter = nameValueMap.tor(); while (iter.hasNext()) { Map.Entry me = (Map.Entry) iter.next(); sb.append(\" \"); sb.append((String) me.getKey()).append(\" = \"); sb.append(\"\\n\"); } return sb.toString(); }", "n_tokens": 257, "n_pass": [89, 7, 7]}
{"time": "2021-02-22 22:49:33.610892", "score": "0.9737", "loss": "0.1025", "code": "public String toString() { Strinb.append(instanc); Iterator iter = nameValueMap.tor(); while (iter.hasNext()) { y me = (Map.Entry) iter.next(); sb.append(\" \"); sb.append((String) me.getKey()).append(\" = \"); sb.append(\"\\n\"); } return sb.toString(); }", "n_tokens": 249, "n_pass": [142, 11, 8]}
{"time": "2021-02-22 22:49:41.917247", "score": "0.4803", "loss": "1.8009", "code": "public String toString() { Strinb.append(instanc); Iterator iter = nameValueMap.tor(); while (iter.hasNext()) { y me = (Map.Entry) iter.next(); d(\" \"); sb.append((String) me.getKey()).append(\" = \"); sb.append(\"\\n\"); } return sb.toString(); }", "n_tokens": 241, "n_pass": [146, 14, 9]}
{"time": "2021-02-22 22:49:44.613261", "score": "0.4208", "loss": "1.9732", "code": "public String toString() { Strinb.append(instanc); Iterator iter = nameValueMap.tor(); while (iter.hasNext()) { y me = (Map.Entry) iter.next(); sb.append((String) me.getKey()).append(\" = \"); sb.append(\"\\n\"); } return sb.toString(); }", "n_tokens": 233, "n_pass": [147, 15, 10]}
{"time": "2021-02-22 22:49:47.390955", "score": "0.451", "loss": "1.8445", "code": "public String toString() { Strinb.append(instanc); Iterator iter = nameValueMap.tor(); while (iter.hasNext()) { y me = (Map.Entry) iter.next(); d((String) me.getKey()).append(\" = \"); sb.append(\"\\n\"); } return sb.toString(); }", "n_tokens": 225, "n_pass": [148, 16, 11]}
{"time": "2021-02-22 22:50:01.934798", "score": "0.8209", "loss": "1.5374", "code": "public String toString() { Strinb.append(instanc); Itera = nameValueMap.tor(); while (iter.hasNext()) { y me = (Map.Entry) iter.next(); d((String) me.getKey()).append(\" = \"); sb.append(\"\\n\"); } return sb.toString(); }", "n_tokens": 217, "n_pass": [166, 21, 12]}
{"time": "2021-02-22 22:50:04.714958", "score": "0.9836", "loss": "0.0519", "code": "public String toString() { Strinb.append(instanc); IteraalueMap.tor(); while (iter.hasNext()) { y me = (Map.Entry) iter.next(); d((String) me.getKey()).append(\" = \"); sb.append(\"\\n\"); } return sb.toString(); }", "n_tokens": 209, "n_pass": [167, 22, 13]}
{"time": "2021-02-22 22:50:07.441392", "score": "0.9974", "loss": "0.0052", "code": "public String toString() { Strinb.append(instanc); Iterator(); while (iter.hasNext()) { y me = (Map.Entry) iter.next(); d((String) me.getKey()).append(\" = \"); sb.append(\"\\n\"); } return sb.toString(); }", "n_tokens": 201, "n_pass": [168, 23, 14]}
{"time": "2021-02-22 22:50:12.914186", "score": "0.9972", "loss": "0.0057", "code": "public String toString() { Strinb.append(instanc); Iterator(); while (iter.hasNext()) { y me = (y) iter.next(); d((String) me.getKey()).append(\" = \"); sb.append(\"\\n\"); } return sb.toString(); }", "n_tokens": 193, "n_pass": [174, 25, 15]}
{"time": "2021-02-22 22:50:15.652216", "score": "0.9595", "loss": "0.0935", "code": "public String toString() { Strinb.append(instanc); Iterator(); while (iter.hasNext()) { y me = (y) iter.d((String) me.getKey()).append(\" = \"); sb.append(\"\\n\"); } return sb.toString(); }", "n_tokens": 185, "n_pass": [176, 26, 16]}
{"time": "2021-02-22 22:50:18.371244", "score": "0.665", "loss": "0.5878", "code": "public String toString() { Strinb.append(instanc); Iterator(); while (iter.hasNext()) { y me = (y) iter.d((String) me.getKey()).append(\" = \"); s(\"\\n\"); } return sb.toString(); }", "n_tokens": 177, "n_pass": [182, 27, 17]}
{"time": "2021-02-22 22:50:46.828467", "score": "0.7485", "loss": "0.4012", "code": "public String toString() { Sb.append(instanc); Iterator(); while (iter.hasNext()) { y me = (y) iter.d((String) me.getKey()).append(\" = \"); s(\"\\n\"); } return sb.toString(); }", "n_tokens": 173, "n_pass": [264, 37, 18]}
{"time": "2021-02-22 22:50:52.264948", "score": "0.5854", "loss": "0.7257", "code": "public String toString() { Sb.ap(instanc); Iterator(); while (iter.hasNext()) { y me = (y) iter.d((String) me.getKey()).append(\" = \"); s(\"\\n\"); } return sb.toString(); }", "n_tokens": 169, "n_pass": [266, 39, 19]}
{"time": "2021-02-22 22:50:54.988103", "score": "0.6433", "loss": "0.6704", "code": "public String toString() { Sb.ap(ins); Iterator(); while (iter.hasNext()) { y me = (y) iter.d((String) me.getKey()).append(\" = \"); s(\"\\n\"); } return sb.toString(); }", "n_tokens": 165, "n_pass": [268, 40, 20]}
{"time": "2021-02-22 22:50:57.722920", "score": "0.7036", "loss": "0.8794", "code": "public String toString() { Sb.ap(ins); Itor(); while (iter.hasNext()) { y me = (y) iter.d((String) me.getKey()).append(\" = \"); s(\"\\n\"); } return sb.toString(); }", "n_tokens": 161, "n_pass": [270, 41, 21]}
{"time": "2021-02-22 22:51:00.475691", "score": "0.5635", "loss": "1.2967", "code": "public String toString() { Sb.ap(ins); Itor(); while (itasNext()) { y me = (y) iter.d((String) me.getKey()).append(\" = \"); s(\"\\n\"); } return sb.toString(); }", "n_tokens": 157, "n_pass": [275, 42, 22]}
{"time": "2021-02-22 22:51:05.976203", "score": "0.6277", "loss": "1.1974", "code": "public String toString() { Sb.ap(ins); Itor(); while (itasNe) { y me = (y) iter.d((String) me.getKey()).append(\" = \"); s(\"\\n\"); } return sb.toString(); }", "n_tokens": 153, "n_pass": [277, 44, 23]}
{"time": "2021-02-22 22:51:08.667149", "score": "0.795", "loss": "0.6321", "code": "public String toString() { Sb.ap(ins); Itor(); while (itasNe) { y me = (y) id((String) me.getKey()).append(\" = \"); s(\"\\n\"); } return sb.toString(); }", "n_tokens": 149, "n_pass": [282, 45, 24]}
{"time": "2021-02-22 22:51:11.410915", "score": "0.6949", "loss": "0.8525", "code": "public String toString() { Sb.ap(ins); Itor(); while (itasNe) { y me = (y) id((Sg) me.getKey()).append(\" = \"); s(\"\\n\"); } return sb.toString(); }", "n_tokens": 145, "n_pass": [284, 46, 25]}
{"time": "2021-02-22 22:51:14.137709", "score": "0.6445", "loss": "0.977", "code": "public String toString() { Sb.ap(ins); Itor(); while (itasNe) { y me = (y) id((Sg) mtKey()).append(\" = \"); s(\"\\n\"); } return sb.toString(); }", "n_tokens": 141, "n_pass": [286, 47, 26]}
{"time": "2021-02-22 22:51:16.878426", "score": "0.6492", "loss": "0.9597", "code": "public String toString() { Sb.ap(ins); Itor(); while (itasNe) { y me = (y) id((Sg) m()).append(\" = \"); s(\"\\n\"); } return sb.toString(); }", "n_tokens": 137, "n_pass": [287, 48, 27]}
{"time": "2021-02-22 22:51:19.592497", "score": "0.6436", "loss": "1.0437", "code": "public String toString() { Sb.ap(ins); Itor(); while (itasNe) { y me = (y) id((Sg) m()).nd(\" = \"); s(\"\\n\"); } return sb.toString(); }", "n_tokens": 133, "n_pass": [289, 49, 28]}
{"time": "2021-02-22 22:51:36.808803", "score": "0.546", "loss": "1.1891", "code": "public String toString() { S(ins); Itor(); while (itasNe) { y me = (y) id((Sg) m()).nd(\" = \"); s(\"\\n\"); } return sb.toString(); }", "n_tokens": 129, "n_pass": [308, 55, 29]}
{"time": "2021-02-22 22:51:39.537176", "score": "0.5224", "loss": "1.2004", "code": "public String toString() { S(ins); Itor(); while (it) { y me = (y) id((Sg) m()).nd(\" = \"); s(\"\\n\"); } return sb.toString(); }", "n_tokens": 125, "n_pass": [315, 56, 30]}
{"time": "2021-02-22 22:51:57.205023", "score": "0.3799", "loss": "1.8631", "code": "public String toString() { S(ins); Itor(); while (it) { me = (y) id((Sg) m()).nd(\" = \"); s(\"\\n\"); } return sb.toString(); }", "n_tokens": 123, "n_pass": [411, 62, 31]}
{"time": "2021-02-22 22:51:59.918784", "score": "0.3708", "loss": "1.9399", "code": "public String toString() { S(ins); Itor(); while (it) { me = (y)d((Sg) m()).nd(\" = \"); s(\"\\n\"); } return sb.toString(); }", "n_tokens": 121, "n_pass": [415, 63, 32]}
{"time": "2021-02-22 22:52:02.629186", "score": "0.3678", "loss": "1.9848", "code": "public String toString() { S(ins); Itor(); while (it) { me = (y)d((Sg) m).nd(\" = \"); s(\"\\n\"); } return sb.toString(); }", "n_tokens": 119, "n_pass": [420, 64, 33]}
{"time": "2021-02-22 22:52:05.357454", "score": "0.3259", "loss": "2.4095", "code": "public String toString() { S(ins); Itor(); while (it) { me = (y)d((Sg) m).nd(\" \"); s(\"\\n\"); } return sb.toString(); }", "n_tokens": 117, "n_pass": [424, 65, 34]}
{"time": "2021-02-22 22:52:10.818793", "score": "0.3259", "loss": "2.4095", "code": "public String toString() { S(ins); Itor(); while (it) { me = (y)d((Sg) m).nd(\" \"); s(\"\"); } return sb.toString(); }", "n_tokens": 115, "n_pass": [429, 67, 35]}
{"time": "2021-02-22 22:52:30.245885", "score": "0.6349", "loss": "1.0385", "code": "public String toString() { S(ins); Itor(); while (it) { me = (y)d((Sg) m).nd(\" \"); s(\"\"); } return sb.toString; }", "n_tokens": 113, "n_pass": [442, 74, 36]}
{"time": "2021-02-22 22:52:43.151497", "score": "0.8114", "loss": "0.4699", "code": "public String toString() {(ins); Itor(); while (it) { me = (y)d((Sg) m).nd(\" \"); s(\"\"); } return sb.toString; }", "n_tokens": 111, "n_pass": [457, 78, 37]}
{"time": "2021-02-22 22:52:45.891731", "score": "0.8118", "loss": "0.4652", "code": "public String toString() {(i); Itor(); while (it) { me = (y)d((Sg) m).nd(\" \"); s(\"\"); } return sb.toString; }", "n_tokens": 109, "n_pass": [459, 79, 38]}
{"time": "2021-02-22 22:52:48.614489", "score": "0.6273", "loss": "0.6496", "code": "public String toString() {(i);tor(); while (it) { me = (y)d((Sg) m).nd(\" \"); s(\"\"); } return sb.toString; }", "n_tokens": 107, "n_pass": [461, 80, 39]}
{"time": "2021-02-22 22:52:51.338000", "score": "0.7585", "loss": "0.3986", "code": "public String toString() {(i);r(); while (it) { me = (y)d((Sg) m).nd(\" \"); s(\"\"); } return sb.toString; }", "n_tokens": 105, "n_pass": [462, 81, 40]}
{"time": "2021-02-22 22:52:54.067360", "score": "0.8236", "loss": "0.2871", "code": "public String toString() {(i);r(); while (it) { me = (y)d((Sg)).nd(\" \"); s(\"\"); } return sb.toString; }", "n_tokens": 103, "n_pass": [479, 82, 41]}
{"time": "2021-02-22 22:52:56.808524", "score": "0.8442", "loss": "0.5439", "code": "public String toString() {(i);r(); while (it) { me = (y)d((Sg)).nd(\" \");(\"\"); } return sb.toString; }", "n_tokens": 101, "n_pass": [485, 83, 42]}
{"time": "2021-02-22 22:53:15.949847", "score": "0.1888", "loss": "3.0815", "code": "publictring toString() {(i);r(); while (it) { me = (y)d((Sg)).nd(\" \");(\"\"); } return sb.toString; }", "n_tokens": 99, "n_pass": [503, 90, 43]}
{"time": "2021-02-22 22:53:18.654155", "score": "0.1888", "loss": "3.0815", "code": "publicing toString() {(i);r(); while (it) { me = (y)d((Sg)).nd(\" \");(\"\"); } return sb.toString; }", "n_tokens": 97, "n_pass": [504, 91, 44]}
{"time": "2021-02-22 22:53:42.508375", "score": "0.1888", "loss": "3.0815", "code": "blicing toString() {(i);r(); while (it) { me = (y)d((Sg)).nd(\" \");(\"\"); } return sb.toString; }", "n_tokens": 95, "n_pass": [550, 99, 45]}
{"time": "2021-02-22 22:53:45.258053", "score": "0.1888", "loss": "3.0815", "code": "icing toString() {(i);r(); while (it) { me = (y)d((Sg)).nd(\" \");(\"\"); } return sb.toString; }", "n_tokens": 93, "n_pass": [551, 100, 46]}
{"time": "2021-02-22 22:53:50.740900", "score": "0.1888", "loss": "3.0815", "code": "icg toString() {(i);r(); while (it) { me = (y)d((Sg)).nd(\" \");(\"\"); } return sb.toString; }", "n_tokens": 91, "n_pass": [553, 102, 47]}
{"time": "2021-02-22 22:54:20.680511", "score": "0.3766", "loss": "1.4631", "code": "ic toString() {(i);r(); while (it) { me = (y)d((Sg)).nd(\" \");(\"\"); } return sb.toString; }", "n_tokens": 90, "n_pass": [689, 110, 48]}
{"time": "2021-02-22 22:54:26.586743", "score": "0.3766", "loss": "1.4631", "code": "ic toString(){(i);r(); while (it) { me = (y)d((Sg)).nd(\" \");(\"\"); } return sb.toString; }", "n_tokens": 89, "n_pass": [700, 111, 49]}
{"time": "2021-02-22 22:54:29.726820", "score": "0.3766", "loss": "1.4631", "code": "ic toString(){(i);r();while (it) { me = (y)d((Sg)).nd(\" \");(\"\"); } return sb.toString; }", "n_tokens": 88, "n_pass": [710, 112, 50]}
{"time": "2021-02-22 22:54:32.471565", "score": "0.3766", "loss": "1.4631", "code": "ic toString(){(i);r();while(it) { me = (y)d((Sg)).nd(\" \");(\"\"); } return sb.toString; }", "n_tokens": 87, "n_pass": [716, 113, 51]}
{"time": "2021-02-22 22:54:35.214298", "score": "0.351", "loss": "1.4702", "code": "ic toString(){(i);r();while(t) { me = (y)d((Sg)).nd(\" \");(\"\"); } return sb.toString; }", "n_tokens": 86, "n_pass": [718, 114, 52]}
{"time": "2021-02-22 22:54:37.920122", "score": "0.351", "loss": "1.4702", "code": "ic toString(){(i);r();while(t){ me = (y)d((Sg)).nd(\" \");(\"\"); } return sb.toString; }", "n_tokens": 85, "n_pass": [721, 115, 53]}
{"time": "2021-02-22 22:54:40.650913", "score": "0.351", "loss": "1.4702", "code": "ic toString(){(i);r();while(t){me = (y)d((Sg)).nd(\" \");(\"\"); } return sb.toString; }", "n_tokens": 84, "n_pass": [723, 116, 54]}
{"time": "2021-02-22 22:54:43.406984", "score": "0.338", "loss": "1.5591", "code": "ic toString(){(i);r();while(t){e = (y)d((Sg)).nd(\" \");(\"\"); } return sb.toString; }", "n_tokens": 83, "n_pass": [724, 117, 55]}
{"time": "2021-02-22 22:54:46.152210", "score": "0.338", "loss": "1.5591", "code": "ic toString(){(i);r();while(t){e= (y)d((Sg)).nd(\" \");(\"\"); } return sb.toString; }", "n_tokens": 82, "n_pass": [726, 118, 56]}
{"time": "2021-02-22 22:54:48.877579", "score": "0.338", "loss": "1.5591", "code": "ic toString(){(i);r();while(t){e=(y)d((Sg)).nd(\" \");(\"\"); } return sb.toString; }", "n_tokens": 81, "n_pass": [728, 119, 57]}
{"time": "2021-02-22 22:54:51.590425", "score": "0.3333", "loss": "1.551", "code": "ic toString(){(i);r();while(t){e=(y)((Sg)).nd(\" \");(\"\"); } return sb.toString; }", "n_tokens": 80, "n_pass": [732, 120, 58]}
{"time": "2021-02-22 22:54:54.347629", "score": "0.3456", "loss": "1.5126", "code": "ic toString(){(i);r();while(t){e=(y)((g)).nd(\" \");(\"\"); } return sb.toString; }", "n_tokens": 79, "n_pass": [735, 121, 59]}
{"time": "2021-02-22 22:54:57.090901", "score": "0.3167", "loss": "1.5413", "code": "ic toString(){(i);r();while(t){e=(y)((g)).d(\" \");(\"\"); } return sb.toString; }", "n_tokens": 78, "n_pass": [740, 122, 60]}
{"time": "2021-02-22 22:54:59.829971", "score": "0.3153", "loss": "1.5355", "code": "ic toString(){(i);r();while(t){e=(y)((g)).d(\"\");(\"\"); } return sb.toString; }", "n_tokens": 77, "n_pass": [744, 123, 61]}
{"time": "2021-02-22 22:55:02.571615", "score": "0.3153", "loss": "1.5355", "code": "ic toString(){(i);r();while(t){e=(y)((g)).d(\"\");(\"\");} return sb.toString; }", "n_tokens": 76, "n_pass": [753, 124, 62]}
{"time": "2021-02-22 22:55:05.275709", "score": "0.3153", "loss": "1.5355", "code": "ic toString(){(i);r();while(t){e=(y)((g)).d(\"\");(\"\");}return sb.toString; }", "n_tokens": 75, "n_pass": [755, 125, 63]}
{"time": "2021-02-22 22:55:10.725855", "score": "0.2986", "loss": "1.6815", "code": "ic toString(){(i);r();while(t){e=(y)((g)).d(\"\");(\"\");}return b.toString; }", "n_tokens": 74, "n_pass": [763, 127, 64]}
{"time": "2021-02-22 22:55:50.383258", "score": "0.2986", "loss": "1.6815", "code": "ic toString(){(i);r();while(t){e=(y)((g)).d(\"\");(\"\");}return b.toString;}", "n_tokens": 73, "n_pass": [839, 140, 65]}

Minimal simplified code:
ic toString(){(i);r();while(t){e=(y)((g)).d("");("");}return b.toString;}

