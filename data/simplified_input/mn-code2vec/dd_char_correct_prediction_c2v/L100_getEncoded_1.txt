
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/bcgit__bc-java/prov/src/main/java/org/bouncycastle/jce/PKCS10CertificationRequest_getEncoded.java
method_name = getEncoded
method_body = public byte[] getEncoded() { try { return this.getEncoded(ASN1Encoding.DER); } catch (IOException e) { throw new RuntimeException(e.toString()); } }
predict, score, loss = getEncoded, 0.8278355002403259, 0.19834910333156586

Trace of simplified code(s):
{"time": "2021-02-22 06:32:28.788217", "score": "0.8278", "loss": "0.1983", "code": "public byte[] getEncoded() { try { return this.getEncoded(ASN1Encoding.DER); } catch (IOException e) { throw new RuntimeException(e.toString()); } }", "n_tokens": 148, "n_pass": [1, 1, 1]}
{"time": "2021-02-22 06:32:34.508525", "score": "0.8293", "loss": "0.1971", "code": "public byte[] getEncoded() { try { return this.getEncoded(ASN1Encoding.DER); } catch (IOException e) { throw n(e.toString()); } }", "n_tokens": 129, "n_pass": [26, 3, 2]}
{"time": "2021-02-22 06:32:40.137609", "score": "0.833", "loss": "0.1938", "code": "te[] getEncoded() { try { return this.getEncoded(ASN1Encoding.DER); } catch (IOException e) { throw n(e.toString()); } }", "n_tokens": 120, "n_pass": [50, 5, 3]}
{"time": "2021-02-22 06:32:42.815942", "score": "0.9769", "loss": "0.0355", "code": "te[] getEncoded() { try { rs.getEncoded(ASN1Encoding.DER); } catch (IOException e) { throw n(e.toString()); } }", "n_tokens": 111, "n_pass": [53, 6, 4]}
{"time": "2021-02-22 06:32:48.021695", "score": "0.9339", "loss": "0.0994", "code": "te[] getEncoded() { try { rs.getEncoded(ASN1EER); } catch (IOException e) { throw n(e.toString()); } }", "n_tokens": 102, "n_pass": [56, 8, 5]}
{"time": "2021-02-22 06:32:53.641011", "score": "0.8814", "loss": "0.1688", "code": "te[] getEncoded() { try { rs.getEncoded(AS); } catch (IOException e) { throw n(e.toString()); } }", "n_tokens": 97, "n_pass": [90, 10, 6]}
{"time": "2021-02-22 06:32:56.252906", "score": "0.881", "loss": "0.1698", "code": "te[] getEncoded() { try { rs.getEncoded(AS); } catch (IOEion e) { throw n(e.toString()); } }", "n_tokens": 92, "n_pass": [94, 11, 7]}
{"time": "2021-02-22 06:32:58.864896", "score": "0.8736", "loss": "0.1857", "code": "te[] getEncoded() { try { rs.getEncoded(AS); } catch (IOEion e) { tn(e.toString()); } }", "n_tokens": 87, "n_pass": [97, 12, 8]}
{"time": "2021-02-22 06:33:01.523666", "score": "0.8025", "loss": "0.3765", "code": "te[] getEncoded() { try { rs.getEncoded(AS); } catch (IOEion e) { tn(e.tng()); } }", "n_tokens": 82, "n_pass": [99, 13, 9]}
{"time": "2021-02-22 06:33:10.506394", "score": "0.8813", "loss": "0.1784", "code": "te[] getEncoded() { try { rs.getEncoded(AS); } catch (IOEion e) { tn(eg()); } }", "n_tokens": 79, "n_pass": [154, 16, 10]}
{"time": "2021-02-22 06:33:13.102789", "score": "0.9214", "loss": "0.1055", "code": "te[] getEncoded() { try { rs.getEncoded(AS); } catch (IOEion e) { tn(e); } }", "n_tokens": 76, "n_pass": [155, 17, 11]}
{"time": "2021-02-22 06:33:33.344067", "score": "0.9261", "loss": "0.0911", "code": "te[] getEncoded() { try { rs.getEncoded(); } catch (IOEion e) { tn(e); } }", "n_tokens": 74, "n_pass": [178, 24, 12]}
{"time": "2021-02-22 06:33:35.954885", "score": "0.9318", "loss": "0.0844", "code": "te[] getEncoded() { try { rs.getEncoded(); } catch (Ion e) { tn(e); } }", "n_tokens": 71, "n_pass": [185, 25, 13]}
{"time": "2021-02-22 06:33:59.773784", "score": "0.8937", "loss": "0.1326", "code": "te[] getEncoded() { try { rs.getEncoded(); } catch (on e) { tn(e); } }", "n_tokens": 70, "n_pass": [282, 32, 14]}
{"time": "2021-02-22 06:34:02.395608", "score": "0.9264", "loss": "0.0894", "code": "te[] getEncoded() { try { rs.getEncoded(); } catch (n e) { tn(e); } }", "n_tokens": 69, "n_pass": [283, 33, 15]}
{"time": "2021-02-22 06:34:05.007307", "score": "0.9278", "loss": "0.0873", "code": "te[] getEncoded() { try { rs.getEncoded(); } catch (n e) { (e); } }", "n_tokens": 67, "n_pass": [289, 34, 16]}
{"time": "2021-02-22 06:34:07.617250", "score": "0.8436", "loss": "0.2019", "code": "e[] getEncoded() { try { rs.getEncoded(); } catch (n e) { (e); } }", "n_tokens": 66, "n_pass": [294, 35, 17]}
{"time": "2021-02-22 06:34:10.225783", "score": "0.8436", "loss": "0.2019", "code": "e[]getEncoded() { try { rs.getEncoded(); } catch (n e) { (e); } }", "n_tokens": 65, "n_pass": [298, 36, 18]}
{"time": "2021-02-22 06:34:16.735054", "score": "0.8436", "loss": "0.2019", "code": "e[]getEncoded(){ try { rs.getEncoded(); } catch (n e) { (e); } }", "n_tokens": 64, "n_pass": [311, 37, 19]}
{"time": "2021-02-22 06:34:19.357020", "score": "0.8436", "loss": "0.2019", "code": "e[]getEncoded(){try { rs.getEncoded(); } catch (n e) { (e); } }", "n_tokens": 63, "n_pass": [313, 38, 20]}
{"time": "2021-02-22 06:34:21.973791", "score": "0.8436", "loss": "0.2019", "code": "e[]getEncoded(){try{ rs.getEncoded(); } catch (n e) { (e); } }", "n_tokens": 62, "n_pass": [317, 39, 21]}
{"time": "2021-02-22 06:34:24.587210", "score": "0.8436", "loss": "0.2019", "code": "e[]getEncoded(){try{rs.getEncoded(); } catch (n e) { (e); } }", "n_tokens": 61, "n_pass": [319, 40, 22]}
{"time": "2021-02-22 06:34:27.195209", "score": "0.8746", "loss": "0.1536", "code": "e[]getEncoded(){try{s.getEncoded(); } catch (n e) { (e); } }", "n_tokens": 60, "n_pass": [320, 41, 23]}
{"time": "2021-02-22 06:34:58.523476", "score": "0.8746", "loss": "0.1536", "code": "e[]getEncoded(){try{s.getEncoded();} catch (n e) { (e); } }", "n_tokens": 59, "n_pass": [336, 53, 24]}
{"time": "2021-02-22 06:35:01.124534", "score": "0.8746", "loss": "0.1536", "code": "e[]getEncoded(){try{s.getEncoded();}catch (n e) { (e); } }", "n_tokens": 58, "n_pass": [338, 54, 25]}
{"time": "2021-02-22 06:35:03.733096", "score": "0.8746", "loss": "0.1536", "code": "e[]getEncoded(){try{s.getEncoded();}catch(n e) { (e); } }", "n_tokens": 57, "n_pass": [344, 55, 26]}
{"time": "2021-02-22 06:35:40.721027", "score": "0.8746", "loss": "0.1536", "code": "e[]getEncoded(){try{s.getEncoded();}catch(n e){ (e); } }", "n_tokens": 56, "n_pass": [409, 67, 27]}
{"time": "2021-02-22 06:35:43.356662", "score": "0.8746", "loss": "0.1536", "code": "e[]getEncoded(){try{s.getEncoded();}catch(n e){(e); } }", "n_tokens": 55, "n_pass": [411, 68, 28]}
{"time": "2021-02-22 06:35:45.956929", "score": "0.8746", "loss": "0.1536", "code": "e[]getEncoded(){try{s.getEncoded();}catch(n e){(e);} }", "n_tokens": 54, "n_pass": [416, 69, 29]}
{"time": "2021-02-22 06:35:48.577011", "score": "0.8746", "loss": "0.1536", "code": "e[]getEncoded(){try{s.getEncoded();}catch(n e){(e);}}", "n_tokens": 53, "n_pass": [418, 70, 30]}

Minimal simplified code:
e[]getEncoded(){try{s.getEncoded();}catch(n e){(e);}}

