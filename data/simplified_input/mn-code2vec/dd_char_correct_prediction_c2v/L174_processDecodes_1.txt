
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/sakaiproject__sakai/jsf/jsf-widgets/src/java/org/sakaiproject/jsf/component/FlowState_processDecodes.java
method_name = processDecodes
method_body = public void processDecodes(FacesContext context) { if (log.isDebugEnabled()) log.debug("processDecodes " + getBean()); super.processDecodes(context); }
predict, score, loss = processDecodes, 0.9999730587005615, 3.242440288886428e-05

Trace of simplified code(s):
{"time": "2021-02-22 15:19:26.334961", "score": "1.0", "loss": "0.0", "code": "public void processDecodes(FacesContext context) { if (log.isDebugEnabled()) log.debug(\"processDecodes \" + getBean()); super.processDecodes(context); }", "n_tokens": 151, "n_pass": [1, 1, 1]}
{"time": "2021-02-22 15:19:29.406367", "score": "1.0", "loss": "0.0", "code": "public void processDecodes(FacesContext context) { if (l) log.debug(\"processDecodes \" + getBean()); super.processDecodes(context); }", "n_tokens": 132, "n_pass": [23, 2, 2]}
{"time": "2021-02-22 15:19:32.448551", "score": "0.9934", "loss": "0.0199", "code": "public void processDecodes(FacesContext context) { if (l) log.debug(\"pros \" + getBean()); super.processDecodes(context); }", "n_tokens": 122, "n_pass": [46, 3, 3]}
{"time": "2021-02-22 15:19:37.639947", "score": "0.994", "loss": "0.0217", "code": "id processDecodes(FacesContext context) { if (l) log.debug(\"pros \" + getBean()); super.processDecodes(context); }", "n_tokens": 113, "n_pass": [52, 5, 4]}
{"time": "2021-02-22 15:19:52.737053", "score": "0.995", "loss": "0.026", "code": "id processDecodes(FacesContext co) { if (l) log.debug(\"pros \" + getBean()); super.processDecodes(context); }", "n_tokens": 108, "n_pass": [97, 10, 5]}
{"time": "2021-02-22 15:19:55.377196", "score": "0.9958", "loss": "0.0234", "code": "id processDecodes(FacesContext co) { if (l)debug(\"pros \" + getBean()); super.processDecodes(context); }", "n_tokens": 103, "n_pass": [100, 11, 6]}
{"time": "2021-02-22 15:19:57.968611", "score": "1.0", "loss": "0.0", "code": "id processDecodes(FacesContext co) { if (l)(\"pros \" + getBean()); super.processDecodes(context); }", "n_tokens": 98, "n_pass": [101, 12, 7]}
{"time": "2021-02-22 15:20:00.574815", "score": "1.0", "loss": "0.0", "code": "id processDecodes(FacesContext co) { if (l)(\"pros \" +ean()); super.processDecodes(context); }", "n_tokens": 93, "n_pass": [104, 13, 8]}
{"time": "2021-02-22 15:20:11.092803", "score": "1.0", "loss": "0.0001", "code": "id processDecodes(FacesContext co) { if (l)(\"pros \" +ean()); super.processDecodes(ct); }", "n_tokens": 88, "n_pass": [111, 17, 9]}
{"time": "2021-02-22 15:20:15.280324", "score": "0.9996", "loss": "0.0046", "code": "id processDecodes(Faontext co) { if (l)(\"pros \" +ean()); super.processDecodes(ct); }", "n_tokens": 84, "n_pass": [118, 18, 10]}
{"time": "2021-02-22 15:20:17.870448", "score": "0.9996", "loss": "0.0046", "code": "id processDecodes(Faxt co) { if (l)(\"pros \" +ean()); super.processDecodes(ct); }", "n_tokens": 80, "n_pass": [119, 19, 11]}
{"time": "2021-02-22 15:20:20.449201", "score": "0.8346", "loss": "0.9281", "code": "id processDecodes(Faxt co) { i(\"pros \" +ean()); super.processDecodes(ct); }", "n_tokens": 75, "n_pass": [122, 20, 12]}
{"time": "2021-02-22 15:20:32.554703", "score": "0.9994", "loss": "0.0056", "code": "id processDecodes(Faxt co) {(\"pros \" +ean()); super.processDecodes(ct); }", "n_tokens": 73, "n_pass": [171, 24, 13]}
{"time": "2021-02-22 15:20:35.153415", "score": "0.9993", "loss": "0.0057", "code": "id processDecodes(Faxt co) {(\"os \" +ean()); super.processDecodes(ct); }", "n_tokens": 71, "n_pass": [173, 25, 14]}
{"time": "2021-02-22 15:20:37.760372", "score": "0.9994", "loss": "0.0054", "code": "id processDecodes(Faxt co) {(\" \" +ean()); super.processDecodes(ct); }", "n_tokens": 69, "n_pass": [174, 26, 15]}
{"time": "2021-02-22 15:20:40.361094", "score": "0.9994", "loss": "0.0055", "code": "id processDecodes(Faxt co) {(\" \" +n()); super.processDecodes(ct); }", "n_tokens": 67, "n_pass": [177, 27, 16]}
{"time": "2021-02-22 15:20:43.038508", "score": "0.9995", "loss": "0.0041", "code": "id processDecodes(Faxt co) {(\" \" +n()); er.processDecodes(ct); }", "n_tokens": 64, "n_pass": [180, 28, 17]}
{"time": "2021-02-22 15:20:45.629631", "score": "0.9995", "loss": "0.0048", "code": "id processDecodes(Faxt co) {(\" \" +n()); processDecodes(ct); }", "n_tokens": 61, "n_pass": [181, 29, 18]}
{"time": "2021-02-22 15:21:01.711529", "score": "0.9988", "loss": "0.0114", "code": "id processDecodes(xt co) {(\" \" +n()); processDecodes(ct); }", "n_tokens": 59, "n_pass": [198, 34, 19]}
{"time": "2021-02-22 15:21:20.312980", "score": "0.9986", "loss": "0.011", "code": "id processDecodes(t co) {(\" \" +n()); processDecodes(ct); }", "n_tokens": 58, "n_pass": [274, 39, 20]}
{"time": "2021-02-22 15:21:22.916994", "score": "0.9978", "loss": "0.0172", "code": "id processDecodes(t o) {(\" \" +n()); processDecodes(ct); }", "n_tokens": 57, "n_pass": [276, 40, 21]}
{"time": "2021-02-22 15:21:25.502362", "score": "0.9978", "loss": "0.0172", "code": "id processDecodes(t o){(\" \" +n()); processDecodes(ct); }", "n_tokens": 56, "n_pass": [279, 41, 22]}
{"time": "2021-02-22 15:21:28.089729", "score": "0.997", "loss": "0.0222", "code": "id processDecodes(t o){(\"\" +n()); processDecodes(ct); }", "n_tokens": 55, "n_pass": [283, 42, 23]}
{"time": "2021-02-22 15:21:30.674427", "score": "0.997", "loss": "0.0222", "code": "id processDecodes(t o){(\"\"+n()); processDecodes(ct); }", "n_tokens": 54, "n_pass": [285, 43, 24]}
{"time": "2021-02-22 15:21:33.258217", "score": "0.997", "loss": "0.0222", "code": "id processDecodes(t o){(\"\"+n());processDecodes(ct); }", "n_tokens": 53, "n_pass": [292, 44, 25]}
{"time": "2021-02-22 15:21:56.627146", "score": "0.9893", "loss": "0.1141", "code": "id processDecodes(t o){(\"\"+n());processDecodes(); }", "n_tokens": 51, "n_pass": [302, 53, 26]}
{"time": "2021-02-22 15:21:59.203612", "score": "0.9932", "loss": "0.0297", "code": "d processDecodes(t o){(\"\"+n());processDecodes(); }", "n_tokens": 50, "n_pass": [305, 54, 27]}
{"time": "2021-02-22 15:22:57.947715", "score": "0.9932", "loss": "0.0297", "code": "d processDecodes(t o){(\"\"+n());processDecodes();}", "n_tokens": 49, "n_pass": [378, 74, 28]}

Minimal simplified code:
d processDecodes(t o){(""+n());processDecodes();}

