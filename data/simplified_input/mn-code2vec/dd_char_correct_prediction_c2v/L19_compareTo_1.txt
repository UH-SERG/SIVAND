
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/Waikato__meka/src/main/java/meka/gui/explorer/AbstractResultHistoryPlugin_compareTo.java
method_name = compareTo
method_body = public int compareTo(AbstractResultHistoryPlugin o) { int result; result = getGroup().compareTo(o.getGroup()); if (result == 0) result = getName().compareTo(o.getName()); return result; }
predict, score, loss = compareTo, 0.97294020652771, 0.027514852583408356

Trace of simplified code(s):
{"time": "2021-02-21 17:43:11.483448", "score": "0.9729", "loss": "0.0275", "code": "public int compareTo(AbstractResultHistoryPlugin o) { int result; result = getGroup().compareTo(o.getGroup()); if (result == 0) result = getName().compareTo(o.getName()); return result; }", "n_tokens": 187, "n_pass": [1, 1, 1]}
{"time": "2021-02-21 17:43:16.729345", "score": "0.932", "loss": "0.0737", "code": "public int compareTo(Abin o) { int result; result = getGroup().compareTo(o.getGroup()); if (result == 0) result = getName().compareTo(o.getName()); return result; }", "n_tokens": 164, "n_pass": [21, 3, 2]}
{"time": "2021-02-21 17:43:19.345703", "score": "0.7258", "loss": "0.3947", "code": "public int compareTo(Abin o) { int result; reseTo(o.getGroup()); if (result == 0) result = getName().compareTo(o.getName()); return result; }", "n_tokens": 141, "n_pass": [23, 4, 3]}
{"time": "2021-02-21 17:43:27.628107", "score": "0.7497", "loss": "0.3568", "code": "public int compareTo(Abin o) { inseTo(o.getGroup()); if (result == 0) result = getName().compareTo(o.getName()); return result; }", "n_tokens": 129, "n_pass": [53, 7, 4]}
{"time": "2021-02-21 17:43:35.904360", "score": "0.871", "loss": "0.1956", "code": "public int compareTo(Abin o) { inseTo(ooup()); if (result == 0) result = getName().compareTo(o.getName()); return result; }", "n_tokens": 123, "n_pass": [88, 10, 5]}
{"time": "2021-02-21 17:43:38.535400", "score": "0.8634", "loss": "0.2098", "code": "public int compareTo(Abin o) { inseTo(ooup()); if (result == 0)t = getName().compareTo(o.getName()); return result; }", "n_tokens": 117, "n_pass": [93, 11, 6]}
{"time": "2021-02-21 17:43:41.155998", "score": "0.4457", "loss": "2.3914", "code": "public int compareTo(Abin o) { inseTo(ooup()); if (result == 0)tName().compareTo(o.getName()); return result; }", "n_tokens": 111, "n_pass": [94, 12, 7]}
{"time": "2021-02-21 17:43:43.766350", "score": "0.6915", "loss": "1.7396", "code": "public int compareTo(Abin o) { inseTo(ooup()); if (result == 0)tName().compareTo(ame()); return result; }", "n_tokens": 105, "n_pass": [98, 13, 8]}
{"time": "2021-02-21 17:43:46.376697", "score": "0.6846", "loss": "1.7162", "code": "public int compareTo(Abin o) { inseTo(ooup()); if (result == 0)tName().compareTo(ame()); retuult; }", "n_tokens": 99, "n_pass": [101, 14, 9]}
{"time": "2021-02-21 17:43:51.981401", "score": "0.5806", "loss": "1.654", "code": "public int compareTo() { inseTo(ooup()); if (result == 0)tName().compareTo(ame()); retuult; }", "n_tokens": 93, "n_pass": [107, 16, 10]}
{"time": "2021-02-21 17:44:02.756943", "score": "0.8543", "loss": "0.6179", "code": "public int compareTo() { inseTo(o()); if (result == 0)tName().compareTo(ame()); retuult; }", "n_tokens": 90, "n_pass": [160, 20, 11]}
{"time": "2021-02-21 17:44:05.365066", "score": "0.4996", "loss": "2.0778", "code": "public int compareTo() { inseTo(o()); if (ult == 0)tName().compareTo(ame()); retuult; }", "n_tokens": 87, "n_pass": [163, 21, 12]}
{"time": "2021-02-21 17:44:07.976532", "score": "0.7239", "loss": "1.0695", "code": "public int compareTo() { inseTo(o()); if (ult == 0)me().compareTo(ame()); retuult; }", "n_tokens": 84, "n_pass": [167, 22, 13]}
{"time": "2021-02-21 17:44:15.836137", "score": "0.7239", "loss": "1.0695", "code": "public int compareTo() { inseTo(o()); if (ult == 0)me().compareTo(ame()); rult; }", "n_tokens": 81, "n_pass": [176, 25, 14]}
{"time": "2021-02-21 17:44:18.431878", "score": "0.7181", "loss": "1.0962", "code": "public int compareTo() { inseTo(o()); if (ult == 0)me().compareTo(ame()); r; }", "n_tokens": 78, "n_pass": [177, 26, 15]}
{"time": "2021-02-21 17:44:24.832617", "score": "0.7517", "loss": "1.3825", "code": "public int compareTo() {seTo(o()); if (ult == 0)me().compareTo(ame()); r; }", "n_tokens": 75, "n_pass": [188, 28, 16]}
{"time": "2021-02-21 17:44:27.432755", "score": "0.7911", "loss": "0.6425", "code": "public int compareTo() {o(o()); if (ult == 0)me().compareTo(ame()); r; }", "n_tokens": 72, "n_pass": [189, 29, 17]}
{"time": "2021-02-21 17:44:35.245815", "score": "0.8016", "loss": "0.6145", "code": "public int compareTo() {o(o()); if (ult == 0)me().compareTo(ame()); }", "n_tokens": 69, "n_pass": [204, 32, 18]}
{"time": "2021-02-21 17:45:02.363127", "score": "0.8016", "loss": "0.6145", "code": "public int compareTo(){o(o()); if (ult == 0)me().compareTo(ame()); }", "n_tokens": 68, "n_pass": [301, 40, 19]}
{"time": "2021-02-21 17:45:04.968174", "score": "0.9549", "loss": "0.2517", "code": "public int compareTo(){(o()); if (ult == 0)me().compareTo(ame()); }", "n_tokens": 67, "n_pass": [303, 41, 20]}
{"time": "2021-02-21 17:45:07.566758", "score": "0.9544", "loss": "0.2524", "code": "public int compareTo(){(o); if (ult == 0)me().compareTo(ame()); }", "n_tokens": 65, "n_pass": [306, 42, 21]}
{"time": "2021-02-21 17:45:10.187736", "score": "0.9959", "loss": "0.0196", "code": "public int compareTo(){(o); if (u == 0)me().compareTo(ame()); }", "n_tokens": 63, "n_pass": [311, 43, 22]}
{"time": "2021-02-21 17:45:12.775368", "score": "0.9964", "loss": "0.0049", "code": "public int compareTo(){(o); if (u= 0)me().compareTo(ame()); }", "n_tokens": 61, "n_pass": [312, 44, 23]}
{"time": "2021-02-21 17:45:15.359978", "score": "0.9792", "loss": "0.0559", "code": "public int compareTo(){(o); if (u0)me().compareTo(ame()); }", "n_tokens": 59, "n_pass": [313, 45, 24]}
{"time": "2021-02-21 17:45:17.943122", "score": "0.98", "loss": "0.0523", "code": "public int compareTo(){(o); if (u0)me.compareTo(ame()); }", "n_tokens": 57, "n_pass": [316, 46, 25]}
{"time": "2021-02-21 17:45:30.886976", "score": "0.981", "loss": "0.055", "code": "public int compareTo(){(o); if (u0)me.compare(ame()); }", "n_tokens": 55, "n_pass": [321, 51, 26]}
{"time": "2021-02-21 17:45:36.078450", "score": "0.8505", "loss": "0.4019", "code": "public int compareTo(){(o); if (u0)me.compare(ame); }", "n_tokens": 53, "n_pass": [324, 53, 27]}
{"time": "2021-02-21 17:46:07.885250", "score": "0.8505", "loss": "0.4019", "code": "public int compareTo(){(o); if (u0)me.compare(ame);}", "n_tokens": 52, "n_pass": [393, 63, 28]}
{"time": "2021-02-21 17:46:24.832803", "score": "0.8505", "loss": "0.4019", "code": "public int compareTo(){(o);if (u0)me.compare(ame);}", "n_tokens": 51, "n_pass": [421, 68, 29]}
{"time": "2021-02-21 17:46:27.414510", "score": "0.8505", "loss": "0.4019", "code": "public int compareTo(){(o);if(u0)me.compare(ame);}", "n_tokens": 50, "n_pass": [424, 69, 30]}
{"time": "2021-02-21 17:46:30.023605", "score": "0.9658", "loss": "0.0675", "code": "public int compareTo(){(o);if(0)me.compare(ame);}", "n_tokens": 49, "n_pass": [426, 70, 31]}
{"time": "2021-02-21 17:46:32.609655", "score": "0.9634", "loss": "0.0816", "code": "public int compareTo(){(o);if(0)e.compare(ame);}", "n_tokens": 48, "n_pass": [429, 71, 32]}
{"time": "2021-02-21 17:46:55.904236", "score": "0.9235", "loss": "0.1261", "code": "public int compareTo(){(o);if(0)e.compare(me);}", "n_tokens": 47, "n_pass": [440, 80, 33]}
{"time": "2021-02-21 17:46:58.482908", "score": "0.8459", "loss": "0.2957", "code": "public int compareTo(){(o);if(0)e.compare(e);}", "n_tokens": 46, "n_pass": [441, 81, 34]}
{"time": "2021-02-21 17:47:01.078713", "score": "0.9296", "loss": "0.0802", "code": "public int compareTo(){(o);if(0)e.compare();}", "n_tokens": 45, "n_pass": [442, 82, 35]}
{"time": "2021-02-21 17:47:03.663412", "score": "0.5017", "loss": "0.8028", "code": "publicint compareTo(){(o);if(0)e.compare();}", "n_tokens": 44, "n_pass": [452, 83, 36]}
{"time": "2021-02-21 17:47:06.252919", "score": "0.3752", "loss": "1.1049", "code": "publicnt compareTo(){(o);if(0)e.compare();}", "n_tokens": 43, "n_pass": [453, 84, 37]}
{"time": "2021-02-21 17:47:08.858957", "score": "0.3752", "loss": "1.1049", "code": "publict compareTo(){(o);if(0)e.compare();}", "n_tokens": 42, "n_pass": [454, 85, 38]}
{"time": "2021-02-21 17:47:36.552719", "score": "0.3752", "loss": "1.1049", "code": "ublict compareTo(){(o);if(0)e.compare();}", "n_tokens": 41, "n_pass": [491, 94, 39]}
{"time": "2021-02-21 17:47:39.156632", "score": "0.3752", "loss": "1.1049", "code": "blict compareTo(){(o);if(0)e.compare();}", "n_tokens": 40, "n_pass": [492, 95, 40]}
{"time": "2021-02-21 17:47:41.737628", "score": "0.3752", "loss": "1.1049", "code": "lict compareTo(){(o);if(0)e.compare();}", "n_tokens": 39, "n_pass": [493, 96, 41]}

Minimal simplified code:
lict compareTo(){(o);if(0)e.compare();}

