
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/codefollower__Tomcat-Research/java/org/apache/tomcat/util/net/NioSelectorPool_close.java
method_name = close
method_body = public void close() throws IOException { enabled = false; Selector s; while ((s = selectors.poll()) != null) s.close(); spare.set(0); active.set(0); if (blockingSelector != null) { blockingSelector.close(); } if (SHARED && getSharedSelector() != null) { getSharedSelector().close(); SHARED_SELECTOR = null; } }
predict, score, loss = close, 0.6958653926849365, 0.5746877193450928

Trace of simplified code(s):
{"time": "2021-02-22 19:40:45.630505", "score": "0.7963", "loss": "0.3448", "code": "public void close() throws IOException { enabled = false; Selector s; while ((s = selectors.poll()) != null) s.close(); spare.set(0); active.set(0); if (blockingSelector != null) { blockingSelector.close(); } if (SHARED && getSharedSelector() != null) { getSharedSelector().close(); SHARED_SELECTOR = null; } }", "n_tokens": 310, "n_pass": [1, 1, 1]}
{"time": "2021-02-22 19:40:48.336321", "score": "0.8891", "loss": "0.1903", "code": "public void close() throws IOException { enabled = false; Selector s; while (lockingSelector != null) { blockingSelector.close(); } if (SHARED && getSharedSelector() != null) { getSharedSelector().close(); SHARED_SELECTOR = null; } }", "n_tokens": 233, "n_pass": [9, 2, 2]}
{"time": "2021-02-22 19:40:50.973803", "score": "0.6911", "loss": "0.5011", "code": "public void close() throws IOException { enabled = false; Selector s; while (Selector() != null) { getSharedSelector().close(); SHARED_SELECTOR = null; } }", "n_tokens": 155, "n_pass": [10, 3, 3]}
{"time": "2021-02-22 19:40:56.671207", "score": "0.522", "loss": "0.8007", "code": "public void close() { enabled = false; Selector s; while (Selector() != null) { getSharedSelector().close(); SHARED_SELECTOR = null; } }", "n_tokens": 136, "n_pass": [32, 5, 4]}
{"time": "2021-02-22 19:41:01.881832", "score": "0.1947", "loss": "1.8329", "code": "public void close() { enable; Selector s; while (Selector() != null) { getSharedSelector().close(); SHARED_SELECTOR = null; } }", "n_tokens": 127, "n_pass": [54, 7, 5]}
{"time": "2021-02-22 19:41:09.696234", "score": "0.1947", "loss": "1.8329", "code": "public void close() { enable; Selector s; while (Selector() != null) { getShar().close(); SHARED_SELECTOR = null; } }", "n_tokens": 117, "n_pass": [60, 10, 6]}
{"time": "2021-02-22 19:41:12.309063", "score": "0.4837", "loss": "1.2557", "code": "id close() { enable; Selector s; while (Selector() != null) { getShar().close(); SHARED_SELECTOR = null; } }", "n_tokens": 108, "n_pass": [65, 11, 7]}
{"time": "2021-02-22 19:41:14.902073", "score": "0.4823", "loss": "1.2213", "code": "id close() { enablr s; while (Selector() != null) { getShar().close(); SHARED_SELECTOR = null; } }", "n_tokens": 98, "n_pass": [68, 12, 8]}
{"time": "2021-02-22 19:41:17.504942", "score": "0.8475", "loss": "0.2129", "code": "id close() { enablr s; while (Selector) { getShar().close(); SHARED_SELECTOR = null; } }", "n_tokens": 88, "n_pass": [71, 13, 9]}
{"time": "2021-02-22 19:41:20.475485", "score": "0.8287", "loss": "0.2498", "code": "id close() { enablr s; while (Selector) { gr().close(); SHARED_SELECTOR = null; } }", "n_tokens": 83, "n_pass": [100, 14, 10]}
{"time": "2021-02-22 19:41:25.689562", "score": "0.8287", "loss": "0.2498", "code": "id close() { enablr s; while (Selector) { gr().close(); SHSELECTOR = null; } }", "n_tokens": 78, "n_pass": [104, 16, 11]}
{"time": "2021-02-22 19:41:28.301007", "score": "0.8287", "loss": "0.2498", "code": "id close() { enablr s; while (Selector) { gr().close(); SHTOR = null; } }", "n_tokens": 73, "n_pass": [105, 17, 12]}
{"time": "2021-02-22 19:41:31.689479", "score": "0.8337", "loss": "0.2479", "code": "id close() { r s; while (Selector) { gr().close(); SHTOR = null; } }", "n_tokens": 68, "n_pass": [112, 18, 13]}
{"time": "2021-02-22 19:41:34.305656", "score": "0.907", "loss": "0.1282", "code": "id close() { while (Selector) { gr().close(); SHTOR = null; } }", "n_tokens": 63, "n_pass": [113, 19, 14]}
{"time": "2021-02-22 19:41:36.901651", "score": "0.8888", "loss": "0.1627", "code": "id close() { while (Sel) { gr().close(); SHTOR = null; } }", "n_tokens": 58, "n_pass": [116, 20, 15]}
{"time": "2021-02-22 19:41:42.869975", "score": "0.896", "loss": "0.14", "code": "id close() { while (l) { gr().close(); SHTOR = null; } }", "n_tokens": 56, "n_pass": [153, 22, 16]}
{"time": "2021-02-22 19:41:45.464133", "score": "0.9199", "loss": "0.103", "code": "id close() { while (l) {r().close(); SHTOR = null; } }", "n_tokens": 54, "n_pass": [156, 23, 17]}
{"time": "2021-02-22 19:41:50.652547", "score": "0.77", "loss": "0.3031", "code": "id close() { while (l) {r().close();TOR = null; } }", "n_tokens": 51, "n_pass": [161, 25, 18]}
{"time": "2021-02-22 19:41:53.225021", "score": "0.8033", "loss": "0.233", "code": "id close() { while (l) {r().close();TORnull; } }", "n_tokens": 48, "n_pass": [163, 26, 19]}
{"time": "2021-02-22 19:41:55.809621", "score": "0.8033", "loss": "0.233", "code": "id close() { while (l) {r().close();TORl; } }", "n_tokens": 45, "n_pass": [164, 27, 20]}
{"time": "2021-02-22 19:42:05.116608", "score": "0.7962", "loss": "0.2419", "code": "id close() { while (l) {r().close();l; } }", "n_tokens": 42, "n_pass": [183, 30, 21]}
{"time": "2021-02-22 19:42:07.722403", "score": "0.8042", "loss": "0.2313", "code": "id close() { while (l) {r().close();} }", "n_tokens": 39, "n_pass": [184, 31, 22]}
{"time": "2021-02-22 19:42:16.217680", "score": "0.6606", "loss": "0.4232", "code": "d close() { while (l) {r().close();} }", "n_tokens": 38, "n_pass": [238, 33, 23]}
{"time": "2021-02-22 19:42:21.111841", "score": "0.6606", "loss": "0.4232", "code": "d close(){ while (l) {r().close();} }", "n_tokens": 37, "n_pass": [247, 34, 24]}
{"time": "2021-02-22 19:42:23.706294", "score": "0.6606", "loss": "0.4232", "code": "d close(){while (l) {r().close();} }", "n_tokens": 36, "n_pass": [249, 35, 25]}
{"time": "2021-02-22 19:42:26.315694", "score": "0.6606", "loss": "0.4232", "code": "d close(){while(l) {r().close();} }", "n_tokens": 35, "n_pass": [255, 36, 26]}
{"time": "2021-02-22 19:42:28.904390", "score": "0.6606", "loss": "0.4232", "code": "d close(){while(l){r().close();} }", "n_tokens": 34, "n_pass": [259, 37, 27]}
{"time": "2021-02-22 19:42:55.727779", "score": "0.6606", "loss": "0.4232", "code": "d close(){while(l){r().close();}}", "n_tokens": 33, "n_pass": [307, 46, 28]}

Minimal simplified code:
d close(){while(l){r().close();}}

