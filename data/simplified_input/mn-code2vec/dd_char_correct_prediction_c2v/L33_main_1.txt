
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/JeffLi1993__java-core-learning-example/src/main/java/org/javacore/thread/CallableDemo_main.java
method_name = main
method_body = public static void main(String[] args) { ExecutorService exec = Executors.newCachedThreadPool(); ArrayList<Future<String>> results = new ArrayList<>(); for (int i = 0; i < 5; i++) results.add(exec.submit(new TaskWithResult(i))); for (Future<String> fs : results) try { System.out.println(fs.get()); } catch (InterruptedException e) { System.out.println(e); e.printStackTrace(); } catch (ExecutionException e) { System.out.println(e); e.printStackTrace(); } finally { exec.shutdown(); } }
predict, score, loss = main, 0.9996699094772339, 0.0004291805380489677

Trace of simplified code(s):
{"time": "2021-02-21 22:39:13.996561", "score": "0.9981", "loss": "0.0022", "code": "public static void main(String[] args) { ExecutorService exec = Executors.newCachedThreadPool(); ArrayList<Future<String>> results = new ArrayList<>(); for (int i = 0; i < 5; i++) results.add(exec.submit(new TaskWithResult(i))); for (Future<String> fs : results) try { System.out.println(fs.get()); } catch (InterruptedException e) { System.out.println(e); e.printStackTrace(); } catch (ExecutionException e) { System.out.println(e); e.printStackTrace(); } finally { exec.shutdown(); } }", "n_tokens": 487, "n_pass": [1, 1, 1]}
{"time": "2021-02-21 22:39:17.401837", "score": "1.0", "loss": "0.0", "code": "public static void main(String[] args) { ExecutorService exec = Executors.newCachedThreadPool(); ArrayList<Future<String>> results = new ArrayList<>(); for (int i = 0; i < 5; i++) results.add(exec.submit(new TaskWithResult(i))); for (Future<String> fs : results) try { System.out.println(fs.get()); } catch (InterruptedException e) { System.out.println(e); e.printStln(e); e.printStackTrace(); } finally { exec.shutdown(); } }", "n_tokens": 426, "n_pass": [26, 2, 2]}
{"time": "2021-02-21 22:39:21.638641", "score": "0.9999", "loss": "0.0002", "code": "public static void main(String[] args) { ExecutorService exec = Executors.newCachedThreadPool(); ArrayList<Future<String>> results = new ArrayList<>(); for (int i = 0; i < 5; i++) results.add(exec.submit(new TaskWithResult(i))); for (Future<String> fs : results) try { System.out.println(fs.get()); } catch (InterruptedException e) {Stln(e); e.printStackTrace(); } finally { exec.shutdown(); } }", "n_tokens": 395, "n_pass": [60, 3, 3]}
{"time": "2021-02-21 22:39:25.745563", "score": "0.9941", "loss": "0.0132", "code": "oid main(String[] args) { ExecutorService exec = Executors.newCachedThreadPool(); ArrayList<Future<String>> results = new ArrayList<>(); for (int i = 0; i < 5; i++) results.add(exec.submit(new TaskWithResult(i))); for (Future<String> fs : results) try { System.out.println(fs.get()); } catch (InterruptedException e) {Stln(e); e.printStackTrace(); } finally { exec.shutdown(); } }", "n_tokens": 380, "n_pass": [104, 4, 4]}
{"time": "2021-02-21 22:39:28.617246", "score": "0.8972", "loss": "0.4416", "code": "oid main(String[] args) { Execc = Executors.newCachedThreadPool(); ArrayList<Future<String>> results = new ArrayList<>(); for (int i = 0; i < 5; i++) results.add(exec.submit(new TaskWithResult(i))); for (Future<String> fs : results) try { System.out.println(fs.get()); } catch (InterruptedException e) {Stln(e); e.printStackTrace(); } finally { exec.shutdown(); } }", "n_tokens": 365, "n_pass": [106, 5, 5]}
{"time": "2021-02-21 22:39:31.618515", "score": "0.9987", "loss": "0.0018", "code": "oid main(String[] args) { ExecewCachedThreadPool(); ArrayList<Future<String>> results = new ArrayList<>(); for (int i = 0; i < 5; i++) results.add(exec.submit(new TaskWithResult(i))); for (Future<String> fs : results) try { System.out.println(fs.get()); } catch (InterruptedException e) {Stln(e); e.printStackTrace(); } finally { exec.shutdown(); } }", "n_tokens": 350, "n_pass": [107, 6, 6]}
{"time": "2021-02-21 22:39:34.495924", "score": "0.9934", "loss": "0.0203", "code": "oid main(String[] args) { Execool(); ArrayList<Future<String>> results = new ArrayList<>(); for (int i = 0; i < 5; i++) results.add(exec.submit(new TaskWithResult(i))); for (Future<String> fs : results) try { System.out.println(fs.get()); } catch (InterruptedException e) {Stln(e); e.printStackTrace(); } finally { exec.shutdown(); } }", "n_tokens": 335, "n_pass": [108, 7, 7]}
{"time": "2021-02-21 22:39:37.319851", "score": "0.9993", "loss": "0.0013", "code": "oid main(String[] args) { Exect<Future<String>> results = new ArrayList<>(); for (int i = 0; i < 5; i++) results.add(exec.submit(new TaskWithResult(i))); for (Future<String> fs : results) try { System.out.println(fs.get()); } catch (InterruptedException e) {Stln(e); e.printStackTrace(); } finally { exec.shutdown(); } }", "n_tokens": 320, "n_pass": [109, 8, 8]}
{"time": "2021-02-21 22:39:40.758407", "score": "0.6478", "loss": "1.2137", "code": "oid main(String[] args) { Exect<Future<String>> results = ne; for (int i = 0; i < 5; i++) results.add(exec.submit(new TaskWithResult(i))); for (Future<String> fs : results) try { System.out.println(fs.get()); } catch (InterruptedException e) {Stln(e); e.printStackTrace(); } finally { exec.shutdown(); } }", "n_tokens": 305, "n_pass": [112, 9, 9]}
{"time": "2021-02-21 22:39:43.659085", "score": "0.9872", "loss": "0.0211", "code": "oid main(String[] args) { Exect<Future<String>> results = ne; for (int i = 0; i < 5; i++) results.add(exec.submit(new TaskWithResult(i))); for (Future<String> fs : results) try { Sln(fs.get()); } catch (InterruptedException e) {Stln(e); e.printStackTrace(); } finally { exec.shutdown(); } }", "n_tokens": 290, "n_pass": [121, 10, 10]}
{"time": "2021-02-21 22:39:47.661928", "score": "0.9759", "loss": "0.037", "code": "oid main(String[] args) { Exect<Future<String>> results = ne; for (int i = 0; i < 5; i++) results.add(exec.submit(new TaskWithResult(i))); for (Future<String> fs : results) try { Sln(fs.get()); } catch (Interruption e) {Stln(e); e.printStackTrace(); } finally { exec.shutdown(); } }", "n_tokens": 282, "n_pass": [183, 11, 11]}
{"time": "2021-02-21 22:39:50.515648", "score": "0.9958", "loss": "0.0077", "code": "oid main(String[] args) { Exect<Future<String>> results = ne; for (int i = 0; i < 5; i++) results.add(exec.submit(new TaskWithResult(i))); for (Future<String> fs : results) try { Sln(fs.get()); } catch (Interruption e) {Stln(e); e.prirace(); } finally { exec.shutdown(); } }", "n_tokens": 274, "n_pass": [186, 12, 12]}
{"time": "2021-02-21 22:39:53.369311", "score": "0.7407", "loss": "0.4389", "code": "oid main(String[] args) { Exect<Future<String>> results = ne; for (int i = 0; i < 5; i++) results.add(exec.submit(new TaskWithResult(i))); for (Future<String> fs : results) try { Sln(fs.get()); } catch (Interruption e) {Stln(e); e.prirace(); } finally { execn(); } }", "n_tokens": 266, "n_pass": [190, 13, 13]}
{"time": "2021-02-21 22:39:58.209533", "score": "0.9836", "loss": "0.0267", "code": "oid main(String[] args) { Exect<Future<String>> r= ne; for (int i = 0; i < 5; i++) results.add(exec.submit(new TaskWithResult(i))); for (Future<String> fs : results) try { Sln(fs.get()); } catch (Interruption e) {Stln(e); e.prirace(); } finally { execn(); } }", "n_tokens": 259, "n_pass": [199, 14, 14]}
{"time": "2021-02-21 22:40:04.101659", "score": "0.7603", "loss": "0.3842", "code": "oid main(String[] args) { Exect<Future<String>> r= ne; for (int i = 0; i < 5; i++) results.add(exec.submit(WithResult(i))); for (Future<String> fs : results) try { Sln(fs.get()); } catch (Interruption e) {Stln(e); e.prirace(); } finally { execn(); } }", "n_tokens": 251, "n_pass": [208, 16, 15]}
{"time": "2021-02-21 22:40:06.888621", "score": "0.9956", "loss": "0.007", "code": "oid main(String[] args) { Exect<Future<String>> r= ne; for (int i = 0; i < 5; i++) results.add(exec.submit(lt(i))); for (Future<String> fs : results) try { Sln(fs.get()); } catch (Interruption e) {Stln(e); e.prirace(); } finally { execn(); } }", "n_tokens": 243, "n_pass": [209, 17, 16]}
{"time": "2021-02-21 22:40:14.275640", "score": "0.9931", "loss": "0.0107", "code": "oid main(String[] args) { Exect<Future<String>> r= ne; for (int i = 0; i < 5; i++) results.add(exec.submit(lt(i))); for (Fu<String> fs : results) try { Sln(fs.get()); } catch (Interruption e) {Stln(e); e.prirace(); } finally { execn(); } }", "n_tokens": 239, "n_pass": [310, 19, 17]}
{"time": "2021-02-21 22:40:17.150419", "score": "0.9917", "loss": "0.0134", "code": "oid main(String[] args) { Exect<Future<String>> r= ne; for (int i = 0; i < 5; i++) results.add(exec.submit(lt(i))); for (Fu<String> fs : res) try { Sln(fs.get()); } catch (Interruption e) {Stln(e); e.prirace(); } finally { execn(); } }", "n_tokens": 235, "n_pass": [314, 20, 18]}
{"time": "2021-02-21 22:40:19.970999", "score": "0.9753", "loss": "0.0367", "code": "oid main(String[] args) { Exect<Future<String>> r= ne; for (int i = 0; i < 5; i++) results.add(exec.submit(lt(i))); for (Fu<String> fs : res) try {(fs.get()); } catch (Interruption e) {Stln(e); e.prirace(); } finally { execn(); } }", "n_tokens": 231, "n_pass": [317, 21, 19]}
{"time": "2021-02-21 22:40:22.788247", "score": "0.9958", "loss": "0.007", "code": "oid main(String[] args) { Exect<Future<String>> r= ne; for (int i = 0; i < 5; i++) results.add(exec.submit(lt(i))); for (Fu<String> fs : res) try {(fs.get()); } catch (Intption e) {Stln(e); e.prirace(); } finally { execn(); } }", "n_tokens": 227, "n_pass": [324, 22, 20]}
{"time": "2021-02-21 22:40:25.617103", "score": "0.9855", "loss": "0.0314", "code": "oid main(String[] args) { Exect<Future<String>> r= ne; for (int i = 0; i < 5; i++) results.add(exec.submit(lt(i))); for (Fu<String> fs : res) try {(fs.get()); } catch (Intn e) {Stln(e); e.prirace(); } finally { execn(); } }", "n_tokens": 223, "n_pass": [325, 23, 21]}
{"time": "2021-02-21 22:40:28.502772", "score": "0.9977", "loss": "0.0042", "code": "oid main(String[] args) { Exect<Future<String>> r= ne; for (int i = 0; i < 5; i++) results.add(exec.submit(lt(i))); for (Fu<String> fs : res) try {(fs.get()); } catch (Intn e) {Stln(e); erace(); } finally { execn(); } }", "n_tokens": 219, "n_pass": [330, 24, 22]}
{"time": "2021-02-21 22:40:31.334534", "score": "0.9981", "loss": "0.0036", "code": "oid main(String[] args) { Exect<Future<String>> r= ne; for (int i = 0; i < 5; i++) results.add(exec.submit(lt(i))); for (Fu<String> fs : res) try {(fs.get()); } catch (Intn e) {Stln(e); e(); } finally { execn(); } }", "n_tokens": 215, "n_pass": [331, 25, 23]}
{"time": "2021-02-21 22:40:34.187839", "score": "0.997", "loss": "0.0057", "code": "oid main(String[] args) { Exect<Future<String>> r= ne; for (int i = 0; i < 5; i++) results.add(exec.submit(lt(i))); for (Fu<String> fs : res) try {(fs.get()); } catch (Intn e) {Stln(e); e(); } finally { n(); } }", "n_tokens": 211, "n_pass": [336, 26, 24]}
{"time": "2021-02-21 22:40:37.049393", "score": "0.9929", "loss": "0.0146", "code": "oid main(String[] args) { Exect<Future<String>> r= ne; for (int i = 0; i < 5; i++) results.add(exec.submit(lt(i))); for (Fu<String> fs : res) try {(fs.get()); } catch (Intn e) {Stln(e); e(); } finally {  } }", "n_tokens": 207, "n_pass": [337, 27, 25]}
{"time": "2021-02-21 22:40:43.665543", "score": "0.9884", "loss": "0.0219", "code": "oid main(Str[] args) { Exect<Future<String>> r= ne; for (int i = 0; i < 5; i++) results.add(exec.submit(lt(i))); for (Fu<String> fs : res) try {(fs.get()); } catch (Intn e) {Stln(e); e(); } finally {  } }", "n_tokens": 204, "n_pass": [343, 29, 26]}
{"time": "2021-02-21 22:40:49.395274", "score": "0.9958", "loss": "0.0066", "code": "oid main(Str[] args) { Et<Future<String>> r= ne; for (int i = 0; i < 5; i++) results.add(exec.submit(lt(i))); for (Fu<String> fs : res) try {(fs.get()); } catch (Intn e) {Stln(e); e(); } finally {  } }", "n_tokens": 201, "n_pass": [348, 31, 27]}
{"time": "2021-02-21 22:40:52.760404", "score": "0.9656", "loss": "0.0765", "code": "oid main(Str[] args) { Et<Fre<String>> r= ne; for (int i = 0; i < 5; i++) results.add(exec.submit(lt(i))); for (Fu<String> fs : res) try {(fs.get()); } catch (Intn e) {Stln(e); e(); } finally {  } }", "n_tokens": 198, "n_pass": [350, 32, 28]}
{"time": "2021-02-21 22:40:56.113722", "score": "0.9911", "loss": "0.0186", "code": "oid main(Str[] args) { Et<Fre<ng>> r= ne; for (int i = 0; i < 5; i++) results.add(exec.submit(lt(i))); for (Fu<String> fs : res) try {(fs.get()); } catch (Intn e) {Stln(e); e(); } finally {  } }", "n_tokens": 194, "n_pass": [352, 33, 29]}
{"time": "2021-02-21 22:40:59.533664", "score": "0.9937", "loss": "0.0122", "code": "oid main(Str[] args) { Et<Fre<ng>>ne; for (int i = 0; i < 5; i++) results.add(exec.submit(lt(i))); for (Fu<String> fs : res) try {(fs.get()); } catch (Intn e) {Stln(e); e(); } finally {  } }", "n_tokens": 190, "n_pass": [354, 34, 30]}
{"time": "2021-02-21 22:41:02.441592", "score": "0.9472", "loss": "0.0883", "code": "oid main(Str[] args) { Et<Fre<ng>>ne; for (int i = 0; 5; i++) results.add(exec.submit(lt(i))); for (Fu<String> fs : res) try {(fs.get()); } catch (Intn e) {Stln(e); e(); } finally {  } }", "n_tokens": 186, "n_pass": [360, 35, 31]}
{"time": "2021-02-21 22:41:05.225640", "score": "0.9899", "loss": "0.0302", "code": "oid main(Str[] args) { Et<Fre<ng>>ne; for (int i = 0; 5; i++) lts.add(exec.submit(lt(i))); for (Fu<String> fs : res) try {(fs.get()); } catch (Intn e) {Stln(e); e(); } finally {  } }", "n_tokens": 182, "n_pass": [363, 36, 32]}
{"time": "2021-02-21 22:41:10.874296", "score": "0.9693", "loss": "0.0795", "code": "oid main(Str[] args) { Et<Fre<ng>>ne; for (int i = 0; 5; i++) lts.add(execmit(lt(i))); for (Fu<String> fs : res) try {(fs.get()); } catch (Intn e) {Stln(e); e(); } finally {  } }", "n_tokens": 178, "n_pass": [367, 38, 33]}
{"time": "2021-02-21 22:41:21.966455", "score": "0.9716", "loss": "0.1076", "code": "oid main(Str[] args) { Et<Fre<ng>>ne; for (int i = 0; 5; i++) lts.add(mit(lt(i))); for (Fu<String> fs : res) try {(fs.get()); } catch (Intn e) {Stln(e); e(); } finally {  } }", "n_tokens": 174, "n_pass": [414, 41, 34]}
{"time": "2021-02-21 22:41:34.794296", "score": "0.9664", "loss": "0.0831", "code": "oid main(Str[] args) { Et<Fre<ng>>ne; for (int i = 0; 5; i++) lts.add(t(lt(i))); for (Fu<String> fs : res) try {(fs.get()); } catch (Intn e) {Stln(e); e(); } finally {  } }", "n_tokens": 172, "n_pass": [553, 44, 35]}
{"time": "2021-02-21 22:41:37.722923", "score": "0.9677", "loss": "0.0757", "code": "oid main(Str[] args) { Et<Fre<ng>>ne; for (int i = 0; 5; i++) lts.add(t((i))); for (Fu<String> fs : res) try {(fs.get()); } catch (Intn e) {Stln(e); e(); } finally {  } }", "n_tokens": 170, "n_pass": [554, 45, 36]}
{"time": "2021-02-21 22:41:40.585503", "score": "0.9774", "loss": "0.0569", "code": "oid main(Str[] args) { Et<Fre<ng>>ne; for (int i = 0; 5; i++) lts.add(t((i))); for (Fu<Sing> fs : res) try {(fs.get()); } catch (Intn e) {Stln(e); e(); } finally {  } }", "n_tokens": 168, "n_pass": [563, 46, 37]}
{"time": "2021-02-21 22:41:43.411269", "score": "0.9676", "loss": "0.0759", "code": "oid main(Str[] args) { Et<Fre<ng>>ne; for (int i = 0; 5; i++) lts.add(t((i))); for (Fu<Sg> fs : res) try {(fs.get()); } catch (Intn e) {Stln(e); e(); } finally {  } }", "n_tokens": 166, "n_pass": [564, 47, 38]}
{"time": "2021-02-21 22:41:46.260514", "score": "0.9691", "loss": "0.072", "code": "oid main(Str[] args) { Et<Fre<ng>>ne; for (int i = 0; 5; i++) lts.add(t((i))); for (Fu<Sg>s : res) try {(fs.get()); } catch (Intn e) {Stln(e); e(); } finally {  } }", "n_tokens": 164, "n_pass": [566, 48, 39]}
{"time": "2021-02-21 22:41:49.229874", "score": "0.9673", "loss": "0.0769", "code": "oid main(Str[] args) { Et<Fre<ng>>ne; for (int i = 0; 5; i++) lts.add(t((i))); for (Fu<Sg>s : s) try {(fs.get()); } catch (Intn e) {Stln(e); e(); } finally {  } }", "n_tokens": 162, "n_pass": [569, 49, 40]}
{"time": "2021-02-21 22:41:52.002799", "score": "0.9089", "loss": "0.2759", "code": "oid main(Str[] args) { Et<Fre<ng>>ne; for (int i = 0; 5; i++) lts.add(t((i))); for (Fu<Sg>s : s) try {(fget()); } catch (Intn e) {Stln(e); e(); } finally {  } }", "n_tokens": 160, "n_pass": [575, 50, 41]}
{"time": "2021-02-21 22:41:54.856499", "score": "0.9685", "loss": "0.0732", "code": "oid main(Str[] args) { Et<Fre<ng>>ne; for (int i = 0; 5; i++) lts.add(t((i))); for (Fu<Sg>s : s) try {(ft()); } catch (Intn e) {Stln(e); e(); } finally {  } }", "n_tokens": 158, "n_pass": [576, 51, 42]}
{"time": "2021-02-21 22:41:57.641828", "score": "0.9778", "loss": "0.0371", "code": "oid main(Str[] args) { Et<Fre<ng>>ne; for (int i = 0; 5; i++) lts.add(t((i))); for (Fu<Sg>s : s) try {(ft()); } catch (In e) {Stln(e); e(); } finally {  } }", "n_tokens": 156, "n_pass": [585, 52, 43]}
{"time": "2021-02-21 22:42:00.548120", "score": "0.9768", "loss": "0.0405", "code": "oid main(Str[] args) { Et<Fre<ng>>ne; for (int i = 0; 5; i++) lts.add(t((i))); for (Fu<Sg>s : s) try {(ft()); } catch (In e) {ln(e); e(); } finally {  } }", "n_tokens": 154, "n_pass": [589, 53, 44]}
{"time": "2021-02-21 22:42:03.354500", "score": "0.9809", "loss": "0.0324", "code": "oid main(Str[] args) { Et<Fre<ng>>ne; for (int i = 0; 5; i++) lts.add(t((i))); for (Fu<Sg>s : s) try {(ft()); } catch (In e) {(e); e(); } finally {  } }", "n_tokens": 152, "n_pass": [590, 54, 45]}
{"time": "2021-02-21 22:42:06.203875", "score": "0.9805", "loss": "0.0332", "code": "oid main(Str[] args) { Et<Fre<ng>>ne; for (int i = 0; 5; i++) lts.add(t((i))); for (Fu<Sg>s : s) try {(ft()); } catch (In e) {(e); e; } finally {  } }", "n_tokens": 150, "n_pass": [594, 55, 46]}
{"time": "2021-02-21 22:42:09.028328", "score": "0.9582", "loss": "0.0706", "code": "id main(Str[] args) { Et<Fre<ng>>ne; for (int i = 0; 5; i++) lts.add(t((i))); for (Fu<Sg>s : s) try {(ft()); } catch (In e) {(e); e; } finally {  } }", "n_tokens": 149, "n_pass": [604, 56, 47]}
{"time": "2021-02-21 22:42:11.886520", "score": "0.9882", "loss": "0.0181", "code": "d main(Str[] args) { Et<Fre<ng>>ne; for (int i = 0; 5; i++) lts.add(t((i))); for (Fu<Sg>s : s) try {(ft()); } catch (In e) {(e); e; } finally {  } }", "n_tokens": 148, "n_pass": [605, 57, 48]}
{"time": "2021-02-21 22:42:17.352179", "score": "0.9843", "loss": "0.0298", "code": "d main(tr[] args) { Et<Fre<ng>>ne; for (int i = 0; 5; i++) lts.add(t((i))); for (Fu<Sg>s : s) try {(ft()); } catch (In e) {(e); e; } finally {  } }", "n_tokens": 147, "n_pass": [613, 58, 49]}
{"time": "2021-02-21 22:42:20.183565", "score": "0.9703", "loss": "0.0566", "code": "d main(tr args) { Et<Fre<ng>>ne; for (int i = 0; 5; i++) lts.add(t((i))); for (Fu<Sg>s : s) try {(ft()); } catch (In e) {(e); e; } finally {  } }", "n_tokens": 145, "n_pass": [615, 59, 50]}
{"time": "2021-02-21 22:42:25.875574", "score": "0.9703", "loss": "0.0566", "code": "d main(tr args) {t<Fre<ng>>ne; for (int i = 0; 5; i++) lts.add(t((i))); for (Fu<Sg>s : s) try {(ft()); } catch (In e) {(e); e; } finally {  } }", "n_tokens": 143, "n_pass": [620, 61, 51]}
{"time": "2021-02-21 22:42:29.157406", "score": "0.9703", "loss": "0.0566", "code": "d main(tr args) {t<e<ng>>ne; for (int i = 0; 5; i++) lts.add(t((i))); for (Fu<Sg>s : s) try {(ft()); } catch (In e) {(e); e; } finally {  } }", "n_tokens": 141, "n_pass": [622, 62, 52]}
{"time": "2021-02-21 22:42:32.816232", "score": "0.9363", "loss": "0.1346", "code": "d main(tr args) {t<e<ng>>ne; for (i i = 0; 5; i++) lts.add(t((i))); for (Fu<Sg>s : s) try {(ft()); } catch (In e) {(e); e; } finally {  } }", "n_tokens": 139, "n_pass": [631, 63, 53]}
{"time": "2021-02-21 22:42:35.633363", "score": "0.9701", "loss": "0.0591", "code": "d main(tr args) {t<e<ng>>ne; for (i = 0; 5; i++) lts.add(t((i))); for (Fu<Sg>s : s) try {(ft()); } catch (In e) {(e); e; } finally {  } }", "n_tokens": 137, "n_pass": [632, 64, 54]}
{"time": "2021-02-21 22:42:38.433292", "score": "0.9688", "loss": "0.0619", "code": "d main(tr args) {t<e<ng>>ne; for (i = 0; 5; i) lts.add(t((i))); for (Fu<Sg>s : s) try {(ft()); } catch (In e) {(e); e; } finally {  } }", "n_tokens": 135, "n_pass": [638, 65, 55]}
{"time": "2021-02-21 22:42:41.221764", "score": "0.9411", "loss": "0.0764", "code": "d main(tr args) {t<e<ng>>ne; for (i = 0; 5; i) s.add(t((i))); for (Fu<Sg>s : s) try {(ft()); } catch (In e) {(e); e; } finally {  } }", "n_tokens": 133, "n_pass": [640, 66, 56]}
{"time": "2021-02-21 22:42:47.042224", "score": "0.9695", "loss": "0.038", "code": "d main(tr args) {t<e<ng>>ne; for (i = 0; 5; i) s.d(t((i))); for (Fu<Sg>s : s) try {(ft()); } catch (In e) {(e); e; } finally {  } }", "n_tokens": 131, "n_pass": [642, 68, 57]}
{"time": "2021-02-21 22:42:49.956250", "score": "0.9728", "loss": "0.0338", "code": "d main(tr args) {t<e<ng>>ne; for (i = 0; 5; i) s.d(t((i))); for (Fu<Sg>s : s) try {(ft()); } catch (In e) {(e);; } finally {  } }", "n_tokens": 129, "n_pass": [674, 69, 58]}
{"time": "2021-02-21 22:42:52.788389", "score": "0.9728", "loss": "0.0338", "code": "d main(tr args) {t<e<ng>>ne; for (i = 0; 5; i) s.d(t((i))); for (Fu<Sg>s : s) try {(ft()); } catch (In e) {(e);} finally {  } }", "n_tokens": 127, "n_pass": [675, 70, 59]}
{"time": "2021-02-21 22:43:02.748977", "score": "0.9745", "loss": "0.0316", "code": "d main(tr args) {t<e<ng>>ne; for (i = 0; 5;) s.d(t((i))); for (Fu<Sg>s : s) try {(ft()); } catch (In e) {(e);} finally {  } }", "n_tokens": 125, "n_pass": [709, 72, 60]}
{"time": "2021-02-21 22:43:05.611702", "score": "0.8166", "loss": "0.24", "code": "d main(tr args) {t<e<ng>>ne; for (i = 0; 5;) d(t((i))); for (Fu<Sg>s : s) try {(ft()); } catch (In e) {(e);} finally {  } }", "n_tokens": 123, "n_pass": [711, 73, 61]}
{"time": "2021-02-21 22:43:26.815652", "score": "0.8166", "loss": "0.24", "code": "d main(tr args) {t<e<ng>>ne; for (i = 0; 5;) d(t((i)));for (Fu<Sg>s : s) try {(ft()); } catch (In e) {(e);} finally {  } }", "n_tokens": 122, "n_pass": [899, 75, 62]}
{"time": "2021-02-21 22:43:29.589076", "score": "0.8166", "loss": "0.24", "code": "d main(tr args) {t<e<ng>>ne; for (i = 0; 5;) d(t((i)));for(Fu<Sg>s : s) try {(ft()); } catch (In e) {(e);} finally {  } }", "n_tokens": 121, "n_pass": [902, 76, 63]}
{"time": "2021-02-21 22:43:32.523581", "score": "0.8166", "loss": "0.24", "code": "d main(tr args) {t<e<ng>>ne; for (i = 0; 5;) d(t((i)));for(u<Sg>s : s) try {(ft()); } catch (In e) {(e);} finally {  } }", "n_tokens": 120, "n_pass": [904, 77, 64]}
{"time": "2021-02-21 22:43:35.399758", "score": "0.8004", "loss": "0.2631", "code": "d main(tr args) {t<e<ng>>ne; for (i = 0; 5;) d(t((i)));for(u<g>s : s) try {(ft()); } catch (In e) {(e);} finally {  } }", "n_tokens": 119, "n_pass": [907, 78, 65]}
{"time": "2021-02-21 22:43:38.286688", "score": "0.8004", "loss": "0.2631", "code": "d main(tr args) {t<e<ng>>ne; for (i = 0; 5;) d(t((i)));for(u<g>s: s) try {(ft()); } catch (In e) {(e);} finally {  } }", "n_tokens": 118, "n_pass": [911, 79, 66]}
{"time": "2021-02-21 22:43:41.089583", "score": "0.8004", "loss": "0.2631", "code": "d main(tr args) {t<e<ng>>ne; for (i = 0; 5;) d(t((i)));for(u<g>s:s) try {(ft()); } catch (In e) {(e);} finally {  } }", "n_tokens": 117, "n_pass": [913, 80, 67]}
{"time": "2021-02-21 22:43:43.897899", "score": "0.8004", "loss": "0.2631", "code": "d main(tr args) {t<e<ng>>ne; for (i = 0; 5;) d(t((i)));for(u<g>s:s)try {(ft()); } catch (In e) {(e);} finally {  } }", "n_tokens": 116, "n_pass": [916, 81, 68]}
{"time": "2021-02-21 22:43:46.706885", "score": "0.8004", "loss": "0.2631", "code": "d main(tr args) {t<e<ng>>ne; for (i = 0; 5;) d(t((i)));for(u<g>s:s)try{(ft()); } catch (In e) {(e);} finally {  } }", "n_tokens": 115, "n_pass": [920, 82, 69]}
{"time": "2021-02-21 22:43:49.488619", "score": "0.7987", "loss": "0.2658", "code": "d main(tr args) {t<e<ng>>ne; for (i = 0; 5;) d(t((i)));for(u<g>s:s)try{(t()); } catch (In e) {(e);} finally {  } }", "n_tokens": 114, "n_pass": [923, 83, 70]}
{"time": "2021-02-21 22:43:52.287214", "score": "0.7987", "loss": "0.2658", "code": "d main(tr args) {t<e<ng>>ne; for (i = 0; 5;) d(t((i)));for(u<g>s:s)try{(t());} catch (In e) {(e);} finally {  } }", "n_tokens": 113, "n_pass": [929, 84, 71]}
{"time": "2021-02-21 22:43:55.122184", "score": "0.7987", "loss": "0.2658", "code": "d main(tr args) {t<e<ng>>ne; for (i = 0; 5;) d(t((i)));for(u<g>s:s)try{(t());}catch (In e) {(e);} finally {  } }", "n_tokens": 112, "n_pass": [931, 85, 72]}
{"time": "2021-02-21 22:43:57.917067", "score": "0.7987", "loss": "0.2658", "code": "d main(tr args) {t<e<ng>>ne; for (i = 0; 5;) d(t((i)));for(u<g>s:s)try{(t());}catch(In e) {(e);} finally {  } }", "n_tokens": 111, "n_pass": [937, 86, 73]}
{"time": "2021-02-21 22:44:00.713309", "score": "0.7962", "loss": "0.2676", "code": "d main(tr args) {t<e<ng>>ne; for (i = 0; 5;) d(t((i)));for(u<g>s:s)try{(t());}catch(n e) {(e);} finally {  } }", "n_tokens": 110, "n_pass": [939, 87, 74]}
{"time": "2021-02-21 22:44:03.621121", "score": "0.7962", "loss": "0.2676", "code": "d main(tr args) {t<e<ng>>ne; for (i = 0; 5;) d(t((i)));for(u<g>s:s)try{(t());}catch(n e){(e);} finally {  } }", "n_tokens": 109, "n_pass": [944, 88, 75]}
{"time": "2021-02-21 22:44:06.463856", "score": "0.7962", "loss": "0.2676", "code": "d main(tr args) {t<e<ng>>ne; for (i = 0; 5;) d(t((i)));for(u<g>s:s)try{(t());}catch(n e){(e);}finally {  } }", "n_tokens": 108, "n_pass": [951, 89, 76]}
{"time": "2021-02-21 22:44:09.282323", "score": "0.7962", "loss": "0.2676", "code": "d main(tr args) {t<e<ng>>ne; for (i = 0; 5;) d(t((i)));for(u<g>s:s)try{(t());}catch(n e){(e);}finally{  } }", "n_tokens": 107, "n_pass": [959, 90, 77]}
{"time": "2021-02-21 22:44:12.150949", "score": "0.7962", "loss": "0.2676", "code": "d main(tr args) {t<e<ng>>ne; for (i = 0; 5;) d(t((i)));for(u<g>s:s)try{(t());}catch(n e){(e);}finally{ } }", "n_tokens": 106, "n_pass": [961, 91, 78]}
{"time": "2021-02-21 22:44:15.023257", "score": "0.7962", "loss": "0.2676", "code": "d main(tr args) {t<e<ng>>ne; for (i = 0; 5;) d(t((i)));for(u<g>s:s)try{(t());}catch(n e){(e);}finally{} }", "n_tokens": 105, "n_pass": [962, 92, 79]}
{"time": "2021-02-21 22:44:17.793476", "score": "0.7962", "loss": "0.2676", "code": "d main(tr args) {t<e<ng>>ne; for (i = 0; 5;) d(t((i)));for(u<g>s:s)try{(t());}catch(n e){(e);}finally{}}", "n_tokens": 104, "n_pass": [964, 93, 80]}
{"time": "2021-02-21 22:44:23.048624", "score": "0.6103", "loss": "0.5178", "code": "d main(r args) {t<e<ng>>ne; for (i = 0; 5;) d(t((i)));for(u<g>s:s)try{(t());}catch(n e){(e);}finally{}}", "n_tokens": 103, "n_pass": [973, 94, 81]}
{"time": "2021-02-21 22:44:37.382937", "score": "0.6103", "loss": "0.5178", "code": "d main(r args){t<e<ng>>ne; for (i = 0; 5;) d(t((i)));for(u<g>s:s)try{(t());}catch(n e){(e);}finally{}}", "n_tokens": 102, "n_pass": [981, 99, 82]}
{"time": "2021-02-21 22:44:41.577622", "score": "0.4524", "loss": "0.8096", "code": "d main(r args){t<e<g>>ne; for (i = 0; 5;) d(t((i)));for(u<g>s:s)try{(t());}catch(n e){(e);}finally{}}", "n_tokens": 101, "n_pass": [987, 100, 83]}
{"time": "2021-02-21 22:44:51.084783", "score": "0.4524", "loss": "0.8096", "code": "d main(r args){t<e<g>>ne;for (i = 0; 5;) d(t((i)));for(u<g>s:s)try{(t());}catch(n e){(e);}finally{}}", "n_tokens": 100, "n_pass": [994, 103, 84]}
{"time": "2021-02-21 22:44:53.836822", "score": "0.4524", "loss": "0.8096", "code": "d main(r args){t<e<g>>ne;for(i = 0; 5;) d(t((i)));for(u<g>s:s)try{(t());}catch(n e){(e);}finally{}}", "n_tokens": 99, "n_pass": [998, 104, 85]}
{"time": "2021-02-21 22:44:56.646696", "score": "0.4524", "loss": "0.8096", "code": "d main(r args){t<e<g>>ne;for(i= 0; 5;) d(t((i)));for(u<g>s:s)try{(t());}catch(n e){(e);}finally{}}", "n_tokens": 98, "n_pass": [1001, 105, 86]}
{"time": "2021-02-21 22:44:59.451813", "score": "0.4524", "loss": "0.8096", "code": "d main(r args){t<e<g>>ne;for(i=0; 5;) d(t((i)));for(u<g>s:s)try{(t());}catch(n e){(e);}finally{}}", "n_tokens": 97, "n_pass": [1003, 106, 87]}
{"time": "2021-02-21 22:45:02.356020", "score": "0.4524", "loss": "0.8096", "code": "d main(r args){t<e<g>>ne;for(i=0;5;) d(t((i)));for(u<g>s:s)try{(t());}catch(n e){(e);}finally{}}", "n_tokens": 96, "n_pass": [1006, 107, 88]}
{"time": "2021-02-21 22:45:07.974587", "score": "0.4524", "loss": "0.8096", "code": "d main(r args){t<e<g>>ne;for(i=0;5;)d(t((i)));for(u<g>s:s)try{(t());}catch(n e){(e);}finally{}}", "n_tokens": 95, "n_pass": [1010, 109, 89]}
{"time": "2021-02-21 22:45:10.714476", "score": "0.7461", "loss": "0.3021", "code": "d main(r args){t<e<g>>ne;for(i=0;5;)(t((i)));for(u<g>s:s)try{(t());}catch(n e){(e);}finally{}}", "n_tokens": 94, "n_pass": [1011, 110, 90]}
{"time": "2021-02-21 22:45:13.472119", "score": "0.7637", "loss": "0.2782", "code": "d main(r args){t<e<g>>ne;for(i=0;5;)(((i)));for(u<g>s:s)try{(t());}catch(n e){(e);}finally{}}", "n_tokens": 93, "n_pass": [1013, 111, 91]}
{"time": "2021-02-21 22:45:40.990231", "score": "0.646", "loss": "0.4511", "code": "d main(r args){t<e<g>>ne;for(i=0;;)(((i)));for(u<g>s:s)try{(t());}catch(n e){(e);}finally{}}", "n_tokens": 92, "n_pass": [1103, 119, 92]}
{"time": "2021-02-21 22:46:05.220671", "score": "0.5207", "loss": "0.667", "code": "d main(r args){t<e<g>>ne;for(i0;;)(((i)));for(u<g>s:s)try{(t());}catch(n e){(e);}finally{}}", "n_tokens": 91, "n_pass": [1193, 126, 93]}
{"time": "2021-02-21 22:46:07.978903", "score": "0.5207", "loss": "0.667", "code": "d main(r args){t<e<g>>ne;for(i;;)(((i)));for(u<g>s:s)try{(t());}catch(n e){(e);}finally{}}", "n_tokens": 90, "n_pass": [1194, 127, 94]}
{"time": "2021-02-21 22:46:32.028812", "score": "0.5542", "loss": "0.6039", "code": "d main(r args){t<e<g>>ne;for(;;)(((i)));for(u<g>s:s)try{(t());}catch(n e){(e);}finally{}}", "n_tokens": 89, "n_pass": [1284, 134, 95]}

Minimal simplified code:
d main(r args){t<e<g>>ne;for(;;)(((i)));for(u<g>s:s)try{(t());}catch(n e){(e);}finally{}}

