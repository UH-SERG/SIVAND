
path = /scratch/rabin/data/code2vec/transforms/Methods/java-large/test/googlesamples__androidtv-Leanback/app/src/main/java/com/example/android/tvleanback/model/Video_writeToParcel.java
method_name = writeToParcel
method_body = @Override public void writeToParcel(Parcel dest, int flags) { dest.writeLong(id); dest.writeString(category); dest.writeString(title); dest.writeString(description); dest.writeString(bgImageUrl); dest.writeString(cardImageUrl); dest.writeString(videoUrl); dest.writeString(studio); }
predict, score, loss = writeToParcel, 0.9999024868011475, 0.00012158608296886086

Trace of simplified code(s):
{"time": "2021-05-26 07:55:55.426508", "score": "0.9999", "loss": "0.0001", "code": "@Override public void writeToParcel(Parcel dest, int flags) { dest.writeLong(id); dest.writeString(category); dest.writeString(title); dest.writeString(description); dest.writeString(bgImageUrl); dest.writeString(cardImageUrl); dest.writeString(videoUrl); dest.writeString(studio); }", "n_tokens": 283, "n_pass": [1, 1, 1]}
{"time": "2021-05-26 07:55:58.095635", "score": "0.9999", "loss": "0.0001", "code": "@Override public void writeToParcel(Parcel dest, int flags) { dest.wririteString(description); dest.writeString(bgImageUrl); dest.writeString(cardImageUrl); dest.writeString(videoUrl); dest.writeString(studio); }", "n_tokens": 212, "n_pass": [9, 2, 2]}
{"time": "2021-05-26 07:56:00.790206", "score": "0.9996", "loss": "0.0009", "code": "@Override public void writeToParcel(Parcel dest, int flags) { dest.wri(cardImageUrl); dest.writeString(videoUrl); dest.writeString(studio); }", "n_tokens": 141, "n_pass": [10, 3, 3]}
{"time": "2021-05-26 07:56:03.500932", "score": "0.9997", "loss": "0.0005", "code": "@Override public void writeToParcel(Parcel dest, int flags) { dest.wrest.writeString(videoUrl); dest.writeString(studio); }", "n_tokens": 123, "n_pass": [27, 4, 4]}
{"time": "2021-05-26 07:56:06.131893", "score": "0.9996", "loss": "0.0005", "code": "void writeToParcel(Parcel dest, int flags) { dest.wrest.writeString(videoUrl); dest.writeString(studio); }", "n_tokens": 106, "n_pass": [31, 5, 5]}
{"time": "2021-05-26 07:56:09.990569", "score": "0.5236", "loss": "1.1269", "code": "void writeToParcel(Parcelt flags) { dest.wrest.writeString(videoUrl); dest.writeString(studio); }", "n_tokens": 97, "n_pass": [53, 6, 6]}
{"time": "2021-05-26 07:56:15.359493", "score": "0.4318", "loss": "2.7348", "code": "void writeToParcel(Parcelt flags) { dest.wrest.writeString(videoUrl); eString(studio); }", "n_tokens": 88, "n_pass": [59, 8, 7]}
{"time": "2021-05-26 07:56:21.444956", "score": "0.7197", "loss": "1.1927", "code": "void writeToParcel(Parcelt flags) { dest.wrest.writeString(videoUrl); eString(o); }", "n_tokens": 83, "n_pass": [92, 10, 8]}
{"time": "2021-05-26 07:56:25.771001", "score": "0.3719", "loss": "1.881", "code": "void writeToParcel(Plt flags) { dest.wrest.writeString(videoUrl); eString(o); }", "n_tokens": 79, "n_pass": [99, 11, 9]}
{"time": "2021-05-26 07:56:43.391096", "score": "0.5638", "loss": "1.2428", "code": "void writeToParcel(P flags) { dest.wrest.writeString(videoUrl); eString(o); }", "n_tokens": 77, "n_pass": [154, 17, 10]}
{"time": "2021-05-26 07:56:51.337877", "score": "0.3265", "loss": "1.9568", "code": "void writeToParcel(P flags) { st.wrest.writeString(videoUrl); eString(o); }", "n_tokens": 75, "n_pass": [159, 20, 11]}
{"time": "2021-05-26 07:56:54.032501", "score": "0.4058", "loss": "1.7257", "code": "void writeToParcel(P flags) { strest.writeString(videoUrl); eString(o); }", "n_tokens": 73, "n_pass": [161, 21, 12]}
{"time": "2021-05-26 07:56:56.648673", "score": "0.2207", "loss": "2.4693", "code": "void writeToParcel(P flags) { stst.writeString(videoUrl); eString(o); }", "n_tokens": 71, "n_pass": [162, 22, 13]}
{"time": "2021-05-26 07:56:59.285437", "score": "0.1583", "loss": "2.5574", "code": "void writeToParcel(P flags) { st.writeString(videoUrl); eString(o); }", "n_tokens": 69, "n_pass": [163, 23, 14]}
{"time": "2021-05-26 07:57:23.185199", "score": "0.7309", "loss": "0.8273", "code": "void writeToParcel(P flags) { st.writeString(videoUrl); eing(o); }", "n_tokens": 66, "n_pass": [175, 32, 15]}
{"time": "2021-05-26 07:57:25.851667", "score": "0.5343", "loss": "1.2335", "code": "void writeToParcel(P flags) { st.writeString(videoUrl); e(o); }", "n_tokens": 63, "n_pass": [176, 33, 16]}
{"time": "2021-05-26 07:57:28.563806", "score": "0.6493", "loss": "1.0163", "code": "void writeToParcel(P flags) { st.writeString(videoUrl); e; }", "n_tokens": 60, "n_pass": [177, 34, 17]}
{"time": "2021-05-26 07:57:31.330512", "score": "0.3548", "loss": "2.2692", "code": "id writeToParcel(P flags) { st.writeString(videoUrl); e; }", "n_tokens": 58, "n_pass": [179, 35, 18]}
{"time": "2021-05-26 07:57:58.414065", "score": "0.4097", "loss": "1.7119", "code": "id writeToParcel(P flags) { st.writeString(veoUrl); e; }", "n_tokens": 56, "n_pass": [202, 44, 19]}
{"time": "2021-05-26 07:58:01.090625", "score": "0.4097", "loss": "1.7119", "code": "id writeToParcel(P flags) { st.writeString(vrl); e; }", "n_tokens": 53, "n_pass": [203, 45, 20]}
{"time": "2021-05-26 07:58:03.722884", "score": "0.4235", "loss": "1.6793", "code": "id writeToParcel(P flags) { st.writeString(vrl); }", "n_tokens": 50, "n_pass": [205, 46, 21]}
{"time": "2021-05-26 07:58:32.363502", "score": "0.5472", "loss": "0.7339", "code": "d writeToParcel(P flags) { st.writeString(vrl); }", "n_tokens": 49, "n_pass": [280, 55, 22]}
{"time": "2021-05-26 07:58:54.004090", "score": "0.5472", "loss": "0.7339", "code": "d writeToParcel(P flags){ st.writeString(vrl); }", "n_tokens": 48, "n_pass": [304, 61, 23]}
{"time": "2021-05-26 07:58:56.633104", "score": "0.5472", "loss": "0.7339", "code": "d writeToParcel(P flags){st.writeString(vrl); }", "n_tokens": 47, "n_pass": [306, 62, 24]}
{"time": "2021-05-26 07:58:59.453417", "score": "0.8578", "loss": "0.2198", "code": "d writeToParcel(P flags){t.writeString(vrl); }", "n_tokens": 46, "n_pass": [307, 63, 25]}
{"time": "2021-05-26 07:59:34.065794", "score": "0.7754", "loss": "0.424", "code": "d writeToParcel(P flags){t.writeString(rl); }", "n_tokens": 45, "n_pass": [322, 76, 26]}
{"time": "2021-05-26 07:59:36.744390", "score": "0.3829", "loss": "1.0845", "code": "d writeToParcel(P flags){t.writeString(l); }", "n_tokens": 44, "n_pass": [323, 77, 27]}
{"time": "2021-05-26 08:00:33.701782", "score": "0.3829", "loss": "1.0845", "code": "d writeToParcel(P flags){t.writeString(l);}", "n_tokens": 43, "n_pass": [372, 96, 28]}

Minimal simplified code:
d writeToParcel(P flags){t.writeString(l);}

