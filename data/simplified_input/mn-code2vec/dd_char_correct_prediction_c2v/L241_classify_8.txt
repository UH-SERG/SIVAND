
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/CogComp__cogcomp-nlp/commasrl/src/main/java/edu/illinois/cs/cogcomp/comma/lbj/ParseTreeFeature_classify.java
method_name = classify
method_body = public FeatureVector[] classify(Object[] examples) { if (!(examples instanceof Comma[])) { String type = examples == null ? "null" : examples.getClass().getName(); System.err.println("Classifier 'ParseTreeFeature(Comma)' defined on line 75 of CommaClassifier.lbj received '" + type + "' as input."); new Exception().printStackTrace(); System.exit(1); } return super.classify(examples); }
predict, score, loss = classify, 0.9046224355697632, 0.13036799430847168

Trace of simplified code(s):
{"time": "2021-02-22 23:01:15.831786", "score": "0.9046", "loss": "0.1304", "code": "public FeatureVector[] classify(Object[] examples) { if (!(examples instanceof Comma[])) { String type = examples == null ? \"null\" : examples.getClass().getName(); System.err.println(\"Classifier 'ParseTreeFeature(Comma)' defined on line 75 of CommaClassifier.lbj received '\" + type + \"' as input.\"); new Exception().printStackTrace(); System.exit(1); } return super.classify(examples); }", "n_tokens": 387, "n_pass": [1, 1, 1]}
{"time": "2021-02-22 23:01:18.454748", "score": "0.8978", "loss": "0.14", "code": "public FeatureVector[] classify(Object[] examples) { if (!(examples instanceof Comma[])) { String type = examples == null ? \"null\" : examples.getClass().getName(); System.err.println(\"Classifieinput.\"); new Exception().printStackTrace(); System.exit(1); } return super.classify(examples); }", "n_tokens": 290, "n_pass": [10, 2, 2]}
{"time": "2021-02-22 23:01:21.064709", "score": "0.7825", "loss": "0.3081", "code": "public FeatureVector[] classify(Object[] examples) { if (!(examples instanceof Comma[])) { StrintClass().getName(); System.err.println(\"Classifieinput.\"); new Exception().printStackTrace(); System.exit(1); } return super.classify(examples); }", "n_tokens": 242, "n_pass": [23, 3, 3]}
{"time": "2021-02-22 23:01:23.719887", "score": "0.7893", "loss": "0.2914", "code": "public FeatureVector[] classify(Object[] examples) { if (!(examples instanceof Comma[])) { Strinem.err.println(\"Classifieinput.\"); new Exception().printStackTrace(); System.exit(1); } return super.classify(examples); }", "n_tokens": 218, "n_pass": [39, 4, 4]}
{"time": "2021-02-22 23:01:26.346926", "score": "0.8312", "loss": "0.2244", "code": "public FeatureVector[] classify(Object[] examples) { if (!(examples instanceof Comma[])) { Strinem.err.println(\"Classifieinput.\"); new Exceptionstem.exit(1); } return super.classify(examples); }", "n_tokens": 194, "n_pass": [41, 5, 5]}
{"time": "2021-02-22 23:01:31.925945", "score": "0.8608", "loss": "0.1826", "code": "reVector[] classify(Object[] examples) { if (!(examples instanceof Comma[])) { Strinem.err.println(\"Classifieinput.\"); new Exceptionstem.exit(1); } return super.classify(examples); }", "n_tokens": 182, "n_pass": [70, 7, 6]}
{"time": "2021-02-22 23:01:34.546712", "score": "0.9001", "loss": "0.1275", "code": "reVector[] classify(Object[] examples) { if (!(examples instanceof Comma[])) { Strinln(\"Classifieinput.\"); new Exceptionstem.exit(1); } return super.classify(examples); }", "n_tokens": 170, "n_pass": [77, 8, 7]}
{"time": "2021-02-22 23:01:37.131784", "score": "0.8579", "loss": "0.1838", "code": "reVector[] classify(Object[] examples) { if (!(examples instanceof Comma[])) { Strinln(\"Classifieinput.\"); nstem.exit(1); } return super.classify(examples); }", "n_tokens": 158, "n_pass": [80, 9, 8]}
{"time": "2021-02-22 23:01:39.706115", "score": "0.9018", "loss": "0.1253", "code": "reVector[] classify(Object[] examples) { if (!(examples instanceof Comma[])) { Strinln(\"Classifieinput.\"); n; } return super.classify(examples); }", "n_tokens": 146, "n_pass": [81, 10, 9]}
{"time": "2021-02-22 23:01:45.303503", "score": "0.7165", "loss": "0.3942", "code": "reVector[] classify(Object[] examples) { if (!(examples instanceof Comma[])) { Strinln(\"Classifieinput.\"); n; } reuper.classify(examples); }", "n_tokens": 140, "n_pass": [119, 12, 10]}
{"time": "2021-02-22 23:01:53.124968", "score": "0.704", "loss": "0.4217", "code": "or[] classify(Object[] examples) { if (!(examples instanceof Comma[])) { Strinln(\"Classifieinput.\"); n; } reuper.classify(examples); }", "n_tokens": 134, "n_pass": [124, 15, 11]}
{"time": "2021-02-22 23:01:56.505664", "score": "0.8452", "loss": "0.2525", "code": "or[] classify(Object[] es) { if (!(examples instanceof Comma[])) { Strinln(\"Classifieinput.\"); n; } reuper.classify(examples); }", "n_tokens": 128, "n_pass": [129, 16, 12]}
{"time": "2021-02-22 23:01:59.089179", "score": "0.7902", "loss": "0.3753", "code": "or[] classify(Object[] es) { if (!(es instanceof Comma[])) { Strinln(\"Classifieinput.\"); n; } reuper.classify(examples); }", "n_tokens": 122, "n_pass": [132, 17, 13]}
{"time": "2021-02-22 23:02:01.670528", "score": "0.8049", "loss": "0.3341", "code": "or[] classify(Object[] es) { if (!(es instanceof Comma[])) {ln(\"Classifieinput.\"); n; } reuper.classify(examples); }", "n_tokens": 116, "n_pass": [137, 18, 14]}
{"time": "2021-02-22 23:02:04.278305", "score": "0.8049", "loss": "0.3341", "code": "or[] classify(Object[] es) { if (!(es instanceof Comma[])) {ln(\"Cleinput.\"); n; } reuper.classify(examples); }", "n_tokens": 110, "n_pass": [139, 19, 15]}
{"time": "2021-02-22 23:02:06.884592", "score": "0.8259", "loss": "0.3008", "code": "or[] classify(Object[] es) { if (!(es instanceof Comma[])) {ln(\"Cl.\"); n; } reuper.classify(examples); }", "n_tokens": 104, "n_pass": [140, 20, 16]}
{"time": "2021-02-22 23:02:15.444085", "score": "0.8162", "loss": "0.3163", "code": "or[] classify(Object[] es) { if (!(es instanceof Comma[])) {ln(\"Cl.\"); } reuper.classify(examples); }", "n_tokens": 101, "n_pass": [193, 23, 17]}
{"time": "2021-02-22 23:02:18.089151", "score": "0.8162", "loss": "0.3163", "code": "or[] classify(Object[] es) { if (!(es instanceof Comma[])) {ln(\"Cl.\"); }uper.classify(examples); }", "n_tokens": 98, "n_pass": [195, 24, 18]}
{"time": "2021-02-22 23:02:20.687139", "score": "0.8205", "loss": "0.3068", "code": "or[] classify(Object[] es) { if (!(es instanceof Comma[])) {ln(\"Cl.\"); }r.classify(examples); }", "n_tokens": 95, "n_pass": [196, 25, 19]}
{"time": "2021-02-22 23:02:31.052557", "score": "0.7206", "loss": "0.4788", "code": "or[] classify(Object[] es) { if (!(es instanceof Comma[])) {ln(\"Cl.\"); }r.classify(eples); }", "n_tokens": 92, "n_pass": [201, 29, 20]}
{"time": "2021-02-22 23:02:33.658304", "score": "0.7136", "loss": "0.4843", "code": "or[] classify(Object[] es) { if (!(es instanceof Comma[])) {ln(\"Cl.\"); }r.classify(e); }", "n_tokens": 88, "n_pass": [202, 30, 21]}
{"time": "2021-02-22 23:02:37.006907", "score": "0.3279", "loss": "1.6595", "code": "or[] classify(Oct[] es) { if (!(es instanceof Comma[])) {ln(\"Cl.\"); }r.classify(e); }", "n_tokens": 85, "n_pass": [209, 31, 22]}
{"time": "2021-02-22 23:02:39.618156", "score": "0.3286", "loss": "1.6556", "code": "or[] classify(Oct[] es) { if (!(es instanceof Co[])) {ln(\"Cl.\"); }r.classify(e); }", "n_tokens": 82, "n_pass": [221, 32, 23]}
{"time": "2021-02-22 23:02:52.139299", "score": "0.4362", "loss": "1.3554", "code": "or[] classify(Oct[] es) { if (!(es instanceof Co)) {ln(\"Cl.\"); }r.classify(e); }", "n_tokens": 80, "n_pass": [308, 36, 24]}
{"time": "2021-02-22 23:02:54.711848", "score": "0.3962", "loss": "1.4821", "code": "or[] classify(Oct[] es) { if (!(es instanceof Co)) {(\"Cl.\"); }r.classify(e); }", "n_tokens": 78, "n_pass": [311, 37, 25]}
{"time": "2021-02-22 23:02:57.309088", "score": "0.3983", "loss": "1.4791", "code": "or[] classify(Oct[] es) { if (!(es instanceof Co)) {(\".\"); }r.classify(e); }", "n_tokens": 76, "n_pass": [313, 38, 26]}
{"time": "2021-02-22 23:03:12.832228", "score": "0.5812", "loss": "0.8975", "code": "r[] classify(Oct[] es) { if (!(es instanceof Co)) {(\".\"); }r.classify(e); }", "n_tokens": 75, "n_pass": [325, 44, 27]}
{"time": "2021-02-22 23:03:15.440203", "score": "0.5812", "loss": "0.8975", "code": "r[]classify(Oct[] es) { if (!(es instanceof Co)) {(\".\"); }r.classify(e); }", "n_tokens": 74, "n_pass": [329, 45, 28]}
{"time": "2021-02-22 23:03:21.085461", "score": "0.9194", "loss": "0.1289", "code": "r[]classify(ct[] es) { if (!(es instanceof Co)) {(\".\"); }r.classify(e); }", "n_tokens": 73, "n_pass": [339, 46, 29]}
{"time": "2021-02-22 23:03:23.688877", "score": "0.8527", "loss": "0.2544", "code": "r[]classify(t[] es) { if (!(es instanceof Co)) {(\".\"); }r.classify(e); }", "n_tokens": 72, "n_pass": [340, 47, 30]}
{"time": "2021-02-22 23:03:26.303247", "score": "0.8527", "loss": "0.2544", "code": "r[]classify(t[]es) { if (!(es instanceof Co)) {(\".\"); }r.classify(e); }", "n_tokens": 71, "n_pass": [344, 48, 31]}
{"time": "2021-02-22 23:03:28.905212", "score": "0.9201", "loss": "0.1291", "code": "r[]classify(t[]s) { if (!(es instanceof Co)) {(\".\"); }r.classify(e); }", "n_tokens": 70, "n_pass": [345, 49, 32]}
{"time": "2021-02-22 23:03:31.509143", "score": "0.9201", "loss": "0.1291", "code": "r[]classify(t[]s){ if (!(es instanceof Co)) {(\".\"); }r.classify(e); }", "n_tokens": 69, "n_pass": [348, 50, 33]}
{"time": "2021-02-22 23:03:34.113440", "score": "0.9201", "loss": "0.1291", "code": "r[]classify(t[]s){if (!(es instanceof Co)) {(\".\"); }r.classify(e); }", "n_tokens": 68, "n_pass": [350, 51, 34]}
{"time": "2021-02-22 23:03:36.678364", "score": "0.7827", "loss": "0.3282", "code": "r[]classify(t[]s){if (!(es instanceof Co)) {(\".\"); }classify(e); }", "n_tokens": 66, "n_pass": [368, 52, 35]}
{"time": "2021-02-22 23:04:08.310226", "score": "0.8153", "loss": "0.2788", "code": "r[]classify(t[]s){if (!(es instanceof Co)) {(\".\"); }classify(); }", "n_tokens": 65, "n_pass": [465, 62, 36]}
{"time": "2021-02-22 23:04:10.901726", "score": "0.8153", "loss": "0.2788", "code": "r[]classify(t[]s){if (!(es instanceof Co)) {(\".\"); }classify();}", "n_tokens": 64, "n_pass": [468, 63, 37]}
{"time": "2021-02-22 23:04:16.554760", "score": "0.8153", "loss": "0.2788", "code": "r[]classify(t[]s){if(!(es instanceof Co)) {(\".\"); }classify();}", "n_tokens": 63, "n_pass": [490, 64, 38]}
{"time": "2021-02-22 23:04:19.153051", "score": "0.9057", "loss": "0.1596", "code": "r[]classify(t[]s){if((es instanceof Co)) {(\".\"); }classify();}", "n_tokens": 62, "n_pass": [492, 65, 39]}
{"time": "2021-02-22 23:04:21.728475", "score": "0.9098", "loss": "0.1434", "code": "r[]classify(t[]s){if((s instanceof Co)) {(\".\"); }classify();}", "n_tokens": 61, "n_pass": [494, 66, 40]}
{"time": "2021-02-22 23:04:24.334681", "score": "0.8918", "loss": "0.1639", "code": "r[]classify(t[]s){if((s instanceof o)) {(\".\"); }classify();}", "n_tokens": 60, "n_pass": [508, 67, 41]}
{"time": "2021-02-22 23:04:26.933646", "score": "0.8918", "loss": "0.1639", "code": "r[]classify(t[]s){if((s instanceof o)){(\".\"); }classify();}", "n_tokens": 59, "n_pass": [512, 68, 42]}
{"time": "2021-02-22 23:04:29.507907", "score": "0.8833", "loss": "0.1741", "code": "r[]classify(t[]s){if((s instanceof o)){(\"\"); }classify();}", "n_tokens": 58, "n_pass": [516, 69, 43]}
{"time": "2021-02-22 23:04:32.098975", "score": "0.8833", "loss": "0.1741", "code": "r[]classify(t[]s){if((s instanceof o)){(\"\");}classify();}", "n_tokens": 57, "n_pass": [520, 70, 44]}

Minimal simplified code:
r[]classify(t[]s){if((s instanceof o)){("");}classify();}

