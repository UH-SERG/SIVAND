
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/codefollower__Tomcat-Research/java/org/apache/catalina/util/ParameterMap_clear.java
method_name = clear
method_body = @Override public void clear() { if (locked) throw new IllegalStateException(sm.getString("parameterMap.locked")); super.clear(); }
predict, score, loss = clear, 0.9901872277259827, 0.012501212768256664

Trace of simplified code(s):
{"time": "2021-02-25 04:03:32.197144", "score": "0.9902", "loss": "0.0125", "code": "@Override public void clear() { if (locked) throw new IllegalStateException(sm.getString(\"parameterMap.locked\")); super.clear(); }", "n_tokens": 130, "n_pass": [1, 1, 1]}
{"time": "2021-02-25 04:03:34.872788", "score": "0.9773", "loss": "0.0265", "code": "@Override public void clear() { teException(sm.getString(\"parameterMap.locked\")); super.clear(); }", "n_tokens": 98, "n_pass": [9, 2, 2]}
{"time": "2021-02-25 04:03:37.531308", "score": "0.9508", "loss": "0.0549", "code": " void clear() { teException(sm.getString(\"parameterMap.locked\")); super.clear(); }", "n_tokens": 82, "n_pass": [23, 3, 3]}
{"time": "2021-02-25 04:03:40.525195", "score": "0.9348", "loss": "0.0757", "code": " void clear() { ion(sm.getString(\"parameterMap.locked\")); super.clear(); }", "n_tokens": 74, "n_pass": [40, 4, 4]}
{"time": "2021-02-25 04:03:43.117876", "score": "0.9128", "loss": "0.1034", "code": " void clear() { ion(sm.g(\"parameterMap.locked\")); super.clear(); }", "n_tokens": 66, "n_pass": [41, 5, 5]}
{"time": "2021-02-25 04:03:45.728403", "score": "0.9128", "loss": "0.1034", "code": " void clear() { ion(sm.g(\"parameocked\")); super.clear(); }", "n_tokens": 58, "n_pass": [43, 6, 6]}
{"time": "2021-02-25 04:03:48.710195", "score": "0.9128", "loss": "0.1034", "code": " void clear() { ion(sm.g(\"paramed\")); super.clear(); }", "n_tokens": 54, "n_pass": [65, 7, 7]}
{"time": "2021-02-25 04:03:53.998224", "score": "0.9651", "loss": "0.0418", "code": "d clear() { ion(sm.g(\"paramed\")); super.clear(); }", "n_tokens": 50, "n_pass": [70, 9, 8]}
{"time": "2021-02-25 04:03:57.002123", "score": "0.9856", "loss": "0.0165", "code": "d clear() { ion((\"paramed\")); super.clear(); }", "n_tokens": 46, "n_pass": [75, 10, 9]}
{"time": "2021-02-25 04:03:59.627730", "score": "0.9854", "loss": "0.0168", "code": "d clear() { ion((\"pad\")); super.clear(); }", "n_tokens": 42, "n_pass": [77, 11, 10]}
{"time": "2021-02-25 04:04:05.658737", "score": "0.7337", "loss": "0.4436", "code": "d clear() { ion((\"pad\")); per.clear(); }", "n_tokens": 40, "n_pass": [111, 13, 11]}
{"time": "2021-02-25 04:04:08.252894", "score": "0.7134", "loss": "0.4411", "code": "d clear() { ion((\"pad\")); r.clear(); }", "n_tokens": 38, "n_pass": [112, 14, 12]}
{"time": "2021-02-25 04:04:22.511117", "score": "0.9632", "loss": "0.0501", "code": "d clear() { n((\"pad\")); r.clear(); }", "n_tokens": 36, "n_pass": [124, 19, 13]}
{"time": "2021-02-25 04:04:25.168375", "score": "0.9643", "loss": "0.0468", "code": "d clear() { n((\"d\")); r.clear(); }", "n_tokens": 34, "n_pass": [127, 20, 14]}
{"time": "2021-02-25 04:04:27.771076", "score": "0.9021", "loss": "0.1184", "code": "d clear() { n((\"d\")); clear(); }", "n_tokens": 32, "n_pass": [131, 21, 15]}
{"time": "2021-02-25 04:04:57.042841", "score": "0.9021", "loss": "0.1184", "code": "d clear(){ n((\"d\")); clear(); }", "n_tokens": 31, "n_pass": [194, 30, 16]}
{"time": "2021-02-25 04:04:59.636054", "score": "0.9021", "loss": "0.1184", "code": "d clear(){n((\"d\")); clear(); }", "n_tokens": 30, "n_pass": [196, 31, 17]}
{"time": "2021-02-25 04:05:02.254720", "score": "0.9588", "loss": "0.0501", "code": "d clear(){((\"d\")); clear(); }", "n_tokens": 29, "n_pass": [197, 32, 18]}
{"time": "2021-02-25 04:05:04.883751", "score": "0.9691", "loss": "0.0377", "code": "d clear(){((\"\")); clear(); }", "n_tokens": 28, "n_pass": [201, 33, 19]}
{"time": "2021-02-25 04:05:07.474481", "score": "0.9691", "loss": "0.0377", "code": "d clear(){((\"\"));clear(); }", "n_tokens": 27, "n_pass": [206, 34, 20]}
{"time": "2021-02-25 04:05:26.577508", "score": "0.9691", "loss": "0.0377", "code": "d clear(){((\"\"));clear();}", "n_tokens": 26, "n_pass": [238, 40, 21]}

Minimal simplified code:
d clear(){((""));clear();}

