
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/SummerRC__BiLiBiLi/OneXListviewLibrary/src/com/youxiachai/onexlistview/XStickyListHeadersIndexableView_draw.java
method_name = draw
method_body = @Override public void draw(Canvas canvas) { super.draw(canvas); if (mScroller != null) mScroller.draw(canvas); }
predict, score, loss = draw, 0.8942465782165527, 0.11546759307384491

Trace of simplified code(s):
{"time": "2021-02-22 21:31:41.972516", "score": "0.8942", "loss": "0.1155", "code": "@Override public void draw(Canvas canvas) { super.draw(canvas); if (mScroller != null) mScroller.draw(canvas); }", "n_tokens": 112, "n_pass": [1, 1, 1]}
{"time": "2021-02-22 21:31:44.670006", "score": "0.6273", "loss": "0.4788", "code": "@Override public void draw(Canvas canvas) { super.draw(canvas); if (mSl) mScroller.draw(canvas); }", "n_tokens": 98, "n_pass": [25, 2, 2]}
{"time": "2021-02-22 21:31:47.290450", "score": "0.4655", "loss": "0.7786", "code": "@Override public void draw(Canvas canvas) { super.draw(canvas); if (mSl) mScrraw(canvas); }", "n_tokens": 91, "n_pass": [47, 3, 3]}
{"time": "2021-02-22 21:31:49.887384", "score": "0.4735", "loss": "0.7618", "code": "@Overriic void draw(Canvas canvas) { super.draw(canvas); if (mSl) mScrraw(canvas); }", "n_tokens": 84, "n_pass": [51, 4, 4]}
{"time": "2021-02-22 21:31:52.889267", "score": "0.4735", "loss": "0.7618", "code": "@Overr void draw(Canvas canvas) { super.draw(canvas); if (mSl) mScrraw(canvas); }", "n_tokens": 81, "n_pass": [88, 5, 5]}
{"time": "2021-02-22 21:31:56.732949", "score": "0.9767", "loss": "0.0394", "code": "@Overr void draw(Cas canvas) { super.draw(canvas); if (mSl) mScrraw(canvas); }", "n_tokens": 78, "n_pass": [93, 6, 6]}
{"time": "2021-02-22 21:31:59.411974", "score": "0.3873", "loss": "1.4564", "code": "@Overr void draw(Cas vas) { super.draw(canvas); if (mSl) mScrraw(canvas); }", "n_tokens": 75, "n_pass": [95, 7, 7]}
{"time": "2021-02-22 21:32:15.559097", "score": "0.3077", "loss": "1.8191", "code": "@Ov void draw(Cas vas) { super.draw(canvas); if (mSl) mScrraw(canvas); }", "n_tokens": 72, "n_pass": [111, 13, 8]}
{"time": "2021-02-22 21:32:32.789928", "score": "0.7775", "loss": "0.9686", "code": " void draw(Cas vas) { super.draw(canvas); if (mSl) mScrraw(canvas); }", "n_tokens": 69, "n_pass": [131, 19, 9]}
{"time": "2021-02-22 21:32:35.379287", "score": "0.5453", "loss": "1.906", "code": "id draw(Cas vas) { super.draw(canvas); if (mSl) mScrraw(canvas); }", "n_tokens": 66, "n_pass": [132, 20, 10]}
{"time": "2021-02-22 21:32:38.755191", "score": "0.2528", "loss": "2.9789", "code": "id draw(Cas vas) {er.draw(canvas); if (mSl) mScrraw(canvas); }", "n_tokens": 62, "n_pass": [139, 21, 11]}
{"time": "2021-02-22 21:33:06.477154", "score": "0.9598", "loss": "0.114", "code": "id draw(Cas vas) {er.draw(canvas); if (m) mScrraw(canvas); }", "n_tokens": 60, "n_pass": [202, 31, 12]}
{"time": "2021-02-22 21:33:09.102362", "score": "0.9598", "loss": "0.114", "code": "id draw(Cas vas) {er.draw(canvas); if (m) crraw(canvas); }", "n_tokens": 58, "n_pass": [204, 32, 13]}
{"time": "2021-02-22 21:33:11.740809", "score": "0.9529", "loss": "0.137", "code": "id draw(Cas vas) {er.draw(canvas); if (m) raw(canvas); }", "n_tokens": 56, "n_pass": [205, 33, 14]}
{"time": "2021-02-22 21:33:14.343236", "score": "0.9602", "loss": "0.1127", "code": "id draw(Cas vas) {er.draw(canvas); if (m) w(canvas); }", "n_tokens": 54, "n_pass": [206, 34, 15]}
{"time": "2021-02-22 21:33:16.995479", "score": "0.9478", "loss": "0.1569", "code": "id draw(Cas vas) {er.draw(canvas); if (m) w(nvas); }", "n_tokens": 52, "n_pass": [208, 35, 16]}
{"time": "2021-02-22 21:33:19.596523", "score": "0.9418", "loss": "0.1828", "code": "id draw(Cas vas) {er.draw(canvas); if (m) w(as); }", "n_tokens": 50, "n_pass": [209, 36, 17]}
{"time": "2021-02-22 21:33:22.211023", "score": "0.945", "loss": "0.158", "code": "id draw(Cas vas) {er.draw(canvas); if (m) w(); }", "n_tokens": 48, "n_pass": [210, 37, 18]}
{"time": "2021-02-22 21:33:24.821372", "score": "0.9856", "loss": "0.0369", "code": "d draw(Cas vas) {er.draw(canvas); if (m) w(); }", "n_tokens": 47, "n_pass": [213, 38, 19]}
{"time": "2021-02-22 21:33:29.397875", "score": "0.989", "loss": "0.0233", "code": "d draw(s vas) {er.draw(canvas); if (m) w(); }", "n_tokens": 45, "n_pass": [220, 39, 20]}
{"time": "2021-02-22 21:33:32.026988", "score": "0.9966", "loss": "0.0043", "code": "d draw(s s) {er.draw(canvas); if (m) w(); }", "n_tokens": 43, "n_pass": [222, 40, 21]}
{"time": "2021-02-22 21:33:34.669005", "score": "0.3845", "loss": "1.3084", "code": "d draw(s s) {erraw(canvas); if (m) w(); }", "n_tokens": 41, "n_pass": [226, 41, 22]}
{"time": "2021-02-22 21:33:55.259659", "score": "0.3845", "loss": "1.3084", "code": "d draw(s s) {erra(canvas); if (m) w(); }", "n_tokens": 40, "n_pass": [286, 47, 23]}
{"time": "2021-02-22 21:34:13.644764", "score": "0.3845", "loss": "1.3084", "code": "d draw(s s) {erra(canvas);if (m) w(); }", "n_tokens": 39, "n_pass": [295, 54, 24]}
{"time": "2021-02-22 21:34:16.247664", "score": "0.3845", "loss": "1.3084", "code": "d draw(s s) {erra(canvas);if(m) w(); }", "n_tokens": 38, "n_pass": [298, 55, 25]}
{"time": "2021-02-22 21:34:18.863178", "score": "0.3845", "loss": "1.3084", "code": "d draw(s s) {erra(canvas);if(m)w(); }", "n_tokens": 37, "n_pass": [302, 56, 26]}
{"time": "2021-02-22 21:34:21.463251", "score": "0.3845", "loss": "1.3084", "code": "d draw(s s) {erra(canvas);if(m)w();}", "n_tokens": 36, "n_pass": [307, 57, 27]}
{"time": "2021-02-22 21:34:26.415837", "score": "0.3845", "loss": "1.3084", "code": "d draw(s s){erra(canvas);if(m)w();}", "n_tokens": 35, "n_pass": [320, 58, 28]}

Minimal simplified code:
d draw(s s){erra(canvas);if(m)w();}

