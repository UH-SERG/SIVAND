
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/kaazing__gateway/transport/http/src/main/java/org/kaazing/gateway/transport/http/HttpBindings_toString.java
method_name = toString
method_body = @Override public String toString() { Iterator<Entry<String, Binding>> i = bindingsByPath.entrySet().iterator(); if (!i.hasNext()) return super.toString(); StringBuilder sb = new StringBuilder(); sb.append("(\n"); for (; ; ) { Entry<String, Binding> e = i.next(); String key = e.getKey(); Binding value = e.getValue(); sb.append(" ").append(key); sb.append('='); sb.append(value); if (!i.hasNext()) return sb.append("\n #").append(referenceCount()).append(")").toString(); sb.append(';').append('\n'); } }
predict, score, loss = toString, 0.997956395149231, 0.004209705162793398

Trace of simplified code(s):
{"time": "2021-02-22 08:32:27.329076", "score": "0.9989", "loss": "0.0028", "code": "@Override public String toString() { Iterator<Entry<String, Binding>> i = bindingsByPath.entrySet().iterator(); if (!i.hasNext()) return super.toString(); StringBuilder sb = new StringBuilder(); sb.append(\"(\\n\"); for (; ; ) { Entry<String, Binding> e = i.next(); String key = e.getKey(); Binding value = e.getValue(); sb.append(\" \").append(key); sb.append('='); sb.append(value); if (!i.hasNext()) return sb.append(\"\\n #\").append(referenceCount()).append(\")\").toString(); sb.append(';').append('\\n'); } }", "n_tokens": 504, "n_pass": [1, 1, 1]}
{"time": "2021-02-22 08:32:30.541840", "score": "0.9992", "loss": "0.0014", "code": "@Override public String toString() { Iterator<Entry<String, Binding>> i = bindingsByPath.entrySet().iterator(); if (!i.hasNext()) return super.toString(); ilder(); sb.append(\"(\\n\"); for (; ; ) { Entry<String, Binding> e = i.next(); String key = e.getKey(); Binding value = e.getValue(); sb.append(\" \").append(key); sb.append('='); sb.append(value); if (!i.hasNext()) return sb.append(\"\\n #\").append(referenceCount()).append(\")\").toString(); sb.append(';').append('\\n'); } }", "n_tokens": 473, "n_pass": [49, 2, 2]}
{"time": "2021-02-22 08:32:33.224304", "score": "0.9978", "loss": "0.0046", "code": "@Override public String toString() { Iterator<Entry<String, Binding>> i = bindingsByPath.entrySet().iterator(); if (!i.hasNext()) return super.toString(); ilder(); sb.append(\"(\\n\"); for (; ; ) { Entry<String, Binding> e = i.next(); String key = e.geue(); sb.append(\" \").append(key); sb.append('='); sb.append(value); if (!i.hasNext()) return sb.append(\"\\n #\").append(referenceCount()).append(\")\").toString(); sb.append(';').append('\\n'); } }", "n_tokens": 441, "n_pass": [53, 3, 3]}
{"time": "2021-02-22 08:32:35.872113", "score": "0.9947", "loss": "0.0207", "code": "@Override public String toString() { Iterator<Entry<String, Binding>> i = bindingsByPath.entrySet().iterator(); if (!i.hasNext()) return super.toString(); ilder(); sb.append(\"(\\n\"); for (; ; ) { Entry<String, Binding> e = i.next(); String key = e.ge; sb.append('='); sb.append(value); if (!i.hasNext()) return sb.append(\"\\n #\").append(referenceCount()).append(\")\").toString(); sb.append(';').append('\\n'); } }", "n_tokens": 409, "n_pass": [54, 4, 4]}
{"time": "2021-02-22 08:32:38.946723", "score": "0.9973", "loss": "0.0045", "code": "@Override public String toString() { Iterator<Entry<String, Binding>> i = bindingsByPath.entrySet().iterator(); if (!i.hasNext()) return super.toString(); ilder(); sb.append(\"(\\n\"); for (; ; ) { Entry<String, Binding> e = i.next(); String key = e.ge; sb.append(value); if (!i.hasNext()) return sb.append(\"\\n #\").append(referenceCount()).append(\")\").toString(); sb.append(';').append('\\n'); } }", "n_tokens": 393, "n_pass": [94, 5, 5]}
{"time": "2021-02-22 08:32:41.653784", "score": "0.9988", "loss": "0.0025", "code": "@Override public String toString() { Iterator<Entry<String, Binding>> i = bindingsByPath.entrySet().iterator(); if (!i.hasNext()) return super.toString(); ilder(); sb.append(\"(\\n\"); for (; ; ) { Entry<String, Binding> e = i.next(); String key = e.ge; sb.append(value); if (!i.hasNext()) return sb.ppend(referenceCount()).append(\")\").toString(); sb.append(';').append('\\n'); } }", "n_tokens": 377, "n_pass": [97, 6, 6]}
{"time": "2021-02-22 08:32:44.316264", "score": "0.9981", "loss": "0.0039", "code": "@Override public String toString() { Iterator<Entry<String, Binding>> i = bindingsByPath.entrySet().iterator(); if (!i.hasNext()) return super.toString(); ilder(); sb.append(\"(\\n\"); for (; ; ) { Entry<String, Binding> e = i.next(); String key = e.ge; sb.append(value); if (!i.hasNext()) return sb.ppend(referenceCount()).append(\")\").toString(); ppend('\\n'); } }", "n_tokens": 361, "n_pass": [101, 7, 7]}
{"time": "2021-02-22 08:32:47.739323", "score": "0.9994", "loss": "0.0011", "code": "@Override public String toString() { Iterator<Entry<String, Binding>> i = bntrySet().iterator(); if (!i.hasNext()) return super.toString(); ilder(); sb.append(\"(\\n\"); for (; ; ) { Entry<String, Binding> e = i.next(); String key = e.ge; sb.append(value); if (!i.hasNext()) return sb.ppend(referenceCount()).append(\")\").toString(); ppend('\\n'); } }", "n_tokens": 346, "n_pass": [108, 8, 8]}
{"time": "2021-02-22 08:32:50.390088", "score": "0.9987", "loss": "0.0025", "code": "@Override public String toString() { Iterator<Entry<String, Binding>> i = btor(); if (!i.hasNext()) return super.toString(); ilder(); sb.append(\"(\\n\"); for (; ; ) { Entry<String, Binding> e = i.next(); String key = e.ge; sb.append(value); if (!i.hasNext()) return sb.ppend(referenceCount()).append(\")\").toString(); ppend('\\n'); } }", "n_tokens": 331, "n_pass": [109, 9, 9]}
{"time": "2021-02-22 08:32:53.032378", "score": "0.9985", "loss": "0.0027", "code": "@Override public String toString() { Iterator<Entry<String, Binding>> i = btor(); if (!i.hasNext()) return ; ilder(); sb.append(\"(\\n\"); for (; ; ) { Entry<String, Binding> e = i.next(); String key = e.ge; sb.append(value); if (!i.hasNext()) return sb.ppend(referenceCount()).append(\")\").toString(); ppend('\\n'); } }", "n_tokens": 315, "n_pass": [112, 10, 10]}
{"time": "2021-02-22 08:32:55.717494", "score": "0.9886", "loss": "0.0437", "code": "@Override public String toString() { Iterator<Entry<String, Binding>> i = btor(); if (!i.hasNext()) return pend(\"(\\n\"); for (; ; ) { Entry<String, Binding> e = i.next(); String key = e.ge; sb.append(value); if (!i.hasNext()) return sb.ppend(referenceCount()).append(\")\").toString(); ppend('\\n'); } }", "n_tokens": 299, "n_pass": [113, 11, 11]}
{"time": "2021-02-22 08:32:58.753998", "score": "0.9879", "loss": "0.0499", "code": "@Override public String toString() { Iterator<Entry<String, Binding>> i = btor(); if (!i.hasNext()) return pend(\"(\\n\"); for (; ; ) { Entry<String, Binding> e = i.next(); S; sb.append(value); if (!i.hasNext()) return sb.ppend(referenceCount()).append(\")\").toString(); ppend('\\n'); } }", "n_tokens": 283, "n_pass": [118, 12, 12]}
{"time": "2021-02-22 08:33:02.632049", "score": "0.9632", "loss": "0.1374", "code": "@Override public String toString() { Iterator<Entry<String, Binding>> i = btor(); if (!i.hasNext()) return pend(\"(\\n\"); for (; ; ) { Entry<String, Binding> e = i.next(); Send(value); if (!i.hasNext()) return sb.ppend(referenceCount()).append(\")\").toString(); ppend('\\n'); } }", "n_tokens": 275, "n_pass": [173, 13, 13]}
{"time": "2021-02-22 08:33:05.296637", "score": "0.9711", "loss": "0.0915", "code": "@Override public String toString() { Iterator<Entry<String, Binding>> i = btor(); if (!i.hasNext()) return pend(\"(\\n\"); for (; ; ) { Entry<String, Binding> e = i.next(); Send(value); if (xt()) return sb.ppend(referenceCount()).append(\")\").toString(); ppend('\\n'); } }", "n_tokens": 267, "n_pass": [175, 14, 14]}
{"time": "2021-02-22 08:33:07.926098", "score": "0.5279", "loss": "1.2685", "code": "@Override public String toString() { Iterator<Entry<String, Binding>> i = btor(); if (!i.hasNext()) return pend(\"(\\n\"); for (; ; ) { Entry<String, Binding> e = i.next(); Send(value); if (xt()) reppend(referenceCount()).append(\")\").toString(); ppend('\\n'); } }", "n_tokens": 259, "n_pass": [177, 15, 15]}
{"time": "2021-02-22 08:33:10.561514", "score": "0.9479", "loss": "0.2615", "code": "@Override public String toString() { Iterator<Entry<String, Binding>> i = btor(); if (!i.hasNext()) return pend(\"(\\n\"); for (; ; ) { Entry<String, Binding> e = i.next(); Send(value); if (xt()) reppend(reount()).append(\")\").toString(); ppend('\\n'); } }", "n_tokens": 251, "n_pass": [179, 16, 16]}
{"time": "2021-02-22 08:33:13.194832", "score": "0.7009", "loss": "1.2204", "code": "@Override public String toString() { Iterator<Entry<String, Binding>> i = btor(); if (!i.hasNext()) return pend(\"(\\n\"); for (; ; ) { Entry<String, Binding> e = i.next(); Send(value); if (xt()) reppend(reount()).append(\")\").toStppend('\\n'); } }", "n_tokens": 243, "n_pass": [183, 17, 17]}
{"time": "2021-02-22 08:33:15.827147", "score": "0.6807", "loss": "1.3026", "code": "@Overriic String toString() { Iterator<Entry<String, Binding>> i = btor(); if (!i.hasNext()) return pend(\"(\\n\"); for (; ; ) { Entry<String, Binding> e = i.next(); Send(value); if (xt()) reppend(reount()).append(\")\").toStppend('\\n'); } }", "n_tokens": 236, "n_pass": [187, 18, 18]}
{"time": "2021-02-22 08:33:19.263928", "score": "0.9254", "loss": "0.2138", "code": "@Overriic String toString() { Iterator<Entry<String, Binding>> i = btor(); if (!i.hasNext())pend(\"(\\n\"); for (; ; ) { Entry<String, Binding> e = i.next(); Send(value); if (xt()) reppend(reount()).append(\")\").toStppend('\\n'); } }", "n_tokens": 228, "n_pass": [199, 19, 19]}
{"time": "2021-02-22 08:33:21.918299", "score": "0.9095", "loss": "0.2556", "code": "@Overriic String toString() { Iterator<Entry<String, Binding>> i = btor(); if (!i.hasNext())pend(\"(\\n\"); for (; ; ) { Entry<Binding> e = i.next(); Send(value); if (xt()) reppend(reount()).append(\")\").toStppend('\\n'); } }", "n_tokens": 220, "n_pass": [204, 20, 20]}
{"time": "2021-02-22 08:33:28.817418", "score": "0.4365", "loss": "1.546", "code": "@Overriic String toString() { Iterator<Entry<String, Binding>> i = btor(); if (!i.hasNext())pend(\"(\\n\"); for (; ; ) { Entry<ing> e = i.next(); Send(value); if (xt()) reppend(reount()).append(\")\").toStppend('\\n'); } }", "n_tokens": 216, "n_pass": [289, 22, 21]}
{"time": "2021-02-22 08:33:31.833862", "score": "0.364", "loss": "1.8562", "code": "@Overriic String toString() { Iterator<Entry<String, Binding>> i = btor(); if (!i.hasNext())pend(\"(\\n\"); for (; ; ) { Entry<ing> e =ext(); Send(value); if (xt()) reppend(reount()).append(\")\").toStppend('\\n'); } }", "n_tokens": 212, "n_pass": [291, 23, 22]}
{"time": "2021-02-22 08:33:34.479604", "score": "0.3929", "loss": "1.7862", "code": "@Overriic String toString() { Iterator<Entry<String, Binding>> i = btor(); if (!i.hasNext())pend(\"(\\n\"); for (; ; ) { Entry<ing> e =ext(); Send(e); if (xt()) reppend(reount()).append(\")\").toStppend('\\n'); } }", "n_tokens": 208, "n_pass": [295, 24, 23]}
{"time": "2021-02-22 08:33:37.124152", "score": "0.4001", "loss": "1.8426", "code": "@Overriic String toString() { Iterator<Entry<String, Binding>> i = btor(); if (!i.hasNext())pend(\"(\\n\"); for (; ; ) { Entry<ing> e =ext(); Send(e); if (xt()) red(reount()).append(\")\").toStppend('\\n'); } }", "n_tokens": 204, "n_pass": [300, 25, 24]}
{"time": "2021-02-22 08:33:39.755444", "score": "0.3961", "loss": "1.7123", "code": "@Overriic String toString() { Iterator<Entry<String, Binding>> i = btor(); if (!i.hasNext())pend(\"(\\n\"); for (; ; ) { Entry<ing> e =ext(); Send(e); if (xt()) red(re()).append(\")\").toStppend('\\n'); } }", "n_tokens": 200, "n_pass": [302, 26, 25]}
{"time": "2021-02-22 08:33:42.400680", "score": "0.3855", "loss": "1.7705", "code": "@Overriic String toString() { Iterator<Entry<String, Binding>> i = btor(); if (!i.hasNext())pend(\"(\\n\"); for (; ; ) { Entry<ing> e =ext(); Send(e); if (xt()) red(re()).nd(\")\").toStppend('\\n'); } }", "n_tokens": 196, "n_pass": [304, 27, 26]}
{"time": "2021-02-22 08:33:45.057187", "score": "0.8404", "loss": "0.5226", "code": "@Overriic String toString() { Iterator<Entry<String, Binding>> i = btor(); if (!i.hasNext())pend(\"(\\n\"); for (; ; ) { Entry<ing> e =ext(); Send(e); if (xt()) red(re()).nd(\")\").ppend('\\n'); } }", "n_tokens": 192, "n_pass": [307, 28, 27]}
{"time": "2021-02-22 08:33:50.345865", "score": "0.8404", "loss": "0.5226", "code": "@Oviic String toString() { Iterator<Entry<String, Binding>> i = btor(); if (!i.hasNext())pend(\"(\\n\"); for (; ; ) { Entry<ing> e =ext(); Send(e); if (xt()) red(re()).nd(\")\").ppend('\\n'); } }", "n_tokens": 189, "n_pass": [313, 30, 28]}
{"time": "2021-02-22 08:33:52.999214", "score": "0.7285", "loss": "1.0523", "code": "@Ov String toString() { Iterator<Entry<String, Binding>> i = btor(); if (!i.hasNext())pend(\"(\\n\"); for (; ; ) { Entry<ing> e =ext(); Send(e); if (xt()) red(re()).nd(\")\").ppend('\\n'); } }", "n_tokens": 186, "n_pass": [314, 31, 29]}
{"time": "2021-02-22 08:33:59.419577", "score": "0.7285", "loss": "1.0523", "code": "@Ov String toString() { Itor<Entry<String, Binding>> i = btor(); if (!i.hasNext())pend(\"(\\n\"); for (; ; ) { Entry<ing> e =ext(); Send(e); if (xt()) red(re()).nd(\")\").ppend('\\n'); } }", "n_tokens": 182, "n_pass": [321, 33, 30]}
{"time": "2021-02-22 08:34:02.033832", "score": "0.7285", "loss": "1.0523", "code": "@Ov String toString() { Itor<E<String, Binding>> i = btor(); if (!i.hasNext())pend(\"(\\n\"); for (; ; ) { Entry<ing> e =ext(); Send(e); if (xt()) red(re()).nd(\")\").ppend('\\n'); } }", "n_tokens": 178, "n_pass": [323, 34, 31]}
{"time": "2021-02-22 08:34:04.723394", "score": "0.8803", "loss": "0.4561", "code": "@Ov String toString() { Itor<E<String,ding>> i = btor(); if (!i.hasNext())pend(\"(\\n\"); for (; ; ) { Entry<ing> e =ext(); Send(e); if (xt()) red(re()).nd(\")\").ppend('\\n'); } }", "n_tokens": 174, "n_pass": [326, 35, 32]}
{"time": "2021-02-22 08:34:07.378578", "score": "0.9684", "loss": "0.0547", "code": "@Ov String toString() { Itor<E<String,ding>> i = btor(); if (!sNext())pend(\"(\\n\"); for (; ; ) { Entry<ing> e =ext(); Send(e); if (xt()) red(re()).nd(\")\").ppend('\\n'); } }", "n_tokens": 170, "n_pass": [333, 36, 33]}
{"time": "2021-02-22 08:34:10.001801", "score": "0.8899", "loss": "0.3314", "code": "@Ov String toString() { Itor<E<String,ding>> i = btor(); if (!t())pend(\"(\\n\"); for (; ; ) { Entry<ing> e =ext(); Send(e); if (xt()) red(re()).nd(\")\").ppend('\\n'); } }", "n_tokens": 166, "n_pass": [334, 37, 34]}
{"time": "2021-02-22 08:34:12.629118", "score": "0.8929", "loss": "0.3394", "code": "@Ov String toString() { Itor<E<String,ding>> i = btor(); if (!t())(\"(\\n\"); for (; ; ) { Entry<ing> e =ext(); Send(e); if (xt()) red(re()).nd(\")\").ppend('\\n'); } }", "n_tokens": 162, "n_pass": [336, 38, 35]}
{"time": "2021-02-22 08:34:16.465057", "score": "0.7489", "loss": "0.854", "code": "@Ov String toString() { Itor<E<String,ding>> i = btor(); if (!t())(\"(\\n\"); for (; ; ) { Entry<ing> e =ext(); Send(e); if (xt()) red(re()).nd(\")\").d('\\n'); } }", "n_tokens": 158, "n_pass": [357, 39, 36]}
{"time": "2021-02-22 08:34:19.180535", "score": "0.3828", "loss": "1.3602", "code": " String toString() { Itor<E<String,ding>> i = btor(); if (!t())(\"(\\n\"); for (; ; ) { Entry<ing> e =ext(); Send(e); if (xt()) red(re()).nd(\")\").d('\\n'); } }", "n_tokens": 155, "n_pass": [361, 40, 37]}
{"time": "2021-02-22 08:34:33.299374", "score": "0.3828", "loss": "1.3602", "code": "String toString() { Itor<E<String,ding>> i = btor(); if (!t())(\"(\\n\"); for (; ; ) { Entry<ing> e =ext(); Send(e); if (xt()) red(re()).nd(\")\").d('\\n'); } }", "n_tokens": 154, "n_pass": [479, 44, 38]}
{"time": "2021-02-22 08:34:42.842874", "score": "0.3828", "loss": "1.3602", "code": "String toString() { or<E<String,ding>> i = btor(); if (!t())(\"(\\n\"); for (; ; ) { Entry<ing> e =ext(); Send(e); if (xt()) red(re()).nd(\")\").d('\\n'); } }", "n_tokens": 152, "n_pass": [489, 47, 39]}
{"time": "2021-02-22 08:34:45.550755", "score": "0.4072", "loss": "1.3946", "code": "String toString() { or<E<Sing,ding>> i = btor(); if (!t())(\"(\\n\"); for (; ; ) { Entry<ing> e =ext(); Send(e); if (xt()) red(re()).nd(\")\").d('\\n'); } }", "n_tokens": 150, "n_pass": [493, 48, 40]}
{"time": "2021-02-22 08:34:48.192273", "score": "0.3399", "loss": "1.509", "code": "String toString() { or<E<Sg,ding>> i = btor(); if (!t())(\"(\\n\"); for (; ; ) { Entry<ing> e =ext(); Send(e); if (xt()) red(re()).nd(\")\").d('\\n'); } }", "n_tokens": 148, "n_pass": [494, 49, 41]}
{"time": "2021-02-22 08:34:58.821822", "score": "0.405", "loss": "1.3263", "code": "String toString() { or<E<Sg,ding>> i =tor(); if (!t())(\"(\\n\"); for (; ; ) { Entry<ing> e =ext(); Send(e); if (xt()) red(re()).nd(\")\").d('\\n'); } }", "n_tokens": 146, "n_pass": [501, 53, 42]}
{"time": "2021-02-22 08:35:01.454753", "score": "0.3335", "loss": "1.5142", "code": "String toString() { or<E<Sg,ding>> i =r(); if (!t())(\"(\\n\"); for (; ; ) { Entry<ing> e =ext(); Send(e); if (xt()) red(re()).nd(\")\").d('\\n'); } }", "n_tokens": 144, "n_pass": [502, 54, 43]}
{"time": "2021-02-22 08:35:04.079446", "score": "0.3329", "loss": "1.5129", "code": "String toString() { or<E<Sg,ding>> i =r(); if (!t())(\"n\"); for (; ; ) { Entry<ing> e =ext(); Send(e); if (xt()) red(re()).nd(\")\").d('\\n'); } }", "n_tokens": 142, "n_pass": [511, 55, 44]}
{"time": "2021-02-22 08:35:06.719129", "score": "0.3329", "loss": "1.5129", "code": "String toString() { or<E<Sg,ding>> i =r(); if (!t())(\"n\"); for (; ; ) { Eny<ing> e =ext(); Send(e); if (xt()) red(re()).nd(\")\").d('\\n'); } }", "n_tokens": 140, "n_pass": [522, 56, 45]}
{"time": "2021-02-22 08:35:09.745910", "score": "0.6122", "loss": "1.2149", "code": "String toString() { or<E<Sg,ding>> i =r(); if (!t())(\"n\"); for (; ; ) { Eny<g> e =ext(); Send(e); if (xt()) red(re()).nd(\")\").d('\\n'); } }", "n_tokens": 138, "n_pass": [524, 57, 46]}
{"time": "2021-02-22 08:35:13.176050", "score": "0.674", "loss": "0.9993", "code": "String toString() { or<E<Sg,ding>> i =r(); if (!t())(\"n\"); for (; ; ) { Eny<g> e =t(); Send(e); if (xt()) red(re()).nd(\")\").d('\\n'); } }", "n_tokens": 136, "n_pass": [528, 58, 47]}
{"time": "2021-02-22 08:35:15.806236", "score": "0.6919", "loss": "0.8438", "code": "String toString() { or<E<Sg,ding>> i =r(); if (!t())(\"n\"); for (; ; ) { Eny<g> e =t();end(e); if (xt()) red(re()).nd(\")\").d('\\n'); } }", "n_tokens": 134, "n_pass": [531, 59, 48]}
{"time": "2021-02-22 08:35:18.458234", "score": "0.5363", "loss": "0.9807", "code": "String toString() { or<E<Sg,ding>> i =r(); if (!t())(\"n\"); for (; ; ) { Eny<g> e =t();d(e); if (xt()) red(re()).nd(\")\").d('\\n'); } }", "n_tokens": 132, "n_pass": [532, 60, 49]}
{"time": "2021-02-22 08:35:21.093274", "score": "0.6231", "loss": "0.7992", "code": "String toString() { or<E<Sg,ding>> i =r(); if (!t())(\"n\"); for (; ; ) { Eny<g> e =t();d(e); if (xt) red(re()).nd(\")\").d('\\n'); } }", "n_tokens": 130, "n_pass": [539, 61, 50]}
{"time": "2021-02-22 08:35:23.727610", "score": "0.6503", "loss": "0.7499", "code": "String toString() { or<E<Sg,ding>> i =r(); if (!t())(\"n\"); for (; ; ) { Eny<g> e =t();d(e); if (xt) d(re()).nd(\")\").d('\\n'); } }", "n_tokens": 128, "n_pass": [541, 62, 51]}
{"time": "2021-02-22 08:35:26.356197", "score": "0.6556", "loss": "0.7427", "code": "String toString() { or<E<Sg,ding>> i =r(); if (!t())(\"n\"); for (; ; ) { Eny<g> e =t();d(e); if (xt) d(re).nd(\")\").d('\\n'); } }", "n_tokens": 126, "n_pass": [544, 63, 52]}
{"time": "2021-02-22 08:35:46.382349", "score": "0.6556", "loss": "0.7427", "code": "String toString() { or<E<Sg,ding>> i =r(); if (!t())(\"n\"); for (; ; ) { y<g> e =t();d(e); if (xt) d(re).nd(\")\").d('\\n'); } }", "n_tokens": 124, "n_pass": [592, 70, 53]}
{"time": "2021-02-22 08:35:50.581365", "score": "0.6644", "loss": "0.7294", "code": "String toString() { or<E<Sg,ding>> i =r(); if (!t())(\"n\"); for (; ; ) { y<g> e =t();d(e); if (xt) d().nd(\")\").d('\\n'); } }", "n_tokens": 122, "n_pass": [607, 71, 54]}
{"time": "2021-02-22 08:36:21.891787", "score": "0.6499", "loss": "0.7457", "code": "String toString() { or<E<Sg,ding>> i =r(); if (!t())(\"n\"); for (; ; ) { y<g> e =t();d(e); if (xt) d().d(\")\").d('\\n'); } }", "n_tokens": 121, "n_pass": [793, 78, 55]}
{"time": "2021-02-22 08:36:24.515343", "score": "0.5377", "loss": "0.9885", "code": "String toString() { or<E<Sg,ding>> i =r(); if (!t())(\"n\"); for (; ; ) { y<g> e =t();d(e); if (xt) d().d(\"\").d('\\n'); } }", "n_tokens": 120, "n_pass": [796, 79, 56]}
{"time": "2021-02-22 08:36:27.166164", "score": "0.497", "loss": "1.0812", "code": "String toString() { or<E<Sg,ding>> i =r(); if (!t())(\"n\"); for (; ; ) { y<g> e =t();d(e); if (xt) d().d(\"\").d('n'); } }", "n_tokens": 119, "n_pass": [803, 80, 57]}
{"time": "2021-02-22 08:36:30.154686", "score": "0.497", "loss": "1.0812", "code": "String toString() { or<E<Sg,ding>> i =r(); if (!t())(\"n\"); for (; ; ) { y<g> e =t();d(e); if (xt) d().d(\"\").d('n');} }", "n_tokens": 118, "n_pass": [808, 81, 58]}
{"time": "2021-02-22 08:36:32.794213", "score": "0.497", "loss": "1.0812", "code": "String toString() { or<E<Sg,ding>> i =r(); if (!t())(\"n\"); for (; ; ) { y<g> e =t();d(e); if (xt) d().d(\"\").d('n');}}", "n_tokens": 117, "n_pass": [810, 82, 59]}
{"time": "2021-02-22 08:36:54.859079", "score": "0.497", "loss": "1.0812", "code": "String toString(){ or<E<Sg,ding>> i =r(); if (!t())(\"n\"); for (; ; ) { y<g> e =t();d(e); if (xt) d().d(\"\").d('n');}}", "n_tokens": 116, "n_pass": [829, 89, 60]}
{"time": "2021-02-22 08:36:57.487537", "score": "0.497", "loss": "1.0812", "code": "String toString(){or<E<Sg,ding>> i =r(); if (!t())(\"n\"); for (; ; ) { y<g> e =t();d(e); if (xt) d().d(\"\").d('n');}}", "n_tokens": 115, "n_pass": [831, 90, 61]}
{"time": "2021-02-22 08:37:00.143186", "score": "0.497", "loss": "1.0812", "code": "String toString(){r<E<Sg,ding>> i =r(); if (!t())(\"n\"); for (; ; ) { y<g> e =t();d(e); if (xt) d().d(\"\").d('n');}}", "n_tokens": 114, "n_pass": [832, 91, 62]}
{"time": "2021-02-22 08:37:02.789856", "score": "0.5281", "loss": "0.9262", "code": "String toString(){r<E<g,ding>> i =r(); if (!t())(\"n\"); for (; ; ) { y<g> e =t();d(e); if (xt) d().d(\"\").d('n');}}", "n_tokens": 113, "n_pass": [837, 92, 63]}
{"time": "2021-02-22 08:37:13.399178", "score": "0.5758", "loss": "0.6709", "code": "String toString(){r<E<g,dig>> i =r(); if (!t())(\"n\"); for (; ; ) { y<g> e =t();d(e); if (xt) d().d(\"\").d('n');}}", "n_tokens": 112, "n_pass": [842, 96, 64]}
{"time": "2021-02-22 08:37:18.662252", "score": "0.5758", "loss": "0.6709", "code": "String toString(){r<E<g,dig>>i =r(); if (!t())(\"n\"); for (; ; ) { y<g> e =t();d(e); if (xt) d().d(\"\").d('n');}}", "n_tokens": 111, "n_pass": [846, 98, 65]}
{"time": "2021-02-22 08:37:21.295934", "score": "0.5758", "loss": "0.6709", "code": "String toString(){r<E<g,dig>>i=r(); if (!t())(\"n\"); for (; ; ) { y<g> e =t();d(e); if (xt) d().d(\"\").d('n');}}", "n_tokens": 110, "n_pass": [848, 99, 66]}
{"time": "2021-02-22 08:37:23.947898", "score": "0.5758", "loss": "0.6709", "code": "String toString(){r<E<g,dig>>i=r();if (!t())(\"n\"); for (; ; ) { y<g> e =t();d(e); if (xt) d().d(\"\").d('n');}}", "n_tokens": 109, "n_pass": [854, 100, 67]}
{"time": "2021-02-22 08:37:26.600154", "score": "0.5758", "loss": "0.6709", "code": "String toString(){r<E<g,dig>>i=r();if(!t())(\"n\"); for (; ; ) { y<g> e =t();d(e); if (xt) d().d(\"\").d('n');}}", "n_tokens": 108, "n_pass": [857, 101, 68]}
{"time": "2021-02-22 08:37:29.255988", "score": "0.5054", "loss": "0.8251", "code": "String toString(){r<E<g,dig>>i=r();if(t())(\"n\"); for (; ; ) { y<g> e =t();d(e); if (xt) d().d(\"\").d('n');}}", "n_tokens": 107, "n_pass": [859, 102, 69]}
{"time": "2021-02-22 08:37:31.903350", "score": "0.5125", "loss": "0.8125", "code": "String toString(){r<E<g,dig>>i=r();if(t())(\"\"); for (; ; ) { y<g> e =t();d(e); if (xt) d().d(\"\").d('n');}}", "n_tokens": 106, "n_pass": [866, 103, 70]}
{"time": "2021-02-22 08:37:34.530170", "score": "0.5125", "loss": "0.8125", "code": "String toString(){r<E<g,dig>>i=r();if(t())(\"\");for (; ; ) { y<g> e =t();d(e); if (xt) d().d(\"\").d('n');}}", "n_tokens": 105, "n_pass": [870, 104, 71]}
{"time": "2021-02-22 08:37:37.175015", "score": "0.5125", "loss": "0.8125", "code": "String toString(){r<E<g,dig>>i=r();if(t())(\"\");for(; ; ) { y<g> e =t();d(e); if (xt) d().d(\"\").d('n');}}", "n_tokens": 104, "n_pass": [874, 105, 72]}
{"time": "2021-02-22 08:37:39.810755", "score": "0.5125", "loss": "0.8125", "code": "String toString(){r<E<g,dig>>i=r();if(t())(\"\");for(;; ) { y<g> e =t();d(e); if (xt) d().d(\"\").d('n');}}", "n_tokens": 103, "n_pass": [877, 106, 73]}
{"time": "2021-02-22 08:37:42.440558", "score": "0.5125", "loss": "0.8125", "code": "String toString(){r<E<g,dig>>i=r();if(t())(\"\");for(;;) { y<g> e =t();d(e); if (xt) d().d(\"\").d('n');}}", "n_tokens": 102, "n_pass": [879, 107, 74]}
{"time": "2021-02-22 08:37:45.067294", "score": "0.5125", "loss": "0.8125", "code": "String toString(){r<E<g,dig>>i=r();if(t())(\"\");for(;;){ y<g> e =t();d(e); if (xt) d().d(\"\").d('n');}}", "n_tokens": 101, "n_pass": [881, 108, 75]}
{"time": "2021-02-22 08:37:47.699448", "score": "0.5125", "loss": "0.8125", "code": "String toString(){r<E<g,dig>>i=r();if(t())(\"\");for(;;){y<g> e =t();d(e); if (xt) d().d(\"\").d('n');}}", "n_tokens": 100, "n_pass": [883, 109, 76]}
{"time": "2021-02-22 08:37:50.717618", "score": "0.5125", "loss": "0.8125", "code": "String toString(){r<E<g,dig>>i=r();if(t())(\"\");for(;;){y<g>e =t();d(e); if (xt) d().d(\"\").d('n');}}", "n_tokens": 99, "n_pass": [888, 110, 77]}
{"time": "2021-02-22 08:37:53.375701", "score": "0.5125", "loss": "0.8125", "code": "String toString(){r<E<g,dig>>i=r();if(t())(\"\");for(;;){y<g>e=t();d(e); if (xt) d().d(\"\").d('n');}}", "n_tokens": 98, "n_pass": [890, 111, 78]}
{"time": "2021-02-22 08:37:56.395052", "score": "0.9713", "loss": "0.0621", "code": "String toString(){r<E<g,dig>>i=r();if(t())(\"\");for(;;){y<g>e=t();(e); if (xt) d().d(\"\").d('n');}}", "n_tokens": 97, "n_pass": [896, 112, 79]}
{"time": "2021-02-22 08:37:59.024581", "score": "0.9713", "loss": "0.0621", "code": "String toString(){r<E<g,dig>>i=r();if(t())(\"\");for(;;){y<g>e=t();(e);if (xt) d().d(\"\").d('n');}}", "n_tokens": 96, "n_pass": [901, 113, 80]}
{"time": "2021-02-22 08:38:01.653898", "score": "0.9713", "loss": "0.0621", "code": "String toString(){r<E<g,dig>>i=r();if(t())(\"\");for(;;){y<g>e=t();(e);if(xt) d().d(\"\").d('n');}}", "n_tokens": 95, "n_pass": [904, 114, 81]}
{"time": "2021-02-22 08:38:04.296926", "score": "0.9714", "loss": "0.0619", "code": "String toString(){r<E<g,dig>>i=r();if(t())(\"\");for(;;){y<g>e=t();(e);if(t) d().d(\"\").d('n');}}", "n_tokens": 94, "n_pass": [906, 115, 82]}
{"time": "2021-02-22 08:38:06.913829", "score": "0.9714", "loss": "0.0619", "code": "String toString(){r<E<g,dig>>i=r();if(t())(\"\");for(;;){y<g>e=t();(e);if(t)d().d(\"\").d('n');}}", "n_tokens": 93, "n_pass": [909, 116, 83]}
{"time": "2021-02-22 08:38:15.150105", "score": "0.2597", "loss": "2.0258", "code": "Sting toString(){r<E<g,dig>>i=r();if(t())(\"\");for(;;){y<g>e=t();(e);if(t)d().d(\"\").d('n');}}", "n_tokens": 92, "n_pass": [931, 119, 84]}

Minimal simplified code:
Sting toString(){r<E<g,dig>>i=r();if(t())("");for(;;){y<g>e=t();(e);if(t)d().d("").d('n');}}

