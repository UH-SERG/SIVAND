
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/udacity__ud851-Sunshine/S11.03-Exercise-DetailLayoutAndDataBinding/app/src/main/java/com/example/android/sunshine/data/WeatherProvider_query.java
method_name = query
method_body = @Override public Cursor query(@NonNull Uri uri, String[] projection, String selection, String[] selectionArgs, String sortOrder) { Cursor cursor; switch(sUriMatcher.match(uri)) { case CODE_WEATHER_WITH_DATE: { String normalizedUtcDateString = uri.getLastPathSegment(); String[] selectionArguments = new String[] { normalizedUtcDateString }; cursor = mOpenHelper.getReadableDatabase().query(WeatherContract.WeatherEntry.TABLE_NAME, projection, WeatherContract.WeatherEntry.COLUMN_DATE + " = ? ", selectionArguments, null, null, sortOrder); break; } case CODE_WEATHER: { cursor = mOpenHelper.getReadableDatabase().query(WeatherContract.WeatherEntry.TABLE_NAME, projection, selection, selectionArgs, null, null, sortOrder); break; } default: throw new UnsupportedOperationException("Unknown uri: " + uri); } cursor.setNotificationUri(getContext().getContentResolver(), uri); return cursor; }
predict, score, loss = query, 0.9654573798179626, 0.19348616898059845

Trace of simplified code(s):
{"time": "2021-02-25 06:38:36.753408", "score": "0.8721", "loss": "0.71", "code": "@Override public Cursor query(@NonNull Uri uri, String[] projection, String selection, String[] selectionArgs, String sortOrder) { Cursor cursor; switch(sUriMatcher.match(uri)) { case CODE_WEATHER_WITH_DATE: { String normalizedUtcDateString = uri.getLastPathSegment(); String[] selectionArguments = new String[] { normalizedUtcDateString }; cursor = mOpenHelper.getReadableDatabase().query(WeatherContract.WeatherEntry.TABLE_NAME, projection, WeatherContract.WeatherEntry.COLUMN_DATE + \" = ? \", selectionArguments, null, null, sortOrder); break; } case CODE_WEATHER: { cursor = mOpenHelper.getReadableDatabase().query(WeatherContract.WeatherEntry.TABLE_NAME, projection, selection, selectionArgs, null, null, sortOrder); break; } default: throw new UnsupportedOperationException(\"Unknown uri: \" + uri); } cursor.setNotificationUri(getContext().getContentResolver(), uri); return cursor; }", "n_tokens": 888, "n_pass": [1, 1, 1]}
{"time": "2021-02-25 06:38:39.501256", "score": "0.9774", "loss": "0.0464", "code": "@Override public Cursor query(@NonNull Uri uri, String[] projection, String selection, String[] selectionArgs, String sortOrder) { Cursor cursor; switch(sUriMatcher.match(uri)) { case CODE_WEATHER_WITH_DATE: { String normalizedUtcDateString = uri.getLastPathSegment(); String[] selectionArguments = new String[] { normalizedUtcDateString }; cursor = mOpenHelper.getReadableDatabase().query(WeatherContract.WeatherEntry.TABLE_NAME, projection, Wion, selection, selectionArgs, null, null, sortOrder); break; } default: throw new UnsupportedOperationException(\"Unknown uri: \" + uri); } cursor.setNotificationUri(getContext().getContentResolver(), uri); return cursor; }", "n_tokens": 666, "n_pass": [10, 2, 2]}
{"time": "2021-02-25 06:38:42.296297", "score": "0.9584", "loss": "0.1651", "code": "@Override public Cursor query(@NonNull Uri uri, String[] projection, String selection, String[] selectionArgs, String sortOrder) { Cursor cursor; switch(sUriMatcher.match(uri)) { case CODE_WEATHER_WITH_DATE: { String normalizedUtcDateString = uri.getLastPathSegment(); String[] selectionArguments = new String[] { normalizedUtcDateString }; cursor = mOpenHelper.getReadableDatabase().query(WeatherContract.WeatherEntry.TABLE_NAME, projection,rgs, null, null, sortOrder); break; } default: throw new UnsupportedOperationException(\"Unknown uri: \" + uri); } cursor.setNotificationUri(getContext().getContentResolver(), uri); return cursor; }", "n_tokens": 638, "n_pass": [73, 3, 3]}
{"time": "2021-02-25 06:38:45.035329", "score": "0.9752", "loss": "0.1027", "code": "@Override public Cursor query(@NonNull Uri uri, String[] projection, String selection, String[] selectionArgs, String sortOrder) { Cursor cursor; switch(sUriMatcher.match(uri)) { case CODE_WEATHER_WITH_DATE: { String normalizedUtcDateString = uri.getLastPathSegment(); String[] selectionArguments = new String[] { normalizedUtcDateString }; cursor = mOpenHelper.getReadableDatabase().query(WeatherContract.WeatherEntry.TABLE_NAME, projection,rgs, null, null, sortOrder); break; } default: throw newon(\"Unknown uri: \" + uri); } cursor.setNotificationUri(getContext().getContentResolver(), uri); return cursor; }", "n_tokens": 610, "n_pass": [75, 4, 4]}
{"time": "2021-02-25 06:38:47.777360", "score": "0.9669", "loss": "0.152", "code": "@Override public Cursor query(@NonNull Uri uri, String[] projection, String selection, String[] selectionArgs, String sortOrder) { Cursor cursor; switch(sUriMatcher.match(uri)) { case CODE_WEATHER_WITH_DATE: { String normalizedUtcDateString = uri.getLastPathSegment(); String[] selectionArguments = new String[] { normalizedUtcDateString }; cursor = mOpenHelper.getReadableDatabase().query(WeatherContract.WeatherEntry.TABLE_NAME, projection,rgs, null, null, sortOrder); break; } default: throw newon(\"Unknown uri: \" + uri); } cursor.setNotificationUri(ger(), uri); return cursor; }", "n_tokens": 582, "n_pass": [78, 5, 5]}
{"time": "2021-02-25 06:38:50.919279", "score": "0.8646", "loss": "1.0476", "code": "@Override public Cursor query(@NonNull Uri uri, String[] projection, String selecs, String sortOrder) { Cursor cursor; switch(sUriMatcher.match(uri)) { case CODE_WEATHER_WITH_DATE: { String normalizedUtcDateString = uri.getLastPathSegment(); String[] selectionArguments = new String[] { normalizedUtcDateString }; cursor = mOpenHelper.getReadableDatabase().query(WeatherContract.WeatherEntry.TABLE_NAME, projection,rgs, null, null, sortOrder); break; } default: throw newon(\"Unknown uri: \" + uri); } cursor.setNotificationUri(ger(), uri); return cursor; }", "n_tokens": 555, "n_pass": [83, 6, 6]}
{"time": "2021-02-25 06:38:53.678473", "score": "0.9663", "loss": "0.1076", "code": "@Override public Cursor query(@NonNull Uri uri, String[] projection, String selecs, String sortOrder) { Cursor cursor; switch(sUriMatcher.match(uri)) { case CODE_WEATHER_WITH_DATE: { String normalizedUtcDateString = uri.getLastPathSegment(); String[] selectionArguments = new String[] { normalizedUtcDateString }; cursor = mOpenHelery(WeatherContract.WeatherEntry.TABLE_NAME, projection,rgs, null, null, sortOrder); break; } default: throw newon(\"Unknown uri: \" + uri); } cursor.setNotificationUri(ger(), uri); return cursor; }", "n_tokens": 527, "n_pass": [93, 7, 7]}
{"time": "2021-02-25 06:38:56.415167", "score": "0.7097", "loss": "1.3265", "code": "@Override public Cursor query(@NonNull Uri uri, String[] projection, String selecs, String sortOrder) { Cursor cursor; switch(sUriMatcher.match(uri)) { case CODE_WEATHER_WITH_DATE: { String normalizedUtcDateString = uri.getLastPathSegment(); String[] selectionArguments = new String[] { normalizedUtcDateString }; cursor = mOpenHelery(WeatherContract.WeatherErgs, null, null, sortOrder); break; } default: throw newon(\"Unknown uri: \" + uri); } cursor.setNotificationUri(ger(), uri); return cursor; }", "n_tokens": 499, "n_pass": [95, 8, 8]}
{"time": "2021-02-25 06:38:59.530349", "score": "0.9672", "loss": "0.1296", "code": "@Override public Cursor query(@NonNull Uri uri, String[] projection, String selecs, String sortOrder) { Cursor cursor; switch(sUriMatcher.match(uri)) { case CODE_WEATHER_WITH_DATE: { String normalizedUtcDateString = uri.getLastPathSegment(); String[] selectionArguments = new String[] { normalizedUtcDateString }; cursor = mOpenHelery(WeatherContract.WeatherEl, sortOrder); break; } default: throw newon(\"Unknown uri: \" + uri); } cursor.setNotificationUri(ger(), uri); return cursor; }", "n_tokens": 485, "n_pass": [150, 9, 9]}
{"time": "2021-02-25 06:39:02.278504", "score": "0.9951", "loss": "0.0172", "code": "@Override public Cursor query(@NonNull Uri uri, String[] projection, String selecs, String sortOrder) { Cursor cursor; switch(sUriMatcher.match(uri)) { case CODE_WEATHER_WITH_DATE: { String normalizedUtcDateString = uri.getLastPathSegment(); String[] selectionArguments = new String[] { normalizedUtcDateString }; cursor = mOpenHelery(WeatherContract.WeatherEl, sortOrder); break; } defaon(\"Unknown uri: \" + uri); } cursor.setNotificationUri(ger(), uri); return cursor; }", "n_tokens": 471, "n_pass": [152, 10, 10]}
{"time": "2021-02-25 06:39:05.015459", "score": "0.6776", "loss": "1.2853", "code": "@Override public Cursor query(@NonNull Uri uri, String[] projection, String selecs, String sortOrder) { Cursor cursor; switch(sUriMatcher.match(uri)) { case CODE_WEATHER_WITH_DATE: { String normalizedUtcDateString = uri.getLastPathSegment(); String[] selectionArguments = new String[] { normalizedUtcDateString }; cursor = mOpenHelery(WeatherContract.WeatherEl, sortOrder); break; } defaon(\"Unknown uri: \" + uri); }ificationUri(ger(), uri); return cursor; }", "n_tokens": 457, "n_pass": [155, 11, 11]}
{"time": "2021-02-25 06:39:08.188886", "score": "0.8902", "loss": "0.4619", "code": "@Override public Cursor query(@NonNull ng[] projection, String selecs, String sortOrder) { Cursor cursor; switch(sUriMatcher.match(uri)) { case CODE_WEATHER_WITH_DATE: { String normalizedUtcDateString = uri.getLastPathSegment(); String[] selectionArguments = new String[] { normalizedUtcDateString }; cursor = mOpenHelery(WeatherContract.WeatherEl, sortOrder); break; } defaon(\"Unknown uri: \" + uri); }ificationUri(ger(), uri); return cursor; }", "n_tokens": 444, "n_pass": [162, 12, 12]}
{"time": "2021-02-25 06:39:16.401171", "score": "0.7956", "loss": "0.9469", "code": "@Override public Cursor query(@NonNull ng[] projection, String selecs, String sortOrder) { Cursor cursor; switch(sUriMatcher.match(uri)) { case CODE_WTE: { String normalizedUtcDateString = uri.getLastPathSegment(); String[] selectionArguments = new String[] { normalizedUtcDateString }; cursor = mOpenHelery(WeatherContract.WeatherEl, sortOrder); break; } defaon(\"Unknown uri: \" + uri); }ificationUri(ger(), uri); return cursor; }", "n_tokens": 430, "n_pass": [171, 15, 13]}
{"time": "2021-02-25 06:39:19.132181", "score": "0.8427", "loss": "0.4814", "code": "@Override public Cursor query(@NonNull ng[] projection, String selecs, String sortOrder) { Cursor cursor; switch(sUriMatcher.match(uri)) { case CODE_WTE: { String nteString = uri.getLastPathSegment(); String[] selectionArguments = new String[] { normalizedUtcDateString }; cursor = mOpenHelery(WeatherContract.WeatherEl, sortOrder); break; } defaon(\"Unknown uri: \" + uri); }ificationUri(ger(), uri); return cursor; }", "n_tokens": 416, "n_pass": [173, 16, 14]}
{"time": "2021-02-25 06:39:21.849561", "score": "0.5633", "loss": "0.9134", "code": "@Override public Cursor query(@NonNull ng[] projection, String selecs, String sortOrder) { Cursor cursor; switch(sUriMatcher.match(uri)) { case CODE_WTE: { String nteString = urigment(); String[] selectionArguments = new String[] { normalizedUtcDateString }; cursor = mOpenHelery(WeatherContract.WeatherEl, sortOrder); break; } defaon(\"Unknown uri: \" + uri); }ificationUri(ger(), uri); return cursor; }", "n_tokens": 402, "n_pass": [175, 17, 15]}
{"time": "2021-02-25 06:39:24.590854", "score": "0.7106", "loss": "0.8615", "code": "@Override public Cursor query(@NonNull ng[] projection, String selecs, String sortOrder) { Cursor cursor; switch(sUriMatcher.match(uri)) { case CODE_WTE: { String nteString = urigment(); Strinrguments = new String[] { normalizedUtcDateString }; cursor = mOpenHelery(WeatherContract.WeatherEl, sortOrder); break; } defaon(\"Unknown uri: \" + uri); }ificationUri(ger(), uri); return cursor; }", "n_tokens": 388, "n_pass": [177, 18, 16]}
{"time": "2021-02-25 06:39:27.318914", "score": "0.4742", "loss": "1.1615", "code": "@Override public Cursor query(@NonNull ng[] projection, String selecs, String sortOrder) { Cursor cursor; switch(sUriMatcher.match(uri)) { case CODE_WTE: { String nteString = urigment(); Strinrguments = new String[] { noeString }; cursor = mOpenHelery(WeatherContract.WeatherEl, sortOrder); break; } defaon(\"Unknown uri: \" + uri); }ificationUri(ger(), uri); return cursor; }", "n_tokens": 374, "n_pass": [180, 19, 17]}
{"time": "2021-02-25 06:39:30.035223", "score": "0.5114", "loss": "1.2558", "code": "@Override public Cursor query(@NonNull ng[] projection, String selecs, String sortOrder) { Cursor cursor; switch(sUriMatcher.match(uri)) { case CODE_WTE: { String nteString = urigment(); Strinrguments = new String[] { noeString }; curery(WeatherContract.WeatherEl, sortOrder); break; } defaon(\"Unknown uri: \" + uri); }ificationUri(ger(), uri); return cursor; }", "n_tokens": 360, "n_pass": [182, 20, 18]}
{"time": "2021-02-25 06:39:32.765988", "score": "0.8583", "loss": "0.5313", "code": "@Override public Cursor query(@NonNull ng[] projection, String selecs, String sortOrder) { Cursor cursor; switch(sUriMatcher.match(uri)) { case CODE_WTE: { String nteString = urigment(); Strinrguments = new String[] { noeString }; curery(WeatherConl, sortOrder); break; } defaon(\"Unknown uri: \" + uri); }ificationUri(ger(), uri); return cursor; }", "n_tokens": 346, "n_pass": [184, 21, 19]}
{"time": "2021-02-25 06:39:41.330512", "score": "0.5365", "loss": "1.1212", "code": "@Override public Cursor query(@NonNull ng[] projection, String selecs, String sortOrder) { Cursor cursor; switch(sUriMatcher.match(uri)) { case CODE_WTE: { String nteString = urirguments = new String[] { noeString }; curery(WeatherConl, sortOrder); break; } defaon(\"Unknown uri: \" + uri); }ificationUri(ger(), uri); return cursor; }", "n_tokens": 332, "n_pass": [205, 24, 20]}
{"time": "2021-02-25 06:39:49.760563", "score": "0.806", "loss": "0.6096", "code": "@Override public Cursor query(@NonNull ng[] projection, String selecs, String sortOrder) { Cursor cursor; switch(sUriMatcher.match(uri)) { case CODE_WTE: { String nrguments = new String[] { noeString }; curery(WeatherConl, sortOrder); break; } defaon(\"Unknown uri: \" + uri); }ificationUri(ger(), uri); return cursor; }", "n_tokens": 318, "n_pass": [229, 27, 21]}
{"time": "2021-02-25 06:39:52.833178", "score": "0.6375", "loss": "1.3426", "code": "@Override public Cursor query(@NonNull ng[] projectiecs, String sortOrder) { Cursor cursor; switch(sUriMatcher.match(uri)) { case CODE_WTE: { String nrguments = new String[] { noeString }; curery(WeatherConl, sortOrder); break; } defaon(\"Unknown uri: \" + uri); }ificationUri(ger(), uri); return cursor; }", "n_tokens": 304, "n_pass": [245, 28, 22]}
{"time": "2021-02-25 06:40:03.978947", "score": "0.2627", "loss": "3.4606", "code": "@Override public Cursor query(@NonNull ng[] projectiecs, String sortOrder) { Cursor cursor; switch(sUer.match(uri)) { case CODE_WTE: { String nrguments = new String[] { noeString }; curery(WeatherConl, sortOrder); break; } defaon(\"Unknown uri: \" + uri); }ificationUri(ger(), uri); return cursor; }", "n_tokens": 297, "n_pass": [319, 32, 23]}
{"time": "2021-02-25 06:40:09.375955", "score": "0.2386", "loss": "3.6547", "code": "@Override public Cursor query(@NonNull ng[] projectiecs, String sortOrder) { Cursor cursor; switch(sUer.match(uri)) { case CODE_WTE: { Srguments = new String[] { noeString }; curery(WeatherConl, sortOrder); break; } defaon(\"Unknown uri: \" + uri); }ificationUri(ger(), uri); return cursor; }", "n_tokens": 290, "n_pass": [325, 34, 24]}
{"time": "2021-02-25 06:40:12.034287", "score": "0.1936", "loss": "4.3777", "code": "@Override public Cursor query(@NonNull ng[] projectiecs, String sortOrder) { Cursor cursor; switch(sUer.match(uri)) { case CODE_WTE: { Ss = new String[] { noeString }; curery(WeatherConl, sortOrder); break; } defaon(\"Unknown uri: \" + uri); }ificationUri(ger(), uri); return cursor; }", "n_tokens": 283, "n_pass": [326, 35, 25]}
{"time": "2021-02-25 06:40:14.688964", "score": "0.2493", "loss": "4.1461", "code": "@Override public Cursor query(@NonNull ng[] projectiecs, String sortOrder) { Cursor cursor; switch(sUer.match(uri)) { case CODE_WTE: { Ss = new String[] { no }; curery(WeatherConl, sortOrder); break; } defaon(\"Unknown uri: \" + uri); }ificationUri(ger(), uri); return cursor; }", "n_tokens": 276, "n_pass": [330, 36, 26]}
{"time": "2021-02-25 06:40:17.342526", "score": "0.3357", "loss": "3.6231", "code": "@Override public Cursor query(@NonNull ng[] projectiecs, String sortOrder) { Cursor cursor; switch(sUer.match(uri)) { case CODE_WTE: { Ss = new String[] { no }; curery(Weal, sortOrder); break; } defaon(\"Unknown uri: \" + uri); }ificationUri(ger(), uri); return cursor; }", "n_tokens": 269, "n_pass": [333, 37, 27]}
{"time": "2021-02-25 06:40:20.053701", "score": "0.1896", "loss": "4.7408", "code": "@Override public Cursor query(@NonNull ng[] projectiecs, String sortOrder) { Cursor cursor; switch(sUer.match(uri)) { case CODE_WTE: { Ss = new String[] { no }; curery(WeaOrder); break; } defaon(\"Unknown uri: \" + uri); }ificationUri(ger(), uri); return cursor; }", "n_tokens": 262, "n_pass": [334, 38, 28]}
{"time": "2021-02-25 06:40:22.717841", "score": "0.1877", "loss": "4.7316", "code": "@Override public Cursor query(@NonNull ng[] projectiecs, String sortOrder) { Cursor cursor; switch(sUer.match(uri)) { case CODE_WTE: { Ss = new String[] { no }; curery(WeaOrder); } defaon(\"Unknown uri: \" + uri); }ificationUri(ger(), uri); return cursor; }", "n_tokens": 255, "n_pass": [336, 39, 29]}
{"time": "2021-02-25 06:40:28.054461", "score": "0.1974", "loss": "4.6558", "code": "@Override public Cursor query(@NonNull ng[] projectiecs, String sortOrder) { Cursor cursor; switch(sUer.match(uri)) { case CODE_WTE: { Ss = new String[] { no }; curery(WeaOrder); } defaon(\"Unknown uri: \" + uri); }onUri(ger(), uri); return cursor; }", "n_tokens": 248, "n_pass": [342, 41, 30]}
{"time": "2021-02-25 06:40:30.755164", "score": "0.2419", "loss": "2.6524", "code": "@Override public Cursor query(@NonNull ng[] projectiecs, String sortOrder) { Cursor cursor; switch(sUer.match(uri)) { case CODE_WTE: { Ss = new String[] { no }; curery(WeaOrder); } defaon(\"Unknown uri: \" + uri); }onUri(gri); return cursor; }", "n_tokens": 241, "n_pass": [344, 42, 31]}
{"time": "2021-02-25 06:40:33.413367", "score": "0.2876", "loss": "3.3903", "code": "@Override public Cursor query(@NonNull ng[] projectiecs, String sortOrder) { Cursor cursor; switch(sUer.match(uri)) { case CODE_WTE: { Ss = new String[] { no }; curery(WeaOrder); } defaon(\"Unknown uri: \" + uri); }onUri(gri); rersor; }", "n_tokens": 234, "n_pass": [346, 43, 32]}
{"time": "2021-02-25 06:40:36.086054", "score": "0.2801", "loss": "3.437", "code": "@Overrblic Cursor query(@NonNull ng[] projectiecs, String sortOrder) { Cursor cursor; switch(sUer.match(uri)) { case CODE_WTE: { Ss = new String[] { no }; curery(WeaOrder); } defaon(\"Unknown uri: \" + uri); }onUri(gri); rersor; }", "n_tokens": 228, "n_pass": [349, 44, 33]}
{"time": "2021-02-25 06:40:39.557892", "score": "0.2801", "loss": "3.437", "code": "@Overrblic Cursor query(@NonNull ng[] pecs, String sortOrder) { Cursor cursor; switch(sUer.match(uri)) { case CODE_WTE: { Ss = new String[] { no }; curery(WeaOrder); } defaon(\"Unknown uri: \" + uri); }onUri(gri); rersor; }", "n_tokens": 221, "n_pass": [355, 45, 34]}
{"time": "2021-02-25 06:40:44.849587", "score": "0.2723", "loss": "3.5643", "code": "@Overrblic Cursor query(@NonNull ng[] pecs, String sortOrder) { Cursor; switch(sUer.match(uri)) { case CODE_WTE: { Ss = new String[] { no }; curery(WeaOrder); } defaon(\"Unknown uri: \" + uri); }onUri(gri); rersor; }", "n_tokens": 214, "n_pass": [360, 47, 35]}
{"time": "2021-02-25 06:40:56.348424", "score": "0.2475", "loss": "3.6893", "code": "@Overrblic Cursor query(@NonNull ng[] pecs, String sortOrder) {rsor; switch(sUer.match(uri)) { case CODE_WTE: { Ss = new String[] { no }; curery(WeaOrder); } defaon(\"Unknown uri: \" + uri); }onUri(gri); rersor; }", "n_tokens": 211, "n_pass": [455, 51, 36]}
{"time": "2021-02-25 06:40:58.995293", "score": "0.2492", "loss": "3.6746", "code": "@Overrblic Cursor query(@NonNull ng[] pecs, String sortOrder) {r; switch(sUer.match(uri)) { case CODE_WTE: { Ss = new String[] { no }; curery(WeaOrder); } defaon(\"Unknown uri: \" + uri); }onUri(gri); rersor; }", "n_tokens": 208, "n_pass": [456, 52, 37]}
{"time": "2021-02-25 06:41:01.656033", "score": "0.2457", "loss": "3.6915", "code": "@Overrblic Cursor query(@NonNull ng[] pecs, String sortOrder) {switch(sUer.match(uri)) { case CODE_WTE: { Ss = new String[] { no }; curery(WeaOrder); } defaon(\"Unknown uri: \" + uri); }onUri(gri); rersor; }", "n_tokens": 205, "n_pass": [457, 53, 38]}
{"time": "2021-02-25 06:41:12.244621", "score": "0.2525", "loss": "3.4769", "code": "@Overrblic Cursor query(@NonNull ng[] pecs, String sortOrder) {switch(sUer.match(uri)) { case CODE: { Ss = new String[] { no }; curery(WeaOrder); } defaon(\"Unknown uri: \" + uri); }onUri(gri); rersor; }", "n_tokens": 201, "n_pass": [469, 57, 39]}
{"time": "2021-02-25 06:41:14.917743", "score": "0.2536", "loss": "3.4651", "code": "@Overrblic Cursor query(@NonNull ng[] pecs, String sortOrder) {switch(sUer.match(uri)) { case CODE: { Ss = new St[] { no }; curery(WeaOrder); } defaon(\"Unknown uri: \" + uri); }onUri(gri); rersor; }", "n_tokens": 197, "n_pass": [474, 58, 40]}
{"time": "2021-02-25 06:41:17.613258", "score": "0.2624", "loss": "3.4154", "code": "@Overrblic Cursor query(@NonNull ng[] pecs, String sortOrder) {switch(sUer.match(uri)) { case CODE: { Ss = new St[] {}; curery(WeaOrder); } defaon(\"Unknown uri: \" + uri); }onUri(gri); rersor; }", "n_tokens": 193, "n_pass": [476, 59, 41]}
{"time": "2021-02-25 06:41:20.280155", "score": "0.2954", "loss": "3.4508", "code": "@Overrblic Cursor query(@NonNull ng[] pecs, String sortOrder) {switch(sUer.match(uri)) { case CODE: { Ss = new St[] {}; cy(WeaOrder); } defaon(\"Unknown uri: \" + uri); }onUri(gri); rersor; }", "n_tokens": 189, "n_pass": [478, 60, 42]}
{"time": "2021-02-25 06:41:22.938592", "score": "0.2954", "loss": "3.4508", "code": "@Overrblic Cursor query(@NonNull ng[] pecs, String sortOrder) {switch(sUer.match(uri)) { case CODE: { Ss = new St[] {}; cy(Weer); } defaon(\"Unknown uri: \" + uri); }onUri(gri); rersor; }", "n_tokens": 185, "n_pass": [480, 61, 43]}
{"time": "2021-02-25 06:41:25.592746", "score": "0.3773", "loss": "3.2134", "code": "@Overrblic Cursor query(@NonNull ng[] pecs, String sortOrder) {switch(sUer.match(uri)) { case CODE: { Ss = new St[] {}; cy(Weer); } dn(\"Unknown uri: \" + uri); }onUri(gri); rersor; }", "n_tokens": 181, "n_pass": [483, 62, 44]}
{"time": "2021-02-25 06:41:36.225543", "score": "0.38", "loss": "3.1036", "code": "@Overrblic Cursor query(@NonNull ng[] pecs, String sortOrder) {switch(sUer.match(uri)) { case CODE: { Ss = new St[] {}; cy(Weer); } dn(\"Unknown uri: \" + uri); }o(gri); rersor; }", "n_tokens": 177, "n_pass": [491, 66, 45]}
{"time": "2021-02-25 06:41:38.873640", "score": "0.3637", "loss": "3.1667", "code": "@Overrblic Cursor query(@NonNull ng[] pecs, String sortOrder) {switch(sUer.match(uri)) { case CODE: { Ss = new St[] {}; cy(Weer); } dn(\"Unknown uri: \" + uri); }o(gri); rr; }", "n_tokens": 173, "n_pass": [494, 67, 46]}
{"time": "2021-02-25 06:41:41.541844", "score": "0.3637", "loss": "3.1667", "code": "@Ovblic Cursor query(@NonNull ng[] pecs, String sortOrder) {switch(sUer.match(uri)) { case CODE: { Ss = new St[] {}; cy(Weer); } dn(\"Unknown uri: \" + uri); }o(gri); rr; }", "n_tokens": 170, "n_pass": [497, 68, 47]}
{"time": "2021-02-25 06:41:44.184413", "score": "0.4221", "loss": "3.0545", "code": "@Ovc Cursor query(@NonNull ng[] pecs, String sortOrder) {switch(sUer.match(uri)) { case CODE: { Ss = new St[] {}; cy(Weer); } dn(\"Unknown uri: \" + uri); }o(gri); rr; }", "n_tokens": 167, "n_pass": [498, 69, 48]}
{"time": "2021-02-25 06:41:47.223664", "score": "0.2432", "loss": "3.7936", "code": "@Ovc Cor query(@NonNull ng[] pecs, String sortOrder) {switch(sUer.match(uri)) { case CODE: { Ss = new St[] {}; cy(Weer); } dn(\"Unknown uri: \" + uri); }o(gri); rr; }", "n_tokens": 164, "n_pass": [500, 70, 49]}
{"time": "2021-02-25 06:41:53.350383", "score": "0.3098", "loss": "3.444", "code": "@Ovc Cor query(@NonNull ng[] p, String sortOrder) {switch(sUer.match(uri)) { case CODE: { Ss = new St[] {}; cy(Weer); } dn(\"Unknown uri: \" + uri); }o(gri); rr; }", "n_tokens": 161, "n_pass": [509, 72, 50]}
{"time": "2021-02-25 06:42:09.358963", "score": "0.247", "loss": "3.8613", "code": "@Ovc Cor query(@NonNull ng[] p, String sortOrder) {switch(sUer.ch(uri)) { case CODE: { Ss = new St[] {}; cy(Weer); } dn(\"Unknown uri: \" + uri); }o(gri); rr; }", "n_tokens": 158, "n_pass": [521, 78, 51]}
{"time": "2021-02-25 06:42:12.003886", "score": "0.1986", "loss": "4.2919", "code": "@Ovc Cor query(@NonNull ng[] p, String sortOrder) {switch(sUer.ch()) { case CODE: { Ss = new St[] {}; cy(Weer); } dn(\"Unknown uri: \" + uri); }o(gri); rr; }", "n_tokens": 155, "n_pass": [523, 79, 52]}
{"time": "2021-02-25 06:42:44.047986", "score": "0.1663", "loss": "4.1999", "code": "@Ovc Cor query(@NonNull ng[] p, String sortOrder) {switch(sUer.ch()) { case CE: { Ss = new St[] {}; cy(Weer); } dn(\"Unknown uri: \" + uri); }o(gri); rr; }", "n_tokens": 153, "n_pass": [666, 90, 53]}
{"time": "2021-02-25 06:42:46.724448", "score": "0.1773", "loss": "4.1196", "code": "@Ovc Cor query(@NonNull ng[] p, String sortOrder) {switch(sUer.ch()) { case CE: {s = new St[] {}; cy(Weer); } dn(\"Unknown uri: \" + uri); }o(gri); rr; }", "n_tokens": 151, "n_pass": [669, 91, 54]}
{"time": "2021-02-25 06:42:52.029111", "score": "0.1746", "loss": "4.0816", "code": "@Ovc Cor query(@NonNull ng[] p, String sortOrder) {switch(sUer.ch()) { case CE: {s = new St[] {}; cy(er); } dn(\"Unknown uri: \" + uri); }o(gri); rr; }", "n_tokens": 149, "n_pass": [680, 93, 55]}
{"time": "2021-02-25 06:42:54.675584", "score": "0.1922", "loss": "3.9756", "code": "@Ovc Cor query(@NonNull ng[] p, String sortOrder) {switch(sUer.ch()) { case CE: {s = new St[] {}; cy(); } dn(\"Unknown uri: \" + uri); }o(gri); rr; }", "n_tokens": 147, "n_pass": [681, 94, 56]}
{"time": "2021-02-25 06:42:57.333946", "score": "0.2379", "loss": "3.7064", "code": "@Ovc Cor query(@NonNull ng[] p, String sortOrder) {switch(sUer.ch()) { case CE: {s = new St[] {}; cy(); }n(\"Unknown uri: \" + uri); }o(gri); rr; }", "n_tokens": 145, "n_pass": [684, 95, 57]}
{"time": "2021-02-25 06:43:13.207709", "score": "0.2379", "loss": "3.7064", "code": "@Ovc Cor query(@NonNull ng[] p, String sortOrder) {switch(sUer.ch()) { case CE: {s = new St[] {}; cy(); }n(\"Unknown uri\" + uri); }o(gri); rr; }", "n_tokens": 143, "n_pass": [692, 101, 58]}
{"time": "2021-02-25 06:43:15.842523", "score": "0.2244", "loss": "3.8092", "code": "@Ovc Cor query(@NonNull ng[] p, String sortOrder) {switch(sUer.ch()) { case CE: {s = new St[] {}; cy(); }n(\"Unknown uri\" + i); }o(gri); rr; }", "n_tokens": 141, "n_pass": [695, 102, 59]}
{"time": "2021-02-25 06:43:18.493361", "score": "0.3079", "loss": "2.7429", "code": "@Ovc Cor query(@NonNull ng[] p, String sortOrder) {switch(sUer.ch()) { case CE: {s = new St[] {}; cy(); }n(\"Unknown uri\" + i); }o(g); rr; }", "n_tokens": 139, "n_pass": [700, 103, 60]}
{"time": "2021-02-25 06:43:21.129150", "score": "0.3461", "loss": "2.6136", "code": "@Ovc Cor query(@NonNull ng[] p, String sortOrder) {switch(sUer.ch()) { case CE: {s = new St[] {}; cy(); }n(\"Unknown uri\" + i); }o(g);r; }", "n_tokens": 137, "n_pass": [702, 104, 61]}
{"time": "2021-02-25 06:43:23.764396", "score": "0.3442", "loss": "2.6144", "code": "@Ovc Cor query(@NonNull ng[] p, String sortOrder) {switch(sUer.ch()) { case CE: {s = new St[] {}; cy(); }n(\"Unknown uri\" + i); }o(g); }", "n_tokens": 135, "n_pass": [703, 105, 62]}
{"time": "2021-02-25 06:43:29.042703", "score": "0.272", "loss": "2.7035", "code": "@Oc Cor query(@NonNull ng[] p, String sortOrder) {switch(sUer.ch()) { case CE: {s = new St[] {}; cy(); }n(\"Unknown uri\" + i); }o(g); }", "n_tokens": 134, "n_pass": [707, 107, 63]}
{"time": "2021-02-25 06:43:31.698965", "score": "0.2538", "loss": "2.7123", "code": "@O Cor query(@NonNull ng[] p, String sortOrder) {switch(sUer.ch()) { case CE: {s = new St[] {}; cy(); }n(\"Unknown uri\" + i); }o(g); }", "n_tokens": 133, "n_pass": [708, 108, 64]}
{"time": "2021-02-25 06:43:37.390394", "score": "0.2001", "loss": "2.9749", "code": "@O Cr query(@NonNull ng[] p, String sortOrder) {switch(sUer.ch()) { case CE: {s = new St[] {}; cy(); }n(\"Unknown uri\" + i); }o(g); }", "n_tokens": 132, "n_pass": [711, 110, 65]}
{"time": "2021-02-25 06:43:40.043264", "score": "0.2413", "loss": "2.7339", "code": "@O C query(@NonNull ng[] p, String sortOrder) {switch(sUer.ch()) { case CE: {s = new St[] {}; cy(); }n(\"Unknown uri\" + i); }o(g); }", "n_tokens": 131, "n_pass": [712, 111, 66]}
{"time": "2021-02-25 06:43:45.081088", "score": "0.2411", "loss": "2.7385", "code": "@O C query(@onNull ng[] p, String sortOrder) {switch(sUer.ch()) { case CE: {s = new St[] {}; cy(); }n(\"Unknown uri\" + i); }o(g); }", "n_tokens": 130, "n_pass": [721, 112, 67]}
{"time": "2021-02-25 06:43:55.761462", "score": "0.2411", "loss": "2.7385", "code": "@O C query(@onNll ng[] p, String sortOrder) {switch(sUer.ch()) { case CE: {s = new St[] {}; cy(); }n(\"Unknown uri\" + i); }o(g); }", "n_tokens": 129, "n_pass": [725, 116, 68]}
{"time": "2021-02-25 06:43:58.420834", "score": "0.2411", "loss": "2.7385", "code": "@O C query(@onNl ng[] p, String sortOrder) {switch(sUer.ch()) { case CE: {s = new St[] {}; cy(); }n(\"Unknown uri\" + i); }o(g); }", "n_tokens": 128, "n_pass": [726, 117, 69]}
{"time": "2021-02-25 06:44:01.070515", "score": "0.2411", "loss": "2.7385", "code": "@O C query(@onN ng[] p, String sortOrder) {switch(sUer.ch()) { case CE: {s = new St[] {}; cy(); }n(\"Unknown uri\" + i); }o(g); }", "n_tokens": 127, "n_pass": [727, 118, 70]}
{"time": "2021-02-25 06:44:52.310830", "score": "0.2328", "loss": "2.7362", "code": "@O C query(@nN ng[] p, String sortOrder) {switch(sUer.ch()) { case CE: {s = new St[] {}; cy(); }n(\"Unknown uri\" + i); }o(g); }", "n_tokens": 126, "n_pass": [797, 136, 71]}
{"time": "2021-02-25 06:44:54.962160", "score": "0.2546", "loss": "2.7053", "code": "@O C query(@N ng[] p, String sortOrder) {switch(sUer.ch()) { case CE: {s = new St[] {}; cy(); }n(\"Unknown uri\" + i); }o(g); }", "n_tokens": 125, "n_pass": [798, 137, 72]}
{"time": "2021-02-25 06:45:21.528816", "score": "0.1743", "loss": "3.4802", "code": "@O C query(@N ng[] p, String sortOrder) {switch(sUech()) { case CE: {s = new St[] {}; cy(); }n(\"Unknown uri\" + i); }o(g); }", "n_tokens": 123, "n_pass": [820, 147, 73]}
{"time": "2021-02-25 06:45:24.227620", "score": "0.2935", "loss": "3.1089", "code": "@O C query(@N ng[] p, String sortOrder) {switch(sUe()) { case CE: {s = new St[] {}; cy(); }n(\"Unknown uri\" + i); }o(g); }", "n_tokens": 121, "n_pass": [821, 148, 74]}
{"time": "2021-02-25 06:45:29.573979", "score": "0.2372", "loss": "3.0301", "code": "@O C query(@N ng[] p, String sortOrder) {switch(sUe()) { case CE: {s = new St[] {};y(); }n(\"Unknown uri\" + i); }o(g); }", "n_tokens": 119, "n_pass": [838, 150, 75]}
{"time": "2021-02-25 06:46:23.653238", "score": "0.2372", "loss": "3.0301", "code": "@O C query(@N ng[] p, String sortOrder) {switch(sUe()) { case CE: {s = new St[] {};y();}n(\"Unknown uri\" + i); }o(g); }", "n_tokens": 118, "n_pass": [1010, 166, 76]}
{"time": "2021-02-25 06:46:26.293870", "score": "0.2282", "loss": "2.982", "code": "@O C query(@N ng[] p, String sortOrder) {switch(sUe()) { case CE: {s = new St[] {};y();}(\"Unknown uri\" + i); }o(g); }", "n_tokens": 117, "n_pass": [1011, 167, 77]}
{"time": "2021-02-25 06:46:47.437031", "score": "0.2282", "loss": "2.982", "code": "@O C query(@N ng[] p, String sortOrder) {switch(sUe()) { case CE: {s = new St[] {};y();}(\"Unknownuri\" + i); }o(g); }", "n_tokens": 116, "n_pass": [1021, 175, 78]}
{"time": "2021-02-25 06:46:58.055610", "score": "0.2282", "loss": "2.982", "code": "@O C query(@N ng[] p, String sortOrder) {switch(sUe()) { case CE: {s = new St[] {};y();}(\"Unknownuri\"+ i); }o(g); }", "n_tokens": 115, "n_pass": [1026, 179, 79]}
{"time": "2021-02-25 06:47:00.719876", "score": "0.2282", "loss": "2.982", "code": "@O C query(@N ng[] p, String sortOrder) {switch(sUe()) { case CE: {s = new St[] {};y();}(\"Unknownuri\"+i); }o(g); }", "n_tokens": 114, "n_pass": [1028, 180, 80]}
{"time": "2021-02-25 06:47:03.358206", "score": "0.2282", "loss": "2.982", "code": "@O C query(@N ng[] p, String sortOrder) {switch(sUe()) { case CE: {s = new St[] {};y();}(\"Unknownuri\"+i);}o(g); }", "n_tokens": 113, "n_pass": [1032, 181, 81]}
{"time": "2021-02-25 06:47:06.013840", "score": "0.4854", "loss": "1.8867", "code": "@O C query(@N ng[] p, String sortOrder) {switch(sUe()) { case CE: {s = new St[] {};y();}(\"Unknownuri\"+i);}(g); }", "n_tokens": 112, "n_pass": [1034, 182, 82]}
{"time": "2021-02-25 06:47:08.646909", "score": "0.4854", "loss": "1.8867", "code": "@O C query(@N ng[] p, String sortOrder) {switch(sUe()) { case CE: {s = new St[] {};y();}(\"Unknownuri\"+i);}(g);}", "n_tokens": 111, "n_pass": [1039, 183, 83]}
{"time": "2021-02-25 06:47:14.885885", "score": "0.4192", "loss": "2.2938", "code": "@O C query(@N g[] p, String sortOrder) {switch(sUe()) { case CE: {s = new St[] {};y();}(\"Unknownuri\"+i);}(g);}", "n_tokens": 110, "n_pass": [1055, 184, 84]}
{"time": "2021-02-25 06:47:17.533376", "score": "0.4192", "loss": "2.2938", "code": "@O C query(@N g[]p, String sortOrder) {switch(sUe()) { case CE: {s = new St[] {};y();}(\"Unknownuri\"+i);}(g);}", "n_tokens": 109, "n_pass": [1059, 185, 85]}
{"time": "2021-02-25 06:47:20.205295", "score": "0.4192", "loss": "2.2938", "code": "@O C query(@N g[]p,String sortOrder) {switch(sUe()) { case CE: {s = new St[] {};y();}(\"Unknownuri\"+i);}(g);}", "n_tokens": 108, "n_pass": [1062, 186, 86]}
{"time": "2021-02-25 06:48:02.494070", "score": "0.4192", "loss": "2.2938", "code": "@O C query(@N g[]p,String sortOrder){switch(sUe()) { case CE: {s = new St[] {};y();}(\"Unknownuri\"+i);}(g);}", "n_tokens": 107, "n_pass": [1080, 202, 87]}
{"time": "2021-02-25 06:48:05.135297", "score": "0.2578", "loss": "2.4767", "code": "@O C query(@N g[]p,String sortOrder){switch(Ue()) { case CE: {s = new St[] {};y();}(\"Unknownuri\"+i);}(g);}", "n_tokens": 106, "n_pass": [1089, 203, 88]}
{"time": "2021-02-25 06:48:13.105162", "score": "0.2578", "loss": "2.4767", "code": "@O C query(@N g[]p,String sortOrder){switch(Ue()){ case CE: {s = new St[] {};y();}(\"Unknownuri\"+i);}(g);}", "n_tokens": 105, "n_pass": [1095, 206, 89]}
{"time": "2021-02-25 06:48:15.770453", "score": "0.2578", "loss": "2.4767", "code": "@O C query(@N g[]p,String sortOrder){switch(Ue()){case CE: {s = new St[] {};y();}(\"Unknownuri\"+i);}(g);}", "n_tokens": 104, "n_pass": [1097, 207, 90]}
{"time": "2021-02-25 06:48:18.429467", "score": "0.2288", "loss": "2.6102", "code": "@O C query(@N g[]p,String sortOrder){switch(Ue()){case E: {s = new St[] {};y();}(\"Unknownuri\"+i);}(g);}", "n_tokens": 103, "n_pass": [1103, 208, 91]}
{"time": "2021-02-25 06:48:21.067453", "score": "0.2288", "loss": "2.6102", "code": "@O C query(@N g[]p,String sortOrder){switch(Ue()){case E:{s = new St[] {};y();}(\"Unknownuri\"+i);}(g);}", "n_tokens": 102, "n_pass": [1106, 209, 92]}
{"time": "2021-02-25 06:48:23.703594", "score": "0.2288", "loss": "2.6102", "code": "@O C query(@N g[]p,String sortOrder){switch(Ue()){case E:{s= new St[] {};y();}(\"Unknownuri\"+i);}(g);}", "n_tokens": 101, "n_pass": [1109, 210, 93]}
{"time": "2021-02-25 06:48:26.346117", "score": "0.2288", "loss": "2.6102", "code": "@O C query(@N g[]p,String sortOrder){switch(Ue()){case E:{s=new St[] {};y();}(\"Unknownuri\"+i);}(g);}", "n_tokens": 100, "n_pass": [1111, 211, 94]}
{"time": "2021-02-25 06:48:29.013794", "score": "0.219", "loss": "2.6504", "code": "@O C query(@N g[]p,String sortOrder){switch(Ue()){case E:{s=new t[] {};y();}(\"Unknownuri\"+i);}(g);}", "n_tokens": 99, "n_pass": [1116, 212, 95]}
{"time": "2021-02-25 06:48:31.658935", "score": "0.219", "loss": "2.6504", "code": "@O C query(@N g[]p,String sortOrder){switch(Ue()){case E:{s=new t[]{};y();}(\"Unknownuri\"+i);}(g);}", "n_tokens": 98, "n_pass": [1120, 213, 96]}

Minimal simplified code:
@O C query(@N g[]p,String sortOrder){switch(Ue()){case E:{s=new t[]{};y();}("Unknownuri"+i);}(g);}

