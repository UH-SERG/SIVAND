
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/vladmihalcea__high-performance-java-persistence/core/src/test/java/com/vladmihalcea/book/hpjp/hibernate/identifier/OracleRowIdTest_equals.java
method_name = equals
method_body = @Override public boolean equals(Object o) { if (this == o) return true; if (!(o instanceof PostComment)) return false; return id != null && id.equals(((PostComment) o).id); }
predict, score, loss = equals, 0.9999001026153564, 0.0001382732152706012

Trace of simplified code(s):
{"time": "2021-02-24 21:29:03.200460", "score": "0.9999", "loss": "0.0001", "code": "@Override public boolean equals(Object o) { if (this == o) return true; if (!(o instanceof PostComment)) return false; return id != null && id.equals(((PostComment) o).id); }", "n_tokens": 174, "n_pass": [1, 1, 1]}
{"time": "2021-02-24 21:29:05.909781", "score": "0.9997", "loss": "0.0003", "code": "ean equals(Object o) { if (this == o) return true; if (!(o instanceof PostComment)) return false; return id != null && id.equals(((PostComment) o).id); }", "n_tokens": 153, "n_pass": [20, 2, 2]}
{"time": "2021-02-24 21:29:09.040434", "score": "0.9998", "loss": "0.0003", "code": "ean equals(Object o) { if (this == o) return true; if (!(o instanceof PostComment)) ret= null && id.equals(((PostComment) o).id); }", "n_tokens": 131, "n_pass": [25, 3, 3]}
{"time": "2021-02-24 21:29:12.132268", "score": "0.9998", "loss": "0.0003", "code": "ean equals(Object o) { if (this == o) return true; if (!(o instanceof PostComment)) retd.equals(((PostComment) o).id); }", "n_tokens": 120, "n_pass": [44, 4, 4]}
{"time": "2021-02-24 21:29:14.809420", "score": "0.6051", "loss": "0.7871", "code": "ean equals(Object o) { if (this == o) return true; if (!(o instanceof PostComment)) quals(((PostComment) o).id); }", "n_tokens": 114, "n_pass": [77, 5, 5]}
{"time": "2021-02-24 21:29:17.529969", "score": "0.9436", "loss": "0.1104", "code": "ean equals(Object o) { if (this == o) return true; if (!(o instanceof PostComment)) quals(((Postt) o).id); }", "n_tokens": 108, "n_pass": [80, 6, 6]}
{"time": "2021-02-24 21:29:23.757404", "score": "0.784", "loss": "0.3662", "code": "ean equals(Object o) { if (this == o) retrue; if (!(o instanceof PostComment)) quals(((Postt) o).id); }", "n_tokens": 103, "n_pass": [91, 8, 7]}
{"time": "2021-02-24 21:29:32.770156", "score": "0.78", "loss": "0.3767", "code": "ean equals(Object o) { if (this == o)true; if (!(o instanceof PostComment)) quals(((Postt) o).id); }", "n_tokens": 100, "n_pass": [149, 11, 8]}
{"time": "2021-02-24 21:29:35.481379", "score": "0.7819", "loss": "0.3685", "code": "ean equals(Object o) { if (this == o)e; if (!(o instanceof PostComment)) quals(((Postt) o).id); }", "n_tokens": 97, "n_pass": [150, 12, 9]}
{"time": "2021-02-24 21:29:38.161464", "score": "0.9684", "loss": "0.0628", "code": "ean equals(Object o) { if (this == o)if (!(o instanceof PostComment)) quals(((Postt) o).id); }", "n_tokens": 94, "n_pass": [151, 13, 10]}
{"time": "2021-02-24 21:29:40.858289", "score": "0.4677", "loss": "0.7909", "code": "ean equals(Object o) { if (this == o)if (!(o instanceof Poomment)) quals(((Postt) o).id); }", "n_tokens": 91, "n_pass": [159, 14, 11]}
{"time": "2021-02-24 21:29:43.551033", "score": "0.4677", "loss": "0.7909", "code": "ean equals(Object o) { if (this == o)if (!(o instanceof Poent)) quals(((Postt) o).id); }", "n_tokens": 88, "n_pass": [160, 15, 12]}
{"time": "2021-02-24 21:29:46.277814", "score": "0.5667", "loss": "0.6055", "code": "ean equals(Object o) { if (this == o)if (!(o instanceof Po)) quals(((Postt) o).id); }", "n_tokens": 85, "n_pass": [161, 16, 13]}
{"time": "2021-02-24 21:29:48.961173", "score": "0.9957", "loss": "0.0075", "code": "ean equals(Object o) { if (this == o)if (!(o instanceof Po)) ls(((Postt) o).id); }", "n_tokens": 82, "n_pass": [163, 17, 14]}
{"time": "2021-02-24 21:29:51.626991", "score": "0.9955", "loss": "0.008", "code": "ean equals(Object o) { if (this == o)if (!(o instanceof Po)) ls(((Pt) o).id); }", "n_tokens": 79, "n_pass": [166, 18, 15]}
{"time": "2021-02-24 21:29:54.316486", "score": "0.9834", "loss": "0.0282", "code": "n equals(Object o) { if (this == o)if (!(o instanceof Po)) ls(((Pt) o).id); }", "n_tokens": 77, "n_pass": [171, 19, 16]}
{"time": "2021-02-24 21:29:58.795637", "score": "0.9522", "loss": "0.0972", "code": "n equals(Oect o) { if (this == o)if (!(o instanceof Po)) ls(((Pt) o).id); }", "n_tokens": 75, "n_pass": [177, 20, 17]}
{"time": "2021-02-24 21:30:01.492675", "score": "0.3757", "loss": "1.2905", "code": "n equals(Ot o) { if (this == o)if (!(o instanceof Po)) ls(((Pt) o).id); }", "n_tokens": 73, "n_pass": [178, 21, 18]}
{"time": "2021-02-24 21:30:11.682326", "score": "0.9853", "loss": "0.0243", "code": "n equals(O o) { if (this == o)if (!(o instanceof Po)) ls(((Pt) o).id); }", "n_tokens": 72, "n_pass": [260, 23, 19]}
{"time": "2021-02-24 21:30:14.369003", "score": "0.9853", "loss": "0.0243", "code": "n equals(O o){ if (this == o)if (!(o instanceof Po)) ls(((Pt) o).id); }", "n_tokens": 71, "n_pass": [263, 24, 20]}
{"time": "2021-02-24 21:30:17.046865", "score": "0.9853", "loss": "0.0243", "code": "n equals(O o){if (this == o)if (!(o instanceof Po)) ls(((Pt) o).id); }", "n_tokens": 70, "n_pass": [265, 25, 21]}
{"time": "2021-02-24 21:30:19.744561", "score": "0.9853", "loss": "0.0243", "code": "n equals(O o){if(this == o)if (!(o instanceof Po)) ls(((Pt) o).id); }", "n_tokens": 69, "n_pass": [268, 26, 22]}
{"time": "2021-02-24 21:30:33.231683", "score": "0.9853", "loss": "0.0243", "code": "n equals(O o){if(this== o)if (!(o instanceof Po)) ls(((Pt) o).id); }", "n_tokens": 68, "n_pass": [274, 31, 23]}
{"time": "2021-02-24 21:30:36.820192", "score": "0.9853", "loss": "0.0243", "code": "n equals(O o){if(this==o)if (!(o instanceof Po)) ls(((Pt) o).id); }", "n_tokens": 67, "n_pass": [277, 32, 24]}
{"time": "2021-02-24 21:30:39.490167", "score": "0.9853", "loss": "0.0243", "code": "n equals(O o){if(this==o)if(!(o instanceof Po)) ls(((Pt) o).id); }", "n_tokens": 66, "n_pass": [282, 33, 25]}
{"time": "2021-02-24 21:30:42.204130", "score": "0.9941", "loss": "0.0071", "code": "n equals(O o){if(this==o)if(!(o instanceof Po)) (((Pt) o).id); }", "n_tokens": 64, "n_pass": [294, 34, 26]}
{"time": "2021-02-24 21:30:44.874660", "score": "0.9941", "loss": "0.0072", "code": "n equals(O o){if(this==o)if(!(o instanceof Po)) (((Pt)).id); }", "n_tokens": 62, "n_pass": [298, 35, 27]}
{"time": "2021-02-24 21:31:04.690184", "score": "0.9941", "loss": "0.0072", "code": "n equals(O o){if(this==o)if(!(o instanceof Po)) (((Pt)).d); }", "n_tokens": 61, "n_pass": [378, 40, 28]}
{"time": "2021-02-24 21:31:07.389772", "score": "0.9941", "loss": "0.0072", "code": "n equals(O o){if(this==o)if(!(o instanceof Po)) (((Pt)).d);}", "n_tokens": 60, "n_pass": [381, 41, 29]}
{"time": "2021-02-24 21:31:27.713777", "score": "0.9942", "loss": "0.0069", "code": "n equals(O o){if(this==o)if(!(o instanceof o)) (((Pt)).d);}", "n_tokens": 59, "n_pass": [426, 47, 30]}
{"time": "2021-02-24 21:31:30.492293", "score": "0.9942", "loss": "0.0069", "code": "n equals(O o){if(this==o)if(!(o instanceof o))(((Pt)).d);}", "n_tokens": 58, "n_pass": [430, 48, 31]}
{"time": "2021-02-24 21:31:33.216450", "score": "0.9942", "loss": "0.0069", "code": "n equals(O o){if(this==o)if(!(o instanceof o))(((t)).d);}", "n_tokens": 57, "n_pass": [434, 49, 32]}

Minimal simplified code:
n equals(O o){if(this==o)if(!(o instanceof o))(((t)).d);}

