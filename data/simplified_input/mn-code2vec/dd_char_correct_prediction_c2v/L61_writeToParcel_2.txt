
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/dmfs__opentasks/opentasks/src/main/java/org/dmfs/tasks/notification/NotificationActionUtils_writeToParcel.java
method_name = writeToParcel
method_body = @Override public void writeToParcel(final Parcel out, final int flags) { out.writeString(mActionType); out.writeInt(mActionTextResId); out.writeInt(mNotificationId); out.writeString(mTaskUri.toString()); out.writeLong(mWhen); out.writeString(mTitle); }
predict, score, loss = writeToParcel, 0.9958434700965881, 0.0043694740161299706

Trace of simplified code(s):
{"time": "2021-02-22 02:01:48.865690", "score": "0.9958", "loss": "0.0044", "code": "@Override public void writeToParcel(final Parcel out, final int flags) { out.writeString(mActionType); out.writeInt(mActionTextResId); out.writeInt(mNotificationId); out.writeString(mTaskUri.toString()); out.writeLong(mWhen); out.writeString(mTitle); }", "n_tokens": 252, "n_pass": [1, 1, 1]}
{"time": "2021-02-22 02:01:51.505413", "score": "0.9949", "loss": "0.0054", "code": "@Override public void writeToParcel(final Parcel out, final int flags) { out.writeString(mActionType); out.writeInt(mActionTexi.toString()); out.writeLong(mWhen); out.writeString(mTitle); }", "n_tokens": 189, "n_pass": [10, 2, 2]}
{"time": "2021-02-22 02:01:54.112036", "score": "0.9936", "loss": "0.0066", "code": "@Override public void writeToParcel(final Parcel out, final int flags) { out.writeString(mActionType); out.writeInt(mActionTehen); out.writeString(mTitle); }", "n_tokens": 157, "n_pass": [19, 3, 3]}
{"time": "2021-02-22 02:01:57.102470", "score": "0.9954", "loss": "0.0047", "code": "@Override public void writeToParcel(final Parcel out, final int flags) { out.writeString(mActhen); out.writeString(mTitle); }", "n_tokens": 125, "n_pass": [24, 4, 4]}
{"time": "2021-02-22 02:02:03.121266", "score": "0.9989", "loss": "0.0011", "code": "@Override public void writeToParcel(final Parcel out, final int flags) { out.writeString(mActhen); outring(mTitle); }", "n_tokens": 117, "n_pass": [62, 6, 5]}
{"time": "2021-02-22 02:02:05.823685", "score": "0.9989", "loss": "0.0012", "code": "@Overriic void writeToParcel(final Parcel out, final int flags) { out.writeString(mActhen); outring(mTitle); }", "n_tokens": 110, "n_pass": [66, 7, 6]}
{"time": "2021-02-22 02:02:09.229091", "score": "0.9053", "loss": "0.1535", "code": "@Overriic void writeToParcel(fcel out, final int flags) { out.writeString(mActhen); outring(mTitle); }", "n_tokens": 102, "n_pass": [70, 8, 7]}
{"time": "2021-02-22 02:02:11.818583", "score": "0.6494", "loss": "0.781", "code": "@Overriic void writeToParcel(fcel out,nt flags) { out.writeString(mActhen); outring(mTitle); }", "n_tokens": 94, "n_pass": [72, 9, 8]}
{"time": "2021-02-22 02:02:17.811914", "score": "0.4871", "loss": "1.345", "code": "@Overriic void writeToParcel(fnt flags) { out.writeString(mActhen); outring(mTitle); }", "n_tokens": 86, "n_pass": [84, 11, 9]}
{"time": "2021-02-22 02:02:34.283460", "score": "0.4382", "loss": "1.5041", "code": "@Overriic void writeToParcel(fnt flags) { out.writeString(hen); outring(mTitle); }", "n_tokens": 82, "n_pass": [125, 17, 10]}
{"time": "2021-02-22 02:02:36.891878", "score": "0.4382", "loss": "1.5041", "code": "@Overriic void writeToParcel(fnt flags) { out.writeString(hen); oug(mTitle); }", "n_tokens": 78, "n_pass": [128, 18, 11]}
{"time": "2021-02-22 02:02:39.514507", "score": "0.4381", "loss": "1.4993", "code": "@Overriic void writeToParcel(fnt flags) { out.writeString(hen); oug(mT); }", "n_tokens": 74, "n_pass": [130, 19, 12]}
{"time": "2021-02-22 02:02:42.113960", "score": "0.4381", "loss": "1.4993", "code": "@Oviic void writeToParcel(fnt flags) { out.writeString(hen); oug(mT); }", "n_tokens": 71, "n_pass": [133, 20, 13]}
{"time": "2021-02-22 02:02:57.673919", "score": "0.4602", "loss": "1.5617", "code": "@Ovc void writeToParcel(fnt flags) { out.writeString(hen); oug(mT); }", "n_tokens": 69, "n_pass": [188, 25, 14]}
{"time": "2021-02-22 02:03:08.371368", "score": "0.8686", "loss": "0.3459", "code": "@Ovc void writeToParcel(f flags) { out.writeString(hen); oug(mT); }", "n_tokens": 67, "n_pass": [199, 28, 15]}
{"time": "2021-02-22 02:03:16.257407", "score": "0.8809", "loss": "0.395", "code": "@Ovc void writeToParcel(f flags) { t.writeString(hen); oug(mT); }", "n_tokens": 65, "n_pass": [205, 31, 16]}
{"time": "2021-02-22 02:03:18.852541", "score": "0.806", "loss": "0.7698", "code": "@Ovc void writeToParcel(f flags) { writeString(hen); oug(mT); }", "n_tokens": 63, "n_pass": [206, 32, 17]}
{"time": "2021-02-22 02:03:35.076284", "score": "0.7937", "loss": "0.6426", "code": "@Ovc void writeToParcel(f flags) { writeString(n); oug(mT); }", "n_tokens": 61, "n_pass": [213, 38, 18]}
{"time": "2021-02-22 02:03:40.411539", "score": "0.7723", "loss": "0.5202", "code": "@Ovc void writeToParcel(f flags) { writeString(n); oug(); }", "n_tokens": 59, "n_pass": [218, 40, 19]}
{"time": "2021-02-22 02:03:43.004131", "score": "0.8669", "loss": "0.2332", "code": "@c void writeToParcel(f flags) { writeString(n); oug(); }", "n_tokens": 57, "n_pass": [222, 41, 20]}
{"time": "2021-02-22 02:03:48.504421", "score": "0.2938", "loss": "1.7379", "code": "@c vo writeToParcel(f flags) { writeString(n); oug(); }", "n_tokens": 55, "n_pass": [225, 43, 21]}
{"time": "2021-02-22 02:04:37.534070", "score": "0.2938", "loss": "1.7379", "code": "@c vo writeToParcel(f flags){ writeString(n); oug(); }", "n_tokens": 54, "n_pass": [331, 57, 22]}
{"time": "2021-02-22 02:04:40.159390", "score": "0.2938", "loss": "1.7379", "code": "@c vo writeToParcel(f flags){writeString(n); oug(); }", "n_tokens": 53, "n_pass": [333, 58, 23]}
{"time": "2021-02-22 02:05:14.086479", "score": "0.2938", "loss": "1.7379", "code": "@c vo writeToParcel(f flags){writeString(n);oug(); }", "n_tokens": 52, "n_pass": [349, 71, 24]}
{"time": "2021-02-22 02:05:16.723246", "score": "0.7234", "loss": "1.9994", "code": "@c vo writeToParcel(f flags){writeString(n);ug(); }", "n_tokens": 51, "n_pass": [350, 72, 25]}
{"time": "2021-02-22 02:05:24.588580", "score": "0.7234", "loss": "1.9994", "code": "@c vo writeToParcel(f flags){writeString(n);ug();}", "n_tokens": 50, "n_pass": [356, 75, 26]}
{"time": "2021-02-22 02:05:27.955846", "score": "0.8639", "loss": "1.0156", "code": "@c o writeToParcel(f flags){writeString(n);ug();}", "n_tokens": 49, "n_pass": [361, 76, 27]}
{"time": "2021-02-22 02:06:18.625571", "score": "0.7551", "loss": "1.4526", "code": "@c o writeToParcel(f flags){writeString();ug();}", "n_tokens": 48, "n_pass": [399, 93, 28]}
{"time": "2021-02-22 02:06:46.579026", "score": "0.3125", "loss": "2.8628", "code": "@c o writeToParcel(f flags){riteString();ug();}", "n_tokens": 47, "n_pass": [436, 101, 29]}
{"time": "2021-02-22 02:06:49.163295", "score": "0.3125", "loss": "2.8628", "code": "@c o writeToParcel(f flags){iteString();ug();}", "n_tokens": 46, "n_pass": [437, 102, 30]}
{"time": "2021-02-22 02:06:54.599615", "score": "0.3125", "loss": "2.8628", "code": "@c o writeToParcel(f flags){ieString();ug();}", "n_tokens": 45, "n_pass": [439, 104, 31]}
{"time": "2021-02-22 02:06:59.870585", "score": "0.3125", "loss": "2.8628", "code": "@c o writeToParcel(f flags){ietring();ug();}", "n_tokens": 44, "n_pass": [441, 106, 32]}
{"time": "2021-02-22 02:07:02.495948", "score": "0.3125", "loss": "2.8628", "code": "@c o writeToParcel(f flags){iering();ug();}", "n_tokens": 43, "n_pass": [442, 107, 33]}
{"time": "2021-02-22 02:07:05.175429", "score": "0.3125", "loss": "2.8628", "code": "@c o writeToParcel(f flags){ieing();ug();}", "n_tokens": 42, "n_pass": [443, 108, 34]}
{"time": "2021-02-22 02:07:07.789630", "score": "0.3322", "loss": "2.976", "code": "@c o writeToParcel(f flags){ieng();ug();}", "n_tokens": 41, "n_pass": [444, 109, 35]}
{"time": "2021-02-22 02:07:10.406093", "score": "0.3125", "loss": "2.8628", "code": "@c o writeToParcel(f flags){ieg();ug();}", "n_tokens": 40, "n_pass": [445, 110, 36]}

Minimal simplified code:
@c o writeToParcel(f flags){ieg();ug();}

