
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/wnameless__json-flattener/src/main/java/com/github/wnameless/json/unflattener/JsonUnflattener_equals.java
method_name = equals
method_body = @Override public boolean equals(Object o) { if (this == o) return true; if (!(o instanceof JsonUnflattener)) return false; return root.equals(((JsonUnflattener) o).root); }
predict, score, loss = equals, 0.9999476671218872, 8.308542601298541e-05

Trace of simplified code(s):
{"time": "2021-02-25 07:55:03.879017", "score": "0.9999", "loss": "0.0001", "code": "@Override public boolean equals(Object o) { if (this == o) return true; if (!(o instanceof JsonUnflattener)) return false; return root.equals(((JsonUnflattener) o).root); }", "n_tokens": 172, "n_pass": [1, 1, 1]}
{"time": "2021-02-25 07:55:06.514090", "score": "0.9997", "loss": "0.0004", "code": "ean equals(Object o) { if (this == o) return true; if (!(o instanceof JsonUnflattener)) return false; return root.equals(((JsonUnflattener) o).root); }", "n_tokens": 151, "n_pass": [20, 2, 2]}
{"time": "2021-02-25 07:55:09.545312", "score": "0.9999", "loss": "0.0002", "code": "ean equals(Object o) { if (this == o) return true; if (!(o instanceof Json)) return false; return root.equals(((JsonUnflattener) o).root); }", "n_tokens": 140, "n_pass": [49, 3, 3]}
{"time": "2021-02-25 07:55:12.249436", "score": "0.9998", "loss": "0.0003", "code": "ean equals(Object o) { if (this == o) return true; if (!(o instanceof Json)) return false; returls(((JsonUnflattener) o).root); }", "n_tokens": 129, "n_pass": [52, 4, 4]}
{"time": "2021-02-25 07:55:14.930658", "score": "0.9427", "loss": "0.1915", "code": "ean equals(Object o) { if (this == o) return true; if (!(o instanceof Json)) return fls(((JsonUnflattener) o).root); }", "n_tokens": 118, "n_pass": [64, 5, 5]}
{"time": "2021-02-25 07:55:17.567933", "score": "0.9427", "loss": "0.1915", "code": "ean equals(Object o) { if (this == o) return true; if (!(o instanceof Json)) return fls(((Jsontener) o).root); }", "n_tokens": 112, "n_pass": [100, 6, 6]}
{"time": "2021-02-25 07:55:23.665605", "score": "0.849", "loss": "0.2392", "code": "ean equals(Object o) { if (this == o) retrue; if (!(o instanceof Json)) return fls(((Jsontener) o).root); }", "n_tokens": 107, "n_pass": [112, 8, 7]}
{"time": "2021-02-25 07:55:29.708259", "score": "0.8452", "loss": "0.2489", "code": "ean equals(Object o) { if (this == o) rue; if (!(o instanceof Json)) return fls(((Jsontener) o).root); }", "n_tokens": 104, "n_pass": [174, 10, 8]}
{"time": "2021-02-25 07:55:32.311999", "score": "0.8522", "loss": "0.2338", "code": "ean equals(Object o) { if (this == o) ; if (!(o instanceof Json)) return fls(((Jsontener) o).root); }", "n_tokens": 101, "n_pass": [175, 11, 9]}
{"time": "2021-02-25 07:55:34.932436", "score": "0.7402", "loss": "0.4378", "code": "ean equals(Object o) { if (this == o) ; if (!(o instanceof n)) return fls(((Jsontener) o).root); }", "n_tokens": 98, "n_pass": [183, 12, 10]}
{"time": "2021-02-25 07:55:37.594293", "score": "0.9838", "loss": "0.0204", "code": "ean equals(Object o) { if (this == o) ; if (!(o instanceof n)) returls(((Jsontener) o).root); }", "n_tokens": 95, "n_pass": [187, 13, 11]}
{"time": "2021-02-25 07:55:40.204157", "score": "0.9838", "loss": "0.0204", "code": "ean equals(Object o) { if (this == o) ; if (!(o instanceof n)) returls(((Jtener) o).root); }", "n_tokens": 92, "n_pass": [190, 14, 12]}
{"time": "2021-02-25 07:55:42.865782", "score": "0.9864", "loss": "0.0186", "code": "ean equals(Object o) { if (this == o) ; if (!(o instanceof n)) returls(((Jer) o).root); }", "n_tokens": 89, "n_pass": [191, 15, 13]}
{"time": "2021-02-25 07:55:45.508488", "score": "0.9795", "loss": "0.0337", "code": "n equals(Object o) { if (this == o) ; if (!(o instanceof n)) returls(((Jer) o).root); }", "n_tokens": 87, "n_pass": [197, 16, 14]}
{"time": "2021-02-25 07:55:49.701565", "score": "0.8547", "loss": "0.2146", "code": "n equals(Oect o) { if (this == o) ; if (!(o instanceof n)) returls(((Jer) o).root); }", "n_tokens": 85, "n_pass": [203, 17, 15]}
{"time": "2021-02-25 07:56:00.367912", "score": "0.5167", "loss": "1.8325", "code": "n equals(Oect o) { if (th== o) ; if (!(o instanceof n)) returls(((Jer) o).root); }", "n_tokens": 82, "n_pass": [211, 21, 16]}
{"time": "2021-02-25 07:56:05.694867", "score": "0.2575", "loss": "2.6093", "code": "n equals(Oect o) { if (th== o) ; if (!(o instanceof n))turls(((Jer) o).root); }", "n_tokens": 79, "n_pass": [222, 23, 17]}
{"time": "2021-02-25 07:56:12.585057", "score": "0.2492", "loss": "3.1762", "code": "n equals(Ot o) { if (th== o) ; if (!(o instanceof n))turls(((Jer) o).root); }", "n_tokens": 77, "n_pass": [236, 25, 18]}
{"time": "2021-02-25 07:56:31.342730", "score": "0.3521", "loss": "2.0507", "code": "n equals(O o) { if (th== o) ; if (!(o instanceof n))turls(((Jer) o).root); }", "n_tokens": 76, "n_pass": [324, 30, 19]}
{"time": "2021-02-25 07:56:33.958439", "score": "0.3521", "loss": "2.0507", "code": "n equals(O o){ if (th== o) ; if (!(o instanceof n))turls(((Jer) o).root); }", "n_tokens": 75, "n_pass": [327, 31, 20]}
{"time": "2021-02-25 07:56:36.593664", "score": "0.3521", "loss": "2.0507", "code": "n equals(O o){if (th== o) ; if (!(o instanceof n))turls(((Jer) o).root); }", "n_tokens": 74, "n_pass": [329, 32, 21]}
{"time": "2021-02-25 07:56:44.464500", "score": "0.3521", "loss": "2.0507", "code": "n equals(O o){if(th== o) ; if (!(o instanceof n))turls(((Jer) o).root); }", "n_tokens": 73, "n_pass": [332, 35, 22]}
{"time": "2021-02-25 07:56:47.079474", "score": "0.3626", "loss": "2.0409", "code": "n equals(O o){if(h== o) ; if (!(o instanceof n))turls(((Jer) o).root); }", "n_tokens": 72, "n_pass": [334, 36, 23]}
{"time": "2021-02-25 07:56:54.955236", "score": "0.3626", "loss": "2.0409", "code": "n equals(O o){if(h==o) ; if (!(o instanceof n))turls(((Jer) o).root); }", "n_tokens": 71, "n_pass": [338, 39, 24]}
{"time": "2021-02-25 07:56:57.564274", "score": "0.3626", "loss": "2.0409", "code": "n equals(O o){if(h==o); if (!(o instanceof n))turls(((Jer) o).root); }", "n_tokens": 70, "n_pass": [341, 40, 25]}
{"time": "2021-02-25 07:57:00.223221", "score": "0.21", "loss": "2.4903", "code": "n equals(O o){if(h==o) if (!(o instanceof n))turls(((Jer) o).root); }", "n_tokens": 69, "n_pass": [342, 41, 26]}
{"time": "2021-02-25 07:57:02.838427", "score": "0.21", "loss": "2.4903", "code": "n equals(O o){if(h==o)if (!(o instanceof n))turls(((Jer) o).root); }", "n_tokens": 68, "n_pass": [343, 42, 27]}
{"time": "2021-02-25 07:57:05.471104", "score": "0.21", "loss": "2.4903", "code": "n equals(O o){if(h==o)if(!(o instanceof n))turls(((Jer) o).root); }", "n_tokens": 67, "n_pass": [346, 43, 28]}
{"time": "2021-02-25 07:57:13.448583", "score": "0.5966", "loss": "1.1545", "code": "n equals(O o){if(h==o)if(!(o instanceof n))tus(((Jer) o).root); }", "n_tokens": 65, "n_pass": [360, 46, 29]}
{"time": "2021-02-25 07:57:16.086914", "score": "0.8984", "loss": "0.1673", "code": "n equals(O o){if(h==o)if(!(o instanceof n))tus(((r) o).root); }", "n_tokens": 63, "n_pass": [363, 47, 30]}
{"time": "2021-02-25 07:57:18.705099", "score": "0.2974", "loss": "2.0571", "code": "n equals(O o){if(h==o)if(!(o instanceof n))tus(((r)).root); }", "n_tokens": 61, "n_pass": [365, 48, 31]}
{"time": "2021-02-25 07:57:21.335857", "score": "0.3236", "loss": "2.5938", "code": "n equals(O o){if(h==o)if(!(o instanceof n))tus(((r)).ot); }", "n_tokens": 59, "n_pass": [367, 49, 32]}
{"time": "2021-02-25 07:57:38.818123", "score": "0.2812", "loss": "2.0124", "code": "n equals(O o){if(h==o)if(!(o instanceof n))tus(((r)).o); }", "n_tokens": 58, "n_pass": [442, 54, 33]}
{"time": "2021-02-25 07:57:41.467834", "score": "0.2812", "loss": "2.0124", "code": "n equals(O o){if(h==o)if(!(o instanceof n))tus(((r)).o);}", "n_tokens": 57, "n_pass": [445, 55, 34]}

Minimal simplified code:
n equals(O o){if(h==o)if(!(o instanceof n))tus(((r)).o);}

