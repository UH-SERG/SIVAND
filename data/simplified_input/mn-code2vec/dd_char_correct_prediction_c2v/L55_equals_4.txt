
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/fishercoder1534__Leetcode/src/main/java/com/fishercoder/common/classes/UndirectedGraphNode_equals.java
method_name = equals
method_body = @Override public boolean equals(Object o) { if (this == o) { return true; } if (o == null || getClass() != o.getClass()) { return false; } UndirectedGraphNode that = (UndirectedGraphNode) o; if (label != that.label) { return false; } return neighbors != null ? neighbors.equals(that.neighbors) : that.neighbors == null; }
predict, score, loss = equals, 0.999669075012207, 0.0003669780562631786

Trace of simplified code(s):
{"time": "2021-02-22 01:25:20.016204", "score": "0.9995", "loss": "0.0006", "code": "@Override public boolean equals(Object o) { if (this == o) { return true; } if (o == null || getClass() != o.getClass()) { return false; } UndirectedGraphNode that = (UndirectedGraphNode) o; if (label != that.label) { return false; } return neighbors != null ? neighbors.equals(that.neighbors) : that.neighbors == null; }", "n_tokens": 321, "n_pass": [1, 1, 1]}
{"time": "2021-02-22 01:25:22.697008", "score": "0.9957", "loss": "0.0069", "code": "@Override public boolean equals(Object o) { if (this == o) { return true; } if (o == null || getClass() != o.getClass())hat = (UndirectedGraphNode) o; if (label != that.label) { return false; } return neighbors != null ? neighbors.equals(that.neighbors) : that.neighbors == null; }", "n_tokens": 281, "n_pass": [23, 2, 2]}
{"time": "2021-02-22 01:25:25.387052", "score": "0.9976", "loss": "0.0035", "code": "lean equals(Object o) { if (this == o) { return true; } if (o == null || getClass() != o.getClass())hat = (UndirectedGraphNode) o; if (label != that.label) { return false; } return neighbors != null ? neighbors.equals(that.neighbors) : that.neighbors == null; }", "n_tokens": 261, "n_pass": [52, 3, 3]}
{"time": "2021-02-22 01:25:28.219845", "score": "0.8827", "loss": "0.4942", "code": "lean equals(Object o) { if (this == o) { return true; } if (s() != o.getClass())hat = (UndirectedGraphNode) o; if (label != that.label) { return false; } return neighbors != null ? neighbors.equals(that.neighbors) : that.neighbors == null; }", "n_tokens": 241, "n_pass": [55, 4, 4]}
{"time": "2021-02-22 01:25:30.862945", "score": "0.5526", "loss": "1.6254", "code": "lean equals(Object o) { if (this == o) { return true; } if (etClass())hat = (UndirectedGraphNode) o; if (label != that.label) { return false; } return neighbors != null ? neighbors.equals(that.neighbors) : that.neighbors == null; }", "n_tokens": 231, "n_pass": [92, 5, 5]}
{"time": "2021-02-22 01:25:33.519098", "score": "0.3417", "loss": "1.9733", "code": "lean equals(Object o) { if (this == o) { return true; } if (etClass())hat = (UndphNode) o; if (label != that.label) { return false; } return neighbors != null ? neighbors.equals(that.neighbors) : that.neighbors == null; }", "n_tokens": 221, "n_pass": [94, 6, 6]}
{"time": "2021-02-22 01:25:41.520773", "score": "0.2967", "loss": "3.1198", "code": "lean equals(Object o) { if (this == o) { return true; } if (etClass())hat = (UndphNode) o; if (label != that.label) { return false; } return neighbors != null ? neighbors.equals(thrs) : that.neighbors == null; }", "n_tokens": 211, "n_pass": [105, 9, 7]}
{"time": "2021-02-22 01:25:44.179650", "score": "0.2647", "loss": "3.1803", "code": "lean equals(Object o) { if (this == o) { return true; } if (etClass())hat = (UndphNode) o; if (label != that.label) { return false; } return neighbors != null ? neighbors.equals(thrs) : that == null; }", "n_tokens": 201, "n_pass": [107, 10, 8]}
{"time": "2021-02-22 01:25:47.318867", "score": "0.2233", "loss": "3.395", "code": "lean equals(Object o) { if (this == o) {ue; } if (etClass())hat = (UndphNode) o; if (label != that.label) { return false; } return neighbors != null ? neighbors.equals(thrs) : that == null; }", "n_tokens": 191, "n_pass": [113, 11, 9]}
{"time": "2021-02-22 01:25:55.641768", "score": "0.2245", "loss": "3.384", "code": "lean equals(Object o) { if (this == o) {ue; } if (ss())hat = (UndphNode) o; if (label != that.label) { return false; } return neighbors != null ? neighbors.equals(thrs) : that == null; }", "n_tokens": 186, "n_pass": [173, 14, 10]}
{"time": "2021-02-22 01:25:58.672698", "score": "0.2245", "loss": "3.384", "code": "lean equals(Object o) { if (this == o) {ue; } if (ss())hat = (Unde) o; if (label != that.label) { return false; } return neighbors != null ? neighbors.equals(thrs) : that == null; }", "n_tokens": 181, "n_pass": [176, 15, 11]}
{"time": "2021-02-22 01:26:01.306804", "score": "0.1882", "loss": "3.7803", "code": "lean equals(Object o) { if (this == o) {ue; } if (ss())hat = (Unde) o; if (labelhat.label) { return false; } return neighbors != null ? neighbors.equals(thrs) : that == null; }", "n_tokens": 176, "n_pass": [180, 16, 12]}
{"time": "2021-02-22 01:26:14.881750", "score": "0.6429", "loss": "1.6222", "code": "lean equals(Object o) { if (this == o) {ue; } if (ss())hat = (Unde) o; if (labelhat.label) { return false; } return neighborsull ? neighbors.equals(thrs) : that == null; }", "n_tokens": 171, "n_pass": [190, 21, 13]}
{"time": "2021-02-22 01:26:17.500368", "score": "0.7005", "loss": "1.2644", "code": "lean equals(Object o) { if (this == o) {ue; } if (ss())hat = (Unde) o; if (labelhat.label) { return false; } return neighborsull ?hbors.equals(thrs) : that == null; }", "n_tokens": 166, "n_pass": [192, 22, 14]}
{"time": "2021-02-22 01:26:22.762798", "score": "0.4899", "loss": "2.0534", "code": "lean equals(Object o) { if (this == o) {ue; } if (ss())hat = (Unde) o; if (labelhat.label) { return false; } return neighborsull ?hbors.equals(thrs) : thatull; }", "n_tokens": 161, "n_pass": [198, 24, 15]}
{"time": "2021-02-22 01:26:26.622575", "score": "0.4625", "loss": "2.2869", "code": "lean equals(Object o) { if (this == o) {ue; } if (ss())hat = (Unde) o; if (hat.label) { return false; } return neighborsull ?hbors.equals(thrs) : thatull; }", "n_tokens": 156, "n_pass": [215, 25, 16]}
{"time": "2021-02-22 01:26:37.623632", "score": "0.4625", "loss": "2.2869", "code": "lean equals(Object o) { if (this == o) {ue; } if (ss())hat = (Unde) o; if (hat.label) { return false; } return neigull ?hbors.equals(thrs) : thatull; }", "n_tokens": 151, "n_pass": [224, 29, 17]}
{"time": "2021-02-22 01:26:42.886926", "score": "0.2623", "loss": "3.3322", "code": "lean equals(Object o) { if (this == o) {ue; } if (ss())hat = (Unde) o; if (hat.label) { return false; } return neigull ?hbors.equals(thrs) :ull; }", "n_tokens": 146, "n_pass": [230, 31, 18]}
{"time": "2021-02-22 01:26:58.243931", "score": "0.2796", "loss": "3.2531", "code": "an equals(Object o) { if (this == o) {ue; } if (ss())hat = (Unde) o; if (hat.label) { return false; } return neigull ?hbors.equals(thrs) :ull; }", "n_tokens": 144, "n_pass": [320, 36, 19]}
{"time": "2021-02-22 01:27:16.447491", "score": "0.2803", "loss": "3.2487", "code": "an equals(Object o) { if (this == o) {; } if (ss())hat = (Unde) o; if (hat.label) { return false; } return neigull ?hbors.equals(thrs) :ull; }", "n_tokens": 142, "n_pass": [340, 42, 20]}
{"time": "2021-02-22 01:27:19.066665", "score": "0.2803", "loss": "3.2487", "code": "an equals(Object o) { if (this == o) {} if (ss())hat = (Unde) o; if (hat.label) { return false; } return neigull ?hbors.equals(thrs) :ull; }", "n_tokens": 140, "n_pass": [341, 43, 21]}
{"time": "2021-02-22 01:27:21.687391", "score": "0.2838", "loss": "3.368", "code": "an equals(Object o) { if (this == o) {} if (ss)hat = (Unde) o; if (hat.label) { return false; } return neigull ?hbors.equals(thrs) :ull; }", "n_tokens": 138, "n_pass": [346, 44, 22]}
{"time": "2021-02-22 01:27:24.336012", "score": "0.2832", "loss": "3.4126", "code": "an equals(Object o) { if (this == o) {} if (ss)h= (Unde) o; if (hat.label) { return false; } return neigull ?hbors.equals(thrs) :ull; }", "n_tokens": 135, "n_pass": [348, 45, 23]}
{"time": "2021-02-22 01:27:26.974789", "score": "0.2817", "loss": "3.4184", "code": "an equals(Object o) { if (this == o) {} if (ss)h= (e) o; if (hat.label) { return false; } return neigull ?hbors.equals(thrs) :ull; }", "n_tokens": 132, "n_pass": [350, 46, 24]}
{"time": "2021-02-22 01:27:32.255086", "score": "0.2986", "loss": "3.3085", "code": "an equals(Object o) { if (this == o) {} if (ss)h= (e) o; if (hat.ll) { return false; } return neigull ?hbors.equals(thrs) :ull; }", "n_tokens": 129, "n_pass": [356, 48, 25]}
{"time": "2021-02-22 01:27:40.570463", "score": "0.2986", "loss": "3.3085", "code": "an equals(Object o) { if (this == o) {} if (ss)h= (e) o; if (hat.ll) { return false; } return nell ?hbors.equals(thrs) :ull; }", "n_tokens": 126, "n_pass": [367, 51, 26]}
{"time": "2021-02-22 01:27:43.195096", "score": "0.4101", "loss": "2.8402", "code": "an equals(Object o) { if (this == o) {} if (ss)h= (e) o; if (hat.ll) { return false; } return ne?hbors.equals(thrs) :ull; }", "n_tokens": 123, "n_pass": [368, 52, 27]}
{"time": "2021-02-22 01:27:45.862052", "score": "0.3975", "loss": "2.9322", "code": "an equals(Object o) { if (this == o) {} if (ss)h= (e) o; if (hat.ll) { return false; } return ne?hb.equals(thrs) :ull; }", "n_tokens": 120, "n_pass": [370, 53, 28]}
{"time": "2021-02-22 01:27:51.151501", "score": "0.4435", "loss": "2.6763", "code": "an equals(Object o) { if (this == o) {} if (ss)h= (e) o; if (hat.ll) { return false; } return ne?hb.eqs(thrs) :ull; }", "n_tokens": 117, "n_pass": [372, 55, 29]}
{"time": "2021-02-22 01:27:53.768014", "score": "0.7481", "loss": "1.0438", "code": "an equals(Object o) { if (this == o) {} if (ss)h= (e) o; if (hat.ll) { return false; } return ne?hb.eqs(t) :ull; }", "n_tokens": 114, "n_pass": [374, 56, 30]}
{"time": "2021-02-22 01:27:57.987015", "score": "0.5068", "loss": "2.07", "code": "an equals(ject o) { if (this == o) {} if (ss)h= (e) o; if (hat.ll) { return false; } return ne?hb.eqs(t) :ull; }", "n_tokens": 112, "n_pass": [383, 57, 31]}
{"time": "2021-02-22 01:28:00.658059", "score": "0.5178", "loss": "2.2519", "code": "an equals(ct o) { if (this == o) {} if (ss)h= (e) o; if (hat.ll) { return false; } return ne?hb.eqs(t) :ull; }", "n_tokens": 110, "n_pass": [384, 58, 32]}
{"time": "2021-02-22 01:28:03.382289", "score": "0.2585", "loss": "3.2092", "code": "an equals(ct o) { if (is == o) {} if (ss)h= (e) o; if (hat.ll) { return false; } return ne?hb.eqs(t) :ull; }", "n_tokens": 108, "n_pass": [391, 59, 33]}
{"time": "2021-02-22 01:28:29.599102", "score": "0.2536", "loss": "3.2234", "code": "an equals(ct o) { if (s == o) {} if (ss)h= (e) o; if (hat.ll) { return false; } return ne?hb.eqs(t) :ull; }", "n_tokens": 107, "n_pass": [521, 66, 34]}
{"time": "2021-02-22 01:28:32.397699", "score": "0.2536", "loss": "3.2234", "code": "an equals(ct o) { if (s== o) {} if (ss)h= (e) o; if (hat.ll) { return false; } return ne?hb.eqs(t) :ull; }", "n_tokens": 106, "n_pass": [522, 67, 35]}
{"time": "2021-02-22 01:28:40.345801", "score": "0.2536", "loss": "3.2234", "code": "an equals(ct o) { if (s==o) {} if (ss)h= (e) o; if (hat.ll) { return false; } return ne?hb.eqs(t) :ull; }", "n_tokens": 105, "n_pass": [525, 70, 36]}
{"time": "2021-02-22 01:28:42.976489", "score": "0.2536", "loss": "3.2234", "code": "an equals(ct o) { if (s==o){} if (ss)h= (e) o; if (hat.ll) { return false; } return ne?hb.eqs(t) :ull; }", "n_tokens": 104, "n_pass": [528, 71, 37]}
{"time": "2021-02-22 01:28:45.979793", "score": "0.2536", "loss": "3.2234", "code": "an equals(ct o) { if (s==o){}if (ss)h= (e) o; if (hat.ll) { return false; } return ne?hb.eqs(t) :ull; }", "n_tokens": 103, "n_pass": [531, 72, 38]}
{"time": "2021-02-22 01:28:48.628099", "score": "0.2536", "loss": "3.2234", "code": "an equals(ct o) { if (s==o){}if(ss)h= (e) o; if (hat.ll) { return false; } return ne?hb.eqs(t) :ull; }", "n_tokens": 102, "n_pass": [534, 73, 39]}
{"time": "2021-02-22 01:28:51.258486", "score": "0.2812", "loss": "3.0991", "code": "an equals(ct o) { if (s==o){}if(s)h= (e) o; if (hat.ll) { return false; } return ne?hb.eqs(t) :ull; }", "n_tokens": 101, "n_pass": [536, 74, 40]}
{"time": "2021-02-22 01:28:53.887553", "score": "0.2812", "loss": "3.0991", "code": "an equals(ct o) { if (s==o){}if(s)h=(e) o; if (hat.ll) { return false; } return ne?hb.eqs(t) :ull; }", "n_tokens": 100, "n_pass": [541, 75, 41]}
{"time": "2021-02-22 01:28:56.530029", "score": "0.2812", "loss": "3.0991", "code": "an equals(ct o) { if (s==o){}if(s)h=(e)o; if (hat.ll) { return false; } return ne?hb.eqs(t) :ull; }", "n_tokens": 99, "n_pass": [545, 76, 42]}
{"time": "2021-02-22 01:28:59.158757", "score": "0.254", "loss": "3.2121", "code": "an equals(ct o) { if (s==o){}if(s)h=(e); if (hat.ll) { return false; } return ne?hb.eqs(t) :ull; }", "n_tokens": 98, "n_pass": [546, 77, 43]}
{"time": "2021-02-22 01:29:01.790730", "score": "0.254", "loss": "3.2121", "code": "an equals(ct o) { if (s==o){}if(s)h=(e);if (hat.ll) { return false; } return ne?hb.eqs(t) :ull; }", "n_tokens": 97, "n_pass": [548, 78, 44]}
{"time": "2021-02-22 01:29:04.411879", "score": "0.254", "loss": "3.2121", "code": "an equals(ct o) { if (s==o){}if(s)h=(e);if(hat.ll) { return false; } return ne?hb.eqs(t) :ull; }", "n_tokens": 96, "n_pass": [551, 79, 45]}
{"time": "2021-02-22 01:29:17.678639", "score": "0.2627", "loss": "3.1585", "code": "an equals(ct o) { if (s==o){}if(s)h=(e);if(hat.l) { return false; } return ne?hb.eqs(t) :ull; }", "n_tokens": 95, "n_pass": [557, 84, 46]}
{"time": "2021-02-22 01:29:20.315512", "score": "0.2627", "loss": "3.1585", "code": "an equals(ct o) { if (s==o){}if(s)h=(e);if(hat.l){ return false; } return ne?hb.eqs(t) :ull; }", "n_tokens": 94, "n_pass": [560, 85, 47]}
{"time": "2021-02-22 01:29:36.662004", "score": "0.32", "loss": "2.165", "code": "an equals(ct o) { if (s==o){}if(s)h=(e);if(hat.l){ return false; } return ne?hb.eqs(t) :l; }", "n_tokens": 92, "n_pass": [581, 91, 48]}
{"time": "2021-02-22 01:29:41.962346", "score": "0.3125", "loss": "2.1368", "code": "a equals(ct o) { if (s==o){}if(s)h=(e);if(hat.l){ return false; } return ne?hb.eqs(t) :l; }", "n_tokens": 91, "n_pass": [585, 93, 49]}
{"time": "2021-02-22 01:29:52.908356", "score": "0.3125", "loss": "2.1368", "code": "a equals(ct o){ if (s==o){}if(s)h=(e);if(hat.l){ return false; } return ne?hb.eqs(t) :l; }", "n_tokens": 90, "n_pass": [599, 96, 50]}
{"time": "2021-02-22 01:29:55.511756", "score": "0.3125", "loss": "2.1368", "code": "a equals(ct o){if (s==o){}if(s)h=(e);if(hat.l){ return false; } return ne?hb.eqs(t) :l; }", "n_tokens": 89, "n_pass": [601, 97, 51]}
{"time": "2021-02-22 01:29:58.133684", "score": "0.3125", "loss": "2.1368", "code": "a equals(ct o){if(s==o){}if(s)h=(e);if(hat.l){ return false; } return ne?hb.eqs(t) :l; }", "n_tokens": 88, "n_pass": [604, 98, 52]}
{"time": "2021-02-22 01:30:06.522727", "score": "0.2955", "loss": "2.2426", "code": "a equals(ct o){if(s==o){}if(s)h(e);if(hat.l){ return false; } return ne?hb.eqs(t) :l; }", "n_tokens": 87, "n_pass": [619, 101, 53]}
{"time": "2021-02-22 01:30:55.588871", "score": "0.2955", "loss": "2.2426", "code": "a equals(ct o){if(s==o){}if(s)h(e);if(hat.l){return false; } return ne?hb.eqs(t) :l; }", "n_tokens": 86, "n_pass": [728, 117, 54]}
{"time": "2021-02-22 01:30:58.236105", "score": "0.1838", "loss": "3.2961", "code": "a equals(ct o){if(s==o){}if(s)h(e);if(hat.l){returnfalse; } return ne?hb.eqs(t) :l; }", "n_tokens": 85, "n_pass": [734, 118, 55]}
{"time": "2021-02-22 01:31:14.062222", "score": "0.1838", "loss": "3.2961", "code": "a equals(ct o){if(s==o){}if(s)h(e);if(hat.l){returnfalse;} return ne?hb.eqs(t) :l; }", "n_tokens": 84, "n_pass": [741, 124, 56]}
{"time": "2021-02-22 01:31:16.676162", "score": "0.1838", "loss": "3.2961", "code": "a equals(ct o){if(s==o){}if(s)h(e);if(hat.l){returnfalse;}return ne?hb.eqs(t) :l; }", "n_tokens": 83, "n_pass": [743, 125, 57]}
{"time": "2021-02-22 01:31:43.634211", "score": "0.1838", "loss": "3.2961", "code": "a equals(ct o){if(s==o){}if(s)h(e);if(hat.l){returnfalse;}return ne?hb.eqs(t):l; }", "n_tokens": 82, "n_pass": [763, 135, 58]}
{"time": "2021-02-22 01:31:46.283698", "score": "0.1838", "loss": "3.2961", "code": "a equals(ct o){if(s==o){}if(s)h(e);if(hat.l){returnfalse;}return ne?hb.eqs(t):l;}", "n_tokens": 81, "n_pass": [767, 136, 59]}

Minimal simplified code:
a equals(ct o){if(s==o){}if(s)h(e);if(hat.l){returnfalse;}return ne?hb.eqs(t):l;}

