
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/sakaiproject__sakai/content/content-tool/tool/src/java/org/sakaiproject/content/tool/ListItem_addMember.java
method_name = addMember
method_body = public void addMember(ListItem member) { if (this.members == null) { this.members = new ArrayList<ListItem>(); } this.members.add(member); }
predict, score, loss = addMember, 0.9758220911026001, 0.028544750064611435

Trace of simplified code(s):
{"time": "2021-02-22 18:54:02.764948", "score": "0.9758", "loss": "0.0285", "code": "public void addMember(ListItem member) { if (this.members == null) { this.members = new ArrayList<ListItem>(); } this.members.add(member); }", "n_tokens": 140, "n_pass": [1, 1, 1]}
{"time": "2021-02-22 18:54:05.785688", "score": "0.9634", "loss": "0.0458", "code": "oid addMember(ListItem member) { if (this.members == null) { this.members = new ArrayList<ListItem>(); } this.members.add(member); }", "n_tokens": 132, "n_pass": [44, 2, 2]}
{"time": "2021-02-22 18:54:08.813909", "score": "0.9348", "loss": "0.0808", "code": "oid addMember(ListItem member) { if (this.members == null) {bers = new ArrayList<ListItem>(); } this.members.add(member); }", "n_tokens": 123, "n_pass": [52, 3, 3]}
{"time": "2021-02-22 18:54:14.450084", "score": "0.9348", "loss": "0.0808", "code": "oid addMember(ListItem member) { if (this.members == null) {bers = new Arst<ListItem>(); } this.members.add(member); }", "n_tokens": 118, "n_pass": [99, 5, 4]}
{"time": "2021-02-22 18:54:17.064367", "score": "0.9328", "loss": "0.0831", "code": "oid addMember(ListItem member) { if (this.members == null) {bers = new Arst<Lim>(); } this.members.add(member); }", "n_tokens": 113, "n_pass": [101, 6, 5]}
{"time": "2021-02-22 18:54:19.677026", "score": "0.5191", "loss": "0.7891", "code": "oid addMember(ListItem member) { if (this.members == null) {bers = new Arst<Lim>(); } thmbers.add(member); }", "n_tokens": 108, "n_pass": [104, 7, 6]}
{"time": "2021-02-22 18:54:28.768294", "score": "0.8701", "loss": "0.2411", "code": "oid addMember(Liem member) { if (this.members == null) {bers = new Arst<Lim>(); } thmbers.add(member); }", "n_tokens": 104, "n_pass": [113, 10, 7]}
{"time": "2021-02-22 18:54:31.379262", "score": "0.7106", "loss": "0.5788", "code": "oid addMember(Liem mr) { if (this.members == null) {bers = new Arst<Lim>(); } thmbers.add(member); }", "n_tokens": 100, "n_pass": [115, 11, 8]}
{"time": "2021-02-22 18:54:39.243869", "score": "0.6052", "loss": "0.731", "code": "oid addMember(Liem mr) { if (this.members ==l) {bers = new Arst<Lim>(); } thmbers.add(member); }", "n_tokens": 96, "n_pass": [122, 14, 9]}
{"time": "2021-02-22 18:54:56.438612", "score": "0.5988", "loss": "0.7301", "code": "oid addMember(Liem mr) { if (this.members ==l) {rs = new Arst<Lim>(); } thmbers.add(member); }", "n_tokens": 94, "n_pass": [191, 20, 10]}
{"time": "2021-02-22 18:54:59.047403", "score": "0.5988", "loss": "0.7301", "code": "oid addMember(Liem mr) { if (this.members ==l) {rs = new At<Lim>(); } thmbers.add(member); }", "n_tokens": 92, "n_pass": [196, 21, 11]}
{"time": "2021-02-22 18:55:01.658370", "score": "0.6526", "loss": "0.6355", "code": "oid addMember(Liem mr) { if (this.members ==l) {rs = new At<m>(); } thmbers.add(member); }", "n_tokens": 90, "n_pass": [198, 22, 12]}
{"time": "2021-02-22 18:55:04.301566", "score": "0.6526", "loss": "0.6355", "code": "oid addMember(Liem mr) { if (this.members ==l) {rs = new At<m>(); } ters.add(member); }", "n_tokens": 87, "n_pass": [203, 23, 13]}
{"time": "2021-02-22 18:55:06.936615", "score": "0.5109", "loss": "0.8359", "code": "oid addMember(Liem mr) { if (this.members ==l) {rs = new At<m>(); } t.add(member); }", "n_tokens": 84, "n_pass": [204, 24, 14]}
{"time": "2021-02-22 18:55:09.596461", "score": "0.5241", "loss": "2.5907", "code": "oid addMember(Liem mr) { if (this.members ==l) {rs = new At<m>(); } td(member); }", "n_tokens": 81, "n_pass": [205, 25, 15]}
{"time": "2021-02-22 18:55:14.868150", "score": "0.3746", "loss": "2.6508", "code": "d addMember(Liem mr) { if (this.members ==l) {rs = new At<m>(); } td(member); }", "n_tokens": 79, "n_pass": [210, 27, 16]}
{"time": "2021-02-22 18:55:19.416754", "score": "0.6762", "loss": "2.0845", "code": "d addMember(em mr) { if (this.members ==l) {rs = new At<m>(); } td(member); }", "n_tokens": 77, "n_pass": [217, 28, 17]}
{"time": "2021-02-22 18:55:22.015625", "score": "0.464", "loss": "2.0617", "code": "d addMember(em mr) { if (ts.members ==l) {rs = new At<m>(); } td(member); }", "n_tokens": 75, "n_pass": [225, 29, 18]}
{"time": "2021-02-22 18:55:46.927255", "score": "0.4715", "loss": "1.9967", "code": "d addMember(em mr) { if (t.members ==l) {rs = new At<m>(); } td(member); }", "n_tokens": 74, "n_pass": [331, 36, 19]}
{"time": "2021-02-22 18:56:07.837936", "score": "0.4715", "loss": "1.9967", "code": "d addMember(em mr) { if (t.members==l) {rs = new At<m>(); } td(member); }", "n_tokens": 73, "n_pass": [339, 44, 20]}
{"time": "2021-02-22 18:56:15.683567", "score": "0.4715", "loss": "1.9967", "code": "d addMember(em mr) { if (t.members==l){rs = new At<m>(); } td(member); }", "n_tokens": 72, "n_pass": [344, 47, 21]}
{"time": "2021-02-22 18:56:18.292836", "score": "0.4416", "loss": "1.8142", "code": "d addMember(em mr) { if (t.members==l){s = new At<m>(); } td(member); }", "n_tokens": 71, "n_pass": [346, 48, 22]}
{"time": "2021-02-22 18:56:20.905500", "score": "0.4416", "loss": "1.8142", "code": "d addMember(em mr) { if (t.members==l){s= new At<m>(); } td(member); }", "n_tokens": 70, "n_pass": [348, 49, 23]}
{"time": "2021-02-22 18:56:23.503346", "score": "0.4416", "loss": "1.8142", "code": "d addMember(em mr) { if (t.members==l){s=new At<m>(); } td(member); }", "n_tokens": 69, "n_pass": [350, 50, 24]}
{"time": "2021-02-22 18:56:26.093486", "score": "0.4416", "loss": "1.8142", "code": "d addMember(em mr) { if (t.members==l){s=new t<m>(); } td(member); }", "n_tokens": 68, "n_pass": [355, 51, 25]}
{"time": "2021-02-22 18:56:31.280896", "score": "0.4416", "loss": "1.8142", "code": "d addMember(em mr) { if (t.members==l){s=new t<m>();} td(member); }", "n_tokens": 67, "n_pass": [363, 53, 26]}
{"time": "2021-02-22 18:56:33.882674", "score": "0.4416", "loss": "1.8142", "code": "d addMember(em mr) { if (t.members==l){s=new t<m>();}td(member); }", "n_tokens": 66, "n_pass": [365, 54, 27]}
{"time": "2021-02-22 18:56:41.704919", "score": "0.1289", "loss": "4.494", "code": "d addMember(em mr) { if (t.members==l){s=new t<m>();}td(mber); }", "n_tokens": 64, "n_pass": [369, 57, 28]}
{"time": "2021-02-22 18:57:04.253209", "score": "0.1289", "loss": "4.494", "code": "d addMember(em mr){ if (t.members==l){s=new t<m>();}td(mber); }", "n_tokens": 63, "n_pass": [392, 64, 29]}
{"time": "2021-02-22 18:57:06.858647", "score": "0.1289", "loss": "4.494", "code": "d addMember(em mr){if (t.members==l){s=new t<m>();}td(mber); }", "n_tokens": 62, "n_pass": [394, 65, 30]}
{"time": "2021-02-22 18:57:09.473773", "score": "0.1289", "loss": "4.494", "code": "d addMember(em mr){if(t.members==l){s=new t<m>();}td(mber); }", "n_tokens": 61, "n_pass": [397, 66, 31]}
{"time": "2021-02-22 18:58:17.066553", "score": "0.1289", "loss": "4.494", "code": "d addMember(em mr){if(t.members==l){s=new t<m>();}td(mber);}", "n_tokens": 60, "n_pass": [469, 90, 32]}

Minimal simplified code:
d addMember(em mr){if(t.members==l){s=new t<m>();}td(mber);}

