
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/huxq17__FloatBall/library/src/main/java/com/huxq17/floatball/libarary/utils/LogUtils_v.java
method_name = v
method_body = public static void v(String content, Throwable tr) { if (!allowV) return; StackTraceElement caller = getCallerStackTraceElement(); String tag = generateTag(caller); if (customLogger != null) { customLogger.v(tag, content, tr); } else { Log.v(tag, content, tr); } }
predict, score, loss = v, 0.9999709129333496, 3.099393507000059e-05

Trace of simplified code(s):
{"time": "2021-02-22 12:19:45.870752", "score": "1.0", "loss": "0.0", "code": "public static void v(String content, Throwable tr) { if (!allowV) return; StackTraceElement caller = getCallerStackTraceElement(); String tag = generateTag(caller); if (customLogger != null) { customLogger.v(tag, content, tr); } else { Log.v(tag, content, tr); } }", "n_tokens": 264, "n_pass": [1, 1, 1]}
{"time": "2021-02-22 12:19:48.908406", "score": "1.0", "loss": "0.0", "code": "id v(String content, Throwable tr) { if (!allowV) return; StackTraceElement caller = getCallerStackTraceElement(); String tag = generateTag(caller); if (customLogger != null) { customLogger.v(tag, content, tr); } else { Log.v(tag, content, tr); } }", "n_tokens": 248, "n_pass": [44, 2, 2]}
{"time": "2021-02-22 12:19:51.549862", "score": "0.9999", "loss": "0.0002", "code": "id v(String contr) { if (!allowV) return; StackTraceElement caller = getCallerStackTraceElement(); String tag = generateTag(caller); if (customLogger != null) { customLogger.v(tag, content, tr); } else { Log.v(tag, content, tr); } }", "n_tokens": 232, "n_pass": [46, 3, 3]}
{"time": "2021-02-22 12:19:54.210862", "score": "0.9999", "loss": "0.0001", "code": "id v(String contr) { if (!allowV) return; StackTer = getCallerStackTraceElement(); String tag = generateTag(caller); if (customLogger != null) { customLogger.v(tag, content, tr); } else { Log.v(tag, content, tr); } }", "n_tokens": 216, "n_pass": [49, 4, 4]}
{"time": "2021-02-22 12:19:56.852852", "score": "0.8703", "loss": "0.2771", "code": "id v(String contr) { if (!allowV) return; StackTackTraceElement(); String tag = generateTag(caller); if (customLogger != null) { customLogger.v(tag, content, tr); } else { Log.v(tag, content, tr); } }", "n_tokens": 200, "n_pass": [50, 5, 5]}
{"time": "2021-02-22 12:19:59.493364", "score": "0.8703", "loss": "0.2771", "code": "id v(String contr) { if (!allowV) return; StackTElement(); String tag = generateTag(caller); if (customLogger != null) { customLogger.v(tag, content, tr); } else { Log.v(tag, content, tr); } }", "n_tokens": 192, "n_pass": [87, 6, 6]}
{"time": "2021-02-22 12:20:02.120335", "score": "0.597", "loss": "1.0194", "code": "id v(String contr) { if (!allowV) return; StackTElement(); StringenerateTag(caller); if (customLogger != null) { customLogger.v(tag, content, tr); } else { Log.v(tag, content, tr); } }", "n_tokens": 184, "n_pass": [89, 7, 7]}
{"time": "2021-02-22 12:20:04.740410", "score": "0.597", "loss": "1.0194", "code": "id v(String contr) { if (!allowV) return; StackTElement(); StrinTag(caller); if (customLogger != null) { customLogger.v(tag, content, tr); } else { Log.v(tag, content, tr); } }", "n_tokens": 176, "n_pass": [90, 8, 8]}
{"time": "2021-02-22 12:20:07.356682", "score": "0.5317", "loss": "1.2182", "code": "id v(String contr) { if (!allowV) return; StackTElement(); StrinTag(caller); if (customLogger != null) {gger.v(tag, content, tr); } else { Log.v(tag, content, tr); } }", "n_tokens": 167, "n_pass": [96, 9, 9]}
{"time": "2021-02-22 12:20:09.969683", "score": "0.3902", "loss": "1.8687", "code": "id v(String contr) { if (!allowV) return; StackTElement(); StrinTag(caller); if (customLogger != null) {gger.v(tat, tr); } else { Log.v(tag, content, tr); } }", "n_tokens": 158, "n_pass": [98, 10, 10]}
{"time": "2021-02-22 12:20:12.604553", "score": "0.3965", "loss": "1.9584", "code": "id v(String contr) { if (!allowV) return; StackTElement(); StrinTag(caller); if (customLogger != null) {gger.v(tat, tr); } else { Log.v(tag, tr); } }", "n_tokens": 149, "n_pass": [102, 11, 11]}
{"time": "2021-02-22 12:20:15.225109", "score": "0.6156", "loss": "1.0373", "code": "id v(String contr) { if (!allowV) returnElement(); StrinTag(caller); if (customLogger != null) {gger.v(tat, tr); } else { Log.v(tag, tr); } }", "n_tokens": 141, "n_pass": [109, 12, 12]}
{"time": "2021-02-22 12:20:17.861317", "score": "0.6388", "loss": "0.7914", "code": "id v(String contr) { if (!allowV) returnent(); StrinTag(caller); if (customLogger != null) {gger.v(tat, tr); } else { Log.v(tag, tr); } }", "n_tokens": 137, "n_pass": [161, 13, 13]}
{"time": "2021-02-22 12:20:20.539416", "score": "0.8646", "loss": "0.2634", "code": "id v(String contr) { if (!allowV) returnent(); STag(caller); if (customLogger != null) {gger.v(tat, tr); } else { Log.v(tag, tr); } }", "n_tokens": 133, "n_pass": [163, 14, 14]}
{"time": "2021-02-22 12:20:23.145589", "score": "0.8644", "loss": "0.2607", "code": "id v(String contr) { if (!allowV) returnent(); STag(er); if (customLogger != null) {gger.v(tat, tr); } else { Log.v(tag, tr); } }", "n_tokens": 129, "n_pass": [165, 15, 15]}
{"time": "2021-02-22 12:20:25.757334", "score": "0.8711", "loss": "0.2587", "code": "id v(String contr) { if (!allowV) returnent(); STag(er); if (cusogger != null) {gger.v(tat, tr); } else { Log.v(tag, tr); } }", "n_tokens": 125, "n_pass": [169, 16, 16]}
{"time": "2021-02-22 12:20:28.396921", "score": "0.8711", "loss": "0.2587", "code": "id v(String contr) { if (!allowV) returnent(); STag(er); if (cusr != null) {gger.v(tat, tr); } else { Log.v(tag, tr); } }", "n_tokens": 121, "n_pass": [170, 17, 17]}
{"time": "2021-02-22 12:20:31.017723", "score": "0.8916", "loss": "0.1928", "code": "id v(String contr) { if (!allowV) returnent(); STag(er); if (cusr !=l) {gger.v(tat, tr); } else { Log.v(tag, tr); } }", "n_tokens": 117, "n_pass": [172, 18, 18]}
{"time": "2021-02-22 12:20:33.617290", "score": "0.9523", "loss": "0.1585", "code": "id v(String contr) { if (!allowV) returnent(); STag(er); if (cusr !=l) {gger.v(ttr); } else { Log.v(tag, tr); } }", "n_tokens": 113, "n_pass": [176, 19, 19]}
{"time": "2021-02-22 12:20:36.223209", "score": "0.9575", "loss": "0.1557", "code": "id v(String contr) { if (!allowV) returnent(); STag(er); if (cusr !=l) {gger.v(ttr); } else {v(tag, tr); } }", "n_tokens": 108, "n_pass": [180, 20, 20]}
{"time": "2021-02-22 12:20:38.835609", "score": "0.9966", "loss": "0.005", "code": "id v(String r) { if (!allowV) returnent(); STag(er); if (cusr !=l) {gger.v(ttr); } else {v(tag, tr); } }", "n_tokens": 104, "n_pass": [187, 21, 21]}
{"time": "2021-02-22 12:20:44.082835", "score": "0.9966", "loss": "0.005", "code": "id v(String r) { if (!allowV) reent(); STag(er); if (cusr !=l) {gger.v(ttr); } else {v(tag, tr); } }", "n_tokens": 100, "n_pass": [193, 23, 22]}
{"time": "2021-02-22 12:20:46.692771", "score": "0.9976", "loss": "0.0044", "code": "id v(String r) { if (!allowV) reent(); STag(er); if (cusl) {gger.v(ttr); } else {v(tag, tr); } }", "n_tokens": 96, "n_pass": [200, 24, 23]}
{"time": "2021-02-22 12:20:51.927628", "score": "0.9975", "loss": "0.0047", "code": "id v(String r) { if (!allowV) reent(); STag(er); if (cusl) {er.v(ttr); } else {v(tag, tr); } }", "n_tokens": 94, "n_pass": [272, 26, 24]}
{"time": "2021-02-22 12:20:54.600766", "score": "0.9986", "loss": "0.0028", "code": "id v(String r) { if (!allowV) reent(); STag(er); if (cusl) {er(ttr); } else {v(tag, tr); } }", "n_tokens": 92, "n_pass": [273, 27, 25]}
{"time": "2021-02-22 12:20:57.222008", "score": "0.9989", "loss": "0.0014", "code": "id v(String r) { if (!allowV) reent(); STag(er); if (cusl) {er(t); } else {v(tag, tr); } }", "n_tokens": 90, "n_pass": [275, 28, 26]}
{"time": "2021-02-22 12:21:00.596697", "score": "0.9405", "loss": "0.1533", "code": "id v(Sing r) { if (!allowV) reent(); STag(er); if (cusl) {er(t); } else {v(tag, tr); } }", "n_tokens": 88, "n_pass": [290, 29, 27]}
{"time": "2021-02-22 12:21:03.211863", "score": "0.9995", "loss": "0.0007", "code": "id v(Sg r) { if (!allowV) reent(); STag(er); if (cusl) {er(t); } else {v(tag, tr); } }", "n_tokens": 86, "n_pass": [291, 30, 28]}
{"time": "2021-02-22 12:21:05.846225", "score": "0.8219", "loss": "0.2505", "code": "id v(Sg r) { if (!lowV) reent(); STag(er); if (cusl) {er(t); } else {v(tag, tr); } }", "n_tokens": 84, "n_pass": [298, 31, 29]}
{"time": "2021-02-22 12:21:08.494350", "score": "0.6803", "loss": "0.5151", "code": "id v(Sg r) { if (!wV) reent(); STag(er); if (cusl) {er(t); } else {v(tag, tr); } }", "n_tokens": 82, "n_pass": [299, 32, 30]}
{"time": "2021-02-22 12:21:11.133357", "score": "0.6223", "loss": "0.6275", "code": "id v(Sg r) { if (!wV) ent(); STag(er); if (cusl) {er(t); } else {v(tag, tr); } }", "n_tokens": 80, "n_pass": [302, 33, 31]}
{"time": "2021-02-22 12:21:13.746663", "score": "0.6886", "loss": "0.4905", "code": "id v(Sg r) { if (!wV) t(); STag(er); if (cusl) {er(t); } else {v(tag, tr); } }", "n_tokens": 78, "n_pass": [303, 34, 32]}
{"time": "2021-02-22 12:21:16.350945", "score": "0.5469", "loss": "0.9929", "code": "id v(Sg r) { if (!wV) t();Tag(er); if (cusl) {er(t); } else {v(tag, tr); } }", "n_tokens": 76, "n_pass": [306, 35, 33]}
{"time": "2021-02-22 12:21:18.953968", "score": "0.5172", "loss": "0.8805", "code": "id v(Sg r) { if (!wV) t();g(er); if (cusl) {er(t); } else {v(tag, tr); } }", "n_tokens": 74, "n_pass": [307, 36, 34]}
{"time": "2021-02-22 12:21:24.194630", "score": "0.6437", "loss": "0.6496", "code": "id v(Sg r) { if (!wV) t();g(er); if (cl) {er(t); } else {v(tag, tr); } }", "n_tokens": 72, "n_pass": [314, 38, 35]}
{"time": "2021-02-22 12:21:26.801057", "score": "0.6668", "loss": "0.5722", "code": "id v(Sg r) { if (!wV) t();g(er); if (cl) {(t); } else {v(tag, tr); } }", "n_tokens": 70, "n_pass": [317, 39, 36]}
{"time": "2021-02-22 12:21:30.192482", "score": "0.5856", "loss": "0.7443", "code": "id v(Sg r) { if (!wV) t();g(); if (cl) {(t); } else {v(tag, tr); } }", "n_tokens": 68, "n_pass": [344, 40, 37]}
{"time": "2021-02-22 12:21:39.275922", "score": "0.5856", "loss": "0.7443", "code": "id v(Sg r) { if (!wV) t();g();if (cl) {(t); } else {v(tag, tr); } }", "n_tokens": 67, "n_pass": [443, 41, 38]}
{"time": "2021-02-22 12:21:41.880681", "score": "0.5856", "loss": "0.7443", "code": "id v(Sg r) { if (!wV) t();g();if(cl) {(t); } else {v(tag, tr); } }", "n_tokens": 66, "n_pass": [445, 42, 39]}
{"time": "2021-02-22 12:21:44.487952", "score": "0.4421", "loss": "1.0064", "code": "id v(Sg r) { if (!wV) t();g();if(l) {(t); } else {v(tag, tr); } }", "n_tokens": 65, "n_pass": [447, 43, 40]}
{"time": "2021-02-22 12:21:47.114466", "score": "0.4421", "loss": "1.0064", "code": "id v(Sg r) { if (!wV) t();g();if(l){(t); } else {v(tag, tr); } }", "n_tokens": 64, "n_pass": [450, 44, 41]}
{"time": "2021-02-22 12:21:49.721425", "score": "0.4421", "loss": "1.0064", "code": "id v(Sg r) { if (!wV) t();g();if(l){(t);} else {v(tag, tr); } }", "n_tokens": 63, "n_pass": [456, 45, 42]}
{"time": "2021-02-22 12:21:52.337251", "score": "0.4421", "loss": "1.0064", "code": "id v(Sg r) { if (!wV) t();g();if(l){(t);}else {v(tag, tr); } }", "n_tokens": 62, "n_pass": [458, 46, 43]}
{"time": "2021-02-22 12:21:54.941595", "score": "0.4421", "loss": "1.0064", "code": "id v(Sg r) { if (!wV) t();g();if(l){(t);}else{v(tag, tr); } }", "n_tokens": 61, "n_pass": [463, 47, 44]}
{"time": "2021-02-22 12:22:05.420617", "score": "0.4421", "loss": "1.0064", "code": "id v(Sg r) { if (!wV) t();g();if(l){(t);}else{v(tag,tr); } }", "n_tokens": 60, "n_pass": [471, 51, 45]}
{"time": "2021-02-22 12:22:08.039850", "score": "0.2932", "loss": "1.3342", "code": "d v(Sg r) { if (!wV) t();g();if(l){(t);}else{v(tag,tr); } }", "n_tokens": 59, "n_pass": [476, 52, 46]}
{"time": "2021-02-22 12:22:17.012528", "score": "0.2932", "loss": "1.3342", "code": "d v(Sg r){ if (!wV) t();g();if(l){(t);}else{v(tag,tr); } }", "n_tokens": 58, "n_pass": [486, 55, 47]}
{"time": "2021-02-22 12:22:19.644107", "score": "0.2932", "loss": "1.3342", "code": "d v(Sg r){if (!wV) t();g();if(l){(t);}else{v(tag,tr); } }", "n_tokens": 57, "n_pass": [488, 56, 48]}
{"time": "2021-02-22 12:22:22.283456", "score": "0.2932", "loss": "1.3342", "code": "d v(Sg r){if(!wV) t();g();if(l){(t);}else{v(tag,tr); } }", "n_tokens": 56, "n_pass": [491, 57, 49]}
{"time": "2021-02-22 12:22:24.892783", "score": "0.3882", "loss": "1.0729", "code": "d v(Sg r){if(wV) t();g();if(l){(t);}else{v(tag,tr); } }", "n_tokens": 55, "n_pass": [493, 58, 50]}
{"time": "2021-02-22 12:22:27.489352", "score": "0.9076", "loss": "0.1077", "code": "d v(Sg r){if(V) t();g();if(l){(t);}else{v(tag,tr); } }", "n_tokens": 54, "n_pass": [494, 59, 51]}
{"time": "2021-02-22 12:22:30.083931", "score": "0.9076", "loss": "0.1077", "code": "d v(Sg r){if(V)t();g();if(l){(t);}else{v(tag,tr); } }", "n_tokens": 53, "n_pass": [497, 60, 52]}
{"time": "2021-02-22 12:22:32.699211", "score": "0.5821", "loss": "0.5939", "code": "d v(Sg r){if(V)t();g();if(l){(t);}else{v(ag,tr); } }", "n_tokens": 52, "n_pass": [524, 61, 53]}
{"time": "2021-02-22 12:22:35.296810", "score": "0.7596", "loss": "0.292", "code": "d v(Sg r){if(V)t();g();if(l){(t);}else{v(g,tr); } }", "n_tokens": 51, "n_pass": [525, 62, 54]}
{"time": "2021-02-22 12:22:41.645344", "score": "0.5955", "loss": "0.5255", "code": "d v(g r){if(V)t();g();if(l){(t);}else{v(g,tr); } }", "n_tokens": 50, "n_pass": [536, 64, 55]}
{"time": "2021-02-22 12:22:51.790229", "score": "0.3629", "loss": "1.0278", "code": "d v(g r){if(V)t();g();if(l){(t);}else{v(g,t); } }", "n_tokens": 49, "n_pass": [592, 67, 56]}
{"time": "2021-02-22 12:22:54.405597", "score": "0.3629", "loss": "1.0278", "code": "d v(g r){if(V)t();g();if(l){(t);}else{v(g,t);} }", "n_tokens": 48, "n_pass": [595, 68, 57]}
{"time": "2021-02-22 12:22:57.012567", "score": "0.3629", "loss": "1.0278", "code": "d v(g r){if(V)t();g();if(l){(t);}else{v(g,t);}}", "n_tokens": 47, "n_pass": [597, 69, 58]}

Minimal simplified code:
d v(g r){if(V)t();g();if(l){(t);}else{v(g,t);}}

