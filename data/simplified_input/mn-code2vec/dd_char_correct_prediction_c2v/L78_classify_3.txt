
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/CogComp__cogcomp-nlp/md/src/main/java/org/cogcomp/md/LbjGen/wordFormBetween_classify.java
method_name = classify
method_body = public FeatureVector[] classify(Object[] examples) { if (!(examples instanceof Relation[])) { String type = examples == null ? "null" : examples.getClass().getName(); System.err.println("Classifier 'wordFormBetween(Relation)' defined on line 194 of extent.lbj received '" + type + "' as input."); new Exception().printStackTrace(); System.exit(1); } return super.classify(examples); }
predict, score, loss = classify, 0.9049949049949646, 0.1295616328716278

Trace of simplified code(s):
{"time": "2021-02-22 03:59:53.431253", "score": "0.905", "loss": "0.1296", "code": "public FeatureVector[] classify(Object[] examples) { if (!(examples instanceof Relation[])) { String type = examples == null ? \"null\" : examples.getClass().getName(); System.err.println(\"Classifier 'wordFormBetween(Relation)' defined on line 194 of extent.lbj received '\" + type + \"' as input.\"); new Exception().printStackTrace(); System.exit(1); } return super.classify(examples); }", "n_tokens": 384, "n_pass": [1, 1, 1]}
{"time": "2021-02-22 03:59:56.063743", "score": "0.8983", "loss": "0.1391", "code": "public FeatureVector[] classify(Object[] examples) { if (!(examples instanceof Relation[])) { String type = examples == null ? \"null\" : examples.getClass().getName(); System.err.println(\"Classnput.\"); new Exception().printStackTrace(); System.exit(1); } return super.classify(examples); }", "n_tokens": 288, "n_pass": [10, 2, 2]}
{"time": "2021-02-22 03:59:58.718259", "score": "0.7848", "loss": "0.3028", "code": "public FeatureVector[] classify(Object[] examples) { if (!(examples instanceof Relation[])) { St.getClass().getName(); System.err.println(\"Classnput.\"); new Exception().printStackTrace(); System.exit(1); } return super.classify(examples); }", "n_tokens": 240, "n_pass": [23, 3, 3]}
{"time": "2021-02-22 04:00:01.393287", "score": "0.7901", "loss": "0.2895", "code": "public FeatureVector[] classify(Object[] examples) { if (!(examples instanceof Relation[])) { Stystem.err.println(\"Classnput.\"); new Exception().printStackTrace(); System.exit(1); } return super.classify(examples); }", "n_tokens": 216, "n_pass": [38, 4, 4]}
{"time": "2021-02-22 04:00:04.441327", "score": "0.8345", "loss": "0.2233", "code": "public FeatureVector[] classify(Object[] examples) { if (!(examples instanceof Relation[])) { Stintln(\"Classnput.\"); new Exception().printStackTrace(); System.exit(1); } return super.classify(examples); }", "n_tokens": 204, "n_pass": [65, 5, 5]}
{"time": "2021-02-22 04:00:07.068620", "score": "0.8358", "loss": "0.2131", "code": "public FeatureVector[] classify(Object[] examples) { if (!(examples instanceof Relation[])) { Stintln(\"Classnput.\"); new Exception().printStackTem.exit(1); } return super.classify(examples); }", "n_tokens": 192, "n_pass": [69, 6, 6]}
{"time": "2021-02-22 04:00:09.698238", "score": "0.8565", "loss": "0.1849", "code": "reVector[] classify(Object[] examples) { if (!(examples instanceof Relation[])) { Stintln(\"Classnput.\"); new Exception().printStackTem.exit(1); } return super.classify(examples); }", "n_tokens": 180, "n_pass": [74, 7, 7]}
{"time": "2021-02-22 04:00:12.727049", "score": "0.8551", "loss": "0.1893", "code": "or[] classify(Object[] examples) { if (!(examples instanceof Relation[])) { Stintln(\"Classnput.\"); new Exception().printStackTem.exit(1); } return super.classify(examples); }", "n_tokens": 174, "n_pass": [120, 8, 8]}
{"time": "2021-02-22 04:00:15.769837", "score": "0.8301", "loss": "0.2415", "code": "or[] classify(Object[] es) { if (!(examples instanceof Relation[])) { Stintln(\"Classnput.\"); new Exception().printStackTem.exit(1); } return super.classify(examples); }", "n_tokens": 168, "n_pass": [124, 9, 9]}
{"time": "2021-02-22 04:00:18.421668", "score": "0.8307", "loss": "0.2562", "code": "or[] classify(Object[] es) { if (!(es instanceof Relation[])) { Stintln(\"Classnput.\"); new Exception().printStackTem.exit(1); } return super.classify(examples); }", "n_tokens": 162, "n_pass": [127, 10, 10]}
{"time": "2021-02-22 04:00:21.065399", "score": "0.8291", "loss": "0.2598", "code": "or[] classify(Object[] es) { if (!(es instanceof Relation[])) { Stintln(\"Classnput.\"); newtion().printStackTem.exit(1); } return super.classify(examples); }", "n_tokens": 156, "n_pass": [137, 11, 11]}
{"time": "2021-02-22 04:00:23.693293", "score": "0.8291", "loss": "0.2598", "code": "or[] classify(Object[] es) { if (!(es instanceof Relation[])) { Stintln(\"Classnput.\"); newtion().printem.exit(1); } return super.classify(examples); }", "n_tokens": 150, "n_pass": [140, 12, 12]}
{"time": "2021-02-22 04:00:26.313642", "score": "0.9436", "loss": "0.0863", "code": "or[] classify(Object[] es) { if (!(es instanceof Relation[])) { Stintln(\"Classnput.\"); newtion().printt(1); } return super.classify(examples); }", "n_tokens": 144, "n_pass": [141, 13, 13]}
{"time": "2021-02-22 04:00:28.935246", "score": "0.5315", "loss": "0.9829", "code": "or[] classify(Object[] es) { if (!(es instanceof Relation[])) { Stintln(\"Classnput.\"); newtion().printt(1); } retuer.classify(examples); }", "n_tokens": 138, "n_pass": [144, 14, 14]}
{"time": "2021-02-22 04:00:34.186006", "score": "0.3997", "loss": "1.3519", "code": "or[] classify(Object[] es) { if (!(es instanceof Relation[])) { Stintln(\"Classnput.\"); newtion().printt(1); } retuer.classify(es); }", "n_tokens": 132, "n_pass": [147, 16, 15]}
{"time": "2021-02-22 04:00:43.662084", "score": "0.3987", "loss": "1.3561", "code": "or[] classify(Object[] es) { if (!(es instanceof Reion[])) { Stintln(\"Classnput.\"); newtion().printt(1); } retuer.classify(es); }", "n_tokens": 129, "n_pass": [233, 19, 16]}
{"time": "2021-02-22 04:00:46.268824", "score": "0.399", "loss": "1.3539", "code": "or[] classify(Object[] es) { if (!(es instanceof Re[])) { Stintln(\"Classnput.\"); newtion().printt(1); } retuer.classify(es); }", "n_tokens": 126, "n_pass": [234, 20, 17]}
{"time": "2021-02-22 04:00:48.897584", "score": "0.399", "loss": "1.3539", "code": "or[] classify(Object[] es) { if (!(es instanceof Re[])) {intln(\"Classnput.\"); newtion().printt(1); } retuer.classify(es); }", "n_tokens": 123, "n_pass": [237, 21, 18]}
{"time": "2021-02-22 04:00:51.527588", "score": "0.46", "loss": "1.1737", "code": "or[] classify(Object[] es) { if (!(es instanceof Re[])) {ln(\"Classnput.\"); newtion().printt(1); } retuer.classify(es); }", "n_tokens": 120, "n_pass": [238, 22, 19]}
{"time": "2021-02-22 04:00:54.173033", "score": "0.46", "loss": "1.1737", "code": "or[] classify(Object[] es) { if (!(es instanceof Re[])) {ln(\"Clnput.\"); newtion().printt(1); } retuer.classify(es); }", "n_tokens": 117, "n_pass": [241, 23, 20]}
{"time": "2021-02-22 04:00:56.783400", "score": "0.513", "loss": "0.9958", "code": "or[] classify(Object[] es) { if (!(es instanceof Re[])) {ln(\"Clt.\"); newtion().printt(1); } retuer.classify(es); }", "n_tokens": 114, "n_pass": [242, 24, 21]}
{"time": "2021-02-22 04:01:02.006403", "score": "0.521", "loss": "0.9902", "code": "or[] classify(Object[] es) { if (!(es instanceof Re[])) {ln(\"Clt.\"); newn().printt(1); } retuer.classify(es); }", "n_tokens": 111, "n_pass": [246, 26, 22]}
{"time": "2021-02-22 04:01:04.634615", "score": "0.639", "loss": "0.6405", "code": "or[] classify(Object[] es) { if (!(es instanceof Re[])) {ln(\"Clt.\"); newn().prt(1); } retuer.classify(es); }", "n_tokens": 108, "n_pass": [249, 27, 23]}
{"time": "2021-02-22 04:01:07.261549", "score": "0.6488", "loss": "0.6557", "code": "or[] classify(Object[] es) { if (!(es instanceof Re[])) {ln(\"Clt.\"); newn().prt(1); } rer.classify(es); }", "n_tokens": 105, "n_pass": [253, 28, 24]}
{"time": "2021-02-22 04:01:18.515847", "score": "0.2564", "loss": "2.0836", "code": "or[] classify(Oct[] es) { if (!(es instanceof Re[])) {ln(\"Clt.\"); newn().prt(1); } rer.classify(es); }", "n_tokens": 102, "n_pass": [265, 32, 25]}
{"time": "2021-02-22 04:01:35.775773", "score": "0.7235", "loss": "0.4498", "code": "or[] classify(ct[] es) { if (!(es instanceof Re[])) {ln(\"Clt.\"); newn().prt(1); } rer.classify(es); }", "n_tokens": 101, "n_pass": [372, 37, 26]}
{"time": "2021-02-22 04:01:38.389469", "score": "0.4623", "loss": "0.9326", "code": "or[] classify(t[] es) { if (!(es instanceof Re[])) {ln(\"Clt.\"); newn().prt(1); } rer.classify(es); }", "n_tokens": 100, "n_pass": [373, 38, 27]}
{"time": "2021-02-22 04:01:40.994778", "score": "0.4623", "loss": "0.9326", "code": "or[] classify(t[]es) { if (!(es instanceof Re[])) {ln(\"Clt.\"); newn().prt(1); } rer.classify(es); }", "n_tokens": 99, "n_pass": [377, 39, 28]}
{"time": "2021-02-22 04:01:43.609042", "score": "0.6875", "loss": "0.4883", "code": "or[] classify(t[]s) { if (!(es instanceof Re[])) {ln(\"Clt.\"); newn().prt(1); } rer.classify(es); }", "n_tokens": 98, "n_pass": [378, 40, 29]}
{"time": "2021-02-22 04:01:46.227073", "score": "0.6875", "loss": "0.4883", "code": "or[] classify(t[]s){ if (!(es instanceof Re[])) {ln(\"Clt.\"); newn().prt(1); } rer.classify(es); }", "n_tokens": 97, "n_pass": [381, 41, 30]}
{"time": "2021-02-22 04:01:48.843851", "score": "0.6875", "loss": "0.4883", "code": "or[] classify(t[]s){if (!(es instanceof Re[])) {ln(\"Clt.\"); newn().prt(1); } rer.classify(es); }", "n_tokens": 96, "n_pass": [383, 42, 31]}
{"time": "2021-02-22 04:01:51.455148", "score": "0.6875", "loss": "0.4883", "code": "or[] classify(t[]s){if(!(es instanceof Re[])) {ln(\"Clt.\"); newn().prt(1); } rer.classify(es); }", "n_tokens": 95, "n_pass": [386, 43, 32]}
{"time": "2021-02-22 04:01:54.092991", "score": "0.712", "loss": "0.4404", "code": "or[] classify(t[]s){if((es instanceof Re[])) {ln(\"Clt.\"); newn().prt(1); } rer.classify(es); }", "n_tokens": 94, "n_pass": [388, 44, 33]}
{"time": "2021-02-22 04:01:56.715111", "score": "0.72", "loss": "0.4263", "code": "or[] classify(t[]s){if((s instanceof Re[])) {ln(\"Clt.\"); newn().prt(1); } rer.classify(es); }", "n_tokens": 93, "n_pass": [390, 45, 34]}
{"time": "2021-02-22 04:01:59.336734", "score": "0.721", "loss": "0.4254", "code": "or[] classify(t[]s){if((s instanceof Re)) {ln(\"Clt.\"); newn().prt(1); } rer.classify(es); }", "n_tokens": 91, "n_pass": [399, 46, 35]}
{"time": "2021-02-22 04:02:01.976794", "score": "0.6583", "loss": "0.5176", "code": "or[] classify(t[]s){if((s instanceof Re)) {(\"Clt.\"); newn().prt(1); } rer.classify(es); }", "n_tokens": 89, "n_pass": [402, 47, 36]}
{"time": "2021-02-22 04:02:04.600814", "score": "0.6581", "loss": "0.5197", "code": "or[] classify(t[]s){if((s instanceof Re)) {(\"t.\"); newn().prt(1); } rer.classify(es); }", "n_tokens": 87, "n_pass": [404, 48, 37]}
{"time": "2021-02-22 04:02:07.210096", "score": "0.6497", "loss": "0.5328", "code": "or[] classify(t[]s){if((s instanceof Re)) {(\"\"); newn().prt(1); } rer.classify(es); }", "n_tokens": 85, "n_pass": [405, 49, 38]}
{"time": "2021-02-22 04:02:09.813636", "score": "0.5879", "loss": "0.6416", "code": "or[] classify(t[]s){if((s instanceof Re)) {(\"\"); wn().prt(1); } rer.classify(es); }", "n_tokens": 83, "n_pass": [408, 50, 39]}
{"time": "2021-02-22 04:02:12.421113", "score": "0.3825", "loss": "1.1496", "code": "or[] classify(t[]s){if((s instanceof Re)) {(\"\"); wn.prt(1); } rer.classify(es); }", "n_tokens": 81, "n_pass": [410, 51, 40]}
{"time": "2021-02-22 04:02:15.049898", "score": "0.9287", "loss": "0.1147", "code": "or[] classify(t[]s){if((s instanceof Re)) {(\"\"); wnrt(1); } rer.classify(es); }", "n_tokens": 79, "n_pass": [411, 52, 41]}
{"time": "2021-02-22 04:02:17.680558", "score": "0.8007", "loss": "0.3045", "code": "or[] classify(t[]s){if((s instanceof Re)) {(\"\"); wn(1); } rer.classify(es); }", "n_tokens": 77, "n_pass": [412, 53, 42]}
{"time": "2021-02-22 04:02:20.287646", "score": "0.8", "loss": "0.2875", "code": "or[] classify(t[]s){if((s instanceof Re)) {(\"\"); wn(1); }er.classify(es); }", "n_tokens": 75, "n_pass": [416, 54, 43]}
{"time": "2021-02-22 04:02:33.342141", "score": "0.4291", "loss": "1.0007", "code": "or[] classify(t[]s){if((s instanceof Re)) {(\"\"); wn(1); }er.classify(); }", "n_tokens": 73, "n_pass": [423, 59, 44]}
{"time": "2021-02-22 04:02:35.969175", "score": "0.6504", "loss": "0.5289", "code": "r[] classify(t[]s){if((s instanceof Re)) {(\"\"); wn(1); }er.classify(); }", "n_tokens": 72, "n_pass": [426, 60, 45]}
{"time": "2021-02-22 04:02:38.576525", "score": "0.6504", "loss": "0.5289", "code": "r[]classify(t[]s){if((s instanceof Re)) {(\"\"); wn(1); }er.classify(); }", "n_tokens": 71, "n_pass": [430, 61, 46]}
{"time": "2021-02-22 04:02:44.319326", "score": "0.8839", "loss": "0.1651", "code": "r[]classify(t[]s){if((s instanceof Re)) {(\"\"); (1); }er.classify(); }", "n_tokens": 69, "n_pass": [463, 62, 47]}
{"time": "2021-02-22 04:03:03.703755", "score": "0.8757", "loss": "0.1722", "code": "r[]classify(t[]s){if((s instanceof Re)) {(\"\"); (1); }r.classify(); }", "n_tokens": 68, "n_pass": [557, 67, 48]}
{"time": "2021-02-22 04:03:29.808778", "score": "0.8757", "loss": "0.1722", "code": "r[]classify(t[]s){if((s instanceof Re)) {(\"\"); (1); }r.classify();}", "n_tokens": 67, "n_pass": [570, 77, 49]}
{"time": "2021-02-22 04:03:35.586049", "score": "0.8659", "loss": "0.1872", "code": "r[]classify(t[]s){if((s instanceof e)) {(\"\"); (1); }r.classify();}", "n_tokens": 66, "n_pass": [607, 78, 50]}
{"time": "2021-02-22 04:03:38.192791", "score": "0.8659", "loss": "0.1872", "code": "r[]classify(t[]s){if((s instanceof e)){(\"\"); (1); }r.classify();}", "n_tokens": 65, "n_pass": [611, 79, 51]}
{"time": "2021-02-22 04:03:40.800370", "score": "0.8659", "loss": "0.1872", "code": "r[]classify(t[]s){if((s instanceof e)){(\"\");(1); }r.classify();}", "n_tokens": 64, "n_pass": [618, 80, 52]}
{"time": "2021-02-22 04:03:43.403186", "score": "0.8659", "loss": "0.1872", "code": "r[]classify(t[]s){if((s instanceof e)){(\"\");(1);}r.classify();}", "n_tokens": 63, "n_pass": [623, 81, 53]}

Minimal simplified code:
r[]classify(t[]s){if((s instanceof e)){("");(1);}r.classify();}

