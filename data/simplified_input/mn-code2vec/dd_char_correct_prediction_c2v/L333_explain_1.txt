
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/XiaoMi__linden/linden-core/src/main/java/com/xiaomi/linden/lucene/query/flexiblequery/FlexibleWeight_explain.java
method_name = explain
method_body = @Override public Explanation explain(AtomicReaderContext context, int doc) throws IOException { FlexibleScorer scorer = (FlexibleScorer) scorer(context, context.reader().getLiveDocs()); if (scorer != null) { int newDoc = scorer.advance(doc); if (newDoc == doc) { FlexibleScoreModelStrategy strategy = scorer.getStrategy(); strategy.prepare(0, 0, true); return strategy.explain(similarity, query, doc); } } return new ComplexExplanation(false, 0.0f, "no matching term"); }
predict, score, loss = explain, 0.9999970197677612, 3.099436753473128e-06

Trace of simplified code(s):
{"time": "2021-02-25 02:50:43.009940", "score": "1.0", "loss": "0.0", "code": "@Override public Explanation explain(AtomicReaderContext context, int doc) throws IOException { FlexibleScorer scorer = (FlexibleScorer) scorer(context, context.reader().getLiveDocs()); if (scorer != null) { int newDoc = scorer.advance(doc); if (newDoc == doc) { FlexibleScoreModelStrategy strategy = scorer.getStrategy(); strategy.prepare(0, 0, true); return strategy.explain(similarity, query, doc); } } return new ComplexExplanation(false, 0.0f, \"no matching term\"); }", "n_tokens": 471, "n_pass": [1, 1, 1]}
{"time": "2021-02-25 02:50:46.140308", "score": "1.0", "loss": "0.0", "code": "@Override public Explanation explain(AtomicReaderContext context, int doc) throws IOException { FlexibleScorer scorer = (FlexibleScorer) scorer(civeDocs()); if (scorer != null) { int newDoc = scorer.advance(doc); if (newDoc == doc) { FlexibleScoreModelStrategy strategy = scorer.getStrategy(); strategy.prepare(0, 0, true); return strategy.explain(similarity, query, doc); } } return new ComplexExplanation(false, 0.0f, \"no matching term\"); }", "n_tokens": 442, "n_pass": [49, 2, 2]}
{"time": "2021-02-25 02:50:48.821149", "score": "1.0", "loss": "0.0", "code": "@Override public Explanation explain(AtomicReaderContext context, int doc) throws IOException { FlexibleScorer scorer = (FlexibleScorer) scorer(civeDocs()); if (scorer != null) { int newDoc = scorer.advance(doc); if (newDoc == doc) { FlexibleScoreModelStrategy s; strategy.prepare(0, 0, true); return strategy.explain(similarity, query, doc); } } return new ComplexExplanation(false, 0.0f, \"no matching term\"); }", "n_tokens": 412, "n_pass": [54, 3, 3]}
{"time": "2021-02-25 02:50:51.486946", "score": "1.0", "loss": "0.0", "code": "@Override public Explanation explain(AtomicReaderContext context, int doc) throws IOException { FlexibleScorer scorer = (FlexibleScorer) scorer(civeDocs()); if (scorer != null) { int newDoc = scorer.advance(doc); if (newDoc == doc) { FlexibleScoreModelStrategy s; return strategy.explain(similarity, query, doc); } } return new ComplexExplanation(false, 0.0f, \"no matching term\"); }", "n_tokens": 382, "n_pass": [55, 4, 4]}
{"time": "2021-02-25 02:50:54.688366", "score": "1.0", "loss": "0.0", "code": "@Override public Explanation explain(AtomicReaderContext context, int doc) throws IOException { FlexibleScorer scorer = (FlexibleScorer) scorer(civeDocs()); if (scorer != null) { int newDoc = scorer.advance(doc); if (newDoc == doc) { FlexibleScoreModelStrategy s; return strategy.explain(simidoc); } } return new ComplexExplanation(false, 0.0f, \"no matching term\"); }", "n_tokens": 367, "n_pass": [97, 5, 5]}
{"time": "2021-02-25 02:50:57.384332", "score": "1.0", "loss": "0.0", "code": "@Override public Explanation explain(AtomicReaderContext context, int doc) throws IOException { FlexibleScorer scorer = (FlexibleScorer) scorer(civeDocs()); if (scorer != null) { int newDoc = scorer.advance(doc); if (newDoc == doc) { FlexibleScoreModelStrategy s; return strategy.explain(simidoc); } } returplanation(false, 0.0f, \"no matching term\"); }", "n_tokens": 352, "n_pass": [98, 6, 6]}
{"time": "2021-02-25 02:51:00.190648", "score": "0.9899", "loss": "0.0135", "code": "@Override publ explain(AtomicReaderContext context, int doc) throws IOException { FlexibleScorer scorer = (FlexibleScorer) scorer(civeDocs()); if (scorer != null) { int newDoc = scorer.advance(doc); if (newDoc == doc) { FlexibleScoreModelStrategy s; return strategy.explain(simidoc); } } returplanation(false, 0.0f, \"no matching term\"); }", "n_tokens": 338, "n_pass": [103, 7, 7]}
{"time": "2021-02-25 02:51:02.889906", "score": "0.9998", "loss": "0.0009", "code": "@Override publ explain(Atomi context, int doc) throws IOException { FlexibleScorer scorer = (FlexibleScorer) scorer(civeDocs()); if (scorer != null) { int newDoc = scorer.advance(doc); if (newDoc == doc) { FlexibleScoreModelStrategy s; return strategy.explain(simidoc); } } returplanation(false, 0.0f, \"no matching term\"); }", "n_tokens": 324, "n_pass": [105, 8, 8]}
{"time": "2021-02-25 02:51:05.565154", "score": "0.9998", "loss": "0.0012", "code": "@Override publ explain(Atomi context, int doc) throws IOException { Flcorer = (FlexibleScorer) scorer(civeDocs()); if (scorer != null) { int newDoc = scorer.advance(doc); if (newDoc == doc) { FlexibleScoreModelStrategy s; return strategy.explain(simidoc); } } returplanation(false, 0.0f, \"no matching term\"); }", "n_tokens": 310, "n_pass": [109, 9, 9]}
{"time": "2021-02-25 02:51:08.284618", "score": "0.9997", "loss": "0.0015", "code": "@Override publ explain(Atomi context, int doc) throws IOException { Flcorer = (FlexibleScorer) scorer(civeDocs()); if (scorer != null) { int newDoc = scorer.advance(doc); if (newDoc == doc) { FlexibleScore; return strategy.explain(simidoc); } } returplanation(false, 0.0f, \"no matching term\"); }", "n_tokens": 295, "n_pass": [119, 10, 10]}
{"time": "2021-02-25 02:51:10.969409", "score": "0.9977", "loss": "0.0111", "code": "@Override publ explain(Atomi context, int doc) throws IOException { Flcorer = (FlexibleScorer) scorer(civeDocs()); if (scorer != null) { int newDoc = scorer.advance(doc); if (newDoc == doc) { FlexibleScoregy.explain(simidoc); } } returplanation(false, 0.0f, \"no matching term\"); }", "n_tokens": 280, "n_pass": [120, 11, 11]}
{"time": "2021-02-25 02:51:14.132400", "score": "0.9952", "loss": "0.022", "code": "@Override publ explain(Atomi context, int doc) throws IOException { Flcorer = (FlexibleScorer) scorer(civeDocs()); if (scorer != null) { int newDoc = scorer.advance(doc); if (newDoc == doc) { Flexibleexplain(simidoc); } } returplanation(false, 0.0f, \"no matching term\"); }", "n_tokens": 272, "n_pass": [178, 12, 12]}
{"time": "2021-02-25 02:51:16.829650", "score": "0.9952", "loss": "0.022", "code": "@Override publ explain(Atomi context, int doc) throws IOException { Flcorer = (FlexibleScorer) scorer(civeDocs()); if (scorer != null) { int newDoc = scorer.advance(doc); if (newDoc == doc) { Flexibleexplain(simidoc); } } retion(false, 0.0f, \"no matching term\"); }", "n_tokens": 264, "n_pass": [182, 13, 13]}
{"time": "2021-02-25 02:51:19.575605", "score": "0.9307", "loss": "0.1768", "code": "@Override publ explain(Atomi context, int doc) throws IOException { Flcorer = (FlexibleScorer) scorer(civeDocs()); if (scorer != null) { int newDoc = scorer.advance(doc); if (newDoc == doc) { Flexibleexplain(simidoc); } } retion(fal, \"no matching term\"); }", "n_tokens": 256, "n_pass": [184, 14, 14]}
{"time": "2021-02-25 02:51:25.741047", "score": "0.8959", "loss": "0.1708", "code": "@Override publ explain(Atomi contexdoc) throws IOException { Flcorer = (FlexibleScorer) scorer(civeDocs()); if (scorer != null) { int newDoc = scorer.advance(doc); if (newDoc == doc) { Flexibleexplain(simidoc); } } retion(fal, \"no matching term\"); }", "n_tokens": 249, "n_pass": [193, 16, 15]}
{"time": "2021-02-25 02:51:28.430268", "score": "0.8166", "loss": "0.2967", "code": "@Override publ explain(Atomi contexdoc) throws IOon { Flcorer = (FlexibleScorer) scorer(civeDocs()); if (scorer != null) { int newDoc = scorer.advance(doc); if (newDoc == doc) { Flexibleexplain(simidoc); } } retion(fal, \"no matching term\"); }", "n_tokens": 242, "n_pass": [196, 17, 16]}
{"time": "2021-02-25 02:51:31.113625", "score": "0.8166", "loss": "0.2967", "code": "@Override publ explain(Atomi contexdoc) throws IOon { Flcorer = (Flexier) scorer(civeDocs()); if (scorer != null) { int newDoc = scorer.advance(doc); if (newDoc == doc) { Flexibleexplain(simidoc); } } retion(fal, \"no matching term\"); }", "n_tokens": 235, "n_pass": [200, 18, 17]}
{"time": "2021-02-25 02:51:33.901287", "score": "0.8804", "loss": "0.3327", "code": "@Override publ explain(Atomi contexdoc) throws IOon { Flcorer = (Flexier) scorer(civ); if (scorer != null) { int newDoc = scorer.advance(doc); if (newDoc == doc) { Flexibleexplain(simidoc); } } retion(fal, \"no matching term\"); }", "n_tokens": 228, "n_pass": [203, 19, 18]}
{"time": "2021-02-25 02:51:36.635131", "score": "0.9828", "loss": "0.0569", "code": "@Override publ explain(Atomi contexdoc) throws IOon { Flcorer = (Flexier) scorer(civ); if (scorer ) { int newDoc = scorer.advance(doc); if (newDoc == doc) { Flexibleexplain(simidoc); } } retion(fal, \"no matching term\"); }", "n_tokens": 221, "n_pass": [206, 20, 19]}
{"time": "2021-02-25 02:51:39.305503", "score": "0.9824", "loss": "0.0557", "code": "@Override publ explain(Atomi contexdoc) throws IOon { Flcorer = (Flexier) scorer(civ); if (scorer ) { int newDoc = scornce(doc); if (newDoc == doc) { Flexibleexplain(simidoc); } } retion(fal, \"no matching term\"); }", "n_tokens": 214, "n_pass": [210, 21, 20]}
{"time": "2021-02-25 02:51:41.968612", "score": "0.9899", "loss": "0.0325", "code": "@Override publ explain(Atomi contexdoc) throws IOon { Flcorer = (Flexier) scorer(civ); if (scorer ) { int newDoc = scornce(doc); if (newDoc == doc) { explain(simidoc); } } retion(fal, \"no matching term\"); }", "n_tokens": 206, "n_pass": [215, 22, 21]}
{"time": "2021-02-25 02:51:48.261465", "score": "0.9836", "loss": "0.0574", "code": "@Override publ explain(Atomi contexdoc) throws IOon { Flcorer = (Flexier) scorer(civ); if (scorer ) { int newDoc = scornce(doc); if (newDoc == doc) { ain(simidoc); } } retion(fal, \"no matching term\"); }", "n_tokens": 202, "n_pass": [300, 24, 22]}
{"time": "2021-02-25 02:51:51.078480", "score": "0.9837", "loss": "0.0576", "code": "@Override publ explain(Atomi contexdoc) throws IOon { Flcorer = (Flexier) scorer(civ); if (scorer ) { int newDoc = scornce(doc); if (newDoc == doc) { ain(doc); } } retion(fal, \"no matching term\"); }", "n_tokens": 198, "n_pass": [301, 25, 23]}
{"time": "2021-02-25 02:51:53.748911", "score": "0.9852", "loss": "0.05", "code": "@Override publ explain(Atomi contexdoc) throws IOon { Flcorer = (Flexier) scorer(civ); if (scorer ) { int newDoc = scornce(doc); if (newDoc == doc) { ain(doc); } } re(fal, \"no matching term\"); }", "n_tokens": 194, "n_pass": [305, 26, 24]}
{"time": "2021-02-25 02:52:04.470730", "score": "0.9846", "loss": "0.0536", "code": "@Ovide publ explain(Atomi contexdoc) throws IOon { Flcorer = (Flexier) scorer(civ); if (scorer ) { int newDoc = scornce(doc); if (newDoc == doc) { ain(doc); } } re(fal, \"no matching term\"); }", "n_tokens": 191, "n_pass": [314, 30, 25]}
{"time": "2021-02-25 02:52:07.163018", "score": "0.9364", "loss": "0.3842", "code": "@Ov publ explain(Atomi contexdoc) throws IOon { Flcorer = (Flexier) scorer(civ); if (scorer ) { int newDoc = scornce(doc); if (newDoc == doc) { ain(doc); } } re(fal, \"no matching term\"); }", "n_tokens": 188, "n_pass": [315, 31, 26]}
{"time": "2021-02-25 02:52:11.480397", "score": "0.9554", "loss": "0.3562", "code": "@Ov publ explain(Ai contexdoc) throws IOon { Flcorer = (Flexier) scorer(civ); if (scorer ) { int newDoc = scornce(doc); if (newDoc == doc) { ain(doc); } } re(fal, \"no matching term\"); }", "n_tokens": 185, "n_pass": [321, 32, 27]}
{"time": "2021-02-25 02:52:14.168404", "score": "0.9554", "loss": "0.3562", "code": "@Ov publ explain(Ai cexdoc) throws IOon { Flcorer = (Flexier) scorer(civ); if (scorer ) { int newDoc = scornce(doc); if (newDoc == doc) { ain(doc); } } re(fal, \"no matching term\"); }", "n_tokens": 182, "n_pass": [323, 33, 28]}
{"time": "2021-02-25 02:52:16.858202", "score": "0.6517", "loss": "1.0746", "code": "@Ov publ explain(Ai coc) throws IOon { Flcorer = (Flexier) scorer(civ); if (scorer ) { int newDoc = scornce(doc); if (newDoc == doc) { ain(doc); } } re(fal, \"no matching term\"); }", "n_tokens": 179, "n_pass": [324, 34, 29]}
{"time": "2021-02-25 02:52:19.573598", "score": "0.652", "loss": "1.0845", "code": "@Ov publ explain(Ai coc) throws I { Flcorer = (Flexier) scorer(civ); if (scorer ) { int newDoc = scornce(doc); if (newDoc == doc) { ain(doc); } } re(fal, \"no matching term\"); }", "n_tokens": 176, "n_pass": [329, 35, 30]}
{"time": "2021-02-25 02:52:22.219745", "score": "0.6979", "loss": "1.0281", "code": "@Ov publ explain(Ai coc) throws I { rer = (Flexier) scorer(civ); if (scorer ) { int newDoc = scornce(doc); if (newDoc == doc) { ain(doc); } } re(fal, \"no matching term\"); }", "n_tokens": 172, "n_pass": [331, 36, 31]}
{"time": "2021-02-25 02:52:24.967143", "score": "0.728", "loss": "0.9701", "code": "@Ov publ explain(Ai coc) throws I { rer = (Fer) scorer(civ); if (scorer ) { int newDoc = scornce(doc); if (newDoc == doc) { ain(doc); } } re(fal, \"no matching term\"); }", "n_tokens": 168, "n_pass": [334, 37, 32]}
{"time": "2021-02-25 02:52:27.668426", "score": "0.6499", "loss": "1.1784", "code": "@Ov publ explain(Ai coc) throws I { rer = (Fer) er(civ); if (scorer ) { int newDoc = scornce(doc); if (newDoc == doc) { ain(doc); } } re(fal, \"no matching term\"); }", "n_tokens": 164, "n_pass": [336, 38, 33]}
{"time": "2021-02-25 02:52:33.050027", "score": "0.5976", "loss": "1.5087", "code": "@Ov publ explain(Ai coc) throws I { rer = (Fer) er(civ); if (scorer ) { newDoc = scornce(doc); if (newDoc == doc) { ain(doc); } } re(fal, \"no matching term\"); }", "n_tokens": 160, "n_pass": [343, 40, 34]}
{"time": "2021-02-25 02:52:35.697268", "score": "0.6527", "loss": "1.1625", "code": "@Ov publ explain(Ai coc) throws I { rer = (Fer) er(civ); if (scorer ) { oc = scornce(doc); if (newDoc == doc) { ain(doc); } } re(fal, \"no matching term\"); }", "n_tokens": 156, "n_pass": [344, 41, 35]}
{"time": "2021-02-25 02:52:38.378163", "score": "0.6668", "loss": "1.086", "code": "@Ov publ explain(Ai coc) throws I { rer = (Fer) er(civ); if (scorer ) {  scornce(doc); if (newDoc == doc) { ain(doc); } } re(fal, \"no matching term\"); }", "n_tokens": 152, "n_pass": [345, 42, 36]}
{"time": "2021-02-25 02:52:41.059548", "score": "0.6668", "loss": "1.086", "code": "@Ov publ explain(Ai coc) throws I { rer = (Fer) er(civ); if (scorer ) { rnce(doc); if (newDoc == doc) { ain(doc); } } re(fal, \"no matching term\"); }", "n_tokens": 148, "n_pass": [346, 43, 37]}
{"time": "2021-02-25 02:52:43.749591", "score": "0.6575", "loss": "1.1563", "code": "@Ov publ explain(Ai coc) throws I { rer = (Fer) er(civ); if (scorer ) { (doc); if (newDoc == doc) { ain(doc); } } re(fal, \"no matching term\"); }", "n_tokens": 144, "n_pass": [347, 44, 38]}
{"time": "2021-02-25 02:52:46.438668", "score": "0.6517", "loss": "1.0063", "code": "@Ov publ explain(Ai coc) throws I { rer = (Fer) er(civ); if (scorer ) { (doc); if (nc == doc) { ain(doc); } } re(fal, \"no matching term\"); }", "n_tokens": 140, "n_pass": [351, 45, 39]}
{"time": "2021-02-25 02:52:57.150919", "score": "0.9975", "loss": "0.0137", "code": " publ explain(Ai coc) throws I { rer = (Fer) er(civ); if (scorer ) { (doc); if (nc == doc) { ain(doc); } } re(fal, \"no matching term\"); }", "n_tokens": 137, "n_pass": [366, 49, 40]}
{"time": "2021-02-25 02:52:59.846997", "score": "0.9994", "loss": "0.0039", "code": "bl explain(Ai coc) throws I { rer = (Fer) er(civ); if (scorer ) { (doc); if (nc == doc) { ain(doc); } } re(fal, \"no matching term\"); }", "n_tokens": 134, "n_pass": [367, 50, 41]}
{"time": "2021-02-25 02:53:03.845427", "score": "0.9893", "loss": "0.0555", "code": "bl explain(Ai coc) throws I { rer = (Fer) er(civ); if (sco) { (doc); if (nc == doc) { ain(doc); } } re(fal, \"no matching term\"); }", "n_tokens": 130, "n_pass": [385, 51, 42]}
{"time": "2021-02-25 02:53:16.490490", "score": "0.9892", "loss": "0.0555", "code": "bl explain(Ai coc) throws I { rer = (Fer) er(civ); if (sco) { (d); if (nc == doc) { ain(doc); } } re(fal, \"no matching term\"); }", "n_tokens": 128, "n_pass": [494, 55, 43]}
{"time": "2021-02-25 02:53:19.183609", "score": "0.9853", "loss": "0.0721", "code": "bl explain(Ai coc) throws I { rer = (Fer) er(civ); if (sco) { (d); if (n== doc) { ain(doc); } } re(fal, \"no matching term\"); }", "n_tokens": 126, "n_pass": [499, 56, 44]}
{"time": "2021-02-25 02:53:22.423461", "score": "0.9847", "loss": "0.0745", "code": "bl explain(Ai coc) throws I { rer = (Fer) er(civ); if (sco) { (d); if (n==oc) { ain(doc); } } re(fal, \"no matching term\"); }", "n_tokens": 124, "n_pass": [501, 57, 45]}
{"time": "2021-02-25 02:53:25.076523", "score": "0.9853", "loss": "0.0706", "code": "bl explain(Ai coc) throws I { rer = (Fer) er(civ); if (sco) { (d); if (n==oc) { n(doc); } } re(fal, \"no matching term\"); }", "n_tokens": 122, "n_pass": [505, 58, 46]}
{"time": "2021-02-25 02:53:27.745397", "score": "0.9855", "loss": "0.0696", "code": "bl explain(Ai coc) throws I { rer = (Fer) er(civ); if (sco) { (d); if (n==oc) { n(c); } } re(fal, \"no matching term\"); }", "n_tokens": 120, "n_pass": [507, 59, 47]}
{"time": "2021-02-25 02:53:30.418081", "score": "0.9969", "loss": "0.0136", "code": "bl explain(Ai coc) throws I { rer = (Fer) er(civ); if (sco) { (d); if (n==oc) { n(c); } } re(f, \"no matching term\"); }", "n_tokens": 118, "n_pass": [514, 60, 48]}
{"time": "2021-02-25 02:53:51.666579", "score": "0.9956", "loss": "0.0144", "code": "l explain(Ai coc) throws I { rer = (Fer) er(civ); if (sco) { (d); if (n==oc) { n(c); } } re(f, \"no matching term\"); }", "n_tokens": 117, "n_pass": [527, 68, 49]}
{"time": "2021-02-25 02:53:58.051199", "score": "0.9904", "loss": "0.0391", "code": "l explain(Ai c) throws I { rer = (Fer) er(civ); if (sco) { (d); if (n==oc) { n(c); } } re(f, \"no matching term\"); }", "n_tokens": 115, "n_pass": [539, 69, 50]}
{"time": "2021-02-25 02:54:00.714304", "score": "0.9855", "loss": "0.0418", "code": "l explain(Ai c) throws I { r = (Fer) er(civ); if (sco) { (d); if (n==oc) { n(c); } } re(f, \"no matching term\"); }", "n_tokens": 113, "n_pass": [547, 70, 51]}
{"time": "2021-02-25 02:54:03.391860", "score": "0.9902", "loss": "0.027", "code": "l explain(Ai c) throws I { r = (F) er(civ); if (sco) { (d); if (n==oc) { n(c); } } re(f, \"no matching term\"); }", "n_tokens": 111, "n_pass": [551, 71, 52]}
{"time": "2021-02-25 02:54:06.087983", "score": "0.9999", "loss": "0.0004", "code": "l explain(Ai c) throws I { r = (F) (civ); if (sco) { (d); if (n==oc) { n(c); } } re(f, \"no matching term\"); }", "n_tokens": 109, "n_pass": [553, 72, 53]}
{"time": "2021-02-25 02:54:08.743265", "score": "0.9999", "loss": "0.0002", "code": "l explain(Ai c) throws I { r = (F) (c); if (sco) { (d); if (n==oc) { n(c); } } re(f, \"no matching term\"); }", "n_tokens": 107, "n_pass": [555, 73, 54]}
{"time": "2021-02-25 02:54:11.380291", "score": "1.0", "loss": "0.0", "code": "l explain(Ai c) throws I { r = (F) (c); if (s) { (d); if (n==oc) { n(c); } } re(f, \"no matching term\"); }", "n_tokens": 105, "n_pass": [560, 74, 55]}
{"time": "2021-02-25 02:54:14.018539", "score": "0.9998", "loss": "0.0004", "code": "l explain(Ai c) throws I { r = (F) (c); if (s) { (d); if (noc) { n(c); } } re(f, \"no matching term\"); }", "n_tokens": 103, "n_pass": [568, 75, 56]}
{"time": "2021-02-25 02:54:16.640476", "score": "1.0", "loss": "0.0", "code": "l explain(Ai c) throws I { r = (F) (c); if (s) { (d); if (n) { n(c); } } re(f, \"no matching term\"); }", "n_tokens": 101, "n_pass": [569, 76, 57]}
{"time": "2021-02-25 02:54:51.683076", "score": "1.0", "loss": "0.0", "code": "l explain(Ai c) throws I { r = (F) (c); if (s) { (d); if (n) {n(c); } } re(f, \"no matching term\"); }", "n_tokens": 100, "n_pass": [717, 84, 58]}
{"time": "2021-02-25 02:54:54.344689", "score": "1.0", "loss": "0.0", "code": "l explain(Ai c) throws I { r = (F) (c); if (s) { (d); if (n) {(c); } } re(f, \"no matching term\"); }", "n_tokens": 99, "n_pass": [718, 85, 59]}
{"time": "2021-02-25 02:54:57.075564", "score": "1.0", "loss": "0.0", "code": "l explain(Ai c) throws I { r = (F) (c); if (s) { (d); if (n) {(c);} } re(f, \"no matching term\"); }", "n_tokens": 98, "n_pass": [723, 86, 60]}
{"time": "2021-02-25 02:54:59.741889", "score": "1.0", "loss": "0.0", "code": "l explain(Ai c) throws I { r = (F) (c); if (s) { (d); if (n) {(c);}} re(f, \"no matching term\"); }", "n_tokens": 97, "n_pass": [725, 87, 61]}
{"time": "2021-02-25 02:55:02.497758", "score": "1.0", "loss": "0.0", "code": "l explain(Ai c) throws I { r = (F) (c); if (s) { (d); if (n) {(c);}}re(f, \"no matching term\"); }", "n_tokens": 96, "n_pass": [727, 88, 62]}
{"time": "2021-02-25 02:55:05.177948", "score": "0.9999", "loss": "0.0001", "code": "l explain(Ai c) throws I { r = (F) (c); if (s) { (d); if (n) {(c);}}e(f, \"no matching term\"); }", "n_tokens": 95, "n_pass": [728, 89, 63]}
{"time": "2021-02-25 02:55:07.874060", "score": "0.9999", "loss": "0.0001", "code": "l explain(Ai c) throws I { r = (F) (c); if (s) { (d); if (n) {(c);}}e(f,\"no matching term\"); }", "n_tokens": 94, "n_pass": [733, 90, 64]}
{"time": "2021-02-25 02:55:16.091666", "score": "0.9999", "loss": "0.0001", "code": "l explain(Ai c) throws I { r = (F) (c); if (s) { (d); if (n) {(c);}}e(f,\"nomatching term\"); }", "n_tokens": 93, "n_pass": [737, 93, 65]}
{"time": "2021-02-25 02:55:40.659112", "score": "0.9999", "loss": "0.0001", "code": "l explain(Ai c) throws I { r = (F) (c); if (s) { (d); if (n) {(c);}}e(f,\"nomatchingterm\"); }", "n_tokens": 92, "n_pass": [746, 102, 66]}
{"time": "2021-02-25 02:55:54.090772", "score": "0.9999", "loss": "0.0001", "code": "l explain(Ai c) throws I { r = (F) (c); if (s) { (d); if (n) {(c);}}e(f,\"nomatchingterm\");}", "n_tokens": 91, "n_pass": [754, 107, 67]}
{"time": "2021-02-25 02:56:00.483846", "score": "0.9999", "loss": "0.0002", "code": "l explain(i c) throws I { r = (F) (c); if (s) { (d); if (n) {(c);}}e(f,\"nomatchingterm\");}", "n_tokens": 90, "n_pass": [766, 108, 68]}
{"time": "2021-02-25 02:56:03.146087", "score": "0.9999", "loss": "0.0002", "code": "l explain(i c)throws I { r = (F) (c); if (s) { (d); if (n) {(c);}}e(f,\"nomatchingterm\");}", "n_tokens": 89, "n_pass": [771, 109, 69]}
{"time": "2021-02-25 02:56:05.895209", "score": "0.9999", "loss": "0.0002", "code": "l explain(i c)throws I{ r = (F) (c); if (s) { (d); if (n) {(c);}}e(f,\"nomatchingterm\");}", "n_tokens": 88, "n_pass": [780, 110, 70]}
{"time": "2021-02-25 02:56:08.588905", "score": "0.9999", "loss": "0.0002", "code": "l explain(i c)throws I{r = (F) (c); if (s) { (d); if (n) {(c);}}e(f,\"nomatchingterm\");}", "n_tokens": 87, "n_pass": [782, 111, 71]}
{"time": "2021-02-25 02:56:11.274774", "score": "0.9999", "loss": "0.0002", "code": "l explain(i c)throws I{r= (F) (c); if (s) { (d); if (n) {(c);}}e(f,\"nomatchingterm\");}", "n_tokens": 86, "n_pass": [784, 112, 72]}
{"time": "2021-02-25 02:56:13.918978", "score": "0.9999", "loss": "0.0002", "code": "l explain(i c)throws I{r=(F) (c); if (s) { (d); if (n) {(c);}}e(f,\"nomatchingterm\");}", "n_tokens": 85, "n_pass": [786, 113, 73]}
{"time": "2021-02-25 02:56:16.571417", "score": "0.9999", "loss": "0.0002", "code": "l explain(i c)throws I{r=(F)(c); if (s) { (d); if (n) {(c);}}e(f,\"nomatchingterm\");}", "n_tokens": 84, "n_pass": [790, 114, 74]}
{"time": "2021-02-25 02:56:19.342628", "score": "0.9999", "loss": "0.0002", "code": "l explain(i c)throws I{r=(F)(c);if (s) { (d); if (n) {(c);}}e(f,\"nomatchingterm\");}", "n_tokens": 83, "n_pass": [795, 115, 75]}
{"time": "2021-02-25 02:56:22.129885", "score": "0.9999", "loss": "0.0002", "code": "l explain(i c)throws I{r=(F)(c);if(s) { (d); if (n) {(c);}}e(f,\"nomatchingterm\");}", "n_tokens": 82, "n_pass": [798, 116, 76]}
{"time": "2021-02-25 02:56:24.937005", "score": "0.9999", "loss": "0.0002", "code": "l explain(i c)throws I{r=(F)(c);if(s){ (d); if (n) {(c);}}e(f,\"nomatchingterm\");}", "n_tokens": 81, "n_pass": [802, 117, 77]}
{"time": "2021-02-25 02:56:27.596272", "score": "0.9999", "loss": "0.0002", "code": "l explain(i c)throws I{r=(F)(c);if(s){(d); if (n) {(c);}}e(f,\"nomatchingterm\");}", "n_tokens": 80, "n_pass": [804, 118, 78]}
{"time": "2021-02-25 02:56:30.256344", "score": "0.9999", "loss": "0.0002", "code": "l explain(i c)throws I{r=(F)(c);if(s){(d);if (n) {(c);}}e(f,\"nomatchingterm\");}", "n_tokens": 79, "n_pass": [809, 119, 79]}
{"time": "2021-02-25 02:56:32.899516", "score": "0.9999", "loss": "0.0002", "code": "l explain(i c)throws I{r=(F)(c);if(s){(d);if(n) {(c);}}e(f,\"nomatchingterm\");}", "n_tokens": 78, "n_pass": [812, 120, 80]}
{"time": "2021-02-25 02:56:35.561812", "score": "0.9999", "loss": "0.0002", "code": "l explain(i c)throws I{r=(F)(c);if(s){(d);if(n){(c);}}e(f,\"nomatchingterm\");}", "n_tokens": 77, "n_pass": [816, 121, 81]}

Minimal simplified code:
l explain(i c)throws I{r=(F)(c);if(s){(d);if(n){(c);}}e(f,"nomatchingterm");}

