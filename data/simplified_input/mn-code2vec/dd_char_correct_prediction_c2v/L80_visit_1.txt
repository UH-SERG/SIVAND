
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/codefollower__Tomcat-Research/java/org/apache/jasper/compiler/SmapUtil_visit.java
method_name = visit
method_body = @Override public void visit(Node.TemplateText n) throws JasperException { Mark mark = n.getStart(); if (mark == null) { return; } String fileName = mark.getFile(); smap.addFile(unqualify(fileName), fileName); int iInputStartLine = mark.getLineNumber(); int iOutputStartLine = n.getBeginJavaLine(); int iOutputLineIncrement = breakAtLF ? 1 : 0; smap.addLineData(iInputStartLine, fileName, 1, iOutputStartLine, iOutputLineIncrement); java.util.ArrayList<Integer> extraSmap = n.getExtraSmap(); if (extraSmap != null) { for (int i = 0; i < extraSmap.size(); i++) { iOutputStartLine += iOutputLineIncrement; smap.addLineData(iInputStartLine + extraSmap.get(i).intValue(), fileName, 1, iOutputStartLine, iOutputLineIncrement); } } }
predict, score, loss = visit, 0.999832272529602, 0.0005933669744990766

Trace of simplified code(s):
{"time": "2021-02-22 04:08:42.285642", "score": "0.9999", "loss": "0.0001", "code": "@Override public void visit(Node.TemplateText n) throws JasperException { Mark mark = n.getStart(); if (mark == null) { return; } String fileName = mark.getFile(); smap.addFile(unqualify(fileName), fileName); int iInputStartLine = mark.getLineNumber(); int iOutputStartLine = n.getBeginJavaLine(); int iOutputLineIncrement = breakAtLF ? 1 : 0; smap.addLineData(iInputStartLine, fileName, 1, iOutputStartLine, iOutputLineIncrement); java.util.ArrayList<Integer> extraSmap = n.getExtraSmap(); if (extraSmap != null) { for (int i = 0; i < extraSmap.size(); i++) { iOutputStartLine += iOutputLineIncrement; smap.addLineData(iInputStartLine + extraSmap.get(i).intValue(), fileName, 1, iOutputStartLine, iOutputLineIncrement); } } }", "n_tokens": 726, "n_pass": [1, 1, 1]}
{"time": "2021-02-22 04:08:44.952320", "score": "0.933", "loss": "0.0932", "code": "@Override public void visit(Node.TemplateText n) throws JasperException { Mark mark = n.getStart(); if (mark == null) { return; } String fileName = mark.getFile(); smap.addFile(unquInputStartLine, fileName, 1, iOutputStartLine, iOutputLineIncrement); java.util.ArrayList<Integer> extraSmap = n.getExtraSmap(); if (extraSmap != null) { for (int i = 0; i < extraSmap.size(); i++) { iOutputStartLine += iOutputLineIncrement; smap.addLineData(iInputStartLine + extraSmap.get(i).intValue(), fileName, 1, iOutputStartLine, iOutputLineIncrement); } } }", "n_tokens": 545, "n_pass": [9, 2, 2]}
{"time": "2021-02-22 04:08:47.695548", "score": "1.0", "loss": "0.0", "code": "@Override public void visit(Node.TemplateText n) throws JasperException { Mark mark = n.getStart(); if (mark == null) { return; } String fileName = mark.getFile(); smap.addFile(unqe, iOutputLineIncrement); java.util.ArrayList<Integer> extraSmap = n.getExtraSmap(); if (extraSmap != null) { for (int i = 0; i < extraSmap.size(); i++) { iOutputStartLine += iOutputLineIncrement; smap.addLineData(iInputStartLine + extraSmap.get(i).intValue(), fileName, 1, iOutputStartLine, iOutputLineIncrement); } } }", "n_tokens": 500, "n_pass": [37, 3, 3]}
{"time": "2021-02-22 04:08:50.376934", "score": "0.9997", "loss": "0.0006", "code": "@Override public void visit(Node.TemplateText n) throws JasperException { Mark mark = n.getStart(); if (mark == null) { return; } String fileName = mark.getFile(); smap.addFile(unqe, iOutputLineIncrement); java.util.ArrayList<Integer> extraSmap = n.getExtraSmap(); if (extraSmap != null) { for (int i = 0; i < extraSmap.size(); i++) { iOutputStartLine += iOutputLineIncrement; smap.addLineData(iInputStartLiniOutputStartLine, iOutputLineIncrement); } } }", "n_tokens": 454, "n_pass": [43, 4, 4]}
{"time": "2021-02-22 04:08:53.067687", "score": "1.0", "loss": "0.0001", "code": "@Override public void visit(Node.TemplateText n) throws JasperException { Mark mark = n.getStart(); if (mark == null) { return; } String fileName = mark.getFile(); smap.addFile(unqe, iOutputLineIncrement); java.util.ArrayList<Integer> extraSmap = n.getExtraSmap(); if (extraSmap != null) { for (int i = 0; i < extraSmap.size(); i++) { iOutputStartLine += iOutputLineIncrement; smap.addLineData(iInputStartLinutLineIncrement); } } }", "n_tokens": 431, "n_pass": [74, 5, 5]}
{"time": "2021-02-22 04:08:56.123625", "score": "1.0", "loss": "0.0", "code": "@Override public void visit(Node.TemplateText n) throws JasperException { Mark mark = n.getStart(); if (mark == null) { return; } SttFile(); smap.addFile(unqe, iOutputLineIncrement); java.util.ArrayList<Integer> extraSmap = n.getExtraSmap(); if (extraSmap != null) { for (int i = 0; i < extraSmap.size(); i++) { iOutputStartLine += iOutputLineIncrement; smap.addLineData(iInputStartLinutLineIncrement); } } }", "n_tokens": 408, "n_pass": [81, 6, 6]}
{"time": "2021-02-22 04:08:58.802576", "score": "1.0", "loss": "0.0", "code": "@Override public void visit(Node.TemplateText n) throws JasperException { Mark mark = n.getStart(); if (mark == null) { return; } SttFile(); smap.addFile(unt); java.util.ArrayList<Integer> extraSmap = n.getExtraSmap(); if (extraSmap != null) { for (int i = 0; i < extraSmap.size(); i++) { iOutputStartLine += iOutputLineIncrement; smap.addLineData(iInputStartLinutLineIncrement); } } }", "n_tokens": 385, "n_pass": [83, 7, 7]}
{"time": "2021-02-22 04:09:01.459996", "score": "1.0", "loss": "0.0", "code": "@Override public void visit(Node.TemplateText n) throws JasperException { Mark mark = n.getStart(); if (mark == null) { return; } SttFile(); smap.addFile(unt); java.util.ArrayLisn.getExtraSmap(); if (extraSmap != null) { for (int i = 0; i < extraSmap.size(); i++) { iOutputStartLine += iOutputLineIncrement; smap.addLineData(iInputStartLinutLineIncrement); } } }", "n_tokens": 362, "n_pass": [85, 8, 8]}
{"time": "2021-02-22 04:09:04.139932", "score": "0.9999", "loss": "0.0001", "code": "@Override public void visit(Node.TemplateText n) throws JasperException { Mark mark = n.getStart(); if (mark == null) { return; } SttFile(); smap.addFile(unt); java.util.ArrayLisn.getExtraSmap(); if (extraSmap != null) { for (int i = 0; i < extraSmap.size(); i++) { iOutLineIncrement; smap.addLineData(iInputStartLinutLineIncrement); } } }", "n_tokens": 339, "n_pass": [90, 9, 9]}
{"time": "2021-02-22 04:09:06.778921", "score": "0.9995", "loss": "0.0007", "code": "@Override public void visit(Node.TemplateText n) throws JasperException { Mark mark = n.getStart(); if (mark == null) { return; } SttFile(); smap.addFile(unt); java.util.ArrayLisn.getExtraSmap(); if (extraSmap != null) { for (int i = 0; i < extraSmap.size(); i++) { iOutLineData(iInputStartLinutLineIncrement); } } }", "n_tokens": 316, "n_pass": [91, 10, 10]}
{"time": "2021-02-22 04:09:09.835640", "score": "0.9995", "loss": "0.0007", "code": "@Override public void visit(Node.TemplateText n) throws JasperException { Mark mark = n.getStart(); if (mark == null) { return; } SttFile(); smap.addFile(unt); java.util.ArrayLisn.getExtraSmap(); if (extraSmap != null) { for (int i = 0; i < extraSmap.size(); i++) { iOutLineData(inutLineIncrement); } } }", "n_tokens": 304, "n_pass": [135, 11, 11]}
{"time": "2021-02-22 04:09:12.490204", "score": "0.9995", "loss": "0.0007", "code": "@Override public void visit(Node.TemplateText n) throws JasperException { Mark mark = n.getStart(); if (mark == null) { return; } SttFile(); smap.addFile(unt); java.util.ArrayLisn.getExtraSmap(); if (extraSmap != null) { for (int i = 0; i < extraSmap.size(); i++) { iOutLineData(iment); } } }", "n_tokens": 292, "n_pass": [136, 12, 12]}
{"time": "2021-02-22 04:09:15.529525", "score": "0.9995", "loss": "0.0007", "code": "@Override public void visit(Node.t n) throws JasperException { Mark mark = n.getStart(); if (mark == null) { return; } SttFile(); smap.addFile(unt); java.util.ArrayLisn.getExtraSmap(); if (extraSmap != null) { for (int i = 0; i < extraSmap.size(); i++) { iOutLineData(iment); } } }", "n_tokens": 281, "n_pass": [141, 13, 13]}
{"time": "2021-02-22 04:09:18.173653", "score": "0.9995", "loss": "0.0006", "code": "@Override public void visit(Node.t n) throws JasperException { MargetStart(); if (mark == null) { return; } SttFile(); smap.addFile(unt); java.util.ArrayLisn.getExtraSmap(); if (extraSmap != null) { for (int i = 0; i < extraSmap.size(); i++) { iOutLineData(iment); } } }", "n_tokens": 270, "n_pass": [145, 14, 14]}
{"time": "2021-02-22 04:09:20.832595", "score": "0.9997", "loss": "0.0004", "code": "@Override public void visit(Node.t n) throws JasperException { MargetStart(); if (mark == null) { return; } Stap.addFile(unt); java.util.ArrayLisn.getExtraSmap(); if (extraSmap != null) { for (int i = 0; i < extraSmap.size(); i++) { iOutLineData(iment); } } }", "n_tokens": 259, "n_pass": [150, 15, 15]}
{"time": "2021-02-22 04:09:23.515687", "score": "0.995", "loss": "0.0066", "code": "@Override public void visit(Node.t n) throws JasperException { MargetStart(); if (mark == null) { return; } Stap.addFile(unt); java.isn.getExtraSmap(); if (extraSmap != null) { for (int i = 0; i < extraSmap.size(); i++) { iOutLineData(iment); } } }", "n_tokens": 248, "n_pass": [153, 16, 16]}
{"time": "2021-02-22 04:09:26.143507", "score": "0.9997", "loss": "0.0004", "code": "@Override public void visit(Node.t n) throws JasperException { MargetStart(); if (mark == null) { return; } Stap.addFile(unt); java.aSmap(); if (extraSmap != null) { for (int i = 0; i < extraSmap.size(); i++) { iOutLineData(iment); } } }", "n_tokens": 237, "n_pass": [154, 17, 17]}
{"time": "2021-02-22 04:09:29.201270", "score": "0.9998", "loss": "0.0002", "code": "@Override public void visit(Node.t n) throws JasperException { MargetStart(); if (mark == null) { return; } Stap.addFile(unt); jaap(); if (extraSmap != null) { for (int i = 0; i < extraSmap.size(); i++) { iOutLineData(iment); } } }", "n_tokens": 231, "n_pass": [218, 18, 18]}
{"time": "2021-02-22 04:09:31.833549", "score": "0.9682", "loss": "0.0427", "code": "@Override public void visit(Node.t n) throws JasperException { MargetStart(); if (mark == null) { return; } Stap.addFile(unt); jaap(); if (exp != null) { for (int i = 0; i < extraSmap.size(); i++) { iOutLineData(iment); } } }", "n_tokens": 225, "n_pass": [221, 19, 19]}
{"time": "2021-02-22 04:09:34.460248", "score": "0.9782", "loss": "0.0258", "code": "@Override public void visit(Node.t n) throws JasperException { MargetStart(); if (mark == null) { return; } Stap.addFile(unt); jaap(); if (exull) { for (int i = 0; i < extraSmap.size(); i++) { iOutLineData(iment); } } }", "n_tokens": 219, "n_pass": [222, 20, 20]}
{"time": "2021-02-22 04:09:42.436866", "score": "0.9354", "loss": "0.1024", "code": "@Override public void visit(Node.t n) throws JasperException { MargetStart(); if (mark == null) { return; } Stap.addFile(unt); jaap(); if (exull) { for (int i = 0; i < extraSmap.size(); i++) { iOData(iment); } } }", "n_tokens": 213, "n_pass": [232, 23, 21]}
{"time": "2021-02-22 04:09:45.062690", "score": "0.9362", "loss": "0.1018", "code": "@Overpublic void visit(Node.t n) throws JasperException { MargetStart(); if (mark == null) { return; } Stap.addFile(unt); jaap(); if (exull) { for (int i = 0; i < extraSmap.size(); i++) { iOData(iment); } } }", "n_tokens": 208, "n_pass": [237, 24, 22]}
{"time": "2021-02-22 04:09:47.687591", "score": "0.9362", "loss": "0.1018", "code": "@Overc void visit(Node.t n) throws JasperException { MargetStart(); if (mark == null) { return; } Stap.addFile(unt); jaap(); if (exull) { for (int i = 0; i < extraSmap.size(); i++) { iOData(iment); } } }", "n_tokens": 203, "n_pass": [238, 25, 23]}
{"time": "2021-02-22 04:09:51.095432", "score": "0.7942", "loss": "0.386", "code": "@Overc void visit(Node.t n) throws rException { MargetStart(); if (mark == null) { return; } Stap.addFile(unt); jaap(); if (exull) { for (int i = 0; i < extraSmap.size(); i++) { iOData(iment); } } }", "n_tokens": 198, "n_pass": [245, 26, 24]}
{"time": "2021-02-22 04:09:53.746415", "score": "0.7942", "loss": "0.386", "code": "@Overc void visit(Node.t n) throws ption { MargetStart(); if (mark == null) { return; } Stap.addFile(unt); jaap(); if (exull) { for (int i = 0; i < extraSmap.size(); i++) { iOData(iment); } } }", "n_tokens": 193, "n_pass": [246, 27, 25]}
{"time": "2021-02-22 04:09:56.392411", "score": "0.7942", "loss": "0.386", "code": "@Overc void visit(Node.t n) throws ption { Matart(); if (mark == null) { return; } Stap.addFile(unt); jaap(); if (exull) { for (int i = 0; i < extraSmap.size(); i++) { iOData(iment); } } }", "n_tokens": 188, "n_pass": [249, 28, 26]}
{"time": "2021-02-22 04:09:59.118250", "score": "0.9161", "loss": "0.1617", "code": "@Overc void visit(Node.t n) throws ption { Matart(); if (mark == null) { return; } Staile(unt); jaap(); if (exull) { for (int i = 0; i < extraSmap.size(); i++) { iOData(iment); } } }", "n_tokens": 182, "n_pass": [257, 29, 27]}
{"time": "2021-02-22 04:10:07.850267", "score": "0.8533", "loss": "0.2722", "code": "@Overc void visit(Node.t n) throws ption { Matart(); if (mark == null) { return; } Sta(unt); jaap(); if (exull) { for (int i = 0; i < extraSmap.size(); i++) { iOData(iment); } } }", "n_tokens": 179, "n_pass": [354, 32, 28]}
{"time": "2021-02-22 04:10:10.481005", "score": "0.8441", "loss": "0.2945", "code": "@Overc void visit(Node.t n) throws ption { Matart(); if (mark == null) { return; } Sta(unt);ap(); if (exull) { for (int i = 0; i < extraSmap.size(); i++) { iOData(iment); } } }", "n_tokens": 176, "n_pass": [356, 33, 29]}
{"time": "2021-02-22 04:10:13.140144", "score": "0.6204", "loss": "0.8214", "code": "@Overc void visit(Node.t n) throws ption { Matart(); if (mark == null) { return; } Sta(unt);ap(); if (ex) { for (int i = 0; i < extraSmap.size(); i++) { iOData(iment); } } }", "n_tokens": 173, "n_pass": [361, 34, 30]}
{"time": "2021-02-22 04:10:15.766616", "score": "0.5289", "loss": "1.1009", "code": "@Overc void visit(Node.t n) throws ption { Matart(); if (mark == null) { return; } Sta(unt);ap(); if (ex) { for ( i = 0; i < extraSmap.size(); i++) { iOData(iment); } } }", "n_tokens": 170, "n_pass": [365, 35, 31]}
{"time": "2021-02-22 04:10:18.400758", "score": "0.9694", "loss": "0.0415", "code": "@Overc void visit(Node.t n) throws ption { Matart(); if (mark == null) { return; } Sta(unt);ap(); if (ex) { for ( i ; i < extraSmap.size(); i++) { iOData(iment); } } }", "n_tokens": 167, "n_pass": [367, 36, 32]}
{"time": "2021-02-22 04:10:21.021831", "score": "0.6888", "loss": "1.013", "code": "@Overc void visit(Node.t n) throws ption { Matart(); if (mark == null) { return; } Sta(unt);ap(); if (ex) { for ( i ; iextraSmap.size(); i++) { iOData(iment); } } }", "n_tokens": 164, "n_pass": [369, 37, 33]}
{"time": "2021-02-22 04:10:23.640007", "score": "0.6888", "loss": "1.013", "code": "@Overc void visit(Node.t n) throws ption { Matart(); if (mark == null) { return; } Sta(unt);ap(); if (ex) { for ( i ; iraSmap.size(); i++) { iOData(iment); } } }", "n_tokens": 161, "n_pass": [370, 38, 34]}
{"time": "2021-02-22 04:10:26.309400", "score": "0.3529", "loss": "1.9461", "code": "@Overc void visit(Node.t n) throws ption { Matart(); if (mark == null) { return; } Sta(unt);ap(); if (ex) { for ( i ; imap.size(); i++) { iOData(iment); } } }", "n_tokens": 158, "n_pass": [371, 39, 35]}
{"time": "2021-02-22 04:10:28.926927", "score": "0.6761", "loss": "1.0608", "code": "@Overc void visit(Node.t n) throws ption { Matart(); if (mark == null) { return; } Sta(unt);ap(); if (ex) { for ( i ; i.size(); i++) { iOData(iment); } } }", "n_tokens": 155, "n_pass": [372, 40, 36]}
{"time": "2021-02-22 04:10:34.195541", "score": "0.4226", "loss": "1.61", "code": "@Overc void visit(Node.t n) throws ption { Matart(); if (mark == null) { return; } Sta(unt);ap(); if (ex) { for ( i ; i.size(); ) { iOData(iment); } } }", "n_tokens": 152, "n_pass": [376, 42, 37]}
{"time": "2021-02-22 04:10:36.829265", "score": "0.885", "loss": "0.381", "code": "@Overc void visit(Node.t n) throws ption { Matart(); if (mark == null) { return; } Sta(unt);ap(); if (ex) { for ( i ; i.size(); ) {Data(iment); } } }", "n_tokens": 149, "n_pass": [378, 43, 38]}
{"time": "2021-02-22 04:10:39.462106", "score": "0.8868", "loss": "0.3902", "code": "@Overc void visit(Node.t n) throws ption { Matart(); if (mark == null) { return; } Sta(unt);ap(); if (ex) { for ( i ; i.size(); ) {a(iment); } } }", "n_tokens": 146, "n_pass": [379, 44, 39]}
{"time": "2021-02-22 04:10:42.068438", "score": "0.8834", "loss": "0.3988", "code": "@Overc void visit(Node.t n) throws ption { Matart(); if (mark == null) { return; } Sta(unt);ap(); if (ex) { for ( i ; i.size(); ) {a(it); } } }", "n_tokens": 143, "n_pass": [381, 45, 40]}
{"time": "2021-02-22 04:10:44.754261", "score": "0.3208", "loss": "2.6025", "code": "@Orc void visit(Node.t n) throws ption { Matart(); if (mark == null) { return; } Sta(unt);ap(); if (ex) { for ( i ; i.size(); ) {a(it); } } }", "n_tokens": 141, "n_pass": [386, 46, 41]}
{"time": "2021-02-22 04:10:47.369946", "score": "0.8827", "loss": "0.3877", "code": "@O void visit(Node.t n) throws ption { Matart(); if (mark == null) { return; } Sta(unt);ap(); if (ex) { for ( i ; i.size(); ) {a(it); } } }", "n_tokens": 139, "n_pass": [387, 47, 42]}
{"time": "2021-02-22 04:10:50.373889", "score": "0.6804", "loss": "0.8264", "code": "@O vd visit(Node.t n) throws ption { Matart(); if (mark == null) { return; } Sta(unt);ap(); if (ex) { for ( i ; i.size(); ) {a(it); } } }", "n_tokens": 137, "n_pass": [389, 48, 43]}
{"time": "2021-02-22 04:10:56.833178", "score": "0.7188", "loss": "0.4898", "code": "@O vd visit(Not n) throws ption { Matart(); if (mark == null) { return; } Sta(unt);ap(); if (ex) { for ( i ; i.size(); ) {a(it); } } }", "n_tokens": 134, "n_pass": [395, 50, 44]}
{"time": "2021-02-22 04:10:59.505908", "score": "0.6485", "loss": "0.7043", "code": "@O vd visit(Not n) throws on { Matart(); if (mark == null) { return; } Sta(unt);ap(); if (ex) { for ( i ; i.size(); ) {a(it); } } }", "n_tokens": 131, "n_pass": [400, 51, 45]}
{"time": "2021-02-22 04:11:04.785537", "score": "0.4284", "loss": "1.063", "code": "@O vd visit(Not n) throws on { Matart(); if (ma== null) { return; } Sta(unt);ap(); if (ex) { for ( i ; i.size(); ) {a(it); } } }", "n_tokens": 128, "n_pass": [408, 53, 46]}
{"time": "2021-02-22 04:11:07.387798", "score": "0.5034", "loss": "0.9246", "code": "@O vd visit(Not n) throws on { Matart(); if (manull) { return; } Sta(unt);ap(); if (ex) { for ( i ; i.size(); ) {a(it); } } }", "n_tokens": 125, "n_pass": [409, 54, 47]}
{"time": "2021-02-22 04:11:10.016961", "score": "0.2938", "loss": "2.0879", "code": "@O vd visit(Not n) throws on { Matart(); if (mal) { return; } Sta(unt);ap(); if (ex) { for ( i ; i.size(); ) {a(it); } } }", "n_tokens": 122, "n_pass": [410, 55, 48]}
{"time": "2021-02-22 04:11:12.638458", "score": "0.2373", "loss": "2.4553", "code": "@O vd visit(Not n) throws on { Matart(); if (mal) { rrn; } Sta(unt);ap(); if (ex) { for ( i ; i.size(); ) {a(it); } } }", "n_tokens": 119, "n_pass": [413, 56, 49]}
{"time": "2021-02-22 04:11:17.911751", "score": "0.2392", "loss": "2.4465", "code": "@O vd visit(Not n) throws on { Matart(); if (mal) { rrn; } Sta(unt);ap(); if (ex) { for (; i.size(); ) {a(it); } } }", "n_tokens": 116, "n_pass": [426, 58, 50]}
{"time": "2021-02-22 04:11:39.140684", "score": "0.2357", "loss": "2.4629", "code": "@O vd visit(Not n) throws on { Matart(); if (mal) { rrn; } Sta(unt);ap(); if (ex) { for (; iize(); ) {a(it); } } }", "n_tokens": 114, "n_pass": [556, 64, 51]}
{"time": "2021-02-22 04:11:41.752444", "score": "0.2349", "loss": "2.4712", "code": "@O vd visit(Not n) throws on { Matart(); if (mal) { rrn; } Sta(unt);ap(); if (ex) { for (; ie(); ) {a(it); } } }", "n_tokens": 112, "n_pass": [557, 65, 52]}
{"time": "2021-02-22 04:11:44.398473", "score": "0.2343", "loss": "2.4819", "code": "@O vd visit(Not n) throws on { Matart(); if (mal) { rrn; } Sta(unt);ap(); if (ex) { for (; ie(); ) {a(); } } }", "n_tokens": 110, "n_pass": [563, 66, 53]}
{"time": "2021-02-22 04:11:47.786285", "score": "0.2303", "loss": "2.0085", "code": "@O d visit(Not n) throws on { Matart(); if (mal) { rrn; } Sta(unt);ap(); if (ex) { for (; ie(); ) {a(); } } }", "n_tokens": 109, "n_pass": [571, 67, 54]}
{"time": "2021-02-22 04:12:01.007121", "score": "0.2303", "loss": "2.0085", "code": "@O d visit(Not n)throws on { Matart(); if (mal) { rrn; } Sta(unt);ap(); if (ex) { for (; ie(); ) {a(); } } }", "n_tokens": 108, "n_pass": [586, 71, 55]}
{"time": "2021-02-22 04:12:03.623766", "score": "0.3142", "loss": "1.5557", "code": "@O d visit(Not n)throws n { Matart(); if (mal) { rrn; } Sta(unt);ap(); if (ex) { for (; ie(); ) {a(); } } }", "n_tokens": 107, "n_pass": [594, 72, 56]}
{"time": "2021-02-22 04:12:06.232364", "score": "0.3142", "loss": "1.5557", "code": "@O d visit(Not n)throws n{ Matart(); if (mal) { rrn; } Sta(unt);ap(); if (ex) { for (; ie(); ) {a(); } } }", "n_tokens": 106, "n_pass": [596, 73, 57]}
{"time": "2021-02-22 04:12:08.848897", "score": "0.3142", "loss": "1.5557", "code": "@O d visit(Not n)throws n{Matart(); if (mal) { rrn; } Sta(unt);ap(); if (ex) { for (; ie(); ) {a(); } } }", "n_tokens": 105, "n_pass": [598, 74, 58]}
{"time": "2021-02-22 04:12:11.467249", "score": "0.3142", "loss": "1.5557", "code": "@O d visit(Not n)throws n{atart(); if (mal) { rrn; } Sta(unt);ap(); if (ex) { for (; ie(); ) {a(); } } }", "n_tokens": 104, "n_pass": [599, 75, 59]}
{"time": "2021-02-22 04:12:14.113542", "score": "0.3142", "loss": "1.5557", "code": "@O d visit(Not n)throws n{tart(); if (mal) { rrn; } Sta(unt);ap(); if (ex) { for (; ie(); ) {a(); } } }", "n_tokens": 103, "n_pass": [600, 76, 60]}
{"time": "2021-02-22 04:12:27.359223", "score": "0.3142", "loss": "1.5557", "code": "@O d visit(Not n)throws n{tart();if (mal) { rrn; } Sta(unt);ap(); if (ex) { for (; ie(); ) {a(); } } }", "n_tokens": 102, "n_pass": [608, 81, 61]}
{"time": "2021-02-22 04:12:29.970452", "score": "0.3142", "loss": "1.5557", "code": "@O d visit(Not n)throws n{tart();if(mal) { rrn; } Sta(unt);ap(); if (ex) { for (; ie(); ) {a(); } } }", "n_tokens": 101, "n_pass": [611, 82, 62]}
{"time": "2021-02-22 04:12:32.577802", "score": "0.4417", "loss": "0.8874", "code": "@O d visit(Not n)throws n{tart();if(al) { rrn; } Sta(unt);ap(); if (ex) { for (; ie(); ) {a(); } } }", "n_tokens": 100, "n_pass": [613, 83, 63]}
{"time": "2021-02-22 04:12:35.186327", "score": "0.4453", "loss": "0.8953", "code": "@O d visit(Not n)throws n{tart();if(l) { rrn; } Sta(unt);ap(); if (ex) { for (; ie(); ) {a(); } } }", "n_tokens": 99, "n_pass": [614, 84, 64]}
{"time": "2021-02-22 04:12:37.792509", "score": "0.5832", "loss": "0.5955", "code": "@O d visit(Not n)throws n{tart();if(l) { n; } Sta(unt);ap(); if (ex) { for (; ie(); ) {a(); } } }", "n_tokens": 97, "n_pass": [618, 85, 65]}
{"time": "2021-02-22 04:12:40.413878", "score": "0.5843", "loss": "0.593", "code": "@O d visit(Not n)throws n{tart();if(l) {  } Sta(unt);ap(); if (ex) { for (; ie(); ) {a(); } } }", "n_tokens": 95, "n_pass": [619, 86, 66]}
{"time": "2021-02-22 04:12:43.072263", "score": "0.4489", "loss": "0.8549", "code": "@O d visit(Not n)throws n{tart();if(l) {  }ta(unt);ap(); if (ex) { for (; ie(); ) {a(); } } }", "n_tokens": 93, "n_pass": [621, 87, 67]}
{"time": "2021-02-22 04:12:50.929494", "score": "0.4641", "loss": "0.8126", "code": "@O d visit(Not n)throws n{tart();if(l) {  }ta(unt);ap; if (ex) { for (; ie(); ) {a(); } } }", "n_tokens": 91, "n_pass": [627, 90, 68]}
{"time": "2021-02-22 04:12:53.562458", "score": "0.4469", "loss": "0.8491", "code": "@O d visit(Not n)throws n{tart();if(l) {  }ta(unt);ap; if (ex) { for (;e(); ) {a(); } } }", "n_tokens": 89, "n_pass": [637, 91, 69]}
{"time": "2021-02-22 04:12:59.678235", "score": "0.2952", "loss": "1.4196", "code": "@O d visit(ot n)throws n{tart();if(l) {  }ta(unt);ap; if (ex) { for (;e(); ) {a(); } } }", "n_tokens": 88, "n_pass": [658, 92, 70]}
{"time": "2021-02-22 04:13:02.281788", "score": "0.4096", "loss": "1.2469", "code": "@O d visit(t n)throws n{tart();if(l) {  }ta(unt);ap; if (ex) { for (;e(); ) {a(); } } }", "n_tokens": 87, "n_pass": [659, 93, 71]}
{"time": "2021-02-22 04:13:07.526958", "score": "0.8621", "loss": "0.2236", "code": "@O d visit(t n)throws n{trt();if(l) {  }ta(unt);ap; if (ex) { for (;e(); ) {a(); } } }", "n_tokens": 86, "n_pass": [674, 95, 72]}
{"time": "2021-02-22 04:13:15.370569", "score": "0.8802", "loss": "0.1808", "code": "@O d visit(t n)throws n{trt();if(l) {  }(unt);ap; if (ex) { for (;e(); ) {a(); } } }", "n_tokens": 84, "n_pass": [687, 98, 73]}
{"time": "2021-02-22 04:13:17.978206", "score": "0.8559", "loss": "0.2139", "code": "@O d visit(t n)throws n{trt();if(l) {  }(u);ap; if (ex) { for (;e(); ) {a(); } } }", "n_tokens": 82, "n_pass": [689, 99, 74]}
{"time": "2021-02-22 04:13:20.616141", "score": "0.8669", "loss": "0.1975", "code": "@O d visit(t n)throws n{trt();if(l) {  }(u);; if (ex) { for (;e(); ) {a(); } } }", "n_tokens": 80, "n_pass": [691, 100, 75]}
{"time": "2021-02-22 04:13:23.226640", "score": "0.8649", "loss": "0.2006", "code": "@O d visit(t n)throws n{trt();if(l) {  }(u);if (ex) { for (;e(); ) {a(); } } }", "n_tokens": 78, "n_pass": [692, 101, 76]}
{"time": "2021-02-22 04:13:42.891292", "score": "0.8649", "loss": "0.2006", "code": "@O d visit(t n)throws n{trt();if(l) {  }(u);if (ex) { for(;e(); ) {a(); } } }", "n_tokens": 77, "n_pass": [796, 105, 77]}
{"time": "2021-02-22 04:13:45.504921", "score": "0.8649", "loss": "0.2006", "code": "@O d visit(t n)throws n{trt();if(l) {  }(u);if (ex) { for(;e();) {a(); } } }", "n_tokens": 76, "n_pass": [803, 106, 78]}
{"time": "2021-02-22 04:13:48.110801", "score": "0.8649", "loss": "0.2006", "code": "@O d visit(t n)throws n{trt();if(l) {  }(u);if (ex) { for(;e();){a(); } } }", "n_tokens": 75, "n_pass": [805, 107, 79]}
{"time": "2021-02-22 04:13:50.717046", "score": "0.8649", "loss": "0.2006", "code": "@O d visit(t n)throws n{trt();if(l) {  }(u);if (ex) { for(;e();){a();} } }", "n_tokens": 74, "n_pass": [811, 108, 80]}
{"time": "2021-02-22 04:13:53.328097", "score": "0.8649", "loss": "0.2006", "code": "@O d visit(t n)throws n{trt();if(l) {  }(u);if (ex) { for(;e();){a();}} }", "n_tokens": 73, "n_pass": [813, 109, 81]}
{"time": "2021-02-22 04:13:55.937677", "score": "0.8649", "loss": "0.2006", "code": "@O d visit(t n)throws n{trt();if(l) {  }(u);if (ex) { for(;e();){a();}}}", "n_tokens": 72, "n_pass": [815, 110, 82]}
{"time": "2021-02-22 04:14:09.973484", "score": "0.8649", "loss": "0.2006", "code": "@O d visit(t n)throws n{trt();if(l){  }(u);if (ex) { for(;e();){a();}}}", "n_tokens": 71, "n_pass": [852, 114, 83]}
{"time": "2021-02-22 04:14:12.584623", "score": "0.8649", "loss": "0.2006", "code": "@O d visit(t n)throws n{trt();if(l){ }(u);if (ex) { for(;e();){a();}}}", "n_tokens": 70, "n_pass": [854, 115, 84]}
{"time": "2021-02-22 04:14:15.189161", "score": "0.8649", "loss": "0.2006", "code": "@O d visit(t n)throws n{trt();if(l){}(u);if (ex) { for(;e();){a();}}}", "n_tokens": 69, "n_pass": [855, 116, 85]}
{"time": "2021-02-22 04:14:17.792415", "score": "0.8649", "loss": "0.2006", "code": "@O d visit(t n)throws n{trt();if(l){}(u);if(ex) { for(;e();){a();}}}", "n_tokens": 68, "n_pass": [863, 117, 86]}
{"time": "2021-02-22 04:14:20.393214", "score": "0.8548", "loss": "0.2118", "code": "@O d visit(t n)throws n{trt();if(l){}(u);if(x) { for(;e();){a();}}}", "n_tokens": 67, "n_pass": [865, 118, 87]}
{"time": "2021-02-22 04:14:23.006581", "score": "0.8548", "loss": "0.2118", "code": "@O d visit(t n)throws n{trt();if(l){}(u);if(x){ for(;e();){a();}}}", "n_tokens": 66, "n_pass": [868, 119, 88]}
{"time": "2021-02-22 04:14:25.602439", "score": "0.8548", "loss": "0.2118", "code": "@O d visit(t n)throws n{trt();if(l){}(u);if(x){for(;e();){a();}}}", "n_tokens": 65, "n_pass": [870, 120, 89]}

Minimal simplified code:
@O d visit(t n)throws n{trt();if(l){}(u);if(x){for(;e();){a();}}}

