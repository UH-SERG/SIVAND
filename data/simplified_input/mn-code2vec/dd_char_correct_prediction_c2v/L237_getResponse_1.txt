
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/sakaiproject__sakai/samigo/samigo-app/src/java/org/sakaiproject/tool/assessment/ui/bean/delivery/FibBean_getResponse.java
method_name = getResponse
method_body = public String getResponse() { if (response == null) return ""; return response; }
predict, score, loss = getResponse, 0.9464344382286072, 0.10619685053825378

Trace of simplified code(s):
{"time": "2021-02-22 22:37:01.669870", "score": "0.9464", "loss": "0.1062", "code": "public String getResponse() { if (response == null) return \"\"; return response; }", "n_tokens": 81, "n_pass": [1, 1, 1]}
{"time": "2021-02-22 22:37:04.837035", "score": "0.4524", "loss": "0.9881", "code": "ing getResponse() { if (response == null) return \"\"; return response; }", "n_tokens": 71, "n_pass": [20, 2, 2]}
{"time": "2021-02-22 22:37:19.463793", "score": "0.4027", "loss": "1.0697", "code": "g getResponse() { if (response == null) return \"\"; return response; }", "n_tokens": 69, "n_pass": [83, 7, 3]}
{"time": "2021-02-22 22:37:32.476659", "score": "0.3203", "loss": "1.4246", "code": "g getResponse() { if (response ==ll) return \"\"; return response; }", "n_tokens": 66, "n_pass": [99, 11, 4]}
{"time": "2021-02-22 22:37:58.959832", "score": "0.357", "loss": "1.3151", "code": "g getResponse() { if (responsell) return \"\"; return response; }", "n_tokens": 63, "n_pass": [125, 20, 5]}
{"time": "2021-02-22 22:38:17.674274", "score": "0.357", "loss": "1.3151", "code": "g getResponse() { if (sponsell) return \"\"; return response; }", "n_tokens": 61, "n_pass": [148, 26, 6]}
{"time": "2021-02-22 22:38:20.437412", "score": "0.357", "loss": "1.3151", "code": "g getResponse() { if (nsell) return \"\"; return response; }", "n_tokens": 58, "n_pass": [149, 27, 7]}
{"time": "2021-02-22 22:38:46.378432", "score": "0.357", "loss": "1.3151", "code": "g getResponse() { if (nell) return \"\"; return response; }", "n_tokens": 57, "n_pass": [220, 35, 8]}
{"time": "2021-02-22 22:38:57.135330", "score": "0.357", "loss": "1.3151", "code": "g getResponse() { if (nell)return \"\"; return response; }", "n_tokens": 56, "n_pass": [225, 39, 9]}
{"time": "2021-02-22 22:38:59.825706", "score": "0.4334", "loss": "1.0469", "code": "g getResponse() { if (nell)return ; return response; }", "n_tokens": 54, "n_pass": [232, 40, 10]}
{"time": "2021-02-22 22:39:26.108950", "score": "0.4334", "loss": "1.0469", "code": "g getResponse(){ if (nell)return ; return response; }", "n_tokens": 53, "n_pass": [258, 48, 11]}
{"time": "2021-02-22 22:39:28.784765", "score": "0.4334", "loss": "1.0469", "code": "g getResponse(){if (nell)return ; return response; }", "n_tokens": 52, "n_pass": [260, 49, 12]}
{"time": "2021-02-22 22:39:31.475745", "score": "0.4334", "loss": "1.0469", "code": "g getResponse(){if(nell)return ; return response; }", "n_tokens": 51, "n_pass": [263, 50, 13]}
{"time": "2021-02-22 22:39:44.860676", "score": "0.4229", "loss": "1.0803", "code": "g getResponse(){if(nell)eturn ; return response; }", "n_tokens": 50, "n_pass": [270, 55, 14]}
{"time": "2021-02-22 22:39:47.518392", "score": "0.3958", "loss": "1.1601", "code": "g getResponse(){if(nell)turn ; return response; }", "n_tokens": 49, "n_pass": [271, 56, 15]}
{"time": "2021-02-22 22:39:50.208555", "score": "0.3589", "loss": "1.2782", "code": "g getResponse(){if(nell)urn ; return response; }", "n_tokens": 48, "n_pass": [272, 57, 16]}
{"time": "2021-02-22 22:39:53.061530", "score": "0.4138", "loss": "1.1053", "code": "g getResponse(){if(nell)rn ; return response; }", "n_tokens": 47, "n_pass": [273, 58, 17]}
{"time": "2021-02-22 22:39:55.771110", "score": "0.4159", "loss": "1.0993", "code": "g getResponse(){if(nell)n ; return response; }", "n_tokens": 46, "n_pass": [274, 59, 18]}
{"time": "2021-02-22 22:39:58.426683", "score": "0.4334", "loss": "1.0469", "code": "g getResponse(){if(nell); return response; }", "n_tokens": 44, "n_pass": [275, 60, 19]}
{"time": "2021-02-22 22:41:12.341772", "score": "0.4334", "loss": "1.0469", "code": "g getResponse(){if(nell); return response;}", "n_tokens": 43, "n_pass": [341, 85, 20]}
{"time": "2021-02-22 22:41:38.921573", "score": "0.4334", "loss": "1.0469", "code": "g getResponse(){if(nell);return response;}", "n_tokens": 42, "n_pass": [367, 93, 21]}

Minimal simplified code:
g getResponse(){if(nell);return response;}

