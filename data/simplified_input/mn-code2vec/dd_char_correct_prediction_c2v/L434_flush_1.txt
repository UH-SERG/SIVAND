
path = /scratch/rabin/data/code2vec/transforms/Methods/java-large/test/spring-projects__spring-ws/spring-ws-core/src/main/java/org/springframework/ws/server/endpoint/AbstractStaxStreamPayloadEndpoint_flush.java
method_name = flush
method_body = @Override public void flush() throws XMLStreamException { if (streamWriter != null) { streamWriter.flush(); } }
predict, score, loss = flush, 0.788699746131897, 0.2416994422674179

Trace of simplified code(s):
{"time": "2021-05-26 10:52:23.339128", "score": "0.7887", "loss": "0.2417", "code": "@Override public void flush() throws XMLStreamException { if (streamWriter != null) { streamWriter.flush(); } }", "n_tokens": 111, "n_pass": [1, 1, 1]}
{"time": "2021-05-26 10:52:29.493298", "score": "0.7954", "loss": "0.2336", "code": "@Overrlic void flush() throws XMLStreamException { if (streamWriter != null) { streamWriter.flush(); } }", "n_tokens": 104, "n_pass": [45, 3, 2]}
{"time": "2021-05-26 10:52:33.013643", "score": "0.9593", "loss": "0.0584", "code": "@Overrlic void flush() throws XMLSception { if (streamWriter != null) { streamWriter.flush(); } }", "n_tokens": 97, "n_pass": [50, 4, 3]}
{"time": "2021-05-26 10:52:38.281289", "score": "0.9716", "loss": "0.0407", "code": "@Overrlic void flush() throws XMLSception { if (riter != null) { streamWriter.flush(); } }", "n_tokens": 90, "n_pass": [53, 6, 4]}
{"time": "2021-05-26 10:52:40.955208", "score": "0.9835", "loss": "0.0277", "code": "@Overrlic void flush() throws XMLSception { if (riter != null) { strer.flush(); } }", "n_tokens": 83, "n_pass": [57, 7, 5]}
{"time": "2021-05-26 10:52:47.091237", "score": "0.8677", "loss": "0.1646", "code": "@Overrlic void flush() throws XMLS { if (riter != null) { strer.flush(); } }", "n_tokens": 76, "n_pass": [65, 9, 6]}
{"time": "2021-05-26 10:52:53.089221", "score": "0.9688", "loss": "0.0468", "code": "@Overrlic void flush() throws S { if (riter != null) { strer.flush(); } }", "n_tokens": 73, "n_pass": [99, 11, 7]}
{"time": "2021-05-26 10:52:55.718532", "score": "0.5457", "loss": "0.6166", "code": "@Overrlic void flush() throws S { if (rit= null) { strer.flush(); } }", "n_tokens": 69, "n_pass": [103, 12, 8]}
{"time": "2021-05-26 10:52:58.443446", "score": "0.9577", "loss": "0.0801", "code": "@Overrlic void flush() throws S { if (ritll) { strer.flush(); } }", "n_tokens": 65, "n_pass": [104, 13, 9]}
{"time": "2021-05-26 10:53:06.313412", "score": "0.9577", "loss": "0.0801", "code": "@Ovlic void flush() throws S { if (ritll) { strer.flush(); } }", "n_tokens": 62, "n_pass": [112, 16, 10]}
{"time": "2021-05-26 10:53:18.513174", "score": "0.9577", "loss": "0.0801", "code": "@Olic void flush() throws S { if (ritll) { strer.flush(); } }", "n_tokens": 61, "n_pass": [167, 20, 11]}
{"time": "2021-05-26 10:53:21.187393", "score": "0.8534", "loss": "0.2011", "code": "@Oic void flush() throws S { if (ritll) { strer.flush(); } }", "n_tokens": 60, "n_pass": [168, 21, 12]}
{"time": "2021-05-26 10:53:23.787444", "score": "0.9198", "loss": "0.1543", "code": "@Oc void flush() throws S { if (ritll) { strer.flush(); } }", "n_tokens": 59, "n_pass": [169, 22, 13]}
{"time": "2021-05-26 10:53:26.384606", "score": "0.8234", "loss": "0.2826", "code": "@O void flush() throws S { if (ritll) { strer.flush(); } }", "n_tokens": 58, "n_pass": [170, 23, 14]}
{"time": "2021-05-26 10:53:38.448665", "score": "0.9687", "loss": "0.045", "code": "@O void flush() throws S { if (rll) { strer.flush(); } }", "n_tokens": 56, "n_pass": [188, 27, 15]}
{"time": "2021-05-26 10:53:41.040955", "score": "0.6624", "loss": "0.5099", "code": "@O void flush() throws S { if (r) { strer.flush(); } }", "n_tokens": 54, "n_pass": [189, 28, 16]}
{"time": "2021-05-26 10:53:43.633417", "score": "0.8547", "loss": "0.2267", "code": "@O void flush() throws S { if (r) { rer.flush(); } }", "n_tokens": 52, "n_pass": [192, 29, 17]}
{"time": "2021-05-26 10:53:57.097755", "score": "0.2499", "loss": "2.0654", "code": "@O oid flush() throws S { if (r) { rer.flush(); } }", "n_tokens": 51, "n_pass": [204, 34, 18]}
{"time": "2021-05-26 10:54:21.523619", "score": "0.7333", "loss": "0.4963", "code": "@O oi flush() throws S { if (r) { rer.flush(); } }", "n_tokens": 50, "n_pass": [279, 41, 19]}
{"time": "2021-05-26 10:54:26.193211", "score": "0.7333", "loss": "0.4963", "code": "@O oi flush()throws S { if (r) { rer.flush(); } }", "n_tokens": 49, "n_pass": [287, 42, 20]}
{"time": "2021-05-26 10:54:28.862482", "score": "0.7333", "loss": "0.4963", "code": "@O oi flush()throws S{ if (r) { rer.flush(); } }", "n_tokens": 48, "n_pass": [296, 43, 21]}
{"time": "2021-05-26 10:54:31.522515", "score": "0.7333", "loss": "0.4963", "code": "@O oi flush()throws S{if (r) { rer.flush(); } }", "n_tokens": 47, "n_pass": [298, 44, 22]}
{"time": "2021-05-26 10:54:34.124033", "score": "0.7333", "loss": "0.4963", "code": "@O oi flush()throws S{if(r) { rer.flush(); } }", "n_tokens": 46, "n_pass": [301, 45, 23]}
{"time": "2021-05-26 10:54:36.747533", "score": "0.7333", "loss": "0.4963", "code": "@O oi flush()throws S{if(r){ rer.flush(); } }", "n_tokens": 45, "n_pass": [305, 46, 24]}
{"time": "2021-05-26 10:54:39.371155", "score": "0.7333", "loss": "0.4963", "code": "@O oi flush()throws S{if(r){rer.flush(); } }", "n_tokens": 44, "n_pass": [307, 47, 25]}
{"time": "2021-05-26 10:54:44.593504", "score": "0.3628", "loss": "1.1278", "code": "@O oi flush()throws S{if(r){rr.flush(); } }", "n_tokens": 43, "n_pass": [309, 49, 26]}
{"time": "2021-05-26 10:55:05.520437", "score": "0.3628", "loss": "1.1278", "code": "@O oi flush()throws S{if(r){rr.flush();} }", "n_tokens": 42, "n_pass": [320, 57, 27]}
{"time": "2021-05-26 10:55:08.115774", "score": "0.3628", "loss": "1.1278", "code": "@O oi flush()throws S{if(r){rr.flush();}}", "n_tokens": 41, "n_pass": [322, 58, 28]}

Minimal simplified code:
@O oi flush()throws S{if(r){rr.flush();}}

