
path = /scratch/rabin/data/code2vec/transforms/Methods/java-large/test/Blankj__AndroidUtilCode/app/src/main/java/com/blankj/androidutilcode/feature/core/bar/BarStatusDrawerActivity_onProgressChanged.java
method_name = onProgressChanged
method_body = @Override public void onProgressChanged(SeekBar seekBar, int progress, boolean fromUser) { mAlpha = progress; tvStatusAlpha.setText(String.valueOf(mAlpha)); updateStatusBar(); }
predict, score, loss = onProgressChanged, 0.9999711513519287, 6.0437283536884934e-05

Trace of simplified code(s):
{"time": "2021-05-26 09:00:09.730622", "score": "1.0", "loss": "0.0001", "code": "@Override public void onProgressChanged(SeekBar seekBar, int progress, boolean fromUser) { mAlpha = progress; tvStatusAlpha.setText(String.valueOf(mAlpha)); updateStatusBar(); }", "n_tokens": 177, "n_pass": [1, 1, 1]}
{"time": "2021-05-26 09:00:13.230507", "score": "1.0", "loss": "0.0", "code": "@Override public void onProgressChanged(SeekBar seekBar, int progress, boolean fromUser) { mAlpha = progress; tvStatusAlpha.setText(); updateStatusBar(); }", "n_tokens": 155, "n_pass": [26, 2, 2]}
{"time": "2021-05-26 09:00:17.082480", "score": "0.9991", "loss": "0.0018", "code": "@Override public void onProgressChanged(SeekBar seekBaress, boolean fromUser) { mAlpha = progress; tvStatusAlpha.setText(); updateStatusBar(); }", "n_tokens": 144, "n_pass": [54, 3, 3]}
{"time": "2021-05-26 09:00:19.714706", "score": "0.9993", "loss": "0.0012", "code": "@Override public void onProgressChanged(SeekBar seekBaress, boolean fromUser) { mAlpha =tvStatusAlpha.setText(); updateStatusBar(); }", "n_tokens": 133, "n_pass": [58, 4, 4]}
{"time": "2021-05-26 09:00:22.452070", "score": "0.9986", "loss": "0.0022", "code": "@Override public void onProgressChanged(SeekBar seekBaress, boolean fromUser) { mAlpha =ha.setText(); updateStatusBar(); }", "n_tokens": 122, "n_pass": [59, 5, 5]}
{"time": "2021-05-26 09:00:25.958141", "score": "0.9999", "loss": "0.0001", "code": "@Override public void onProgressChanged(SeekBar seekBaress, boolean fromUser) { mAlphaetText(); updateStatusBar(); }", "n_tokens": 116, "n_pass": [93, 6, 6]}
{"time": "2021-05-26 09:00:28.578209", "score": "0.9999", "loss": "0.0001", "code": "@Override public void onProgressChanged(SeekBar seekBaress, boolean fromUser) { mAlpha(); updateStatusBar(); }", "n_tokens": 110, "n_pass": [94, 7, 7]}
{"time": "2021-05-26 09:00:31.270077", "score": "1.0", "loss": "0.0", "code": "@Override public void onProgressChanged(SeekBar seekBaress, boolean fromUser) { mAlphadateStatusBar(); }", "n_tokens": 104, "n_pass": [95, 8, 8]}
{"time": "2021-05-26 09:00:33.936337", "score": "1.0", "loss": "0.0", "code": "@Override public void onProgressChanged(SeekBar seekBaress, boolean fromUser) { mAlphaatusBar(); }", "n_tokens": 98, "n_pass": [96, 9, 9]}
{"time": "2021-05-26 09:00:36.564559", "score": "1.0", "loss": "0.0", "code": "@Override public void onProgressChanged(SeekBar seekBaress, boolean fromUser) { mAlphar(); }", "n_tokens": 92, "n_pass": [97, 10, 10]}
{"time": "2021-05-26 09:00:39.179958", "score": "1.0", "loss": "0.0", "code": "@Overpublic void onProgressChanged(SeekBar seekBaress, boolean fromUser) { mAlphar(); }", "n_tokens": 87, "n_pass": [100, 11, 11]}
{"time": "2021-05-26 09:00:41.854863", "score": "1.0", "loss": "0.0", "code": "@Overc void onProgressChanged(SeekBar seekBaress, boolean fromUser) { mAlphar(); }", "n_tokens": 82, "n_pass": [101, 12, 12]}
{"time": "2021-05-26 09:00:48.829409", "score": "1.0", "loss": "0.0001", "code": "@Overc void onProgressChanged(SeekBar sess, boolean fromUser) { mAlphar(); }", "n_tokens": 76, "n_pass": [109, 14, 13]}
{"time": "2021-05-26 09:00:54.165375", "score": "1.0", "loss": "0.0", "code": "@Overc void onProgressChanged(SeekBar sess, boolean fromUser) { r(); }", "n_tokens": 70, "n_pass": [114, 16, 14]}
{"time": "2021-05-26 09:00:58.446731", "score": "0.9033", "loss": "0.1922", "code": "@Overc void onProgressChanged(ar sess, boolean fromUser) { r(); }", "n_tokens": 65, "n_pass": [122, 17, 15]}
{"time": "2021-05-26 09:01:05.336114", "score": "0.8349", "loss": "0.3544", "code": "@Overc void onProgressChanged(ar sess,olean fromUser) { r(); }", "n_tokens": 62, "n_pass": [162, 19, 16]}
{"time": "2021-05-26 09:01:07.985878", "score": "0.8544", "loss": "0.2909", "code": "@Overc void onProgressChanged(ar sess,an fromUser) { r(); }", "n_tokens": 59, "n_pass": [163, 20, 17]}
{"time": "2021-05-26 09:01:15.890002", "score": "0.8349", "loss": "0.319", "code": "@Overc void onProgressChanged(ar sess,an fromUser) { ; }", "n_tokens": 56, "n_pass": [169, 23, 18]}
{"time": "2021-05-26 09:01:18.519364", "score": "0.7534", "loss": "0.5947", "code": "@Orc void onProgressChanged(ar sess,an fromUser) { ; }", "n_tokens": 54, "n_pass": [172, 24, 19]}
{"time": "2021-05-26 09:01:21.444911", "score": "0.8267", "loss": "0.3382", "code": "@O void onProgressChanged(ar sess,an fromUser) { ; }", "n_tokens": 52, "n_pass": [173, 25, 20]}
{"time": "2021-05-26 09:01:35.194056", "score": "0.6955", "loss": "0.5885", "code": " void onProgressChanged(ar sess,an fromUser) { ; }", "n_tokens": 50, "n_pass": [192, 29, 21]}
{"time": "2021-05-26 09:01:52.495910", "score": "0.6955", "loss": "0.5885", "code": "void onProgressChanged(ar sess,an fromUser) { ; }", "n_tokens": 49, "n_pass": [247, 34, 22]}
{"time": "2021-05-26 09:02:25.774027", "score": "0.9163", "loss": "0.1485", "code": "void onProgressChanged(r sess,an fromUser) { ; }", "n_tokens": 48, "n_pass": [312, 43, 23]}
{"time": "2021-05-26 09:02:31.090685", "score": "0.9667", "loss": "0.0458", "code": "void onProgressChanged(r sss,an fromUser) { ; }", "n_tokens": 47, "n_pass": [315, 45, 24]}
{"time": "2021-05-26 09:02:33.740998", "score": "0.6934", "loss": "0.4001", "code": "void onProgressChanged(r ss,an fromUser) { ; }", "n_tokens": 46, "n_pass": [316, 46, 25]}
{"time": "2021-05-26 09:02:36.361081", "score": "0.8447", "loss": "0.1885", "code": "void onProgressChanged(r s,an fromUser) { ; }", "n_tokens": 45, "n_pass": [317, 47, 26]}
{"time": "2021-05-26 09:02:38.983992", "score": "0.7691", "loss": "0.2888", "code": "void onProgressChanged(r s,n fromUser) { ; }", "n_tokens": 44, "n_pass": [319, 48, 27]}
{"time": "2021-05-26 09:03:02.793273", "score": "0.7691", "loss": "0.2888", "code": "void onProgressChanged(r s,n fromUser){ ; }", "n_tokens": 43, "n_pass": [331, 57, 28]}
{"time": "2021-05-26 09:03:05.472796", "score": "0.7691", "loss": "0.2888", "code": "void onProgressChanged(r s,n fromUser){; }", "n_tokens": 42, "n_pass": [333, 58, 29]}
{"time": "2021-05-26 09:03:10.625931", "score": "0.7691", "loss": "0.2888", "code": "void onProgressChanged(r s,n fromUser){;}", "n_tokens": 41, "n_pass": [335, 60, 30]}
{"time": "2021-05-26 09:03:13.219370", "score": "0.4639", "loss": "0.9476", "code": "oid onProgressChanged(r s,n fromUser){;}", "n_tokens": 40, "n_pass": [337, 61, 31]}
{"time": "2021-05-26 09:03:15.828243", "score": "0.3407", "loss": "1.3438", "code": "id onProgressChanged(r s,n fromUser){;}", "n_tokens": 39, "n_pass": [338, 62, 32]}
{"time": "2021-05-26 09:03:18.441473", "score": "0.7796", "loss": "0.3203", "code": "d onProgressChanged(r s,n fromUser){;}", "n_tokens": 38, "n_pass": [339, 63, 33]}

Minimal simplified code:
d onProgressChanged(r s,n fromUser){;}

