
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/wso2-attic__product-emm/modules/mobile-agents/android/app-catalog/volley/src/test/java/com/android/volley/mock/WaitableQueue_take.java
method_name = take
method_body = @Override public Request<?> take() throws InterruptedException { Request<?> item = super.take(); if (item == mStopRequest) { mStopEvent.release(); return take(); } return item; }
predict, score, loss = take, 0.9978377223014832, 0.003545429091900587

Trace of simplified code(s):
{"time": "2021-02-25 07:21:34.454088", "score": "0.9978", "loss": "0.0035", "code": "@Override public Request<?> take() throws InterruptedException { Request<?> item = super.take(); if (item == mStopRequest) { mStopEvent.release(); return take(); } return item; }", "n_tokens": 178, "n_pass": [1, 1, 1]}
{"time": "2021-02-25 07:21:37.156332", "score": "0.9988", "loss": "0.002", "code": "st<?> take() throws InterruptedException { Request<?> item = super.take(); if (item == mStopRequest) { mStopEvent.release(); return take(); } return item; }", "n_tokens": 156, "n_pass": [20, 2, 2]}
{"time": "2021-02-25 07:21:39.813781", "score": "0.9869", "loss": "0.0155", "code": "st<?> take() throws InterruptedException { R.take(); if (item == mStopRequest) { mStopEvent.release(); return take(); } return item; }", "n_tokens": 134, "n_pass": [22, 3, 3]}
{"time": "2021-02-25 07:21:45.069925", "score": "0.9886", "loss": "0.0133", "code": "st<?> take() throws InterruptedException { R.take(); if (item == m) { mStopEvent.release(); return take(); } return item; }", "n_tokens": 123, "n_pass": [43, 5, 4]}
{"time": "2021-02-25 07:21:47.677350", "score": "0.9604", "loss": "0.0457", "code": "st<?> take() throws InterruptedException { R.take(); if (item == m) { mStopEv(); return take(); } return item; }", "n_tokens": 112, "n_pass": [44, 6, 5]}
{"time": "2021-02-25 07:21:52.977197", "score": "0.9275", "loss": "0.1202", "code": "st<?> take() throws Inception { R.take(); if (item == m) { mStopEv(); return take(); } return item; }", "n_tokens": 101, "n_pass": [50, 8, 6]}
{"time": "2021-02-25 07:22:00.861692", "score": "0.9198", "loss": "0.1057", "code": "st<?> take() throws Incep{ R.take(); if (item == m) { mStopEv(); return take(); } return item; }", "n_tokens": 96, "n_pass": [79, 11, 7]}
{"time": "2021-02-25 07:22:03.472523", "score": "0.9328", "loss": "0.0803", "code": "st<?> take() throws Incep{ R.take(); if (item == m) { v(); return take(); } return item; }", "n_tokens": 90, "n_pass": [85, 12, 8]}
{"time": "2021-02-25 07:22:11.339736", "score": "0.9948", "loss": "0.0076", "code": "st<?> take() throws Incep{ R.take(); if (item == m) { v(); return take(); } retem; }", "n_tokens": 84, "n_pass": [90, 15, 9]}
{"time": "2021-02-25 07:22:14.334545", "score": "0.8172", "loss": "0.3467", "code": "st<?> take() throws Incep{ R.take(); if (item == m) { v(); rtake(); } retem; }", "n_tokens": 78, "n_pass": [103, 16, 10]}
{"time": "2021-02-25 07:22:16.949706", "score": "0.8792", "loss": "0.207", "code": "st<?> take() throws Incep{ R.take(); if (item == m) { v(); r; } retem; }", "n_tokens": 72, "n_pass": [104, 17, 11]}
{"time": "2021-02-25 07:22:19.936953", "score": "0.8355", "loss": "0.2663", "code": "st<?> take() throws Incep{ R.take(); if (item == m) { ; } retem; }", "n_tokens": 66, "n_pass": [117, 18, 12]}
{"time": "2021-02-25 07:22:25.576992", "score": "0.8423", "loss": "0.2511", "code": "st<?> take() throws Incep{ R.take(); if (item == m) { ; } re; }", "n_tokens": 63, "n_pass": [156, 20, 13]}
{"time": "2021-02-25 07:22:28.967116", "score": "0.4812", "loss": "0.9215", "code": "st<?> take() throws Ip{ R.take(); if (item == m) { ; } re; }", "n_tokens": 60, "n_pass": [166, 21, 14]}
{"time": "2021-02-25 07:22:36.772994", "score": "0.4158", "loss": "1.0516", "code": "st<?> take() throws Ip{ R.take(); if (i == m) { ; } re; }", "n_tokens": 57, "n_pass": [173, 24, 15]}
{"time": "2021-02-25 07:22:39.382526", "score": "0.4084", "loss": "1.0672", "code": "st<?> take() throws Ip{ R.take(); if (i == m) { ; }; }", "n_tokens": 54, "n_pass": [178, 25, 16]}
{"time": "2021-02-25 07:22:50.179493", "score": "0.4084", "loss": "1.0672", "code": "t<?> take() throws Ip{ R.take(); if (i == m) { ; }; }", "n_tokens": 53, "n_pass": [241, 28, 17]}
{"time": "2021-02-25 07:22:52.767007", "score": "0.4084", "loss": "1.0672", "code": "t<?>take() throws Ip{ R.take(); if (i == m) { ; }; }", "n_tokens": 52, "n_pass": [245, 29, 18]}
{"time": "2021-02-25 07:22:56.949143", "score": "0.4084", "loss": "1.0672", "code": "t<?>take()throws Ip{ R.take(); if (i == m) { ; }; }", "n_tokens": 51, "n_pass": [252, 30, 19]}
{"time": "2021-02-25 07:22:59.553221", "score": "0.9036", "loss": "0.13", "code": "t<?>take()throws p{ R.take(); if (i == m) { ; }; }", "n_tokens": 50, "n_pass": [260, 31, 20]}
{"time": "2021-02-25 07:23:02.152974", "score": "0.9036", "loss": "0.13", "code": "t<?>take()throws p{R.take(); if (i == m) { ; }; }", "n_tokens": 49, "n_pass": [263, 32, 21]}
{"time": "2021-02-25 07:23:12.620538", "score": "0.8418", "loss": "0.22", "code": "t<?>take()throws p{R.take; if (i == m) { ; }; }", "n_tokens": 47, "n_pass": [268, 36, 22]}
{"time": "2021-02-25 07:23:15.223574", "score": "0.8418", "loss": "0.22", "code": "t<?>take()throws p{R.take; if (i == m) { }; }", "n_tokens": 45, "n_pass": [277, 37, 23]}
{"time": "2021-02-25 07:23:30.488683", "score": "0.8418", "loss": "0.22", "code": "t<?>take()throws p{R.take; if (i == m) { } }", "n_tokens": 44, "n_pass": [335, 41, 24]}
{"time": "2021-02-25 07:23:33.089522", "score": "0.8418", "loss": "0.22", "code": "t<?>take()throws p{R.take; if (i == m) { }}", "n_tokens": 43, "n_pass": [336, 42, 25]}
{"time": "2021-02-25 07:23:50.347503", "score": "0.8418", "loss": "0.22", "code": "t<?>take()throws p{R.take;if (i == m) { }}", "n_tokens": 42, "n_pass": [364, 48, 26]}
{"time": "2021-02-25 07:23:52.941899", "score": "0.8418", "loss": "0.22", "code": "t<?>take()throws p{R.take;if(i == m) { }}", "n_tokens": 41, "n_pass": [367, 49, 27]}
{"time": "2021-02-25 07:23:55.547700", "score": "0.8418", "loss": "0.22", "code": "t<?>take()throws p{R.take;if(i== m) { }}", "n_tokens": 40, "n_pass": [370, 50, 28]}
{"time": "2021-02-25 07:23:58.142773", "score": "0.885", "loss": "0.152", "code": "t<?>take()throws p{R.take;if(i= m) { }}", "n_tokens": 39, "n_pass": [371, 51, 29]}
{"time": "2021-02-25 07:24:00.730128", "score": "0.885", "loss": "0.152", "code": "t<?>take()throws p{R.take;if(i=m) { }}", "n_tokens": 38, "n_pass": [373, 52, 30]}
{"time": "2021-02-25 07:24:03.335039", "score": "0.885", "loss": "0.152", "code": "t<?>take()throws p{R.take;if(i=m){ }}", "n_tokens": 37, "n_pass": [376, 53, 31]}
{"time": "2021-02-25 07:24:05.932302", "score": "0.885", "loss": "0.152", "code": "t<?>take()throws p{R.take;if(i=m){}}", "n_tokens": 36, "n_pass": [378, 54, 32]}
{"time": "2021-02-25 07:24:23.118235", "score": "0.6635", "loss": "0.5603", "code": "t<?>take()throws p{R.take;if(im){}}", "n_tokens": 35, "n_pass": [411, 60, 33]}
{"time": "2021-02-25 07:24:25.712400", "score": "0.6848", "loss": "0.4499", "code": "t<?>take()throws p{R.take;if(i){}}", "n_tokens": 34, "n_pass": [412, 61, 34]}

Minimal simplified code:
t<?>take()throws p{R.take;if(i){}}

