
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/b3log__xiaov/src/main/java/com/scienjus/smartqq/Receiver_main.java
method_name = main
method_body = public static void main(String[] args) { working = false; friendList = client.getFriendList(); groupList = client.getGroupList(); discussList = client.getDiscussList(); for (Friend friend : friendList) { friendFromID.put(friend.getUserId(), friend); } for (Group group : groupList) { groupFromID.put(group.getId(), group); } for (Discuss discuss : discussList) { discussFromID.put(discuss.getId(), discuss); } working = true; }
predict, score, loss = main, 0.8183402419090271, 0.3253600001335144

Trace of simplified code(s):
{"time": "2021-02-22 17:30:54.745344", "score": "0.9268", "loss": "0.1524", "code": "public static void main(String[] args) { working = false; friendList = client.getFriendList(); groupList = client.getGroupList(); discussList = client.getDiscussList(); for (Friend friend : friendList) { friendFromID.put(friend.getUserId(), friend); } for (Group group : groupList) { groupFromID.put(group.getId(), group); } for (Discuss discuss : discussList) { discussFromID.put(discuss.getId(), discuss); } working = true; }", "n_tokens": 427, "n_pass": [1, 1, 1]}
{"time": "2021-02-22 17:30:57.485505", "score": "0.9281", "loss": "0.0904", "code": "public static void main(String[] args) { working = false; friendList = client.getFriendList(); groupList =ssList(); for (Friend friend : friendList) { friendFromID.put(friend.getUserId(), friend); } for (Group group : groupList) { groupFromID.put(group.getId(), group); } for (Discuss discuss : discussList) { discussFromID.put(discuss.getId(), discuss); } working = true; }", "n_tokens": 374, "n_pass": [22, 2, 2]}
{"time": "2021-02-22 17:31:00.144507", "score": "0.7977", "loss": "0.3782", "code": "public static void main(String[] args) { working = fassList(); for (Friend friend : friendList) { friendFromID.put(friend.getUserId(), friend); } for (Group group : groupList) { groupFromID.put(group.getId(), group); } for (Discuss discuss : discussList) { discussFromID.put(discuss.getId(), discuss); } working = true; }", "n_tokens": 321, "n_pass": [29, 3, 3]}
{"time": "2021-02-22 17:31:02.813048", "score": "0.625", "loss": "1.0703", "code": "public static void main(String[] args) { working = fassList(); for (Friend friend : friendList) { friendFromID.put(frd(), friend); } for (Group group : groupList) { groupFromID.put(group.getId(), group); } for (Discuss discuss : discussList) { discussFromID.put(discuss.getId(), discuss); } working = true; }", "n_tokens": 308, "n_pass": [89, 4, 4]}
{"time": "2021-02-22 17:31:08.091761", "score": "0.6798", "loss": "0.7626", "code": "public static void main(String[] args) { working = fassList(); for (Friend friend : friendList) { friendFromID.put(frd(), friend); } for (Group group : groupList) { groupFromID.put(group.getId(), group); } for (Discuss discuss : discussList) { discussFromID.put(disciscuss); } working = true; }", "n_tokens": 294, "n_pass": [101, 6, 5]}
{"time": "2021-02-22 17:31:10.747889", "score": "0.95", "loss": "0.1676", "code": " void main(String[] args) { working = fassList(); for (Friend friend : friendList) { friendFromID.put(frd(), friend); } for (Group group : groupList) { groupFromID.put(group.getId(), group); } for (Discuss discuss : discussList) { discussFromID.put(disciscuss); } working = true; }", "n_tokens": 281, "n_pass": [104, 7, 6]}
{"time": "2021-02-22 17:31:13.396476", "score": "0.8787", "loss": "0.3357", "code": " void main(String[] args) { working = fassList(); for (Friend friend : friendList) { friendFromID.put(frd(), friend); } for (Group group : groupList) { groupFromID.put(ggroup); } for (Discuss discuss : discussList) { discussFromID.put(disciscuss); } working = true; }", "n_tokens": 267, "n_pass": [118, 8, 7]}
{"time": "2021-02-22 17:31:16.096022", "score": "0.8485", "loss": "0.313", "code": " void main(String[] args) { working = fassList(); for (Friend friend : friendList) { friendFromID.put(frd(), friend); } for (Group group : groupList) { groupFromID.put(ggroup); } for (Discuss discuss : dist) { discussFromID.put(disciscuss); } working = true; }", "n_tokens": 260, "n_pass": [184, 9, 8]}
{"time": "2021-02-22 17:31:18.728414", "score": "0.9312", "loss": "0.2319", "code": " void main(String[] args) { working = fassList(); for (Friend friend : friendList) { friendFromID.put(frd(), friend); } for (Group group : groupList) { groupFromID.put(ggroup); } for (Discuss discuss : dist) { dromID.put(disciscuss); } working = true; }", "n_tokens": 253, "n_pass": [186, 10, 9]}
{"time": "2021-02-22 17:31:21.407714", "score": "0.778", "loss": "0.6114", "code": " void main(String[] args) { working = fassList(); for (Friend friend : friendList) { friendFromID.put(frd(), friend); } for (Group group : groupList) { groupFromID.put(ggroup); } for (Discuss discuss : dist) { dut(disciscuss); } working = true; }", "n_tokens": 246, "n_pass": [187, 11, 10]}
{"time": "2021-02-22 17:31:24.037996", "score": "0.7637", "loss": "0.5943", "code": " void main(String[] args) { working = fassList(); for (Friend friend : friendList) { friendFromID.put(frd(), friend); } for (Group group : groupList) { groupFromID.put(ggroup); } for (Discuss discuss : dist) { dut(disciscuss); } wortrue; }", "n_tokens": 239, "n_pass": [191, 12, 11]}
{"time": "2021-02-22 17:31:27.078311", "score": "0.9607", "loss": "0.0915", "code": " void main(String[] args) { wo= fassList(); for (Friend friend : friendList) { friendFromID.put(frd(), friend); } for (Group group : groupList) { groupFromID.put(ggroup); } for (Discuss discuss : dist) { dut(disciscuss); } wortrue; }", "n_tokens": 233, "n_pass": [198, 13, 12]}
{"time": "2021-02-22 17:31:29.706623", "score": "0.8289", "loss": "0.464", "code": " void main(String[] args) { woList(); for (Friend friend : friendList) { friendFromID.put(frd(), friend); } for (Group group : groupList) { groupFromID.put(ggroup); } for (Discuss discuss : dist) { dut(disciscuss); } wortrue; }", "n_tokens": 227, "n_pass": [199, 14, 13]}
{"time": "2021-02-22 17:31:32.339727", "score": "0.8361", "loss": "0.4078", "code": " void main(String[] args) { wo; for (Friend friend : friendList) { friendFromID.put(frd(), friend); } for (Group group : groupList) { groupFromID.put(ggroup); } for (Discuss discuss : dist) { dut(disciscuss); } wortrue; }", "n_tokens": 221, "n_pass": [200, 15, 14]}
{"time": "2021-02-22 17:31:34.971349", "score": "0.8075", "loss": "0.5105", "code": " void main(String[] args) { wo; for (Friend friend : fist) { friendFromID.put(frd(), friend); } for (Group group : groupList) { groupFromID.put(ggroup); } for (Discuss discuss : dist) { dut(disciscuss); } wortrue; }", "n_tokens": 215, "n_pass": [205, 16, 15]}
{"time": "2021-02-22 17:31:37.603732", "score": "0.7962", "loss": "0.6903", "code": " void main(String[] args) { wo; for (Friend friend : fist) { romID.put(frd(), friend); } for (Group group : groupList) { groupFromID.put(ggroup); } for (Discuss discuss : dist) { dut(disciscuss); } wortrue; }", "n_tokens": 208, "n_pass": [207, 17, 16]}
{"time": "2021-02-22 17:31:40.275112", "score": "0.703", "loss": "1.0619", "code": " void main(String[] args) { wo; for (Friend friend : fist) { ut(frd(), friend); } for (Group group : groupList) { groupFromID.put(ggroup); } for (Discuss discuss : dist) { dut(disciscuss); } wortrue; }", "n_tokens": 201, "n_pass": [208, 18, 17]}
{"time": "2021-02-22 17:31:42.969748", "score": "0.7827", "loss": "0.8502", "code": " void main(String[] args) { wo; for (Friend friend : fist) { ut(frd(), friend); } for (Group group : gr) { groupFromID.put(ggroup); } for (Discuss discuss : dist) { dut(disciscuss); } wortrue; }", "n_tokens": 194, "n_pass": [215, 19, 18]}
{"time": "2021-02-22 17:31:45.682257", "score": "0.4493", "loss": "1.9941", "code": " void main(String[] args) { wo; for (Friend friend : fist) { ut(frd(), friend); } for (Group group : gr) { groD.put(ggroup); } for (Discuss discuss : dist) { dut(disciscuss); } wortrue; }", "n_tokens": 187, "n_pass": [217, 20, 19]}
{"time": "2021-02-22 17:31:48.749284", "score": "0.4851", "loss": "1.837", "code": " void main(String[] args) { wo; for (Friend friend : fist) { ut(frd(), friend); } for (Group group : gr) { g.put(ggroup); } for (Discuss discuss : dist) { dut(disciscuss); } wortrue; }", "n_tokens": 184, "n_pass": [304, 21, 20]}
{"time": "2021-02-22 17:31:51.397471", "score": "0.42", "loss": "2.0371", "code": " void main(String[] args) { wo; for (Friend friend : fist) { ut(frd(), friend); } for (Group group : gr) { g(ggroup); } for (Discuss discuss : dist) { dut(disciscuss); } wortrue; }", "n_tokens": 180, "n_pass": [305, 22, 21]}
{"time": "2021-02-22 17:31:54.039936", "score": "0.6428", "loss": "1.4955", "code": " void main(String[] args) { wo; for (Friend friend : fist) { ut(frd(), friend); } for (Group group : gr) { g(ggroup); } for (Dis discuss : dist) { dut(disciscuss); } wortrue; }", "n_tokens": 176, "n_pass": [311, 23, 22]}
{"time": "2021-02-22 17:31:56.697634", "score": "0.6472", "loss": "1.4803", "code": " void main(String[] args) { wo; for (Friend friend : fist) { ut(frd(), friend); } for (Group group : gr) { g(ggroup); } for (Dis dis : dist) { dut(disciscuss); } wortrue; }", "n_tokens": 172, "n_pass": [313, 24, 23]}
{"time": "2021-02-22 17:31:59.366618", "score": "0.6472", "loss": "1.4803", "code": " void main(String[] args) { wo; for (Friend friend : fist) { ut(frd(), friend); } for (Group group : gr) { g(ggroup); } for (Dis dis : dist) { dut(dscuss); } wortrue; }", "n_tokens": 168, "n_pass": [318, 25, 24]}
{"time": "2021-02-22 17:32:02.004137", "score": "0.6343", "loss": "1.4677", "code": " void main(String[] args) { wo; for (Friend friend : fist) { ut(frd(), friend); } for (Group group : gr) { g(ggroup); } for (Dis dis : dist) { dut(ds); } wortrue; }", "n_tokens": 164, "n_pass": [319, 26, 25]}
{"time": "2021-02-22 17:32:04.647745", "score": "0.6343", "loss": "1.4677", "code": " void main(String[] args) { wo; for (Friend friend : fist) { ut(frd(), friend); } for (Group group : gr) { g(ggroup); } for (Dis dis : dist) { dut(ds); } woe; }", "n_tokens": 160, "n_pass": [322, 27, 26]}
{"time": "2021-02-22 17:32:07.310341", "score": "0.4279", "loss": "2.3806", "code": "id main(String[] args) { wo; for (Friend friend : fist) { ut(frd(), friend); } for (Group group : gr) { g(ggroup); } for (Dis dis : dist) { dut(ds); } woe; }", "n_tokens": 157, "n_pass": [324, 28, 27]}
{"time": "2021-02-22 17:32:16.059522", "score": "0.4444", "loss": "2.3205", "code": "id main(String[] args) {; for (Friend friend : fist) { ut(frd(), friend); } for (Group group : gr) { g(ggroup); } for (Dis dis : dist) { dut(ds); } woe; }", "n_tokens": 154, "n_pass": [333, 31, 28]}
{"time": "2021-02-22 17:32:18.700070", "score": "0.3649", "loss": "2.5711", "code": "id main(String[] args) {; for (Frd friend : fist) { ut(frd(), friend); } for (Group group : gr) { g(ggroup); } for (Dis dis : dist) { dut(ds); } woe; }", "n_tokens": 151, "n_pass": [337, 32, 29]}
{"time": "2021-02-22 17:32:21.413367", "score": "0.3706", "loss": "2.5809", "code": "id main(String[] args) {; for (Frd fnd : fist) { ut(frd(), friend); } for (Group group : gr) { g(ggroup); } for (Dis dis : dist) { dut(ds); } woe; }", "n_tokens": 148, "n_pass": [339, 33, 30]}
{"time": "2021-02-22 17:32:24.043062", "score": "0.3621", "loss": "2.6151", "code": "id main(String[] args) {; for (Frd f: fist) { ut(frd(), friend); } for (Group group : gr) { g(ggroup); } for (Dis dis : dist) { dut(ds); } woe; }", "n_tokens": 145, "n_pass": [340, 34, 31]}
{"time": "2021-02-22 17:32:26.696561", "score": "0.2154", "loss": "3.2017", "code": "id main(String[] args) {; for (Frd f: f) { ut(frd(), friend); } for (Group group : gr) { g(ggroup); } for (Dis dis : dist) { dut(ds); } woe; }", "n_tokens": 142, "n_pass": [342, 35, 32]}
{"time": "2021-02-22 17:32:29.364232", "score": "0.5782", "loss": "1.3465", "code": "id main(String[] args) {; for (Frd f: f) { ut(fr, friend); } for (Group group : gr) { g(ggroup); } for (Dis dis : dist) { dut(ds); } woe; }", "n_tokens": 139, "n_pass": [346, 36, 33]}
{"time": "2021-02-22 17:32:31.978565", "score": "0.5707", "loss": "1.3889", "code": "id main(String[] args) {; for (Frd f: f) { ut(frriend); } for (Group group : gr) { g(ggroup); } for (Dis dis : dist) { dut(ds); } woe; }", "n_tokens": 136, "n_pass": [347, 37, 34]}
{"time": "2021-02-22 17:32:34.598347", "score": "0.6089", "loss": "1.2496", "code": "id main(String[] args) {; for (Frd f: f) { ut(frnd); } for (Group group : gr) { g(ggroup); } for (Dis dis : dist) { dut(ds); } woe; }", "n_tokens": 133, "n_pass": [348, 38, 35]}
{"time": "2021-02-22 17:32:37.229523", "score": "0.6184", "loss": "1.2059", "code": "id main(String[] args) {; for (Frd f: f) { ut(frnd); } for (up group : gr) { g(ggroup); } for (Dis dis : dist) { dut(ds); } woe; }", "n_tokens": 130, "n_pass": [353, 39, 36]}
{"time": "2021-02-22 17:32:39.878775", "score": "0.6176", "loss": "1.2075", "code": "id main(String[] args) {; for (Frd f: f) { ut(frnd); } for (up up : gr) { g(ggroup); } for (Dis dis : dist) { dut(ds); } woe; }", "n_tokens": 127, "n_pass": [355, 40, 37]}
{"time": "2021-02-22 17:32:48.655541", "score": "0.466", "loss": "1.6134", "code": "id main(String[] args) {; for (Frd f: f) {(frnd); } for (up up : gr) { g(ggroup); } for (Dis dis : dist) { dut(ds); } woe; }", "n_tokens": 124, "n_pass": [387, 43, 38]}
{"time": "2021-02-22 17:33:00.055194", "score": "0.385", "loss": "1.884", "code": "id main(String[] args) {; for (F f: f) {(frnd); } for (up up : gr) { g(ggroup); } for (Dis dis : dist) { dut(ds); } woe; }", "n_tokens": 122, "n_pass": [499, 46, 39]}
{"time": "2021-02-22 17:33:02.679839", "score": "0.3854", "loss": "1.9103", "code": "id main(String[] args) {; for (F f: f) {(fd); } for (up up : gr) { g(ggroup); } for (Dis dis : dist) { dut(ds); } woe; }", "n_tokens": 120, "n_pass": [505, 47, 40]}
{"time": "2021-02-22 17:33:10.591973", "score": "0.3423", "loss": "2.1608", "code": "id main(String[] args) {; for (F f: f) {(fd); } for (up up : gr) { g(goup); } for (Dis dis : dist) { dut(ds); } woe; }", "n_tokens": 118, "n_pass": [520, 50, 41]}
{"time": "2021-02-22 17:33:13.257437", "score": "0.3832", "loss": "1.9159", "code": "id main(String[] args) {; for (F f: f) {(fd); } for (up up : gr) { g(gp); } for (Dis dis : dist) { dut(ds); } woe; }", "n_tokens": 116, "n_pass": [521, 51, 42]}
{"time": "2021-02-22 17:33:15.884034", "score": "0.5065", "loss": "1.4014", "code": "id main(String[] args) {; for (F f: f) {(fd); } for (up up : gr) { g(gp); } for (D dis : dist) { dut(ds); } woe; }", "n_tokens": 114, "n_pass": [528, 52, 43]}
{"time": "2021-02-22 17:33:18.507718", "score": "0.5072", "loss": "1.3975", "code": "id main(String[] args) {; for (F f: f) {(fd); } for (up up : gr) { g(gp); } for (D d : dist) { dut(ds); } woe; }", "n_tokens": 112, "n_pass": [530, 53, 44]}
{"time": "2021-02-22 17:33:21.129154", "score": "0.1976", "loss": "3.0467", "code": "id main(String[] args) {; for (F f: f) {(fd); } for (up up : gr) { g(gp); } for (D d :ist) { dut(ds); } woe; }", "n_tokens": 110, "n_pass": [532, 54, 45]}
{"time": "2021-02-22 17:33:23.759843", "score": "0.4976", "loss": "1.3726", "code": "id main(String[] args) {; for (F f: f) {(fd); } for (up up : gr) { g(gp); } for (D d :t) { dut(ds); } woe; }", "n_tokens": 108, "n_pass": [533, 55, 46]}
{"time": "2021-02-22 17:33:31.660134", "score": "0.4973", "loss": "1.3751", "code": "id main(String[] args) {; for (F f: f) {(fd); } for (up up : gr) { g(gp); } for (D d :t) { dut(ds); } e; }", "n_tokens": 106, "n_pass": [542, 58, 47]}
{"time": "2021-02-22 17:33:34.291501", "score": "0.4988", "loss": "1.3633", "code": "id main(String[] args) {; for (F f: f) {(fd); } for (up up : gr) { g(gp); } for (D d :t) { dut(ds); }  }", "n_tokens": 104, "n_pass": [543, 59, 48]}
{"time": "2021-02-22 17:33:36.908134", "score": "0.7788", "loss": "0.4178", "code": "d main(String[] args) {; for (F f: f) {(fd); } for (up up : gr) { g(gp); } for (D d :t) { dut(ds); }  }", "n_tokens": 103, "n_pass": [545, 60, 49]}
{"time": "2021-02-22 17:33:44.568970", "score": "0.5606", "loss": "0.9124", "code": "d main(Sring[] args) {; for (F f: f) {(fd); } for (up up : gr) { g(gp); } for (D d :t) { dut(ds); }  }", "n_tokens": 102, "n_pass": [554, 62, 50]}
{"time": "2021-02-22 17:33:47.191158", "score": "0.7862", "loss": "0.9515", "code": "d main(Sing[] args) {; for (F f: f) {(fd); } for (up up : gr) { g(gp); } for (D d :t) { dut(ds); }  }", "n_tokens": 101, "n_pass": [555, 63, 51]}
{"time": "2021-02-22 17:33:55.092051", "score": "0.3693", "loss": "1.9206", "code": "d main(Sin[] args) {; for (F f: f) {(fd); } for (up up : gr) { g(gp); } for (D d :t) { dut(ds); }  }", "n_tokens": 100, "n_pass": [558, 66, 52]}
{"time": "2021-02-22 17:33:57.713605", "score": "0.3693", "loss": "1.9206", "code": "d main(Sin[]args) {; for (F f: f) {(fd); } for (up up : gr) { g(gp); } for (D d :t) { dut(ds); }  }", "n_tokens": 99, "n_pass": [561, 67, 53]}
{"time": "2021-02-22 17:34:10.954571", "score": "0.3693", "loss": "1.9206", "code": "d main(Sin[]args){; for (F f: f) {(fd); } for (up up : gr) { g(gp); } for (D d :t) { dut(ds); }  }", "n_tokens": 98, "n_pass": [567, 72, 54]}
{"time": "2021-02-22 17:34:13.600049", "score": "0.3693", "loss": "1.9206", "code": "d main(Sin[]args){for (F f: f) {(fd); } for (up up : gr) { g(gp); } for (D d :t) { dut(ds); }  }", "n_tokens": 96, "n_pass": [569, 73, 55]}
{"time": "2021-02-22 17:34:16.232551", "score": "0.244", "loss": "2.3632", "code": "d main(Sin[]args){for (F f: f) {(fd); } for (up up :r) { g(gp); } for (D d :t) { dut(ds); }  }", "n_tokens": 94, "n_pass": [587, 74, 56]}
{"time": "2021-02-22 17:34:29.124689", "score": "0.3917", "loss": "1.2046", "code": "d main(in[]args){for (F f: f) {(fd); } for (up up :r) { g(gp); } for (D d :t) { dut(ds); }  }", "n_tokens": 93, "n_pass": [616, 78, 57]}
{"time": "2021-02-22 17:34:34.378500", "score": "0.3349", "loss": "1.4299", "code": "d main(i[]args){for (F f: f) {(fd); } for (up up :r) { g(gp); } for (D d :t) { dut(ds); }  }", "n_tokens": 92, "n_pass": [618, 80, 58]}
{"time": "2021-02-22 17:35:06.427295", "score": "0.3349", "loss": "1.4299", "code": "d main(i[]args){for(F f: f) {(fd); } for (up up :r) { g(gp); } for (D d :t) { dut(ds); }  }", "n_tokens": 91, "n_pass": [752, 88, 59]}
{"time": "2021-02-22 17:35:09.058767", "score": "0.3349", "loss": "1.4299", "code": "d main(i[]args){for(F f:f) {(fd); } for (up up :r) { g(gp); } for (D d :t) { dut(ds); }  }", "n_tokens": 90, "n_pass": [758, 89, 60]}
{"time": "2021-02-22 17:35:11.718348", "score": "0.3349", "loss": "1.4299", "code": "d main(i[]args){for(F f:f){(fd); } for (up up :r) { g(gp); } for (D d :t) { dut(ds); }  }", "n_tokens": 89, "n_pass": [761, 90, 61]}
{"time": "2021-02-22 17:35:14.362421", "score": "0.3344", "loss": "1.4248", "code": "d main(i[]args){for(F f:f){(d); } for (up up :r) { g(gp); } for (D d :t) { dut(ds); }  }", "n_tokens": 88, "n_pass": [764, 91, 62]}
{"time": "2021-02-22 17:35:17.000392", "score": "0.3344", "loss": "1.4248", "code": "d main(i[]args){for(F f:f){(d);} for (up up :r) { g(gp); } for (D d :t) { dut(ds); }  }", "n_tokens": 87, "n_pass": [768, 92, 63]}
{"time": "2021-02-22 17:35:19.619499", "score": "0.3344", "loss": "1.4248", "code": "d main(i[]args){for(F f:f){(d);}for (up up :r) { g(gp); } for (D d :t) { dut(ds); }  }", "n_tokens": 86, "n_pass": [770, 93, 64]}
{"time": "2021-02-22 17:35:22.260416", "score": "0.3344", "loss": "1.4248", "code": "d main(i[]args){for(F f:f){(d);}for(up up :r) { g(gp); } for (D d :t) { dut(ds); }  }", "n_tokens": 85, "n_pass": [774, 94, 65]}
{"time": "2021-02-22 17:35:24.910107", "score": "0.3305", "loss": "1.4611", "code": "d main(i[]args){for(F f:f){(d);}for(p up :r) { g(gp); } for (D d :t) { dut(ds); }  }", "n_tokens": 84, "n_pass": [776, 95, 66]}
{"time": "2021-02-22 17:35:27.546952", "score": "0.3311", "loss": "1.4594", "code": "d main(i[]args){for(F f:f){(d);}for(p p :r) { g(gp); } for (D d :t) { dut(ds); }  }", "n_tokens": 83, "n_pass": [779, 96, 67]}
{"time": "2021-02-22 17:35:30.176029", "score": "0.3311", "loss": "1.4594", "code": "d main(i[]args){for(F f:f){(d);}for(p p:r) { g(gp); } for (D d :t) { dut(ds); }  }", "n_tokens": 82, "n_pass": [781, 97, 68]}
{"time": "2021-02-22 17:35:32.808423", "score": "0.3311", "loss": "1.4594", "code": "d main(i[]args){for(F f:f){(d);}for(p p:r){ g(gp); } for (D d :t) { dut(ds); }  }", "n_tokens": 81, "n_pass": [785, 98, 69]}
{"time": "2021-02-22 17:35:35.435174", "score": "0.3311", "loss": "1.4594", "code": "d main(i[]args){for(F f:f){(d);}for(p p:r){g(gp); } for (D d :t) { dut(ds); }  }", "n_tokens": 80, "n_pass": [787, 99, 70]}
{"time": "2021-02-22 17:35:40.690466", "score": "0.3646", "loss": "1.381", "code": "d main(i[]args){for(F f:f){(d);}for(p p:r){g(p); } for (D d :t) { dut(ds); }  }", "n_tokens": 79, "n_pass": [790, 101, 71]}
{"time": "2021-02-22 17:35:45.975421", "score": "0.3646", "loss": "1.381", "code": "d main(i[]args){for(F f:f){(d);}for(p p:r){g(p);} for (D d :t) { dut(ds); }  }", "n_tokens": 78, "n_pass": [794, 103, 72]}
{"time": "2021-02-22 17:35:48.611122", "score": "0.3646", "loss": "1.381", "code": "d main(i[]args){for(F f:f){(d);}for(p p:r){g(p);}for (D d :t) { dut(ds); }  }", "n_tokens": 77, "n_pass": [796, 104, 73]}
{"time": "2021-02-22 17:35:51.261411", "score": "0.3646", "loss": "1.381", "code": "d main(i[]args){for(F f:f){(d);}for(p p:r){g(p);}for(D d :t) { dut(ds); }  }", "n_tokens": 76, "n_pass": [800, 105, 74]}
{"time": "2021-02-22 17:35:53.893184", "score": "0.3646", "loss": "1.381", "code": "d main(i[]args){for(F f:f){(d);}for(p p:r){g(p);}for(D d:t) { dut(ds); }  }", "n_tokens": 75, "n_pass": [805, 106, 75]}
{"time": "2021-02-22 17:35:56.524712", "score": "0.3646", "loss": "1.381", "code": "d main(i[]args){for(F f:f){(d);}for(p p:r){g(p);}for(D d:t){ dut(ds); }  }", "n_tokens": 74, "n_pass": [809, 107, 76]}
{"time": "2021-02-22 17:35:59.141190", "score": "0.3646", "loss": "1.381", "code": "d main(i[]args){for(F f:f){(d);}for(p p:r){g(p);}for(D d:t){dut(ds); }  }", "n_tokens": 73, "n_pass": [811, 108, 77]}
{"time": "2021-02-22 17:36:01.758322", "score": "0.1557", "loss": "2.0832", "code": "d main(i[]args){for(F f:f){(d);}for(p p:r){g(p);}for(D d:t){ut(ds); }  }", "n_tokens": 72, "n_pass": [812, 109, 78]}
{"time": "2021-02-22 17:36:14.915814", "score": "0.1557", "loss": "2.0832", "code": "d main(i[]args){for(F f:f){(d);}for(p p:r){g(p);}for(D d:t){ut(ds);}  }", "n_tokens": 71, "n_pass": [820, 114, 79]}
{"time": "2021-02-22 17:36:17.529537", "score": "0.1557", "loss": "2.0832", "code": "d main(i[]args){for(F f:f){(d);}for(p p:r){g(p);}for(D d:t){ut(ds);} }", "n_tokens": 70, "n_pass": [822, 115, 80]}
{"time": "2021-02-22 17:36:20.180995", "score": "0.1557", "loss": "2.0832", "code": "d main(i[]args){for(F f:f){(d);}for(p p:r){g(p);}for(D d:t){ut(ds);}}", "n_tokens": 69, "n_pass": [823, 116, 81]}

Minimal simplified code:
d main(i[]args){for(F f:f){(d);}for(p p:r){g(p);}for(D d:t){ut(ds);}}

