
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/diffplug__spotless/lib/src/main/java/com/diffplug/spotless/LazyForwardingEquality_equals.java
method_name = equals
method_body = @Override public final boolean equals(Object other) { if (other == null) { return false; } else if (getClass().equals(other.getClass())) { LazyForwardingEquality<?> otherCast = (LazyForwardingEquality<?>) other; return Arrays.equals(otherCast.toBytes(), toBytes()); } else { return false; } }
predict, score, loss = equals, 0.9994136095046997, 0.0009866851614788175

Trace of simplified code(s):
{"time": "2021-02-22 05:36:48.931490", "score": "0.9994", "loss": "0.001", "code": "@Override public final boolean equals(Object other) { if (other == null) { return false; } else if (getClass().equals(other.getClass())) { LazyForwardingEquality<?> otherCast = (LazyForwardingEquality<?>) other; return Arrays.equals(otherCast.toBytes(), toBytes()); } else { return false; } }", "n_tokens": 292, "n_pass": [1, 1, 1]}
{"time": "2021-02-22 05:36:51.613461", "score": "0.9837", "loss": "0.0524", "code": "@Override public final boolean equals(Object other) { if (other == null) { return false; } else if (getClass().equals(other.getClass())) { LazyForArrays.equals(otherCast.toBytes(), toBytes()); } else { return false; } }", "n_tokens": 219, "n_pass": [10, 2, 2]}
{"time": "2021-02-22 05:36:55.049457", "score": "0.9722", "loss": "0.0502", "code": "@Override public final boolean equals(Object other) { if (other == null) { return false; } else if (getClass().equals(other.getClass())) { LazyForArrays.equals(ottoBytes()); } else { return false; } }", "n_tokens": 200, "n_pass": [38, 3, 3]}
{"time": "2021-02-22 05:36:58.152816", "score": "0.9126", "loss": "0.1942", "code": "@Override public final boolean equals(Object other) { if (other == null) { return false; } else if (getClass().equals(other.getClass())) { LazyForArrays.equals(ot); } else { return false; } }", "n_tokens": 191, "n_pass": [72, 4, 4]}
{"time": "2021-02-22 05:37:00.836583", "score": "0.6017", "loss": "0.9696", "code": " public final boolean equals(Object other) { if (other == null) { return false; } else if (getClass().equals(other.getClass())) { LazyForArrays.equals(ot); } else { return false; } }", "n_tokens": 182, "n_pass": [76, 5, 5]}
{"time": "2021-02-22 05:37:03.456076", "score": "0.4578", "loss": "1.6379", "code": " public fean equals(Object other) { if (other == null) { return false; } else if (getClass().equals(other.getClass())) { LazyForArrays.equals(ot); } else { return false; } }", "n_tokens": 173, "n_pass": [78, 6, 6]}
{"time": "2021-02-22 05:37:09.128818", "score": "0.5049", "loss": "1.5205", "code": " public fean equals(Object other) { if (other == null) { return false; } else if (getClass().equals(other.getClass())) { LazyFequals(ot); } else { return false; } }", "n_tokens": 164, "n_pass": [92, 8, 7]}
{"time": "2021-02-22 05:37:11.747492", "score": "0.5266", "loss": "1.3666", "code": "ean equals(Object other) { if (other == null) { return false; } else if (getClass().equals(other.getClass())) { LazyFequals(ot); } else { return false; } }", "n_tokens": 155, "n_pass": [97, 9, 8]}
{"time": "2021-02-22 05:37:20.786394", "score": "0.514", "loss": "1.5412", "code": "ean equals(Object other) { if (o == null) { return false; } else if (getClass().equals(other.getClass())) { LazyFequals(ot); } else { return false; } }", "n_tokens": 151, "n_pass": [157, 12, 9]}
{"time": "2021-02-22 05:37:23.445637", "score": "0.1836", "loss": "3.4135", "code": "ean equals(Object other) { if (onull) { return false; } else if (getClass().equals(other.getClass())) { LazyFequals(ot); } else { return false; } }", "n_tokens": 147, "n_pass": [158, 13, 10]}
{"time": "2021-02-22 05:37:26.055404", "score": "0.5709", "loss": "1.4404", "code": "ean equals(Object other) { if (o) { return false; } else if (getClass().equals(other.getClass())) { LazyFequals(ot); } else { return false; } }", "n_tokens": 143, "n_pass": [159, 14, 11]}
{"time": "2021-02-22 05:37:28.657285", "score": "0.7261", "loss": "0.793", "code": "ean equals(Object other) { if (o) { retualse; } else if (getClass().equals(other.getClass())) { LazyFequals(ot); } else { return false; } }", "n_tokens": 139, "n_pass": [162, 15, 12]}
{"time": "2021-02-22 05:37:31.302149", "score": "0.7261", "loss": "0.793", "code": "ean equals(Object other) { if (o) { retu; } else if (getClass().equals(other.getClass())) { LazyFequals(ot); } else { return false; } }", "n_tokens": 135, "n_pass": [163, 16, 13]}
{"time": "2021-02-22 05:37:33.925751", "score": "0.6443", "loss": "1.328", "code": "ean equals(Object other) { if (o) { retu; } else if (ges().equals(other.getClass())) { LazyFequals(ot); } else { return false; } }", "n_tokens": 130, "n_pass": [167, 17, 14]}
{"time": "2021-02-22 05:37:39.116892", "score": "0.5971", "loss": "1.5231", "code": "ean equals(Object other) { if (o) { retu; } else if (ges().e(other.getClass())) { LazyFequals(ot); } else { return false; } }", "n_tokens": 125, "n_pass": [169, 19, 15]}
{"time": "2021-02-22 05:37:41.720532", "score": "0.322", "loss": "3.0258", "code": "ean equals(Object other) { if (o) { retu; } else if (ges().e(otheClass())) { LazyFequals(ot); } else { return false; } }", "n_tokens": 120, "n_pass": [171, 20, 16]}
{"time": "2021-02-22 05:37:46.989393", "score": "0.322", "loss": "3.0258", "code": "ean equals(Object other) { if (o) { retu; } else if (ges().e(otheClass())) { Lazals(ot); } else { return false; } }", "n_tokens": 115, "n_pass": [175, 22, 17]}
{"time": "2021-02-22 05:38:00.821818", "score": "0.3217", "loss": "3.0041", "code": "ean equals(Object other) { if (o) { ; } else if (ges().e(otheClass())) { Lazals(ot); } else { return false; } }", "n_tokens": 111, "n_pass": [192, 27, 18]}
{"time": "2021-02-22 05:38:20.231034", "score": "0.3217", "loss": "3.0041", "code": "ean equals(Object other) { if (o) { } else if (ges().e(otheClass())) { Lazals(ot); } else { return false; } }", "n_tokens": 109, "n_pass": [265, 34, 19]}
{"time": "2021-02-22 05:38:22.861543", "score": "0.4073", "loss": "2.4004", "code": "ean equals(Object other) { if (o) { } else if (g().e(otheClass())) { Lazals(ot); } else { return false; } }", "n_tokens": 107, "n_pass": [272, 35, 20]}
{"time": "2021-02-22 05:38:25.464890", "score": "0.4625", "loss": "2.0963", "code": "ean equals(Object other) { if (o) { } else if (g.e(otheClass())) { Lazals(ot); } else { return false; } }", "n_tokens": 105, "n_pass": [273, 36, 21]}
{"time": "2021-02-22 05:38:28.067625", "score": "0.546", "loss": "1.7095", "code": "ean equals(Object other) { if (o) { } else if (g(otheClass())) { Lazals(ot); } else { return false; } }", "n_tokens": 103, "n_pass": [274, 37, 22]}
{"time": "2021-02-22 05:38:30.668874", "score": "0.546", "loss": "1.7095", "code": "ean equals(Object other) { if (o) { } else if (g(oeClass())) { Lazals(ot); } else { return false; } }", "n_tokens": 101, "n_pass": [276, 38, 23]}
{"time": "2021-02-22 05:38:33.269607", "score": "0.546", "loss": "1.7095", "code": "ean equals(Object other) { if (o) { } else if (g(olass())) { Lazals(ot); } else { return false; } }", "n_tokens": 99, "n_pass": [277, 39, 24]}
{"time": "2021-02-22 05:38:35.924528", "score": "0.475", "loss": "2.0235", "code": "ean equals(Object other) { if (o) { } else if (g(oss())) { Lazals(ot); } else { return false; } }", "n_tokens": 97, "n_pass": [278, 40, 25]}
{"time": "2021-02-22 05:38:38.529715", "score": "0.5829", "loss": "1.4995", "code": "ean equals(Object other) { if (o) { } else if (g(o())) { Lazals(ot); } else { return false; } }", "n_tokens": 95, "n_pass": [279, 41, 26]}
{"time": "2021-02-22 05:38:41.154928", "score": "0.5829", "loss": "1.4995", "code": "ean equals(Object other) { if (o) { } else if (g(o())) {zals(ot); } else { return false; } }", "n_tokens": 92, "n_pass": [282, 42, 27]}
{"time": "2021-02-22 05:38:43.760797", "score": "0.6223", "loss": "1.3148", "code": "ean equals(Object other) { if (o) { } else if (g(o())) {s(ot); } else { return false; } }", "n_tokens": 89, "n_pass": [283, 43, 28]}
{"time": "2021-02-22 05:38:55.733544", "score": "0.1658", "loss": "3.297", "code": "ean equals(Oect other) { if (o) { } else if (g(o())) {s(ot); } else { return false; } }", "n_tokens": 87, "n_pass": [301, 47, 29]}
{"time": "2021-02-22 05:39:41.420836", "score": "0.1658", "loss": "3.297", "code": "ean equals(Oect other){ if (o) { } else if (g(o())) {s(ot); } else { return false; } }", "n_tokens": 86, "n_pass": [423, 62, 30]}
{"time": "2021-02-22 05:39:44.016101", "score": "0.1658", "loss": "3.297", "code": "ean equals(Oect other){if (o) { } else if (g(o())) {s(ot); } else { return false; } }", "n_tokens": 85, "n_pass": [424, 63, 31]}
{"time": "2021-02-22 05:39:46.616745", "score": "0.1658", "loss": "3.297", "code": "ean equals(Oect other){if(o) { } else if (g(o())) {s(ot); } else { return false; } }", "n_tokens": 84, "n_pass": [427, 64, 32]}
{"time": "2021-02-22 05:39:49.231865", "score": "0.1658", "loss": "3.297", "code": "ean equals(Oect other){if(o){ } else if (g(o())) {s(ot); } else { return false; } }", "n_tokens": 83, "n_pass": [431, 65, 33]}
{"time": "2021-02-22 05:39:51.832876", "score": "0.1658", "loss": "3.297", "code": "ean equals(Oect other){if(o){} else if (g(o())) {s(ot); } else { return false; } }", "n_tokens": 82, "n_pass": [433, 66, 34]}
{"time": "2021-02-22 05:39:54.443562", "score": "0.1658", "loss": "3.297", "code": "ean equals(Oect other){if(o){}else if (g(o())) {s(ot); } else { return false; } }", "n_tokens": 81, "n_pass": [435, 67, 35]}
{"time": "2021-02-22 05:39:57.049647", "score": "0.1658", "loss": "3.297", "code": "ean equals(Oect other){if(o){}else if(g(o())) {s(ot); } else { return false; } }", "n_tokens": 80, "n_pass": [443, 68, 36]}
{"time": "2021-02-22 05:40:02.249754", "score": "0.1658", "loss": "3.297", "code": "ean equals(Oect other){if(o){}else if(g(o())){s(ot); } else { return false; } }", "n_tokens": 79, "n_pass": [452, 70, 37]}
{"time": "2021-02-22 05:40:12.655765", "score": "0.1658", "loss": "3.297", "code": "ean equals(Oect other){if(o){}else if(g(o())){s(ot);} else { return false; } }", "n_tokens": 78, "n_pass": [460, 74, 38]}
{"time": "2021-02-22 05:40:23.073986", "score": "0.279", "loss": "2.4909", "code": "an equals(Oect other){if(o){}else if(g(o())){s(ot);} else { return false; } }", "n_tokens": 77, "n_pass": [474, 78, 39]}
{"time": "2021-02-22 05:40:41.460345", "score": "0.193", "loss": "3.0665", "code": "an equals(Oec other){if(o){}else if(g(o())){s(ot);} else { return false; } }", "n_tokens": 76, "n_pass": [488, 84, 40]}
{"time": "2021-02-22 05:40:59.802807", "score": "0.212", "loss": "2.8351", "code": "an equals(Oec other){if(o){}else if(g(o())){(ot);} else { return false; } }", "n_tokens": 75, "n_pass": [520, 91, 41]}
{"time": "2021-02-22 05:41:02.397615", "score": "0.2053", "loss": "2.7694", "code": "an equals(Oec other){if(o){}else if(g(o())){(t);} else { return false; } }", "n_tokens": 74, "n_pass": [522, 92, 42]}
{"time": "2021-02-22 05:41:20.813419", "score": "0.3141", "loss": "1.9839", "code": "an equals(ec other){if(o){}else if(g(o())){(t);} else { return false; } }", "n_tokens": 73, "n_pass": [549, 98, 43]}
{"time": "2021-02-22 05:41:23.413347", "score": "0.4257", "loss": "1.3744", "code": "an equals(c other){if(o){}else if(g(o())){(t);} else { return false; } }", "n_tokens": 72, "n_pass": [550, 99, 44]}
{"time": "2021-02-22 05:41:39.048817", "score": "0.3752", "loss": "1.499", "code": "an equals(c other){if(o){}else if((o())){(t);} else { return false; } }", "n_tokens": 71, "n_pass": [575, 105, 45]}
{"time": "2021-02-22 05:41:52.080941", "score": "0.2263", "loss": "2.2085", "code": "a equals(c other){if(o){}else if((o())){(t);} else { return false; } }", "n_tokens": 70, "n_pass": [601, 110, 46]}
{"time": "2021-02-22 05:42:21.077303", "score": "0.2263", "loss": "2.2085", "code": "a equals(c other){if(o){}else if((o())){(t);}else { return false; } }", "n_tokens": 69, "n_pass": [686, 119, 47]}
{"time": "2021-02-22 05:42:23.671076", "score": "0.2263", "loss": "2.2085", "code": "a equals(c other){if(o){}else if((o())){(t);}else{ return false; } }", "n_tokens": 68, "n_pass": [691, 120, 48]}
{"time": "2021-02-22 05:42:26.266679", "score": "0.2263", "loss": "2.2085", "code": "a equals(c other){if(o){}else if((o())){(t);}else{return false; } }", "n_tokens": 67, "n_pass": [693, 121, 49]}
{"time": "2021-02-22 05:42:28.864731", "score": "0.254", "loss": "2.0339", "code": "a equals(c other){if(o){}else if((o())){(t);}else{returnfalse; } }", "n_tokens": 66, "n_pass": [700, 122, 50]}
{"time": "2021-02-22 05:42:44.435857", "score": "0.254", "loss": "2.0339", "code": "a equals(c other){if(o){}else if((o())){(t);}else{returnfalse;} }", "n_tokens": 65, "n_pass": [707, 128, 51]}
{"time": "2021-02-22 05:42:47.077408", "score": "0.254", "loss": "2.0339", "code": "a equals(c other){if(o){}else if((o())){(t);}else{returnfalse;}}", "n_tokens": 64, "n_pass": [709, 129, 52]}

Minimal simplified code:
a equals(c other){if(o){}else if((o())){(t);}else{returnfalse;}}

