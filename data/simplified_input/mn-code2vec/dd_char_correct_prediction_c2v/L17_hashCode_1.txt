
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/ivacf__archi/app-mvvm/src/main/java/uk/ivanc/archimvvm/model/Repository_hashCode.java
method_name = hashCode
method_body = @Override public int hashCode() { int result = (int) (id ^ (id >>> 32)); result = 31 * result + (name != null ? name.hashCode() : 0); result = 31 * result + (description != null ? description.hashCode() : 0); result = 31 * result + forks; result = 31 * result + watchers; result = 31 * result + stars; result = 31 * result + (language != null ? language.hashCode() : 0); result = 31 * result + (homepage != null ? homepage.hashCode() : 0); result = 31 * result + (owner != null ? owner.hashCode() : 0); result = 31 * result + (fork ? 1 : 0); return result; }
predict, score, loss = hashCode, 0.9998626708984375, 0.00016366096679121256

Trace of simplified code(s):
{"time": "2021-02-21 17:21:53.005015", "score": "0.9999", "loss": "0.0001", "code": "@Override public int hashCode() { int result = (int) (id ^ (id >>> 32)); result = 31 * result + (name != null ? name.hashCode() : 0); result = 31 * result + (description != null ? description.hashCode() : 0); result = 31 * result + forks; result = 31 * result + watchers; result = 31 * result + stars; result = 31 * result + (language != null ? language.hashCode() : 0); result = 31 * result + (homepage != null ? homepage.hashCode() : 0); result = 31 * result + (owner != null ? owner.hashCode() : 0); result = 31 * result + (fork ? 1 : 0); return result; }", "n_tokens": 558, "n_pass": [1, 1, 1]}
{"time": "2021-02-21 17:21:55.683248", "score": "0.9998", "loss": "0.0003", "code": "@Override public int hashCode() { int result = (int) (id ^ (id >>> 32)); result = 31 * result + (name != null ? name.hashCode() : 0); resul = 31 * result + stars; result = 31 * result + (language != null ? language.hashCode() : 0); result = 31 * result + (homepage != null ? homepage.hashCode() : 0); result = 31 * result + (owner != null ? owner.hashCode() : 0); result = 31 * result + (fork ? 1 : 0); return result; }", "n_tokens": 419, "n_pass": [9, 2, 2]}
{"time": "2021-02-21 17:21:58.335862", "score": "0.9994", "loss": "0.0008", "code": "@Override public int hashCode() { int result = (int) (id ^ (id >>> 32)); result = 31 * result + (name != null ? name.hashCode() : 0); resul = 31 * result + stars; result = 31 * result + (language != null ? lanpage.hashCode() : 0); result = 31 * result + (owner != null ? owner.hashCode() : 0); result = 31 * result + (fork ? 1 : 0); return result; }", "n_tokens": 349, "n_pass": [20, 3, 3]}
{"time": "2021-02-21 17:22:00.996312", "score": "0.9985", "loss": "0.0028", "code": "@Override public int hashCode() { int result = (int) (id ^ (id >>> 32)); result = 31 * result + (name != null ? name.hashCode() : 0); resul = 31 * result + stars; result = 31 * result + (language != null ? lanshCode() : 0); result = 31 * result + (fork ? 1 : 0); return result; }", "n_tokens": 279, "n_pass": [21, 4, 4]}
{"time": "2021-02-21 17:22:04.437522", "score": "0.9957", "loss": "0.0095", "code": "@Override public int hashCode() { int result = (int) (id ^ (id >>> 32)); result = 31 * result + (name != null ? name.hashCode() : 0); resul = 31 * result + stars; result = 31 * result + (language != null ? lanshCode() : 0); result = 31 * resul; return result; }", "n_tokens": 261, "n_pass": [60, 5, 5]}
{"time": "2021-02-21 17:22:07.075517", "score": "0.7851", "loss": "0.6063", "code": "int hashCode() { int result = (int) (id ^ (id >>> 32)); result = 31 * result + (name != null ? name.hashCode() : 0); resul = 31 * result + stars; result = 31 * result + (language != null ? lanshCode() : 0); result = 31 * resul; return result; }", "n_tokens": 244, "n_pass": [62, 6, 6]}
{"time": "2021-02-21 17:22:10.144990", "score": "0.8367", "loss": "0.3957", "code": "int hashCode() { int result = (int) (id ^ (id >>> 32)); result = 31 * result + (name != null ? name.hashCode() : 0); resul = 31 * result + stars; result = 31 * result + (language != null ? lanshCode() : 0); r; return result; }", "n_tokens": 226, "n_pass": [75, 7, 7]}
{"time": "2021-02-21 17:22:13.174639", "score": "0.8554", "loss": "0.3486", "code": "int hashCode() { int result = (int) (id ^ (id >>> 32)); result = 31 * result + (name != null ? name.hashCode() : 0); resul = 31 * result + stars; result = 31 * result + (language != null ? lanshCode() : 0); rresult; }", "n_tokens": 217, "n_pass": [115, 8, 8]}
{"time": "2021-02-21 17:22:16.230459", "score": "0.7582", "loss": "0.6722", "code": "int hashCode() {ult = (int) (id ^ (id >>> 32)); result = 31 * result + (name != null ? name.hashCode() : 0); resul = 31 * result + stars; result = 31 * result + (language != null ? lanshCode() : 0); rresult; }", "n_tokens": 209, "n_pass": [118, 9, 9]}
{"time": "2021-02-21 17:22:18.847756", "score": "0.752", "loss": "0.7359", "code": "int hashCode() {ult = (i^ (id >>> 32)); result = 31 * result + (name != null ? name.hashCode() : 0); resul = 31 * result + stars; result = 31 * result + (language != null ? lanshCode() : 0); rresult; }", "n_tokens": 201, "n_pass": [120, 10, 10]}
{"time": "2021-02-21 17:22:21.960596", "score": "0.9264", "loss": "0.2306", "code": "int hashCode() {ult = (i^ (id >>> 32)); result =ult + (name != null ? name.hashCode() : 0); resul = 31 * result + stars; result = 31 * result + (language != null ? lanshCode() : 0); rresult; }", "n_tokens": 192, "n_pass": [124, 11, 11]}
{"time": "2021-02-21 17:22:24.600711", "score": "0.9937", "loss": "0.0191", "code": "int hashCode() {ult = (i^ (id >>> 32)); result =ult + (nal ? name.hashCode() : 0); resul = 31 * result + stars; result = 31 * result + (language != null ? lanshCode() : 0); rresult; }", "n_tokens": 183, "n_pass": [126, 12, 12]}
{"time": "2021-02-21 17:22:27.621688", "score": "0.9976", "loss": "0.0091", "code": "int hashCode() {ult = (i^ (id >>> 32)); result =ult + (nal ? name.hashCode() : 0); resul = 31 + stars; result = 31 * result + (language != null ? lanshCode() : 0); rresult; }", "n_tokens": 174, "n_pass": [131, 13, 13]}
{"time": "2021-02-21 17:22:30.610072", "score": "0.9983", "loss": "0.0101", "code": "int hashCode() {ult = (i^ (id >>> 32)); result =ult + (nal ? name.hashCode() : 0); resul = 31 + stars; result =ult + (language != null ? lanshCode() : 0); rresult; }", "n_tokens": 165, "n_pass": [134, 14, 14]}
{"time": "2021-02-21 17:22:34.796205", "score": "0.9984", "loss": "0.0097", "code": "int hashCode() {ult = (i^ (id >>> 32)); result =ult + (nal ? name.hashCode() : 0); resul = 31 + stars; re=ult + (language != null ? lanshCode() : 0); rresult; }", "n_tokens": 160, "n_pass": [192, 15, 15]}
{"time": "2021-02-21 17:22:37.782973", "score": "0.9981", "loss": "0.012", "code": "int hashCode() {ult = (i^ (id >>> 32)); result =ult + (nal ? name.hashCode() : 0); resul = 31 + stars; re=ult + (lae != null ? lanshCode() : 0); rresult; }", "n_tokens": 155, "n_pass": [195, 16, 16]}
{"time": "2021-02-21 17:22:40.393073", "score": "0.999", "loss": "0.0052", "code": "int hashCode() {ult = (i^ (id >>> 32)); result =ult + (nal ? name.hashCode() : 0); resul = 31 + stars; re=ult + (lanull ? lanshCode() : 0); rresult; }", "n_tokens": 150, "n_pass": [196, 17, 17]}
{"time": "2021-02-21 17:22:43.023747", "score": "0.999", "loss": "0.0052", "code": "int hashCode() {ult = (i^ (id >>> 32)); result =ult + (nal ? name.hashCode() : 0); resul = 31 + stars; re=ult + (la? lanshCode() : 0); rresult; }", "n_tokens": 145, "n_pass": [197, 18, 18]}
{"time": "2021-02-21 17:22:45.639593", "score": "0.999", "loss": "0.0053", "code": "int hashCode() {ult = (i^ (id >>> 32)); result =ult + (nal ? name.hashCode() : 0); resul = 31 + stars; re=ult + (la? lane() : 0); rresult; }", "n_tokens": 140, "n_pass": [199, 19, 19]}
{"time": "2021-02-21 17:22:48.250312", "score": "0.999", "loss": "0.0054", "code": "int hashCode() {ult = (i^ (id >>> 32)); result =ult + (nal ? name.hashCode() : 0); resul = 31 + stars; re=ult + (la? lane() : 0); lt; }", "n_tokens": 135, "n_pass": [202, 20, 20]}
{"time": "2021-02-21 17:22:52.053899", "score": "0.9984", "loss": "0.0078", "code": "int hashCode() {ult = (i^ (i> 32)); result =ult + (nal ? name.hashCode() : 0); resul = 31 + stars; re=ult + (la? lane() : 0); lt; }", "n_tokens": 131, "n_pass": [211, 21, 21]}
{"time": "2021-02-21 17:22:54.674255", "score": "0.9984", "loss": "0.0078", "code": "int hashCode() {ult = (i^ (i)); result =ult + (nal ? name.hashCode() : 0); resul = 31 + stars; re=ult + (la? lane() : 0); lt; }", "n_tokens": 127, "n_pass": [212, 22, 22]}
{"time": "2021-02-21 17:22:57.306585", "score": "0.9968", "loss": "0.0131", "code": "int hashCode() {ult = (i^ (i)); lt =ult + (nal ? name.hashCode() : 0); resul = 31 + stars; re=ult + (la? lane() : 0); lt; }", "n_tokens": 123, "n_pass": [214, 23, 23]}
{"time": "2021-02-21 17:23:00.289801", "score": "0.8405", "loss": "0.9723", "code": "int hashCode() {ult = (i^ (i)); lt =+ (nal ? name.hashCode() : 0); resul = 31 + stars; re=ult + (la? lane() : 0); lt; }", "n_tokens": 119, "n_pass": [216, 24, 24]}
{"time": "2021-02-21 17:23:02.895819", "score": "0.8348", "loss": "0.9691", "code": "int hashCode() {ult = (i^ (i)); lt =+ (nal ?e.hashCode() : 0); resul = 31 + stars; re=ult + (la? lane() : 0); lt; }", "n_tokens": 115, "n_pass": [219, 25, 25]}
{"time": "2021-02-21 17:23:05.504567", "score": "0.744", "loss": "1.3349", "code": "int hashCode() {ult = (i^ (i)); lt =+ (nal ?shCode() : 0); resul = 31 + stars; re=ult + (la? lane() : 0); lt; }", "n_tokens": 111, "n_pass": [220, 26, 26]}
{"time": "2021-02-21 17:23:08.121762", "score": "0.7428", "loss": "1.3318", "code": "int hashCode() {ult = (i^ (i)); lt =+ (nal ?de() : 0); resul = 31 + stars; re=ult + (la? lane() : 0); lt; }", "n_tokens": 107, "n_pass": [221, 27, 27]}
{"time": "2021-02-21 17:23:10.752363", "score": "0.957", "loss": "0.2428", "code": "int hashCode() {ult = (i^ (i)); lt =+ (nal ?de() : 0); r = 31 + stars; re=ult + (la? lane() : 0); lt; }", "n_tokens": 103, "n_pass": [225, 28, 28]}
{"time": "2021-02-21 17:23:13.735353", "score": "0.9109", "loss": "0.2484", "code": "int hashCode() {ult = (i^ (i)); lt =+ (nal ?de() : 0); r = 31 + s; re=ult + (la? lane() : 0); lt; }", "n_tokens": 99, "n_pass": [228, 29, 29]}
{"time": "2021-02-21 17:23:19.493366", "score": "0.8319", "loss": "0.5333", "code": "int hashCode() {ult = (i^ (i)); lt =+ (nal ?de() : 0); r = 31 + s;e=ult + (la? lane() : 0); lt; }", "n_tokens": 97, "n_pass": [299, 30, 30]}
{"time": "2021-02-21 17:23:22.506162", "score": "0.8842", "loss": "0.3303", "code": "int hashCode() {ult = (i^ (i)); lt =+ (nal ?de() : 0); r = 31 + s;e=t + (la? lane() : 0); lt; }", "n_tokens": 95, "n_pass": [301, 31, 31]}
{"time": "2021-02-21 17:23:30.358749", "score": "0.8779", "loss": "0.3394", "code": "int hashCode() {ult = (i^ (i)); lt =+ (nal ?de() : 0); r = 31 + s;e=t + (la? e() : 0); lt; }", "n_tokens": 92, "n_pass": [306, 34, 32]}
{"time": "2021-02-21 17:23:32.979260", "score": "0.8864", "loss": "0.3133", "code": "int hashCode() {ult = (i^ (i)); lt =+ (nal ?de() : 0); r = 31 + s;e=t + (la? e() : 0);; }", "n_tokens": 89, "n_pass": [310, 35, 33]}
{"time": "2021-02-21 17:23:40.192190", "score": "0.9545", "loss": "0.1336", "code": "int hashCode() {t = (i^ (i)); lt =+ (nal ?de() : 0); r = 31 + s;e=t + (la? e() : 0);; }", "n_tokens": 87, "n_pass": [320, 37, 34]}
{"time": "2021-02-21 17:23:42.798774", "score": "0.9579", "loss": "0.126", "code": "int hashCode() {t (i^ (i)); lt =+ (nal ?de() : 0); r = 31 + s;e=t + (la? e() : 0);; }", "n_tokens": 85, "n_pass": [322, 38, 35]}
{"time": "2021-02-21 17:23:45.428136", "score": "0.9289", "loss": "0.2034", "code": "int hashCode() {t (i(i)); lt =+ (nal ?de() : 0); r = 31 + s;e=t + (la? e() : 0);; }", "n_tokens": 83, "n_pass": [324, 39, 36]}
{"time": "2021-02-21 17:23:48.423975", "score": "0.9858", "loss": "0.0224", "code": "int hashCode() {t (i(i)); lt =(nal ?de() : 0); r = 31 + s;e=t + (la? e() : 0);; }", "n_tokens": 81, "n_pass": [330, 40, 37]}
{"time": "2021-02-21 17:23:51.035949", "score": "0.9843", "loss": "0.0248", "code": "int hashCode() {t (i(i)); lt =(n ?de() : 0); r = 31 + s;e=t + (la? e() : 0);; }", "n_tokens": 79, "n_pass": [332, 41, 38]}
{"time": "2021-02-21 17:23:53.644531", "score": "0.9834", "loss": "0.0268", "code": "int hashCode() {t (i(i)); lt =(n ?de : 0); r = 31 + s;e=t + (la? e() : 0);; }", "n_tokens": 77, "n_pass": [335, 42, 39]}
{"time": "2021-02-21 17:23:56.262729", "score": "0.977", "loss": "0.0327", "code": "int hashCode() {t (i(i)); lt =(n ?de : 0); r =1 + s;e=t + (la? e() : 0);; }", "n_tokens": 75, "n_pass": [341, 43, 40]}
{"time": "2021-02-21 17:23:58.902192", "score": "0.985", "loss": "0.0202", "code": "int hashCode() {t (i(i)); lt =(n ?de : 0); r =+ s;e=t + (la? e() : 0);; }", "n_tokens": 73, "n_pass": [342, 44, 41]}
{"time": "2021-02-21 17:24:01.544442", "score": "0.9831", "loss": "0.023", "code": "int hashCode() {t (i(i)); lt =(n ?de : 0); r =s;e=t + (la? e() : 0);; }", "n_tokens": 71, "n_pass": [343, 45, 42]}
{"time": "2021-02-21 17:24:04.156318", "score": "0.9423", "loss": "0.0729", "code": "int hashCode() {t (i(i)); lt =(n ?de : 0); r =e=t + (la? e() : 0);; }", "n_tokens": 69, "n_pass": [344, 46, 43]}
{"time": "2021-02-21 17:24:06.774950", "score": "0.9873", "loss": "0.0168", "code": "int hashCode() {t (i(i)); lt =(n ?de : 0); r =t + (la? e() : 0);; }", "n_tokens": 67, "n_pass": [345, 47, 44]}
{"time": "2021-02-21 17:24:09.374636", "score": "0.9506", "loss": "0.0614", "code": "int hashCode() {t (i(i)); lt =(n ?de : 0); r =+ (la? e() : 0);; }", "n_tokens": 65, "n_pass": [346, 48, 45]}
{"time": "2021-02-21 17:24:11.981647", "score": "0.9696", "loss": "0.0362", "code": "int hashCode() {t (i(i)); lt =(n ?de : 0); r =(la? e() : 0);; }", "n_tokens": 63, "n_pass": [347, 49, 46]}
{"time": "2021-02-21 17:24:19.186298", "score": "0.9733", "loss": "0.0315", "code": "int hashCode() {(i(i)); lt =(n ?de : 0); r =(la? e() : 0);; }", "n_tokens": 61, "n_pass": [362, 51, 47]}
{"time": "2021-02-21 17:24:21.812945", "score": "0.8186", "loss": "0.2445", "code": "int hashCode() {(i(i)); lt(n ?de : 0); r =(la? e() : 0);; }", "n_tokens": 59, "n_pass": [368, 52, 48]}
{"time": "2021-02-21 17:24:31.600319", "score": "0.98", "loss": "0.0235", "code": "int hashCode() {(i(i)); (n ?de : 0); r =(la? e() : 0);; }", "n_tokens": 57, "n_pass": [395, 55, 49]}
{"time": "2021-02-21 17:24:45.845091", "score": "0.98", "loss": "0.0235", "code": "int hashCode() {(i(i)); (n?de : 0); r =(la? e() : 0);; }", "n_tokens": 56, "n_pass": [476, 58, 50]}
{"time": "2021-02-21 17:24:48.461651", "score": "0.9802", "loss": "0.0232", "code": "int hashCode() {(i(i)); (n?e : 0); r =(la? e() : 0);; }", "n_tokens": 55, "n_pass": [477, 59, 51]}
{"time": "2021-02-21 17:24:51.052073", "score": "0.9802", "loss": "0.0232", "code": "int hashCode() {(i(i)); (n?e: 0); r =(la? e() : 0);; }", "n_tokens": 54, "n_pass": [479, 60, 52]}
{"time": "2021-02-21 17:24:53.639820", "score": "0.9802", "loss": "0.0232", "code": "int hashCode() {(i(i)); (n?e:0); r =(la? e() : 0);; }", "n_tokens": 53, "n_pass": [481, 61, 53]}
{"time": "2021-02-21 17:24:56.261332", "score": "0.9802", "loss": "0.0232", "code": "int hashCode() {(i(i)); (n?e:0);r =(la? e() : 0);; }", "n_tokens": 52, "n_pass": [485, 62, 54]}
{"time": "2021-02-21 17:24:58.871177", "score": "0.9802", "loss": "0.0232", "code": "int hashCode() {(i(i)); (n?e:0);r=(la? e() : 0);; }", "n_tokens": 51, "n_pass": [487, 63, 55]}
{"time": "2021-02-21 17:25:04.062988", "score": "0.9787", "loss": "0.0249", "code": "int hashCode() {(i(i)); (n?e:0);r=(a? e() : 0);; }", "n_tokens": 50, "n_pass": [490, 65, 56]}
{"time": "2021-02-21 17:25:06.685756", "score": "0.9787", "loss": "0.0249", "code": "int hashCode() {(i(i)); (n?e:0);r=(a?e() : 0);; }", "n_tokens": 49, "n_pass": [493, 66, 57]}
{"time": "2021-02-21 17:25:20.684790", "score": "0.9787", "loss": "0.0249", "code": "int hashCode(){(i(i)); (n?e:0);r=(a?e() : 0);; }", "n_tokens": 48, "n_pass": [515, 70, 58]}
{"time": "2021-02-21 17:25:23.303349", "score": "0.9788", "loss": "0.0248", "code": "int hashCode(){((i)); (n?e:0);r=(a?e() : 0);; }", "n_tokens": 47, "n_pass": [518, 71, 59]}
{"time": "2021-02-21 17:25:25.923864", "score": "0.9788", "loss": "0.0248", "code": "int hashCode(){((i));(n?e:0);r=(a?e() : 0);; }", "n_tokens": 46, "n_pass": [524, 72, 60]}
{"time": "2021-02-21 17:25:44.395841", "score": "0.9788", "loss": "0.0248", "code": "int hashCode(){((i));(n?e:0);r=(a?e(): 0);; }", "n_tokens": 45, "n_pass": [577, 77, 61]}
{"time": "2021-02-21 17:25:46.987406", "score": "0.9788", "loss": "0.0248", "code": "int hashCode(){((i));(n?e:0);r=(a?e():0);; }", "n_tokens": 44, "n_pass": [579, 78, 62]}
{"time": "2021-02-21 17:25:49.608226", "score": "0.9788", "loss": "0.0248", "code": "int hashCode(){((i));(n?e:0);r=(a?e():0); }", "n_tokens": 43, "n_pass": [582, 79, 63]}
{"time": "2021-02-21 17:25:52.210029", "score": "0.9788", "loss": "0.0248", "code": "int hashCode(){((i));(n?e:0);r=(a?e():0);}", "n_tokens": 42, "n_pass": [584, 80, 64]}

Minimal simplified code:
int hashCode(){((i));(n?e:0);r=(a?e():0);}

