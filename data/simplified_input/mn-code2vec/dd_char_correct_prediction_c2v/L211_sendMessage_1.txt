
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/codefollower__Tomcat-Research/java/org/apache/catalina/tribes/group/interceptors/FragmentationInterceptor_sendMessage.java
method_name = sendMessage
method_body = @Override public void sendMessage(Member[] destination, ChannelMessage msg, InterceptorPayload payload) throws ChannelException { int size = msg.getMessage().getLength(); boolean frag = (size > maxSize) && okToProcess(msg.getOptions()); if (frag) { frag(destination, msg, payload); } else { msg.getMessage().append(frag); super.sendMessage(destination, msg, payload); } }
predict, score, loss = sendMessage, 0.964535117149353, 0.048527028411626816

Trace of simplified code(s):
{"time": "2021-02-22 19:58:30.869732", "score": "0.9748", "loss": "0.0347", "code": "@Override public void sendMessage(Member[] destination, ChannelMessage msg, InterceptorPayload payload) throws ChannelException { int size = msg.getMessage().getLength(); boolean frag = (size > maxSize) && okToProcess(msg.getOptions()); if (frag) { frag(destination, msg, payload); } else { msg.getMessage().append(frag); super.sendMessage(destination, msg, payload); } }", "n_tokens": 371, "n_pass": [1, 1, 1]}
{"time": "2021-02-22 19:58:33.527267", "score": "0.9752", "loss": "0.0341", "code": "@Override public void sendMessage(Member[] destination, ChannelMessage msg, InterceptorPayload payload) throws ChannelException { int size= (size > maxSize) && okToProcess(msg.getOptions()); if (frag) { frag(destination, msg, payload); } else { msg.getMessage().append(frag); super.sendMessage(destination, msg, payload); } }", "n_tokens": 325, "n_pass": [23, 2, 2]}
{"time": "2021-02-22 19:58:36.202169", "score": "0.9755", "loss": "0.0337", "code": "@Override public void sendMessage(Member[] destination, ChannelMessage msg, InterceptorPayload payload) throws ChannelException { int size= (size > maxSize) && okToProcess(msg.getOptions()); if (frag) { frag(destination, msg, payload); } else { msg.getMuper.sendMessage(destination, msg, payload); } }", "n_tokens": 301, "n_pass": [50, 3, 3]}
{"time": "2021-02-22 19:58:39.232432", "score": "0.497", "loss": "0.7536", "code": "@Override public void sendMessage(Member[] destination, ChannelMessagad payload) throws ChannelException { int size= (size > maxSize) && okToProcess(msg.getOptions()); if (frag) { frag(destination, msg, payload); } else { msg.getMuper.sendMessage(destination, msg, payload); } }", "n_tokens": 278, "n_pass": [56, 4, 4]}
{"time": "2021-02-22 19:58:42.286747", "score": "0.3348", "loss": "1.2151", "code": "@Override public void sendMessage(Member[] destination, ChannelMessagad payload) throws ption { int size= (size > maxSize) && okToProcess(msg.getOptions()); if (frag) { frag(destination, msg, payload); } else { msg.getMuper.sendMessage(destination, msg, payload); } }", "n_tokens": 267, "n_pass": [95, 5, 5]}
{"time": "2021-02-22 19:58:53.314408", "score": "0.3348", "loss": "1.2151", "code": "@Override public void sendMessage(Member[] destination,sagad payload) throws ption { int size= (size > maxSize) && okToProcess(msg.getOptions()); if (frag) { frag(destination, msg, payload); } else { msg.getMuper.sendMessage(destination, msg, payload); } }", "n_tokens": 256, "n_pass": [116, 9, 6]}
{"time": "2021-02-22 19:59:04.253056", "score": "0.3304", "loss": "1.2283", "code": "@Override public void sendMessage(Member[] destination,sagad payload) throws ption { int size= (sizeSize) && okToProcess(msg.getOptions()); if (frag) { frag(destination, msg, payload); } else { msg.getMuper.sendMessage(destination, msg, payload); } }", "n_tokens": 250, "n_pass": [191, 13, 7]}
{"time": "2021-02-22 19:59:06.887743", "score": "0.4425", "loss": "0.9863", "code": "@Override public void sendMessage(Member[] destination,sagad payload) throws ption { int size= (sizeSize) oProcess(msg.getOptions()); if (frag) { frag(destination, msg, payload); } else { msg.getMuper.sendMessage(destination, msg, payload); } }", "n_tokens": 244, "n_pass": [192, 14, 8]}
{"time": "2021-02-22 19:59:09.532469", "score": "0.4479", "loss": "0.9804", "code": "@Override public void sendMessage(Member[] destination,sagad payload) throws ption { int size= (sizeSize) ss(msg.getOptions()); if (frag) { frag(destination, msg, payload); } else { msg.getMuper.sendMessage(destination, msg, payload); } }", "n_tokens": 238, "n_pass": [193, 15, 9]}
{"time": "2021-02-22 19:59:12.169001", "score": "0.5078", "loss": "0.7839", "code": "@Override public void sendMessage(Member[] destination,sagad payload) throws ption { int size= (sizeSize) ss(msgtions()); if (frag) { frag(destination, msg, payload); } else { msg.getMuper.sendMessage(destination, msg, payload); } }", "n_tokens": 232, "n_pass": [195, 16, 10]}
{"time": "2021-02-22 19:59:14.835210", "score": "0.4678", "loss": "0.916", "code": "@Override public void sendMessage(Member[] destination,sagad payload) throws ption { int size= (sizeSize) ss(msgtions()); if (frag) { frag(deson, msg, payload); } else { msg.getMuper.sendMessage(destination, msg, payload); } }", "n_tokens": 226, "n_pass": [201, 17, 11]}
{"time": "2021-02-22 19:59:17.465780", "score": "0.4379", "loss": "1.0205", "code": "@Override public void sendMessage(Member[] destination,sagad payload) throws ption { int size= (sizeSize) ss(msgtions()); if (frag) { frag(desg, payload); } else { msg.getMuper.sendMessage(destination, msg, payload); } }", "n_tokens": 220, "n_pass": [202, 18, 12]}
{"time": "2021-02-22 19:59:20.088668", "score": "0.4907", "loss": "0.9104", "code": "@Override public void sendMessage(Member[] destination,sagad payload) throws ption { int size= (sizeSize) ss(msgtions()); if (frag) { frag(desload); } else { msg.getMuper.sendMessage(destination, msg, payload); } }", "n_tokens": 214, "n_pass": [203, 19, 13]}
{"time": "2021-02-22 19:59:22.739468", "score": "0.4779", "loss": "1.071", "code": "@Override public void sendMessage(Member[] destination,sagad payload) throws ption { int size= (sizeSize) ss(msgtions()); if (frag) { frag(desload); } else { msuper.sendMessage(destination, msg, payload); } }", "n_tokens": 208, "n_pass": [207, 20, 14]}
{"time": "2021-02-22 19:59:30.619927", "score": "0.4719", "loss": "1.1844", "code": "@Override public void sendMessage(Member[] destination,sagad payload) throws ption { int size= (sizeSize) ss(msgtions()); if (frag) { frag(desload); } else { msuper.sendMessage(dtion, msg, payload); } }", "n_tokens": 202, "n_pass": [211, 23, 15]}
{"time": "2021-02-22 19:59:35.877708", "score": "0.3045", "loss": "2.4773", "code": "@Override public void sendMessage(Member[] destination,sagad payload) throws ption { int size= (sizeSize) ss(msgtions()); if (frag) { frag(desload); } else { msuper.sendMessage(dtion, ayload); } }", "n_tokens": 196, "n_pass": [213, 25, 16]}
{"time": "2021-02-22 19:59:38.519594", "score": "0.3057", "loss": "2.4891", "code": "@Overpublic void sendMessage(Member[] destination,sagad payload) throws ption { int size= (sizeSize) ss(msgtions()); if (frag) { frag(desload); } else { msuper.sendMessage(dtion, ayload); } }", "n_tokens": 191, "n_pass": [217, 26, 17]}
{"time": "2021-02-22 19:59:41.147254", "score": "0.3057", "loss": "2.4891", "code": "@Overc void sendMessage(Member[] destination,sagad payload) throws ption { int size= (sizeSize) ss(msgtions()); if (frag) { frag(desload); } else { msuper.sendMessage(dtion, ayload); } }", "n_tokens": 186, "n_pass": [218, 27, 18]}
{"time": "2021-02-22 19:59:44.949177", "score": "0.4159", "loss": "1.5716", "code": "@Overc void sendMessage(M[] destination,sagad payload) throws ption { int size= (sizeSize) ss(msgtions()); if (frag) { frag(desload); } else { msuper.sendMessage(dtion, ayload); } }", "n_tokens": 181, "n_pass": [223, 28, 19]}
{"time": "2021-02-22 19:59:47.561632", "score": "0.2789", "loss": "2.2725", "code": "@Overc void sendMessage(M[] deson,sagad payload) throws ption { int size= (sizeSize) ss(msgtions()); if (frag) { frag(desload); } else { msuper.sendMessage(dtion, ayload); } }", "n_tokens": 175, "n_pass": [225, 29, 20]}
{"time": "2021-02-22 19:59:59.282806", "score": "0.5079", "loss": "1.5687", "code": "@Overc void sendMessage(M[] deson,ad payload) throws ption { int size= (sizeSize) ss(msgtions()); if (frag) { frag(desload); } else { msuper.sendMessage(dtion, ayload); } }", "n_tokens": 172, "n_pass": [317, 33, 21]}
{"time": "2021-02-22 20:00:07.180045", "score": "0.5141", "loss": "1.6135", "code": "@Overc void sendMessage(M[] deson,ad payload) throws pt { int size= (sizeSize) ss(msgtions()); if (frag) { frag(desload); } else { msuper.sendMessage(dtion, ayload); } }", "n_tokens": 169, "n_pass": [325, 36, 22]}
{"time": "2021-02-22 20:00:09.790571", "score": "0.3487", "loss": "2.17", "code": "@Overc void sendMessage(M[] deson,ad payload) throws pt {  size= (sizeSize) ss(msgtions()); if (frag) { frag(desload); } else { msuper.sendMessage(dtion, ayload); } }", "n_tokens": 166, "n_pass": [327, 37, 23]}
{"time": "2021-02-22 20:00:15.041086", "score": "0.3762", "loss": "1.8838", "code": "@Overc void sendMessage(M[] deson,ad payload) throws pt {  size= (sSize) ss(msgtions()); if (frag) { frag(desload); } else { msuper.sendMessage(dtion, ayload); } }", "n_tokens": 163, "n_pass": [331, 39, 24]}
{"time": "2021-02-22 20:00:17.649134", "score": "0.5298", "loss": "1.636", "code": "@Overc void sendMessage(M[] deson,ad payload) throws pt {  size= (se) ss(msgtions()); if (frag) { frag(desload); } else { msuper.sendMessage(dtion, ayload); } }", "n_tokens": 160, "n_pass": [332, 40, 25]}
{"time": "2021-02-22 20:00:20.291682", "score": "0.5298", "loss": "1.636", "code": "@Overc void sendMessage(M[] deson,ad payload) throws pt {  size= (se) ss(tions()); if (frag) { frag(desload); } else { msuper.sendMessage(dtion, ayload); } }", "n_tokens": 157, "n_pass": [335, 41, 26]}
{"time": "2021-02-22 20:00:22.905701", "score": "0.5462", "loss": "1.7177", "code": "@Overc void sendMessage(M[] deson,ad payload) throws pt {  size= (se) ss(ns()); if (frag) { frag(desload); } else { msuper.sendMessage(dtion, ayload); } }", "n_tokens": 154, "n_pass": [336, 42, 27]}
{"time": "2021-02-22 20:00:25.524727", "score": "0.6403", "loss": "1.4851", "code": "@Overc void sendMessage(M[] deson,ad payload) throws pt {  size= (se) ss(ns()); if (f) { frag(desload); } else { msuper.sendMessage(dtion, ayload); } }", "n_tokens": 151, "n_pass": [341, 43, 28]}
{"time": "2021-02-22 20:00:28.139188", "score": "0.617", "loss": "1.7362", "code": "@Overc void sendMessage(M[] deson,ad payload) throws pt {  size= (se) ss(ns()); if (f) {ag(desload); } else { msuper.sendMessage(dtion, ayload); } }", "n_tokens": 148, "n_pass": [343, 44, 29]}
{"time": "2021-02-22 20:00:30.759292", "score": "0.3259", "loss": "2.7949", "code": "@Overc void sendMessage(M[] deson,ad payload) throws pt {  size= (se) ss(ns()); if (f) {ag(load); } else { msuper.sendMessage(dtion, ayload); } }", "n_tokens": 145, "n_pass": [345, 45, 30]}
{"time": "2021-02-22 20:00:33.378764", "score": "0.5877", "loss": "1.8103", "code": "@Overc void sendMessage(M[] deson,ad payload) throws pt {  size= (se) ss(ns()); if (f) {ag(d); } else { msuper.sendMessage(dtion, ayload); } }", "n_tokens": 142, "n_pass": [346, 46, 31]}
{"time": "2021-02-22 20:00:36.001519", "score": "0.6756", "loss": "1.0152", "code": "@Overc void sendMessage(M[] deson,ad payload) throws pt {  size= (se) ss(ns()); if (f) {ag(d); } else {uper.sendMessage(dtion, ayload); } }", "n_tokens": 139, "n_pass": [351, 47, 32]}
{"time": "2021-02-22 20:00:38.631095", "score": "0.6517", "loss": "1.0375", "code": "@Overc void sendMessage(M[] deson,ad payload) throws pt {  size= (se) ss(ns()); if (f) {ag(d); } else {r.sendMessage(dtion, ayload); } }", "n_tokens": 136, "n_pass": [352, 48, 33]}
{"time": "2021-02-22 20:00:51.775203", "score": "0.6776", "loss": "0.9651", "code": "@Overc void sendMessage(M[] deson,ad payload) throws pt {  size= (se) ss(ns()); if (f) {ag(d); } else {r.sendMessage(dn, ayload); } }", "n_tokens": 133, "n_pass": [358, 53, 34]}
{"time": "2021-02-22 20:00:54.386307", "score": "0.4404", "loss": "2.0852", "code": "@Overc void sendMessage(M[] deson,ad payload) throws pt {  size= (se) ss(ns()); if (f) {ag(d); } else {r.sendMessage(dayload); } }", "n_tokens": 130, "n_pass": [359, 54, 35]}
{"time": "2021-02-22 20:00:57.002012", "score": "0.4404", "loss": "2.0852", "code": "@Overc void sendMessage(M[] deson,ad payload) throws pt {  size= (se) ss(ns()); if (f) {ag(d); } else {r.sendMessage(doad); } }", "n_tokens": 127, "n_pass": [360, 55, 36]}
{"time": "2021-02-22 20:00:59.636867", "score": "0.4287", "loss": "2.0838", "code": "@Overc void sendMessage(M[] deson,ad payload) throws pt {  size= (se) ss(ns()); if (f) {ag(d); } else {r.sendMessage(d); } }", "n_tokens": 124, "n_pass": [361, 56, 37]}
{"time": "2021-02-22 20:01:04.906003", "score": "0.3266", "loss": "2.7605", "code": "@Ove void sendMessage(M[] deson,ad payload) throws pt {  size= (se) ss(ns()); if (f) {ag(d); } else {r.sendMessage(d); } }", "n_tokens": 122, "n_pass": [366, 58, 38]}
{"time": "2021-02-22 20:01:07.904190", "score": "0.2427", "loss": "3.4567", "code": "@Ove vd sendMessage(M[] deson,ad payload) throws pt {  size= (se) ss(ns()); if (f) {ag(d); } else {r.sendMessage(d); } }", "n_tokens": 120, "n_pass": [368, 59, 39]}
{"time": "2021-02-22 20:01:12.084795", "score": "0.2137", "loss": "3.7747", "code": "@Ove vd sendMessage(M[] on,ad payload) throws pt {  size= (se) ss(ns()); if (f) {ag(d); } else {r.sendMessage(d); } }", "n_tokens": 117, "n_pass": [375, 60, 40]}
{"time": "2021-02-22 20:01:33.019760", "score": "0.2939", "loss": "2.9177", "code": "@O vd sendMessage(M[] on,ad payload) throws pt {  size= (se) ss(ns()); if (f) {ag(d); } else {r.sendMessage(d); } }", "n_tokens": 115, "n_pass": [408, 68, 41]}
{"time": "2021-02-22 20:01:56.004088", "score": "0.4687", "loss": "2.408", "code": " vd sendMessage(M[] on,ad payload) throws pt {  size= (se) ss(ns()); if (f) {ag(d); } else {r.sendMessage(d); } }", "n_tokens": 113, "n_pass": [447, 76, 42]}
{"time": "2021-02-22 20:01:58.620818", "score": "0.4519", "loss": "2.2511", "code": "d sendMessage(M[] on,ad payload) throws pt {  size= (se) ss(ns()); if (f) {ag(d); } else {r.sendMessage(d); } }", "n_tokens": 111, "n_pass": [448, 77, 43]}
{"time": "2021-02-22 20:02:28.013077", "score": "0.4519", "loss": "2.2511", "code": "d sendMessage(M[]on,ad payload) throws pt {  size= (se) ss(ns()); if (f) {ag(d); } else {r.sendMessage(d); } }", "n_tokens": 110, "n_pass": [577, 85, 44]}
{"time": "2021-02-22 20:02:30.619340", "score": "0.4531", "loss": "1.9269", "code": "d sendMessage(M[]n,ad payload) throws pt {  size= (se) ss(ns()); if (f) {ag(d); } else {r.sendMessage(d); } }", "n_tokens": 109, "n_pass": [578, 86, 45]}
{"time": "2021-02-22 20:02:56.770529", "score": "0.4531", "loss": "1.9269", "code": "d sendMessage(M[]n,ad payload)throws pt {  size= (se) ss(ns()); if (f) {ag(d); } else {r.sendMessage(d); } }", "n_tokens": 108, "n_pass": [592, 96, 46]}
{"time": "2021-02-22 20:02:59.393074", "score": "0.3484", "loss": "2.0959", "code": "d sendMessage(M[]n,ad payload)throws p{  size= (se) ss(ns()); if (f) {ag(d); } else {r.sendMessage(d); } }", "n_tokens": 106, "n_pass": [599, 97, 47]}
{"time": "2021-02-22 20:03:04.650444", "score": "0.5855", "loss": "1.4494", "code": "d sendMessage(M[]n,ad payload)throws p{  se= (se) ss(ns()); if (f) {ag(d); } else {r.sendMessage(d); } }", "n_tokens": 104, "n_pass": [602, 99, 48]}
{"time": "2021-02-22 20:03:07.276331", "score": "0.6402", "loss": "0.9722", "code": "d sendMessage(M[]n,ad payload)throws p{  se= (se) (ns()); if (f) {ag(d); } else {r.sendMessage(d); } }", "n_tokens": 102, "n_pass": [607, 100, 49]}
{"time": "2021-02-22 20:03:09.916307", "score": "0.7036", "loss": "0.7367", "code": "d sendMessage(M[]n,ad payload)throws p{  se= (se) (ns()); if (f) {(d); } else {r.sendMessage(d); } }", "n_tokens": 100, "n_pass": [616, 101, 50]}
{"time": "2021-02-22 20:03:33.396950", "score": "0.6103", "loss": "0.8091", "code": "d sendMessage(M[]n,d payload)throws p{  se= (se) (ns()); if (f) {(d); } else {r.sendMessage(d); } }", "n_tokens": 99, "n_pass": [653, 108, 51]}
{"time": "2021-02-22 20:04:23.496651", "score": "0.6103", "loss": "0.8091", "code": "d sendMessage(M[]n,d payload)throws p{ se= (se) (ns()); if (f) {(d); } else {r.sendMessage(d); } }", "n_tokens": 98, "n_pass": [791, 123, 52]}
{"time": "2021-02-22 20:04:26.142437", "score": "0.6103", "loss": "0.8091", "code": "d sendMessage(M[]n,d payload)throws p{se= (se) (ns()); if (f) {(d); } else {r.sendMessage(d); } }", "n_tokens": 97, "n_pass": [792, 124, 53]}
{"time": "2021-02-22 20:04:31.399222", "score": "0.4078", "loss": "1.1892", "code": "d sendMessage(M[]n,d payload)throws p{s= (se) (ns()); if (f) {(d); } else {r.sendMessage(d); } }", "n_tokens": 96, "n_pass": [794, 126, 54]}
{"time": "2021-02-22 20:04:34.011373", "score": "0.4078", "loss": "1.1892", "code": "d sendMessage(M[]n,d payload)throws p{s=(se) (ns()); if (f) {(d); } else {r.sendMessage(d); } }", "n_tokens": 95, "n_pass": [796, 127, 55]}
{"time": "2021-02-22 20:04:36.618550", "score": "0.2217", "loss": "1.8629", "code": "d sendMessage(M[]n,d payload)throws p{s=(e) (ns()); if (f) {(d); } else {r.sendMessage(d); } }", "n_tokens": 94, "n_pass": [798, 128, 56]}
{"time": "2021-02-22 20:04:39.231041", "score": "0.2217", "loss": "1.8629", "code": "d sendMessage(M[]n,d payload)throws p{s=(e)(ns()); if (f) {(d); } else {r.sendMessage(d); } }", "n_tokens": 93, "n_pass": [801, 129, 57]}
{"time": "2021-02-22 20:04:41.878566", "score": "0.2271", "loss": "1.8243", "code": "d sendMessage(M[]n,d payload)throws p{s=(e)(s()); if (f) {(d); } else {r.sendMessage(d); } }", "n_tokens": 92, "n_pass": [803, 130, 58]}
{"time": "2021-02-22 20:04:44.490910", "score": "0.2271", "loss": "1.8243", "code": "d sendMessage(M[]n,d payload)throws p{s=(e)(s());if (f) {(d); } else {r.sendMessage(d); } }", "n_tokens": 91, "n_pass": [809, 131, 59]}
{"time": "2021-02-22 20:04:47.121644", "score": "0.2271", "loss": "1.8243", "code": "d sendMessage(M[]n,d payload)throws p{s=(e)(s());if(f) {(d); } else {r.sendMessage(d); } }", "n_tokens": 90, "n_pass": [812, 132, 60]}
{"time": "2021-02-22 20:04:49.744476", "score": "0.2271", "loss": "1.8243", "code": "d sendMessage(M[]n,d payload)throws p{s=(e)(s());if(f){(d); } else {r.sendMessage(d); } }", "n_tokens": 89, "n_pass": [816, 133, 61]}
{"time": "2021-02-22 20:04:52.362392", "score": "0.2271", "loss": "1.8243", "code": "d sendMessage(M[]n,d payload)throws p{s=(e)(s());if(f){(d);} else {r.sendMessage(d); } }", "n_tokens": 88, "n_pass": [822, 134, 62]}
{"time": "2021-02-22 20:04:54.974440", "score": "0.2271", "loss": "1.8243", "code": "d sendMessage(M[]n,d payload)throws p{s=(e)(s());if(f){(d);}else {r.sendMessage(d); } }", "n_tokens": 87, "n_pass": [824, 135, 63]}
{"time": "2021-02-22 20:04:57.595165", "score": "0.2271", "loss": "1.8243", "code": "d sendMessage(M[]n,d payload)throws p{s=(e)(s());if(f){(d);}else{r.sendMessage(d); } }", "n_tokens": 86, "n_pass": [829, 136, 64]}
{"time": "2021-02-22 20:05:34.192723", "score": "0.2271", "loss": "1.8243", "code": "d sendMessage(M[]n,d payload)throws p{s=(e)(s());if(f){(d);}else{r.sendMessage(d);} }", "n_tokens": 85, "n_pass": [848, 150, 65]}
{"time": "2021-02-22 20:05:36.803486", "score": "0.2271", "loss": "1.8243", "code": "d sendMessage(M[]n,d payload)throws p{s=(e)(s());if(f){(d);}else{r.sendMessage(d);}}", "n_tokens": 84, "n_pass": [850, 151, 66]}

Minimal simplified code:
d sendMessage(M[]n,d payload)throws p{s=(e)(s());if(f){(d);}else{r.sendMessage(d);}}

