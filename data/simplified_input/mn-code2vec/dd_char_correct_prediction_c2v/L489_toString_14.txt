
path = /scratch/rabin/data/code2vec/transforms/Methods/java-large/test/SINTEF-9012__JArduino/jarduino.core/src/main/java/org/sintef/jarduino/msg/AnalogWriteMsg_toString.java
method_name = toString
method_body = @Override public String toString() { String myString = "analogWrite:"; myString += " [pin: " + pin + "]"; myString += " [value: " + value + "]"; return myString; }
predict, score, loss = toString, 0.9958919286727905, 0.009954098612070084

Trace of simplified code(s):
{"time": "2021-05-26 17:21:20.187771", "score": "0.9959", "loss": "0.01", "code": "@Override public String toString() { String myString = \"analogWrite:\"; myString += \" [pin: \" + pin + \"]\"; myString += \" [value: \" + value + \"]\"; return myString; }", "n_tokens": 163, "n_pass": [1, 1, 1]}
{"time": "2021-05-26 17:21:22.763272", "score": "0.9762", "loss": "0.0356", "code": "@Override public String toString() { Str= \" [pin: \" + pin + \"]\"; myString += \" [value: \" + value + \"]\"; return myString; }", "n_tokens": 122, "n_pass": [9, 2, 2]}
{"time": "2021-05-26 17:21:25.388200", "score": "0.8277", "loss": "0.3026", "code": "@Override public String toString() { Str= \" [pin: \" + pin + \"]\"; myString += \" [\"; return myString; }", "n_tokens": 101, "n_pass": [20, 3, 3]}
{"time": "2021-05-26 17:21:30.539423", "score": "0.5755", "loss": "1.214", "code": "public String toString() { Str= \" [pin: \" + pin + \"]\"; myString += \" [\"; return myString; }", "n_tokens": 91, "n_pass": [38, 5, 4]}
{"time": "2021-05-26 17:21:33.894020", "score": "0.4536", "loss": "2.0612", "code": "publiing toString() { Str= \" [pin: \" + pin + \"]\"; myString += \" [\"; return myString; }", "n_tokens": 86, "n_pass": [66, 6, 5]}
{"time": "2021-05-26 17:21:37.216572", "score": "0.6034", "loss": "1.2669", "code": "publiing toString() { Str= \" [\" + pin + \"]\"; myString += \" [\"; return myString; }", "n_tokens": 81, "n_pass": [72, 7, 6]}
{"time": "2021-05-26 17:21:53.881896", "score": "0.7196", "loss": "0.8215", "code": "publiing toString() { Str= \"\" + pin + \"]\"; myString += \" [\"; return myString; }", "n_tokens": 79, "n_pass": [123, 13, 7]}
{"time": "2021-05-26 17:21:56.455348", "score": "0.7954", "loss": "0.3904", "code": "publiing toString() { Str= \"\" +n + \"]\"; myString += \" [\"; return myString; }", "n_tokens": 76, "n_pass": [125, 14, 8]}
{"time": "2021-05-26 17:21:59.023887", "score": "0.8402", "loss": "0.3651", "code": "publiing toString() { Str= \"\" + \"]\"; myString += \" [\"; return myString; }", "n_tokens": 73, "n_pass": [126, 15, 9]}
{"time": "2021-05-26 17:22:04.142756", "score": "0.8115", "loss": "0.6034", "code": "publiing toString() { Str= \"\" + \"]\"; mySng += \" [\"; return myString; }", "n_tokens": 70, "n_pass": [130, 17, 10]}
{"time": "2021-05-26 17:22:06.726330", "score": "0.8897", "loss": "0.418", "code": "publiing toString() { Str= \"\" + \"]\"; myS+= \" [\"; return myString; }", "n_tokens": 67, "n_pass": [131, 18, 11]}
{"time": "2021-05-26 17:22:09.305189", "score": "0.635", "loss": "1.8315", "code": "publiing toString() { Str= \"\" + \"]\"; myS+= \" [\"; urn myString; }", "n_tokens": 64, "n_pass": [135, 19, 12]}
{"time": "2021-05-26 17:22:11.874189", "score": "0.6754", "loss": "1.557", "code": "publiing toString() { Str= \"\" + \"]\"; myS+= \" [\";  myString; }", "n_tokens": 61, "n_pass": [136, 20, 13]}
{"time": "2021-05-26 17:22:14.457554", "score": "0.6362", "loss": "1.6892", "code": "publiing toString() { Str= \"\" + \"]\"; myS+= \" [\"; String; }", "n_tokens": 58, "n_pass": [137, 21, 14]}
{"time": "2021-05-26 17:22:19.596761", "score": "0.6374", "loss": "1.6787", "code": "publiing toString() { Str= \"\" + \"]\"; myS+= \" [\"; Str; }", "n_tokens": 55, "n_pass": [139, 23, 15]}
{"time": "2021-05-26 17:22:22.166216", "score": "0.6374", "loss": "1.6787", "code": "bliing toString() { Str= \"\" + \"]\"; myS+= \" [\"; Str; }", "n_tokens": 53, "n_pass": [141, 24, 16]}
{"time": "2021-05-26 17:22:24.745748", "score": "0.6374", "loss": "1.6787", "code": "iing toString() { Str= \"\" + \"]\"; myS+= \" [\"; Str; }", "n_tokens": 51, "n_pass": [142, 25, 17]}
{"time": "2021-05-26 17:22:27.309672", "score": "0.4657", "loss": "1.9014", "code": "ng toString() { Str= \"\" + \"]\"; myS+= \" [\"; Str; }", "n_tokens": 49, "n_pass": [143, 26, 18]}
{"time": "2021-05-26 17:22:31.800556", "score": "0.3328", "loss": "2.4088", "code": "ng toString() { r= \"\" + \"]\"; myS+= \" [\"; Str; }", "n_tokens": 47, "n_pass": [152, 27, 19]}
{"time": "2021-05-26 17:22:34.742051", "score": "0.3284", "loss": "2.4205", "code": "ng toString() { r= \"\" + \"]\"; myS+= \" [\"; ; }", "n_tokens": 44, "n_pass": [162, 28, 20]}
{"time": "2021-05-26 17:22:42.526052", "score": "0.3284", "loss": "2.4205", "code": "ng toString() { r= \"\" + \"]\"; myS+= \" [\"; }", "n_tokens": 42, "n_pass": [217, 29, 21]}
{"time": "2021-05-26 17:22:45.087229", "score": "0.4796", "loss": "1.5714", "code": "g toString() { r= \"\" + \"]\"; myS+= \" [\"; }", "n_tokens": 41, "n_pass": [219, 30, 22]}
{"time": "2021-05-26 17:22:51.496440", "score": "0.4796", "loss": "1.5714", "code": "g toString(){ r= \"\" + \"]\"; myS+= \" [\"; }", "n_tokens": 40, "n_pass": [232, 31, 23]}
{"time": "2021-05-26 17:22:54.084632", "score": "0.4796", "loss": "1.5714", "code": "g toString(){r= \"\" + \"]\"; myS+= \" [\"; }", "n_tokens": 39, "n_pass": [234, 32, 24]}
{"time": "2021-05-26 17:22:56.644351", "score": "0.4796", "loss": "1.5714", "code": "g toString(){r=\"\" + \"]\"; myS+= \" [\"; }", "n_tokens": 38, "n_pass": [237, 33, 25]}
{"time": "2021-05-26 17:22:59.202283", "score": "0.4796", "loss": "1.5714", "code": "g toString(){r=\"\"+ \"]\"; myS+= \" [\"; }", "n_tokens": 37, "n_pass": [240, 34, 26]}
{"time": "2021-05-26 17:23:01.770208", "score": "0.4796", "loss": "1.5714", "code": "g toString(){r=\"\"+\"]\"; myS+= \" [\"; }", "n_tokens": 36, "n_pass": [242, 35, 27]}
{"time": "2021-05-26 17:23:12.043129", "score": "0.7613", "loss": "0.71", "code": "g toString(){r=\"\"+\"]\"; myS+= \"\"; }", "n_tokens": 34, "n_pass": [251, 39, 28]}
{"time": "2021-05-26 17:23:23.550177", "score": "0.4367", "loss": "1.2885", "code": "g toString(){r=\"\"+\"]\"; m+= \"\"; }", "n_tokens": 32, "n_pass": [277, 42, 29]}
{"time": "2021-05-26 17:23:33.940599", "score": "0.4367", "loss": "1.2885", "code": "g toString(){r=\"\"+\"]\"; m+= \"\";}", "n_tokens": 31, "n_pass": [318, 44, 30]}
{"time": "2021-05-26 17:23:42.951794", "score": "0.4367", "loss": "1.2885", "code": "g toString(){r=\"\"+\"]\";m+= \"\";}", "n_tokens": 30, "n_pass": [341, 46, 31]}
{"time": "2021-05-26 17:23:48.501479", "score": "0.4367", "loss": "1.2885", "code": "g toString(){r=\"\"+\"]\";m+=\"\";}", "n_tokens": 29, "n_pass": [345, 48, 32]}

Minimal simplified code:
g toString(){r=""+"]";m+="";}

