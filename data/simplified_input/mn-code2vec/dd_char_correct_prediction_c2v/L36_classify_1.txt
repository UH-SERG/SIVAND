
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/CogComp__cogcomp-nlp/md/src/main/java/org/cogcomp/md/LbjGen/BrownClusterPaths_classify.java
method_name = classify
method_body = public FeatureVector[] classify(Object[] examples) { if (!(examples instanceof Constituent[])) { String type = examples == null ? "null" : examples.getClass().getName(); System.err.println("Classifier 'BrownClusterPaths(Constituent)' defined on line 101 of md.lbj received '" + type + "' as input."); new Exception().printStackTrace(); System.exit(1); } return super.classify(examples); }
predict, score, loss = classify, 0.9045052528381348, 0.1304560899734497

Trace of simplified code(s):
{"time": "2021-02-21 23:01:38.101756", "score": "0.9045", "loss": "0.1305", "code": "public FeatureVector[] classify(Object[] examples) { if (!(examples instanceof Constituent[])) { String type = examples == null ? \"null\" : examples.getClass().getName(); System.err.println(\"Classifier 'BrownClusterPaths(Constituent)' defined on line 101 of md.lbj received '\" + type + \"' as input.\"); new Exception().printStackTrace(); System.exit(1); } return super.classify(examples); }", "n_tokens": 388, "n_pass": [1, 1, 1]}
{"time": "2021-02-21 23:01:40.822470", "score": "0.8976", "loss": "0.1401", "code": "public FeatureVector[] classify(Object[] examples) { if (!(examples instanceof Constituent[])) { String type = examples == null ? \"null\" : examples.getClass().getName(); System.err.println(\"Clasinput.\"); new Exception().printStackTrace(); System.exit(1); } return super.classify(examples); }", "n_tokens": 291, "n_pass": [10, 2, 2]}
{"time": "2021-02-21 23:01:43.545015", "score": "0.7694", "loss": "0.329", "code": "public FeatureVector[] classify(Object[] examples) { if (!(examples instanceof Constituent[])) {les.getClass().getName(); System.err.println(\"Clasinput.\"); new Exception().printStackTrace(); System.exit(1); } return super.classify(examples); }", "n_tokens": 243, "n_pass": [23, 3, 3]}
{"time": "2021-02-21 23:01:46.202720", "score": "0.7882", "loss": "0.293", "code": "public FeatureVector[] classify(Object[] examples) { if (!(examples instanceof Constituent[])) {; System.err.println(\"Clasinput.\"); new Exception().printStackTrace(); System.exit(1); } return super.classify(examples); }", "n_tokens": 219, "n_pass": [39, 4, 4]}
{"time": "2021-02-21 23:01:48.856440", "score": "0.8305", "loss": "0.2254", "code": "public FeatureVector[] classify(Object[] examples) { if (!(examples instanceof Constituent[])) {; System.err.println(\"Clasinput.\"); new Exceptiostem.exit(1); } return super.classify(examples); }", "n_tokens": 194, "n_pass": [42, 5, 5]}
{"time": "2021-02-21 23:01:54.621214", "score": "0.8604", "loss": "0.1833", "code": "reVector[] classify(Object[] examples) { if (!(examples instanceof Constituent[])) {; System.err.println(\"Clasinput.\"); new Exceptiostem.exit(1); } return super.classify(examples); }", "n_tokens": 182, "n_pass": [71, 7, 6]}
{"time": "2021-02-21 23:01:57.251570", "score": "0.7392", "loss": "0.3427", "code": "reVector[] classify(Object[] examples) { if (!(examples instanceof Constituent[])) {; System.err.println(\"Clasinput.\"); stem.exit(1); } return super.classify(examples); }", "n_tokens": 170, "n_pass": [81, 8, 7]}
{"time": "2021-02-21 23:01:59.917758", "score": "0.8602", "loss": "0.1833", "code": "reVector[] classify(Object[] examples) { if (!(examples instanceof Constituent[])) {; System.err.println(\"Clasinput.\"); ; } return super.classify(examples); }", "n_tokens": 158, "n_pass": [82, 9, 8]}
{"time": "2021-02-21 23:02:05.610923", "score": "0.6724", "loss": "0.4737", "code": "reVector[] classify(Object[] examples) { if (!(examples instanceof Constituent[])) {; System.err.println(\"Clasinput.\"); ; } reuper.classify(examples); }", "n_tokens": 152, "n_pass": [123, 11, 9]}
{"time": "2021-02-21 23:02:13.483401", "score": "0.6602", "loss": "0.5042", "code": "or[] classify(Object[] examples) { if (!(examples instanceof Constituent[])) {; System.err.println(\"Clasinput.\"); ; } reuper.classify(examples); }", "n_tokens": 146, "n_pass": [128, 14, 10]}
{"time": "2021-02-21 23:02:16.904336", "score": "0.8048", "loss": "0.321", "code": "or[] classify(Object[] es) { if (!(examples instanceof Constituent[])) {; System.err.println(\"Clasinput.\"); ; } reuper.classify(examples); }", "n_tokens": 140, "n_pass": [133, 15, 11]}
{"time": "2021-02-21 23:02:19.548732", "score": "0.7427", "loss": "0.4573", "code": "or[] classify(Object[] es) { if (!(es instanceof Constituent[])) {; System.err.println(\"Clasinput.\"); ; } reuper.classify(examples); }", "n_tokens": 134, "n_pass": [136, 16, 12]}
{"time": "2021-02-21 23:02:22.186304", "score": "0.7425", "loss": "0.4572", "code": "or[] classify(Object[] es) { if (!(es instanceof Const[])) {; System.err.println(\"Clasinput.\"); ; } reuper.classify(examples); }", "n_tokens": 128, "n_pass": [140, 17, 13]}
{"time": "2021-02-21 23:02:24.824918", "score": "0.7414", "loss": "0.4595", "code": "or[] classify(Object[] es) { if (!(es instanceof Const[])) {em.err.println(\"Clasinput.\"); ; } reuper.classify(examples); }", "n_tokens": 122, "n_pass": [142, 18, 14]}
{"time": "2021-02-21 23:02:27.448313", "score": "0.7014", "loss": "0.5488", "code": "or[] classify(Object[] es) { if (!(es instanceof Const[])) {em.errln(\"Clasinput.\"); ; } reuper.classify(examples); }", "n_tokens": 116, "n_pass": [144, 19, 15]}
{"time": "2021-02-21 23:02:30.066739", "score": "0.7051", "loss": "0.5192", "code": "or[] classify(Object[] es) { if (!(es instanceof Const[])) {em.errln(\"Clt.\"); ; } reuper.classify(examples); }", "n_tokens": 110, "n_pass": [146, 20, 16]}
{"time": "2021-02-21 23:02:38.822585", "score": "0.8379", "loss": "0.2815", "code": "or[] classify(Object[] es) { if (!(es instanceof Const[])) {ln(\"Clt.\"); ; } reuper.classify(examples); }", "n_tokens": 104, "n_pass": [163, 23, 17]}
{"time": "2021-02-21 23:02:47.503934", "score": "0.8379", "loss": "0.2815", "code": "or[] classify(Object[] es) { if (!(es instanceof Const[])) {ln(\"Clt.\"); ; }uper.classify(examples); }", "n_tokens": 101, "n_pass": [220, 26, 18]}
{"time": "2021-02-21 23:02:50.135077", "score": "0.8412", "loss": "0.2731", "code": "or[] classify(Object[] es) { if (!(es instanceof Const[])) {ln(\"Clt.\"); ; }r.classify(examples); }", "n_tokens": 98, "n_pass": [221, 27, 19]}
{"time": "2021-02-21 23:03:00.628833", "score": "0.7587", "loss": "0.4182", "code": "or[] classify(Object[] es) { if (!(es instanceof Const[])) {ln(\"Clt.\"); ; }r.classify(eples); }", "n_tokens": 95, "n_pass": [226, 31, 20]}
{"time": "2021-02-21 23:03:03.255425", "score": "0.7519", "loss": "0.4231", "code": "or[] classify(Object[] es) { if (!(es instanceof Const[])) {ln(\"Clt.\"); ; }r.classify(e); }", "n_tokens": 91, "n_pass": [227, 32, 21]}
{"time": "2021-02-21 23:03:06.694449", "score": "0.3823", "loss": "1.4967", "code": "or[] classify(Oct[] es) { if (!(es instanceof Const[])) {ln(\"Clt.\"); ; }r.classify(e); }", "n_tokens": 88, "n_pass": [234, 33, 22]}
{"time": "2021-02-21 23:03:09.348149", "score": "0.3827", "loss": "1.4953", "code": "or[] classify(Oct[] es) { if (!(es instanceof Co[])) {ln(\"Clt.\"); ; }r.classify(e); }", "n_tokens": 85, "n_pass": [246, 34, 23]}
{"time": "2021-02-21 23:03:22.553469", "score": "0.3421", "loss": "1.6328", "code": "or[] classify(Oct[] es) { if (!(es instanceof Co[])) {ln(\"C.\"); ; }r.classify(e); }", "n_tokens": 83, "n_pass": [342, 38, 24]}
{"time": "2021-02-21 23:03:25.196542", "score": "0.3421", "loss": "1.6328", "code": "or[] classify(Oct[] es) { if (!(es instanceof Co[])) {ln(\"C.\"); }r.classify(e); }", "n_tokens": 81, "n_pass": [345, 39, 25]}
{"time": "2021-02-21 23:03:40.972663", "score": "0.5305", "loss": "1.0393", "code": "r[] classify(Oct[] es) { if (!(es instanceof Co[])) {ln(\"C.\"); }r.classify(e); }", "n_tokens": 80, "n_pass": [355, 45, 26]}
{"time": "2021-02-21 23:03:43.616019", "score": "0.5305", "loss": "1.0393", "code": "r[]classify(Oct[] es) { if (!(es instanceof Co[])) {ln(\"C.\"); }r.classify(e); }", "n_tokens": 79, "n_pass": [359, 46, 27]}
{"time": "2021-02-21 23:03:49.475656", "score": "0.8833", "loss": "0.1752", "code": "r[]classify(ct[] es) { if (!(es instanceof Co[])) {ln(\"C.\"); }r.classify(e); }", "n_tokens": 78, "n_pass": [369, 47, 28]}
{"time": "2021-02-21 23:03:52.114754", "score": "0.7717", "loss": "0.3566", "code": "r[]classify(t[] es) { if (!(es instanceof Co[])) {ln(\"C.\"); }r.classify(e); }", "n_tokens": 77, "n_pass": [370, 48, 29]}
{"time": "2021-02-21 23:03:54.732326", "score": "0.7717", "loss": "0.3566", "code": "r[]classify(t[]es) { if (!(es instanceof Co[])) {ln(\"C.\"); }r.classify(e); }", "n_tokens": 76, "n_pass": [374, 49, 30]}
{"time": "2021-02-21 23:03:57.378435", "score": "0.8788", "loss": "0.1815", "code": "r[]classify(t[]s) { if (!(es instanceof Co[])) {ln(\"C.\"); }r.classify(e); }", "n_tokens": 75, "n_pass": [375, 50, 31]}
{"time": "2021-02-21 23:04:00.019194", "score": "0.8788", "loss": "0.1815", "code": "r[]classify(t[]s){ if (!(es instanceof Co[])) {ln(\"C.\"); }r.classify(e); }", "n_tokens": 74, "n_pass": [378, 51, 32]}
{"time": "2021-02-21 23:04:02.639693", "score": "0.8788", "loss": "0.1815", "code": "r[]classify(t[]s){if (!(es instanceof Co[])) {ln(\"C.\"); }r.classify(e); }", "n_tokens": 73, "n_pass": [380, 52, 33]}
{"time": "2021-02-21 23:04:05.293676", "score": "0.7628", "loss": "0.3872", "code": "r[]classify(t[]s){if (!(es instanceof Co[])) {ln(\"C.\"); }classify(e); }", "n_tokens": 71, "n_pass": [401, 53, 34]}
{"time": "2021-02-21 23:04:40.573349", "score": "0.7847", "loss": "0.3366", "code": "r[]classify(t[]s){if (!(es instanceof Co[])) {ln(\"C.\"); }classify(); }", "n_tokens": 70, "n_pass": [506, 64, 35]}
{"time": "2021-02-21 23:04:43.181204", "score": "0.7847", "loss": "0.3366", "code": "r[]classify(t[]s){if (!(es instanceof Co[])) {ln(\"C.\"); }classify();}", "n_tokens": 69, "n_pass": [509, 65, 36]}
{"time": "2021-02-21 23:04:49.041769", "score": "0.7847", "loss": "0.3366", "code": "r[]classify(t[]s){if(!(es instanceof Co[])) {ln(\"C.\"); }classify();}", "n_tokens": 68, "n_pass": [531, 66, 37]}
{"time": "2021-02-21 23:04:51.700442", "score": "0.883", "loss": "0.1935", "code": "r[]classify(t[]s){if((es instanceof Co[])) {ln(\"C.\"); }classify();}", "n_tokens": 67, "n_pass": [533, 67, 38]}
{"time": "2021-02-21 23:04:54.334080", "score": "0.8938", "loss": "0.1754", "code": "r[]classify(t[]s){if((s instanceof Co[])) {ln(\"C.\"); }classify();}", "n_tokens": 66, "n_pass": [535, 68, 39]}
{"time": "2021-02-21 23:04:56.943589", "score": "0.8867", "loss": "0.1871", "code": "r[]classify(t[]s){if((s instanceof o[])) {ln(\"C.\"); }classify();}", "n_tokens": 65, "n_pass": [549, 69, 40]}
{"time": "2021-02-21 23:04:59.571962", "score": "0.8867", "loss": "0.1871", "code": "r[]classify(t[]s){if((s instanceof o[])){ln(\"C.\"); }classify();}", "n_tokens": 64, "n_pass": [555, 70, 41]}
{"time": "2021-02-21 23:05:02.355037", "score": "0.879", "loss": "0.1922", "code": "r[]classify(t[]s){if((s instanceof o[])){n(\"C.\"); }classify();}", "n_tokens": 63, "n_pass": [557, 71, 42]}
{"time": "2021-02-21 23:05:04.989049", "score": "0.8964", "loss": "0.1553", "code": "r[]classify(t[]s){if((s instanceof o[])){(\"C.\"); }classify();}", "n_tokens": 62, "n_pass": [558, 72, 43]}
{"time": "2021-02-21 23:05:07.616905", "score": "0.8986", "loss": "0.1539", "code": "r[]classify(t[]s){if((s instanceof o[])){(\".\"); }classify();}", "n_tokens": 61, "n_pass": [561, 73, 44]}
{"time": "2021-02-21 23:05:10.244557", "score": "0.8908", "loss": "0.1632", "code": "r[]classify(t[]s){if((s instanceof o[])){(\"\"); }classify();}", "n_tokens": 60, "n_pass": [562, 74, 45]}
{"time": "2021-02-21 23:05:12.892034", "score": "0.8908", "loss": "0.1632", "code": "r[]classify(t[]s){if((s instanceof o[])){(\"\");}classify();}", "n_tokens": 59, "n_pass": [566, 75, 46]}

Minimal simplified code:
r[]classify(t[]s){if((s instanceof o[])){("");}classify();}

