
path = /scratch/rabin/data/code2vec/transforms/Methods/java-large/test/dronekit__dronekit-android/dependencyLibs/Mavlink/src/com/MAVLink/ardupilotmega/msg_data96_pack.java
method_name = pack
method_body = public MAVLinkPacket pack() { MAVLinkPacket packet = new MAVLinkPacket(MAVLINK_MSG_LENGTH); packet.sysid = 255; packet.compid = 190; packet.msgid = MAVLINK_MSG_ID_DATA96; packet.payload.putUnsignedByte(type); packet.payload.putUnsignedByte(len); for (int i = 0; i < data.length; i++) { packet.payload.putUnsignedByte(data[i]); } return packet; }
predict, score, loss = pack, 0.9996463060379028, 0.0011547094909474254

Trace of simplified code(s):
{"time": "2021-05-26 19:01:36.319008", "score": "0.9924", "loss": "0.0219", "code": "public MAVLinkPacket pack() { MAVLinkPacket packet = new MAVLinkPacket(MAVLINK_MSG_LENGTH); packet.sysid = 255; packet.compid = 190; packet.msgid = MAVLINK_MSG_ID_DATA96; packet.payload.putUnsignedByte(type); packet.payload.putUnsignedByte(len); for (int i = 0; i < data.length; i++) { packet.payload.putUnsignedByte(data[i]); } return packet; }", "n_tokens": 345, "n_pass": [1, 1, 1]}
{"time": "2021-05-26 19:01:38.962210", "score": "1.0", "loss": "0.0001", "code": "public MAVLinkPacket pack() { MAVLinkPacket packet = new MAVLinkPacket(MAVLINK_MSG_LENGTH); packet.sysid = 255; packet.compid = 190; packet.msgid = MAVLINK_MSG_ID_DATA96; p.payload.putUnsignedByte(len); for (int i = 0; i < data.length; i++) { packet.payload.putUnsignedByte(data[i]); } return packet; }", "n_tokens": 302, "n_pass": [24, 2, 2]}
{"time": "2021-05-26 19:01:41.658429", "score": "0.9999", "loss": "0.0002", "code": "public MAVLinkPacket pack() { MAVLinkPacket packet = new MAVLinkPacket(MAVLINK_MSG_LENGTH); packet.sysid = 255; packet.compid = 190; packet.msgid = MAVLINK_MSG_ID_DATA96;Byte(len); for (int i = 0; i < data.length; i++) { packet.payload.putUnsignedByte(data[i]); } return packet; }", "n_tokens": 280, "n_pass": [45, 3, 3]}
{"time": "2021-05-26 19:01:44.673075", "score": "0.9999", "loss": "0.0004", "code": "public MAVLinkPacket pack() { MAVLinkPackekPacket(MAVLINK_MSG_LENGTH); packet.sysid = 255; packet.compid = 190; packet.msgid = MAVLINK_MSG_ID_DATA96;Byte(len); for (int i = 0; i < data.length; i++) { packet.payload.putUnsignedByte(data[i]); } return packet; }", "n_tokens": 259, "n_pass": [53, 4, 4]}
{"time": "2021-05-26 19:01:47.268268", "score": "0.9995", "loss": "0.0015", "code": "public MAVLinkPacket pack() { MAVLinkPackekPacket(MAVLINK_MSG_LENGTH); packet.sysid = 190; packet.msgid = MAVLINK_MSG_ID_DATA96;Byte(len); for (int i = 0; i < data.length; i++) { packet.payload.putUnsignedByte(data[i]); } return packet; }", "n_tokens": 238, "n_pass": [56, 5, 5]}
{"time": "2021-05-26 19:01:49.857631", "score": "0.9999", "loss": "0.0002", "code": "public MAVLinkPacket pack() { MAVLinkPackekPacket(MAVLINK_MSG_LENGTH); packet.sysid MAVLINK_MSG_ID_DATA96;Byte(len); for (int i = 0; i < data.length; i++) { packet.payload.putUnsignedByte(data[i]); } return packet; }", "n_tokens": 216, "n_pass": [57, 6, 6]}
{"time": "2021-05-26 19:01:52.900963", "score": "0.9987", "loss": "0.0022", "code": "public MAVLinkPacket pack() { MAVLinkPackekPacket(MAVLINK_MSG_LENGTH); packet.sysid _ID_DATA96;Byte(len); for (int i = 0; i < data.length; i++) { packet.payload.putUnsignedByte(data[i]); } return packet; }", "n_tokens": 205, "n_pass": [88, 7, 7]}
{"time": "2021-05-26 19:01:55.488039", "score": "0.9989", "loss": "0.0036", "code": "public MAVLinkPacket pack() { MAVLinkPackekPacket(MAVLINK_MSG_LENGTH); packet.sysid _ID_DATA96;for (int i = 0; i < data.length; i++) { packet.payload.putUnsignedByte(data[i]); } return packet; }", "n_tokens": 194, "n_pass": [89, 8, 8]}
{"time": "2021-05-26 19:01:58.103936", "score": "0.9998", "loss": "0.0003", "code": "public MAVLinkPacket pack() { MAVLinkPackekPacket(MAVLINK_MSG_LENGTH); packet.sysid _ID_DATA96;for (int i = 0; i < data.length; i++) { packputUnsignedByte(data[i]); } return packet; }", "n_tokens": 183, "n_pass": [94, 9, 9]}
{"time": "2021-05-26 19:02:00.776371", "score": "0.9997", "loss": "0.0004", "code": "public MAVLinkPacket pack() { MAVLinkPackekPacket(MAVLINK_MSG_LENGTH); packet.sysid _ID_DATA96;for (int i = 0; i < data.length; i++) { packByte(data[i]); } return packet; }", "n_tokens": 172, "n_pass": [95, 10, 10]}
{"time": "2021-05-26 19:02:03.369203", "score": "0.9986", "loss": "0.0033", "code": "LinkPacket pack() { MAVLinkPackekPacket(MAVLINK_MSG_LENGTH); packet.sysid _ID_DATA96;for (int i = 0; i < data.length; i++) { packByte(data[i]); } return packet; }", "n_tokens": 162, "n_pass": [99, 11, 11]}
{"time": "2021-05-26 19:02:06.375903", "score": "0.9986", "loss": "0.0033", "code": "LinkPacket pack() { kekPacket(MAVLINK_MSG_LENGTH); packet.sysid _ID_DATA96;for (int i = 0; i < data.length; i++) { packByte(data[i]); } return packet; }", "n_tokens": 152, "n_pass": [102, 12, 12]}
{"time": "2021-05-26 19:02:11.636979", "score": "0.9993", "loss": "0.0017", "code": "LinkPacket pack() { kekPacket(MAVLINK_MSG_LENGTH); pa_ID_DATA96;for (int i = 0; i < data.length; i++) { packByte(data[i]); } return packet; }", "n_tokens": 141, "n_pass": [106, 14, 13]}
{"time": "2021-05-26 19:02:17.220842", "score": "0.9992", "loss": "0.0018", "code": "LinkPacket pack() { kekPacket(MAVLINK_MSG_LENGTH);D_DATA96;for (int i = 0; i < data.length; i++) { packByte(data[i]); } return packet; }", "n_tokens": 136, "n_pass": [146, 16, 14]}
{"time": "2021-05-26 19:02:19.814881", "score": "0.9993", "loss": "0.0017", "code": "LinkPacket pack() { kekPacket(MAVLINK_MSG_LENGTH);A96;for (int i = 0; i < data.length; i++) { packByte(data[i]); } return packet; }", "n_tokens": 131, "n_pass": [147, 17, 15]}
{"time": "2021-05-26 19:02:22.396279", "score": "0.9993", "loss": "0.0033", "code": "LinkPacket pack() { kekPacket(MAVLINK_MSG_LENGTH);A96;for (i= 0; i < data.length; i++) { packByte(data[i]); } return packet; }", "n_tokens": 126, "n_pass": [150, 18, 16]}
{"time": "2021-05-26 19:02:24.972468", "score": "0.9992", "loss": "0.0034", "code": "LinkPacket pack() { kekPacket(MAVLINK_MSG_LENGTH);A96;for (i= 0; ia.length; i++) { packByte(data[i]); } return packet; }", "n_tokens": 120, "n_pass": [152, 19, 17]}
{"time": "2021-05-26 19:02:27.576318", "score": "0.9992", "loss": "0.0038", "code": "LinkPacket pack() { kekPacket(MAVLINK_MSG_LENGTH);A96;for (i= 0; ith; i++) { packByte(data[i]); } return packet; }", "n_tokens": 114, "n_pass": [153, 20, 18]}
{"time": "2021-05-26 19:02:30.164279", "score": "0.9998", "loss": "0.0012", "code": "LinkPacket pack() { kekPacket(MAVLINK_MSG_LENGTH);A96;for (i= 0; ith; i++) { pe(data[i]); } return packet; }", "n_tokens": 108, "n_pass": [156, 21, 19]}
{"time": "2021-05-26 19:02:32.740434", "score": "0.9999", "loss": "0.0008", "code": "LinkPacket pack() { kekPacket(MAVLINK_MSG_LENGTH);A96;for (i= 0; ith; i++) { pe(data[i]); } retuket; }", "n_tokens": 102, "n_pass": [160, 22, 20]}
{"time": "2021-05-26 19:02:35.310655", "score": "0.9999", "loss": "0.0008", "code": "acket pack() { kekPacket(MAVLINK_MSG_LENGTH);A96;for (i= 0; ith; i++) { pe(data[i]); } retuket; }", "n_tokens": 97, "n_pass": [162, 23, 21]}
{"time": "2021-05-26 19:02:38.657086", "score": "0.9999", "loss": "0.0008", "code": "acket pack() { cket(MAVLINK_MSG_LENGTH);A96;for (i= 0; ith; i++) { pe(data[i]); } retuket; }", "n_tokens": 92, "n_pass": [166, 24, 22]}
{"time": "2021-05-26 19:02:49.897200", "score": "0.8581", "loss": "0.5188", "code": "acket pack() {ket(MAVLINK_MSG_LENGTH);A96;for (i= 0; ith; i++) { pe(data[i]); } retuket; }", "n_tokens": 90, "n_pass": [219, 28, 23]}
{"time": "2021-05-26 19:02:52.499389", "score": "0.9998", "loss": "0.001", "code": "acket pack() {t(MAVLINK_MSG_LENGTH);A96;for (i= 0; ith; i++) { pe(data[i]); } retuket; }", "n_tokens": 88, "n_pass": [220, 29, 24]}
{"time": "2021-05-26 19:03:10.598833", "score": "1.0", "loss": "0.0", "code": "acket pack() {t(MAVLINK_MSG_LENGTH);A96;for (i; ith; i++) { pe(data[i]); } retuket; }", "n_tokens": 85, "n_pass": [232, 36, 25]}
{"time": "2021-05-26 19:03:13.175014", "score": "1.0", "loss": "0.0", "code": "acket pack() {t(MAVLINK_MSG_LENGTH);A96;for (i; ith; i++) { pe(d[i]); } retuket; }", "n_tokens": 82, "n_pass": [239, 37, 26]}
{"time": "2021-05-26 19:03:15.752226", "score": "1.0", "loss": "0.0", "code": "acket pack() {t(MAVLINK_MSG_LENGTH);A96;for (i; ith; i++) { pe(d); } retuket; }", "n_tokens": 79, "n_pass": [240, 38, 27]}
{"time": "2021-05-26 19:03:18.346812", "score": "1.0", "loss": "0.0", "code": "acket pack() {t(MAVLINK_MSG_LENGTH);A96;for (i; ith; i++) { pe(d); } rket; }", "n_tokens": 76, "n_pass": [243, 39, 28]}
{"time": "2021-05-26 19:03:20.917121", "score": "1.0", "loss": "0.0", "code": "acket pack() {t(MAVLINK_MSG_LENGTH);A96;for (i; ith; i++) { pe(d); } r; }", "n_tokens": 73, "n_pass": [244, 40, 29]}
{"time": "2021-05-26 19:03:23.507370", "score": "0.9979", "loss": "0.0055", "code": "ket pack() {t(MAVLINK_MSG_LENGTH);A96;for (i; ith; i++) { pe(d); } r; }", "n_tokens": 71, "n_pass": [246, 41, 30]}
{"time": "2021-05-26 19:03:26.084066", "score": "1.0", "loss": "0.0", "code": "t pack() {t(MAVLINK_MSG_LENGTH);A96;for (i; ith; i++) { pe(d); } r; }", "n_tokens": 69, "n_pass": [247, 42, 31]}
{"time": "2021-05-26 19:03:49.038293", "score": "1.0", "loss": "0.0", "code": "t pack(){t(MAVLINK_MSG_LENGTH);A96;for (i; ith; i++) { pe(d); } r; }", "n_tokens": 68, "n_pass": [331, 49, 32]}
{"time": "2021-05-26 19:03:51.625844", "score": "0.9999", "loss": "0.0002", "code": "t pack(){(MAVLINK_MSG_LENGTH);A96;for (i; ith; i++) { pe(d); } r; }", "n_tokens": 67, "n_pass": [332, 50, 33]}
{"time": "2021-05-26 19:04:12.155818", "score": "0.9999", "loss": "0.0002", "code": "t pack(){(MAVLINKMSG_LENGTH);A96;for (i; ith; i++) { pe(d); } r; }", "n_tokens": 66, "n_pass": [341, 58, 34]}
{"time": "2021-05-26 19:04:22.446131", "score": "0.9999", "loss": "0.0002", "code": "t pack(){(MAVLINKMSGLENGTH);A96;for (i; ith; i++) { pe(d); } r; }", "n_tokens": 65, "n_pass": [345, 62, 35]}
{"time": "2021-05-26 19:04:40.885573", "score": "0.9999", "loss": "0.0002", "code": "t pack(){(MAVLINKMSGLENGTH);A;for (i; ith; i++) { pe(d); } r; }", "n_tokens": 63, "n_pass": [354, 69, 36]}
{"time": "2021-05-26 19:04:43.486903", "score": "1.0", "loss": "0.0", "code": "t pack(){(MAVLINKMSGLENGTH);A;for (i;th; i++) { pe(d); } r; }", "n_tokens": 61, "n_pass": [359, 70, 37]}
{"time": "2021-05-26 19:04:46.055065", "score": "1.0", "loss": "0.0", "code": "t pack(){(MAVLINKMSGLENGTH);A;for (i;; i++) { pe(d); } r; }", "n_tokens": 59, "n_pass": [360, 71, 38]}
{"time": "2021-05-26 19:04:48.627755", "score": "1.0", "loss": "0.0001", "code": "t pack(){(MAVLINKMSGLENGTH);A;for (i;; i++) {e(d); } r; }", "n_tokens": 57, "n_pass": [365, 72, 39]}
{"time": "2021-05-26 19:04:51.199303", "score": "1.0", "loss": "0.0001", "code": "t pack(){(MAVLINKMSGLENGTH);A;for (i;; i++) {e(d); }  }", "n_tokens": 55, "n_pass": [370, 73, 40]}
{"time": "2021-05-26 19:05:37.287081", "score": "1.0", "loss": "0.0001", "code": "t pack(){(MAVLINKMSGLENGTH);for (i;; i++) {e(d); }  }", "n_tokens": 53, "n_pass": [399, 90, 41]}
{"time": "2021-05-26 19:06:26.951050", "score": "1.0", "loss": "0.0001", "code": "t pack(){(MAVLINKMSGLENGTH);for (i;;i++) {e(d); }  }", "n_tokens": 52, "n_pass": [467, 107, 42]}
{"time": "2021-05-26 19:06:29.534335", "score": "1.0", "loss": "0.0001", "code": "t pack(){(MAVLINKMSGLENGTH);for (i;;i++){e(d); }  }", "n_tokens": 51, "n_pass": [472, 108, 43]}
{"time": "2021-05-26 19:06:32.089302", "score": "1.0", "loss": "0.0", "code": "t pack(){(MAVLINKMSGLENGTH);for (i;;i++){(d); }  }", "n_tokens": 50, "n_pass": [474, 109, 44]}
{"time": "2021-05-26 19:06:34.655283", "score": "1.0", "loss": "0.0", "code": "t pack(){(MAVLINKMSGLENGTH);for (i;;i++){(d);}  }", "n_tokens": 49, "n_pass": [479, 110, 45]}
{"time": "2021-05-26 19:06:37.213850", "score": "1.0", "loss": "0.0", "code": "t pack(){(MAVLINKMSGLENGTH);for (i;;i++){(d);} }", "n_tokens": 48, "n_pass": [481, 111, 46]}
{"time": "2021-05-26 19:06:39.772542", "score": "1.0", "loss": "0.0", "code": "t pack(){(MAVLINKMSGLENGTH);for (i;;i++){(d);}}", "n_tokens": 47, "n_pass": [482, 112, 47]}
{"time": "2021-05-26 19:07:25.608266", "score": "1.0", "loss": "0.0", "code": "t pack(){(MAVLINKMSGLENGTH);for(i;;i++){(d);}}", "n_tokens": 46, "n_pass": [515, 129, 48]}
{"time": "2021-05-26 19:07:28.157456", "score": "1.0", "loss": "0.0", "code": "t pack(){(MAVLINKMSGLENGTH);for(;;i++){(d);}}", "n_tokens": 45, "n_pass": [517, 130, 49]}

Minimal simplified code:
t pack(){(MAVLINKMSGLENGTH);for(;;i++){(d);}}

