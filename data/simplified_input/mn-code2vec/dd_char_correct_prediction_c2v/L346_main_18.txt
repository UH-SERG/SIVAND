
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/JeffLi1993__java-core-learning-example/src/main/java/org/javacore/thread/SimplePriorities_main.java
method_name = main
method_body = public static void main(String[] args) { ExecutorService exec = Executors.newCachedThreadPool(); for (int i = 0; i < 5; i++) exec.execute(new SimplePriorities(Thread.MIN_PRIORITY)); exec.execute(new SimplePriorities(Thread.MAX_PRIORITY)); exec.shutdown(); }
predict, score, loss = main, 0.9977743029594421, 0.002393716247752309

Trace of simplified code(s):
{"time": "2021-02-25 04:41:19.849207", "score": "0.9773", "loss": "0.0248", "code": "public static void main(String[] args) { ExecutorService exec = Executors.newCachedThreadPool(); for (int i = 0; i < 5; i++) exec.execute(new SimplePriorities(Thread.MIN_PRIORITY)); exec.execute(new SimplePriorities(Thread.MAX_PRIORITY)); exec.shutdown(); }", "n_tokens": 257, "n_pass": [1, 1, 1]}
{"time": "2021-02-25 04:41:22.542671", "score": "0.7675", "loss": "0.2754", "code": "public static void main(String[] args) { ExecutorService exec = c.execute(new SimplePriorities(Thread.MIN_PRIORITY)); exec.execute(new SimplePriorities(Thread.MAX_PRIORITY)); exec.shutdown(); }", "n_tokens": 193, "n_pass": [9, 2, 2]}
{"time": "2021-02-25 04:41:25.190237", "score": "0.8764", "loss": "0.137", "code": "public static void main(String[] args) { ExecutorService exec = te(new SimplePriorities(Thread.MAX_PRIORITY)); exec.shutdown(); }", "n_tokens": 129, "n_pass": [10, 3, 3]}
{"time": "2021-02-25 04:41:27.814683", "score": "0.3918", "loss": "1.0328", "code": "id main(String[] args) { ExecutorService exec = te(new SimplePriorities(Thread.MAX_PRIORITY)); exec.shutdown(); }", "n_tokens": 113, "n_pass": [31, 4, 4]}
{"time": "2021-02-25 04:41:30.491001", "score": "0.6293", "loss": "0.9248", "code": "id main(String[] args) { Executote(new SimplePriorities(Thread.MAX_PRIORITY)); exec.shutdown(); }", "n_tokens": 97, "n_pass": [33, 5, 5]}
{"time": "2021-02-25 04:41:33.107229", "score": "0.6293", "loss": "0.9248", "code": "id main(String[] args) { Executote(new Sorities(Thread.MAX_PRIORITY)); exec.shutdown(); }", "n_tokens": 89, "n_pass": [53, 6, 6]}
{"time": "2021-02-25 04:41:35.774628", "score": "0.976", "loss": "0.0365", "code": "id main(String[] args) { Executote(new Sorities(AX_PRIORITY)); exec.shutdown(); }", "n_tokens": 81, "n_pass": [55, 7, 7]}
{"time": "2021-02-25 04:41:38.433030", "score": "0.8497", "loss": "0.6042", "code": "id main(String[] args) { Executote(new Sorities(ITY)); exec.shutdown(); }", "n_tokens": 73, "n_pass": [56, 8, 8]}
{"time": "2021-02-25 04:41:43.690411", "score": "0.8622", "loss": "0.5232", "code": "id main(String[] args) {te(new Sorities(ITY)); exec.shutdown(); }", "n_tokens": 65, "n_pass": [63, 10, 9]}
{"time": "2021-02-25 04:41:49.013618", "score": "0.9889", "loss": "0.0529", "code": "id main(String[] args) {te(norities(ITY)); exec.shutdown(); }", "n_tokens": 61, "n_pass": [89, 12, 10]}
{"time": "2021-02-25 04:41:51.626409", "score": "0.9889", "loss": "0.0529", "code": "id main(String[] args) {te(nies(ITY)); exec.shutdown(); }", "n_tokens": 57, "n_pass": [90, 13, 11]}
{"time": "2021-02-25 04:41:54.286963", "score": "0.552", "loss": "1.4547", "code": "id main(String[] args) {te(nies(ITY)); eshutdown(); }", "n_tokens": 53, "n_pass": [94, 14, 12]}
{"time": "2021-02-25 04:41:56.893309", "score": "0.552", "loss": "1.4547", "code": "id main(String[] args) {te(nies(ITY)); edown(); }", "n_tokens": 49, "n_pass": [95, 15, 13]}
{"time": "2021-02-25 04:41:59.493002", "score": "0.5461", "loss": "1.411", "code": "id main(String[] args) {te(nies(ITY)); e(); }", "n_tokens": 45, "n_pass": [96, 16, 14]}
{"time": "2021-02-25 04:42:10.380719", "score": "0.4117", "loss": "1.834", "code": "id main(String[] args) {te(nies(ITY)); e; }", "n_tokens": 43, "n_pass": [130, 20, 15]}
{"time": "2021-02-25 04:42:14.227174", "score": "0.2261", "loss": "2.9092", "code": "id main(ring[] args) {te(nies(ITY)); e; }", "n_tokens": 41, "n_pass": [135, 21, 16]}
{"time": "2021-02-25 04:42:19.459707", "score": "0.556", "loss": "1.2493", "code": "id main(ri[] args) {te(nies(ITY)); e; }", "n_tokens": 39, "n_pass": [137, 23, 17]}
{"time": "2021-02-25 04:42:22.085948", "score": "0.2456", "loss": "2.0295", "code": "id main(ri args) {te(nies(ITY)); e; }", "n_tokens": 37, "n_pass": [138, 24, 18]}
{"time": "2021-02-25 04:42:29.960156", "score": "0.2942", "loss": "1.9895", "code": "id main(ri args) {te(ns(ITY)); e; }", "n_tokens": 35, "n_pass": [145, 27, 19]}
{"time": "2021-02-25 04:42:35.196844", "score": "0.2963", "loss": "1.9746", "code": "id main(ri args) {te(ns(ITY));; }", "n_tokens": 33, "n_pass": [150, 29, 20]}
{"time": "2021-02-25 04:42:48.531613", "score": "0.2963", "loss": "1.9746", "code": "id main(ri args) {te(ns(ITY)); }", "n_tokens": 32, "n_pass": [199, 33, 21]}
{"time": "2021-02-25 04:42:51.123473", "score": "0.7499", "loss": "0.5636", "code": "d main(ri args) {te(ns(ITY)); }", "n_tokens": 31, "n_pass": [200, 34, 22]}
{"time": "2021-02-25 04:42:56.053840", "score": "0.4827", "loss": "1.3676", "code": "d main(i args) {te(ns(ITY)); }", "n_tokens": 30, "n_pass": [208, 35, 23]}
{"time": "2021-02-25 04:43:09.139882", "score": "0.4827", "loss": "1.3676", "code": "d main(i args){te(ns(ITY)); }", "n_tokens": 29, "n_pass": [216, 40, 24]}
{"time": "2021-02-25 04:43:14.356349", "score": "0.3442", "loss": "1.7077", "code": "d main(i args){t(ns(ITY)); }", "n_tokens": 28, "n_pass": [219, 42, 25]}
{"time": "2021-02-25 04:43:16.952252", "score": "0.3374", "loss": "1.5785", "code": "d main(i args){t(s(ITY)); }", "n_tokens": 27, "n_pass": [221, 43, 26]}
{"time": "2021-02-25 04:43:19.617766", "score": "0.8966", "loss": "0.1805", "code": "d main(i args){t((ITY)); }", "n_tokens": 26, "n_pass": [222, 44, 27]}
{"time": "2021-02-25 04:43:45.942118", "score": "0.8966", "loss": "0.1805", "code": "d main(i args){t((ITY));}", "n_tokens": 25, "n_pass": [250, 53, 28]}

Minimal simplified code:
d main(i args){t((ITY));}

