
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/JeffLi1993__java-core-learning-example/src/main/java/org/javacore/collection/set/HashSetObjT_main.java
method_name = main
method_body = @SuppressWarnings({ "rawtypes", "unchecked" }) public static void main(String[] args) { HashSet objs = new HashSet(); objs.add(new A()); objs.add(new B()); objs.add(new C()); objs.add(new A()); objs.add(new B()); objs.add(new C()); System.out.println("HashSet Elements:"); System.out.print("\t" + objs + "\n"); }
predict, score, loss = main, 0.9682983756065369, 0.042609069496393204

Trace of simplified code(s):
{"time": "2021-02-21 23:32:36.364406", "score": "0.9869", "loss": "0.0171", "code": "@SuppressWarnings({ \"rawtypes\", \"unchecked\" }) public static void main(String[] args) { HashSet objs = new HashSet(); objs.add(new A()); objs.add(new B()); objs.add(new C()); objs.add(new A()); objs.add(new B()); objs.add(new C()); System.out.println(\"HashSet Elements:\"); System.out.print(\"\\t\" + objs + \"\\n\"); }", "n_tokens": 312, "n_pass": [1, 1, 1]}
{"time": "2021-02-21 23:32:39.035101", "score": "0.9978", "loss": "0.0034", "code": "@SuppressWarnings({ \"rawtypes\", \"unchecked\" }) public static void main(String[] args) { HashSet objs = new HashSet(); objs.add(new A()); objs.add(new B()); stem.out.println(\"HashSet Elements:\"); System.out.print(\"\\t\" + objs + \"\\n\"); }", "n_tokens": 234, "n_pass": [10, 2, 2]}
{"time": "2021-02-21 23:32:41.821143", "score": "0.9885", "loss": "0.0163", "code": "@SuppressWarnings({ \"rawtypes\", \"unchecked\" }) public static void main(String[] args) { HashSet objs = new HashSet(); objs.add(new A()); objs.add(new B()); System.out.print(\"\\t\" + objs + \"\\n\"); }", "n_tokens": 195, "n_pass": [19, 3, 3]}
{"time": "2021-02-21 23:32:44.484212", "score": "0.9944", "loss": "0.0088", "code": "@SuppressWarnings({ \"rawtypes\", \"unchecked\" }) public static void main(String[] args) { HashSet objs = new HashSet();System.out.print(\"\\t\" + objs + \"\\n\"); }", "n_tokens": 156, "n_pass": [23, 4, 4]}
{"time": "2021-02-21 23:32:47.144757", "score": "0.9947", "loss": "0.0077", "code": "@SuppressWarnings({ \"rawtypes\", \"unchecked\" }) public static void main(String[] args) { HashSet ;System.out.print(\"\\t\" + objs + \"\\n\"); }", "n_tokens": 136, "n_pass": [43, 5, 5]}
{"time": "2021-02-21 23:32:49.787690", "score": "0.9944", "loss": "0.0083", "code": "@SuppressWarnings({ \"rawtyphecked\" }) public static void main(String[] args) { HashSet ;System.out.print(\"\\t\" + objs + \"\\n\"); }", "n_tokens": 127, "n_pass": [72, 6, 6]}
{"time": "2021-02-21 23:32:52.826587", "score": "0.9944", "loss": "0.0083", "code": "@SuppressWarnings({ \"rawtypd\" }) public static void main(String[] args) { HashSet ;System.out.print(\"\\t\" + objs + \"\\n\"); }", "n_tokens": 122, "n_pass": [112, 7, 7]}
{"time": "2021-02-21 23:32:55.579538", "score": "0.9362", "loss": "0.0936", "code": "@SuppressWarnings({ \"rawtypd\" }) public stvoid main(String[] args) { HashSet ;System.out.print(\"\\t\" + objs + \"\\n\"); }", "n_tokens": 117, "n_pass": [115, 8, 8]}
{"time": "2021-02-21 23:32:58.618424", "score": "0.6137", "loss": "0.701", "code": "@SuppressWarnings({ \"rawtypd\" }) public stvoid main(g[] args) { HashSet ;System.out.print(\"\\t\" + objs + \"\\n\"); }", "n_tokens": 112, "n_pass": [118, 9, 9]}
{"time": "2021-02-21 23:33:01.247409", "score": "0.6104", "loss": "0.7106", "code": "@SuppressWarnings({ \"rawtypd\" }) public stvoid main(g[] args) { Has;System.out.print(\"\\t\" + objs + \"\\n\"); }", "n_tokens": 107, "n_pass": [122, 10, 10]}
{"time": "2021-02-21 23:33:03.897002", "score": "0.8903", "loss": "0.1875", "code": "@SuppressWarnings({ \"rawtypd\" }) public stvoid main(g[] args) { Hasem.out.print(\"\\t\" + objs + \"\\n\"); }", "n_tokens": 102, "n_pass": [123, 11, 11]}
{"time": "2021-02-21 23:33:06.568502", "score": "0.4697", "loss": "0.9495", "code": "@SuppressWarnings({ \"rawtypd\" }) public stvoid main(g[] args) { Hast.print(\"\\t\" + objs + \"\\n\"); }", "n_tokens": 97, "n_pass": [124, 12, 12]}
{"time": "2021-02-21 23:33:11.847270", "score": "0.7112", "loss": "0.4286", "code": "@SuppressWarnings({ \"rawtypd\" }) public stvoid main(g[] args) { Hast.print(\"\\t\" + + \"\\n\"); }", "n_tokens": 92, "n_pass": [128, 14, 13]}
{"time": "2021-02-21 23:33:14.479252", "score": "0.6993", "loss": "0.4519", "code": "@SupsWarnings({ \"rawtypd\" }) public stvoid main(g[] args) { Hast.print(\"\\t\" + + \"\\n\"); }", "n_tokens": 88, "n_pass": [132, 15, 14]}
{"time": "2021-02-21 23:33:17.101920", "score": "0.6993", "loss": "0.4519", "code": "@Supnings({ \"rawtypd\" }) public stvoid main(g[] args) { Hast.print(\"\\t\" + + \"\\n\"); }", "n_tokens": 84, "n_pass": [133, 16, 15]}
{"time": "2021-02-21 23:33:19.719343", "score": "0.6861", "loss": "0.4795", "code": "@Sup({ \"rawtypd\" }) public stvoid main(g[] args) { Hast.print(\"\\t\" + + \"\\n\"); }", "n_tokens": 79, "n_pass": [134, 17, 16]}
{"time": "2021-02-21 23:33:22.380059", "score": "0.6765", "loss": "0.4958", "code": "@Sup({ \"rd\" }) public stvoid main(g[] args) { Hast.print(\"\\t\" + + \"\\n\"); }", "n_tokens": 74, "n_pass": [136, 18, 17]}
{"time": "2021-02-21 23:33:25.015070", "score": "0.6765", "loss": "0.4958", "code": "@Sup({ \"rd\" }) publvoid main(g[] args) { Hast.print(\"\\t\" + + \"\\n\"); }", "n_tokens": 69, "n_pass": [139, 19, 18]}
{"time": "2021-02-21 23:33:30.709481", "score": "0.9101", "loss": "0.1309", "code": "@Sup({ \"rd\" })void main(g[] args) { Hast.print(\"\\t\" + + \"\\n\"); }", "n_tokens": 64, "n_pass": [153, 21, 19]}
{"time": "2021-02-21 23:33:36.392829", "score": "0.2841", "loss": "1.5001", "code": "@Sup({ \"rd\" })id main(g[] args) { Hast.print(\"\\t\" + + \"\\n\"); }", "n_tokens": 62, "n_pass": [194, 23, 20]}
{"time": "2021-02-21 23:33:45.469188", "score": "0.9607", "loss": "0.0527", "code": "@Sup({ \"rd\" })id main(g[] args) { Hastint(\"\\t\" + + \"\\n\"); }", "n_tokens": 59, "n_pass": [205, 26, 21]}
{"time": "2021-02-21 23:33:50.724517", "score": "0.962", "loss": "0.0502", "code": "@S({ \"rd\" })id main(g[] args) { Hastint(\"\\t\" + + \"\\n\"); }", "n_tokens": 57, "n_pass": [214, 28, 22]}
{"time": "2021-02-21 23:33:53.358685", "score": "0.962", "loss": "0.0501", "code": "@S({ \"\" })id main(g[] args) { Hastint(\"\\t\" + + \"\\n\"); }", "n_tokens": 55, "n_pass": [217, 29, 23]}
{"time": "2021-02-21 23:34:07.278701", "score": "0.962", "loss": "0.0501", "code": "@S({ \"\"})id main(g[] args) { Hastint(\"\\t\" + + \"\\n\"); }", "n_tokens": 54, "n_pass": [285, 33, 24]}
{"time": "2021-02-21 23:34:09.914133", "score": "0.9912", "loss": "0.0106", "code": "@S({ \"\"})d main(g[] args) { Hastint(\"\\t\" + + \"\\n\"); }", "n_tokens": 53, "n_pass": [288, 34, 25]}
{"time": "2021-02-21 23:34:14.935149", "score": "0.9912", "loss": "0.0106", "code": "@S({ \"\"})d main(g[]args) { Hastint(\"\\t\" + + \"\\n\"); }", "n_tokens": 52, "n_pass": [299, 35, 26]}
{"time": "2021-02-21 23:34:17.563486", "score": "0.7363", "loss": "0.6486", "code": "@S({ \"\"})d main(g[]rgs) { Hastint(\"\\t\" + + \"\\n\"); }", "n_tokens": 51, "n_pass": [300, 36, 27]}
{"time": "2021-02-21 23:34:28.012607", "score": "0.7363", "loss": "0.6486", "code": "@S({ \"\"})d main(g[]rgs){ Hastint(\"\\t\" + + \"\\n\"); }", "n_tokens": 50, "n_pass": [305, 40, 28]}
{"time": "2021-02-21 23:34:30.628556", "score": "0.7363", "loss": "0.6486", "code": "@S({ \"\"})d main(g[]rgs){Hastint(\"\\t\" + + \"\\n\"); }", "n_tokens": 49, "n_pass": [307, 41, 29]}
{"time": "2021-02-21 23:34:46.332135", "score": "0.7295", "loss": "0.6697", "code": "@S({ \"\"})d main(g[]rgs){Hastint(\"\" + + \"\\n\"); }", "n_tokens": 47, "n_pass": [314, 47, 30]}
{"time": "2021-02-21 23:34:48.932538", "score": "0.7384", "loss": "0.6922", "code": "@S({ \"\"})d main(g[]rgs){Hastint(\"\" + \"\\n\"); }", "n_tokens": 45, "n_pass": [316, 48, 31]}
{"time": "2021-02-21 23:34:51.543005", "score": "0.7384", "loss": "0.6922", "code": "@S({\"\"})d main(g[]rgs){Hastint(\"\" + \"\\n\"); }", "n_tokens": 44, "n_pass": [326, 49, 32]}
{"time": "2021-02-21 23:35:29.652748", "score": "0.7384", "loss": "0.6922", "code": "@S({\"\"})d main(g[]rgs){Hastint(\"\"+ \"\\n\"); }", "n_tokens": 43, "n_pass": [387, 62, 33]}
{"time": "2021-02-21 23:35:32.258538", "score": "0.7384", "loss": "0.6922", "code": "@S({\"\"})d main(g[]rgs){Hastint(\"\"+\"\\n\"); }", "n_tokens": 42, "n_pass": [389, 63, 34]}
{"time": "2021-02-21 23:35:34.848819", "score": "0.741", "loss": "0.7289", "code": "@S({\"\"})d main(g[]rgs){Hastint(\"\"+\"n\"); }", "n_tokens": 41, "n_pass": [391, 64, 35]}
{"time": "2021-02-21 23:35:37.470080", "score": "0.7384", "loss": "0.6922", "code": "@S({\"\"})d main(g[]rgs){Hastint(\"\"+\"\"); }", "n_tokens": 40, "n_pass": [392, 65, 36]}
{"time": "2021-02-21 23:35:40.080490", "score": "0.7384", "loss": "0.6922", "code": "@S({\"\"})d main(g[]rgs){Hastint(\"\"+\"\");}", "n_tokens": 39, "n_pass": [396, 66, 37]}

Minimal simplified code:
@S({""})d main(g[]rgs){Hastint(""+"");}

