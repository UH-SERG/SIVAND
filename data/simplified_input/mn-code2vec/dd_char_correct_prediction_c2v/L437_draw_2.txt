
path = /scratch/rabin/data/code2vec/transforms/Methods/java-large/test/bladecoder__bladecoder-adventure-engine/blade-engine/src/com/bladecoder/engine/model/SceneLayer_draw.java
method_name = draw
method_body = public void draw(SpriteBatch spriteBatch) { if (!visible) return; for (BaseActor a : actors) { if (a instanceof SpriteActor) ((SpriteActor) a).draw(spriteBatch); } }
predict, score, loss = draw, 0.825880765914917, 0.3861054480075836

Trace of simplified code(s):
{"time": "2021-05-26 11:24:47.898117", "score": "0.8259", "loss": "0.3861", "code": "public void draw(SpriteBatch spriteBatch) { if (!visible) return; for (BaseActor a : actors) { if (a instanceof SpriteActor) ((SpriteActor) a).draw(spriteBatch); } }", "n_tokens": 165, "n_pass": [1, 1, 1]}
{"time": "2021-05-26 11:24:50.949454", "score": "0.7845", "loss": "0.4763", "code": "d draw(SpriteBatch spriteBatch) { if (!visible) return; for (BaseActor a : actors) { if (a instanceof SpriteActor) ((SpriteActor) a).draw(spriteBatch); } }", "n_tokens": 155, "n_pass": [44, 2, 2]}
{"time": "2021-05-26 11:24:53.616351", "score": "0.9438", "loss": "0.1109", "code": "d draw(SpriteBatch s) { if (!visible) return; for (BaseActor a : actors) { if (a instanceof SpriteActor) ((SpriteActor) a).draw(spriteBatch); } }", "n_tokens": 145, "n_pass": [46, 3, 3]}
{"time": "2021-05-26 11:24:56.277758", "score": "0.9445", "loss": "0.1083", "code": "d draw(SpriteBatch s) { if (!ve) return; for (BaseActor a : actors) { if (a instanceof SpriteActor) ((SpriteActor) a).draw(spriteBatch); } }", "n_tokens": 140, "n_pass": [91, 4, 4]}
{"time": "2021-05-26 11:24:58.944368", "score": "0.9346", "loss": "0.1289", "code": "d draw(SpriteBatch s) { if (!ve) return; for (Base a : actors) { if (a instanceof SpriteActor) ((SpriteActor) a).draw(spriteBatch); } }", "n_tokens": 135, "n_pass": [95, 5, 5]}
{"time": "2021-05-26 11:25:01.590973", "score": "0.9549", "loss": "0.0775", "code": "d draw(SpriteBatch s) { if (!ve) return; for (Base a : s) { if (a instanceof SpriteActor) ((SpriteActor) a).draw(spriteBatch); } }", "n_tokens": 130, "n_pass": [97, 6, 6]}
{"time": "2021-05-26 11:25:04.303421", "score": "0.9", "loss": "0.1248", "code": "d draw(SpriteBatch s) { if (!ve) return; for (Base a : s) { if (a instanceof Sprtor) ((SpriteActor) a).draw(spriteBatch); } }", "n_tokens": 125, "n_pass": [103, 7, 7]}
{"time": "2021-05-26 11:25:06.925412", "score": "0.9317", "loss": "0.0836", "code": "d draw(SpriteBatch s) { if (!ve) return; for (Base a : s) { if (a instanceof Sprtor) ((Sprtor) a).draw(spriteBatch); } }", "n_tokens": 120, "n_pass": [106, 8, 8]}
{"time": "2021-05-26 11:25:09.576772", "score": "0.771", "loss": "0.3969", "code": "d draw(SpriteBatch s) { if (!ve) return; for (Base a : s) { if (a instanceof Sprtor) ((Sprtor) a).draw(sprit); } }", "n_tokens": 114, "n_pass": [110, 9, 9]}
{"time": "2021-05-26 11:25:12.628358", "score": "0.9804", "loss": "0.0525", "code": "d draw(Sprtch s) { if (!ve) return; for (Base a : s) { if (a instanceof Sprtor) ((Sprtor) a).draw(sprit); } }", "n_tokens": 109, "n_pass": [114, 10, 10]}
{"time": "2021-05-26 11:25:15.719306", "score": "0.9804", "loss": "0.0525", "code": "d draw(Stch s) { if (!ve) return; for (Base a : s) { if (a instanceof Sprtor) ((Sprtor) a).draw(sprit); } }", "n_tokens": 107, "n_pass": [178, 11, 11]}
{"time": "2021-05-26 11:25:18.396603", "score": "0.9804", "loss": "0.0487", "code": "d draw(Sh s) { if (!ve) return; for (Base a : s) { if (a instanceof Sprtor) ((Sprtor) a).draw(sprit); } }", "n_tokens": 105, "n_pass": [179, 12, 12]}
{"time": "2021-05-26 11:25:21.076954", "score": "0.9744", "loss": "0.0684", "code": "d draw(Sh s) { if (!ve) turn; for (Base a : s) { if (a instanceof Sprtor) ((Sprtor) a).draw(sprit); } }", "n_tokens": 103, "n_pass": [188, 13, 13]}
{"time": "2021-05-26 11:25:23.717237", "score": "0.9788", "loss": "0.054", "code": "d draw(Sh s) { if (!ve) rn; for (Base a : s) { if (a instanceof Sprtor) ((Sprtor) a).draw(sprit); } }", "n_tokens": 101, "n_pass": [189, 14, 14]}
{"time": "2021-05-26 11:25:26.355900", "score": "0.9804", "loss": "0.0487", "code": "d draw(Sh s) { if (!ve) ; for (Base a : s) { if (a instanceof Sprtor) ((Sprtor) a).draw(sprit); } }", "n_tokens": 99, "n_pass": [190, 15, 15]}
{"time": "2021-05-26 11:25:29.033168", "score": "0.9209", "loss": "0.2194", "code": "d draw(Sh s) { if (!ve) ; for (Base a : s) { if (a instanceof Sor) ((Sprtor) a).draw(sprit); } }", "n_tokens": 96, "n_pass": [204, 16, 16]}
{"time": "2021-05-26 11:25:31.716344", "score": "0.9024", "loss": "0.3172", "code": "d draw(Sh s) { if (!ve) ; for (Base a : s) { if (a instanceof Sor) ((tor) a).draw(sprit); } }", "n_tokens": 93, "n_pass": [207, 17, 17]}
{"time": "2021-05-26 11:25:37.007237", "score": "0.8953", "loss": "0.2753", "code": "d draw(Sh s) { if (!ve) ; for (Base a : s) { if (a instanceof Sor) ((tor) a).draw(sp); } }", "n_tokens": 90, "n_pass": [213, 19, 18]}
{"time": "2021-05-26 11:25:40.961265", "score": "0.8354", "loss": "0.4556", "code": "d draw(Sh s) {f (!ve) ; for (Base a : s) { if (a instanceof Sor) ((tor) a).draw(sp); } }", "n_tokens": 88, "n_pass": [223, 20, 19]}
{"time": "2021-05-26 11:25:43.595751", "score": "0.8867", "loss": "0.2945", "code": "d draw(Sh s) {(!ve) ; for (Base a : s) { if (a instanceof Sor) ((tor) a).draw(sp); } }", "n_tokens": 86, "n_pass": [224, 21, 20]}
{"time": "2021-05-26 11:25:54.649860", "score": "0.8827", "loss": "0.3066", "code": "d draw(Sh s) {(ve) ; for (Base a : s) { if (a instanceof Sor) ((tor) a).draw(sp); } }", "n_tokens": 85, "n_pass": [322, 23, 21]}
{"time": "2021-05-26 11:25:57.400368", "score": "0.882", "loss": "0.3084", "code": "d draw(Sh s) {(e) ; for (Base a : s) { if (a instanceof Sor) ((tor) a).draw(sp); } }", "n_tokens": 84, "n_pass": [323, 24, 22]}
{"time": "2021-05-26 11:26:00.048553", "score": "0.882", "loss": "0.3084", "code": "d draw(Sh s) {(e); for (Base a : s) { if (a instanceof Sor) ((tor) a).draw(sp); } }", "n_tokens": 83, "n_pass": [326, 25, 23]}
{"time": "2021-05-26 11:26:02.683925", "score": "0.882", "loss": "0.3084", "code": "d draw(Sh s) {(e);for (Base a : s) { if (a instanceof Sor) ((tor) a).draw(sp); } }", "n_tokens": 82, "n_pass": [328, 26, 24]}
{"time": "2021-05-26 11:26:05.315126", "score": "0.882", "loss": "0.3084", "code": "d draw(Sh s) {(e);for(Base a : s) { if (a instanceof Sor) ((tor) a).draw(sp); } }", "n_tokens": 81, "n_pass": [332, 27, 25]}
{"time": "2021-05-26 11:26:08.008717", "score": "0.8081", "loss": "0.4794", "code": "d draw(Sh s) {(e);for(ase a : s) { if (a instanceof Sor) ((tor) a).draw(sp); } }", "n_tokens": 80, "n_pass": [334, 28, 26]}
{"time": "2021-05-26 11:26:10.647660", "score": "0.8471", "loss": "0.3933", "code": "d draw(Sh s) {(e);for(se a : s) { if (a instanceof Sor) ((tor) a).draw(sp); } }", "n_tokens": 79, "n_pass": [335, 29, 27]}
{"time": "2021-05-26 11:26:13.283743", "score": "0.8441", "loss": "0.4004", "code": "d draw(Sh s) {(e);for(e a : s) { if (a instanceof Sor) ((tor) a).draw(sp); } }", "n_tokens": 78, "n_pass": [336, 30, 28]}
{"time": "2021-05-26 11:26:15.951160", "score": "0.8441", "loss": "0.4004", "code": "d draw(Sh s) {(e);for(e a: s) { if (a instanceof Sor) ((tor) a).draw(sp); } }", "n_tokens": 77, "n_pass": [340, 31, 29]}
{"time": "2021-05-26 11:26:18.594959", "score": "0.8441", "loss": "0.4004", "code": "d draw(Sh s) {(e);for(e a:s) { if (a instanceof Sor) ((tor) a).draw(sp); } }", "n_tokens": 76, "n_pass": [342, 32, 30]}
{"time": "2021-05-26 11:26:21.250997", "score": "0.8441", "loss": "0.4004", "code": "d draw(Sh s) {(e);for(e a:s){ if (a instanceof Sor) ((tor) a).draw(sp); } }", "n_tokens": 75, "n_pass": [345, 33, 31]}
{"time": "2021-05-26 11:26:23.916133", "score": "0.8441", "loss": "0.4004", "code": "d draw(Sh s) {(e);for(e a:s){if (a instanceof Sor) ((tor) a).draw(sp); } }", "n_tokens": 74, "n_pass": [347, 34, 32]}
{"time": "2021-05-26 11:26:26.568586", "score": "0.9656", "loss": "0.0643", "code": "d draw(Sh s) {(e);for(e a:s){if (a instanceof r) ((tor) a).draw(sp); } }", "n_tokens": 72, "n_pass": [357, 35, 33]}
{"time": "2021-05-26 11:26:29.205678", "score": "0.9759", "loss": "0.0423", "code": "d draw(Sh s) {(e);for(e a:s){if (a instanceof r) ((t) a).draw(sp); } }", "n_tokens": 70, "n_pass": [361, 36, 34]}
{"time": "2021-05-26 11:26:34.481834", "score": "0.9909", "loss": "0.0114", "code": "d draw(Sh s) {(e);for(e a:s){if (a instanceof r) ((t) a).draw(); } }", "n_tokens": 68, "n_pass": [367, 38, 35]}
{"time": "2021-05-26 11:26:39.614380", "score": "0.9904", "loss": "0.0118", "code": "d draw(h s) {(e);for(e a:s){if (a instanceof r) ((t) a).draw(); } }", "n_tokens": 67, "n_pass": [378, 39, 36]}
{"time": "2021-05-26 11:26:42.258407", "score": "0.9904", "loss": "0.0118", "code": "d draw(h s){(e);for(e a:s){if (a instanceof r) ((t) a).draw(); } }", "n_tokens": 66, "n_pass": [383, 40, 37]}
{"time": "2021-05-26 11:26:52.993465", "score": "0.9904", "loss": "0.0118", "code": "d draw(h s){(e);for(e a:s){if(a instanceof r) ((t) a).draw(); } }", "n_tokens": 65, "n_pass": [470, 42, 38]}
{"time": "2021-05-26 11:26:55.635455", "score": "0.9904", "loss": "0.0118", "code": "d draw(h s){(e);for(e a:s){if(a instanceof r)((t) a).draw(); } }", "n_tokens": 64, "n_pass": [487, 43, 39]}
{"time": "2021-05-26 11:26:58.279747", "score": "0.9904", "loss": "0.0118", "code": "d draw(h s){(e);for(e a:s){if(a instanceof r)((t)a).draw(); } }", "n_tokens": 63, "n_pass": [492, 44, 40]}
{"time": "2021-05-26 11:27:00.926852", "score": "0.9906", "loss": "0.0121", "code": "d draw(h s){(e);for(e a:s){if(a instanceof r)((t)).draw(); } }", "n_tokens": 62, "n_pass": [493, 45, 41]}
{"time": "2021-05-26 11:27:14.216354", "score": "0.9906", "loss": "0.0121", "code": "d draw(h s){(e);for(e a:s){if(a instanceof r)((t)).draw();} }", "n_tokens": 61, "n_pass": [503, 50, 42]}
{"time": "2021-05-26 11:27:16.874798", "score": "0.9906", "loss": "0.0121", "code": "d draw(h s){(e);for(e a:s){if(a instanceof r)((t)).draw();}}", "n_tokens": 60, "n_pass": [505, 51, 43]}

Minimal simplified code:
d draw(h s){(e);for(e a:s){if(a instanceof r)((t)).draw();}}

