
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/bcgit__bc-java/core/src/main/java/org/bouncycastle/math/ec/custom/sec/SecP160R2FieldElement_equals.java
method_name = equals
method_body = public boolean equals(Object other) { if (other == this) { return true; } if (!(other instanceof SecP160R2FieldElement)) { return false; } SecP160R2FieldElement o = (SecP160R2FieldElement) other; return Nat160.eq(x, o.x); }
predict, score, loss = equals, 0.9998326301574707, 0.00019476900342851877

Trace of simplified code(s):
{"time": "2021-02-22 09:36:10.237035", "score": "0.9998", "loss": "0.0002", "code": "public boolean equals(Object other) { if (other == this) { return true; } if (!(other instanceof SecP160R2FieldElement)) { return false; } SecP160R2FieldElement o = (SecP160R2FieldElement) other; return Nat160.eq(x, o.x); }", "n_tokens": 223, "n_pass": [1, 1, 1]}
{"time": "2021-02-22 09:36:12.868475", "score": "0.9994", "loss": "0.0007", "code": "public boolean equals(Object other) { if (other == this) { return true; } if (!(othElement)) { return false; } SecP160R2FieldElement o = (SecP160R2FieldElement) other; return Nat160.eq(x, o.x); }", "n_tokens": 195, "n_pass": [23, 2, 2]}
{"time": "2021-02-22 09:36:15.526626", "score": "0.9994", "loss": "0.0007", "code": "public boolean equals(Object other) { if (other == this) { return true; } if (!(othElement)) { return false; } Element o = (SecP160R2FieldElement) other; return Nat160.eq(x, o.x); }", "n_tokens": 181, "n_pass": [46, 3, 3]}
{"time": "2021-02-22 09:36:18.154323", "score": "0.9994", "loss": "0.0007", "code": "public boolean equals(Object other) { if (other == this) { return true; } if (!(othElement)) { return false; } Element o = (Slement) other; return Nat160.eq(x, o.x); }", "n_tokens": 167, "n_pass": [47, 4, 4]}
{"time": "2021-02-22 09:36:20.774748", "score": "0.9987", "loss": "0.0016", "code": "n equals(Object other) { if (other == this) { return true; } if (!(othElement)) { return false; } Element o = (Slement) other; return Nat160.eq(x, o.x); }", "n_tokens": 154, "n_pass": [51, 5, 5]}
{"time": "2021-02-22 09:36:23.812280", "score": "0.8478", "loss": "0.176", "code": "n equals(Object other) { if (other ) { return true; } if (!(othElement)) { return false; } Element o = (Slement) other; return Nat160.eq(x, o.x); }", "n_tokens": 147, "n_pass": [90, 6, 6]}
{"time": "2021-02-22 09:36:26.467491", "score": "0.813", "loss": "0.2219", "code": "n equals(Object other) { if (other ) { rete; } if (!(othElement)) { return false; } Element o = (Slement) other; return Nat160.eq(x, o.x); }", "n_tokens": 140, "n_pass": [92, 7, 7]}
{"time": "2021-02-22 09:36:29.153037", "score": "0.9276", "loss": "0.0846", "code": "n equals(Object other) { if (other ) { rete; } if (!(oth)) { return false; } Element o = (Slement) other; return Nat160.eq(x, o.x); }", "n_tokens": 133, "n_pass": [95, 8, 8]}
{"time": "2021-02-22 09:36:31.782696", "score": "0.7398", "loss": "0.339", "code": "n equals(Object other) { if (other ) { rete; } if (!(oth)) { relse; } Element o = (Slement) other; return Nat160.eq(x, o.x); }", "n_tokens": 126, "n_pass": [97, 9, 9]}
{"time": "2021-02-22 09:36:34.391964", "score": "0.8581", "loss": "0.2496", "code": "n equals(Object other) { if (other ) { rete; } if (!(oth)) { relse; }  o = (Slement) other; return Nat160.eq(x, o.x); }", "n_tokens": 119, "n_pass": [99, 10, 10]}
{"time": "2021-02-22 09:36:37.056395", "score": "0.7394", "loss": "0.466", "code": "n equals(Object other) { if (other ) { rete; } if (!(oth)) { relse; }  o = (Slement) other; Nat160.eq(x, o.x); }", "n_tokens": 112, "n_pass": [103, 11, 11]}
{"time": "2021-02-22 09:36:40.069166", "score": "0.7087", "loss": "0.5284", "code": "n equals(Object other) { if (other ) { rete; } if (!(oth)) { relse; }  o = (Slement) Nat160.eq(x, o.x); }", "n_tokens": 105, "n_pass": [119, 12, 12]}
{"time": "2021-02-22 09:36:42.705282", "score": "0.819", "loss": "0.3331", "code": "n equals(Object other) { if (other ) { rete; } if (!(oth)) { relse; }  o = (Slement).eq(x, o.x); }", "n_tokens": 98, "n_pass": [120, 13, 13]}
{"time": "2021-02-22 09:36:49.099800", "score": "0.8688", "loss": "0.2375", "code": "n equals(Obj other) { if (other ) { rete; } if (!(oth)) { relse; }  o = (Slement).eq(x, o.x); }", "n_tokens": 95, "n_pass": [171, 15, 14]}
{"time": "2021-02-22 09:36:54.314638", "score": "0.5728", "loss": "0.7778", "code": "n equals(Obj other) { if (or ) { rete; } if (!(oth)) { relse; }  o = (Slement).eq(x, o.x); }", "n_tokens": 92, "n_pass": [177, 17, 15]}
{"time": "2021-02-22 09:36:56.912868", "score": "0.5705", "loss": "0.7253", "code": "n equals(Obj other) { if (or ) { e; } if (!(oth)) { relse; }  o = (Slement).eq(x, o.x); }", "n_tokens": 89, "n_pass": [180, 18, 16]}
{"time": "2021-02-22 09:36:59.513342", "score": "0.5717", "loss": "0.7203", "code": "n equals(Obj other) { if (or ) { e; } if (!(oth)) { r; }  o = (Slement).eq(x, o.x); }", "n_tokens": 85, "n_pass": [186, 19, 17]}
{"time": "2021-02-22 09:37:02.116524", "score": "0.6388", "loss": "0.5948", "code": "n equals(Obj other) { if (or ) { e; } if (!(oth)) { r; }  (Slement).eq(x, o.x); }", "n_tokens": 81, "n_pass": [188, 20, 18]}
{"time": "2021-02-22 09:37:14.161205", "score": "0.6388", "loss": "0.5948", "code": "n equals(Obj other) { if (or ) { e; } if (!(oth)) { r; }  (Slent).eq(x, o.x); }", "n_tokens": 79, "n_pass": [260, 24, 19]}
{"time": "2021-02-22 09:37:17.170198", "score": "0.6291", "loss": "0.665", "code": "n equals(Obj other) { if (or ) { e; } if (!(oth)) { r; }  (Slent).eq( o.x); }", "n_tokens": 77, "n_pass": [264, 25, 20]}
{"time": "2021-02-22 09:37:19.791753", "score": "0.6334", "loss": "0.6368", "code": "n equals(Obj other) { if (or ) { e; } if (!(oth)) { r; }  (Slent).eq( o); }", "n_tokens": 75, "n_pass": [266, 26, 21]}
{"time": "2021-02-22 09:37:25.474288", "score": "0.6662", "loss": "0.9937", "code": "n equals(bj other) { if (or ) { e; } if (!(oth)) { r; }  (Slent).eq( o); }", "n_tokens": 74, "n_pass": [278, 27, 22]}
{"time": "2021-02-22 09:37:35.909916", "score": "0.5185", "loss": "1.0207", "code": "n equals(bj other) { if (o) { e; } if (!(oth)) { r; }  (Slent).eq( o); }", "n_tokens": 72, "n_pass": [288, 31, 23]}
{"time": "2021-02-22 09:37:38.507323", "score": "0.5059", "loss": "1.0494", "code": "n equals(bj other) { if (o) {  } if (!(oth)) { r; }  (Slent).eq( o); }", "n_tokens": 70, "n_pass": [291, 32, 24]}
{"time": "2021-02-22 09:37:43.710273", "score": "0.4957", "loss": "1.0756", "code": "n equals(bj other) { if (o) {  } if (!(oth)) {; }  (Slent).eq( o); }", "n_tokens": 68, "n_pass": [300, 34, 25]}
{"time": "2021-02-22 09:37:46.299679", "score": "0.4957", "loss": "1.0756", "code": "n equals(bj other) { if (o) {  } if (!(oth)) {}  (Slent).eq( o); }", "n_tokens": 66, "n_pass": [301, 35, 26]}
{"time": "2021-02-22 09:37:48.908910", "score": "0.6273", "loss": "0.7111", "code": "n equals(bj other) { if (o) {  } if (!(oth)) {}  (ent).eq( o); }", "n_tokens": 64, "n_pass": [304, 36, 27]}
{"time": "2021-02-22 09:37:54.468193", "score": "0.5504", "loss": "1.1445", "code": "n equals(bj other) { if (o) {  } if (!(oth)) {}  (ent).eq(); }", "n_tokens": 62, "n_pass": [309, 38, 28]}
{"time": "2021-02-22 09:38:10.566418", "score": "0.4981", "loss": "1.4882", "code": "n equals(bj other) { if (o) {  } if (!(oth)) {}  (t).eq(); }", "n_tokens": 60, "n_pass": [342, 43, 29]}
{"time": "2021-02-22 09:38:37.682189", "score": "0.4981", "loss": "1.4882", "code": "n equals(bj other) { if (o) {  } if (!(oth)) {}  (t).eq();}", "n_tokens": 59, "n_pass": [435, 50, 30]}
{"time": "2021-02-22 09:39:01.571739", "score": "0.4981", "loss": "1.4882", "code": "n equals(bj other){ if (o) {  } if (!(oth)) {}  (t).eq();}", "n_tokens": 58, "n_pass": [454, 58, 31]}
{"time": "2021-02-22 09:39:04.189490", "score": "0.4981", "loss": "1.4882", "code": "n equals(bj other){if (o) {  } if (!(oth)) {}  (t).eq();}", "n_tokens": 57, "n_pass": [456, 59, 32]}
{"time": "2021-02-22 09:39:06.790185", "score": "0.4981", "loss": "1.4882", "code": "n equals(bj other){if(o) {  } if (!(oth)) {}  (t).eq();}", "n_tokens": 56, "n_pass": [459, 60, 33]}
{"time": "2021-02-22 09:39:09.405828", "score": "0.4981", "loss": "1.4882", "code": "n equals(bj other){if(o){  } if (!(oth)) {}  (t).eq();}", "n_tokens": 55, "n_pass": [463, 61, 34]}
{"time": "2021-02-22 09:39:11.996871", "score": "0.4981", "loss": "1.4882", "code": "n equals(bj other){if(o){ } if (!(oth)) {}  (t).eq();}", "n_tokens": 54, "n_pass": [465, 62, 35]}
{"time": "2021-02-22 09:39:14.589875", "score": "0.4981", "loss": "1.4882", "code": "n equals(bj other){if(o){} if (!(oth)) {}  (t).eq();}", "n_tokens": 53, "n_pass": [466, 63, 36]}
{"time": "2021-02-22 09:39:17.181985", "score": "0.4981", "loss": "1.4882", "code": "n equals(bj other){if(o){}if (!(oth)) {}  (t).eq();}", "n_tokens": 52, "n_pass": [468, 64, 37]}
{"time": "2021-02-22 09:39:19.779160", "score": "0.4981", "loss": "1.4882", "code": "n equals(bj other){if(o){}if(!(oth)) {}  (t).eq();}", "n_tokens": 51, "n_pass": [471, 65, 38]}
{"time": "2021-02-22 09:39:22.369412", "score": "0.4981", "loss": "1.4882", "code": "n equals(bj other){if(o){}if((oth)) {}  (t).eq();}", "n_tokens": 50, "n_pass": [473, 66, 39]}
{"time": "2021-02-22 09:39:32.860161", "score": "0.4981", "loss": "1.4882", "code": "n equals(bj other){if(o){}if((oth)){}  (t).eq();}", "n_tokens": 49, "n_pass": [480, 70, 40]}
{"time": "2021-02-22 09:39:35.453944", "score": "0.4981", "loss": "1.4882", "code": "n equals(bj other){if(o){}if((oth)){} (t).eq();}", "n_tokens": 48, "n_pass": [483, 71, 41]}
{"time": "2021-02-22 09:39:38.040602", "score": "0.4981", "loss": "1.4882", "code": "n equals(bj other){if(o){}if((oth)){}(t).eq();}", "n_tokens": 47, "n_pass": [484, 72, 42]}

Minimal simplified code:
n equals(bj other){if(o){}if((oth)){}(t).eq();}

