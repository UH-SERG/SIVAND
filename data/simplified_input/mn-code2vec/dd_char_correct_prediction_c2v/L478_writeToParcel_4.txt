
path = /scratch/rabin/data/code2vec/transforms/Methods/java-large/test/f2prateek__dart/dart-sample/module1-navigation/src/main/java/com/f2prateek/dart/model/SimpleParcelable_writeToParcel.java
method_name = writeToParcel
method_body = @Override public void writeToParcel(Parcel dest, int flags) { dest.writeInt(anInt); dest.writeByte((byte) (aBoolean ? 0x01 : 0x00)); dest.writeFloat(aFloat); }
predict, score, loss = writeToParcel, 0.999923825263977, 0.00010442188795423135

Trace of simplified code(s):
{"time": "2021-05-26 16:19:44.455564", "score": "0.9999", "loss": "0.0001", "code": "@Override public void writeToParcel(Parcel dest, int flags) { dest.writeInt(anInt); dest.writeByte((byte) (aBoolean ? 0x01 : 0x00)); dest.writeFloat(aFloat); }", "n_tokens": 159, "n_pass": [1, 1, 1]}
{"time": "2021-05-26 16:19:47.066087", "score": "0.9999", "loss": "0.0002", "code": "id writeToParcel(Parcel dest, int flags) { dest.writeInt(anInt); dest.writeByte((byte) (aBoolean ? 0x01 : 0x00)); dest.writeFloat(aFloat); }", "n_tokens": 140, "n_pass": [20, 2, 2]}
{"time": "2021-05-26 16:19:50.047888", "score": "0.6055", "loss": "0.6049", "code": "id writeToParcel(Parint flags) { dest.writeInt(anInt); dest.writeByte((byte) (aBoolean ? 0x01 : 0x00)); dest.writeFloat(aFloat); }", "n_tokens": 130, "n_pass": [43, 3, 3]}
{"time": "2021-05-26 16:19:55.685888", "score": "0.6128", "loss": "0.8814", "code": "id writeToParcel(Parint flags) { dest.wrt(anInt); dest.writeByte((byte) (aBoolean ? 0x01 : 0x00)); dest.writeFloat(aFloat); }", "n_tokens": 125, "n_pass": [86, 5, 4]}
{"time": "2021-05-26 16:19:58.269064", "score": "0.4124", "loss": "1.5464", "code": "id writeToParcel(Parint flags) { dest.wrt(anInt); writeByte((byte) (aBoolean ? 0x01 : 0x00)); dest.writeFloat(aFloat); }", "n_tokens": 120, "n_pass": [88, 6, 5]}
{"time": "2021-05-26 16:20:00.851347", "score": "0.4458", "loss": "1.5662", "code": "id writeToParcel(Parint flags) { dest.wrt(anInt); Byte((byte) (aBoolean ? 0x01 : 0x00)); dest.writeFloat(aFloat); }", "n_tokens": 115, "n_pass": [89, 7, 6]}
{"time": "2021-05-26 16:20:06.037505", "score": "0.4929", "loss": "1.6546", "code": "id writeToParcel(Parint flags) { dest.wrt(anInt); Byte((byte) (aBn ? 0x01 : 0x00)); dest.writeFloat(aFloat); }", "n_tokens": 110, "n_pass": [93, 9, 7]}
{"time": "2021-05-26 16:20:11.223493", "score": "0.3343", "loss": "3.4465", "code": "id writeToParcel(Parint flags) { dest.wrt(anInt); Byte((byte) (aBn ? 0x01 : 0x00)); dest.wloat(aFloat); }", "n_tokens": 105, "n_pass": [99, 11, 8]}
{"time": "2021-05-26 16:20:13.802283", "score": "0.2417", "loss": "3.4681", "code": "id writeToParcel(Parint flags) { dest.wrt(anInt); Byte((byte) (aBn ? 0x01 : 0x00)); dest.wloat(t); }", "n_tokens": 100, "n_pass": [101, 12, 9]}
{"time": "2021-05-26 16:20:52.025719", "score": "0.2627", "loss": "3.2738", "code": "id writeToParcel(Parint flags) { dest.wrt(at); Byte((byte) (aBn ? 0x01 : 0x00)); dest.wloat(t); }", "n_tokens": 97, "n_pass": [185, 25, 10]}
{"time": "2021-05-26 16:20:57.185963", "score": "0.3037", "loss": "3.4383", "code": "id writeToParcel(Parint flags) { dest.wrt(at); Byte((byte) (a? 0x01 : 0x00)); dest.wloat(t); }", "n_tokens": 94, "n_pass": [192, 27, 11]}
{"time": "2021-05-26 16:20:59.781612", "score": "0.2997", "loss": "3.4616", "code": "id writeToParcel(Parint flags) { dest.wrt(at); Byte((byte) (a? 0 : 0x00)); dest.wloat(t); }", "n_tokens": 91, "n_pass": [194, 28, 12]}
{"time": "2021-05-26 16:21:02.382653", "score": "0.282", "loss": "3.5317", "code": "id writeToParcel(Parint flags) { dest.wrt(at); Byte((byte) (a? 0 : 0)); dest.wloat(t); }", "n_tokens": 88, "n_pass": [196, 29, 13]}
{"time": "2021-05-26 16:21:10.183806", "score": "0.2001", "loss": "4.4667", "code": "id writeToParcel(Parint flags) { dest.wrt(at); Byte((byte) (a? 0 : 0)); dest.wl(t); }", "n_tokens": 85, "n_pass": [201, 32, 14]}
{"time": "2021-05-26 16:21:49.225089", "score": "0.3286", "loss": "3.5257", "code": "d writeToParcel(Parint flags) { dest.wrt(at); Byte((byte) (a? 0 : 0)); dest.wl(t); }", "n_tokens": 84, "n_pass": [311, 45, 15]}
{"time": "2021-05-26 16:21:57.349476", "score": "0.3286", "loss": "3.5257", "code": "d writeToParcel(arint flags) { dest.wrt(at); Byte((byte) (a? 0 : 0)); dest.wl(t); }", "n_tokens": 83, "n_pass": [327, 46, 16]}
{"time": "2021-05-26 16:21:59.984037", "score": "0.3006", "loss": "3.5042", "code": "d writeToParcel(rint flags) { dest.wrt(at); Byte((byte) (a? 0 : 0)); dest.wl(t); }", "n_tokens": 82, "n_pass": [328, 47, 17]}
{"time": "2021-05-26 16:22:02.614085", "score": "0.6757", "loss": "2.2293", "code": "d writeToParcel(int flags) { dest.wrt(at); Byte((byte) (a? 0 : 0)); dest.wl(t); }", "n_tokens": 81, "n_pass": [329, 48, 18]}
{"time": "2021-05-26 16:22:05.208307", "score": "0.2229", "loss": "3.7327", "code": "d writeToParcel(nt flags) { dest.wrt(at); Byte((byte) (a? 0 : 0)); dest.wl(t); }", "n_tokens": 80, "n_pass": [330, 49, 19]}
{"time": "2021-05-26 16:22:25.984453", "score": "0.2229", "loss": "3.7327", "code": "d writeToParcel(nt flags){ dest.wrt(at); Byte((byte) (a? 0 : 0)); dest.wl(t); }", "n_tokens": 79, "n_pass": [340, 57, 20]}
{"time": "2021-05-26 16:22:28.559355", "score": "0.2229", "loss": "3.7327", "code": "d writeToParcel(nt flags){dest.wrt(at); Byte((byte) (a? 0 : 0)); dest.wl(t); }", "n_tokens": 78, "n_pass": [342, 58, 21]}
{"time": "2021-05-26 16:22:57.092689", "score": "0.2229", "loss": "3.7327", "code": "d writeToParcel(nt flags){dest.wrt(at);Byte((byte) (a? 0 : 0)); dest.wl(t); }", "n_tokens": 77, "n_pass": [356, 69, 22]}
{"time": "2021-05-26 16:22:59.668786", "score": "0.2886", "loss": "3.5364", "code": "d writeToParcel(nt flags){dest.wrt(at);yte((byte) (a? 0 : 0)); dest.wl(t); }", "n_tokens": 76, "n_pass": [357, 70, 23]}
{"time": "2021-05-26 16:23:10.097834", "score": "0.5635", "loss": "2.8169", "code": "d writeToParcel(nt flags){dest.wrt(at);yte((yte) (a? 0 : 0)); dest.wl(t); }", "n_tokens": 75, "n_pass": [363, 74, 24]}
{"time": "2021-05-26 16:23:12.670605", "score": "0.5184", "loss": "2.9661", "code": "d writeToParcel(nt flags){dest.wrt(at);yte((te) (a? 0 : 0)); dest.wl(t); }", "n_tokens": 74, "n_pass": [364, 75, 25]}
{"time": "2021-05-26 16:23:17.859245", "score": "0.232", "loss": "4.0766", "code": "d writeToParcel(nt flags){dest.wrt(at);yte((te) (a? 0 : 0)); dt.wl(t); }", "n_tokens": 72, "n_pass": [374, 77, 26]}
{"time": "2021-05-26 16:23:20.497501", "score": "0.6611", "loss": "1.7861", "code": "d writeToParcel(nt flags){dest.wrt(at);yte((te) (a? 0 : 0)); dwl(t); }", "n_tokens": 70, "n_pass": [375, 78, 27]}
{"time": "2021-05-26 16:23:31.623156", "score": "0.4829", "loss": "1.6603", "code": "d writeToParcel(t flags){dest.wrt(at);yte((te) (a? 0 : 0)); dwl(t); }", "n_tokens": 69, "n_pass": [396, 80, 28]}
{"time": "2021-05-26 16:23:49.759682", "score": "0.335", "loss": "2.2587", "code": "d writeToParcel(t flags){dst.wrt(at);yte((te) (a? 0 : 0)); dwl(t); }", "n_tokens": 68, "n_pass": [407, 87, 29]}
{"time": "2021-05-26 16:24:07.874592", "score": "0.4044", "loss": "2.1394", "code": "d writeToParcel(t flags){dst.wrt(t);yte((te) (a? 0 : 0)); dwl(t); }", "n_tokens": 67, "n_pass": [415, 94, 30]}
{"time": "2021-05-26 16:24:10.457527", "score": "0.5306", "loss": "1.3975", "code": "d writeToParcel(t flags){dst.wrt();yte((te) (a? 0 : 0)); dwl(t); }", "n_tokens": 66, "n_pass": [416, 95, 31]}
{"time": "2021-05-26 16:24:13.044546", "score": "0.3787", "loss": "1.7834", "code": "d writeToParcel(t flags){dst.wrt();te((te) (a? 0 : 0)); dwl(t); }", "n_tokens": 65, "n_pass": [419, 96, 32]}
{"time": "2021-05-26 16:24:18.198882", "score": "0.373", "loss": "1.7201", "code": "d writeToParcel(t flags){dst.wrt();t((te) (a? 0 : 0)); dwl(t); }", "n_tokens": 64, "n_pass": [421, 98, 33]}
{"time": "2021-05-26 16:25:02.836702", "score": "0.5077", "loss": "1.4053", "code": "d writeToParcel(t flags){dst.wrt();((te) (a? 0 : 0)); dwl(t); }", "n_tokens": 63, "n_pass": [472, 113, 34]}
{"time": "2021-05-26 16:25:05.418209", "score": "0.284", "loss": "3.261", "code": "d writeToParcel(t flags){dst.wrt();((te) (a? 0 : 0));wl(t); }", "n_tokens": 61, "n_pass": [483, 114, 35]}
{"time": "2021-05-26 16:25:50.069324", "score": "0.3514", "loss": "3.2429", "code": "d writeToParcel(t flags){dst.wrt();((te) (a? 0 : 0));wl(); }", "n_tokens": 60, "n_pass": [557, 128, 36]}
{"time": "2021-05-26 16:25:52.639781", "score": "0.3514", "loss": "3.2429", "code": "d writeToParcel(t flags){dst.wrt();((te) (a? 0 : 0));wl();}", "n_tokens": 59, "n_pass": [560, 129, 37]}
{"time": "2021-05-26 16:26:32.076351", "score": "0.3329", "loss": "3.249", "code": "d writeToParcel(t flags){dst.wrt();((e) (a? 0 : 0));wl();}", "n_tokens": 58, "n_pass": [599, 142, 38]}
{"time": "2021-05-26 16:26:34.652421", "score": "0.3329", "loss": "3.249", "code": "d writeToParcel(t flags){dst.wrt();((e)(a? 0 : 0));wl();}", "n_tokens": 57, "n_pass": [602, 143, 39]}
{"time": "2021-05-26 16:26:37.230766", "score": "0.3329", "loss": "3.249", "code": "d writeToParcel(t flags){dst.wrt();((e)(a?0 : 0));wl();}", "n_tokens": 56, "n_pass": [606, 144, 40]}
{"time": "2021-05-26 16:26:39.809501", "score": "0.3329", "loss": "3.249", "code": "d writeToParcel(t flags){dst.wrt();((e)(a?0: 0));wl();}", "n_tokens": 55, "n_pass": [608, 145, 41]}
{"time": "2021-05-26 16:26:42.377022", "score": "0.3329", "loss": "3.249", "code": "d writeToParcel(t flags){dst.wrt();((e)(a?0:0));wl();}", "n_tokens": 54, "n_pass": [610, 146, 42]}

Minimal simplified code:
d writeToParcel(t flags){dst.wrt();((e)(a?0:0));wl();}

