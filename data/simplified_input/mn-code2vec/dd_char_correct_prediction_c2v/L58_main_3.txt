
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/ahmetaa__zemberek-nlp/examples/src/main/java/zemberek/examples/morphology/AnalyzeWords_main.java
method_name = main
method_body = public static void main(String[] args) throws IOException { TurkishMorphology morphology = TurkishMorphology.createWithDefaults(); String word = "kalemi"; Log.info("Word = " + word); WordAnalysis results = morphology.analyze(word); for (SingleAnalysis result : results) { Log.info("Lexical and Surface : " + result.formatLong()); Log.info("Only Lexical : " + result.formatLexical()); Log.info("Oflazer style : " + AnalysisFormatters.OFLAZER_STYLE.format(result)); Log.info(); } }
predict, score, loss = main, 0.9984473586082458, 0.0031105726957321167

Trace of simplified code(s):
{"time": "2021-02-22 01:48:04.761287", "score": "0.9957", "loss": "0.0069", "code": "public static void main(String[] args) throws IOException { TurkishMorphology morphology = TurkishMorphology.createWithDefaults(); String word = \"kalemi\"; Log.info(\"Word = \" + word); WordAnalysis results = morphology.analyze(word); for (SingleAnalysis result : results) { Log.info(\"Lexical and Surface : \" + result.formatLong()); Log.info(\"Only Lexical : \" + result.formatLexical()); Log.info(\"Oflazer style : \" + AnalysisFormatters.OFLAZER_STYLE.format(result)); Log.info(); } }", "n_tokens": 479, "n_pass": [1, 1, 1]}
{"time": "2021-02-22 01:48:07.799788", "score": "0.9923", "loss": "0.0157", "code": "public static void main(String[] args) throws IOException {Defaults(); String word = \"kalemi\"; Log.info(\"Word = \" + word); WordAnalysis results = morphology.analyze(word); for (SingleAnalysis result : results) { Log.info(\"Lexical and Surface : \" + result.formatLong()); Log.info(\"Only Lexical : \" + result.formatLexical()); Log.info(\"Oflazer style : \" + AnalysisFormatters.OFLAZER_STYLE.format(result)); Log.info(); } }", "n_tokens": 419, "n_pass": [21, 2, 2]}
{"time": "2021-02-22 01:48:10.472592", "score": "0.9961", "loss": "0.0064", "code": "public static void main(String[] args) throws IOException {Defaults(); String word = \"kalemi\"; Log.info(\"Word = \" + word); WordAnalysis results = morphology.analyze(word); for (SingleAnalysis result : results) { Log.info(\"Lexical and Surface : \" + result.formatLong()); Log.info(\"Only Lexical : \" + sisFormatters.OFLAZER_STYLE.format(result)); Log.info(); } }", "n_tokens": 359, "n_pass": [26, 3, 3]}
{"time": "2021-02-22 01:48:13.167041", "score": "0.9965", "loss": "0.0092", "code": "public static void main(String[] args) throws IOException {Defaults(); String word = \"kalemi\"; Log.info(\"Word = \" + word); WordAnalysis results = morphology.analyze(word); for (SingleAnalysis result : results) { Log.info(\"Lexical and Surface : \" + result.formatLong()); Log.info(\"Only Lexical : \" + rmat(result)); Log.info(); } }", "n_tokens": 329, "n_pass": [45, 4, 4]}
{"time": "2021-02-22 01:48:15.845512", "score": "0.984", "loss": "0.043", "code": "void main(String[] args) throws IOException {Defaults(); String word = \"kalemi\"; Log.info(\"Word = \" + word); WordAnalysis results = morphology.analyze(word); for (SingleAnalysis result : results) { Log.info(\"Lexical and Surface : \" + result.formatLong()); Log.info(\"Only Lexical : \" + rmat(result)); Log.info(); } }", "n_tokens": 315, "n_pass": [80, 5, 5]}
{"time": "2021-02-22 01:48:18.562115", "score": "0.9983", "loss": "0.0046", "code": "void main(String[] args) throws IOException {ing word = \"kalemi\"; Log.info(\"Word = \" + word); WordAnalysis results = morphology.analyze(word); for (SingleAnalysis result : results) { Log.info(\"Lexical and Surface : \" + result.formatLong()); Log.info(\"Only Lexical : \" + rmat(result)); Log.info(); } }", "n_tokens": 300, "n_pass": [83, 6, 6]}
{"time": "2021-02-22 01:48:21.245377", "score": "0.9877", "loss": "0.0267", "code": "void main(String[] args) throws IOException {ing word = \"kalemi\"; Log.info(d); WordAnalysis results = morphology.analyze(word); for (SingleAnalysis result : results) { Log.info(\"Lexical and Surface : \" + result.formatLong()); Log.info(\"Only Lexical : \" + rmat(result)); Log.info(); } }", "n_tokens": 285, "n_pass": [86, 7, 7]}
{"time": "2021-02-22 01:48:23.925204", "score": "0.9973", "loss": "0.0051", "code": "void main(String[] args) throws IOException {ing word = \"kalemi\"; Log.info(d); WordAnalysiphology.analyze(word); for (SingleAnalysis result : results) { Log.info(\"Lexical and Surface : \" + result.formatLong()); Log.info(\"Only Lexical : \" + rmat(result)); Log.info(); } }", "n_tokens": 270, "n_pass": [88, 8, 8]}
{"time": "2021-02-22 01:48:26.673929", "score": "0.9891", "loss": "0.0182", "code": "void main(String[] args) throws IOException {ing word = \"kalemi\"; Log.info(d); WordAnalysi(word); for (SingleAnalysis result : results) { Log.info(\"Lexical and Surface : \" + result.formatLong()); Log.info(\"Only Lexical : \" + rmat(result)); Log.info(); } }", "n_tokens": 255, "n_pass": [89, 9, 9]}
{"time": "2021-02-22 01:48:29.324133", "score": "0.9954", "loss": "0.0086", "code": "void main(String[] args) throws IOException {ing word = \"kalemi\"; Log.info(d); WordAnalysi(word); for (SingleAnalysis result : results) { Log.info(\"Lece : \" + result.formatLong()); Log.info(\"Only Lexical : \" + rmat(result)); Log.info(); } }", "n_tokens": 240, "n_pass": [94, 10, 10]}
{"time": "2021-02-22 01:48:32.060750", "score": "0.9972", "loss": "0.0052", "code": "void main(String[] args) throws IOException {ing word = \"kalemi\"; Log.info(d); WordAnalysi(word); for (SingleAnalysis result : results) { Log.info(\"Lece : \" + rrmatLong()); Log.info(\"Only Lexical : \" + rmat(result)); Log.info(); } }", "n_tokens": 232, "n_pass": [145, 11, 11]}
{"time": "2021-02-22 01:48:34.742810", "score": "0.9965", "loss": "0.0062", "code": "void main(String[] args) throws IOException {ing word = \"kalemi\"; Log.info(d); WordAnalysi(word); for (SingleAnalysis result : results) { Log.info(\"Lece : \" + r()); Log.info(\"Only Lexical : \" + rmat(result)); Log.info(); } }", "n_tokens": 224, "n_pass": [146, 12, 12]}
{"time": "2021-02-22 01:48:37.387541", "score": "0.9974", "loss": "0.0041", "code": "void main(String[] args) throws IOException {ing word = \"kalemi\"; Log.info(d); WordAnalysi(word); for (SingleAnalysis result : results) { Log.info(\"Lece : \" + r()); Log.info(\"Ocal : \" + rmat(result)); Log.info(); } }", "n_tokens": 216, "n_pass": [149, 13, 13]}
{"time": "2021-02-22 01:48:40.055283", "score": "0.9973", "loss": "0.0048", "code": "void main(String[] args) throws IOException {ing word = \"kalemi\"; Log.info(d); WordAnalysi(word); for (SingleAnalysis result : results) { Log.info(\"Lece : \" + r()); Log.info(\"Ocal : \" + rmat(result));o(); } }", "n_tokens": 208, "n_pass": [153, 14, 14]}
{"time": "2021-02-22 01:48:43.150339", "score": "0.994", "loss": "0.0103", "code": "void main(String[] args) throws IOEn {ing word = \"kalemi\"; Log.info(d); WordAnalysi(word); for (SingleAnalysis result : results) { Log.info(\"Lece : \" + r()); Log.info(\"Ocal : \" + rmat(result));o(); } }", "n_tokens": 201, "n_pass": [160, 15, 15]}
{"time": "2021-02-22 01:48:45.891062", "score": "0.9923", "loss": "0.0134", "code": "void main(String[] args) throws IOEn {ing word = \"kalemi\"; Log.info(d); WordAnalysi(word); for (Silysis result : results) { Log.info(\"Lece : \" + r()); Log.info(\"Ocal : \" + rmat(result));o(); } }", "n_tokens": 194, "n_pass": [170, 16, 16]}
{"time": "2021-02-22 01:48:48.968220", "score": "0.9941", "loss": "0.0127", "code": "void main(String[] args) throws IOEn {ing word = \"kalemi\"; Log.info(d); WordAnalysi(word); for (Sis result : results) { Log.info(\"Lece : \" + r()); Log.info(\"Ocal : \" + rmat(result));o(); } }", "n_tokens": 190, "n_pass": [249, 17, 17]}
{"time": "2021-02-22 01:48:51.619324", "score": "0.9884", "loss": "0.0184", "code": "void main(String[] args) throws IOEn {ing word = \"kalemi\"; Log.info(d); WordAnalysi(word); for (Sis re : results) { Log.info(\"Lece : \" + r()); Log.info(\"Ocal : \" + rmat(result));o(); } }", "n_tokens": 186, "n_pass": [250, 18, 18]}
{"time": "2021-02-22 01:48:54.273158", "score": "0.9916", "loss": "0.0147", "code": "void main(String[] args) throws IOEn {ing word = \"kalemi\"; Log.info(d); WordAnalysi(word); for (Sis re : rts) { Log.info(\"Lece : \" + r()); Log.info(\"Ocal : \" + rmat(result));o(); } }", "n_tokens": 182, "n_pass": [252, 19, 19]}
{"time": "2021-02-22 01:48:57.018705", "score": "0.9923", "loss": "0.0134", "code": "void main(String[] args) throws IOEn {ing word = \"kalemi\"; Log.info(d); WordAnalysi(word); for (Sis re : rts) { Lofo(\"Lece : \" + r()); Log.info(\"Ocal : \" + rmat(result));o(); } }", "n_tokens": 178, "n_pass": [255, 20, 20]}
{"time": "2021-02-22 01:48:59.660410", "score": "0.9931", "loss": "0.0124", "code": "void main(String[] args) throws IOEn {ing word = \"kalemi\"; Log.info(d); WordAnalysi(word); for (Sis re : rts) { Lofo(\" : \" + r()); Log.info(\"Ocal : \" + rmat(result));o(); } }", "n_tokens": 174, "n_pass": [257, 21, 21]}
{"time": "2021-02-22 01:49:02.300465", "score": "0.9387", "loss": "0.0935", "code": "void main(String[] args) throws IOEn {ing word = \"kalemi\"; Log.info(d); WordAnalysi(word); for (Sis re : rts) { Lofo(\" : \" + r()); Logo(\"Ocal : \" + rmat(result));o(); } }", "n_tokens": 170, "n_pass": [262, 22, 22]}
{"time": "2021-02-22 01:49:04.982928", "score": "0.9311", "loss": "0.1042", "code": "void main(String[] args) throws IOEn {ing word = \"kalemi\"; Log.info(d); WordAnalysi(word); for (Sis re : rts) { Lofo(\" : \" + r()); Logo(\"O: \" + rmat(result));o(); } }", "n_tokens": 166, "n_pass": [264, 23, 23]}
{"time": "2021-02-22 01:49:07.644064", "score": "0.9366", "loss": "0.0977", "code": "void main(String[] args) throws IOEn {ing word = \"kalemi\"; Log.info(d); WordAnalysi(word); for (Sis re : rts) { Lofo(\" : \" + r()); Logo(\"O: \" + rmat(rt));o(); } }", "n_tokens": 162, "n_pass": [268, 24, 24]}
{"time": "2021-02-22 01:49:10.325042", "score": "0.9518", "loss": "0.0715", "code": "void main(String[] args) throws IOEn {ing word = \"kalemi\"; Log.info(d); WordAnalysi(word); for (Sis re : rts) { Lofo(\" : \" + r()); Logo(\"O: \" + rmat(rt)); } }", "n_tokens": 158, "n_pass": [270, 25, 25]}
{"time": "2021-02-22 01:49:12.975585", "score": "0.9363", "loss": "0.0946", "code": "d main(String[] args) throws IOEn {ing word = \"kalemi\"; Log.info(d); WordAnalysi(word); for (Sis re : rts) { Lofo(\" : \" + r()); Logo(\"O: \" + rmat(rt)); } }", "n_tokens": 155, "n_pass": [272, 26, 26]}
{"time": "2021-02-22 01:49:19.121967", "score": "0.5788", "loss": "1.0661", "code": "d main(Strin args) throws IOEn {ing word = \"kalemi\"; Log.info(d); WordAnalysi(word); for (Sis re : rts) { Lofo(\" : \" + r()); Logo(\"O: \" + rmat(rt)); } }", "n_tokens": 152, "n_pass": [277, 28, 27]}
{"time": "2021-02-22 01:49:21.762799", "score": "0.5908", "loss": "1.0025", "code": "d main(Strin args) throws I {ing word = \"kalemi\"; Log.info(d); WordAnalysi(word); for (Sis re : rts) { Lofo(\" : \" + r()); Logo(\"O: \" + rmat(rt)); } }", "n_tokens": 149, "n_pass": [283, 29, 28]}
{"time": "2021-02-22 01:49:24.513352", "score": "0.955", "loss": "0.1267", "code": "d main(Strin args) throws I {iword = \"kalemi\"; Log.info(d); WordAnalysi(word); for (Sis re : rts) { Lofo(\" : \" + r()); Logo(\"O: \" + rmat(rt)); } }", "n_tokens": 146, "n_pass": [285, 30, 29]}
{"time": "2021-02-22 01:49:27.234136", "score": "0.6688", "loss": "0.6422", "code": "d main(Strin args) throws I {i = \"kalemi\"; Log.info(d); WordAnalysi(word); for (Sis re : rts) { Lofo(\" : \" + r()); Logo(\"O: \" + rmat(rt)); } }", "n_tokens": 142, "n_pass": [286, 31, 30]}
{"time": "2021-02-22 01:49:29.875875", "score": "0.413", "loss": "1.3032", "code": "d main(Strin args) throws I {i = \"mi\"; Log.info(d); WordAnalysi(word); for (Sis re : rts) { Lofo(\" : \" + r()); Logo(\"O: \" + rmat(rt)); } }", "n_tokens": 138, "n_pass": [288, 32, 31]}
{"time": "2021-02-22 01:49:35.168388", "score": "0.3436", "loss": "1.5243", "code": "d main(Strin args) throws I {i = \"mi\"; Log.inf; WordAnalysi(word); for (Sis re : rts) { Lofo(\" : \" + r()); Logo(\"O: \" + rmat(rt)); } }", "n_tokens": 134, "n_pass": [292, 34, 32]}
{"time": "2021-02-22 01:49:37.834565", "score": "0.3794", "loss": "1.5384", "code": "d main(Strin args) throws I {i = \"mi\"; Log.infrdAnalysi(word); for (Sis re : rts) { Lofo(\" : \" + r()); Logo(\"O: \" + rmat(rt)); } }", "n_tokens": 130, "n_pass": [293, 35, 33]}
{"time": "2021-02-22 01:49:40.493709", "score": "0.3794", "loss": "1.5384", "code": "d main(Strin args) throws I {i = \"mi\"; Log.infalysi(word); for (Sis re : rts) { Lofo(\" : \" + r()); Logo(\"O: \" + rmat(rt)); } }", "n_tokens": 126, "n_pass": [294, 36, 34]}
{"time": "2021-02-22 01:49:43.153668", "score": "0.3794", "loss": "1.5384", "code": "d main(Strin args) throws I {i = \"mi\"; Log.infi(word); for (Sis re : rts) { Lofo(\" : \" + r()); Logo(\"O: \" + rmat(rt)); } }", "n_tokens": 122, "n_pass": [295, 37, 35]}
{"time": "2021-02-22 01:49:55.456315", "score": "0.2908", "loss": "1.8207", "code": "d main(Strin args) throws I {i = \"mi\"; Log.infi(rd); for (Sis re : rts) { Lofo(\" : \" + r()); Logo(\"O: \" + rmat(rt)); } }", "n_tokens": 120, "n_pass": [396, 41, 36]}
{"time": "2021-02-22 01:49:58.122662", "score": "0.2617", "loss": "1.9191", "code": "d main(Strin args) throws I {i = \"mi\"; Log.infi(); for (Sis re : rts) { Lofo(\" : \" + r()); Logo(\"O: \" + rmat(rt)); } }", "n_tokens": 118, "n_pass": [397, 42, 37]}
{"time": "2021-02-22 01:50:00.777263", "score": "0.3026", "loss": "1.8055", "code": "d main(Strin args) throws I {i = \"mi\"; Log.infi(); for (s re : rts) { Lofo(\" : \" + r()); Logo(\"O: \" + rmat(rt)); } }", "n_tokens": 116, "n_pass": [402, 43, 38]}
{"time": "2021-02-22 01:50:03.435742", "score": "0.2547", "loss": "1.768", "code": "d main(Strin args) throws I {i = \"mi\"; Log.infi(); for (s re :ts) { Lofo(\" : \" + r()); Logo(\"O: \" + rmat(rt)); } }", "n_tokens": 114, "n_pass": [406, 44, 39]}
{"time": "2021-02-22 01:50:06.200737", "score": "0.2472", "loss": "1.7425", "code": "d main(Strin args) throws I {i = \"mi\"; Log.infi(); for (s re :ts) { fo(\" : \" + r()); Logo(\"O: \" + rmat(rt)); } }", "n_tokens": 112, "n_pass": [410, 45, 40]}
{"time": "2021-02-22 01:50:11.484475", "score": "0.2701", "loss": "1.6231", "code": "d main(Strin args) throws I {i = \"mi\"; Log.infi(); for (s re :ts) { fo(\" \" + r()); Logo(\"O: \" + rmat(rt)); } }", "n_tokens": 110, "n_pass": [413, 47, 41]}
{"time": "2021-02-22 01:50:14.204286", "score": "0.2852", "loss": "1.5713", "code": "d main(Strin args) throws I {i = \"mi\"; Log.infi(); for (s re :ts) { fo(\" \" + r); Logo(\"O: \" + rmat(rt)); } }", "n_tokens": 108, "n_pass": [417, 48, 42]}
{"time": "2021-02-22 01:50:19.471999", "score": "0.3158", "loss": "1.3877", "code": "d main(Strin args) throws I {i = \"mi\"; Log.infi(); for (s re :ts) { fo(\" \" + r); Lo(\"O: \" + rmat(rt)); } }", "n_tokens": 106, "n_pass": [420, 50, 43]}
{"time": "2021-02-22 01:50:22.119702", "score": "0.3158", "loss": "1.3877", "code": "d main(Strin args) throws I {i = \"mi\"; Log.infi(); for (s re :ts) { fo(\" \" + r); Lo(\"O\" + rmat(rt)); } }", "n_tokens": 104, "n_pass": [423, 51, 44]}
{"time": "2021-02-22 01:50:24.822804", "score": "0.2958", "loss": "1.4576", "code": "d main(Strin args) throws I {i = \"mi\"; Log.infi(); for (s re :ts) { fo(\" \" + r); Lo(\"O\" + at(rt)); } }", "n_tokens": 102, "n_pass": [426, 52, 45]}
{"time": "2021-02-22 01:50:27.480747", "score": "0.3434", "loss": "1.2865", "code": "d main(Strin args) throws I {i = \"mi\"; Log.infi(); for (s re :ts) { fo(\" \" + r); Lo(\"O\" + (rt)); } }", "n_tokens": 100, "n_pass": [427, 53, 46]}
{"time": "2021-02-22 01:50:45.673862", "score": "0.3683", "loss": "1.2663", "code": "d main(Strin args) throws I {i = \"\"; Log.infi(); for (s re :ts) { fo(\" \" + r); Lo(\"O\" + (rt)); } }", "n_tokens": 98, "n_pass": [455, 59, 47]}
{"time": "2021-02-22 01:50:48.284940", "score": "0.916", "loss": "0.1987", "code": "d main(Strin args) throws I {i = \"\";og.infi(); for (s re :ts) { fo(\" \" + r); Lo(\"O\" + (rt)); } }", "n_tokens": 96, "n_pass": [457, 60, 48]}
{"time": "2021-02-22 01:50:50.919981", "score": "0.5352", "loss": "0.8381", "code": "d main(Strin args) throws I {i = \"\";ognfi(); for (s re :ts) { fo(\" \" + r); Lo(\"O\" + (rt)); } }", "n_tokens": 94, "n_pass": [459, 61, 49]}
{"time": "2021-02-22 01:50:53.568399", "score": "0.5352", "loss": "0.8381", "code": "d main(Strin args) throws I {i = \"\";ogi(); for (s re :ts) { fo(\" \" + r); Lo(\"O\" + (rt)); } }", "n_tokens": 92, "n_pass": [460, 62, 50]}
{"time": "2021-02-22 01:50:56.267147", "score": "0.5461", "loss": "0.8131", "code": "d main(Strin args) throws I {i = \"\";ogi(); for (s re :ts) { (\" \" + r); Lo(\"O\" + (rt)); } }", "n_tokens": 90, "n_pass": [472, 63, 51]}
{"time": "2021-02-22 01:51:12.387351", "score": "0.3361", "loss": "1.2156", "code": "d main(Str args) throws I {i = \"\";ogi(); for (s re :ts) { (\" \" + r); Lo(\"O\" + (rt)); } }", "n_tokens": 88, "n_pass": [498, 68, 52]}
{"time": "2021-02-22 01:51:42.492707", "score": "0.3361", "loss": "1.2156", "code": "d main(Str args) throws I{i = \"\";ogi(); for (s re :ts) { (\" \" + r); Lo(\"O\" + (rt)); } }", "n_tokens": 87, "n_pass": [634, 75, 53]}
{"time": "2021-02-22 01:51:45.171188", "score": "0.3361", "loss": "1.2156", "code": "d main(Str args) throws I{i= \"\";ogi(); for (s re :ts) { (\" \" + r); Lo(\"O\" + (rt)); } }", "n_tokens": 86, "n_pass": [637, 76, 54]}
{"time": "2021-02-22 01:51:47.829053", "score": "0.3361", "loss": "1.2156", "code": "d main(Str args) throws I{i=\"\";ogi(); for (s re :ts) { (\" \" + r); Lo(\"O\" + (rt)); } }", "n_tokens": 85, "n_pass": [639, 77, 55]}
{"time": "2021-02-22 01:51:50.469287", "score": "0.252", "loss": "1.5304", "code": "d main(Str args) throws I{i=\"\";gi(); for (s re :ts) { (\" \" + r); Lo(\"O\" + (rt)); } }", "n_tokens": 84, "n_pass": [643, 78, 56]}
{"time": "2021-02-22 01:51:58.341506", "score": "0.252", "loss": "1.5304", "code": "d main(Str args) throws I{i=\"\";gi();for (s re :ts) { (\" \" + r); Lo(\"O\" + (rt)); } }", "n_tokens": 83, "n_pass": [649, 81, 57]}
{"time": "2021-02-22 01:52:00.959756", "score": "0.252", "loss": "1.5304", "code": "d main(Str args) throws I{i=\"\";gi();for(s re :ts) { (\" \" + r); Lo(\"O\" + (rt)); } }", "n_tokens": 82, "n_pass": [653, 82, 58]}
{"time": "2021-02-22 01:52:08.869594", "score": "0.252", "loss": "1.5304", "code": "d main(Str args) throws I{i=\"\";gi();for(s re:ts) { (\" \" + r); Lo(\"O\" + (rt)); } }", "n_tokens": 81, "n_pass": [659, 85, 59]}
{"time": "2021-02-22 01:52:16.741180", "score": "0.252", "loss": "1.5304", "code": "d main(Str args) throws I{i=\"\";gi();for(s re:ts){ (\" \" + r); Lo(\"O\" + (rt)); } }", "n_tokens": 80, "n_pass": [664, 88, 60]}
{"time": "2021-02-22 01:52:19.396800", "score": "0.252", "loss": "1.5304", "code": "d main(Str args) throws I{i=\"\";gi();for(s re:ts){(\" \" + r); Lo(\"O\" + (rt)); } }", "n_tokens": 79, "n_pass": [666, 89, 61]}
{"time": "2021-02-22 01:52:24.710635", "score": "0.252", "loss": "1.5304", "code": "d main(Str args) throws I{i=\"\";gi();for(s re:ts){(\" \"+ r); Lo(\"O\" + (rt)); } }", "n_tokens": 78, "n_pass": [671, 91, 62]}
{"time": "2021-02-22 01:52:27.425267", "score": "0.252", "loss": "1.5304", "code": "d main(Str args) throws I{i=\"\";gi();for(s re:ts){(\" \"+r); Lo(\"O\" + (rt)); } }", "n_tokens": 77, "n_pass": [673, 92, 63]}
{"time": "2021-02-22 01:52:30.157513", "score": "0.252", "loss": "1.5304", "code": "d main(Str args) throws I{i=\"\";gi();for(s re:ts){(\" \"+r);Lo(\"O\" + (rt)); } }", "n_tokens": 76, "n_pass": [677, 93, 64]}
{"time": "2021-02-22 01:52:38.093636", "score": "0.286", "loss": "1.3972", "code": "d main(Str args) throws I{i=\"\";gi();for(s re:ts){(\" \"+r);Lo(\"\" + (rt)); } }", "n_tokens": 75, "n_pass": [682, 96, 65]}
{"time": "2021-02-22 01:52:40.740973", "score": "0.286", "loss": "1.3972", "code": "d main(Str args) throws I{i=\"\";gi();for(s re:ts){(\" \"+r);Lo(\"\"+ (rt)); } }", "n_tokens": 74, "n_pass": [684, 97, 66]}
{"time": "2021-02-22 01:52:43.679296", "score": "0.286", "loss": "1.3972", "code": "d main(Str args) throws I{i=\"\";gi();for(s re:ts){(\" \"+r);Lo(\"\"+(rt)); } }", "n_tokens": 73, "n_pass": [686, 98, 67]}
{"time": "2021-02-22 01:52:46.297560", "score": "0.2916", "loss": "1.3758", "code": "d main(Str args) throws I{i=\"\";gi();for(s re:ts){(\" \"+r);Lo(\"\"+(t)); } }", "n_tokens": 72, "n_pass": [688, 99, 68]}
{"time": "2021-02-22 01:52:48.947762", "score": "0.2916", "loss": "1.3758", "code": "d main(Str args) throws I{i=\"\";gi();for(s re:ts){(\" \"+r);Lo(\"\"+(t));} }", "n_tokens": 71, "n_pass": [693, 100, 69]}
{"time": "2021-02-22 01:52:51.614778", "score": "0.2916", "loss": "1.3758", "code": "d main(Str args) throws I{i=\"\";gi();for(s re:ts){(\" \"+r);Lo(\"\"+(t));}}", "n_tokens": 70, "n_pass": [695, 101, 70]}
{"time": "2021-02-22 01:53:01.988018", "score": "0.2721", "loss": "1.4214", "code": "d main(St args) throws I{i=\"\";gi();for(s re:ts){(\" \"+r);Lo(\"\"+(t));}}", "n_tokens": 69, "n_pass": [706, 104, 71]}
{"time": "2021-02-22 01:53:15.239907", "score": "0.2721", "loss": "1.4214", "code": "d main(St args)throws I{i=\"\";gi();for(s re:ts){(\" \"+r);Lo(\"\"+(t));}}", "n_tokens": 68, "n_pass": [713, 109, 72]}
{"time": "2021-02-22 01:53:20.539106", "score": "0.2864", "loss": "1.3361", "code": "d main(St args)throws I{i=\"\";g();for(s re:ts){(\" \"+r);Lo(\"\"+(t));}}", "n_tokens": 67, "n_pass": [729, 111, 73]}
{"time": "2021-02-22 01:53:23.188189", "score": "0.2661", "loss": "1.4169", "code": "d main(St args)throws I{i=\"\";g();for(s e:ts){(\" \"+r);Lo(\"\"+(t));}}", "n_tokens": 66, "n_pass": [739, 112, 74]}
{"time": "2021-02-22 01:53:25.829440", "score": "0.2721", "loss": "1.4006", "code": "d main(St args)throws I{i=\"\";g();for(s e:s){(\" \"+r);Lo(\"\"+(t));}}", "n_tokens": 65, "n_pass": [742, 113, 75]}
{"time": "2021-02-22 01:53:28.447696", "score": "0.2597", "loss": "1.449", "code": "d main(St args)throws I{i=\"\";g();for(s e:s){(\"\"+r);Lo(\"\"+(t));}}", "n_tokens": 64, "n_pass": [748, 114, 76]}
{"time": "2021-02-22 01:53:41.501594", "score": "0.337", "loss": "1.1664", "code": "d main(S args)throws I{i=\"\";g();for(s e:s){(\"\"+r);Lo(\"\"+(t));}}", "n_tokens": 63, "n_pass": [775, 118, 77]}

Minimal simplified code:
d main(S args)throws I{i="";g();for(s e:s){(""+r);Lo(""+(t));}}

