
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/sakaiproject__sakai/assignment/tool/src/java/org/sakaiproject/assignment/tool/RedirectingAssignmentEntityServlet_init.java
method_name = init
method_body = public void init(ServletConfig config) throws ServletException { log.info("init()"); super.init(config); entityBroker = (EntityBroker) ComponentManager.get("org.sakaiproject.entitybroker.EntityBroker"); sessionManager = (SessionManager) ComponentManager.get("org.sakaiproject.tool.api.SessionManager"); accessProviderManager = (EntityViewAccessProviderManager) ComponentManager.get("org.sakaiproject.entitybroker.access.EntityViewAccessProviderManager"); if (accessProviderManager != null) { accessProviderManager.registerProvider(AssignmentEntityProvider.ENTITY_PREFIX, this); } }
predict, score, loss = init, 0.99921715259552, 0.0008010039455257356

Trace of simplified code(s):
{"time": "2021-02-22 04:51:04.482648", "score": "0.9993", "loss": "0.0007", "code": "public void init(ServletConfig config) throws ServletException { log.info(\"init()\"); super.init(config); entityBroker = (EntityBroker) ComponentManager.get(\"org.sakaiproject.entitybroker.EntityBroker\"); sessionManager = (SessionManager) ComponentManager.get(\"org.sakaiproject.tool.api.SessionManager\"); accessProviderManager = (EntityViewAccessProviderManager) ComponentManager.get(\"org.sakaiproject.entitybroker.access.EntityViewAccessProviderManager\"); if (accessProviderManager != null) { accessProviderManager.registerProvider(AssignmentEntityProvider.ENTITY_PREFIX, this); } }", "n_tokens": 581, "n_pass": [1, 1, 1]}
{"time": "2021-02-22 04:51:07.175608", "score": "0.9995", "loss": "0.0006", "code": "public void init(ServletConfig config) throws ServletException { log.info(\"init()\"); super.init(config); entityBroker = (EntityBroker) ComponentManager.get(\"org.sakaiproject.entitybroker.EntityBroker\"); sessionManager = (SessionManager) ComponentManager.get(\"org.sakaiproject.tool.api.SessisProviderManager\"); if (accessProviderManager != null) { accessProviderManager.registerProvider(AssignmentEntityProvider.ENTITY_PREFIX, this); } }", "n_tokens": 436, "n_pass": [10, 2, 2]}
{"time": "2021-02-22 04:51:09.832401", "score": "0.9984", "loss": "0.0018", "code": "public void init(ServletConfig config) throws ServletException { log.infManager.get(\"org.sakaiproject.entitybroker.EntityBroker\"); sessionManager = (SessionManager) ComponentManager.get(\"org.sakaiproject.tool.api.SessisProviderManager\"); if (accessProviderManager != null) { accessProviderManager.registerProvider(AssignmentEntityProvider.ENTITY_PREFIX, this); } }", "n_tokens": 364, "n_pass": [22, 3, 3]}
{"time": "2021-02-22 04:51:12.458988", "score": "0.996", "loss": "0.0043", "code": "public void init(ServletConfig config) throws ServletException { log.inf = (SessionManager) ComponentManager.get(\"org.sakaiproject.tool.api.SessisProviderManager\"); if (accessProviderManager != null) { accessProviderManager.registerProvider(AssignmentEntityProvider.ENTITY_PREFIX, this); } }", "n_tokens": 291, "n_pass": [23, 4, 4]}
{"time": "2021-02-22 04:51:15.171007", "score": "0.9259", "loss": "0.0984", "code": "public void init(ServletConfig config) throws ServletException { log.inf.get(\"org.sakaiproject.tool.api.SessisProviderManager\"); if (accessProviderManager != null) { accessProviderManager.registerProvider(AssignmentEntityProvider.ENTITY_PREFIX, this); } }", "n_tokens": 255, "n_pass": [36, 5, 5]}
{"time": "2021-02-22 04:51:17.803123", "score": "0.9259", "loss": "0.0984", "code": "public void init(ServletConfig config) throws ServletException { log.inf.get(\"org.sakaiproisProviderManager\"); if (accessProviderManager != null) { accessProviderManager.registerProvider(AssignmentEntityProvider.ENTITY_PREFIX, this); } }", "n_tokens": 237, "n_pass": [59, 6, 6]}
{"time": "2021-02-22 04:51:20.434651", "score": "0.9259", "loss": "0.0958", "code": "public void init(ServletConfig config) throws ServletException { log.inf.get(\"org.sakaiproisProviderManager\"); if (accessProvi) { accessProviderManager.registerProvider(AssignmentEntityProvider.ENTITY_PREFIX, this); } }", "n_tokens": 219, "n_pass": [62, 7, 7]}
{"time": "2021-02-22 04:51:23.097182", "score": "0.9037", "loss": "0.4744", "code": "public void init(ServletConfig config) throws ServletException { log.inf.get(\"org.sakaiproisProviderManager\"); if (accessProvi) { accessProviderovider(AssignmentEntityProvider.ENTITY_PREFIX, this); } }", "n_tokens": 201, "n_pass": [64, 8, 8]}
{"time": "2021-02-22 04:51:25.785356", "score": "0.9635", "loss": "0.0604", "code": "public void init(ServletConfig config) throws ServletException { log.inf.get(\"org.sakaiproisProviderManager\"); if (accessProvi) { accessProviderovider(AssignmentEn_PREFIX, this); } }", "n_tokens": 182, "n_pass": [66, 9, 9]}
{"time": "2021-02-22 04:51:28.439266", "score": "0.973", "loss": "0.0471", "code": "public void init(ServletConfig config) throws ServletException { log.inf.get(\"org.sakaiproisProviderManager\"); if (accessProvi) { accessProviderovider(AssignmentEthis); } }", "n_tokens": 172, "n_pass": [97, 10, 10]}
{"time": "2021-02-22 04:51:31.043740", "score": "0.8414", "loss": "0.2271", "code": "id init(ServletConfig config) throws ServletException { log.inf.get(\"org.sakaiproisProviderManager\"); if (accessProvi) { accessProviderovider(AssignmentEthis); } }", "n_tokens": 163, "n_pass": [99, 11, 11]}
{"time": "2021-02-22 04:51:38.872523", "score": "0.8414", "loss": "0.2271", "code": "id init(ServletConfig config) throws ServletException { log.inf.get(\"orgisProviderManager\"); if (accessProvi) { accessProviderovider(AssignmentEthis); } }", "n_tokens": 154, "n_pass": [108, 14, 12]}
{"time": "2021-02-22 04:51:41.473945", "score": "0.8414", "loss": "0.2271", "code": "id init(ServletConfig config) throws ServletException { log.inf.get(\"orgrManager\"); if (accessProvi) { accessProviderovider(AssignmentEthis); } }", "n_tokens": 145, "n_pass": [109, 15, 13]}
{"time": "2021-02-22 04:51:44.079201", "score": "0.8298", "loss": "0.2435", "code": "id init(ServletConfig config) throws ServletException { log.inf.get(\"orgrManager\"); if (ac) { accessProviderovider(AssignmentEthis); } }", "n_tokens": 136, "n_pass": [112, 16, 14]}
{"time": "2021-02-22 04:51:46.682527", "score": "0.8298", "loss": "0.2435", "code": "id init(ServletConfig config) throws ServletException { log.inf.get(\"orgrManager\"); if (ac) { accesovider(AssignmentEthis); } }", "n_tokens": 127, "n_pass": [114, 17, 15]}
{"time": "2021-02-22 04:51:49.286761", "score": "0.8298", "loss": "0.2435", "code": "id init(ServletConfig config) throws ServletException { log.inf.get(\"orgrManager\"); if (ac) { accesovider(Asthis); } }", "n_tokens": 118, "n_pass": [116, 18, 16]}
{"time": "2021-02-22 04:52:05.333266", "score": "0.7244", "loss": "0.4868", "code": "id init(ServletConfig co) throws ServletException { log.inf.get(\"orgrManager\"); if (ac) { accesovider(Asthis); } }", "n_tokens": 114, "n_pass": [164, 24, 17]}
{"time": "2021-02-22 04:52:15.731504", "score": "0.812", "loss": "0.2924", "code": "id init(ServletConfig co) throws ServletException { lo.get(\"orgrManager\"); if (ac) { accesovider(Asthis); } }", "n_tokens": 109, "n_pass": [172, 28, 18]}
{"time": "2021-02-22 04:52:18.321214", "score": "0.812", "loss": "0.2924", "code": "id init(ServletConfig co) throws ServletException { lo.get(\"orgrer\"); if (ac) { accesovider(Asthis); } }", "n_tokens": 104, "n_pass": [175, 29, 19]}
{"time": "2021-02-22 04:52:20.912703", "score": "0.812", "loss": "0.2924", "code": "id init(ServletConfig co) throws ServletException { lo.get(\"orgrer\"); if (ac) {sovider(Asthis); } }", "n_tokens": 99, "n_pass": [179, 30, 20]}
{"time": "2021-02-22 04:52:23.503583", "score": "0.8353", "loss": "0.2596", "code": "id init(ServletConfig co) throws ServletException { lo.get(\"orgrer\"); if (ac) {er(Asthis); } }", "n_tokens": 94, "n_pass": [180, 31, 21]}
{"time": "2021-02-22 04:52:42.157441", "score": "0.8621", "loss": "0.2225", "code": "id init(ServletConfig co) throws ServletException { lo.get(\"orgrer\"); if (ac) {er(his); } }", "n_tokens": 91, "n_pass": [246, 38, 22]}
{"time": "2021-02-22 04:52:44.755488", "score": "0.8251", "loss": "0.2823", "code": "id init(ServletConfig co) throws ServletException { lo.get(\"orgrer\"); if (ac) {er(); } }", "n_tokens": 88, "n_pass": [247, 39, 23]}
{"time": "2021-02-22 04:53:25.017425", "score": "0.8896", "loss": "0.4618", "code": "id init(ServletConfig co) throws ServletException { loet(\"orgrer\"); if (ac) {er(); } }", "n_tokens": 86, "n_pass": [277, 54, 24]}
{"time": "2021-02-22 04:53:27.616985", "score": "0.9133", "loss": "0.4985", "code": "id init(ServletConfig co) throws ServletException { lo(\"orgrer\"); if (ac) {er(); } }", "n_tokens": 84, "n_pass": [278, 55, 25]}
{"time": "2021-02-22 04:53:30.210896", "score": "0.9133", "loss": "0.4985", "code": "id init(ServletConfig co) throws ServletException { lo(\"grer\"); if (ac) {er(); } }", "n_tokens": 82, "n_pass": [280, 56, 26]}
{"time": "2021-02-22 04:53:32.890351", "score": "0.9249", "loss": "0.4269", "code": "id init(ServletConfig co) throws ServletException { lo(\"er\"); if (ac) {er(); } }", "n_tokens": 80, "n_pass": [281, 57, 27]}
{"time": "2021-02-22 04:54:13.018717", "score": "0.466", "loss": "1.5407", "code": "id init(ServletConfig co) throws ServletException { (\"er\"); if (ac) {er(); } }", "n_tokens": 78, "n_pass": [316, 72, 28]}
{"time": "2021-02-22 04:54:56.009734", "score": "0.4833", "loss": "1.4963", "code": "id init(ServletConfig co) throws ServletException { (\"r\"); if (ac) {er(); } }", "n_tokens": 77, "n_pass": [424, 87, 29]}
{"time": "2021-02-22 04:54:58.598284", "score": "0.474", "loss": "1.52", "code": "id init(ServletConfig co) throws ServletException { (\"\"); if (ac) {er(); } }", "n_tokens": 76, "n_pass": [425, 88, 30]}
{"time": "2021-02-22 04:55:01.207561", "score": "0.474", "loss": "1.52", "code": "id init(ServletConfig co) throws ServletException { (\"\");if (ac) {er(); } }", "n_tokens": 75, "n_pass": [428, 89, 31]}
{"time": "2021-02-22 04:55:03.806333", "score": "0.8314", "loss": "0.38", "code": "d init(ServletConfig co) throws ServletException { (\"\");if (ac) {er(); } }", "n_tokens": 74, "n_pass": [439, 90, 32]}
{"time": "2021-02-22 04:55:42.162108", "score": "0.883", "loss": "0.2436", "code": "d init(ServletConfig o) throws ServletException { (\"\");if (ac) {er(); } }", "n_tokens": 73, "n_pass": [461, 104, 33]}
{"time": "2021-02-22 04:55:44.758089", "score": "0.883", "loss": "0.2436", "code": "d init(ServletConfig o)throws ServletException { (\"\");if (ac) {er(); } }", "n_tokens": 72, "n_pass": [464, 105, 34]}
{"time": "2021-02-22 04:56:28.809401", "score": "0.883", "loss": "0.2436", "code": "d init(ServletConfig o)throws ServletException{ (\"\");if (ac) {er(); } }", "n_tokens": 71, "n_pass": [488, 122, 35]}
{"time": "2021-02-22 04:56:31.399591", "score": "0.883", "loss": "0.2436", "code": "d init(ServletConfig o)throws ServletException{(\"\");if (ac) {er(); } }", "n_tokens": 70, "n_pass": [490, 123, 36]}
{"time": "2021-02-22 04:57:53.124716", "score": "0.883", "loss": "0.2436", "code": "d init(ServletConfig o)throws ServletException{(\"\");if(ac) {er(); } }", "n_tokens": 69, "n_pass": [569, 153, 37]}
{"time": "2021-02-22 04:57:55.718337", "score": "0.9215", "loss": "0.1526", "code": "d init(ServletConfig o)throws ServletException{(\"\");if(c) {er(); } }", "n_tokens": 68, "n_pass": [570, 154, 38]}
{"time": "2021-02-22 04:57:58.329342", "score": "0.9215", "loss": "0.1526", "code": "d init(ServletConfig o)throws ServletException{(\"\");if(c){er(); } }", "n_tokens": 67, "n_pass": [573, 155, 39]}
{"time": "2021-02-22 04:58:00.944075", "score": "0.8959", "loss": "0.1896", "code": "d init(ServletConfig o)throws ServletException{(\"\");if(c){r(); } }", "n_tokens": 66, "n_pass": [575, 156, 40]}
{"time": "2021-02-22 04:58:03.553851", "score": "0.8959", "loss": "0.1896", "code": "d init(ServletConfig o)throws ServletException{(\"\");if(c){r();} }", "n_tokens": 65, "n_pass": [580, 157, 41]}
{"time": "2021-02-22 04:58:06.163076", "score": "0.8959", "loss": "0.1896", "code": "d init(ServletConfig o)throws ServletException{(\"\");if(c){r();}}", "n_tokens": 64, "n_pass": [582, 158, 42]}

Minimal simplified code:
d init(ServletConfig o)throws ServletException{("");if(c){r();}}

