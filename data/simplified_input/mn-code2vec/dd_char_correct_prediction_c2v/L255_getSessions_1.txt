
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/sakaiproject__sakai/kernel/api/src/main/java/org/sakaiproject/event/cover/UsageSessionService_getSessions.java
method_name = getSessions
method_body = public static java.util.List getSessions(java.util.List param0) { org.sakaiproject.event.api.UsageSessionService service = getInstance(); if (service == null) return null; return service.getSessions(param0); }
predict, score, loss = getSessions, 0.9172666668891907, 0.15718679130077362

Trace of simplified code(s):
{"time": "2021-02-23 00:29:44.149962", "score": "0.9173", "loss": "0.1572", "code": "public static java.util.List getSessions(java.util.List param0) { org.sakaiproject.event.api.UsageSessionService service = getInstance(); if (service == null) return null; return service.getSessions(param0); }", "n_tokens": 209, "n_pass": [1, 1, 1]}
{"time": "2021-02-23 00:29:46.785677", "score": "0.9058", "loss": "0.1777", "code": "st getSessions(java.util.List param0) { org.sakaiproject.event.api.UsageSessionService service = getInstance(); if (service == null) return null; return service.getSessions(param0); }", "n_tokens": 183, "n_pass": [20, 2, 2]}
{"time": "2021-02-23 00:29:49.377140", "score": "0.8808", "loss": "0.22", "code": "st getSessions(java.util.List param0) { org.sakaipronService service = getInstance(); if (service == null) return null; return service.getSessions(param0); }", "n_tokens": 157, "n_pass": [22, 3, 3]}
{"time": "2021-02-23 00:29:51.957538", "score": "0.9142", "loss": "0.1883", "code": "st getSessions(java.util.List param0) { org.sakaiproance(); if (service == null) return null; return service.getSessions(param0); }", "n_tokens": 131, "n_pass": [23, 4, 4]}
{"time": "2021-02-23 00:29:54.566677", "score": "0.7846", "loss": "0.5786", "code": "st getSessions(java.util.List param0) { org.sakaiproance(); if (sl) return null; return service.getSessions(param0); }", "n_tokens": 118, "n_pass": [40, 5, 5]}
{"time": "2021-02-23 00:29:57.181914", "score": "0.9681", "loss": "0.0651", "code": "st getSessions(java.util.List param0) { org.sakaiproance(); if (sl) return nulvice.getSessions(param0); }", "n_tokens": 105, "n_pass": [42, 6, 6]}
{"time": "2021-02-23 00:30:11.336461", "score": "0.6439", "loss": "0.5565", "code": "st getSessions(jav.List param0) { org.sakaiproance(); if (sl) return nulvice.getSessions(param0); }", "n_tokens": 99, "n_pass": [74, 11, 7]}
{"time": "2021-02-23 00:30:13.921656", "score": "0.509", "loss": "1.0661", "code": "st getSessions(jav.List param0) { orproance(); if (sl) return nulvice.getSessions(param0); }", "n_tokens": 92, "n_pass": [78, 12, 8]}
{"time": "2021-02-23 00:30:16.530161", "score": "0.4684", "loss": "1.1005", "code": "st getSessions(jav.List param0) { or(); if (sl) return nulvice.getSessions(param0); }", "n_tokens": 85, "n_pass": [79, 13, 9]}
{"time": "2021-02-23 00:30:30.340685", "score": "0.3306", "loss": "1.5184", "code": "st getSessions(jav.List param0) { or(); if (sl) return nue.getSessions(param0); }", "n_tokens": 81, "n_pass": [126, 18, 10]}
{"time": "2021-02-23 00:30:40.726983", "score": "0.3433", "loss": "1.5164", "code": "st getSessions(jav.List param0) { or(); if (sl) return nue.getSessions(pa); }", "n_tokens": 77, "n_pass": [131, 22, 11]}
{"time": "2021-02-23 00:30:44.843242", "score": "0.9118", "loss": "0.1535", "code": "st getSessions(javst param0) { or(); if (sl) return nue.getSessions(pa); }", "n_tokens": 74, "n_pass": [139, 23, 12]}
{"time": "2021-02-23 00:30:47.486319", "score": "0.9734", "loss": "0.0406", "code": "st getSessions(javst am0) { or(); if (sl) return nue.getSessions(pa); }", "n_tokens": 71, "n_pass": [141, 24, 13]}
{"time": "2021-02-23 00:31:01.962354", "score": "0.9615", "loss": "0.0804", "code": "st getSessions(st am0) { or(); if (sl) return nue.getSessions(pa); }", "n_tokens": 68, "n_pass": [162, 29, 14]}
{"time": "2021-02-23 00:31:18.286571", "score": "0.8838", "loss": "0.1566", "code": "st getSessions(t am0) { or(); if (sl) return nue.getSessions(pa); }", "n_tokens": 67, "n_pass": [231, 34, 15]}
{"time": "2021-02-23 00:31:20.880010", "score": "0.8874", "loss": "0.1386", "code": "st getSessions(t am0) {r(); if (sl) return nue.getSessions(pa); }", "n_tokens": 65, "n_pass": [235, 35, 16]}
{"time": "2021-02-23 00:31:26.111746", "score": "0.9422", "loss": "0.0689", "code": "st getSessions(t am0) {r(); if (sl) return e.getSessions(pa); }", "n_tokens": 63, "n_pass": [246, 37, 17]}
{"time": "2021-02-23 00:31:28.717244", "score": "0.6873", "loss": "0.4063", "code": "st getSessions(t am0) {r(); if (sl) return getSessions(pa); }", "n_tokens": 61, "n_pass": [247, 38, 18]}
{"time": "2021-02-23 00:31:50.066888", "score": "0.5419", "loss": "0.6501", "code": "s getSessions(t am0) {r(); if (sl) return getSessions(pa); }", "n_tokens": 60, "n_pass": [258, 46, 19]}
{"time": "2021-02-23 00:32:21.377384", "score": "0.4606", "loss": "0.8596", "code": "s getSessions(t a0) {r(); if (sl) return getSessions(pa); }", "n_tokens": 59, "n_pass": [345, 55, 20]}
{"time": "2021-02-23 00:32:23.966476", "score": "0.4606", "loss": "0.8596", "code": "s getSessions(t a) {r(); if (sl) return getSessions(pa); }", "n_tokens": 58, "n_pass": [346, 56, 21]}
{"time": "2021-02-23 00:32:26.535688", "score": "0.4606", "loss": "0.8596", "code": "s getSessions(t a){r(); if (sl) return getSessions(pa); }", "n_tokens": 57, "n_pass": [348, 57, 22]}
{"time": "2021-02-23 00:32:29.191839", "score": "0.4606", "loss": "0.8596", "code": "s getSessions(t a){r();if (sl) return getSessions(pa); }", "n_tokens": 56, "n_pass": [354, 58, 23]}
{"time": "2021-02-23 00:32:31.834153", "score": "0.4606", "loss": "0.8596", "code": "s getSessions(t a){r();if(sl) return getSessions(pa); }", "n_tokens": 55, "n_pass": [357, 59, 24]}
{"time": "2021-02-23 00:32:37.104640", "score": "0.529", "loss": "0.668", "code": "s getSessions(t a){r();if(s) return getSessions(pa); }", "n_tokens": 54, "n_pass": [360, 61, 25]}
{"time": "2021-02-23 00:32:39.707525", "score": "0.529", "loss": "0.668", "code": "s getSessions(t a){r();if(s)return getSessions(pa); }", "n_tokens": 53, "n_pass": [362, 62, 26]}
{"time": "2021-02-23 00:33:13.531259", "score": "0.5234", "loss": "0.6833", "code": "s getSessions(t a){r();if(s)return getSessions(a); }", "n_tokens": 52, "n_pass": [382, 75, 27]}
{"time": "2021-02-23 00:33:18.684556", "score": "0.5234", "loss": "0.6833", "code": "s getSessions(t a){r();if(s)return getSessions(a);}", "n_tokens": 51, "n_pass": [386, 77, 28]}

Minimal simplified code:
s getSessions(t a){r();if(s)return getSessions(a);}

