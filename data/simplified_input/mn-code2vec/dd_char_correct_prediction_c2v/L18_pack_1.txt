
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/dronekit__dronekit-android/dependencyLibs/Mavlink/src/com/MAVLink/common/msg_home_position_pack.java
method_name = pack
method_body = public MAVLinkPacket pack() { MAVLinkPacket packet = new MAVLinkPacket(MAVLINK_MSG_LENGTH); packet.sysid = 255; packet.compid = 190; packet.msgid = MAVLINK_MSG_ID_HOME_POSITION; packet.payload.putInt(latitude); packet.payload.putInt(longitude); packet.payload.putInt(altitude); packet.payload.putFloat(x); packet.payload.putFloat(y); packet.payload.putFloat(z); for (int i = 0; i < q.length; i++) { packet.payload.putFloat(q[i]); } packet.payload.putFloat(approach_x); packet.payload.putFloat(approach_y); packet.payload.putFloat(approach_z); return packet; }
predict, score, loss = pack, 0.9995026588439941, 0.0008110094931907952

Trace of simplified code(s):
{"time": "2021-02-21 17:26:11.597270", "score": "0.9945", "loss": "0.0061", "code": "public MAVLinkPacket pack() { MAVLinkPacket packet = new MAVLinkPacket(MAVLINK_MSG_LENGTH); packet.sysid = 255; packet.compid = 190; packet.msgid = MAVLINK_MSG_ID_HOME_POSITION; packet.payload.putInt(latitude); packet.payload.putInt(longitude); packet.payload.putInt(altitude); packet.payload.putFloat(x); packet.payload.putFloat(y); packet.payload.putFloat(z); for (int i = 0; i < q.length; i++) { packet.payload.putFloat(q[i]); } packet.payload.putFloat(approach_x); packet.payload.putFloat(approach_y); packet.payload.putFloat(approach_z); return packet; }", "n_tokens": 559, "n_pass": [1, 1, 1]}
{"time": "2021-02-21 17:26:14.265177", "score": "1.0", "loss": "0.0001", "code": "public MAVLinkPacket pack() { MAVLinkPacket packet = new MAVLinkPacket(MAVLINK_MSG_LENGTH); packet.sysid = 255; packet.compid = 190; packetacket.payload.putFloat(x); packet.payload.putFloat(y); packet.payload.putFloat(z); for (int i = 0; i < q.length; i++) { packet.payload.putFloat(q[i]); } packet.payload.putFloat(approach_x); packet.payload.putFloat(approach_y); packet.payload.putFloat(approach_z); return packet; }", "n_tokens": 419, "n_pass": [9, 2, 2]}
{"time": "2021-02-21 17:26:16.926830", "score": "1.0", "loss": "0.0", "code": "public MAVLinkPacket pack() { MAVLinkPacket packet = new MAVLinkPacket(MAVLINK_MSG_LENGTH); packet.sysid = 255; packet.compid = 190; packetputFloat(z); for (int i = 0; i < q.length; i++) { packet.payload.putFloat(q[i]); } packet.payload.putFloat(approach_x); packet.payload.putFloat(approach_y); packet.payload.putFloat(approach_z); return packet; }", "n_tokens": 349, "n_pass": [18, 3, 3]}
{"time": "2021-02-21 17:26:19.592272", "score": "0.9968", "loss": "0.0043", "code": "public MAVLinkPacket pack() { MAVLinkPacket packet = new MAVLinkPackeputFloat(z); for (int i = 0; i < q.length; i++) { packet.payload.putFloat(q[i]); } packet.payload.putFloat(approach_x); packet.payload.putFloat(approach_y); packet.payload.putFloat(approach_z); return packet; }", "n_tokens": 279, "n_pass": [22, 4, 4]}
{"time": "2021-02-21 17:26:22.256528", "score": "0.9957", "loss": "0.0052", "code": "public MAVLinkPacket pack() { MAVLinkPacket packet = new MAVLinkPackeputFloat(z); for (int i = 0; i < q.length; i++) { packet.payload.putFloat(q[i]); } packet.payload.putFloaoat(approach_y); packet.payload.putFloat(approach_z); return packet; }", "n_tokens": 244, "n_pass": [38, 5, 5]}
{"time": "2021-02-21 17:26:24.886592", "score": "0.9974", "loss": "0.004", "code": "public MAVLinkPacket pack() { MAVLinkPacket packet = new MAVLinkPackeputFloat(z); for (int i = 0; i < q.length; i++) { packet.payload.putFloat(q[i]); } packet.payload.putFloaFloat(approach_z); return packet; }", "n_tokens": 209, "n_pass": [39, 6, 6]}
{"time": "2021-02-21 17:26:27.527768", "score": "0.9811", "loss": "0.0276", "code": "public MAVLinkPacket pack() { MAVLputFloat(z); for (int i = 0; i < q.length; i++) { packet.payload.putFloat(q[i]); } packet.payload.putFloaFloat(approach_z); return packet; }", "n_tokens": 174, "n_pass": [42, 7, 7]}
{"time": "2021-02-21 17:26:30.186342", "score": "0.9778", "loss": "0.0716", "code": "public MAVLinkPacket pack() { MAVLputFloat(z); for (int i = 0; i < q.length; i++) { pFloat(q[i]); } packet.payload.putFloaFloat(approach_z); return packet; }", "n_tokens": 157, "n_pass": [61, 8, 8]}
{"time": "2021-02-21 17:26:32.824134", "score": "0.9412", "loss": "0.1567", "code": "public MAVLinkPacket pack() { MAVLputFloat(z); for (int i = 0; i < q.length; i++) { pFloat(q[i]); } pacaFloat(approach_z); return packet; }", "n_tokens": 139, "n_pass": [63, 9, 9]}
{"time": "2021-02-21 17:26:35.446518", "score": "0.9363", "loss": "0.1838", "code": "public MAVLinkPacket pack() { MAVLputFloat(z); for (int i = 0; i < q.length; i++) { pFloat(q[i]); } pac; return packet; }", "n_tokens": 121, "n_pass": [64, 10, 10]}
{"time": "2021-02-21 17:26:40.708384", "score": "0.852", "loss": "0.3706", "code": "public MAVLinkPacket pack() { MAVLputFloat(z); for (int i = 0; i < q.length; i++) { pFloat(q[i]); } pacpacket; }", "n_tokens": 112, "n_pass": [86, 12, 11]}
{"time": "2021-02-21 17:26:48.984892", "score": "0.852", "loss": "0.3706", "code": "public MAVLinkPacket pack() { MAat(z); for (int i = 0; i < q.length; i++) { pFloat(q[i]); } pacpacket; }", "n_tokens": 104, "n_pass": [91, 15, 12]}
{"time": "2021-02-21 17:26:57.237919", "score": "0.8662", "loss": "0.3831", "code": "public MAVLinkPacket pack() { MAat(z); for (i = 0; i < q.length; i++) { pFloat(q[i]); } pacpacket; }", "n_tokens": 100, "n_pass": [131, 18, 13]}
{"time": "2021-02-21 17:26:59.865437", "score": "0.7889", "loss": "0.5237", "code": "public MAVLinkPacket pack() { MAat(z); for (0; i < q.length; i++) { pFloat(q[i]); } pacpacket; }", "n_tokens": 96, "n_pass": [132, 19, 14]}
{"time": "2021-02-21 17:27:02.490884", "score": "0.6866", "loss": "0.7596", "code": "public MAVLinkPacket pack() { MAat(z); for (0; i.length; i++) { pFloat(q[i]); } pacpacket; }", "n_tokens": 92, "n_pass": [134, 20, 15]}
{"time": "2021-02-21 17:27:05.118075", "score": "0.6862", "loss": "0.7594", "code": "public MAVLinkPacket pack() { MAat(z); for (0; igth; i++) { pFloat(q[i]); } pacpacket; }", "n_tokens": 88, "n_pass": [135, 21, 16]}
{"time": "2021-02-21 17:27:07.719415", "score": "0.6862", "loss": "0.7594", "code": "public MAVLinkPacket pack() { MAat(z); for (0; igth; i++) { pFloat(q[i]); } paet; }", "n_tokens": 83, "n_pass": [142, 22, 17]}
{"time": "2021-02-21 17:27:21.116336", "score": "0.6849", "loss": "0.7635", "code": "public MAVLinkPacket pack() { MAat(z); for (0; igth; i++) { pFloat(q[i]); } p; }", "n_tokens": 80, "n_pass": [200, 27, 18]}
{"time": "2021-02-21 17:27:42.702926", "score": "0.7355", "loss": "0.606", "code": "public MAVLinkPacket pack() { at(z); for (0; igth; i++) { pFloat(q[i]); } p; }", "n_tokens": 78, "n_pass": [217, 35, 19]}
{"time": "2021-02-21 17:27:45.306290", "score": "0.5039", "loss": "1.2135", "code": "public MAVLinkPacket pack() { (z); for (0; igth; i++) { pFloat(q[i]); } p; }", "n_tokens": 76, "n_pass": [218, 36, 20]}
{"time": "2021-02-21 17:27:47.925299", "score": "0.5039", "loss": "1.2135", "code": "public MAVLinkPacket pack() { (z); for (0;gth; i++) { pFloat(q[i]); } p; }", "n_tokens": 74, "n_pass": [225, 37, 21]}
{"time": "2021-02-21 17:27:50.533600", "score": "0.5036", "loss": "1.2149", "code": "public MAVLinkPacket pack() { (z); for (0;h; i++) { pFloat(q[i]); } p; }", "n_tokens": 72, "n_pass": [226, 38, 22]}
{"time": "2021-02-21 17:27:53.165997", "score": "0.4956", "loss": "1.2332", "code": "public MAVLinkPacket pack() { (z); for (0;h; i) { pFloat(q[i]); } p; }", "n_tokens": 70, "n_pass": [229, 39, 23]}
{"time": "2021-02-21 17:27:55.791080", "score": "0.981", "loss": "0.1141", "code": "public MAVLinkPacket pack() { (z); for (0;h; i) { loat(q[i]); } p; }", "n_tokens": 68, "n_pass": [232, 40, 24]}
{"time": "2021-02-21 17:27:58.390014", "score": "0.9089", "loss": "0.1192", "code": "public MAVLinkPacket pack() { (z); for (0;h; i) { t(q[i]); } p; }", "n_tokens": 65, "n_pass": [233, 41, 25]}
{"time": "2021-02-21 17:28:01.011809", "score": "0.996", "loss": "0.0051", "code": "public MAVLinkPacket pack() { (z); for (0;h; i) { t(q); } p; }", "n_tokens": 62, "n_pass": [235, 42, 26]}
{"time": "2021-02-21 17:28:22.680908", "score": "0.996", "loss": "0.0051", "code": "public MAVLinkPacket pack() { (z); for (0;h;) { t(q); } p; }", "n_tokens": 60, "n_pass": [261, 50, 27]}
{"time": "2021-02-21 17:28:48.820778", "score": "0.996", "loss": "0.0051", "code": "public MAVLinkPacket pack() { (z); for (0;h;){ t(q); } p; }", "n_tokens": 59, "n_pass": [347, 58, 28]}
{"time": "2021-02-21 17:28:51.411876", "score": "0.996", "loss": "0.0051", "code": "public MAVLinkPacket pack() { (z); for (0;h;){t(q); } p; }", "n_tokens": 58, "n_pass": [349, 59, 29]}
{"time": "2021-02-21 17:28:54.015119", "score": "0.9934", "loss": "0.0191", "code": "public MAVLinkPacket pack() { (z); for (0;h;){(q); } p; }", "n_tokens": 57, "n_pass": [350, 60, 30]}
{"time": "2021-02-21 17:28:56.584997", "score": "0.9946", "loss": "0.0142", "code": "public MAVLinkPacket pack() { (z); for (0;h;){(q); }  }", "n_tokens": 55, "n_pass": [356, 61, 31]}
{"time": "2021-02-21 17:29:37.627938", "score": "0.9946", "loss": "0.0142", "code": "public MAVLinkPacket pack(){ (z); for (0;h;){(q); }  }", "n_tokens": 54, "n_pass": [385, 76, 32]}
{"time": "2021-02-21 17:29:40.222838", "score": "0.9946", "loss": "0.0142", "code": "public MAVLinkPacket pack(){(z); for (0;h;){(q); }  }", "n_tokens": 53, "n_pass": [387, 77, 33]}
{"time": "2021-02-21 17:29:42.819706", "score": "0.9946", "loss": "0.0142", "code": "public MAVLinkPacket pack(){(z);for (0;h;){(q); }  }", "n_tokens": 52, "n_pass": [392, 78, 34]}
{"time": "2021-02-21 17:29:45.417036", "score": "0.9946", "loss": "0.0142", "code": "public MAVLinkPacket pack(){(z);for(0;h;){(q); }  }", "n_tokens": 51, "n_pass": [396, 79, 35]}
{"time": "2021-02-21 17:29:48.012473", "score": "0.9951", "loss": "0.0114", "code": "public MAVLinkPacket pack(){(z);for(;h;){(q); }  }", "n_tokens": 50, "n_pass": [398, 80, 36]}
{"time": "2021-02-21 17:29:50.602171", "score": "0.9951", "loss": "0.0105", "code": "public MAVLinkPacket pack(){(z);for(;;){(q); }  }", "n_tokens": 49, "n_pass": [400, 81, 37]}
{"time": "2021-02-21 17:30:33.048941", "score": "0.9951", "loss": "0.0105", "code": "public MAVLinkPacket pack(){(z);for(;;){(q);}  }", "n_tokens": 48, "n_pass": [454, 96, 38]}
{"time": "2021-02-21 17:30:35.642966", "score": "0.9951", "loss": "0.0105", "code": "public MAVLinkPacket pack(){(z);for(;;){(q);} }", "n_tokens": 47, "n_pass": [456, 97, 39]}
{"time": "2021-02-21 17:30:38.247718", "score": "0.9951", "loss": "0.0105", "code": "public MAVLinkPacket pack(){(z);for(;;){(q);}}", "n_tokens": 46, "n_pass": [457, 98, 40]}

Minimal simplified code:
public MAVLinkPacket pack(){(z);for(;;){(q);}}

