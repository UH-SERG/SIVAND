
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/dronekit__dronekit-android/dependencyLibs/Mavlink/src/com/MAVLink/ardupilotmega/msg_wind_pack.java
method_name = pack
method_body = public MAVLinkPacket pack() { MAVLinkPacket packet = new MAVLinkPacket(MAVLINK_MSG_LENGTH); packet.sysid = 255; packet.compid = 190; packet.msgid = MAVLINK_MSG_ID_WIND; packet.payload.putFloat(direction); packet.payload.putFloat(speed); packet.payload.putFloat(speed_z); return packet; }
predict, score, loss = pack, 0.9999991655349731, 1.0728830375228426e-06

Trace of simplified code(s):
{"time": "2021-02-22 14:03:40.173607", "score": "1.0", "loss": "0.0", "code": "public MAVLinkPacket pack() { MAVLinkPacket packet = new MAVLinkPacket(MAVLINK_MSG_LENGTH); packet.sysid = 255; packet.compid = 190; packet.msgid = MAVLINK_MSG_ID_WIND; packet.payload.putFloat(direction); packet.payload.putFloat(speed); packet.payload.putFloat(speed_z); return packet; }", "n_tokens": 287, "n_pass": [1, 1, 1]}
{"time": "2021-02-22 14:03:42.793338", "score": "1.0", "loss": "0.0", "code": "public MAVLinkPacket pack() { MAVLinkPacket packet = new MAVLinkPacket(MAVLINK_MSG_LENGTH); packet.sysid = 255; packet.compid = 190; packet.msgload.putFloat(speed); packet.payload.putFloat(speed_z); return packet; }", "n_tokens": 215, "n_pass": [10, 2, 2]}
{"time": "2021-02-22 14:03:45.433782", "score": "1.0", "loss": "0.0", "code": "public MAVLinkPacket pack() { MAVLinkPacket packet = new MAVLinkPacket(MAVLINK_MSG_LENGTH); packet.sysid = 255; packet.compid = 190; packet.msg.putFloat(speed_z); return packet; }", "n_tokens": 179, "n_pass": [19, 3, 3]}
{"time": "2021-02-22 14:03:48.064501", "score": "1.0", "loss": "0.0", "code": "public MAVLinkPacket pack() { MAVLinkPacket packet = new MAVLinkPacket(MAVLINK_MSG_LENGTH); packet.sysid = 255; packet.compid = 190; packet.msg; return packet; }", "n_tokens": 161, "n_pass": [34, 4, 4]}
{"time": "2021-02-22 14:03:50.731001", "score": "0.9999", "loss": "0.0005", "code": "ket pack() { MAVLinkPacket packet = new MAVLinkPacket(MAVLINK_MSG_LENGTH); packet.sysid = 255; packet.compid = 190; packet.msg; return packet; }", "n_tokens": 144, "n_pass": [35, 5, 5]}
{"time": "2021-02-22 14:03:56.015931", "score": "0.9999", "loss": "0.0002", "code": "ket pack() { MAVLinkPacket packet = new MAVLinkPacket(MAVLINK_MSG_LENGTH); packet.sysid = 255; packet.compid; return packet; }", "n_tokens": 126, "n_pass": [42, 7, 6]}
{"time": "2021-02-22 14:03:58.619363", "score": "0.4263", "loss": "1.5795", "code": "ket pack() { MAVLinkPacket packet = new MAVLinkPacket(); packet.sysid = 255; packet.compid; return packet; }", "n_tokens": 108, "n_pass": [47, 8, 7]}
{"time": "2021-02-22 14:04:01.234813", "score": "0.8395", "loss": "0.4373", "code": "ket pack() { MAVLinkPacket packet = new MAVLinkPacket(); packet255; packet.compid; return packet; }", "n_tokens": 99, "n_pass": [67, 9, 8]}
{"time": "2021-02-22 14:04:03.825291", "score": "0.8718", "loss": "0.348", "code": "ket pack() { MAVLinkPacket packet = new MAVLinkPacket(); packetet.compid; return packet; }", "n_tokens": 90, "n_pass": [68, 10, 9]}
{"time": "2021-02-22 14:04:06.435966", "score": "0.8672", "loss": "0.3589", "code": "ket pack() { MAVLinkPacket packet = new MAVLinkPacket(); packet; return packet; }", "n_tokens": 81, "n_pass": [69, 11, 10]}
{"time": "2021-02-22 14:04:09.028814", "score": "0.7885", "loss": "0.4662", "code": "ket pack() { MAVLinkPacket packet = new MAVLinkPacket(); packetpacket; }", "n_tokens": 72, "n_pass": [70, 12, 11]}
{"time": "2021-02-22 14:04:11.612794", "score": "0.7662", "loss": "0.4067", "code": "ket pack() { MAVLipacket = new MAVLinkPacket(); packetpacket; }", "n_tokens": 63, "n_pass": [74, 13, 12]}
{"time": "2021-02-22 14:04:16.833467", "score": "0.7662", "loss": "0.4067", "code": "ket pack() { MAVcket = new MAVLinkPacket(); packetpacket; }", "n_tokens": 59, "n_pass": [96, 15, 13]}
{"time": "2021-02-22 14:04:29.757655", "score": "0.7662", "loss": "0.4067", "code": "ket pack() { MAVcket = new MAVLinkPacket(); tpacket; }", "n_tokens": 54, "n_pass": [103, 20, 14]}
{"time": "2021-02-22 14:04:32.331244", "score": "0.7578", "loss": "0.4215", "code": "ket pack() { MAVcket = new MAVLinkPacket(); et; }", "n_tokens": 49, "n_pass": [104, 21, 15]}
{"time": "2021-02-22 14:04:48.638354", "score": "0.7651", "loss": "0.4071", "code": "ket pack() { MAVcket = new MAVLinkPacket();; }", "n_tokens": 46, "n_pass": [138, 27, 16]}
{"time": "2021-02-22 14:04:51.232720", "score": "0.7778", "loss": "0.2592", "code": "t pack() { MAVcket = new MAVLinkPacket();; }", "n_tokens": 44, "n_pass": [140, 28, 17]}
{"time": "2021-02-22 14:04:54.954579", "score": "0.7778", "loss": "0.2592", "code": "t pack() {AVcket = new MAVLinkPacket();; }", "n_tokens": 42, "n_pass": [146, 29, 18]}
{"time": "2021-02-22 14:05:00.119265", "score": "0.7778", "loss": "0.2592", "code": "t pack() {AVet = new MAVLinkPacket();; }", "n_tokens": 40, "n_pass": [148, 31, 19]}
{"time": "2021-02-22 14:05:02.734802", "score": "0.4353", "loss": "0.85", "code": "t pack() {AV = new MAVLinkPacket();; }", "n_tokens": 38, "n_pass": [149, 32, 20]}
{"time": "2021-02-22 14:05:24.076769", "score": "0.4353", "loss": "0.85", "code": "t pack() {AV= new MAVLinkPacket();; }", "n_tokens": 37, "n_pass": [201, 39, 21]}
{"time": "2021-02-22 14:05:26.664680", "score": "0.4353", "loss": "0.85", "code": "t pack() {AV=new MAVLinkPacket();; }", "n_tokens": 36, "n_pass": [202, 40, 22]}
{"time": "2021-02-22 14:06:05.010222", "score": "0.4353", "loss": "0.85", "code": "t pack(){AV=new MAVLinkPacket();; }", "n_tokens": 35, "n_pass": [230, 54, 23]}
{"time": "2021-02-22 14:06:07.610412", "score": "0.8699", "loss": "0.1427", "code": "t pack(){V=new MAVLinkPacket();; }", "n_tokens": 34, "n_pass": [232, 55, 24]}
{"time": "2021-02-22 14:06:52.174051", "score": "0.8699", "loss": "0.1427", "code": "t pack(){V=new MAVLinkPacket(); }", "n_tokens": 33, "n_pass": [275, 71, 25]}
{"time": "2021-02-22 14:06:54.740099", "score": "0.8699", "loss": "0.1427", "code": "t pack(){V=new MAVLinkPacket();}", "n_tokens": 32, "n_pass": [276, 72, 26]}

Minimal simplified code:
t pack(){V=new MAVLinkPacket();}

