
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/mimno__Mallet/src/cc/mallet/pipe/iterator/ArrayIterator_next.java
method_name = next
method_body = public Instance next() { URI uri = null; try { uri = new URI("array:" + index++); } catch (Exception e) { e.printStackTrace(); throw new IllegalStateException(); } return new Instance(subIterator.next(), target, uri, null); }
predict, score, loss = next, 0.800879180431366, 0.30444878339767456

Trace of simplified code(s):
{"time": "2021-02-22 04:33:56.158804", "score": "0.8009", "loss": "0.3044", "code": "public Instance next() { URI uri = null; try { uri = new URI(\"array:\" + index++); } catch (Exception e) { e.printStackTrace(); throw new IllegalStateException(); } return new Instance(subIterator.next(), target, uri, null); }", "n_tokens": 225, "n_pass": [1, 1, 1]}
{"time": "2021-02-22 04:33:58.797758", "score": "0.8244", "loss": "0.2727", "code": "public Instance next() { URI uri = null; try { uri = new URI(\"array:\" + index++); } catch (Exception e) { e.prinegalStateException(); } return new Instance(subIterator.next(), target, uri, null); }", "n_tokens": 197, "n_pass": [24, 2, 2]}
{"time": "2021-02-22 04:34:01.433946", "score": "0.8244", "loss": "0.2727", "code": "public Instance next() { URI uri = null; try { uri = new URI(\"array:\" + index++); } catch (Exception e) { e.printion(); } return new Instance(subIterator.next(), target, uri, null); }", "n_tokens": 183, "n_pass": [45, 3, 3]}
{"time": "2021-02-22 04:34:04.112542", "score": "0.8985", "loss": "0.2418", "code": "public Instance next() { URI uri = null; try { uri = new URI(\"array:\" + index++); } catch (Exception e) { e.printion(); } retue(subIterator.next(), target, uri, null); }", "n_tokens": 169, "n_pass": [46, 4, 4]}
{"time": "2021-02-22 04:34:06.739065", "score": "0.9694", "loss": "0.0527", "code": "e next() { URI uri = null; try { uri = new URI(\"array:\" + index++); } catch (Exception e) { e.printion(); } retue(subIterator.next(), target, uri, null); }", "n_tokens": 155, "n_pass": [50, 5, 5]}
{"time": "2021-02-22 04:34:09.421036", "score": "0.9706", "loss": "0.0536", "code": "e next() { URInull; try { uri = new URI(\"array:\" + index++); } catch (Exception e) { e.printion(); } retue(subIterator.next(), target, uri, null); }", "n_tokens": 148, "n_pass": [86, 6, 6]}
{"time": "2021-02-22 04:34:12.053960", "score": "0.9684", "loss": "0.0548", "code": "e next() { URInull; try { uri = new URI(\"array:\" ++); } catch (Exception e) { e.printion(); } retue(subIterator.next(), target, uri, null); }", "n_tokens": 141, "n_pass": [91, 7, 7]}
{"time": "2021-02-22 04:34:14.668194", "score": "0.9607", "loss": "0.0611", "code": "e next() { URInull; try { uri = new URI(\"array:\" ++); } catch (on e) { e.printion(); } retue(subIterator.next(), target, uri, null); }", "n_tokens": 134, "n_pass": [94, 8, 8]}
{"time": "2021-02-22 04:34:19.884715", "score": "0.3146", "loss": "1.6783", "code": "e next() { URInull; try { uri = new URI(\"array:\" ++); } catch (on e) { e.printion(); } retue(subItnext(), target, uri, null); }", "n_tokens": 127, "n_pass": [100, 10, 9]}
{"time": "2021-02-22 04:34:22.538924", "score": "0.2666", "loss": "1.7086", "code": "e next() { URInull; try { uri = new URI(\"array:\" ++); } catch (on e) { e.printion(); } retue(subItnext(), targetnull); }", "n_tokens": 120, "n_pass": [103, 11, 10]}
{"time": "2021-02-22 04:34:33.744833", "score": "0.2518", "loss": "1.7783", "code": "e next() { Uull; try { uri = new URI(\"array:\" ++); } catch (on e) { e.printion(); } retue(subItnext(), targetnull); }", "n_tokens": 117, "n_pass": [161, 15, 11]}
{"time": "2021-02-22 04:34:36.364804", "score": "0.2761", "loss": "1.68", "code": "e next() { U; try { uri = new URI(\"array:\" ++); } catch (on e) { e.printion(); } retue(subItnext(), targetnull); }", "n_tokens": 114, "n_pass": [162, 16, 12]}
{"time": "2021-02-22 04:34:38.968419", "score": "0.4895", "loss": "0.982", "code": "e next() { U; try { u= new URI(\"array:\" ++); } catch (on e) { e.printion(); } retue(subItnext(), targetnull); }", "n_tokens": 111, "n_pass": [166, 17, 13]}
{"time": "2021-02-22 04:34:41.629895", "score": "0.4168", "loss": "1.283", "code": "e next() { U; try { u= nURI(\"array:\" ++); } catch (on e) { e.printion(); } retue(subItnext(), targetnull); }", "n_tokens": 108, "n_pass": [168, 18, 14]}
{"time": "2021-02-22 04:34:44.248298", "score": "0.4635", "loss": "1.0277", "code": "e next() { U; try { u= n(\"array:\" ++); } catch (on e) { e.printion(); } retue(subItnext(), targetnull); }", "n_tokens": 105, "n_pass": [169, 19, 15]}
{"time": "2021-02-22 04:34:46.872793", "score": "0.4626", "loss": "1.0311", "code": "e next() { U; try { u= n(\"ay:\" ++); } catch (on e) { e.printion(); } retue(subItnext(), targetnull); }", "n_tokens": 102, "n_pass": [171, 20, 16]}
{"time": "2021-02-22 04:34:49.488031", "score": "0.4816", "loss": "0.9577", "code": "e next() { U; try { u= n(\"ay:\" ++); } catch (on e) { ention(); } retue(subItnext(), targetnull); }", "n_tokens": 98, "n_pass": [179, 21, 17]}
{"time": "2021-02-22 04:34:52.084557", "score": "0.4834", "loss": "0.9527", "code": "e next() { U; try { u= n(\"ay:\" ++); } catch (on e) { en(); } retue(subItnext(), targetnull); }", "n_tokens": 94, "n_pass": [180, 22, 18]}
{"time": "2021-02-22 04:34:54.686368", "score": "0.4581", "loss": "1.0143", "code": "e next() { U; try { u= n(\"ay:\" ++); } catch (on e) { en(); } r(subItnext(), targetnull); }", "n_tokens": 90, "n_pass": [183, 23, 19]}
{"time": "2021-02-22 04:34:57.301063", "score": "0.4581", "loss": "1.0143", "code": "e next() { U; try { u= n(\"ay:\" ++); } catch (on e) { en(); } r(subxt(), targetnull); }", "n_tokens": 86, "n_pass": [185, 24, 20]}
{"time": "2021-02-22 04:34:59.903589", "score": "0.4581", "loss": "0.8563", "code": "e next() { U; try { u= n(\"ay:\" ++); } catch (on e) { en(); } r(sub, targetnull); }", "n_tokens": 82, "n_pass": [186, 25, 21]}
{"time": "2021-02-22 04:35:02.494630", "score": "0.6478", "loss": "0.697", "code": "e next() { U; try { u= n(\"ay:\" ++); } catch (on e) { en(); } r(subrgetnull); }", "n_tokens": 78, "n_pass": [187, 26, 22]}
{"time": "2021-02-22 04:35:05.106903", "score": "0.6478", "loss": "0.697", "code": "e next() { U; try { u= n(\"ay:\" ++); } catch (on e) { en(); } r(subnull); }", "n_tokens": 74, "n_pass": [188, 27, 23]}
{"time": "2021-02-22 04:35:07.725359", "score": "0.3501", "loss": "1.2261", "code": "e next() { U; try { u= n(\"ay:\" ++); } catch (on e) { en(); } r(sub); }", "n_tokens": 70, "n_pass": [189, 28, 24]}
{"time": "2021-02-22 04:35:17.431536", "score": "0.3501", "loss": "1.2261", "code": "e next(){ U; try { u= n(\"ay:\" ++); } catch (on e) { en(); } r(sub); }", "n_tokens": 69, "n_pass": [260, 30, 25]}
{"time": "2021-02-22 04:35:27.871429", "score": "0.3555", "loss": "1.2092", "code": "e next(){ U; try { u= n(\":\" ++); } catch (on e) { en(); } r(sub); }", "n_tokens": 67, "n_pass": [270, 34, 26]}
{"time": "2021-02-22 04:35:30.494569", "score": "0.3484", "loss": "1.229", "code": "e next(){ U; try { u= n(\":\" ++); } catch (on e) {n(); } r(sub); }", "n_tokens": 65, "n_pass": [283, 35, 27]}
{"time": "2021-02-22 04:35:33.129380", "score": "0.4833", "loss": "0.9172", "code": "e next(){ U; try { u= n(\":\" ++); } catch (on e) {n(); }(sub); }", "n_tokens": 63, "n_pass": [287, 36, 28]}
{"time": "2021-02-22 04:35:35.737166", "score": "0.5048", "loss": "0.9124", "code": "e next(){ U; try { u= n(\":\" ++); } catch (on e) {n(); }(s); }", "n_tokens": 61, "n_pass": [289, 37, 29]}
{"time": "2021-02-22 04:35:40.671677", "score": "0.4867", "loss": "0.9791", "code": "e next(){; try { u= n(\":\" ++); } catch (on e) {n(); }(s); }", "n_tokens": 59, "n_pass": [301, 38, 30]}
{"time": "2021-02-22 04:35:43.276323", "score": "0.4867", "loss": "0.9791", "code": "e next(){try { u= n(\":\" ++); } catch (on e) {n(); }(s); }", "n_tokens": 57, "n_pass": [302, 39, 31]}
{"time": "2021-02-22 04:35:45.884268", "score": "0.3155", "loss": "1.4994", "code": "e next(){try {  n(\":\" ++); } catch (on e) {n(); }(s); }", "n_tokens": 55, "n_pass": [306, 40, 32]}
{"time": "2021-02-22 04:35:58.472555", "score": "0.3155", "loss": "1.4994", "code": "e next(){try {  n(\":\"++); } catch (on e) {n(); }(s); }", "n_tokens": 54, "n_pass": [386, 42, 33]}
{"time": "2021-02-22 04:36:01.081642", "score": "0.3155", "loss": "1.4994", "code": "e next(){try {  n(\":\"++);} catch (on e) {n(); }(s); }", "n_tokens": 53, "n_pass": [390, 43, 34]}
{"time": "2021-02-22 04:36:03.686201", "score": "0.3155", "loss": "1.4994", "code": "e next(){try {  n(\":\"++);}catch (on e) {n(); }(s); }", "n_tokens": 52, "n_pass": [392, 44, 35]}
{"time": "2021-02-22 04:36:06.289236", "score": "0.3155", "loss": "1.4994", "code": "e next(){try {  n(\":\"++);}catch(on e) {n(); }(s); }", "n_tokens": 51, "n_pass": [398, 45, 36]}
{"time": "2021-02-22 04:36:11.527142", "score": "0.3276", "loss": "1.2924", "code": "e next(){try {  n(\":\"++);}catch(o e) {n(); }(s); }", "n_tokens": 50, "n_pass": [401, 47, 37]}
{"time": "2021-02-22 04:36:14.133750", "score": "0.3276", "loss": "1.2924", "code": "e next(){try {  n(\":\"++);}catch(o e){n(); }(s); }", "n_tokens": 49, "n_pass": [405, 48, 38]}
{"time": "2021-02-22 04:36:16.736113", "score": "0.3276", "loss": "1.2924", "code": "e next(){try {  n(\":\"++);}catch(o e){n();}(s); }", "n_tokens": 48, "n_pass": [411, 49, 39]}
{"time": "2021-02-22 04:36:19.342891", "score": "0.3276", "loss": "1.2924", "code": "e next(){try {  n(\":\"++);}catch(o e){n();}(s);}", "n_tokens": 47, "n_pass": [417, 50, 40]}
{"time": "2021-02-22 04:36:24.263308", "score": "0.3276", "loss": "1.2924", "code": "e next(){try{  n(\":\"++);}catch(o e){n();}(s);}", "n_tokens": 46, "n_pass": [431, 51, 41]}
{"time": "2021-02-22 04:36:26.880377", "score": "0.3276", "loss": "1.2924", "code": "e next(){try{ n(\":\"++);}catch(o e){n();}(s);}", "n_tokens": 45, "n_pass": [433, 52, 42]}
{"time": "2021-02-22 04:36:29.483425", "score": "0.3276", "loss": "1.2924", "code": "e next(){try{n(\":\"++);}catch(o e){n();}(s);}", "n_tokens": 44, "n_pass": [434, 53, 43]}
{"time": "2021-02-22 04:36:34.680040", "score": "0.3713", "loss": "1.1403", "code": "e next(){try{n(\"\"++);}catch(o e){n();}(s);}", "n_tokens": 43, "n_pass": [438, 55, 44]}

Minimal simplified code:
e next(){try{n(""++);}catch(o e){n();}(s);}

