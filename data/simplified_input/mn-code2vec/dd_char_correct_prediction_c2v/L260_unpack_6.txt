
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/dronekit__dronekit-android/dependencyLibs/Mavlink/src/com/MAVLink/ardupilotmega/msg_gimbal_torque_cmd_report_unpack.java
method_name = unpack
method_body = public void unpack(MAVLinkPayload payload) { payload.resetIndex(); this.rl_torque_cmd = payload.getShort(); this.el_torque_cmd = payload.getShort(); this.az_torque_cmd = payload.getShort(); this.target_system = payload.getUnsignedByte(); this.target_component = payload.getUnsignedByte(); }
predict, score, loss = unpack, 0.9995118379592896, 0.0005490464391186833

Trace of simplified code(s):
{"time": "2021-02-24 17:06:12.314329", "score": "0.9993", "loss": "0.0007", "code": "public void unpack(MAVLinkPayload payload) { payload.resetIndex(); this.rl_torque_cmd = payload.getShort(); this.el_torque_cmd = payload.getShort(); this.az_torque_cmd = payload.getShort(); this.target_system = payload.getUnsignedByte(); this.target_component = payload.getUnsignedByte(); }", "n_tokens": 290, "n_pass": [1, 1, 1]}
{"time": "2021-02-24 17:06:15.005239", "score": "0.9988", "loss": "0.0013", "code": "public void unpack(MAVLinkPayload payload) { payload.resetIndex(); this.t(); this.az_torque_cmd = payload.getShort(); this.target_system = payload.getUnsignedByte(); this.target_component = payload.getUnsignedByte(); }", "n_tokens": 218, "n_pass": [9, 2, 2]}
{"time": "2021-02-24 17:06:17.682606", "score": "0.9883", "loss": "0.0125", "code": "public void unpack(MAVLinkPayload payload) { payload.resetIndex(); this.d.getUnsignedByte(); this.target_component = payload.getUnsignedByte(); }", "n_tokens": 145, "n_pass": [10, 3, 3]}
{"time": "2021-02-24 17:06:20.422087", "score": "0.9987", "loss": "0.0014", "code": "public void unpack(MAVLinkPayload payload) { payload.resetIndex(); this.ponent = payload.getUnsignedByte(); }", "n_tokens": 109, "n_pass": [15, 4, 4]}
{"time": "2021-02-24 17:06:23.092443", "score": "0.9999", "loss": "0.0001", "code": "public void unpack(MAVLinkPayload payload) { payload.resetIndex(); this.etUnsignedByte(); }", "n_tokens": 91, "n_pass": [24, 5, 5]}
{"time": "2021-02-24 17:06:25.752817", "score": "0.9968", "loss": "0.0032", "code": "public void unpack(MAVLinkPayload payload) { payload.retUnsignedByte(); }", "n_tokens": 73, "n_pass": [28, 6, 6]}
{"time": "2021-02-24 17:06:28.408813", "score": "0.9968", "loss": "0.0032", "code": "public void unpack(MAVLinkPayload payload) { payload.rdByte(); }", "n_tokens": 64, "n_pass": [41, 7, 7]}
{"time": "2021-02-24 17:06:31.083537", "score": "0.9967", "loss": "0.0034", "code": "id unpack(MAVLinkPayload payload) { payload.rdByte(); }", "n_tokens": 55, "n_pass": [42, 8, 8]}
{"time": "2021-02-24 17:06:33.741165", "score": "0.9998", "loss": "0.0004", "code": "id unpack(MAVLinkPayload payload) { dByte(); }", "n_tokens": 46, "n_pass": [47, 9, 9]}
{"time": "2021-02-24 17:06:42.540695", "score": "0.9999", "loss": "0.0002", "code": "id unpack(MAVLinkPayload pd) { dByte(); }", "n_tokens": 41, "n_pass": [71, 12, 10]}
{"time": "2021-02-24 17:06:51.341207", "score": "0.9998", "loss": "0.0004", "code": "id unpack(MAVLinkPayload pd) { de(); }", "n_tokens": 38, "n_pass": [102, 15, 11]}
{"time": "2021-02-24 17:06:54.013684", "score": "0.9998", "loss": "0.0003", "code": "id unpack(MAVLinkPayload pd) { d; }", "n_tokens": 35, "n_pass": [103, 16, 12]}
{"time": "2021-02-24 17:07:20.589784", "score": "0.9999", "loss": "0.0001", "code": "d unpack(MAVLinkPayload pd) { d; }", "n_tokens": 34, "n_pass": [154, 25, 13]}
{"time": "2021-02-24 17:08:03.254140", "score": "0.9996", "loss": "0.0005", "code": "d unpack(MAVLinkPayload d) { d; }", "n_tokens": 33, "n_pass": [178, 40, 14]}
{"time": "2021-02-24 17:08:05.891014", "score": "0.9996", "loss": "0.0005", "code": "d unpack(MAVLinkPayload d){ d; }", "n_tokens": 32, "n_pass": [181, 41, 15]}
{"time": "2021-02-24 17:08:52.533418", "score": "0.9996", "loss": "0.0005", "code": "d unpack(MAVLinkPayload d){ ; }", "n_tokens": 31, "n_pass": [217, 57, 16]}
{"time": "2021-02-24 17:08:55.159899", "score": "0.9996", "loss": "0.0005", "code": "d unpack(MAVLinkPayload d){ ;}", "n_tokens": 30, "n_pass": [218, 58, 17]}
{"time": "2021-02-24 17:09:37.944594", "score": "0.9996", "loss": "0.0005", "code": "d unpack(MAVLinkPayload d){;}", "n_tokens": 29, "n_pass": [247, 73, 18]}

Minimal simplified code:
d unpack(MAVLinkPayload d){;}

