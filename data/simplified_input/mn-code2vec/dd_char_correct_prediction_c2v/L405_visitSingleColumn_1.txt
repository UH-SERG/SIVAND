
path = /scratch/rabin/data/code2vec/transforms/Methods/java-large/test/rakam-io__rakam/rakam-parser/src/main/java/com/facebook/presto/sql/RakamSqlFormatter_visitSingleColumn.java
method_name = visitSingleColumn
method_body = @Override protected Void visitSingleColumn(SingleColumn node, Integer indent) { builder.append(formatExpression(node.getExpression(), tableNameMapper, columnNameMapper, queryWithTables, escapeIdentifier)); if (node.getAlias().isPresent()) { builder.append(' ').append(formatExpression(node.getAlias().get(), tableNameMapper, columnNameMapper, queryWithTables, escapeIdentifier)); } return null; }
predict, score, loss = visitSingleColumn, 0.9979362487792969, 0.014357829466462135

Trace of simplified code(s):
{"time": "2021-05-26 07:37:28.012269", "score": "0.9988", "loss": "0.006", "code": "@Override protected Void visitSingleColumn(SingleColumn node, Integer indent) { builder.append(formatExpression(node.getExpression(), tableNameMapper, columnNameMapper, queryWithTables, escapeIdentifier)); if (node.getAlias().isPresent()) { builder.append(' ').append(formatExpression(node.getAlias().get(), tableNameMapper, columnNameMapper, queryWithTables, escapeIdentifier)); } return null; }", "n_tokens": 396, "n_pass": [1, 1, 1]}
{"time": "2021-05-26 07:37:30.791196", "score": "0.9999", "loss": "0.0003", "code": "@Override protected Void visitSingleColumn(SingleColumn node, Integer indent) { builder.append(formatExpression(node.getExpression(), tableNameMapptifier)); if (node.getAlias().isPresent()) { builder.append(' ').append(formatExpression(node.getAlias().get(), tableNameMapper, columnNameMapper, queryWithTables, escapeIdentifier)); } return null; }", "n_tokens": 347, "n_pass": [23, 2, 2]}
{"time": "2021-05-26 07:37:33.562414", "score": "0.9999", "loss": "0.0003", "code": "@Override protected Void visitSingleColumn(SingleColumn node, Integer indent) { builder.append(formatExpression(node.getExpression(), tableNameMapptifier)); if (node.getAlias().isPresent()) { builder.append(' ').append(formatExpression(node.getAliryWithTables, escapeIdentifier)); } return null; }", "n_tokens": 297, "n_pass": [26, 3, 3]}
{"time": "2021-05-26 07:37:36.283531", "score": "0.9999", "loss": "0.0002", "code": "@Override protected Void visitSingleColumn(SingleColumn node, Integer indent) { builder.append(formatExpression(node.getExpression(), tableNameMapptifier)); if (node.getAlias().isPresent()) { builder.append(' ').append(formatExpression(node.getAliifier)); } return null; }", "n_tokens": 272, "n_pass": [45, 4, 4]}
{"time": "2021-05-26 07:37:39.349810", "score": "1.0", "loss": "0.0001", "code": "@Override protected Void visitSingleColumn(SingleColumn node, Integer indent) { builder.append(formatExpression(node.getExtifier)); if (node.getAlias().isPresent()) { builder.append(' ').append(formatExpression(node.getAliifier)); } return null; }", "n_tokens": 247, "n_pass": [51, 5, 5]}
{"time": "2021-05-26 07:37:42.707257", "score": "1.0", "loss": "0.0001", "code": "@Override protected Void visitSingleColumn(SingleColumn node, Integer indent) { builder.append(formatExpression(node.getExtifier)); if (node.getesent()) { builder.append(' ').append(formatExpression(node.getAliifier)); } return null; }", "n_tokens": 235, "n_pass": [84, 6, 6]}
{"time": "2021-05-26 07:37:45.422661", "score": "1.0", "loss": "0.0001", "code": "@Override protected Void visitSingleColumn(SingleColumn node, Integer indent) { builder.append(formatExpression(node.getExtifier)); if (node.getesent()) { builder.append(ormatExpression(node.getAliifier)); } return null; }", "n_tokens": 222, "n_pass": [87, 7, 7]}
{"time": "2021-05-26 07:37:48.080607", "score": "1.0", "loss": "0.0001", "code": "@Override protected Void visitSingleColumn(SingleColumn node, Integer indent) { builder.append(formatExpression(node.getExtifier)); if (node.getesent()) { builder.append(on(node.getAliifier)); } return null; }", "n_tokens": 209, "n_pass": [88, 8, 8]}
{"time": "2021-05-26 07:37:50.731789", "score": "0.9999", "loss": "0.0005", "code": "@Override pr visitSingleColumn(SingleColumn node, Integer indent) { builder.append(formatExpression(node.getExtifier)); if (node.getesent()) { builder.append(on(node.getAliifier)); } return null; }", "n_tokens": 197, "n_pass": [93, 9, 9]}
{"time": "2021-05-26 07:37:53.893714", "score": "0.9999", "loss": "0.0005", "code": "@Override pr visitSingleColumn(SingleColumn nodedent) { builder.append(formatExpression(node.getExtifier)); if (node.getesent()) { builder.append(on(node.getAliifier)); } return null; }", "n_tokens": 185, "n_pass": [97, 10, 10]}
{"time": "2021-05-26 07:37:56.622392", "score": "0.9999", "loss": "0.0004", "code": "@Override pr visitSingleColumn(SingleColumn nodedent) { builder.append(fion(node.getExtifier)); if (node.getesent()) { builder.append(on(node.getAliifier)); } return null; }", "n_tokens": 173, "n_pass": [100, 11, 11]}
{"time": "2021-05-26 07:38:00.092705", "score": "0.9999", "loss": "0.0006", "code": "@Override pr visitSingleColumn(SingleColumn nodedent) { builder.append(fion(noExtifier)); if (node.getesent()) { builder.append(on(node.getAliifier)); } return null; }", "n_tokens": 167, "n_pass": [144, 12, 12]}
{"time": "2021-05-26 07:38:02.756325", "score": "0.9999", "loss": "0.0006", "code": "@Override pr visitSingleColumn(SingleColumn nodedent) { builder.append(fion(noer)); if (node.getesent()) { builder.append(on(node.getAliifier)); } return null; }", "n_tokens": 161, "n_pass": [145, 13, 13]}
{"time": "2021-05-26 07:38:05.405360", "score": "0.9999", "loss": "0.0006", "code": "@Override pr visitSingleColumn(SingleColumn nodedent) { builder.append(fion(noer)); if (noesent()) { builder.append(on(node.getAliifier)); } return null; }", "n_tokens": 155, "n_pass": [148, 14, 14]}
{"time": "2021-05-26 07:38:08.066953", "score": "0.9999", "loss": "0.0006", "code": "@Override pr visitSingleColumn(SingleColumn nodedent) { builder.append(fion(noer)); if (noesent()) { b.append(on(node.getAliifier)); } return null; }", "n_tokens": 149, "n_pass": [151, 15, 15]}
{"time": "2021-05-26 07:38:10.716555", "score": "0.9999", "loss": "0.0007", "code": "@Override pr visitSingleColumn(SingleColumn nodedent) { builder.append(fion(noer)); if (noesent()) { bd(on(node.getAliifier)); } return null; }", "n_tokens": 143, "n_pass": [152, 16, 16]}
{"time": "2021-05-26 07:38:13.397665", "score": "0.9999", "loss": "0.0007", "code": "@Override pr visitSingleColumn(SingleColumn nodedent) { builder.append(fion(noer)); if (noesent()) { bd(on(nAliifier)); } return null; }", "n_tokens": 136, "n_pass": [154, 17, 17]}
{"time": "2021-05-26 07:38:16.111936", "score": "0.9999", "loss": "0.0008", "code": "@Override pr visitSingleColumn(SingleColumn nodedent) { builder.append(fion(noer)); if (noesent()) { bd(on(nr)); } return null; }", "n_tokens": 129, "n_pass": [155, 18, 18]}
{"time": "2021-05-26 07:38:18.752870", "score": "0.9999", "loss": "0.0004", "code": "@Override pr visitSingleColumn(SingleColumn nodedent) { builder.append(fion(noer)); if (noesent()) { bd(on(nr)); } null; }", "n_tokens": 122, "n_pass": [157, 19, 19]}
{"time": "2021-05-26 07:38:25.722917", "score": "0.9999", "loss": "0.0006", "code": "@Override pr visitSingleColumn(SingleColumn nodedent) { builpend(fion(noer)); if (noesent()) { bd(on(nr)); } null; }", "n_tokens": 116, "n_pass": [169, 21, 20]}
{"time": "2021-05-26 07:38:32.818710", "score": "0.9999", "loss": "0.0006", "code": "@Override pr visitSingleColumn(SingleColumn nodedent) { build(fion(noer)); if (noesent()) { bd(on(nr)); } null; }", "n_tokens": 113, "n_pass": [227, 23, 21]}
{"time": "2021-05-26 07:38:35.499573", "score": "0.9999", "loss": "0.0006", "code": "@Override pr visitSingleColumn(SingleColumn nodedent) { build(f(noer)); if (noesent()) { bd(on(nr)); } null; }", "n_tokens": 110, "n_pass": [228, 24, 22]}
{"time": "2021-05-26 07:38:38.147117", "score": "0.9999", "loss": "0.0006", "code": "@Override pr visitSingleColumn(SingleColumn nodedent) { build(f(noer)); if (nont()) { bd(on(nr)); } null; }", "n_tokens": 107, "n_pass": [234, 25, 23]}
{"time": "2021-05-26 07:38:40.806855", "score": "0.9999", "loss": "0.0006", "code": "@Override pr visitSingleColumn(SingleColumn nodedent) { build(f(noer)); if (nont()) { bd(on(nr)); }l; }", "n_tokens": 103, "n_pass": [242, 26, 24]}
{"time": "2021-05-26 07:38:43.506853", "score": "0.9999", "loss": "0.0006", "code": "@Ovide pr visitSingleColumn(SingleColumn nodedent) { build(f(noer)); if (nont()) { bd(on(nr)); }l; }", "n_tokens": 100, "n_pass": [245, 27, 25]}
{"time": "2021-05-26 07:38:46.206490", "score": "0.9996", "loss": "0.0022", "code": "@Ov pr visitSingleColumn(SingleColumn nodedent) { build(f(noer)); if (nont()) { bd(on(nr)); }l; }", "n_tokens": 97, "n_pass": [246, 28, 26]}
{"time": "2021-05-26 07:38:59.733308", "score": "0.9996", "loss": "0.0022", "code": "@Ov pr visitSingleColumn(SingleColumn ndent) { build(f(noer)); if (nont()) { bd(on(nr)); }l; }", "n_tokens": 94, "n_pass": [259, 32, 27]}
{"time": "2021-05-26 07:39:02.426630", "score": "0.9996", "loss": "0.0027", "code": "@Ov pr visitSingleColumn(SingleColumn nt) { build(f(noer)); if (nont()) { bd(on(nr)); }l; }", "n_tokens": 91, "n_pass": [260, 33, 28]}
{"time": "2021-05-26 07:39:05.064508", "score": "0.9994", "loss": "0.0041", "code": "@Ov pr visitSingleColumn(SingleColumn nt) { bd(f(noer)); if (nont()) { bd(on(nr)); }l; }", "n_tokens": 88, "n_pass": [263, 34, 29]}
{"time": "2021-05-26 07:39:07.797210", "score": "0.9996", "loss": "0.0035", "code": " pr visitSingleColumn(SingleColumn nt) { bd(f(noer)); if (nont()) { bd(on(nr)); }l; }", "n_tokens": 85, "n_pass": [278, 35, 30]}
{"time": "2021-05-26 07:39:22.087164", "score": "0.9996", "loss": "0.0035", "code": "pr visitSingleColumn(SingleColumn nt) { bd(f(noer)); if (nont()) { bd(on(nr)); }l; }", "n_tokens": 84, "n_pass": [363, 39, 31]}
{"time": "2021-05-26 07:39:24.801577", "score": "0.9999", "loss": "0.0007", "code": "r visitSingleColumn(SingleColumn nt) { bd(f(noer)); if (nont()) { bd(on(nr)); }l; }", "n_tokens": 83, "n_pass": [364, 40, 32]}
{"time": "2021-05-26 07:39:56.059543", "score": "0.9999", "loss": "0.0006", "code": "r visitSingleColumn(SingleColumn nt) { (f(noer)); if (nont()) { bd(on(nr)); }l; }", "n_tokens": 81, "n_pass": [396, 49, 33]}
{"time": "2021-05-26 07:39:58.704868", "score": "0.9999", "loss": "0.0007", "code": "r visitSingleColumn(SingleColumn nt) { (f(nr)); if (nont()) { bd(on(nr)); }l; }", "n_tokens": 79, "n_pass": [399, 50, 34]}
{"time": "2021-05-26 07:40:01.347468", "score": "0.9995", "loss": "0.0027", "code": "r visitSingleColumn(SingleColumn nt) { (f(nr)); if (nt()) { bd(on(nr)); }l; }", "n_tokens": 77, "n_pass": [405, 51, 35]}
{"time": "2021-05-26 07:40:04.066775", "score": "0.9992", "loss": "0.0041", "code": "r visitSingleColumn(SingleColumn nt) { (f(nr)); if (nt()) {d(on(nr)); }l; }", "n_tokens": 75, "n_pass": [409, 52, 36]}
{"time": "2021-05-26 07:40:06.722060", "score": "0.9996", "loss": "0.0019", "code": "r visitSingleColumn(SingleColumn nt) { (f(nr)); if (nt()) {d((nr)); }l; }", "n_tokens": 73, "n_pass": [411, 53, 37]}
{"time": "2021-05-26 07:40:09.357135", "score": "0.9996", "loss": "0.0018", "code": "r visitSingleColumn(SingleColumn nt) { (f(nr)); if (nt()) {d((nr)); } }", "n_tokens": 71, "n_pass": [416, 54, 38]}
{"time": "2021-05-26 07:40:44.734717", "score": "0.9996", "loss": "0.0018", "code": "r visitSingleColumn(SingleColumn nt) { (f(nr)); if (nt()) {d((nr)); }}", "n_tokens": 70, "n_pass": [511, 63, 39]}
{"time": "2021-05-26 07:41:27.489220", "score": "0.9997", "loss": "0.0013", "code": "r visitSingleColumn(SingleColumn t) { (f(nr)); if (nt()) {d((nr)); }}", "n_tokens": 69, "n_pass": [545, 76, 40]}
{"time": "2021-05-26 07:41:30.201477", "score": "0.9997", "loss": "0.0013", "code": "r visitSingleColumn(SingleColumn t){ (f(nr)); if (nt()) {d((nr)); }}", "n_tokens": 68, "n_pass": [548, 77, 41]}
{"time": "2021-05-26 07:41:32.844635", "score": "0.9997", "loss": "0.0013", "code": "r visitSingleColumn(SingleColumn t){(f(nr)); if (nt()) {d((nr)); }}", "n_tokens": 67, "n_pass": [550, 78, 42]}
{"time": "2021-05-26 07:41:35.476178", "score": "0.9998", "loss": "0.0011", "code": "r visitSingleColumn(SingleColumn t){((nr)); if (nt()) {d((nr)); }}", "n_tokens": 66, "n_pass": [552, 79, 43]}
{"time": "2021-05-26 07:41:38.105520", "score": "0.9998", "loss": "0.0011", "code": "r visitSingleColumn(SingleColumn t){((r)); if (nt()) {d((nr)); }}", "n_tokens": 65, "n_pass": [554, 80, 44]}
{"time": "2021-05-26 07:41:40.813859", "score": "0.9998", "loss": "0.0011", "code": "r visitSingleColumn(SingleColumn t){((r));if (nt()) {d((nr)); }}", "n_tokens": 64, "n_pass": [559, 81, 45]}
{"time": "2021-05-26 07:41:43.443671", "score": "0.9998", "loss": "0.0011", "code": "r visitSingleColumn(SingleColumn t){((r));if(nt()) {d((nr)); }}", "n_tokens": 63, "n_pass": [562, 82, 46]}
{"time": "2021-05-26 07:41:46.122910", "score": "0.9999", "loss": "0.0005", "code": "r visitSingleColumn(SingleColumn t){((r));if(t()) {d((nr)); }}", "n_tokens": 62, "n_pass": [564, 83, 47]}
{"time": "2021-05-26 07:41:48.755244", "score": "0.9999", "loss": "0.0005", "code": "r visitSingleColumn(SingleColumn t){((r));if(t()){d((nr)); }}", "n_tokens": 61, "n_pass": [569, 84, 48]}
{"time": "2021-05-26 07:41:51.434140", "score": "0.9999", "loss": "0.0004", "code": "r visitSingleColumn(SingleColumn t){((r));if(t()){((nr)); }}", "n_tokens": 60, "n_pass": [571, 85, 49]}
{"time": "2021-05-26 07:41:54.073079", "score": "0.9999", "loss": "0.0004", "code": "r visitSingleColumn(SingleColumn t){((r));if(t()){((r)); }}", "n_tokens": 59, "n_pass": [574, 86, 50]}
{"time": "2021-05-26 07:41:56.700937", "score": "0.9999", "loss": "0.0004", "code": "r visitSingleColumn(SingleColumn t){((r));if(t()){((r));}}", "n_tokens": 58, "n_pass": [579, 87, 51]}

Minimal simplified code:
r visitSingleColumn(SingleColumn t){((r));if(t()){((r));}}

