
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/jmockit__jmockit1/main/src/mockit/integration/springframework/TestWebApplicationContext_getBean.java
method_name = getBean
method_body = @Override @Nonnull public <T> T getBean(@Nonnull Class<T> requiredType) { BeanExporter beanExporter = getBeanExporter(); T bean = BeanLookup.getBean(beanExporter, requiredType); return bean; }
predict, score, loss = getBean, 0.9831656217575073, 0.027712104842066765

Trace of simplified code(s):
{"time": "2021-02-21 23:05:42.724415", "score": "0.9832", "loss": "0.0277", "code": "@Override @Nonnull public <T> T getBean(@Nonnull Class<T> requiredType) { BeanExporter beanExporter = getBeanExporter(); T bean = BeanLookup.getBean(beanExporter, requiredType); return bean; }", "n_tokens": 192, "n_pass": [1, 1, 1]}
{"time": "2021-02-21 23:05:45.378495", "score": "0.9588", "loss": "0.0948", "code": "@Override @Nonnull public <T> T getBean(@Nonnull Class<T> requiredType) { BeanExporter beanExporter = getBeanExporter();Bean(beanExporter, requiredType); return bean; }", "n_tokens": 168, "n_pass": [25, 2, 2]}
{"time": "2021-02-21 23:05:48.005423", "score": "0.8966", "loss": "0.2337", "code": "@Override @Nonnull public <T> T getBean(@Nonnull Class<T> requiredType) { BeanExporter beanExporter = getBeanExporter();Bean(beanExpredType); return bean; }", "n_tokens": 156, "n_pass": [47, 3, 3]}
{"time": "2021-02-21 23:05:50.661052", "score": "0.8622", "loss": "0.3338", "code": "@Override @Nc <T> T getBean(@Nonnull Class<T> requiredType) { BeanExporter beanExporter = getBeanExporter();Bean(beanExpredType); return bean; }", "n_tokens": 144, "n_pass": [51, 4, 4]}
{"time": "2021-02-21 23:05:53.268503", "score": "0.5777", "loss": "1.6806", "code": "@Override @Nc <T> T getBean(@Nonnull Class<T> requiredType) { BeanExportter = getBeanExporter();Bean(beanExpredType); return bean; }", "n_tokens": 132, "n_pass": [57, 5, 5]}
{"time": "2021-02-21 23:05:55.901798", "score": "0.815", "loss": "0.4586", "code": "@Override @Nc <T> T getBean(@Nonnull Class<T> requiredType) { BeanExportnExporter();Bean(beanExpredType); return bean; }", "n_tokens": 120, "n_pass": [58, 6, 6]}
{"time": "2021-02-21 23:05:58.537701", "score": "0.7728", "loss": "0.7701", "code": "@Override @Nc <T> T getBean(@Nonnull Class<T> requiredType) { BeanExportBean(beanExpredType); return bean; }", "n_tokens": 108, "n_pass": [59, 7, 7]}
{"time": "2021-02-21 23:06:01.188687", "score": "0.7728", "loss": "0.7701", "code": "@Override @Nc <T> T getBean(@Nonnull Class<T> requiredType) { BeanExportBean(bredType); return bean; }", "n_tokens": 102, "n_pass": [88, 8, 8]}
{"time": "2021-02-21 23:06:03.824249", "score": "0.8763", "loss": "0.444", "code": "@Override @Nc <T> T getBean(@Nonnull Class<T> requiredType) { BeanExportBean(be); return bean; }", "n_tokens": 96, "n_pass": [89, 9, 9]}
{"time": "2021-02-21 23:06:09.057843", "score": "0.3259", "loss": "2.1326", "code": "@Overrc <T> T getBean(@Nonnull Class<T> requiredType) { BeanExportBean(be); return bean; }", "n_tokens": 90, "n_pass": [94, 11, 10]}
{"time": "2021-02-21 23:06:12.458790", "score": "0.341", "loss": "1.9938", "code": "@Overrc <T> T getBean(@N Class<T> requiredType) { BeanExportBean(be); return bean; }", "n_tokens": 84, "n_pass": [98, 12, 11]}
{"time": "2021-02-21 23:06:17.705531", "score": "0.341", "loss": "1.9938", "code": "@Overrc <T> T getBean(@N Class<T> requiredType) { BeanBean(be); return bean; }", "n_tokens": 78, "n_pass": [104, 14, 12]}
{"time": "2021-02-21 23:06:26.386377", "score": "0.341", "loss": "1.9938", "code": "@Overrc <T> T getBean(@N Class<T> requiredType) { Beann(be); return bean; }", "n_tokens": 75, "n_pass": [144, 17, 13]}
{"time": "2021-02-21 23:06:43.365772", "score": "0.341", "loss": "1.9938", "code": "@Overrc <T> T getBean(@N Cl<T> requiredType) { Beann(be); return bean; }", "n_tokens": 72, "n_pass": [160, 23, 14]}
{"time": "2021-02-21 23:06:59.075195", "score": "0.3614", "loss": "3.2024", "code": "@Overrc <T> T getBean(@N Cl<T> requiredType) { Bn(be); return bean; }", "n_tokens": 69, "n_pass": [168, 29, 15]}
{"time": "2021-02-21 23:07:12.358406", "score": "0.1882", "loss": "4.0096", "code": "@Ovc <T> T getBean(@N Cl<T> requiredType) { Bn(be); return bean; }", "n_tokens": 66, "n_pass": [177, 34, 16]}
{"time": "2021-02-21 23:07:16.173758", "score": "0.1927", "loss": "3.7244", "code": "@Ovc <T> T getBean(@N Cl requiredType) { Bn(be); return bean; }", "n_tokens": 63, "n_pass": [185, 35, 17]}
{"time": "2021-02-21 23:08:12.132832", "score": "0.3591", "loss": "2.952", "code": "@vc <T> T getBean(@N Cl requiredType) { Bn(be); return bean; }", "n_tokens": 62, "n_pass": [276, 55, 18]}
{"time": "2021-02-21 23:08:14.766449", "score": "0.439", "loss": "2.7084", "code": "@c <T> T getBean(@N Cl requiredType) { Bn(be); return bean; }", "n_tokens": 61, "n_pass": [277, 56, 19]}
{"time": "2021-02-21 23:08:17.373153", "score": "0.439", "loss": "2.7084", "code": "@c<T> T getBean(@N Cl requiredType) { Bn(be); return bean; }", "n_tokens": 60, "n_pass": [279, 57, 20]}
{"time": "2021-02-21 23:08:19.998358", "score": "0.439", "loss": "2.7084", "code": "@c<T>T getBean(@N Cl requiredType) { Bn(be); return bean; }", "n_tokens": 59, "n_pass": [283, 58, 21]}
{"time": "2021-02-21 23:09:01.165411", "score": "0.2069", "loss": "3.6246", "code": "@c<T>T getBean(@N l requiredType) { Bn(be); return bean; }", "n_tokens": 58, "n_pass": [365, 71, 22]}
{"time": "2021-02-21 23:09:35.777541", "score": "0.2069", "loss": "3.6246", "code": "@c<T>T getBean(@N l requiredType){ Bn(be); return bean; }", "n_tokens": 57, "n_pass": [381, 84, 23]}
{"time": "2021-02-21 23:09:38.426444", "score": "0.2069", "loss": "3.6246", "code": "@c<T>T getBean(@N l requiredType){Bn(be); return bean; }", "n_tokens": 56, "n_pass": [383, 85, 24]}
{"time": "2021-02-21 23:09:51.532515", "score": "0.2069", "loss": "3.6246", "code": "@c<T>T getBean(@N l requiredType){Bn(be);return bean; }", "n_tokens": 55, "n_pass": [391, 90, 25]}
{"time": "2021-02-21 23:10:23.083051", "score": "0.2069", "loss": "3.6246", "code": "@c<T>T getBean(@N l requiredType){Bn(be);return bean;}", "n_tokens": 54, "n_pass": [404, 102, 26]}

Minimal simplified code:
@c<T>T getBean(@N l requiredType){Bn(be);return bean;}

