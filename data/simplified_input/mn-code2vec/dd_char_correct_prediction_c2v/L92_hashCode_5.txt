
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/OpenRock__OpenAM/openam-entitlements/src/main/java/com/sun/identity/entitlement/AttributeLookupCondition_hashCode.java
method_name = hashCode
method_body = @Override public int hashCode() { int code = super.hashCode(); if (key != null) { code = 31 * code + key.hashCode(); } if (value != null) { code = 31 * code + value.hashCode(); } if (pConditionName != null) { code = 31 * code + pConditionName.hashCode(); } return code; }
predict, score, loss = hashCode, 0.9998887777328491, 0.0001245659514097497

Trace of simplified code(s):
{"time": "2021-02-22 05:31:26.934302", "score": "0.9999", "loss": "0.0001", "code": "@Override public int hashCode() { int code = super.hashCode(); if (key != null) { code = 31 * code + key.hashCode(); } if (value != null) { code = 31 * code + value.hashCode(); } if (pConditionName != null) { code = 31 * code + pConditionName.hashCode(); } return code; }", "n_tokens": 271, "n_pass": [1, 1, 1]}
{"time": "2021-02-22 05:31:29.614942", "score": "0.9997", "loss": "0.0003", "code": "@Override public int hashCode() { int code = super.hashCode(); if (l) { code = 31 * code + value.hashCode(); } if (pConditionName != null) { code = 31 * code + pConditionName.hashCode(); } return code; }", "n_tokens": 203, "n_pass": [9, 2, 2]}
{"time": "2021-02-22 05:31:32.295983", "score": "0.9987", "loss": "0.0014", "code": "@Override public int hashCode() { int code = super.hashCode(); if (ll) { code = 31 * code + pConditionName.hashCode(); } return code; }", "n_tokens": 135, "n_pass": [10, 3, 3]}
{"time": "2021-02-22 05:31:34.959989", "score": "0.9999", "loss": "0.0001", "code": "@Override public int hashCode() { int code = super.hashCode(); if (ll) { code = 31 *nName.hashCode(); } return code; }", "n_tokens": 118, "n_pass": [28, 4, 4]}
{"time": "2021-02-22 05:31:37.648056", "score": "0.9993", "loss": "0.0008", "code": " int hashCode() { int code = super.hashCode(); if (ll) { code = 31 *nName.hashCode(); } return code; }", "n_tokens": 102, "n_pass": [31, 5, 5]}
{"time": "2021-02-22 05:31:40.636226", "score": "0.9997", "loss": "0.0003", "code": " int hashCode() { int code = supode(); if (ll) { code = 31 *nName.hashCode(); } return code; }", "n_tokens": 94, "n_pass": [54, 6, 6]}
{"time": "2021-02-22 05:31:46.315499", "score": "0.9998", "loss": "0.0002", "code": " int hashCode() { int code = supode(); if (ll) {e = 31 *nName.hashCode(); } return code; }", "n_tokens": 90, "n_pass": [92, 8, 7]}
{"time": "2021-02-22 05:31:49.351384", "score": "0.9979", "loss": "0.0028", "code": " int hashCode() { int code = supode(); if (ll) {e = nName.hashCode(); } return code; }", "n_tokens": 86, "n_pass": [94, 9, 8]}
{"time": "2021-02-22 05:31:51.970443", "score": "0.9957", "loss": "0.0053", "code": " int hashCode() { int code = supode(); if (ll) {e = e.hashCode(); } return code; }", "n_tokens": 82, "n_pass": [95, 10, 9]}
{"time": "2021-02-22 05:31:54.588008", "score": "0.9925", "loss": "0.0095", "code": " int hashCode() { int code = supode(); if (ll) {e = hCode(); } return code; }", "n_tokens": 77, "n_pass": [96, 11, 10]}
{"time": "2021-02-22 05:31:57.195980", "score": "0.9994", "loss": "0.0017", "code": " int hashCode() { int code = supode(); if (ll) {e = hCode(); }rn code; }", "n_tokens": 72, "n_pass": [99, 12, 11]}
{"time": "2021-02-22 05:31:59.835703", "score": "0.9994", "loss": "0.0015", "code": " int hashCode() { int code = supode(); if (ll) {e = hCode(); }de; }", "n_tokens": 67, "n_pass": [100, 13, 12]}
{"time": "2021-02-22 05:32:03.637119", "score": "0.4299", "loss": "1.1653", "code": " int hashCode() { inde = supode(); if (ll) {e = hCode(); }de; }", "n_tokens": 63, "n_pass": [107, 14, 13]}
{"time": "2021-02-22 05:32:12.602124", "score": "0.8835", "loss": "0.207", "code": " int hashCode() { in = supode(); if (ll) {e = hCode(); }de; }", "n_tokens": 61, "n_pass": [153, 17, 14]}
{"time": "2021-02-22 05:32:15.226496", "score": "0.8835", "loss": "0.207", "code": " int hashCode() { in =upode(); if (ll) {e = hCode(); }de; }", "n_tokens": 59, "n_pass": [154, 18, 15]}
{"time": "2021-02-22 05:32:35.012627", "score": "0.9987", "loss": "0.0031", "code": " int hashCode() { inupode(); if (ll) {e = hCode(); }de; }", "n_tokens": 57, "n_pass": [182, 25, 16]}
{"time": "2021-02-22 05:32:37.610814", "score": "0.9988", "loss": "0.0027", "code": " int hashCode() { inode(); if (ll) {e = hCode(); }de; }", "n_tokens": 55, "n_pass": [183, 26, 17]}
{"time": "2021-02-22 05:32:40.251334", "score": "0.9989", "loss": "0.0026", "code": " int hashCode() { ine(); if (ll) {e = hCode(); }de; }", "n_tokens": 53, "n_pass": [184, 27, 18]}
{"time": "2021-02-22 05:32:42.832452", "score": "0.4582", "loss": "1.0349", "code": " int hashCode() { ine(); if (ll) {e = ode(); }de; }", "n_tokens": 51, "n_pass": [194, 28, 19]}
{"time": "2021-02-22 05:32:54.729762", "score": "0.4831", "loss": "0.9207", "code": " int hashCode() { e(); if (ll) {e = ode(); }de; }", "n_tokens": 49, "n_pass": [209, 32, 20]}
{"time": "2021-02-22 05:33:10.909609", "score": "0.4831", "loss": "0.9207", "code": " int hashCode() { e();if (ll) {e = ode(); }de; }", "n_tokens": 48, "n_pass": [283, 36, 21]}
{"time": "2021-02-22 05:33:13.488065", "score": "0.4831", "loss": "0.9207", "code": " int hashCode() { e();if(ll) {e = ode(); }de; }", "n_tokens": 47, "n_pass": [285, 37, 22]}
{"time": "2021-02-22 05:33:16.077624", "score": "0.3909", "loss": "1.1472", "code": " int hashCode() { e();if(l) {e = ode(); }de; }", "n_tokens": 46, "n_pass": [287, 38, 23]}
{"time": "2021-02-22 05:33:18.653993", "score": "0.3909", "loss": "1.1472", "code": " int hashCode() { e();if(l){e = ode(); }de; }", "n_tokens": 45, "n_pass": [290, 39, 24]}
{"time": "2021-02-22 05:33:21.282101", "score": "0.3909", "loss": "1.1472", "code": " int hashCode() { e();if(l){e= ode(); }de; }", "n_tokens": 44, "n_pass": [293, 40, 25]}
{"time": "2021-02-22 05:33:23.887024", "score": "0.3909", "loss": "1.1472", "code": " int hashCode() { e();if(l){e=ode(); }de; }", "n_tokens": 43, "n_pass": [295, 41, 26]}
{"time": "2021-02-22 05:33:34.277572", "score": "0.3909", "loss": "1.1472", "code": " int hashCode() { e();if(l){e=ode();}de; }", "n_tokens": 42, "n_pass": [302, 45, 27]}
{"time": "2021-02-22 05:33:36.867680", "score": "0.3909", "loss": "1.1472", "code": "int hashCode() { e();if(l){e=ode();}de; }", "n_tokens": 41, "n_pass": [306, 46, 28]}
{"time": "2021-02-22 05:33:50.646645", "score": "0.3909", "loss": "1.1472", "code": "int hashCode(){ e();if(l){e=ode();}de; }", "n_tokens": 40, "n_pass": [321, 50, 29]}
{"time": "2021-02-22 05:33:53.254666", "score": "0.3909", "loss": "1.1472", "code": "int hashCode(){e();if(l){e=ode();}de; }", "n_tokens": 39, "n_pass": [323, 51, 30]}
{"time": "2021-02-22 05:34:18.143446", "score": "0.3801", "loss": "1.1686", "code": "int hashCode(){e();if(l){e=ode();}e; }", "n_tokens": 38, "n_pass": [367, 59, 31]}
{"time": "2021-02-22 05:34:20.725595", "score": "0.3801", "loss": "1.1662", "code": "int hashCode(){e();if(l){e=ode();}; }", "n_tokens": 37, "n_pass": [368, 60, 32]}
{"time": "2021-02-22 05:34:23.307927", "score": "0.3801", "loss": "1.1662", "code": "int hashCode(){e();if(l){e=ode();} }", "n_tokens": 36, "n_pass": [369, 61, 33]}
{"time": "2021-02-22 05:34:25.889356", "score": "0.3801", "loss": "1.1662", "code": "int hashCode(){e();if(l){e=ode();}}", "n_tokens": 35, "n_pass": [370, 62, 34]}

Minimal simplified code:
int hashCode(){e();if(l){e=ode();}}

