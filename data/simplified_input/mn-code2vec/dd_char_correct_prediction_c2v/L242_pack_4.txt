
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/dronekit__dronekit-android/dependencyLibs/Mavlink/src/com/MAVLink/common/msg_file_transfer_protocol_pack.java
method_name = pack
method_body = public MAVLinkPacket pack() { MAVLinkPacket packet = new MAVLinkPacket(MAVLINK_MSG_LENGTH); packet.sysid = 255; packet.compid = 190; packet.msgid = MAVLINK_MSG_ID_FILE_TRANSFER_PROTOCOL; packet.payload.putUnsignedByte(target_network); packet.payload.putUnsignedByte(target_system); packet.payload.putUnsignedByte(target_component); for (int i = 0; i < payload.length; i++) { packet.payload.putUnsignedByte(payload[i]); } return packet; }
predict, score, loss = pack, 0.9968926310539246, 0.010093244723975658

Trace of simplified code(s):
{"time": "2021-02-22 23:15:45.912627", "score": "0.9978", "loss": "0.0067", "code": "public MAVLinkPacket pack() { MAVLinkPacket packet = new MAVLinkPacket(MAVLINK_MSG_LENGTH); packet.sysid = 255; packet.compid = 190; packet.msgid = MAVLINK_MSG_ID_FILE_TRANSFER_PROTOCOL; packet.payload.putUnsignedByte(target_network); packet.payload.putUnsignedByte(target_system); packet.payload.putUnsignedByte(target_component); for (int i = 0; i < payload.length; i++) { packet.payload.putUnsignedByte(payload[i]); } return packet; }", "n_tokens": 437, "n_pass": [1, 1, 1]}
{"time": "2021-02-22 23:15:48.530415", "score": "0.9976", "loss": "0.0058", "code": "public MAVLinkPacket pack() { MAVLinkPacket packet = new MAVLinkPacket(MAVLINK_MSG_LENGTH); packet.sysid = 255; packet.compid = 190; packet.msgid = MAVLINK_MSG_ID_FILE_TRANSFER_PROTOCOL; packet.payload.putUnsignedByte(nt); for (int i = 0; i < payload.length; i++) { packet.payload.putUnsignedByte(payload[i]); } return packet; }", "n_tokens": 328, "n_pass": [10, 2, 2]}
{"time": "2021-02-22 23:15:51.173178", "score": "0.9936", "loss": "0.0195", "code": "public MAVLinkPacket pack() { MAVLinkPacket packet = n55; packet.compid = 190; packet.msgid = MAVLINK_MSG_ID_FILE_TRANSFER_PROTOCOL; packet.payload.putUnsignedByte(nt); for (int i = 0; i < payload.length; i++) { packet.payload.putUnsignedByte(payload[i]); } return packet; }", "n_tokens": 274, "n_pass": [22, 3, 3]}
{"time": "2021-02-22 23:15:53.767167", "score": "0.9465", "loss": "0.1678", "code": "public MAVLinkPacket pack() { MAVLinkPacket packet = nFILE_TRANSFER_PROTOCOL; packet.payload.putUnsignedByte(nt); for (int i = 0; i < payload.length; i++) { packet.payload.putUnsignedByte(payload[i]); } return packet; }", "n_tokens": 219, "n_pass": [23, 4, 4]}
{"time": "2021-02-22 23:15:56.411523", "score": "0.8978", "loss": "0.4567", "code": "public MAVLinkPacket pack() { MAVLinkPacket packet = nket.payload.putUnsignedByte(nt); for (int i = 0; i < payload.length; i++) { packet.payload.putUnsignedByte(payload[i]); } return packet; }", "n_tokens": 192, "n_pass": [36, 5, 5]}
{"time": "2021-02-22 23:15:59.080656", "score": "0.9836", "loss": "0.043", "code": "public MAVLinkPacket pack() { MAVLinkPacket packet = n(nt); for (int i = 0; i < payload.length; i++) { packet.payload.putUnsignedByte(payload[i]); } return packet; }", "n_tokens": 165, "n_pass": [37, 6, 6]}
{"time": "2021-02-22 23:16:02.086912", "score": "0.9992", "loss": "0.0012", "code": "public MAVLinkPacket pack() { MAVLinkPacket packet = n(nt); for (int i = 0; i < payload.length; i++) { packetsignedByte(payload[i]); } return packet; }", "n_tokens": 151, "n_pass": [60, 7, 7]}
{"time": "2021-02-22 23:16:07.281758", "score": "0.994", "loss": "0.0141", "code": "public MAVLinkPacket pack() { MAVLinkPan(nt); for (int i = 0; i < payload.length; i++) { packetsignedByte(payload[i]); } return packet; }", "n_tokens": 137, "n_pass": [66, 9, 8]}
{"time": "2021-02-22 23:16:12.603497", "score": "0.9922", "loss": "0.0217", "code": "public MAVLinkPacket pack() { MAVLinkPan(nt); for (in; i < payload.length; i++) { packetsignedByte(payload[i]); } return packet; }", "n_tokens": 130, "n_pass": [99, 11, 9]}
{"time": "2021-02-22 23:16:15.198439", "score": "0.9931", "loss": "0.019", "code": "public MAVLinkPacket pack() { MAVLinkPan(nt); for (in; i < plength; i++) { packetsignedByte(payload[i]); } return packet; }", "n_tokens": 123, "n_pass": [100, 12, 10]}
{"time": "2021-02-22 23:16:17.810194", "score": "0.7611", "loss": "0.4041", "code": "public MAVLinkPacket pack() { MAVLinkPan(nt); for (in; i < plength; i++) {signedByte(payload[i]); } return packet; }", "n_tokens": 116, "n_pass": [103, 13, 11]}
{"time": "2021-02-22 23:16:20.418478", "score": "0.9931", "loss": "0.019", "code": "public MAVLinkPacket pack() { MAVLinkPan(nt); for (in; i < plength; i++) {yte(payload[i]); } return packet; }", "n_tokens": 109, "n_pass": [104, 14, 12]}
{"time": "2021-02-22 23:16:23.024585", "score": "0.9521", "loss": "0.0732", "code": "public MAVLinkPacket pack() { MAVLinkPan(nt); for (in; i < plength; i++) {yte(pay); } return packet; }", "n_tokens": 102, "n_pass": [106, 15, 13]}
{"time": "2021-02-22 23:16:25.624294", "score": "0.9209", "loss": "0.1115", "code": "public MAVLinkPacket pack() { MAVLinkPan(nt); for (in; i < plength; i++) {yte(pay); } recket; }", "n_tokens": 95, "n_pass": [108, 16, 14]}
{"time": "2021-02-22 23:16:28.225388", "score": "0.9209", "loss": "0.1115", "code": " MAVLinkPacket pack() { MAVLinkPan(nt); for (in; i < plength; i++) {yte(pay); } recket; }", "n_tokens": 89, "n_pass": [110, 17, 15]}
{"time": "2021-02-22 23:16:36.421906", "score": "0.9368", "loss": "0.0911", "code": " MAVLinkPacket pack() { MAn(nt); for (in; i < plength; i++) {yte(pay); } recket; }", "n_tokens": 82, "n_pass": [115, 20, 16]}
{"time": "2021-02-22 23:16:44.545413", "score": "0.9186", "loss": "0.1096", "code": " MAVLinkPacket pack() { (nt); for (in; i < plength; i++) {yte(pay); } recket; }", "n_tokens": 79, "n_pass": [152, 23, 17]}
{"time": "2021-02-22 23:16:47.151335", "score": "0.8708", "loss": "0.1673", "code": " MAVLinkPacket pack() { (nt); for (in; plength; i++) {yte(pay); } recket; }", "n_tokens": 75, "n_pass": [158, 24, 18]}
{"time": "2021-02-22 23:16:49.746562", "score": "0.8707", "loss": "0.1672", "code": " MAVLinkPacket pack() { (nt); for (in; gth; i++) {yte(pay); } recket; }", "n_tokens": 71, "n_pass": [159, 25, 19]}
{"time": "2021-02-22 23:16:52.315446", "score": "0.8699", "loss": "0.1679", "code": " MAVLinkPacket pack() { (nt); for (in; gth;) {yte(pay); } recket; }", "n_tokens": 67, "n_pass": [161, 26, 20]}
{"time": "2021-02-22 23:16:54.925670", "score": "0.87", "loss": "0.168", "code": " MAVLinkPacket pack() { (nt); for (in; gth;) {yte(pay); } rt; }", "n_tokens": 63, "n_pass": [166, 27, 21]}
{"time": "2021-02-22 23:17:09.245519", "score": "0.87", "loss": "0.168", "code": "MAVLinkPacket pack() { (nt); for (in; gth;) {yte(pay); } rt; }", "n_tokens": 62, "n_pass": [226, 32, 22]}
{"time": "2021-02-22 23:17:43.993688", "score": "0.8714", "loss": "0.1661", "code": "MAVLinkPacket pack() { (nt); for (; gth;) {yte(pay); } rt; }", "n_tokens": 60, "n_pass": [250, 45, 23]}
{"time": "2021-02-22 23:17:46.567282", "score": "0.8735", "loss": "0.1634", "code": "MAVLinkPacket pack() { (nt); for (; h;) {yte(pay); } rt; }", "n_tokens": 58, "n_pass": [252, 46, 24]}
{"time": "2021-02-22 23:17:49.140327", "score": "0.8578", "loss": "0.1795", "code": "MAVLinkPacket pack() { (nt); for (; h;) {y(pay); } rt; }", "n_tokens": 56, "n_pass": [256, 47, 25]}
{"time": "2021-02-22 23:17:51.723954", "score": "0.6397", "loss": "0.479", "code": "MAVLinkPacket pack() { (nt); for (; h;) {y(p); } rt; }", "n_tokens": 54, "n_pass": [258, 48, 26]}
{"time": "2021-02-22 23:17:54.307633", "score": "0.6468", "loss": "0.4662", "code": "MAVLinkPacket pack() { (nt); for (; h;) {y(p); }t; }", "n_tokens": 52, "n_pass": [261, 49, 27]}
{"time": "2021-02-22 23:17:56.873696", "score": "0.6529", "loss": "0.4565", "code": "MAVLinkPacket pack() { (nt); for (; h;) {y(p); } }", "n_tokens": 50, "n_pass": [262, 50, 28]}
{"time": "2021-02-22 23:18:36.076670", "score": "0.6529", "loss": "0.4565", "code": "MAVLinkPacket pack() { (nt); for (; h;) {y(p); }}", "n_tokens": 49, "n_pass": [332, 63, 29]}
{"time": "2021-02-22 23:19:14.121757", "score": "0.6529", "loss": "0.4565", "code": "MAVLinkPacket pack(){ (nt); for (; h;) {y(p); }}", "n_tokens": 48, "n_pass": [353, 77, 30]}
{"time": "2021-02-22 23:19:16.689355", "score": "0.6529", "loss": "0.4565", "code": "MAVLinkPacket pack(){(nt); for (; h;) {y(p); }}", "n_tokens": 47, "n_pass": [355, 78, 31]}
{"time": "2021-02-22 23:19:19.255868", "score": "0.6386", "loss": "0.4783", "code": "MAVLinkPacket pack(){(t); for (; h;) {y(p); }}", "n_tokens": 46, "n_pass": [357, 79, 32]}
{"time": "2021-02-22 23:19:21.834132", "score": "0.6386", "loss": "0.4783", "code": "MAVLinkPacket pack(){(t);for (; h;) {y(p); }}", "n_tokens": 45, "n_pass": [361, 80, 33]}
{"time": "2021-02-22 23:19:24.390205", "score": "0.6386", "loss": "0.4783", "code": "MAVLinkPacket pack(){(t);for(; h;) {y(p); }}", "n_tokens": 44, "n_pass": [365, 81, 34]}
{"time": "2021-02-22 23:19:27.000360", "score": "0.6386", "loss": "0.4783", "code": "MAVLinkPacket pack(){(t);for(;h;) {y(p); }}", "n_tokens": 43, "n_pass": [368, 82, 35]}
{"time": "2021-02-22 23:19:29.590147", "score": "0.6397", "loss": "0.4761", "code": "MAVLinkPacket pack(){(t);for(;;) {y(p); }}", "n_tokens": 42, "n_pass": [369, 83, 36]}
{"time": "2021-02-22 23:19:32.155158", "score": "0.6397", "loss": "0.4761", "code": "MAVLinkPacket pack(){(t);for(;;){y(p); }}", "n_tokens": 41, "n_pass": [372, 84, 37]}
{"time": "2021-02-22 23:19:34.749094", "score": "0.9946", "loss": "0.0095", "code": "MAVLinkPacket pack(){(t);for(;;){(p); }}", "n_tokens": 40, "n_pass": [374, 85, 38]}
{"time": "2021-02-22 23:19:37.325636", "score": "0.9946", "loss": "0.0095", "code": "MAVLinkPacket pack(){(t);for(;;){(p);}}", "n_tokens": 39, "n_pass": [379, 86, 39]}

Minimal simplified code:
MAVLinkPacket pack(){(t);for(;;){(p);}}

