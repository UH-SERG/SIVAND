
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/ongakuer__CameraFilter/app/src/main/java/me/relex/camerafilter/ImageFilterActivity_onClick.java
method_name = onClick
method_body = @Override public void onClick(View v) { switch(v.getId()) { case R.id.filter_normal: startFilterTask(FilterManager.FilterType.Normal); break; case R.id.filter_tone_curve: startFilterTask(FilterManager.FilterType.ToneCurve); break; case R.id.filter_soft_light: startFilterTask(FilterManager.FilterType.SoftLight); break; } }
predict, score, loss = onClick, 0.999972939491272, 3.135155202471651e-05

Trace of simplified code(s):
{"time": "2021-02-22 02:40:35.868138", "score": "1.0", "loss": "0.0", "code": "@Override public void onClick(View v) { switch(v.getId()) { case R.id.filter_normal: startFilterTask(FilterManager.FilterType.Normal); break; case R.id.filter_tone_curve: startFilterTask(FilterManager.FilterType.ToneCurve); break; case R.id.filter_soft_light: startFilterTask(FilterManager.FilterType.SoftLight); break; } }", "n_tokens": 323, "n_pass": [1, 1, 1]}
{"time": "2021-02-22 02:40:38.522006", "score": "1.0", "loss": "0.0", "code": "@Override public void onClick(View v) { switch(v.getId()) { case R.id.filter_norne_curve: startFilterTask(FilterManager.FilterType.ToneCurve); break; case R.id.filter_soft_light: startFilterTask(FilterManager.FilterType.SoftLight); break; } }", "n_tokens": 242, "n_pass": [9, 2, 2]}
{"time": "2021-02-22 02:40:41.166582", "score": "1.0", "loss": "0.0", "code": "@Override public void onClick(View v) { switch(v.getId()) { case R.id.filter_norilter_soft_light: startFilterTask(FilterManager.FilterType.SoftLight); break; } }", "n_tokens": 161, "n_pass": [10, 3, 3]}
{"time": "2021-02-22 02:40:43.787033", "score": "1.0", "loss": "0.0001", "code": "@Override public void onClick(View v) { switch(v.getId()) { case R.id.filter_norilter_soft_light: startFilterTask(FilteroftLight); break; } }", "n_tokens": 141, "n_pass": [29, 4, 4]}
{"time": "2021-02-22 02:40:46.422568", "score": "0.9991", "loss": "0.001", "code": "d onClick(View v) { switch(v.getId()) { case R.id.filter_norilter_soft_light: startFilterTask(FilteroftLight); break; } }", "n_tokens": 121, "n_pass": [30, 5, 5]}
{"time": "2021-02-22 02:40:49.036915", "score": "0.9991", "loss": "0.001", "code": "d onClick(View v) { switch(v.getId()) { case R.id.ilter_soft_light: startFilterTask(FilteroftLight); break; } }", "n_tokens": 111, "n_pass": [54, 6, 6]}
{"time": "2021-02-22 02:40:51.669262", "score": "0.9991", "loss": "0.001", "code": "d onClick(View v) { switch(v.getId()) { case R.id._light: startFilterTask(FilteroftLight); break; } }", "n_tokens": 101, "n_pass": [55, 7, 7]}
{"time": "2021-02-22 02:40:54.304983", "score": "0.9962", "loss": "0.0041", "code": "d onClick(View v) { switch(v.getId()) { case R.id._light: stask(FilteroftLight); break; } }", "n_tokens": 91, "n_pass": [57, 8, 8]}
{"time": "2021-02-22 02:40:56.931838", "score": "0.9962", "loss": "0.0041", "code": "d onClick(View v) { switch(v.getId()) { case R.id._light: stask(FoftLight); break; } }", "n_tokens": 86, "n_pass": [86, 9, 9]}
{"time": "2021-02-22 02:40:59.530711", "score": "0.9962", "loss": "0.0041", "code": "d onClick(View v) { switch(v.getId()) { case R.id._light: stask(Fght); break; } }", "n_tokens": 81, "n_pass": [87, 10, 10]}
{"time": "2021-02-22 02:41:02.135505", "score": "0.9961", "loss": "0.0042", "code": "d onClick(View v) { switch(v.getId()) { case R.id._light: stask(Fght);k; } }", "n_tokens": 76, "n_pass": [89, 11, 11]}
{"time": "2021-02-22 02:41:05.123305", "score": "0.8168", "loss": "0.2049", "code": "d onClick(View v) { switch(v.getId()) { case _light: stask(Fght);k; } }", "n_tokens": 71, "n_pass": [100, 12, 12]}
{"time": "2021-02-22 02:41:07.752622", "score": "0.759", "loss": "0.2787", "code": "d onClick(View v) { switch(v.getId()) { case t: stask(Fght);k; } }", "n_tokens": 66, "n_pass": [101, 13, 13]}
{"time": "2021-02-22 02:41:10.730565", "score": "0.9149", "loss": "0.1093", "code": "d onClick(View v) { switch(v.getId()) { case t: sk(Fght);k; } }", "n_tokens": 63, "n_pass": [143, 14, 14]}
{"time": "2021-02-22 02:41:13.359123", "score": "0.8889", "loss": "0.1872", "code": "d onClick(View v) { switch(v.getId()) { case t: sk(t);k; } }", "n_tokens": 60, "n_pass": [145, 15, 15]}
{"time": "2021-02-22 02:41:15.952759", "score": "0.9007", "loss": "0.1675", "code": "d onClick(View v) { switch(v.getId()) { case t: sk(t);} }", "n_tokens": 57, "n_pass": [147, 16, 16]}
{"time": "2021-02-22 02:41:25.384951", "score": "0.8963", "loss": "0.2652", "code": "d onClick(View v) { switch(etId()) { case t: sk(t);} }", "n_tokens": 54, "n_pass": [162, 19, 17]}
{"time": "2021-02-22 02:41:30.608889", "score": "0.437", "loss": "1.2718", "code": "d onClick(View v) { switch(etI) { case t: sk(t);} }", "n_tokens": 51, "n_pass": [164, 21, 18]}
{"time": "2021-02-22 02:41:47.085719", "score": "0.437", "loss": "1.2718", "code": "d onClick(View v) { switch(etI){ case t: sk(t);} }", "n_tokens": 50, "n_pass": [231, 26, 19]}
{"time": "2021-02-22 02:42:06.747338", "score": "0.437", "loss": "1.2718", "code": "d onClick(View v){ switch(etI){ case t: sk(t);} }", "n_tokens": 49, "n_pass": [259, 32, 20]}
{"time": "2021-02-22 02:42:09.367690", "score": "0.437", "loss": "1.2718", "code": "d onClick(View v){switch(etI){ case t: sk(t);} }", "n_tokens": 48, "n_pass": [261, 33, 21]}
{"time": "2021-02-22 02:42:38.462036", "score": "0.437", "loss": "1.2718", "code": "d onClick(View v){switch(etI){case t: sk(t);} }", "n_tokens": 47, "n_pass": [319, 42, 22]}
{"time": "2021-02-22 02:42:41.065503", "score": "0.437", "loss": "1.2718", "code": "d onClick(View v){switch(etI){case t:sk(t);} }", "n_tokens": 46, "n_pass": [326, 43, 23]}
{"time": "2021-02-22 02:42:51.569243", "score": "0.437", "loss": "1.2718", "code": "d onClick(View v){switch(etI){case t:sk(t);}}", "n_tokens": 45, "n_pass": [334, 47, 24]}

Minimal simplified code:
d onClick(View v){switch(etI){case t:sk(t);}}

