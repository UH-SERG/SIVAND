
path = /scratch/rabin/data/code2vec/transforms/Methods/java-large/test/ozodrukh__RippleDrawable/app/src/main/java/codetail/graphics/drawables/LayerDrawable_setPaddingMode.java
method_name = setPaddingMode
method_body = public void setPaddingMode(int mode) { if (mLayerState.mPaddingMode != mode) { mLayerState.mPaddingMode = mode; } }
predict, score, loss = setPaddingMode, 0.9999294281005859, 0.0001839230244513601

Trace of simplified code(s):
{"time": "2021-05-26 14:47:31.531691", "score": "0.9999", "loss": "0.0002", "code": "public void setPaddingMode(int mode) { if (mLayerState.mPaddingMode != mode) { mLayerState.mPaddingMode = mode; } }", "n_tokens": 115, "n_pass": [1, 1, 1]}
{"time": "2021-05-26 14:47:34.560605", "score": "0.9992", "loss": "0.0014", "code": "public void setPaddingMode(int mode) { if (mLayerState.mPaddingMode != mode) { mLayerode = mode; } }", "n_tokens": 100, "n_pass": [26, 2, 2]}
{"time": "2021-05-26 14:47:37.529151", "score": "0.9996", "loss": "0.0011", "code": "public void setPaddingMode(int mode) { if (mLayerState.mPaddingMode != mode) { mLayeode; } }", "n_tokens": 92, "n_pass": [48, 3, 3]}
{"time": "2021-05-26 14:47:40.090846", "score": "0.9996", "loss": "0.0011", "code": "void setPaddingMode(int mode) { if (mLayerState.mPaddingMode != mode) { mLayeode; } }", "n_tokens": 85, "n_pass": [50, 4, 4]}
{"time": "2021-05-26 14:47:48.703790", "score": "0.9989", "loss": "0.0027", "code": "d setPaddingMode(int mode) { if (mLayerState.mPaddingMode != mode) { mLayeode; } }", "n_tokens": 82, "n_pass": [87, 7, 5]}
{"time": "2021-05-26 14:47:53.278817", "score": "0.8626", "loss": "0.7245", "code": "d setPaddingMode(int e) { if (mLayerState.mPaddingMode != mode) { mLayeode; } }", "n_tokens": 79, "n_pass": [95, 8, 6]}
{"time": "2021-05-26 14:47:55.848886", "score": "0.8676", "loss": "0.5379", "code": "d setPaddingMode(int e) { if (mrState.mPaddingMode != mode) { mLayeode; } }", "n_tokens": 75, "n_pass": [99, 9, 7]}
{"time": "2021-05-26 14:47:58.425824", "score": "0.7263", "loss": "1.406", "code": "d setPaddingMode(int e) { if (mte.mPaddingMode != mode) { mLayeode; } }", "n_tokens": 71, "n_pass": [100, 10, 8]}
{"time": "2021-05-26 14:48:01.010823", "score": "0.9285", "loss": "0.2914", "code": "d setPaddingMode(int e) { if (mPaddingMode != mode) { mLayeode; } }", "n_tokens": 67, "n_pass": [101, 11, 9]}
{"time": "2021-05-26 14:48:11.275603", "score": "0.9513", "loss": "0.2156", "code": "d setPaddingMode(int e) { if (mPaddingMode != mode) { mode; } }", "n_tokens": 63, "n_pass": [108, 15, 10]}
{"time": "2021-05-26 14:48:23.904305", "score": "0.9236", "loss": "0.3031", "code": "d setPaddingMode(int e) { if (mPaddingMode != mode) { me; } }", "n_tokens": 61, "n_pass": [163, 19, 11]}
{"time": "2021-05-26 14:48:31.202004", "score": "0.6851", "loss": "0.9154", "code": "d setPaddingMode(t e) { if (mPaddingMode != mode) { me; } }", "n_tokens": 59, "n_pass": [179, 20, 12]}
{"time": "2021-05-26 14:48:49.106010", "score": "0.5296", "loss": "1.7848", "code": "d setPaddingMode(t e) { if (mPaddingMode !=ode) { me; } }", "n_tokens": 57, "n_pass": [193, 27, 13]}
{"time": "2021-05-26 14:48:51.676881", "score": "0.5574", "loss": "1.2437", "code": "d setPaddingMode(t e) { if (mPaddingMode !=e) { me; } }", "n_tokens": 55, "n_pass": [194, 28, 14]}
{"time": "2021-05-26 14:48:54.235905", "score": "0.5401", "loss": "1.2908", "code": "d setPaddingMode(t e) { if (mPaddingMode !=e) {e; } }", "n_tokens": 53, "n_pass": [197, 29, 15]}
{"time": "2021-05-26 14:48:56.784352", "score": "0.5636", "loss": "1.2193", "code": "d setPaddingMode(t e) { if (mPaddingMode !=e) { } }", "n_tokens": 51, "n_pass": [198, 30, 16]}
{"time": "2021-05-26 14:49:22.327711", "score": "0.5636", "loss": "1.2193", "code": "d setPaddingMode(t e) { if (mPaddingMode !=e) {} }", "n_tokens": 50, "n_pass": [271, 37, 17]}
{"time": "2021-05-26 14:49:24.879564", "score": "0.5636", "loss": "1.2193", "code": "d setPaddingMode(t e) { if (mPaddingMode !=e) {}}", "n_tokens": 49, "n_pass": [272, 38, 18]}
{"time": "2021-05-26 14:49:33.701210", "score": "0.5636", "loss": "1.2193", "code": "d setPaddingMode(t e){ if (mPaddingMode !=e) {}}", "n_tokens": 48, "n_pass": [295, 39, 19]}
{"time": "2021-05-26 14:49:36.253683", "score": "0.5636", "loss": "1.2193", "code": "d setPaddingMode(t e){if (mPaddingMode !=e) {}}", "n_tokens": 47, "n_pass": [297, 40, 20]}
{"time": "2021-05-26 14:49:38.802294", "score": "0.5636", "loss": "1.2193", "code": "d setPaddingMode(t e){if(mPaddingMode !=e) {}}", "n_tokens": 46, "n_pass": [300, 41, 21]}
{"time": "2021-05-26 14:50:12.181571", "score": "0.5636", "loss": "1.2193", "code": "d setPaddingMode(t e){if(mPaddingMode!=e) {}}", "n_tokens": 45, "n_pass": [314, 54, 22]}
{"time": "2021-05-26 14:50:17.308370", "score": "0.5636", "loss": "1.2193", "code": "d setPaddingMode(t e){if(mPaddingMode!=e){}}", "n_tokens": 44, "n_pass": [319, 56, 23]}

Minimal simplified code:
d setPaddingMode(t e){if(mPaddingMode!=e){}}

