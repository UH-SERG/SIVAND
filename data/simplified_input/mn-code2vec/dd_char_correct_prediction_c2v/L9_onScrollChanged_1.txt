
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/dmfs__opentasks/opentasks/src/main/java/org/dmfs/tasks/widget/ListenableScrollView_onScrollChanged.java
method_name = onScrollChanged
method_body = @Override protected void onScrollChanged(int l, int t, int oldl, int oldt) { super.onScrollChanged(l, t, oldl, oldt); if (mScrollListener != null) { mScrollListener.onScroll(oldt, t); } }
predict, score, loss = onScrollChanged, 0.999432384967804, 0.0005746620590798557

Trace of simplified code(s):
{"time": "2021-02-21 16:40:40.688618", "score": "0.9994", "loss": "0.0006", "code": "@Override protected void onScrollChanged(int l, int t, int oldl, int oldt) { super.onScrollChanged(l, t, oldl, oldt); if (mScrollListener != null) { mScrollListener.onScroll(oldt, t); } }", "n_tokens": 187, "n_pass": [1, 1, 1]}
{"time": "2021-02-21 16:40:43.305307", "score": "0.9994", "loss": "0.0006", "code": "d onScrollChanged(int l, int t, int oldl, int oldt) { super.onScrollChanged(l, t, oldl, oldt); if (mScrollListener != null) { mScrollListener.onScroll(oldt, t); } }", "n_tokens": 164, "n_pass": [20, 2, 2]}
{"time": "2021-02-21 16:40:45.900997", "score": "0.9987", "loss": "0.0014", "code": "d onScrollChanged(int loldt) { super.onScrollChanged(l, t, oldl, oldt); if (mScrollListener != null) { mScrollListener.onScroll(oldt, t); } }", "n_tokens": 141, "n_pass": [21, 3, 3]}
{"time": "2021-02-21 16:40:51.109164", "score": "0.9536", "loss": "0.0483", "code": "d onScrollChanged(int loldt) { super.onScrollChanged(l, t); if (mScrollListener != null) { mScrollListener.onScroll(oldt, t); } }", "n_tokens": 129, "n_pass": [43, 5, 4]}
{"time": "2021-02-21 16:40:53.707371", "score": "0.9533", "loss": "0.0484", "code": "d onScrollChanged(int loldt) { super.onScrollChanged(l, t); if (mScro= null) { mScrollListener.onScroll(oldt, t); } }", "n_tokens": 117, "n_pass": [45, 6, 5]}
{"time": "2021-02-21 16:40:56.313477", "score": "0.9525", "loss": "0.0492", "code": "d onScrollChanged(int loldt) { super.onScrollChanged(l, t); if (mScro= null) { mSr.onScroll(oldt, t); } }", "n_tokens": 105, "n_pass": [47, 7, 6]}
{"time": "2021-02-21 16:41:01.918682", "score": "0.9836", "loss": "0.0176", "code": "d onScrollChanged(int loldt) { super.onScrollChanged(l, t); if (mScro= null) { mSroll(oldt, t); } }", "n_tokens": 99, "n_pass": [75, 9, 7]}
{"time": "2021-02-21 16:41:04.540446", "score": "0.9611", "loss": "0.0415", "code": "d onScrollChanged(int loldt) { super.onScrollChanged(l, t); if (mScro= null) { mSroll(o); } }", "n_tokens": 93, "n_pass": [76, 10, 8]}
{"time": "2021-02-21 16:41:16.113802", "score": "0.9601", "loss": "0.0426", "code": "d onScrollChanged(int loldt) { super.onScrollChanged(l, t); if (mScro) { mSroll(o); } }", "n_tokens": 87, "n_pass": [90, 14, 9]}
{"time": "2021-02-21 16:41:27.693941", "score": "0.9504", "loss": "0.0537", "code": "d onScrollChanged(int loldt) { super.onScrollChanged(l, t); if (mScro) {roll(o); } }", "n_tokens": 84, "n_pass": [137, 18, 10]}
{"time": "2021-02-21 16:41:30.292575", "score": "0.9574", "loss": "0.0456", "code": "d onScrollChanged(int loldt) { super.onScrollChanged(l, t); if (mScro) {l(o); } }", "n_tokens": 81, "n_pass": [138, 19, 11]}
{"time": "2021-02-21 16:41:35.287598", "score": "0.7682", "loss": "0.2932", "code": "d onScrollChanged(int lo) { super.onScrollChanged(l, t); if (mScro) {l(o); } }", "n_tokens": 78, "n_pass": [151, 20, 12]}
{"time": "2021-02-21 16:41:37.872587", "score": "0.7202", "loss": "0.4001", "code": "d onScrollChanged(int lo) {per.onScrollChanged(l, t); if (mScro) {l(o); } }", "n_tokens": 75, "n_pass": [153, 21, 13]}
{"time": "2021-02-21 16:41:53.413851", "score": "0.589", "loss": "1.0575", "code": "d onScrollChanged(int lo) {per.onScrollChanged(l); if (mScro) {l(o); } }", "n_tokens": 72, "n_pass": [161, 27, 14]}
{"time": "2021-02-21 16:41:56.006346", "score": "0.5566", "loss": "1.1515", "code": "d onScrollChanged(int lo) {per.onScrollChanged(l); if (mS) {l(o); } }", "n_tokens": 69, "n_pass": [165, 28, 15]}
{"time": "2021-02-21 16:42:22.266932", "score": "0.5006", "loss": "1.2605", "code": "d onScrollChanged(nt lo) {per.onScrollChanged(l); if (mS) {l(o); } }", "n_tokens": 68, "n_pass": [264, 34, 16]}
{"time": "2021-02-21 16:42:24.860214", "score": "0.7806", "loss": "0.4788", "code": "d onScrollChanged(t lo) {per.onScrollChanged(l); if (mS) {l(o); } }", "n_tokens": 67, "n_pass": [265, 35, 17]}
{"time": "2021-02-21 16:42:27.451357", "score": "0.9149", "loss": "0.1633", "code": "d onScrollChanged(t o) {per.onScrollChanged(l); if (mS) {l(o); } }", "n_tokens": 66, "n_pass": [267, 36, 18]}
{"time": "2021-02-21 16:42:30.081575", "score": "0.9149", "loss": "0.1633", "code": "d onScrollChanged(t o){per.onScrollChanged(l); if (mS) {l(o); } }", "n_tokens": 65, "n_pass": [270, 37, 19]}
{"time": "2021-02-21 16:42:32.672341", "score": "0.9429", "loss": "0.0747", "code": "d onScrollChanged(t o){r.onScrollChanged(l); if (mS) {l(o); } }", "n_tokens": 63, "n_pass": [272, 38, 20]}
{"time": "2021-02-21 16:42:35.288226", "score": "0.8435", "loss": "0.2867", "code": "d onScrollChanged(t o){onScrollChanged(l); if (mS) {l(o); } }", "n_tokens": 61, "n_pass": [273, 39, 21]}
{"time": "2021-02-21 16:42:37.870740", "score": "0.9786", "loss": "0.0657", "code": "d onScrollChanged(t o){ScrollChanged(l); if (mS) {l(o); } }", "n_tokens": 59, "n_pass": [274, 40, 22]}
{"time": "2021-02-21 16:43:13.134468", "score": "0.7992", "loss": "0.4668", "code": "d onScrollChanged(t o){ScrollChanged(); if (mS) {l(o); } }", "n_tokens": 58, "n_pass": [356, 50, 23]}
{"time": "2021-02-21 16:43:15.725808", "score": "0.7992", "loss": "0.4668", "code": "d onScrollChanged(t o){ScrollChanged();if (mS) {l(o); } }", "n_tokens": 57, "n_pass": [358, 51, 24]}
{"time": "2021-02-21 16:43:18.304752", "score": "0.7992", "loss": "0.4668", "code": "d onScrollChanged(t o){ScrollChanged();if(mS) {l(o); } }", "n_tokens": 56, "n_pass": [361, 52, 25]}
{"time": "2021-02-21 16:43:20.885608", "score": "0.8691", "loss": "0.3121", "code": "d onScrollChanged(t o){ScrollChanged();if(S) {l(o); } }", "n_tokens": 55, "n_pass": [363, 53, 26]}
{"time": "2021-02-21 16:43:23.475131", "score": "0.8691", "loss": "0.3121", "code": "d onScrollChanged(t o){ScrollChanged();if(S){l(o); } }", "n_tokens": 54, "n_pass": [366, 54, 27]}
{"time": "2021-02-21 16:43:26.075638", "score": "0.9204", "loss": "0.1789", "code": "d onScrollChanged(t o){ScrollChanged();if(S){(o); } }", "n_tokens": 53, "n_pass": [368, 55, 28]}
{"time": "2021-02-21 16:43:28.661409", "score": "0.9204", "loss": "0.1789", "code": "d onScrollChanged(t o){ScrollChanged();if(S){(o);} }", "n_tokens": 52, "n_pass": [373, 56, 29]}
{"time": "2021-02-21 16:43:31.269431", "score": "0.9204", "loss": "0.1789", "code": "d onScrollChanged(t o){ScrollChanged();if(S){(o);}}", "n_tokens": 51, "n_pass": [375, 57, 30]}

Minimal simplified code:
d onScrollChanged(t o){ScrollChanged();if(S){(o);}}

