
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/58code__Oceanus/oceanus-all/oceanus-exchange/oceanus-exchange-sqlparser/src/main/java/com/bj58/sql/parser/CursorNode_printSubNodes.java
method_name = printSubNodes
method_body = public void printSubNodes(int depth) { super.printSubNodes(depth); if (orderByList != null) { printLabel(depth, "orderByList: "); orderByList.treePrint(depth + 1); } if (offset != null) { printLabel(depth, "offset: "); offset.treePrint(depth + 1); } if (fetchFirst != null) { printLabel(depth, "fetchFirst: "); fetchFirst.treePrint(depth + 1); } }
predict, score, loss = printSubNodes, 0.9999285936355591, 0.00023552982020191848

Trace of simplified code(s):
{"time": "2021-02-22 06:28:32.671898", "score": "1.0", "loss": "0.0001", "code": "public void printSubNodes(int depth) { super.printSubNodes(depth); if (orderByList != null) { printLabel(depth, \"orderByList: \"); orderByList.treePrint(depth + 1); } if (offset != null) { printLabel(depth, \"offset: \"); offset.treePrint(depth + 1); } if (fetchFirst != null) { printLabel(depth, \"fetchFirst: \"); fetchFirst.treePrint(depth + 1); } }", "n_tokens": 347, "n_pass": [1, 1, 1]}
{"time": "2021-02-22 06:28:35.311382", "score": "0.9999", "loss": "0.0002", "code": "public void printSubNodes(int depth) { super.printSubNodes(depth); if (orderByList != set != null) { printLabel(depth, \"offset: \"); offset.treePrint(depth + 1); } if (fetchFirst != null) { printLabel(depth, \"fetchFirst: \"); fetchFirst.treePrint(depth + 1); } }", "n_tokens": 260, "n_pass": [9, 2, 2]}
{"time": "2021-02-22 06:28:37.984007", "score": "0.9999", "loss": "0.0003", "code": "public void printSubNodes(int depth) { super.printSubNodes(depth); if (orderByList != irst != null) { printLabel(depth, \"fetchFirst: \"); fetchFirst.treePrint(depth + 1); } }", "n_tokens": 173, "n_pass": [10, 3, 3]}
{"time": "2021-02-22 06:28:40.993490", "score": "0.9999", "loss": "0.0003", "code": "public void printSubNodes(int depth) { super.printSubNodes(depth); if (orderByList !=ll) { printLabel(depth, \"fetchFirst: \"); fetchFirst.treePrint(depth + 1); } }", "n_tokens": 162, "n_pass": [51, 4, 4]}
{"time": "2021-02-22 06:28:43.604899", "score": "0.9999", "loss": "0.0003", "code": "public void printSubNodes(int depth) { super.printSubNodes(depth); if (orderByList !=ll) { printLabel(depth, \"fetchFirst: \"); fetePrint(depth + 1); } }", "n_tokens": 151, "n_pass": [55, 5, 5]}
{"time": "2021-02-22 06:28:46.213959", "score": "0.9999", "loss": "0.0003", "code": "d printSubNodes(int depth) { super.printSubNodes(depth); if (orderByList !=ll) { printLabel(depth, \"fetchFirst: \"); fetePrint(depth + 1); } }", "n_tokens": 141, "n_pass": [58, 6, 6]}
{"time": "2021-02-22 06:28:49.265609", "score": "0.9994", "loss": "0.0008", "code": "d printSubNodes(int depth) { subNodes(depth); if (orderByList !=ll) { printLabel(depth, \"fetchFirst: \"); fetePrint(depth + 1); } }", "n_tokens": 130, "n_pass": [62, 7, 7]}
{"time": "2021-02-22 06:28:51.885890", "score": "0.999", "loss": "0.0012", "code": "d printSubNodes(int depth) { subNodes(depth); if (ordll) { printLabel(depth, \"fetchFirst: \"); fetePrint(depth + 1); } }", "n_tokens": 119, "n_pass": [65, 8, 8]}
{"time": "2021-02-22 06:28:57.513472", "score": "0.9956", "loss": "0.0052", "code": "d printSubNodes(int depth) { subNodes(depth); if (ordll) { printLabel(depth, \"fetch \"); fetePrint(depth + 1); } }", "n_tokens": 113, "n_pass": [105, 10, 9]}
{"time": "2021-02-22 06:29:00.128947", "score": "0.9912", "loss": "0.0103", "code": "d printSubNodes(int depth) { subNodes(depth); if (ordll) { printLabel(depth, \"fetch \"); fnt(depth + 1); } }", "n_tokens": 107, "n_pass": [107, 11, 10]}
{"time": "2021-02-22 06:29:02.746335", "score": "0.9926", "loss": "0.0085", "code": "d printSubNodes(int depth) { subNodes(depth); if (ordll) { printLabel(depth, \"fetch \"); fnt(dep); } }", "n_tokens": 101, "n_pass": [109, 12, 11]}
{"time": "2021-02-22 06:29:06.510150", "score": "0.993", "loss": "0.0079", "code": "d printSubNodes(int depth) { ses(depth); if (ordll) { printLabel(depth, \"fetch \"); fnt(dep); } }", "n_tokens": 96, "n_pass": [117, 13, 12]}
{"time": "2021-02-22 06:29:12.983841", "score": "0.9975", "loss": "0.0032", "code": "d printSubNodes(int depth) { ses(th); if (ordll) { printLabel(depth, \"fetch \"); fnt(dep); } }", "n_tokens": 93, "n_pass": [175, 15, 13]}
{"time": "2021-02-22 06:29:15.587107", "score": "0.9972", "loss": "0.0034", "code": "d printSubNodes(int depth) { ses(th); if (ll) { printLabel(depth, \"fetch \"); fnt(dep); } }", "n_tokens": 90, "n_pass": [179, 16, 14]}
{"time": "2021-02-22 06:29:26.048364", "score": "0.9963", "loss": "0.0071", "code": "d printSubNodes(int depth) { ses(th); if (ll) { printLabel(dh, \"fetch \"); fnt(dep); } }", "n_tokens": 87, "n_pass": [186, 20, 15]}
{"time": "2021-02-22 06:29:28.647821", "score": "0.9986", "loss": "0.0019", "code": "d printSubNodes(int depth) { ses(th); if (ll) { printLabel(dh, \"fe \"); fnt(dep); } }", "n_tokens": 84, "n_pass": [189, 21, 16]}
{"time": "2021-02-22 06:29:31.250974", "score": "0.9993", "loss": "0.001", "code": "d printSubNodes(int depth) { ses(th); if (ll) { printLabel(dh, \"fe \"); fnt(); } }", "n_tokens": 81, "n_pass": [193, 22, 17]}
{"time": "2021-02-22 06:29:36.572338", "score": "0.9997", "loss": "0.0008", "code": "d printSubNodes(t depth) { ses(th); if (ll) { printLabel(dh, \"fe \"); fnt(); } }", "n_tokens": 79, "n_pass": [204, 23, 18]}
{"time": "2021-02-22 06:29:39.224523", "score": "0.9795", "loss": "0.0883", "code": "d printSubNodes(t pth) { ses(th); if (ll) { printLabel(dh, \"fe \"); fnt(); } }", "n_tokens": 77, "n_pass": [206, 24, 19]}
{"time": "2021-02-22 06:29:41.826108", "score": "0.9902", "loss": "0.0636", "code": "d printSubNodes(t h) { ses(th); if (ll) { printLabel(dh, \"fe \"); fnt(); } }", "n_tokens": 75, "n_pass": [207, 25, 20]}
{"time": "2021-02-22 06:29:57.819746", "score": "0.9902", "loss": "0.0636", "code": "d printSubNodes(t h){ ses(th); if (ll) { printLabel(dh, \"fe \"); fnt(); } }", "n_tokens": 74, "n_pass": [294, 29, 21]}
{"time": "2021-02-22 06:30:00.419900", "score": "0.9902", "loss": "0.0636", "code": "d printSubNodes(t h){ses(th); if (ll) { printLabel(dh, \"fe \"); fnt(); } }", "n_tokens": 73, "n_pass": [296, 30, 22]}
{"time": "2021-02-22 06:30:03.099392", "score": "0.9897", "loss": "0.0635", "code": "d printSubNodes(t h){es(th); if (ll) { printLabel(dh, \"fe \"); fnt(); } }", "n_tokens": 72, "n_pass": [297, 31, 23]}
{"time": "2021-02-22 06:30:05.754400", "score": "0.9894", "loss": "0.0622", "code": "d printSubNodes(t h){s(th); if (ll) { printLabel(dh, \"fe \"); fnt(); } }", "n_tokens": 71, "n_pass": [298, 32, 24]}
{"time": "2021-02-22 06:30:08.348620", "score": "0.9903", "loss": "0.0496", "code": "d printSubNodes(t h){(th); if (ll) { printLabel(dh, \"fe \"); fnt(); } }", "n_tokens": 70, "n_pass": [299, 33, 25]}
{"time": "2021-02-22 06:30:10.963592", "score": "0.9904", "loss": "0.0486", "code": "d printSubNodes(t h){(h); if (ll) { printLabel(dh, \"fe \"); fnt(); } }", "n_tokens": 69, "n_pass": [301, 34, 26]}
{"time": "2021-02-22 06:30:13.556152", "score": "0.9904", "loss": "0.0486", "code": "d printSubNodes(t h){(h);if (ll) { printLabel(dh, \"fe \"); fnt(); } }", "n_tokens": 68, "n_pass": [305, 35, 27]}
{"time": "2021-02-22 06:30:16.167543", "score": "0.9904", "loss": "0.0486", "code": "d printSubNodes(t h){(h);if(ll) { printLabel(dh, \"fe \"); fnt(); } }", "n_tokens": 67, "n_pass": [308, 36, 28]}
{"time": "2021-02-22 06:30:18.759532", "score": "0.9908", "loss": "0.0442", "code": "d printSubNodes(t h){(h);if(l) { printLabel(dh, \"fe \"); fnt(); } }", "n_tokens": 66, "n_pass": [310, 37, 29]}
{"time": "2021-02-22 06:30:34.453874", "score": "0.9915", "loss": "0.0304", "code": "d printSubNodes(t h){(h);if(l) { printLabel(dh, \"f\"); fnt(); } }", "n_tokens": 64, "n_pass": [322, 43, 30]}
{"time": "2021-02-22 06:30:37.083468", "score": "0.9937", "loss": "0.0174", "code": "d printSubNodes(t h){(h);if(l) { printLabel(dh, \"f\"); t(); } }", "n_tokens": 62, "n_pass": [325, 44, 31]}
{"time": "2021-02-22 06:31:01.444221", "score": "0.9937", "loss": "0.0174", "code": "d printSubNodes(t h){(h);if(l) { printLabel(dh, \"f\"); t();} }", "n_tokens": 61, "n_pass": [407, 50, 32]}
{"time": "2021-02-22 06:31:04.047118", "score": "0.9937", "loss": "0.0174", "code": "d printSubNodes(t h){(h);if(l) { printLabel(dh, \"f\"); t();}}", "n_tokens": 60, "n_pass": [408, 51, 33]}
{"time": "2021-02-22 06:31:12.469795", "score": "0.9937", "loss": "0.0174", "code": "d printSubNodes(t h){(h);if(l){ printLabel(dh, \"f\"); t();}}", "n_tokens": 59, "n_pass": [440, 52, 34]}
{"time": "2021-02-22 06:31:15.096898", "score": "0.9937", "loss": "0.0174", "code": "d printSubNodes(t h){(h);if(l){printLabel(dh, \"f\"); t();}}", "n_tokens": 58, "n_pass": [442, 53, 35]}
{"time": "2021-02-22 06:31:43.724828", "score": "0.995", "loss": "0.0099", "code": "d printSubNodes(t h){(h);if(l){printLabel(h, \"f\"); t();}}", "n_tokens": 57, "n_pass": [454, 64, 36]}
{"time": "2021-02-22 06:31:46.325104", "score": "0.995", "loss": "0.0099", "code": "d printSubNodes(t h){(h);if(l){printLabel(h,\"f\"); t();}}", "n_tokens": 56, "n_pass": [457, 65, 37]}
{"time": "2021-02-22 06:31:48.976248", "score": "0.9954", "loss": "0.0089", "code": "d printSubNodes(t h){(h);if(l){printLabel(h,\"\"); t();}}", "n_tokens": 55, "n_pass": [459, 66, 38]}
{"time": "2021-02-22 06:31:51.566613", "score": "0.9954", "loss": "0.0089", "code": "d printSubNodes(t h){(h);if(l){printLabel(h,\"\");t();}}", "n_tokens": 54, "n_pass": [463, 67, 39]}

Minimal simplified code:
d printSubNodes(t h){(h);if(l){printLabel(h,"");t();}}

