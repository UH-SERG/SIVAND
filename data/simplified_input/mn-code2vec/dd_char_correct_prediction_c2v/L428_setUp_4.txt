
path = /scratch/rabin/data/code2vec/transforms/Methods/java-large/test/spring-projects__spring-ws/spring-ws-core/src/test/java/org/springframework/ws/wsdl/wsdl11/provider/SoapProviderTest_setUp.java
method_name = setUp
method_body = @Before public void setUp() throws Exception { provider = new SoapProvider(); WSDLFactory factory = WSDLFactory.newInstance(); definition = factory.newDefinition(); }
predict, score, loss = setUp, 0.9837443232536316, 0.019481509923934937

Trace of simplified code(s):
{"time": "2021-05-26 10:21:44.524581", "score": "0.9837", "loss": "0.0195", "code": "@Before public void setUp() throws Exception { provider = new SoapProvider(); WSDLFactory factory = WSDLFactory.newInstance(); definition = factory.newDefinition(); }", "n_tokens": 166, "n_pass": [1, 1, 1]}
{"time": "2021-05-26 10:21:47.558957", "score": "0.9754", "loss": "0.0255", "code": "@Before public void setUp() throws Exception { provider = new SoapProvider(); WSDLLFactory.newInstance(); definition = factory.newDefinition(); }", "n_tokens": 145, "n_pass": [24, 2, 2]}
{"time": "2021-05-26 10:21:50.582286", "score": "0.9633", "loss": "0.0379", "code": "@Before public void setUp() throws Exception { provider = newLFactory.newInstance(); definition = factory.newDefinition(); }", "n_tokens": 124, "n_pass": [30, 3, 3]}
{"time": "2021-05-26 10:21:53.719917", "score": "0.9574", "loss": "0.0444", "code": "@Before public void setUp() throws Exception { provider = nenewInstance(); definition = factory.newDefinition(); }", "n_tokens": 114, "n_pass": [49, 4, 4]}
{"time": "2021-05-26 10:21:56.379444", "score": "0.8101", "loss": "0.2573", "code": "@Before public void setUp() throws Exception { provider = nee(); definition = factory.newDefinition(); }", "n_tokens": 104, "n_pass": [50, 5, 5]}
{"time": "2021-05-26 10:21:58.991373", "score": "0.7984", "loss": "0.2299", "code": "@Before public void setUp() throws Exception { provider = netion = factory.newDefinition(); }", "n_tokens": 93, "n_pass": [51, 6, 6]}
{"time": "2021-05-26 10:22:01.640807", "score": "0.9609", "loss": "0.0405", "code": "@Before public void setUp() throws Exception { provider = neory.newDefinition(); }", "n_tokens": 82, "n_pass": [52, 7, 7]}
{"time": "2021-05-26 10:22:04.265596", "score": "0.9132", "loss": "0.0917", "code": "@Before public void setUp() throws Exception { provider = nenition(); }", "n_tokens": 71, "n_pass": [53, 8, 8]}
{"time": "2021-05-26 10:22:07.371902", "score": "0.7663", "loss": "0.2718", "code": "@Before public void setUp() throws Exception { pronition(); }", "n_tokens": 61, "n_pass": [60, 9, 9]}
{"time": "2021-05-26 10:22:10.364018", "score": "0.6011", "loss": "0.5284", "code": "@Before public void setUp() throws Exception { pron(); }", "n_tokens": 56, "n_pass": [79, 10, 10]}
{"time": "2021-05-26 10:22:21.298017", "score": "0.4131", "loss": "0.9042", "code": "@Before public void setUp() throws Excep{ pron(); }", "n_tokens": 51, "n_pass": [88, 14, 11]}
{"time": "2021-05-26 10:22:29.570422", "score": "0.7472", "loss": "0.2987", "code": "@Before public void setUp() throws Excep{ n(); }", "n_tokens": 48, "n_pass": [120, 17, 12]}
{"time": "2021-05-26 10:22:32.163410", "score": "0.7464", "loss": "0.3004", "code": "@Before public void setUp() throws Excep{ ; }", "n_tokens": 45, "n_pass": [121, 18, 13]}
{"time": "2021-05-26 10:22:48.896802", "score": "0.7493", "loss": "0.2939", "code": "@Before public void setUp() throws Ep{ ; }", "n_tokens": 42, "n_pass": [138, 24, 14]}
{"time": "2021-05-26 10:22:59.371476", "score": "0.5873", "loss": "0.758", "code": "@Before publicoid setUp() throws Ep{ ; }", "n_tokens": 40, "n_pass": [148, 28, 15]}
{"time": "2021-05-26 10:23:01.965669", "score": "0.5873", "loss": "0.758", "code": "@Before publicd setUp() throws Ep{ ; }", "n_tokens": 38, "n_pass": [149, 29, 16]}
{"time": "2021-05-26 10:23:11.061590", "score": "0.5873", "loss": "0.758", "code": "@Before blicd setUp() throws Ep{ ; }", "n_tokens": 36, "n_pass": [162, 32, 17]}
{"time": "2021-05-26 10:23:26.392334", "score": "0.5873", "loss": "0.758", "code": "@Before licd setUp() throws Ep{ ; }", "n_tokens": 35, "n_pass": [205, 37, 18]}
{"time": "2021-05-26 10:23:59.550036", "score": "0.5873", "loss": "0.758", "code": "@Before licd setUp()throws Ep{ ; }", "n_tokens": 34, "n_pass": [249, 48, 19]}
{"time": "2021-05-26 10:24:02.161085", "score": "0.4972", "loss": "0.8359", "code": "@Before licd setUp()throws p{ ; }", "n_tokens": 33, "n_pass": [257, 49, 20]}
{"time": "2021-05-26 10:24:04.765361", "score": "0.4972", "loss": "0.8359", "code": "@Before licd setUp()throws p{; }", "n_tokens": 32, "n_pass": [260, 50, 21]}
{"time": "2021-05-26 10:24:09.828552", "score": "0.4972", "loss": "0.8359", "code": "@Before licd setUp()throws p{;}", "n_tokens": 31, "n_pass": [262, 52, 22]}

Minimal simplified code:
@Before licd setUp()throws p{;}

