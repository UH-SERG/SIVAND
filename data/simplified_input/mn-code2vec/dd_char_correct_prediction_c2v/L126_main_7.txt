
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/Waikato__meka/src/main/java/meka/classifiers/multilabel/neurofuzzy/SparseVector_main.java
method_name = main
method_body = public static void main(String[] args) { SparseVector a = new SparseVector(10); SparseVector b = new SparseVector(10); a.put(3, 0.50); a.put(9, 0.75); a.put(6, 0.11); a.put(6, 0.00); b.put(3, 0.60); b.put(4, 0.90); System.out.println("a = " + a); System.out.println("b = " + b); System.out.println("a dot b = " + a.dot(b)); System.out.println("a + b = " + a.plus(b)); }
predict, score, loss = main, 0.9999641180038452, 5.5549986427649856e-05

Trace of simplified code(s):
{"time": "2021-02-22 09:13:28.687210", "score": "0.9999", "loss": "0.0001", "code": "public static void main(String[] args) { SparseVector a = new SparseVector(10); SparseVector b = new SparseVector(10); a.put(3, 0.50); a.put(9, 0.75); a.put(6, 0.11); a.put(6, 0.00); b.put(3, 0.60); b.put(4, 0.90); System.out.println(\"a = \" + a); System.out.println(\"b = \" + b); System.out.println(\"a dot b = \" + a.dot(b)); System.out.println(\"a + b = \" + a.plus(b)); }", "n_tokens": 369, "n_pass": [1, 1, 1]}
{"time": "2021-02-22 09:13:31.341186", "score": "1.0", "loss": "0.0", "code": "public static void main(String[] args) { SparseVector a = new SparseVector(10); SparseVector.put(3, 0.60); b.put(4, 0.90); System.out.println(\"a = \" + a); System.out.println(\"b = \" + b); System.out.println(\"a dot b = \" + a.dot(b)); System.out.println(\"a + b = \" + a.plus(b)); }", "n_tokens": 277, "n_pass": [9, 2, 2]}
{"time": "2021-02-22 09:13:33.984816", "score": "0.9999", "loss": "0.0001", "code": "public static void main(String[] args) { SparseVector a = new SparseVector(10); SparseVectortln(\"a = \" + a); System.out.println(\"b = \" + b); System.out.println(\"a dot b = \" + a.dot(b)); System.out.println(\"a + b = \" + a.plus(b)); }", "n_tokens": 231, "n_pass": [18, 3, 3]}
{"time": "2021-02-22 09:13:36.630819", "score": "1.0", "loss": "0.0", "code": "public static void main(String[] args) { Sparstln(\"a = \" + a); System.out.println(\"b = \" + b); System.out.println(\"a dot b = \" + a.dot(b)); System.out.println(\"a + b = \" + a.plus(b)); }", "n_tokens": 185, "n_pass": [22, 4, 4]}
{"time": "2021-02-22 09:13:39.261608", "score": "1.0", "loss": "0.0", "code": "public static void main(String[] args) { Spars.out.println(\"b = \" + b); System.out.println(\"a dot b = \" + a.dot(b)); System.out.println(\"a + b = \" + a.plus(b)); }", "n_tokens": 162, "n_pass": [35, 5, 5]}
{"time": "2021-02-22 09:13:41.891976", "score": "1.0", "loss": "0.0001", "code": "public static void main(String[] args) { Spatln(\"b = \" + b); System.out.println(\"a dot b = \" + a.dot(b)); System.out.println(\"a + b = \" + a.plus(b)); }", "n_tokens": 151, "n_pass": [56, 6, 6]}
{"time": "2021-02-22 09:13:44.513990", "score": "0.9999", "loss": "0.0001", "code": "public static void main(String[] args) { Spatln(\"b = \" + b); System(\"a dot b = \" + a.dot(b)); System.out.println(\"a + b = \" + a.plus(b)); }", "n_tokens": 139, "n_pass": [59, 7, 7]}
{"time": "2021-02-22 09:13:47.535029", "score": "0.9253", "loss": "0.1616", "code": "public static void main(String[] args) { Spatln(\"b = \" + b); System(\"a do\" + a.dot(b)); System.out.println(\"a + b = \" + a.plus(b)); }", "n_tokens": 133, "n_pass": [97, 8, 8]}
{"time": "2021-02-22 09:13:50.205299", "score": "0.9663", "loss": "0.1251", "code": "public static void main(String[] args) { Spatln(\"b = \" + b); System(\"a do\" + a.dot(b)); Syst.println(\"a + b = \" + a.plus(b)); }", "n_tokens": 127, "n_pass": [101, 9, 9]}
{"time": "2021-02-22 09:13:52.851247", "score": "0.8109", "loss": "0.4554", "code": "public static void main(String[] args) { Spatln(\"b = \" + b); System(\"a do\" + a.dot(b)); Systln(\"a + b = \" + a.plus(b)); }", "n_tokens": 121, "n_pass": [102, 10, 10]}
{"time": "2021-02-22 09:13:55.470416", "score": "0.8182", "loss": "0.3817", "code": "public static void main(String[] args) { Spatln(\"b = \" + b); System(\"a do\" + a.dot(b)); Systln(\"a \" + a.plus(b)); }", "n_tokens": 115, "n_pass": [104, 11, 11]}
{"time": "2021-02-22 09:13:58.106885", "score": "0.7472", "loss": "0.552", "code": "public staoid main(String[] args) { Spatln(\"b = \" + b); System(\"a do\" + a.dot(b)); Systln(\"a \" + a.plus(b)); }", "n_tokens": 110, "n_pass": [110, 12, 12]}
{"time": "2021-02-22 09:14:03.738225", "score": "0.7472", "loss": "0.552", "code": "publioid main(String[] args) { Spatln(\"b = \" + b); System(\"a do\" + a.dot(b)); Systln(\"a \" + a.plus(b)); }", "n_tokens": 105, "n_pass": [129, 14, 13]}
{"time": "2021-02-22 09:14:09.404535", "score": "0.7482", "loss": "0.5654", "code": "oid main(String[] args) { Spatln(\"b = \" + b); System(\"a do\" + a.dot(b)); Systln(\"a \" + a.plus(b)); }", "n_tokens": 100, "n_pass": [147, 16, 14]}
{"time": "2021-02-22 09:14:15.041219", "score": "0.7828", "loss": "0.4566", "code": "d main(String[] args) { Spatln(\"b = \" + b); System(\"a do\" + a.dot(b)); Systln(\"a \" + a.plus(b)); }", "n_tokens": 98, "n_pass": [199, 18, 15]}
{"time": "2021-02-22 09:14:23.733188", "score": "0.7828", "loss": "0.4566", "code": "d main(String[] args) {atln(\"b = \" + b); System(\"a do\" + a.dot(b)); Systln(\"a \" + a.plus(b)); }", "n_tokens": 95, "n_pass": [208, 21, 16]}
{"time": "2021-02-22 09:14:26.347008", "score": "0.7739", "loss": "0.4437", "code": "d main(String[] args) {n(\"b = \" + b); System(\"a do\" + a.dot(b)); Systln(\"a \" + a.plus(b)); }", "n_tokens": 92, "n_pass": [209, 22, 17]}
{"time": "2021-02-22 09:14:28.977397", "score": "0.7728", "loss": "0.4541", "code": "d main(String[] args) {n(\" \" + b); System(\"a do\" + a.dot(b)); Systln(\"a \" + a.plus(b)); }", "n_tokens": 89, "n_pass": [211, 23, 18]}
{"time": "2021-02-22 09:14:31.584447", "score": "0.7871", "loss": "0.5047", "code": "d main(String[] args) {n(\" \" ); System(\"a do\" + a.dot(b)); Systln(\"a \" + a.plus(b)); }", "n_tokens": 86, "n_pass": [213, 24, 19]}
{"time": "2021-02-22 09:14:34.197883", "score": "0.9795", "loss": "0.1069", "code": "d main(String[] args) {n(\" \" ); tem(\"a do\" + a.dot(b)); Systln(\"a \" + a.plus(b)); }", "n_tokens": 83, "n_pass": [215, 25, 20]}
{"time": "2021-02-22 09:14:36.814502", "score": "0.6082", "loss": "0.5457", "code": "d main(String[] args) {n(\" \" ); (\"a do\" + a.dot(b)); Systln(\"a \" + a.plus(b)); }", "n_tokens": 80, "n_pass": [216, 26, 21]}
{"time": "2021-02-22 09:14:39.444716", "score": "0.7782", "loss": "0.2651", "code": "d main(String[] args) {n(\" \" ); (\"a\" + a.dot(b)); Systln(\"a \" + a.plus(b)); }", "n_tokens": 77, "n_pass": [218, 27, 22]}
{"time": "2021-02-22 09:14:42.069610", "score": "0.8159", "loss": "0.2163", "code": "d main(String[] args) {n(\" \" ); (\"a\" +dot(b)); Systln(\"a \" + a.plus(b)); }", "n_tokens": 74, "n_pass": [220, 28, 23]}
{"time": "2021-02-22 09:14:44.693655", "score": "0.886", "loss": "0.1301", "code": "d main(String[] args) {n(\" \" ); (\"a\" +(b)); Systln(\"a \" + a.plus(b)); }", "n_tokens": 71, "n_pass": [221, 29, 24]}
{"time": "2021-02-22 09:14:47.307194", "score": "0.9996", "loss": "0.0008", "code": "d main(String[] args) {n(\" \" ); (\"a\" +(b)); tln(\"a \" + a.plus(b)); }", "n_tokens": 68, "n_pass": [224, 30, 25]}
{"time": "2021-02-22 09:14:49.948363", "score": "0.5387", "loss": "0.8855", "code": "d main(String[] args) {n(\" \" ); (\"a\" +(b)); (\"a \" + a.plus(b)); }", "n_tokens": 65, "n_pass": [225, 31, 26]}
{"time": "2021-02-22 09:14:52.575372", "score": "0.5485", "loss": "0.8797", "code": "d main(String[] args) {n(\" \" ); (\"a\" +(b)); (\"a \" .plus(b)); }", "n_tokens": 62, "n_pass": [228, 32, 27]}
{"time": "2021-02-22 09:15:02.951432", "score": "0.539", "loss": "0.9182", "code": "d main(String[] args) {n(\" \" ); (\"a\" +(b)); (\"\" .plus(b)); }", "n_tokens": 60, "n_pass": [292, 35, 28]}
{"time": "2021-02-22 09:15:05.572867", "score": "0.8999", "loss": "0.1768", "code": "d main(String[] args) {n(\" \" ); (\"a\" +(b)); (\"\" .ps(b)); }", "n_tokens": 58, "n_pass": [295, 36, 29]}
{"time": "2021-02-22 09:15:10.488050", "score": "0.7304", "loss": "0.8868", "code": "d main(tring[] args) {n(\" \" ); (\"a\" +(b)); (\"\" .ps(b)); }", "n_tokens": 57, "n_pass": [307, 37, 30]}
{"time": "2021-02-22 09:15:13.090000", "score": "0.4799", "loss": "1.3111", "code": "d main(ring[] args) {n(\" \" ); (\"a\" +(b)); (\"\" .ps(b)); }", "n_tokens": 56, "n_pass": [308, 38, 31]}
{"time": "2021-02-22 09:15:18.304232", "score": "0.356", "loss": "1.652", "code": "d main(rng[] args) {n(\" \" ); (\"a\" +(b)); (\"\" .ps(b)); }", "n_tokens": 55, "n_pass": [310, 40, 32]}
{"time": "2021-02-22 09:15:20.913616", "score": "0.3151", "loss": "1.757", "code": "d main(rg[] args) {n(\" \" ); (\"a\" +(b)); (\"\" .ps(b)); }", "n_tokens": 54, "n_pass": [311, 41, 33]}
{"time": "2021-02-22 09:15:23.517091", "score": "0.7262", "loss": "0.479", "code": "d main(r[] args) {n(\" \" ); (\"a\" +(b)); (\"\" .ps(b)); }", "n_tokens": 53, "n_pass": [312, 42, 34]}
{"time": "2021-02-22 09:15:26.115076", "score": "0.7262", "loss": "0.479", "code": "d main(r[]args) {n(\" \" ); (\"a\" +(b)); (\"\" .ps(b)); }", "n_tokens": 52, "n_pass": [315, 43, 35]}
{"time": "2021-02-22 09:15:39.154576", "score": "0.7262", "loss": "0.479", "code": "d main(r[]args){n(\" \" ); (\"a\" +(b)); (\"\" .ps(b)); }", "n_tokens": 51, "n_pass": [321, 48, 36]}
{"time": "2021-02-22 09:15:58.184772", "score": "0.7262", "loss": "0.479", "code": "d main(r[]args){n(\" \" );(\"a\" +(b)); (\"\" .ps(b)); }", "n_tokens": 50, "n_pass": [392, 53, 37]}
{"time": "2021-02-22 09:16:00.785636", "score": "0.7246", "loss": "0.4942", "code": "d main(r[]args){n(\" \" );(\"\" +(b)); (\"\" .ps(b)); }", "n_tokens": 49, "n_pass": [395, 54, 38]}
{"time": "2021-02-22 09:16:03.388491", "score": "0.7246", "loss": "0.4942", "code": "d main(r[]args){n(\" \" );(\"\"+(b)); (\"\" .ps(b)); }", "n_tokens": 48, "n_pass": [397, 55, 39]}
{"time": "2021-02-22 09:16:05.990338", "score": "0.7246", "loss": "0.4942", "code": "d main(r[]args){n(\" \" );(\"\"+(b));(\"\" .ps(b)); }", "n_tokens": 47, "n_pass": [404, 56, 40]}
{"time": "2021-02-22 09:16:08.626255", "score": "0.7246", "loss": "0.4942", "code": "d main(r[]args){n(\" \" );(\"\"+(b));(\"\".ps(b)); }", "n_tokens": 46, "n_pass": [408, 57, 41]}
{"time": "2021-02-22 09:16:11.252550", "score": "0.7375", "loss": "0.4559", "code": "d main(r[]args){n(\" \" );(\"\"+(b));(\"\".s(b)); }", "n_tokens": 45, "n_pass": [410, 58, 42]}
{"time": "2021-02-22 09:16:13.852955", "score": "0.759", "loss": "0.4238", "code": "d main(r[]args){n(\" \" );(\"\"+(b));(\"\".s()); }", "n_tokens": 44, "n_pass": [413, 59, 43]}
{"time": "2021-02-22 09:16:16.449070", "score": "0.759", "loss": "0.4238", "code": "d main(r[]args){n(\" \" );(\"\"+(b));(\"\".s());}", "n_tokens": 43, "n_pass": [417, 60, 44]}
{"time": "2021-02-22 09:16:36.960694", "score": "0.759", "loss": "0.4238", "code": "d main(r[]args){n(\" \");(\"\"+(b));(\"\".s());}", "n_tokens": 42, "n_pass": [440, 67, 45]}

Minimal simplified code:
d main(r[]args){n(" ");(""+(b));("".s());}

