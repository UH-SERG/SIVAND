
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/sakaiproject__sakai/kernel/api/src/main/java/org/sakaiproject/user/cover/UserDirectoryService_getInstance.java
method_name = getInstance
method_body = public static org.sakaiproject.user.api.UserDirectoryService getInstance() { if (ComponentManager.CACHE_COMPONENTS) { if (m_instance == null) m_instance = (org.sakaiproject.user.api.UserDirectoryService) ComponentManager.get(org.sakaiproject.user.api.UserDirectoryService.class); return m_instance; } else { return (org.sakaiproject.user.api.UserDirectoryService) ComponentManager.get(org.sakaiproject.user.api.UserDirectoryService.class); } }
predict, score, loss = getInstance, 0.9568052291870117, 0.04800132289528847

Trace of simplified code(s):
{"time": "2021-02-24 19:49:54.356824", "score": "0.9568", "loss": "0.048", "code": "public static org.sakaiproject.user.api.UserDirectoryService getInstance() { if (ComponentManager.CACHE_COMPONENTS) { if (m_instance == null) m_instance = (org.sakaiproject.user.api.UserDirectoryService) ComponentManager.get(org.sakaiproject.user.api.UserDirectoryService.class); return m_instance; } else { return (org.sakaiproject.user.api.UserDirectoryService) ComponentManager.get(org.sakaiproject.user.api.UserDirectoryService.class); } }", "n_tokens": 443, "n_pass": [1, 1, 1]}
{"time": "2021-02-24 19:49:57.070485", "score": "0.8385", "loss": "0.1905", "code": "rvice getInstance() { if (ComponentManager.CACHE_COMPONENTS) { if (m_instance == null) m_instance = (org.sakaiproject.user.api.UserDirectoryService) ComponentManager.get(org.sakaiproject.user.api.UserDirectoryService.class); return m_instance; } else { return (org.sakaiproject.user.api.UserDirectoryService) ComponentManager.get(org.sakaiproject.user.api.UserDirectoryService.class); } }", "n_tokens": 388, "n_pass": [20, 2, 2]}
{"time": "2021-02-24 19:49:59.765901", "score": "0.9863", "loss": "0.0147", "code": "rvice getInstance() { if (ComponentManager.CACHE_COMPONENTS) { if (m_instance == null) m_instance = (org.sakaiproject.user.api.UserDirectoryService) ComponentManager.get(org.sakaiproject.user.api.UserDirectoryService.class); return m_instance; } else { return (org.sakaiprojecg.sakaiproject.user.api.UserDirectoryService.class); } }", "n_tokens": 332, "n_pass": [25, 3, 3]}
{"time": "2021-02-24 19:50:02.462631", "score": "0.8832", "loss": "0.1274", "code": "rvice getInstance() { if (ComponentManager.CACHE_COMPONENTS) { if (m_instance == null) m_instance = (org.sakaiproject.user.api.UserDirectoryService) ComponentManager.get(org.sakaiproject.user.api.UserDirectoryService.clag.sakaiproject.user.api.UserDirectoryService.class); } }", "n_tokens": 276, "n_pass": [31, 4, 4]}
{"time": "2021-02-24 19:50:05.153568", "score": "0.5169", "loss": "0.8936", "code": "rvice getInstance() { if (ComponentManager.CACHE_COMPONENTS) { if (m_instance == null) m_instance = (org.sakaiproject.user.api.UserDirectoryService) ComponentManager.get(org.sakaiproject.user.api.UserDirectoryService.claDirectoryService.class); } }", "n_tokens": 248, "n_pass": [47, 5, 5]}
{"time": "2021-02-24 19:50:07.839661", "score": "0.6078", "loss": "1.2022", "code": "rvice getInstance() { if (CNENTS) { if (m_instance == null) m_instance = (org.sakaiproject.user.api.UserDirectoryService) ComponentManager.get(org.sakaiproject.user.api.UserDirectoryService.claDirectoryService.class); } }", "n_tokens": 221, "n_pass": [49, 6, 6]}
{"time": "2021-02-24 19:50:10.536197", "score": "0.577", "loss": "0.9218", "code": "rvice getInstance() { if (CNENTS) { if (m_instance == aiproject.user.api.UserDirectoryService) ComponentManager.get(org.sakaiproject.user.api.UserDirectoryService.claDirectoryService.class); } }", "n_tokens": 194, "n_pass": [51, 7, 7]}
{"time": "2021-02-24 19:50:13.219466", "score": "0.6302", "loss": "0.8754", "code": "rvice getInstance() { if (CNENTS) { if (m_instance == toryService) ComponentManager.get(org.sakaiproject.user.api.UserDirectoryService.claDirectoryService.class); } }", "n_tokens": 166, "n_pass": [52, 8, 8]}
{"time": "2021-02-24 19:50:15.903428", "score": "0.9562", "loss": "0.048", "code": "rvice getInstance() { if (CNENTS) { if (m_instance == toryService) ComponentManager.get(org.sakaiproject.user.DirectoryService.class); } }", "n_tokens": 138, "n_pass": [55, 9, 9]}
{"time": "2021-02-24 19:50:18.533697", "score": "0.9562", "loss": "0.048", "code": "rvice getInstance() { if (CNENTS) { if (m_instance == toryService) ComponentManager.get(org.sakaiproject.user.ce.class); } }", "n_tokens": 124, "n_pass": [71, 10, 10]}
{"time": "2021-02-24 19:50:21.602821", "score": "0.854", "loss": "0.1839", "code": "rvice getInstance() { if (CNENTS) { if (toryService) ComponentManager.get(org.sakaiproject.user.ce.class); } }", "n_tokens": 110, "n_pass": [75, 11, 11]}
{"time": "2021-02-24 19:50:24.259135", "score": "0.5815", "loss": "0.9372", "code": "rvice getInstance() { if (CNENTS) { if (toryService) Cr.get(org.sakaiproject.user.ce.class); } }", "n_tokens": 96, "n_pass": [77, 12, 12]}
{"time": "2021-02-24 19:50:26.932873", "score": "0.575", "loss": "0.9346", "code": "rvice getInstance() { if (CNENTS) { if (toryService) Cr.get(org.sakace.class); } }", "n_tokens": 82, "n_pass": [79, 13, 13]}
{"time": "2021-02-24 19:50:30.033594", "score": "0.2168", "loss": "2.6724", "code": "rvice getInstance() { if (CNENTS) { if (toryService) Cr.get(org.sakas); } }", "n_tokens": 75, "n_pass": [98, 14, 14]}
{"time": "2021-02-24 19:50:33.518460", "score": "0.2168", "loss": "2.6724", "code": "rvice getInstance() { if (CNENTS) { if (vice) Cr.get(org.sakas); } }", "n_tokens": 68, "n_pass": [105, 15, 15]}
{"time": "2021-02-24 19:50:36.168521", "score": "0.5823", "loss": "0.9449", "code": "rvice getInstance() { if (CNENTS) { if (vice) Cr.get(os); } }", "n_tokens": 61, "n_pass": [108, 16, 16]}
{"time": "2021-02-24 19:50:46.609915", "score": "0.5362", "loss": "1.2119", "code": "rvice getInstance() { if (CNENTS) { if (vice)get(os); } }", "n_tokens": 57, "n_pass": [152, 19, 17]}
{"time": "2021-02-24 19:50:56.656782", "score": "0.3936", "loss": "1.4974", "code": "rvice getInstance() { if (CNENTS) { if (vice)t(os); } }", "n_tokens": 55, "n_pass": [204, 22, 18]}
{"time": "2021-02-24 19:50:59.293998", "score": "0.4921", "loss": "1.1226", "code": "rvice getInstance() { if (CNENTS) { if (vice)t(); } }", "n_tokens": 53, "n_pass": [205, 23, 19]}
{"time": "2021-02-24 19:51:01.955931", "score": "0.4921", "loss": "1.1226", "code": "vice getInstance() { if (CNENTS) { if (vice)t(); } }", "n_tokens": 52, "n_pass": [209, 24, 20]}
{"time": "2021-02-24 19:51:21.626625", "score": "0.4921", "loss": "1.1226", "code": "vice getInstance() { if (CNES) { if (vice)t(); } }", "n_tokens": 50, "n_pass": [229, 30, 21]}
{"time": "2021-02-24 19:51:24.302241", "score": "0.3501", "loss": "1.6505", "code": "vice getInstance() { if (CNES) { if (ve)t(); } }", "n_tokens": 48, "n_pass": [235, 31, 22]}
{"time": "2021-02-24 19:51:47.442382", "score": "0.3501", "loss": "1.6505", "code": "vice getInstance() { if (CNES) { if (ve)t();} }", "n_tokens": 47, "n_pass": [308, 37, 23]}
{"time": "2021-02-24 19:51:50.091193", "score": "0.3501", "loss": "1.6505", "code": "vice getInstance() { if (CNES) { if (ve)t();}}", "n_tokens": 46, "n_pass": [309, 38, 24]}
{"time": "2021-02-24 19:52:08.343048", "score": "0.3501", "loss": "1.6505", "code": "vice getInstance(){ if (CNES) { if (ve)t();}}", "n_tokens": 45, "n_pass": [329, 43, 25]}
{"time": "2021-02-24 19:52:10.996345", "score": "0.3501", "loss": "1.6505", "code": "vice getInstance(){if (CNES) { if (ve)t();}}", "n_tokens": 44, "n_pass": [331, 44, 26]}
{"time": "2021-02-24 19:52:13.651786", "score": "0.3501", "loss": "1.6505", "code": "vice getInstance(){if(CNES) { if (ve)t();}}", "n_tokens": 43, "n_pass": [334, 45, 27]}
{"time": "2021-02-24 19:52:24.252877", "score": "0.9744", "loss": "0.035", "code": "vice getInstance(){if(CNE) { if (ve)t();}}", "n_tokens": 42, "n_pass": [339, 49, 28]}
{"time": "2021-02-24 19:52:26.923996", "score": "0.9744", "loss": "0.035", "code": "vice getInstance(){if(CNE){ if (ve)t();}}", "n_tokens": 41, "n_pass": [341, 50, 29]}
{"time": "2021-02-24 19:52:29.587945", "score": "0.9744", "loss": "0.035", "code": "vice getInstance(){if(CNE){if (ve)t();}}", "n_tokens": 40, "n_pass": [343, 51, 30]}
{"time": "2021-02-24 19:52:32.242812", "score": "0.9744", "loss": "0.035", "code": "vice getInstance(){if(CNE){if(ve)t();}}", "n_tokens": 39, "n_pass": [346, 52, 31]}
{"time": "2021-02-24 19:52:34.896569", "score": "0.9676", "loss": "0.0404", "code": "vice getInstance(){if(CNE){if(e)t();}}", "n_tokens": 38, "n_pass": [348, 53, 32]}
{"time": "2021-02-24 19:52:37.547139", "score": "0.7526", "loss": "0.5629", "code": "ice getInstance(){if(CNE){if(e)t();}}", "n_tokens": 37, "n_pass": [357, 54, 33]}
{"time": "2021-02-24 19:52:40.195017", "score": "0.7882", "loss": "0.3083", "code": "ce getInstance(){if(CNE){if(e)t();}}", "n_tokens": 36, "n_pass": [358, 55, 34]}
{"time": "2021-02-24 19:52:42.859082", "score": "0.9269", "loss": "0.0895", "code": "e getInstance(){if(CNE){if(e)t();}}", "n_tokens": 35, "n_pass": [359, 56, 35]}

Minimal simplified code:
e getInstance(){if(CNE){if(e)t();}}

