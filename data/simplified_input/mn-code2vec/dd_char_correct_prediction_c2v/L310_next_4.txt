
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/json-iterator__java/src/main/java/com/jsoniter/any/ListWrapperAny_next.java
method_name = next
method_body = @Override public Any next() { if (cache == null) { cache = new ArrayList<Any>(); } if (index == cache.size()) { cache.add(Any.wrap(val.get(index))); } return cache.get(index++); }
predict, score, loss = next, 0.9699442982673645, 0.032920952886343

Trace of simplified code(s):
{"time": "2021-02-25 00:04:05.685058", "score": "0.9699", "loss": "0.0329", "code": "@Override public Any next() { if (cache == null) { cache = new ArrayList<Any>(); } if (index == cache.size()) { cache.add(Any.wrap(val.get(index))); } return cache.get(index++); }", "n_tokens": 179, "n_pass": [1, 1, 1]}
{"time": "2021-02-25 00:04:08.387611", "score": "0.9585", "loss": "0.0476", "code": "@Override public Any next() { if (cache == ndex == cache.size()) { cache.add(Any.wrap(val.get(index))); } return cache.get(index++); }", "n_tokens": 134, "n_pass": [9, 2, 2]}
{"time": "2021-02-25 00:04:11.486629", "score": "0.9666", "loss": "0.0373", "code": "@Override public Any next() { if (cache == ne.size()) { cache.add(Any.wrap(val.get(index))); } return cache.get(index++); }", "n_tokens": 123, "n_pass": [36, 3, 3]}
{"time": "2021-02-25 00:04:17.395751", "score": "0.972", "loss": "0.0319", "code": "@Override public Any next() { if (cache .size()) { cache.add(Any.wrap(val.get(index))); } return cache.get(index++); }", "n_tokens": 118, "n_pass": [69, 5, 4]}
{"time": "2021-02-25 00:04:20.071473", "score": "0.9188", "loss": "0.1281", "code": "@Override public Any next() { if (cache .size()) { cdd(Any.wrap(val.get(index))); } return cache.get(index++); }", "n_tokens": 112, "n_pass": [72, 6, 5]}
{"time": "2021-02-25 00:04:22.744754", "score": "0.9259", "loss": "0.1111", "code": "@Override public Any next() { if (cache .size()) { cdd(Any.wrap(t(index))); } return cache.get(index++); }", "n_tokens": 106, "n_pass": [75, 7, 6]}
{"time": "2021-02-25 00:04:28.089650", "score": "0.8875", "loss": "0.1828", "code": "@Override public Any next() { if (cache .size()) { cdd(Any.wrap(t(index))); } return cac(index++); }", "n_tokens": 100, "n_pass": [80, 9, 7]}
{"time": "2021-02-25 00:04:30.772119", "score": "0.8851", "loss": "0.1867", "code": "@Overpublic Any next() { if (cache .size()) { cdd(Any.wrap(t(index))); } return cac(index++); }", "n_tokens": 95, "n_pass": [84, 10, 8]}
{"time": "2021-02-25 00:04:33.482420", "score": "0.8851", "loss": "0.1867", "code": "@Overc Any next() { if (cache .size()) { cdd(Any.wrap(t(index))); } return cac(index++); }", "n_tokens": 90, "n_pass": [85, 11, 9]}
{"time": "2021-02-25 00:04:36.968552", "score": "0.8885", "loss": "0.1811", "code": "@Overc Any next() { if (c.size()) { cdd(Any.wrap(t(index))); } return cac(index++); }", "n_tokens": 85, "n_pass": [90, 12, 10]}
{"time": "2021-02-25 00:04:43.173604", "score": "0.9145", "loss": "0.1444", "code": "@Overc Any next() { if (cze()) { cdd(Any.wrap(t(index))); } return cac(index++); }", "n_tokens": 82, "n_pass": [136, 14, 11]}
{"time": "2021-02-25 00:04:45.860872", "score": "0.9693", "loss": "0.0423", "code": "@Overc Any next() { if (cze()) { cdd(Anyap(t(index))); } return cac(index++); }", "n_tokens": 79, "n_pass": [141, 15, 12]}
{"time": "2021-02-25 00:04:48.531419", "score": "0.966", "loss": "0.0488", "code": "@Overc Any next() { if (cze()) { cdd(Anyap(t(ix))); } return cac(index++); }", "n_tokens": 76, "n_pass": [144, 16, 13]}
{"time": "2021-02-25 00:04:56.567720", "score": "0.8833", "loss": "0.2188", "code": "@Overc Any next() { if (cze()) { cdd(Anyap(t(ix))); } return cac(in++); }", "n_tokens": 73, "n_pass": [152, 19, 14]}
{"time": "2021-02-25 00:04:59.253897", "score": "0.888", "loss": "0.2447", "code": "@Orc Any next() { if (cze()) { cdd(Anyap(t(ix))); } return cac(in++); }", "n_tokens": 71, "n_pass": [156, 20, 15]}
{"time": "2021-02-25 00:05:01.956630", "score": "0.8826", "loss": "0.2188", "code": "@O Any next() { if (cze()) { cdd(Anyap(t(ix))); } return cac(in++); }", "n_tokens": 69, "n_pass": [157, 21, 16]}
{"time": "2021-02-25 00:05:05.060522", "score": "0.6942", "loss": "0.9555", "code": "@O A next() { if (cze()) { cdd(Anyap(t(ix))); } return cac(in++); }", "n_tokens": 67, "n_pass": [159, 22, 17]}
{"time": "2021-02-25 00:05:08.196169", "score": "0.7321", "loss": "0.8001", "code": "@O A next() { if (cze()) { cdd(ap(t(ix))); } return cac(in++); }", "n_tokens": 64, "n_pass": [169, 23, 18]}
{"time": "2021-02-25 00:05:16.438929", "score": "0.4667", "loss": "1.5226", "code": " A next() { if (cze()) { cdd(ap(t(ix))); } return cac(in++); }", "n_tokens": 62, "n_pass": [181, 26, 19]}
{"time": "2021-02-25 00:05:27.222002", "score": "0.4667", "loss": "1.5226", "code": "A next() { if (cze()) { cdd(ap(t(ix))); } return cac(in++); }", "n_tokens": 61, "n_pass": [245, 29, 20]}
{"time": "2021-02-25 00:05:31.952937", "score": "0.4667", "loss": "1.5226", "code": "A next(){ if (cze()) { cdd(ap(t(ix))); } return cac(in++); }", "n_tokens": 60, "n_pass": [253, 30, 21]}
{"time": "2021-02-25 00:05:34.622282", "score": "0.4667", "loss": "1.5226", "code": "A next(){if (cze()) { cdd(ap(t(ix))); } return cac(in++); }", "n_tokens": 59, "n_pass": [255, 31, 22]}
{"time": "2021-02-25 00:05:37.277405", "score": "0.4667", "loss": "1.5226", "code": "A next(){if(cze()) { cdd(ap(t(ix))); } return cac(in++); }", "n_tokens": 58, "n_pass": [258, 32, 23]}
{"time": "2021-02-25 00:05:39.930705", "score": "0.4764", "loss": "1.0184", "code": "A next(){if(ze()) { cdd(ap(t(ix))); } return cac(in++); }", "n_tokens": 57, "n_pass": [260, 33, 24]}
{"time": "2021-02-25 00:05:45.391035", "score": "0.4521", "loss": "1.2176", "code": "A next(){if(z()) { cdd(ap(t(ix))); } return cac(in++); }", "n_tokens": 56, "n_pass": [262, 35, 25]}
{"time": "2021-02-25 00:05:48.047618", "score": "0.7462", "loss": "0.4134", "code": "A next(){if(z()) {dd(ap(t(ix))); } return cac(in++); }", "n_tokens": 54, "n_pass": [267, 36, 26]}
{"time": "2021-02-25 00:05:50.792438", "score": "0.7127", "loss": "0.4186", "code": "A next(){if(z()) {(ap(t(ix))); } return cac(in++); }", "n_tokens": 52, "n_pass": [268, 37, 27]}
{"time": "2021-02-25 00:05:53.441596", "score": "0.7496", "loss": "0.3583", "code": "A next(){if(z()) {(ap(t())); } return cac(in++); }", "n_tokens": 50, "n_pass": [272, 38, 28]}
{"time": "2021-02-25 00:05:59.293304", "score": "0.9448", "loss": "0.0741", "code": "A next(){if(z()) {(ap(t())); } return c(in++); }", "n_tokens": 48, "n_pass": [280, 40, 29]}
{"time": "2021-02-25 00:06:12.593098", "score": "0.7569", "loss": "0.3355", "code": "A next(){if(z()) {(ap(t())); } return c(n++); }", "n_tokens": 47, "n_pass": [345, 43, 30]}
{"time": "2021-02-25 00:06:15.237559", "score": "0.7569", "loss": "0.3355", "code": "A next(){if(z()) {(ap(t())); } return c(n++);}", "n_tokens": 46, "n_pass": [350, 44, 31]}
{"time": "2021-02-25 00:06:20.389834", "score": "0.7569", "loss": "0.3355", "code": "A next(){if(z()){(ap(t())); } return c(n++);}", "n_tokens": 45, "n_pass": [368, 45, 32]}
{"time": "2021-02-25 00:06:23.059473", "score": "0.7737", "loss": "0.3051", "code": "A next(){if(z()){(p(t())); } return c(n++);}", "n_tokens": 44, "n_pass": [371, 46, 33]}
{"time": "2021-02-25 00:06:25.726533", "score": "0.813", "loss": "0.2494", "code": "A next(){if(z()){((t())); } return c(n++);}", "n_tokens": 43, "n_pass": [372, 47, 34]}
{"time": "2021-02-25 00:06:28.394097", "score": "0.813", "loss": "0.2494", "code": "A next(){if(z()){((t()));} return c(n++);}", "n_tokens": 42, "n_pass": [380, 48, 35]}
{"time": "2021-02-25 00:06:31.063407", "score": "0.813", "loss": "0.2494", "code": "A next(){if(z()){((t()));}return c(n++);}", "n_tokens": 41, "n_pass": [382, 49, 36]}

Minimal simplified code:
A next(){if(z()){((t()));}return c(n++);}

