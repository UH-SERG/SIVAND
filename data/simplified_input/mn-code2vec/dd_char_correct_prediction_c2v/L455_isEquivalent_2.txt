
path = /scratch/rabin/data/code2vec/transforms/Methods/java-large/test/58code__Oceanus/oceanus-all/oceanus-exchange/oceanus-exchange-sqlparser/src/main/java/com/bj58/sql/parser/CastNode_isEquivalent.java
method_name = isEquivalent
method_body = protected boolean isEquivalent(ValueNode o) throws StandardException { if (isSameNodeType(o)) { CastNode other = (CastNode) o; return getType().equals(other.getType()) && castOperand.isEquivalent(other.castOperand); } return false; }
predict, score, loss = isEquivalent, 1.0, 0.0

Trace of simplified code(s):
{"time": "2021-05-26 13:58:50.491862", "score": "1.0", "loss": "0.0", "code": "protected boolean isEquivalent(ValueNode o) throws StandardException { if (isSameNodeType(o)) { CastNode other = (CastNode) o; return getType().equals(other.getType()) && castOperand.isEquivalent(other.castOperand); } return false; }", "n_tokens": 233, "n_pass": [1, 1, 1]}
{"time": "2021-05-26 13:58:53.491218", "score": "1.0", "loss": "0.0", "code": "protected boolean isEquivalent(ValueNode o) throws StandardException { if (isSameNodeType(o)) { CastNode other = (CastNode) o; return getType().etOperand.isEquivalent(other.castOperand); } return false; }", "n_tokens": 204, "n_pass": [25, 2, 2]}
{"time": "2021-05-26 13:58:56.548243", "score": "1.0", "loss": "0.0", "code": "protected boolean isEquivalent(ValueNode o) throws StandardException { if (isSameNodeType(o)) { CastNode other = (CastNode) o; return getType().ivalent(other.castOperand); } return false; }", "n_tokens": 189, "n_pass": [46, 3, 3]}
{"time": "2021-05-26 13:58:59.160287", "score": "1.0", "loss": "0.0", "code": "ean isEquivalent(ValueNode o) throws StandardException { if (isSameNodeType(o)) { CastNode other = (CastNode) o; return getType().ivalent(other.castOperand); } return false; }", "n_tokens": 175, "n_pass": [50, 4, 4]}
{"time": "2021-05-26 13:59:02.142205", "score": "1.0", "loss": "0.0", "code": "ean isEquivalent(ValueNode o) throws StandardException { if (isSameNodeType(o)) { CastNode other = (CastNode) o; reivalent(other.castOperand); } return false; }", "n_tokens": 160, "n_pass": [59, 5, 5]}
{"time": "2021-05-26 13:59:05.160357", "score": "1.0", "loss": "0.0", "code": "ean isEquivalent(ValueNode o) throws StandardException { if (isSameNodeType(o)) { CastNode other = (CastNode) o;nt(other.castOperand); } return false; }", "n_tokens": 152, "n_pass": [93, 6, 6]}
{"time": "2021-05-26 13:59:07.742474", "score": "1.0", "loss": "0.0", "code": "ean isEquivalent(ValueNode o) throws StandardException { if (isSameNodeType(o)) { CastNode other = (CastNode) o;nt(otherrand); } return false; }", "n_tokens": 144, "n_pass": [95, 7, 7]}
{"time": "2021-05-26 13:59:10.349486", "score": "1.0", "loss": "0.0", "code": "ean isEquivalent(ValueNode o) throws StandardException { if (isSameNodeType(o)) { CastNode other = (CastNode) o;nt(otherrand); }false; }", "n_tokens": 136, "n_pass": [97, 8, 8]}
{"time": "2021-05-26 13:59:13.758955", "score": "1.0", "loss": "0.0", "code": "ean isEquivalent(ValueNode o) throws Standption { if (isSameNodeType(o)) { CastNode other = (CastNode) o;nt(otherrand); }false; }", "n_tokens": 129, "n_pass": [105, 9, 9]}
{"time": "2021-05-26 13:59:18.971366", "score": "1.0", "loss": "0.0", "code": "ean isEquivalent(ValueNode o) throws Standption { if (isSameNodeType(o)) { Caother = (CastNode) o;nt(otherrand); }false; }", "n_tokens": 122, "n_pass": [111, 11, 10]}
{"time": "2021-05-26 13:59:24.925543", "score": "1.0", "loss": "0.0", "code": "ean isEquivalent(ValueNode o) throws Standption { if (isSameNodeType(o)) {ther = (CastNode) o;nt(otherrand); }false; }", "n_tokens": 118, "n_pass": [163, 13, 11]}
{"time": "2021-05-26 13:59:27.512499", "score": "1.0", "loss": "0.0", "code": "ean isEquivalent(ValueNode o) throws Standption { if (isSameNodeType(o)) {ther = (Node) o;nt(otherrand); }false; }", "n_tokens": 114, "n_pass": [166, 14, 12]}
{"time": "2021-05-26 13:59:30.116614", "score": "0.9999", "loss": "0.0004", "code": "ean isEquivalent(ValueNode o) throws Standption { if (isSameNodeType(o)) {ther = (Node) o;nt(orand); }false; }", "n_tokens": 110, "n_pass": [170, 15, 13]}
{"time": "2021-05-26 13:59:32.704550", "score": "1.0", "loss": "0.0", "code": "ean isEquivalent(ValueNode o) throws Standption { if (isSameNodeType(o)) {ther = (Node) o;nt(o); }false; }", "n_tokens": 106, "n_pass": [171, 16, 14]}
{"time": "2021-05-26 13:59:35.306090", "score": "1.0", "loss": "0.0", "code": "ean isEquivalent(ValueNode o) throws Standption { if (isSameNodeType(o)) {ther = (Node) o;nt(o); }e; }", "n_tokens": 102, "n_pass": [173, 17, 15]}
{"time": "2021-05-26 13:59:39.924317", "score": "1.0", "loss": "0.0002", "code": "ean isEquivalent(VeNode o) throws Standption { if (isSameNodeType(o)) {ther = (Node) o;nt(o); }e; }", "n_tokens": 99, "n_pass": [181, 18, 16]}
{"time": "2021-05-26 13:59:42.559283", "score": "0.9984", "loss": "0.005", "code": "ean isEquivalent(Vde o) throws Standption { if (isSameNodeType(o)) {ther = (Node) o;nt(o); }e; }", "n_tokens": 96, "n_pass": [182, 19, 17]}
{"time": "2021-05-26 13:59:45.166834", "score": "0.9984", "loss": "0.005", "code": "ean isEquivalent(Vde o) throws Stption { if (isSameNodeType(o)) {ther = (Node) o;nt(o); }e; }", "n_tokens": 93, "n_pass": [188, 20, 18]}
{"time": "2021-05-26 13:59:47.740842", "score": "0.9975", "loss": "0.0073", "code": "ean isEquivalent(Vde o) throws Stn { if (isSameNodeType(o)) {ther = (Node) o;nt(o); }e; }", "n_tokens": 89, "n_pass": [189, 21, 19]}
{"time": "2021-05-26 14:00:00.532219", "score": "0.9976", "loss": "0.0066", "code": "ean isEquivalent(Vde o) throws St{ if (isSameNodeType(o)) {ther = (Node) o;nt(o); }e; }", "n_tokens": 87, "n_pass": [265, 25, 20]}
{"time": "2021-05-26 14:00:21.245604", "score": "0.9993", "loss": "0.0018", "code": "ean isEquivalent(Vde o) throws St{ if (isSameNodeType(o)) {er = (Node) o;nt(o); }e; }", "n_tokens": 85, "n_pass": [278, 33, 21]}
{"time": "2021-05-26 14:00:23.828356", "score": "0.9993", "loss": "0.0018", "code": "ean isEquivalent(Vde o) throws St{ if (isSameNodeType(o)) {er = (de) o;nt(o); }e; }", "n_tokens": 83, "n_pass": [282, 34, 22]}
{"time": "2021-05-26 14:00:26.400323", "score": "0.9993", "loss": "0.0018", "code": "ean isEquivalent(Vde o) throws St{ if (isSameNodeType(o)) {er = (de) nt(o); }e; }", "n_tokens": 81, "n_pass": [285, 35, 23]}
{"time": "2021-05-26 14:00:28.992056", "score": "0.9993", "loss": "0.0017", "code": "ean isEquivalent(Vde o) throws St{ if (isSameNodeType(o)) {er = (de) (o); }e; }", "n_tokens": 79, "n_pass": [286, 36, 24]}
{"time": "2021-05-26 14:00:31.571836", "score": "0.9993", "loss": "0.0017", "code": "ean isEquivalent(Vde o) throws St{ if (isSameNodeType(o)) {er = (de) (o); } }", "n_tokens": 77, "n_pass": [290, 37, 25]}
{"time": "2021-05-26 14:00:34.149783", "score": "0.9996", "loss": "0.001", "code": "an isEquivalent(Vde o) throws St{ if (isSameNodeType(o)) {er = (de) (o); } }", "n_tokens": 76, "n_pass": [292, 38, 26]}
{"time": "2021-05-26 14:00:36.802085", "score": "0.9995", "loss": "0.0013", "code": "n isEquivalent(Vde o) throws St{ if (isSameNodeType(o)) {er = (de) (o); } }", "n_tokens": 75, "n_pass": [293, 39, 27]}
{"time": "2021-05-26 14:00:43.747287", "score": "0.9992", "loss": "0.001", "code": "n isEquivalent(e o) throws St{ if (isSameNodeType(o)) {er = (de) (o); } }", "n_tokens": 73, "n_pass": [306, 40, 28]}
{"time": "2021-05-26 14:01:13.164983", "score": "0.9996", "loss": "0.0006", "code": "n isEquivalent(e o) throws t{ if (isSameNodeType(o)) {er = (de) (o); } }", "n_tokens": 72, "n_pass": [418, 48, 29]}
{"time": "2021-05-26 14:01:15.738231", "score": "0.9996", "loss": "0.0006", "code": "n isEquivalent(e o) throws t{if (isSameNodeType(o)) {er = (de) (o); } }", "n_tokens": 71, "n_pass": [420, 49, 30]}
{"time": "2021-05-26 14:01:18.318712", "score": "0.9996", "loss": "0.0006", "code": "n isEquivalent(e o) throws t{if(isSameNodeType(o)) {er = (de) (o); } }", "n_tokens": 70, "n_pass": [423, 50, 31]}
{"time": "2021-05-26 14:01:57.073365", "score": "0.9996", "loss": "0.0009", "code": "n isEquivalent(e o) throws t{if(isSameNodeType()) {er = (de) (o); } }", "n_tokens": 69, "n_pass": [440, 65, 32]}
{"time": "2021-05-26 14:01:59.645148", "score": "0.9996", "loss": "0.0009", "code": "n isEquivalent(e o) throws t{if(isSameNodeType()){er = (de) (o); } }", "n_tokens": 68, "n_pass": [443, 66, 33]}
{"time": "2021-05-26 14:02:02.232269", "score": "0.9995", "loss": "0.001", "code": "n isEquivalent(e o) throws t{if(isSameNodeType()){r = (de) (o); } }", "n_tokens": 67, "n_pass": [445, 67, 34]}
{"time": "2021-05-26 14:02:04.796895", "score": "0.9995", "loss": "0.001", "code": "n isEquivalent(e o) throws t{if(isSameNodeType()){r= (de) (o); } }", "n_tokens": 66, "n_pass": [447, 68, 35]}
{"time": "2021-05-26 14:02:07.361458", "score": "0.9995", "loss": "0.001", "code": "n isEquivalent(e o) throws t{if(isSameNodeType()){r=(de) (o); } }", "n_tokens": 65, "n_pass": [449, 69, 36]}
{"time": "2021-05-26 14:02:09.947119", "score": "0.9995", "loss": "0.001", "code": "n isEquivalent(e o) throws t{if(isSameNodeType()){r=(e) (o); } }", "n_tokens": 64, "n_pass": [451, 70, 37]}
{"time": "2021-05-26 14:02:12.513302", "score": "0.9995", "loss": "0.001", "code": "n isEquivalent(e o) throws t{if(isSameNodeType()){r=(e)(o); } }", "n_tokens": 63, "n_pass": [454, 71, 38]}
{"time": "2021-05-26 14:02:15.076575", "score": "0.9995", "loss": "0.001", "code": "n isEquivalent(e o) throws t{if(isSameNodeType()){r=(e)(o);} }", "n_tokens": 62, "n_pass": [459, 72, 39]}
{"time": "2021-05-26 14:02:17.638085", "score": "0.9995", "loss": "0.001", "code": "n isEquivalent(e o) throws t{if(isSameNodeType()){r=(e)(o);}}", "n_tokens": 61, "n_pass": [461, 73, 40]}
{"time": "2021-05-26 14:02:25.705035", "score": "0.9995", "loss": "0.001", "code": "n isEquivalent(e o)throws t{if(isSameNodeType()){r=(e)(o);}}", "n_tokens": 60, "n_pass": [482, 74, 41]}

Minimal simplified code:
n isEquivalent(e o)throws t{if(isSameNodeType()){r=(e)(o);}}

