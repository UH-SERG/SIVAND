
path = /scratch/rabin/data/code2vec/transforms/Methods/java-large/test/wso2-attic__product-emm/modules/mobile-agents/android/app-catalog/volley/src/main/java/com/android/volley/toolbox/PoolingByteArrayOutputStream_expand.java
method_name = expand
method_body = private void expand(int i) { if (count + i <= buf.length) { return; } byte[] newbuf = mPool.getBuf((count + i) * 2); System.arraycopy(buf, 0, newbuf, 0, count); mPool.returnBuf(buf); buf = newbuf; }
predict, score, loss = expand, 0.9995015859603882, 0.0007722970913164318

Trace of simplified code(s):
{"time": "2021-05-26 04:32:19.986070", "score": "0.9996", "loss": "0.0007", "code": "private void expand(int i) { if (count + i <= buf.length) { return; } byte[] newbuf = mPool.getBuf((count + i) * 2); System.arraycopy(buf, 0, newbuf, 0, count); mPool.returnBuf(buf); buf = newbuf; }", "n_tokens": 198, "n_pass": [1, 1, 1]}
{"time": "2021-05-26 04:32:22.758451", "score": "0.991", "loss": "0.0103", "code": "private void expand(int i) { if (count + i <= buf.length) { return; } byt((count + i) * 2); System.arraycopy(buf, 0, newbuf, 0, count); mPool.returnBuf(buf); buf = newbuf; }", "n_tokens": 173, "n_pass": [23, 2, 2]}
{"time": "2021-05-26 04:32:25.432409", "score": "0.9972", "loss": "0.0032", "code": "private void expand(int i) { if (count + i <= buf.length) { return; } byt.arraycopy(buf, 0, newbuf, 0, count); mPool.returnBuf(buf); buf = newbuf; }", "n_tokens": 148, "n_pass": [24, 3, 3]}
{"time": "2021-05-26 04:32:28.168473", "score": "0.9847", "loss": "0.0181", "code": "private void expand(int i) { if (count + i <= buf.length) { return; } byt.arraycopy(uf, 0, count); mPool.returnBuf(buf); buf = newbuf; }", "n_tokens": 136, "n_pass": [44, 4, 4]}
{"time": "2021-05-26 04:32:30.842118", "score": "0.521", "loss": "1.0387", "code": "private void expand(int i) { if (count + i <= buf.length) { return; } byt.arraycopy(uf, 0, count); mPool.returf = newbuf; }", "n_tokens": 123, "n_pass": [47, 5, 5]}
{"time": "2021-05-26 04:32:39.268974", "score": "0.5587", "loss": "0.997", "code": "privat expand(int i) { if (count + i <= buf.length) { return; } byt.arraycopy(uf, 0, count); mPool.returf = newbuf; }", "n_tokens": 117, "n_pass": [81, 8, 6]}
{"time": "2021-05-26 04:32:42.321818", "score": "0.3259", "loss": "2.0595", "code": "privat expand(int i) { if (cou <= buf.length) { return; } byt.arraycopy(uf, 0, count); mPool.returf = newbuf; }", "n_tokens": 111, "n_pass": [86, 9, 7]}
{"time": "2021-05-26 04:32:50.297975", "score": "0.3259", "loss": "2.0595", "code": "privat expand(int i) { if (cou <= buf.length) { ; } byt.arraycopy(uf, 0, count); mPool.returf = newbuf; }", "n_tokens": 105, "n_pass": [90, 12, 8]}
{"time": "2021-05-26 04:32:52.947570", "score": "0.3119", "loss": "2.1312", "code": "privat expand(int i) { if (cou <= buf.length) { ; } byycopy(uf, 0, count); mPool.returf = newbuf; }", "n_tokens": 99, "n_pass": [92, 13, 9]}
{"time": "2021-05-26 04:32:58.287606", "score": "0.8413", "loss": "0.337", "code": "privat expand(int i) { if (cou <= buf.length) { ; } byycopy(uf, 0, count); mPorf = newbuf; }", "n_tokens": 92, "n_pass": [97, 15, 10]}
{"time": "2021-05-26 04:33:09.805588", "score": "0.8683", "loss": "0.2407", "code": "privat expand(int i) { if (cou <= buf.length) { ; } byycopy( count); mPorf = newbuf; }", "n_tokens": 86, "n_pass": [110, 19, 11]}
{"time": "2021-05-26 04:33:12.460015", "score": "0.9172", "loss": "0.1288", "code": "privat expand(int i) { if (cou <= buf.length) { ; } byycopy(); mPorf = newbuf; }", "n_tokens": 80, "n_pass": [111, 20, 12]}
{"time": "2021-05-26 04:33:23.878247", "score": "0.5044", "loss": "0.7782", "code": "privat expand(int i) { if (cou <= buf.length) { ; } byycopy(); rf = newbuf; }", "n_tokens": 77, "n_pass": [152, 24, 13]}
{"time": "2021-05-26 04:33:38.049073", "score": "0.6115", "loss": "0.5563", "code": "privat expand(int i) { if (cou <=f.length) { ; } byycopy(); rf = newbuf; }", "n_tokens": 74, "n_pass": [168, 29, 14]}
{"time": "2021-05-26 04:33:46.061348", "score": "0.6115", "loss": "0.5563", "code": "privat expand(int i) { if (cou <=f.length) { ; }ycopy(); rf = newbuf; }", "n_tokens": 71, "n_pass": [174, 32, 15]}
{"time": "2021-05-26 04:33:48.702464", "score": "0.5197", "loss": "0.7059", "code": "privat expand(int i) { if (cou <=f.length) { ; }py(); rf = newbuf; }", "n_tokens": 68, "n_pass": [175, 33, 16]}
{"time": "2021-05-26 04:34:12.493268", "score": "0.5197", "loss": "0.7059", "code": "privat expand(int i) { if (cou <=f.length) { }py(); rf = newbuf; }", "n_tokens": 66, "n_pass": [242, 41, 17]}
{"time": "2021-05-26 04:34:15.218111", "score": "0.5585", "loss": "0.6267", "code": "privat expand(int i) { if (cou <=f.length) { }py; rf = newbuf; }", "n_tokens": 64, "n_pass": [245, 42, 18]}
{"time": "2021-05-26 04:34:17.926535", "score": "0.9498", "loss": "0.0645", "code": "privat expand(int i) { if (cou <=f.length) { }pyrf = newbuf; }", "n_tokens": 62, "n_pass": [246, 43, 19]}
{"time": "2021-05-26 04:34:20.575445", "score": "0.9044", "loss": "0.1101", "code": "privat expand(int i) { if (cou <=f.length) { }py = newbuf; }", "n_tokens": 60, "n_pass": [247, 44, 20]}
{"time": "2021-05-26 04:34:23.236819", "score": "0.6419", "loss": "0.8594", "code": "privat expand(int i) { if (cou <=f.length) { }py newbuf; }", "n_tokens": 58, "n_pass": [248, 45, 21]}
{"time": "2021-05-26 04:34:33.831597", "score": "0.6419", "loss": "0.8594", "code": "rivat expand(int i) { if (cou <=f.length) { }py newbuf; }", "n_tokens": 57, "n_pass": [254, 49, 22]}
{"time": "2021-05-26 04:34:36.502101", "score": "0.6419", "loss": "0.8594", "code": "ivat expand(int i) { if (cou <=f.length) { }py newbuf; }", "n_tokens": 56, "n_pass": [255, 50, 23]}
{"time": "2021-05-26 04:34:44.459092", "score": "0.6419", "loss": "0.8594", "code": "ivt expand(int i) { if (cou <=f.length) { }py newbuf; }", "n_tokens": 55, "n_pass": [258, 53, 24]}
{"time": "2021-05-26 04:34:47.142651", "score": "0.7513", "loss": "0.4993", "code": "iv expand(int i) { if (cou <=f.length) { }py newbuf; }", "n_tokens": 54, "n_pass": [259, 54, 25]}
{"time": "2021-05-26 04:34:55.299396", "score": "0.5324", "loss": "0.7634", "code": "iv expand(it i) { if (cou <=f.length) { }py newbuf; }", "n_tokens": 53, "n_pass": [269, 56, 26]}
{"time": "2021-05-26 04:34:57.963064", "score": "0.6472", "loss": "0.6059", "code": "iv expand(i i) { if (cou <=f.length) { }py newbuf; }", "n_tokens": 52, "n_pass": [270, 57, 27]}
{"time": "2021-05-26 04:35:00.650189", "score": "0.5883", "loss": "0.6189", "code": "iv expand(i i) { if (c <=f.length) { }py newbuf; }", "n_tokens": 50, "n_pass": [278, 58, 28]}
{"time": "2021-05-26 04:35:05.927184", "score": "0.558", "loss": "0.7124", "code": "iv expand(i i) { if (c <=fength) { }py newbuf; }", "n_tokens": 48, "n_pass": [281, 60, 29]}
{"time": "2021-05-26 04:35:08.569662", "score": "0.558", "loss": "0.7124", "code": "iv expand(i i) { if (c <=fgth) { }py newbuf; }", "n_tokens": 46, "n_pass": [282, 61, 30]}
{"time": "2021-05-26 04:35:11.261026", "score": "0.827", "loss": "0.3028", "code": "iv expand(i i) { if (c <=fh) { }py newbuf; }", "n_tokens": 44, "n_pass": [283, 62, 31]}
{"time": "2021-05-26 04:35:21.829374", "score": "0.2471", "loss": "1.9794", "code": "iv expand(i i) { if (c <=fh) { }py newf; }", "n_tokens": 42, "n_pass": [290, 66, 32]}
{"time": "2021-05-26 04:35:43.214254", "score": "0.2025", "loss": "2.3474", "code": "iv expand(i i) { if (c <=fh) { }py nf; }", "n_tokens": 40, "n_pass": [318, 73, 33]}
{"time": "2021-05-26 04:36:08.032245", "score": "0.2025", "loss": "2.3474", "code": "iv expand(i i) { if (c <=fh) { }py nf;}", "n_tokens": 39, "n_pass": [373, 80, 34]}
{"time": "2021-05-26 04:36:18.844718", "score": "0.2025", "loss": "2.3474", "code": "iv expand(i i){ if (c <=fh) { }py nf;}", "n_tokens": 38, "n_pass": [388, 83, 35]}
{"time": "2021-05-26 04:36:21.490570", "score": "0.2025", "loss": "2.3474", "code": "iv expand(i i){if (c <=fh) { }py nf;}", "n_tokens": 37, "n_pass": [390, 84, 36]}
{"time": "2021-05-26 04:36:24.124785", "score": "0.2025", "loss": "2.3474", "code": "iv expand(i i){if(c <=fh) { }py nf;}", "n_tokens": 36, "n_pass": [393, 85, 37]}
{"time": "2021-05-26 04:36:26.762306", "score": "0.2025", "loss": "2.3474", "code": "iv expand(i i){if(c<=fh) { }py nf;}", "n_tokens": 35, "n_pass": [396, 86, 38]}
{"time": "2021-05-26 04:36:40.059751", "score": "0.2025", "loss": "2.3474", "code": "iv expand(i i){if(c<=fh){ }py nf;}", "n_tokens": 34, "n_pass": [402, 91, 39]}
{"time": "2021-05-26 04:36:42.700636", "score": "0.2025", "loss": "2.3474", "code": "iv expand(i i){if(c<=fh){}py nf;}", "n_tokens": 33, "n_pass": [404, 92, 40]}

Minimal simplified code:
iv expand(i i){if(c<=fh){}py nf;}

