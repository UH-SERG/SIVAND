
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/BoBoMEe__Android-Demos/Android_WebView_Reference/videoenabledwebview/src/main/java/com/bobomee/android/videoenabledwebview/VideoEnabledWebChromeClient_onError.java
method_name = onError
method_body = @Override public boolean onError(MediaPlayer mp, int what, int extra) { if (null != mOnErrorListener) { mOnErrorListener.onError(mp, what, extra); } return false; }
predict, score, loss = onError, 0.9969663023948669, 0.003162028733640909

Trace of simplified code(s):
{"time": "2021-02-21 22:12:04.972087", "score": "0.997", "loss": "0.0032", "code": "@Override public boolean onError(MediaPlayer mp, int what, int extra) { if (null != mOnErrorListener) { mOnErrorListener.onError(mp, what, extra); } return false; }", "n_tokens": 164, "n_pass": [1, 1, 1]}
{"time": "2021-02-21 22:12:07.639271", "score": "0.9971", "loss": "0.0031", "code": "lean onError(MediaPlayer mp, int what, int extra) { if (null != mOnErrorListener) { mOnErrorListener.onError(mp, what, extra); } return false; }", "n_tokens": 144, "n_pass": [20, 2, 2]}
{"time": "2021-02-21 22:12:10.290309", "score": "0.995", "loss": "0.0053", "code": "lean onError(MediaPlnt extra) { if (null != mOnErrorListener) { mOnErrorListener.onError(mp, what, extra); } return false; }", "n_tokens": 124, "n_pass": [22, 3, 3]}
{"time": "2021-02-21 22:12:12.923929", "score": "0.9991", "loss": "0.001", "code": "lean onError(MediaPlnt extra) { if (nullorListener) { mOnErrorListener.onError(mp, what, extra); } return false; }", "n_tokens": 114, "n_pass": [43, 4, 4]}
{"time": "2021-02-21 22:12:15.584725", "score": "0.9989", "loss": "0.0013", "code": "lean onError(MediaPlnt extra) { if (null) { mOnErrorListener.onError(mp, what, extra); } return false; }", "n_tokens": 104, "n_pass": [44, 5, 5]}
{"time": "2021-02-21 22:12:18.236288", "score": "0.9995", "loss": "0.0006", "code": "lean onError(MediaPlnt extra) { if (null) { mOnErr.onError(mp, what, extra); } return false; }", "n_tokens": 94, "n_pass": [46, 6, 6]}
{"time": "2021-02-21 22:12:20.903793", "score": "0.9996", "loss": "0.0009", "code": "lean onError(MediaPlnt extra) { if (null) { mOnErr.onError(mpra); } return false; }", "n_tokens": 83, "n_pass": [48, 7, 7]}
{"time": "2021-02-21 22:12:23.960524", "score": "0.9951", "loss": "0.0084", "code": "lean onError(MediaPlnt extra) { if (null) { mOnErr.onError(mpra); } retlse; }", "n_tokens": 77, "n_pass": [75, 8, 8]}
{"time": "2021-02-21 22:12:30.053807", "score": "0.9958", "loss": "0.0071", "code": "lean onError(MediaPlnt extra) { if (null) { m.onError(mpra); } retlse; }", "n_tokens": 72, "n_pass": [86, 10, 9]}
{"time": "2021-02-21 22:12:44.094530", "score": "0.9945", "loss": "0.0089", "code": "lean onError(MediaPlnt extra) { if (null) { m.onError(a); } retlse; }", "n_tokens": 69, "n_pass": [133, 15, 10]}
{"time": "2021-02-21 22:12:46.752389", "score": "0.9949", "loss": "0.0103", "code": "lean onError(MediaPlnt extra) { if (null) { m.onError(a); } lse; }", "n_tokens": 66, "n_pass": [136, 16, 11]}
{"time": "2021-02-21 22:12:49.412167", "score": "0.9946", "loss": "0.0086", "code": "lean onError(MediaPlnt extra) { if (null) { m.onError(a); } ; }", "n_tokens": 63, "n_pass": [137, 17, 12]}
{"time": "2021-02-21 22:12:52.062804", "score": "0.993", "loss": "0.0093", "code": "an onError(MediaPlnt extra) { if (null) { m.onError(a); } ; }", "n_tokens": 61, "n_pass": [139, 18, 13]}
{"time": "2021-02-21 22:12:56.711049", "score": "0.993", "loss": "0.0093", "code": "an onError(MiaPlnt extra) { if (null) { m.onError(a); } ; }", "n_tokens": 59, "n_pass": [146, 19, 14]}
{"time": "2021-02-21 22:12:59.365802", "score": "0.993", "loss": "0.0093", "code": "an onError(MPlnt extra) { if (null) { m.onError(a); } ; }", "n_tokens": 57, "n_pass": [147, 20, 15]}
{"time": "2021-02-21 22:13:02.007369", "score": "0.9932", "loss": "0.0207", "code": "an onError(Mnt extra) { if (null) { m.onError(a); } ; }", "n_tokens": 55, "n_pass": [148, 21, 16]}
{"time": "2021-02-21 22:13:04.655752", "score": "0.9882", "loss": "0.016", "code": "an onError(M extra) { if (null) { m.onError(a); } ; }", "n_tokens": 53, "n_pass": [149, 22, 17]}
{"time": "2021-02-21 22:13:09.937579", "score": "0.9797", "loss": "0.0267", "code": "an onError(M extra) { if (l) { m.onError(a); } ; }", "n_tokens": 50, "n_pass": [155, 24, 18]}
{"time": "2021-02-21 22:13:24.805747", "score": "0.9797", "loss": "0.0267", "code": "an onError(M extra) { if(l) { m.onError(a); } ; }", "n_tokens": 49, "n_pass": [215, 28, 19]}
{"time": "2021-02-21 22:13:38.081239", "score": "0.9797", "loss": "0.0267", "code": "an onError(M extra) { if(l) { m.onError(a); } }", "n_tokens": 47, "n_pass": [227, 33, 20]}
{"time": "2021-02-21 22:13:40.738029", "score": "0.918", "loss": "0.1564", "code": "n onError(M extra) { if(l) { m.onError(a); } }", "n_tokens": 46, "n_pass": [229, 34, 21]}
{"time": "2021-02-21 22:14:00.528405", "score": "0.918", "loss": "0.1564", "code": "n onError(M extra){ if(l) { m.onError(a); } }", "n_tokens": 45, "n_pass": [248, 40, 22]}
{"time": "2021-02-21 22:14:03.210869", "score": "0.918", "loss": "0.1564", "code": "n onError(M extra){if(l) { m.onError(a); } }", "n_tokens": 44, "n_pass": [250, 41, 23]}
{"time": "2021-02-21 22:14:35.748135", "score": "0.918", "loss": "0.1564", "code": "n onError(M extra){if(l) {m.onError(a); } }", "n_tokens": 43, "n_pass": [307, 51, 24]}
{"time": "2021-02-21 22:14:44.101784", "score": "0.9977", "loss": "0.0035", "code": "n onError(M extra){if(l) {m.oError(a); } }", "n_tokens": 42, "n_pass": [310, 54, 25]}
{"time": "2021-02-21 22:15:00.615333", "score": "0.9989", "loss": "0.0014", "code": "n onError(M extra){if(l) {m.oError(); } }", "n_tokens": 41, "n_pass": [317, 60, 26]}
{"time": "2021-02-21 22:15:03.319206", "score": "0.9989", "loss": "0.0014", "code": "n onError(M extra){if(l) {m.oError();} }", "n_tokens": 40, "n_pass": [320, 61, 27]}
{"time": "2021-02-21 22:15:06.039853", "score": "0.9989", "loss": "0.0014", "code": "n onError(M extra){if(l) {m.oError();}}", "n_tokens": 39, "n_pass": [322, 62, 28]}
{"time": "2021-02-21 22:15:12.318533", "score": "0.7288", "loss": "0.405", "code": "n onError(M xtra){if(l) {m.oError();}}", "n_tokens": 38, "n_pass": [336, 63, 29]}
{"time": "2021-02-21 22:15:14.972450", "score": "0.5732", "loss": "0.9048", "code": "n onError(M tra){if(l) {m.oError();}}", "n_tokens": 37, "n_pass": [337, 64, 30]}
{"time": "2021-02-21 22:15:17.661037", "score": "0.8229", "loss": "0.5894", "code": "n onError(M ra){if(l) {m.oError();}}", "n_tokens": 36, "n_pass": [338, 65, 31]}
{"time": "2021-02-21 22:15:20.343368", "score": "0.8684", "loss": "0.214", "code": "n onError(M a){if(l) {m.oError();}}", "n_tokens": 35, "n_pass": [339, 66, 32]}
{"time": "2021-02-21 22:15:22.997854", "score": "0.8684", "loss": "0.214", "code": "n onError(M a){if(l){m.oError();}}", "n_tokens": 34, "n_pass": [348, 67, 33]}

Minimal simplified code:
n onError(M a){if(l){m.oError();}}

