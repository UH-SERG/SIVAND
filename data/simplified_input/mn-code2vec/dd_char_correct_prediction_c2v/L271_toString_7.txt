
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/58code__Oceanus/oceanus-all/oceanus-exchange/oceanus-exchange-sqlparser/src/main/java/com/bj58/sql/parser/RevokeNode_toString.java
method_name = toString
method_body = public String toString() { StringBuffer sb = new StringBuffer(); for (Iterator<String> it = grantees.iterator(); it.hasNext(); ) { if (sb.length() > 0) sb.append(","); sb.append(it.next()); } return super.toString() + privileges.toString() + "TO: \n" + sb.toString() + "\n"; }
predict, score, loss = toString, 0.9936827421188354, 0.007818453013896942

Trace of simplified code(s):
{"time": "2021-02-24 18:33:45.684401", "score": "0.9868", "loss": "0.0165", "code": "public String toString() { StringBuffer sb = new StringBuffer(); for (Iterator<String> it = grantees.iterator(); it.hasNext(); ) { if (sb.length() > 0) sb.append(\",\"); sb.append(it.next()); } return super.toString() + privileges.toString() + \"TO: \\n\" + sb.toString() + \"\\n\"; }", "n_tokens": 276, "n_pass": [1, 1, 1]}
{"time": "2021-02-24 18:33:48.854392", "score": "0.9858", "loss": "0.0187", "code": "public String toString() { StringBringBuffer(); for (Iterator<String> it = grantees.iterator(); it.hasNext(); ) { if (sb.length() > 0) sb.append(\",\"); sb.append(it.next()); } return super.toString() + privileges.toString() + \"TO: \\n\" + sb.toString() + \"\\n\"; }", "n_tokens": 259, "n_pass": [46, 2, 2]}
{"time": "2021-02-24 18:33:51.533996", "score": "0.9907", "loss": "0.0268", "code": "public String toString() { StringBringBuffer(); for (Iterator<Stringterator(); it.hasNext(); ) { if (sb.length() > 0) sb.append(\",\"); sb.append(it.next()); } return super.toString() + privileges.toString() + \"TO: \\n\" + sb.toString() + \"\\n\"; }", "n_tokens": 242, "n_pass": [48, 3, 3]}
{"time": "2021-02-24 18:33:54.230638", "score": "0.9948", "loss": "0.0145", "code": "public String toString() { StringBringBuffer(); for (Iterator<Stringterator(); it.hasNext(); ) { if (sb.length() > 0) s.append(it.next()); } return super.toString() + privileges.toString() + \"TO: \\n\" + sb.toString() + \"\\n\"; }", "n_tokens": 225, "n_pass": [52, 4, 4]}
{"time": "2021-02-24 18:33:56.918017", "score": "0.9269", "loss": "0.2448", "code": "public String toString() { StringBringBuffer(); for (Iterator<Stringterator(); it.hasNext(); ) { if (sb.length() > 0) s.append(it.next()); } return superileges.toString() + \"TO: \\n\" + sb.toString() + \"\\n\"; }", "n_tokens": 207, "n_pass": [55, 5, 5]}
{"time": "2021-02-24 18:34:00.046281", "score": "0.997", "loss": "0.0099", "code": "public String toString() { StringBringBuffer(); for (Iterator<Stringterator(); it.hasNext(); ) { if (sb.length() > 0) s.append(it.next()); } return superString() + \"TO: \\n\" + sb.toString() + \"\\n\"; }", "n_tokens": 198, "n_pass": [92, 6, 6]}
{"time": "2021-02-24 18:34:02.724631", "score": "0.9901", "loss": "0.0759", "code": "public String toString() { StringBringBuffer(); for (Iterator<Stringterator(); it.hasNext(); ) { if (sb.length() > 0) s.append(it.next()); } return superString() + \"TO: \\n\" + sb.to+ \"\\n\"; }", "n_tokens": 189, "n_pass": [95, 7, 7]}
{"time": "2021-02-24 18:34:08.512618", "score": "0.9901", "loss": "0.0759", "code": "public String toString() { Strinffer(); for (Iterator<Stringterator(); it.hasNext(); ) { if (sb.length() > 0) s.append(it.next()); } return superString() + \"TO: \\n\" + sb.to+ \"\\n\"; }", "n_tokens": 181, "n_pass": [101, 9, 8]}
{"time": "2021-02-24 18:34:11.201394", "score": "0.9926", "loss": "0.0504", "code": "public String toString() { Strinffer(); for (Iteringterator(); it.hasNext(); ) { if (sb.length() > 0) s.append(it.next()); } return superString() + \"TO: \\n\" + sb.to+ \"\\n\"; }", "n_tokens": 173, "n_pass": [104, 10, 9]}
{"time": "2021-02-24 18:34:13.879811", "score": "0.9926", "loss": "0.0504", "code": "public String toString() { Strinffer(); for (Itetor(); it.hasNext(); ) { if (sb.length() > 0) s.append(it.next()); } return superString() + \"TO: \\n\" + sb.to+ \"\\n\"; }", "n_tokens": 165, "n_pass": [105, 11, 10]}
{"time": "2021-02-24 18:34:16.573959", "score": "0.9891", "loss": "0.0805", "code": "public String toString() { Strinffer(); for (Itetor(); it.hasNext(); ) { if (sb.length() > 0)(it.next()); } return superString() + \"TO: \\n\" + sb.to+ \"\\n\"; }", "n_tokens": 156, "n_pass": [111, 12, 11]}
{"time": "2021-02-24 18:34:22.771635", "score": "0.9901", "loss": "0.0517", "code": "public String toString() { Strinffer(); for (Itetor(); it.hasNext(); ) { if (sb.length())(it.next()); } return superString() + \"TO: \\n\" + sb.to+ \"\\n\"; }", "n_tokens": 152, "n_pass": [166, 14, 12]}
{"time": "2021-02-24 18:34:25.444011", "score": "0.9927", "loss": "0.0438", "code": "public String toString() { Strinffer(); for (Itetor(); it.hasNext(); ) { if (sb.length().next()); } return superString() + \"TO: \\n\" + sb.to+ \"\\n\"; }", "n_tokens": 148, "n_pass": [167, 15, 13]}
{"time": "2021-02-24 18:34:28.528358", "score": "0.4014", "loss": "1.9104", "code": "public String toString() { Strinffer(); for (Itetor(); it.hasNext(); ) { if (sb.length().next()); } return string() + \"TO: \\n\" + sb.to+ \"\\n\"; }", "n_tokens": 143, "n_pass": [172, 16, 14]}
{"time": "2021-02-24 18:34:31.197514", "score": "0.343", "loss": "1.9537", "code": "public String toString() { Strinffer(); for (Itetor(); it.hasNext(); ) { if (sb.length().next()); } return s() + \"TO: \\n\" + sb.to+ \"\\n\"; }", "n_tokens": 138, "n_pass": [173, 17, 15]}
{"time": "2021-02-24 18:34:33.878689", "score": "0.8301", "loss": "0.5715", "code": "public String toString() { Strinffer(); for (Itetor(); it.hasNext(); ) { if (sb.length().next()); } return s() + \"TO: \\n\" +o+ \"\\n\"; }", "n_tokens": 133, "n_pass": [177, 18, 16]}
{"time": "2021-02-24 18:34:42.763731", "score": "0.8301", "loss": "0.5715", "code": "public String toString() { Sffer(); for (Itetor(); it.hasNext(); ) { if (sb.length().next()); } return s() + \"TO: \\n\" +o+ \"\\n\"; }", "n_tokens": 129, "n_pass": [187, 21, 17]}
{"time": "2021-02-24 18:34:45.454260", "score": "0.8579", "loss": "0.4847", "code": "public String toString() { S(); for (Itetor(); it.hasNext(); ) { if (sb.length().next()); } return s() + \"TO: \\n\" +o+ \"\\n\"; }", "n_tokens": 125, "n_pass": [188, 22, 18]}
{"time": "2021-02-24 18:34:48.144587", "score": "0.805", "loss": "0.7259", "code": "public String toString() { S(); for (Itetor(); isNext(); ) { if (sb.length().next()); } return s() + \"TO: \\n\" +o+ \"\\n\"; }", "n_tokens": 121, "n_pass": [194, 23, 19]}
{"time": "2021-02-24 18:34:50.821756", "score": "0.8106", "loss": "0.7356", "code": "public String toString() { S(); for (Itetor(); it(); ) { if (sb.length().next()); } return s() + \"TO: \\n\" +o+ \"\\n\"; }", "n_tokens": 117, "n_pass": [195, 24, 20]}
{"time": "2021-02-24 18:34:53.504824", "score": "0.773", "loss": "1.1893", "code": "public String toString() { S(); for (Itetor(); it(); ) {(sb.length().next()); } return s() + \"TO: \\n\" +o+ \"\\n\"; }", "n_tokens": 113, "n_pass": [198, 25, 21]}
{"time": "2021-02-24 18:34:56.166689", "score": "0.7841", "loss": "1.1584", "code": "public String toString() { S(); for (Itetor(); it(); ) {(sb.th().next()); } return s() + \"TO: \\n\" +o+ \"\\n\"; }", "n_tokens": 109, "n_pass": [200, 26, 22]}
{"time": "2021-02-24 18:35:06.249503", "score": "0.7877", "loss": "1.1452", "code": "public String toString() { S(); for (Itetor(); it(); ) {(sb.th.next()); } return s() + \"TO: \\n\" +o+ \"\\n\"; }", "n_tokens": 107, "n_pass": [277, 29, 23]}
{"time": "2021-02-24 18:35:08.925851", "score": "0.7769", "loss": "1.1224", "code": "public String toString() { S(); for (Itetor(); it(); ) {(sb.thext()); } return s() + \"TO: \\n\" +o+ \"\\n\"; }", "n_tokens": 105, "n_pass": [278, 30, 24]}
{"time": "2021-02-24 18:35:11.590684", "score": "0.7769", "loss": "1.1224", "code": "public String toString() { S(); for (Itetor(); it(); ) {(sb.tht()); } return s() + \"TO: \\n\" +o+ \"\\n\"; }", "n_tokens": 103, "n_pass": [279, 31, 25]}
{"time": "2021-02-24 18:35:14.273826", "score": "0.838", "loss": "0.4282", "code": "public String toString() { S(); for (Itetor(); it(); ) {(sb.tht()); } return s() + \"T\\n\" +o+ \"\\n\"; }", "n_tokens": 100, "n_pass": [290, 32, 26]}
{"time": "2021-02-24 18:35:16.948205", "score": "0.6687", "loss": "1.0018", "code": "public String toString() { S(); for (Itetor(); it(); ) {(sb.tht()); } return s() + \"T\\n\"+ \"\\n\"; }", "n_tokens": 97, "n_pass": [292, 33, 27]}
{"time": "2021-02-24 18:35:29.770932", "score": "0.6309", "loss": "1.0245", "code": "public String toString() { S; for (Itetor(); it(); ) {(sb.tht()); } return s() + \"T\\n\"+ \"\\n\"; }", "n_tokens": 95, "n_pass": [310, 37, 28]}
{"time": "2021-02-24 18:35:32.439855", "score": "0.6191", "loss": "1.2107", "code": "public String toString() { S; for (Itor(); it(); ) {(sb.tht()); } return s() + \"T\\n\"+ \"\\n\"; }", "n_tokens": 93, "n_pass": [315, 38, 29]}
{"time": "2021-02-24 18:35:35.100367", "score": "0.6452", "loss": "0.9956", "code": "public String toString() { S; for (Ir(); it(); ) {(sb.tht()); } return s() + \"T\\n\"+ \"\\n\"; }", "n_tokens": 91, "n_pass": [316, 39, 30]}
{"time": "2021-02-24 18:35:37.771715", "score": "0.632", "loss": "1.0166", "code": "public String toString() { S; for (Ir();t(); ) {(sb.tht()); } return s() + \"T\\n\"+ \"\\n\"; }", "n_tokens": 89, "n_pass": [319, 40, 31]}
{"time": "2021-02-24 18:35:40.550717", "score": "0.6106", "loss": "1.043", "code": "public String toString() { S; for (Ir();t(); ) {(stht()); } return s() + \"T\\n\"+ \"\\n\"; }", "n_tokens": 87, "n_pass": [325, 41, 32]}
{"time": "2021-02-24 18:35:43.210400", "score": "0.621", "loss": "1.0484", "code": "public String toString() { S; for (Ir();t(); ) {(st()); } return s() + \"T\\n\"+ \"\\n\"; }", "n_tokens": 85, "n_pass": [326, 42, 33]}
{"time": "2021-02-24 18:35:56.043763", "score": "0.5919", "loss": "1.0836", "code": "public String toString() {; for (Ir();t(); ) {(st()); } return s() + \"T\\n\"+ \"\\n\"; }", "n_tokens": 83, "n_pass": [354, 46, 34]}
{"time": "2021-02-24 18:35:58.689199", "score": "0.5919", "loss": "1.0836", "code": "public String toString() {for (Ir();t(); ) {(st()); } return s() + \"T\\n\"+ \"\\n\"; }", "n_tokens": 81, "n_pass": [355, 47, 35]}
{"time": "2021-02-24 18:36:16.905597", "score": "0.5919", "loss": "1.0836", "code": "public String toString() {for(Ir();t(); ) {(st()); } return s() + \"T\\n\"+ \"\\n\"; }", "n_tokens": 80, "n_pass": [470, 51, 36]}
{"time": "2021-02-24 18:36:19.548358", "score": "0.5706", "loss": "1.1331", "code": "public String toString() {for(r();t(); ) {(st()); } return s() + \"T\\n\"+ \"\\n\"; }", "n_tokens": 79, "n_pass": [472, 52, 37]}
{"time": "2021-02-24 18:36:22.199957", "score": "0.5706", "loss": "1.1331", "code": "public String toString() {for(r();t();) {(st()); } return s() + \"T\\n\"+ \"\\n\"; }", "n_tokens": 78, "n_pass": [481, 53, 38]}
{"time": "2021-02-24 18:36:24.846798", "score": "0.5706", "loss": "1.1331", "code": "public String toString() {for(r();t();){(st()); } return s() + \"T\\n\"+ \"\\n\"; }", "n_tokens": 77, "n_pass": [483, 54, 39]}
{"time": "2021-02-24 18:36:27.497441", "score": "0.5567", "loss": "1.1257", "code": "public String toString() {for(r();t();){(t()); } return s() + \"T\\n\"+ \"\\n\"; }", "n_tokens": 76, "n_pass": [486, 55, 40]}
{"time": "2021-02-24 18:36:30.154665", "score": "0.5567", "loss": "1.1257", "code": "public String toString() {for(r();t();){(t());} return s() + \"T\\n\"+ \"\\n\"; }", "n_tokens": 75, "n_pass": [492, 56, 41]}
{"time": "2021-02-24 18:36:32.805573", "score": "0.5567", "loss": "1.1257", "code": "public String toString() {for(r();t();){(t());}return s() + \"T\\n\"+ \"\\n\"; }", "n_tokens": 74, "n_pass": [494, 57, 42]}
{"time": "2021-02-24 18:36:35.884980", "score": "0.5567", "loss": "1.1257", "code": "public String toString() {for(r();t();){(t());}return s()+ \"T\\n\"+ \"\\n\"; }", "n_tokens": 73, "n_pass": [505, 58, 43]}
{"time": "2021-02-24 18:36:38.545800", "score": "0.5567", "loss": "1.1257", "code": "public String toString() {for(r();t();){(t());}return s()+\"T\\n\"+ \"\\n\"; }", "n_tokens": 72, "n_pass": [507, 59, 44]}
{"time": "2021-02-24 18:36:41.199973", "score": "0.5567", "loss": "1.1257", "code": "public String toString() {for(r();t();){(t());}return s()+\"T\"+ \"\\n\"; }", "n_tokens": 70, "n_pass": [509, 60, 45]}
{"time": "2021-02-24 18:36:43.875979", "score": "0.5567", "loss": "1.1257", "code": "public String toString() {for(r();t();){(t());}return s()+\"T\"+ \"\"; }", "n_tokens": 68, "n_pass": [512, 61, 46]}
{"time": "2021-02-24 18:37:09.011883", "score": "0.5567", "loss": "1.1257", "code": "public String toString(){for(r();t();){(t());}return s()+\"T\"+ \"\"; }", "n_tokens": 67, "n_pass": [539, 69, 47]}
{"time": "2021-02-24 18:37:38.327082", "score": "0.5567", "loss": "1.1257", "code": "public String toString(){for(r();t();){(t());}return s()+\"T\"+\"\"; }", "n_tokens": 66, "n_pass": [616, 78, 48]}
{"time": "2021-02-24 18:37:40.974956", "score": "0.5567", "loss": "1.1257", "code": "public String toString(){for(r();t();){(t());}return s()+\"T\"+\"\";}", "n_tokens": 65, "n_pass": [619, 79, 49]}

Minimal simplified code:
public String toString(){for(r();t();){(t());}return s()+"T"+"";}

