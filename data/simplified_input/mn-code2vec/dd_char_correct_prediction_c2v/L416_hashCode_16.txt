
path = /scratch/rabin/data/code2vec/transforms/Methods/java-large/test/codefollower__Tomcat-Research/java/org/apache/tomcat/util/descriptor/web/LoginConfig_hashCode.java
method_name = hashCode
method_body = @Override public int hashCode() { final int prime = 31; int result = 1; result = prime * result + ((authMethod == null) ? 0 : authMethod.hashCode()); result = prime * result + ((errorPage == null) ? 0 : errorPage.hashCode()); result = prime * result + ((loginPage == null) ? 0 : loginPage.hashCode()); result = prime * result + ((realmName == null) ? 0 : realmName.hashCode()); return result; }
predict, score, loss = hashCode, 0.9999654293060303, 4.51792984677013e-05

Trace of simplified code(s):
{"time": "2021-05-26 08:35:43.828356", "score": "1.0", "loss": "0.0", "code": "@Override public int hashCode() { final int prime = 31; int result = 1; result = prime * result + ((authMethod == null) ? 0 : authMethod.hashCode()); result = prime * result + ((errorPage == null) ? 0 : errorPage.hashCode()); result = prime * result + ((loginPage == null) ? 0 : loginPage.hashCode()); result = prime * result + ((realmName == null) ? 0 : realmName.hashCode()); return result; }", "n_tokens": 394, "n_pass": [1, 1, 1]}
{"time": "2021-05-26 08:35:46.531400", "score": "1.0", "loss": "0.0", "code": "@Override public int hashCode() { final int prime = 31; int result = 1; result = prime * result + ((authMethod == null) ? 0 : authMethod.hashCode() ? 0 : errorPage.hashCode()); result = prime * result + ((loginPage == null) ? 0 : loginPage.hashCode()); result = prime * result + ((realmName == null) ? 0 : realmName.hashCode()); return result; }", "n_tokens": 345, "n_pass": [23, 2, 2]}
{"time": "2021-05-26 08:35:49.282209", "score": "1.0", "loss": "0.0", "code": "@Override public int hashCode() { final int prime = 31; int result = 1; result = prime * result + ((authMethod == null) ? 0 : authMethod.hashCodede()); result = prime * result + ((loginPage == null) ? 0 : loginPage.hashCode()); result = prime * result + ((realmName == null) ? 0 : realmName.hashCode()); return result; }", "n_tokens": 320, "n_pass": [44, 3, 3]}
{"time": "2021-05-26 08:35:52.399900", "score": "0.9999", "loss": "0.0001", "code": "@Override public int hashCode() { final int primresult = prime * result + ((authMethod == null) ? 0 : authMethod.hashCodede()); result = prime * result + ((loginPage == null) ? 0 : loginPage.hashCode()); result = prime * result + ((realmName == null) ? 0 : realmName.hashCode()); return result; }", "n_tokens": 296, "n_pass": [54, 4, 4]}
{"time": "2021-05-26 08:35:55.552163", "score": "1.0", "loss": "0.0001", "code": "@Override public int hashCode() { final int primresult = pri+ ((authMethod == null) ? 0 : authMethod.hashCodede()); result = prime * result + ((loginPage == null) ? 0 : loginPage.hashCode()); result = prime * result + ((realmName == null) ? 0 : realmName.hashCode()); return result; }", "n_tokens": 284, "n_pass": [92, 5, 5]}
{"time": "2021-05-26 08:35:58.228030", "score": "1.0", "loss": "0.0001", "code": "@Override public int hashCode() { final int primresult = pri+ ((authMethod == null) ? 0 : authMeede()); result = prime * result + ((loginPage == null) ? 0 : loginPage.hashCode()); result = prime * result + ((realmName == null) ? 0 : realmName.hashCode()); return result; }", "n_tokens": 272, "n_pass": [96, 6, 6]}
{"time": "2021-05-26 08:36:00.948222", "score": "1.0", "loss": "0.0", "code": "@Override public int hashCode() { final int primresult = pri+ ((authMethod == null) ? 0 : authMeede()); result = prime * result + (( null) ? 0 : loginPage.hashCode()); result = prime * result + ((realmName == null) ? 0 : realmName.hashCode()); return result; }", "n_tokens": 260, "n_pass": [100, 7, 7]}
{"time": "2021-05-26 08:36:03.660358", "score": "1.0", "loss": "0.0", "code": "@Override public int hashCode() { final int primresult = pri+ ((authMethod == null) ? 0 : authMeede()); result = prime * result + (( null) ? 0 :ashCode()); result = prime * result + ((realmName == null) ? 0 : realmName.hashCode()); return result; }", "n_tokens": 248, "n_pass": [102, 8, 8]}
{"time": "2021-05-26 08:36:06.721807", "score": "1.0", "loss": "0.0", "code": "@Override public int hashCode() { final int primresult = pri+ ((authMethod == null) ? 0 : authMeede()); result = prime * result + (( null) ? 0 :ashCode()); result = prime * result + ((realmName == null) ? 0 : hCode()); return result; }", "n_tokens": 235, "n_pass": [108, 9, 9]}
{"time": "2021-05-26 08:36:09.898748", "score": "1.0", "loss": "0.0001", "code": "@Override public int hashCode() { firesult = pri+ ((authMethod == null) ? 0 : authMeede()); result = prime * result + (( null) ? 0 :ashCode()); result = prime * result + ((realmName == null) ? 0 : hCode()); return result; }", "n_tokens": 223, "n_pass": [114, 10, 10]}
{"time": "2021-05-26 08:36:13.855633", "score": "1.0", "loss": "0.0", "code": "@Override public int hashCode() { fi = pri+ ((authMethod == null) ? 0 : authMeede()); result = prime * result + (( null) ? 0 :ashCode()); result = prime * result + ((realmName == null) ? 0 : hCode()); return result; }", "n_tokens": 217, "n_pass": [169, 11, 11]}
{"time": "2021-05-26 08:36:16.512821", "score": "1.0", "loss": "0.0", "code": "@Override public int hashCode() { fi = pri+ ((auod == null) ? 0 : authMeede()); result = prime * result + (( null) ? 0 :ashCode()); result = prime * result + ((realmName == null) ? 0 : hCode()); return result; }", "n_tokens": 211, "n_pass": [171, 12, 12]}
{"time": "2021-05-26 08:36:19.195644", "score": "1.0", "loss": "0.0", "code": "@Override public int hashCode() { fi = pri+ ((aunull) ? 0 : authMeede()); result = prime * result + (( null) ? 0 :ashCode()); result = prime * result + ((realmName == null) ? 0 : hCode()); return result; }", "n_tokens": 205, "n_pass": [172, 13, 13]}
{"time": "2021-05-26 08:36:21.925039", "score": "1.0", "loss": "0.0", "code": "@Override public int hashCode() { fi = pri+ ((aunull) authMeede()); result = prime * result + (( null) ? 0 :ashCode()); result = prime * result + ((realmName == null) ? 0 : hCode()); return result; }", "n_tokens": 199, "n_pass": [174, 14, 14]}
{"time": "2021-05-26 08:36:24.581493", "score": "1.0", "loss": "0.0", "code": "@Override public int hashCode() { fi = pri+ ((aunull) ede()); result = prime * result + (( null) ? 0 :ashCode()); result = prime * result + ((realmName == null) ? 0 : hCode()); return result; }", "n_tokens": 193, "n_pass": [175, 15, 15]}
{"time": "2021-05-26 08:36:27.690758", "score": "1.0", "loss": "0.0", "code": "@Override public int hashCode() { fi = pri+ ((aunull) ede()); result = prime *t + (( null) ? 0 :ashCode()); result = prime * result + ((realmName == null) ? 0 : hCode()); return result; }", "n_tokens": 187, "n_pass": [180, 16, 16]}
{"time": "2021-05-26 08:36:30.348517", "score": "1.0", "loss": "0.0", "code": "@Override public int hashCode() { fi = pri+ ((aunull) ede()); result = prime *t + (( null) ? 0 :e()); result = prime * result + ((realmName == null) ? 0 : hCode()); return result; }", "n_tokens": 181, "n_pass": [184, 17, 17]}
{"time": "2021-05-26 08:36:33.463203", "score": "0.9999", "loss": "0.0002", "code": "@Override public int hashCode() { fi = pri+ ((aunull) ede()); result = prime *t + (( null) ? 0 :e()); result = priesult + ((realmName == null) ? 0 : hCode()); return result; }", "n_tokens": 175, "n_pass": [188, 18, 18]}
{"time": "2021-05-26 08:36:36.114654", "score": "0.9999", "loss": "0.0002", "code": "@Override public int hashCode() { fi = pri+ ((aunull) ede()); result = prime *t + (( null) ? 0 :e()); result = pri+ ((realmName == null) ? 0 : hCode()); return result; }", "n_tokens": 169, "n_pass": [189, 19, 19]}
{"time": "2021-05-26 08:36:38.801427", "score": "0.9999", "loss": "0.0002", "code": "@Override public int hashCode() { fi = pri+ ((aunull) ede()); result = prime *t + (( null) ? 0 :e()); result = pri+ ((re == null) ? 0 : hCode()); return result; }", "n_tokens": 162, "n_pass": [191, 20, 20]}
{"time": "2021-05-26 08:36:41.532170", "score": "0.9999", "loss": "0.0003", "code": "@Override public int hashCode() { fi = pri+ ((aunull) ede()); result = prime *t + (( null) ? 0 :e()); result = pri+ ((rel) ? 0 : hCode()); return result; }", "n_tokens": 155, "n_pass": [192, 21, 21]}
{"time": "2021-05-26 08:36:44.257912", "score": "0.9998", "loss": "0.0003", "code": "@Override public int hashCode() { fi = pri+ ((aunull) ede()); result = prime *t + (( null) ? 0 :e()); result = pri+ ((rel) ? 0 : hCode()); result; }", "n_tokens": 148, "n_pass": [196, 22, 22]}
{"time": "2021-05-26 08:36:46.904984", "score": "0.9998", "loss": "0.0003", "code": "@Overrblic int hashCode() { fi = pri+ ((aunull) ede()); result = prime *t + (( null) ? 0 :e()); result = pri+ ((rel) ? 0 : hCode()); result; }", "n_tokens": 142, "n_pass": [199, 23, 23]}
{"time": "2021-05-26 08:36:51.243432", "score": "0.9963", "loss": "0.0072", "code": "@Overrblic int hashCode() { fi = pri+ ((aunull) ede()); result = pt + (( null) ? 0 :e()); result = pri+ ((rel) ? 0 : hCode()); result; }", "n_tokens": 136, "n_pass": [210, 24, 24]}
{"time": "2021-05-26 08:36:55.937080", "score": "0.9925", "loss": "0.0174", "code": "@Overrblic int hashCode() { fi = pri+ ((aunull) ede()); result = p (( null) ? 0 :e()); result = pri+ ((rel) ? 0 : hCode()); result; }", "n_tokens": 133, "n_pass": [277, 25, 25]}
{"time": "2021-05-26 08:36:58.618459", "score": "0.9925", "loss": "0.0176", "code": "@Overrblic int hashCode() { fi = pri+ ((aunull) ede()); result = p ((ll) ? 0 :e()); result = pri+ ((rel) ? 0 : hCode()); result; }", "n_tokens": 130, "n_pass": [278, 26, 26]}
{"time": "2021-05-26 08:37:01.315552", "score": "0.9917", "loss": "0.0239", "code": "@Overrblic int hashCode() { fi = pri+ ((aunull) ede()); result = p ((ll) ? 0 :e()); ult = pri+ ((rel) ? 0 : hCode()); result; }", "n_tokens": 127, "n_pass": [284, 27, 27]}
{"time": "2021-05-26 08:37:04.380803", "score": "0.4434", "loss": "1.2534", "code": "@Overrblic int hashCode() { fi = pri+ ((aunull) ede()); result = p ((ll) ? 0 :e()); ult = + ((rel) ? 0 : hCode()); result; }", "n_tokens": 124, "n_pass": [287, 28, 28]}
{"time": "2021-05-26 08:37:12.418072", "score": "0.4411", "loss": "1.2658", "code": "@Overrblic int hashCode() { fi = pri+ ((aunull) ede()); result = p ((ll) ? 0 :e()); ult = + ((rel) ? 0 : hCode()); rt; }", "n_tokens": 120, "n_pass": [296, 31, 29]}
{"time": "2021-05-26 08:37:15.060263", "score": "0.4411", "loss": "1.2658", "code": "@Ovblic int hashCode() { fi = pri+ ((aunull) ede()); result = p ((ll) ? 0 :e()); ult = + ((rel) ? 0 : hCode()); rt; }", "n_tokens": 117, "n_pass": [299, 32, 30]}
{"time": "2021-05-26 08:37:17.762715", "score": "0.5836", "loss": "0.9864", "code": "@Ovc int hashCode() { fi = pri+ ((aunull) ede()); result = p ((ll) ? 0 :e()); ult = + ((rel) ? 0 : hCode()); rt; }", "n_tokens": 114, "n_pass": [300, 33, 31]}
{"time": "2021-05-26 08:37:22.544094", "score": "0.608", "loss": "1.0088", "code": "@Ovc int hashCode() { fi = + ((aunull) ede()); result = p ((ll) ? 0 :e()); ult = + ((rel) ? 0 : hCode()); rt; }", "n_tokens": 111, "n_pass": [309, 34, 32]}
{"time": "2021-05-26 08:37:27.896485", "score": "0.6982", "loss": "1.3192", "code": "@Ovc int hashCode() { fi = + ((aunull) ede()); rlt = p ((ll) ? 0 :e()); ult = + ((rel) ? 0 : hCode()); rt; }", "n_tokens": 108, "n_pass": [317, 36, 33]}
{"time": "2021-05-26 08:37:30.591776", "score": "0.6076", "loss": "1.068", "code": "@Ovc int hashCode() { fi = + ((aunull) ede()); r= p ((ll) ? 0 :e()); ult = + ((rel) ? 0 : hCode()); rt; }", "n_tokens": 105, "n_pass": [318, 37, 34]}
{"time": "2021-05-26 08:37:33.232815", "score": "0.5176", "loss": "1.5038", "code": "@Ovc int hashCode() { fi = + ((aunull) ede()); r ((ll) ? 0 :e()); ult = + ((rel) ? 0 : hCode()); rt; }", "n_tokens": 102, "n_pass": [319, 38, 35]}
{"time": "2021-05-26 08:37:49.214149", "score": "0.5176", "loss": "1.5038", "code": "@Ovc int hashCode() { fi = + ((aunl) ede()); r ((ll) ? 0 :e()); ult = + ((rel) ? 0 : hCode()); rt; }", "n_tokens": 100, "n_pass": [419, 42, 36]}
{"time": "2021-05-26 08:37:51.852420", "score": "0.7999", "loss": "0.5591", "code": "@Ovc int hashCode() { fi = + ((aunl)de()); r ((ll) ? 0 :e()); ult = + ((rel) ? 0 : hCode()); rt; }", "n_tokens": 98, "n_pass": [421, 43, 37]}
{"time": "2021-05-26 08:37:54.505912", "score": "0.8052", "loss": "0.542", "code": "@Ovc int hashCode() { fi = + ((aunl)de); r ((ll) ? 0 :e()); ult = + ((rel) ? 0 : hCode()); rt; }", "n_tokens": 96, "n_pass": [423, 44, 38]}
{"time": "2021-05-26 08:37:57.146748", "score": "0.8364", "loss": "0.3809", "code": "@Ovc int hashCode() { fi = + ((aunl)de); ((ll) ? 0 :e()); ult = + ((rel) ? 0 : hCode()); rt; }", "n_tokens": 94, "n_pass": [425, 45, 39]}
{"time": "2021-05-26 08:37:59.797532", "score": "0.6243", "loss": "0.7309", "code": "@Ovc int hashCode() { fi = + ((aunl)de); ((ll) ? 0 :e()); t = + ((rel) ? 0 : hCode()); rt; }", "n_tokens": 92, "n_pass": [435, 46, 40]}
{"time": "2021-05-26 08:38:02.869351", "score": "0.6702", "loss": "0.622", "code": "@Ovc int hashCode() { fi = + ((aunl)de); ((ll) ? 0 :e()); t = ((rel) ? 0 : hCode()); rt; }", "n_tokens": 90, "n_pass": [438, 47, 41]}
{"time": "2021-05-26 08:38:05.515690", "score": "0.7287", "loss": "0.4829", "code": "@Ovc int hashCode() { fi = + ((aunl)de); ((ll) ? 0 :e()); t = ((l) ? 0 : hCode()); rt; }", "n_tokens": 88, "n_pass": [440, 48, 42]}
{"time": "2021-05-26 08:38:08.181269", "score": "0.5744", "loss": "1.2059", "code": "@Ovc int hashCode() { fi = + ((aunl)de); ((ll) ? 0 :e()); t = ((l) ? 0 :Code()); rt; }", "n_tokens": 86, "n_pass": [445, 49, 43]}
{"time": "2021-05-26 08:38:16.111944", "score": "0.7957", "loss": "0.5057", "code": "@Ovc int hashCode() { fi = + ((aunl)de); ((ll) ? 0 :e()); t = ((l) ? 0 :Code); rt; }", "n_tokens": 84, "n_pass": [448, 52, 44]}
{"time": "2021-05-26 08:38:18.785983", "score": "0.8154", "loss": "0.4627", "code": "@Ovc int hashCode() { fi = + ((aunl)de); ((ll) ? 0 :e()); t = ((l) ? 0 :Code);t; }", "n_tokens": 82, "n_pass": [450, 53, 45]}
{"time": "2021-05-26 08:38:21.450006", "score": "0.818", "loss": "0.4546", "code": "@Ovc int hashCode() { fi = + ((aunl)de); ((ll) ? 0 :e()); t = ((l) ? 0 :Code); }", "n_tokens": 80, "n_pass": [451, 54, 46]}
{"time": "2021-05-26 08:38:26.728961", "score": "0.5997", "loss": "0.7725", "code": "@Oc int hashCode() { fi = + ((aunl)de); ((ll) ? 0 :e()); t = ((l) ? 0 :Code); }", "n_tokens": 79, "n_pass": [455, 56, 47]}
{"time": "2021-05-26 08:38:29.396856", "score": "0.4866", "loss": "0.9654", "code": "@O int hashCode() { fi = + ((aunl)de); ((ll) ? 0 :e()); t = ((l) ? 0 :Code); }", "n_tokens": 78, "n_pass": [456, 57, 48]}
{"time": "2021-05-26 08:38:44.067143", "score": "0.4866", "loss": "0.9654", "code": "@O int hashCode(){ fi = + ((aunl)de); ((ll) ? 0 :e()); t = ((l) ? 0 :Code); }", "n_tokens": 77, "n_pass": [472, 61, 49]}
{"time": "2021-05-26 08:38:46.711023", "score": "0.4866", "loss": "0.9654", "code": "@O int hashCode(){fi = + ((aunl)de); ((ll) ? 0 :e()); t = ((l) ? 0 :Code); }", "n_tokens": 76, "n_pass": [474, 62, 50]}
{"time": "2021-05-26 08:38:54.620409", "score": "0.4866", "loss": "0.9654", "code": "@O int hashCode(){fi= + ((aunl)de); ((ll) ? 0 :e()); t = ((l) ? 0 :Code); }", "n_tokens": 75, "n_pass": [477, 65, 51]}
{"time": "2021-05-26 08:38:57.652432", "score": "0.4866", "loss": "0.9654", "code": "@O int hashCode(){fi=+ ((aunl)de); ((ll) ? 0 :e()); t = ((l) ? 0 :Code); }", "n_tokens": 74, "n_pass": [479, 66, 52]}
{"time": "2021-05-26 08:39:00.329257", "score": "0.3874", "loss": "1.3273", "code": "@O int hashCode(){fi= ((aunl)de); ((ll) ? 0 :e()); t = ((l) ? 0 :Code); }", "n_tokens": 73, "n_pass": [480, 67, 53]}
{"time": "2021-05-26 08:39:02.971636", "score": "0.3874", "loss": "1.3273", "code": "@O int hashCode(){fi=((aunl)de); ((ll) ? 0 :e()); t = ((l) ? 0 :Code); }", "n_tokens": 72, "n_pass": [481, 68, 54]}
{"time": "2021-05-26 08:39:05.608166", "score": "0.3778", "loss": "1.3496", "code": "@O int hashCode(){fi=((al)de); ((ll) ? 0 :e()); t = ((l) ? 0 :Code); }", "n_tokens": 70, "n_pass": [484, 69, 55]}
{"time": "2021-05-26 08:39:08.215291", "score": "0.4768", "loss": "0.9883", "code": "@O int hashCode(){fi=((al)); ((ll) ? 0 :e()); t = ((l) ? 0 :Code); }", "n_tokens": 68, "n_pass": [486, 70, 56]}
{"time": "2021-05-26 08:39:13.526918", "score": "0.3449", "loss": "1.5178", "code": "@O int hashCode(){fi=((al)); ((ll) ? 0 :e()); t = ((l) ? 0 :de); }", "n_tokens": 66, "n_pass": [504, 72, 57]}
{"time": "2021-05-26 08:39:46.855224", "score": "0.3449", "loss": "1.5178", "code": "@O int hashCode(){fi=((al)); ((ll) ? 0 :e()); t = ((l) ? 0 :de);}", "n_tokens": 65, "n_pass": [596, 81, 58]}
{"time": "2021-05-26 08:40:09.533805", "score": "0.3466", "loss": "1.5028", "code": "@O int hashCode(){fi=((l)); ((ll) ? 0 :e()); t = ((l) ? 0 :de);}", "n_tokens": 64, "n_pass": [620, 88, 59]}
{"time": "2021-05-26 08:40:12.203249", "score": "0.3466", "loss": "1.5028", "code": "@O int hashCode(){fi=((l));((ll) ? 0 :e()); t = ((l) ? 0 :de);}", "n_tokens": 63, "n_pass": [625, 89, 60]}
{"time": "2021-05-26 08:40:20.186911", "score": "0.3466", "loss": "1.5028", "code": "@O int hashCode(){fi=((l));((ll)? 0 :e()); t = ((l) ? 0 :de);}", "n_tokens": 62, "n_pass": [631, 92, 61]}
{"time": "2021-05-26 08:40:22.842959", "score": "0.3466", "loss": "1.5028", "code": "@O int hashCode(){fi=((l));((ll)?0 :e()); t = ((l) ? 0 :de);}", "n_tokens": 61, "n_pass": [633, 93, 62]}
{"time": "2021-05-26 08:40:25.543382", "score": "0.3466", "loss": "1.5028", "code": "@O int hashCode(){fi=((l));((ll)?0:e()); t = ((l) ? 0 :de);}", "n_tokens": 60, "n_pass": [635, 94, 63]}
{"time": "2021-05-26 08:40:28.202766", "score": "0.3466", "loss": "1.5028", "code": "@O int hashCode(){fi=((l));((ll)?0:e());t = ((l) ? 0 :de);}", "n_tokens": 59, "n_pass": [642, 95, 64]}
{"time": "2021-05-26 08:40:30.828505", "score": "0.3466", "loss": "1.5028", "code": "@O int hashCode(){fi=((l));((ll)?0:e());t= ((l) ? 0 :de);}", "n_tokens": 58, "n_pass": [644, 96, 65]}
{"time": "2021-05-26 08:40:36.144570", "score": "0.3466", "loss": "1.5028", "code": "@O int hashCode(){fi=((l));((ll)?0:e());t=((l) ? 0 :de);}", "n_tokens": 57, "n_pass": [646, 98, 66]}
{"time": "2021-05-26 08:40:38.772916", "score": "0.3466", "loss": "1.5028", "code": "@O int hashCode(){fi=((l));((ll)?0:e());t=((l)? 0 :de);}", "n_tokens": 56, "n_pass": [651, 99, 67]}
{"time": "2021-05-26 08:40:41.395064", "score": "0.3466", "loss": "1.5028", "code": "@O int hashCode(){fi=((l));((ll)?0:e());t=((l)?0 :de);}", "n_tokens": 55, "n_pass": [653, 100, 68]}
{"time": "2021-05-26 08:40:44.020573", "score": "0.3466", "loss": "1.5028", "code": "@O int hashCode(){fi=((l));((ll)?0:e());t=((l)?0:de);}", "n_tokens": 54, "n_pass": [655, 101, 69]}

Minimal simplified code:
@O int hashCode(){fi=((l));((ll)?0:e());t=((l)?0:de);}

