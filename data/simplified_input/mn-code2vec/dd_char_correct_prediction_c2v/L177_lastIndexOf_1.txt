
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/mimno__Mallet/src/cc/mallet/types/MultiInstanceList_lastIndexOf.java
method_name = lastIndexOf
method_body = public int lastIndexOf(Object elem) { for (int i = this.lists.length - 1; i >= 0; i--) { int index = this.lists[i].lastIndexOf(elem); if (index != -1) { return index + this.offsets[i]; } } return -1; }
predict, score, loss = lastIndexOf, 0.9998661279678345, 0.0002503081923350692

Trace of simplified code(s):
{"time": "2021-02-22 15:43:56.462730", "score": "0.9999", "loss": "0.0003", "code": "public int lastIndexOf(Object elem) { for (int i = this.lists.length - 1; i >= 0; i--) { int index = this.lists[i].lastIndexOf(elem); if (index != -1) { return index + this.offsets[i]; } } return -1; }", "n_tokens": 201, "n_pass": [1, 1, 1]}
{"time": "2021-02-22 15:43:59.132740", "score": "0.9999", "loss": "0.0002", "code": "public int lastIndexOf(Object elem) { for (int i = this.lists.length - 1; i >= 0; i--) { int index =f(elem); if (index != -1) { return index + this.offsets[i]; } } return -1; }", "n_tokens": 176, "n_pass": [24, 2, 2]}
{"time": "2021-02-22 15:44:01.777480", "score": "0.9998", "loss": "0.0003", "code": "public int lastIndexOf(Object elem) { for (int i = this.lists.length - 1; i >= 0; i--) { int index =f(elem); if (index != -1) { return infsets[i]; } } return -1; }", "n_tokens": 163, "n_pass": [48, 3, 3]}
{"time": "2021-02-22 15:44:04.795685", "score": "0.9994", "loss": "0.0013", "code": "public int lastIndexOf(Object elem) { for (int i = this.list; i >= 0; i--) { int index =f(elem); if (index != -1) { return infsets[i]; } } return -1; }", "n_tokens": 151, "n_pass": [56, 4, 4]}
{"time": "2021-02-22 15:44:07.814957", "score": "0.9994", "loss": "0.0012", "code": "public int lastIndexOf(Object elem) { for (int i; i >= 0; i--) { int index =f(elem); if (index != -1) { return infsets[i]; } } return -1; }", "n_tokens": 139, "n_pass": [68, 5, 5]}
{"time": "2021-02-22 15:44:10.892209", "score": "0.9901", "loss": "0.0232", "code": "public int lastIndexOf(Object elem) { for (int i; i >= 0; i--) { iex =f(elem); if (index != -1) { return infsets[i]; } } return -1; }", "n_tokens": 133, "n_pass": [105, 6, 6]}
{"time": "2021-02-22 15:44:13.543106", "score": "0.9914", "loss": "0.0196", "code": "public int lastIndexOf(Object elem) { for (int i; i >= 0; i--) { iex =f(elem); if (i -1) { return infsets[i]; } } return -1; }", "n_tokens": 126, "n_pass": [109, 7, 7]}
{"time": "2021-02-22 15:44:16.164071", "score": "0.9971", "loss": "0.006", "code": "public int lastIndexOf(Object elem) { for (int i; i >= 0; i--) { iex =f(elem); if (i -1) { infsets[i]; } } return -1; }", "n_tokens": 119, "n_pass": [111, 8, 8]}
{"time": "2021-02-22 15:44:18.800336", "score": "0.9971", "loss": "0.006", "code": " int lastIndexOf(Object elem) { for (int i; i >= 0; i--) { iex =f(elem); if (i -1) { infsets[i]; } } return -1; }", "n_tokens": 113, "n_pass": [116, 9, 9]}
{"time": "2021-02-22 15:44:22.212393", "score": "0.9963", "loss": "0.0079", "code": "t lastIndexOf(Object elem) { for (int i; i >= 0; i--) { iex =f(elem); if (i -1) { infsets[i]; } } return -1; }", "n_tokens": 110, "n_pass": [171, 10, 10]}
{"time": "2021-02-22 15:44:26.025242", "score": "0.5243", "loss": "1.6174", "code": "t lastIndexOf(Oct elem) { for (int i; i >= 0; i--) { iex =f(elem); if (i -1) { infsets[i]; } } return -1; }", "n_tokens": 107, "n_pass": [176, 11, 11]}
{"time": "2021-02-22 15:44:28.642398", "score": "0.4372", "loss": "1.9623", "code": "t lastIndexOf(Oct m) { for (int i; i >= 0; i--) { iex =f(elem); if (i -1) { infsets[i]; } } return -1; }", "n_tokens": 104, "n_pass": [178, 12, 12]}
{"time": "2021-02-22 15:44:31.260843", "score": "0.3993", "loss": "2.0864", "code": "t lastIndexOf(Oct m) { for (in; i >= 0; i--) { iex =f(elem); if (i -1) { infsets[i]; } } return -1; }", "n_tokens": 101, "n_pass": [183, 13, 13]}
{"time": "2021-02-22 15:44:33.887310", "score": "0.8093", "loss": "0.495", "code": "t lastIndexOf(Oct m) { for (in; i >= 0; i--) { i=f(elem); if (i -1) { infsets[i]; } } return -1; }", "n_tokens": 98, "n_pass": [190, 14, 14]}
{"time": "2021-02-22 15:44:36.499624", "score": "0.7881", "loss": "0.5429", "code": "t lastIndexOf(Oct m) { for (in; i >= 0; i--) { i=f(m); if (i -1) { infsets[i]; } } return -1; }", "n_tokens": 95, "n_pass": [192, 15, 15]}
{"time": "2021-02-22 15:44:39.127055", "score": "0.7299", "loss": "0.6259", "code": "t lastIndexOf(Oct m) { for (in; i >= 0; i--) { i=f(m); if (i) { infsets[i]; } } return -1; }", "n_tokens": 92, "n_pass": [196, 16, 16]}
{"time": "2021-02-22 15:44:41.736214", "score": "0.7302", "loss": "0.627", "code": "t lastIndexOf(Oct m) { for (in; i >= 0; i--) { i=f(m); if (i) {fsets[i]; } } return -1; }", "n_tokens": 89, "n_pass": [198, 17, 17]}
{"time": "2021-02-22 15:44:44.367725", "score": "0.7296", "loss": "0.6275", "code": "t lastIndexOf(Oct m) { for (in; i >= 0; i--) { i=f(m); if (i) {ts[i]; } } return -1; }", "n_tokens": 86, "n_pass": [199, 18, 18]}
{"time": "2021-02-22 15:45:02.595630", "score": "0.9972", "loss": "0.0049", "code": "t lastIndexOf(ct m) { for (in; i >= 0; i--) { i=f(m); if (i) {ts[i]; } } return -1; }", "n_tokens": 85, "n_pass": [307, 21, 19]}
{"time": "2021-02-22 15:45:05.207354", "score": "0.9983", "loss": "0.0024", "code": "t lastIndexOf(t m) { for (in; i >= 0; i--) { i=f(m); if (i) {ts[i]; } } return -1; }", "n_tokens": 84, "n_pass": [308, 22, 20]}
{"time": "2021-02-22 15:45:07.825100", "score": "0.9983", "loss": "0.0024", "code": "t lastIndexOf(t m){ for (in; i >= 0; i--) { i=f(m); if (i) {ts[i]; } } return -1; }", "n_tokens": 83, "n_pass": [313, 23, 21]}
{"time": "2021-02-22 15:45:10.510721", "score": "0.9982", "loss": "0.0025", "code": "t lastIndexOf(t m){ for (; i >= 0; i--) { i=f(m); if (i) {ts[i]; } } return -1; }", "n_tokens": 81, "n_pass": [318, 24, 22]}
{"time": "2021-02-22 15:45:13.125682", "score": "0.998", "loss": "0.003", "code": "t lastIndexOf(t m){ for (; i >= 0; i--) { i(m); if (i) {ts[i]; } } return -1; }", "n_tokens": 79, "n_pass": [328, 25, 23]}
{"time": "2021-02-22 15:45:24.619547", "score": "0.9986", "loss": "0.0019", "code": "t lastIndexOf(t m){ for (; i >= 0; i--) {(m); if (i) {ts[i]; } } return -1; }", "n_tokens": 77, "n_pass": [377, 27, 24]}
{"time": "2021-02-22 15:45:43.190843", "score": "0.9986", "loss": "0.0019", "code": "t lastIndexOf(t m){ for (; i >= 0; i--) {(m); if(i) {ts[i]; } } return -1; }", "n_tokens": 76, "n_pass": [484, 29, 25]}
{"time": "2021-02-22 15:45:45.816216", "score": "0.9986", "loss": "0.0019", "code": "t lastIndexOf(t m){ for (; i >= 0; i--) {(m); if(i){ts[i]; } } return -1; }", "n_tokens": 75, "n_pass": [488, 30, 26]}
{"time": "2021-02-22 15:45:48.419341", "score": "0.9986", "loss": "0.0019", "code": "t lastIndexOf(t m){ for (; i >= 0; i--) {(m); if(i){s[i]; } } return -1; }", "n_tokens": 74, "n_pass": [490, 31, 27]}
{"time": "2021-02-22 15:45:51.023407", "score": "0.9986", "loss": "0.0019", "code": "t lastIndexOf(t m){ for (; i >= 0; i--) {(m); if(i){s[i];} } return -1; }", "n_tokens": 73, "n_pass": [496, 32, 28]}
{"time": "2021-02-22 15:45:53.629630", "score": "0.9986", "loss": "0.0019", "code": "t lastIndexOf(t m){ for (; i >= 0; i--) {(m); if(i){s[i];}} return -1; }", "n_tokens": 72, "n_pass": [498, 33, 29]}
{"time": "2021-02-22 15:45:56.253771", "score": "0.9986", "loss": "0.0019", "code": "t lastIndexOf(t m){ for (; i >= 0; i--) {(m); if(i){s[i];}}return -1; }", "n_tokens": 71, "n_pass": [500, 34, 30]}
{"time": "2021-02-22 15:46:01.167094", "score": "0.9986", "loss": "0.0019", "code": "t lastIndexOf(t m){ for (; i >= 0; i--) {(m); if(i){s[i];}}return-1; }", "n_tokens": 70, "n_pass": [507, 35, 31]}
{"time": "2021-02-22 15:46:06.388469", "score": "0.9986", "loss": "0.0019", "code": "t lastIndexOf(t m){ for (; i >= 0; i--) {(m); if(i){s[i];}}return-1;}", "n_tokens": 69, "n_pass": [511, 37, 32]}
{"time": "2021-02-22 15:46:14.099423", "score": "0.9986", "loss": "0.0019", "code": "t lastIndexOf(t m){for (; i >= 0; i--) {(m); if(i){s[i];}}return-1;}", "n_tokens": 68, "n_pass": [532, 38, 33]}
{"time": "2021-02-22 15:46:16.741088", "score": "0.9986", "loss": "0.0019", "code": "t lastIndexOf(t m){for(; i >= 0; i--) {(m); if(i){s[i];}}return-1;}", "n_tokens": 67, "n_pass": [536, 39, 34]}
{"time": "2021-02-22 15:46:19.347296", "score": "0.9986", "loss": "0.0019", "code": "t lastIndexOf(t m){for(;i >= 0; i--) {(m); if(i){s[i];}}return-1;}", "n_tokens": 66, "n_pass": [539, 40, 35]}
{"time": "2021-02-22 15:46:21.975196", "score": "0.9986", "loss": "0.0019", "code": "t lastIndexOf(t m){for(;i>= 0; i--) {(m); if(i){s[i];}}return-1;}", "n_tokens": 65, "n_pass": [541, 41, 36]}
{"time": "2021-02-22 15:46:24.579251", "score": "0.9807", "loss": "0.0431", "code": "t lastIndexOf(t m){for(;i= 0; i--) {(m); if(i){s[i];}}return-1;}", "n_tokens": 64, "n_pass": [542, 42, 37]}
{"time": "2021-02-22 15:46:27.167609", "score": "0.9807", "loss": "0.0431", "code": "t lastIndexOf(t m){for(;i=0; i--) {(m); if(i){s[i];}}return-1;}", "n_tokens": 63, "n_pass": [544, 43, 38]}
{"time": "2021-02-22 15:46:29.767784", "score": "0.9807", "loss": "0.0431", "code": "t lastIndexOf(t m){for(;i=0;i--) {(m); if(i){s[i];}}return-1;}", "n_tokens": 62, "n_pass": [547, 44, 39]}
{"time": "2021-02-22 15:46:32.392541", "score": "0.9807", "loss": "0.0431", "code": "t lastIndexOf(t m){for(;i=0;i--){(m); if(i){s[i];}}return-1;}", "n_tokens": 61, "n_pass": [552, 45, 40]}
{"time": "2021-02-22 15:46:35.032010", "score": "0.9807", "loss": "0.0431", "code": "t lastIndexOf(t m){for(;i=0;i--){(m);if(i){s[i];}}return-1;}", "n_tokens": 60, "n_pass": [558, 46, 41]}
{"time": "2021-02-22 15:46:47.651256", "score": "0.9917", "loss": "0.0187", "code": "t lastIndexOf(t m){for(;i0;i--){(m);if(i){s[i];}}return-1;}", "n_tokens": 59, "n_pass": [607, 48, 42]}
{"time": "2021-02-22 15:46:50.262120", "score": "0.9917", "loss": "0.0187", "code": "t lastIndexOf(t m){for(;i;i--){(m);if(i){s[i];}}return-1;}", "n_tokens": 58, "n_pass": [608, 49, 43]}
{"time": "2021-02-22 15:47:02.869283", "score": "0.992", "loss": "0.0181", "code": "t lastIndexOf(t m){for(;;i--){(m);if(i){s[i];}}return-1;}", "n_tokens": 57, "n_pass": [666, 51, 44]}

Minimal simplified code:
t lastIndexOf(t m){for(;;i--){(m);if(i){s[i];}}return-1;}

