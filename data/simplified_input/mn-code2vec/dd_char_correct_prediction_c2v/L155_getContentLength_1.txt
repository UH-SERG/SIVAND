
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/bcgit__bc-java/pkix/src/main/java/org/bouncycastle/est/ESTResponse_getContentLength.java
method_name = getContentLength
method_body = public Long getContentLength() { String v = headers.getFirstValue("Content-Length"); if (v == null) { return null; } try { return Long.parseLong(v); } catch (RuntimeException nfe) { throw new RuntimeException("Content Length: '" + v + "' invalid. " + nfe.getMessage()); } }
predict, score, loss = getContentLength, 0.9664842486381531, 0.03426628187298775

Trace of simplified code(s):
{"time": "2021-02-22 13:14:01.823184", "score": "0.9665", "loss": "0.0343", "code": "public Long getContentLength() { String v = headers.getFirstValue(\"Content-Length\"); if (v == null) { return null; } try { return Long.parseLong(v); } catch (RuntimeException nfe) { throw new RuntimeException(\"Content Length: '\" + v + \"' invalid. \" + nfe.getMessage()); } }", "n_tokens": 273, "n_pass": [1, 1, 1]}
{"time": "2021-02-22 13:14:04.872069", "score": "0.3618", "loss": "1.1428", "code": "public Long getContentLength() { S.getFirstValue(\"Content-Length\"); if (v == null) { return null; } try { return Long.parseLong(v); } catch (RuntimeException nfe) { throw new RuntimeException(\"Content Length: '\" + v + \"' invalid. \" + nfe.getMessage()); } }", "n_tokens": 256, "n_pass": [46, 2, 2]}
{"time": "2021-02-22 13:14:07.506218", "score": "0.3287", "loss": "1.2418", "code": "public Long getContentLength() { S.getFirstValue(\"Content-Length\"); if (v == null) { return null; } try { return Long.parseLong(v); } catch (RuntimeException nfe) { throwtion(\"Content Length: '\" + v + \"' invalid. \" + nfe.getMessage()); } }", "n_tokens": 239, "n_pass": [54, 3, 3]}
{"time": "2021-02-22 13:14:10.155733", "score": "0.3247", "loss": "1.2512", "code": "public Long getContentLength() { S.getFirstValue(\"Content-Length\"); if (v == null) { return null; } try { return Long.parseLong(v); } catch (RuntimeException nfe) { throwtion(\"Content Leninvalid. \" + nfe.getMessage()); } }", "n_tokens": 222, "n_pass": [56, 4, 4]}
{"time": "2021-02-22 13:14:13.203417", "score": "0.3247", "loss": "1.2512", "code": "public Long getContentLength() { S.getFirstValue(\"Content-Length\"); if (v == null) { return null; } try { return Long.parseLong(v); } catch (RuntimeException nfe) { throwtion(\"Content Le \" + nfe.getMessage()); } }", "n_tokens": 213, "n_pass": [96, 5, 5]}
{"time": "2021-02-22 13:14:15.838761", "score": "0.3191", "loss": "1.2678", "code": "public Long getContentLength() { S.getFirstValue(\"Content-Length\"); if (v == null) { return null; } try { return Long.parseLong(v); } catch (RuntimeException nfe) { throwtion(\"Content Le \" + nfe.e()); } }", "n_tokens": 204, "n_pass": [98, 6, 6]}
{"time": "2021-02-22 13:14:21.878282", "score": "0.7117", "loss": "0.345", "code": "public Long getContentLength() {rstValue(\"Content-Length\"); if (v == null) { return null; } try { return Long.parseLong(v); } catch (RuntimeException nfe) { throwtion(\"Content Le \" + nfe.e()); } }", "n_tokens": 196, "n_pass": [104, 8, 7]}
{"time": "2021-02-22 13:14:29.807610", "score": "0.9209", "loss": "0.0849", "code": "public Long getContentLength() {rstValue(\"Content-Length\"); if (l) { return null; } try { return Long.parseLong(v); } catch (RuntimeException nfe) { throwtion(\"Content Le \" + nfe.e()); } }", "n_tokens": 188, "n_pass": [109, 11, 8]}
{"time": "2021-02-22 13:14:32.429562", "score": "0.9401", "loss": "0.0634", "code": "public Long getContentLength() {rstValue(\"Content-Length\"); if (l) { ret; } try { return Long.parseLong(v); } catch (RuntimeException nfe) { throwtion(\"Content Le \" + nfe.e()); } }", "n_tokens": 180, "n_pass": [111, 12, 9]}
{"time": "2021-02-22 13:14:35.047334", "score": "0.8872", "loss": "0.1225", "code": "public Long getContentLength() {rstValue(\"Content-Length\"); if (l) { ret; } try {ong.parseLong(v); } catch (RuntimeException nfe) { throwtion(\"Content Le \" + nfe.e()); } }", "n_tokens": 171, "n_pass": [113, 13, 10]}
{"time": "2021-02-22 13:14:37.672527", "score": "0.9039", "loss": "0.1042", "code": "public Long getContentLength() {rstValue(\"Content-Length\"); if (l) { ret; } try {Long(v); } catch (RuntimeException nfe) { throwtion(\"Content Le \" + nfe.e()); } }", "n_tokens": 162, "n_pass": [114, 14, 11]}
{"time": "2021-02-22 13:14:40.283541", "score": "0.9562", "loss": "0.0452", "code": "public Long getContentLength() {rstValue(\"Content-Length\"); if (l) { ret; } try {} catch (RuntimeException nfe) { throwtion(\"Content Le \" + nfe.e()); } }", "n_tokens": 153, "n_pass": [115, 15, 12]}
{"time": "2021-02-22 13:14:42.914238", "score": "0.9556", "loss": "0.0458", "code": "public Long getContentLength() {rstValue(\"Content-Length\"); if (l) { ret; } try {} catch (ception nfe) { throwtion(\"Content Le \" + nfe.e()); } }", "n_tokens": 144, "n_pass": [117, 16, 13]}
{"time": "2021-02-22 13:14:45.524542", "score": "0.9552", "loss": "0.0462", "code": "public Long getContentLength() {rstValue(\"Content-Length\"); if (l) { ret; } try {} catch (ception nfe) { throwtion(\"C \" + nfe.e()); } }", "n_tokens": 135, "n_pass": [121, 17, 14]}
{"time": "2021-02-22 13:14:48.125582", "score": "0.4709", "loss": "0.81", "code": "ong getContentLength() {rstValue(\"Content-Length\"); if (l) { ret; } try {} catch (ception nfe) { throwtion(\"C \" + nfe.e()); } }", "n_tokens": 127, "n_pass": [124, 18, 15]}
{"time": "2021-02-22 13:14:58.691085", "score": "0.4709", "loss": "0.81", "code": "ong getContentLength() {alue(\"Content-Length\"); if (l) { ret; } try {} catch (ception nfe) { throwtion(\"C \" + nfe.e()); } }", "n_tokens": 123, "n_pass": [176, 21, 16]}
{"time": "2021-02-22 13:15:09.119956", "score": "0.4699", "loss": "0.8118", "code": "ong getContentLength() {alue(\"Content-Length\"); if (l) {; } try {} catch (ception nfe) { throwtion(\"C \" + nfe.e()); } }", "n_tokens": 119, "n_pass": [184, 25, 17]}
{"time": "2021-02-22 13:15:17.006588", "score": "0.4711", "loss": "0.8051", "code": "ong getContentLength() {alue(\"Content-Length\"); if (l) {; } try {} catch (ception nfe) { throwtion(+ nfe.e()); } }", "n_tokens": 114, "n_pass": [195, 28, 18]}
{"time": "2021-02-22 13:15:38.253837", "score": "0.4553", "loss": "0.8509", "code": "ong getContentLength() {alue(\"Content-Length\"); if (l) {; } try {} catch (ception nfe) { throwtion(fe.e()); } }", "n_tokens": 111, "n_pass": [278, 35, 19]}
{"time": "2021-02-22 13:15:40.852213", "score": "0.4661", "loss": "0.8223", "code": "ong getContentLength() {alue(\"Content-Length\"); if (l) {; } try {} catch (ception nfe) { throwtion(e()); } }", "n_tokens": 108, "n_pass": [279, 36, 20]}
{"time": "2021-02-22 13:15:43.460512", "score": "0.4659", "loss": "0.8146", "code": "ong getContentLength() {alue(\"Content-Length\"); if (l) {; } try {} catch (ception nfe) { throwtion(); } }", "n_tokens": 105, "n_pass": [280, 37, 21]}
{"time": "2021-02-22 13:15:46.108183", "score": "0.2573", "loss": "1.7718", "code": "g getContentLength() {alue(\"Content-Length\"); if (l) {; } try {} catch (ception nfe) { throwtion(); } }", "n_tokens": 103, "n_pass": [283, 38, 22]}
{"time": "2021-02-22 13:15:52.226688", "score": "0.2383", "loss": "1.874", "code": "g getContentLength() {ue(\"Content-Length\"); if (l) {; } try {} catch (ception nfe) { throwtion(); } }", "n_tokens": 101, "n_pass": [295, 39, 23]}
{"time": "2021-02-22 13:16:15.744670", "score": "0.2383", "loss": "1.874", "code": "g getContentLength() {ue(\"Content-Length\"); if (l) {} try {} catch (ception nfe) { throwtion(); } }", "n_tokens": 99, "n_pass": [311, 48, 24]}
{"time": "2021-02-22 13:16:18.344971", "score": "0.2383", "loss": "1.874", "code": "g getContentLength() {ue(\"Content-Length\"); if (l) {} try {} catch (ption nfe) { throwtion(); } }", "n_tokens": 97, "n_pass": [320, 49, 25]}
{"time": "2021-02-22 13:16:23.577480", "score": "0.2084", "loss": "2.5918", "code": "g getContentLength() {ue(\"Content-Length\"); if (l) {} try {} catch (ptn nfe) { throwtion(); } }", "n_tokens": 95, "n_pass": [322, 51, 26]}
{"time": "2021-02-22 13:16:28.823529", "score": "0.2084", "loss": "2.5918", "code": "g getContentLength() {ue(\"Content-Length\"); if (l) {} try {} catch (ptn nfe) {hrowtion(); } }", "n_tokens": 93, "n_pass": [327, 53, 27]}
{"time": "2021-02-22 13:16:31.426476", "score": "0.2084", "loss": "2.5918", "code": "g getContentLength() {ue(\"Content-Length\"); if (l) {} try {} catch (ptn nfe) {owtion(); } }", "n_tokens": 91, "n_pass": [328, 54, 28]}
{"time": "2021-02-22 13:16:36.675223", "score": "0.2084", "loss": "2.5918", "code": "g getContentLength() {ue(\"Content-Length\"); if (l) {} try {} catch (ptn nfe) {owon(); } }", "n_tokens": 89, "n_pass": [330, 56, 29]}
{"time": "2021-02-22 13:17:03.710150", "score": "0.2294", "loss": "1.8604", "code": "g getContentLength() {ue(\"Content-Length\"); if (l) {} try {} catch (n nfe) {owon(); } }", "n_tokens": 87, "n_pass": [368, 65, 30]}
{"time": "2021-02-22 13:17:08.927588", "score": "0.2263", "loss": "1.879", "code": "g getContentLength() {ue(\"Content-Length\"); if (l) {} try {} catch (n nfe) {on(); } }", "n_tokens": 85, "n_pass": [373, 67, 31]}
{"time": "2021-02-22 13:17:42.790590", "score": "0.2286", "loss": "1.8618", "code": "g getContentLength() {ue(\"Content-Length\"); if (l) {} try {} catch (n nfe) {n(); } }", "n_tokens": 84, "n_pass": [497, 77, 32]}
{"time": "2021-02-22 13:17:52.378338", "score": "0.2286", "loss": "1.8618", "code": "g getContentLength(){ue(\"Content-Length\"); if (l) {} try {} catch (n nfe) {n(); } }", "n_tokens": 83, "n_pass": [523, 78, 33]}
{"time": "2021-02-22 13:18:18.393989", "score": "0.2286", "loss": "1.8618", "code": "g getContentLength(){ue(\"ContentLength\"); if (l) {} try {} catch (n nfe) {n(); } }", "n_tokens": 82, "n_pass": [536, 88, 34]}
{"time": "2021-02-22 13:18:36.627197", "score": "0.2286", "loss": "1.8618", "code": "g getContentLength(){ue(\"ContentLength\");if (l) {} try {} catch (n nfe) {n(); } }", "n_tokens": 81, "n_pass": [546, 95, 35]}
{"time": "2021-02-22 13:18:39.247300", "score": "0.2286", "loss": "1.8618", "code": "g getContentLength(){ue(\"ContentLength\");if(l) {} try {} catch (n nfe) {n(); } }", "n_tokens": 80, "n_pass": [549, 96, 36]}
{"time": "2021-02-22 13:18:41.868615", "score": "0.2286", "loss": "1.8618", "code": "g getContentLength(){ue(\"ContentLength\");if(l){} try {} catch (n nfe) {n(); } }", "n_tokens": 79, "n_pass": [553, 97, 37]}
{"time": "2021-02-22 13:18:44.463381", "score": "0.2286", "loss": "1.8618", "code": "g getContentLength(){ue(\"ContentLength\");if(l){}try {} catch (n nfe) {n(); } }", "n_tokens": 78, "n_pass": [556, 98, 38]}
{"time": "2021-02-22 13:18:47.083712", "score": "0.2286", "loss": "1.8618", "code": "g getContentLength(){ue(\"ContentLength\");if(l){}try{} catch (n nfe) {n(); } }", "n_tokens": 77, "n_pass": [560, 99, 39]}
{"time": "2021-02-22 13:18:49.685414", "score": "0.2286", "loss": "1.8618", "code": "g getContentLength(){ue(\"ContentLength\");if(l){}try{}catch (n nfe) {n(); } }", "n_tokens": 76, "n_pass": [563, 100, 40]}
{"time": "2021-02-22 13:18:52.311454", "score": "0.2286", "loss": "1.8618", "code": "g getContentLength(){ue(\"ContentLength\");if(l){}try{}catch(n nfe) {n(); } }", "n_tokens": 75, "n_pass": [569, 101, 41]}
{"time": "2021-02-22 13:19:02.722771", "score": "0.2286", "loss": "1.8618", "code": "g getContentLength(){ue(\"ContentLength\");if(l){}try{}catch(n nfe){n(); } }", "n_tokens": 74, "n_pass": [577, 105, 42]}
{"time": "2021-02-22 13:20:00.371999", "score": "0.2286", "loss": "1.8618", "code": "g getContentLength(){ue(\"ContentLength\");if(l){}try{}catch(n nfe){n();} }", "n_tokens": 73, "n_pass": [657, 124, 43]}
{"time": "2021-02-22 13:20:02.989003", "score": "0.2286", "loss": "1.8618", "code": "g getContentLength(){ue(\"ContentLength\");if(l){}try{}catch(n nfe){n();}}", "n_tokens": 72, "n_pass": [658, 125, 44]}

Minimal simplified code:
g getContentLength(){ue("ContentLength");if(l){}try{}catch(n nfe){n();}}

