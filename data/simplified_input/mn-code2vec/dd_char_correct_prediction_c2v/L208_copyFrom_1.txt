
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/58code__Oceanus/oceanus-all/oceanus-exchange/oceanus-exchange-sqlparser/src/main/java/com/bj58/sql/parser/CreateRoleNode_copyFrom.java
method_name = copyFrom
method_body = public void copyFrom(QueryTreeNode node) throws StandardException { super.copyFrom(node); CreateRoleNode other = (CreateRoleNode) node; this.name = other.name; }
predict, score, loss = copyFrom, 0.912900984287262, 0.10292644798755646

Trace of simplified code(s):
{"time": "2021-02-22 19:49:53.691112", "score": "0.9129", "loss": "0.1029", "code": "public void copyFrom(QueryTreeNode node) throws StandardException { super.copyFrom(node); CreateRoleNode other = (CreateRoleNode) node; this.name = other.name; }", "n_tokens": 161, "n_pass": [1, 1, 1]}
{"time": "2021-02-22 19:49:56.325261", "score": "0.8809", "loss": "0.1356", "code": "d copyFrom(QueryTreeNode node) throws StandardException { super.copyFrom(node); CreateRoleNode other = (CreateRoleNode) node; this.name = other.name; }", "n_tokens": 151, "n_pass": [44, 2, 2]}
{"time": "2021-02-22 19:49:58.964024", "score": "0.9167", "loss": "0.0931", "code": "d copyFrom(QueryTreeNode node) throws Stption { super.copyFrom(node); CreateRoleNode other = (CreateRoleNode) node; this.name = other.name; }", "n_tokens": 141, "n_pass": [48, 3, 3]}
{"time": "2021-02-22 19:50:04.162357", "score": "0.9194", "loss": "0.0903", "code": "d copyFrom(QueryTreeNode node) throws Stption { super.copyFrom(node); Node other = (CreateRoleNode) node; this.name = other.name; }", "n_tokens": 131, "n_pass": [52, 5, 4]}
{"time": "2021-02-22 19:50:06.782832", "score": "0.854", "loss": "0.1639", "code": "d copyFrom(QueryTreeNode node) throws Stption { super.copyFrom(node); Node other = (CreateRoleNode) .name = other.name; }", "n_tokens": 121, "n_pass": [56, 6, 5]}
{"time": "2021-02-22 19:50:09.385422", "score": "0.873", "loss": "0.1625", "code": "d copyFrom(QueryTreeNode node) throws Stption { super.copyFrom(node); Node other = (CreateRoleNode) her.name; }", "n_tokens": 111, "n_pass": [57, 7, 6]}
{"time": "2021-02-22 19:50:14.590580", "score": "0.8699", "loss": "0.1526", "code": "d copyFrom(QueryTreeNode node) throws Stption { super.copyFrom(node); Node other = (CreateRoleNode) ame; }", "n_tokens": 106, "n_pass": [91, 9, 7]}
{"time": "2021-02-22 19:50:18.030285", "score": "0.6829", "loss": "0.3986", "code": "d copyFrom(QuerNode node) throws Stption { super.copyFrom(node); Node other = (CreateRoleNode) ame; }", "n_tokens": 101, "n_pass": [95, 10, 8]}
{"time": "2021-02-22 19:50:20.648667", "score": "0.6745", "loss": "0.4122", "code": "d copyFrom(QuerNode node) throws St { super.copyFrom(node); Node other = (CreateRoleNode) ame; }", "n_tokens": 96, "n_pass": [100, 11, 9]}
{"time": "2021-02-22 19:50:28.457344", "score": "0.9272", "loss": "0.0926", "code": "d copyFrom(QuerNode node) throws St { super.copyFrom(node); other = (CreateRoleNode) ame; }", "n_tokens": 91, "n_pass": [106, 14, 10]}
{"time": "2021-02-22 19:50:31.055968", "score": "0.9272", "loss": "0.0926", "code": "d copyFrom(QuerNode node) throws St { super.copyFrom(node); other = (CRoleNode) ame; }", "n_tokens": 86, "n_pass": [109, 15, 11]}
{"time": "2021-02-22 19:50:33.651003", "score": "0.9275", "loss": "0.0903", "code": "d copyFrom(QuerNode node) throws St { super.copyFrom(node); other = (Code) ame; }", "n_tokens": 81, "n_pass": [110, 16, 12]}
{"time": "2021-02-22 19:50:42.262388", "score": "0.9105", "loss": "0.1102", "code": "d copyFrom(QuerNode node) throws St { super.copyFrom(node); other = (e) ame; }", "n_tokens": 78, "n_pass": [159, 19, 13]}
{"time": "2021-02-22 19:50:44.869200", "score": "0.9636", "loss": "0.0405", "code": "d copyFrom(QuerNode node) throws St { super.copyFrom(node); other = (e) ; }", "n_tokens": 75, "n_pass": [161, 20, 14]}
{"time": "2021-02-22 19:50:49.394323", "score": "0.9636", "loss": "0.0405", "code": "d copyFrom(QrNode node) throws St { super.copyFrom(node); other = (e) ; }", "n_tokens": 73, "n_pass": [169, 21, 15]}
{"time": "2021-02-22 19:50:51.990414", "score": "0.9636", "loss": "0.0405", "code": "d copyFrom(Qode node) throws St { super.copyFrom(node); other = (e) ; }", "n_tokens": 71, "n_pass": [170, 22, 16]}
{"time": "2021-02-22 19:50:54.638917", "score": "0.7358", "loss": "0.3249", "code": "d copyFrom(Qe node) throws St { super.copyFrom(node); other = (e) ; }", "n_tokens": 69, "n_pass": [171, 23, 17]}
{"time": "2021-02-22 19:50:57.238148", "score": "0.6967", "loss": "0.3786", "code": "d copyFrom(Qe de) throws St { super.copyFrom(node); other = (e) ; }", "n_tokens": 67, "n_pass": [173, 24, 18]}
{"time": "2021-02-22 19:50:59.831300", "score": "0.6216", "loss": "0.4924", "code": "d copyFrom(Qe de) throws St { sr.copyFrom(node); other = (e) ; }", "n_tokens": 64, "n_pass": [181, 25, 19]}
{"time": "2021-02-22 19:51:10.230512", "score": "0.6184", "loss": "0.4977", "code": "d copyFrom(Qe de) throws St { sr.copyFrom(n); other = (e) ; }", "n_tokens": 61, "n_pass": [186, 29, 20]}
{"time": "2021-02-22 19:51:15.448223", "score": "0.6214", "loss": "0.7571", "code": "d copyFrom(Qe de) throws St { sr.copyFrom(n); oth= (e) ; }", "n_tokens": 58, "n_pass": [189, 31, 21]}
{"time": "2021-02-22 19:51:30.668426", "score": "0.5337", "loss": "0.6454", "code": "d copyFrom(Qe de) throws St { sr.copyFrom(n); h= (e) ; }", "n_tokens": 56, "n_pass": [259, 35, 22]}
{"time": "2021-02-22 19:51:33.272246", "score": "0.4826", "loss": "0.7382", "code": "d copyFrom(Qe de) throws St { sr.copyFrom(n);  (e) ; }", "n_tokens": 54, "n_pass": [260, 36, 23]}
{"time": "2021-02-22 19:51:39.709548", "score": "0.3437", "loss": "1.0936", "code": "d copyFrom(e de) throws St { sr.copyFrom(n);  (e) ; }", "n_tokens": 53, "n_pass": [276, 37, 24]}
{"time": "2021-02-22 19:51:42.310843", "score": "0.4357", "loss": "0.8699", "code": "d copyFrom(e e) throws St { sr.copyFrom(n);  (e) ; }", "n_tokens": 52, "n_pass": [279, 38, 25]}
{"time": "2021-02-22 19:51:44.917253", "score": "0.4357", "loss": "0.8699", "code": "d copyFrom(e e)throws St { sr.copyFrom(n);  (e) ; }", "n_tokens": 51, "n_pass": [282, 39, 26]}
{"time": "2021-02-22 19:51:47.503124", "score": "0.5215", "loss": "0.6793", "code": "d copyFrom(e e)throws t { sr.copyFrom(n);  (e) ; }", "n_tokens": 50, "n_pass": [290, 40, 27]}
{"time": "2021-02-22 19:51:50.090546", "score": "0.5215", "loss": "0.6793", "code": "d copyFrom(e e)throws t{ sr.copyFrom(n);  (e) ; }", "n_tokens": 49, "n_pass": [292, 41, 28]}
{"time": "2021-02-22 19:51:52.680229", "score": "0.5215", "loss": "0.6793", "code": "d copyFrom(e e)throws t{sr.copyFrom(n);  (e) ; }", "n_tokens": 48, "n_pass": [294, 42, 29]}
{"time": "2021-02-22 19:51:55.280234", "score": "0.3692", "loss": "1.0401", "code": "d copyFrom(e e)throws t{r.copyFrom(n);  (e) ; }", "n_tokens": 47, "n_pass": [295, 43, 30]}
{"time": "2021-02-22 19:52:29.795244", "score": "0.3692", "loss": "1.0401", "code": "d copyFrom(e e)throws t{r.copyFrom(n); (e) ; }", "n_tokens": 46, "n_pass": [361, 54, 31]}
{"time": "2021-02-22 19:52:32.377670", "score": "0.3692", "loss": "1.0401", "code": "d copyFrom(e e)throws t{r.copyFrom(n);(e) ; }", "n_tokens": 45, "n_pass": [362, 55, 32]}
{"time": "2021-02-22 19:52:34.979058", "score": "0.3692", "loss": "1.0401", "code": "d copyFrom(e e)throws t{r.copyFrom(n);(e); }", "n_tokens": 44, "n_pass": [366, 56, 33]}
{"time": "2021-02-22 19:52:37.590083", "score": "0.3692", "loss": "1.0401", "code": "d copyFrom(e e)throws t{r.copyFrom(n);(e);}", "n_tokens": 43, "n_pass": [368, 57, 34]}

Minimal simplified code:
d copyFrom(e e)throws t{r.copyFrom(n);(e);}

