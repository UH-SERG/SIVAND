
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/googlesamples__androidtv-Leanback/app/src/main/java/com/example/android/tvleanback/ui/SearchFragment_onActivityResult.java
method_name = onActivityResult
method_body = @Override public void onActivityResult(int requestCode, int resultCode, Intent data) { switch(requestCode) { case REQUEST_SPEECH: switch(resultCode) { case Activity.RESULT_OK: setSearchQuery(data, true); break; default: if (FINISH_ON_RECOGNIZER_CANCELED) { if (!hasResults()) { if (DEBUG) Log.v(TAG, "Voice search canceled"); getView().findViewById(R.id.lb_search_bar_speech_orb).requestFocus(); } } break; } break; } }
predict, score, loss = onActivityResult, 0.9999428987503052, 9.047575440490618e-05

Trace of simplified code(s):
{"time": "2021-02-16 10:34:17.931767", "score": "0.9999", "loss": "0.0001", "code": "@Override public void onActivityResult(int requestCode, int resultCode, Intent data) { switch(requestCode) { case REQUEST_SPEECH: switch(resultCode) { case Activity.RESULT_OK: setSearchQuery(data, true); break; default: if (FINISH_ON_RECOGNIZER_CANCELED) { if (!hasResults()) { if (DEBUG) Log.v(TAG, \"Voice search canceled\"); getView().findViewById(R.id.lb_search_bar_speech_orb).requestFocus(); } } break; } break; } }", "n_tokens": 160, "n_pass": [1, 1, 1]}
{"time": "2021-02-16 10:34:20.506332", "score": "1.0", "loss": "0.0001", "code": "@Override public void onActivityResult(int requestCode, int resultCode, Intent data) { switch(requestCode) { case REQUEST_SPEECH: switch(resultCode) { case Activity.RESULT_OK: setSearchQuery(data, true); break; default: if (FINISH_ON_RECOGNIZER_CANCELED) { if (!hasResults()) { if (DEBUG) Log.v(TAG, \"Voice search canceled\"); getViewrequestFocus(); } } break; } break; } }", "n_tokens": 140, "n_pass": [26, 2, 2]}
{"time": "2021-02-16 10:34:23.080432", "score": "0.9999", "loss": "0.0002", "code": "@Override public void onActivityResult(int data) { switch(requestCode) { case REQUEST_SPEECH: switch(resultCode) { case Activity.RESULT_OK: setSearchQuery(data, true); break; default: if (FINISH_ON_RECOGNIZER_CANCELED) { if (!hasResults()) { if (DEBUG) Log.v(TAG, \"Voice search canceled\"); getViewrequestFocus(); } } break; } break; } }", "n_tokens": 130, "n_pass": [50, 3, 3]}
{"time": "2021-02-16 10:34:25.653415", "score": "0.9999", "loss": "0.0003", "code": "@Override public void onActivityResult(int data) { switch(requestCode) { case REQUEST_SPEECH: switch(resultCode) { case Activity.RESULT_OK: setSearchQuery(data, true);  if (FINISH_ON_RECOGNIZER_CANCELED) { if (!hasResults()) { if (DEBUG) Log.v(TAG, \"Voice search canceled\"); getViewrequestFocus(); } } break; } break; } }", "n_tokens": 125, "n_pass": [98, 4, 4]}
{"time": "2021-02-16 10:34:28.237890", "score": "0.9999", "loss": "0.0003", "code": "@Override public void onActivityResult(int data) { switch(requestCode) { case REQUEST_SPEECH: switch(resultCode) { case Activity.RESULT_OK: setSearchQuery(data, true);  if (FINISHCANCELED) { if (!hasResults()) { if (DEBUG) Log.v(TAG, \"Voice search canceled\"); getViewrequestFocus(); } } break; } break; } }", "n_tokens": 120, "n_pass": [100, 5, 5]}
{"time": "2021-02-16 10:34:30.825685", "score": "0.9999", "loss": "0.0003", "code": "@Override public void onActivityResult(int data) { switch(requestCode) { case REQUEST_SPEECH: switch(resultCode) { case Activity.RESULT_OK: setSearchQuery(data, true);  if (FINISHCANCELED) { if (!hasResults()) { if (DEBUG) Log.v(TAG, \"\"); getViewrequestFocus(); } } break; } break; } }", "n_tokens": 115, "n_pass": [107, 6, 6]}
{"time": "2021-02-16 10:34:33.379646", "score": "0.9999", "loss": "0.0003", "code": "void onActivityResult(int data) { switch(requestCode) { case REQUEST_SPEECH: switch(resultCode) { case Activity.RESULT_OK: setSearchQuery(data, true);  if (FINISHCANCELED) { if (!hasResults()) { if (DEBUG) Log.v(TAG, \"\"); getViewrequestFocus(); } } break; } break; } }", "n_tokens": 110, "n_pass": [113, 7, 7]}
{"time": "2021-02-16 10:34:36.350786", "score": "1.0", "loss": "0.0001", "code": "void onActivityResult(int data) { switch(requestCode) { case SPEECH: switch(resultCode) { case Activity.RESULT_OK: setSearchQuery(data, true);  if (FINISHCANCELED) { if (!hasResults()) { if (DEBUG) Log.v(TAG, \"\"); getViewrequestFocus(); } } break; } break; } }", "n_tokens": 108, "n_pass": [190, 8, 8]}
{"time": "2021-02-16 10:34:38.904372", "score": "1.0", "loss": "0.0001", "code": "void onActivityResult(int data) { switch(requestCode) { case SPEECH: switch(resultCode) { case RESULT_OK: setSearchQuery(data, true);  if (FINISHCANCELED) { if (!hasResults()) { if (DEBUG) Log.v(TAG, \"\"); getViewrequestFocus(); } } break; } break; } }", "n_tokens": 106, "n_pass": [197, 9, 9]}
{"time": "2021-02-16 10:34:41.451331", "score": "0.9999", "loss": "0.0002", "code": "void onActivityResult(int data) { switch(requestCode) { case SPEECH: switch(resultCode) { case OK: setSearchQuery(data, true);  if (FINISHCANCELED) { if (!hasResults()) { if (DEBUG) Log.v(TAG, \"\"); getViewrequestFocus(); } } break; } break; } }", "n_tokens": 104, "n_pass": [198, 10, 10]}
{"time": "2021-02-16 10:34:44.000603", "score": "0.9996", "loss": "0.0009", "code": "void onActivityResult(int data) { switch(requestCode) { case SPEECH: switch(resultCode) { case OK: setSearchQuery(data);  if (FINISHCANCELED) { if (!hasResults()) { if (DEBUG) Log.v(TAG, \"\"); getViewrequestFocus(); } } break; } break; } }", "n_tokens": 101, "n_pass": [202, 11, 11]}
{"time": "2021-02-16 10:34:46.563751", "score": "0.9996", "loss": "0.0009", "code": "void onActivityResult(int data) { switch(requestCode) { case SPEECH: switch(resultCode) { case OK: setSearchQuery(data);  if (FINISHCANCELED) { if (!hasResults()) { if (DEBUG) Log.v(TAG, \"\"); getViewrequestFocus(); } } } break; } }", "n_tokens": 98, "n_pass": [220, 12, 12]}
{"time": "2021-02-16 10:34:49.136967", "score": "0.9996", "loss": "0.0009", "code": "void onActivityResult(int data) { switch(requestCode) { case SPEECH: switch(resultCode) { case OK: setSearchQuery(data);  if (FINISHCANCELED) { if (!hasResults()) { if (DEBUG) Log.v(TAG, \"\"); getViewrequestFocus(); } } } } }", "n_tokens": 95, "n_pass": [222, 13, 13]}
{"time": "2021-02-16 10:34:52.072803", "score": "0.9915", "loss": "0.0183", "code": "void onActivityResult(int data) { switch(requestCode) { case SPEECH: switch(resultCode) { case OK:(data);  if (FINISHCANCELED) { if (!hasResults()) { if (DEBUG) Log.v(TAG, \"\"); getViewrequestFocus(); } } } } }", "n_tokens": 93, "n_pass": [241, 14, 14]}
{"time": "2021-02-16 10:35:01.363403", "score": "0.9915", "loss": "0.0183", "code": "void onActivityResult(int data) { switch(requestCode) { case SPEECH: switch(resultCode) { case OK:(data); if (FINISHCANCELED) { if (!hasResults()) { if (DEBUG) Log.v(TAG, \"\"); getViewrequestFocus(); } } } } }", "n_tokens": 92, "n_pass": [357, 15, 15]}
{"time": "2021-02-16 10:35:03.913210", "score": "0.9915", "loss": "0.0183", "code": "void onActivityResult(int data) { switch(requestCode) { case SPEECH: switch(resultCode) { case OK:(data);if (FINISHCANCELED) { if (!hasResults()) { if (DEBUG) Log.v(TAG, \"\"); getViewrequestFocus(); } } } } }", "n_tokens": 91, "n_pass": [358, 16, 16]}
{"time": "2021-02-16 10:35:06.480214", "score": "0.9915", "loss": "0.0183", "code": "void onActivityResult(int data) { switch(requestCode) { case SPEECH: switch(resultCode) { case OK:(data);if(FINISHCANCELED) { if (!hasResults()) { if (DEBUG) Log.v(TAG, \"\"); getViewrequestFocus(); } } } } }", "n_tokens": 90, "n_pass": [360, 17, 17]}
{"time": "2021-02-16 10:35:11.578762", "score": "0.7523", "loss": "0.4122", "code": "void onActivityResult(int data) { switch(requestCode) { case SPEECH: switch(resultCode) { case OK:(data);if(FINISH) { if (!hasResults()) { if (DEBUG) Log.v(TAG, \"\"); getViewrequestFocus(); } } } } }", "n_tokens": 89, "n_pass": [363, 19, 18]}
{"time": "2021-02-16 10:35:14.210547", "score": "0.7523", "loss": "0.4122", "code": "void onActivityResult(int data) { switch(requestCode) { case SPEECH: switch(resultCode) { case OK:(data);if(FINISH){ if (!hasResults()) { if (DEBUG) Log.v(TAG, \"\"); getViewrequestFocus(); } } } } }", "n_tokens": 88, "n_pass": [365, 20, 19]}
{"time": "2021-02-16 10:35:16.754714", "score": "0.7523", "loss": "0.4122", "code": "void onActivityResult(int data) { switch(requestCode) { case SPEECH: switch(resultCode) { case OK:(data);if(FINISH){if (!hasResults()) { if (DEBUG) Log.v(TAG, \"\"); getViewrequestFocus(); } } } } }", "n_tokens": 87, "n_pass": [367, 21, 20]}
{"time": "2021-02-16 10:35:19.309808", "score": "0.7523", "loss": "0.4122", "code": "void onActivityResult(int data) { switch(requestCode) { case SPEECH: switch(resultCode) { case OK:(data);if(FINISH){if(!hasResults()) { if (DEBUG) Log.v(TAG, \"\"); getViewrequestFocus(); } } } } }", "n_tokens": 86, "n_pass": [369, 22, 21]}
{"time": "2021-02-16 10:35:21.870635", "score": "0.7546", "loss": "0.4044", "code": "void onActivityResult(int data) { switch(requestCode) { case SPEECH: switch(resultCode) { case OK:(data);if(FINISH){if(hasResults()) { if (DEBUG) Log.v(TAG, \"\"); getViewrequestFocus(); } } } } }", "n_tokens": 85, "n_pass": [371, 23, 22]}
{"time": "2021-02-16 10:35:24.802721", "score": "0.7155", "loss": "0.4956", "code": "void onActivityResult(int data) { switch(requestCode) { case SPEECH: switch(resultCode) { case OK:(data);if(FINISH){if(hasResults()) { if (DEBUG) Log(TAG, \"\"); getViewrequestFocus(); } } } } }", "n_tokens": 83, "n_pass": [380, 24, 23]}
{"time": "2021-02-16 10:35:27.364399", "score": "0.6773", "loss": "0.5836", "code": "void onActivityResult(int data) { switch(requestCode) { case SPEECH: switch(resultCode) { case OK:(data);if(FINISH){if(hasResults()) { if (DEBUG) Log(TAG, \"\");requestFocus(); } } } } }", "n_tokens": 81, "n_pass": [385, 25, 24]}
{"time": "2021-02-16 10:35:30.668882", "score": "0.6773", "loss": "0.5836", "code": "void onActivityResult(int data){ switch(requestCode) { case SPEECH: switch(resultCode) { case OK:(data);if(FINISH){if(hasResults()) { if (DEBUG) Log(TAG, \"\");requestFocus(); } } } } }", "n_tokens": 80, "n_pass": [401, 26, 25]}
{"time": "2021-02-16 10:35:33.244825", "score": "0.6773", "loss": "0.5836", "code": "void onActivityResult(int data){switch(requestCode) { case SPEECH: switch(resultCode) { case OK:(data);if(FINISH){if(hasResults()) { if (DEBUG) Log(TAG, \"\");requestFocus(); } } } } }", "n_tokens": 79, "n_pass": [403, 27, 26]}
{"time": "2021-02-16 10:35:35.801168", "score": "0.6773", "loss": "0.5836", "code": "void onActivityResult(int data){switch(requestCode){ case SPEECH: switch(resultCode) { case OK:(data);if(FINISH){if(hasResults()) { if (DEBUG) Log(TAG, \"\");requestFocus(); } } } } }", "n_tokens": 78, "n_pass": [408, 28, 27]}
{"time": "2021-02-16 10:35:38.336229", "score": "0.6773", "loss": "0.5836", "code": "void onActivityResult(int data){switch(requestCode){case SPEECH: switch(resultCode) { case OK:(data);if(FINISH){if(hasResults()) { if (DEBUG) Log(TAG, \"\");requestFocus(); } } } } }", "n_tokens": 77, "n_pass": [410, 29, 28]}
{"time": "2021-02-16 10:35:40.875567", "score": "0.6773", "loss": "0.5836", "code": "void onActivityResult(int data){switch(requestCode){case SPEECH:switch(resultCode) { case OK:(data);if(FINISH){if(hasResults()) { if (DEBUG) Log(TAG, \"\");requestFocus(); } } } } }", "n_tokens": 76, "n_pass": [415, 30, 29]}
{"time": "2021-02-16 10:35:43.425402", "score": "0.6773", "loss": "0.5836", "code": "void onActivityResult(int data){switch(requestCode){case SPEECH:switch(resultCode){ case OK:(data);if(FINISH){if(hasResults()) { if (DEBUG) Log(TAG, \"\");requestFocus(); } } } } }", "n_tokens": 75, "n_pass": [420, 31, 30]}
{"time": "2021-02-16 10:35:45.969132", "score": "0.6773", "loss": "0.5836", "code": "void onActivityResult(int data){switch(requestCode){case SPEECH:switch(resultCode){case OK:(data);if(FINISH){if(hasResults()) { if (DEBUG) Log(TAG, \"\");requestFocus(); } } } } }", "n_tokens": 74, "n_pass": [422, 32, 31]}
{"time": "2021-02-16 10:35:53.961280", "score": "0.6773", "loss": "0.5836", "code": "void onActivityResult(int data){switch(requestCode){case SPEECH:switch(resultCode){case OK:(data);if(FINISH){if(hasResults()){ if (DEBUG) Log(TAG, \"\");requestFocus(); } } } } }", "n_tokens": 73, "n_pass": [516, 33, 32]}
{"time": "2021-02-16 10:35:56.504220", "score": "0.6773", "loss": "0.5836", "code": "void onActivityResult(int data){switch(requestCode){case SPEECH:switch(resultCode){case OK:(data);if(FINISH){if(hasResults()){if (DEBUG) Log(TAG, \"\");requestFocus(); } } } } }", "n_tokens": 72, "n_pass": [517, 34, 33]}
{"time": "2021-02-16 10:35:59.424970", "score": "0.6773", "loss": "0.5836", "code": "void onActivityResult(int data){switch(requestCode){case SPEECH:switch(resultCode){case OK:(data);if(FINISH){if(hasResults()){if(DEBUG) Log(TAG, \"\");requestFocus(); } } } } }", "n_tokens": 71, "n_pass": [519, 35, 34]}
{"time": "2021-02-16 10:36:01.988900", "score": "0.6773", "loss": "0.5836", "code": "void onActivityResult(int data){switch(requestCode){case SPEECH:switch(resultCode){case OK:(data);if(FINISH){if(hasResults()){if(DEBUG)Log(TAG, \"\");requestFocus(); } } } } }", "n_tokens": 70, "n_pass": [523, 36, 35]}
{"time": "2021-02-16 10:36:04.541186", "score": "0.6773", "loss": "0.5836", "code": "void onActivityResult(int data){switch(requestCode){case SPEECH:switch(resultCode){case OK:(data);if(FINISH){if(hasResults()){if(DEBUG)Log(TAG,\"\");requestFocus(); } } } } }", "n_tokens": 69, "n_pass": [528, 37, 36]}
{"time": "2021-02-16 10:36:07.084896", "score": "0.6773", "loss": "0.5836", "code": "void onActivityResult(int data){switch(requestCode){case SPEECH:switch(resultCode){case OK:(data);if(FINISH){if(hasResults()){if(DEBUG)Log(TAG,\"\");requestFocus();} } } } }", "n_tokens": 68, "n_pass": [537, 38, 37]}
{"time": "2021-02-16 10:36:09.638722", "score": "0.6773", "loss": "0.5836", "code": "void onActivityResult(int data){switch(requestCode){case SPEECH:switch(resultCode){case OK:(data);if(FINISH){if(hasResults()){if(DEBUG)Log(TAG,\"\");requestFocus();}} } } }", "n_tokens": 67, "n_pass": [539, 39, 38]}
{"time": "2021-02-16 10:36:12.210296", "score": "0.6773", "loss": "0.5836", "code": "void onActivityResult(int data){switch(requestCode){case SPEECH:switch(resultCode){case OK:(data);if(FINISH){if(hasResults()){if(DEBUG)Log(TAG,\"\");requestFocus();}}} } }", "n_tokens": 66, "n_pass": [541, 40, 39]}
{"time": "2021-02-16 10:36:14.753799", "score": "0.6773", "loss": "0.5836", "code": "void onActivityResult(int data){switch(requestCode){case SPEECH:switch(resultCode){case OK:(data);if(FINISH){if(hasResults()){if(DEBUG)Log(TAG,\"\");requestFocus();}}}} }", "n_tokens": 65, "n_pass": [543, 41, 40]}
{"time": "2021-02-16 10:36:17.308741", "score": "0.6773", "loss": "0.5836", "code": "void onActivityResult(int data){switch(requestCode){case SPEECH:switch(resultCode){case OK:(data);if(FINISH){if(hasResults()){if(DEBUG)Log(TAG,\"\");requestFocus();}}}}}", "n_tokens": 64, "n_pass": [545, 42, 41]}

Minimal simplified code:
void onActivityResult(int data){switch(requestCode){case SPEECH:switch(resultCode){case OK:(data);if(FINISH){if(hasResults()){if(DEBUG)Log(TAG,"");requestFocus();}}}}}

