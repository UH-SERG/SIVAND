
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/kaazing__gateway/transport/http/src/test/java/org/kaazing/gateway/transport/http/security/auth/challenge/TokenHttpChallengeFactoryTest_setUp.java
method_name = setUp
method_body = @Before public void setUp() throws Exception { factory = new TokenHttpChallengeFactory(); context = new Mockery() { { setImposteriser(ClassImposteriser.INSTANCE); } }; }
predict, score, loss = setUp, 0.9991410970687866, 0.000888191512785852

Trace of simplified code(s):
{"time": "2021-02-16 12:25:25.802918", "score": "0.9991", "loss": "0.0009", "code": "@Before public void setUp() throws Exception { factory = new TokenHttpChallengeFactory(); context = new Mockery() { { setImposteriser(ClassImposteriser.INSTANCE); } }; }", "n_tokens": 56, "n_pass": [1, 1, 1]}
{"time": "2021-02-16 12:25:29.126475", "score": "0.991", "loss": "0.0097", "code": "@Before public void setUp() throws Exception { factory = context = new Mockery() { { setImposteriser(ClassImposteriser.INSTANCE); } }; }", "n_tokens": 49, "n_pass": [23, 2, 2]}
{"time": "2021-02-16 12:25:31.648856", "score": "0.7836", "loss": "0.2529", "code": "@Before public void setUp() throws Exception { factory = context = new Mockery() { {  } }; }", "n_tokens": 42, "n_pass": [26, 3, 3]}
{"time": "2021-02-16 12:25:37.454826", "score": "0.9932", "loss": "0.007", "code": "@Before public void setUp() throws Exception { factory = new Mockery() { {  } }; }", "n_tokens": 38, "n_pass": [53, 5, 4]}
{"time": "2021-02-16 12:25:39.977078", "score": "0.7911", "loss": "0.2347", "code": "public void setUp() throws Exception { factory = new Mockery() { {  } }; }", "n_tokens": 35, "n_pass": [59, 6, 5]}
{"time": "2021-02-16 12:25:43.954949", "score": "0.7911", "loss": "0.2347", "code": " void setUp() throws Exception { factory = new Mockery() { {  } }; }", "n_tokens": 34, "n_pass": [90, 7, 6]}
{"time": "2021-02-16 12:25:46.469487", "score": "0.7911", "loss": "0.2347", "code": "void setUp() throws Exception { factory = new Mockery() { {  } }; }", "n_tokens": 33, "n_pass": [91, 8, 7]}
{"time": "2021-02-16 12:25:49.374921", "score": "0.7911", "loss": "0.2347", "code": "void setUp() throws Exception { factory = new Mockery() { {} }; }", "n_tokens": 31, "n_pass": [105, 9, 8]}
{"time": "2021-02-16 12:25:56.843389", "score": "0.7911", "loss": "0.2347", "code": "void setUp() throws Exception { factory = new Mockery() { {}}; }", "n_tokens": 30, "n_pass": [152, 10, 9]}
{"time": "2021-02-16 12:25:59.361818", "score": "0.7911", "loss": "0.2347", "code": "void setUp() throws Exception { factory = new Mockery() { {}};}", "n_tokens": 29, "n_pass": [155, 11, 10]}
{"time": "2021-02-16 12:26:02.619495", "score": "0.7911", "loss": "0.2347", "code": "void setUp()throws Exception { factory = new Mockery() { {}};}", "n_tokens": 28, "n_pass": [162, 12, 11]}
{"time": "2021-02-16 12:26:05.158266", "score": "0.7911", "loss": "0.2347", "code": "void setUp()throws Exception{ factory = new Mockery() { {}};}", "n_tokens": 27, "n_pass": [166, 13, 12]}
{"time": "2021-02-16 12:26:07.669533", "score": "0.7911", "loss": "0.2347", "code": "void setUp()throws Exception{factory = new Mockery() { {}};}", "n_tokens": 26, "n_pass": [168, 14, 13]}
{"time": "2021-02-16 12:26:10.182820", "score": "0.7911", "loss": "0.2347", "code": "void setUp()throws Exception{factory= new Mockery() { {}};}", "n_tokens": 25, "n_pass": [170, 15, 14]}
{"time": "2021-02-16 12:26:12.719826", "score": "0.7911", "loss": "0.2347", "code": "void setUp()throws Exception{factory=new Mockery() { {}};}", "n_tokens": 24, "n_pass": [172, 16, 15]}
{"time": "2021-02-16 12:26:15.232013", "score": "0.7911", "loss": "0.2347", "code": "void setUp()throws Exception{factory=new Mockery(){ {}};}", "n_tokens": 23, "n_pass": [178, 17, 16]}
{"time": "2021-02-16 12:26:17.749704", "score": "0.7911", "loss": "0.2347", "code": "void setUp()throws Exception{factory=new Mockery(){{}};}", "n_tokens": 22, "n_pass": [180, 18, 17]}

Minimal simplified code:
void setUp()throws Exception{factory=new Mockery(){{}};}

