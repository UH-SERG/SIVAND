
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/wildfly__jandex/src/main/java/org/jboss/jandex/StrongInternPool_writeObject.java
method_name = writeObject
method_body = private void writeObject(java.io.ObjectOutputStream s) throws IOException { s.defaultWriteObject(); s.writeInt(size); for (Object e : table) { if (e != null) { s.writeObject(unmaskNull(e)); } } }
predict, score, loss = writeObject, 0.9989051818847656, 0.001096005435101688

Trace of simplified code(s):
{"time": "2021-02-14 23:27:23.264445", "score": "0.9989", "loss": "0.0011", "code": "private void writeObject(java.io.ObjectOutputStream s) throws IOException { s.defaultWriteObject(); s.writeInt(size); for (Object e : table) { if (e != null) { s.writeObject(unmaskNull(e)); } } }", "n_tokens": 79, "n_pass": [1, 1, 1]}
{"time": "2021-02-14 23:27:26.761920", "score": "0.9953", "loss": "0.0048", "code": "private void writeObject(java.io.ObjectOutputStream s){ s.defaultWriteObject(); s.writeInt(size); for (Object e : table) { if (e != null) { s.writeObject(unmaskNull(e)); } } }", "n_tokens": 74, "n_pass": [47, 2, 2]}
{"time": "2021-02-14 23:27:29.433017", "score": "0.8946", "loss": "0.1114", "code": "private void writeObject(java.io.ObjectOutputStream s){ s.defaultWriteObject.writeInt(size); for (Object e : table) { if (e != null) { s.writeObject(unmaskNull(e)); } } }", "n_tokens": 69, "n_pass": [49, 3, 3]}
{"time": "2021-02-14 23:27:32.070609", "score": "0.995", "loss": "0.005", "code": "private void writeObject(java.io.ObjectOutputStream s){ s.defaultWriteObject; for (Object e : table) { if (e != null) { s.writeObject(unmaskNull(e)); } } }", "n_tokens": 64, "n_pass": [50, 4, 4]}
{"time": "2021-02-14 23:27:34.718403", "score": "0.9938", "loss": "0.0062", "code": "private void writeObject(java.io.ObjectOutputStream s){ s.defaultWriteObject; for (Object e : table) { if (e) { s.writeObject(unmaskNull(e)); } } }", "n_tokens": 59, "n_pass": [55, 5, 5]}
{"time": "2021-02-14 23:27:37.830052", "score": "0.9938", "loss": "0.0062", "code": "void writeObject(java.io.ObjectOutputStream s){ s.defaultWriteObject; for (Object e : table) { if (e) { s.writeObject(unmaskNull(e)); } } }", "n_tokens": 57, "n_pass": [100, 6, 6]}
{"time": "2021-02-14 23:27:40.494379", "score": "0.9807", "loss": "0.0195", "code": "void writeObject(io.ObjectOutputStream s){ s.defaultWriteObject; for (Object e : table) { if (e) { s.writeObject(unmaskNull(e)); } } }", "n_tokens": 55, "n_pass": [102, 7, 7]}
{"time": "2021-02-14 23:27:43.167377", "score": "1.0", "loss": "0.0", "code": "void writeObject(ObjectOutputStream s){ s.defaultWriteObject; for (Object e : table) { if (e) { s.writeObject(unmaskNull(e)); } } }", "n_tokens": 53, "n_pass": [103, 8, 8]}
{"time": "2021-02-14 23:27:45.833304", "score": "1.0", "loss": "0.0", "code": "void writeObject(ObjectOutputStream s){ defaultWriteObject; for (Object e : table) { if (e) { s.writeObject(unmaskNull(e)); } } }", "n_tokens": 51, "n_pass": [107, 9, 9]}
{"time": "2021-02-14 23:27:48.490889", "score": "0.9027", "loss": "0.1118", "code": "void writeObject(ObjectOutputStream s){  for (Object e : table) { if (e) { s.writeObject(unmaskNull(e)); } } }", "n_tokens": 49, "n_pass": [108, 10, 10]}
{"time": "2021-02-14 23:27:55.671931", "score": "0.9027", "loss": "0.1118", "code": "void writeObject(ObjectOutputStream s){ for (Object e : table) { if (e) { s.writeObject(unmaskNull(e)); } } }", "n_tokens": 48, "n_pass": [166, 11, 11]}
{"time": "2021-02-14 23:27:58.321090", "score": "0.9027", "loss": "0.1118", "code": "void writeObject(ObjectOutputStream s){ for(Object e : table) { if (e) { s.writeObject(unmaskNull(e)); } } }", "n_tokens": 47, "n_pass": [167, 12, 12]}
{"time": "2021-02-14 23:28:00.994875", "score": "0.9027", "loss": "0.1118", "code": "void writeObject(ObjectOutputStream s){ for(Object e: table) { if (e) { s.writeObject(unmaskNull(e)); } } }", "n_tokens": 46, "n_pass": [172, 13, 13]}
{"time": "2021-02-14 23:28:03.662482", "score": "0.9027", "loss": "0.1118", "code": "void writeObject(ObjectOutputStream s){ for(Object e:table) { if (e) { s.writeObject(unmaskNull(e)); } } }", "n_tokens": 45, "n_pass": [174, 14, 14]}
{"time": "2021-02-14 23:28:06.306254", "score": "0.9027", "loss": "0.1118", "code": "void writeObject(ObjectOutputStream s){ for(Object e:table){ if (e) { s.writeObject(unmaskNull(e)); } } }", "n_tokens": 44, "n_pass": [177, 15, 15]}
{"time": "2021-02-14 23:28:08.969977", "score": "0.9027", "loss": "0.1118", "code": "void writeObject(ObjectOutputStream s){ for(Object e:table){if (e) { s.writeObject(unmaskNull(e)); } } }", "n_tokens": 43, "n_pass": [179, 16, 16]}
{"time": "2021-02-14 23:28:11.632526", "score": "0.9027", "loss": "0.1118", "code": "void writeObject(ObjectOutputStream s){ for(Object e:table){if(e) { s.writeObject(unmaskNull(e)); } } }", "n_tokens": 42, "n_pass": [181, 17, 17]}
{"time": "2021-02-14 23:28:14.287201", "score": "0.9587", "loss": "0.0495", "code": "void writeObject(ObjectOutputStream s){ for(Object e:table){if(e) { writeObject(unmaskNull(e)); } } }", "n_tokens": 40, "n_pass": [185, 18, 18]}
{"time": "2021-02-14 23:28:17.781544", "score": "0.9587", "loss": "0.0495", "code": "void writeObject(ObjectOutputStream s){for(Object e:table){if(e) { writeObject(unmaskNull(e)); } } }", "n_tokens": 39, "n_pass": [202, 19, 19]}
{"time": "2021-02-14 23:28:23.529991", "score": "0.9587", "loss": "0.0495", "code": "void writeObject(ObjectOutputStream s){for(Object e:table){if(e){ writeObject(unmaskNull(e)); } } }", "n_tokens": 38, "n_pass": [255, 20, 20]}
{"time": "2021-02-14 23:28:26.203484", "score": "0.9587", "loss": "0.0495", "code": "void writeObject(ObjectOutputStream s){for(Object e:table){if(e){writeObject(unmaskNull(e)); } } }", "n_tokens": 37, "n_pass": [257, 21, 21]}
{"time": "2021-02-14 23:28:28.850177", "score": "0.957", "loss": "0.0476", "code": "void writeObject(ObjectOutputStream s){for(Object e:table){if(e){(unmaskNull(e)); } } }", "n_tokens": 36, "n_pass": [258, 22, 22]}
{"time": "2021-02-14 23:28:31.505388", "score": "0.9853", "loss": "0.0162", "code": "void writeObject(ObjectOutputStream s){for(Object e:table){if(e){((e)); } } }", "n_tokens": 35, "n_pass": [260, 23, 23]}
{"time": "2021-02-14 23:28:34.156592", "score": "0.9853", "loss": "0.0162", "code": "void writeObject(ObjectOutputStream s){for(Object e:table){if(e){((e));} } }", "n_tokens": 34, "n_pass": [266, 24, 24]}
{"time": "2021-02-14 23:28:36.792334", "score": "0.9853", "loss": "0.0162", "code": "void writeObject(ObjectOutputStream s){for(Object e:table){if(e){((e));}} }", "n_tokens": 33, "n_pass": [268, 25, 25]}
{"time": "2021-02-14 23:28:39.433079", "score": "0.9853", "loss": "0.0162", "code": "void writeObject(ObjectOutputStream s){for(Object e:table){if(e){((e));}}}", "n_tokens": 32, "n_pass": [270, 26, 26]}

Minimal simplified code:
void writeObject(ObjectOutputStream s){for(Object e:table){if(e){((e));}}}

