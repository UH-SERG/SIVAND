
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/CogComp__cogcomp-nlp/chunker/src/main/java/edu/illinois/cs/cogcomp/chunker/main/ChunkTester_main.java
method_name = main
method_body = public static void main(String[] args) { if (args.length > 3) { logger.info("Usage: ...ChunkTester testIn.txt [modelDir] [modelName]"); return; } String testFileName = args[0]; logger.info("Test file: " + testFileName); if (args.length == 1) { chunkTester(testFileName); } else { chunkTester(testFileName, args[1], args[2]); } }
predict, score, loss = main, 0.9999525547027588, 4.8874615458771586e-05

Trace of simplified code(s):
{"time": "2021-02-16 05:10:57.130915", "score": "0.9999", "loss": "0.0001", "code": "public static void main(String[] args) { if (args.length > 3) { logger.info(\"Usage: ...ChunkTester testIn.txt [modelDir] [modelName]\"); return; } String testFileName = args[0]; logger.info(\"Test file: \" + testFileName); if (args.length == 1) { chunkTester(testFileName); } else { chunkTester(testFileName, args[1], args[2]); } }", "n_tokens": 142, "n_pass": [1, 1, 1]}
{"time": "2021-02-16 05:10:59.772008", "score": "1.0", "loss": "0.0", "code": "public static void main(String[] args) { if (args.length > 3) { logger.info(\"Usage: ...ChunkTester[modelName]\"); return; } String testFileName = args[0]; logger.info(\"Test file: \" + testFileName); if (args.length == 1) { chunkTester(testFileName); } else { chunkTester(testFileName, args[1], args[2]); } }", "n_tokens": 133, "n_pass": [49, 2, 2]}
{"time": "2021-02-16 05:11:02.366218", "score": "0.9999", "loss": "0.0001", "code": "public static void main(String[] args) { if (args.length > 3) { logger.info(\"Usage: ...ChunkTester[modelName]\"); return; } String testFileName = (\"Test file: \" + testFileName); if (args.length == 1) { chunkTester(testFileName); } else { chunkTester(testFileName, args[1], args[2]); } }", "n_tokens": 124, "n_pass": [52, 3, 3]}
{"time": "2021-02-16 05:11:04.969355", "score": "0.9997", "loss": "0.0004", "code": "public static void main(String[] args) { if (args.length > 3) { logger.info(\"Usage: ...ChunkTester[modelName]\"); return; } String testFileName = (\"Test file: \" + testFileName); if (args.length == 1) { chunkTester(testFileName); } else { chunkTester(testFileName[2]); } }", "n_tokens": 115, "n_pass": [58, 4, 4]}
{"time": "2021-02-16 05:11:07.577107", "score": "0.9997", "loss": "0.0004", "code": "void main(String[] args) { if (args.length > 3) { logger.info(\"Usage: ...ChunkTester[modelName]\"); return; } String testFileName = (\"Test file: \" + testFileName); if (args.length == 1) { chunkTester(testFileName); } else { chunkTester(testFileName[2]); } }", "n_tokens": 111, "n_pass": [100, 5, 5]}
{"time": "2021-02-16 05:11:10.181916", "score": "0.9997", "loss": "0.0004", "code": "void main(String[] args) { if (args.length > 3) { logger.info(\"..ChunkTester[modelName]\"); return; } String testFileName = (\"Test file: \" + testFileName); if (args.length == 1) { chunkTester(testFileName); } else { chunkTester(testFileName[2]); } }", "n_tokens": 107, "n_pass": [108, 6, 6]}
{"time": "2021-02-16 05:11:12.768973", "score": "0.9997", "loss": "0.0004", "code": "void main(String[] args) { if (args.length > 3) { logger.info(\"modelName]\"); return; } String testFileName = (\"Test file: \" + testFileName); if (args.length == 1) { chunkTester(testFileName); } else { chunkTester(testFileName[2]); } }", "n_tokens": 103, "n_pass": [109, 7, 7]}
{"time": "2021-02-16 05:11:15.345180", "score": "0.9988", "loss": "0.0012", "code": "void main(String[] args) { if (args.length > 3) { logger.info(\"modelName]\"); return; } String (\"Test file: \" + testFileName); if (args.length == 1) { chunkTester(testFileName); } else { chunkTester(testFileName[2]); } }", "n_tokens": 99, "n_pass": [113, 8, 8]}
{"time": "2021-02-16 05:11:17.927790", "score": "0.9985", "loss": "0.0015", "code": "void main(String[] args) { if (args.length > 3) { logger.info(\"modelName]\"); return; } String (\"Test file: \" + testFileName); if (args.length == 1) {; } else { chunkTester(testFileName[2]); } }", "n_tokens": 94, "n_pass": [120, 9, 9]}
{"time": "2021-02-16 05:11:21.199690", "score": "0.9993", "loss": "0.0007", "code": "void main(String[] args) { if (args.length > 3) { logger.info(\"modelName]\"); return; } String (\"Test file: \" + testFileName); if (args.length == 1) {; } else { chunkTester(testFileName); } }", "n_tokens": 91, "n_pass": [189, 10, 10]}
{"time": "2021-02-16 05:11:24.163952", "score": "0.9982", "loss": "0.0021", "code": "void main(String[] args) { if (length > 3) { logger.info(\"modelName]\"); return; } String (\"Test file: \" + testFileName); if (args.length == 1) {; } else { chunkTester(testFileName); } }", "n_tokens": 89, "n_pass": [200, 11, 11]}
{"time": "2021-02-16 05:11:26.733400", "score": "0.9945", "loss": "0.0074", "code": "void main(String[] args) { if (length > 3) { logger(\"modelName]\"); return; } String (\"Test file: \" + testFileName); if (args.length == 1) {; } else { chunkTester(testFileName); } }", "n_tokens": 87, "n_pass": [206, 12, 12]}
{"time": "2021-02-16 05:11:29.302947", "score": "0.9905", "loss": "0.0099", "code": "void main(String[] args) { if (length > 3) { logger(\"\"); return; } String (\"Test file: \" + testFileName); if (args.length == 1) {; } else { chunkTester(testFileName); } }", "n_tokens": 85, "n_pass": [208, 13, 13]}
{"time": "2021-02-16 05:11:31.893204", "score": "0.9905", "loss": "0.0099", "code": "void main(String[] args) { if (length > 3) { logger(\"\");  } String (\"Test file: \" + testFileName); if (args.length == 1) {; } else { chunkTester(testFileName); } }", "n_tokens": 83, "n_pass": [211, 14, 14]}
{"time": "2021-02-16 05:11:34.489820", "score": "0.9983", "loss": "0.0024", "code": "void main(String[] args) { if (length > 3) { logger(\"\");  } (\"Test file: \" + testFileName); if (args.length == 1) {; } else { chunkTester(testFileName); } }", "n_tokens": 81, "n_pass": [213, 15, 15]}
{"time": "2021-02-16 05:11:37.072004", "score": "0.9989", "loss": "0.0016", "code": "void main(String[] args) { if (length > 3) { logger(\"\");  } (\"Test: \" + testFileName); if (args.length == 1) {; } else { chunkTester(testFileName); } }", "n_tokens": 79, "n_pass": [216, 16, 16]}
{"time": "2021-02-16 05:11:39.629554", "score": "0.9989", "loss": "0.0016", "code": "void main(String[] args) { if (length > 3) { logger(\"\");  } (\"Test\" + testFileName); if (args.length == 1) {; } else { chunkTester(testFileName); } }", "n_tokens": 77, "n_pass": [217, 17, 17]}
{"time": "2021-02-16 05:11:42.185971", "score": "0.999", "loss": "0.0014", "code": "void main(String[] args) { if (length > 3) { logger(\"\");  } (\"Test\" + testFileName); if (args== 1) {; } else { chunkTester(testFileName); } }", "n_tokens": 74, "n_pass": [224, 18, 18]}
{"time": "2021-02-16 05:11:44.743030", "score": "0.9987", "loss": "0.0021", "code": "void main(String[] args) { if (length > 3) { logger(\"\");  } (\"Test\" + testFileName); if (args1) {; } else { chunkTester(testFileName); } }", "n_tokens": 71, "n_pass": [225, 19, 19]}
{"time": "2021-02-16 05:11:47.697719", "score": "0.9987", "loss": "0.0019", "code": "void main(String[] args) { if (length > 3) {(\"\");  } (\"Test\" + testFileName); if (args1) {; } else { chunkTester(testFileName); } }", "n_tokens": 69, "n_pass": [245, 20, 20]}
{"time": "2021-02-16 05:11:57.294827", "score": "0.9987", "loss": "0.0019", "code": "void main(String[] args) { if (length > 3) {(\"\"); } (\"Test\" + testFileName); if (args1) {; } else { chunkTester(testFileName); } }", "n_tokens": 68, "n_pass": [344, 21, 21]}
{"time": "2021-02-16 05:11:59.863590", "score": "0.9987", "loss": "0.0019", "code": "void main(String[] args) { if (length > 3) {(\"\");} (\"Test\" + testFileName); if (args1) {; } else { chunkTester(testFileName); } }", "n_tokens": 67, "n_pass": [345, 22, 22]}
{"time": "2021-02-16 05:12:02.423835", "score": "0.9987", "loss": "0.0019", "code": "void main(String[] args) { if (length > 3) {(\"\");}(\"Test\" + testFileName); if (args1) {; } else { chunkTester(testFileName); } }", "n_tokens": 66, "n_pass": [347, 23, 23]}
{"time": "2021-02-16 05:12:04.982115", "score": "0.9986", "loss": "0.002", "code": "void main(String[] args) { if (length > 3) {(\"\");}(\"\" + testFileName); if (args1) {; } else { chunkTester(testFileName); } }", "n_tokens": 65, "n_pass": [350, 24, 24]}
{"time": "2021-02-16 05:12:07.536661", "score": "0.9986", "loss": "0.002", "code": "void main(String[] args) { if (length > 3) {(\"\");}(\"\"+ testFileName); if (args1) {; } else { chunkTester(testFileName); } }", "n_tokens": 64, "n_pass": [352, 25, 25]}
{"time": "2021-02-16 05:12:10.119765", "score": "0.9986", "loss": "0.002", "code": "void main(String[] args) { if (length > 3) {(\"\");}(\"\"+testFileName); if (args1) {; } else { chunkTester(testFileName); } }", "n_tokens": 63, "n_pass": [354, 26, 26]}
{"time": "2021-02-16 05:12:12.675937", "score": "0.9986", "loss": "0.002", "code": "void main(String[] args) { if (length > 3) {(\"\");}(\"\"+testFileName);if (args1) {; } else { chunkTester(testFileName); } }", "n_tokens": 62, "n_pass": [358, 27, 27]}
{"time": "2021-02-16 05:12:15.231354", "score": "0.9986", "loss": "0.002", "code": "void main(String[] args) { if (length > 3) {(\"\");}(\"\"+testFileName);if(args1) {; } else { chunkTester(testFileName); } }", "n_tokens": 61, "n_pass": [360, 28, 28]}
{"time": "2021-02-16 05:12:17.787534", "score": "0.9973", "loss": "0.0031", "code": "void main(String[] args) { if (length > 3) {(\"\");}(\"\"+testFileName);if(1) {; } else { chunkTester(testFileName); } }", "n_tokens": 60, "n_pass": [362, 29, 29]}
{"time": "2021-02-16 05:12:20.360695", "score": "0.9973", "loss": "0.0031", "code": "void main(String[] args) { if (length > 3) {(\"\");}(\"\"+testFileName);if(1){; } else { chunkTester(testFileName); } }", "n_tokens": 59, "n_pass": [365, 30, 30]}
{"time": "2021-02-16 05:12:22.924869", "score": "0.9973", "loss": "0.0031", "code": "void main(String[] args) { if (length > 3) {(\"\");}(\"\"+testFileName);if(1){ } else { chunkTester(testFileName); } }", "n_tokens": 58, "n_pass": [367, 31, 31]}
{"time": "2021-02-16 05:12:25.466952", "score": "0.9973", "loss": "0.0031", "code": "void main(String[] args) { if (length > 3) {(\"\");}(\"\"+testFileName);if(1){} else { chunkTester(testFileName); } }", "n_tokens": 57, "n_pass": [368, 32, 32]}
{"time": "2021-02-16 05:12:28.008446", "score": "1.0", "loss": "0.0", "code": "void main(String[] args) { if (length > 3) {(\"\");}(\"\"+testFileName);if(1){} { chunkTester(testFileName); } }", "n_tokens": 55, "n_pass": [370, 33, 33]}
{"time": "2021-02-16 05:12:30.543881", "score": "0.9984", "loss": "0.0022", "code": "void main(String[] args) { if (length > 3) {(\"\");}(\"\"+testFileName);if(1){} {(testFileName); } }", "n_tokens": 53, "n_pass": [372, 34, 34]}
{"time": "2021-02-16 05:12:33.812871", "score": "0.9984", "loss": "0.0022", "code": "void main(String[]args) { if (length > 3) {(\"\");}(\"\"+testFileName);if(1){} {(testFileName); } }", "n_tokens": 52, "n_pass": [384, 35, 35]}
{"time": "2021-02-16 05:12:36.352939", "score": "0.9984", "loss": "0.0022", "code": "void main(String[]args){ if (length > 3) {(\"\");}(\"\"+testFileName);if(1){} {(testFileName); } }", "n_tokens": 51, "n_pass": [387, 36, 36]}
{"time": "2021-02-16 05:12:38.899361", "score": "0.9984", "loss": "0.0022", "code": "void main(String[]args){if (length > 3) {(\"\");}(\"\"+testFileName);if(1){} {(testFileName); } }", "n_tokens": 50, "n_pass": [389, 37, 37]}
{"time": "2021-02-16 05:12:41.471098", "score": "0.9984", "loss": "0.0022", "code": "void main(String[]args){if(length > 3) {(\"\");}(\"\"+testFileName);if(1){} {(testFileName); } }", "n_tokens": 49, "n_pass": [391, 38, 38]}
{"time": "2021-02-16 05:12:44.015588", "score": "0.9984", "loss": "0.0022", "code": "void main(String[]args){if(length> 3) {(\"\");}(\"\"+testFileName);if(1){} {(testFileName); } }", "n_tokens": 48, "n_pass": [394, 39, 39]}
{"time": "2021-02-16 05:12:46.568016", "score": "0.9984", "loss": "0.0022", "code": "void main(String[]args){if(length>3) {(\"\");}(\"\"+testFileName);if(1){} {(testFileName); } }", "n_tokens": 47, "n_pass": [396, 40, 40]}
{"time": "2021-02-16 05:12:49.111830", "score": "0.9984", "loss": "0.0022", "code": "void main(String[]args){if(length>3){(\"\");}(\"\"+testFileName);if(1){} {(testFileName); } }", "n_tokens": 46, "n_pass": [399, 41, 41]}
{"time": "2021-02-16 05:12:52.387270", "score": "0.9986", "loss": "0.002", "code": "void main(String[]args){if(length3){(\"\");}(\"\"+testFileName);if(1){} {(testFileName); } }", "n_tokens": 45, "n_pass": [438, 42, 42]}
{"time": "2021-02-16 05:12:54.927900", "score": "0.9986", "loss": "0.002", "code": "void main(String[]args){if(length){(\"\");}(\"\"+testFileName);if(1){} {(testFileName); } }", "n_tokens": 44, "n_pass": [439, 43, 43]}
{"time": "2021-02-16 05:12:59.555329", "score": "0.9986", "loss": "0.002", "code": "void main(String[]args){if(length){(\"\");}(\"\"+testFileName);if(1){}{(testFileName); } }", "n_tokens": 43, "n_pass": [489, 44, 44]}
{"time": "2021-02-16 05:13:02.102745", "score": "0.9986", "loss": "0.002", "code": "void main(String[]args){if(length){(\"\");}(\"\"+testFileName);if(1){}{(testFileName);} }", "n_tokens": 42, "n_pass": [494, 45, 45]}
{"time": "2021-02-16 05:13:04.644879", "score": "0.9986", "loss": "0.002", "code": "void main(String[]args){if(length){(\"\");}(\"\"+testFileName);if(1){}{(testFileName);}}", "n_tokens": 41, "n_pass": [496, 46, 46]}

Minimal simplified code:
void main(String[]args){if(length){("");}(""+testFileName);if(1){}{(testFileName);}}

