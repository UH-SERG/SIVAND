
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/sakaiproject__sakai/rwiki/rwiki-util/jrcs/src/completejava/org/apache/commons/jrcs/rcs/Version_compareTo.java
method_name = compareTo
method_body = public int compareTo(Object other) { if (other == this) { return 0; } else if (!(other instanceof Version)) { throw new IllegalArgumentException(other.toString()); } else { Version otherVer = (Version) other; if (this.size() != otherVer.size()) { return this.size() - otherVer.size(); } else { return -compareVersions(otherVer); } } }
predict, score, loss = compareTo, 0.999997615814209, 3.099436753473128e-06

Trace of simplified code(s):
{"time": "2021-02-16 10:38:53.368894", "score": "1.0", "loss": "0.0", "code": "public int compareTo(Object other) { if (other == this) { return 0; } else if (!(other instanceof Version)) { throw new IllegalArgumentException(other.toString()); } else { Version otherVer = (Version) other; if (this.size() != otherVer.size()) { return this.size() - otherVer.size(); } else { return -compareVersions(otherVer); } } }", "n_tokens": 141, "n_pass": [1, 1, 1]}
{"time": "2021-02-16 10:38:56.325017", "score": "1.0", "loss": "0.0", "code": "public int compareTo(Object other) { if (other == this) { return 0; } else if (!(other instanceof Version)) { throw new IllegalArgumentException(other.toString()); } else { Version otherVer = (Version) other; if (this.size()) { return this.size() - otherVer.size(); } else { return -compareVersions(otherVer); } } }", "n_tokens": 132, "n_pass": [54, 2, 2]}
{"time": "2021-02-16 10:38:58.887906", "score": "0.8415", "loss": "0.1741", "code": "public int compareTo(Object other) { if (other == this) { return 0; } else if (!(other instanceof Version)) { throw new IllegalArgumentException(other.toString()); } else { Version otherVer = (Version) other; if (this.size()) { returnotherVer.size(); } else { return -compareVersions(otherVer); } } }", "n_tokens": 123, "n_pass": [55, 3, 3]}
{"time": "2021-02-16 10:39:01.476740", "score": "0.8653", "loss": "0.1463", "code": "public int compareTo(Object other) { if (other == this) { return 0; } else if (!(other instanceof Version)) { throw new IllegalArgumentException(other.toString()); } else { Version otherVer = (Version) other; if (this.size()) { returnotherVer.size();  return -compareVersions(otherVer); } } }", "n_tokens": 118, "n_pass": [100, 4, 4]}
{"time": "2021-02-16 10:39:04.051515", "score": "0.5698", "loss": "0.564", "code": "public int compareTo(Object other) { if (other == this) { return 0; } else if (!(other instanceof Version)) { throw new IllegalArgumentException(other.toString()); } else { Version otherVer = (Version) other; if (this.size()) { returnotherVer.size(); (otherVer); } } }", "n_tokens": 113, "n_pass": [101, 5, 5]}
{"time": "2021-02-16 10:39:06.609450", "score": "0.5564", "loss": "0.5876", "code": "public int compareTo(Object other) { if (other == this) { return 0; } else if (!(other instanceof Version)) { throw new IllegalArgumentException(other.toString()); } else { Version otherVer = (Version) other; if (this.size()) { returnotherVer.size(); } } }", "n_tokens": 108, "n_pass": [102, 6, 6]}
{"time": "2021-02-16 10:39:09.558886", "score": "0.9895", "loss": "0.0319", "code": "public int compareTo(Object other) { if ( this) { return 0; } else if (!(other instanceof Version)) { throw new IllegalArgumentException(other.toString()); } else { Version otherVer = (Version) other; if (this.size()) { returnotherVer.size(); } } }", "n_tokens": 104, "n_pass": [108, 7, 7]}
{"time": "2021-02-16 10:39:12.124803", "score": "0.9949", "loss": "0.0099", "code": "public int compareTo(Object other) { if ( this) { return 0; } else if (!(Version)) { throw new IllegalArgumentException(other.toString()); } else { Version otherVer = (Version) other; if (this.size()) { returnotherVer.size(); } } }", "n_tokens": 100, "n_pass": [114, 8, 8]}
{"time": "2021-02-16 10:39:15.468867", "score": "0.995", "loss": "0.0096", "code": "public int compareTo(Object other) { if ( this) { return 0; } else if (!(Version)) { new IllegalArgumentException(other.toString()); } else { Version otherVer = (Version) other; if (this.size()) { returnotherVer.size(); } } }", "n_tokens": 98, "n_pass": [187, 9, 9]}
{"time": "2021-02-16 10:39:18.026073", "score": "0.9951", "loss": "0.0098", "code": "public int compareTo(Object other) { if ( this) { return 0; } else if (!(Version)) { IllegalArgumentException(other.toString()); } else { Version otherVer = (Version) other; if (this.size()) { returnotherVer.size(); } } }", "n_tokens": 96, "n_pass": [188, 10, 10]}
{"time": "2021-02-16 10:39:20.574454", "score": "0.9958", "loss": "0.0088", "code": "public int compareTo(Object other) { if ( this) { return 0; } else if (!(Version)) { IllegalArgumentException(toString()); } else { Version otherVer = (Version) other; if (this.size()) { returnotherVer.size(); } } }", "n_tokens": 94, "n_pass": [190, 11, 11]}
{"time": "2021-02-16 10:39:23.120335", "score": "0.8775", "loss": "0.2048", "code": "public int compareTo(Object other) { if ( this) { return 0; } else if (!(Version)) { IllegalArgumentException(toString()); } { Version otherVer = (Version) other; if (this.size()) { returnotherVer.size(); } } }", "n_tokens": 92, "n_pass": [195, 12, 12]}
{"time": "2021-02-16 10:39:25.669073", "score": "0.9705", "loss": "0.0342", "code": "public int compareTo(Object other) { if ( this) { return 0; } else if (!(Version)) { IllegalArgumentException(toString()); } { otherVer = (Version) other; if (this.size()) { returnotherVer.size(); } } }", "n_tokens": 90, "n_pass": [197, 13, 13]}
{"time": "2021-02-16 10:39:28.263728", "score": "0.9705", "loss": "0.0342", "code": "int compareTo(Object other) { if ( this) { return 0; } else if (!(Version)) { IllegalArgumentException(toString()); } { otherVer = (Version) other; if (this.size()) { returnotherVer.size(); } } }", "n_tokens": 88, "n_pass": [212, 14, 14]}
{"time": "2021-02-16 10:39:31.196550", "score": "0.9278", "loss": "0.0901", "code": "int compareTo(Object other) { if ( this) { 0; } else if (!(Version)) { IllegalArgumentException(toString()); } { otherVer = (Version) other; if (this.size()) { returnotherVer.size(); } } }", "n_tokens": 86, "n_pass": [223, 15, 15]}
{"time": "2021-02-16 10:39:33.766522", "score": "0.931", "loss": "0.0858", "code": "int compareTo(Object other) { if ( this) {  } else if (!(Version)) { IllegalArgumentException(toString()); } { otherVer = (Version) other; if (this.size()) { returnotherVer.size(); } } }", "n_tokens": 84, "n_pass": [224, 16, 16]}
{"time": "2021-02-16 10:39:36.313544", "score": "0.9246", "loss": "0.0969", "code": "int compareTo(Object other) { if ( this) {  } if (!(Version)) { IllegalArgumentException(toString()); } { otherVer = (Version) other; if (this.size()) { returnotherVer.size(); } } }", "n_tokens": 82, "n_pass": [226, 17, 17]}
{"time": "2021-02-16 10:39:47.382733", "score": "0.9246", "loss": "0.0969", "code": "int compareTo(Object other) { if ( this) {  }if (!(Version)) { IllegalArgumentException(toString()); } { otherVer = (Version) other; if (this.size()) { returnotherVer.size(); } } }", "n_tokens": 81, "n_pass": [338, 18, 18]}
{"time": "2021-02-16 10:39:49.925311", "score": "0.9246", "loss": "0.0969", "code": "int compareTo(Object other) { if ( this) {  }if(!(Version)) { IllegalArgumentException(toString()); } { otherVer = (Version) other; if (this.size()) { returnotherVer.size(); } } }", "n_tokens": 80, "n_pass": [339, 19, 19]}
{"time": "2021-02-16 10:39:52.475829", "score": "0.923", "loss": "0.099", "code": "int compareTo(Object other) { if ( this) {  }if((Version)) { IllegalArgumentException(toString()); } { otherVer = (Version) other; if (this.size()) { returnotherVer.size(); } } }", "n_tokens": 79, "n_pass": [341, 20, 20]}
{"time": "2021-02-16 10:39:55.022420", "score": "0.923", "loss": "0.099", "code": "int compareTo(Object other) { if ( this) {  }if((Version)){ IllegalArgumentException(toString()); } { otherVer = (Version) other; if (this.size()) { returnotherVer.size(); } } }", "n_tokens": 78, "n_pass": [346, 21, 21]}
{"time": "2021-02-16 10:39:57.589826", "score": "0.923", "loss": "0.099", "code": "int compareTo(Object other) { if ( this) {  }if((Version)){IllegalArgumentException(toString()); } { otherVer = (Version) other; if (this.size()) { returnotherVer.size(); } } }", "n_tokens": 77, "n_pass": [348, 22, 22]}
{"time": "2021-02-16 10:40:00.143457", "score": "0.9239", "loss": "0.0939", "code": "int compareTo(Object other) { if ( this) {  }if((Version)){(toString()); } { otherVer = (Version) other; if (this.size()) { returnotherVer.size(); } } }", "n_tokens": 76, "n_pass": [349, 23, 23]}
{"time": "2021-02-16 10:40:02.710188", "score": "0.9239", "loss": "0.0939", "code": "int compareTo(Object other) { if ( this) {  }if((Version)){(toString());} { otherVer = (Version) other; if (this.size()) { returnotherVer.size(); } } }", "n_tokens": 75, "n_pass": [356, 24, 24]}
{"time": "2021-02-16 10:40:05.249231", "score": "0.9239", "loss": "0.0939", "code": "int compareTo(Object other) { if ( this) {  }if((Version)){(toString());}{ otherVer = (Version) other; if (this.size()) { returnotherVer.size(); } } }", "n_tokens": 74, "n_pass": [358, 25, 25]}
{"time": "2021-02-16 10:40:07.775996", "score": "0.9239", "loss": "0.0939", "code": "int compareTo(Object other) { if ( this) {  }if((Version)){(toString());}{otherVer = (Version) other; if (this.size()) { returnotherVer.size(); } } }", "n_tokens": 73, "n_pass": [360, 26, 26]}
{"time": "2021-02-16 10:40:10.312668", "score": "0.9239", "loss": "0.0939", "code": "int compareTo(Object other) { if ( this) {  }if((Version)){(toString());}{otherVer= (Version) other; if (this.size()) { returnotherVer.size(); } } }", "n_tokens": 72, "n_pass": [362, 27, 27]}
{"time": "2021-02-16 10:40:12.854406", "score": "0.9239", "loss": "0.0939", "code": "int compareTo(Object other) { if ( this) {  }if((Version)){(toString());}{otherVer=(Version) other; if (this.size()) { returnotherVer.size(); } } }", "n_tokens": 71, "n_pass": [364, 28, 28]}
{"time": "2021-02-16 10:40:15.398716", "score": "0.9239", "loss": "0.0939", "code": "int compareTo(Object other) { if ( this) {  }if((Version)){(toString());}{otherVer=(Version)other; if (this.size()) { returnotherVer.size(); } } }", "n_tokens": 70, "n_pass": [368, 29, 29]}
{"time": "2021-02-16 10:40:17.958368", "score": "0.9339", "loss": "0.0836", "code": "int compareTo(Object other) { if ( this) {  }if((Version)){(toString());}{otherVer=(Version); if (this.size()) { returnotherVer.size(); } } }", "n_tokens": 69, "n_pass": [369, 30, 30]}
{"time": "2021-02-16 10:40:20.489978", "score": "0.9339", "loss": "0.0836", "code": "int compareTo(Object other) { if ( this) {  }if((Version)){(toString());}{otherVer=(Version);if (this.size()) { returnotherVer.size(); } } }", "n_tokens": 68, "n_pass": [371, 31, 31]}
{"time": "2021-02-16 10:40:23.048529", "score": "0.9339", "loss": "0.0836", "code": "int compareTo(Object other) { if ( this) {  }if((Version)){(toString());}{otherVer=(Version);if(this.size()) { returnotherVer.size(); } } }", "n_tokens": 67, "n_pass": [373, 32, 32]}
{"time": "2021-02-16 10:40:25.605215", "score": "0.9639", "loss": "0.0461", "code": "int compareTo(Object other) { if ( this) {  }if((Version)){(toString());}{otherVer=(Version);if(thissize()) { returnotherVer.size(); } } }", "n_tokens": 66, "n_pass": [376, 33, 33]}
{"time": "2021-02-16 10:40:28.536531", "score": "0.9741", "loss": "0.0611", "code": "int compareTo(Object other) { if ( this) {  }if((Version)){(toString());}{otherVer=(Version);if(thissize()) {otherVer.size(); } } }", "n_tokens": 64, "n_pass": [382, 34, 34]}
{"time": "2021-02-16 10:40:31.059729", "score": "0.9607", "loss": "0.0452", "code": "int compareTo(Object other) { if ( this) {  }if((Version)){(toString());}{otherVer=(Version);if(thissize()) {size(); } } }", "n_tokens": 62, "n_pass": [383, 35, 35]}
{"time": "2021-02-16 10:40:34.344479", "score": "0.9607", "loss": "0.0452", "code": "int compareTo(Object other){ if ( this) {  }if((Version)){(toString());}{otherVer=(Version);if(thissize()) {size(); } } }", "n_tokens": 61, "n_pass": [397, 36, 36]}
{"time": "2021-02-16 10:40:36.888579", "score": "0.9607", "loss": "0.0452", "code": "int compareTo(Object other){if ( this) {  }if((Version)){(toString());}{otherVer=(Version);if(thissize()) {size(); } } }", "n_tokens": 60, "n_pass": [399, 37, 37]}
{"time": "2021-02-16 10:40:39.417592", "score": "0.9607", "loss": "0.0452", "code": "int compareTo(Object other){if( this) {  }if((Version)){(toString());}{otherVer=(Version);if(thissize()) {size(); } } }", "n_tokens": 59, "n_pass": [401, 38, 38]}
{"time": "2021-02-16 10:40:41.965960", "score": "0.9607", "loss": "0.0452", "code": "int compareTo(Object other){if(this) {  }if((Version)){(toString());}{otherVer=(Version);if(thissize()) {size(); } } }", "n_tokens": 58, "n_pass": [403, 39, 39]}
{"time": "2021-02-16 10:40:44.506866", "score": "0.9607", "loss": "0.0452", "code": "int compareTo(Object other){if(this){  }if((Version)){(toString());}{otherVer=(Version);if(thissize()) {size(); } } }", "n_tokens": 57, "n_pass": [406, 40, 40]}
{"time": "2021-02-16 10:40:47.035881", "score": "0.9607", "loss": "0.0452", "code": "int compareTo(Object other){if(this){ }if((Version)){(toString());}{otherVer=(Version);if(thissize()) {size(); } } }", "n_tokens": 56, "n_pass": [408, 41, 41]}
{"time": "2021-02-16 10:40:49.604793", "score": "0.9607", "loss": "0.0452", "code": "int compareTo(Object other){if(this){}if((Version)){(toString());}{otherVer=(Version);if(thissize()) {size(); } } }", "n_tokens": 55, "n_pass": [409, 42, 42]}
{"time": "2021-02-16 10:40:54.709888", "score": "0.9543", "loss": "0.0531", "code": "int compareTo(Object other){if(this){}if((Version)){(toString());}{otherVer=(Version);if(size()) {size(); } } }", "n_tokens": 54, "n_pass": [434, 44, 43]}
{"time": "2021-02-16 10:41:02.338942", "score": "0.9543", "loss": "0.0531", "code": "int compareTo(Object other){if(this){}if((Version)){(toString());}{otherVer=(Version);if(size()){size(); } } }", "n_tokens": 53, "n_pass": [495, 46, 44]}
{"time": "2021-02-16 10:41:04.892709", "score": "0.9543", "loss": "0.0531", "code": "int compareTo(Object other){if(this){}if((Version)){(toString());}{otherVer=(Version);if(size()){size();} } }", "n_tokens": 52, "n_pass": [500, 47, 45]}
{"time": "2021-02-16 10:41:07.424653", "score": "0.9543", "loss": "0.0531", "code": "int compareTo(Object other){if(this){}if((Version)){(toString());}{otherVer=(Version);if(size()){size();}} }", "n_tokens": 51, "n_pass": [502, 48, 46]}
{"time": "2021-02-16 10:41:09.941376", "score": "0.9543", "loss": "0.0531", "code": "int compareTo(Object other){if(this){}if((Version)){(toString());}{otherVer=(Version);if(size()){size();}}}", "n_tokens": 50, "n_pass": [504, 49, 47]}

Minimal simplified code:
int compareTo(Object other){if(this){}if((Version)){(toString());}{otherVer=(Version);if(size()){size();}}}

