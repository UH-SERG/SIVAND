
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/dronekit__dronekit-android/dependencyLibs/Mavlink/src/com/MAVLink/ardupilotmega/msg_data96_pack.java
method_name = pack
method_body = public MAVLinkPacket pack() { MAVLinkPacket packet = new MAVLinkPacket(MAVLINK_MSG_LENGTH); packet.sysid = 255; packet.compid = 190; packet.msgid = MAVLINK_MSG_ID_DATA96; packet.payload.putUnsignedByte(type); packet.payload.putUnsignedByte(len); for (int i = 0; i < data.length; i++) { packet.payload.putUnsignedByte(data[i]); } return packet; }
predict, score, loss = pack, 0.999817430973053, 0.0005999195855110884

Trace of simplified code(s):
{"time": "2021-02-15 00:18:46.166598", "score": "0.9999", "loss": "0.0002", "code": "public MAVLinkPacket pack() { MAVLinkPacket packet = new MAVLinkPacket(MAVLINK_MSG_LENGTH); packet.sysid = 255; packet.compid = 190; packet.msgid = MAVLINK_MSG_ID_DATA96; packet.payload.putUnsignedByte(type); packet.payload.putUnsignedByte(len); for (int i = 0; i < data.length; i++) { packet.payload.putUnsignedByte(data[i]); } return packet; }", "n_tokens": 136, "n_pass": [1, 1, 1]}
{"time": "2021-02-15 00:18:48.859770", "score": "0.9927", "loss": "0.0379", "code": "public MAVLinkPacket pack() { MAVLinkPacket packet = new255; packet.compid = 190; packet.msgid = MAVLINK_MSG_ID_DATA96; packet.payload.putUnsignedByte(type); packet.payload.putUnsignedByte(len); for (int i = 0; i < data.length; i++) { packet.payload.putUnsignedByte(data[i]); } return packet; }", "n_tokens": 119, "n_pass": [21, 2, 2]}
{"time": "2021-02-15 00:18:51.566589", "score": "0.9245", "loss": "0.1448", "code": "public MAVLinkPacket pack() { MAVLinkPacket packet = new255; packet.compid = 190; packet.payload.putUnsignedByte(type); packet.payload.putUnsignedByte(len); for (int i = 0; i < data.length; i++) { packet.payload.putUnsignedByte(data[i]); } return packet; }", "n_tokens": 102, "n_pass": [23, 3, 3]}
{"time": "2021-02-15 00:18:54.277961", "score": "0.9987", "loss": "0.0024", "code": "public MAVLinkPacket pack() { MAVLinkPacket packet = new255; packet.compid = 190; packet; for (int i = 0; i < data.length; i++) { packet.payload.putUnsignedByte(data[i]); } return packet; }", "n_tokens": 85, "n_pass": [24, 4, 4]}
{"time": "2021-02-15 00:18:57.394518", "score": "0.99", "loss": "0.0332", "code": "public MAVLinkPacket pack() { MAVLinkPacket packet = compid = 190; packet; for (int i = 0; i < data.length; i++) { packet.payload.putUnsignedByte(data[i]); } return packet; }", "n_tokens": 77, "n_pass": [48, 5, 5]}
{"time": "2021-02-15 00:19:00.071939", "score": "0.9934", "loss": "0.0247", "code": "public MAVLinkPacket pack() { MAVLinkPacket packet =  packet; for (int i = 0; i < data.length; i++) { packet.payload.putUnsignedByte(data[i]); } return packet; }", "n_tokens": 69, "n_pass": [49, 6, 6]}
{"time": "2021-02-15 00:19:03.276085", "score": "0.9935", "loss": "0.025", "code": "public MAVLinkPacket pack() { MAVLinkPacket packet =  packet; for (int i = 0; data.length; i++) { packet.payload.putUnsignedByte(data[i]); } return packet; }", "n_tokens": 65, "n_pass": [78, 7, 7]}
{"time": "2021-02-15 00:19:05.975112", "score": "0.9934", "loss": "0.0257", "code": "public MAVLinkPacket pack() { MAVLinkPacket packet =  packet; for (int i = 0; data.length;) { packet.payload.putUnsignedByte(data[i]); } return packet; }", "n_tokens": 61, "n_pass": [80, 8, 8]}
{"time": "2021-02-15 00:19:09.038981", "score": "0.9859", "loss": "0.0492", "code": "public MAVLinkPacket pack() { MAVLinkPacket  packet; for (int i = 0; data.length;) { packet.payload.putUnsignedByte(data[i]); } return packet; }", "n_tokens": 57, "n_pass": [89, 9, 9]}
{"time": "2021-02-15 00:19:12.874968", "score": "0.8481", "loss": "0.8689", "code": "public MAVLinkPacket pack() { MAVLinkPacket ; for (int i = 0; data.length;) { packet.payload.putUnsignedByte(data[i]); } return packet; }", "n_tokens": 55, "n_pass": [129, 10, 10]}
{"time": "2021-02-15 00:19:15.758600", "score": "0.8521", "loss": "0.8405", "code": "public MAVLinkPacket pack() { MAVLinkPacket ; for (int i = 0; length;) { packet.payload.putUnsignedByte(data[i]); } return packet; }", "n_tokens": 53, "n_pass": [136, 11, 11]}
{"time": "2021-02-15 00:19:18.414288", "score": "0.7832", "loss": "1.432", "code": "public MAVLinkPacket pack() { MAVLinkPacket ; for (int i = 0; length;) { payload.putUnsignedByte(data[i]); } return packet; }", "n_tokens": 51, "n_pass": [140, 12, 12]}
{"time": "2021-02-15 00:19:23.734771", "score": "0.3816", "loss": "2.6391", "code": "public MAVLinkPacket pack() { MAVLinkPacket ; for (int i = 0; length;) { payload.putUnsignedByte(data[i]); } ; }", "n_tokens": 48, "n_pass": [146, 14, 13]}
{"time": "2021-02-15 00:19:26.417440", "score": "0.3816", "loss": "2.6391", "code": "MAVLinkPacket pack() { MAVLinkPacket ; for (int i = 0; length;) { payload.putUnsignedByte(data[i]); } ; }", "n_tokens": 46, "n_pass": [148, 15, 14]}
{"time": "2021-02-15 00:19:29.589855", "score": "0.2662", "loss": "3.16", "code": "MAVLinkPacket pack() { ; for (int i = 0; length;) { payload.putUnsignedByte(data[i]); } ; }", "n_tokens": 44, "n_pass": [153, 16, 15]}
{"time": "2021-02-15 00:19:32.241344", "score": "0.2662", "loss": "3.16", "code": "MAVLinkPacket pack() { for (int i = 0; length;) { payload.putUnsignedByte(data[i]); } ; }", "n_tokens": 42, "n_pass": [154, 17, 16]}
{"time": "2021-02-15 00:19:42.877847", "score": "0.2662", "loss": "3.16", "code": "MAVLinkPacket pack() { for(int i = 0; length;) { payload.putUnsignedByte(data[i]); } ; }", "n_tokens": 41, "n_pass": [213, 19, 17]}
{"time": "2021-02-15 00:19:45.568405", "score": "0.2516", "loss": "3.3481", "code": "MAVLinkPacket pack() { for( i = 0; length;) { payload.putUnsignedByte(data[i]); } ; }", "n_tokens": 40, "n_pass": [215, 20, 18]}
{"time": "2021-02-15 00:19:48.225274", "score": "0.2516", "loss": "3.3481", "code": "MAVLinkPacket pack() { for(i = 0; length;) { payload.putUnsignedByte(data[i]); } ; }", "n_tokens": 39, "n_pass": [216, 21, 19]}
{"time": "2021-02-15 00:19:50.867691", "score": "0.2516", "loss": "3.3481", "code": "MAVLinkPacket pack() { for(i= 0; length;) { payload.putUnsignedByte(data[i]); } ; }", "n_tokens": 38, "n_pass": [218, 22, 20]}
{"time": "2021-02-15 00:19:53.814559", "score": "0.2516", "loss": "3.3481", "code": "MAVLinkPacket pack() { for(i=0; length;) { payload.putUnsignedByte(data[i]); } ; }", "n_tokens": 37, "n_pass": [220, 23, 21]}
{"time": "2021-02-15 00:19:56.472036", "score": "0.2516", "loss": "3.3481", "code": "MAVLinkPacket pack() { for(i=0;length;) { payload.putUnsignedByte(data[i]); } ; }", "n_tokens": 36, "n_pass": [223, 24, 22]}
{"time": "2021-02-15 00:20:02.031195", "score": "0.2516", "loss": "3.3481", "code": "MAVLinkPacket pack() { for(i=0;length;){ payload.putUnsignedByte(data[i]); } ; }", "n_tokens": 35, "n_pass": [227, 26, 23]}
{"time": "2021-02-15 00:20:04.728025", "score": "0.2516", "loss": "3.3481", "code": "MAVLinkPacket pack() { for(i=0;length;){payload.putUnsignedByte(data[i]); } ; }", "n_tokens": 34, "n_pass": [229, 27, 24]}
{"time": "2021-02-15 00:20:07.357491", "score": "0.9759", "loss": "0.1797", "code": "MAVLinkPacket pack() { for(i=0;length;){payloadputUnsignedByte(data[i]); } ; }", "n_tokens": 33, "n_pass": [231, 28, 25]}
{"time": "2021-02-15 00:20:12.820586", "score": "0.9759", "loss": "0.1797", "code": "MAVLinkPacket pack() { for(i=0;length;){payloadputUnsignedByte(data[i]); } }", "n_tokens": 31, "n_pass": [240, 30, 26]}
{"time": "2021-02-15 00:20:16.652585", "score": "0.9759", "loss": "0.1797", "code": "MAVLinkPacket pack(){ for(i=0;length;){payloadputUnsignedByte(data[i]); } }", "n_tokens": 30, "n_pass": [247, 31, 27]}
{"time": "2021-02-15 00:20:19.309927", "score": "0.9759", "loss": "0.1797", "code": "MAVLinkPacket pack(){for(i=0;length;){payloadputUnsignedByte(data[i]); } }", "n_tokens": 29, "n_pass": [249, 32, 28]}
{"time": "2021-02-15 00:20:21.975277", "score": "0.9778", "loss": "0.1159", "code": "MAVLinkPacket pack(){for(i0;length;){payloadputUnsignedByte(data[i]); } }", "n_tokens": 28, "n_pass": [253, 33, 29]}
{"time": "2021-02-15 00:20:24.604571", "score": "0.9778", "loss": "0.1159", "code": "MAVLinkPacket pack(){for(i;length;){payloadputUnsignedByte(data[i]); } }", "n_tokens": 27, "n_pass": [254, 34, 30]}
{"time": "2021-02-15 00:20:27.234517", "score": "0.9778", "loss": "0.1141", "code": "MAVLinkPacket pack(){for(i;;){payloadputUnsignedByte(data[i]); } }", "n_tokens": 26, "n_pass": [256, 35, 31]}
{"time": "2021-02-15 00:20:36.381541", "score": "0.9775", "loss": "0.1149", "code": "MAVLinkPacket pack(){for(;;){payloadputUnsignedByte(data[i]); } }", "n_tokens": 25, "n_pass": [278, 38, 32]}
{"time": "2021-02-15 00:20:46.635172", "score": "0.9775", "loss": "0.1149", "code": "MAVLinkPacket pack(){for(;;){payloadputUnsignedByte(data[i]);} }", "n_tokens": 24, "n_pass": [309, 41, 33]}
{"time": "2021-02-15 00:20:49.283117", "score": "0.9775", "loss": "0.1149", "code": "MAVLinkPacket pack(){for(;;){payloadputUnsignedByte(data[i]);}}", "n_tokens": 23, "n_pass": [310, 42, 34]}

Minimal simplified code:
MAVLinkPacket pack(){for(;;){payloadputUnsignedByte(data[i]);}}

