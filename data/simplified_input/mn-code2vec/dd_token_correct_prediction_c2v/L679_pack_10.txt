
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/dronekit__dronekit-android/dependencyLibs/Mavlink/src/com/MAVLink/common/msg_mission_write_partial_list_pack.java
method_name = pack
method_body = public MAVLinkPacket pack() { MAVLinkPacket packet = new MAVLinkPacket(MAVLINK_MSG_LENGTH); packet.sysid = 255; packet.compid = 190; packet.msgid = MAVLINK_MSG_ID_MISSION_WRITE_PARTIAL_LIST; packet.payload.putShort(start_index); packet.payload.putShort(end_index); packet.payload.putUnsignedByte(target_system); packet.payload.putUnsignedByte(target_component); return packet; }
predict, score, loss = pack, 0.9997710585594177, 0.0004596845537889749

Trace of simplified code(s):
{"time": "2021-02-15 02:47:37.785101", "score": "0.9992", "loss": "0.0021", "code": "public MAVLinkPacket pack() { MAVLinkPacket packet = new MAVLinkPacket(MAVLINK_MSG_LENGTH); packet.sysid = 255; packet.compid = 190; packet.msgid = MAVLINK_MSG_ID_MISSION_WRITE_PARTIAL_LIST; packet.payload.putShort(start_index); packet.payload.putShort(end_index); packet.payload.putUnsignedByte(target_system); packet.payload.putUnsignedByte(target_component); return packet; }", "n_tokens": 125, "n_pass": [1, 1, 1]}
{"time": "2021-02-15 02:47:40.434144", "score": "0.9991", "loss": "0.0026", "code": "public MAVLinkPacket pack() { MAVLinkPacket packet = new MAVLinkPacket(MAVLINK_MSG_LENGTH); packet.sysidMISSION_WRITE_PARTIAL_LIST; packet.payload.putShort(start_index); packet.payload.putShort(end_index); packet.payload.putUnsignedByte(target_system); packet.payload.putUnsignedByte(target_component); return packet; }", "n_tokens": 94, "n_pass": [9, 2, 2]}
{"time": "2021-02-15 02:47:43.157357", "score": "0.9992", "loss": "0.0022", "code": "public MAVLinkPacket pack() { MAVLinkPacket packet = new MAVLinkPacket(MAVLINK_MSG_LENGTH); packet.sysid; packet.payload.putUnsignedByte(target_system); packet.payload.putUnsignedByte(target_component); return packet; }", "n_tokens": 63, "n_pass": [10, 3, 3]}
{"time": "2021-02-15 02:47:45.789331", "score": "1.0", "loss": "0.0", "code": "public MAVLinkPacket pack() { MAVLinkPacket packet = new MAVLinkPacket(MAVLINK_MSG_LENGTH); packet.sysidpayload.putUnsignedByte(target_component); return packet; }", "n_tokens": 47, "n_pass": [15, 4, 4]}
{"time": "2021-02-15 02:47:48.408653", "score": "0.4506", "loss": "1.6232", "code": "public MAVLinkPacket pack() { MAVLinkPacket packet =payload.putUnsignedByte(target_component); return packet; }", "n_tokens": 31, "n_pass": [17, 5, 5]}
{"time": "2021-02-15 02:47:51.844931", "score": "0.3188", "loss": "1.4568", "code": "public MAVLinkPacket pack() { MAVLinkPacketpayload.putUnsignedByte(target_component); return packet; }", "n_tokens": 27, "n_pass": [41, 6, 6]}
{"time": "2021-02-15 02:47:55.336343", "score": "0.9924", "loss": "0.0202", "code": "public MAVLinkPacket pack() { MAVLinkPacketputUnsignedByte(target_component); return packet; }", "n_tokens": 25, "n_pass": [62, 7, 7]}
{"time": "2021-02-15 02:47:57.947450", "score": "0.997", "loss": "0.0068", "code": "public MAVLinkPacket pack() { MAVLinkPacketputUnsignedByte(component); return packet; }", "n_tokens": 23, "n_pass": [63, 8, 8]}
{"time": "2021-02-15 02:48:00.558332", "score": "0.9515", "loss": "0.0555", "code": "public MAVLinkPacket pack() { MAVLinkPacketputUnsignedByte(component); packet; }", "n_tokens": 21, "n_pass": [66, 9, 9]}
{"time": "2021-02-15 02:48:03.171675", "score": "0.9451", "loss": "0.0628", "code": "public MAVLinkPacket pack() { MAVLinkPacketputUnsignedByte(component);  }", "n_tokens": 19, "n_pass": [67, 10, 10]}
{"time": "2021-02-15 02:48:05.833804", "score": "0.9451", "loss": "0.0628", "code": " MAVLinkPacket pack() { MAVLinkPacketputUnsignedByte(component);  }", "n_tokens": 18, "n_pass": [69, 11, 11]}
{"time": "2021-02-15 02:48:14.540196", "score": "0.9451", "loss": "0.0628", "code": "MAVLinkPacket pack() { MAVLinkPacketputUnsignedByte(component);  }", "n_tokens": 17, "n_pass": [97, 13, 12]}
{"time": "2021-02-15 02:48:17.904585", "score": "0.9451", "loss": "0.0628", "code": "MAVLinkPacket pack(){ MAVLinkPacketputUnsignedByte(component);  }", "n_tokens": 16, "n_pass": [102, 14, 13]}
{"time": "2021-02-15 02:48:20.525438", "score": "0.9451", "loss": "0.0628", "code": "MAVLinkPacket pack(){MAVLinkPacketputUnsignedByte(component);  }", "n_tokens": 15, "n_pass": [104, 15, 14]}
{"time": "2021-02-15 02:48:25.784362", "score": "1.0", "loss": "0.0", "code": "MAVLinkPacket pack(){MAVLinkPacket(component);  }", "n_tokens": 14, "n_pass": [106, 17, 15]}
{"time": "2021-02-15 02:48:28.387310", "score": "0.9994", "loss": "0.0006", "code": "MAVLinkPacket pack(){MAVLinkPacket();  }", "n_tokens": 13, "n_pass": [108, 18, 16]}
{"time": "2021-02-15 02:48:31.019390", "score": "0.9994", "loss": "0.0006", "code": "MAVLinkPacket pack(){MAVLinkPacket(); }", "n_tokens": 12, "n_pass": [111, 19, 17]}
{"time": "2021-02-15 02:48:33.616664", "score": "0.9994", "loss": "0.0006", "code": "MAVLinkPacket pack(){MAVLinkPacket();}", "n_tokens": 11, "n_pass": [112, 20, 18]}

Minimal simplified code:
MAVLinkPacket pack(){MAVLinkPacket();}

