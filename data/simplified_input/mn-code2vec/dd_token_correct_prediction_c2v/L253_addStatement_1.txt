
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/OpenRock__OpenAM/openam-federation/openam-federation-library/src/main/java/com/sun/identity/federation/message/FSAssertion_addStatement.java
method_name = addStatement
method_body = public boolean addStatement(Statement statement) { boolean addedStmt = false; if (statement != null) { super.addStatement(statement); addedStmt = true; } return addedStmt; }
predict, score, loss = addStatement, 0.8203175067901611, 0.24505557119846344

Trace of simplified code(s):
{"time": "2021-02-14 13:02:56.840319", "score": "0.8203", "loss": "0.2451", "code": "public boolean addStatement(Statement statement) { boolean addedStmt = false; if (statement != null) { super.addStatement(statement); addedStmt = true; } return addedStmt; }", "n_tokens": 58, "n_pass": [1, 1, 1]}
{"time": "2021-02-14 13:03:02.136994", "score": "0.9144", "loss": "0.115", "code": "public boolean addStatement(Statement statement) { boolean addedStmt = false; if (statement != null) { super.addStatement(statement);} return addedStmt; }", "n_tokens": 50, "n_pass": [26, 3, 2]}
{"time": "2021-02-14 13:03:07.839522", "score": "0.9533", "loss": "0.1329", "code": "public boolean addStatement() { boolean addedStmt = false; if (statement != null) { super.addStatement(statement);} return addedStmt; }", "n_tokens": 47, "n_pass": [52, 5, 3]}
{"time": "2021-02-14 13:03:10.455223", "score": "0.8821", "loss": "0.6736", "code": "public boolean addStatement() {addedStmt = false; if (statement != null) { super.addStatement(statement);} return addedStmt; }", "n_tokens": 44, "n_pass": [54, 6, 4]}
{"time": "2021-02-14 13:03:13.094458", "score": "0.9733", "loss": "0.061", "code": "public boolean addStatement() { false; if (statement != null) { super.addStatement(statement);} return addedStmt; }", "n_tokens": 41, "n_pass": [55, 7, 5]}
{"time": "2021-02-14 13:03:15.754843", "score": "0.9724", "loss": "0.0584", "code": "public boolean addStatement() {if (statement != null) { super.addStatement(statement);} return addedStmt; }", "n_tokens": 37, "n_pass": [56, 8, 6]}
{"time": "2021-02-14 13:03:18.380511", "score": "0.9713", "loss": "0.0843", "code": "public boolean addStatement() {if (statementnull) { super.addStatement(statement);} return addedStmt; }", "n_tokens": 33, "n_pass": [58, 9, 7]}
{"time": "2021-02-14 13:03:24.800761", "score": "0.9968", "loss": "0.0053", "code": "public boolean addStatement() {if (statementnull) { super.addStatement(statement);} addedStmt; }", "n_tokens": 31, "n_pass": [93, 11, 8]}
{"time": "2021-02-14 13:03:27.424526", "score": "0.9971", "loss": "0.0045", "code": "public boolean addStatement() {if (statementnull) { super.addStatement(statement);}  }", "n_tokens": 29, "n_pass": [94, 12, 9]}
{"time": "2021-02-14 13:03:30.030045", "score": "0.9971", "loss": "0.0045", "code": " boolean addStatement() {if (statementnull) { super.addStatement(statement);}  }", "n_tokens": 28, "n_pass": [96, 13, 10]}
{"time": "2021-02-14 13:03:32.635064", "score": "0.9971", "loss": "0.0045", "code": "boolean addStatement() {if (statementnull) { super.addStatement(statement);}  }", "n_tokens": 27, "n_pass": [97, 14, 11]}
{"time": "2021-02-14 13:03:39.467376", "score": "0.9971", "loss": "0.0045", "code": "boolean addStatement(){if (statementnull) { super.addStatement(statement);}  }", "n_tokens": 26, "n_pass": [142, 15, 12]}
{"time": "2021-02-14 13:03:42.077692", "score": "0.9971", "loss": "0.0045", "code": "boolean addStatement(){if(statementnull) { super.addStatement(statement);}  }", "n_tokens": 25, "n_pass": [144, 16, 13]}
{"time": "2021-02-14 13:03:44.688542", "score": "0.9976", "loss": "0.0032", "code": "boolean addStatement(){if(null) { super.addStatement(statement);}  }", "n_tokens": 24, "n_pass": [146, 17, 14]}
{"time": "2021-02-14 13:03:47.299333", "score": "0.9976", "loss": "0.0032", "code": "boolean addStatement(){if(null){ super.addStatement(statement);}  }", "n_tokens": 23, "n_pass": [149, 18, 15]}
{"time": "2021-02-14 13:03:49.903566", "score": "0.9976", "loss": "0.0032", "code": "boolean addStatement(){if(null){super.addStatement(statement);}  }", "n_tokens": 22, "n_pass": [151, 19, 16]}
{"time": "2021-02-14 13:03:55.112589", "score": "0.9978", "loss": "0.0022", "code": "boolean addStatement(){if(null){super.addStatement();}  }", "n_tokens": 21, "n_pass": [156, 21, 17]}
{"time": "2021-02-14 13:03:57.723146", "score": "0.9978", "loss": "0.0022", "code": "boolean addStatement(){if(null){super.addStatement();} }", "n_tokens": 20, "n_pass": [160, 22, 18]}
{"time": "2021-02-14 13:04:00.338025", "score": "0.9978", "loss": "0.0022", "code": "boolean addStatement(){if(null){super.addStatement();}}", "n_tokens": 19, "n_pass": [161, 23, 19]}

Minimal simplified code:
boolean addStatement(){if(null){super.addStatement();}}

