
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/bluestreak01__questdb/core/src/main/java/com/questdb/cairo/VirtualMemory_getDouble.java
method_name = getDouble
method_body = public final double getDouble(long offset) { if (roOffsetLo < offset && offset < roOffsetHi - 8) { return Unsafe.getUnsafe().getDouble(absolutePointer + offset); } return getDouble0(offset); }
predict, score, loss = getDouble, 0.9205981492996216, 0.10365386307239532

Trace of simplified code(s):
{"time": "2021-02-16 04:28:32.695992", "score": "0.9206", "loss": "0.1037", "code": "public final double getDouble(long offset) { if (roOffsetLo < offset && offset < roOffsetHi - 8) { return Unsafe.getUnsafe().getDouble(absolutePointer + offset); } return getDouble0(offset); }", "n_tokens": 70, "n_pass": [1, 1, 1]}
{"time": "2021-02-16 04:28:35.287223", "score": "0.6798", "loss": "0.6229", "code": "public final double getDouble(long offset) { if (roOffsetLo < offset & 8) { return Unsafe.getUnsafe().getDouble(absolutePointer + offset); } return getDouble0(offset); }", "n_tokens": 61, "n_pass": [23, 2, 2]}
{"time": "2021-02-16 04:28:37.840011", "score": "0.8657", "loss": "0.1853", "code": "public final double getDouble(long offset) { if (roOffsetLo < offset & 8) { return Unsafe.getUnsafe().getDouble(); } return getDouble0(offset); }", "n_tokens": 56, "n_pass": [49, 3, 3]}
{"time": "2021-02-16 04:28:40.380945", "score": "0.8657", "loss": "0.1853", "code": "double getDouble(long offset) { if (roOffsetLo < offset & 8) { return Unsafe.getUnsafe().getDouble(); } return getDouble0(offset); }", "n_tokens": 52, "n_pass": [53, 4, 4]}
{"time": "2021-02-16 04:28:42.916068", "score": "0.8883", "loss": "0.1543", "code": "double getDouble(long offset) { if (roOffsetLo & 8) { return Unsafe.getUnsafe().getDouble(); } return getDouble0(offset); }", "n_tokens": 48, "n_pass": [58, 5, 5]}
{"time": "2021-02-16 04:28:45.793023", "score": "0.9241", "loss": "0.1139", "code": "double getDouble(long offset) { if (roOffsetLo & 8) { Unsafe.getUnsafe().getDouble(); } return getDouble0(offset); }", "n_tokens": 46, "n_pass": [95, 6, 6]}
{"time": "2021-02-16 04:28:48.342957", "score": "0.9537", "loss": "0.0511", "code": "double getDouble(long offset) { if (roOffsetLo & 8) { Unsafe().getDouble(); } return getDouble0(offset); }", "n_tokens": 44, "n_pass": [97, 7, 7]}
{"time": "2021-02-16 04:28:50.871875", "score": "0.9534", "loss": "0.0514", "code": "double getDouble(long offset) { if (roOffsetLo & 8) { Unsafe.getDouble(); } return getDouble0(offset); }", "n_tokens": 42, "n_pass": [98, 8, 8]}
{"time": "2021-02-16 04:28:53.433326", "score": "0.9152", "loss": "0.1035", "code": "double getDouble(long offset) { if (roOffsetLo & 8) { Unsafe(); } return getDouble0(offset); }", "n_tokens": 40, "n_pass": [99, 9, 9]}
{"time": "2021-02-16 04:28:55.981084", "score": "0.843", "loss": "0.2253", "code": "double getDouble(long offset) { if (roOffsetLo & 8) { Unsafe; } return getDouble0(offset); }", "n_tokens": 38, "n_pass": [100, 10, 10]}
{"time": "2021-02-16 04:29:01.085883", "score": "0.9002", "loss": "0.1127", "code": "double getDouble(long offset) { if (roOffsetLo & 8) { Unsafe; } return getDouble0; }", "n_tokens": 35, "n_pass": [104, 12, 11]}
{"time": "2021-02-16 04:29:03.982844", "score": "0.8775", "loss": "0.1383", "code": "double getDouble(long offset) { if (roOffsetLo & 8) {; } return getDouble0; }", "n_tokens": 33, "n_pass": [117, 13, 12]}
{"time": "2021-02-16 04:29:06.530039", "score": "0.8775", "loss": "0.1383", "code": "double getDouble(long offset) { if (roOffsetLo & 8) {} return getDouble0; }", "n_tokens": 31, "n_pass": [118, 14, 13]}
{"time": "2021-02-16 04:29:09.056096", "score": "0.5879", "loss": "0.6496", "code": "double getDouble(long offset) { if (roOffsetLo & 8) {} return; }", "n_tokens": 28, "n_pass": [120, 15, 14]}
{"time": "2021-02-16 04:29:14.980068", "score": "0.5879", "loss": "0.6496", "code": "double getDouble(long offset) { if (roOffsetLo & 8) {}  }", "n_tokens": 26, "n_pass": [160, 16, 15]}
{"time": "2021-02-16 04:29:18.250333", "score": "0.5879", "loss": "0.6496", "code": "double getDouble(long offset){ if (roOffsetLo & 8) {}  }", "n_tokens": 25, "n_pass": [170, 17, 16]}
{"time": "2021-02-16 04:29:20.784086", "score": "0.5879", "loss": "0.6496", "code": "double getDouble(long offset){if (roOffsetLo & 8) {}  }", "n_tokens": 24, "n_pass": [172, 18, 17]}
{"time": "2021-02-16 04:29:23.312534", "score": "0.5879", "loss": "0.6496", "code": "double getDouble(long offset){if(roOffsetLo & 8) {}  }", "n_tokens": 23, "n_pass": [174, 19, 18]}
{"time": "2021-02-16 04:29:25.846045", "score": "0.5879", "loss": "0.6496", "code": "double getDouble(long offset){if(roOffsetLo& 8) {}  }", "n_tokens": 22, "n_pass": [177, 20, 19]}
{"time": "2021-02-16 04:29:28.384580", "score": "0.5879", "loss": "0.6496", "code": "double getDouble(long offset){if(roOffsetLo&8) {}  }", "n_tokens": 21, "n_pass": [179, 21, 20]}
{"time": "2021-02-16 04:29:30.926950", "score": "0.5879", "loss": "0.6496", "code": "double getDouble(long offset){if(roOffsetLo&8){}  }", "n_tokens": 20, "n_pass": [182, 22, 21]}
{"time": "2021-02-16 04:29:33.465283", "score": "0.5879", "loss": "0.6496", "code": "double getDouble(long offset){if(roOffsetLo&8){} }", "n_tokens": 19, "n_pass": [185, 23, 22]}
{"time": "2021-02-16 04:29:39.570713", "score": "0.5879", "loss": "0.6496", "code": "double getDouble(long offset){if(roOffsetLo&8){}}", "n_tokens": 18, "n_pass": [206, 25, 23]}

Minimal simplified code:
double getDouble(long offset){if(roOffsetLo&8){}}

