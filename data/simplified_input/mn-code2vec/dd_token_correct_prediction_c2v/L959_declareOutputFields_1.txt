
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/apache__incubator-heron/eco-storm-examples/src/java/org/apache/heron/examples/eco/EvenAndOddBolt_declareOutputFields.java
method_name = declareOutputFields
method_body = @Override public void declareOutputFields(OutputFieldsDeclarer declarer) { declarer.declareStream("evens", new Fields("evens")); declarer.declareStream("odds", new Fields("odds")); declarer.declare(new Fields("number")); }
predict, score, loss = declareOutputFields, 1.0, 0.0

Trace of simplified code(s):
{"time": "2021-02-16 12:16:35.622964", "score": "1.0", "loss": "0.0", "code": "@Override public void declareOutputFields(OutputFieldsDeclarer declarer) { declarer.declareStream(\"evens\", new Fields(\"evens\")); declarer.declareStream(\"odds\", new Fields(\"odds\")); declarer.declare(new Fields(\"number\")); }", "n_tokens": 72, "n_pass": [1, 1, 1]}
{"time": "2021-02-16 12:16:38.175581", "score": "1.0", "loss": "0.0", "code": "@Override public void declareOutputFields(OutputFieldsDeclarer declarer) { declarer.declarer.declareStream(\"odds\", new Fields(\"odds\")); declarer.declare(new Fields(\"number\")); }", "n_tokens": 54, "n_pass": [9, 2, 2]}
{"time": "2021-02-16 12:16:40.822662", "score": "1.0", "loss": "0.0", "code": "@Override public void declareOutputFields(OutputFieldsDeclarer declarer) { declareStream(\"odds\", new Fields(\"odds\")); declarer.declare(new Fields(\"number\")); }", "n_tokens": 50, "n_pass": [36, 3, 3]}
{"time": "2021-02-16 12:16:43.346745", "score": "1.0", "loss": "0.0", "code": " void declareOutputFields(OutputFieldsDeclarer declarer) { declareStream(\"odds\", new Fields(\"odds\")); declarer.declare(new Fields(\"number\")); }", "n_tokens": 46, "n_pass": [44, 4, 4]}
{"time": "2021-02-16 12:16:46.263929", "score": "1.0", "loss": "0.0", "code": " void declareOutputFields(OutputFieldsDeclarer declarer) { declareStream(\"odds\", Fields(\"odds\")); declarer.declare(new Fields(\"number\")); }", "n_tokens": 44, "n_pass": [84, 5, 5]}
{"time": "2021-02-16 12:16:48.818655", "score": "1.0", "loss": "0.0", "code": " void declareOutputFields(OutputFieldsDeclarer declarer) { declareStream(\"odds\",(\"odds\")); declarer.declare(new Fields(\"number\")); }", "n_tokens": 42, "n_pass": [85, 6, 6]}
{"time": "2021-02-16 12:16:51.375375", "score": "1.0", "loss": "0.0", "code": " void declareOutputFields(OutputFieldsDeclarer declarer) { declareStream(\"odds\",(\"odds\")).declare(new Fields(\"number\")); }", "n_tokens": 39, "n_pass": [89, 7, 7]}
{"time": "2021-02-16 12:16:53.909467", "score": "1.0", "loss": "0.0", "code": " void declareOutputFields(OutputFieldsDeclarer declarer) { declareStream(\"odds\",(\"odds\")).declare((\"number\")); }", "n_tokens": 36, "n_pass": [91, 8, 8]}
{"time": "2021-02-16 12:16:58.576742", "score": "1.0", "loss": "0.0", "code": "void declareOutputFields(OutputFieldsDeclarer declarer) { declareStream(\"odds\",(\"odds\")).declare((\"number\")); }", "n_tokens": 35, "n_pass": [146, 9, 9]}
{"time": "2021-02-16 12:17:01.498996", "score": "1.0", "loss": "0.0", "code": "void declareOutputFields(OutputFieldsDeclarer declarer){ declareStream(\"odds\",(\"odds\")).declare((\"number\")); }", "n_tokens": 34, "n_pass": [154, 10, 10]}
{"time": "2021-02-16 12:17:04.015971", "score": "1.0", "loss": "0.0", "code": "void declareOutputFields(OutputFieldsDeclarer declarer){declareStream(\"odds\",(\"odds\")).declare((\"number\")); }", "n_tokens": 33, "n_pass": [156, 11, 11]}
{"time": "2021-02-16 12:17:06.539031", "score": "1.0", "loss": "0.0", "code": "void declareOutputFields(OutputFieldsDeclarer declarer){declareStream(\"\",(\"odds\")).declare((\"number\")); }", "n_tokens": 32, "n_pass": [160, 12, 12]}
{"time": "2021-02-16 12:17:09.058531", "score": "1.0", "loss": "0.0", "code": "void declareOutputFields(OutputFieldsDeclarer declarer){declareStream(\"\",(\"\")).declare((\"number\")); }", "n_tokens": 31, "n_pass": [165, 13, 13]}
{"time": "2021-02-16 12:17:13.058480", "score": "1.0", "loss": "0.0", "code": "void declareOutputFields(OutputFieldsDeclarer declarer){declareStream(\"\",(\"\")).declare((\"\")); }", "n_tokens": 30, "n_pass": [202, 14, 14]}
{"time": "2021-02-16 12:17:15.593787", "score": "1.0", "loss": "0.0", "code": "void declareOutputFields(OutputFieldsDeclarer declarer){declareStream(\"\",(\"\")).declare((\"\"));}", "n_tokens": 29, "n_pass": [207, 15, 15]}

Minimal simplified code:
void declareOutputFields(OutputFieldsDeclarer declarer){declareStream("",("")).declare((""));}

