
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/bcgit__bc-java/mail/src/main/java/org/bouncycastle/mail/smime/util/FileBackedMimeBodyPart_writeTo.java
method_name = writeTo
method_body = public void writeTo(OutputStream out) throws IOException, MessagingException { if (!_file.exists()) { throw new IOException("file " + _file.getCanonicalPath() + " no longer exists."); } super.writeTo(out); }
predict, score, loss = writeTo, 0.9408071041107178, 0.1169014498591423

Trace of simplified code(s):
{"time": "2021-02-14 05:32:22.244392", "score": "0.9408", "loss": "0.1169", "code": "public void writeTo(OutputStream out) throws IOException, MessagingException { if (!_file.exists()) { throw new IOException(\"file \" + _file.getCanonicalPath() + \" no longer exists.\"); } super.writeTo(out); }", "n_tokens": 79, "n_pass": [1, 1, 1]}
{"time": "2021-02-14 05:32:25.296891", "score": "0.9825", "loss": "0.0329", "code": "public void writeTo(OutputStream out) throws IOException, MessagingException { if (!_file.exists()) { (\"file \" + _file.getCanonicalPath() + \" no longer exists.\"); } super.writeTo(out); }", "n_tokens": 74, "n_pass": [51, 2, 2]}
{"time": "2021-02-14 05:32:27.926684", "score": "0.9327", "loss": "0.1121", "code": "public void writeTo(OutputStream out) throws IOException, MessagingException { if (!_file.exists()) { (\"file \".getCanonicalPath() + \" no longer exists.\"); } super.writeTo(out); }", "n_tokens": 69, "n_pass": [53, 3, 3]}
{"time": "2021-02-14 05:32:30.556689", "score": "0.9837", "loss": "0.0342", "code": "public void writeTo(OutputStream out) throws IOException, MessagingException { if (!_file.exists()) { (\"file \"+ \" no longer exists.\"); } super.writeTo(out); }", "n_tokens": 64, "n_pass": [54, 4, 4]}
{"time": "2021-02-14 05:32:33.182307", "score": "0.9941", "loss": "0.0106", "code": "public void writeTo(OutputStream out) throws IOException, MessagingException { if (!_file.exists()) { (\"file \"+ \" no\"); } super.writeTo(out); }", "n_tokens": 59, "n_pass": [56, 5, 5]}
{"time": "2021-02-14 05:32:36.237603", "score": "0.4647", "loss": "1.3286", "code": "public void writeTo(OutputStream out) throws IOException, MessagingException { if (!_file.exists()) { (\"file \"+ \" no\"); } (out); }", "n_tokens": 56, "n_pass": [96, 6, 6]}
{"time": "2021-02-14 05:32:38.859594", "score": "0.4548", "loss": "1.3399", "code": "public void writeTo(OutputStream out) throws IOException, MessagingException { if (!_file.exists()) { (\"file \"+ \" no\"); } ; }", "n_tokens": 53, "n_pass": [97, 7, 7]}
{"time": "2021-02-14 05:32:41.480424", "score": "0.4548", "loss": "1.3399", "code": "void writeTo(OutputStream out) throws IOException, MessagingException { if (!_file.exists()) { (\"file \"+ \" no\"); } ; }", "n_tokens": 51, "n_pass": [99, 8, 8]}
{"time": "2021-02-14 05:32:52.089523", "score": "0.4548", "loss": "1.3399", "code": "void writeTo(OutputStream out)throws IOException, MessagingException { if (!_file.exists()) { (\"file \"+ \" no\"); } ; }", "n_tokens": 50, "n_pass": [171, 10, 9]}
{"time": "2021-02-14 05:32:54.700982", "score": "0.4548", "loss": "1.3399", "code": "void writeTo(OutputStream out)throws IOException,MessagingException { if (!_file.exists()) { (\"file \"+ \" no\"); } ; }", "n_tokens": 49, "n_pass": [175, 11, 10]}
{"time": "2021-02-14 05:32:57.343370", "score": "0.4548", "loss": "1.3399", "code": "void writeTo(OutputStream out)throws IOException,MessagingException{ if (!_file.exists()) { (\"file \"+ \" no\"); } ; }", "n_tokens": 48, "n_pass": [177, 12, 11]}
{"time": "2021-02-14 05:32:59.955444", "score": "0.4548", "loss": "1.3399", "code": "void writeTo(OutputStream out)throws IOException,MessagingException{if (!_file.exists()) { (\"file \"+ \" no\"); } ; }", "n_tokens": 47, "n_pass": [179, 13, 12]}
{"time": "2021-02-14 05:33:02.589451", "score": "0.4548", "loss": "1.3399", "code": "void writeTo(OutputStream out)throws IOException,MessagingException{if(!_file.exists()) { (\"file \"+ \" no\"); } ; }", "n_tokens": 46, "n_pass": [181, 14, 13]}
{"time": "2021-02-14 05:33:05.213669", "score": "0.3486", "loss": "1.658", "code": "void writeTo(OutputStream out)throws IOException,MessagingException{if(_file.exists()) { (\"file \"+ \" no\"); } ; }", "n_tokens": 45, "n_pass": [183, 15, 14]}
{"time": "2021-02-14 05:33:07.824121", "score": "0.3486", "loss": "1.658", "code": "void writeTo(OutputStream out)throws IOException,MessagingException{if(file.exists()) { (\"file \"+ \" no\"); } ; }", "n_tokens": 44, "n_pass": [184, 16, 15]}
{"time": "2021-02-14 05:33:10.438153", "score": "0.461", "loss": "1.2605", "code": "void writeTo(OutputStream out)throws IOException,MessagingException{if(fileexists()) { (\"file \"+ \" no\"); } ; }", "n_tokens": 43, "n_pass": [186, 17, 16]}
{"time": "2021-02-14 05:33:13.064270", "score": "0.4824", "loss": "1.1648", "code": "void writeTo(OutputStream out)throws IOException,MessagingException{if(file()) { (\"file \"+ \" no\"); } ; }", "n_tokens": 42, "n_pass": [187, 18, 17]}
{"time": "2021-02-14 05:33:15.679319", "score": "0.4824", "loss": "1.1648", "code": "void writeTo(OutputStream out)throws IOException,MessagingException{if(file()){ (\"file \"+ \" no\"); } ; }", "n_tokens": 41, "n_pass": [191, 19, 18]}
{"time": "2021-02-14 05:33:18.296612", "score": "0.4824", "loss": "1.1648", "code": "void writeTo(OutputStream out)throws IOException,MessagingException{if(file()){(\"file \"+ \" no\"); } ; }", "n_tokens": 40, "n_pass": [193, 20, 19]}
{"time": "2021-02-14 05:33:20.906822", "score": "0.4824", "loss": "1.1648", "code": "void writeTo(OutputStream out)throws IOException,MessagingException{if(file()){(\"file \"+ \" no\"); } }", "n_tokens": 38, "n_pass": [202, 21, 20]}
{"time": "2021-02-14 05:33:29.209651", "score": "0.4824", "loss": "1.1648", "code": "void writeTo(OutputStream out)throws IOException,MessagingException{if(file()){(\"file \"+ \" no\"); }}", "n_tokens": 37, "n_pass": [249, 23, 21]}
{"time": "2021-02-14 05:33:35.262766", "score": "0.4682", "loss": "1.1863", "code": "void writeTo(OutputStream out)throws IOException,MessagingException{if(file()){(\" \"+ \" no\"); }}", "n_tokens": 36, "n_pass": [273, 25, 22]}
{"time": "2021-02-14 05:33:37.893816", "score": "0.4675", "loss": "1.1899", "code": "void writeTo(OutputStream out)throws IOException,MessagingException{if(file()){(\"\"+ \" no\"); }}", "n_tokens": 35, "n_pass": [274, 26, 23]}
{"time": "2021-02-14 05:33:40.525178", "score": "0.4675", "loss": "1.1899", "code": "void writeTo(OutputStream out)throws IOException,MessagingException{if(file()){(\"\"+\" no\"); }}", "n_tokens": 34, "n_pass": [277, 27, 24]}
{"time": "2021-02-14 05:33:43.150305", "score": "0.4675", "loss": "1.1899", "code": "void writeTo(OutputStream out)throws IOException,MessagingException{if(file()){(\"\"+\"no\"); }}", "n_tokens": 33, "n_pass": [279, 28, 25]}
{"time": "2021-02-14 05:33:45.778888", "score": "0.4561", "loss": "1.2209", "code": "void writeTo(OutputStream out)throws IOException,MessagingException{if(file()){(\"\"+\"\"); }}", "n_tokens": 32, "n_pass": [280, 29, 26]}
{"time": "2021-02-14 05:33:48.397795", "score": "0.4561", "loss": "1.2209", "code": "void writeTo(OutputStream out)throws IOException,MessagingException{if(file()){(\"\"+\"\");}}", "n_tokens": 31, "n_pass": [284, 30, 27]}

Minimal simplified code:
void writeTo(OutputStream out)throws IOException,MessagingException{if(file()){(""+"");}}

