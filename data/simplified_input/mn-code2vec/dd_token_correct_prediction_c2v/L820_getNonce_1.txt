
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/OpenRock__OpenAM/openam-oauth2-common/oauth2-core/src/main/java/org/forgerock/oauth2/core/AccessToken_getNonce.java
method_name = getNonce
method_body = public String getNonce() { if (isDefined(OAuth2Constants.Custom.NONCE)) { return get(OAuth2Constants.Custom.NONCE).asString(); } return null; }
predict, score, loss = getNonce, 0.9774094820022583, 0.052962809801101685

Trace of simplified code(s):
{"time": "2021-02-16 03:07:05.933340", "score": "0.9774", "loss": "0.053", "code": "public String getNonce() { if (isDefined(OAuth2Constants.Custom.NONCE)) { return get(OAuth2Constants.Custom.NONCE).asString(); } return null; }", "n_tokens": 53, "n_pass": [1, 1, 1]}
{"time": "2021-02-16 03:07:11.289230", "score": "0.9852", "loss": "0.0219", "code": "public String getNonce() { if (isDefined(OAuth2Constants.Custom.NONCE)) { (OAuth2Constants.Custom.NONCE).asString(); } return null; }", "n_tokens": 50, "n_pass": [53, 3, 2]}
{"time": "2021-02-16 03:07:13.804244", "score": "0.9859", "loss": "0.0247", "code": "public String getNonce() { if (isDefined(OAuth2Constants.Custom.NONCE)) { (OAuth2NONCE).asString(); } return null; }", "n_tokens": 46, "n_pass": [55, 4, 3]}
{"time": "2021-02-16 03:07:20.773180", "score": "0.9903", "loss": "0.0135", "code": "public String getNonce() { if (isDefined(OAuth2Constants.Custom.NONCE)) { (OAuth2NONCE).asString; } return null; }", "n_tokens": 44, "n_pass": [100, 6, 4]}
{"time": "2021-02-16 03:07:23.263931", "score": "0.9919", "loss": "0.0105", "code": "public String getNonce() { if (isDefined(OAuth2Constants.Custom.NONCE)) { (OAuth2NONCE).asString; } null; }", "n_tokens": 42, "n_pass": [102, 7, 5]}
{"time": "2021-02-16 03:07:25.755837", "score": "0.9926", "loss": "0.0094", "code": "public String getNonce() { if (isDefined(OAuth2Constants.Custom.NONCE)) { (OAuth2NONCE).asString; }  }", "n_tokens": 40, "n_pass": [103, 8, 6]}
{"time": "2021-02-16 03:07:28.239822", "score": "0.9926", "loss": "0.0094", "code": " String getNonce() { if (isDefined(OAuth2Constants.Custom.NONCE)) { (OAuth2NONCE).asString; }  }", "n_tokens": 39, "n_pass": [105, 9, 7]}
{"time": "2021-02-16 03:07:30.741137", "score": "0.9926", "loss": "0.0094", "code": "String getNonce() { if (isDefined(OAuth2Constants.Custom.NONCE)) { (OAuth2NONCE).asString; }  }", "n_tokens": 38, "n_pass": [106, 10, 8]}
{"time": "2021-02-16 03:07:34.234304", "score": "0.9926", "loss": "0.0094", "code": "String getNonce(){ if (isDefined(OAuth2Constants.Custom.NONCE)) { (OAuth2NONCE).asString; }  }", "n_tokens": 37, "n_pass": [112, 11, 9]}
{"time": "2021-02-16 03:07:36.714574", "score": "0.9926", "loss": "0.0094", "code": "String getNonce(){if (isDefined(OAuth2Constants.Custom.NONCE)) { (OAuth2NONCE).asString; }  }", "n_tokens": 36, "n_pass": [114, 12, 10]}
{"time": "2021-02-16 03:07:39.199984", "score": "0.9945", "loss": "0.0068", "code": "String getNonce(){if (isDefined(OAuth.Custom.NONCE)) { (OAuth2NONCE).asString; }  }", "n_tokens": 34, "n_pass": [118, 13, 11]}
{"time": "2021-02-16 03:07:41.698352", "score": "0.9924", "loss": "0.0113", "code": "String getNonce(){if (isDefined(OAuth.NONCE)) { (OAuth2NONCE).asString; }  }", "n_tokens": 32, "n_pass": [119, 14, 12]}
{"time": "2021-02-16 03:07:46.651572", "score": "0.9947", "loss": "0.0061", "code": "String getNonce(){if (isDefined(OAuth.NONCE)) { (NONCE).asString; }  }", "n_tokens": 30, "n_pass": [124, 16, 13]}
{"time": "2021-02-16 03:07:49.130942", "score": "0.9941", "loss": "0.0064", "code": "String getNonce(){if (isDefined(OAuth.NONCE)) { (NONCE); }  }", "n_tokens": 28, "n_pass": [126, 17, 14]}
{"time": "2021-02-16 03:07:57.378920", "score": "0.9941", "loss": "0.0064", "code": "String getNonce(){if (isDefined(OAuth.NONCE)) { (NONCE);}  }", "n_tokens": 27, "n_pass": [166, 19, 15]}
{"time": "2021-02-16 03:07:59.851613", "score": "0.9941", "loss": "0.0064", "code": "String getNonce(){if (isDefined(OAuth.NONCE)) { (NONCE);} }", "n_tokens": 26, "n_pass": [168, 20, 16]}
{"time": "2021-02-16 03:08:02.351020", "score": "0.9941", "loss": "0.0064", "code": "String getNonce(){if (isDefined(OAuth.NONCE)) { (NONCE);}}", "n_tokens": 25, "n_pass": [169, 21, 17]}
{"time": "2021-02-16 03:08:05.864001", "score": "0.9941", "loss": "0.0064", "code": "String getNonce(){if(isDefined(OAuth.NONCE)) { (NONCE);}}", "n_tokens": 24, "n_pass": [178, 22, 18]}
{"time": "2021-02-16 03:08:08.330521", "score": "0.6178", "loss": "0.4826", "code": "String getNonce(){if((OAuth.NONCE)) { (NONCE);}}", "n_tokens": 23, "n_pass": [180, 23, 19]}
{"time": "2021-02-16 03:08:13.284862", "score": "0.6178", "loss": "0.4826", "code": "String getNonce(){if((OAuth.NONCE)){ (NONCE);}}", "n_tokens": 22, "n_pass": [187, 25, 20]}
{"time": "2021-02-16 03:08:15.757871", "score": "0.6178", "loss": "0.4826", "code": "String getNonce(){if((OAuth.NONCE)){(NONCE);}}", "n_tokens": 21, "n_pass": [189, 26, 21]}

Minimal simplified code:
String getNonce(){if((OAuth.NONCE)){(NONCE);}}

