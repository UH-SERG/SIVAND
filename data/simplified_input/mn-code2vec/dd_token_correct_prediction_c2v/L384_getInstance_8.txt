
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/bcgit__bc-java/core/src/main/java/org/bouncycastle/asn1/pkcs/KeyDerivationFunc_getInstance.java
method_name = getInstance
method_body = public static KeyDerivationFunc getInstance(Object obj) { if (obj instanceof KeyDerivationFunc) { return (KeyDerivationFunc) obj; } else if (obj != null) { return new KeyDerivationFunc(ASN1Sequence.getInstance(obj)); } return null; }
predict, score, loss = getInstance, 0.9999178647994995, 8.654219709569588e-05

Trace of simplified code(s):
{"time": "2021-02-14 17:22:05.133408", "score": "0.9999", "loss": "0.0001", "code": "public static KeyDerivationFunc getInstance(Object obj) { if (obj instanceof KeyDerivationFunc) { return (KeyDerivationFunc) obj; } else if (obj != null) { return new KeyDerivationFunc(ASN1Sequence.getInstance(obj)); } return null; }", "n_tokens": 78, "n_pass": [1, 1, 1]}
{"time": "2021-02-14 17:22:07.799194", "score": "0.9999", "loss": "0.0001", "code": "KeyDerivationFunc getInstance(Object obj) { if (obj instanceof KeyDerivationFunc) { return (KeyDerivationFunc) obj; } else if (obj != null) { return new KeyDerivationFunc(ASN1Sequence.getInstance(obj)); } return null; }", "n_tokens": 74, "n_pass": [44, 2, 2]}
{"time": "2021-02-14 17:22:10.452005", "score": "0.9999", "loss": "0.0001", "code": "KeyDerivationFunc getInstance(Object obj) { if (obj instanceof KeyDerivationFunc) { returnobj; } else if (obj != null) { return new KeyDerivationFunc(ASN1Sequence.getInstance(obj)); } return null; }", "n_tokens": 69, "n_pass": [50, 3, 3]}
{"time": "2021-02-14 17:22:13.113435", "score": "1.0", "loss": "0.0", "code": "KeyDerivationFunc getInstance(Object obj) { if (obj instanceof KeyDerivationFunc) { returnobj; } else if (null) { return new KeyDerivationFunc(ASN1Sequence.getInstance(obj)); } return null; }", "n_tokens": 64, "n_pass": [53, 4, 4]}
{"time": "2021-02-14 17:22:15.777368", "score": "0.4509", "loss": "0.9604", "code": "KeyDerivationFunc getInstance(Object obj) { if (obj instanceof KeyDerivationFunc) { returnobj; } else if (null) { (ASN1Sequence.getInstance(obj)); } return null; }", "n_tokens": 59, "n_pass": [55, 5, 5]}
{"time": "2021-02-14 17:22:21.088738", "score": "0.8934", "loss": "0.1324", "code": "KeyDerivationFunc getInstance(Object obj) { if (obj instanceof KeyDerivationFunc) { returnobj; } else if (null) { (ASN1Sequence.getInstance(obj)); } ; }", "n_tokens": 56, "n_pass": [98, 7, 6]}
{"time": "2021-02-14 17:22:24.120841", "score": "0.8965", "loss": "0.1282", "code": "KeyDerivationFunc getInstance(Object obj) { if (obj instanceof KeyDerivationFunc) {obj; } else if (null) { (ASN1Sequence.getInstance(obj)); } ; }", "n_tokens": 54, "n_pass": [111, 8, 7]}
{"time": "2021-02-14 17:22:26.750811", "score": "0.9124", "loss": "0.108", "code": "KeyDerivationFunc getInstance(Object obj) { if (obj instanceof KeyDerivationFunc) { } else if (null) { (ASN1Sequence.getInstance(obj)); } ; }", "n_tokens": 52, "n_pass": [112, 9, 8]}
{"time": "2021-02-14 17:22:37.356625", "score": "0.9124", "loss": "0.108", "code": "KeyDerivationFunc getInstance(Object obj) { if (obj instanceof KeyDerivationFunc) {} else if (null) { (ASN1Sequence.getInstance(obj)); } ; }", "n_tokens": 51, "n_pass": [176, 11, 9]}
{"time": "2021-02-14 17:22:39.987683", "score": "0.9124", "loss": "0.108", "code": "KeyDerivationFunc getInstance(Object obj) { if (obj instanceof KeyDerivationFunc) {}else if (null) { (ASN1Sequence.getInstance(obj)); } ; }", "n_tokens": 50, "n_pass": [178, 12, 10]}
{"time": "2021-02-14 17:22:42.612520", "score": "0.9096", "loss": "0.1102", "code": "KeyDerivationFunc getInstance(Object obj) { if (obj instanceof KeyDerivationFunc) {} if (null) { (ASN1Sequence.getInstance(obj)); } ; }", "n_tokens": 49, "n_pass": [179, 13, 11]}
{"time": "2021-02-14 17:22:45.236944", "score": "0.9096", "loss": "0.1102", "code": "KeyDerivationFunc getInstance(Object obj) { if (obj instanceof KeyDerivationFunc) {}if (null) { (ASN1Sequence.getInstance(obj)); } ; }", "n_tokens": 48, "n_pass": [180, 14, 12]}
{"time": "2021-02-14 17:22:47.866817", "score": "0.9096", "loss": "0.1102", "code": "KeyDerivationFunc getInstance(Object obj) { if (obj instanceof KeyDerivationFunc) {}if(null) { (ASN1Sequence.getInstance(obj)); } ; }", "n_tokens": 47, "n_pass": [182, 15, 13]}
{"time": "2021-02-14 17:22:55.772680", "score": "0.9096", "loss": "0.1102", "code": "KeyDerivationFunc getInstance(Object obj) { if (obj instanceof KeyDerivationFunc) {}if(null) { (ASN1Sequence.getInstance(obj)); } }", "n_tokens": 45, "n_pass": [194, 18, 14]}
{"time": "2021-02-14 17:22:59.612263", "score": "0.9096", "loss": "0.1102", "code": "KeyDerivationFunc getInstance(Object obj){ if (obj instanceof KeyDerivationFunc) {}if(null) { (ASN1Sequence.getInstance(obj)); } }", "n_tokens": 44, "n_pass": [204, 19, 15]}
{"time": "2021-02-14 17:23:02.238940", "score": "0.9096", "loss": "0.1102", "code": "KeyDerivationFunc getInstance(Object obj){if (obj instanceof KeyDerivationFunc) {}if(null) { (ASN1Sequence.getInstance(obj)); } }", "n_tokens": 43, "n_pass": [206, 20, 16]}
{"time": "2021-02-14 17:23:04.863527", "score": "0.9096", "loss": "0.1102", "code": "KeyDerivationFunc getInstance(Object obj){if(obj instanceof KeyDerivationFunc) {}if(null) { (ASN1Sequence.getInstance(obj)); } }", "n_tokens": 42, "n_pass": [208, 21, 17]}
{"time": "2021-02-14 17:23:07.496658", "score": "0.9096", "loss": "0.1102", "code": "KeyDerivationFunc getInstance(Object obj){if(obj instanceof KeyDerivationFunc){}if(null) { (ASN1Sequence.getInstance(obj)); } }", "n_tokens": 41, "n_pass": [216, 22, 18]}
{"time": "2021-02-14 17:23:18.471893", "score": "0.9096", "loss": "0.1102", "code": "KeyDerivationFunc getInstance(Object obj){if(obj instanceof KeyDerivationFunc){}if(null){ (ASN1Sequence.getInstance(obj)); } }", "n_tokens": 40, "n_pass": [267, 25, 19]}
{"time": "2021-02-14 17:23:21.098528", "score": "0.9096", "loss": "0.1102", "code": "KeyDerivationFunc getInstance(Object obj){if(obj instanceof KeyDerivationFunc){}if(null){(ASN1Sequence.getInstance(obj)); } }", "n_tokens": 39, "n_pass": [268, 26, 20]}
{"time": "2021-02-14 17:23:23.730572", "score": "0.9096", "loss": "0.1102", "code": "KeyDerivationFunc getInstance(Object obj){if(obj instanceof KeyDerivationFunc){}if(null){(ASNSequence.getInstance(obj)); } }", "n_tokens": 38, "n_pass": [271, 27, 21]}
{"time": "2021-02-14 17:23:26.360020", "score": "0.5218", "loss": "0.711", "code": "KeyDerivationFunc getInstance(Object obj){if(obj instanceof KeyDerivationFunc){}if(null){(ASN.getInstance(obj)); } }", "n_tokens": 37, "n_pass": [272, 28, 22]}
{"time": "2021-02-14 17:23:31.606445", "score": "0.5438", "loss": "0.6704", "code": "KeyDerivationFunc getInstance(Object obj){if(obj instanceof KeyDerivationFunc){}if(null){(ASN.getInstance()); } }", "n_tokens": 36, "n_pass": [276, 30, 23]}
{"time": "2021-02-14 17:23:34.232082", "score": "0.5438", "loss": "0.6704", "code": "KeyDerivationFunc getInstance(Object obj){if(obj instanceof KeyDerivationFunc){}if(null){(ASN.getInstance());} }", "n_tokens": 35, "n_pass": [280, 31, 24]}
{"time": "2021-02-14 17:23:36.856596", "score": "0.5438", "loss": "0.6704", "code": "KeyDerivationFunc getInstance(Object obj){if(obj instanceof KeyDerivationFunc){}if(null){(ASN.getInstance());}}", "n_tokens": 34, "n_pass": [282, 32, 25]}

Minimal simplified code:
KeyDerivationFunc getInstance(Object obj){if(obj instanceof KeyDerivationFunc){}if(null){(ASN.getInstance());}}

