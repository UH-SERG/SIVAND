
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/droidefense__engine/mods/memapktool/src/main/java/org/jf/smali/smaliFlexLexer_zzUnpackCMap.java
method_name = zzUnpackCMap
method_body = private static char[] zzUnpackCMap(String packed) { char[] map = new char[0x10000]; int i = 0; int j = 0; while (i < 210) { int count = packed.charAt(i++); char value = packed.charAt(i++); do map[j++] = value; while (--count > 0); } return map; }
predict, score, loss = zzUnpackCMap, 0.9997629523277283, 0.0004605186404660344

Trace of simplified code(s):
{"time": "2021-02-15 03:07:55.001060", "score": "0.9998", "loss": "0.0004", "code": "private static char[] zzUnpackCMap(String packed) { char[] map = new char[0x10000]; int i = 0; int j = 0; while (i < 210) { int count = packed.charAt(i++); char value = packed.charAt(i++); do map[j++] = value; while (--count > 0); } return map; }", "n_tokens": 138, "n_pass": [1, 1, 1]}
{"time": "2021-02-15 03:07:59.242537", "score": "0.9998", "loss": "0.0004", "code": "private static char[] zzUnpackCMap(String packed) { new char[0x10000]; int i = 0; int j = 0; while (i < 210) { int count = packed.charAt(i++); char value = packed.charAt(i++); do map[j++] = value; while (--count > 0); } return map; }", "n_tokens": 130, "n_pass": [46, 2, 2]}
{"time": "2021-02-15 03:08:01.935535", "score": "0.9997", "loss": "0.0005", "code": "private static char[] zzUnpackCMap(String packed) { new char[0x10000]; intint j = 0; while (i < 210) { int count = packed.charAt(i++); char value = packed.charAt(i++); do map[j++] = value; while (--count > 0); } return map; }", "n_tokens": 122, "n_pass": [49, 3, 3]}
{"time": "2021-02-15 03:08:05.013218", "score": "0.9997", "loss": "0.0005", "code": "private static char[] zzUnpackCMap(String packed) { new char[0x10000]; intint j = 0; while (210) { int count = packed.charAt(i++); char value = packed.charAt(i++); do map[j++] = value; while (--count > 0); } return map; }", "n_tokens": 118, "n_pass": [95, 4, 4]}
{"time": "2021-02-15 03:08:07.676602", "score": "0.9996", "loss": "0.0006", "code": "private static char[] zzUnpackCMap(String packed) { new char[0x10000]; intint j = 0; while (210) { int count =(i++); char value = packed.charAt(i++); do map[j++] = value; while (--count > 0); } return map; }", "n_tokens": 114, "n_pass": [99, 5, 5]}
{"time": "2021-02-15 03:08:10.395357", "score": "0.9938", "loss": "0.012", "code": "private static char[] zzUnpackCMap(String packed) { new char[0x10000]; intint j = 0; while (210) { int count =(i++); charpacked.charAt(i++); do map[j++] = value; while (--count > 0); } return map; }", "n_tokens": 109, "n_pass": [102, 6, 6]}
{"time": "2021-02-15 03:08:13.090526", "score": "0.9938", "loss": "0.012", "code": "char[] zzUnpackCMap(String packed) { new char[0x10000]; intint j = 0; while (210) { int count =(i++); charpacked.charAt(i++); do map[j++] = value; while (--count > 0); } return map; }", "n_tokens": 105, "n_pass": [112, 7, 7]}
{"time": "2021-02-15 03:08:16.415415", "score": "0.9938", "loss": "0.012", "code": "char[] zzUnpackCMap(String packed) { new char[0x1]; intint j = 0; while (210) { int count =(i++); charpacked.charAt(i++); do map[j++] = value; while (--count > 0); } return map; }", "n_tokens": 101, "n_pass": [118, 8, 8]}
{"time": "2021-02-15 03:08:19.940016", "score": "0.9958", "loss": "0.0083", "code": "char[] zzUnpackCMap(String packed) { new char[0x1];int j = 0; while (210) { int count =(i++); charpacked.charAt(i++); do map[j++] = value; while (--count > 0); } return map; }", "n_tokens": 99, "n_pass": [189, 9, 9]}
{"time": "2021-02-15 03:08:22.608581", "score": "0.9941", "loss": "0.0111", "code": "char[] zzUnpackCMap(String packed) { new char[0x1];j = 0; while (210) { int count =(i++); charpacked.charAt(i++); do map[j++] = value; while (--count > 0); } return map; }", "n_tokens": 97, "n_pass": [190, 10, 10]}
{"time": "2021-02-15 03:08:25.263985", "score": "0.9945", "loss": "0.0103", "code": "char[] zzUnpackCMap(String packed) { new char[0x1];j = 0; while (0) { int count =(i++); charpacked.charAt(i++); do map[j++] = value; while (--count > 0); } return map; }", "n_tokens": 95, "n_pass": [196, 11, 11]}
{"time": "2021-02-15 03:08:27.923796", "score": "0.4716", "loss": "1.2389", "code": "char[] zzUnpackCMap(String packed) { new char[0x1];j = 0; while (0) { count =(i++); charpacked.charAt(i++); do map[j++] = value; while (--count > 0); } return map; }", "n_tokens": 93, "n_pass": [199, 12, 12]}
{"time": "2021-02-15 03:08:30.573750", "score": "0.5958", "loss": "1.1343", "code": "char[] zzUnpackCMap(String packed) { new char[0x1];j = 0; while (0) { count(i++); charpacked.charAt(i++); do map[j++] = value; while (--count > 0); } return map; }", "n_tokens": 91, "n_pass": [201, 13, 13]}
{"time": "2021-02-15 03:08:33.211746", "score": "0.6331", "loss": "1.0689", "code": "char[] zzUnpackCMap(String packed) { new char[0x1];j = 0; while (0) { count(i); charpacked.charAt(i++); do map[j++] = value; while (--count > 0); } return map; }", "n_tokens": 89, "n_pass": [203, 14, 14]}
{"time": "2021-02-15 03:08:35.887910", "score": "0.7669", "loss": "0.4979", "code": "char[] zzUnpackCMap(String packed) { new char[0x1];j = 0; while (0) { count(i);packed.charAt(i++); do map[j++] = value; while (--count > 0); } return map; }", "n_tokens": 87, "n_pass": [205, 15, 15]}
{"time": "2021-02-15 03:08:38.540525", "score": "0.6009", "loss": "0.9602", "code": "char[] zzUnpackCMap(String packed) { new char[0x1];j = 0; while (0) { count(i);charAt(i++); do map[j++] = value; while (--count > 0); } return map; }", "n_tokens": 85, "n_pass": [206, 16, 16]}
{"time": "2021-02-15 03:08:49.219625", "score": "0.6001", "loss": "0.9589", "code": "char[] zzUnpackCMap(String packed) { new char[0];j = 0; while (0) { count(i);charAt(i++); do map[j++] = value; while (--count > 0); } return map; }", "n_tokens": 83, "n_pass": [233, 20, 17]}
{"time": "2021-02-15 03:08:51.898651", "score": "0.8768", "loss": "0.3326", "code": "char[] zzUnpackCMap(String packed) { new char[0];j = 0; while (0) {(i);charAt(i++); do map[j++] = value; while (--count > 0); } return map; }", "n_tokens": 81, "n_pass": [242, 21, 18]}
{"time": "2021-02-15 03:09:11.189524", "score": "0.9719", "loss": "0.0843", "code": "char[] zzUnpackCMap(String packed) { new char[0];j = 0; while (0) {(i);(i++); do map[j++] = value; while (--count > 0); } return map; }", "n_tokens": 80, "n_pass": [355, 25, 19]}
{"time": "2021-02-15 03:09:13.891213", "score": "0.9719", "loss": "0.0843", "code": "char[] zzUnpackCMap(String packed) { new char[0];j = 0; while (0) {(i);(i++);do map[j++] = value; while (--count > 0); } return map; }", "n_tokens": 79, "n_pass": [361, 26, 20]}
{"time": "2021-02-15 03:09:21.857202", "score": "0.9719", "loss": "0.0843", "code": "char[] zzUnpackCMap(String packed) { new char[0];j = 0; while (0) {(i);(i++);do map[j++]= value; while (--count > 0); } return map; }", "n_tokens": 78, "n_pass": [370, 29, 21]}
{"time": "2021-02-15 03:09:24.518599", "score": "0.9719", "loss": "0.0843", "code": "char[] zzUnpackCMap(String packed) { new char[0];j = 0; while (0) {(i);(i++);do map[j++]=value; while (--count > 0); } return map; }", "n_tokens": 77, "n_pass": [372, 30, 22]}
{"time": "2021-02-15 03:09:27.176047", "score": "0.9719", "loss": "0.0843", "code": "char[] zzUnpackCMap(String packed) { new char[0];j = 0; while (0) {(i);(i++);do map[j++]=value;while (--count > 0); } return map; }", "n_tokens": 76, "n_pass": [375, 31, 23]}
{"time": "2021-02-15 03:09:29.830844", "score": "0.9719", "loss": "0.0843", "code": "char[] zzUnpackCMap(String packed) { new char[0];j = 0; while (0) {(i);(i++);do map[j++]=value;while(--count > 0); } return map; }", "n_tokens": 75, "n_pass": [377, 32, 24]}
{"time": "2021-02-15 03:09:32.473230", "score": "0.77", "loss": "0.46", "code": "char[] zzUnpackCMap(String packed) { new char[0];j = 0; while (0) {(i);(i++);do map[j++]=value;while(count > 0); } return map; }", "n_tokens": 73, "n_pass": [379, 33, 25]}
{"time": "2021-02-15 03:09:35.146901", "score": "0.5776", "loss": "0.7309", "code": "char[] zzUnpackCMap(String packed) { new char[0];j = 0; while (0) {(i);(i++);do map[j++]=value;while(count > 0); } map; }", "n_tokens": 71, "n_pass": [385, 34, 26]}
{"time": "2021-02-15 03:09:37.980915", "score": "0.5609", "loss": "0.756", "code": "char[] zzUnpackCMap(String packed) { new char[0];j = 0; while (0) {(i);(i++);do map[j++]=value;while(count > 0); }  }", "n_tokens": 69, "n_pass": [386, 35, 27]}
{"time": "2021-02-15 03:09:40.662601", "score": "0.5609", "loss": "0.756", "code": "char[]zzUnpackCMap(String packed) { new char[0];j = 0; while (0) {(i);(i++);do map[j++]=value;while(count > 0); }  }", "n_tokens": 68, "n_pass": [391, 36, 28]}
{"time": "2021-02-15 03:09:43.332711", "score": "0.5609", "loss": "0.756", "code": "char[]zzUnpackCMap(String packed){ new char[0];j = 0; while (0) {(i);(i++);do map[j++]=value;while(count > 0); }  }", "n_tokens": 67, "n_pass": [398, 37, 29]}
{"time": "2021-02-15 03:09:46.081602", "score": "0.5609", "loss": "0.756", "code": "char[]zzUnpackCMap(String packed){new char[0];j = 0; while (0) {(i);(i++);do map[j++]=value;while(count > 0); }  }", "n_tokens": 66, "n_pass": [400, 38, 30]}
{"time": "2021-02-15 03:09:48.810912", "score": "0.4239", "loss": "1.1347", "code": "char[]zzUnpackCMap(String packed){newchar[0];j = 0; while (0) {(i);(i++);do map[j++]=value;while(count > 0); }  }", "n_tokens": 65, "n_pass": [402, 39, 31]}
{"time": "2021-02-15 03:09:51.462420", "score": "0.4239", "loss": "1.1347", "code": "char[]zzUnpackCMap(String packed){newchar[0];j= 0; while (0) {(i);(i++);do map[j++]=value;while(count > 0); }  }", "n_tokens": 64, "n_pass": [409, 40, 32]}
{"time": "2021-02-15 03:09:54.172627", "score": "0.4239", "loss": "1.1347", "code": "char[]zzUnpackCMap(String packed){newchar[0];j=0; while (0) {(i);(i++);do map[j++]=value;while(count > 0); }  }", "n_tokens": 63, "n_pass": [411, 41, 33]}
{"time": "2021-02-15 03:09:56.838886", "score": "0.4239", "loss": "1.1347", "code": "char[]zzUnpackCMap(String packed){newchar[0];j=0;while (0) {(i);(i++);do map[j++]=value;while(count > 0); }  }", "n_tokens": 62, "n_pass": [414, 42, 34]}
{"time": "2021-02-15 03:09:59.504517", "score": "0.4239", "loss": "1.1347", "code": "char[]zzUnpackCMap(String packed){newchar[0];j=0;while(0) {(i);(i++);do map[j++]=value;while(count > 0); }  }", "n_tokens": 61, "n_pass": [416, 43, 35]}
{"time": "2021-02-15 03:10:02.147030", "score": "0.4239", "loss": "1.1347", "code": "char[]zzUnpackCMap(String packed){newchar[0];j=0;while(0){(i);(i++);do map[j++]=value;while(count > 0); }  }", "n_tokens": 60, "n_pass": [420, 44, 36]}
{"time": "2021-02-15 03:10:10.679877", "score": "0.4554", "loss": "0.9767", "code": "char[]zzUnpackCMap(String packed){newchar[0];j0;while(0){(i);(i++);do map[j++]=value;while(count > 0); }  }", "n_tokens": 59, "n_pass": [468, 47, 37]}
{"time": "2021-02-15 03:10:13.332233", "score": "0.4554", "loss": "0.9767", "code": "char[]zzUnpackCMap(String packed){newchar[0];j;while(0){(i);(i++);do map[j++]=value;while(count > 0); }  }", "n_tokens": 58, "n_pass": [469, 48, 38]}
{"time": "2021-02-15 03:10:21.773162", "score": "0.4692", "loss": "0.9286", "code": "char[]zzUnpackCMap(String packed){newchar[0];;while(0){(i);(i++);do map[j++]=value;while(count > 0); }  }", "n_tokens": 57, "n_pass": [521, 51, 39]}
{"time": "2021-02-15 03:10:24.434016", "score": "0.4692", "loss": "0.9286", "code": "char[]zzUnpackCMap(String packed){newchar[0];while(0){(i);(i++);do map[j++]=value;while(count > 0); }  }", "n_tokens": 56, "n_pass": [522, 52, 40]}
{"time": "2021-02-15 03:10:35.032485", "score": "0.4692", "loss": "0.9286", "code": "char[]zzUnpackCMap(String packed){newchar[0];while(0){(i);(i++);do map[j++]=value;while(count> 0); }  }", "n_tokens": 55, "n_pass": [586, 55, 41]}
{"time": "2021-02-15 03:10:38.111243", "score": "0.4692", "loss": "0.9286", "code": "char[]zzUnpackCMap(String packed){newchar[0];while(0){(i);(i++);do map[j++]=value;while(count>0); }  }", "n_tokens": 54, "n_pass": [588, 56, 42]}
{"time": "2021-02-15 03:10:40.774375", "score": "0.4692", "loss": "0.9286", "code": "char[]zzUnpackCMap(String packed){newchar[0];while(0){(i);(i++);do map[j++]=value;while(count>0);}  }", "n_tokens": 53, "n_pass": [592, 57, 43]}
{"time": "2021-02-15 03:10:43.421988", "score": "0.4692", "loss": "0.9286", "code": "char[]zzUnpackCMap(String packed){newchar[0];while(0){(i);(i++);do map[j++]=value;while(count>0);} }", "n_tokens": 52, "n_pass": [594, 58, 44]}
{"time": "2021-02-15 03:10:46.096375", "score": "0.4692", "loss": "0.9286", "code": "char[]zzUnpackCMap(String packed){newchar[0];while(0){(i);(i++);do map[j++]=value;while(count>0);}}", "n_tokens": 51, "n_pass": [595, 59, 45]}

Minimal simplified code:
char[]zzUnpackCMap(String packed){newchar[0];while(0){(i);(i++);do map[j++]=value;while(count>0);}}

