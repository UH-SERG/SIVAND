
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/bcgit__bc-java/prov/src/main/jdk1.1/org/bouncycastle/x509/AttributeCertificateHolder_equals.java
method_name = equals
method_body = public boolean equals(Object obj) { if (obj == this) { return true; } if (!(obj instanceof AttributeCertificateHolder)) { return false; } AttributeCertificateHolder other = (AttributeCertificateHolder) obj; return this.holder.equals(other.holder); }
predict, score, loss = equals, 0.9999847412109375, 2.109982233378105e-05

Trace of simplified code(s):
{"time": "2021-02-14 05:17:00.458579", "score": "1.0", "loss": "0.0", "code": "public boolean equals(Object obj) { if (obj == this) { return true; } if (!(obj instanceof AttributeCertificateHolder)) { return false; } AttributeCertificateHolder other = (AttributeCertificateHolder) obj; return this.holder.equals(other.holder); }", "n_tokens": 83, "n_pass": [1, 1, 1]}
{"time": "2021-02-14 05:17:03.523921", "score": "1.0", "loss": "0.0", "code": "public boolean equals(Object obj) { if (obj == this) { return true; } if (!(obj instanceof AttributeCertificateHolder)) { return false; } AttributeCertificateHolder other = holder.equals(other.holder); }", "n_tokens": 72, "n_pass": [26, 2, 2]}
{"time": "2021-02-14 05:17:06.585515", "score": "1.0", "loss": "0.0", "code": "public boolean equals(Object obj) { if (obj == this) { } if (!(obj instanceof AttributeCertificateHolder)) { return false; } AttributeCertificateHolder other = holder.equals(other.holder); }", "n_tokens": 67, "n_pass": [55, 3, 3]}
{"time": "2021-02-14 05:17:09.225209", "score": "1.0", "loss": "0.0", "code": "public boolean equals(Object obj) { if (obj == this) { } if (!(obj instanceof AttributeCertificateHolder)) { return false; }  holder.equals(other.holder); }", "n_tokens": 62, "n_pass": [61, 4, 4]}
{"time": "2021-02-14 05:17:11.900875", "score": "1.0", "loss": "0.0", "code": "public boolean equals(Object obj) { if (obj == this) { } if (!(obj instanceof AttributeCertificateHolder)) { return false; } equals(other.holder); }", "n_tokens": 59, "n_pass": [98, 5, 5]}
{"time": "2021-02-14 05:17:14.537639", "score": "1.0", "loss": "0.0", "code": "boolean equals(Object obj) { if (obj == this) { } if (!(obj instanceof AttributeCertificateHolder)) { return false; } equals(other.holder); }", "n_tokens": 57, "n_pass": [101, 6, 6]}
{"time": "2021-02-14 05:17:17.591683", "score": "0.9999", "loss": "0.0002", "code": "boolean equals(Object obj) { if (obj == this) { } if (!(obj )) { return false; } equals(other.holder); }", "n_tokens": 54, "n_pass": [116, 7, 7]}
{"time": "2021-02-14 05:17:24.782904", "score": "0.9999", "loss": "0.0002", "code": "boolean equals(Object obj) { if (obj == this) { } if ((obj )) { return false; } equals(other.holder); }", "n_tokens": 53, "n_pass": [181, 8, 8]}
{"time": "2021-02-14 05:17:27.444400", "score": "0.9146", "loss": "0.1508", "code": "boolean equals(Object obj) { if (obj == this) { } if ((obj )) { false; } equals(other.holder); }", "n_tokens": 51, "n_pass": [186, 9, 9]}
{"time": "2021-02-14 05:17:30.083952", "score": "0.9085", "loss": "0.1601", "code": "boolean equals(Object obj) { if (obj == this) { } if ((obj )) {  } equals(other.holder); }", "n_tokens": 49, "n_pass": [187, 10, 10]}
{"time": "2021-02-14 05:17:32.730561", "score": "0.9638", "loss": "0.0608", "code": "boolean equals(Object obj) { if (obj == this) { } if ((obj )) {  }(other.holder); }", "n_tokens": 47, "n_pass": [189, 11, 11]}
{"time": "2021-02-14 05:17:35.370646", "score": "0.9663", "loss": "0.054", "code": "boolean equals(Object obj) { if (obj == this) { } if ((obj )) {  }(other); }", "n_tokens": 45, "n_pass": [191, 12, 12]}
{"time": "2021-02-14 05:17:38.805534", "score": "0.9663", "loss": "0.054", "code": "boolean equals(Object obj){ if (obj == this) { } if ((obj )) {  }(other); }", "n_tokens": 44, "n_pass": [202, 13, 13]}
{"time": "2021-02-14 05:17:41.429651", "score": "0.9663", "loss": "0.054", "code": "boolean equals(Object obj){if (obj == this) { } if ((obj )) {  }(other); }", "n_tokens": 43, "n_pass": [204, 14, 14]}
{"time": "2021-02-14 05:17:44.077074", "score": "0.9663", "loss": "0.054", "code": "boolean equals(Object obj){if(obj == this) { } if ((obj )) {  }(other); }", "n_tokens": 42, "n_pass": [206, 15, 15]}
{"time": "2021-02-14 05:17:46.708627", "score": "0.9663", "loss": "0.054", "code": "boolean equals(Object obj){if(obj== this) { } if ((obj )) {  }(other); }", "n_tokens": 41, "n_pass": [209, 16, 16]}
{"time": "2021-02-14 05:17:49.327977", "score": "0.9413", "loss": "0.0654", "code": "boolean equals(Object obj){if(obj= this) { } if ((obj )) {  }(other); }", "n_tokens": 40, "n_pass": [210, 17, 17]}
{"time": "2021-02-14 05:17:51.982470", "score": "0.9413", "loss": "0.0654", "code": "boolean equals(Object obj){if(obj=this) { } if ((obj )) {  }(other); }", "n_tokens": 39, "n_pass": [212, 18, 18]}
{"time": "2021-02-14 05:17:54.604006", "score": "0.9413", "loss": "0.0654", "code": "boolean equals(Object obj){if(obj=this){ } if ((obj )) {  }(other); }", "n_tokens": 38, "n_pass": [215, 19, 19]}
{"time": "2021-02-14 05:17:57.233723", "score": "0.9413", "loss": "0.0654", "code": "boolean equals(Object obj){if(obj=this){} if ((obj )) {  }(other); }", "n_tokens": 37, "n_pass": [217, 20, 20]}
{"time": "2021-02-14 05:17:59.858453", "score": "0.9413", "loss": "0.0654", "code": "boolean equals(Object obj){if(obj=this){}if ((obj )) {  }(other); }", "n_tokens": 36, "n_pass": [219, 21, 21]}
{"time": "2021-02-14 05:18:02.484640", "score": "0.9413", "loss": "0.0654", "code": "boolean equals(Object obj){if(obj=this){}if((obj )) {  }(other); }", "n_tokens": 35, "n_pass": [221, 22, 22]}
{"time": "2021-02-14 05:18:05.902881", "score": "0.9186", "loss": "0.1145", "code": "boolean equals(Object obj){if(objthis){}if((obj )) {  }(other); }", "n_tokens": 34, "n_pass": [243, 23, 23]}
{"time": "2021-02-14 05:18:08.512857", "score": "0.9587", "loss": "0.0499", "code": "boolean equals(Object obj){if(obj){}if((obj )) {  }(other); }", "n_tokens": 33, "n_pass": [244, 24, 24]}
{"time": "2021-02-14 05:18:14.213123", "score": "0.9587", "loss": "0.0499", "code": "boolean equals(Object obj){if(obj){}if((obj)) {  }(other); }", "n_tokens": 32, "n_pass": [288, 25, 25]}
{"time": "2021-02-14 05:18:16.838691", "score": "0.9587", "loss": "0.0499", "code": "boolean equals(Object obj){if(obj){}if((obj)){  }(other); }", "n_tokens": 31, "n_pass": [290, 26, 26]}
{"time": "2021-02-14 05:18:19.456638", "score": "0.9587", "loss": "0.0499", "code": "boolean equals(Object obj){if(obj){}if((obj)){ }(other); }", "n_tokens": 30, "n_pass": [292, 27, 27]}
{"time": "2021-02-14 05:18:22.087804", "score": "0.9587", "loss": "0.0499", "code": "boolean equals(Object obj){if(obj){}if((obj)){}(other); }", "n_tokens": 29, "n_pass": [293, 28, 28]}
{"time": "2021-02-14 05:18:24.700950", "score": "0.9587", "loss": "0.0499", "code": "boolean equals(Object obj){if(obj){}if((obj)){}(other);}", "n_tokens": 28, "n_pass": [299, 29, 29]}

Minimal simplified code:
boolean equals(Object obj){if(obj){}if((obj)){}(other);}

