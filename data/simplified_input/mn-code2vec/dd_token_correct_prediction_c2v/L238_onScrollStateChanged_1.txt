
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/w446108264__ScrollableLayout/ScrollableLayout/app/src/main/java/com/scrollablelayout/simple/recyclerloadmore/EndlessRecyclerOnScrollListener_onScrollStateChanged.java
method_name = onScrollStateChanged
method_body = @Override public void onScrollStateChanged(RecyclerView recyclerView, int newState) { super.onScrollStateChanged(recyclerView, newState); currentScrollState = newState; RecyclerView.LayoutManager layoutManager = recyclerView.getLayoutManager(); int visibleItemCount = layoutManager.getChildCount(); int totalItemCount = layoutManager.getItemCount(); if ((visibleItemCount > 0 && currentScrollState == RecyclerView.SCROLL_STATE_IDLE && (lastVisibleItemPosition) >= totalItemCount - minPositionToEndless)) { onLoadMore(recyclerView); } }
predict, score, loss = onScrollStateChanged, 0.9999614953994751, 6.210611172718927e-05

Trace of simplified code(s):
{"time": "2021-02-14 12:37:32.201473", "score": "1.0", "loss": "0.0001", "code": "@Override public void onScrollStateChanged(RecyclerView recyclerView, int newState) { super.onScrollStateChanged(recyclerView, newState); currentScrollState = newState; RecyclerView.LayoutManager layoutManager = recyclerView.getLayoutManager(); int visibleItemCount = layoutManager.getChildCount(); int totalItemCount = layoutManager.getItemCount(); if ((visibleItemCount > 0 && currentScrollState == RecyclerView.SCROLL_STATE_IDLE && (lastVisibleItemPosition) >= totalItemCount - minPositionToEndless)) { onLoadMore(recyclerView); } }", "n_tokens": 135, "n_pass": [1, 1, 1]}
{"time": "2021-02-14 12:37:34.863700", "score": "1.0", "loss": "0.0001", "code": "@Override public void onScrollStateChanged(RecyclerView recyclerView, int newState) { super.onScrollStateChanged(recyclerView, newState); currentScrollStateint totalItemCount = layoutManager.getItemCount(); if ((visibleItemCount > 0 && currentScrollState == RecyclerView.SCROLL_STATE_IDLE && (lastVisibleItemPosition) >= totalItemCount - minPositionToEndless)) { onLoadMore(recyclerView); } }", "n_tokens": 101, "n_pass": [9, 2, 2]}
{"time": "2021-02-14 12:37:37.535334", "score": "0.9999", "loss": "0.0001", "code": "@Override public void onScrollStateChanged(RecyclerView recyclerView, int newState) { super.onScrollStateChanged(recyclerView, newState); currentScrollStateint totalItemCount = layoutManager.getItemCount(); if ((_STATE_IDLE && (lastVisibleItemPosition) >= totalItemCount - minPositionToEndless)) { onLoadMore(recyclerView); } }", "n_tokens": 84, "n_pass": [19, 3, 3]}
{"time": "2021-02-14 12:37:40.187502", "score": "1.0", "loss": "0.0001", "code": "@Override public void onScrollStateChanged(RecyclerView recyclerView, int newState) { super.onScrollStateChanged(recyclerView, newState); currentScrollStateint totalItemCount = layoutManager.getItemCount(); if ((- minPositionToEndless)) { onLoadMore(recyclerView); } }", "n_tokens": 67, "n_pass": [20, 4, 4]}
{"time": "2021-02-14 12:37:42.842926", "score": "1.0", "loss": "0.0001", "code": "@Override public void onScrollStateChanged(RecyclerView recyclerView, int newState) { super.onScrollStateChanged(recyclerView, newState); currentScrollStateint totalItemCount = layoutManager.getItemCount(); if ((- minPositionToEndless)) {; } }", "n_tokens": 62, "n_pass": [59, 5, 5]}
{"time": "2021-02-14 12:37:45.495355", "score": "1.0", "loss": "0.0", "code": " void onScrollStateChanged(RecyclerView recyclerView, int newState) { super.onScrollStateChanged(recyclerView, newState); currentScrollStateint totalItemCount = layoutManager.getItemCount(); if ((- minPositionToEndless)) {; } }", "n_tokens": 58, "n_pass": [61, 6, 6]}
{"time": "2021-02-14 12:37:48.167705", "score": "0.9998", "loss": "0.0007", "code": " void onScrollStateChanged(RecyclerView recyclerViewnewState) { super.onScrollStateChanged(recyclerView, newState); currentScrollStateint totalItemCount = layoutManager.getItemCount(); if ((- minPositionToEndless)) {; } }", "n_tokens": 54, "n_pass": [64, 7, 7]}
{"time": "2021-02-14 12:37:50.816583", "score": "0.9997", "loss": "0.0007", "code": " void onScrollStateChanged(RecyclerView recyclerViewnewState) { super.onScrollStateChanged(recyclerView, newState); currentScrollStateint totalItemCount = layoutManager; if ((- minPositionToEndless)) {; } }", "n_tokens": 50, "n_pass": [71, 8, 8]}
{"time": "2021-02-14 12:37:53.479879", "score": "0.9999", "loss": "0.0004", "code": " void onScrollStateChanged(RecyclerView recyclerViewnewState) { super.onScrollStateChanged(recyclerView, newState); currentScrollStateint totalItemCount; if ((- minPositionToEndless)) {; } }", "n_tokens": 46, "n_pass": [83, 9, 9]}
{"time": "2021-02-14 12:37:56.119752", "score": "0.9999", "loss": "0.0003", "code": " void onScrollStateChanged(RecyclerView recyclerViewnewState) { super.onScrollStateChanged(recyclerView, newState); ; if ((- minPositionToEndless)) {; } }", "n_tokens": 42, "n_pass": [94, 10, 10]}
{"time": "2021-02-14 12:37:59.519422", "score": "0.9999", "loss": "0.0003", "code": " void onScrollStateChanged(RecyclerView recyclerViewnewState) { super.onScrollStateChanged(recyclerView, newState); if ((- minPositionToEndless)) {; } }", "n_tokens": 40, "n_pass": [125, 11, 11]}
{"time": "2021-02-14 12:38:02.164312", "score": "0.9999", "loss": "0.0003", "code": " void onScrollStateChanged(RecyclerView recyclerViewnewState) { super.onScrollStateChanged(recyclerView, newState); if ((minPositionToEndless)) {; } }", "n_tokens": 38, "n_pass": [127, 12, 12]}
{"time": "2021-02-14 12:38:05.589142", "score": "0.9994", "loss": "0.001", "code": " void onScrollStateChanged(RecyclerView recyclerViewnewState) { super.onScrollStateChanged(recyclerViewnewState); if ((minPositionToEndless)) {; } }", "n_tokens": 36, "n_pass": [141, 13, 13]}
{"time": "2021-02-14 12:38:12.797385", "score": "0.9993", "loss": "0.0017", "code": " void onScrollStateChanged(RecyclerView recyclerViewnewState) { super.onScrollStateChanged(recyclerView); if ((minPositionToEndless)) {; } }", "n_tokens": 35, "n_pass": [193, 14, 14]}
{"time": "2021-02-14 12:38:15.423829", "score": "0.9993", "loss": "0.0017", "code": " void onScrollStateChanged(RecyclerView recyclerViewnewState) { super.onScrollStateChanged(recyclerView);if ((minPositionToEndless)) {; } }", "n_tokens": 34, "n_pass": [195, 15, 15]}
{"time": "2021-02-14 12:38:18.043835", "score": "0.9993", "loss": "0.0017", "code": " void onScrollStateChanged(RecyclerView recyclerViewnewState) { super.onScrollStateChanged(recyclerView);if((minPositionToEndless)) {; } }", "n_tokens": 33, "n_pass": [197, 16, 16]}
{"time": "2021-02-14 12:38:20.662679", "score": "0.9993", "loss": "0.0017", "code": " void onScrollStateChanged(RecyclerView recyclerViewnewState) { super.onScrollStateChanged(recyclerView);if((minPositionToEndless)){; } }", "n_tokens": 32, "n_pass": [203, 17, 17]}
{"time": "2021-02-14 12:38:23.329969", "score": "0.9993", "loss": "0.0017", "code": " void onScrollStateChanged(RecyclerView recyclerViewnewState) { super.onScrollStateChanged(recyclerView);if((minPositionToEndless)){ } }", "n_tokens": 31, "n_pass": [205, 18, 18]}
{"time": "2021-02-14 12:38:25.947085", "score": "0.9993", "loss": "0.0017", "code": "void onScrollStateChanged(RecyclerView recyclerViewnewState) { super.onScrollStateChanged(recyclerView);if((minPositionToEndless)){ } }", "n_tokens": 30, "n_pass": [208, 19, 19]}
{"time": "2021-02-14 12:38:29.369882", "score": "0.9999", "loss": "0.0003", "code": "void onScrollStateChanged(RecyclerView newState) { super.onScrollStateChanged(recyclerView);if((minPositionToEndless)){ } }", "n_tokens": 29, "n_pass": [215, 20, 20]}
{"time": "2021-02-14 12:38:31.988993", "score": "0.9999", "loss": "0.0003", "code": "void onScrollStateChanged(RecyclerView newState){ super.onScrollStateChanged(recyclerView);if((minPositionToEndless)){ } }", "n_tokens": 28, "n_pass": [218, 21, 21]}
{"time": "2021-02-14 12:38:34.614158", "score": "0.9999", "loss": "0.0003", "code": "void onScrollStateChanged(RecyclerView newState){super.onScrollStateChanged(recyclerView);if((minPositionToEndless)){ } }", "n_tokens": 27, "n_pass": [220, 22, 22]}
{"time": "2021-02-14 12:38:37.232674", "score": "0.8575", "loss": "0.225", "code": "void onScrollStateChanged(RecyclerView newState){superonScrollStateChanged(recyclerView);if((minPositionToEndless)){ } }", "n_tokens": 26, "n_pass": [222, 23, 23]}
{"time": "2021-02-14 12:38:40.241678", "score": "0.7491", "loss": "0.488", "code": "void onScrollStateChanged(RecyclerView newState){superonScrollStateChanged();if((minPositionToEndless)){ } }", "n_tokens": 25, "n_pass": [225, 24, 24]}
{"time": "2021-02-14 12:38:43.678306", "score": "0.9999", "loss": "0.0002", "code": "void onScrollStateChanged(RecyclerView newState){onScrollStateChanged();if((minPositionToEndless)){ } }", "n_tokens": 24, "n_pass": [246, 25, 25]}
{"time": "2021-02-14 12:38:47.835961", "score": "0.9999", "loss": "0.0002", "code": "void onScrollStateChanged(RecyclerView newState){onScrollStateChanged();if((minPositionToEndless)){} }", "n_tokens": 23, "n_pass": [273, 26, 26]}
{"time": "2021-02-14 12:38:50.480726", "score": "0.9999", "loss": "0.0002", "code": "void onScrollStateChanged(RecyclerView newState){onScrollStateChanged();if((minPositionToEndless)){}}", "n_tokens": 22, "n_pass": [274, 27, 27]}

Minimal simplified code:
void onScrollStateChanged(RecyclerView newState){onScrollStateChanged();if((minPositionToEndless)){}}

