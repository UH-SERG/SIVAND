
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/OpenRock__OpenAM/openam-tools/openam-installtools/src/main/java/com/sun/identity/install/tools/configurator/StateData_toString.java
method_name = toString
method_body = public String toString() { StringBuffer sb = new StringBuffer(); sb.append(" instanceName: "); sb.append(instanceName).append(LINE_SEP); sb.append(" isInstanceData: "); sb.append(isInstanceData).append(LINE_SEP); sb.append(" nameValueMap:").append(LINE_SEP); Iterator iter = nameValueMap.entrySet().iterator(); while (iter.hasNext()) { Map.Entry me = (Map.Entry) iter.next(); sb.append(" "); sb.append((String) me.getKey()).append(" = "); sb.append(me.getValue().toString()).append("\n"); } return sb.toString(); }
predict, score, loss = toString, 0.793682873249054, 0.957342267036438

Trace of simplified code(s):
{"time": "2021-02-14 13:52:46.529859", "score": "0.3664", "loss": "3.0297", "code": "public String toString() { StringBuffer sb = new StringBuffer(); sb.append(\" instanceName: \"); sb.append(instanceName).append(LINE_SEP); sb.append(\" isInstanceData: \"); sb.append(isInstanceData).append(LINE_SEP); sb.append(\" nameValueMap:\").append(LINE_SEP); Iterator iter = nameValueMap.entrySet().iterator(); while (iter.hasNext()) { Map.Entry me = (Map.Entry) iter.next(); sb.append(\" \"); sb.append((String) me.getKey()).append(\" = \"); sb.append(me.getValue().toString()).append(\"\\n\"); } return sb.toString(); }", "n_tokens": 219, "n_pass": [1, 1, 1]}
{"time": "2021-02-14 13:52:49.223798", "score": "0.9915", "loss": "0.0195", "code": "public String toString() { StringBuffer sb = new StringBuffer(); sb.append(\" instanceName: \"); sb.append(instanceName).append(LINE_SEP); sb.append.iterator(); while (iter.hasNext()) { Map.Entry me = (Map.Entry) iter.next(); sb.append(\" \"); sb.append((String) me.getKey()).append(\" = \"); sb.append(me.getValue().toString()).append(\"\\n\"); } return sb.toString(); }", "n_tokens": 164, "n_pass": [9, 2, 2]}
{"time": "2021-02-14 13:52:51.937570", "score": "0.9672", "loss": "0.1285", "code": "public String toString() { StringBuffer sb = new StringBuffer(); sb.append(instanceName).append(LINE_SEP); sb.append.iterator(); while (iter.hasNext()) { Map.Entry me = (Map.Entry) iter.next(); sb.append(\" \"); sb.append((String) me.getKey()).append(\" = \"); sb.append(me.getValue().toString()).append(\"\\n\"); } return sb.toString(); }", "n_tokens": 151, "n_pass": [46, 3, 3]}
{"time": "2021-02-14 13:52:54.607585", "score": "0.9906", "loss": "0.0201", "code": "public String toString() { StringBuffer sb = new StringBuffer(); sb.append.append.iterator(); while (iter.hasNext()) { Map.Entry me = (Map.Entry) iter.next(); sb.append(\" \"); sb.append((String) me.getKey()).append(\" = \"); sb.append(me.getValue().toString()).append(\"\\n\"); } return sb.toString(); }", "n_tokens": 138, "n_pass": [47, 4, 4]}
{"time": "2021-02-14 13:52:57.302280", "score": "0.9973", "loss": "0.006", "code": "public String toString() { StringBuffer sb = new StringBuffer(); sb.append.append.iterator(); while (iter.hasNext()) { Map.Entry me = (Map.Entry) iter.append(\" \"); sb.append((String) me.getKey()).append(\" = \"); sb.append(me.getValue().toString()).append(\"\\n\"); } return sb.toString(); }", "n_tokens": 131, "n_pass": [83, 5, 5]}
{"time": "2021-02-14 13:52:59.961700", "score": "0.9975", "loss": "0.0058", "code": "public String toString() { StringBuffer sb = new StringBuffer(); sb.append.append.iterator(); while (iter.hasNext()) { Map.Entry me = (Map.Entry) iter; sb.append((String) me.getKey()).append(\" = \"); sb.append(me.getValue().toString()).append(\"\\n\"); } return sb.toString(); }", "n_tokens": 124, "n_pass": [84, 6, 6]}
{"time": "2021-02-14 13:53:02.630969", "score": "0.998", "loss": "0.0044", "code": "public String toString() { StringBuffer (); sb.append.append.iterator(); while (iter.hasNext()) { Map.Entry me = (Map.Entry) iter; sb.append((String) me.getKey()).append(\" = \"); sb.append(me.getValue().toString()).append(\"\\n\"); } return sb.toString(); }", "n_tokens": 117, "n_pass": [96, 7, 7]}
{"time": "2021-02-14 13:53:05.304470", "score": "0.9985", "loss": "0.0032", "code": "public String toString() { StringBuffer .append.iterator(); while (iter.hasNext()) { Map.Entry me = (Map.Entry) iter; sb.append((String) me.getKey()).append(\" = \"); sb.append(me.getValue().toString()).append(\"\\n\"); } return sb.toString(); }", "n_tokens": 110, "n_pass": [97, 8, 8]}
{"time": "2021-02-14 13:53:08.010039", "score": "0.9983", "loss": "0.0044", "code": "public String toString() { StringBuffer .append.iterator(); while (iter.hasNext()) { Mapme = (Map.Entry) iter; sb.append((String) me.getKey()).append(\" = \"); sb.append(me.getValue().toString()).append(\"\\n\"); } return sb.toString(); }", "n_tokens": 107, "n_pass": [153, 9, 9]}
{"time": "2021-02-14 13:53:10.702307", "score": "0.9923", "loss": "0.0188", "code": "public String toString() { StringBuffer .append.iterator(); while (iter.hasNext()) { Mapme = (Map.Entry) sb.append((String) me.getKey()).append(\" = \"); sb.append(me.getValue().toString()).append(\"\\n\"); } return sb.toString(); }", "n_tokens": 104, "n_pass": [157, 10, 10]}
{"time": "2021-02-14 13:53:13.354385", "score": "0.9955", "loss": "0.0109", "code": "public String toString() { StringBuffer .append.iterator(); while (iter.hasNext()) { Mapme = (Map.Entry)append((String) me.getKey()).append(\" = \"); sb.append(me.getValue().toString()).append(\"\\n\"); } return sb.toString(); }", "n_tokens": 101, "n_pass": [158, 11, 11]}
{"time": "2021-02-14 13:53:15.995595", "score": "0.9952", "loss": "0.0115", "code": "public String toString() { StringBuffer .append.iterator(); while (iter.hasNext()) { Mapme = (Map.Entry)append((String) me).append(\" = \"); sb.append(me.getValue().toString()).append(\"\\n\"); } return sb.toString(); }", "n_tokens": 97, "n_pass": [161, 12, 12]}
{"time": "2021-02-14 13:53:18.668703", "score": "0.9947", "loss": "0.0124", "code": "public String toString() { StringBuffer .append.iterator(); while (iter.hasNext()) { Mapme = (Map.Entry)append((String) me).append(\" = \"); sb.append(me.getValue()).append(\"\\n\"); } return sb.toString(); }", "n_tokens": 93, "n_pass": [167, 13, 13]}
{"time": "2021-02-14 13:53:24.382948", "score": "0.9947", "loss": "0.0124", "code": "public String toString() { StringBuffer .append.iterator(); while (iter.hasNext()) { Mapme = (Map.Entry)append((String) me).append(\" = \"); sb.append(me.getValue()).append(\"\"); } return sb.toString(); }", "n_tokens": 91, "n_pass": [252, 14, 14]}
{"time": "2021-02-14 13:53:27.031663", "score": "0.9811", "loss": "0.0471", "code": "public String toString() { StringBuffer .append.iterator(); while (iter.hasNext()) { Mapme = (Map.Entry)append((String) me).append(\" = \"); sb.append(me.getValue()).append(\"\"); } sb.toString(); }", "n_tokens": 89, "n_pass": [256, 15, 15]}
{"time": "2021-02-14 13:53:29.681181", "score": "0.984", "loss": "0.0464", "code": "public String toString() { StringBuffer .append.iterator(); while (iter.hasNext()) { Mapme = (Map.Entry)append((String) me).append(\" = \"); sb.append(me.getValue()).append(\"\"); } toString(); }", "n_tokens": 87, "n_pass": [257, 16, 16]}
{"time": "2021-02-14 13:53:32.326910", "score": "0.984", "loss": "0.0464", "code": " String toString() { StringBuffer .append.iterator(); while (iter.hasNext()) { Mapme = (Map.Entry)append((String) me).append(\" = \"); sb.append(me.getValue()).append(\"\"); } toString(); }", "n_tokens": 86, "n_pass": [261, 17, 17]}
{"time": "2021-02-14 13:53:34.990751", "score": "0.984", "loss": "0.0464", "code": "String toString() { StringBuffer .append.iterator(); while (iter.hasNext()) { Mapme = (Map.Entry)append((String) me).append(\" = \"); sb.append(me.getValue()).append(\"\"); } toString(); }", "n_tokens": 85, "n_pass": [262, 18, 18]}
{"time": "2021-02-14 13:53:38.959513", "score": "0.984", "loss": "0.0464", "code": "String toString(){ StringBuffer .append.iterator(); while (iter.hasNext()) { Mapme = (Map.Entry)append((String) me).append(\" = \"); sb.append(me.getValue()).append(\"\"); } toString(); }", "n_tokens": 84, "n_pass": [268, 19, 19]}
{"time": "2021-02-14 13:53:41.606972", "score": "0.984", "loss": "0.0464", "code": "String toString(){StringBuffer .append.iterator(); while (iter.hasNext()) { Mapme = (Map.Entry)append((String) me).append(\" = \"); sb.append(me.getValue()).append(\"\"); } toString(); }", "n_tokens": 83, "n_pass": [270, 20, 20]}
{"time": "2021-02-14 13:53:44.251259", "score": "0.984", "loss": "0.0464", "code": "String toString(){StringBuffer.append.iterator(); while (iter.hasNext()) { Mapme = (Map.Entry)append((String) me).append(\" = \"); sb.append(me.getValue()).append(\"\"); } toString(); }", "n_tokens": 82, "n_pass": [272, 21, 21]}
{"time": "2021-02-14 13:53:46.895591", "score": "0.9655", "loss": "0.1093", "code": "String toString(){StringBufferappend.iterator(); while (iter.hasNext()) { Mapme = (Map.Entry)append((String) me).append(\" = \"); sb.append(me.getValue()).append(\"\"); } toString(); }", "n_tokens": 81, "n_pass": [273, 22, 22]}
{"time": "2021-02-14 13:53:49.554840", "score": "0.9876", "loss": "0.0294", "code": "String toString(){StringBuffer.iterator(); while (iter.hasNext()) { Mapme = (Map.Entry)append((String) me).append(\" = \"); sb.append(me.getValue()).append(\"\"); } toString(); }", "n_tokens": 80, "n_pass": [274, 23, 23]}
{"time": "2021-02-14 13:53:52.192967", "score": "0.9901", "loss": "0.0223", "code": "String toString(){StringBufferiterator(); while (iter.hasNext()) { Mapme = (Map.Entry)append((String) me).append(\" = \"); sb.append(me.getValue()).append(\"\"); } toString(); }", "n_tokens": 79, "n_pass": [275, 24, 24]}
{"time": "2021-02-14 13:53:54.828899", "score": "0.9917", "loss": "0.0175", "code": "String toString(){StringBufferiterator(); while (hasNext()) { Mapme = (Map.Entry)append((String) me).append(\" = \"); sb.append(me.getValue()).append(\"\"); } toString(); }", "n_tokens": 77, "n_pass": [280, 25, 25]}
{"time": "2021-02-14 13:53:57.465545", "score": "0.9917", "loss": "0.015", "code": "String toString(){StringBufferiterator(); while (hasNext()) {me = (Map.Entry)append((String) me).append(\" = \"); sb.append(me.getValue()).append(\"\"); } toString(); }", "n_tokens": 75, "n_pass": [284, 26, 26]}
{"time": "2021-02-14 13:54:00.099038", "score": "0.9909", "loss": "0.0169", "code": "String toString(){StringBufferiterator(); while (hasNext()) {me = (Map)append((String) me).append(\" = \"); sb.append(me.getValue()).append(\"\"); } toString(); }", "n_tokens": 73, "n_pass": [288, 27, 27]}
{"time": "2021-02-14 13:54:02.736559", "score": "0.9832", "loss": "0.0316", "code": "String toString(){StringBufferiterator(); while (hasNext()) {me = (Map)append((String)).append(\" = \"); sb.append(me.getValue()).append(\"\"); } toString(); }", "n_tokens": 71, "n_pass": [292, 28, 28]}
{"time": "2021-02-14 13:54:05.404302", "score": "0.9811", "loss": "0.0347", "code": "String toString(){StringBufferiterator(); while (hasNext()) {me = (Map)append((String)).append(\" \"); sb.append(me.getValue()).append(\"\"); } toString(); }", "n_tokens": 69, "n_pass": [296, 29, 29]}
{"time": "2021-02-14 13:54:08.062701", "score": "0.9746", "loss": "0.0469", "code": "String toString(){StringBufferiterator(); while (hasNext()) {me = (Map)append((String)).append(\" \"); append(me.getValue()).append(\"\"); } toString(); }", "n_tokens": 67, "n_pass": [299, 30, 30]}
{"time": "2021-02-14 13:54:10.704162", "score": "0.9823", "loss": "0.0326", "code": "String toString(){StringBufferiterator(); while (hasNext()) {me = (Map)append((String)).append(\" \"); append(getValue()).append(\"\"); } toString(); }", "n_tokens": 65, "n_pass": [301, 31, 31]}
{"time": "2021-02-14 13:54:14.549115", "score": "0.9831", "loss": "0.0309", "code": "String toString(){iterator(); while (hasNext()) {me = (Map)append((String)).append(\" \"); append(getValue()).append(\"\"); } toString(); }", "n_tokens": 64, "n_pass": [318, 32, 32]}
{"time": "2021-02-14 13:54:23.665967", "score": "0.9831", "loss": "0.0309", "code": "String toString(){iterator();while (hasNext()) {me = (Map)append((String)).append(\" \"); append(getValue()).append(\"\"); } toString(); }", "n_tokens": 63, "n_pass": [412, 33, 33]}
{"time": "2021-02-14 13:54:26.305655", "score": "0.9831", "loss": "0.0309", "code": "String toString(){iterator();while(hasNext()) {me = (Map)append((String)).append(\" \"); append(getValue()).append(\"\"); } toString(); }", "n_tokens": 62, "n_pass": [413, 34, 34]}
{"time": "2021-02-14 13:54:28.967391", "score": "0.9831", "loss": "0.0309", "code": "String toString(){iterator();while(hasNext()){me = (Map)append((String)).append(\" \"); append(getValue()).append(\"\"); } toString(); }", "n_tokens": 61, "n_pass": [419, 35, 35]}
{"time": "2021-02-14 13:54:31.614058", "score": "0.9831", "loss": "0.0309", "code": "String toString(){iterator();while(hasNext()){me= (Map)append((String)).append(\" \"); append(getValue()).append(\"\"); } toString(); }", "n_tokens": 60, "n_pass": [422, 36, 36]}
{"time": "2021-02-14 13:54:34.250306", "score": "0.9831", "loss": "0.0309", "code": "String toString(){iterator();while(hasNext()){me=(Map)append((String)).append(\" \"); append(getValue()).append(\"\"); } toString(); }", "n_tokens": 59, "n_pass": [424, 37, 37]}
{"time": "2021-02-14 13:54:36.919020", "score": "0.9803", "loss": "0.0346", "code": "String toString(){iterator();while(hasNext()){me=(Map)((String)).append(\" \"); append(getValue()).append(\"\"); } toString(); }", "n_tokens": 58, "n_pass": [428, 38, 38]}
{"time": "2021-02-14 13:54:39.567505", "score": "0.9796", "loss": "0.0358", "code": "String toString(){iterator();while(hasNext()){me=(Map)((String)).append(\"\"); append(getValue()).append(\"\"); } toString(); }", "n_tokens": 57, "n_pass": [438, 39, 39]}
{"time": "2021-02-14 13:54:42.229053", "score": "0.9796", "loss": "0.0358", "code": "String toString(){iterator();while(hasNext()){me=(Map)((String)).append(\"\");append(getValue()).append(\"\"); } toString(); }", "n_tokens": 56, "n_pass": [442, 40, 40]}
{"time": "2021-02-14 13:54:44.886360", "score": "0.9788", "loss": "0.0351", "code": "String toString(){iterator();while(hasNext()){me=(Map)((String)).append(\"\");(getValue()).append(\"\"); } toString(); }", "n_tokens": 55, "n_pass": [443, 41, 41]}
{"time": "2021-02-14 13:54:47.538306", "score": "0.9788", "loss": "0.0351", "code": "String toString(){iterator();while(hasNext()){me=(Map)((String)).append(\"\");(getValue()).append(\"\");} toString(); }", "n_tokens": 54, "n_pass": [456, 42, 42]}
{"time": "2021-02-14 13:54:50.172706", "score": "0.9788", "loss": "0.0351", "code": "String toString(){iterator();while(hasNext()){me=(Map)((String)).append(\"\");(getValue()).append(\"\");}toString(); }", "n_tokens": 53, "n_pass": [458, 43, 43]}
{"time": "2021-02-14 13:54:52.828927", "score": "0.9788", "loss": "0.0351", "code": "String toString(){iterator();while(hasNext()){me=(Map)((String)).append(\"\");(getValue()).append(\"\");}toString();}", "n_tokens": 52, "n_pass": [463, 44, 44]}

Minimal simplified code:
String toString(){iterator();while(hasNext()){me=(Map)((String)).append("");(getValue()).append("");}toString();}

