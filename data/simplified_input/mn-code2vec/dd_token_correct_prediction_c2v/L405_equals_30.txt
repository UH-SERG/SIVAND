
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/OpenRock__OpenAM/openam-entitlements/src/main/java/org/forgerock/openam/entitlement/rest/model/json/JsonPolicy_equals.java
method_name = equals
method_body = @Override public boolean equals(Object o) { if (this == o) { return true; } if (!(o instanceof JsonPolicy)) { return false; } JsonPolicy that = (JsonPolicy) o; return privilege.equals(that.privilege); }
predict, score, loss = equals, 0.9999595880508423, 4.672895011026412e-05

Trace of simplified code(s):
{"time": "2021-02-14 18:01:00.184289", "score": "1.0", "loss": "0.0", "code": "@Override public boolean equals(Object o) { if (this == o) { return true; } if (!(o instanceof JsonPolicy)) { return false; } JsonPolicy that = (JsonPolicy) o; return privilege.equals(that.privilege); }", "n_tokens": 84, "n_pass": [1, 1, 1]}
{"time": "2021-02-14 18:01:02.876160", "score": "0.9999", "loss": "0.0001", "code": "boolean equals(Object o) { if (this == o) { return true; } if (!(o instanceof JsonPolicy)) { return false; } JsonPolicy that = (JsonPolicy) o; return privilege.equals(that.privilege); }", "n_tokens": 79, "n_pass": [44, 2, 2]}
{"time": "2021-02-14 18:01:05.518680", "score": "0.9979", "loss": "0.0023", "code": "boolean equals(Object o) { if (this) { return true; } if (!(o instanceof JsonPolicy)) { return false; } JsonPolicy that = (JsonPolicy) o; return privilege.equals(that.privilege); }", "n_tokens": 74, "n_pass": [47, 3, 3]}
{"time": "2021-02-14 18:01:08.165594", "score": "0.9861", "loss": "0.017", "code": "boolean equals(Object o) { if (this) { return true; } if (!(o instanceof JsonPolicy)) { } JsonPolicy that = (JsonPolicy) o; return privilege.equals(that.privilege); }", "n_tokens": 69, "n_pass": [53, 4, 4]}
{"time": "2021-02-14 18:01:11.206674", "score": "0.9711", "loss": "0.0503", "code": "boolean equals(Object o) { if (this) { return true; } if (!(o instanceof JsonPolicy)) { }that = (JsonPolicy) o; return privilege.equals(that.privilege); }", "n_tokens": 66, "n_pass": [94, 5, 5]}
{"time": "2021-02-14 18:01:14.256241", "score": "0.6988", "loss": "0.9982", "code": "boolean equals(Object o) { if (this) { return true; } if (!(o instanceof JsonPolicy)) { }that = (JsonPolicy) o; returnequals(that.privilege); }", "n_tokens": 63, "n_pass": [99, 6, 6]}
{"time": "2021-02-14 18:01:17.310740", "score": "0.4981", "loss": "1.2438", "code": "boolean equals(Object o) { if (this) {true; } if (!(o instanceof JsonPolicy)) { }that = (JsonPolicy) o; returnequals(that.privilege); }", "n_tokens": 60, "n_pass": [112, 7, 7]}
{"time": "2021-02-14 18:01:19.949628", "score": "0.4906", "loss": "1.2623", "code": "boolean equals(Object o) { if (this) {} if (!(o instanceof JsonPolicy)) { }that = (JsonPolicy) o; returnequals(that.privilege); }", "n_tokens": 57, "n_pass": [113, 8, 8]}
{"time": "2021-02-14 18:01:22.596201", "score": "0.4929", "loss": "1.237", "code": "boolean equals(Object o) { if (this) {} if (!(o )) { }that = (JsonPolicy) o; returnequals(that.privilege); }", "n_tokens": 54, "n_pass": [117, 9, 9]}
{"time": "2021-02-14 18:01:28.264766", "score": "0.7441", "loss": "1.2522", "code": "boolean equals(Object o) { if (this) {} if (!(o )) { }that = (JsonPolicy) oequals(that.privilege); }", "n_tokens": 51, "n_pass": [123, 11, 10]}
{"time": "2021-02-14 18:01:31.333988", "score": "0.8585", "loss": "0.3605", "code": "boolean equals(Object o) { if (this) {} if (!(o )) that = (JsonPolicy) oequals(that.privilege); }", "n_tokens": 48, "n_pass": [140, 12, 11]}
{"time": "2021-02-14 18:01:38.175942", "score": "0.8585", "loss": "0.3605", "code": "boolean equals(Object o) { if (this) {} if (!(o)) that = (JsonPolicy) oequals(that.privilege); }", "n_tokens": 47, "n_pass": [198, 13, 12]}
{"time": "2021-02-14 18:01:40.806922", "score": "0.9107", "loss": "0.1232", "code": "boolean equals(Object o) { if (this) {} if (!(o)) that = (JsonPolicy) (that.privilege); }", "n_tokens": 45, "n_pass": [205, 14, 13]}
{"time": "2021-02-14 18:01:43.438800", "score": "0.9134", "loss": "0.1186", "code": "boolean equals(Object o) { if (this) {} if (!(o)) that = (JsonPolicy) (that); }", "n_tokens": 43, "n_pass": [207, 15, 14]}
{"time": "2021-02-14 18:01:46.868802", "score": "0.9134", "loss": "0.1186", "code": "boolean equals(Object o){ if (this) {} if (!(o)) that = (JsonPolicy) (that); }", "n_tokens": 42, "n_pass": [218, 16, 15]}
{"time": "2021-02-14 18:01:49.496797", "score": "0.9134", "loss": "0.1186", "code": "boolean equals(Object o){if (this) {} if (!(o)) that = (JsonPolicy) (that); }", "n_tokens": 41, "n_pass": [220, 17, 16]}
{"time": "2021-02-14 18:01:52.151542", "score": "0.9134", "loss": "0.1186", "code": "boolean equals(Object o){if(this) {} if (!(o)) that = (JsonPolicy) (that); }", "n_tokens": 40, "n_pass": [222, 18, 17]}
{"time": "2021-02-14 18:01:54.780777", "score": "0.9134", "loss": "0.1186", "code": "boolean equals(Object o){if(this){} if (!(o)) that = (JsonPolicy) (that); }", "n_tokens": 39, "n_pass": [226, 19, 18]}
{"time": "2021-02-14 18:01:57.411294", "score": "0.9134", "loss": "0.1186", "code": "boolean equals(Object o){if(this){}if (!(o)) that = (JsonPolicy) (that); }", "n_tokens": 38, "n_pass": [229, 20, 19]}
{"time": "2021-02-14 18:02:00.065477", "score": "0.9134", "loss": "0.1186", "code": "boolean equals(Object o){if(this){}if(!(o)) that = (JsonPolicy) (that); }", "n_tokens": 37, "n_pass": [231, 21, 20]}
{"time": "2021-02-14 18:02:02.698469", "score": "0.9134", "loss": "0.1186", "code": "boolean equals(Object o){if(this){}if((o)) that = (JsonPolicy) (that); }", "n_tokens": 36, "n_pass": [233, 22, 21]}
{"time": "2021-02-14 18:02:08.402609", "score": "0.9134", "loss": "0.1186", "code": "boolean equals(Object o){if(this){}if((o))that = (JsonPolicy) (that); }", "n_tokens": 35, "n_pass": [278, 23, 22]}
{"time": "2021-02-14 18:02:11.060867", "score": "0.9134", "loss": "0.1186", "code": "boolean equals(Object o){if(this){}if((o))that= (JsonPolicy) (that); }", "n_tokens": 34, "n_pass": [280, 24, 23]}
{"time": "2021-02-14 18:02:13.718241", "score": "0.9134", "loss": "0.1186", "code": "boolean equals(Object o){if(this){}if((o))that=(JsonPolicy) (that); }", "n_tokens": 33, "n_pass": [282, 25, 24]}
{"time": "2021-02-14 18:02:16.378776", "score": "0.9134", "loss": "0.1186", "code": "boolean equals(Object o){if(this){}if((o))that=(JsonPolicy)(that); }", "n_tokens": 32, "n_pass": [286, 26, 25]}
{"time": "2021-02-14 18:02:19.000209", "score": "0.9134", "loss": "0.1186", "code": "boolean equals(Object o){if(this){}if((o))that=(JsonPolicy)(that);}", "n_tokens": 31, "n_pass": [291, 27, 26]}

Minimal simplified code:
boolean equals(Object o){if(this){}if((o))that=(JsonPolicy)(that);}

