
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/baiyuliang__QRobot/app/src/main/java/com/byl/qrobot/service/LocService_onReceiveLocation.java
method_name = onReceiveLocation
method_body = @Override public void onReceiveLocation(BDLocation location) { if (location == null) return; mlongitude = location.getLongitude(); mlatitude = location.getLatitude(); mSearch.reverseGeoCode(new ReverseGeoCodeOption().location(new LatLng(mlatitude, mlongitude))); LogUtil.e("当前坐标：" + mlongitude + "," + mlatitude); PreferencesUtils.putSharePre(LocService.this, Const.LOCTION, mlongitude + "," + mlatitude); }
predict, score, loss = onReceiveLocation, 0.9950838685035706, 0.006764962337911129

Trace of simplified code(s):
{"time": "2021-02-14 19:29:01.340372", "score": "0.9901", "loss": "0.0111", "code": "@Override public void onReceiveLocation(BDLocation location) { if (location == null) return; mlongitude = location.getLongitude(); mlatitude = location.getLatitude(); mSearch.reverseGeoCode(new ReverseGeoCodeOption().location(new LatLng(mlatitude, mlongitude))); LogUtil.e(\"\u5f53\u524d\u5750\u6807\uff1a\" + mlongitude + \",\" + mlatitude); PreferencesUtils.putSharePre(LocService.this, Const.LOCTION, mlongitude + \",\" + mlatitude); }", "n_tokens": 131, "n_pass": [1, 1, 1]}
{"time": "2021-02-14 19:29:04.021604", "score": "0.9921", "loss": "0.0097", "code": "@Override public void onReceiveLocation(BDLocation location) { if (location == null) return; mlongitude (); mSearch.reverseGeoCode(new ReverseGeoCodeOption().location(new LatLng(mlatitude, mlongitude))); LogUtil.e(\"\u5f53\u524d\u5750\u6807\uff1a\" + mlongitude + \",\" + mlatitude); PreferencesUtils.putSharePre(LocService.this, Const.LOCTION, mlongitude + \",\" + mlatitude); }", "n_tokens": 115, "n_pass": [22, 2, 2]}
{"time": "2021-02-14 19:29:06.717950", "score": "0.9856", "loss": "0.0162", "code": "@Override public void onReceiveLocation(BDLocation location) { if (location == null) return; mlongitude (); mSearch.reverseGeoCode(new ReverseGeoCodeOption().location(new LatLng(mlatitude, mlongitude))); LogUtil.e(\"\u5f53\u524d\u5750\u6807\uff1a\" + + mlatitude); PreferencesUtils.putSharePre(LocService.this, Const.LOCTION, mlongitude + \",\" + mlatitude); }", "n_tokens": 107, "n_pass": [49, 3, 3]}
{"time": "2021-02-14 19:29:09.428563", "score": "0.987", "loss": "0.0141", "code": "@Override public void onReceiveLocation(BDLocation location) { if (location == null) return; mlongitude (); mSearch.reverseGeoCode(new ReverseGeoCodeOption().location(new LatLng(mlatitude, mlongitude))); LogUtil.e(\"\u5f53\u524d\u5750\u6807\uff1a\" + + mlatitude); PreferencesUtils.putSharePre(LocService.this, Constmlongitude + \",\" + mlatitude); }", "n_tokens": 103, "n_pass": [93, 4, 4]}
{"time": "2021-02-14 19:29:12.094249", "score": "0.9896", "loss": "0.0114", "code": " void onReceiveLocation(BDLocation location) { if (location == null) return; mlongitude (); mSearch.reverseGeoCode(new ReverseGeoCodeOption().location(new LatLng(mlatitude, mlongitude))); LogUtil.e(\"\u5f53\u524d\u5750\u6807\uff1a\" + + mlatitude); PreferencesUtils.putSharePre(LocService.this, Constmlongitude + \",\" + mlatitude); }", "n_tokens": 99, "n_pass": [97, 5, 5]}
{"time": "2021-02-14 19:29:14.765510", "score": "0.9904", "loss": "0.0106", "code": " void onReceiveLocation(BDLocation location) { if (locationnull) return; mlongitude (); mSearch.reverseGeoCode(new ReverseGeoCodeOption().location(new LatLng(mlatitude, mlongitude))); LogUtil.e(\"\u5f53\u524d\u5750\u6807\uff1a\" + + mlatitude); PreferencesUtils.putSharePre(LocService.this, Constmlongitude + \",\" + mlatitude); }", "n_tokens": 95, "n_pass": [102, 6, 6]}
{"time": "2021-02-14 19:29:17.427921", "score": "0.9886", "loss": "0.0126", "code": " void onReceiveLocation(BDLocation location) { if (locationnull) return; mlongitude (); mSearch.reverseGeoCode(new ReverseGeoCodeOption(new LatLng(mlatitude, mlongitude))); LogUtil.e(\"\u5f53\u524d\u5750\u6807\uff1a\" + + mlatitude); PreferencesUtils.putSharePre(LocService.this, Constmlongitude + \",\" + mlatitude); }", "n_tokens": 91, "n_pass": [108, 7, 7]}
{"time": "2021-02-14 19:29:20.107648", "score": "0.9855", "loss": "0.0155", "code": " void onReceiveLocation(BDLocation location) { if (locationnull) return; mlongitude (); mSearch.reverseGeoCode(new ReverseGeoCodeOption(new LatLng())); LogUtil.e(\"\u5f53\u524d\u5750\u6807\uff1a\" + + mlatitude); PreferencesUtils.putSharePre(LocService.this, Constmlongitude + \",\" + mlatitude); }", "n_tokens": 87, "n_pass": [110, 8, 8]}
{"time": "2021-02-14 19:29:22.763503", "score": "0.9867", "loss": "0.0142", "code": " void onReceiveLocation(BDLocation location) { if (locationnull) return; mlongitude (); mSearch.reverseGeoCode(new ReverseGeoCodeOption(new LatLng()));(\"\u5f53\u524d\u5750\u6807\uff1a\" + + mlatitude); PreferencesUtils.putSharePre(LocService.this, Constmlongitude + \",\" + mlatitude); }", "n_tokens": 83, "n_pass": [112, 9, 9]}
{"time": "2021-02-14 19:29:25.416098", "score": "0.981", "loss": "0.0202", "code": " void onReceiveLocation(BDLocation location) { if (locationnull) return; mlongitude (); mSearch.reverseGeoCode(new ReverseGeoCodeOption(new LatLng()));(\"\u5f53\u524d\u5750\u6807\uff1a\" + + mlatitude); PreferencesUtils.putSharePre(LocService.mlongitude + \",\" + mlatitude); }", "n_tokens": 79, "n_pass": [118, 10, 10]}
{"time": "2021-02-14 19:29:29.642574", "score": "0.981", "loss": "0.0202", "code": " void onReceiveLocation(BDLocation location) { if (locationnull); mlongitude (); mSearch.reverseGeoCode(new ReverseGeoCodeOption(new LatLng()));(\"\u5f53\u524d\u5750\u6807\uff1a\" + + mlatitude); PreferencesUtils.putSharePre(LocService.mlongitude + \",\" + mlatitude); }", "n_tokens": 77, "n_pass": [191, 11, 11]}
{"time": "2021-02-14 19:29:32.346378", "score": "0.9802", "loss": "0.021", "code": " void onReceiveLocation(BDLocation location) { if (locationnull)mlongitude (); mSearch.reverseGeoCode(new ReverseGeoCodeOption(new LatLng()));(\"\u5f53\u524d\u5750\u6807\uff1a\" + + mlatitude); PreferencesUtils.putSharePre(LocService.mlongitude + \",\" + mlatitude); }", "n_tokens": 75, "n_pass": [192, 12, 12]}
{"time": "2021-02-14 19:29:35.027865", "score": "0.9793", "loss": "0.022", "code": " void onReceiveLocation(BDLocation location) { if (locationnull)mlongitude ; mSearch.reverseGeoCode(new ReverseGeoCodeOption(new LatLng()));(\"\u5f53\u524d\u5750\u6807\uff1a\" + + mlatitude); PreferencesUtils.putSharePre(LocService.mlongitude + \",\" + mlatitude); }", "n_tokens": 73, "n_pass": [194, 13, 13]}
{"time": "2021-02-14 19:29:37.672777", "score": "0.9684", "loss": "0.034", "code": " void onReceiveLocation(BDLocation location) { if (locationnull)mlongitude ; reverseGeoCode(new ReverseGeoCodeOption(new LatLng()));(\"\u5f53\u524d\u5750\u6807\uff1a\" + + mlatitude); PreferencesUtils.putSharePre(LocService.mlongitude + \",\" + mlatitude); }", "n_tokens": 71, "n_pass": [196, 14, 14]}
{"time": "2021-02-14 19:29:40.324345", "score": "0.9576", "loss": "0.0465", "code": " void onReceiveLocation(BDLocation location) { if (locationnull)mlongitude ; reverseGeoCode(ReverseGeoCodeOption(new LatLng()));(\"\u5f53\u524d\u5750\u6807\uff1a\" + + mlatitude); PreferencesUtils.putSharePre(LocService.mlongitude + \",\" + mlatitude); }", "n_tokens": 69, "n_pass": [198, 15, 15]}
{"time": "2021-02-14 19:29:42.970030", "score": "0.9555", "loss": "0.049", "code": " void onReceiveLocation(BDLocation location) { if (locationnull)mlongitude ; reverseGeoCode(ReverseGeoCodeOption(LatLng()));(\"\u5f53\u524d\u5750\u6807\uff1a\" + + mlatitude); PreferencesUtils.putSharePre(LocService.mlongitude + \",\" + mlatitude); }", "n_tokens": 67, "n_pass": [200, 16, 16]}
{"time": "2021-02-14 19:29:45.618049", "score": "0.9555", "loss": "0.049", "code": " void onReceiveLocation(BDLocation location) { if (locationnull)mlongitude ; reverseGeoCode(ReverseGeoCodeOption(LatLng()));(\"\" + + mlatitude); PreferencesUtils.putSharePre(LocService.mlongitude + \",\" + mlatitude); }", "n_tokens": 65, "n_pass": [205, 17, 17]}
{"time": "2021-02-14 19:29:48.262973", "score": "0.9557", "loss": "0.0489", "code": " void onReceiveLocation(BDLocation location) { if (locationnull)mlongitude ; reverseGeoCode(ReverseGeoCodeOption(LatLng()));(\"\" + mlatitude); PreferencesUtils.putSharePre(LocService.mlongitude + \",\" + mlatitude); }", "n_tokens": 63, "n_pass": [207, 18, 18]}
{"time": "2021-02-14 19:29:50.912499", "score": "0.9439", "loss": "0.0625", "code": " void onReceiveLocation(BDLocation location) { if (locationnull)mlongitude ; reverseGeoCode(ReverseGeoCodeOption(LatLng()));(\"\" + mlatitude); putSharePre(LocService.mlongitude + \",\" + mlatitude); }", "n_tokens": 61, "n_pass": [211, 19, 19]}
{"time": "2021-02-14 19:29:53.576224", "score": "0.9645", "loss": "0.0385", "code": " void onReceiveLocation(BDLocation location) { if (locationnull)mlongitude ; reverseGeoCode(ReverseGeoCodeOption(LatLng()));(\"\" + mlatitude); putSharePre(mlongitude + \",\" + mlatitude); }", "n_tokens": 59, "n_pass": [213, 20, 20]}
{"time": "2021-02-14 19:29:56.226678", "score": "0.9516", "loss": "0.0513", "code": " void onReceiveLocation(BDLocation location) { if (locationnull)mlongitude ; reverseGeoCode(ReverseGeoCodeOption(LatLng()));(\"\" + mlatitude); putSharePre(+ \",\" + mlatitude); }", "n_tokens": 57, "n_pass": [214, 21, 21]}
{"time": "2021-02-14 19:29:58.866934", "score": "0.9516", "loss": "0.0512", "code": " void onReceiveLocation(BDLocation location) { if (locationnull)mlongitude ; reverseGeoCode(ReverseGeoCodeOption(LatLng()));(\"\" + mlatitude); putSharePre(\",\" + mlatitude); }", "n_tokens": 55, "n_pass": [215, 22, 22]}
{"time": "2021-02-14 19:30:02.418413", "score": "0.9493", "loss": "0.0536", "code": " void onReceiveLocation(BDLocation location) { if (locationnull); reverseGeoCode(ReverseGeoCodeOption(LatLng()));(\"\" + mlatitude); putSharePre(\",\" + mlatitude); }", "n_tokens": 53, "n_pass": [229, 23, 23]}
{"time": "2021-02-14 19:30:05.072082", "score": "0.9732", "loss": "0.0307", "code": " void onReceiveLocation(BDLocation location) { if (locationnull)reverseGeoCode(ReverseGeoCodeOption(LatLng()));(\"\" + mlatitude); putSharePre(\",\" + mlatitude); }", "n_tokens": 51, "n_pass": [230, 24, 24]}
{"time": "2021-02-14 19:30:13.071644", "score": "0.975", "loss": "0.0274", "code": " void onReceiveLocation(BDLocation location) { if (locationnull)(ReverseGeoCodeOption(LatLng()));(\"\" + mlatitude); putSharePre(\",\" + mlatitude); }", "n_tokens": 50, "n_pass": [303, 25, 25]}
{"time": "2021-02-14 19:30:15.688370", "score": "0.9755", "loss": "0.0269", "code": " void onReceiveLocation(BDLocation location) { if (locationnull)((LatLng()));(\"\" + mlatitude); putSharePre(\",\" + mlatitude); }", "n_tokens": 49, "n_pass": [304, 26, 26]}
{"time": "2021-02-14 19:30:18.328463", "score": "0.9755", "loss": "0.0269", "code": " void onReceiveLocation(BDLocation location) { if (locationnull)((LatLng()));(\"\"+ mlatitude); putSharePre(\",\" + mlatitude); }", "n_tokens": 48, "n_pass": [315, 27, 27]}
{"time": "2021-02-14 19:30:20.949116", "score": "0.9755", "loss": "0.0269", "code": " void onReceiveLocation(BDLocation location) { if (locationnull)((LatLng()));(\"\"+mlatitude); putSharePre(\",\" + mlatitude); }", "n_tokens": 47, "n_pass": [317, 28, 28]}
{"time": "2021-02-14 19:30:23.572146", "score": "0.9755", "loss": "0.0269", "code": " void onReceiveLocation(BDLocation location) { if (locationnull)((LatLng()));(\"\"+mlatitude);putSharePre(\",\" + mlatitude); }", "n_tokens": 46, "n_pass": [321, 29, 29]}
{"time": "2021-02-14 19:30:26.184670", "score": "0.9585", "loss": "0.0437", "code": " void onReceiveLocation(BDLocation location) { if (locationnull)((LatLng()));(\"\"+mlatitude);(\",\" + mlatitude); }", "n_tokens": 45, "n_pass": [322, 30, 30]}
{"time": "2021-02-14 19:30:28.814784", "score": "0.9585", "loss": "0.0437", "code": " void onReceiveLocation(BDLocation location) { if (locationnull)((LatLng()));(\"\"+mlatitude);(\"\" + mlatitude); }", "n_tokens": 44, "n_pass": [325, 31, 31]}
{"time": "2021-02-14 19:30:31.453785", "score": "0.9585", "loss": "0.0437", "code": " void onReceiveLocation(BDLocation location) { if (locationnull)((LatLng()));(\"\"+mlatitude);(\"\"+ mlatitude); }", "n_tokens": 43, "n_pass": [327, 32, 32]}
{"time": "2021-02-14 19:30:34.086813", "score": "0.9585", "loss": "0.0437", "code": "void onReceiveLocation(BDLocation location) { if (locationnull)((LatLng()));(\"\"+mlatitude);(\"\"+ mlatitude); }", "n_tokens": 42, "n_pass": [332, 33, 33]}
{"time": "2021-02-14 19:30:37.496567", "score": "0.9585", "loss": "0.0437", "code": "void onReceiveLocation(BDLocation location){ if (locationnull)((LatLng()));(\"\"+mlatitude);(\"\"+ mlatitude); }", "n_tokens": 41, "n_pass": [341, 34, 34]}
{"time": "2021-02-14 19:30:40.155346", "score": "0.9585", "loss": "0.0437", "code": "void onReceiveLocation(BDLocation location){if (locationnull)((LatLng()));(\"\"+mlatitude);(\"\"+ mlatitude); }", "n_tokens": 40, "n_pass": [343, 35, 35]}
{"time": "2021-02-14 19:30:43.193016", "score": "0.9585", "loss": "0.0437", "code": "void onReceiveLocation(BDLocation location){if(locationnull)((LatLng()));(\"\"+mlatitude);(\"\"+ mlatitude); }", "n_tokens": 39, "n_pass": [345, 36, 36]}
{"time": "2021-02-14 19:30:53.462912", "score": "0.9585", "loss": "0.0437", "code": "void onReceiveLocation(BDLocation location){if(locationnull)((LatLng()));(\"\"+mlatitude);(\"\"+mlatitude); }", "n_tokens": 38, "n_pass": [388, 39, 37]}
{"time": "2021-02-14 19:30:56.082098", "score": "0.9585", "loss": "0.0437", "code": "void onReceiveLocation(BDLocation location){if(locationnull)((LatLng()));(\"\"+mlatitude);(\"\"+mlatitude);}", "n_tokens": 37, "n_pass": [391, 40, 38]}

Minimal simplified code:
void onReceiveLocation(BDLocation location){if(locationnull)((LatLng()));(""+mlatitude);(""+mlatitude);}

