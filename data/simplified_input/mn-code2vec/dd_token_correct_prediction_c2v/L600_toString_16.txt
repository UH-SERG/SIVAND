
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/apache__aurora/src/main/java/org/apache/aurora/scheduler/state/SideEffect_toString.java
method_name = toString
method_body = @Override public String toString() { if (nextState.isPresent()) { return action.toString() + " " + nextState.get(); } else { return action.toString(); } }
predict, score, loss = toString, 0.974943995475769, 0.046477511525154114

Trace of simplified code(s):
{"time": "2021-02-15 00:11:06.911043", "score": "0.9749", "loss": "0.0465", "code": "@Override public String toString() { if (nextState.isPresent()) { return action.toString() + \" \" + nextState.get(); } else { return action.toString(); } }", "n_tokens": 66, "n_pass": [1, 1, 1]}
{"time": "2021-02-15 00:11:09.969870", "score": "0.3968", "loss": "1.2687", "code": " String toString() { if (nextState.isPresent()) { return action.toString() + \" \" + nextState.get(); } else { return action.toString(); } }", "n_tokens": 62, "n_pass": [44, 2, 2]}
{"time": "2021-02-15 00:11:15.240169", "score": "0.2819", "loss": "2.0006", "code": " String toString() { if (nextState.isPresent()) { return action.toString() + \" \" + nextState.get(); } else { return ; } }", "n_tokens": 57, "n_pass": [57, 4, 3]}
{"time": "2021-02-15 00:11:22.144409", "score": "0.4212", "loss": "1.3782", "code": " String toString() { if (isPresent()) { return action.toString() + \" \" + nextState.get(); } else { return ; } }", "n_tokens": 55, "n_pass": [108, 6, 4]}
{"time": "2021-02-15 00:11:27.828253", "score": "0.269", "loss": "1.9644", "code": " String toString() { if (isPresent()) { return action.toString + \" \" + nextState.get(); } else { return ; } }", "n_tokens": 53, "n_pass": [114, 8, 5]}
{"time": "2021-02-15 00:11:33.116228", "score": "0.2615", "loss": "2.3537", "code": " String toString() { if (isPresent()) { return action.toString + \" \" + nextState.get; } else { return ; } }", "n_tokens": 51, "n_pass": [121, 10, 6]}
{"time": "2021-02-15 00:11:35.748912", "score": "0.2615", "loss": "2.3537", "code": " String toString() { if (isPresent()) { return action.toString + \" \" + nextState.get; } { return ; } }", "n_tokens": 49, "n_pass": [124, 11, 7]}
{"time": "2021-02-15 00:11:38.367347", "score": "0.2615", "loss": "2.3537", "code": " String toString() { if (isPresent()) { return action.toString + \" \" + nextState.get; } { ; } }", "n_tokens": 47, "n_pass": [126, 12, 8]}
{"time": "2021-02-15 00:11:40.987358", "score": "0.2615", "loss": "2.3537", "code": " String toString() { if (isPresent()) { return action.toString + \" \" + nextState.get; } { } }", "n_tokens": 45, "n_pass": [127, 13, 9]}
{"time": "2021-02-15 00:11:47.476925", "score": "0.3521", "loss": "1.7742", "code": " String toString() { if (isPresent()) { return action.toString + \" \" + nextState; } { } }", "n_tokens": 43, "n_pass": [146, 15, 10]}
{"time": "2021-02-15 00:11:51.285596", "score": "0.5716", "loss": "1.0658", "code": " String toString() { if (isPresent()) { return action + \" \" + nextState; } { } }", "n_tokens": 41, "n_pass": [162, 16, 11]}
{"time": "2021-02-15 00:12:04.466127", "score": "0.5716", "loss": "1.0658", "code": " String toString() { if (isPresent()) { return action+ \" \" + nextState; } { } }", "n_tokens": 40, "n_pass": [223, 18, 12]}
{"time": "2021-02-15 00:12:07.136046", "score": "0.5716", "loss": "1.0658", "code": " String toString() { if (isPresent()) { return action+\" \" + nextState; } { } }", "n_tokens": 39, "n_pass": [224, 19, 13]}
{"time": "2021-02-15 00:12:09.784100", "score": "0.5335", "loss": "1.1906", "code": " String toString() { if (isPresent()) { return action+\"\" + nextState; } { } }", "n_tokens": 38, "n_pass": [226, 20, 14]}
{"time": "2021-02-15 00:12:12.411037", "score": "0.5335", "loss": "1.1906", "code": " String toString() { if (isPresent()) { return action+\"\"+ nextState; } { } }", "n_tokens": 37, "n_pass": [228, 21, 15]}
{"time": "2021-02-15 00:12:15.056933", "score": "0.5335", "loss": "1.1906", "code": " String toString() { if (isPresent()) { return action+\"\"+nextState; } { } }", "n_tokens": 36, "n_pass": [230, 22, 16]}
{"time": "2021-02-15 00:12:17.715377", "score": "0.5335", "loss": "1.1906", "code": " String toString() { if (isPresent()) { return action+\"\"+nextState;} { } }", "n_tokens": 35, "n_pass": [233, 23, 17]}
{"time": "2021-02-15 00:12:20.349726", "score": "0.5335", "loss": "1.1906", "code": " String toString() { if (isPresent()) { return action+\"\"+nextState;}{ } }", "n_tokens": 34, "n_pass": [235, 24, 18]}
{"time": "2021-02-15 00:12:23.002485", "score": "0.5335", "loss": "1.1906", "code": " String toString() { if (isPresent()) { return action+\"\"+nextState;}{} }", "n_tokens": 33, "n_pass": [237, 25, 19]}
{"time": "2021-02-15 00:12:25.651705", "score": "0.5335", "loss": "1.1906", "code": "String toString() { if (isPresent()) { return action+\"\"+nextState;}{} }", "n_tokens": 32, "n_pass": [240, 26, 20]}
{"time": "2021-02-15 00:12:29.472699", "score": "0.5335", "loss": "1.1906", "code": "String toString(){ if (isPresent()) { return action+\"\"+nextState;}{} }", "n_tokens": 31, "n_pass": [246, 27, 21]}
{"time": "2021-02-15 00:12:32.105261", "score": "0.5335", "loss": "1.1906", "code": "String toString(){if (isPresent()) { return action+\"\"+nextState;}{} }", "n_tokens": 30, "n_pass": [248, 28, 22]}
{"time": "2021-02-15 00:12:34.729947", "score": "0.5335", "loss": "1.1906", "code": "String toString(){if(isPresent()) { return action+\"\"+nextState;}{} }", "n_tokens": 29, "n_pass": [250, 29, 23]}
{"time": "2021-02-15 00:12:37.381030", "score": "0.5335", "loss": "1.1906", "code": "String toString(){if(isPresent()){ return action+\"\"+nextState;}{} }", "n_tokens": 28, "n_pass": [256, 30, 24]}
{"time": "2021-02-15 00:12:40.037479", "score": "0.5335", "loss": "1.1906", "code": "String toString(){if(isPresent()){return action+\"\"+nextState;}{} }", "n_tokens": 27, "n_pass": [258, 31, 25]}
{"time": "2021-02-15 00:12:47.685233", "score": "0.5335", "loss": "1.1906", "code": "String toString(){if(isPresent()){return action+\"\"+nextState;}{}}", "n_tokens": 26, "n_pass": [287, 33, 26]}

Minimal simplified code:
String toString(){if(isPresent()){return action+""+nextState;}{}}

