
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/f2prateek__dart/dart-sample/module1-navigation/src/main/java/com/f2prateek/dart/model/SimpleParcelable_writeToParcel.java
method_name = writeToParcel
method_body = @Override public void writeToParcel(Parcel dest, int flags) { dest.writeInt(anInt); dest.writeByte((byte) (aBoolean ? 0x01 : 0x00)); dest.writeFloat(aFloat); }
predict, score, loss = writeToParcel, 0.999923825263977, 0.00010442188795423135

Trace of simplified code(s):
{"time": "2021-02-14 23:23:51.030924", "score": "0.9999", "loss": "0.0001", "code": "@Override public void writeToParcel(Parcel dest, int flags) { dest.writeInt(anInt); dest.writeByte((byte) (aBoolean ? 0x01 : 0x00)); dest.writeFloat(aFloat); }", "n_tokens": 66, "n_pass": [1, 1, 1]}
{"time": "2021-02-14 23:23:53.708586", "score": "0.9999", "loss": "0.0001", "code": "@Override public void writeToParcel(Parcel dest, int flags) { dest.writeInt((byte) (aBoolean ? 0x01 : 0x00)); dest.writeFloat(aFloat); }", "n_tokens": 58, "n_pass": [23, 2, 2]}
{"time": "2021-02-14 23:23:56.392689", "score": "0.9999", "loss": "0.0001", "code": "@Override public void writeToParcel(Parcel dest, int flags) { dest.writeInt((byte) (aBoolean ? 0x01 :0)); dest.writeFloat(aFloat); }", "n_tokens": 54, "n_pass": [48, 3, 3]}
{"time": "2021-02-14 23:23:59.064077", "score": "0.9999", "loss": "0.0001", "code": " void writeToParcel(Parcel dest, int flags) { dest.writeInt((byte) (aBoolean ? 0x01 :0)); dest.writeFloat(aFloat); }", "n_tokens": 50, "n_pass": [52, 4, 4]}
{"time": "2021-02-14 23:24:01.725380", "score": "0.9995", "loss": "0.0006", "code": " void writeToParcel(Parcel destflags) { dest.writeInt((byte) (aBoolean ? 0x01 :0)); dest.writeFloat(aFloat); }", "n_tokens": 46, "n_pass": [55, 5, 5]}
{"time": "2021-02-14 23:24:04.365974", "score": "0.9992", "loss": "0.0015", "code": " void writeToParcel(Parcel destflags) {((byte) (aBoolean ? 0x01 :0)); dest.writeFloat(aFloat); }", "n_tokens": 42, "n_pass": [57, 6, 6]}
{"time": "2021-02-14 23:24:07.032119", "score": "0.9991", "loss": "0.0016", "code": " void writeToParcel(Parcel destflags) {((byte) (aBoolean ? 01 :0)); dest.writeFloat(aFloat); }", "n_tokens": 40, "n_pass": [93, 7, 7]}
{"time": "2021-02-14 23:24:09.655967", "score": "0.9043", "loss": "0.1088", "code": " void writeToParcel(Parcel destflags) {((byte) (aBoolean ? 01 :0)); dest(aFloat); }", "n_tokens": 38, "n_pass": [99, 8, 8]}
{"time": "2021-02-14 23:24:24.432260", "score": "0.9043", "loss": "0.1088", "code": "void writeToParcel(Parcel destflags) {((byte) (aBoolean ? 01 :0)); dest(aFloat); }", "n_tokens": 37, "n_pass": [158, 12, 9]}
{"time": "2021-02-14 23:24:27.523744", "score": "0.9852", "loss": "0.0172", "code": "void writeToParcel(Parcel flags) {((byte) (aBoolean ? 01 :0)); dest(aFloat); }", "n_tokens": 36, "n_pass": [164, 13, 10]}
{"time": "2021-02-14 23:24:30.198626", "score": "0.9852", "loss": "0.0172", "code": "void writeToParcel(Parcel flags){((byte) (aBoolean ? 01 :0)); dest(aFloat); }", "n_tokens": 35, "n_pass": [167, 14, 11]}
{"time": "2021-02-14 23:24:32.924965", "score": "0.9852", "loss": "0.0172", "code": "void writeToParcel(Parcel flags){((byte)(aBoolean ? 01 :0)); dest(aFloat); }", "n_tokens": 34, "n_pass": [173, 15, 12]}
{"time": "2021-02-14 23:24:35.548847", "score": "0.9852", "loss": "0.0172", "code": "void writeToParcel(Parcel flags){((byte)(aBoolean? 01 :0)); dest(aFloat); }", "n_tokens": 33, "n_pass": [176, 16, 13]}
{"time": "2021-02-14 23:24:38.187911", "score": "0.9852", "loss": "0.0172", "code": "void writeToParcel(Parcel flags){((byte)(aBoolean?01 :0)); dest(aFloat); }", "n_tokens": 32, "n_pass": [178, 17, 14]}
{"time": "2021-02-14 23:24:40.812909", "score": "0.9842", "loss": "0.0184", "code": "void writeToParcel(Parcel flags){((byte)(aBoolean?1 :0)); dest(aFloat); }", "n_tokens": 31, "n_pass": [179, 18, 15]}
{"time": "2021-02-14 23:24:43.818560", "score": "0.9842", "loss": "0.0184", "code": "void writeToParcel(Parcel flags){((byte)(aBoolean?1:0)); dest(aFloat); }", "n_tokens": 30, "n_pass": [181, 19, 16]}
{"time": "2021-02-14 23:24:46.532576", "score": "0.9842", "loss": "0.0184", "code": "void writeToParcel(Parcel flags){((byte)(aBoolean?1:0));dest(aFloat); }", "n_tokens": 29, "n_pass": [187, 20, 17]}
{"time": "2021-02-14 23:24:51.763958", "score": "0.8211", "loss": "0.2274", "code": "void writeToParcel(Parcel flags){((byte)(aBoolean?1:0));dest(); }", "n_tokens": 28, "n_pass": [190, 22, 18]}
{"time": "2021-02-14 23:24:55.983678", "score": "0.8211", "loss": "0.2274", "code": "void writeToParcel(Parcel flags){((byte)(aBoolean?1:0));dest();}", "n_tokens": 27, "n_pass": [222, 23, 19]}

Minimal simplified code:
void writeToParcel(Parcel flags){((byte)(aBoolean?1:0));dest();}

