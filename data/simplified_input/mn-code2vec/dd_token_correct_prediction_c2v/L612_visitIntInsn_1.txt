
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/jmockit__jmockit1/main/src/mockit/internal/expectations/transformation/InvocationBlockModifier_visitIntInsn.java
method_name = visitIntInsn
method_body = @Override public void visitIntInsn(@Nonnegative int opcode, int operand) { if (opcode != NEWARRAY) { stackSize++; } mw.visitIntInsn(opcode, operand); }
predict, score, loss = visitIntInsn, 0.9995604157447815, 0.00047434045700356364

Trace of simplified code(s):
{"time": "2021-02-15 00:38:06.290446", "score": "0.9996", "loss": "0.0005", "code": "@Override public void visitIntInsn(@Nonnegative int opcode, int operand) { if (opcode != NEWARRAY) { stackSize++; } mw.visitIntInsn(opcode, operand); }", "n_tokens": 56, "n_pass": [1, 1, 1]}
{"time": "2021-02-15 00:38:09.328115", "score": "0.9996", "loss": "0.0004", "code": "public void visitIntInsn(@Nonnegative int opcode, int operand) { if (opcode != NEWARRAY) { stackSize++; } mw.visitIntInsn(opcode, operand); }", "n_tokens": 53, "n_pass": [44, 2, 2]}
{"time": "2021-02-15 00:38:12.365317", "score": "1.0", "loss": "0.0001", "code": "public void visitIntInsn(int opcode, int operand) { if (opcode != NEWARRAY) { stackSize++; } mw.visitIntInsn(opcode, operand); }", "n_tokens": 50, "n_pass": [47, 3, 3]}
{"time": "2021-02-15 00:38:15.022513", "score": "1.0", "loss": "0.0", "code": "public void visitIntInsn(int opcode, int operand) { if (opcodeNEWARRAY) { stackSize++; } mw.visitIntInsn(opcode, operand); }", "n_tokens": 46, "n_pass": [53, 4, 4]}
{"time": "2021-02-15 00:38:17.649998", "score": "1.0", "loss": "0.0", "code": "public void visitIntInsn(int opcode, int operand) { if (opcodeNEWARRAY) {; } mw.visitIntInsn(opcode, operand); }", "n_tokens": 42, "n_pass": [55, 5, 5]}
{"time": "2021-02-15 00:38:20.395802", "score": "0.9998", "loss": "0.0003", "code": "public void visitIntInsn(int opcode, int operand) { if (opcodeNEWARRAY) {; } mw.visitIntInsn(); }", "n_tokens": 38, "n_pass": [58, 6, 6]}
{"time": "2021-02-15 00:38:24.546500", "score": "0.9998", "loss": "0.0003", "code": " void visitIntInsn(int opcode, int operand) { if (opcodeNEWARRAY) {; } mw.visitIntInsn(); }", "n_tokens": 37, "n_pass": [94, 7, 7]}
{"time": "2021-02-15 00:38:27.179668", "score": "0.9998", "loss": "0.0003", "code": "void visitIntInsn(int opcode, int operand) { if (opcodeNEWARRAY) {; } mw.visitIntInsn(); }", "n_tokens": 36, "n_pass": [95, 8, 8]}
{"time": "2021-02-15 00:38:30.222684", "score": "0.9998", "loss": "0.0003", "code": "void visitIntInsn(int opcode, int operand) { if (opcodeNEWARRAY) {} mw.visitIntInsn(); }", "n_tokens": 34, "n_pass": [109, 9, 9]}
{"time": "2021-02-15 00:38:32.869412", "score": "0.9999", "loss": "0.0001", "code": "void visitIntInsn(int opcode, int operand) { if (opcodeNEWARRAY) {} visitIntInsn(); }", "n_tokens": 32, "n_pass": [111, 10, 10]}
{"time": "2021-02-15 00:38:39.998718", "score": "0.9999", "loss": "0.0001", "code": "void visitIntInsn(int opcode, int operand) { if (opcodeNEWARRAY) {} visitIntInsn();}", "n_tokens": 31, "n_pass": [162, 11, 11]}
{"time": "2021-02-15 00:38:43.412061", "score": "0.9999", "loss": "0.0001", "code": "void visitIntInsn(int opcode,int operand) { if (opcodeNEWARRAY) {} visitIntInsn();}", "n_tokens": 30, "n_pass": [171, 12, 12]}
{"time": "2021-02-15 00:38:46.068726", "score": "0.9999", "loss": "0.0001", "code": "void visitIntInsn(int opcode,int operand){ if (opcodeNEWARRAY) {} visitIntInsn();}", "n_tokens": 29, "n_pass": [176, 13, 13]}
{"time": "2021-02-15 00:38:48.757213", "score": "0.9999", "loss": "0.0001", "code": "void visitIntInsn(int opcode,int operand){if (opcodeNEWARRAY) {} visitIntInsn();}", "n_tokens": 28, "n_pass": [178, 14, 14]}
{"time": "2021-02-15 00:38:51.403007", "score": "0.9999", "loss": "0.0001", "code": "void visitIntInsn(int opcode,int operand){if(opcodeNEWARRAY) {} visitIntInsn();}", "n_tokens": 27, "n_pass": [180, 15, 15]}
{"time": "2021-02-15 00:38:54.065641", "score": "0.9999", "loss": "0.0001", "code": "void visitIntInsn(int opcode,int operand){if(NEWARRAY) {} visitIntInsn();}", "n_tokens": 26, "n_pass": [182, 16, 16]}
{"time": "2021-02-15 00:38:56.689236", "score": "0.9999", "loss": "0.0001", "code": "void visitIntInsn(int opcode,int operand){if(NEWARRAY){} visitIntInsn();}", "n_tokens": 25, "n_pass": [185, 17, 17]}
{"time": "2021-02-15 00:38:59.327472", "score": "0.9999", "loss": "0.0001", "code": "void visitIntInsn(int opcode,int operand){if(NEWARRAY){}visitIntInsn();}", "n_tokens": 24, "n_pass": [188, 18, 18]}

Minimal simplified code:
void visitIntInsn(int opcode,int operand){if(NEWARRAY){}visitIntInsn();}

