
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/dmfs__opentasks/opentasks/src/main/java/org/dmfs/tasks/widget/ChoicesFieldEditor_onFinishInflate.java
method_name = onFinishInflate
method_body = @Override protected void onFinishInflate() { super.onFinishInflate(); mSpinner = (Spinner) findViewById(R.id.integer_choices_spinner); if (mSpinner == null) { return; } mSpinner.setOnItemSelectedListener(this); }
predict, score, loss = onFinishInflate, 1.0, 2.3841855067985307e-07

Trace of simplified code(s):
{"time": "2021-02-16 04:33:40.293075", "score": "1.0", "loss": "0.0", "code": "@Override protected void onFinishInflate() { super.onFinishInflate(); mSpinner = (Spinner) findViewById(R.id.integer_choices_spinner); if (mSpinner == null) { return; } mSpinner.setOnItemSelectedListener(this); }", "n_tokens": 69, "n_pass": [1, 1, 1]}
{"time": "2021-02-16 04:33:42.889884", "score": "1.0", "loss": "0.0", "code": "@Override protected void onFinishInflate() { super.onFinishInflate(integer_choices_spinner); if (mSpinner == null) { return; } mSpinner.setOnItemSelectedListener(this); }", "n_tokens": 52, "n_pass": [9, 2, 2]}
{"time": "2021-02-16 04:33:45.517689", "score": "1.0", "loss": "0.0", "code": "@Override protected void onFinishInflate() { super.onFinishInflate(integer_choices_spinner); if ( null) { return; } mSpinner.setOnItemSelectedListener(this); }", "n_tokens": 48, "n_pass": [39, 3, 3]}
{"time": "2021-02-16 04:33:48.083671", "score": "1.0", "loss": "0.0", "code": " void onFinishInflate() { super.onFinishInflate(integer_choices_spinner); if ( null) { return; } mSpinner.setOnItemSelectedListener(this); }", "n_tokens": 44, "n_pass": [44, 4, 4]}
{"time": "2021-02-16 04:33:53.887424", "score": "1.0", "loss": "0.0", "code": " void onFinishInflate() { super.onFinishInflate(integer_spinner); if ( null) { return; } mSpinner.setOnItemSelectedListener(this); }", "n_tokens": 42, "n_pass": [82, 6, 5]}
{"time": "2021-02-16 04:33:56.471486", "score": "1.0", "loss": "0.0", "code": " void onFinishInflate() { super.onFinishInflate(integer); if ( null) { return; } mSpinner.setOnItemSelectedListener(this); }", "n_tokens": 40, "n_pass": [83, 7, 6]}
{"time": "2021-02-16 04:33:59.027172", "score": "1.0", "loss": "0.0", "code": " void onFinishInflate() { super.onFinishInflate(integer); if ( null) {  } mSpinner.setOnItemSelectedListener(this); }", "n_tokens": 38, "n_pass": [90, 8, 7]}
{"time": "2021-02-16 04:34:01.561948", "score": "1.0", "loss": "0.0", "code": " void onFinishInflate() { super.onFinishInflate(integer); if ( null) {  } (this); }", "n_tokens": 35, "n_pass": [92, 9, 8]}
{"time": "2021-02-16 04:34:04.108425", "score": "1.0", "loss": "0.0", "code": " void onFinishInflate() { super.onFinishInflate(integer); if ( null) {  } ; }", "n_tokens": 32, "n_pass": [93, 10, 9]}
{"time": "2021-02-16 04:34:11.360673", "score": "1.0", "loss": "0.0", "code": " void onFinishInflate() { super.onFinishInflate(integer); if ( null) {  } }", "n_tokens": 30, "n_pass": [139, 11, 10]}
{"time": "2021-02-16 04:34:13.882075", "score": "1.0", "loss": "0.0", "code": "void onFinishInflate() { super.onFinishInflate(integer); if ( null) {  } }", "n_tokens": 29, "n_pass": [141, 12, 11]}
{"time": "2021-02-16 04:34:17.113459", "score": "1.0", "loss": "0.0", "code": "void onFinishInflate(){ super.onFinishInflate(integer); if ( null) {  } }", "n_tokens": 28, "n_pass": [147, 13, 12]}
{"time": "2021-02-16 04:34:19.635321", "score": "1.0", "loss": "0.0", "code": "void onFinishInflate(){super.onFinishInflate(integer); if ( null) {  } }", "n_tokens": 27, "n_pass": [149, 14, 13]}
{"time": "2021-02-16 04:34:24.712667", "score": "1.0", "loss": "0.0", "code": "void onFinishInflate(){super.onFinishInflate(); if ( null) {  } }", "n_tokens": 26, "n_pass": [154, 16, 14]}
{"time": "2021-02-16 04:34:27.251264", "score": "1.0", "loss": "0.0", "code": "void onFinishInflate(){super.onFinishInflate();if ( null) {  } }", "n_tokens": 25, "n_pass": [157, 17, 15]}
{"time": "2021-02-16 04:34:29.791660", "score": "1.0", "loss": "0.0", "code": "void onFinishInflate(){super.onFinishInflate();if( null) {  } }", "n_tokens": 24, "n_pass": [159, 18, 16]}
{"time": "2021-02-16 04:34:32.319390", "score": "1.0", "loss": "0.0", "code": "void onFinishInflate(){super.onFinishInflate();if(null) {  } }", "n_tokens": 23, "n_pass": [161, 19, 17]}
{"time": "2021-02-16 04:34:34.833787", "score": "1.0", "loss": "0.0", "code": "void onFinishInflate(){super.onFinishInflate();if(null){  } }", "n_tokens": 22, "n_pass": [164, 20, 18]}
{"time": "2021-02-16 04:34:37.353148", "score": "1.0", "loss": "0.0", "code": "void onFinishInflate(){super.onFinishInflate();if(null){ } }", "n_tokens": 21, "n_pass": [166, 21, 19]}
{"time": "2021-02-16 04:34:39.901351", "score": "1.0", "loss": "0.0", "code": "void onFinishInflate(){super.onFinishInflate();if(null){} }", "n_tokens": 20, "n_pass": [167, 22, 20]}
{"time": "2021-02-16 04:34:46.014403", "score": "1.0", "loss": "0.0", "code": "void onFinishInflate(){super.onFinishInflate();if(null){}}", "n_tokens": 19, "n_pass": [189, 24, 21]}

Minimal simplified code:
void onFinishInflate(){super.onFinishInflate();if(null){}}

