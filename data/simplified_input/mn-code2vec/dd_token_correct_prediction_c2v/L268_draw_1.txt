
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/SummerRC__BiLiBiLi/OneXListviewLibrary/src/com/youxiachai/onexlistview/XStickyListHeadersIndexableView_draw.java
method_name = draw
method_body = @Override public void draw(Canvas canvas) { super.draw(canvas); if (mScroller != null) mScroller.draw(canvas); }
predict, score, loss = draw, 0.8942465782165527, 0.11546759307384491

Trace of simplified code(s):
{"time": "2021-02-14 13:27:26.743937", "score": "0.8942", "loss": "0.1155", "code": "@Override public void draw(Canvas canvas) { super.draw(canvas); if (mScroller != null) mScroller.draw(canvas); }", "n_tokens": 44, "n_pass": [1, 1, 1]}
{"time": "2021-02-14 13:27:29.480461", "score": "0.6062", "loss": "0.5098", "code": "void draw(Canvas canvas) { super.draw(canvas); if (mScroller != null) mScroller.draw(canvas); }", "n_tokens": 39, "n_pass": [20, 2, 2]}
{"time": "2021-02-14 13:27:32.522706", "score": "0.695", "loss": "0.3729", "code": "void draw(Canvas canvas) { super.draw(canvas); if (mScroller != null) (canvas); }", "n_tokens": 36, "n_pass": [53, 3, 3]}
{"time": "2021-02-14 13:27:35.151570", "score": "0.6753", "loss": "0.4013", "code": "void draw(Canvas canvas) { super.draw(canvas); if (mScroller != null) ; }", "n_tokens": 33, "n_pass": [54, 4, 4]}
{"time": "2021-02-14 13:27:38.185129", "score": "0.7379", "loss": "0.3107", "code": "void draw(Canvas canvas) { super.draw(canvas);(mScroller != null) ; }", "n_tokens": 30, "n_pass": [63, 5, 5]}
{"time": "2021-02-14 13:27:43.108470", "score": "0.747", "loss": "0.2985", "code": "void draw(Canvas canvas) { super.draw(canvas);(mScroller= null) ; }", "n_tokens": 28, "n_pass": [100, 6, 6]}
{"time": "2021-02-14 13:27:45.757727", "score": "0.7499", "loss": "0.2937", "code": "void draw(Canvas canvas) { super.draw(canvas);(mScrollernull) ; }", "n_tokens": 26, "n_pass": [101, 7, 7]}
{"time": "2021-02-14 13:27:49.204534", "score": "0.7499", "loss": "0.2937", "code": "void draw(Canvas canvas){ super.draw(canvas);(mScrollernull) ; }", "n_tokens": 25, "n_pass": [113, 8, 8]}
{"time": "2021-02-14 13:27:51.836184", "score": "0.7499", "loss": "0.2937", "code": "void draw(Canvas canvas){super.draw(canvas);(mScrollernull) ; }", "n_tokens": 24, "n_pass": [115, 9, 9]}
{"time": "2021-02-14 13:27:59.411522", "score": "0.9998", "loss": "0.0003", "code": "void draw(Canvas canvas){super.draw();(mScrollernull) ; }", "n_tokens": 23, "n_pass": [147, 11, 10]}
{"time": "2021-02-14 13:28:02.028760", "score": "0.9998", "loss": "0.0003", "code": "void draw(Canvas canvas){super.draw();(null) ; }", "n_tokens": 22, "n_pass": [151, 12, 11]}
{"time": "2021-02-14 13:28:04.646941", "score": "0.9998", "loss": "0.0003", "code": "void draw(Canvas canvas){super.draw();(null); }", "n_tokens": 21, "n_pass": [154, 13, 12]}
{"time": "2021-02-14 13:28:07.263154", "score": "0.9998", "loss": "0.0003", "code": "void draw(Canvas canvas){super.draw();(null);}", "n_tokens": 20, "n_pass": [156, 14, 13]}

Minimal simplified code:
void draw(Canvas canvas){super.draw();(null);}

