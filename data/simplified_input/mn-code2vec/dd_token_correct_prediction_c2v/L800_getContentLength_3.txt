
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/codefollower__Tomcat-Research/java/org/apache/catalina/connector/RequestFacade_getContentLength.java
method_name = getContentLength
method_body = @Override public int getContentLength() { if (request == null) { throw new IllegalStateException(sm.getString("requestFacade.nullRequest")); } return request.getContentLength(); }
predict, score, loss = getContentLength, 0.9968429803848267, 0.0032185916788876057

Trace of simplified code(s):
{"time": "2021-02-16 02:30:49.894223", "score": "0.9968", "loss": "0.0032", "code": "@Override public int getContentLength() { if (request == null) { throw new IllegalStateException(sm.getString(\"requestFacade.nullRequest\")); } return request.getContentLength(); }", "n_tokens": 57, "n_pass": [1, 1, 1]}
{"time": "2021-02-16 02:30:52.885418", "score": "0.9973", "loss": "0.0027", "code": "@Override public int getContentLength() { if (request == null) { throw new IllegalStateException(sm.getString); } return request.getContentLength(); }", "n_tokens": 50, "n_pass": [25, 2, 2]}
{"time": "2021-02-16 02:30:55.841638", "score": "0.9985", "loss": "0.0016", "code": "public int getContentLength() { if (request == null) { throw new IllegalStateException(sm.getString); } return request.getContentLength(); }", "n_tokens": 47, "n_pass": [50, 3, 3]}
{"time": "2021-02-16 02:30:59.014671", "score": "0.9971", "loss": "0.0031", "code": "public int getContentLength() { if (request ) { throw new IllegalStateException(sm.getString); } return request.getContentLength(); }", "n_tokens": 43, "n_pass": [56, 4, 4]}
{"time": "2021-02-16 02:31:01.593371", "score": "0.9974", "loss": "0.0028", "code": "public int getContentLength() { if (request ) { IllegalStateException(sm.getString); } return request.getContentLength(); }", "n_tokens": 39, "n_pass": [58, 5, 5]}
{"time": "2021-02-16 02:31:05.556426", "score": "0.9977", "loss": "0.0024", "code": "public int getContentLength() { if (request ) { IllegalStateException(getString); } return request.getContentLength(); }", "n_tokens": 37, "n_pass": [93, 6, 6]}
{"time": "2021-02-16 02:31:08.148419", "score": "0.9952", "loss": "0.005", "code": "public int getContentLength() { if (request ) { IllegalStateException(getString); } request.getContentLength(); }", "n_tokens": 35, "n_pass": [97, 7, 7]}
{"time": "2021-02-16 02:31:10.697575", "score": "0.9973", "loss": "0.0027", "code": "public int getContentLength() { if (request ) { IllegalStateException(getString); } getContentLength(); }", "n_tokens": 33, "n_pass": [98, 8, 8]}
{"time": "2021-02-16 02:31:13.363446", "score": "0.9973", "loss": "0.0027", "code": " int getContentLength() { if (request ) { IllegalStateException(getString); } getContentLength(); }", "n_tokens": 32, "n_pass": [102, 9, 9]}
{"time": "2021-02-16 02:31:15.927038", "score": "0.9973", "loss": "0.0027", "code": "int getContentLength() { if (request ) { IllegalStateException(getString); } getContentLength(); }", "n_tokens": 31, "n_pass": [103, 10, 10]}
{"time": "2021-02-16 02:31:22.889639", "score": "0.9973", "loss": "0.0027", "code": "int getContentLength(){ if (request ) { IllegalStateException(getString); } getContentLength(); }", "n_tokens": 30, "n_pass": [151, 11, 11]}
{"time": "2021-02-16 02:31:25.512441", "score": "0.9973", "loss": "0.0027", "code": "int getContentLength(){if (request ) { IllegalStateException(getString); } getContentLength(); }", "n_tokens": 29, "n_pass": [152, 12, 12]}
{"time": "2021-02-16 02:31:28.040495", "score": "0.9973", "loss": "0.0027", "code": "int getContentLength(){if(request ) { IllegalStateException(getString); } getContentLength(); }", "n_tokens": 28, "n_pass": [154, 13, 13]}
{"time": "2021-02-16 02:31:30.631807", "score": "0.9973", "loss": "0.0027", "code": "int getContentLength(){if(request) { IllegalStateException(getString); } getContentLength(); }", "n_tokens": 27, "n_pass": [157, 14, 14]}
{"time": "2021-02-16 02:31:33.566035", "score": "0.9973", "loss": "0.0027", "code": "int getContentLength(){if(request){ IllegalStateException(getString); } getContentLength(); }", "n_tokens": 26, "n_pass": [159, 15, 15]}
{"time": "2021-02-16 02:31:36.163282", "score": "0.9973", "loss": "0.0027", "code": "int getContentLength(){if(request){IllegalStateException(getString); } getContentLength(); }", "n_tokens": 25, "n_pass": [161, 16, 16]}
{"time": "2021-02-16 02:31:38.954473", "score": "0.998", "loss": "0.002", "code": "int getContentLength(){if(request){(getString); } getContentLength(); }", "n_tokens": 24, "n_pass": [162, 17, 17]}
{"time": "2021-02-16 02:31:41.546478", "score": "0.998", "loss": "0.002", "code": "int getContentLength(){if(request){(getString);} getContentLength(); }", "n_tokens": 23, "n_pass": [167, 18, 18]}
{"time": "2021-02-16 02:31:44.164076", "score": "0.998", "loss": "0.002", "code": "int getContentLength(){if(request){(getString);}getContentLength(); }", "n_tokens": 22, "n_pass": [169, 19, 19]}
{"time": "2021-02-16 02:31:46.698742", "score": "0.998", "loss": "0.002", "code": "int getContentLength(){if(request){(getString);}getContentLength();}", "n_tokens": 21, "n_pass": [174, 20, 20]}

Minimal simplified code:
int getContentLength(){if(request){(getString);}getContentLength();}

