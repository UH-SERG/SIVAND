
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/OpenRock__OpenAM/openam-entitlements/src/main/java/org/forgerock/openam/entitlement/conditions/environment/SessionCondition_hashCode.java
method_name = hashCode
method_body = @Override public int hashCode() { int hc = super.hashCode(); hc = 31 * hc + (int) (maxSessionTime ^ (maxSessionTime >>> 32)); hc = 31 * hc + (terminateSession ? 1 : 0); return hc; }
predict, score, loss = hashCode, 0.9999715089797974, 3.0636318115284666e-05

Trace of simplified code(s):
{"time": "2021-02-16 12:01:40.106253", "score": "1.0", "loss": "0.0", "code": "@Override public int hashCode() { int hc = super.hashCode(); hc = 31 * hc + (int) (maxSessionTime ^ (maxSessionTime >>> 32)); hc = 31 * hc + (terminateSession ? 1 : 0); return hc; }", "n_tokens": 93, "n_pass": [1, 1, 1]}
{"time": "2021-02-16 12:01:43.037784", "score": "0.9999", "loss": "0.0002", "code": "@Override public int hashCode() { int hc = super.hashCode* hc + (int) (maxSessionTime ^ (maxSessionTime >>> 32)); hc = 31 * hc + (terminateSession ? 1 : 0); return hc; }", "n_tokens": 82, "n_pass": [22, 2, 2]}
{"time": "2021-02-16 12:01:45.971915", "score": "0.9999", "loss": "0.0001", "code": "@Override public int hashCode() { int hc = super.hashCode* hc + (int) (maxSessionTime ^ (maxSessionTime )); hc = 31 * hc + (terminateSession ? 1 : 0); return hc; }", "n_tokens": 76, "n_pass": [47, 3, 3]}
{"time": "2021-02-16 12:01:48.539974", "score": "0.9996", "loss": "0.0007", "code": "int hashCode() { int hc = super.hashCode* hc + (int) (maxSessionTime ^ (maxSessionTime )); hc = 31 * hc + (terminateSession ? 1 : 0); return hc; }", "n_tokens": 71, "n_pass": [54, 4, 4]}
{"time": "2021-02-16 12:01:51.881854", "score": "0.9996", "loss": "0.0007", "code": "int hashCode() { int hc = super.hashCode + (int) (maxSessionTime ^ (maxSessionTime )); hc = 31 * hc + (terminateSession ? 1 : 0); return hc; }", "n_tokens": 68, "n_pass": [97, 5, 5]}
{"time": "2021-02-16 12:01:54.416044", "score": "0.9992", "loss": "0.0014", "code": "int hashCode() { int hc = super.hashCode +  (maxSessionTime ^ (maxSessionTime )); hc = 31 * hc + (terminateSession ? 1 : 0); return hc; }", "n_tokens": 65, "n_pass": [98, 6, 6]}
{"time": "2021-02-16 12:01:56.982228", "score": "0.9991", "loss": "0.0016", "code": "int hashCode() { int hc = super.hashCode +  (maxSessionTime(maxSessionTime )); hc = 31 * hc + (terminateSession ? 1 : 0); return hc; }", "n_tokens": 62, "n_pass": [100, 7, 7]}
{"time": "2021-02-16 12:01:59.528922", "score": "0.9862", "loss": "0.0209", "code": "int hashCode() { int hc = super.hashCode +  (maxSessionTime(maxSessionTime )); hc = 31 *+ (terminateSession ? 1 : 0); return hc; }", "n_tokens": 59, "n_pass": [106, 8, 8]}
{"time": "2021-02-16 12:02:02.083846", "score": "0.9902", "loss": "0.0192", "code": "int hashCode() { int hc = super.hashCode +  (maxSessionTime(maxSessionTime )); hc = 31 *+ (terminateSession ? 1 : 0); ; }", "n_tokens": 56, "n_pass": [112, 9, 9]}
{"time": "2021-02-16 12:02:04.997983", "score": "0.9553", "loss": "0.1045", "code": "int hashCode() { int hc =  +  (maxSessionTime(maxSessionTime )); hc = 31 *+ (terminateSession ? 1 : 0); ; }", "n_tokens": 53, "n_pass": [119, 10, 10]}
{"time": "2021-02-16 12:02:07.529559", "score": "0.9437", "loss": "0.1826", "code": "int hashCode() { int hc =  (maxSessionTime(maxSessionTime )); hc = 31 *+ (terminateSession ? 1 : 0); ; }", "n_tokens": 50, "n_pass": [120, 11, 11]}
{"time": "2021-02-16 12:02:10.054570", "score": "0.9976", "loss": "0.0041", "code": "int hashCode() { int hc =  (maxSessionTime(maxSessionTime )); hc = 3+ (terminateSession ? 1 : 0); ; }", "n_tokens": 47, "n_pass": [126, 12, 12]}
{"time": "2021-02-16 12:02:16.132481", "score": "0.939", "loss": "0.2889", "code": "int hashCode() { int hc =  (maxSessionTime(maxSessionTime )); hc =+ (terminateSession ? 1 : 0); ; }", "n_tokens": 45, "n_pass": [177, 13, 13]}
{"time": "2021-02-16 12:02:18.658084", "score": "0.9978", "loss": "0.0029", "code": "int hashCode() { int hc =  (maxSessionTime(maxSessionTime )); hc =(terminateSession ? 1 : 0); ; }", "n_tokens": 43, "n_pass": [178, 14, 14]}
{"time": "2021-02-16 12:02:21.195495", "score": "0.9978", "loss": "0.0029", "code": "int hashCode() { int hc =  (maxSessionTime(maxSessionTime )); hc =(terminateSession ? 1 : 0); }", "n_tokens": 41, "n_pass": [185, 15, 15]}
{"time": "2021-02-16 12:02:24.476792", "score": "0.9978", "loss": "0.0029", "code": "int hashCode(){ int hc =  (maxSessionTime(maxSessionTime )); hc =(terminateSession ? 1 : 0); }", "n_tokens": 40, "n_pass": [192, 16, 16]}
{"time": "2021-02-16 12:02:27.011661", "score": "0.9978", "loss": "0.0029", "code": "int hashCode(){int hc =  (maxSessionTime(maxSessionTime )); hc =(terminateSession ? 1 : 0); }", "n_tokens": 39, "n_pass": [194, 17, 17]}
{"time": "2021-02-16 12:02:29.568115", "score": "0.9956", "loss": "0.007", "code": "int hashCode(){ hc =  (maxSessionTime(maxSessionTime )); hc =(terminateSession ? 1 : 0); }", "n_tokens": 38, "n_pass": [195, 18, 18]}
{"time": "2021-02-16 12:02:32.114848", "score": "0.9956", "loss": "0.007", "code": "int hashCode(){hc =  (maxSessionTime(maxSessionTime )); hc =(terminateSession ? 1 : 0); }", "n_tokens": 37, "n_pass": [196, 19, 19]}
{"time": "2021-02-16 12:02:34.651733", "score": "0.9956", "loss": "0.007", "code": "int hashCode(){hc=  (maxSessionTime(maxSessionTime )); hc =(terminateSession ? 1 : 0); }", "n_tokens": 36, "n_pass": [198, 20, 20]}
{"time": "2021-02-16 12:02:37.187237", "score": "0.9963", "loss": "0.0067", "code": "int hashCode(){hc  (maxSessionTime(maxSessionTime )); hc =(terminateSession ? 1 : 0); }", "n_tokens": 35, "n_pass": [199, 21, 21]}
{"time": "2021-02-16 12:02:39.732309", "score": "0.9963", "loss": "0.0067", "code": "int hashCode(){hc (maxSessionTime(maxSessionTime )); hc =(terminateSession ? 1 : 0); }", "n_tokens": 34, "n_pass": [200, 22, 22]}
{"time": "2021-02-16 12:02:42.254046", "score": "0.9963", "loss": "0.0067", "code": "int hashCode(){hc(maxSessionTime(maxSessionTime )); hc =(terminateSession ? 1 : 0); }", "n_tokens": 33, "n_pass": [201, 23, 23]}
{"time": "2021-02-16 12:02:44.776236", "score": "0.9968", "loss": "0.0043", "code": "int hashCode(){hc((maxSessionTime )); hc =(terminateSession ? 1 : 0); }", "n_tokens": 32, "n_pass": [203, 24, 24]}
{"time": "2021-02-16 12:02:50.552046", "score": "0.9935", "loss": "0.0084", "code": "int hashCode(){((maxSessionTime )); hc =(terminateSession ? 1 : 0); }", "n_tokens": 31, "n_pass": [222, 26, 25]}
{"time": "2021-02-16 12:02:59.840889", "score": "0.9935", "loss": "0.0084", "code": "int hashCode(){((maxSessionTime)); hc =(terminateSession ? 1 : 0); }", "n_tokens": 30, "n_pass": [266, 28, 26]}
{"time": "2021-02-16 12:03:02.346635", "score": "0.9935", "loss": "0.0084", "code": "int hashCode(){((maxSessionTime));hc =(terminateSession ? 1 : 0); }", "n_tokens": 29, "n_pass": [269, 29, 27]}
{"time": "2021-02-16 12:03:04.845166", "score": "0.9935", "loss": "0.0084", "code": "int hashCode(){((maxSessionTime));hc=(terminateSession ? 1 : 0); }", "n_tokens": 28, "n_pass": [271, 30, 28]}
{"time": "2021-02-16 12:03:09.881991", "score": "0.9935", "loss": "0.0084", "code": "int hashCode(){((maxSessionTime));hc=(terminateSession? 1 : 0); }", "n_tokens": 27, "n_pass": [275, 32, 29]}
{"time": "2021-02-16 12:03:12.412501", "score": "0.9935", "loss": "0.0084", "code": "int hashCode(){((maxSessionTime));hc=(terminateSession?1 : 0); }", "n_tokens": 26, "n_pass": [277, 33, 30]}
{"time": "2021-02-16 12:03:14.912605", "score": "0.9935", "loss": "0.0084", "code": "int hashCode(){((maxSessionTime));hc=(terminateSession?1: 0); }", "n_tokens": 25, "n_pass": [279, 34, 31]}
{"time": "2021-02-16 12:03:17.409577", "score": "0.9935", "loss": "0.0084", "code": "int hashCode(){((maxSessionTime));hc=(terminateSession?1:0); }", "n_tokens": 24, "n_pass": [281, 35, 32]}
{"time": "2021-02-16 12:03:19.931446", "score": "0.9935", "loss": "0.0084", "code": "int hashCode(){((maxSessionTime));hc=(terminateSession?1:0);}", "n_tokens": 23, "n_pass": [285, 36, 33]}

Minimal simplified code:
int hashCode(){((maxSessionTime));hc=(terminateSession?1:0);}

