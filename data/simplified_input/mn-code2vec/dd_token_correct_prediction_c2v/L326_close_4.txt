
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/CogComp__cogcomp-nlp/ner/src/main/java/edu/illinois/cs/cogcomp/ner/IO/InFile_close.java
method_name = close
method_body = public void close() { try { this.in.close(); } catch (Exception ignored) { } }
predict, score, loss = close, 0.7768669724464417, 0.2639387547969818

Trace of simplified code(s):
{"time": "2021-02-14 15:22:54.031796", "score": "0.7769", "loss": "0.2639", "code": "public void close() { try { this.in.close(); } catch (Exception ignored) { } }", "n_tokens": 38, "n_pass": [1, 1, 1]}
{"time": "2021-02-14 15:22:59.688524", "score": "0.7769", "loss": "0.2639", "code": "void close() { try { this.in.close(); } catch (Exception ignored) { } }", "n_tokens": 36, "n_pass": [44, 3, 2]}
{"time": "2021-02-14 15:23:02.342805", "score": "0.5406", "loss": "0.6431", "code": "void close() { try { in.close(); } catch (Exception ignored) { } }", "n_tokens": 34, "n_pass": [50, 4, 3]}
{"time": "2021-02-14 15:23:13.629330", "score": "0.5406", "loss": "0.6431", "code": "void close() { try { in.close();} catch (Exception ignored) { } }", "n_tokens": 33, "n_pass": [99, 7, 4]}
{"time": "2021-02-14 15:23:16.259336", "score": "0.5406", "loss": "0.6431", "code": "void close() { try { in.close();}catch (Exception ignored) { } }", "n_tokens": 32, "n_pass": [101, 8, 5]}
{"time": "2021-02-14 15:23:19.685780", "score": "0.5406", "loss": "0.6431", "code": "void close(){ try { in.close();}catch (Exception ignored) { } }", "n_tokens": 31, "n_pass": [114, 9, 6]}
{"time": "2021-02-14 15:23:22.312828", "score": "0.5406", "loss": "0.6431", "code": "void close(){try { in.close();}catch (Exception ignored) { } }", "n_tokens": 30, "n_pass": [116, 10, 7]}
{"time": "2021-02-14 15:23:24.935016", "score": "0.5406", "loss": "0.6431", "code": "void close(){try{ in.close();}catch (Exception ignored) { } }", "n_tokens": 29, "n_pass": [118, 11, 8]}
{"time": "2021-02-14 15:23:27.555794", "score": "0.5406", "loss": "0.6431", "code": "void close(){try{in.close();}catch (Exception ignored) { } }", "n_tokens": 28, "n_pass": [120, 12, 9]}
{"time": "2021-02-14 15:23:35.510014", "score": "0.5406", "loss": "0.6431", "code": "void close(){try{in.close();}catch(Exception ignored) { } }", "n_tokens": 27, "n_pass": [155, 14, 10]}
{"time": "2021-02-14 15:23:38.139674", "score": "0.5406", "loss": "0.6431", "code": "void close(){try{in.close();}catch(Exception ignored){ } }", "n_tokens": 26, "n_pass": [160, 15, 11]}
{"time": "2021-02-14 15:23:40.766750", "score": "0.5406", "loss": "0.6431", "code": "void close(){try{in.close();}catch(Exception ignored){} }", "n_tokens": 25, "n_pass": [162, 16, 12]}
{"time": "2021-02-14 15:23:43.391944", "score": "0.5406", "loss": "0.6431", "code": "void close(){try{in.close();}catch(Exception ignored){}}", "n_tokens": 24, "n_pass": [164, 17, 13]}

Minimal simplified code:
void close(){try{in.close();}catch(Exception ignored){}}

