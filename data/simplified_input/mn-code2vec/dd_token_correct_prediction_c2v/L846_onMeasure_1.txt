
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/jayrambhia__Tooltip/tooltip/src/main/java/com/fenchtose/tooltip/Tooltip_onMeasure.java
method_name = onMeasure
method_body = @Override protected void onMeasure(int widthMeasureSpec, int heightMeasureSpec) { super.onMeasure(widthMeasureSpec, heightMeasureSpec); View child = getChildAt(0); measureChild(child, widthMeasureSpec, heightMeasureSpec); if (debug) { Log.i(TAG, "child measured width: " + child.getMeasuredWidth()); } }
predict, score, loss = onMeasure, 0.9999985694885254, 2.264974000354414e-06

Trace of simplified code(s):
{"time": "2021-02-16 03:48:21.217013", "score": "1.0", "loss": "0.0", "code": "@Override protected void onMeasure(int widthMeasureSpec, int heightMeasureSpec) { super.onMeasure(widthMeasureSpec, heightMeasureSpec); View child = getChildAt(0); measureChild(child, widthMeasureSpec, heightMeasureSpec); if (debug) { Log.i(TAG, \"child measured width: \" + child.getMeasuredWidth()); } }", "n_tokens": 94, "n_pass": [1, 1, 1]}
{"time": "2021-02-16 03:48:23.797851", "score": "0.7858", "loss": "0.2432", "code": "@Override protected void onMeasure(int widthMeasureSpec, int heightMeasureSpec) { superchild = getChildAt(0); measureChild(child, widthMeasureSpec, heightMeasureSpec); if (debug) { Log.i(TAG, \"child measured width: \" + child.getMeasuredWidth()); } }", "n_tokens": 82, "n_pass": [22, 2, 2]}
{"time": "2021-02-16 03:48:26.377640", "score": "0.925", "loss": "0.0799", "code": "@Override protected void onMeasure(int widthMeasureSpec, int heightMeasureSpec) { superchild = getChildAt(0); measureChild(child, widthMeasureSpec, heightMeasureSpec); if (debug) { Log.i(TAG, child.getMeasuredWidth()); } }", "n_tokens": 70, "n_pass": [26, 3, 3]}
{"time": "2021-02-16 03:48:28.964479", "score": "0.9152", "loss": "0.0904", "code": "void onMeasure(int widthMeasureSpec, int heightMeasureSpec) { superchild = getChildAt(0); measureChild(child, widthMeasureSpec, heightMeasureSpec); if (debug) { Log.i(TAG, child.getMeasuredWidth()); } }", "n_tokens": 65, "n_pass": [47, 4, 4]}
{"time": "2021-02-16 03:48:31.513630", "score": "0.9852", "loss": "0.0185", "code": "void onMeasure(int widthMeasureSpec, int heightMeasureSpec) { superchild = getChildAt(child, widthMeasureSpec, heightMeasureSpec); if (debug) { Log.i(TAG, child.getMeasuredWidth()); } }", "n_tokens": 59, "n_pass": [52, 5, 5]}
{"time": "2021-02-16 03:48:34.081227", "score": "0.9964", "loss": "0.0054", "code": "void onMeasure(int widthMeasureSpec, int heightMeasureSpec) { superchild = getChildAt(heightMeasureSpec); if (debug) { Log.i(TAG, child.getMeasuredWidth()); } }", "n_tokens": 53, "n_pass": [53, 6, 6]}
{"time": "2021-02-16 03:48:36.631888", "score": "0.9964", "loss": "0.0054", "code": "void onMeasure(int widthMeasureSpec, int heightMeasureSpec) { superchild = getChildAt(heightMeasureSpec); if (debug) { Log.i(TAG,getMeasuredWidth()); } }", "n_tokens": 50, "n_pass": [87, 7, 7]}
{"time": "2021-02-16 03:48:41.501172", "score": "0.9956", "loss": "0.0062", "code": "void onMeasure(int widthMeasureSpec, int heightMeasureSpec) { superchild = getChildAt(heightMeasureSpec); if (debug) { Log.i(TAG()); } }", "n_tokens": 48, "n_pass": [139, 8, 8]}
{"time": "2021-02-16 03:48:44.031798", "score": "0.9963", "loss": "0.0054", "code": "void onMeasure(int widthMeasureSpec, int heightMeasureSpec) { superchild = getChildAt(heightMeasureSpec); if (debug) { Log.i(TAG); } }", "n_tokens": 46, "n_pass": [140, 9, 9]}
{"time": "2021-02-16 03:48:47.289671", "score": "0.9963", "loss": "0.0054", "code": "void onMeasure(int widthMeasureSpec,int heightMeasureSpec) { superchild = getChildAt(heightMeasureSpec); if (debug) { Log.i(TAG); } }", "n_tokens": 45, "n_pass": [152, 10, 10]}
{"time": "2021-02-16 03:48:49.829918", "score": "0.9963", "loss": "0.0054", "code": "void onMeasure(int widthMeasureSpec,int heightMeasureSpec){ superchild = getChildAt(heightMeasureSpec); if (debug) { Log.i(TAG); } }", "n_tokens": 44, "n_pass": [157, 11, 11]}
{"time": "2021-02-16 03:48:52.371820", "score": "0.9963", "loss": "0.0054", "code": "void onMeasure(int widthMeasureSpec,int heightMeasureSpec){superchild = getChildAt(heightMeasureSpec); if (debug) { Log.i(TAG); } }", "n_tokens": 43, "n_pass": [159, 12, 12]}
{"time": "2021-02-16 03:48:54.917403", "score": "0.9939", "loss": "0.0092", "code": "void onMeasure(int widthMeasureSpec,int heightMeasureSpec){child = getChildAt(heightMeasureSpec); if (debug) { Log.i(TAG); } }", "n_tokens": 42, "n_pass": [160, 13, 13]}
{"time": "2021-02-16 03:48:57.450083", "score": "0.99", "loss": "0.0149", "code": "void onMeasure(int widthMeasureSpec,int heightMeasureSpec){child =(heightMeasureSpec); if (debug) { Log.i(TAG); } }", "n_tokens": 40, "n_pass": [163, 14, 14]}
{"time": "2021-02-16 03:48:59.978289", "score": "0.9603", "loss": "0.0542", "code": "void onMeasure(int widthMeasureSpec,int heightMeasureSpec){child =(heightMeasureSpec); if (debug) { Log(TAG); } }", "n_tokens": 38, "n_pass": [171, 15, 15]}
{"time": "2021-02-16 03:49:03.208820", "score": "0.9822", "loss": "0.0241", "code": "void onMeasure(int widthMeasureSpec,int heightMeasureSpec){child(heightMeasureSpec); if (debug) { Log(TAG); } }", "n_tokens": 36, "n_pass": [190, 16, 16]}
{"time": "2021-02-16 03:49:05.740592", "score": "0.947", "loss": "0.0652", "code": "void onMeasure(int widthMeasureSpec,int heightMeasureSpec){child(heightMeasureSpec); if (debug) {(TAG); } }", "n_tokens": 34, "n_pass": [197, 17, 17]}
{"time": "2021-02-16 03:49:08.977693", "score": "0.6158", "loss": "0.5378", "code": "void onMeasure(int widthMeasureSpec,int heightMeasureSpec){(heightMeasureSpec); if (debug) {(TAG); } }", "n_tokens": 33, "n_pass": [215, 18, 18]}
{"time": "2021-02-16 03:49:14.508420", "score": "0.6158", "loss": "0.5378", "code": "void onMeasure(int widthMeasureSpec,int heightMeasureSpec){(heightMeasureSpec); if(debug) {(TAG); } }", "n_tokens": 32, "n_pass": [260, 19, 19]}
{"time": "2021-02-16 03:49:17.028182", "score": "0.6158", "loss": "0.5378", "code": "void onMeasure(int widthMeasureSpec,int heightMeasureSpec){(heightMeasureSpec); if(debug){(TAG); } }", "n_tokens": 31, "n_pass": [263, 20, 20]}
{"time": "2021-02-16 03:49:19.548871", "score": "0.6158", "loss": "0.5378", "code": "void onMeasure(int widthMeasureSpec,int heightMeasureSpec){(heightMeasureSpec); if(debug){(TAG);} }", "n_tokens": 30, "n_pass": [269, 21, 21]}
{"time": "2021-02-16 03:49:22.083070", "score": "0.6158", "loss": "0.5378", "code": "void onMeasure(int widthMeasureSpec,int heightMeasureSpec){(heightMeasureSpec); if(debug){(TAG);}}", "n_tokens": 29, "n_pass": [271, 22, 22]}
{"time": "2021-02-16 03:49:25.331203", "score": "0.6158", "loss": "0.5378", "code": "void onMeasure(int widthMeasureSpec,int heightMeasureSpec){(heightMeasureSpec);if(debug){(TAG);}}", "n_tokens": 28, "n_pass": [290, 23, 23]}

Minimal simplified code:
void onMeasure(int widthMeasureSpec,int heightMeasureSpec){(heightMeasureSpec);if(debug){(TAG);}}

