
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/ozodrukh__RippleDrawable/app/src/main/java/codetail/graphics/drawables/LayerDrawable_isStateful.java
method_name = isStateful
method_body = public final boolean isStateful() { if (mHaveIsStateful) { return mIsStateful; } final ChildDrawable[] array = mChildren; final int N = mNum; boolean isStateful = false; for (int i = 0; i < N; i++) { if (array[i].mDrawable.isStateful()) { isStateful = true; break; } } mIsStateful = isStateful; mHaveIsStateful = true; return isStateful; }
predict, score, loss = isStateful, 0.9999548196792603, 7.366862701019272e-05

Trace of simplified code(s):
{"time": "2021-02-16 12:41:24.992017", "score": "1.0", "loss": "0.0001", "code": "public final boolean isStateful() { if (mHaveIsStateful) { return mIsStateful; } final ChildDrawable[] array = mChildren; final int N = mNum; boolean isStateful = false; for (int i = 0; i < N; i++) { if (array[i].mDrawable.isStateful()) { isStateful = true; break; } } mIsStateful = isStateful; mHaveIsStateful = true; return isStateful; }", "n_tokens": 137, "n_pass": [1, 1, 1]}
{"time": "2021-02-16 12:41:27.575732", "score": "1.0", "loss": "0.0001", "code": "public final boolean isStateful() { if (mHaveIsStateful) { return mIsStateful; } final ChildDrawable[] array = mChildren; mNum; boolean isStateful = false; for (int i = 0; i < N; i++) { if (array[i].mDrawable.isStateful()) { isStateful = true; break; } } mIsStateful = isStateful; mHaveIsStateful = true; return isStateful; }", "n_tokens": 129, "n_pass": [49, 2, 2]}
{"time": "2021-02-16 12:41:30.138747", "score": "1.0", "loss": "0.0001", "code": "public final boolean isStateful() { if (mHaveIsStateful) { return mIsStateful; } final ChildDrawable[] array = mChildren;  false; for (int i = 0; i < N; i++) { if (array[i].mDrawable.isStateful()) { isStateful = true; break; } } mIsStateful = isStateful; mHaveIsStateful = true; return isStateful; }", "n_tokens": 121, "n_pass": [50, 3, 3]}
{"time": "2021-02-16 12:41:32.717058", "score": "0.9999", "loss": "0.0001", "code": "public final boolean isStateful() { if (mHaveIsStateful) { return mIsStateful; } final ChildDrawable[] array = mChildren; for (int i = 0; i < N; i++) { if (array[i].mDrawable.isStateful()) { isStateful = true; break; } } mIsStateful = isStateful; mHaveIsStateful = true; return isStateful; }", "n_tokens": 117, "n_pass": [93, 4, 4]}
{"time": "2021-02-16 12:41:35.272439", "score": "0.9999", "loss": "0.0001", "code": "public final boolean isStateful() { if (mHaveIsStateful) { return mIsStateful; } final ChildDrawable[] array = mChildren; for (int i = 0; N; i++) { if (array[i].mDrawable.isStateful()) { isStateful = true; break; } } mIsStateful = isStateful; mHaveIsStateful = true; return isStateful; }", "n_tokens": 113, "n_pass": [97, 5, 5]}
{"time": "2021-02-16 12:41:37.825999", "score": "0.9999", "loss": "0.0001", "code": "public final boolean isStateful() { if (mHaveIsStateful) { return mIsStateful; } final ChildDrawable[] array = mChildren; for (int i = 0; N; i++) { if (array[i].mDrawable.isStateful()) {true; break; } } mIsStateful = isStateful; mHaveIsStateful = true; return isStateful; }", "n_tokens": 108, "n_pass": [104, 6, 6]}
{"time": "2021-02-16 12:41:40.405923", "score": "0.9999", "loss": "0.0001", "code": "public final boolean isStateful() { if (mHaveIsStateful) { return mIsStateful; } final ChildDrawable[] array = mChildren; for (int i = 0; N; i++) { if (array[i].mDrawable.isStateful()) { } } mIsStateful = isStateful; mHaveIsStateful = true; return isStateful; }", "n_tokens": 103, "n_pass": [105, 7, 7]}
{"time": "2021-02-16 12:41:42.978440", "score": "0.9999", "loss": "0.0001", "code": "public final boolean isStateful() { if (mHaveIsStateful) { return mIsStateful; } final ChildDrawable[] array = mChildren; for (int i = 0; N; i++) { if (array[i].mDrawable.isStateful()) { } } ; mHaveIsStateful = true; return isStateful; }", "n_tokens": 98, "n_pass": [107, 8, 8]}
{"time": "2021-02-16 12:41:45.526384", "score": "0.9997", "loss": "0.0003", "code": "public final boolean isStateful() { if (mHaveIsStateful) { return mIsStateful; } final ChildDrawable[] array = mChildren; for (int i = 0; N; i++) { if (array[i].mDrawable.isStateful()) { } }  true; return isStateful; }", "n_tokens": 93, "n_pass": [108, 9, 9]}
{"time": "2021-02-16 12:41:48.081133", "score": "0.9999", "loss": "0.0001", "code": "public final boolean isStateful() { if (mHaveIsStateful) { return mIsStateful; } final ChildDrawable[] array = mChildren; for (int i = 0; N; i++) { if (array[i].mDrawable.isStateful()) { } }  isStateful; }", "n_tokens": 88, "n_pass": [109, 10, 10]}
{"time": "2021-02-16 12:41:50.627649", "score": "0.9999", "loss": "0.0001", "code": "boolean isStateful() { if (mHaveIsStateful) { return mIsStateful; } final ChildDrawable[] array = mChildren; for (int i = 0; N; i++) { if (array[i].mDrawable.isStateful()) { } }  isStateful; }", "n_tokens": 84, "n_pass": [111, 11, 11]}
{"time": "2021-02-16 12:41:53.209016", "score": "0.9996", "loss": "0.0005", "code": "boolean isStateful() { if (mHaveIsStateful) {  } final ChildDrawable[] array = mChildren; for (int i = 0; N; i++) { if (array[i].mDrawable.isStateful()) { } }  isStateful; }", "n_tokens": 80, "n_pass": [116, 12, 12]}
{"time": "2021-02-16 12:41:55.779044", "score": "0.9997", "loss": "0.0004", "code": "boolean isStateful() { if (mHaveIsStateful) {  } final ChildDrawable[] mChildren; for (int i = 0; N; i++) { if (array[i].mDrawable.isStateful()) { } }  isStateful; }", "n_tokens": 76, "n_pass": [119, 13, 13]}
{"time": "2021-02-16 12:41:59.084751", "score": "0.9997", "loss": "0.0004", "code": "boolean isStateful() { if (mHaveIsStateful) {  } final ChildDrawable[] mChildren; for (int i = 0; N; i) { if (array[i].mDrawable.isStateful()) { } }  isStateful; }", "n_tokens": 74, "n_pass": [184, 14, 14]}
{"time": "2021-02-16 12:42:01.639675", "score": "1.0", "loss": "0.0001", "code": "boolean isStateful() { if (mHaveIsStateful) {  } final ChildDrawable[] mChildren; for (int i = 0; N; i) { if (array[i].isStateful()) { } }  isStateful; }", "n_tokens": 72, "n_pass": [190, 15, 15]}
{"time": "2021-02-16 12:42:04.191163", "score": "1.0", "loss": "0.0001", "code": "boolean isStateful() { if (mHaveIsStateful) {  } final ChildDrawable[] mChildren; for (int i = 0; N; i) { if (array[i].isStateful()) { } }; }", "n_tokens": 69, "n_pass": [195, 16, 16]}
{"time": "2021-02-16 12:42:07.120579", "score": "1.0", "loss": "0.0001", "code": "boolean isStateful() { if (mHaveIsStateful) {  } ChildDrawable[] mChildren; for (int i = 0; N; i) { if (array[i].isStateful()) { } }; }", "n_tokens": 67, "n_pass": [206, 17, 17]}
{"time": "2021-02-16 12:42:09.662577", "score": "1.0", "loss": "0.0", "code": "boolean isStateful() { if (mHaveIsStateful) {  } ChildDrawable mChildren; for (int i = 0; N; i) { if (array[i].isStateful()) { } }; }", "n_tokens": 65, "n_pass": [208, 18, 18]}
{"time": "2021-02-16 12:42:12.201938", "score": "1.0", "loss": "0.0", "code": "boolean isStateful() { if (mHaveIsStateful) {  } ChildDrawable; for (int i = 0; N; i) { if (array[i].isStateful()) { } }; }", "n_tokens": 63, "n_pass": [209, 19, 19]}
{"time": "2021-02-16 12:42:14.754552", "score": "1.0", "loss": "0.0", "code": "boolean isStateful() { if (mHaveIsStateful) {  } ChildDrawable; for (int i = 0; N;) { if (array[i].isStateful()) { } }; }", "n_tokens": 61, "n_pass": [218, 20, 20]}
{"time": "2021-02-16 12:42:17.683210", "score": "1.0", "loss": "0.0", "code": "boolean isStateful() { if (mHaveIsStateful) {  }; for (int i = 0; N;) { if (array[i].isStateful()) { } }; }", "n_tokens": 59, "n_pass": [239, 21, 21]}
{"time": "2021-02-16 12:42:20.209635", "score": "1.0", "loss": "0.0", "code": "boolean isStateful() { if (mHaveIsStateful) {  }for (int i = 0; N;) { if (array[i].isStateful()) { } }; }", "n_tokens": 57, "n_pass": [240, 22, 22]}
{"time": "2021-02-16 12:42:29.809832", "score": "1.0", "loss": "0.0", "code": "boolean isStateful() { if (mHaveIsStateful) {  }for(int i = 0; N;) { if (array[i].isStateful()) { } }; }", "n_tokens": 56, "n_pass": [323, 23, 23]}
{"time": "2021-02-16 12:42:32.338481", "score": "0.9999", "loss": "0.0001", "code": "boolean isStateful() { if (mHaveIsStateful) {  }for( i = 0; N;) { if (array[i].isStateful()) { } }; }", "n_tokens": 55, "n_pass": [325, 24, 24]}
{"time": "2021-02-16 12:42:34.880974", "score": "0.9999", "loss": "0.0001", "code": "boolean isStateful() { if (mHaveIsStateful) {  }for(i = 0; N;) { if (array[i].isStateful()) { } }; }", "n_tokens": 54, "n_pass": [326, 25, 25]}
{"time": "2021-02-16 12:42:37.425269", "score": "0.9999", "loss": "0.0001", "code": "boolean isStateful() { if (mHaveIsStateful) {  }for(i= 0; N;) { if (array[i].isStateful()) { } }; }", "n_tokens": 53, "n_pass": [328, 26, 26]}
{"time": "2021-02-16 12:42:39.948957", "score": "0.9999", "loss": "0.0001", "code": "boolean isStateful() { if (mHaveIsStateful) {  }for(i=0; N;) { if (array[i].isStateful()) { } }; }", "n_tokens": 52, "n_pass": [330, 27, 27]}
{"time": "2021-02-16 12:42:42.471270", "score": "0.9999", "loss": "0.0001", "code": "boolean isStateful() { if (mHaveIsStateful) {  }for(i=0;N;) { if (array[i].isStateful()) { } }; }", "n_tokens": 51, "n_pass": [333, 28, 28]}
{"time": "2021-02-16 12:42:45.005414", "score": "1.0", "loss": "0.0", "code": "boolean isStateful() { if (mHaveIsStateful) {  }for(i=0;;) { if (array[i].isStateful()) { } }; }", "n_tokens": 50, "n_pass": [334, 29, 29]}
{"time": "2021-02-16 12:42:47.525062", "score": "1.0", "loss": "0.0", "code": "boolean isStateful() { if (mHaveIsStateful) {  }for(i=0;;){ if (array[i].isStateful()) { } }; }", "n_tokens": 49, "n_pass": [337, 30, 30]}
{"time": "2021-02-16 12:42:50.051733", "score": "1.0", "loss": "0.0", "code": "boolean isStateful() { if (mHaveIsStateful) {  }for(i=0;;){if (array[i].isStateful()) { } }; }", "n_tokens": 48, "n_pass": [339, 31, 31]}
{"time": "2021-02-16 12:42:52.580081", "score": "1.0", "loss": "0.0", "code": "boolean isStateful() { if (mHaveIsStateful) {  }for(i=0;;){if(array[i].isStateful()) { } }; }", "n_tokens": 47, "n_pass": [341, 32, 32]}
{"time": "2021-02-16 12:42:55.108224", "score": "1.0", "loss": "0.0", "code": "boolean isStateful() { if (mHaveIsStateful) {  }for(i=0;;){if(array[i].isStateful()){ } }; }", "n_tokens": 46, "n_pass": [352, 33, 33]}
{"time": "2021-02-16 12:42:57.665261", "score": "1.0", "loss": "0.0", "code": "boolean isStateful() { if (mHaveIsStateful) {  }for(i=0;;){if(array[i].isStateful()){} }; }", "n_tokens": 45, "n_pass": [354, 34, 34]}
{"time": "2021-02-16 12:43:00.955430", "score": "1.0", "loss": "0.0", "code": "boolean isStateful(){ if (mHaveIsStateful) {  }for(i=0;;){if(array[i].isStateful()){} }; }", "n_tokens": 44, "n_pass": [363, 35, 35]}
{"time": "2021-02-16 12:43:03.490346", "score": "1.0", "loss": "0.0", "code": "boolean isStateful(){if (mHaveIsStateful) {  }for(i=0;;){if(array[i].isStateful()){} }; }", "n_tokens": 43, "n_pass": [365, 36, 36]}
{"time": "2021-02-16 12:43:06.028488", "score": "1.0", "loss": "0.0", "code": "boolean isStateful(){if(mHaveIsStateful) {  }for(i=0;;){if(array[i].isStateful()){} }; }", "n_tokens": 42, "n_pass": [367, 37, 37]}
{"time": "2021-02-16 12:43:08.556047", "score": "1.0", "loss": "0.0", "code": "boolean isStateful(){if(mHaveIsStateful){  }for(i=0;;){if(array[i].isStateful()){} }; }", "n_tokens": 41, "n_pass": [371, 38, 38]}
{"time": "2021-02-16 12:43:11.093649", "score": "1.0", "loss": "0.0", "code": "boolean isStateful(){if(mHaveIsStateful){ }for(i=0;;){if(array[i].isStateful()){} }; }", "n_tokens": 40, "n_pass": [373, 39, 39]}
{"time": "2021-02-16 12:43:13.638172", "score": "1.0", "loss": "0.0", "code": "boolean isStateful(){if(mHaveIsStateful){}for(i=0;;){if(array[i].isStateful()){} }; }", "n_tokens": 39, "n_pass": [374, 40, 40]}
{"time": "2021-02-16 12:43:16.155995", "score": "1.0", "loss": "0.0", "code": "boolean isStateful(){if(mHaveIsStateful){}for(i0;;){if(array[i].isStateful()){} }; }", "n_tokens": 38, "n_pass": [379, 41, 41]}
{"time": "2021-02-16 12:43:18.698318", "score": "1.0", "loss": "0.0", "code": "boolean isStateful(){if(mHaveIsStateful){}for(i;;){if(array[i].isStateful()){} }; }", "n_tokens": 37, "n_pass": [380, 42, 42]}
{"time": "2021-02-16 12:43:21.995057", "score": "1.0", "loss": "0.0", "code": "boolean isStateful(){if(mHaveIsStateful){}for(;;){if(array[i].isStateful()){} }; }", "n_tokens": 36, "n_pass": [414, 43, 43]}
{"time": "2021-02-16 12:43:26.321166", "score": "1.0", "loss": "0.0", "code": "boolean isStateful(){if(mHaveIsStateful){}for(;;){if(array[i].isStateful()){}}; }", "n_tokens": 35, "n_pass": [455, 44, 44]}
{"time": "2021-02-16 12:43:28.847586", "score": "1.0", "loss": "0.0", "code": "boolean isStateful(){if(mHaveIsStateful){}for(;;){if(array[i].isStateful()){}} }", "n_tokens": 34, "n_pass": [457, 45, 45]}
{"time": "2021-02-16 12:43:31.388768", "score": "1.0", "loss": "0.0", "code": "boolean isStateful(){if(mHaveIsStateful){}for(;;){if(array[i].isStateful()){}}}", "n_tokens": 33, "n_pass": [458, 46, 46]}

Minimal simplified code:
boolean isStateful(){if(mHaveIsStateful){}for(;;){if(array[i].isStateful()){}}}

