
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/qpython-android__qpython/qpysl4a/src/main/java/org/qpython/qsl4a/codec/Base64Codec_encode.java
method_name = encode
method_body = public byte[] encode(byte[] pArray) { reset(); if (pArray == null || pArray.length == 0) { return pArray; } long len = getEncodeLength(pArray, lineLength, lineSeparator); byte[] buf = new byte[(int) len]; setInitialBuffer(buf, 0, buf.length); encode(pArray, 0, pArray.length); encode(pArray, 0, -1); if (buffer != buf) { readResults(buf, 0, buf.length); } if (isUrlSafe() && pos < buf.length) { byte[] smallerBuf = new byte[pos]; System.arraycopy(buf, 0, smallerBuf, 0, pos); buf = smallerBuf; } return buf; }
predict, score, loss = encode, 0.999970555305481, 4.184158387943171e-05

Trace of simplified code(s):
{"time": "2021-02-14 16:03:53.975647", "score": "0.9999", "loss": "0.0002", "code": "public byte[] encode(byte[] pArray) { reset(); if (pArray == null || pArray.length == 0) { return pArray; } long len = getEncodeLength(pArray, lineLength, lineSeparator); byte[] buf = new byte[(int) len]; setInitialBuffer(buf, 0, buf.length); encode(pArray, 0, pArray.length); encode(pArray, 0, -1); if (buffer != buf) { readResults(buf, 0, buf.length); } if (isUrlSafe() && pos < buf.length) { byte[] smallerBuf = new byte[pos]; System.arraycopy(buf, 0, smallerBuf, 0, pos); buf = smallerBuf; } return buf; }", "n_tokens": 234, "n_pass": [1, 1, 1]}
{"time": "2021-02-14 16:03:57.128852", "score": "0.9985", "loss": "0.0015", "code": "public byte[] encode(byte[] pArray) { reset(); if (pArray =0) { return pArray; } long len = getEncodeLength(pArray, lineLength, lineSeparator); byte[] buf = new byte[(int) len]; setInitialBuffer(buf, 0, buf.length); encode(pArray, 0, pArray.length); encode(pArray, 0, -1); if (buffer != buf) { readResults(buf, 0, buf.length); } if (isUrlSafe() && pos < buf.length) { byte[] smallerBuf = new byte[pos]; System.arraycopy(buf, 0, smallerBuf, 0, pos); buf = smallerBuf; } return buf; }", "n_tokens": 220, "n_pass": [46, 2, 2]}
{"time": "2021-02-14 16:03:59.836258", "score": "0.9999", "loss": "0.0002", "code": "public byte[] encode(byte[] pArray) { reset(); if (pArray =0) { return pArray; } long len = getEncodeLength(pArray, lineLength, lineSeparator); byte[] buf = new byte[(int) len]; setInitialBuffer(buf, 0,pArray.length); encode(pArray, 0, -1); if (buffer != buf) { readResults(buf, 0, buf.length); } if (isUrlSafe() && pos < buf.length) { byte[] smallerBuf = new byte[pos]; System.arraycopy(buf, 0, smallerBuf, 0, pos); buf = smallerBuf; } return buf; }", "n_tokens": 205, "n_pass": [51, 3, 3]}
{"time": "2021-02-14 16:04:02.532176", "score": "0.9999", "loss": "0.0001", "code": "public byte[] encode(byte[] pArray) { reset(); if (pArray =0) { return pArray; } long len = getEncodeLength(pArray, lineLength, lineSeparator); byte[] buf = new byte[(int) len]; setInitialBuffer(buf, 0,1); if (buffer != buf) { readResults(buf, 0, buf.length); } if (isUrlSafe() && pos < buf.length) { byte[] smallerBuf = new byte[pos]; System.arraycopy(buf, 0, smallerBuf, 0, pos); buf = smallerBuf; } return buf; }", "n_tokens": 190, "n_pass": [52, 4, 4]}
{"time": "2021-02-14 16:04:05.679046", "score": "0.9997", "loss": "0.0003", "code": "public byte[] encode(byte[] pArray) { reset(); if (pArray =0) { return pArray; } long len = getEncodeLength(pArray, lineLength, lineSeparator); byte[] buf = new byte[(int) len]; setInitialBuffer(buf, 0,1); if (buffer != buf) { readResults(buflength); } if (isUrlSafe() && pos < buf.length) { byte[] smallerBuf = new byte[pos]; System.arraycopy(buf, 0, smallerBuf, 0, pos); buf = smallerBuf; } return buf; }", "n_tokens": 183, "n_pass": [95, 5, 5]}
{"time": "2021-02-14 16:04:08.387566", "score": "0.9984", "loss": "0.0022", "code": "public byte[] encode(byte[] pArray) { reset(); if (pArray =0) { return pArray; } long len = getEncodeLength(pArray, lineLength, lineSeparator); byte[] buf = new byte[(int) len]; setInitialBuffer(buf, 0,1); if (buffer != buf) { readResults(buflength); } if (isUrlSafe() &length) { byte[] smallerBuf = new byte[pos]; System.arraycopy(buf, 0, smallerBuf, 0, pos); buf = smallerBuf; } return buf; }", "n_tokens": 175, "n_pass": [98, 6, 6]}
{"time": "2021-02-14 16:04:11.087215", "score": "0.9999", "loss": "0.0002", "code": "public byte[] encode(byte[] pArray) { reset(); if (pArray =0) { return pArray; } long len = getEncodeLength(pArray, lineLength, lineSeparator); byte[] buf = new byte[(int) len]; setInitialBuffer(buf, 0,1); if (buffer != buf) { readResults(buflength); } if (isUrlSafe() &length) { byte[] smallerBuf = new byte[pos]; System.arraycopy(buf, 0, smallerBuf, 0, pos);} return buf; }", "n_tokens": 167, "n_pass": [104, 7, 7]}
{"time": "2021-02-14 16:04:14.756012", "score": "0.9998", "loss": "0.0002", "code": "public byte[] encode(byte[] pArray) { reset(); if (pArray =0) { ; } long len = getEncodeLength(pArray, lineLength, lineSeparator); byte[] buf = new byte[(int) len]; setInitialBuffer(buf, 0,1); if (buffer != buf) { readResults(buflength); } if (isUrlSafe() &length) { byte[] smallerBuf = new byte[pos]; System.arraycopy(buf, 0, smallerBuf, 0, pos);} return buf; }", "n_tokens": 164, "n_pass": [187, 8, 8]}
{"time": "2021-02-14 16:04:17.470354", "score": "0.9996", "loss": "0.0005", "code": "public byte[] encode(byte[] pArray) { reset(); if (pArray =0) { ; }len = getEncodeLength(pArray, lineLength, lineSeparator); byte[] buf = new byte[(int) len]; setInitialBuffer(buf, 0,1); if (buffer != buf) { readResults(buflength); } if (isUrlSafe() &length) { byte[] smallerBuf = new byte[pos]; System.arraycopy(buf, 0, smallerBuf, 0, pos);} return buf; }", "n_tokens": 161, "n_pass": [189, 9, 9]}
{"time": "2021-02-14 16:04:20.160617", "score": "0.9997", "loss": "0.0004", "code": "public byte[] encode(byte[] pArray) { reset(); if (pArray =0) { ; } getEncodeLength(pArray, lineLength, lineSeparator); byte[] buf = new byte[(int) len]; setInitialBuffer(buf, 0,1); if (buffer != buf) { readResults(buflength); } if (isUrlSafe() &length) { byte[] smallerBuf = new byte[pos]; System.arraycopy(buf, 0, smallerBuf, 0, pos);} return buf; }", "n_tokens": 158, "n_pass": [190, 10, 10]}
{"time": "2021-02-14 16:04:22.850957", "score": "0.9984", "loss": "0.0037", "code": "public byte[] encode(byte[] pArray) { reset(); if (pArray =0) { ; } getEncodeLength(lineLength, lineSeparator); byte[] buf = new byte[(int) len]; setInitialBuffer(buf, 0,1); if (buffer != buf) { readResults(buflength); } if (isUrlSafe() &length) { byte[] smallerBuf = new byte[pos]; System.arraycopy(buf, 0, smallerBuf, 0, pos);} return buf; }", "n_tokens": 155, "n_pass": [192, 11, 11]}
{"time": "2021-02-14 16:04:25.533932", "score": "0.9993", "loss": "0.0011", "code": "public byte[] encode(byte[] pArray) { reset(); if (pArray =0) { ; } getEncodeLength(); byte[] buf = new byte[(int) len]; setInitialBuffer(buf, 0,1); if (buffer != buf) { readResults(buflength); } if (isUrlSafe() &length) { byte[] smallerBuf = new byte[pos]; System.arraycopy(buf, 0, smallerBuf, 0, pos);} return buf; }", "n_tokens": 151, "n_pass": [193, 12, 12]}
{"time": "2021-02-14 16:04:28.232549", "score": "0.9999", "loss": "0.0001", "code": "public byte[] encode(byte[] pArray) { reset(); if (pArray =0) { ; } getEncodeLength(); byte[] buf = new byte[(int) len]; setInitialBuffer(buf, 0,1); if (buffer != buf) { readResults; } if (isUrlSafe() &length) { byte[] smallerBuf = new byte[pos]; System.arraycopy(buf, 0, smallerBuf, 0, pos);} return buf; }", "n_tokens": 147, "n_pass": [206, 13, 13]}
{"time": "2021-02-14 16:04:30.930231", "score": "0.9994", "loss": "0.0008", "code": "public byte[] encode(byte[] pArray) { reset(); if (pArray =0) { ; } getEncodeLength(); byte[] buf = new byte[(int) len]; setInitialBuffer(buf, 0,1); if (buffer != buf) { readResults; } if (isUrlSafelength) { byte[] smallerBuf = new byte[pos]; System.arraycopy(buf, 0, smallerBuf, 0, pos);} return buf; }", "n_tokens": 143, "n_pass": [209, 14, 14]}
{"time": "2021-02-14 16:04:33.606198", "score": "1.0", "loss": "0.0001", "code": "public byte[] encode(byte[] pArray) { reset(); if (pArray =0) { ; } getEncodeLength(); byte[] buf = new byte[(int) len]; setInitialBuffer(buf, 0,1); if (buffer != buf) { readResults; } if (isUrlSafelength) { smallerBuf = new byte[pos]; System.arraycopy(buf, 0, smallerBuf, 0, pos);} return buf; }", "n_tokens": 139, "n_pass": [211, 15, 15]}
{"time": "2021-02-14 16:04:36.295084", "score": "0.9971", "loss": "0.0042", "code": "public byte[] encode(byte[] pArray) { reset(); if (pArray =0) { ; } getEncodeLength(); byte[] buf = new byte[(int) len]; setInitialBuffer(buf, 0,1); if (buffer != buf) { readResults; } if (isUrlSafelength) { new byte[pos]; System.arraycopy(buf, 0, smallerBuf, 0, pos);} return buf; }", "n_tokens": 135, "n_pass": [212, 16, 16]}
{"time": "2021-02-14 16:04:41.702400", "score": "0.9147", "loss": "0.1046", "code": "public byte[] encode(byte[] pArray) { reset(); if (pArray =0) { ; } getEncodeLength(); byte[] buf = new byte[(int) len]; setInitialBuffer(buf, 0,1); if (buffer != buf) { readResults; } if (isUrlSafelength) { new byte[pos]; System(buf, 0, smallerBuf, 0, pos);} return buf; }", "n_tokens": 133, "n_pass": [329, 17, 17]}
{"time": "2021-02-14 16:04:47.045735", "score": "0.9965", "loss": "0.0039", "code": "public byte[] encode(byte[] pArray) { reset(); if (pArray =0) { ; } getEncodeLength(); byte[] buf = new byte[(int) len]; setInitialBuffer(buf, 0,1); if (buffer != buf) { readResults; } if (isUrlSafelength) { new byte[pos]; System(buf,  smallerBuf, 0, pos);} return buf; }", "n_tokens": 131, "n_pass": [332, 19, 18]}
{"time": "2021-02-14 16:04:49.758377", "score": "0.881", "loss": "0.1314", "code": "public byte[] encode(byte[] pArray) { reset(); if (pArray =0) { ; } getEncodeLength(); byte[] buf = new byte[(int) len]; setInitialBuffer(buf, 0,1); if (buffer != buf) { readResults; } if (isUrlSafelength) { new byte[pos]; System(buf,  smallerBuf0, pos);} return buf; }", "n_tokens": 129, "n_pass": [334, 20, 19]}
{"time": "2021-02-14 16:04:52.439488", "score": "0.9994", "loss": "0.0007", "code": "public byte[] encode(byte[] pArray) { reset(); if (pArray =0) { ; } getEncodeLength(); byte[] buf = new byte[(int) len]; setInitialBuffer(buf, 0,1); if (buffer != buf) { readResults; } if (isUrlSafelength) { new byte[pos]; System(buf,  smallerBuf0, pos);} buf; }", "n_tokens": 127, "n_pass": [339, 21, 20]}
{"time": "2021-02-14 16:04:55.118146", "score": "0.9991", "loss": "0.001", "code": "public byte[] encode(byte[] pArray) { reset(); if (pArray =0) { ; } getEncodeLength(); byte[] buf = new byte[(int) len]; setInitialBuffer(buf, 0,1); if (buffer != buf) { readResults; } if (isUrlSafelength) { new byte[pos]; System(buf,  smallerBuf0, pos);}  }", "n_tokens": 125, "n_pass": [340, 22, 21]}
{"time": "2021-02-14 16:04:57.785397", "score": "0.9997", "loss": "0.0004", "code": " byte[] encode(byte[] pArray) { reset(); if (pArray =0) { ; } getEncodeLength(); byte[] buf = new byte[(int) len]; setInitialBuffer(buf, 0,1); if (buffer != buf) { readResults; } if (isUrlSafelength) { new byte[pos]; System(buf,  smallerBuf0, pos);}  }", "n_tokens": 124, "n_pass": [342, 23, 22]}
{"time": "2021-02-14 16:05:00.457480", "score": "0.9974", "loss": "0.0029", "code": "byte[] encode(byte[] pArray) { reset(); if (pArray =0) { ; } getEncodeLength(); byte[] buf = new byte[(int) len]; setInitialBuffer(buf, 0,1); if (buffer != buf) { readResults; } if (isUrlSafelength) { new byte[pos]; System(buf,  smallerBuf0, pos);}  }", "n_tokens": 123, "n_pass": [343, 24, 23]}
{"time": "2021-02-14 16:05:03.136715", "score": "0.9984", "loss": "0.0019", "code": "byte[]encode(byte[] pArray) { reset(); if (pArray =0) { ; } getEncodeLength(); byte[] buf = new byte[(int) len]; setInitialBuffer(buf, 0,1); if (buffer != buf) { readResults; } if (isUrlSafelength) { new byte[pos]; System(buf,  smallerBuf0, pos);}  }", "n_tokens": 122, "n_pass": [347, 25, 24]}
{"time": "2021-02-14 16:05:05.813591", "score": "0.9983", "loss": "0.0019", "code": "byte[]encode(byte[]pArray) { reset(); if (pArray =0) { ; } getEncodeLength(); byte[] buf = new byte[(int) len]; setInitialBuffer(buf, 0,1); if (buffer != buf) { readResults; } if (isUrlSafelength) { new byte[pos]; System(buf,  smallerBuf0, pos);}  }", "n_tokens": 121, "n_pass": [353, 26, 25]}
{"time": "2021-02-14 16:05:08.489822", "score": "0.9993", "loss": "0.0007", "code": "byte[]encode(byte[]pArray) { reset(); if (pArray ) { ; } getEncodeLength(); byte[] buf = new byte[(int) len]; setInitialBuffer(buf, 0,1); if (buffer != buf) { readResults; } if (isUrlSafelength) { new byte[pos]; System(buf,  smallerBuf0, pos);}  }", "n_tokens": 119, "n_pass": [362, 27, 26]}
{"time": "2021-02-14 16:05:11.195166", "score": "0.9997", "loss": "0.0003", "code": "byte[]encode(byte[]pArray) { reset(); if (pArray ) { } getEncodeLength(); byte[] buf = new byte[(int) len]; setInitialBuffer(buf, 0,1); if (buffer != buf) { readResults; } if (isUrlSafelength) { new byte[pos]; System(buf,  smallerBuf0, pos);}  }", "n_tokens": 117, "n_pass": [365, 28, 27]}
{"time": "2021-02-14 16:05:13.868191", "score": "0.9987", "loss": "0.0014", "code": "byte[]encode(byte[]pArray) { reset(); if (pArray ) { } getEncodeLength(); byte buf = new byte[(int) len]; setInitialBuffer(buf, 0,1); if (buffer != buf) { readResults; } if (isUrlSafelength) { new byte[pos]; System(buf,  smallerBuf0, pos);}  }", "n_tokens": 115, "n_pass": [370, 29, 28]}
{"time": "2021-02-14 16:05:16.544583", "score": "0.9991", "loss": "0.001", "code": "byte[]encode(byte[]pArray) { reset(); if (pArray ) { } getEncodeLength(); byte buf = new byte[(int) len]; setInitialBuffer(buf0,1); if (buffer != buf) { readResults; } if (isUrlSafelength) { new byte[pos]; System(buf,  smallerBuf0, pos);}  }", "n_tokens": 113, "n_pass": [381, 30, 29]}
{"time": "2021-02-14 16:05:19.213262", "score": "0.9993", "loss": "0.0007", "code": "byte[]encode(byte[]pArray) { reset(); if (pArray ) { } getEncodeLength(); byte buf = new byte[(int) len]; setInitialBuffer(buf1); if (buffer != buf) { readResults; } if (isUrlSafelength) { new byte[pos]; System(buf,  smallerBuf0, pos);}  }", "n_tokens": 111, "n_pass": [382, 31, 30]}
{"time": "2021-02-14 16:05:21.880579", "score": "0.9993", "loss": "0.0008", "code": "byte[]encode(byte[]pArray) { reset(); if (pArray ) { } getEncodeLength(); byte buf = new byte[(int) len]; setInitialBuffer(buf1); if (buffer= buf) { readResults; } if (isUrlSafelength) { new byte[pos]; System(buf,  smallerBuf0, pos);}  }", "n_tokens": 109, "n_pass": [387, 32, 31]}
{"time": "2021-02-14 16:05:24.544884", "score": "0.9995", "loss": "0.0006", "code": "byte[]encode(byte[]pArray) { reset(); if (pArray ) { } getEncodeLength(); byte buf = new byte[(int) len]; setInitialBuffer(buf1); if (bufferbuf) { readResults; } if (isUrlSafelength) { new byte[pos]; System(buf,  smallerBuf0, pos);}  }", "n_tokens": 107, "n_pass": [388, 33, 32]}
{"time": "2021-02-14 16:05:27.208549", "score": "0.9996", "loss": "0.0005", "code": "byte[]encode(byte[]pArray) { reset(); if (pArray ) { } getEncodeLength(); byte buf = new byte[(int) len]; setInitialBuffer(buf1); if (bufferbuf) {; } if (isUrlSafelength) { new byte[pos]; System(buf,  smallerBuf0, pos);}  }", "n_tokens": 105, "n_pass": [391, 34, 33]}
{"time": "2021-02-14 16:05:29.881281", "score": "0.9996", "loss": "0.0005", "code": "byte[]encode(byte[]pArray) { reset(); if (pArray ) { } getEncodeLength(); byte buf = new byte[(int) len]; setInitialBuffer(buf1); if (bufferbuf) {} if (isUrlSafelength) { new byte[pos]; System(buf,  smallerBuf0, pos);}  }", "n_tokens": 103, "n_pass": [392, 35, 34]}
{"time": "2021-02-14 16:05:35.221962", "score": "0.9994", "loss": "0.0006", "code": "byte[]encode(byte[]pArray) { reset(); if (pArray ) { } getEncodeLength(); buf = new byte[(int) len]; setInitialBuffer(buf1); if (bufferbuf) {} if (isUrlSafelength) { new byte[pos]; System(buf,  smallerBuf0, pos);}  }", "n_tokens": 101, "n_pass": [432, 37, 35]}
{"time": "2021-02-14 16:05:37.897806", "score": "0.9999", "loss": "0.0001", "code": "byte[]encode(byte[]pArray) { reset(); if (pArray ) { } getEncodeLength(); buf = new byte[(int) len];(buf1); if (bufferbuf) {} if (isUrlSafelength) { new byte[pos]; System(buf,  smallerBuf0, pos);}  }", "n_tokens": 99, "n_pass": [441, 38, 36]}
{"time": "2021-02-14 16:05:55.712557", "score": "0.9999", "loss": "0.0001", "code": "byte[]encode(byte[]pArray) { reset(); if (pArray ) { } getEncodeLength(); buf = new byte[(int) len];(buf1);if (bufferbuf) {} if (isUrlSafelength) { new byte[pos]; System(buf,  smallerBuf0, pos);}  }", "n_tokens": 98, "n_pass": [587, 40, 37]}
{"time": "2021-02-14 16:05:58.369886", "score": "0.9999", "loss": "0.0001", "code": "byte[]encode(byte[]pArray) { reset(); if (pArray ) { } getEncodeLength(); buf = new byte[(int) len];(buf1);if(bufferbuf) {} if (isUrlSafelength) { new byte[pos]; System(buf,  smallerBuf0, pos);}  }", "n_tokens": 97, "n_pass": [589, 41, 38]}
{"time": "2021-02-14 16:06:01.050356", "score": "0.9999", "loss": "0.0001", "code": "byte[]encode(byte[]pArray) { reset(); if (pArray ) { } getEncodeLength(); buf = new byte[(int) len];(buf1);if(buf) {} if (isUrlSafelength) { new byte[pos]; System(buf,  smallerBuf0, pos);}  }", "n_tokens": 96, "n_pass": [591, 42, 39]}
{"time": "2021-02-14 16:06:03.726488", "score": "0.9999", "loss": "0.0001", "code": "byte[]encode(byte[]pArray) { reset(); if (pArray ) { } getEncodeLength(); buf = new byte[(int) len];(buf1);if(buf){} if (isUrlSafelength) { new byte[pos]; System(buf,  smallerBuf0, pos);}  }", "n_tokens": 95, "n_pass": [594, 43, 40]}
{"time": "2021-02-14 16:06:06.381468", "score": "0.9999", "loss": "0.0001", "code": "byte[]encode(byte[]pArray) { reset(); if (pArray ) { } getEncodeLength(); buf = new byte[(int) len];(buf1);if(buf){}if (isUrlSafelength) { new byte[pos]; System(buf,  smallerBuf0, pos);}  }", "n_tokens": 94, "n_pass": [597, 44, 41]}
{"time": "2021-02-14 16:06:09.056686", "score": "0.9999", "loss": "0.0001", "code": "byte[]encode(byte[]pArray) { reset(); if (pArray ) { } getEncodeLength(); buf = new byte[(int) len];(buf1);if(buf){}if(isUrlSafelength) { new byte[pos]; System(buf,  smallerBuf0, pos);}  }", "n_tokens": 93, "n_pass": [599, 45, 42]}
{"time": "2021-02-14 16:06:11.706633", "score": "0.9999", "loss": "0.0001", "code": "byte[]encode(byte[]pArray) { reset(); if (pArray ) { } getEncodeLength(); buf = new byte[(int) len];(buf1);if(buf){}if(length) { new byte[pos]; System(buf,  smallerBuf0, pos);}  }", "n_tokens": 92, "n_pass": [601, 46, 43]}
{"time": "2021-02-14 16:06:14.363809", "score": "0.9999", "loss": "0.0001", "code": "byte[]encode(byte[]pArray) { reset(); if (pArray ) { } getEncodeLength(); buf = new byte[(int) len];(buf1);if(buf){}if(length){ new byte[pos]; System(buf,  smallerBuf0, pos);}  }", "n_tokens": 91, "n_pass": [604, 47, 44]}
{"time": "2021-02-14 16:06:17.023678", "score": "0.9999", "loss": "0.0001", "code": "byte[]encode(byte[]pArray) { reset(); if (pArray ) { } getEncodeLength(); buf = new byte[(int) len];(buf1);if(buf){}if(length){new byte[pos]; System(buf,  smallerBuf0, pos);}  }", "n_tokens": 90, "n_pass": [606, 48, 45]}
{"time": "2021-02-14 16:06:19.686070", "score": "0.9999", "loss": "0.0001", "code": "byte[]encode(byte[]pArray) { reset(); if (pArray ) { } getEncodeLength(); buf = new byte[(int) len];(buf1);if(buf){}if(length){newbyte[pos]; System(buf,  smallerBuf0, pos);}  }", "n_tokens": 89, "n_pass": [608, 49, 46]}
{"time": "2021-02-14 16:06:22.355906", "score": "0.9999", "loss": "0.0001", "code": "byte[]encode(byte[]pArray) { reset(); if (pArray ) { } getEncodeLength(); buf = new byte[(int) len];(buf1);if(buf){}if(length){newbyte[pos];System(buf,  smallerBuf0, pos);}  }", "n_tokens": 88, "n_pass": [614, 50, 47]}
{"time": "2021-02-14 16:06:25.032903", "score": "0.9999", "loss": "0.0001", "code": "byte[]encode(byte[]pArray) { reset(); if (pArray ) { } getEncodeLength(); buf = new byte[(int) len];(buf1);if(buf){}if(length){newbyte[pos];System(buf, smallerBuf0, pos);}  }", "n_tokens": 87, "n_pass": [619, 51, 48]}
{"time": "2021-02-14 16:06:27.678093", "score": "0.9999", "loss": "0.0001", "code": "byte[]encode(byte[]pArray) { reset(); if (pArray ) { } getEncodeLength(); buf = new byte[(int) len];(buf1);if(buf){}if(length){newbyte[pos];System(buf,smallerBuf0, pos);}  }", "n_tokens": 86, "n_pass": [620, 52, 49]}
{"time": "2021-02-14 16:06:33.016908", "score": "0.9999", "loss": "0.0001", "code": "byte[]encode(byte[]pArray) { reset(); if (pArray ) { } getEncodeLength(); buf = new byte[(int) len];(buf1);if(buf){}if(length){newbyte[pos];System(buf,smallerBuf, pos);}  }", "n_tokens": 85, "n_pass": [622, 54, 50]}
{"time": "2021-02-14 16:06:35.666611", "score": "0.9999", "loss": "0.0001", "code": "byte[]encode(byte[]pArray) { reset(); if (pArray ) { } getEncodeLength(); buf = new byte[(int) len];(buf1);if(buf){}if(length){newbyte[pos];System(buf,smallerBuf,pos);}  }", "n_tokens": 84, "n_pass": [624, 55, 51]}
{"time": "2021-02-14 16:06:38.325829", "score": "0.9999", "loss": "0.0001", "code": "byte[]encode(byte[]pArray) { reset(); if (pArray ) { } getEncodeLength(); buf = new byte[(int) len];(buf1);if(buf){}if(length){newbyte[pos];System(buf,smallerBuf,pos);} }", "n_tokens": 83, "n_pass": [629, 56, 52]}
{"time": "2021-02-14 16:06:40.984761", "score": "0.9999", "loss": "0.0001", "code": "byte[]encode(byte[]pArray) { reset(); if (pArray ) { } getEncodeLength(); buf = new byte[(int) len];(buf1);if(buf){}if(length){newbyte[pos];System(buf,smallerBuf,pos);}}", "n_tokens": 82, "n_pass": [630, 57, 53]}
{"time": "2021-02-14 16:06:43.658548", "score": "0.9999", "loss": "0.0001", "code": "byte[]encode(byte[]pArray){ reset(); if (pArray ) { } getEncodeLength(); buf = new byte[(int) len];(buf1);if(buf){}if(length){newbyte[pos];System(buf,smallerBuf,pos);}}", "n_tokens": 81, "n_pass": [642, 58, 54]}
{"time": "2021-02-14 16:06:46.319999", "score": "0.9999", "loss": "0.0001", "code": "byte[]encode(byte[]pArray){reset(); if (pArray ) { } getEncodeLength(); buf = new byte[(int) len];(buf1);if(buf){}if(length){newbyte[pos];System(buf,smallerBuf,pos);}}", "n_tokens": 80, "n_pass": [644, 59, 55]}
{"time": "2021-02-14 16:06:49.008573", "score": "0.9999", "loss": "0.0001", "code": "byte[]encode(byte[]pArray){reset();if (pArray ) { } getEncodeLength(); buf = new byte[(int) len];(buf1);if(buf){}if(length){newbyte[pos];System(buf,smallerBuf,pos);}}", "n_tokens": 79, "n_pass": [649, 60, 56]}
{"time": "2021-02-14 16:06:51.699401", "score": "0.9999", "loss": "0.0001", "code": "byte[]encode(byte[]pArray){reset();if(pArray ) { } getEncodeLength(); buf = new byte[(int) len];(buf1);if(buf){}if(length){newbyte[pos];System(buf,smallerBuf,pos);}}", "n_tokens": 78, "n_pass": [651, 61, 57]}
{"time": "2021-02-14 16:06:54.375954", "score": "0.9999", "loss": "0.0001", "code": "byte[]encode(byte[]pArray){reset();if(pArray) { } getEncodeLength(); buf = new byte[(int) len];(buf1);if(buf){}if(length){newbyte[pos];System(buf,smallerBuf,pos);}}", "n_tokens": 77, "n_pass": [654, 62, 58]}
{"time": "2021-02-14 16:06:57.037514", "score": "0.9999", "loss": "0.0001", "code": "byte[]encode(byte[]pArray){reset();if(pArray){ } getEncodeLength(); buf = new byte[(int) len];(buf1);if(buf){}if(length){newbyte[pos];System(buf,smallerBuf,pos);}}", "n_tokens": 76, "n_pass": [656, 63, 59]}
{"time": "2021-02-14 16:06:59.696714", "score": "0.9999", "loss": "0.0001", "code": "byte[]encode(byte[]pArray){reset();if(pArray){} getEncodeLength(); buf = new byte[(int) len];(buf1);if(buf){}if(length){newbyte[pos];System(buf,smallerBuf,pos);}}", "n_tokens": 75, "n_pass": [658, 64, 60]}
{"time": "2021-02-14 16:07:02.354708", "score": "0.9999", "loss": "0.0001", "code": "byte[]encode(byte[]pArray){reset();if(pArray){}getEncodeLength(); buf = new byte[(int) len];(buf1);if(buf){}if(length){newbyte[pos];System(buf,smallerBuf,pos);}}", "n_tokens": 74, "n_pass": [660, 65, 61]}
{"time": "2021-02-14 16:07:04.986248", "score": "0.9999", "loss": "0.0001", "code": "byte[]encode(byte[]pArray){reset();if(pArray){}getEncodeLength();buf = new byte[(int) len];(buf1);if(buf){}if(length){newbyte[pos];System(buf,smallerBuf,pos);}}", "n_tokens": 73, "n_pass": [665, 66, 62]}
{"time": "2021-02-14 16:07:07.667628", "score": "0.9999", "loss": "0.0001", "code": "byte[]encode(byte[]pArray){reset();if(pArray){}getEncodeLength();buf= new byte[(int) len];(buf1);if(buf){}if(length){newbyte[pos];System(buf,smallerBuf,pos);}}", "n_tokens": 72, "n_pass": [667, 67, 63]}
{"time": "2021-02-14 16:07:10.318028", "score": "0.9999", "loss": "0.0001", "code": "byte[]encode(byte[]pArray){reset();if(pArray){}getEncodeLength();buf=new byte[(int) len];(buf1);if(buf){}if(length){newbyte[pos];System(buf,smallerBuf,pos);}}", "n_tokens": 71, "n_pass": [669, 68, 64]}
{"time": "2021-02-14 16:07:12.990571", "score": "0.9996", "loss": "0.0004", "code": "byte[]encode(byte[]pArray){reset();if(pArray){}getEncodeLength();buf=newbyte[(int) len];(buf1);if(buf){}if(length){newbyte[pos];System(buf,smallerBuf,pos);}}", "n_tokens": 70, "n_pass": [671, 69, 65]}
{"time": "2021-02-14 16:07:15.647359", "score": "0.9996", "loss": "0.0004", "code": "byte[]encode(byte[]pArray){reset();if(pArray){}getEncodeLength();buf=newbyte[(int)len];(buf1);if(buf){}if(length){newbyte[pos];System(buf,smallerBuf,pos);}}", "n_tokens": 69, "n_pass": [677, 70, 66]}
{"time": "2021-02-14 16:07:18.316180", "score": "0.9996", "loss": "0.0004", "code": "byte[]encode(byte[]pArray){reset();if(pArray){}getEncodeLength();buf=newbyte[(int)len];(1);if(buf){}if(length){newbyte[pos];System(buf,smallerBuf,pos);}}", "n_tokens": 68, "n_pass": [682, 71, 67]}
{"time": "2021-02-14 16:07:26.344665", "score": "1.0", "loss": "0.0001", "code": "byte[]encode(byte[]pArray){reset();if(pArray){}getEncodeLength();bufnewbyte[(int)len];(1);if(buf){}if(length){newbyte[pos];System(buf,smallerBuf,pos);}}", "n_tokens": 67, "n_pass": [740, 74, 68]}
{"time": "2021-02-14 16:07:28.996495", "score": "0.9999", "loss": "0.0001", "code": "byte[]encode(byte[]pArray){reset();if(pArray){}getEncodeLength();bufbyte[(int)len];(1);if(buf){}if(length){newbyte[pos];System(buf,smallerBuf,pos);}}", "n_tokens": 66, "n_pass": [741, 75, 69]}
{"time": "2021-02-14 16:07:31.647652", "score": "0.9999", "loss": "0.0001", "code": "byte[]encode(byte[]pArray){reset();if(pArray){}getEncodeLength();buf[(int)len];(1);if(buf){}if(length){newbyte[pos];System(buf,smallerBuf,pos);}}", "n_tokens": 65, "n_pass": [742, 76, 70]}

Minimal simplified code:
byte[]encode(byte[]pArray){reset();if(pArray){}getEncodeLength();buf[(int)len];(1);if(buf){}if(length){newbyte[pos];System(buf,smallerBuf,pos);}}

