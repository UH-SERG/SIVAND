
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/vladmihalcea__high-performance-java-persistence/core/src/test/java/com/vladmihalcea/book/hpjp/hibernate/association/UnidirectionalOneToManyJoinColumnSetTest_equals.java
method_name = equals
method_body = @Override public boolean equals(Object o) { if (this == o) return true; if (o == null || getClass() != o.getClass()) return false; PostComment comment = (PostComment) o; return Objects.equals(slug, comment.slug); }
predict, score, loss = equals, 0.9998255372047424, 0.0002232540718978271

Trace of simplified code(s):
{"time": "2021-02-14 18:45:44.715888", "score": "0.9998", "loss": "0.0002", "code": "@Override public boolean equals(Object o) { if (this == o) return true; if (o == null || getClass() != o.getClass()) return false; PostComment comment = (PostComment) o; return Objects.equals(slug, comment.slug); }", "n_tokens": 93, "n_pass": [1, 1, 1]}
{"time": "2021-02-14 18:45:47.388353", "score": "0.9999", "loss": "0.0001", "code": "@Override public boolean equals(Object o) { if (this == o) return true; if (o == null || getClass() != o.getClass()) return false; PostComment comment =equals(slug, comment.slug); }", "n_tokens": 81, "n_pass": [26, 2, 2]}
{"time": "2021-02-14 18:45:50.050477", "score": "0.9999", "loss": "0.0001", "code": "boolean equals(Object o) { if (this == o) return true; if (o == null || getClass() != o.getClass()) return false; PostComment comment =equals(slug, comment.slug); }", "n_tokens": 76, "n_pass": [49, 3, 3]}
{"time": "2021-02-14 18:45:52.712606", "score": "0.9981", "loss": "0.0028", "code": "boolean equals(Object o) { if (this == o) return true; if (o ==getClass() != o.getClass()) return false; PostComment comment =equals(slug, comment.slug); }", "n_tokens": 70, "n_pass": [56, 4, 4]}
{"time": "2021-02-14 18:45:55.365101", "score": "0.9969", "loss": "0.0048", "code": "boolean equals(Object o) { if (this == o) return true; if (o == o.getClass()) return false; PostComment comment =equals(slug, comment.slug); }", "n_tokens": 64, "n_pass": [57, 5, 5]}
{"time": "2021-02-14 18:45:58.021713", "score": "0.3379", "loss": "1.2999", "code": "boolean equals(Object o) { if (this == o) return true; if (o == o.getClass()) return false;equals(slug, comment.slug); }", "n_tokens": 58, "n_pass": [60, 6, 6]}
{"time": "2021-02-14 18:46:00.675063", "score": "0.949", "loss": "0.1116", "code": "boolean equals(Object o) { if (this == o) return true; if (o == o.getClass()) return false;equals(slug.slug); }", "n_tokens": 55, "n_pass": [92, 7, 7]}
{"time": "2021-02-14 18:46:03.727260", "score": "0.5987", "loss": "0.85", "code": "boolean equals() { if (this == o) return true; if (o == o.getClass()) return false;equals(slug.slug); }", "n_tokens": 52, "n_pass": [97, 8, 8]}
{"time": "2021-02-14 18:46:09.054871", "score": "0.5893", "loss": "0.8625", "code": "boolean equals() { if (this == o) return true; if (o ==getClass()) return false;equals(slug.slug); }", "n_tokens": 49, "n_pass": [107, 10, 9]}
{"time": "2021-02-14 18:46:11.678110", "score": "0.5582", "loss": "1.715", "code": "boolean equals() { if (this == o) return true; if (o ==getClass()) returnequals(slug.slug); }", "n_tokens": 46, "n_pass": [110, 11, 10]}
{"time": "2021-02-14 18:46:17.383000", "score": "0.356", "loss": "2.3175", "code": "boolean equals() { if (this == o) return true; if (ogetClass()) returnequals(slug.slug); }", "n_tokens": 43, "n_pass": [124, 13, 11]}
{"time": "2021-02-14 18:46:20.028850", "score": "0.4304", "loss": "1.8958", "code": "boolean equals() { if (this == o) return true; if (o) returnequals(slug.slug); }", "n_tokens": 40, "n_pass": [125, 14, 12]}
{"time": "2021-02-14 18:46:34.833583", "score": "0.4304", "loss": "1.8958", "code": "boolean equals(){ if (this == o) return true; if (o) returnequals(slug.slug); }", "n_tokens": 39, "n_pass": [181, 18, 13]}
{"time": "2021-02-14 18:46:37.469010", "score": "0.4304", "loss": "1.8958", "code": "boolean equals(){if (this == o) return true; if (o) returnequals(slug.slug); }", "n_tokens": 38, "n_pass": [183, 19, 14]}
{"time": "2021-02-14 18:46:40.093558", "score": "0.4304", "loss": "1.8958", "code": "boolean equals(){if(this == o) return true; if (o) returnequals(slug.slug); }", "n_tokens": 37, "n_pass": [185, 20, 15]}
{"time": "2021-02-14 18:46:42.727717", "score": "0.4304", "loss": "1.8958", "code": "boolean equals(){if(this== o) return true; if (o) returnequals(slug.slug); }", "n_tokens": 36, "n_pass": [188, 21, 16]}
{"time": "2021-02-14 18:46:46.167047", "score": "0.4304", "loss": "1.8958", "code": "boolean equals(){if(this==o) return true; if (o) returnequals(slug.slug); }", "n_tokens": 35, "n_pass": [191, 22, 17]}
{"time": "2021-02-14 18:47:06.956793", "score": "0.4304", "loss": "1.8958", "code": "boolean equals(){if(this==o) return true;if (o) returnequals(slug.slug); }", "n_tokens": 34, "n_pass": [241, 28, 18]}
{"time": "2021-02-14 18:47:09.983410", "score": "0.4304", "loss": "1.8958", "code": "boolean equals(){if(this==o) return true;if(o) returnequals(slug.slug); }", "n_tokens": 33, "n_pass": [243, 29, 19]}
{"time": "2021-02-14 18:47:12.606963", "score": "0.4304", "loss": "1.8958", "code": "boolean equals(){if(this==o) return true;if(o)returnequals(slug.slug); }", "n_tokens": 32, "n_pass": [247, 30, 20]}
{"time": "2021-02-14 18:47:15.242741", "score": "0.634", "loss": "0.9248", "code": "boolean equals(){if(this==o) return true;if(o)equals(slug.slug); }", "n_tokens": 31, "n_pass": [248, 31, 21]}
{"time": "2021-02-14 18:47:23.137601", "score": "0.634", "loss": "0.9248", "code": "boolean equals(){if(this==o) return true;if(o)equals(slug.slug);}", "n_tokens": 30, "n_pass": [256, 34, 22]}
{"time": "2021-02-14 18:47:27.408145", "score": "0.634", "loss": "0.9248", "code": "boolean equals(){if(this==o)return true;if(o)equals(slug.slug);}", "n_tokens": 29, "n_pass": [271, 35, 23]}

Minimal simplified code:
boolean equals(){if(this==o)return true;if(o)equals(slug.slug);}

