
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/bcgit__bc-java/prov/src/main/jdk1.3/org/bouncycastle/jce/cert/CertStoreException_printStackTrace.java
method_name = printStackTrace
method_body = public void printStackTrace(PrintWriter pw) { if (cause != null) { cause.printStackTrace(pw); } super.printStackTrace(pw); if (cause != null) { cause.printStackTrace(pw); } }
predict, score, loss = printStackTrace, 0.9647925496101379, 0.05055784806609154

Trace of simplified code(s):
{"time": "2021-02-16 12:12:47.724959", "score": "0.9648", "loss": "0.0506", "code": "public void printStackTrace(PrintWriter pw) { if (cause != null) { cause.printStackTrace(pw); } super.printStackTrace(pw); if (cause != null) { cause.printStackTrace(pw); } }", "n_tokens": 68, "n_pass": [1, 1, 1]}
{"time": "2021-02-16 12:12:50.685297", "score": "0.9782", "loss": "0.0305", "code": "public void printStackTrace(PrintWriter pw) { if ( null) { cause.printStackTrace(pw); } super.printStackTrace(pw); if (cause != null) { cause.printStackTrace(pw); } }", "n_tokens": 64, "n_pass": [48, 2, 2]}
{"time": "2021-02-16 12:12:53.254019", "score": "0.9693", "loss": "0.0434", "code": "public void printStackTrace(PrintWriter pw) { if ( null) { cause.printStackTrace(pw); } super.printStackTrace(pw); if (cause) { cause.printStackTrace(pw); } }", "n_tokens": 59, "n_pass": [55, 3, 3]}
{"time": "2021-02-16 12:12:55.782008", "score": "0.9774", "loss": "0.0319", "code": "public void printStackTrace(PrintWriter pw) { if ( null) { cause.printStackTrace(pw); } super.printStackTrace(pw); if (cause) { cause; } }", "n_tokens": 54, "n_pass": [57, 4, 4]}
{"time": "2021-02-16 12:12:59.425819", "score": "0.9819", "loss": "0.0253", "code": "public void printStackTrace(PrintWriter pw) { if ( null) { cause.printStackTrace(pw); } super.printStackTrace(pw); if (cause) { } }", "n_tokens": 51, "n_pass": [97, 5, 5]}
{"time": "2021-02-16 12:13:01.953089", "score": "0.9819", "loss": "0.0253", "code": "void printStackTrace(PrintWriter pw) { if ( null) { cause.printStackTrace(pw); } super.printStackTrace(pw); if (cause) { } }", "n_tokens": 49, "n_pass": [99, 6, 6]}
{"time": "2021-02-16 12:13:04.847766", "score": "0.9959", "loss": "0.0051", "code": "void printStackTrace(PrintWriter pw) { if ( null) { printStackTrace(pw); } super.printStackTrace(pw); if (cause) { } }", "n_tokens": 47, "n_pass": [110, 7, 7]}
{"time": "2021-02-16 12:13:07.376146", "score": "0.9788", "loss": "0.028", "code": "void printStackTrace(PrintWriter pw) { if ( null) { printStackTrace(pw); } printStackTrace(pw); if (cause) { } }", "n_tokens": 45, "n_pass": [115, 8, 8]}
{"time": "2021-02-16 12:13:15.927894", "score": "0.76", "loss": "0.3594", "code": "void printStackTrace(PrintWriter pw) { if ( null) { printStackTrace(pw); } (pw); if (cause) { } }", "n_tokens": 44, "n_pass": [182, 9, 9]}
{"time": "2021-02-16 12:13:18.446420", "score": "0.76", "loss": "0.3594", "code": "void printStackTrace(PrintWriter pw) { if ( null) { printStackTrace(pw); } (pw);if (cause) { } }", "n_tokens": 43, "n_pass": [186, 10, 10]}
{"time": "2021-02-16 12:13:20.962638", "score": "0.76", "loss": "0.3594", "code": "void printStackTrace(PrintWriter pw) { if ( null) { printStackTrace(pw); } (pw);if(cause) { } }", "n_tokens": 42, "n_pass": [188, 11, 11]}
{"time": "2021-02-16 12:13:23.487083", "score": "0.76", "loss": "0.3594", "code": "void printStackTrace(PrintWriter pw) { if ( null) { printStackTrace(pw); } (pw);if(cause){ } }", "n_tokens": 41, "n_pass": [192, 12, 12]}
{"time": "2021-02-16 12:13:26.034560", "score": "0.76", "loss": "0.3594", "code": "void printStackTrace(PrintWriter pw) { if ( null) { printStackTrace(pw); } (pw);if(cause){} }", "n_tokens": 40, "n_pass": [194, 13, 13]}
{"time": "2021-02-16 12:13:29.329938", "score": "0.76", "loss": "0.3594", "code": "void printStackTrace(PrintWriter pw){ if ( null) { printStackTrace(pw); } (pw);if(cause){} }", "n_tokens": 39, "n_pass": [205, 14, 14]}
{"time": "2021-02-16 12:13:31.853334", "score": "0.76", "loss": "0.3594", "code": "void printStackTrace(PrintWriter pw){if ( null) { printStackTrace(pw); } (pw);if(cause){} }", "n_tokens": 38, "n_pass": [207, 15, 15]}
{"time": "2021-02-16 12:13:34.373503", "score": "0.76", "loss": "0.3594", "code": "void printStackTrace(PrintWriter pw){if( null) { printStackTrace(pw); } (pw);if(cause){} }", "n_tokens": 37, "n_pass": [209, 16, 16]}
{"time": "2021-02-16 12:13:36.888957", "score": "0.76", "loss": "0.3594", "code": "void printStackTrace(PrintWriter pw){if(null) { printStackTrace(pw); } (pw);if(cause){} }", "n_tokens": 36, "n_pass": [211, 17, 17]}
{"time": "2021-02-16 12:13:39.410689", "score": "0.76", "loss": "0.3594", "code": "void printStackTrace(PrintWriter pw){if(null){ printStackTrace(pw); } (pw);if(cause){} }", "n_tokens": 35, "n_pass": [214, 18, 18]}
{"time": "2021-02-16 12:13:41.960395", "score": "0.76", "loss": "0.3594", "code": "void printStackTrace(PrintWriter pw){if(null){printStackTrace(pw); } (pw);if(cause){} }", "n_tokens": 34, "n_pass": [216, 19, 19]}
{"time": "2021-02-16 12:13:47.004507", "score": "0.935", "loss": "0.1045", "code": "void printStackTrace(PrintWriter pw){if(null){printStackTrace(); } (pw);if(cause){} }", "n_tokens": 33, "n_pass": [219, 21, 20]}
{"time": "2021-02-16 12:13:49.519239", "score": "0.935", "loss": "0.1045", "code": "void printStackTrace(PrintWriter pw){if(null){printStackTrace();} (pw);if(cause){} }", "n_tokens": 32, "n_pass": [222, 22, 21]}
{"time": "2021-02-16 12:13:52.042839", "score": "0.935", "loss": "0.1045", "code": "void printStackTrace(PrintWriter pw){if(null){printStackTrace();}(pw);if(cause){} }", "n_tokens": 31, "n_pass": [224, 23, 22]}
{"time": "2021-02-16 12:13:55.689270", "score": "0.935", "loss": "0.1045", "code": "void printStackTrace(PrintWriter pw){if(null){printStackTrace();}(pw);if(cause){}}", "n_tokens": 30, "n_pass": [257, 24, 23]}

Minimal simplified code:
void printStackTrace(PrintWriter pw){if(null){printStackTrace();}(pw);if(cause){}}

