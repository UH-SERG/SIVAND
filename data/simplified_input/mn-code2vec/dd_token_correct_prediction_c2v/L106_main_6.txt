
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/JeffLi1993__java-core-learning-example/src/main/java/org/javacore/lambda/LambdaListCompare_main.java
method_name = main
method_body = public static void main(String[] args) { List<Integer> list = new ArrayList<>(); list.add(4); list.add(1); list.add(3); list.add(6); list.sort((o1, o2) -> Integer.compare(o1, o2)); System.out.println(list.toString()); }
predict, score, loss = main, 0.9902986288070679, 0.011471855454146862

Trace of simplified code(s):
{"time": "2021-02-14 08:17:54.578394", "score": "0.9818", "loss": "0.0206", "code": "public static void main(String[] args) { List<Integer> list = new ArrayList<>(); list.add(4); list.add(1); list.add(3); list.add(6); list.sort((o1, o2) -> Integer.compare(o1, o2)); System.out.println(list.toString()); }", "n_tokens": 112, "n_pass": [1, 1, 1]}
{"time": "2021-02-14 08:17:57.690935", "score": "0.9983", "loss": "0.002", "code": "public static void main(String[] args) { List<Integer> list = new  list.add(1); list.add(3); list.add(6); list.sort((o1, o2) -> Integer.compare(o1, o2)); System.out.println(list.toString()); }", "n_tokens": 98, "n_pass": [22, 2, 2]}
{"time": "2021-02-14 08:18:00.769315", "score": "0.999", "loss": "0.0011", "code": "public static void main(String[] args) { List<Integer> list = new  list.add(1); list.add(36); list.sort((o1, o2) -> Integer.compare(o1, o2)); System.out.println(list.toString()); }", "n_tokens": 91, "n_pass": [45, 3, 3]}
{"time": "2021-02-14 08:18:03.859936", "score": "0.9993", "loss": "0.0008", "code": "public static void main(String[] args) { List<Integer> list = new  list.add(1);add(36); list.sort((o1, o2) -> Integer.compare(o1, o2)); System.out.println(list.toString()); }", "n_tokens": 88, "n_pass": [84, 4, 4]}
{"time": "2021-02-14 08:18:06.528505", "score": "0.9993", "loss": "0.0008", "code": "public static void main(String[] args) { List<Integer> list = new  list.add(1);add(36); list.sort((o2) -> Integer.compare(o1, o2)); System.out.println(list.toString()); }", "n_tokens": 84, "n_pass": [88, 5, 5]}
{"time": "2021-02-14 08:18:09.193186", "score": "0.9785", "loss": "0.0235", "code": "public static void main(String[] args) { List<Integer> list = new  list.add(1);add(36); list.sort((o2) .compare(o1, o2)); System.out.println(list.toString()); }", "n_tokens": 80, "n_pass": [90, 6, 6]}
{"time": "2021-02-14 08:18:11.877376", "score": "0.9914", "loss": "0.0091", "code": "public static void main(String[] args) { List<Integer> list = new  list.add(1);add(36); list.sort((o2) .compare(o2)); System.out.println(list.toString()); }", "n_tokens": 76, "n_pass": [92, 7, 7]}
{"time": "2021-02-14 08:18:14.550507", "score": "0.9898", "loss": "0.0107", "code": "public static void main(String[] args) { List<Integer> list = new  list.add(1);add(36); list.sort((o2) .compare(o2)); System.out.println(list); }", "n_tokens": 72, "n_pass": [96, 8, 8]}
{"time": "2021-02-14 08:18:17.214395", "score": "0.9898", "loss": "0.0107", "code": " void main(String[] args) { List<Integer> list = new  list.add(1);add(36); list.sort((o2) .compare(o2)); System.out.println(list); }", "n_tokens": 69, "n_pass": [98, 9, 9]}
{"time": "2021-02-14 08:18:20.293527", "score": "0.9874", "loss": "0.0131", "code": " void main(String[] args) { List list = new  list.add(1);add(36); list.sort((o2) .compare(o2)); System.out.println(list); }", "n_tokens": 66, "n_pass": [104, 10, 10]}
{"time": "2021-02-14 08:18:22.935845", "score": "0.9994", "loss": "0.0006", "code": " void main(String[] args) { List= new  list.add(1);add(36); list.sort((o2) .compare(o2)); System.out.println(list); }", "n_tokens": 63, "n_pass": [105, 11, 11]}
{"time": "2021-02-14 08:18:27.152294", "score": "0.9829", "loss": "0.0181", "code": " void main(String[] args) { List=  list.add(1);add(36); list.sort((o2) .compare(o2)); System.out.println(list); }", "n_tokens": 61, "n_pass": [163, 12, 12]}
{"time": "2021-02-14 08:18:29.790986", "score": "0.9827", "loss": "0.0186", "code": " void main(String[] args) { List=  list(1);add(36); list.sort((o2) .compare(o2)); System.out.println(list); }", "n_tokens": 59, "n_pass": [165, 13, 13]}
{"time": "2021-02-14 08:18:32.438626", "score": "0.9374", "loss": "0.0655", "code": " void main(String[] args) { List=  list(1);add(); list.sort((o2) .compare(o2)); System.out.println(list); }", "n_tokens": 57, "n_pass": [169, 14, 14]}
{"time": "2021-02-14 08:18:35.083213", "score": "0.9978", "loss": "0.0032", "code": " void main(String[] args) { List=  list(1);add(); list((o2) .compare(o2)); System.out.println(list); }", "n_tokens": 55, "n_pass": [172, 15, 15]}
{"time": "2021-02-14 08:18:37.724734", "score": "0.9996", "loss": "0.0005", "code": " void main(String[] args) { List=  list(1);add(); list((o2) (o2)); System.out.println(list); }", "n_tokens": 53, "n_pass": [176, 16, 16]}
{"time": "2021-02-14 08:18:40.367188", "score": "0.9995", "loss": "0.0006", "code": " void main(String[] args) { List=  list(1);add(); list((o2) (o2)); System.println(list); }", "n_tokens": 51, "n_pass": [181, 17, 17]}
{"time": "2021-02-14 08:18:43.012605", "score": "0.9992", "loss": "0.001", "code": " void main(String[] args) { List=  list(1);add(); list((o2) (o2)); System(list); }", "n_tokens": 49, "n_pass": [182, 18, 18]}
{"time": "2021-02-14 08:18:45.653759", "score": "0.9992", "loss": "0.001", "code": "void main(String[] args) { List=  list(1);add(); list((o2) (o2)); System(list); }", "n_tokens": 48, "n_pass": [186, 19, 19]}
{"time": "2021-02-14 08:18:49.129661", "score": "0.9992", "loss": "0.001", "code": "void main(String[]args) { List=  list(1);add(); list((o2) (o2)); System(list); }", "n_tokens": 47, "n_pass": [194, 20, 20]}
{"time": "2021-02-14 08:18:51.775929", "score": "0.9983", "loss": "0.0021", "code": "void main(String[]args) { List= (1);add(); list((o2) (o2)); System(list); }", "n_tokens": 45, "n_pass": [199, 21, 21]}
{"time": "2021-02-14 08:18:54.433774", "score": "0.9984", "loss": "0.0021", "code": "void main(String[]args) { List= (1);add();((o2) (o2)); System(list); }", "n_tokens": 43, "n_pass": [204, 22, 22]}
{"time": "2021-02-14 08:18:57.088915", "score": "0.9858", "loss": "0.0174", "code": "void main(String[]args) { List= (1);add();((o2) (o2));(list); }", "n_tokens": 41, "n_pass": [211, 23, 23]}
{"time": "2021-02-14 08:19:00.541927", "score": "0.999", "loss": "0.0015", "code": "void main(String[]args) { List(1);add();((o2) (o2));(list); }", "n_tokens": 39, "n_pass": [225, 24, 24]}
{"time": "2021-02-14 08:19:04.004448", "score": "0.9797", "loss": "0.0253", "code": "void main(String[]args) {(1);add();((o2) (o2));(list); }", "n_tokens": 37, "n_pass": [248, 25, 25]}
{"time": "2021-02-14 08:19:10.104314", "score": "0.9797", "loss": "0.0253", "code": "void main(String[]args) {(1);add();((o) (o2));(list); }", "n_tokens": 36, "n_pass": [308, 26, 26]}
{"time": "2021-02-14 08:19:12.726504", "score": "0.9797", "loss": "0.0253", "code": "void main(String[]args) {(1);add();((o)(o2));(list); }", "n_tokens": 35, "n_pass": [310, 27, 27]}
{"time": "2021-02-14 08:19:15.359755", "score": "0.997", "loss": "0.0036", "code": "void main(String[]args) {(1);add();((o)(2));(list); }", "n_tokens": 34, "n_pass": [312, 28, 28]}
{"time": "2021-02-14 08:19:18.013567", "score": "0.997", "loss": "0.0036", "code": "void main(String[]args) {(1);add();((o)(2));(list);}", "n_tokens": 33, "n_pass": [321, 29, 29]}
{"time": "2021-02-14 08:19:21.465047", "score": "0.997", "loss": "0.0036", "code": "void main(String[]args){(1);add();((o)(2));(list);}", "n_tokens": 32, "n_pass": [332, 30, 30]}

Minimal simplified code:
void main(String[]args){(1);add();((o)(2));(list);}

