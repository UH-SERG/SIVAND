
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/Waikato__meka/src/main/java/meka/core/LabelVector_compare.java
method_name = compare
method_body = public int compare(Object obj1, Object obj2) { int[] v1 = ((LabelVector) obj1).values; int[] v2 = ((LabelVector) obj2).values; if (A.sum(v1) > A.sum(v2)) { return -1; } else if (A.sum(v1) < A.sum(v2)) { return 1; } else { return 0; } }
predict, score, loss = compare, 0.9777566194534302, 0.02276221103966236

Trace of simplified code(s):
{"time": "2021-02-15 02:07:40.612040", "score": "0.9512", "loss": "0.0503", "code": "public int compare(Object obj1, Object obj2) { int[] v1 = ((LabelVector) obj1).values; int[] v2 = ((LabelVector) obj2).values; if (A.sum(v1) > A.sum(v2)) { return -1; } else if (A.sum(v1) < A.sum(v2)) { return 1; } else { return 0; } }", "n_tokens": 139, "n_pass": [1, 1, 1]}
{"time": "2021-02-15 02:07:43.273778", "score": "0.5188", "loss": "0.855", "code": "public int compare(Object obj1, Object obj2) { int[] v1 = ((LabelVector) obj1).values; int[] v2 = ((LabelVector) obj2).values; if (A.sum(1) < A.sum(v2)) { return 1; } else { return 0; } }", "n_tokens": 104, "n_pass": [10, 2, 2]}
{"time": "2021-02-15 02:07:46.327115", "score": "0.9115", "loss": "0.1626", "code": "public int compare(Object obj1, Object obj2) { int[] v1 = ((LabelVector) (LabelVector) obj2).values; if (A.sum(1) < A.sum(v2)) { return 1; } else { return 0; } }", "n_tokens": 87, "n_pass": [23, 3, 3]}
{"time": "2021-02-15 02:07:49.425926", "score": "0.2252", "loss": "1.7274", "code": "public int compare(Object obj1, Object obj2) { int[] v1 = ((LabelVector) (LabelVector) obj2).values; if (A.sum(v2)) { return 1; } else { return 0; } }", "n_tokens": 78, "n_pass": [41, 4, 4]}
{"time": "2021-02-15 02:07:52.085626", "score": "0.2244", "loss": "1.9117", "code": "public int compare(Object obj1, Object obj2) { int[] v1 = ((LabelVector) (LabelVector) obj2).values; if (A.sum(v2)) { } else { return 0; } }", "n_tokens": 73, "n_pass": [70, 5, 5]}
{"time": "2021-02-15 02:08:03.243644", "score": "0.2244", "loss": "1.9117", "code": "int compare(Object obj1, Object obj2) { int[] v1 = ((LabelVector) (LabelVector) obj2).values; if (A.sum(v2)) { } else { return 0; } }", "n_tokens": 71, "n_pass": [128, 9, 6]}
{"time": "2021-02-15 02:08:05.941362", "score": "0.2807", "loss": "1.846", "code": "int compare(Object obj1, Object obj2) { int[] v1 = ((LabelVector) (LabelVector) ).values; if (A.sum(v2)) { } else { return 0; } }", "n_tokens": 69, "n_pass": [146, 10, 7]}
{"time": "2021-02-15 02:08:23.866117", "score": "0.2807", "loss": "1.846", "code": "int compare(Object obj1, Object obj2) { int[] v1 = ((LabelVector) (LabelVector) ).values;if (A.sum(v2)) { } else { return 0; } }", "n_tokens": 68, "n_pass": [247, 14, 8]}
{"time": "2021-02-15 02:08:26.656448", "score": "0.2807", "loss": "1.846", "code": "int compare(Object obj1, Object obj2) { int[] v1 = ((LabelVector) (LabelVector) ).values;if(A.sum(v2)) { } else { return 0; } }", "n_tokens": 67, "n_pass": [248, 15, 9]}
{"time": "2021-02-15 02:08:32.055834", "score": "0.2888", "loss": "1.7538", "code": "int compare(Object obj1, Object obj2) { int[] v1 = ((LabelVector) (LabelVector) ).values;if(A.sum(2)) { } else { return 0; } }", "n_tokens": 66, "n_pass": [254, 17, 10]}
{"time": "2021-02-15 02:08:37.543436", "score": "0.2888", "loss": "1.7538", "code": "int compare(Object obj1, Object obj2) { int[] v1 = ((LabelVector) (LabelVector) ).values;if(A.sum(2)){ } else { return 0; } }", "n_tokens": 65, "n_pass": [258, 19, 11]}
{"time": "2021-02-15 02:08:40.313491", "score": "0.2888", "loss": "1.7538", "code": "int compare(Object obj1, Object obj2) { int[] v1 = ((LabelVector) (LabelVector) ).values;if(A.sum(2)){} else { return 0; } }", "n_tokens": 64, "n_pass": [260, 20, 12]}
{"time": "2021-02-15 02:08:42.993439", "score": "0.2888", "loss": "1.7538", "code": "int compare(Object obj1, Object obj2) { int[] v1 = ((LabelVector) (LabelVector) ).values;if(A.sum(2)){}else { return 0; } }", "n_tokens": 63, "n_pass": [262, 21, 13]}
{"time": "2021-02-15 02:08:48.499161", "score": "0.2888", "loss": "1.7538", "code": "int compare(Object obj1, Object obj2) { int[] v1 = ((LabelVector) (LabelVector) ).values;if(A.sum(2)){}else{ return 0; } }", "n_tokens": 62, "n_pass": [264, 23, 14]}
{"time": "2021-02-15 02:08:54.792400", "score": "0.2888", "loss": "1.7538", "code": "int compare(Object obj, Object obj2) { int[] v1 = ((LabelVector) (LabelVector) ).values;if(A.sum(2)){}else{ return 0; } }", "n_tokens": 61, "n_pass": [277, 25, 15]}
{"time": "2021-02-15 02:08:57.491729", "score": "0.2888", "loss": "1.7538", "code": "int compare(Object obj,Object obj2) { int[] v1 = ((LabelVector) (LabelVector) ).values;if(A.sum(2)){}else{ return 0; } }", "n_tokens": 60, "n_pass": [279, 26, 16]}
{"time": "2021-02-15 02:09:00.207089", "score": "0.2888", "loss": "1.7538", "code": "int compare(Object obj,Object obj) { int[] v1 = ((LabelVector) (LabelVector) ).values;if(A.sum(2)){}else{ return 0; } }", "n_tokens": 59, "n_pass": [283, 27, 17]}
{"time": "2021-02-15 02:09:02.913359", "score": "0.2888", "loss": "1.7538", "code": "int compare(Object obj,Object obj){ int[] v1 = ((LabelVector) (LabelVector) ).values;if(A.sum(2)){}else{ return 0; } }", "n_tokens": 58, "n_pass": [285, 28, 18]}
{"time": "2021-02-15 02:09:05.659256", "score": "0.2888", "loss": "1.7538", "code": "int compare(Object obj,Object obj){int[] v1 = ((LabelVector) (LabelVector) ).values;if(A.sum(2)){}else{ return 0; } }", "n_tokens": 57, "n_pass": [287, 29, 19]}
{"time": "2021-02-15 02:09:08.330821", "score": "0.2888", "loss": "1.7538", "code": "int compare(Object obj,Object obj){int[]v1 = ((LabelVector) (LabelVector) ).values;if(A.sum(2)){}else{ return 0; } }", "n_tokens": 56, "n_pass": [291, 30, 20]}
{"time": "2021-02-15 02:09:11.069523", "score": "0.2888", "loss": "1.7538", "code": "int compare(Object obj,Object obj){int[]v = ((LabelVector) (LabelVector) ).values;if(A.sum(2)){}else{ return 0; } }", "n_tokens": 55, "n_pass": [293, 31, 21]}
{"time": "2021-02-15 02:09:13.734977", "score": "0.2888", "loss": "1.7538", "code": "int compare(Object obj,Object obj){int[]v= ((LabelVector) (LabelVector) ).values;if(A.sum(2)){}else{ return 0; } }", "n_tokens": 54, "n_pass": [294, 32, 22]}
{"time": "2021-02-15 02:09:16.454571", "score": "0.2888", "loss": "1.7538", "code": "int compare(Object obj,Object obj){int[]v=((LabelVector) (LabelVector) ).values;if(A.sum(2)){}else{ return 0; } }", "n_tokens": 53, "n_pass": [296, 33, 23]}
{"time": "2021-02-15 02:09:19.322137", "score": "0.2888", "loss": "1.7538", "code": "int compare(Object obj,Object obj){int[]v=((LabelVector)(LabelVector) ).values;if(A.sum(2)){}else{ return 0; } }", "n_tokens": 52, "n_pass": [301, 34, 24]}
{"time": "2021-02-15 02:09:22.083764", "score": "0.2888", "loss": "1.7538", "code": "int compare(Object obj,Object obj){int[]v=((LabelVector)(LabelVector)).values;if(A.sum(2)){}else{ return 0; } }", "n_tokens": 51, "n_pass": [305, 35, 25]}
{"time": "2021-02-15 02:09:38.573150", "score": "0.2888", "loss": "1.7538", "code": "int compare(Object obj,Object obj){int[]v=((LabelVector)(LabelVector)).values;if(A.sum(2)){}else{return 0; } }", "n_tokens": 50, "n_pass": [363, 40, 26]}
{"time": "2021-02-15 02:09:49.547038", "score": "0.2888", "loss": "1.7538", "code": "int compare(Object obj,Object obj){int[]v=((LabelVector)(LabelVector)).values;if(A.sum(2)){}else{return 0;} }", "n_tokens": 49, "n_pass": [368, 44, 27]}
{"time": "2021-02-15 02:09:52.213055", "score": "0.2888", "loss": "1.7538", "code": "int compare(Object obj,Object obj){int[]v=((LabelVector)(LabelVector)).values;if(A.sum(2)){}else{return 0;}}", "n_tokens": 48, "n_pass": [370, 45, 28]}

Minimal simplified code:
int compare(Object obj,Object obj){int[]v=((LabelVector)(LabelVector)).values;if(A.sum(2)){}else{return 0;}}

