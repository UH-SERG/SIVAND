
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/CogComp__cogcomp-nlp/core-utilities/src/main/java/edu/illinois/cs/cogcomp/core/datastructures/BoundedPriorityQueue_add.java
method_name = add
method_body = @Override public boolean add(E o) { super.add(o); if (this.size() == (maxQueueSize + 1)) { E largest = this.element(); for (E item : this) { if (this.comparator().compare(largest, item) <= 0) { largest = item; } } remove(largest); if (o.equals(largest)) return false; } return true; }
predict, score, loss = add, 0.7569230198860168, 0.41884511709213257

Trace of simplified code(s):
{"time": "2021-02-16 13:11:08.676879", "score": "0.9194", "loss": "0.115", "code": "@Override public boolean add(E o) { super.add(o); if (this.size() == (maxQueueSize + 1)) { E largest = this.element(); for (E item : this) { if (this.comparator().compare(largest, item) <= 0) { largest = item; } } remove(largest); if (o.equals(largest)) return false; } return true; }", "n_tokens": 140, "n_pass": [1, 1, 1]}
{"time": "2021-02-16 13:11:11.262062", "score": "0.4074", "loss": "1.5933", "code": "@Override public boolean add(E o) { if (this.size() == (maxQueueSize + 1)) { E largest = this.element(); for (E item : this) { if (this.comparator().compare(largest, item) <= 0) { largest = item; } } remove(largest); if (o.equals(largest)) return false; } return true; }", "n_tokens": 132, "n_pass": [46, 2, 2]}
{"time": "2021-02-16 13:11:16.423558", "score": "0.3513", "loss": "1.3871", "code": "@Override public boolean add(E o) { if (this.size() == (maxQueueSize + 1)) { E largest = this.element(); for (E item : this) { if (this.comparator().compare(largest, item)) { largest = item; } } remove(largest); if (o.equals(largest)) return false; } return true; }", "n_tokens": 127, "n_pass": [108, 4, 3]}
{"time": "2021-02-16 13:11:19.008068", "score": "0.4794", "loss": "1.1639", "code": "@Override public boolean add(E o) { if (this.size() == (maxQueueSize + 1)) { E largest = this.element(); for (E item : this) { if (this.comparator().compare(largest, item)) { largest = item; } }  if (o.equals(largest)) return false; } return true; }", "n_tokens": 122, "n_pass": [112, 5, 4]}
{"time": "2021-02-16 13:11:21.554771", "score": "0.4337", "loss": "1.2244", "code": "@Override public boolean add(E o) { if (this.size() == (maxQueueSize + 1)) { E largest = this.element(); for (E item : this) { if (this.comparator().compare(largest, item)) { largest = item; } }  if (o) return false; } return true; }", "n_tokens": 117, "n_pass": [114, 6, 5]}
{"time": "2021-02-16 13:11:29.608858", "score": "0.4952", "loss": "1.0427", "code": "@Override public boolean add(E o) { if (this.size() == (maxQueueSize + 1)) { E largest = this.element(); for (E item : this) { if (this.comparator().compare(largest, item)) { largest = item; } }  if (o) return false; } ; }", "n_tokens": 114, "n_pass": [200, 9, 6]}
{"time": "2021-02-16 13:11:34.711742", "score": "0.4952", "loss": "1.0427", "code": "@Override boolean add(E o) { if (this.size() == (maxQueueSize + 1)) { E largest = this.element(); for (E item : this) { if (this.comparator().compare(largest, item)) { largest = item; } }  if (o) return false; } ; }", "n_tokens": 112, "n_pass": [203, 11, 7]}
{"time": "2021-02-16 13:11:38.021356", "score": "0.5596", "loss": "0.8679", "code": "@Override boolean add(E o) { if (this.size == (maxQueueSize + 1)) { E largest = this.element(); for (E item : this) { if (this.comparator().compare(largest, item)) { largest = item; } }  if (o) return false; } ; }", "n_tokens": 110, "n_pass": [213, 12, 8]}
{"time": "2021-02-16 13:11:40.604166", "score": "0.5649", "loss": "0.856", "code": "@Override boolean add(E o) { if (this.size= (maxQueueSize + 1)) { E largest = this.element(); for (E item : this) { if (this.comparator().compare(largest, item)) { largest = item; } }  if (o) return false; } ; }", "n_tokens": 108, "n_pass": [214, 13, 9]}
{"time": "2021-02-16 13:11:43.180669", "score": "0.4395", "loss": "1.8139", "code": "@Override boolean add(E o) { if (this.size(maxQueueSize + 1)) { E largest = this.element(); for (E item : this) { if (this.comparator().compare(largest, item)) { largest = item; } }  if (o) return false; } ; }", "n_tokens": 106, "n_pass": [215, 14, 10]}
{"time": "2021-02-16 13:11:45.777020", "score": "0.4951", "loss": "1.4827", "code": "@Override boolean add(E o) { if (this.size(maxQueueSize + 1)) { largest = this.element(); for (E item : this) { if (this.comparator().compare(largest, item)) { largest = item; } }  if (o) return false; } ; }", "n_tokens": 104, "n_pass": [221, 15, 11]}
{"time": "2021-02-16 13:11:48.732962", "score": "0.4667", "loss": "1.5674", "code": "@Override boolean add(E o) { if (this.size(maxQueueSize + 1)) { largest = this.element; for (E item : this) { if (this.comparator().compare(largest, item)) { largest = item; } }  if (o) return false; } ; }", "n_tokens": 102, "n_pass": [226, 16, 12]}
{"time": "2021-02-16 13:11:51.668982", "score": "0.6181", "loss": "1.0349", "code": "@Override boolean add(E o) { if (this.size(maxQueueSize + 1)) { largest = this.element; for (E item : this) { if (this.comparator.compare(largest, item)) { largest = item; } }  if (o) return false; } ; }", "n_tokens": 100, "n_pass": [238, 17, 13]}
{"time": "2021-02-16 13:11:54.216091", "score": "0.7034", "loss": "0.7393", "code": "@Override boolean add(E o) { if (this.size(maxQueueSize + 1)) { largest = this.element; for (E item : this) { if (this.comparator(largest, item)) { largest = item; } }  if (o) return false; } ; }", "n_tokens": 98, "n_pass": [239, 18, 14]}
{"time": "2021-02-16 13:11:56.763261", "score": "0.5369", "loss": "1.1076", "code": "@Override boolean add(E o) { if (this.size(maxQueueSize + 1)) { largest = this.element; for (E item : this) { if (this.comparator(largestitem)) { largest = item; } }  if (o) return false; } ; }", "n_tokens": 96, "n_pass": [241, 19, 15]}
{"time": "2021-02-16 13:11:59.332313", "score": "0.4875", "loss": "1.2268", "code": "@Override boolean add(E o) { if (this.size(maxQueueSize + 1)) { largest = this.element; for (E item : this) { if (this.comparator(largestitem)) { largest item; } }  if (o) return false; } ; }", "n_tokens": 94, "n_pass": [246, 20, 16]}
{"time": "2021-02-16 13:12:05.215476", "score": "0.49", "loss": "1.2351", "code": "@Override boolean add(E o) { if (this.size(maxQueueSize + 1)) { largest = this; for (E item : this) { if (this.comparator(largestitem)) { largest item; } }  if (o) return false; } ; }", "n_tokens": 92, "n_pass": [273, 22, 17]}
{"time": "2021-02-16 13:12:08.153891", "score": "0.4867", "loss": "1.2327", "code": "@Override boolean add(E o) { if (this.size(maxQueueSize + 1)) { largest = this; for (E item : this) { if (this.comparator(largestitem)) { item; } }  if (o) return false; } ; }", "n_tokens": 90, "n_pass": [289, 23, 18]}
{"time": "2021-02-16 13:12:10.707867", "score": "0.4866", "loss": "1.2369", "code": "@Override boolean add(E o) { if (this.size(maxQueueSize + 1)) { largest = this; for (E item : this) { if (this.comparator(largestitem)) { } }  if (o) return false; } ; }", "n_tokens": 87, "n_pass": [290, 24, 19]}
{"time": "2021-02-16 13:12:26.941411", "score": "0.4866", "loss": "1.2369", "code": "@Override boolean add(E o) { if (this.size(maxQueueSize + 1)) { largest = this; for (E item : this) { if (this.comparator(largestitem)) { }}  if (o) return false; } ; }", "n_tokens": 86, "n_pass": [412, 26, 20]}
{"time": "2021-02-16 13:12:29.510236", "score": "0.4866", "loss": "1.2369", "code": "@Override boolean add(E o) { if (this.size(maxQueueSize + 1)) { largest = this; for (E item : this) { if (this.comparator(largestitem)) { }} if (o) return false; } ; }", "n_tokens": 85, "n_pass": [414, 27, 21]}
{"time": "2021-02-16 13:12:32.064783", "score": "0.4866", "loss": "1.2369", "code": "@Override boolean add(E o) { if (this.size(maxQueueSize + 1)) { largest = this; for (E item : this) { if (this.comparator(largestitem)) { }}if (o) return false; } ; }", "n_tokens": 84, "n_pass": [415, 28, 22]}
{"time": "2021-02-16 13:12:34.628492", "score": "0.4866", "loss": "1.2369", "code": "@Override boolean add(E o) { if (this.size(maxQueueSize + 1)) { largest = this; for (E item : this) { if (this.comparator(largestitem)) { }}if(o) return false; } ; }", "n_tokens": 83, "n_pass": [417, 29, 23]}
{"time": "2021-02-16 13:12:37.177086", "score": "0.6034", "loss": "1.0228", "code": "@Override boolean add(E o) { if (this.size(maxQueueSize + 1)) { largest = this; for (E item : this) { if (this.comparator(largestitem)) { }}if(o) false; } ; }", "n_tokens": 81, "n_pass": [420, 30, 24]}
{"time": "2021-02-16 13:12:39.728811", "score": "0.6034", "loss": "1.0228", "code": "@Override boolean add(E o) { if (this.size(maxQueueSize + 1)) { largest = this; for (E item : this) { if (this.comparator(largestitem)) { }}if(o) false; } }", "n_tokens": 79, "n_pass": [423, 31, 25]}
{"time": "2021-02-16 13:12:43.450328", "score": "0.6034", "loss": "1.0228", "code": "@Override boolean add(E o){ if (this.size(maxQueueSize + 1)) { largest = this; for (E item : this) { if (this.comparator(largestitem)) { }}if(o) false; } }", "n_tokens": 78, "n_pass": [436, 32, 26]}
{"time": "2021-02-16 13:12:46.000975", "score": "0.6034", "loss": "1.0228", "code": "@Override boolean add(E o){if (this.size(maxQueueSize + 1)) { largest = this; for (E item : this) { if (this.comparator(largestitem)) { }}if(o) false; } }", "n_tokens": 77, "n_pass": [438, 33, 27]}
{"time": "2021-02-16 13:12:48.569343", "score": "0.6034", "loss": "1.0228", "code": "@Override boolean add(E o){if(this.size(maxQueueSize + 1)) { largest = this; for (E item : this) { if (this.comparator(largestitem)) { }}if(o) false; } }", "n_tokens": 76, "n_pass": [440, 34, 28]}
{"time": "2021-02-16 13:12:51.134895", "score": "0.5537", "loss": "1.1455", "code": "@Override boolean add(E o){if(thissize(maxQueueSize + 1)) { largest = this; for (E item : this) { if (this.comparator(largestitem)) { }}if(o) false; } }", "n_tokens": 75, "n_pass": [443, 35, 29]}
{"time": "2021-02-16 13:12:54.054790", "score": "0.5141", "loss": "0.7891", "code": "@Override boolean add(E o){if(thissize( + 1)) { largest = this; for (E item : this) { if (this.comparator(largestitem)) { }}if(o) false; } }", "n_tokens": 74, "n_pass": [446, 36, 30]}
{"time": "2021-02-16 13:12:56.604378", "score": "0.5141", "loss": "0.7891", "code": "@Override boolean add(E o){if(thissize(+ 1)) { largest = this; for (E item : this) { if (this.comparator(largestitem)) { }}if(o) false; } }", "n_tokens": 73, "n_pass": [447, 37, 31]}
{"time": "2021-02-16 13:12:59.145605", "score": "0.5676", "loss": "0.7238", "code": "@Override boolean add(E o){if(thissize( 1)) { largest = this; for (E item : this) { if (this.comparator(largestitem)) { }}if(o) false; } }", "n_tokens": 72, "n_pass": [448, 38, 32]}
{"time": "2021-02-16 13:13:01.690975", "score": "0.5676", "loss": "0.7238", "code": "@Override boolean add(E o){if(thissize(1)) { largest = this; for (E item : this) { if (this.comparator(largestitem)) { }}if(o) false; } }", "n_tokens": 71, "n_pass": [449, 39, 33]}
{"time": "2021-02-16 13:13:04.270044", "score": "0.7046", "loss": "0.4528", "code": "@Override boolean add(E o){if(thissize()) { largest = this; for (E item : this) { if (this.comparator(largestitem)) { }}if(o) false; } }", "n_tokens": 70, "n_pass": [450, 40, 34]}
{"time": "2021-02-16 13:13:06.828855", "score": "0.7046", "loss": "0.4528", "code": "@Override boolean add(E o){if(thissize()){ largest = this; for (E item : this) { if (this.comparator(largestitem)) { }}if(o) false; } }", "n_tokens": 69, "n_pass": [453, 41, 35]}
{"time": "2021-02-16 13:13:09.401347", "score": "0.7046", "loss": "0.4528", "code": "@Override boolean add(E o){if(thissize()){largest = this; for (E item : this) { if (this.comparator(largestitem)) { }}if(o) false; } }", "n_tokens": 68, "n_pass": [455, 42, 36]}
{"time": "2021-02-16 13:13:11.974515", "score": "0.7046", "loss": "0.4528", "code": "@Override boolean add(E o){if(thissize()){largest= this; for (E item : this) { if (this.comparator(largestitem)) { }}if(o) false; } }", "n_tokens": 67, "n_pass": [457, 43, 37]}
{"time": "2021-02-16 13:13:14.530615", "score": "0.7046", "loss": "0.4528", "code": "@Override boolean add(E o){if(thissize()){largest=this; for (E item : this) { if (this.comparator(largestitem)) { }}if(o) false; } }", "n_tokens": 66, "n_pass": [459, 44, 38]}
{"time": "2021-02-16 13:13:17.105256", "score": "0.7046", "loss": "0.4528", "code": "@Override boolean add(E o){if(thissize()){largest=this;for (E item : this) { if (this.comparator(largestitem)) { }}if(o) false; } }", "n_tokens": 65, "n_pass": [462, 45, 39]}
{"time": "2021-02-16 13:13:19.652390", "score": "0.7046", "loss": "0.4528", "code": "@Override boolean add(E o){if(thissize()){largest=this;for(E item : this) { if (this.comparator(largestitem)) { }}if(o) false; } }", "n_tokens": 64, "n_pass": [464, 46, 40]}
{"time": "2021-02-16 13:13:22.189051", "score": "0.7046", "loss": "0.4528", "code": "@Override boolean add(E o){if(thissize()){largest=this;for(E item: this) { if (this.comparator(largestitem)) { }}if(o) false; } }", "n_tokens": 63, "n_pass": [469, 47, 41]}
{"time": "2021-02-16 13:13:24.731875", "score": "0.7046", "loss": "0.4528", "code": "@Override boolean add(E o){if(thissize()){largest=this;for(E item:this) { if (this.comparator(largestitem)) { }}if(o) false; } }", "n_tokens": 62, "n_pass": [471, 48, 42]}
{"time": "2021-02-16 13:13:27.301015", "score": "0.7046", "loss": "0.4528", "code": "@Override boolean add(E o){if(thissize()){largest=this;for(E item:this){ if (this.comparator(largestitem)) { }}if(o) false; } }", "n_tokens": 61, "n_pass": [474, 49, 43]}
{"time": "2021-02-16 13:13:29.882525", "score": "0.7046", "loss": "0.4528", "code": "@Override boolean add(E o){if(thissize()){largest=this;for(E item:this){if (this.comparator(largestitem)) { }}if(o) false; } }", "n_tokens": 60, "n_pass": [476, 50, 44]}
{"time": "2021-02-16 13:13:32.416967", "score": "0.7046", "loss": "0.4528", "code": "@Override boolean add(E o){if(thissize()){largest=this;for(E item:this){if(this.comparator(largestitem)) { }}if(o) false; } }", "n_tokens": 59, "n_pass": [478, 51, 45]}
{"time": "2021-02-16 13:13:34.990761", "score": "0.7915", "loss": "0.3308", "code": "@Override boolean add(E o){if(thissize()){largest=this;for(E item:this){if(thiscomparator(largestitem)) { }}if(o) false; } }", "n_tokens": 58, "n_pass": [481, 52, 46]}
{"time": "2021-02-16 13:13:37.897342", "score": "0.718", "loss": "0.4701", "code": "@Override boolean add(E o){if(thissize()){largest=this;for(E item:this){if(thiscomparator(item)) { }}if(o) false; } }", "n_tokens": 57, "n_pass": [484, 53, 47]}
{"time": "2021-02-16 13:13:40.468282", "score": "0.811", "loss": "0.2938", "code": "@Override boolean add(E o){if(thissize()){largest=this;for(E item:this){if(thiscomparator()) { }}if(o) false; } }", "n_tokens": 56, "n_pass": [485, 54, 48]}
{"time": "2021-02-16 13:13:43.002580", "score": "0.811", "loss": "0.2938", "code": "@Override boolean add(E o){if(thissize()){largest=this;for(E item:this){if(thiscomparator()){ }}if(o) false; } }", "n_tokens": 55, "n_pass": [488, 55, 49]}
{"time": "2021-02-16 13:13:45.537175", "score": "0.811", "loss": "0.2938", "code": "@Override boolean add(E o){if(thissize()){largest=this;for(E item:this){if(thiscomparator()){}}if(o) false; } }", "n_tokens": 54, "n_pass": [490, 56, 50]}
{"time": "2021-02-16 13:13:49.639087", "score": "0.9026", "loss": "0.109", "code": "@Override boolean add(E o){if(size()){largest=this;for(E item:this){if(thiscomparator()){}}if(o) false; } }", "n_tokens": 53, "n_pass": [513, 57, 51]}
{"time": "2021-02-16 13:13:52.187096", "score": "0.7947", "loss": "0.2359", "code": "@Override boolean add(E o){if(size()){largestthis;for(E item:this){if(thiscomparator()){}}if(o) false; } }", "n_tokens": 52, "n_pass": [520, 58, 52]}
{"time": "2021-02-16 13:13:54.724761", "score": "0.8262", "loss": "0.1977", "code": "@Override boolean add(E o){if(size()){largest;for(E item:this){if(thiscomparator()){}}if(o) false; } }", "n_tokens": 51, "n_pass": [521, 59, 53]}
{"time": "2021-02-16 13:13:57.270431", "score": "0.8392", "loss": "0.1831", "code": "@Override boolean add(E o){if(size()){largest;for(E item:this){if(comparator()){}}if(o) false; } }", "n_tokens": 50, "n_pass": [534, 60, 54]}
{"time": "2021-02-16 13:14:01.379937", "score": "0.8072", "loss": "0.2206", "code": "@Override boolean add(E o){if(size()){;for(E item:this){if(comparator()){}}if(o) false; } }", "n_tokens": 49, "n_pass": [567, 61, 55]}
{"time": "2021-02-16 13:14:03.935620", "score": "0.8072", "loss": "0.2206", "code": "@Override boolean add(E o){if(size()){for(E item:this){if(comparator()){}}if(o) false; } }", "n_tokens": 48, "n_pass": [568, 62, 56]}
{"time": "2021-02-16 13:14:09.446323", "score": "0.8072", "loss": "0.2206", "code": "@Override boolean add(E o){if(size()){for(E item:this){if(comparator()){}}if(o)false; } }", "n_tokens": 47, "n_pass": [625, 63, 57]}
{"time": "2021-02-16 13:14:11.982628", "score": "0.8222", "loss": "0.2012", "code": "@Override boolean add(E o){if(size()){for(E item:this){if(comparator()){}}if(o); } }", "n_tokens": 46, "n_pass": [626, 64, 58]}
{"time": "2021-02-16 13:14:14.517141", "score": "0.8222", "loss": "0.2012", "code": "@Override boolean add(E o){if(size()){for(E item:this){if(comparator()){}}if(o);} }", "n_tokens": 45, "n_pass": [628, 65, 59]}
{"time": "2021-02-16 13:14:17.072114", "score": "0.8222", "loss": "0.2012", "code": "@Override boolean add(E o){if(size()){for(E item:this){if(comparator()){}}if(o);}}", "n_tokens": 44, "n_pass": [630, 66, 60]}
{"time": "2021-02-16 13:14:20.784085", "score": "0.8813", "loss": "0.1289", "code": "@Override boolean add(E o){if(size()){for(E item:this){if(comparator()){}}(o);}}", "n_tokens": 43, "n_pass": [669, 67, 61]}

Minimal simplified code:
@Override boolean add(E o){if(size()){for(E item:this){if(comparator()){}}(o);}}

