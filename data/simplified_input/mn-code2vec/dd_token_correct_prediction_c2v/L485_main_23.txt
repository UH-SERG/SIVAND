
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/Waikato__meka/src/main/java/mekaexamples/classifiers/CrossValidate_main.java
method_name = main
method_body = public static void main(String[] args) throws Exception { if (args.length != 1) throw new IllegalArgumentException("Required arguments: <dataset>"); System.out.println("Loading data: " + args[0]); Instances data = DataSource.read(args[0]); MLUtils.prepareData(data); int numFolds = 10; System.out.println("Cross-validate BR classifier using " + numFolds + " folds"); BR classifier = new BR(); String top = "PCut1"; String vop = "3"; Result result = Evaluation.cvModel(classifier, data, numFolds, top, vop); System.out.println(result); }
predict, score, loss = main, 0.9990847110748291, 0.0013374679256230593

Trace of simplified code(s):
{"time": "2021-02-14 20:31:45.923718", "score": "0.9999", "loss": "0.0001", "code": "public static void main(String[] args) throws Exception { if (args.length != 1) throw new IllegalArgumentException(\"Required arguments: <dataset>\"); System.out.println(\"Loading data: \" + args[0]); Instances data = DataSource.read(args[0]); MLUtils.prepareData(data); int numFolds = 10; System.out.println(\"Cross-validate BR classifier using \" + numFolds + \" folds\"); BR classifier = new BR(); String top = \"PCut1\"; String vop = \"3\"; Result result = Evaluation.cvModel(classifier, data, numFolds, top, vop); System.out.println(result); }", "n_tokens": 216, "n_pass": [1, 1, 1]}
{"time": "2021-02-14 20:31:48.617066", "score": "0.9973", "loss": "0.0065", "code": "public static void main(String[] args) throws Exception { if (args.length != 1) throw new IllegalArgumentException(\"Required arguments: <dataset>\"); System0; System.out.println(\"Cross-validate BR classifier using \" + numFolds + \" folds\"); BR classifier = new BR(); String top = \"PCut1\"; String vop = \"3\"; Result result = Evaluation.cvModel(classifier, data, numFolds, top, vop); System.out.println(result); }", "n_tokens": 162, "n_pass": [9, 2, 2]}
{"time": "2021-02-14 20:31:51.315759", "score": "0.9897", "loss": "0.0357", "code": "public static void main(String[] args) throws Exception { if (args.length != 1) throw new IllegalArgumentException(\"Required arguments: <dataset>\"); System0; System.out.println(\"Cross-validate BR classifier using \" + numFolds + \" folds\"); BR classifier= \"PCut1\"; String vop = \"3\"; Result result = Evaluation.cvModel(classifier, data, numFolds, top, vop); System.out.println(result); }", "n_tokens": 148, "n_pass": [39, 3, 3]}
{"time": "2021-02-14 20:31:54.027378", "score": "0.9887", "loss": "0.0513", "code": "public static void main(String[] args) throws Exception { if (args.length != 1) throw new IllegalArgumentException(\"Required arguments: <dataset>\"); System0; System.out.println(\"Cross-validate BR classifier using \" + numFolds + \" folds\"); BR classifier= \"PCut1\";\"3\"; Result result = Evaluation.cvModel(classifier, data, numFolds, top, vop); System.out.println(result); }", "n_tokens": 141, "n_pass": [74, 4, 4]}
{"time": "2021-02-14 20:31:56.699453", "score": "0.999", "loss": "0.0024", "code": "public static void main(String[] args) throws Exception { if (args.length != 1) throw new IllegalArgumentException(\"Required arguments: <dataset>\"); System0; System.out.println(\"Cross-validate BR classifier using \" + numFolds + \" folds\"); BR classifier= \"PCut1\";result = Evaluation.cvModel(classifier, data, numFolds, top, vop); System.out.println(result); }", "n_tokens": 134, "n_pass": [75, 5, 5]}
{"time": "2021-02-14 20:31:59.795580", "score": "0.8663", "loss": "0.5894", "code": "public static void main(String[] args) throws Exception { if ( 1) throw new IllegalArgumentException(\"Required arguments: <dataset>\"); System0; System.out.println(\"Cross-validate BR classifier using \" + numFolds + \" folds\"); BR classifier= \"PCut1\";result = Evaluation.cvModel(classifier, data, numFolds, top, vop); System.out.println(result); }", "n_tokens": 128, "n_pass": [85, 6, 6]}
{"time": "2021-02-14 20:32:02.469255", "score": "0.4468", "loss": "2.1942", "code": "public static void main(String[] args) throws Exception { if ( 1) throw new IllegalArgumentException(\"Required arguments: <dataset>\"); System0; System.out.println(\" using \" + numFolds + \" folds\"); BR classifier= \"PCut1\";result = Evaluation.cvModel(classifier, data, numFolds, top, vop); System.out.println(result); }", "n_tokens": 121, "n_pass": [91, 7, 7]}
{"time": "2021-02-14 20:32:05.129066", "score": "0.997", "loss": "0.0099", "code": "public static void main(String[] args) throws Exception { if ( 1) throw new IllegalArgumentException(\"Required arguments: <dataset>\"); System0; System.out.println(\" using \" + numFolds + \" folds\"); BR classifierresult = Evaluation.cvModel(classifier, data, numFolds, top, vop); System.out.println(result); }", "n_tokens": 114, "n_pass": [95, 8, 8]}
{"time": "2021-02-14 20:32:08.256382", "score": "0.9982", "loss": "0.0055", "code": " void main(String[] args) throws Exception { if ( 1) throw new IllegalArgumentException(\"Required arguments: <dataset>\"); System0; System.out.println(\" using \" + numFolds + \" folds\"); BR classifierresult = Evaluation.cvModel(classifier, data, numFolds, top, vop); System.out.println(result); }", "n_tokens": 111, "n_pass": [157, 9, 9]}
{"time": "2021-02-14 20:32:10.998832", "score": "0.9959", "loss": "0.0135", "code": " void main(String[] args)  { if ( 1) throw new IllegalArgumentException(\"Required arguments: <dataset>\"); System0; System.out.println(\" using \" + numFolds + \" folds\"); BR classifierresult = Evaluation.cvModel(classifier, data, numFolds, top, vop); System.out.println(result); }", "n_tokens": 108, "n_pass": [161, 10, 10]}
{"time": "2021-02-14 20:32:13.665940", "score": "0.9975", "loss": "0.0127", "code": " void main(String[] args)  { if ( 1)new IllegalArgumentException(\"Required arguments: <dataset>\"); System0; System.out.println(\" using \" + numFolds + \" folds\"); BR classifierresult = Evaluation.cvModel(classifier, data, numFolds, top, vop); System.out.println(result); }", "n_tokens": 105, "n_pass": [165, 11, 11]}
{"time": "2021-02-14 20:32:16.362585", "score": "0.9923", "loss": "0.025", "code": " void main(String[] args)  { if ( 1)(\"Required arguments: <dataset>\"); System0; System.out.println(\" using \" + numFolds + \" folds\"); BR classifierresult = Evaluation.cvModel(classifier, data, numFolds, top, vop); System.out.println(result); }", "n_tokens": 102, "n_pass": [166, 12, 12]}
{"time": "2021-02-14 20:32:19.025516", "score": "0.9938", "loss": "0.0199", "code": " void main(String[] args)  { if ( 1)(\"Required <dataset>\"); System0; System.out.println(\" using \" + numFolds + \" folds\"); BR classifierresult = Evaluation.cvModel(classifier, data, numFolds, top, vop); System.out.println(result); }", "n_tokens": 99, "n_pass": [168, 13, 13]}
{"time": "2021-02-14 20:32:21.689492", "score": "0.9942", "loss": "0.018", "code": " void main(String[] args)  { if ( 1)(\"Required>\"); System0; System.out.println(\" using \" + numFolds + \" folds\"); BR classifierresult = Evaluation.cvModel(classifier, data, numFolds, top, vop); System.out.println(result); }", "n_tokens": 96, "n_pass": [169, 14, 14]}
{"time": "2021-02-14 20:32:24.355545", "score": "0.9918", "loss": "0.0254", "code": " void main(String[] args)  { if ( 1)(\"Required>\"); SystemSystem.out.println(\" using \" + numFolds + \" folds\"); BR classifierresult = Evaluation.cvModel(classifier, data, numFolds, top, vop); System.out.println(result); }", "n_tokens": 93, "n_pass": [172, 15, 15]}
{"time": "2021-02-14 20:32:27.014461", "score": "0.9945", "loss": "0.0177", "code": " void main(String[] args)  { if ( 1)(\"Required>\"); System.println(\" using \" + numFolds + \" folds\"); BR classifierresult = Evaluation.cvModel(classifier, data, numFolds, top, vop); System.out.println(result); }", "n_tokens": 90, "n_pass": [173, 16, 16]}
{"time": "2021-02-14 20:32:29.683996", "score": "0.9923", "loss": "0.0297", "code": " void main(String[] args)  { if ( 1)(\"Required>\"); System.println(\" using \"  + \" folds\"); BR classifierresult = Evaluation.cvModel(classifier, data, numFolds, top, vop); System.out.println(result); }", "n_tokens": 87, "n_pass": [177, 17, 17]}
{"time": "2021-02-14 20:32:32.763456", "score": "0.9688", "loss": "0.1056", "code": " void main(String[] args)  { if ( 1)(\"Required>\").println(\" using \"  + \" folds\"); BR classifierresult = Evaluation.cvModel(classifier, data, numFolds, top, vop); System.out.println(result); }", "n_tokens": 84, "n_pass": [199, 18, 18]}
{"time": "2021-02-14 20:32:37.749516", "score": "0.9719", "loss": "0.0774", "code": " void main(String[] args)  { if ( 1)(\"Required>\").println(\" \"  + \" folds\"); BR classifierresult = Evaluation.cvModel(classifier, data, numFolds, top, vop); System.out.println(result); }", "n_tokens": 82, "n_pass": [276, 19, 19]}
{"time": "2021-02-14 20:32:40.411001", "score": "0.9185", "loss": "0.1763", "code": " void main(String[] args)  { if ( 1)(\"Required>\").println(\" \"  + \"\"); BR classifierresult = Evaluation.cvModel(classifier, data, numFolds, top, vop); System.out.println(result); }", "n_tokens": 80, "n_pass": [280, 20, 20]}
{"time": "2021-02-14 20:32:43.072133", "score": "0.9699", "loss": "0.0917", "code": " void main(String[] args)  { if ( 1)(\"Required>\").println(\" \"  + \"\"); classifierresult = Evaluation.cvModel(classifier, data, numFolds, top, vop); System.out.println(result); }", "n_tokens": 78, "n_pass": [283, 21, 21]}
{"time": "2021-02-14 20:32:45.729741", "score": "0.9764", "loss": "0.0678", "code": " void main(String[] args)  { if ( 1)(\"Required>\").println(\" \"  + \"\"); classifierresult = Evaluation(classifier, data, numFolds, top, vop); System.out.println(result); }", "n_tokens": 76, "n_pass": [287, 22, 22]}
{"time": "2021-02-14 20:32:48.380455", "score": "0.9961", "loss": "0.0109", "code": " void main(String[] args)  { if ( 1)(\"Required>\").println(\" \"  + \"\"); classifierresult = Evaluation(classifierdata, numFolds, top, vop); System.out.println(result); }", "n_tokens": 74, "n_pass": [289, 23, 23]}
{"time": "2021-02-14 20:32:51.032756", "score": "0.7932", "loss": "0.5967", "code": " void main(String[] args)  { if ( 1)(\"Required>\").println(\" \"  + \"\"); classifierresult = Evaluation(classifierdata, numFoldstop, vop); System.out.println(result); }", "n_tokens": 72, "n_pass": [292, 24, 24]}
{"time": "2021-02-14 20:32:53.709445", "score": "0.5347", "loss": "1.2152", "code": " void main(String[] args)  { if ( 1)(\"Required>\").println(\" \"  + \"\"); classifierresult = Evaluation(classifierdata, numFoldstop, vop); System.println(result); }", "n_tokens": 70, "n_pass": [297, 25, 25]}
{"time": "2021-02-14 20:32:56.355748", "score": "0.3217", "loss": "1.8761", "code": " void main(String[] args)  { if ( 1)(\"Required>\").println(\" \"  + \"\"); classifierresult = Evaluation(classifierdata, numFoldstop, vop); System(result); }", "n_tokens": 68, "n_pass": [298, 26, 26]}
{"time": "2021-02-14 20:32:58.997726", "score": "0.3217", "loss": "1.8761", "code": "void main(String[] args)  { if ( 1)(\"Required>\").println(\" \"  + \"\"); classifierresult = Evaluation(classifierdata, numFoldstop, vop); System(result); }", "n_tokens": 67, "n_pass": [302, 27, 27]}
{"time": "2021-02-14 20:33:02.459131", "score": "0.3217", "loss": "1.8761", "code": "void main(String[]args)  { if ( 1)(\"Required>\").println(\" \"  + \"\"); classifierresult = Evaluation(classifierdata, numFoldstop, vop); System(result); }", "n_tokens": 66, "n_pass": [310, 28, 28]}
{"time": "2021-02-14 20:33:05.108797", "score": "0.3217", "loss": "1.8761", "code": "void main(String[]args) { if ( 1)(\"Required>\").println(\" \"  + \"\"); classifierresult = Evaluation(classifierdata, numFoldstop, vop); System(result); }", "n_tokens": 65, "n_pass": [313, 29, 29]}
{"time": "2021-02-14 20:33:07.763041", "score": "0.3762", "loss": "1.7134", "code": "void main(String[]args) { if ( 1)(\"Required>\").println(\" \"  + \"\"); classifierresult = Evaluation(classifierdata,top, vop); System(result); }", "n_tokens": 63, "n_pass": [334, 30, 30]}
{"time": "2021-02-14 20:33:10.411544", "score": "0.8398", "loss": "0.2727", "code": "void main(String[]args) { if ( 1)(\"Required>\").println(\" \"  + \"\"); classifierresult = Evaluation(classifierdata, vop); System(result); }", "n_tokens": 61, "n_pass": [335, 31, 31]}
{"time": "2021-02-14 20:33:13.061614", "score": "0.7342", "loss": "0.4561", "code": "void main(String[]args) { if ( 1)(\"Required>\").println(\" \"  + \"\"); classifierresult = Evaluation(classifierdata, vop);(result); }", "n_tokens": 59, "n_pass": [338, 32, 32]}
{"time": "2021-02-14 20:33:22.600963", "score": "0.7342", "loss": "0.4561", "code": "void main(String[]args) { if ( 1)(\"Required>\").println(\" \"  + \"\"); classifierresult = Evaluation(classifierdata, vop);(result);}", "n_tokens": 58, "n_pass": [427, 33, 33]}
{"time": "2021-02-14 20:33:26.063393", "score": "0.7342", "loss": "0.4561", "code": "void main(String[]args){ if ( 1)(\"Required>\").println(\" \"  + \"\"); classifierresult = Evaluation(classifierdata, vop);(result);}", "n_tokens": 57, "n_pass": [437, 34, 34]}
{"time": "2021-02-14 20:33:28.712358", "score": "0.7342", "loss": "0.4561", "code": "void main(String[]args){if ( 1)(\"Required>\").println(\" \"  + \"\"); classifierresult = Evaluation(classifierdata, vop);(result);}", "n_tokens": 56, "n_pass": [439, 35, 35]}
{"time": "2021-02-14 20:33:31.358634", "score": "0.7342", "loss": "0.4561", "code": "void main(String[]args){if( 1)(\"Required>\").println(\" \"  + \"\"); classifierresult = Evaluation(classifierdata, vop);(result);}", "n_tokens": 55, "n_pass": [441, 36, 36]}
{"time": "2021-02-14 20:33:34.009385", "score": "0.7342", "loss": "0.4561", "code": "void main(String[]args){if(1)(\"Required>\").println(\" \"  + \"\"); classifierresult = Evaluation(classifierdata, vop);(result);}", "n_tokens": 54, "n_pass": [443, 37, 37]}
{"time": "2021-02-14 20:33:36.656251", "score": "0.7331", "loss": "0.4564", "code": "void main(String[]args){if(1)(\">\").println(\" \"  + \"\"); classifierresult = Evaluation(classifierdata, vop);(result);}", "n_tokens": 53, "n_pass": [448, 38, 38]}
{"time": "2021-02-14 20:33:39.321539", "score": "0.7339", "loss": "0.4541", "code": "void main(String[]args){if(1)(\"\").println(\" \"  + \"\"); classifierresult = Evaluation(classifierdata, vop);(result);}", "n_tokens": 52, "n_pass": [449, 39, 39]}
{"time": "2021-02-14 20:33:41.995332", "score": "0.6926", "loss": "0.5283", "code": "void main(String[]args){if(1)(\"\").println(\"\"  + \"\"); classifierresult = Evaluation(classifierdata, vop);(result);}", "n_tokens": 51, "n_pass": [456, 40, 40]}
{"time": "2021-02-14 20:33:44.652111", "score": "0.6926", "loss": "0.5283", "code": "void main(String[]args){if(1)(\"\").println(\"\" + \"\"); classifierresult = Evaluation(classifierdata, vop);(result);}", "n_tokens": 50, "n_pass": [458, 41, 41]}
{"time": "2021-02-14 20:33:47.293770", "score": "0.6926", "loss": "0.5283", "code": "void main(String[]args){if(1)(\"\").println(\"\"+ \"\"); classifierresult = Evaluation(classifierdata, vop);(result);}", "n_tokens": 49, "n_pass": [459, 42, 42]}
{"time": "2021-02-14 20:33:49.937427", "score": "0.6926", "loss": "0.5283", "code": "void main(String[]args){if(1)(\"\").println(\"\"+\"\"); classifierresult = Evaluation(classifierdata, vop);(result);}", "n_tokens": 48, "n_pass": [461, 43, 43]}
{"time": "2021-02-14 20:33:52.584952", "score": "0.6926", "loss": "0.5283", "code": "void main(String[]args){if(1)(\"\").println(\"\"+\"\");classifierresult = Evaluation(classifierdata, vop);(result);}", "n_tokens": 47, "n_pass": [466, 44, 44]}
{"time": "2021-02-14 20:33:55.229664", "score": "0.2839", "loss": "1.7056", "code": "void main(String[]args){if(1)(\"\").println(\"\"+\"\");result = Evaluation(classifierdata, vop);(result);}", "n_tokens": 46, "n_pass": [467, 45, 45]}
{"time": "2021-02-14 20:33:57.875924", "score": "0.2839", "loss": "1.7056", "code": "void main(String[]args){if(1)(\"\").println(\"\"+\"\");result= Evaluation(classifierdata, vop);(result);}", "n_tokens": 45, "n_pass": [469, 46, 46]}
{"time": "2021-02-14 20:34:00.526225", "score": "0.2839", "loss": "1.7056", "code": "void main(String[]args){if(1)(\"\").println(\"\"+\"\");result=Evaluation(classifierdata, vop);(result);}", "n_tokens": 44, "n_pass": [471, 47, 47]}
{"time": "2021-02-14 20:34:03.184811", "score": "0.7707", "loss": "0.2828", "code": "void main(String[]args){if(1)(\"\").println(\"\"+\"\");result=Evaluation(data, vop);(result);}", "n_tokens": 43, "n_pass": [474, 48, 48]}
{"time": "2021-02-14 20:34:05.859405", "score": "0.7707", "loss": "0.2828", "code": "void main(String[]args){if(1)(\"\").println(\"\"+\"\");result=Evaluation(data,vop);(result);}", "n_tokens": 42, "n_pass": [477, 49, 49]}
{"time": "2021-02-14 20:34:09.339544", "score": "0.9741", "loss": "0.0329", "code": "void main(String[]args){if(1)(\"\").println(\"\"+\"\");resultEvaluation(data,vop);(result);}", "n_tokens": 41, "n_pass": [515, 50, 50]}
{"time": "2021-02-14 20:34:12.008121", "score": "0.9516", "loss": "0.0588", "code": "void main(String[]args){if(1)(\"\").println(\"\"+\"\");result(data,vop);(result);}", "n_tokens": 40, "n_pass": [516, 51, 51]}
{"time": "2021-02-14 20:34:14.677143", "score": "0.9953", "loss": "0.0086", "code": "void main(String[]args){if(1)(\"\").println(\"\"+\"\");result(datavop);(result);}", "n_tokens": 39, "n_pass": [519, 52, 52]}
{"time": "2021-02-14 20:34:17.316270", "score": "0.9912", "loss": "0.0159", "code": "void main(String[]args){if(1)(\"\").println(\"\"+\"\");result(data);(result);}", "n_tokens": 38, "n_pass": [520, 53, 53]}
{"time": "2021-02-14 20:34:20.802680", "score": "0.992", "loss": "0.0134", "code": "void main(String[]args){if(1)(\"\").println(\"\"+\"\");(data);(result);}", "n_tokens": 37, "n_pass": [556, 54, 54]}

Minimal simplified code:
void main(String[]args){if(1)("").println(""+"");(data);(result);}

