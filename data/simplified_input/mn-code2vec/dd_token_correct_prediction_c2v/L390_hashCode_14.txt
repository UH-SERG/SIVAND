
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/OpenRock__OpenAM/openam-entitlements/src/main/java/org/forgerock/openam/entitlement/conditions/environment/SimpleTimeCondition_hashCode.java
method_name = hashCode
method_body = @Override public int hashCode() { int hc = super.hashCode(); hc = 31 * hc + startHour; hc = 31 * hc + startMinute; hc = 31 * hc + endHour; hc = 31 * hc + endMinute; hc = 31 * hc + startDayInt; hc = 31 * hc + endDayInt; if (startDateCal != null) { hc = 31 * hc + startDateCal.hashCode(); } if (endDateCal != null) { hc = 31 * hc + endDateCal.hashCode(); } if (enforcementTZ != null) { hc = 31 * hc + enforcementTZ.hashCode(); } return hc; }
predict, score, loss = hashCode, 0.9997054934501648, 0.0003097769513260573

Trace of simplified code(s):
{"time": "2021-02-14 17:35:01.301688", "score": "0.9999", "loss": "0.0001", "code": "@Override public int hashCode() { int hc = super.hashCode(); hc = 31 * hc + startHour; hc = 31 * hc + startMinute; hc = 31 * hc + endHour; hc = 31 * hc + endMinute; hc = 31 * hc + startDayInt; hc = 31 * hc + endDayInt; if (startDateCal != null) { hc = 31 * hc + startDateCal.hashCode(); } if (endDateCal != null) { hc = 31 * hc + endDateCal.hashCode(); } if (enforcementTZ != null) { hc = 31 * hc + enforcementTZ.hashCode(); } return hc; }", "n_tokens": 233, "n_pass": [1, 1, 1]}
{"time": "2021-02-14 17:35:04.418147", "score": "0.9997", "loss": "0.0003", "code": "@Override public int hashCode() { int hc = super.hashCode(); hc =hc = 31 * hc + endHour; hc = 31 * hc + endMinute; hc = 31 * hc + startDayInt; hc = 31 * hc + endDayInt; if (startDateCal != null) { hc = 31 * hc + startDateCal.hashCode(); } if (endDateCal != null) { hc = 31 * hc + endDateCal.hashCode(); } if (enforcementTZ != null) { hc = 31 * hc + enforcementTZ.hashCode(); } return hc; }", "n_tokens": 204, "n_pass": [21, 2, 2]}
{"time": "2021-02-14 17:35:07.096732", "score": "0.9996", "loss": "0.0004", "code": "@Override public int hashCode() { int hc = super.hashCode(); hc =endMinute; hc = 31 * hc + startDayInt; hc = 31 * hc + endDayInt; if (startDateCal != null) { hc = 31 * hc + startDateCal.hashCode(); } if (endDateCal != null) { hc = 31 * hc + endDateCal.hashCode(); } if (enforcementTZ != null) { hc = 31 * hc + enforcementTZ.hashCode(); } return hc; }", "n_tokens": 175, "n_pass": [22, 3, 3]}
{"time": "2021-02-14 17:35:09.792711", "score": "0.9998", "loss": "0.0002", "code": "@Override public int hashCode() { int hc = super.hashCode(); hc = + endDayInt; if (startDateCal != null) { hc = 31 * hc + startDateCal.hashCode(); } if (endDateCal != null) { hc = 31 * hc + endDateCal.hashCode(); } if (enforcementTZ != null) { hc = 31 * hc + enforcementTZ.hashCode(); } return hc; }", "n_tokens": 146, "n_pass": [23, 4, 4]}
{"time": "2021-02-14 17:35:12.452015", "score": "0.9999", "loss": "0.0001", "code": "@Override public int hashCode() { int hc = super.hashCode(); hc = + endDayInt; if (startDateCal != null) { hc = 31 * hc31 * hc + endDateCal.hashCode(); } if (enforcementTZ != null) { hc = 31 * hc + enforcementTZ.hashCode(); } return hc; }", "n_tokens": 117, "n_pass": [25, 5, 5]}
{"time": "2021-02-14 17:35:15.145714", "score": "0.9999", "loss": "0.0001", "code": "@Override public int hashCode() { int hc = super.hashCode(); hc = + endDayInt; if (startDateCal != null) { hc = 31 *hc + endDateCal.hashCode(); } if (enforcementTZ != null) { hc = 31 * hc + enforcementTZ.hashCode(); } return hc; }", "n_tokens": 110, "n_pass": [62, 6, 6]}
{"time": "2021-02-14 17:35:17.808300", "score": "0.9999", "loss": "0.0001", "code": "@Override public int hashCode() { int hc = super.hashCode(); hc = + endDayInt; if (startDateCal != null) { hc = 31 *hc + endDateCal.hashCode(); } if (enforcementTZ != null) { hc =  enforcementTZ.hashCode(); } return hc; }", "n_tokens": 102, "n_pass": [67, 7, 7]}
{"time": "2021-02-14 17:35:20.885288", "score": "0.9997", "loss": "0.0004", "code": "@Override public int hashCode() { inthashCode(); hc = + endDayInt; if (startDateCal != null) { hc = 31 *hc + endDateCal.hashCode(); } if (enforcementTZ != null) { hc =  enforcementTZ.hashCode(); } return hc; }", "n_tokens": 95, "n_pass": [72, 8, 8]}
{"time": "2021-02-14 17:35:24.395159", "score": "0.9998", "loss": "0.0003", "code": "@Override public int hashCode() { inthashCode hc = + endDayInt; if (startDateCal != null) { hc = 31 *hc + endDateCal.hashCode(); } if (enforcementTZ != null) { hc =  enforcementTZ.hashCode(); } return hc; }", "n_tokens": 92, "n_pass": [113, 9, 9]}
{"time": "2021-02-14 17:35:27.049971", "score": "0.9997", "loss": "0.0004", "code": "@Override public int hashCode() { inthashCode= + endDayInt; if (startDateCal != null) { hc = 31 *hc + endDateCal.hashCode(); } if (enforcementTZ != null) { hc =  enforcementTZ.hashCode(); } return hc; }", "n_tokens": 89, "n_pass": [114, 10, 10]}
{"time": "2021-02-14 17:35:29.714550", "score": "0.9998", "loss": "0.0003", "code": "@Override public int hashCode() { inthashCode endDayInt; if (startDateCal != null) { hc = 31 *hc + endDateCal.hashCode(); } if (enforcementTZ != null) { hc =  enforcementTZ.hashCode(); } return hc; }", "n_tokens": 86, "n_pass": [115, 11, 11]}
{"time": "2021-02-14 17:35:32.392840", "score": "0.9973", "loss": "0.0032", "code": "@Override public int hashCode() { inthashCode endDayInt; if ( null) { hc = 31 *hc + endDateCal.hashCode(); } if (enforcementTZ != null) { hc =  enforcementTZ.hashCode(); } return hc; }", "n_tokens": 82, "n_pass": [118, 12, 12]}
{"time": "2021-02-14 17:35:35.459950", "score": "0.9981", "loss": "0.0023", "code": "@Override public int hashCode() { inthashCode endDayInt; if ( null) { hc = 31+ endDateCal.hashCode(); } if (enforcementTZ != null) { hc =  enforcementTZ.hashCode(); } return hc; }", "n_tokens": 78, "n_pass": [122, 13, 13]}
{"time": "2021-02-14 17:35:38.118397", "score": "0.9982", "loss": "0.0021", "code": "@Override public int hashCode() { inthashCode endDayInt; if ( null) { hc = 31+ endDateCal.hashCode(); } if (enforcementTZ ) { hc =  enforcementTZ.hashCode(); } return hc; }", "n_tokens": 74, "n_pass": [127, 14, 14]}
{"time": "2021-02-14 17:35:40.782462", "score": "0.995", "loss": "0.0054", "code": "@Override public int hashCode() { inthashCode endDayInt; if ( null) { hc = 31+ endDateCal.hashCode(); } if (enforcementTZ ) {  enforcementTZ.hashCode(); } return hc; }", "n_tokens": 70, "n_pass": [129, 15, 15]}
{"time": "2021-02-14 17:35:43.409468", "score": "0.9546", "loss": "0.0496", "code": "public int hashCode() { inthashCode endDayInt; if ( null) { hc = 31+ endDateCal.hashCode(); } if (enforcementTZ ) {  enforcementTZ.hashCode(); } return hc; }", "n_tokens": 67, "n_pass": [134, 16, 16]}
{"time": "2021-02-14 17:35:46.462454", "score": "0.9324", "loss": "0.0764", "code": "public int hashCode() { endDayInt; if ( null) { hc = 31+ endDateCal.hashCode(); } if (enforcementTZ ) {  enforcementTZ.hashCode(); } return hc; }", "n_tokens": 64, "n_pass": [138, 17, 17]}
{"time": "2021-02-14 17:35:49.114461", "score": "0.931", "loss": "0.078", "code": "public int hashCode() { if ( null) { hc = 31+ endDateCal.hashCode(); } if (enforcementTZ ) {  enforcementTZ.hashCode(); } return hc; }", "n_tokens": 61, "n_pass": [139, 18, 18]}
{"time": "2021-02-14 17:35:53.312739", "score": "0.9984", "loss": "0.003", "code": "public int hashCode() { if ( null) { hc = + endDateCal.hashCode(); } if (enforcementTZ ) {  enforcementTZ.hashCode(); } return hc; }", "n_tokens": 59, "n_pass": [195, 19, 19]}
{"time": "2021-02-14 17:35:55.929011", "score": "0.9948", "loss": "0.0075", "code": "public int hashCode() { if ( null) { hc = endDateCal.hashCode(); } if (enforcementTZ ) {  enforcementTZ.hashCode(); } return hc; }", "n_tokens": 57, "n_pass": [196, 20, 20]}
{"time": "2021-02-14 17:35:58.559686", "score": "0.9991", "loss": "0.0013", "code": "public int hashCode() { if ( null) { hc = hashCode(); } if (enforcementTZ ) {  enforcementTZ.hashCode(); } return hc; }", "n_tokens": 55, "n_pass": [197, 21, 21]}
{"time": "2021-02-14 17:36:01.196530", "score": "0.9989", "loss": "0.0015", "code": "public int hashCode() { if ( null) { hc = hashCode(); } if (enforcementTZ ) {  enforcementTZ(); } return hc; }", "n_tokens": 53, "n_pass": [207, 22, 22]}
{"time": "2021-02-14 17:36:03.863456", "score": "0.9994", "loss": "0.0008", "code": "public int hashCode() { if ( null) { hc = hashCode(); } if (enforcementTZ ) {  enforcementTZ; } return hc; }", "n_tokens": 51, "n_pass": [208, 23, 23]}
{"time": "2021-02-14 17:36:06.502830", "score": "0.9998", "loss": "0.0002", "code": "public int hashCode() { if ( null) { hc = hashCode(); } if (enforcementTZ ) {  enforcementTZ; } hc; }", "n_tokens": 49, "n_pass": [211, 24, 24]}
{"time": "2021-02-14 17:36:09.161724", "score": "0.9998", "loss": "0.0002", "code": "public int hashCode() { if ( null) { hc = hashCode(); } if (enforcementTZ ) {  enforcementTZ; }  }", "n_tokens": 47, "n_pass": [212, 25, 25]}
{"time": "2021-02-14 17:36:11.793092", "score": "0.9998", "loss": "0.0002", "code": " int hashCode() { if ( null) { hc = hashCode(); } if (enforcementTZ ) {  enforcementTZ; }  }", "n_tokens": 46, "n_pass": [214, 26, 26]}
{"time": "2021-02-14 17:36:14.418440", "score": "0.9998", "loss": "0.0002", "code": "int hashCode() { if ( null) { hc = hashCode(); } if (enforcementTZ ) {  enforcementTZ; }  }", "n_tokens": 45, "n_pass": [215, 27, 27]}
{"time": "2021-02-14 17:36:17.438994", "score": "0.9998", "loss": "0.0002", "code": "int hashCode() { if ( null) { hc = hashCode(); } if (enforcementTZ ) { ; }  }", "n_tokens": 43, "n_pass": [235, 28, 28]}
{"time": "2021-02-14 17:36:20.063319", "score": "0.9998", "loss": "0.0002", "code": "int hashCode() { if ( null) { hc = hashCode(); } if (enforcementTZ ) { }  }", "n_tokens": 41, "n_pass": [236, 29, 29]}
{"time": "2021-02-14 17:36:29.898459", "score": "0.9998", "loss": "0.0002", "code": "int hashCode() { if ( null) { hc = hashCode(); } if (enforcementTZ ) { } }", "n_tokens": 40, "n_pass": [299, 30, 30]}
{"time": "2021-02-14 17:36:32.517152", "score": "0.9998", "loss": "0.0002", "code": "int hashCode() { if ( null) { hc = hashCode(); } if (enforcementTZ ) { }}", "n_tokens": 39, "n_pass": [300, 31, 31]}
{"time": "2021-02-14 17:36:35.934720", "score": "0.9998", "loss": "0.0002", "code": "int hashCode(){ if ( null) { hc = hashCode(); } if (enforcementTZ ) { }}", "n_tokens": 38, "n_pass": [307, 32, 32]}
{"time": "2021-02-14 17:36:38.553848", "score": "0.9998", "loss": "0.0002", "code": "int hashCode(){if ( null) { hc = hashCode(); } if (enforcementTZ ) { }}", "n_tokens": 37, "n_pass": [309, 33, 33]}
{"time": "2021-02-14 17:36:41.167415", "score": "0.9998", "loss": "0.0002", "code": "int hashCode(){if( null) { hc = hashCode(); } if (enforcementTZ ) { }}", "n_tokens": 36, "n_pass": [311, 34, 34]}
{"time": "2021-02-14 17:36:43.800141", "score": "0.9998", "loss": "0.0002", "code": "int hashCode(){if(null) { hc = hashCode(); } if (enforcementTZ ) { }}", "n_tokens": 35, "n_pass": [313, 35, 35]}
{"time": "2021-02-14 17:36:46.417521", "score": "0.9998", "loss": "0.0002", "code": "int hashCode(){if(null){ hc = hashCode(); } if (enforcementTZ ) { }}", "n_tokens": 34, "n_pass": [316, 36, 36]}
{"time": "2021-02-14 17:36:49.037401", "score": "0.9998", "loss": "0.0002", "code": "int hashCode(){if(null){hc = hashCode(); } if (enforcementTZ ) { }}", "n_tokens": 33, "n_pass": [318, 37, 37]}
{"time": "2021-02-14 17:36:51.656620", "score": "0.9998", "loss": "0.0002", "code": "int hashCode(){if(null){hc= hashCode(); } if (enforcementTZ ) { }}", "n_tokens": 32, "n_pass": [320, 38, 38]}
{"time": "2021-02-14 17:36:54.266321", "score": "0.9998", "loss": "0.0002", "code": "int hashCode(){if(null){hc=hashCode(); } if (enforcementTZ ) { }}", "n_tokens": 31, "n_pass": [322, 39, 39]}
{"time": "2021-02-14 17:36:56.880067", "score": "0.9998", "loss": "0.0002", "code": "int hashCode(){if(null){hc=hashCode();} if (enforcementTZ ) { }}", "n_tokens": 30, "n_pass": [327, 40, 40]}
{"time": "2021-02-14 17:36:59.492750", "score": "0.9998", "loss": "0.0002", "code": "int hashCode(){if(null){hc=hashCode();}if (enforcementTZ ) { }}", "n_tokens": 29, "n_pass": [329, 41, 41]}
{"time": "2021-02-14 17:37:02.120455", "score": "0.9998", "loss": "0.0002", "code": "int hashCode(){if(null){hc=hashCode();}if(enforcementTZ ) { }}", "n_tokens": 28, "n_pass": [331, 42, 42]}
{"time": "2021-02-14 17:37:04.739811", "score": "0.9998", "loss": "0.0002", "code": "int hashCode(){if(null){hc=hashCode();}if(enforcementTZ) { }}", "n_tokens": 27, "n_pass": [334, 43, 43]}
{"time": "2021-02-14 17:37:07.361551", "score": "0.9998", "loss": "0.0002", "code": "int hashCode(){if(null){hc=hashCode();}if(enforcementTZ){ }}", "n_tokens": 26, "n_pass": [336, 44, 44]}
{"time": "2021-02-14 17:37:09.977068", "score": "0.9998", "loss": "0.0002", "code": "int hashCode(){if(null){hc=hashCode();}if(enforcementTZ){}}", "n_tokens": 25, "n_pass": [338, 45, 45]}

Minimal simplified code:
int hashCode(){if(null){hc=hashCode();}if(enforcementTZ){}}

