
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/dronekit__dronekit-android/dependencyLibs/Mavlink/src/com/MAVLink/common/msg_attitude_quaternion_pack.java
method_name = pack
method_body = public MAVLinkPacket pack() { MAVLinkPacket packet = new MAVLinkPacket(MAVLINK_MSG_LENGTH); packet.sysid = 255; packet.compid = 190; packet.msgid = MAVLINK_MSG_ID_ATTITUDE_QUATERNION; packet.payload.putUnsignedInt(time_boot_ms); packet.payload.putFloat(q1); packet.payload.putFloat(q2); packet.payload.putFloat(q3); packet.payload.putFloat(q4); packet.payload.putFloat(rollspeed); packet.payload.putFloat(pitchspeed); packet.payload.putFloat(yawspeed); return packet; }
predict, score, loss = pack, 0.9999642372131348, 6.246371776796877e-05

Trace of simplified code(s):
{"time": "2021-02-15 00:44:49.698491", "score": "1.0", "loss": "0.0", "code": "public MAVLinkPacket pack() { MAVLinkPacket packet = new MAVLinkPacket(MAVLINK_MSG_LENGTH); packet.sysid = 255; packet.compid = 190; packet.msgid = MAVLINK_MSG_ID_ATTITUDE_QUATERNION; packet.payload.putUnsignedInt(time_boot_ms); packet.payload.putFloat(q1); packet.payload.putFloat(q2); packet.payload.putFloat(q3); packet.payload.putFloat(q4); packet.payload.putFloat(rollspeed); packet.payload.putFloat(pitchspeed); packet.payload.putFloat(yawspeed); return packet; }", "n_tokens": 161, "n_pass": [1, 1, 1]}
{"time": "2021-02-15 00:44:52.777811", "score": "0.9995", "loss": "0.0006", "code": "public MAVLinkPacket pack() { MAVLinkPacket packet = new MAVLinkPacket(MAVLINK_MSG_LENGTH); packet.sysid = 255; packetID_ATTITUDE_QUATERNION; packet.payload.putUnsignedInt(time_boot_ms); packet.payload.putFloat(q1); packet.payload.putFloat(q2); packet.payload.putFloat(q3); packet.payload.putFloat(q4); packet.payload.putFloat(rollspeed); packet.payload.putFloat(pitchspeed); packet.payload.putFloat(yawspeed); return packet; }", "n_tokens": 141, "n_pass": [22, 2, 2]}
{"time": "2021-02-15 00:44:55.435740", "score": "0.9999", "loss": "0.0002", "code": "public MAVLinkPacket pack() { MAVLinkPacket packet = new MAVLinkPacket(MAVLINK_MSG_LENGTH); packet.sysid = 255; packetID_ATTITUDE_QUATERNION; packet.payload.putUnsignedInt(time_boot_ms); packet.payload.putFloat(q1); packet.payload.putFloat(q2q4); packet.payload.putFloat(rollspeed); packet.payload.putFloat(pitchspeed); packet.payload.putFloat(yawspeed); return packet; }", "n_tokens": 121, "n_pass": [24, 3, 3]}
{"time": "2021-02-15 00:44:58.124426", "score": "1.0", "loss": "0.0", "code": "public MAVLinkPacket pack() { MAVLinkPacket packet = new MAVLinkPacket(MAVLINK_MSG_LENGTH); packet.sysid = 255; packetID_ATTITUDE_QUATERNION; packet.payload.putUnsignedInt(time_boot_ms); packet.payload.putFloat(q1); packet.payload.putFloat(q2q4); packet.payload.putFloat(pitchspeed); packet.payload.putFloat(yawspeed); return packet; }", "n_tokens": 111, "n_pass": [44, 4, 4]}
{"time": "2021-02-15 00:45:00.798643", "score": "1.0", "loss": "0.0", "code": "public MAVLinkPacket pack() { MAVLinkPacket packet = new MAVLinkPacket(MAVLINK_MSG_LENGTH); packet.sysid = 255; packetID_ATTITUDE_QUATERNION; packet.payload.putUnsignedInt(time_boot_ms); packet.payload.putFloat(q1); packet.payload.putFloat(q2q4); packet.payload.putFloat(yawspeed); return packet; }", "n_tokens": 101, "n_pass": [45, 5, 5]}
{"time": "2021-02-15 00:45:03.467314", "score": "1.0", "loss": "0.0", "code": "public MAVLinkPacket pack() { MAVLinkPacket packet = new MAVLinkPacket(MAVLINK_MSG_LENGTH); packet.ID_ATTITUDE_QUATERNION; packet.payload.putUnsignedInt(time_boot_ms); packet.payload.putFloat(q1); packet.payload.putFloat(q2q4); packet.payload.putFloat(yawspeed); return packet; }", "n_tokens": 91, "n_pass": [50, 6, 6]}
{"time": "2021-02-15 00:45:06.132194", "score": "1.0", "loss": "0.0", "code": "public MAVLinkPacket pack() { MAVLinkPacket packet = new MAVLinkPacket(MAVLINK_MSG_LENGTH); packet.ID_ATTITUDE_QUATERNION; packet.payload.putUnsignedInt(time_boot_ms);; packet.payload.putFloat(q2q4); packet.payload.putFloat(yawspeed); return packet; }", "n_tokens": 81, "n_pass": [53, 7, 7]}
{"time": "2021-02-15 00:45:08.884641", "score": "1.0", "loss": "0.0", "code": "public MAVLinkPacket pack() { MAVLinkPacket packet = new MAVLinkPacket(MAVLINK_MSG_LENGTH); packet.ID_ATTITUDE_QUATERNION; packet.payload; packet.payload.putFloat(q2q4); packet.payload.putFloat(yawspeed); return packet; }", "n_tokens": 71, "n_pass": [61, 8, 8]}
{"time": "2021-02-15 00:45:11.795433", "score": "1.0", "loss": "0.0", "code": "public MAVLinkPacket pack() { MAVLinkPacket packet = new MAVLinkPacket(MAVLINK_MSG_LENGTH); packet.ID_ATTITUDE_QUATERNION; packet.payload.putFloat(q2q4); packet.payload.putFloat(yawspeed); return packet; }", "n_tokens": 66, "n_pass": [83, 9, 9]}
{"time": "2021-02-15 00:45:14.448717", "score": "1.0", "loss": "0.0", "code": "public MAVLinkPacket pack() { MAVLinkPacket packet = new MAVLinkPacket(MAVLINK_MSG_LENGTH); packet.ID_ATTITUDE_QUATERNION; packet.payload.putFloat(q2q4); (yawspeed); return packet; }", "n_tokens": 61, "n_pass": [85, 10, 10]}
{"time": "2021-02-15 00:45:17.090967", "score": "1.0", "loss": "0.0", "code": "public MAVLinkPacket pack() { MAVLinkPacket packet = new MAVLinkPacket(MAVLINK_MSG_LENGTH); packet.ID_ATTITUDE_QUATERNION; packet.payload.putFloat(q2q4); return packet; }", "n_tokens": 56, "n_pass": [86, 11, 11]}
{"time": "2021-02-15 00:45:19.757061", "score": "1.0", "loss": "0.0", "code": "public MAVLinkPacket pack() {  new MAVLinkPacket(MAVLINK_MSG_LENGTH); packet.ID_ATTITUDE_QUATERNION; packet.payload.putFloat(q2q4); return packet; }", "n_tokens": 51, "n_pass": [90, 12, 12]}
{"time": "2021-02-15 00:45:22.396585", "score": "0.9963", "loss": "0.0041", "code": "public MAVLinkPacket pack() {  new MAVLinkPacket(); packet.ID_ATTITUDE_QUATERNION; packet.payload.putFloat(q2q4); return packet; }", "n_tokens": 46, "n_pass": [92, 13, 13]}
{"time": "2021-02-15 00:45:25.043016", "score": "0.9984", "loss": "0.0019", "code": "public MAVLinkPacket pack() {  new MAVLinkPacket(); packet.ID_ATTITUDE_QUATERNION.putFloat(q2q4); return packet; }", "n_tokens": 41, "n_pass": [95, 14, 14]}
{"time": "2021-02-15 00:45:27.707421", "score": "0.999", "loss": "0.0026", "code": "public MAVLinkPacket pack() {  new MAVLinkPacket(); packet.ID_ATTITUDEputFloat(q2q4); return packet; }", "n_tokens": 38, "n_pass": [120, 15, 15]}
{"time": "2021-02-15 00:45:30.360818", "score": "0.9993", "loss": "0.0015", "code": "public MAVLinkPacket pack() {  new MAVLinkPacket(); packet.ID_ATTITUDEputFloat(q); return packet; }", "n_tokens": 35, "n_pass": [122, 16, 16]}
{"time": "2021-02-15 00:45:33.007899", "score": "0.9994", "loss": "0.0009", "code": "public MAVLinkPacket pack() {  new MAVLinkPacket(); packet.ID_ATTITUDEputFloat(q); ; }", "n_tokens": 32, "n_pass": [124, 17, 17]}
{"time": "2021-02-15 00:45:35.628193", "score": "0.9994", "loss": "0.0009", "code": "MAVLinkPacket pack() {  new MAVLinkPacket(); packet.ID_ATTITUDEputFloat(q); ; }", "n_tokens": 30, "n_pass": [126, 18, 18]}
{"time": "2021-02-15 00:45:38.626149", "score": "0.9998", "loss": "0.0002", "code": "MAVLinkPacket pack() {  MAVLinkPacket(); packet.ID_ATTITUDEputFloat(q); ; }", "n_tokens": 28, "n_pass": [131, 19, 19]}
{"time": "2021-02-15 00:45:41.249050", "score": "0.9986", "loss": "0.0016", "code": "MAVLinkPacket pack() {  MAVLinkPacket();ID_ATTITUDEputFloat(q); ; }", "n_tokens": 25, "n_pass": [134, 20, 20]}
{"time": "2021-02-15 00:45:43.859734", "score": "0.9959", "loss": "0.0042", "code": "MAVLinkPacket pack() {  MAVLinkPacket();putFloat(q); ; }", "n_tokens": 22, "n_pass": [135, 21, 21]}
{"time": "2021-02-15 00:45:46.860983", "score": "0.9935", "loss": "0.0115", "code": "MAVLinkPacket pack() {  MAVLinkPacketputFloat(q); ; }", "n_tokens": 19, "n_pass": [144, 22, 22]}
{"time": "2021-02-15 00:45:49.873758", "score": "0.8604", "loss": "0.1515", "code": "MAVLinkPacket pack() { putFloat(q); ; }", "n_tokens": 17, "n_pass": [152, 23, 23]}
{"time": "2021-02-15 00:45:54.357627", "score": "0.9963", "loss": "0.0073", "code": "MAVLinkPacket pack() { (q); ; }", "n_tokens": 16, "n_pass": [174, 24, 24]}
{"time": "2021-02-15 00:45:56.957789", "score": "0.9963", "loss": "0.0073", "code": "MAVLinkPacket pack() { (q); }", "n_tokens": 14, "n_pass": [178, 25, 25]}
{"time": "2021-02-15 00:46:00.770193", "score": "0.9963", "loss": "0.0073", "code": "MAVLinkPacket pack(){ (q); }", "n_tokens": 13, "n_pass": [185, 26, 26]}
{"time": "2021-02-15 00:46:03.387680", "score": "0.9963", "loss": "0.0073", "code": "MAVLinkPacket pack(){(q); }", "n_tokens": 12, "n_pass": [187, 27, 27]}
{"time": "2021-02-15 00:46:07.880370", "score": "0.9963", "loss": "0.0073", "code": "MAVLinkPacket pack(){(q);}", "n_tokens": 11, "n_pass": [204, 28, 28]}

Minimal simplified code:
MAVLinkPacket pack(){(q);}

