
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/wso2-attic__product-emm/modules/mobile-agents/android/app-catalog/volley/src/main/java/com/android/volley/toolbox/DiskBasedCache_writeInt.java
method_name = writeInt
method_body = static void writeInt(OutputStream os, int n) throws IOException { os.write((n >> 0) & 0xff); os.write((n >> 8) & 0xff); os.write((n >> 16) & 0xff); os.write((n >> 24) & 0xff); }
predict, score, loss = writeInt, 0.9988068342208862, 0.0012832987122237682

Trace of simplified code(s):
{"time": "2021-02-16 04:04:28.317787", "score": "0.9988", "loss": "0.0013", "code": "static void writeInt(OutputStream os, int n) throws IOException { os.write((n >> 0) & 0xff); os.write((n >> 8) & 0xff); os.write((n >> 16) & 0xff); os.write((n >> 24) & 0xff); }", "n_tokens": 105, "n_pass": [1, 1, 1]}
{"time": "2021-02-16 04:04:30.874306", "score": "0.9992", "loss": "0.0008", "code": "static void writeInt(OutputStream os, int n) throws IOException { os.write(); os.write((n >> 8) & 0xff); os.write((n >> 16) & 0xff); os.write((n >> 24) & 0xff); }", "n_tokens": 92, "n_pass": [22, 2, 2]}
{"time": "2021-02-16 04:04:33.454352", "score": "0.9994", "loss": "0.0007", "code": "static void writeInt(OutputStream os, int n) throws IOException { os.write().write((n >> 8) & 0xff); os.write((n >> 16) & 0xff); os.write((n >> 24) & 0xff); }", "n_tokens": 89, "n_pass": [86, 3, 3]}
{"time": "2021-02-16 04:04:36.031307", "score": "0.9994", "loss": "0.0006", "code": "static void writeInt(OutputStream os, int n) throws IOException { os.write().write((n >> 8) & 0xff);write((n >> 16) & 0xff); os.write((n >> 24) & 0xff); }", "n_tokens": 86, "n_pass": [93, 4, 4]}
{"time": "2021-02-16 04:04:38.587565", "score": "0.9991", "loss": "0.001", "code": "static void writeInt(OutputStream os, int n) throws IOException { os.write().write((n >> 8) & 0xff);write((n >6) & 0xff); os.write((n >> 24) & 0xff); }", "n_tokens": 83, "n_pass": [96, 5, 5]}
{"time": "2021-02-16 04:04:41.141428", "score": "0.5501", "loss": "0.6019", "code": "static void writeInt(OutputStream os, int n) throws IOException { os.write().write((n >> 8) & 0xff);write((n >6) & 0xff); os.write((n24) & 0xff); }", "n_tokens": 79, "n_pass": [101, 6, 6]}
{"time": "2021-02-16 04:04:43.689801", "score": "0.5025", "loss": "0.695", "code": "static void writeInt(OutputStream os, int n) throws IOException { os.write().write((n >> 8) & 0xff);write((n >6) & 0xff); os.write((n24) ); }", "n_tokens": 75, "n_pass": [103, 7, 7]}
{"time": "2021-02-16 04:04:49.143673", "score": "0.5013", "loss": "0.6974", "code": "static void writeInt(OutputStream os, int n) throws IOException { os.write().write((n >> 8) & 0xff);write((6) & 0xff); os.write((n24) ); }", "n_tokens": 72, "n_pass": [121, 9, 8]}
{"time": "2021-02-16 04:05:02.054527", "score": "0.5013", "loss": "0.6974", "code": "static void writeInt(OutputStream os, int n) throws IOException { os.write().write((n >> 8) & 0xff);write((6) & 0xff); os.write((n) ); }", "n_tokens": 70, "n_pass": [196, 13, 9]}
{"time": "2021-02-16 04:05:04.594393", "score": "0.5013", "loss": "0.6974", "code": " void writeInt(OutputStream os, int n) throws IOException { os.write().write((n >> 8) & 0xff);write((6) & 0xff); os.write((n) ); }", "n_tokens": 69, "n_pass": [199, 14, 10]}
{"time": "2021-02-16 04:05:07.136428", "score": "0.5013", "loss": "0.6974", "code": "void writeInt(OutputStream os, int n) throws IOException { os.write().write((n >> 8) & 0xff);write((6) & 0xff); os.write((n) ); }", "n_tokens": 68, "n_pass": [200, 15, 11]}
{"time": "2021-02-16 04:05:10.415951", "score": "0.5013", "loss": "0.6974", "code": "void writeInt(OutputStream os,int n) throws IOException { os.write().write((n >> 8) & 0xff);write((6) & 0xff); os.write((n) ); }", "n_tokens": 67, "n_pass": [209, 16, 12]}
{"time": "2021-02-16 04:05:12.955468", "score": "0.5013", "loss": "0.6974", "code": "void writeInt(OutputStream os,int n)throws IOException { os.write().write((n >> 8) & 0xff);write((6) & 0xff); os.write((n) ); }", "n_tokens": 66, "n_pass": [214, 17, 13]}
{"time": "2021-02-16 04:05:18.057941", "score": "0.5818", "loss": "0.5696", "code": "void writeInt(OutputStream os,int n)throws IOException { os.write().write((n> 8) & 0xff);write((6) & 0xff); os.write((n) ); }", "n_tokens": 64, "n_pass": [223, 19, 14]}
{"time": "2021-02-16 04:05:20.595710", "score": "0.5812", "loss": "0.5704", "code": "void writeInt(OutputStream os,int n)throws IOException { os.write().write((n8) & 0xff);write((6) & 0xff); os.write((n) ); }", "n_tokens": 62, "n_pass": [224, 20, 15]}
{"time": "2021-02-16 04:05:23.128342", "score": "0.4979", "loss": "0.7484", "code": "void writeInt(OutputStream os,int n)throws IOException { os.write().write((n8) 0xff);write((6) & 0xff); os.write((n) ); }", "n_tokens": 60, "n_pass": [226, 21, 16]}
{"time": "2021-02-16 04:05:25.665643", "score": "0.3873", "loss": "0.9689", "code": "void writeInt(OutputStream os,int n)throws IOException { os.write().write((n8)xff);write((6) & 0xff); os.write((n) ); }", "n_tokens": 58, "n_pass": [227, 22, 17]}
{"time": "2021-02-16 04:05:34.013937", "score": "0.3748", "loss": "1.0017", "code": "void writeInt(OutputStream os,int n)throws IOException { write().write((n8)xff);write((6) & 0xff); os.write((n) ); }", "n_tokens": 56, "n_pass": [257, 25, 18]}
{"time": "2021-02-16 04:05:46.005726", "score": "0.3748", "loss": "1.0017", "code": "void writeInt(OutputStream os,int n)throws IOException { write().write((n)xff);write((6) & 0xff); os.write((n) ); }", "n_tokens": 55, "n_pass": [338, 28, 19]}
{"time": "2021-02-16 04:05:48.538405", "score": "0.4738", "loss": "0.8111", "code": "void writeInt(OutputStream os,int n)throws IOException { write().write((n));write((6) & 0xff); os.write((n) ); }", "n_tokens": 54, "n_pass": [339, 29, 20]}
{"time": "2021-02-16 04:05:53.612169", "score": "0.4738", "loss": "0.8111", "code": "void writeInt(OutputStream os,int n)throws IOException { write().write((n));write((6)& 0xff); os.write((n) ); }", "n_tokens": 53, "n_pass": [347, 31, 21]}
{"time": "2021-02-16 04:05:56.161407", "score": "0.4738", "loss": "0.8111", "code": "void writeInt(OutputStream os,int n)throws IOException { write().write((n));write((6)&0xff); os.write((n) ); }", "n_tokens": 52, "n_pass": [349, 32, 22]}
{"time": "2021-02-16 04:06:01.275453", "score": "0.4212", "loss": "0.9773", "code": "void writeInt(OutputStream os,int n)throws IOException { write().write((n));write((6)&0); os.write((n) ); }", "n_tokens": 51, "n_pass": [351, 34, 23]}
{"time": "2021-02-16 04:06:03.811199", "score": "0.4212", "loss": "0.9773", "code": "void writeInt(OutputStream os,int n)throws IOException { write().write((n));write((6)&0);os.write((n) ); }", "n_tokens": 50, "n_pass": [354, 35, 24]}
{"time": "2021-02-16 04:06:06.366118", "score": "0.4508", "loss": "0.8805", "code": "void writeInt(OutputStream os,int n)throws IOException { write().write((n));write((6)&0);oswrite((n) ); }", "n_tokens": 49, "n_pass": [356, 36, 25]}
{"time": "2021-02-16 04:06:08.924103", "score": "0.4761", "loss": "0.8301", "code": "void writeInt(OutputStream os,int n)throws IOException { write().write((n));write((6)&0);os((n) ); }", "n_tokens": 48, "n_pass": [357, 37, 26]}
{"time": "2021-02-16 04:06:11.463415", "score": "0.4761", "loss": "0.8301", "code": "void writeInt(OutputStream os,int n)throws IOException { write().write((n));write((6)&0);os((n)); }", "n_tokens": 47, "n_pass": [362, 38, 27]}
{"time": "2021-02-16 04:06:14.010429", "score": "0.4761", "loss": "0.8301", "code": "void writeInt(OutputStream os,int n)throws IOException { write().write((n));write((6)&0);os((n));}", "n_tokens": 46, "n_pass": [365, 39, 28]}
{"time": "2021-02-16 04:06:17.258492", "score": "0.4761", "loss": "0.8301", "code": "void writeInt(OutputStream os,int n)throws IOException{ write().write((n));write((6)&0);os((n));}", "n_tokens": 45, "n_pass": [382, 40, 29]}
{"time": "2021-02-16 04:06:19.784473", "score": "0.4761", "loss": "0.8301", "code": "void writeInt(OutputStream os,int n)throws IOException{write().write((n));write((6)&0);os((n));}", "n_tokens": 44, "n_pass": [384, 41, 30]}
{"time": "2021-02-16 04:06:24.850161", "score": "0.448", "loss": "0.8716", "code": "void writeInt(OutputStream os,int n)throws IOException{write().write((n));write((6)&0);((n));}", "n_tokens": 43, "n_pass": [405, 43, 31]}

Minimal simplified code:
void writeInt(OutputStream os,int n)throws IOException{write().write((n));write((6)&0);((n));}

