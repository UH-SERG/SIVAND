
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/droidefense__engine/mods/memapktool/src/main/java/org/jf/baksmali/Adaptors/CatchMethodItem_writeTo.java
method_name = writeTo
method_body = @Override public boolean writeTo(IndentingWriter writer) throws IOException { if (exceptionType == null) { writer.write(".catchall"); } else { writer.write(".catch "); writer.write(exceptionType); } writer.write(" {"); tryStartLabel.writeTo(writer); writer.write(" .. "); tryEndLabel.writeTo(writer); writer.write("} "); handlerLabel.writeTo(writer); return true; }
predict, score, loss = writeTo, 0.8649506568908691, 0.14613893628120422

Trace of simplified code(s):
{"time": "2021-02-16 04:26:41.666754", "score": "0.8025", "loss": "0.2337", "code": "@Override public boolean writeTo(IndentingWriter writer) throws IOException { if (exceptionType == null) { writer.write(\".catchall\"); } else { writer.write(\".catch \"); writer.write(exceptionType); } writer.write(\" {\"); tryStartLabel.writeTo(writer); writer.write(\" .. \"); tryEndLabel.writeTo(writer); writer.write(\"} \"); handlerLabel.writeTo(writer); return true; }", "n_tokens": 137, "n_pass": [1, 1, 1]}
{"time": "2021-02-16 04:26:44.237801", "score": "0.879", "loss": "0.131", "code": "@Override public boolean writeTo(IndentingWriter writer) throws IOException { if (exceptionType == null) { writer; } writer.write(\" {\"); tryStartLabel.writeTo(writer); writer.write(\" .. \"); tryEndLabel.writeTo(writer); writer.write(\"} \"); handlerLabel.writeTo(writer); return true; }", "n_tokens": 103, "n_pass": [9, 2, 2]}
{"time": "2021-02-16 04:26:47.184592", "score": "0.8951", "loss": "0.1128", "code": "@Override public boolean writeTo(IndentingWriter writer) throws IOException { if (exceptionType == null) { writer; } writer.tryStartLabel.writeTo(writer); writer.write(\" .. \"); tryEndLabel.writeTo(writer); writer.write(\"} \"); handlerLabel.writeTo(writer); return true; }", "n_tokens": 94, "n_pass": [37, 3, 3]}
{"time": "2021-02-16 04:26:49.773098", "score": "0.5851", "loss": "0.5684", "code": "@Override public boolean writeTo(IndentingWriter writer) throws IOException { if (exceptionType == null) { writer; } writer.tryStartLabel.writeTo(writer); writer.write(\" .. \");(writer); writer.write(\"} \"); handlerLabel.writeTo(writer); return true; }", "n_tokens": 90, "n_pass": [76, 4, 4]}
{"time": "2021-02-16 04:26:52.336803", "score": "0.608", "loss": "0.5341", "code": "@Override public boolean writeTo(IndentingWriter writer) throws IOException { if (exceptionType == null) { writer; } writer.tryStartLabel.writeTo(writer); writer.write(\" .. \");writer.write(\"} \"); handlerLabel.writeTo(writer); return true; }", "n_tokens": 85, "n_pass": [77, 5, 5]}
{"time": "2021-02-16 04:26:54.905722", "score": "0.5481", "loss": "0.6521", "code": " boolean writeTo(IndentingWriter writer) throws IOException { if (exceptionType == null) { writer; } writer.tryStartLabel.writeTo(writer); writer.write(\" .. \");writer.write(\"} \"); handlerLabel.writeTo(writer); return true; }", "n_tokens": 81, "n_pass": [83, 6, 6]}
{"time": "2021-02-16 04:26:57.486571", "score": "0.5497", "loss": "0.6512", "code": " boolean writeTo(IndentingWriter writer) throws IOException { if (exceptionTypenull) { writer; } writer.tryStartLabel.writeTo(writer); writer.write(\" .. \");writer.write(\"} \"); handlerLabel.writeTo(writer); return true; }", "n_tokens": 77, "n_pass": [89, 7, 7]}
{"time": "2021-02-16 04:27:00.071129", "score": "0.5497", "loss": "0.6514", "code": " boolean writeTo(IndentingWriter writer) throws IOException { if (exceptionTypenull) {} writer.tryStartLabel.writeTo(writer); writer.write(\" .. \");writer.write(\"} \"); handlerLabel.writeTo(writer); return true; }", "n_tokens": 73, "n_pass": [91, 8, 8]}
{"time": "2021-02-16 04:27:02.974213", "score": "0.4891", "loss": "0.7634", "code": " boolean writeTo(IndentingWriter writer) throws IOException { if (exceptionTypenull) {} tryStartLabel.writeTo(writer); writer.write(\" .. \");writer.write(\"} \"); handlerLabel.writeTo(writer); return true; }", "n_tokens": 71, "n_pass": [144, 9, 9]}
{"time": "2021-02-16 04:27:05.554566", "score": "0.6067", "loss": "0.5418", "code": " boolean writeTo(IndentingWriter writer) throws IOException { if (exceptionTypenull) {} writeTo(writer); writer.write(\" .. \");writer.write(\"} \"); handlerLabel.writeTo(writer); return true; }", "n_tokens": 69, "n_pass": [145, 10, 10]}
{"time": "2021-02-16 04:27:08.171417", "score": "0.7217", "loss": "0.4083", "code": " boolean writeTo(IndentingWriter writer) throws IOException { if (exceptionTypenull) {} writeTo(writer); write(\" .. \");writer.write(\"} \"); handlerLabel.writeTo(writer); return true; }", "n_tokens": 67, "n_pass": [149, 11, 11]}
{"time": "2021-02-16 04:27:10.727169", "score": "0.5286", "loss": "0.6575", "code": " boolean writeTo(IndentingWriter writer) throws IOException { if (exceptionTypenull) {} writeTo(writer); write(\"  \");writer.write(\"} \"); handlerLabel.writeTo(writer); return true; }", "n_tokens": 65, "n_pass": [152, 12, 12]}
{"time": "2021-02-16 04:27:13.284875", "score": "0.5884", "loss": "0.5919", "code": " boolean writeTo(IndentingWriter writer) throws IOException { if (exceptionTypenull) {} writeTo(writer); write(\"  \");write(\"} \"); handlerLabel.writeTo(writer); return true; }", "n_tokens": 63, "n_pass": [155, 13, 13]}
{"time": "2021-02-16 04:27:15.854112", "score": "0.8764", "loss": "0.1441", "code": " boolean writeTo(IndentingWriter writer) throws IOException { if (exceptionTypenull) {} writeTo(writer); write(\"  \");write(\"} \");writeTo(writer); return true; }", "n_tokens": 60, "n_pass": [160, 14, 14]}
{"time": "2021-02-16 04:27:18.436515", "score": "0.7203", "loss": "0.3448", "code": " boolean writeTo(IndentingWriter writer) throws IOException { if (exceptionTypenull) {} writeTo(writer); write(\"  \");write(\"} \");writeTo(writer); ; }", "n_tokens": 57, "n_pass": [163, 15, 15]}
{"time": "2021-02-16 04:27:27.357148", "score": "0.7203", "loss": "0.3448", "code": " boolean writeTo(IndentingWriter writer) throws IOException { if (exceptionTypenull) {} writeTo(writer); write(\"  \");write(\"} \");writeTo(writer); }", "n_tokens": 55, "n_pass": [245, 16, 16]}
{"time": "2021-02-16 04:27:29.919022", "score": "0.7203", "loss": "0.3448", "code": "boolean writeTo(IndentingWriter writer) throws IOException { if (exceptionTypenull) {} writeTo(writer); write(\"  \");write(\"} \");writeTo(writer); }", "n_tokens": 54, "n_pass": [247, 17, 17]}
{"time": "2021-02-16 04:27:33.203324", "score": "0.7203", "loss": "0.3448", "code": "boolean writeTo(IndentingWriter writer)throws IOException { if (exceptionTypenull) {} writeTo(writer); write(\"  \");write(\"} \");writeTo(writer); }", "n_tokens": 53, "n_pass": [256, 18, 18]}
{"time": "2021-02-16 04:27:35.764343", "score": "0.7203", "loss": "0.3448", "code": "boolean writeTo(IndentingWriter writer)throws IOException{ if (exceptionTypenull) {} writeTo(writer); write(\"  \");write(\"} \");writeTo(writer); }", "n_tokens": 52, "n_pass": [260, 19, 19]}
{"time": "2021-02-16 04:27:38.316911", "score": "0.7203", "loss": "0.3448", "code": "boolean writeTo(IndentingWriter writer)throws IOException{if (exceptionTypenull) {} writeTo(writer); write(\"  \");write(\"} \");writeTo(writer); }", "n_tokens": 51, "n_pass": [262, 20, 20]}
{"time": "2021-02-16 04:27:40.871144", "score": "0.7203", "loss": "0.3448", "code": "boolean writeTo(IndentingWriter writer)throws IOException{if(exceptionTypenull) {} writeTo(writer); write(\"  \");write(\"} \");writeTo(writer); }", "n_tokens": 50, "n_pass": [264, 21, 21]}
{"time": "2021-02-16 04:27:43.423573", "score": "0.704", "loss": "0.3684", "code": "boolean writeTo(IndentingWriter writer)throws IOException{if(null) {} writeTo(writer); write(\"  \");write(\"} \");writeTo(writer); }", "n_tokens": 49, "n_pass": [266, 22, 22]}
{"time": "2021-02-16 04:27:45.978676", "score": "0.704", "loss": "0.3684", "code": "boolean writeTo(IndentingWriter writer)throws IOException{if(null){} writeTo(writer); write(\"  \");write(\"} \");writeTo(writer); }", "n_tokens": 48, "n_pass": [269, 23, 23]}
{"time": "2021-02-16 04:27:48.540591", "score": "0.704", "loss": "0.3684", "code": "boolean writeTo(IndentingWriter writer)throws IOException{if(null){}writeTo(writer); write(\"  \");write(\"} \");writeTo(writer); }", "n_tokens": 47, "n_pass": [272, 24, 24]}
{"time": "2021-02-16 04:27:51.097129", "score": "0.7526", "loss": "0.3115", "code": "boolean writeTo(IndentingWriter writer)throws IOException{if(null){}(writer); write(\"  \");write(\"} \");writeTo(writer); }", "n_tokens": 46, "n_pass": [273, 25, 25]}
{"time": "2021-02-16 04:27:54.034171", "score": "0.7526", "loss": "0.3115", "code": "boolean writeTo(IndentingWriter writer)throws IOException{if(null){}(writer);write(\"  \");write(\"} \");writeTo(writer); }", "n_tokens": 45, "n_pass": [278, 26, 26]}
{"time": "2021-02-16 04:27:59.126703", "score": "0.599", "loss": "0.547", "code": "boolean writeTo(IndentingWriter writer)throws IOException{if(null){}(writer);write(\" \");write(\"} \");writeTo(writer); }", "n_tokens": 44, "n_pass": [282, 28, 27]}
{"time": "2021-02-16 04:28:01.679741", "score": "0.6143", "loss": "0.5174", "code": "boolean writeTo(IndentingWriter writer)throws IOException{if(null){}(writer);write(\"\");write(\"} \");writeTo(writer); }", "n_tokens": 43, "n_pass": [283, 29, 28]}
{"time": "2021-02-16 04:28:06.784656", "score": "0.5623", "loss": "0.5765", "code": "boolean writeTo(IndentingWriter writer)throws IOException{if(null){}(writer);write(\"\");write(\" \");writeTo(writer); }", "n_tokens": 42, "n_pass": [290, 31, 29]}
{"time": "2021-02-16 04:28:09.366491", "score": "0.5637", "loss": "0.5738", "code": "boolean writeTo(IndentingWriter writer)throws IOException{if(null){}(writer);write(\"\");write(\"\");writeTo(writer); }", "n_tokens": 41, "n_pass": [291, 32, 30]}
{"time": "2021-02-16 04:28:11.910867", "score": "0.6917", "loss": "0.375", "code": "boolean writeTo(IndentingWriter writer)throws IOException{if(null){}(writer);write(\"\");write(\"\");(writer); }", "n_tokens": 40, "n_pass": [295, 33, 31]}
{"time": "2021-02-16 04:28:21.346006", "score": "0.6917", "loss": "0.375", "code": "boolean writeTo(IndentingWriter writer)throws IOException{if(null){}(writer);write(\"\");write(\"\");(writer);}", "n_tokens": 39, "n_pass": [340, 36, 32]}

Minimal simplified code:
boolean writeTo(IndentingWriter writer)throws IOException{if(null){}(writer);write("");write("");(writer);}

