
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/kaazing__gateway/mina.netty/src/main/java/org/apache/mina/transport/socket/DefaultSocketSessionConfigEx_setReceiveBufferSize.java
method_name = setReceiveBufferSize
method_body = @Override public void setReceiveBufferSize(int receiveBufferSize) { this.receiveBufferSize = receiveBufferSize; if (!parent.isActive() && parent instanceof SocketAcceptor) { defaultReceiveBufferSize = receiveBufferSize; } }
predict, score, loss = setReceiveBufferSize, 0.9713659882545471, 0.058498360216617584

Trace of simplified code(s):
{"time": "2021-02-14 22:07:38.937806", "score": "0.9714", "loss": "0.0585", "code": "@Override public void setReceiveBufferSize(int receiveBufferSize) { this.receiveBufferSize = receiveBufferSize; if (!parent.isActive() && parent instanceof SocketAcceptor) { defaultReceiveBufferSize = receiveBufferSize; } }", "n_tokens": 57, "n_pass": [1, 1, 1]}
{"time": "2021-02-14 22:07:42.071151", "score": "0.9788", "loss": "0.0268", "code": "@Override public void setReceiveBufferSize(int receiveBufferSize) { this.receiveBufferSize = receiveBufferSize; if (SocketAcceptor) { defaultReceiveBufferSize = receiveBufferSize; } }", "n_tokens": 43, "n_pass": [10, 2, 2]}
{"time": "2021-02-14 22:07:45.630454", "score": "0.9666", "loss": "0.0427", "code": "public void setReceiveBufferSize(int receiveBufferSize) { this.receiveBufferSize = receiveBufferSize; if (SocketAcceptor) { defaultReceiveBufferSize = receiveBufferSize; } }", "n_tokens": 40, "n_pass": [41, 3, 3]}
{"time": "2021-02-14 22:07:48.778626", "score": "0.9635", "loss": "0.0583", "code": "public void setReceiveBufferSize() { this.receiveBufferSize = receiveBufferSize; if (SocketAcceptor) { defaultReceiveBufferSize = receiveBufferSize; } }", "n_tokens": 37, "n_pass": [44, 4, 4]}
{"time": "2021-02-14 22:07:51.493938", "score": "0.9354", "loss": "0.2441", "code": "public void setReceiveBufferSize() { this.receiveBufferSize; if (SocketAcceptor) { defaultReceiveBufferSize = receiveBufferSize; } }", "n_tokens": 33, "n_pass": [47, 5, 5]}
{"time": "2021-02-14 22:07:54.662575", "score": "0.9405", "loss": "0.2878", "code": "public void setReceiveBufferSize() {; if (SocketAcceptor) { defaultReceiveBufferSize = receiveBufferSize; } }", "n_tokens": 29, "n_pass": [56, 6, 6]}
{"time": "2021-02-14 22:07:58.587622", "score": "0.9405", "loss": "0.2878", "code": "public void setReceiveBufferSize() {if (SocketAcceptor) { defaultReceiveBufferSize = receiveBufferSize; } }", "n_tokens": 27, "n_pass": [81, 7, 7]}
{"time": "2021-02-14 22:08:04.030708", "score": "0.9405", "loss": "0.2878", "code": " void setReceiveBufferSize() {if (SocketAcceptor) { defaultReceiveBufferSize = receiveBufferSize; } }", "n_tokens": 26, "n_pass": [90, 9, 8]}
{"time": "2021-02-14 22:08:06.763177", "score": "0.9405", "loss": "0.2878", "code": "void setReceiveBufferSize() {if (SocketAcceptor) { defaultReceiveBufferSize = receiveBufferSize; } }", "n_tokens": 25, "n_pass": [91, 10, 9]}
{"time": "2021-02-14 22:08:16.971905", "score": "0.9405", "loss": "0.2878", "code": "void setReceiveBufferSize(){if (SocketAcceptor) { defaultReceiveBufferSize = receiveBufferSize; } }", "n_tokens": 24, "n_pass": [133, 12, 10]}
{"time": "2021-02-14 22:08:19.666795", "score": "0.9405", "loss": "0.2878", "code": "void setReceiveBufferSize(){if(SocketAcceptor) { defaultReceiveBufferSize = receiveBufferSize; } }", "n_tokens": 23, "n_pass": [135, 13, 11]}
{"time": "2021-02-14 22:08:22.386569", "score": "0.9405", "loss": "0.2878", "code": "void setReceiveBufferSize(){if(SocketAcceptor){ defaultReceiveBufferSize = receiveBufferSize; } }", "n_tokens": 22, "n_pass": [139, 14, 12]}
{"time": "2021-02-14 22:08:25.103584", "score": "0.9405", "loss": "0.2878", "code": "void setReceiveBufferSize(){if(SocketAcceptor){defaultReceiveBufferSize = receiveBufferSize; } }", "n_tokens": 21, "n_pass": [141, 15, 13]}
{"time": "2021-02-14 22:08:27.934904", "score": "0.9405", "loss": "0.2878", "code": "void setReceiveBufferSize(){if(SocketAcceptor){defaultReceiveBufferSize= receiveBufferSize; } }", "n_tokens": 20, "n_pass": [143, 16, 14]}
{"time": "2021-02-14 22:08:33.387386", "score": "0.9405", "loss": "0.2878", "code": "void setReceiveBufferSize(){if(SocketAcceptor){defaultReceiveBufferSize=receiveBufferSize; } }", "n_tokens": 19, "n_pass": [145, 18, 15]}
{"time": "2021-02-14 22:08:36.103224", "score": "0.9405", "loss": "0.2878", "code": "void setReceiveBufferSize(){if(SocketAcceptor){defaultReceiveBufferSize=receiveBufferSize;} }", "n_tokens": 18, "n_pass": [148, 19, 16]}
{"time": "2021-02-14 22:08:38.817179", "score": "0.9405", "loss": "0.2878", "code": "void setReceiveBufferSize(){if(SocketAcceptor){defaultReceiveBufferSize=receiveBufferSize;}}", "n_tokens": 17, "n_pass": [150, 20, 17]}

Minimal simplified code:
void setReceiveBufferSize(){if(SocketAcceptor){defaultReceiveBufferSize=receiveBufferSize;}}

