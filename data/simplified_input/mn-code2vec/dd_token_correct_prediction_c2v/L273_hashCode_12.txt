
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/bcgit__bc-java/core/src/main/jdk1.1/java/util/AbstractSet_hashCode.java
method_name = hashCode
method_body = public int hashCode() { int hashCode = 0; Iterator it = iterator(); while (it.hasNext()) { Object o = it.next(); if (o != null) hashCode += o.hashCode(); } return hashCode; }
predict, score, loss = hashCode, 0.9949924349784851, 0.005902716424316168

Trace of simplified code(s):
{"time": "2021-02-14 13:38:02.445991", "score": "0.995", "loss": "0.0059", "code": "public int hashCode() { int hashCode = 0; Iterator it = iterator(); while (it.hasNext()) { Object o = it.next(); if (o != null) hashCode += o.hashCode(); } return hashCode; }", "n_tokens": 86, "n_pass": [1, 1, 1]}
{"time": "2021-02-14 13:38:05.101262", "score": "0.9931", "loss": "0.0079", "code": "public int hashCode() {  it = iterator(); while (it.hasNext()) { Object o = it.next(); if (o != null) hashCode += o.hashCode(); } return hashCode; }", "n_tokens": 76, "n_pass": [21, 2, 2]}
{"time": "2021-02-14 13:38:07.740612", "score": "0.9968", "loss": "0.0036", "code": "public int hashCode() {  it = iterator(); while (it.hasNext()) { ; if (o != null) hashCode += o.hashCode(); } return hashCode; }", "n_tokens": 65, "n_pass": [24, 3, 3]}
{"time": "2021-02-14 13:38:10.367652", "score": "0.9991", "loss": "0.0017", "code": "public int hashCode() {  it = iterator(); while (it.hasNext()) { ; if (o != null); } return hashCode; }", "n_tokens": 54, "n_pass": [26, 4, 4]}
{"time": "2021-02-14 13:38:13.029905", "score": "0.9993", "loss": "0.0012", "code": "public int hashCode() { iterator(); while (it.hasNext()) { ; if (o != null); } return hashCode; }", "n_tokens": 49, "n_pass": [46, 5, 5]}
{"time": "2021-02-14 13:38:15.654320", "score": "0.9991", "loss": "0.0015", "code": "public int hashCode() { while (it.hasNext()) { ; if (o != null); } return hashCode; }", "n_tokens": 44, "n_pass": [47, 6, 6]}
{"time": "2021-02-14 13:38:18.300619", "score": "0.9861", "loss": "0.0145", "code": "public int hashCode() { while (it.hasNext()) { ;(o != null); } return hashCode; }", "n_tokens": 41, "n_pass": [77, 7, 7]}
{"time": "2021-02-14 13:38:23.546283", "score": "0.9861", "loss": "0.0145", "code": "int hashCode() { while (it.hasNext()) { ;(o != null); } return hashCode; }", "n_tokens": 39, "n_pass": [84, 9, 8]}
{"time": "2021-02-14 13:38:32.242198", "score": "0.9861", "loss": "0.0145", "code": "int hashCode(){ while (it.hasNext()) { ;(o != null); } return hashCode; }", "n_tokens": 38, "n_pass": [132, 11, 9]}
{"time": "2021-02-14 13:38:34.870081", "score": "0.9861", "loss": "0.0145", "code": "int hashCode(){while (it.hasNext()) { ;(o != null); } return hashCode; }", "n_tokens": 37, "n_pass": [134, 12, 10]}
{"time": "2021-02-14 13:38:37.532792", "score": "0.9861", "loss": "0.0145", "code": "int hashCode(){while(it.hasNext()) { ;(o != null); } return hashCode; }", "n_tokens": 36, "n_pass": [136, 13, 11]}
{"time": "2021-02-14 13:38:40.163452", "score": "0.9933", "loss": "0.0072", "code": "int hashCode(){while(ithasNext()) { ;(o != null); } return hashCode; }", "n_tokens": 35, "n_pass": [139, 14, 12]}
{"time": "2021-02-14 13:38:42.801137", "score": "0.9987", "loss": "0.0013", "code": "int hashCode(){while(it()) { ;(o != null); } return hashCode; }", "n_tokens": 34, "n_pass": [140, 15, 13]}
{"time": "2021-02-14 13:38:45.415832", "score": "0.9987", "loss": "0.0013", "code": "int hashCode(){while(it()) {(o != null); } return hashCode; }", "n_tokens": 32, "n_pass": [145, 16, 14]}
{"time": "2021-02-14 13:38:48.031156", "score": "0.9984", "loss": "0.0016", "code": "int hashCode(){while(it()) {(o= null); } return hashCode; }", "n_tokens": 30, "n_pass": [147, 17, 15]}
{"time": "2021-02-14 13:38:50.645717", "score": "0.9988", "loss": "0.0013", "code": "int hashCode(){while(it()) {(onull); } return hashCode; }", "n_tokens": 28, "n_pass": [148, 18, 16]}
{"time": "2021-02-14 13:38:53.249525", "score": "0.9952", "loss": "0.0118", "code": "int hashCode(){while(it()) {(onull); } hashCode; }", "n_tokens": 26, "n_pass": [152, 19, 17]}
{"time": "2021-02-14 13:39:01.522809", "score": "0.9952", "loss": "0.0118", "code": "int hashCode(){while(it()) {(onull); } hashCode;}", "n_tokens": 25, "n_pass": [187, 21, 18]}
{"time": "2021-02-14 13:39:04.925106", "score": "0.9952", "loss": "0.0118", "code": "int hashCode(){while(it()){(onull); } hashCode;}", "n_tokens": 24, "n_pass": [200, 22, 19]}
{"time": "2021-02-14 13:39:07.536976", "score": "0.9998", "loss": "0.0003", "code": "int hashCode(){while(it()){(null); } hashCode;}", "n_tokens": 23, "n_pass": [203, 23, 20]}
{"time": "2021-02-14 13:39:10.173829", "score": "0.9998", "loss": "0.0003", "code": "int hashCode(){while(it()){(null);} hashCode;}", "n_tokens": 22, "n_pass": [207, 24, 21]}
{"time": "2021-02-14 13:39:12.801296", "score": "0.9998", "loss": "0.0003", "code": "int hashCode(){while(it()){(null);}hashCode;}", "n_tokens": 21, "n_pass": [209, 25, 22]}

Minimal simplified code:
int hashCode(){while(it()){(null);}hashCode;}

