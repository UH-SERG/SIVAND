
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/mbrlabs__Mundus/commons/src/main/com/mbrlabs/mundus/commons/scene3d/GameObject_render.java
method_name = render
method_body = public void render(float delta) { if (active) { for (Component component : this.components) { component.render(delta); } if (getChildren() != null) { for (GameObject node : getChildren()) { node.render(delta); } } } }
predict, score, loss = render, 0.9649978876113892, 0.04388542100787163

Trace of simplified code(s):
{"time": "2021-02-14 19:55:27.614943", "score": "0.965", "loss": "0.0439", "code": "public void render(float delta) { if (active) { for (Component component : this.components) { component.render(delta); } if (getChildren() != null) { for (GameObject node : getChildren()) { node.render(delta); } } } }", "n_tokens": 93, "n_pass": [1, 1, 1]}
{"time": "2021-02-14 19:55:30.722962", "score": "0.9774", "loss": "0.0271", "code": "public void render(float delta) { if (active) { for (Component component : this.components) { component.render(delta); } if (getChildrennull) { for (GameObject node : getChildren()) { node.render(delta); } } } }", "n_tokens": 87, "n_pass": [53, 2, 2]}
{"time": "2021-02-14 19:55:33.423871", "score": "0.8893", "loss": "0.1531", "code": "public void render(float delta) { if (active) { for (Component component : this.components) { component.render(delta); } if (getChildrennull) { for (GameObject node : getChildren()) { (delta); } } } }", "n_tokens": 84, "n_pass": [105, 3, 3]}
{"time": "2021-02-14 19:55:36.076844", "score": "0.893", "loss": "0.1484", "code": "public void render(float delta) { if (active) { for (Component component : this.components) { component.render(delta); } if (getChildrennull) { for (GameObject node : getChildren()) { ; } } } }", "n_tokens": 81, "n_pass": [106, 4, 4]}
{"time": "2021-02-14 19:55:38.735441", "score": "0.893", "loss": "0.1484", "code": "void render(float delta) { if (active) { for (Component component : this.components) { component.render(delta); } if (getChildrennull) { for (GameObject node : getChildren()) { ; } } } }", "n_tokens": 79, "n_pass": [110, 5, 5]}
{"time": "2021-02-14 19:55:41.799958", "score": "0.9521", "loss": "0.0707", "code": "void render() { if (active) { for (Component component : this.components) { component.render(delta); } if (getChildrennull) { for (GameObject node : getChildren()) { ; } } } }", "n_tokens": 76, "n_pass": [113, 6, 6]}
{"time": "2021-02-14 19:55:44.485038", "score": "0.8587", "loss": "0.2789", "code": "void render() { if (active) { for (Component component : this.components) {render(delta); } if (getChildrennull) { for (GameObject node : getChildren()) { ; } } } }", "n_tokens": 73, "n_pass": [123, 7, 7]}
{"time": "2021-02-14 19:55:52.121982", "score": "0.8587", "loss": "0.2789", "code": "void render() { if (active) { for (Component component: this.components) {render(delta); } if (getChildrennull) { for (GameObject node : getChildren()) { ; } } } }", "n_tokens": 72, "n_pass": [199, 8, 8]}
{"time": "2021-02-14 19:55:54.775910", "score": "0.8587", "loss": "0.2789", "code": "void render() { if (active) { for (Component component:this.components) {render(delta); } if (getChildrennull) { for (GameObject node : getChildren()) { ; } } } }", "n_tokens": 71, "n_pass": [201, 9, 9]}
{"time": "2021-02-14 19:55:57.433005", "score": "0.9863", "loss": "0.02", "code": "void render() { if (active) { for (Component component:thiscomponents) {render(delta); } if (getChildrennull) { for (GameObject node : getChildren()) { ; } } } }", "n_tokens": 70, "n_pass": [203, 10, 10]}
{"time": "2021-02-14 19:56:00.117433", "score": "0.9863", "loss": "0.02", "code": "void render() { if (active) { for (Component component:thiscomponents) {render(delta); } if (getChildrennull) { for (GameObject node : getChildren()) { } } } }", "n_tokens": 68, "n_pass": [222, 11, 11]}
{"time": "2021-02-14 19:56:03.581838", "score": "0.9863", "loss": "0.02", "code": "void render(){ if (active) { for (Component component:thiscomponents) {render(delta); } if (getChildrennull) { for (GameObject node : getChildren()) { } } } }", "n_tokens": 67, "n_pass": [232, 12, 12]}
{"time": "2021-02-14 19:56:06.218940", "score": "0.9863", "loss": "0.02", "code": "void render(){if (active) { for (Component component:thiscomponents) {render(delta); } if (getChildrennull) { for (GameObject node : getChildren()) { } } } }", "n_tokens": 66, "n_pass": [234, 13, 13]}
{"time": "2021-02-14 19:56:08.885816", "score": "0.9863", "loss": "0.02", "code": "void render(){if(active) { for (Component component:thiscomponents) {render(delta); } if (getChildrennull) { for (GameObject node : getChildren()) { } } } }", "n_tokens": 65, "n_pass": [236, 14, 14]}
{"time": "2021-02-14 19:56:11.528620", "score": "0.9863", "loss": "0.02", "code": "void render(){if(active){ for (Component component:thiscomponents) {render(delta); } if (getChildrennull) { for (GameObject node : getChildren()) { } } } }", "n_tokens": 64, "n_pass": [240, 15, 15]}
{"time": "2021-02-14 19:56:14.180948", "score": "0.9863", "loss": "0.02", "code": "void render(){if(active){for (Component component:thiscomponents) {render(delta); } if (getChildrennull) { for (GameObject node : getChildren()) { } } } }", "n_tokens": 63, "n_pass": [242, 16, 16]}
{"time": "2021-02-14 19:56:16.848634", "score": "0.9863", "loss": "0.02", "code": "void render(){if(active){for(Component component:thiscomponents) {render(delta); } if (getChildrennull) { for (GameObject node : getChildren()) { } } } }", "n_tokens": 62, "n_pass": [244, 17, 17]}
{"time": "2021-02-14 19:56:19.494673", "score": "0.9487", "loss": "0.0903", "code": "void render(){if(active){for(Component component:components) {render(delta); } if (getChildrennull) { for (GameObject node : getChildren()) { } } } }", "n_tokens": 61, "n_pass": [250, 18, 18]}
{"time": "2021-02-14 19:56:29.041983", "score": "0.9487", "loss": "0.0903", "code": "void render(){if(active){for(Component component:components) {render(delta);} if (getChildrennull) { for (GameObject node : getChildren()) { } } } }", "n_tokens": 60, "n_pass": [334, 19, 19]}
{"time": "2021-02-14 19:56:31.683366", "score": "0.9487", "loss": "0.0903", "code": "void render(){if(active){for(Component component:components) {render(delta);}if (getChildrennull) { for (GameObject node : getChildren()) { } } } }", "n_tokens": 59, "n_pass": [336, 20, 20]}
{"time": "2021-02-14 19:56:34.327838", "score": "0.9487", "loss": "0.0903", "code": "void render(){if(active){for(Component component:components) {render(delta);}if(getChildrennull) { for (GameObject node : getChildren()) { } } } }", "n_tokens": 58, "n_pass": [338, 21, 21]}
{"time": "2021-02-14 19:56:36.982188", "score": "0.9356", "loss": "0.1167", "code": "void render(){if(active){for(Component component:components) {render(delta);}if(null) { for (GameObject node : getChildren()) { } } } }", "n_tokens": 57, "n_pass": [340, 22, 22]}
{"time": "2021-02-14 19:56:39.661786", "score": "0.9356", "loss": "0.1167", "code": "void render(){if(active){for(Component component:components) {render(delta);}if(null){ for (GameObject node : getChildren()) { } } } }", "n_tokens": 56, "n_pass": [343, 23, 23]}
{"time": "2021-02-14 19:56:42.306098", "score": "0.9356", "loss": "0.1167", "code": "void render(){if(active){for(Component component:components) {render(delta);}if(null){for (GameObject node : getChildren()) { } } } }", "n_tokens": 55, "n_pass": [345, 24, 24]}
{"time": "2021-02-14 19:56:44.972956", "score": "0.9356", "loss": "0.1167", "code": "void render(){if(active){for(Component component:components) {render(delta);}if(null){for(GameObject node : getChildren()) { } } } }", "n_tokens": 54, "n_pass": [347, 25, 25]}
{"time": "2021-02-14 19:56:47.621001", "score": "0.9356", "loss": "0.1167", "code": "void render(){if(active){for(Component component:components) {render(delta);}if(null){for(GameObject node: getChildren()) { } } } }", "n_tokens": 53, "n_pass": [352, 26, 26]}
{"time": "2021-02-14 19:56:50.296244", "score": "0.9356", "loss": "0.1167", "code": "void render(){if(active){for(Component component:components) {render(delta);}if(null){for(GameObject node:getChildren()) { } } } }", "n_tokens": 52, "n_pass": [354, 27, 27]}
{"time": "2021-02-14 19:56:52.968180", "score": "0.9356", "loss": "0.1167", "code": "void render(){if(active){for(Component component:components) {render(delta);}if(null){for(GameObject node:getChildren()){ } } } }", "n_tokens": 51, "n_pass": [359, 28, 28]}
{"time": "2021-02-14 19:56:55.617593", "score": "0.9356", "loss": "0.1167", "code": "void render(){if(active){for(Component component:components) {render(delta);}if(null){for(GameObject node:getChildren()){} } } }", "n_tokens": 50, "n_pass": [361, 29, 29]}
{"time": "2021-02-14 19:56:58.296535", "score": "0.9356", "loss": "0.1167", "code": "void render(){if(active){for(Component component:components) {render(delta);}if(null){for(GameObject node:getChildren()){}} } }", "n_tokens": 49, "n_pass": [363, 30, 30]}
{"time": "2021-02-14 19:57:00.950069", "score": "0.9356", "loss": "0.1167", "code": "void render(){if(active){for(Component component:components) {render(delta);}if(null){for(GameObject node:getChildren()){}}} }", "n_tokens": 48, "n_pass": [365, 31, 31]}
{"time": "2021-02-14 19:57:03.602814", "score": "0.9356", "loss": "0.1167", "code": "void render(){if(active){for(Component component:components) {render(delta);}if(null){for(GameObject node:getChildren()){}}}}", "n_tokens": 47, "n_pass": [367, 32, 32]}
{"time": "2021-02-14 19:57:07.076445", "score": "0.9356", "loss": "0.1167", "code": "void render(){if(active){for(Component component:components){render(delta);}if(null){for(GameObject node:getChildren()){}}}}", "n_tokens": 46, "n_pass": [388, 33, 33]}

Minimal simplified code:
void render(){if(active){for(Component component:components){render(delta);}if(null){for(GameObject node:getChildren()){}}}}

