
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/codefollower__Tomcat-Research/java/org/apache/catalina/ha/context/ReplicatedContext_startInternal.java
method_name = startInternal
method_body = @Override protected synchronized void startInternal() throws LifecycleException { try { CatalinaCluster catclust = (CatalinaCluster) this.getCluster(); if (this.context == null) this.context = new ReplApplContext(this); if (catclust != null) { ReplicatedMap<String, Object> map = new ReplicatedMap<>(this, catclust.getChannel(), DEFAULT_REPL_TIMEOUT, getName(), getClassLoaders()); map.setChannelSendOptions(mapSendOptions); ((ReplApplContext) this.context).setAttributeMap(map); if (getAltDDName() != null) context.setAttribute(Globals.ALT_DD_ATTR, getAltDDName()); } super.startInternal(); } catch (Exception x) { log.error("Unable to start ReplicatedContext", x); throw new LifecycleException("Failed to start ReplicatedContext", x); } }
predict, score, loss = startInternal, 0.9439380168914795, 0.057877521961927414

Trace of simplified code(s):
{"time": "2021-02-14 12:22:33.298479", "score": "0.8128", "loss": "0.2109", "code": "@Override protected synchronized void startInternal() throws LifecycleException { try { CatalinaCluster catclust = (CatalinaCluster) this.getCluster(); if (this.context == null) this.context = new ReplApplContext(this); if (catclust != null) { ReplicatedMap<String, Object> map = new ReplicatedMap<>(this, catclust.getChannel(), DEFAULT_REPL_TIMEOUT, getName(), getClassLoaders()); map.setChannelSendOptions(mapSendOptions); ((ReplApplContext) this.context).setAttributeMap(map); if (getAltDDName() != null) context.setAttribute(Globals.ALT_DD_ATTR, getAltDDName()); } super.startInternal(); } catch (Exception x) { log.error(\"Unable to start ReplicatedContext\", x); throw new LifecycleException(\"Failed to start ReplicatedContext\", x); } }", "n_tokens": 246, "n_pass": [1, 1, 1]}
{"time": "2021-02-14 12:22:36.030049", "score": "0.9427", "loss": "0.0595", "code": "@Override protected synchronized void startInternal() throws LifecycleException { try { CatalinaCluster catclust = (CatalinaCluster) this.getCluster(); if (this.context == null) this.context = new ReplApplContext(this); if (catclust != null) { ReplicatedMap<String, Object> map = new ReplicatedMap<>(this, catclust.getChannel(), DEFAULT_REPL_TIMEOUT, getName(), (ReplApplContext) this.context).setAttributeMap(map); if (getAltDDName() != null) context.setAttribute(Globals.ALT_DD_ATTR, getAltDDName()); } super.startInternal(); } catch (Exception x) { log.error(\"Unable to start ReplicatedContext\", x); throw new LifecycleException(\"Failed to start ReplicatedContext\", x); } }", "n_tokens": 231, "n_pass": [52, 2, 2]}
{"time": "2021-02-14 12:22:38.729310", "score": "0.9476", "loss": "0.0543", "code": "@Override protected synchronized void startInternal() throws LifecycleException { try { CatalinaCluster catclust = (CatalinaCluster) this.getCluster(); if (this.context == null) this.context = new ReplApplContext(this); if (catclust != null) { ReplicatedMap<String, Object> map = new ReplicatedMap<>(this, catclust.getChannel(), DEFAULT_REPL_TIMEOUT, getName(), (ReplApplContext) this.context).setAttributeMap(map); if (getAltDDName() != null) context.setAttribute(Globals.ALT_DD_ATTR, getAltDDName()); } super.startInternal(); } catch (Exception x) { log.error(\"Unable to start  to start ReplicatedContext\", x); } }", "n_tokens": 215, "n_pass": [58, 3, 3]}
{"time": "2021-02-14 12:22:41.449379", "score": "0.9396", "loss": "0.0648", "code": "void startInternal() throws LifecycleException { try { CatalinaCluster catclust = (CatalinaCluster) this.getCluster(); if (this.context == null) this.context = new ReplApplContext(this); if (catclust != null) { ReplicatedMap<String, Object> map = new ReplicatedMap<>(this, catclust.getChannel(), DEFAULT_REPL_TIMEOUT, getName(), (ReplApplContext) this.context).setAttributeMap(map); if (getAltDDName() != null) context.setAttribute(Globals.ALT_DD_ATTR, getAltDDName()); } super.startInternal(); } catch (Exception x) { log.error(\"Unable to start  to start ReplicatedContext\", x); } }", "n_tokens": 208, "n_pass": [103, 4, 4]}
{"time": "2021-02-14 12:22:44.138691", "score": "0.9548", "loss": "0.0466", "code": "void startInternal() throws LifecycleException { try { CatalinaCluster catclust =getCluster(); if (this.context == null) this.context = new ReplApplContext(this); if (catclust != null) { ReplicatedMap<String, Object> map = new ReplicatedMap<>(this, catclust.getChannel(), DEFAULT_REPL_TIMEOUT, getName(), (ReplApplContext) this.context).setAttributeMap(map); if (getAltDDName() != null) context.setAttribute(Globals.ALT_DD_ATTR, getAltDDName()); } super.startInternal(); } catch (Exception x) { log.error(\"Unable to start  to start ReplicatedContext\", x); } }", "n_tokens": 201, "n_pass": [107, 5, 5]}
{"time": "2021-02-14 12:22:46.825946", "score": "0.9587", "loss": "0.0424", "code": "void startInternal() throws LifecycleException { try { CatalinaCluster catclust =getCluster(); if (this.context == null) this.context = new ReplApplContext(this); if (catclust != null) { map = new ReplicatedMap<>(this, catclust.getChannel(), DEFAULT_REPL_TIMEOUT, getName(), (ReplApplContext) this.context).setAttributeMap(map); if (getAltDDName() != null) context.setAttribute(Globals.ALT_DD_ATTR, getAltDDName()); } super.startInternal(); } catch (Exception x) { log.error(\"Unable to start  to start ReplicatedContext\", x); } }", "n_tokens": 193, "n_pass": [114, 6, 6]}
{"time": "2021-02-14 12:22:49.529904", "score": "0.9398", "loss": "0.0629", "code": "void startInternal() throws LifecycleException { try { CatalinaCluster catclust =getCluster(); if (this.context == null) this.context = new ReplApplContext(this); if (catclust != null) { map = new ReplicatedMap<>(this, catclust._TIMEOUT, getName(), (ReplApplContext) this.context).setAttributeMap(map); if (getAltDDName() != null) context.setAttribute(Globals.ALT_DD_ATTR, getAltDDName()); } super.startInternal(); } catch (Exception x) { log.error(\"Unable to start  to start ReplicatedContext\", x); } }", "n_tokens": 185, "n_pass": [117, 7, 7]}
{"time": "2021-02-14 12:22:52.249774", "score": "0.9435", "loss": "0.0588", "code": "void startInternal() throws LifecycleException { try { CatalinaCluster catclust =getCluster(); if (this.context == null) this.context = new ReplApplContext(this); if (catclust != null) { map = new ReplicatedMap<>(this, catclust.getName(), (ReplApplContext) this.context).setAttributeMap(map); if (getAltDDName() != null) context.setAttribute(Globals.ALT_DD_ATTR, getAltDDName()); } super.startInternal(); } catch (Exception x) { log.error(\"Unable to start  to start ReplicatedContext\", x); } }", "n_tokens": 181, "n_pass": [190, 8, 8]}
{"time": "2021-02-14 12:22:54.928794", "score": "0.9406", "loss": "0.0619", "code": "void startInternal() throws LifecycleException { try { CatalinaCluster catclust =getCluster(); if (this.context == null) this.context = new ReplApplContext(this); if (catclust != null) { map = new ReplicatedMap<>(this, catclust.getName(), this.context).setAttributeMap(map); if (getAltDDName() != null) context.setAttribute(Globals.ALT_DD_ATTR, getAltDDName()); } super.startInternal(); } catch (Exception x) { log.error(\"Unable to start  to start ReplicatedContext\", x); } }", "n_tokens": 177, "n_pass": [191, 9, 9]}
{"time": "2021-02-14 12:22:57.608853", "score": "0.9681", "loss": "0.0329", "code": "void startInternal() throws LifecycleException { try { CatalinaCluster catclust =getCluster(); if (this.context == null) this.context = new ReplApplContext(this); if (catclust != null) { map = new ReplicatedMap<>(this, catclust.getName(), this.contextmap); if (getAltDDName() != null) context.setAttribute(Globals.ALT_DD_ATTR, getAltDDName()); } super.startInternal(); } catch (Exception x) { log.error(\"Unable to start  to start ReplicatedContext\", x); } }", "n_tokens": 173, "n_pass": [193, 10, 10]}
{"time": "2021-02-14 12:23:00.299070", "score": "0.7681", "loss": "0.2673", "code": "void startInternal() throws LifecycleException { try { CatalinaCluster catclust =getCluster(); if (this.context == null) this.context = new ReplApplContext(this); if (catclust != null) { map = new ReplicatedMap<>(this, catclust.getName(), this.contextmap); if (getAltDDName= null) context.setAttribute(Globals.ALT_DD_ATTR, getAltDDName()); } super.startInternal(); } catch (Exception x) { log.error(\"Unable to start  to start ReplicatedContext\", x); } }", "n_tokens": 169, "n_pass": [196, 11, 11]}
{"time": "2021-02-14 12:23:02.979757", "score": "0.9459", "loss": "0.0564", "code": "void startInternal() throws LifecycleException { try { CatalinaCluster catclust =getCluster(); if (this.context == null) this.context = new ReplApplContext(this); if (catclust != null) { map = new ReplicatedMap<>(this, catclust.getName(), this.contextmap); if (getAltDDName= null) context.setAttribute(Globals.ALT, getAltDDName()); } super.startInternal(); } catch (Exception x) { log.error(\"Unable to start  to start ReplicatedContext\", x); } }", "n_tokens": 165, "n_pass": [200, 12, 12]}
{"time": "2021-02-14 12:23:05.761063", "score": "0.9561", "loss": "0.0469", "code": "void startInternal() throws LifecycleException { try { CatalinaCluster catclust =getCluster(); if (this.context == null) this.context = new ReplApplContext(this); if (catclust != null) { map = new ReplicatedMap<>(this, catclust.getName(), this.contextmap); if (getAltDDName= null) context.setAttribute(Globals.ALT, getAltDDName()); } super.startInternal(); } catch (Exception x) { log.error(\"Unable  to start ReplicatedContext\", x); } }", "n_tokens": 161, "n_pass": [210, 13, 13]}
{"time": "2021-02-14 12:23:08.446114", "score": "0.811", "loss": "0.2109", "code": "void startInternal() throws LifecycleException { try { CatalinaCluster catclust =getCluster(); if (this.context == null) this.context = new ReplApplContext(this); if (catclust != null) { map = new ReplicatedMap<>(this, catclust.getName(), this.contextmap); if (getAltDDName= null) context.setAttribute(Globals.ALT, getAltDDName()); } super.startInternal(); } catch (Exception x) { log.error(\"Unable  ReplicatedContext\", x); } }", "n_tokens": 157, "n_pass": [211, 14, 14]}
{"time": "2021-02-14 12:23:11.128177", "score": "0.5781", "loss": "0.5525", "code": "void startInternal()  { try { CatalinaCluster catclust =getCluster(); if (this.context == null) this.context = new ReplApplContext(this); if (catclust != null) { map = new ReplicatedMap<>(this, catclust.getName(), this.contextmap); if (getAltDDName= null) context.setAttribute(Globals.ALT, getAltDDName()); } super.startInternal(); } catch (Exception x) { log.error(\"Unable  ReplicatedContext\", x); } }", "n_tokens": 154, "n_pass": [217, 15, 15]}
{"time": "2021-02-14 12:23:13.824518", "score": "0.567", "loss": "0.5722", "code": "void startInternal()  { try {catclust =getCluster(); if (this.context == null) this.context = new ReplApplContext(this); if (catclust != null) { map = new ReplicatedMap<>(this, catclust.getName(), this.contextmap); if (getAltDDName= null) context.setAttribute(Globals.ALT, getAltDDName()); } super.startInternal(); } catch (Exception x) { log.error(\"Unable  ReplicatedContext\", x); } }", "n_tokens": 151, "n_pass": [220, 16, 16]}
{"time": "2021-02-14 12:23:16.526323", "score": "0.5764", "loss": "0.5552", "code": "void startInternal()  { try {getCluster(); if (this.context == null) this.context = new ReplApplContext(this); if (catclust != null) { map = new ReplicatedMap<>(this, catclust.getName(), this.contextmap); if (getAltDDName= null) context.setAttribute(Globals.ALT, getAltDDName()); } super.startInternal(); } catch (Exception x) { log.error(\"Unable  ReplicatedContext\", x); } }", "n_tokens": 148, "n_pass": [221, 17, 17]}
{"time": "2021-02-14 12:23:19.193332", "score": "0.5805", "loss": "0.5481", "code": "void startInternal()  { try { if (this.context == null) this.context = new ReplApplContext(this); if (catclust != null) { map = new ReplicatedMap<>(this, catclust.getName(), this.contextmap); if (getAltDDName= null) context.setAttribute(Globals.ALT, getAltDDName()); } super.startInternal(); } catch (Exception x) { log.error(\"Unable  ReplicatedContext\", x); } }", "n_tokens": 144, "n_pass": [222, 18, 18]}
{"time": "2021-02-14 12:23:21.876811", "score": "0.5929", "loss": "0.5262", "code": "void startInternal()  { try { if (this.context ) this.context = new ReplApplContext(this); if (catclust != null) { map = new ReplicatedMap<>(this, catclust.getName(), this.contextmap); if (getAltDDName= null) context.setAttribute(Globals.ALT, getAltDDName()); } super.startInternal(); } catch (Exception x) { log.error(\"Unable  ReplicatedContext\", x); } }", "n_tokens": 140, "n_pass": [225, 19, 19]}
{"time": "2021-02-14 12:23:24.542560", "score": "0.504", "loss": "0.6864", "code": "void startInternal()  { try { if (this.context ) this.new ReplApplContext(this); if (catclust != null) { map = new ReplicatedMap<>(this, catclust.getName(), this.contextmap); if (getAltDDName= null) context.setAttribute(Globals.ALT, getAltDDName()); } super.startInternal(); } catch (Exception x) { log.error(\"Unable  ReplicatedContext\", x); } }", "n_tokens": 136, "n_pass": [227, 20, 20]}
{"time": "2021-02-14 12:23:27.210118", "score": "0.4935", "loss": "0.7074", "code": "void startInternal()  { try { if (this.context ) this.new ReplApplContext(this); if (catclustnull) { map = new ReplicatedMap<>(this, catclust.getName(), this.contextmap); if (getAltDDName= null) context.setAttribute(Globals.ALT, getAltDDName()); } super.startInternal(); } catch (Exception x) { log.error(\"Unable  ReplicatedContext\", x); } }", "n_tokens": 132, "n_pass": [231, 21, 21]}
{"time": "2021-02-14 12:23:32.540762", "score": "0.4809", "loss": "0.7332", "code": "void startInternal()  { try { if (this.context ) this.new ReplApplContext(this); if (catclustnull) { map = new ReplicatedMap<>(thisgetName(), this.contextmap); if (getAltDDName= null) context.setAttribute(Globals.ALT, getAltDDName()); } super.startInternal(); } catch (Exception x) { log.error(\"Unable  ReplicatedContext\", x); } }", "n_tokens": 128, "n_pass": [236, 23, 22]}
{"time": "2021-02-14 12:23:35.212856", "score": "0.4853", "loss": "0.724", "code": "void startInternal()  { try { if (this.context ) this.new ReplApplContext(this); if (catclustnull) { map = new ReplicatedMap<>(thisgetName(),map); if (getAltDDName= null) context.setAttribute(Globals.ALT, getAltDDName()); } super.startInternal(); } catch (Exception x) { log.error(\"Unable  ReplicatedContext\", x); } }", "n_tokens": 124, "n_pass": [238, 24, 23]}
{"time": "2021-02-14 12:23:37.910108", "score": "0.4834", "loss": "0.7278", "code": "void startInternal()  { try { if (this.context ) this.new ReplApplContext(this); if (catclustnull) { new ReplicatedMap<>(thisgetName(),map); if (getAltDDName= null) context.setAttribute(Globals.ALT, getAltDDName()); } super.startInternal(); } catch (Exception x) { log.error(\"Unable  ReplicatedContext\", x); } }", "n_tokens": 120, "n_pass": [267, 25, 24]}
{"time": "2021-02-14 12:23:44.791043", "score": "0.4834", "loss": "0.7278", "code": "void startInternal()  { try { if (this.context ) this.new ReplApplContext(this); if (catclustnull) { new ReplicatedMap(thisgetName(),map); if (getAltDDName= null) context.setAttribute(Globals.ALT, getAltDDName()); } super.startInternal(); } catch (Exception x) { log.error(\"Unable  ReplicatedContext\", x); } }", "n_tokens": 118, "n_pass": [363, 27, 25]}
{"time": "2021-02-14 12:23:47.474930", "score": "0.5097", "loss": "0.6748", "code": "void startInternal()  { try { if (this.context ) this.new ReplApplContext(this); if (catclustnull) { new ReplicatedMap(thisgetName(),map); if (getAltDDNamenull) context.setAttribute(Globals.ALT, getAltDDName()); } super.startInternal(); } catch (Exception x) { log.error(\"Unable  ReplicatedContext\", x); } }", "n_tokens": 116, "n_pass": [370, 28, 26]}
{"time": "2021-02-14 12:23:50.158530", "score": "0.514", "loss": "0.6663", "code": "void startInternal()  { try { if (this.context ) this.new ReplApplContext(this); if (catclustnull) { new ReplicatedMap(thisgetName(),map); if (getAltDDNamenull) context(Globals.ALT, getAltDDName()); } super.startInternal(); } catch (Exception x) { log.error(\"Unable  ReplicatedContext\", x); } }", "n_tokens": 114, "n_pass": [373, 29, 27]}
{"time": "2021-02-14 12:23:52.807474", "score": "0.504", "loss": "0.6859", "code": "void startInternal()  { try { if (this.context ) this.new ReplApplContext(this); if (catclustnull) { new ReplicatedMap(thisgetName(),map); if (getAltDDNamenull) context(Globals, getAltDDName()); } super.startInternal(); } catch (Exception x) { log.error(\"Unable  ReplicatedContext\", x); } }", "n_tokens": 112, "n_pass": [375, 30, 28]}
{"time": "2021-02-14 12:23:55.456309", "score": "0.5107", "loss": "0.6727", "code": "void startInternal()  { try { if (this.context ) this.new ReplApplContext(this); if (catclustnull) { new ReplicatedMap(thisgetName(),map); if (getAltDDNamenull) context(GlobalsgetAltDDName()); } super.startInternal(); } catch (Exception x) { log.error(\"Unable  ReplicatedContext\", x); } }", "n_tokens": 110, "n_pass": [376, 31, 29]}
{"time": "2021-02-14 12:24:00.783011", "score": "0.5099", "loss": "0.6744", "code": "void startInternal()  { try { if (this.context ) this.new ReplApplContext(this); if (catclustnull) { new ReplicatedMap(thisgetName(),map); if (getAltDDNamenull) context(GlobalsgetAltDDName()); } super.startInternal(); } catch (Exception x) { log(\"Unable  ReplicatedContext\", x); } }", "n_tokens": 108, "n_pass": [391, 33, 30]}
{"time": "2021-02-14 12:24:03.434476", "score": "0.5099", "loss": "0.6744", "code": "void startInternal()  { try { if (this.context ) this.new ReplApplContext(this); if (catclustnull) { new ReplicatedMap(thisgetName(),map); if (getAltDDNamenull) context(GlobalsgetAltDDName()); } super.startInternal(); } catch (Exception x) { log(\" ReplicatedContext\", x); } }", "n_tokens": 106, "n_pass": [393, 34, 31]}
{"time": "2021-02-14 12:24:06.088006", "score": "0.5011", "loss": "0.6917", "code": "void startInternal()  { try { if (this.context ) this.new ReplApplContext(this); if (catclustnull) { new ReplicatedMap(thisgetName(),map); if (getAltDDNamenull) context(GlobalsgetAltDDName()); } super.startInternal(); } catch (Exception x) { log(\"\", x); } }", "n_tokens": 104, "n_pass": [394, 35, 32]}
{"time": "2021-02-14 12:24:09.564297", "score": "0.5233", "loss": "0.6484", "code": "void startInternal()  { try { if (context ) this.new ReplApplContext(this); if (catclustnull) { new ReplicatedMap(thisgetName(),map); if (getAltDDNamenull) context(GlobalsgetAltDDName()); } super.startInternal(); } catch (Exception x) { log(\"\", x); } }", "n_tokens": 102, "n_pass": [410, 36, 33]}
{"time": "2021-02-14 12:24:12.208957", "score": "0.5392", "loss": "0.6184", "code": "void startInternal()  { try { if (context ) new ReplApplContext(this); if (catclustnull) { new ReplicatedMap(thisgetName(),map); if (getAltDDNamenull) context(GlobalsgetAltDDName()); } super.startInternal(); } catch (Exception x) { log(\"\", x); } }", "n_tokens": 100, "n_pass": [413, 37, 34]}
{"time": "2021-02-14 12:24:14.878092", "score": "0.5352", "loss": "0.626", "code": "void startInternal()  { try { if (context ) ReplApplContext(this); if (catclustnull) { new ReplicatedMap(thisgetName(),map); if (getAltDDNamenull) context(GlobalsgetAltDDName()); } super.startInternal(); } catch (Exception x) { log(\"\", x); } }", "n_tokens": 98, "n_pass": [414, 38, 35]}
{"time": "2021-02-14 12:24:17.524108", "score": "0.5436", "loss": "0.6104", "code": "void startInternal()  { try { if (context ) ReplApplContext(this); if (catclustnull) { ReplicatedMap(thisgetName(),map); if (getAltDDNamenull) context(GlobalsgetAltDDName()); } super.startInternal(); } catch (Exception x) { log(\"\", x); } }", "n_tokens": 96, "n_pass": [422, 39, 36]}
{"time": "2021-02-14 12:24:20.588549", "score": "0.5428", "loss": "0.6119", "code": "void startInternal()  { try { if (context ) ReplApplContext(this); if (catclustnull) { ReplicatedMap(thisgetName(),map); if (getAltDDNamenull)(GlobalsgetAltDDName()); } super.startInternal(); } catch (Exception x) { log(\"\", x); } }", "n_tokens": 94, "n_pass": [432, 40, 37]}
{"time": "2021-02-14 12:24:38.858153", "score": "0.5428", "loss": "0.6119", "code": "void startInternal()  { try { if (context ) ReplApplContext(this); if (catclustnull) { ReplicatedMap(thisgetName(),map); if (getAltDDNamenull)(getAltDDName()); } super.startInternal(); } catch (Exception x) { log(\"\", x); } }", "n_tokens": 93, "n_pass": [572, 42, 38]}
{"time": "2021-02-14 12:24:41.512715", "score": "0.5428", "loss": "0.6119", "code": "void startInternal()  { try { if (context ) ReplApplContext(this); if (catclustnull) { ReplicatedMap(thisgetName(),map); if (getAltDDNamenull)(getAltDDName());} super.startInternal(); } catch (Exception x) { log(\"\", x); } }", "n_tokens": 92, "n_pass": [578, 43, 39]}
{"time": "2021-02-14 12:24:44.165306", "score": "0.5428", "loss": "0.6119", "code": "void startInternal()  { try { if (context ) ReplApplContext(this); if (catclustnull) { ReplicatedMap(thisgetName(),map); if (getAltDDNamenull)(getAltDDName());}super.startInternal(); } catch (Exception x) { log(\"\", x); } }", "n_tokens": 91, "n_pass": [580, 44, 40]}
{"time": "2021-02-14 12:24:49.457439", "score": "0.5428", "loss": "0.6119", "code": "void startInternal()  { try { if (context ) ReplApplContext(this); if (catclustnull) { ReplicatedMap(thisgetName(),map); if (getAltDDNamenull)(getAltDDName());}super.startInternal();} catch (Exception x) { log(\"\", x); } }", "n_tokens": 90, "n_pass": [587, 46, 41]}
{"time": "2021-02-14 12:24:52.099557", "score": "0.5428", "loss": "0.6119", "code": "void startInternal()  { try { if (context ) ReplApplContext(this); if (catclustnull) { ReplicatedMap(thisgetName(),map); if (getAltDDNamenull)(getAltDDName());}super.startInternal();}catch (Exception x) { log(\"\", x); } }", "n_tokens": 89, "n_pass": [589, 47, 42]}
{"time": "2021-02-14 12:24:54.745761", "score": "0.5428", "loss": "0.6119", "code": "void startInternal()  { try { if (context ) ReplApplContext(this); if (catclustnull) { ReplicatedMap(thisgetName(),map); if (getAltDDNamenull)(getAltDDName());}super.startInternal();}catch(Exception x) { log(\"\", x); } }", "n_tokens": 88, "n_pass": [591, 48, 43]}
{"time": "2021-02-14 12:24:57.411947", "score": "0.5428", "loss": "0.6119", "code": "void startInternal()  { try { if (context ) ReplApplContext(this); if (catclustnull) { ReplicatedMap(thisgetName(),map); if (getAltDDNamenull)(getAltDDName());}super.startInternal();}catch(Exception x){ log(\"\", x); } }", "n_tokens": 87, "n_pass": [597, 49, 44]}
{"time": "2021-02-14 12:25:00.072630", "score": "0.5428", "loss": "0.6119", "code": "void startInternal()  { try { if (context ) ReplApplContext(this); if (catclustnull) { ReplicatedMap(thisgetName(),map); if (getAltDDNamenull)(getAltDDName());}super.startInternal();}catch(Exception x){log(\"\", x); } }", "n_tokens": 86, "n_pass": [599, 50, 45]}
{"time": "2021-02-14 12:25:02.718705", "score": "0.5428", "loss": "0.6119", "code": "void startInternal()  { try { if (context ) ReplApplContext(this); if (catclustnull) { ReplicatedMap(thisgetName(),map); if (getAltDDNamenull)(getAltDDName());}super.startInternal();}catch(Exception x){log(\"\",x); } }", "n_tokens": 85, "n_pass": [605, 51, 46]}
{"time": "2021-02-14 12:25:05.367173", "score": "0.5428", "loss": "0.6119", "code": "void startInternal()  { try { if (context ) ReplApplContext(this); if (catclustnull) { ReplicatedMap(thisgetName(),map); if (getAltDDNamenull)(getAltDDName());}super.startInternal();}catch(Exception x){log(\"\",x);} }", "n_tokens": 84, "n_pass": [609, 52, 47]}
{"time": "2021-02-14 12:25:08.009150", "score": "0.5428", "loss": "0.6119", "code": "void startInternal()  { try { if (context ) ReplApplContext(this); if (catclustnull) { ReplicatedMap(thisgetName(),map); if (getAltDDNamenull)(getAltDDName());}super.startInternal();}catch(Exception x){log(\"\",x);}}", "n_tokens": 83, "n_pass": [611, 53, 48]}
{"time": "2021-02-14 12:25:11.492839", "score": "0.5428", "loss": "0.6119", "code": "void startInternal() { try { if (context ) ReplApplContext(this); if (catclustnull) { ReplicatedMap(thisgetName(),map); if (getAltDDNamenull)(getAltDDName());}super.startInternal();}catch(Exception x){log(\"\",x);}}", "n_tokens": 82, "n_pass": [618, 54, 49]}
{"time": "2021-02-14 12:25:14.137089", "score": "0.5428", "loss": "0.6119", "code": "void startInternal(){ try { if (context ) ReplApplContext(this); if (catclustnull) { ReplicatedMap(thisgetName(),map); if (getAltDDNamenull)(getAltDDName());}super.startInternal();}catch(Exception x){log(\"\",x);}}", "n_tokens": 81, "n_pass": [619, 55, 50]}
{"time": "2021-02-14 12:25:16.781295", "score": "0.5428", "loss": "0.6119", "code": "void startInternal(){try { if (context ) ReplApplContext(this); if (catclustnull) { ReplicatedMap(thisgetName(),map); if (getAltDDNamenull)(getAltDDName());}super.startInternal();}catch(Exception x){log(\"\",x);}}", "n_tokens": 80, "n_pass": [621, 56, 51]}
{"time": "2021-02-14 12:25:19.440947", "score": "0.5428", "loss": "0.6119", "code": "void startInternal(){try{ if (context ) ReplApplContext(this); if (catclustnull) { ReplicatedMap(thisgetName(),map); if (getAltDDNamenull)(getAltDDName());}super.startInternal();}catch(Exception x){log(\"\",x);}}", "n_tokens": 79, "n_pass": [623, 57, 52]}
{"time": "2021-02-14 12:25:22.088309", "score": "0.5428", "loss": "0.6119", "code": "void startInternal(){try{if (context ) ReplApplContext(this); if (catclustnull) { ReplicatedMap(thisgetName(),map); if (getAltDDNamenull)(getAltDDName());}super.startInternal();}catch(Exception x){log(\"\",x);}}", "n_tokens": 78, "n_pass": [625, 58, 53]}
{"time": "2021-02-14 12:25:25.159990", "score": "0.5428", "loss": "0.6119", "code": "void startInternal(){try{if(context ) ReplApplContext(this); if (catclustnull) { ReplicatedMap(thisgetName(),map); if (getAltDDNamenull)(getAltDDName());}super.startInternal();}catch(Exception x){log(\"\",x);}}", "n_tokens": 77, "n_pass": [627, 59, 54]}
{"time": "2021-02-14 12:25:27.832563", "score": "0.5428", "loss": "0.6119", "code": "void startInternal(){try{if(context) ReplApplContext(this); if (catclustnull) { ReplicatedMap(thisgetName(),map); if (getAltDDNamenull)(getAltDDName());}super.startInternal();}catch(Exception x){log(\"\",x);}}", "n_tokens": 76, "n_pass": [630, 60, 55]}
{"time": "2021-02-14 12:25:30.487057", "score": "0.5428", "loss": "0.6119", "code": "void startInternal(){try{if(context)ReplApplContext(this); if (catclustnull) { ReplicatedMap(thisgetName(),map); if (getAltDDNamenull)(getAltDDName());}super.startInternal();}catch(Exception x){log(\"\",x);}}", "n_tokens": 75, "n_pass": [632, 61, 56]}
{"time": "2021-02-14 12:25:33.142152", "score": "0.5503", "loss": "0.5981", "code": "void startInternal(){try{if(context)(this); if (catclustnull) { ReplicatedMap(thisgetName(),map); if (getAltDDNamenull)(getAltDDName());}super.startInternal();}catch(Exception x){log(\"\",x);}}", "n_tokens": 74, "n_pass": [633, 62, 57]}
{"time": "2021-02-14 12:25:35.826801", "score": "0.5503", "loss": "0.5981", "code": "void startInternal(){try{if(context)(this);if (catclustnull) { ReplicatedMap(thisgetName(),map); if (getAltDDNamenull)(getAltDDName());}super.startInternal();}catch(Exception x){log(\"\",x);}}", "n_tokens": 73, "n_pass": [638, 63, 58]}
{"time": "2021-02-14 12:25:38.471619", "score": "0.5503", "loss": "0.5981", "code": "void startInternal(){try{if(context)(this);if(catclustnull) { ReplicatedMap(thisgetName(),map); if (getAltDDNamenull)(getAltDDName());}super.startInternal();}catch(Exception x){log(\"\",x);}}", "n_tokens": 72, "n_pass": [640, 64, 59]}
{"time": "2021-02-14 12:25:41.150649", "score": "0.5398", "loss": "0.6172", "code": "void startInternal(){try{if(context)(this);if(null) { ReplicatedMap(thisgetName(),map); if (getAltDDNamenull)(getAltDDName());}super.startInternal();}catch(Exception x){log(\"\",x);}}", "n_tokens": 71, "n_pass": [642, 65, 60]}
{"time": "2021-02-14 12:25:43.798541", "score": "0.5398", "loss": "0.6172", "code": "void startInternal(){try{if(context)(this);if(null){ ReplicatedMap(thisgetName(),map); if (getAltDDNamenull)(getAltDDName());}super.startInternal();}catch(Exception x){log(\"\",x);}}", "n_tokens": 70, "n_pass": [645, 66, 61]}
{"time": "2021-02-14 12:25:46.477788", "score": "0.5398", "loss": "0.6172", "code": "void startInternal(){try{if(context)(this);if(null){ReplicatedMap(thisgetName(),map); if (getAltDDNamenull)(getAltDDName());}super.startInternal();}catch(Exception x){log(\"\",x);}}", "n_tokens": 69, "n_pass": [647, 67, 62]}
{"time": "2021-02-14 12:25:49.130660", "score": "0.5359", "loss": "0.6246", "code": "void startInternal(){try{if(context)(this);if(null){ReplicatedMap(getName(),map); if (getAltDDNamenull)(getAltDDName());}super.startInternal();}catch(Exception x){log(\"\",x);}}", "n_tokens": 68, "n_pass": [650, 68, 63]}
{"time": "2021-02-14 12:25:51.785402", "score": "0.5359", "loss": "0.6246", "code": "void startInternal(){try{if(context)(this);if(null){ReplicatedMap(getName(),map);if (getAltDDNamenull)(getAltDDName());}super.startInternal();}catch(Exception x){log(\"\",x);}}", "n_tokens": 67, "n_pass": [658, 69, 64]}
{"time": "2021-02-14 12:25:54.836634", "score": "0.5359", "loss": "0.6246", "code": "void startInternal(){try{if(context)(this);if(null){ReplicatedMap(getName(),map);if(getAltDDNamenull)(getAltDDName());}super.startInternal();}catch(Exception x){log(\"\",x);}}", "n_tokens": 66, "n_pass": [660, 70, 65]}
{"time": "2021-02-14 12:25:57.479623", "score": "0.5198", "loss": "0.6552", "code": "void startInternal(){try{if(context)(this);if(null){ReplicatedMap(getName(),map);if(null)(getAltDDName());}super.startInternal();}catch(Exception x){log(\"\",x);}}", "n_tokens": 65, "n_pass": [662, 71, 66]}

Minimal simplified code:
void startInternal(){try{if(context)(this);if(null){ReplicatedMap(getName(),map);if(null)(getAltDDName());}super.startInternal();}catch(Exception x){log("",x);}}

