
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/codefollower__Tomcat-Research/java/org/apache/catalina/tribes/group/interceptors/FragmentationInterceptor_sendMessage.java
method_name = sendMessage
method_body = @Override public void sendMessage(Member[] destination, ChannelMessage msg, InterceptorPayload payload) throws ChannelException { int size = msg.getMessage().getLength(); boolean frag = (size > maxSize) && okToProcess(msg.getOptions()); if (frag) { frag(destination, msg, payload); } else { msg.getMessage().append(frag); super.sendMessage(destination, msg, payload); } }
predict, score, loss = sendMessage, 0.9428709745407104, 0.0778319239616394

Trace of simplified code(s):
{"time": "2021-02-14 12:53:40.292557", "score": "0.9747", "loss": "0.0349", "code": "@Override public void sendMessage(Member[] destination, ChannelMessage msg, InterceptorPayload payload) throws ChannelException { int size = msg.getMessage().getLength(); boolean frag = (size > maxSize) && okToProcess(msg.getOptions()); if (frag) { frag(destination, msg, payload); } else { msg.getMessage().append(frag); super.sendMessage(destination, msg, payload); } }", "n_tokens": 131, "n_pass": [1, 1, 1]}
{"time": "2021-02-14 12:53:42.954141", "score": "0.9816", "loss": "0.0258", "code": "@Override public void sendMessage(Member[] destination, ChannelMessage msg, InterceptorPayload payload) throws ChannelException {  okToProcess(msg.getOptions()); if (frag) { frag(destination, msg, payload); } else { msg.getMessage().append(frag); super.sendMessage(destination, msg, payload); } }", "n_tokens": 98, "n_pass": [9, 2, 2]}
{"time": "2021-02-14 12:53:46.022530", "score": "0.9836", "loss": "0.0227", "code": "@Override public void sendMessage(Member[] destination, ChannelMessage msg, InterceptorPayload payload) throws ChannelException {  okToProcess(msg); if (frag) { frag(destination, msg, payload); } else { msg.getMessage().append(frag); super.sendMessage(destination, msg, payload); } }", "n_tokens": 94, "n_pass": [73, 3, 3]}
{"time": "2021-02-14 12:53:48.696417", "score": "0.9854", "loss": "0.0204", "code": "@Override public void sendMessage(Member[] destination, ChannelMessage msg, InterceptorPayload payload) throws ChannelException {  okToProcess(msg); if (frag) { frag(destination, msg, payload); } else { msg.getMessage(frag); super.sendMessage(destination, msg, payload); } }", "n_tokens": 90, "n_pass": [82, 4, 4]}
{"time": "2021-02-14 12:53:51.370652", "score": "0.9883", "loss": "0.0163", "code": " void sendMessage(Member[] destination, ChannelMessage msg, InterceptorPayload payload) throws ChannelException {  okToProcess(msg); if (frag) { frag(destination, msg, payload); } else { msg.getMessage(frag); super.sendMessage(destination, msg, payload); } }", "n_tokens": 86, "n_pass": [88, 5, 5]}
{"time": "2021-02-14 12:53:54.018121", "score": "0.985", "loss": "0.0191", "code": " void sendMessage(Member[] destination,  InterceptorPayload payload) throws ChannelException {  okToProcess(msg); if (frag) { frag(destination, msg, payload); } else { msg.getMessage(frag); super.sendMessage(destination, msg, payload); } }", "n_tokens": 82, "n_pass": [92, 6, 6]}
{"time": "2021-02-14 12:53:56.673733", "score": "0.9823", "loss": "0.0231", "code": " void sendMessage(Member[] destination,  InterceptorPayload payload) throws ChannelException {  okToProcess(msg); if (frag) { frag(destination, msg, payload); } else {(frag); super.sendMessage(destination, msg, payload); } }", "n_tokens": 78, "n_pass": [104, 7, 7]}
{"time": "2021-02-14 12:53:59.316762", "score": "0.9826", "loss": "0.0225", "code": " void sendMessage(Member[] destination,  InterceptorPayload payload) throws ChannelException {  okToProcess(msg); if (frag) { frag(destination, msg, payload); } else { super.sendMessage(destination, msg, payload); } }", "n_tokens": 74, "n_pass": [105, 8, 8]}
{"time": "2021-02-14 12:54:02.383188", "score": "0.9836", "loss": "0.0219", "code": " void sendMessage(Member[] destination,  InterceptorPayload payload) throws ChannelException {  okToProcess(msg); if (frag) { frag(destination, msg, payload); } else { super.sendMessage(destinationmsg, payload); } }", "n_tokens": 72, "n_pass": [163, 9, 9]}
{"time": "2021-02-14 12:54:05.429975", "score": "0.9839", "loss": "0.0216", "code": " void sendMessage(Member destination,  InterceptorPayload payload) throws ChannelException {  okToProcess(msg); if (frag) { frag(destination, msg, payload); } else { super.sendMessage(destinationmsg, payload); } }", "n_tokens": 70, "n_pass": [171, 10, 10]}
{"time": "2021-02-14 12:54:08.065072", "score": "0.9718", "loss": "0.0346", "code": " void sendMessage(Member destination,  InterceptorPayload payload) throws ChannelException { (msg); if (frag) { frag(destination, msg, payload); } else { super.sendMessage(destinationmsg, payload); } }", "n_tokens": 68, "n_pass": [180, 11, 11]}
{"time": "2021-02-14 12:54:10.706544", "score": "0.9684", "loss": "0.0399", "code": " void sendMessage(Member destination,  InterceptorPayload payload) throws ChannelException { (msg); if (frag) { frag(destinationmsg, payload); } else { super.sendMessage(destinationmsg, payload); } }", "n_tokens": 66, "n_pass": [189, 12, 12]}
{"time": "2021-02-14 12:54:13.344718", "score": "0.9513", "loss": "0.0642", "code": " void sendMessage(Member destination,  InterceptorPayload payload) throws ChannelException { (msg); if (frag) { frag(destinationmsg, payload); } { super.sendMessage(destinationmsg, payload); } }", "n_tokens": 64, "n_pass": [194, 13, 13]}
{"time": "2021-02-14 12:54:25.093628", "score": "0.9513", "loss": "0.0642", "code": " void sendMessage(Member destination,  InterceptorPayload payload) throws ChannelException { (msg); if (frag) { frag(destinationmsg, payload); }{ super.sendMessage(destinationmsg, payload); } }", "n_tokens": 63, "n_pass": [288, 14, 14]}
{"time": "2021-02-14 12:54:27.722262", "score": "0.9513", "loss": "0.0642", "code": " void sendMessage(Member destination,  InterceptorPayload payload) throws ChannelException { (msg); if (frag) { frag(destinationmsg, payload); }{super.sendMessage(destinationmsg, payload); } }", "n_tokens": 62, "n_pass": [289, 15, 15]}
{"time": "2021-02-14 12:54:30.353361", "score": "0.9069", "loss": "0.1248", "code": " void sendMessage(Member destination,  InterceptorPayload payload) throws ChannelException { (msg); if (frag) { frag(destinationmsg, payload); }{supersendMessage(destinationmsg, payload); } }", "n_tokens": 61, "n_pass": [291, 16, 16]}
{"time": "2021-02-14 12:54:33.389337", "score": "0.9195", "loss": "0.1066", "code": " void sendMessage(Member destination,  InterceptorPayload payload) throws ChannelException { (msg); if (frag) { frag(destinationmsg, payload); }{supersendMessage(msg, payload); } }", "n_tokens": 60, "n_pass": [294, 17, 17]}
{"time": "2021-02-14 12:54:36.020890", "score": "0.9195", "loss": "0.1066", "code": " void sendMessage(Member destination,  InterceptorPayload payload) throws ChannelException { (msg); if (frag) { frag(destinationmsg, payload); }{supersendMessage(msg,payload); } }", "n_tokens": 59, "n_pass": [297, 18, 18]}
{"time": "2021-02-14 12:54:38.656416", "score": "0.9195", "loss": "0.1066", "code": "void sendMessage(Member destination,  InterceptorPayload payload) throws ChannelException { (msg); if (frag) { frag(destinationmsg, payload); }{supersendMessage(msg,payload); } }", "n_tokens": 58, "n_pass": [303, 19, 19]}
{"time": "2021-02-14 12:54:42.097311", "score": "0.9195", "loss": "0.1066", "code": "void sendMessage(Member destination, InterceptorPayload payload) throws ChannelException { (msg); if (frag) { frag(destinationmsg, payload); }{supersendMessage(msg,payload); } }", "n_tokens": 57, "n_pass": [312, 20, 20]}
{"time": "2021-02-14 12:54:44.759224", "score": "0.9195", "loss": "0.1066", "code": "void sendMessage(Member destination,InterceptorPayload payload) throws ChannelException { (msg); if (frag) { frag(destinationmsg, payload); }{supersendMessage(msg,payload); } }", "n_tokens": 56, "n_pass": [313, 21, 21]}
{"time": "2021-02-14 12:54:47.389687", "score": "0.9195", "loss": "0.1066", "code": "void sendMessage(Member destination,InterceptorPayload payload)throws ChannelException { (msg); if (frag) { frag(destinationmsg, payload); }{supersendMessage(msg,payload); } }", "n_tokens": 55, "n_pass": [318, 22, 22]}
{"time": "2021-02-14 12:54:50.025442", "score": "0.9195", "loss": "0.1066", "code": "void sendMessage(Member destination,InterceptorPayload payload)throws ChannelException{ (msg); if (frag) { frag(destinationmsg, payload); }{supersendMessage(msg,payload); } }", "n_tokens": 54, "n_pass": [322, 23, 23]}
{"time": "2021-02-14 12:54:52.690247", "score": "0.9195", "loss": "0.1066", "code": "void sendMessage(Member destination,InterceptorPayload payload)throws ChannelException{(msg); if (frag) { frag(destinationmsg, payload); }{supersendMessage(msg,payload); } }", "n_tokens": 53, "n_pass": [324, 24, 24]}
{"time": "2021-02-14 12:54:55.322713", "score": "0.9195", "loss": "0.1066", "code": "void sendMessage(Member destination,InterceptorPayload payload)throws ChannelException{(msg);if (frag) { frag(destinationmsg, payload); }{supersendMessage(msg,payload); } }", "n_tokens": 52, "n_pass": [329, 25, 25]}
{"time": "2021-02-14 12:54:57.965094", "score": "0.9195", "loss": "0.1066", "code": "void sendMessage(Member destination,InterceptorPayload payload)throws ChannelException{(msg);if(frag) { frag(destinationmsg, payload); }{supersendMessage(msg,payload); } }", "n_tokens": 51, "n_pass": [331, 26, 26]}
{"time": "2021-02-14 12:55:00.609754", "score": "0.9195", "loss": "0.1066", "code": "void sendMessage(Member destination,InterceptorPayload payload)throws ChannelException{(msg);if(frag){ frag(destinationmsg, payload); }{supersendMessage(msg,payload); } }", "n_tokens": 50, "n_pass": [335, 27, 27]}
{"time": "2021-02-14 12:55:03.244662", "score": "0.9195", "loss": "0.1066", "code": "void sendMessage(Member destination,InterceptorPayload payload)throws ChannelException{(msg);if(frag){frag(destinationmsg, payload); }{supersendMessage(msg,payload); } }", "n_tokens": 49, "n_pass": [337, 28, 28]}
{"time": "2021-02-14 12:55:05.875305", "score": "0.9288", "loss": "0.093", "code": "void sendMessage(Member destination,InterceptorPayload payload)throws ChannelException{(msg);if(frag){frag(msg, payload); }{supersendMessage(msg,payload); } }", "n_tokens": 48, "n_pass": [340, 29, 29]}
{"time": "2021-02-14 12:55:08.527992", "score": "0.9288", "loss": "0.093", "code": "void sendMessage(Member destination,InterceptorPayload payload)throws ChannelException{(msg);if(frag){frag(msg,payload); }{supersendMessage(msg,payload); } }", "n_tokens": 47, "n_pass": [343, 30, 30]}
{"time": "2021-02-14 12:55:11.177522", "score": "0.9288", "loss": "0.093", "code": "void sendMessage(Member destination,InterceptorPayload payload)throws ChannelException{(msg);if(frag){frag(msg,payload);}{supersendMessage(msg,payload); } }", "n_tokens": 46, "n_pass": [347, 31, 31]}
{"time": "2021-02-14 12:55:13.840571", "score": "0.9614", "loss": "0.0488", "code": "void sendMessage(Member destination,InterceptorPayload payload)throws ChannelException{(msg);if(frag){frag(msg,payload);}{sendMessage(msg,payload); } }", "n_tokens": 45, "n_pass": [350, 32, 32]}
{"time": "2021-02-14 12:55:16.482979", "score": "0.9957", "loss": "0.0068", "code": "void sendMessage(Member destination,InterceptorPayload payload)throws ChannelException{(msg);if(frag){frag(msg,payload);}{sendMessage(msgpayload); } }", "n_tokens": 44, "n_pass": [354, 33, 33]}
{"time": "2021-02-14 12:55:19.120135", "score": "0.9605", "loss": "0.0497", "code": "void sendMessage(Member destination,InterceptorPayload payload)throws ChannelException{(msg);if(frag){frag(msg,payload);}{sendMessage(msg); } }", "n_tokens": 43, "n_pass": [355, 34, 34]}
{"time": "2021-02-14 12:55:22.592555", "score": "0.9968", "loss": "0.0061", "code": "void sendMessage(Member destination,InterceptorPayload payload)throws ChannelException{(msg);if(frag){frag(msgpayload);}{sendMessage(msg); } }", "n_tokens": 42, "n_pass": [388, 35, 35]}
{"time": "2021-02-14 12:55:25.232202", "score": "0.9578", "loss": "0.0533", "code": "void sendMessage(Member destination,InterceptorPayload payload)throws ChannelException{(msg);if(frag){frag(msg);}{sendMessage(msg); } }", "n_tokens": 41, "n_pass": [389, 36, 36]}
{"time": "2021-02-14 12:55:27.875980", "score": "0.879", "loss": "0.1556", "code": "void sendMessage(Member destination,InterceptorPayload payload)throws ChannelException{(msg);if(frag){frag(msg);}{(msg); } }", "n_tokens": 40, "n_pass": [394, 37, 37]}
{"time": "2021-02-14 12:55:31.328700", "score": "0.8604", "loss": "0.1794", "code": "void sendMessage(Member destination,InterceptorPayload payload)throws ChannelException{(msg);if(frag){(msg);}{(msg); } }", "n_tokens": 39, "n_pass": [426, 38, 38]}
{"time": "2021-02-14 12:55:35.547078", "score": "0.8604", "loss": "0.1794", "code": "void sendMessage(Member destination,InterceptorPayload payload)throws ChannelException{(msg);if(frag){(msg);}{(msg);} }", "n_tokens": 38, "n_pass": [468, 39, 39]}
{"time": "2021-02-14 12:55:38.173502", "score": "0.8604", "loss": "0.1794", "code": "void sendMessage(Member destination,InterceptorPayload payload)throws ChannelException{(msg);if(frag){(msg);}{(msg);}}", "n_tokens": 37, "n_pass": [469, 40, 40]}

Minimal simplified code:
void sendMessage(Member destination,InterceptorPayload payload)throws ChannelException{(msg);if(frag){(msg);}{(msg);}}

