
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/fengjiachun__Jupiter/jupiter-common/src/main/java/org/jupiter/common/util/collection/ByteObjectHashMap_toString.java
method_name = toString
method_body = @Override public String toString() { if (isEmpty()) { return "{}"; } StringBuilder sb = new StringBuilder(4 * size); sb.append('{'); boolean first = true; for (int i = 0; i < values.length; ++i) { V value = values[i]; if (value != null) { if (!first) { sb.append(", "); } sb.append(keyToString(keys[i])).append('=').append(value == this ? "(this Map)" : toExternal(value)); first = false; } } return sb.append('}').toString(); }
predict, score, loss = toString, 0.9995661377906799, 0.0006586528033949435

Trace of simplified code(s):
{"time": "2021-02-14 11:57:07.239436", "score": "1.0", "loss": "0.0001", "code": "@Override public String toString() { if (isEmpty()) { return \"{}\"; } StringBuilder sb = new StringBuilder(4 * size); sb.append('{'); boolean first = true; for (int i = 0; i < values.length; ++i) { V value = values[i]; if (value != null) { if (!first) { sb.append(\", \"); } sb.append(keyToString(keys[i])).append('=').append(value == this ? \"(this Map)\" : toExternal(value)); first = false; } } return sb.append('}').toString(); }", "n_tokens": 221, "n_pass": [1, 1, 1]}
{"time": "2021-02-14 11:57:09.945580", "score": "0.9994", "loss": "0.0008", "code": "@Override public String toString() { if (isEmpty()) { return \"{}\"; } StringBuilder sb = new StringBuilder(4 * size); sb.append('{'); boolean first = true; for (int i = 0; i < values.length; ++i) { V value = values[i]; if (value != null) { if (!first) { sb.append(\", \"); } sb.append(keyToString(keys[i])).append('=').first = false; } } return sb.append('}').toString(); }", "n_tokens": 193, "n_pass": [26, 2, 2]}
{"time": "2021-02-14 11:57:12.646251", "score": "0.9981", "loss": "0.0035", "code": "@Override public String toString() { if (isEmpty()) { return \"{}\"; } StringBuilder sb = append('{'); boolean first = true; for (int i = 0; i < values.length; ++i) { V value = values[i]; if (value != null) { if (!first) { sb.append(\", \"); } sb.append(keyToString(keys[i])).append('=').first = false; } } return sb.append('}').toString(); }", "n_tokens": 179, "n_pass": [52, 3, 3]}
{"time": "2021-02-14 11:57:15.356299", "score": "0.9972", "loss": "0.004", "code": "@Override public String toString() { if (isEmpty()) { return \"{}\"; } StringBuilder sb = true; for (int i = 0; i < values.length; ++i) { V value = values[i]; if (value != null) { if (!first) { sb.append(\", \"); } sb.append(keyToString(keys[i])).append('=').first = false; } } return sb.append('}').toString(); }", "n_tokens": 165, "n_pass": [53, 4, 4]}
{"time": "2021-02-14 11:57:18.052944", "score": "0.9986", "loss": "0.0018", "code": "@Override public String toString() { if (isEmpty()) { return \"{}\"; } StringBuilder sb = true; for (int i = 0;length; ++i) { V value = values[i]; if (value != null) { if (!first) { sb.append(\", \"); } sb.append(keyToString(keys[i])).append('=').first = false; } } return sb.append('}').toString(); }", "n_tokens": 158, "n_pass": [92, 5, 5]}
{"time": "2021-02-14 11:57:20.736506", "score": "0.9992", "loss": "0.0011", "code": "@Override public String toString() { if (isEmpty()) { return \"{}\"; } StringBuilder sb = true; for (int i = 0;length; ++i) { V value = values[i]; if (value != null) { { sb.append(\", \"); } sb.append(keyToString(keys[i])).append('=').first = false; } } return sb.append('}').toString(); }", "n_tokens": 151, "n_pass": [97, 6, 6]}
{"time": "2021-02-14 11:57:23.410840", "score": "0.9991", "loss": "0.0013", "code": "@Override public String toString() { if (isEmpty()) { return \"{}\"; } StringBuilder sb = true; for (int i = 0;length; ++i) { V value = values[i]; if (value != null) { { sb.append(\", \"); } sb.append(keyToString(keys[i])).first = false; } } return sb.append('}').toString(); }", "n_tokens": 144, "n_pass": [102, 7, 7]}
{"time": "2021-02-14 11:57:26.086132", "score": "0.9949", "loss": "0.0104", "code": "@Override public String toString() { if (isEmpty()) { return \"{}\"; } StringBuilder sb = true; for (int i = 0;length; ++i) { V value = values[i]; if (value != null) { { sb.append(\", \"); } sb.append(keyToString(keys[i])).first = false; } } return sb.toString(); }", "n_tokens": 137, "n_pass": [105, 8, 8]}
{"time": "2021-02-14 11:57:29.264560", "score": "0.9948", "loss": "0.0106", "code": "@Override public String toString() { if (isEmpty()) { return \"{}\"; }true; for (int i = 0;length; ++i) { V value = values[i]; if (value != null) { { sb.append(\", \"); } sb.append(keyToString(keys[i])).first = false; } } return sb.toString(); }", "n_tokens": 130, "n_pass": [112, 9, 9]}
{"time": "2021-02-14 11:57:32.380894", "score": "0.9949", "loss": "0.01", "code": "@Override public String toString() { if (isEmpty()) { return \"{}\"; }true; for (int i ;length; ++i) { V value = values[i]; if (value != null) { { sb.append(\", \"); } sb.append(keyToString(keys[i])).first = false; } } return sb.toString(); }", "n_tokens": 127, "n_pass": [174, 10, 10]}
{"time": "2021-02-14 11:57:35.063648", "score": "0.9936", "loss": "0.0128", "code": "@Override public String toString() { if (isEmpty()) { return \"{}\"; }true; for (int i ;length;i) { V value = values[i]; if (value != null) { { sb.append(\", \"); } sb.append(keyToString(keys[i])).first = false; } } return sb.toString(); }", "n_tokens": 124, "n_pass": [176, 11, 11]}
{"time": "2021-02-14 11:57:37.750102", "score": "0.9907", "loss": "0.0163", "code": "@Override public String toString() { if (isEmpty()) { return \"{}\"; }true; for (int i ;length;i) { V= values[i]; if (value != null) { { sb.append(\", \"); } sb.append(keyToString(keys[i])).first = false; } } return sb.toString(); }", "n_tokens": 121, "n_pass": [179, 12, 12]}
{"time": "2021-02-14 11:57:40.408057", "score": "0.9916", "loss": "0.0169", "code": "@Override public String toString() { if (isEmpty()) { return \"{}\"; }true; for (int i ;length;i) { V[i]; if (value != null) { { sb.append(\", \"); } sb.append(keyToString(keys[i])).first = false; } } return sb.toString(); }", "n_tokens": 118, "n_pass": [180, 13, 13]}
{"time": "2021-02-14 11:57:43.082942", "score": "0.9917", "loss": "0.0168", "code": "@Override public String toString() { if (isEmpty()) { return \"{}\"; }true; for (int i ;length;i) { V; if (value != null) { { sb.append(\", \"); } sb.append(keyToString(keys[i])).first = false; } } return sb.toString(); }", "n_tokens": 115, "n_pass": [181, 14, 14]}
{"time": "2021-02-14 11:57:45.744423", "score": "0.9919", "loss": "0.0158", "code": "@Override public String toString() { if (isEmpty()) { return \"{}\"; }true; for (int i ;length;i) { V; if (value != null) { {(\", \"); } sb.append(keyToString(keys[i])).first = false; } } return sb.toString(); }", "n_tokens": 111, "n_pass": [186, 15, 15]}
{"time": "2021-02-14 11:57:48.391863", "score": "0.9929", "loss": "0.0214", "code": "@Override public String toString() { if (isEmpty()) { return \"{}\"; }true; for (int i ;length;i) { V; if (value != null) { {(\", \"); } sb.append(keyToString()).first = false; } } return sb.toString(); }", "n_tokens": 107, "n_pass": [191, 16, 16]}
{"time": "2021-02-14 11:57:51.044385", "score": "0.9961", "loss": "0.0103", "code": "@Override public String toString() { if (isEmpty()) { return \"{}\"; }true; for (int i ;length;i) { V; if (value != null) { {(\", \"); } sb.append(keyToString()).first; } } return sb.toString(); }", "n_tokens": 103, "n_pass": [193, 17, 17]}
{"time": "2021-02-14 11:57:53.703943", "score": "0.9818", "loss": "0.0401", "code": "public String toString() { if (isEmpty()) { return \"{}\"; }true; for (int i ;length;i) { V; if (value != null) { {(\", \"); } sb.append(keyToString()).first; } } return sb.toString(); }", "n_tokens": 100, "n_pass": [198, 18, 18]}
{"time": "2021-02-14 11:58:00.952418", "score": "0.9818", "loss": "0.0401", "code": " String toString() { if (isEmpty()) { return \"{}\"; }true; for (int i ;length;i) { V; if (value != null) { {(\", \"); } sb.append(keyToString()).first; } } return sb.toString(); }", "n_tokens": 99, "n_pass": [286, 19, 19]}
{"time": "2021-02-14 11:58:03.592822", "score": "0.9818", "loss": "0.0401", "code": "String toString() { if (isEmpty()) { return \"{}\"; }true; for (int i ;length;i) { V; if (value != null) { {(\", \"); } sb.append(keyToString()).first; } } return sb.toString(); }", "n_tokens": 98, "n_pass": [287, 20, 20]}
{"time": "2021-02-14 11:58:07.060143", "score": "0.9818", "loss": "0.0401", "code": "String toString(){ if (isEmpty()) { return \"{}\"; }true; for (int i ;length;i) { V; if (value != null) { {(\", \"); } sb.append(keyToString()).first; } } return sb.toString(); }", "n_tokens": 97, "n_pass": [292, 21, 21]}
{"time": "2021-02-14 11:58:09.709742", "score": "0.9818", "loss": "0.0401", "code": "String toString(){if (isEmpty()) { return \"{}\"; }true; for (int i ;length;i) { V; if (value != null) { {(\", \"); } sb.append(keyToString()).first; } } return sb.toString(); }", "n_tokens": 96, "n_pass": [294, 22, 22]}
{"time": "2021-02-14 11:58:12.354645", "score": "0.9818", "loss": "0.0401", "code": "String toString(){if(isEmpty()) { return \"{}\"; }true; for (int i ;length;i) { V; if (value != null) { {(\", \"); } sb.append(keyToString()).first; } } return sb.toString(); }", "n_tokens": 95, "n_pass": [296, 23, 23]}
{"time": "2021-02-14 11:58:15.021342", "score": "0.98", "loss": "0.0378", "code": "String toString(){if(isEmpty()) { \"{}\"; }true; for (int i ;length;i) { V; if (value != null) { {(\", \"); } sb.append(keyToString()).first; } } return sb.toString(); }", "n_tokens": 93, "n_pass": [303, 24, 24]}
{"time": "2021-02-14 11:58:17.682521", "score": "0.9796", "loss": "0.038", "code": "String toString(){if(isEmpty()) { \"{}\"; }true; for (int i ;length;i) {; if (value != null) { {(\", \"); } sb.append(keyToString()).first; } } return sb.toString(); }", "n_tokens": 91, "n_pass": [316, 25, 25]}
{"time": "2021-02-14 11:58:20.333354", "score": "0.9796", "loss": "0.038", "code": "String toString(){if(isEmpty()) { \"{}\"; }true; for (int i ;length;i) {if (value != null) { {(\", \"); } sb.append(keyToString()).first; } } return sb.toString(); }", "n_tokens": 89, "n_pass": [317, 26, 26]}
{"time": "2021-02-14 11:58:22.988013", "score": "0.8443", "loss": "0.3742", "code": "String toString(){if(isEmpty()) { \"{}\"; }true; for (int i ;length;i) {if (value= null) { {(\", \"); } sb.append(keyToString()).first; } } return sb.toString(); }", "n_tokens": 87, "n_pass": [320, 27, 27]}
{"time": "2021-02-14 11:58:25.635435", "score": "0.7142", "loss": "0.3614", "code": "String toString(){if(isEmpty()) { \"{}\"; }true; for (int i ;length;i) {if (valuenull) { {(\", \"); } sb.append(keyToString()).first; } } return sb.toString(); }", "n_tokens": 85, "n_pass": [321, 28, 28]}
{"time": "2021-02-14 11:58:28.303903", "score": "0.7081", "loss": "0.3701", "code": "String toString(){if(isEmpty()) { \"{}\"; }true; for (int i ;length;i) {if (valuenull) { {(\"\"); } sb.append(keyToString()).first; } } return sb.toString(); }", "n_tokens": 83, "n_pass": [326, 29, 29]}
{"time": "2021-02-14 11:58:30.962690", "score": "0.8774", "loss": "0.1467", "code": "String toString(){if(isEmpty()) { \"{}\"; }true; for (int i ;length;i) {if (valuenull) { {(\"\"); } append(keyToString()).first; } } return sb.toString(); }", "n_tokens": 81, "n_pass": [330, 30, 30]}
{"time": "2021-02-14 11:58:33.611025", "score": "0.946", "loss": "0.0681", "code": "String toString(){if(isEmpty()) { \"{}\"; }true; for (int i ;length;i) {if (valuenull) { {(\"\"); } append(keyToString()); } } return sb.toString(); }", "n_tokens": 79, "n_pass": [334, 31, 31]}
{"time": "2021-02-14 11:58:36.296070", "score": "0.973", "loss": "0.0422", "code": "String toString(){if(isEmpty()) { \"{}\"; }true; for (int i ;length;i) {if (valuenull) { {(\"\"); } append(keyToString()); } } sb.toString(); }", "n_tokens": 77, "n_pass": [338, 32, 32]}
{"time": "2021-02-14 11:58:38.942895", "score": "0.9711", "loss": "0.0487", "code": "String toString(){if(isEmpty()) { \"{}\"; }true; for (int i ;length;i) {if (valuenull) { {(\"\"); } append(keyToString()); } } toString(); }", "n_tokens": 75, "n_pass": [339, 33, 33]}
{"time": "2021-02-14 11:58:51.867139", "score": "0.9711", "loss": "0.0487", "code": "String toString(){if(isEmpty()) { \"{}\"; }true; for (int i ;length;i) {if (valuenull) { {(\"\"); } append(keyToString()); } } toString();}", "n_tokens": 74, "n_pass": [451, 34, 34]}
{"time": "2021-02-14 11:58:55.743653", "score": "0.9711", "loss": "0.0487", "code": "String toString(){if(isEmpty()){ \"{}\"; }true; for (int i ;length;i) {if (valuenull) { {(\"\"); } append(keyToString()); } } toString();}", "n_tokens": 73, "n_pass": [464, 35, 35]}
{"time": "2021-02-14 11:58:58.386009", "score": "0.9711", "loss": "0.0487", "code": "String toString(){if(isEmpty()){\"{}\"; }true; for (int i ;length;i) {if (valuenull) { {(\"\"); } append(keyToString()); } } toString();}", "n_tokens": 72, "n_pass": [466, 36, 36]}
{"time": "2021-02-14 11:59:01.037025", "score": "0.9699", "loss": "0.05", "code": "String toString(){if(isEmpty()){\"}\"; }true; for (int i ;length;i) {if (valuenull) { {(\"\"); } append(keyToString()); } } toString();}", "n_tokens": 71, "n_pass": [468, 37, 37]}
{"time": "2021-02-14 11:59:03.712197", "score": "0.9686", "loss": "0.0522", "code": "String toString(){if(isEmpty()){\"\"; }true; for (int i ;length;i) {if (valuenull) { {(\"\"); } append(keyToString()); } } toString();}", "n_tokens": 70, "n_pass": [469, 38, 38]}
{"time": "2021-02-14 11:59:06.358020", "score": "0.9686", "loss": "0.0522", "code": "String toString(){if(isEmpty()){\"\";}true; for (int i ;length;i) {if (valuenull) { {(\"\"); } append(keyToString()); } } toString();}", "n_tokens": 69, "n_pass": [472, 39, 39]}
{"time": "2021-02-14 11:59:09.017165", "score": "0.9719", "loss": "0.0473", "code": "String toString(){if(isEmpty()){\"\";}; for (int i ;length;i) {if (valuenull) { {(\"\"); } append(keyToString()); } } toString();}", "n_tokens": 68, "n_pass": [474, 40, 40]}
{"time": "2021-02-14 11:59:11.670229", "score": "0.9728", "loss": "0.0458", "code": "String toString(){if(isEmpty()){\"\";} for (int i ;length;i) {if (valuenull) { {(\"\"); } append(keyToString()); } } toString();}", "n_tokens": 67, "n_pass": [475, 41, 41]}
{"time": "2021-02-14 11:59:14.314802", "score": "0.9728", "loss": "0.0458", "code": "String toString(){if(isEmpty()){\"\";}for (int i ;length;i) {if (valuenull) { {(\"\"); } append(keyToString()); } } toString();}", "n_tokens": 66, "n_pass": [476, 42, 42]}
{"time": "2021-02-14 11:59:16.966331", "score": "0.9728", "loss": "0.0458", "code": "String toString(){if(isEmpty()){\"\";}for(int i ;length;i) {if (valuenull) { {(\"\"); } append(keyToString()); } } toString();}", "n_tokens": 65, "n_pass": [478, 43, 43]}
{"time": "2021-02-14 11:59:19.629329", "score": "0.9751", "loss": "0.0389", "code": "String toString(){if(isEmpty()){\"\";}for( i ;length;i) {if (valuenull) { {(\"\"); } append(keyToString()); } } toString();}", "n_tokens": 64, "n_pass": [480, 44, 44]}
{"time": "2021-02-14 11:59:22.258966", "score": "0.9751", "loss": "0.0389", "code": "String toString(){if(isEmpty()){\"\";}for(i ;length;i) {if (valuenull) { {(\"\"); } append(keyToString()); } } toString();}", "n_tokens": 63, "n_pass": [481, 45, 45]}
{"time": "2021-02-14 11:59:24.914641", "score": "0.9736", "loss": "0.0417", "code": "String toString(){if(isEmpty()){\"\";}for( ;length;i) {if (valuenull) { {(\"\"); } append(keyToString()); } } toString();}", "n_tokens": 62, "n_pass": [482, 46, 46]}
{"time": "2021-02-14 11:59:27.554543", "score": "0.9736", "loss": "0.0417", "code": "String toString(){if(isEmpty()){\"\";}for(;length;i) {if (valuenull) { {(\"\"); } append(keyToString()); } } toString();}", "n_tokens": 61, "n_pass": [483, 47, 47]}
{"time": "2021-02-14 11:59:30.191006", "score": "0.9747", "loss": "0.0388", "code": "String toString(){if(isEmpty()){\"\";}for(;;i) {if (valuenull) { {(\"\"); } append(keyToString()); } } toString();}", "n_tokens": 60, "n_pass": [485, 48, 48]}
{"time": "2021-02-14 11:59:32.828229", "score": "0.9733", "loss": "0.0406", "code": "String toString(){if(isEmpty()){\"\";}for(;;) {if (valuenull) { {(\"\"); } append(keyToString()); } } toString();}", "n_tokens": 59, "n_pass": [487, 49, 49]}
{"time": "2021-02-14 11:59:35.473228", "score": "0.9733", "loss": "0.0406", "code": "String toString(){if(isEmpty()){\"\";}for(;;){if (valuenull) { {(\"\"); } append(keyToString()); } } toString();}", "n_tokens": 58, "n_pass": [489, 50, 50]}
{"time": "2021-02-14 11:59:38.106103", "score": "0.9733", "loss": "0.0406", "code": "String toString(){if(isEmpty()){\"\";}for(;;){if(valuenull) { {(\"\"); } append(keyToString()); } } toString();}", "n_tokens": 57, "n_pass": [492, 51, 51]}
{"time": "2021-02-14 11:59:40.757124", "score": "0.9518", "loss": "0.0744", "code": "String toString(){if(isEmpty()){\"\";}for(;;){if(null) { {(\"\"); } append(keyToString()); } } toString();}", "n_tokens": 56, "n_pass": [494, 52, 52]}
{"time": "2021-02-14 11:59:43.390604", "score": "0.9518", "loss": "0.0744", "code": "String toString(){if(isEmpty()){\"\";}for(;;){if(null){ {(\"\"); } append(keyToString()); } } toString();}", "n_tokens": 55, "n_pass": [497, 53, 53]}
{"time": "2021-02-14 11:59:46.027893", "score": "0.9518", "loss": "0.0744", "code": "String toString(){if(isEmpty()){\"\";}for(;;){if(null){{(\"\"); } append(keyToString()); } } toString();}", "n_tokens": 54, "n_pass": [499, 54, 54]}
{"time": "2021-02-14 11:59:48.657194", "score": "0.9518", "loss": "0.0744", "code": "String toString(){if(isEmpty()){\"\";}for(;;){if(null){{(\"\");} append(keyToString()); } } toString();}", "n_tokens": 53, "n_pass": [506, 55, 55]}
{"time": "2021-02-14 11:59:51.291995", "score": "0.9518", "loss": "0.0744", "code": "String toString(){if(isEmpty()){\"\";}for(;;){if(null){{(\"\");}append(keyToString()); } } toString();}", "n_tokens": 52, "n_pass": [508, 56, 56]}
{"time": "2021-02-14 11:59:53.931848", "score": "0.8689", "loss": "0.2093", "code": "String toString(){if(isEmpty()){\"\";}for(;;){if(null){{(\"\");}(keyToString()); } } toString();}", "n_tokens": 51, "n_pass": [509, 57, 57]}
{"time": "2021-02-14 11:59:56.581078", "score": "0.8689", "loss": "0.2093", "code": "String toString(){if(isEmpty()){\"\";}for(;;){if(null){{(\"\");}(keyToString());} } toString();}", "n_tokens": 50, "n_pass": [516, 58, 58]}
{"time": "2021-02-14 11:59:59.205970", "score": "0.8689", "loss": "0.2093", "code": "String toString(){if(isEmpty()){\"\";}for(;;){if(null){{(\"\");}(keyToString());}} toString();}", "n_tokens": 49, "n_pass": [518, 59, 59]}
{"time": "2021-02-14 12:00:01.841205", "score": "0.8689", "loss": "0.2093", "code": "String toString(){if(isEmpty()){\"\";}for(;;){if(null){{(\"\");}(keyToString());}}toString();}", "n_tokens": 48, "n_pass": [520, 60, 60]}

Minimal simplified code:
String toString(){if(isEmpty()){"";}for(;;){if(null){{("");}(keyToString());}}toString();}

