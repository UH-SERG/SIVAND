
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/baiyuliang__QRobot/app/src/main/java/com/byl/qrobot/view/ProgressWebView_onScrollChanged.java
method_name = onScrollChanged
method_body = @SuppressWarnings("deprecation") @Override protected void onScrollChanged(int l, int t, int oldl, int oldt) { if (onScrollChangedListener != null) { onScrollChangedListener.onScrollChanged(l, t); } super.onScrollChanged(l, t, oldl, oldt); }
predict, score, loss = onScrollChanged, 0.9973387122154236, 0.002682660473510623

Trace of simplified code(s):
{"time": "2021-02-14 10:12:51.265063", "score": "0.9973", "loss": "0.0027", "code": "@SuppressWarnings(\"deprecation\") @Override protected void onScrollChanged(int l, int t, int oldl, int oldt) { if (onScrollChangedListener != null) { onScrollChangedListener.onScrollChanged(l, t); } super.onScrollChanged(l, t, oldl, oldt); }", "n_tokens": 83, "n_pass": [1, 1, 1]}
{"time": "2021-02-14 10:12:53.947676", "score": "0.9973", "loss": "0.0027", "code": " protected void onScrollChanged(int l, int t, int oldl, int oldt) { if (onScrollChangedListener != null) { onScrollChangedListener.onScrollChanged(l, t); } super.onScrollChanged(l, t, oldl, oldt); }", "n_tokens": 73, "n_pass": [20, 2, 2]}
{"time": "2021-02-14 10:12:56.588794", "score": "0.9831", "loss": "0.0172", "code": " protected void onScrollChanged(int l, int oldt) { if (onScrollChangedListener != null) { onScrollChangedListener.onScrollChanged(l, t); } super.onScrollChanged(l, t, oldl, oldt); }", "n_tokens": 63, "n_pass": [21, 3, 3]}
{"time": "2021-02-14 10:12:59.242506", "score": "0.9336", "loss": "0.0694", "code": " protected void onScrollChanged(int l) { if (onScrollChangedListener != null) { onScrollChangedListener.onScrollChanged(l, t); } super.onScrollChanged(l, t, oldl, oldt); }", "n_tokens": 58, "n_pass": [40, 4, 4]}
{"time": "2021-02-14 10:13:01.905002", "score": "0.7386", "loss": "0.3053", "code": " protected void onScrollChanged(int l) { if (onScrollChangedListener != null) { onScrollChangedListener.onScrollChanged(l, t); } super.onScrollChanged(l, oldt); }", "n_tokens": 52, "n_pass": [47, 5, 5]}
{"time": "2021-02-14 10:13:04.950295", "score": "0.7386", "loss": "0.3053", "code": " void onScrollChanged(int l) { if (onScrollChangedListener != null) { onScrollChangedListener.onScrollChanged(l, t); } super.onScrollChanged(l, oldt); }", "n_tokens": 50, "n_pass": [80, 6, 6]}
{"time": "2021-02-14 10:13:07.987918", "score": "0.8215", "loss": "0.1983", "code": " void onScrollChanged(int l) { if (onScrollChangedListener != null) { onScrollChangedListener.onScrollChanged(t); } super.onScrollChanged(l, oldt); }", "n_tokens": 47, "n_pass": [93, 7, 7]}
{"time": "2021-02-14 10:13:15.157144", "score": "0.8215", "loss": "0.1983", "code": " void onScrollChanged(int l) { if (onScrollChangedListener != null) {onScrollChangedListener.onScrollChanged(t); } super.onScrollChanged(l, oldt); }", "n_tokens": 46, "n_pass": [148, 8, 8]}
{"time": "2021-02-14 10:13:17.784950", "score": "0.945", "loss": "0.057", "code": " void onScrollChanged(int l) { if (onScrollChangedListener != null) {onScrollChanged(t); } super.onScrollChanged(l, oldt); }", "n_tokens": 44, "n_pass": [149, 9, 9]}
{"time": "2021-02-14 10:13:20.398553", "score": "0.9526", "loss": "0.0491", "code": " void onScrollChanged(int l) { if (onScrollChangedListener != null) {onScrollChanged(t); } onScrollChanged(l, oldt); }", "n_tokens": 42, "n_pass": [154, 10, 10]}
{"time": "2021-02-14 10:13:23.012455", "score": "0.909", "loss": "0.0966", "code": " void onScrollChanged(int l) { if (onScrollChangedListener != null) {onScrollChanged(t); } onScrollChanged( oldt); }", "n_tokens": 40, "n_pass": [156, 11, 11]}
{"time": "2021-02-14 10:13:28.263227", "score": "0.909", "loss": "0.0966", "code": "void onScrollChanged(int l) { if (onScrollChangedListener != null) {onScrollChanged(t); } onScrollChanged( oldt); }", "n_tokens": 39, "n_pass": [160, 13, 12]}
{"time": "2021-02-14 10:13:31.686401", "score": "0.909", "loss": "0.0966", "code": "void onScrollChanged(int l){ if (onScrollChangedListener != null) {onScrollChanged(t); } onScrollChanged( oldt); }", "n_tokens": 38, "n_pass": [169, 14, 13]}
{"time": "2021-02-14 10:13:34.308668", "score": "0.909", "loss": "0.0966", "code": "void onScrollChanged(int l){if (onScrollChangedListener != null) {onScrollChanged(t); } onScrollChanged( oldt); }", "n_tokens": 37, "n_pass": [171, 15, 14]}
{"time": "2021-02-14 10:13:36.942201", "score": "0.909", "loss": "0.0966", "code": "void onScrollChanged(int l){if(onScrollChangedListener != null) {onScrollChanged(t); } onScrollChanged( oldt); }", "n_tokens": 36, "n_pass": [173, 16, 15]}
{"time": "2021-02-14 10:13:39.571291", "score": "0.909", "loss": "0.0966", "code": "void onScrollChanged(int l){if(onScrollChangedListener!= null) {onScrollChanged(t); } onScrollChanged( oldt); }", "n_tokens": 35, "n_pass": [176, 17, 16]}
{"time": "2021-02-14 10:13:42.202808", "score": "0.9091", "loss": "0.0957", "code": "void onScrollChanged(int l){if(onScrollChangedListener= null) {onScrollChanged(t); } onScrollChanged( oldt); }", "n_tokens": 34, "n_pass": [177, 18, 17]}
{"time": "2021-02-14 10:13:44.839661", "score": "0.9091", "loss": "0.0957", "code": "void onScrollChanged(int l){if(onScrollChangedListener=null) {onScrollChanged(t); } onScrollChanged( oldt); }", "n_tokens": 33, "n_pass": [179, 19, 18]}
{"time": "2021-02-14 10:13:47.478837", "score": "0.9091", "loss": "0.0957", "code": "void onScrollChanged(int l){if(onScrollChangedListener=null){onScrollChanged(t); } onScrollChanged( oldt); }", "n_tokens": 32, "n_pass": [182, 20, 19]}
{"time": "2021-02-14 10:13:50.107011", "score": "0.8575", "loss": "0.1543", "code": "void onScrollChanged(int l){if(onScrollChangedListener=null){onScrollChanged(t); } onScrollChanged(); }", "n_tokens": 30, "n_pass": [189, 21, 20]}
{"time": "2021-02-14 10:13:53.531362", "score": "0.7572", "loss": "0.2895", "code": "void onScrollChanged(int l){if(onScrollChangedListenernull){onScrollChanged(t); } onScrollChanged(); }", "n_tokens": 29, "n_pass": [204, 22, 21]}
{"time": "2021-02-14 10:13:56.179157", "score": "0.4688", "loss": "0.7694", "code": "void onScrollChanged(int l){if(onScrollChangedListener){onScrollChanged(t); } onScrollChanged(); }", "n_tokens": 28, "n_pass": [205, 23, 22]}
{"time": "2021-02-14 10:14:01.476760", "score": "0.6264", "loss": "0.4705", "code": "void onScrollChanged(int l){if(onScrollChangedListener){onScrollChanged(); } onScrollChanged(); }", "n_tokens": 27, "n_pass": [241, 24, 23]}
{"time": "2021-02-14 10:14:04.088231", "score": "0.6264", "loss": "0.4705", "code": "void onScrollChanged(int l){if(onScrollChangedListener){onScrollChanged();} onScrollChanged(); }", "n_tokens": 26, "n_pass": [243, 25, 24]}
{"time": "2021-02-14 10:14:06.691202", "score": "0.6264", "loss": "0.4705", "code": "void onScrollChanged(int l){if(onScrollChangedListener){onScrollChanged();}onScrollChanged(); }", "n_tokens": 25, "n_pass": [245, 26, 25]}
{"time": "2021-02-14 10:14:09.307056", "score": "0.6264", "loss": "0.4705", "code": "void onScrollChanged(int l){if(onScrollChangedListener){onScrollChanged();}onScrollChanged();}", "n_tokens": 24, "n_pass": [250, 27, 26]}

Minimal simplified code:
void onScrollChanged(int l){if(onScrollChangedListener){onScrollChanged();}onScrollChanged();}

