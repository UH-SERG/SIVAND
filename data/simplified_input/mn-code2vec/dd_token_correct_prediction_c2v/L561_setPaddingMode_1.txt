
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/ozodrukh__RippleDrawable/app/src/main/java/codetail/graphics/drawables/LayerDrawable_setPaddingMode.java
method_name = setPaddingMode
method_body = public void setPaddingMode(int mode) { if (mLayerState.mPaddingMode != mode) { mLayerState.mPaddingMode = mode; } }
predict, score, loss = setPaddingMode, 0.9999294281005859, 0.00018380382971372455

Trace of simplified code(s):
{"time": "2021-02-14 22:57:52.212605", "score": "0.9999", "loss": "0.0002", "code": "public void setPaddingMode(int mode) { if (mLayerState.mPaddingMode != mode) { mLayerState.mPaddingMode = mode; } }", "n_tokens": 40, "n_pass": [1, 1, 1]}
{"time": "2021-02-14 22:57:55.251902", "score": "0.9999", "loss": "0.0002", "code": "void setPaddingMode(int mode) { if (mLayerState.mPaddingMode != mode) { mLayerState.mPaddingMode = mode; } }", "n_tokens": 38, "n_pass": [44, 2, 2]}
{"time": "2021-02-14 22:57:58.285378", "score": "0.9993", "loss": "0.0027", "code": "void setPaddingMode(int mode) { if (mLayerState.mPaddingMode != mode) { mLayerState.mPaddingModemode; } }", "n_tokens": 35, "n_pass": [57, 3, 3]}
{"time": "2021-02-14 22:58:01.316916", "score": "0.9995", "loss": "0.0011", "code": "void setPaddingMode(int mode) { if (mLayerState.mPaddingMode != mode) { mode; } }", "n_tokens": 32, "n_pass": [71, 4, 4]}
{"time": "2021-02-14 22:58:03.939452", "score": "0.9996", "loss": "0.001", "code": "void setPaddingMode(int mode) { if (mLayerState.mPaddingMode != mode) { } }", "n_tokens": 29, "n_pass": [72, 5, 5]}
{"time": "2021-02-14 22:58:10.053980", "score": "0.9996", "loss": "0.001", "code": "void setPaddingMode(int mode){ if (mLayerState.mPaddingMode != mode) { } }", "n_tokens": 28, "n_pass": [119, 6, 6]}
{"time": "2021-02-14 22:58:12.673884", "score": "0.9996", "loss": "0.001", "code": "void setPaddingMode(int mode){if (mLayerState.mPaddingMode != mode) { } }", "n_tokens": 27, "n_pass": [120, 7, 7]}
{"time": "2021-02-14 22:58:15.314124", "score": "0.9996", "loss": "0.001", "code": "void setPaddingMode(int mode){if(mLayerState.mPaddingMode != mode) { } }", "n_tokens": 26, "n_pass": [122, 8, 8]}
{"time": "2021-02-14 22:58:20.564244", "score": "0.9996", "loss": "0.001", "code": "void setPaddingMode(int mode){if(mLayerState.mPaddingMode!= mode) { } }", "n_tokens": 25, "n_pass": [127, 10, 9]}
{"time": "2021-02-14 22:58:23.164466", "score": "0.9982", "loss": "0.0096", "code": "void setPaddingMode(int mode){if(mLayerState.mPaddingMode= mode) { } }", "n_tokens": 24, "n_pass": [128, 11, 10]}
{"time": "2021-02-14 22:58:33.358691", "score": "0.9982", "loss": "0.0096", "code": "void setPaddingMode(int mode){if(mLayerState.mPaddingMode= mode){ } }", "n_tokens": 23, "n_pass": [159, 14, 11]}
{"time": "2021-02-14 22:58:36.030882", "score": "0.9982", "loss": "0.0096", "code": "void setPaddingMode(int mode){if(mLayerState.mPaddingMode= mode){} }", "n_tokens": 22, "n_pass": [160, 15, 12]}
{"time": "2021-02-14 22:58:38.660733", "score": "0.9982", "loss": "0.0096", "code": "void setPaddingMode(int mode){if(mLayerState.mPaddingMode= mode){}}", "n_tokens": 21, "n_pass": [162, 16, 13]}
{"time": "2021-02-14 22:58:44.777830", "score": "0.9982", "loss": "0.0096", "code": "void setPaddingMode(int mode){if(mLayerState.mPaddingMode=mode){}}", "n_tokens": 20, "n_pass": [179, 18, 14]}

Minimal simplified code:
void setPaddingMode(int mode){if(mLayerState.mPaddingMode=mode){}}

