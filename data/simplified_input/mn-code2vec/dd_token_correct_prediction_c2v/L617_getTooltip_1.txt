
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/erogenousbeef__BigReactors/src/main/java/erogenousbeef/bigreactors/gui/controls/BeefGuiRpmBar_getTooltip.java
method_name = getTooltip
method_body = @Override public String[] getTooltip() { if (turbine != null) { tooltip[1] = String.format(" %.0f RPM", turbine.getRotorSpeed()); } else { tooltip[1] = " 0 RPM"; } return tooltip; }
predict, score, loss = getTooltip, 0.8608988523483276, 0.20178858935832977

Trace of simplified code(s):
{"time": "2021-02-15 00:43:09.302414", "score": "0.8609", "loss": "0.2018", "code": "@Override public String[] getTooltip() { if (turbine != null) { tooltip[1] = String.format(\" %.0f RPM\", turbine.getRotorSpeed()); } else { tooltip[1] = \" 0 RPM\"; } return tooltip; }", "n_tokens": 87, "n_pass": [1, 1, 1]}
{"time": "2021-02-15 00:43:11.981343", "score": "0.6502", "loss": "0.9363", "code": "String[] getTooltip() { if (turbine != null) { tooltip[1] = String.format(\" %.0f RPM\", turbine.getRotorSpeed()); } else { tooltip[1] = \" 0 RPM\"; } return tooltip; }", "n_tokens": 82, "n_pass": [44, 2, 2]}
{"time": "2021-02-15 00:43:14.617411", "score": "0.5879", "loss": "1.4227", "code": "String[] getTooltip() { if (turbine != null) { tooltip[1] = String.format(\" RPM\", turbine.getRotorSpeed()); } else { tooltip[1] = \" 0 RPM\"; } return tooltip; }", "n_tokens": 77, "n_pass": [51, 3, 3]}
{"time": "2021-02-15 00:43:17.290832", "score": "0.4526", "loss": "2.1735", "code": "String[] getTooltip() { if (turbine != null) { tooltip[1] = String.format(\" RPM\", turbine.getRotorSpeed()); tooltip[1] = \" 0 RPM\"; } return tooltip; }", "n_tokens": 71, "n_pass": [54, 4, 4]}
{"time": "2021-02-15 00:43:19.980566", "score": "0.4526", "loss": "2.1735", "code": "String[] getTooltip() { if (turbine != null) { tooltip[1] = String.format(\" RPM\", turbine.getRotorSpeed()); tooltip[1] = \"RPM\"; } return tooltip; }", "n_tokens": 68, "n_pass": [97, 5, 5]}
{"time": "2021-02-15 00:43:25.275131", "score": "0.3572", "loss": "3.0507", "code": "String[] getTooltip() { if (turbine != null) { tooltip[1] =format(\" RPM\", turbine.getRotorSpeed()); tooltip[1] = \"RPM\"; } return tooltip; }", "n_tokens": 65, "n_pass": [114, 7, 6]}
{"time": "2021-02-15 00:43:27.943363", "score": "0.586", "loss": "1.1785", "code": "String[] getTooltip() { if (turbine != null) { tooltip[1] =format(\" RPM\".getRotorSpeed()); tooltip[1] = \"RPM\"; } return tooltip; }", "n_tokens": 62, "n_pass": [117, 8, 7]}
{"time": "2021-02-15 00:43:37.345854", "score": "0.5843", "loss": "1.161", "code": "String[] getTooltip() { if (turbine != null) { tooltip[1] =(\" RPM\".getRotorSpeed()); tooltip[1] = \"RPM\"; } return tooltip; }", "n_tokens": 61, "n_pass": [188, 10, 8]}
{"time": "2021-02-15 00:43:40.083383", "score": "0.586", "loss": "1.1375", "code": "String[] getTooltip() { if (turbine != null) { tooltip[1] =(\"\".getRotorSpeed()); tooltip[1] = \"RPM\"; } return tooltip; }", "n_tokens": 59, "n_pass": [189, 11, 9]}
{"time": "2021-02-15 00:43:45.362244", "score": "0.586", "loss": "1.1375", "code": "String[]getTooltip() { if (turbine != null) { tooltip[1] =(\"\".getRotorSpeed()); tooltip[1] = \"RPM\"; } return tooltip; }", "n_tokens": 58, "n_pass": [207, 13, 10]}
{"time": "2021-02-15 00:43:48.004245", "score": "0.586", "loss": "1.1375", "code": "String[]getTooltip(){ if (turbine != null) { tooltip[1] =(\"\".getRotorSpeed()); tooltip[1] = \"RPM\"; } return tooltip; }", "n_tokens": 57, "n_pass": [211, 14, 11]}
{"time": "2021-02-15 00:43:50.652934", "score": "0.586", "loss": "1.1375", "code": "String[]getTooltip(){if (turbine != null) { tooltip[1] =(\"\".getRotorSpeed()); tooltip[1] = \"RPM\"; } return tooltip; }", "n_tokens": 56, "n_pass": [213, 15, 12]}
{"time": "2021-02-15 00:43:53.313568", "score": "0.586", "loss": "1.1375", "code": "String[]getTooltip(){if(turbine != null) { tooltip[1] =(\"\".getRotorSpeed()); tooltip[1] = \"RPM\"; } return tooltip; }", "n_tokens": 55, "n_pass": [215, 16, 13]}
{"time": "2021-02-15 00:43:55.944381", "score": "0.586", "loss": "1.1375", "code": "String[]getTooltip(){if(turbine!= null) { tooltip[1] =(\"\".getRotorSpeed()); tooltip[1] = \"RPM\"; } return tooltip; }", "n_tokens": 54, "n_pass": [218, 17, 14]}
{"time": "2021-02-15 00:43:58.592999", "score": "0.4999", "loss": "0.7448", "code": "String[]getTooltip(){if(turbine= null) { tooltip[1] =(\"\".getRotorSpeed()); tooltip[1] = \"RPM\"; } return tooltip; }", "n_tokens": 53, "n_pass": [219, 18, 15]}
{"time": "2021-02-15 00:44:01.260083", "score": "0.4999", "loss": "0.7448", "code": "String[]getTooltip(){if(turbine=null) { tooltip[1] =(\"\".getRotorSpeed()); tooltip[1] = \"RPM\"; } return tooltip; }", "n_tokens": 52, "n_pass": [221, 19, 16]}
{"time": "2021-02-15 00:44:03.921906", "score": "0.4999", "loss": "0.7448", "code": "String[]getTooltip(){if(turbine=null){ tooltip[1] =(\"\".getRotorSpeed()); tooltip[1] = \"RPM\"; } return tooltip; }", "n_tokens": 51, "n_pass": [224, 20, 17]}
{"time": "2021-02-15 00:44:06.586549", "score": "0.4999", "loss": "0.7448", "code": "String[]getTooltip(){if(turbine=null){tooltip[1] =(\"\".getRotorSpeed()); tooltip[1] = \"RPM\"; } return tooltip; }", "n_tokens": 50, "n_pass": [226, 21, 18]}
{"time": "2021-02-15 00:44:09.348515", "score": "0.4999", "loss": "0.7448", "code": "String[]getTooltip(){if(turbine=null){tooltip[1]=(\"\".getRotorSpeed()); tooltip[1] = \"RPM\"; } return tooltip; }", "n_tokens": 49, "n_pass": [231, 22, 19]}
{"time": "2021-02-15 00:44:14.654086", "score": "0.4992", "loss": "0.7324", "code": "String[]getTooltip(){if(turbinenull){tooltip[1]=(\"\".getRotorSpeed()); tooltip[1] = \"RPM\"; } return tooltip; }", "n_tokens": 48, "n_pass": [258, 24, 20]}
{"time": "2021-02-15 00:44:17.322731", "score": "0.5874", "loss": "0.6022", "code": "String[]getTooltip(){if(turbine){tooltip[1]=(\"\".getRotorSpeed()); tooltip[1] = \"RPM\"; } return tooltip; }", "n_tokens": 47, "n_pass": [259, 25, 21]}
{"time": "2021-02-15 00:44:20.000783", "score": "0.4095", "loss": "1.1554", "code": "String[]getTooltip(){if(turbine){tooltip[1]=(\"\".getRotorSpeed()); tooltip[1] = \"RPM\"; } tooltip; }", "n_tokens": 45, "n_pass": [279, 26, 22]}
{"time": "2021-02-15 00:44:22.654283", "score": "0.4059", "loss": "1.194", "code": "String[]getTooltip(){if(turbine){tooltip[1]=(\"\".getRotorSpeed()); tooltip[1] = \"RPM\"; }  }", "n_tokens": 43, "n_pass": [280, 27, 23]}
{"time": "2021-02-15 00:44:28.276227", "score": "0.4059", "loss": "1.194", "code": "String[]getTooltip(){if(turbine){tooltip[1]=(\"\".getRotorSpeed()); tooltip[1] = \"RPM\"; } }", "n_tokens": 42, "n_pass": [337, 28, 24]}
{"time": "2021-02-15 00:44:30.906313", "score": "0.4059", "loss": "1.194", "code": "String[]getTooltip(){if(turbine){tooltip[1]=(\"\".getRotorSpeed());tooltip[1] = \"RPM\"; } }", "n_tokens": 41, "n_pass": [364, 29, 25]}
{"time": "2021-02-15 00:44:33.529385", "score": "0.4059", "loss": "1.194", "code": "String[]getTooltip(){if(turbine){tooltip[1]=(\"\".getRotorSpeed());tooltip[1]= \"RPM\"; } }", "n_tokens": 40, "n_pass": [369, 30, 26]}
{"time": "2021-02-15 00:44:36.165623", "score": "0.4059", "loss": "1.194", "code": "String[]getTooltip(){if(turbine){tooltip[1]=(\"\".getRotorSpeed());tooltip[1]=\"RPM\"; } }", "n_tokens": 39, "n_pass": [371, 31, 27]}
{"time": "2021-02-15 00:44:38.890504", "score": "0.4301", "loss": "0.973", "code": "String[]getTooltip(){if(turbine){tooltip[1]=(\"\".getRotorSpeed());tooltip[1]=\"\"; } }", "n_tokens": 38, "n_pass": [373, 32, 28]}
{"time": "2021-02-15 00:44:41.595010", "score": "0.4301", "loss": "0.973", "code": "String[]getTooltip(){if(turbine){tooltip[1]=(\"\".getRotorSpeed());tooltip[1]=\"\";} }", "n_tokens": 37, "n_pass": [376, 33, 29]}
{"time": "2021-02-15 00:44:44.242947", "score": "0.4301", "loss": "0.973", "code": "String[]getTooltip(){if(turbine){tooltip[1]=(\"\".getRotorSpeed());tooltip[1]=\"\";}}", "n_tokens": 36, "n_pass": [378, 34, 30]}

Minimal simplified code:
String[]getTooltip(){if(turbine){tooltip[1]=("".getRotorSpeed());tooltip[1]="";}}

