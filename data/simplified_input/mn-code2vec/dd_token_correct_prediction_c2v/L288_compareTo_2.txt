
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/Waikato__meka/src/main/java/meka/gui/core/SortableAndSearchableWrapperTableModel_compareTo.java
method_name = compareTo
method_body = public int compareTo(SortContainer o) { if ((m_Value == null) || (o.getValue() == null)) { if (m_Value == o.getValue()) return 0; if (m_Value == null) return -1; else return +1; } else { if (m_Value.getClass().equals(o.getValue().getClass())) return m_Value.compareTo(o.getValue()); else return m_Value.toString().compareTo(o.getValue().toString()); } }
predict, score, loss = compareTo, 0.9994726777076721, 0.0005952732171863317

Trace of simplified code(s):
{"time": "2021-02-14 14:06:33.812578", "score": "0.9995", "loss": "0.0006", "code": "public int compareTo(SortContainer o) { if ((m_Value == null) || (o.getValue() == null)) { if (m_Value == o.getValue()) return 0; if (m_Value == null) return -1; else return +1; } else { if (m_Value.getClass().equals(o.getValue().getClass())) return m_Value.compareTo(o.getValue()); else return m_Value.toString().compareTo(o.getValue().toString()); } }", "n_tokens": 171, "n_pass": [1, 1, 1]}
{"time": "2021-02-14 14:06:36.492411", "score": "0.9997", "loss": "0.0003", "code": "public int compareTo(SortContainer o) { if ((m_Value == null) || (o.getValue() == null)) { if (m_Value == o.getValue()) 1; else return +1; } else { if (m_Value.getClass().equals(o.getValue().getClass())) return m_Value.compareTo(o.getValue()); else return m_Value.toString().compareTo(o.getValue().toString()); } }", "n_tokens": 150, "n_pass": [23, 2, 2]}
{"time": "2021-02-14 14:06:40.029057", "score": "0.9998", "loss": "0.0003", "code": "public int compareTo(SortContainer o) { if ((m_Value == null) || (o.getValue() == null)) { if (m_Value == o.getValue()) 1; else return +1; } else { if (m_.equals(o.getValue().getClass())) return m_Value.compareTo(o.getValue()); else return m_Value.toString().compareTo(o.getValue().toString()); } }", "n_tokens": 145, "n_pass": [92, 3, 3]}
{"time": "2021-02-14 14:06:42.690222", "score": "0.9997", "loss": "0.0003", "code": "public int compareTo(SortContainer o) { if ((m_Value == null) || (o.getValue() == null)) { if (m_Value == o.getValue()) 1; else return +1; } else { if (m_.equals(o.getValue)) return m_Value.compareTo(o.getValue()); else return m_Value.toString().compareTo(o.getValue().toString()); } }", "n_tokens": 139, "n_pass": [94, 4, 4]}
{"time": "2021-02-14 14:06:45.358554", "score": "0.9997", "loss": "0.0004", "code": "public int compareTo(SortContainer o) { if ((m_Value == null) || (o.getValue() == null)) { if (m_Value == o.getValue()) 1; else return +1; } else { if (m_.equals(o.getValue)) return m_Value.compareTo(o.getValue());_Value.toString().compareTo(o.getValue().toString()); } }", "n_tokens": 133, "n_pass": [98, 5, 5]}
{"time": "2021-02-14 14:06:48.041462", "score": "0.9997", "loss": "0.0004", "code": "public int compareTo(SortContainer o) { if ((m_Value == null) || (o.getValue() == null)) { if (m_Value == o.getValue()) 1; else return +1; } else { if (m_.equals(o.getValue)) return m_Value.compareTo(o.getValue());_Value.toString().compareTo(o.getValue); } }", "n_tokens": 127, "n_pass": [101, 6, 6]}
{"time": "2021-02-14 14:06:50.700169", "score": "0.9998", "loss": "0.0003", "code": "public int compareTo(SortContainer o) { if ((m_Value) || (o.getValue() == null)) { if (m_Value == o.getValue()) 1; else return +1; } else { if (m_.equals(o.getValue)) return m_Value.compareTo(o.getValue());_Value.toString().compareTo(o.getValue); } }", "n_tokens": 122, "n_pass": [107, 7, 7]}
{"time": "2021-02-14 14:06:53.812273", "score": "0.9998", "loss": "0.0002", "code": "public int compareTo(SortContainer o) { if ((m) || (o.getValue() == null)) { if (m_Value == o.getValue()) 1; else return +1; } else { if (m_.equals(o.getValue)) return m_Value.compareTo(o.getValue());_Value.toString().compareTo(o.getValue); } }", "n_tokens": 120, "n_pass": [178, 8, 8]}
{"time": "2021-02-14 14:06:56.476023", "score": "0.9999", "loss": "0.0002", "code": "public int compareTo(SortContainer o) { if ((m)  (o.getValue() == null)) { if (m_Value == o.getValue()) 1; else return +1; } else { if (m_.equals(o.getValue)) return m_Value.compareTo(o.getValue());_Value.toString().compareTo(o.getValue); } }", "n_tokens": 118, "n_pass": [180, 9, 9]}
{"time": "2021-02-14 14:06:59.140505", "score": "0.9999", "loss": "0.0002", "code": "public int compareTo(SortContainer o) { if ((m)  (getValue() == null)) { if (m_Value == o.getValue()) 1; else return +1; } else { if (m_.equals(o.getValue)) return m_Value.compareTo(o.getValue());_Value.toString().compareTo(o.getValue); } }", "n_tokens": 116, "n_pass": [182, 10, 10]}
{"time": "2021-02-14 14:07:01.792209", "score": "0.9999", "loss": "0.0002", "code": "public int compareTo(SortContainer o) { if ((m)  (getValue() == null)) { if (m_Value ==getValue()) 1; else return +1; } else { if (m_.equals(o.getValue)) return m_Value.compareTo(o.getValue());_Value.toString().compareTo(o.getValue); } }", "n_tokens": 113, "n_pass": [191, 11, 11]}
{"time": "2021-02-14 14:07:04.868726", "score": "0.9999", "loss": "0.0001", "code": "public int compareTo(SortContainer o) { if ((m)  (getValue() == null)) { if (m_Value ==getValue()) 1; else return +1; } else { if (m_.equals()) return m_Value.compareTo(o.getValue());_Value.toString().compareTo(o.getValue); } }", "n_tokens": 110, "n_pass": [202, 12, 12]}
{"time": "2021-02-14 14:07:07.532553", "score": "0.6355", "loss": "0.4558", "code": "public int compareTo(SortContainer o) { if ((m)  (getValue() == null)) { if (m_Value ==getValue()) 1; else return +1; } else { if (m_.equals()) _Value.compareTo(o.getValue());_Value.toString().compareTo(o.getValue); } }", "n_tokens": 107, "n_pass": [204, 13, 13]}
{"time": "2021-02-14 14:07:10.186796", "score": "0.8427", "loss": "0.1723", "code": "public int compareTo(SortContainer o) { if ((m)  (getValue() == null)) { if (m_Value ==getValue()) 1; else return +1; } else { if (m_.equals()) compareTo(o.getValue());_Value.toString().compareTo(o.getValue); } }", "n_tokens": 104, "n_pass": [205, 14, 14]}
{"time": "2021-02-14 14:07:12.831585", "score": "0.884", "loss": "0.1246", "code": "public int compareTo(SortContainer o) { if ((m)  (getValue() == null)) { if (m_Value ==getValue()) 1; else return +1; } else { if (m_.equals()) compareTo(o.getValue());toString().compareTo(o.getValue); } }", "n_tokens": 101, "n_pass": [209, 15, 15]}
{"time": "2021-02-14 14:07:15.494406", "score": "0.9221", "loss": "0.0814", "code": "public int compareTo(SortContainer o) { if ((m)  (getValue() == null)) { if (m_Value ==getValue()) 1; else return +1; } else { if (m_.equals()) compareTo(o.getValue());toString().compareTo(); } }", "n_tokens": 98, "n_pass": [212, 16, 16]}
{"time": "2021-02-14 14:07:18.155018", "score": "0.9221", "loss": "0.0814", "code": "int compareTo(SortContainer o) { if ((m)  (getValue() == null)) { if (m_Value ==getValue()) 1; else return +1; } else { if (m_.equals()) compareTo(o.getValue());toString().compareTo(); } }", "n_tokens": 96, "n_pass": [215, 17, 17]}
{"time": "2021-02-14 14:07:21.225240", "score": "0.9193", "loss": "0.0843", "code": "int compareTo(SortContainer o) { if ((m)  (getValue() == null)) { if (m_ValuegetValue()) 1; else return +1; } else { if (m_.equals()) compareTo(o.getValue());toString().compareTo(); } }", "n_tokens": 93, "n_pass": [233, 18, 18]}
{"time": "2021-02-14 14:07:23.880012", "score": "0.9304", "loss": "0.0728", "code": "int compareTo(SortContainer o) { if ((m)  (getValue() == null)) { if (m_Value) 1; else return +1; } else { if (m_.equals()) compareTo(o.getValue());toString().compareTo(); } }", "n_tokens": 90, "n_pass": [234, 19, 19]}
{"time": "2021-02-14 14:07:33.794558", "score": "0.9304", "loss": "0.0728", "code": "int compareTo(SortContainer o) { if ((m)  (getValue() == null)) { if(m_Value) 1; else return +1; } else { if (m_.equals()) compareTo(o.getValue());toString().compareTo(); } }", "n_tokens": 89, "n_pass": [337, 20, 20]}
{"time": "2021-02-14 14:07:36.440361", "score": "0.936", "loss": "0.0665", "code": "int compareTo(SortContainer o) { if ((m)  (getValue() == null)) { if(_Value) 1; else return +1; } else { if (m_.equals()) compareTo(o.getValue());toString().compareTo(); } }", "n_tokens": 88, "n_pass": [339, 21, 21]}
{"time": "2021-02-14 14:07:39.095510", "score": "0.936", "loss": "0.0665", "code": "int compareTo(SortContainer o) { if ((m)  (getValue() == null)) { if(Value) 1; else return +1; } else { if (m_.equals()) compareTo(o.getValue());toString().compareTo(); } }", "n_tokens": 87, "n_pass": [340, 22, 22]}
{"time": "2021-02-14 14:07:41.744420", "score": "0.936", "loss": "0.0665", "code": "int compareTo(SortContainer o) { if ((m)  (getValue() == null)) { if(Value)1; else return +1; } else { if (m_.equals()) compareTo(o.getValue());toString().compareTo(); } }", "n_tokens": 86, "n_pass": [343, 23, 23]}
{"time": "2021-02-14 14:07:44.388052", "score": "0.9317", "loss": "0.0711", "code": "int compareTo(SortContainer o) { if ((m)  (getValue() == null)) { if(Value); else return +1; } else { if (m_.equals()) compareTo(o.getValue());toString().compareTo(); } }", "n_tokens": 85, "n_pass": [344, 24, 24]}
{"time": "2021-02-14 14:07:47.038675", "score": "0.9317", "loss": "0.0711", "code": "int compareTo(SortContainer o) { if ((m)  (getValue() == null)) { if(Value);else return +1; } else { if (m_.equals()) compareTo(o.getValue());toString().compareTo(); } }", "n_tokens": 84, "n_pass": [346, 25, 25]}
{"time": "2021-02-14 14:07:49.688911", "score": "0.5442", "loss": "0.6085", "code": "int compareTo(SortContainer o) { if ((m)  (getValue() == null)) { if(Value); return +1; } else { if (m_.equals()) compareTo(o.getValue());toString().compareTo(); } }", "n_tokens": 83, "n_pass": [347, 26, 26]}
{"time": "2021-02-14 14:07:52.355295", "score": "0.5442", "loss": "0.6085", "code": "int compareTo(SortContainer o) { if ((m)  (getValue() == null)) { if(Value);return +1; } else { if (m_.equals()) compareTo(o.getValue());toString().compareTo(); } }", "n_tokens": 82, "n_pass": [348, 27, 27]}
{"time": "2021-02-14 14:07:55.409015", "score": "0.9307", "loss": "0.0722", "code": "int compareTo(SortContainer o) { if ((m)  (getValue() == null)) { if(Value);return ; } else { if (m_.equals()) compareTo(o.getValue());toString().compareTo(); } }", "n_tokens": 80, "n_pass": [350, 28, 28]}
{"time": "2021-02-14 14:08:00.718256", "score": "0.9725", "loss": "0.0282", "code": "int compareTo(SortContainer o) { if ((m)  (getValue() == null)) { if(Value);return ; } else { if (mequals()) compareTo(o.getValue());toString().compareTo(); } }", "n_tokens": 78, "n_pass": [357, 30, 29]}
{"time": "2021-02-14 14:08:03.369336", "score": "0.9425", "loss": "0.0621", "code": "int compareTo(SortContainer o) { if ((m)  (getValue() == null)) { if(Value);return ; } else { if (mequals())(o.getValue());toString().compareTo(); } }", "n_tokens": 76, "n_pass": [360, 31, 30]}
{"time": "2021-02-14 14:08:06.012575", "score": "0.9453", "loss": "0.0591", "code": "int compareTo(SortContainer o) { if ((m)  (getValue() == null)) { if(Value);return ; } else { if (mequals())(o());toString().compareTo(); } }", "n_tokens": 74, "n_pass": [362, 32, 31]}
{"time": "2021-02-14 14:08:08.642734", "score": "0.945", "loss": "0.0595", "code": "int compareTo(SortContainer o) { if ((m)  (getValue() == null)) { if(Value);return ; } else { if (mequals())(o);toString().compareTo(); } }", "n_tokens": 72, "n_pass": [363, 33, 32]}
{"time": "2021-02-14 14:08:12.091115", "score": "0.945", "loss": "0.0595", "code": "int compareTo(SortContainer o){ if ((m)  (getValue() == null)) { if(Value);return ; } else { if (mequals())(o);toString().compareTo(); } }", "n_tokens": 71, "n_pass": [379, 34, 33]}
{"time": "2021-02-14 14:08:14.748993", "score": "0.945", "loss": "0.0595", "code": "int compareTo(SortContainer o){if ((m)  (getValue() == null)) { if(Value);return ; } else { if (mequals())(o);toString().compareTo(); } }", "n_tokens": 70, "n_pass": [381, 35, 34]}
{"time": "2021-02-14 14:08:17.373204", "score": "0.945", "loss": "0.0595", "code": "int compareTo(SortContainer o){if((m)  (getValue() == null)) { if(Value);return ; } else { if (mequals())(o);toString().compareTo(); } }", "n_tokens": 69, "n_pass": [383, 36, 35]}
{"time": "2021-02-14 14:08:20.018005", "score": "0.945", "loss": "0.0595", "code": "int compareTo(SortContainer o){if((m) (getValue() == null)) { if(Value);return ; } else { if (mequals())(o);toString().compareTo(); } }", "n_tokens": 68, "n_pass": [388, 37, 36]}
{"time": "2021-02-14 14:08:22.663773", "score": "0.945", "loss": "0.0595", "code": "int compareTo(SortContainer o){if((m)(getValue() == null)) { if(Value);return ; } else { if (mequals())(o);toString().compareTo(); } }", "n_tokens": 67, "n_pass": [389, 38, 37]}
{"time": "2021-02-14 14:08:25.288869", "score": "0.945", "loss": "0.0595", "code": "int compareTo(SortContainer o){if((m)(getValue()== null)) { if(Value);return ; } else { if (mequals())(o);toString().compareTo(); } }", "n_tokens": 66, "n_pass": [394, 39, 38]}
{"time": "2021-02-14 14:08:28.756597", "score": "0.945", "loss": "0.0595", "code": "int compareTo(SortContainer o){if((m)(getValue()==null)) { if(Value);return ; } else { if (mequals())(o);toString().compareTo(); } }", "n_tokens": 65, "n_pass": [397, 40, 39]}
{"time": "2021-02-14 14:08:31.421264", "score": "0.945", "loss": "0.0595", "code": "int compareTo(SortContainer o){if((m)(getValue()==null)){ if(Value);return ; } else { if (mequals())(o);toString().compareTo(); } }", "n_tokens": 64, "n_pass": [401, 41, 40]}
{"time": "2021-02-14 14:08:34.077756", "score": "0.945", "loss": "0.0595", "code": "int compareTo(SortContainer o){if((m)(getValue()==null)){if(Value);return ; } else { if (mequals())(o);toString().compareTo(); } }", "n_tokens": 63, "n_pass": [403, 42, 41]}
{"time": "2021-02-14 14:08:36.712157", "score": "0.9562", "loss": "0.0462", "code": "int compareTo(SortContainer o){if((m)(getValue()==null)){(Value);return ; } else { if (mequals())(o);toString().compareTo(); } }", "n_tokens": 62, "n_pass": [404, 43, 42]}
{"time": "2021-02-14 14:08:39.380367", "score": "0.9562", "loss": "0.0462", "code": "int compareTo(SortContainer o){if((m)(getValue()==null)){(Value);; } else { if (mequals())(o);toString().compareTo(); } }", "n_tokens": 60, "n_pass": [409, 44, 43]}
{"time": "2021-02-14 14:08:42.038063", "score": "0.9562", "loss": "0.0462", "code": "int compareTo(SortContainer o){if((m)(getValue()==null)){(Value);} else { if (mequals())(o);toString().compareTo(); } }", "n_tokens": 58, "n_pass": [410, 45, 44]}
{"time": "2021-02-14 14:08:44.671986", "score": "0.6062", "loss": "0.5021", "code": "int compareTo(SortContainer o){if((m)(getValue()==null)){(Value);} { if (mequals())(o);toString().compareTo(); } }", "n_tokens": 56, "n_pass": [412, 46, 45]}
{"time": "2021-02-14 14:08:52.126773", "score": "0.6062", "loss": "0.5021", "code": "int compareTo(SortContainer o){if((m)(getValue()==null)){(Value);} { if (mequals())(o);toString().compareTo();} }", "n_tokens": 55, "n_pass": [497, 47, 46]}
{"time": "2021-02-14 14:08:54.768551", "score": "0.6062", "loss": "0.5021", "code": "int compareTo(SortContainer o){if((m)(getValue()==null)){(Value);} { if (mequals())(o);toString().compareTo();}}", "n_tokens": 54, "n_pass": [498, 48, 47]}
{"time": "2021-02-14 14:08:59.066558", "score": "0.6062", "loss": "0.5021", "code": "int compareTo(SortContainer o){if((m)(getValue()==null)){(Value);}{ if (mequals())(o);toString().compareTo();}}", "n_tokens": 53, "n_pass": [529, 49, 48]}
{"time": "2021-02-14 14:09:01.710504", "score": "0.6062", "loss": "0.5021", "code": "int compareTo(SortContainer o){if((m)(getValue()==null)){(Value);}{if (mequals())(o);toString().compareTo();}}", "n_tokens": 52, "n_pass": [531, 50, 49]}
{"time": "2021-02-14 14:09:04.371898", "score": "0.6062", "loss": "0.5021", "code": "int compareTo(SortContainer o){if((m)(getValue()==null)){(Value);}{if(mequals())(o);toString().compareTo();}}", "n_tokens": 51, "n_pass": [533, 51, 50]}

Minimal simplified code:
int compareTo(SortContainer o){if((m)(getValue()==null)){(Value);}{if(mequals())(o);toString().compareTo();}}

