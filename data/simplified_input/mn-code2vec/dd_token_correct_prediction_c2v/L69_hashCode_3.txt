
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/OpenRock__OpenAM/openam-ldap-utils/src/main/java/org/forgerock/openam/ldap/LDAPURL_hashCode.java
method_name = hashCode
method_body = @Override public int hashCode() { int hash = 7; hash = 19 * hash + (this.host != null ? this.host.hashCode() : 0); hash = 19 * hash + this.port; hash = 19 * hash + (this.isSSL != null ? this.isSSL.hashCode() : 0); return hash; }
predict, score, loss = hashCode, 0.9999663829803467, 4.732496745418757e-05

Trace of simplified code(s):
{"time": "2021-02-14 06:55:10.904677", "score": "1.0", "loss": "0.0", "code": "@Override public int hashCode() { int hash = 7; hash = 19 * hash + (this.host != null ? this.host.hashCode() : 0); hash = 19 * hash + this.port; hash = 19 * hash + (this.isSSL != null ? this.isSSL.hashCode() : 0); return hash; }", "n_tokens": 124, "n_pass": [1, 1, 1]}
{"time": "2021-02-14 06:55:13.603067", "score": "0.9999", "loss": "0.0001", "code": "@Override public int hashCode() { int hash = 7; hash = 19 * hash + (this.host != null ? this.host.hashCode() : 0);port; hash = 19 * hash + (this.isSSL != null ? this.isSSL.hashCode() : 0); return hash; }", "n_tokens": 108, "n_pass": [24, 2, 2]}
{"time": "2021-02-14 06:55:16.253006", "score": "0.9999", "loss": "0.0001", "code": "@Override public int hashCode() { int hash = 7; hash = 19 * hash + (this.host != null ? this.host.hashCode() : 0);(this.isSSL != null ? this.isSSL.hashCode() : 0); return hash; }", "n_tokens": 92, "n_pass": [25, 3, 3]}
{"time": "2021-02-14 06:55:19.339930", "score": "0.9964", "loss": "0.0041", "code": "@Override public int hashCode() { int hash = 19 * hash + (this.host != null ? this.host.hashCode() : 0);(this.isSSL != null ? this.isSSL.hashCode() : 0); return hash; }", "n_tokens": 85, "n_pass": [50, 4, 4]}
{"time": "2021-02-14 06:55:22.413759", "score": "0.9987", "loss": "0.0016", "code": "@Override public int hashCode() { int hash = 19 + (this.host != null ? this.host.hashCode() : 0);(this.isSSL != null ? this.isSSL.hashCode() : 0); return hash; }", "n_tokens": 81, "n_pass": [86, 5, 5]}
{"time": "2021-02-14 06:55:25.081662", "score": "0.9982", "loss": "0.0024", "code": "@Override public int hashCode() { int hash = 19 + (this.host  ? this.host.hashCode() : 0);(this.isSSL != null ? this.isSSL.hashCode() : 0); return hash; }", "n_tokens": 77, "n_pass": [88, 6, 6]}
{"time": "2021-02-14 06:55:28.140204", "score": "0.9974", "loss": "0.0035", "code": "@Override public int hashCode() { int hash = 19 + (this.host  ? this.host.hashCode() : 0);(this.isSSLnull ? this.isSSL.hashCode() : 0); return hash; }", "n_tokens": 73, "n_pass": [94, 7, 7]}
{"time": "2021-02-14 06:55:30.793614", "score": "0.9979", "loss": "0.0027", "code": "@Override public int hashCode() { int hash = 19 + (this.host  ? this.host.hashCode() : 0);(this.isSSLnull ? hashCode() : 0); return hash; }", "n_tokens": 69, "n_pass": [96, 8, 8]}
{"time": "2021-02-14 06:55:33.458221", "score": "0.9893", "loss": "0.0137", "code": "public int hashCode() { int hash = 19 + (this.host  ? this.host.hashCode() : 0);(this.isSSLnull ? hashCode() : 0); return hash; }", "n_tokens": 66, "n_pass": [101, 9, 9]}
{"time": "2021-02-14 06:55:37.689281", "score": "0.9893", "loss": "0.0137", "code": " int hashCode() { int hash = 19 + (this.host  ? this.host.hashCode() : 0);(this.isSSLnull ? hashCode() : 0); return hash; }", "n_tokens": 65, "n_pass": [153, 10, 10]}
{"time": "2021-02-14 06:55:40.361341", "score": "0.9893", "loss": "0.0137", "code": "int hashCode() { int hash = 19 + (this.host  ? this.host.hashCode() : 0);(this.isSSLnull ? hashCode() : 0); return hash; }", "n_tokens": 64, "n_pass": [154, 11, 11]}
{"time": "2021-02-14 06:55:43.406836", "score": "0.9976", "loss": "0.0027", "code": "int hashCode() { hash = 19 + (this.host  ? this.host.hashCode() : 0);(this.isSSLnull ? hashCode() : 0); return hash; }", "n_tokens": 62, "n_pass": [159, 12, 12]}
{"time": "2021-02-14 06:55:46.058580", "score": "0.9894", "loss": "0.0124", "code": "int hashCode() { hash =  + (this.host  ? this.host.hashCode() : 0);(this.isSSLnull ? hashCode() : 0); return hash; }", "n_tokens": 60, "n_pass": [162, 13, 13]}
{"time": "2021-02-14 06:55:48.712468", "score": "1.0", "loss": "0.0", "code": "int hashCode() { hash =  (this.host  ? this.host.hashCode() : 0);(this.isSSLnull ? hashCode() : 0); return hash; }", "n_tokens": 58, "n_pass": [163, 14, 14]}
{"time": "2021-02-14 06:55:51.354660", "score": "1.0", "loss": "0.0", "code": "int hashCode() { hash =  (host  ? this.host.hashCode() : 0);(this.isSSLnull ? hashCode() : 0); return hash; }", "n_tokens": 56, "n_pass": [165, 15, 15]}
{"time": "2021-02-14 06:55:53.974231", "score": "1.0", "loss": "0.0", "code": "int hashCode() { hash =  (host  ? this.hashCode() : 0);(this.isSSLnull ? hashCode() : 0); return hash; }", "n_tokens": 54, "n_pass": [169, 16, 16]}
{"time": "2021-02-14 06:55:57.008774", "score": "0.999", "loss": "0.0013", "code": "int hashCode() { hash =  (host  ? this.hashCode : 0);(this.isSSLnull ? hashCode() : 0); return hash; }", "n_tokens": 52, "n_pass": [171, 17, 17]}
{"time": "2021-02-14 06:55:59.629713", "score": "0.9992", "loss": "0.0012", "code": "int hashCode() { hash =  (host  ? this.hashCode : 0);(thisnull ? hashCode() : 0); return hash; }", "n_tokens": 50, "n_pass": [176, 18, 18]}
{"time": "2021-02-14 06:56:02.253046", "score": "0.999", "loss": "0.0013", "code": "int hashCode() { hash =  (host  ? this.hashCode : 0);(this? hashCode() : 0); return hash; }", "n_tokens": 48, "n_pass": [177, 19, 19]}
{"time": "2021-02-14 06:56:04.890810", "score": "0.9988", "loss": "0.0015", "code": "int hashCode() { hash =  (host  ? this.hashCode : 0);(this? hashCode() : 0); hash; }", "n_tokens": 46, "n_pass": [184, 20, 20]}
{"time": "2021-02-14 06:56:07.516804", "score": "0.9986", "loss": "0.0017", "code": "int hashCode() { hash =  (host  ? this.hashCode : 0);(this? hashCode() : 0);  }", "n_tokens": 44, "n_pass": [185, 21, 21]}
{"time": "2021-02-14 06:56:13.181267", "score": "0.9964", "loss": "0.0045", "code": "int hashCode() { hash =  (host  ? this : 0);(this? hashCode() : 0);  }", "n_tokens": 42, "n_pass": [197, 23, 22]}
{"time": "2021-02-14 06:56:25.588847", "score": "0.9964", "loss": "0.0045", "code": "int hashCode() { hash =  (host  ? this: 0);(this? hashCode() : 0);  }", "n_tokens": 41, "n_pass": [261, 25, 23]}
{"time": "2021-02-14 06:56:28.210780", "score": "0.9964", "loss": "0.0045", "code": "int hashCode() { hash =  (host  ? this:0);(this? hashCode() : 0);  }", "n_tokens": 40, "n_pass": [262, 26, 24]}
{"time": "2021-02-14 06:56:30.841511", "score": "0.9964", "loss": "0.0045", "code": "int hashCode() { hash =  (host  ? this:0);(this?hashCode() : 0);  }", "n_tokens": 39, "n_pass": [269, 27, 25]}
{"time": "2021-02-14 06:56:33.468781", "score": "0.9964", "loss": "0.0045", "code": "int hashCode() { hash =  (host  ? this:0);(this?hashCode(): 0);  }", "n_tokens": 38, "n_pass": [273, 28, 26]}
{"time": "2021-02-14 06:56:36.125503", "score": "0.9964", "loss": "0.0045", "code": "int hashCode() { hash =  (host  ? this:0);(this?hashCode():0);  }", "n_tokens": 37, "n_pass": [275, 29, 27]}
{"time": "2021-02-14 06:56:38.757464", "score": "0.9964", "loss": "0.0045", "code": "int hashCode() { hash =  (host  ? this:0);(this?hashCode():0); }", "n_tokens": 36, "n_pass": [279, 30, 28]}
{"time": "2021-02-14 06:56:41.384810", "score": "0.9964", "loss": "0.0045", "code": "int hashCode() { hash =  (host  ? this:0);(this?hashCode():0);}", "n_tokens": 35, "n_pass": [280, 31, 29]}
{"time": "2021-02-14 06:56:44.816768", "score": "0.9964", "loss": "0.0045", "code": "int hashCode(){ hash =  (host  ? this:0);(this?hashCode():0);}", "n_tokens": 34, "n_pass": [287, 32, 30]}
{"time": "2021-02-14 06:56:47.444110", "score": "0.9964", "loss": "0.0045", "code": "int hashCode(){hash =  (host  ? this:0);(this?hashCode():0);}", "n_tokens": 33, "n_pass": [289, 33, 31]}
{"time": "2021-02-14 06:56:50.094682", "score": "0.9964", "loss": "0.0045", "code": "int hashCode(){hash=  (host  ? this:0);(this?hashCode():0);}", "n_tokens": 32, "n_pass": [291, 34, 32]}
{"time": "2021-02-14 06:56:55.351825", "score": "0.9964", "loss": "0.0045", "code": "int hashCode(){hash= (host  ? this:0);(this?hashCode():0);}", "n_tokens": 31, "n_pass": [293, 36, 33]}
{"time": "2021-02-14 06:56:57.972020", "score": "0.9964", "loss": "0.0045", "code": "int hashCode(){hash=(host  ? this:0);(this?hashCode():0);}", "n_tokens": 30, "n_pass": [294, 37, 34]}
{"time": "2021-02-14 06:57:00.613301", "score": "0.9964", "loss": "0.0045", "code": "int hashCode(){hash=(host ? this:0);(this?hashCode():0);}", "n_tokens": 29, "n_pass": [297, 38, 35]}
{"time": "2021-02-14 06:57:03.267963", "score": "0.9964", "loss": "0.0045", "code": "int hashCode(){hash=(host? this:0);(this?hashCode():0);}", "n_tokens": 28, "n_pass": [298, 39, 36]}
{"time": "2021-02-14 06:57:05.892373", "score": "0.9964", "loss": "0.0045", "code": "int hashCode(){hash=(host?this:0);(this?hashCode():0);}", "n_tokens": 27, "n_pass": [300, 40, 37]}

Minimal simplified code:
int hashCode(){hash=(host?this:0);(this?hashCode():0);}

