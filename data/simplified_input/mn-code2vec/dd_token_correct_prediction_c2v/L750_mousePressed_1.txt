
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/mucommander__mucommander/src/main/java/com/mucommander/ui/table/EditableHeaderUI_mousePressed.java
method_name = mousePressed
method_body = @Override public void mousePressed(MouseEvent e) { if (!SwingUtilities.isLeftMouseButton(e)) { return; } super.mousePressed(e); if (header.getResizingColumn() == null) { Point p = e.getPoint(); TableColumnModel columnModel = header.getColumnModel(); int index = columnModel.getColumnIndexAtX(p.x); if (index != -1) { if (header.editCellAt(index, e)) { setDispatchComponent(e); repostEvent(e); } } } }
predict, score, loss = mousePressed, 0.9691860675811768, 0.031790703535079956

Trace of simplified code(s):
{"time": "2021-02-16 00:57:01.690638", "score": "0.9785", "loss": "0.0219", "code": "@Override public void mousePressed(MouseEvent e) { if (!SwingUtilities.isLeftMouseButton(e)) { return; } super.mousePressed(e); if (header.getResizingColumn() == null) { Point p = e.getPoint(); TableColumnModel columnModel = header.getColumnModel(); int index = columnModel.getColumnIndexAtX(p.x); if (index != -1) { if (header.editCellAt(index, e)) { setDispatchComponent(e); repostEvent(e); } } } }", "n_tokens": 151, "n_pass": [1, 1, 1]}
{"time": "2021-02-16 00:57:04.325570", "score": "0.965", "loss": "0.0359", "code": "@Override public void mousePressed(MouseEvent e) { if (!SwingUtilities.isLeftMouseButton(e)) { return; } super.mousePressed(e); if (header.getResizingColumn() == null) { Point p = e.getPoint();getColumnModel(); int index = columnModel.getColumnIndexAtX(p.x); if (index != -1) { if (header.editCellAt(index, e)) { setDispatchComponent(e); repostEvent(e); } } } }", "n_tokens": 142, "n_pass": [52, 2, 2]}
{"time": "2021-02-16 00:57:09.537554", "score": "0.9787", "loss": "0.0217", "code": "@Override public void mousePressed(MouseEvent e) { if (!SwingUtilities.isLeftMouseButton(e)) { return; } super.mousePressed(e); if (header.getResizingColumn() == null) { Point p = e.getPoint();int index = columnModel.getColumnIndexAtX(p.x); if (index != -1) { if (header.editCellAt(index, e)) { setDispatchComponent(e); repostEvent(e); } } } }", "n_tokens": 137, "n_pass": [98, 4, 3]}
{"time": "2021-02-16 00:57:12.128356", "score": "0.9764", "loss": "0.0241", "code": "@Override public void mousePressed(MouseEvent e) { if (!SwingUtilities.isLeftMouseButton(e)) { return; } super.mousePressed(e); if (header.getResizingColumn() == null) { Point p = e.getPoint();int index = columnModel.getColumnIndexAtX(p.x); if (index1) { if (header.editCellAt(index, e)) { setDispatchComponent(e); repostEvent(e); } } } }", "n_tokens": 132, "n_pass": [102, 5, 4]}
{"time": "2021-02-16 00:57:14.710149", "score": "0.977", "loss": "0.0235", "code": "@Override public void mousePressed(MouseEvent e) { if (!SwingUtilities.isLeftMouseButton(e)) { return; } super.mousePressed(e); if (header.getResizingColumn() == null) { Point p = e.getPoint();int index = columnModel.getColumnIndexAtX(p.x); if (index1) { if (header.editCellAt(index, e)) {; repostEvent(e); } } } }", "n_tokens": 127, "n_pass": [107, 6, 5]}
{"time": "2021-02-16 00:57:17.290257", "score": "0.9761", "loss": "0.0245", "code": " void mousePressed(MouseEvent e) { if (!SwingUtilities.isLeftMouseButton(e)) { return; } super.mousePressed(e); if (header.getResizingColumn() == null) { Point p = e.getPoint();int index = columnModel.getColumnIndexAtX(p.x); if (index1) { if (header.editCellAt(index, e)) {; repostEvent(e); } } } }", "n_tokens": 123, "n_pass": [111, 7, 6]}
{"time": "2021-02-16 00:57:19.879547", "score": "0.9386", "loss": "0.0646", "code": " void mousePressed(MouseEvent e) { if (!SwingUtilities.isLeftMouseButton(e)) { return; } super.mousePressed(e); if (header== null) { Point p = e.getPoint();int index = columnModel.getColumnIndexAtX(p.x); if (index1) { if (header.editCellAt(index, e)) {; repostEvent(e); } } } }", "n_tokens": 118, "n_pass": [122, 8, 7]}
{"time": "2021-02-16 00:57:22.489703", "score": "0.9199", "loss": "0.0857", "code": " void mousePressed(MouseEvent e) { if (!SwingUtilities.isLeftMouseButton(e)) { return; } super.mousePressed(e); if (header== null) { Point .getPoint();int index = columnModel.getColumnIndexAtX(p.x); if (index1) { if (header.editCellAt(index, e)) {; repostEvent(e); } } } }", "n_tokens": 113, "n_pass": [125, 9, 8]}
{"time": "2021-02-16 00:57:27.675357", "score": "0.9236", "loss": "0.0829", "code": " void mousePressed(MouseEvent e) { if (!SwingUtilities.isLeftMouseButton(e)) { return; } super.mousePressed(e); if (header== null) { PointgetPoint();int index = columnModel.getColumnIndexAtX(p.x); if (index1) { if (header.editCellAt(index, e)) {; repostEvent(e); } } } }", "n_tokens": 111, "n_pass": [200, 11, 9]}
{"time": "2021-02-16 00:57:30.271820", "score": "0.9347", "loss": "0.0712", "code": " void mousePressed(MouseEvent e) { if (!SwingUtilities.isLeftMouseButton(e)) { return; } super.mousePressed(e); if (header== null) { PointgetPoint();index = columnModel.getColumnIndexAtX(p.x); if (index1) { if (header.editCellAt(index, e)) {; repostEvent(e); } } } }", "n_tokens": 109, "n_pass": [203, 12, 10]}
{"time": "2021-02-16 00:57:35.756869", "score": "0.9539", "loss": "0.0493", "code": " void mousePressed(MouseEvent e) { if (!SwingUtilities.isLeftMouseButton(e)) { return; } super.mousePressed(e); if (header== null) { PointgetPoint();index = columnModel.getColumnIndexAtX(); if (index1) { if (header.editCellAt(index, e)) {; repostEvent(e); } } } }", "n_tokens": 106, "n_pass": [207, 14, 11]}
{"time": "2021-02-16 00:57:38.338242", "score": "0.9645", "loss": "0.0381", "code": " void mousePressed(MouseEvent e) { if (!SwingUtilities.isLeftMouseButton(e)) { return; } super.mousePressed(e); if (header== null) { PointgetPoint();index = columnModel.getColumnIndexAtX(); if (index1) { if (header.editCellAt(index, e)) {(e); } } } }", "n_tokens": 103, "n_pass": [217, 15, 12]}
{"time": "2021-02-16 00:57:40.921267", "score": "0.9645", "loss": "0.0381", "code": " void mousePressed(MouseEvent e) { if (!SwingUtilities.isLeftMouseButton(e)) { return; } super.mousePressed(e); if (header== null) { PointgetPoint();index = columnModel.getColumnIndexAtX(); if (index1) { if (header.editCellAt(index, e)) {; } } } }", "n_tokens": 100, "n_pass": [218, 16, 13]}
{"time": "2021-02-16 00:57:43.858336", "score": "0.9716", "loss": "0.0299", "code": " void mousePressed(MouseEvent e) { if (!isLeftMouseButton(e)) { return; } super.mousePressed(e); if (header== null) { PointgetPoint();index = columnModel.getColumnIndexAtX(); if (index1) { if (header.editCellAt(index, e)) {; } } } }", "n_tokens": 98, "n_pass": [230, 17, 14]}
{"time": "2021-02-16 00:57:46.438827", "score": "0.9716", "loss": "0.0299", "code": " void mousePressed(MouseEvent e) { if (!isLeftMouseButton(e)) {  } super.mousePressed(e); if (header== null) { PointgetPoint();index = columnModel.getColumnIndexAtX(); if (index1) { if (header.editCellAt(index, e)) {; } } } }", "n_tokens": 96, "n_pass": [235, 18, 15]}
{"time": "2021-02-16 00:57:49.368539", "score": "0.969", "loss": "0.0329", "code": " void mousePressed(MouseEvent e) { if (!isLeftMouseButton(e)) {  } super.mousePressed(e); if (header=null) { PointgetPoint();index = columnModel.getColumnIndexAtX(); if (index1) { if (header.editCellAt(index, e)) {; } } } }", "n_tokens": 94, "n_pass": [244, 19, 16]}
{"time": "2021-02-16 00:57:51.939693", "score": "0.9746", "loss": "0.0267", "code": " void mousePressed(MouseEvent e) { if (!isLeftMouseButton(e)) {  } super.mousePressed(e); if (header=null) {getPoint();index = columnModel.getColumnIndexAtX(); if (index1) { if (header.editCellAt(index, e)) {; } } } }", "n_tokens": 92, "n_pass": [247, 20, 17]}
{"time": "2021-02-16 00:57:54.531047", "score": "0.6773", "loss": "0.3961", "code": " void mousePressed(MouseEvent e) { if (!isLeftMouseButton(e)) {  } super.mousePressed(e); if (header=null) {getPoint();index .getColumnIndexAtX(); if (index1) { if (header.editCellAt(index, e)) {; } } } }", "n_tokens": 89, "n_pass": [251, 21, 18]}
{"time": "2021-02-16 00:57:57.865186", "score": "0.8248", "loss": "0.1956", "code": " void mousePressed(MouseEvent e) { if (!isLeftMouseButton(e)) {  } super.mousePressed(e); if (null) {getPoint();index .getColumnIndexAtX(); if (index1) { if (header.editCellAt(index, e)) {; } } } }", "n_tokens": 87, "n_pass": [284, 22, 19]}
{"time": "2021-02-16 00:58:07.847139", "score": "0.8248", "loss": "0.1956", "code": " void mousePressed(MouseEvent e) { if (!isLeftMouseButton(e)) {  } super.mousePressed(e); if (null){getPoint();index .getColumnIndexAtX(); if (index1) { if (header.editCellAt(index, e)) {; } } } }", "n_tokens": 86, "n_pass": [398, 23, 20]}
{"time": "2021-02-16 00:58:10.480913", "score": "0.8248", "loss": "0.1956", "code": " void mousePressed(MouseEvent e) { if (!isLeftMouseButton(e)) {  } super.mousePressed(e); if (null){getPoint();index.getColumnIndexAtX(); if (index1) { if (header.editCellAt(index, e)) {; } } } }", "n_tokens": 85, "n_pass": [404, 24, 21]}
{"time": "2021-02-16 00:58:13.052995", "score": "0.977", "loss": "0.024", "code": " void mousePressed(MouseEvent e) { if (!isLeftMouseButton(e)) {  } super.mousePressed(e); if (null){getPoint();indexgetColumnIndexAtX(); if (index1) { if (header.editCellAt(index, e)) {; } } } }", "n_tokens": 84, "n_pass": [405, 25, 22]}
{"time": "2021-02-16 00:58:15.637675", "score": "0.9785", "loss": "0.0223", "code": " void mousePressed(MouseEvent e) { if (!isLeftMouseButton(e)) {  } super.mousePressed(e); if (null){getPoint();index(); if (index1) { if (header.editCellAt(index, e)) {; } } } }", "n_tokens": 83, "n_pass": [406, 26, 23]}
{"time": "2021-02-16 00:58:18.193779", "score": "0.9785", "loss": "0.0223", "code": " void mousePressed(MouseEvent e) { if (!isLeftMouseButton(e)) {  } super.mousePressed(e); if (null){getPoint();index();if (index1) { if (header.editCellAt(index, e)) {; } } } }", "n_tokens": 82, "n_pass": [410, 27, 24]}
{"time": "2021-02-16 00:58:20.781673", "score": "0.9785", "loss": "0.0223", "code": " void mousePressed(MouseEvent e) { if (!isLeftMouseButton(e)) {  } super.mousePressed(e); if (null){getPoint();index();if(index1) { if (header.editCellAt(index, e)) {; } } } }", "n_tokens": 81, "n_pass": [412, 28, 25]}
{"time": "2021-02-16 00:58:23.378080", "score": "0.9787", "loss": "0.0219", "code": " void mousePressed(MouseEvent e) { if (!isLeftMouseButton(e)) {  } super.mousePressed(e); if (null){getPoint();index();if(1) { if (header.editCellAt(index, e)) {; } } } }", "n_tokens": 80, "n_pass": [414, 29, 26]}
{"time": "2021-02-16 00:58:25.954189", "score": "0.9787", "loss": "0.0219", "code": " void mousePressed(MouseEvent e) { if (!isLeftMouseButton(e)) {  } super.mousePressed(e); if (null){getPoint();index();if(1){ if (header.editCellAt(index, e)) {; } } } }", "n_tokens": 79, "n_pass": [417, 30, 27]}
{"time": "2021-02-16 00:58:28.530982", "score": "0.9779", "loss": "0.0224", "code": " void mousePressed(MouseEvent e) { if (!isLeftMouseButton(e)) {  } super.mousePressed(e); if (null){getPoint();index();if(1){ if (header(index, e)) {; } } } }", "n_tokens": 77, "n_pass": [421, 31, 28]}
{"time": "2021-02-16 00:58:31.130970", "score": "0.9763", "loss": "0.024", "code": " void mousePressed(MouseEvent e) { if (!isLeftMouseButton(e)) {  } super.mousePressed(e); if (null){getPoint();index();if(1){ if (header(indexe)) {; } } } }", "n_tokens": 75, "n_pass": [423, 32, 29]}
{"time": "2021-02-16 00:58:34.172106", "score": "0.9763", "loss": "0.024", "code": "void mousePressed(MouseEvent e) { if (!isLeftMouseButton(e)) {  } super.mousePressed(e); if (null){getPoint();index();if(1){ if (header(indexe)) {; } } } }", "n_tokens": 74, "n_pass": [431, 33, 30]}
{"time": "2021-02-16 00:58:37.479292", "score": "0.9763", "loss": "0.024", "code": "void mousePressed(MouseEvent e){ if (!isLeftMouseButton(e)) {  } super.mousePressed(e); if (null){getPoint();index();if(1){ if (header(indexe)) {; } } } }", "n_tokens": 73, "n_pass": [440, 34, 31]}
{"time": "2021-02-16 00:58:40.155651", "score": "0.9763", "loss": "0.024", "code": "void mousePressed(MouseEvent e){if (!isLeftMouseButton(e)) {  } super.mousePressed(e); if (null){getPoint();index();if(1){ if (header(indexe)) {; } } } }", "n_tokens": 72, "n_pass": [442, 35, 32]}
{"time": "2021-02-16 00:58:42.843247", "score": "0.9763", "loss": "0.024", "code": "void mousePressed(MouseEvent e){if(!isLeftMouseButton(e)) {  } super.mousePressed(e); if (null){getPoint();index();if(1){ if (header(indexe)) {; } } } }", "n_tokens": 71, "n_pass": [444, 36, 33]}
{"time": "2021-02-16 00:58:45.516129", "score": "0.9859", "loss": "0.0142", "code": "void mousePressed(MouseEvent e){if(isLeftMouseButton(e)) {  } super.mousePressed(e); if (null){getPoint();index();if(1){ if (header(indexe)) {; } } } }", "n_tokens": 70, "n_pass": [446, 37, 34]}
{"time": "2021-02-16 00:58:48.168587", "score": "0.9872", "loss": "0.013", "code": "void mousePressed(MouseEvent e){if((e)) {  } super.mousePressed(e); if (null){getPoint();index();if(1){ if (header(indexe)) {; } } } }", "n_tokens": 69, "n_pass": [447, 38, 35]}
{"time": "2021-02-16 00:58:50.892288", "score": "0.9872", "loss": "0.013", "code": "void mousePressed(MouseEvent e){if((e)){  } super.mousePressed(e); if (null){getPoint();index();if(1){ if (header(indexe)) {; } } } }", "n_tokens": 68, "n_pass": [452, 39, 36]}
{"time": "2021-02-16 00:58:53.451184", "score": "0.9872", "loss": "0.013", "code": "void mousePressed(MouseEvent e){if((e)){ } super.mousePressed(e); if (null){getPoint();index();if(1){ if (header(indexe)) {; } } } }", "n_tokens": 67, "n_pass": [454, 40, 37]}
{"time": "2021-02-16 00:58:56.021058", "score": "0.9872", "loss": "0.013", "code": "void mousePressed(MouseEvent e){if((e)){} super.mousePressed(e); if (null){getPoint();index();if(1){ if (header(indexe)) {; } } } }", "n_tokens": 66, "n_pass": [455, 41, 38]}
{"time": "2021-02-16 00:58:58.658078", "score": "0.9872", "loss": "0.013", "code": "void mousePressed(MouseEvent e){if((e)){}super.mousePressed(e); if (null){getPoint();index();if(1){ if (header(indexe)) {; } } } }", "n_tokens": 65, "n_pass": [457, 42, 39]}
{"time": "2021-02-16 00:59:03.831332", "score": "0.9965", "loss": "0.0037", "code": "void mousePressed(MouseEvent e){if((e)){}super.mousePressed(); if (null){getPoint();index();if(1){ if (header(indexe)) {; } } } }", "n_tokens": 64, "n_pass": [462, 44, 40]}
{"time": "2021-02-16 00:59:06.394382", "score": "0.9965", "loss": "0.0037", "code": "void mousePressed(MouseEvent e){if((e)){}super.mousePressed();if (null){getPoint();index();if(1){ if (header(indexe)) {; } } } }", "n_tokens": 63, "n_pass": [465, 45, 41]}
{"time": "2021-02-16 00:59:08.993013", "score": "0.9965", "loss": "0.0037", "code": "void mousePressed(MouseEvent e){if((e)){}super.mousePressed();if(null){getPoint();index();if(1){ if (header(indexe)) {; } } } }", "n_tokens": 62, "n_pass": [467, 46, 42]}
{"time": "2021-02-16 00:59:17.858005", "score": "0.9965", "loss": "0.0037", "code": "void mousePressed(MouseEvent e){if((e)){}super.mousePressed();if(null){getPoint();index();if(1){if (header(indexe)) {; } } } }", "n_tokens": 61, "n_pass": [542, 48, 43]}
{"time": "2021-02-16 00:59:20.545037", "score": "0.9965", "loss": "0.0037", "code": "void mousePressed(MouseEvent e){if((e)){}super.mousePressed();if(null){getPoint();index();if(1){if(header(indexe)) {; } } } }", "n_tokens": 60, "n_pass": [544, 49, 44]}
{"time": "2021-02-16 00:59:23.133505", "score": "0.9969", "loss": "0.0033", "code": "void mousePressed(MouseEvent e){if((e)){}super.mousePressed();if(null){getPoint();index();if(1){if((indexe)) {; } } } }", "n_tokens": 59, "n_pass": [546, 50, 45]}
{"time": "2021-02-16 00:59:25.922805", "score": "0.9969", "loss": "0.0032", "code": "void mousePressed(MouseEvent e){if((e)){}super.mousePressed();if(null){getPoint();index();if(1){if((e)) {; } } } }", "n_tokens": 58, "n_pass": [548, 51, 46]}
{"time": "2021-02-16 00:59:28.532375", "score": "0.9969", "loss": "0.0032", "code": "void mousePressed(MouseEvent e){if((e)){}super.mousePressed();if(null){getPoint();index();if(1){if((e)){; } } } }", "n_tokens": 57, "n_pass": [552, 52, 47]}
{"time": "2021-02-16 00:59:31.091058", "score": "0.9969", "loss": "0.0032", "code": "void mousePressed(MouseEvent e){if((e)){}super.mousePressed();if(null){getPoint();index();if(1){if((e)){ } } } }", "n_tokens": 56, "n_pass": [554, 53, 48]}
{"time": "2021-02-16 00:59:33.723125", "score": "0.9969", "loss": "0.0032", "code": "void mousePressed(MouseEvent e){if((e)){}super.mousePressed();if(null){getPoint();index();if(1){if((e)){} } } }", "n_tokens": 55, "n_pass": [555, 54, 49]}
{"time": "2021-02-16 00:59:36.275009", "score": "0.9969", "loss": "0.0032", "code": "void mousePressed(MouseEvent e){if((e)){}super.mousePressed();if(null){getPoint();index();if(1){if((e)){}} } }", "n_tokens": 54, "n_pass": [557, 55, 50]}
{"time": "2021-02-16 00:59:38.972168", "score": "0.9969", "loss": "0.0032", "code": "void mousePressed(MouseEvent e){if((e)){}super.mousePressed();if(null){getPoint();index();if(1){if((e)){}}} }", "n_tokens": 53, "n_pass": [559, 56, 51]}
{"time": "2021-02-16 00:59:41.550926", "score": "0.9969", "loss": "0.0032", "code": "void mousePressed(MouseEvent e){if((e)){}super.mousePressed();if(null){getPoint();index();if(1){if((e)){}}}}", "n_tokens": 52, "n_pass": [561, 57, 52]}
{"time": "2021-02-16 00:59:44.880651", "score": "0.4653", "loss": "0.7656", "code": "void mousePressed(MouseEvent e){if((e)){}supermousePressed();if(null){getPoint();index();if(1){if((e)){}}}}", "n_tokens": 51, "n_pass": [581, 58, 53]}
{"time": "2021-02-16 00:59:48.892437", "score": "0.971", "loss": "0.0295", "code": "void mousePressed(MouseEvent e){if((e)){}mousePressed();if(null){getPoint();index();if(1){if((e)){}}}}", "n_tokens": 50, "n_pass": [632, 59, 54]}

Minimal simplified code:
void mousePressed(MouseEvent e){if((e)){}mousePressed();if(null){getPoint();index();if(1){if((e)){}}}}

