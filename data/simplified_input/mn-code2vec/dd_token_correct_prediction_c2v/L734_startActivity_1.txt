
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/Blankj__AndroidUtilCode/utilcode/src/main/java/com/blankj/utilcode/util/ActivityUtils_startActivity.java
method_name = startActivity
method_body = private static void startActivity(final Intent intent, final Context context, final Bundle options) { if (!(context instanceof Activity)) { intent.addFlags(Intent.FLAG_ACTIVITY_NEW_TASK); } if (options != null && Build.VERSION.SDK_INT >= Build.VERSION_CODES.JELLY_BEAN) { context.startActivity(intent, options); } else { context.startActivity(intent); } }
predict, score, loss = startActivity, 0.9710855484008789, 0.030875805765390396

Trace of simplified code(s):
{"time": "2021-02-16 00:25:50.926314", "score": "0.9711", "loss": "0.0309", "code": "private static void startActivity(final Intent intent, final Context context, final Bundle options) { if (!(context instanceof Activity)) { intent.addFlags(Intent.FLAG_ACTIVITY_NEW_TASK); } if (options != null && Build.VERSION.SDK_INT >= Build.VERSION_CODES.JELLY_BEAN) { context.startActivity(intent, options); } else { context.startActivity(intent); } }", "n_tokens": 129, "n_pass": [1, 1, 1]}
{"time": "2021-02-16 00:25:53.537089", "score": "0.6577", "loss": "0.4456", "code": "private static void startActivity(final Intent intent, final Context context, final Bundle options) { if (!(context instanceof Activity)) { intent.addFlags(Intent.FLAG_ACTIVITY_NEW_TASK); } if (options != null && Build.VERSIONBEAN) { context.startActivity(intent, options); } else { context.startActivity(intent); } }", "n_tokens": 113, "n_pass": [25, 2, 2]}
{"time": "2021-02-16 00:25:56.162599", "score": "0.5668", "loss": "0.6026", "code": "private static void startActivity(final Intent intent, final Context context, final Bundle options) { if (!(context instanceof Activity)) { intent.addFlags(Intent.FLAG_ACTIVITY_NEW_TASK); } if (options != null && Build.VERSIONBEAN) { context.startActivity(intent, options); startActivity(intent); } }", "n_tokens": 105, "n_pass": [48, 3, 3]}
{"time": "2021-02-16 00:26:01.483894", "score": "0.7953", "loss": "0.2668", "code": "private static void startActivity(final Intent intent, finalBundle options) { if (!(context instanceof Activity)) { intent.addFlags(Intent.FLAG_ACTIVITY_NEW_TASK); } if (options != null && Build.VERSIONBEAN) { context.startActivity(intent, options); startActivity(intent); } }", "n_tokens": 97, "n_pass": [51, 5, 4]}
{"time": "2021-02-16 00:26:04.150701", "score": "0.9939", "loss": "0.0074", "code": "private static void startActivity(final Intent intent, finalBundle options) { if (!(context instanceof Activity)) { intent.addFlags(Intent.FLAG_ACTIVITY_NEW_TASK); } if (options != BEAN) { context.startActivity(intent, options); startActivity(intent); } }", "n_tokens": 89, "n_pass": [58, 6, 5]}
{"time": "2021-02-16 00:26:09.322584", "score": "0.9802", "loss": "0.0221", "code": "private static void startActivity(Bundle options) { if (!(context instanceof Activity)) { intent.addFlags(Intent.FLAG_ACTIVITY_NEW_TASK); } if (options != BEAN) { context.startActivity(intent, options); startActivity(intent); } }", "n_tokens": 81, "n_pass": [63, 8, 6]}
{"time": "2021-02-16 00:26:11.928891", "score": "0.2923", "loss": "2.1115", "code": "private static void startActivity(Bundle options) { if (!(context instanceof Activity)) { intent.addFlags(Intent.FLAG_ACTIVITY_NEW_TASK); } if (options != BEAN) { context.startActivitystartActivity(intent); } }", "n_tokens": 73, "n_pass": [71, 9, 7]}
{"time": "2021-02-16 00:26:14.534291", "score": "0.5173", "loss": "0.9297", "code": "private static void startActivity(Bundle options) { if (!(context instanceof Activity)) { intent.addFlags(Intent.FLAG_ACTIVITY_NEW_TASK); } if (options != BEAN) { context.startActivity; } }", "n_tokens": 69, "n_pass": [99, 10, 8]}
{"time": "2021-02-16 00:26:17.114466", "score": "0.5173", "loss": "0.9297", "code": "void startActivity(Bundle options) { if (!(context instanceof Activity)) { intent.addFlags(Intent.FLAG_ACTIVITY_NEW_TASK); } if (options != BEAN) { context.startActivity; } }", "n_tokens": 65, "n_pass": [100, 11, 9]}
{"time": "2021-02-16 00:26:20.073002", "score": "0.5561", "loss": "0.8632", "code": "void startActivity(Bundle options) { if (!(Activity)) { intent.addFlags(Intent.FLAG_ACTIVITY_NEW_TASK); } if (options != BEAN) { context.startActivity; } }", "n_tokens": 61, "n_pass": [105, 12, 10]}
{"time": "2021-02-16 00:26:25.311734", "score": "0.4015", "loss": "1.4801", "code": "void startActivity(Bundle options) { if (!(Activity)) { intent.addFlags(Intent.FLAG_ACTIVITY_NEW_TASK); } if (optionsBEAN) { context.startActivity; } }", "n_tokens": 57, "n_pass": [113, 14, 11]}
{"time": "2021-02-16 00:26:27.864811", "score": "0.2069", "loss": "2.6131", "code": "void startActivity(Bundle options) { if (!(Activity)) { intent.addFlags(Intent.FLAG_ACTIVITY_NEW_TASK); } if (optionsBEAN) {; } }", "n_tokens": 53, "n_pass": [115, 15, 12]}
{"time": "2021-02-16 00:26:33.626588", "score": "0.2069", "loss": "2.6131", "code": "void startActivity(Bundle options) { if (!(Activity)) { intent.addFlags(Intent.FLAG_ACTIVITY_NEW_TASK); } if (optionsBEAN) {} }", "n_tokens": 51, "n_pass": [155, 17, 13]}
{"time": "2021-02-16 00:26:54.214424", "score": "0.2069", "loss": "2.6131", "code": "void startActivity(Bundle options){ if (!(Activity)) { intent.addFlags(Intent.FLAG_ACTIVITY_NEW_TASK); } if (optionsBEAN) {} }", "n_tokens": 50, "n_pass": [240, 23, 14]}
{"time": "2021-02-16 00:26:56.755062", "score": "0.2069", "loss": "2.6131", "code": "void startActivity(Bundle options){if (!(Activity)) { intent.addFlags(Intent.FLAG_ACTIVITY_NEW_TASK); } if (optionsBEAN) {} }", "n_tokens": 49, "n_pass": [241, 24, 15]}
{"time": "2021-02-16 00:26:59.294544", "score": "0.2069", "loss": "2.6131", "code": "void startActivity(Bundle options){if(!(Activity)) { intent.addFlags(Intent.FLAG_ACTIVITY_NEW_TASK); } if (optionsBEAN) {} }", "n_tokens": 48, "n_pass": [243, 25, 16]}
{"time": "2021-02-16 00:27:01.845983", "score": "0.2069", "loss": "2.6131", "code": "void startActivity(Bundle options){if((Activity)) { intent.addFlags(Intent.FLAG_ACTIVITY_NEW_TASK); } if (optionsBEAN) {} }", "n_tokens": 47, "n_pass": [245, 26, 17]}
{"time": "2021-02-16 00:27:04.418850", "score": "0.2069", "loss": "2.6131", "code": "void startActivity(Bundle options){if((Activity)){ intent.addFlags(Intent.FLAG_ACTIVITY_NEW_TASK); } if (optionsBEAN) {} }", "n_tokens": 46, "n_pass": [250, 27, 18]}
{"time": "2021-02-16 00:27:06.957847", "score": "0.2069", "loss": "2.6131", "code": "void startActivity(Bundle options){if((Activity)){intent.addFlags(Intent.FLAG_ACTIVITY_NEW_TASK); } if (optionsBEAN) {} }", "n_tokens": 45, "n_pass": [252, 28, 19]}
{"time": "2021-02-16 00:27:17.211866", "score": "0.2069", "loss": "2.6131", "code": "void startActivity(Bundle options){if((Activity)){intent.addFlags(Intent.FLAGACTIVITY_NEW_TASK); } if (optionsBEAN) {} }", "n_tokens": 44, "n_pass": [260, 32, 20]}
{"time": "2021-02-16 00:27:22.332329", "score": "0.2069", "loss": "2.6131", "code": "void startActivity(Bundle options){if((Activity)){intent.addFlags(Intent.FLAGACTIVITYNEW_TASK); } if (optionsBEAN) {} }", "n_tokens": 43, "n_pass": [262, 34, 21]}
{"time": "2021-02-16 00:27:27.436744", "score": "0.2069", "loss": "2.6131", "code": "void startActivity(Bundle options){if((Activity)){intent.addFlags(Intent.FLAGACTIVITYNEWTASK); } if (optionsBEAN) {} }", "n_tokens": 42, "n_pass": [264, 36, 22]}
{"time": "2021-02-16 00:27:32.749397", "score": "0.2069", "loss": "2.6131", "code": "void startActivity(Bundle options){if((Activity)){intent.addFlags(Intent.FLAGACTIVITYNEWTASK);} if (optionsBEAN) {} }", "n_tokens": 41, "n_pass": [268, 38, 23]}
{"time": "2021-02-16 00:27:35.294915", "score": "0.2069", "loss": "2.6131", "code": "void startActivity(Bundle options){if((Activity)){intent.addFlags(Intent.FLAGACTIVITYNEWTASK);}if (optionsBEAN) {} }", "n_tokens": 40, "n_pass": [270, 39, 24]}
{"time": "2021-02-16 00:27:37.860644", "score": "0.2069", "loss": "2.6131", "code": "void startActivity(Bundle options){if((Activity)){intent.addFlags(Intent.FLAGACTIVITYNEWTASK);}if(optionsBEAN) {} }", "n_tokens": 39, "n_pass": [272, 40, 25]}
{"time": "2021-02-16 00:27:40.406606", "score": "0.3165", "loss": "2.0804", "code": "void startActivity(Bundle options){if((Activity)){intent.addFlags(Intent.FLAGACTIVITYNEWTASK);}if(BEAN) {} }", "n_tokens": 38, "n_pass": [274, 41, 26]}
{"time": "2021-02-16 00:27:42.972598", "score": "0.3165", "loss": "2.0804", "code": "void startActivity(Bundle options){if((Activity)){intent.addFlags(Intent.FLAGACTIVITYNEWTASK);}if(BEAN){} }", "n_tokens": 37, "n_pass": [277, 42, 27]}
{"time": "2021-02-16 00:27:51.392593", "score": "0.2785", "loss": "2.0783", "code": "void startActivity(Bundle options){if((Activity)){intent.addFlags(Intent.ACTIVITYNEWTASK);}if(BEAN){} }", "n_tokens": 36, "n_pass": [303, 45, 28]}
{"time": "2021-02-16 00:27:59.118425", "score": "0.2785", "loss": "2.0783", "code": "void startActivity(Bundle options){if((Activity)){intent.addFlags(Intent.ACTIVITYNEW);}if(BEAN){} }", "n_tokens": 35, "n_pass": [306, 48, 29]}
{"time": "2021-02-16 00:28:07.551087", "score": "0.3493", "loss": "1.7945", "code": "void startActivity(Bundle options){if((Activity)){intent.addFlags(Intent.NEW);}if(BEAN){} }", "n_tokens": 34, "n_pass": [339, 51, 30]}
{"time": "2021-02-16 00:28:16.320249", "score": "0.3493", "loss": "1.7945", "code": "void startActivity(Bundle options){if((Activity)){intent.addFlags(Intent.NEW);}if(BEAN){}}", "n_tokens": 33, "n_pass": [375, 54, 31]}

Minimal simplified code:
void startActivity(Bundle options){if((Activity)){intent.addFlags(Intent.NEW);}if(BEAN){}}

