
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/kaazing__gateway/mina.netty/src/main/java/org/jboss/netty/channel/socket/nio/NioWorker_select.java
method_name = select
method_body = @Override protected int select(Selector selector, boolean quickSelect) throws IOException { if (quickSelect) { return SelectorUtil.select(selector, QUICK_SELECT_TIMEOUT); } else { return SelectorUtil.select(selector); } }
predict, score, loss = select, 0.9999103546142578, 9.83428253675811e-05

Trace of simplified code(s):
{"time": "2021-02-14 06:03:02.628665", "score": "0.9999", "loss": "0.0001", "code": "@Override protected int select(Selector selector, boolean quickSelect) throws IOException { if (quickSelect) { return SelectorUtil.select(selector, QUICK_SELECT_TIMEOUT); } else { return SelectorUtil.select(selector); } }", "n_tokens": 69, "n_pass": [1, 1, 1]}
{"time": "2021-02-14 06:03:05.274311", "score": "0.9998", "loss": "0.0002", "code": " int select(Selector selector, boolean quickSelect) throws IOException { if (quickSelect) { return SelectorUtil.select(selector, QUICK_SELECT_TIMEOUT); } else { return SelectorUtil.select(selector); } }", "n_tokens": 65, "n_pass": [44, 2, 2]}
{"time": "2021-02-14 06:03:07.903135", "score": "0.9996", "loss": "0.0004", "code": " int select(Selector selectorquickSelect) throws IOException { if (quickSelect) { return SelectorUtil.select(selector, QUICK_SELECT_TIMEOUT); } else { return SelectorUtil.select(selector); } }", "n_tokens": 61, "n_pass": [46, 3, 3]}
{"time": "2021-02-14 06:03:10.533322", "score": "0.9998", "loss": "0.0002", "code": " int select(Selector selectorquickSelect) throws IOException { if (quickSelect) { return SelectorUtil.select(selectorSELECT_TIMEOUT); } else { return SelectorUtil.select(selector); } }", "n_tokens": 57, "n_pass": [53, 4, 4]}
{"time": "2021-02-14 06:03:13.191614", "score": "0.9988", "loss": "0.0016", "code": " int select(Selector selectorquickSelect) throws IOException { if (quickSelect) { return SelectorUtil.select(selectorSELECT_TIMEOUT); } else { return SelectorUtil; } }", "n_tokens": 52, "n_pass": [57, 5, 5]}
{"time": "2021-02-14 06:03:16.603938", "score": "0.9957", "loss": "0.0193", "code": " int select(Selector selectorquickSelect) throws IOException { if (quickSelect) { SelectorUtil.select(selectorSELECT_TIMEOUT); } else { return SelectorUtil; } }", "n_tokens": 50, "n_pass": [108, 6, 6]}
{"time": "2021-02-14 06:03:19.245679", "score": "0.4411", "loss": "1.4927", "code": " int select(Selector selectorquickSelect) throws IOException { if (quickSelect) { SelectorUtil(selectorSELECT_TIMEOUT); } else { return SelectorUtil; } }", "n_tokens": 48, "n_pass": [109, 7, 7]}
{"time": "2021-02-14 06:03:24.500879", "score": "0.6928", "loss": "0.5985", "code": " int select(Selector selectorquickSelect) throws IOException { if (quickSelect) { SelectorUtil(selectorSELECT_TIMEOUT); } else {SelectorUtil; } }", "n_tokens": 45, "n_pass": [116, 9, 8]}
{"time": "2021-02-14 06:03:27.110417", "score": "0.6804", "loss": "0.6206", "code": " int select(Selector selectorquickSelect) throws IOException { if (quickSelect) { SelectorUtil(selectorSELECT_TIMEOUT); } else {} }", "n_tokens": 42, "n_pass": [117, 10, 9]}
{"time": "2021-02-14 06:03:30.128953", "score": "0.5886", "loss": "0.726", "code": " int select(Selector selectorquickSelect) throws IOException { if (quickSelect) {(selectorSELECT_TIMEOUT); } else {} }", "n_tokens": 40, "n_pass": [131, 11, 10]}
{"time": "2021-02-14 06:03:41.023932", "score": "0.8781", "loss": "0.199", "code": " int select(Selector selectorquickSelect) throws IOException { if (quickSelect) {(SELECT_TIMEOUT); } else {} }", "n_tokens": 39, "n_pass": [190, 13, 11]}
{"time": "2021-02-14 06:03:43.635051", "score": "0.6622", "loss": "0.5692", "code": " int select(Selector selectorquickSelect) throws IOException { if (quickSelect) {(_TIMEOUT); } else {} }", "n_tokens": 38, "n_pass": [191, 14, 12]}
{"time": "2021-02-14 06:03:46.243617", "score": "0.6622", "loss": "0.5692", "code": " int select(Selector selectorquickSelect) throws IOException { if (quickSelect) {(TIMEOUT); } else {} }", "n_tokens": 37, "n_pass": [192, 15, 13]}
{"time": "2021-02-14 06:03:48.847666", "score": "0.6622", "loss": "0.5692", "code": " int select(Selector selectorquickSelect) throws IOException { if (quickSelect) {(TIMEOUT);} else {} }", "n_tokens": 36, "n_pass": [196, 16, 14]}
{"time": "2021-02-14 06:03:51.461787", "score": "0.6622", "loss": "0.5692", "code": " int select(Selector selectorquickSelect) throws IOException { if (quickSelect) {(TIMEOUT);}else {} }", "n_tokens": 35, "n_pass": [198, 17, 15]}
{"time": "2021-02-14 06:03:54.087418", "score": "0.6622", "loss": "0.5692", "code": " int select(Selector selectorquickSelect) throws IOException { if (quickSelect) {(TIMEOUT);} {} }", "n_tokens": 34, "n_pass": [199, 18, 16]}
{"time": "2021-02-14 06:03:56.701251", "score": "0.6622", "loss": "0.5692", "code": " int select(Selector selectorquickSelect) throws IOException { if (quickSelect) {(TIMEOUT);}{} }", "n_tokens": 33, "n_pass": [200, 19, 17]}
{"time": "2021-02-14 06:03:59.338992", "score": "0.6622", "loss": "0.5692", "code": " int select(Selector selectorquickSelect) throws IOException { if (quickSelect) {(TIMEOUT);} }", "n_tokens": 31, "n_pass": [201, 20, 18]}
{"time": "2021-02-14 06:04:01.964112", "score": "0.6622", "loss": "0.5692", "code": "int select(Selector selectorquickSelect) throws IOException { if (quickSelect) {(TIMEOUT);} }", "n_tokens": 30, "n_pass": [203, 21, 19]}
{"time": "2021-02-14 06:04:05.381186", "score": "0.4753", "loss": "0.8079", "code": "int select(Selector quickSelect) throws IOException { if (quickSelect) {(TIMEOUT);} }", "n_tokens": 29, "n_pass": [210, 22, 20]}
{"time": "2021-02-14 06:04:07.995754", "score": "0.4753", "loss": "0.8079", "code": "int select(Selector quickSelect)throws IOException { if (quickSelect) {(TIMEOUT);} }", "n_tokens": 28, "n_pass": [213, 23, 21]}
{"time": "2021-02-14 06:04:10.612815", "score": "0.4753", "loss": "0.8079", "code": "int select(Selector quickSelect)throws IOException{ if (quickSelect) {(TIMEOUT);} }", "n_tokens": 27, "n_pass": [217, 24, 22]}
{"time": "2021-02-14 06:04:13.222563", "score": "0.4753", "loss": "0.8079", "code": "int select(Selector quickSelect)throws IOException{if (quickSelect) {(TIMEOUT);} }", "n_tokens": 26, "n_pass": [219, 25, 23]}
{"time": "2021-02-14 06:04:15.828982", "score": "0.4753", "loss": "0.8079", "code": "int select(Selector quickSelect)throws IOException{if(quickSelect) {(TIMEOUT);} }", "n_tokens": 25, "n_pass": [221, 26, 24]}
{"time": "2021-02-14 06:04:18.438590", "score": "0.4753", "loss": "0.8079", "code": "int select(Selector quickSelect)throws IOException{if(quickSelect){(TIMEOUT);} }", "n_tokens": 24, "n_pass": [225, 27, 25]}
{"time": "2021-02-14 06:04:22.233536", "score": "0.4753", "loss": "0.8079", "code": "int select(Selector quickSelect)throws IOException{if(quickSelect){(TIMEOUT);}}", "n_tokens": 23, "n_pass": [251, 28, 26]}

Minimal simplified code:
int select(Selector quickSelect)throws IOException{if(quickSelect){(TIMEOUT);}}

