
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/JakeWharton__HanselAndGretel/library/src/android/support/v4/app/FragmentBreadCrumbs_onLayout.java
method_name = onLayout
method_body = @Override protected void onLayout(boolean changed, int l, int t, int r, int b) { final int mPaddingLeft = getPaddingLeft(); final int mPaddingRight = getPaddingRight(); final int mPaddingTop = getPaddingTop(); final int mPaddingBottom = getPaddingBottom(); final int childCount = getChildCount(); for (int i = 0; i < childCount; i++) { final View child = getChildAt(i); int childRight = mPaddingLeft + child.getMeasuredWidth() - mPaddingRight; int childBottom = mPaddingTop + child.getMeasuredHeight() - mPaddingBottom; child.layout(mPaddingLeft, mPaddingTop, childRight, childBottom); } }
predict, score, loss = onLayout, 0.9963100552558899, 0.004011204931885004

Trace of simplified code(s):
{"time": "2021-02-14 06:12:28.733322", "score": "0.9984", "loss": "0.002", "code": "@Override protected void onLayout(boolean changed, int l, int t, int r, int b) { final int mPaddingLeft = getPaddingLeft(); final int mPaddingRight = getPaddingRight(); final int mPaddingTop = getPaddingTop(); final int mPaddingBottom = getPaddingBottom(); final int childCount = getChildCount(); for (int i = 0; i < childCount; i++) { final View child = getChildAt(i); int childRight = mPaddingLeft + child.getMeasuredWidth() - mPaddingRight; int childBottom = mPaddingTop + child.getMeasuredHeight() - mPaddingBottom; child.layout(mPaddingLeft, mPaddingTop, childRight, childBottom); } }", "n_tokens": 203, "n_pass": [1, 1, 1]}
{"time": "2021-02-14 06:12:32.603824", "score": "0.986", "loss": "0.0146", "code": "@Override protected void onLayout(boolean changed, int l, int t, int r, int b) { final int mPaddingLeft = getPaddingLeft(); final int mPaddingRight = getPaddingRight(); final int mPaddingTop = getPaddingTop();  for (int i = 0; i < childCount; i++) { final View child = getChildAt(i); int childRight = mPaddingLeft + child.getMeasuredWidth() - mPaddingRight; int childBottom = mPaddingTop + child.getMeasuredHeight() - mPaddingBottom; child.layout(mPaddingLeft, mPaddingTop, childRight, childBottom); } }", "n_tokens": 178, "n_pass": [23, 2, 2]}
{"time": "2021-02-14 06:12:35.278890", "score": "0.7984", "loss": "0.2302", "code": "@Override protected void onLayout(boolean changed, int l, int t, int r, int b) { final int mPaddingLeft = getPaddingLeft(); final int mPaddingRight = getPaddingRight(); final int mPaddingTop = getPaddingTop(); { final View child = getChildAt(i); int childRight = mPaddingLeft + child.getMeasuredWidth() - mPaddingRight; int childBottom = mPaddingTop + child.getMeasuredHeight() - mPaddingBottom; child.layout(mPaddingLeft, mPaddingTop, childRight, childBottom); } }", "n_tokens": 153, "n_pass": [24, 3, 3]}
{"time": "2021-02-14 06:12:37.937783", "score": "0.9238", "loss": "0.0818", "code": "@Override protected void onLayout(boolean changed, int l, int t, int r, int b) { final int mPaddingLeft = getPaddingLeft(); final int mPaddingRight = getPaddingRight(); final int mPaddingTop = getPaddingTop(); { final View child = getChildAt(i); int childRight = mPaddingLeft +  - mPaddingBottom; child.layout(mPaddingLeft, mPaddingTop, childRight, childBottom); } }", "n_tokens": 127, "n_pass": [26, 4, 4]}
{"time": "2021-02-14 06:12:41.787487", "score": "0.9496", "loss": "0.055", "code": "@Override protected void onLayout(boolean changed, int l, int t, int r, int b) { final int mPaddingRight = getPaddingRight(); final int mPaddingTop = getPaddingTop(); { final View child = getChildAt(i); int childRight = mPaddingLeft +  - mPaddingBottom; child.layout(mPaddingLeft, mPaddingTop, childRight, childBottom); } }", "n_tokens": 114, "n_pass": [47, 5, 5]}
{"time": "2021-02-14 06:12:44.476459", "score": "0.9317", "loss": "0.0725", "code": "@Override protected void onLayout(boolean changed, int l, int t, int r, int b) { final int mPaddingTop = getPaddingTop(); { final View child = getChildAt(i); int childRight = mPaddingLeft +  - mPaddingBottom; child.layout(mPaddingLeft, mPaddingTop, childRight, childBottom); } }", "n_tokens": 101, "n_pass": [48, 6, 6]}
{"time": "2021-02-14 06:12:47.123688", "score": "0.9534", "loss": "0.0493", "code": "@Override protected void onLayout(boolean changed, int l, int t, int r, int b) { { final View child = getChildAt(i); int childRight = mPaddingLeft +  - mPaddingBottom; child.layout(mPaddingLeft, mPaddingTop, childRight, childBottom); } }", "n_tokens": 88, "n_pass": [49, 7, 7]}
{"time": "2021-02-14 06:12:49.800301", "score": "0.7725", "loss": "0.2937", "code": "@Override protected void onLayout(boolean changed, int l, int t, int r, int b) { { final View child = getChildAt(i); int childRight = mPaddingLeft +  - mPaddingBottom; child.layout(mPaddingLeft,childBottom); } }", "n_tokens": 81, "n_pass": [77, 8, 8]}
{"time": "2021-02-14 06:12:52.901415", "score": "0.7661", "loss": "0.3017", "code": "@Override protected void onLayout(boolean changed, int l,int r, int b) { { final View child = getChildAt(i); int childRight = mPaddingLeft +  - mPaddingBottom; child.layout(mPaddingLeft,childBottom); } }", "n_tokens": 75, "n_pass": [82, 9, 9]}
{"time": "2021-02-14 06:12:55.959504", "score": "0.8276", "loss": "1.2885", "code": "@Override protected void onLayout(boolean changed, int l,int r, int b) { { finalchild = getChildAt(i); int childRight = mPaddingLeft +  - mPaddingBottom; child.layout(mPaddingLeft,childBottom); } }", "n_tokens": 72, "n_pass": [124, 10, 10]}
{"time": "2021-02-14 06:12:58.612161", "score": "0.9456", "loss": "0.4337", "code": "@Override protected void onLayout(boolean changed, int l,int r, int b) { { finalchild = getChildAt(i);childRight = mPaddingLeft +  - mPaddingBottom; child.layout(mPaddingLeft,childBottom); } }", "n_tokens": 69, "n_pass": [128, 11, 11]}
{"time": "2021-02-14 06:13:01.665799", "score": "0.9454", "loss": "0.4689", "code": "@Override protected void onLayout(boolean changed, int l,int r, int b) { { finalchild = getChildAt(i);childRight =+  - mPaddingBottom; child.layout(mPaddingLeft,childBottom); } }", "n_tokens": 66, "n_pass": [130, 12, 12]}
{"time": "2021-02-14 06:13:04.314841", "score": "0.4349", "loss": "1.3785", "code": "@Override protected void onLayout(boolean changed, int l,int r, int b) { { finalchild = getChildAt(i);childRight =- mPaddingBottom; child.layout(mPaddingLeft,childBottom); } }", "n_tokens": 63, "n_pass": [131, 13, 13]}
{"time": "2021-02-14 06:13:09.597937", "score": "0.3782", "loss": "1.5465", "code": "protected void onLayout(boolean changed, int l,int r, int b) { { finalchild = getChildAt(i);childRight =- mPaddingBottom; child.layout(mPaddingLeft,childBottom); } }", "n_tokens": 60, "n_pass": [137, 15, 14]}
{"time": "2021-02-14 06:13:12.653313", "score": "0.3893", "loss": "1.8537", "code": "protected void onLayout(boolean changed, intint r, int b) { { finalchild = getChildAt(i);childRight =- mPaddingBottom; child.layout(mPaddingLeft,childBottom); } }", "n_tokens": 57, "n_pass": [142, 16, 15]}
{"time": "2021-02-14 06:13:20.645861", "score": "0.3893", "loss": "1.8537", "code": "protected void onLayout(boolean changed,intint r, int b) { { finalchild = getChildAt(i);childRight =- mPaddingBottom; child.layout(mPaddingLeft,childBottom); } }", "n_tokens": 56, "n_pass": [199, 18, 16]}
{"time": "2021-02-14 06:13:23.281789", "score": "0.372", "loss": "1.5625", "code": "protected void onLayout(boolean changed,int r, int b) { { finalchild = getChildAt(i);childRight =- mPaddingBottom; child.layout(mPaddingLeft,childBottom); } }", "n_tokens": 55, "n_pass": [200, 19, 17]}
{"time": "2021-02-14 06:13:29.368317", "score": "0.8108", "loss": "1.154", "code": "protected void onLayout(boolean changed,int r, int b) { { finalchild = getChildAt(i);childRight =mPaddingBottom; child.layout(mPaddingLeft,childBottom); } }", "n_tokens": 53, "n_pass": [216, 21, 18]}
{"time": "2021-02-14 06:13:32.019963", "score": "0.9809", "loss": "0.1688", "code": "protected void onLayout(boolean changed,int r, int b) { { finalchild = getChildAt(i);childRight = child.layout(mPaddingLeft,childBottom); } }", "n_tokens": 51, "n_pass": [217, 22, 19]}
{"time": "2021-02-14 06:13:39.986037", "score": "0.9809", "loss": "0.1688", "code": " void onLayout(boolean changed,int r, int b) { { finalchild = getChildAt(i);childRight = child.layout(mPaddingLeft,childBottom); } }", "n_tokens": 50, "n_pass": [225, 25, 20]}
{"time": "2021-02-14 06:13:42.620063", "score": "0.9809", "loss": "0.1688", "code": "void onLayout(boolean changed,int r, int b) { { finalchild = getChildAt(i);childRight = child.layout(mPaddingLeft,childBottom); } }", "n_tokens": 49, "n_pass": [226, 26, 21]}
{"time": "2021-02-14 06:13:46.055229", "score": "0.9025", "loss": "0.1049", "code": "void onLayout(boolean changed,int r, int b) { {child = getChildAt(i);childRight = child.layout(mPaddingLeft,childBottom); } }", "n_tokens": 47, "n_pass": [243, 27, 22]}
{"time": "2021-02-14 06:13:49.074419", "score": "0.9183", "loss": "0.0905", "code": "void onLayout(boolean changed,int r, int b) { {child = getChildAt(i);childRight = child(mPaddingLeft,childBottom); } }", "n_tokens": 45, "n_pass": [251, 28, 23]}
{"time": "2021-02-14 06:13:51.705392", "score": "0.8401", "loss": "0.186", "code": "void onLayout(boolean changed,int r, int b) { {child = getChildAt(i);childRight = child(mPaddingLeft); } }", "n_tokens": 43, "n_pass": [253, 29, 24]}
{"time": "2021-02-14 06:13:55.537689", "score": "0.7769", "loss": "0.2594", "code": "void onLayout(boolean changed,int r, int b) { {child = getChildAt(i);childRight =(mPaddingLeft); } }", "n_tokens": 41, "n_pass": [279, 30, 25]}
{"time": "2021-02-14 06:13:59.386965", "score": "0.9685", "loss": "0.1025", "code": "void onLayout(boolean changed,int r, int b) { {child = getChildAt(i);childRight(mPaddingLeft); } }", "n_tokens": 39, "n_pass": [305, 31, 26]}
{"time": "2021-02-14 06:14:06.566660", "score": "0.5504", "loss": "0.6836", "code": "void onLayout(boolean changed,int r, int b) { {child = getChildAt(i);childRight(); } }", "n_tokens": 38, "n_pass": [359, 32, 27]}
{"time": "2021-02-14 06:14:09.187871", "score": "0.5504", "loss": "0.6836", "code": "void onLayout(boolean changed,int r, int b) { {child = getChildAt(i);childRight();} }", "n_tokens": 37, "n_pass": [362, 33, 28]}
{"time": "2021-02-14 06:14:11.800894", "score": "0.5504", "loss": "0.6836", "code": "void onLayout(boolean changed,int r, int b) { {child = getChildAt(i);childRight();}}", "n_tokens": 36, "n_pass": [364, 34, 29]}
{"time": "2021-02-14 06:14:15.220704", "score": "0.5504", "loss": "0.6836", "code": "void onLayout(boolean changed,int r,int b) { {child = getChildAt(i);childRight();}}", "n_tokens": 35, "n_pass": [378, 35, 30]}
{"time": "2021-02-14 06:14:17.850665", "score": "0.5504", "loss": "0.6836", "code": "void onLayout(boolean changed,int r,int b){ {child = getChildAt(i);childRight();}}", "n_tokens": 34, "n_pass": [383, 36, 31]}
{"time": "2021-02-14 06:14:20.467394", "score": "0.5504", "loss": "0.6836", "code": "void onLayout(boolean changed,int r,int b){{child = getChildAt(i);childRight();}}", "n_tokens": 33, "n_pass": [385, 37, 32]}
{"time": "2021-02-14 06:14:23.090621", "score": "0.5504", "loss": "0.6836", "code": "void onLayout(boolean changed,int r,int b){{child= getChildAt(i);childRight();}}", "n_tokens": 32, "n_pass": [388, 38, 33]}
{"time": "2021-02-14 06:14:25.711808", "score": "0.5504", "loss": "0.6836", "code": "void onLayout(boolean changed,int r,int b){{child=getChildAt(i);childRight();}}", "n_tokens": 31, "n_pass": [390, 39, 34]}
{"time": "2021-02-14 06:14:28.380267", "score": "0.4203", "loss": "0.9934", "code": "void onLayout(boolean changed,int r,int b){{child=(i);childRight();}}", "n_tokens": 30, "n_pass": [391, 40, 35]}
{"time": "2021-02-14 06:14:34.457983", "score": "0.2889", "loss": "1.3676", "code": "void onLayout(boolean changed,int r,int b){{child(i);childRight();}}", "n_tokens": 29, "n_pass": [421, 42, 36]}
{"time": "2021-02-14 06:14:40.573621", "score": "0.4877", "loss": "0.7835", "code": "void onLayout(boolean changed,int r,int b){{(i);childRight();}}", "n_tokens": 28, "n_pass": [450, 44, 37]}

Minimal simplified code:
void onLayout(boolean changed,int r,int b){{(i);childRight();}}

