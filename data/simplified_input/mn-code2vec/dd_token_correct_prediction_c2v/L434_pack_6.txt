
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/dronekit__dronekit-android/dependencyLibs/Mavlink/src/com/MAVLink/ardupilotmega/msg_ahrs2_pack.java
method_name = pack
method_body = public MAVLinkPacket pack() { MAVLinkPacket packet = new MAVLinkPacket(MAVLINK_MSG_LENGTH); packet.sysid = 255; packet.compid = 190; packet.msgid = MAVLINK_MSG_ID_AHRS2; packet.payload.putFloat(roll); packet.payload.putFloat(pitch); packet.payload.putFloat(yaw); packet.payload.putFloat(altitude); packet.payload.putInt(lat); packet.payload.putInt(lng); return packet; }
predict, score, loss = pack, 0.9998549222946167, 0.00023755589791107923

Trace of simplified code(s):
{"time": "2021-02-14 19:01:25.377381", "score": "0.9999", "loss": "0.0001", "code": "public MAVLinkPacket pack() { MAVLinkPacket packet = new MAVLinkPacket(MAVLINK_MSG_LENGTH); packet.sysid = 255; packet.compid = 190; packet.msgid = MAVLINK_MSG_ID_AHRS2; packet.payload.putFloat(roll); packet.payload.putFloat(pitch); packet.payload.putFloat(yaw); packet.payload.putFloat(altitude); packet.payload.putInt(lat); packet.payload.putInt(lng); return packet; }", "n_tokens": 132, "n_pass": [1, 1, 1]}
{"time": "2021-02-14 19:01:28.061313", "score": "0.9999", "loss": "0.0001", "code": "public MAVLinkPacket pack() { MAVLinkPacket packet = new MAVLinkPacket(MAVLINK_MSG_LENGTH); packet.sysid =packet.payload.putFloat(roll); packet.payload.putFloat(pitch); packet.payload.putFloat(yaw); packet.payload.putFloat(altitude); packet.payload.putInt(lat); packet.payload.putInt(lng); return packet; }", "n_tokens": 99, "n_pass": [9, 2, 2]}
{"time": "2021-02-14 19:01:30.716984", "score": "1.0", "loss": "0.0", "code": "public MAVLinkPacket pack() { MAVLinkPacket packet = new MAVLinkPacket(MAVLINK_MSG_LENGTH); packet.sysid (pitch); packet.payload.putFloat(yaw); packet.payload.putFloat(altitude); packet.payload.putInt(lat); packet.payload.putInt(lng); return packet; }", "n_tokens": 83, "n_pass": [18, 3, 3]}
{"time": "2021-02-14 19:01:33.366289", "score": "1.0", "loss": "0.0", "code": "public MAVLinkPacket pack() { MAVLinkPacket packet = new MAVLinkPacket(MAVLINK_MSG_LENGTH); packet.sysid (pitch); packet.payload.putFloat(yaw); packet. packet.payload.putInt(lng); return packet; }", "n_tokens": 66, "n_pass": [20, 4, 4]}
{"time": "2021-02-14 19:01:36.019018", "score": "0.9974", "loss": "0.003", "code": "public MAVLinkPacket pack() { MAVLinkPacket packet = (pitch); packet.payload.putFloat(yaw); packet. packet.payload.putInt(lng); return packet; }", "n_tokens": 50, "n_pass": [23, 5, 5]}
{"time": "2021-02-14 19:01:38.679019", "score": "0.9981", "loss": "0.0021", "code": "public MAVLinkPacket pack() { MAVLinkPacket packet =  packet.payload.putInt(lng); return packet; }", "n_tokens": 33, "n_pass": [24, 6, 6]}
{"time": "2021-02-14 19:01:42.133127", "score": "1.0", "loss": "0.0001", "code": "public MAVLinkPacket pack() { MAVLinkPacket packet =  packet.putInt(lng); return packet; }", "n_tokens": 31, "n_pass": [66, 7, 7]}
{"time": "2021-02-14 19:01:44.769657", "score": "1.0", "loss": "0.0", "code": "public MAVLinkPacket pack() { MAVLinkPacket packet =  packet(lng); return packet; }", "n_tokens": 29, "n_pass": [67, 8, 8]}
{"time": "2021-02-14 19:01:47.409245", "score": "1.0", "loss": "0.0", "code": "public MAVLinkPacket pack() { MAVLinkPacket packet =  packet(lng); packet; }", "n_tokens": 27, "n_pass": [70, 9, 9]}
{"time": "2021-02-14 19:01:50.043627", "score": "1.0", "loss": "0.0", "code": "public MAVLinkPacket pack() { MAVLinkPacket packet =  packet(lng);; }", "n_tokens": 25, "n_pass": [71, 10, 10]}
{"time": "2021-02-14 19:01:52.679734", "score": "1.0", "loss": "0.0", "code": "MAVLinkPacket pack() { MAVLinkPacket packet =  packet(lng);; }", "n_tokens": 23, "n_pass": [73, 11, 11]}
{"time": "2021-02-14 19:01:55.702482", "score": "0.9998", "loss": "0.0002", "code": "MAVLinkPacket pack() { packet =  packet(lng);; }", "n_tokens": 21, "n_pass": [78, 12, 12]}
{"time": "2021-02-14 19:01:58.297154", "score": "0.9995", "loss": "0.0011", "code": "MAVLinkPacket pack() { packet = (lng);; }", "n_tokens": 19, "n_pass": [81, 13, 13]}
{"time": "2021-02-14 19:02:01.314136", "score": "0.9999", "loss": "0.0001", "code": "MAVLinkPacket pack() { packet (lng);; }", "n_tokens": 17, "n_pass": [90, 14, 14]}
{"time": "2021-02-14 19:02:04.301725", "score": "0.9953", "loss": "0.0078", "code": "MAVLinkPacket pack() { (lng);; }", "n_tokens": 15, "n_pass": [98, 15, 15]}
{"time": "2021-02-14 19:02:09.183291", "score": "0.9953", "loss": "0.0078", "code": "MAVLinkPacket pack() { (lng); }", "n_tokens": 14, "n_pass": [123, 16, 16]}
{"time": "2021-02-14 19:02:12.930667", "score": "0.9953", "loss": "0.0078", "code": "MAVLinkPacket pack(){ (lng); }", "n_tokens": 13, "n_pass": [131, 17, 17]}
{"time": "2021-02-14 19:02:15.545525", "score": "0.9953", "loss": "0.0078", "code": "MAVLinkPacket pack(){(lng); }", "n_tokens": 12, "n_pass": [133, 18, 18]}
{"time": "2021-02-14 19:02:19.687289", "score": "0.9953", "loss": "0.0078", "code": "MAVLinkPacket pack(){(lng);}", "n_tokens": 11, "n_pass": [147, 19, 19]}

Minimal simplified code:
MAVLinkPacket pack(){(lng);}

