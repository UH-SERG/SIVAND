
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/sakaiproject__sakai/msgcntr/messageforums-hbm/src/java/org/sakaiproject/component/app/messageforums/dao/hibernate/PrivateMessageRecipientImpl_equals.java
method_name = equals
method_body = public boolean equals(Object obj) { if (obj == this) { return true; } if (!(obj instanceof PrivateMessageRecipientImpl)) return false; PrivateMessageRecipientImpl objCast = (PrivateMessageRecipientImpl) obj; return (objCast.userId != null && objCast.userId.equals(this.userId)) && (objCast.typeUuid != null && objCast.typeUuid.equals(this.typeUuid)) && (objCast.contextId != null && objCast.contextId.equals(this.contextId)) && (objCast.read != null && objCast.read.equals(this.read)); }
predict, score, loss = equals, 0.9999959468841553, 5.245195097813848e-06

Trace of simplified code(s):
{"time": "2021-02-14 14:30:47.429333", "score": "1.0", "loss": "0.0", "code": "public boolean equals(Object obj) { if (obj == this) { return true; } if (!(obj instanceof PrivateMessageRecipientImpl)) return false; PrivateMessageRecipientImpl objCast = (PrivateMessageRecipientImpl) obj; return (objCast.userId != null && objCast.userId.equals(this.userId)) && (objCast.typeUuid != null && objCast.typeUuid.equals(this.typeUuid)) && (objCast.contextId != null && objCast.contextId.equals(this.contextId)) && (objCast.read != null && objCast.read.equals(this.read)); }", "n_tokens": 177, "n_pass": [1, 1, 1]}
{"time": "2021-02-14 14:30:50.132578", "score": "1.0", "loss": "0.0", "code": "public boolean equals(Object obj) { if (obj == this) return false; PrivateMessageRecipientImpl objCast = (PrivateMessageRecipientImpl) obj; return (objCast.userId != null && objCast.userId.equals(this.userId)) && (objCast.typeUuid != null && objCast.typeUuid.equals(this.typeUuid)) && (objCast.contextId != null && objCast.contextId.equals(this.contextId)) && (objCast.read != null && objCast.read.equals(this.read)); }", "n_tokens": 155, "n_pass": [21, 2, 2]}
{"time": "2021-02-14 14:30:52.827438", "score": "1.0", "loss": "0.0", "code": "public boolean equals(Object obj) { if (obj == this) return false; PrivateMessageRecipientImpl objCast = (PrivateMessageRecipientImpl) obj; return (objCast.userId != null && objCast.userId.equals(this.userId)) && (objCast.typeUuid != null && objCast.typeUuid&& objCast.contextId.equals(this.contextId)) && (objCast.read != null && objCast.read.equals(this.read)); }", "n_tokens": 133, "n_pass": [25, 3, 3]}
{"time": "2021-02-14 14:30:55.505853", "score": "1.0", "loss": "0.0", "code": "public boolean equals(Object obj) { if (obj == this) return false; PrivateMessageRecipientImpl objCast = (PrivateMessageRecipientImpl) obj; return (objCast.userId != null && objCast.userId.equals(this.userId)) && (objCast.typeUuid != null && objCast.typeUuid != null && objCast.read.equals(this.read)); }", "n_tokens": 111, "n_pass": [26, 4, 4]}
{"time": "2021-02-14 14:30:58.169272", "score": "1.0", "loss": "0.0", "code": "public boolean equals(Object obj) { if (obj == this) return false; PrivateMessageRecipientImpl objCast = (PrivateMessageRecipientImpl) obj; return (objCast.userId != null && objCast.userId.equals(this.userId)) && (objCast.typeUuid != null && objCast.typeUuidread.equals(this.read)); }", "n_tokens": 100, "n_pass": [42, 5, 5]}
{"time": "2021-02-14 14:31:01.249994", "score": "0.9677", "loss": "0.0888", "code": "public boolean equals(Object obj) { if (obj == this) return objCast = (PrivateMessageRecipientImpl) obj; return (objCast.userId != null && objCast.userId.equals(this.userId)) && (objCast.typeUuid != null && objCast.typeUuidread.equals(this.read)); }", "n_tokens": 95, "n_pass": [76, 6, 6]}
{"time": "2021-02-14 14:31:03.900900", "score": "0.5172", "loss": "1.8387", "code": "public boolean equals(Object obj) { if (obj == this) return(PrivateMessageRecipientImpl) obj; return (objCast.userId != null && objCast.userId.equals(this.userId)) && (objCast.typeUuid != null && objCast.typeUuidread.equals(this.read)); }", "n_tokens": 90, "n_pass": [77, 7, 7]}
{"time": "2021-02-14 14:31:06.550178", "score": "0.9655", "loss": "0.095", "code": "public boolean equals(Object obj) { if (obj == this) return; return (objCast.userId != null && objCast.userId.equals(this.userId)) && (objCast.typeUuid != null && objCast.typeUuidread.equals(this.read)); }", "n_tokens": 85, "n_pass": [78, 8, 8]}
{"time": "2021-02-14 14:31:09.204611", "score": "0.9583", "loss": "0.1098", "code": "public boolean equals(Object obj) { if (obj == this) return; return (objCastnull && objCast.userId.equals(this.userId)) && (objCast.typeUuid != null && objCast.typeUuidread.equals(this.read)); }", "n_tokens": 79, "n_pass": [80, 9, 9]}
{"time": "2021-02-14 14:31:11.856323", "score": "0.9927", "loss": "0.0133", "code": "public boolean equals(Object obj) { if (obj == this) return; return (objCast.userId.equals(this.userId)) && (objCast.typeUuid != null && objCast.typeUuidread.equals(this.read)); }", "n_tokens": 73, "n_pass": [81, 10, 10]}
{"time": "2021-02-14 14:31:14.506678", "score": "0.9761", "loss": "0.0732", "code": "public boolean equals(Object obj) { if (obj == this) return; return (objCast.userId.equals(this.userId)) && (objCast.typeUuid&& objCast.typeUuidread.equals(this.read)); }", "n_tokens": 67, "n_pass": [85, 11, 11]}
{"time": "2021-02-14 14:31:17.147161", "score": "0.9959", "loss": "0.0058", "code": "public boolean equals(Object obj) { if (obj == this) return; return (objCast.userId.equals(this.userId)) && (objCast.typeUuidread.equals(this.read)); }", "n_tokens": 61, "n_pass": [86, 12, 12]}
{"time": "2021-02-14 14:31:22.477257", "score": "0.9959", "loss": "0.0058", "code": "boolean equals(Object obj) { if (obj == this) return; return (objCast.userId.equals(this.userId)) && (objCast.typeUuidread.equals(this.read)); }", "n_tokens": 59, "n_pass": [124, 14, 13]}
{"time": "2021-02-14 14:31:25.535152", "score": "0.9938", "loss": "0.0132", "code": "boolean equals(Object obj) { if (obj == this) return (objCast.userId.equals(this.userId)) && (objCast.typeUuidread.equals(this.read)); }", "n_tokens": 56, "n_pass": [134, 15, 14]}
{"time": "2021-02-14 14:31:28.177374", "score": "0.9438", "loss": "0.1157", "code": "boolean equals(Object obj) { if (obj == this) return (objCastequals(this.userId)) && (objCast.typeUuidread.equals(this.read)); }", "n_tokens": 53, "n_pass": [136, 16, 15]}
{"time": "2021-02-14 14:31:30.848978", "score": "0.918", "loss": "0.2481", "code": "boolean equals(Object obj) { if (obj == this) return (objCastequals(this.userId)) && (read.equals(this.read)); }", "n_tokens": 50, "n_pass": [141, 17, 16]}
{"time": "2021-02-14 14:31:33.499467", "score": "0.9062", "loss": "0.1898", "code": "boolean equals(Object obj) { if (obj == this) return (objCastequals(this.userId)) && ((this.read)); }", "n_tokens": 47, "n_pass": [142, 18, 17]}
{"time": "2021-02-14 14:31:39.217384", "score": "0.9062", "loss": "0.1898", "code": "boolean equals(Object obj) { if (obj == this) return (objCastequals(this.userId)) &((this.read)); }", "n_tokens": 45, "n_pass": [194, 19, 18]}
{"time": "2021-02-14 14:31:41.845090", "score": "0.9187", "loss": "0.1502", "code": "boolean equals(Object obj) { if (obj == this) return (objCastequals(this.userId)) &((read)); }", "n_tokens": 43, "n_pass": [196, 20, 19]}
{"time": "2021-02-14 14:31:45.319847", "score": "0.9187", "loss": "0.1502", "code": "boolean equals(Object obj){ if (obj == this) return (objCastequals(this.userId)) &((read)); }", "n_tokens": 42, "n_pass": [208, 21, 20]}
{"time": "2021-02-14 14:31:47.969525", "score": "0.9187", "loss": "0.1502", "code": "boolean equals(Object obj){if (obj == this) return (objCastequals(this.userId)) &((read)); }", "n_tokens": 41, "n_pass": [210, 22, 21]}
{"time": "2021-02-14 14:31:50.601710", "score": "0.9187", "loss": "0.1502", "code": "boolean equals(Object obj){if(obj == this) return (objCastequals(this.userId)) &((read)); }", "n_tokens": 40, "n_pass": [212, 23, 22]}
{"time": "2021-02-14 14:31:53.237016", "score": "0.9187", "loss": "0.1502", "code": "boolean equals(Object obj){if(obj== this) return (objCastequals(this.userId)) &((read)); }", "n_tokens": 39, "n_pass": [215, 24, 23]}
{"time": "2021-02-14 14:31:55.898501", "score": "0.6835", "loss": "0.4499", "code": "boolean equals(Object obj){if(obj= this) return (objCastequals(this.userId)) &((read)); }", "n_tokens": 38, "n_pass": [216, 25, 24]}
{"time": "2021-02-14 14:31:58.526476", "score": "0.6835", "loss": "0.4499", "code": "boolean equals(Object obj){if(obj=this) return (objCastequals(this.userId)) &((read)); }", "n_tokens": 37, "n_pass": [218, 26, 25]}
{"time": "2021-02-14 14:32:01.551973", "score": "0.7268", "loss": "0.3801", "code": "boolean equals(Object obj){if(obj=this) return ((this.userId)) &((read)); }", "n_tokens": 35, "n_pass": [223, 27, 26]}
{"time": "2021-02-14 14:32:04.195368", "score": "0.7358", "loss": "0.3367", "code": "boolean equals(Object obj){if(obj=this) return ((this)) &((read)); }", "n_tokens": 33, "n_pass": [225, 28, 27]}
{"time": "2021-02-14 14:32:07.622296", "score": "0.6574", "loss": "0.5559", "code": "boolean equals(Object obj){if(objthis) return ((this)) &((read)); }", "n_tokens": 32, "n_pass": [244, 29, 28]}
{"time": "2021-02-14 14:32:10.228620", "score": "0.832", "loss": "0.2167", "code": "boolean equals(Object obj){if(obj) return ((this)) &((read)); }", "n_tokens": 31, "n_pass": [245, 30, 29]}
{"time": "2021-02-14 14:32:15.953283", "score": "0.832", "loss": "0.2167", "code": "boolean equals(Object obj){if(obj) return ((this))&((read)); }", "n_tokens": 30, "n_pass": [291, 31, 30]}
{"time": "2021-02-14 14:32:18.571645", "score": "0.832", "loss": "0.2167", "code": "boolean equals(Object obj){if(obj) return ((this))&((read));}", "n_tokens": 29, "n_pass": [298, 32, 31]}
{"time": "2021-02-14 14:32:21.989260", "score": "0.832", "loss": "0.2167", "code": "boolean equals(Object obj){if(obj)return ((this))&((read));}", "n_tokens": 28, "n_pass": [313, 33, 32]}
{"time": "2021-02-14 14:32:25.034737", "score": "0.832", "loss": "0.2167", "code": "boolean equals(Object obj){if(obj)return((this))&((read));}", "n_tokens": 27, "n_pass": [315, 34, 33]}

Minimal simplified code:
boolean equals(Object obj){if(obj)return((this))&((read));}

