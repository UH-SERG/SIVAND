
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/codefollower__Tomcat-Research/java/org/apache/catalina/users/MemoryUserDatabase_removeRole.java
method_name = removeRole
method_body = @Override public void removeRole(Role role) { synchronized (roles) { Iterator<Group> groups = getGroups(); while (groups.hasNext()) { Group group = groups.next(); group.removeRole(role); } Iterator<User> users = getUsers(); while (users.hasNext()) { User user = users.next(); user.removeRole(role); } roles.remove(role.getRolename()); } }
predict, score, loss = removeRole, 0.9872058629989624, 0.01818484626710415

Trace of simplified code(s):
{"time": "2021-02-16 00:08:47.228865", "score": "0.9846", "loss": "0.0208", "code": "@Override public void removeRole(Role role) { synchronized (roles) { Iterator<Group> groups = getGroups(); while (groups.hasNext()) { Group group = groups.next(); group.removeRole(role); } Iterator<User> users = getUsers(); while (users.hasNext()) { User user = users.next(); user.removeRole(role); } roles.remove(role.getRolename()); } }", "n_tokens": 137, "n_pass": [1, 1, 1]}
{"time": "2021-02-16 00:08:49.804819", "score": "0.9749", "loss": "0.0351", "code": "@Override public void removeRole(Role role) { synchronized (roles) {  getGroups(); while (groups.hasNext()) { Group group = groups.next(); group.removeRole(role); } Iterator<User> users = getUsers(); while (users.hasNext()) { User user = users.next(); user.removeRole(role); } roles.remove(role.getRolename()); } }", "n_tokens": 129, "n_pass": [47, 2, 2]}
{"time": "2021-02-16 00:08:52.357057", "score": "0.9632", "loss": "0.0501", "code": "@Override public void removeRole(Role role) { synchronized (roles) {  getGroups(); while (groups.hasNext()) { Group group = removeRole(role); } Iterator<User> users = getUsers(); while (users.hasNext()) { User user = users.next(); user.removeRole(role); } roles.remove(role.getRolename()); } }", "n_tokens": 120, "n_pass": [51, 3, 3]}
{"time": "2021-02-16 00:08:54.933904", "score": "0.9728", "loss": "0.0369", "code": "@Override public void removeRole(Role role) { synchronized (roles) {  getGroups(); while (groups.hasNext()) { Group group = removeRole(role); } Iterator(); while (users.hasNext()) { User user = users.next(); user.removeRole(role); } roles.remove(role.getRolename()); } }", "n_tokens": 111, "n_pass": [53, 4, 4]}
{"time": "2021-02-16 00:08:57.509098", "score": "0.9706", "loss": "0.0397", "code": "@Override public void removeRole(Role role) { synchronized (roles) {  getGroups(); while (groups.hasNext()) { Group group = removeRole(role); } Iterator(); while (users.hasNext()) { User ; user.removeRole(role); } roles.remove(role.getRolename()); } }", "n_tokens": 102, "n_pass": [56, 5, 5]}
{"time": "2021-02-16 00:09:00.054591", "score": "0.9714", "loss": "0.0385", "code": "@Override public void removeRole(Role role) { synchronized (roles) {  getGroups(); while (groups.hasNext()) { Group group = removeRole(role); } Iterator(); while (users.hasNext()) {user.removeRole(role); } roles.remove(role.getRolename()); } }", "n_tokens": 97, "n_pass": [93, 6, 6]}
{"time": "2021-02-16 00:09:02.610506", "score": "0.9759", "loss": "0.0322", "code": " void removeRole(Role role) { synchronized (roles) {  getGroups(); while (groups.hasNext()) { Group group = removeRole(role); } Iterator(); while (users.hasNext()) {user.removeRole(role); } roles.remove(role.getRolename()); } }", "n_tokens": 93, "n_pass": [99, 7, 7]}
{"time": "2021-02-16 00:09:05.205820", "score": "0.9913", "loss": "0.0116", "code": " void removeRole(Role role) { synchronized (roles) { ; while (groups.hasNext()) { Group group = removeRole(role); } Iterator(); while (users.hasNext()) {user.removeRole(role); } roles.remove(role.getRolename()); } }", "n_tokens": 89, "n_pass": [105, 8, 8]}
{"time": "2021-02-16 00:09:07.793208", "score": "0.9914", "loss": "0.0111", "code": " void removeRole(Role role) { synchronized (roles) { ; while (groups.hasNext()) { Group group = removeRole(role); }  while (users.hasNext()) {user.removeRole(role); } roles.remove(role.getRolename()); } }", "n_tokens": 85, "n_pass": [113, 9, 9]}
{"time": "2021-02-16 00:09:11.376661", "score": "0.9939", "loss": "0.0081", "code": " void removeRole(Role role) { synchronized (roles) { ; while (groups.hasNext()) { Group group = removeRole(role); }  while (hasNext()) {user.removeRole(role); } roles.remove(role.getRolename()); } }", "n_tokens": 83, "n_pass": [176, 10, 10]}
{"time": "2021-02-16 00:09:13.954322", "score": "0.9947", "loss": "0.0079", "code": " void removeRole(Role role) { synchronized (roles) { ; while (groups.hasNext()) { Group group = removeRole(role); }  while (hasNext()) {removeRole(role); } roles.remove(role.getRolename()); } }", "n_tokens": 81, "n_pass": [179, 11, 11]}
{"time": "2021-02-16 00:09:16.499180", "score": "0.9908", "loss": "0.0143", "code": " void removeRole(Role role) { synchronized (roles) { ; while (groups.hasNext()) { Group group = removeRole(role); }  while (hasNext()) {removeRole(role); } (role.getRolename()); } }", "n_tokens": 78, "n_pass": [184, 12, 12]}
{"time": "2021-02-16 00:09:19.445339", "score": "0.9908", "loss": "0.0143", "code": " void removeRole(Role role) { synchronized (roles) { while (groups.hasNext()) { Group group = removeRole(role); }  while (hasNext()) {removeRole(role); } (role.getRolename()); } }", "n_tokens": 76, "n_pass": [199, 13, 13]}
{"time": "2021-02-16 00:09:22.001977", "score": "0.8528", "loss": "0.1853", "code": " void removeRole(Role role) { synchronized (roles) { while (groups()) { Group group = removeRole(role); }  while (hasNext()) {removeRole(role); } (role.getRolename()); } }", "n_tokens": 74, "n_pass": [202, 14, 14]}
{"time": "2021-02-16 00:09:24.596887", "score": "0.9437", "loss": "0.0721", "code": " void removeRole(Role role) { synchronized (roles) { while (groups) { Group group = removeRole(role); }  while (hasNext()) {removeRole(role); } (role.getRolename()); } }", "n_tokens": 72, "n_pass": [203, 15, 15]}
{"time": "2021-02-16 00:09:27.167629", "score": "0.9596", "loss": "0.0478", "code": " void removeRole(Role role) { synchronized (roles) { while (groups) { group = removeRole(role); }  while (hasNext()) {removeRole(role); } (role.getRolename()); } }", "n_tokens": 70, "n_pass": [206, 16, 16]}
{"time": "2021-02-16 00:09:37.419942", "score": "0.9596", "loss": "0.0478", "code": " void removeRole(Role role) { synchronized (roles) { while (groups) { group= removeRole(role); }  while (hasNext()) {removeRole(role); } (role.getRolename()); } }", "n_tokens": 69, "n_pass": [307, 17, 17]}
{"time": "2021-02-16 00:09:39.992545", "score": "0.9596", "loss": "0.0478", "code": " void removeRole(Role role) { synchronized (roles) { while (groups) { group=removeRole(role); }  while (hasNext()) {removeRole(role); } (role.getRolename()); } }", "n_tokens": 68, "n_pass": [309, 18, 18]}
{"time": "2021-02-16 00:09:42.525675", "score": "0.9231", "loss": "0.0928", "code": " void removeRole(Role role) { synchronized (roles) { while (groups) { group=(role); }  while (hasNext()) {removeRole(role); } (role.getRolename()); } }", "n_tokens": 67, "n_pass": [310, 19, 19]}
{"time": "2021-02-16 00:09:45.131071", "score": "0.9231", "loss": "0.0928", "code": " void removeRole(Role role) { synchronized (roles) { while (groups) { group=(role);}  while (hasNext()) {removeRole(role); } (role.getRolename()); } }", "n_tokens": 66, "n_pass": [315, 20, 20]}
{"time": "2021-02-16 00:09:47.678982", "score": "0.9231", "loss": "0.0928", "code": " void removeRole(Role role) { synchronized (roles) { while (groups) { group=(role);} while (hasNext()) {removeRole(role); } (role.getRolename()); } }", "n_tokens": 65, "n_pass": [317, 21, 21]}
{"time": "2021-02-16 00:09:50.240814", "score": "0.9231", "loss": "0.0928", "code": " void removeRole(Role role) { synchronized (roles) { while (groups) { group=(role);}while (hasNext()) {removeRole(role); } (role.getRolename()); } }", "n_tokens": 64, "n_pass": [318, 22, 22]}
{"time": "2021-02-16 00:09:52.824141", "score": "0.9231", "loss": "0.0928", "code": " void removeRole(Role role) { synchronized (roles) { while (groups) { group=(role);}while(hasNext()) {removeRole(role); } (role.getRolename()); } }", "n_tokens": 63, "n_pass": [320, 23, 23]}
{"time": "2021-02-16 00:09:55.441909", "score": "0.9231", "loss": "0.0928", "code": " void removeRole(Role role) { synchronized (roles) { while (groups) { group=(role);}while(hasNext()){removeRole(role); } (role.getRolename()); } }", "n_tokens": 62, "n_pass": [326, 24, 24]}
{"time": "2021-02-16 00:10:00.593917", "score": "0.6297", "loss": "0.4947", "code": " void removeRole(Role role) { synchronized (roles) { while (groups) { group=(role);}while(hasNext()){removeRole(); } (role.getRolename()); } }", "n_tokens": 61, "n_pass": [330, 26, 25]}
{"time": "2021-02-16 00:10:03.135550", "score": "0.6297", "loss": "0.4947", "code": " void removeRole(Role role) { synchronized (roles) { while (groups) { group=(role);}while(hasNext()){removeRole();} (role.getRolename()); } }", "n_tokens": 60, "n_pass": [333, 27, 26]}
{"time": "2021-02-16 00:10:05.697442", "score": "0.6297", "loss": "0.4947", "code": " void removeRole(Role role) { synchronized (roles) { while (groups) { group=(role);}while(hasNext()){removeRole();}(role.getRolename()); } }", "n_tokens": 59, "n_pass": [335, 28, 27]}
{"time": "2021-02-16 00:10:08.269082", "score": "0.7173", "loss": "0.3568", "code": " void removeRole(Role role) { synchronized (roles) { while (groups) { group=(role);}while(hasNext()){removeRole();}(rolegetRolename()); } }", "n_tokens": 58, "n_pass": [338, 29, 28]}
{"time": "2021-02-16 00:10:10.805985", "score": "0.6957", "loss": "0.3887", "code": " void removeRole(Role role) { synchronized (roles) { while (groups) { group=(role);}while(hasNext()){removeRole();}(role()); } }", "n_tokens": 57, "n_pass": [339, 30, 29]}
{"time": "2021-02-16 00:10:13.351976", "score": "0.6834", "loss": "0.4077", "code": " void removeRole(Role role) { synchronized (roles) { while (groups) { group=(role);}while(hasNext()){removeRole();}(role); } }", "n_tokens": 55, "n_pass": [340, 31, 30]}
{"time": "2021-02-16 00:10:15.917453", "score": "0.6834", "loss": "0.4077", "code": "void removeRole(Role role) { synchronized (roles) { while (groups) { group=(role);}while(hasNext()){removeRole();}(role); } }", "n_tokens": 54, "n_pass": [344, 32, 31]}
{"time": "2021-02-16 00:10:19.162631", "score": "0.6834", "loss": "0.4077", "code": "void removeRole(Role role){ synchronized (roles) { while (groups) { group=(role);}while(hasNext()){removeRole();}(role); } }", "n_tokens": 53, "n_pass": [353, 33, 32]}
{"time": "2021-02-16 00:10:21.746387", "score": "0.6834", "loss": "0.4077", "code": "void removeRole(Role role){synchronized (roles) { while (groups) { group=(role);}while(hasNext()){removeRole();}(role); } }", "n_tokens": 52, "n_pass": [355, 34, 33]}
{"time": "2021-02-16 00:10:24.299728", "score": "0.6834", "loss": "0.4077", "code": "void removeRole(Role role){synchronized(roles) { while (groups) { group=(role);}while(hasNext()){removeRole();}(role); } }", "n_tokens": 51, "n_pass": [357, 35, 34]}
{"time": "2021-02-16 00:10:26.856953", "score": "0.6834", "loss": "0.4077", "code": "void removeRole(Role role){synchronized(roles){ while (groups) { group=(role);}while(hasNext()){removeRole();}(role); } }", "n_tokens": 50, "n_pass": [361, 36, 35]}
{"time": "2021-02-16 00:10:29.426408", "score": "0.6834", "loss": "0.4077", "code": "void removeRole(Role role){synchronized(roles){while (groups) { group=(role);}while(hasNext()){removeRole();}(role); } }", "n_tokens": 49, "n_pass": [363, 37, 36]}
{"time": "2021-02-16 00:10:31.980909", "score": "0.6834", "loss": "0.4077", "code": "void removeRole(Role role){synchronized(roles){while(groups) { group=(role);}while(hasNext()){removeRole();}(role); } }", "n_tokens": 48, "n_pass": [365, 38, 37]}
{"time": "2021-02-16 00:10:34.574507", "score": "0.6834", "loss": "0.4077", "code": "void removeRole(Role role){synchronized(roles){while(groups){ group=(role);}while(hasNext()){removeRole();}(role); } }", "n_tokens": 47, "n_pass": [369, 39, 38]}
{"time": "2021-02-16 00:10:37.175571", "score": "0.6834", "loss": "0.4077", "code": "void removeRole(Role role){synchronized(roles){while(groups){group=(role);}while(hasNext()){removeRole();}(role); } }", "n_tokens": 46, "n_pass": [371, 40, 39]}
{"time": "2021-02-16 00:10:39.757864", "score": "0.3768", "loss": "1.027", "code": "void removeRole(Role role){synchronized(roles){while(groups){group(role);}while(hasNext()){removeRole();}(role); } }", "n_tokens": 45, "n_pass": [373, 41, 40]}
{"time": "2021-02-16 00:10:42.317640", "score": "0.5773", "loss": "0.6502", "code": "void removeRole(Role role){synchronized(roles){while(groups){group();}while(hasNext()){removeRole();}(role); } }", "n_tokens": 44, "n_pass": [375, 42, 41]}
{"time": "2021-02-16 00:10:46.626681", "score": "0.5773", "loss": "0.6502", "code": "void removeRole(Role role){synchronized(roles){while(groups){group();}while(hasNext()){removeRole();}(role);} }", "n_tokens": 43, "n_pass": [425, 43, 42]}
{"time": "2021-02-16 00:10:49.233519", "score": "0.5773", "loss": "0.6502", "code": "void removeRole(Role role){synchronized(roles){while(groups){group();}while(hasNext()){removeRole();}(role);}}", "n_tokens": 42, "n_pass": [426, 44, 43]}

Minimal simplified code:
void removeRole(Role role){synchronized(roles){while(groups){group();}while(hasNext()){removeRole();}(role);}}

