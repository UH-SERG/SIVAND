
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/SummerRC__BiLiBiLi/OneXListviewLibrary/src/com/huewu/pla/lib/internal/PLA_HeaderViewListAdapter_getItemViewType.java
method_name = getItemViewType
method_body = public int getItemViewType(int position) { int numHeaders = getHeadersCount(); if (mAdapter != null && position >= numHeaders) { int adjPosition = position - numHeaders; int adapterCount = mAdapter.getCount(); if (adjPosition < adapterCount) { return mAdapter.getItemViewType(adjPosition); } } return PLA_AdapterView.ITEM_VIEW_TYPE_HEADER_OR_FOOTER; }
predict, score, loss = getItemViewType, 0.9995182752609253, 0.0004961451631970704

Trace of simplified code(s):
{"time": "2021-02-14 15:55:23.952615", "score": "0.9995", "loss": "0.0005", "code": "public int getItemViewType(int position) { int numHeaders = getHeadersCount(); if (mAdapter != null && position >= numHeaders) { int adjPosition = position - numHeaders; int adapterCount = mAdapter.getCount(); if (adjPosition < adapterCount) { return mAdapter.getItemViewType(adjPosition); } } return PLA_AdapterView.ITEM_VIEW_TYPE_HEADER_OR_FOOTER; }", "n_tokens": 119, "n_pass": [1, 1, 1]}
{"time": "2021-02-14 15:55:26.641271", "score": "0.9995", "loss": "0.0005", "code": "public int getItemViewType(int position) { int numHeaders = getHeadersCount(); if (mAdapter& position >= numHeaders) { int adjPosition = position - numHeaders; int adapterCount = mAdapter.getCount(); if (adjPosition < adapterCount) { return mAdapter.getItemViewType(adjPosition); } } return PLA_AdapterView.ITEM_VIEW_TYPE_HEADER_OR_FOOTER; }", "n_tokens": 112, "n_pass": [48, 2, 2]}
{"time": "2021-02-14 15:55:29.311896", "score": "0.9995", "loss": "0.0005", "code": "public int getItemViewType(int position) { int numHeaders = getHeadersCount(); if (mAdapternumHeaders) { int adjPosition = position - numHeaders; int adapterCount = mAdapter.getCount(); if (adjPosition < adapterCount) { return mAdapter.getItemViewType(adjPosition); } } return PLA_AdapterView.ITEM_VIEW_TYPE_HEADER_OR_FOOTER; }", "n_tokens": 105, "n_pass": [49, 3, 3]}
{"time": "2021-02-14 15:55:31.980663", "score": "0.9995", "loss": "0.0005", "code": "public int getItemViewType(int position) { int numHeaders = getHeadersCount(); if (mAdapternumHeaders) { int  numHeaders; int adapterCount = mAdapter.getCount(); if (adjPosition < adapterCount) { return mAdapter.getItemViewType(adjPosition); } } return PLA_AdapterView.ITEM_VIEW_TYPE_HEADER_OR_FOOTER; }", "n_tokens": 98, "n_pass": [51, 4, 4]}
{"time": "2021-02-14 15:55:34.635376", "score": "0.9996", "loss": "0.0005", "code": "public int getItemViewType(int position) { int numHeaders = getHeadersCount(); if (mAdapternumHeaders) { int  numHeaders; int adapterCount; if (adjPosition < adapterCount) { return mAdapter.getItemViewType(adjPosition); } } return PLA_AdapterView.ITEM_VIEW_TYPE_HEADER_OR_FOOTER; }", "n_tokens": 90, "n_pass": [53, 5, 5]}
{"time": "2021-02-14 15:55:37.295957", "score": "0.9929", "loss": "0.0071", "code": "public int getItemViewType(int position) { int numHeaders = getHeadersCount(); if (mAdapternumHeaders) { int  numHeaders; int adapterCount; if (adjPosition < adapterCount) { return mAdapter.getItemViewType(adjPosition); } } return PLA_HEADER_OR_FOOTER; }", "n_tokens": 82, "n_pass": [58, 6, 6]}
{"time": "2021-02-14 15:55:39.963293", "score": "0.9929", "loss": "0.0071", "code": "public int getItemViewType(int position) { int numHeaders = getHeadersCount(); if (mAdapternumHeaders) { int  numHeaders; int adapterCount; if (adjPosition < adapterCount) { return mAdapter.getItemViewType(adjPosition); } } return PLA_FOOTER; }", "n_tokens": 78, "n_pass": [92, 7, 7]}
{"time": "2021-02-14 15:55:43.044305", "score": "0.9926", "loss": "0.0075", "code": "public int getItemViewType() { int numHeaders = getHeadersCount(); if (mAdapternumHeaders) { int  numHeaders; int adapterCount; if (adjPosition < adapterCount) { return mAdapter.getItemViewType(adjPosition); } } return PLA_FOOTER; }", "n_tokens": 75, "n_pass": [95, 8, 8]}
{"time": "2021-02-14 15:55:45.712563", "score": "0.9914", "loss": "0.0087", "code": "public int getItemViewType() {numHeaders = getHeadersCount(); if (mAdapternumHeaders) { int  numHeaders; int adapterCount; if (adjPosition < adapterCount) { return mAdapter.getItemViewType(adjPosition); } } return PLA_FOOTER; }", "n_tokens": 72, "n_pass": [97, 9, 9]}
{"time": "2021-02-14 15:55:48.366419", "score": "0.9913", "loss": "0.0088", "code": "public int getItemViewType() { getHeadersCount(); if (mAdapternumHeaders) { int  numHeaders; int adapterCount; if (adjPosition < adapterCount) { return mAdapter.getItemViewType(adjPosition); } } return PLA_FOOTER; }", "n_tokens": 69, "n_pass": [98, 10, 10]}
{"time": "2021-02-14 15:55:51.015626", "score": "0.993", "loss": "0.0071", "code": "public int getItemViewType() {; if (mAdapternumHeaders) { int  numHeaders; int adapterCount; if (adjPosition < adapterCount) { return mAdapter.getItemViewType(adjPosition); } } return PLA_FOOTER; }", "n_tokens": 65, "n_pass": [99, 11, 11]}
{"time": "2021-02-14 15:55:53.660827", "score": "0.9927", "loss": "0.0074", "code": "public int getItemViewType() {; if (mAdapternumHeaders) { int  numHeaders;; if (adjPosition < adapterCount) { return mAdapter.getItemViewType(adjPosition); } } return PLA_FOOTER; }", "n_tokens": 61, "n_pass": [104, 12, 12]}
{"time": "2021-02-14 15:55:56.328953", "score": "0.992", "loss": "0.0081", "code": "public int getItemViewType() {; if (mAdapternumHeaders) { int  numHeaders;; if (adjPosition < adapterCount) { return mAdapter.getItemViewType(adjPosition); } } FOOTER; }", "n_tokens": 57, "n_pass": [112, 13, 13]}
{"time": "2021-02-14 15:56:01.265299", "score": "0.9913", "loss": "0.0088", "code": "public int getItemViewType() {; if (mAdapternumHeaders) { int  numHeaders;; if (adjPosition < adapterCount) { return mAdapter.getItemViewType(adjPosition); } }  }", "n_tokens": 55, "n_pass": [158, 14, 14]}
{"time": "2021-02-14 15:56:03.901816", "score": "0.9913", "loss": "0.0088", "code": " int getItemViewType() {; if (mAdapternumHeaders) { int  numHeaders;; if (adjPosition < adapterCount) { return mAdapter.getItemViewType(adjPosition); } }  }", "n_tokens": 54, "n_pass": [159, 15, 15]}
{"time": "2021-02-14 15:56:06.529954", "score": "0.9913", "loss": "0.0088", "code": "int getItemViewType() {; if (mAdapternumHeaders) { int  numHeaders;; if (adjPosition < adapterCount) { return mAdapter.getItemViewType(adjPosition); } }  }", "n_tokens": 53, "n_pass": [160, 16, 16]}
{"time": "2021-02-14 15:56:09.561754", "score": "0.9913", "loss": "0.0088", "code": "int getItemViewType() {if (mAdapternumHeaders) { int  numHeaders;; if (adjPosition < adapterCount) { return mAdapter.getItemViewType(adjPosition); } }  }", "n_tokens": 51, "n_pass": [165, 17, 17]}
{"time": "2021-02-14 15:56:12.200071", "score": "0.9908", "loss": "0.0093", "code": "int getItemViewType() {if (mAdapternumHeaders) {  numHeaders;; if (adjPosition < adapterCount) { return mAdapter.getItemViewType(adjPosition); } }  }", "n_tokens": 49, "n_pass": [170, 18, 18]}
{"time": "2021-02-14 15:56:14.838252", "score": "0.9908", "loss": "0.0093", "code": "int getItemViewType() {if (mAdapternumHeaders) {numHeaders;; if (adjPosition < adapterCount) { return mAdapter.getItemViewType(adjPosition); } }  }", "n_tokens": 47, "n_pass": [171, 19, 19]}
{"time": "2021-02-14 15:56:17.462571", "score": "0.9907", "loss": "0.0094", "code": "int getItemViewType() {if (mAdapternumHeaders) {; if (adjPosition < adapterCount) { return mAdapter.getItemViewType(adjPosition); } }  }", "n_tokens": 45, "n_pass": [172, 20, 20]}
{"time": "2021-02-14 15:56:20.073462", "score": "0.9907", "loss": "0.0094", "code": "int getItemViewType() {if (mAdapternumHeaders) {if (adjPosition < adapterCount) { return mAdapter.getItemViewType(adjPosition); } }  }", "n_tokens": 43, "n_pass": [173, 21, 21]}
{"time": "2021-02-14 15:56:25.328243", "score": "0.6715", "loss": "0.4009", "code": "int getItemViewType() {if (mAdapternumHeaders) {if (adjPosition < adapterCount) { return getItemViewType(adjPosition); } }  }", "n_tokens": 41, "n_pass": [181, 23, 22]}
{"time": "2021-02-14 15:56:39.251060", "score": "0.924", "loss": "0.0796", "code": "int getItemViewType() {if (mAdapternumHeaders) {if (adjPosition < adapterCount) { return getItemViewType(); } }  }", "n_tokens": 40, "n_pass": [245, 26, 23]}
{"time": "2021-02-14 15:56:41.878445", "score": "0.924", "loss": "0.0796", "code": "int getItemViewType() {if (mAdapternumHeaders) {if (adjPosition < adapterCount) { return getItemViewType();} }  }", "n_tokens": 39, "n_pass": [247, 27, 24]}
{"time": "2021-02-14 15:56:44.501170", "score": "0.924", "loss": "0.0796", "code": "int getItemViewType() {if (mAdapternumHeaders) {if (adjPosition < adapterCount) { return getItemViewType();}}  }", "n_tokens": 38, "n_pass": [249, 28, 25]}
{"time": "2021-02-14 15:56:47.153683", "score": "0.924", "loss": "0.0796", "code": "int getItemViewType() {if (mAdapternumHeaders) {if (adjPosition < adapterCount) { return getItemViewType();}} }", "n_tokens": 37, "n_pass": [251, 29, 26]}
{"time": "2021-02-14 15:56:49.806739", "score": "0.924", "loss": "0.0796", "code": "int getItemViewType() {if (mAdapternumHeaders) {if (adjPosition < adapterCount) { return getItemViewType();}}}", "n_tokens": 36, "n_pass": [252, 30, 27]}
{"time": "2021-02-14 15:56:53.221004", "score": "0.924", "loss": "0.0796", "code": "int getItemViewType(){if (mAdapternumHeaders) {if (adjPosition < adapterCount) { return getItemViewType();}}}", "n_tokens": 35, "n_pass": [259, 31, 28]}
{"time": "2021-02-14 15:56:55.851508", "score": "0.924", "loss": "0.0796", "code": "int getItemViewType(){if(mAdapternumHeaders) {if (adjPosition < adapterCount) { return getItemViewType();}}}", "n_tokens": 34, "n_pass": [262, 32, 29]}
{"time": "2021-02-14 15:56:58.467039", "score": "0.9446", "loss": "0.0573", "code": "int getItemViewType(){if(numHeaders) {if (adjPosition < adapterCount) { return getItemViewType();}}}", "n_tokens": 33, "n_pass": [264, 33, 30]}
{"time": "2021-02-14 15:57:01.100566", "score": "0.9446", "loss": "0.0573", "code": "int getItemViewType(){if(numHeaders){if (adjPosition < adapterCount) { return getItemViewType();}}}", "n_tokens": 32, "n_pass": [267, 34, 31]}
{"time": "2021-02-14 15:57:03.715357", "score": "0.9446", "loss": "0.0573", "code": "int getItemViewType(){if(numHeaders){if(adjPosition < adapterCount) { return getItemViewType();}}}", "n_tokens": 31, "n_pass": [270, 35, 32]}
{"time": "2021-02-14 15:57:06.337375", "score": "0.9446", "loss": "0.0573", "code": "int getItemViewType(){if(numHeaders){if(adjPosition< adapterCount) { return getItemViewType();}}}", "n_tokens": 30, "n_pass": [273, 36, 33]}
{"time": "2021-02-14 15:57:08.989690", "score": "0.9446", "loss": "0.0573", "code": "int getItemViewType(){if(numHeaders){if(adjPosition<adapterCount) { return getItemViewType();}}}", "n_tokens": 29, "n_pass": [275, 37, 34]}
{"time": "2021-02-14 15:57:11.605141", "score": "0.9446", "loss": "0.0573", "code": "int getItemViewType(){if(numHeaders){if(adjPosition<adapterCount){ return getItemViewType();}}}", "n_tokens": 28, "n_pass": [278, 38, 35]}
{"time": "2021-02-14 15:57:14.217044", "score": "0.9446", "loss": "0.0573", "code": "int getItemViewType(){if(numHeaders){if(adjPosition<adapterCount){return getItemViewType();}}}", "n_tokens": 27, "n_pass": [280, 39, 36]}
{"time": "2021-02-14 15:57:16.858814", "score": "0.5065", "loss": "0.8099", "code": "int getItemViewType(){if(numHeaders){if(adjPosition<adapterCount){ getItemViewType();}}}", "n_tokens": 26, "n_pass": [281, 40, 37]}
{"time": "2021-02-14 15:57:19.472477", "score": "0.5065", "loss": "0.8099", "code": "int getItemViewType(){if(numHeaders){if(adjPosition<adapterCount){getItemViewType();}}}", "n_tokens": 25, "n_pass": [282, 41, 38]}
{"time": "2021-02-14 15:57:22.906965", "score": "0.9833", "loss": "0.0216", "code": "int getItemViewType(){if(numHeaders){if(adjPositionadapterCount){getItemViewType();}}}", "n_tokens": 24, "n_pass": [304, 42, 39]}
{"time": "2021-02-14 15:57:25.516533", "score": "0.9863", "loss": "0.0139", "code": "int getItemViewType(){if(numHeaders){if(adjPosition){getItemViewType();}}}", "n_tokens": 23, "n_pass": [305, 43, 40]}

Minimal simplified code:
int getItemViewType(){if(numHeaders){if(adjPosition){getItemViewType();}}}

