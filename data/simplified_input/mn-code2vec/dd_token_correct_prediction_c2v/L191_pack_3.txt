
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/dronekit__dronekit-android/dependencyLibs/Mavlink/src/com/MAVLink/ardupilotmega/msg_wind_pack.java
method_name = pack
method_body = public MAVLinkPacket pack() { MAVLinkPacket packet = new MAVLinkPacket(MAVLINK_MSG_LENGTH); packet.sysid = 255; packet.compid = 190; packet.msgid = MAVLINK_MSG_ID_WIND; packet.payload.putFloat(direction); packet.payload.putFloat(speed); packet.payload.putFloat(speed_z); return packet; }
predict, score, loss = pack, 0.9999978542327881, 2.9802276912960224e-06

Trace of simplified code(s):
{"time": "2021-02-14 10:58:38.640389", "score": "1.0", "loss": "0.0", "code": "public MAVLinkPacket pack() { MAVLinkPacket packet = new MAVLinkPacket(MAVLINK_MSG_LENGTH); packet.sysid = 255; packet.compid = 190; packet.msgid = MAVLINK_MSG_ID_WIND; packet.payload.putFloat(direction); packet.payload.putFloat(speed); packet.payload.putFloat(speed_z); return packet; }", "n_tokens": 103, "n_pass": [1, 1, 1]}
{"time": "2021-02-14 10:58:41.319110", "score": "1.0", "loss": "0.0", "code": "public MAVLinkPacket pack() { MAVLinkPacket packet = new MAVLinkPacket(MAVLINK_MSG_LENGTH); packet.sysid = 255; packet.compid = 190; packetpayload.putFloat(speed); packet.payload.putFloat(speed_z); return packet; }", "n_tokens": 77, "n_pass": [10, 2, 2]}
{"time": "2021-02-14 10:58:43.969577", "score": "1.0", "loss": "0.0", "code": "public MAVLinkPacket pack() { MAVLinkPacket packet = new MAVLinkPacket(MAVLINK_MSG_LENGTH); packet.sysid = 255; packet.compid = 190; packet(speed_z); return packet; }", "n_tokens": 64, "n_pass": [19, 3, 3]}
{"time": "2021-02-14 10:58:46.599301", "score": "1.0", "loss": "0.0", "code": "public MAVLinkPacket pack() { MAVLinkPacket packet = new MAVLinkPacket(MAVLINK_MSG_LENGTH); packet.sysid = 255;(speed_z); return packet; }", "n_tokens": 51, "n_pass": [23, 4, 4]}
{"time": "2021-02-14 10:58:50.066924", "score": "1.0", "loss": "0.0", "code": "public MAVLinkPacket pack() {packet = new MAVLinkPacket(MAVLINK_MSG_LENGTH); packet.sysid = 255;(speed_z); return packet; }", "n_tokens": 48, "n_pass": [67, 5, 5]}
{"time": "2021-02-14 10:58:52.718169", "score": "1.0", "loss": "0.0", "code": "public MAVLinkPacket pack() { new MAVLinkPacket(MAVLINK_MSG_LENGTH); packet.sysid = 255;(speed_z); return packet; }", "n_tokens": 45, "n_pass": [68, 6, 6]}
{"time": "2021-02-14 10:58:55.351798", "score": "1.0", "loss": "0.0", "code": "public MAVLinkPacket pack() {MAVLinkPacket(MAVLINK_MSG_LENGTH); packet.sysid = 255;(speed_z); return packet; }", "n_tokens": 42, "n_pass": [69, 7, 7]}
{"time": "2021-02-14 10:58:57.976391", "score": "1.0", "loss": "0.0001", "code": "public MAVLinkPacket pack() {MAVLinkPacket(MAVLINKLENGTH); packet.sysid = 255;(speed_z); return packet; }", "n_tokens": 39, "n_pass": [71, 8, 8]}
{"time": "2021-02-14 10:59:00.630490", "score": "1.0", "loss": "0.0", "code": "public MAVLinkPacket pack() {MAVLinkPacket(MAVLINKLENGTH);sysid = 255;(speed_z); return packet; }", "n_tokens": 36, "n_pass": [73, 9, 9]}
{"time": "2021-02-14 10:59:03.273968", "score": "1.0", "loss": "0.0", "code": "public MAVLinkPacket pack() {MAVLinkPacket(MAVLINKLENGTH); 255;(speed_z); return packet; }", "n_tokens": 33, "n_pass": [74, 10, 10]}
{"time": "2021-02-14 10:59:05.897467", "score": "1.0", "loss": "0.0", "code": "public MAVLinkPacket pack() {MAVLinkPacket(MAVLINKLENGTH);5;(speed_z); return packet; }", "n_tokens": 30, "n_pass": [75, 11, 11]}
{"time": "2021-02-14 10:59:10.464149", "score": "1.0", "loss": "0.0", "code": "public MAVLinkPacket pack() {MAVLinkPacket(MAVLINKLENGTH);(speed_z); return packet; }", "n_tokens": 28, "n_pass": [103, 12, 12]}
{"time": "2021-02-14 10:59:13.086018", "score": "1.0", "loss": "0.0", "code": "public MAVLinkPacket pack() {MAVLinkPacket(MAVLINKLENGTH);(z); return packet; }", "n_tokens": 26, "n_pass": [105, 13, 13]}
{"time": "2021-02-14 10:59:15.716545", "score": "1.0", "loss": "0.0", "code": "public MAVLinkPacket pack() {MAVLinkPacket(MAVLINKLENGTH);(z); packet; }", "n_tokens": 24, "n_pass": [108, 14, 14]}
{"time": "2021-02-14 10:59:18.329468", "score": "1.0", "loss": "0.0", "code": "public MAVLinkPacket pack() {MAVLinkPacket(MAVLINKLENGTH);(z);  }", "n_tokens": 22, "n_pass": [109, 15, 15]}
{"time": "2021-02-14 10:59:20.935252", "score": "1.0", "loss": "0.0", "code": " MAVLinkPacket pack() {MAVLinkPacket(MAVLINKLENGTH);(z);  }", "n_tokens": 21, "n_pass": [111, 16, 16]}
{"time": "2021-02-14 10:59:23.551018", "score": "1.0", "loss": "0.0", "code": "MAVLinkPacket pack() {MAVLinkPacket(MAVLINKLENGTH);(z);  }", "n_tokens": 20, "n_pass": [112, 17, 17]}
{"time": "2021-02-14 10:59:29.234925", "score": "1.0", "loss": "0.0", "code": "MAVLinkPacket pack(){MAVLinkPacket(MAVLINKLENGTH);(z);  }", "n_tokens": 19, "n_pass": [142, 18, 18]}
{"time": "2021-02-14 10:59:31.842957", "score": "0.9934", "loss": "0.0118", "code": "MAVLinkPacket pack(){(MAVLINKLENGTH);(z);  }", "n_tokens": 18, "n_pass": [144, 19, 19]}
{"time": "2021-02-14 10:59:34.462709", "score": "0.9919", "loss": "0.0141", "code": "MAVLinkPacket pack(){(LENGTH);(z);  }", "n_tokens": 17, "n_pass": [146, 20, 20]}
{"time": "2021-02-14 10:59:37.475549", "score": "0.9919", "loss": "0.0141", "code": "MAVLinkPacket pack(){(LENGTH);(z); }", "n_tokens": 16, "n_pass": [154, 21, 21]}
{"time": "2021-02-14 10:59:40.077515", "score": "0.9919", "loss": "0.0141", "code": "MAVLinkPacket pack(){(LENGTH);(z);}", "n_tokens": 15, "n_pass": [155, 22, 22]}

Minimal simplified code:
MAVLinkPacket pack(){(LENGTH);(z);}

