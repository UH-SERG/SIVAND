
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/vladmihalcea__high-performance-java-persistence/core/src/test/java/com/vladmihalcea/book/hpjp/hibernate/identifier/OracleRowIdTest_equals.java
method_name = equals
method_body = @Override public boolean equals(Object o) { if (this == o) return true; if (!(o instanceof PostComment)) return false; return id != null && id.equals(((PostComment) o).id); }
predict, score, loss = equals, 0.9999001026153564, 0.00013839241000823677

Trace of simplified code(s):
{"time": "2021-02-14 15:49:39.474361", "score": "0.9999", "loss": "0.0001", "code": "@Override public boolean equals(Object o) { if (this == o) return true; if (!(o instanceof PostComment)) return false; return id != null && id.equals(((PostComment) o).id); }", "n_tokens": 79, "n_pass": [1, 1, 1]}
{"time": "2021-02-14 15:49:42.143778", "score": "0.9998", "loss": "0.0003", "code": " boolean equals(Object o) { if (this == o) return true; if (!(o instanceof PostComment)) return false; return id != null && id.equals(((PostComment) o).id); }", "n_tokens": 75, "n_pass": [44, 2, 2]}
{"time": "2021-02-14 15:49:44.812594", "score": "0.9984", "loss": "0.002", "code": " boolean equals(Object o) { if (o) return true; if (!(o instanceof PostComment)) return false; return id != null && id.equals(((PostComment) o).id); }", "n_tokens": 70, "n_pass": [47, 3, 3]}
{"time": "2021-02-14 15:49:47.583409", "score": "0.9305", "loss": "0.0918", "code": " boolean equals(Object o) { if (o) return true; if (!(o instanceof PostComment)) return id != null && id.equals(((PostComment) o).id); }", "n_tokens": 65, "n_pass": [52, 4, 4]}
{"time": "2021-02-14 15:49:50.294087", "score": "0.9632", "loss": "0.0485", "code": " boolean equals(Object o) { if (o) return true; if (!(o instanceof PostComment)) return id && id.equals(((PostComment) o).id); }", "n_tokens": 60, "n_pass": [54, 5, 5]}
{"time": "2021-02-14 15:49:52.982121", "score": "0.9586", "loss": "0.0595", "code": " boolean equals(Object o) { if (o) return true; if (!(o instanceof PostComment)) return id &&equals(((PostComment) o).id); }", "n_tokens": 57, "n_pass": [93, 6, 6]}
{"time": "2021-02-14 15:49:55.624652", "score": "0.744", "loss": "0.4139", "code": " boolean equals(Object o) { if (o) return true; if (!(o instanceof PostComment)) return id &&equals(( o).id); }", "n_tokens": 54, "n_pass": [95, 7, 7]}
{"time": "2021-02-14 15:49:58.709045", "score": "0.5156", "loss": "0.8194", "code": " boolean equals(Object o) { if (o) true; if (!(o instanceof PostComment)) return id &&equals(( o).id); }", "n_tokens": 52, "n_pass": [108, 8, 8]}
{"time": "2021-02-14 15:50:03.991363", "score": "0.6031", "loss": "0.5644", "code": " boolean equals(Object o) { if (o) true; if (!(o )) return id &&equals(( o).id); }", "n_tokens": 49, "n_pass": [113, 10, 9]}
{"time": "2021-02-14 15:50:10.077780", "score": "0.5689", "loss": "0.6203", "code": " boolean equals(Object o) { if (o)  if (!(o )) return id &&equals(( o).id); }", "n_tokens": 47, "n_pass": [130, 12, 10]}
{"time": "2021-02-14 15:50:19.913090", "score": "0.5689", "loss": "0.6203", "code": " boolean equals(Object o) { if (o) if (!(o )) return id &&equals(( o).id); }", "n_tokens": 46, "n_pass": [188, 14, 11]}
{"time": "2021-02-14 15:50:22.538428", "score": "0.5689", "loss": "0.6203", "code": " boolean equals(Object o) { if (o) if(!(o )) return id &&equals(( o).id); }", "n_tokens": 45, "n_pass": [189, 15, 12]}
{"time": "2021-02-14 15:50:25.183217", "score": "0.5687", "loss": "0.6206", "code": " boolean equals(Object o) { if (o) if((o )) return id &&equals(( o).id); }", "n_tokens": 44, "n_pass": [191, 16, 13]}
{"time": "2021-02-14 15:50:27.820492", "score": "0.5687", "loss": "0.6206", "code": " boolean equals(Object o) { if (o) if((o)) return id &&equals(( o).id); }", "n_tokens": 43, "n_pass": [194, 17, 14]}
{"time": "2021-02-14 15:50:30.454929", "score": "0.5687", "loss": "0.6206", "code": " boolean equals(Object o) { if (o) if((o))return id &&equals(( o).id); }", "n_tokens": 42, "n_pass": [197, 18, 15]}
{"time": "2021-02-14 15:50:33.497230", "score": "0.4411", "loss": "0.8892", "code": " boolean equals(Object o) { if (o) if((o))return id &&equals(( o)); }", "n_tokens": 40, "n_pass": [204, 19, 16]}
{"time": "2021-02-14 15:50:36.126734", "score": "0.4411", "loss": "0.8892", "code": "boolean equals(Object o) { if (o) if((o))return id &&equals(( o)); }", "n_tokens": 39, "n_pass": [207, 20, 17]}
{"time": "2021-02-14 15:50:39.581343", "score": "0.4411", "loss": "0.8892", "code": "boolean equals(Object o){ if (o) if((o))return id &&equals(( o)); }", "n_tokens": 38, "n_pass": [216, 21, 18]}
{"time": "2021-02-14 15:50:42.231062", "score": "0.4411", "loss": "0.8892", "code": "boolean equals(Object o){if (o) if((o))return id &&equals(( o)); }", "n_tokens": 37, "n_pass": [218, 22, 19]}
{"time": "2021-02-14 15:50:44.858112", "score": "0.4411", "loss": "0.8892", "code": "boolean equals(Object o){if(o) if((o))return id &&equals(( o)); }", "n_tokens": 36, "n_pass": [220, 23, 20]}
{"time": "2021-02-14 15:50:47.496204", "score": "0.4411", "loss": "0.8892", "code": "boolean equals(Object o){if(o)if((o))return id &&equals(( o)); }", "n_tokens": 35, "n_pass": [224, 24, 21]}
{"time": "2021-02-14 15:50:54.019734", "score": "0.4411", "loss": "0.8892", "code": "boolean equals(Object o){if(o)if((o))return id&&equals(( o)); }", "n_tokens": 34, "n_pass": [271, 25, 22]}
{"time": "2021-02-14 15:50:56.647524", "score": "0.5863", "loss": "0.5823", "code": "boolean equals(Object o){if(o)if((o))return id&equals(( o)); }", "n_tokens": 33, "n_pass": [272, 26, 23]}
{"time": "2021-02-14 15:51:01.931011", "score": "0.3494", "loss": "1.1308", "code": "boolean equals(Object o){if(o)if((o))return id&(( o)); }", "n_tokens": 32, "n_pass": [274, 28, 24]}
{"time": "2021-02-14 15:51:04.557756", "score": "0.3494", "loss": "1.1308", "code": "boolean equals(Object o){if(o)if((o))return id&((o)); }", "n_tokens": 31, "n_pass": [277, 29, 25]}
{"time": "2021-02-14 15:51:07.170996", "score": "0.3494", "loss": "1.1308", "code": "boolean equals(Object o){if(o)if((o))return id&((o));}", "n_tokens": 30, "n_pass": [282, 30, 26]}
{"time": "2021-02-14 15:51:11.406264", "score": "0.4498", "loss": "0.9172", "code": "boolean equals(Object o){if(o)if((o))return id((o));}", "n_tokens": 29, "n_pass": [306, 31, 27]}
{"time": "2021-02-14 15:51:14.855262", "score": "0.4106", "loss": "0.9549", "code": "boolean equals(Object o){if(o)if((o)) id((o));}", "n_tokens": 28, "n_pass": [333, 32, 28]}
{"time": "2021-02-14 15:51:17.479595", "score": "0.4106", "loss": "0.9549", "code": "boolean equals(Object o){if(o)if((o))id((o));}", "n_tokens": 27, "n_pass": [334, 33, 29]}
{"time": "2021-02-14 15:51:20.110540", "score": "0.3535", "loss": "1.1217", "code": "boolean equals(Object o){if(o)if((o))((o));}", "n_tokens": 26, "n_pass": [335, 34, 30]}

Minimal simplified code:
boolean equals(Object o){if(o)if((o))((o));}

