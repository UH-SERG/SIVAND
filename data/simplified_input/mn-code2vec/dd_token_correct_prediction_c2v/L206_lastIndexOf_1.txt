
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/mimno__Mallet/src/cc/mallet/types/MultiInstanceList_lastIndexOf.java
method_name = lastIndexOf
method_body = public int lastIndexOf(Object elem) { for (int i = this.lists.length - 1; i >= 0; i--) { int index = this.lists[i].lastIndexOf(elem); if (index != -1) { return index + this.offsets[i]; } } return -1; }
predict, score, loss = lastIndexOf, 0.9998661279678345, 0.00025018901214934886

Trace of simplified code(s):
{"time": "2021-02-14 11:26:58.362167", "score": "0.9999", "loss": "0.0003", "code": "public int lastIndexOf(Object elem) { for (int i = this.lists.length - 1; i >= 0; i--) { int index = this.lists[i].lastIndexOf(elem); if (index != -1) { return index + this.offsets[i]; } } return -1; }", "n_tokens": 106, "n_pass": [1, 1, 1]}
{"time": "2021-02-14 11:27:01.032459", "score": "0.9999", "loss": "0.0002", "code": "public int lastIndexOf(Object elem) { for (int i = this.lists.length - 1; i >= 0; i--) { int index ; if (index != -1) { return index + this.offsets[i]; } } return -1; }", "n_tokens": 93, "n_pass": [24, 2, 2]}
{"time": "2021-02-14 11:27:04.113695", "score": "0.9999", "loss": "0.0002", "code": "public int lastIndexOf(Object elem) { for (int i = this.lists.length - 1; i >= 0; i--) {  ; if (index != -1) { return index + this.offsets[i]; } } return -1; }", "n_tokens": 90, "n_pass": [88, 3, 3]}
{"time": "2021-02-14 11:27:06.788069", "score": "0.9999", "loss": "0.0002", "code": "public int lastIndexOf(Object elem) { for (int i = this.lists.length - 1; i >= 0; i--) { if (index != -1) { return index + this.offsets[i]; } } return -1; }", "n_tokens": 87, "n_pass": [89, 4, 4]}
{"time": "2021-02-14 11:27:09.448632", "score": "0.9999", "loss": "0.0001", "code": "public int lastIndexOf(Object elem) { for (int i = this.lists.length - 1; i >= 0; i--) { if ( -1) { return index + this.offsets[i]; } } return -1; }", "n_tokens": 83, "n_pass": [91, 5, 5]}
{"time": "2021-02-14 11:27:12.098388", "score": "0.9999", "loss": "0.0001", "code": "public int lastIndexOf(Object elem) { for (int i = this.lists.length - 1; i >= 0; i--) { if ( -1) { return this.offsets[i]; } } return -1; }", "n_tokens": 79, "n_pass": [94, 6, 6]}
{"time": "2021-02-14 11:27:17.811718", "score": "0.9997", "loss": "0.0005", "code": "public int lastIndexOf() { for (int i = this.lists.length - 1; i >= 0; i--) { if ( -1) { return this.offsets[i]; } } return -1; }", "n_tokens": 76, "n_pass": [102, 8, 7]}
{"time": "2021-02-14 11:27:20.484095", "score": "0.9999", "loss": "0.0003", "code": "public int lastIndexOf() { for (int i =lists.length - 1; i >= 0; i--) { if ( -1) { return this.offsets[i]; } } return -1; }", "n_tokens": 73, "n_pass": [107, 9, 8]}
{"time": "2021-02-14 11:27:23.121851", "score": "0.9983", "loss": "0.0029", "code": "public int lastIndexOf() { for (int i = - 1; i >= 0; i--) { if ( -1) { return this.offsets[i]; } } return -1; }", "n_tokens": 70, "n_pass": [108, 10, 9]}
{"time": "2021-02-14 11:27:25.776157", "score": "0.9982", "loss": "0.0031", "code": "public int lastIndexOf() { for (int i =1; i >= 0; i--) { if ( -1) { return this.offsets[i]; } } return -1; }", "n_tokens": 67, "n_pass": [109, 11, 10]}
{"time": "2021-02-14 11:27:34.126254", "score": "0.9936", "loss": "0.011", "code": "public int lastIndexOf() { for (i =1; i >= 0; i--) { if ( -1) { return this.offsets[i]; } } return -1; }", "n_tokens": 65, "n_pass": [171, 13, 11]}
{"time": "2021-02-14 11:27:36.762104", "score": "0.9989", "loss": "0.0017", "code": "public int lastIndexOf() { for (i ; i >= 0; i--) { if ( -1) { return this.offsets[i]; } } return -1; }", "n_tokens": 63, "n_pass": [173, 14, 12]}
{"time": "2021-02-14 11:27:39.431095", "score": "0.9989", "loss": "0.0017", "code": "public int lastIndexOf() { for (i ; i >= 0; i--) { if (1) { return this.offsets[i]; } } return -1; }", "n_tokens": 61, "n_pass": [184, 15, 13]}
{"time": "2021-02-14 11:27:42.068178", "score": "0.9989", "loss": "0.0017", "code": "public int lastIndexOf() { for (i ; i >= 0; i--) { if (1) { this.offsets[i]; } } return -1; }", "n_tokens": 59, "n_pass": [187, 16, 14]}
{"time": "2021-02-14 11:27:44.703555", "score": "0.9991", "loss": "0.0014", "code": "public int lastIndexOf() { for (i ; i >= 0; i--) { if (1) { this[i]; } } return -1; }", "n_tokens": 57, "n_pass": [189, 17, 15]}
{"time": "2021-02-14 11:27:50.425622", "score": "0.9991", "loss": "0.0014", "code": " int lastIndexOf() { for (i ; i >= 0; i--) { if (1) { this[i]; } } return -1; }", "n_tokens": 56, "n_pass": [198, 19, 16]}
{"time": "2021-02-14 11:27:53.050478", "score": "0.9991", "loss": "0.0014", "code": "int lastIndexOf() { for (i ; i >= 0; i--) { if (1) { this[i]; } } return -1; }", "n_tokens": 55, "n_pass": [199, 20, 17]}
{"time": "2021-02-14 11:27:56.469415", "score": "0.9991", "loss": "0.0014", "code": "int lastIndexOf(){ for (i ; i >= 0; i--) { if (1) { this[i]; } } return -1; }", "n_tokens": 54, "n_pass": [205, 21, 18]}
{"time": "2021-02-14 11:27:59.121069", "score": "0.9991", "loss": "0.0014", "code": "int lastIndexOf(){for (i ; i >= 0; i--) { if (1) { this[i]; } } return -1; }", "n_tokens": 53, "n_pass": [207, 22, 19]}
{"time": "2021-02-14 11:28:01.758569", "score": "0.9991", "loss": "0.0014", "code": "int lastIndexOf(){for(i ; i >= 0; i--) { if (1) { this[i]; } } return -1; }", "n_tokens": 52, "n_pass": [209, 23, 20]}
{"time": "2021-02-14 11:28:04.422577", "score": "0.9991", "loss": "0.0014", "code": "int lastIndexOf(){for(; i >= 0; i--) { if (1) { this[i]; } } return -1; }", "n_tokens": 50, "n_pass": [211, 24, 21]}
{"time": "2021-02-14 11:28:17.704143", "score": "0.9862", "loss": "0.023", "code": "int lastIndexOf(){for(; i > 0; i--) { if (1) { this[i]; } } return -1; }", "n_tokens": 49, "n_pass": [283, 26, 22]}
{"time": "2021-02-14 11:28:20.327371", "score": "0.9862", "loss": "0.023", "code": "int lastIndexOf(){for(; i >0; i--) { if (1) { this[i]; } } return -1; }", "n_tokens": 48, "n_pass": [284, 27, 23]}
{"time": "2021-02-14 11:28:22.952411", "score": "0.9862", "loss": "0.023", "code": "int lastIndexOf(){for(; i >0;i--) { if (1) { this[i]; } } return -1; }", "n_tokens": 47, "n_pass": [287, 28, 24]}
{"time": "2021-02-14 11:28:25.573375", "score": "0.9862", "loss": "0.023", "code": "int lastIndexOf(){for(; i >0;i--){ if (1) { this[i]; } } return -1; }", "n_tokens": 46, "n_pass": [292, 29, 25]}
{"time": "2021-02-14 11:28:28.231930", "score": "0.9862", "loss": "0.023", "code": "int lastIndexOf(){for(; i >0;i--){if (1) { this[i]; } } return -1; }", "n_tokens": 45, "n_pass": [294, 30, 26]}
{"time": "2021-02-14 11:28:30.885558", "score": "0.9862", "loss": "0.023", "code": "int lastIndexOf(){for(; i >0;i--){if(1) { this[i]; } } return -1; }", "n_tokens": 44, "n_pass": [296, 31, 27]}
{"time": "2021-02-14 11:28:33.534059", "score": "0.9862", "loss": "0.023", "code": "int lastIndexOf(){for(; i >0;i--){if(1){ this[i]; } } return -1; }", "n_tokens": 43, "n_pass": [300, 32, 28]}
{"time": "2021-02-14 11:28:36.160711", "score": "0.9862", "loss": "0.023", "code": "int lastIndexOf(){for(; i >0;i--){if(1){this[i]; } } return -1; }", "n_tokens": 42, "n_pass": [302, 33, 29]}
{"time": "2021-02-14 11:28:38.785654", "score": "0.9862", "loss": "0.023", "code": "int lastIndexOf(){for(; i >0;i--){if(1){this[i];} } return -1; }", "n_tokens": 41, "n_pass": [308, 34, 30]}
{"time": "2021-02-14 11:28:41.430788", "score": "0.9862", "loss": "0.023", "code": "int lastIndexOf(){for(; i >0;i--){if(1){this[i];}} return -1; }", "n_tokens": 40, "n_pass": [310, 35, 31]}
{"time": "2021-02-14 11:28:44.061173", "score": "0.9862", "loss": "0.023", "code": "int lastIndexOf(){for(; i >0;i--){if(1){this[i];}}return -1; }", "n_tokens": 39, "n_pass": [312, 36, 32]}
{"time": "2021-02-14 11:28:47.078994", "score": "0.9862", "loss": "0.023", "code": "int lastIndexOf(){for(; i >0;i--){if(1){this[i];}}return-1; }", "n_tokens": 38, "n_pass": [314, 37, 33]}
{"time": "2021-02-14 11:28:52.344094", "score": "0.9862", "loss": "0.023", "code": "int lastIndexOf(){for(; i >0;i--){if(1){this[i];}}return-1;}", "n_tokens": 37, "n_pass": [318, 39, 34]}
{"time": "2021-02-14 11:28:55.791410", "score": "0.9862", "loss": "0.023", "code": "int lastIndexOf(){for(;i >0;i--){if(1){this[i];}}return-1;}", "n_tokens": 36, "n_pass": [329, 40, 35]}
{"time": "2021-02-14 11:28:58.412362", "score": "0.9862", "loss": "0.023", "code": "int lastIndexOf(){for(;i>0;i--){if(1){this[i];}}return-1;}", "n_tokens": 35, "n_pass": [331, 41, 36]}
{"time": "2021-02-14 11:29:01.041660", "score": "0.9869", "loss": "0.0214", "code": "int lastIndexOf(){for(;i0;i--){if(1){this[i];}}return-1;}", "n_tokens": 34, "n_pass": [332, 42, 37]}
{"time": "2021-02-14 11:29:03.695440", "score": "0.9869", "loss": "0.0214", "code": "int lastIndexOf(){for(;i;i--){if(1){this[i];}}return-1;}", "n_tokens": 33, "n_pass": [333, 43, 38]}
{"time": "2021-02-14 11:29:10.270145", "score": "0.9875", "loss": "0.0205", "code": "int lastIndexOf(){for(;;i--){if(1){this[i];}}return-1;}", "n_tokens": 32, "n_pass": [366, 45, 39]}

Minimal simplified code:
int lastIndexOf(){for(;;i--){if(1){this[i];}}return-1;}

