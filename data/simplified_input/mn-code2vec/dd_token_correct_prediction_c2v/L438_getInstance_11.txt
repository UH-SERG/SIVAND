
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/bcgit__bc-java/core/src/main/java/org/bouncycastle/asn1/DERUniversalString_getInstance.java
method_name = getInstance
method_body = public static DERUniversalString getInstance(ASN1TaggedObject obj, boolean explicit) { ASN1Primitive o = obj.getObject(); if (explicit || o instanceof DERUniversalString) { return getInstance(o); } else { return new DERUniversalString(((ASN1OctetString) o).getOctets()); } }
predict, score, loss = getInstance, 0.99994957447052, 6.97350042173639e-05

Trace of simplified code(s):
{"time": "2021-02-14 19:06:35.962760", "score": "0.9999", "loss": "0.0001", "code": "public static DERUniversalString getInstance(ASN1TaggedObject obj, boolean explicit) { ASN1Primitive o = obj.getObject(); if (explicit || o instanceof DERUniversalString) { return getInstance(o); } else { return new DERUniversalString(((ASN1OctetString) o).getOctets()); } }", "n_tokens": 93, "n_pass": [1, 1, 1]}
{"time": "2021-02-14 19:06:39.070821", "score": "0.9968", "loss": "0.0036", "code": "public static DERUniversalString getInstance(ASN1boolean explicit) { ASN1Primitive o = obj.getObject(); if (explicit || o instanceof DERUniversalString) { return getInstance(o); } else { return new DERUniversalString(((ASN1OctetString) o).getOctets()); } }", "n_tokens": 88, "n_pass": [46, 2, 2]}
{"time": "2021-02-14 19:06:41.734085", "score": "0.9976", "loss": "0.0026", "code": "public static DERUniversalString getInstance(ASN1boolean explicit) { ASN1Primitive o = obj.getObject(); if (explicit || o instanceof DERUniversalString) { return getInstance(o); } else { return new DERUniversalString((o).getOctets()); } }", "n_tokens": 82, "n_pass": [57, 3, 3]}
{"time": "2021-02-14 19:06:44.833639", "score": "0.9976", "loss": "0.0026", "code": "static DERUniversalString getInstance(ASN1boolean explicit) { ASN1Primitive o = obj.getObject(); if (explicit || o instanceof DERUniversalString) { return getInstance(o); } else { return new DERUniversalString((o).getOctets()); } }", "n_tokens": 80, "n_pass": [104, 4, 4]}
{"time": "2021-02-14 19:06:47.481013", "score": "0.9976", "loss": "0.0026", "code": "DERUniversalString getInstance(ASN1boolean explicit) { ASN1Primitive o = obj.getObject(); if (explicit || o instanceof DERUniversalString) { return getInstance(o); } else { return new DERUniversalString((o).getOctets()); } }", "n_tokens": 78, "n_pass": [105, 5, 5]}
{"time": "2021-02-14 19:06:50.130583", "score": "0.9984", "loss": "0.0018", "code": "DERUniversalString getInstance(ASN1boolean explicit) {Primitive o = obj.getObject(); if (explicit || o instanceof DERUniversalString) { return getInstance(o); } else { return new DERUniversalString((o).getOctets()); } }", "n_tokens": 75, "n_pass": [110, 6, 6]}
{"time": "2021-02-14 19:06:52.778523", "score": "0.9962", "loss": "0.0042", "code": "DERUniversalString getInstance(ASN1boolean explicit) {Primitive o = obj.getObject(); if (explicit ||  DERUniversalString) { return getInstance(o); } else { return new DERUniversalString((o).getOctets()); } }", "n_tokens": 72, "n_pass": [118, 7, 7]}
{"time": "2021-02-14 19:06:55.450323", "score": "0.993", "loss": "0.0076", "code": "DERUniversalString getInstance(ASN1boolean explicit) {Primitive o = obj.getObject(); if (explicit ||  DERUniversalString) { (o); } else { return new DERUniversalString((o).getOctets()); } }", "n_tokens": 69, "n_pass": [121, 8, 8]}
{"time": "2021-02-14 19:06:58.090151", "score": "0.993", "loss": "0.0076", "code": "DERUniversalString getInstance(ASN1boolean explicit) {Primitive o = obj.getObject(); if (explicit ||  DERUniversalString) { ; } else { return new DERUniversalString((o).getOctets()); } }", "n_tokens": 66, "n_pass": [122, 9, 9]}
{"time": "2021-02-14 19:07:00.731759", "score": "0.6883", "loss": "0.4073", "code": "DERUniversalString getInstance(ASN1boolean explicit) {Primitive o = obj.getObject(); if (explicit ||  DERUniversalString) { ; }{ return new DERUniversalString((o).getOctets()); } }", "n_tokens": 63, "n_pass": [124, 10, 10]}
{"time": "2021-02-14 19:07:03.403629", "score": "0.5526", "loss": "0.6346", "code": "DERUniversalString getInstance(ASN1boolean explicit) {Primitive o = obj.getObject(); if (explicit ||  DERUniversalString) { ; }{ returnDERUniversalString((o).getOctets()); } }", "n_tokens": 60, "n_pass": [126, 11, 11]}
{"time": "2021-02-14 19:07:09.086196", "score": "0.5811", "loss": "0.5804", "code": "DERUniversalString getInstance(ASN1boolean explicit) {Primitive o = obj.getObject(); if (explicit ||  DERUniversalString) { ; }{ ((o).getOctets()); } }", "n_tokens": 58, "n_pass": [189, 12, 12]}
{"time": "2021-02-14 19:07:11.733844", "score": "0.5808", "loss": "0.5797", "code": "DERUniversalString getInstance(ASN1boolean explicit) {Primitive o = obj.getObject(); if (explicit ||  DERUniversalString) { ; }{ ((o).getOctets); } }", "n_tokens": 56, "n_pass": [193, 13, 13]}
{"time": "2021-02-14 19:07:15.600664", "score": "0.5808", "loss": "0.5797", "code": "DERUniversalString getInstance(ASNboolean explicit) {Primitive o = obj.getObject(); if (explicit ||  DERUniversalString) { ; }{ ((o).getOctets); } }", "n_tokens": 55, "n_pass": [202, 14, 14]}
{"time": "2021-02-14 19:07:18.267669", "score": "0.958", "loss": "0.1155", "code": "DERUniversalString getInstance(ASN explicit) {Primitive o = obj.getObject(); if (explicit ||  DERUniversalString) { ; }{ ((o).getOctets); } }", "n_tokens": 54, "n_pass": [203, 15, 15]}
{"time": "2021-02-14 19:07:20.910515", "score": "0.958", "loss": "0.1155", "code": "DERUniversalString getInstance(ASN explicit){Primitive o = obj.getObject(); if (explicit ||  DERUniversalString) { ; }{ ((o).getOctets); } }", "n_tokens": 53, "n_pass": [207, 16, 16]}
{"time": "2021-02-14 19:07:23.530200", "score": "0.9761", "loss": "0.0526", "code": "DERUniversalString getInstance(ASN explicit){ o = obj.getObject(); if (explicit ||  DERUniversalString) { ; }{ ((o).getOctets); } }", "n_tokens": 52, "n_pass": [209, 17, 17]}
{"time": "2021-02-14 19:07:26.173503", "score": "0.9761", "loss": "0.0526", "code": "DERUniversalString getInstance(ASN explicit){o = obj.getObject(); if (explicit ||  DERUniversalString) { ; }{ ((o).getOctets); } }", "n_tokens": 51, "n_pass": [210, 18, 18]}
{"time": "2021-02-14 19:07:28.797258", "score": "0.9761", "loss": "0.0526", "code": "DERUniversalString getInstance(ASN explicit){o= obj.getObject(); if (explicit ||  DERUniversalString) { ; }{ ((o).getOctets); } }", "n_tokens": 50, "n_pass": [212, 19, 19]}
{"time": "2021-02-14 19:07:31.417408", "score": "0.9761", "loss": "0.0526", "code": "DERUniversalString getInstance(ASN explicit){o=obj.getObject(); if (explicit ||  DERUniversalString) { ; }{ ((o).getOctets); } }", "n_tokens": 49, "n_pass": [214, 20, 20]}
{"time": "2021-02-14 19:07:34.052927", "score": "0.9622", "loss": "0.0877", "code": "DERUniversalString getInstance(ASN explicit){o=objgetObject(); if (explicit ||  DERUniversalString) { ; }{ ((o).getOctets); } }", "n_tokens": 48, "n_pass": [216, 21, 21]}
{"time": "2021-02-14 19:07:36.688937", "score": "0.9622", "loss": "0.0877", "code": "DERUniversalString getInstance(ASN explicit){o=objgetObject(); if (explicit ||DERUniversalString) { ; }{ ((o).getOctets); } }", "n_tokens": 46, "n_pass": [223, 22, 22]}
{"time": "2021-02-14 19:07:39.343584", "score": "0.9622", "loss": "0.0877", "code": "DERUniversalString getInstance(ASN explicit){o=objgetObject(); if (explicit ||DERUniversalString) { }{ ((o).getOctets); } }", "n_tokens": 44, "n_pass": [226, 23, 23]}
{"time": "2021-02-14 19:07:41.969897", "score": "0.9651", "loss": "0.0774", "code": "DERUniversalString getInstance(ASN explicit){o=objgetObject(); if (explicit ||DERUniversalString) { }{ ((o)); } }", "n_tokens": 42, "n_pass": [231, 24, 24]}
{"time": "2021-02-14 19:07:45.921800", "score": "0.9623", "loss": "0.0971", "code": "DERUniversalString getInstance(ASN explicit){oobjgetObject(); if (explicit ||DERUniversalString) { }{ ((o)); } }", "n_tokens": 41, "n_pass": [245, 25, 25]}
{"time": "2021-02-14 19:07:48.538430", "score": "0.9623", "loss": "0.0971", "code": "DERUniversalString getInstance(ASN explicit){ogetObject(); if (explicit ||DERUniversalString) { }{ ((o)); } }", "n_tokens": 40, "n_pass": [246, 26, 26]}
{"time": "2021-02-14 19:07:52.408670", "score": "0.9639", "loss": "0.0845", "code": "DERUniversalString getInstance(ASN explicit){getObject(); if (explicit ||DERUniversalString) { }{ ((o)); } }", "n_tokens": 39, "n_pass": [271, 27, 27]}
{"time": "2021-02-14 19:08:00.019037", "score": "0.9639", "loss": "0.0845", "code": "DERUniversalString getInstance(ASN explicit){getObject(); if(explicit ||DERUniversalString) { }{ ((o)); } }", "n_tokens": 38, "n_pass": [327, 28, 28]}
{"time": "2021-02-14 19:08:02.649865", "score": "0.9639", "loss": "0.0845", "code": "DERUniversalString getInstance(ASN explicit){getObject(); if(explicit||DERUniversalString) { }{ ((o)); } }", "n_tokens": 37, "n_pass": [329, 29, 29]}
{"time": "2021-02-14 19:08:05.279620", "score": "0.9972", "loss": "0.0039", "code": "DERUniversalString getInstance(ASN explicit){getObject(); if(explicit|DERUniversalString) { }{ ((o)); } }", "n_tokens": 36, "n_pass": [330, 30, 30]}
{"time": "2021-02-14 19:08:07.899167", "score": "0.9983", "loss": "0.0024", "code": "DERUniversalString getInstance(ASN explicit){getObject(); if(explicitDERUniversalString) { }{ ((o)); } }", "n_tokens": 35, "n_pass": [331, 31, 31]}
{"time": "2021-02-14 19:08:10.551159", "score": "0.9975", "loss": "0.0034", "code": "DERUniversalString getInstance(ASN explicit){getObject(); if(explicit) { }{ ((o)); } }", "n_tokens": 34, "n_pass": [332, 32, 32]}
{"time": "2021-02-14 19:08:13.188842", "score": "0.9975", "loss": "0.0034", "code": "DERUniversalString getInstance(ASN explicit){getObject(); if(explicit){ }{ ((o)); } }", "n_tokens": 33, "n_pass": [334, 33, 33]}
{"time": "2021-02-14 19:08:15.816217", "score": "0.9975", "loss": "0.0034", "code": "DERUniversalString getInstance(ASN explicit){getObject(); if(explicit){}{ ((o)); } }", "n_tokens": 32, "n_pass": [336, 34, 34]}
{"time": "2021-02-14 19:08:18.439637", "score": "0.9975", "loss": "0.0034", "code": "DERUniversalString getInstance(ASN explicit){getObject(); if(explicit){}{((o)); } }", "n_tokens": 31, "n_pass": [339, 35, 35]}
{"time": "2021-02-14 19:08:21.065124", "score": "0.9975", "loss": "0.0034", "code": "DERUniversalString getInstance(ASN explicit){getObject(); if(explicit){}{((o));} }", "n_tokens": 30, "n_pass": [346, 36, 36]}
{"time": "2021-02-14 19:08:23.717162", "score": "0.9975", "loss": "0.0034", "code": "DERUniversalString getInstance(ASN explicit){getObject(); if(explicit){}{((o));}}", "n_tokens": 29, "n_pass": [348, 37, 37]}
{"time": "2021-02-14 19:08:27.553805", "score": "0.9975", "loss": "0.0034", "code": "DERUniversalString getInstance(ASN explicit){getObject();if(explicit){}{((o));}}", "n_tokens": 28, "n_pass": [363, 38, 38]}

Minimal simplified code:
DERUniversalString getInstance(ASN explicit){getObject();if(explicit){}{((o));}}

