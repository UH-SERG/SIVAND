
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/JeffLi1993__java-core-learning-example/src/main/java/org/javacore/thread/daemon/WriterTask_run.java
method_name = run
method_body = @Override public void run() { for (int i = 1; i < 100; i++) { Event event = new Event(); event.setDate(new Date()); event.setEvent(String.format("The thread %s has generated an event", Thread.currentThread().getId())); deque.addFirst(event); try { TimeUnit.SECONDS.sleep(1); } catch (InterruptedException e) { e.printStackTrace(); } } }
predict, score, loss = run, 0.9989136457443237, 0.0028834454715251923

Trace of simplified code(s):
{"time": "2021-02-14 19:44:53.388077", "score": "0.9984", "loss": "0.0039", "code": "@Override public void run() { for (int i = 1; i < 100; i++) { Event event = new Event(); event.setDate(new Date()); event.setEvent(String.format(\"The thread %s has generated an event\", Thread.currentThread().getId())); deque.addFirst(event); try { TimeUnit.SECONDS.sleep(1); } catch (InterruptedException e) { e.printStackTrace(); } } }", "n_tokens": 151, "n_pass": [1, 1, 1]}
{"time": "2021-02-14 19:44:56.111905", "score": "0.9652", "loss": "0.3114", "code": " void run() { for (int i = 1; i < 100; i++) { Event event = new Event(); event.setDate(new Date()); event.setEvent(String.format(\"The thread %s has generated an event\", Thread.currentThread().getId())); deque.addFirst(event); try { TimeUnit.SECONDS.sleep(1); } catch (InterruptedException e) { e.printStackTrace(); } } }", "n_tokens": 147, "n_pass": [92, 2, 2]}
{"time": "2021-02-14 19:44:58.793001", "score": "0.5963", "loss": "2.0953", "code": " void run() { for (int i = 1; 100; i++) { Event event = new Event(); event.setDate(new Date()); event.setEvent(String.format(\"The thread %s has generated an event\", Thread.currentThread().getId())); deque.addFirst(event); try { TimeUnit.SECONDS.sleep(1); } catch (InterruptedException e) { e.printStackTrace(); } } }", "n_tokens": 143, "n_pass": [98, 3, 3]}
{"time": "2021-02-14 19:45:01.472218", "score": "0.9137", "loss": "0.7091", "code": " void run() { for (int i = 1;; i++) { Event event = new Event(); event.setDate(new Date()); event.setEvent(String.format(\"The thread %s has generated an event\", Thread.currentThread().getId())); deque.addFirst(event); try { TimeUnit.SECONDS.sleep(1); } catch (InterruptedException e) { e.printStackTrace(); } } }", "n_tokens": 139, "n_pass": [99, 4, 4]}
{"time": "2021-02-14 19:45:04.157581", "score": "0.9116", "loss": "0.8894", "code": " void run() { for (int i = 1;; i++) {  new Event(); event.setDate(new Date()); event.setEvent(String.format(\"The thread %s has generated an event\", Thread.currentThread().getId())); deque.addFirst(event); try { TimeUnit.SECONDS.sleep(1); } catch (InterruptedException e) { e.printStackTrace(); } } }", "n_tokens": 134, "n_pass": [102, 5, 5]}
{"time": "2021-02-14 19:45:06.830752", "score": "0.9112", "loss": "0.8006", "code": " void run() { for (int i = 1;; i++) {  new Event(); event.setDate(new Date()); event.setEvent(String.format(\"The has generated an event\", Thread.currentThread().getId())); deque.addFirst(event); try { TimeUnit.SECONDS.sleep(1); } catch (InterruptedException e) { e.printStackTrace(); } } }", "n_tokens": 129, "n_pass": [109, 6, 6]}
{"time": "2021-02-14 19:45:09.511088", "score": "0.9514", "loss": "0.5285", "code": " void run() { for (int i = 1;; i++) {  new Event(); event.setDate(new Date()); event.setEvent(String.format(\"Thean event\", Thread.currentThread().getId())); deque.addFirst(event); try { TimeUnit.SECONDS.sleep(1); } catch (InterruptedException e) { e.printStackTrace(); } } }", "n_tokens": 124, "n_pass": [110, 7, 7]}
{"time": "2021-02-14 19:45:12.187832", "score": "0.7552", "loss": "1.4057", "code": " void run() { for (int i = 1;; i++) {  new Event(); event.setDate(new Date()); event.setEvent(String.format(\"Thean event\", Thread.currentThread().getId())); deque; try { TimeUnit.SECONDS.sleep(1); } catch (InterruptedException e) { e.printStackTrace(); } } }", "n_tokens": 119, "n_pass": [115, 8, 8]}
{"time": "2021-02-14 19:45:14.866688", "score": "0.823", "loss": "1.0395", "code": " void run() { for (int i = 1;; i++) {  new Event(); event.setDate(new Date()); event.setEvent(String.format(\"Thean event\", Thread.currentThread().getId())); deque; try {sleep(1); } catch (InterruptedException e) { e.printStackTrace(); } } }", "n_tokens": 114, "n_pass": [117, 9, 9]}
{"time": "2021-02-14 19:45:17.559147", "score": "0.6619", "loss": "1.6566", "code": " void run() { for (int i = 1;; i++) {  new Event(); event.setDate(new Date()); event.setEvent(String.format(\"Thean event\", Thread.currentThread().getId())); deque; try { } catch (InterruptedException e) { e.printStackTrace(); } } }", "n_tokens": 109, "n_pass": [118, 10, 10]}
{"time": "2021-02-14 19:45:21.451646", "score": "0.8137", "loss": "1.0754", "code": " void run() { for (i = 1;; i++) {  new Event(); event.setDate(new Date()); event.setEvent(String.format(\"Thean event\", Thread.currentThread().getId())); deque; try { } catch (InterruptedException e) { e.printStackTrace(); } } }", "n_tokens": 107, "n_pass": [204, 11, 11]}
{"time": "2021-02-14 19:45:24.115444", "score": "0.8137", "loss": "1.0754", "code": " void run() { for (i = 1;; i++) {new Event(); event.setDate(new Date()); event.setEvent(String.format(\"Thean event\", Thread.currentThread().getId())); deque; try { } catch (InterruptedException e) { e.printStackTrace(); } } }", "n_tokens": 105, "n_pass": [211, 12, 12]}
{"time": "2021-02-14 19:45:26.779616", "score": "0.8561", "loss": "0.9951", "code": " void run() { for (i = 1;; i++) {Event(); event.setDate(new Date()); event.setEvent(String.format(\"Thean event\", Thread.currentThread().getId())); deque; try { } catch (InterruptedException e) { e.printStackTrace(); } } }", "n_tokens": 103, "n_pass": [212, 13, 13]}
{"time": "2021-02-14 19:45:29.461542", "score": "0.4369", "loss": "2.1504", "code": " void run() { for (i = 1;; i++) {Event(); event(new Date()); event.setEvent(String.format(\"Thean event\", Thread.currentThread().getId())); deque; try { } catch (InterruptedException e) { e.printStackTrace(); } } }", "n_tokens": 101, "n_pass": [216, 14, 14]}
{"time": "2021-02-14 19:45:32.127849", "score": "0.9087", "loss": "0.3278", "code": " void run() { for (i = 1;; i++) {Event(); event(new Date()); event(String.format(\"Thean event\", Thread.currentThread().getId())); deque; try { } catch (InterruptedException e) { e.printStackTrace(); } } }", "n_tokens": 99, "n_pass": [222, 15, 15]}
{"time": "2021-02-14 19:45:34.792193", "score": "0.9537", "loss": "0.3092", "code": " void run() { for (i = 1;; i++) {Event(); event(new Date()); event(String(\"Thean event\", Thread.currentThread().getId())); deque; try { } catch (InterruptedException e) { e.printStackTrace(); } } }", "n_tokens": 97, "n_pass": [224, 16, 16]}
{"time": "2021-02-14 19:45:37.452598", "score": "0.7011", "loss": "1.3059", "code": " void run() { for (i = 1;; i++) {Event(); event(new Date()); event(String(\"event\", Thread.currentThread().getId())); deque; try { } catch (InterruptedException e) { e.printStackTrace(); } } }", "n_tokens": 94, "n_pass": [226, 17, 17]}
{"time": "2021-02-14 19:45:40.109950", "score": "0.7298", "loss": "1.224", "code": " void run() { for (i = 1;; i++) {Event(); event(new Date()); event(String(\"event\",currentThread().getId())); deque; try { } catch (InterruptedException e) { e.printStackTrace(); } } }", "n_tokens": 91, "n_pass": [228, 18, 18]}
{"time": "2021-02-14 19:45:42.795383", "score": "0.6926", "loss": "1.3479", "code": " void run() { for (i = 1;; i++) {Event(); event(new Date()); event(String(\"event\",currentThread().getId())); try { } catch (InterruptedException e) { e.printStackTrace(); } } }", "n_tokens": 88, "n_pass": [232, 19, 19]}
{"time": "2021-02-14 19:45:45.876182", "score": "0.9062", "loss": "0.4858", "code": " void run() { for (i = 1;; i++) {Event();(new Date()); event(String(\"event\",currentThread().getId())); try { } catch (InterruptedException e) { e.printStackTrace(); } } }", "n_tokens": 86, "n_pass": [258, 20, 20]}
{"time": "2021-02-14 19:45:48.542170", "score": "0.9284", "loss": "0.1098", "code": " void run() { for (i = 1;; i++) {Event();(new Date());(String(\"event\",currentThread().getId())); try { } catch (InterruptedException e) { e.printStackTrace(); } } }", "n_tokens": 84, "n_pass": [263, 21, 21]}
{"time": "2021-02-14 19:45:57.665832", "score": "0.9718", "loss": "0.0325", "code": " void run() { for (i = 1;; i++) {Event();(new Date());(String(\"\",currentThread().getId())); try { } catch (InterruptedException e) { e.printStackTrace(); } } }", "n_tokens": 83, "n_pass": [373, 22, 22]}
{"time": "2021-02-14 19:46:00.327223", "score": "0.9718", "loss": "0.0325", "code": " void run() { for (i = 1;; i++) {Event();(new Date());(String(\"\",currentThread().getId()));try { } catch (InterruptedException e) { e.printStackTrace(); } } }", "n_tokens": 82, "n_pass": [386, 23, 23]}
{"time": "2021-02-14 19:46:03.002956", "score": "0.9714", "loss": "0.033", "code": " void run() { for (i = 1;; i++) {Event();(new Date());(String(\"\",currentThread().getId()));try { } catch (InterruptedException e) { printStackTrace(); } } }", "n_tokens": 80, "n_pass": [395, 24, 24]}
{"time": "2021-02-14 19:46:05.699650", "score": "0.9714", "loss": "0.033", "code": "void run() { for (i = 1;; i++) {Event();(new Date());(String(\"\",currentThread().getId()));try { } catch (InterruptedException e) { printStackTrace(); } } }", "n_tokens": 79, "n_pass": [401, 25, 25]}
{"time": "2021-02-14 19:46:09.199224", "score": "0.9714", "loss": "0.033", "code": "void run(){ for (i = 1;; i++) {Event();(new Date());(String(\"\",currentThread().getId()));try { } catch (InterruptedException e) { printStackTrace(); } } }", "n_tokens": 78, "n_pass": [407, 26, 26]}
{"time": "2021-02-14 19:46:11.846182", "score": "0.9714", "loss": "0.033", "code": "void run(){for (i = 1;; i++) {Event();(new Date());(String(\"\",currentThread().getId()));try { } catch (InterruptedException e) { printStackTrace(); } } }", "n_tokens": 77, "n_pass": [409, 27, 27]}
{"time": "2021-02-14 19:46:14.502866", "score": "0.9714", "loss": "0.033", "code": "void run(){for(i = 1;; i++) {Event();(new Date());(String(\"\",currentThread().getId()));try { } catch (InterruptedException e) { printStackTrace(); } } }", "n_tokens": 76, "n_pass": [411, 28, 28]}
{"time": "2021-02-14 19:46:17.172079", "score": "0.9714", "loss": "0.033", "code": "void run(){for(i= 1;; i++) {Event();(new Date());(String(\"\",currentThread().getId()));try { } catch (InterruptedException e) { printStackTrace(); } } }", "n_tokens": 75, "n_pass": [414, 29, 29]}
{"time": "2021-02-14 19:46:19.819184", "score": "0.9714", "loss": "0.033", "code": "void run(){for(i=1;; i++) {Event();(new Date());(String(\"\",currentThread().getId()));try { } catch (InterruptedException e) { printStackTrace(); } } }", "n_tokens": 74, "n_pass": [416, 30, 30]}
{"time": "2021-02-14 19:46:22.474953", "score": "0.9714", "loss": "0.033", "code": "void run(){for(i=1;;i++) {Event();(new Date());(String(\"\",currentThread().getId()));try { } catch (InterruptedException e) { printStackTrace(); } } }", "n_tokens": 73, "n_pass": [420, 31, 31]}
{"time": "2021-02-14 19:46:25.142041", "score": "0.9714", "loss": "0.033", "code": "void run(){for(i=1;;i++){Event();(new Date());(String(\"\",currentThread().getId()));try { } catch (InterruptedException e) { printStackTrace(); } } }", "n_tokens": 72, "n_pass": [425, 32, 32]}
{"time": "2021-02-14 19:46:27.792986", "score": "0.9714", "loss": "0.033", "code": "void run(){for(i=1;;i++){Event();( Date());(String(\"\",currentThread().getId()));try { } catch (InterruptedException e) { printStackTrace(); } } }", "n_tokens": 71, "n_pass": [432, 33, 33]}
{"time": "2021-02-14 19:46:30.443605", "score": "0.9714", "loss": "0.033", "code": "void run(){for(i=1;;i++){Event();(Date());(String(\"\",currentThread().getId()));try { } catch (InterruptedException e) { printStackTrace(); } } }", "n_tokens": 70, "n_pass": [433, 34, 34]}
{"time": "2021-02-14 19:46:34.032265", "score": "0.9726", "loss": "0.0311", "code": "void run(){for(i1;;i++){Event();(Date());(String(\"\",currentThread().getId()));try { } catch (InterruptedException e) { printStackTrace(); } } }", "n_tokens": 69, "n_pass": [477, 35, 35]}
{"time": "2021-02-14 19:46:36.667736", "score": "0.9726", "loss": "0.0311", "code": "void run(){for(i;;i++){Event();(Date());(String(\"\",currentThread().getId()));try { } catch (InterruptedException e) { printStackTrace(); } } }", "n_tokens": 68, "n_pass": [478, 36, 36]}
{"time": "2021-02-14 19:46:40.150551", "score": "0.9727", "loss": "0.0307", "code": "void run(){for(;;i++){Event();(Date());(String(\"\",currentThread().getId()));try { } catch (InterruptedException e) { printStackTrace(); } } }", "n_tokens": 67, "n_pass": [533, 37, 37]}
{"time": "2021-02-14 19:46:47.789686", "score": "0.9727", "loss": "0.0307", "code": "void run(){for(;;i++){Event();(Date());(String(\"\",currentThread().getId()));try{ } catch (InterruptedException e) { printStackTrace(); } } }", "n_tokens": 66, "n_pass": [615, 38, 38]}
{"time": "2021-02-14 19:46:50.436574", "score": "0.9727", "loss": "0.0307", "code": "void run(){for(;;i++){Event();(Date());(String(\"\",currentThread().getId()));try{} catch (InterruptedException e) { printStackTrace(); } } }", "n_tokens": 65, "n_pass": [617, 39, 39]}
{"time": "2021-02-14 19:46:53.096551", "score": "0.9727", "loss": "0.0307", "code": "void run(){for(;;i++){Event();(Date());(String(\"\",currentThread().getId()));try{}catch (InterruptedException e) { printStackTrace(); } } }", "n_tokens": 64, "n_pass": [619, 40, 40]}
{"time": "2021-02-14 19:46:55.743804", "score": "0.9727", "loss": "0.0307", "code": "void run(){for(;;i++){Event();(Date());(String(\"\",currentThread().getId()));try{}catch(InterruptedException e) { printStackTrace(); } } }", "n_tokens": 63, "n_pass": [621, 41, 41]}
{"time": "2021-02-14 19:46:58.424344", "score": "0.9727", "loss": "0.0307", "code": "void run(){for(;;i++){Event();(Date());(String(\"\",currentThread().getId()));try{}catch(InterruptedException e){ printStackTrace(); } } }", "n_tokens": 62, "n_pass": [627, 42, 42]}
{"time": "2021-02-14 19:47:01.092544", "score": "0.9727", "loss": "0.0307", "code": "void run(){for(;;i++){Event();(Date());(String(\"\",currentThread().getId()));try{}catch(InterruptedException e){printStackTrace(); } } }", "n_tokens": 61, "n_pass": [629, 43, 43]}
{"time": "2021-02-14 19:47:03.745009", "score": "0.9727", "loss": "0.0307", "code": "void run(){for(;;i++){Event();(Date());(String(\"\",currentThread().getId()));try{}catch(InterruptedException e){printStackTrace();} } }", "n_tokens": 60, "n_pass": [634, 44, 44]}
{"time": "2021-02-14 19:47:06.407844", "score": "0.9727", "loss": "0.0307", "code": "void run(){for(;;i++){Event();(Date());(String(\"\",currentThread().getId()));try{}catch(InterruptedException e){printStackTrace();}} }", "n_tokens": 59, "n_pass": [636, 45, 45]}
{"time": "2021-02-14 19:47:09.057925", "score": "0.9727", "loss": "0.0307", "code": "void run(){for(;;i++){Event();(Date());(String(\"\",currentThread().getId()));try{}catch(InterruptedException e){printStackTrace();}}}", "n_tokens": 58, "n_pass": [638, 46, 46]}

Minimal simplified code:
void run(){for(;;i++){Event();(Date());(String("",currentThread().getId()));try{}catch(InterruptedException e){printStackTrace();}}}

