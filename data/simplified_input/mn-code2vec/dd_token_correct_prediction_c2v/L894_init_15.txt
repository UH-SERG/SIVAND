
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/bcgit__bc-java/core/src/main/java/org/bouncycastle/crypto/macs/SkeinMac_init.java
method_name = init
method_body = public void init(CipherParameters params) throws IllegalArgumentException { SkeinParameters skeinParameters; if (params instanceof SkeinParameters) { skeinParameters = (SkeinParameters) params; } else if (params instanceof KeyParameter) { skeinParameters = new SkeinParameters.Builder().setKey(((KeyParameter) params).getKey()).build(); } else { throw new IllegalArgumentException("Invalid parameter passed to Skein MAC init - " + params.getClass().getName()); } if (skeinParameters.getKey() == null) { throw new IllegalArgumentException("Skein MAC requires a key parameter."); } engine.init(skeinParameters); }
predict, score, loss = init, 0.9935705661773682, 0.007269242778420448

Trace of simplified code(s):
{"time": "2021-02-16 05:08:32.433856", "score": "0.972", "loss": "0.0325", "code": "public void init(CipherParameters params) throws IllegalArgumentException { SkeinParameters skeinParameters; if (params instanceof SkeinParameters) { skeinParameters = (SkeinParameters) params; } else if (params instanceof KeyParameter) { skeinParameters = new SkeinParameters.Builder().setKey(((KeyParameter) params).getKey()).build(); } else { throw new IllegalArgumentException(\"Invalid parameter passed to Skein MAC init - \" + params.getClass().getName()); } if (skeinParameters.getKey() == null) { throw new IllegalArgumentException(\"Skein MAC requires a key parameter.\"); } engine.init(skeinParameters); }", "n_tokens": 191, "n_pass": [1, 1, 1]}
{"time": "2021-02-16 05:08:35.051735", "score": "0.9952", "loss": "0.0052", "code": "public void init(CipherParameters params) throws IllegalArgumentException { SkeinParameters skeinParameters; if (params instanceof SkeinParameters) { skeinParameters = (SkeinParameters) params; } else { throw new IllegalArgumentException(\"Invalid parameter passed to Skein MAC init - \" + params.getClass().getName()); } if (skeinParameters.getKey() == null) { throw new IllegalArgumentException(\"Skein MAC requires a key parameter.\"); } engine.init(skeinParameters); }", "n_tokens": 143, "n_pass": [9, 2, 2]}
{"time": "2021-02-16 05:08:37.649453", "score": "0.9841", "loss": "0.0172", "code": "public void init(CipherParameters params) throws IllegalArgumentException { SkeinParameters skeinParameters; if (params instanceof SkeinParameters) { skeinParameters = (SkeinParameters) params; } else { throw new IllegalArgumentException(\"Invalid - \" + params.getClass().getName()); } if (skeinParameters.getKey() == null) { throw new IllegalArgumentException(\"Skein MAC requires a key parameter.\"); } engine.init(skeinParameters); }", "n_tokens": 131, "n_pass": [37, 3, 3]}
{"time": "2021-02-16 05:08:40.256192", "score": "0.9841", "loss": "0.0172", "code": "public void init(CipherParameters params) throws IllegalArgumentException { SkeinParameters skeinParameters; if (params instanceof SkeinParameters) { skeinParameters = (SkeinParameters) params; } else { throw new IllegalArgumentException(\"Invalid - \" + params.getClass().getName()); } if (skeinParameters.getKey() == null) { throw new IllegalArgumentException(\"Skein MAC parameter.\"); } engine.init(skeinParameters); }", "n_tokens": 125, "n_pass": [78, 4, 4]}
{"time": "2021-02-16 05:08:42.846411", "score": "0.9866", "loss": "0.0146", "code": "public void init(CipherParameters params) throws IllegalArgumentException { SkeinParameters skeinParameters; if (params instanceof SkeinParameters) { skeinParameters params; } else { throw new IllegalArgumentException(\"Invalid - \" + params.getClass().getName()); } if (skeinParameters.getKey() == null) { throw new IllegalArgumentException(\"Skein MAC parameter.\"); } engine.init(skeinParameters); }", "n_tokens": 119, "n_pass": [87, 5, 5]}
{"time": "2021-02-16 05:08:45.471978", "score": "0.9944", "loss": "0.0061", "code": "public void init(CipherParameters params) throws IllegalArgumentException { SkeinParameters skeinParameters; if (params instanceof SkeinParameters) { skeinParameters params; } else {new IllegalArgumentException(\"Invalid - \" + params.getClass().getName()); } if (skeinParameters.getKey() == null) { throw new IllegalArgumentException(\"Skein MAC parameter.\"); } engine.init(skeinParameters); }", "n_tokens": 116, "n_pass": [151, 6, 6]}
{"time": "2021-02-16 05:08:48.044344", "score": "0.9966", "loss": "0.0037", "code": "public void init(CipherParameters params) throws IllegalArgumentException { SkeinParameters skeinParameters; if (params instanceof SkeinParameters) { skeinParameters params; } else {(\"Invalid - \" + params.getClass().getName()); } if (skeinParameters.getKey() == null) { throw new IllegalArgumentException(\"Skein MAC parameter.\"); } engine.init(skeinParameters); }", "n_tokens": 113, "n_pass": [152, 7, 7]}
{"time": "2021-02-16 05:08:50.615225", "score": "0.9966", "loss": "0.0037", "code": "public void init(CipherParameters params) throws IllegalArgumentException { SkeinParameters skeinParameters; if (params instanceof SkeinParameters) { skeinParameters params; } else {(\"Invalid\" + params.getClass().getName()); } if (skeinParameters.getKey() == null) { throw new IllegalArgumentException(\"Skein MAC parameter.\"); } engine.init(skeinParameters); }", "n_tokens": 110, "n_pass": [154, 8, 8]}
{"time": "2021-02-16 05:08:53.216171", "score": "0.9967", "loss": "0.0036", "code": "public void init(CipherParameters params) throws IllegalArgumentException { SkeinParameters skeinParameters; if (params instanceof SkeinParameters) { skeinParameters params; } else {(\"Invalid\" +getClass().getName()); } if (skeinParameters.getKey() == null) { throw new IllegalArgumentException(\"Skein MAC parameter.\"); } engine.init(skeinParameters); }", "n_tokens": 107, "n_pass": [156, 9, 9]}
{"time": "2021-02-16 05:08:55.813031", "score": "0.9989", "loss": "0.0012", "code": "public void init(CipherParameters params) throws IllegalArgumentException { SkeinParameters skeinParameters; if (params instanceof SkeinParameters) { skeinParameters params; } else {(\"Invalid\" +getClass().getName()); } if (skeinParameters.getKey== null) { throw new IllegalArgumentException(\"Skein MAC parameter.\"); } engine.init(skeinParameters); }", "n_tokens": 104, "n_pass": [163, 10, 10]}
{"time": "2021-02-16 05:08:58.385058", "score": "0.9994", "loss": "0.0007", "code": "public void init(CipherParameters params) throws IllegalArgumentException { SkeinParameters skeinParameters; if (params instanceof SkeinParameters) { skeinParameters params; } else {(\"Invalid\" +getClass().getName()); } if (skeinParameters.getKeynull) { throw new IllegalArgumentException(\"Skein MAC parameter.\"); } engine.init(skeinParameters); }", "n_tokens": 101, "n_pass": [164, 11, 11]}
{"time": "2021-02-16 05:09:00.980889", "score": "0.9951", "loss": "0.0063", "code": "public void init(CipherParameters params) throws IllegalArgumentException { SkeinParameters skeinParameters; if (params instanceof SkeinParameters) { skeinParameters params; } else {(\"Invalid\" +getClass().getName()); } if (skeinParameters.getKeynull) { throwIllegalArgumentException(\"Skein MAC parameter.\"); } engine.init(skeinParameters); }", "n_tokens": 98, "n_pass": [167, 12, 12]}
{"time": "2021-02-16 05:09:03.561409", "score": "0.9833", "loss": "0.0213", "code": "public void init(CipherParameters params) throws IllegalArgumentException { SkeinParameters skeinParameters; if (params instanceof SkeinParameters) { skeinParameters params; } else {(\"Invalid\" +getClass().getName()); } if (skeinParameters.getKeynull) { throwIllegalArgumentException(\" parameter.\"); } engine.init(skeinParameters); }", "n_tokens": 95, "n_pass": [169, 13, 13]}
{"time": "2021-02-16 05:09:06.156525", "score": "0.9966", "loss": "0.0041", "code": "public void init(CipherParameters params) throws IllegalArgumentException { SkeinParameters skeinParameters; if (params instanceof SkeinParameters) { skeinParameters params; } else {(\"Invalid\" +getClass().getName()); } if (skeinParameters.getKeynull) { throwIllegalArgumentException(\"\"); } engine.init(skeinParameters); }", "n_tokens": 92, "n_pass": [170, 14, 14]}
{"time": "2021-02-16 05:09:11.299476", "score": "0.468", "loss": "1.2577", "code": "public void init(CipherParameters params) throws IllegalArgumentException { SkeinParameters skeinParameters; if (params instanceof SkeinParameters) { skeinParameters params; } else {(\"Invalid\" +getClass().getName()); } if (skeinParameters.getKeynull) { throwIllegalArgumentException(\"\"); } engine.init; }", "n_tokens": 89, "n_pass": [174, 16, 15]}
{"time": "2021-02-16 05:09:13.865758", "score": "0.468", "loss": "1.2577", "code": "void init(CipherParameters params) throws IllegalArgumentException { SkeinParameters skeinParameters; if (params instanceof SkeinParameters) { skeinParameters params; } else {(\"Invalid\" +getClass().getName()); } if (skeinParameters.getKeynull) { throwIllegalArgumentException(\"\"); } engine.init; }", "n_tokens": 87, "n_pass": [176, 17, 16]}
{"time": "2021-02-16 05:09:16.453170", "score": "0.5291", "loss": "1.2232", "code": "void init(CipherParameters params)  { SkeinParameters skeinParameters; if (params instanceof SkeinParameters) { skeinParameters params; } else {(\"Invalid\" +getClass().getName()); } if (skeinParameters.getKeynull) { throwIllegalArgumentException(\"\"); } engine.init; }", "n_tokens": 84, "n_pass": [180, 18, 17]}
{"time": "2021-02-16 05:09:19.014633", "score": "0.5618", "loss": "1.1543", "code": "void init(CipherParameters params)  { ; if (params instanceof SkeinParameters) { skeinParameters params; } else {(\"Invalid\" +getClass().getName()); } if (skeinParameters.getKeynull) { throwIllegalArgumentException(\"\"); } engine.init; }", "n_tokens": 81, "n_pass": [182, 19, 18]}
{"time": "2021-02-16 05:09:21.606067", "score": "0.8717", "loss": "0.4804", "code": "void init(CipherParameters params)  { ; if (paramsSkeinParameters) { skeinParameters params; } else {(\"Invalid\" +getClass().getName()); } if (skeinParameters.getKeynull) { throwIllegalArgumentException(\"\"); } engine.init; }", "n_tokens": 78, "n_pass": [185, 20, 19]}
{"time": "2021-02-16 05:09:24.176035", "score": "0.8313", "loss": "0.6071", "code": "void init(CipherParameters params)  { ; if (paramsSkeinParameters) { skeinParameters params; } else {(\"Invalid\" +getClass().getName()); } if (null) { throwIllegalArgumentException(\"\"); } engine.init; }", "n_tokens": 75, "n_pass": [198, 21, 20]}
{"time": "2021-02-16 05:09:26.726856", "score": "0.5529", "loss": "1.4595", "code": "void init(CipherParameters params)  { ; if (paramsSkeinParameters) { skeinParameters params; } else {(\"Invalid\" +getClass().getName()); } if (null) { throwIllegalArgumentException(\"\"); } ; }", "n_tokens": 72, "n_pass": [204, 22, 21]}
{"time": "2021-02-16 05:09:33.323828", "score": "0.5529", "loss": "1.4595", "code": "void init(CipherParameters params)  { ; if (paramsSkeinParameters) { skeinParameters params; } else {(\"Invalid\" +getClass().getName()); } if (null) { throwIllegalArgumentException(\"\"); } }", "n_tokens": 70, "n_pass": [277, 23, 22]}
{"time": "2021-02-16 05:09:36.618204", "score": "0.5529", "loss": "1.4595", "code": "void init(CipherParameters params) { ; if (paramsSkeinParameters) { skeinParameters params; } else {(\"Invalid\" +getClass().getName()); } if (null) { throwIllegalArgumentException(\"\"); } }", "n_tokens": 69, "n_pass": [287, 24, 23]}
{"time": "2021-02-16 05:09:39.187147", "score": "0.5529", "loss": "1.4595", "code": "void init(CipherParameters params){ ; if (paramsSkeinParameters) { skeinParameters params; } else {(\"Invalid\" +getClass().getName()); } if (null) { throwIllegalArgumentException(\"\"); } }", "n_tokens": 68, "n_pass": [288, 25, 24]}
{"time": "2021-02-16 05:09:41.739693", "score": "0.5529", "loss": "1.4595", "code": "void init(CipherParameters params){; if (paramsSkeinParameters) { skeinParameters params; } else {(\"Invalid\" +getClass().getName()); } if (null) { throwIllegalArgumentException(\"\"); } }", "n_tokens": 67, "n_pass": [290, 26, 25]}
{"time": "2021-02-16 05:09:44.298995", "score": "0.5529", "loss": "1.4595", "code": "void init(CipherParameters params){ if (paramsSkeinParameters) { skeinParameters params; } else {(\"Invalid\" +getClass().getName()); } if (null) { throwIllegalArgumentException(\"\"); } }", "n_tokens": 66, "n_pass": [291, 27, 26]}
{"time": "2021-02-16 05:09:46.862341", "score": "0.5529", "loss": "1.4595", "code": "void init(CipherParameters params){if (paramsSkeinParameters) { skeinParameters params; } else {(\"Invalid\" +getClass().getName()); } if (null) { throwIllegalArgumentException(\"\"); } }", "n_tokens": 65, "n_pass": [292, 28, 27]}
{"time": "2021-02-16 05:09:49.451417", "score": "0.5529", "loss": "1.4595", "code": "void init(CipherParameters params){if(paramsSkeinParameters) { skeinParameters params; } else {(\"Invalid\" +getClass().getName()); } if (null) { throwIllegalArgumentException(\"\"); } }", "n_tokens": 64, "n_pass": [294, 29, 28]}
{"time": "2021-02-16 05:09:52.032011", "score": "0.5529", "loss": "1.4595", "code": "void init(CipherParameters params){if(SkeinParameters) { skeinParameters params; } else {(\"Invalid\" +getClass().getName()); } if (null) { throwIllegalArgumentException(\"\"); } }", "n_tokens": 63, "n_pass": [296, 30, 29]}
{"time": "2021-02-16 05:09:54.589333", "score": "0.5529", "loss": "1.4595", "code": "void init(CipherParameters params){if(SkeinParameters){ skeinParameters params; } else {(\"Invalid\" +getClass().getName()); } if (null) { throwIllegalArgumentException(\"\"); } }", "n_tokens": 62, "n_pass": [299, 31, 30]}
{"time": "2021-02-16 05:09:57.165924", "score": "0.5529", "loss": "1.4595", "code": "void init(CipherParameters params){if(SkeinParameters){skeinParameters params; } else {(\"Invalid\" +getClass().getName()); } if (null) { throwIllegalArgumentException(\"\"); } }", "n_tokens": 61, "n_pass": [301, 32, 31]}
{"time": "2021-02-16 05:09:59.718318", "score": "0.5354", "loss": "1.559", "code": "void init(CipherParameters params){if(SkeinParameters){ params; } else {(\"Invalid\" +getClass().getName()); } if (null) { throwIllegalArgumentException(\"\"); } }", "n_tokens": 60, "n_pass": [302, 33, 32]}
{"time": "2021-02-16 05:10:02.287590", "score": "0.5436", "loss": "1.5188", "code": "void init(CipherParameters params){if(SkeinParameters){; } else {(\"Invalid\" +getClass().getName()); } if (null) { throwIllegalArgumentException(\"\"); } }", "n_tokens": 58, "n_pass": [303, 34, 33]}
{"time": "2021-02-16 05:10:04.840546", "score": "0.5436", "loss": "1.5188", "code": "void init(CipherParameters params){if(SkeinParameters){} else {(\"Invalid\" +getClass().getName()); } if (null) { throwIllegalArgumentException(\"\"); } }", "n_tokens": 56, "n_pass": [304, 35, 34]}
{"time": "2021-02-16 05:10:07.394136", "score": "0.535", "loss": "1.5065", "code": "void init(CipherParameters params){if(SkeinParameters){} {(\"Invalid\" +getClass().getName()); } if (null) { throwIllegalArgumentException(\"\"); } }", "n_tokens": 54, "n_pass": [306, 36, 35]}
{"time": "2021-02-16 05:10:09.946020", "score": "0.539", "loss": "1.4615", "code": "void init(CipherParameters params){if(SkeinParameters){} {(\"Invalid\" +getClass.getName()); } if (null) { throwIllegalArgumentException(\"\"); } }", "n_tokens": 52, "n_pass": [311, 37, 36]}
{"time": "2021-02-16 05:10:12.494066", "score": "0.5763", "loss": "1.3939", "code": "void init(CipherParameters params){if(SkeinParameters){} {(\"Invalid\" +getClass()); } if (null) { throwIllegalArgumentException(\"\"); } }", "n_tokens": 50, "n_pass": [312, 38, 37]}
{"time": "2021-02-16 05:10:15.037545", "score": "0.5689", "loss": "1.3759", "code": "void init(CipherParameters params){if(SkeinParameters){} {(\"Invalid\" +getClass); } if (null) { throwIllegalArgumentException(\"\"); } }", "n_tokens": 48, "n_pass": [313, 39, 38]}
{"time": "2021-02-16 05:10:17.599457", "score": "0.9822", "loss": "0.0317", "code": "void init(CipherParameters params){if(SkeinParameters){} {(\"Invalid\" +getClass); } if (null) {IllegalArgumentException(\"\"); } }", "n_tokens": 46, "n_pass": [320, 40, 39]}
{"time": "2021-02-16 05:10:20.151615", "score": "0.9887", "loss": "0.0199", "code": "void init(CipherParameters params){if(SkeinParameters){} {(\"Invalid\" +getClass); } if (null) {IllegalArgumentException(); } }", "n_tokens": 44, "n_pass": [322, 41, 40]}
{"time": "2021-02-16 05:10:23.429462", "score": "0.9897", "loss": "0.0169", "code": "void init(CipherParameters params){if(SkeinParameters){} {(\"Invalid\" ); } if (null) {IllegalArgumentException(); } }", "n_tokens": 42, "n_pass": [344, 42, 41]}
{"time": "2021-02-16 05:10:30.053809", "score": "0.9897", "loss": "0.0169", "code": "void init(CipherParameters params){if(SkeinParameters){} {(\"Invalid\" ); } if(null) {IllegalArgumentException(); } }", "n_tokens": 41, "n_pass": [402, 43, 42]}
{"time": "2021-02-16 05:10:32.597893", "score": "0.9897", "loss": "0.0169", "code": "void init(CipherParameters params){if(SkeinParameters){} {(\"Invalid\" ); } if(null){IllegalArgumentException(); } }", "n_tokens": 40, "n_pass": [405, 44, 43]}
{"time": "2021-02-16 05:10:35.132530", "score": "0.9897", "loss": "0.0169", "code": "void init(CipherParameters params){if(SkeinParameters){} {(\"Invalid\" ); } if(null){IllegalArgumentException();} }", "n_tokens": 39, "n_pass": [411, 45, 44]}
{"time": "2021-02-16 05:10:37.677881", "score": "0.9897", "loss": "0.0169", "code": "void init(CipherParameters params){if(SkeinParameters){} {(\"Invalid\" ); } if(null){IllegalArgumentException();}}", "n_tokens": 38, "n_pass": [413, 46, 45]}
{"time": "2021-02-16 05:10:40.959763", "score": "0.9897", "loss": "0.0169", "code": "void init(CipherParameters params){if(SkeinParameters){}{(\"Invalid\" ); } if(null){IllegalArgumentException();}}", "n_tokens": 37, "n_pass": [430, 47, 46]}
{"time": "2021-02-16 05:10:43.503264", "score": "0.9879", "loss": "0.0168", "code": "void init(CipherParameters params){if(SkeinParameters){}{(\"\" ); } if(null){IllegalArgumentException();}}", "n_tokens": 36, "n_pass": [434, 48, 47]}
{"time": "2021-02-16 05:10:46.048565", "score": "0.9879", "loss": "0.0168", "code": "void init(CipherParameters params){if(SkeinParameters){}{(\"\"); } if(null){IllegalArgumentException();}}", "n_tokens": 35, "n_pass": [436, 49, 48]}
{"time": "2021-02-16 05:10:48.595071", "score": "0.9879", "loss": "0.0168", "code": "void init(CipherParameters params){if(SkeinParameters){}{(\"\");} if(null){IllegalArgumentException();}}", "n_tokens": 34, "n_pass": [439, 50, 49]}
{"time": "2021-02-16 05:10:51.134909", "score": "0.9879", "loss": "0.0168", "code": "void init(CipherParameters params){if(SkeinParameters){}{(\"\");}if(null){IllegalArgumentException();}}", "n_tokens": 33, "n_pass": [441, 51, 50]}

Minimal simplified code:
void init(CipherParameters params){if(SkeinParameters){}{("");}if(null){IllegalArgumentException();}}

