
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/Othershe__DUtil/dutil/src/main/java/com/othershe/dutil/upload/UploadProgressHandler_handleMessage.java
method_name = handleMessage
method_body = @Override public void handleMessage(Message msg) { super.handleMessage(msg); switch(msg.what) { case START: uploadCallback.onStart(); break; case PROGRESS: uploadCallback.onProgress(msg.arg1, msg.arg2, Utils.getPercentage(msg.arg1, msg.arg2)); break; case FINISH: uploadCallback.onFinish(msg.obj.toString()); break; case ERROR: uploadCallback.onError(msg.obj.toString()); break; } }
predict, score, loss = handleMessage, 0.9997807145118713, 0.00024172721896320581

Trace of simplified code(s):
{"time": "2021-02-14 19:49:28.636525", "score": "0.9997", "loss": "0.0004", "code": "@Override public void handleMessage(Message msg) { super.handleMessage(msg); switch(msg.what) { case START: uploadCallback.onStart(); break; case PROGRESS: uploadCallback.onProgress(msg.arg1, msg.arg2, Utils.getPercentage(msg.arg1, msg.arg2)); break; case FINISH: uploadCallback.onFinish(msg.obj.toString()); break; case ERROR: uploadCallback.onError(msg.obj.toString()); break; } }", "n_tokens": 137, "n_pass": [1, 1, 1]}
{"time": "2021-02-14 19:49:31.339126", "score": "0.9998", "loss": "0.0002", "code": "@Override public void handleMessage(Message msg) { switch(msg.what) { case START: uploadCallback.onStart(); break; case PROGRESS: uploadCallback.onProgress(msg.arg1, msg.arg2, Utils.getPercentage(msg.arg1, msg.arg2)); break; case FINISH: uploadCallback.onFinish(msg.obj.toString()); break; case ERROR: uploadCallback.onError(msg.obj.toString()); break; } }", "n_tokens": 129, "n_pass": [46, 2, 2]}
{"time": "2021-02-14 19:49:34.007692", "score": "0.9999", "loss": "0.0002", "code": "@Override public void handleMessage(Message msg) { switch(msg.what) { case START: uploadCallback.onStart(); break; case PROGRESS: uploadCallback.onProgress(msg.arg1, msg.arg2, Utils.getPercentage(msg)); break; case FINISH: uploadCallback.onFinish(msg.obj.toString()); break; case ERROR: uploadCallback.onError(msg.obj.toString()); break; } }", "n_tokens": 120, "n_pass": [53, 3, 3]}
{"time": "2021-02-14 19:49:36.685586", "score": "0.9977", "loss": "0.0026", "code": "@Override public void handleMessage(Message msg) { switch(msg.what) { case START: uploadCallback.onStart(); break; case PROGRESS: uploadCallback.onProgress(msg.arg1, msg.arg2, Utils.getPercentage(msg)); break; case FINISH: uploadCallback.onFinish(msg.obj.toString()); breakonError(msg.obj.toString()); break; } }", "n_tokens": 111, "n_pass": [57, 4, 4]}
{"time": "2021-02-14 19:49:39.382257", "score": "0.9983", "loss": "0.0019", "code": " void handleMessage(Message msg) { switch(msg.what) { case START: uploadCallback.onStart(); break; case PROGRESS: uploadCallback.onProgress(msg.arg1, msg.arg2, Utils.getPercentage(msg)); break; case FINISH: uploadCallback.onFinish(msg.obj.toString()); breakonError(msg.obj.toString()); break; } }", "n_tokens": 107, "n_pass": [101, 5, 5]}
{"time": "2021-02-14 19:49:42.047408", "score": "0.9941", "loss": "0.0068", "code": " void handleMessage(Message msg) { switch(msg.what) { case START: uploadCallback.onStart();case PROGRESS: uploadCallback.onProgress(msg.arg1, msg.arg2, Utils.getPercentage(msg)); break; case FINISH: uploadCallback.onFinish(msg.obj.toString()); breakonError(msg.obj.toString()); break; } }", "n_tokens": 103, "n_pass": [109, 6, 6]}
{"time": "2021-02-14 19:49:44.708585", "score": "0.993", "loss": "0.0075", "code": " void handleMessage(Message msg) { switch(msg.what) { case START: uploadCallback.onStart(); uploadCallback.onProgress(msg.arg1, msg.arg2, Utils.getPercentage(msg)); break; case FINISH: uploadCallback.onFinish(msg.obj.toString()); breakonError(msg.obj.toString()); break; } }", "n_tokens": 99, "n_pass": [110, 7, 7]}
{"time": "2021-02-14 19:49:47.402082", "score": "0.9824", "loss": "0.0203", "code": " void handleMessage(Message msg) { switch(msg.what) { case START: uploadCallback.onStart(); uploadCallback.onProgress(msg.arg.arg2, Utils.getPercentage(msg)); break; case FINISH: uploadCallback.onFinish(msg.obj.toString()); breakonError(msg.obj.toString()); break; } }", "n_tokens": 95, "n_pass": [113, 8, 8]}
{"time": "2021-02-14 19:49:50.054814", "score": "0.9959", "loss": "0.0042", "code": " void handleMessage(Message msg) { switch(msg.what) { case START: uploadCallback.onStart(); uploadCallback.onProgress(msg.arg.arg2,(msg)); break; case FINISH: uploadCallback.onFinish(msg.obj.toString()); breakonError(msg.obj.toString()); break; } }", "n_tokens": 91, "n_pass": [115, 9, 9]}
{"time": "2021-02-14 19:49:52.717809", "score": "0.9743", "loss": "0.0263", "code": " void handleMessage(Message msg) { switch(msg.what) { case START: uploadCallback. uploadCallback.onProgress(msg.arg.arg2,(msg)); break; case FINISH: uploadCallback.onFinish(msg.obj.toString()); breakonError(msg.obj.toString()); break; } }", "n_tokens": 87, "n_pass": [133, 10, 10]}
{"time": "2021-02-14 19:49:55.394268", "score": "0.9845", "loss": "0.0158", "code": " void handleMessage(Message msg) { switch(msg.what) { case START: uploadCallback. uploadCallback.onProgress(msg.arg(msg)); break; case FINISH: uploadCallback.onFinish(msg.obj.toString()); breakonError(msg.obj.toString()); break; } }", "n_tokens": 83, "n_pass": [136, 11, 11]}
{"time": "2021-02-14 19:49:58.473955", "score": "0.9845", "loss": "0.0158", "code": " void handleMessage(Message msg) { switch(msg.what) { case START: uploadCallback. uploadCallback.onProgress(msg.arg(msg));  case FINISH: uploadCallback.onFinish(msg.obj.toString()); breakonError(msg.obj.toString()); break; } }", "n_tokens": 81, "n_pass": [197, 12, 12]}
{"time": "2021-02-14 19:50:01.131922", "score": "0.9344", "loss": "0.0686", "code": " void handleMessage(Message msg) { switch(msg.what) { case START: uploadCallback. uploadCallback.onProgress(msg.arg(msg));  FINISH: uploadCallback.onFinish(msg.obj.toString()); breakonError(msg.obj.toString()); break; } }", "n_tokens": 79, "n_pass": [198, 13, 13]}
{"time": "2021-02-14 19:50:03.788391", "score": "0.9771", "loss": "0.0234", "code": " void handleMessage(Message msg) { switch(msg.what) { case START: uploadCallback. uploadCallback.onProgress(msg.arg(msg));  FINISHuploadCallback.onFinish(msg.obj.toString()); breakonError(msg.obj.toString()); break; } }", "n_tokens": 77, "n_pass": [200, 14, 14]}
{"time": "2021-02-14 19:50:06.442116", "score": "0.9328", "loss": "0.0703", "code": " void handleMessage(Message msg) { switch(msg.what) { case START: uploadCallback. uploadCallback.onProgress(msg.arg(msg));  FINISHonFinish(msg.obj.toString()); breakonError(msg.obj.toString()); break; } }", "n_tokens": 75, "n_pass": [201, 15, 15]}
{"time": "2021-02-14 19:50:09.086128", "score": "0.9311", "loss": "0.0721", "code": " void handleMessage(Message msg) { switch(msg.what) { case START: uploadCallback. uploadCallback.onProgress(msg.arg(msg));  FINISHonFinish(obj.toString()); breakonError(msg.obj.toString()); break; } }", "n_tokens": 73, "n_pass": [203, 16, 16]}
{"time": "2021-02-14 19:50:11.756871", "score": "0.9339", "loss": "0.069", "code": " void handleMessage(Message msg) { switch(msg.what) { case START: uploadCallback. uploadCallback.onProgress(msg.arg(msg));  FINISHonFinish(toString()); breakonError(msg.obj.toString()); break; } }", "n_tokens": 71, "n_pass": [204, 17, 17]}
{"time": "2021-02-14 19:50:14.402139", "score": "0.962", "loss": "0.039", "code": " void handleMessage(Message msg) { switch(msg.what) { case START: uploadCallback. uploadCallback.onProgress(msg.arg(msg));  FINISHonFinish(toString()); breakonError(msgtoString()); break; } }", "n_tokens": 68, "n_pass": [209, 18, 18]}
{"time": "2021-02-14 19:50:17.047872", "score": "0.9712", "loss": "0.0294", "code": " void handleMessage(Message msg) { switch(msg.what) { case START: uploadCallback. uploadCallback.onProgress(msg.arg(msg));  FINISHonFinish(toString()); breakonError(msg); break; } }", "n_tokens": 65, "n_pass": [210, 19, 19]}
{"time": "2021-02-14 19:50:19.702318", "score": "0.9712", "loss": "0.0294", "code": " void handleMessage(Message msg) { switch(msg.what) { case START: uploadCallback. uploadCallback.onProgress(msg.arg(msg));  FINISHonFinish(toString()); breakonError(msg); } }", "n_tokens": 62, "n_pass": [212, 20, 20]}
{"time": "2021-02-14 19:50:22.774130", "score": "0.7097", "loss": "0.3487", "code": " void handleMessage(Message msg) { switch(what) { case START: uploadCallback. uploadCallback.onProgress(msg.arg(msg));  FINISHonFinish(toString()); breakonError(msg); } }", "n_tokens": 60, "n_pass": [221, 21, 21]}
{"time": "2021-02-14 19:50:25.410873", "score": "0.8121", "loss": "0.2118", "code": " void handleMessage(Message msg) { switch(what) { case START:  uploadCallback.onProgress(msg.arg(msg));  FINISHonFinish(toString()); breakonError(msg); } }", "n_tokens": 58, "n_pass": [227, 22, 22]}
{"time": "2021-02-14 19:50:30.702397", "score": "0.8531", "loss": "0.1619", "code": " void handleMessage(Message msg) { switch(what) { case START:  uploadCallback.onProgress(msg(msg));  FINISHonFinish(toString()); breakonError(msg); } }", "n_tokens": 56, "n_pass": [231, 24, 23]}
{"time": "2021-02-14 19:50:33.348333", "score": "0.9219", "loss": "0.0828", "code": " void handleMessage(Message msg) { switch(what) { case START:  uploadCallback.onProgress(msg(msg)); onFinish(toString()); breakonError(msg); } }", "n_tokens": 54, "n_pass": [235, 25, 24]}
{"time": "2021-02-14 19:50:44.335291", "score": "0.8514", "loss": "0.1639", "code": " void handleMessage(Message msg) { switch(what) { case START:  uploadCallback.onProgress(msg(msg)); (toString()); breakonError(msg); } }", "n_tokens": 53, "n_pass": [311, 27, 25]}
{"time": "2021-02-14 19:50:46.977660", "score": "0.8514", "loss": "0.1639", "code": " void handleMessage(Message msg) { switch(what) { case START:  uploadCallback.onProgress(msg(msg)); (toString());breakonError(msg); } }", "n_tokens": 52, "n_pass": [317, 28, 26]}
{"time": "2021-02-14 19:50:49.621336", "score": "0.9966", "loss": "0.0038", "code": " void handleMessage(Message msg) { switch(what) { case START:  uploadCallback.onProgress(msg(msg)); (toString());onError(msg); } }", "n_tokens": 51, "n_pass": [318, 29, 27]}
{"time": "2021-02-14 19:50:52.282598", "score": "0.9991", "loss": "0.0013", "code": " void handleMessage(Message msg) { switch(what) { case START:  uploadCallback.onProgress(msg(msg)); (toString());(msg); } }", "n_tokens": 50, "n_pass": [319, 30, 28]}
{"time": "2021-02-14 19:50:54.916452", "score": "0.9991", "loss": "0.0013", "code": "void handleMessage(Message msg) { switch(what) { case START:  uploadCallback.onProgress(msg(msg)); (toString());(msg); } }", "n_tokens": 49, "n_pass": [324, 31, 29]}
{"time": "2021-02-14 19:50:58.381952", "score": "0.9991", "loss": "0.0013", "code": "void handleMessage(Message msg){ switch(what) { case START:  uploadCallback.onProgress(msg(msg)); (toString());(msg); } }", "n_tokens": 48, "n_pass": [333, 32, 30]}
{"time": "2021-02-14 19:51:01.014016", "score": "0.9991", "loss": "0.0013", "code": "void handleMessage(Message msg){switch(what) { case START:  uploadCallback.onProgress(msg(msg)); (toString());(msg); } }", "n_tokens": 47, "n_pass": [335, 33, 31]}
{"time": "2021-02-14 19:51:03.649308", "score": "0.9991", "loss": "0.0013", "code": "void handleMessage(Message msg){switch(what){ case START:  uploadCallback.onProgress(msg(msg)); (toString());(msg); } }", "n_tokens": 46, "n_pass": [340, 34, 32]}
{"time": "2021-02-14 19:51:06.294667", "score": "0.9991", "loss": "0.0013", "code": "void handleMessage(Message msg){switch(what){case START:  uploadCallback.onProgress(msg(msg)); (toString());(msg); } }", "n_tokens": 45, "n_pass": [342, 35, 33]}
{"time": "2021-02-14 19:51:08.931874", "score": "0.9991", "loss": "0.0013", "code": "void handleMessage(Message msg){switch(what){case START: uploadCallback.onProgress(msg(msg)); (toString());(msg); } }", "n_tokens": 44, "n_pass": [347, 36, 34]}
{"time": "2021-02-14 19:51:11.581458", "score": "0.9991", "loss": "0.0013", "code": "void handleMessage(Message msg){switch(what){case START:uploadCallback.onProgress(msg(msg)); (toString());(msg); } }", "n_tokens": 43, "n_pass": [348, 37, 35]}
{"time": "2021-02-14 19:51:14.214400", "score": "0.9208", "loss": "0.1169", "code": "void handleMessage(Message msg){switch(what){case START:uploadCallbackonProgress(msg(msg)); (toString());(msg); } }", "n_tokens": 42, "n_pass": [350, 38, 36]}
{"time": "2021-02-14 19:51:16.840933", "score": "0.9804", "loss": "0.0216", "code": "void handleMessage(Message msg){switch(what){case START:uploadCallback(msg(msg)); (toString());(msg); } }", "n_tokens": 41, "n_pass": [351, 39, 37]}
{"time": "2021-02-14 19:51:19.476024", "score": "0.9527", "loss": "0.0526", "code": "void handleMessage(Message msg){switch(what){case START:uploadCallback((msg)); (toString());(msg); } }", "n_tokens": 40, "n_pass": [353, 40, 38]}
{"time": "2021-02-14 19:51:22.112292", "score": "0.9527", "loss": "0.0526", "code": "void handleMessage(Message msg){switch(what){case START:uploadCallback((msg));(toString());(msg); } }", "n_tokens": 39, "n_pass": [359, 41, 39]}
{"time": "2021-02-14 19:51:25.582792", "score": "0.4625", "loss": "1.012", "code": "void handleMessage(Message msg){switch(what){case START:((msg));(toString());(msg); } }", "n_tokens": 38, "n_pass": [388, 42, 40]}
{"time": "2021-02-14 19:51:30.182779", "score": "0.4625", "loss": "1.012", "code": "void handleMessage(Message msg){switch(what){case START:((msg));(toString());(msg);} }", "n_tokens": 37, "n_pass": [435, 43, 41]}
{"time": "2021-02-14 19:51:32.838255", "score": "0.4625", "loss": "1.012", "code": "void handleMessage(Message msg){switch(what){case START:((msg));(toString());(msg);}}", "n_tokens": 36, "n_pass": [436, 44, 42]}

Minimal simplified code:
void handleMessage(Message msg){switch(what){case START:((msg));(toString());(msg);}}

