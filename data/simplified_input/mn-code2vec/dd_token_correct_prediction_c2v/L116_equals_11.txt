
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/bcgit__bc-java/prov/src/main/java/org/bouncycastle/jcajce/provider/asymmetric/x509/X509CertificateObject_equals.java
method_name = equals
method_body = public boolean equals(Object o) { if (o == this) { return true; } if (o instanceof X509CertificateObject) { X509CertificateObject other = (X509CertificateObject) o; if (this.hashValueSet && other.hashValueSet) { if (this.hashValue != other.hashValue) { return false; } } return this.c.equals(other.c); } return super.equals(o); }
predict, score, loss = equals, 0.9995059967041016, 0.0006126672378741205

Trace of simplified code(s):
{"time": "2021-02-14 08:37:27.222396", "score": "0.9995", "loss": "0.0006", "code": "public boolean equals(Object o) { if (o == this) { return true; } if (o instanceof X509CertificateObject) { X509CertificateObject other = (X509CertificateObject) o; if (this.hashValueSet && other.hashValueSet) { if (this.hashValue != other.hashValue) { return false; } } return this.c.equals(other.c); } return super.equals(o); }", "n_tokens": 140, "n_pass": [1, 1, 1]}
{"time": "2021-02-14 08:37:29.900533", "score": "0.9997", "loss": "0.0004", "code": "public boolean equals(Object o) { if (o == this) { return true; } if (o instanceof X509CertificateObject) { X5; if (this.hashValueSet && other.hashValueSet) { if (this.hashValue != other.hashValue) { return false; } } return this.c.equals(other.c); } return super.equals(o); }", "n_tokens": 123, "n_pass": [23, 2, 2]}
{"time": "2021-02-14 08:37:32.972483", "score": "0.9915", "loss": "0.0157", "code": "public boolean equals(Object o) { if (o == this) if (o instanceof X509CertificateObject) { X5; if (this.hashValueSet && other.hashValueSet) { if (this.hashValue != other.hashValue) { return false; } } return this.c.equals(other.c); } return super.equals(o); }", "n_tokens": 114, "n_pass": [56, 3, 3]}
{"time": "2021-02-14 08:37:35.660553", "score": "0.9992", "loss": "0.0011", "code": "public boolean equals(Object o) { if (o == this) if (o509CertificateObject) { X5; if (this.hashValueSet && other.hashValueSet) { if (this.hashValue != other.hashValue) { return false; } } return this.c.equals(other.c); } return super.equals(o); }", "n_tokens": 110, "n_pass": [97, 4, 4]}
{"time": "2021-02-14 08:37:38.341056", "score": "0.9993", "loss": "0.001", "code": "public boolean equals(Object o) { if (o == this) if (o) { X5; if (this.hashValueSet && other.hashValueSet) { if (this.hashValue != other.hashValue) { return false; } } return this.c.equals(other.c); } return super.equals(o); }", "n_tokens": 106, "n_pass": [98, 5, 5]}
{"time": "2021-02-14 08:37:41.020976", "score": "0.9993", "loss": "0.0009", "code": "public boolean equals(Object o) { if (o == this) if (o) { if (this.hashValueSet && other.hashValueSet) { if (this.hashValue != other.hashValue) { return false; } } return this.c.equals(other.c); } return super.equals(o); }", "n_tokens": 102, "n_pass": [100, 6, 6]}
{"time": "2021-02-14 08:37:43.680439", "score": "0.9994", "loss": "0.0008", "code": "public boolean equals(Object o) { if (o == this) if (o) { if (this& other.hashValueSet) { if (this.hashValue != other.hashValue) { return false; } } return this.c.equals(other.c); } return super.equals(o); }", "n_tokens": 98, "n_pass": [102, 7, 7]}
{"time": "2021-02-14 08:37:46.332243", "score": "0.9992", "loss": "0.0011", "code": "public boolean equals(Object o) { if (o == this) if (o) { if (thishashValueSet) { if (this.hashValue != other.hashValue) { return false; } } return this.c.equals(other.c); } return super.equals(o); }", "n_tokens": 94, "n_pass": [103, 8, 8]}
{"time": "2021-02-14 08:37:49.002714", "score": "0.9993", "loss": "0.0009", "code": "public boolean equals(Object o) { if (o == this) if (o) { if (thishashValueSet) { if (this.hashValue != other.hashValue) { return false; } } return (other.c); } return super.equals(o); }", "n_tokens": 89, "n_pass": [111, 9, 9]}
{"time": "2021-02-14 08:37:51.666217", "score": "0.9993", "loss": "0.0009", "code": "public boolean equals(Object o) { if (o == this) if (o) { if (thishashValueSet) { if (this.hashValue != other.hashValue) { return false; } } return ; } return super.equals(o); }", "n_tokens": 84, "n_pass": [112, 10, 10]}
{"time": "2021-02-14 08:37:54.732658", "score": "0.9961", "loss": "0.0054", "code": "public boolean equals(Object o) { if ( this) if (o) { if (thishashValueSet) { if (this.hashValue != other.hashValue) { return false; } } return ; } return super.equals(o); }", "n_tokens": 80, "n_pass": [120, 11, 11]}
{"time": "2021-02-14 08:37:57.823405", "score": "0.9954", "loss": "0.006", "code": "public boolean equals(Object o) { if ( this) if (o) { if (thishashValueSet) { if (hashValue != other.hashValue) { return false; } } return ; } return super.equals(o); }", "n_tokens": 78, "n_pass": [187, 12, 12]}
{"time": "2021-02-14 08:38:00.506503", "score": "0.9899", "loss": "0.0122", "code": "public boolean equals(Object o) { if ( this) if (o) { if (thishashValueSet) { if (hashValue != other) { return false; } } return ; } return super.equals(o); }", "n_tokens": 76, "n_pass": [191, 13, 13]}
{"time": "2021-02-14 08:38:03.148125", "score": "0.9864", "loss": "0.017", "code": "public boolean equals(Object o) { if ( this) if (o) { if (thishashValueSet) { if (hashValue != other) { false; } } return ; } return super.equals(o); }", "n_tokens": 74, "n_pass": [194, 14, 14]}
{"time": "2021-02-14 08:38:05.777605", "score": "0.9859", "loss": "0.0176", "code": "public boolean equals(Object o) { if ( this) if (o) { if (thishashValueSet) { if (hashValue != other) { } } return ; } return super.equals(o); }", "n_tokens": 71, "n_pass": [195, 15, 15]}
{"time": "2021-02-14 08:38:08.405274", "score": "0.9859", "loss": "0.0176", "code": "public boolean equals(Object o) { if ( this) if (o) { if (thishashValueSet) { if (hashValue != other) { } }; } return super.equals(o); }", "n_tokens": 68, "n_pass": [197, 16, 16]}
{"time": "2021-02-14 08:38:11.056504", "score": "0.9631", "loss": "0.0561", "code": "public boolean equals(Object o) { if ( this) if (o) { if (thishashValueSet) { if (hashValue != other) { } }; }super.equals(o); }", "n_tokens": 65, "n_pass": [199, 17, 17]}
{"time": "2021-02-14 08:38:13.726391", "score": "0.6169", "loss": "0.5281", "code": "public boolean equals(Object o) { if ( this) if (o) { if (thishashValueSet) { if (hashValue != other) { } }; }(o); }", "n_tokens": 62, "n_pass": [200, 18, 18]}
{"time": "2021-02-14 08:38:16.356685", "score": "0.6205", "loss": "0.5208", "code": "public boolean equals(Object o) { if ( this) if (o) { if (thishashValueSet) { if (hashValue != other) { } }; }; }", "n_tokens": 59, "n_pass": [201, 19, 19]}
{"time": "2021-02-14 08:38:18.990349", "score": "0.6205", "loss": "0.5208", "code": "boolean equals(Object o) { if ( this) if (o) { if (thishashValueSet) { if (hashValue != other) { } }; }; }", "n_tokens": 57, "n_pass": [203, 20, 20]}
{"time": "2021-02-14 08:38:30.380849", "score": "0.6205", "loss": "0.5208", "code": "boolean equals(Object o){ if ( this) if (o) { if (thishashValueSet) { if (hashValue != other) { } }; }; }", "n_tokens": 56, "n_pass": [293, 21, 21]}
{"time": "2021-02-14 08:38:32.995893", "score": "0.6205", "loss": "0.5208", "code": "boolean equals(Object o){if ( this) if (o) { if (thishashValueSet) { if (hashValue != other) { } }; }; }", "n_tokens": 55, "n_pass": [294, 22, 22]}
{"time": "2021-02-14 08:38:35.617168", "score": "0.6205", "loss": "0.5208", "code": "boolean equals(Object o){if( this) if (o) { if (thishashValueSet) { if (hashValue != other) { } }; }; }", "n_tokens": 54, "n_pass": [296, 23, 23]}
{"time": "2021-02-14 08:38:38.252049", "score": "0.6205", "loss": "0.5208", "code": "boolean equals(Object o){if(this) if (o) { if (thishashValueSet) { if (hashValue != other) { } }; }; }", "n_tokens": 53, "n_pass": [298, 24, 24]}
{"time": "2021-02-14 08:38:40.887478", "score": "0.6205", "loss": "0.5208", "code": "boolean equals(Object o){if(this)if (o) { if (thishashValueSet) { if (hashValue != other) { } }; }; }", "n_tokens": 52, "n_pass": [301, 25, 25]}
{"time": "2021-02-14 08:38:43.500506", "score": "0.6205", "loss": "0.5208", "code": "boolean equals(Object o){if(this)if(o) { if (thishashValueSet) { if (hashValue != other) { } }; }; }", "n_tokens": 51, "n_pass": [303, 26, 26]}
{"time": "2021-02-14 08:38:46.124913", "score": "0.6205", "loss": "0.5208", "code": "boolean equals(Object o){if(this)if(o){ if (thishashValueSet) { if (hashValue != other) { } }; }; }", "n_tokens": 50, "n_pass": [307, 27, 27]}
{"time": "2021-02-14 08:38:48.758123", "score": "0.6205", "loss": "0.5208", "code": "boolean equals(Object o){if(this)if(o){if (thishashValueSet) { if (hashValue != other) { } }; }; }", "n_tokens": 49, "n_pass": [309, 28, 28]}
{"time": "2021-02-14 08:38:51.408313", "score": "0.6205", "loss": "0.5208", "code": "boolean equals(Object o){if(this)if(o){if(thishashValueSet) { if (hashValue != other) { } }; }; }", "n_tokens": 48, "n_pass": [311, 29, 29]}
{"time": "2021-02-14 08:38:54.033541", "score": "0.6205", "loss": "0.5208", "code": "boolean equals(Object o){if(this)if(o){if(hashValueSet) { if (hashValue != other) { } }; }; }", "n_tokens": 47, "n_pass": [313, 30, 30]}
{"time": "2021-02-14 08:38:56.655887", "score": "0.6205", "loss": "0.5208", "code": "boolean equals(Object o){if(this)if(o){if(hashValueSet){ if (hashValue != other) { } }; }; }", "n_tokens": 46, "n_pass": [316, 31, 31]}
{"time": "2021-02-14 08:38:59.286009", "score": "0.6205", "loss": "0.5208", "code": "boolean equals(Object o){if(this)if(o){if(hashValueSet){if (hashValue != other) { } }; }; }", "n_tokens": 45, "n_pass": [318, 32, 32]}
{"time": "2021-02-14 08:39:01.922089", "score": "0.6205", "loss": "0.5208", "code": "boolean equals(Object o){if(this)if(o){if(hashValueSet){if(hashValue != other) { } }; }; }", "n_tokens": 44, "n_pass": [320, 33, 33]}
{"time": "2021-02-14 08:39:04.579395", "score": "0.6205", "loss": "0.5208", "code": "boolean equals(Object o){if(this)if(o){if(hashValueSet){if(hashValue!= other) { } }; }; }", "n_tokens": 43, "n_pass": [323, 34, 34]}
{"time": "2021-02-14 08:39:07.201624", "score": "0.8037", "loss": "0.2834", "code": "boolean equals(Object o){if(this)if(o){if(hashValueSet){if(hashValue= other) { } }; }; }", "n_tokens": 42, "n_pass": [324, 35, 35]}
{"time": "2021-02-14 08:39:09.838718", "score": "0.8037", "loss": "0.2834", "code": "boolean equals(Object o){if(this)if(o){if(hashValueSet){if(hashValue=other) { } }; }; }", "n_tokens": 41, "n_pass": [326, 36, 36]}
{"time": "2021-02-14 08:39:12.464962", "score": "0.8037", "loss": "0.2834", "code": "boolean equals(Object o){if(this)if(o){if(hashValueSet){if(hashValue=other){ } }; }; }", "n_tokens": 40, "n_pass": [329, 37, 37]}
{"time": "2021-02-14 08:39:15.129608", "score": "0.8037", "loss": "0.2834", "code": "boolean equals(Object o){if(this)if(o){if(hashValueSet){if(hashValue=other){} }; }; }", "n_tokens": 39, "n_pass": [331, 38, 38]}
{"time": "2021-02-14 08:39:17.740001", "score": "0.8037", "loss": "0.2834", "code": "boolean equals(Object o){if(this)if(o){if(hashValueSet){if(hashValue=other){}}; }; }", "n_tokens": 38, "n_pass": [333, 39, 39]}
{"time": "2021-02-14 08:39:20.361392", "score": "0.8037", "loss": "0.2834", "code": "boolean equals(Object o){if(this)if(o){if(hashValueSet){if(hashValue=other){}}}; }", "n_tokens": 36, "n_pass": [335, 40, 40]}
{"time": "2021-02-14 08:39:23.796527", "score": "0.4197", "loss": "0.938", "code": "boolean equals(Object o){if(this)if(o){if(hashValueSet){if(hashValueother){}}}; }", "n_tokens": 35, "n_pass": [364, 41, 41]}
{"time": "2021-02-14 08:39:26.429115", "score": "0.5025", "loss": "0.7595", "code": "boolean equals(Object o){if(this)if(o){if(hashValueSet){if(hashValue){}}}; }", "n_tokens": 34, "n_pass": [365, 42, 42]}
{"time": "2021-02-14 08:39:30.655244", "score": "0.5025", "loss": "0.7595", "code": "boolean equals(Object o){if(this)if(o){if(hashValueSet){if(hashValue){}}} }", "n_tokens": 33, "n_pass": [403, 43, 43]}
{"time": "2021-02-14 08:39:33.282577", "score": "0.5025", "loss": "0.7595", "code": "boolean equals(Object o){if(this)if(o){if(hashValueSet){if(hashValue){}}}}", "n_tokens": 32, "n_pass": [404, 44, 44]}

Minimal simplified code:
boolean equals(Object o){if(this)if(o){if(hashValueSet){if(hashValue){}}}}

