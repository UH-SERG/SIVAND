
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/dronekit__dronekit-android/ClientLib/src/main/java/com/o3dr/services/android/lib/drone/property/Speed_hashCode.java
method_name = hashCode
method_body = @Override public int hashCode() { int result; long temp; temp = Double.doubleToLongBits(verticalSpeed); result = (int) (temp ^ (temp >>> 32)); temp = Double.doubleToLongBits(groundSpeed); result = 31 * result + (int) (temp ^ (temp >>> 32)); temp = Double.doubleToLongBits(airSpeed); result = 31 * result + (int) (temp ^ (temp >>> 32)); return result; }
predict, score, loss = hashCode, 0.9986473917961121, 0.0013721107970923185

Trace of simplified code(s):
{"time": "2021-02-16 02:17:29.544841", "score": "0.9987", "loss": "0.0013", "code": "@Override public int hashCode() { int result; long temp; temp = Double.doubleToLongBits(verticalSpeed); result = (int) (temp ^ (temp >>> 32)); temp = Double.doubleToLongBits(groundSpeed); result = 31 * result + (int) (temp ^ (temp >>> 32)); temp = Double.doubleToLongBits(airSpeed); result = 31 * result + (int) (temp ^ (temp >>> 32)); return result; }", "n_tokens": 161, "n_pass": [1, 1, 1]}
{"time": "2021-02-16 02:17:32.538396", "score": "0.9991", "loss": "0.0009", "code": "@Override public int hashCode() { int result; long temp; temp = Double.doubleToLongBits(verticalSpeed); result = (int) (temp ^ (temp >>> 32)); temp = Double.doubleToLongBits(groundSpeed); result = 31 * result + (int) (temp ^ (temp >>> 32)); temp result = 31 * result + (int) (temp ^ (temp >>> 32)); return result; }", "n_tokens": 151, "n_pass": [55, 2, 2]}
{"time": "2021-02-16 02:17:35.936688", "score": "0.9989", "loss": "0.0011", "code": "@Override public int hashCode() { int result; long temp; temp = Double.doubleToLongBits(verticalSpeed); result = (int) (temp ^ (temp >>> 32)); temp = Double.doubleToLongBits(groundSpeed); result = 31 * result + (int) (temp ^ (temp >>> 32)); temp result = 3 + (int) (temp ^ (temp >>> 32)); return result; }", "n_tokens": 146, "n_pass": [101, 3, 3]}
{"time": "2021-02-16 02:17:38.636468", "score": "0.9999", "loss": "0.0001", "code": "int hashCode() { int result; long temp; temp = Double.doubleToLongBits(verticalSpeed); result = (int) (temp ^ (temp >>> 32)); temp = Double.doubleToLongBits(groundSpeed); result = 31 * result + (int) (temp ^ (temp >>> 32)); temp result = 3 + (int) (temp ^ (temp >>> 32)); return result; }", "n_tokens": 141, "n_pass": [108, 4, 4]}
{"time": "2021-02-16 02:17:41.600359", "score": "0.9999", "loss": "0.0001", "code": "int hashCode() { int temp; temp = Double.doubleToLongBits(verticalSpeed); result = (int) (temp ^ (temp >>> 32)); temp = Double.doubleToLongBits(groundSpeed); result = 31 * result + (int) (temp ^ (temp >>> 32)); temp result = 3 + (int) (temp ^ (temp >>> 32)); return result; }", "n_tokens": 136, "n_pass": [111, 5, 5]}
{"time": "2021-02-16 02:17:44.186878", "score": "0.9999", "loss": "0.0001", "code": "int hashCode() { int temp; temp (verticalSpeed); result = (int) (temp ^ (temp >>> 32)); temp = Double.doubleToLongBits(groundSpeed); result = 31 * result + (int) (temp ^ (temp >>> 32)); temp result = 3 + (int) (temp ^ (temp >>> 32)); return result; }", "n_tokens": 131, "n_pass": [113, 6, 6]}
{"time": "2021-02-16 02:17:46.822498", "score": "0.9999", "loss": "0.0001", "code": "int hashCode() { int temp; temp result = (int) (temp ^ (temp >>> 32)); temp = Double.doubleToLongBits(groundSpeed); result = 31 * result + (int) (temp ^ (temp >>> 32)); temp result = 3 + (int) (temp ^ (temp >>> 32)); return result; }", "n_tokens": 126, "n_pass": [114, 7, 7]}
{"time": "2021-02-16 02:17:49.503677", "score": "0.9999", "loss": "0.0001", "code": "int hashCode() { int temp; temp result = (int) (temp ^ (temp32)); temp = Double.doubleToLongBits(groundSpeed); result = 31 * result + (int) (temp ^ (temp >>> 32)); temp result = 3 + (int) (temp ^ (temp >>> 32)); return result; }", "n_tokens": 121, "n_pass": [118, 8, 8]}
{"time": "2021-02-16 02:17:52.180624", "score": "0.9999", "loss": "0.0001", "code": "int hashCode() { int temp; temp result = (int) (temp ^ (temp32));Double.doubleToLongBits(groundSpeed); result = 31 * result + (int) (temp ^ (temp >>> 32)); temp result = 3 + (int) (temp ^ (temp >>> 32)); return result; }", "n_tokens": 116, "n_pass": [120, 9, 9]}
{"time": "2021-02-16 02:17:55.173026", "score": "0.7485", "loss": "0.3469", "code": "int hashCode() { int temp; temp result = (int) (temp ^ (temp32));Double.doubleToLongBits(groundSpeed); result = 31 * result +(temp ^ (temp >>> 32)); temp result = 3 + (int) (temp ^ (temp >>> 32)); return result; }", "n_tokens": 111, "n_pass": [125, 10, 10]}
{"time": "2021-02-16 02:17:58.486047", "score": "0.7709", "loss": "0.3077", "code": "int hashCode() { int result = (int) (temp ^ (temp32));Double.doubleToLongBits(groundSpeed); result = 31 * result +(temp ^ (temp >>> 32)); temp result = 3 + (int) (temp ^ (temp >>> 32)); return result; }", "n_tokens": 106, "n_pass": [139, 11, 11]}
{"time": "2021-02-16 02:18:02.544514", "score": "0.707", "loss": "0.4059", "code": "int hashCode() { result = (int) (temp ^ (temp32));Double.doubleToLongBits(groundSpeed); result = 31 * result +(temp ^ (temp >>> 32)); temp result = 3 + (int) (temp ^ (temp >>> 32)); return result; }", "n_tokens": 104, "n_pass": [203, 12, 12]}
{"time": "2021-02-16 02:18:05.131414", "score": "0.7134", "loss": "0.399", "code": "int hashCode() { result = (int) (temp (temp32));Double.doubleToLongBits(groundSpeed); result = 31 * result +(temp ^ (temp >>> 32)); temp result = 3 + (int) (temp ^ (temp >>> 32)); return result; }", "n_tokens": 102, "n_pass": [209, 13, 13]}
{"time": "2021-02-16 02:18:07.714645", "score": "0.7127", "loss": "0.4006", "code": "int hashCode() { result = (int) (temp (2));Double.doubleToLongBits(groundSpeed); result = 31 * result +(temp ^ (temp >>> 32)); temp result = 3 + (int) (temp ^ (temp >>> 32)); return result; }", "n_tokens": 100, "n_pass": [211, 14, 14]}
{"time": "2021-02-16 02:18:10.349733", "score": "0.7132", "loss": "0.3616", "code": "int hashCode() { result = (int) (temp (2));doubleToLongBits(groundSpeed); result = 31 * result +(temp ^ (temp >>> 32)); temp result = 3 + (int) (temp ^ (temp >>> 32)); return result; }", "n_tokens": 98, "n_pass": [214, 15, 15]}
{"time": "2021-02-16 02:18:13.001985", "score": "0.9572", "loss": "0.0459", "code": "int hashCode() { result = (int) (temp (2));doubleToLongBits(groundSpeed); result = 31 *+(temp ^ (temp >>> 32)); temp result = 3 + (int) (temp ^ (temp >>> 32)); return result; }", "n_tokens": 95, "n_pass": [221, 16, 16]}
{"time": "2021-02-16 02:18:15.646090", "score": "0.9571", "loss": "0.0466", "code": "int hashCode() { result = (int) (temp (2));doubleToLongBits(groundSpeed); result = 31 *+(temp(temp >>> 32)); temp result = 3 + (int) (temp ^ (temp >>> 32)); return result; }", "n_tokens": 92, "n_pass": [223, 17, 17]}
{"time": "2021-02-16 02:18:18.286325", "score": "0.9999", "loss": "0.0001", "code": "int hashCode() { result = (int) (temp (2));doubleToLongBits(groundSpeed); result = 31 *+(temp(temp >>> 32));result = 3 + (int) (temp ^ (temp >>> 32)); return result; }", "n_tokens": 89, "n_pass": [228, 18, 18]}
{"time": "2021-02-16 02:18:21.245401", "score": "0.9686", "loss": "0.0335", "code": "int hashCode() { result = (int) (temp (2));doubleToLongBits(groundSpeed); result = 31 *+(temp(temp >>> 32));result =+ (int) (temp ^ (temp >>> 32)); return result; }", "n_tokens": 86, "n_pass": [230, 19, 19]}
{"time": "2021-02-16 02:18:23.800186", "score": "0.8989", "loss": "0.1249", "code": "int hashCode() { result = (int) (temp (2));doubleToLongBits(groundSpeed); result = 31 *+(temp(temp >>> 32));result =+ (int) (temp ^ (temp >32)); return result; }", "n_tokens": 83, "n_pass": [236, 20, 20]}
{"time": "2021-02-16 02:18:26.437540", "score": "0.8945", "loss": "0.1297", "code": "int hashCode() { result = (int) (temp (2));doubleToLongBits(groundSpeed); result = 31 *+(temp(temp >>> 32));result =+ (int) (temp ^ (temp >32)); ; }", "n_tokens": 80, "n_pass": [239, 21, 21]}
{"time": "2021-02-16 02:18:29.423265", "score": "0.9422", "loss": "0.0838", "code": "int hashCode() { result = (int) (temp (2));doubleToLongBits(groundSpeed); result = 3+(temp(temp >>> 32));result =+ (int) (temp ^ (temp >32)); ; }", "n_tokens": 77, "n_pass": [258, 22, 22]}
{"time": "2021-02-16 02:18:32.427205", "score": "0.9419", "loss": "0.084", "code": "int hashCode() { result = (int) (temp (2));doubleToLongBits(groundSpeed); result = 3+(temp(temp >>> 32));result =+ (int) (temp ^ (32)); ; }", "n_tokens": 74, "n_pass": [269, 23, 23]}
{"time": "2021-02-16 02:18:41.094427", "score": "0.9086", "loss": "0.1349", "code": "int hashCode() { result = (int) (temp (2));doubleToLongBits(groundSpeed); result = 3+(temp(temp >>> 32));result =+ (int) (temp (32)); ; }", "n_tokens": 72, "n_pass": [360, 24, 24]}
{"time": "2021-02-16 02:18:43.771720", "score": "0.9086", "loss": "0.1349", "code": "int hashCode() { result = (int) (temp (2));doubleToLongBits(groundSpeed); result = 3+(temp(temp >>> 32));result =+ (int) (temp (32)); }", "n_tokens": 70, "n_pass": [364, 25, 25]}
{"time": "2021-02-16 02:18:47.209787", "score": "0.9086", "loss": "0.1349", "code": "int hashCode(){ result = (int) (temp (2));doubleToLongBits(groundSpeed); result = 3+(temp(temp >>> 32));result =+ (int) (temp (32)); }", "n_tokens": 69, "n_pass": [371, 26, 26]}
{"time": "2021-02-16 02:18:49.846599", "score": "0.9086", "loss": "0.1349", "code": "int hashCode(){result = (int) (temp (2));doubleToLongBits(groundSpeed); result = 3+(temp(temp >>> 32));result =+ (int) (temp (32)); }", "n_tokens": 68, "n_pass": [373, 27, 27]}
{"time": "2021-02-16 02:18:52.423239", "score": "0.9086", "loss": "0.1349", "code": "int hashCode(){result= (int) (temp (2));doubleToLongBits(groundSpeed); result = 3+(temp(temp >>> 32));result =+ (int) (temp (32)); }", "n_tokens": 67, "n_pass": [375, 28, 28]}
{"time": "2021-02-16 02:18:55.037064", "score": "0.9086", "loss": "0.1349", "code": "int hashCode(){result=(int) (temp (2));doubleToLongBits(groundSpeed); result = 3+(temp(temp >>> 32));result =+ (int) (temp (32)); }", "n_tokens": 66, "n_pass": [377, 29, 29]}
{"time": "2021-02-16 02:18:57.620699", "score": "0.9086", "loss": "0.1349", "code": "int hashCode(){result=(int)(temp (2));doubleToLongBits(groundSpeed); result = 3+(temp(temp >>> 32));result =+ (int) (temp (32)); }", "n_tokens": 65, "n_pass": [381, 30, 30]}
{"time": "2021-02-16 02:19:00.239798", "score": "0.9079", "loss": "0.1282", "code": "int hashCode(){result=(int)( (2));doubleToLongBits(groundSpeed); result = 3+(temp(temp >>> 32));result =+ (int) (temp (32)); }", "n_tokens": 64, "n_pass": [383, 31, 31]}
{"time": "2021-02-16 02:19:02.883757", "score": "0.9079", "loss": "0.1282", "code": "int hashCode(){result=(int)((2));doubleToLongBits(groundSpeed); result = 3+(temp(temp >>> 32));result =+ (int) (temp (32)); }", "n_tokens": 63, "n_pass": [384, 32, 32]}
{"time": "2021-02-16 02:19:05.518033", "score": "0.2699", "loss": "1.9758", "code": "int hashCode(){result=(int)((2));(groundSpeed); result = 3+(temp(temp >>> 32));result =+ (int) (temp (32)); }", "n_tokens": 62, "n_pass": [390, 33, 33]}
{"time": "2021-02-16 02:19:08.439885", "score": "0.2699", "loss": "1.9758", "code": "int hashCode(){result=(int)((2));(groundSpeed);result = 3+(temp(temp >>> 32));result =+ (int) (temp (32)); }", "n_tokens": 61, "n_pass": [395, 34, 34]}
{"time": "2021-02-16 02:19:11.064647", "score": "0.2699", "loss": "1.9758", "code": "int hashCode(){result=(int)((2));(groundSpeed);result= 3+(temp(temp >>> 32));result =+ (int) (temp (32)); }", "n_tokens": 60, "n_pass": [397, 35, 35]}
{"time": "2021-02-16 02:19:13.675934", "score": "0.2699", "loss": "1.9758", "code": "int hashCode(){result=(int)((2));(groundSpeed);result=3+(temp(temp >>> 32));result =+ (int) (temp (32)); }", "n_tokens": 59, "n_pass": [399, 36, 36]}
{"time": "2021-02-16 02:19:16.235421", "score": "0.5042", "loss": "1.1339", "code": "int hashCode(){result=(int)((2));(groundSpeed);result=+(temp(temp >>> 32));result =+ (int) (temp (32)); }", "n_tokens": 58, "n_pass": [400, 37, 37]}
{"time": "2021-02-16 02:19:18.805677", "score": "0.4309", "loss": "1.504", "code": "int hashCode(){result=(int)((2));(groundSpeed);result=(temp(temp >>> 32));result =+ (int) (temp (32)); }", "n_tokens": 57, "n_pass": [401, 38, 38]}
{"time": "2021-02-16 02:19:21.384605", "score": "0.6533", "loss": "0.8017", "code": "int hashCode(){result=(int)((2));(groundSpeed);result=((temp >>> 32));result =+ (int) (temp (32)); }", "n_tokens": 56, "n_pass": [403, 39, 39]}
{"time": "2021-02-16 02:19:24.009779", "score": "0.6533", "loss": "0.8017", "code": "int hashCode(){result=(int)((2));(groundSpeed);result=((temp>>> 32));result =+ (int) (temp (32)); }", "n_tokens": 55, "n_pass": [406, 40, 40]}
{"time": "2021-02-16 02:19:26.631967", "score": "0.6133", "loss": "0.8942", "code": "int hashCode(){result=(int)((2));(groundSpeed);result=((temp>> 32));result =+ (int) (temp (32)); }", "n_tokens": 54, "n_pass": [407, 41, 41]}
{"time": "2021-02-16 02:19:29.193417", "score": "0.5192", "loss": "1.1091", "code": "int hashCode(){result=(int)((2));(groundSpeed);result=((temp> 32));result =+ (int) (temp (32)); }", "n_tokens": 53, "n_pass": [408, 42, 42]}
{"time": "2021-02-16 02:19:31.813953", "score": "0.5192", "loss": "1.1091", "code": "int hashCode(){result=(int)((2));(groundSpeed);result=((temp>32));result =+ (int) (temp (32)); }", "n_tokens": 52, "n_pass": [410, 43, 43]}
{"time": "2021-02-16 02:19:34.429460", "score": "0.449", "loss": "1.2681", "code": "int hashCode(){result=(int)((2));(groundSpeed);result=((temp>2));result =+ (int) (temp (32)); }", "n_tokens": 51, "n_pass": [411, 44, 44]}
{"time": "2021-02-16 02:19:37.016125", "score": "0.4098", "loss": "1.3496", "code": "int hashCode(){result=(int)((2));(groundSpeed);result=((temp>2));result =+ (int) ((32)); }", "n_tokens": 49, "n_pass": [419, 45, 45]}
{"time": "2021-02-16 02:19:40.703645", "score": "0.4259", "loss": "1.3066", "code": "int hashCode(){result=(int)((2));(groundSpeed);result((temp>2));result =+ (int) ((32)); }", "n_tokens": 48, "n_pass": [446, 46, 46]}
{"time": "2021-02-16 02:19:43.243434", "score": "0.4508", "loss": "1.2222", "code": "int hashCode(){result=(int)((2));(groundSpeed);result((temp2));result =+ (int) ((32)); }", "n_tokens": 47, "n_pass": [450, 47, 47]}
{"time": "2021-02-16 02:19:46.916895", "score": "0.4684", "loss": "1.1513", "code": "int hashCode(){result=(int)((2));(groundSpeed);((temp2));result =+ (int) ((32)); }", "n_tokens": 46, "n_pass": [483, 48, 48]}
{"time": "2021-02-16 02:19:49.446343", "score": "0.4192", "loss": "1.2966", "code": "int hashCode(){result=(int)((2));(groundSpeed);((2));result =+ (int) ((32)); }", "n_tokens": 45, "n_pass": [486, 49, 49]}
{"time": "2021-02-16 02:19:55.113476", "score": "0.4693", "loss": "1.0438", "code": "int hashCode(){result=(int)((2));(groundSpeed);((2));result = (int) ((32)); }", "n_tokens": 44, "n_pass": [543, 50, 50]}
{"time": "2021-02-16 02:19:57.691842", "score": "0.4693", "loss": "1.0438", "code": "int hashCode(){result=(int)((2));(groundSpeed);((2));result =(int) ((32)); }", "n_tokens": 43, "n_pass": [544, 51, 51]}
{"time": "2021-02-16 02:20:00.326679", "score": "0.4693", "loss": "1.0438", "code": "int hashCode(){result=(int)((2));(groundSpeed);((2));result =(int)((32)); }", "n_tokens": 42, "n_pass": [548, 52, 52]}
{"time": "2021-02-16 02:20:02.862710", "score": "0.3553", "loss": "1.3568", "code": "int hashCode(){result=(int)((2));(groundSpeed);((2));result =(int)((2)); }", "n_tokens": 41, "n_pass": [551, 53, 53]}
{"time": "2021-02-16 02:20:05.448613", "score": "0.3553", "loss": "1.3568", "code": "int hashCode(){result=(int)((2));(groundSpeed);((2));result =(int)((2));}", "n_tokens": 40, "n_pass": [556, 54, 54]}
{"time": "2021-02-16 02:20:09.137422", "score": "0.3553", "loss": "1.3568", "code": "int hashCode(){result=(int)((2));(groundSpeed);((2));result=(int)((2));}", "n_tokens": 39, "n_pass": [586, 55, 55]}

Minimal simplified code:
int hashCode(){result=(int)((2));(groundSpeed);((2));result=(int)((2));}

