
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/singwhatiwanna__android-art-res/Chapter_2/src/com/ryg/chapter_2/aidl/BookManagerService_onTransact.java
method_name = onTransact
method_body = public boolean onTransact(int code, Parcel data, Parcel reply, int flags) throws RemoteException { int check = checkCallingOrSelfPermission("com.ryg.chapter_2.permission.ACCESS_BOOK_SERVICE"); Log.d(TAG, "check=" + check); if (check == PackageManager.PERMISSION_DENIED) { return false; } String packageName = null; String[] packages = getPackageManager().getPackagesForUid(getCallingUid()); if (packages != null && packages.length > 0) { packageName = packages[0]; } Log.d(TAG, "onTransact: " + packageName); if (!packageName.startsWith("com.ryg")) { return false; } return super.onTransact(code, data, reply, flags); }
predict, score, loss = onTransact, 0.9999890327453613, 1.3112935448589269e-05

Trace of simplified code(s):
{"time": "2021-02-14 05:10:41.660970", "score": "1.0", "loss": "0.0", "code": "public boolean onTransact(int code, Parcel data, Parcel reply, int flags) throws RemoteException { int check = checkCallingOrSelfPermission(\"com.ryg.chapter_2.permission.ACCESS_BOOK_SERVICE\"); Log.d(TAG, \"check=\" + check); if (check == PackageManager.PERMISSION_DENIED) { return false; } String packageName = null; String[] packages = getPackageManager().getPackagesForUid(getCallingUid()); if (packages != null && packages.length > 0) { packageName = packages[0]; } Log.d(TAG, \"onTransact: \" + packageName); if (!packageName.startsWith(\"com.ryg\")) { return false; } return super.onTransact(code, data, reply, flags); }", "n_tokens": 231, "n_pass": [1, 1, 1]}
{"time": "2021-02-14 05:10:44.382095", "score": "1.0", "loss": "0.0", "code": "public boolean onTransact(int code, Parcel data, Parcel reply, int flags) throws RemoteException { int check = checkCallingOrSelfPermission(\"com.ryg.chapter_2.permission.ACCESS_BOOK_SERVICE\"); Log.d(TAG, \"check=\" + check); if (check == PackageManager.PERMISSION_DENIED) { return false; } String packageName = null; String[] packages = getPackageManager().getPackagesForUid(getCallingUid()); if (packages != null &&  \"onTransact: \" + packageName); if (!packageName.startsWith(\"com.ryg\")) { return false; } return super.onTransact(code, data, reply, flags); }", "n_tokens": 202, "n_pass": [25, 2, 2]}
{"time": "2021-02-14 05:10:47.081513", "score": "1.0", "loss": "0.0", "code": "public boolean onTransact(int code, Parcel data, Parcel reply, int flags) throws RemoteException { int check = checkCallingOrSelfPermission(\"com.ryg.chapter_2.permission.ACCESS_BOOK_SERVICE\"); Log.d(TAG, \"check=\" + check); if (check == PackageManager.PERMISSION_DENIED) { return false; } String packageName = null; String[] packages = getPackageManager().getPackagesForUid(getCallingUid()); if (packages != null &&  \"onTransact: \" + packageName);  { return false; } return super.onTransact(code, data, reply, flags); }", "n_tokens": 187, "n_pass": [47, 3, 3]}
{"time": "2021-02-14 05:10:49.772046", "score": "1.0", "loss": "0.0", "code": "public boolean onTransact(int code, Parcel data, Parcel reply, int flags) throws RemoteException { int check = checkCallingOrSelfPermission(\"com\"); Log.d(TAG, \"check=\" + check); if (check == PackageManager.PERMISSION_DENIED) { return false; } String packageName = null; String[] packages = getPackageManager().getPackagesForUid(getCallingUid()); if (packages != null &&  \"onTransact: \" + packageName);  { return false; } return super.onTransact(code, data, reply, flags); }", "n_tokens": 173, "n_pass": [53, 4, 4]}
{"time": "2021-02-14 05:10:52.453108", "score": "1.0", "loss": "0.0", "code": "public boolean onTransact(int code, Parcel data, Parcel reply, int flags) throws RemoteException { int check = checkCallingOrSelfPermission(\"com\" + check); if (check == PackageManager.PERMISSION_DENIED) { return false; } String packageName = null; String[] packages = getPackageManager().getPackagesForUid(getCallingUid()); if (packages != null &&  \"onTransact: \" + packageName);  { return false; } return super.onTransact(code, data, reply, flags); }", "n_tokens": 159, "n_pass": [54, 5, 5]}
{"time": "2021-02-14 05:10:55.151830", "score": "1.0", "loss": "0.0", "code": "public boolean onTransact(int code, Parcel data, Parcel reply, int flags) throws RemoteException { int check = checkCallingOrSelfPermission(\"com\" + check); if (check == PackageManager.PERMISSION_DENIED) { return false; } String packageName = null; StringgetPackageManager().getPackagesForUid(getCallingUid()); if (packages != null &&  \"onTransact: \" + packageName);  { return false; } return super.onTransact(code, data, reply, flags); }", "n_tokens": 152, "n_pass": [94, 6, 6]}
{"time": "2021-02-14 05:10:57.884375", "score": "1.0", "loss": "0.0", "code": "public boolean onTransact(int code, Parcel data, Parcel reply, int flags) throws RemoteException { int check = checkCallingOrSelfPermission(\"com\" + check); if (check == PackageManager.PERMISSION_DENIED) { return false; } String packageName = getPackageManager().getPackagesForUid(getCallingUid()); if (packages != null &&  \"onTransact: \" + packageName);  { return false; } return super.onTransact(code, data, reply, flags); }", "n_tokens": 148, "n_pass": [158, 7, 7]}
{"time": "2021-02-14 05:11:00.576955", "score": "1.0", "loss": "0.0", "code": "public boolean onTransact(int code, Parcel data, Parcel reply, int flags) throws RemoteException { int check = checkCallingOrSelfPermission(\"com\" + check); if (check == PackageManager.PERMISSION_DENIED) { return false; } String packageName = getPackagesForUid(getCallingUid()); if (packages != null &&  \"onTransact: \" + packageName);  { return false; } return super.onTransact(code, data, reply, flags); }", "n_tokens": 144, "n_pass": [159, 8, 8]}
{"time": "2021-02-14 05:11:03.254528", "score": "1.0", "loss": "0.0", "code": "public boolean onTransact(int code, Parcel data, Parcel reply, int flags) throws RemoteException { int check = checkCallingOrSelfPermission(\"com\" + check); if (check == PackageManager.PERMISSION_DENIED) { return false; } String packageName = getPackagesForUid(getCallingUid()); if (packagesnull &&  \"onTransact: \" + packageName);  { return false; } return super.onTransact(code, data, reply, flags); }", "n_tokens": 140, "n_pass": [163, 9, 9]}
{"time": "2021-02-14 05:11:05.932120", "score": "1.0", "loss": "0.0", "code": "public boolean onTransact(int code, Parcel data, Parcel reply, int flags) throws RemoteException { int check = checkCallingOrSelfPermission(\"com\" + check); if (check == PackageManager.PERMISSION_DENIED) { return false; } String packageName = getPackagesForUid(getCallingUid()); if (packagesnull &&  \"onTransact: \" + packageName);  {; } return super.onTransact(code, data, reply, flags); }", "n_tokens": 136, "n_pass": [169, 10, 10]}
{"time": "2021-02-14 05:11:08.599228", "score": "1.0", "loss": "0.0", "code": "public boolean onTransact(int code, Parcel data, Parcel reply, int flags) throws RemoteException { int check = checkCallingOrSelfPermission(\"com\" + check); if (check == PackageManager.PERMISSION_DENIED) { return false; } String packageName = getPackagesForUid(getCallingUid()); if (packagesnull &&  \"onTransact: \" + packageName);  {; } onTransact(code, data, reply, flags); }", "n_tokens": 132, "n_pass": [171, 11, 11]}
{"time": "2021-02-14 05:11:11.267875", "score": "1.0", "loss": "0.0", "code": "public boolean onTransact(int code, Parcel data, Parcel reply, int flags) throws RemoteException { int check = checkCallingOrSelfPermission(\"com\" + check); if (check == PackageManager.PERMISSION_DENIED) { return false; } String packageName = getPackagesForUid(getCallingUid()); if (packagesnull &&  \"onTransact: \" + packageName);  {; } onTransact(code,reply, flags); }", "n_tokens": 128, "n_pass": [173, 12, 12]}
{"time": "2021-02-14 05:11:14.368765", "score": "1.0", "loss": "0.0", "code": "public boolean onTransact(int code, Parcel data, Parcel reply, int flags) throws RemoteException { int check = checkCallingOrSelfPermission(\"com\" + check); if (check =PERMISSION_DENIED) { return false; } String packageName = getPackagesForUid(getCallingUid()); if (packagesnull &&  \"onTransact: \" + packageName);  {; } onTransact(code,reply, flags); }", "n_tokens": 124, "n_pass": [194, 13, 13]}
{"time": "2021-02-14 05:11:22.005533", "score": "1.0", "loss": "0.0", "code": "public boolean onTransact(int code, Parcel data, Parcel reply, int flags) throws RemoteException { int check = checkCallingOrSelfPermission(\"com\" + check); if (check =DENIED) { return false; } String packageName = getPackagesForUid(getCallingUid()); if (packagesnull &&  \"onTransact: \" + packageName);  {; } onTransact(code,reply, flags); }", "n_tokens": 122, "n_pass": [300, 14, 14]}
{"time": "2021-02-14 05:11:24.668007", "score": "1.0", "loss": "0.0", "code": "public boolean onTransact(int code, Parcel data, Parcel reply, int flags) throws RemoteException { int check = checkCallingOrSelfPermission(\"com\" + check); if (check =DENIED) { false; } String packageName = getPackagesForUid(getCallingUid()); if (packagesnull &&  \"onTransact: \" + packageName);  {; } onTransact(code,reply, flags); }", "n_tokens": 120, "n_pass": [302, 15, 15]}
{"time": "2021-02-14 05:11:27.340204", "score": "1.0", "loss": "0.0", "code": "public boolean onTransact(int code, Parcel data, Parcel reply, int flags) throws RemoteException { int check = checkCallingOrSelfPermission(\"com\" + check); if (check =DENIED) {; } String packageName = getPackagesForUid(getCallingUid()); if (packagesnull &&  \"onTransact: \" + packageName);  {; } onTransact(code,reply, flags); }", "n_tokens": 118, "n_pass": [303, 16, 16]}
{"time": "2021-02-14 05:11:30.018359", "score": "1.0", "loss": "0.0", "code": "public boolean onTransact(int code, Parcel data, Parcel reply, int flags) throws RemoteException { int check = checkCallingOrSelfPermission(\"com\" + check); if (check =DENIED) {} String packageName = getPackagesForUid(getCallingUid()); if (packagesnull &&  \"onTransact: \" + packageName);  {; } onTransact(code,reply, flags); }", "n_tokens": 116, "n_pass": [304, 17, 17]}
{"time": "2021-02-14 05:11:32.684421", "score": "1.0", "loss": "0.0", "code": "public boolean onTransact(int code, Parcel data, Parcel reply, int flags) throws RemoteException { int check = checkCallingOrSelfPermission(\"com\" + check); if (check =DENIED) {} packageName = getPackagesForUid(getCallingUid()); if (packagesnull &&  \"onTransact: \" + packageName);  {; } onTransact(code,reply, flags); }", "n_tokens": 114, "n_pass": [306, 18, 18]}
{"time": "2021-02-14 05:11:35.348818", "score": "1.0", "loss": "0.0", "code": "public boolean onTransact(int code, Parcel data, Parcel reply, int flags) throws RemoteException { int check = checkCallingOrSelfPermission(\"com\" + check); if (check =DENIED) {} packageName = getPackagesForUid(getCallingUid()); (packagesnull &&  \"onTransact: \" + packageName);  {; } onTransact(code,reply, flags); }", "n_tokens": 112, "n_pass": [313, 19, 19]}
{"time": "2021-02-14 05:11:38.006461", "score": "1.0", "loss": "0.0", "code": "public boolean onTransact(int code, Parcel data, Parcel reply, int flags) throws RemoteException { int check = checkCallingOrSelfPermission(\"com\" + check); if (check =DENIED) {} packageName = getPackagesForUid(getCallingUid()); (packages&&  \"onTransact: \" + packageName);  {; } onTransact(code,reply, flags); }", "n_tokens": 110, "n_pass": [315, 20, 20]}
{"time": "2021-02-14 05:11:40.660823", "score": "1.0", "loss": "0.0", "code": "public boolean onTransact(int code, Parcel data, Parcel reply, int flags) throws RemoteException { int check = checkCallingOrSelfPermission(\"com\" + check); if (check =DENIED) {} packageName = getPackagesForUid(getCallingUid()); (packages&&\"onTransact: \" + packageName);  {; } onTransact(code,reply, flags); }", "n_tokens": 108, "n_pass": [317, 21, 21]}
{"time": "2021-02-14 05:11:43.309814", "score": "1.0", "loss": "0.0", "code": "public boolean onTransact(int code, Parcel data, Parcel reply, int flags) throws RemoteException { int check = checkCallingOrSelfPermission(\"com\" + check); if (check =DENIED) {} packageName = getPackagesForUid(getCallingUid()); (packages&&\"onTransact\" + packageName);  {; } onTransact(code,reply, flags); }", "n_tokens": 106, "n_pass": [319, 22, 22]}
{"time": "2021-02-14 05:11:45.975018", "score": "1.0", "loss": "0.0", "code": "public boolean onTransact(int code, Parcel data, Parcel reply, int flags) throws RemoteException { int check = checkCallingOrSelfPermission(\"com\" + check); if (check =DENIED) {} packageName = getPackagesForUid(getCallingUid()); (packages&&\"onTransact\" + packageName);  {} onTransact(code,reply, flags); }", "n_tokens": 104, "n_pass": [325, 23, 23]}
{"time": "2021-02-14 05:11:48.651314", "score": "1.0", "loss": "0.0", "code": "public boolean onTransact(int code, Parcel data, Parcel reply, int flags) throws RemoteException { int check = checkCallingOrSelfPermission(\"com\" + check); if (check =DENIED) {} packageName = getPackagesForUid(getCallingUid()); (packages&&\"onTransact\" + packageName);  {} onTransact(reply, flags); }", "n_tokens": 102, "n_pass": [328, 24, 24]}
{"time": "2021-02-14 05:11:51.303055", "score": "0.9999", "loss": "0.0001", "code": "public boolean onTransact(int code, Parcel data, Parcel reply, int flags) throws RemoteException { int check = checkCallingOrSelfPermission(\"com\" + check); if (check =DENIED) {} packageName = getPackagesForUid(getCallingUid()); (packages&&\"onTransact\" + packageName);  {} onTransact( flags); }", "n_tokens": 100, "n_pass": [329, 25, 25]}
{"time": "2021-02-14 05:11:53.974622", "score": "0.9999", "loss": "0.0001", "code": "public boolean onTransact(int code, Parcel data, Parcel reply, int flags) throws RemoteException { int check = checkCallingOrSelfPermission(\"com\" + check); if (check =DENIED) {} packageName = getPackagesForUid(getCallingUid()); (packages&&\"onTransact\" + packageName);  {} onTransact(); }", "n_tokens": 98, "n_pass": [330, 26, 26]}
{"time": "2021-02-14 05:11:56.647906", "score": "0.9999", "loss": "0.0001", "code": " boolean onTransact(int code, Parcel data, Parcel reply, int flags) throws RemoteException { int check = checkCallingOrSelfPermission(\"com\" + check); if (check =DENIED) {} packageName = getPackagesForUid(getCallingUid()); (packages&&\"onTransact\" + packageName);  {} onTransact(); }", "n_tokens": 97, "n_pass": [333, 27, 27]}
{"time": "2021-02-14 05:11:59.311512", "score": "0.9999", "loss": "0.0001", "code": "boolean onTransact(int code, Parcel data, Parcel reply, int flags) throws RemoteException { int check = checkCallingOrSelfPermission(\"com\" + check); if (check =DENIED) {} packageName = getPackagesForUid(getCallingUid()); (packages&&\"onTransact\" + packageName);  {} onTransact(); }", "n_tokens": 96, "n_pass": [334, 28, 28]}
{"time": "2021-02-14 05:12:02.804632", "score": "0.9999", "loss": "0.0001", "code": "boolean onTransact(int code,Parcel data, Parcel reply, int flags) throws RemoteException { int check = checkCallingOrSelfPermission(\"com\" + check); if (check =DENIED) {} packageName = getPackagesForUid(getCallingUid()); (packages&&\"onTransact\" + packageName);  {} onTransact(); }", "n_tokens": 95, "n_pass": [343, 29, 29]}
{"time": "2021-02-14 05:12:05.488239", "score": "0.9999", "loss": "0.0001", "code": "boolean onTransact(int code,Parcel data,Parcel reply, int flags) throws RemoteException { int check = checkCallingOrSelfPermission(\"com\" + check); if (check =DENIED) {} packageName = getPackagesForUid(getCallingUid()); (packages&&\"onTransact\" + packageName);  {} onTransact(); }", "n_tokens": 94, "n_pass": [348, 30, 30]}
{"time": "2021-02-14 05:12:08.140319", "score": "0.9999", "loss": "0.0001", "code": "boolean onTransact(int code,Parcel data,Parcel reply, int flags) throws RemoteException { check = checkCallingOrSelfPermission(\"com\" + check); if (check =DENIED) {} packageName = getPackagesForUid(getCallingUid()); (packages&&\"onTransact\" + packageName);  {} onTransact(); }", "n_tokens": 92, "n_pass": [357, 31, 31]}
{"time": "2021-02-14 05:12:10.823459", "score": "0.9999", "loss": "0.0001", "code": "boolean onTransact(int code,Parcel data,Parcel reply, int flags) throws RemoteException { check = checkCallingOrSelfPermission(\"com\" + check); if (checkDENIED) {} packageName = getPackagesForUid(getCallingUid()); (packages&&\"onTransact\" + packageName);  {} onTransact(); }", "n_tokens": 90, "n_pass": [368, 32, 32]}
{"time": "2021-02-14 05:12:24.831658", "score": "0.9999", "loss": "0.0001", "code": "boolean onTransact(int code,Parcel data,Parcel reply, int flags) throws RemoteException { check = checkCallingOrSelfPermission(\"com\" + check); if (checkDENIED) {}packageName = getPackagesForUid(getCallingUid()); (packages&&\"onTransact\" + packageName);  {} onTransact(); }", "n_tokens": 89, "n_pass": [499, 33, 33]}
{"time": "2021-02-14 05:12:27.478117", "score": "0.9999", "loss": "0.0001", "code": "boolean onTransact(int code,Parcel data,Parcel reply, int flags) throws RemoteException { check = checkCallingOrSelfPermission(\"com\" + check); if (checkDENIED) {}packageName= getPackagesForUid(getCallingUid()); (packages&&\"onTransact\" + packageName);  {} onTransact(); }", "n_tokens": 88, "n_pass": [501, 34, 34]}
{"time": "2021-02-14 05:12:30.123560", "score": "0.9999", "loss": "0.0001", "code": "boolean onTransact(int code,Parcel data,Parcel reply, int flags) throws RemoteException { check = checkCallingOrSelfPermission(\"com\" + check); if (checkDENIED) {}packageName=getPackagesForUid(getCallingUid()); (packages&&\"onTransact\" + packageName);  {} onTransact(); }", "n_tokens": 87, "n_pass": [503, 35, 35]}
{"time": "2021-02-14 05:12:32.770670", "score": "0.9999", "loss": "0.0001", "code": "boolean onTransact(int code,Parcel data,Parcel reply, int flags) throws RemoteException { check = checkCallingOrSelfPermission(\"com\" + check); if (checkDENIED) {}packageName=(getCallingUid()); (packages&&\"onTransact\" + packageName);  {} onTransact(); }", "n_tokens": 86, "n_pass": [504, 36, 36]}
{"time": "2021-02-14 05:12:35.434145", "score": "0.9999", "loss": "0.0001", "code": "boolean onTransact(int code,Parcel data,Parcel reply, int flags) throws RemoteException { check = checkCallingOrSelfPermission(\"com\" + check); if (checkDENIED) {}packageName=(getCallingUid());(packages&&\"onTransact\" + packageName);  {} onTransact(); }", "n_tokens": 85, "n_pass": [511, 37, 37]}
{"time": "2021-02-14 05:12:38.078372", "score": "0.9999", "loss": "0.0001", "code": "boolean onTransact(int code,Parcel data,Parcel reply, int flags) throws RemoteException { check = checkCallingOrSelfPermission(\"com\" + check); if (checkDENIED) {}packageName=(getCallingUid());(packages&\"onTransact\" + packageName);  {} onTransact(); }", "n_tokens": 84, "n_pass": [514, 38, 38]}
{"time": "2021-02-14 05:12:40.726080", "score": "0.999", "loss": "0.0011", "code": "boolean onTransact(int code,Parcel data,Parcel reply, int flags) throws RemoteException { check = checkCallingOrSelfPermission(\"com\" + check); if (checkDENIED) {}packageName=(getCallingUid());(packages&\"\" + packageName);  {} onTransact(); }", "n_tokens": 83, "n_pass": [517, 39, 39]}
{"time": "2021-02-14 05:12:43.363872", "score": "0.999", "loss": "0.0011", "code": "boolean onTransact(int code,Parcel data,Parcel reply, int flags) throws RemoteException { check = checkCallingOrSelfPermission(\"com\" + check); if (checkDENIED) {}packageName=(getCallingUid());(packages&\"\"+ packageName);  {} onTransact(); }", "n_tokens": 82, "n_pass": [519, 40, 40]}
{"time": "2021-02-14 05:12:46.027985", "score": "0.999", "loss": "0.0011", "code": "boolean onTransact(int code,Parcel data,Parcel reply, int flags) throws RemoteException { check = checkCallingOrSelfPermission(\"com\" + check); if (checkDENIED) {}packageName=(getCallingUid());(packages&\"\"+packageName);  {} onTransact(); }", "n_tokens": 81, "n_pass": [521, 41, 41]}
{"time": "2021-02-14 05:12:48.709979", "score": "0.999", "loss": "0.0011", "code": "boolean onTransact(int code,Parcel data,Parcel reply, int flags) throws RemoteException { check = checkCallingOrSelfPermission(\"com\" + check); if (checkDENIED) {}packageName=(getCallingUid());(packages&\"\"+packageName); {} onTransact(); }", "n_tokens": 80, "n_pass": [525, 42, 42]}
{"time": "2021-02-14 05:12:51.354626", "score": "0.999", "loss": "0.0011", "code": "boolean onTransact(int code,Parcel data,Parcel reply, int flags) throws RemoteException { check = checkCallingOrSelfPermission(\"com\" + check); if (checkDENIED) {}packageName=(getCallingUid());(packages&\"\"+packageName);{} onTransact(); }", "n_tokens": 79, "n_pass": [526, 43, 43]}
{"time": "2021-02-14 05:12:53.999313", "score": "0.999", "loss": "0.0011", "code": "boolean onTransact(int code,Parcel data,Parcel reply, int flags) throws RemoteException { check = checkCallingOrSelfPermission(\"com\" + check); if (checkDENIED) {}packageName=(getCallingUid());(packages&\"\"+packageName);{}onTransact(); }", "n_tokens": 78, "n_pass": [529, 44, 44]}
{"time": "2021-02-14 05:12:56.649582", "score": "0.999", "loss": "0.0011", "code": "boolean onTransact(int code,Parcel data,Parcel reply, int flags) throws RemoteException { check = checkCallingOrSelfPermission(\"com\" + check); if (checkDENIED) {}packageName=(getCallingUid());(packages&\"\"+packageName);{}onTransact();}", "n_tokens": 77, "n_pass": [534, 45, 45]}
{"time": "2021-02-14 05:13:00.119607", "score": "0.999", "loss": "0.0011", "code": "boolean onTransact(int code,Parcel data,Parcel reply,int flags) throws RemoteException { check = checkCallingOrSelfPermission(\"com\" + check); if (checkDENIED) {}packageName=(getCallingUid());(packages&\"\"+packageName);{}onTransact();}", "n_tokens": 76, "n_pass": [552, 46, 46]}
{"time": "2021-02-14 05:13:02.768720", "score": "0.999", "loss": "0.0011", "code": "boolean onTransact(int code,Parcel data,Parcel reply,int flags)throws RemoteException { check = checkCallingOrSelfPermission(\"com\" + check); if (checkDENIED) {}packageName=(getCallingUid());(packages&\"\"+packageName);{}onTransact();}", "n_tokens": 75, "n_pass": [557, 47, 47]}
{"time": "2021-02-14 05:13:05.418353", "score": "0.999", "loss": "0.0011", "code": "boolean onTransact(int code,Parcel data,Parcel reply,int flags)throws RemoteException{ check = checkCallingOrSelfPermission(\"com\" + check); if (checkDENIED) {}packageName=(getCallingUid());(packages&\"\"+packageName);{}onTransact();}", "n_tokens": 74, "n_pass": [561, 48, 48]}
{"time": "2021-02-14 05:13:08.079654", "score": "0.999", "loss": "0.0011", "code": "boolean onTransact(int code,Parcel data,Parcel reply,int flags)throws RemoteException{check = checkCallingOrSelfPermission(\"com\" + check); if (checkDENIED) {}packageName=(getCallingUid());(packages&\"\"+packageName);{}onTransact();}", "n_tokens": 73, "n_pass": [563, 49, 49]}
{"time": "2021-02-14 05:13:10.723337", "score": "0.999", "loss": "0.0011", "code": "boolean onTransact(int code,Parcel data,Parcel reply,int flags)throws RemoteException{check= checkCallingOrSelfPermission(\"com\" + check); if (checkDENIED) {}packageName=(getCallingUid());(packages&\"\"+packageName);{}onTransact();}", "n_tokens": 72, "n_pass": [565, 50, 50]}
{"time": "2021-02-14 05:13:13.374066", "score": "0.999", "loss": "0.0011", "code": "boolean onTransact(int code,Parcel data,Parcel reply,int flags)throws RemoteException{check=checkCallingOrSelfPermission(\"com\" + check); if (checkDENIED) {}packageName=(getCallingUid());(packages&\"\"+packageName);{}onTransact();}", "n_tokens": 71, "n_pass": [567, 51, 51]}
{"time": "2021-02-14 05:13:16.038810", "score": "0.9992", "loss": "0.0009", "code": "boolean onTransact(int code,Parcel data,Parcel reply,int flags)throws RemoteException{check=(\"com\" + check); if (checkDENIED) {}packageName=(getCallingUid());(packages&\"\"+packageName);{}onTransact();}", "n_tokens": 70, "n_pass": [568, 52, 52]}
{"time": "2021-02-14 05:13:18.712573", "score": "0.9992", "loss": "0.0009", "code": "boolean onTransact(int code,Parcel data,Parcel reply,int flags)throws RemoteException{check=(\"\" + check); if (checkDENIED) {}packageName=(getCallingUid());(packages&\"\"+packageName);{}onTransact();}", "n_tokens": 69, "n_pass": [571, 53, 53]}
{"time": "2021-02-14 05:13:21.365291", "score": "0.9992", "loss": "0.0009", "code": "boolean onTransact(int code,Parcel data,Parcel reply,int flags)throws RemoteException{check=(\"\"+ check); if (checkDENIED) {}packageName=(getCallingUid());(packages&\"\"+packageName);{}onTransact();}", "n_tokens": 68, "n_pass": [573, 54, 54]}
{"time": "2021-02-14 05:13:24.003352", "score": "0.9992", "loss": "0.0009", "code": "boolean onTransact(int code,Parcel data,Parcel reply,int flags)throws RemoteException{check=(\"\"+check); if (checkDENIED) {}packageName=(getCallingUid());(packages&\"\"+packageName);{}onTransact();}", "n_tokens": 67, "n_pass": [575, 55, 55]}
{"time": "2021-02-14 05:13:26.644221", "score": "0.9992", "loss": "0.0009", "code": "boolean onTransact(int code,Parcel data,Parcel reply,int flags)throws RemoteException{check=(\"\"+check);if (checkDENIED) {}packageName=(getCallingUid());(packages&\"\"+packageName);{}onTransact();}", "n_tokens": 66, "n_pass": [579, 56, 56]}
{"time": "2021-02-14 05:13:29.314942", "score": "0.9992", "loss": "0.0009", "code": "boolean onTransact(int code,Parcel data,Parcel reply,int flags)throws RemoteException{check=(\"\"+check);if(checkDENIED) {}packageName=(getCallingUid());(packages&\"\"+packageName);{}onTransact();}", "n_tokens": 65, "n_pass": [581, 57, 57]}
{"time": "2021-02-14 05:13:31.984692", "score": "0.999", "loss": "0.0011", "code": "boolean onTransact(int code,Parcel data,Parcel reply,int flags)throws RemoteException{check=(\"\"+check);if(DENIED) {}packageName=(getCallingUid());(packages&\"\"+packageName);{}onTransact();}", "n_tokens": 64, "n_pass": [583, 58, 58]}
{"time": "2021-02-14 05:13:34.628446", "score": "0.999", "loss": "0.0011", "code": "boolean onTransact(int code,Parcel data,Parcel reply,int flags)throws RemoteException{check=(\"\"+check);if(DENIED){}packageName=(getCallingUid());(packages&\"\"+packageName);{}onTransact();}", "n_tokens": 63, "n_pass": [586, 59, 59]}
{"time": "2021-02-14 05:13:37.307520", "score": "0.9991", "loss": "0.0009", "code": "boolean onTransact(int code,Parcel data,Parcel reply,int flags)throws RemoteException{check=(\"\"+check);if(DENIED){}packageName(getCallingUid());(packages&\"\"+packageName);{}onTransact();}", "n_tokens": 62, "n_pass": [590, 60, 60]}
{"time": "2021-02-14 05:13:40.789920", "score": "0.9983", "loss": "0.0019", "code": "boolean onTransact(int code,Parcel data,Parcel reply,int flags)throws RemoteException{check(\"\"+check);if(DENIED){}packageName(getCallingUid());(packages&\"\"+packageName);{}onTransact();}", "n_tokens": 61, "n_pass": [638, 61, 61]}
{"time": "2021-02-14 05:13:43.457139", "score": "0.9986", "loss": "0.0015", "code": "boolean onTransact(int code,Parcel data,Parcel reply,int flags)throws RemoteException{check(\"\"+check);if(DENIED){}(getCallingUid());(packages&\"\"+packageName);{}onTransact();}", "n_tokens": 60, "n_pass": [652, 62, 62]}
{"time": "2021-02-14 05:13:46.944960", "score": "0.9994", "loss": "0.0006", "code": "boolean onTransact(int code,Parcel data,Parcel reply,int flags)throws RemoteException{(\"\"+check);if(DENIED){}(getCallingUid());(packages&\"\"+packageName);{}onTransact();}", "n_tokens": 59, "n_pass": [699, 63, 63]}

Minimal simplified code:
boolean onTransact(int code,Parcel data,Parcel reply,int flags)throws RemoteException{(""+check);if(DENIED){}(getCallingUid());(packages&""+packageName);{}onTransact();}

