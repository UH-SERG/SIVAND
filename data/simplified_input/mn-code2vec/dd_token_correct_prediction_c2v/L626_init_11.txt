
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/bcgit__bc-java/core/src/main/java/org/bouncycastle/crypto/signers/X931Signer_init.java
method_name = init
method_body = public void init(boolean forSigning, CipherParameters param) { kParam = (RSAKeyParameters) param; cipher.init(forSigning, kParam); keyBits = kParam.getModulus().bitLength(); block = new byte[(keyBits + 7) / 8]; reset(); }
predict, score, loss = init, 0.9999465942382812, 8.77341881277971e-05

Trace of simplified code(s):
{"time": "2021-02-15 01:00:17.839750", "score": "0.9999", "loss": "0.0001", "code": "public void init(boolean forSigning, CipherParameters param) { kParam = (RSAKeyParameters) param; cipher.init(forSigning, kParam); keyBits = kParam.getModulus().bitLength(); block = new byte[(keyBits + 7) / 8]; reset(); }", "n_tokens": 83, "n_pass": [1, 1, 1]}
{"time": "2021-02-15 01:00:20.562501", "score": "1.0", "loss": "0.0", "code": "public void init(boolean forSigning, CipherParameters param) { kParam  = kParam.getModulus().bitLength(); block = new byte[(keyBits + 7) / 8]; reset(); }", "n_tokens": 62, "n_pass": [9, 2, 2]}
{"time": "2021-02-15 01:00:23.213232", "score": "1.0", "loss": "0.0001", "code": "public void init(boolean forSigning, CipherParameters param) { kParam [(keyBits + 7) / 8]; reset(); }", "n_tokens": 41, "n_pass": [10, 3, 3]}
{"time": "2021-02-15 01:00:25.889767", "score": "0.9999", "loss": "0.0001", "code": "public void init(boolean forSigning, CipherParameters param) { kParam [(keyBits7) / 8]; reset(); }", "n_tokens": 38, "n_pass": [53, 4, 4]}
{"time": "2021-02-15 01:00:28.537127", "score": "1.0", "loss": "0.0", "code": "public void init(boolean forSigning, CipherParameters param) { kParam [(keyBits7) ]; reset(); }", "n_tokens": 35, "n_pass": [55, 5, 5]}
{"time": "2021-02-15 01:00:31.156488", "score": "1.0", "loss": "0.0", "code": "public void init(boolean forSigning, CipherParameters param) { kParam [(keyBits7) ]; ; }", "n_tokens": 32, "n_pass": [57, 6, 6]}
{"time": "2021-02-15 01:00:33.987264", "score": "1.0", "loss": "0.0", "code": "void init(boolean forSigning, CipherParameters param) { kParam [(keyBits7) ]; ; }", "n_tokens": 30, "n_pass": [59, 7, 7]}
{"time": "2021-02-15 01:00:40.968616", "score": "1.0", "loss": "0.0", "code": "void init(boolean forSigning,CipherParameters param) { kParam [(keyBits7) ]; ; }", "n_tokens": 29, "n_pass": [104, 8, 8]}
{"time": "2021-02-15 01:00:43.587736", "score": "1.0", "loss": "0.0", "code": "void init(boolean forSigning,CipherParameters param){ kParam [(keyBits7) ]; ; }", "n_tokens": 28, "n_pass": [108, 9, 9]}
{"time": "2021-02-15 01:00:46.202694", "score": "1.0", "loss": "0.0", "code": "void init(boolean forSigning,CipherParameters param){kParam [(keyBits7) ]; ; }", "n_tokens": 27, "n_pass": [110, 10, 10]}
{"time": "2021-02-15 01:00:48.864272", "score": "1.0", "loss": "0.0", "code": "void init(boolean forSigning,CipherParameters param){kParam[(keyBits7) ]; ; }", "n_tokens": 26, "n_pass": [112, 11, 11]}
{"time": "2021-02-15 01:00:51.488994", "score": "1.0", "loss": "0.0", "code": "void init(boolean forSigning,CipherParameters param){kParam[(keyBits7) ]; }", "n_tokens": 24, "n_pass": [117, 12, 12]}
{"time": "2021-02-15 01:00:56.090349", "score": "1.0", "loss": "0.0", "code": "void init(boolean forSigning,CipherParameters param){kParam[(keyBits7) ];}", "n_tokens": 23, "n_pass": [147, 13, 13]}
{"time": "2021-02-15 01:00:59.566190", "score": "1.0", "loss": "0.0", "code": "void init(boolean forSigning,CipherParameters param){kParam[(7) ];}", "n_tokens": 22, "n_pass": [164, 14, 14]}
{"time": "2021-02-15 01:01:02.285942", "score": "1.0", "loss": "0.0", "code": "void init(boolean forSigning,CipherParameters param){kParam[(7)];}", "n_tokens": 21, "n_pass": [167, 15, 15]}

Minimal simplified code:
void init(boolean forSigning,CipherParameters param){kParam[(7)];}

