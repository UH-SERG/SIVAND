
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/dronekit__dronekit-android/dependencyLibs/Mavlink/src/com/MAVLink/ardupilotmega/msg_fence_fetch_point_pack.java
method_name = pack
method_body = public MAVLinkPacket pack() { MAVLinkPacket packet = new MAVLinkPacket(MAVLINK_MSG_LENGTH); packet.sysid = 255; packet.compid = 190; packet.msgid = MAVLINK_MSG_ID_FENCE_FETCH_POINT; packet.payload.putUnsignedByte(target_system); packet.payload.putUnsignedByte(target_component); packet.payload.putUnsignedByte(idx); return packet; }
predict, score, loss = pack, 0.9928154945373535, 0.01683340035378933

Trace of simplified code(s):
{"time": "2021-02-16 04:55:41.302633", "score": "0.9926", "loss": "0.0171", "code": "public MAVLinkPacket pack() { MAVLinkPacket packet = new MAVLinkPacket(MAVLINK_MSG_LENGTH); packet.sysid = 255; packet.compid = 190; packet.msgid = MAVLINK_MSG_ID_FENCE_FETCH_POINT; packet.payload.putUnsignedByte(target_system); packet.payload.putUnsignedByte(target_component); packet.payload.putUnsignedByte(idx); return packet; }", "n_tokens": 109, "n_pass": [1, 1, 1]}
{"time": "2021-02-16 04:55:43.896683", "score": "0.855", "loss": "0.3741", "code": "public MAVLinkPacket pack() { MAVLinkPacket packet; packet.sysid = 255; packet.compid = 190; packet.msgid = MAVLINK_MSG_ID_FENCE_FETCH_POINT; packet.payload.putUnsignedByte(target_system); packet.payload.putUnsignedByte(target_component); packet.payload.putUnsignedByte(idx); return packet; }", "n_tokens": 96, "n_pass": [21, 2, 2]}
{"time": "2021-02-16 04:55:46.474177", "score": "0.7291", "loss": "0.6523", "code": "public MAVLinkPacket pack() { MAVLinkPacket packet; packet.sysid = 255; packet.compid = 190; packet.msgid; packet.payload.putUnsignedByte(target_system); packet.payload.putUnsignedByte(target_component); packet.payload.putUnsignedByte(idx); return packet; }", "n_tokens": 82, "n_pass": [24, 3, 3]}
{"time": "2021-02-16 04:55:49.051571", "score": "0.948", "loss": "0.1085", "code": "public MAVLinkPacket pack() { MAVLinkPacket packet; packet.sysid = 255; packet.compid = 190; packet.msgidpacket.payload.putUnsignedByte(target_component); packet.payload.putUnsignedByte(idx); return packet; }", "n_tokens": 68, "n_pass": [25, 4, 4]}
{"time": "2021-02-16 04:55:51.629474", "score": "0.9937", "loss": "0.0121", "code": "public MAVLinkPacket pack() { MAVLinkPacket packet; packet.sysid = 255; packet.compid = 190; packet.msgidpayload.putUnsignedByte(idx); return packet; }", "n_tokens": 54, "n_pass": [26, 5, 5]}
{"time": "2021-02-16 04:55:54.181551", "score": "0.9791", "loss": "0.0424", "code": "public MAVLinkPacket pack() { MAVLinkPacket packet; packet.sysid = 255; payload.putUnsignedByte(idx); return packet; }", "n_tokens": 40, "n_pass": [30, 6, 6]}
{"time": "2021-02-16 04:55:56.742945", "score": "0.9999", "loss": "0.0002", "code": "public MAVLinkPacket pack() { MAVLinkPacket packet; packet.sysid = 255;  return packet; }", "n_tokens": 33, "n_pass": [40, 7, 7]}
{"time": "2021-02-16 04:55:59.268838", "score": "1.0", "loss": "0.0001", "code": "public MAVLinkPacket pack() { MAVLinkPacket = 255;  return packet; }", "n_tokens": 26, "n_pass": [43, 8, 8]}
{"time": "2021-02-16 04:56:01.795344", "score": "0.9998", "loss": "0.0002", "code": "public MAVLinkPacket pack() { MAVLinkPacket = 255;packet; }", "n_tokens": 22, "n_pass": [58, 9, 9]}
{"time": "2021-02-16 04:56:05.348417", "score": "0.9998", "loss": "0.0002", "code": "public MAVLinkPacket pack() { MAVLinkPacket = 255; }", "n_tokens": 20, "n_pass": [80, 10, 10]}
{"time": "2021-02-16 04:56:07.861719", "score": "0.9998", "loss": "0.0002", "code": " MAVLinkPacket pack() { MAVLinkPacket = 255; }", "n_tokens": 19, "n_pass": [81, 11, 11]}
{"time": "2021-02-16 04:56:10.406229", "score": "0.9998", "loss": "0.0002", "code": "MAVLinkPacket pack() { MAVLinkPacket = 255; }", "n_tokens": 18, "n_pass": [82, 12, 12]}
{"time": "2021-02-16 04:56:13.994111", "score": "0.9999", "loss": "0.0001", "code": "MAVLinkPacket pack() { MAVLinkPacket = 5; }", "n_tokens": 16, "n_pass": [91, 13, 13]}
{"time": "2021-02-16 04:56:19.582295", "score": "0.9999", "loss": "0.0001", "code": "MAVLinkPacket pack() { MAVLinkPacket = 5;}", "n_tokens": 15, "n_pass": [116, 14, 14]}
{"time": "2021-02-16 04:56:23.143539", "score": "0.9999", "loss": "0.0001", "code": "MAVLinkPacket pack(){ MAVLinkPacket = 5;}", "n_tokens": 14, "n_pass": [122, 15, 15]}
{"time": "2021-02-16 04:56:25.650814", "score": "0.9999", "loss": "0.0001", "code": "MAVLinkPacket pack(){MAVLinkPacket = 5;}", "n_tokens": 13, "n_pass": [124, 16, 16]}
{"time": "2021-02-16 04:56:28.157598", "score": "0.9999", "loss": "0.0001", "code": "MAVLinkPacket pack(){MAVLinkPacket= 5;}", "n_tokens": 12, "n_pass": [126, 17, 17]}
{"time": "2021-02-16 04:56:30.669857", "score": "0.9999", "loss": "0.0001", "code": "MAVLinkPacket pack(){MAVLinkPacket=5;}", "n_tokens": 11, "n_pass": [128, 18, 18]}
{"time": "2021-02-16 04:56:34.246931", "score": "0.9995", "loss": "0.0008", "code": "MAVLinkPacket pack(){MAVLinkPacket5;}", "n_tokens": 10, "n_pass": [139, 19, 19]}
{"time": "2021-02-16 04:56:36.754513", "score": "0.9995", "loss": "0.0008", "code": "MAVLinkPacket pack(){MAVLinkPacket;}", "n_tokens": 9, "n_pass": [140, 20, 20]}
{"time": "2021-02-16 04:56:40.341315", "score": "0.9951", "loss": "0.008", "code": "MAVLinkPacket pack(){;}", "n_tokens": 8, "n_pass": [149, 21, 21]}

Minimal simplified code:
MAVLinkPacket pack(){;}

