
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/JeffLi1993__java-core-learning-example/src/main/java/org/javacore/thread/SimplePriorities_main.java
method_name = main
method_body = public static void main(String[] args) { ExecutorService exec = Executors.newCachedThreadPool(); for (int i = 0; i < 5; i++) exec.execute(new SimplePriorities(Thread.MIN_PRIORITY)); exec.execute(new SimplePriorities(Thread.MAX_PRIORITY)); exec.shutdown(); }
predict, score, loss = main, 0.993403971195221, 0.007274686358869076

Trace of simplified code(s):
{"time": "2021-02-14 18:08:08.252918", "score": "0.9895", "loss": "0.0132", "code": "public static void main(String[] args) { ExecutorService exec = Executors.newCachedThreadPool(); for (int i = 0; i < 5; i++) exec.execute(new SimplePriorities(Thread.MIN_PRIORITY)); exec.execute(new SimplePriorities(Thread.MAX_PRIORITY)); exec.shutdown(); }", "n_tokens": 96, "n_pass": [1, 1, 1]}
{"time": "2021-02-14 18:08:10.929495", "score": "0.9969", "loss": "0.0037", "code": "public static void main(String[] args) { ExecutorService exec = Executors.newCachedThreadPool(); for (int i = 0; i < 5;SimplePriorities(Thread.MIN_PRIORITY)); exec.execute(new SimplePriorities(Thread.MAX_PRIORITY)); exec.shutdown(); }", "n_tokens": 84, "n_pass": [24, 2, 2]}
{"time": "2021-02-14 18:08:14.028367", "score": "0.9884", "loss": "0.0159", "code": "public static void main(String[] args) { ExecutorService.newCachedThreadPool(); for (int i = 0; i < 5;SimplePriorities(Thread.MIN_PRIORITY)); exec.execute(new SimplePriorities(Thread.MAX_PRIORITY)); exec.shutdown(); }", "n_tokens": 78, "n_pass": [54, 3, 3]}
{"time": "2021-02-14 18:08:17.152607", "score": "0.9887", "loss": "0.0156", "code": "public static void main(String[] args) { ExecutorService.newCachedThreadPool(); for (int i0; i < 5;SimplePriorities(Thread.MIN_PRIORITY)); exec.execute(new SimplePriorities(Thread.MAX_PRIORITY)); exec.shutdown(); }", "n_tokens": 75, "n_pass": [97, 4, 4]}
{"time": "2021-02-14 18:08:19.813025", "score": "0.9345", "loss": "0.0841", "code": "public static void main(String[] args) { ExecutorService.newCachedThreadPool(); for (int i0;  5;SimplePriorities(Thread.MIN_PRIORITY)); exec.execute(new SimplePriorities(Thread.MAX_PRIORITY)); exec.shutdown(); }", "n_tokens": 72, "n_pass": [98, 5, 5]}
{"time": "2021-02-14 18:08:22.480015", "score": "0.9507", "loss": "0.0662", "code": "public static void main(String[] args) { ExecutorService.newCachedThreadPool(); for (int i0;  5;SimplePriorities(ThreadPRIORITY)); exec.execute(new SimplePriorities(Thread.MAX_PRIORITY)); exec.shutdown(); }", "n_tokens": 69, "n_pass": [101, 6, 6]}
{"time": "2021-02-14 18:08:25.136757", "score": "0.9588", "loss": "0.0455", "code": "public static void main(String[] args) { ExecutorService.newCachedThreadPool(); for (int i0;  5;SimplePriorities(ThreadPRIORITY)); exec.execute((Thread.MAX_PRIORITY)); exec.shutdown(); }", "n_tokens": 66, "n_pass": [105, 7, 7]}
{"time": "2021-02-14 18:08:27.797322", "score": "0.9547", "loss": "0.0525", "code": "public static void main(String[] args) { ExecutorService.newCachedThreadPool(); for (int i0;  5;SimplePriorities(ThreadPRIORITY)); exec.execute((Thread.MAX_PRIORITY));shutdown(); }", "n_tokens": 63, "n_pass": [109, 8, 8]}
{"time": "2021-02-14 18:08:30.447884", "score": "0.9467", "loss": "0.063", "code": "public static void main(String[] args) { ExecutorService.newCachedThreadPool(); for (int i0;  5;SimplePriorities(ThreadPRIORITY)); exec.execute((Thread.MAX_PRIORITY));; }", "n_tokens": 60, "n_pass": [110, 9, 9]}
{"time": "2021-02-14 18:08:33.131219", "score": "0.9467", "loss": "0.063", "code": " void main(String[] args) { ExecutorService.newCachedThreadPool(); for (int i0;  5;SimplePriorities(ThreadPRIORITY)); exec.execute((Thread.MAX_PRIORITY));; }", "n_tokens": 57, "n_pass": [112, 10, 10]}
{"time": "2021-02-14 18:08:36.190985", "score": "0.9441", "loss": "0.0658", "code": " void main(String[] args) { ExecutorService.newCachedThreadPool(); for (0;  5;SimplePriorities(ThreadPRIORITY)); exec.execute((Thread.MAX_PRIORITY));; }", "n_tokens": 54, "n_pass": [121, 11, 11]}
{"time": "2021-02-14 18:08:42.263430", "score": "0.9441", "loss": "0.0658", "code": " void main(String[] args) { ExecutorService.newCachedThreadPool(); for (0;5;SimplePriorities(ThreadPRIORITY)); exec.execute((Thread.MAX_PRIORITY));; }", "n_tokens": 52, "n_pass": [182, 12, 12]}
{"time": "2021-02-14 18:08:44.902997", "score": "0.983", "loss": "0.0181", "code": " void main(String[] args) { ExecutorService.newCachedThreadPool(); for (0;5;SimplePriorities()); exec.execute((Thread.MAX_PRIORITY));; }", "n_tokens": 50, "n_pass": [185, 13, 13]}
{"time": "2021-02-14 18:08:47.538749", "score": "0.9977", "loss": "0.0024", "code": " void main(String[] args) { ExecutorService.newCachedThreadPool(); for (0;5;SimplePriorities())exec.execute((Thread.MAX_PRIORITY));; }", "n_tokens": 48, "n_pass": [187, 14, 14]}
{"time": "2021-02-14 18:08:50.174538", "score": "0.998", "loss": "0.0022", "code": " void main(String[] args) { ExecutorService.newCachedThreadPool(); for (0;5;SimplePriorities())execute((Thread.MAX_PRIORITY));; }", "n_tokens": 46, "n_pass": [188, 15, 15]}
{"time": "2021-02-14 18:08:52.811703", "score": "0.9983", "loss": "0.002", "code": " void main(String[] args) { ExecutorService.newCachedThreadPool(); for (0;5;SimplePriorities())execute((Thread_PRIORITY));; }", "n_tokens": 44, "n_pass": [191, 16, 16]}
{"time": "2021-02-14 18:08:55.478626", "score": "0.9985", "loss": "0.0016", "code": " void main(String[] args) { ExecutorService.newCachedThreadPool(); for (0;5;SimplePriorities())execute((Thread));; }", "n_tokens": 42, "n_pass": [192, 17, 17]}
{"time": "2021-02-14 18:08:58.117830", "score": "0.9985", "loss": "0.0016", "code": "void main(String[] args) { ExecutorService.newCachedThreadPool(); for (0;5;SimplePriorities())execute((Thread));; }", "n_tokens": 41, "n_pass": [196, 18, 18]}
{"time": "2021-02-14 18:09:01.570322", "score": "0.9985", "loss": "0.0016", "code": "void main(String[]args) { ExecutorService.newCachedThreadPool(); for (0;5;SimplePriorities())execute((Thread));; }", "n_tokens": 40, "n_pass": [204, 19, 19]}
{"time": "2021-02-14 18:09:04.222805", "score": "0.9985", "loss": "0.0016", "code": "void main(String[]args){ ExecutorService.newCachedThreadPool(); for (0;5;SimplePriorities())execute((Thread));; }", "n_tokens": 39, "n_pass": [207, 20, 20]}
{"time": "2021-02-14 18:09:06.867364", "score": "0.9985", "loss": "0.0016", "code": "void main(String[]args){ExecutorService.newCachedThreadPool(); for (0;5;SimplePriorities())execute((Thread));; }", "n_tokens": 38, "n_pass": [209, 21, 21]}
{"time": "2021-02-14 18:09:09.504994", "score": "0.5359", "loss": "0.6243", "code": "void main(String[]args){ExecutorServicenewCachedThreadPool(); for (0;5;SimplePriorities())execute((Thread));; }", "n_tokens": 37, "n_pass": [211, 22, 22]}
{"time": "2021-02-14 18:09:12.166205", "score": "0.5232", "loss": "0.6486", "code": "void main(String[]args){ExecutorService(); for (0;5;SimplePriorities())execute((Thread));; }", "n_tokens": 36, "n_pass": [212, 23, 23]}
{"time": "2021-02-14 18:09:18.635506", "score": "0.5232", "loss": "0.6486", "code": "void main(String[]args){ExecutorService(); for(0;5;SimplePriorities())execute((Thread));; }", "n_tokens": 35, "n_pass": [261, 24, 24]}
{"time": "2021-02-14 18:09:21.266892", "score": "0.5206", "loss": "0.6535", "code": "void main(String[]args){ExecutorService(); for(;5;SimplePriorities())execute((Thread));; }", "n_tokens": 34, "n_pass": [262, 25, 25]}
{"time": "2021-02-14 18:09:23.904347", "score": "0.512", "loss": "0.6699", "code": "void main(String[]args){ExecutorService(); for(;;SimplePriorities())execute((Thread));; }", "n_tokens": 33, "n_pass": [264, 26, 26]}
{"time": "2021-02-14 18:09:26.543724", "score": "0.9994", "loss": "0.0008", "code": "void main(String[]args){ExecutorService(); for(;;SimplePriorities())((Thread));; }", "n_tokens": 32, "n_pass": [270, 27, 27]}
{"time": "2021-02-14 18:09:29.166652", "score": "0.9994", "loss": "0.0008", "code": "void main(String[]args){ExecutorService(); for(;;SimplePriorities())((Thread)); }", "n_tokens": 31, "n_pass": [276, 28, 28]}
{"time": "2021-02-14 18:09:31.801503", "score": "0.9994", "loss": "0.0008", "code": "void main(String[]args){ExecutorService(); for(;;SimplePriorities())((Thread));}", "n_tokens": 30, "n_pass": [278, 29, 29]}
{"time": "2021-02-14 18:09:35.262682", "score": "0.9994", "loss": "0.0008", "code": "void main(String[]args){ExecutorService();for(;;SimplePriorities())((Thread));}", "n_tokens": 29, "n_pass": [294, 30, 30]}

Minimal simplified code:
void main(String[]args){ExecutorService();for(;;SimplePriorities())((Thread));}

