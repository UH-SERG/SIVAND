
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/bcgit__bc-java/core/src/main/java/org/bouncycastle/asn1/ASN1UTCTime_encode.java
method_name = encode
method_body = void encode(ASN1OutputStream out) throws IOException { out.write(BERTags.UTC_TIME); int length = time.length; out.writeLength(length); for (int i = 0; i != length; i++) { out.write((byte) time[i]); } }
predict, score, loss = encode, 0.9997562766075134, 0.0004275123355910182

Trace of simplified code(s):
{"time": "2021-02-14 12:47:04.878649", "score": "0.9997", "loss": "0.0004", "code": "void encode(ASN1OutputStream out) throws IOException { out.write(BERTags.UTC_TIME); int length = time.length; out.writeLength(length); for (int i = 0; i != length; i++) { out.write((byte) time[i]); } }", "n_tokens": 93, "n_pass": [1, 1, 1]}
{"time": "2021-02-14 12:47:07.570763", "score": "0.9997", "loss": "0.0005", "code": "void encode(ASN1OutputStream out){ out.write(BERTags.UTC_TIME); int length = time.length; out.writeLength(length); for (int i = 0; i != length; i++) { out.write((byte) time[i]); } }", "n_tokens": 88, "n_pass": [46, 2, 2]}
{"time": "2021-02-14 12:47:10.652188", "score": "0.9997", "loss": "0.0005", "code": "void encode(ASN1OutputStream out){ out.write(BERTags.UTC_TIME); int length = time.length; out.writeLength(length); for (0; i != length; i++) { out.write((byte) time[i]); } }", "n_tokens": 82, "n_pass": [53, 3, 3]}
{"time": "2021-02-14 12:47:13.775492", "score": "0.9998", "loss": "0.0004", "code": "void encode(ASN1OutputStream out){ out.write(BERTags.UTC_TIME); int length = time.length; out.writeLength(length); for (0; i != length; i++) { ((byte) time[i]); } }", "n_tokens": 79, "n_pass": [102, 4, 4]}
{"time": "2021-02-14 12:47:16.433718", "score": "0.9998", "loss": "0.0004", "code": "void encode(ASN1OutputStream out){ out.write(BERTags.UTC_TIME); int length = time.length; out.writeLength(length); for (0; i != length; i++) { ((byte) time); } }", "n_tokens": 76, "n_pass": [104, 5, 5]}
{"time": "2021-02-14 12:47:19.525241", "score": "0.6898", "loss": "0.4594", "code": "void encode(ASN1OutputStream out){ out.write(_TIME); int length = time.length; out.writeLength(length); for (0; i != length; i++) { ((byte) time); } }", "n_tokens": 73, "n_pass": [113, 6, 6]}
{"time": "2021-02-14 12:47:22.182007", "score": "0.8112", "loss": "0.2931", "code": "void encode(ASN1OutputStream out){ out.write(_TIME); int length = time.length;writeLength(length); for (0; i != length; i++) { ((byte) time); } }", "n_tokens": 70, "n_pass": [119, 7, 7]}
{"time": "2021-02-14 12:47:25.272443", "score": "0.9339", "loss": "0.0871", "code": "void encode(ASN1OutputStream out){ out.write(_TIME); int length = timewriteLength(length); for (0; i != length; i++) { ((byte) time); } }", "n_tokens": 67, "n_pass": [143, 8, 8]}
{"time": "2021-02-14 12:47:31.096071", "score": "0.9339", "loss": "0.0871", "code": "void encode(ASN1OutputStream out){ out.write(_TIME);int length = timewriteLength(length); for (0; i != length; i++) { ((byte) time); } }", "n_tokens": 66, "n_pass": [213, 9, 9]}
{"time": "2021-02-14 12:47:33.745193", "score": "0.904", "loss": "0.131", "code": "void encode(ASN1OutputStream out){ out.write(_TIME); length = timewriteLength(length); for (0; i != length; i++) { ((byte) time); } }", "n_tokens": 65, "n_pass": [214, 10, 10]}
{"time": "2021-02-14 12:47:36.388681", "score": "0.904", "loss": "0.131", "code": "void encode(ASN1OutputStream out){ out.write(_TIME);length = timewriteLength(length); for (0; i != length; i++) { ((byte) time); } }", "n_tokens": 64, "n_pass": [215, 11, 11]}
{"time": "2021-02-14 12:47:39.031628", "score": "0.904", "loss": "0.131", "code": "void encode(ASN1OutputStream out){ out.write(_TIME);length= timewriteLength(length); for (0; i != length; i++) { ((byte) time); } }", "n_tokens": 63, "n_pass": [217, 12, 12]}
{"time": "2021-02-14 12:47:41.679864", "score": "0.933", "loss": "0.0896", "code": "void encode(ASN1OutputStream out){ out.write(_TIME);lengthtimewriteLength(length); for (0; i != length; i++) { ((byte) time); } }", "n_tokens": 61, "n_pass": [218, 13, 13]}
{"time": "2021-02-14 12:47:44.324005", "score": "0.9239", "loss": "0.0998", "code": "void encode(ASN1OutputStream out){ out.write(_TIME);length(length); for (0; i != length; i++) { ((byte) time); } }", "n_tokens": 59, "n_pass": [219, 14, 14]}
{"time": "2021-02-14 12:47:46.962052", "score": "0.9117", "loss": "0.1131", "code": "void encode(ASN1OutputStream out){ out.write(_TIME);length(length); for (0; i= length; i++) { ((byte) time); } }", "n_tokens": 57, "n_pass": [226, 15, 15]}
{"time": "2021-02-14 12:47:49.602344", "score": "0.8941", "loss": "0.1478", "code": "void encode(ASN1OutputStream out){ out.write(_TIME);length(length); for (0; ilength; i++) { ((byte) time); } }", "n_tokens": 55, "n_pass": [227, 16, 16]}
{"time": "2021-02-14 12:47:52.242212", "score": "0.8946", "loss": "0.1472", "code": "void encode(ASN1OutputStream out){ out.write(_TIME);length(length); for (0; ilength; i) { ((byte) time); } }", "n_tokens": 53, "n_pass": [230, 17, 17]}
{"time": "2021-02-14 12:47:55.704102", "score": "0.8946", "loss": "0.1472", "code": "void encode(ASNOutputStream out){ out.write(_TIME);length(length); for (0; ilength; i) { ((byte) time); } }", "n_tokens": 52, "n_pass": [244, 18, 18]}
{"time": "2021-02-14 12:48:01.016031", "score": "0.8946", "loss": "0.1472", "code": "void encode(ASNOutputStream out){out.write(_TIME);length(length); for (0; ilength; i) { ((byte) time); } }", "n_tokens": 51, "n_pass": [250, 20, 19]}
{"time": "2021-02-14 12:48:06.286712", "score": "0.8946", "loss": "0.1472", "code": "void encode(ASNOutputStream out){out.write(TIME);length(length); for (0; ilength; i) { ((byte) time); } }", "n_tokens": 50, "n_pass": [255, 22, 20]}
{"time": "2021-02-14 12:48:08.926212", "score": "0.9621", "loss": "0.0555", "code": "void encode(ASNOutputStream out){out.write();length(length); for (0; ilength; i) { ((byte) time); } }", "n_tokens": 49, "n_pass": [256, 23, 21]}
{"time": "2021-02-14 12:48:11.568555", "score": "0.9674", "loss": "0.0469", "code": "void encode(ASNOutputStream out){out.write();(length); for (0; ilength; i) { ((byte) time); } }", "n_tokens": 48, "n_pass": [259, 24, 22]}
{"time": "2021-02-14 12:48:14.219248", "score": "0.9775", "loss": "0.0299", "code": "void encode(ASNOutputStream out){out.write();(length); for (0;length; i) { ((byte) time); } }", "n_tokens": 46, "n_pass": [265, 25, 23]}
{"time": "2021-02-14 12:48:16.854110", "score": "0.9773", "loss": "0.0301", "code": "void encode(ASNOutputStream out){out.write();(length); for (0;length;) { ((byte) time); } }", "n_tokens": 44, "n_pass": [267, 26, 24]}
{"time": "2021-02-14 12:48:25.607584", "score": "0.3687", "loss": "1.6151", "code": "void encode(ASNOutputStream out){outwrite();(length); for (0;length;) { ((byte) time); } }", "n_tokens": 43, "n_pass": [287, 29, 25]}
{"time": "2021-02-14 12:48:28.268311", "score": "0.8256", "loss": "0.2663", "code": "void encode(ASNOutputStream out){out();(length); for (0;length;) { ((byte) time); } }", "n_tokens": 42, "n_pass": [288, 30, 26]}
{"time": "2021-02-14 12:48:41.191247", "score": "0.8256", "loss": "0.2663", "code": "void encode(ASNOutputStream out){out();(length);for (0;length;) { ((byte) time); } }", "n_tokens": 41, "n_pass": [347, 33, 27]}
{"time": "2021-02-14 12:48:43.816409", "score": "0.8256", "loss": "0.2663", "code": "void encode(ASNOutputStream out){out();(length);for(0;length;) { ((byte) time); } }", "n_tokens": 40, "n_pass": [348, 34, 28]}
{"time": "2021-02-14 12:48:46.447417", "score": "0.8312", "loss": "0.2569", "code": "void encode(ASNOutputStream out){out();(length);for(;length;) { ((byte) time); } }", "n_tokens": 39, "n_pass": [350, 35, 29]}
{"time": "2021-02-14 12:48:49.085200", "score": "0.8327", "loss": "0.2542", "code": "void encode(ASNOutputStream out){out();(length);for(;;) { ((byte) time); } }", "n_tokens": 38, "n_pass": [352, 36, 30]}
{"time": "2021-02-14 12:48:51.701686", "score": "0.8327", "loss": "0.2542", "code": "void encode(ASNOutputStream out){out();(length);for(;;){ ((byte) time); } }", "n_tokens": 37, "n_pass": [355, 37, 31]}
{"time": "2021-02-14 12:48:54.333460", "score": "0.8327", "loss": "0.2542", "code": "void encode(ASNOutputStream out){out();(length);for(;;){((byte) time); } }", "n_tokens": 36, "n_pass": [357, 38, 32]}
{"time": "2021-02-14 12:48:56.970161", "score": "0.8327", "loss": "0.2542", "code": "void encode(ASNOutputStream out){out();(length);for(;;){((byte)time); } }", "n_tokens": 35, "n_pass": [362, 39, 33]}
{"time": "2021-02-14 12:48:59.608627", "score": "0.8327", "loss": "0.2542", "code": "void encode(ASNOutputStream out){out();(length);for(;;){((byte)time);} }", "n_tokens": 34, "n_pass": [366, 40, 34]}
{"time": "2021-02-14 12:49:02.240600", "score": "0.8327", "loss": "0.2542", "code": "void encode(ASNOutputStream out){out();(length);for(;;){((byte)time);}}", "n_tokens": 33, "n_pass": [368, 41, 35]}

Minimal simplified code:
void encode(ASNOutputStream out){out();(length);for(;;){((byte)time);}}

