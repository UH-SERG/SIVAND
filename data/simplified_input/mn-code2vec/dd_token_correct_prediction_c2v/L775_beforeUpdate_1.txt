
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/glyptodon__guacamole-client/extensions/guacamole-auth-jdbc/modules/guacamole-auth-jdbc-base/src/main/java/org/apache/guacamole/auth/jdbc/connection/ConnectionService_beforeUpdate.java
method_name = beforeUpdate
method_body = @Override protected void beforeUpdate(ModeledAuthenticatedUser user, ModeledConnection object, ConnectionModel model) throws GuacamoleException { super.beforeUpdate(user, object, model); if (model.getName() == null || model.getName().trim().isEmpty()) throw new GuacamoleClientException("Connection names must not be blank."); ConnectionModel existing = connectionMapper.selectOneByName(model.getParentIdentifier(), model.getName()); if (existing != null) { if (!existing.getObjectID().equals(model.getObjectID())) throw new GuacamoleClientException("The connection \"" + model.getName() + "\" already exists."); } }
predict, score, loss = beforeUpdate, 0.852043092250824, 0.20393384993076324

Trace of simplified code(s):
{"time": "2021-02-16 01:47:50.226478", "score": "0.791", "loss": "0.2505", "code": "@Override protected void beforeUpdate(ModeledAuthenticatedUser user, ModeledConnection object, ConnectionModel model) throws GuacamoleException { super.beforeUpdate(user, object, model); if (model.getName() == null || model.getName().trim().isEmpty()) throw new GuacamoleClientException(\"Connection names must not be blank.\"); ConnectionModel existing = connectionMapper.selectOneByName(model.getParentIdentifier(), model.getName()); if (existing != null) { if (!existing.getObjectID().equals(model.getObjectID())) throw new GuacamoleClientException(\"The connection \\\"\" + model.getName() + \"\\\" already exists.\"); } }", "n_tokens": 197, "n_pass": [1, 1, 1]}
{"time": "2021-02-16 01:47:52.833617", "score": "0.9429", "loss": "0.0862", "code": "@Override protected void beforeUpdate(ModeledAuthenticatedUser user, ModeledConnection object, ConnectionModel model) throws GuacamoleException { super.beforeUpdate(user, object, model); if (model()) throw new GuacamoleClientException(\"Connection names must not be blank.\"); ConnectionModel existing = connectionMapper.selectOneByName(model.getParentIdentifier(), model.getName()); if (existing != null) { if (!existing.getObjectID().equals(model.getObjectID())) throw new GuacamoleClientException(\"The connection \\\"\" + model.getName() + \"\\\" already exists.\"); } }", "n_tokens": 173, "n_pass": [22, 2, 2]}
{"time": "2021-02-16 01:47:55.413484", "score": "0.9596", "loss": "0.0659", "code": "@Override protected void beforeUpdate(ModeledAuthenticatedUser user, ModeledConnection object, ConnectionModel model) throws GuacamoleException { super.beforeUpdate(user, object, model); if (model()) throw new GuacamoleClientException(\"Connection names must not be blank.\"); if (existing != null) { if (!existing.getObjectID().equals(model.getObjectID())) throw new GuacamoleClientException(\"The connection \\\"\" + model.getName() + \"\\\" already exists.\"); } }", "n_tokens": 148, "n_pass": [24, 3, 3]}
{"time": "2021-02-16 01:47:58.126868", "score": "0.9458", "loss": "0.0791", "code": "@Override protected void beforeUpdate(ModeledAuthenticatedUser user, ModeledConnection object, ConnectionModel model) throws GuacamoleException { super.beforeUpdate(user, object, model); if (model()) throw new GuacamoleClientException(\"Connection names must not be blank.\"); if (existing != null) { if (!existing.getObjectID(getObjectID())) throw new GuacamoleClientException(\"The connection \\\"\" + model.getName() + \"\\\" already exists.\"); } }", "n_tokens": 142, "n_pass": [83, 4, 4]}
{"time": "2021-02-16 01:48:00.745058", "score": "0.9462", "loss": "0.0769", "code": "@Override protected void beforeUpdate(ModeledAuthenticatedUser user, ModeledConnection object, ConnectionModel model) throws GuacamoleException { super.beforeUpdate(user, object, model); if (model()) throw new GuacamoleClientException(\"Connection names must not be blank.\"); if (existing != null) { if (!existing.getObjectID(getObjectID())) throw new GuacamoleClientException(\"\" + model.getName() + \"\\\" already exists.\"); } }", "n_tokens": 136, "n_pass": [86, 5, 5]}
{"time": "2021-02-16 01:48:03.328153", "score": "0.9462", "loss": "0.0776", "code": "@Override protected void beforeUpdate(ModeledAuthenticatedUser user, ModeledConnection object, ConnectionModel model) throws GuacamoleException { super.beforeUpdate(user, object, model); if (model()) throw new GuacamoleClientException(\"Connection names must not be blank.\"); if (existing != null) { if (!existing.getObjectID(getObjectID())) throw new GuacamoleClientException(getName() + \"\\\" already exists.\"); } }", "n_tokens": 129, "n_pass": [87, 6, 6]}
{"time": "2021-02-16 01:48:05.973447", "score": "0.946", "loss": "0.0767", "code": "@Override protected void beforeUpdate(ModeledAuthenticatedUser user, ModeledConnection object, ConnectionModel model) throws GuacamoleException { super.beforeUpdate(user, object, model); if (model()) throw new GuacamoleClientException(\"Connection names must not be blank.\"); if (existing != null) { if (!existing.getObjectID(getObjectID())) throw new GuacamoleClientException(getName() + \"\"); } }", "n_tokens": 122, "n_pass": [89, 7, 7]}
{"time": "2021-02-16 01:48:08.954076", "score": "0.946", "loss": "0.0767", "code": "@Override protected void beforeUpdate(ModeledAuthenticatedUser user, ModeledConnection object, ConnectionModel model) throws GuacamoleException { super.beforeUpdate(user, object, model); if (model()) throw new GuacamoleClientException(\"Connection be blank.\"); if (existing != null) { if (!existing.getObjectID(getObjectID())) throw new GuacamoleClientException(getName() + \"\"); } }", "n_tokens": 116, "n_pass": [101, 8, 8]}
{"time": "2021-02-16 01:48:11.909371", "score": "0.946", "loss": "0.0767", "code": "@Override protected void beforeUpdate(ModeledAuthenticatedUser user, ModeledConnection object, ConnectionModel model) throws GuacamoleException { super.beforeUpdate(user, object, model); if (model()) throw new GuacamoleClientException(\"Connectionblank.\"); if (existing != null) { if (!existing.getObjectID(getObjectID())) throw new GuacamoleClientException(getName() + \"\"); } }", "n_tokens": 113, "n_pass": [159, 9, 9]}
{"time": "2021-02-16 01:48:14.492748", "score": "0.9464", "loss": "0.0764", "code": "@Override protected void beforeUpdate(ModeledAuthenticatedUser user, ModeledConnection object, ConnectionModel model) throws GuacamoleException { super.beforeUpdate(user, object, model); if (model()) throw new GuacamoleClientException(\"Connectionblank.\"); if (existing != null) { if (!existing.getObjectID()) throw new GuacamoleClientException(getName() + \"\"); } }", "n_tokens": 110, "n_pass": [168, 10, 10]}
{"time": "2021-02-16 01:48:17.086557", "score": "0.9473", "loss": "0.0762", "code": "@Override protected void beforeUpdate(ModeledAuthenticatedUser user, ModeledConnection object, ConnectionModel model) throws GuacamoleException { super.beforeUpdate(user, object, model); if (model()) throw new GuacamoleClientException(\"Connectionblank.\"); if (existing != null) { if (!existing.getObjectID())  GuacamoleClientException(getName() + \"\"); } }", "n_tokens": 107, "n_pass": [170, 11, 11]}
{"time": "2021-02-16 01:48:19.714843", "score": "0.9469", "loss": "0.0762", "code": "@Override protected void beforeUpdate(ModeledAuthenticatedUser user, ModeledConnection object, ConnectionModel model) throws GuacamoleException { super.beforeUpdate(user, object, model); if (model()) throw new GuacamoleClientException(\"Connectionblank.\"); if (existing != null) { if (!existing.getObjectID())  GuacamoleClientException( + \"\"); } }", "n_tokens": 104, "n_pass": [172, 12, 12]}
{"time": "2021-02-16 01:48:22.333914", "score": "0.9471", "loss": "0.0764", "code": "@Override protected void beforeUpdate(ModeledAuthenticatedUser user, ModeledConnection object, ConnectionModel model) throws GuacamoleException { super.beforeUpdate(user, object, model); if (model()) throw new GuacamoleClientException(\"Connectionblank.\"); if (existing != null) { if (!existing.getObjectID())  GuacamoleClientException(\"\"); } }", "n_tokens": 101, "n_pass": [173, 13, 13]}
{"time": "2021-02-16 01:48:24.944446", "score": "0.9414", "loss": "0.0768", "code": "protected void beforeUpdate(ModeledAuthenticatedUser user, ModeledConnection object, ConnectionModel model) throws GuacamoleException { super.beforeUpdate(user, object, model); if (model()) throw new GuacamoleClientException(\"Connectionblank.\"); if (existing != null) { if (!existing.getObjectID())  GuacamoleClientException(\"\"); } }", "n_tokens": 98, "n_pass": [176, 14, 14]}
{"time": "2021-02-16 01:48:27.955967", "score": "0.9746", "loss": "0.0288", "code": "protected void beforeUpdate(ModeledAuthenticatedUser user, ModeledConnection object, ConnectionModel model)  { super.beforeUpdate(user, object, model); if (model()) throw new GuacamoleClientException(\"Connectionblank.\"); if (existing != null) { if (!existing.getObjectID())  GuacamoleClientException(\"\"); } }", "n_tokens": 95, "n_pass": [184, 15, 15]}
{"time": "2021-02-16 01:48:30.504049", "score": "0.8741", "loss": "0.1463", "code": "protected void beforeUpdate(ModeledAuthenticatedUser user, ModeledConnection object, ConnectionModel model)  { super.beforeUpdate(user, model); if (model()) throw new GuacamoleClientException(\"Connectionblank.\"); if (existing != null) { if (!existing.getObjectID())  GuacamoleClientException(\"\"); } }", "n_tokens": 92, "n_pass": [188, 16, 16]}
{"time": "2021-02-16 01:48:33.134164", "score": "0.7986", "loss": "0.239", "code": "protected void beforeUpdate(ModeledAuthenticatedUser user, ModeledConnection object, ConnectionModel model)  { super.beforeUpdate(user, model); if (model())new GuacamoleClientException(\"Connectionblank.\"); if (existing != null) { if (!existing.getObjectID())  GuacamoleClientException(\"\"); } }", "n_tokens": 89, "n_pass": [193, 17, 17]}
{"time": "2021-02-16 01:48:35.701665", "score": "0.7815", "loss": "0.2606", "code": "protected void beforeUpdate(ModeledAuthenticatedUser user, ModeledConnection object, ConnectionModel model)  { super.beforeUpdate(user, model); if (model())(\"Connectionblank.\"); if (existing != null) { if (!existing.getObjectID())  GuacamoleClientException(\"\"); } }", "n_tokens": 86, "n_pass": [194, 18, 18]}
{"time": "2021-02-16 01:48:42.379520", "score": "0.7856", "loss": "0.2555", "code": "protected void beforeUpdate(ModeledAuthenticatedUser user, ModeledConnection object, ConnectionModel model)  { super.beforeUpdate(user, model); if (model())(\".\"); if (existing != null) { if (!existing.getObjectID())  GuacamoleClientException(\"\"); } }", "n_tokens": 84, "n_pass": [286, 19, 19]}
{"time": "2021-02-16 01:48:45.030966", "score": "0.7846", "loss": "0.2565", "code": "protected void beforeUpdate(ModeledAuthenticatedUser user, ModeledConnection object, ConnectionModel model)  { super.beforeUpdate(user, model); if (model())(\".\"); if (existing != null) { if (!getObjectID())  GuacamoleClientException(\"\"); } }", "n_tokens": 82, "n_pass": [298, 20, 20]}
{"time": "2021-02-16 01:48:47.720616", "score": "0.7846", "loss": "0.2565", "code": "protected void beforeUpdate(ModeledAuthenticatedUser user, ModeledConnection object, ConnectionModel model)  { super.beforeUpdate(user, model); if (model())(\".\"); if (existing != null) { if (!getObjectID())GuacamoleClientException(\"\"); } }", "n_tokens": 80, "n_pass": [301, 21, 21]}
{"time": "2021-02-16 01:48:50.339477", "score": "0.7759", "loss": "0.2673", "code": "protected void beforeUpdate(ModeledAuthenticatedUser user, ModeledConnection object, ConnectionModel model)  { super.beforeUpdate(user, model); if (model())(\".\"); if (existing != null) { if (!getObjectID())GuacamoleClientException(); } }", "n_tokens": 78, "n_pass": [303, 22, 22]}
{"time": "2021-02-16 01:48:52.972373", "score": "0.7759", "loss": "0.2673", "code": " void beforeUpdate(ModeledAuthenticatedUser user, ModeledConnection object, ConnectionModel model)  { super.beforeUpdate(user, model); if (model())(\".\"); if (existing != null) { if (!getObjectID())GuacamoleClientException(); } }", "n_tokens": 77, "n_pass": [307, 23, 23]}
{"time": "2021-02-16 01:48:55.588454", "score": "0.7759", "loss": "0.2673", "code": "void beforeUpdate(ModeledAuthenticatedUser user, ModeledConnection object, ConnectionModel model)  { super.beforeUpdate(user, model); if (model())(\".\"); if (existing != null) { if (!getObjectID())GuacamoleClientException(); } }", "n_tokens": 76, "n_pass": [308, 24, 24]}
{"time": "2021-02-16 01:48:58.966415", "score": "0.7759", "loss": "0.2673", "code": "void beforeUpdate(ModeledAuthenticatedUser user,ModeledConnection object, ConnectionModel model)  { super.beforeUpdate(user, model); if (model())(\".\"); if (existing != null) { if (!getObjectID())GuacamoleClientException(); } }", "n_tokens": 75, "n_pass": [317, 25, 25]}
{"time": "2021-02-16 01:49:01.565578", "score": "0.7759", "loss": "0.2673", "code": "void beforeUpdate(ModeledAuthenticatedUser user,ModeledConnection object,ConnectionModel model)  { super.beforeUpdate(user, model); if (model())(\".\"); if (existing != null) { if (!getObjectID())GuacamoleClientException(); } }", "n_tokens": 74, "n_pass": [322, 26, 26]}
{"time": "2021-02-16 01:49:04.400548", "score": "0.7759", "loss": "0.2673", "code": "void beforeUpdate(ModeledAuthenticatedUser user,ModeledConnection object,ConnectionModel model) { super.beforeUpdate(user, model); if (model())(\".\"); if (existing != null) { if (!getObjectID())GuacamoleClientException(); } }", "n_tokens": 73, "n_pass": [327, 27, 27]}
{"time": "2021-02-16 01:49:06.967432", "score": "0.7759", "loss": "0.2673", "code": "void beforeUpdate(ModeledAuthenticatedUser user,ModeledConnection object,ConnectionModel model){ super.beforeUpdate(user, model); if (model())(\".\"); if (existing != null) { if (!getObjectID())GuacamoleClientException(); } }", "n_tokens": 72, "n_pass": [328, 28, 28]}
{"time": "2021-02-16 01:49:09.591463", "score": "0.7759", "loss": "0.2673", "code": "void beforeUpdate(ModeledAuthenticatedUser user,ModeledConnection object,ConnectionModel model){super.beforeUpdate(user, model); if (model())(\".\"); if (existing != null) { if (!getObjectID())GuacamoleClientException(); } }", "n_tokens": 71, "n_pass": [330, 29, 29]}
{"time": "2021-02-16 01:49:14.827003", "score": "0.7963", "loss": "0.2392", "code": "void beforeUpdate(ModeledAuthenticatedUser user,ModeledConnection object,ConnectionModel model){super.beforeUpdate( model); if (model())(\".\"); if (existing != null) { if (!getObjectID())GuacamoleClientException(); } }", "n_tokens": 69, "n_pass": [334, 31, 30]}
{"time": "2021-02-16 01:49:17.479246", "score": "0.5915", "loss": "0.6135", "code": "void beforeUpdate(ModeledAuthenticatedUser user,ModeledConnection object,ConnectionModel model){super.beforeUpdate(); if (model())(\".\"); if (existing != null) { if (!getObjectID())GuacamoleClientException(); } }", "n_tokens": 67, "n_pass": [335, 32, 31]}
{"time": "2021-02-16 01:49:28.190229", "score": "0.5821", "loss": "0.6277", "code": "void beforeUpdate(ModeledAuthenticatedUser user,ModeledConnection object,ConnectionModel model){super.beforeUpdate(); if (model())(\"\"); if (existing != null) { if (!getObjectID())GuacamoleClientException(); } }", "n_tokens": 66, "n_pass": [429, 34, 32]}
{"time": "2021-02-16 01:49:30.830653", "score": "0.5821", "loss": "0.6277", "code": "void beforeUpdate(ModeledAuthenticatedUser user,ModeledConnection object,ConnectionModel model){super.beforeUpdate(); if (model())(\"\");if (existing != null) { if (!getObjectID())GuacamoleClientException(); } }", "n_tokens": 65, "n_pass": [432, 35, 33]}
{"time": "2021-02-16 01:49:33.457377", "score": "0.5821", "loss": "0.6277", "code": "void beforeUpdate(ModeledAuthenticatedUser user,ModeledConnection object,ConnectionModel model){super.beforeUpdate(); if (model())(\"\");if(existing != null) { if (!getObjectID())GuacamoleClientException(); } }", "n_tokens": 64, "n_pass": [434, 36, 34]}
{"time": "2021-02-16 01:49:36.115380", "score": "0.5821", "loss": "0.6277", "code": "void beforeUpdate(ModeledAuthenticatedUser user,ModeledConnection object,ConnectionModel model){super.beforeUpdate(); if (model())(\"\");if(existing!= null) { if (!getObjectID())GuacamoleClientException(); } }", "n_tokens": 63, "n_pass": [437, 37, 35]}
{"time": "2021-02-16 01:49:38.733673", "score": "0.5861", "loss": "0.6198", "code": "void beforeUpdate(ModeledAuthenticatedUser user,ModeledConnection object,ConnectionModel model){super.beforeUpdate(); if (model())(\"\");if(existing= null) { if (!getObjectID())GuacamoleClientException(); } }", "n_tokens": 62, "n_pass": [438, 38, 36]}
{"time": "2021-02-16 01:49:41.371740", "score": "0.5861", "loss": "0.6198", "code": "void beforeUpdate(ModeledAuthenticatedUser user,ModeledConnection object,ConnectionModel model){super.beforeUpdate(); if (model())(\"\");if(existing=null) { if (!getObjectID())GuacamoleClientException(); } }", "n_tokens": 61, "n_pass": [440, 39, 37]}
{"time": "2021-02-16 01:49:43.953456", "score": "0.5861", "loss": "0.6198", "code": "void beforeUpdate(ModeledAuthenticatedUser user,ModeledConnection object,ConnectionModel model){super.beforeUpdate(); if (model())(\"\");if(existing=null){ if (!getObjectID())GuacamoleClientException(); } }", "n_tokens": 60, "n_pass": [443, 40, 38]}
{"time": "2021-02-16 01:49:46.557498", "score": "0.5861", "loss": "0.6198", "code": "void beforeUpdate(ModeledAuthenticatedUser user,ModeledConnection object,ConnectionModel model){super.beforeUpdate(); if (model())(\"\");if(existing=null){if (!getObjectID())GuacamoleClientException(); } }", "n_tokens": 59, "n_pass": [445, 41, 39]}
{"time": "2021-02-16 01:49:49.183662", "score": "0.5861", "loss": "0.6198", "code": "void beforeUpdate(ModeledAuthenticatedUser user,ModeledConnection object,ConnectionModel model){super.beforeUpdate(); if (model())(\"\");if(existing=null){if(!getObjectID())GuacamoleClientException(); } }", "n_tokens": 58, "n_pass": [447, 42, 40]}
{"time": "2021-02-16 01:49:51.817223", "score": "0.6714", "loss": "0.4952", "code": "void beforeUpdate(ModeledAuthenticatedUser user,ModeledConnection object,ConnectionModel model){super.beforeUpdate(); if (model())(\"\");if(existing=null){if(getObjectID())GuacamoleClientException(); } }", "n_tokens": 57, "n_pass": [449, 43, 41]}
{"time": "2021-02-16 01:49:54.736668", "score": "0.6714", "loss": "0.4952", "code": "void beforeUpdate(ModeledAuthenticatedUser user,ModeledConnection object,ConnectionModel model){super.beforeUpdate(); if (model())(\"\");if(existing=null){if(getObjectID())GuacamoleClientException();} }", "n_tokens": 56, "n_pass": [458, 44, 42]}
{"time": "2021-02-16 01:49:57.360789", "score": "0.6714", "loss": "0.4952", "code": "void beforeUpdate(ModeledAuthenticatedUser user,ModeledConnection object,ConnectionModel model){super.beforeUpdate(); if (model())(\"\");if(existing=null){if(getObjectID())GuacamoleClientException();}}", "n_tokens": 55, "n_pass": [460, 45, 43]}
{"time": "2021-02-16 01:50:03.259829", "score": "0.6714", "loss": "0.4952", "code": "void beforeUpdate(ModeledAuthenticatedUser user,ModeledConnection object,ConnectionModel model){super.beforeUpdate();if (model())(\"\");if(existing=null){if(getObjectID())GuacamoleClientException();}}", "n_tokens": 54, "n_pass": [485, 47, 44]}
{"time": "2021-02-16 01:50:05.866616", "score": "0.6714", "loss": "0.4952", "code": "void beforeUpdate(ModeledAuthenticatedUser user,ModeledConnection object,ConnectionModel model){super.beforeUpdate();if(model())(\"\");if(existing=null){if(getObjectID())GuacamoleClientException();}}", "n_tokens": 53, "n_pass": [487, 48, 45]}
{"time": "2021-02-16 01:50:08.438465", "score": "0.6683", "loss": "0.4986", "code": "void beforeUpdate(ModeledAuthenticatedUser user,ModeledConnection object,ConnectionModel model){super.beforeUpdate();if(model())(\"\");if(existingnull){if(getObjectID())GuacamoleClientException();}}", "n_tokens": 52, "n_pass": [501, 49, 46]}
{"time": "2021-02-16 01:50:11.005681", "score": "0.6693", "loss": "0.5003", "code": "void beforeUpdate(ModeledAuthenticatedUser user,ModeledConnection object,ConnectionModel model){super.beforeUpdate();if(model())(\"\");if(existing){if(getObjectID())GuacamoleClientException();}}", "n_tokens": 51, "n_pass": [502, 50, 47]}

Minimal simplified code:
void beforeUpdate(ModeledAuthenticatedUser user,ModeledConnection object,ConnectionModel model){super.beforeUpdate();if(model())("");if(existing){if(getObjectID())GuacamoleClientException();}}

