
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/ongakuer__CameraFilter/app/src/main/java/me/relex/camerafilter/ImageFilterActivity_onClick.java
method_name = onClick
method_body = @Override public void onClick(View v) { switch(v.getId()) { case R.id.filter_normal: startFilterTask(FilterManager.FilterType.Normal); break; case R.id.filter_tone_curve: startFilterTask(FilterManager.FilterType.ToneCurve); break; case R.id.filter_soft_light: startFilterTask(FilterManager.FilterType.SoftLight); break; } }
predict, score, loss = onClick, 0.999972939491272, 3.123234637314454e-05

Trace of simplified code(s):
{"time": "2021-02-14 07:07:28.679660", "score": "1.0", "loss": "0.0", "code": "@Override public void onClick(View v) { switch(v.getId()) { case R.id.filter_normal: startFilterTask(FilterManager.FilterType.Normal); break; case R.id.filter_tone_curve: startFilterTask(FilterManager.FilterType.ToneCurve); break; case R.id.filter_soft_light: startFilterTask(FilterManager.FilterType.SoftLight); break; } }", "n_tokens": 106, "n_pass": [1, 1, 1]}
{"time": "2021-02-14 07:07:32.161436", "score": "1.0", "loss": "0.0", "code": "@Override public void onClick(View v) { switch(v.getId()) { case R: startFilterTask(FilterManager.FilterType.Normal); break; case R.id.filter_tone_curve: startFilterTask(FilterManager.FilterType.ToneCurve); break; case R.id.filter_soft_light: startFilterTask(FilterManager.FilterType.SoftLight); break; } }", "n_tokens": 100, "n_pass": [49, 2, 2]}
{"time": "2021-02-14 07:07:34.808159", "score": "0.9999", "loss": "0.0002", "code": "@Override public void onClick(View v) { switch(v.getId()) { case R: startFilterTask(FilterManager.FilterType.Normal); break;filter_tone_curve: startFilterTask(FilterManager.FilterType.ToneCurve); break; case R.id.filter_soft_light: startFilterTask(FilterManager.FilterType.SoftLight); break; } }", "n_tokens": 93, "n_pass": [52, 3, 3]}
{"time": "2021-02-14 07:07:37.458361", "score": "1.0", "loss": "0.0001", "code": "@Override public void onClick(View v) { switch(v.getId()) { case R: startFilterTask(FilterManager.FilterType.Normal); break;startFilterTask(FilterManager.FilterType.ToneCurve); break; case R.id.filter_soft_light: startFilterTask(FilterManager.FilterType.SoftLight); break; } }", "n_tokens": 86, "n_pass": [53, 4, 4]}
{"time": "2021-02-14 07:07:40.135023", "score": "0.9999", "loss": "0.0001", "code": "@Override public void onClick(View v) { switch(v.getId()) { case R: startFilterTask(FilterManager.FilterType.Normal); break;startFilterTask(FilterManager.FilterType.ToneCurve); break; casesoft_light: startFilterTask(FilterManager.FilterType.SoftLight); break; } }", "n_tokens": 79, "n_pass": [56, 5, 5]}
{"time": "2021-02-14 07:07:43.214652", "score": "0.9999", "loss": "0.0001", "code": "@Override public void onClick(View v) { switch(v.getId()) { case R: startFilterTask(FilterManager.FilterType.Normal); break;startFilterTask(FilterManager.FilterType.ToneCurve); break_light: startFilterTask(FilterManager.FilterType.SoftLight); break; } }", "n_tokens": 75, "n_pass": [93, 6, 6]}
{"time": "2021-02-14 07:07:45.866213", "score": "0.9999", "loss": "0.0002", "code": "@Override public void onClick(View v) { switch(v.getId()) { case R: startFilterTask(FilterManager.FilterType.Normal); break;startFilterTask(FilterManager.FilterType.ToneCurve); breakstartFilterTask(FilterManager.FilterType.SoftLight); break; } }", "n_tokens": 71, "n_pass": [94, 7, 7]}
{"time": "2021-02-14 07:07:48.548785", "score": "0.9998", "loss": "0.0003", "code": "public void onClick(View v) { switch(v.getId()) { case R: startFilterTask(FilterManager.FilterType.Normal); break;startFilterTask(FilterManager.FilterType.ToneCurve); breakstartFilterTask(FilterManager.FilterType.SoftLight); break; } }", "n_tokens": 68, "n_pass": [99, 8, 8]}
{"time": "2021-02-14 07:07:51.602134", "score": "0.997", "loss": "0.0131", "code": "public void onClick() { switch(v.getId()) { case R: startFilterTask(FilterManager.FilterType.Normal); break;startFilterTask(FilterManager.FilterType.ToneCurve); breakstartFilterTask(FilterManager.FilterType.SoftLight); break; } }", "n_tokens": 65, "n_pass": [102, 9, 9]}
{"time": "2021-02-14 07:07:54.285461", "score": "0.6826", "loss": "1.1266", "code": "public void onClick() { switch(v.getId()) { case R: startFilterTask(FilterManager.FilterType.Normal); (FilterManager.FilterType.ToneCurve); breakstartFilterTask(FilterManager.FilterType.SoftLight); break; } }", "n_tokens": 62, "n_pass": [113, 10, 10]}
{"time": "2021-02-14 07:07:59.613402", "score": "0.6193", "loss": "1.3293", "code": "public void onClick() { switch(v.getId()) { case R: startFilterTask(FilterManager.FilterType.Normal); (FilterManager.ToneCurve); breakstartFilterTask(FilterManager.FilterType.SoftLight); break; } }", "n_tokens": 60, "n_pass": [173, 11, 11]}
{"time": "2021-02-14 07:08:02.274266", "score": "0.3569", "loss": "1.8512", "code": "public void onClick() { switch(v.getId()) { case R: startFilterTask(FilterManager.FilterType.Normal); (FilterManager); breakstartFilterTask(FilterManager.FilterType.SoftLight); break; } }", "n_tokens": 58, "n_pass": [174, 12, 12]}
{"time": "2021-02-14 07:08:04.921871", "score": "0.3569", "loss": "1.8512", "code": "public void onClick() { switch(v.getId()) { case R: startFilterTask(FilterManager.FilterType.Normal); (FilterManager);startFilterTask(FilterManager.FilterType.SoftLight); break; } }", "n_tokens": 56, "n_pass": [176, 13, 13]}
{"time": "2021-02-14 07:08:12.865685", "score": "0.3569", "loss": "1.8512", "code": "public void onClick() { switch(v.getId()) { case R: startFilterTask(FilterManager.FilterType.Normal); (FilterManager);startFilterTask(FilterManager.FilterType.SoftLight);  } }", "n_tokens": 54, "n_pass": [182, 16, 14]}
{"time": "2021-02-14 07:08:15.500695", "score": "0.3569", "loss": "1.8512", "code": " void onClick() { switch(v.getId()) { case R: startFilterTask(FilterManager.FilterType.Normal); (FilterManager);startFilterTask(FilterManager.FilterType.SoftLight);  } }", "n_tokens": 53, "n_pass": [185, 17, 15]}
{"time": "2021-02-14 07:08:18.148256", "score": "0.3569", "loss": "1.8512", "code": "void onClick() { switch(v.getId()) { case R: startFilterTask(FilterManager.FilterType.Normal); (FilterManager);startFilterTask(FilterManager.FilterType.SoftLight);  } }", "n_tokens": 52, "n_pass": [186, 18, 16]}
{"time": "2021-02-14 07:08:21.581819", "score": "0.3569", "loss": "1.8512", "code": "void onClick(){ switch(v.getId()) { case R: startFilterTask(FilterManager.FilterType.Normal); (FilterManager);startFilterTask(FilterManager.FilterType.SoftLight);  } }", "n_tokens": 51, "n_pass": [192, 19, 17]}
{"time": "2021-02-14 07:08:24.245744", "score": "0.3569", "loss": "1.8512", "code": "void onClick(){switch(v.getId()) { case R: startFilterTask(FilterManager.FilterType.Normal); (FilterManager);startFilterTask(FilterManager.FilterType.SoftLight);  } }", "n_tokens": 50, "n_pass": [194, 20, 18]}
{"time": "2021-02-14 07:08:29.510971", "score": "0.2731", "loss": "2.8397", "code": "void onClick(){switch(v.getId()) { case R: startFilterTask(FilterType.Normal); (FilterManager);startFilterTask(FilterManager.FilterType.SoftLight);  } }", "n_tokens": 48, "n_pass": [206, 22, 19]}
{"time": "2021-02-14 07:08:32.169622", "score": "0.2785", "loss": "2.797", "code": "void onClick(){switch(v.getId()) { case R: startFilterTask(Normal); (FilterManager);startFilterTask(FilterManager.FilterType.SoftLight);  } }", "n_tokens": 46, "n_pass": [207, 23, 20]}
{"time": "2021-02-14 07:08:47.671844", "score": "0.2785", "loss": "2.797", "code": "void onClick(){switch(v.getId()) { case R: startFilterTask(Normal);(FilterManager);startFilterTask(FilterManager.FilterType.SoftLight);  } }", "n_tokens": 45, "n_pass": [272, 27, 21]}
{"time": "2021-02-14 07:08:58.608366", "score": "0.2785", "loss": "2.797", "code": "void onClick(){switch(v.getId()) { case R: startFilterTask(Normal);(FilterManager);startFilterTask(FilterManager.FilterType.SoftLight); } }", "n_tokens": 44, "n_pass": [286, 31, 22]}
{"time": "2021-02-14 07:09:01.247351", "score": "0.2785", "loss": "2.797", "code": "void onClick(){switch(v.getId()) { case R: startFilterTask(Normal);(FilterManager);startFilterTask(FilterManager.FilterType.SoftLight);} }", "n_tokens": 43, "n_pass": [287, 32, 23]}
{"time": "2021-02-14 07:09:03.881968", "score": "0.2785", "loss": "2.797", "code": "void onClick(){switch(v.getId()) { case R: startFilterTask(Normal);(FilterManager);startFilterTask(FilterManager.FilterType.SoftLight);}}", "n_tokens": 42, "n_pass": [289, 33, 24]}
{"time": "2021-02-14 07:09:09.989866", "score": "0.2785", "loss": "2.797", "code": "void onClick(){switch(v.getId()){ case R: startFilterTask(Normal);(FilterManager);startFilterTask(FilterManager.FilterType.SoftLight);}}", "n_tokens": 41, "n_pass": [305, 35, 25]}
{"time": "2021-02-14 07:09:12.615649", "score": "0.2785", "loss": "2.797", "code": "void onClick(){switch(v.getId()){case R: startFilterTask(Normal);(FilterManager);startFilterTask(FilterManager.FilterType.SoftLight);}}", "n_tokens": 40, "n_pass": [307, 36, 26]}
{"time": "2021-02-14 07:09:15.280022", "score": "0.2785", "loss": "2.797", "code": "void onClick(){switch(v.getId()){case R:startFilterTask(Normal);(FilterManager);startFilterTask(FilterManager.FilterType.SoftLight);}}", "n_tokens": 39, "n_pass": [312, 37, 27]}
{"time": "2021-02-14 07:09:17.929428", "score": "0.3021", "loss": "2.7346", "code": "void onClick(){switch(v.getId()){case R:(Normal);(FilterManager);startFilterTask(FilterManager.FilterType.SoftLight);}}", "n_tokens": 38, "n_pass": [313, 38, 28]}

Minimal simplified code:
void onClick(){switch(v.getId()){case R:(Normal);(FilterManager);startFilterTask(FilterManager.FilterType.SoftLight);}}

