
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/Waikato__meka/src/main/java/meka/core/StatUtils_main.java
method_name = main
method_body = public static void main(String[] args) throws Exception { Instances D = Evaluation.loadDataset(args); MLUtils.prepareData(D); int L = D.classIndex(); double[][] CD = null; if (args[2].equals("L")) { String I = "I"; if (args.length >= 3) I = args[3]; CD = StatUtils.LEAD(D, new SMO(), new Random(), I); } else { CD = StatUtils.margDepMatrix(D, args[2]); } System.out.println(MatrixUtils.toString(CD, "M" + args[2])); }
predict, score, loss = main, 0.9244335889816284, 0.10599476099014282

Trace of simplified code(s):
{"time": "2021-02-14 18:30:43.208729", "score": "0.9987", "loss": "0.0017", "code": "public static void main(String[] args) throws Exception { Instances D = Evaluation.loadDataset(args); MLUtils.prepareData(D); int L = D.classIndex(); double[][] CD = null; if (args[2].equals(\"L\")) { String I = \"I\"; if (args.length >= 3) I = args[3]; CD = StatUtils.LEAD(D, new SMO(), new Random(), I); } else { CD = StatUtils.margDepMatrix(D, args[2]); } System.out.println(MatrixUtils.toString(CD, \"M\" + args[2])); }", "n_tokens": 204, "n_pass": [1, 1, 1]}
{"time": "2021-02-14 18:30:45.947901", "score": "0.9711", "loss": "0.036", "code": "public static void main(String[] args) throws Exception { Instances D = Evaluation.loadDataset(args); MLUtils.prepareData(D); int L = D.classIndex(); double[][] CD = null; if (args[2].equals(\"L\")) { String I = \"I\"; if (args.length >= 3) I = args[3]; CD = StatUtils.LEAD(D, new SMO(), new Random(), I); } out.println(MatrixUtils.toString(CD, \"M\" + args[2])); }", "n_tokens": 178, "n_pass": [26, 2, 2]}
{"time": "2021-02-14 18:30:48.661447", "score": "0.9957", "loss": "0.0078", "code": "public static void main(String[] args) throws Exception { Instances D = Evaluation.loadDataset(args); MLUtils.prepareData(D); int L = CD = null; if (args[2].equals(\"L\")) { String I = \"I\"; if (args.length >= 3) I = args[3]; CD = StatUtils.LEAD(D, new SMO(), new Random(), I); } out.println(MatrixUtils.toString(CD, \"M\" + args[2])); }", "n_tokens": 165, "n_pass": [54, 3, 3]}
{"time": "2021-02-14 18:30:51.385497", "score": "0.9984", "loss": "0.0017", "code": "public static void main(String[] args) throws Exception { Instances D = Evaluation.loadDataset(args); MLUtils.prepareData(D); int L = CD = null; if (args[2].equals(\"L\")) { String I = \"I\"; if (args.length >= 3) I .LEAD(D, new SMO(), new Random(), I); } out.println(MatrixUtils.toString(CD, \"M\" + args[2])); }", "n_tokens": 152, "n_pass": [59, 4, 4]}
{"time": "2021-02-14 18:30:54.077496", "score": "0.9973", "loss": "0.0031", "code": "public static void main(String[] args) throws Exception { Instances D = Evaluation.loadDataset(args); MLUtils CD = null; if (args[2].equals(\"L\")) { String I = \"I\"; if (args.length >= 3) I .LEAD(D, new SMO(), new Random(), I); } out.println(MatrixUtils.toString(CD, \"M\" + args[2])); }", "n_tokens": 140, "n_pass": [67, 5, 5]}
{"time": "2021-02-14 18:30:56.773214", "score": "0.995", "loss": "0.0055", "code": "public static void main(String[] args) throws Exception { Instances D = Evaluation.loadDataset(args); MLUtils; if (args[2].equals(\"L\")) { String I = \"I\"; if (args.length >= 3) I .LEAD(D, new SMO(), new Random(), I); } out.println(MatrixUtils.toString(CD, \"M\" + args[2])); }", "n_tokens": 134, "n_pass": [101, 6, 6]}
{"time": "2021-02-14 18:30:59.483272", "score": "0.9976", "loss": "0.0024", "code": "public static void main(String[] args) throws Exception { Instances D = Evaluation.loadDataset(args); MLUtils; if (args[2].equals(\"L\")) { String I = \"I\"; if (args.length >= 3) I .LEAD(D, new SMO(), I); } out.println(MatrixUtils.toString(CD, \"M\" + args[2])); }", "n_tokens": 127, "n_pass": [111, 7, 7]}
{"time": "2021-02-14 18:31:02.599719", "score": "0.9814", "loss": "0.0201", "code": "public static void main(String[] args) throws Exception { Instances D = Evaluation.loadDataset; if (args[2].equals(\"L\")) { String I = \"I\"; if (args.length >= 3) I .LEAD(D, new SMO(), I); } out.println(MatrixUtils.toString(CD, \"M\" + args[2])); }", "n_tokens": 121, "n_pass": [122, 8, 8]}
{"time": "2021-02-14 18:31:05.705503", "score": "0.9953", "loss": "0.0058", "code": "public static void main(String[] args) throws Exception { Instances D; if (args[2].equals(\"L\")) { String I = \"I\"; if (args.length >= 3) I .LEAD(D, new SMO(), I); } out.println(MatrixUtils.toString(CD, \"M\" + args[2])); }", "n_tokens": 115, "n_pass": [141, 9, 9]}
{"time": "2021-02-14 18:31:08.808272", "score": "0.999", "loss": "0.0011", "code": "public static void main(String[] args) throws Exception { Instances D; if (args.equals(\"L\")) { String I = \"I\"; if (args.length >= 3) I .LEAD(D, new SMO(), I); } out.println(MatrixUtils.toString(CD, \"M\" + args[2])); }", "n_tokens": 112, "n_pass": [198, 10, 10]}
{"time": "2021-02-14 18:31:11.491619", "score": "0.999", "loss": "0.0011", "code": "public static void main(String[] args) throws Exception { Instances D; if (args.equals()) { String I = \"I\"; if (args.length >= 3) I .LEAD(D, new SMO(), I); } out.println(MatrixUtils.toString(CD, \"M\" + args[2])); }", "n_tokens": 109, "n_pass": [199, 11, 11]}
{"time": "2021-02-14 18:31:14.154076", "score": "0.9995", "loss": "0.0006", "code": "public static void main(String[] args) throws Exception { Instances D; if (args.equals()) { String= \"I\"; if (args.length >= 3) I .LEAD(D, new SMO(), I); } out.println(MatrixUtils.toString(CD, \"M\" + args[2])); }", "n_tokens": 106, "n_pass": [202, 12, 12]}
{"time": "2021-02-14 18:31:16.821945", "score": "0.9999", "loss": "0.0002", "code": "public static void main(String[] args) throws Exception { Instances D; if (args.equals()) { String= \"I\"; if (args.length >= 3) I(D, new SMO(), I); } out.println(MatrixUtils.toString(CD, \"M\" + args[2])); }", "n_tokens": 103, "n_pass": [210, 13, 13]}
{"time": "2021-02-14 18:31:19.491341", "score": "0.9993", "loss": "0.0008", "code": "public static void main(String[] args) throws Exception { Instances D; if (args.equals()) { String= \"I\"; if (args.length >= 3) I(D,SMO(), I); } out.println(MatrixUtils.toString(CD, \"M\" + args[2])); }", "n_tokens": 100, "n_pass": [212, 14, 14]}
{"time": "2021-02-14 18:31:22.158246", "score": "0.9994", "loss": "0.0007", "code": "public static void main(String[] args) throws Exception { Instances D; if (args.equals()) { String= \"I\"; if (args.length >= 3) I(D,SMO()); } out.println(MatrixUtils.toString(CD, \"M\" + args[2])); }", "n_tokens": 97, "n_pass": [214, 15, 15]}
{"time": "2021-02-14 18:31:24.818841", "score": "0.9994", "loss": "0.0007", "code": "public static void main(String[] args) throws Exception { Instances D; if (args.equals()) { String= \"I\"; if (args.length >= 3) I(D,SMO()); } out.println(MatrixUtils.toString(CD, + args[2])); }", "n_tokens": 93, "n_pass": [219, 16, 16]}
{"time": "2021-02-14 18:31:27.504973", "score": "0.9994", "loss": "0.0007", "code": " void main(String[] args) throws Exception { Instances D; if (args.equals()) { String= \"I\"; if (args.length >= 3) I(D,SMO()); } out.println(MatrixUtils.toString(CD, + args[2])); }", "n_tokens": 90, "n_pass": [223, 17, 17]}
{"time": "2021-02-14 18:31:30.594259", "score": "0.9984", "loss": "0.0023", "code": " void main(String[] args)  { Instances D; if (args.equals()) { String= \"I\"; if (args.length >= 3) I(D,SMO()); } out.println(MatrixUtils.toString(CD, + args[2])); }", "n_tokens": 87, "n_pass": [228, 18, 18]}
{"time": "2021-02-14 18:31:33.250394", "score": "0.999", "loss": "0.0016", "code": " void main(String[] args)  { ; if (args.equals()) { String= \"I\"; if (args.length >= 3) I(D,SMO()); } out.println(MatrixUtils.toString(CD, + args[2])); }", "n_tokens": 84, "n_pass": [230, 19, 19]}
{"time": "2021-02-14 18:31:40.197745", "score": "0.999", "loss": "0.0016", "code": " void main(String[] args) { ; if (args.equals()) { String= \"I\"; if (args.length >= 3) I(D,SMO()); } out.println(MatrixUtils.toString(CD, + args[2])); }", "n_tokens": 83, "n_pass": [310, 20, 20]}
{"time": "2021-02-14 18:31:42.857589", "score": "0.999", "loss": "0.0016", "code": " void main(String[] args){ ; if (args.equals()) { String= \"I\"; if (args.length >= 3) I(D,SMO()); } out.println(MatrixUtils.toString(CD, + args[2])); }", "n_tokens": 82, "n_pass": [311, 21, 21]}
{"time": "2021-02-14 18:31:45.512702", "score": "0.999", "loss": "0.0016", "code": " void main(String[] args){; if (args.equals()) { String= \"I\"; if (args.length >= 3) I(D,SMO()); } out.println(MatrixUtils.toString(CD, + args[2])); }", "n_tokens": 81, "n_pass": [313, 22, 22]}
{"time": "2021-02-14 18:31:48.197071", "score": "0.999", "loss": "0.0016", "code": " void main(String[] args){ if (args.equals()) { String= \"I\"; if (args.length >= 3) I(D,SMO()); } out.println(MatrixUtils.toString(CD, + args[2])); }", "n_tokens": 80, "n_pass": [314, 23, 23]}
{"time": "2021-02-14 18:31:50.847062", "score": "0.999", "loss": "0.0016", "code": " void main(String[] args){if (args.equals()) { String= \"I\"; if (args.length >= 3) I(D,SMO()); } out.println(MatrixUtils.toString(CD, + args[2])); }", "n_tokens": 79, "n_pass": [315, 24, 24]}
{"time": "2021-02-14 18:31:53.497798", "score": "0.999", "loss": "0.0016", "code": " void main(String[] args){if(args.equals()) { String= \"I\"; if (args.length >= 3) I(D,SMO()); } out.println(MatrixUtils.toString(CD, + args[2])); }", "n_tokens": 78, "n_pass": [317, 25, 25]}
{"time": "2021-02-14 18:31:56.169881", "score": "0.9985", "loss": "0.0027", "code": " void main(String[] args){if(equals()) { String= \"I\"; if (args.length >= 3) I(D,SMO()); } out.println(MatrixUtils.toString(CD, + args[2])); }", "n_tokens": 76, "n_pass": [319, 26, 26]}
{"time": "2021-02-14 18:31:58.847057", "score": "0.9981", "loss": "0.0033", "code": " void main(String[] args){if(equals()) { String= \"I\"; if (length >= 3) I(D,SMO()); } out.println(MatrixUtils.toString(CD, + args[2])); }", "n_tokens": 74, "n_pass": [329, 27, 27]}
{"time": "2021-02-14 18:32:01.504640", "score": "0.9981", "loss": "0.0033", "code": " void main(String[] args){if(equals()) { String= \"I\"; if (length >= 3) I(SMO()); } out.println(MatrixUtils.toString(CD, + args[2])); }", "n_tokens": 72, "n_pass": [335, 28, 28]}
{"time": "2021-02-14 18:32:04.186982", "score": "0.9899", "loss": "0.0181", "code": " void main(String[] args){if(equals()) { String= \"I\"; if (length >= 3) I(SMO()); } println(MatrixUtils.toString(CD, + args[2])); }", "n_tokens": 70, "n_pass": [340, 29, 29]}
{"time": "2021-02-14 18:32:06.851996", "score": "0.9838", "loss": "0.033", "code": " void main(String[] args){if(equals()) { String= \"I\"; if (length >= 3) I(SMO()); } println(toString(CD, + args[2])); }", "n_tokens": 68, "n_pass": [342, 30, 30]}
{"time": "2021-02-14 18:32:09.514072", "score": "0.9966", "loss": "0.0052", "code": " void main(String[] args){if(equals()) { String= \"I\"; if (length >= 3) I(SMO()); } println(toString( + args[2])); }", "n_tokens": 66, "n_pass": [344, 31, 31]}
{"time": "2021-02-14 18:32:12.196161", "score": "0.9985", "loss": "0.0024", "code": " void main(String[] args){if(equals()) { String= \"I\"; if (length >= 3) I(SMO()); } println(toString( args[2])); }", "n_tokens": 64, "n_pass": [345, 32, 32]}
{"time": "2021-02-14 18:32:14.846803", "score": "0.9985", "loss": "0.0024", "code": "void main(String[] args){if(equals()) { String= \"I\"; if (length >= 3) I(SMO()); } println(toString( args[2])); }", "n_tokens": 63, "n_pass": [351, 33, 33]}
{"time": "2021-02-14 18:32:18.333522", "score": "0.9985", "loss": "0.0024", "code": "void main(String[]args){if(equals()) { String= \"I\"; if (length >= 3) I(SMO()); } println(toString( args[2])); }", "n_tokens": 62, "n_pass": [359, 34, 34]}
{"time": "2021-02-14 18:32:27.513998", "score": "0.9985", "loss": "0.0024", "code": "void main(String[]args){if(equals()){ String= \"I\"; if (length >= 3) I(SMO()); } println(toString( args[2])); }", "n_tokens": 61, "n_pass": [451, 35, 35]}
{"time": "2021-02-14 18:32:30.174816", "score": "0.9985", "loss": "0.0024", "code": "void main(String[]args){if(equals()){String= \"I\"; if (length >= 3) I(SMO()); } println(toString( args[2])); }", "n_tokens": 60, "n_pass": [452, 36, 36]}
{"time": "2021-02-14 18:32:32.823644", "score": "0.9985", "loss": "0.0024", "code": "void main(String[]args){if(equals()){String=\"I\"; if (length >= 3) I(SMO()); } println(toString( args[2])); }", "n_tokens": 59, "n_pass": [455, 37, 37]}
{"time": "2021-02-14 18:32:35.504188", "score": "0.9981", "loss": "0.0031", "code": "void main(String[]args){if(equals()){String=\"\"; if (length >= 3) I(SMO()); } println(toString( args[2])); }", "n_tokens": 58, "n_pass": [457, 38, 38]}
{"time": "2021-02-14 18:32:38.159157", "score": "0.9981", "loss": "0.0031", "code": "void main(String[]args){if(equals()){String=\"\";if (length >= 3) I(SMO()); } println(toString( args[2])); }", "n_tokens": 57, "n_pass": [460, 39, 39]}
{"time": "2021-02-14 18:32:40.817580", "score": "0.9981", "loss": "0.0031", "code": "void main(String[]args){if(equals()){String=\"\";if(length >= 3) I(SMO()); } println(toString( args[2])); }", "n_tokens": 56, "n_pass": [462, 40, 40]}
{"time": "2021-02-14 18:32:43.472637", "score": "0.9981", "loss": "0.0031", "code": "void main(String[]args){if(equals()){String=\"\";if(length>= 3) I(SMO()); } println(toString( args[2])); }", "n_tokens": 55, "n_pass": [465, 41, 41]}
{"time": "2021-02-14 18:32:46.144106", "score": "0.9979", "loss": "0.0034", "code": "void main(String[]args){if(equals()){String=\"\";if(length= 3) I(SMO()); } println(toString( args[2])); }", "n_tokens": 54, "n_pass": [466, 42, 42]}
{"time": "2021-02-14 18:32:48.803915", "score": "0.9979", "loss": "0.0034", "code": "void main(String[]args){if(equals()){String=\"\";if(length=3) I(SMO()); } println(toString( args[2])); }", "n_tokens": 53, "n_pass": [468, 43, 43]}
{"time": "2021-02-14 18:32:51.479221", "score": "0.9979", "loss": "0.0034", "code": "void main(String[]args){if(equals()){String=\"\";if(length=3)I(SMO()); } println(toString( args[2])); }", "n_tokens": 52, "n_pass": [471, 44, 44]}
{"time": "2021-02-14 18:32:54.141864", "score": "0.9983", "loss": "0.0025", "code": "void main(String[]args){if(equals()){String=\"\";if(length=3)(SMO()); } println(toString( args[2])); }", "n_tokens": 51, "n_pass": [472, 45, 45]}
{"time": "2021-02-14 18:32:56.791548", "score": "0.9983", "loss": "0.0025", "code": "void main(String[]args){if(equals()){String=\"\";if(length=3)(SMO());} println(toString( args[2])); }", "n_tokens": 50, "n_pass": [479, 46, 46]}
{"time": "2021-02-14 18:32:59.459023", "score": "0.9983", "loss": "0.0025", "code": "void main(String[]args){if(equals()){String=\"\";if(length=3)(SMO());}println(toString( args[2])); }", "n_tokens": 49, "n_pass": [481, 47, 47]}
{"time": "2021-02-14 18:33:02.109973", "score": "0.9898", "loss": "0.0145", "code": "void main(String[]args){if(equals()){String=\"\";if(length=3)(SMO());}(toString( args[2])); }", "n_tokens": 48, "n_pass": [482, 48, 48]}
{"time": "2021-02-14 18:33:04.751355", "score": "0.9828", "loss": "0.0277", "code": "void main(String[]args){if(equals()){String=\"\";if(length=3)(SMO());}(( args[2])); }", "n_tokens": 47, "n_pass": [484, 49, 49]}
{"time": "2021-02-14 18:33:07.400640", "score": "0.9828", "loss": "0.0277", "code": "void main(String[]args){if(equals()){String=\"\";if(length=3)(SMO());}((args[2])); }", "n_tokens": 46, "n_pass": [486, 50, 50]}
{"time": "2021-02-14 18:33:10.047986", "score": "0.9828", "loss": "0.0277", "code": "void main(String[]args){if(equals()){String=\"\";if(length=3)(SMO());}((args[2]));}", "n_tokens": 45, "n_pass": [494, 51, 51]}
{"time": "2021-02-14 18:33:13.521563", "score": "0.9836", "loss": "0.0257", "code": "void main(String[]args){if(equals()){String=\"\";if(length3)(SMO());}((args[2]));}", "n_tokens": 44, "n_pass": [521, 52, 52]}
{"time": "2021-02-14 18:33:16.168016", "score": "0.9836", "loss": "0.0257", "code": "void main(String[]args){if(equals()){String=\"\";if(length)(SMO());}((args[2]));}", "n_tokens": 43, "n_pass": [522, 53, 53]}

Minimal simplified code:
void main(String[]args){if(equals()){String="";if(length)(SMO());}((args[2]));}

