
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/58code__Oceanus/oceanus-all/oceanus-exchange/oceanus-exchange-sqlparser/src/main/java/com/bj58/sql/parser/CursorNode_printSubNodes.java
method_name = printSubNodes
method_body = public void printSubNodes(int depth) { super.printSubNodes(depth); if (orderByList != null) { printLabel(depth, "orderByList: "); orderByList.treePrint(depth + 1); } if (offset != null) { printLabel(depth, "offset: "); offset.treePrint(depth + 1); } if (fetchFirst != null) { printLabel(depth, "fetchFirst: "); fetchFirst.treePrint(depth + 1); } }
predict, score, loss = printSubNodes, 0.9999592304229736, 0.00010954733443213627

Trace of simplified code(s):
{"time": "2021-02-14 08:32:27.528476", "score": "0.9999", "loss": "0.0002", "code": "public void printSubNodes(int depth) { super.printSubNodes(depth); if (orderByList != null) { printLabel(depth, \"orderByList: \"); orderByList.treePrint(depth + 1); } if (offset != null) { printLabel(depth, \"offset: \"); offset.treePrint(depth + 1); } if (fetchFirst != null) { printLabel(depth, \"fetchFirst: \"); fetchFirst.treePrint(depth + 1); } }", "n_tokens": 142, "n_pass": [1, 1, 1]}
{"time": "2021-02-14 08:32:30.197373", "score": "0.9999", "loss": "0.0002", "code": "public void printSubNodes(int depth) { super.printSubNodes(depth); if (orderByList != null) { printLabel(depth, \"orderByList: \"); orderByList.treePrint(depth + 1); } if (offset != null!= null) { printLabel(depth, \"fetchFirst: \"); fetchFirst.treePrint(depth + 1); } }", "n_tokens": 106, "n_pass": [10, 2, 2]}
{"time": "2021-02-14 08:32:32.903380", "score": "1.0", "loss": "0.0002", "code": "public void printSubNodes(int depth) { super.printSubNodes(depth); if (orderByList != null) { printLabel(depth, \"orderByList: \"); orderByList.treePrint(depth + 1); } if (offset != null!= null) { printLabel(depth, \"fetchFirst: \"+ 1); } }", "n_tokens": 97, "n_pass": [40, 3, 3]}
{"time": "2021-02-14 08:32:36.011518", "score": "0.9999", "loss": "0.0001", "code": "public void printSubNodes(int depth) {(depth); if (orderByList != null) { printLabel(depth, \"orderByList: \"); orderByList.treePrint(depth + 1); } if (offset != null!= null) { printLabel(depth, \"fetchFirst: \"+ 1); } }", "n_tokens": 93, "n_pass": [78, 4, 4]}
{"time": "2021-02-14 08:32:38.664943", "score": "0.9999", "loss": "0.0001", "code": "public void printSubNodes(int depth) { if (orderByList != null) { printLabel(depth, \"orderByList: \"); orderByList.treePrint(depth + 1); } if (offset != null!= null) { printLabel(depth, \"fetchFirst: \"+ 1); } }", "n_tokens": 89, "n_pass": [79, 5, 5]}
{"time": "2021-02-14 08:32:41.313303", "score": "0.9999", "loss": "0.0001", "code": "public void printSubNodes(int depth) { if ( null) { printLabel(depth, \"orderByList: \"); orderByList.treePrint(depth + 1); } if (offset != null!= null) { printLabel(depth, \"fetchFirst: \"+ 1); } }", "n_tokens": 85, "n_pass": [81, 6, 6]}
{"time": "2021-02-14 08:32:44.432036", "score": "1.0", "loss": "0.0001", "code": "public void printSubNodes(int depth) { if ( null) { printLabel( \"orderByList: \"); orderByList.treePrint(depth + 1); } if (offset != null!= null) { printLabel(depth, \"fetchFirst: \"+ 1); } }", "n_tokens": 83, "n_pass": [143, 7, 7]}
{"time": "2021-02-14 08:32:47.091593", "score": "1.0", "loss": "0.0001", "code": "public void printSubNodes(int depth) { if ( null) { printLabel( \" \"); orderByList.treePrint(depth + 1); } if (offset != null!= null) { printLabel(depth, \"fetchFirst: \"+ 1); } }", "n_tokens": 81, "n_pass": [144, 8, 8]}
{"time": "2021-02-14 08:32:49.768917", "score": "0.9999", "loss": "0.0001", "code": "public void printSubNodes(int depth) { if ( null) { printLabel( \" \"); orderByList(depth + 1); } if (offset != null!= null) { printLabel(depth, \"fetchFirst: \"+ 1); } }", "n_tokens": 79, "n_pass": [148, 9, 9]}
{"time": "2021-02-14 08:32:52.421911", "score": "0.9999", "loss": "0.0003", "code": "public void printSubNodes(int depth) { if ( null) { printLabel( \" \"); orderByList(depth + 1); } if (offset != nullnull) { printLabel(depth, \"fetchFirst: \"+ 1); } }", "n_tokens": 76, "n_pass": [159, 10, 10]}
{"time": "2021-02-14 08:32:55.063508", "score": "0.9999", "loss": "0.0002", "code": "public void printSubNodes(int depth) { if ( null) { printLabel( \" \"); orderByList(depth + 1); } if (offset != nullnull) { printLabel(depth, \"fetchFirst: \"); } }", "n_tokens": 73, "n_pass": [165, 11, 11]}
{"time": "2021-02-14 08:32:57.700155", "score": "0.9999", "loss": "0.0002", "code": "void printSubNodes(int depth) { if ( null) { printLabel( \" \"); orderByList(depth + 1); } if (offset != nullnull) { printLabel(depth, \"fetchFirst: \"); } }", "n_tokens": 71, "n_pass": [168, 12, 12]}
{"time": "2021-02-14 08:33:00.756888", "score": "0.9999", "loss": "0.0001", "code": "void printSubNodes(int depth) { if ( null) { printLabel( \" \");(depth + 1); } if (offset != nullnull) { printLabel(depth, \"fetchFirst: \"); } }", "n_tokens": 69, "n_pass": [183, 13, 13]}
{"time": "2021-02-14 08:33:03.398263", "score": "1.0", "loss": "0.0001", "code": "void printSubNodes(int depth) { if ( null) { printLabel( \" \");(depth + 1); } if (offset !=null) { printLabel(depth, \"fetchFirst: \"); } }", "n_tokens": 67, "n_pass": [193, 14, 14]}
{"time": "2021-02-14 08:33:13.968438", "score": "1.0", "loss": "0.0001", "code": "void printSubNodes(int depth) { if ( null) { printLabel( \" \");(depth + 1); } if (offset !=null){ printLabel(depth, \"fetchFirst: \"); } }", "n_tokens": 66, "n_pass": [286, 15, 15]}
{"time": "2021-02-14 08:33:16.623991", "score": "1.0", "loss": "0.0001", "code": "void printSubNodes(int depth) { if ( null) { printLabel( \" \");(depth + 1); } if (offset !=null){printLabel(depth, \"fetchFirst: \"); } }", "n_tokens": 65, "n_pass": [288, 16, 16]}
{"time": "2021-02-14 08:33:19.248263", "score": "1.0", "loss": "0.0002", "code": "void printSubNodes(int depth) { if ( null) { printLabel( \" \");(depth + 1); } if (offset !=null){printLabel( \"fetchFirst: \"); } }", "n_tokens": 63, "n_pass": [291, 17, 17]}
{"time": "2021-02-14 08:33:21.883117", "score": "1.0", "loss": "0.0", "code": "void printSubNodes(int depth) { if ( null) { printLabel( \" \");(depth + 1); } if (offset !=null){printLabel( \" \"); } }", "n_tokens": 61, "n_pass": [293, 18, 18]}
{"time": "2021-02-14 08:33:25.353468", "score": "1.0", "loss": "0.0", "code": "void printSubNodes(int depth){ if ( null) { printLabel( \" \");(depth + 1); } if (offset !=null){printLabel( \" \"); } }", "n_tokens": 60, "n_pass": [306, 19, 19]}
{"time": "2021-02-14 08:33:27.996188", "score": "1.0", "loss": "0.0", "code": "void printSubNodes(int depth){if ( null) { printLabel( \" \");(depth + 1); } if (offset !=null){printLabel( \" \"); } }", "n_tokens": 59, "n_pass": [308, 20, 20]}
{"time": "2021-02-14 08:33:30.621340", "score": "1.0", "loss": "0.0", "code": "void printSubNodes(int depth){if( null) { printLabel( \" \");(depth + 1); } if (offset !=null){printLabel( \" \"); } }", "n_tokens": 58, "n_pass": [310, 21, 21]}
{"time": "2021-02-14 08:33:33.274160", "score": "1.0", "loss": "0.0", "code": "void printSubNodes(int depth){if(null) { printLabel( \" \");(depth + 1); } if (offset !=null){printLabel( \" \"); } }", "n_tokens": 57, "n_pass": [312, 22, 22]}
{"time": "2021-02-14 08:33:35.915586", "score": "1.0", "loss": "0.0", "code": "void printSubNodes(int depth){if(null){ printLabel( \" \");(depth + 1); } if (offset !=null){printLabel( \" \"); } }", "n_tokens": 56, "n_pass": [315, 23, 23]}
{"time": "2021-02-14 08:33:38.553724", "score": "1.0", "loss": "0.0", "code": "void printSubNodes(int depth){if(null){printLabel( \" \");(depth + 1); } if (offset !=null){printLabel( \" \"); } }", "n_tokens": 55, "n_pass": [317, 24, 24]}
{"time": "2021-02-14 08:33:41.181176", "score": "1.0", "loss": "0.0001", "code": "void printSubNodes(int depth){if(null){( \" \");(depth + 1); } if (offset !=null){printLabel( \" \"); } }", "n_tokens": 54, "n_pass": [318, 25, 25]}
{"time": "2021-02-14 08:33:43.839626", "score": "1.0", "loss": "0.0001", "code": "void printSubNodes(int depth){if(null){(\" \");(depth + 1); } if (offset !=null){printLabel( \" \"); } }", "n_tokens": 53, "n_pass": [320, 26, 26]}
{"time": "2021-02-14 08:33:46.475058", "score": "1.0", "loss": "0.0001", "code": "void printSubNodes(int depth){if(null){(\"\");(depth + 1); } if (offset !=null){printLabel( \" \"); } }", "n_tokens": 52, "n_pass": [322, 27, 27]}
{"time": "2021-02-14 08:33:49.106260", "score": "1.0", "loss": "0.0", "code": "void printSubNodes(int depth){if(null){(\"\");( + 1); } if (offset !=null){printLabel( \" \"); } }", "n_tokens": 51, "n_pass": [327, 28, 28]}
{"time": "2021-02-14 08:33:51.730063", "score": "1.0", "loss": "0.0", "code": "void printSubNodes(int depth){if(null){(\"\");(+ 1); } if (offset !=null){printLabel( \" \"); } }", "n_tokens": 50, "n_pass": [328, 29, 29]}
{"time": "2021-02-14 08:33:54.350233", "score": "1.0", "loss": "0.0", "code": "void printSubNodes(int depth){if(null){(\"\");( 1); } if (offset !=null){printLabel( \" \"); } }", "n_tokens": 49, "n_pass": [329, 30, 30]}
{"time": "2021-02-14 08:33:56.967482", "score": "1.0", "loss": "0.0", "code": "void printSubNodes(int depth){if(null){(\"\");(1); } if (offset !=null){printLabel( \" \"); } }", "n_tokens": 48, "n_pass": [330, 31, 31]}
{"time": "2021-02-14 08:33:59.589344", "score": "1.0", "loss": "0.0001", "code": "void printSubNodes(int depth){if(null){(\"\");(1);} if (offset !=null){printLabel( \" \"); } }", "n_tokens": 47, "n_pass": [334, 32, 32]}
{"time": "2021-02-14 08:34:02.238473", "score": "1.0", "loss": "0.0001", "code": "void printSubNodes(int depth){if(null){(\"\");(1);}if (offset !=null){printLabel( \" \"); } }", "n_tokens": 46, "n_pass": [336, 33, 33]}
{"time": "2021-02-14 08:34:04.859997", "score": "1.0", "loss": "0.0", "code": "void printSubNodes(int depth){if(null){(\"\");(1);}if(offset !=null){printLabel( \" \"); } }", "n_tokens": 45, "n_pass": [338, 34, 34]}
{"time": "2021-02-14 08:34:07.479130", "score": "1.0", "loss": "0.0001", "code": "void printSubNodes(int depth){if(null){(\"\");(1);}if(offset!=null){printLabel( \" \"); } }", "n_tokens": 44, "n_pass": [341, 35, 35]}
{"time": "2021-02-14 08:34:10.089630", "score": "1.0", "loss": "0.0001", "code": "void printSubNodes(int depth){if(null){(\"\");(1);}if(offset=null){printLabel( \" \"); } }", "n_tokens": 43, "n_pass": [342, 36, 36]}
{"time": "2021-02-14 08:34:12.708938", "score": "0.9999", "loss": "0.0006", "code": "void printSubNodes(int depth){if(null){(\"\");(1);}if(offsetnull){printLabel( \" \"); } }", "n_tokens": 42, "n_pass": [343, 37, 37]}
{"time": "2021-02-14 08:34:15.353995", "score": "1.0", "loss": "0.0001", "code": "void printSubNodes(int depth){if(null){(\"\");(1);}if(offset){printLabel( \" \"); } }", "n_tokens": 41, "n_pass": [344, 38, 38]}
{"time": "2021-02-14 08:34:23.319036", "score": "1.0", "loss": "0.0001", "code": "void printSubNodes(int depth){if(null){(\"\");(1);}if(offset){printLabel(\" \"); } }", "n_tokens": 40, "n_pass": [391, 40, 39]}
{"time": "2021-02-14 08:34:25.930008", "score": "0.9999", "loss": "0.0001", "code": "void printSubNodes(int depth){if(null){(\"\");(1);}if(offset){printLabel(\"\"); } }", "n_tokens": 39, "n_pass": [392, 41, 40]}
{"time": "2021-02-14 08:34:28.584624", "score": "0.9999", "loss": "0.0001", "code": "void printSubNodes(int depth){if(null){(\"\");(1);}if(offset){printLabel(\"\");} }", "n_tokens": 38, "n_pass": [396, 42, 41]}
{"time": "2021-02-14 08:34:31.218471", "score": "0.9999", "loss": "0.0001", "code": "void printSubNodes(int depth){if(null){(\"\");(1);}if(offset){printLabel(\"\");}}", "n_tokens": 37, "n_pass": [398, 43, 42]}

Minimal simplified code:
void printSubNodes(int depth){if(null){("");(1);}if(offset){printLabel("");}}

