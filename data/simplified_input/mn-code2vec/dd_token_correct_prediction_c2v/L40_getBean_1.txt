
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/jmockit__jmockit1/main/src/mockit/integration/springframework/TestWebApplicationContext_getBean.java
method_name = getBean
method_body = @Override @Nonnull public <T> T getBean(@Nonnull Class<T> requiredType) { BeanExporter beanExporter = getBeanExporter(); T bean = BeanLookup.getBean(beanExporter, requiredType); return bean; }
predict, score, loss = getBean, 0.9831656217575073, 0.02771187201142311

Trace of simplified code(s):
{"time": "2021-02-14 06:01:56.726806", "score": "0.9832", "loss": "0.0277", "code": "@Override @Nonnull public <T> T getBean(@Nonnull Class<T> requiredType) { BeanExporter beanExporter = getBeanExporter(); T bean = BeanLookup.getBean(beanExporter, requiredType); return bean; }", "n_tokens": 63, "n_pass": [1, 1, 1]}
{"time": "2021-02-14 06:01:59.365131", "score": "0.9921", "loss": "0.0126", "code": "@Override @Nonnull public <T> T getBean(@Nonnull Class<T> requiredType) { BeanExporter .getBean(beanExporter, requiredType); return bean; }", "n_tokens": 47, "n_pass": [10, 2, 2]}
{"time": "2021-02-14 06:02:02.005537", "score": "0.9589", "loss": "0.1173", "code": "@Override @Nonnull public <T> T getBean(@Nonnull Class<T> requiredType) { BeanExporter ; return bean; }", "n_tokens": 39, "n_pass": [19, 3, 3]}
{"time": "2021-02-14 06:02:04.648256", "score": "0.401", "loss": "1.5363", "code": " <T> T getBean(@Nonnull Class<T> requiredType) { BeanExporter ; return bean; }", "n_tokens": 32, "n_pass": [20, 4, 4]}
{"time": "2021-02-14 06:02:13.719930", "score": "0.4008", "loss": "1.5188", "code": " <T> T getBean(@Nonnull Class<T> requiredType) { ; return bean; }", "n_tokens": 30, "n_pass": [68, 7, 5]}
{"time": "2021-02-14 06:02:16.335374", "score": "0.4008", "loss": "1.5188", "code": " <T> T getBean(@Nonnull Class<T> requiredType) { return bean; }", "n_tokens": 28, "n_pass": [69, 8, 6]}
{"time": "2021-02-14 06:02:34.009620", "score": "0.4008", "loss": "1.5188", "code": " <T> T getBean(@Nonnull Class<T> requiredType) { return bean;}", "n_tokens": 27, "n_pass": [116, 13, 7]}
{"time": "2021-02-14 06:02:36.649001", "score": "0.4008", "loss": "1.5188", "code": "<T> T getBean(@Nonnull Class<T> requiredType) { return bean;}", "n_tokens": 26, "n_pass": [117, 14, 8]}
{"time": "2021-02-14 06:02:39.267250", "score": "0.4008", "loss": "1.5188", "code": "<T>T getBean(@Nonnull Class<T> requiredType) { return bean;}", "n_tokens": 25, "n_pass": [121, 15, 9]}
{"time": "2021-02-14 06:02:43.087571", "score": "0.4008", "loss": "1.5188", "code": "<T>T getBean(@Nonnull Class<T>requiredType) { return bean;}", "n_tokens": 24, "n_pass": [133, 16, 10]}
{"time": "2021-02-14 06:02:45.699009", "score": "0.4008", "loss": "1.5188", "code": "<T>T getBean(@Nonnull Class<T>requiredType){ return bean;}", "n_tokens": 23, "n_pass": [136, 17, 11]}
{"time": "2021-02-14 06:02:48.331375", "score": "0.4008", "loss": "1.5188", "code": "<T>T getBean(@Nonnull Class<T>requiredType){return bean;}", "n_tokens": 22, "n_pass": [138, 18, 12]}

Minimal simplified code:
<T>T getBean(@Nonnull Class<T>requiredType){return bean;}

