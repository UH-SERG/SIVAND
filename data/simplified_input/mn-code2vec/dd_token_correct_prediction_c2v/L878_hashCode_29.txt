
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/rakam-io__rakam/rakam-spi/src/main/java/org/rakam/collection/Event_hashCode.java
method_name = hashCode
method_body = @Override public int hashCode() { int result = apiKey != null ? apiKey.hashCode() : 0; result = 31 * result + (apiVersion != null ? apiVersion.hashCode() : 0); result = 31 * result + (uploadTime != null ? uploadTime.hashCode() : 0); result = 31 * result + (checksum != null ? checksum.hashCode() : 0); return result; }
predict, score, loss = hashCode, 0.9999582767486572, 4.875540980719961e-05

Trace of simplified code(s):
{"time": "2021-02-16 04:43:45.696684", "score": "1.0", "loss": "0.0", "code": "@Override public int hashCode() { int result = apiKey != null ? apiKey.hashCode() : 0; result = 31 * result + (apiVersion != null ? apiVersion.hashCode() : 0); result = 31 * result + (uploadTime != null ? uploadTime.hashCode() : 0); result = 31 * result + (checksum != null ? checksum.hashCode() : 0); return result; }", "n_tokens": 150, "n_pass": [1, 1, 1]}
{"time": "2021-02-16 04:43:48.636402", "score": "0.9999", "loss": "0.0001", "code": "@Override public int hashCode() { int result =0; result = 31 * result + (apiVersion != null ? apiVersion.hashCode() : 0); result = 31 * result + (uploadTime != null ? uploadTime.hashCode() : 0); result = 31 * result + (checksum != null ? checksum.hashCode() : 0); return result; }", "n_tokens": 132, "n_pass": [21, 2, 2]}
{"time": "2021-02-16 04:43:51.246190", "score": "0.9987", "loss": "0.0018", "code": "@Override public int hashCode() { int result =0; result = 31 * result + (apiVersion != null ? apiVersion.hashCode() : 0)* result + (uploadTime != null ? uploadTime.hashCode() : 0); result = 31 * result + (checksum != null ? checksum.hashCode() : 0); return result; }", "n_tokens": 123, "n_pass": [47, 3, 3]}
{"time": "2021-02-16 04:43:54.197401", "score": "0.9981", "loss": "0.0031", "code": "@Override public int hashCode() { int result =0; result = 31 * result + (apiVersion != null ? apiVersion.hashCode() : 0)* result + (uploadTime ? uploadTime.hashCode() : 0); result = 31 * result + (checksum != null ? checksum.hashCode() : 0); return result; }", "n_tokens": 118, "n_pass": [89, 4, 4]}
{"time": "2021-02-16 04:43:57.147014", "score": "0.9751", "loss": "0.0805", "code": "@Override public int hashCode() { int result =0; result = 31 * result + (apiVersion != null ? apiVersion.hashCode() : 0)* result + (uploadTime ? uploadTime.hashCode() : 0); result = 31+ (checksum != null ? checksum.hashCode() : 0); return result; }", "n_tokens": 113, "n_pass": [93, 5, 5]}
{"time": "2021-02-16 04:43:59.719069", "score": "0.9729", "loss": "0.0926", "code": "@Override public int hashCode() { int result =0; result = 31 * result + (apiVersion != null ? apiVersion.hashCode() : 0)* result + (uploadTime ? uploadTime.hashCode() : 0); result = 31+ (checksum ? checksum.hashCode() : 0); return result; }", "n_tokens": 108, "n_pass": [95, 6, 6]}
{"time": "2021-02-16 04:44:02.328014", "score": "0.9979", "loss": "0.0042", "code": " int hashCode() { int result =0; result = 31 * result + (apiVersion != null ? apiVersion.hashCode() : 0)* result + (uploadTime ? uploadTime.hashCode() : 0); result = 31+ (checksum ? checksum.hashCode() : 0); return result; }", "n_tokens": 104, "n_pass": [100, 7, 7]}
{"time": "2021-02-16 04:44:05.984652", "score": "0.9976", "loss": "0.0046", "code": " int hashCode() { result =0; result = 31 * result + (apiVersion != null ? apiVersion.hashCode() : 0)* result + (uploadTime ? uploadTime.hashCode() : 0); result = 31+ (checksum ? checksum.hashCode() : 0); return result; }", "n_tokens": 102, "n_pass": [171, 8, 8]}
{"time": "2021-02-16 04:44:08.539950", "score": "0.9976", "loss": "0.0045", "code": " int hashCode() { result0; result = 31 * result + (apiVersion != null ? apiVersion.hashCode() : 0)* result + (uploadTime ? uploadTime.hashCode() : 0); result = 31+ (checksum ? checksum.hashCode() : 0); return result; }", "n_tokens": 100, "n_pass": [172, 9, 9]}
{"time": "2021-02-16 04:44:11.121207", "score": "0.9929", "loss": "0.0074", "code": " int hashCode() { result result = 31 * result + (apiVersion != null ? apiVersion.hashCode() : 0)* result + (uploadTime ? uploadTime.hashCode() : 0); result = 31+ (checksum ? checksum.hashCode() : 0); return result; }", "n_tokens": 98, "n_pass": [173, 10, 10]}
{"time": "2021-02-16 04:44:13.683945", "score": "0.9976", "loss": "0.0044", "code": " int hashCode() { result = 31 * result + (apiVersion != null ? apiVersion.hashCode() : 0)* result + (uploadTime ? uploadTime.hashCode() : 0); result = 31+ (checksum ? checksum.hashCode() : 0); return result; }", "n_tokens": 96, "n_pass": [174, 11, 11]}
{"time": "2021-02-16 04:44:16.261544", "score": "0.9973", "loss": "0.005", "code": " int hashCode() { result =1 * result + (apiVersion != null ? apiVersion.hashCode() : 0)* result + (uploadTime ? uploadTime.hashCode() : 0); result = 31+ (checksum ? checksum.hashCode() : 0); return result; }", "n_tokens": 94, "n_pass": [176, 12, 12]}
{"time": "2021-02-16 04:44:18.825112", "score": "0.9982", "loss": "0.003", "code": " int hashCode() { result =1 * + (apiVersion != null ? apiVersion.hashCode() : 0)* result + (uploadTime ? uploadTime.hashCode() : 0); result = 31+ (checksum ? checksum.hashCode() : 0); return result; }", "n_tokens": 92, "n_pass": [179, 13, 13]}
{"time": "2021-02-16 04:44:21.384769", "score": "0.9982", "loss": "0.0031", "code": " int hashCode() { result =1 * (apiVersion != null ? apiVersion.hashCode() : 0)* result + (uploadTime ? uploadTime.hashCode() : 0); result = 31+ (checksum ? checksum.hashCode() : 0); return result; }", "n_tokens": 90, "n_pass": [180, 14, 14]}
{"time": "2021-02-16 04:44:23.936299", "score": "0.9977", "loss": "0.0039", "code": " int hashCode() { result =1 * (apiVersion= null ? apiVersion.hashCode() : 0)* result + (uploadTime ? uploadTime.hashCode() : 0); result = 31+ (checksum ? checksum.hashCode() : 0); return result; }", "n_tokens": 88, "n_pass": [182, 15, 15]}
{"time": "2021-02-16 04:44:26.524519", "score": "0.9977", "loss": "0.0038", "code": " int hashCode() { result =1 * (apiVersionnull ? apiVersion.hashCode() : 0)* result + (uploadTime ? uploadTime.hashCode() : 0); result = 31+ (checksum ? checksum.hashCode() : 0); return result; }", "n_tokens": 86, "n_pass": [183, 16, 16]}
{"time": "2021-02-16 04:44:29.076547", "score": "0.9978", "loss": "0.0037", "code": " int hashCode() { result =1 * (apiVersion? apiVersion.hashCode() : 0)* result + (uploadTime ? uploadTime.hashCode() : 0); result = 31+ (checksum ? checksum.hashCode() : 0); return result; }", "n_tokens": 84, "n_pass": [184, 17, 17]}
{"time": "2021-02-16 04:44:31.629664", "score": "0.9976", "loss": "0.004", "code": " int hashCode() { result =1 * (apiVersion? hashCode() : 0)* result + (uploadTime ? uploadTime.hashCode() : 0); result = 31+ (checksum ? checksum.hashCode() : 0); return result; }", "n_tokens": 82, "n_pass": [186, 18, 18]}
{"time": "2021-02-16 04:44:34.176998", "score": "0.9873", "loss": "0.0129", "code": " int hashCode() { result =1 * (apiVersion? hashCode() : 0)* + (uploadTime ? uploadTime.hashCode() : 0); result = 31+ (checksum ? checksum.hashCode() : 0); return result; }", "n_tokens": 80, "n_pass": [192, 19, 19]}
{"time": "2021-02-16 04:44:36.732607", "score": "0.9869", "loss": "0.0134", "code": " int hashCode() { result =1 * (apiVersion? hashCode() : 0)* (uploadTime ? uploadTime.hashCode() : 0); result = 31+ (checksum ? checksum.hashCode() : 0); return result; }", "n_tokens": 78, "n_pass": [193, 20, 20]}
{"time": "2021-02-16 04:44:40.004131", "score": "1.0", "loss": "0.0", "code": " int hashCode() { result =1 * (apiVersion? hashCode() : 0)* (uploadTime ? uploadTime.hashCode() : 0); result =  (checksum ? checksum.hashCode() : 0); return result; }", "n_tokens": 75, "n_pass": [201, 21, 21]}
{"time": "2021-02-16 04:44:42.565632", "score": "0.9814", "loss": "0.0375", "code": " int hashCode() { result =1 * (apiVersion? hashCode() : 0)* (uploadTime ? uploadTime.hashCode() : 0); result =  (checksum ? checksum.hashCode: 0); return result; }", "n_tokens": 72, "n_pass": [205, 22, 22]}
{"time": "2021-02-16 04:44:45.128693", "score": "0.9819", "loss": "0.0366", "code": " int hashCode() { result =1 * (apiVersion? hashCode() : 0)* (uploadTime ? uploadTime.hashCode() : 0); result =  (checksum ? checksum.hashCode: 0); ; }", "n_tokens": 69, "n_pass": [208, 23, 23]}
{"time": "2021-02-16 04:44:48.771583", "score": "0.6888", "loss": "1.0327", "code": " int hashCode() { result =1 * (apiVersion? hashCode() : 0)* (uploadTime ? uploadTime.hashCode() : 0); result (checksum ? checksum.hashCode: 0); ; }", "n_tokens": 66, "n_pass": [231, 24, 24]}
{"time": "2021-02-16 04:44:59.622172", "score": "0.7487", "loss": "0.807", "code": " int hashCode() { result =1 * (apiVersion? hashCode() : 0)* (uploadTime ? uploadTime.hashCode() : 0); result (checksum ? hashCode: 0); ; }", "n_tokens": 64, "n_pass": [319, 26, 25]}
{"time": "2021-02-16 04:45:02.180058", "score": "0.7487", "loss": "0.807", "code": " int hashCode() { result =1 * (apiVersion? hashCode() : 0)* (uploadTime ? uploadTime.hashCode() : 0); result (checksum ? hashCode: 0); }", "n_tokens": 62, "n_pass": [323, 27, 26]}
{"time": "2021-02-16 04:45:04.739910", "score": "0.7487", "loss": "0.807", "code": "int hashCode() { result =1 * (apiVersion? hashCode() : 0)* (uploadTime ? uploadTime.hashCode() : 0); result (checksum ? hashCode: 0); }", "n_tokens": 61, "n_pass": [325, 28, 27]}
{"time": "2021-02-16 04:45:08.006028", "score": "0.7487", "loss": "0.807", "code": "int hashCode(){ result =1 * (apiVersion? hashCode() : 0)* (uploadTime ? uploadTime.hashCode() : 0); result (checksum ? hashCode: 0); }", "n_tokens": 60, "n_pass": [331, 29, 28]}
{"time": "2021-02-16 04:45:10.558754", "score": "0.7487", "loss": "0.807", "code": "int hashCode(){result =1 * (apiVersion? hashCode() : 0)* (uploadTime ? uploadTime.hashCode() : 0); result (checksum ? hashCode: 0); }", "n_tokens": 59, "n_pass": [333, 30, 29]}
{"time": "2021-02-16 04:45:13.130002", "score": "0.7487", "loss": "0.807", "code": "int hashCode(){result=1 * (apiVersion? hashCode() : 0)* (uploadTime ? uploadTime.hashCode() : 0); result (checksum ? hashCode: 0); }", "n_tokens": 58, "n_pass": [335, 31, 30]}
{"time": "2021-02-16 04:45:16.046292", "score": "0.7487", "loss": "0.807", "code": "int hashCode(){result=1* (apiVersion? hashCode() : 0)* (uploadTime ? uploadTime.hashCode() : 0); result (checksum ? hashCode: 0); }", "n_tokens": 57, "n_pass": [338, 32, 31]}
{"time": "2021-02-16 04:45:18.601605", "score": "0.7487", "loss": "0.807", "code": "int hashCode(){result=1*(apiVersion? hashCode() : 0)* (uploadTime ? uploadTime.hashCode() : 0); result (checksum ? hashCode: 0); }", "n_tokens": 56, "n_pass": [340, 33, 32]}
{"time": "2021-02-16 04:45:21.160040", "score": "0.7487", "loss": "0.807", "code": "int hashCode(){result=1*(apiVersion?hashCode() : 0)* (uploadTime ? uploadTime.hashCode() : 0); result (checksum ? hashCode: 0); }", "n_tokens": 55, "n_pass": [344, 34, 33]}
{"time": "2021-02-16 04:45:23.727593", "score": "0.7487", "loss": "0.807", "code": "int hashCode(){result=1*(apiVersion?hashCode(): 0)* (uploadTime ? uploadTime.hashCode() : 0); result (checksum ? hashCode: 0); }", "n_tokens": 54, "n_pass": [348, 35, 34]}
{"time": "2021-02-16 04:45:26.302313", "score": "0.7487", "loss": "0.807", "code": "int hashCode(){result=1*(apiVersion?hashCode():0)* (uploadTime ? uploadTime.hashCode() : 0); result (checksum ? hashCode: 0); }", "n_tokens": 53, "n_pass": [350, 36, 35]}
{"time": "2021-02-16 04:45:28.850851", "score": "0.7487", "loss": "0.807", "code": "int hashCode(){result=1*(apiVersion?hashCode():0)*(uploadTime ? uploadTime.hashCode() : 0); result (checksum ? hashCode: 0); }", "n_tokens": 52, "n_pass": [354, 37, 36]}
{"time": "2021-02-16 04:45:31.425516", "score": "0.7487", "loss": "0.807", "code": "int hashCode(){result=1*(apiVersion?hashCode():0)*(uploadTime? uploadTime.hashCode() : 0); result (checksum ? hashCode: 0); }", "n_tokens": 51, "n_pass": [357, 38, 37]}
{"time": "2021-02-16 04:45:33.976613", "score": "0.7487", "loss": "0.807", "code": "int hashCode(){result=1*(apiVersion?hashCode():0)*(uploadTime?uploadTime.hashCode() : 0); result (checksum ? hashCode: 0); }", "n_tokens": 50, "n_pass": [359, 39, 38]}
{"time": "2021-02-16 04:45:36.532112", "score": "0.9698", "loss": "0.1362", "code": "int hashCode(){result=1*(apiVersion?hashCode():0)*(uploadTime?uploadTimehashCode() : 0); result (checksum ? hashCode: 0); }", "n_tokens": 49, "n_pass": [361, 40, 39]}
{"time": "2021-02-16 04:45:41.663689", "score": "0.9698", "loss": "0.1362", "code": "int hashCode(){result=1*(apiVersion?hashCode():0)*(uploadTime?uploadTimehashCode(): 0); result (checksum ? hashCode: 0); }", "n_tokens": 48, "n_pass": [365, 42, 40]}
{"time": "2021-02-16 04:45:44.223896", "score": "0.9929", "loss": "0.0216", "code": "int hashCode(){result=1*(apiVersion?hashCode():0)*(uploadTime?uploadTimehashCode(): 0); (checksum ? hashCode: 0); }", "n_tokens": 46, "n_pass": [369, 43, 41]}
{"time": "2021-02-16 04:45:47.860184", "score": "0.9939", "loss": "0.011", "code": "int hashCode(){result=1*(apiVersion?hashCode():0)*(uploadTime?hashCode(): 0); (checksum ? hashCode: 0); }", "n_tokens": 45, "n_pass": [400, 44, 42]}
{"time": "2021-02-16 04:45:54.188270", "score": "0.9939", "loss": "0.011", "code": "int hashCode(){result=1*(apiVersion?hashCode():0)*(uploadTime?hashCode(): 0);(checksum ? hashCode: 0); }", "n_tokens": 44, "n_pass": [458, 45, 43]}
{"time": "2021-02-16 04:45:56.747620", "score": "0.9939", "loss": "0.011", "code": "int hashCode(){result=1*(apiVersion?hashCode():0)*(uploadTime?hashCode(): 0);(checksum? hashCode: 0); }", "n_tokens": 43, "n_pass": [460, 46, 44]}
{"time": "2021-02-16 04:45:59.303421", "score": "0.9939", "loss": "0.011", "code": "int hashCode(){result=1*(apiVersion?hashCode():0)*(uploadTime?hashCode(): 0);(checksum?hashCode: 0); }", "n_tokens": 42, "n_pass": [462, 47, 45]}
{"time": "2021-02-16 04:46:01.862574", "score": "0.9939", "loss": "0.011", "code": "int hashCode(){result=1*(apiVersion?hashCode():0)*(uploadTime?hashCode(): 0);(checksum?hashCode:0); }", "n_tokens": 41, "n_pass": [465, 48, 46]}
{"time": "2021-02-16 04:46:04.438826", "score": "0.9939", "loss": "0.011", "code": "int hashCode(){result=1*(apiVersion?hashCode():0)*(uploadTime?hashCode(): 0);(checksum?hashCode:0);}", "n_tokens": 40, "n_pass": [469, 49, 47]}
{"time": "2021-02-16 04:46:08.063247", "score": "0.9939", "loss": "0.011", "code": "int hashCode(){result=1*(apiVersion?hashCode():0)*(uploadTime?hashCode():0);(checksum?hashCode:0);}", "n_tokens": 39, "n_pass": [498, 50, 48]}

Minimal simplified code:
int hashCode(){result=1*(apiVersion?hashCode():0)*(uploadTime?hashCode():0);(checksum?hashCode:0);}

