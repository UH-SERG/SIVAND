
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/linroid__Sky31Radio/app/src/main/java/com/linroid/sky31radio/view/DividerItemDecoration_onDraw.java
method_name = onDraw
method_body = @Override public void onDraw(Canvas c, RecyclerView parent) { if (mOrientation == VERTICAL_LIST) { drawVertical(c, parent); } else { drawHorizontal(c, parent); } }
predict, score, loss = onDraw, 0.9952698349952698, 0.004832493141293526

Trace of simplified code(s):
{"time": "2021-02-16 03:54:32.529458", "score": "0.9953", "loss": "0.0048", "code": "@Override public void onDraw(Canvas c, RecyclerView parent) { if (mOrientation == VERTICAL_LIST) { drawVertical(c, parent); } else { drawHorizontal(c, parent); } }", "n_tokens": 63, "n_pass": [1, 1, 1]}
{"time": "2021-02-16 03:54:35.449411", "score": "0.9948", "loss": "0.0054", "code": "public void onDraw(Canvas c, RecyclerView parent) { if (mOrientation == VERTICAL_LIST) { drawVertical(c, parent); } else { drawHorizontal(c, parent); } }", "n_tokens": 60, "n_pass": [44, 2, 2]}
{"time": "2021-02-16 03:54:38.014670", "score": "0.9882", "loss": "0.0126", "code": "public void onDraw(Canvas  parent) { if (mOrientation == VERTICAL_LIST) { drawVertical(c, parent); } else { drawHorizontal(c, parent); } }", "n_tokens": 56, "n_pass": [46, 3, 3]}
{"time": "2021-02-16 03:54:40.566834", "score": "0.9173", "loss": "0.091", "code": "public void onDraw(Canvas  parent) { if (mOrientation =LIST) { drawVertical(c, parent); } else { drawHorizontal(c, parent); } }", "n_tokens": 52, "n_pass": [50, 4, 4]}
{"time": "2021-02-16 03:54:43.820299", "score": "0.9897", "loss": "0.0138", "code": "public void onDraw(Canvas  parent) { if (mOrientation =LIST) { drawVertical(cparent); } else { drawHorizontal(c, parent); } }", "n_tokens": 50, "n_pass": [94, 5, 5]}
{"time": "2021-02-16 03:54:46.347652", "score": "0.993", "loss": "0.0085", "code": "public void onDraw(Canvas  parent) { if (mOrientation =LIST) { drawVertical(cparent); } { drawHorizontal(c, parent); } }", "n_tokens": 48, "n_pass": [97, 6, 6]}
{"time": "2021-02-16 03:54:48.900460", "score": "0.9841", "loss": "0.0226", "code": "public void onDraw(Canvas  parent) { if (mOrientation =LIST) { drawVertical(cparent); } { drawHorizontal( parent); } }", "n_tokens": 46, "n_pass": [100, 7, 7]}
{"time": "2021-02-16 03:54:51.478460", "score": "0.9877", "loss": "0.0182", "code": "public void onDraw(Canvas  parent) { if (mOrientation =LIST) { drawVertical(cparent); } { drawHorizontal(); } }", "n_tokens": 44, "n_pass": [101, 8, 8]}
{"time": "2021-02-16 03:54:54.020283", "score": "0.9877", "loss": "0.0182", "code": "void onDraw(Canvas  parent) { if (mOrientation =LIST) { drawVertical(cparent); } { drawHorizontal(); } }", "n_tokens": 42, "n_pass": [105, 9, 9]}
{"time": "2021-02-16 03:54:56.911387", "score": "0.9876", "loss": "0.0231", "code": "void onDraw(Canvas  parent) { if (mOrientationLIST) { drawVertical(cparent); } { drawHorizontal(); } }", "n_tokens": 40, "n_pass": [114, 10, 10]}
{"time": "2021-02-16 03:54:59.431433", "score": "0.9641", "loss": "0.0642", "code": "void onDraw(Canvas  parent) { if (mOrientationLIST) {(cparent); } { drawHorizontal(); } }", "n_tokens": 38, "n_pass": [117, 11, 11]}
{"time": "2021-02-16 03:55:06.934450", "score": "0.9521", "loss": "0.0628", "code": "void onDraw(Canvas  parent) { if (mOrientationLIST) {(parent); } { drawHorizontal(); } }", "n_tokens": 37, "n_pass": [176, 12, 12]}
{"time": "2021-02-16 03:55:09.471556", "score": "0.9521", "loss": "0.0628", "code": "void onDraw(Canvas  parent) { if (mOrientationLIST) {(parent);} { drawHorizontal(); } }", "n_tokens": 36, "n_pass": [180, 13, 13]}
{"time": "2021-02-16 03:55:12.034554", "score": "0.9521", "loss": "0.0628", "code": "void onDraw(Canvas  parent) { if (mOrientationLIST) {(parent);}{ drawHorizontal(); } }", "n_tokens": 35, "n_pass": [182, 14, 14]}
{"time": "2021-02-16 03:55:14.581708", "score": "0.9521", "loss": "0.0628", "code": "void onDraw(Canvas  parent) { if (mOrientationLIST) {(parent);}{drawHorizontal(); } }", "n_tokens": 34, "n_pass": [184, 15, 15]}
{"time": "2021-02-16 03:55:17.110650", "score": "0.9521", "loss": "0.0628", "code": "void onDraw(Canvas  parent) { if (mOrientationLIST) {(parent);}{drawHorizontal();} }", "n_tokens": 33, "n_pass": [189, 16, 16]}
{"time": "2021-02-16 03:55:19.637865", "score": "0.9521", "loss": "0.0628", "code": "void onDraw(Canvas  parent) { if (mOrientationLIST) {(parent);}{drawHorizontal();}}", "n_tokens": 32, "n_pass": [191, 17, 17]}
{"time": "2021-02-16 03:55:22.873714", "score": "0.9521", "loss": "0.0628", "code": "void onDraw(Canvas parent) { if (mOrientationLIST) {(parent);}{drawHorizontal();}}", "n_tokens": 31, "n_pass": [198, 18, 18]}
{"time": "2021-02-16 03:55:25.393869", "score": "0.9521", "loss": "0.0628", "code": "void onDraw(Canvas parent){ if (mOrientationLIST) {(parent);}{drawHorizontal();}}", "n_tokens": 30, "n_pass": [202, 19, 19]}
{"time": "2021-02-16 03:55:27.915291", "score": "0.9521", "loss": "0.0628", "code": "void onDraw(Canvas parent){if (mOrientationLIST) {(parent);}{drawHorizontal();}}", "n_tokens": 29, "n_pass": [204, 20, 20]}
{"time": "2021-02-16 03:55:30.440005", "score": "0.9521", "loss": "0.0628", "code": "void onDraw(Canvas parent){if(mOrientationLIST) {(parent);}{drawHorizontal();}}", "n_tokens": 28, "n_pass": [206, 21, 21]}
{"time": "2021-02-16 03:55:32.948350", "score": "0.937", "loss": "0.0838", "code": "void onDraw(Canvas parent){if(LIST) {(parent);}{drawHorizontal();}}", "n_tokens": 27, "n_pass": [208, 22, 22]}
{"time": "2021-02-16 03:55:35.489152", "score": "0.937", "loss": "0.0838", "code": "void onDraw(Canvas parent){if(LIST){(parent);}{drawHorizontal();}}", "n_tokens": 26, "n_pass": [211, 23, 23]}

Minimal simplified code:
void onDraw(Canvas parent){if(LIST){(parent);}{drawHorizontal();}}

