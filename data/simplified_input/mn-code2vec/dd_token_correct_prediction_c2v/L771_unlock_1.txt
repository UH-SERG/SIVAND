
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/sakaiproject__sakai/kernel/api/src/main/java/org/sakaiproject/authz/cover/SecurityService_unlock.java
method_name = unlock
method_body = public static boolean unlock(java.lang.String param0, java.lang.String param1, java.lang.String param2, java.util.Collection param3) { org.sakaiproject.authz.api.SecurityService service = getInstance(); if (service == null) return false; return service.unlock(param0, param1, param2, param3); }
predict, score, loss = unlock, 0.8627045750617981, 0.3005353510379791

Trace of simplified code(s):
{"time": "2021-02-16 01:39:12.596095", "score": "0.8627", "loss": "0.3005", "code": "public static boolean unlock(java.lang.String param0, java.lang.String param1, java.lang.String param2, java.util.Collection param3) { org.sakaiproject.authz.api.SecurityService service = getInstance(); if (service == null) return false; return service.unlock(param0, param1, param2, param3); }", "n_tokens": 109, "n_pass": [1, 1, 1]}
{"time": "2021-02-16 01:39:15.220719", "score": "0.8671", "loss": "0.2803", "code": "public static boolean unlock(java.lang.String param0, java.lang.String param1, java.lang.String param2, java.util.Collection param3) { org.sakaiproject; if (service == null) return false; return service.unlock(param0, param1, param2, param3); }", "n_tokens": 95, "n_pass": [24, 2, 2]}
{"time": "2021-02-16 01:39:17.812348", "score": "0.9556", "loss": "0.1625", "code": "public static boolean unlock(java.lang.String param0, java.lang.String param1, java.lang.String param2, java.util.Collection param3) { org.sakaiproject; if (service == null) return false; return service.unlock(param0,  param3); }", "n_tokens": 88, "n_pass": [50, 3, 3]}
{"time": "2021-02-16 01:39:20.745266", "score": "0.9629", "loss": "0.1273", "code": "public static boolean unlock(java.lang.java.lang.String param1, java.lang.String param2, java.util.Collection param3) { org.sakaiproject; if (service == null) return false; return service.unlock(param0,  param3); }", "n_tokens": 82, "n_pass": [53, 4, 4]}
{"time": "2021-02-16 01:39:23.700678", "score": "0.9421", "loss": "0.1894", "code": "public static boolean unlock(java.lang.java.lang.String param1,lang.String param2, java.util.Collection param3) { org.sakaiproject; if (service == null) return false; return service.unlock(param0,  param3); }", "n_tokens": 79, "n_pass": [93, 5, 5]}
{"time": "2021-02-16 01:39:26.267625", "score": "0.9538", "loss": "0.1435", "code": "public static boolean unlock(java.lang.java.lang.String param1,lang.String param2, javaCollection param3) { org.sakaiproject; if (service == null) return false; return service.unlock(param0,  param3); }", "n_tokens": 76, "n_pass": [97, 6, 6]}
{"time": "2021-02-16 01:39:28.858190", "score": "0.9451", "loss": "0.1599", "code": "public static boolean unlock(java.lang.java.lang.String param1,lang.String param2, javaCollection param3) { org.sakaiproject; if (service ) return false; return service.unlock(param0,  param3); }", "n_tokens": 72, "n_pass": [103, 7, 7]}
{"time": "2021-02-16 01:39:31.449166", "score": "0.5019", "loss": "1.4561", "code": "public static boolean unlock(java.lang.java.lang.String param1,lang.String param2, javaCollection param3) { org.sakaiproject; if (service ) return  service.unlock(param0,  param3); }", "n_tokens": 68, "n_pass": [105, 8, 8]}
{"time": "2021-02-16 01:39:34.028100", "score": "0.5019", "loss": "1.4561", "code": " boolean unlock(java.lang.java.lang.String param1,lang.String param2, javaCollection param3) { org.sakaiproject; if (service ) return  service.unlock(param0,  param3); }", "n_tokens": 65, "n_pass": [110, 9, 9]}
{"time": "2021-02-16 01:39:36.987767", "score": "0.3826", "loss": "2.0126", "code": " boolean unlock(javajava.lang.String param1,lang.String param2, javaCollection param3) { org.sakaiproject; if (service ) return  service.unlock(param0,  param3); }", "n_tokens": 62, "n_pass": [113, 10, 10]}
{"time": "2021-02-16 01:39:39.657692", "score": "0.4595", "loss": "1.6765", "code": " boolean unlock(java.String param1,lang.String param2, javaCollection param3) { org.sakaiproject; if (service ) return  service.unlock(param0,  param3); }", "n_tokens": 59, "n_pass": [114, 11, 11]}
{"time": "2021-02-16 01:39:43.975631", "score": "0.1892", "loss": "3.0789", "code": " boolean unlock(javaString param1,lang.String param2, javaCollection param3) { org.sakaiproject; if (service ) return  service.unlock(param0,  param3); }", "n_tokens": 58, "n_pass": [168, 12, 12]}
{"time": "2021-02-16 01:39:46.582620", "score": "0.5288", "loss": "1.4848", "code": " boolean unlock(java param1,lang.String param2, javaCollection param3) { org.sakaiproject; if (service ) return  service.unlock(param0,  param3); }", "n_tokens": 57, "n_pass": [169, 13, 13]}
{"time": "2021-02-16 01:39:49.139260", "score": "0.5627", "loss": "1.3029", "code": " boolean unlock(java param1,lang param2, javaCollection param3) { org.sakaiproject; if (service ) return  service.unlock(param0,  param3); }", "n_tokens": 55, "n_pass": [172, 14, 14]}
{"time": "2021-02-16 01:39:51.697050", "score": "0.5724", "loss": "1.421", "code": " boolean unlock(java param1,lang param2,Collection param3) { org.sakaiproject; if (service ) return  service.unlock(param0,  param3); }", "n_tokens": 53, "n_pass": [175, 15, 15]}
{"time": "2021-02-16 01:39:54.242036", "score": "0.5747", "loss": "1.4084", "code": " boolean unlock(java param1,lang param2,Collection param3) { sakaiproject; if (service ) return  service.unlock(param0,  param3); }", "n_tokens": 51, "n_pass": [180, 16, 16]}
{"time": "2021-02-16 01:39:56.788408", "score": "0.5753", "loss": "1.4026", "code": " boolean unlock(java param1,lang param2,Collection param3) {  if (service ) return  service.unlock(param0,  param3); }", "n_tokens": 49, "n_pass": [181, 17, 17]}
{"time": "2021-02-16 01:40:04.609626", "score": "0.5753", "loss": "1.4026", "code": " boolean unlock(java param1,lang param2,Collection param3) {  if (service ) return  service.unlock(param0,param3); }", "n_tokens": 47, "n_pass": [191, 20, 18]}
{"time": "2021-02-16 01:40:07.164003", "score": "0.5753", "loss": "1.4026", "code": "boolean unlock(java param1,lang param2,Collection param3) {  if (service ) return  service.unlock(param0,param3); }", "n_tokens": 46, "n_pass": [195, 21, 19]}
{"time": "2021-02-16 01:40:22.127965", "score": "0.5753", "loss": "1.4026", "code": "boolean unlock(java param,lang param2,Collection param3) {  if (service ) return  service.unlock(param0,param3); }", "n_tokens": 45, "n_pass": [263, 25, 20]}
{"time": "2021-02-16 01:40:24.665792", "score": "0.5753", "loss": "1.4026", "code": "boolean unlock(java param,lang param,Collection param3) {  if (service ) return  service.unlock(param0,param3); }", "n_tokens": 44, "n_pass": [268, 26, 21]}
{"time": "2021-02-16 01:40:27.221862", "score": "0.5753", "loss": "1.4026", "code": "boolean unlock(java param,lang param,Collection param) {  if (service ) return  service.unlock(param0,param3); }", "n_tokens": 43, "n_pass": [273, 27, 22]}
{"time": "2021-02-16 01:40:29.793607", "score": "0.5753", "loss": "1.4026", "code": "boolean unlock(java param,lang param,Collection param){  if (service ) return  service.unlock(param0,param3); }", "n_tokens": 42, "n_pass": [275, 28, 23]}
{"time": "2021-02-16 01:40:32.368131", "score": "0.5753", "loss": "1.4026", "code": "boolean unlock(java param,lang param,Collection param){ if (service ) return  service.unlock(param0,param3); }", "n_tokens": 41, "n_pass": [277, 29, 24]}
{"time": "2021-02-16 01:40:34.908643", "score": "0.5753", "loss": "1.4026", "code": "boolean unlock(java param,lang param,Collection param){if (service ) return  service.unlock(param0,param3); }", "n_tokens": 40, "n_pass": [278, 30, 25]}
{"time": "2021-02-16 01:40:37.455156", "score": "0.5753", "loss": "1.4026", "code": "boolean unlock(java param,lang param,Collection param){if(service ) return  service.unlock(param0,param3); }", "n_tokens": 39, "n_pass": [280, 31, 26]}
{"time": "2021-02-16 01:40:40.021928", "score": "0.5753", "loss": "1.4026", "code": "boolean unlock(java param,lang param,Collection param){if(service) return  service.unlock(param0,param3); }", "n_tokens": 38, "n_pass": [283, 32, 27]}
{"time": "2021-02-16 01:40:42.601991", "score": "0.5753", "loss": "1.4026", "code": "boolean unlock(java param,lang param,Collection param){if(service)return  service.unlock(param0,param3); }", "n_tokens": 37, "n_pass": [285, 33, 28]}
{"time": "2021-02-16 01:40:47.697185", "score": "0.5753", "loss": "1.4026", "code": "boolean unlock(java param,lang param,Collection param){if(service)return service.unlock(param0,param3); }", "n_tokens": 36, "n_pass": [287, 35, 29]}
{"time": "2021-02-16 01:40:55.448852", "score": "0.4111", "loss": "2.0706", "code": "boolean unlock(java param,lang param,Collection param){if(service)return service.unlock(0,param3); }", "n_tokens": 35, "n_pass": [293, 38, 30]}
{"time": "2021-02-16 01:41:00.593555", "score": "0.4111", "loss": "2.0706", "code": "boolean unlock(java param,lang param,Collection param){if(service)return service.unlock(0,param); }", "n_tokens": 34, "n_pass": [297, 40, 31]}
{"time": "2021-02-16 01:41:03.135240", "score": "0.4111", "loss": "2.0706", "code": "boolean unlock(java param,lang param,Collection param){if(service)return service.unlock(0,param);}", "n_tokens": 33, "n_pass": [300, 41, 32]}

Minimal simplified code:
boolean unlock(java param,lang param,Collection param){if(service)return service.unlock(0,param);}

