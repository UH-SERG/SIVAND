
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/wso2-attic__product-emm/modules/mobile-agents/android/app-catalog/volley/src/test/java/com/android/volley/mock/WaitableQueue_take.java
method_name = take
method_body = @Override public Request<?> take() throws InterruptedException { Request<?> item = super.take(); if (item == mStopRequest) { mStopEvent.release(); return take(); } return item; }
predict, score, loss = take, 0.9978377223014832, 0.0035455478355288506

Trace of simplified code(s):
{"time": "2021-02-14 19:02:26.161353", "score": "0.9978", "loss": "0.0035", "code": "@Override public Request<?> take() throws InterruptedException { Request<?> item = super.take(); if (item == mStopRequest) { mStopEvent.release(); return take(); } return item; }", "n_tokens": 71, "n_pass": [1, 1, 1]}
{"time": "2021-02-14 19:02:29.215742", "score": "0.9988", "loss": "0.002", "code": " Request<?> take() throws InterruptedException { Request<?> item = super.take(); if (item == mStopRequest) { mStopEvent.release(); return take(); } return item; }", "n_tokens": 67, "n_pass": [44, 2, 2]}
{"time": "2021-02-14 19:02:31.851131", "score": "0.9971", "loss": "0.004", "code": " Request<?> take() throws InterruptedException {  item = super.take(); if (item == mStopRequest) { mStopEvent.release(); return take(); } return item; }", "n_tokens": 63, "n_pass": [48, 3, 3]}
{"time": "2021-02-14 19:02:34.483679", "score": "0.9986", "loss": "0.0027", "code": " Request<?> take() throws InterruptedException {  super.take(); if (item == mStopRequest) { mStopEvent.release(); return take(); } return item; }", "n_tokens": 59, "n_pass": [49, 4, 4]}
{"time": "2021-02-14 19:02:37.117344", "score": "0.9974", "loss": "0.0073", "code": " Request<?> take() throws InterruptedException {  super.take(); if (item == mStopRequest) { mStopEvent.release(); ; } return item; }", "n_tokens": 54, "n_pass": [56, 5, 5]}
{"time": "2021-02-14 19:02:40.512791", "score": "0.9889", "loss": "0.014", "code": " Request<?> take() throws InterruptedException {  super.take(); if (item == mStopRequest) { mStopEvent.release(); ; } ; }", "n_tokens": 51, "n_pass": [95, 6, 6]}
{"time": "2021-02-14 19:02:43.565913", "score": "0.8127", "loss": "0.3196", "code": " Request<?> take() throws InterruptedException {  super.take; if (item == mStopRequest) { mStopEvent.release(); ; } ; }", "n_tokens": 49, "n_pass": [107, 7, 7]}
{"time": "2021-02-14 19:02:51.497353", "score": "0.8809", "loss": "0.1459", "code": " Request<?> take() throws InterruptedException {  super.take; if (item == mStopRequest) {release(); ; } ; }", "n_tokens": 46, "n_pass": [115, 10, 8]}
{"time": "2021-02-14 19:02:54.140796", "score": "0.7669", "loss": "0.28", "code": " Request<?> take() throws InterruptedException {  super.take; if (item == mStopRequest) {; ; } ; }", "n_tokens": 43, "n_pass": [116, 11, 9]}
{"time": "2021-02-14 19:02:56.745572", "score": "0.7669", "loss": "0.28", "code": " Request<?> take() throws InterruptedException {  super.take; if (item == mStopRequest) { } ; }", "n_tokens": 40, "n_pass": [117, 12, 10]}
{"time": "2021-02-14 19:02:59.353701", "score": "0.7427", "loss": "0.3235", "code": " Request<?> take() throws InterruptedException {  super.take; if (item= mStopRequest) { } ; }", "n_tokens": 38, "n_pass": [133, 13, 11]}
{"time": "2021-02-14 19:03:01.976964", "score": "0.6899", "loss": "0.3907", "code": " Request<?> take() throws InterruptedException {  super.take; if (itemmStopRequest) { } ; }", "n_tokens": 36, "n_pass": [134, 14, 12]}
{"time": "2021-02-14 19:03:09.506402", "score": "0.5547", "loss": "0.6045", "code": " Request<?> take() throws InterruptedException {  super.take; if (item) { } ; }", "n_tokens": 35, "n_pass": [186, 15, 13]}
{"time": "2021-02-14 19:03:12.118190", "score": "0.5547", "loss": "0.6045", "code": " Request<?> take() throws InterruptedException {  super.take; if (item){ } ; }", "n_tokens": 34, "n_pass": [187, 16, 14]}
{"time": "2021-02-14 19:03:14.770790", "score": "0.5547", "loss": "0.6045", "code": " Request<?> take() throws InterruptedException {  super.take; if (item){} ; }", "n_tokens": 33, "n_pass": [189, 17, 15]}
{"time": "2021-02-14 19:03:17.383252", "score": "0.5547", "loss": "0.6045", "code": " Request<?> take() throws InterruptedException {  super.take; if (item){} }", "n_tokens": 31, "n_pass": [191, 18, 16]}
{"time": "2021-02-14 19:03:20.032809", "score": "0.5547", "loss": "0.6045", "code": "Request<?> take() throws InterruptedException {  super.take; if (item){} }", "n_tokens": 30, "n_pass": [193, 19, 17]}
{"time": "2021-02-14 19:03:22.675617", "score": "0.5547", "loss": "0.6045", "code": "Request<?>take() throws InterruptedException {  super.take; if (item){} }", "n_tokens": 29, "n_pass": [198, 20, 18]}
{"time": "2021-02-14 19:03:25.313714", "score": "0.5547", "loss": "0.6045", "code": "Request<?>take()throws InterruptedException {  super.take; if (item){} }", "n_tokens": 28, "n_pass": [202, 21, 19]}
{"time": "2021-02-14 19:03:27.965782", "score": "0.5547", "loss": "0.6045", "code": "Request<?>take()throws InterruptedException{  super.take; if (item){} }", "n_tokens": 27, "n_pass": [206, 22, 20]}
{"time": "2021-02-14 19:03:30.588281", "score": "0.5547", "loss": "0.6045", "code": "Request<?>take()throws InterruptedException{ super.take; if (item){} }", "n_tokens": 26, "n_pass": [208, 23, 21]}
{"time": "2021-02-14 19:03:33.206746", "score": "0.5547", "loss": "0.6045", "code": "Request<?>take()throws InterruptedException{super.take; if (item){} }", "n_tokens": 25, "n_pass": [209, 24, 22]}
{"time": "2021-02-14 19:03:38.473717", "score": "0.5547", "loss": "0.6045", "code": "Request<?>take()throws InterruptedException{super.take;if (item){} }", "n_tokens": 24, "n_pass": [214, 26, 23]}
{"time": "2021-02-14 19:03:41.094867", "score": "0.5547", "loss": "0.6045", "code": "Request<?>take()throws InterruptedException{super.take;if(item){} }", "n_tokens": 23, "n_pass": [216, 27, 24]}
{"time": "2021-02-14 19:03:46.707228", "score": "0.5547", "loss": "0.6045", "code": "Request<?>take()throws InterruptedException{super.take;if(item){}}", "n_tokens": 22, "n_pass": [241, 29, 25]}

Minimal simplified code:
Request<?>take()throws InterruptedException{super.take;if(item){}}

