
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/mimno__Mallet/src/cc/mallet/pipe/SelectiveSGML2TokenSequence_writeObject.java
method_name = writeObject
method_body = private void writeObject(ObjectOutputStream out) throws IOException { out.writeInt(CURRENT_SERIAL_VERSION); out.writeObject(sgmlPattern); out.writeObject(lexer); out.writeObject(backgroundTag); out.writeObject(allowedTags); }
predict, score, loss = writeObject, 0.9968158602714539, 0.004179433919489384

Trace of simplified code(s):
{"time": "2021-02-16 10:58:34.046843", "score": "0.9968", "loss": "0.0042", "code": "private void writeObject(ObjectOutputStream out) throws IOException { out.writeInt(CURRENT_SERIAL_VERSION); out.writeObject(sgmlPattern); out.writeObject(lexer); out.writeObject(backgroundTag); out.writeObject(allowedTags); }", "n_tokens": 62, "n_pass": [1, 1, 1]}
{"time": "2021-02-16 10:58:36.961257", "score": "0.9972", "loss": "0.0041", "code": "private void writeObject(ObjectOutputStream out) throws IOException { out.writeInt(CURRENT_SERIAL_VERSION); out.writeObject(backgroundTag); out.writeObject(allowedTags); }", "n_tokens": 46, "n_pass": [10, 2, 2]}
{"time": "2021-02-16 10:58:39.881432", "score": "0.9972", "loss": "0.0045", "code": "private void writeObject(ObjectOutputStream out) throws IOException { out.writeInt(CURRENT_SERIAL_VERSION); out.writeObject(allowedTags); }", "n_tokens": 38, "n_pass": [20, 3, 3]}
{"time": "2021-02-16 10:58:42.791284", "score": "0.9921", "loss": "0.0113", "code": "private void writeObject(ObjectOutputStream out) { out.writeInt(CURRENT_SERIAL_VERSION); out.writeObject(allowedTags); }", "n_tokens": 34, "n_pass": [40, 4, 4]}
{"time": "2021-02-16 10:58:45.351116", "score": "0.9211", "loss": "0.1044", "code": "private void writeObject(ObjectOutputStream out) { out.writeInt(CURRENT); out.writeObject(allowedTags); }", "n_tokens": 30, "n_pass": [43, 5, 5]}
{"time": "2021-02-16 10:58:48.614580", "score": "0.9726", "loss": "0.0348", "code": "private void writeObject(ObjectOutputStream out) { out.writeInt(CURRENT); out(allowedTags); }", "n_tokens": 28, "n_pass": [70, 6, 6]}
{"time": "2021-02-16 10:58:51.134494", "score": "0.9726", "loss": "0.0348", "code": " void writeObject(ObjectOutputStream out) { out.writeInt(CURRENT); out(allowedTags); }", "n_tokens": 27, "n_pass": [73, 7, 7]}
{"time": "2021-02-16 10:58:53.664545", "score": "0.9726", "loss": "0.0348", "code": "void writeObject(ObjectOutputStream out) { out.writeInt(CURRENT); out(allowedTags); }", "n_tokens": 26, "n_pass": [74, 8, 8]}
{"time": "2021-02-16 10:58:56.553411", "score": "0.6527", "loss": "0.5027", "code": "void writeObject(ObjectOutputStream out) { out(CURRENT); out(allowedTags); }", "n_tokens": 24, "n_pass": [81, 9, 9]}
{"time": "2021-02-16 10:58:59.058599", "score": "0.8742", "loss": "0.1852", "code": "void writeObject(ObjectOutputStream out) { out(CURRENT);(allowedTags); }", "n_tokens": 22, "n_pass": [84, 10, 10]}
{"time": "2021-02-16 10:59:06.941068", "score": "0.8742", "loss": "0.1852", "code": "void writeObject(ObjectOutputStream out) { out(CURRENT);(allowedTags);}", "n_tokens": 21, "n_pass": [122, 12, 11]}
{"time": "2021-02-16 10:59:10.218747", "score": "0.8742", "loss": "0.1852", "code": "void writeObject(ObjectOutputStream out){ out(CURRENT);(allowedTags);}", "n_tokens": 20, "n_pass": [131, 13, 12]}
{"time": "2021-02-16 10:59:12.744302", "score": "0.8742", "loss": "0.1852", "code": "void writeObject(ObjectOutputStream out){out(CURRENT);(allowedTags);}", "n_tokens": 19, "n_pass": [133, 14, 13]}
{"time": "2021-02-16 10:59:17.790882", "score": "0.7857", "loss": "0.3471", "code": "void writeObject(ObjectOutputStream out){out();(allowedTags);}", "n_tokens": 18, "n_pass": [136, 16, 14]}

Minimal simplified code:
void writeObject(ObjectOutputStream out){out();(allowedTags);}

