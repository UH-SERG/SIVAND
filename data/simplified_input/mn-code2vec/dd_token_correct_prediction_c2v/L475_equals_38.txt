
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/demilich1__metastone/game/src/main/java/net/demilich/metastone/game/targeting/CardReference_equals.java
method_name = equals
method_body = @Override public boolean equals(Object obj) { if (!(obj instanceof CardReference)) { return false; } CardReference cardReference = (CardReference) obj; return cardReference.getCardId() == getCardId() && cardReference.getPlayerId() == cardReference.getPlayerId(); }
predict, score, loss = equals, 0.997383177280426, 0.00292397802695632

Trace of simplified code(s):
{"time": "2021-02-14 20:15:08.874040", "score": "0.9974", "loss": "0.0029", "code": "@Override public boolean equals(Object obj) { if (!(obj instanceof CardReference)) { return false; } CardReference cardReference = (CardReference) obj; return cardReference.getCardId() == getCardId() && cardReference.getPlayerId() == cardReference.getPlayerId(); }", "n_tokens": 86, "n_pass": [1, 1, 1]}
{"time": "2021-02-14 20:15:11.546111", "score": "0.9999", "loss": "0.0002", "code": "boolean equals(Object obj) { if (!(obj instanceof CardReference)) { return false; } CardReference cardReference = (CardReference) obj; return cardReference.getCardId() == getCardId() && cardReference.getPlayerId() == cardReference.getPlayerId(); }", "n_tokens": 81, "n_pass": [44, 2, 2]}
{"time": "2021-02-14 20:15:14.221887", "score": "0.9997", "loss": "0.0005", "code": "boolean equals(Object obj) { if (!(obj instanceof CardReference)) { } CardReference cardReference = (CardReference) obj; return cardReference.getCardId() == getCardId() && cardReference.getPlayerId() == cardReference.getPlayerId(); }", "n_tokens": 76, "n_pass": [49, 3, 3]}
{"time": "2021-02-14 20:15:16.869398", "score": "0.9981", "loss": "0.0031", "code": "boolean equals(Object obj) { if (!(obj instanceof CardReference)) { } CardReference cardReference = (CardReference) obj; return cardReference.getCardIdgetCardId() && cardReference.getPlayerId() == cardReference.getPlayerId(); }", "n_tokens": 70, "n_pass": [54, 4, 4]}
{"time": "2021-02-14 20:15:19.945260", "score": "0.9943", "loss": "0.0147", "code": "boolean equals(Object obj) { if (!(obj instanceof CardReference)) { } CardReference cardReference = (CardReference) obj; return cardReference.getCardId && cardReference.getPlayerId() == cardReference.getPlayerId(); }", "n_tokens": 67, "n_pass": [94, 5, 5]}
{"time": "2021-02-14 20:15:22.594677", "score": "0.9983", "loss": "0.0039", "code": "boolean equals(Object obj) { if (!(obj instanceof CardReference)) { } CardReference cardReference = (CardReference) obj; return cardReference.getCardId &&getPlayerId() == cardReference.getPlayerId(); }", "n_tokens": 64, "n_pass": [95, 6, 6]}
{"time": "2021-02-14 20:15:25.242898", "score": "0.9987", "loss": "0.0034", "code": "boolean equals(Object obj) { if (!(obj instanceof CardReference)) { } CardReference cardReference = (CardReference) obj; return cardReference.getCardId &&getPlayerId() ==getPlayerId(); }", "n_tokens": 61, "n_pass": [98, 7, 7]}
{"time": "2021-02-14 20:15:28.332752", "score": "0.9985", "loss": "0.0043", "code": "boolean equals(Object obj) { if (!( CardReference)) { } CardReference cardReference = (CardReference) obj; return cardReference.getCardId &&getPlayerId() ==getPlayerId(); }", "n_tokens": 58, "n_pass": [109, 8, 8]}
{"time": "2021-02-14 20:15:30.979420", "score": "0.9977", "loss": "0.0087", "code": "boolean equals(Object obj) { if (!( CardReference)) { } CardReference cardReference =  obj; return cardReference.getCardId &&getPlayerId() ==getPlayerId(); }", "n_tokens": 55, "n_pass": [115, 9, 9]}
{"time": "2021-02-14 20:15:34.030124", "score": "0.9957", "loss": "0.008", "code": "boolean equals(Object obj) { if (!( CardReference)) { } CardReference cardReference =  obj; return cardReference.getCardIdgetPlayerId() ==getPlayerId(); }", "n_tokens": 52, "n_pass": [119, 10, 10]}
{"time": "2021-02-14 20:15:36.662562", "score": "0.9869", "loss": "0.0378", "code": "boolean equals(Object obj) { if (!( CardReference)) { } CardReference cardReference =  obj; return cardReference.getCardId ==getPlayerId(); }", "n_tokens": 49, "n_pass": [120, 11, 11]}
{"time": "2021-02-14 20:15:39.290926", "score": "0.9413", "loss": "0.1402", "code": "boolean equals(Object obj) { if (!( CardReference)) { } CardReference cardReference =  obj; return cardReference.getCardIdgetPlayerId(); }", "n_tokens": 46, "n_pass": [121, 12, 12]}
{"time": "2021-02-14 20:15:44.985008", "score": "0.434", "loss": "1.4338", "code": "boolean equals(Object obj) { if (!( CardReference)) { } CardReference cardReference =  obj;cardReference.getCardIdgetPlayerId(); }", "n_tokens": 43, "n_pass": [138, 14, 13]}
{"time": "2021-02-14 20:15:47.625179", "score": "0.9975", "loss": "0.0075", "code": "boolean equals(Object obj) { if (!( CardReference)) { } CardReference cardReference =  obj;getPlayerId(); }", "n_tokens": 40, "n_pass": [139, 15, 14]}
{"time": "2021-02-14 20:15:50.272536", "score": "0.9739", "loss": "0.0327", "code": "boolean equals(Object obj) { if (!( CardReference)) { } CardReference cardReference =  obj;; }", "n_tokens": 37, "n_pass": [140, 16, 15]}
{"time": "2021-02-14 20:15:57.564665", "score": "0.9739", "loss": "0.0327", "code": "boolean equals(Object obj){ if (!( CardReference)) { } CardReference cardReference =  obj;; }", "n_tokens": 36, "n_pass": [196, 17, 16]}
{"time": "2021-02-14 20:16:00.185285", "score": "0.9739", "loss": "0.0327", "code": "boolean equals(Object obj){if (!( CardReference)) { } CardReference cardReference =  obj;; }", "n_tokens": 35, "n_pass": [197, 18, 17]}
{"time": "2021-02-14 20:16:02.811059", "score": "0.9739", "loss": "0.0327", "code": "boolean equals(Object obj){if(!( CardReference)) { } CardReference cardReference =  obj;; }", "n_tokens": 34, "n_pass": [199, 19, 18]}
{"time": "2021-02-14 20:16:05.452501", "score": "0.9739", "loss": "0.0327", "code": "boolean equals(Object obj){if(( CardReference)) { } CardReference cardReference =  obj;; }", "n_tokens": 33, "n_pass": [201, 20, 19]}
{"time": "2021-02-14 20:16:08.071967", "score": "0.9739", "loss": "0.0327", "code": "boolean equals(Object obj){if((CardReference)) { } CardReference cardReference =  obj;; }", "n_tokens": 32, "n_pass": [203, 21, 20]}
{"time": "2021-02-14 20:16:10.695488", "score": "0.9739", "loss": "0.0327", "code": "boolean equals(Object obj){if((CardReference)){ } CardReference cardReference =  obj;; }", "n_tokens": 31, "n_pass": [207, 22, 21]}
{"time": "2021-02-14 20:16:13.312641", "score": "0.9739", "loss": "0.0327", "code": "boolean equals(Object obj){if((CardReference)){} CardReference cardReference =  obj;; }", "n_tokens": 30, "n_pass": [209, 23, 22]}
{"time": "2021-02-14 20:16:15.935031", "score": "0.7258", "loss": "0.6006", "code": "boolean equals(Object obj){if((CardReference)){} cardReference =  obj;; }", "n_tokens": 28, "n_pass": [211, 24, 23]}
{"time": "2021-02-14 20:16:18.540919", "score": "0.9403", "loss": "0.0722", "code": "boolean equals(Object obj){if((CardReference)){} cardReference  obj;; }", "n_tokens": 26, "n_pass": [213, 25, 24]}
{"time": "2021-02-14 20:16:21.158517", "score": "0.7499", "loss": "0.3418", "code": "boolean equals(Object obj){if((CardReference)){} cardReference ;; }", "n_tokens": 24, "n_pass": [214, 26, 25]}
{"time": "2021-02-14 20:16:24.568932", "score": "0.7441", "loss": "0.3491", "code": "boolean equals(Object obj){if((CardReference)){} ;; }", "n_tokens": 22, "n_pass": [234, 27, 26]}
{"time": "2021-02-14 20:16:27.194536", "score": "0.7441", "loss": "0.3491", "code": "boolean equals(Object obj){if((CardReference)){}  }", "n_tokens": 20, "n_pass": [235, 28, 27]}
{"time": "2021-02-14 20:16:31.364320", "score": "0.7441", "loss": "0.3491", "code": "boolean equals(Object obj){if((CardReference)){} }", "n_tokens": 19, "n_pass": [258, 29, 28]}
{"time": "2021-02-14 20:16:34.764475", "score": "0.7441", "loss": "0.3491", "code": "boolean equals(Object obj){if((CardReference)){}}", "n_tokens": 18, "n_pass": [276, 30, 29]}

Minimal simplified code:
boolean equals(Object obj){if((CardReference)){}}

