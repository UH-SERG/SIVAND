
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/SKCraft__Launcher/creator-tools/src/main/java/com/skcraft/launcher/creator/controller/task/DirectoryDeleter_call.java
method_name = call
method_body = @Override public File call() throws Exception { Thread.sleep(2000); List<File> failures = new ArrayList<File>(); try { LauncherUtils.interruptibleDelete(dir, failures); } catch (IOException e) { Thread.sleep(1000); LauncherUtils.interruptibleDelete(dir, failures); } if (failures.size() > 0) { throw new LauncherException(failures.size() + " failed to delete", failures.size() + " file(s) could not be deleted"); } return dir; }
predict, score, loss = call, 0.4455820918083191, 1.4388668537139893

Trace of simplified code(s):
{"time": "2021-02-16 04:01:33.295801", "score": "0.8245", "loss": "0.3757", "code": "@Override public File call() throws Exception { Thread.sleep(2000); List<File> failures = new ArrayList<File>(); try { LauncherUtils.interruptibleDelete(dir, failures); } catch (IOException e) { Thread.sleep(1000); LauncherUtils.interruptibleDelete(dir, failures); } if (failures.size() > 0) { throw new LauncherException(failures.size() + \" failed to delete\", failures.size() + \" file(s) could not be deleted\"); } return dir; }", "n_tokens": 172, "n_pass": [1, 1, 1]}
{"time": "2021-02-16 04:01:36.271756", "score": "0.8414", "loss": "0.3524", "code": "@Override public File call() throws Exception { Thread.sleep(2000); List<File> failures = new ArrayList<File>(); try { } catch (IOException e) { Thread.sleep(1000); LauncherUtils.interruptibleDelete(dir, failures); } if (failures.size() > 0) { throw new LauncherException(failures.size() + \" failed to delete\", failures.size() + \" file(s) could not be deleted\"); } return dir; }", "n_tokens": 161, "n_pass": [49, 2, 2]}
{"time": "2021-02-16 04:01:38.869539", "score": "0.9236", "loss": "0.2053", "code": "@Override public File call() throws Exception { Thread.sleep(2000); List<File> failures = new ArrayList<File>(); try { } catch (IOException e) { LauncherUtils.interruptibleDelete(dir, failures); } if (failures.size() > 0) { throw new LauncherException(failures.size() + \" failed to delete\", failures.size() + \" file(s) could not be deleted\"); } return dir; }", "n_tokens": 150, "n_pass": [51, 3, 3]}
{"time": "2021-02-16 04:01:41.431052", "score": "0.8519", "loss": "0.3629", "code": "@Override public File call() throws Exception { Thread.sleep(2000); List<File> failures = new ArrayList<File>(); try { } catch (IOException e) { } if (failures.size() > 0) { throw new LauncherException(failures.size() + \" failed to delete\", failures.size() + \" file(s) could not be deleted\"); } return dir; }", "n_tokens": 139, "n_pass": [52, 4, 4]}
{"time": "2021-02-16 04:01:44.713168", "score": "0.8437", "loss": "0.3776", "code": "@Override public File call() throws Exception { Thread.sleep(2000); List<File> failures = new ArrayList<File>(); try { } catch (IOException e) { } if (failures.size() > 0) {LauncherException(failures.size() + \" failed to delete\", failures.size() + \" file(s) could not be deleted\"); } return dir; }", "n_tokens": 134, "n_pass": [96, 5, 5]}
{"time": "2021-02-16 04:01:47.285963", "score": "0.8437", "loss": "0.3776", "code": "@Override public File call() throws Exception { Thread.sleep(2000); List<File> failures = new ArrayList<File>(); try { } catch (IOException e) { } if (failures.size() > 0) {LauncherException(failures.size() + \" failed to delete\", failures.size() + \"  not be deleted\"); } return dir; }", "n_tokens": 128, "n_pass": [102, 6, 6]}
{"time": "2021-02-16 04:01:49.860975", "score": "0.8761", "loss": "0.2914", "code": "@Override public File call() throws Exception { Thread.sleep(2000); List<File> failures = new ArrayList<File>(); try { } catch (IOException e) { } if (failures.size() > 0) {LauncherException(failures.size() + \" failed to delete\", failures.size() + \" \"); } return dir; }", "n_tokens": 122, "n_pass": [103, 7, 7]}
{"time": "2021-02-16 04:01:58.295925", "score": "0.9799", "loss": "0.0555", "code": "@Override public File call() throws Exception { Thread.sleep(2000); List<File> failures = new ArrayList<File>(); try { } catch (IOException e) { } if (failures.size() > 0) {LauncherException(failures.size() + \" failed to delete\", failures.size() + \" \"); } ; }", "n_tokens": 119, "n_pass": [175, 10, 8]}
{"time": "2021-02-16 04:02:03.412875", "score": "0.9799", "loss": "0.0555", "code": "@Override File call() throws Exception { Thread.sleep(2000); List<File> failures = new ArrayList<File>(); try { } catch (IOException e) { } if (failures.size() > 0) {LauncherException(failures.size() + \" failed to delete\", failures.size() + \" \"); } ; }", "n_tokens": 117, "n_pass": [177, 12, 9]}
{"time": "2021-02-16 04:02:06.732910", "score": "0.9596", "loss": "0.1336", "code": "@Override File call() throws Exception { Thread(2000); List<File> failures = new ArrayList<File>(); try { } catch (IOException e) { } if (failures.size() > 0) {LauncherException(failures.size() + \" failed to delete\", failures.size() + \" \"); } ; }", "n_tokens": 115, "n_pass": [185, 13, 10]}
{"time": "2021-02-16 04:02:09.306334", "score": "0.9679", "loss": "0.1041", "code": "@Override File call() throws Exception { Thread(20); List<File> failures = new ArrayList<File>(); try { } catch (IOException e) { } if (failures.size() > 0) {LauncherException(failures.size() + \" failed to delete\", failures.size() + \" \"); } ; }", "n_tokens": 113, "n_pass": [187, 14, 11]}
{"time": "2021-02-16 04:02:12.985521", "score": "0.9692", "loss": "0.1114", "code": "@Override File call() throws Exception { Thread(20); List<File> failures = new ArrayList<File>(); try { } catch (IOException e) { } if (failures.size> 0) {LauncherException(failures.size() + \" failed to delete\", failures.size() + \" \"); } ; }", "n_tokens": 110, "n_pass": [205, 15, 12]}
{"time": "2021-02-16 04:02:15.573355", "score": "0.9238", "loss": "0.2292", "code": "@Override File call() throws Exception { Thread(20); List<File> failures = new ArrayList<File>(); try { } catch (IOException e) { } if (failures.size) {LauncherException(failures.size() + \" failed to delete\", failures.size() + \" \"); } ; }", "n_tokens": 107, "n_pass": [206, 16, 13]}
{"time": "2021-02-16 04:02:18.156156", "score": "0.9866", "loss": "0.0289", "code": "@Override File call() throws Exception { Thread(20); List<File> failures = new ArrayList<File>(); try { } catch (IOException e) { } if (failures.size) {LauncherException(failures.size() + \"  delete\", failures.size() + \" \"); } ; }", "n_tokens": 104, "n_pass": [212, 17, 14]}
{"time": "2021-02-16 04:02:20.729176", "score": "0.9942", "loss": "0.0103", "code": "@Override File call() throws Exception { Thread(20); List<File> failures = new ArrayList<File>(); try { } catch (IOException e) { } if (failures.size) {LauncherException(failures.size() + \"  delete\".size() + \" \"); } ; }", "n_tokens": 101, "n_pass": [214, 18, 15]}
{"time": "2021-02-16 04:02:23.293846", "score": "0.9038", "loss": "0.4166", "code": " File call() throws Exception { Thread(20); List<File> failures = new ArrayList<File>(); try { } catch (IOException e) { } if (failures.size) {LauncherException(failures.size() + \"  delete\".size() + \" \"); } ; }", "n_tokens": 99, "n_pass": [221, 19, 16]}
{"time": "2021-02-16 04:02:26.589988", "score": "0.9135", "loss": "0.2813", "code": " File call() throws Exception {(20); List<File> failures = new ArrayList<File>(); try { } catch (IOException e) { } if (failures.size) {LauncherException(failures.size() + \"  delete\".size() + \" \"); } ; }", "n_tokens": 97, "n_pass": [228, 20, 17]}
{"time": "2021-02-16 04:02:37.336892", "score": "0.9122", "loss": "0.281", "code": " File call() throws Exception {(0); List<File> failures = new ArrayList<File>(); try { } catch (IOException e) { } if (failures.size) {LauncherException(failures.size() + \"  delete\".size() + \" \"); } ; }", "n_tokens": 96, "n_pass": [338, 21, 18]}
{"time": "2021-02-16 04:02:39.894487", "score": "0.9122", "loss": "0.281", "code": " File call() throws Exception {(0);List<File> failures = new ArrayList<File>(); try { } catch (IOException e) { } if (failures.size) {LauncherException(failures.size() + \"  delete\".size() + \" \"); } ; }", "n_tokens": 95, "n_pass": [342, 22, 19]}
{"time": "2021-02-16 04:02:42.795858", "score": "0.9122", "loss": "0.281", "code": " File call() throws Exception {(0);List<File>failures = new ArrayList<File>(); try { } catch (IOException e) { } if (failures.size) {LauncherException(failures.size() + \"  delete\".size() + \" \"); } ; }", "n_tokens": 94, "n_pass": [347, 23, 20]}
{"time": "2021-02-16 04:02:45.370588", "score": "0.9122", "loss": "0.281", "code": " File call() throws Exception {(0);List<File>failures= new ArrayList<File>(); try { } catch (IOException e) { } if (failures.size) {LauncherException(failures.size() + \"  delete\".size() + \" \"); } ; }", "n_tokens": 93, "n_pass": [349, 24, 21]}
{"time": "2021-02-16 04:02:47.927232", "score": "0.9122", "loss": "0.281", "code": " File call() throws Exception {(0);List<File>failures=new ArrayList<File>(); try { } catch (IOException e) { } if (failures.size) {LauncherException(failures.size() + \"  delete\".size() + \" \"); } ; }", "n_tokens": 92, "n_pass": [351, 25, 22]}
{"time": "2021-02-16 04:02:50.488405", "score": "0.9021", "loss": "0.2879", "code": " File call() throws Exception {(0);List<File>failures=new ArrayList<>(); try { } catch (IOException e) { } if (failures.size) {LauncherException(failures.size() + \"  delete\".size() + \" \"); } ; }", "n_tokens": 91, "n_pass": [356, 26, 23]}
{"time": "2021-02-16 04:02:53.069928", "score": "0.9021", "loss": "0.2879", "code": " File call() throws Exception {(0);List<File>failures=new ArrayList<>();try { } catch (IOException e) { } if (failures.size) {LauncherException(failures.size() + \"  delete\".size() + \" \"); } ; }", "n_tokens": 90, "n_pass": [361, 27, 24]}
{"time": "2021-02-16 04:02:55.623385", "score": "0.9021", "loss": "0.2879", "code": " File call() throws Exception {(0);List<File>failures=new ArrayList<>();try{ } catch (IOException e) { } if (failures.size) {LauncherException(failures.size() + \"  delete\".size() + \" \"); } ; }", "n_tokens": 89, "n_pass": [363, 28, 25]}
{"time": "2021-02-16 04:02:58.199239", "score": "0.9021", "loss": "0.2879", "code": " File call() throws Exception {(0);List<File>failures=new ArrayList<>();try{} catch (IOException e) { } if (failures.size) {LauncherException(failures.size() + \"  delete\".size() + \" \"); } ; }", "n_tokens": 88, "n_pass": [365, 29, 26]}
{"time": "2021-02-16 04:03:00.766736", "score": "0.9021", "loss": "0.2879", "code": " File call() throws Exception {(0);List<File>failures=new ArrayList<>();try{}catch (IOException e) { } if (failures.size) {LauncherException(failures.size() + \"  delete\".size() + \" \"); } ; }", "n_tokens": 87, "n_pass": [367, 30, 27]}
{"time": "2021-02-16 04:03:03.318091", "score": "0.9021", "loss": "0.2879", "code": " File call() throws Exception {(0);List<File>failures=new ArrayList<>();try{}catch(IOException e) { } if (failures.size) {LauncherException(failures.size() + \"  delete\".size() + \" \"); } ; }", "n_tokens": 86, "n_pass": [369, 31, 28]}
{"time": "2021-02-16 04:03:05.876267", "score": "0.8865", "loss": "0.2793", "code": " File call() throws Exception {(0);List<File>failures=new ArrayList<>();try{}catch(IOException e) { } if (failures) {LauncherException(failures.size() + \"  delete\".size() + \" \"); } ; }", "n_tokens": 84, "n_pass": [378, 32, 29]}
{"time": "2021-02-16 04:03:08.468740", "score": "0.8787", "loss": "0.2746", "code": " File call() throws Exception {(0);List<File>failures=new ArrayList<>();try{}catch(IOException e) { } if (failures) {LauncherException(failures() + \"  delete\".size() + \" \"); } ; }", "n_tokens": 82, "n_pass": [382, 33, 30]}
{"time": "2021-02-16 04:03:11.018725", "score": "0.9029", "loss": "0.2583", "code": " File call() throws Exception {(0);List<File>failures=new ArrayList<>();try{}catch(IOException e) { } if (failures) {LauncherException(failures + \"  delete\".size() + \" \"); } ; }", "n_tokens": 80, "n_pass": [383, 34, 31]}
{"time": "2021-02-16 04:03:13.563424", "score": "0.9029", "loss": "0.2583", "code": " File call() throws Exception {(0);List<File>failures=new ArrayList<>();try{}catch(IOException e) { } if (failures) {LauncherException(failures + \"delete\".size() + \" \"); } ; }", "n_tokens": 78, "n_pass": [386, 35, 32]}
{"time": "2021-02-16 04:03:16.136655", "score": "0.8993", "loss": "0.2272", "code": " File call() throws Exception {(0);List<File>failures=new ArrayList<>();try{}catch(IOException e) { } if (failures) {LauncherException(failures + \"delete\".size + \" \"); } ; }", "n_tokens": 76, "n_pass": [389, 36, 33]}
{"time": "2021-02-16 04:03:18.693469", "score": "0.8993", "loss": "0.2272", "code": " File call() throws Exception {(0);List<File>failures=new ArrayList<>();try{}catch(IOException e) { } if (failures) {LauncherException(failures + \"delete\".size + \" \"); } }", "n_tokens": 74, "n_pass": [395, 37, 34]}
{"time": "2021-02-16 04:03:21.245138", "score": "0.8993", "loss": "0.2272", "code": "File call() throws Exception {(0);List<File>failures=new ArrayList<>();try{}catch(IOException e) { } if (failures) {LauncherException(failures + \"delete\".size + \" \"); } }", "n_tokens": 73, "n_pass": [397, 38, 35]}
{"time": "2021-02-16 04:03:24.900832", "score": "0.8993", "loss": "0.2272", "code": "File call()throws Exception {(0);List<File>failures=new ArrayList<>();try{}catch(IOException e) { } if (failures) {LauncherException(failures + \"delete\".size + \" \"); } }", "n_tokens": 72, "n_pass": [403, 39, 36]}
{"time": "2021-02-16 04:03:27.477241", "score": "0.8993", "loss": "0.2272", "code": "File call()throws Exception{(0);List<File>failures=new ArrayList<>();try{}catch(IOException e) { } if (failures) {LauncherException(failures + \"delete\".size + \" \"); } }", "n_tokens": 71, "n_pass": [407, 40, 37]}
{"time": "2021-02-16 04:03:31.147565", "score": "0.8898", "loss": "0.2741", "code": "File call()throws Exception{(0);List<File>failures=new ArrayList<>();try{}catch(IOException e) { } if (failures) {LauncherException(failures + \"delete\" + \" \"); } }", "n_tokens": 69, "n_pass": [445, 41, 38]}
{"time": "2021-02-16 04:03:40.528576", "score": "0.8792", "loss": "0.2536", "code": "File call()throws Exception{(0);List<File>failures=new ArrayList<>();try{}catch(IOException e) { } if (failures) {LauncherException(failures + \"delete\" + \"\"); } }", "n_tokens": 68, "n_pass": [534, 42, 39]}
{"time": "2021-02-16 04:03:43.084305", "score": "0.8792", "loss": "0.2536", "code": "File call()throws Exception{(0);List<File>failures=new ArrayList<>();try{}catch(IOException e) { } if (failures) {LauncherException(failures + \"delete\" + \"\");} }", "n_tokens": 67, "n_pass": [537, 43, 40]}
{"time": "2021-02-16 04:03:45.628542", "score": "0.8792", "loss": "0.2536", "code": "File call()throws Exception{(0);List<File>failures=new ArrayList<>();try{}catch(IOException e) { } if (failures) {LauncherException(failures + \"delete\" + \"\");}}", "n_tokens": 66, "n_pass": [539, 44, 41]}
{"time": "2021-02-16 04:03:50.396239", "score": "0.8792", "loss": "0.2536", "code": "File call()throws Exception{(0);List<File>failures=new ArrayList<>();try{}catch(IOException e){ } if (failures) {LauncherException(failures + \"delete\" + \"\");}}", "n_tokens": 65, "n_pass": [577, 45, 42]}
{"time": "2021-02-16 04:03:52.951394", "score": "0.8792", "loss": "0.2536", "code": "File call()throws Exception{(0);List<File>failures=new ArrayList<>();try{}catch(IOException e){} if (failures) {LauncherException(failures + \"delete\" + \"\");}}", "n_tokens": 64, "n_pass": [579, 46, 43]}
{"time": "2021-02-16 04:03:55.523944", "score": "0.8792", "loss": "0.2536", "code": "File call()throws Exception{(0);List<File>failures=new ArrayList<>();try{}catch(IOException e){}if (failures) {LauncherException(failures + \"delete\" + \"\");}}", "n_tokens": 63, "n_pass": [581, 47, 44]}
{"time": "2021-02-16 04:03:58.080122", "score": "0.8792", "loss": "0.2536", "code": "File call()throws Exception{(0);List<File>failures=new ArrayList<>();try{}catch(IOException e){}if(failures) {LauncherException(failures + \"delete\" + \"\");}}", "n_tokens": 62, "n_pass": [583, 48, 45]}
{"time": "2021-02-16 04:04:00.630155", "score": "0.8792", "loss": "0.2536", "code": "File call()throws Exception{(0);List<File>failures=new ArrayList<>();try{}catch(IOException e){}if(failures){LauncherException(failures + \"delete\" + \"\");}}", "n_tokens": 61, "n_pass": [587, 49, 46]}
{"time": "2021-02-16 04:04:03.181939", "score": "0.878", "loss": "0.1993", "code": "File call()throws Exception{(0);List<File>failures=new ArrayList<>();try{}catch(IOException e){}if(failures){(failures + \"delete\" + \"\");}}", "n_tokens": 60, "n_pass": [589, 50, 47]}
{"time": "2021-02-16 04:04:05.716037", "score": "0.8364", "loss": "0.263", "code": "File call()throws Exception{(0);List<File>failures=new ArrayList<>();try{}catch(IOException e){}if(failures){( + \"delete\" + \"\");}}", "n_tokens": 59, "n_pass": [591, 51, 48]}
{"time": "2021-02-16 04:04:08.259784", "score": "0.8364", "loss": "0.263", "code": "File call()throws Exception{(0);List<File>failures=new ArrayList<>();try{}catch(IOException e){}if(failures){(+ \"delete\" + \"\");}}", "n_tokens": 58, "n_pass": [592, 52, 49]}
{"time": "2021-02-16 04:04:10.789989", "score": "0.8946", "loss": "0.1837", "code": "File call()throws Exception{(0);List<File>failures=new ArrayList<>();try{}catch(IOException e){}if(failures){( \"delete\" + \"\");}}", "n_tokens": 57, "n_pass": [593, 53, 50]}
{"time": "2021-02-16 04:04:13.353274", "score": "0.8946", "loss": "0.1837", "code": "File call()throws Exception{(0);List<File>failures=new ArrayList<>();try{}catch(IOException e){}if(failures){(\"delete\" + \"\");}}", "n_tokens": 56, "n_pass": [594, 54, 51]}
{"time": "2021-02-16 04:04:15.892632", "score": "0.814", "loss": "0.3022", "code": "File call()throws Exception{(0);List<File>failures=new ArrayList<>();try{}catch(IOException e){}if(failures){(\"\" + \"\");}}", "n_tokens": 55, "n_pass": [596, 55, 52]}
{"time": "2021-02-16 04:04:18.439334", "score": "0.814", "loss": "0.3022", "code": "File call()throws Exception{(0);List<File>failures=new ArrayList<>();try{}catch(IOException e){}if(failures){(\"\"+ \"\");}}", "n_tokens": 54, "n_pass": [598, 56, 53]}
{"time": "2021-02-16 04:04:20.974283", "score": "0.814", "loss": "0.3022", "code": "File call()throws Exception{(0);List<File>failures=new ArrayList<>();try{}catch(IOException e){}if(failures){(\"\"+\"\");}}", "n_tokens": 53, "n_pass": [600, 57, 54]}

Minimal simplified code:
File call()throws Exception{(0);List<File>failures=new ArrayList<>();try{}catch(IOException e){}if(failures){(""+"");}}

