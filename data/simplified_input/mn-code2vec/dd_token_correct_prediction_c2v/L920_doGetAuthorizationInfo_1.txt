
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/zhengyunfei__springboot-hadmin/src/main/java/com/sparrow/hadmin/config/shiro/MyRealm_doGetAuthorizationInfo.java
method_name = doGetAuthorizationInfo
method_body = @Override protected AuthorizationInfo doGetAuthorizationInfo(PrincipalCollection principals) { User user = (User) principals.getPrimaryPrincipal(); SimpleAuthorizationInfo authorizationInfo = new SimpleAuthorizationInfo(); User dbUser = userService.findByUserName(user.getUserName()); Set<String> shiroPermissions = new HashSet<>(); Set<String> roleSet = new HashSet<String>(); Set<Role> roles = dbUser.getRoles(); for (Role role : roles) { Set<Resource> resources = role.getResources(); for (Resource resource : resources) { shiroPermissions.add(resource.getSourceKey()); } roleSet.add(role.getRoleKey()); } authorizationInfo.setRoles(roleSet); authorizationInfo.setStringPermissions(shiroPermissions); return authorizationInfo; }
predict, score, loss = doGetAuthorizationInfo, 0.999998927116394, 1.7881377516459906e-06

Trace of simplified code(s):
{"time": "2021-02-16 11:07:20.371199", "score": "1.0", "loss": "0.0", "code": "@Override protected AuthorizationInfo doGetAuthorizationInfo(PrincipalCollection principals) { User user = (User) principals.getPrimaryPrincipal(); SimpleAuthorizationInfo authorizationInfo = new SimpleAuthorizationInfo(); User dbUser = userService.findByUserName(user.getUserName()); Set<String> shiroPermissions = new HashSet<>(); Set<String> roleSet = new HashSet<String>(); Set<Role> roles = dbUser.getRoles(); for (Role role : roles) { Set<Resource> resources = role.getResources(); for (Resource resource : resources) { shiroPermissions.add(resource.getSourceKey()); } roleSet.add(role.getRoleKey()); } authorizationInfo.setRoles(roleSet); authorizationInfo.setStringPermissions(shiroPermissions); return authorizationInfo; }", "n_tokens": 211, "n_pass": [1, 1, 1]}
{"time": "2021-02-16 11:07:22.966436", "score": "1.0", "loss": "0.0", "code": "@Override protected AuthorizationInfo doGetAuthorizationInfo(PrincipalCollection principals) { User user = (User) principals.getPrimaryPrincipal(); SimpleAuthorizationInfo authorizationInfo = new SimpleAuthorizationInfo(); User dbUser =  roles = dbUser.getRoles(); for (Role role : roles) { Set<Resource> resources = role.getResources(); for (Resource resource : resources) { shiroPermissions.add(resource.getSourceKey()); } roleSet.add(role.getRoleKey()); } authorizationInfo.setRoles(roleSet); authorizationInfo.setStringPermissions(shiroPermissions); return authorizationInfo; }", "n_tokens": 158, "n_pass": [9, 2, 2]}
{"time": "2021-02-16 11:07:25.559244", "score": "1.0", "loss": "0.0", "code": "@Override protected AuthorizationInfo doGetAuthorizationInfo(PrincipalCollection principals) { User user = (User) principals.getPrimaryPrincipal(); SimpleAuthorizationInfo authorizationInfo = new SimpleAuthorizationInfo(); User dbUser =  roles = dbUser.getRoles(); for (Role role : roles) { Set<Resource> resources = role.getResources(); for (Resource resource : resources); } authorizationInfo.setRoles(roleSet); authorizationInfo.setStringPermissions(shiroPermissions); return authorizationInfo; }", "n_tokens": 131, "n_pass": [20, 3, 3]}
{"time": "2021-02-16 11:07:29.018750", "score": "1.0", "loss": "0.0", "code": "@Override protected AuthorizationInfo doGetAuthorizationInfo(PrincipalCollection principals) { User user = (User) new SimpleAuthorizationInfo(); User dbUser =  roles = dbUser.getRoles(); for (Role role : roles) { Set<Resource> resources = role.getResources(); for (Resource resource : resources); } authorizationInfo.setRoles(roleSet); authorizationInfo.setStringPermissions(shiroPermissions); return authorizationInfo; }", "n_tokens": 118, "n_pass": [40, 4, 4]}
{"time": "2021-02-16 11:07:31.589859", "score": "1.0", "loss": "0.0", "code": "@Override protected AuthorizationInfo doGetAuthorizationInfo(PrincipalCollection principals) { User user = (User) new SimpleAuthorizationInfo(); User dbUser =  roles = dbUser.getRoles(); for (Role role : roles) { Set<Resource> resources = role.getResources(); } authorizationInfo.setRoles(roleSet); authorizationInfo.setStringPermissions(shiroPermissions); return authorizationInfo; }", "n_tokens": 105, "n_pass": [44, 5, 5]}
{"time": "2021-02-16 11:07:34.937014", "score": "1.0", "loss": "0.0", "code": "@Override protected AuthorizationInfo doGetAuthorizationInfo(PrincipalCollection principals) { User user = (User) new SimpleAuthorizationInfo(); User dbUser =  roles = dbUser.getRoles(); for (Role role : roles) { Set<Resource> resources = role.getResources(); } authorizationInfoauthorizationInfo.setStringPermissions(shiroPermissions); return authorizationInfo; }", "n_tokens": 98, "n_pass": [70, 6, 6]}
{"time": "2021-02-16 11:07:37.890145", "score": "1.0", "loss": "0.0", "code": "@Override protected AuthorizationInfo doGetAuthorizationInfo(PrincipalCollection principals) { User user = (User); User dbUser =  roles = dbUser.getRoles(); for (Role role : roles) { Set<Resource> resources = role.getResources(); } authorizationInfoauthorizationInfo.setStringPermissions(shiroPermissions); return authorizationInfo; }", "n_tokens": 92, "n_pass": [77, 7, 7]}
{"time": "2021-02-16 11:07:40.444644", "score": "1.0", "loss": "0.0", "code": "@Override protected AuthorizationInfo doGetAuthorizationInfo(PrincipalCollection principals) { User user = (User); User dbUser= dbUser.getRoles(); for (Role role : roles) { Set<Resource> resources = role.getResources(); } authorizationInfoauthorizationInfo.setStringPermissions(shiroPermissions); return authorizationInfo; }", "n_tokens": 86, "n_pass": [79, 8, 8]}
{"time": "2021-02-16 11:07:43.022095", "score": "1.0", "loss": "0.0", "code": "@Override protected AuthorizationInfo doGetAuthorizationInfo(PrincipalCollection principals) { User user = (User); User dbUser; for (Role role : roles) { Set<Resource> resources = role.getResources(); } authorizationInfoauthorizationInfo.setStringPermissions(shiroPermissions); return authorizationInfo; }", "n_tokens": 79, "n_pass": [80, 9, 9]}
{"time": "2021-02-16 11:07:47.138875", "score": "1.0", "loss": "0.0", "code": "@Override protected AuthorizationInfo doGetAuthorizationInfo(PrincipalCollection principals) { User user = (User); User dbUser; for (Role role : roles) { Set<Resource> resources = role.getResources(); }setStringPermissions(shiroPermissions); return authorizationInfo; }", "n_tokens": 75, "n_pass": [127, 10, 10]}
{"time": "2021-02-16 11:07:49.680294", "score": "0.9999", "loss": "0.0001", "code": "@Override protected AuthorizationInfo doGetAuthorizationInfo(PrincipalCollection principals) { User user = (User); User dbUser; for (Role role : roles) { Set<Resource> resources = role.getResources(); }; return authorizationInfo; }", "n_tokens": 71, "n_pass": [128, 11, 11]}
{"time": "2021-02-16 11:07:52.221164", "score": "1.0", "loss": "0.0", "code": "@Override protected AuthorizationInfo doGetAuthorizationInfo(PrincipalCollection principals) { User user = (User); User dbUser; for (Role role : roles) { Set<Resource> resources = role.getResources(); }authorizationInfo; }", "n_tokens": 67, "n_pass": [129, 12, 12]}
{"time": "2021-02-16 11:07:54.777867", "score": "1.0", "loss": "0.0001", "code": "protected AuthorizationInfo doGetAuthorizationInfo(PrincipalCollection principals) { User user = (User); User dbUser; for (Role role : roles) { Set<Resource> resources = role.getResources(); }authorizationInfo; }", "n_tokens": 64, "n_pass": [131, 13, 13]}
{"time": "2021-02-16 11:07:57.733385", "score": "0.6638", "loss": "0.6134", "code": "protected AuthorizationInfo doGetAuthorizationInfo() { User user = (User); User dbUser; for (Role role : roles) { Set<Resource> resources = role.getResources(); }authorizationInfo; }", "n_tokens": 61, "n_pass": [134, 14, 14]}
{"time": "2021-02-16 11:08:00.308521", "score": "0.6236", "loss": "0.697", "code": "protected AuthorizationInfo doGetAuthorizationInfo() {user = (User); User dbUser; for (Role role : roles) { Set<Resource> resources = role.getResources(); }authorizationInfo; }", "n_tokens": 58, "n_pass": [136, 15, 15]}
{"time": "2021-02-16 11:08:02.851940", "score": "0.6149", "loss": "0.7007", "code": "protected AuthorizationInfo doGetAuthorizationInfo() { (User); User dbUser; for (Role role : roles) { Set<Resource> resources = role.getResources(); }authorizationInfo; }", "n_tokens": 55, "n_pass": [137, 16, 16]}
{"time": "2021-02-16 11:08:05.398263", "score": "0.5192", "loss": "0.8734", "code": "protected AuthorizationInfo doGetAuthorizationInfo() { (User); ; for (Role role : roles) { Set<Resource> resources = role.getResources(); }authorizationInfo; }", "n_tokens": 52, "n_pass": [140, 17, 17]}
{"time": "2021-02-16 11:08:11.247939", "score": "0.5196", "loss": "0.8711", "code": "protected AuthorizationInfo doGetAuthorizationInfo() { (User); for (Role role : roles) { Set<Resource> resources = role.getResources(); }authorizationInfo; }", "n_tokens": 50, "n_pass": [192, 18, 18]}
{"time": "2021-02-16 11:08:14.553404", "score": "0.5421", "loss": "0.8196", "code": "protected AuthorizationInfo doGetAuthorizationInfo() { (User); for (Role role : roles) { Set<Resource> resources = getResources(); }authorizationInfo; }", "n_tokens": 48, "n_pass": [205, 19, 19]}
{"time": "2021-02-16 11:08:17.116232", "score": "0.4192", "loss": "1.1407", "code": "protected AuthorizationInfo doGetAuthorizationInfo() { (User); for (Role role : roles) { Set<Resource> resources = getResources(); } }", "n_tokens": 46, "n_pass": [209, 20, 20]}
{"time": "2021-02-16 11:08:19.650252", "score": "0.4192", "loss": "1.1407", "code": " AuthorizationInfo doGetAuthorizationInfo() { (User); for (Role role : roles) { Set<Resource> resources = getResources(); } }", "n_tokens": 45, "n_pass": [211, 21, 21]}
{"time": "2021-02-16 11:08:22.170091", "score": "0.4192", "loss": "1.1407", "code": "AuthorizationInfo doGetAuthorizationInfo() { (User); for (Role role : roles) { Set<Resource> resources = getResources(); } }", "n_tokens": 44, "n_pass": [212, 22, 22]}
{"time": "2021-02-16 11:08:25.842074", "score": "0.4192", "loss": "1.1407", "code": "AuthorizationInfo doGetAuthorizationInfo(){ (User); for (Role role : roles) { Set<Resource> resources = getResources(); } }", "n_tokens": 43, "n_pass": [218, 23, 23]}
{"time": "2021-02-16 11:08:28.369487", "score": "0.4192", "loss": "1.1407", "code": "AuthorizationInfo doGetAuthorizationInfo(){(User); for (Role role : roles) { Set<Resource> resources = getResources(); } }", "n_tokens": 42, "n_pass": [220, 24, 24]}
{"time": "2021-02-16 11:08:37.745474", "score": "0.4192", "loss": "1.1407", "code": "AuthorizationInfo doGetAuthorizationInfo(){(User);for (Role role : roles) { Set<Resource> resources = getResources(); } }", "n_tokens": 41, "n_pass": [280, 25, 25]}
{"time": "2021-02-16 11:08:40.270009", "score": "0.4192", "loss": "1.1407", "code": "AuthorizationInfo doGetAuthorizationInfo(){(User);for(Role role : roles) { Set<Resource> resources = getResources(); } }", "n_tokens": 40, "n_pass": [281, 26, 26]}
{"time": "2021-02-16 11:08:42.805207", "score": "0.4192", "loss": "1.1407", "code": "AuthorizationInfo doGetAuthorizationInfo(){(User);for(Role role: roles) { Set<Resource> resources = getResources(); } }", "n_tokens": 39, "n_pass": [286, 27, 27]}
{"time": "2021-02-16 11:08:45.350074", "score": "0.4192", "loss": "1.1407", "code": "AuthorizationInfo doGetAuthorizationInfo(){(User);for(Role role:roles) { Set<Resource> resources = getResources(); } }", "n_tokens": 38, "n_pass": [288, 28, 28]}
{"time": "2021-02-16 11:08:47.872607", "score": "0.4192", "loss": "1.1407", "code": "AuthorizationInfo doGetAuthorizationInfo(){(User);for(Role role:roles){ Set<Resource> resources = getResources(); } }", "n_tokens": 37, "n_pass": [291, 29, 29]}
{"time": "2021-02-16 11:08:50.388568", "score": "0.4192", "loss": "1.1407", "code": "AuthorizationInfo doGetAuthorizationInfo(){(User);for(Role role:roles){Set<Resource> resources = getResources(); } }", "n_tokens": 36, "n_pass": [293, 30, 30]}
{"time": "2021-02-16 11:08:53.311525", "score": "0.4192", "loss": "1.1407", "code": "AuthorizationInfo doGetAuthorizationInfo(){(User);for(Role role:roles){Set<Resource>resources = getResources(); } }", "n_tokens": 35, "n_pass": [298, 31, 31]}
{"time": "2021-02-16 11:08:55.875598", "score": "0.4192", "loss": "1.1407", "code": "AuthorizationInfo doGetAuthorizationInfo(){(User);for(Role role:roles){Set<Resource>resources= getResources(); } }", "n_tokens": 34, "n_pass": [300, 32, 32]}
{"time": "2021-02-16 11:08:58.395771", "score": "0.4192", "loss": "1.1407", "code": "AuthorizationInfo doGetAuthorizationInfo(){(User);for(Role role:roles){Set<Resource>resources=getResources(); } }", "n_tokens": 33, "n_pass": [302, 33, 33]}
{"time": "2021-02-16 11:09:00.920670", "score": "0.4192", "loss": "1.1407", "code": "AuthorizationInfo doGetAuthorizationInfo(){(User);for(Role role:roles){Set<Resource>resources=getResources();} }", "n_tokens": 32, "n_pass": [307, 34, 34]}
{"time": "2021-02-16 11:09:03.463545", "score": "0.4192", "loss": "1.1407", "code": "AuthorizationInfo doGetAuthorizationInfo(){(User);for(Role role:roles){Set<Resource>resources=getResources();}}", "n_tokens": 31, "n_pass": [309, 35, 35]}

Minimal simplified code:
AuthorizationInfo doGetAuthorizationInfo(){(User);for(Role role:roles){Set<Resource>resources=getResources();}}

