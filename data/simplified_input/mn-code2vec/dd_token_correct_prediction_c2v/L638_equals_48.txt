
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/vladmihalcea__high-performance-java-persistence/core/src/test/java/com/vladmihalcea/book/hpjp/hibernate/association/BidirectionalManyAsOneToManyExtraColumnsTest_equals.java
method_name = equals
method_body = @Override public boolean equals(Object o) { if (this == o) return true; if (o == null || getClass() != o.getClass()) return false; Tag tag = (Tag) o; return Objects.equals(name, tag.name); }
predict, score, loss = equals, 0.9999179840087891, 9.715084888739511e-05

Trace of simplified code(s):
{"time": "2021-02-15 01:24:11.077229", "score": "0.9999", "loss": "0.0001", "code": "@Override public boolean equals(Object o) { if (this == o) return true; if (o == null || getClass() != o.getClass()) return false; Tag tag = (Tag) o; return Objects.equals(name, tag.name); }", "n_tokens": 93, "n_pass": [1, 1, 1]}
{"time": "2021-02-15 01:24:13.765364", "score": "0.9999", "loss": "0.0001", "code": "@Override public boolean equals(Object o) { if (this == o) return true; if (o == null || getClass() != o.getClass()) return false; Tag tag =equals(name, tag.name); }", "n_tokens": 81, "n_pass": [26, 2, 2]}
{"time": "2021-02-15 01:24:16.584104", "score": "0.9999", "loss": "0.0001", "code": "boolean equals(Object o) { if (this == o) return true; if (o == null || getClass() != o.getClass()) return false; Tag tag =equals(name, tag.name); }", "n_tokens": 76, "n_pass": [49, 3, 3]}
{"time": "2021-02-15 01:24:19.335337", "score": "0.9977", "loss": "0.0026", "code": "boolean equals(Object o) { if (this == o) return true; if (o ==getClass() != o.getClass()) return false; Tag tag =equals(name, tag.name); }", "n_tokens": 70, "n_pass": [56, 4, 4]}
{"time": "2021-02-15 01:24:22.515555", "score": "0.9974", "loss": "0.0033", "code": "boolean equals(Object o) { if (this == o) return true; if (o == o.getClass()) return false; Tag tag =equals(name, tag.name); }", "n_tokens": 64, "n_pass": [57, 5, 5]}
{"time": "2021-02-15 01:24:25.165386", "score": "0.9789", "loss": "0.0316", "code": "boolean equals(Object o) { if (this == o) return true; if (o == o.getClass()) return false;equals(name, tag.name); }", "n_tokens": 58, "n_pass": [60, 6, 6]}
{"time": "2021-02-15 01:24:27.812424", "score": "0.9895", "loss": "0.0133", "code": "boolean equals(Object o) { if (this == o) return true; if (o == o.getClass()) return false;equals(name.name); }", "n_tokens": 55, "n_pass": [92, 7, 7]}
{"time": "2021-02-15 01:24:30.868587", "score": "0.7497", "loss": "0.4222", "code": "boolean equals() { if (this == o) return true; if (o == o.getClass()) return false;equals(name.name); }", "n_tokens": 52, "n_pass": [97, 8, 8]}
{"time": "2021-02-15 01:24:36.158592", "score": "0.7838", "loss": "0.3674", "code": "boolean equals() { if (this == o) return true; if (o ==getClass()) return false;equals(name.name); }", "n_tokens": 49, "n_pass": [107, 10, 9]}
{"time": "2021-02-15 01:24:44.465885", "score": "0.6018", "loss": "0.753", "code": "boolean equals() { if (this == o) return true; if (ogetClass()) return false;equals(name.name); }", "n_tokens": 46, "n_pass": [124, 13, 10]}
{"time": "2021-02-15 01:24:47.106364", "score": "0.7255", "loss": "0.4697", "code": "boolean equals() { if (this == o) return true; if (o) return false;equals(name.name); }", "n_tokens": 43, "n_pass": [125, 14, 11]}
{"time": "2021-02-15 01:25:02.988388", "score": "0.7385", "loss": "0.431", "code": "boolean equals() { if (this == o) return true; if (o) return false;equals(name); }", "n_tokens": 41, "n_pass": [178, 19, 12]}
{"time": "2021-02-15 01:25:06.393056", "score": "0.7385", "loss": "0.431", "code": "boolean equals(){ if (this == o) return true; if (o) return false;equals(name); }", "n_tokens": 40, "n_pass": [186, 20, 13]}
{"time": "2021-02-15 01:25:09.066355", "score": "0.7385", "loss": "0.431", "code": "boolean equals(){if (this == o) return true; if (o) return false;equals(name); }", "n_tokens": 39, "n_pass": [188, 21, 14]}
{"time": "2021-02-15 01:25:11.692887", "score": "0.7385", "loss": "0.431", "code": "boolean equals(){if(this == o) return true; if (o) return false;equals(name); }", "n_tokens": 38, "n_pass": [190, 22, 15]}
{"time": "2021-02-15 01:25:14.324115", "score": "0.7385", "loss": "0.431", "code": "boolean equals(){if(this== o) return true; if (o) return false;equals(name); }", "n_tokens": 37, "n_pass": [193, 23, 16]}
{"time": "2021-02-15 01:25:17.762505", "score": "0.7385", "loss": "0.431", "code": "boolean equals(){if(this==o) return true; if (o) return false;equals(name); }", "n_tokens": 36, "n_pass": [196, 24, 17]}
{"time": "2021-02-15 01:25:36.343865", "score": "0.7385", "loss": "0.431", "code": "boolean equals(){if(this==o) return true;if (o) return false;equals(name); }", "n_tokens": 35, "n_pass": [247, 29, 18]}
{"time": "2021-02-15 01:25:39.000576", "score": "0.7385", "loss": "0.431", "code": "boolean equals(){if(this==o) return true;if(o) return false;equals(name); }", "n_tokens": 34, "n_pass": [248, 30, 19]}
{"time": "2021-02-15 01:25:41.670797", "score": "0.7385", "loss": "0.431", "code": "boolean equals(){if(this==o) return true;if(o)return false;equals(name); }", "n_tokens": 33, "n_pass": [252, 31, 20]}
{"time": "2021-02-15 01:25:47.019044", "score": "0.3468", "loss": "1.3355", "code": "boolean equals(){if(this==o) return true;if(o)returnfalse;equals(name); }", "n_tokens": 32, "n_pass": [254, 33, 21]}
{"time": "2021-02-15 01:25:54.990079", "score": "0.2616", "loss": "1.6268", "code": "boolean equals(){if(this==o) return true;if(o)returnfalse;(name); }", "n_tokens": 31, "n_pass": [257, 36, 22]}
{"time": "2021-02-15 01:25:57.724911", "score": "0.2616", "loss": "1.6268", "code": "boolean equals(){if(this==o) return true;if(o)returnfalse;(name);}", "n_tokens": 30, "n_pass": [262, 37, 23]}
{"time": "2021-02-15 01:26:01.965675", "score": "0.2616", "loss": "1.6268", "code": "boolean equals(){if(this==o)return true;if(o)returnfalse;(name);}", "n_tokens": 29, "n_pass": [277, 38, 24]}

Minimal simplified code:
boolean equals(){if(this==o)return true;if(o)returnfalse;(name);}

