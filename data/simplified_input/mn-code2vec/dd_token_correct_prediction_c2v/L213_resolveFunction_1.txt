
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/codefollower__Tomcat-Research/java/org/apache/el/lang/FunctionMapperFactory_resolveFunction.java
method_name = resolveFunction
method_body = @Override public Method resolveFunction(String prefix, String localName) { if (this.memento == null) { this.memento = new FunctionMapperImpl(); } Method m = this.target.resolveFunction(prefix, localName); if (m != null) { this.memento.mapFunction(prefix, localName, m); } return m; }
predict, score, loss = resolveFunction, 0.8621745109558105, 0.2608104646205902

Trace of simplified code(s):
{"time": "2021-02-14 11:41:19.416973", "score": "0.8622", "loss": "0.2608", "code": "@Override public Method resolveFunction(String prefix, String localName) { if (this.memento == null) { this.memento = new FunctionMapperImpl(); } Method m = this.target.resolveFunction(prefix, localName); if (m != null) { this.memento.mapFunction(prefix, localName, m); } return m; }", "n_tokens": 107, "n_pass": [1, 1, 1]}
{"time": "2021-02-14 11:41:22.514554", "score": "0.8932", "loss": "0.1692", "code": "@Override public Method resolveFunction(String prefix, String localName) { if ( null) { this.memento = new FunctionMapperImpl(); } Method m = this.target.resolveFunction(prefix, localName); if (m != null) { this.memento.mapFunction(prefix, localName, m); } return m; }", "n_tokens": 101, "n_pass": [48, 2, 2]}
{"time": "2021-02-14 11:41:25.177663", "score": "0.8958", "loss": "0.1657", "code": "@Override public Method resolveFunction(String prefix, String localName) { if ( null) { thisFunctionMapperImpl(); } Method m = this.target.resolveFunction(prefix, localName); if (m != null) { this.memento.mapFunction(prefix, localName, m); } return m; }", "n_tokens": 94, "n_pass": [50, 3, 3]}
{"time": "2021-02-14 11:41:28.282937", "score": "0.7185", "loss": "0.7492", "code": "@Override public Method resolveFunction(String prefix, String localName) { if ( null) { thisFunctionMapperImpl(); } Method= this.target.resolveFunction(prefix, localName); if (m != null) { this.memento.mapFunction(prefix, localName, m); } return m; }", "n_tokens": 91, "n_pass": [96, 4, 4]}
{"time": "2021-02-14 11:41:30.959720", "score": "0.7441", "loss": "0.3754", "code": "@Override public Method resolveFunction(String prefix, String localName) { if ( null) { thisFunctionMapperImpl(); } Method.target.resolveFunction(prefix, localName); if (m != null) { this.memento.mapFunction(prefix, localName, m); } return m; }", "n_tokens": 88, "n_pass": [97, 5, 5]}
{"time": "2021-02-14 11:41:36.291693", "score": "0.7636", "loss": "0.4185", "code": "@Override public Method resolveFunction(String prefix, String localName) { if ( null) { thisFunctionMapperImpl(); } Method.target.resolveFunction(prefix); if (m != null) { this.memento.mapFunction(prefix, localName, m); } return m; }", "n_tokens": 85, "n_pass": [100, 7, 6]}
{"time": "2021-02-14 11:41:38.953789", "score": "0.7669", "loss": "0.4123", "code": "@Override public Method resolveFunction(String prefix, String localName) { if ( null) { thisFunctionMapperImpl(); } Method.target.resolveFunction(prefix); if (m ) { this.memento.mapFunction(prefix, localName, m); } return m; }", "n_tokens": 81, "n_pass": [103, 8, 7]}
{"time": "2021-02-14 11:41:41.630818", "score": "0.7741", "loss": "0.3558", "code": "@Override public Method resolveFunction(String prefix, String localName) { if ( null) { thisFunctionMapperImpl(); } Method.target.resolveFunction(prefix); if (m ) { mapFunction(prefix, localName, m); } return m; }", "n_tokens": 77, "n_pass": [105, 9, 8]}
{"time": "2021-02-14 11:41:44.295981", "score": "0.8682", "loss": "0.2082", "code": "@Override public Method resolveFunction(String prefix, String localName) { if ( null) { thisFunctionMapperImpl(); } Method.target.resolveFunction(prefix); if (m ) { mapFunction(prefix,m); } return m; }", "n_tokens": 73, "n_pass": [107, 10, 9]}
{"time": "2021-02-14 11:41:46.966625", "score": "0.8322", "loss": "0.2519", "code": "public Method resolveFunction(String prefix, String localName) { if ( null) { thisFunctionMapperImpl(); } Method.target.resolveFunction(prefix); if (m ) { mapFunction(prefix,m); } return m; }", "n_tokens": 70, "n_pass": [111, 11, 10]}
{"time": "2021-02-14 11:41:54.948203", "score": "0.8322", "loss": "0.2519", "code": " Method resolveFunction(String prefix, String localName) { if ( null) { thisFunctionMapperImpl(); } Method.target.resolveFunction(prefix); if (m ) { mapFunction(prefix,m); } return m; }", "n_tokens": 69, "n_pass": [175, 13, 11]}
{"time": "2021-02-14 11:41:57.585370", "score": "0.8322", "loss": "0.2519", "code": "Method resolveFunction(String prefix, String localName) { if ( null) { thisFunctionMapperImpl(); } Method.target.resolveFunction(prefix); if (m ) { mapFunction(prefix,m); } return m; }", "n_tokens": 68, "n_pass": [176, 14, 12]}
{"time": "2021-02-14 11:42:01.052928", "score": "0.8322", "loss": "0.2519", "code": "Method resolveFunction(String prefix,String localName) { if ( null) { thisFunctionMapperImpl(); } Method.target.resolveFunction(prefix); if (m ) { mapFunction(prefix,m); } return m; }", "n_tokens": 67, "n_pass": [184, 15, 13]}
{"time": "2021-02-14 11:42:03.715214", "score": "0.7938", "loss": "0.2813", "code": "Method resolveFunction(String prefix,String localName) { if ( null) {FunctionMapperImpl(); } Method.target.resolveFunction(prefix); if (m ) { mapFunction(prefix,m); } return m; }", "n_tokens": 65, "n_pass": [194, 16, 14]}
{"time": "2021-02-14 11:42:06.352361", "score": "0.8182", "loss": "0.2404", "code": "Method resolveFunction(String prefix,String localName) { if ( null) {FunctionMapperImpl(); } Method.resolveFunction(prefix); if (m ) { mapFunction(prefix,m); } return m; }", "n_tokens": 63, "n_pass": [199, 17, 15]}
{"time": "2021-02-14 11:42:08.983834", "score": "0.2232", "loss": "3.1419", "code": "Method resolveFunction(String prefix,String localName) { if ( null) {FunctionMapperImpl(); } Method(prefix); if (m ) { mapFunction(prefix,m); } return m; }", "n_tokens": 61, "n_pass": [200, 18, 16]}
{"time": "2021-02-14 11:42:28.273652", "score": "0.2232", "loss": "3.1419", "code": "Method resolveFunction(String prefix,String localName) { if ( null) {FunctionMapperImpl(); } Method(prefix);if (m ) { mapFunction(prefix,m); } return m; }", "n_tokens": 60, "n_pass": [287, 22, 17]}
{"time": "2021-02-14 11:42:30.908258", "score": "0.2232", "loss": "3.1419", "code": "Method resolveFunction(String prefix,String localName) { if ( null) {FunctionMapperImpl(); } Method(prefix);if(m ) { mapFunction(prefix,m); } return m; }", "n_tokens": 59, "n_pass": [288, 23, 18]}
{"time": "2021-02-14 11:42:33.544490", "score": "0.2232", "loss": "3.1419", "code": "Method resolveFunction(String prefix,String localName) { if ( null) {FunctionMapperImpl(); } Method(prefix);if(m) { mapFunction(prefix,m); } return m; }", "n_tokens": 58, "n_pass": [291, 24, 19]}
{"time": "2021-02-14 11:42:36.179672", "score": "0.2232", "loss": "3.1419", "code": "Method resolveFunction(String prefix,String localName) { if ( null) {FunctionMapperImpl(); } Method(prefix);if(m){ mapFunction(prefix,m); } return m; }", "n_tokens": 57, "n_pass": [293, 25, 20]}
{"time": "2021-02-14 11:42:38.828870", "score": "0.2232", "loss": "3.1419", "code": "Method resolveFunction(String prefix,String localName) { if ( null) {FunctionMapperImpl(); } Method(prefix);if(m){mapFunction(prefix,m); } return m; }", "n_tokens": 56, "n_pass": [295, 26, 21]}
{"time": "2021-02-14 11:42:41.479134", "score": "0.2658", "loss": "2.6275", "code": "Method resolveFunction(String prefix,String localName) { if ( null) {FunctionMapperImpl(); } Method(prefix);if(m){mapFunction(prefixm); } return m; }", "n_tokens": 55, "n_pass": [299, 27, 22]}
{"time": "2021-02-14 11:42:44.123362", "score": "0.3981", "loss": "2.0905", "code": "Method resolveFunction(String prefix,String localName) { if ( null) {FunctionMapperImpl(); } Method(prefix);if(m){mapFunction(prefix); } return m; }", "n_tokens": 54, "n_pass": [300, 28, 23]}
{"time": "2021-02-14 11:42:46.754898", "score": "0.3981", "loss": "2.0905", "code": "Method resolveFunction(String prefix,String localName) { if ( null) {FunctionMapperImpl(); } Method(prefix);if(m){mapFunction(prefix);} return m; }", "n_tokens": 53, "n_pass": [303, 29, 24]}
{"time": "2021-02-14 11:42:49.384353", "score": "0.3981", "loss": "2.0905", "code": "Method resolveFunction(String prefix,String localName) { if ( null) {FunctionMapperImpl(); } Method(prefix);if(m){mapFunction(prefix);}return m; }", "n_tokens": 52, "n_pass": [305, 30, 25]}
{"time": "2021-02-14 11:42:52.009645", "score": "0.4248", "loss": "1.9836", "code": "Method resolveFunction(String prefix,String localName) { if ( null) {FunctionMapperImpl(); } Method(prefix);if(m){mapFunction(prefix);} m; }", "n_tokens": 51, "n_pass": [306, 31, 26]}
{"time": "2021-02-14 11:42:54.645097", "score": "0.4248", "loss": "1.9836", "code": "Method resolveFunction(String prefix,String localName) { if ( null) {FunctionMapperImpl(); } Method(prefix);if(m){mapFunction(prefix);}m; }", "n_tokens": 50, "n_pass": [307, 32, 27]}
{"time": "2021-02-14 11:42:57.273703", "score": "0.4319", "loss": "1.9551", "code": "Method resolveFunction(String prefix,String localName) { if ( null) {FunctionMapperImpl(); } Method(prefix);if(m){mapFunction(prefix);}; }", "n_tokens": 49, "n_pass": [308, 33, 28]}
{"time": "2021-02-14 11:42:59.902548", "score": "0.4319", "loss": "1.9551", "code": "Method resolveFunction(String prefix,String localName) { if ( null) {FunctionMapperImpl(); } Method(prefix);if(m){mapFunction(prefix);} }", "n_tokens": 48, "n_pass": [309, 34, 29]}
{"time": "2021-02-14 11:43:02.528062", "score": "0.4319", "loss": "1.9551", "code": "Method resolveFunction(String prefix,String localName) { if ( null) {FunctionMapperImpl(); } Method(prefix);if(m){mapFunction(prefix);}}", "n_tokens": 47, "n_pass": [310, 35, 30]}
{"time": "2021-02-14 11:43:06.367279", "score": "0.4319", "loss": "1.9551", "code": "Method resolveFunction(String prefix,String localName){ if ( null) {FunctionMapperImpl(); } Method(prefix);if(m){mapFunction(prefix);}}", "n_tokens": 46, "n_pass": [324, 36, 31]}
{"time": "2021-02-14 11:43:08.987673", "score": "0.4319", "loss": "1.9551", "code": "Method resolveFunction(String prefix,String localName){if ( null) {FunctionMapperImpl(); } Method(prefix);if(m){mapFunction(prefix);}}", "n_tokens": 45, "n_pass": [326, 37, 32]}
{"time": "2021-02-14 11:43:11.630454", "score": "0.4319", "loss": "1.9551", "code": "Method resolveFunction(String prefix,String localName){if( null) {FunctionMapperImpl(); } Method(prefix);if(m){mapFunction(prefix);}}", "n_tokens": 44, "n_pass": [328, 38, 33]}
{"time": "2021-02-14 11:43:14.284681", "score": "0.4319", "loss": "1.9551", "code": "Method resolveFunction(String prefix,String localName){if(null) {FunctionMapperImpl(); } Method(prefix);if(m){mapFunction(prefix);}}", "n_tokens": 43, "n_pass": [330, 39, 34]}
{"time": "2021-02-14 11:43:16.905583", "score": "0.4319", "loss": "1.9551", "code": "Method resolveFunction(String prefix,String localName){if(null){FunctionMapperImpl(); } Method(prefix);if(m){mapFunction(prefix);}}", "n_tokens": 42, "n_pass": [333, 40, 35]}
{"time": "2021-02-14 11:43:19.565453", "score": "0.4319", "loss": "1.9551", "code": "Method resolveFunction(String prefix,String localName){if(null){FunctionMapperImpl();} Method(prefix);if(m){mapFunction(prefix);}}", "n_tokens": 41, "n_pass": [339, 41, 36]}
{"time": "2021-02-14 11:43:22.190660", "score": "0.4319", "loss": "1.9551", "code": "Method resolveFunction(String prefix,String localName){if(null){FunctionMapperImpl();}Method(prefix);if(m){mapFunction(prefix);}}", "n_tokens": 40, "n_pass": [341, 42, 37]}
{"time": "2021-02-14 11:43:24.820946", "score": "0.4082", "loss": "2.2617", "code": "Method resolveFunction(String prefix,String localName){if(null){FunctionMapperImpl();}(prefix);if(m){mapFunction(prefix);}}", "n_tokens": 39, "n_pass": [342, 43, 38]}
{"time": "2021-02-14 11:43:27.444961", "score": "0.8583", "loss": "0.3521", "code": "Method resolveFunction(String prefix,String localName){if(null){FunctionMapperImpl();}(prefix);if(m){(prefix);}}", "n_tokens": 38, "n_pass": [352, 44, 39]}

Minimal simplified code:
Method resolveFunction(String prefix,String localName){if(null){FunctionMapperImpl();}(prefix);if(m){(prefix);}}

