
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/bcgit__bc-java/core/src/main/j2me/java/util/AbstractSet_equals.java
method_name = equals
method_body = public boolean equals(Object o) { if (this == o) { return true; } if (o == null) { return false; } if (!(o instanceof Set)) { return false; } if (((Set) o).size() != size()) { return false; } return containsAll((Collection) o); }
predict, score, loss = equals, 0.9990021586418152, 0.0012280549854040146

Trace of simplified code(s):
{"time": "2021-02-16 00:51:03.276813", "score": "0.999", "loss": "0.0012", "code": "public boolean equals(Object o) { if (this == o) { return true; } if (o == null) { return false; } if (!(o instanceof Set)) { return false; } if (((Set) o).size() != size()) { return false; } return containsAll((Collection) o); }", "n_tokens": 120, "n_pass": [1, 1, 1]}
{"time": "2021-02-16 00:51:05.854929", "score": "0.9993", "loss": "0.0009", "code": "public boolean equals(Object o) { if (this == o) { return true; return false; } if (!(o instanceof Set)) { return false; } if (((Set) o).size() != size()) { return false; } return containsAll((Collection) o); }", "n_tokens": 105, "n_pass": [22, 2, 2]}
{"time": "2021-02-16 00:51:08.486509", "score": "0.9992", "loss": "0.001", "code": "public boolean equals(Object o) { if (this == o) {; return false; } if (!(o instanceof Set)) { return false; } if (((Set) o).size() != size()) { return false; } return containsAll((Collection) o); }", "n_tokens": 101, "n_pass": [85, 3, 3]}
{"time": "2021-02-16 00:51:11.070416", "score": "0.9986", "loss": "0.0017", "code": "public boolean equals(Object o) { if (this == o) {false; } if (!(o instanceof Set)) { return false; } if (((Set) o).size() != size()) { return false; } return containsAll((Collection) o); }", "n_tokens": 97, "n_pass": [86, 4, 4]}
{"time": "2021-02-16 00:51:13.749689", "score": "0.994", "loss": "0.007", "code": "public boolean equals(Object o) { if (this == o) {false; } if (!(o instanceof Set)) {  } if (((Set) o).size() != size()) { return false; } return containsAll((Collection) o); }", "n_tokens": 93, "n_pass": [92, 5, 5]}
{"time": "2021-02-16 00:51:16.323515", "score": "0.9956", "loss": "0.005", "code": "public boolean equals(Object o) { if (this == o) {false; } if (!(o instanceof Set)) {  } if (((Set) o) != size()) { return false; } return containsAll((Collection) o); }", "n_tokens": 89, "n_pass": [96, 6, 6]}
{"time": "2021-02-16 00:51:18.911928", "score": "0.9848", "loss": "0.0168", "code": "public boolean equals(Object o) { if (this == o) {false; } if (!(o instanceof Set)) {  } if (((Set) o) != size()) {  } return containsAll((Collection) o); }", "n_tokens": 85, "n_pass": [100, 7, 7]}
{"time": "2021-02-16 00:51:21.848673", "score": "0.6781", "loss": "0.4911", "code": "public boolean equals() { if (this == o) {false; } if (!(o instanceof Set)) {  } if (((Set) o) != size()) {  } return containsAll((Collection) o); }", "n_tokens": 82, "n_pass": [107, 8, 8]}
{"time": "2021-02-16 00:51:26.202188", "score": "0.6802", "loss": "0.4859", "code": "public boolean equals() { if (this == o) { } if (!(o instanceof Set)) {  } if (((Set) o) != size()) {  } return containsAll((Collection) o); }", "n_tokens": 80, "n_pass": [184, 9, 9]}
{"time": "2021-02-16 00:51:28.754872", "score": "0.6746", "loss": "0.4953", "code": "public boolean equals() { if (this == o) { } if (!(o instanceof Set)) {  } if (((Set)) != size()) {  } return containsAll((Collection) o); }", "n_tokens": 78, "n_pass": [198, 10, 10]}
{"time": "2021-02-16 00:51:31.329151", "score": "0.6327", "loss": "0.5312", "code": "public boolean equals() { if (this == o) { } if (!(o instanceof Set)) {  } if (((Set)) != size) {  } return containsAll((Collection) o); }", "n_tokens": 76, "n_pass": [202, 11, 11]}
{"time": "2021-02-16 00:51:33.880118", "score": "0.8187", "loss": "0.3453", "code": "public boolean equals() { if (this == o) { } if (!(o instanceof Set)) {  } if (((Set)) != size) {  } containsAll((Collection) o); }", "n_tokens": 74, "n_pass": [206, 12, 12]}
{"time": "2021-02-16 00:51:36.442196", "score": "0.452", "loss": "1.0166", "code": "public boolean equals() { if (this == o) { } if (!(o instanceof Set)) {  } if (((Set)) != size) {  }((Collection) o); }", "n_tokens": 72, "n_pass": [207, 13, 13]}
{"time": "2021-02-16 00:51:39.029282", "score": "0.4489", "loss": "1.0242", "code": "public boolean equals() { if (this == o) { } if (!(o instanceof Set)) {  } if (((Set)) != size) {  }((Collection)); }", "n_tokens": 70, "n_pass": [210, 14, 14]}
{"time": "2021-02-16 00:51:41.846251", "score": "0.4489", "loss": "1.0242", "code": " boolean equals() { if (this == o) { } if (!(o instanceof Set)) {  } if (((Set)) != size) {  }((Collection)); }", "n_tokens": 69, "n_pass": [213, 15, 15]}
{"time": "2021-02-16 00:51:44.523916", "score": "0.4489", "loss": "1.0242", "code": "boolean equals() { if (this == o) { } if (!(o instanceof Set)) {  } if (((Set)) != size) {  }((Collection)); }", "n_tokens": 68, "n_pass": [214, 16, 16]}
{"time": "2021-02-16 00:51:56.346469", "score": "0.4489", "loss": "1.0242", "code": "boolean equals(){ if (this == o) { } if (!(o instanceof Set)) {  } if (((Set)) != size) {  }((Collection)); }", "n_tokens": 67, "n_pass": [316, 17, 17]}
{"time": "2021-02-16 00:51:58.902608", "score": "0.4489", "loss": "1.0242", "code": "boolean equals(){if (this == o) { } if (!(o instanceof Set)) {  } if (((Set)) != size) {  }((Collection)); }", "n_tokens": 66, "n_pass": [318, 18, 18]}
{"time": "2021-02-16 00:52:01.491674", "score": "0.4489", "loss": "1.0242", "code": "boolean equals(){if(this == o) { } if (!(o instanceof Set)) {  } if (((Set)) != size) {  }((Collection)); }", "n_tokens": 65, "n_pass": [320, 19, 19]}
{"time": "2021-02-16 00:52:04.058460", "score": "0.4489", "loss": "1.0242", "code": "boolean equals(){if(this== o) { } if (!(o instanceof Set)) {  } if (((Set)) != size) {  }((Collection)); }", "n_tokens": 64, "n_pass": [323, 20, 20]}
{"time": "2021-02-16 00:52:07.352504", "score": "0.4489", "loss": "1.0242", "code": "boolean equals(){if(this==o) { } if (!(o instanceof Set)) {  } if (((Set)) != size) {  }((Collection)); }", "n_tokens": 63, "n_pass": [326, 21, 21]}
{"time": "2021-02-16 00:52:09.926788", "score": "0.4489", "loss": "1.0242", "code": "boolean equals(){if(this==o){ } if (!(o instanceof Set)) {  } if (((Set)) != size) {  }((Collection)); }", "n_tokens": 62, "n_pass": [329, 22, 22]}
{"time": "2021-02-16 00:52:12.472931", "score": "0.4489", "loss": "1.0242", "code": "boolean equals(){if(this==o){} if (!(o instanceof Set)) {  } if (((Set)) != size) {  }((Collection)); }", "n_tokens": 61, "n_pass": [331, 23, 23]}
{"time": "2021-02-16 00:52:15.038401", "score": "0.4489", "loss": "1.0242", "code": "boolean equals(){if(this==o){}if (!(o instanceof Set)) {  } if (((Set)) != size) {  }((Collection)); }", "n_tokens": 60, "n_pass": [333, 24, 24]}
{"time": "2021-02-16 00:52:17.608693", "score": "0.4489", "loss": "1.0242", "code": "boolean equals(){if(this==o){}if(!(o instanceof Set)) {  } if (((Set)) != size) {  }((Collection)); }", "n_tokens": 59, "n_pass": [335, 25, 25]}
{"time": "2021-02-16 00:52:22.749074", "score": "0.4489", "loss": "1.0242", "code": "boolean equals(){if(this==o){}if(!(o instanceof Set)){  } if (((Set)) != size) {  }((Collection)); }", "n_tokens": 58, "n_pass": [346, 27, 26]}
{"time": "2021-02-16 00:52:25.319189", "score": "0.4489", "loss": "1.0242", "code": "boolean equals(){if(this==o){}if(!(o instanceof Set)){ } if (((Set)) != size) {  }((Collection)); }", "n_tokens": 57, "n_pass": [348, 28, 27]}
{"time": "2021-02-16 00:52:27.890973", "score": "0.4489", "loss": "1.0242", "code": "boolean equals(){if(this==o){}if(!(o instanceof Set)){} if (((Set)) != size) {  }((Collection)); }", "n_tokens": 56, "n_pass": [349, 29, 28]}
{"time": "2021-02-16 00:52:30.465414", "score": "0.4489", "loss": "1.0242", "code": "boolean equals(){if(this==o){}if(!(o instanceof Set)){}if (((Set)) != size) {  }((Collection)); }", "n_tokens": 55, "n_pass": [351, 30, 29]}
{"time": "2021-02-16 00:52:33.041263", "score": "0.4489", "loss": "1.0242", "code": "boolean equals(){if(this==o){}if(!(o instanceof Set)){}if(((Set)) != size) {  }((Collection)); }", "n_tokens": 54, "n_pass": [353, 31, 30]}
{"time": "2021-02-16 00:52:35.598656", "score": "0.4489", "loss": "1.0242", "code": "boolean equals(){if(this==o){}if(!(o instanceof Set)){}if(((Set))!= size) {  }((Collection)); }", "n_tokens": 53, "n_pass": [360, 32, 31]}
{"time": "2021-02-16 00:52:38.265786", "score": "0.4778", "loss": "0.9353", "code": "boolean equals(){if(this==o){}if(!(o instanceof Set)){}if(((Set))= size) {  }((Collection)); }", "n_tokens": 52, "n_pass": [361, 33, 32]}
{"time": "2021-02-16 00:52:40.842184", "score": "0.4778", "loss": "0.9353", "code": "boolean equals(){if(this==o){}if(!(o instanceof Set)){}if(((Set))=size) {  }((Collection)); }", "n_tokens": 51, "n_pass": [363, 34, 33]}
{"time": "2021-02-16 00:52:43.405220", "score": "0.4778", "loss": "0.9353", "code": "boolean equals(){if(this==o){}if(!(o instanceof Set)){}if(((Set))=size){  }((Collection)); }", "n_tokens": 50, "n_pass": [366, 35, 34]}
{"time": "2021-02-16 00:52:45.971586", "score": "0.4778", "loss": "0.9353", "code": "boolean equals(){if(this==o){}if(!(o instanceof Set)){}if(((Set))=size){ }((Collection)); }", "n_tokens": 49, "n_pass": [368, 36, 35]}
{"time": "2021-02-16 00:52:48.524411", "score": "0.4778", "loss": "0.9353", "code": "boolean equals(){if(this==o){}if(!(o instanceof Set)){}if(((Set))=size){}((Collection)); }", "n_tokens": 48, "n_pass": [369, 37, 36]}
{"time": "2021-02-16 00:52:51.098979", "score": "0.4778", "loss": "0.9353", "code": "boolean equals(){if(this==o){}if(!(o instanceof Set)){}if(((Set))=size){}((Collection));}", "n_tokens": 47, "n_pass": [377, 38, 37]}

Minimal simplified code:
boolean equals(){if(this==o){}if(!(o instanceof Set)){}if(((Set))=size){}((Collection));}

