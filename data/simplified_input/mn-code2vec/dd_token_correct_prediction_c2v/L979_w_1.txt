
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/huxq17__FloatBall/library/src/main/java/com/huxq17/floatball/libarary/utils/LogUtils_w.java
method_name = w
method_body = public static void w(Throwable tr) { if (!allowW) return; StackTraceElement caller = getCallerStackTraceElement(); String tag = generateTag(caller); if (customLogger != null) { customLogger.w(tag, tr); } else { Log.w(tag, tr); } }
predict, score, loss = w, 0.9999874830245972, 1.3589766240329482e-05

Trace of simplified code(s):
{"time": "2021-02-16 12:44:45.309734", "score": "1.0", "loss": "0.0", "code": "public static void w(Throwable tr) { if (!allowW) return; StackTraceElement caller = getCallerStackTraceElement(); String tag = generateTag(caller); if (customLogger != null) { customLogger.w(tag, tr); } else { Log.w(tag, tr); } }", "n_tokens": 92, "n_pass": [1, 1, 1]}
{"time": "2021-02-16 12:44:47.856783", "score": "0.9996", "loss": "0.0004", "code": "public static void w(Throwable tr) { if (!allowW) return; if (customLogger != null) { customLogger.w(tag, tr); } else { Log.w(tag, tr); } }", "n_tokens": 69, "n_pass": [9, 2, 2]}
{"time": "2021-02-16 12:44:50.796954", "score": "0.8804", "loss": "0.1278", "code": "public static void w(Throwable tr) {  return; if (customLogger != null) { customLogger.w(tag, tr); } else { Log.w(tag, tr); } }", "n_tokens": 63, "n_pass": [47, 3, 3]}
{"time": "2021-02-16 12:44:53.734724", "score": "0.8804", "loss": "0.1278", "code": "public static void w(Throwable tr) {  if (customLogger != null) { customLogger.w(tag, tr); } else { Log.w(tag, tr); } }", "n_tokens": 60, "n_pass": [81, 4, 4]}
{"time": "2021-02-16 12:44:56.290203", "score": "0.8888", "loss": "0.1182", "code": "public static void w(Throwable tr) {  if (customLogger != null) { customLogger.w(tr); } else { Log.w(tag, tr); } }", "n_tokens": 57, "n_pass": [87, 5, 5]}
{"time": "2021-02-16 12:44:58.827849", "score": "0.9443", "loss": "0.0575", "code": "public static void w(Throwable tr) {  if (customLogger != null) { customLogger.w(tr); } else {w(tag, tr); } }", "n_tokens": 54, "n_pass": [91, 6, 6]}
{"time": "2021-02-16 12:45:01.390754", "score": "0.9209", "loss": "0.0829", "code": "public static void w(Throwable tr) {  if (customLogger != null) { customLogger.w(tr); } else {w(tag); } }", "n_tokens": 51, "n_pass": [93, 7, 7]}
{"time": "2021-02-16 12:45:03.925171", "score": "0.9209", "loss": "0.0829", "code": "static void w(Throwable tr) {  if (customLogger != null) { customLogger.w(tr); } else {w(tag); } }", "n_tokens": 49, "n_pass": [96, 8, 8]}
{"time": "2021-02-16 12:45:06.476159", "score": "0.9209", "loss": "0.0829", "code": "void w(Throwable tr) {  if (customLogger != null) { customLogger.w(tr); } else {w(tag); } }", "n_tokens": 47, "n_pass": [97, 9, 9]}
{"time": "2021-02-16 12:45:12.979368", "score": "0.9209", "loss": "0.0829", "code": "void w(Throwable tr){  if (customLogger != null) { customLogger.w(tr); } else {w(tag); } }", "n_tokens": 46, "n_pass": [154, 10, 10]}
{"time": "2021-02-16 12:45:15.504789", "score": "0.9209", "loss": "0.0829", "code": "void w(Throwable tr){ if (customLogger != null) { customLogger.w(tr); } else {w(tag); } }", "n_tokens": 45, "n_pass": [156, 11, 11]}
{"time": "2021-02-16 12:45:18.030826", "score": "0.9209", "loss": "0.0829", "code": "void w(Throwable tr){if (customLogger != null) { customLogger.w(tr); } else {w(tag); } }", "n_tokens": 44, "n_pass": [157, 12, 12]}
{"time": "2021-02-16 12:45:20.555056", "score": "0.9209", "loss": "0.0829", "code": "void w(Throwable tr){if(customLogger != null) { customLogger.w(tr); } else {w(tag); } }", "n_tokens": 43, "n_pass": [159, 13, 13]}
{"time": "2021-02-16 12:45:23.091317", "score": "0.9209", "loss": "0.0829", "code": "void w(Throwable tr){if(customLogger!= null) { customLogger.w(tr); } else {w(tag); } }", "n_tokens": 42, "n_pass": [162, 14, 14]}
{"time": "2021-02-16 12:45:25.617172", "score": "0.9338", "loss": "0.0693", "code": "void w(Throwable tr){if(customLogger!= null) { w(tr); } else {w(tag); } }", "n_tokens": 40, "n_pass": [167, 15, 15]}
{"time": "2021-02-16 12:45:28.146432", "score": "0.9616", "loss": "0.0397", "code": "void w(Throwable tr){if(customLogger!= null) { w(tr); } {w(tag); } }", "n_tokens": 38, "n_pass": [172, 16, 16]}
{"time": "2021-02-16 12:45:34.594620", "score": "0.9623", "loss": "0.0392", "code": "void w(Throwable tr){if(customLogger!= null) { w(tr); } {w(); } }", "n_tokens": 37, "n_pass": [225, 17, 17]}
{"time": "2021-02-16 12:45:37.141758", "score": "0.9623", "loss": "0.0392", "code": "void w(Throwable tr){if(customLogger!= null) { w(tr); } {w();} }", "n_tokens": 36, "n_pass": [228, 18, 18]}
{"time": "2021-02-16 12:45:39.697294", "score": "0.9623", "loss": "0.0392", "code": "void w(Throwable tr){if(customLogger!= null) { w(tr); } {w();}}", "n_tokens": 35, "n_pass": [230, 19, 19]}
{"time": "2021-02-16 12:45:43.006692", "score": "0.9806", "loss": "0.0208", "code": "void w(Throwable tr){if(customLogger= null) { w(tr); } {w();}}", "n_tokens": 34, "n_pass": [244, 20, 20]}
{"time": "2021-02-16 12:45:45.536341", "score": "0.9806", "loss": "0.0208", "code": "void w(Throwable tr){if(customLogger=null) { w(tr); } {w();}}", "n_tokens": 33, "n_pass": [246, 21, 21]}
{"time": "2021-02-16 12:45:48.062581", "score": "0.9806", "loss": "0.0208", "code": "void w(Throwable tr){if(customLogger=null){ w(tr); } {w();}}", "n_tokens": 32, "n_pass": [249, 22, 22]}
{"time": "2021-02-16 12:45:50.584416", "score": "0.9806", "loss": "0.0208", "code": "void w(Throwable tr){if(customLogger=null){w(tr); } {w();}}", "n_tokens": 31, "n_pass": [251, 23, 23]}
{"time": "2021-02-16 12:45:53.131988", "score": "0.6381", "loss": "0.4897", "code": "void w(Throwable tr){if(customLogger=null){(tr); } {w();}}", "n_tokens": 30, "n_pass": [252, 24, 24]}
{"time": "2021-02-16 12:45:55.660607", "score": "0.6381", "loss": "0.4897", "code": "void w(Throwable tr){if(customLogger=null){(tr);} {w();}}", "n_tokens": 29, "n_pass": [257, 25, 25]}
{"time": "2021-02-16 12:45:58.186177", "score": "0.6381", "loss": "0.4897", "code": "void w(Throwable tr){if(customLogger=null){(tr);}{w();}}", "n_tokens": 28, "n_pass": [259, 26, 26]}
{"time": "2021-02-16 12:46:01.467860", "score": "0.8412", "loss": "0.1863", "code": "void w(Throwable tr){if(customLoggernull){(tr);}{w();}}", "n_tokens": 27, "n_pass": [279, 27, 27]}
{"time": "2021-02-16 12:46:03.988938", "score": "0.5723", "loss": "0.5638", "code": "void w(Throwable tr){if(customLogger){(tr);}{w();}}", "n_tokens": 26, "n_pass": [280, 28, 28]}

Minimal simplified code:
void w(Throwable tr){if(customLogger){(tr);}{w();}}

