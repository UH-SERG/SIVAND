
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/bcgit__bc-java/prov/src/main/java/org/bouncycastle/jcajce/provider/asymmetric/x509/X509CRLObject_verify.java
method_name = verify
method_body = public void verify(PublicKey key, Provider sigProvider) throws CRLException, NoSuchAlgorithmException, InvalidKeyException, SignatureException { Signature sig; if (sigProvider != null) { sig = Signature.getInstance(getSigAlgName(), sigProvider); } else { sig = Signature.getInstance(getSigAlgName()); } doVerify(key, sig); }
predict, score, loss = verify, 0.9755943417549133, 0.02474631927907467

Trace of simplified code(s):
{"time": "2021-02-14 12:01:42.142531", "score": "0.9756", "loss": "0.0247", "code": "public void verify(PublicKey key, Provider sigProvider) throws CRLException, NoSuchAlgorithmException, InvalidKeyException, SignatureException { Signature sig; if (sigProvider != null) { sig = Signature.getInstance(getSigAlgName(), sigProvider); } else { sig = Signature.getInstance(getSigAlgName()); } doVerify(key, sig); }", "n_tokens": 98, "n_pass": [1, 1, 1]}
{"time": "2021-02-14 12:01:44.810385", "score": "0.9841", "loss": "0.016", "code": "public void verify(PublicKey key, Provider sigProvider) throws CRLException, NoSuchAlgorithmException, InvalidKeyException, SignatureException { Signature sig; if (sigProvider != null) { sig = Signature.getInstance(getSigAlgName(), sigProvider); } else {  } doVerify(key, sig); }", "n_tokens": 85, "n_pass": [26, 2, 2]}
{"time": "2021-02-14 12:01:47.855361", "score": "0.9346", "loss": "0.0677", "code": "public void verify(PublicKey key, Provider sigProvider) throws InvalidKeyException, SignatureException { Signature sig; if (sigProvider != null) { sig = Signature.getInstance(getSigAlgName(), sigProvider); } else {  } doVerify(key, sig); }", "n_tokens": 79, "n_pass": [53, 3, 3]}
{"time": "2021-02-14 12:01:50.497731", "score": "0.9359", "loss": "0.0663", "code": "public void verify(PublicKey key, Provider sigProvider) throws InvalidKeyException, SignatureException {if (sigProvider != null) { sig = Signature.getInstance(getSigAlgName(), sigProvider); } else {  } doVerify(key, sig); }", "n_tokens": 73, "n_pass": [55, 4, 4]}
{"time": "2021-02-14 12:01:53.155016", "score": "0.9359", "loss": "0.0663", "code": "public void verify(PublicKey key, Provider sigProvider) throws InvalidKeyException, SignatureException {if (sigProvider != null) { sig = Signature.getInstance(getSigAlgName(), sigProvider);  } doVerify(key, sig); }", "n_tokens": 67, "n_pass": [61, 5, 5]}
{"time": "2021-02-14 12:01:55.810922", "score": "0.9428", "loss": "0.0589", "code": "public void verify(PublicKey key, Provider sigProvider) throws InvalidKeyException, SignatureException {if (sigProvider != null) { sig = Signature.getInstance(getSigAlgName(), sigProvider);  } doVerify(key); }", "n_tokens": 64, "n_pass": [97, 6, 6]}
{"time": "2021-02-14 12:01:58.866152", "score": "0.9937", "loss": "0.0063", "code": "public void verify(PublicKey key, Provider sigProvider) throws SignatureException {if (sigProvider != null) { sig = Signature.getInstance(getSigAlgName(), sigProvider);  } doVerify(key); }", "n_tokens": 61, "n_pass": [104, 7, 7]}
{"time": "2021-02-14 12:02:01.521735", "score": "0.9939", "loss": "0.0061", "code": "public void verify(PublicKey key, Provider sigProvider) throws SignatureException {if (sigProvider != null) { sig .getInstance(getSigAlgName(), sigProvider);  } doVerify(key); }", "n_tokens": 58, "n_pass": [111, 8, 8]}
{"time": "2021-02-14 12:02:04.169918", "score": "0.9971", "loss": "0.0029", "code": "public void verify(PublicKey key, Provider sigProvider) throws SignatureException {if (sigProvider != null) { sig .getInstance(getSigAlgName());  } doVerify(key); }", "n_tokens": 55, "n_pass": [114, 9, 9]}
{"time": "2021-02-14 12:02:07.231522", "score": "0.9968", "loss": "0.0033", "code": "public void verify(PublicKey key, Provider sigProvider) throws SignatureException {if (sigProvider != null) { sig .getInstance();  } doVerify(key); }", "n_tokens": 52, "n_pass": [132, 10, 10]}
{"time": "2021-02-14 12:02:12.935862", "score": "0.9979", "loss": "0.0021", "code": "public void verify(PublicKey key, Provider sigProvider) throws SignatureException {if (sigProvider != null) { sig ();  } doVerify(key); }", "n_tokens": 50, "n_pass": [184, 11, 11]}
{"time": "2021-02-14 12:02:15.561256", "score": "0.9981", "loss": "0.0019", "code": "public void verify(PublicKey key, Provider sigProvider) throws SignatureException {if (sigProvider != null) { sig ;  } doVerify(key); }", "n_tokens": 48, "n_pass": [185, 12, 12]}
{"time": "2021-02-14 12:02:18.195627", "score": "0.9964", "loss": "0.0037", "code": "public void verify(PublicKey key, Provider sigProvider) throws SignatureException {if (sigProvider != null) { sig ;  }(key); }", "n_tokens": 46, "n_pass": [188, 13, 13]}
{"time": "2021-02-14 12:02:20.830792", "score": "0.9964", "loss": "0.0037", "code": " void verify(PublicKey key, Provider sigProvider) throws SignatureException {if (sigProvider != null) { sig ;  }(key); }", "n_tokens": 45, "n_pass": [192, 14, 14]}
{"time": "2021-02-14 12:02:23.457138", "score": "0.9964", "loss": "0.0037", "code": "void verify(PublicKey key, Provider sigProvider) throws SignatureException {if (sigProvider != null) { sig ;  }(key); }", "n_tokens": 44, "n_pass": [193, 15, 15]}
{"time": "2021-02-14 12:02:26.918202", "score": "0.9964", "loss": "0.0037", "code": "void verify(PublicKey key,Provider sigProvider) throws SignatureException {if (sigProvider != null) { sig ;  }(key); }", "n_tokens": 43, "n_pass": [202, 16, 16]}
{"time": "2021-02-14 12:02:29.554456", "score": "0.9964", "loss": "0.0037", "code": "void verify(PublicKey key,Provider sigProvider)throws SignatureException {if (sigProvider != null) { sig ;  }(key); }", "n_tokens": 42, "n_pass": [207, 17, 17]}
{"time": "2021-02-14 12:02:32.180974", "score": "0.9965", "loss": "0.0036", "code": "void verify(PublicKey key,Provider sigProvider)throws SignatureException {if (sigProvider != null) { ;  }(key); }", "n_tokens": 40, "n_pass": [217, 18, 18]}
{"time": "2021-02-14 12:02:34.803064", "score": "0.9965", "loss": "0.0036", "code": "void verify(PublicKey key,Provider sigProvider)throws SignatureException {if (sigProvider != null) {  }(key); }", "n_tokens": 38, "n_pass": [218, 19, 19]}
{"time": "2021-02-14 12:02:42.006854", "score": "0.9965", "loss": "0.0036", "code": "void verify(PublicKey key,Provider sigProvider)throws SignatureException {if (sigProvider != null) {  }(key);}", "n_tokens": 37, "n_pass": [275, 20, 20]}
{"time": "2021-02-14 12:02:45.456563", "score": "0.9965", "loss": "0.0036", "code": "void verify(PublicKey key,Provider sigProvider)throws SignatureException{if (sigProvider != null) {  }(key);}", "n_tokens": 36, "n_pass": [291, 21, 21]}
{"time": "2021-02-14 12:02:48.070998", "score": "0.9965", "loss": "0.0036", "code": "void verify(PublicKey key,Provider sigProvider)throws SignatureException{if(sigProvider != null) {  }(key);}", "n_tokens": 35, "n_pass": [294, 22, 22]}
{"time": "2021-02-14 12:02:50.692651", "score": "0.9965", "loss": "0.0036", "code": "void verify(PublicKey key,Provider sigProvider)throws SignatureException{if(sigProvider!= null) {  }(key);}", "n_tokens": 34, "n_pass": [297, 23, 23]}
{"time": "2021-02-14 12:02:53.338101", "score": "0.997", "loss": "0.0031", "code": "void verify(PublicKey key,Provider sigProvider)throws SignatureException{if(sigProvider= null) {  }(key);}", "n_tokens": 33, "n_pass": [298, 24, 24]}
{"time": "2021-02-14 12:02:55.960762", "score": "0.997", "loss": "0.0031", "code": "void verify(PublicKey key,Provider sigProvider)throws SignatureException{if(sigProvider=null) {  }(key);}", "n_tokens": 32, "n_pass": [300, 25, 25]}
{"time": "2021-02-14 12:02:58.577217", "score": "0.997", "loss": "0.0031", "code": "void verify(PublicKey key,Provider sigProvider)throws SignatureException{if(sigProvider=null){  }(key);}", "n_tokens": 31, "n_pass": [303, 26, 26]}
{"time": "2021-02-14 12:03:01.189025", "score": "0.997", "loss": "0.0031", "code": "void verify(PublicKey key,Provider sigProvider)throws SignatureException{if(sigProvider=null){ }(key);}", "n_tokens": 30, "n_pass": [305, 27, 27]}
{"time": "2021-02-14 12:03:03.812947", "score": "0.997", "loss": "0.0031", "code": "void verify(PublicKey key,Provider sigProvider)throws SignatureException{if(sigProvider=null){}(key);}", "n_tokens": 29, "n_pass": [306, 28, 28]}
{"time": "2021-02-14 12:03:07.268971", "score": "0.9974", "loss": "0.0027", "code": "void verify(PublicKey key,Provider sigProvider)throws SignatureException{if(sigProvidernull){}(key);}", "n_tokens": 28, "n_pass": [332, 29, 29]}
{"time": "2021-02-14 12:03:09.889437", "score": "0.9954", "loss": "0.0047", "code": "void verify(PublicKey key,Provider sigProvider)throws SignatureException{if(sigProvider){}(key);}", "n_tokens": 27, "n_pass": [333, 30, 30]}

Minimal simplified code:
void verify(PublicKey key,Provider sigProvider)throws SignatureException{if(sigProvider){}(key);}

