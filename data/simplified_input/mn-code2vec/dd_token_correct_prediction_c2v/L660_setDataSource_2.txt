
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/SummerRC__BiLiBiLi/VitamioBundle-4/src/io/vov/vitamio/MediaPlayer_setDataSource.java
method_name = setDataSource
method_body = public void setDataSource(Context context, Uri uri, Map<String, String> headers) throws IOException, IllegalArgumentException, SecurityException, IllegalStateException { StringBuffer headerBuffer = null; if (headers != null) { headerBuffer = new StringBuffer(); for (Map.Entry<String, String> entry : headers.entrySet()) { headerBuffer.append(entry.getKey()).append(":").append(entry.getValue()).append("\r\n"); } } setDataSource(context, uri, headerBuffer == null ? null : headerBuffer.toString()); return; }
predict, score, loss = setDataSource, 0.9725577235221863, 0.029048243537545204

Trace of simplified code(s):
{"time": "2021-02-15 02:12:54.416262", "score": "0.9759", "loss": "0.0253", "code": "public void setDataSource(Context context, Uri uri, Map<String, String> headers) throws IOException, IllegalArgumentException, SecurityException, IllegalStateException { StringBuffer headerBuffer = null; if (headers != null) { headerBuffer = new StringBuffer(); for (Map.Entry<String, String> entry : headers.entrySet()) { headerBuffer.append(entry.getKey()).append(\":\").append(entry.getValue()).append(\"\\r\\n\"); } } setDataSource(context, uri, headerBuffer == null ? null : headerBuffer.toString()); return; }", "n_tokens": 176, "n_pass": [1, 1, 1]}
{"time": "2021-02-15 02:12:57.263392", "score": "0.8714", "loss": "0.1382", "code": "public void setDataSource(Context context, Map<String, String> headers) throws IOException, IllegalArgumentException, SecurityException, IllegalStateException { StringBuffer headerBuffer = null; if (headers != null) { headerBuffer = new StringBuffer(); for (Map.Entry<String, String> entry : headers.entrySet()) { headerBuffer.append(entry.getKey()).append(\":\").append(entry.getValue()).append(\"\\r\\n\"); } } setDataSource(context, uri, headerBuffer == null ? null : headerBuffer.toString()); return; }", "n_tokens": 171, "n_pass": [94, 2, 2]}
{"time": "2021-02-15 02:12:59.955380", "score": "0.6768", "loss": "0.392", "code": "public void setDataSource(Context context, Map<String, String> headers) throws IOExceptionSecurityException, IllegalStateException { StringBuffer headerBuffer = null; if (headers != null) { headerBuffer = new StringBuffer(); for (Map.Entry<String, String> entry : headers.entrySet()) { headerBuffer.append(entry.getKey()).append(\":\").append(entry.getValue()).append(\"\\r\\n\"); } } setDataSource(context, uri, headerBuffer == null ? null : headerBuffer.toString()); return; }", "n_tokens": 166, "n_pass": [98, 3, 3]}
{"time": "2021-02-15 02:13:02.625412", "score": "0.8819", "loss": "0.1265", "code": "public void setDataSource(Context context, Map<String, String> headers) throws IOException{ StringBuffer headerBuffer = null; if (headers != null) { headerBuffer = new StringBuffer(); for (Map.Entry<String, String> entry : headers.entrySet()) { headerBuffer.append(entry.getKey()).append(\":\").append(entry.getValue()).append(\"\\r\\n\"); } } setDataSource(context, uri, headerBuffer == null ? null : headerBuffer.toString()); return; }", "n_tokens": 161, "n_pass": [99, 4, 4]}
{"time": "2021-02-15 02:13:05.358912", "score": "0.8893", "loss": "0.1183", "code": "public void setDataSource(Context context, Map<String, String> headers) throws IOException{ StringBuffer headerBuffer = null; if (headers) { headerBuffer = new StringBuffer(); for (Map.Entry<String, String> entry : headers.entrySet()) { headerBuffer.append(entry.getKey()).append(\":\").append(entry.getValue()).append(\"\\r\\n\"); } } setDataSource(context, uri, headerBuffer == null ? null : headerBuffer.toString()); return; }", "n_tokens": 156, "n_pass": [103, 5, 5]}
{"time": "2021-02-15 02:13:08.057213", "score": "0.9058", "loss": "0.0995", "code": "public void setDataSource(Context context, Map<String, String> headers) throws IOException{ StringBuffer headerBuffer = null; if (headers) { headerBufferStringBuffer(); for (Map.Entry<String, String> entry : headers.entrySet()) { headerBuffer.append(entry.getKey()).append(\":\").append(entry.getValue()).append(\"\\r\\n\"); } } setDataSource(context, uri, headerBuffer == null ? null : headerBuffer.toString()); return; }", "n_tokens": 151, "n_pass": [105, 6, 6]}
{"time": "2021-02-15 02:13:10.788209", "score": "0.9319", "loss": "0.0752", "code": "public void setDataSource(Context context, Map<String, String> headers) throws IOException{ StringBuffer headerBuffer = null; if (headers) { headerBufferStringBuffer(); for (Map.Entry<String, String> entry : headers.entrySet()) { headerBuffer.append(entry.getKey()).append(\":\").append(entry.getValue()).append(\"\\r\\n\"); } } setDataSource(context == null ? null : headerBuffer.toString()); return; }", "n_tokens": 145, "n_pass": [119, 7, 7]}
{"time": "2021-02-15 02:13:13.471528", "score": "0.7915", "loss": "0.2395", "code": "public void setDataSource(Context context, Map<String, String> headers) throws IOException{ StringBuffer headerBuffer = null; if (headers) { headerBufferStringBuffer(); for (Map.Entry<String, String> entry : headers.entrySet()) { headerBuffer.append(entry.getKey()).append(\":\").append(entry.getValue()).append(\"\\r\\n\"); } } setDataSource(context? null : headerBuffer.toString()); return; }", "n_tokens": 139, "n_pass": [120, 8, 8]}
{"time": "2021-02-15 02:13:16.153433", "score": "0.8064", "loss": "0.2477", "code": "public void setDataSource(Context context, Map<String, String> headers) throws IOException{ StringBuffer headerBuffer = null; if (headers) { headerBufferStringBuffer(); for (Map.Entry<String, String> entry : headers.entrySet()) { headerBuffer.append(entry.getKey()).append(\":\").append(entry.getValue()).append(\"\\r\\n\"); } } setDataSource(contextheaderBuffer.toString()); return; }", "n_tokens": 133, "n_pass": [121, 9, 9]}
{"time": "2021-02-15 02:13:18.858920", "score": "0.7454", "loss": "0.3328", "code": "public void setDataSource(Context context, Map<String, String> headers) throws IOException{ StringBuffer headerBuffer = null; if (headers) { headerBufferStringBuffer(); for (Map.Entry<String, String> entry : headers.entrySet()) { headerBuffer.append(entry.getKey()).append(\":\").append(entry.getValue()).append(\"\\r\\n\"); } } setDataSource(context()); return; }", "n_tokens": 130, "n_pass": [194, 10, 10]}
{"time": "2021-02-15 02:13:21.552312", "score": "0.7454", "loss": "0.3328", "code": "public void setDataSource(Context context, Map<String, String> headers) throws IOException{ StringBuffer headerBuffer = null; if (headers) { headerBufferStringBuffer(); for (Map.Entry<String, String> entry : headers.entrySet()) { headerBuffer.append(entry.getKey()).append(\":\").append(entry.getValue()).append(\"\\r\\n\"); } } setDataSource(context()); }", "n_tokens": 127, "n_pass": [195, 11, 11]}
{"time": "2021-02-15 02:13:24.226199", "score": "0.7454", "loss": "0.3328", "code": "void setDataSource(Context context, Map<String, String> headers) throws IOException{ StringBuffer headerBuffer = null; if (headers) { headerBufferStringBuffer(); for (Map.Entry<String, String> entry : headers.entrySet()) { headerBuffer.append(entry.getKey()).append(\":\").append(entry.getValue()).append(\"\\r\\n\"); } } setDataSource(context()); }", "n_tokens": 125, "n_pass": [197, 12, 12]}
{"time": "2021-02-15 02:13:27.283352", "score": "0.8644", "loss": "0.2119", "code": "void setDataSource(Context context, Map<StringString> headers) throws IOException{ StringBuffer headerBuffer = null; if (headers) { headerBufferStringBuffer(); for (Map.Entry<String, String> entry : headers.entrySet()) { headerBuffer.append(entry.getKey()).append(\":\").append(entry.getValue()).append(\"\\r\\n\"); } } setDataSource(context()); }", "n_tokens": 123, "n_pass": [204, 13, 13]}
{"time": "2021-02-15 02:13:29.969984", "score": "0.7031", "loss": "0.4138", "code": "void setDataSource(Context context, Map<StringString> headers) { StringBuffer headerBuffer = null; if (headers) { headerBufferStringBuffer(); for (Map.Entry<String, String> entry : headers.entrySet()) { headerBuffer.append(entry.getKey()).append(\":\").append(entry.getValue()).append(\"\\r\\n\"); } } setDataSource(context()); }", "n_tokens": 120, "n_pass": [208, 14, 14]}
{"time": "2021-02-15 02:13:32.625919", "score": "0.5845", "loss": "0.5985", "code": "void setDataSource(Context context, Map<StringString> headers) { StringBuffer= null; if (headers) { headerBufferStringBuffer(); for (Map.Entry<String, String> entry : headers.entrySet()) { headerBuffer.append(entry.getKey()).append(\":\").append(entry.getValue()).append(\"\\r\\n\"); } } setDataSource(context()); }", "n_tokens": 117, "n_pass": [210, 15, 15]}
{"time": "2021-02-15 02:13:35.301600", "score": "0.6893", "loss": "0.3875", "code": "void setDataSource(Context context, Map<StringString> headers) { StringBuffer; if (headers) { headerBufferStringBuffer(); for (Map.Entry<String, String> entry : headers.entrySet()) { headerBuffer.append(entry.getKey()).append(\":\").append(entry.getValue()).append(\"\\r\\n\"); } } setDataSource(context()); }", "n_tokens": 114, "n_pass": [211, 16, 16]}
{"time": "2021-02-15 02:13:37.977074", "score": "0.6991", "loss": "0.3718", "code": "void setDataSource(Context context, Map<StringString> headers) { StringBuffer; if (headers) { headerBufferStringBuffer(); for (Map.Entry<String> entry : headers.entrySet()) { headerBuffer.append(entry.getKey()).append(\":\").append(entry.getValue()).append(\"\\r\\n\"); } } setDataSource(context()); }", "n_tokens": 111, "n_pass": [220, 17, 17]}
{"time": "2021-02-15 02:13:40.640318", "score": "0.7377", "loss": "0.3153", "code": "void setDataSource(Context context, Map<StringString> headers) { StringBuffer; if (headers) { headerBufferStringBuffer(); for (Map.Entry<String> entry : headers.entrySet()) { (entry.getKey()).append(\":\").append(entry.getValue()).append(\"\\r\\n\"); } } setDataSource(context()); }", "n_tokens": 108, "n_pass": [226, 18, 18]}
{"time": "2021-02-15 02:13:43.290335", "score": "0.7395", "loss": "0.3124", "code": "void setDataSource(Context context, Map<StringString> headers) { StringBuffer; if (headers) { headerBufferStringBuffer(); for (Map.Entry<String> entry : headers.entrySet()) { (entry.getKey()).append(\":\").append(entry.getValue()).append(\"n\"); } } setDataSource(context()); }", "n_tokens": 105, "n_pass": [236, 19, 19]}
{"time": "2021-02-15 02:13:54.602461", "score": "0.6471", "loss": "0.451", "code": "void setDataSource(Context context, Map<StringString> headers) { StringBuffer; if (headers) { headerBufferStringBuffer(); for (Map.Entry<String> entry : headers.entrySet()) { (entry.getKey()).append(\":\").append(entry.getValue()).append(\"n\"); } } setDataSource(context); }", "n_tokens": 103, "n_pass": [360, 21, 20]}
{"time": "2021-02-15 02:13:58.103651", "score": "0.6471", "loss": "0.451", "code": "void setDataSource(Context context,Map<StringString> headers) { StringBuffer; if (headers) { headerBufferStringBuffer(); for (Map.Entry<String> entry : headers.entrySet()) { (entry.getKey()).append(\":\").append(entry.getValue()).append(\"n\"); } } setDataSource(context); }", "n_tokens": 102, "n_pass": [371, 22, 21]}
{"time": "2021-02-15 02:14:06.060201", "score": "0.6471", "loss": "0.451", "code": "void setDataSource(Context context,Map<StringString>headers) { StringBuffer; if (headers) { headerBufferStringBuffer(); for (Map.Entry<String> entry : headers.entrySet()) { (entry.getKey()).append(\":\").append(entry.getValue()).append(\"n\"); } } setDataSource(context); }", "n_tokens": 101, "n_pass": [377, 25, 22]}
{"time": "2021-02-15 02:14:08.738912", "score": "0.6471", "loss": "0.451", "code": "void setDataSource(Context context,Map<StringString>headers){ StringBuffer; if (headers) { headerBufferStringBuffer(); for (Map.Entry<String> entry : headers.entrySet()) { (entry.getKey()).append(\":\").append(entry.getValue()).append(\"n\"); } } setDataSource(context); }", "n_tokens": 100, "n_pass": [380, 26, 23]}
{"time": "2021-02-15 02:14:11.394123", "score": "0.6471", "loss": "0.451", "code": "void setDataSource(Context context,Map<StringString>headers){StringBuffer; if (headers) { headerBufferStringBuffer(); for (Map.Entry<String> entry : headers.entrySet()) { (entry.getKey()).append(\":\").append(entry.getValue()).append(\"n\"); } } setDataSource(context); }", "n_tokens": 99, "n_pass": [382, 27, 24]}
{"time": "2021-02-15 02:14:14.041084", "score": "0.6088", "loss": "0.5102", "code": "void setDataSource(Context context,Map<StringString>headers){; if (headers) { headerBufferStringBuffer(); for (Map.Entry<String> entry : headers.entrySet()) { (entry.getKey()).append(\":\").append(entry.getValue()).append(\"n\"); } } setDataSource(context); }", "n_tokens": 98, "n_pass": [383, 28, 25]}
{"time": "2021-02-15 02:14:16.716907", "score": "0.6088", "loss": "0.5102", "code": "void setDataSource(Context context,Map<StringString>headers){ if (headers) { headerBufferStringBuffer(); for (Map.Entry<String> entry : headers.entrySet()) { (entry.getKey()).append(\":\").append(entry.getValue()).append(\"n\"); } } setDataSource(context); }", "n_tokens": 97, "n_pass": [384, 29, 26]}
{"time": "2021-02-15 02:14:19.423386", "score": "0.6088", "loss": "0.5102", "code": "void setDataSource(Context context,Map<StringString>headers){if (headers) { headerBufferStringBuffer(); for (Map.Entry<String> entry : headers.entrySet()) { (entry.getKey()).append(\":\").append(entry.getValue()).append(\"n\"); } } setDataSource(context); }", "n_tokens": 96, "n_pass": [385, 30, 27]}
{"time": "2021-02-15 02:14:22.062534", "score": "0.6088", "loss": "0.5102", "code": "void setDataSource(Context context,Map<StringString>headers){if(headers) { headerBufferStringBuffer(); for (Map.Entry<String> entry : headers.entrySet()) { (entry.getKey()).append(\":\").append(entry.getValue()).append(\"n\"); } } setDataSource(context); }", "n_tokens": 95, "n_pass": [387, 31, 28]}
{"time": "2021-02-15 02:14:24.708598", "score": "0.6088", "loss": "0.5102", "code": "void setDataSource(Context context,Map<StringString>headers){if(headers){ headerBufferStringBuffer(); for (Map.Entry<String> entry : headers.entrySet()) { (entry.getKey()).append(\":\").append(entry.getValue()).append(\"n\"); } } setDataSource(context); }", "n_tokens": 94, "n_pass": [391, 32, 29]}
{"time": "2021-02-15 02:14:27.361016", "score": "0.6088", "loss": "0.5102", "code": "void setDataSource(Context context,Map<StringString>headers){if(headers){headerBufferStringBuffer(); for (Map.Entry<String> entry : headers.entrySet()) { (entry.getKey()).append(\":\").append(entry.getValue()).append(\"n\"); } } setDataSource(context); }", "n_tokens": 93, "n_pass": [393, 33, 30]}
{"time": "2021-02-15 02:14:30.043597", "score": "0.759", "loss": "0.2932", "code": "void setDataSource(Context context,Map<StringString>headers){if(headers){StringBuffer(); for (Map.Entry<String> entry : headers.entrySet()) { (entry.getKey()).append(\":\").append(entry.getValue()).append(\"n\"); } } setDataSource(context); }", "n_tokens": 92, "n_pass": [394, 34, 31]}
{"time": "2021-02-15 02:14:32.719922", "score": "0.759", "loss": "0.2932", "code": "void setDataSource(Context context,Map<StringString>headers){if(headers){StringBuffer();for (Map.Entry<String> entry : headers.entrySet()) { (entry.getKey()).append(\":\").append(entry.getValue()).append(\"n\"); } } setDataSource(context); }", "n_tokens": 91, "n_pass": [399, 35, 32]}
{"time": "2021-02-15 02:14:35.381075", "score": "0.759", "loss": "0.2932", "code": "void setDataSource(Context context,Map<StringString>headers){if(headers){StringBuffer();for(Map.Entry<String> entry : headers.entrySet()) { (entry.getKey()).append(\":\").append(entry.getValue()).append(\"n\"); } } setDataSource(context); }", "n_tokens": 90, "n_pass": [401, 36, 33]}
{"time": "2021-02-15 02:14:38.031298", "score": "0.7635", "loss": "0.2868", "code": "void setDataSource(Context context,Map<StringString>headers){if(headers){StringBuffer();for(MapEntry<String> entry : headers.entrySet()) { (entry.getKey()).append(\":\").append(entry.getValue()).append(\"n\"); } } setDataSource(context); }", "n_tokens": 89, "n_pass": [404, 37, 34]}
{"time": "2021-02-15 02:14:40.668958", "score": "0.7635", "loss": "0.2868", "code": "void setDataSource(Context context,Map<StringString>headers){if(headers){StringBuffer();for(Map<String> entry : headers.entrySet()) { (entry.getKey()).append(\":\").append(entry.getValue()).append(\"n\"); } } setDataSource(context); }", "n_tokens": 88, "n_pass": [405, 38, 35]}
{"time": "2021-02-15 02:14:43.307053", "score": "0.7635", "loss": "0.2868", "code": "void setDataSource(Context context,Map<StringString>headers){if(headers){StringBuffer();for(Map<String>entry : headers.entrySet()) { (entry.getKey()).append(\":\").append(entry.getValue()).append(\"n\"); } } setDataSource(context); }", "n_tokens": 87, "n_pass": [409, 39, 36]}
{"time": "2021-02-15 02:14:45.990624", "score": "0.7923", "loss": "0.2461", "code": "void setDataSource(Context context,Map<StringString>headers){if(headers){StringBuffer();for(Map<String>entry : entrySet()) { (entry.getKey()).append(\":\").append(entry.getValue()).append(\"n\"); } } setDataSource(context); }", "n_tokens": 85, "n_pass": [412, 40, 37]}
{"time": "2021-02-15 02:14:48.637364", "score": "0.7885", "loss": "0.2503", "code": "void setDataSource(Context context,Map<StringString>headers){if(headers){StringBuffer();for(Map<String>entry : entrySet()) { (getKey()).append(\":\").append(entry.getValue()).append(\"n\"); } } setDataSource(context); }", "n_tokens": 83, "n_pass": [417, 41, 38]}
{"time": "2021-02-15 02:14:51.282889", "score": "0.7762", "loss": "0.2661", "code": "void setDataSource(Context context,Map<StringString>headers){if(headers){StringBuffer();for(Map<String>entry : entrySet()) { (getKey()).append(\":\").append(getValue()).append(\"n\"); } } setDataSource(context); }", "n_tokens": 81, "n_pass": [425, 42, 39]}
{"time": "2021-02-15 02:14:57.441584", "score": "0.5639", "loss": "0.5825", "code": "void setDataSource(Context context,Map<String>headers){if(headers){StringBuffer();for(Map<String>entry : entrySet()) { (getKey()).append(\":\").append(getValue()).append(\"n\"); } } setDataSource(context); }", "n_tokens": 80, "n_pass": [448, 44, 40]}
{"time": "2021-02-15 02:15:07.287510", "score": "0.5639", "loss": "0.5825", "code": "void setDataSource(Context context,Map<String>headers){if(headers){StringBuffer();for(Map<String>entry: entrySet()) { (getKey()).append(\":\").append(getValue()).append(\"n\"); } } setDataSource(context); }", "n_tokens": 79, "n_pass": [555, 46, 41]}
{"time": "2021-02-15 02:15:09.955136", "score": "0.5639", "loss": "0.5825", "code": "void setDataSource(Context context,Map<String>headers){if(headers){StringBuffer();for(Map<String>entry:entrySet()) { (getKey()).append(\":\").append(getValue()).append(\"n\"); } } setDataSource(context); }", "n_tokens": 78, "n_pass": [557, 47, 42]}
{"time": "2021-02-15 02:15:12.621847", "score": "0.5639", "loss": "0.5825", "code": "void setDataSource(Context context,Map<String>headers){if(headers){StringBuffer();for(Map<String>entry:entrySet()){ (getKey()).append(\":\").append(getValue()).append(\"n\"); } } setDataSource(context); }", "n_tokens": 77, "n_pass": [562, 48, 43]}
{"time": "2021-02-15 02:15:15.276521", "score": "0.5639", "loss": "0.5825", "code": "void setDataSource(Context context,Map<String>headers){if(headers){StringBuffer();for(Map<String>entry:entrySet()){(getKey()).append(\":\").append(getValue()).append(\"n\"); } } setDataSource(context); }", "n_tokens": 76, "n_pass": [564, 49, 44]}
{"time": "2021-02-15 02:15:17.935144", "score": "0.5628", "loss": "0.584", "code": "void setDataSource(Context context,Map<String>headers){if(headers){StringBuffer();for(Map<String>entry:entrySet()){(getKey()).append(\"\").append(getValue()).append(\"n\"); } } setDataSource(context); }", "n_tokens": 75, "n_pass": [574, 50, 45]}
{"time": "2021-02-15 02:15:20.590908", "score": "0.5889", "loss": "0.5379", "code": "void setDataSource(Context context,Map<String>headers){if(headers){StringBuffer();for(Map<String>entry:entrySet()){(getKey()).append(\"\").append(getValue()).append(\"\"); } } setDataSource(context); }", "n_tokens": 74, "n_pass": [588, 51, 46]}
{"time": "2021-02-15 02:15:23.286289", "score": "0.5889", "loss": "0.5379", "code": "void setDataSource(Context context,Map<String>headers){if(headers){StringBuffer();for(Map<String>entry:entrySet()){(getKey()).append(\"\").append(getValue()).append(\"\");} } setDataSource(context); }", "n_tokens": 73, "n_pass": [592, 52, 47]}
{"time": "2021-02-15 02:15:25.971714", "score": "0.5889", "loss": "0.5379", "code": "void setDataSource(Context context,Map<String>headers){if(headers){StringBuffer();for(Map<String>entry:entrySet()){(getKey()).append(\"\").append(getValue()).append(\"\");}} setDataSource(context); }", "n_tokens": 72, "n_pass": [594, 53, 48]}
{"time": "2021-02-15 02:15:28.610638", "score": "0.5889", "loss": "0.5379", "code": "void setDataSource(Context context,Map<String>headers){if(headers){StringBuffer();for(Map<String>entry:entrySet()){(getKey()).append(\"\").append(getValue()).append(\"\");}}setDataSource(context); }", "n_tokens": 71, "n_pass": [596, 54, 49]}
{"time": "2021-02-15 02:15:33.983461", "score": "0.6631", "loss": "0.4371", "code": "void setDataSource(Context context,Map<String>headers){if(headers){StringBuffer();for(Map<String>entry:entrySet()){(getKey()).append(\"\").append(getValue()).append(\"\");}}setDataSource(); }", "n_tokens": 70, "n_pass": [599, 56, 50]}
{"time": "2021-02-15 02:15:36.626121", "score": "0.6631", "loss": "0.4371", "code": "void setDataSource(Context context,Map<String>headers){if(headers){StringBuffer();for(Map<String>entry:entrySet()){(getKey()).append(\"\").append(getValue()).append(\"\");}}setDataSource();}", "n_tokens": 69, "n_pass": [602, 57, 51]}

Minimal simplified code:
void setDataSource(Context context,Map<String>headers){if(headers){StringBuffer();for(Map<String>entry:entrySet()){(getKey()).append("").append(getValue()).append("");}}setDataSource();}

