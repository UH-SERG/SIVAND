
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/Waikato__meka/src/main/java/meka/classifiers/multilabel/meta/EM_getOptions.java
method_name = getOptions
method_body = @Override public String[] getOptions() { List<String> result = new ArrayList<>(); OptionUtils.add(result, 'I', getIterations()); OptionUtils.add(result, super.getOptions()); return OptionUtils.toArray(result); }
predict, score, loss = getOptions, 0.990753173828125, 0.011075095273554325

Trace of simplified code(s):
{"time": "2021-02-16 02:12:15.765791", "score": "0.9908", "loss": "0.0111", "code": "@Override public String[] getOptions() { List<String> result = new ArrayList<>(); OptionUtils.add(result, 'I', getIterations()); OptionUtils.add(result, super.getOptions()); return OptionUtils.toArray(result); }", "n_tokens": 77, "n_pass": [1, 1, 1]}
{"time": "2021-02-16 02:12:18.726728", "score": "0.9786", "loss": "0.0265", "code": " String[] getOptions() { List<String> result = new ArrayList<>(); OptionUtils.add(result, 'I', getIterations()); OptionUtils.add(result, super.getOptions()); return OptionUtils.toArray(result); }", "n_tokens": 73, "n_pass": [44, 2, 2]}
{"time": "2021-02-16 02:12:22.060246", "score": "0.9715", "loss": "0.0327", "code": " String getOptions() { List<String> result = new ArrayList<>(); OptionUtils.add(result, 'I', getIterations()); OptionUtils.add(result, super.getOptions()); return OptionUtils.toArray(result); }", "n_tokens": 71, "n_pass": [91, 3, 3]}
{"time": "2021-02-16 02:12:25.725583", "score": "0.9699", "loss": "0.0348", "code": " String getOptions() { List<String> result = new ArrayList<>(); OptionUtils(result, 'I', getIterations()); OptionUtils.add(result, super.getOptions()); return OptionUtils.toArray(result); }", "n_tokens": 69, "n_pass": [105, 4, 4]}
{"time": "2021-02-16 02:12:28.376397", "score": "0.567", "loss": "0.9349", "code": " String getOptions() { List<String> result = new ArrayList<>(); OptionUtils(result, 'I', getIterations());add(result, super.getOptions()); return OptionUtils.toArray(result); }", "n_tokens": 66, "n_pass": [111, 5, 5]}
{"time": "2021-02-16 02:12:30.935756", "score": "0.3874", "loss": "1.519", "code": " String getOptions() { List<String> result = new ArrayList<>(); OptionUtils(result, 'I', getIterations());add(result.getOptions()); return OptionUtils.toArray(result); }", "n_tokens": 63, "n_pass": [113, 6, 6]}
{"time": "2021-02-16 02:12:38.750097", "score": "0.3947", "loss": "1.669", "code": " String getOptions() { List<String> result = new ArrayList<>(); OptionUtils(result, 'I', getIterations());add(result.getOptions()); return OptionUtils.toArray; }", "n_tokens": 60, "n_pass": [118, 9, 7]}
{"time": "2021-02-16 02:12:52.470291", "score": "0.3947", "loss": "1.669", "code": "String getOptions() { List<String> result = new ArrayList<>(); OptionUtils(result, 'I', getIterations());add(result.getOptions()); return OptionUtils.toArray; }", "n_tokens": 59, "n_pass": [196, 12, 8]}
{"time": "2021-02-16 02:12:55.764939", "score": "0.3947", "loss": "1.669", "code": "String getOptions(){ List<String> result = new ArrayList<>(); OptionUtils(result, 'I', getIterations());add(result.getOptions()); return OptionUtils.toArray; }", "n_tokens": 58, "n_pass": [201, 13, 9]}
{"time": "2021-02-16 02:12:58.377391", "score": "0.3947", "loss": "1.669", "code": "String getOptions(){List<String> result = new ArrayList<>(); OptionUtils(result, 'I', getIterations());add(result.getOptions()); return OptionUtils.toArray; }", "n_tokens": 57, "n_pass": [203, 14, 10]}
{"time": "2021-02-16 02:13:01.428894", "score": "0.3947", "loss": "1.669", "code": "String getOptions(){List<String>result = new ArrayList<>(); OptionUtils(result, 'I', getIterations());add(result.getOptions()); return OptionUtils.toArray; }", "n_tokens": 56, "n_pass": [208, 15, 11]}
{"time": "2021-02-16 02:13:04.043959", "score": "0.3947", "loss": "1.669", "code": "String getOptions(){List<String>result= new ArrayList<>(); OptionUtils(result, 'I', getIterations());add(result.getOptions()); return OptionUtils.toArray; }", "n_tokens": 55, "n_pass": [210, 16, 12]}
{"time": "2021-02-16 02:13:06.622578", "score": "0.3947", "loss": "1.669", "code": "String getOptions(){List<String>result=new ArrayList<>(); OptionUtils(result, 'I', getIterations());add(result.getOptions()); return OptionUtils.toArray; }", "n_tokens": 54, "n_pass": [212, 17, 13]}
{"time": "2021-02-16 02:13:09.189818", "score": "0.3947", "loss": "1.669", "code": "String getOptions(){List<String>result=new ArrayList<>();OptionUtils(result, 'I', getIterations());add(result.getOptions()); return OptionUtils.toArray; }", "n_tokens": 53, "n_pass": [221, 18, 14]}
{"time": "2021-02-16 02:13:11.772869", "score": "0.3947", "loss": "1.669", "code": "String getOptions(){List<String>result=new ArrayList<>();OptionUtils(result,'I', getIterations());add(result.getOptions()); return OptionUtils.toArray; }", "n_tokens": 52, "n_pass": [226, 19, 15]}
{"time": "2021-02-16 02:13:14.769617", "score": "0.3947", "loss": "1.669", "code": "String getOptions(){List<String>result=new ArrayList<>();OptionUtils(result,'I',getIterations());add(result.getOptions()); return OptionUtils.toArray; }", "n_tokens": 51, "n_pass": [231, 20, 16]}
{"time": "2021-02-16 02:13:32.482998", "score": "0.3947", "loss": "1.669", "code": "String getOptions(){List<String>result=new ArrayList<>();OptionUtils(result,'I',getIterations());add(result.getOptions());return OptionUtils.toArray; }", "n_tokens": 50, "n_pass": [301, 25, 17]}
{"time": "2021-02-16 02:13:42.831331", "score": "0.3947", "loss": "1.669", "code": "String getOptions(){List<String>result=new ArrayList<>();OptionUtils(result,'I',getIterations());add(result.getOptions());return OptionUtils.toArray;}", "n_tokens": 49, "n_pass": [308, 29, 18]}

Minimal simplified code:
String getOptions(){List<String>result=new ArrayList<>();OptionUtils(result,'I',getIterations());add(result.getOptions());return OptionUtils.toArray;}

