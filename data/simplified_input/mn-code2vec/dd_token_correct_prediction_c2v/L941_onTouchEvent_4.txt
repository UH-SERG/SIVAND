
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/MKergall__osmbonuspack/OSMBonusPack/src/main/java/org/osmdroid/bonuspack/clustering/MarkerClusterer_onTouchEvent.java
method_name = onTouchEvent
method_body = @Override public boolean onTouchEvent(final MotionEvent event, final MapView mapView) { for (StaticCluster cluster : reversedClusters()) { if (cluster.getMarker().onTouchEvent(event, mapView)) return true; } return false; }
predict, score, loss = onTouchEvent, 0.9949793219566345, 0.005245612468570471

Trace of simplified code(s):
{"time": "2021-02-16 11:46:55.718489", "score": "0.995", "loss": "0.0052", "code": "@Override public boolean onTouchEvent(final MotionEvent event, final MapView mapView) { for (StaticCluster cluster : reversedClusters()) { if (cluster.getMarker().onTouchEvent(event, mapView)) return true; } return false; }", "n_tokens": 72, "n_pass": [1, 1, 1]}
{"time": "2021-02-16 11:46:58.290253", "score": "0.9915", "loss": "0.0117", "code": "@Override public boolean onTouchEvent(MapView mapView) { for (StaticCluster cluster : reversedClusters()) { if (cluster.getMarker().onTouchEvent(event, mapView)) return true; } return false; }", "n_tokens": 63, "n_pass": [21, 2, 2]}
{"time": "2021-02-16 11:47:00.854281", "score": "0.9931", "loss": "0.0084", "code": " boolean onTouchEvent(MapView mapView) { for (StaticCluster cluster : reversedClusters()) { if (cluster.getMarker().onTouchEvent(event, mapView)) return true; } return false; }", "n_tokens": 59, "n_pass": [54, 3, 3]}
{"time": "2021-02-16 11:47:03.796562", "score": "0.9929", "loss": "0.0088", "code": " boolean onTouchEvent(MapView mapView) { for (StaticCluster cluster : reversedClusters) { if (cluster.getMarker().onTouchEvent(event, mapView)) return true; } return false; }", "n_tokens": 57, "n_pass": [105, 4, 4]}
{"time": "2021-02-16 11:47:06.345530", "score": "0.9943", "loss": "0.0069", "code": " boolean onTouchEvent(MapView mapView) { for (StaticCluster cluster : reversedClusters) { if (cluster().onTouchEvent(event, mapView)) return true; } return false; }", "n_tokens": 55, "n_pass": [110, 5, 5]}
{"time": "2021-02-16 11:47:08.914163", "score": "0.994", "loss": "0.0072", "code": " boolean onTouchEvent(MapView mapView) { for (StaticCluster cluster : reversedClusters) { if (cluster.onTouchEvent(event, mapView)) return true; } return false; }", "n_tokens": 53, "n_pass": [111, 6, 6]}
{"time": "2021-02-16 11:47:13.998476", "score": "0.9963", "loss": "0.0041", "code": " boolean onTouchEvent(MapView mapView) { for (StaticCluster cluster : reversedClusters) { if (cluster.onTouchEvent(event, mapView)) return true; } ; }", "n_tokens": 50, "n_pass": [118, 8, 7]}
{"time": "2021-02-16 11:47:24.405388", "score": "0.9963", "loss": "0.0041", "code": " boolean onTouchEvent(MapView mapView) { for (StaticCluster cluster : reversedClusters) { if (cluster.onTouchEvent(event, mapView)) return true; } }", "n_tokens": 48, "n_pass": [185, 10, 8]}
{"time": "2021-02-16 11:47:26.943627", "score": "0.9963", "loss": "0.0041", "code": "boolean onTouchEvent(MapView mapView) { for (StaticCluster cluster : reversedClusters) { if (cluster.onTouchEvent(event, mapView)) return true; } }", "n_tokens": 47, "n_pass": [187, 11, 9]}
{"time": "2021-02-16 11:47:30.244335", "score": "0.9963", "loss": "0.0041", "code": "boolean onTouchEvent(MapView mapView){ for (StaticCluster cluster : reversedClusters) { if (cluster.onTouchEvent(event, mapView)) return true; } }", "n_tokens": 46, "n_pass": [196, 12, 10]}
{"time": "2021-02-16 11:47:32.793439", "score": "0.9963", "loss": "0.0041", "code": "boolean onTouchEvent(MapView mapView){for (StaticCluster cluster : reversedClusters) { if (cluster.onTouchEvent(event, mapView)) return true; } }", "n_tokens": 45, "n_pass": [198, 13, 11]}
{"time": "2021-02-16 11:47:35.330588", "score": "0.9963", "loss": "0.0041", "code": "boolean onTouchEvent(MapView mapView){for(StaticCluster cluster : reversedClusters) { if (cluster.onTouchEvent(event, mapView)) return true; } }", "n_tokens": 44, "n_pass": [200, 14, 12]}
{"time": "2021-02-16 11:47:37.886840", "score": "0.9963", "loss": "0.0041", "code": "boolean onTouchEvent(MapView mapView){for(StaticCluster cluster: reversedClusters) { if (cluster.onTouchEvent(event, mapView)) return true; } }", "n_tokens": 43, "n_pass": [205, 15, 13]}
{"time": "2021-02-16 11:47:40.426209", "score": "0.9963", "loss": "0.0041", "code": "boolean onTouchEvent(MapView mapView){for(StaticCluster cluster:reversedClusters) { if (cluster.onTouchEvent(event, mapView)) return true; } }", "n_tokens": 42, "n_pass": [207, 16, 14]}
{"time": "2021-02-16 11:47:42.996530", "score": "0.9963", "loss": "0.0041", "code": "boolean onTouchEvent(MapView mapView){for(StaticCluster cluster:reversedClusters){ if (cluster.onTouchEvent(event, mapView)) return true; } }", "n_tokens": 41, "n_pass": [210, 17, 15]}
{"time": "2021-02-16 11:47:45.530995", "score": "0.9963", "loss": "0.0041", "code": "boolean onTouchEvent(MapView mapView){for(StaticCluster cluster:reversedClusters){if (cluster.onTouchEvent(event, mapView)) return true; } }", "n_tokens": 40, "n_pass": [212, 18, 16]}
{"time": "2021-02-16 11:47:48.059331", "score": "0.9963", "loss": "0.0041", "code": "boolean onTouchEvent(MapView mapView){for(StaticCluster cluster:reversedClusters){if(cluster.onTouchEvent(event, mapView)) return true; } }", "n_tokens": 39, "n_pass": [214, 19, 17]}
{"time": "2021-02-16 11:47:53.163298", "score": "0.9963", "loss": "0.0041", "code": "boolean onTouchEvent(MapView mapView){for(StaticCluster cluster:reversedClusters){if(cluster.onTouchEvent(event,mapView)) return true; } }", "n_tokens": 38, "n_pass": [222, 21, 18]}
{"time": "2021-02-16 11:47:55.707967", "score": "0.9969", "loss": "0.0033", "code": "boolean onTouchEvent(MapView mapView){for(StaticCluster cluster:reversedClusters){if(cluster.onTouchEvent(event,mapView)) true; } }", "n_tokens": 36, "n_pass": [226, 22, 19]}
{"time": "2021-02-16 11:48:01.556690", "score": "0.9946", "loss": "0.0058", "code": "boolean onTouchEvent(MapView mapView){for(StaticCluster cluster:reversedClusters){if(cluster.onTouchEvent(eventmapView)) true; } }", "n_tokens": 35, "n_pass": [255, 24, 20]}
{"time": "2021-02-16 11:48:04.093950", "score": "0.9934", "loss": "0.0069", "code": "boolean onTouchEvent(MapView mapView){for(StaticCluster cluster:reversedClusters){if(cluster.onTouchEvent(event)) true; } }", "n_tokens": 34, "n_pass": [256, 25, 21]}
{"time": "2021-02-16 11:48:09.940632", "score": "0.9991", "loss": "0.001", "code": "boolean onTouchEvent(MapView mapView){for(StaticCluster cluster:reversedClusters){if(cluster.onTouchEvent()) true; } }", "n_tokens": 33, "n_pass": [286, 27, 22]}
{"time": "2021-02-16 11:48:17.225679", "score": "0.9991", "loss": "0.001", "code": "boolean onTouchEvent(MapView mapView){for(StaticCluster cluster:reversedClusters){if(cluster.onTouchEvent()) ; } }", "n_tokens": 32, "n_pass": [324, 29, 23]}
{"time": "2021-02-16 11:48:19.767120", "score": "0.9991", "loss": "0.001", "code": "boolean onTouchEvent(MapView mapView){for(StaticCluster cluster:reversedClusters){if(cluster.onTouchEvent()) ;} }", "n_tokens": 31, "n_pass": [325, 30, 24]}
{"time": "2021-02-16 11:48:22.327019", "score": "0.9991", "loss": "0.001", "code": "boolean onTouchEvent(MapView mapView){for(StaticCluster cluster:reversedClusters){if(cluster.onTouchEvent()) ;}}", "n_tokens": 30, "n_pass": [327, 31, 25]}
{"time": "2021-02-16 11:48:25.627213", "score": "0.9973", "loss": "0.006", "code": "boolean onTouchEvent(MapView mapView){for(StaticCluster cluster:reversedClusters){(cluster.onTouchEvent()) ;}}", "n_tokens": 29, "n_pass": [347, 32, 26]}
{"time": "2021-02-16 11:48:30.710772", "score": "0.9973", "loss": "0.006", "code": "boolean onTouchEvent(MapView mapView){for(StaticCluster cluster:reversedClusters){(cluster.onTouchEvent());}}", "n_tokens": 28, "n_pass": [355, 34, 27]}

Minimal simplified code:
boolean onTouchEvent(MapView mapView){for(StaticCluster cluster:reversedClusters){(cluster.onTouchEvent());}}

