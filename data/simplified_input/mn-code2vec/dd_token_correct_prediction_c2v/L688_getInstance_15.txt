
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/apache__incubator-heron/heron/schedulers/src/java/org/apache/heron/scheduler/yarn/HeronMasterDriverProvider_getInstance.java
method_name = getInstance
method_body = static synchronized HeronMasterDriver getInstance() { if (instance == null) { throw new IllegalStateException("Heron Master Driver is not initialized yet"); } return instance; }
predict, score, loss = getInstance, 0.9689292907714844, 0.031692080199718475

Trace of simplified code(s):
{"time": "2021-02-15 02:59:44.993932", "score": "0.9689", "loss": "0.0317", "code": "static synchronized HeronMasterDriver getInstance() { if (instance == null) { throw new IllegalStateException(\"Heron Master Driver is not initialized yet\"); } return instance; }", "n_tokens": 57, "n_pass": [1, 1, 1]}
{"time": "2021-02-15 02:59:47.642039", "score": "0.9689", "loss": "0.0317", "code": "static synchronized HeronMasterDriver getInstance() { if (instance == null) { throw new IllegalStateException(\"Heron Masterinitialized yet\"); } return instance; }", "n_tokens": 50, "n_pass": [25, 2, 2]}
{"time": "2021-02-15 02:59:50.284870", "score": "0.9689", "loss": "0.0317", "code": "static synchronized HeronMasterDriver getInstance() { if (instance == null) { throw new IllegalStateException(\"Heron \"); } return instance; }", "n_tokens": 46, "n_pass": [46, 3, 3]}
{"time": "2021-02-15 02:59:53.218046", "score": "0.9689", "loss": "0.0317", "code": " HeronMasterDriver getInstance() { if (instance == null) { throw new IllegalStateException(\"Heron \"); } return instance; }", "n_tokens": 43, "n_pass": [50, 4, 4]}
{"time": "2021-02-15 02:59:56.227486", "score": "0.971", "loss": "0.0295", "code": " HeronMasterDriver getInstance() { if (instance == null) { throw(\"Heron \"); } return instance; }", "n_tokens": 39, "n_pass": [58, 5, 5]}
{"time": "2021-02-15 03:00:00.356999", "score": "0.9683", "loss": "0.0323", "code": " HeronMasterDriver getInstance() { if (instance == null) { throw(\"\"); } return instance; }", "n_tokens": 37, "n_pass": [93, 6, 6]}
{"time": "2021-02-15 03:00:02.950513", "score": "0.9528", "loss": "0.0502", "code": " HeronMasterDriver getInstance() { if (instance == null) { throw(\"\"); } instance; }", "n_tokens": 35, "n_pass": [97, 7, 7]}
{"time": "2021-02-15 03:00:05.548475", "score": "0.9543", "loss": "0.0489", "code": " HeronMasterDriver getInstance() { if (instance == null) { throw(\"\"); }  }", "n_tokens": 33, "n_pass": [98, 8, 8]}
{"time": "2021-02-15 03:00:08.141218", "score": "0.9543", "loss": "0.0489", "code": "HeronMasterDriver getInstance() { if (instance == null) { throw(\"\"); }  }", "n_tokens": 32, "n_pass": [100, 9, 9]}
{"time": "2021-02-15 03:00:11.935194", "score": "0.3396", "loss": "3.0107", "code": "HeronMasterDriver getInstance() { if (instance= null) { throw(\"\"); }  }", "n_tokens": 30, "n_pass": [109, 10, 10]}
{"time": "2021-02-15 03:00:14.539833", "score": "0.4074", "loss": "1.3644", "code": "HeronMasterDriver getInstance() { if (instancenull) { throw(\"\"); }  }", "n_tokens": 28, "n_pass": [110, 11, 11]}
{"time": "2021-02-15 03:00:17.168871", "score": "0.4074", "loss": "1.3644", "code": "HeronMasterDriver getInstance() { if (instancenull) {(\"\"); }  }", "n_tokens": 26, "n_pass": [113, 12, 12]}
{"time": "2021-02-15 03:00:23.905085", "score": "0.4074", "loss": "1.3644", "code": "HeronMasterDriver getInstance() { if (instancenull) {(\"\");}  }", "n_tokens": 25, "n_pass": [155, 13, 13]}
{"time": "2021-02-15 03:00:26.516832", "score": "0.4074", "loss": "1.3644", "code": "HeronMasterDriver getInstance() { if (instancenull) {(\"\");} }", "n_tokens": 24, "n_pass": [157, 14, 14]}
{"time": "2021-02-15 03:00:29.150103", "score": "0.4074", "loss": "1.3644", "code": "HeronMasterDriver getInstance() { if (instancenull) {(\"\");}}", "n_tokens": 23, "n_pass": [158, 15, 15]}
{"time": "2021-02-15 03:00:32.901826", "score": "0.4074", "loss": "1.3644", "code": "HeronMasterDriver getInstance(){ if (instancenull) {(\"\");}}", "n_tokens": 22, "n_pass": [165, 16, 16]}
{"time": "2021-02-15 03:00:35.509745", "score": "0.4074", "loss": "1.3644", "code": "HeronMasterDriver getInstance(){if (instancenull) {(\"\");}}", "n_tokens": 21, "n_pass": [167, 17, 17]}
{"time": "2021-02-15 03:00:38.226216", "score": "0.4074", "loss": "1.3644", "code": "HeronMasterDriver getInstance(){if(instancenull) {(\"\");}}", "n_tokens": 20, "n_pass": [169, 18, 18]}
{"time": "2021-02-15 03:00:43.470879", "score": "0.8992", "loss": "0.1071", "code": "HeronMasterDriver getInstance(){if(instance) {(\"\");}}", "n_tokens": 19, "n_pass": [172, 20, 19]}
{"time": "2021-02-15 03:00:46.074113", "score": "0.8992", "loss": "0.1071", "code": "HeronMasterDriver getInstance(){if(instance){(\"\");}}", "n_tokens": 18, "n_pass": [174, 21, 20]}

Minimal simplified code:
HeronMasterDriver getInstance(){if(instance){("");}}

