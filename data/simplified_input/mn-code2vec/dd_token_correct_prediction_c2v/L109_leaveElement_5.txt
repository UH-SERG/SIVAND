
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/OpenRock__OpenAM/openam-schema/openam-wsfederation-schema/src/main/java/com/sun/identity/wsfederation/jaxb/wsspolicy/impl/EncryptBeforeSigningElementImpl_leaveElement.java
method_name = leaveElement
method_body = public void leaveElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname) throws org.xml.sax.SAXException { int attIdx; outer: while (true) { switch(state) { case 2: if (("EncryptBeforeSigning" == ___local) && ("http://docs.oasis-open.org/ws-sx/ws-securitypolicy/200512" == ___uri)) { context.popAttributes(); state = 3; return; } break; case 1: spawnHandlerFromLeaveElement((((com.sun.identity.wsfederation.jaxb.wsspolicy.impl.QNameAssertionTypeImpl) com.sun.identity.wsfederation.jaxb.wsspolicy.impl.EncryptBeforeSigningElementImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname); return; case 3: revertToParentFromLeaveElement(___uri, ___local, ___qname); return; } super.leaveElement(___uri, ___local, ___qname); break; } }
predict, score, loss = leaveElement, 0.9977793097496033, 0.0029086447320878506

Trace of simplified code(s):
{"time": "2021-02-14 08:21:35.141425", "score": "0.9972", "loss": "0.004", "code": "public void leaveElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname) throws org.xml.sax.SAXException { int attIdx; outer: while (true) { switch(state) { case 2: if ((\"EncryptBeforeSigning\" == ___local) && (\"http://docs.oasis-open.org/ws-sx/ws-securitypolicy/200512\" == ___uri)) { context.popAttributes(); state = 3; return; } break; case 1: spawnHandlerFromLeaveElement((((com.sun.identity.wsfederation.jaxb.wsspolicy.impl.QNameAssertionTypeImpl) com.sun.identity.wsfederation.jaxb.wsspolicy.impl.EncryptBeforeSigningElementImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname); return; case 3: revertToParentFromLeaveElement(___uri, ___local, ___qname); return; } super.leaveElement(___uri, ___local, ___qname); break; } }", "n_tokens": 306, "n_pass": [1, 1, 1]}
{"time": "2021-02-14 08:21:40.638177", "score": "0.9999", "loss": "0.0003", "code": "public void leaveElement(java.langjava.lang.String ___local, java.lang.String ___qname) throws org.xml.sax.SAXException { int attIdx; outer: while (true) { switch(state) { case 2: if ((\"EncryptBeforeSigning\" == ___local) && (\"http://docs.oasis-open.org/ws-sx/ws-securitypolicy/200512\" == ___uri)) { context.popAttributes(); state = 3; return; } break; case 1: spawnHandlerFromLeaveElement((((com.sun.identity.wsfederation.jaxb.wsspolicy.impl.QNameAssertionTypeImpl) com.sun.identity.wsfederation.jaxb.wsspolicy.impl.EncryptBeforeSigningElementImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname); return; case 3: revertToParentFromLeaveElement(___uri, ___local, ___qname); return; } super.leaveElement(___uri, ___local, ___qname); break; } }", "n_tokens": 297, "n_pass": [93, 3, 2]}
{"time": "2021-02-14 08:21:43.339931", "score": "1.0", "loss": "0.0001", "code": "public void leaveElement(java.langjava.lang.String ______qname) throws org.xml.sax.SAXException { int attIdx; outer: while (true) { switch(state) { case 2: if ((\"EncryptBeforeSigning\" == ___local) && (\"http://docs.oasis-open.org/ws-sx/ws-securitypolicy/200512\" == ___uri)) { context.popAttributes(); state = 3; return; } break; case 1: spawnHandlerFromLeaveElement((((com.sun.identity.wsfederation.jaxb.wsspolicy.impl.QNameAssertionTypeImpl) com.sun.identity.wsfederation.jaxb.wsspolicy.impl.EncryptBeforeSigningElementImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname); return; case 3: revertToParentFromLeaveElement(___uri, ___local, ___qname); return; } super.leaveElement(___uri, ___local, ___qname); break; } }", "n_tokens": 288, "n_pass": [95, 4, 3]}
{"time": "2021-02-14 08:21:46.056398", "score": "0.9999", "loss": "0.0002", "code": "public void leaveElement(java.langjava.lang.String ______qname) throws org.xml.sax.SAXException { int attIdx; outer: while (true) { switch(state) { case 2: if ((\"EncryptBeforeSigning\" == ___local) && (\"http://-sx/ws-securitypolicy/200512\" == ___uri)) { context.popAttributes(); state = 3; return; } break; case 1: spawnHandlerFromLeaveElement((((com.sun.identity.wsfederation.jaxb.wsspolicy.impl.QNameAssertionTypeImpl) com.sun.identity.wsfederation.jaxb.wsspolicy.impl.EncryptBeforeSigningElementImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname); return; case 3: revertToParentFromLeaveElement(___uri, ___local, ___qname); return; } super.leaveElement(___uri, ___local, ___qname); break; } }", "n_tokens": 279, "n_pass": [104, 5, 4]}
{"time": "2021-02-14 08:21:48.768426", "score": "0.9999", "loss": "0.0002", "code": "public void leaveElement(java.langjava.lang.String ______qname) throws org.xml.sax.SAXException { int attIdx; outer: while (true) { switch(state) { case 2: if ((\"EncryptBeforeSigning\" == ___local) && (\"http://0512\" == ___uri)) { context.popAttributes(); state = 3; return; } break; case 1: spawnHandlerFromLeaveElement((((com.sun.identity.wsfederation.jaxb.wsspolicy.impl.QNameAssertionTypeImpl) com.sun.identity.wsfederation.jaxb.wsspolicy.impl.EncryptBeforeSigningElementImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname); return; case 3: revertToParentFromLeaveElement(___uri, ___local, ___qname); return; } super.leaveElement(___uri, ___local, ___qname); break; } }", "n_tokens": 270, "n_pass": [105, 6, 5]}
{"time": "2021-02-14 08:21:51.501368", "score": "0.9995", "loss": "0.0007", "code": "public void leaveElement(java.langjava.lang.String ______qname) throws org.xml.sax.SAXException { int attIdx; outer: while (true) { switch(state) { case 2: if ((\"EncryptBeforeSigning\" == ___local) && (\"http://0512\" == ___uri)) { context.popAttributes(); state = 3; return; } break; case 1: spawnHandlerFromLeaveElement((((wsspolicy.impl.QNameAssertionTypeImpl) com.sun.identity.wsfederation.jaxb.wsspolicy.impl.EncryptBeforeSigningElementImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname); return; case 3: revertToParentFromLeaveElement(___uri, ___local, ___qname); return; } super.leaveElement(___uri, ___local, ___qname); break; } }", "n_tokens": 260, "n_pass": [111, 7, 6]}
{"time": "2021-02-14 08:21:54.204601", "score": "0.9129", "loss": "0.0958", "code": "public void leaveElement(java.langjava.lang.String ______qname) throws org.xml.sax.SAXException { int attIdx; outer: while (true) { switch(state) { case 2: if ((\"EncryptBeforeSigning\" == ___local) && (\"http://0512\" == ___uri)) { context.popAttributes(); state = 3; return; } break; case 1: spawnHandlerFromLeaveElement((((wsspolicy.impl.QNameAssertionTypeImpl) com.sun.EncryptBeforeSigningElementImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname); return; case 3: revertToParentFromLeaveElement(___uri, ___local, ___qname); return; } super.leaveElement(___uri, ___local, ___qname); break; } }", "n_tokens": 250, "n_pass": [113, 8, 7]}
{"time": "2021-02-14 08:21:56.892671", "score": "0.9995", "loss": "0.0009", "code": "public void leaveElement(java.langjava.lang.String ______qname) throws org.xml.sax.SAXException { int attIdx; outer: while (true) { switch(state) { case 2: if ((\"EncryptBeforeSigning\" == ___local) && (\"http://0512\" == ___uri)) { context.popAttributes(); state = 3; return; } break; case 1: spawnHandlerFromLeaveElement((((wsspolicy.impl.QNameAssertionTypeImpl) com.suncontext)), 2, ___uri, ___local, ___qname); return; case 3: revertToParentFromLeaveElement(___uri, ___local, ___qname); return; } super.leaveElement(___uri, ___local, ___qname); break; } }", "n_tokens": 240, "n_pass": [114, 9, 8]}
{"time": "2021-02-14 08:21:59.584892", "score": "0.9999", "loss": "0.0002", "code": "public void leaveElement(java.langjava.lang.String ______qname) throws org.xml.sax.SAXException { int attIdx; outer: while (true) { switch(state) { case 2: if ((\"EncryptBeforeSigning\" == ___local) && (\"http://0512\" == ___uri)) { context.popAttributes(); state = 3; return; } break; case 1: spawnHandlerFromLeaveElement((((wsspolicy.impl.QNameAssertionTypeImpl) com.suncontext)), 2, _____qname); return; case 3: revertToParentFromLeaveElement(___uri, ___local, ___qname); return; } super.leaveElement(___uri, ___local, ___qname); break; } }", "n_tokens": 230, "n_pass": [116, 10, 9]}
{"time": "2021-02-14 08:22:02.274531", "score": "0.9971", "loss": "0.0041", "code": "public void leaveElement(java.langjava.lang.String ______qname) throws org.xml.sax.SAXException { int attIdx; outer: while (true) { switch(state) { case 2: if ((\"EncryptBeforeSigning\" == ___local) && (\"http://0512\" == ___uri)) { context.popAttributes(); state = 3; return; } break; case 1: spawnHandlerFromLeaveElement((((wsspolicy.impl.QNameAssertionTypeImpl) com.suncontext)), 2, _____qname); return; case 3: revertToParentFromLeaveElement(_____qname); return; } super.leaveElement(___uri, ___local, ___qname); break; } }", "n_tokens": 220, "n_pass": [119, 11, 10]}
{"time": "2021-02-14 08:22:04.981414", "score": "0.9998", "loss": "0.0004", "code": "public void leaveElement(java.langjava.lang.String ______qname) throws org.xml.sax.SAXException { int attIdx; outer: while (true) { switch(state) { case 2: if ((\"EncryptBeforeSigning\" == ___local) && (\"http://0512\" == ___uri)) { context.popAttributes(); state = 3; return; } break; case 1: spawnHandlerFromLeaveElement((((wsspolicy.impl.QNameAssertionTypeImpl) com.suncontext)), 2, _____qname); return; case 3: revertToParentFromLeaveElement(_____qname); return; } super.leaveElement(___uri,qname); break; } }", "n_tokens": 210, "n_pass": [122, 12, 11]}
{"time": "2021-02-14 08:22:08.516134", "score": "0.9998", "loss": "0.0004", "code": "public void leaveElement(java.langjava.lang.String __qname) throws org.xml.sax.SAXException { int attIdx; outer: while (true) { switch(state) { case 2: if ((\"EncryptBeforeSigning\" == ___local) && (\"http://0512\" == ___uri)) { context.popAttributes(); state = 3; return; } break; case 1: spawnHandlerFromLeaveElement((((wsspolicy.impl.QNameAssertionTypeImpl) com.suncontext)), 2, _____qname); return; case 3: revertToParentFromLeaveElement(_____qname); return; } super.leaveElement(___uri,qname); break; } }", "n_tokens": 206, "n_pass": [195, 13, 12]}
{"time": "2021-02-14 08:22:11.214464", "score": "0.9998", "loss": "0.0004", "code": "public void leaveElement(java.langjava.lang.String __qname) throws org.SAXException { int attIdx; outer: while (true) { switch(state) { case 2: if ((\"EncryptBeforeSigning\" == ___local) && (\"http://0512\" == ___uri)) { context.popAttributes(); state = 3; return; } break; case 1: spawnHandlerFromLeaveElement((((wsspolicy.impl.QNameAssertionTypeImpl) com.suncontext)), 2, _____qname); return; case 3: revertToParentFromLeaveElement(_____qname); return; } super.leaveElement(___uri,qname); break; } }", "n_tokens": 202, "n_pass": [198, 14, 13]}
{"time": "2021-02-14 08:22:13.888370", "score": "0.9998", "loss": "0.0003", "code": "public void leaveElement(java.langjava.lang.String __qname) throws org.SAXException {  outer: while (true) { switch(state) { case 2: if ((\"EncryptBeforeSigning\" == ___local) && (\"http://0512\" == ___uri)) { context.popAttributes(); state = 3; return; } break; case 1: spawnHandlerFromLeaveElement((((wsspolicy.impl.QNameAssertionTypeImpl) com.suncontext)), 2, _____qname); return; case 3: revertToParentFromLeaveElement(_____qname); return; } super.leaveElement(___uri,qname); break; } }", "n_tokens": 198, "n_pass": [200, 15, 14]}
{"time": "2021-02-14 08:22:16.580531", "score": "0.9999", "loss": "0.0002", "code": "public void leaveElement(java.langjava.lang.String __qname) throws org.SAXException {  outer: while (true) { switch(state) { case 2: if ((\"EncryptBeforeSigning\" == ___local) && (\"http://0512\" == ___uri)) { context.state = 3; return; } break; case 1: spawnHandlerFromLeaveElement((((wsspolicy.impl.QNameAssertionTypeImpl) com.suncontext)), 2, _____qname); return; case 3: revertToParentFromLeaveElement(_____qname); return; } super.leaveElement(___uri,qname); break; } }", "n_tokens": 193, "n_pass": [215, 16, 15]}
{"time": "2021-02-14 08:22:19.259070", "score": "1.0", "loss": "0.0", "code": "public void leaveElement(java.langjava.lang.String __qname) throws org.SAXException {  outer: while (true) { switch(state) { case 2: if ((\"EncryptBeforeSigning\" == ___local) && (\"http://0512\" == ___uri)) { context.state = 3; return; } break; spawnHandlerFromLeaveElement((((wsspolicy.impl.QNameAssertionTypeImpl) com.suncontext)), 2, _____qname); return; case 3: revertToParentFromLeaveElement(_____qname); return; } super.leaveElement(___uri,qname); break; } }", "n_tokens": 188, "n_pass": [219, 17, 16]}
{"time": "2021-02-14 08:22:21.963531", "score": "1.0", "loss": "0.0", "code": "public void leaveElement(java.langjava.lang.String __qname) throws org.SAXException {  outer: while (true) { switch(state) { case 2: if ((\"EncryptBeforeSigning\" == ___local) && (\"http://0512\" == ___uri)) { context.state = 3; return; } break; spawnHandlerFromLeaveElement((((wsspolicy.impl.QNameAssertionTypeImpl) com.suncontext)), ___qname); return; case 3: revertToParentFromLeaveElement(_____qname); return; } super.leaveElement(___uri,qname); break; } }", "n_tokens": 183, "n_pass": [224, 18, 17]}
{"time": "2021-02-14 08:22:24.639177", "score": "1.0", "loss": "0.0", "code": "public void leaveElement(java.langjava.lang.String __qname) throws org.SAXException {  outer: while (true) { switch(state) { case 2: if ((\"EncryptBeforeSigning\" == ___local) && (\"http://0512\" == ___uri)) { context.state = 3; return; } break; spawnHandlerFromLeaveElement((((wsspolicy.impl.QNameAssertionTypeImpl) com.suncontext)), ___qname); return; revertToParentFromLeaveElement(_____qname); return; } super.leaveElement(___uri,qname); break; } }", "n_tokens": 178, "n_pass": [227, 19, 18]}
{"time": "2021-02-14 08:22:27.306442", "score": "0.9995", "loss": "0.0007", "code": "public void leaveElement(java.langjava.lang.String __qname) throws org.SAXException {  outer: while (true) { switch(state) { case 2: if ((\"EncryptBeforeSigning\" == ___local) && (\"http://0512\" == ___uri)) { context.state = 3; return; } break; spawnHandlerFromLeaveElement((((wsspolicy.impl.QNameAssertionTypeImpl) com.suncontext)), ___qname); return; revertToParentFromLeaveElement(_____qname); return; } super.leaveElement(qname); break; } }", "n_tokens": 173, "n_pass": [232, 20, 19]}
{"time": "2021-02-14 08:22:30.544723", "score": "0.9995", "loss": "0.0007", "code": "public void leaveElement(java.langjava.lang.String __qname) throws org.SAXException {  outer: while (true) { switch(state) { case 2: if ((\"EncryptBeforeSigning\" == ___local) && (\"http://0512\" == ___uri)) { context.state = 3; return; } break; spawnHandlerFromLeaveElement((((wsspolicy.impl.QNameAssertionTypeImpl) com.suncontext)), ___qname); return; revertToParentFromLeaveElement(_____qname); return; } super.leaveElement(qname); } }", "n_tokens": 170, "n_pass": [343, 21, 20]}
{"time": "2021-02-14 08:22:33.211961", "score": "0.9995", "loss": "0.0007", "code": "void leaveElement(java.langjava.lang.String __qname) throws org.SAXException {  outer: while (true) { switch(state) { case 2: if ((\"EncryptBeforeSigning\" == ___local) && (\"http://0512\" == ___uri)) { context.state = 3; return; } break; spawnHandlerFromLeaveElement((((wsspolicy.impl.QNameAssertionTypeImpl) com.suncontext)), ___qname); return; revertToParentFromLeaveElement(_____qname); return; } super.leaveElement(qname); } }", "n_tokens": 168, "n_pass": [345, 22, 21]}
{"time": "2021-02-14 08:22:36.297341", "score": "0.9995", "loss": "0.0007", "code": "void leaveElement(langjava.lang.String __qname) throws org.SAXException {  outer: while (true) { switch(state) { case 2: if ((\"EncryptBeforeSigning\" == ___local) && (\"http://0512\" == ___uri)) { context.state = 3; return; } break; spawnHandlerFromLeaveElement((((wsspolicy.impl.QNameAssertionTypeImpl) com.suncontext)), ___qname); return; revertToParentFromLeaveElement(_____qname); return; } super.leaveElement(qname); } }", "n_tokens": 166, "n_pass": [348, 23, 22]}
{"time": "2021-02-14 08:22:38.965350", "score": "0.9995", "loss": "0.0007", "code": "void leaveElement(langjava.String __qname) throws org.SAXException {  outer: while (true) { switch(state) { case 2: if ((\"EncryptBeforeSigning\" == ___local) && (\"http://0512\" == ___uri)) { context.state = 3; return; } break; spawnHandlerFromLeaveElement((((wsspolicy.impl.QNameAssertionTypeImpl) com.suncontext)), ___qname); return; revertToParentFromLeaveElement(_____qname); return; } super.leaveElement(qname); } }", "n_tokens": 164, "n_pass": [350, 24, 23]}
{"time": "2021-02-14 08:22:41.633091", "score": "0.9994", "loss": "0.0007", "code": "void leaveElement(langjava __qname) throws org.SAXException {  outer: while (true) { switch(state) { case 2: if ((\"EncryptBeforeSigning\" == ___local) && (\"http://0512\" == ___uri)) { context.state = 3; return; } break; spawnHandlerFromLeaveElement((((wsspolicy.impl.QNameAssertionTypeImpl) com.suncontext)), ___qname); return; revertToParentFromLeaveElement(_____qname); return; } super.leaveElement(qname); } }", "n_tokens": 162, "n_pass": [351, 25, 24]}
{"time": "2021-02-14 08:22:44.315870", "score": "0.9995", "loss": "0.0007", "code": "void leaveElement(langjava _) throws org.SAXException {  outer: while (true) { switch(state) { case 2: if ((\"EncryptBeforeSigning\" == ___local) && (\"http://0512\" == ___uri)) { context.state = 3; return; } break; spawnHandlerFromLeaveElement((((wsspolicy.impl.QNameAssertionTypeImpl) com.suncontext)), ___qname); return; revertToParentFromLeaveElement(_____qname); return; } super.leaveElement(qname); } }", "n_tokens": 160, "n_pass": [353, 26, 25]}
{"time": "2021-02-14 08:22:47.011719", "score": "0.9994", "loss": "0.0008", "code": "void leaveElement(langjava _) throws SAXException {  outer: while (true) { switch(state) { case 2: if ((\"EncryptBeforeSigning\" == ___local) && (\"http://0512\" == ___uri)) { context.state = 3; return; } break; spawnHandlerFromLeaveElement((((wsspolicy.impl.QNameAssertionTypeImpl) com.suncontext)), ___qname); return; revertToParentFromLeaveElement(_____qname); return; } super.leaveElement(qname); } }", "n_tokens": 158, "n_pass": [356, 27, 26]}
{"time": "2021-02-14 08:22:49.695195", "score": "0.9994", "loss": "0.0008", "code": "void leaveElement(langjava _) throws SAXException {  outer: while (true) { switch(state) { case 2: if ((\"EncryptBeforeSigning\" ==__local) && (\"http://0512\" == ___uri)) { context.state = 3; return; } break; spawnHandlerFromLeaveElement((((wsspolicy.impl.QNameAssertionTypeImpl) com.suncontext)), ___qname); return; revertToParentFromLeaveElement(_____qname); return; } super.leaveElement(qname); } }", "n_tokens": 156, "n_pass": [376, 28, 27]}
{"time": "2021-02-14 08:22:52.363485", "score": "0.9994", "loss": "0.0008", "code": "void leaveElement(langjava _) throws SAXException {  outer: while (true) { switch(state) { case 2: if ((\"EncryptBeforeSigning\" ==local) && (\"http://0512\" == ___uri)) { context.state = 3; return; } break; spawnHandlerFromLeaveElement((((wsspolicy.impl.QNameAssertionTypeImpl) com.suncontext)), ___qname); return; revertToParentFromLeaveElement(_____qname); return; } super.leaveElement(qname); } }", "n_tokens": 154, "n_pass": [377, 29, 28]}
{"time": "2021-02-14 08:22:55.052507", "score": "0.9995", "loss": "0.0007", "code": "void leaveElement(langjava _) throws SAXException {  outer: while (true) { switch(state) { case 2: if ((\"EncryptBeforeSigning\" ==local)& (\"http://0512\" == ___uri)) { context.state = 3; return; } break; spawnHandlerFromLeaveElement((((wsspolicy.impl.QNameAssertionTypeImpl) com.suncontext)), ___qname); return; revertToParentFromLeaveElement(_____qname); return; } super.leaveElement(qname); } }", "n_tokens": 152, "n_pass": [379, 30, 29]}
{"time": "2021-02-14 08:22:57.733113", "score": "0.9995", "loss": "0.0007", "code": "void leaveElement(langjava _) throws SAXException {  outer: while (true) { switch(state) { case 2: if ((\"EncryptBeforeSigning\" ==local)& (\"//0512\" == ___uri)) { context.state = 3; return; } break; spawnHandlerFromLeaveElement((((wsspolicy.impl.QNameAssertionTypeImpl) com.suncontext)), ___qname); return; revertToParentFromLeaveElement(_____qname); return; } super.leaveElement(qname); } }", "n_tokens": 150, "n_pass": [382, 31, 30]}
{"time": "2021-02-14 08:23:00.400636", "score": "0.9995", "loss": "0.0007", "code": "void leaveElement(langjava _) throws SAXException {  outer: while (true) { switch(state) { case 2: if ((\"EncryptBeforeSigning\" ==local)& (\"0512\" == ___uri)) { context.state = 3; return; } break; spawnHandlerFromLeaveElement((((wsspolicy.impl.QNameAssertionTypeImpl) com.suncontext)), ___qname); return; revertToParentFromLeaveElement(_____qname); return; } super.leaveElement(qname); } }", "n_tokens": 148, "n_pass": [383, 32, 31]}
{"time": "2021-02-14 08:23:03.076729", "score": "0.9995", "loss": "0.0007", "code": "void leaveElement(langjava _) throws SAXException {  outer: while (true) { switch(state) { case 2: if ((\"EncryptBeforeSigning\" ==local)& (\"12\" == ___uri)) { context.state = 3; return; } break; spawnHandlerFromLeaveElement((((wsspolicy.impl.QNameAssertionTypeImpl) com.suncontext)), ___qname); return; revertToParentFromLeaveElement(_____qname); return; } super.leaveElement(qname); } }", "n_tokens": 146, "n_pass": [384, 33, 32]}
{"time": "2021-02-14 08:23:05.738474", "score": "0.9995", "loss": "0.0007", "code": "void leaveElement(langjava _) throws SAXException {  outer: while (true) { switch(state) { case 2: if ((\"EncryptBeforeSigning\" ==local)& (\"\" == ___uri)) { context.state = 3; return; } break; spawnHandlerFromLeaveElement((((wsspolicy.impl.QNameAssertionTypeImpl) com.suncontext)), ___qname); return; revertToParentFromLeaveElement(_____qname); return; } super.leaveElement(qname); } }", "n_tokens": 144, "n_pass": [385, 34, 33]}
{"time": "2021-02-14 08:23:08.428688", "score": "0.9995", "loss": "0.0007", "code": "void leaveElement(langjava _) throws SAXException {  outer: while (true) { switch(state) { case 2: if ((\"EncryptBeforeSigning\" ==local)& (\"\" ==_uri)) { context.state = 3; return; } break; spawnHandlerFromLeaveElement((((wsspolicy.impl.QNameAssertionTypeImpl) com.suncontext)), ___qname); return; revertToParentFromLeaveElement(_____qname); return; } super.leaveElement(qname); } }", "n_tokens": 141, "n_pass": [388, 35, 34]}
{"time": "2021-02-14 08:23:11.118588", "score": "0.9995", "loss": "0.0007", "code": "void leaveElement(langjava _) throws SAXException {  outer: while (true) { switch(state) { case 2: if ((\"EncryptBeforeSigning\" ==local)& (\"\" ==_uri)) {state = 3; return; } break; spawnHandlerFromLeaveElement((((wsspolicy.impl.QNameAssertionTypeImpl) com.suncontext)), ___qname); return; revertToParentFromLeaveElement(_____qname); return; } super.leaveElement(qname); } }", "n_tokens": 138, "n_pass": [391, 36, 35]}
{"time": "2021-02-14 08:23:13.782175", "score": "0.9995", "loss": "0.0007", "code": "void leaveElement(langjava _) throws SAXException {  outer: while (true) { switch(state) { case 2: if ((\"EncryptBeforeSigning\" ==local)& (\"\" ==_uri)) { 3; return; } break; spawnHandlerFromLeaveElement((((wsspolicy.impl.QNameAssertionTypeImpl) com.suncontext)), ___qname); return; revertToParentFromLeaveElement(_____qname); return; } super.leaveElement(qname); } }", "n_tokens": 135, "n_pass": [392, 37, 36]}
{"time": "2021-02-14 08:23:16.471646", "score": "0.9995", "loss": "0.0007", "code": "void leaveElement(langjava _) throws SAXException {  outer: while (true) { switch(state) { case 2: if ((\"EncryptBeforeSigning\" ==local)& (\"\" ==_uri)) { return; } break; spawnHandlerFromLeaveElement((((wsspolicy.impl.QNameAssertionTypeImpl) com.suncontext)), ___qname); return; revertToParentFromLeaveElement(_____qname); return; } super.leaveElement(qname); } }", "n_tokens": 132, "n_pass": [393, 38, 37]}
{"time": "2021-02-14 08:23:19.138002", "score": "0.9995", "loss": "0.0007", "code": "void leaveElement(langjava _) throws SAXException {  outer: while (true) { switch(state) { case 2: if ((\"EncryptBeforeSigning\" ==local)& (\"\" ==_uri)) { } break; spawnHandlerFromLeaveElement((((wsspolicy.impl.QNameAssertionTypeImpl) com.suncontext)), ___qname); return; revertToParentFromLeaveElement(_____qname); return; } super.leaveElement(qname); } }", "n_tokens": 129, "n_pass": [394, 39, 38]}
{"time": "2021-02-14 08:23:21.810097", "score": "0.9995", "loss": "0.0007", "code": "void leaveElement(langjava _) throws SAXException {  outer: while (true) { switch(state) { case 2: if ((\"EncryptBeforeSigning\" ==local)& (\"\" ==_uri)) { } spawnHandlerFromLeaveElement((((wsspolicy.impl.QNameAssertionTypeImpl) com.suncontext)), ___qname); return; revertToParentFromLeaveElement(_____qname); return; } super.leaveElement(qname); } }", "n_tokens": 126, "n_pass": [396, 40, 39]}
{"time": "2021-02-14 08:23:24.483008", "score": "0.9995", "loss": "0.0007", "code": "void leaveElement(langjava _) throws SAXException {  outer: while (true) { switch(state) { case 2: if ((\"EncryptBeforeSigning\" ==local)& (\"\" ==_uri)) { } spawnHandlerFromLeaveElement((((wsspolicyQNameAssertionTypeImpl) com.suncontext)), ___qname); return; revertToParentFromLeaveElement(_____qname); return; } super.leaveElement(qname); } }", "n_tokens": 123, "n_pass": [399, 41, 40]}
{"time": "2021-02-14 08:23:27.138868", "score": "0.9995", "loss": "0.0007", "code": "void leaveElement(langjava _) throws SAXException {  outer: while (true) { switch(state) { case 2: if ((\"EncryptBeforeSigning\" ==local)& (\"\" ==_uri)) { } spawnHandlerFromLeaveElement((((wsspolicyQNameAssertionTypeImpl) context)), ___qname); return; revertToParentFromLeaveElement(_____qname); return; } super.leaveElement(qname); } }", "n_tokens": 120, "n_pass": [401, 42, 41]}
{"time": "2021-02-14 08:23:29.801773", "score": "0.9995", "loss": "0.0006", "code": "void leaveElement(langjava _) throws SAXException {  outer: while (true) { switch(state) { case 2: if ((\"EncryptBeforeSigning\" ==local)& (\"\" ==_uri)) { } spawnHandlerFromLeaveElement((((wsspolicyQNameAssertionTypeImpl) context)), _); return; revertToParentFromLeaveElement(_____qname); return; } super.leaveElement(qname); } }", "n_tokens": 117, "n_pass": [404, 43, 42]}
{"time": "2021-02-14 08:23:32.485672", "score": "1.0", "loss": "0.0", "code": "void leaveElement(langjava _) throws SAXException {  outer: while (true) { switch(state) { case 2: if ((\"EncryptBeforeSigning\" ==local)& (\"\" ==_uri)) { } spawnHandlerFromLeaveElement((((wsspolicyQNameAssertionTypeImpl) context)), _); revertToParentFromLeaveElement(_____qname); return; } super.leaveElement(qname); } }", "n_tokens": 114, "n_pass": [406, 44, 43]}
{"time": "2021-02-14 08:23:35.151142", "score": "1.0", "loss": "0.0", "code": "void leaveElement(langjava _) throws SAXException {  outer: while (true) { switch(state) { case 2: if ((\"EncryptBeforeSigning\" ==local)& (\"\" ==_uri)) { } spawnHandlerFromLeaveElement((((wsspolicyQNameAssertionTypeImpl) context)), _); revertToParentFromLeaveElement(__qname); return; } super.leaveElement(qname); } }", "n_tokens": 111, "n_pass": [408, 45, 44]}
{"time": "2021-02-14 08:23:37.807332", "score": "1.0", "loss": "0.0", "code": "void leaveElement(langjava _) throws SAXException {  outer: while (true) { switch(state) { case 2: if ((\"EncryptBeforeSigning\" ==local)& (\"\" ==_uri)) { } spawnHandlerFromLeaveElement((((wsspolicyQNameAssertionTypeImpl) context)), _); revertToParentFromLeaveElement(__qname); } super.leaveElement(qname); } }", "n_tokens": 108, "n_pass": [410, 46, 45]}
{"time": "2021-02-14 08:23:40.468491", "score": "1.0", "loss": "0.0", "code": "void leaveElement(langjava _) throws SAXException {  outer: while (true) { switch(state) { case 2: if ((\"EncryptBeforeSigning\" ==local)& (\"\" ==_uri)) { } spawnHandlerFromLeaveElement((((wsspolicyQNameAssertionTypeImpl) context)), _); revertToParentFromLeaveElement(__qname); }leaveElement(qname); } }", "n_tokens": 105, "n_pass": [412, 47, 46]}
{"time": "2021-02-14 08:23:43.569619", "score": "1.0", "loss": "0.0", "code": "void leaveElement(langjava _) throws SAXException {  outer: while (true) { switch(state) { case 2: if ((\"EncryptBeforeSigning\" ==local)& (\"\" ==_uri)) { } spawnHandlerFromLeaveElement((((wsspolicyQNameAssertionTypeImpl) context))); revertToParentFromLeaveElement(__qname); }leaveElement(qname); } }", "n_tokens": 102, "n_pass": [453, 48, 47]}
{"time": "2021-02-14 08:23:55.751662", "score": "1.0", "loss": "0.0", "code": "void leaveElement(langjava _) throws SAXException {  outer: while (true) { switch(state) { case 2: if ((\"EncryptBeforeSigning\" ==local)& (\"\" ==_uri)) { } spawnHandlerFromLeaveElement((((wsspolicyQNameAssertionTypeImpl) context))); revertToParentFromLeaveElement(qname); }leaveElement(qname); } }", "n_tokens": 100, "n_pass": [592, 49, 48]}
{"time": "2021-02-14 08:23:59.244248", "score": "1.0", "loss": "0.0", "code": "void leaveElement(java _) throws SAXException {  outer: while (true) { switch(state) { case 2: if ((\"EncryptBeforeSigning\" ==local)& (\"\" ==_uri)) { } spawnHandlerFromLeaveElement((((wsspolicyQNameAssertionTypeImpl) context))); revertToParentFromLeaveElement(qname); }leaveElement(qname); } }", "n_tokens": 99, "n_pass": [604, 50, 49]}
{"time": "2021-02-14 08:24:01.901364", "score": "1.0", "loss": "0.0", "code": "void leaveElement(java _)throws SAXException {  outer: while (true) { switch(state) { case 2: if ((\"EncryptBeforeSigning\" ==local)& (\"\" ==_uri)) { } spawnHandlerFromLeaveElement((((wsspolicyQNameAssertionTypeImpl) context))); revertToParentFromLeaveElement(qname); }leaveElement(qname); } }", "n_tokens": 98, "n_pass": [609, 51, 50]}
{"time": "2021-02-14 08:24:04.564713", "score": "1.0", "loss": "0.0", "code": "void leaveElement(java _)throws SAXException{  outer: while (true) { switch(state) { case 2: if ((\"EncryptBeforeSigning\" ==local)& (\"\" ==_uri)) { } spawnHandlerFromLeaveElement((((wsspolicyQNameAssertionTypeImpl) context))); revertToParentFromLeaveElement(qname); }leaveElement(qname); } }", "n_tokens": 97, "n_pass": [613, 52, 51]}
{"time": "2021-02-14 08:24:07.252729", "score": "1.0", "loss": "0.0", "code": "void leaveElement(java _)throws SAXException{ outer: while (true) { switch(state) { case 2: if ((\"EncryptBeforeSigning\" ==local)& (\"\" ==_uri)) { } spawnHandlerFromLeaveElement((((wsspolicyQNameAssertionTypeImpl) context))); revertToParentFromLeaveElement(qname); }leaveElement(qname); } }", "n_tokens": 96, "n_pass": [615, 53, 52]}
{"time": "2021-02-14 08:24:09.900471", "score": "1.0", "loss": "0.0", "code": "void leaveElement(java _)throws SAXException{outer: while (true) { switch(state) { case 2: if ((\"EncryptBeforeSigning\" ==local)& (\"\" ==_uri)) { } spawnHandlerFromLeaveElement((((wsspolicyQNameAssertionTypeImpl) context))); revertToParentFromLeaveElement(qname); }leaveElement(qname); } }", "n_tokens": 95, "n_pass": [616, 54, 53]}
{"time": "2021-02-14 08:24:12.550738", "score": "1.0", "loss": "0.0", "code": "void leaveElement(java _)throws SAXException{outer:while (true) { switch(state) { case 2: if ((\"EncryptBeforeSigning\" ==local)& (\"\" ==_uri)) { } spawnHandlerFromLeaveElement((((wsspolicyQNameAssertionTypeImpl) context))); revertToParentFromLeaveElement(qname); }leaveElement(qname); } }", "n_tokens": 94, "n_pass": [619, 55, 54]}
{"time": "2021-02-14 08:24:15.198710", "score": "1.0", "loss": "0.0", "code": "void leaveElement(java _)throws SAXException{outer:while(true) { switch(state) { case 2: if ((\"EncryptBeforeSigning\" ==local)& (\"\" ==_uri)) { } spawnHandlerFromLeaveElement((((wsspolicyQNameAssertionTypeImpl) context))); revertToParentFromLeaveElement(qname); }leaveElement(qname); } }", "n_tokens": 93, "n_pass": [621, 56, 55]}
{"time": "2021-02-14 08:24:17.872229", "score": "1.0", "loss": "0.0", "code": "void leaveElement(java _)throws SAXException{outer:while(true){ switch(state) { case 2: if ((\"EncryptBeforeSigning\" ==local)& (\"\" ==_uri)) { } spawnHandlerFromLeaveElement((((wsspolicyQNameAssertionTypeImpl) context))); revertToParentFromLeaveElement(qname); }leaveElement(qname); } }", "n_tokens": 92, "n_pass": [625, 57, 56]}
{"time": "2021-02-14 08:24:20.556923", "score": "1.0", "loss": "0.0", "code": "void leaveElement(java _)throws SAXException{outer:while(true){switch(state) { case 2: if ((\"EncryptBeforeSigning\" ==local)& (\"\" ==_uri)) { } spawnHandlerFromLeaveElement((((wsspolicyQNameAssertionTypeImpl) context))); revertToParentFromLeaveElement(qname); }leaveElement(qname); } }", "n_tokens": 91, "n_pass": [627, 58, 57]}
{"time": "2021-02-14 08:24:23.208549", "score": "1.0", "loss": "0.0", "code": "void leaveElement(java _)throws SAXException{outer:while(true){switch(state){ case 2: if ((\"EncryptBeforeSigning\" ==local)& (\"\" ==_uri)) { } spawnHandlerFromLeaveElement((((wsspolicyQNameAssertionTypeImpl) context))); revertToParentFromLeaveElement(qname); }leaveElement(qname); } }", "n_tokens": 90, "n_pass": [632, 59, 58]}
{"time": "2021-02-14 08:24:25.859878", "score": "1.0", "loss": "0.0", "code": "void leaveElement(java _)throws SAXException{outer:while(true){switch(state){case 2: if ((\"EncryptBeforeSigning\" ==local)& (\"\" ==_uri)) { } spawnHandlerFromLeaveElement((((wsspolicyQNameAssertionTypeImpl) context))); revertToParentFromLeaveElement(qname); }leaveElement(qname); } }", "n_tokens": 89, "n_pass": [634, 60, 59]}
{"time": "2021-02-14 08:24:28.511346", "score": "1.0", "loss": "0.0", "code": "void leaveElement(java _)throws SAXException{outer:while(true){switch(state){case 2:if ((\"EncryptBeforeSigning\" ==local)& (\"\" ==_uri)) { } spawnHandlerFromLeaveElement((((wsspolicyQNameAssertionTypeImpl) context))); revertToParentFromLeaveElement(qname); }leaveElement(qname); } }", "n_tokens": 88, "n_pass": [639, 61, 60]}
{"time": "2021-02-14 08:24:31.165076", "score": "1.0", "loss": "0.0", "code": "void leaveElement(java _)throws SAXException{outer:while(true){switch(state){case 2:if((\"EncryptBeforeSigning\" ==local)& (\"\" ==_uri)) { } spawnHandlerFromLeaveElement((((wsspolicyQNameAssertionTypeImpl) context))); revertToParentFromLeaveElement(qname); }leaveElement(qname); } }", "n_tokens": 87, "n_pass": [641, 62, 61]}
{"time": "2021-02-14 08:24:33.812996", "score": "1.0", "loss": "0.0", "code": "void leaveElement(java _)throws SAXException{outer:while(true){switch(state){case 2:if((\"\" ==local)& (\"\" ==_uri)) { } spawnHandlerFromLeaveElement((((wsspolicyQNameAssertionTypeImpl) context))); revertToParentFromLeaveElement(qname); }leaveElement(qname); } }", "n_tokens": 86, "n_pass": [645, 63, 62]}
{"time": "2021-02-14 08:24:36.468477", "score": "1.0", "loss": "0.0", "code": "void leaveElement(java _)throws SAXException{outer:while(true){switch(state){case 2:if((\"\"==local)& (\"\" ==_uri)) { } spawnHandlerFromLeaveElement((((wsspolicyQNameAssertionTypeImpl) context))); revertToParentFromLeaveElement(qname); }leaveElement(qname); } }", "n_tokens": 85, "n_pass": [647, 64, 63]}
{"time": "2021-02-14 08:24:39.950478", "score": "1.0", "loss": "0.0", "code": "void leaveElement(java _)throws SAXException{outer:while(true){switch(state){case 2:if((\"\"==local)&(\"\" ==_uri)) { } spawnHandlerFromLeaveElement((((wsspolicyQNameAssertionTypeImpl) context))); revertToParentFromLeaveElement(qname); }leaveElement(qname); } }", "n_tokens": 84, "n_pass": [653, 65, 64]}
{"time": "2021-02-14 08:24:42.630850", "score": "1.0", "loss": "0.0", "code": "void leaveElement(java _)throws SAXException{outer:while(true){switch(state){case 2:if((\"\"==local)&(\"\"==_uri)) { } spawnHandlerFromLeaveElement((((wsspolicyQNameAssertionTypeImpl) context))); revertToParentFromLeaveElement(qname); }leaveElement(qname); } }", "n_tokens": 83, "n_pass": [657, 66, 65]}
{"time": "2021-02-14 08:24:46.105500", "score": "1.0", "loss": "0.0", "code": "void leaveElement(java _)throws SAXException{outer:while(true){switch(state){case 2:if((\"\"==local)&(\"\"==uri)) { } spawnHandlerFromLeaveElement((((wsspolicyQNameAssertionTypeImpl) context))); revertToParentFromLeaveElement(qname); }leaveElement(qname); } }", "n_tokens": 82, "n_pass": [660, 67, 66]}
{"time": "2021-02-14 08:24:48.774025", "score": "1.0", "loss": "0.0", "code": "void leaveElement(java _)throws SAXException{outer:while(true){switch(state){case 2:if((\"\"==local)&(\"\"==uri)){ } spawnHandlerFromLeaveElement((((wsspolicyQNameAssertionTypeImpl) context))); revertToParentFromLeaveElement(qname); }leaveElement(qname); } }", "n_tokens": 81, "n_pass": [664, 68, 67]}
{"time": "2021-02-14 08:24:51.439174", "score": "1.0", "loss": "0.0", "code": "void leaveElement(java _)throws SAXException{outer:while(true){switch(state){case 2:if((\"\"==local)&(\"\"==uri)){} spawnHandlerFromLeaveElement((((wsspolicyQNameAssertionTypeImpl) context))); revertToParentFromLeaveElement(qname); }leaveElement(qname); } }", "n_tokens": 80, "n_pass": [666, 69, 68]}
{"time": "2021-02-14 08:24:54.088154", "score": "1.0", "loss": "0.0", "code": "void leaveElement(java _)throws SAXException{outer:while(true){switch(state){case 2:if((\"\"==local)&(\"\"==uri)){}spawnHandlerFromLeaveElement((((wsspolicyQNameAssertionTypeImpl) context))); revertToParentFromLeaveElement(qname); }leaveElement(qname); } }", "n_tokens": 79, "n_pass": [668, 70, 69]}
{"time": "2021-02-14 08:24:56.734511", "score": "1.0", "loss": "0.0", "code": "void leaveElement(java _)throws SAXException{outer:while(true){switch(state){case 2:if((\"\"==local)&(\"\"==uri)){}((((wsspolicyQNameAssertionTypeImpl) context))); revertToParentFromLeaveElement(qname); }leaveElement(qname); } }", "n_tokens": 78, "n_pass": [669, 71, 70]}
{"time": "2021-02-14 08:25:04.905786", "score": "1.0", "loss": "0.0", "code": "void leaveElement(java _)throws SAXException{outer:while(true){switch(state){case 2:if((\"\"==local)&(\"\"==uri)){}((((wsspolicyQNameAssertionTypeImpl) context)));revertToParentFromLeaveElement(qname); }leaveElement(qname); } }", "n_tokens": 77, "n_pass": [765, 72, 71]}
{"time": "2021-02-14 08:25:10.210547", "score": "0.9998", "loss": "0.0003", "code": "void leaveElement(java _)throws SAXException{outer:while(true){switch(state){case 2:if((\"\"==local)&(\"\"==uri)){}((((wsspolicyQNameAssertionTypeImpl) context)));revertToParentFromLeaveElement(); }leaveElement(qname); } }", "n_tokens": 76, "n_pass": [768, 74, 72]}
{"time": "2021-02-14 08:25:12.883513", "score": "0.9998", "loss": "0.0003", "code": "void leaveElement(java _)throws SAXException{outer:while(true){switch(state){case 2:if((\"\"==local)&(\"\"==uri)){}((((wsspolicyQNameAssertionTypeImpl) context)));revertToParentFromLeaveElement();}leaveElement(qname); } }", "n_tokens": 75, "n_pass": [771, 75, 73]}
{"time": "2021-02-14 08:25:15.552152", "score": "1.0", "loss": "0.0", "code": "void leaveElement(java _)throws SAXException{outer:while(true){switch(state){case 2:if((\"\"==local)&(\"\"==uri)){}((((wsspolicyQNameAssertionTypeImpl) context)));revertToParentFromLeaveElement();}(qname); } }", "n_tokens": 74, "n_pass": [773, 76, 74]}
{"time": "2021-02-14 08:25:18.197310", "score": "1.0", "loss": "0.0", "code": "void leaveElement(java _)throws SAXException{outer:while(true){switch(state){case 2:if((\"\"==local)&(\"\"==uri)){}((((wsspolicyQNameAssertionTypeImpl) context)));revertToParentFromLeaveElement();}(qname);} }", "n_tokens": 73, "n_pass": [778, 77, 75]}
{"time": "2021-02-14 08:25:20.843434", "score": "1.0", "loss": "0.0", "code": "void leaveElement(java _)throws SAXException{outer:while(true){switch(state){case 2:if((\"\"==local)&(\"\"==uri)){}((((wsspolicyQNameAssertionTypeImpl) context)));revertToParentFromLeaveElement();}(qname);}}", "n_tokens": 72, "n_pass": [780, 78, 76]}
{"time": "2021-02-14 08:25:25.989940", "score": "1.0", "loss": "0.0", "code": "void leaveElement(java _)throws SAXException{outer:while(true){switch(state){case 2:if((\"\"==local)&(\"\"==uri)){}((((QNameAssertionTypeImpl) context)));revertToParentFromLeaveElement();}(qname);}}", "n_tokens": 71, "n_pass": [834, 79, 77]}
{"time": "2021-02-14 08:25:28.637949", "score": "1.0", "loss": "0.0", "code": "void leaveElement(java _)throws SAXException{outer:while(true){switch(state){case 2:if((\"\"==local)&(\"\"==uri)){}((((QNameAssertionTypeImpl)context)));revertToParentFromLeaveElement();}(qname);}}", "n_tokens": 70, "n_pass": [837, 80, 78]}
{"time": "2021-02-14 08:25:31.286815", "score": "1.0", "loss": "0.0", "code": "void leaveElement(java _)throws SAXException{outer:while(true){switch(state){case 2:if((\"\"==local)&(\"\"==uri)){}((((QNameAssertionTypeImpl))));revertToParentFromLeaveElement();}(qname);}}", "n_tokens": 69, "n_pass": [838, 81, 79]}

Minimal simplified code:
void leaveElement(java _)throws SAXException{outer:while(true){switch(state){case 2:if((""==local)&(""==uri)){}((((QNameAssertionTypeImpl))));revertToParentFromLeaveElement();}(qname);}}

