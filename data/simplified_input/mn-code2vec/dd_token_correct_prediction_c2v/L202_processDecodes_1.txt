
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/sakaiproject__sakai/jsf/jsf-widgets/src/java/org/sakaiproject/jsf/component/FlowState_processDecodes.java
method_name = processDecodes
method_body = public void processDecodes(FacesContext context) { if (log.isDebugEnabled()) log.debug("processDecodes " + getBean()); super.processDecodes(context); }
predict, score, loss = processDecodes, 0.9999730587005615, 3.242440288886428e-05

Trace of simplified code(s):
{"time": "2021-02-14 11:19:40.001761", "score": "1.0", "loss": "0.0", "code": "public void processDecodes(FacesContext context) { if (log.isDebugEnabled()) log.debug(\"processDecodes \" + getBean()); super.processDecodes(context); }", "n_tokens": 49, "n_pass": [1, 1, 1]}
{"time": "2021-02-14 11:19:43.067056", "score": "0.9999", "loss": "0.0002", "code": "public void processDecodes() { if (log.isDebugEnabled()) log.debug(\"processDecodes \" + getBean()); super.processDecodes(context); }", "n_tokens": 46, "n_pass": [46, 2, 2]}
{"time": "2021-02-14 11:19:45.732464", "score": "1.0", "loss": "0.0001", "code": "public void processDecodes() { if (log.isDebugEnabled()) log.debug(\"processDecodes \" + getBean());processDecodes(context); }", "n_tokens": 43, "n_pass": [56, 3, 3]}
{"time": "2021-02-14 11:19:50.653825", "score": "1.0", "loss": "0.0001", "code": " void processDecodes() { if (log.isDebugEnabled()) log.debug(\"processDecodes \" + getBean());processDecodes(context); }", "n_tokens": 42, "n_pass": [103, 4, 4]}
{"time": "2021-02-14 11:19:53.303817", "score": "1.0", "loss": "0.0001", "code": "void processDecodes() { if (log.isDebugEnabled()) log.debug(\"processDecodes \" + getBean());processDecodes(context); }", "n_tokens": 41, "n_pass": [104, 5, 5]}
{"time": "2021-02-14 11:19:56.340779", "score": "1.0", "loss": "0.0001", "code": "void processDecodes(){ if (log.isDebugEnabled()) log.debug(\"processDecodes \" + getBean());processDecodes(context); }", "n_tokens": 40, "n_pass": [109, 6, 6]}
{"time": "2021-02-14 11:19:58.969492", "score": "1.0", "loss": "0.0001", "code": "void processDecodes(){if (log.isDebugEnabled()) log.debug(\"processDecodes \" + getBean());processDecodes(context); }", "n_tokens": 39, "n_pass": [111, 7, 7]}
{"time": "2021-02-14 11:20:01.614519", "score": "1.0", "loss": "0.0001", "code": "void processDecodes(){if(log.isDebugEnabled()) log.debug(\"processDecodes \" + getBean());processDecodes(context); }", "n_tokens": 38, "n_pass": [113, 8, 8]}
{"time": "2021-02-14 11:20:04.235855", "score": "1.0", "loss": "0.0001", "code": "void processDecodes(){if(isDebugEnabled()) log.debug(\"processDecodes \" + getBean());processDecodes(context); }", "n_tokens": 36, "n_pass": [115, 9, 9]}
{"time": "2021-02-14 11:20:06.866376", "score": "1.0", "loss": "0.0002", "code": "void processDecodes(){if(isDebugEnabled()) log(\"processDecodes \" + getBean());processDecodes(context); }", "n_tokens": 34, "n_pass": [119, 10, 10]}
{"time": "2021-02-14 11:20:09.492329", "score": "0.9991", "loss": "0.0043", "code": "void processDecodes(){if(isDebugEnabled()) log(\"\" + getBean());processDecodes(context); }", "n_tokens": 32, "n_pass": [121, 11, 11]}
{"time": "2021-02-14 11:20:12.935389", "score": "0.9998", "loss": "0.0009", "code": "void processDecodes(){if(isDebugEnabled())(\"\" + getBean());processDecodes(context); }", "n_tokens": 30, "n_pass": [140, 12, 12]}
{"time": "2021-02-14 11:20:18.250723", "score": "0.9998", "loss": "0.0009", "code": "void processDecodes(){if(isDebugEnabled())(\"\"+ getBean());processDecodes(context); }", "n_tokens": 29, "n_pass": [182, 13, 13]}
{"time": "2021-02-14 11:20:20.891500", "score": "0.9998", "loss": "0.0009", "code": "void processDecodes(){if(isDebugEnabled())(\"\"+getBean());processDecodes(context); }", "n_tokens": 28, "n_pass": [184, 14, 14]}
{"time": "2021-02-14 11:20:26.130142", "score": "0.965", "loss": "0.2268", "code": "void processDecodes(){if(isDebugEnabled())(\"\"+getBean());processDecodes(); }", "n_tokens": 27, "n_pass": [192, 16, 15]}
{"time": "2021-02-14 11:20:28.779007", "score": "0.965", "loss": "0.2268", "code": "void processDecodes(){if(isDebugEnabled())(\"\"+getBean());processDecodes();}", "n_tokens": 26, "n_pass": [195, 17, 16]}

Minimal simplified code:
void processDecodes(){if(isDebugEnabled())(""+getBean());processDecodes();}

