
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/novoda__merlin/demo/src/main/java/com/novoda/merlin/demo/presentation/RxJavaDemoActivity_onResume.java
method_name = onResume
method_body = @Override protected void onResume() { super.onResume(); Subscription merlinSubscription = MerlinObservable.from(this).distinctUntilChanged().subscribe(new NetworkAction(networkStatusDisplayer, viewToAttachDisplayerTo)); subscriptions.add(merlinSubscription); }
predict, score, loss = onResume, 0.9999982118606567, 1.7881377516459906e-06

Trace of simplified code(s):
{"time": "2021-02-14 20:57:55.764103", "score": "1.0", "loss": "0.0", "code": "@Override protected void onResume() { super.onResume(); Subscription merlinSubscription = MerlinObservable.from(this).distinctUntilChanged().subscribe(new NetworkAction(networkStatusDisplayer, viewToAttachDisplayerTo)); subscriptions.add(merlinSubscription); }", "n_tokens": 60, "n_pass": [1, 1, 1]}
{"time": "2021-02-14 20:57:58.850505", "score": "1.0", "loss": "0.0", "code": "@Override protected void onResume() { super.onResume(); Subscriptionfrom(this).distinctUntilChanged().subscribe(new NetworkAction(networkStatusDisplayer, viewToAttachDisplayerTo)); subscriptions.add(merlinSubscription); }", "n_tokens": 53, "n_pass": [23, 2, 2]}
{"time": "2021-02-14 20:58:01.490690", "score": "1.0", "loss": "0.0", "code": "@Override protected void onResume() { super.onResume(); Subscription.subscribe(new NetworkAction(networkStatusDisplayer, viewToAttachDisplayerTo)); subscriptions.add(merlinSubscription); }", "n_tokens": 45, "n_pass": [24, 3, 3]}
{"time": "2021-02-14 20:58:07.188734", "score": "1.0", "loss": "0.0", "code": "protected void onResume() { super.onResume(); Subscription.subscribe(new NetworkAction(networkStatusDisplayer, viewToAttachDisplayerTo)); subscriptions.add(merlinSubscription); }", "n_tokens": 42, "n_pass": [49, 5, 4]}
{"time": "2021-02-14 20:58:10.614405", "score": "1.0", "loss": "0.0", "code": " void onResume() { super.onResume(); Subscription.subscribe(new NetworkAction(networkStatusDisplayer, viewToAttachDisplayerTo)); subscriptions.add(merlinSubscription); }", "n_tokens": 41, "n_pass": [83, 6, 5]}
{"time": "2021-02-14 20:58:13.250932", "score": "1.0", "loss": "0.0", "code": "void onResume() { super.onResume(); Subscription.subscribe(new NetworkAction(networkStatusDisplayer, viewToAttachDisplayerTo)); subscriptions.add(merlinSubscription); }", "n_tokens": 40, "n_pass": [84, 7, 6]}
{"time": "2021-02-14 20:58:15.901065", "score": "0.9998", "loss": "0.0003", "code": "void onResume() { onResume(); Subscription.subscribe(new NetworkAction(networkStatusDisplayer, viewToAttachDisplayerTo)); subscriptions.add(merlinSubscription); }", "n_tokens": 38, "n_pass": [88, 8, 7]}
{"time": "2021-02-14 20:58:18.528712", "score": "0.9998", "loss": "0.0002", "code": "void onResume() { onResume(); Subscription(new NetworkAction(networkStatusDisplayer, viewToAttachDisplayerTo)); subscriptions.add(merlinSubscription); }", "n_tokens": 36, "n_pass": [92, 9, 8]}
{"time": "2021-02-14 20:58:21.149483", "score": "0.9998", "loss": "0.0002", "code": "void onResume() { onResume(); Subscription(new NetworkAction(networkStatusDisplayerviewToAttachDisplayerTo)); subscriptions.add(merlinSubscription); }", "n_tokens": 34, "n_pass": [96, 10, 9]}
{"time": "2021-02-14 20:58:23.781379", "score": "0.9999", "loss": "0.0002", "code": "void onResume() { onResume(); Subscription(new NetworkAction(networkStatusDisplayerviewToAttachDisplayerTo)); subscriptions(merlinSubscription); }", "n_tokens": 32, "n_pass": [100, 11, 10]}
{"time": "2021-02-14 20:58:26.814828", "score": "0.9996", "loss": "0.0005", "code": "void onResume() { onResume();(new NetworkAction(networkStatusDisplayerviewToAttachDisplayerTo)); subscriptions(merlinSubscription); }", "n_tokens": 30, "n_pass": [110, 12, 11]}
{"time": "2021-02-14 20:58:29.461072", "score": "0.9972", "loss": "0.0032", "code": "void onResume() { onResume();(new NetworkAction(networkStatusDisplayerviewToAttachDisplayerTo));(merlinSubscription); }", "n_tokens": 28, "n_pass": [116, 13, 12]}
{"time": "2021-02-14 20:58:35.503883", "score": "0.9972", "loss": "0.0032", "code": "void onResume() { onResume();(new NetworkAction(networkStatusDisplayerviewToAttachDisplayerTo));(merlinSubscription);}", "n_tokens": 27, "n_pass": [163, 14, 13]}
{"time": "2021-02-14 20:58:38.917693", "score": "0.9972", "loss": "0.0032", "code": "void onResume(){ onResume();(new NetworkAction(networkStatusDisplayerviewToAttachDisplayerTo));(merlinSubscription);}", "n_tokens": 26, "n_pass": [169, 15, 14]}
{"time": "2021-02-14 20:58:41.548910", "score": "0.9972", "loss": "0.0032", "code": "void onResume(){onResume();(new NetworkAction(networkStatusDisplayerviewToAttachDisplayerTo));(merlinSubscription);}", "n_tokens": 25, "n_pass": [171, 16, 15]}
{"time": "2021-02-14 20:58:44.161626", "score": "0.9971", "loss": "0.0032", "code": "void onResume(){onResume();( NetworkAction(networkStatusDisplayerviewToAttachDisplayerTo));(merlinSubscription);}", "n_tokens": 24, "n_pass": [177, 17, 16]}
{"time": "2021-02-14 20:58:46.786584", "score": "0.9971", "loss": "0.0032", "code": "void onResume(){onResume();(NetworkAction(networkStatusDisplayerviewToAttachDisplayerTo));(merlinSubscription);}", "n_tokens": 23, "n_pass": [178, 18, 17]}
{"time": "2021-02-14 20:58:49.373940", "score": "0.9967", "loss": "0.0036", "code": "void onResume(){onResume();((networkStatusDisplayerviewToAttachDisplayerTo));(merlinSubscription);}", "n_tokens": 22, "n_pass": [179, 19, 18]}
{"time": "2021-02-14 20:58:51.974782", "score": "0.9967", "loss": "0.0036", "code": "void onResume(){onResume();((viewToAttachDisplayerTo));(merlinSubscription);}", "n_tokens": 21, "n_pass": [181, 20, 19]}

Minimal simplified code:
void onResume(){onResume();((viewToAttachDisplayerTo));(merlinSubscription);}

