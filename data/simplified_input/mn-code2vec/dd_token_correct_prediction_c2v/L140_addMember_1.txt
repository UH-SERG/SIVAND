
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/OpenRock__OpenAM/openam-core/src/main/java/com/sun/identity/idsvcs/opensso/IdentityServicesImpl_addMember.java
method_name = addMember
method_body = private void addMember(AMIdentityRepository repo, AMIdentity amIdentity, AMIdentity member) throws IdRepoException, SSOException, ForbiddenException { if (!member.isMember(amIdentity)) { if (isOperationSupported(repo, amIdentity.getType(), IdOperation.EDIT)) { amIdentity.addMember(member); } else { throw new ForbiddenException(""); } } }
predict, score, loss = addMember, 0.9855234622955322, 0.01601475663483143

Trace of simplified code(s):
{"time": "2021-02-14 09:16:09.262243", "score": "0.9855", "loss": "0.016", "code": "private void addMember(AMIdentityRepository repo, AMIdentity amIdentity, AMIdentity member) throws IdRepoException, SSOException, ForbiddenException { if (!member.isMember(amIdentity)) { if (isOperationSupported(repo, amIdentity.getType(), IdOperation.EDIT)) { amIdentity.addMember(member); } else { throw new ForbiddenException(\"\"); } } }", "n_tokens": 100, "n_pass": [1, 1, 1]}
{"time": "2021-02-14 09:16:11.935911", "score": "0.9821", "loss": "0.02", "code": "private void addMember(AMIdentityRepository repo, AMIdentity amIdentity, AMIdentity member) throws IdRepoException { if (!member.isMember(amIdentity)) { if (isOperationSupported(repo, amIdentity.getType(), IdOperation.EDIT)) { amIdentity.addMember(member); } else { throw new ForbiddenException(\"\"); } } }", "n_tokens": 94, "n_pass": [48, 2, 2]}
{"time": "2021-02-14 09:16:14.602725", "score": "0.9901", "loss": "0.011", "code": "private void addMember(AMIdentityRepository repo, AMIdentity amIdentity, AMIdentity member) throws IdRepoException { if (isMember(amIdentity)) { if (isOperationSupported(repo, amIdentity.getType(), IdOperation.EDIT)) { amIdentity.addMember(member); } else { throw new ForbiddenException(\"\"); } } }", "n_tokens": 91, "n_pass": [95, 3, 3]}
{"time": "2021-02-14 09:16:17.259843", "score": "0.9894", "loss": "0.0118", "code": "private void addMember(AMIdentityRepository repo, AMIdentity amIdentity, AMIdentity member) throws IdRepoException { if (isMember(amIdentity)) { if (isOperationSupported(repo,getType(), IdOperation.EDIT)) { amIdentity.addMember(member); } else { throw new ForbiddenException(\"\"); } } }", "n_tokens": 88, "n_pass": [100, 4, 4]}
{"time": "2021-02-14 09:16:19.922872", "score": "0.9912", "loss": "0.0092", "code": "private void addMember(AMIdentityRepository repo, AMIdentity amIdentity, AMIdentity member) throws IdRepoException { if (isMember(amIdentity)) { if (isOperationSupported(repo,getType().EDIT)) { amIdentity.addMember(member); } else { throw new ForbiddenException(\"\"); } } }", "n_tokens": 85, "n_pass": [102, 5, 5]}
{"time": "2021-02-14 09:16:22.577493", "score": "0.9827", "loss": "0.0184", "code": "private void addMember(AMIdentityRepository repo, AMIdentity amIdentity, AMIdentity member) throws IdRepoException { if (isMember(amIdentity)) { if (isOperationSupported(repo,getType().EDIT)) {addMember(member); } else { throw new ForbiddenException(\"\"); } } }", "n_tokens": 82, "n_pass": [105, 6, 6]}
{"time": "2021-02-14 09:16:25.258699", "score": "0.9893", "loss": "0.0118", "code": "private void addMember(AMIdentityRepository repo, AMIdentity amIdentity, AMIdentity member) throws IdRepoException { if (isMember(amIdentity)) { if (isOperationSupported(repo,getType().EDIT)) {addMember(member); } else { ForbiddenException(\"\"); } } }", "n_tokens": 78, "n_pass": [110, 7, 7]}
{"time": "2021-02-14 09:16:28.323872", "score": "0.9899", "loss": "0.0111", "code": "private void addMember(AMIdentityRepository repo, AMIdentity amIdentity, AMIdentity member)  { if (isMember(amIdentity)) { if (isOperationSupported(repo,getType().EDIT)) {addMember(member); } else { ForbiddenException(\"\"); } } }", "n_tokens": 75, "n_pass": [121, 8, 8]}
{"time": "2021-02-14 09:16:34.792742", "score": "0.9899", "loss": "0.0111", "code": "private void addMember(AMIdentityRepository repo, AMIdentity amIdentity,AMIdentity member)  { if (isMember(amIdentity)) { if (isOperationSupported(repo,getType().EDIT)) {addMember(member); } else { ForbiddenException(\"\"); } } }", "n_tokens": 74, "n_pass": [195, 9, 9]}
{"time": "2021-02-14 09:16:37.442666", "score": "0.9899", "loss": "0.0111", "code": "private void addMember(AMIdentityRepository repo, AMIdentity amIdentity,AMIdentity member) { if (isMember(amIdentity)) { if (isOperationSupported(repo,getType().EDIT)) {addMember(member); } else { ForbiddenException(\"\"); } } }", "n_tokens": 73, "n_pass": [200, 10, 10]}
{"time": "2021-02-14 09:16:40.096098", "score": "0.9902", "loss": "0.0114", "code": "private void addMember(AMIdentityRepository repo, AMIdentity amIdentity,AMIdentity member) { if (isMember(amIdentity)) { if (isOperationSupported(repo().EDIT)) {addMember(member); } else { ForbiddenException(\"\"); } } }", "n_tokens": 71, "n_pass": [211, 11, 11]}
{"time": "2021-02-14 09:16:42.740408", "score": "0.9902", "loss": "0.011", "code": "private void addMember(AMIdentityRepository repo, AMIdentity amIdentity,AMIdentity member) { if (isMember(amIdentity)) { if (isOperationSupported(repo.EDIT)) {addMember(member); } else { ForbiddenException(\"\"); } } }", "n_tokens": 69, "n_pass": [212, 12, 12]}
{"time": "2021-02-14 09:16:45.405009", "score": "0.9934", "loss": "0.0072", "code": "private void addMember(AMIdentityRepository repo, AMIdentity amIdentity,AMIdentity member) { if (isMember(amIdentity)) { if (isOperationSupported(repo)) {addMember(member); } else { ForbiddenException(\"\"); } } }", "n_tokens": 67, "n_pass": [213, 13, 13]}
{"time": "2021-02-14 09:16:48.070707", "score": "0.995", "loss": "0.0055", "code": "private void addMember(AMIdentityRepository repo, AMIdentity amIdentity,AMIdentity member) { if (isMember(amIdentity)) { if (isOperationSupported(repo)) {addMember(member); } { ForbiddenException(\"\"); } } }", "n_tokens": 65, "n_pass": [220, 14, 14]}
{"time": "2021-02-14 09:16:50.717207", "score": "0.996", "loss": "0.0043", "code": "private void addMember(AMIdentityRepository repo, AMIdentity amIdentity,AMIdentity member) { if (isMember(amIdentity)) { if (isOperationSupported(repo)) {addMember(member); } { ForbiddenException(); } } }", "n_tokens": 63, "n_pass": [223, 15, 15]}
{"time": "2021-02-14 09:16:53.349119", "score": "0.996", "loss": "0.0043", "code": " void addMember(AMIdentityRepository repo, AMIdentity amIdentity,AMIdentity member) { if (isMember(amIdentity)) { if (isOperationSupported(repo)) {addMember(member); } { ForbiddenException(); } } }", "n_tokens": 62, "n_pass": [228, 16, 16]}
{"time": "2021-02-14 09:16:56.009074", "score": "0.996", "loss": "0.0043", "code": "void addMember(AMIdentityRepository repo, AMIdentity amIdentity,AMIdentity member) { if (isMember(amIdentity)) { if (isOperationSupported(repo)) {addMember(member); } { ForbiddenException(); } } }", "n_tokens": 61, "n_pass": [229, 17, 17]}
{"time": "2021-02-14 09:16:59.485913", "score": "0.996", "loss": "0.0043", "code": "void addMember(AMIdentityRepository repo,AMIdentity amIdentity,AMIdentity member) { if (isMember(amIdentity)) { if (isOperationSupported(repo)) {addMember(member); } { ForbiddenException(); } } }", "n_tokens": 60, "n_pass": [238, 18, 18]}
{"time": "2021-02-14 09:17:08.608976", "score": "0.996", "loss": "0.0043", "code": "void addMember(AMIdentityRepository repo,AMIdentity amIdentity,AMIdentity member){ if (isMember(amIdentity)) { if (isOperationSupported(repo)) {addMember(member); } { ForbiddenException(); } } }", "n_tokens": 59, "n_pass": [321, 19, 19]}
{"time": "2021-02-14 09:17:11.241457", "score": "0.996", "loss": "0.0043", "code": "void addMember(AMIdentityRepository repo,AMIdentity amIdentity,AMIdentity member){if (isMember(amIdentity)) { if (isOperationSupported(repo)) {addMember(member); } { ForbiddenException(); } } }", "n_tokens": 58, "n_pass": [322, 20, 20]}
{"time": "2021-02-14 09:17:13.873101", "score": "0.996", "loss": "0.0043", "code": "void addMember(AMIdentityRepository repo,AMIdentity amIdentity,AMIdentity member){if(isMember(amIdentity)) { if (isOperationSupported(repo)) {addMember(member); } { ForbiddenException(); } } }", "n_tokens": 57, "n_pass": [324, 21, 21]}
{"time": "2021-02-14 09:17:16.513650", "score": "0.9925", "loss": "0.0078", "code": "void addMember(AMIdentityRepository repo,AMIdentity amIdentity,AMIdentity member){if((amIdentity)) { if (isOperationSupported(repo)) {addMember(member); } { ForbiddenException(); } } }", "n_tokens": 56, "n_pass": [326, 22, 22]}
{"time": "2021-02-14 09:17:19.143867", "score": "0.9925", "loss": "0.0078", "code": "void addMember(AMIdentityRepository repo,AMIdentity amIdentity,AMIdentity member){if((amIdentity)){ if (isOperationSupported(repo)) {addMember(member); } { ForbiddenException(); } } }", "n_tokens": 55, "n_pass": [331, 23, 23]}
{"time": "2021-02-14 09:17:21.772069", "score": "0.9925", "loss": "0.0078", "code": "void addMember(AMIdentityRepository repo,AMIdentity amIdentity,AMIdentity member){if((amIdentity)){if (isOperationSupported(repo)) {addMember(member); } { ForbiddenException(); } } }", "n_tokens": 54, "n_pass": [333, 24, 24]}
{"time": "2021-02-14 09:17:24.406796", "score": "0.9925", "loss": "0.0078", "code": "void addMember(AMIdentityRepository repo,AMIdentity amIdentity,AMIdentity member){if((amIdentity)){if(isOperationSupported(repo)) {addMember(member); } { ForbiddenException(); } } }", "n_tokens": 53, "n_pass": [335, 25, 25]}
{"time": "2021-02-14 09:17:27.049790", "score": "0.9816", "loss": "0.0214", "code": "void addMember(AMIdentityRepository repo,AMIdentity amIdentity,AMIdentity member){if((amIdentity)){if((repo)) {addMember(member); } { ForbiddenException(); } } }", "n_tokens": 52, "n_pass": [337, 26, 26]}
{"time": "2021-02-14 09:17:29.708889", "score": "0.9816", "loss": "0.0214", "code": "void addMember(AMIdentityRepository repo,AMIdentity amIdentity,AMIdentity member){if((amIdentity)){if((repo)){addMember(member); } { ForbiddenException(); } } }", "n_tokens": 51, "n_pass": [342, 27, 27]}
{"time": "2021-02-14 09:17:37.627592", "score": "0.9816", "loss": "0.0214", "code": "void addMember(AMIdentityRepository repo,AMIdentity amIdentity,AMIdentity member){if((amIdentity)){if((repo)){addMember(member);} { ForbiddenException(); } } }", "n_tokens": 50, "n_pass": [349, 30, 28]}
{"time": "2021-02-14 09:17:40.257000", "score": "0.9816", "loss": "0.0214", "code": "void addMember(AMIdentityRepository repo,AMIdentity amIdentity,AMIdentity member){if((amIdentity)){if((repo)){addMember(member);}{ ForbiddenException(); } } }", "n_tokens": 49, "n_pass": [351, 31, 29]}
{"time": "2021-02-14 09:17:42.905716", "score": "0.9816", "loss": "0.0214", "code": "void addMember(AMIdentityRepository repo,AMIdentity amIdentity,AMIdentity member){if((amIdentity)){if((repo)){addMember(member);}{ForbiddenException(); } } }", "n_tokens": 48, "n_pass": [353, 32, 30]}
{"time": "2021-02-14 09:17:45.543670", "score": "0.9816", "loss": "0.0214", "code": "void addMember(AMIdentityRepository repo,AMIdentity amIdentity,AMIdentity member){if((amIdentity)){if((repo)){addMember(member);}{ForbiddenException();} } }", "n_tokens": 47, "n_pass": [358, 33, 31]}
{"time": "2021-02-14 09:17:48.204424", "score": "0.9816", "loss": "0.0214", "code": "void addMember(AMIdentityRepository repo,AMIdentity amIdentity,AMIdentity member){if((amIdentity)){if((repo)){addMember(member);}{ForbiddenException();}} }", "n_tokens": 46, "n_pass": [360, 34, 32]}
{"time": "2021-02-14 09:17:50.833368", "score": "0.9816", "loss": "0.0214", "code": "void addMember(AMIdentityRepository repo,AMIdentity amIdentity,AMIdentity member){if((amIdentity)){if((repo)){addMember(member);}{ForbiddenException();}}}", "n_tokens": 45, "n_pass": [362, 35, 33]}

Minimal simplified code:
void addMember(AMIdentityRepository repo,AMIdentity amIdentity,AMIdentity member){if((amIdentity)){if((repo)){addMember(member);}{ForbiddenException();}}}

