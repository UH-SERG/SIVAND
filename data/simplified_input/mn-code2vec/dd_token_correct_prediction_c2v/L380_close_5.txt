
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/bluestreak01__questdb/core/src/main/java/com/questdb/net/SecureSocketChannel_close.java
method_name = close
method_body = @Override public void close() throws IOException { socketChannel.close(); ByteBuffers.release(inBuf); ByteBuffers.release(outBuf); ByteBuffers.release(swapBuf); if (engine.isOutboundDone()) { engine.closeOutbound(); } while (!engine.isInboundDone()) { try { engine.closeInbound(); } catch (SSLException ignored) { } } }
predict, score, loss = close, 0.9484725594520569, 0.05947180837392807

Trace of simplified code(s):
{"time": "2021-02-14 17:14:14.630691", "score": "0.9485", "loss": "0.0595", "code": "@Override public void close() throws IOException { socketChannel.close(); ByteBuffers.release(inBuf); ByteBuffers.release(outBuf); ByteBuffers.release(swapBuf); if (engine.isOutboundDone()) { engine.closeOutbound(); } while (!engine.isInboundDone()) { try { engine.closeInbound(); } catch (SSLException ignored) { } } }", "n_tokens": 110, "n_pass": [1, 1, 1]}
{"time": "2021-02-14 17:14:17.320275", "score": "0.9185", "loss": "0.0909", "code": "@Override public void close() throws IOException { socketChannel.close(); ByteBuffers.ByteBuffers.release(swapBuf); if (engine.isOutboundDone()) { engine.closeOutbound(); } while (!engine.isInboundDone()) { try { engine.closeInbound(); } catch (SSLException ignored) { } } }", "n_tokens": 96, "n_pass": [22, 2, 2]}
{"time": "2021-02-14 17:14:20.394902", "score": "0.8803", "loss": "0.1472", "code": "@Override public void close() throws IOException { socketChannel.ByteBuffers.release(swapBuf); if (engine.isOutboundDone()) { engine.closeOutbound(); } while (!engine.isInboundDone()) { try { engine.closeInbound(); } catch (SSLException ignored) { } } }", "n_tokens": 89, "n_pass": [57, 3, 3]}
{"time": "2021-02-14 17:14:23.858448", "score": "0.8521", "loss": "0.1931", "code": "@Override public void close() throws IOException { socketChannelrelease(swapBuf); if (engine.isOutboundDone()) { engine.closeOutbound(); } while (!engine.isInboundDone()) { try { engine.closeInbound(); } catch (SSLException ignored) { } } }", "n_tokens": 86, "n_pass": [97, 4, 4]}
{"time": "2021-02-14 17:14:26.510364", "score": "0.7163", "loss": "0.3829", "code": "@Override public void close() throws IOException { socketChannelrelease(swapBuf); if (engine.isOutboundDone()) { engine.closeOutbound(); } while (!engine) { try { engine.closeInbound(); } catch (SSLException ignored) { } } }", "n_tokens": 82, "n_pass": [108, 5, 5]}
{"time": "2021-02-14 17:14:29.171606", "score": "0.5059", "loss": "0.7829", "code": "public void close() throws IOException { socketChannelrelease(swapBuf); if (engine.isOutboundDone()) { engine.closeOutbound(); } while (!engine) { try { engine.closeInbound(); } catch (SSLException ignored) { } } }", "n_tokens": 79, "n_pass": [117, 6, 6]}
{"time": "2021-02-14 17:14:34.580707", "score": "0.5059", "loss": "0.7829", "code": " void close() throws IOException { socketChannelrelease(swapBuf); if (engine.isOutboundDone()) { engine.closeOutbound(); } while (!engine) { try { engine.closeInbound(); } catch (SSLException ignored) { } } }", "n_tokens": 78, "n_pass": [187, 7, 7]}
{"time": "2021-02-14 17:14:37.227485", "score": "0.5059", "loss": "0.7829", "code": "void close() throws IOException { socketChannelrelease(swapBuf); if (engine.isOutboundDone()) { engine.closeOutbound(); } while (!engine) { try { engine.closeInbound(); } catch (SSLException ignored) { } } }", "n_tokens": 77, "n_pass": [188, 8, 8]}
{"time": "2021-02-14 17:14:40.276513", "score": "0.5059", "loss": "0.7829", "code": "void close()throws IOException { socketChannelrelease(swapBuf); if (engine.isOutboundDone()) { engine.closeOutbound(); } while (!engine) { try { engine.closeInbound(); } catch (SSLException ignored) { } } }", "n_tokens": 76, "n_pass": [193, 9, 9]}
{"time": "2021-02-14 17:14:42.929569", "score": "0.5059", "loss": "0.7829", "code": "void close()throws IOException{ socketChannelrelease(swapBuf); if (engine.isOutboundDone()) { engine.closeOutbound(); } while (!engine) { try { engine.closeInbound(); } catch (SSLException ignored) { } } }", "n_tokens": 75, "n_pass": [197, 10, 10]}
{"time": "2021-02-14 17:14:45.590191", "score": "0.5467", "loss": "0.6831", "code": "void close()throws IOException{release(swapBuf); if (engine.isOutboundDone()) { engine.closeOutbound(); } while (!engine) { try { engine.closeInbound(); } catch (SSLException ignored) { } } }", "n_tokens": 73, "n_pass": [199, 11, 11]}
{"time": "2021-02-14 17:14:56.180009", "score": "0.5355", "loss": "0.7036", "code": "void close()throws IOException{release(swapBuf); if (engine.isOutboundDone()) { engine.closeOutbound(); } while (!engine) { try { closeInbound(); } catch (SSLException ignored) { } } }", "n_tokens": 71, "n_pass": [220, 15, 12]}
{"time": "2021-02-14 17:15:15.841641", "score": "0.5355", "loss": "0.7036", "code": "void close()throws IOException{release(swapBuf); if (engine.isOutboundDone()) { engine.closeOutbound(); } while (!engine) { try { closeInbound();} catch (SSLException ignored) { } } }", "n_tokens": 70, "n_pass": [325, 19, 13]}
{"time": "2021-02-14 17:15:18.483231", "score": "0.5355", "loss": "0.7036", "code": "void close()throws IOException{release(swapBuf); if (engine.isOutboundDone()) { engine.closeOutbound(); } while (!engine) { try { closeInbound();}catch (SSLException ignored) { } } }", "n_tokens": 69, "n_pass": [326, 20, 14]}
{"time": "2021-02-14 17:15:21.124447", "score": "0.5355", "loss": "0.7036", "code": "void close()throws IOException{release(swapBuf); if (engine.isOutboundDone()) { engine.closeOutbound(); } while (!engine) { try { closeInbound();}catch(SSLException ignored) { } } }", "n_tokens": 68, "n_pass": [328, 21, 15]}
{"time": "2021-02-14 17:15:23.767728", "score": "0.5355", "loss": "0.7036", "code": "void close()throws IOException{release(swapBuf); if (engine.isOutboundDone()) { engine.closeOutbound(); } while (!engine) { try { closeInbound();}catch(SSLException ignored){ } } }", "n_tokens": 67, "n_pass": [334, 22, 16]}
{"time": "2021-02-14 17:15:26.412498", "score": "0.5355", "loss": "0.7036", "code": "void close()throws IOException{release(swapBuf); if (engine.isOutboundDone()) { engine.closeOutbound(); } while (!engine) { try { closeInbound();}catch(SSLException ignored){} } }", "n_tokens": 66, "n_pass": [336, 23, 17]}
{"time": "2021-02-14 17:15:29.070740", "score": "0.5355", "loss": "0.7036", "code": "void close()throws IOException{release(swapBuf); if (engine.isOutboundDone()) { engine.closeOutbound(); } while (!engine) { try { closeInbound();}catch(SSLException ignored){}} }", "n_tokens": 65, "n_pass": [338, 24, 18]}
{"time": "2021-02-14 17:15:31.705793", "score": "0.5355", "loss": "0.7036", "code": "void close()throws IOException{release(swapBuf); if (engine.isOutboundDone()) { engine.closeOutbound(); } while (!engine) { try { closeInbound();}catch(SSLException ignored){}}}", "n_tokens": 64, "n_pass": [340, 25, 19]}
{"time": "2021-02-14 17:15:35.145031", "score": "0.4576", "loss": "0.8851", "code": "void close()throws IOException{(swapBuf); if (engine.isOutboundDone()) { engine.closeOutbound(); } while (!engine) { try { closeInbound();}catch(SSLException ignored){}}}", "n_tokens": 63, "n_pass": [351, 26, 20]}
{"time": "2021-02-14 17:15:37.773247", "score": "0.4576", "loss": "0.8851", "code": "void close()throws IOException{(swapBuf);if (engine.isOutboundDone()) { engine.closeOutbound(); } while (!engine) { try { closeInbound();}catch(SSLException ignored){}}}", "n_tokens": 62, "n_pass": [356, 27, 21]}
{"time": "2021-02-14 17:15:40.403014", "score": "0.4576", "loss": "0.8851", "code": "void close()throws IOException{(swapBuf);if(engine.isOutboundDone()) { engine.closeOutbound(); } while (!engine) { try { closeInbound();}catch(SSLException ignored){}}}", "n_tokens": 61, "n_pass": [358, 28, 22]}
{"time": "2021-02-14 17:15:45.660702", "score": "0.4576", "loss": "0.8851", "code": "void close()throws IOException{(swapBuf);if(engine.isOutboundDone()){ engine.closeOutbound(); } while (!engine) { try { closeInbound();}catch(SSLException ignored){}}}", "n_tokens": 60, "n_pass": [366, 30, 23]}
{"time": "2021-02-14 17:15:48.298611", "score": "0.4576", "loss": "0.8851", "code": "void close()throws IOException{(swapBuf);if(engine.isOutboundDone()){engine.closeOutbound(); } while (!engine) { try { closeInbound();}catch(SSLException ignored){}}}", "n_tokens": 59, "n_pass": [368, 31, 24]}
{"time": "2021-02-14 17:15:53.598061", "score": "0.4576", "loss": "0.8851", "code": "void close()throws IOException{(swapBuf);if(engine.isOutboundDone()){engine.closeOutbound();} while (!engine) { try { closeInbound();}catch(SSLException ignored){}}}", "n_tokens": 58, "n_pass": [375, 33, 25]}
{"time": "2021-02-14 17:15:56.221465", "score": "0.4576", "loss": "0.8851", "code": "void close()throws IOException{(swapBuf);if(engine.isOutboundDone()){engine.closeOutbound();}while (!engine) { try { closeInbound();}catch(SSLException ignored){}}}", "n_tokens": 57, "n_pass": [377, 34, 26]}
{"time": "2021-02-14 17:15:58.858436", "score": "0.4576", "loss": "0.8851", "code": "void close()throws IOException{(swapBuf);if(engine.isOutboundDone()){engine.closeOutbound();}while(!engine) { try { closeInbound();}catch(SSLException ignored){}}}", "n_tokens": 56, "n_pass": [379, 35, 27]}
{"time": "2021-02-14 17:16:01.489336", "score": "0.6521", "loss": "0.495", "code": "void close()throws IOException{(swapBuf);if(engine.isOutboundDone()){engine.closeOutbound();}while(engine) { try { closeInbound();}catch(SSLException ignored){}}}", "n_tokens": 55, "n_pass": [381, 36, 28]}
{"time": "2021-02-14 17:16:04.139963", "score": "0.6521", "loss": "0.495", "code": "void close()throws IOException{(swapBuf);if(engine.isOutboundDone()){engine.closeOutbound();}while(engine){ try { closeInbound();}catch(SSLException ignored){}}}", "n_tokens": 54, "n_pass": [384, 37, 29]}
{"time": "2021-02-14 17:16:06.765606", "score": "0.6521", "loss": "0.495", "code": "void close()throws IOException{(swapBuf);if(engine.isOutboundDone()){engine.closeOutbound();}while(engine){try { closeInbound();}catch(SSLException ignored){}}}", "n_tokens": 53, "n_pass": [386, 38, 30]}
{"time": "2021-02-14 17:16:09.400210", "score": "0.6521", "loss": "0.495", "code": "void close()throws IOException{(swapBuf);if(engine.isOutboundDone()){engine.closeOutbound();}while(engine){try{ closeInbound();}catch(SSLException ignored){}}}", "n_tokens": 52, "n_pass": [388, 39, 31]}
{"time": "2021-02-14 17:16:12.040716", "score": "0.6521", "loss": "0.495", "code": "void close()throws IOException{(swapBuf);if(engine.isOutboundDone()){engine.closeOutbound();}while(engine){try{closeInbound();}catch(SSLException ignored){}}}", "n_tokens": 51, "n_pass": [390, 40, 32]}
{"time": "2021-02-14 17:16:15.492668", "score": "0.5689", "loss": "0.6556", "code": "void close()throws IOException{(swapBuf);if(engineisOutboundDone()){engine.closeOutbound();}while(engine){try{closeInbound();}catch(SSLException ignored){}}}", "n_tokens": 50, "n_pass": [422, 41, 33]}
{"time": "2021-02-14 17:16:24.281035", "score": "0.722", "loss": "0.3467", "code": "void close()throws IOException{(swapBuf);if(isOutboundDone()){engine.closeOutbound();}while(engine){try{closeInbound();}catch(SSLException ignored){}}}", "n_tokens": 49, "n_pass": [472, 44, 34]}

Minimal simplified code:
void close()throws IOException{(swapBuf);if(isOutboundDone()){engine.closeOutbound();}while(engine){try{closeInbound();}catch(SSLException ignored){}}}

