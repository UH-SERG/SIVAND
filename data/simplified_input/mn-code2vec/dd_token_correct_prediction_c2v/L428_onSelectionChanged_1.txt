
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/trikita__slide/src/main/java/trikita/slide/ui/Editor_onSelectionChanged.java
method_name = onSelectionChanged
method_body = @Override protected void onSelectionChanged(int selStart, int selEnd) { super.onSelectionChanged(selStart, selEnd); if (mOnSelectionChangedListener != null) { mOnSelectionChangedListener.onSelectionChanged(selStart); } }
predict, score, loss = onSelectionChanged, 0.9992766976356506, 0.0010097887134179473

Trace of simplified code(s):
{"time": "2021-02-14 18:50:09.848536", "score": "0.9993", "loss": "0.001", "code": "@Override protected void onSelectionChanged(int selStart, int selEnd) { super.onSelectionChanged(selStart, selEnd); if (mOnSelectionChangedListener != null) { mOnSelectionChangedListener.onSelectionChanged(selStart); } }", "n_tokens": 56, "n_pass": [1, 1, 1]}
{"time": "2021-02-14 18:50:12.920944", "score": "0.9993", "loss": "0.001", "code": "protected void onSelectionChanged(int selStart, int selEnd) { super.onSelectionChanged(selStart, selEnd); if (mOnSelectionChangedListener != null) { mOnSelectionChangedListener.onSelectionChanged(selStart); } }", "n_tokens": 53, "n_pass": [44, 2, 2]}
{"time": "2021-02-14 18:50:15.962751", "score": "0.9985", "loss": "0.0018", "code": "protected void onSelectionChanged(int selStart, int selEnd) { super.onSelectionChanged(selStart, selEnd); if (mOnSelectionChangedListenernull) { mOnSelectionChangedListener.onSelectionChanged(selStart); } }", "n_tokens": 49, "n_pass": [55, 3, 3]}
{"time": "2021-02-14 18:50:22.787057", "score": "0.9959", "loss": "0.0044", "code": "protected void onSelectionChanged(int selStart, int selEnd) { super.onSelectionChanged(selStart, selEnd); if (mOnSelectionChangedListenernull) { mOnSelectionChangedListener(selStart); } }", "n_tokens": 47, "n_pass": [101, 5, 4]}
{"time": "2021-02-14 18:50:25.427799", "score": "0.9959", "loss": "0.0044", "code": " void onSelectionChanged(int selStart, int selEnd) { super.onSelectionChanged(selStart, selEnd); if (mOnSelectionChangedListenernull) { mOnSelectionChangedListener(selStart); } }", "n_tokens": 46, "n_pass": [106, 6, 5]}
{"time": "2021-02-14 18:50:28.066347", "score": "0.9959", "loss": "0.0044", "code": "void onSelectionChanged(int selStart, int selEnd) { super.onSelectionChanged(selStart, selEnd); if (mOnSelectionChangedListenernull) { mOnSelectionChangedListener(selStart); } }", "n_tokens": 45, "n_pass": [107, 7, 6]}
{"time": "2021-02-14 18:50:31.937571", "score": "0.9996", "loss": "0.0005", "code": "void onSelectionChanged(int selStart, int selEnd) { super.onSelectionChanged(selStartselEnd); if (mOnSelectionChangedListenernull) { mOnSelectionChangedListener(selStart); } }", "n_tokens": 43, "n_pass": [121, 8, 7]}
{"time": "2021-02-14 18:50:43.331670", "score": "0.9996", "loss": "0.0005", "code": "void onSelectionChanged(int selStart, int selEnd) { super.onSelectionChanged(selStartselEnd);if (mOnSelectionChangedListenernull) { mOnSelectionChangedListener(selStart); } }", "n_tokens": 42, "n_pass": [185, 10, 8]}
{"time": "2021-02-14 18:50:45.985555", "score": "0.9996", "loss": "0.0005", "code": "void onSelectionChanged(int selStart, int selEnd) { super.onSelectionChanged(selStartselEnd);if(mOnSelectionChangedListenernull) { mOnSelectionChangedListener(selStart); } }", "n_tokens": 41, "n_pass": [187, 11, 9]}
{"time": "2021-02-14 18:50:48.624442", "score": "0.9996", "loss": "0.0005", "code": "void onSelectionChanged(int selStart, int selEnd) { super.onSelectionChanged(selStartselEnd);if(null) { mOnSelectionChangedListener(selStart); } }", "n_tokens": 40, "n_pass": [189, 12, 10]}
{"time": "2021-02-14 18:50:51.262603", "score": "0.9996", "loss": "0.0005", "code": "void onSelectionChanged(int selStart, int selEnd) { super.onSelectionChanged(selStartselEnd);if(null){ mOnSelectionChangedListener(selStart); } }", "n_tokens": 39, "n_pass": [192, 13, 11]}
{"time": "2021-02-14 18:50:53.923344", "score": "0.9996", "loss": "0.0005", "code": "void onSelectionChanged(int selStart, int selEnd) { super.onSelectionChanged(selStartselEnd);if(null){mOnSelectionChangedListener(selStart); } }", "n_tokens": 38, "n_pass": [194, 14, 12]}
{"time": "2021-02-14 18:50:59.195350", "score": "0.9989", "loss": "0.0012", "code": "void onSelectionChanged(int selStart, int selEnd) { super.onSelectionChanged(selStartselEnd);if(null){mOnSelectionChangedListener(); } }", "n_tokens": 37, "n_pass": [197, 16, 13]}
{"time": "2021-02-14 18:51:01.814349", "score": "0.9989", "loss": "0.0012", "code": "void onSelectionChanged(int selStart, int selEnd) { super.onSelectionChanged(selStartselEnd);if(null){mOnSelectionChangedListener();} }", "n_tokens": 36, "n_pass": [200, 17, 14]}
{"time": "2021-02-14 18:51:04.451689", "score": "0.9989", "loss": "0.0012", "code": "void onSelectionChanged(int selStart, int selEnd) { super.onSelectionChanged(selStartselEnd);if(null){mOnSelectionChangedListener();}}", "n_tokens": 35, "n_pass": [202, 18, 15]}
{"time": "2021-02-14 18:51:07.875455", "score": "0.9989", "loss": "0.0012", "code": "void onSelectionChanged(int selStart,int selEnd) { super.onSelectionChanged(selStartselEnd);if(null){mOnSelectionChangedListener();}}", "n_tokens": 34, "n_pass": [212, 19, 16]}
{"time": "2021-02-14 18:51:10.491644", "score": "0.9989", "loss": "0.0012", "code": "void onSelectionChanged(int selStart,int selEnd){ super.onSelectionChanged(selStartselEnd);if(null){mOnSelectionChangedListener();}}", "n_tokens": 33, "n_pass": [217, 20, 17]}
{"time": "2021-02-14 18:51:13.110367", "score": "0.9989", "loss": "0.0012", "code": "void onSelectionChanged(int selStart,int selEnd){super.onSelectionChanged(selStartselEnd);if(null){mOnSelectionChangedListener();}}", "n_tokens": 32, "n_pass": [219, 21, 18]}
{"time": "2021-02-14 18:51:15.766691", "score": "0.9984", "loss": "0.0022", "code": "void onSelectionChanged(int selStart,int selEnd){superonSelectionChanged(selStartselEnd);if(null){mOnSelectionChangedListener();}}", "n_tokens": 31, "n_pass": [221, 22, 19]}
{"time": "2021-02-14 18:51:18.780895", "score": "0.9984", "loss": "0.0021", "code": "void onSelectionChanged(int selStart,int selEnd){superonSelectionChanged(selEnd);if(null){mOnSelectionChangedListener();}}", "n_tokens": 30, "n_pass": [224, 23, 20]}
{"time": "2021-02-14 18:51:21.396900", "score": "0.9984", "loss": "0.0021", "code": "void onSelectionChanged(int selStart,int selEnd){superonSelectionChanged();if(null){mOnSelectionChangedListener();}}", "n_tokens": 29, "n_pass": [225, 24, 21]}
{"time": "2021-02-14 18:51:24.844259", "score": "0.9994", "loss": "0.0008", "code": "void onSelectionChanged(int selStart,int selEnd){onSelectionChanged();if(null){mOnSelectionChangedListener();}}", "n_tokens": 28, "n_pass": [252, 25, 22]}

Minimal simplified code:
void onSelectionChanged(int selStart,int selEnd){onSelectionChanged();if(null){mOnSelectionChangedListener();}}

