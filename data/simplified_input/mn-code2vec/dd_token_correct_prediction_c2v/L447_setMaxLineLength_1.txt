
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/kaazing__gateway/mina.core/core/src/main/java/org/apache/mina/filter/codec/textline/TextLineEncoder_setMaxLineLength.java
method_name = setMaxLineLength
method_body = public void setMaxLineLength(int maxLineLength) { if (maxLineLength <= 0) { throw new IllegalArgumentException("maxLineLength: " + maxLineLength); } this.maxLineLength = maxLineLength; }
predict, score, loss = setMaxLineLength, 0.999977707862854, 3.123234637314454e-05

Trace of simplified code(s):
{"time": "2021-02-14 19:20:43.389670", "score": "1.0", "loss": "0.0", "code": "public void setMaxLineLength(int maxLineLength) { if (maxLineLength <= 0) { throw new IllegalArgumentException(\"maxLineLength: \" + maxLineLength); } this.maxLineLength = maxLineLength; }", "n_tokens": 56, "n_pass": [1, 1, 1]}
{"time": "2021-02-14 19:20:46.442965", "score": "0.9993", "loss": "0.001", "code": "public void setMaxLineLength() { if (maxLineLength <= 0) { throw new IllegalArgumentException(\"maxLineLength: \" + maxLineLength); } this.maxLineLength = maxLineLength; }", "n_tokens": 53, "n_pass": [46, 2, 2]}
{"time": "2021-02-14 19:20:49.085481", "score": "0.99", "loss": "0.0113", "code": "public void setMaxLineLength() { if (maxLineLength <= 0) { throw new IllegalArgumentException(\"maxLineLength: \" + maxLineLength); } this.maxLineLength; }", "n_tokens": 49, "n_pass": [58, 3, 3]}
{"time": "2021-02-14 19:20:53.281608", "score": "0.99", "loss": "0.0113", "code": " void setMaxLineLength() { if (maxLineLength <= 0) { throw new IllegalArgumentException(\"maxLineLength: \" + maxLineLength); } this.maxLineLength; }", "n_tokens": 48, "n_pass": [103, 4, 4]}
{"time": "2021-02-14 19:20:55.947014", "score": "0.99", "loss": "0.0113", "code": "void setMaxLineLength() { if (maxLineLength <= 0) { throw new IllegalArgumentException(\"maxLineLength: \" + maxLineLength); } this.maxLineLength; }", "n_tokens": 47, "n_pass": [104, 5, 5]}
{"time": "2021-02-14 19:20:58.987784", "score": "0.8548", "loss": "0.1929", "code": "void setMaxLineLength() { if (maxLineLength <= 0) { new IllegalArgumentException(\"maxLineLength: \" + maxLineLength); } this.maxLineLength; }", "n_tokens": 45, "n_pass": [117, 6, 6]}
{"time": "2021-02-14 19:21:01.636039", "score": "0.8799", "loss": "0.1529", "code": "void setMaxLineLength() { if (maxLineLength <= 0) { IllegalArgumentException(\"maxLineLength: \" + maxLineLength); } this.maxLineLength; }", "n_tokens": 43, "n_pass": [118, 7, 7]}
{"time": "2021-02-14 19:21:04.265269", "score": "0.8799", "loss": "0.1529", "code": "void setMaxLineLength() { if (maxLineLength <= 0) { IllegalArgumentException(\"maxLineLength\" + maxLineLength); } this.maxLineLength; }", "n_tokens": 41, "n_pass": [121, 8, 8]}
{"time": "2021-02-14 19:21:06.899970", "score": "0.896", "loss": "0.1326", "code": "void setMaxLineLength() { if (maxLineLength <= 0) { IllegalArgumentException(\"maxLineLength\" + maxLineLength); } maxLineLength; }", "n_tokens": 39, "n_pass": [127, 9, 9]}
{"time": "2021-02-14 19:21:09.513740", "score": "0.8622", "loss": "0.1797", "code": "void setMaxLineLength() { if (maxLineLength <= 0) { IllegalArgumentException(\"maxLineLength\" + maxLineLength); }  }", "n_tokens": 37, "n_pass": [128, 10, 10]}
{"time": "2021-02-14 19:21:17.834512", "score": "0.8622", "loss": "0.1797", "code": "void setMaxLineLength() { if (maxLineLength <= 0) { IllegalArgumentException(\"maxLineLength\" + maxLineLength); } }", "n_tokens": 36, "n_pass": [182, 11, 11]}
{"time": "2021-02-14 19:21:21.250488", "score": "0.8622", "loss": "0.1797", "code": "void setMaxLineLength(){ if (maxLineLength <= 0) { IllegalArgumentException(\"maxLineLength\" + maxLineLength); } }", "n_tokens": 35, "n_pass": [188, 12, 12]}
{"time": "2021-02-14 19:21:23.863092", "score": "0.8622", "loss": "0.1797", "code": "void setMaxLineLength(){if (maxLineLength <= 0) { IllegalArgumentException(\"maxLineLength\" + maxLineLength); } }", "n_tokens": 34, "n_pass": [190, 13, 13]}
{"time": "2021-02-14 19:21:26.487593", "score": "0.8622", "loss": "0.1797", "code": "void setMaxLineLength(){if(maxLineLength <= 0) { IllegalArgumentException(\"maxLineLength\" + maxLineLength); } }", "n_tokens": 33, "n_pass": [192, 14, 14]}
{"time": "2021-02-14 19:21:29.114372", "score": "0.8622", "loss": "0.1797", "code": "void setMaxLineLength(){if(maxLineLength<= 0) { IllegalArgumentException(\"maxLineLength\" + maxLineLength); } }", "n_tokens": 32, "n_pass": [195, 15, 15]}
{"time": "2021-02-14 19:21:31.731692", "score": "0.5632", "loss": "0.787", "code": "void setMaxLineLength(){if(maxLineLength= 0) { IllegalArgumentException(\"maxLineLength\" + maxLineLength); } }", "n_tokens": 31, "n_pass": [196, 16, 16]}
{"time": "2021-02-14 19:21:34.352513", "score": "0.5632", "loss": "0.787", "code": "void setMaxLineLength(){if(maxLineLength=0) { IllegalArgumentException(\"maxLineLength\" + maxLineLength); } }", "n_tokens": 30, "n_pass": [198, 17, 17]}
{"time": "2021-02-14 19:21:36.980775", "score": "0.5632", "loss": "0.787", "code": "void setMaxLineLength(){if(maxLineLength=0){ IllegalArgumentException(\"maxLineLength\" + maxLineLength); } }", "n_tokens": 29, "n_pass": [201, 18, 18]}
{"time": "2021-02-14 19:21:39.605813", "score": "0.5632", "loss": "0.787", "code": "void setMaxLineLength(){if(maxLineLength=0){IllegalArgumentException(\"maxLineLength\" + maxLineLength); } }", "n_tokens": 28, "n_pass": [203, 19, 19]}
{"time": "2021-02-14 19:21:42.230252", "score": "0.826", "loss": "0.2217", "code": "void setMaxLineLength(){if(maxLineLength=0){(\"maxLineLength\" + maxLineLength); } }", "n_tokens": 27, "n_pass": [204, 20, 20]}
{"time": "2021-02-14 19:21:44.859211", "score": "0.6805", "loss": "0.4687", "code": "void setMaxLineLength(){if(maxLineLength=0){(\"\" + maxLineLength); } }", "n_tokens": 26, "n_pass": [207, 21, 21]}
{"time": "2021-02-14 19:21:47.469052", "score": "0.6805", "loss": "0.4687", "code": "void setMaxLineLength(){if(maxLineLength=0){(\"\"+ maxLineLength); } }", "n_tokens": 25, "n_pass": [209, 22, 22]}
{"time": "2021-02-14 19:21:50.085581", "score": "0.6805", "loss": "0.4687", "code": "void setMaxLineLength(){if(maxLineLength=0){(\"\"+maxLineLength); } }", "n_tokens": 24, "n_pass": [211, 23, 23]}
{"time": "2021-02-14 19:21:52.689627", "score": "0.6805", "loss": "0.4687", "code": "void setMaxLineLength(){if(maxLineLength=0){(\"\"+maxLineLength);} }", "n_tokens": 23, "n_pass": [215, 24, 24]}
{"time": "2021-02-14 19:21:55.306668", "score": "0.6805", "loss": "0.4687", "code": "void setMaxLineLength(){if(maxLineLength=0){(\"\"+maxLineLength);}}", "n_tokens": 22, "n_pass": [217, 25, 25]}
{"time": "2021-02-14 19:21:58.710037", "score": "0.6677", "loss": "0.4804", "code": "void setMaxLineLength(){if(maxLineLength0){(\"\"+maxLineLength);}}", "n_tokens": 21, "n_pass": [228, 26, 26]}
{"time": "2021-02-14 19:22:01.315447", "score": "0.6677", "loss": "0.4804", "code": "void setMaxLineLength(){if(maxLineLength){(\"\"+maxLineLength);}}", "n_tokens": 20, "n_pass": [229, 27, 27]}

Minimal simplified code:
void setMaxLineLength(){if(maxLineLength){(""+maxLineLength);}}

