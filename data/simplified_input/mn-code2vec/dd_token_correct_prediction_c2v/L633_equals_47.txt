
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/rakam-io__rakam/rakam-spi/src/main/java/org/rakam/plugin/stream/CollectionStreamQuery_equals.java
method_name = equals
method_body = @Override public boolean equals(Object o) { if (this == o) { return true; } if (o == null || getClass() != o.getClass()) { return false; } CollectionStreamQuery that = (CollectionStreamQuery) o; if (!collection.equals(that.collection)) { return false; } return filter != null ? filter.equals(that.filter) : that.filter == null; }
predict, score, loss = equals, 0.9999459981918335, 6.09140915912576e-05

Trace of simplified code(s):
{"time": "2021-02-15 01:12:56.617054", "score": "1.0", "loss": "0.0001", "code": "@Override public boolean equals(Object o) { if (this == o) { return true; } if (o == null || getClass() != o.getClass()) { return false; } CollectionStreamQuery that = (CollectionStreamQuery) o; if (!collection.equals(that.collection)) { return false; } return filter != null ? filter.equals(that.filter) : that.filter == null; }", "n_tokens": 141, "n_pass": [1, 1, 1]}
{"time": "2021-02-15 01:12:59.317480", "score": "0.9999", "loss": "0.0001", "code": "@Override public boolean equals(Object o) { if (this == o) { return true; } if (o == null || getClass() != o.getClass()) { return false;  } return filter != null ? filter.equals(that.filter) : that.filter == null; }", "n_tokens": 106, "n_pass": [10, 2, 2]}
{"time": "2021-02-15 01:13:02.072930", "score": "0.999", "loss": "0.0013", "code": "@Override public boolean equals(Object o) { if (this == o) { return true; } if (o == null || getClass()) { return false;  } return filter != null ? filter.equals(that.filter) : that.filter == null; }", "n_tokens": 97, "n_pass": [47, 3, 3]}
{"time": "2021-02-15 01:13:04.743601", "score": "0.9997", "loss": "0.0005", "code": "@Override public boolean equals(Object o) { if (this == o) { return true; } if (o == null || getClass()) { return false;  } return filter ? filter.equals(that.filter) : that.filter == null; }", "n_tokens": 92, "n_pass": [84, 4, 4]}
{"time": "2021-02-15 01:13:07.456784", "score": "0.9941", "loss": "0.0087", "code": " boolean equals(Object o) { if (this == o) { return true; } if (o == null || getClass()) { return false;  } return filter ? filter.equals(that.filter) : that.filter == null; }", "n_tokens": 88, "n_pass": [90, 5, 5]}
{"time": "2021-02-15 01:13:10.109184", "score": "0.8856", "loss": "0.1559", "code": " boolean equals(Object o) { if (thiso) { return true; } if (o == null || getClass()) { return false;  } return filter ? filter.equals(that.filter) : that.filter == null; }", "n_tokens": 84, "n_pass": [95, 6, 6]}
{"time": "2021-02-15 01:13:12.749736", "score": "0.8076", "loss": "0.2555", "code": " boolean equals(Object o) { if (thiso) {; } if (o == null || getClass()) { return false;  } return filter ? filter.equals(that.filter) : that.filter == null; }", "n_tokens": 80, "n_pass": [97, 7, 7]}
{"time": "2021-02-15 01:13:15.422090", "score": "0.944", "loss": "0.0937", "code": " boolean equals(Object o) { if (thiso) {; } if (onull || getClass()) { return false;  } return filter ? filter.equals(that.filter) : that.filter == null; }", "n_tokens": 76, "n_pass": [100, 8, 8]}
{"time": "2021-02-15 01:13:18.828487", "score": "0.9651", "loss": "0.053", "code": " boolean equals(Object o) { if (thiso) {; } if (o|| getClass()) { return false;  } return filter ? filter.equals(that.filter) : that.filter == null; }", "n_tokens": 74, "n_pass": [152, 9, 9]}
{"time": "2021-02-15 01:13:21.497668", "score": "0.9693", "loss": "0.0464", "code": " boolean equals(Object o) { if (thiso) {; } if (o|| getClass) { return false;  } return filter ? filter.equals(that.filter) : that.filter == null; }", "n_tokens": 72, "n_pass": [154, 10, 10]}
{"time": "2021-02-15 01:13:24.175012", "score": "0.9015", "loss": "0.1425", "code": " boolean equals(Object o) { if (thiso) {; } if (o|| getClass) { false;  } return filter ? filter.equals(that.filter) : that.filter == null; }", "n_tokens": 70, "n_pass": [157, 11, 11]}
{"time": "2021-02-15 01:13:26.813140", "score": "0.905", "loss": "0.1375", "code": " boolean equals(Object o) { if (thiso) {; } if (o|| getClass) {   } return filter ? filter.equals(that.filter) : that.filter == null; }", "n_tokens": 68, "n_pass": [158, 12, 12]}
{"time": "2021-02-15 01:13:29.452047", "score": "0.905", "loss": "0.1375", "code": " boolean equals(Object o) { if (thiso) {; } if (o|| getClass) { } return filter ? filter.equals(that.filter) : that.filter == null; }", "n_tokens": 66, "n_pass": [159, 13, 13]}
{"time": "2021-02-15 01:13:35.169167", "score": "0.5499", "loss": "0.6994", "code": " boolean equals(Object o) { if (thiso) {; } if (o|| getClass) { } return filter ? filter.equals(that.filter) :filter == null; }", "n_tokens": 63, "n_pass": [167, 15, 14]}
{"time": "2021-02-15 01:13:38.240493", "score": "0.5499", "loss": "0.6994", "code": " boolean equals(Object o) { if (thiso) {} if (o|| getClass) { } return filter ? filter.equals(that.filter) :filter == null; }", "n_tokens": 61, "n_pass": [181, 16, 15]}
{"time": "2021-02-15 01:13:50.452229", "score": "0.5499", "loss": "0.6994", "code": " boolean equals(Object o) { if (thiso) {}if (o|| getClass) { } return filter ? filter.equals(that.filter) :filter == null; }", "n_tokens": 60, "n_pass": [264, 18, 16]}
{"time": "2021-02-15 01:13:53.101533", "score": "0.5499", "loss": "0.6994", "code": " boolean equals(Object o) { if (thiso) {}if(o|| getClass) { } return filter ? filter.equals(that.filter) :filter == null; }", "n_tokens": 59, "n_pass": [266, 19, 17]}
{"time": "2021-02-15 01:14:01.090030", "score": "0.5499", "loss": "0.6994", "code": " boolean equals(Object o) { if (thiso) {}if(o||getClass) { } return filter ? filter.equals(that.filter) :filter == null; }", "n_tokens": 58, "n_pass": [271, 22, 18]}
{"time": "2021-02-15 01:14:03.731871", "score": "0.5499", "loss": "0.6994", "code": " boolean equals(Object o) { if (thiso) {}if(o||getClass){ } return filter ? filter.equals(that.filter) :filter == null; }", "n_tokens": 57, "n_pass": [274, 23, 19]}
{"time": "2021-02-15 01:14:06.380548", "score": "0.5499", "loss": "0.6994", "code": " boolean equals(Object o) { if (thiso) {}if(o||getClass){} return filter ? filter.equals(that.filter) :filter == null; }", "n_tokens": 56, "n_pass": [276, 24, 20]}
{"time": "2021-02-15 01:14:09.041357", "score": "0.5499", "loss": "0.6994", "code": " boolean equals(Object o) { if (thiso) {}if(o||getClass){}return filter ? filter.equals(that.filter) :filter == null; }", "n_tokens": 55, "n_pass": [278, 25, 21]}
{"time": "2021-02-15 01:14:12.487203", "score": "0.5499", "loss": "0.6994", "code": " boolean equals(Object o) { if (thiso) {}if(o||getClass){}return filter? filter.equals(that.filter) :filter == null; }", "n_tokens": 54, "n_pass": [282, 26, 22]}
{"time": "2021-02-15 01:14:15.162986", "score": "0.5499", "loss": "0.6994", "code": " boolean equals(Object o) { if (thiso) {}if(o||getClass){}return filter?filter.equals(that.filter) :filter == null; }", "n_tokens": 53, "n_pass": [284, 27, 23]}
{"time": "2021-02-15 01:14:20.476609", "score": "0.9825", "loss": "0.0256", "code": " boolean equals(Object o) { if (thiso) {}if(o||getClass){}return filter?filter.equals(that) :filter == null; }", "n_tokens": 51, "n_pass": [290, 29, 24]}
{"time": "2021-02-15 01:14:23.944013", "score": "0.9825", "loss": "0.0256", "code": "boolean equals(Object o) { if (thiso) {}if(o||getClass){}return filter?filter.equals(that) :filter == null; }", "n_tokens": 50, "n_pass": [297, 30, 25]}
{"time": "2021-02-15 01:14:27.367030", "score": "0.9825", "loss": "0.0256", "code": "boolean equals(Object o){ if (thiso) {}if(o||getClass){}return filter?filter.equals(that) :filter == null; }", "n_tokens": 49, "n_pass": [306, 31, 26]}
{"time": "2021-02-15 01:14:30.002097", "score": "0.9825", "loss": "0.0256", "code": "boolean equals(Object o){if (thiso) {}if(o||getClass){}return filter?filter.equals(that) :filter == null; }", "n_tokens": 48, "n_pass": [308, 32, 27]}
{"time": "2021-02-15 01:14:32.637347", "score": "0.9825", "loss": "0.0256", "code": "boolean equals(Object o){if(thiso) {}if(o||getClass){}return filter?filter.equals(that) :filter == null; }", "n_tokens": 47, "n_pass": [310, 33, 28]}
{"time": "2021-02-15 01:14:35.308986", "score": "0.9808", "loss": "0.0268", "code": "boolean equals(Object o){if(o) {}if(o||getClass){}return filter?filter.equals(that) :filter == null; }", "n_tokens": 46, "n_pass": [312, 34, 29]}
{"time": "2021-02-15 01:14:37.976177", "score": "0.9808", "loss": "0.0268", "code": "boolean equals(Object o){if(o){}if(o||getClass){}return filter?filter.equals(that) :filter == null; }", "n_tokens": 45, "n_pass": [315, 35, 30]}
{"time": "2021-02-15 01:14:40.628802", "score": "0.9772", "loss": "0.0294", "code": "boolean equals(Object o){if(o){}if(o|getClass){}return filter?filter.equals(that) :filter == null; }", "n_tokens": 44, "n_pass": [321, 36, 31]}
{"time": "2021-02-15 01:14:43.331798", "score": "0.9817", "loss": "0.025", "code": "boolean equals(Object o){if(o){}if(ogetClass){}return filter?filter.equals(that) :filter == null; }", "n_tokens": 43, "n_pass": [322, 37, 32]}
{"time": "2021-02-15 01:14:45.986297", "score": "0.9799", "loss": "0.0263", "code": "boolean equals(Object o){if(o){}if(o){}return filter?filter.equals(that) :filter == null; }", "n_tokens": 42, "n_pass": [323, 38, 33]}
{"time": "2021-02-15 01:14:49.491659", "score": "0.6223", "loss": "0.6208", "code": "boolean equals(Object o){if(o){}if(o){}return filter?filterequals(that) :filter == null; }", "n_tokens": 41, "n_pass": [332, 39, 34]}
{"time": "2021-02-15 01:15:00.080522", "score": "0.9544", "loss": "0.0635", "code": "boolean equals(Object o){if(o){}if(o){}return filter?equals(that) :filter == null; }", "n_tokens": 40, "n_pass": [367, 42, 35]}
{"time": "2021-02-15 01:15:02.743335", "score": "0.767", "loss": "0.484", "code": "boolean equals(Object o){if(o){}if(o){}return filter?(that) :filter == null; }", "n_tokens": 39, "n_pass": [368, 43, 36]}
{"time": "2021-02-15 01:15:09.674245", "score": "0.767", "loss": "0.484", "code": "boolean equals(Object o){if(o){}if(o){}return filter?(that) :filter== null; }", "n_tokens": 38, "n_pass": [416, 44, 37]}
{"time": "2021-02-15 01:15:12.831764", "score": "0.767", "loss": "0.484", "code": "boolean equals(Object o){if(o){}if(o){}return filter?(that) :filter==null; }", "n_tokens": 37, "n_pass": [418, 45, 38]}
{"time": "2021-02-15 01:15:15.553037", "score": "0.767", "loss": "0.484", "code": "boolean equals(Object o){if(o){}if(o){}return filter?(that) :filter==null;}", "n_tokens": 36, "n_pass": [421, 46, 39]}
{"time": "2021-02-15 01:15:19.785600", "score": "0.767", "loss": "0.484", "code": "boolean equals(Object o){if(o){}if(o){}return filter?(that):filter==null;}", "n_tokens": 35, "n_pass": [451, 47, 40]}

Minimal simplified code:
boolean equals(Object o){if(o){}if(o){}return filter?(that):filter==null;}

