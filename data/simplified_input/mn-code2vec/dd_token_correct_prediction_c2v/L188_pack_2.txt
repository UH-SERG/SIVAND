
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/dronekit__dronekit-android/dependencyLibs/Mavlink/src/com/MAVLink/ardupilotmega/msg_digicam_control_pack.java
method_name = pack
method_body = public MAVLinkPacket pack() { MAVLinkPacket packet = new MAVLinkPacket(MAVLINK_MSG_LENGTH); packet.sysid = 255; packet.compid = 190; packet.msgid = MAVLINK_MSG_ID_DIGICAM_CONTROL; packet.payload.putFloat(extra_value); packet.payload.putUnsignedByte(target_system); packet.payload.putUnsignedByte(target_component); packet.payload.putUnsignedByte(session); packet.payload.putUnsignedByte(zoom_pos); packet.payload.putByte(zoom_step); packet.payload.putUnsignedByte(focus_lock); packet.payload.putUnsignedByte(shot); packet.payload.putUnsignedByte(command_id); packet.payload.putUnsignedByte(extra_param); return packet; }
predict, score, loss = pack, 0.9709038138389587, 0.10046353936195374

Trace of simplified code(s):
{"time": "2021-02-14 10:51:47.276355", "score": "0.5649", "loss": "0.9999", "code": "public MAVLinkPacket pack() { MAVLinkPacket packet = new MAVLinkPacket(MAVLINK_MSG_LENGTH); packet.sysid = 255; packet.compid = 190; packet.msgid = MAVLINK_MSG_ID_DIGICAM_CONTROL; packet.payload.putFloat(extra_value); packet.payload.putUnsignedByte(target_system); packet.payload.putUnsignedByte(target_component); packet.payload.putUnsignedByte(session); packet.payload.putUnsignedByte(zoom_pos); packet.payload.putByte(zoom_step); packet.payload.putUnsignedByte(focus_lock); packet.payload.putUnsignedByte(shot); packet.payload.putUnsignedByte(command_id); packet.payload.putUnsignedByte(extra_param); return packet; }", "n_tokens": 189, "n_pass": [1, 1, 1]}
{"time": "2021-02-14 10:51:49.947473", "score": "0.9772", "loss": "0.0734", "code": "public MAVLinkPacket pack() { MAVLinkPacket packet = new MAVLinkPacket(MAVLINK_MSG_LENGTH); packet.sysid = 255; packet.compid = 190; packet.msgid = MAVLINK_MSG_ID_DIGICAM_CONTROL; packet.payload.putFloat(extra_value); packet.payload.putUnsignedByte(target_system); packet.payloadputUnsignedByte(focus_lock); packet.payload.putUnsignedByte(shot); packet.payload.putUnsignedByte(command_id); packet.payload.putUnsignedByte(extra_param); return packet; }", "n_tokens": 142, "n_pass": [10, 2, 2]}
{"time": "2021-02-14 10:51:52.645424", "score": "0.9961", "loss": "0.0079", "code": "public MAVLinkPacket pack() { MAVLinkPacket packet = new MAVLinkPacket(MAVLINK_MSG_LENGTH); packet.sysid = 255; packet.compid = 190; packet.msgid = MAVLINK_MSG_ID_DIGICAM_CONTROL; packet.payloadputUnsignedByte(focus_lock); packet.payload.putUnsignedByte(shot); packet.payload.putUnsignedByte(command_id); packet.payload.putUnsignedByte(extra_param); return packet; }", "n_tokens": 118, "n_pass": [24, 3, 3]}
{"time": "2021-02-14 10:51:55.309391", "score": "0.9988", "loss": "0.002", "code": "public MAVLinkPacket pack() { MAVLinkPacket packet = new MAVLinkPacket(MAVLINK_MSG_LENGTH); packet.sysid = 255; packet.compid = 190; packet.msgid = MAVLINK_MSG_ID_DIGICAM_CONTROL; packet.payloadputUnsignedByte(shot); packet.payload.putUnsignedByte(command_id); packet.payload.putUnsignedByte(extra_param); return packet; }", "n_tokens": 106, "n_pass": [40, 4, 4]}
{"time": "2021-02-14 10:51:57.961945", "score": "0.9998", "loss": "0.0003", "code": "public MAVLinkPacket pack() { MAVLinkPacket packet = new MAVLinkPacket(MAVLINK_MSG_LENGTH); packet.sysid = 255; packet.compid = 190; packet.msgid = MAVLINK_MSG_ID_DIGICAM_CONTROL; packet.payloadputUnsignedByte(shot); packet.payload.putUnsignedByte(extra_param); return packet; }", "n_tokens": 94, "n_pass": [41, 5, 5]}
{"time": "2021-02-14 10:52:00.619278", "score": "0.9997", "loss": "0.0004", "code": "public MAVLinkPacket pack() { MAVLinkPacket packet = new MAVLinkPacket(MAVLINK_MSG_LENGTH); packet.sysid = 90; packet.msgid = MAVLINK_MSG_ID_DIGICAM_CONTROL; packet.payloadputUnsignedByte(shot); packet.payload.putUnsignedByte(extra_param); return packet; }", "n_tokens": 82, "n_pass": [46, 6, 6]}
{"time": "2021-02-14 10:52:03.276763", "score": "0.9996", "loss": "0.0006", "code": "public MAVLinkPacket pack() { MAVLinkPacket packet = new MAVLinkPacket(MAVLINK_MSG_LENGTH); packet.sysid = MSG_ID_DIGICAM_CONTROL; packet.payloadputUnsignedByte(shot); packet.payload.putUnsignedByte(extra_param); return packet; }", "n_tokens": 70, "n_pass": [47, 7, 7]}
{"time": "2021-02-14 10:52:05.934087", "score": "0.9987", "loss": "0.0022", "code": "public MAVLinkPacket pack() { MAVLinkPacket packet = new MAVLinkPacket(MAVLINK_MSG_LENGTH); packet.sysid = putUnsignedByte(shot); packet.payload.putUnsignedByte(extra_param); return packet; }", "n_tokens": 58, "n_pass": [48, 8, 8]}
{"time": "2021-02-14 10:52:08.590606", "score": "0.9997", "loss": "0.0006", "code": "public MAVLinkPacket pack() { MAVLinkPacket packet = new MAVLinkPacket(MAVLINK_MSG_LENGTH); packet.sysid = packet.payload.putUnsignedByte(extra_param); return packet; }", "n_tokens": 52, "n_pass": [64, 9, 9]}
{"time": "2021-02-14 10:52:11.234293", "score": "0.9737", "loss": "0.0758", "code": "public MAVLinkPacket pack() { new MAVLinkPacket(MAVLINK_MSG_LENGTH); packet.sysid = packet.payload.putUnsignedByte(extra_param); return packet; }", "n_tokens": 46, "n_pass": [69, 10, 10]}
{"time": "2021-02-14 10:52:13.870828", "score": "0.9952", "loss": "0.0085", "code": "public MAVLinkPacket pack() { new MAVLinkPacket(MAVLINK_MSG_LENGTH); packet.payload.putUnsignedByte(extra_param); return packet; }", "n_tokens": 40, "n_pass": [72, 11, 11]}
{"time": "2021-02-14 10:52:16.505803", "score": "0.9991", "loss": "0.0021", "code": "public MAVLinkPacket pack() { new MAVLinkPacket(MAVLINK_MSG_LENGTH); packet.payload.putUnsignedByte(); return packet; }", "n_tokens": 37, "n_pass": [96, 12, 12]}
{"time": "2021-02-14 10:52:19.136472", "score": "0.9989", "loss": "0.0022", "code": "public MAVLinkPacket pack() { new MAVLinkPacket(MAVLINK_MSG_LENGTH); packet.payload.putUnsignedByte(); ; }", "n_tokens": 34, "n_pass": [97, 13, 13]}
{"time": "2021-02-14 10:52:21.765993", "score": "0.9989", "loss": "0.0022", "code": "MAVLinkPacket pack() { new MAVLinkPacket(MAVLINK_MSG_LENGTH); packet.payload.putUnsignedByte(); ; }", "n_tokens": 32, "n_pass": [99, 14, 14]}
{"time": "2021-02-14 10:52:24.801092", "score": "0.8485", "loss": "0.2664", "code": "MAVLinkPacket pack() { (MAVLINK_MSG_LENGTH); packet.payload.putUnsignedByte(); ; }", "n_tokens": 29, "n_pass": [103, 15, 15]}
{"time": "2021-02-14 10:52:32.345021", "score": "0.8485", "loss": "0.2664", "code": "MAVLinkPacket pack() {(MAVLINK_MSG_LENGTH); packet.payload.putUnsignedByte(); ; }", "n_tokens": 28, "n_pass": [135, 17, 16]}
{"time": "2021-02-14 10:52:37.609301", "score": "0.8485", "loss": "0.2664", "code": "MAVLinkPacket pack() {(MAVLINKMSG_LENGTH); packet.payload.putUnsignedByte(); ; }", "n_tokens": 27, "n_pass": [138, 19, 17]}
{"time": "2021-02-14 10:52:43.281219", "score": "0.7908", "loss": "0.3559", "code": "MAVLinkPacket pack() {(MAVLINKMSG_LENGTH); payload.putUnsignedByte(); ; }", "n_tokens": 25, "n_pass": [142, 21, 18]}
{"time": "2021-02-14 10:52:45.902627", "score": "0.9992", "loss": "0.002", "code": "MAVLinkPacket pack() {(MAVLINKMSG_LENGTH); putUnsignedByte(); ; }", "n_tokens": 23, "n_pass": [143, 22, 19]}
{"time": "2021-02-14 10:52:48.520141", "score": "0.9992", "loss": "0.002", "code": "MAVLinkPacket pack() {(MAVLINKMSG_LENGTH); putUnsignedByte(); }", "n_tokens": 21, "n_pass": [146, 23, 20]}
{"time": "2021-02-14 10:52:52.322525", "score": "0.9992", "loss": "0.002", "code": "MAVLinkPacket pack(){(MAVLINKMSG_LENGTH); putUnsignedByte(); }", "n_tokens": 20, "n_pass": [153, 24, 21]}
{"time": "2021-02-14 10:53:05.931386", "score": "0.9992", "loss": "0.002", "code": "MAVLinkPacket pack(){(MAVLINKMSGLENGTH); putUnsignedByte(); }", "n_tokens": 19, "n_pass": [181, 28, 22]}
{"time": "2021-02-14 10:53:11.567870", "score": "0.9992", "loss": "0.002", "code": "MAVLinkPacket pack(){(MAVLINKMSGLENGTH);putUnsignedByte(); }", "n_tokens": 18, "n_pass": [185, 30, 23]}
{"time": "2021-02-14 10:53:14.184421", "score": "0.9992", "loss": "0.002", "code": "MAVLinkPacket pack(){(MAVLINKMSGLENGTH);putUnsignedByte();}", "n_tokens": 17, "n_pass": [190, 31, 24]}

Minimal simplified code:
MAVLinkPacket pack(){(MAVLINKMSGLENGTH);putUnsignedByte();}

