
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/bcgit__bc-java/tls/src/test/java/org/bouncycastle/tls/test/MockPSKTlsServer_getServerVersion.java
method_name = getServerVersion
method_body = public ProtocolVersion getServerVersion() throws IOException { ProtocolVersion serverVersion = super.getServerVersion(); System.out.println("TLS-PSK server negotiated " + serverVersion); return serverVersion; }
predict, score, loss = getServerVersion, 0.9886972904205322, 0.011498842388391495

Trace of simplified code(s):
{"time": "2021-02-14 15:42:32.468443", "score": "0.9887", "loss": "0.0115", "code": "public ProtocolVersion getServerVersion() throws IOException { ProtocolVersion serverVersion = super.getServerVersion(); System.out.println(\"TLS-PSK server negotiated \" + serverVersion); return serverVersion; }", "n_tokens": 56, "n_pass": [1, 1, 1]}
{"time": "2021-02-14 15:42:35.098688", "score": "0.9516", "loss": "0.0515", "code": "public ProtocolVersion getServerVersion() throws IOException { ProtocolVersion serverVersion = super.out.println(\"TLS-PSK server negotiated \" + serverVersion); return serverVersion; }", "n_tokens": 49, "n_pass": [23, 2, 2]}
{"time": "2021-02-14 15:42:37.754057", "score": "0.944", "loss": "0.0664", "code": "public ProtocolVersion getServerVersion() throws IOException { ProtocolVersion serverVersion = super.out.println(\"TLS\" + serverVersion); return serverVersion; }", "n_tokens": 42, "n_pass": [25, 3, 3]}
{"time": "2021-02-14 15:42:40.397676", "score": "0.858", "loss": "0.1573", "code": "public ProtocolVersion getServerVersion() throws IOException { ProtocolVersion serverVersion = super.out.println(+ serverVersion); return serverVersion; }", "n_tokens": 38, "n_pass": [44, 4, 4]}
{"time": "2021-02-14 15:42:43.442060", "score": "0.6292", "loss": "0.485", "code": "public ProtocolVersion getServerVersion() throws IOException { ProtocolVersion= super.out.println(+ serverVersion); return serverVersion; }", "n_tokens": 35, "n_pass": [53, 5, 5]}
{"time": "2021-02-14 15:42:46.070685", "score": "0.9136", "loss": "0.0954", "code": "public ProtocolVersion getServerVersion() throws IOException { ProtocolVersionout.println(+ serverVersion); return serverVersion; }", "n_tokens": 31, "n_pass": [54, 6, 6]}
{"time": "2021-02-14 15:42:50.217922", "score": "0.8512", "loss": "0.1692", "code": "public ProtocolVersion getServerVersion() throws IOException { ProtocolVersionprintln(+ serverVersion); return serverVersion; }", "n_tokens": 29, "n_pass": [82, 7, 7]}
{"time": "2021-02-14 15:42:52.834357", "score": "0.928", "loss": "0.0764", "code": "public ProtocolVersion getServerVersion() throws IOException { ProtocolVersionprintln(serverVersion); return serverVersion; }", "n_tokens": 27, "n_pass": [83, 8, 8]}
{"time": "2021-02-14 15:42:58.104468", "score": "0.928", "loss": "0.0764", "code": " ProtocolVersion getServerVersion() throws IOException { ProtocolVersionprintln(serverVersion); return serverVersion; }", "n_tokens": 26, "n_pass": [89, 10, 9]}
{"time": "2021-02-14 15:43:00.737985", "score": "0.928", "loss": "0.0764", "code": "ProtocolVersion getServerVersion() throws IOException { ProtocolVersionprintln(serverVersion); return serverVersion; }", "n_tokens": 25, "n_pass": [90, 11, 10]}
{"time": "2021-02-14 15:43:04.539904", "score": "0.9077", "loss": "0.0985", "code": "ProtocolVersion getServerVersion() throws IOException {println(serverVersion); return serverVersion; }", "n_tokens": 23, "n_pass": [98, 12, 11]}
{"time": "2021-02-14 15:43:14.003876", "score": "0.6807", "loss": "0.3952", "code": "ProtocolVersion getServerVersion() throws IOException {println(); return serverVersion; }", "n_tokens": 22, "n_pass": [133, 14, 12]}
{"time": "2021-02-14 15:43:16.627429", "score": "0.6807", "loss": "0.3952", "code": "ProtocolVersion getServerVersion() throws IOException {println();return serverVersion; }", "n_tokens": 21, "n_pass": [135, 15, 13]}
{"time": "2021-02-14 15:43:27.108833", "score": "0.6807", "loss": "0.3952", "code": "ProtocolVersion getServerVersion() throws IOException {println();return serverVersion;}", "n_tokens": 20, "n_pass": [140, 19, 14]}
{"time": "2021-02-14 15:43:30.903314", "score": "0.6807", "loss": "0.3952", "code": "ProtocolVersion getServerVersion()throws IOException {println();return serverVersion;}", "n_tokens": 19, "n_pass": [147, 20, 15]}
{"time": "2021-02-14 15:43:33.519964", "score": "0.6807", "loss": "0.3952", "code": "ProtocolVersion getServerVersion()throws IOException{println();return serverVersion;}", "n_tokens": 18, "n_pass": [151, 21, 16]}

Minimal simplified code:
ProtocolVersion getServerVersion()throws IOException{println();return serverVersion;}

