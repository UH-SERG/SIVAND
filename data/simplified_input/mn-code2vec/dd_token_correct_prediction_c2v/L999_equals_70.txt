
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/bcgit__bc-java/prov/src/main/java/org/bouncycastle/pqc/jcajce/provider/xmss/BCXMSSPrivateKey_equals.java
method_name = equals
method_body = public boolean equals(Object o) { if (o == this) { return true; } if (o instanceof BCXMSSPrivateKey) { BCXMSSPrivateKey otherKey = (BCXMSSPrivateKey) o; return treeDigest.equals(otherKey.treeDigest) && Arrays.areEqual(keyParams.toByteArray(), otherKey.keyParams.toByteArray()); } return false; }
predict, score, loss = equals, 0.999396800994873, 0.0007914748275652528

Trace of simplified code(s):
{"time": "2021-02-16 13:20:54.133618", "score": "0.9994", "loss": "0.0008", "code": "public boolean equals(Object o) { if (o == this) { return true; } if (o instanceof BCXMSSPrivateKey) { BCXMSSPrivateKey otherKey = (BCXMSSPrivateKey) o; return treeDigest.equals(otherKey.treeDigest) && Arrays.areEqual(keyParams.toByteArray(), otherKey.keyParams.toByteArray()); } return false; }", "n_tokens": 101, "n_pass": [1, 1, 1]}
{"time": "2021-02-16 13:20:57.070731", "score": "0.9982", "loss": "0.0022", "code": "public boolean equals(Object o) {{ return true; } if (o instanceof BCXMSSPrivateKey) { BCXMSSPrivateKey otherKey = (BCXMSSPrivateKey) o; return treeDigest.equals(otherKey.treeDigest) && Arrays.areEqual(keyParams.toByteArray(), otherKey.keyParams.toByteArray()); } return false; }", "n_tokens": 89, "n_pass": [21, 2, 2]}
{"time": "2021-02-16 13:20:59.627399", "score": "0.3304", "loss": "1.5857", "code": "public boolean equals(Object o) {{ return true; } if (o instanceof BCXMSSPrivateKey) { BCXMSSPrivateKey otherKey = (BCXMSSPrivateKey)treeDigest.equals(otherKey.treeDigest) && Arrays.areEqual(keyParams.toByteArray(), otherKey.keyParams.toByteArray()); } return false; }", "n_tokens": 83, "n_pass": [48, 3, 3]}
{"time": "2021-02-16 13:21:02.198722", "score": "0.397", "loss": "1.301", "code": "public boolean equals(Object o) {{ return true; } if (o instanceof BCXMSSPrivateKey) { BCXMSSPrivateKey otherKey = (BCXMSSPrivateKey)(otherKey.treeDigest) && Arrays.areEqual(keyParams.toByteArray(), otherKey.keyParams.toByteArray()); } return false; }", "n_tokens": 80, "n_pass": [88, 4, 4]}
{"time": "2021-02-16 13:21:04.752887", "score": "0.7213", "loss": "0.6467", "code": "public boolean equals(Object o) {{ return true; } if (o instanceof BCXMSSPrivateKey) { BCXMSSPrivateKey otherKey = (BCXMSSPrivateKey)(otherKey.treeDigest) Arrays.areEqual(keyParams.toByteArray(), otherKey.keyParams.toByteArray()); } return false; }", "n_tokens": 77, "n_pass": [90, 5, 5]}
{"time": "2021-02-16 13:21:07.692691", "score": "0.4161", "loss": "1.5866", "code": "public boolean equals() {{ return true; } if (o instanceof BCXMSSPrivateKey) { BCXMSSPrivateKey otherKey = (BCXMSSPrivateKey)(otherKey.treeDigest) Arrays.areEqual(keyParams.toByteArray(), otherKey.keyParams.toByteArray()); } return false; }", "n_tokens": 74, "n_pass": [101, 6, 6]}
{"time": "2021-02-16 13:21:12.769564", "score": "0.2932", "loss": "2.1343", "code": "public boolean equals() {{ return true; } if (o instanceof BCXMSSPrivateKey) { BCXMSSPrivateKey otherKey = (otherKey.treeDigest) Arrays.areEqual(keyParams.toByteArray(), otherKey.keyParams.toByteArray()); } return false; }", "n_tokens": 71, "n_pass": [112, 8, 7]}
{"time": "2021-02-16 13:21:21.098514", "score": "0.5065", "loss": "0.9924", "code": "public boolean equals() {{ return true; } if (o instanceof BCXMSSPrivateKey) { BCXMSSPrivateKey = (otherKey.treeDigest) Arrays.areEqual(keyParams.toByteArray(), otherKey.keyParams.toByteArray()); } return false; }", "n_tokens": 69, "n_pass": [179, 10, 8]}
{"time": "2021-02-16 13:21:28.756204", "score": "0.4536", "loss": "1.7504", "code": "public boolean equals() {{ return true; } if (o instanceof BCXMSSPrivateKey) { BCXMSSPrivateKey = (otherKey.treeDigest) Arrays(keyParams.toByteArray(), otherKey.keyParams.toByteArray()); } return false; }", "n_tokens": 67, "n_pass": [185, 13, 9]}
{"time": "2021-02-16 13:21:31.316689", "score": "0.2985", "loss": "2.7461", "code": "public boolean equals() {{ return true; } if (o instanceof BCXMSSPrivateKey) { BCXMSSPrivateKey = (otherKey.treeDigest) Arrays(keyParams(), otherKey.keyParams.toByteArray()); } return false; }", "n_tokens": 65, "n_pass": [187, 14, 10]}
{"time": "2021-02-16 13:21:38.919767", "score": "0.5581", "loss": "1.5532", "code": "public boolean equals() {{ return true; } if (o instanceof BCXMSSPrivateKey) { BCXMSSPrivateKey = (otherKey.treeDigest) Arrays(keyParams(), otherKey.toByteArray()); } return false; }", "n_tokens": 63, "n_pass": [191, 17, 11]}
{"time": "2021-02-16 13:21:43.970146", "score": "0.5581", "loss": "1.5532", "code": " boolean equals() {{ return true; } if (o instanceof BCXMSSPrivateKey) { BCXMSSPrivateKey = (otherKey.treeDigest) Arrays(keyParams(), otherKey.toByteArray()); } return false; }", "n_tokens": 62, "n_pass": [199, 19, 12]}
{"time": "2021-02-16 13:21:46.488690", "score": "0.5581", "loss": "1.5532", "code": "boolean equals() {{ return true; } if (o instanceof BCXMSSPrivateKey) { BCXMSSPrivateKey = (otherKey.treeDigest) Arrays(keyParams(), otherKey.toByteArray()); } return false; }", "n_tokens": 61, "n_pass": [200, 20, 13]}
{"time": "2021-02-16 13:21:49.780518", "score": "0.5581", "loss": "1.5532", "code": "boolean equals(){{ return true; } if (o instanceof BCXMSSPrivateKey) { BCXMSSPrivateKey = (otherKey.treeDigest) Arrays(keyParams(), otherKey.toByteArray()); } return false; }", "n_tokens": 60, "n_pass": [206, 21, 14]}
{"time": "2021-02-16 13:21:52.318432", "score": "0.5581", "loss": "1.5532", "code": "boolean equals(){{return true; } if (o instanceof BCXMSSPrivateKey) { BCXMSSPrivateKey = (otherKey.treeDigest) Arrays(keyParams(), otherKey.toByteArray()); } return false; }", "n_tokens": 59, "n_pass": [209, 22, 15]}
{"time": "2021-02-16 13:21:54.877808", "score": "0.5581", "loss": "1.5532", "code": "boolean equals(){{ true; } if (o instanceof BCXMSSPrivateKey) { BCXMSSPrivateKey = (otherKey.treeDigest) Arrays(keyParams(), otherKey.toByteArray()); } return false; }", "n_tokens": 58, "n_pass": [210, 23, 16]}
{"time": "2021-02-16 13:21:57.514811", "score": "0.5581", "loss": "1.5532", "code": "boolean equals(){{true; } if (o instanceof BCXMSSPrivateKey) { BCXMSSPrivateKey = (otherKey.treeDigest) Arrays(keyParams(), otherKey.toByteArray()); } return false; }", "n_tokens": 57, "n_pass": [211, 24, 17]}
{"time": "2021-02-16 13:22:00.027708", "score": "0.5927", "loss": "1.4658", "code": "boolean equals(){{; } if (o instanceof BCXMSSPrivateKey) { BCXMSSPrivateKey = (otherKey.treeDigest) Arrays(keyParams(), otherKey.toByteArray()); } return false; }", "n_tokens": 56, "n_pass": [212, 25, 18]}
{"time": "2021-02-16 13:22:02.589609", "score": "0.5927", "loss": "1.4658", "code": "boolean equals(){{ } if (o instanceof BCXMSSPrivateKey) { BCXMSSPrivateKey = (otherKey.treeDigest) Arrays(keyParams(), otherKey.toByteArray()); } return false; }", "n_tokens": 55, "n_pass": [213, 26, 19]}
{"time": "2021-02-16 13:22:05.153996", "score": "0.5927", "loss": "1.4658", "code": "boolean equals(){{} if (o instanceof BCXMSSPrivateKey) { BCXMSSPrivateKey = (otherKey.treeDigest) Arrays(keyParams(), otherKey.toByteArray()); } return false; }", "n_tokens": 54, "n_pass": [214, 27, 20]}
{"time": "2021-02-16 13:22:10.225570", "score": "0.6276", "loss": "1.6679", "code": "boolean equals(){{} if (o instanceof BCXMSSPrivateKey) { BCXMSSPrivateKey = (otherKey.treeDigest) Arrays(keyParams, otherKey.toByteArray()); } return false; }", "n_tokens": 52, "n_pass": [229, 29, 21]}
{"time": "2021-02-16 13:22:12.762820", "score": "0.8252", "loss": "0.6178", "code": "boolean equals(){{} if (o instanceof BCXMSSPrivateKey) { BCXMSSPrivateKey = (otherKey.treeDigest) Arrays(keyParamsotherKey.toByteArray()); } return false; }", "n_tokens": 50, "n_pass": [230, 30, 22]}
{"time": "2021-02-16 13:22:15.304757", "score": "0.795", "loss": "0.4516", "code": "boolean equals(){{} if (o instanceof BCXMSSPrivateKey) { BCXMSSPrivateKey = (otherKey.treeDigest) Arrays(keyParamstoByteArray()); } return false; }", "n_tokens": 48, "n_pass": [231, 31, 23]}
{"time": "2021-02-16 13:22:23.666661", "score": "0.7547", "loss": "0.5443", "code": "boolean equals(){{} if (o instanceof BCXMSSPrivateKey) { BCXMSSPrivateKey = (otherKey.treeDigest)(keyParamstoByteArray()); } return false; }", "n_tokens": 46, "n_pass": [258, 34, 24]}
{"time": "2021-02-16 13:22:36.916477", "score": "0.7152", "loss": "0.6434", "code": "boolean equals(){{} if (o instanceof BCXMSSPrivateKey) { BCXMSSPrivateKey = (otherKey.treeDigest)(keyParams()); } return false; }", "n_tokens": 45, "n_pass": [324, 37, 25]}
{"time": "2021-02-16 13:22:39.444430", "score": "0.7152", "loss": "0.6434", "code": "boolean equals(){{} if (o instanceof BCXMSSPrivateKey) { BCXMSSPrivateKey = (otherKey.treeDigest)(keyParams());} return false; }", "n_tokens": 44, "n_pass": [328, 38, 26]}
{"time": "2021-02-16 13:22:41.964846", "score": "0.7152", "loss": "0.6434", "code": "boolean equals(){{} if (o instanceof BCXMSSPrivateKey) { BCXMSSPrivateKey = (otherKey.treeDigest)(keyParams());}return false; }", "n_tokens": 43, "n_pass": [330, 39, 27]}
{"time": "2021-02-16 13:22:52.160051", "score": "0.7152", "loss": "0.6434", "code": "boolean equals(){{} if (o instanceof BCXMSSPrivateKey) { BCXMSSPrivateKey = (otherKey.treeDigest)(keyParams());}return false;}", "n_tokens": 42, "n_pass": [335, 43, 28]}
{"time": "2021-02-16 13:22:55.451214", "score": "0.7152", "loss": "0.6434", "code": "boolean equals(){{}if (o instanceof BCXMSSPrivateKey) { BCXMSSPrivateKey = (otherKey.treeDigest)(keyParams());}return false;}", "n_tokens": 41, "n_pass": [345, 44, 29]}
{"time": "2021-02-16 13:22:57.975899", "score": "0.7152", "loss": "0.6434", "code": "boolean equals(){{}if(o instanceof BCXMSSPrivateKey) { BCXMSSPrivateKey = (otherKey.treeDigest)(keyParams());}return false;}", "n_tokens": 40, "n_pass": [347, 45, 30]}
{"time": "2021-02-16 13:23:00.510213", "score": "0.7152", "loss": "0.6434", "code": "boolean equals(){{}if(o instanceof BCXMSSPrivateKey){ BCXMSSPrivateKey = (otherKey.treeDigest)(keyParams());}return false;}", "n_tokens": 39, "n_pass": [355, 46, 31]}
{"time": "2021-02-16 13:23:03.028853", "score": "0.7152", "loss": "0.6434", "code": "boolean equals(){{}if(o instanceof BCXMSSPrivateKey){BCXMSSPrivateKey = (otherKey.treeDigest)(keyParams());}return false;}", "n_tokens": 38, "n_pass": [357, 47, 32]}
{"time": "2021-02-16 13:23:05.563957", "score": "0.7152", "loss": "0.6434", "code": "boolean equals(){{}if(o instanceof BCXMSSPrivateKey){BCXMSSPrivateKey= (otherKey.treeDigest)(keyParams());}return false;}", "n_tokens": 37, "n_pass": [359, 48, 33]}
{"time": "2021-02-16 13:23:08.127156", "score": "0.7152", "loss": "0.6434", "code": "boolean equals(){{}if(o instanceof BCXMSSPrivateKey){BCXMSSPrivateKey=(otherKey.treeDigest)(keyParams());}return false;}", "n_tokens": 36, "n_pass": [361, 49, 34]}

Minimal simplified code:
boolean equals(){{}if(o instanceof BCXMSSPrivateKey){BCXMSSPrivateKey=(otherKey.treeDigest)(keyParams());}return false;}

