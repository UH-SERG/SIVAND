
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/OpenRock__OpenAM/openam-shared/src/main/java/com/sun/identity/security/keystore/AMX509TrustManager_checkServerTrusted.java
method_name = checkServerTrusted
method_body = public void checkServerTrusted(X509Certificate[] chain, String authType) throws CertificateException { if (trustAllServerCerts) { return; } sunX509TrustManager.checkServerTrusted(chain, authType); }
predict, score, loss = checkServerTrusted, 0.9997923970222473, 0.00021264675888232887

Trace of simplified code(s):
{"time": "2021-02-15 00:39:05.485345", "score": "0.9998", "loss": "0.0002", "code": "public void checkServerTrusted(X509Certificate[] chain, String authType) throws CertificateException { if (trustAllServerCerts) { return; } sunX509TrustManager.checkServerTrusted(chain, authType); }", "n_tokens": 57, "n_pass": [1, 1, 1]}
{"time": "2021-02-15 00:39:08.535809", "score": "0.9974", "loss": "0.0026", "code": "public void checkServerTrusted(X509Certificate[] chain, String authType) { if (trustAllServerCerts) { return; } sunX509TrustManager.checkServerTrusted(chain, authType); }", "n_tokens": 53, "n_pass": [51, 2, 2]}
{"time": "2021-02-15 00:39:11.216149", "score": "0.9973", "loss": "0.0027", "code": "public void checkServerTrusted(X509Certificate[] chain, String authType) { if (trustAllServerCerts) { return; } TrustManager.checkServerTrusted(chain, authType); }", "n_tokens": 49, "n_pass": [56, 3, 3]}
{"time": "2021-02-15 00:39:13.902491", "score": "0.9827", "loss": "0.0175", "code": "public void checkServerTrusted(X509Certificate[] chain, String authType) { if (trustAllServerCerts) { return; } TrustManager.checkServerTrusted(); }", "n_tokens": 45, "n_pass": [58, 4, 4]}
{"time": "2021-02-15 00:39:18.052173", "score": "0.9827", "loss": "0.0175", "code": " void checkServerTrusted(X509Certificate[] chain, String authType) { if (trustAllServerCerts) { return; } TrustManager.checkServerTrusted(); }", "n_tokens": 44, "n_pass": [100, 5, 5]}
{"time": "2021-02-15 00:39:20.759805", "score": "0.9827", "loss": "0.0175", "code": "void checkServerTrusted(X509Certificate[] chain, String authType) { if (trustAllServerCerts) { return; } TrustManager.checkServerTrusted(); }", "n_tokens": 43, "n_pass": [101, 6, 6]}
{"time": "2021-02-15 00:39:23.882200", "score": "0.9827", "loss": "0.0175", "code": "void checkServerTrusted(X9Certificate[] chain, String authType) { if (trustAllServerCerts) { return; } TrustManager.checkServerTrusted(); }", "n_tokens": 41, "n_pass": [106, 7, 7]}
{"time": "2021-02-15 00:39:26.535914", "score": "0.9939", "loss": "0.0062", "code": "void checkServerTrusted(X[] chain, String authType) { if (trustAllServerCerts) { return; } TrustManager.checkServerTrusted(); }", "n_tokens": 39, "n_pass": [107, 8, 8]}
{"time": "2021-02-15 00:39:29.153109", "score": "0.9945", "loss": "0.0056", "code": "void checkServerTrusted(X chain, String authType) { if (trustAllServerCerts) { return; } TrustManager.checkServerTrusted(); }", "n_tokens": 37, "n_pass": [108, 9, 9]}
{"time": "2021-02-15 00:39:31.803020", "score": "0.9945", "loss": "0.0056", "code": "void checkServerTrusted(X chain, String authType) { if (trustAllServerCerts) {; } TrustManager.checkServerTrusted(); }", "n_tokens": 35, "n_pass": [118, 10, 10]}
{"time": "2021-02-15 00:39:34.452595", "score": "0.9945", "loss": "0.0056", "code": "void checkServerTrusted(X chain, String authType) { if (trustAllServerCerts) {} TrustManager.checkServerTrusted(); }", "n_tokens": 33, "n_pass": [119, 11, 11]}
{"time": "2021-02-15 00:39:37.068390", "score": "0.9931", "loss": "0.007", "code": "void checkServerTrusted(X chain, String authType) { if (trustAllServerCerts) {} checkServerTrusted(); }", "n_tokens": 31, "n_pass": [121, 12, 12]}
{"time": "2021-02-15 00:39:44.166149", "score": "0.9931", "loss": "0.007", "code": "void checkServerTrusted(X chain, String authType) { if (trustAllServerCerts) {} checkServerTrusted();}", "n_tokens": 30, "n_pass": [170, 13, 13]}
{"time": "2021-02-15 00:39:47.627989", "score": "0.9931", "loss": "0.007", "code": "void checkServerTrusted(X chain,String authType) { if (trustAllServerCerts) {} checkServerTrusted();}", "n_tokens": 29, "n_pass": [179, 14, 14]}
{"time": "2021-02-15 00:39:50.528484", "score": "0.9931", "loss": "0.007", "code": "void checkServerTrusted(X chain,String authType){ if (trustAllServerCerts) {} checkServerTrusted();}", "n_tokens": 28, "n_pass": [184, 15, 15]}
{"time": "2021-02-15 00:39:53.181134", "score": "0.9931", "loss": "0.007", "code": "void checkServerTrusted(X chain,String authType){if (trustAllServerCerts) {} checkServerTrusted();}", "n_tokens": 27, "n_pass": [186, 16, 16]}
{"time": "2021-02-15 00:39:55.800975", "score": "0.9931", "loss": "0.007", "code": "void checkServerTrusted(X chain,String authType){if(trustAllServerCerts) {} checkServerTrusted();}", "n_tokens": 26, "n_pass": [188, 17, 17]}
{"time": "2021-02-15 00:39:58.418271", "score": "0.9931", "loss": "0.007", "code": "void checkServerTrusted(X chain,String authType){if(trustAllServerCerts){} checkServerTrusted();}", "n_tokens": 25, "n_pass": [192, 18, 18]}
{"time": "2021-02-15 00:40:01.060953", "score": "0.9931", "loss": "0.007", "code": "void checkServerTrusted(X chain,String authType){if(trustAllServerCerts){}checkServerTrusted();}", "n_tokens": 24, "n_pass": [195, 19, 19]}

Minimal simplified code:
void checkServerTrusted(X chain,String authType){if(trustAllServerCerts){}checkServerTrusted();}

