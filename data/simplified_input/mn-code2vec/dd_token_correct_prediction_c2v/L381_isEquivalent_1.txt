
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/58code__Oceanus/oceanus-all/oceanus-exchange/oceanus-exchange-sqlparser/src/main/java/com/bj58/sql/parser/TernaryOperatorNode_isEquivalent.java
method_name = isEquivalent
method_body = protected boolean isEquivalent(ValueNode o) throws StandardException { if (isSameNodeType(o)) { TernaryOperatorNode other = (TernaryOperatorNode) o; return (other.methodName.equals(methodName) && other.receiver.isEquivalent(receiver) && other.leftOperand.isEquivalent(leftOperand) && ((rightOperand == null && other.rightOperand == null) || (other.rightOperand != null && other.rightOperand.isEquivalent(rightOperand)))); } return false; }
predict, score, loss = isEquivalent, 0.9999997615814209, 3.576278118089249e-07

Trace of simplified code(s):
{"time": "2021-02-14 17:16:33.111697", "score": "1.0", "loss": "0.0", "code": "protected boolean isEquivalent(ValueNode o) throws StandardException { if (isSameNodeType(o)) { TernaryOperatorNode other = (TernaryOperatorNode) o; return (other.methodName.equals(methodName) && other.receiver.isEquivalent(receiver) && other.leftOperand.isEquivalent(leftOperand) && ((rightOperand == null && other.rightOperand == null) || (other.rightOperand != null && other.rightOperand.isEquivalent(rightOperand)))); } return false; }", "n_tokens": 139, "n_pass": [1, 1, 1]}
{"time": "2021-02-14 17:16:35.812061", "score": "1.0", "loss": "0.0", "code": "protected boolean isEquivalent(ValueNode o) throws StandardException { if (isSameNodeType(o)) { TernaryOperatorNode other = (TernaryOperatorNode) o; return (other.methodName.equalsreceiver.isEquivalent(receiver) && other.leftOperand.isEquivalent(leftOperand) && ((rightOperand == null && other.rightOperand == null) || (other.rightOperand != null && other.rightOperand.isEquivalent(rightOperand)))); } return false; }", "n_tokens": 130, "n_pass": [50, 2, 2]}
{"time": "2021-02-14 17:16:38.489790", "score": "1.0", "loss": "0.0", "code": "protected boolean isEquivalent(ValueNode o) throws StandardException { if (isSameNodeType(o)) { TernaryOperatorNode other = (TernaryOperatorNode) o; return (other.methodName.equalsreceiver.isEquivalent(receiver) && other.leftOperand.isEquivalent(leftOperand) && ((rightOperand =rightOperand == null) || (other.rightOperand != null && other.rightOperand.isEquivalent(rightOperand)))); } return false; }", "n_tokens": 121, "n_pass": [54, 3, 3]}
{"time": "2021-02-14 17:16:41.190505", "score": "1.0", "loss": "0.0", "code": "protected boolean isEquivalent(ValueNode o) throws StandardException { if (isSameNodeType(o)) { TernaryOperatorNode other = (TernaryOperatorNode) o; return (other.methodName.equalsreceiver.isEquivalent(receiver) && other.leftOperand.isEquivalent(leftOperand) && ((rightOperand =null) || (other.rightOperand != null && other.rightOperand.isEquivalent(rightOperand)))); } return false; }", "n_tokens": 116, "n_pass": [98, 4, 4]}
{"time": "2021-02-14 17:16:43.853431", "score": "1.0", "loss": "0.0", "code": "protected boolean isEquivalent(ValueNode o) throws StandardException { if (isSameNodeType(o)) { TernaryOperatorNode other = (TernaryOperatorNode) o; return (other.methodName.equalsreceiver.isEquivalent(receiver) && other.leftOperand.isEquivalent(leftOperand) && ((rightOperand =null) || (other.rightOperand && other.rightOperand.isEquivalent(rightOperand)))); } return false; }", "n_tokens": 111, "n_pass": [101, 5, 5]}
{"time": "2021-02-14 17:16:46.514685", "score": "1.0", "loss": "0.0", "code": "protected boolean isEquivalent(ValueNode o) throws StandardException { if (isSameNodeType(o)) { TernaryOperatorNode other = (TernaryOperatorNode) o; return (other.methodName.equalsreceiver.isEquivalent(receiver) && other.leftOperand.isEquivalent(leftOperand) && ((rightOperand =null) || (other.rightOperand.rightOperand.isEquivalent(rightOperand)))); } return false; }", "n_tokens": 106, "n_pass": [102, 6, 6]}
{"time": "2021-02-14 17:16:49.639569", "score": "1.0", "loss": "0.0", "code": "protected boolean isEquivalent(ValueNode o) throws StandardException { if (isSameNodeType(o)) { TernaryOperatorNode other = (TernaryOperatorNode) o; return (equalsreceiver.isEquivalent(receiver) && other.leftOperand.isEquivalent(leftOperand) && ((rightOperand =null) || (other.rightOperand.rightOperand.isEquivalent(rightOperand)))); } return false; }", "n_tokens": 102, "n_pass": [118, 7, 7]}
{"time": "2021-02-14 17:16:52.296415", "score": "1.0", "loss": "0.0", "code": "protected boolean isEquivalent(ValueNode o) throws StandardException { if (isSameNodeType(o)) { TernaryOperatorNode other = (TernaryOperatorNode) o; return ((receiver) && other.leftOperand.isEquivalent(leftOperand) && ((rightOperand =null) || (other.rightOperand.rightOperand.isEquivalent(rightOperand)))); } return false; }", "n_tokens": 98, "n_pass": [119, 8, 8]}
{"time": "2021-02-14 17:16:54.946863", "score": "1.0", "loss": "0.0", "code": "protected boolean isEquivalent(ValueNode o) throws StandardException { if (isSameNodeType(o)) { TernaryOperatorNode other = (TernaryOperatorNode) o; return ((receiver) .leftOperand.isEquivalent(leftOperand) && ((rightOperand =null) || (other.rightOperand.rightOperand.isEquivalent(rightOperand)))); } return false; }", "n_tokens": 94, "n_pass": [121, 9, 9]}
{"time": "2021-02-14 17:16:57.610734", "score": "1.0", "loss": "0.0", "code": "protected boolean isEquivalent(ValueNode o) throws StandardException { if (isSameNodeType(o)) { TernaryOperatorNode other = (TernaryOperatorNode) o; return ((receiver) (leftOperand) && ((rightOperand =null) || (other.rightOperand.rightOperand.isEquivalent(rightOperand)))); } return false; }", "n_tokens": 90, "n_pass": [122, 10, 10]}
{"time": "2021-02-14 17:17:00.264226", "score": "1.0", "loss": "0.0", "code": "protected boolean isEquivalent(ValueNode o) throws StandardException { if (isSameNodeType(o)) { TernaryOperatorNode other = (TernaryOperatorNode) o; return ((receiver) && ((rightOperand =null) || (other.rightOperand.rightOperand.isEquivalent(rightOperand)))); } return false; }", "n_tokens": 86, "n_pass": [123, 11, 11]}
{"time": "2021-02-14 17:17:03.348253", "score": "1.0", "loss": "0.0", "code": "protected boolean isEquivalent(ValueNode o) throws StandardException { if (isSameNodeType(o)) { TernaryOperatorNode other = (TernaryOperatorNode) o; return ((receiver)  ((rightOperand =null) || (other.rightOperand.rightOperand.isEquivalent(rightOperand)))); } return false; }", "n_tokens": 84, "n_pass": [184, 12, 12]}
{"time": "2021-02-14 17:17:06.003831", "score": "1.0", "loss": "0.0", "code": "protected boolean isEquivalent(ValueNode o) throws StandardException { if (isSameNodeType(o)) { TernaryOperatorNode other = (TernaryOperatorNode) o; return ((receiver)  ((rightOperandnull) || (other.rightOperand.rightOperand.isEquivalent(rightOperand)))); } return false; }", "n_tokens": 82, "n_pass": [186, 13, 13]}
{"time": "2021-02-14 17:17:08.654936", "score": "1.0", "loss": "0.0", "code": "protected boolean isEquivalent(ValueNode o) throws StandardException { if (isSameNodeType(o)) { TernaryOperatorNode other = (TernaryOperatorNode) o; return ((receiver)  ((rightOperandnull)| (other.rightOperand.rightOperand.isEquivalent(rightOperand)))); } return false; }", "n_tokens": 80, "n_pass": [188, 14, 14]}
{"time": "2021-02-14 17:17:11.310136", "score": "1.0", "loss": "0.0", "code": "protected boolean isEquivalent(ValueNode o) throws StandardException { if (isSameNodeType(o)) { TernaryOperatorNode other = (TernaryOperatorNode) o; return ((receiver)  ((rightOperandnull)(other.rightOperand.rightOperand.isEquivalent(rightOperand)))); } return false; }", "n_tokens": 78, "n_pass": [189, 15, 15]}
{"time": "2021-02-14 17:17:13.954831", "score": "1.0", "loss": "0.0", "code": "protected boolean isEquivalent(ValueNode o) throws StandardException { if (isSameNodeType(o)) { TernaryOperatorNode other = (TernaryOperatorNode) o; return ((receiver)  ((rightOperandnull)(other.rightOperand.isEquivalent(rightOperand)))); } return false; }", "n_tokens": 76, "n_pass": [191, 16, 16]}
{"time": "2021-02-14 17:17:16.596566", "score": "1.0", "loss": "0.0", "code": "protected boolean isEquivalent(ValueNode o) throws StandardException { if (isSameNodeType(o)) { TernaryOperatorNode other = (TernaryOperatorNode) o; return ((receiver)  ((rightOperandnull)(other.isEquivalent(rightOperand)))); } return false; }", "n_tokens": 74, "n_pass": [192, 17, 17]}
{"time": "2021-02-14 17:17:19.253937", "score": "1.0", "loss": "0.0", "code": "protected boolean isEquivalent(ValueNode o) throws StandardException { if (isSameNodeType(o)) { TernaryOperatorNode other = (TernaryOperatorNode) o; return ((receiver)  ((rightOperandnull)(other.isEquivalent(rightOperand)))); } ; }", "n_tokens": 71, "n_pass": [197, 18, 18]}
{"time": "2021-02-14 17:17:21.894372", "score": "1.0", "loss": "0.0", "code": "boolean isEquivalent(ValueNode o) throws StandardException { if (isSameNodeType(o)) { TernaryOperatorNode other = (TernaryOperatorNode) o; return ((receiver)  ((rightOperandnull)(other.isEquivalent(rightOperand)))); } ; }", "n_tokens": 69, "n_pass": [199, 19, 19]}
{"time": "2021-02-14 17:17:24.955456", "score": "1.0", "loss": "0.0", "code": "boolean isEquivalent(ValueNode o) throws StandardException { if (isSameNodeType(o)) { other = (TernaryOperatorNode) o; return ((receiver)  ((rightOperandnull)(other.isEquivalent(rightOperand)))); } ; }", "n_tokens": 67, "n_pass": [213, 20, 20]}
{"time": "2021-02-14 17:17:27.606269", "score": "1.0", "loss": "0.0", "code": "boolean isEquivalent(ValueNode o) throws StandardException { if (isSameNodeType(o)) { other = (TernaryOperatorNode) o; ((receiver)  ((rightOperandnull)(other.isEquivalent(rightOperand)))); } ; }", "n_tokens": 65, "n_pass": [219, 21, 21]}
{"time": "2021-02-14 17:17:30.663154", "score": "1.0", "loss": "0.0", "code": "boolean isEquivalent(ValueNode o) throws StandardException { if (isSameNodeType(o)) { other = (TernaryOperatorNode)  ((receiver)  ((rightOperandnull)(other.isEquivalent(rightOperand)))); } ; }", "n_tokens": 63, "n_pass": [249, 22, 22]}
{"time": "2021-02-14 17:17:39.735185", "score": "1.0", "loss": "0.0", "code": "boolean isEquivalent(ValueNode o) throws StandardException { if (isSameNodeType(o)) { other = (TernaryOperatorNode) ((receiver)  ((rightOperandnull)(other.isEquivalent(rightOperand)))); } ; }", "n_tokens": 62, "n_pass": [337, 23, 23]}
{"time": "2021-02-14 17:17:42.390877", "score": "1.0", "loss": "0.0", "code": "boolean isEquivalent(ValueNode o) throws StandardException { if (isSameNodeType(o)) { other = (TernaryOperatorNode) ((receiver) ((rightOperandnull)(other.isEquivalent(rightOperand)))); } ; }", "n_tokens": 61, "n_pass": [341, 24, 24]}
{"time": "2021-02-14 17:17:45.051392", "score": "1.0", "loss": "0.0", "code": "boolean isEquivalent(ValueNode o) throws StandardException { if (isSameNodeType(o)) { other = (TernaryOperatorNode) ((receiver)((rightOperandnull)(other.isEquivalent(rightOperand)))); } ; }", "n_tokens": 60, "n_pass": [342, 25, 25]}
{"time": "2021-02-14 17:17:47.682992", "score": "1.0", "loss": "0.0", "code": "boolean isEquivalent(ValueNode o) throws StandardException { if (isSameNodeType(o)) { other = (TernaryOperatorNode) ((receiver)((rightOperand)(other.isEquivalent(rightOperand)))); } ; }", "n_tokens": 59, "n_pass": [346, 26, 26]}
{"time": "2021-02-14 17:17:50.319071", "score": "1.0", "loss": "0.0", "code": "boolean isEquivalent(ValueNode o) throws StandardException { if (isSameNodeType(o)) { other = (TernaryOperatorNode) ((receiver)((rightOperand)(otherisEquivalent(rightOperand)))); } ; }", "n_tokens": 58, "n_pass": [350, 27, 27]}
{"time": "2021-02-14 17:17:52.942620", "score": "1.0", "loss": "0.0", "code": "boolean isEquivalent(ValueNode o) throws StandardException { if (isSameNodeType(o)) { other = (TernaryOperatorNode) ((receiver)((rightOperand)(other(rightOperand)))); } ; }", "n_tokens": 57, "n_pass": [351, 28, 28]}
{"time": "2021-02-14 17:17:55.574512", "score": "1.0", "loss": "0.0", "code": "boolean isEquivalent(ValueNode o) throws StandardException { if (isSameNodeType(o)) { other = (TernaryOperatorNode) ((receiver)((rightOperand)(other()))); } ; }", "n_tokens": 56, "n_pass": [353, 29, 29]}
{"time": "2021-02-14 17:17:58.204911", "score": "1.0", "loss": "0.0", "code": "boolean isEquivalent(ValueNode o) throws StandardException { if (isSameNodeType(o)) { other = (TernaryOperatorNode) ((receiver)((rightOperand)(other()))); } }", "n_tokens": 54, "n_pass": [358, 30, 30]}
{"time": "2021-02-14 17:18:01.654548", "score": "1.0", "loss": "0.0", "code": "boolean isEquivalent(ValueNode o)throws StandardException { if (isSameNodeType(o)) { other = (TernaryOperatorNode) ((receiver)((rightOperand)(other()))); } }", "n_tokens": 53, "n_pass": [368, 31, 31]}
{"time": "2021-02-14 17:18:04.286865", "score": "1.0", "loss": "0.0", "code": "boolean isEquivalent(ValueNode o)throws StandardException{ if (isSameNodeType(o)) { other = (TernaryOperatorNode) ((receiver)((rightOperand)(other()))); } }", "n_tokens": 52, "n_pass": [372, 32, 32]}
{"time": "2021-02-14 17:18:06.929168", "score": "1.0", "loss": "0.0", "code": "boolean isEquivalent(ValueNode o)throws StandardException{if (isSameNodeType(o)) { other = (TernaryOperatorNode) ((receiver)((rightOperand)(other()))); } }", "n_tokens": 51, "n_pass": [374, 33, 33]}
{"time": "2021-02-14 17:18:09.558085", "score": "1.0", "loss": "0.0", "code": "boolean isEquivalent(ValueNode o)throws StandardException{if(isSameNodeType(o)) { other = (TernaryOperatorNode) ((receiver)((rightOperand)(other()))); } }", "n_tokens": 50, "n_pass": [376, 34, 34]}
{"time": "2021-02-14 17:18:14.801883", "score": "1.0", "loss": "0.0", "code": "boolean isEquivalent(ValueNode o)throws StandardException{if(isSameNodeType()) { other = (TernaryOperatorNode) ((receiver)((rightOperand)(other()))); } }", "n_tokens": 49, "n_pass": [380, 36, 35]}
{"time": "2021-02-14 17:18:17.427631", "score": "1.0", "loss": "0.0", "code": "boolean isEquivalent(ValueNode o)throws StandardException{if(isSameNodeType()){ other = (TernaryOperatorNode) ((receiver)((rightOperand)(other()))); } }", "n_tokens": 48, "n_pass": [383, 37, 36]}
{"time": "2021-02-14 17:18:20.058284", "score": "1.0", "loss": "0.0", "code": "boolean isEquivalent(ValueNode o)throws StandardException{if(isSameNodeType()){other = (TernaryOperatorNode) ((receiver)((rightOperand)(other()))); } }", "n_tokens": 47, "n_pass": [385, 38, 37]}
{"time": "2021-02-14 17:18:22.699216", "score": "1.0", "loss": "0.0", "code": "boolean isEquivalent(ValueNode o)throws StandardException{if(isSameNodeType()){other= (TernaryOperatorNode) ((receiver)((rightOperand)(other()))); } }", "n_tokens": 46, "n_pass": [387, 39, 38]}
{"time": "2021-02-14 17:18:25.344534", "score": "1.0", "loss": "0.0", "code": "boolean isEquivalent(ValueNode o)throws StandardException{if(isSameNodeType()){other=(TernaryOperatorNode) ((receiver)((rightOperand)(other()))); } }", "n_tokens": 45, "n_pass": [389, 40, 39]}
{"time": "2021-02-14 17:18:27.976177", "score": "1.0", "loss": "0.0", "code": "boolean isEquivalent(ValueNode o)throws StandardException{if(isSameNodeType()){other=(TernaryOperatorNode)((receiver)((rightOperand)(other()))); } }", "n_tokens": 44, "n_pass": [393, 41, 40]}
{"time": "2021-02-14 17:18:32.593460", "score": "1.0", "loss": "0.0", "code": "boolean isEquivalent(ValueNode o)throws StandardException{if(isSameNodeType()){other=(TernaryOperatorNode)((receiver)((rightOperand)(other())));} }", "n_tokens": 43, "n_pass": [446, 42, 41]}
{"time": "2021-02-14 17:18:35.225851", "score": "1.0", "loss": "0.0", "code": "boolean isEquivalent(ValueNode o)throws StandardException{if(isSameNodeType()){other=(TernaryOperatorNode)((receiver)((rightOperand)(other())));}}", "n_tokens": 42, "n_pass": [447, 43, 42]}

Minimal simplified code:
boolean isEquivalent(ValueNode o)throws StandardException{if(isSameNodeType()){other=(TernaryOperatorNode)((receiver)((rightOperand)(other())));}}

