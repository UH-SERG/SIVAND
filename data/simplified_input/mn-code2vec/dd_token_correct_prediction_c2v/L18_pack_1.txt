
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/dronekit__dronekit-android/dependencyLibs/Mavlink/src/com/MAVLink/common/msg_home_position_pack.java
method_name = pack
method_body = public MAVLinkPacket pack() { MAVLinkPacket packet = new MAVLinkPacket(MAVLINK_MSG_LENGTH); packet.sysid = 255; packet.compid = 190; packet.msgid = MAVLINK_MSG_ID_HOME_POSITION; packet.payload.putInt(latitude); packet.payload.putInt(longitude); packet.payload.putInt(altitude); packet.payload.putFloat(x); packet.payload.putFloat(y); packet.payload.putFloat(z); for (int i = 0; i < q.length; i++) { packet.payload.putFloat(q[i]); } packet.payload.putFloat(approach_x); packet.payload.putFloat(approach_y); packet.payload.putFloat(approach_z); return packet; }
predict, score, loss = pack, 0.9999994039535522, 8.344646857949556e-07

Trace of simplified code(s):
{"time": "2021-02-14 05:22:27.085104", "score": "1.0", "loss": "0.0", "code": "public MAVLinkPacket pack() { MAVLinkPacket packet = new MAVLinkPacket(MAVLINK_MSG_LENGTH); packet.sysid = 255; packet.compid = 190; packet.msgid = MAVLINK_MSG_ID_HOME_POSITION; packet.payload.putInt(latitude); packet.payload.putInt(longitude); packet.payload.putInt(altitude); packet.payload.putFloat(x); packet.payload.putFloat(y); packet.payload.putFloat(z); for (int i = 0; i < q.length; i++) { packet.payload.putFloat(q[i]); } packet.payload.putFloat(approach_x); packet.payload.putFloat(approach_y); packet.payload.putFloat(approach_z); return packet; }", "n_tokens": 212, "n_pass": [1, 1, 1]}
{"time": "2021-02-14 05:22:29.814938", "score": "0.9987", "loss": "0.0021", "code": "public MAVLinkPacket pack() { MAVLinkPacket packet; packet.sysid = 255; packet.compid = 190; packet.msgid = MAVLINK_MSG_ID_HOME_POSITION; packet.payload.putInt(latitude); packet.payload.putInt(longitude); packet.payload.putInt(altitude); packet.payload.putFloat(x); packet.payload.putFloat(y); packet.payload.putFloat(z); for (int i = 0; i < q.length; i++) { packet.payload.putFloat(q[i]); } packet.payload.putFloat(approach_x); packet.payload.putFloat(approach_y); packet.payload.putFloat(approach_z); return packet; }", "n_tokens": 199, "n_pass": [45, 2, 2]}
{"time": "2021-02-14 05:22:32.507600", "score": "0.9793", "loss": "0.0218", "code": "public MAVLinkPacket pack() { MAVLinkPacket packet; packet.sysid = 255; msgid = MAVLINK_MSG_ID_HOME_POSITION; packet.payload.putInt(latitude); packet.payload.putInt(longitude); packet.payload.putInt(altitude); packet.payload.putFloat(x); packet.payload.putFloat(y); packet.payload.putFloat(z); for (int i = 0; i < q.length; i++) { packet.payload.putFloat(q[i]); } packet.payload.putFloat(approach_x); packet.payload.putFloat(approach_y); packet.payload.putFloat(approach_z); return packet; }", "n_tokens": 186, "n_pass": [47, 3, 3]}
{"time": "2021-02-14 05:22:35.194762", "score": "0.9929", "loss": "0.0083", "code": "public MAVLinkPacket pack() { MAVLinkPacket packet; packet.sysid = 255; ; packet.payload.putInt(latitude); packet.payload.putInt(longitude); packet.payload.putInt(altitude); packet.payload.putFloat(x); packet.payload.putFloat(y); packet.payload.putFloat(z); for (int i = 0; i < q.length; i++) { packet.payload.putFloat(q[i]); } packet.payload.putFloat(approach_x); packet.payload.putFloat(approach_y); packet.payload.putFloat(approach_z); return packet; }", "n_tokens": 173, "n_pass": [48, 4, 4]}
{"time": "2021-02-14 05:22:37.879410", "score": "0.9987", "loss": "0.0018", "code": "public MAVLinkPacket pack() { MAVLinkPacket packet; packet.sysid = 255; ; packet.payload.putInt(latitude); packetputInt(altitude); packet.payload.putFloat(x); packet.payload.putFloat(y); packet.payload.putFloat(z); for (int i = 0; i < q.length; i++) { packet.payload.putFloat(q[i]); } packet.payload.putFloat(approach_x); packet.payload.putFloat(approach_y); packet.payload.putFloat(approach_z); return packet; }", "n_tokens": 160, "n_pass": [50, 5, 5]}
{"time": "2021-02-14 05:22:40.564883", "score": "0.9982", "loss": "0.0022", "code": "public MAVLinkPacket pack() { MAVLinkPacket packet; packet.sysid = 255; ; packet.payload.putInt(latitude); packetputInt(altitude); packet.payload.putFloat(x); packet.payload.putFloat(y); packet.payload.putFloat(z); for (int i = 0; i < q.length; i++) { packet.payload.putFloat(q[i]); } payload.putFloat(approach_y); packet.payload.putFloat(approach_z); return packet; }", "n_tokens": 146, "n_pass": [57, 6, 6]}
{"time": "2021-02-14 05:22:43.245753", "score": "0.9959", "loss": "0.0054", "code": "public MAVLinkPacket pack() { MAVLinkPacket packet; packet.sysid = 255; ; packet.payload.putInt(latitude); packetputInt(altitude); packet.payload.putFloat(x); packet.payload.putFloat(y); packet.payload.putFloat(z); for (int i = 0; i < q.length; i++) { packet.payload.putFloat(q[i]); } putFloat(approach_z); return packet; }", "n_tokens": 132, "n_pass": [58, 7, 7]}
{"time": "2021-02-14 05:22:45.926685", "score": "0.978", "loss": "0.0244", "code": "public MAVLinkPacket pack() { MAVLinkPacket packet; packet.payload.putInt(latitude); packetputInt(altitude); packet.payload.putFloat(x); packet.payload.putFloat(y); packet.payload.putFloat(z); for (int i = 0; i < q.length; i++) { packet.payload.putFloat(q[i]); } putFloat(approach_z); return packet; }", "n_tokens": 119, "n_pass": [61, 8, 8]}
{"time": "2021-02-14 05:22:48.630247", "score": "0.8621", "loss": "0.1511", "code": "public MAVLinkPacket pack() { MAVLinkPacket .putInt(latitude); packetputInt(altitude); packet.payload.putFloat(x); packet.payload.putFloat(y); packet.payload.putFloat(z); for (int i = 0; i < q.length; i++) { packet.payload.putFloat(q[i]); } putFloat(approach_z); return packet; }", "n_tokens": 113, "n_pass": [89, 9, 9]}
{"time": "2021-02-14 05:22:51.314160", "score": "0.9629", "loss": "0.039", "code": "public MAVLinkPacket pack() { MAVLinkPacket .putInt(latitude);; packet.payload.putFloat(x); packet.payload.putFloat(y); packet.payload.putFloat(z); for (int i = 0; i < q.length; i++) { packet.payload.putFloat(q[i]); } putFloat(approach_z); return packet; }", "n_tokens": 107, "n_pass": [91, 10, 10]}
{"time": "2021-02-14 05:22:53.986638", "score": "0.9982", "loss": "0.0023", "code": "public MAVLinkPacket pack() { MAVLinkPacket .putInt(latitude);putFloat(x); packet.payload.putFloat(y); packet.payload.putFloat(z); for (int i = 0; i < q.length; i++) { packet.payload.putFloat(q[i]); } putFloat(approach_z); return packet; }", "n_tokens": 101, "n_pass": [92, 11, 11]}
{"time": "2021-02-14 05:22:56.650683", "score": "0.9966", "loss": "0.0036", "code": "public MAVLinkPacket pack() { MAVLinkPacket .putInt(latitude);packet.payload.putFloat(y); packet.payload.putFloat(z); for (int i = 0; i < q.length; i++) { packet.payload.putFloat(q[i]); } putFloat(approach_z); return packet; }", "n_tokens": 95, "n_pass": [93, 12, 12]}
{"time": "2021-02-14 05:22:59.323191", "score": "0.9976", "loss": "0.0026", "code": "public MAVLinkPacket pack() { MAVLinkPacket .putInt(latitude);packet.payload.putFloat(y); packet.payload.putFloat(z); for (int i = 0; i < q.length; i++) { packet.payload.putFloat(q[i]); }  return packet; }", "n_tokens": 88, "n_pass": [103, 13, 13]}
{"time": "2021-02-14 05:23:02.004250", "score": "0.9984", "loss": "0.0018", "code": "public MAVLinkPacket pack() { MAVLinkPacket .putInt(latitude);packet.payload.putFloat(y); packet.payload.putFloat(z); for (int i = 0; i < q.length; i++) { packet.payload.putFloat(q[i]); }packet; }", "n_tokens": 84, "n_pass": [143, 14, 14]}
{"time": "2021-02-14 05:23:05.069108", "score": "0.9974", "loss": "0.0028", "code": "public MAVLinkPacket pack() { MAVLinkPacket .putInt(latitude);packet.payload.putFloat(y);payload.putFloat(z); for (int i = 0; i < q.length; i++) { packet.payload.putFloat(q[i]); }packet; }", "n_tokens": 81, "n_pass": [154, 15, 15]}
{"time": "2021-02-14 05:23:07.720302", "score": "0.9994", "loss": "0.0008", "code": "public MAVLinkPacket pack() { MAVLinkPacket .putInt(latitude);packet.payload.putFloat(y);(z); for (int i = 0; i < q.length; i++) { packet.payload.putFloat(q[i]); }packet; }", "n_tokens": 78, "n_pass": [155, 16, 16]}
{"time": "2021-02-14 05:23:10.371360", "score": "0.9994", "loss": "0.0008", "code": "public MAVLinkPacket pack() { MAVLinkPacket .putInt(latitude);packet.payload.putFloat(y);; for (int i = 0; i < q.length; i++) { packet.payload.putFloat(q[i]); }packet; }", "n_tokens": 75, "n_pass": [156, 17, 17]}
{"time": "2021-02-14 05:23:13.055779", "score": "0.9994", "loss": "0.0007", "code": "public MAVLinkPacket pack() { MAVLinkPacket .putInt(latitude);packet.payload.putFloat(y);; for (int i ; i < q.length; i++) { packet.payload.putFloat(q[i]); }packet; }", "n_tokens": 72, "n_pass": [160, 18, 18]}
{"time": "2021-02-14 05:23:15.708207", "score": "0.9965", "loss": "0.0038", "code": "public MAVLinkPacket pack() { MAVLinkPacket .putInt(latitude);packet.payload.putFloat(y);; for (int i ; i < q.length; i++) { packet.payload.putFloat(); }packet; }", "n_tokens": 68, "n_pass": [167, 19, 19]}
{"time": "2021-02-14 05:23:21.403660", "score": "0.9965", "loss": "0.0038", "code": "public MAVLinkPacket pack() { MAVLinkPacket .putInt(latitude);packet.payload.putFloat(y);; for (int i ; i < q.length; i++) { packet.payload.putFloat(); } }", "n_tokens": 66, "n_pass": [230, 20, 20]}
{"time": "2021-02-14 05:23:24.058440", "score": "0.9965", "loss": "0.0038", "code": " MAVLinkPacket pack() { MAVLinkPacket .putInt(latitude);packet.payload.putFloat(y);; for (int i ; i < q.length; i++) { packet.payload.putFloat(); } }", "n_tokens": 65, "n_pass": [231, 21, 21]}
{"time": "2021-02-14 05:23:26.729499", "score": "0.9965", "loss": "0.0038", "code": "MAVLinkPacket pack() { MAVLinkPacket .putInt(latitude);packet.payload.putFloat(y);; for (int i ; i < q.length; i++) { packet.payload.putFloat(); } }", "n_tokens": 64, "n_pass": [232, 22, 22]}
{"time": "2021-02-14 05:23:30.612645", "score": "0.9965", "loss": "0.0038", "code": "MAVLinkPacket pack(){ MAVLinkPacket .putInt(latitude);packet.payload.putFloat(y);; for (int i ; i < q.length; i++) { packet.payload.putFloat(); } }", "n_tokens": 63, "n_pass": [238, 23, 23]}
{"time": "2021-02-14 05:23:33.262645", "score": "0.9965", "loss": "0.0038", "code": "MAVLinkPacket pack(){MAVLinkPacket .putInt(latitude);packet.payload.putFloat(y);; for (int i ; i < q.length; i++) { packet.payload.putFloat(); } }", "n_tokens": 62, "n_pass": [240, 24, 24]}
{"time": "2021-02-14 05:23:35.913447", "score": "0.9965", "loss": "0.0038", "code": "MAVLinkPacket pack(){MAVLinkPacket.putInt(latitude);packet.payload.putFloat(y);; for (int i ; i < q.length; i++) { packet.payload.putFloat(); } }", "n_tokens": 61, "n_pass": [242, 25, 25]}
{"time": "2021-02-14 05:23:38.553706", "score": "0.9955", "loss": "0.0047", "code": "MAVLinkPacket pack(){MAVLinkPacket(latitude);packet.payload.putFloat(y);; for (int i ; i < q.length; i++) { packet.payload.putFloat(); } }", "n_tokens": 59, "n_pass": [243, 26, 26]}
{"time": "2021-02-14 05:23:41.194688", "score": "0.9939", "loss": "0.0063", "code": "MAVLinkPacket pack(){MAVLinkPacket(latitude);payload.putFloat(y);; for (int i ; i < q.length; i++) { packet.payload.putFloat(); } }", "n_tokens": 57, "n_pass": [246, 27, 27]}
{"time": "2021-02-14 05:23:43.834975", "score": "0.9964", "loss": "0.0037", "code": "MAVLinkPacket pack(){MAVLinkPacket(latitude);putFloat(y);; for (int i ; i < q.length; i++) { packet.payload.putFloat(); } }", "n_tokens": 55, "n_pass": [247, 28, 28]}
{"time": "2021-02-14 05:23:46.476382", "score": "0.9964", "loss": "0.0038", "code": "MAVLinkPacket pack(){MAVLinkPacket(latitude);putFloat(y);; for (i ; i < q.length; i++) { packet.payload.putFloat(); } }", "n_tokens": 53, "n_pass": [253, 29, 29]}
{"time": "2021-02-14 05:23:49.142353", "score": "0.9955", "loss": "0.0047", "code": "MAVLinkPacket pack(){MAVLinkPacket(latitude);putFloat(y);; for (; i < q.length; i++) { packet.payload.putFloat(); } }", "n_tokens": 51, "n_pass": [254, 30, 30]}
{"time": "2021-02-14 05:23:51.782098", "score": "0.9958", "loss": "0.0044", "code": "MAVLinkPacket pack(){MAVLinkPacket(latitude);putFloat(y);; for (; i < length; i++) { packet.payload.putFloat(); } }", "n_tokens": 49, "n_pass": [258, 31, 31]}
{"time": "2021-02-14 05:23:54.416765", "score": "0.9958", "loss": "0.0044", "code": "MAVLinkPacket pack(){MAVLinkPacket(latitude);putFloat(y);; for (; i < length; i) { packet.payload.putFloat(); } }", "n_tokens": 47, "n_pass": [261, 32, 32]}
{"time": "2021-02-14 05:23:57.058182", "score": "0.9953", "loss": "0.0049", "code": "MAVLinkPacket pack(){MAVLinkPacket(latitude);putFloat(y);; for (; i < length; i) { payload.putFloat(); } }", "n_tokens": 45, "n_pass": [264, 33, 33]}
{"time": "2021-02-14 05:23:59.684358", "score": "0.9971", "loss": "0.0029", "code": "MAVLinkPacket pack(){MAVLinkPacket(latitude);putFloat(y);; for (; i < length; i) { putFloat(); } }", "n_tokens": 43, "n_pass": [265, 34, 34]}
{"time": "2021-02-14 05:24:06.199069", "score": "0.9971", "loss": "0.0029", "code": "MAVLinkPacket pack(){MAVLinkPacket(latitude);putFloat(y);; for (; i < length;) { putFloat(); } }", "n_tokens": 41, "n_pass": [288, 36, 35]}
{"time": "2021-02-14 05:24:18.269568", "score": "0.9971", "loss": "0.0029", "code": "MAVLinkPacket pack(){MAVLinkPacket(latitude);putFloat(y);; for (; i < length;){ putFloat(); } }", "n_tokens": 40, "n_pass": [347, 38, 36]}
{"time": "2021-02-14 05:24:20.894142", "score": "0.9971", "loss": "0.0029", "code": "MAVLinkPacket pack(){MAVLinkPacket(latitude);putFloat(y);; for (; i < length;){putFloat(); } }", "n_tokens": 39, "n_pass": [349, 39, 37]}
{"time": "2021-02-14 05:24:23.517072", "score": "0.9971", "loss": "0.0029", "code": "MAVLinkPacket pack(){MAVLinkPacket(latitude);putFloat(y);; for (; i < length;){putFloat();} }", "n_tokens": 38, "n_pass": [354, 40, 38]}
{"time": "2021-02-14 05:24:26.139542", "score": "0.9971", "loss": "0.0029", "code": "MAVLinkPacket pack(){MAVLinkPacket(latitude);putFloat(y);; for (; i < length;){putFloat();}}", "n_tokens": 37, "n_pass": [356, 41, 39]}
{"time": "2021-02-14 05:24:32.588361", "score": "0.7962", "loss": "0.2283", "code": "MAVLinkPacket pack(){MAVLinkPacket();putFloat(y);; for (; i < length;){putFloat();}}", "n_tokens": 36, "n_pass": [366, 43, 40]}
{"time": "2021-02-14 05:24:35.212623", "score": "0.853", "loss": "0.1591", "code": "MAVLinkPacket pack(){MAVLinkPacket();(y);; for (; i < length;){putFloat();}}", "n_tokens": 35, "n_pass": [369, 44, 41]}
{"time": "2021-02-14 05:24:37.848867", "score": "0.8893", "loss": "0.1175", "code": "MAVLinkPacket pack(){MAVLinkPacket();(y); for (; i < length;){putFloat();}}", "n_tokens": 34, "n_pass": [373, 45, 42]}
{"time": "2021-02-14 05:24:40.466907", "score": "0.8893", "loss": "0.1175", "code": "MAVLinkPacket pack(){MAVLinkPacket();(y);for (; i < length;){putFloat();}}", "n_tokens": 33, "n_pass": [375, 46, 43]}
{"time": "2021-02-14 05:24:43.087138", "score": "0.8893", "loss": "0.1175", "code": "MAVLinkPacket pack(){MAVLinkPacket();(y);for(; i < length;){putFloat();}}", "n_tokens": 32, "n_pass": [377, 47, 44]}
{"time": "2021-02-14 05:24:45.705494", "score": "0.8893", "loss": "0.1175", "code": "MAVLinkPacket pack(){MAVLinkPacket();(y);for(;i < length;){putFloat();}}", "n_tokens": 31, "n_pass": [380, 48, 45]}
{"time": "2021-02-14 05:24:48.324842", "score": "0.8893", "loss": "0.1175", "code": "MAVLinkPacket pack(){MAVLinkPacket();(y);for(;i< length;){putFloat();}}", "n_tokens": 30, "n_pass": [382, 49, 46]}
{"time": "2021-02-14 05:24:50.947255", "score": "0.8893", "loss": "0.1175", "code": "MAVLinkPacket pack(){MAVLinkPacket();(y);for(;i<length;){putFloat();}}", "n_tokens": 29, "n_pass": [384, 50, 47]}
{"time": "2021-02-14 05:24:54.768371", "score": "0.9578", "loss": "0.0432", "code": "MAVLinkPacket pack(){MAVLinkPacket();(y);for(;ilength;){putFloat();}}", "n_tokens": 28, "n_pass": [413, 51, 48]}
{"time": "2021-02-14 05:24:57.387220", "score": "0.8749", "loss": "0.1338", "code": "MAVLinkPacket pack(){MAVLinkPacket();(y);for(;i;){putFloat();}}", "n_tokens": 27, "n_pass": [414, 52, 49]}
{"time": "2021-02-14 05:25:01.227809", "score": "0.8735", "loss": "0.1354", "code": "MAVLinkPacket pack(){MAVLinkPacket();(y);for(;;){putFloat();}}", "n_tokens": 26, "n_pass": [441, 53, 50]}

Minimal simplified code:
MAVLinkPacket pack(){MAVLinkPacket();(y);for(;;){putFloat();}}

