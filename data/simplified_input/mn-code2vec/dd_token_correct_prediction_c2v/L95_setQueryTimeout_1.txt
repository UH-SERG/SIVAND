
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/codefollower__Tomcat-Research/modules/jdbc-pool/src/test/java/org/apache/tomcat/jdbc/test/TestValidationQueryTimeout_setQueryTimeout.java
method_name = setQueryTimeout
method_body = @Override public void setQueryTimeout(int seconds) throws SQLException { super.setQueryTimeout(seconds); Assert.assertEquals(TIMEOUT, seconds); isTimeoutSet = true; }
predict, score, loss = setQueryTimeout, 0.9999134540557861, 0.00010966652916977182

Trace of simplified code(s):
{"time": "2021-02-14 07:52:48.627537", "score": "0.9999", "loss": "0.0001", "code": "@Override public void setQueryTimeout(int seconds) throws SQLException { super.setQueryTimeout(seconds); Assert.assertEquals(TIMEOUT, seconds); isTimeoutSet = true; }", "n_tokens": 47, "n_pass": [1, 1, 1]}
{"time": "2021-02-14 07:52:51.265787", "score": "0.9999", "loss": "0.0002", "code": "void setQueryTimeout(int seconds) throws SQLException { super.setQueryTimeout(seconds); Assert.assertEquals(TIMEOUT, seconds); isTimeoutSet = true; }", "n_tokens": 42, "n_pass": [20, 2, 2]}
{"time": "2021-02-14 07:52:53.913309", "score": "0.9993", "loss": "0.0007", "code": "void setQueryTimeout(int seconds) throws SQLException { super.setQueryTimeout.assertEquals(TIMEOUT, seconds); isTimeoutSet = true; }", "n_tokens": 36, "n_pass": [23, 3, 3]}
{"time": "2021-02-14 07:52:56.552138", "score": "0.9998", "loss": "0.0002", "code": "void setQueryTimeout(int seconds) throws SQLException { super.setQueryTimeout.assertEquals(seconds); isTimeoutSet = true; }", "n_tokens": 33, "n_pass": [43, 4, 4]}
{"time": "2021-02-14 07:52:59.180272", "score": "0.9999", "loss": "0.0001", "code": "void setQueryTimeout(int seconds) throws SQLException { super.setQueryTimeout.assertEquals(seconds); isTimeoutSet ; }", "n_tokens": 30, "n_pass": [46, 5, 5]}
{"time": "2021-02-14 07:53:01.800278", "score": "0.9997", "loss": "0.0003", "code": "void setQueryTimeout(int seconds)  { super.setQueryTimeout.assertEquals(seconds); isTimeoutSet ; }", "n_tokens": 27, "n_pass": [51, 6, 6]}
{"time": "2021-02-14 07:53:04.411637", "score": "0.9997", "loss": "0.0003", "code": "void setQueryTimeout(int seconds)  { super.setQueryTimeout.assertEquals(seconds);; }", "n_tokens": 24, "n_pass": [56, 7, 7]}
{"time": "2021-02-14 07:53:09.331855", "score": "0.9997", "loss": "0.0003", "code": "void setQueryTimeout(int seconds){ super.setQueryTimeout.assertEquals(seconds);; }", "n_tokens": 22, "n_pass": [91, 8, 8]}
{"time": "2021-02-14 07:53:11.937403", "score": "1.0", "loss": "0.0", "code": "void setQueryTimeout(int seconds){ setQueryTimeout.assertEquals(seconds);; }", "n_tokens": 20, "n_pass": [93, 9, 9]}
{"time": "2021-02-14 07:53:19.489808", "score": "1.0", "loss": "0.0", "code": "void setQueryTimeout(int seconds){ setQueryTimeout.assertEquals();; }", "n_tokens": 19, "n_pass": [122, 11, 10]}
{"time": "2021-02-14 07:53:22.100857", "score": "1.0", "loss": "0.0", "code": "void setQueryTimeout(int seconds){ setQueryTimeout.assertEquals(); }", "n_tokens": 18, "n_pass": [123, 12, 11]}
{"time": "2021-02-14 07:53:24.717808", "score": "1.0", "loss": "0.0", "code": "void setQueryTimeout(int seconds){ setQueryTimeout.assertEquals();}", "n_tokens": 17, "n_pass": [125, 13, 12]}
{"time": "2021-02-14 07:53:28.140825", "score": "1.0", "loss": "0.0", "code": "void setQueryTimeout(int seconds){setQueryTimeout.assertEquals();}", "n_tokens": 16, "n_pass": [136, 14, 13]}

Minimal simplified code:
void setQueryTimeout(int seconds){setQueryTimeout.assertEquals();}

