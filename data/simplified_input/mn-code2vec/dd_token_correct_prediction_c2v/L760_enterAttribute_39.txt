
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/OpenRock__OpenAM/openam-schema/openam-liberty-schema/src/main/java/com/sun/identity/liberty/ws/common/jaxb/assertion/impl/AssertionElementImpl_enterAttribute.java
method_name = enterAttribute
method_body = public void enterAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname) throws org.xml.sax.SAXException { int attIdx; outer: while (true) { switch(state) { case 3: revertToParentFromEnterAttribute(___uri, ___local, ___qname); return; case 1: if (("AssertionID" == ___local) && ("" == ___uri)) { spawnHandlerFromEnterAttribute((((com.sun.identity.liberty.ws.common.jaxb.assertion.impl.AssertionTypeImpl) com.sun.identity.liberty.ws.common.jaxb.assertion.impl.AssertionElementImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname); return; } break; } super.enterAttribute(___uri, ___local, ___qname); break; } }
predict, score, loss = enterAttribute, 0.9999992847442627, 9.536738616588991e-07

Trace of simplified code(s):
{"time": "2021-02-16 01:15:32.586621", "score": "1.0", "loss": "0.0", "code": "public void enterAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname) throws org.xml.sax.SAXException { int attIdx; outer: while (true) { switch(state) { case 3: revertToParentFromEnterAttribute(___uri, ___local, ___qname); return; case 1: if ((\"AssertionID\" == ___local) && (\"\" == ___uri)) { spawnHandlerFromEnterAttribute((((com.sun.identity.liberty.ws.common.jaxb.assertion.impl.AssertionTypeImpl) com.sun.identity.liberty.ws.common.jaxb.assertion.impl.AssertionElementImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname); return; } break; } super.enterAttribute(___uri, ___local, ___qname); break; } }", "n_tokens": 266, "n_pass": [1, 1, 1]}
{"time": "2021-02-16 01:15:35.357343", "score": "1.0", "loss": "0.0", "code": "public void enterAttribute(java.lang.String ___uri___local, java.lang.String ___qname) throws org.xml.sax.SAXException { int attIdx; outer: while (true) { switch(state) { case 3: revertToParentFromEnterAttribute(___uri, ___local, ___qname); return; case 1: if ((\"AssertionID\" == ___local) && (\"\" == ___uri)) { spawnHandlerFromEnterAttribute((((com.sun.identity.liberty.ws.common.jaxb.assertion.impl.AssertionTypeImpl) com.sun.identity.liberty.ws.common.jaxb.assertion.impl.AssertionElementImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname); return; } break; } super.enterAttribute(___uri, ___local, ___qname); break; } }", "n_tokens": 258, "n_pass": [94, 2, 2]}
{"time": "2021-02-16 01:15:38.088932", "score": "1.0", "loss": "0.0", "code": "public void enterAttribute(java.lang.String ___uri___local, java.lang.String ___qname) throws org.xml.sax.SAXException { int attIdx; outer: while (true) { switch(state) { case 3: revertToParentFromEnterAttribute(___uri___qname); return; case 1: if ((\"AssertionID\" == ___local) && (\"\" == ___uri)) { spawnHandlerFromEnterAttribute((((com.sun.identity.liberty.ws.common.jaxb.assertion.impl.AssertionTypeImpl) com.sun.identity.liberty.ws.common.jaxb.assertion.impl.AssertionElementImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname); return; } break; } super.enterAttribute(___uri, ___local, ___qname); break; } }", "n_tokens": 250, "n_pass": [102, 3, 3]}
{"time": "2021-02-16 01:15:40.838200", "score": "1.0", "loss": "0.0", "code": "public void enterAttribute(java.lang.String ___uri___local, java.lang.String ___qname) throws org.xml.sax.SAXException { int attIdx; outer: while (true) { switch(state) { case 3: revertToParentFromEnterAttribute(___uri___qname); return; case 1: if ((\"AssertionID\" == ___local) && (\"\" == ___uri)) { spawnHandlerFromEnterAttribute((((ws.common.jaxb.assertion.impl.AssertionTypeImpl) com.sun.identity.liberty.ws.common.jaxb.assertion.impl.AssertionElementImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname); return; } break; } super.enterAttribute(___uri, ___local, ___qname); break; } }", "n_tokens": 242, "n_pass": [110, 4, 4]}
{"time": "2021-02-16 01:15:43.523308", "score": "1.0", "loss": "0.0", "code": "public void enterAttribute(java.lang.String ___uri___local, java.lang.String ___qname) throws org.xml.sax.SAXException { int attIdx; outer: while (true) { switch(state) { case 3: revertToParentFromEnterAttribute(___uri___qname); return; case 1: if ((\"AssertionID\" == ___local) && (\"\" == ___uri)) { spawnHandlerFromEnterAttribute((((impl.AssertionTypeImpl) com.sun.identity.liberty.ws.common.jaxb.assertion.impl.AssertionElementImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname); return; } break; } super.enterAttribute(___uri, ___local, ___qname); break; } }", "n_tokens": 234, "n_pass": [111, 5, 5]}
{"time": "2021-02-16 01:15:46.132104", "score": "1.0", "loss": "0.0", "code": "public void enterAttribute(java.lang.String ___uri___local, java.lang.String ___qname) throws org.xml.sax.SAXException { int attIdx; outer: while (true) { switch(state) { case 3: revertToParentFromEnterAttribute(___uri___qname); return; case 1: if ((\"AssertionID\" == ___local) && (\"\" == ___uri)) { spawnHandlerFromEnterAttribute((((impl.AssertionTypeImpl) com.sunjaxb.assertion.impl.AssertionElementImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname); return; } break; } super.enterAttribute(___uri, ___local, ___qname); break; } }", "n_tokens": 225, "n_pass": [113, 6, 6]}
{"time": "2021-02-16 01:15:49.233516", "score": "1.0", "loss": "0.0", "code": "public void enterAttribute(java.lang.String ___uri___local, java.lang.String ___qname) throws org.xml.sax.SAXException { int attIdx; outer: while (true) { switch(state) { case 3: revertToParentFromEnterAttribute(___uri___qname); return; case 1: if ((\"AssertionID\" == ___local) && (\"\" == ___uri)) { spawnHandlerFromEnterAttribute((((impl.AssertionTypeImpl) com.sun).new Unmarshaller(context)), 2, ___uri, ___local, ___qname); return; } break; } super.enterAttribute(___uri, ___local, ___qname); break; } }", "n_tokens": 216, "n_pass": [114, 7, 7]}
{"time": "2021-02-16 01:15:51.952322", "score": "1.0", "loss": "0.0", "code": "public void enterAttribute(java.lang.String ___uri___local, java.lang.String ___qname) throws org.xml.sax.SAXException { int attIdx; outer: while (true) { switch(state) { case 3: revertToParentFromEnterAttribute(___uri___qname); return; case 1: if ((\"AssertionID\" == ___local) && (\"\" == ___uri)) { spawnHandlerFromEnterAttribute((((impl.AssertionTypeImpl) com.sun).new Unmarshaller(context)), ___local, ___qname); return; } break; } super.enterAttribute(___uri, ___local, ___qname); break; } }", "n_tokens": 207, "n_pass": [116, 8, 8]}
{"time": "2021-02-16 01:15:54.630957", "score": "1.0", "loss": "0.0", "code": "public void enterAttribute(java.lang.String ___uri___local, java.lang.String ___qname) throws org.xml.sax.SAXException { int attIdx; outer: while (true) { switch(state) { case 3: revertToParentFromEnterAttribute(___uri___qname); return; case 1: if ((\"AssertionID\" == ___local) && (\"\" == ___uri)) { spawnHandlerFromEnterAttribute((((impl.AssertionTypeImpl) com.sun).new Unmarshaller(context)), ___local, ___qname); return; } break; } super.enterAttribute(___uri, _); break; } }", "n_tokens": 198, "n_pass": [121, 9, 9]}
{"time": "2021-02-16 01:15:57.970795", "score": "1.0", "loss": "0.0", "code": "public void enterAttribute(java.lang.String ___local, java.lang.String ___qname) throws org.xml.sax.SAXException { int attIdx; outer: while (true) { switch(state) { case 3: revertToParentFromEnterAttribute(___uri___qname); return; case 1: if ((\"AssertionID\" == ___local) && (\"\" == ___uri)) { spawnHandlerFromEnterAttribute((((impl.AssertionTypeImpl) com.sun).new Unmarshaller(context)), ___local, ___qname); return; } break; } super.enterAttribute(___uri, _); break; } }", "n_tokens": 194, "n_pass": [199, 10, 10]}
{"time": "2021-02-16 01:16:00.638545", "score": "1.0", "loss": "0.0", "code": "public void enterAttribute(java.lang.String ___local, java.lang.String ___qname) throws sax.SAXException { int attIdx; outer: while (true) { switch(state) { case 3: revertToParentFromEnterAttribute(___uri___qname); return; case 1: if ((\"AssertionID\" == ___local) && (\"\" == ___uri)) { spawnHandlerFromEnterAttribute((((impl.AssertionTypeImpl) com.sun).new Unmarshaller(context)), ___local, ___qname); return; } break; } super.enterAttribute(___uri, _); break; } }", "n_tokens": 190, "n_pass": [205, 11, 11]}
{"time": "2021-02-16 01:16:03.288072", "score": "1.0", "loss": "0.0", "code": "public void enterAttribute(java.lang.String ___local, java.lang.String ___qname) throws sax.SAXException { int attIdx; outer: while (true) { switch(state) { case 3: revertToParentFromEnterAttribute(___qname); return; case 1: if ((\"AssertionID\" == ___local) && (\"\" == ___uri)) { spawnHandlerFromEnterAttribute((((impl.AssertionTypeImpl) com.sun).new Unmarshaller(context)), ___local, ___qname); return; } break; } super.enterAttribute(___uri, _); break; } }", "n_tokens": 186, "n_pass": [215, 12, 12]}
{"time": "2021-02-16 01:16:05.961638", "score": "0.9998", "loss": "0.0016", "code": "public void enterAttribute(java.lang.String ___local, java.lang.String ___qname) throws sax.SAXException { int attIdx; outer: while (true) { switch(state) { case 3: revertToParentFromEnterAttribute(); return; case 1: if ((\"AssertionID\" == ___local) && (\"\" == ___uri)) { spawnHandlerFromEnterAttribute((((impl.AssertionTypeImpl) com.sun).new Unmarshaller(context)), ___local, ___qname); return; } break; } super.enterAttribute(___uri, _); break; } }", "n_tokens": 182, "n_pass": [216, 13, 13]}
{"time": "2021-02-16 01:16:08.622809", "score": "0.9998", "loss": "0.0014", "code": "public void enterAttribute(java.lang.String ___local, java.lang.String ___qname) throws sax.SAXException { int attIdx; outer: while (true) { switch(state) { case 3: revertToParentFromEnterAttribute(); return1: if ((\"AssertionID\" == ___local) && (\"\" == ___uri)) { spawnHandlerFromEnterAttribute((((impl.AssertionTypeImpl) com.sun).new Unmarshaller(context)), ___local, ___qname); return; } break; } super.enterAttribute(___uri, _); break; } }", "n_tokens": 178, "n_pass": [218, 14, 14]}
{"time": "2021-02-16 01:16:12.318403", "score": "0.9998", "loss": "0.0013", "code": "public void enterAttribute(java.lang.String ___local, java.lang.String ___qname) throws sax.SAXException { int attIdx; outer: while (true) { switch(state) { case 3: revertToParentFromEnterAttribute(); return1: if ((\"AssertionID\" == ___local) && (\"\" == ___uri)) { spawnHandlerFromEnterAttribute((((impl.AssertionTypeImpl)).new Unmarshaller(context)), ___local, ___qname); return; } break; } super.enterAttribute(___uri, _); break; } }", "n_tokens": 174, "n_pass": [231, 15, 15]}
{"time": "2021-02-16 01:16:15.350273", "score": "0.9998", "loss": "0.0013", "code": "public void enterAttribute(java.lang.String ___local, java.lang.String ___qname) throws sax.SAXException { int attIdx; outer: while (true) { switch(state) { case 3: revertToParentFromEnterAttribute(); return1: if ((\"AssertionID\" == ___local) && (\"\" == ___uri)) { spawnHandlerFromEnterAttribute((((impl.AssertionTypeImpl)).new Unmarshaller(context)), ___local,qname); return; } break; } super.enterAttribute(___uri, _); break; } }", "n_tokens": 170, "n_pass": [236, 16, 16]}
{"time": "2021-02-16 01:16:17.958851", "score": "0.9999", "loss": "0.0002", "code": "public void enterAttribute(java.lang.String ___local, java.lang.String ___qname) throws sax.SAXException { int attIdx; outer: while (true) { switch(state) { case 3: revertToParentFromEnterAttribute(); return1: if ((\"AssertionID\" == ___local) && (\"\" == ___uri)) { spawnHandlerFromEnterAttribute((((impl.AssertionTypeImpl)).new Unmarshaller(context)), ___local,qname); return; } break; } super.enterAttribute(__); break; } }", "n_tokens": 165, "n_pass": [241, 17, 17]}
{"time": "2021-02-16 01:16:21.792878", "score": "0.9999", "loss": "0.0002", "code": "public void enterAttribute(java.lang.String ___local, java.lang.String ___qname) throws sax.SAXException { int attIdx; outer: while (true) { switch(state) { case 3: revertToParentFromEnterAttribute(); return1: if ((\"AssertionID\" == ___local) && (\"\" == ___uri)) { spawnHandlerFromEnterAttribute((((impl.AssertionTypeImpl)).new Unmarshaller(context)), _qname); return; } break; } super.enterAttribute(__); break; } }", "n_tokens": 161, "n_pass": [277, 18, 18]}
{"time": "2021-02-16 01:16:26.261333", "score": "0.9999", "loss": "0.0002", "code": "public void enterAttribute(java.lang.String ___local, java.lang.String ___qname) throws sax.SAXException { int attIdx; outer: while (true) { switch(state) { case 3: revertToParentFromEnterAttribute(); return1: if ((\"AssertionID\" == ___local) && (\"\" == ___uri)) { spawnHandlerFromEnterAttribute((((impl.AssertionTypeImpl)).new Unmarshaller(context)), _qname);  } break; } super.enterAttribute(__); break; } }", "n_tokens": 159, "n_pass": [397, 19, 19]}
{"time": "2021-02-16 01:16:28.859405", "score": "0.9999", "loss": "0.0002", "code": "public void enterAttribute(java.lang.String ___local, java.lang.String ___qname) throws sax.SAXException { int attIdx; outer: while (true) { switch(state) { case 3: revertToParentFromEnterAttribute(); return1: if ((\"AssertionID\" == ___local) && (\"\" == ___uri)) { spawnHandlerFromEnterAttribute((((impl.AssertionTypeImpl)).new Unmarshaller(context)), _qname);  }; } super.enterAttribute(__); break; } }", "n_tokens": 157, "n_pass": [399, 20, 20]}
{"time": "2021-02-16 01:16:31.511423", "score": "0.9999", "loss": "0.0002", "code": "public void enterAttribute(java.lang.String ___local, java.lang.String ___qname) throws sax.SAXException { int attIdx; outer: while (true) { switch(state) { case 3: revertToParentFromEnterAttribute(); return1: if ((\"AssertionID\" == ___local) && (\"\" == ___uri)) { spawnHandlerFromEnterAttribute((((impl.AssertionTypeImpl)).new Unmarshaller(context)), _qname);  }} super.enterAttribute(__); break; } }", "n_tokens": 155, "n_pass": [400, 21, 21]}
{"time": "2021-02-16 01:16:34.110813", "score": "0.9986", "loss": "0.0134", "code": "public void enterAttribute(java.lang.String ___local, java.lang.String ___qname) throws sax.SAXException { int attIdx; outer: while (true) { switch(state) { case 3: revertToParentFromEnterAttribute(); return1: if ((\"AssertionID\" == ___local) && (\"\" == ___uri)) { spawnHandlerFromEnterAttribute((((impl.AssertionTypeImpl)).new Unmarshaller(context)), _qname);  }} (__); break; } }", "n_tokens": 152, "n_pass": [402, 22, 22]}
{"time": "2021-02-16 01:16:36.696019", "score": "0.9986", "loss": "0.0134", "code": "public void enterAttribute(java.lang.String ___local, java.lang.String ___qname) throws sax.SAXException { int attIdx; outer: while (true) { switch(state) { case 3: revertToParentFromEnterAttribute(); return1: if ((\"AssertionID\" == ___local) && (\"\" == ___uri)) { spawnHandlerFromEnterAttribute((((impl.AssertionTypeImpl)).new Unmarshaller(context)), _qname);  }} (__); } }", "n_tokens": 149, "n_pass": [405, 23, 23]}
{"time": "2021-02-16 01:16:39.559956", "score": "0.9986", "loss": "0.0134", "code": "void enterAttribute(java.lang.String ___local, java.lang.String ___qname) throws sax.SAXException { int attIdx; outer: while (true) { switch(state) { case 3: revertToParentFromEnterAttribute(); return1: if ((\"AssertionID\" == ___local) && (\"\" == ___uri)) { spawnHandlerFromEnterAttribute((((impl.AssertionTypeImpl)).new Unmarshaller(context)), _qname);  }} (__); } }", "n_tokens": 147, "n_pass": [407, 24, 24]}
{"time": "2021-02-16 01:16:42.547853", "score": "0.9974", "loss": "0.0282", "code": "void enterAttribute(lang.String ___local, java.lang.String ___qname) throws sax.SAXException { int attIdx; outer: while (true) { switch(state) { case 3: revertToParentFromEnterAttribute(); return1: if ((\"AssertionID\" == ___local) && (\"\" == ___uri)) { spawnHandlerFromEnterAttribute((((impl.AssertionTypeImpl)).new Unmarshaller(context)), _qname);  }} (__); } }", "n_tokens": 145, "n_pass": [410, 25, 25]}
{"time": "2021-02-16 01:16:45.165246", "score": "0.9947", "loss": "0.0544", "code": "void enterAttribute(String ___local, java.lang.String ___qname) throws sax.SAXException { int attIdx; outer: while (true) { switch(state) { case 3: revertToParentFromEnterAttribute(); return1: if ((\"AssertionID\" == ___local) && (\"\" == ___uri)) { spawnHandlerFromEnterAttribute((((impl.AssertionTypeImpl)).new Unmarshaller(context)), _qname);  }} (__); } }", "n_tokens": 143, "n_pass": [411, 26, 26]}
{"time": "2021-02-16 01:16:47.764538", "score": "0.9947", "loss": "0.0544", "code": "void enterAttribute(String _local, java.lang.String ___qname) throws sax.SAXException { int attIdx; outer: while (true) { switch(state) { case 3: revertToParentFromEnterAttribute(); return1: if ((\"AssertionID\" == ___local) && (\"\" == ___uri)) { spawnHandlerFromEnterAttribute((((impl.AssertionTypeImpl)).new Unmarshaller(context)), _qname);  }} (__); } }", "n_tokens": 141, "n_pass": [413, 27, 27]}
{"time": "2021-02-16 01:16:50.382038", "score": "0.991", "loss": "0.0989", "code": "void enterAttribute(String _local, lang.String ___qname) throws sax.SAXException { int attIdx; outer: while (true) { switch(state) { case 3: revertToParentFromEnterAttribute(); return1: if ((\"AssertionID\" == ___local) && (\"\" == ___uri)) { spawnHandlerFromEnterAttribute((((impl.AssertionTypeImpl)).new Unmarshaller(context)), _qname);  }} (__); } }", "n_tokens": 139, "n_pass": [416, 28, 28]}
{"time": "2021-02-16 01:16:52.967622", "score": "0.9786", "loss": "0.1979", "code": "void enterAttribute(String _local, String ___qname) throws sax.SAXException { int attIdx; outer: while (true) { switch(state) { case 3: revertToParentFromEnterAttribute(); return1: if ((\"AssertionID\" == ___local) && (\"\" == ___uri)) { spawnHandlerFromEnterAttribute((((impl.AssertionTypeImpl)).new Unmarshaller(context)), _qname);  }} (__); } }", "n_tokens": 137, "n_pass": [417, 29, 29]}
{"time": "2021-02-16 01:16:55.643514", "score": "0.9786", "loss": "0.1979", "code": "void enterAttribute(String _local, String _qname) throws sax.SAXException { int attIdx; outer: while (true) { switch(state) { case 3: revertToParentFromEnterAttribute(); return1: if ((\"AssertionID\" == ___local) && (\"\" == ___uri)) { spawnHandlerFromEnterAttribute((((impl.AssertionTypeImpl)).new Unmarshaller(context)), _qname);  }} (__); } }", "n_tokens": 135, "n_pass": [419, 30, 30]}
{"time": "2021-02-16 01:16:58.307525", "score": "1.0", "loss": "0.0002", "code": "void enterAttribute(String _local, String _qname) throws SAXException { int attIdx; outer: while (true) { switch(state) { case 3: revertToParentFromEnterAttribute(); return1: if ((\"AssertionID\" == ___local) && (\"\" == ___uri)) { spawnHandlerFromEnterAttribute((((impl.AssertionTypeImpl)).new Unmarshaller(context)), _qname);  }} (__); } }", "n_tokens": 133, "n_pass": [423, 31, 31]}
{"time": "2021-02-16 01:17:00.908918", "score": "1.0", "loss": "0.0002", "code": "void enterAttribute(String _local, String _qname) throws SAXException { attIdx; outer: while (true) { switch(state) { case 3: revertToParentFromEnterAttribute(); return1: if ((\"AssertionID\" == ___local) && (\"\" == ___uri)) { spawnHandlerFromEnterAttribute((((impl.AssertionTypeImpl)).new Unmarshaller(context)), _qname);  }} (__); } }", "n_tokens": 131, "n_pass": [426, 32, 32]}
{"time": "2021-02-16 01:17:03.488817", "score": "1.0", "loss": "0.0002", "code": "void enterAttribute(String _local, String _qname) throws SAXException {  outer: while (true) { switch(state) { case 3: revertToParentFromEnterAttribute(); return1: if ((\"AssertionID\" == ___local) && (\"\" == ___uri)) { spawnHandlerFromEnterAttribute((((impl.AssertionTypeImpl)).new Unmarshaller(context)), _qname);  }} (__); } }", "n_tokens": 129, "n_pass": [427, 33, 33]}
{"time": "2021-02-16 01:17:06.980396", "score": "1.0", "loss": "0.0002", "code": "void enterAttribute(String _local, String _qname) throws SAXException {  outer: while (true) { switch(state) { case 3: revertToParentFromEnterAttribute(); return1: if ((\"AssertionID\" == _local) && (\"\" == ___uri)) { spawnHandlerFromEnterAttribute((((impl.AssertionTypeImpl)).new Unmarshaller(context)), _qname);  }} (__); } }", "n_tokens": 127, "n_pass": [450, 34, 34]}
{"time": "2021-02-16 01:17:10.321491", "score": "1.0", "loss": "0.0002", "code": "void enterAttribute(String _local, String _qname) throws SAXException {  outer: while (true) { switch(state) { case 3: revertToParentFromEnterAttribute(); return1: if ((\"AssertionID\" == _local) && (\"\" == _uri)) { spawnHandlerFromEnterAttribute((((impl.AssertionTypeImpl)).new Unmarshaller(context)), _qname);  }} (__); } }", "n_tokens": 125, "n_pass": [458, 35, 35]}
{"time": "2021-02-16 01:17:13.031077", "score": "1.0", "loss": "0.0002", "code": "void enterAttribute(String _local, String _qname) throws SAXException {  outer: while (true) { switch(state) { case 3: revertToParentFromEnterAttribute(); return1: if ((\"AssertionID\" == _local) && (\"\" == _uri)) { spawnHandlerFromEnterAttribute((((AssertionTypeImpl)).new Unmarshaller(context)), _qname);  }} (__); } }", "n_tokens": 123, "n_pass": [465, 36, 36]}
{"time": "2021-02-16 01:17:15.607812", "score": "1.0", "loss": "0.0001", "code": "void enterAttribute(String _local, String _qname) throws SAXException {  outer: while (true) { switch(state) { case 3: revertToParentFromEnterAttribute(); return1: if ((\"AssertionID\" == _local) && (\"\" == _uri)) { spawnHandlerFromEnterAttribute((((AssertionTypeImpl)).Unmarshaller(context)), _qname);  }} (__); } }", "n_tokens": 121, "n_pass": [468, 37, 37]}
{"time": "2021-02-16 01:17:18.177562", "score": "1.0", "loss": "0.0001", "code": "void enterAttribute(String _local, String _qname) throws SAXException {  outer: while (true) { switch(state) { case 3: revertToParentFromEnterAttribute(); return1: if ((\"AssertionID\" == _local) && (\"\" == _uri)) { spawnHandlerFromEnterAttribute((((AssertionTypeImpl)).Unmarshaller(context)),qname);  }} (__); } }", "n_tokens": 119, "n_pass": [472, 38, 38]}
{"time": "2021-02-16 01:17:33.814214", "score": "1.0", "loss": "0.0001", "code": "void enterAttribute(String _local, String _qname) throws SAXException {  outer: while (true) { switch(state) { case 3: revertToParentFromEnterAttribute(); return1: if ((\"AssertionID\" == _local) && (\"\" == _uri)) { spawnHandlerFromEnterAttribute((((AssertionTypeImpl)).Unmarshaller(context)),qname); }} (__); } }", "n_tokens": 118, "n_pass": [650, 39, 39]}
{"time": "2021-02-16 01:17:36.469902", "score": "1.0", "loss": "0.0001", "code": "void enterAttribute(String _local, String _qname) throws SAXException {  outer: while (true) { switch(state) { case 3: revertToParentFromEnterAttribute(); return1: if ((\"AssertionID\" == _local) && (\"\" == _uri)) { spawnHandlerFromEnterAttribute((((AssertionTypeImpl)).Unmarshaller(context)),qname);}} (__); } }", "n_tokens": 117, "n_pass": [651, 40, 40]}
{"time": "2021-02-16 01:17:39.129377", "score": "1.0", "loss": "0.0001", "code": "void enterAttribute(String _local, String _qname) throws SAXException {  outer: while (true) { switch(state) { case 3: revertToParentFromEnterAttribute(); return1: if ((\"AssertionID\" == _local) && (\"\" == _uri)) { spawnHandlerFromEnterAttribute((((AssertionTypeImpl)).Unmarshaller(context)),qname);}}(__); } }", "n_tokens": 116, "n_pass": [654, 41, 41]}
{"time": "2021-02-16 01:17:41.748035", "score": "1.0", "loss": "0.0001", "code": "void enterAttribute(String _local, String _qname) throws SAXException {  outer: while (true) { switch(state) { case 3: revertToParentFromEnterAttribute(); return1: if ((\"AssertionID\" == _local) && (\"\" == _uri)) { spawnHandlerFromEnterAttribute((((AssertionTypeImpl)).Unmarshaller(context)),qname);}}(_); } }", "n_tokens": 115, "n_pass": [656, 42, 42]}
{"time": "2021-02-16 01:17:45.127155", "score": "1.0", "loss": "0.0001", "code": "void enterAttribute(String local, String _qname) throws SAXException {  outer: while (true) { switch(state) { case 3: revertToParentFromEnterAttribute(); return1: if ((\"AssertionID\" == _local) && (\"\" == _uri)) { spawnHandlerFromEnterAttribute((((AssertionTypeImpl)).Unmarshaller(context)),qname);}}(_); } }", "n_tokens": 114, "n_pass": [667, 43, 43]}
{"time": "2021-02-16 01:17:47.776591", "score": "1.0", "loss": "0.0001", "code": "void enterAttribute(String local,String _qname) throws SAXException {  outer: while (true) { switch(state) { case 3: revertToParentFromEnterAttribute(); return1: if ((\"AssertionID\" == _local) && (\"\" == _uri)) { spawnHandlerFromEnterAttribute((((AssertionTypeImpl)).Unmarshaller(context)),qname);}}(_); } }", "n_tokens": 113, "n_pass": [670, 44, 44]}
{"time": "2021-02-16 01:17:50.351802", "score": "1.0", "loss": "0.0001", "code": "void enterAttribute(String local,String qname) throws SAXException {  outer: while (true) { switch(state) { case 3: revertToParentFromEnterAttribute(); return1: if ((\"AssertionID\" == _local) && (\"\" == _uri)) { spawnHandlerFromEnterAttribute((((AssertionTypeImpl)).Unmarshaller(context)),qname);}}(_); } }", "n_tokens": 112, "n_pass": [673, 45, 45]}
{"time": "2021-02-16 01:17:52.920115", "score": "1.0", "loss": "0.0001", "code": "void enterAttribute(String local,String qname)throws SAXException {  outer: while (true) { switch(state) { case 3: revertToParentFromEnterAttribute(); return1: if ((\"AssertionID\" == _local) && (\"\" == _uri)) { spawnHandlerFromEnterAttribute((((AssertionTypeImpl)).Unmarshaller(context)),qname);}}(_); } }", "n_tokens": 111, "n_pass": [676, 46, 46]}
{"time": "2021-02-16 01:17:55.497565", "score": "1.0", "loss": "0.0001", "code": "void enterAttribute(String local,String qname)throws SAXException{  outer: while (true) { switch(state) { case 3: revertToParentFromEnterAttribute(); return1: if ((\"AssertionID\" == _local) && (\"\" == _uri)) { spawnHandlerFromEnterAttribute((((AssertionTypeImpl)).Unmarshaller(context)),qname);}}(_); } }", "n_tokens": 110, "n_pass": [680, 47, 47]}
{"time": "2021-02-16 01:17:58.166509", "score": "1.0", "loss": "0.0001", "code": "void enterAttribute(String local,String qname)throws SAXException{ outer: while (true) { switch(state) { case 3: revertToParentFromEnterAttribute(); return1: if ((\"AssertionID\" == _local) && (\"\" == _uri)) { spawnHandlerFromEnterAttribute((((AssertionTypeImpl)).Unmarshaller(context)),qname);}}(_); } }", "n_tokens": 109, "n_pass": [682, 48, 48]}
{"time": "2021-02-16 01:18:00.737750", "score": "1.0", "loss": "0.0001", "code": "void enterAttribute(String local,String qname)throws SAXException{outer: while (true) { switch(state) { case 3: revertToParentFromEnterAttribute(); return1: if ((\"AssertionID\" == _local) && (\"\" == _uri)) { spawnHandlerFromEnterAttribute((((AssertionTypeImpl)).Unmarshaller(context)),qname);}}(_); } }", "n_tokens": 108, "n_pass": [683, 49, 49]}
{"time": "2021-02-16 01:18:03.345413", "score": "1.0", "loss": "0.0001", "code": "void enterAttribute(String local,String qname)throws SAXException{outer:while (true) { switch(state) { case 3: revertToParentFromEnterAttribute(); return1: if ((\"AssertionID\" == _local) && (\"\" == _uri)) { spawnHandlerFromEnterAttribute((((AssertionTypeImpl)).Unmarshaller(context)),qname);}}(_); } }", "n_tokens": 107, "n_pass": [686, 50, 50]}
{"time": "2021-02-16 01:18:05.949763", "score": "1.0", "loss": "0.0001", "code": "void enterAttribute(String local,String qname)throws SAXException{outer:while(true) { switch(state) { case 3: revertToParentFromEnterAttribute(); return1: if ((\"AssertionID\" == _local) && (\"\" == _uri)) { spawnHandlerFromEnterAttribute((((AssertionTypeImpl)).Unmarshaller(context)),qname);}}(_); } }", "n_tokens": 106, "n_pass": [688, 51, 51]}
{"time": "2021-02-16 01:18:08.664168", "score": "1.0", "loss": "0.0001", "code": "void enterAttribute(String local,String qname)throws SAXException{outer:while(true){ switch(state) { case 3: revertToParentFromEnterAttribute(); return1: if ((\"AssertionID\" == _local) && (\"\" == _uri)) { spawnHandlerFromEnterAttribute((((AssertionTypeImpl)).Unmarshaller(context)),qname);}}(_); } }", "n_tokens": 105, "n_pass": [692, 52, 52]}
{"time": "2021-02-16 01:18:11.231468", "score": "1.0", "loss": "0.0001", "code": "void enterAttribute(String local,String qname)throws SAXException{outer:while(true){switch(state) { case 3: revertToParentFromEnterAttribute(); return1: if ((\"AssertionID\" == _local) && (\"\" == _uri)) { spawnHandlerFromEnterAttribute((((AssertionTypeImpl)).Unmarshaller(context)),qname);}}(_); } }", "n_tokens": 104, "n_pass": [694, 53, 53]}
{"time": "2021-02-16 01:18:14.133124", "score": "1.0", "loss": "0.0001", "code": "void enterAttribute(String local,String qname)throws SAXException{outer:while(true){switch(state){ case 3: revertToParentFromEnterAttribute(); return1: if ((\"AssertionID\" == _local) && (\"\" == _uri)) { spawnHandlerFromEnterAttribute((((AssertionTypeImpl)).Unmarshaller(context)),qname);}}(_); } }", "n_tokens": 103, "n_pass": [699, 54, 54]}
{"time": "2021-02-16 01:18:16.729173", "score": "1.0", "loss": "0.0001", "code": "void enterAttribute(String local,String qname)throws SAXException{outer:while(true){switch(state){case 3: revertToParentFromEnterAttribute(); return1: if ((\"AssertionID\" == _local) && (\"\" == _uri)) { spawnHandlerFromEnterAttribute((((AssertionTypeImpl)).Unmarshaller(context)),qname);}}(_); } }", "n_tokens": 102, "n_pass": [701, 55, 55]}
{"time": "2021-02-16 01:18:19.315042", "score": "1.0", "loss": "0.0001", "code": "void enterAttribute(String local,String qname)throws SAXException{outer:while(true){switch(state){case 3:revertToParentFromEnterAttribute(); return1: if ((\"AssertionID\" == _local) && (\"\" == _uri)) { spawnHandlerFromEnterAttribute((((AssertionTypeImpl)).Unmarshaller(context)),qname);}}(_); } }", "n_tokens": 101, "n_pass": [706, 56, 56]}
{"time": "2021-02-16 01:18:21.901851", "score": "1.0", "loss": "0.0001", "code": "void enterAttribute(String local,String qname)throws SAXException{outer:while(true){switch(state){case 3:revertToParentFromEnterAttribute();return1: if ((\"AssertionID\" == _local) && (\"\" == _uri)) { spawnHandlerFromEnterAttribute((((AssertionTypeImpl)).Unmarshaller(context)),qname);}}(_); } }", "n_tokens": 100, "n_pass": [711, 57, 57]}
{"time": "2021-02-16 01:18:24.481929", "score": "1.0", "loss": "0.0001", "code": "void enterAttribute(String local,String qname)throws SAXException{outer:while(true){switch(state){case 3:revertToParentFromEnterAttribute();return1:if ((\"AssertionID\" == _local) && (\"\" == _uri)) { spawnHandlerFromEnterAttribute((((AssertionTypeImpl)).Unmarshaller(context)),qname);}}(_); } }", "n_tokens": 99, "n_pass": [715, 58, 58]}
{"time": "2021-02-16 01:18:27.053626", "score": "1.0", "loss": "0.0001", "code": "void enterAttribute(String local,String qname)throws SAXException{outer:while(true){switch(state){case 3:revertToParentFromEnterAttribute();return1:if((\"AssertionID\" == _local) && (\"\" == _uri)) { spawnHandlerFromEnterAttribute((((AssertionTypeImpl)).Unmarshaller(context)),qname);}}(_); } }", "n_tokens": 98, "n_pass": [717, 59, 59]}
{"time": "2021-02-16 01:18:29.793931", "score": "1.0", "loss": "0.0", "code": "void enterAttribute(String local,String qname)throws SAXException{outer:while(true){switch(state){case 3:revertToParentFromEnterAttribute();return1:if((\"\" == _local) && (\"\" == _uri)) { spawnHandlerFromEnterAttribute((((AssertionTypeImpl)).Unmarshaller(context)),qname);}}(_); } }", "n_tokens": 97, "n_pass": [721, 60, 60]}
{"time": "2021-02-16 01:18:32.366625", "score": "1.0", "loss": "0.0", "code": "void enterAttribute(String local,String qname)throws SAXException{outer:while(true){switch(state){case 3:revertToParentFromEnterAttribute();return1:if((\"\"== _local) && (\"\" == _uri)) { spawnHandlerFromEnterAttribute((((AssertionTypeImpl)).Unmarshaller(context)),qname);}}(_); } }", "n_tokens": 96, "n_pass": [723, 61, 61]}
{"time": "2021-02-16 01:18:35.675723", "score": "1.0", "loss": "0.0", "code": "void enterAttribute(String local,String qname)throws SAXException{outer:while(true){switch(state){case 3:revertToParentFromEnterAttribute();return1:if((\"\"==_local) && (\"\" == _uri)) { spawnHandlerFromEnterAttribute((((AssertionTypeImpl)).Unmarshaller(context)),qname);}}(_); } }", "n_tokens": 95, "n_pass": [726, 62, 62]}
{"time": "2021-02-16 01:18:38.267148", "score": "1.0", "loss": "0.0", "code": "void enterAttribute(String local,String qname)throws SAXException{outer:while(true){switch(state){case 3:revertToParentFromEnterAttribute();return1:if((\"\"==local) && (\"\" == _uri)) { spawnHandlerFromEnterAttribute((((AssertionTypeImpl)).Unmarshaller(context)),qname);}}(_); } }", "n_tokens": 94, "n_pass": [727, 63, 63]}
{"time": "2021-02-16 01:18:40.854242", "score": "1.0", "loss": "0.0", "code": "void enterAttribute(String local,String qname)throws SAXException{outer:while(true){switch(state){case 3:revertToParentFromEnterAttribute();return1:if((\"\"==local)&& (\"\" == _uri)) { spawnHandlerFromEnterAttribute((((AssertionTypeImpl)).Unmarshaller(context)),qname);}}(_); } }", "n_tokens": 93, "n_pass": [730, 64, 64]}
{"time": "2021-02-16 01:18:43.465917", "score": "1.0", "loss": "0.0", "code": "void enterAttribute(String local,String qname)throws SAXException{outer:while(true){switch(state){case 3:revertToParentFromEnterAttribute();return1:if((\"\"==local)& (\"\" == _uri)) { spawnHandlerFromEnterAttribute((((AssertionTypeImpl)).Unmarshaller(context)),qname);}}(_); } }", "n_tokens": 92, "n_pass": [731, 65, 65]}
{"time": "2021-02-16 01:18:46.036389", "score": "1.0", "loss": "0.0", "code": "void enterAttribute(String local,String qname)throws SAXException{outer:while(true){switch(state){case 3:revertToParentFromEnterAttribute();return1:if((\"\"==local)&(\"\" == _uri)) { spawnHandlerFromEnterAttribute((((AssertionTypeImpl)).Unmarshaller(context)),qname);}}(_); } }", "n_tokens": 91, "n_pass": [733, 66, 66]}
{"time": "2021-02-16 01:18:48.652762", "score": "1.0", "loss": "0.0", "code": "void enterAttribute(String local,String qname)throws SAXException{outer:while(true){switch(state){case 3:revertToParentFromEnterAttribute();return1:if((\"\"==local)&(\"\"== _uri)) { spawnHandlerFromEnterAttribute((((AssertionTypeImpl)).Unmarshaller(context)),qname);}}(_); } }", "n_tokens": 90, "n_pass": [737, 67, 67]}
{"time": "2021-02-16 01:18:52.041554", "score": "1.0", "loss": "0.0", "code": "void enterAttribute(String local,String qname)throws SAXException{outer:while(true){switch(state){case 3:revertToParentFromEnterAttribute();return1:if((\"\"==local)&(\"\"==_uri)) { spawnHandlerFromEnterAttribute((((AssertionTypeImpl)).Unmarshaller(context)),qname);}}(_); } }", "n_tokens": 89, "n_pass": [740, 68, 68]}
{"time": "2021-02-16 01:18:54.705792", "score": "1.0", "loss": "0.0", "code": "void enterAttribute(String local,String qname)throws SAXException{outer:while(true){switch(state){case 3:revertToParentFromEnterAttribute();return1:if((\"\"==local)&(\"\"==uri)) { spawnHandlerFromEnterAttribute((((AssertionTypeImpl)).Unmarshaller(context)),qname);}}(_); } }", "n_tokens": 88, "n_pass": [741, 69, 69]}
{"time": "2021-02-16 01:18:57.275903", "score": "1.0", "loss": "0.0", "code": "void enterAttribute(String local,String qname)throws SAXException{outer:while(true){switch(state){case 3:revertToParentFromEnterAttribute();return1:if((\"\"==local)&(\"\"==uri)){ spawnHandlerFromEnterAttribute((((AssertionTypeImpl)).Unmarshaller(context)),qname);}}(_); } }", "n_tokens": 87, "n_pass": [745, 70, 70]}
{"time": "2021-02-16 01:18:59.849753", "score": "1.0", "loss": "0.0", "code": "void enterAttribute(String local,String qname)throws SAXException{outer:while(true){switch(state){case 3:revertToParentFromEnterAttribute();return1:if((\"\"==local)&(\"\"==uri)){spawnHandlerFromEnterAttribute((((AssertionTypeImpl)).Unmarshaller(context)),qname);}}(_); } }", "n_tokens": 86, "n_pass": [747, 71, 71]}
{"time": "2021-02-16 01:19:02.516088", "score": "1.0", "loss": "0.0", "code": "void enterAttribute(String local,String qname)throws SAXException{outer:while(true){switch(state){case 3:revertToParentFromEnterAttribute();return1:if((\"\"==local)&(\"\"==uri)){spawnHandlerFromEnterAttribute((((AssertionTypeImpl)).Unmarshaller()),qname);}}(_); } }", "n_tokens": 85, "n_pass": [759, 72, 72]}
{"time": "2021-02-16 01:19:08.394049", "score": "1.0", "loss": "0.0", "code": "void enterAttribute(String local,String qname)throws SAXException{outer:while(true){switch(state){case 3:revertToParentFromEnterAttribute();return1:if((\"\"==local)&(\"\"==uri)){spawnHandlerFromEnterAttribute((((AssertionTypeImpl)).Unmarshaller()),qname);}}(_);} }", "n_tokens": 84, "n_pass": [850, 73, 73]}
{"time": "2021-02-16 01:19:10.961495", "score": "1.0", "loss": "0.0", "code": "void enterAttribute(String local,String qname)throws SAXException{outer:while(true){switch(state){case 3:revertToParentFromEnterAttribute();return1:if((\"\"==local)&(\"\"==uri)){spawnHandlerFromEnterAttribute((((AssertionTypeImpl)).Unmarshaller()),qname);}}(_);}}", "n_tokens": 83, "n_pass": [851, 74, 74]}

Minimal simplified code:
void enterAttribute(String local,String qname)throws SAXException{outer:while(true){switch(state){case 3:revertToParentFromEnterAttribute();return1:if((""==local)&(""==uri)){spawnHandlerFromEnterAttribute((((AssertionTypeImpl)).Unmarshaller()),qname);}}(_);}}

