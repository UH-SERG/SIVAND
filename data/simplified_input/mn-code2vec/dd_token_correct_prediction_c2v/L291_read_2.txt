
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/bcgit__bc-java/core/src/main/java/org/bouncycastle/util/io/TeeInputStream_read.java
method_name = read
method_body = public int read() throws IOException { int i = input.read(); if (i >= 0) { output.write(i); } return i; }
predict, score, loss = read, 0.963586688041687, 0.045477431267499924

Trace of simplified code(s):
{"time": "2021-02-14 14:13:47.150479", "score": "0.9636", "loss": "0.0455", "code": "public int read() throws IOException { int i = input.read(); if (i >= 0) { output.write(i); } return i; }", "n_tokens": 56, "n_pass": [1, 1, 1]}
{"time": "2021-02-14 14:13:50.200120", "score": "0.932", "loss": "0.0891", "code": "public int read() throws IOException { int i = input.read(); if (i ) { output.write(i); } return i; }", "n_tokens": 52, "n_pass": [54, 2, 2]}
{"time": "2021-02-14 14:13:54.765658", "score": "0.9236", "loss": "0.1013", "code": "public int read() throws IOException { int i = input.read(); if (i ) { write(i); } return i; }", "n_tokens": 50, "n_pass": [102, 3, 3]}
{"time": "2021-02-14 14:13:57.414455", "score": "0.951", "loss": "0.0688", "code": "public int read() throws IOException { int i = input.read(); if (i ) { write(i); } i; }", "n_tokens": 48, "n_pass": [106, 4, 4]}
{"time": "2021-02-14 14:14:00.065368", "score": "0.9481", "loss": "0.0724", "code": "public int read() throws IOException { int i = input.read(); if (i ) { write(i); }  }", "n_tokens": 46, "n_pass": [107, 5, 5]}
{"time": "2021-02-14 14:14:02.702738", "score": "0.9481", "loss": "0.0724", "code": " int read() throws IOException { int i = input.read(); if (i ) { write(i); }  }", "n_tokens": 45, "n_pass": [109, 6, 6]}
{"time": "2021-02-14 14:14:05.367497", "score": "0.9481", "loss": "0.0724", "code": "int read() throws IOException { int i = input.read(); if (i ) { write(i); }  }", "n_tokens": 44, "n_pass": [110, 7, 7]}
{"time": "2021-02-14 14:14:08.827675", "score": "0.9481", "loss": "0.0724", "code": "int read()throws IOException { int i = input.read(); if (i ) { write(i); }  }", "n_tokens": 43, "n_pass": [116, 8, 8]}
{"time": "2021-02-14 14:14:11.461986", "score": "0.935", "loss": "0.1283", "code": "int read()throws IOException { i = input.read(); if (i ) { write(i); }  }", "n_tokens": 41, "n_pass": [120, 9, 9]}
{"time": "2021-02-14 14:14:14.080194", "score": "0.7737", "loss": "0.4232", "code": "int read()throws IOException { i = read(); if (i ) { write(i); }  }", "n_tokens": 39, "n_pass": [123, 10, 10]}
{"time": "2021-02-14 14:14:23.167007", "score": "0.7737", "loss": "0.4232", "code": "int read()throws IOException { i = read();if (i ) { write(i); }  }", "n_tokens": 38, "n_pass": [182, 11, 11]}
{"time": "2021-02-14 14:14:25.778694", "score": "0.7737", "loss": "0.4232", "code": "int read()throws IOException { i = read();if(i ) { write(i); }  }", "n_tokens": 37, "n_pass": [183, 12, 12]}
{"time": "2021-02-14 14:14:28.418649", "score": "0.7737", "loss": "0.4232", "code": "int read()throws IOException { i = read();if(i) { write(i); }  }", "n_tokens": 36, "n_pass": [186, 13, 13]}
{"time": "2021-02-14 14:14:31.039735", "score": "0.7737", "loss": "0.4232", "code": "int read()throws IOException { i = read();if(i){ write(i); }  }", "n_tokens": 35, "n_pass": [188, 14, 14]}
{"time": "2021-02-14 14:14:33.659763", "score": "0.7737", "loss": "0.4232", "code": "int read()throws IOException { i = read();if(i){write(i); }  }", "n_tokens": 34, "n_pass": [190, 15, 15]}
{"time": "2021-02-14 14:14:36.303068", "score": "0.9552", "loss": "0.053", "code": "int read()throws IOException { i = read();if(i){(i); }  }", "n_tokens": 33, "n_pass": [191, 16, 16]}
{"time": "2021-02-14 14:14:38.916511", "score": "0.9552", "loss": "0.053", "code": "int read()throws IOException { i = read();if(i){(i);}  }", "n_tokens": 32, "n_pass": [196, 17, 17]}
{"time": "2021-02-14 14:14:41.539977", "score": "0.9552", "loss": "0.053", "code": "int read()throws IOException { i = read();if(i){(i);} }", "n_tokens": 31, "n_pass": [198, 18, 18]}
{"time": "2021-02-14 14:14:44.146837", "score": "0.9552", "loss": "0.053", "code": "int read()throws IOException { i = read();if(i){(i);}}", "n_tokens": 30, "n_pass": [199, 19, 19]}
{"time": "2021-02-14 14:14:47.573427", "score": "0.9552", "loss": "0.053", "code": "int read()throws IOException{ i = read();if(i){(i);}}", "n_tokens": 29, "n_pass": [209, 20, 20]}
{"time": "2021-02-14 14:14:50.199813", "score": "0.9552", "loss": "0.053", "code": "int read()throws IOException{i = read();if(i){(i);}}", "n_tokens": 28, "n_pass": [211, 21, 21]}
{"time": "2021-02-14 14:14:52.898720", "score": "0.9552", "loss": "0.053", "code": "int read()throws IOException{i= read();if(i){(i);}}", "n_tokens": 27, "n_pass": [213, 22, 22]}
{"time": "2021-02-14 14:14:55.512624", "score": "0.9552", "loss": "0.053", "code": "int read()throws IOException{i=read();if(i){(i);}}", "n_tokens": 26, "n_pass": [215, 23, 23]}

Minimal simplified code:
int read()throws IOException{i=read();if(i){(i);}}

