
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/OpenRock__OpenAM/openam-shared/src/main/java/com/iplanet/security/util/BigInt_equals.java
method_name = equals
method_body = public boolean equals(BigInt other) { if (this == other) return true; byte[] otherPlaces = other.toByteArray(); if (places.length != otherPlaces.length) return false; for (int i = 0; i < places.length; i++) if (places[i] != otherPlaces[i]) return false; return true; }
predict, score, loss = equals, 0.8553950786590576, 0.38107290863990784

Trace of simplified code(s):
{"time": "2021-02-14 13:18:31.385860", "score": "0.5802", "loss": "1.079", "code": "public boolean equals(BigInt other) { if (this == other) return true; byte[] otherPlaces = other.toByteArray(); if (places.length != otherPlaces.length) return false; for (int i = 0; i < places.length; i++) if (places[i] != otherPlaces[i]) return false; return true; }", "n_tokens": 118, "n_pass": [1, 1, 1]}
{"time": "2021-02-14 13:18:34.040359", "score": "0.8854", "loss": "0.2952", "code": "public boolean equals(BigInt other) { if (this == other) return true;  return false; for (int i = 0; i < places.length; i++) if (places[i] != otherPlaces[i]) return false; return true; }", "n_tokens": 89, "n_pass": [9, 2, 2]}
{"time": "2021-02-14 13:18:36.707054", "score": "0.792", "loss": "0.4987", "code": "public boolean equals(BigInt other) { if (this == other) return true;for (int i = 0; i < places.length; i++) if (places[i] != otherPlaces[i]) return false; return true; }", "n_tokens": 82, "n_pass": [37, 3, 3]}
{"time": "2021-02-14 13:18:39.389789", "score": "0.9519", "loss": "0.1038", "code": "public boolean equals(BigInt other) { if (this == other) return true;for (int i = 0; i < places.length; i[i] != otherPlaces[i]) return false; return true; }", "n_tokens": 74, "n_pass": [41, 4, 4]}
{"time": "2021-02-14 13:18:42.045802", "score": "0.948", "loss": "0.1109", "code": "public boolean equals(BigInt other) { if (this == other) return true;for (int i = 0; i < places.length; i[i]) return false; return true; }", "n_tokens": 66, "n_pass": [42, 5, 5]}
{"time": "2021-02-14 13:18:44.714808", "score": "0.9468", "loss": "0.1128", "code": "public boolean equals(BigInt other) { if (this == other) return true;for (int i = 0; i < places.length; i[i]); return true; }", "n_tokens": 62, "n_pass": [71, 6, 6]}
{"time": "2021-02-14 13:18:47.363414", "score": "0.9533", "loss": "0.0806", "code": "public boolean equals(BigInt other) { if (this == other) return true;for (int i = 0; i < places.length; i[i])true; }", "n_tokens": 58, "n_pass": [72, 7, 7]}
{"time": "2021-02-14 13:18:55.753746", "score": "0.9535", "loss": "0.0799", "code": "public boolean equals(BigInt other) { if (this == other) return true;for (int i; i < places.length; i[i])true; }", "n_tokens": 54, "n_pass": [84, 10, 8]}
{"time": "2021-02-14 13:19:05.271096", "score": "0.9645", "loss": "0.0627", "code": "public boolean equals(BigInt other) { if (this == other) return true;for (int i; i < length; i[i])true; }", "n_tokens": 52, "n_pass": [133, 13, 9]}
{"time": "2021-02-14 13:19:07.943308", "score": "0.9645", "loss": "0.0627", "code": " boolean equals(BigInt other) { if (this == other) return true;for (int i; i < length; i[i])true; }", "n_tokens": 51, "n_pass": [140, 14, 10]}
{"time": "2021-02-14 13:19:10.585221", "score": "0.9645", "loss": "0.0627", "code": "boolean equals(BigInt other) { if (this == other) return true;for (int i; i < length; i[i])true; }", "n_tokens": 50, "n_pass": [141, 15, 11]}
{"time": "2021-02-14 13:19:23.842419", "score": "0.9645", "loss": "0.0627", "code": "boolean equals(BigInt other){ if (this == other) return true;for (int i; i < length; i[i])true; }", "n_tokens": 49, "n_pass": [219, 17, 12]}
{"time": "2021-02-14 13:19:26.484646", "score": "0.9645", "loss": "0.0627", "code": "boolean equals(BigInt other){if (this == other) return true;for (int i; i < length; i[i])true; }", "n_tokens": 48, "n_pass": [220, 18, 13]}
{"time": "2021-02-14 13:19:29.120878", "score": "0.9645", "loss": "0.0627", "code": "boolean equals(BigInt other){if(this == other) return true;for (int i; i < length; i[i])true; }", "n_tokens": 47, "n_pass": [222, 19, 14]}
{"time": "2021-02-14 13:19:31.788091", "score": "0.9645", "loss": "0.0627", "code": "boolean equals(BigInt other){if(this== other) return true;for (int i; i < length; i[i])true; }", "n_tokens": 46, "n_pass": [225, 20, 15]}
{"time": "2021-02-14 13:19:35.291824", "score": "0.9645", "loss": "0.0627", "code": "boolean equals(BigInt other){if(this==other) return true;for (int i; i < length; i[i])true; }", "n_tokens": 45, "n_pass": [228, 21, 16]}
{"time": "2021-02-14 13:19:37.946258", "score": "0.9645", "loss": "0.0627", "code": "boolean equals(BigInt other){if(this==other)return true;for (int i; i < length; i[i])true; }", "n_tokens": 44, "n_pass": [231, 22, 17]}
{"time": "2021-02-14 13:19:43.233301", "score": "0.2927", "loss": "1.9484", "code": "boolean equals(BigInt other){if(this==other)returntrue;for (int i; i < length; i[i])true; }", "n_tokens": 43, "n_pass": [233, 24, 18]}
{"time": "2021-02-14 13:19:48.507168", "score": "0.2927", "loss": "1.9484", "code": "boolean equals(BigInt other){if(this==other)returntrue;for(int i; i < length; i[i])true; }", "n_tokens": 42, "n_pass": [237, 26, 19]}
{"time": "2021-02-14 13:19:51.159036", "score": "0.2838", "loss": "1.9771", "code": "boolean equals(BigInt other){if(this==other)returntrue;for( i; i < length; i[i])true; }", "n_tokens": 41, "n_pass": [239, 27, 20]}
{"time": "2021-02-14 13:19:53.805154", "score": "0.2838", "loss": "1.9771", "code": "boolean equals(BigInt other){if(this==other)returntrue;for(i; i < length; i[i])true; }", "n_tokens": 40, "n_pass": [240, 28, 21]}
{"time": "2021-02-14 13:19:56.447332", "score": "0.2774", "loss": "2.0049", "code": "boolean equals(BigInt other){if(this==other)returntrue;for(; i < length; i[i])true; }", "n_tokens": 39, "n_pass": [241, 29, 22]}
{"time": "2021-02-14 13:19:59.106559", "score": "0.2774", "loss": "2.0049", "code": "boolean equals(BigInt other){if(this==other)returntrue;for(;i < length; i[i])true; }", "n_tokens": 38, "n_pass": [243, 30, 23]}
{"time": "2021-02-14 13:20:01.741035", "score": "0.2774", "loss": "2.0049", "code": "boolean equals(BigInt other){if(this==other)returntrue;for(;i< length; i[i])true; }", "n_tokens": 37, "n_pass": [245, 31, 24]}
{"time": "2021-02-14 13:20:04.383581", "score": "0.2774", "loss": "2.0049", "code": "boolean equals(BigInt other){if(this==other)returntrue;for(;i<length; i[i])true; }", "n_tokens": 36, "n_pass": [247, 32, 25]}
{"time": "2021-02-14 13:20:07.010832", "score": "0.2774", "loss": "2.0049", "code": "boolean equals(BigInt other){if(this==other)returntrue;for(;i<length;i[i])true; }", "n_tokens": 35, "n_pass": [250, 33, 26]}
{"time": "2021-02-14 13:20:09.644457", "score": "0.2668", "loss": "2.0323", "code": "boolean equals(BigInt other){if(this==other)returntrue;for(;i<length;i[i]); }", "n_tokens": 34, "n_pass": [256, 34, 27]}
{"time": "2021-02-14 13:20:12.267953", "score": "0.2668", "loss": "2.0323", "code": "boolean equals(BigInt other){if(this==other)returntrue;for(;i<length;i[i]);}", "n_tokens": 33, "n_pass": [258, 35, 28]}
{"time": "2021-02-14 13:20:21.823397", "score": "0.3799", "loss": "2.1414", "code": "boolean equals(BigInt other){if(this==other)returntrue;for(;ilength;i[i]);}", "n_tokens": 32, "n_pass": [283, 38, 29]}
{"time": "2021-02-14 13:20:24.479132", "score": "0.2801", "loss": "1.8634", "code": "boolean equals(BigInt other){if(this==other)returntrue;for(;i;i[i]);}", "n_tokens": 31, "n_pass": [284, 39, 30]}
{"time": "2021-02-14 13:20:34.040060", "score": "0.2724", "loss": "1.8932", "code": "boolean equals(BigInt other){if(this==other)returntrue;for(;;i[i]);}", "n_tokens": 30, "n_pass": [315, 42, 31]}

Minimal simplified code:
boolean equals(BigInt other){if(this==other)returntrue;for(;;i[i]);}

