
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/sakaiproject__sakai/kernel/api/src/main/java/org/sakaiproject/event/cover/UsageSessionService_getSessions.java
method_name = getSessions
method_body = public static java.util.List getSessions(java.util.List param0) { org.sakaiproject.event.api.UsageSessionService service = getInstance(); if (service == null) return null; return service.getSessions(param0); }
predict, score, loss = getSessions, 0.9172666668891907, 0.1571865826845169

Trace of simplified code(s):
{"time": "2021-02-14 14:32:31.552197", "score": "0.9173", "loss": "0.1572", "code": "public static java.util.List getSessions(java.util.List param0) { org.sakaiproject.event.api.UsageSessionService service = getInstance(); if (service == null) return null; return service.getSessions(param0); }", "n_tokens": 71, "n_pass": [1, 1, 1]}
{"time": "2021-02-14 14:32:34.202234", "score": "0.9103", "loss": "0.1719", "code": "List getSessions(java.util.List param0) { org.sakaiproject.event.api.UsageSessionService service = getInstance(); if (service == null) return null; return service.getSessions(param0); }", "n_tokens": 63, "n_pass": [20, 2, 2]}
{"time": "2021-02-14 14:32:36.876703", "score": "0.9832", "loss": "0.0259", "code": "List getSessions(List param0) { org.sakaiproject.event.api.UsageSessionService service = getInstance(); if (service == null) return null; return service.getSessions(param0); }", "n_tokens": 59, "n_pass": [42, 3, 3]}
{"time": "2021-02-14 14:32:39.540050", "score": "0.939", "loss": "0.1146", "code": "List getSessions() { org.sakaiproject.event.api.UsageSessionService service = getInstance(); if (service == null) return null; return service.getSessions(param0); }", "n_tokens": 55, "n_pass": [43, 4, 4]}
{"time": "2021-02-14 14:32:42.190009", "score": "0.9298", "loss": "0.1382", "code": "List getSessions() { event.api.UsageSessionService service = getInstance(); if (service == null) return null; return service.getSessions(param0); }", "n_tokens": 51, "n_pass": [45, 5, 5]}
{"time": "2021-02-14 14:32:44.853058", "score": "0.9555", "loss": "0.0813", "code": "List getSessions() { UsageSessionService service = getInstance(); if (service == null) return null; return service.getSessions(param0); }", "n_tokens": 47, "n_pass": [46, 6, 6]}
{"time": "2021-02-14 14:32:47.476467", "score": "0.9651", "loss": "0.0676", "code": "List getSessions() { UsageSessionService service ; if (service == null) return null; return service.getSessions(param0); }", "n_tokens": 42, "n_pass": [48, 7, 7]}
{"time": "2021-02-14 14:32:50.104213", "score": "0.9673", "loss": "0.1078", "code": "List getSessions() { UsageSessionService service ; if (null) return null; return service.getSessions(param0); }", "n_tokens": 37, "n_pass": [50, 8, 8]}
{"time": "2021-02-14 14:32:52.730194", "score": "0.9867", "loss": "0.0242", "code": "List getSessions() { UsageSessionService service ; if (null) return service.getSessions(param0); }", "n_tokens": 32, "n_pass": [52, 9, 9]}
{"time": "2021-02-14 14:32:55.354440", "score": "0.9782", "loss": "0.0499", "code": "List getSessions() { ; if (null) return service.getSessions(param0); }", "n_tokens": 28, "n_pass": [57, 10, 10]}
{"time": "2021-02-14 14:32:58.379716", "score": "0.9782", "loss": "0.0499", "code": "List getSessions() { if (null) return service.getSessions(param0); }", "n_tokens": 26, "n_pass": [76, 11, 11]}
{"time": "2021-02-14 14:33:03.662011", "score": "0.9782", "loss": "0.0499", "code": "List getSessions() { if(null) return service.getSessions(param0); }", "n_tokens": 25, "n_pass": [111, 12, 12]}
{"time": "2021-02-14 14:33:06.289592", "score": "0.9782", "loss": "0.0499", "code": "List getSessions() { if(null)return service.getSessions(param0); }", "n_tokens": 24, "n_pass": [115, 13, 13]}
{"time": "2021-02-14 14:33:08.900576", "score": "0.7083", "loss": "0.4034", "code": "List getSessions() { if(null) service.getSessions(param0); }", "n_tokens": 23, "n_pass": [116, 14, 14]}
{"time": "2021-02-14 14:33:11.542580", "score": "0.7083", "loss": "0.4034", "code": "List getSessions() { if(null)service.getSessions(param0); }", "n_tokens": 22, "n_pass": [117, 15, 15]}
{"time": "2021-02-14 14:33:16.801499", "score": "0.9979", "loss": "0.0029", "code": "List getSessions() { if(null)service.getSessions(); }", "n_tokens": 20, "n_pass": [121, 17, 16]}
{"time": "2021-02-14 14:33:20.634930", "score": "0.9979", "loss": "0.0029", "code": "List getSessions(){ if(null)service.getSessions(); }", "n_tokens": 19, "n_pass": [129, 18, 17]}
{"time": "2021-02-14 14:33:23.250474", "score": "0.9979", "loss": "0.0029", "code": "List getSessions(){if(null)service.getSessions(); }", "n_tokens": 18, "n_pass": [131, 19, 18]}
{"time": "2021-02-14 14:33:30.433788", "score": "0.9979", "loss": "0.0029", "code": "List getSessions(){if(null)service.getSessions();}", "n_tokens": 17, "n_pass": [157, 21, 19]}

Minimal simplified code:
List getSessions(){if(null)service.getSessions();}

