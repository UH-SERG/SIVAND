
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/OpenRock__OpenAM/openam-sts/openam-common-sts/src/main/java/org/forgerock/openam/sts/service/invocation/TokenGenerationServiceInvocationState_equals.java
method_name = equals
method_body = @Override public boolean equals(Object other) { if (other == this) { return true; } if (other instanceof TokenGenerationServiceInvocationState) { TokenGenerationServiceInvocationState oc = (TokenGenerationServiceInvocationState) other; return ssoTokenString.equals(oc.getSsoTokenString()) && tokenType.equals(oc.getTokenType()) && stsInstanceId.equals(oc.getStsInstanceId()) && stsType.equals(oc.getStsType()) && Objects.equal(saml2TokenGenerationState, oc.getSaml2TokenGenerationState()) && Objects.equal(openIdConnectTokenGenerationState, oc.getOpenIdConnectTokenGenerationState()) && realm.equals(oc.getRealm()); } return false; }
predict, score, loss = equals, 0.996387243270874, 0.004535388201475143

Trace of simplified code(s):
{"time": "2021-02-14 12:40:01.713718", "score": "0.9986", "loss": "0.0015", "code": "@Override public boolean equals(Object other) { if (other == this) { return true; } if (other instanceof TokenGenerationServiceInvocationState) { TokenGenerationServiceInvocationState oc = (TokenGenerationServiceInvocationState) other; return ssoTokenString.equals(oc.getSsoTokenString()) && tokenType.equals(oc.getTokenType()) && stsInstanceId.equals(oc.getStsInstanceId()) && stsType.equals(oc.getStsType()) && Objects.equal(saml2TokenGenerationState, oc.getSaml2TokenGenerationState()) && Objects.equal(openIdConnectTokenGenerationState, oc.getOpenIdConnectTokenGenerationState()) && realm.equals(oc.getRealm()); } return false; }", "n_tokens": 177, "n_pass": [1, 1, 1]}
{"time": "2021-02-14 12:40:04.410979", "score": "0.9964", "loss": "0.0058", "code": "@Override public boolean equals(Object other) { if (other == this) { return true; } if (other instanceof TokenGenerationServiceInvocationState) { TokenGenerationServiceInvocationState oc = (TokenGenerationServiceInvocationState) other; return ssoTokenString.equals&& stsInstanceId.equals(oc.getStsInstanceId()) && stsType.equals(oc.getStsType()) && Objects.equal(saml2TokenGenerationState, oc.getSaml2TokenGenerationState()) && Objects.equal(openIdConnectTokenGenerationState, oc.getOpenIdConnectTokenGenerationState()) && realm.equals(oc.getRealm()); } return false; }", "n_tokens": 155, "n_pass": [23, 2, 2]}
{"time": "2021-02-14 12:40:07.082448", "score": "0.9999", "loss": "0.0002", "code": "@Override public boolean equals(Object other) { if (other == this) { return true; } if (other instanceof TokenGenerationServiceInvocationState) { TokenGenerationServiceInvocationState oc = (TokenGenerationServiceInvocationState) other; return ssoTokenString.equals&& stsInstanceId.equals(oc.getStsInstanceId()) && stsType.equals(ocTokenGenerationState()) && Objects.equal(openIdConnectTokenGenerationState, oc.getOpenIdConnectTokenGenerationState()) && realm.equals(oc.getRealm()); } return false; }", "n_tokens": 133, "n_pass": [25, 3, 3]}
{"time": "2021-02-14 12:40:09.768866", "score": "0.9999", "loss": "0.0002", "code": "@Override public boolean equals(Object other) { if (other == this) { return true; } if (other instanceof TokenGenerationServiceInvocationState) { TokenGenerationServiceInvocationState oc = (TokenGenerationServiceInvocationState) other; return ssoTokenString.equals&& stsInstanceId.equals(oc.getStsInstanceId()) && stsType.equals(ocTokenGenerationState()) && Objects.equal&& realm.equals(oc.getRealm()); } return false; }", "n_tokens": 122, "n_pass": [45, 4, 4]}
{"time": "2021-02-14 12:40:12.477381", "score": "0.9999", "loss": "0.0001", "code": "@Override public boolean equals(Object other) { if (other == this) { return true; } if (other instanceof TokenGenerationServiceInvocationState) { TokenGenerationServiceInvocationState oc = (TokenGenerationServiceInvocationState) other; return ssoTokenString.equals&& stsInstanceId.equals(oc.getStsInstanceId()) && stsType.equals(ocTokenGenerationState()) && Objects.equals(oc.getRealm()); } return false; }", "n_tokens": 116, "n_pass": [78, 5, 5]}
{"time": "2021-02-14 12:40:15.147370", "score": "0.9999", "loss": "0.0002", "code": "boolean equals(Object other) { if (other == this) { return true; } if (other instanceof TokenGenerationServiceInvocationState) { TokenGenerationServiceInvocationState oc = (TokenGenerationServiceInvocationState) other; return ssoTokenString.equals&& stsInstanceId.equals(oc.getStsInstanceId()) && stsType.equals(ocTokenGenerationState()) && Objects.equals(oc.getRealm()); } return false; }", "n_tokens": 111, "n_pass": [82, 6, 6]}
{"time": "2021-02-14 12:40:17.899138", "score": "0.9996", "loss": "0.0005", "code": "boolean equals(Object other) { if (other) { return true; } if (other instanceof TokenGenerationServiceInvocationState) { TokenGenerationServiceInvocationState oc = (TokenGenerationServiceInvocationState) other; return ssoTokenString.equals&& stsInstanceId.equals(oc.getStsInstanceId()) && stsType.equals(ocTokenGenerationState()) && Objects.equals(oc.getRealm()); } return false; }", "n_tokens": 106, "n_pass": [86, 7, 7]}
{"time": "2021-02-14 12:40:20.570941", "score": "0.9998", "loss": "0.0003", "code": "boolean equals(Object other) { if (other) { return true; } if (other instanceof TokenGenerationServiceInvocationState) { TokenGenerationServiceInvocationState oc = (TokenGenerationServiceInvocationState) other; return stsInstanceId.equals(oc.getStsInstanceId()) && stsType.equals(ocTokenGenerationState()) && Objects.equals(oc.getRealm()); } return false; }", "n_tokens": 100, "n_pass": [94, 8, 8]}
{"time": "2021-02-14 12:40:23.247020", "score": "0.999", "loss": "0.0012", "code": "boolean equals(Object other) { if (other) { return true; } if (other instanceof TokenGenerationServiceInvocationState) { TokenGenerationServiceInvocationState oc = (TokenGenerationServiceInvocationState) other; return stsInstanceId.equals(oc.getStsInstanceId()) && stsType.equals && Objects.equals(oc.getRealm()); } return false; }", "n_tokens": 94, "n_pass": [98, 9, 9]}
{"time": "2021-02-14 12:40:25.903561", "score": "0.9963", "loss": "0.0054", "code": "boolean equals(Object other) { if (other) { return true; } if (other instanceof TokenGenerationServiceInvocationState) { TokenGenerationServiceInvocationState oc = (TokenGenerationServiceInvocationState) other; return stsInstanceId.equals(oc.getStsInstanceId()) && stsType.equalsequals(oc.getRealm()); } return false; }", "n_tokens": 88, "n_pass": [99, 10, 10]}
{"time": "2021-02-14 12:40:28.603764", "score": "0.9913", "loss": "0.0137", "code": "boolean equals(Object other) { if (other) { return true; } if (other instanceof TokenGenerationServiceInvocationState) { TokenGenerationServiceInvocationState oc = (TokenGenerationServiceInvocationState) other; return stsInstanceId.equals(oc.getStsInstanceId()) && stsType.equalsequals(oc.getRealm()); } ; }", "n_tokens": 85, "n_pass": [152, 11, 11]}
{"time": "2021-02-14 12:40:31.689157", "score": "0.9944", "loss": "0.0085", "code": "boolean equals(Object other) { if (other) { ; } if (other instanceof TokenGenerationServiceInvocationState) { TokenGenerationServiceInvocationState oc = (TokenGenerationServiceInvocationState) other; return stsInstanceId.equals(oc.getStsInstanceId()) && stsType.equalsequals(oc.getRealm()); } ; }", "n_tokens": 82, "n_pass": [162, 12, 12]}
{"time": "2021-02-14 12:40:34.338645", "score": "0.9654", "loss": "0.077", "code": "boolean equals(Object other) { if (other) { ; } if (other ) { TokenGenerationServiceInvocationState oc = (TokenGenerationServiceInvocationState) other; return stsInstanceId.equals(oc.getStsInstanceId()) && stsType.equalsequals(oc.getRealm()); } ; }", "n_tokens": 79, "n_pass": [166, 13, 13]}
{"time": "2021-02-14 12:40:36.987017", "score": "0.9484", "loss": "0.1575", "code": "boolean equals(Object other) { if (other) { ; } if (other ) {oc = (TokenGenerationServiceInvocationState) other; return stsInstanceId.equals(oc.getStsInstanceId()) && stsType.equalsequals(oc.getRealm()); } ; }", "n_tokens": 76, "n_pass": [168, 14, 14]}
{"time": "2021-02-14 12:40:40.445273", "score": "0.981", "loss": "0.0504", "code": "boolean equals(Object other) { if (other) { ; } if (other ) {oc = (TokenGenerationServiceInvocationState) other; return stsInstanceId.equals(oc.getStsInstanceId()) && equals(oc.getRealm()); } ; }", "n_tokens": 73, "n_pass": [178, 15, 15]}
{"time": "2021-02-14 12:40:50.359360", "score": "0.9775", "loss": "0.0616", "code": "boolean equals(Object other) { if (other) { ; } if (other ) {oc = (TokenGenerationServiceInvocationState) other; return stsInstanceId.equals(oc.getStsInstanceId()) &&(oc.getRealm()); } ; }", "n_tokens": 71, "n_pass": [262, 16, 16]}
{"time": "2021-02-14 12:40:53.032886", "score": "0.9811", "loss": "0.0348", "code": "boolean equals(Object other) { if (other) { ; } if (other ) {oc = (TokenGenerationServiceInvocationState) other; return stsInstanceId.equals(oc.getStsInstanceId()) &&(oc()); } ; }", "n_tokens": 69, "n_pass": [264, 17, 17]}
{"time": "2021-02-14 12:40:55.671263", "score": "0.9811", "loss": "0.0348", "code": "boolean equals(Object other) { if (other) { ; } if (other ) {oc = (TokenGenerationServiceInvocationState) other; return stsInstanceId.equals(oc.getStsInstanceId()) &&(oc); } ; }", "n_tokens": 67, "n_pass": [265, 18, 18]}
{"time": "2021-02-14 12:40:58.317022", "score": "0.9811", "loss": "0.0348", "code": "boolean equals(Object other) { if (other) { ; } if (other ) {oc = (TokenGenerationServiceInvocationState) other; return stsInstanceId.equals(oc.getStsInstanceId()) &&(oc); } }", "n_tokens": 65, "n_pass": [268, 19, 19]}
{"time": "2021-02-14 12:41:01.773469", "score": "0.9811", "loss": "0.0348", "code": "boolean equals(Object other){ if (other) { ; } if (other ) {oc = (TokenGenerationServiceInvocationState) other; return stsInstanceId.equals(oc.getStsInstanceId()) &&(oc); } }", "n_tokens": 64, "n_pass": [278, 20, 20]}
{"time": "2021-02-14 12:41:04.434628", "score": "0.9811", "loss": "0.0348", "code": "boolean equals(Object other){if (other) { ; } if (other ) {oc = (TokenGenerationServiceInvocationState) other; return stsInstanceId.equals(oc.getStsInstanceId()) &&(oc); } }", "n_tokens": 63, "n_pass": [280, 21, 21]}
{"time": "2021-02-14 12:41:07.074884", "score": "0.9811", "loss": "0.0348", "code": "boolean equals(Object other){if(other) { ; } if (other ) {oc = (TokenGenerationServiceInvocationState) other; return stsInstanceId.equals(oc.getStsInstanceId()) &&(oc); } }", "n_tokens": 62, "n_pass": [282, 22, 22]}
{"time": "2021-02-14 12:41:09.717854", "score": "0.9811", "loss": "0.0348", "code": "boolean equals(Object other){if(other){ ; } if (other ) {oc = (TokenGenerationServiceInvocationState) other; return stsInstanceId.equals(oc.getStsInstanceId()) &&(oc); } }", "n_tokens": 61, "n_pass": [286, 23, 23]}
{"time": "2021-02-14 12:41:12.379663", "score": "0.9811", "loss": "0.0348", "code": "boolean equals(Object other){if(other){; } if (other ) {oc = (TokenGenerationServiceInvocationState) other; return stsInstanceId.equals(oc.getStsInstanceId()) &&(oc); } }", "n_tokens": 60, "n_pass": [288, 24, 24]}
{"time": "2021-02-14 12:41:15.034662", "score": "0.9811", "loss": "0.0348", "code": "boolean equals(Object other){if(other){ } if (other ) {oc = (TokenGenerationServiceInvocationState) other; return stsInstanceId.equals(oc.getStsInstanceId()) &&(oc); } }", "n_tokens": 59, "n_pass": [289, 25, 25]}
{"time": "2021-02-14 12:41:17.665253", "score": "0.9811", "loss": "0.0348", "code": "boolean equals(Object other){if(other){} if (other ) {oc = (TokenGenerationServiceInvocationState) other; return stsInstanceId.equals(oc.getStsInstanceId()) &&(oc); } }", "n_tokens": 58, "n_pass": [290, 26, 26]}
{"time": "2021-02-14 12:41:20.318865", "score": "0.9811", "loss": "0.0348", "code": "boolean equals(Object other){if(other){}if (other ) {oc = (TokenGenerationServiceInvocationState) other; return stsInstanceId.equals(oc.getStsInstanceId()) &&(oc); } }", "n_tokens": 57, "n_pass": [292, 27, 27]}
{"time": "2021-02-14 12:41:22.956320", "score": "0.9811", "loss": "0.0348", "code": "boolean equals(Object other){if(other){}if(other ) {oc = (TokenGenerationServiceInvocationState) other; return stsInstanceId.equals(oc.getStsInstanceId()) &&(oc); } }", "n_tokens": 56, "n_pass": [294, 28, 28]}
{"time": "2021-02-14 12:41:25.620350", "score": "0.9811", "loss": "0.0348", "code": "boolean equals(Object other){if(other){}if(other) {oc = (TokenGenerationServiceInvocationState) other; return stsInstanceId.equals(oc.getStsInstanceId()) &&(oc); } }", "n_tokens": 55, "n_pass": [297, 29, 29]}
{"time": "2021-02-14 12:41:28.261892", "score": "0.9811", "loss": "0.0348", "code": "boolean equals(Object other){if(other){}if(other){oc = (TokenGenerationServiceInvocationState) other; return stsInstanceId.equals(oc.getStsInstanceId()) &&(oc); } }", "n_tokens": 54, "n_pass": [299, 30, 30]}
{"time": "2021-02-14 12:41:30.900504", "score": "0.9811", "loss": "0.0348", "code": "boolean equals(Object other){if(other){}if(other){oc= (TokenGenerationServiceInvocationState) other; return stsInstanceId.equals(oc.getStsInstanceId()) &&(oc); } }", "n_tokens": 53, "n_pass": [302, 31, 31]}
{"time": "2021-02-14 12:41:33.555774", "score": "0.9811", "loss": "0.0348", "code": "boolean equals(Object other){if(other){}if(other){oc=(TokenGenerationServiceInvocationState) other; return stsInstanceId.equals(oc.getStsInstanceId()) &&(oc); } }", "n_tokens": 52, "n_pass": [304, 32, 32]}
{"time": "2021-02-14 12:41:36.634412", "score": "0.8414", "loss": "0.3787", "code": "boolean equals(Object other){if(other){}if(other){oc=(TokenGenerationServiceInvocationState) other; return stsInstanceId(oc.getStsInstanceId()) &&(oc); } }", "n_tokens": 50, "n_pass": [310, 33, 33]}
{"time": "2021-02-14 12:41:39.273404", "score": "0.8543", "loss": "0.323", "code": "boolean equals(Object other){if(other){}if(other){oc=(TokenGenerationServiceInvocationState) other; return stsInstanceId(oc()) &&(oc); } }", "n_tokens": 48, "n_pass": [312, 34, 34]}
{"time": "2021-02-14 12:41:41.916868", "score": "0.8438", "loss": "0.3291", "code": "boolean equals(Object other){if(other){}if(other){oc=(TokenGenerationServiceInvocationState) other; return stsInstanceId(oc) &&(oc); } }", "n_tokens": 46, "n_pass": [313, 35, 35]}
{"time": "2021-02-14 12:41:45.773628", "score": "0.9249", "loss": "0.1263", "code": "boolean equals(Object other){if(other){}if(other){oc=(TokenGenerationServiceInvocationState) other; return(oc) &&(oc); } }", "n_tokens": 44, "n_pass": [346, 36, 36]}
{"time": "2021-02-14 12:41:48.419204", "score": "0.826", "loss": "0.4574", "code": "boolean equals(Object other){if(other){}if(other){oc=(TokenGenerationServiceInvocationState) other; return(oc) (oc); } }", "n_tokens": 42, "n_pass": [349, 37, 37]}
{"time": "2021-02-14 12:41:54.904942", "score": "0.826", "loss": "0.4574", "code": "boolean equals(Object other){if(other){}if(other){oc=(TokenGenerationServiceInvocationState) other; return(oc) (oc);} }", "n_tokens": 41, "n_pass": [404, 38, 38]}
{"time": "2021-02-14 12:41:57.535974", "score": "0.826", "loss": "0.4574", "code": "boolean equals(Object other){if(other){}if(other){oc=(TokenGenerationServiceInvocationState) other; return(oc) (oc);}}", "n_tokens": 40, "n_pass": [405, 39, 39]}
{"time": "2021-02-14 12:42:00.991979", "score": "0.826", "loss": "0.4574", "code": "boolean equals(Object other){if(other){}if(other){oc=(TokenGenerationServiceInvocationState)other; return(oc) (oc);}}", "n_tokens": 39, "n_pass": [432, 40, 40]}
{"time": "2021-02-14 12:42:03.616490", "score": "0.8348", "loss": "0.4811", "code": "boolean equals(Object other){if(other){}if(other){oc=(TokenGenerationServiceInvocationState); return(oc) (oc);}}", "n_tokens": 38, "n_pass": [433, 41, 41]}
{"time": "2021-02-14 12:42:06.259370", "score": "0.8348", "loss": "0.4811", "code": "boolean equals(Object other){if(other){}if(other){oc=(TokenGenerationServiceInvocationState);return(oc) (oc);}}", "n_tokens": 37, "n_pass": [435, 42, 42]}
{"time": "2021-02-14 12:42:09.288447", "score": "0.8348", "loss": "0.4811", "code": "boolean equals(Object other){if(other){}if(other){oc=(TokenGenerationServiceInvocationState);return(oc)(oc);}}", "n_tokens": 36, "n_pass": [440, 43, 43]}
{"time": "2021-02-14 12:42:12.738424", "score": "0.7433", "loss": "0.7492", "code": "boolean equals(Object other){if(other){}if(other){oc(TokenGenerationServiceInvocationState);return(oc)(oc);}}", "n_tokens": 35, "n_pass": [468, 44, 44]}
{"time": "2021-02-14 12:42:15.369046", "score": "0.8077", "loss": "0.541", "code": "boolean equals(Object other){if(other){}if(other){oc();return(oc)(oc);}}", "n_tokens": 34, "n_pass": [470, 45, 45]}

Minimal simplified code:
boolean equals(Object other){if(other){}if(other){oc();return(oc)(oc);}}

