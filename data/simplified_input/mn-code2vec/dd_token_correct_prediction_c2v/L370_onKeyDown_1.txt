
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/qpython-android__qpython/qpysdk/src/main/java/org/renpy/android/PythonActivity_onKeyDown.java
method_name = onKeyDown
method_body = @Override public boolean onKeyDown(int keyCode, final KeyEvent event) { if (mView != null && mView.mStarted && SDLSurfaceView.nativeKey(keyCode, 1, event.getUnicodeChar())) { return true; } else { return super.onKeyDown(keyCode, event); } }
predict, score, loss = onKeyDown, 0.9994382262229919, 0.0012061471352353692

Trace of simplified code(s):
{"time": "2021-02-14 17:00:04.122373", "score": "0.9994", "loss": "0.0012", "code": "@Override public boolean onKeyDown(int keyCode, final KeyEvent event) { if (mView != null && mView.mStarted && SDLSurfaceView.nativeKey(keyCode, 1, event.getUnicodeChar())) { return true; } else { return super.onKeyDown(keyCode, event); } }", "n_tokens": 90, "n_pass": [1, 1, 1]}
{"time": "2021-02-14 17:00:06.760476", "score": "0.9999", "loss": "0.0002", "code": "@Override public boolean onKeyDown(int keyCode, final KeyEvent event) { if (mView != null .nativeKey(keyCode, 1, event.getUnicodeChar())) { return true; } else { return super.onKeyDown(keyCode, event); } }", "n_tokens": 79, "n_pass": [23, 2, 2]}
{"time": "2021-02-14 17:00:09.421860", "score": "0.7663", "loss": "0.2988", "code": "@Override public boolean onKeyDown(int keyCode, final KeyEvent event) { if (mView != null .nativeKey(keyCode, 1, event.getUnicodeChar())) { return trueonKeyDown(keyCode, event); } }", "n_tokens": 67, "n_pass": [26, 3, 3]}
{"time": "2021-02-14 17:00:12.077853", "score": "0.5388", "loss": "0.6745", "code": "boolean onKeyDown(int keyCode, final KeyEvent event) { if (mView != null .nativeKey(keyCode, 1, event.getUnicodeChar())) { return trueonKeyDown(keyCode, event); } }", "n_tokens": 62, "n_pass": [47, 4, 4]}
{"time": "2021-02-14 17:00:14.753781", "score": "0.5613", "loss": "0.6936", "code": "boolean onKeyDown(int keyCode, final KeyEvent event) { if (mView != null .nativeKey(keyCode.getUnicodeChar())) { return trueonKeyDown(keyCode, event); } }", "n_tokens": 56, "n_pass": [54, 5, 5]}
{"time": "2021-02-14 17:00:17.411436", "score": "0.9853", "loss": "0.0207", "code": "boolean onKeyDown(int keyCode, final KeyEvent event) { if (mView != null .nativeKey(keyCode.getUnicodeChar())) { onKeyDown(keyCode, event); } }", "n_tokens": 53, "n_pass": [88, 6, 6]}
{"time": "2021-02-14 17:00:20.055355", "score": "0.9591", "loss": "0.0577", "code": "boolean onKeyDown(int keyCode, final KeyEvent event) { if (mView != null .nativeKey(keyCode.getUnicodeChar())) { onKeyDown(keyCode); } }", "n_tokens": 50, "n_pass": [90, 7, 7]}
{"time": "2021-02-14 17:00:23.089301", "score": "0.9591", "loss": "0.0577", "code": "boolean onKeyDown(int keyCode,KeyEvent event) { if (mView != null .nativeKey(keyCode.getUnicodeChar())) { onKeyDown(keyCode); } }", "n_tokens": 47, "n_pass": [97, 8, 8]}
{"time": "2021-02-14 17:00:25.756975", "score": "0.9371", "loss": "0.0926", "code": "boolean onKeyDown(int keyCode,KeyEvent event) { if (mView != nativeKey(keyCode.getUnicodeChar())) { onKeyDown(keyCode); } }", "n_tokens": 44, "n_pass": [103, 9, 9]}
{"time": "2021-02-14 17:00:31.446067", "score": "0.9371", "loss": "0.0926", "code": "boolean onKeyDown(int keyCode,KeyEvent event) { if (mView!= nativeKey(keyCode.getUnicodeChar())) { onKeyDown(keyCode); } }", "n_tokens": 43, "n_pass": [153, 10, 10]}
{"time": "2021-02-14 17:00:34.056750", "score": "0.9766", "loss": "0.0305", "code": "boolean onKeyDown(int keyCode,KeyEvent event) { if (mView!=(keyCode.getUnicodeChar())) { onKeyDown(keyCode); } }", "n_tokens": 41, "n_pass": [155, 11, 11]}
{"time": "2021-02-14 17:00:36.675726", "score": "0.9744", "loss": "0.0303", "code": "boolean onKeyDown(int keyCode,KeyEvent event) { if (mView!=(keyCode())) { onKeyDown(keyCode); } }", "n_tokens": 39, "n_pass": [157, 12, 12]}
{"time": "2021-02-14 17:00:39.307163", "score": "0.9744", "loss": "0.0303", "code": "boolean onKeyDown(int keyCode,KeyEvent event) { if (mView!=(keyCode)) { onKeyDown(keyCode); } }", "n_tokens": 37, "n_pass": [158, 13, 13]}
{"time": "2021-02-14 17:00:41.927179", "score": "0.4216", "loss": "0.9346", "code": "boolean onKeyDown(int keyCode,KeyEvent event) { if (mView!=(keyCode)) {(keyCode); } }", "n_tokens": 35, "n_pass": [161, 14, 14]}
{"time": "2021-02-14 17:00:45.432713", "score": "0.4216", "loss": "0.9346", "code": "boolean onKeyDown(int keyCode,KeyEvent event){ if (mView!=(keyCode)) {(keyCode); } }", "n_tokens": 34, "n_pass": [178, 15, 15]}
{"time": "2021-02-14 17:00:48.060493", "score": "0.4216", "loss": "0.9346", "code": "boolean onKeyDown(int keyCode,KeyEvent event){if (mView!=(keyCode)) {(keyCode); } }", "n_tokens": 33, "n_pass": [180, 16, 16]}
{"time": "2021-02-14 17:00:50.695617", "score": "0.4216", "loss": "0.9346", "code": "boolean onKeyDown(int keyCode,KeyEvent event){if(mView!=(keyCode)) {(keyCode); } }", "n_tokens": 32, "n_pass": [182, 17, 17]}
{"time": "2021-02-14 17:00:53.342384", "score": "0.4864", "loss": "0.7797", "code": "boolean onKeyDown(int keyCode,KeyEvent event){if(mView(keyCode)) {(keyCode); } }", "n_tokens": 30, "n_pass": [185, 18, 18]}
{"time": "2021-02-14 17:00:56.781569", "score": "0.2687", "loss": "1.3741", "code": "boolean onKeyDown(int keyCode,KeyEvent event){if((keyCode)) {(keyCode); } }", "n_tokens": 29, "n_pass": [208, 19, 19]}
{"time": "2021-02-14 17:01:01.711967", "score": "0.2687", "loss": "1.3741", "code": "boolean onKeyDown(int keyCode,KeyEvent event){if((keyCode)){(keyCode); } }", "n_tokens": 28, "n_pass": [245, 20, 20]}
{"time": "2021-02-14 17:01:04.330870", "score": "0.2687", "loss": "1.3741", "code": "boolean onKeyDown(int keyCode,KeyEvent event){if((keyCode)){(keyCode);} }", "n_tokens": 27, "n_pass": [250, 21, 21]}
{"time": "2021-02-14 17:01:06.938478", "score": "0.2687", "loss": "1.3741", "code": "boolean onKeyDown(int keyCode,KeyEvent event){if((keyCode)){(keyCode);}}", "n_tokens": 26, "n_pass": [252, 22, 22]}

Minimal simplified code:
boolean onKeyDown(int keyCode,KeyEvent event){if((keyCode)){(keyCode);}}

