
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/Blankj__AndroidUtilCode/app/src/main/java/com/blankj/androidutilcode/base/rv/RecycleViewDivider_onDraw.java
method_name = onDraw
method_body = @Override public void onDraw(Canvas c, RecyclerView parent, RecyclerView.State state) { if (parent.getLayoutManager() == null) { return; } if (mOrientation == VERTICAL) { drawVertical(c, parent); } else { drawHorizontal(c, parent); } }
predict, score, loss = onDraw, 0.9559952616691589, 0.045315779745578766

Trace of simplified code(s):
{"time": "2021-02-15 02:36:13.679144", "score": "0.956", "loss": "0.0453", "code": "@Override public void onDraw(Canvas c, RecyclerView parent, RecyclerView.State state) { if (parent.getLayoutManager() == null) { return; } if (mOrientation == VERTICAL) { drawVertical(c, parent); } else { drawHorizontal(c, parent); } }", "n_tokens": 90, "n_pass": [1, 1, 1]}
{"time": "2021-02-15 02:36:16.367618", "score": "0.9807", "loss": "0.0201", "code": "@Override public void onDraw(Canvas  state) { if (parent.getLayoutManager() == null) { return; } if (mOrientation == VERTICAL) { drawVertical(c, parent); } else { drawHorizontal(c, parent); } }", "n_tokens": 79, "n_pass": [21, 2, 2]}
{"time": "2021-02-15 02:36:19.054306", "score": "0.983", "loss": "0.0177", "code": "@Override public void onDraw(Canvas  state) { if (parent.getLayoutManager() == null) { return; } if (mOrientation == VERTICAL) { drawVertical(c, parent); drawHorizontal(c, parent); } }", "n_tokens": 73, "n_pass": [51, 3, 3]}
{"time": "2021-02-15 02:36:21.729026", "score": "0.9531", "loss": "0.0522", "code": "void onDraw(Canvas  state) { if (parent.getLayoutManager() == null) { return; } if (mOrientation == VERTICAL) { drawVertical(c, parent); drawHorizontal(c, parent); } }", "n_tokens": 68, "n_pass": [54, 4, 4]}
{"time": "2021-02-15 02:36:24.779954", "score": "0.9531", "loss": "0.0522", "code": "void onDraw(Canvas  state) { if (parent.getLayoutManager() == null) { } if (mOrientation == VERTICAL) { drawVertical(c, parent); drawHorizontal(c, parent); } }", "n_tokens": 65, "n_pass": [102, 5, 5]}
{"time": "2021-02-15 02:36:27.450836", "score": "0.9651", "loss": "0.0393", "code": "void onDraw(Canvas  state) { if (parent.getLayoutManager() == null) { } if (mOrientation == VERTICAL) { drawVertical(c); drawHorizontal(c, parent); } }", "n_tokens": 62, "n_pass": [109, 6, 6]}
{"time": "2021-02-15 02:36:30.119166", "score": "0.9207", "loss": "0.0878", "code": "void onDraw(Canvas  state) { if (parent.getLayoutManager() == null) { } if (mOrientation == VERTICAL) { drawVertical(c); drawHorizontal(c); } }", "n_tokens": 59, "n_pass": [112, 7, 7]}
{"time": "2021-02-15 02:36:37.071764", "score": "0.9207", "loss": "0.0878", "code": "void onDraw(Canvas state) { if (parent.getLayoutManager() == null) { } if (mOrientation == VERTICAL) { drawVertical(c); drawHorizontal(c); } }", "n_tokens": 58, "n_pass": [185, 8, 8]}
{"time": "2021-02-15 02:36:39.729380", "score": "0.9207", "loss": "0.0878", "code": "void onDraw(Canvas state){ if (parent.getLayoutManager() == null) { } if (mOrientation == VERTICAL) { drawVertical(c); drawHorizontal(c); } }", "n_tokens": 57, "n_pass": [189, 9, 9]}
{"time": "2021-02-15 02:36:42.365505", "score": "0.9207", "loss": "0.0878", "code": "void onDraw(Canvas state){if (parent.getLayoutManager() == null) { } if (mOrientation == VERTICAL) { drawVertical(c); drawHorizontal(c); } }", "n_tokens": 56, "n_pass": [191, 10, 10]}
{"time": "2021-02-15 02:36:44.998458", "score": "0.9207", "loss": "0.0878", "code": "void onDraw(Canvas state){if(parent.getLayoutManager() == null) { } if (mOrientation == VERTICAL) { drawVertical(c); drawHorizontal(c); } }", "n_tokens": 55, "n_pass": [193, 11, 11]}
{"time": "2021-02-15 02:36:47.641122", "score": "0.895", "loss": "0.1167", "code": "void onDraw(Canvas state){if(parentgetLayoutManager() == null) { } if (mOrientation == VERTICAL) { drawVertical(c); drawHorizontal(c); } }", "n_tokens": 54, "n_pass": [196, 12, 12]}
{"time": "2021-02-15 02:36:50.278207", "score": "0.9014", "loss": "0.1094", "code": "void onDraw(Canvas state){if(parent() == null) { } if (mOrientation == VERTICAL) { drawVertical(c); drawHorizontal(c); } }", "n_tokens": 53, "n_pass": [197, 13, 13]}
{"time": "2021-02-15 02:36:53.059303", "score": "0.9014", "loss": "0.1094", "code": "void onDraw(Canvas state){if(parent()== null) { } if (mOrientation == VERTICAL) { drawVertical(c); drawHorizontal(c); } }", "n_tokens": 52, "n_pass": [200, 14, 14]}
{"time": "2021-02-15 02:36:56.481905", "score": "0.9014", "loss": "0.1094", "code": "void onDraw(Canvas state){if(parent()==null) { } if (mOrientation == VERTICAL) { drawVertical(c); drawHorizontal(c); } }", "n_tokens": 51, "n_pass": [203, 15, 15]}
{"time": "2021-02-15 02:36:59.544084", "score": "0.9612", "loss": "0.0403", "code": "void onDraw(Canvas state){if(parent()==null) { } if (mOrientation= VERTICAL) { drawVertical(c); drawHorizontal(c); } }", "n_tokens": 49, "n_pass": [210, 16, 16]}
{"time": "2021-02-15 02:37:02.167736", "score": "0.8301", "loss": "0.205", "code": "void onDraw(Canvas state){if(parent()==null) { } if (mOrientationVERTICAL) { drawVertical(c); drawHorizontal(c); } }", "n_tokens": 47, "n_pass": [211, 17, 17]}
{"time": "2021-02-15 02:37:04.808936", "score": "0.8443", "loss": "0.1978", "code": "void onDraw(Canvas state){if(parent()==null) { } if (mOrientationVERTICAL) {(c); drawHorizontal(c); } }", "n_tokens": 45, "n_pass": [214, 18, 18]}
{"time": "2021-02-15 02:37:15.844058", "score": "0.8443", "loss": "0.1978", "code": "void onDraw(Canvas state){if(parent()==null) { } if (mOrientationVERTICAL) {(c);drawHorizontal(c); } }", "n_tokens": 44, "n_pass": [275, 20, 19]}
{"time": "2021-02-15 02:37:18.469837", "score": "0.9105", "loss": "0.1072", "code": "void onDraw(Canvas state){if(parent()==null) { } if (mOrientationVERTICAL) {(c);drawHorizontal(); } }", "n_tokens": 43, "n_pass": [277, 21, 20]}
{"time": "2021-02-15 02:37:21.101777", "score": "0.9105", "loss": "0.1072", "code": "void onDraw(Canvas state){if(parent()==null) { } if (mOrientationVERTICAL) {(c);drawHorizontal();} }", "n_tokens": 42, "n_pass": [280, 22, 21]}
{"time": "2021-02-15 02:37:23.717668", "score": "0.9105", "loss": "0.1072", "code": "void onDraw(Canvas state){if(parent()==null) { } if (mOrientationVERTICAL) {(c);drawHorizontal();}}", "n_tokens": 41, "n_pass": [282, 23, 22]}
{"time": "2021-02-15 02:37:27.975013", "score": "0.9105", "loss": "0.1072", "code": "void onDraw(Canvas state){if(parent()==null){ } if (mOrientationVERTICAL) {(c);drawHorizontal();}}", "n_tokens": 40, "n_pass": [302, 24, 23]}
{"time": "2021-02-15 02:37:30.645796", "score": "0.9105", "loss": "0.1072", "code": "void onDraw(Canvas state){if(parent()==null){} if (mOrientationVERTICAL) {(c);drawHorizontal();}}", "n_tokens": 39, "n_pass": [304, 25, 24]}
{"time": "2021-02-15 02:37:33.277233", "score": "0.9105", "loss": "0.1072", "code": "void onDraw(Canvas state){if(parent()==null){}if (mOrientationVERTICAL) {(c);drawHorizontal();}}", "n_tokens": 38, "n_pass": [306, 26, 25]}
{"time": "2021-02-15 02:37:35.949071", "score": "0.9105", "loss": "0.1072", "code": "void onDraw(Canvas state){if(parent()==null){}if(mOrientationVERTICAL) {(c);drawHorizontal();}}", "n_tokens": 37, "n_pass": [308, 27, 26]}
{"time": "2021-02-15 02:37:38.904107", "score": "0.9411", "loss": "0.0675", "code": "void onDraw(Canvas state){if(parent()==null){}if(VERTICAL) {(c);drawHorizontal();}}", "n_tokens": 36, "n_pass": [310, 28, 27]}
{"time": "2021-02-15 02:37:41.623479", "score": "0.9411", "loss": "0.0675", "code": "void onDraw(Canvas state){if(parent()==null){}if(VERTICAL){(c);drawHorizontal();}}", "n_tokens": 35, "n_pass": [313, 29, 28]}

Minimal simplified code:
void onDraw(Canvas state){if(parent()==null){}if(VERTICAL){(c);drawHorizontal();}}

