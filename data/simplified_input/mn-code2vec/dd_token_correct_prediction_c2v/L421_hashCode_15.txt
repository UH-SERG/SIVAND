
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/dronekit__dronekit-android/ClientLib/src/main/java/com/o3dr/services/android/lib/drone/companion/solo/tlv/mpcc/SoloSplineDurations_hashCode.java
method_name = hashCode
method_body = @Override public int hashCode() { int result = super.hashCode(); result = 31 * result + (minTime != +0.0f ? Float.floatToIntBits(minTime) : 0); result = 31 * result + (maxTime != +0.0f ? Float.floatToIntBits(maxTime) : 0); return result; }
predict, score, loss = hashCode, 0.99991774559021, 8.415821503149346e-05

Trace of simplified code(s):
{"time": "2021-02-14 18:37:47.225322", "score": "0.9999", "loss": "0.0001", "code": "@Override public int hashCode() { int result = super.hashCode(); result = 31 * result + (minTime != +0.0f ? Float.floatToIntBits(minTime) : 0); result = 31 * result + (maxTime != +0.0f ? Float.floatToIntBits(maxTime) : 0); return result; }", "n_tokens": 112, "n_pass": [1, 1, 1]}
{"time": "2021-02-14 18:37:50.315305", "score": "0.9999", "loss": "0.0001", "code": "@Override public int hashCode() { inthashCode(); result = 31 * result + (minTime != +0.0f ? Float.floatToIntBits(minTime) : 0); result = 31 * result + (maxTime != +0.0f ? Float.floatToIntBits(maxTime) : 0); return result; }", "n_tokens": 105, "n_pass": [46, 2, 2]}
{"time": "2021-02-14 18:37:52.971199", "score": "0.9998", "loss": "0.0002", "code": "@Override public int hashCode() { inthashCode(); result = 31 * result + (minTime != +0.0f ? Float.floatToIntBits(minTime) : 0); result = + (maxTime != +0.0f ? Float.floatToIntBits(maxTime) : 0); return result; }", "n_tokens": 98, "n_pass": [53, 3, 3]}
{"time": "2021-02-14 18:37:56.451671", "score": "0.9999", "loss": "0.0001", "code": "@Override public int hashCode() { inthashCode(); result = 31 * result + (minTime != +0.0f ? Float.floatToIntBits(minTime) : 0); result = + ( +0.0f ? Float.floatToIntBits(maxTime) : 0); return result; }", "n_tokens": 94, "n_pass": [98, 4, 4]}
{"time": "2021-02-14 18:37:59.120267", "score": "0.9999", "loss": "0.0001", "code": "@Override public int hashCode() { inthashCode(); result = 31 * result + (minTime != +0.0f ? Float.floatToIntBits(minTime) : 0); result = + (0f ? Float.floatToIntBits(maxTime) : 0); return result; }", "n_tokens": 90, "n_pass": [99, 5, 5]}
{"time": "2021-02-14 18:38:01.779738", "score": "0.9999", "loss": "0.0001", "code": "@Override public int hashCode() { inthashCode(); result = 31 * result + (minTime != +0.0f ? Float.floatToIntBits(minTime) : 0); result = + (0f ?(maxTime) : 0); return result; }", "n_tokens": 86, "n_pass": [101, 6, 6]}
{"time": "2021-02-14 18:38:04.435252", "score": "0.9986", "loss": "0.0014", "code": "public int hashCode() { inthashCode(); result = 31 * result + (minTime != +0.0f ? Float.floatToIntBits(minTime) : 0); result = + (0f ?(maxTime) : 0); return result; }", "n_tokens": 83, "n_pass": [106, 7, 7]}
{"time": "2021-02-14 18:38:07.487332", "score": "0.9936", "loss": "0.0074", "code": "public int hashCode() { inthashCode result = 31 * result + (minTime != +0.0f ? Float.floatToIntBits(minTime) : 0); result = + (0f ?(maxTime) : 0); return result; }", "n_tokens": 80, "n_pass": [111, 8, 8]}
{"time": "2021-02-14 18:38:10.132073", "score": "0.9997", "loss": "0.0003", "code": "public int hashCode() { inthashCode= 31 * result + (minTime != +0.0f ? Float.floatToIntBits(minTime) : 0); result = + (0f ?(maxTime) : 0); return result; }", "n_tokens": 77, "n_pass": [112, 9, 9]}
{"time": "2021-02-14 18:38:13.183721", "score": "0.9985", "loss": "0.0025", "code": "public int hashCode() { inthashCode= 31 *+ (minTime != +0.0f ? Float.floatToIntBits(minTime) : 0); result = + (0f ?(maxTime) : 0); return result; }", "n_tokens": 74, "n_pass": [115, 10, 10]}
{"time": "2021-02-14 18:38:15.832924", "score": "0.9472", "loss": "0.0857", "code": "public int hashCode() { inthashCode= 31 *+ (minTime != +f ? Float.floatToIntBits(minTime) : 0); result = + (0f ?(maxTime) : 0); return result; }", "n_tokens": 71, "n_pass": [119, 11, 11]}
{"time": "2021-02-14 18:38:19.699763", "score": "0.9907", "loss": "0.0181", "code": "public int hashCode() { inthashCode= 3+ (minTime != +f ? Float.floatToIntBits(minTime) : 0); result = + (0f ?(maxTime) : 0); return result; }", "n_tokens": 68, "n_pass": [136, 12, 12]}
{"time": "2021-02-14 18:38:25.478312", "score": "0.9853", "loss": "0.031", "code": "public int hashCode() { inthashCode=  (minTime != +f ? Float.floatToIntBits(minTime) : 0); result = + (0f ?(maxTime) : 0); return result; }", "n_tokens": 66, "n_pass": [195, 13, 13]}
{"time": "2021-02-14 18:38:28.156069", "score": "0.9827", "loss": "0.0355", "code": "public int hashCode() { inthashCode=  (minTime  +f ? Float.floatToIntBits(minTime) : 0); result = + (0f ?(maxTime) : 0); return result; }", "n_tokens": 64, "n_pass": [198, 14, 14]}
{"time": "2021-02-14 18:38:30.811355", "score": "1.0", "loss": "0.0", "code": "public int hashCode() { inthashCode=  (minTime  +f ? floatToIntBits(minTime) : 0); result = + (0f ?(maxTime) : 0); return result; }", "n_tokens": 62, "n_pass": [202, 15, 15]}
{"time": "2021-02-14 18:38:33.870563", "score": "1.0", "loss": "0.0", "code": "public int hashCode() { inthashCode=  (minTime  +f ? floatToIntBits(minTime) : 0); result = (0f ?(maxTime) : 0); return result; }", "n_tokens": 60, "n_pass": [210, 16, 16]}
{"time": "2021-02-14 18:38:36.519679", "score": "1.0", "loss": "0.0", "code": "public int hashCode() { inthashCode=  (minTime  +f ? floatToIntBits(minTime) : 0); result = (0f ?(maxTime) : 0); result; }", "n_tokens": 58, "n_pass": [219, 17, 17]}
{"time": "2021-02-14 18:38:39.182767", "score": "1.0", "loss": "0.0", "code": "public int hashCode() { inthashCode=  (minTime  +f ? floatToIntBits(minTime) : 0); result = (0f ?(maxTime) : 0);  }", "n_tokens": 56, "n_pass": [220, 18, 18]}
{"time": "2021-02-14 18:38:41.801342", "score": "1.0", "loss": "0.0", "code": " int hashCode() { inthashCode=  (minTime  +f ? floatToIntBits(minTime) : 0); result = (0f ?(maxTime) : 0);  }", "n_tokens": 55, "n_pass": [222, 19, 19]}
{"time": "2021-02-14 18:38:44.455358", "score": "1.0", "loss": "0.0", "code": "int hashCode() { inthashCode=  (minTime  +f ? floatToIntBits(minTime) : 0); result = (0f ?(maxTime) : 0);  }", "n_tokens": 54, "n_pass": [223, 20, 20]}
{"time": "2021-02-14 18:38:47.879966", "score": "1.0", "loss": "0.0", "code": "int hashCode(){ inthashCode=  (minTime  +f ? floatToIntBits(minTime) : 0); result = (0f ?(maxTime) : 0);  }", "n_tokens": 53, "n_pass": [229, 21, 21]}
{"time": "2021-02-14 18:38:50.514991", "score": "0.5597", "loss": "1.1551", "code": "int hashCode(){ inthashCode (minTime  +f ? floatToIntBits(minTime) : 0); result = (0f ?(maxTime) : 0);  }", "n_tokens": 51, "n_pass": [232, 22, 22]}
{"time": "2021-02-14 18:38:53.137168", "score": "0.5554", "loss": "1.1895", "code": "int hashCode(){ inthashCode ( +f ? floatToIntBits(minTime) : 0); result = (0f ?(maxTime) : 0);  }", "n_tokens": 49, "n_pass": [234, 23, 23]}
{"time": "2021-02-14 18:38:55.767007", "score": "0.4428", "loss": "1.5537", "code": "int hashCode(){ inthashCode (f ? floatToIntBits(minTime) : 0); result = (0f ?(maxTime) : 0);  }", "n_tokens": 47, "n_pass": [235, 24, 24]}
{"time": "2021-02-14 18:39:01.818496", "score": "0.997", "loss": "0.0037", "code": "int hashCode(){  (f ? floatToIntBits(minTime) : 0); result = (0f ?(maxTime) : 0);  }", "n_tokens": 45, "n_pass": [260, 26, 25]}
{"time": "2021-02-14 18:39:04.448243", "score": "0.957", "loss": "0.049", "code": "int hashCode(){  (f ? floatToIntBits(minTime) : 0); result (0f ?(maxTime) : 0);  }", "n_tokens": 43, "n_pass": [270, 27, 26]}
{"time": "2021-02-14 18:39:07.897273", "score": "0.9595", "loss": "0.0455", "code": "int hashCode(){  (f ? floatToIntBits(minTime) : 0); (0f ?(maxTime) : 0);  }", "n_tokens": 41, "n_pass": [294, 28, 27]}
{"time": "2021-02-14 18:39:16.609563", "score": "0.9758", "loss": "0.0276", "code": "int hashCode(){  (f ? floatToIntBits(minTime) : 0); (f ?(maxTime) : 0);  }", "n_tokens": 40, "n_pass": [355, 29, 28]}
{"time": "2021-02-14 18:39:19.264070", "score": "0.9758", "loss": "0.0276", "code": "int hashCode(){  (f ? floatToIntBits(minTime) : 0); (f?(maxTime) : 0);  }", "n_tokens": 39, "n_pass": [356, 30, 29]}
{"time": "2021-02-14 18:39:21.898552", "score": "0.9758", "loss": "0.0276", "code": "int hashCode(){  (f ? floatToIntBits(minTime) : 0); (f?(maxTime): 0);  }", "n_tokens": 38, "n_pass": [361, 31, 30]}
{"time": "2021-02-14 18:39:24.527441", "score": "0.9758", "loss": "0.0276", "code": "int hashCode(){  (f ? floatToIntBits(minTime) : 0); (f?(maxTime):0);  }", "n_tokens": 37, "n_pass": [363, 32, 31]}
{"time": "2021-02-14 18:39:27.154298", "score": "0.9758", "loss": "0.0276", "code": "int hashCode(){  (f ? floatToIntBits(minTime) : 0); (f?(maxTime):0); }", "n_tokens": 36, "n_pass": [367, 33, 32]}
{"time": "2021-02-14 18:39:29.777177", "score": "0.9758", "loss": "0.0276", "code": "int hashCode(){  (f ? floatToIntBits(minTime) : 0); (f?(maxTime):0);}", "n_tokens": 35, "n_pass": [368, 34, 33]}
{"time": "2021-02-14 18:39:33.198274", "score": "0.9758", "loss": "0.0276", "code": "int hashCode(){ (f ? floatToIntBits(minTime) : 0); (f?(maxTime):0);}", "n_tokens": 34, "n_pass": [376, 35, 34]}
{"time": "2021-02-14 18:39:35.823450", "score": "0.9758", "loss": "0.0276", "code": "int hashCode(){(f ? floatToIntBits(minTime) : 0); (f?(maxTime):0);}", "n_tokens": 33, "n_pass": [377, 36, 35]}
{"time": "2021-02-14 18:39:38.448605", "score": "0.9758", "loss": "0.0276", "code": "int hashCode(){(f? floatToIntBits(minTime) : 0); (f?(maxTime):0);}", "n_tokens": 32, "n_pass": [380, 37, 36]}
{"time": "2021-02-14 18:39:41.091606", "score": "0.9758", "loss": "0.0276", "code": "int hashCode(){(f?floatToIntBits(minTime) : 0); (f?(maxTime):0);}", "n_tokens": 31, "n_pass": [382, 38, 37]}
{"time": "2021-02-14 18:39:43.702717", "score": "0.6178", "loss": "1.0621", "code": "int hashCode(){(f?(minTime) : 0); (f?(maxTime):0);}", "n_tokens": 30, "n_pass": [383, 39, 38]}
{"time": "2021-02-14 18:39:46.315660", "score": "0.6178", "loss": "1.0621", "code": "int hashCode(){(f?(minTime): 0); (f?(maxTime):0);}", "n_tokens": 29, "n_pass": [387, 40, 39]}
{"time": "2021-02-14 18:39:48.958189", "score": "0.6178", "loss": "1.0621", "code": "int hashCode(){(f?(minTime):0); (f?(maxTime):0);}", "n_tokens": 28, "n_pass": [389, 41, 40]}
{"time": "2021-02-14 18:39:51.583664", "score": "0.6178", "loss": "1.0621", "code": "int hashCode(){(f?(minTime):0);(f?(maxTime):0);}", "n_tokens": 27, "n_pass": [393, 42, 41]}

Minimal simplified code:
int hashCode(){(f?(minTime):0);(f?(maxTime):0);}

