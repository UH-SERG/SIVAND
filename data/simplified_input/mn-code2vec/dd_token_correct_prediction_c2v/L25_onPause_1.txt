
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/ouya__ouya-sdk-examples/Android/AndroidExit/src/tv/ouya/examples/android/androidexit/ExitActivity_onPause.java
method_name = onPause
method_body = @Override protected void onPause() { if (isFinishing()) { Log.i(TAG, "onPause: Game is finishing..."); } else { Log.i(TAG, "onPause"); } super.onPause(); }
predict, score, loss = onPause, 0.9999749660491943, 2.5510462364763953e-05

Trace of simplified code(s):
{"time": "2021-02-14 05:36:26.414046", "score": "1.0", "loss": "0.0", "code": "@Override protected void onPause() { if (isFinishing()) { Log.i(TAG, \"onPause: Game is finishing...\"); } else { Log.i(TAG, \"onPause\"); } super.onPause(); }", "n_tokens": 75, "n_pass": [1, 1, 1]}
{"time": "2021-02-14 05:36:29.069930", "score": "1.0", "loss": "0.0", "code": " void onPause() { if (isFinishing()) { Log.i(TAG, \"onPause: Game is finishing...\"); } else { Log.i(TAG, \"onPause\"); } super.onPause(); }", "n_tokens": 71, "n_pass": [44, 2, 2]}
{"time": "2021-02-14 05:36:31.699189", "score": "1.0", "loss": "0.0", "code": " void onPause() { if (isFinishing()) { Log.i(TAG, \"onPause: Game..\"); } else { Log.i(TAG, \"onPause\"); } super.onPause(); }", "n_tokens": 66, "n_pass": [52, 3, 3]}
{"time": "2021-02-14 05:36:34.375855", "score": "1.0", "loss": "0.0", "code": " void onPause() { if (isFinishing()) { Log.i(TAG, \"onPauseGame..\"); } else { Log.i(TAG, \"onPause\"); } super.onPause(); }", "n_tokens": 64, "n_pass": [95, 4, 4]}
{"time": "2021-02-14 05:36:37.007163", "score": "1.0", "loss": "0.0", "code": " void onPause() { if (isFinishing()) { Log.i(TAG, \"onPause.\"); } else { Log.i(TAG, \"onPause\"); } super.onPause(); }", "n_tokens": 62, "n_pass": [96, 5, 5]}
{"time": "2021-02-14 05:36:39.632759", "score": "1.0", "loss": "0.0", "code": " void onPause() { if (isFinishing()) { Log.i(TAG, \"onPause.\"); } else {i(TAG, \"onPause\"); } super.onPause(); }", "n_tokens": 59, "n_pass": [101, 6, 6]}
{"time": "2021-02-14 05:36:42.264818", "score": "0.9989", "loss": "0.0011", "code": " void onPause() { if (isFinishing()) { Log.i(TAG, \"onPause.\"); } else {i(TAG, \"onPause\"); }onPause(); }", "n_tokens": 56, "n_pass": [106, 7, 7]}
{"time": "2021-02-14 05:36:44.905252", "score": "0.9988", "loss": "0.0012", "code": " void onPause() { if (isFinishing()) { Log.i(TAG, \"onPause.\"); } else {i(TAG, \"onPause\"); }; }", "n_tokens": 53, "n_pass": [107, 8, 8]}
{"time": "2021-02-14 05:36:47.936437", "score": "0.9978", "loss": "0.0023", "code": " void onPause() { if (isFinishing()) { Log(TAG, \"onPause.\"); } else {i(TAG, \"onPause\"); }; }", "n_tokens": 51, "n_pass": [119, 9, 9]}
{"time": "2021-02-14 05:36:55.868848", "score": "0.9978", "loss": "0.0023", "code": " void onPause() { if (isFinishing()) { Log(TAG,\"onPause.\"); } else {i(TAG, \"onPause\"); }; }", "n_tokens": 50, "n_pass": [189, 10, 10]}
{"time": "2021-02-14 05:36:58.487771", "score": "0.9971", "loss": "0.003", "code": " void onPause() { if (isFinishing()) { Log(TAG,\".\"); } else {i(TAG, \"onPause\"); }; }", "n_tokens": 49, "n_pass": [191, 11, 11]}
{"time": "2021-02-14 05:37:01.111166", "score": "0.9975", "loss": "0.0026", "code": " void onPause() { if (isFinishing()) { Log(TAG,\"\"); } else {i(TAG, \"onPause\"); }; }", "n_tokens": 48, "n_pass": [192, 12, 12]}
{"time": "2021-02-14 05:37:03.752241", "score": "0.9975", "loss": "0.0026", "code": " void onPause() { if (isFinishing()) { Log(TAG,\"\");} else {i(TAG, \"onPause\"); }; }", "n_tokens": 47, "n_pass": [196, 13, 13]}
{"time": "2021-02-14 05:37:06.373974", "score": "0.9975", "loss": "0.0026", "code": " void onPause() { if (isFinishing()) { Log(TAG,\"\");}else {i(TAG, \"onPause\"); }; }", "n_tokens": 46, "n_pass": [198, 14, 14]}
{"time": "2021-02-14 05:37:08.988649", "score": "0.9925", "loss": "0.0077", "code": " void onPause() { if (isFinishing()) { Log(TAG,\"\");} {i(TAG, \"onPause\"); }; }", "n_tokens": 45, "n_pass": [199, 15, 15]}
{"time": "2021-02-14 05:37:11.630410", "score": "0.9925", "loss": "0.0077", "code": " void onPause() { if (isFinishing()) { Log(TAG,\"\");}{i(TAG, \"onPause\"); }; }", "n_tokens": 44, "n_pass": [200, 16, 16]}
{"time": "2021-02-14 05:37:14.247320", "score": "0.9925", "loss": "0.0077", "code": "void onPause() { if (isFinishing()) { Log(TAG,\"\");}{i(TAG, \"onPause\"); }; }", "n_tokens": 43, "n_pass": [210, 17, 17]}
{"time": "2021-02-14 05:37:17.647106", "score": "0.9925", "loss": "0.0077", "code": "void onPause(){ if (isFinishing()) { Log(TAG,\"\");}{i(TAG, \"onPause\"); }; }", "n_tokens": 42, "n_pass": [216, 18, 18]}
{"time": "2021-02-14 05:37:20.260590", "score": "0.9925", "loss": "0.0077", "code": "void onPause(){if (isFinishing()) { Log(TAG,\"\");}{i(TAG, \"onPause\"); }; }", "n_tokens": 41, "n_pass": [218, 19, 19]}
{"time": "2021-02-14 05:37:22.874716", "score": "0.9925", "loss": "0.0077", "code": "void onPause(){if(isFinishing()) { Log(TAG,\"\");}{i(TAG, \"onPause\"); }; }", "n_tokens": 40, "n_pass": [220, 20, 20]}
{"time": "2021-02-14 05:37:25.489825", "score": "0.9925", "loss": "0.0077", "code": "void onPause(){if(isFinishing()){ Log(TAG,\"\");}{i(TAG, \"onPause\"); }; }", "n_tokens": 39, "n_pass": [226, 21, 21]}
{"time": "2021-02-14 05:37:28.111613", "score": "0.9925", "loss": "0.0077", "code": "void onPause(){if(isFinishing()){Log(TAG,\"\");}{i(TAG, \"onPause\"); }; }", "n_tokens": 38, "n_pass": [228, 22, 22]}
{"time": "2021-02-14 05:37:33.423464", "score": "0.9925", "loss": "0.0077", "code": "void onPause(){if(isFinishing()){Log(TAG,\"\");}{i(TAG,\"onPause\"); }; }", "n_tokens": 37, "n_pass": [277, 23, 23]}
{"time": "2021-02-14 05:37:38.655173", "score": "0.9925", "loss": "0.0077", "code": "void onPause(){if(isFinishing()){Log(TAG,\"\");}{i(TAG,\"onPause\");}; }", "n_tokens": 36, "n_pass": [283, 25, 24]}
{"time": "2021-02-14 05:37:41.267866", "score": "0.9925", "loss": "0.0077", "code": "void onPause(){if(isFinishing()){Log(TAG,\"\");}{i(TAG,\"onPause\");} }", "n_tokens": 35, "n_pass": [285, 26, 25]}
{"time": "2021-02-14 05:37:43.874695", "score": "0.9925", "loss": "0.0077", "code": "void onPause(){if(isFinishing()){Log(TAG,\"\");}{i(TAG,\"onPause\");}}", "n_tokens": 34, "n_pass": [286, 27, 26]}

Minimal simplified code:
void onPause(){if(isFinishing()){Log(TAG,"");}{i(TAG,"onPause");}}

