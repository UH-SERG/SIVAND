
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/rover12421__ShakaApktool/shaka/lib/src/main/java/com/rover12421/shaka/lib/multiLanguage/MultiLanguageSupport_compare.java
method_name = compare
method_body = @Override public int compare(String o1, String o2) { if (o2.length() == o1.length()) { return o2.compareTo(o1); } return o2.length() - o1.length(); }
predict, score, loss = compare, 0.9455487728118896, 0.05599454417824745

Trace of simplified code(s):
{"time": "2021-02-14 13:14:31.246756", "score": "0.9455", "loss": "0.056", "code": "@Override public int compare(String o1, String o2) { if (o2.length() == o1.length()) { return o2.compareTo(o1); } return o2.length() - o1.length(); }", "n_tokens": 80, "n_pass": [1, 1, 1]}
{"time": "2021-02-14 13:14:34.285071", "score": "0.8728", "loss": "0.136", "code": "@Override public int compare(String o1, String o2) { if (o2.length()) { return o2.compareTo(o1); } return o2.length() - o1.length(); }", "n_tokens": 70, "n_pass": [23, 2, 2]}
{"time": "2021-02-14 13:14:36.943112", "score": "0.7029", "loss": "0.3527", "code": "@Override public int compare(String o1, String o2) { if (o2.length()) { return o2.compareTo(o1); }  o1.length(); }", "n_tokens": 60, "n_pass": [26, 3, 3]}
{"time": "2021-02-14 13:14:39.610234", "score": "0.752", "loss": "0.2852", "code": "int compare(String o1, String o2) { if (o2.length()) { return o2.compareTo(o1); }  o1.length(); }", "n_tokens": 55, "n_pass": [47, 4, 4]}
{"time": "2021-02-14 13:14:45.296800", "score": "0.7827", "loss": "0.2452", "code": "int compare(String o1, String o2) { if (o()) { return o2.compareTo(o1); }  o1.length(); }", "n_tokens": 52, "n_pass": [91, 6, 5]}
{"time": "2021-02-14 13:14:47.937754", "score": "0.8771", "loss": "0.2573", "code": "int compare(String o1, String o2) { if (o()) { return o(o1); }  o1.length(); }", "n_tokens": 49, "n_pass": [95, 7, 6]}
{"time": "2021-02-14 13:14:50.595935", "score": "0.8099", "loss": "0.3062", "code": "int compare(String o1, String o2) { if (o()) { return o(o1); }  length(); }", "n_tokens": 46, "n_pass": [99, 8, 7]}
{"time": "2021-02-14 13:14:53.249576", "score": "0.8255", "loss": "0.289", "code": "int compare(String o1, String o2) { if (o()) { return o(o1); }  ; }", "n_tokens": 43, "n_pass": [100, 9, 8]}
{"time": "2021-02-14 13:14:56.267209", "score": "0.8226", "loss": "0.3175", "code": "int compare(String o1, String o2) { if (o()) { (o1); }  ; }", "n_tokens": 40, "n_pass": [115, 10, 9]}
{"time": "2021-02-14 13:15:03.429812", "score": "0.8226", "loss": "0.3175", "code": "int compare(String o1, String o2) { if (o()) {(o1); }  ; }", "n_tokens": 39, "n_pass": [168, 11, 10]}
{"time": "2021-02-14 13:15:06.067973", "score": "0.8226", "loss": "0.3175", "code": "int compare(String o1, String o2) { if (o()) {(o1); }  }", "n_tokens": 37, "n_pass": [173, 12, 11]}
{"time": "2021-02-14 13:15:09.489010", "score": "0.8226", "loss": "0.3175", "code": "int compare(String o, String o2) { if (o()) {(o1); }  }", "n_tokens": 36, "n_pass": [182, 13, 12]}
{"time": "2021-02-14 13:15:12.130562", "score": "0.8226", "loss": "0.3175", "code": "int compare(String o,String o2) { if (o()) {(o1); }  }", "n_tokens": 35, "n_pass": [184, 14, 13]}
{"time": "2021-02-14 13:15:14.749375", "score": "0.8226", "loss": "0.3175", "code": "int compare(String o,String o) { if (o()) {(o1); }  }", "n_tokens": 34, "n_pass": [188, 15, 14]}
{"time": "2021-02-14 13:15:17.364053", "score": "0.8226", "loss": "0.3175", "code": "int compare(String o,String o){ if (o()) {(o1); }  }", "n_tokens": 33, "n_pass": [190, 16, 15]}
{"time": "2021-02-14 13:15:19.977013", "score": "0.8226", "loss": "0.3175", "code": "int compare(String o,String o){if (o()) {(o1); }  }", "n_tokens": 32, "n_pass": [192, 17, 16]}
{"time": "2021-02-14 13:15:22.596582", "score": "0.8226", "loss": "0.3175", "code": "int compare(String o,String o){if(o()) {(o1); }  }", "n_tokens": 31, "n_pass": [194, 18, 17]}
{"time": "2021-02-14 13:15:25.213508", "score": "0.8226", "loss": "0.3175", "code": "int compare(String o,String o){if(o()){(o1); }  }", "n_tokens": 30, "n_pass": [200, 19, 18]}
{"time": "2021-02-14 13:15:30.156449", "score": "0.8226", "loss": "0.3175", "code": "int compare(String o,String o){if(o()){(o); }  }", "n_tokens": 29, "n_pass": [236, 20, 19]}
{"time": "2021-02-14 13:15:32.769640", "score": "0.8226", "loss": "0.3175", "code": "int compare(String o,String o){if(o()){(o);}  }", "n_tokens": 28, "n_pass": [238, 21, 20]}
{"time": "2021-02-14 13:15:35.398463", "score": "0.8226", "loss": "0.3175", "code": "int compare(String o,String o){if(o()){(o);} }", "n_tokens": 27, "n_pass": [240, 22, 21]}
{"time": "2021-02-14 13:15:38.010025", "score": "0.8226", "loss": "0.3175", "code": "int compare(String o,String o){if(o()){(o);}}", "n_tokens": 26, "n_pass": [241, 23, 22]}

Minimal simplified code:
int compare(String o,String o){if(o()){(o);}}

