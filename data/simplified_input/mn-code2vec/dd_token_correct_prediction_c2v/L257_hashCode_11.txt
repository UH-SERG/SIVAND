
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/dronekit__dronekit-android/ClientLib/src/main/java/com/o3dr/services/android/lib/coordinate/LatLong_hashCode.java
method_name = hashCode
method_body = @Override public int hashCode() { int result; long temp; temp = Double.doubleToLongBits(latitude); result = (int) (temp ^ (temp >>> 32)); temp = Double.doubleToLongBits(longitude); result = 31 * result + (int) (temp ^ (temp >>> 32)); return result; }
predict, score, loss = hashCode, 0.9992004036903381, 0.0008118432597257197

Trace of simplified code(s):
{"time": "2021-02-14 13:09:22.162471", "score": "0.9992", "loss": "0.0008", "code": "@Override public int hashCode() { int result; long temp; temp = Double.doubleToLongBits(latitude); result = (int) (temp ^ (temp >>> 32)); temp = Double.doubleToLongBits(longitude); result = 31 * result + (int) (temp ^ (temp >>> 32)); return result; }", "n_tokens": 114, "n_pass": [1, 1, 1]}
{"time": "2021-02-14 13:09:24.857770", "score": "0.9989", "loss": "0.0012", "code": "@Override public int hashCode() { int result; long temp; temp = Double (temp ^ (temp >>> 32)); temp = Double.doubleToLongBits(longitude); result = 31 * result + (int) (temp ^ (temp >>> 32)); return result; }", "n_tokens": 100, "n_pass": [22, 2, 2]}
{"time": "2021-02-14 13:09:27.611908", "score": "0.9989", "loss": "0.0012", "code": "@Override public int hashCode() { int result; long temp; temp = Double (temp ^ (2)); temp = Double.doubleToLongBits(longitude); result = 31 * result + (int) (temp ^ (temp >>> 32)); return result; }", "n_tokens": 93, "n_pass": [44, 3, 3]}
{"time": "2021-02-14 13:09:30.268266", "score": "0.9775", "loss": "0.0509", "code": "@Override public int hashCode() { int result; long temp; temp = Double (temp ^ (2)); temp = Double.doubleToLongBits(longitude); result = + (int) (temp ^ (temp >>> 32)); return result; }", "n_tokens": 86, "n_pass": [48, 4, 4]}
{"time": "2021-02-14 13:09:33.365726", "score": "0.4281", "loss": "0.9877", "code": "@Override public int hashCode() { int result; long temp; temp = Double (temp ^ (2)); temp = Double.doubleToLongBits(longitude); result = + (temp ^ (temp >>> 32)); return result; }", "n_tokens": 82, "n_pass": [86, 5, 5]}
{"time": "2021-02-14 13:09:36.049108", "score": "0.9361", "loss": "0.1368", "code": "public int hashCode() { int result; long temp; temp = Double (temp ^ (2)); temp = Double.doubleToLongBits(longitude); result = + (temp ^ (temp >>> 32)); return result; }", "n_tokens": 79, "n_pass": [93, 6, 6]}
{"time": "2021-02-14 13:09:39.140755", "score": "0.9342", "loss": "0.1401", "code": "public int hashCode() {result; long temp; temp = Double (temp ^ (2)); temp = Double.doubleToLongBits(longitude); result = + (temp ^ (temp >>> 32)); return result; }", "n_tokens": 76, "n_pass": [97, 7, 7]}
{"time": "2021-02-14 13:09:41.800442", "score": "0.9357", "loss": "0.137", "code": "public int hashCode() {long temp; temp = Double (temp ^ (2)); temp = Double.doubleToLongBits(longitude); result = + (temp ^ (temp >>> 32)); return result; }", "n_tokens": 73, "n_pass": [98, 8, 8]}
{"time": "2021-02-14 13:09:44.452371", "score": "0.9385", "loss": "0.1281", "code": "public int hashCode() {; temp = Double (temp ^ (2)); temp = Double.doubleToLongBits(longitude); result = + (temp ^ (temp >>> 32)); return result; }", "n_tokens": 70, "n_pass": [99, 9, 9]}
{"time": "2021-02-14 13:09:47.092876", "score": "0.8684", "loss": "0.9944", "code": "public int hashCode() {; tempDouble (temp ^ (2)); temp = Double.doubleToLongBits(longitude); result = + (temp ^ (temp >>> 32)); return result; }", "n_tokens": 67, "n_pass": [101, 10, 10]}
{"time": "2021-02-14 13:09:49.751205", "score": "0.8743", "loss": "0.971", "code": "public int hashCode() {; tempDouble ((2)); temp = Double.doubleToLongBits(longitude); result = + (temp ^ (temp >>> 32)); return result; }", "n_tokens": 63, "n_pass": [103, 11, 11]}
{"time": "2021-02-14 13:09:53.251164", "score": "0.7533", "loss": "1.5095", "code": "public int hashCode() {; tempDouble ((2)); temp = Double.doubleToLongBits(longitude); result (temp ^ (temp >>> 32)); return result; }", "n_tokens": 59, "n_pass": [109, 12, 12]}
{"time": "2021-02-14 13:09:56.319764", "score": "0.471", "loss": "1.3895", "code": "public int hashCode() {Double ((2)); temp = Double.doubleToLongBits(longitude); result (temp ^ (temp >>> 32)); return result; }", "n_tokens": 56, "n_pass": [119, 13, 13]}
{"time": "2021-02-14 13:10:01.648736", "score": "0.9453", "loss": "0.1632", "code": "public int hashCode() {Double ((2)); temp = doubleToLongBits(longitude); result (temp ^ (temp >>> 32)); return result; }", "n_tokens": 54, "n_pass": [172, 14, 14]}
{"time": "2021-02-14 13:10:04.302564", "score": "0.9775", "loss": "0.0511", "code": "public int hashCode() {Double ((2)); temp = doubleToLongBits(longitude); (temp ^ (temp >>> 32)); return result; }", "n_tokens": 52, "n_pass": [176, 15, 15]}
{"time": "2021-02-14 13:10:06.954242", "score": "0.9411", "loss": "0.1712", "code": "public int hashCode() {Double ((2)); temp = doubleToLongBits(longitude); (temp (temp >>> 32)); return result; }", "n_tokens": 50, "n_pass": [178, 16, 16]}
{"time": "2021-02-14 13:10:09.587386", "score": "0.9399", "loss": "0.1749", "code": "public int hashCode() {Double ((2)); temp = doubleToLongBits(longitude); (temp (temp > 32)); return result; }", "n_tokens": 48, "n_pass": [181, 17, 17]}
{"time": "2021-02-14 13:10:12.250778", "score": "0.9164", "loss": "0.2228", "code": "public int hashCode() {Double ((2)); temp = doubleToLongBits(longitude); (temp (temp > 32)); result; }", "n_tokens": 46, "n_pass": [186, 18, 18]}
{"time": "2021-02-14 13:10:14.867983", "score": "0.9133", "loss": "0.229", "code": "public int hashCode() {Double ((2)); temp = doubleToLongBits(longitude); (temp (temp > 32));  }", "n_tokens": 44, "n_pass": [187, 19, 19]}
{"time": "2021-02-14 13:10:17.521415", "score": "0.9133", "loss": "0.229", "code": " int hashCode() {Double ((2)); temp = doubleToLongBits(longitude); (temp (temp > 32));  }", "n_tokens": 43, "n_pass": [189, 20, 20]}
{"time": "2021-02-14 13:10:20.175407", "score": "0.9133", "loss": "0.229", "code": "int hashCode() {Double ((2)); temp = doubleToLongBits(longitude); (temp (temp > 32));  }", "n_tokens": 42, "n_pass": [190, 21, 21]}
{"time": "2021-02-14 13:10:28.851909", "score": "0.9133", "loss": "0.229", "code": "int hashCode(){Double ((2)); temp = doubleToLongBits(longitude); (temp (temp > 32));  }", "n_tokens": 41, "n_pass": [256, 22, 22]}
{"time": "2021-02-14 13:10:31.475655", "score": "0.9959", "loss": "0.0083", "code": "int hashCode(){ ((2)); temp = doubleToLongBits(longitude); (temp (temp > 32));  }", "n_tokens": 40, "n_pass": [258, 23, 23]}
{"time": "2021-02-14 13:10:34.090909", "score": "0.9959", "loss": "0.0083", "code": "int hashCode(){((2)); temp = doubleToLongBits(longitude); (temp (temp > 32));  }", "n_tokens": 39, "n_pass": [259, 24, 24]}
{"time": "2021-02-14 13:10:36.715083", "score": "0.9959", "loss": "0.0083", "code": "int hashCode(){((2));temp = doubleToLongBits(longitude); (temp (temp > 32));  }", "n_tokens": 38, "n_pass": [266, 25, 25]}
{"time": "2021-02-14 13:10:39.348822", "score": "0.9959", "loss": "0.0083", "code": "int hashCode(){((2));temp= doubleToLongBits(longitude); (temp (temp > 32));  }", "n_tokens": 37, "n_pass": [268, 26, 26]}
{"time": "2021-02-14 13:10:41.977081", "score": "0.9959", "loss": "0.0083", "code": "int hashCode(){((2));temp=doubleToLongBits(longitude); (temp (temp > 32));  }", "n_tokens": 36, "n_pass": [270, 27, 27]}
{"time": "2021-02-14 13:10:47.228918", "score": "0.8249", "loss": "0.2479", "code": "int hashCode(){((2));temp=doubleToLongBits(); (temp (temp > 32));  }", "n_tokens": 35, "n_pass": [273, 29, 28]}
{"time": "2021-02-14 13:10:49.863592", "score": "0.8249", "loss": "0.2479", "code": "int hashCode(){((2));temp=doubleToLongBits();(temp (temp > 32));  }", "n_tokens": 34, "n_pass": [276, 30, 29]}
{"time": "2021-02-14 13:10:52.491045", "score": "0.8154", "loss": "0.2585", "code": "int hashCode(){((2));temp=doubleToLongBits();( (temp > 32));  }", "n_tokens": 33, "n_pass": [278, 31, 30]}
{"time": "2021-02-14 13:10:55.122418", "score": "0.8154", "loss": "0.2585", "code": "int hashCode(){((2));temp=doubleToLongBits();((temp > 32));  }", "n_tokens": 32, "n_pass": [279, 32, 31]}
{"time": "2021-02-14 13:10:57.736439", "score": "0.8154", "loss": "0.2585", "code": "int hashCode(){((2));temp=doubleToLongBits();((temp> 32));  }", "n_tokens": 31, "n_pass": [282, 33, 32]}
{"time": "2021-02-14 13:11:00.366858", "score": "0.8154", "loss": "0.2585", "code": "int hashCode(){((2));temp=doubleToLongBits();((temp>32));  }", "n_tokens": 30, "n_pass": [284, 34, 33]}
{"time": "2021-02-14 13:11:03.010779", "score": "0.8248", "loss": "0.2509", "code": "int hashCode(){((2));temp=doubleToLongBits();((temp>2));  }", "n_tokens": 29, "n_pass": [285, 35, 34]}
{"time": "2021-02-14 13:11:05.640687", "score": "0.8248", "loss": "0.2509", "code": "int hashCode(){((2));temp=doubleToLongBits();((temp>2)); }", "n_tokens": 28, "n_pass": [290, 36, 35]}
{"time": "2021-02-14 13:11:08.293748", "score": "0.8248", "loss": "0.2509", "code": "int hashCode(){((2));temp=doubleToLongBits();((temp>2));}", "n_tokens": 27, "n_pass": [291, 37, 36]}
{"time": "2021-02-14 13:11:14.332665", "score": "0.8197", "loss": "0.257", "code": "int hashCode(){((2));temp=doubleToLongBits();((temp2));}", "n_tokens": 26, "n_pass": [314, 39, 37]}
{"time": "2021-02-14 13:11:16.945294", "score": "0.8197", "loss": "0.257", "code": "int hashCode(){((2));temp=doubleToLongBits();((temp));}", "n_tokens": 25, "n_pass": [315, 40, 38]}

Minimal simplified code:
int hashCode(){((2));temp=doubleToLongBits();((temp));}

