
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/bcgit__bc-java/core/src/main/jdk1.1/java/security/cert/CertPath_toString.java
method_name = toString
method_body = public String toString() { StringBuffer s = new StringBuffer(); List certs = getCertificates(); ListIterator iter = certs.listIterator(); s.append('\n').append(getType()).append(" Cert Path: length = ").append(certs.size()).append("\n[\n"); while (iter.hasNext()) { s.append("=========================================================Certificate ").append(iter.nextIndex()).append('\n'); s.append(iter.next()).append('\n'); s.append("========================================================Certificate end\n\n\n"); } s.append("\n]"); return s.toString(); }
predict, score, loss = toString, 0.9171586036682129, 0.32149192690849304

Trace of simplified code(s):
{"time": "2021-02-14 23:30:13.486550", "score": "0.8268", "loss": "1.0424", "code": "public String toString() { StringBuffer s = new StringBuffer(); List certs = getCertificates(); ListIterator iter = certs.listIterator(); s.append('\\n').append(getType()).append(\" Cert Path: length = \").append(certs.size()).append(\"\\n[\\n\"); while (iter.hasNext()) { s.append(\"=========================================================Certificate \").append(iter.nextIndex()).append('\\n'); s.append(iter.next()).append('\\n'); s.append(\"========================================================Certificate end\\n\\n\\n\"); } s.append(\"\\n]\"); return s.toString(); }", "n_tokens": 316, "n_pass": [1, 1, 1]}
{"time": "2021-02-14 23:30:16.200199", "score": "0.9798", "loss": "0.0362", "code": "public String toString() { StringBuffer s = new StringBuffer(); List certs = getCertificates(); ListIterator iter = certs.listIterator(); s.append('\\n').append(getType()).append(\" Cert Path: length = \").append(certs.size()).append(\"\\n[\\n\"); while (iter.hasNext()) { s.append(\"==================================================================================Certificate end\\n\\n\\n\"); } s.append(\"\\n]\"); return s.toString(); }", "n_tokens": 237, "n_pass": [10, 2, 2]}
{"time": "2021-02-14 23:30:18.897900", "score": "0.9799", "loss": "0.044", "code": "public String toString() { StringBuffer s = new StringBuffer(); List certs = getCertificates(); ListIterator iter = certs.listIterator(); s.append('\\n').append(getType()).append(\" Cert Path: length = \").append(certs.size()).append(\"\\n[\\n\"); while (iter.hasNext()) { s.append(\"==========================================Certificate end\\n\\n\\n\"); } s.append(\"\\n]\"); return s.toString(); }", "n_tokens": 197, "n_pass": [19, 3, 3]}
{"time": "2021-02-14 23:30:21.670522", "score": "0.6403", "loss": "1.3556", "code": "public String toString() { StringBuffer s = new StringBuffer(); List certs = getCertificates(); ListIterator iter = certs.listIterator(); s.append('\\n').append(getType()).append(\" Cert Path: length = \"); while (iter.hasNext()) { s.append(\"==========================================Certificate end\\n\\n\\n\"); } s.append(\"\\n]\"); return s.toString(); }", "n_tokens": 177, "n_pass": [41, 4, 4]}
{"time": "2021-02-14 23:30:24.386626", "score": "0.8651", "loss": "0.4919", "code": "public String toString() { StringBuffer s = new StringBuffer(); List certs = getCertificates(); ListIterator iter = certs.listIterator(); s.append('\\n').append(getType()).append(\" Cert Path: length = \"); while (iter.hasNext()) { s.append(\"======================Certificate end\\n\\n\\n\"); } s.append(\"\\n]\"); return s.toString(); }", "n_tokens": 157, "n_pass": [44, 5, 5]}
{"time": "2021-02-14 23:30:27.136436", "score": "0.9383", "loss": "0.2204", "code": "public String toString() { StringBuffer s = new StringBuffer(); List certs = getCertificates(); ListIterator iter = certs.listIterator(); s.append('\\n').append(getType()).append(\" Cert Path: length = \"); while (iter.hasNext()) { s.append(\"===================\\n\"); } s.append(\"\\n]\"); return s.toString(); }", "n_tokens": 147, "n_pass": [69, 6, 6]}
{"time": "2021-02-14 23:30:29.942309", "score": "0.9402", "loss": "0.203", "code": "public String toString() {StringBuffer(); List certs = getCertificates(); ListIterator iter = certs.listIterator(); s.append('\\n').append(getType()).append(\" Cert Path: length = \"); while (iter.hasNext()) { s.append(\"===================\\n\"); } s.append(\"\\n]\"); return s.toString(); }", "n_tokens": 138, "n_pass": [73, 7, 7]}
{"time": "2021-02-14 23:30:32.744050", "score": "0.9786", "loss": "0.0494", "code": "public String toString() {StringBuffer(); List certs  = certs.listIterator(); s.append('\\n').append(getType()).append(\" Cert Path: length = \"); while (iter.hasNext()) { s.append(\"===================\\n\"); } s.append(\"\\n]\"); return s.toString(); }", "n_tokens": 128, "n_pass": [75, 8, 8]}
{"time": "2021-02-14 23:30:35.435053", "score": "0.9763", "loss": "0.0542", "code": "public String toString() {StringBuffer(); List certs  = certs.listIterator(); append(getType()).append(\" Cert Path: length = \"); while (iter.hasNext()) { s.append(\"===================\\n\"); } s.append(\"\\n]\"); return s.toString(); }", "n_tokens": 118, "n_pass": [77, 9, 9]}
{"time": "2021-02-14 23:30:38.114580", "score": "0.9716", "loss": "0.0544", "code": "public String toString() {StringBuffer(); List certs  = certs.listIterator(); append(getType()).append(\"\"); while (iter.hasNext()) { s.append(\"===================\\n\"); } s.append(\"\\n]\"); return s.toString(); }", "n_tokens": 108, "n_pass": [79, 10, 10]}
{"time": "2021-02-14 23:30:40.806465", "score": "0.9855", "loss": "0.0398", "code": "public String toString() {StringBuffer(); List certs  = certs.listIterator(); append(getType()).append(\"\"); while (iter.hasNext()) { s.append(\"=========\\n\"); } s.append(\"\\n]\"); return s.toString(); }", "n_tokens": 98, "n_pass": [83, 11, 11]}
{"time": "2021-02-14 23:30:43.898548", "score": "0.9882", "loss": "0.0265", "code": "public String toString() {StringBuffer(); List certs  = certs.append(getType()).append(\"\"); while (iter.hasNext()) { s.append(\"=========\\n\"); } s.append(\"\\n]\"); return s.toString(); }", "n_tokens": 93, "n_pass": [125, 12, 12]}
{"time": "2021-02-14 23:30:46.584180", "score": "0.9779", "loss": "0.0669", "code": "public String toString() {StringBuffer(); List certs  = certs.append(getType()).append(\"\"); while (iter.hasNext()) { s.append(\"====\\n\"); } s.append(\"\\n]\"); return s.toString(); }", "n_tokens": 88, "n_pass": [133, 13, 13]}
{"time": "2021-02-14 23:30:50.067626", "score": "0.9868", "loss": "0.0422", "code": "public String toString() {StringBuffer(); List certs  = certs.append(getType()).append(\"\"); while (iter.hasNext()) { s.append(\"=\\n\"); } s.append(\"\\n]\"); return s.toString(); }", "n_tokens": 85, "n_pass": [189, 14, 14]}
{"time": "2021-02-14 23:30:52.752578", "score": "0.9372", "loss": "0.2752", "code": "public String toString() {StringBuffer(); List certs  = certs.append(getType()).append(\"\"); while (iter.hasNext()) { s.append(\"=\\n\"); } s.append(\"\\n]\"); returntoString(); }", "n_tokens": 82, "n_pass": [197, 15, 15]}
{"time": "2021-02-14 23:30:55.420129", "score": "0.9579", "loss": "0.1821", "code": "public String toString() {StringBuffer(); List certs  = certs.append(getType()).append(\"\"); while (iter.hasNext()) { s.append(\"=\\n\"); } s.append(\"\\n]\"); return; }", "n_tokens": 79, "n_pass": [198, 16, 16]}
{"time": "2021-02-14 23:30:58.102703", "score": "0.9579", "loss": "0.1821", "code": "String toString() {StringBuffer(); List certs  = certs.append(getType()).append(\"\"); while (iter.hasNext()) { s.append(\"=\\n\"); } s.append(\"\\n]\"); return; }", "n_tokens": 77, "n_pass": [200, 17, 17]}
{"time": "2021-02-14 23:31:01.178708", "score": "0.9526", "loss": "0.2037", "code": "String toString() {StringBuffer; List certs  = certs.append(getType()).append(\"\"); while (iter.hasNext()) { s.append(\"=\\n\"); } s.append(\"\\n]\"); return; }", "n_tokens": 75, "n_pass": [205, 18, 18]}
{"time": "2021-02-14 23:31:03.836712", "score": "0.9448", "loss": "0.2268", "code": "String toString() {StringBufferList certs  = certs.append(getType()).append(\"\"); while (iter.hasNext()) { s.append(\"=\\n\"); } s.append(\"\\n]\"); return; }", "n_tokens": 73, "n_pass": [206, 19, 19]}
{"time": "2021-02-14 23:31:06.500227", "score": "0.982", "loss": "0.0667", "code": "String toString() {StringBuffercerts  = certs.append(getType()).append(\"\"); while (iter.hasNext()) { s.append(\"=\\n\"); } s.append(\"\\n]\"); return; }", "n_tokens": 71, "n_pass": [207, 20, 20]}
{"time": "2021-02-14 23:31:09.148359", "score": "0.9947", "loss": "0.017", "code": "String toString() {StringBuffer = certs.append(getType()).append(\"\"); while (iter.hasNext()) { s.append(\"=\\n\"); } s.append(\"\\n]\"); return; }", "n_tokens": 69, "n_pass": [208, 21, 21]}
{"time": "2021-02-14 23:31:11.822120", "score": "0.9809", "loss": "0.0689", "code": "String toString() {StringBuffer = certs(getType()).append(\"\"); while (iter.hasNext()) { s.append(\"=\\n\"); } s.append(\"\\n]\"); return; }", "n_tokens": 67, "n_pass": [211, 22, 22]}
{"time": "2021-02-14 23:31:14.475175", "score": "0.9823", "loss": "0.0601", "code": "String toString() {StringBuffer = certs(getType).append(\"\"); while (iter.hasNext()) { s.append(\"=\\n\"); } s.append(\"\\n]\"); return; }", "n_tokens": 65, "n_pass": [213, 23, 23]}
{"time": "2021-02-14 23:31:17.127960", "score": "0.9793", "loss": "0.0617", "code": "String toString() {StringBuffer = certs(getType).append(); while (iter.hasNext()) { s.append(\"=\\n\"); } s.append(\"\\n]\"); return; }", "n_tokens": 63, "n_pass": [216, 24, 24]}
{"time": "2021-02-14 23:31:19.766825", "score": "0.7808", "loss": "0.7396", "code": "String toString() {StringBuffer = certs(getType).append(); while (iter.hasNext()) { (\"=\\n\"); } s.append(\"\\n]\"); return; }", "n_tokens": 60, "n_pass": [223, 25, 25]}
{"time": "2021-02-14 23:31:22.428044", "score": "0.7808", "loss": "0.7396", "code": "String toString() {StringBuffer = certs(getType).append(); while (iter.hasNext()) { (\"=\\n\"); } s.append(\"\\n]\"); }", "n_tokens": 57, "n_pass": [231, 26, 26]}
{"time": "2021-02-14 23:31:25.492806", "score": "0.993", "loss": "0.0138", "code": "String toString() {StringBuffer =(getType).append(); while (iter.hasNext()) { (\"=\\n\"); } s.append(\"\\n]\"); }", "n_tokens": 55, "n_pass": [238, 27, 27]}
{"time": "2021-02-14 23:31:28.561084", "score": "0.9901", "loss": "0.019", "code": "String toString() {StringBuffer(getType).append(); while (iter.hasNext()) { (\"=\\n\"); } s.append(\"\\n]\"); }", "n_tokens": 53, "n_pass": [260, 28, 28]}
{"time": "2021-02-14 23:31:34.227916", "score": "0.9949", "loss": "0.0092", "code": "String toString() {StringBuffer().append(); while (iter.hasNext()) { (\"=\\n\"); } s.append(\"\\n]\"); }", "n_tokens": 52, "n_pass": [325, 29, 29]}
{"time": "2021-02-14 23:31:36.890967", "score": "0.9949", "loss": "0.0092", "code": "String toString() {StringBuffer().append();while (iter.hasNext()) { (\"=\\n\"); } s.append(\"\\n]\"); }", "n_tokens": 51, "n_pass": [332, 30, 30]}
{"time": "2021-02-14 23:31:39.549927", "score": "0.9949", "loss": "0.0092", "code": "String toString() {StringBuffer().append();while(iter.hasNext()) { (\"=\\n\"); } s.append(\"\\n]\"); }", "n_tokens": 50, "n_pass": [334, 31, 31]}
{"time": "2021-02-14 23:31:42.187092", "score": "0.988", "loss": "0.0263", "code": "String toString() {StringBuffer().append();while(iterhasNext()) { (\"=\\n\"); } s.append(\"\\n]\"); }", "n_tokens": 49, "n_pass": [337, 32, 32]}
{"time": "2021-02-14 23:31:44.814724", "score": "0.9943", "loss": "0.01", "code": "String toString() {StringBuffer().append();while(iter()) { (\"=\\n\"); } s.append(\"\\n]\"); }", "n_tokens": 48, "n_pass": [338, 33, 33]}
{"time": "2021-02-14 23:31:47.470426", "score": "0.9943", "loss": "0.01", "code": "String toString() {StringBuffer().append();while(iter()){ (\"=\\n\"); } s.append(\"\\n]\"); }", "n_tokens": 47, "n_pass": [342, 34, 34]}
{"time": "2021-02-14 23:31:50.126763", "score": "0.9943", "loss": "0.01", "code": "String toString() {StringBuffer().append();while(iter()){(\"=\\n\"); } s.append(\"\\n]\"); }", "n_tokens": 46, "n_pass": [344, 35, 35]}
{"time": "2021-02-14 23:31:52.787089", "score": "0.9936", "loss": "0.011", "code": "String toString() {StringBuffer().append();while(iter()){(\"n\"); } s.append(\"\\n]\"); }", "n_tokens": 44, "n_pass": [347, 36, 36]}
{"time": "2021-02-14 23:31:55.403863", "score": "0.3921", "loss": "1.5629", "code": "String toString() {StringBuffer().append();while(iter()){(\"n\"); } s(\"\\n]\"); }", "n_tokens": 42, "n_pass": [352, 37, 37]}
{"time": "2021-02-14 23:31:58.024369", "score": "0.3921", "loss": "1.5629", "code": "String toString() {StringBuffer().append();while(iter()){(\"n\"); } s(\"]\"); }", "n_tokens": 40, "n_pass": [354, 38, 38]}
{"time": "2021-02-14 23:32:01.864611", "score": "0.3921", "loss": "1.5629", "code": "String toString(){StringBuffer().append();while(iter()){(\"n\"); } s(\"]\"); }", "n_tokens": 39, "n_pass": [363, 39, 39]}
{"time": "2021-02-14 23:32:04.513178", "score": "0.7211", "loss": "0.3946", "code": "String toString(){StringBuffer().append();while(iter()){(\"n\"); }(\"]\"); }", "n_tokens": 37, "n_pass": [385, 40, 40]}
{"time": "2021-02-14 23:32:09.869566", "score": "0.7211", "loss": "0.3946", "code": "String toString(){StringBuffer().append();while(iter()){(\"n\"); }(\"]\");}", "n_tokens": 36, "n_pass": [433, 41, 41]}
{"time": "2021-02-14 23:32:13.768965", "score": "0.7172", "loss": "0.402", "code": "String toString(){StringBuffer().append();while(iter()){(\"\"); }(\"]\");}", "n_tokens": 35, "n_pass": [457, 42, 42]}
{"time": "2021-02-14 23:32:16.412517", "score": "0.7172", "loss": "0.402", "code": "String toString(){StringBuffer().append();while(iter()){(\"\");}(\"]\");}", "n_tokens": 34, "n_pass": [461, 43, 43]}

Minimal simplified code:
String toString(){StringBuffer().append();while(iter()){("");}("]");}

