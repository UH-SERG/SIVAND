
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/spring-projects__spring-ws/sandbox/src/main/java/org/springframework/ws/soap/stroap/StroapEnvelope_getHeader.java
method_name = getHeader
method_body = public SoapHeader getHeader() throws SoapHeaderException { if (header == null) { header = new Stroap11Header(getMessageFactory()); } return header; }
predict, score, loss = getHeader, 0.9109209179878235, 0.12586289644241333

Trace of simplified code(s):
{"time": "2021-02-15 02:24:55.323039", "score": "0.9109", "loss": "0.1259", "code": "public SoapHeader getHeader() throws SoapHeaderException { if (header == null) { header = new Stroap11Header(getMessageFactory()); } return header; }", "n_tokens": 52, "n_pass": [1, 1, 1]}
{"time": "2021-02-15 02:24:58.359469", "score": "0.8757", "loss": "0.203", "code": "public SoapHeader getHeader() throws SoapHeaderException { if (header == null) {  new Stroap11Header(getMessageFactory()); } return header; }", "n_tokens": 49, "n_pass": [53, 2, 2]}
{"time": "2021-02-15 02:25:01.010495", "score": "0.847", "loss": "0.2547", "code": "public SoapHeader getHeader() throws SoapHeaderException { if (header == null) { Stroap11Header(getMessageFactory()); } return header; }", "n_tokens": 46, "n_pass": [54, 3, 3]}
{"time": "2021-02-15 02:25:03.632789", "score": "0.8512", "loss": "0.2126", "code": "public SoapHeader getHeader() throws SoapHeaderException { if (header == null) { Header(getMessageFactory()); } return header; }", "n_tokens": 43, "n_pass": [55, 4, 4]}
{"time": "2021-02-15 02:25:10.830223", "score": "0.8512", "loss": "0.2126", "code": " SoapHeader getHeader() throws SoapHeaderException { if (header == null) { Header(getMessageFactory()); } return header; }", "n_tokens": 42, "n_pass": [103, 6, 5]}
{"time": "2021-02-15 02:25:13.485141", "score": "0.8512", "loss": "0.2126", "code": "SoapHeader getHeader() throws SoapHeaderException { if (header == null) { Header(getMessageFactory()); } return header; }", "n_tokens": 41, "n_pass": [104, 7, 6]}
{"time": "2021-02-15 02:25:16.887430", "score": "0.8512", "loss": "0.2126", "code": "SoapHeader getHeader()throws SoapHeaderException { if (header == null) { Header(getMessageFactory()); } return header; }", "n_tokens": 40, "n_pass": [109, 8, 7]}
{"time": "2021-02-15 02:25:28.483626", "score": "0.8512", "loss": "0.2126", "code": "SoapHeader getHeader()throws SoapHeaderException{ if (header == null) { Header(getMessageFactory()); } return header; }", "n_tokens": 39, "n_pass": [167, 10, 8]}
{"time": "2021-02-15 02:25:31.134584", "score": "0.8512", "loss": "0.2126", "code": "SoapHeader getHeader()throws SoapHeaderException{if (header == null) { Header(getMessageFactory()); } return header; }", "n_tokens": 38, "n_pass": [168, 11, 9]}
{"time": "2021-02-15 02:25:33.773102", "score": "0.8512", "loss": "0.2126", "code": "SoapHeader getHeader()throws SoapHeaderException{if(header == null) { Header(getMessageFactory()); } return header; }", "n_tokens": 37, "n_pass": [170, 12, 10]}
{"time": "2021-02-15 02:25:36.436451", "score": "0.8512", "loss": "0.2126", "code": "SoapHeader getHeader()throws SoapHeaderException{if(header== null) { Header(getMessageFactory()); } return header; }", "n_tokens": 36, "n_pass": [173, 13, 11]}
{"time": "2021-02-15 02:25:39.055793", "score": "0.7701", "loss": "0.3132", "code": "SoapHeader getHeader()throws SoapHeaderException{if(header= null) { Header(getMessageFactory()); } return header; }", "n_tokens": 35, "n_pass": [174, 14, 12]}
{"time": "2021-02-15 02:25:41.689627", "score": "0.7701", "loss": "0.3132", "code": "SoapHeader getHeader()throws SoapHeaderException{if(header=null) { Header(getMessageFactory()); } return header; }", "n_tokens": 34, "n_pass": [176, 15, 13]}
{"time": "2021-02-15 02:25:44.312520", "score": "0.7701", "loss": "0.3132", "code": "SoapHeader getHeader()throws SoapHeaderException{if(header=null){ Header(getMessageFactory()); } return header; }", "n_tokens": 33, "n_pass": [179, 16, 14]}
{"time": "2021-02-15 02:25:46.967609", "score": "0.7701", "loss": "0.3132", "code": "SoapHeader getHeader()throws SoapHeaderException{if(header=null){Header(getMessageFactory()); } return header; }", "n_tokens": 32, "n_pass": [181, 17, 15]}
{"time": "2021-02-15 02:25:49.568551", "score": "0.8528", "loss": "0.2242", "code": "SoapHeader getHeader()throws SoapHeaderException{if(header=null){(getMessageFactory()); } return header; }", "n_tokens": 31, "n_pass": [182, 18, 16]}
{"time": "2021-02-15 02:25:52.184041", "score": "0.8528", "loss": "0.2242", "code": "SoapHeader getHeader()throws SoapHeaderException{if(header=null){(getMessageFactory());} return header; }", "n_tokens": 30, "n_pass": [189, 19, 17]}
{"time": "2021-02-15 02:25:54.818231", "score": "0.8528", "loss": "0.2242", "code": "SoapHeader getHeader()throws SoapHeaderException{if(header=null){(getMessageFactory());}return header; }", "n_tokens": 29, "n_pass": [191, 20, 18]}
{"time": "2021-02-15 02:26:05.338840", "score": "0.8528", "loss": "0.2242", "code": "SoapHeader getHeader()throws SoapHeaderException{if(header=null){(getMessageFactory());}return header;}", "n_tokens": 28, "n_pass": [196, 24, 19]}
{"time": "2021-02-15 02:26:09.129684", "score": "0.9236", "loss": "0.1288", "code": "SoapHeader getHeader()throws SoapHeaderException{if(headernull){(getMessageFactory());}return header;}", "n_tokens": 27, "n_pass": [210, 25, 20]}
{"time": "2021-02-15 02:26:11.769814", "score": "0.8789", "loss": "0.1469", "code": "SoapHeader getHeader()throws SoapHeaderException{if(header){(getMessageFactory());}return header;}", "n_tokens": 26, "n_pass": [211, 26, 21]}

Minimal simplified code:
SoapHeader getHeader()throws SoapHeaderException{if(header){(getMessageFactory());}return header;}

