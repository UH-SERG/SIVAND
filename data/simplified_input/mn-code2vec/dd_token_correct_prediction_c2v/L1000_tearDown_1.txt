
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/codefollower__Tomcat-Research/test/org/apache/catalina/tribes/group/interceptors/TestNonBlockingCoordinator_tearDown.java
method_name = tearDown
method_body = @After public void tearDown() throws Exception { System.out.println("tearDown"); for (int i = 0; i < CHANNEL_COUNT; i++) { channels[i].stop(Channel.DEFAULT); } }
predict, score, loss = tearDown, 0.7340124249458313, 0.32010552287101746

Trace of simplified code(s):
{"time": "2021-02-16 13:23:24.095522", "score": "0.734", "loss": "0.3201", "code": "@After public void tearDown() throws Exception { System.out.println(\"tearDown\"); for (int i = 0; i < CHANNEL_COUNT; i++) { channels[i].stop(Channel.DEFAULT); } }", "n_tokens": 73, "n_pass": [1, 1, 1]}
{"time": "2021-02-16 13:23:26.637058", "score": "0.3711", "loss": "1.3928", "code": "@After public void tearDown() throws Exception { System; for (int i = 0; i < CHANNEL_COUNT; i++) { channels[i].stop(Channel.DEFAULT); } }", "n_tokens": 64, "n_pass": [22, 2, 2]}
{"time": "2021-02-16 13:23:29.175177", "score": "0.3588", "loss": "1.4212", "code": "@After public void tearDown() throws Exception {for (int i = 0; i < CHANNEL_COUNT; i++) { channels[i].stop(Channel.DEFAULT); } }", "n_tokens": 60, "n_pass": [43, 3, 3]}
{"time": "2021-02-16 13:23:31.703958", "score": "0.3355", "loss": "1.5006", "code": "@After public void tearDown() throws Exception {for (int0; i < CHANNEL_COUNT; i++) { channels[i].stop(Channel.DEFAULT); } }", "n_tokens": 55, "n_pass": [45, 4, 4]}
{"time": "2021-02-16 13:23:34.222712", "score": "0.888", "loss": "0.1303", "code": "@After public void tearDown() throws Exception {for (int0; i ; i++) { channels[i].stop(Channel.DEFAULT); } }", "n_tokens": 50, "n_pass": [47, 5, 5]}
{"time": "2021-02-16 13:23:36.758563", "score": "0.7197", "loss": "0.5643", "code": "@After public void tearDown() throws Exception {for (int0; i ; i++) { channels(Channel.DEFAULT); } }", "n_tokens": 45, "n_pass": [50, 6, 6]}
{"time": "2021-02-16 13:23:39.276008", "score": "0.91", "loss": "0.1189", "code": "@After public void tearDown() throws Exception {for (int0; i ; i++) { channels; } }", "n_tokens": 40, "n_pass": [51, 7, 7]}
{"time": "2021-02-16 13:23:44.665288", "score": "0.9134", "loss": "0.1116", "code": "@After public void tearDown() throws Exception {for (int0; i ; i++) { } }", "n_tokens": 37, "n_pass": [79, 9, 8]}
{"time": "2021-02-16 13:23:49.690587", "score": "0.9134", "loss": "0.1116", "code": "@After void tearDown() throws Exception {for (int0; i ; i++) { } }", "n_tokens": 35, "n_pass": [82, 11, 9]}
{"time": "2021-02-16 13:23:52.589742", "score": "0.914", "loss": "0.1107", "code": "@After void tearDown() throws Exception {for (int0; ; i++) { } }", "n_tokens": 33, "n_pass": [92, 12, 10]}
{"time": "2021-02-16 13:24:01.524750", "score": "0.914", "loss": "0.1107", "code": "@After void tearDown() throws Exception {for (int0;; i++) { } }", "n_tokens": 32, "n_pass": [138, 14, 11]}
{"time": "2021-02-16 13:24:04.034683", "score": "0.914", "loss": "0.1107", "code": "@After void tearDown() throws Exception {for (int0;;i++) { } }", "n_tokens": 31, "n_pass": [139, 15, 12]}
{"time": "2021-02-16 13:24:07.668161", "score": "0.914", "loss": "0.1107", "code": "@After void tearDown()throws Exception {for (int0;;i++) { } }", "n_tokens": 30, "n_pass": [155, 16, 13]}
{"time": "2021-02-16 13:24:10.183016", "score": "0.914", "loss": "0.1107", "code": "@After void tearDown()throws Exception{for (int0;;i++) { } }", "n_tokens": 29, "n_pass": [159, 17, 14]}
{"time": "2021-02-16 13:24:12.711626", "score": "0.914", "loss": "0.1107", "code": "@After void tearDown()throws Exception{for(int0;;i++) { } }", "n_tokens": 28, "n_pass": [162, 18, 15]}
{"time": "2021-02-16 13:24:15.223704", "score": "0.9147", "loss": "0.1096", "code": "@After void tearDown()throws Exception{for(0;;i++) { } }", "n_tokens": 27, "n_pass": [164, 19, 16]}
{"time": "2021-02-16 13:24:17.736583", "score": "0.9153", "loss": "0.1086", "code": "@After void tearDown()throws Exception{for(;;i++) { } }", "n_tokens": 26, "n_pass": [165, 20, 17]}
{"time": "2021-02-16 13:24:22.427140", "score": "0.9153", "loss": "0.1086", "code": "@After void tearDown()throws Exception{for(;;i++){ } }", "n_tokens": 25, "n_pass": [195, 21, 18]}
{"time": "2021-02-16 13:24:24.942957", "score": "0.9153", "loss": "0.1086", "code": "@After void tearDown()throws Exception{for(;;i++){} }", "n_tokens": 24, "n_pass": [196, 22, 19]}
{"time": "2021-02-16 13:24:27.467178", "score": "0.9153", "loss": "0.1086", "code": "@After void tearDown()throws Exception{for(;;i++){}}", "n_tokens": 23, "n_pass": [198, 23, 20]}

Minimal simplified code:
@After void tearDown()throws Exception{for(;;i++){}}

