
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/dronekit__dronekit-android/dependencyLibs/Mavlink/src/com/MAVLink/common/msg_scaled_pressure_pack.java
method_name = pack
method_body = public MAVLinkPacket pack() { MAVLinkPacket packet = new MAVLinkPacket(MAVLINK_MSG_LENGTH); packet.sysid = 255; packet.compid = 190; packet.msgid = MAVLINK_MSG_ID_SCALED_PRESSURE; packet.payload.putUnsignedInt(time_boot_ms); packet.payload.putFloat(press_abs); packet.payload.putFloat(press_diff); packet.payload.putShort(temperature); return packet; }
predict, score, loss = pack, 0.9999897480010986, 1.5258672647178173e-05

Trace of simplified code(s):
{"time": "2021-02-16 03:38:21.836089", "score": "0.9999", "loss": "0.0002", "code": "public MAVLinkPacket pack() { MAVLinkPacket packet = new MAVLinkPacket(MAVLINK_MSG_LENGTH); packet.sysid = 255; packet.compid = 190; packet.msgid = MAVLINK_MSG_ID_SCALED_PRESSURE; packet.payload.putUnsignedInt(time_boot_ms); packet.payload.putFloat(press_abs); packet.payload.putFloat(press_diff); packet.payload.putShort(temperature); return packet; }", "n_tokens": 121, "n_pass": [1, 1, 1]}
{"time": "2021-02-16 03:38:24.411547", "score": "1.0", "loss": "0.0", "code": "public MAVLinkPacket pack() { MAVLinkPacket packet = new MAVLinkPacket(MAVLINK_MSG_LENGTH); packet.ID_SCALED_PRESSURE; packet.payload.putUnsignedInt(time_boot_ms); packet.payload.putFloat(press_abs); packet.payload.putFloat(press_diff); packet.payload.putShort(temperature); return packet; }", "n_tokens": 91, "n_pass": [9, 2, 2]}
{"time": "2021-02-16 03:38:26.954671", "score": "1.0", "loss": "0.0", "code": "public MAVLinkPacket pack() { MAVLinkPacket packet = new MAVLinkPacket(MAVLINK_MSG_LENGTH); packet.ID_SCALED_PRESSURE; packet.payload.putUnsignedInt(time_); packet.payload.putFloat(press_diff); packet.payload.putShort(temperature); return packet; }", "n_tokens": 76, "n_pass": [19, 3, 3]}
{"time": "2021-02-16 03:38:29.516067", "score": "0.999", "loss": "0.0017", "code": "public MAVLinkPacket pack() { MAVLinkPacket packet =ID_SCALED_PRESSURE; packet.payload.putUnsignedInt(time_); packet.payload.putFloat(press_diff); packet.payload.putShort(temperature); return packet; }", "n_tokens": 61, "n_pass": [23, 4, 4]}
{"time": "2021-02-16 03:38:32.067512", "score": "0.9989", "loss": "0.0022", "code": "public MAVLinkPacket pack() { MAVLinkPacket packet =ID_SCALED_PRESSURE; packet.payload.putUnsignedInt(time_); packet.payload.packet.payload.putShort(temperature); return packet; }", "n_tokens": 53, "n_pass": [39, 5, 5]}
{"time": "2021-02-16 03:38:34.975585", "score": "0.9991", "loss": "0.0019", "code": "public MAVLinkPacket pack() { MAVLinkPacket packet =ID_SCALED_PRESSURE; packet.payload.putUnsignedInt(time_); packet.payload.putShort(temperature); return packet; }", "n_tokens": 49, "n_pass": [61, 6, 6]}
{"time": "2021-02-16 03:38:37.896559", "score": "0.999", "loss": "0.0019", "code": "public MAVLinkPacket pack() { MAVLinkPacket packetSCALED_PRESSURE; packet.payload.putUnsignedInt(time_); packet.payload.putShort(temperature); return packet; }", "n_tokens": 45, "n_pass": [68, 7, 7]}
{"time": "2021-02-16 03:38:40.474645", "score": "0.9993", "loss": "0.0014", "code": "public MAVLinkPacket pack() { MAVLinkPacket packetSCALED_PRESSURE; packet.payload.putUnsignedInt(time_); putShort(temperature); return packet; }", "n_tokens": 41, "n_pass": [73, 8, 8]}
{"time": "2021-02-16 03:38:43.021024", "score": "0.9969", "loss": "0.0044", "code": "public MAVLinkPacket pack() { MAVLinkPacket packetSCALED_PRESSURE; packet.payload.putUnsignedInt(time_); ; return packet; }", "n_tokens": 37, "n_pass": [74, 9, 9]}
{"time": "2021-02-16 03:38:45.572124", "score": "0.9979", "loss": "0.0028", "code": "public MAVLinkPacket pack() { MAVLinkPacket packetSCALED_PRESSURE; packet.payload.putUnsignedInt(time_); packet; }", "n_tokens": 33, "n_pass": [75, 10, 10]}
{"time": "2021-02-16 03:38:48.453670", "score": "0.9898", "loss": "0.0145", "code": "public MAVLinkPacket pack() {SCALED_PRESSURE; packet.payload.putUnsignedInt(time_); packet; }", "n_tokens": 29, "n_pass": [80, 11, 11]}
{"time": "2021-02-16 03:38:50.983093", "score": "0.99", "loss": "0.014", "code": "public MAVLinkPacket pack() { packet.payload.putUnsignedInt(time_); packet; }", "n_tokens": 25, "n_pass": [81, 12, 12]}
{"time": "2021-02-16 03:38:54.519854", "score": "0.9873", "loss": "0.0174", "code": "public MAVLinkPacket pack() { packet.putUnsignedInt(time_); packet; }", "n_tokens": 23, "n_pass": [104, 13, 13]}
{"time": "2021-02-16 03:38:57.062693", "score": "0.9902", "loss": "0.0112", "code": "public MAVLinkPacket pack() { packet(time_); packet; }", "n_tokens": 21, "n_pass": [105, 14, 14]}
{"time": "2021-02-16 03:38:59.581479", "score": "0.9901", "loss": "0.0112", "code": "public MAVLinkPacket pack() { packet(time_);  }", "n_tokens": 19, "n_pass": [109, 15, 15]}
{"time": "2021-02-16 03:39:02.076731", "score": "0.9901", "loss": "0.0112", "code": " MAVLinkPacket pack() { packet(time_);  }", "n_tokens": 18, "n_pass": [111, 16, 16]}
{"time": "2021-02-16 03:39:04.587570", "score": "0.9901", "loss": "0.0112", "code": "MAVLinkPacket pack() { packet(time_);  }", "n_tokens": 17, "n_pass": [112, 17, 17]}
{"time": "2021-02-16 03:39:07.777177", "score": "0.9943", "loss": "0.011", "code": "MAVLinkPacket pack() {(time_);  }", "n_tokens": 15, "n_pass": [117, 18, 18]}
{"time": "2021-02-16 03:39:12.621994", "score": "0.9957", "loss": "0.0074", "code": "MAVLinkPacket pack() {(_);  }", "n_tokens": 14, "n_pass": [141, 19, 19]}
{"time": "2021-02-16 03:39:15.129732", "score": "0.9957", "loss": "0.0074", "code": "MAVLinkPacket pack() {(_); }", "n_tokens": 13, "n_pass": [145, 20, 20]}
{"time": "2021-02-16 03:39:17.632323", "score": "0.9957", "loss": "0.0074", "code": "MAVLinkPacket pack() {(_);}", "n_tokens": 12, "n_pass": [146, 21, 21]}
{"time": "2021-02-16 03:39:21.141616", "score": "0.9957", "loss": "0.0074", "code": "MAVLinkPacket pack(){(_);}", "n_tokens": 11, "n_pass": [153, 22, 22]}

Minimal simplified code:
MAVLinkPacket pack(){(_);}

