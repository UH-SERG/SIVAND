
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/bladecoder__bladecoder-adventure-engine/blade-engine/src/com/bladecoder/engine/model/SceneLayer_draw.java
method_name = draw
method_body = public void draw(SpriteBatch spriteBatch) { if (!visible) return; for (BaseActor a : actors) { if (a instanceof SpriteActor) ((SpriteActor) a).draw(spriteBatch); } }
predict, score, loss = draw, 0.825880765914917, 0.3861055374145508

Trace of simplified code(s):
{"time": "2021-02-14 21:41:49.227755", "score": "0.8259", "loss": "0.3861", "code": "public void draw(SpriteBatch spriteBatch) { if (!visible) return; for (BaseActor a : actors) { if (a instanceof SpriteActor) ((SpriteActor) a).draw(spriteBatch); } }", "n_tokens": 64, "n_pass": [1, 1, 1]}
{"time": "2021-02-14 21:41:51.878339", "score": "0.7525", "loss": "0.4113", "code": "public void draw(SpriteBatch spriteBatch) { if (actors) { if (a instanceof SpriteActor) ((SpriteActor) a).draw(spriteBatch); } }", "n_tokens": 48, "n_pass": [9, 2, 2]}
{"time": "2021-02-14 21:41:54.530749", "score": "0.8086", "loss": "0.2868", "code": "public void draw(SpriteBatch spriteBatch) { if (actors) { if (SpriteActor) ((SpriteActor) a).draw(spriteBatch); } }", "n_tokens": 44, "n_pass": [38, 3, 3]}
{"time": "2021-02-14 21:41:57.155540", "score": "0.8339", "loss": "0.2169", "code": "public void draw(SpriteBatch spriteBatch) { if (actors) { if (SpriteActor) (a).draw(spriteBatch); } }", "n_tokens": 40, "n_pass": [39, 4, 4]}
{"time": "2021-02-14 21:42:00.596343", "score": "0.8339", "loss": "0.2169", "code": "void draw(SpriteBatch spriteBatch) { if (actors) { if (SpriteActor) (a).draw(spriteBatch); } }", "n_tokens": 38, "n_pass": [76, 5, 5]}
{"time": "2021-02-14 21:42:09.376033", "score": "0.8339", "loss": "0.2169", "code": "void draw(SpriteBatch spriteBatch){ if (actors) { if (SpriteActor) (a).draw(spriteBatch); } }", "n_tokens": 37, "n_pass": [141, 6, 6]}
{"time": "2021-02-14 21:42:12.021883", "score": "0.8339", "loss": "0.2169", "code": "void draw(SpriteBatch spriteBatch){if (actors) { if (SpriteActor) (a).draw(spriteBatch); } }", "n_tokens": 36, "n_pass": [142, 7, 7]}
{"time": "2021-02-14 21:42:14.644927", "score": "0.8339", "loss": "0.2169", "code": "void draw(SpriteBatch spriteBatch){if(actors) { if (SpriteActor) (a).draw(spriteBatch); } }", "n_tokens": 35, "n_pass": [144, 8, 8]}
{"time": "2021-02-14 21:42:17.300157", "score": "0.8339", "loss": "0.2169", "code": "void draw(SpriteBatch spriteBatch){if(actors){ if (SpriteActor) (a).draw(spriteBatch); } }", "n_tokens": 34, "n_pass": [148, 9, 9]}
{"time": "2021-02-14 21:42:19.924334", "score": "0.8339", "loss": "0.2169", "code": "void draw(SpriteBatch spriteBatch){if(actors){if (SpriteActor) (a).draw(spriteBatch); } }", "n_tokens": 33, "n_pass": [150, 10, 10]}
{"time": "2021-02-14 21:42:22.952988", "score": "0.8339", "loss": "0.2169", "code": "void draw(SpriteBatch spriteBatch){if(actors){if(SpriteActor) (a).draw(spriteBatch); } }", "n_tokens": 32, "n_pass": [152, 11, 11]}
{"time": "2021-02-14 21:42:25.580821", "score": "0.8339", "loss": "0.2169", "code": "void draw(SpriteBatch spriteBatch){if(actors){if(SpriteActor)(a).draw(spriteBatch); } }", "n_tokens": 31, "n_pass": [156, 12, 12]}
{"time": "2021-02-14 21:42:28.617816", "score": "0.705", "loss": "0.4584", "code": "void draw(SpriteBatch spriteBatch){if(actors){if(SpriteActor)(a).draw(); } }", "n_tokens": 30, "n_pass": [163, 13, 13]}
{"time": "2021-02-14 21:42:31.238163", "score": "0.705", "loss": "0.4584", "code": "void draw(SpriteBatch spriteBatch){if(actors){if(SpriteActor)(a).draw();} }", "n_tokens": 29, "n_pass": [166, 14, 14]}
{"time": "2021-02-14 21:42:33.896851", "score": "0.705", "loss": "0.4584", "code": "void draw(SpriteBatch spriteBatch){if(actors){if(SpriteActor)(a).draw();}}", "n_tokens": 28, "n_pass": [168, 15, 15]}

Minimal simplified code:
void draw(SpriteBatch spriteBatch){if(actors){if(SpriteActor)(a).draw();}}

