
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/bcgit__bc-java/core/src/main/java/org/bouncycastle/asn1/LazyEncodedSequence_encode.java
method_name = encode
method_body = void encode(ASN1OutputStream out) throws IOException { if (encoded != null) { out.writeEncoded(BERTags.SEQUENCE | BERTags.CONSTRUCTED, encoded); } else { super.toDLObject().encode(out); } }
predict, score, loss = encode, 0.9989752769470215, 0.0013559204526245594

Trace of simplified code(s):
{"time": "2021-02-15 00:06:24.140297", "score": "0.999", "loss": "0.0014", "code": "void encode(ASN1OutputStream out) throws IOException { if (encoded != null) { out.writeEncoded(BERTags.SEQUENCE | BERTags.CONSTRUCTED, encoded); } else { super.toDLObject().encode(out); } }", "n_tokens": 70, "n_pass": [1, 1, 1]}
{"time": "2021-02-15 00:06:26.843703", "score": "0.9991", "loss": "0.0012", "code": "void encode(ASN1OutputStream out) throws IOException { if ( null) { out.writeEncoded(BERTags.SEQUENCE | BERTags.CONSTRUCTED, encoded); } else { super.toDLObject().encode(out); } }", "n_tokens": 66, "n_pass": [49, 2, 2]}
{"time": "2021-02-15 00:06:29.520406", "score": "0.9978", "loss": "0.003", "code": "void encode(ASN1OutputStream out) throws IOException { if ( null) { out.writeEncoded(BERTags.BERTags.CONSTRUCTED, encoded); } else { super.toDLObject().encode(out); } }", "n_tokens": 62, "n_pass": [53, 3, 3]}
{"time": "2021-02-15 00:06:32.180618", "score": "0.9959", "loss": "0.007", "code": "void encode(ASN1OutputStream out) throws IOException { if ( null) { out.writeEncoded(BERTags.encoded); } else { super.toDLObject().encode(out); } }", "n_tokens": 57, "n_pass": [54, 4, 4]}
{"time": "2021-02-15 00:06:34.853633", "score": "0.9346", "loss": "0.1384", "code": "void encode(ASN1OutputStream out) throws IOException { if ( null) { out.writeEncoded(BERTags.encoded); } else { super.toDLObject(); } }", "n_tokens": 52, "n_pass": [58, 5, 5]}
{"time": "2021-02-15 00:06:37.500334", "score": "0.9985", "loss": "0.0022", "code": "void encode(ASN1OutputStream out) throws IOException { if ( null) { out.writeEncoded(BERTags.encoded); } else { ; } }", "n_tokens": 47, "n_pass": [70, 6, 6]}
{"time": "2021-02-15 00:06:40.884737", "score": "0.9985", "loss": "0.0022", "code": "void encode(ASN1OutputStream out) throws IOException { if ( null) { out.writeEncoded(BERTags.encoded); } else {} }", "n_tokens": 44, "n_pass": [104, 7, 7]}
{"time": "2021-02-15 00:06:43.913186", "score": "0.9743", "loss": "0.029", "code": "void encode(OutputStream out) throws IOException { if ( null) { out.writeEncoded(BERTags.encoded); } else {} }", "n_tokens": 42, "n_pass": [108, 8, 8]}
{"time": "2021-02-15 00:06:46.560421", "score": "0.9545", "loss": "0.0496", "code": "void encode(OutputStream out) throws IOException { if ( null) { writeEncoded(BERTags.encoded); } else {} }", "n_tokens": 40, "n_pass": [119, 9, 9]}
{"time": "2021-02-15 00:06:49.224351", "score": "0.4673", "loss": "0.7786", "code": "void encode(OutputStream out) throws IOException { if ( null) { writeEncoded(encoded); } else {} }", "n_tokens": 38, "n_pass": [121, 10, 10]}
{"time": "2021-02-15 00:07:00.733512", "score": "0.4673", "loss": "0.7786", "code": "void encode(OutputStream out) throws IOException { if ( null) { writeEncoded(encoded);} else {} }", "n_tokens": 37, "n_pass": [179, 12, 11]}
{"time": "2021-02-15 00:07:03.411393", "score": "0.4673", "loss": "0.7786", "code": "void encode(OutputStream out) throws IOException { if ( null) { writeEncoded(encoded);}else {} }", "n_tokens": 36, "n_pass": [181, 13, 12]}
{"time": "2021-02-15 00:07:06.069413", "score": "0.4673", "loss": "0.7786", "code": "void encode(OutputStream out) throws IOException { if ( null) { writeEncoded(encoded);} {} }", "n_tokens": 35, "n_pass": [182, 14, 13]}
{"time": "2021-02-15 00:07:08.726258", "score": "0.4673", "loss": "0.7786", "code": "void encode(OutputStream out) throws IOException { if ( null) { writeEncoded(encoded);}{} }", "n_tokens": 34, "n_pass": [183, 15, 14]}
{"time": "2021-02-15 00:07:11.390484", "score": "0.4673", "loss": "0.7786", "code": "void encode(OutputStream out) throws IOException { if ( null) { writeEncoded(encoded);} }", "n_tokens": 32, "n_pass": [184, 16, 15]}
{"time": "2021-02-15 00:07:14.806920", "score": "0.4673", "loss": "0.7786", "code": "void encode(OutputStream out)throws IOException { if ( null) { writeEncoded(encoded);} }", "n_tokens": 31, "n_pass": [194, 17, 16]}
{"time": "2021-02-15 00:07:17.460201", "score": "0.4673", "loss": "0.7786", "code": "void encode(OutputStream out)throws IOException{ if ( null) { writeEncoded(encoded);} }", "n_tokens": 30, "n_pass": [198, 18, 17]}
{"time": "2021-02-15 00:07:20.085358", "score": "0.4673", "loss": "0.7786", "code": "void encode(OutputStream out)throws IOException{if ( null) { writeEncoded(encoded);} }", "n_tokens": 29, "n_pass": [200, 19, 18]}
{"time": "2021-02-15 00:07:22.743703", "score": "0.4673", "loss": "0.7786", "code": "void encode(OutputStream out)throws IOException{if( null) { writeEncoded(encoded);} }", "n_tokens": 28, "n_pass": [202, 20, 19]}
{"time": "2021-02-15 00:07:25.388426", "score": "0.4673", "loss": "0.7786", "code": "void encode(OutputStream out)throws IOException{if(null) { writeEncoded(encoded);} }", "n_tokens": 27, "n_pass": [204, 21, 20]}
{"time": "2021-02-15 00:07:28.026100", "score": "0.4673", "loss": "0.7786", "code": "void encode(OutputStream out)throws IOException{if(null){ writeEncoded(encoded);} }", "n_tokens": 26, "n_pass": [207, 22, 21]}
{"time": "2021-02-15 00:07:30.685292", "score": "0.4673", "loss": "0.7786", "code": "void encode(OutputStream out)throws IOException{if(null){writeEncoded(encoded);} }", "n_tokens": 25, "n_pass": [209, 23, 22]}
{"time": "2021-02-15 00:07:39.768617", "score": "0.4673", "loss": "0.7786", "code": "void encode(OutputStream out)throws IOException{if(null){writeEncoded(encoded);}}", "n_tokens": 24, "n_pass": [236, 26, 23]}

Minimal simplified code:
void encode(OutputStream out)throws IOException{if(null){writeEncoded(encoded);}}

