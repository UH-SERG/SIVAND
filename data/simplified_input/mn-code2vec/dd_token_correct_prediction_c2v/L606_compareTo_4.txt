
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/sakaiproject__sakai/signup/api/src/java/org/sakaiproject/signup/model/SignupAttendee_compareTo.java
method_name = compareTo
method_body = public int compareTo(Object o) { if (o == null) return -1; if (!(o instanceof SignupAttendee)) throw new ClassCastException("Not type of SignupAttendee"); SignupAttendee other = (SignupAttendee) o; if (displayName == null) return -1; int value = displayName.compareTo(other.getDisplayName()); if (value != 0) return value; return 0; }
predict, score, loss = compareTo, 0.9918185472488403, 0.008893284946680069

Trace of simplified code(s):
{"time": "2021-02-15 00:21:01.445789", "score": "0.992", "loss": "0.0086", "code": "public int compareTo(Object o) { if (o == null) return -1; if (!(o instanceof SignupAttendee)) throw new ClassCastException(\"Not type of SignupAttendee\"); SignupAttendee other = (SignupAttendee) o; if (displayName == null) return -1; int value = displayName.compareTo(other.getDisplayName()); if (value != 0) return value; return 0; }", "n_tokens": 131, "n_pass": [1, 1, 1]}
{"time": "2021-02-15 00:21:04.121996", "score": "0.9952", "loss": "0.0051", "code": "public int compareTo(Object o) { if (o == null) return -1; if (\"Not type of SignupAttendee\"); SignupAttendee other = (SignupAttendee) o; if (displayName == null) return -1; int value = displayName.compareTo(other.getDisplayName()); if (value != 0) return value; return 0; }", "n_tokens": 115, "n_pass": [22, 2, 2]}
{"time": "2021-02-15 00:21:06.784809", "score": "0.9961", "loss": "0.0043", "code": "public int compareTo(Object o) { if (o == null) return -1; if (\"Not type of SignupAttendee\"); SignupAttendee other; if (displayName == null) return -1; int value = displayName.compareTo(other.getDisplayName()); if (value != 0) return value; return 0; }", "n_tokens": 107, "n_pass": [46, 3, 3]}
{"time": "2021-02-15 00:21:09.477392", "score": "0.9935", "loss": "0.0086", "code": "public int compareTo(Object o) { if (o == null) return -1; if (\"Not type of SignupAttendee\"); SignupAttendee other; if (displayName == null) return - displayName.compareTo(other.getDisplayName()); if (value != 0) return value; return 0; }", "n_tokens": 99, "n_pass": [48, 4, 4]}
{"time": "2021-02-15 00:21:12.150404", "score": "0.9934", "loss": "0.0093", "code": "public int compareTo(Object o) { if (o == null) (\"Not type of SignupAttendee\"); SignupAttendee other; if (displayName == null) return - displayName.compareTo(other.getDisplayName()); if (value != 0) return value; return 0; }", "n_tokens": 91, "n_pass": [56, 5, 5]}
{"time": "2021-02-15 00:21:14.824716", "score": "0.9934", "loss": "0.0093", "code": "public int compareTo(Object o) { if (o == null) (\"Not SignupAttendee\"); SignupAttendee other; if (displayName == null) return - displayName.compareTo(other.getDisplayName()); if (value != 0) return value; return 0; }", "n_tokens": 87, "n_pass": [91, 6, 6]}
{"time": "2021-02-15 00:21:17.529577", "score": "0.9955", "loss": "0.006", "code": "public int compareTo(Object o) { if (o == null) (\"Not SignupAttendee\");; if (displayName == null) return - displayName.compareTo(other.getDisplayName()); if (value != 0) return value; return 0; }", "n_tokens": 83, "n_pass": [93, 7, 7]}
{"time": "2021-02-15 00:21:20.202962", "score": "0.8133", "loss": "0.348", "code": "public int compareTo(Object o) { if (o == null) (\"Not SignupAttendee\");; if (displayName == null) displayName.compareTo(other.getDisplayName()); if (value != 0) return value; return 0; }", "n_tokens": 79, "n_pass": [97, 8, 8]}
{"time": "2021-02-15 00:21:22.875878", "score": "0.9953", "loss": "0.0092", "code": "public int compareTo(Object o) { if (o == null) (\"Not SignupAttendee\");; if (displayName == null)(other.getDisplayName()); if (value != 0) return value; return 0; }", "n_tokens": 75, "n_pass": [98, 9, 9]}
{"time": "2021-02-15 00:21:25.562361", "score": "0.9143", "loss": "0.2143", "code": "public int compareTo(Object o) { if (o == null) (\"Not SignupAttendee\");; if (displayName == null)(other.getDisplayName()); if ( 0) return value; return 0; }", "n_tokens": 71, "n_pass": [102, 10, 10]}
{"time": "2021-02-15 00:21:31.364768", "score": "0.914", "loss": "0.2395", "code": "public int compareTo(Object o) { if ( null) (\"Not SignupAttendee\");; if (displayName == null)(other.getDisplayName()); if ( 0) return value; return 0; }", "n_tokens": 67, "n_pass": [110, 12, 11]}
{"time": "2021-02-15 00:21:37.505015", "score": "0.914", "loss": "0.2395", "code": "public int compareTo(Object o) { if ( null) (\"SignupAttendee\");; if (displayName == null)(other.getDisplayName()); if ( 0) return value; return 0; }", "n_tokens": 65, "n_pass": [162, 14, 12]}
{"time": "2021-02-15 00:21:40.174950", "score": "0.9129", "loss": "0.2438", "code": "public int compareTo(Object o) { if ( null) (\"SignupAttendee\");if (displayName == null)(other.getDisplayName()); if ( 0) return value; return 0; }", "n_tokens": 63, "n_pass": [165, 15, 13]}
{"time": "2021-02-15 00:21:42.861449", "score": "0.9243", "loss": "0.3272", "code": "public int compareTo(Object o) { if ( null) (\"SignupAttendee\");if (displayName= null)(other.getDisplayName()); if ( 0) return value; return 0; }", "n_tokens": 61, "n_pass": [168, 16, 14]}
{"time": "2021-02-15 00:21:45.513876", "score": "0.9379", "loss": "0.2135", "code": "public int compareTo(Object o) { if ( null) (\"SignupAttendee\");if (displayNamenull)(other.getDisplayName()); if ( 0) return value; return 0; }", "n_tokens": 59, "n_pass": [169, 17, 15]}
{"time": "2021-02-15 00:21:48.176131", "score": "0.8264", "loss": "0.3663", "code": "public int compareTo(Object o) { if ( null) (\"SignupAttendee\");if (displayNamenull)(other()); if ( 0) return value; return 0; }", "n_tokens": 57, "n_pass": [172, 18, 16]}
{"time": "2021-02-15 00:21:50.862881", "score": "0.8287", "loss": "0.362", "code": "public int compareTo(Object o) { if ( null) (\"SignupAttendee\");if (displayNamenull)(other); if ( 0) return value; return 0; }", "n_tokens": 55, "n_pass": [173, 19, 17]}
{"time": "2021-02-15 00:21:53.530589", "score": "0.8955", "loss": "0.1596", "code": "public int compareTo(Object o) { if ( null) (\"SignupAttendee\");if (displayNamenull)(other); if ( 0) value; return 0; }", "n_tokens": 53, "n_pass": [179, 20, 18]}
{"time": "2021-02-15 00:21:56.209945", "score": "0.5419", "loss": "0.9297", "code": "public int compareTo(Object o) { if ( null) (\"SignupAttendee\");if (displayNamenull)(other); if ( 0) return 0; }", "n_tokens": 50, "n_pass": [180, 21, 19]}
{"time": "2021-02-15 00:21:59.007299", "score": "0.6072", "loss": "0.6156", "code": "public int compareTo(Object o) { if ( null) (\"SignupAttendee\");if (displayNamenull)(other); if ( 0) ; }", "n_tokens": 47, "n_pass": [181, 22, 20]}
{"time": "2021-02-15 00:22:01.686946", "score": "0.6072", "loss": "0.6156", "code": "int compareTo(Object o) { if ( null) (\"SignupAttendee\");if (displayNamenull)(other); if ( 0) ; }", "n_tokens": 45, "n_pass": [183, 23, 21]}
{"time": "2021-02-15 00:22:05.217548", "score": "0.6072", "loss": "0.6156", "code": "int compareTo(Object o) { if ( null) (\"SignupAttendee\");if (displayNamenull)(other); ( 0) ; }", "n_tokens": 43, "n_pass": [201, 24, 22]}
{"time": "2021-02-15 00:22:13.918857", "score": "0.6072", "loss": "0.6156", "code": "int compareTo(Object o) { if ( null) (\"SignupAttendee\");if (displayNamenull)(other);( 0) ; }", "n_tokens": 42, "n_pass": [265, 25, 23]}
{"time": "2021-02-15 00:22:16.977049", "score": "0.6072", "loss": "0.6156", "code": "int compareTo(Object o) { if ( null) (\"SignupAttendee\");if (displayNamenull)(other);(0) ; }", "n_tokens": 41, "n_pass": [266, 26, 24]}
{"time": "2021-02-15 00:22:19.639544", "score": "0.6072", "loss": "0.6156", "code": "int compareTo(Object o) { if ( null) (\"SignupAttendee\");if (displayNamenull)(other);(0); }", "n_tokens": 40, "n_pass": [269, 27, 25]}
{"time": "2021-02-15 00:22:23.080484", "score": "0.6072", "loss": "0.6156", "code": "int compareTo(Object o){ if ( null) (\"SignupAttendee\");if (displayNamenull)(other);(0); }", "n_tokens": 39, "n_pass": [280, 28, 26]}
{"time": "2021-02-15 00:22:25.789761", "score": "0.6072", "loss": "0.6156", "code": "int compareTo(Object o){if ( null) (\"SignupAttendee\");if (displayNamenull)(other);(0); }", "n_tokens": 38, "n_pass": [282, 29, 27]}
{"time": "2021-02-15 00:22:28.466066", "score": "0.6072", "loss": "0.6156", "code": "int compareTo(Object o){if( null) (\"SignupAttendee\");if (displayNamenull)(other);(0); }", "n_tokens": 37, "n_pass": [284, 30, 28]}
{"time": "2021-02-15 00:22:31.166433", "score": "0.6072", "loss": "0.6156", "code": "int compareTo(Object o){if(null) (\"SignupAttendee\");if (displayNamenull)(other);(0); }", "n_tokens": 36, "n_pass": [286, 31, 29]}
{"time": "2021-02-15 00:22:34.303228", "score": "0.6072", "loss": "0.6156", "code": "int compareTo(Object o){if(null)(\"SignupAttendee\");if (displayNamenull)(other);(0); }", "n_tokens": 35, "n_pass": [289, 32, 30]}
{"time": "2021-02-15 00:22:36.965145", "score": "0.505", "loss": "0.8398", "code": "int compareTo(Object o){if(null)(\"\");if (displayNamenull)(other);(0); }", "n_tokens": 34, "n_pass": [292, 33, 31]}
{"time": "2021-02-15 00:22:40.013247", "score": "0.505", "loss": "0.8398", "code": "int compareTo(Object o){if(null)(\"\");if(displayNamenull)(other);(0); }", "n_tokens": 33, "n_pass": [297, 34, 32]}
{"time": "2021-02-15 00:22:42.686132", "score": "0.485", "loss": "0.7762", "code": "int compareTo(Object o){if(null)(\"\");if(null)(other);(0); }", "n_tokens": 32, "n_pass": [299, 35, 33]}
{"time": "2021-02-15 00:22:46.915569", "score": "0.485", "loss": "0.7762", "code": "int compareTo(Object o){if(null)(\"\");if(null)(other);(0);}", "n_tokens": 31, "n_pass": [333, 36, 34]}

Minimal simplified code:
int compareTo(Object o){if(null)("");if(null)(other);(0);}

