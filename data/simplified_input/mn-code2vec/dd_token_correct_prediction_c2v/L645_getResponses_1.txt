
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/bcgit__bc-java/pkix/src/main/java/org/bouncycastle/cert/ocsp/RespData_getResponses.java
method_name = getResponses
method_body = public SingleResp[] getResponses() { ASN1Sequence s = data.getResponses(); SingleResp[] rs = new SingleResp[s.size()]; for (int i = 0; i != rs.length; i++) { rs[i] = new SingleResp(SingleResponse.getInstance(s.getObjectAt(i))); } return rs; }
predict, score, loss = getResponses, 0.8410883545875549, 0.32982417941093445

Trace of simplified code(s):
{"time": "2021-02-15 01:39:27.087685", "score": "0.8411", "loss": "0.3298", "code": "public SingleResp[] getResponses() { ASN1Sequence s = data.getResponses(); SingleResp[] rs = new SingleResp[s.size()]; for (int i = 0; i != rs.length; i++) { rs[i] = new SingleResp(SingleResponse.getInstance(s.getObjectAt(i))); } return rs; }", "n_tokens": 109, "n_pass": [1, 1, 1]}
{"time": "2021-02-15 01:39:30.178358", "score": "0.2833", "loss": "1.6574", "code": "public SingleResp[] getResponses() { ASN1Sequence s ; SingleResp[] rs = new SingleResp[s.size()]; for (int i = 0; i != rs.length; i++) { rs[i] = new SingleResp(SingleResponse.getInstance(s.getObjectAt(i))); } return rs; }", "n_tokens": 102, "n_pass": [47, 2, 2]}
{"time": "2021-02-15 01:39:35.562757", "score": "0.406", "loss": "1.2305", "code": "public SingleResp[] getResponses() { ASN1Sequence s ; SingleResp[] rs = new SingleResp[s.size()]; for (int i = 0; i; i++) { rs[i] = new SingleResp(SingleResponse.getInstance(s.getObjectAt(i))); } return rs; }", "n_tokens": 95, "n_pass": [53, 4, 3]}
{"time": "2021-02-15 01:39:38.637916", "score": "0.6413", "loss": "0.8029", "code": "public SingleResp[] getResponses() { ; SingleResp[] rs = new SingleResp[s.size()]; for (int i = 0; i; i++) { rs[i] = new SingleResp(SingleResponse.getInstance(s.getObjectAt(i))); } return rs; }", "n_tokens": 89, "n_pass": [62, 5, 4]}
{"time": "2021-02-15 01:39:41.778923", "score": "0.266", "loss": "2.2449", "code": "public SingleResp[] getResponses() { ; SingleResprs = new SingleResp[s.size()]; for (int i = 0; i; i++) { rs[i] = new SingleResp(SingleResponse.getInstance(s.getObjectAt(i))); } return rs; }", "n_tokens": 86, "n_pass": [103, 6, 5]}
{"time": "2021-02-15 01:39:44.495595", "score": "0.2706", "loss": "2.2818", "code": "public SingleResp[] getResponses() { ; SingleResprs =SingleResp[s.size()]; for (int i = 0; i; i++) { rs[i] = new SingleResp(SingleResponse.getInstance(s.getObjectAt(i))); } return rs; }", "n_tokens": 83, "n_pass": [105, 7, 6]}
{"time": "2021-02-15 01:39:47.227086", "score": "0.2574", "loss": "2.3022", "code": "public SingleResp[] getResponses() { ; SingleResprs =SingleResp[s.size()]; for (int i = 0; i; i++) { rs= new SingleResp(SingleResponse.getInstance(s.getObjectAt(i))); } return rs; }", "n_tokens": 79, "n_pass": [116, 8, 7]}
{"time": "2021-02-15 01:39:52.972046", "score": "0.2413", "loss": "2.3472", "code": "public SingleResp[] getResponses() { rs =SingleResp[s.size()]; for (int i = 0; i; i++) { rs= new SingleResp(SingleResponse.getInstance(s.getObjectAt(i))); } return rs; }", "n_tokens": 76, "n_pass": [128, 10, 8]}
{"time": "2021-02-15 01:39:55.637460", "score": "0.3374", "loss": "1.87", "code": "public SingleResp[] getResponses() { SingleResp[s.size()]; for (int i = 0; i; i++) { rs= new SingleResp(SingleResponse.getInstance(s.getObjectAt(i))); } return rs; }", "n_tokens": 73, "n_pass": [129, 11, 9]}
{"time": "2021-02-15 01:40:03.192487", "score": "0.3374", "loss": "1.87", "code": "public SingleResp[] getResponses(){ SingleResp[s.size()]; for (int i = 0; i; i++) { rs= new SingleResp(SingleResponse.getInstance(s.getObjectAt(i))); } return rs; }", "n_tokens": 72, "n_pass": [194, 13, 10]}
{"time": "2021-02-15 01:40:05.867655", "score": "0.3804", "loss": "1.6998", "code": "public SingleResp[] getResponses(){ SingleResp[s()]; for (int i = 0; i; i++) { rs= new SingleResp(SingleResponse.getInstance(s.getObjectAt(i))); } return rs; }", "n_tokens": 70, "n_pass": [198, 14, 11]}
{"time": "2021-02-15 01:40:08.523522", "score": "0.4333", "loss": "1.4831", "code": "public SingleResp[] getResponses(){ SingleResp[s]; for (int i = 0; i; i++) { rs= new SingleResp(SingleResponse.getInstance(s.getObjectAt(i))); } return rs; }", "n_tokens": 68, "n_pass": [199, 15, 12]}
{"time": "2021-02-15 01:40:11.213510", "score": "0.4511", "loss": "1.4266", "code": "public SingleResp[] getResponses(){ SingleResp[s]; for (i = 0; i; i++) { rs= new SingleResp(SingleResponse.getInstance(s.getObjectAt(i))); } return rs; }", "n_tokens": 66, "n_pass": [203, 16, 13]}
{"time": "2021-02-15 01:40:13.883400", "score": "0.4511", "loss": "1.4224", "code": "public SingleResp[] getResponses(){ SingleResp[s]; for (i = 0;; i++) { rs= new SingleResp(SingleResponse.getInstance(s.getObjectAt(i))); } return rs; }", "n_tokens": 64, "n_pass": [207, 17, 14]}
{"time": "2021-02-15 01:40:16.535330", "score": "0.3886", "loss": "1.3697", "code": "public SingleResp[] getResponses(){ SingleResp[s]; for (i = 0;; i++) { rs= SingleResp(SingleResponse.getInstance(s.getObjectAt(i))); } return rs; }", "n_tokens": 62, "n_pass": [214, 18, 15]}
{"time": "2021-02-15 01:40:19.207281", "score": "0.1786", "loss": "2.6606", "code": "public SingleResp[] getResponses(){ SingleResp[s]; for (i = 0;; i++) { rs= SingleResp(getInstance(s.getObjectAt(i))); } return rs; }", "n_tokens": 60, "n_pass": [216, 19, 16]}
{"time": "2021-02-15 01:40:21.900277", "score": "0.3883", "loss": "1.5271", "code": "public SingleResp[] getResponses(){ SingleResp[s]; for (i = 0;; i++) { rs= SingleResp(getInstance(getObjectAt(i))); } return rs; }", "n_tokens": 58, "n_pass": [218, 20, 17]}
{"time": "2021-02-15 01:40:24.562789", "score": "0.6154", "loss": "0.838", "code": "public SingleResp[] getResponses(){ SingleResp[s]; for (i = 0;; i++) { rs= SingleResp(getInstance(getObjectAt(i))); } rs; }", "n_tokens": 56, "n_pass": [224, 21, 18]}
{"time": "2021-02-15 01:40:27.194984", "score": "0.6249", "loss": "0.8087", "code": "public SingleResp[] getResponses(){ SingleResp[s]; for (i = 0;; i++) { rs= SingleResp(getInstance(getObjectAt(i))); }  }", "n_tokens": 54, "n_pass": [225, 22, 19]}
{"time": "2021-02-15 01:40:29.844333", "score": "0.6249", "loss": "0.8087", "code": " SingleResp[] getResponses(){ SingleResp[s]; for (i = 0;; i++) { rs= SingleResp(getInstance(getObjectAt(i))); }  }", "n_tokens": 53, "n_pass": [227, 23, 20]}
{"time": "2021-02-15 01:40:32.483211", "score": "0.6249", "loss": "0.8087", "code": "SingleResp[] getResponses(){ SingleResp[s]; for (i = 0;; i++) { rs= SingleResp(getInstance(getObjectAt(i))); }  }", "n_tokens": 52, "n_pass": [228, 24, 21]}
{"time": "2021-02-15 01:40:35.114537", "score": "0.6249", "loss": "0.8087", "code": "SingleResp[]getResponses(){ SingleResp[s]; for (i = 0;; i++) { rs= SingleResp(getInstance(getObjectAt(i))); }  }", "n_tokens": 51, "n_pass": [232, 25, 22]}
{"time": "2021-02-15 01:40:46.319043", "score": "0.6249", "loss": "0.8087", "code": "SingleResp[]getResponses(){SingleResp[s]; for (i = 0;; i++) { rs= SingleResp(getInstance(getObjectAt(i))); }  }", "n_tokens": 50, "n_pass": [306, 27, 23]}
{"time": "2021-02-15 01:40:48.972273", "score": "0.6249", "loss": "0.8087", "code": "SingleResp[]getResponses(){SingleResp[s];for (i = 0;; i++) { rs= SingleResp(getInstance(getObjectAt(i))); }  }", "n_tokens": 49, "n_pass": [311, 28, 24]}
{"time": "2021-02-15 01:40:51.590998", "score": "0.6249", "loss": "0.8087", "code": "SingleResp[]getResponses(){SingleResp[s];for(i = 0;; i++) { rs= SingleResp(getInstance(getObjectAt(i))); }  }", "n_tokens": 48, "n_pass": [313, 29, 25]}
{"time": "2021-02-15 01:40:54.459656", "score": "0.6249", "loss": "0.8087", "code": "SingleResp[]getResponses(){SingleResp[s];for(i= 0;; i++) { rs= SingleResp(getInstance(getObjectAt(i))); }  }", "n_tokens": 47, "n_pass": [316, 30, 26]}
{"time": "2021-02-15 01:40:57.112594", "score": "0.6249", "loss": "0.8087", "code": "SingleResp[]getResponses(){SingleResp[s];for(i=0;; i++) { rs= SingleResp(getInstance(getObjectAt(i))); }  }", "n_tokens": 46, "n_pass": [318, 31, 27]}
{"time": "2021-02-15 01:40:59.723919", "score": "0.6249", "loss": "0.8087", "code": "SingleResp[]getResponses(){SingleResp[s];for(i=0;;i++) { rs= SingleResp(getInstance(getObjectAt(i))); }  }", "n_tokens": 45, "n_pass": [322, 32, 28]}
{"time": "2021-02-15 01:41:02.348816", "score": "0.6249", "loss": "0.8087", "code": "SingleResp[]getResponses(){SingleResp[s];for(i=0;;i++){ rs= SingleResp(getInstance(getObjectAt(i))); }  }", "n_tokens": 44, "n_pass": [327, 33, 29]}
{"time": "2021-02-15 01:41:04.990580", "score": "0.6249", "loss": "0.8087", "code": "SingleResp[]getResponses(){SingleResp[s];for(i=0;;i++){rs= SingleResp(getInstance(getObjectAt(i))); }  }", "n_tokens": 43, "n_pass": [329, 34, 30]}
{"time": "2021-02-15 01:41:07.669821", "score": "0.6249", "loss": "0.8087", "code": "SingleResp[]getResponses(){SingleResp[s];for(i=0;;i++){rs=SingleResp(getInstance(getObjectAt(i))); }  }", "n_tokens": 42, "n_pass": [332, 35, 31]}
{"time": "2021-02-15 01:41:12.938762", "score": "0.7208", "loss": "0.5978", "code": "SingleResp[]getResponses(){SingleResp[s];for(i=0;;i++){rs=SingleResp((getObjectAt(i))); }  }", "n_tokens": 41, "n_pass": [335, 37, 32]}
{"time": "2021-02-15 01:41:15.572739", "score": "0.8389", "loss": "0.3225", "code": "SingleResp[]getResponses(){SingleResp[s];for(i=0;;i++){rs=SingleResp(((i))); }  }", "n_tokens": 40, "n_pass": [337, 38, 33]}
{"time": "2021-02-15 01:41:18.235680", "score": "0.8389", "loss": "0.3225", "code": "SingleResp[]getResponses(){SingleResp[s];for(i=0;;i++){rs=SingleResp(((i)));}  }", "n_tokens": 39, "n_pass": [344, 39, 34]}
{"time": "2021-02-15 01:41:20.865468", "score": "0.8389", "loss": "0.3225", "code": "SingleResp[]getResponses(){SingleResp[s];for(i=0;;i++){rs=SingleResp(((i)));} }", "n_tokens": 38, "n_pass": [346, 40, 35]}
{"time": "2021-02-15 01:41:23.524010", "score": "0.8389", "loss": "0.3225", "code": "SingleResp[]getResponses(){SingleResp[s];for(i=0;;i++){rs=SingleResp(((i)));}}", "n_tokens": 37, "n_pass": [347, 41, 36]}
{"time": "2021-02-15 01:41:26.171780", "score": "0.8562", "loss": "0.2919", "code": "SingleResp[]getResponses(){SingleResp[s];for(i0;;i++){rs=SingleResp(((i)));}}", "n_tokens": 36, "n_pass": [364, 42, 37]}
{"time": "2021-02-15 01:41:28.821563", "score": "0.8562", "loss": "0.2919", "code": "SingleResp[]getResponses(){SingleResp[s];for(i;;i++){rs=SingleResp(((i)));}}", "n_tokens": 35, "n_pass": [365, 43, 38]}
{"time": "2021-02-15 01:41:36.732285", "score": "0.8583", "loss": "0.2868", "code": "SingleResp[]getResponses(){SingleResp[s];for(;;i++){rs=SingleResp(((i)));}}", "n_tokens": 34, "n_pass": [400, 46, 39]}

Minimal simplified code:
SingleResp[]getResponses(){SingleResp[s];for(;;i++){rs=SingleResp(((i)));}}

