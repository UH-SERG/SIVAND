
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/JeffLi1993__java-core-learning-example/src/main/java/org/javacore/thread/DaemonFromFactory_main.java
method_name = main
method_body = public static void main(String[] args) throws InterruptedException { ExecutorService exec = Executors.newCachedThreadPool(new DaemonThreadFactory()); for (int i = 0; i < 10; i++) exec.execute(new DaemonFromFactory()); exec.shutdown(); System.out.println("任务已经全部启动"); TimeUnit.MICROSECONDS.sleep(500); }
predict, score, loss = main, 0.9995121955871582, 0.0005588161875493824

Trace of simplified code(s):
{"time": "2021-02-14 15:33:15.149557", "score": "0.9999", "loss": "0.0001", "code": "public static void main(String[] args) throws InterruptedException { ExecutorService exec = Executors.newCachedThreadPool(new DaemonThreadFactory()); for (int i = 0; i < 10; i++) exec.execute(new DaemonFromFactory()); exec.shutdown(); System.out.println(\"\u4efb\u52a1\u5df2\u7ecf\u5168\u90e8\u542f\u52a8\"); TimeUnit.MICROSECONDS.sleep(500); }", "n_tokens": 108, "n_pass": [1, 1, 1]}
{"time": "2021-02-14 15:33:18.275781", "score": "0.9993", "loss": "0.0009", "code": "public static void main(String[] args) throws InterruptedException { ExecutorService exec = Executors.newCachedThreadPool(new DaemonThreadFactory()); for (int i = 0; i < 10; i++) exec.execute(new DaemonFromFactory()); System.out.println(\"\u4efb\u52a1\u5df2\u7ecf\u5168\u90e8\u542f\u52a8\"); TimeUnit.MICROSECONDS.sleep(500); }", "n_tokens": 101, "n_pass": [55, 2, 2]}
{"time": "2021-02-14 15:33:20.943931", "score": "0.9997", "loss": "0.0004", "code": "public static void main(String[] args) throws InterruptedException { ExecutorService exec = Executors.newCachedThreadPool(new DaemonThreadFactory()); for (int i = 0; i < 10; i++) exec.execute(new DaemonFromFactory()); System.out. TimeUnit.MICROSECONDS.sleep(500); }", "n_tokens": 94, "n_pass": [57, 3, 3]}
{"time": "2021-02-14 15:33:24.040707", "score": "0.9999", "loss": "0.0001", "code": "public static void main(String[] args) throws InterruptedException { ExecutorService exec = Executors.newCachedThreadPool(new DaemonThreadFactory()); for (int i = 0; i < 10; i++) exec.execute(new DaemonFromFactory()); System.out. TimeUnit(500); }", "n_tokens": 90, "n_pass": [101, 4, 4]}
{"time": "2021-02-14 15:33:26.709215", "score": "0.9999", "loss": "0.0001", "code": " void main(String[] args) throws InterruptedException { ExecutorService exec = Executors.newCachedThreadPool(new DaemonThreadFactory()); for (int i = 0; i < 10; i++) exec.execute(new DaemonFromFactory()); System.out. TimeUnit(500); }", "n_tokens": 87, "n_pass": [104, 5, 5]}
{"time": "2021-02-14 15:33:29.784754", "score": "0.9999", "loss": "0.0001", "code": " void main(String[] args)  { ExecutorService exec = Executors.newCachedThreadPool(new DaemonThreadFactory()); for (int i = 0; i < 10; i++) exec.execute(new DaemonFromFactory()); System.out. TimeUnit(500); }", "n_tokens": 84, "n_pass": [109, 6, 6]}
{"time": "2021-02-14 15:33:32.450819", "score": "0.9997", "loss": "0.0003", "code": " void main(String[] args)  { ExecutorService exec = (new DaemonThreadFactory()); for (int i = 0; i < 10; i++) exec.execute(new DaemonFromFactory()); System.out. TimeUnit(500); }", "n_tokens": 81, "n_pass": [113, 7, 7]}
{"time": "2021-02-14 15:33:35.112105", "score": "0.9998", "loss": "0.0003", "code": " void main(String[] args)  { ExecutorService exec = (new DaemonThreadFactory()); for (int i0; i < 10; i++) exec.execute(new DaemonFromFactory()); System.out. TimeUnit(500); }", "n_tokens": 78, "n_pass": [119, 8, 8]}
{"time": "2021-02-14 15:33:37.766342", "score": "0.9978", "loss": "0.0023", "code": " void main(String[] args)  { ExecutorService exec = (new DaemonThreadFactory()); for (int i0;  10; i++) exec.execute(new DaemonFromFactory()); System.out. TimeUnit(500); }", "n_tokens": 75, "n_pass": [121, 9, 9]}
{"time": "2021-02-14 15:33:40.430860", "score": "0.9975", "loss": "0.0026", "code": " void main(String[] args)  { ExecutorService exec = (new DaemonThreadFactory()); for (int i0;  10;) exec.execute(new DaemonFromFactory()); System.out. TimeUnit(500); }", "n_tokens": 71, "n_pass": [123, 10, 10]}
{"time": "2021-02-14 15:33:43.514391", "score": "0.997", "loss": "0.0031", "code": " void main(String[] args)  { ExecutorService exec = (new DaemonThreadFactory()); for (0;  10;) exec.execute(new DaemonFromFactory()); System.out. TimeUnit(500); }", "n_tokens": 68, "n_pass": [142, 11, 11]}
{"time": "2021-02-14 15:33:49.221728", "score": "0.997", "loss": "0.0031", "code": " void main(String[] args)  { ExecutorService exec = (new DaemonThreadFactory()); for (0; 0;) exec.execute(new DaemonFromFactory()); System.out. TimeUnit(500); }", "n_tokens": 66, "n_pass": [205, 12, 12]}
{"time": "2021-02-14 15:33:51.862542", "score": "0.9952", "loss": "0.0052", "code": " void main(String[] args)  { ExecutorService exec = (new DaemonThreadFactory()); for (0; 0;) execute(new DaemonFromFactory()); System.out. TimeUnit(500); }", "n_tokens": 64, "n_pass": [207, 13, 13]}
{"time": "2021-02-14 15:33:54.511528", "score": "0.9752", "loss": "0.0273", "code": " void main(String[] args)  { ExecutorService exec = (new DaemonThreadFactory()); for (0; 0;) execute(DaemonFromFactory()); System.out. TimeUnit(500); }", "n_tokens": 62, "n_pass": [209, 14, 14]}
{"time": "2021-02-14 15:33:57.189535", "score": "0.7836", "loss": "0.2489", "code": " void main(String[] args)  { ExecutorService exec = (new DaemonThreadFactory()); for (0; 0;) execute(DaemonFromFactory()); out. TimeUnit(500); }", "n_tokens": 60, "n_pass": [213, 15, 15]}
{"time": "2021-02-14 15:33:59.849965", "score": "0.8964", "loss": "0.1115", "code": " void main(String[] args)  { ExecutorService exec = (new DaemonThreadFactory()); for (0; 0;) execute(DaemonFromFactory());  TimeUnit(500); }", "n_tokens": 58, "n_pass": [214, 16, 16]}
{"time": "2021-02-14 15:34:02.487769", "score": "0.5406", "loss": "0.6178", "code": " void main(String[] args)  { ExecutorService exec = (new DaemonThreadFactory()); for (0; 0;) execute(DaemonFromFactory()); (500); }", "n_tokens": 56, "n_pass": [215, 17, 17]}
{"time": "2021-02-14 15:34:05.132823", "score": "0.5998", "loss": "0.5138", "code": " void main(String[] args)  { ExecutorService exec = (new DaemonThreadFactory()); for (0; 0;) execute(DaemonFromFactory()); (5); }", "n_tokens": 54, "n_pass": [217, 18, 18]}
{"time": "2021-02-14 15:34:07.773984", "score": "0.5998", "loss": "0.5138", "code": "void main(String[] args)  { ExecutorService exec = (new DaemonThreadFactory()); for (0; 0;) execute(DaemonFromFactory()); (5); }", "n_tokens": 53, "n_pass": [220, 19, 19]}
{"time": "2021-02-14 15:34:11.246466", "score": "0.5998", "loss": "0.5138", "code": "void main(String[]args)  { ExecutorService exec = (new DaemonThreadFactory()); for (0; 0;) execute(DaemonFromFactory()); (5); }", "n_tokens": 52, "n_pass": [228, 20, 20]}
{"time": "2021-02-14 15:34:13.886442", "score": "0.5998", "loss": "0.5138", "code": "void main(String[]args) { ExecutorService exec = (new DaemonThreadFactory()); for (0; 0;) execute(DaemonFromFactory()); (5); }", "n_tokens": 51, "n_pass": [231, 21, 21]}
{"time": "2021-02-14 15:34:16.553544", "score": "0.6256", "loss": "0.4714", "code": "void main(String[]args) { exec = (new DaemonThreadFactory()); for (0; 0;) execute(DaemonFromFactory()); (5); }", "n_tokens": 49, "n_pass": [233, 22, 22]}
{"time": "2021-02-14 15:34:19.182849", "score": "0.9028", "loss": "0.1178", "code": "void main(String[]args) { exec (new DaemonThreadFactory()); for (0; 0;) execute(DaemonFromFactory()); (5); }", "n_tokens": 47, "n_pass": [235, 23, 23]}
{"time": "2021-02-14 15:34:33.579167", "score": "0.9028", "loss": "0.1178", "code": "void main(String[]args) { exec (new DaemonThreadFactory());for (0; 0;) execute(DaemonFromFactory()); (5); }", "n_tokens": 46, "n_pass": [306, 26, 24]}
{"time": "2021-02-14 15:34:36.234465", "score": "0.9028", "loss": "0.1178", "code": "void main(String[]args) { exec (new DaemonThreadFactory());for(0; 0;) execute(DaemonFromFactory()); (5); }", "n_tokens": 45, "n_pass": [308, 27, 25]}
{"time": "2021-02-14 15:34:38.871893", "score": "0.9092", "loss": "0.1097", "code": "void main(String[]args) { exec (new DaemonThreadFactory());for(; 0;) execute(DaemonFromFactory()); (5); }", "n_tokens": 44, "n_pass": [310, 28, 26]}
{"time": "2021-02-14 15:34:41.513983", "score": "0.9092", "loss": "0.1097", "code": "void main(String[]args) { exec (new DaemonThreadFactory());for(;0;) execute(DaemonFromFactory()); (5); }", "n_tokens": 43, "n_pass": [312, 29, 27]}
{"time": "2021-02-14 15:34:44.134152", "score": "0.915", "loss": "0.1026", "code": "void main(String[]args) { exec (new DaemonThreadFactory());for(;;) execute(DaemonFromFactory()); (5); }", "n_tokens": 42, "n_pass": [313, 30, 28]}
{"time": "2021-02-14 15:34:46.787272", "score": "0.915", "loss": "0.1026", "code": "void main(String[]args) { exec (new DaemonThreadFactory());for(;;)execute(DaemonFromFactory()); (5); }", "n_tokens": 41, "n_pass": [316, 31, 29]}
{"time": "2021-02-14 15:34:49.421894", "score": "0.8123", "loss": "0.24", "code": "void main(String[]args) { exec (new DaemonThreadFactory());for(;;)(DaemonFromFactory()); (5); }", "n_tokens": 40, "n_pass": [317, 32, 30]}
{"time": "2021-02-14 15:34:52.053795", "score": "0.8123", "loss": "0.24", "code": "void main(String[]args) { exec (new DaemonThreadFactory());for(;;)(DaemonFromFactory());(5); }", "n_tokens": 39, "n_pass": [324, 33, 31]}
{"time": "2021-02-14 15:34:54.719496", "score": "0.8123", "loss": "0.24", "code": "void main(String[]args) { exec (new DaemonThreadFactory());for(;;)(DaemonFromFactory());(5);}", "n_tokens": 38, "n_pass": [329, 34, 32]}
{"time": "2021-02-14 15:34:58.197263", "score": "0.8123", "loss": "0.24", "code": "void main(String[]args){ exec (new DaemonThreadFactory());for(;;)(DaemonFromFactory());(5);}", "n_tokens": 37, "n_pass": [340, 35, 33]}
{"time": "2021-02-14 15:35:00.831089", "score": "0.8123", "loss": "0.24", "code": "void main(String[]args){exec (new DaemonThreadFactory());for(;;)(DaemonFromFactory());(5);}", "n_tokens": 36, "n_pass": [342, 36, 34]}
{"time": "2021-02-14 15:35:03.466430", "score": "0.9726", "loss": "0.0488", "code": "void main(String[]args){ (new DaemonThreadFactory());for(;;)(DaemonFromFactory());(5);}", "n_tokens": 35, "n_pass": [343, 37, 35]}
{"time": "2021-02-14 15:35:06.108916", "score": "0.9726", "loss": "0.0488", "code": "void main(String[]args){(new DaemonThreadFactory());for(;;)(DaemonFromFactory());(5);}", "n_tokens": 34, "n_pass": [344, 38, 36]}
{"time": "2021-02-14 15:35:08.742203", "score": "0.9726", "loss": "0.0488", "code": "void main(String[]args){( DaemonThreadFactory());for(;;)(DaemonFromFactory());(5);}", "n_tokens": 33, "n_pass": [346, 39, 37]}
{"time": "2021-02-14 15:35:11.377597", "score": "0.9726", "loss": "0.0488", "code": "void main(String[]args){(DaemonThreadFactory());for(;;)(DaemonFromFactory());(5);}", "n_tokens": 32, "n_pass": [347, 40, 38]}

Minimal simplified code:
void main(String[]args){(DaemonThreadFactory());for(;;)(DaemonFromFactory());(5);}

