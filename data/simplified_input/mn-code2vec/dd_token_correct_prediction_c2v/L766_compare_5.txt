
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/protyposis__MediaPlayer-Extended/MediaPlayer/src/main/java/net/protyposis/android/mediaplayer/Timeline_compare.java
method_name = compare
method_body = @Override public int compare(Cue lhs, Cue rhs) { if (lhs.getTime() == rhs.getTime()) { return 0; } else if (lhs.getTime() < rhs.getTime()) { return -1; } else { return 1; } }
predict, score, loss = compare, 0.9917474985122681, 0.008504838682711124

Trace of simplified code(s):
{"time": "2021-02-16 01:30:27.327998", "score": "0.9917", "loss": "0.0085", "code": "@Override public int compare(Cue lhs, Cue rhs) { if (lhs.getTime() == rhs.getTime()) { return 0; } else if (lhs.getTime() < rhs.getTime()) { return -1; } else { return 1; } }", "n_tokens": 91, "n_pass": [1, 1, 1]}
{"time": "2021-02-16 01:30:29.907373", "score": "0.9912", "loss": "0.0092", "code": "@Override public int compare(Cue lhs, Cue rhs) { if (lhs.getTime() == rhs.getTime()) { return 0; } else if (lhs) { return -1; } else { return 1; } }", "n_tokens": 79, "n_pass": [25, 2, 2]}
{"time": "2021-02-16 01:30:32.526725", "score": "0.9916", "loss": "0.0086", "code": "int compare(Cue lhs, Cue rhs) { if (lhs.getTime() == rhs.getTime()) { return 0; } else if (lhs) { return -1; } else { return 1; } }", "n_tokens": 74, "n_pass": [51, 3, 3]}
{"time": "2021-02-16 01:30:37.633934", "score": "0.9976", "loss": "0.0026", "code": "int compare(Cue lhs, Cue rhs) { if (lhs= rhs.getTime()) { return 0; } else if (lhs) { return -1; } else { return 1; } }", "n_tokens": 68, "n_pass": [56, 5, 4]}
{"time": "2021-02-16 01:30:42.750614", "score": "0.9985", "loss": "0.0016", "code": "int compare(Cue lhs, Cue rhs) { if (lhs.getTime()) { return 0; } else if (lhs) { return -1; } else { return 1; } }", "n_tokens": 65, "n_pass": [93, 7, 5]}
{"time": "2021-02-16 01:30:45.680965", "score": "0.9976", "loss": "0.0028", "code": "int compare(Cue lhs, Cue rhs) { if (lhs.getTime()) { return 0; } else if (lhs) { return -1; } else {1; } }", "n_tokens": 62, "n_pass": [105, 8, 6]}
{"time": "2021-02-16 01:30:48.249523", "score": "0.9977", "loss": "0.0026", "code": "int compare(Cue lhs, Cue rhs) { if (lhs.getTime()) { return 0; } else if (lhs) { return -1; } else {} }", "n_tokens": 59, "n_pass": [106, 9, 7]}
{"time": "2021-02-16 01:30:55.629264", "score": "0.9977", "loss": "0.0026", "code": "int compare(Cue lhs,Cue rhs) { if (lhs.getTime()) { return 0; } else if (lhs) { return -1; } else {} }", "n_tokens": 58, "n_pass": [180, 10, 8]}
{"time": "2021-02-16 01:30:58.224741", "score": "0.9977", "loss": "0.0026", "code": "int compare(Cue lhs,Cue rhs){ if (lhs.getTime()) { return 0; } else if (lhs) { return -1; } else {} }", "n_tokens": 57, "n_pass": [185, 11, 9]}
{"time": "2021-02-16 01:31:00.869696", "score": "0.9977", "loss": "0.0026", "code": "int compare(Cue lhs,Cue rhs){if (lhs.getTime()) { return 0; } else if (lhs) { return -1; } else {} }", "n_tokens": 56, "n_pass": [187, 12, 10]}
{"time": "2021-02-16 01:31:03.486410", "score": "0.9977", "loss": "0.0026", "code": "int compare(Cue lhs,Cue rhs){if(lhs.getTime()) { return 0; } else if (lhs) { return -1; } else {} }", "n_tokens": 55, "n_pass": [189, 13, 11]}
{"time": "2021-02-16 01:31:06.098398", "score": "0.9902", "loss": "0.0116", "code": "int compare(Cue lhs,Cue rhs){if(lhsgetTime()) { return 0; } else if (lhs) { return -1; } else {} }", "n_tokens": 54, "n_pass": [192, 14, 12]}
{"time": "2021-02-16 01:31:08.729111", "score": "0.9769", "loss": "0.0261", "code": "int compare(Cue lhs,Cue rhs){if(lhs()) { return 0; } else if (lhs) { return -1; } else {} }", "n_tokens": 53, "n_pass": [193, 15, 13]}
{"time": "2021-02-16 01:31:16.586098", "score": "0.9009", "loss": "0.1162", "code": "int compare(Cue lhs,Cue rhs){if(lhs()) { return 0; } if (lhs) { return -1; } else {} }", "n_tokens": 51, "n_pass": [202, 18, 14]}
{"time": "2021-02-16 01:31:22.149043", "score": "0.9009", "loss": "0.1162", "code": "int compare(Cue lhs,Cue rhs){if(lhs()) { return 0; } if (lhs) { return -1; } {} }", "n_tokens": 49, "n_pass": [211, 20, 15]}
{"time": "2021-02-16 01:31:24.861343", "score": "0.9009", "loss": "0.1162", "code": "int compare(Cue lhs,Cue rhs){if(lhs()) { return 0; } if (lhs) { return -1; }  }", "n_tokens": 47, "n_pass": [212, 21, 16]}
{"time": "2021-02-16 01:31:28.214716", "score": "0.7556", "loss": "0.2994", "code": "int compare(Cue lhs,Cue rhs){if(lhs()) { 0; } if (lhs) { return -1; }  }", "n_tokens": 45, "n_pass": [234, 22, 17]}
{"time": "2021-02-16 01:31:30.782808", "score": "0.7701", "loss": "0.2793", "code": "int compare(Cue lhs,Cue rhs){if(lhs()) {; } if (lhs) { return -1; }  }", "n_tokens": 43, "n_pass": [235, 23, 18]}
{"time": "2021-02-16 01:31:33.777531", "score": "0.7701", "loss": "0.2793", "code": "int compare(Cue lhs,Cue rhs){if(lhs()) {} if (lhs) { return -1; }  }", "n_tokens": 41, "n_pass": [236, 24, 19]}
{"time": "2021-02-16 01:31:43.745202", "score": "0.7701", "loss": "0.2793", "code": "int compare(Cue lhs,Cue rhs){if(lhs()) {} if (lhs){ return -1; }  }", "n_tokens": 40, "n_pass": [290, 26, 20]}
{"time": "2021-02-16 01:31:46.348083", "score": "0.7701", "loss": "0.2793", "code": "int compare(Cue lhs,Cue rhs){if(lhs()) {} if (lhs){return -1; }  }", "n_tokens": 39, "n_pass": [292, 27, 21]}
{"time": "2021-02-16 01:31:49.585921", "score": "0.7701", "loss": "0.2793", "code": "int compare(Cue lhs,Cue rhs){if(lhs()) {} if (lhs){return-1; }  }", "n_tokens": 38, "n_pass": [294, 28, 22]}
{"time": "2021-02-16 01:31:54.932250", "score": "0.7701", "loss": "0.2793", "code": "int compare(Cue lhs,Cue rhs){if(lhs()) {} if (lhs){return-1;}  }", "n_tokens": 37, "n_pass": [298, 30, 23]}
{"time": "2021-02-16 01:31:57.479690", "score": "0.7701", "loss": "0.2793", "code": "int compare(Cue lhs,Cue rhs){if(lhs()) {} if (lhs){return-1;} }", "n_tokens": 36, "n_pass": [300, 31, 24]}
{"time": "2021-02-16 01:32:00.026656", "score": "0.7701", "loss": "0.2793", "code": "int compare(Cue lhs,Cue rhs){if(lhs()) {} if (lhs){return-1;}}", "n_tokens": 35, "n_pass": [301, 32, 25]}
{"time": "2021-02-16 01:32:03.328922", "score": "0.7701", "loss": "0.2793", "code": "int compare(Cue lhs,Cue rhs){if(lhs()){} if (lhs){return-1;}}", "n_tokens": 34, "n_pass": [322, 33, 26]}
{"time": "2021-02-16 01:32:05.969325", "score": "0.7701", "loss": "0.2793", "code": "int compare(Cue lhs,Cue rhs){if(lhs()){}if (lhs){return-1;}}", "n_tokens": 33, "n_pass": [325, 34, 27]}
{"time": "2021-02-16 01:32:08.587407", "score": "0.7701", "loss": "0.2793", "code": "int compare(Cue lhs,Cue rhs){if(lhs()){}if(lhs){return-1;}}", "n_tokens": 32, "n_pass": [327, 35, 28]}

Minimal simplified code:
int compare(Cue lhs,Cue rhs){if(lhs()){}if(lhs){return-1;}}

