
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/sakaiproject__sakai/providers/sample/src/java/org/sakaiproject/provider/user/SampleCandidateDetailProvider_init.java
method_name = init
method_body = public void init() { Objects.requireNonNull(siteService, "SiteService must be set"); Objects.requireNonNull(toolManager, "ToolManager must be set"); Objects.requireNonNull(serverConfigurationService, "ServerConfigurationService must be set"); log.info("init()"); }
predict, score, loss = init, 0.8170663714408875, 0.43597617745399475

Trace of simplified code(s):
{"time": "2021-02-15 03:37:35.091753", "score": "0.8171", "loss": "0.436", "code": "public void init() { Objects.requireNonNull(siteService, \"SiteService must be set\"); Objects.requireNonNull(toolManager, \"ToolManager must be set\"); Objects.requireNonNull(serverConfigurationService, \"ServerConfigurationService must be set\"); log.info(\"init()\"); }", "n_tokens": 80, "n_pass": [1, 1, 1]}
{"time": "2021-02-15 03:37:37.730391", "score": "0.9561", "loss": "0.1181", "code": "public void init() { Objects.requireNonNull(siteService, \"SiteService  be set\"); Objects.requireNonNull(serverConfigurationService, \"ServerConfigurationService must be set\"); log.info(\"init()\"); }", "n_tokens": 60, "n_pass": [9, 2, 2]}
{"time": "2021-02-15 03:37:40.370658", "score": "0.9686", "loss": "0.072", "code": "public void init() { Objects.requireNonNull(siteService, \"SiteService be set\"); log.info(\"init()\"); }", "n_tokens": 40, "n_pass": [10, 3, 3]}
{"time": "2021-02-15 03:37:42.982491", "score": "0.9686", "loss": "0.072", "code": "public void init() { Objects.requireNonNull(siteService, \"SiteServiceset\"); log.info(\"init()\"); }", "n_tokens": 37, "n_pass": [52, 4, 4]}
{"time": "2021-02-15 03:37:45.598541", "score": "0.3321", "loss": "3.3323", "code": "public void init() { Objects.requireNonNull(siteService, \"SiteServiceset\").info(\"init()\"); }", "n_tokens": 34, "n_pass": [54, 5, 5]}
{"time": "2021-02-15 03:37:48.203850", "score": "0.3321", "loss": "3.3323", "code": "void init() { Objects.requireNonNull(siteService, \"SiteServiceset\").info(\"init()\"); }", "n_tokens": 32, "n_pass": [59, 6, 6]}
{"time": "2021-02-15 03:37:51.208514", "score": "0.941", "loss": "0.09", "code": "void init() { requireNonNull(siteService, \"SiteServiceset\").info(\"init()\"); }", "n_tokens": 30, "n_pass": [64, 7, 7]}
{"time": "2021-02-15 03:37:53.838769", "score": "0.763", "loss": "0.2783", "code": "void init() { requireNonNull( \"SiteServiceset\").info(\"init()\"); }", "n_tokens": 28, "n_pass": [66, 8, 8]}
{"time": "2021-02-15 03:37:58.261354", "score": "0.763", "loss": "0.2783", "code": "void init() { requireNonNull(\"SiteServiceset\").info(\"init()\"); }", "n_tokens": 27, "n_pass": [100, 9, 9]}
{"time": "2021-02-15 03:38:00.872712", "score": "0.987", "loss": "0.0135", "code": "void init() { requireNonNull(\"set\").info(\"init()\"); }", "n_tokens": 26, "n_pass": [102, 10, 10]}
{"time": "2021-02-15 03:38:03.447192", "score": "0.989", "loss": "0.0123", "code": "void init() { requireNonNull(\"\").info(\"init()\"); }", "n_tokens": 25, "n_pass": [103, 11, 11]}
{"time": "2021-02-15 03:38:09.388202", "score": "0.989", "loss": "0.0123", "code": "void init(){ requireNonNull(\"\").info(\"init()\"); }", "n_tokens": 24, "n_pass": [117, 13, 12]}
{"time": "2021-02-15 03:38:11.962262", "score": "0.989", "loss": "0.0123", "code": "void init(){requireNonNull(\"\").info(\"init()\"); }", "n_tokens": 23, "n_pass": [119, 14, 13]}
{"time": "2021-02-15 03:38:14.546087", "score": "0.9972", "loss": "0.0031", "code": "void init(){(\"\").info(\"init()\"); }", "n_tokens": 22, "n_pass": [120, 15, 14]}
{"time": "2021-02-15 03:38:23.897360", "score": "0.9972", "loss": "0.0031", "code": "void init(){(\"\").info(\"init)\"); }", "n_tokens": 21, "n_pass": [154, 18, 15]}
{"time": "2021-02-15 03:38:26.478812", "score": "0.9972", "loss": "0.0031", "code": "void init(){(\"\").info(\"init\"); }", "n_tokens": 20, "n_pass": [155, 19, 16]}
{"time": "2021-02-15 03:38:29.076073", "score": "0.9972", "loss": "0.0031", "code": "void init(){(\"\").info(\"init\");}", "n_tokens": 19, "n_pass": [159, 20, 17]}

Minimal simplified code:
void init(){("").info("init");}

