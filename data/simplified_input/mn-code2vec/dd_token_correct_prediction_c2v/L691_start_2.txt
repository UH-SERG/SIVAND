
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/codefollower__Tomcat-Research/java/org/apache/catalina/tribes/group/GroupChannel_start.java
method_name = start
method_body = @Override public synchronized void start(int svc) throws ChannelException { setupDefaultStack(); if (optionCheck) checkOptionFlags(); super.start(svc); if (hbthread == null && heartbeat) { hbthread = new HeartbeatThread(this, heartbeatSleeptime); hbthread.start(); } }
predict, score, loss = start, 0.7990849018096924, 0.30121326446533203

Trace of simplified code(s):
{"time": "2021-02-15 03:04:11.491731", "score": "0.7991", "loss": "0.3012", "code": "@Override public synchronized void start(int svc) throws ChannelException { setupDefaultStack(); if (optionCheck) checkOptionFlags(); super.start(svc); if (hbthread == null && heartbeat) { hbthread = new HeartbeatThread(this, heartbeatSleeptime); hbthread.start(); } }", "n_tokens": 89, "n_pass": [1, 1, 1]}
{"time": "2021-02-15 03:04:14.145117", "score": "0.4813", "loss": "0.9276", "code": "@Override public synchronized void start(int svc) throws ChannelException { ; if (hbthread == null && heartbeat) { hbthread = new HeartbeatThread(this, heartbeatSleeptime); hbthread.start(); } }", "n_tokens": 67, "n_pass": [9, 2, 2]}
{"time": "2021-02-15 03:04:19.491399", "score": "0.8243", "loss": "0.2443", "code": "@Override public synchronized void start(int svc) throws ChannelException { ; if (hbthread ==heartbeat) { hbthread = new HeartbeatThread(this, heartbeatSleeptime); hbthread.start(); } }", "n_tokens": 61, "n_pass": [38, 4, 3]}
{"time": "2021-02-15 03:04:24.801905", "score": "0.8072", "loss": "0.2391", "code": "synchronized void start(int svc) throws ChannelException { ; if (hbthread ==heartbeat) { hbthread = new HeartbeatThread(this, heartbeatSleeptime); hbthread.start(); } }", "n_tokens": 56, "n_pass": [44, 6, 4]}
{"time": "2021-02-15 03:04:33.104623", "score": "0.8072", "loss": "0.2391", "code": "void start(int svc) throws ChannelException { ; if (hbthread ==heartbeat) { hbthread = new HeartbeatThread(this, heartbeatSleeptime); hbthread.start(); } }", "n_tokens": 54, "n_pass": [75, 9, 5]}
{"time": "2021-02-15 03:04:38.826264", "score": "0.8801", "loss": "0.1415", "code": "void start(int svc) throws ChannelException { ; if (hbthreadheartbeat) { hbthread = new HeartbeatThread(this, heartbeatSleeptime); hbthread.start(); } }", "n_tokens": 51, "n_pass": [84, 11, 6]}
{"time": "2021-02-15 03:04:41.460648", "score": "0.9946", "loss": "0.0059", "code": "void start(int svc) throws ChannelException { ; if (hbthreadheartbeat) { hbthread = new HeartbeatThread(this, heartbeatSleeptime).start(); } }", "n_tokens": 48, "n_pass": [91, 12, 7]}
{"time": "2021-02-15 03:04:44.498883", "score": "0.8884", "loss": "0.3073", "code": "void start(int svc)  { ; if (hbthreadheartbeat) { hbthread = new HeartbeatThread(this, heartbeatSleeptime).start(); } }", "n_tokens": 45, "n_pass": [99, 13, 8]}
{"time": "2021-02-15 03:04:50.436703", "score": "0.8884", "loss": "0.3073", "code": "void start(int svc) { ; if (hbthreadheartbeat) { hbthread = new HeartbeatThread(this, heartbeatSleeptime).start(); } }", "n_tokens": 44, "n_pass": [148, 14, 9]}
{"time": "2021-02-15 03:04:53.068065", "score": "0.8884", "loss": "0.3073", "code": "void start(int svc){ ; if (hbthreadheartbeat) { hbthread = new HeartbeatThread(this, heartbeatSleeptime).start(); } }", "n_tokens": 43, "n_pass": [149, 15, 10]}
{"time": "2021-02-15 03:04:55.709785", "score": "0.8884", "loss": "0.3073", "code": "void start(int svc){; if (hbthreadheartbeat) { hbthread = new HeartbeatThread(this, heartbeatSleeptime).start(); } }", "n_tokens": 42, "n_pass": [151, 16, 11]}
{"time": "2021-02-15 03:04:58.354143", "score": "0.8884", "loss": "0.3073", "code": "void start(int svc){ if (hbthreadheartbeat) { hbthread = new HeartbeatThread(this, heartbeatSleeptime).start(); } }", "n_tokens": 41, "n_pass": [152, 17, 12]}
{"time": "2021-02-15 03:05:00.991801", "score": "0.8884", "loss": "0.3073", "code": "void start(int svc){if (hbthreadheartbeat) { hbthread = new HeartbeatThread(this, heartbeatSleeptime).start(); } }", "n_tokens": 40, "n_pass": [153, 18, 13]}
{"time": "2021-02-15 03:05:03.631131", "score": "0.8884", "loss": "0.3073", "code": "void start(int svc){if(hbthreadheartbeat) { hbthread = new HeartbeatThread(this, heartbeatSleeptime).start(); } }", "n_tokens": 39, "n_pass": [155, 19, 14]}
{"time": "2021-02-15 03:05:08.937023", "score": "0.9054", "loss": "0.1609", "code": "void start(int svc){if(hbthread) { hbthread = new HeartbeatThread(this, heartbeatSleeptime).start(); } }", "n_tokens": 38, "n_pass": [158, 21, 15]}
{"time": "2021-02-15 03:05:14.306672", "score": "0.8651", "loss": "0.1888", "code": "void start(int svc){if(hbthread) { hbthread = new HeartbeatThread( heartbeatSleeptime).start(); } }", "n_tokens": 36, "n_pass": [165, 23, 16]}
{"time": "2021-02-15 03:05:16.959289", "score": "0.7825", "loss": "0.3265", "code": "void start(int svc){if(hbthread) { hbthread = new HeartbeatThread().start(); } }", "n_tokens": 34, "n_pass": [166, 24, 17]}
{"time": "2021-02-15 03:05:20.399933", "score": "0.2884", "loss": "1.9471", "code": "void start(int svc){if(hbthread) { hbthread = HeartbeatThread().start(); } }", "n_tokens": 32, "n_pass": [188, 25, 18]}
{"time": "2021-02-15 03:05:26.422484", "score": "0.2884", "loss": "1.9471", "code": "void start(int svc){if(hbthread) { hbthread = HeartbeatThread().start();} }", "n_tokens": 31, "n_pass": [236, 26, 19]}
{"time": "2021-02-15 03:05:29.041541", "score": "0.2884", "loss": "1.9471", "code": "void start(int svc){if(hbthread) { hbthread = HeartbeatThread().start();}}", "n_tokens": 30, "n_pass": [237, 27, 20]}
{"time": "2021-02-15 03:05:32.511043", "score": "0.2884", "loss": "1.9471", "code": "void start(int svc){if(hbthread){ hbthread = HeartbeatThread().start();}}", "n_tokens": 29, "n_pass": [252, 28, 21]}
{"time": "2021-02-15 03:05:35.213191", "score": "0.2884", "loss": "1.9471", "code": "void start(int svc){if(hbthread){hbthread = HeartbeatThread().start();}}", "n_tokens": 28, "n_pass": [254, 29, 22]}
{"time": "2021-02-15 03:05:37.897458", "score": "0.2884", "loss": "1.9471", "code": "void start(int svc){if(hbthread){hbthread= HeartbeatThread().start();}}", "n_tokens": 27, "n_pass": [256, 30, 23]}
{"time": "2021-02-15 03:05:40.565405", "score": "0.2884", "loss": "1.9471", "code": "void start(int svc){if(hbthread){hbthread=HeartbeatThread().start();}}", "n_tokens": 26, "n_pass": [258, 31, 24]}
{"time": "2021-02-15 03:05:43.955992", "score": "0.69", "loss": "0.6375", "code": "void start(int svc){if(hbthread){hbthreadHeartbeatThread().start();}}", "n_tokens": 25, "n_pass": [284, 32, 25]}
{"time": "2021-02-15 03:05:46.582386", "score": "0.5059", "loss": "0.7794", "code": "void start(int svc){if(hbthread){hbthread().start();}}", "n_tokens": 24, "n_pass": [285, 33, 26]}

Minimal simplified code:
void start(int svc){if(hbthread){hbthread().start();}}

