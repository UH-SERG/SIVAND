
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/OpenRock__OpenAM/openam-federation/openam-federation-library/src/main/java/com/sun/identity/federation/message/FSAssertion_addStatement.java
method_name = addStatement
method_body = public boolean addStatement(Statement statement) { boolean addedStmt = false; if (statement != null) { super.addStatement(statement); addedStmt = true; } return addedStmt; }

topk path-contexts:
[0.0952] statement,(VariableDeclaratorId0)^(Parameter)^(MethodDeclaration)_(BlockStmt)_(IfStmt)_(BlockStmt)_(ExpressionStmt)_(MethodCallExpr0)_(NameExpr3),addstatement
[0.0923] statement,(ClassOrInterfaceType1)^(Parameter)^(MethodDeclaration)_(BlockStmt)_(IfStmt)_(BlockStmt)_(ExpressionStmt)_(MethodCallExpr0)_(NameExpr3),addstatement
[0.0857] statement,(VariableDeclaratorId0)^(Parameter)^(MethodDeclaration)_(BlockStmt)_(ReturnStmt)_(NameExpr0),addedstmt
[0.0518] super,(SuperExpr0)^(MethodCallExpr)_(NameExpr2),statement
[0.0494] statement,(ClassOrInterfaceType1)^(Parameter)^(MethodDeclaration)_(BlockStmt)_(ReturnStmt)_(NameExpr0),addedstmt
[0.0409] statement,(VariableDeclaratorId0)^(Parameter)^(MethodDeclaration)_(BlockStmt)_(IfStmt)_(BlockStmt)_(ExpressionStmt)_(AssignExpr:assign0)_(NameExpr0),addedstmt
[0.0384] boolean,(PrimitiveType0)^(MethodDeclaration)_(Parameter)_(VariableDeclaratorId0),statement
[0.0383] statement,(VariableDeclaratorId0)^(Parameter)^(MethodDeclaration)_(BlockStmt)_(ExpressionStmt)_(VariableDeclarationExpr)_(VariableDeclarator)_(BooleanLiteralExpr1),false
[0.0379] statement,(ClassOrInterfaceType1)^(Parameter)^(MethodDeclaration)_(BlockStmt)_(IfStmt)_(BlockStmt)_(ExpressionStmt)_(AssignExpr:assign0)_(NameExpr0),addedstmt
[0.0356] statement,(NameExpr2)^(MethodCallExpr)^(ExpressionStmt)^(BlockStmt)^(IfStmt)^(BlockStmt)_(ReturnStmt)_(NameExpr0),addedstmt
[0.0351] boolean,(PrimitiveType0)^(MethodDeclaration)_(Parameter)_(ClassOrInterfaceType1),statement
[0.0325] statement,(NameExpr2)^(MethodCallExpr)_(NameExpr3),addstatement
[0.0274] statement,(NameExpr0)^(BinaryExpr:notEquals)^(IfStmt)^(BlockStmt)_(ReturnStmt)_(NameExpr0),addedstmt
[0.0258] addstatement,(NameExpr3)^(MethodCallExpr)^(ExpressionStmt)^(BlockStmt)^(IfStmt)^(BlockStmt)_(ReturnStmt)_(NameExpr0),addedstmt
[0.0233] statement,(ClassOrInterfaceType1)^(Parameter)^(MethodDeclaration)_(BlockStmt)_(IfStmt)_(BlockStmt)_(ExpressionStmt)_(AssignExpr:assign0)_(BooleanLiteralExpr1),true
[0.0216] statement,(VariableDeclaratorId0)^(Parameter)^(MethodDeclaration)_(BlockStmt)_(ExpressionStmt)_(VariableDeclarationExpr)_(VariableDeclarator)_(VariableDeclaratorId0),addedstmt
[0.0212] statement,(NameExpr0)^(BinaryExpr:notEquals)^(IfStmt)_(BlockStmt)_(ExpressionStmt)_(MethodCallExpr0)_(NameExpr3),addstatement
[0.0207] statement,(ClassOrInterfaceType1)^(Parameter)^(MethodDeclaration)_(BlockStmt)_(ExpressionStmt)_(VariableDeclarationExpr)_(VariableDeclarator)_(BooleanLiteralExpr1),false
[0.0193] statement,(ClassOrInterfaceType1)^(Parameter)^(MethodDeclaration)_(BlockStmt)_(ExpressionStmt)_(VariableDeclarationExpr)_(VariableDeclarator)_(VariableDeclaratorId0),addedstmt
[0.0175] statement,(VariableDeclaratorId0)^(Parameter)^(MethodDeclaration)_(BlockStmt)_(IfStmt)_(BlockStmt)_(ExpressionStmt)_(MethodCallExpr0)_(NameExpr2),statement
[0.0170] statement,(ClassOrInterfaceType1)^(Parameter)^(MethodDeclaration)_(BlockStmt)_(IfStmt)_(BlockStmt)_(ExpressionStmt)_(MethodCallExpr0)_(NameExpr2),statement
[0.0148] METHOD_NAME,(NameExpr1)^(MethodDeclaration)_(BlockStmt)_(ReturnStmt)_(NameExpr0),addedstmt
[0.0124] addstatement,(NameExpr3)^(MethodCallExpr)^(ExpressionStmt)^(BlockStmt)_(ExpressionStmt)_(AssignExpr:assign0)_(NameExpr0),addedstmt
[0.0124] METHOD_NAME,(NameExpr1)^(MethodDeclaration)_(BlockStmt)_(IfStmt)_(BlockStmt)_(ExpressionStmt)_(MethodCallExpr0)_(NameExpr3),addstatement
[0.0119] boolean,(PrimitiveType0)^(MethodDeclaration)_(NameExpr1),METHOD_NAME
[0.0112] statement,(VariableDeclaratorId0)^(Parameter)^(MethodDeclaration)_(BlockStmt)_(IfStmt)_(BinaryExpr:notEquals)_(NameExpr0),statement
[0.0107] boolean,(PrimitiveType0)^(VariableDeclarationExpr)^(ExpressionStmt)^(BlockStmt)_(ReturnStmt)_(NameExpr0),addedstmt
[0.0106] statement,(ClassOrInterfaceType1)^(Parameter)^(MethodDeclaration)_(BlockStmt)_(IfStmt)_(BinaryExpr:notEquals)_(NameExpr0),statement
[0.0102] statement,(NameExpr2)^(MethodCallExpr)^(ExpressionStmt)^(BlockStmt)_(ExpressionStmt)_(AssignExpr:assign0)_(NameExpr0),addedstmt
[0.0094] statement,(NameExpr0)^(BinaryExpr:notEquals)^(IfStmt)_(BlockStmt)_(ExpressionStmt)_(AssignExpr:assign0)_(NameExpr0),addedstmt
[0.0084] statement,(VariableDeclaratorId0)^(Parameter)_(ClassOrInterfaceType1),statement
[0.0081] statement,(VariableDeclaratorId0)^(Parameter)^(MethodDeclaration)_(BlockStmt)_(IfStmt)_(BlockStmt)_(ExpressionStmt)_(AssignExpr:assign0)_(BooleanLiteralExpr1),true
[0.0079] super,(SuperExpr0)^(MethodCallExpr)^(ExpressionStmt)^(BlockStmt)^(IfStmt)^(BlockStmt)_(ReturnStmt)_(NameExpr0),addedstmt
[0.0072] statement,(NameExpr0)^(BinaryExpr:notEquals)^(IfStmt)_(BlockStmt)_(ExpressionStmt)_(MethodCallExpr0)_(NameExpr2),statement
[0.0066] null,(NullLiteralExpr1)^(BinaryExpr:notEquals)^(IfStmt)_(BlockStmt)_(ExpressionStmt)_(MethodCallExpr0)_(NameExpr3),addstatement
[0.0052] addedstmt,(NameExpr0)^(AssignExpr:assign)_(BooleanLiteralExpr1),true
[0.0037] true,(BooleanLiteralExpr1)^(AssignExpr:assign)^(ExpressionStmt)^(BlockStmt)^(IfStmt)^(BlockStmt)_(ReturnStmt)_(NameExpr0),addedstmt
[0.0032] false,(BooleanLiteralExpr1)^(VariableDeclarator)^(VariableDeclarationExpr)^(ExpressionStmt)^(BlockStmt)_(ReturnStmt)_(NameExpr0),addedstmt
[0.0029] METHOD_NAME,(NameExpr1)^(MethodDeclaration)_(BlockStmt)_(IfStmt)_(BlockStmt)_(ExpressionStmt)_(AssignExpr:assign0)_(NameExpr0),addedstmt
[0.0026] METHOD_NAME,(NameExpr1)^(MethodDeclaration)_(BlockStmt)_(IfStmt)_(BlockStmt)_(ExpressionStmt)_(MethodCallExpr0)_(NameExpr2),statement
[0.0025] METHOD_NAME,(NameExpr1)^(MethodDeclaration)_(Parameter)_(ClassOrInterfaceType1),statement
[0.0020] null,(NullLiteralExpr1)^(BinaryExpr:notEquals)^(IfStmt)_(BlockStmt)_(ExpressionStmt)_(MethodCallExpr0)_(NameExpr2),statement
[0.0017] addedstmt,(NameExpr0)^(AssignExpr:assign)^(ExpressionStmt)^(BlockStmt)^(IfStmt)^(BlockStmt)_(ReturnStmt)_(NameExpr0),addedstmt
[0.0015] METHOD_NAME,(NameExpr1)^(MethodDeclaration)_(BlockStmt)_(IfStmt)_(BinaryExpr:notEquals)_(NameExpr0),statement
[0.0012] null,(NullLiteralExpr1)^(BinaryExpr:notEquals)^(IfStmt)^(BlockStmt)_(ReturnStmt)_(NameExpr0),addedstmt
[0.0007] statement,(NameExpr0)^(BinaryExpr:notEquals)^(IfStmt)_(BlockStmt)_(ExpressionStmt)_(MethodCallExpr0)_(SuperExpr0),super
[0.0007] boolean,(PrimitiveType0)^(VariableDeclarationExpr)^(ExpressionStmt)^(BlockStmt)_(IfStmt)_(BlockStmt)_(ExpressionStmt)_(MethodCallExpr0)_(SuperExpr0),super
[0.0005] statement,(ClassOrInterfaceType1)^(Parameter)^(MethodDeclaration)_(BlockStmt)_(IfStmt)_(BlockStmt)_(ExpressionStmt)_(MethodCallExpr0)_(SuperExpr0),super
[0.0004] boolean,(PrimitiveType0)^(VariableDeclarationExpr)^(ExpressionStmt)^(BlockStmt)_(IfStmt)_(BlockStmt)_(ExpressionStmt)_(MethodCallExpr0)_(NameExpr3),addstatement
[0.0002] METHOD_NAME,(NameExpr1)^(MethodDeclaration)_(Parameter)_(VariableDeclaratorId0),statement
[0.0002] METHOD_NAME,(NameExpr1)^(MethodDeclaration)_(BlockStmt)_(IfStmt)_(BlockStmt)_(ExpressionStmt)_(MethodCallExpr0)_(SuperExpr0),super
[0.0002] METHOD_NAME,(NameExpr1)^(MethodDeclaration)_(BlockStmt)_(IfStmt)_(BinaryExpr:notEquals)_(NullLiteralExpr1),null
[0.0002] false,(BooleanLiteralExpr1)^(VariableDeclarator)^(VariableDeclarationExpr)^(ExpressionStmt)^(BlockStmt)_(IfStmt)_(BinaryExpr:notEquals)_(NameExpr0),statement
[0.0001] null,(NullLiteralExpr1)^(BinaryExpr:notEquals)^(IfStmt)_(BlockStmt)_(ExpressionStmt)_(MethodCallExpr0)_(SuperExpr0),super
[0.0001] statement,(NameExpr2)^(MethodCallExpr)^(ExpressionStmt)^(BlockStmt)_(ExpressionStmt)_(AssignExpr:assign0)_(BooleanLiteralExpr1),true
[0.0001] statement,(VariableDeclaratorId0)^(Parameter)^(MethodDeclaration)_(BlockStmt)_(IfStmt)_(BlockStmt)_(ExpressionStmt)_(MethodCallExpr0)_(SuperExpr0),super
[0.0001] statement,(ClassOrInterfaceType1)^(Parameter)^(MethodDeclaration)_(BlockStmt)_(IfStmt)_(BinaryExpr:notEquals)_(NullLiteralExpr1),null
[0.0001] super,(SuperExpr0)^(MethodCallExpr)^(ExpressionStmt)^(BlockStmt)_(ExpressionStmt)_(AssignExpr:assign0)_(BooleanLiteralExpr1),true
[0.0001] METHOD_NAME,(NameExpr1)^(MethodDeclaration)_(BlockStmt)_(IfStmt)_(BlockStmt)_(ExpressionStmt)_(AssignExpr:assign0)_(BooleanLiteralExpr1),true
[0.0001] statement,(NameExpr0)^(BinaryExpr:notEquals)^(IfStmt)_(BlockStmt)_(ExpressionStmt)_(AssignExpr:assign0)_(BooleanLiteralExpr1),true
[0.0001] boolean,(PrimitiveType0)^(VariableDeclarationExpr)^(ExpressionStmt)^(BlockStmt)_(IfStmt)_(BlockStmt)_(ExpressionStmt)_(MethodCallExpr0)_(NameExpr2),statement
[0.0001] addstatement,(NameExpr3)^(MethodCallExpr)^(ExpressionStmt)^(BlockStmt)_(ExpressionStmt)_(AssignExpr:assign0)_(BooleanLiteralExpr1),true
[0.0001] boolean,(PrimitiveType0)^(VariableDeclarationExpr)^(ExpressionStmt)^(BlockStmt)_(IfStmt)_(BinaryExpr:notEquals)_(NameExpr0),statement
[0.0001] boolean,(PrimitiveType0)^(VariableDeclarationExpr)^(ExpressionStmt)^(BlockStmt)_(IfStmt)_(BinaryExpr:notEquals)_(NullLiteralExpr1),null
[0.0001] boolean,(PrimitiveType0)^(VariableDeclarationExpr)_(VariableDeclarator)_(BooleanLiteralExpr1),false
[0.0001] METHOD_NAME,(NameExpr1)^(MethodDeclaration)_(BlockStmt)_(ExpressionStmt)_(VariableDeclarationExpr)_(VariableDeclarator)_(BooleanLiteralExpr1),false
[0.0001] boolean,(PrimitiveType0)^(VariableDeclarationExpr)^(ExpressionStmt)^(BlockStmt)_(IfStmt)_(BlockStmt)_(ExpressionStmt)_(AssignExpr:assign0)_(BooleanLiteralExpr1),true
[0.0001] false,(BooleanLiteralExpr1)^(VariableDeclarator)^(VariableDeclarationExpr)^(ExpressionStmt)^(BlockStmt)_(IfStmt)_(BinaryExpr:notEquals)_(NullLiteralExpr1),null
[0.0001] null,(NullLiteralExpr1)^(BinaryExpr:notEquals)^(IfStmt)_(BlockStmt)_(ExpressionStmt)_(AssignExpr:assign0)_(BooleanLiteralExpr1),true
[0.0000] statement,(VariableDeclaratorId0)^(Parameter)^(MethodDeclaration)_(BlockStmt)_(IfStmt)_(BinaryExpr:notEquals)_(NullLiteralExpr1),null
[0.0000] boolean,(PrimitiveType0)^(VariableDeclarationExpr)^(ExpressionStmt)^(BlockStmt)_(IfStmt)_(BlockStmt)_(ExpressionStmt)_(AssignExpr:assign0)_(NameExpr0),addedstmt
[0.0000] METHOD_NAME,(NameExpr1)^(MethodDeclaration)_(BlockStmt)_(ExpressionStmt)_(VariableDeclarationExpr)_(PrimitiveType0),boolean
[0.0000] statement,(NameExpr0)^(BinaryExpr:notEquals)_(NullLiteralExpr1),null
[0.0000] statement,(ClassOrInterfaceType1)^(Parameter)^(MethodDeclaration)_(BlockStmt)_(ExpressionStmt)_(VariableDeclarationExpr)_(PrimitiveType0),boolean
[0.0000] boolean,(PrimitiveType0)^(VariableDeclarationExpr)_(VariableDeclarator)_(VariableDeclaratorId0),addedstmt
[0.0000] statement,(VariableDeclaratorId0)^(Parameter)^(MethodDeclaration)_(BlockStmt)_(ExpressionStmt)_(VariableDeclarationExpr)_(PrimitiveType0),boolean
[0.0000] super,(SuperExpr0)^(MethodCallExpr)^(ExpressionStmt)^(BlockStmt)_(ExpressionStmt)_(AssignExpr:assign0)_(NameExpr0),addedstmt
[0.0000] METHOD_NAME,(NameExpr1)^(MethodDeclaration)_(BlockStmt)_(ExpressionStmt)_(VariableDeclarationExpr)_(VariableDeclarator)_(VariableDeclaratorId0),addedstmt
[0.0000] addedstmt,(VariableDeclaratorId0)^(VariableDeclarator)^(VariableDeclarationExpr)^(ExpressionStmt)^(BlockStmt)_(ReturnStmt)_(NameExpr0),addedstmt
[0.0000] addedstmt,(VariableDeclaratorId0)^(VariableDeclarator)_(BooleanLiteralExpr1),false
[0.0000] addedstmt,(VariableDeclaratorId0)^(VariableDeclarator)^(VariableDeclarationExpr)^(ExpressionStmt)^(BlockStmt)_(IfStmt)_(BinaryExpr:notEquals)_(NameExpr0),statement
[0.0000] null,(NullLiteralExpr1)^(BinaryExpr:notEquals)^(IfStmt)_(BlockStmt)_(ExpressionStmt)_(AssignExpr:assign0)_(NameExpr0),addedstmt
[0.0000] addedstmt,(VariableDeclaratorId0)^(VariableDeclarator)^(VariableDeclarationExpr)^(ExpressionStmt)^(BlockStmt)_(IfStmt)_(BinaryExpr:notEquals)_(NullLiteralExpr1),null

topk terminals:
[['statement', 'addstatement'], ['statement', 'addstatement'], ['statement', 'addedstmt'], ['super', 'statement'], ['statement', 'addedstmt'], ['statement', 'addedstmt'], ['boolean', 'statement'], ['statement', 'false'], ['statement', 'addedstmt'], ['statement', 'addedstmt'], ['boolean', 'statement'], ['statement', 'addstatement'], ['statement', 'addedstmt'], ['addstatement', 'addedstmt'], ['statement', 'true'], ['statement', 'addedstmt'], ['statement', 'addstatement'], ['statement', 'false'], ['statement', 'addedstmt'], ['statement', 'statement'], ['statement', 'statement'], ['METHOD_NAME', 'addedstmt'], ['addstatement', 'addedstmt'], ['METHOD_NAME', 'addstatement'], ['boolean', 'METHOD_NAME'], ['statement', 'statement'], ['boolean', 'addedstmt'], ['statement', 'statement'], ['statement', 'addedstmt'], ['statement', 'addedstmt'], ['statement', 'statement'], ['statement', 'true'], ['super', 'addedstmt'], ['statement', 'statement'], ['null', 'addstatement'], ['addedstmt', 'true'], ['true', 'addedstmt'], ['false', 'addedstmt'], ['METHOD_NAME', 'addedstmt'], ['METHOD_NAME', 'statement'], ['METHOD_NAME', 'statement'], ['null', 'statement'], ['addedstmt', 'addedstmt'], ['METHOD_NAME', 'statement'], ['null', 'addedstmt'], ['statement', 'super'], ['boolean', 'super'], ['statement', 'super'], ['boolean', 'addstatement'], ['METHOD_NAME', 'statement'], ['METHOD_NAME', 'super'], ['METHOD_NAME', 'null'], ['false', 'statement'], ['null', 'super'], ['statement', 'true'], ['statement', 'super'], ['statement', 'null'], ['super', 'true'], ['METHOD_NAME', 'true'], ['statement', 'true'], ['boolean', 'statement'], ['addstatement', 'true'], ['boolean', 'statement'], ['boolean', 'null'], ['boolean', 'false'], ['METHOD_NAME', 'false'], ['boolean', 'true'], ['false', 'null'], ['null', 'true'], ['statement', 'null'], ['boolean', 'addedstmt'], ['METHOD_NAME', 'boolean'], ['statement', 'null'], ['statement', 'boolean'], ['boolean', 'addedstmt'], ['statement', 'boolean'], ['super', 'addedstmt'], ['METHOD_NAME', 'addedstmt'], ['addedstmt', 'addedstmt'], ['addedstmt', 'false'], ['addedstmt', 'statement'], ['null', 'addedstmt'], ['addedstmt', 'null']]

