
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/jmockit__jmockit1/main/src/com/sun/tools/attach/VirtualMachineDescriptor_toString.java
method_name = toString
method_body = public String toString() { String s = provider.toString() + ": " + id; if (displayName != id) { s += " " + displayName; } return s; }

topk path-contexts:
[0.1069] string,(ClassOrInterfaceType0)^(MethodDeclaration)_(BlockStmt)_(ExpressionStmt)_(VariableDeclarationExpr)_(VariableDeclarator)_(BinaryExpr:plus)_(NameExpr1),id
[0.0877] _,(StringLiteralExpr0)^(BinaryExpr:plus1)^(AssignExpr:plus)^(ExpressionStmt)^(BlockStmt)^(IfStmt)^(BlockStmt)_(ReturnStmt)_(NameExpr0),s
[0.0825] string,(ClassOrInterfaceType0)^(MethodDeclaration)_(BlockStmt)_(IfStmt)_(BinaryExpr:notEquals)_(NameExpr0),displayname
[0.0776] :_,(StringLiteralExpr1)^(BinaryExpr:plus)^(BinaryExpr:plus)^(VariableDeclarator)^(VariableDeclarationExpr)^(ExpressionStmt)^(BlockStmt)_(ReturnStmt)_(NameExpr0),s
[0.0716] displayname,(NameExpr1)^(BinaryExpr:plus1)^(AssignExpr:plus)^(ExpressionStmt)^(BlockStmt)^(IfStmt)^(BlockStmt)_(ReturnStmt)_(NameExpr0),s
[0.0541] METHOD_NAME,(NameExpr1)^(MethodDeclaration)_(BlockStmt)_(ExpressionStmt)_(VariableDeclarationExpr)_(VariableDeclarator)_(BinaryExpr:plus)_(BinaryExpr:plus)_(StringLiteralExpr1),:_
[0.0449] id,(NameExpr1)^(BinaryExpr:plus)^(VariableDeclarator)^(VariableDeclarationExpr)^(ExpressionStmt)^(BlockStmt)_(ReturnStmt)_(NameExpr0),s
[0.0400] string,(ClassOrInterfaceType0)^(MethodDeclaration)_(BlockStmt)_(IfStmt)_(BinaryExpr:notEquals)_(NameExpr1),id
[0.0355] string,(ClassOrInterfaceType0)^(MethodDeclaration)_(BlockStmt)_(IfStmt)_(BlockStmt)_(ExpressionStmt)_(AssignExpr:plus0)_(NameExpr0),s
[0.0331] displayname,(NameExpr0)^(BinaryExpr:notEquals)^(IfStmt)^(BlockStmt)_(ReturnStmt)_(NameExpr0),s
[0.0315] string,(ClassOrInterfaceType0)^(MethodDeclaration)_(BlockStmt)_(IfStmt)_(BlockStmt)_(ExpressionStmt)_(AssignExpr:plus0)_(BinaryExpr:plus)_(StringLiteralExpr0),_
[0.0310] METHOD_NAME,(NameExpr1)^(MethodDeclaration)_(BlockStmt)_(ReturnStmt)_(NameExpr0),s
[0.0280] string,(ClassOrInterfaceType0)^(MethodDeclaration)_(BlockStmt)_(ExpressionStmt)_(VariableDeclarationExpr)_(VariableDeclarator)_(BinaryExpr:plus)_(BinaryExpr:plus)_(StringLiteralExpr1),:_
[0.0241] string,(ClassOrInterfaceType0)^(MethodDeclaration)_(BlockStmt)_(IfStmt)_(BlockStmt)_(ExpressionStmt)_(AssignExpr:plus0)_(BinaryExpr:plus)_(NameExpr1),displayname
[0.0234] string,(ClassOrInterfaceType0)^(VariableDeclarationExpr)^(ExpressionStmt)^(BlockStmt)_(ReturnStmt)_(NameExpr0),s
[0.0229] id,(NameExpr1)^(BinaryExpr:notEquals)^(IfStmt)^(BlockStmt)_(ReturnStmt)_(NameExpr0),s
[0.0227] s,(NameExpr0)^(AssignExpr:plus)^(ExpressionStmt)^(BlockStmt)^(IfStmt)^(BlockStmt)_(ReturnStmt)_(NameExpr0),s
[0.0218] string,(ClassOrInterfaceType0)^(MethodDeclaration)_(BlockStmt)_(ReturnStmt)_(NameExpr0),s
[0.0169] string,(ClassOrInterfaceType0)^(MethodDeclaration)_(NameExpr1),METHOD_NAME
[0.0163] tostring,(NameExpr2)^(MethodCallExpr)^(BinaryExpr:plus)_(StringLiteralExpr1),:_
[0.0133] provider,(NameExpr0)^(MethodCallExpr)_(NameExpr2),tostring
[0.0116] provider,(NameExpr0)^(MethodCallExpr)^(BinaryExpr:plus)_(StringLiteralExpr1),:_
[0.0102] tostring,(NameExpr2)^(MethodCallExpr)^(BinaryExpr:plus)^(BinaryExpr:plus)_(NameExpr1),id
[0.0101] string,(ClassOrInterfaceType0)^(MethodDeclaration)_(BlockStmt)_(ExpressionStmt)_(VariableDeclarationExpr)_(VariableDeclarator)_(VariableDeclaratorId0),s
[0.0089] s,(VariableDeclaratorId0)^(VariableDeclarator)_(BinaryExpr:plus)_(BinaryExpr:plus)_(StringLiteralExpr1),:_
[0.0072] displayname,(NameExpr0)^(BinaryExpr:notEquals)^(IfStmt)_(BlockStmt)_(ExpressionStmt)_(AssignExpr:plus0)_(BinaryExpr:plus)_(StringLiteralExpr0),_
[0.0059] string,(ClassOrInterfaceType0)^(MethodDeclaration)_(BlockStmt)_(ExpressionStmt)_(VariableDeclarationExpr)_(ClassOrInterfaceType0),string
[0.0055] id,(NameExpr1)^(BinaryExpr:plus)^(VariableDeclarator)^(VariableDeclarationExpr)^(ExpressionStmt)^(BlockStmt)_(IfStmt)_(BinaryExpr:notEquals)_(NameExpr1),id
[0.0053] METHOD_NAME,(NameExpr1)^(MethodDeclaration)_(BlockStmt)_(IfStmt)_(BinaryExpr:notEquals)_(NameExpr0),displayname
[0.0053] string,(ClassOrInterfaceType0)^(VariableDeclarationExpr)_(VariableDeclarator)_(BinaryExpr:plus)_(BinaryExpr:plus)_(StringLiteralExpr1),:_
[0.0052] id,(NameExpr1)^(BinaryExpr:plus)^(VariableDeclarator)^(VariableDeclarationExpr)^(ExpressionStmt)^(BlockStmt)_(IfStmt)_(BinaryExpr:notEquals)_(NameExpr0),displayname
[0.0041] _,(StringLiteralExpr0)^(BinaryExpr:plus1)_(NameExpr1),displayname
[0.0039] id,(NameExpr1)^(BinaryExpr:notEquals)^(IfStmt)_(BlockStmt)_(ExpressionStmt)_(AssignExpr:plus0)_(BinaryExpr:plus)_(NameExpr1),displayname
[0.0038] provider,(NameExpr0)^(MethodCallExpr)^(BinaryExpr:plus)^(BinaryExpr:plus)_(NameExpr1),id
[0.0033] displayname,(NameExpr0)^(BinaryExpr:notEquals)^(IfStmt)_(BlockStmt)_(ExpressionStmt)_(AssignExpr:plus0)_(BinaryExpr:plus)_(NameExpr1),displayname
[0.0032] METHOD_NAME,(NameExpr1)^(MethodDeclaration)_(BlockStmt)_(IfStmt)_(BinaryExpr:notEquals)_(NameExpr1),id
[0.0028] METHOD_NAME,(NameExpr1)^(MethodDeclaration)_(BlockStmt)_(IfStmt)_(BlockStmt)_(ExpressionStmt)_(AssignExpr:plus0)_(NameExpr0),s
[0.0023] displayname,(NameExpr0)^(BinaryExpr:notEquals)^(IfStmt)_(BlockStmt)_(ExpressionStmt)_(AssignExpr:plus0)_(NameExpr0),s
[0.0020] METHOD_NAME,(NameExpr1)^(MethodDeclaration)_(BlockStmt)_(IfStmt)_(BlockStmt)_(ExpressionStmt)_(AssignExpr:plus0)_(BinaryExpr:plus)_(NameExpr1),displayname
[0.0019] METHOD_NAME,(NameExpr1)^(MethodDeclaration)_(BlockStmt)_(IfStmt)_(BlockStmt)_(ExpressionStmt)_(AssignExpr:plus0)_(BinaryExpr:plus)_(StringLiteralExpr0),_
[0.0017] displayname,(NameExpr0)^(BinaryExpr:notEquals)_(NameExpr1),id
[0.0017] id,(NameExpr1)^(BinaryExpr:notEquals)^(IfStmt)_(BlockStmt)_(ExpressionStmt)_(AssignExpr:plus0)_(NameExpr0),s
[0.0014] s,(VariableDeclaratorId0)^(VariableDeclarator)_(BinaryExpr:plus)_(BinaryExpr:plus)_(MethodCallExpr0)_(NameExpr2),tostring
[0.0012] s,(NameExpr0)^(AssignExpr:plus)_(BinaryExpr:plus)_(StringLiteralExpr0),_
[0.0012] s,(NameExpr0)^(AssignExpr:plus)_(BinaryExpr:plus)_(NameExpr1),displayname
[0.0010] s,(VariableDeclaratorId0)^(VariableDeclarator)_(BinaryExpr:plus)_(BinaryExpr:plus)_(MethodCallExpr0)_(NameExpr0),provider
[0.0007] string,(ClassOrInterfaceType0)^(VariableDeclarationExpr)^(ExpressionStmt)^(BlockStmt)_(IfStmt)_(BlockStmt)_(ExpressionStmt)_(AssignExpr:plus0)_(NameExpr0),s
[0.0006] id,(NameExpr1)^(BinaryExpr:notEquals)^(IfStmt)_(BlockStmt)_(ExpressionStmt)_(AssignExpr:plus0)_(BinaryExpr:plus)_(StringLiteralExpr0),_
[0.0004] string,(ClassOrInterfaceType0)^(VariableDeclarationExpr)_(VariableDeclarator)_(BinaryExpr:plus)_(BinaryExpr:plus)_(MethodCallExpr0)_(NameExpr2),tostring
[0.0004] string,(ClassOrInterfaceType0)^(VariableDeclarationExpr)_(VariableDeclarator)_(BinaryExpr:plus)_(BinaryExpr:plus)_(MethodCallExpr0)_(NameExpr0),provider
[0.0004] METHOD_NAME,(NameExpr1)^(MethodDeclaration)_(BlockStmt)_(ExpressionStmt)_(VariableDeclarationExpr)_(VariableDeclarator)_(BinaryExpr:plus)_(NameExpr1),id
[0.0002] s,(VariableDeclaratorId0)^(VariableDeclarator)_(BinaryExpr:plus)_(NameExpr1),id
[0.0001] string,(ClassOrInterfaceType0)^(VariableDeclarationExpr)_(VariableDeclarator)_(BinaryExpr:plus)_(NameExpr1),id
[0.0001] string,(ClassOrInterfaceType0)^(VariableDeclarationExpr)^(ExpressionStmt)^(BlockStmt)_(IfStmt)_(BinaryExpr:notEquals)_(NameExpr1),id
[0.0001] :_,(StringLiteralExpr1)^(BinaryExpr:plus)^(BinaryExpr:plus)_(NameExpr1),id
[0.0001] s,(VariableDeclaratorId0)^(VariableDeclarator)^(VariableDeclarationExpr)^(ExpressionStmt)^(BlockStmt)_(IfStmt)_(BinaryExpr:notEquals)_(NameExpr1),id
[0.0001] METHOD_NAME,(NameExpr1)^(MethodDeclaration)_(BlockStmt)_(ExpressionStmt)_(VariableDeclarationExpr)_(ClassOrInterfaceType0),string
[0.0000] METHOD_NAME,(NameExpr1)^(MethodDeclaration)_(BlockStmt)_(ExpressionStmt)_(VariableDeclarationExpr)_(VariableDeclarator)_(VariableDeclaratorId0),s
[0.0000] s,(VariableDeclaratorId0)^(VariableDeclarator)^(VariableDeclarationExpr)^(ExpressionStmt)^(BlockStmt)_(IfStmt)_(BinaryExpr:notEquals)_(NameExpr0),displayname
[0.0000] string,(ClassOrInterfaceType0)^(VariableDeclarationExpr)^(ExpressionStmt)^(BlockStmt)_(IfStmt)_(BinaryExpr:notEquals)_(NameExpr0),displayname
[0.0000] s,(VariableDeclaratorId0)^(VariableDeclarator)^(VariableDeclarationExpr)^(ExpressionStmt)^(BlockStmt)_(ReturnStmt)_(NameExpr0),s
[0.0000] string,(ClassOrInterfaceType0)^(VariableDeclarationExpr)_(VariableDeclarator)_(VariableDeclaratorId0),s

topk terminals:
[['string', 'id'], ['_', 's'], ['string', 'displayname'], [':_', 's'], ['displayname', 's'], ['METHOD_NAME', ':_'], ['id', 's'], ['string', 'id'], ['string', 's'], ['displayname', 's'], ['string', '_'], ['METHOD_NAME', 's'], ['string', ':_'], ['string', 'displayname'], ['string', 's'], ['id', 's'], ['s', 's'], ['string', 's'], ['string', 'METHOD_NAME'], ['tostring', ':_'], ['provider', 'tostring'], ['provider', ':_'], ['tostring', 'id'], ['string', 's'], ['s', ':_'], ['displayname', '_'], ['string', 'string'], ['id', 'id'], ['METHOD_NAME', 'displayname'], ['string', ':_'], ['id', 'displayname'], ['_', 'displayname'], ['id', 'displayname'], ['provider', 'id'], ['displayname', 'displayname'], ['METHOD_NAME', 'id'], ['METHOD_NAME', 's'], ['displayname', 's'], ['METHOD_NAME', 'displayname'], ['METHOD_NAME', '_'], ['displayname', 'id'], ['id', 's'], ['s', 'tostring'], ['s', '_'], ['s', 'displayname'], ['s', 'provider'], ['string', 's'], ['id', '_'], ['string', 'tostring'], ['string', 'provider'], ['METHOD_NAME', 'id'], ['s', 'id'], ['string', 'id'], ['string', 'id'], [':_', 'id'], ['s', 'id'], ['METHOD_NAME', 'string'], ['METHOD_NAME', 's'], ['s', 'displayname'], ['string', 'displayname'], ['s', 's'], ['string', 's']]

