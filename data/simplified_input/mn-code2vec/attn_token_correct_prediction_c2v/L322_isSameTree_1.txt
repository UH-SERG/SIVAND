
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/fishercoder1534__Leetcode/src/main/java/com/fishercoder/solutions/_572_isSameTree.java
method_name = isSameTree
method_body = private boolean isSameTree(TreeNode p, TreeNode q) { if (p == null || q == null) { return p == q; } return p.val == q.val && isSameTree(p.left, q.left) && isSameTree(p.right, q.right); }

topk path-contexts:
[0.1263] treenode,(ClassOrInterfaceType1)^(Parameter)^(MethodDeclaration)_(BlockStmt)_(ReturnStmt)_(BinaryExpr:and)_(BinaryExpr:and)_(MethodCallExpr1)_(NameExpr3),issametree
[0.1263] treenode,(ClassOrInterfaceType1)^(Parameter)^(MethodDeclaration)_(BlockStmt)_(ReturnStmt)_(BinaryExpr:and)_(BinaryExpr:and)_(MethodCallExpr1)_(NameExpr3),issametree
[0.1229] treenode,(ClassOrInterfaceType1)^(Parameter)^(MethodDeclaration)_(BlockStmt)_(ReturnStmt)_(BinaryExpr:and)_(MethodCallExpr1)_(NameExpr3),issametree
[0.1229] treenode,(ClassOrInterfaceType1)^(Parameter)^(MethodDeclaration)_(BlockStmt)_(ReturnStmt)_(BinaryExpr:and)_(MethodCallExpr1)_(NameExpr3),issametree
[0.0726] q,(VariableDeclaratorId0)^(Parameter)^(MethodDeclaration)_(BlockStmt)_(ReturnStmt)_(BinaryExpr:and)_(MethodCallExpr1)_(NameExpr3),issametree
[0.0574] right,(NameExpr2)^(FieldAccessExpr1)^(MethodCallExpr)_(NameExpr3),issametree
[0.0445] left,(NameExpr2)^(FieldAccessExpr1)^(MethodCallExpr)^(BinaryExpr:and)^(BinaryExpr:and)_(MethodCallExpr1)_(NameExpr3),issametree
[0.0389] p,(VariableDeclaratorId0)^(Parameter)^(MethodDeclaration)_(BlockStmt)_(ReturnStmt)_(BinaryExpr:and)_(MethodCallExpr1)_(NameExpr3),issametree
[0.0303] q,(VariableDeclaratorId0)^(Parameter)^(MethodDeclaration)_(BlockStmt)_(ReturnStmt)_(BinaryExpr:and)_(BinaryExpr:and)_(MethodCallExpr1)_(NameExpr3),issametree
[0.0299] p,(NameExpr0)^(FieldAccessExpr1)^(MethodCallExpr)^(BinaryExpr:and)^(BinaryExpr:and)_(MethodCallExpr1)_(NameExpr3),issametree
[0.0232] null,(NullLiteralExpr1)^(BinaryExpr:equals)^(BinaryExpr:or)^(IfStmt)^(BlockStmt)_(ReturnStmt)_(BinaryExpr:and)_(MethodCallExpr1)_(NameExpr3),issametree
[0.0232] null,(NullLiteralExpr1)^(BinaryExpr:equals)^(BinaryExpr:or)^(IfStmt)^(BlockStmt)_(ReturnStmt)_(BinaryExpr:and)_(MethodCallExpr1)_(NameExpr3),issametree
[0.0192] q,(NameExpr0)^(FieldAccessExpr)^(BinaryExpr:equals)^(BinaryExpr:and)^(BinaryExpr:and)_(MethodCallExpr1)_(NameExpr3),issametree
[0.0169] q,(NameExpr0)^(FieldAccessExpr2)^(MethodCallExpr)^(BinaryExpr:and)^(BinaryExpr:and)_(MethodCallExpr1)_(NameExpr3),issametree
[0.0161] p,(VariableDeclaratorId0)^(Parameter)^(MethodDeclaration)_(BlockStmt)_(ReturnStmt)_(BinaryExpr:and)_(BinaryExpr:and)_(MethodCallExpr1)_(NameExpr3),issametree
[0.0145] q,(NameExpr0)^(FieldAccessExpr)^(BinaryExpr:equals)^(BinaryExpr:and)_(MethodCallExpr1)_(NameExpr3),issametree
[0.0127] left,(NameExpr2)^(FieldAccessExpr1)^(MethodCallExpr)_(NameExpr3),issametree
[0.0117] val,(NameExpr2)^(FieldAccessExpr)^(BinaryExpr:equals)^(BinaryExpr:and)^(BinaryExpr:and)_(MethodCallExpr1)_(NameExpr3),issametree
[0.0117] val,(NameExpr2)^(FieldAccessExpr)^(BinaryExpr:equals)^(BinaryExpr:and)^(BinaryExpr:and)_(MethodCallExpr1)_(NameExpr3),issametree
[0.0093] q,(NameExpr0)^(BinaryExpr:equals)^(BinaryExpr:or)^(IfStmt)^(BlockStmt)_(ReturnStmt)_(BinaryExpr:and)_(MethodCallExpr1)_(NameExpr3),issametree
[0.0091] p,(NameExpr0)^(FieldAccessExpr)^(BinaryExpr:equals)^(BinaryExpr:and)^(BinaryExpr:and)_(MethodCallExpr1)_(NameExpr3),issametree
[0.0078] p,(NameExpr0)^(FieldAccessExpr)^(BinaryExpr:equals)^(BinaryExpr:and)_(MethodCallExpr1)_(NameExpr3),issametree
[0.0065] p,(NameExpr0)^(BinaryExpr:equals)^(BinaryExpr:or)^(IfStmt)^(BlockStmt)_(ReturnStmt)_(BinaryExpr:and)_(MethodCallExpr1)_(NameExpr3),issametree
[0.0056] right,(NameExpr2)^(FieldAccessExpr2)^(MethodCallExpr)_(NameExpr3),issametree
[0.0037] boolean,(PrimitiveType0)^(MethodDeclaration)_(Parameter)_(ClassOrInterfaceType1),treenode
[0.0035] left,(NameExpr2)^(FieldAccessExpr2)^(MethodCallExpr)^(BinaryExpr:and)^(BinaryExpr:and)_(MethodCallExpr1)_(NameExpr3),issametree
[0.0033] null,(NullLiteralExpr1)^(BinaryExpr:equals)^(BinaryExpr:or)^(IfStmt)_(BlockStmt)_(ReturnStmt)_(BinaryExpr:equals)_(NameExpr1),q
[0.0033] null,(NullLiteralExpr1)^(BinaryExpr:equals)^(BinaryExpr:or)^(IfStmt)_(BlockStmt)_(ReturnStmt)_(BinaryExpr:equals)_(NameExpr1),q
[0.0026] left,(NameExpr2)^(FieldAccessExpr2)^(MethodCallExpr)_(NameExpr3),issametree
[0.0020] issametree,(NameExpr3)^(MethodCallExpr)^(BinaryExpr:and)^(BinaryExpr:and)_(MethodCallExpr1)_(FieldAccessExpr2)_(NameExpr0),q
[0.0016] q,(VariableDeclaratorId0)^(Parameter)^(MethodDeclaration)_(BlockStmt)_(IfStmt)_(BlockStmt)_(ReturnStmt)_(BinaryExpr:equals)_(NameExpr1),q
[0.0015] treenode,(ClassOrInterfaceType1)^(Parameter)^(MethodDeclaration)_(Parameter)_(ClassOrInterfaceType1),treenode
[0.0012] q,(NameExpr0)^(BinaryExpr:equals)^(BinaryExpr:or)^(IfStmt)_(BlockStmt)_(ReturnStmt)_(BinaryExpr:equals)_(NameExpr1),q
[0.0010] treenode,(ClassOrInterfaceType1)^(Parameter)^(MethodDeclaration)_(BlockStmt)_(IfStmt)_(BlockStmt)_(ReturnStmt)_(BinaryExpr:equals)_(NameExpr1),q
[0.0010] treenode,(ClassOrInterfaceType1)^(Parameter)^(MethodDeclaration)_(BlockStmt)_(IfStmt)_(BlockStmt)_(ReturnStmt)_(BinaryExpr:equals)_(NameExpr1),q
[0.0010] treenode,(ClassOrInterfaceType1)^(Parameter)^(MethodDeclaration)_(BlockStmt)_(ReturnStmt)_(BinaryExpr:and)_(MethodCallExpr1)_(FieldAccessExpr2)_(NameExpr2),right
[0.0010] treenode,(ClassOrInterfaceType1)^(Parameter)^(MethodDeclaration)_(BlockStmt)_(ReturnStmt)_(BinaryExpr:and)_(MethodCallExpr1)_(FieldAccessExpr2)_(NameExpr2),right
[0.0009] val,(NameExpr2)^(FieldAccessExpr)^(BinaryExpr:equals)^(BinaryExpr:and)_(MethodCallExpr1)_(NameExpr3),issametree
[0.0009] val,(NameExpr2)^(FieldAccessExpr)^(BinaryExpr:equals)^(BinaryExpr:and)_(MethodCallExpr1)_(NameExpr3),issametree
[0.0008] treenode,(ClassOrInterfaceType1)^(Parameter)^(MethodDeclaration)_(BlockStmt)_(IfStmt)_(BlockStmt)_(ReturnStmt)_(BinaryExpr:equals)_(NameExpr0),p
[0.0008] treenode,(ClassOrInterfaceType1)^(Parameter)^(MethodDeclaration)_(BlockStmt)_(IfStmt)_(BlockStmt)_(ReturnStmt)_(BinaryExpr:equals)_(NameExpr0),p
[0.0006] p,(NameExpr0)^(BinaryExpr:equals)^(BinaryExpr:or)^(IfStmt)_(BlockStmt)_(ReturnStmt)_(BinaryExpr:equals)_(NameExpr1),q
[0.0005] issametree,(NameExpr3)^(MethodCallExpr)^(BinaryExpr:and)^(BinaryExpr:and)_(MethodCallExpr1)_(FieldAccessExpr1)_(NameExpr2),right
[0.0005] p,(VariableDeclaratorId0)^(Parameter)^(MethodDeclaration)_(BlockStmt)_(IfStmt)_(BlockStmt)_(ReturnStmt)_(BinaryExpr:equals)_(NameExpr1),q
[0.0004] q,(VariableDeclaratorId0)^(Parameter)^(MethodDeclaration)_(BlockStmt)_(ReturnStmt)_(BinaryExpr:and)_(MethodCallExpr1)_(FieldAccessExpr2)_(NameExpr0),q
[0.0004] issametree,(NameExpr3)^(MethodCallExpr)^(BinaryExpr:and)^(BinaryExpr:and)_(MethodCallExpr1)_(NameExpr3),issametree
[0.0004] p,(VariableDeclaratorId0)^(Parameter)^(MethodDeclaration)_(Parameter)_(ClassOrInterfaceType1),treenode
[0.0004] null,(NullLiteralExpr1)^(BinaryExpr:equals)^(BinaryExpr:or)^(IfStmt)_(BlockStmt)_(ReturnStmt)_(BinaryExpr:equals)_(NameExpr0),p
[0.0004] null,(NullLiteralExpr1)^(BinaryExpr:equals)^(BinaryExpr:or)^(IfStmt)_(BlockStmt)_(ReturnStmt)_(BinaryExpr:equals)_(NameExpr0),p
[0.0004] q,(VariableDeclaratorId0)^(Parameter)^(MethodDeclaration)_(BlockStmt)_(IfStmt)_(BlockStmt)_(ReturnStmt)_(BinaryExpr:equals)_(NameExpr0),p
[0.0003] p,(NameExpr0)^(FieldAccessExpr1)^(MethodCallExpr)_(NameExpr3),issametree
[0.0003] p,(NameExpr0)^(FieldAccessExpr1)^(MethodCallExpr)_(NameExpr3),issametree
[0.0003] boolean,(PrimitiveType0)^(MethodDeclaration)_(Parameter)_(VariableDeclaratorId0),p
[0.0003] boolean,(PrimitiveType0)^(MethodDeclaration)_(NameExpr1),METHOD_NAME
[0.0003] q,(VariableDeclaratorId0)^(Parameter)^(MethodDeclaration)_(BlockStmt)_(ReturnStmt)_(BinaryExpr:and)_(MethodCallExpr1)_(FieldAccessExpr2)_(NameExpr2),right
[0.0003] treenode,(ClassOrInterfaceType1)^(Parameter)^(MethodDeclaration)_(Parameter)_(VariableDeclaratorId0),q
[0.0003] treenode,(ClassOrInterfaceType1)^(Parameter)^(MethodDeclaration)_(BlockStmt)_(ReturnStmt)_(BinaryExpr:and)_(MethodCallExpr1)_(FieldAccessExpr2)_(NameExpr0),q
[0.0003] treenode,(ClassOrInterfaceType1)^(Parameter)^(MethodDeclaration)_(BlockStmt)_(ReturnStmt)_(BinaryExpr:and)_(MethodCallExpr1)_(FieldAccessExpr2)_(NameExpr0),q
[0.0002] treenode,(ClassOrInterfaceType1)^(Parameter)^(MethodDeclaration)_(BlockStmt)_(ReturnStmt)_(BinaryExpr:and)_(MethodCallExpr1)_(FieldAccessExpr1)_(NameExpr2),right
[0.0002] treenode,(ClassOrInterfaceType1)^(Parameter)^(MethodDeclaration)_(BlockStmt)_(ReturnStmt)_(BinaryExpr:and)_(MethodCallExpr1)_(FieldAccessExpr1)_(NameExpr2),right
[0.0002] issametree,(NameExpr3)^(MethodCallExpr)^(BinaryExpr:and)^(BinaryExpr:and)_(MethodCallExpr1)_(FieldAccessExpr1)_(NameExpr0),p
[0.0002] q,(VariableDeclaratorId0)^(Parameter)_(ClassOrInterfaceType1),treenode
[0.0002] p,(VariableDeclaratorId0)^(Parameter)^(MethodDeclaration)_(Parameter)_(VariableDeclaratorId0),q
[0.0002] p,(VariableDeclaratorId0)^(Parameter)^(MethodDeclaration)_(BlockStmt)_(IfStmt)_(BlockStmt)_(ReturnStmt)_(BinaryExpr:equals)_(NameExpr0),p
[0.0002] q,(NameExpr0)^(FieldAccessExpr)^(BinaryExpr:equals)^(BinaryExpr:and)_(MethodCallExpr1)_(FieldAccessExpr2)_(NameExpr2),left
[0.0002] left,(NameExpr2)^(FieldAccessExpr2)^(MethodCallExpr)^(BinaryExpr:and)^(BinaryExpr:and)_(MethodCallExpr1)_(FieldAccessExpr2)_(NameExpr0),q
[0.0001] p,(VariableDeclaratorId0)^(Parameter)^(MethodDeclaration)_(BlockStmt)_(ReturnStmt)_(BinaryExpr:and)_(MethodCallExpr1)_(FieldAccessExpr2)_(NameExpr2),right
[0.0001] p,(VariableDeclaratorId0)^(Parameter)^(MethodDeclaration)_(BlockStmt)_(ReturnStmt)_(BinaryExpr:and)_(MethodCallExpr1)_(FieldAccessExpr2)_(NameExpr0),q
[0.0001] p,(NameExpr0)^(FieldAccessExpr1)_(NameExpr2),left
[0.0001] p,(VariableDeclaratorId0)^(Parameter)_(ClassOrInterfaceType1),treenode
[0.0001] METHOD_NAME,(NameExpr1)^(MethodDeclaration)_(Parameter)_(ClassOrInterfaceType1),treenode
[0.0001] METHOD_NAME,(NameExpr1)^(MethodDeclaration)_(Parameter)_(ClassOrInterfaceType1),treenode
[0.0001] p,(NameExpr0)^(FieldAccessExpr1)_(NameExpr2),right
[0.0001] q,(NameExpr0)^(FieldAccessExpr2)^(MethodCallExpr)^(BinaryExpr:and)^(BinaryExpr:and)_(MethodCallExpr1)_(FieldAccessExpr2)_(NameExpr0),q
[0.0001] q,(NameExpr0)^(FieldAccessExpr2)_(NameExpr2),left
[0.0001] q,(NameExpr0)^(BinaryExpr:equals)^(BinaryExpr:or)^(IfStmt)_(BlockStmt)_(ReturnStmt)_(BinaryExpr:equals)_(NameExpr0),p
[0.0001] q,(NameExpr0)^(FieldAccessExpr)^(BinaryExpr:equals)^(BinaryExpr:and)_(MethodCallExpr1)_(FieldAccessExpr2)_(NameExpr0),q
[0.0001] q,(VariableDeclaratorId0)^(Parameter)^(MethodDeclaration)_(BlockStmt)_(ReturnStmt)_(BinaryExpr:and)_(MethodCallExpr1)_(FieldAccessExpr1)_(NameExpr2),right
[0.0001] q,(NameExpr0)^(FieldAccessExpr2)_(NameExpr2),right
[0.0001] p,(NameExpr0)^(FieldAccessExpr)^(BinaryExpr:equals)^(BinaryExpr:and)_(MethodCallExpr1)_(FieldAccessExpr2)_(NameExpr2),left
[0.0001] q,(VariableDeclaratorId0)^(Parameter)^(MethodDeclaration)_(BlockStmt)_(IfStmt)_(BinaryExpr:or)_(BinaryExpr:equals)_(NameExpr0),q
[0.0000] right,(NameExpr2)^(FieldAccessExpr1)^(MethodCallExpr)_(FieldAccessExpr2)_(NameExpr2),right
[0.0000] q,(NameExpr0)^(FieldAccessExpr)^(BinaryExpr:equals)^(BinaryExpr:and)_(MethodCallExpr1)_(FieldAccessExpr1)_(NameExpr0),p
[0.0000] left,(NameExpr2)^(FieldAccessExpr1)^(MethodCallExpr)_(FieldAccessExpr2)_(NameExpr2),left
[0.0000] p,(VariableDeclaratorId0)^(Parameter)^(MethodDeclaration)_(BlockStmt)_(ReturnStmt)_(BinaryExpr:and)_(MethodCallExpr1)_(FieldAccessExpr1)_(NameExpr2),right
[0.0000] p,(NameExpr0)^(FieldAccessExpr)^(BinaryExpr:equals)^(BinaryExpr:and)_(MethodCallExpr1)_(FieldAccessExpr2)_(NameExpr0),q
[0.0000] q,(NameExpr0)^(FieldAccessExpr2)^(MethodCallExpr)^(BinaryExpr:and)^(BinaryExpr:and)_(MethodCallExpr1)_(FieldAccessExpr1)_(NameExpr0),p
[0.0000] p,(NameExpr0)^(BinaryExpr:equals)^(BinaryExpr:or)^(IfStmt)_(BlockStmt)_(ReturnStmt)_(BinaryExpr:equals)_(NameExpr0),p
[0.0000] q,(NameExpr0)^(FieldAccessExpr2)^(MethodCallExpr)_(NameExpr3),issametree
[0.0000] q,(NameExpr0)^(FieldAccessExpr2)^(MethodCallExpr)_(NameExpr3),issametree
[0.0000] p,(VariableDeclaratorId0)^(Parameter)^(MethodDeclaration)_(BlockStmt)_(IfStmt)_(BinaryExpr:or)_(BinaryExpr:equals)_(NameExpr0),q
[0.0000] treenode,(ClassOrInterfaceType1)^(Parameter)^(MethodDeclaration)_(BlockStmt)_(IfStmt)_(BinaryExpr:or)_(BinaryExpr:equals)_(NullLiteralExpr1),null
[0.0000] treenode,(ClassOrInterfaceType1)^(Parameter)^(MethodDeclaration)_(BlockStmt)_(IfStmt)_(BinaryExpr:or)_(BinaryExpr:equals)_(NullLiteralExpr1),null
[0.0000] treenode,(ClassOrInterfaceType1)^(Parameter)^(MethodDeclaration)_(BlockStmt)_(IfStmt)_(BinaryExpr:or)_(BinaryExpr:equals)_(NullLiteralExpr1),null
[0.0000] treenode,(ClassOrInterfaceType1)^(Parameter)^(MethodDeclaration)_(BlockStmt)_(IfStmt)_(BinaryExpr:or)_(BinaryExpr:equals)_(NullLiteralExpr1),null
[0.0000] p,(NameExpr0)^(FieldAccessExpr1)^(MethodCallExpr)^(BinaryExpr:and)^(BinaryExpr:and)_(MethodCallExpr1)_(FieldAccessExpr2)_(NameExpr0),q
[0.0000] val,(NameExpr2)^(FieldAccessExpr)^(BinaryExpr:equals)^(BinaryExpr:and)_(MethodCallExpr1)_(FieldAccessExpr1)_(NameExpr0),p
[0.0000] val,(NameExpr2)^(FieldAccessExpr)^(BinaryExpr:equals)^(BinaryExpr:and)_(MethodCallExpr1)_(FieldAccessExpr1)_(NameExpr0),p
[0.0000] left,(NameExpr2)^(FieldAccessExpr1)^(MethodCallExpr)^(BinaryExpr:and)^(BinaryExpr:and)_(MethodCallExpr1)_(FieldAccessExpr1)_(NameExpr2),right
[0.0000] treenode,(ClassOrInterfaceType1)^(Parameter)^(MethodDeclaration)_(BlockStmt)_(IfStmt)_(BinaryExpr:or)_(BinaryExpr:equals)_(NameExpr0),q
[0.0000] treenode,(ClassOrInterfaceType1)^(Parameter)^(MethodDeclaration)_(BlockStmt)_(IfStmt)_(BinaryExpr:or)_(BinaryExpr:equals)_(NameExpr0),q
[0.0000] issametree,(NameExpr3)^(MethodCallExpr)^(BinaryExpr:and)^(BinaryExpr:and)_(MethodCallExpr1)_(FieldAccessExpr2)_(NameExpr2),right
[0.0000] p,(NameExpr0)^(BinaryExpr:equals)_(NameExpr1),q
[0.0000] val,(NameExpr2)^(FieldAccessExpr)^(BinaryExpr:equals)^(BinaryExpr:and)_(MethodCallExpr1)_(FieldAccessExpr2)_(NameExpr0),q
[0.0000] val,(NameExpr2)^(FieldAccessExpr)^(BinaryExpr:equals)^(BinaryExpr:and)_(MethodCallExpr1)_(FieldAccessExpr2)_(NameExpr0),q
[0.0000] left,(NameExpr2)^(FieldAccessExpr1)^(MethodCallExpr)^(BinaryExpr:and)^(BinaryExpr:and)_(MethodCallExpr1)_(FieldAccessExpr2)_(NameExpr0),q
[0.0000] p,(NameExpr0)^(FieldAccessExpr)^(BinaryExpr:equals)^(BinaryExpr:and)_(MethodCallExpr1)_(FieldAccessExpr1)_(NameExpr0),p
[0.0000] q,(NameExpr0)^(FieldAccessExpr)^(BinaryExpr:equals)^(BinaryExpr:and)^(BinaryExpr:and)_(MethodCallExpr1)_(FieldAccessExpr2)_(NameExpr0),q
[0.0000] treenode,(ClassOrInterfaceType1)^(Parameter)^(MethodDeclaration)_(BlockStmt)_(ReturnStmt)_(BinaryExpr:and)_(MethodCallExpr1)_(FieldAccessExpr1)_(NameExpr0),p
[0.0000] treenode,(ClassOrInterfaceType1)^(Parameter)^(MethodDeclaration)_(BlockStmt)_(ReturnStmt)_(BinaryExpr:and)_(MethodCallExpr1)_(FieldAccessExpr1)_(NameExpr0),p
[0.0000] left,(NameExpr2)^(FieldAccessExpr1)^(MethodCallExpr)^(BinaryExpr:and)^(BinaryExpr:and)_(MethodCallExpr1)_(FieldAccessExpr1)_(NameExpr0),p
[0.0000] p,(NameExpr0)^(FieldAccessExpr)^(BinaryExpr:equals)_(FieldAccessExpr1)_(NameExpr0),q
[0.0000] q,(NameExpr0)^(FieldAccessExpr)^(BinaryExpr:equals)^(BinaryExpr:and)_(MethodCallExpr1)_(FieldAccessExpr1)_(NameExpr2),left
[0.0000] q,(VariableDeclaratorId0)^(Parameter)^(MethodDeclaration)_(BlockStmt)_(IfStmt)_(BinaryExpr:or)_(BinaryExpr:equals)_(NameExpr0),p
[0.0000] q,(NameExpr0)^(FieldAccessExpr)^(BinaryExpr:equals)^(BinaryExpr:and)^(BinaryExpr:and)_(MethodCallExpr1)_(FieldAccessExpr1)_(NameExpr2),right
[0.0000] p,(NameExpr0)^(FieldAccessExpr1)^(MethodCallExpr)_(FieldAccessExpr2)_(NameExpr2),left
[0.0000] p,(NameExpr0)^(FieldAccessExpr1)^(MethodCallExpr)_(FieldAccessExpr2)_(NameExpr2),right
[0.0000] val,(NameExpr2)^(FieldAccessExpr)^(BinaryExpr:equals)^(BinaryExpr:and)_(MethodCallExpr1)_(FieldAccessExpr2)_(NameExpr2),left
[0.0000] val,(NameExpr2)^(FieldAccessExpr)^(BinaryExpr:equals)^(BinaryExpr:and)_(MethodCallExpr1)_(FieldAccessExpr2)_(NameExpr2),left
[0.0000] q,(NameExpr0)^(FieldAccessExpr2)^(MethodCallExpr)^(BinaryExpr:and)^(BinaryExpr:and)_(MethodCallExpr1)_(FieldAccessExpr2)_(NameExpr2),right
[0.0000] q,(NameExpr0)^(FieldAccessExpr2)^(MethodCallExpr)^(BinaryExpr:and)^(BinaryExpr:and)_(MethodCallExpr1)_(FieldAccessExpr1)_(NameExpr2),right
[0.0000] q,(NameExpr0)^(FieldAccessExpr)_(NameExpr2),val
[0.0000] q,(NameExpr0)^(FieldAccessExpr)^(BinaryExpr:equals)^(BinaryExpr:and)^(BinaryExpr:and)_(MethodCallExpr1)_(FieldAccessExpr1)_(NameExpr0),p
[0.0000] q,(VariableDeclaratorId0)^(Parameter)^(MethodDeclaration)_(BlockStmt)_(ReturnStmt)_(BinaryExpr:and)_(MethodCallExpr1)_(FieldAccessExpr1)_(NameExpr0),p
[0.0000] treenode,(ClassOrInterfaceType1)^(Parameter)^(MethodDeclaration)_(BlockStmt)_(IfStmt)_(BinaryExpr:or)_(BinaryExpr:equals)_(NameExpr0),p
[0.0000] treenode,(ClassOrInterfaceType1)^(Parameter)^(MethodDeclaration)_(BlockStmt)_(IfStmt)_(BinaryExpr:or)_(BinaryExpr:equals)_(NameExpr0),p
[0.0000] left,(NameExpr2)^(FieldAccessExpr2)^(MethodCallExpr)^(BinaryExpr:and)^(BinaryExpr:and)_(MethodCallExpr1)_(FieldAccessExpr1)_(NameExpr0),p
[0.0000] p,(VariableDeclaratorId0)^(Parameter)^(MethodDeclaration)_(BlockStmt)_(IfStmt)_(BinaryExpr:or)_(BinaryExpr:equals)_(NameExpr0),p
[0.0000] p,(NameExpr0)^(FieldAccessExpr)^(BinaryExpr:equals)^(BinaryExpr:and)_(MethodCallExpr1)_(FieldAccessExpr1)_(NameExpr2),left
[0.0000] null,(NullLiteralExpr1)^(BinaryExpr:equals)^(BinaryExpr:or)_(BinaryExpr:equals)_(NameExpr0),q
[0.0000] val,(NameExpr2)^(FieldAccessExpr)^(BinaryExpr:equals)^(BinaryExpr:and)_(MethodCallExpr1)_(FieldAccessExpr1)_(NameExpr2),left
[0.0000] val,(NameExpr2)^(FieldAccessExpr)^(BinaryExpr:equals)^(BinaryExpr:and)_(MethodCallExpr1)_(FieldAccessExpr1)_(NameExpr2),left
[0.0000] p,(NameExpr0)^(FieldAccessExpr1)^(MethodCallExpr)^(BinaryExpr:and)^(BinaryExpr:and)_(MethodCallExpr1)_(FieldAccessExpr1)_(NameExpr0),p
[0.0000] p,(NameExpr0)^(FieldAccessExpr)^(BinaryExpr:equals)^(BinaryExpr:and)^(BinaryExpr:and)_(MethodCallExpr1)_(FieldAccessExpr1)_(NameExpr2),right
[0.0000] p,(NameExpr0)^(FieldAccessExpr)^(BinaryExpr:equals)^(BinaryExpr:and)^(BinaryExpr:and)_(MethodCallExpr1)_(FieldAccessExpr1)_(NameExpr0),p
[0.0000] p,(VariableDeclaratorId0)^(Parameter)^(MethodDeclaration)_(BlockStmt)_(ReturnStmt)_(BinaryExpr:and)_(MethodCallExpr1)_(FieldAccessExpr1)_(NameExpr0),p
[0.0000] p,(NameExpr0)^(FieldAccessExpr)^(BinaryExpr:equals)^(BinaryExpr:and)^(BinaryExpr:and)_(MethodCallExpr1)_(FieldAccessExpr2)_(NameExpr0),q
[0.0000] METHOD_NAME,(NameExpr1)^(MethodDeclaration)_(Parameter)_(VariableDeclaratorId0),q
[0.0000] METHOD_NAME,(NameExpr1)^(MethodDeclaration)_(Parameter)_(VariableDeclaratorId0),p
[0.0000] val,(NameExpr2)^(FieldAccessExpr)^(BinaryExpr:equals)^(BinaryExpr:and)^(BinaryExpr:and)_(MethodCallExpr1)_(FieldAccessExpr1)_(NameExpr0),p
[0.0000] val,(NameExpr2)^(FieldAccessExpr)^(BinaryExpr:equals)^(BinaryExpr:and)^(BinaryExpr:and)_(MethodCallExpr1)_(FieldAccessExpr1)_(NameExpr0),p
[0.0000] left,(NameExpr2)^(FieldAccessExpr1)^(MethodCallExpr)^(BinaryExpr:and)^(BinaryExpr:and)_(MethodCallExpr1)_(FieldAccessExpr2)_(NameExpr2),right
[0.0000] left,(NameExpr2)^(FieldAccessExpr2)^(MethodCallExpr)^(BinaryExpr:and)^(BinaryExpr:and)_(MethodCallExpr1)_(FieldAccessExpr1)_(NameExpr2),right
[0.0000] val,(NameExpr2)^(FieldAccessExpr)^(BinaryExpr:equals)^(BinaryExpr:and)^(BinaryExpr:and)_(MethodCallExpr1)_(FieldAccessExpr1)_(NameExpr2),right
[0.0000] val,(NameExpr2)^(FieldAccessExpr)^(BinaryExpr:equals)^(BinaryExpr:and)^(BinaryExpr:and)_(MethodCallExpr1)_(FieldAccessExpr1)_(NameExpr2),right
[0.0000] p,(NameExpr0)^(FieldAccessExpr1)^(MethodCallExpr)^(BinaryExpr:and)^(BinaryExpr:and)_(MethodCallExpr1)_(FieldAccessExpr1)_(NameExpr2),right
[0.0000] val,(NameExpr2)^(FieldAccessExpr)^(BinaryExpr:equals)^(BinaryExpr:and)^(BinaryExpr:and)_(MethodCallExpr1)_(FieldAccessExpr2)_(NameExpr0),q
[0.0000] val,(NameExpr2)^(FieldAccessExpr)^(BinaryExpr:equals)^(BinaryExpr:and)^(BinaryExpr:and)_(MethodCallExpr1)_(FieldAccessExpr2)_(NameExpr0),q
[0.0000] p,(NameExpr0)^(FieldAccessExpr)_(NameExpr2),val
[0.0000] p,(NameExpr0)^(FieldAccessExpr1)^(MethodCallExpr)^(BinaryExpr:and)^(BinaryExpr:and)_(MethodCallExpr1)_(FieldAccessExpr2)_(NameExpr2),right
[0.0000] q,(NameExpr0)^(FieldAccessExpr)^(BinaryExpr:equals)^(BinaryExpr:and)^(BinaryExpr:and)_(MethodCallExpr1)_(FieldAccessExpr2)_(NameExpr2),right
[0.0000] val,(NameExpr2)^(FieldAccessExpr)^(BinaryExpr:equals)^(BinaryExpr:and)^(BinaryExpr:and)_(MethodCallExpr1)_(FieldAccessExpr2)_(NameExpr2),right
[0.0000] val,(NameExpr2)^(FieldAccessExpr)^(BinaryExpr:equals)^(BinaryExpr:and)^(BinaryExpr:and)_(MethodCallExpr1)_(FieldAccessExpr2)_(NameExpr2),right
[0.0000] right,(NameExpr2)^(FieldAccessExpr1)^(MethodCallExpr)_(FieldAccessExpr2)_(NameExpr0),q
[0.0000] p,(NameExpr0)^(FieldAccessExpr)^(BinaryExpr:equals)^(BinaryExpr:and)^(BinaryExpr:and)_(MethodCallExpr1)_(FieldAccessExpr2)_(NameExpr2),right
[0.0000] p,(NameExpr0)^(FieldAccessExpr1)^(MethodCallExpr)_(FieldAccessExpr2)_(NameExpr0),q
[0.0000] p,(NameExpr0)^(FieldAccessExpr1)^(MethodCallExpr)_(FieldAccessExpr2)_(NameExpr0),q
[0.0000] left,(NameExpr2)^(FieldAccessExpr2)^(MethodCallExpr)^(BinaryExpr:and)^(BinaryExpr:and)_(MethodCallExpr1)_(FieldAccessExpr2)_(NameExpr2),right
[0.0000] left,(NameExpr2)^(FieldAccessExpr1)^(MethodCallExpr)_(FieldAccessExpr2)_(NameExpr0),q
[0.0000] p,(NameExpr0)^(FieldAccessExpr)^(BinaryExpr:equals)_(FieldAccessExpr1)_(NameExpr2),val
[0.0000] null,(NullLiteralExpr1)^(BinaryExpr:equals)^(BinaryExpr:or)_(BinaryExpr:equals)_(NullLiteralExpr1),null
[0.0000] val,(NameExpr2)^(FieldAccessExpr)^(BinaryExpr:equals)_(FieldAccessExpr1)_(NameExpr0),q
[0.0000] val,(NameExpr2)^(FieldAccessExpr)^(BinaryExpr:equals)_(FieldAccessExpr1)_(NameExpr2),val
[0.0000] q,(VariableDeclaratorId0)^(Parameter)^(MethodDeclaration)_(BlockStmt)_(IfStmt)_(BinaryExpr:or)_(BinaryExpr:equals)_(NullLiteralExpr1),null
[0.0000] q,(VariableDeclaratorId0)^(Parameter)^(MethodDeclaration)_(BlockStmt)_(IfStmt)_(BinaryExpr:or)_(BinaryExpr:equals)_(NullLiteralExpr1),null
[0.0000] p,(NameExpr0)^(BinaryExpr:equals)^(BinaryExpr:or)_(BinaryExpr:equals)_(NameExpr0),q
[0.0000] q,(NameExpr0)^(BinaryExpr:equals)_(NullLiteralExpr1),null
[0.0000] p,(NameExpr0)^(BinaryExpr:equals)^(BinaryExpr:or)_(BinaryExpr:equals)_(NullLiteralExpr1),null
[0.0000] p,(VariableDeclaratorId0)^(Parameter)^(MethodDeclaration)_(BlockStmt)_(IfStmt)_(BinaryExpr:or)_(BinaryExpr:equals)_(NullLiteralExpr1),null
[0.0000] p,(VariableDeclaratorId0)^(Parameter)^(MethodDeclaration)_(BlockStmt)_(IfStmt)_(BinaryExpr:or)_(BinaryExpr:equals)_(NullLiteralExpr1),null
[0.0000] p,(NameExpr0)^(BinaryExpr:equals)_(NullLiteralExpr1),null

topk terminals:
[['treenode', 'issametree'], ['treenode', 'issametree'], ['treenode', 'issametree'], ['treenode', 'issametree'], ['q', 'issametree'], ['right', 'issametree'], ['left', 'issametree'], ['p', 'issametree'], ['q', 'issametree'], ['p', 'issametree'], ['null', 'issametree'], ['null', 'issametree'], ['q', 'issametree'], ['q', 'issametree'], ['p', 'issametree'], ['q', 'issametree'], ['left', 'issametree'], ['val', 'issametree'], ['val', 'issametree'], ['q', 'issametree'], ['p', 'issametree'], ['p', 'issametree'], ['p', 'issametree'], ['right', 'issametree'], ['boolean', 'treenode'], ['left', 'issametree'], ['null', 'q'], ['null', 'q'], ['left', 'issametree'], ['issametree', 'q'], ['q', 'q'], ['treenode', 'treenode'], ['q', 'q'], ['treenode', 'q'], ['treenode', 'q'], ['treenode', 'right'], ['treenode', 'right'], ['val', 'issametree'], ['val', 'issametree'], ['treenode', 'p'], ['treenode', 'p'], ['p', 'q'], ['issametree', 'right'], ['p', 'q'], ['q', 'q'], ['issametree', 'issametree'], ['p', 'treenode'], ['null', 'p'], ['null', 'p'], ['q', 'p'], ['p', 'issametree'], ['p', 'issametree'], ['boolean', 'p'], ['boolean', 'METHOD_NAME'], ['q', 'right'], ['treenode', 'q'], ['treenode', 'q'], ['treenode', 'q'], ['treenode', 'right'], ['treenode', 'right'], ['issametree', 'p'], ['q', 'treenode'], ['p', 'q'], ['p', 'p'], ['q', 'left'], ['left', 'q'], ['p', 'right'], ['p', 'q'], ['p', 'left'], ['p', 'treenode'], ['METHOD_NAME', 'treenode'], ['METHOD_NAME', 'treenode'], ['p', 'right'], ['q', 'q'], ['q', 'left'], ['q', 'p'], ['q', 'q'], ['q', 'right'], ['q', 'right'], ['p', 'left'], ['q', 'q'], ['right', 'right'], ['q', 'p'], ['left', 'left'], ['p', 'right'], ['p', 'q'], ['q', 'p'], ['p', 'p'], ['q', 'issametree'], ['q', 'issametree'], ['p', 'q'], ['treenode', 'null'], ['treenode', 'null'], ['treenode', 'null'], ['treenode', 'null'], ['p', 'q'], ['val', 'p'], ['val', 'p'], ['left', 'right'], ['treenode', 'q'], ['treenode', 'q'], ['issametree', 'right'], ['p', 'q'], ['val', 'q'], ['val', 'q'], ['left', 'q'], ['p', 'p'], ['q', 'q'], ['treenode', 'p'], ['treenode', 'p'], ['left', 'p'], ['p', 'q'], ['q', 'left'], ['q', 'p'], ['q', 'right'], ['p', 'left'], ['p', 'right'], ['val', 'left'], ['val', 'left'], ['q', 'right'], ['q', 'right'], ['q', 'val'], ['q', 'p'], ['q', 'p'], ['treenode', 'p'], ['treenode', 'p'], ['left', 'p'], ['p', 'p'], ['p', 'left'], ['null', 'q'], ['val', 'left'], ['val', 'left'], ['p', 'p'], ['p', 'right'], ['p', 'p'], ['p', 'p'], ['p', 'q'], ['METHOD_NAME', 'q'], ['METHOD_NAME', 'p'], ['val', 'p'], ['val', 'p'], ['left', 'right'], ['left', 'right'], ['val', 'right'], ['val', 'right'], ['p', 'right'], ['val', 'q'], ['val', 'q'], ['p', 'val'], ['p', 'right'], ['q', 'right'], ['val', 'right'], ['val', 'right'], ['right', 'q'], ['p', 'right'], ['p', 'q'], ['p', 'q'], ['left', 'right'], ['left', 'q'], ['p', 'val'], ['null', 'null'], ['val', 'q'], ['val', 'val'], ['q', 'null'], ['q', 'null'], ['p', 'q'], ['q', 'null'], ['p', 'null'], ['p', 'null'], ['p', 'null'], ['p', 'null']]

