
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/bcgit__bc-java/prov/src/main/jdk1.3/org/bouncycastle/jce/cert/CertPathBuilderException_printStackTrace.java
method_name = printStackTrace
method_body = public void printStackTrace(PrintWriter pw) { super.printStackTrace(pw); if (getCause() != null) { getCause().printStackTrace(pw); } }

topk path-contexts:
[0.1418] printwriter,(ClassOrInterfaceType1)^(Parameter)^(MethodDeclaration)_(BlockStmt)_(ExpressionStmt)_(MethodCallExpr0)_(NameExpr3),printstacktrace
[0.1075] pw,(NameExpr2)^(MethodCallExpr)^(ExpressionStmt)^(BlockStmt)_(IfStmt)_(BinaryExpr:notEquals)_(MethodCallExpr0)_(NameExpr1),getcause
[0.0809] printwriter,(ClassOrInterfaceType1)^(Parameter)^(MethodDeclaration)_(BlockStmt)_(IfStmt)_(BinaryExpr:notEquals)_(MethodCallExpr0)_(NameExpr1),getcause
[0.0756] super,(SuperExpr0)^(MethodCallExpr)_(NameExpr2),pw
[0.0750] printwriter,(ClassOrInterfaceType1)^(Parameter)^(MethodDeclaration)_(BlockStmt)_(IfStmt)_(BlockStmt)_(ExpressionStmt)_(MethodCallExpr0)_(NameExpr3),printstacktrace
[0.0535] METHOD_NAME,(NameExpr1)^(MethodDeclaration)_(BlockStmt)_(IfStmt)_(BlockStmt)_(ExpressionStmt)_(MethodCallExpr0)_(MethodCallExpr0)_(NameExpr1),getcause
[0.0505] pw,(VariableDeclaratorId0)^(Parameter)^(MethodDeclaration)_(BlockStmt)_(ExpressionStmt)_(MethodCallExpr0)_(NameExpr3),printstacktrace
[0.0365] pw,(VariableDeclaratorId0)^(Parameter)^(MethodDeclaration)_(BlockStmt)_(IfStmt)_(BinaryExpr:notEquals)_(MethodCallExpr0)_(NameExpr1),getcause
[0.0347] printwriter,(ClassOrInterfaceType1)^(Parameter)^(MethodDeclaration)_(BlockStmt)_(ExpressionStmt)_(MethodCallExpr0)_(NameExpr2),pw
[0.0285] getcause,(NameExpr1)^(MethodCallExpr)^(BinaryExpr:notEquals)^(IfStmt)_(BlockStmt)_(ExpressionStmt)_(MethodCallExpr0)_(MethodCallExpr0)_(NameExpr1),getcause
[0.0269] printwriter,(ClassOrInterfaceType1)^(Parameter)^(MethodDeclaration)_(BlockStmt)_(IfStmt)_(BlockStmt)_(ExpressionStmt)_(MethodCallExpr0)_(NameExpr2),pw
[0.0265] pw,(VariableDeclaratorId0)^(Parameter)^(MethodDeclaration)_(BlockStmt)_(IfStmt)_(BlockStmt)_(ExpressionStmt)_(MethodCallExpr0)_(NameExpr3),printstacktrace
[0.0191] METHOD_NAME,(NameExpr1)^(MethodDeclaration)_(BlockStmt)_(ExpressionStmt)_(MethodCallExpr0)_(NameExpr3),printstacktrace
[0.0184] pw,(NameExpr2)^(MethodCallExpr)_(NameExpr3),printstacktrace
[0.0184] pw,(NameExpr2)^(MethodCallExpr)_(NameExpr3),printstacktrace
[0.0174] void,(VoidType0)^(MethodDeclaration)_(Parameter)_(VariableDeclaratorId0),pw
[0.0159] pw,(VariableDeclaratorId0)^(Parameter)^(MethodDeclaration)_(BlockStmt)_(IfStmt)_(BlockStmt)_(ExpressionStmt)_(MethodCallExpr0)_(NameExpr2),pw
[0.0159] getcause,(NameExpr1)^(MethodCallExpr0)^(MethodCallExpr)_(NameExpr2),pw
[0.0147] METHOD_NAME,(NameExpr1)^(MethodDeclaration)_(BlockStmt)_(ExpressionStmt)_(MethodCallExpr0)_(NameExpr2),pw
[0.0139] getcause,(NameExpr1)^(MethodCallExpr)^(BinaryExpr:notEquals)^(IfStmt)_(BlockStmt)_(ExpressionStmt)_(MethodCallExpr0)_(NameExpr3),printstacktrace
[0.0130] void,(VoidType0)^(MethodDeclaration)_(Parameter)_(ClassOrInterfaceType1),printwriter
[0.0128] pw,(VariableDeclaratorId0)^(Parameter)^(MethodDeclaration)_(BlockStmt)_(ExpressionStmt)_(MethodCallExpr0)_(NameExpr2),pw
[0.0120] null,(NullLiteralExpr1)^(BinaryExpr:notEquals)^(IfStmt)_(BlockStmt)_(ExpressionStmt)_(MethodCallExpr0)_(MethodCallExpr0)_(NameExpr1),getcause
[0.0107] void,(VoidType0)^(MethodDeclaration)_(NameExpr1),METHOD_NAME
[0.0089] pw,(VariableDeclaratorId0)^(Parameter)_(ClassOrInterfaceType1),printwriter
[0.0078] getcause,(NameExpr1)^(MethodCallExpr)^(BinaryExpr:notEquals)_(NullLiteralExpr1),null
[0.0076] METHOD_NAME,(NameExpr1)^(MethodDeclaration)_(BlockStmt)_(IfStmt)_(BlockStmt)_(ExpressionStmt)_(MethodCallExpr0)_(NameExpr2),pw
[0.0076] getcause,(NameExpr1)^(MethodCallExpr)^(BinaryExpr:notEquals)^(IfStmt)_(BlockStmt)_(ExpressionStmt)_(MethodCallExpr0)_(NameExpr2),pw
[0.0073] printwriter,(ClassOrInterfaceType1)^(Parameter)^(MethodDeclaration)_(BlockStmt)_(ExpressionStmt)_(MethodCallExpr0)_(SuperExpr0),super
[0.0064] pw,(NameExpr2)^(MethodCallExpr)^(ExpressionStmt)^(BlockStmt)_(IfStmt)_(BlockStmt)_(ExpressionStmt)_(MethodCallExpr0)_(NameExpr3),printstacktrace
[0.0052] METHOD_NAME,(NameExpr1)^(MethodDeclaration)_(BlockStmt)_(IfStmt)_(BlockStmt)_(ExpressionStmt)_(MethodCallExpr0)_(NameExpr3),printstacktrace
[0.0046] METHOD_NAME,(NameExpr1)^(MethodDeclaration)_(BlockStmt)_(IfStmt)_(BinaryExpr:notEquals)_(MethodCallExpr0)_(NameExpr1),getcause
[0.0040] null,(NullLiteralExpr1)^(BinaryExpr:notEquals)^(IfStmt)_(BlockStmt)_(ExpressionStmt)_(MethodCallExpr0)_(NameExpr2),pw
[0.0037] METHOD_NAME,(NameExpr1)^(MethodDeclaration)_(Parameter)_(ClassOrInterfaceType1),printwriter
[0.0033] METHOD_NAME,(NameExpr1)^(MethodDeclaration)_(BlockStmt)_(ExpressionStmt)_(MethodCallExpr0)_(SuperExpr0),super
[0.0032] pw,(NameExpr2)^(MethodCallExpr)^(ExpressionStmt)^(BlockStmt)_(IfStmt)_(BlockStmt)_(ExpressionStmt)_(MethodCallExpr0)_(NameExpr2),pw
[0.0023] printstacktrace,(NameExpr3)^(MethodCallExpr)^(ExpressionStmt)^(BlockStmt)_(IfStmt)_(BlockStmt)_(ExpressionStmt)_(MethodCallExpr0)_(NameExpr2),pw
[0.0021] null,(NullLiteralExpr1)^(BinaryExpr:notEquals)^(IfStmt)_(BlockStmt)_(ExpressionStmt)_(MethodCallExpr0)_(NameExpr3),printstacktrace
[0.0021] printstacktrace,(NameExpr3)^(MethodCallExpr)^(ExpressionStmt)^(BlockStmt)_(IfStmt)_(BinaryExpr:notEquals)_(MethodCallExpr0)_(NameExpr1),getcause
[0.0013] super,(SuperExpr0)^(MethodCallExpr)^(ExpressionStmt)^(BlockStmt)_(IfStmt)_(BinaryExpr:notEquals)_(MethodCallExpr0)_(NameExpr1),getcause
[0.0011] printstacktrace,(NameExpr3)^(MethodCallExpr)^(ExpressionStmt)^(BlockStmt)_(IfStmt)_(BlockStmt)_(ExpressionStmt)_(MethodCallExpr0)_(NameExpr3),printstacktrace
[0.0006] super,(SuperExpr0)^(MethodCallExpr)^(ExpressionStmt)^(BlockStmt)_(IfStmt)_(BlockStmt)_(ExpressionStmt)_(MethodCallExpr0)_(NameExpr3),printstacktrace
[0.0004] METHOD_NAME,(NameExpr1)^(MethodDeclaration)_(Parameter)_(VariableDeclaratorId0),pw
[0.0002] printwriter,(ClassOrInterfaceType1)^(Parameter)^(MethodDeclaration)_(BlockStmt)_(IfStmt)_(BinaryExpr:notEquals)_(NullLiteralExpr1),null
[0.0001] super,(SuperExpr0)^(MethodCallExpr)^(ExpressionStmt)^(BlockStmt)_(IfStmt)_(BinaryExpr:notEquals)_(NullLiteralExpr1),null
[0.0001] METHOD_NAME,(NameExpr1)^(MethodDeclaration)_(BlockStmt)_(IfStmt)_(BinaryExpr:notEquals)_(NullLiteralExpr1),null
[0.0001] super,(SuperExpr0)^(MethodCallExpr)^(ExpressionStmt)^(BlockStmt)_(IfStmt)_(BlockStmt)_(ExpressionStmt)_(MethodCallExpr0)_(NameExpr2),pw
[0.0000] pw,(NameExpr2)^(MethodCallExpr)^(ExpressionStmt)^(BlockStmt)_(IfStmt)_(BinaryExpr:notEquals)_(NullLiteralExpr1),null
[0.0000] pw,(VariableDeclaratorId0)^(Parameter)^(MethodDeclaration)_(BlockStmt)_(ExpressionStmt)_(MethodCallExpr0)_(SuperExpr0),super
[0.0000] printstacktrace,(NameExpr3)^(MethodCallExpr)^(ExpressionStmt)^(BlockStmt)_(IfStmt)_(BinaryExpr:notEquals)_(NullLiteralExpr1),null
[0.0000] pw,(VariableDeclaratorId0)^(Parameter)^(MethodDeclaration)_(BlockStmt)_(IfStmt)_(BinaryExpr:notEquals)_(NullLiteralExpr1),null

topk terminals:
[['printwriter', 'printstacktrace'], ['pw', 'getcause'], ['printwriter', 'getcause'], ['super', 'pw'], ['printwriter', 'printstacktrace'], ['METHOD_NAME', 'getcause'], ['pw', 'printstacktrace'], ['pw', 'getcause'], ['printwriter', 'pw'], ['getcause', 'getcause'], ['printwriter', 'pw'], ['pw', 'printstacktrace'], ['METHOD_NAME', 'printstacktrace'], ['pw', 'printstacktrace'], ['pw', 'printstacktrace'], ['void', 'pw'], ['pw', 'pw'], ['getcause', 'pw'], ['METHOD_NAME', 'pw'], ['getcause', 'printstacktrace'], ['void', 'printwriter'], ['pw', 'pw'], ['null', 'getcause'], ['void', 'METHOD_NAME'], ['pw', 'printwriter'], ['getcause', 'null'], ['METHOD_NAME', 'pw'], ['getcause', 'pw'], ['printwriter', 'super'], ['pw', 'printstacktrace'], ['METHOD_NAME', 'printstacktrace'], ['METHOD_NAME', 'getcause'], ['null', 'pw'], ['METHOD_NAME', 'printwriter'], ['METHOD_NAME', 'super'], ['pw', 'pw'], ['printstacktrace', 'pw'], ['null', 'printstacktrace'], ['printstacktrace', 'getcause'], ['super', 'getcause'], ['printstacktrace', 'printstacktrace'], ['super', 'printstacktrace'], ['METHOD_NAME', 'pw'], ['printwriter', 'null'], ['super', 'null'], ['METHOD_NAME', 'null'], ['super', 'pw'], ['pw', 'null'], ['pw', 'super'], ['printstacktrace', 'null'], ['pw', 'null']]

