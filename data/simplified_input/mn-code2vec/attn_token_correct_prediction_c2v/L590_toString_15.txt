
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/SINTEF-9012__JArduino/jarduino.core/src/main/java/org/sintef/jarduino/msg/AnalogWriteMsg_toString.java
method_name = toString
method_body = @Override public String toString() { String myString = "analogWrite:"; myString += " [pin: " + pin + "]"; myString += " [value: " + value + "]"; return myString; }

topk path-contexts:
[0.1523] pin,(StringLiteralExpr0)^(BinaryExpr:plus)^(BinaryExpr:plus1)^(AssignExpr:plus)^(ExpressionStmt)^(BlockStmt)_(ReturnStmt)_(NameExpr0),mystring
[0.1438] string,(ClassOrInterfaceType1)^(MethodDeclaration)_(BlockStmt)_(ExpressionStmt)_(AssignExpr:plus0)_(BinaryExpr:plus)_(BinaryExpr:plus)_(NameExpr1),pin
[0.1247] pin,(NameExpr1)^(BinaryExpr:plus)^(BinaryExpr:plus1)^(AssignExpr:plus)^(ExpressionStmt)^(BlockStmt)_(ReturnStmt)_(NameExpr0),mystring
[0.0449] pin,(NameExpr1)^(BinaryExpr:plus)^(BinaryExpr:plus1)^(AssignExpr:plus)^(ExpressionStmt)^(BlockStmt)_(ExpressionStmt)_(AssignExpr:plus0)_(NameExpr0),mystring
[0.0361] string,(ClassOrInterfaceType1)^(MethodDeclaration)_(BlockStmt)_(ExpressionStmt)_(AssignExpr:plus0)_(BinaryExpr:plus)_(BinaryExpr:plus)_(NameExpr1),value
[0.0297] string,(ClassOrInterfaceType0)^(VariableDeclarationExpr)^(ExpressionStmt)^(BlockStmt)_(ExpressionStmt)_(AssignExpr:plus0)_(BinaryExpr:plus)_(BinaryExpr:plus)_(NameExpr1),pin
[0.0274] string,(ClassOrInterfaceType1)^(MethodDeclaration)_(BlockStmt)_(ExpressionStmt)_(AssignExpr:plus0)_(NameExpr0),mystring
[0.0274] string,(ClassOrInterfaceType1)^(MethodDeclaration)_(BlockStmt)_(ExpressionStmt)_(AssignExpr:plus0)_(NameExpr0),mystring
[0.0262] string,(ClassOrInterfaceType1)^(MethodDeclaration)_(BlockStmt)_(ExpressionStmt)_(VariableDeclarationExpr)_(VariableDeclarator)_(StringLiteralExpr1),analogwrite
[0.0250] value,(StringLiteralExpr0)^(BinaryExpr:plus)^(BinaryExpr:plus1)^(AssignExpr:plus)^(ExpressionStmt)^(BlockStmt)_(ReturnStmt)_(NameExpr0),mystring
[0.0245] METHOD_NAME,(NameExpr2)^(MethodDeclaration)_(BlockStmt)_(ReturnStmt)_(NameExpr0),mystring
[0.0215] METHOD_NAME,(NameExpr2)^(MethodDeclaration)_(BlockStmt)_(ExpressionStmt)_(AssignExpr:plus0)_(BinaryExpr:plus)_(BinaryExpr:plus)_(NameExpr1),pin
[0.0198] METHOD_NAME,(NameExpr2)^(MethodDeclaration)_(BlockStmt)_(ExpressionStmt)_(AssignExpr:plus0)_(BinaryExpr:plus)_(BinaryExpr:plus)_(StringLiteralExpr0),pin
[0.0152] string,(ClassOrInterfaceType1)^(MethodDeclaration)_(BlockStmt)_(ReturnStmt)_(NameExpr0),mystring
[0.0150] string,(ClassOrInterfaceType1)^(MethodDeclaration)_(BlockStmt)_(ExpressionStmt)_(AssignExpr:plus0)_(BinaryExpr:plus)_(StringLiteralExpr1),]
[0.0150] string,(ClassOrInterfaceType1)^(MethodDeclaration)_(BlockStmt)_(ExpressionStmt)_(AssignExpr:plus0)_(BinaryExpr:plus)_(StringLiteralExpr1),]
[0.0148] string,(ClassOrInterfaceType1)^(MethodDeclaration)_(BlockStmt)_(ExpressionStmt)_(VariableDeclarationExpr)_(VariableDeclarator)_(VariableDeclaratorId0),mystring
[0.0137] string,(ClassOrInterfaceType1)^(MethodDeclaration)_(BlockStmt)_(ExpressionStmt)_(VariableDeclarationExpr)_(ClassOrInterfaceType0),string
[0.0130] ],(StringLiteralExpr1)^(BinaryExpr:plus1)^(AssignExpr:plus)^(ExpressionStmt)^(BlockStmt)_(ReturnStmt)_(NameExpr0),mystring
[0.0130] ],(StringLiteralExpr1)^(BinaryExpr:plus1)^(AssignExpr:plus)^(ExpressionStmt)^(BlockStmt)_(ReturnStmt)_(NameExpr0),mystring
[0.0121] METHOD_NAME,(NameExpr2)^(MethodDeclaration)_(BlockStmt)_(ExpressionStmt)_(AssignExpr:plus0)_(BinaryExpr:plus)_(StringLiteralExpr1),]
[0.0121] METHOD_NAME,(NameExpr2)^(MethodDeclaration)_(BlockStmt)_(ExpressionStmt)_(AssignExpr:plus0)_(BinaryExpr:plus)_(StringLiteralExpr1),]
[0.0120] pin,(StringLiteralExpr0)^(BinaryExpr:plus)^(BinaryExpr:plus1)_(StringLiteralExpr1),]
[0.0113] METHOD_NAME,(NameExpr2)^(MethodDeclaration)_(BlockStmt)_(ExpressionStmt)_(AssignExpr:plus0)_(NameExpr0),mystring
[0.0113] METHOD_NAME,(NameExpr2)^(MethodDeclaration)_(BlockStmt)_(ExpressionStmt)_(AssignExpr:plus0)_(NameExpr0),mystring
[0.0111] analogwrite,(StringLiteralExpr1)^(VariableDeclarator)^(VariableDeclarationExpr)^(ExpressionStmt)^(BlockStmt)_(ExpressionStmt)_(AssignExpr:plus0)_(NameExpr0),mystring
[0.0111] analogwrite,(StringLiteralExpr1)^(VariableDeclarator)^(VariableDeclarationExpr)^(ExpressionStmt)^(BlockStmt)_(ExpressionStmt)_(AssignExpr:plus0)_(NameExpr0),mystring
[0.0095] mystring,(NameExpr0)^(AssignExpr:plus)_(BinaryExpr:plus)_(BinaryExpr:plus)_(StringLiteralExpr0),pin
[0.0092] value,(NameExpr1)^(BinaryExpr:plus)^(BinaryExpr:plus1)^(AssignExpr:plus)^(ExpressionStmt)^(BlockStmt)_(ReturnStmt)_(NameExpr0),mystring
[0.0088] string,(ClassOrInterfaceType1)^(MethodDeclaration)_(BlockStmt)_(ExpressionStmt)_(AssignExpr:plus0)_(BinaryExpr:plus)_(BinaryExpr:plus)_(StringLiteralExpr0),pin
[0.0084] string,(ClassOrInterfaceType0)^(VariableDeclarationExpr)^(ExpressionStmt)^(BlockStmt)_(ExpressionStmt)_(AssignExpr:plus0)_(BinaryExpr:plus)_(BinaryExpr:plus)_(NameExpr1),value
[0.0075] pin,(StringLiteralExpr0)^(BinaryExpr:plus)_(NameExpr1),pin
[0.0072] string,(ClassOrInterfaceType1)^(MethodDeclaration)_(NameExpr2),METHOD_NAME
[0.0069] ],(StringLiteralExpr1)^(BinaryExpr:plus1)^(AssignExpr:plus)^(ExpressionStmt)^(BlockStmt)_(ExpressionStmt)_(AssignExpr:plus0)_(NameExpr0),mystring
[0.0064] override,(NameExpr0)^(MarkerAnnotationExpr)^(MethodDeclaration)_(NameExpr2),METHOD_NAME
[0.0063] mystring,(NameExpr0)^(AssignExpr:plus)_(BinaryExpr:plus)_(BinaryExpr:plus)_(NameExpr1),pin
[0.0049] value,(StringLiteralExpr0)^(BinaryExpr:plus)^(BinaryExpr:plus1)_(StringLiteralExpr1),]
[0.0048] METHOD_NAME,(NameExpr2)^(MethodDeclaration)_(BlockStmt)_(ExpressionStmt)_(VariableDeclarationExpr)_(VariableDeclarator)_(StringLiteralExpr1),analogwrite
[0.0033] METHOD_NAME,(NameExpr2)^(MethodDeclaration)_(BlockStmt)_(ExpressionStmt)_(AssignExpr:plus0)_(BinaryExpr:plus)_(BinaryExpr:plus)_(NameExpr1),value
[0.0032] override,(NameExpr0)^(MarkerAnnotationExpr)^(MethodDeclaration)_(ClassOrInterfaceType1),string
[0.0028] METHOD_NAME,(NameExpr2)^(MethodDeclaration)_(BlockStmt)_(ExpressionStmt)_(AssignExpr:plus0)_(BinaryExpr:plus)_(BinaryExpr:plus)_(StringLiteralExpr0),value
[0.0024] mystring,(NameExpr0)^(AssignExpr:plus)^(ExpressionStmt)^(BlockStmt)_(ExpressionStmt)_(AssignExpr:plus0)_(BinaryExpr:plus)_(BinaryExpr:plus)_(NameExpr1),value
[0.0019] string,(ClassOrInterfaceType1)^(MethodDeclaration)_(BlockStmt)_(ExpressionStmt)_(AssignExpr:plus0)_(BinaryExpr:plus)_(BinaryExpr:plus)_(StringLiteralExpr0),value
[0.0019] string,(ClassOrInterfaceType0)^(VariableDeclarationExpr)^(ExpressionStmt)^(BlockStmt)_(ExpressionStmt)_(AssignExpr:plus0)_(BinaryExpr:plus)_(BinaryExpr:plus)_(StringLiteralExpr0),pin
[0.0018] mystring,(NameExpr0)^(AssignExpr:plus)_(BinaryExpr:plus)_(BinaryExpr:plus)_(StringLiteralExpr0),value
[0.0018] mystring,(NameExpr0)^(AssignExpr:plus)^(ExpressionStmt)^(BlockStmt)_(ReturnStmt)_(NameExpr0),mystring
[0.0018] mystring,(NameExpr0)^(AssignExpr:plus)^(ExpressionStmt)^(BlockStmt)_(ReturnStmt)_(NameExpr0),mystring
[0.0016] mystring,(NameExpr0)^(AssignExpr:plus)^(ExpressionStmt)^(BlockStmt)_(ExpressionStmt)_(AssignExpr:plus0)_(BinaryExpr:plus)_(BinaryExpr:plus)_(StringLiteralExpr0),value
[0.0012] mystring,(NameExpr0)^(AssignExpr:plus)_(BinaryExpr:plus)_(BinaryExpr:plus)_(NameExpr1),value
[0.0012] mystring,(VariableDeclaratorId0)^(VariableDeclarator)_(StringLiteralExpr1),analogwrite
[0.0012] pin,(NameExpr1)^(BinaryExpr:plus)^(BinaryExpr:plus1)_(StringLiteralExpr1),]
[0.0011] string,(ClassOrInterfaceType0)^(VariableDeclarationExpr)_(VariableDeclarator)_(StringLiteralExpr1),analogwrite
[0.0010] mystring,(NameExpr0)^(AssignExpr:plus)^(ExpressionStmt)^(BlockStmt)_(ExpressionStmt)_(AssignExpr:plus0)_(BinaryExpr:plus)_(StringLiteralExpr1),]
[0.0009] pin,(StringLiteralExpr0)^(BinaryExpr:plus)^(BinaryExpr:plus1)^(AssignExpr:plus)^(ExpressionStmt)^(BlockStmt)_(ExpressionStmt)_(AssignExpr:plus0)_(NameExpr0),mystring
[0.0008] string,(ClassOrInterfaceType0)^(VariableDeclarationExpr)^(ExpressionStmt)^(BlockStmt)_(ExpressionStmt)_(AssignExpr:plus0)_(BinaryExpr:plus)_(StringLiteralExpr1),]
[0.0008] string,(ClassOrInterfaceType0)^(VariableDeclarationExpr)^(ExpressionStmt)^(BlockStmt)_(ExpressionStmt)_(AssignExpr:plus0)_(BinaryExpr:plus)_(StringLiteralExpr1),]
[0.0006] mystring,(VariableDeclaratorId0)^(VariableDeclarator)^(VariableDeclarationExpr)^(ExpressionStmt)^(BlockStmt)_(ExpressionStmt)_(AssignExpr:plus0)_(BinaryExpr:plus)_(StringLiteralExpr1),]
[0.0006] mystring,(VariableDeclaratorId0)^(VariableDeclarator)^(VariableDeclarationExpr)^(ExpressionStmt)^(BlockStmt)_(ExpressionStmt)_(AssignExpr:plus0)_(BinaryExpr:plus)_(StringLiteralExpr1),]
[0.0005] mystring,(NameExpr0)^(AssignExpr:plus)_(BinaryExpr:plus)_(StringLiteralExpr1),]
[0.0005] mystring,(NameExpr0)^(AssignExpr:plus)_(BinaryExpr:plus)_(StringLiteralExpr1),]
[0.0005] analogwrite,(StringLiteralExpr1)^(VariableDeclarator)^(VariableDeclarationExpr)^(ExpressionStmt)^(BlockStmt)_(ExpressionStmt)_(AssignExpr:plus0)_(BinaryExpr:plus)_(StringLiteralExpr1),]
[0.0005] analogwrite,(StringLiteralExpr1)^(VariableDeclarator)^(VariableDeclarationExpr)^(ExpressionStmt)^(BlockStmt)_(ExpressionStmt)_(AssignExpr:plus0)_(BinaryExpr:plus)_(StringLiteralExpr1),]
[0.0004] string,(ClassOrInterfaceType0)^(VariableDeclarationExpr)^(ExpressionStmt)^(BlockStmt)_(ExpressionStmt)_(AssignExpr:plus0)_(BinaryExpr:plus)_(BinaryExpr:plus)_(StringLiteralExpr0),value
[0.0004] value,(StringLiteralExpr0)^(BinaryExpr:plus)_(NameExpr1),value
[0.0004] ],(StringLiteralExpr1)^(BinaryExpr:plus1)^(AssignExpr:plus)^(ExpressionStmt)^(BlockStmt)_(ExpressionStmt)_(AssignExpr:plus0)_(BinaryExpr:plus)_(StringLiteralExpr1),]
[0.0004] value,(NameExpr1)^(BinaryExpr:plus)^(BinaryExpr:plus1)_(StringLiteralExpr1),]
[0.0002] mystring,(NameExpr0)^(AssignExpr:plus)^(ExpressionStmt)^(BlockStmt)_(ExpressionStmt)_(AssignExpr:plus0)_(NameExpr0),mystring
[0.0002] string,(ClassOrInterfaceType0)^(VariableDeclarationExpr)^(ExpressionStmt)^(BlockStmt)_(ExpressionStmt)_(AssignExpr:plus0)_(NameExpr0),mystring
[0.0002] string,(ClassOrInterfaceType0)^(VariableDeclarationExpr)^(ExpressionStmt)^(BlockStmt)_(ExpressionStmt)_(AssignExpr:plus0)_(NameExpr0),mystring
[0.0000] mystring,(VariableDeclaratorId0)^(VariableDeclarator)^(VariableDeclarationExpr)^(ExpressionStmt)^(BlockStmt)_(ExpressionStmt)_(AssignExpr:plus0)_(NameExpr0),mystring
[0.0000] mystring,(VariableDeclaratorId0)^(VariableDeclarator)^(VariableDeclarationExpr)^(ExpressionStmt)^(BlockStmt)_(ExpressionStmt)_(AssignExpr:plus0)_(NameExpr0),mystring
[0.0000] METHOD_NAME,(NameExpr2)^(MethodDeclaration)_(BlockStmt)_(ExpressionStmt)_(VariableDeclarationExpr)_(ClassOrInterfaceType0),string
[0.0000] METHOD_NAME,(NameExpr2)^(MethodDeclaration)_(BlockStmt)_(ExpressionStmt)_(VariableDeclarationExpr)_(VariableDeclarator)_(VariableDeclaratorId0),mystring
[0.0000] string,(ClassOrInterfaceType0)^(VariableDeclarationExpr)_(VariableDeclarator)_(VariableDeclaratorId0),mystring

topk terminals:
[['pin', 'mystring'], ['string', 'pin'], ['pin', 'mystring'], ['pin', 'mystring'], ['string', 'value'], ['string', 'pin'], ['string', 'mystring'], ['string', 'mystring'], ['string', 'analogwrite'], ['value', 'mystring'], ['METHOD_NAME', 'mystring'], ['METHOD_NAME', 'pin'], ['METHOD_NAME', 'pin'], ['string', 'mystring'], ['string', ']'], ['string', ']'], ['string', 'mystring'], ['string', 'string'], [']', 'mystring'], [']', 'mystring'], ['METHOD_NAME', ']'], ['METHOD_NAME', ']'], ['pin', ']'], ['METHOD_NAME', 'mystring'], ['METHOD_NAME', 'mystring'], ['analogwrite', 'mystring'], ['analogwrite', 'mystring'], ['mystring', 'pin'], ['value', 'mystring'], ['string', 'pin'], ['string', 'value'], ['pin', 'pin'], ['string', 'METHOD_NAME'], [']', 'mystring'], ['override', 'METHOD_NAME'], ['mystring', 'pin'], ['value', ']'], ['METHOD_NAME', 'analogwrite'], ['METHOD_NAME', 'value'], ['override', 'string'], ['METHOD_NAME', 'value'], ['mystring', 'value'], ['string', 'value'], ['string', 'pin'], ['mystring', 'value'], ['mystring', 'mystring'], ['mystring', 'mystring'], ['mystring', 'value'], ['mystring', 'value'], ['mystring', 'analogwrite'], ['pin', ']'], ['string', 'analogwrite'], ['mystring', ']'], ['pin', 'mystring'], ['string', ']'], ['string', ']'], ['mystring', ']'], ['mystring', ']'], ['mystring', ']'], ['mystring', ']'], ['analogwrite', ']'], ['analogwrite', ']'], ['string', 'value'], ['value', 'value'], [']', ']'], ['value', ']'], ['mystring', 'mystring'], ['string', 'mystring'], ['string', 'mystring'], ['mystring', 'mystring'], ['mystring', 'mystring'], ['METHOD_NAME', 'string'], ['METHOD_NAME', 'mystring'], ['string', 'mystring']]

