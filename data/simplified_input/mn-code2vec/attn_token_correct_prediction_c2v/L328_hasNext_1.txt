
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/bluestreak01__questdb/core/src/main/java/com/questdb/ql/analytic/AnalyticRecordSource_hasNext.java
method_name = hasNext
method_body = @Override public boolean hasNext() { if (cursor.hasNext()) { record.of(cursor.next()); for (int i = 0, n = functions.size(); i < n; i++) { functions.getQuick(i).prepareFor(record); } return true; } return false; }

topk path-contexts:
[0.1011] cursor,(NameExpr0)^(MethodCallExpr)^(IfStmt)_(BlockStmt)_(ForStmt)_(BlockStmt)_(ExpressionStmt)_(MethodCallExpr0)_(NameExpr2),record
[0.0781] i,(NameExpr0)^(UnaryExpr:posIncrement)^(ForStmt)_(BlockStmt)_(ExpressionStmt)_(MethodCallExpr0)_(NameExpr2),record
[0.0632] next,(NameExpr2)^(MethodCallExpr2)^(MethodCallExpr)^(ExpressionStmt)^(BlockStmt)_(ReturnStmt)_(BooleanLiteralExpr0),true
[0.0514] next,(NameExpr2)^(MethodCallExpr2)^(MethodCallExpr)^(ExpressionStmt)^(BlockStmt)^(IfStmt)^(BlockStmt)_(ReturnStmt)_(BooleanLiteralExpr0),false
[0.0456] cursor,(NameExpr0)^(MethodCallExpr)^(IfStmt)_(BlockStmt)_(ForStmt)_(VariableDeclarationExpr)_(VariableDeclarator)_(IntegerLiteralExpr1),0
[0.0389] cursor,(NameExpr0)^(MethodCallExpr)^(IfStmt)_(BlockStmt)_(ExpressionStmt)_(MethodCallExpr0)_(MethodCallExpr2)_(NameExpr0),cursor
[0.0360] int,(PrimitiveType0)^(VariableDeclarationExpr)_(VariableDeclarator)_(MethodCallExpr1)_(NameExpr2),size
[0.0343] 0,(IntegerLiteralExpr1)^(VariableDeclarator)^(VariableDeclarationExpr)^(ForStmt)_(UnaryExpr:posIncrement)_(NameExpr0),i
[0.0286] int,(PrimitiveType0)^(VariableDeclarationExpr)_(VariableDeclarator)_(VariableDeclaratorId0),i
[0.0271] boolean,(PrimitiveType1)^(MethodDeclaration)_(BlockStmt)_(ReturnStmt)_(BooleanLiteralExpr0),false
[0.0231] size,(NameExpr2)^(MethodCallExpr)^(VariableDeclarator)^(VariableDeclarationExpr)^(ForStmt)_(UnaryExpr:posIncrement)_(NameExpr0),i
[0.0217] cursor,(NameExpr0)^(MethodCallExpr2)^(MethodCallExpr)^(ExpressionStmt)^(BlockStmt)_(ReturnStmt)_(BooleanLiteralExpr0),true
[0.0194] METHOD_NAME,(NameExpr2)^(MethodDeclaration)_(BlockStmt)_(IfStmt)_(BlockStmt)_(ExpressionStmt)_(MethodCallExpr0)_(NameExpr3),of
[0.0168] METHOD_NAME,(NameExpr2)^(MethodDeclaration)_(BlockStmt)_(IfStmt)_(BlockStmt)_(ForStmt)_(VariableDeclarationExpr)_(PrimitiveType0),int
[0.0161] cursor,(NameExpr0)^(MethodCallExpr2)^(MethodCallExpr)^(ExpressionStmt)^(BlockStmt)_(ForStmt)_(VariableDeclarationExpr)_(VariableDeclarator)_(VariableDeclaratorId0),i
[0.0157] record,(NameExpr0)^(MethodCallExpr)^(ExpressionStmt)^(BlockStmt)_(ForStmt)_(BlockStmt)_(ExpressionStmt)_(MethodCallExpr0)_(NameExpr3),preparefor
[0.0149] cursor,(NameExpr0)^(MethodCallExpr)^(IfStmt)_(BlockStmt)_(ForStmt)_(VariableDeclarationExpr)_(PrimitiveType0),int
[0.0148] hasnext,(NameExpr2)^(MethodCallExpr)^(IfStmt)_(BlockStmt)_(ForStmt)_(VariableDeclarationExpr)_(VariableDeclarator)_(IntegerLiteralExpr1),0
[0.0143] record,(NameExpr0)^(MethodCallExpr)^(ExpressionStmt)^(BlockStmt)_(ForStmt)_(UnaryExpr:posIncrement)_(NameExpr0),i
[0.0143] int,(PrimitiveType0)^(VariableDeclarationExpr)^(ForStmt)_(BlockStmt)_(ExpressionStmt)_(MethodCallExpr0)_(MethodCallExpr0)_(NameExpr3),getquick
[0.0128] METHOD_NAME,(NameExpr2)^(MethodDeclaration)_(BlockStmt)_(IfStmt)_(BlockStmt)_(ExpressionStmt)_(MethodCallExpr0)_(NameExpr0),record
[0.0127] i,(NameExpr0)^(UnaryExpr:posIncrement)^(ForStmt)_(BlockStmt)_(ExpressionStmt)_(MethodCallExpr0)_(MethodCallExpr0)_(NameExpr3),getquick
[0.0124] 0,(IntegerLiteralExpr1)^(VariableDeclarator)^(VariableDeclarationExpr)_(VariableDeclarator)_(VariableDeclaratorId0),n
[0.0124] n,(NameExpr1)^(BinaryExpr:less)^(ForStmt)_(VariableDeclarationExpr)_(PrimitiveType0),int
[0.0117] hasnext,(NameExpr2)^(MethodCallExpr)^(IfStmt)^(BlockStmt)_(ReturnStmt)_(BooleanLiteralExpr0),false
[0.0116] i,(VariableDeclaratorId0)^(VariableDeclarator)^(VariableDeclarationExpr)^(ForStmt)_(UnaryExpr:posIncrement)_(NameExpr0),i
[0.0114] override,(NameExpr0)^(MarkerAnnotationExpr)^(MethodDeclaration)_(PrimitiveType1),boolean
[0.0109] boolean,(PrimitiveType1)^(MethodDeclaration)_(BlockStmt)_(IfStmt)_(BlockStmt)_(ExpressionStmt)_(MethodCallExpr0)_(MethodCallExpr2)_(NameExpr0),cursor
[0.0090] functions,(NameExpr0)^(MethodCallExpr)^(VariableDeclarator)^(VariableDeclarationExpr)^(ForStmt)_(BlockStmt)_(ExpressionStmt)_(MethodCallExpr0)_(NameExpr2),record
[0.0083] cursor,(NameExpr0)^(MethodCallExpr)_(NameExpr2),hasnext
[0.0081] functions,(NameExpr0)^(MethodCallExpr0)^(MethodCallExpr)_(NameExpr2),record
[0.0079] n,(NameExpr1)^(BinaryExpr:less)^(ForStmt)_(VariableDeclarationExpr)_(VariableDeclarator)_(VariableDeclaratorId0),i
[0.0076] n,(VariableDeclaratorId0)^(VariableDeclarator)^(VariableDeclarationExpr)^(ForStmt)^(BlockStmt)^(IfStmt)^(BlockStmt)_(ReturnStmt)_(BooleanLiteralExpr0),false
[0.0074] 0,(IntegerLiteralExpr1)^(VariableDeclarator)^(VariableDeclarationExpr)^(ForStmt)_(BlockStmt)_(ExpressionStmt)_(MethodCallExpr0)_(MethodCallExpr0)_(NameExpr2),i
[0.0070] boolean,(PrimitiveType1)^(MethodDeclaration)_(BlockStmt)_(IfStmt)_(BlockStmt)_(ForStmt)_(VariableDeclarationExpr)_(PrimitiveType0),int
[0.0066] cursor,(NameExpr0)^(MethodCallExpr)^(IfStmt)_(BlockStmt)_(ForStmt)_(VariableDeclarationExpr)_(VariableDeclarator)_(MethodCallExpr1)_(NameExpr0),functions
[0.0059] METHOD_NAME,(NameExpr2)^(MethodDeclaration)_(BlockStmt)_(IfStmt)_(BlockStmt)_(ExpressionStmt)_(MethodCallExpr0)_(MethodCallExpr2)_(NameExpr2),next
[0.0058] next,(NameExpr2)^(MethodCallExpr2)^(MethodCallExpr)^(ExpressionStmt)^(BlockStmt)_(ForStmt)_(VariableDeclarationExpr)_(VariableDeclarator)_(VariableDeclaratorId0),n
[0.0058] cursor,(NameExpr0)^(MethodCallExpr2)^(MethodCallExpr)^(ExpressionStmt)^(BlockStmt)_(ForStmt)_(BinaryExpr:less)_(NameExpr1),n
[0.0056] i,(NameExpr0)^(BinaryExpr:less)^(ForStmt)^(BlockStmt)^(IfStmt)^(BlockStmt)_(ReturnStmt)_(BooleanLiteralExpr0),false
[0.0055] i,(NameExpr0)^(BinaryExpr:less)_(NameExpr1),n
[0.0049] i,(VariableDeclaratorId0)^(VariableDeclarator)^(VariableDeclarationExpr)_(VariableDeclarator)_(VariableDeclaratorId0),n
[0.0049] cursor,(NameExpr0)^(MethodCallExpr)^(IfStmt)_(BlockStmt)_(ForStmt)_(VariableDeclarationExpr)_(VariableDeclarator)_(VariableDeclaratorId0),n
[0.0047] int,(PrimitiveType0)^(VariableDeclarationExpr)^(ForStmt)^(BlockStmt)^(IfStmt)^(BlockStmt)_(ReturnStmt)_(BooleanLiteralExpr0),false
[0.0044] of,(NameExpr3)^(MethodCallExpr)^(ExpressionStmt)^(BlockStmt)_(ForStmt)_(BlockStmt)_(ExpressionStmt)_(MethodCallExpr0)_(NameExpr3),preparefor
[0.0043] METHOD_NAME,(NameExpr2)^(MethodDeclaration)_(BlockStmt)_(IfStmt)_(BlockStmt)_(ForStmt)_(BinaryExpr:less)_(NameExpr0),i
[0.0043] of,(NameExpr3)^(MethodCallExpr)^(ExpressionStmt)^(BlockStmt)_(ForStmt)_(BinaryExpr:less)_(NameExpr0),i
[0.0040] of,(NameExpr3)^(MethodCallExpr)^(ExpressionStmt)^(BlockStmt)_(ForStmt)_(VariableDeclarationExpr)_(VariableDeclarator)_(MethodCallExpr1)_(NameExpr0),functions
[0.0039] of,(NameExpr3)^(MethodCallExpr)^(ExpressionStmt)^(BlockStmt)_(ForStmt)_(BinaryExpr:less)_(NameExpr1),n
[0.0038] cursor,(NameExpr0)^(MethodCallExpr)^(IfStmt)_(BlockStmt)_(ForStmt)_(UnaryExpr:posIncrement)_(NameExpr0),i
[0.0037] next,(NameExpr2)^(MethodCallExpr2)^(MethodCallExpr)^(ExpressionStmt)^(BlockStmt)_(ForStmt)_(BinaryExpr:less)_(NameExpr1),n
[0.0034] boolean,(PrimitiveType1)^(MethodDeclaration)_(BlockStmt)_(IfStmt)_(MethodCallExpr0)_(NameExpr2),hasnext
[0.0034] i,(NameExpr0)^(BinaryExpr:less)^(ForStmt)_(UnaryExpr:posIncrement)_(NameExpr0),i
[0.0034] hasnext,(NameExpr2)^(MethodCallExpr)^(IfStmt)_(BlockStmt)_(ExpressionStmt)_(MethodCallExpr0)_(MethodCallExpr2)_(NameExpr2),next
[0.0034] int,(PrimitiveType0)^(VariableDeclarationExpr)^(ForStmt)_(BlockStmt)_(ExpressionStmt)_(MethodCallExpr0)_(MethodCallExpr0)_(NameExpr2),i
[0.0033] next,(NameExpr2)^(MethodCallExpr2)^(MethodCallExpr)^(ExpressionStmt)^(BlockStmt)_(ForStmt)_(UnaryExpr:posIncrement)_(NameExpr0),i
[0.0033] 0,(IntegerLiteralExpr1)^(VariableDeclarator)^(VariableDeclarationExpr)^(ForStmt)_(BlockStmt)_(ExpressionStmt)_(MethodCallExpr0)_(MethodCallExpr0)_(NameExpr0),functions
[0.0032] i,(NameExpr0)^(UnaryExpr:posIncrement)^(ForStmt)_(BlockStmt)_(ExpressionStmt)_(MethodCallExpr0)_(MethodCallExpr0)_(NameExpr2),i
[0.0030] record,(NameExpr0)^(MethodCallExpr)^(ExpressionStmt)^(BlockStmt)_(ForStmt)_(VariableDeclarationExpr)_(VariableDeclarator)_(MethodCallExpr1)_(NameExpr0),functions
[0.0029] functions,(NameExpr0)^(MethodCallExpr0)_(NameExpr2),i
[0.0028] next,(NameExpr2)^(MethodCallExpr2)^(MethodCallExpr)^(ExpressionStmt)^(BlockStmt)_(ForStmt)_(VariableDeclarationExpr)_(VariableDeclarator)_(IntegerLiteralExpr1),0
[0.0028] n,(NameExpr1)^(BinaryExpr:less)^(ForStmt)^(BlockStmt)_(ReturnStmt)_(BooleanLiteralExpr0),true
[0.0026] boolean,(PrimitiveType1)^(MethodDeclaration)_(BlockStmt)_(IfStmt)_(BlockStmt)_(ForStmt)_(BinaryExpr:less)_(NameExpr1),n
[0.0025] hasnext,(NameExpr2)^(MethodCallExpr)^(IfStmt)_(BlockStmt)_(ReturnStmt)_(BooleanLiteralExpr0),true
[0.0024] hasnext,(NameExpr2)^(MethodCallExpr)^(IfStmt)_(BlockStmt)_(ExpressionStmt)_(MethodCallExpr0)_(MethodCallExpr2)_(NameExpr0),cursor
[0.0023] size,(NameExpr2)^(MethodCallExpr)^(VariableDeclarator)^(VariableDeclarationExpr)^(ForStmt)_(BlockStmt)_(ExpressionStmt)_(MethodCallExpr0)_(NameExpr2),record
[0.0023] of,(NameExpr3)^(MethodCallExpr)^(ExpressionStmt)^(BlockStmt)_(ForStmt)_(VariableDeclarationExpr)_(VariableDeclarator)_(VariableDeclaratorId0),i
[0.0022] boolean,(PrimitiveType1)^(MethodDeclaration)_(BlockStmt)_(IfStmt)_(BlockStmt)_(ExpressionStmt)_(MethodCallExpr0)_(NameExpr0),record
[0.0020] n,(VariableDeclaratorId0)^(VariableDeclarator)^(VariableDeclarationExpr)^(ForStmt)_(UnaryExpr:posIncrement)_(NameExpr0),i
[0.0020] hasnext,(NameExpr2)^(MethodCallExpr)^(IfStmt)_(BlockStmt)_(ForStmt)_(VariableDeclarationExpr)_(VariableDeclarator)_(VariableDeclaratorId0),i
[0.0020] METHOD_NAME,(NameExpr2)^(MethodDeclaration)_(BlockStmt)_(ReturnStmt)_(BooleanLiteralExpr0),false
[0.0019] i,(NameExpr0)^(UnaryExpr:posIncrement)^(ForStmt)^(BlockStmt)_(ReturnStmt)_(BooleanLiteralExpr0),true
[0.0016] record,(NameExpr0)^(MethodCallExpr)^(ExpressionStmt)^(BlockStmt)_(ForStmt)_(VariableDeclarationExpr)_(VariableDeclarator)_(IntegerLiteralExpr1),0
[0.0015] record,(NameExpr0)^(MethodCallExpr)^(ExpressionStmt)^(BlockStmt)_(ForStmt)_(VariableDeclarationExpr)_(VariableDeclarator)_(VariableDeclaratorId0),n
[0.0014] METHOD_NAME,(NameExpr2)^(MethodDeclaration)_(BlockStmt)_(IfStmt)_(BlockStmt)_(ForStmt)_(UnaryExpr:posIncrement)_(NameExpr0),i
[0.0014] size,(NameExpr2)^(MethodCallExpr)^(VariableDeclarator)^(VariableDeclarationExpr)^(ForStmt)^(BlockStmt)_(ReturnStmt)_(BooleanLiteralExpr0),true
[0.0013] functions,(NameExpr0)^(MethodCallExpr)_(NameExpr2),size
[0.0013] 0,(IntegerLiteralExpr1)^(VariableDeclarator)^(VariableDeclarationExpr)_(VariableDeclarator)_(MethodCallExpr1)_(NameExpr2),size
[0.0013] of,(NameExpr3)^(MethodCallExpr)^(ExpressionStmt)^(BlockStmt)_(ForStmt)_(VariableDeclarationExpr)_(PrimitiveType0),int
[0.0012] METHOD_NAME,(NameExpr2)^(MethodDeclaration)_(BlockStmt)_(IfStmt)_(BlockStmt)_(ReturnStmt)_(BooleanLiteralExpr0),true
[0.0012] of,(NameExpr3)^(MethodCallExpr)^(ExpressionStmt)^(BlockStmt)_(ForStmt)_(VariableDeclarationExpr)_(VariableDeclarator)_(IntegerLiteralExpr1),0
[0.0012] METHOD_NAME,(NameExpr2)^(MethodDeclaration)_(BlockStmt)_(IfStmt)_(MethodCallExpr0)_(NameExpr0),cursor
[0.0012] hasnext,(NameExpr2)^(MethodCallExpr)^(IfStmt)_(BlockStmt)_(ForStmt)_(BlockStmt)_(ExpressionStmt)_(MethodCallExpr0)_(NameExpr3),preparefor
[0.0011] record,(NameExpr0)^(MethodCallExpr)^(ExpressionStmt)^(BlockStmt)_(ReturnStmt)_(BooleanLiteralExpr0),true
[0.0011] hasnext,(NameExpr2)^(MethodCallExpr)^(IfStmt)_(BlockStmt)_(ForStmt)_(VariableDeclarationExpr)_(PrimitiveType0),int
[0.0011] cursor,(NameExpr0)^(MethodCallExpr)^(IfStmt)_(BlockStmt)_(ForStmt)_(BlockStmt)_(ExpressionStmt)_(MethodCallExpr0)_(NameExpr3),preparefor
[0.0011] boolean,(PrimitiveType1)^(MethodDeclaration)_(BlockStmt)_(IfStmt)_(BlockStmt)_(ExpressionStmt)_(MethodCallExpr0)_(MethodCallExpr2)_(NameExpr2),next
[0.0010] cursor,(NameExpr0)^(MethodCallExpr2)^(MethodCallExpr)^(ExpressionStmt)^(BlockStmt)_(ForStmt)_(VariableDeclarationExpr)_(PrimitiveType0),int
[0.0010] METHOD_NAME,(NameExpr2)^(MethodDeclaration)_(BlockStmt)_(IfStmt)_(BlockStmt)_(ExpressionStmt)_(MethodCallExpr0)_(MethodCallExpr2)_(NameExpr0),cursor
[0.0010] of,(NameExpr3)^(MethodCallExpr)^(ExpressionStmt)^(BlockStmt)_(ForStmt)_(UnaryExpr:posIncrement)_(NameExpr0),i
[0.0009] record,(NameExpr0)^(MethodCallExpr)^(ExpressionStmt)^(BlockStmt)_(ForStmt)_(VariableDeclarationExpr)_(PrimitiveType0),int
[0.0009] of,(NameExpr3)^(MethodCallExpr)^(ExpressionStmt)^(BlockStmt)_(ForStmt)_(VariableDeclarationExpr)_(VariableDeclarator)_(MethodCallExpr1)_(NameExpr2),size
[0.0009] of,(NameExpr3)^(MethodCallExpr)^(ExpressionStmt)^(BlockStmt)_(ReturnStmt)_(BooleanLiteralExpr0),true
[0.0007] int,(PrimitiveType0)^(VariableDeclarationExpr)_(VariableDeclarator)_(MethodCallExpr1)_(NameExpr0),functions
[0.0007] n,(VariableDeclaratorId0)^(VariableDeclarator)^(VariableDeclarationExpr)^(ForStmt)_(BlockStmt)_(ExpressionStmt)_(MethodCallExpr0)_(NameExpr3),preparefor
[0.0007] hasnext,(NameExpr2)^(MethodCallExpr)^(IfStmt)_(BlockStmt)_(ForStmt)_(BinaryExpr:less)_(NameExpr1),n
[0.0007] i,(NameExpr0)^(BinaryExpr:less)^(ForStmt)_(VariableDeclarationExpr)_(VariableDeclarator)_(IntegerLiteralExpr1),0
[0.0006] n,(NameExpr1)^(BinaryExpr:less)^(ForStmt)_(VariableDeclarationExpr)_(VariableDeclarator)_(MethodCallExpr1)_(NameExpr0),functions
[0.0006] functions,(NameExpr0)^(MethodCallExpr)^(VariableDeclarator)^(VariableDeclarationExpr)^(ForStmt)^(BlockStmt)_(ReturnStmt)_(BooleanLiteralExpr0),true
[0.0006] record,(NameExpr0)^(MethodCallExpr)^(ExpressionStmt)^(BlockStmt)_(ForStmt)_(BinaryExpr:less)_(NameExpr1),n
[0.0006] n,(VariableDeclaratorId0)^(VariableDeclarator)^(VariableDeclarationExpr)^(ForStmt)^(BlockStmt)_(ReturnStmt)_(BooleanLiteralExpr0),true
[0.0006] cursor,(NameExpr0)^(MethodCallExpr)^(IfStmt)_(BlockStmt)_(ExpressionStmt)_(MethodCallExpr0)_(NameExpr3),of
[0.0005] n,(NameExpr1)^(BinaryExpr:less)^(ForStmt)_(VariableDeclarationExpr)_(VariableDeclarator)_(MethodCallExpr1)_(NameExpr2),size
[0.0005] hasnext,(NameExpr2)^(MethodCallExpr)^(IfStmt)_(BlockStmt)_(ForStmt)_(BlockStmt)_(ExpressionStmt)_(MethodCallExpr0)_(NameExpr2),record
[0.0005] functions,(NameExpr0)^(MethodCallExpr)^(VariableDeclarator)^(VariableDeclarationExpr)^(ForStmt)_(BlockStmt)_(ExpressionStmt)_(MethodCallExpr0)_(NameExpr3),preparefor
[0.0004] cursor,(NameExpr0)^(MethodCallExpr)^(IfStmt)_(BlockStmt)_(ExpressionStmt)_(MethodCallExpr0)_(MethodCallExpr2)_(NameExpr2),next
[0.0004] i,(NameExpr0)^(BinaryExpr:less)^(ForStmt)_(VariableDeclarationExpr)_(VariableDeclarator)_(MethodCallExpr1)_(NameExpr2),size
[0.0003] i,(VariableDeclaratorId0)^(VariableDeclarator)^(VariableDeclarationExpr)^(ForStmt)^(BlockStmt)^(IfStmt)^(BlockStmt)_(ReturnStmt)_(BooleanLiteralExpr0),false
[0.0003] hasnext,(NameExpr2)^(MethodCallExpr)^(IfStmt)_(BlockStmt)_(ForStmt)_(BinaryExpr:less)_(NameExpr0),i
[0.0002] hasnext,(NameExpr2)^(MethodCallExpr)^(IfStmt)_(BlockStmt)_(ExpressionStmt)_(MethodCallExpr0)_(NameExpr0),record
[0.0002] of,(NameExpr3)^(MethodCallExpr)^(ExpressionStmt)^(BlockStmt)_(ForStmt)_(VariableDeclarationExpr)_(VariableDeclarator)_(VariableDeclaratorId0),n
[0.0002] boolean,(PrimitiveType1)^(MethodDeclaration)_(BlockStmt)_(IfStmt)_(BlockStmt)_(ForStmt)_(UnaryExpr:posIncrement)_(NameExpr0),i
[0.0001] record,(NameExpr0)^(MethodCallExpr)^(ExpressionStmt)^(BlockStmt)^(IfStmt)^(BlockStmt)_(ReturnStmt)_(BooleanLiteralExpr0),false
[0.0001] hasnext,(NameExpr2)^(MethodCallExpr)^(IfStmt)_(BlockStmt)_(ForStmt)_(VariableDeclarationExpr)_(VariableDeclarator)_(MethodCallExpr1)_(NameExpr0),functions
[0.0001] boolean,(PrimitiveType1)^(MethodDeclaration)_(BlockStmt)_(IfStmt)_(BlockStmt)_(ReturnStmt)_(BooleanLiteralExpr0),true
[0.0001] METHOD_NAME,(NameExpr2)^(MethodDeclaration)_(BlockStmt)_(IfStmt)_(BlockStmt)_(ForStmt)_(VariableDeclarationExpr)_(VariableDeclarator)_(VariableDeclaratorId0),n
[0.0001] n,(VariableDeclaratorId0)^(VariableDeclarator)_(MethodCallExpr1)_(NameExpr0),functions
[0.0001] record,(NameExpr0)^(MethodCallExpr)^(ExpressionStmt)^(BlockStmt)_(ForStmt)_(VariableDeclarationExpr)_(VariableDeclarator)_(MethodCallExpr1)_(NameExpr2),size
[0.0001] cursor,(NameExpr0)^(MethodCallExpr)^(IfStmt)_(BlockStmt)_(ForStmt)_(VariableDeclarationExpr)_(VariableDeclarator)_(VariableDeclaratorId0),i
[0.0001] n,(NameExpr1)^(BinaryExpr:less)^(ForStmt)_(VariableDeclarationExpr)_(VariableDeclarator)_(VariableDeclaratorId0),n
[0.0001] hasnext,(NameExpr2)^(MethodCallExpr)^(IfStmt)_(BlockStmt)_(ExpressionStmt)_(MethodCallExpr0)_(NameExpr3),of
[0.0001] n,(VariableDeclaratorId0)^(VariableDeclarator)^(VariableDeclarationExpr)^(ForStmt)_(BlockStmt)_(ExpressionStmt)_(MethodCallExpr0)_(MethodCallExpr0)_(NameExpr2),i
[0.0001] METHOD_NAME,(NameExpr2)^(MethodDeclaration)_(BlockStmt)_(IfStmt)_(BlockStmt)_(ForStmt)_(VariableDeclarationExpr)_(VariableDeclarator)_(IntegerLiteralExpr1),0
[0.0001] cursor,(NameExpr0)^(MethodCallExpr2)_(NameExpr2),next
[0.0001] n,(VariableDeclaratorId0)^(VariableDeclarator)^(VariableDeclarationExpr)^(ForStmt)_(BlockStmt)_(ExpressionStmt)_(MethodCallExpr0)_(NameExpr2),record
[0.0001] i,(VariableDeclaratorId0)^(VariableDeclarator)^(VariableDeclarationExpr)^(ForStmt)_(BlockStmt)_(ExpressionStmt)_(MethodCallExpr0)_(NameExpr3),preparefor
[0.0001] cursor,(NameExpr0)^(MethodCallExpr2)^(MethodCallExpr)^(ExpressionStmt)^(BlockStmt)_(ForStmt)_(VariableDeclarationExpr)_(VariableDeclarator)_(VariableDeclaratorId0),n
[0.0001] n,(NameExpr1)^(BinaryExpr:less)^(ForStmt)^(BlockStmt)^(IfStmt)^(BlockStmt)_(ReturnStmt)_(BooleanLiteralExpr0),false
[0.0001] of,(NameExpr3)^(MethodCallExpr)^(ExpressionStmt)^(BlockStmt)^(IfStmt)^(BlockStmt)_(ReturnStmt)_(BooleanLiteralExpr0),false
[0.0001] i,(NameExpr0)^(BinaryExpr:less)^(ForStmt)^(BlockStmt)_(ReturnStmt)_(BooleanLiteralExpr0),true
[0.0001] of,(NameExpr3)^(MethodCallExpr)^(ExpressionStmt)^(BlockStmt)_(ForStmt)_(BlockStmt)_(ExpressionStmt)_(MethodCallExpr0)_(NameExpr2),record
[0.0001] boolean,(PrimitiveType1)^(MethodDeclaration)_(BlockStmt)_(IfStmt)_(BlockStmt)_(ForStmt)_(VariableDeclarationExpr)_(VariableDeclarator)_(VariableDeclaratorId0),n
[0.0001] METHOD_NAME,(NameExpr2)^(MethodDeclaration)_(BlockStmt)_(IfStmt)_(BlockStmt)_(ForStmt)_(BinaryExpr:less)_(NameExpr1),n
[0.0001] 0,(IntegerLiteralExpr1)^(VariableDeclarator)^(VariableDeclarationExpr)_(VariableDeclarator)_(MethodCallExpr1)_(NameExpr0),functions
[0.0001] i,(NameExpr0)^(UnaryExpr:posIncrement)^(ForStmt)_(BlockStmt)_(ExpressionStmt)_(MethodCallExpr0)_(MethodCallExpr0)_(NameExpr0),functions
[0.0001] int,(PrimitiveType0)^(VariableDeclarationExpr)^(ForStmt)^(BlockStmt)_(ReturnStmt)_(BooleanLiteralExpr0),true
[0.0001] i,(VariableDeclaratorId0)^(VariableDeclarator)^(VariableDeclarationExpr)_(VariableDeclarator)_(MethodCallExpr1)_(NameExpr2),size
[0.0000] boolean,(PrimitiveType1)^(MethodDeclaration)_(NameExpr2),METHOD_NAME
[0.0000] i,(NameExpr0)^(UnaryExpr:posIncrement)^(ForStmt)_(BlockStmt)_(ExpressionStmt)_(MethodCallExpr0)_(NameExpr3),preparefor
[0.0000] METHOD_NAME,(NameExpr2)^(MethodDeclaration)_(BlockStmt)_(IfStmt)_(MethodCallExpr0)_(NameExpr2),hasnext
[0.0000] next,(NameExpr2)^(MethodCallExpr2)^(MethodCallExpr)^(ExpressionStmt)^(BlockStmt)_(ForStmt)_(VariableDeclarationExpr)_(PrimitiveType0),int
[0.0000] next,(NameExpr2)^(MethodCallExpr2)^(MethodCallExpr)^(ExpressionStmt)^(BlockStmt)_(ForStmt)_(VariableDeclarationExpr)_(VariableDeclarator)_(VariableDeclaratorId0),i
[0.0000] cursor,(NameExpr0)^(MethodCallExpr)^(IfStmt)_(BlockStmt)_(ForStmt)_(BinaryExpr:less)_(NameExpr0),i
[0.0000] int,(PrimitiveType0)^(VariableDeclarationExpr)^(ForStmt)_(BlockStmt)_(ExpressionStmt)_(MethodCallExpr0)_(NameExpr3),preparefor
[0.0000] cursor,(NameExpr0)^(MethodCallExpr)^(IfStmt)_(BlockStmt)_(ExpressionStmt)_(MethodCallExpr0)_(NameExpr0),record
[0.0000] i,(VariableDeclaratorId0)^(VariableDeclarator)^(VariableDeclarationExpr)^(ForStmt)_(BlockStmt)_(ExpressionStmt)_(MethodCallExpr0)_(MethodCallExpr0)_(NameExpr2),i
[0.0000] cursor,(NameExpr0)^(MethodCallExpr2)^(MethodCallExpr)^(ExpressionStmt)^(BlockStmt)_(ForStmt)_(UnaryExpr:posIncrement)_(NameExpr0),i
[0.0000] i,(NameExpr0)^(BinaryExpr:less)^(ForStmt)_(VariableDeclarationExpr)_(VariableDeclarator)_(VariableDeclaratorId0),n
[0.0000] int,(PrimitiveType0)^(VariableDeclarationExpr)^(ForStmt)_(BlockStmt)_(ExpressionStmt)_(MethodCallExpr0)_(MethodCallExpr0)_(NameExpr0),functions
[0.0000] i,(NameExpr0)^(UnaryExpr:posIncrement)^(ForStmt)^(BlockStmt)^(IfStmt)^(BlockStmt)_(ReturnStmt)_(BooleanLiteralExpr0),false
[0.0000] cursor,(NameExpr0)^(MethodCallExpr)^(IfStmt)_(BlockStmt)_(ForStmt)_(BinaryExpr:less)_(NameExpr1),n
[0.0000] 0,(IntegerLiteralExpr1)^(VariableDeclarator)^(VariableDeclarationExpr)^(ForStmt)^(BlockStmt)^(IfStmt)^(BlockStmt)_(ReturnStmt)_(BooleanLiteralExpr0),false
[0.0000] int,(PrimitiveType0)^(VariableDeclarationExpr)^(ForStmt)_(UnaryExpr:posIncrement)_(NameExpr0),i
[0.0000] size,(NameExpr2)^(MethodCallExpr)^(VariableDeclarator)^(VariableDeclarationExpr)^(ForStmt)_(BlockStmt)_(ExpressionStmt)_(MethodCallExpr0)_(NameExpr3),preparefor
[0.0000] i,(VariableDeclaratorId0)^(VariableDeclarator)^(VariableDeclarationExpr)^(ForStmt)_(BlockStmt)_(ExpressionStmt)_(MethodCallExpr0)_(MethodCallExpr0)_(NameExpr0),functions
[0.0000] i,(VariableDeclaratorId0)^(VariableDeclarator)^(VariableDeclarationExpr)^(ForStmt)_(BlockStmt)_(ExpressionStmt)_(MethodCallExpr0)_(NameExpr2),record
[0.0000] 0,(IntegerLiteralExpr1)^(VariableDeclarator)^(VariableDeclarationExpr)^(ForStmt)_(BlockStmt)_(ExpressionStmt)_(MethodCallExpr0)_(NameExpr3),preparefor
[0.0000] hasnext,(NameExpr2)^(MethodCallExpr)^(IfStmt)_(BlockStmt)_(ForStmt)_(UnaryExpr:posIncrement)_(NameExpr0),i
[0.0000] cursor,(NameExpr0)^(MethodCallExpr)^(IfStmt)_(BlockStmt)_(ForStmt)_(VariableDeclarationExpr)_(VariableDeclarator)_(MethodCallExpr1)_(NameExpr2),size
[0.0000] i,(NameExpr0)^(BinaryExpr:less)^(ForStmt)_(VariableDeclarationExpr)_(PrimitiveType0),int
[0.0000] cursor,(NameExpr0)^(MethodCallExpr2)^(MethodCallExpr)^(ExpressionStmt)^(BlockStmt)_(ForStmt)_(VariableDeclarationExpr)_(VariableDeclarator)_(IntegerLiteralExpr1),0
[0.0000] i,(VariableDeclaratorId0)^(VariableDeclarator)^(VariableDeclarationExpr)^(ForStmt)_(BlockStmt)_(ExpressionStmt)_(MethodCallExpr0)_(MethodCallExpr0)_(NameExpr3),getquick
[0.0000] i,(VariableDeclaratorId0)^(VariableDeclarator)^(VariableDeclarationExpr)^(ForStmt)^(BlockStmt)_(ReturnStmt)_(BooleanLiteralExpr0),true
[0.0000] i,(NameExpr0)^(BinaryExpr:less)^(ForStmt)_(VariableDeclarationExpr)_(VariableDeclarator)_(MethodCallExpr1)_(NameExpr0),functions
[0.0000] hasnext,(NameExpr2)^(MethodCallExpr)^(IfStmt)_(BlockStmt)_(ForStmt)_(VariableDeclarationExpr)_(VariableDeclarator)_(VariableDeclaratorId0),n
[0.0000] n,(VariableDeclaratorId0)^(VariableDeclarator)^(VariableDeclarationExpr)^(ForStmt)_(BlockStmt)_(ExpressionStmt)_(MethodCallExpr0)_(MethodCallExpr0)_(NameExpr0),functions
[0.0000] METHOD_NAME,(NameExpr2)^(MethodDeclaration)_(BlockStmt)_(IfStmt)_(BlockStmt)_(ForStmt)_(VariableDeclarationExpr)_(VariableDeclarator)_(VariableDeclaratorId0),i
[0.0000] override,(NameExpr0)^(MarkerAnnotationExpr)^(MethodDeclaration)_(NameExpr2),METHOD_NAME
[0.0000] cursor,(NameExpr0)^(MethodCallExpr)^(IfStmt)^(BlockStmt)_(ReturnStmt)_(BooleanLiteralExpr0),false
[0.0000] next,(NameExpr2)^(MethodCallExpr2)^(MethodCallExpr)_(NameExpr3),of
[0.0000] 0,(IntegerLiteralExpr1)^(VariableDeclarator)^(VariableDeclarationExpr)^(ForStmt)_(BlockStmt)_(ExpressionStmt)_(MethodCallExpr0)_(MethodCallExpr0)_(NameExpr3),getquick
[0.0000] cursor,(NameExpr0)^(MethodCallExpr2)^(MethodCallExpr)_(NameExpr3),of
[0.0000] i,(VariableDeclaratorId0)^(VariableDeclarator)_(IntegerLiteralExpr1),0
[0.0000] record,(NameExpr0)^(MethodCallExpr)^(ExpressionStmt)^(BlockStmt)_(ForStmt)_(BinaryExpr:less)_(NameExpr0),i
[0.0000] boolean,(PrimitiveType1)^(MethodDeclaration)_(BlockStmt)_(IfStmt)_(BlockStmt)_(ForStmt)_(BinaryExpr:less)_(NameExpr0),i
[0.0000] functions,(NameExpr0)^(MethodCallExpr)^(VariableDeclarator)^(VariableDeclarationExpr)^(ForStmt)_(UnaryExpr:posIncrement)_(NameExpr0),i
[0.0000] cursor,(NameExpr0)^(MethodCallExpr)^(IfStmt)_(BlockStmt)_(ReturnStmt)_(BooleanLiteralExpr0),true
[0.0000] boolean,(PrimitiveType1)^(MethodDeclaration)_(BlockStmt)_(IfStmt)_(BlockStmt)_(ForStmt)_(VariableDeclarationExpr)_(VariableDeclarator)_(IntegerLiteralExpr1),0
[0.0000] int,(PrimitiveType0)^(VariableDeclarationExpr)^(ForStmt)_(BlockStmt)_(ExpressionStmt)_(MethodCallExpr0)_(NameExpr2),record
[0.0000] boolean,(PrimitiveType1)^(MethodDeclaration)_(BlockStmt)_(IfStmt)_(MethodCallExpr0)_(NameExpr0),cursor
[0.0000] n,(NameExpr1)^(BinaryExpr:less)^(ForStmt)_(UnaryExpr:posIncrement)_(NameExpr0),i
[0.0000] n,(VariableDeclaratorId0)^(VariableDeclarator)^(VariableDeclarationExpr)^(ForStmt)_(BlockStmt)_(ExpressionStmt)_(MethodCallExpr0)_(MethodCallExpr0)_(NameExpr3),getquick
[0.0000] int,(PrimitiveType0)^(VariableDeclarationExpr)_(VariableDeclarator)_(VariableDeclaratorId0),n
[0.0000] record,(NameExpr0)^(MethodCallExpr)_(MethodCallExpr2)_(NameExpr0),cursor
[0.0000] cursor,(NameExpr0)^(MethodCallExpr2)^(MethodCallExpr)^(ExpressionStmt)^(BlockStmt)_(ForStmt)_(BinaryExpr:less)_(NameExpr0),i
[0.0000] 0,(IntegerLiteralExpr1)^(VariableDeclarator)^(VariableDeclarationExpr)^(ForStmt)^(BlockStmt)_(ReturnStmt)_(BooleanLiteralExpr0),true
[0.0000] next,(NameExpr2)^(MethodCallExpr2)^(MethodCallExpr)^(ExpressionStmt)^(BlockStmt)_(ForStmt)_(BinaryExpr:less)_(NameExpr0),i
[0.0000] i,(NameExpr0)^(BinaryExpr:less)^(ForStmt)_(VariableDeclarationExpr)_(VariableDeclarator)_(VariableDeclaratorId0),i
[0.0000] record,(NameExpr0)^(MethodCallExpr)^(ExpressionStmt)^(BlockStmt)_(ForStmt)_(BlockStmt)_(ExpressionStmt)_(MethodCallExpr0)_(NameExpr2),record
[0.0000] cursor,(NameExpr0)^(MethodCallExpr2)^(MethodCallExpr)^(ExpressionStmt)^(BlockStmt)^(IfStmt)^(BlockStmt)_(ReturnStmt)_(BooleanLiteralExpr0),false
[0.0000] n,(VariableDeclaratorId0)^(VariableDeclarator)_(MethodCallExpr1)_(NameExpr2),size
[0.0000] record,(NameExpr0)^(MethodCallExpr)_(MethodCallExpr2)_(NameExpr2),next
[0.0000] n,(NameExpr1)^(BinaryExpr:less)^(ForStmt)_(VariableDeclarationExpr)_(VariableDeclarator)_(IntegerLiteralExpr1),0
[0.0000] 0,(IntegerLiteralExpr1)^(VariableDeclarator)^(VariableDeclarationExpr)^(ForStmt)_(BlockStmt)_(ExpressionStmt)_(MethodCallExpr0)_(NameExpr2),record
[0.0000] record,(NameExpr0)^(MethodCallExpr)^(ExpressionStmt)^(BlockStmt)_(ForStmt)_(VariableDeclarationExpr)_(VariableDeclarator)_(VariableDeclaratorId0),i
[0.0000] i,(VariableDeclaratorId0)^(VariableDeclarator)^(VariableDeclarationExpr)_(VariableDeclarator)_(MethodCallExpr1)_(NameExpr0),functions
[0.0000] boolean,(PrimitiveType1)^(MethodDeclaration)_(BlockStmt)_(IfStmt)_(BlockStmt)_(ExpressionStmt)_(MethodCallExpr0)_(NameExpr3),of
[0.0000] int,(PrimitiveType0)^(VariableDeclarationExpr)_(VariableDeclarator)_(IntegerLiteralExpr1),0
[0.0000] boolean,(PrimitiveType1)^(MethodDeclaration)_(BlockStmt)_(IfStmt)_(BlockStmt)_(ForStmt)_(VariableDeclarationExpr)_(VariableDeclarator)_(VariableDeclaratorId0),i
[0.0000] hasnext,(NameExpr2)^(MethodCallExpr)^(IfStmt)_(BlockStmt)_(ForStmt)_(VariableDeclarationExpr)_(VariableDeclarator)_(MethodCallExpr1)_(NameExpr2),size

topk terminals:
[['cursor', 'record'], ['i', 'record'], ['next', 'true'], ['next', 'false'], ['cursor', '0'], ['cursor', 'cursor'], ['int', 'size'], ['0', 'i'], ['int', 'i'], ['boolean', 'false'], ['size', 'i'], ['cursor', 'true'], ['METHOD_NAME', 'of'], ['METHOD_NAME', 'int'], ['cursor', 'i'], ['record', 'preparefor'], ['cursor', 'int'], ['hasnext', '0'], ['record', 'i'], ['int', 'getquick'], ['METHOD_NAME', 'record'], ['i', 'getquick'], ['0', 'n'], ['n', 'int'], ['hasnext', 'false'], ['i', 'i'], ['override', 'boolean'], ['boolean', 'cursor'], ['functions', 'record'], ['cursor', 'hasnext'], ['functions', 'record'], ['n', 'i'], ['n', 'false'], ['0', 'i'], ['boolean', 'int'], ['cursor', 'functions'], ['METHOD_NAME', 'next'], ['next', 'n'], ['cursor', 'n'], ['i', 'false'], ['i', 'n'], ['i', 'n'], ['cursor', 'n'], ['int', 'false'], ['of', 'preparefor'], ['METHOD_NAME', 'i'], ['of', 'i'], ['of', 'functions'], ['of', 'n'], ['cursor', 'i'], ['next', 'n'], ['boolean', 'hasnext'], ['i', 'i'], ['hasnext', 'next'], ['int', 'i'], ['next', 'i'], ['0', 'functions'], ['i', 'i'], ['record', 'functions'], ['functions', 'i'], ['next', '0'], ['n', 'true'], ['boolean', 'n'], ['hasnext', 'true'], ['hasnext', 'cursor'], ['size', 'record'], ['of', 'i'], ['boolean', 'record'], ['n', 'i'], ['hasnext', 'i'], ['METHOD_NAME', 'false'], ['i', 'true'], ['record', '0'], ['record', 'n'], ['METHOD_NAME', 'i'], ['size', 'true'], ['functions', 'size'], ['0', 'size'], ['of', 'int'], ['METHOD_NAME', 'true'], ['of', '0'], ['METHOD_NAME', 'cursor'], ['hasnext', 'preparefor'], ['record', 'true'], ['hasnext', 'int'], ['cursor', 'preparefor'], ['boolean', 'next'], ['cursor', 'int'], ['METHOD_NAME', 'cursor'], ['of', 'i'], ['record', 'int'], ['of', 'size'], ['of', 'true'], ['int', 'functions'], ['n', 'preparefor'], ['hasnext', 'n'], ['i', '0'], ['n', 'functions'], ['functions', 'true'], ['record', 'n'], ['n', 'true'], ['cursor', 'of'], ['n', 'size'], ['hasnext', 'record'], ['functions', 'preparefor'], ['cursor', 'next'], ['i', 'size'], ['i', 'false'], ['hasnext', 'i'], ['hasnext', 'record'], ['of', 'n'], ['boolean', 'i'], ['record', 'false'], ['hasnext', 'functions'], ['boolean', 'true'], ['METHOD_NAME', 'n'], ['n', 'functions'], ['record', 'size'], ['cursor', 'i'], ['n', 'n'], ['hasnext', 'of'], ['n', 'i'], ['METHOD_NAME', '0'], ['cursor', 'next'], ['n', 'record'], ['i', 'preparefor'], ['cursor', 'n'], ['n', 'false'], ['of', 'false'], ['i', 'true'], ['of', 'record'], ['boolean', 'n'], ['METHOD_NAME', 'n'], ['0', 'functions'], ['i', 'functions'], ['int', 'true'], ['i', 'size'], ['boolean', 'METHOD_NAME'], ['i', 'preparefor'], ['METHOD_NAME', 'hasnext'], ['next', 'int'], ['next', 'i'], ['cursor', 'i'], ['int', 'preparefor'], ['cursor', 'record'], ['i', 'i'], ['cursor', 'i'], ['i', 'n'], ['int', 'functions'], ['i', 'false'], ['cursor', 'n'], ['0', 'false'], ['int', 'i'], ['size', 'preparefor'], ['i', 'functions'], ['i', 'record'], ['0', 'preparefor'], ['hasnext', 'i'], ['cursor', 'size'], ['i', 'int'], ['cursor', '0'], ['i', 'getquick'], ['i', 'true'], ['i', 'functions'], ['hasnext', 'n'], ['n', 'functions'], ['METHOD_NAME', 'i'], ['override', 'METHOD_NAME'], ['cursor', 'false'], ['next', 'of'], ['0', 'getquick'], ['cursor', 'of'], ['i', '0'], ['record', 'i'], ['boolean', 'i'], ['functions', 'i'], ['cursor', 'true'], ['boolean', '0'], ['int', 'record'], ['boolean', 'cursor'], ['n', 'i'], ['n', 'getquick'], ['int', 'n'], ['record', 'cursor'], ['cursor', 'i'], ['0', 'true'], ['next', 'i'], ['i', 'i'], ['record', 'record'], ['cursor', 'false'], ['n', 'size'], ['record', 'next'], ['n', '0'], ['0', 'record'], ['record', 'i'], ['i', 'functions'], ['boolean', 'of'], ['int', '0'], ['boolean', 'i'], ['hasnext', 'size']]

