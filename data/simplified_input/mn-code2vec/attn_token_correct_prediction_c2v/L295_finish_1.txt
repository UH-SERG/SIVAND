
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/qpython-android__qpython/qpython/src/main/java/org/qpython/qpy/console/GenericTermSession_finish.java
method_name = finish
method_body = @Override public void finish() { try { mTermFd.close(); } catch (IOException e) { } super.finish(); }

topk path-contexts:
[0.8204] super,(SuperExpr0)^(MethodCallExpr)_(NameExpr2),finish
[0.0313] close,(NameExpr2)^(MethodCallExpr)^(ExpressionStmt)^(BlockStmt)^(TryStmt)^(BlockStmt)_(ExpressionStmt)_(MethodCallExpr0)_(NameExpr2),finish
[0.0281] METHOD_NAME,(NameExpr2)^(MethodDeclaration)_(BlockStmt)_(ExpressionStmt)_(MethodCallExpr0)_(NameExpr2),finish
[0.0279] void,(VoidType1)^(MethodDeclaration)_(BlockStmt)_(ExpressionStmt)_(MethodCallExpr0)_(NameExpr2),finish
[0.0260] METHOD_NAME,(NameExpr2)^(MethodDeclaration)_(BlockStmt)_(TryStmt)_(BlockStmt)_(ExpressionStmt)_(MethodCallExpr0)_(NameExpr2),close
[0.0174] void,(VoidType1)^(MethodDeclaration)_(BlockStmt)_(TryStmt)_(BlockStmt)_(ExpressionStmt)_(MethodCallExpr0)_(NameExpr2),close
[0.0060] mtermfd,(NameExpr0)^(MethodCallExpr)^(ExpressionStmt)^(BlockStmt)^(TryStmt)^(BlockStmt)_(ExpressionStmt)_(MethodCallExpr0)_(NameExpr2),finish
[0.0054] void,(VoidType1)^(MethodDeclaration)_(BlockStmt)_(TryStmt)_(CatchClause)_(Parameter)_(ClassOrInterfaceType1),ioexception
[0.0048] void,(VoidType1)^(MethodDeclaration)_(BlockStmt)_(ExpressionStmt)_(MethodCallExpr0)_(SuperExpr0),super
[0.0046] override,(NameExpr0)^(MarkerAnnotationExpr)^(MethodDeclaration)_(NameExpr2),METHOD_NAME
[0.0045] mtermfd,(NameExpr0)^(MethodCallExpr)_(NameExpr2),close
[0.0038] ioexception,(ClassOrInterfaceType1)^(Parameter)^(CatchClause)^(TryStmt)^(BlockStmt)_(ExpressionStmt)_(MethodCallExpr0)_(NameExpr2),finish
[0.0036] void,(VoidType1)^(MethodDeclaration)_(BlockStmt)_(TryStmt)_(CatchClause)_(Parameter)_(VariableDeclaratorId0),e
[0.0029] override,(NameExpr0)^(MarkerAnnotationExpr)^(MethodDeclaration)_(VoidType1),void
[0.0027] void,(VoidType1)^(MethodDeclaration)_(BlockStmt)_(TryStmt)_(BlockStmt)_(ExpressionStmt)_(MethodCallExpr0)_(NameExpr0),mtermfd
[0.0025] close,(NameExpr2)^(MethodCallExpr)^(ExpressionStmt)^(BlockStmt)^(TryStmt)^(BlockStmt)_(ExpressionStmt)_(MethodCallExpr0)_(SuperExpr0),super
[0.0019] close,(NameExpr2)^(MethodCallExpr)^(ExpressionStmt)^(BlockStmt)^(TryStmt)_(CatchClause)_(Parameter)_(ClassOrInterfaceType1),ioexception
[0.0012] e,(VariableDeclaratorId0)^(Parameter)_(ClassOrInterfaceType1),ioexception
[0.0011] METHOD_NAME,(NameExpr2)^(MethodDeclaration)_(BlockStmt)_(TryStmt)_(BlockStmt)_(ExpressionStmt)_(MethodCallExpr0)_(NameExpr0),mtermfd
[0.0011] void,(VoidType1)^(MethodDeclaration)_(NameExpr2),METHOD_NAME
[0.0009] mtermfd,(NameExpr0)^(MethodCallExpr)^(ExpressionStmt)^(BlockStmt)^(TryStmt)^(BlockStmt)_(ExpressionStmt)_(MethodCallExpr0)_(SuperExpr0),super
[0.0009] ioexception,(ClassOrInterfaceType1)^(Parameter)^(CatchClause)^(TryStmt)^(BlockStmt)_(ExpressionStmt)_(MethodCallExpr0)_(SuperExpr0),super
[0.0006] e,(VariableDeclaratorId0)^(Parameter)^(CatchClause)^(TryStmt)^(BlockStmt)_(ExpressionStmt)_(MethodCallExpr0)_(NameExpr2),finish
[0.0001] METHOD_NAME,(NameExpr2)^(MethodDeclaration)_(BlockStmt)_(ExpressionStmt)_(MethodCallExpr0)_(SuperExpr0),super
[0.0001] e,(VariableDeclaratorId0)^(Parameter)^(CatchClause)^(TryStmt)^(BlockStmt)_(ExpressionStmt)_(MethodCallExpr0)_(SuperExpr0),super
[0.0000] close,(NameExpr2)^(MethodCallExpr)^(ExpressionStmt)^(BlockStmt)^(TryStmt)_(CatchClause)_(Parameter)_(VariableDeclaratorId0),e
[0.0000] METHOD_NAME,(NameExpr2)^(MethodDeclaration)_(BlockStmt)_(TryStmt)_(CatchClause)_(Parameter)_(ClassOrInterfaceType1),ioexception
[0.0000] METHOD_NAME,(NameExpr2)^(MethodDeclaration)_(BlockStmt)_(TryStmt)_(CatchClause)_(Parameter)_(VariableDeclaratorId0),e
[0.0000] mtermfd,(NameExpr0)^(MethodCallExpr)^(ExpressionStmt)^(BlockStmt)^(TryStmt)_(CatchClause)_(Parameter)_(ClassOrInterfaceType1),ioexception
[0.0000] mtermfd,(NameExpr0)^(MethodCallExpr)^(ExpressionStmt)^(BlockStmt)^(TryStmt)_(CatchClause)_(Parameter)_(VariableDeclaratorId0),e

topk terminals:
[['super', 'finish'], ['close', 'finish'], ['METHOD_NAME', 'finish'], ['void', 'finish'], ['METHOD_NAME', 'close'], ['void', 'close'], ['mtermfd', 'finish'], ['void', 'ioexception'], ['void', 'super'], ['override', 'METHOD_NAME'], ['mtermfd', 'close'], ['ioexception', 'finish'], ['void', 'e'], ['override', 'void'], ['void', 'mtermfd'], ['close', 'super'], ['close', 'ioexception'], ['e', 'ioexception'], ['METHOD_NAME', 'mtermfd'], ['void', 'METHOD_NAME'], ['mtermfd', 'super'], ['ioexception', 'super'], ['e', 'finish'], ['METHOD_NAME', 'super'], ['e', 'super'], ['close', 'e'], ['METHOD_NAME', 'ioexception'], ['METHOD_NAME', 'e'], ['mtermfd', 'ioexception'], ['mtermfd', 'e']]

