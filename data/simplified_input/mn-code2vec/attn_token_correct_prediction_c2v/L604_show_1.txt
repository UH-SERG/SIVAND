
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/w568w__fuckView/app/src/main/java/ml/qingsu/fuckview/base/BasePopupWindow_show.java
method_name = show
method_body = public final void show() { if (isShown) { return; } isShown = true; try { mWindowManager.addView(view, params); onShow(); } catch (WindowManager.BadTokenException e) { e.printStackTrace(); } }

topk path-contexts:
[0.0857] params,(NameExpr3)^(MethodCallExpr)_(NameExpr4),addview
[0.0839] isshown,(NameExpr0)^(IfStmt)^(BlockStmt)_(TryStmt)_(BlockStmt)_(ExpressionStmt)_(MethodCallExpr0)_(NameExpr4),addview
[0.0580] void,(VoidType0)^(MethodDeclaration)_(BlockStmt)_(TryStmt)_(BlockStmt)_(ExpressionStmt)_(MethodCallExpr0)_(NameExpr4),addview
[0.0512] void,(VoidType0)^(MethodDeclaration)_(BlockStmt)_(TryStmt)_(BlockStmt)_(ExpressionStmt)_(MethodCallExpr0)_(NameExpr1),onshow
[0.0512] true,(BooleanLiteralExpr1)^(AssignExpr:assign)^(ExpressionStmt)^(BlockStmt)_(TryStmt)_(BlockStmt)_(ExpressionStmt)_(MethodCallExpr0)_(NameExpr4),addview
[0.0416] isshown,(NameExpr0)^(IfStmt)^(BlockStmt)_(TryStmt)_(BlockStmt)_(ExpressionStmt)_(MethodCallExpr0)_(NameExpr1),onshow
[0.0347] params,(NameExpr3)^(MethodCallExpr)^(ExpressionStmt)^(BlockStmt)_(ExpressionStmt)_(MethodCallExpr0)_(NameExpr1),onshow
[0.0307] true,(BooleanLiteralExpr1)^(AssignExpr:assign)^(ExpressionStmt)^(BlockStmt)_(TryStmt)_(BlockStmt)_(ExpressionStmt)_(MethodCallExpr0)_(NameExpr1),onshow
[0.0302] isshown,(NameExpr0)^(IfStmt)^(BlockStmt)_(TryStmt)_(BlockStmt)_(ExpressionStmt)_(MethodCallExpr0)_(NameExpr0),mwindowmanager
[0.0283] view,(NameExpr2)^(MethodCallExpr)^(ExpressionStmt)^(BlockStmt)_(ExpressionStmt)_(MethodCallExpr0)_(NameExpr1),onshow
[0.0269] isshown,(NameExpr0)^(IfStmt)^(BlockStmt)_(TryStmt)_(BlockStmt)_(ExpressionStmt)_(MethodCallExpr0)_(NameExpr3),params
[0.0259] void,(VoidType0)^(MethodDeclaration)_(BlockStmt)_(ExpressionStmt)_(AssignExpr:assign0)_(NameExpr0),isshown
[0.0247] isshown,(NameExpr0)^(AssignExpr:assign)^(ExpressionStmt)^(BlockStmt)_(TryStmt)_(BlockStmt)_(ExpressionStmt)_(MethodCallExpr0)_(NameExpr4),addview
[0.0239] isshown,(NameExpr0)^(AssignExpr:assign)^(ExpressionStmt)^(BlockStmt)_(TryStmt)_(BlockStmt)_(ExpressionStmt)_(MethodCallExpr0)_(NameExpr1),onshow
[0.0237] params,(NameExpr3)^(MethodCallExpr)^(ExpressionStmt)^(BlockStmt)^(TryStmt)_(CatchClause)_(Parameter)_(ClassOrInterfaceType)_(ClassOrInterfaceType0),windowmanager
[0.0233] view,(NameExpr2)^(MethodCallExpr)_(NameExpr4),addview
[0.0229] METHOD_NAME,(NameExpr1)^(MethodDeclaration)_(BlockStmt)_(TryStmt)_(BlockStmt)_(ExpressionStmt)_(MethodCallExpr0)_(NameExpr1),onshow
[0.0220] METHOD_NAME,(NameExpr1)^(MethodDeclaration)_(BlockStmt)_(TryStmt)_(BlockStmt)_(ExpressionStmt)_(MethodCallExpr0)_(NameExpr4),addview
[0.0218] void,(VoidType0)^(MethodDeclaration)_(BlockStmt)_(IfStmt)_(NameExpr0),isshown
[0.0205] onshow,(NameExpr1)^(MethodCallExpr)^(ExpressionStmt)^(BlockStmt)^(TryStmt)_(CatchClause)_(Parameter)_(ClassOrInterfaceType)_(ClassOrInterfaceType0),windowmanager
[0.0185] isshown,(NameExpr0)^(IfStmt)^(BlockStmt)_(ExpressionStmt)_(AssignExpr:assign0)_(NameExpr0),isshown
[0.0182] METHOD_NAME,(NameExpr1)^(MethodDeclaration)_(BlockStmt)_(ExpressionStmt)_(AssignExpr:assign0)_(NameExpr0),isshown
[0.0147] true,(BooleanLiteralExpr1)^(AssignExpr:assign)^(ExpressionStmt)^(BlockStmt)_(TryStmt)_(BlockStmt)_(ExpressionStmt)_(MethodCallExpr0)_(NameExpr0),mwindowmanager
[0.0146] void,(VoidType0)^(MethodDeclaration)_(BlockStmt)_(TryStmt)_(CatchClause)_(Parameter)_(ClassOrInterfaceType)_(ClassOrInterfaceType0),windowmanager
[0.0125] addview,(NameExpr4)^(MethodCallExpr)^(ExpressionStmt)^(BlockStmt)^(TryStmt)_(CatchClause)_(Parameter)_(ClassOrInterfaceType)_(ClassOrInterfaceType0),windowmanager
[0.0123] void,(VoidType0)^(MethodDeclaration)_(BlockStmt)_(TryStmt)_(BlockStmt)_(ExpressionStmt)_(MethodCallExpr0)_(NameExpr2),view
[0.0118] void,(VoidType0)^(MethodDeclaration)_(BlockStmt)_(TryStmt)_(BlockStmt)_(ExpressionStmt)_(MethodCallExpr0)_(NameExpr3),params
[0.0114] void,(VoidType0)^(MethodDeclaration)_(BlockStmt)_(TryStmt)_(BlockStmt)_(ExpressionStmt)_(MethodCallExpr0)_(NameExpr0),mwindowmanager
[0.0108] METHOD_NAME,(NameExpr1)^(MethodDeclaration)_(BlockStmt)_(IfStmt)_(NameExpr0),isshown
[0.0101] true,(BooleanLiteralExpr1)^(AssignExpr:assign)^(ExpressionStmt)^(BlockStmt)_(TryStmt)_(BlockStmt)_(ExpressionStmt)_(MethodCallExpr0)_(NameExpr3),params
[0.0096] view,(NameExpr2)^(MethodCallExpr)^(ExpressionStmt)^(BlockStmt)^(TryStmt)_(CatchClause)_(Parameter)_(ClassOrInterfaceType)_(ClassOrInterfaceType0),windowmanager
[0.0096] view,(NameExpr2)^(MethodCallExpr)_(NameExpr3),params
[0.0093] isshown,(NameExpr0)^(AssignExpr:assign)^(ExpressionStmt)^(BlockStmt)_(TryStmt)_(BlockStmt)_(ExpressionStmt)_(MethodCallExpr0)_(NameExpr3),params
[0.0091] isshown,(NameExpr0)^(IfStmt)^(BlockStmt)_(TryStmt)_(BlockStmt)_(ExpressionStmt)_(MethodCallExpr0)_(NameExpr2),view
[0.0086] mwindowmanager,(NameExpr0)^(MethodCallExpr)^(ExpressionStmt)^(BlockStmt)_(ExpressionStmt)_(MethodCallExpr0)_(NameExpr1),onshow
[0.0084] METHOD_NAME,(NameExpr1)^(MethodDeclaration)_(BlockStmt)_(ExpressionStmt)_(AssignExpr:assign0)_(BooleanLiteralExpr1),true
[0.0072] void,(VoidType0)^(MethodDeclaration)_(BlockStmt)_(ExpressionStmt)_(AssignExpr:assign0)_(BooleanLiteralExpr1),true
[0.0069] isshown,(NameExpr0)^(AssignExpr:assign)^(ExpressionStmt)^(BlockStmt)_(TryStmt)_(BlockStmt)_(ExpressionStmt)_(MethodCallExpr0)_(NameExpr0),mwindowmanager
[0.0067] METHOD_NAME,(NameExpr1)^(MethodDeclaration)_(BlockStmt)_(TryStmt)_(BlockStmt)_(ExpressionStmt)_(MethodCallExpr0)_(NameExpr3),params
[0.0062] METHOD_NAME,(NameExpr1)^(MethodDeclaration)_(BlockStmt)_(TryStmt)_(BlockStmt)_(ExpressionStmt)_(MethodCallExpr0)_(NameExpr0),mwindowmanager
[0.0062] isshown,(NameExpr0)^(IfStmt)^(BlockStmt)_(ExpressionStmt)_(AssignExpr:assign0)_(BooleanLiteralExpr1),true
[0.0058] isshown,(NameExpr0)^(AssignExpr:assign)_(BooleanLiteralExpr1),true
[0.0053] void,(VoidType0)^(MethodDeclaration)_(NameExpr1),METHOD_NAME
[0.0051] e,(VariableDeclaratorId0)^(Parameter)_(ClassOrInterfaceType)_(ClassOrInterfaceType0),windowmanager
[0.0048] true,(BooleanLiteralExpr1)^(AssignExpr:assign)^(ExpressionStmt)^(BlockStmt)_(TryStmt)_(BlockStmt)_(ExpressionStmt)_(MethodCallExpr0)_(NameExpr2),view
[0.0048] isshown,(NameExpr0)^(IfStmt)^(BlockStmt)_(TryStmt)_(CatchClause)_(BlockStmt)_(ExpressionStmt)_(MethodCallExpr0)_(NameExpr2),printstacktrace
[0.0041] mwindowmanager,(NameExpr0)^(MethodCallExpr)_(NameExpr2),view
[0.0023] METHOD_NAME,(NameExpr1)^(MethodDeclaration)_(BlockStmt)_(TryStmt)_(CatchClause)_(Parameter)_(ClassOrInterfaceType)_(ClassOrInterfaceType0),windowmanager
[0.0022] METHOD_NAME,(NameExpr1)^(MethodDeclaration)_(BlockStmt)_(TryStmt)_(BlockStmt)_(ExpressionStmt)_(MethodCallExpr0)_(NameExpr2),view
[0.0018] void,(VoidType0)^(MethodDeclaration)_(BlockStmt)_(TryStmt)_(CatchClause)_(BlockStmt)_(ExpressionStmt)_(MethodCallExpr0)_(NameExpr0),e
[0.0017] mwindowmanager,(NameExpr0)^(MethodCallExpr)^(ExpressionStmt)^(BlockStmt)^(TryStmt)_(CatchClause)_(Parameter)_(ClassOrInterfaceType)_(ClassOrInterfaceType0),windowmanager
[0.0013] isshown,(NameExpr0)^(AssignExpr:assign)^(ExpressionStmt)^(BlockStmt)_(TryStmt)_(BlockStmt)_(ExpressionStmt)_(MethodCallExpr0)_(NameExpr2),view
[0.0013] windowmanager,(ClassOrInterfaceType0)^(ClassOrInterfaceType)^(Parameter)^(CatchClause)_(BlockStmt)_(ExpressionStmt)_(MethodCallExpr0)_(NameExpr2),printstacktrace
[0.0009] void,(VoidType0)^(MethodDeclaration)_(BlockStmt)_(TryStmt)_(CatchClause)_(BlockStmt)_(ExpressionStmt)_(MethodCallExpr0)_(NameExpr2),printstacktrace
[0.0007] windowmanager,(ClassOrInterfaceType0)^(ClassOrInterfaceType)^(Parameter)^(CatchClause)_(BlockStmt)_(ExpressionStmt)_(MethodCallExpr0)_(NameExpr0),e
[0.0006] true,(BooleanLiteralExpr1)^(AssignExpr:assign)^(ExpressionStmt)^(BlockStmt)_(TryStmt)_(CatchClause)_(Parameter)_(ClassOrInterfaceType)_(ClassOrInterfaceType0),windowmanager
[0.0006] isshown,(NameExpr0)^(IfStmt)^(BlockStmt)_(TryStmt)_(CatchClause)_(Parameter)_(ClassOrInterfaceType)_(ClassOrInterfaceType0),windowmanager
[0.0006] e,(NameExpr0)^(MethodCallExpr)_(NameExpr2),printstacktrace
[0.0006] isshown,(NameExpr0)^(AssignExpr:assign)^(ExpressionStmt)^(BlockStmt)_(TryStmt)_(CatchClause)_(Parameter)_(ClassOrInterfaceType)_(ClassOrInterfaceType0),windowmanager
[0.0004] onshow,(NameExpr1)^(MethodCallExpr)^(ExpressionStmt)^(BlockStmt)^(TryStmt)_(CatchClause)_(Parameter)_(VariableDeclaratorId0),e
[0.0004] void,(VoidType0)^(MethodDeclaration)_(BlockStmt)_(TryStmt)_(CatchClause)_(Parameter)_(VariableDeclaratorId0),e
[0.0003] addview,(NameExpr4)^(MethodCallExpr)^(ExpressionStmt)^(BlockStmt)_(ExpressionStmt)_(MethodCallExpr0)_(NameExpr1),onshow
[0.0001] METHOD_NAME,(NameExpr1)^(MethodDeclaration)_(BlockStmt)_(TryStmt)_(CatchClause)_(BlockStmt)_(ExpressionStmt)_(MethodCallExpr0)_(NameExpr2),printstacktrace
[0.0001] METHOD_NAME,(NameExpr1)^(MethodDeclaration)_(BlockStmt)_(TryStmt)_(CatchClause)_(BlockStmt)_(ExpressionStmt)_(MethodCallExpr0)_(NameExpr0),e
[0.0001] isshown,(NameExpr0)^(IfStmt)^(BlockStmt)_(TryStmt)_(CatchClause)_(BlockStmt)_(ExpressionStmt)_(MethodCallExpr0)_(NameExpr0),e
[0.0001] true,(BooleanLiteralExpr1)^(AssignExpr:assign)^(ExpressionStmt)^(BlockStmt)_(TryStmt)_(CatchClause)_(Parameter)_(VariableDeclaratorId0),e
[0.0001] isshown,(NameExpr0)^(IfStmt)^(BlockStmt)_(TryStmt)_(CatchClause)_(Parameter)_(VariableDeclaratorId0),e
[0.0000] METHOD_NAME,(NameExpr1)^(MethodDeclaration)_(BlockStmt)_(TryStmt)_(CatchClause)_(Parameter)_(VariableDeclaratorId0),e
[0.0000] view,(NameExpr2)^(MethodCallExpr)^(ExpressionStmt)^(BlockStmt)^(TryStmt)_(CatchClause)_(Parameter)_(VariableDeclaratorId0),e
[0.0000] addview,(NameExpr4)^(MethodCallExpr)^(ExpressionStmt)^(BlockStmt)^(TryStmt)_(CatchClause)_(Parameter)_(VariableDeclaratorId0),e
[0.0000] params,(NameExpr3)^(MethodCallExpr)^(ExpressionStmt)^(BlockStmt)^(TryStmt)_(CatchClause)_(Parameter)_(VariableDeclaratorId0),e
[0.0000] mwindowmanager,(NameExpr0)^(MethodCallExpr)^(ExpressionStmt)^(BlockStmt)^(TryStmt)_(CatchClause)_(Parameter)_(VariableDeclaratorId0),e
[0.0000] isshown,(NameExpr0)^(AssignExpr:assign)^(ExpressionStmt)^(BlockStmt)_(TryStmt)_(CatchClause)_(Parameter)_(VariableDeclaratorId0),e
[0.0000] e,(VariableDeclaratorId0)^(Parameter)^(CatchClause)_(BlockStmt)_(ExpressionStmt)_(MethodCallExpr0)_(NameExpr2),printstacktrace
[0.0000] e,(VariableDeclaratorId0)^(Parameter)^(CatchClause)_(BlockStmt)_(ExpressionStmt)_(MethodCallExpr0)_(NameExpr0),e

topk terminals:
[['params', 'addview'], ['isshown', 'addview'], ['void', 'addview'], ['void', 'onshow'], ['true', 'addview'], ['isshown', 'onshow'], ['params', 'onshow'], ['true', 'onshow'], ['isshown', 'mwindowmanager'], ['view', 'onshow'], ['isshown', 'params'], ['void', 'isshown'], ['isshown', 'addview'], ['isshown', 'onshow'], ['params', 'windowmanager'], ['view', 'addview'], ['METHOD_NAME', 'onshow'], ['METHOD_NAME', 'addview'], ['void', 'isshown'], ['onshow', 'windowmanager'], ['isshown', 'isshown'], ['METHOD_NAME', 'isshown'], ['true', 'mwindowmanager'], ['void', 'windowmanager'], ['addview', 'windowmanager'], ['void', 'view'], ['void', 'params'], ['void', 'mwindowmanager'], ['METHOD_NAME', 'isshown'], ['true', 'params'], ['view', 'windowmanager'], ['view', 'params'], ['isshown', 'params'], ['isshown', 'view'], ['mwindowmanager', 'onshow'], ['METHOD_NAME', 'true'], ['void', 'true'], ['isshown', 'mwindowmanager'], ['METHOD_NAME', 'params'], ['METHOD_NAME', 'mwindowmanager'], ['isshown', 'true'], ['isshown', 'true'], ['void', 'METHOD_NAME'], ['e', 'windowmanager'], ['true', 'view'], ['isshown', 'printstacktrace'], ['mwindowmanager', 'view'], ['METHOD_NAME', 'windowmanager'], ['METHOD_NAME', 'view'], ['void', 'e'], ['mwindowmanager', 'windowmanager'], ['isshown', 'view'], ['windowmanager', 'printstacktrace'], ['void', 'printstacktrace'], ['windowmanager', 'e'], ['true', 'windowmanager'], ['isshown', 'windowmanager'], ['e', 'printstacktrace'], ['isshown', 'windowmanager'], ['onshow', 'e'], ['void', 'e'], ['addview', 'onshow'], ['METHOD_NAME', 'printstacktrace'], ['METHOD_NAME', 'e'], ['isshown', 'e'], ['true', 'e'], ['isshown', 'e'], ['METHOD_NAME', 'e'], ['view', 'e'], ['addview', 'e'], ['params', 'e'], ['mwindowmanager', 'e'], ['isshown', 'e'], ['e', 'printstacktrace'], ['e', 'e']]

