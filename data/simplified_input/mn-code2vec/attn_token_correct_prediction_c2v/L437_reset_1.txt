
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/bcgit__bc-java/pkix/src/main/java/org/bouncycastle/cert/selector/MSOutlookKeyIdCalculator_reset.java
method_name = reset
method_body = public void reset() { super.reset(); H1 = 0x67452301; H2 = 0xefcdab89; H3 = 0x98badcfe; H4 = 0x10325476; H5 = 0xc3d2e1f0; xOff = 0; for (int i = 0; i != X.length; i++) { X[i] = 0; } }

topk path-contexts:
[0.2567] void,(VoidType0)^(MethodDeclaration)_(BlockStmt)_(ExpressionStmt)_(AssignExpr:assign0)_(IntegerLiteralExpr1),xefcdab
[0.1326] super,(SuperExpr0)^(MethodCallExpr)_(NameExpr2),reset
[0.0730] METHOD_NAME,(NameExpr1)^(MethodDeclaration)_(BlockStmt)_(ExpressionStmt)_(AssignExpr:assign0)_(IntegerLiteralExpr1),xefcdab
[0.0656] xefcdab,(IntegerLiteralExpr1)^(AssignExpr:assign)^(ExpressionStmt)^(BlockStmt)_(ExpressionStmt)_(AssignExpr:assign0)_(IntegerLiteralExpr1),xbadcfe
[0.0520] x,(IntegerLiteralExpr1)^(AssignExpr:assign)^(ExpressionStmt)^(BlockStmt)_(ExpressionStmt)_(AssignExpr:assign0)_(IntegerLiteralExpr1),xefcdab
[0.0469] xcdef,(IntegerLiteralExpr1)^(AssignExpr:assign)^(ExpressionStmt)^(BlockStmt)_(ForStmt)_(BlockStmt)_(ExpressionStmt)_(AssignExpr:assign0)_(IntegerLiteralExpr1),0
[0.0430] void,(VoidType0)^(MethodDeclaration)_(BlockStmt)_(ExpressionStmt)_(AssignExpr:assign0)_(IntegerLiteralExpr1),xbadcfe
[0.0303] void,(VoidType0)^(MethodDeclaration)_(BlockStmt)_(ExpressionStmt)_(AssignExpr:assign0)_(IntegerLiteralExpr1),xcdef
[0.0268] xbadcfe,(IntegerLiteralExpr1)^(AssignExpr:assign)^(ExpressionStmt)^(BlockStmt)_(ExpressionStmt)_(AssignExpr:assign0)_(IntegerLiteralExpr1),xcdef
[0.0242] 0,(IntegerLiteralExpr1)^(AssignExpr:assign)^(ExpressionStmt)^(BlockStmt)_(ForStmt)_(BlockStmt)_(ExpressionStmt)_(AssignExpr:assign0)_(IntegerLiteralExpr1),0
[0.0205] reset,(NameExpr2)^(MethodCallExpr)^(ExpressionStmt)^(BlockStmt)_(ExpressionStmt)_(AssignExpr:assign0)_(IntegerLiteralExpr1),xefcdab
[0.0169] xcdef,(IntegerLiteralExpr1)^(AssignExpr:assign)^(ExpressionStmt)^(BlockStmt)_(ForStmt)_(BinaryExpr:notEquals)_(FieldAccessExpr1)_(NameExpr2),length
[0.0164] METHOD_NAME,(NameExpr1)^(MethodDeclaration)_(BlockStmt)_(ExpressionStmt)_(AssignExpr:assign0)_(IntegerLiteralExpr1),xbadcfe
[0.0135] METHOD_NAME,(NameExpr1)^(MethodDeclaration)_(BlockStmt)_(ExpressionStmt)_(AssignExpr:assign0)_(IntegerLiteralExpr1),xcdef
[0.0111] x,(IntegerLiteralExpr1)^(AssignExpr:assign)^(ExpressionStmt)^(BlockStmt)_(ExpressionStmt)_(AssignExpr:assign0)_(IntegerLiteralExpr1),xbadcfe
[0.0103] x,(IntegerLiteralExpr1)^(AssignExpr:assign)^(ExpressionStmt)^(BlockStmt)_(ExpressionStmt)_(AssignExpr:assign0)_(IntegerLiteralExpr1),xcdef
[0.0098] 0,(IntegerLiteralExpr1)^(AssignExpr:assign)^(ExpressionStmt)^(BlockStmt)_(ForStmt)_(BinaryExpr:notEquals)_(FieldAccessExpr1)_(NameExpr2),length
[0.0091] void,(VoidType0)^(MethodDeclaration)_(BlockStmt)_(ExpressionStmt)_(AssignExpr:assign0)_(IntegerLiteralExpr1),0
[0.0079] xcdef,(IntegerLiteralExpr1)^(AssignExpr:assign)^(ExpressionStmt)^(BlockStmt)_(ExpressionStmt)_(AssignExpr:assign0)_(IntegerLiteralExpr1),0
[0.0071] METHOD_NAME,(NameExpr1)^(MethodDeclaration)_(BlockStmt)_(ForStmt)_(BlockStmt)_(ExpressionStmt)_(AssignExpr:assign0)_(IntegerLiteralExpr1),0
[0.0067] METHOD_NAME,(NameExpr1)^(MethodDeclaration)_(BlockStmt)_(ExpressionStmt)_(AssignExpr:assign0)_(NameExpr0),xoff
[0.0065] void,(VoidType0)^(MethodDeclaration)_(BlockStmt)_(ExpressionStmt)_(AssignExpr:assign0)_(NameExpr0),xoff
[0.0061] void,(VoidType0)^(MethodDeclaration)_(BlockStmt)_(ForStmt)_(BlockStmt)_(ExpressionStmt)_(AssignExpr:assign0)_(IntegerLiteralExpr1),0
[0.0052] void,(VoidType0)^(MethodDeclaration)_(BlockStmt)_(ExpressionStmt)_(AssignExpr:assign0)_(IntegerLiteralExpr1),x
[0.0052] void,(VoidType0)^(MethodDeclaration)_(BlockStmt)_(ExpressionStmt)_(AssignExpr:assign0)_(IntegerLiteralExpr1),x
[0.0052] xcdef,(IntegerLiteralExpr1)^(AssignExpr:assign)^(ExpressionStmt)^(BlockStmt)_(ExpressionStmt)_(AssignExpr:assign0)_(NameExpr0),xoff
[0.0046] void,(VoidType0)^(MethodDeclaration)_(BlockStmt)_(ForStmt)_(BlockStmt)_(ExpressionStmt)_(AssignExpr:assign0)_(ArrayAccessExpr0)_(NameExpr0),x
[0.0038] void,(VoidType0)^(MethodDeclaration)_(BlockStmt)_(ForStmt)_(BlockStmt)_(ExpressionStmt)_(AssignExpr:assign0)_(ArrayAccessExpr0)_(NameExpr1),i
[0.0035] void,(VoidType0)^(MethodDeclaration)_(BlockStmt)_(ExpressionStmt)_(MethodCallExpr0)_(NameExpr2),reset
[0.0035] 0,(IntegerLiteralExpr1)^(VariableDeclarator)^(VariableDeclarationExpr)^(ForStmt)_(BlockStmt)_(ExpressionStmt)_(AssignExpr:assign0)_(IntegerLiteralExpr1),0
[0.0033] xefcdab,(IntegerLiteralExpr1)^(AssignExpr:assign)^(ExpressionStmt)^(BlockStmt)_(ExpressionStmt)_(AssignExpr:assign0)_(NameExpr0),h
[0.0033] xefcdab,(IntegerLiteralExpr1)^(AssignExpr:assign)^(ExpressionStmt)^(BlockStmt)_(ExpressionStmt)_(AssignExpr:assign0)_(NameExpr0),h
[0.0029] METHOD_NAME,(NameExpr1)^(MethodDeclaration)_(BlockStmt)_(ExpressionStmt)_(AssignExpr:assign0)_(IntegerLiteralExpr1),0
[0.0026] xefcdab,(IntegerLiteralExpr1)^(AssignExpr:assign)^(ExpressionStmt)^(BlockStmt)_(ExpressionStmt)_(AssignExpr:assign0)_(IntegerLiteralExpr1),x
[0.0024] METHOD_NAME,(NameExpr1)^(MethodDeclaration)_(BlockStmt)_(ExpressionStmt)_(AssignExpr:assign0)_(NameExpr0),h
[0.0024] METHOD_NAME,(NameExpr1)^(MethodDeclaration)_(BlockStmt)_(ExpressionStmt)_(AssignExpr:assign0)_(NameExpr0),h
[0.0024] METHOD_NAME,(NameExpr1)^(MethodDeclaration)_(BlockStmt)_(ExpressionStmt)_(AssignExpr:assign0)_(NameExpr0),h
[0.0024] METHOD_NAME,(NameExpr1)^(MethodDeclaration)_(BlockStmt)_(ExpressionStmt)_(AssignExpr:assign0)_(NameExpr0),h
[0.0024] METHOD_NAME,(NameExpr1)^(MethodDeclaration)_(BlockStmt)_(ExpressionStmt)_(AssignExpr:assign0)_(NameExpr0),h
[0.0022] void,(VoidType0)^(MethodDeclaration)_(NameExpr1),METHOD_NAME
[0.0022] xcdef,(IntegerLiteralExpr1)^(AssignExpr:assign)^(ExpressionStmt)^(BlockStmt)_(ForStmt)_(BinaryExpr:notEquals)_(FieldAccessExpr1)_(NameExpr0),x
[0.0021] void,(VoidType0)^(MethodDeclaration)_(BlockStmt)_(ExpressionStmt)_(MethodCallExpr0)_(SuperExpr0),super
[0.0021] h,(NameExpr0)^(AssignExpr:assign)_(IntegerLiteralExpr1),xefcdab
[0.0021] xcdef,(IntegerLiteralExpr1)^(AssignExpr:assign)^(ExpressionStmt)^(BlockStmt)_(ForStmt)_(BinaryExpr:notEquals)_(NameExpr0),i
[0.0020] METHOD_NAME,(NameExpr1)^(MethodDeclaration)_(BlockStmt)_(ExpressionStmt)_(MethodCallExpr0)_(NameExpr2),reset
[0.0019] void,(VoidType0)^(MethodDeclaration)_(BlockStmt)_(ExpressionStmt)_(AssignExpr:assign0)_(NameExpr0),h
[0.0019] void,(VoidType0)^(MethodDeclaration)_(BlockStmt)_(ExpressionStmt)_(AssignExpr:assign0)_(NameExpr0),h
[0.0019] void,(VoidType0)^(MethodDeclaration)_(BlockStmt)_(ExpressionStmt)_(AssignExpr:assign0)_(NameExpr0),h
[0.0019] void,(VoidType0)^(MethodDeclaration)_(BlockStmt)_(ExpressionStmt)_(AssignExpr:assign0)_(NameExpr0),h
[0.0019] void,(VoidType0)^(MethodDeclaration)_(BlockStmt)_(ExpressionStmt)_(AssignExpr:assign0)_(NameExpr0),h
[0.0015] x,(IntegerLiteralExpr1)^(AssignExpr:assign)^(ExpressionStmt)^(BlockStmt)_(ExpressionStmt)_(AssignExpr:assign0)_(IntegerLiteralExpr1),0
[0.0015] xbadcfe,(IntegerLiteralExpr1)^(AssignExpr:assign)^(ExpressionStmt)^(BlockStmt)_(ExpressionStmt)_(AssignExpr:assign0)_(NameExpr0),h
[0.0015] xbadcfe,(IntegerLiteralExpr1)^(AssignExpr:assign)^(ExpressionStmt)^(BlockStmt)_(ExpressionStmt)_(AssignExpr:assign0)_(NameExpr0),h
[0.0014] xbadcfe,(IntegerLiteralExpr1)^(AssignExpr:assign)^(ExpressionStmt)^(BlockStmt)_(ExpressionStmt)_(AssignExpr:assign0)_(IntegerLiteralExpr1),x
[0.0013] h,(NameExpr0)^(AssignExpr:assign)^(ExpressionStmt)^(BlockStmt)_(ExpressionStmt)_(AssignExpr:assign0)_(IntegerLiteralExpr1),xefcdab
[0.0013] x,(IntegerLiteralExpr1)^(AssignExpr:assign)^(ExpressionStmt)^(BlockStmt)_(ExpressionStmt)_(AssignExpr:assign0)_(NameExpr0),xoff
[0.0010] METHOD_NAME,(NameExpr1)^(MethodDeclaration)_(BlockStmt)_(ExpressionStmt)_(AssignExpr:assign0)_(IntegerLiteralExpr1),x
[0.0010] METHOD_NAME,(NameExpr1)^(MethodDeclaration)_(BlockStmt)_(ExpressionStmt)_(AssignExpr:assign0)_(IntegerLiteralExpr1),x
[0.0009] void,(VoidType0)^(MethodDeclaration)_(BlockStmt)_(ForStmt)_(BinaryExpr:notEquals)_(NameExpr0),i
[0.0009] h,(NameExpr0)^(AssignExpr:assign)^(ExpressionStmt)^(BlockStmt)_(ExpressionStmt)_(AssignExpr:assign0)_(NameExpr0),xoff
[0.0009] h,(NameExpr0)^(AssignExpr:assign)^(ExpressionStmt)^(BlockStmt)_(ExpressionStmt)_(AssignExpr:assign0)_(NameExpr0),xoff
[0.0008] i,(NameExpr1)^(ArrayAccessExpr0)^(AssignExpr:assign)_(IntegerLiteralExpr1),0
[0.0007] reset,(NameExpr2)^(MethodCallExpr)^(ExpressionStmt)^(BlockStmt)_(ExpressionStmt)_(AssignExpr:assign0)_(IntegerLiteralExpr1),x
[0.0007] h,(NameExpr0)^(AssignExpr:assign)_(IntegerLiteralExpr1),xbadcfe
[0.0007] METHOD_NAME,(NameExpr1)^(MethodDeclaration)_(BlockStmt)_(ExpressionStmt)_(MethodCallExpr0)_(SuperExpr0),super
[0.0007] reset,(NameExpr2)^(MethodCallExpr)^(ExpressionStmt)^(BlockStmt)_(ExpressionStmt)_(AssignExpr:assign0)_(NameExpr0),h
[0.0007] reset,(NameExpr2)^(MethodCallExpr)^(ExpressionStmt)^(BlockStmt)_(ExpressionStmt)_(AssignExpr:assign0)_(NameExpr0),h
[0.0006] super,(SuperExpr0)^(MethodCallExpr)^(ExpressionStmt)^(BlockStmt)_(ExpressionStmt)_(AssignExpr:assign0)_(IntegerLiteralExpr1),xefcdab
[0.0006] x,(IntegerLiteralExpr1)^(AssignExpr:assign)^(ExpressionStmt)^(BlockStmt)_(ExpressionStmt)_(AssignExpr:assign0)_(NameExpr0),h
[0.0006] x,(IntegerLiteralExpr1)^(AssignExpr:assign)^(ExpressionStmt)^(BlockStmt)_(ExpressionStmt)_(AssignExpr:assign0)_(NameExpr0),h
[0.0006] x,(IntegerLiteralExpr1)^(AssignExpr:assign)^(ExpressionStmt)^(BlockStmt)_(ExpressionStmt)_(AssignExpr:assign0)_(NameExpr0),h
[0.0006] METHOD_NAME,(NameExpr1)^(MethodDeclaration)_(BlockStmt)_(ForStmt)_(BinaryExpr:notEquals)_(FieldAccessExpr1)_(NameExpr0),x
[0.0006] xoff,(NameExpr0)^(AssignExpr:assign)^(ExpressionStmt)^(BlockStmt)_(ForStmt)_(BlockStmt)_(ExpressionStmt)_(AssignExpr:assign0)_(IntegerLiteralExpr1),0
[0.0005] int,(PrimitiveType0)^(VariableDeclarationExpr)^(ForStmt)_(BlockStmt)_(ExpressionStmt)_(AssignExpr:assign0)_(IntegerLiteralExpr1),0
[0.0005] 0,(IntegerLiteralExpr1)^(AssignExpr:assign)^(ExpressionStmt)^(BlockStmt)_(ForStmt)_(BinaryExpr:notEquals)_(FieldAccessExpr1)_(NameExpr0),x
[0.0005] 0,(IntegerLiteralExpr1)^(AssignExpr:assign)^(ExpressionStmt)^(BlockStmt)_(ForStmt)_(BinaryExpr:notEquals)_(NameExpr0),i
[0.0004] h,(NameExpr0)^(AssignExpr:assign)^(ExpressionStmt)^(BlockStmt)_(ForStmt)_(BlockStmt)_(ExpressionStmt)_(AssignExpr:assign0)_(IntegerLiteralExpr1),0
[0.0004] METHOD_NAME,(NameExpr1)^(MethodDeclaration)_(BlockStmt)_(ForStmt)_(BlockStmt)_(ExpressionStmt)_(AssignExpr:assign0)_(ArrayAccessExpr0)_(NameExpr0),x
[0.0004] h,(NameExpr0)^(AssignExpr:assign)_(IntegerLiteralExpr1),xcdef
[0.0003] xoff,(NameExpr0)^(AssignExpr:assign)^(ExpressionStmt)^(BlockStmt)_(ForStmt)_(BinaryExpr:notEquals)_(FieldAccessExpr1)_(NameExpr2),length
[0.0003] x,(NameExpr0)^(FieldAccessExpr)^(BinaryExpr:notEquals)^(ForStmt)_(VariableDeclarationExpr)_(VariableDeclarator)_(IntegerLiteralExpr1),0
[0.0002] xoff,(NameExpr0)^(AssignExpr:assign)^(ExpressionStmt)^(BlockStmt)_(ForStmt)_(BinaryExpr:notEquals)_(NameExpr0),i
[0.0002] h,(NameExpr0)^(AssignExpr:assign)^(ExpressionStmt)^(BlockStmt)_(ExpressionStmt)_(AssignExpr:assign0)_(NameExpr0),h
[0.0002] h,(NameExpr0)^(AssignExpr:assign)^(ExpressionStmt)^(BlockStmt)_(ExpressionStmt)_(AssignExpr:assign0)_(NameExpr0),h
[0.0002] h,(NameExpr0)^(AssignExpr:assign)^(ExpressionStmt)^(BlockStmt)_(ExpressionStmt)_(AssignExpr:assign0)_(NameExpr0),h
[0.0002] h,(NameExpr0)^(AssignExpr:assign)^(ExpressionStmt)^(BlockStmt)_(ExpressionStmt)_(AssignExpr:assign0)_(NameExpr0),h
[0.0002] h,(NameExpr0)^(AssignExpr:assign)^(ExpressionStmt)^(BlockStmt)_(ExpressionStmt)_(AssignExpr:assign0)_(NameExpr0),h
[0.0002] h,(NameExpr0)^(AssignExpr:assign)^(ExpressionStmt)^(BlockStmt)_(ExpressionStmt)_(AssignExpr:assign0)_(NameExpr0),h
[0.0002] h,(NameExpr0)^(AssignExpr:assign)^(ExpressionStmt)^(BlockStmt)_(ExpressionStmt)_(AssignExpr:assign0)_(NameExpr0),h
[0.0002] h,(NameExpr0)^(AssignExpr:assign)^(ExpressionStmt)^(BlockStmt)_(ExpressionStmt)_(AssignExpr:assign0)_(IntegerLiteralExpr1),xbadcfe
[0.0002] h,(NameExpr0)^(AssignExpr:assign)^(ExpressionStmt)^(BlockStmt)_(ExpressionStmt)_(AssignExpr:assign0)_(IntegerLiteralExpr1),xbadcfe
[0.0002] h,(NameExpr0)^(AssignExpr:assign)^(ExpressionStmt)^(BlockStmt)_(ForStmt)_(BinaryExpr:notEquals)_(NameExpr0),i
[0.0002] void,(VoidType0)^(MethodDeclaration)_(BlockStmt)_(ForStmt)_(VariableDeclarationExpr)_(PrimitiveType0),int
[0.0002] x,(NameExpr0)^(ArrayAccessExpr0)^(AssignExpr:assign)_(IntegerLiteralExpr1),0
[0.0002] h,(NameExpr0)^(AssignExpr:assign)^(ExpressionStmt)^(BlockStmt)_(ForStmt)_(BinaryExpr:notEquals)_(FieldAccessExpr1)_(NameExpr2),length
[0.0002] h,(NameExpr0)^(AssignExpr:assign)^(ExpressionStmt)^(BlockStmt)_(ExpressionStmt)_(AssignExpr:assign0)_(IntegerLiteralExpr1),xcdef
[0.0002] h,(NameExpr0)^(AssignExpr:assign)^(ExpressionStmt)^(BlockStmt)_(ExpressionStmt)_(AssignExpr:assign0)_(IntegerLiteralExpr1),xcdef
[0.0002] void,(VoidType0)^(MethodDeclaration)_(BlockStmt)_(ForStmt)_(BinaryExpr:notEquals)_(FieldAccessExpr1)_(NameExpr0),x
[0.0001] xoff,(NameExpr0)^(AssignExpr:assign)_(IntegerLiteralExpr1),0
[0.0001] void,(VoidType0)^(MethodDeclaration)_(BlockStmt)_(ForStmt)_(BinaryExpr:notEquals)_(FieldAccessExpr1)_(NameExpr2),length
[0.0001] xoff,(NameExpr0)^(AssignExpr:assign)^(ExpressionStmt)^(BlockStmt)_(ForStmt)_(BinaryExpr:notEquals)_(FieldAccessExpr1)_(NameExpr0),x
[0.0001] 0,(IntegerLiteralExpr1)^(VariableDeclarator)^(VariableDeclarationExpr)^(ForStmt)_(BlockStmt)_(ExpressionStmt)_(AssignExpr:assign0)_(ArrayAccessExpr0)_(NameExpr0),x
[0.0001] i,(NameExpr0)^(UnaryExpr:posIncrement)^(ForStmt)_(BlockStmt)_(ExpressionStmt)_(AssignExpr:assign0)_(ArrayAccessExpr0)_(NameExpr0),x
[0.0001] void,(VoidType0)^(MethodDeclaration)_(BlockStmt)_(ForStmt)_(VariableDeclarationExpr)_(VariableDeclarator)_(IntegerLiteralExpr1),0
[0.0001] h,(NameExpr0)^(AssignExpr:assign)_(IntegerLiteralExpr1),x
[0.0001] h,(NameExpr0)^(AssignExpr:assign)_(IntegerLiteralExpr1),x
[0.0001] h,(NameExpr0)^(AssignExpr:assign)^(ExpressionStmt)^(BlockStmt)_(ForStmt)_(BinaryExpr:notEquals)_(FieldAccessExpr1)_(NameExpr0),x
[0.0001] x,(NameExpr0)^(FieldAccessExpr)_(NameExpr2),length
[0.0001] x,(NameExpr0)^(FieldAccessExpr)^(BinaryExpr:notEquals)^(ForStmt)_(VariableDeclarationExpr)_(PrimitiveType0),int
[0.0001] xcdef,(IntegerLiteralExpr1)^(AssignExpr:assign)^(ExpressionStmt)^(BlockStmt)_(ForStmt)_(VariableDeclarationExpr)_(PrimitiveType0),int
[0.0000] x,(NameExpr0)^(FieldAccessExpr)^(BinaryExpr:notEquals)^(ForStmt)_(UnaryExpr:posIncrement)_(NameExpr0),i
[0.0000] i,(VariableDeclaratorId0)^(VariableDeclarator)^(VariableDeclarationExpr)^(ForStmt)_(BlockStmt)_(ExpressionStmt)_(AssignExpr:assign0)_(ArrayAccessExpr0)_(NameExpr0),x
[0.0000] xcdef,(IntegerLiteralExpr1)^(AssignExpr:assign)^(ExpressionStmt)^(BlockStmt)_(ForStmt)_(VariableDeclarationExpr)_(VariableDeclarator)_(IntegerLiteralExpr1),0
[0.0000] xcdef,(IntegerLiteralExpr1)^(AssignExpr:assign)^(ExpressionStmt)^(BlockStmt)_(ForStmt)_(UnaryExpr:posIncrement)_(NameExpr0),i
[0.0000] h,(NameExpr0)^(AssignExpr:assign)^(ExpressionStmt)^(BlockStmt)_(ExpressionStmt)_(AssignExpr:assign0)_(IntegerLiteralExpr1),0
[0.0000] h,(NameExpr0)^(AssignExpr:assign)^(ExpressionStmt)^(BlockStmt)_(ExpressionStmt)_(AssignExpr:assign0)_(IntegerLiteralExpr1),0
[0.0000] i,(VariableDeclaratorId0)^(VariableDeclarator)^(VariableDeclarationExpr)^(ForStmt)_(BlockStmt)_(ExpressionStmt)_(AssignExpr:assign0)_(IntegerLiteralExpr1),0
[0.0000] int,(PrimitiveType0)^(VariableDeclarationExpr)^(ForStmt)_(BlockStmt)_(ExpressionStmt)_(AssignExpr:assign0)_(ArrayAccessExpr0)_(NameExpr0),x
[0.0000] xcdef,(IntegerLiteralExpr1)^(AssignExpr:assign)^(ExpressionStmt)^(BlockStmt)_(ForStmt)_(VariableDeclarationExpr)_(VariableDeclarator)_(VariableDeclaratorId0),i
[0.0000] h,(NameExpr0)^(AssignExpr:assign)^(ExpressionStmt)^(BlockStmt)_(ExpressionStmt)_(AssignExpr:assign0)_(IntegerLiteralExpr1),x
[0.0000] h,(NameExpr0)^(AssignExpr:assign)^(ExpressionStmt)^(BlockStmt)_(ExpressionStmt)_(AssignExpr:assign0)_(IntegerLiteralExpr1),x
[0.0000] void,(VoidType0)^(MethodDeclaration)_(BlockStmt)_(ForStmt)_(VariableDeclarationExpr)_(VariableDeclarator)_(VariableDeclaratorId0),i
[0.0000] METHOD_NAME,(NameExpr1)^(MethodDeclaration)_(BlockStmt)_(ForStmt)_(BinaryExpr:notEquals)_(FieldAccessExpr1)_(NameExpr2),length
[0.0000] super,(SuperExpr0)^(MethodCallExpr)^(ExpressionStmt)^(BlockStmt)_(ExpressionStmt)_(AssignExpr:assign0)_(IntegerLiteralExpr1),x
[0.0000] xoff,(NameExpr0)^(AssignExpr:assign)^(ExpressionStmt)^(BlockStmt)_(ForStmt)_(VariableDeclarationExpr)_(PrimitiveType0),int
[0.0000] void,(VoidType0)^(MethodDeclaration)_(BlockStmt)_(ForStmt)_(UnaryExpr:posIncrement)_(NameExpr0),i
[0.0000] i,(NameExpr0)^(BinaryExpr:notEquals)^(ForStmt)_(VariableDeclarationExpr)_(VariableDeclarator)_(IntegerLiteralExpr1),0
[0.0000] i,(NameExpr0)^(UnaryExpr:posIncrement)^(ForStmt)_(BlockStmt)_(ExpressionStmt)_(AssignExpr:assign0)_(IntegerLiteralExpr1),0
[0.0000] x,(NameExpr0)^(FieldAccessExpr)^(BinaryExpr:notEquals)^(ForStmt)_(VariableDeclarationExpr)_(VariableDeclarator)_(VariableDeclaratorId0),i
[0.0000] length,(NameExpr2)^(FieldAccessExpr)^(BinaryExpr:notEquals)^(ForStmt)_(VariableDeclarationExpr)_(VariableDeclarator)_(IntegerLiteralExpr1),0
[0.0000] xoff,(NameExpr0)^(AssignExpr:assign)^(ExpressionStmt)^(BlockStmt)_(ForStmt)_(VariableDeclarationExpr)_(VariableDeclarator)_(VariableDeclaratorId0),i
[0.0000] METHOD_NAME,(NameExpr1)^(MethodDeclaration)_(BlockStmt)_(ForStmt)_(VariableDeclarationExpr)_(PrimitiveType0),int
[0.0000] i,(NameExpr0)^(BinaryExpr:notEquals)^(ForStmt)_(UnaryExpr:posIncrement)_(NameExpr0),i
[0.0000] 0,(IntegerLiteralExpr1)^(AssignExpr:assign)^(ExpressionStmt)^(BlockStmt)_(ForStmt)_(VariableDeclarationExpr)_(PrimitiveType0),int
[0.0000] length,(NameExpr2)^(FieldAccessExpr)^(BinaryExpr:notEquals)^(ForStmt)_(VariableDeclarationExpr)_(PrimitiveType0),int
[0.0000] h,(NameExpr0)^(AssignExpr:assign)^(ExpressionStmt)^(BlockStmt)_(ForStmt)_(VariableDeclarationExpr)_(PrimitiveType0),int
[0.0000] i,(NameExpr0)^(BinaryExpr:notEquals)^(ForStmt)_(VariableDeclarationExpr)_(PrimitiveType0),int
[0.0000] METHOD_NAME,(NameExpr1)^(MethodDeclaration)_(BlockStmt)_(ForStmt)_(BlockStmt)_(ExpressionStmt)_(AssignExpr:assign0)_(ArrayAccessExpr0)_(NameExpr1),i
[0.0000] xoff,(NameExpr0)^(AssignExpr:assign)^(ExpressionStmt)^(BlockStmt)_(ForStmt)_(VariableDeclarationExpr)_(VariableDeclarator)_(IntegerLiteralExpr1),0
[0.0000] METHOD_NAME,(NameExpr1)^(MethodDeclaration)_(BlockStmt)_(ForStmt)_(BinaryExpr:notEquals)_(NameExpr0),i
[0.0000] xoff,(NameExpr0)^(AssignExpr:assign)^(ExpressionStmt)^(BlockStmt)_(ForStmt)_(UnaryExpr:posIncrement)_(NameExpr0),i
[0.0000] length,(NameExpr2)^(FieldAccessExpr)^(BinaryExpr:notEquals)^(ForStmt)_(UnaryExpr:posIncrement)_(NameExpr0),i
[0.0000] length,(NameExpr2)^(FieldAccessExpr)^(BinaryExpr:notEquals)^(ForStmt)_(VariableDeclarationExpr)_(VariableDeclarator)_(VariableDeclaratorId0),i
[0.0000] 0,(IntegerLiteralExpr1)^(AssignExpr:assign)^(ExpressionStmt)^(BlockStmt)_(ForStmt)_(VariableDeclarationExpr)_(VariableDeclarator)_(IntegerLiteralExpr1),0
[0.0000] 0,(IntegerLiteralExpr1)^(AssignExpr:assign)^(ExpressionStmt)^(BlockStmt)_(ForStmt)_(UnaryExpr:posIncrement)_(NameExpr0),i
[0.0000] x,(NameExpr0)^(ArrayAccessExpr0)_(NameExpr1),i
[0.0000] METHOD_NAME,(NameExpr1)^(MethodDeclaration)_(BlockStmt)_(ForStmt)_(VariableDeclarationExpr)_(VariableDeclarator)_(IntegerLiteralExpr1),0
[0.0000] super,(SuperExpr0)^(MethodCallExpr)^(ExpressionStmt)^(BlockStmt)_(ExpressionStmt)_(AssignExpr:assign0)_(NameExpr0),h
[0.0000] super,(SuperExpr0)^(MethodCallExpr)^(ExpressionStmt)^(BlockStmt)_(ExpressionStmt)_(AssignExpr:assign0)_(NameExpr0),h
[0.0000] i,(NameExpr0)^(BinaryExpr:notEquals)_(FieldAccessExpr1)_(NameExpr2),length
[0.0000] 0,(IntegerLiteralExpr1)^(AssignExpr:assign)^(ExpressionStmt)^(BlockStmt)_(ForStmt)_(VariableDeclarationExpr)_(VariableDeclarator)_(VariableDeclaratorId0),i
[0.0000] i,(NameExpr0)^(BinaryExpr:notEquals)_(FieldAccessExpr1)_(NameExpr0),x
[0.0000] h,(NameExpr0)^(AssignExpr:assign)^(ExpressionStmt)^(BlockStmt)_(ForStmt)_(VariableDeclarationExpr)_(VariableDeclarator)_(VariableDeclaratorId0),i
[0.0000] METHOD_NAME,(NameExpr1)^(MethodDeclaration)_(BlockStmt)_(ForStmt)_(VariableDeclarationExpr)_(VariableDeclarator)_(VariableDeclaratorId0),i
[0.0000] METHOD_NAME,(NameExpr1)^(MethodDeclaration)_(BlockStmt)_(ForStmt)_(UnaryExpr:posIncrement)_(NameExpr0),i
[0.0000] int,(PrimitiveType0)^(VariableDeclarationExpr)_(VariableDeclarator)_(VariableDeclaratorId0),i
[0.0000] h,(NameExpr0)^(AssignExpr:assign)^(ExpressionStmt)^(BlockStmt)_(ForStmt)_(VariableDeclarationExpr)_(VariableDeclarator)_(IntegerLiteralExpr1),0
[0.0000] i,(NameExpr0)^(BinaryExpr:notEquals)^(ForStmt)_(VariableDeclarationExpr)_(VariableDeclarator)_(VariableDeclaratorId0),i
[0.0000] int,(PrimitiveType0)^(VariableDeclarationExpr)_(VariableDeclarator)_(IntegerLiteralExpr1),0
[0.0000] 0,(IntegerLiteralExpr1)^(VariableDeclarator)^(VariableDeclarationExpr)^(ForStmt)_(BlockStmt)_(ExpressionStmt)_(AssignExpr:assign0)_(ArrayAccessExpr0)_(NameExpr1),i
[0.0000] int,(PrimitiveType0)^(VariableDeclarationExpr)^(ForStmt)_(BlockStmt)_(ExpressionStmt)_(AssignExpr:assign0)_(ArrayAccessExpr0)_(NameExpr1),i
[0.0000] h,(NameExpr0)^(AssignExpr:assign)^(ExpressionStmt)^(BlockStmt)_(ForStmt)_(UnaryExpr:posIncrement)_(NameExpr0),i
[0.0000] 0,(IntegerLiteralExpr1)^(VariableDeclarator)^(VariableDeclarationExpr)^(ForStmt)_(UnaryExpr:posIncrement)_(NameExpr0),i
[0.0000] int,(PrimitiveType0)^(VariableDeclarationExpr)^(ForStmt)_(UnaryExpr:posIncrement)_(NameExpr0),i
[0.0000] i,(NameExpr0)^(UnaryExpr:posIncrement)^(ForStmt)_(BlockStmt)_(ExpressionStmt)_(AssignExpr:assign0)_(ArrayAccessExpr0)_(NameExpr1),i
[0.0000] i,(VariableDeclaratorId0)^(VariableDeclarator)_(IntegerLiteralExpr1),0
[0.0000] i,(VariableDeclaratorId0)^(VariableDeclarator)^(VariableDeclarationExpr)^(ForStmt)_(BlockStmt)_(ExpressionStmt)_(AssignExpr:assign0)_(ArrayAccessExpr0)_(NameExpr1),i
[0.0000] i,(VariableDeclaratorId0)^(VariableDeclarator)^(VariableDeclarationExpr)^(ForStmt)_(UnaryExpr:posIncrement)_(NameExpr0),i

topk terminals:
[['void', 'xefcdab'], ['super', 'reset'], ['METHOD_NAME', 'xefcdab'], ['xefcdab', 'xbadcfe'], ['x', 'xefcdab'], ['xcdef', '0'], ['void', 'xbadcfe'], ['void', 'xcdef'], ['xbadcfe', 'xcdef'], ['0', '0'], ['reset', 'xefcdab'], ['xcdef', 'length'], ['METHOD_NAME', 'xbadcfe'], ['METHOD_NAME', 'xcdef'], ['x', 'xbadcfe'], ['x', 'xcdef'], ['0', 'length'], ['void', '0'], ['xcdef', '0'], ['METHOD_NAME', '0'], ['METHOD_NAME', 'xoff'], ['void', 'xoff'], ['void', '0'], ['void', 'x'], ['void', 'x'], ['xcdef', 'xoff'], ['void', 'x'], ['void', 'i'], ['void', 'reset'], ['0', '0'], ['xefcdab', 'h'], ['xefcdab', 'h'], ['METHOD_NAME', '0'], ['xefcdab', 'x'], ['METHOD_NAME', 'h'], ['METHOD_NAME', 'h'], ['METHOD_NAME', 'h'], ['METHOD_NAME', 'h'], ['METHOD_NAME', 'h'], ['void', 'METHOD_NAME'], ['xcdef', 'x'], ['void', 'super'], ['h', 'xefcdab'], ['xcdef', 'i'], ['METHOD_NAME', 'reset'], ['void', 'h'], ['void', 'h'], ['void', 'h'], ['void', 'h'], ['void', 'h'], ['x', '0'], ['xbadcfe', 'h'], ['xbadcfe', 'h'], ['xbadcfe', 'x'], ['h', 'xefcdab'], ['x', 'xoff'], ['METHOD_NAME', 'x'], ['METHOD_NAME', 'x'], ['void', 'i'], ['h', 'xoff'], ['h', 'xoff'], ['i', '0'], ['reset', 'x'], ['h', 'xbadcfe'], ['METHOD_NAME', 'super'], ['reset', 'h'], ['reset', 'h'], ['super', 'xefcdab'], ['x', 'h'], ['x', 'h'], ['x', 'h'], ['METHOD_NAME', 'x'], ['xoff', '0'], ['int', '0'], ['0', 'x'], ['0', 'i'], ['h', '0'], ['METHOD_NAME', 'x'], ['h', 'xcdef'], ['xoff', 'length'], ['x', '0'], ['xoff', 'i'], ['h', 'h'], ['h', 'h'], ['h', 'h'], ['h', 'h'], ['h', 'h'], ['h', 'h'], ['h', 'h'], ['h', 'xbadcfe'], ['h', 'xbadcfe'], ['h', 'i'], ['void', 'int'], ['x', '0'], ['h', 'length'], ['h', 'xcdef'], ['h', 'xcdef'], ['void', 'x'], ['xoff', '0'], ['void', 'length'], ['xoff', 'x'], ['0', 'x'], ['i', 'x'], ['void', '0'], ['h', 'x'], ['h', 'x'], ['h', 'x'], ['x', 'length'], ['x', 'int'], ['xcdef', 'int'], ['x', 'i'], ['i', 'x'], ['xcdef', '0'], ['xcdef', 'i'], ['h', '0'], ['h', '0'], ['i', '0'], ['int', 'x'], ['xcdef', 'i'], ['h', 'x'], ['h', 'x'], ['void', 'i'], ['METHOD_NAME', 'length'], ['super', 'x'], ['xoff', 'int'], ['void', 'i'], ['i', '0'], ['i', '0'], ['x', 'i'], ['length', '0'], ['xoff', 'i'], ['METHOD_NAME', 'int'], ['i', 'i'], ['0', 'int'], ['length', 'int'], ['h', 'int'], ['i', 'int'], ['METHOD_NAME', 'i'], ['xoff', '0'], ['METHOD_NAME', 'i'], ['xoff', 'i'], ['length', 'i'], ['length', 'i'], ['0', '0'], ['0', 'i'], ['x', 'i'], ['METHOD_NAME', '0'], ['super', 'h'], ['super', 'h'], ['i', 'length'], ['0', 'i'], ['i', 'x'], ['h', 'i'], ['METHOD_NAME', 'i'], ['METHOD_NAME', 'i'], ['int', 'i'], ['h', '0'], ['i', 'i'], ['int', '0'], ['0', 'i'], ['int', 'i'], ['h', 'i'], ['0', 'i'], ['int', 'i'], ['i', 'i'], ['i', '0'], ['i', 'i'], ['i', 'i']]

