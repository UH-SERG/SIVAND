
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/bcgit__bc-java/core/src/main/jdk1.1/java/security/cert/X509CertSelector_getKeyUsage.java
method_name = getKeyUsage
method_body = public boolean[] getKeyUsage() { if (keyUsage != null) { return (boolean[]) keyUsage.clone(); } return null; }

topk path-contexts:
[0.2819] boolean,(PrimitiveType0)^(ArrayType)^(CastExpr)_(MethodCallExpr1)_(NameExpr0),keyusage
[0.2126] [],(ArrayBracketPair2)^(MethodDeclaration)_(BlockStmt)_(IfStmt)_(BinaryExpr:notEquals)_(NameExpr0),keyusage
[0.1619] null,(NullLiteralExpr1)^(BinaryExpr:notEquals)^(IfStmt)_(BlockStmt)_(ReturnStmt)_(CastExpr)_(MethodCallExpr1)_(NameExpr0),keyusage
[0.1459] keyusage,(NameExpr0)^(BinaryExpr:notEquals)^(IfStmt)_(BlockStmt)_(ReturnStmt)_(CastExpr)_(MethodCallExpr1)_(NameExpr0),keyusage
[0.0637] METHOD_NAME,(NameExpr1)^(MethodDeclaration)_(BlockStmt)_(IfStmt)_(BlockStmt)_(ReturnStmt)_(CastExpr)_(MethodCallExpr1)_(NameExpr0),keyusage
[0.0470] keyusage,(NameExpr0)^(BinaryExpr:notEquals)^(IfStmt)_(BlockStmt)_(ReturnStmt)_(CastExpr)_(MethodCallExpr1)_(NameExpr2),clone
[0.0319] keyusage,(NameExpr0)^(MethodCallExpr)^(CastExpr)^(ReturnStmt)^(BlockStmt)^(IfStmt)^(BlockStmt)_(ReturnStmt)_(NullLiteralExpr0),null
[0.0081] boolean,(PrimitiveType0)^(ArrayType)^(CastExpr)_(MethodCallExpr1)_(NameExpr2),clone
[0.0073] null,(NullLiteralExpr1)^(BinaryExpr:notEquals)^(IfStmt)_(BlockStmt)_(ReturnStmt)_(CastExpr)_(MethodCallExpr1)_(NameExpr2),clone
[0.0052] [],(ArrayBracketPair2)^(MethodDeclaration)_(BlockStmt)_(IfStmt)_(BlockStmt)_(ReturnStmt)_(CastExpr)_(MethodCallExpr1)_(NameExpr0),keyusage
[0.0048] keyusage,(NameExpr0)^(MethodCallExpr)_(NameExpr2),clone
[0.0046] clone,(NameExpr2)^(MethodCallExpr)^(CastExpr)^(ReturnStmt)^(BlockStmt)^(IfStmt)^(BlockStmt)_(ReturnStmt)_(NullLiteralExpr0),null
[0.0041] keyusage,(NameExpr0)^(BinaryExpr:notEquals)^(IfStmt)_(BlockStmt)_(ReturnStmt)_(CastExpr)_(ArrayType)_(PrimitiveType0),boolean
[0.0037] METHOD_NAME,(NameExpr1)^(MethodDeclaration)_(BlockStmt)_(IfStmt)_(BlockStmt)_(ReturnStmt)_(CastExpr)_(MethodCallExpr1)_(NameExpr2),clone
[0.0035] boolean,(PrimitiveType0)^(MethodDeclaration)_(ArrayBracketPair2),[]
[0.0024] METHOD_NAME,(NameExpr1)^(MethodDeclaration)_(BlockStmt)_(ReturnStmt)_(NullLiteralExpr0),null
[0.0024] METHOD_NAME,(NameExpr1)^(MethodDeclaration)_(BlockStmt)_(IfStmt)_(BinaryExpr:notEquals)_(NameExpr0),keyusage
[0.0022] boolean,(PrimitiveType0)^(MethodDeclaration)_(NameExpr1),METHOD_NAME
[0.0016] [],(ArrayBracketPair2)^(MethodDeclaration)_(BlockStmt)_(ReturnStmt)_(NullLiteralExpr0),null
[0.0011] METHOD_NAME,(NameExpr1)^(MethodDeclaration)_(ArrayBracketPair2),[]
[0.0010] boolean,(PrimitiveType0)^(ArrayType)^(CastExpr)^(ReturnStmt)^(BlockStmt)^(IfStmt)^(BlockStmt)_(ReturnStmt)_(NullLiteralExpr0),null
[0.0009] METHOD_NAME,(NameExpr1)^(MethodDeclaration)_(BlockStmt)_(IfStmt)_(BlockStmt)_(ReturnStmt)_(CastExpr)_(ArrayType)_(PrimitiveType0),boolean
[0.0008] [],(ArrayBracketPair2)^(MethodDeclaration)_(BlockStmt)_(IfStmt)_(BlockStmt)_(ReturnStmt)_(CastExpr)_(MethodCallExpr1)_(NameExpr2),clone
[0.0006] [],(ArrayBracketPair2)^(MethodDeclaration)_(BlockStmt)_(IfStmt)_(BlockStmt)_(ReturnStmt)_(CastExpr)_(ArrayType)_(PrimitiveType0),boolean
[0.0004] null,(NullLiteralExpr1)^(BinaryExpr:notEquals)^(IfStmt)_(BlockStmt)_(ReturnStmt)_(CastExpr)_(ArrayType)_(PrimitiveType0),boolean
[0.0002] [],(ArrayBracketPair2)^(MethodDeclaration)_(BlockStmt)_(IfStmt)_(BinaryExpr:notEquals)_(NullLiteralExpr1),null
[0.0001] keyusage,(NameExpr0)^(BinaryExpr:notEquals)^(IfStmt)^(BlockStmt)_(ReturnStmt)_(NullLiteralExpr0),null
[0.0000] METHOD_NAME,(NameExpr1)^(MethodDeclaration)_(BlockStmt)_(IfStmt)_(BinaryExpr:notEquals)_(NullLiteralExpr1),null
[0.0000] keyusage,(NameExpr0)^(BinaryExpr:notEquals)_(NullLiteralExpr1),null
[0.0000] null,(NullLiteralExpr1)^(BinaryExpr:notEquals)^(IfStmt)^(BlockStmt)_(ReturnStmt)_(NullLiteralExpr0),null

topk terminals:
[['boolean', 'keyusage'], ['[]', 'keyusage'], ['null', 'keyusage'], ['keyusage', 'keyusage'], ['METHOD_NAME', 'keyusage'], ['keyusage', 'clone'], ['keyusage', 'null'], ['boolean', 'clone'], ['null', 'clone'], ['[]', 'keyusage'], ['keyusage', 'clone'], ['clone', 'null'], ['keyusage', 'boolean'], ['METHOD_NAME', 'clone'], ['boolean', '[]'], ['METHOD_NAME', 'null'], ['METHOD_NAME', 'keyusage'], ['boolean', 'METHOD_NAME'], ['[]', 'null'], ['METHOD_NAME', '[]'], ['boolean', 'null'], ['METHOD_NAME', 'boolean'], ['[]', 'clone'], ['[]', 'boolean'], ['null', 'boolean'], ['[]', 'null'], ['keyusage', 'null'], ['METHOD_NAME', 'null'], ['keyusage', 'null'], ['null', 'null']]

