
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/ahmetaa__zemberek-nlp/experiment/src/main/java/zemberek/dependency/DependencyItem_clone.java
method_name = clone
method_body = @Override public DependencyItem clone() { try { return (DependencyItem) super.clone(); } catch (CloneNotSupportedException e) { e.printStackTrace(); } return null; }

topk path-contexts:
[0.3629] dependencyitem,(ClassOrInterfaceType1)^(MethodDeclaration)_(BlockStmt)_(TryStmt)_(BlockStmt)_(ReturnStmt)_(CastExpr)_(MethodCallExpr1)_(SuperExpr0),super
[0.1734] super,(SuperExpr0)^(MethodCallExpr)^(CastExpr)^(ReturnStmt)^(BlockStmt)^(TryStmt)_(CatchClause)_(Parameter)_(ClassOrInterfaceType1),clonenotsupportedexception
[0.0950] super,(SuperExpr0)^(MethodCallExpr)_(NameExpr2),clone
[0.0746] dependencyitem,(ClassOrInterfaceType1)^(MethodDeclaration)_(BlockStmt)_(TryStmt)_(CatchClause)_(Parameter)_(ClassOrInterfaceType1),clonenotsupportedexception
[0.0370] dependencyitem,(ClassOrInterfaceType0)^(CastExpr)^(ReturnStmt)^(BlockStmt)^(TryStmt)_(CatchClause)_(Parameter)_(ClassOrInterfaceType1),clonenotsupportedexception
[0.0351] super,(SuperExpr0)^(MethodCallExpr)^(CastExpr)^(ReturnStmt)^(BlockStmt)^(TryStmt)_(CatchClause)_(Parameter)_(VariableDeclaratorId0),e
[0.0334] clone,(NameExpr2)^(MethodCallExpr)^(CastExpr)^(ReturnStmt)^(BlockStmt)^(TryStmt)_(CatchClause)_(Parameter)_(ClassOrInterfaceType1),clonenotsupportedexception
[0.0312] dependencyitem,(ClassOrInterfaceType1)^(MethodDeclaration)_(BlockStmt)_(TryStmt)_(BlockStmt)_(ReturnStmt)_(CastExpr)_(MethodCallExpr1)_(NameExpr2),clone
[0.0226] METHOD_NAME,(NameExpr2)^(MethodDeclaration)_(BlockStmt)_(TryStmt)_(BlockStmt)_(ReturnStmt)_(CastExpr)_(MethodCallExpr1)_(NameExpr2),clone
[0.0218] e,(VariableDeclaratorId0)^(Parameter)_(ClassOrInterfaceType1),clonenotsupportedexception
[0.0199] dependencyitem,(ClassOrInterfaceType0)^(CastExpr)^(ReturnStmt)^(BlockStmt)^(TryStmt)^(BlockStmt)_(ReturnStmt)_(NullLiteralExpr0),null
[0.0133] clone,(NameExpr2)^(MethodCallExpr)^(CastExpr)^(ReturnStmt)^(BlockStmt)^(TryStmt)^(BlockStmt)_(ReturnStmt)_(NullLiteralExpr0),null
[0.0123] METHOD_NAME,(NameExpr2)^(MethodDeclaration)_(BlockStmt)_(TryStmt)_(BlockStmt)_(ReturnStmt)_(CastExpr)_(ClassOrInterfaceType0),dependencyitem
[0.0116] dependencyitem,(ClassOrInterfaceType1)^(MethodDeclaration)_(BlockStmt)_(TryStmt)_(CatchClause)_(BlockStmt)_(ExpressionStmt)_(MethodCallExpr0)_(NameExpr0),e
[0.0070] dependencyitem,(ClassOrInterfaceType1)^(MethodDeclaration)_(BlockStmt)_(ReturnStmt)_(NullLiteralExpr0),null
[0.0065] dependencyitem,(ClassOrInterfaceType1)^(MethodDeclaration)_(BlockStmt)_(TryStmt)_(CatchClause)_(Parameter)_(VariableDeclaratorId0),e
[0.0064] dependencyitem,(ClassOrInterfaceType1)^(MethodDeclaration)_(BlockStmt)_(TryStmt)_(CatchClause)_(BlockStmt)_(ExpressionStmt)_(MethodCallExpr0)_(NameExpr2),printstacktrace
[0.0063] dependencyitem,(ClassOrInterfaceType1)^(MethodDeclaration)_(NameExpr2),METHOD_NAME
[0.0054] METHOD_NAME,(NameExpr2)^(MethodDeclaration)_(BlockStmt)_(ReturnStmt)_(NullLiteralExpr0),null
[0.0040] METHOD_NAME,(NameExpr2)^(MethodDeclaration)_(BlockStmt)_(TryStmt)_(BlockStmt)_(ReturnStmt)_(CastExpr)_(MethodCallExpr1)_(SuperExpr0),super
[0.0039] METHOD_NAME,(NameExpr2)^(MethodDeclaration)_(BlockStmt)_(TryStmt)_(CatchClause)_(BlockStmt)_(ExpressionStmt)_(MethodCallExpr0)_(NameExpr0),e
[0.0032] override,(NameExpr0)^(MarkerAnnotationExpr)^(MethodDeclaration)_(NameExpr2),METHOD_NAME
[0.0025] clone,(NameExpr2)^(MethodCallExpr)^(CastExpr)^(ReturnStmt)^(BlockStmt)^(TryStmt)_(CatchClause)_(Parameter)_(VariableDeclaratorId0),e
[0.0025] dependencyitem,(ClassOrInterfaceType1)^(MethodDeclaration)_(BlockStmt)_(TryStmt)_(BlockStmt)_(ReturnStmt)_(CastExpr)_(ClassOrInterfaceType0),dependencyitem
[0.0025] METHOD_NAME,(NameExpr2)^(MethodDeclaration)_(BlockStmt)_(TryStmt)_(CatchClause)_(BlockStmt)_(ExpressionStmt)_(MethodCallExpr0)_(NameExpr2),printstacktrace
[0.0023] override,(NameExpr0)^(MarkerAnnotationExpr)^(MethodDeclaration)_(ClassOrInterfaceType1),dependencyitem
[0.0012] dependencyitem,(ClassOrInterfaceType0)^(CastExpr)_(MethodCallExpr1)_(NameExpr2),clone
[0.0005] dependencyitem,(ClassOrInterfaceType0)^(CastExpr)^(ReturnStmt)^(BlockStmt)^(TryStmt)_(CatchClause)_(Parameter)_(VariableDeclaratorId0),e
[0.0005] super,(SuperExpr0)^(MethodCallExpr)^(CastExpr)^(ReturnStmt)^(BlockStmt)^(TryStmt)^(BlockStmt)_(ReturnStmt)_(NullLiteralExpr0),null
[0.0004] METHOD_NAME,(NameExpr2)^(MethodDeclaration)_(BlockStmt)_(TryStmt)_(CatchClause)_(Parameter)_(ClassOrInterfaceType1),clonenotsupportedexception
[0.0004] clonenotsupportedexception,(ClassOrInterfaceType1)^(Parameter)^(CatchClause)^(TryStmt)^(BlockStmt)_(ReturnStmt)_(NullLiteralExpr0),null
[0.0003] e,(NameExpr0)^(MethodCallExpr)_(NameExpr2),printstacktrace
[0.0001] printstacktrace,(NameExpr2)^(MethodCallExpr)^(ExpressionStmt)^(BlockStmt)^(CatchClause)^(TryStmt)^(BlockStmt)_(ReturnStmt)_(NullLiteralExpr0),null
[0.0000] clonenotsupportedexception,(ClassOrInterfaceType1)^(Parameter)^(CatchClause)_(BlockStmt)_(ExpressionStmt)_(MethodCallExpr0)_(NameExpr2),printstacktrace
[0.0000] clonenotsupportedexception,(ClassOrInterfaceType1)^(Parameter)^(CatchClause)_(BlockStmt)_(ExpressionStmt)_(MethodCallExpr0)_(NameExpr0),e
[0.0000] dependencyitem,(ClassOrInterfaceType0)^(CastExpr)_(MethodCallExpr1)_(SuperExpr0),super
[0.0000] METHOD_NAME,(NameExpr2)^(MethodDeclaration)_(BlockStmt)_(TryStmt)_(CatchClause)_(Parameter)_(VariableDeclaratorId0),e
[0.0000] e,(NameExpr0)^(MethodCallExpr)^(ExpressionStmt)^(BlockStmt)^(CatchClause)^(TryStmt)^(BlockStmt)_(ReturnStmt)_(NullLiteralExpr0),null
[0.0000] e,(VariableDeclaratorId0)^(Parameter)^(CatchClause)_(BlockStmt)_(ExpressionStmt)_(MethodCallExpr0)_(NameExpr2),printstacktrace
[0.0000] e,(VariableDeclaratorId0)^(Parameter)^(CatchClause)^(TryStmt)^(BlockStmt)_(ReturnStmt)_(NullLiteralExpr0),null
[0.0000] e,(VariableDeclaratorId0)^(Parameter)^(CatchClause)_(BlockStmt)_(ExpressionStmt)_(MethodCallExpr0)_(NameExpr0),e

topk terminals:
[['dependencyitem', 'super'], ['super', 'clonenotsupportedexception'], ['super', 'clone'], ['dependencyitem', 'clonenotsupportedexception'], ['dependencyitem', 'clonenotsupportedexception'], ['super', 'e'], ['clone', 'clonenotsupportedexception'], ['dependencyitem', 'clone'], ['METHOD_NAME', 'clone'], ['e', 'clonenotsupportedexception'], ['dependencyitem', 'null'], ['clone', 'null'], ['METHOD_NAME', 'dependencyitem'], ['dependencyitem', 'e'], ['dependencyitem', 'null'], ['dependencyitem', 'e'], ['dependencyitem', 'printstacktrace'], ['dependencyitem', 'METHOD_NAME'], ['METHOD_NAME', 'null'], ['METHOD_NAME', 'super'], ['METHOD_NAME', 'e'], ['override', 'METHOD_NAME'], ['clone', 'e'], ['dependencyitem', 'dependencyitem'], ['METHOD_NAME', 'printstacktrace'], ['override', 'dependencyitem'], ['dependencyitem', 'clone'], ['dependencyitem', 'e'], ['super', 'null'], ['METHOD_NAME', 'clonenotsupportedexception'], ['clonenotsupportedexception', 'null'], ['e', 'printstacktrace'], ['printstacktrace', 'null'], ['clonenotsupportedexception', 'printstacktrace'], ['clonenotsupportedexception', 'e'], ['dependencyitem', 'super'], ['METHOD_NAME', 'e'], ['e', 'null'], ['e', 'printstacktrace'], ['e', 'null'], ['e', 'e']]

