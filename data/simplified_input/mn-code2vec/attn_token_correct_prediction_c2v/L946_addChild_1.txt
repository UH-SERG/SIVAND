
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/ahmetaa__zemberek-nlp/core/src/main/java/zemberek/core/collections/Trie_addChild.java
method_name = addChild
method_body = void addChild(Node<T> node) { if (children == null) { children = new IntMap<>(4); } children.put(node.getChar(), node); }

topk path-contexts:
[0.1214] children,(NameExpr0)^(AssignExpr:assign)_(ObjectCreationExpr)_(ClassOrInterfaceType0),intmap
[0.0643] METHOD_NAME,(NameExpr1)^(MethodDeclaration)_(BlockStmt)_(ExpressionStmt)_(MethodCallExpr0)_(NameExpr0),children
[0.0560] children,(NameExpr0)^(BinaryExpr:equals)^(IfStmt)_(BlockStmt)_(ExpressionStmt)_(AssignExpr:assign0)_(ObjectCreationExpr)_(ClassOrInterfaceType0),intmap
[0.0556] getchar,(NameExpr2)^(MethodCallExpr2)^(MethodCallExpr)_(NameExpr4),put
[0.0506] node,(VariableDeclaratorId0)^(Parameter)^(MethodDeclaration)_(BlockStmt)_(ExpressionStmt)_(MethodCallExpr0)_(NameExpr0),children
[0.0487] t,(ClassOrInterfaceType0)^(ClassOrInterfaceType)^(Parameter)^(MethodDeclaration)_(BlockStmt)_(ExpressionStmt)_(MethodCallExpr0)_(NameExpr0),children
[0.0432] node,(VariableDeclaratorId0)^(Parameter)^(MethodDeclaration)_(BlockStmt)_(IfStmt)_(BlockStmt)_(ExpressionStmt)_(AssignExpr:assign0)_(NameExpr0),children
[0.0407] null,(NullLiteralExpr1)^(BinaryExpr:equals)^(IfStmt)_(BlockStmt)_(ExpressionStmt)_(AssignExpr:assign0)_(ObjectCreationExpr)_(ClassOrInterfaceType0),intmap
[0.0357] METHOD_NAME,(NameExpr1)^(MethodDeclaration)_(BlockStmt)_(IfStmt)_(BlockStmt)_(ExpressionStmt)_(AssignExpr:assign0)_(ObjectCreationExpr)_(ClassOrInterfaceType0),intmap
[0.0355] children,(NameExpr0)^(BinaryExpr:equals)^(IfStmt)_(BlockStmt)_(ExpressionStmt)_(AssignExpr:assign0)_(ObjectCreationExpr)_(IntegerLiteralExpr1),4
[0.0327] children,(NameExpr0)^(BinaryExpr:equals)^(IfStmt)^(BlockStmt)_(ExpressionStmt)_(MethodCallExpr0)_(NameExpr0),children
[0.0327] node,(VariableDeclaratorId0)^(Parameter)^(MethodDeclaration)_(BlockStmt)_(ExpressionStmt)_(MethodCallExpr0)_(NameExpr4),put
[0.0271] children,(NameExpr0)^(MethodCallExpr)_(MethodCallExpr2)_(NameExpr2),getchar
[0.0267] t,(ClassOrInterfaceType0)^(ClassOrInterfaceType)^(Parameter)^(MethodDeclaration)_(BlockStmt)_(ExpressionStmt)_(MethodCallExpr0)_(NameExpr4),put
[0.0242] children,(NameExpr0)^(BinaryExpr:equals)^(IfStmt)^(BlockStmt)_(ExpressionStmt)_(MethodCallExpr0)_(NameExpr4),put
[0.0227] METHOD_NAME,(NameExpr1)^(MethodDeclaration)_(BlockStmt)_(IfStmt)_(BlockStmt)_(ExpressionStmt)_(AssignExpr:assign0)_(ObjectCreationExpr)_(IntegerLiteralExpr1),4
[0.0220] void,(VoidType0)^(MethodDeclaration)_(NameExpr1),METHOD_NAME
[0.0173] t,(ClassOrInterfaceType0)^(ClassOrInterfaceType)^(Parameter)^(MethodDeclaration)_(BlockStmt)_(ExpressionStmt)_(MethodCallExpr0)_(MethodCallExpr2)_(NameExpr2),getchar
[0.0165] METHOD_NAME,(NameExpr1)^(MethodDeclaration)_(BlockStmt)_(ExpressionStmt)_(MethodCallExpr0)_(MethodCallExpr2)_(NameExpr2),getchar
[0.0156] null,(NullLiteralExpr1)^(BinaryExpr:equals)^(IfStmt)^(BlockStmt)_(ExpressionStmt)_(MethodCallExpr0)_(NameExpr0),children
[0.0152] getchar,(NameExpr2)^(MethodCallExpr2)^(MethodCallExpr)_(NameExpr3),node
[0.0148] void,(VoidType0)^(MethodDeclaration)_(Parameter)_(VariableDeclaratorId0),node
[0.0130] METHOD_NAME,(NameExpr1)^(MethodDeclaration)_(BlockStmt)_(IfStmt)_(BlockStmt)_(ExpressionStmt)_(AssignExpr:assign0)_(NameExpr0),children
[0.0126] void,(VoidType0)^(MethodDeclaration)_(Parameter)_(ClassOrInterfaceType)_(ClassOrInterfaceType0),t
[0.0108] t,(ClassOrInterfaceType0)^(ClassOrInterfaceType)^(Parameter)^(MethodDeclaration)_(BlockStmt)_(ExpressionStmt)_(MethodCallExpr0)_(NameExpr3),node
[0.0108] children,(NameExpr0)^(BinaryExpr:equals)^(IfStmt)^(BlockStmt)_(ExpressionStmt)_(MethodCallExpr0)_(MethodCallExpr2)_(NameExpr0),node
[0.0107] node,(NameExpr3)^(MethodCallExpr)_(NameExpr4),put
[0.0098] node,(VariableDeclaratorId0)^(Parameter)^(MethodDeclaration)_(BlockStmt)_(IfStmt)_(BinaryExpr:equals)_(NameExpr0),children
[0.0095] METHOD_NAME,(NameExpr1)^(MethodDeclaration)_(BlockStmt)_(ExpressionStmt)_(MethodCallExpr0)_(NameExpr4),put
[0.0087] METHOD_NAME,(NameExpr1)^(MethodDeclaration)_(BlockStmt)_(ExpressionStmt)_(MethodCallExpr0)_(NameExpr3),node
[0.0083] children,(NameExpr0)^(BinaryExpr:equals)^(IfStmt)^(BlockStmt)_(ExpressionStmt)_(MethodCallExpr0)_(NameExpr3),node
[0.0082] node,(VariableDeclaratorId0)^(Parameter)^(MethodDeclaration)_(BlockStmt)_(ExpressionStmt)_(MethodCallExpr0)_(NameExpr3),node
[0.0077] children,(NameExpr0)^(AssignExpr:assign)^(ExpressionStmt)^(BlockStmt)^(IfStmt)^(BlockStmt)_(ExpressionStmt)_(MethodCallExpr0)_(NameExpr4),put
[0.0076] node,(VariableDeclaratorId0)^(Parameter)^(MethodDeclaration)_(BlockStmt)_(ExpressionStmt)_(MethodCallExpr0)_(MethodCallExpr2)_(NameExpr2),getchar
[0.0074] children,(NameExpr0)^(AssignExpr:assign)^(ExpressionStmt)^(BlockStmt)^(IfStmt)^(BlockStmt)_(ExpressionStmt)_(MethodCallExpr0)_(NameExpr3),node
[0.0072] node,(VariableDeclaratorId0)^(Parameter)_(ClassOrInterfaceType)_(ClassOrInterfaceType0),t
[0.0056] null,(NullLiteralExpr1)^(BinaryExpr:equals)^(IfStmt)^(BlockStmt)_(ExpressionStmt)_(MethodCallExpr0)_(NameExpr4),put
[0.0046] intmap,(ClassOrInterfaceType0)^(ObjectCreationExpr1)_(IntegerLiteralExpr1),4
[0.0045] children,(NameExpr0)^(BinaryExpr:equals)^(IfStmt)_(BlockStmt)_(ExpressionStmt)_(AssignExpr:assign0)_(NameExpr0),children
[0.0041] children,(NameExpr0)^(MethodCallExpr)_(MethodCallExpr2)_(NameExpr0),node
[0.0039] node,(NameExpr0)^(MethodCallExpr2)^(MethodCallExpr)_(NameExpr4),put
[0.0038] t,(ClassOrInterfaceType0)^(ClassOrInterfaceType)^(Parameter)^(MethodDeclaration)_(BlockStmt)_(ExpressionStmt)_(MethodCallExpr0)_(MethodCallExpr2)_(NameExpr0),node
[0.0031] null,(NullLiteralExpr1)^(BinaryExpr:equals)^(IfStmt)^(BlockStmt)_(ExpressionStmt)_(MethodCallExpr0)_(NameExpr3),node
[0.0031] node,(NameExpr0)^(MethodCallExpr2)_(NameExpr2),getchar
[0.0026] node,(VariableDeclaratorId0)^(Parameter)^(MethodDeclaration)_(BlockStmt)_(ExpressionStmt)_(MethodCallExpr0)_(MethodCallExpr2)_(NameExpr0),node
[0.0026] METHOD_NAME,(NameExpr1)^(MethodDeclaration)_(Parameter)_(ClassOrInterfaceType)_(ClassOrInterfaceType0),t
[0.0020] children,(NameExpr0)^(BinaryExpr:equals)^(IfStmt)^(BlockStmt)_(ExpressionStmt)_(MethodCallExpr0)_(MethodCallExpr2)_(NameExpr2),getchar
[0.0019] null,(NullLiteralExpr1)^(BinaryExpr:equals)^(IfStmt)_(BlockStmt)_(ExpressionStmt)_(AssignExpr:assign0)_(ObjectCreationExpr)_(IntegerLiteralExpr1),4
[0.0013] node,(NameExpr0)^(MethodCallExpr2)^(MethodCallExpr)_(NameExpr3),node
[0.0012] null,(NullLiteralExpr1)^(BinaryExpr:equals)^(IfStmt)^(BlockStmt)_(ExpressionStmt)_(MethodCallExpr0)_(MethodCallExpr2)_(NameExpr0),node
[0.0008] children,(NameExpr0)^(AssignExpr:assign)_(ObjectCreationExpr)_(IntegerLiteralExpr1),4
[0.0007] METHOD_NAME,(NameExpr1)^(MethodDeclaration)_(BlockStmt)_(IfStmt)_(BinaryExpr:equals)_(NameExpr0),children
[0.0007] t,(ClassOrInterfaceType0)^(ClassOrInterfaceType)^(Parameter)^(MethodDeclaration)_(BlockStmt)_(IfStmt)_(BinaryExpr:equals)_(NameExpr0),children
[0.0005] METHOD_NAME,(NameExpr1)^(MethodDeclaration)_(BlockStmt)_(ExpressionStmt)_(MethodCallExpr0)_(MethodCallExpr2)_(NameExpr0),node
[0.0004] METHOD_NAME,(NameExpr1)^(MethodDeclaration)_(Parameter)_(VariableDeclaratorId0),node
[0.0004] null,(NullLiteralExpr1)^(BinaryExpr:equals)^(IfStmt)^(BlockStmt)_(ExpressionStmt)_(MethodCallExpr0)_(MethodCallExpr2)_(NameExpr2),getchar
[0.0002] children,(NameExpr0)^(AssignExpr:assign)^(ExpressionStmt)^(BlockStmt)^(IfStmt)^(BlockStmt)_(ExpressionStmt)_(MethodCallExpr0)_(NameExpr0),children
[0.0001] METHOD_NAME,(NameExpr1)^(MethodDeclaration)_(BlockStmt)_(IfStmt)_(BinaryExpr:equals)_(NullLiteralExpr1),null
[0.0001] null,(NullLiteralExpr1)^(BinaryExpr:equals)^(IfStmt)_(BlockStmt)_(ExpressionStmt)_(AssignExpr:assign0)_(NameExpr0),children
[0.0001] t,(ClassOrInterfaceType0)^(ClassOrInterfaceType)^(Parameter)^(MethodDeclaration)_(BlockStmt)_(IfStmt)_(BinaryExpr:equals)_(NullLiteralExpr1),null
[0.0001] children,(NameExpr0)^(BinaryExpr:equals)_(NullLiteralExpr1),null
[0.0001] node,(VariableDeclaratorId0)^(Parameter)^(MethodDeclaration)_(BlockStmt)_(IfStmt)_(BinaryExpr:equals)_(NullLiteralExpr1),null

topk terminals:
[['children', 'intmap'], ['METHOD_NAME', 'children'], ['children', 'intmap'], ['getchar', 'put'], ['node', 'children'], ['t', 'children'], ['node', 'children'], ['null', 'intmap'], ['METHOD_NAME', 'intmap'], ['children', '4'], ['children', 'children'], ['node', 'put'], ['children', 'getchar'], ['t', 'put'], ['children', 'put'], ['METHOD_NAME', '4'], ['void', 'METHOD_NAME'], ['t', 'getchar'], ['METHOD_NAME', 'getchar'], ['null', 'children'], ['getchar', 'node'], ['void', 'node'], ['METHOD_NAME', 'children'], ['void', 't'], ['t', 'node'], ['children', 'node'], ['node', 'put'], ['node', 'children'], ['METHOD_NAME', 'put'], ['METHOD_NAME', 'node'], ['children', 'node'], ['node', 'node'], ['children', 'put'], ['node', 'getchar'], ['children', 'node'], ['node', 't'], ['null', 'put'], ['intmap', '4'], ['children', 'children'], ['children', 'node'], ['node', 'put'], ['t', 'node'], ['null', 'node'], ['node', 'getchar'], ['node', 'node'], ['METHOD_NAME', 't'], ['children', 'getchar'], ['null', '4'], ['node', 'node'], ['null', 'node'], ['children', '4'], ['METHOD_NAME', 'children'], ['t', 'children'], ['METHOD_NAME', 'node'], ['METHOD_NAME', 'node'], ['null', 'getchar'], ['children', 'children'], ['METHOD_NAME', 'null'], ['null', 'children'], ['t', 'null'], ['children', 'null'], ['node', 'null']]

