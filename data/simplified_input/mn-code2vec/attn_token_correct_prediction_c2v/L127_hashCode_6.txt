
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/tang-jie__NettyRPC/src/main/java/com/newlandframework/rpc/jmx/ModuleMetricsVisitor_hashCode.java
method_name = hashCode
method_body = @Override public int hashCode() { final int prime = 31; int result = 1; result = prime * result + ((moduleName == null) ? 0 : moduleName.hashCode()); result = prime * result + ((methodName == null) ? 0 : methodName.hashCode()); return result; }

topk path-contexts:
[0.1121] int,(PrimitiveType1)^(MethodDeclaration)_(BlockStmt)_(ExpressionStmt)_(AssignExpr:assign0)_(BinaryExpr:plus)_(EnclosedExpr)_(ConditionalExpr)_(IntegerLiteralExpr1),0
[0.1121] int,(PrimitiveType1)^(MethodDeclaration)_(BlockStmt)_(ExpressionStmt)_(AssignExpr:assign0)_(BinaryExpr:plus)_(EnclosedExpr)_(ConditionalExpr)_(IntegerLiteralExpr1),0
[0.0859] result,(NameExpr1)^(BinaryExpr:times)^(BinaryExpr:plus1)_(EnclosedExpr)_(ConditionalExpr)_(MethodCallExpr2)_(NameExpr2),hashcode
[0.0859] result,(NameExpr1)^(BinaryExpr:times)^(BinaryExpr:plus1)_(EnclosedExpr)_(ConditionalExpr)_(MethodCallExpr2)_(NameExpr2),hashcode
[0.0741] int,(PrimitiveType1)^(MethodDeclaration)_(BlockStmt)_(ExpressionStmt)_(AssignExpr:assign0)_(BinaryExpr:plus)_(BinaryExpr:times)_(NameExpr0),prime
[0.0741] int,(PrimitiveType1)^(MethodDeclaration)_(BlockStmt)_(ExpressionStmt)_(AssignExpr:assign0)_(BinaryExpr:plus)_(BinaryExpr:times)_(NameExpr0),prime
[0.0526] prime,(NameExpr0)^(BinaryExpr:times)^(BinaryExpr:plus1)_(EnclosedExpr)_(ConditionalExpr)_(MethodCallExpr2)_(NameExpr2),hashcode
[0.0526] prime,(NameExpr0)^(BinaryExpr:times)^(BinaryExpr:plus1)_(EnclosedExpr)_(ConditionalExpr)_(MethodCallExpr2)_(NameExpr2),hashcode
[0.0302] prime,(NameExpr0)^(BinaryExpr:times)^(BinaryExpr:plus1)^(AssignExpr:assign)^(ExpressionStmt)^(BlockStmt)_(ReturnStmt)_(NameExpr0),result
[0.0302] prime,(NameExpr0)^(BinaryExpr:times)^(BinaryExpr:plus1)^(AssignExpr:assign)^(ExpressionStmt)^(BlockStmt)_(ReturnStmt)_(NameExpr0),result
[0.0287] result,(NameExpr0)^(AssignExpr:assign)^(ExpressionStmt)^(BlockStmt)_(ExpressionStmt)_(AssignExpr:assign0)_(BinaryExpr:plus)_(BinaryExpr:times)_(NameExpr0),prime
[0.0188] modulename,(NameExpr0)^(MethodCallExpr)_(NameExpr2),hashcode
[0.0188] int,(PrimitiveType1)^(MethodDeclaration)_(BlockStmt)_(ExpressionStmt)_(VariableDeclarationExpr)_(VariableDeclarator)_(IntegerLiteralExpr1),31
[0.0141] modulename,(NameExpr0)^(BinaryExpr:equals)^(EnclosedExpr)^(ConditionalExpr)_(MethodCallExpr2)_(NameExpr2),hashcode
[0.0140] result,(NameExpr0)^(AssignExpr:assign)_(BinaryExpr:plus)_(EnclosedExpr)_(ConditionalExpr)_(MethodCallExpr2)_(NameExpr2),hashcode
[0.0140] result,(NameExpr0)^(AssignExpr:assign)_(BinaryExpr:plus)_(EnclosedExpr)_(ConditionalExpr)_(MethodCallExpr2)_(NameExpr2),hashcode
[0.0135] 0,(IntegerLiteralExpr1)^(ConditionalExpr)_(MethodCallExpr2)_(NameExpr0),modulename
[0.0119] 0,(IntegerLiteralExpr1)^(ConditionalExpr)_(MethodCallExpr2)_(NameExpr2),hashcode
[0.0119] 0,(IntegerLiteralExpr1)^(ConditionalExpr)_(MethodCallExpr2)_(NameExpr2),hashcode
[0.0098] 0,(IntegerLiteralExpr1)^(ConditionalExpr)_(MethodCallExpr2)_(NameExpr0),methodname
[0.0086] METHOD_NAME,(NameExpr2)^(MethodDeclaration)_(BlockStmt)_(ExpressionStmt)_(AssignExpr:assign0)_(BinaryExpr:plus)_(BinaryExpr:times)_(NameExpr0),prime
[0.0086] METHOD_NAME,(NameExpr2)^(MethodDeclaration)_(BlockStmt)_(ExpressionStmt)_(AssignExpr:assign0)_(BinaryExpr:plus)_(BinaryExpr:times)_(NameExpr0),prime
[0.0084] int,(PrimitiveType1)^(MethodDeclaration)_(BlockStmt)_(ExpressionStmt)_(VariableDeclarationExpr)_(VariableDeclarator)_(IntegerLiteralExpr1),1
[0.0073] result,(NameExpr1)^(BinaryExpr:times)^(BinaryExpr:plus1)^(AssignExpr:assign)^(ExpressionStmt)^(BlockStmt)_(ReturnStmt)_(NameExpr0),result
[0.0073] result,(NameExpr1)^(BinaryExpr:times)^(BinaryExpr:plus1)^(AssignExpr:assign)^(ExpressionStmt)^(BlockStmt)_(ReturnStmt)_(NameExpr0),result
[0.0069] methodname,(NameExpr0)^(MethodCallExpr)_(NameExpr2),hashcode
[0.0062] prime,(NameExpr0)^(BinaryExpr:times)^(BinaryExpr:plus1)_(EnclosedExpr)_(ConditionalExpr)_(EnclosedExpr)_(BinaryExpr:equals)_(NullLiteralExpr1),null
[0.0062] prime,(NameExpr0)^(BinaryExpr:times)^(BinaryExpr:plus1)_(EnclosedExpr)_(ConditionalExpr)_(EnclosedExpr)_(BinaryExpr:equals)_(NullLiteralExpr1),null
[0.0062] null,(NullLiteralExpr1)^(BinaryExpr:equals)^(EnclosedExpr)^(ConditionalExpr)_(MethodCallExpr2)_(NameExpr2),hashcode
[0.0062] null,(NullLiteralExpr1)^(BinaryExpr:equals)^(EnclosedExpr)^(ConditionalExpr)_(MethodCallExpr2)_(NameExpr2),hashcode
[0.0050] methodname,(NameExpr0)^(BinaryExpr:equals)^(EnclosedExpr)^(ConditionalExpr)_(MethodCallExpr2)_(NameExpr2),hashcode
[0.0046] int,(PrimitiveType1)^(MethodDeclaration)_(BlockStmt)_(ExpressionStmt)_(VariableDeclarationExpr)_(VariableDeclarator)_(VariableDeclaratorId0),prime
[0.0032] int,(PrimitiveType1)^(MethodDeclaration)_(NameExpr2),METHOD_NAME
[0.0030] int,(PrimitiveType1)^(MethodDeclaration)_(BlockStmt)_(ReturnStmt)_(NameExpr0),result
[0.0029] int,(PrimitiveType1)^(MethodDeclaration)_(BlockStmt)_(ExpressionStmt)_(AssignExpr:assign0)_(BinaryExpr:plus)_(BinaryExpr:times)_(NameExpr1),result
[0.0029] int,(PrimitiveType1)^(MethodDeclaration)_(BlockStmt)_(ExpressionStmt)_(AssignExpr:assign0)_(BinaryExpr:plus)_(BinaryExpr:times)_(NameExpr1),result
[0.0028] int,(PrimitiveType1)^(MethodDeclaration)_(BlockStmt)_(ExpressionStmt)_(AssignExpr:assign0)_(NameExpr0),result
[0.0028] int,(PrimitiveType1)^(MethodDeclaration)_(BlockStmt)_(ExpressionStmt)_(AssignExpr:assign0)_(NameExpr0),result
[0.0026] override,(NameExpr0)^(MarkerAnnotationExpr)^(MethodDeclaration)_(NameExpr2),METHOD_NAME
[0.0021] override,(NameExpr0)^(MarkerAnnotationExpr)^(MethodDeclaration)_(PrimitiveType1),int
[0.0021] result,(NameExpr1)^(BinaryExpr:times)^(BinaryExpr:plus1)_(EnclosedExpr)_(ConditionalExpr)_(EnclosedExpr)_(BinaryExpr:equals)_(NullLiteralExpr1),null
[0.0021] result,(NameExpr1)^(BinaryExpr:times)^(BinaryExpr:plus1)_(EnclosedExpr)_(ConditionalExpr)_(EnclosedExpr)_(BinaryExpr:equals)_(NullLiteralExpr1),null
[0.0019] METHOD_NAME,(NameExpr2)^(MethodDeclaration)_(BlockStmt)_(ReturnStmt)_(NameExpr0),result
[0.0019] prime,(NameExpr0)^(BinaryExpr:times)^(BinaryExpr:plus1)_(EnclosedExpr)_(ConditionalExpr)_(EnclosedExpr)_(BinaryExpr:equals)_(NameExpr0),modulename
[0.0015] prime,(NameExpr0)^(BinaryExpr:times)^(BinaryExpr:plus1)_(EnclosedExpr)_(ConditionalExpr)_(EnclosedExpr)_(BinaryExpr:equals)_(NameExpr0),methodname
[0.0011] result,(NameExpr0)^(AssignExpr:assign)_(BinaryExpr:plus)_(EnclosedExpr)_(ConditionalExpr)_(EnclosedExpr)_(BinaryExpr:equals)_(NullLiteralExpr1),null
[0.0011] result,(NameExpr0)^(AssignExpr:assign)_(BinaryExpr:plus)_(EnclosedExpr)_(ConditionalExpr)_(EnclosedExpr)_(BinaryExpr:equals)_(NullLiteralExpr1),null
[0.0010] result,(NameExpr1)^(BinaryExpr:times)^(BinaryExpr:plus1)_(EnclosedExpr)_(ConditionalExpr)_(MethodCallExpr2)_(NameExpr0),modulename
[0.0010] prime,(NameExpr0)^(BinaryExpr:times)^(BinaryExpr:plus1)_(EnclosedExpr)_(ConditionalExpr)_(MethodCallExpr2)_(NameExpr0),modulename
[0.0009] result,(NameExpr0)^(AssignExpr:assign)_(BinaryExpr:plus)_(EnclosedExpr)_(ConditionalExpr)_(MethodCallExpr2)_(NameExpr0),modulename
[0.0008] result,(NameExpr1)^(BinaryExpr:times)^(BinaryExpr:plus1)_(EnclosedExpr)_(ConditionalExpr)_(EnclosedExpr)_(BinaryExpr:equals)_(NameExpr0),modulename
[0.0007] prime,(NameExpr0)^(BinaryExpr:times)^(BinaryExpr:plus1)_(EnclosedExpr)_(ConditionalExpr)_(MethodCallExpr2)_(NameExpr0),methodname
[0.0007] int,(PrimitiveType0)^(VariableDeclarationExpr)^(ExpressionStmt)^(BlockStmt)_(ExpressionStmt)_(AssignExpr:assign0)_(BinaryExpr:plus)_(BinaryExpr:times)_(NameExpr0),prime
[0.0007] int,(PrimitiveType0)^(VariableDeclarationExpr)^(ExpressionStmt)^(BlockStmt)_(ExpressionStmt)_(AssignExpr:assign0)_(BinaryExpr:plus)_(BinaryExpr:times)_(NameExpr0),prime
[0.0007] int,(PrimitiveType0)^(VariableDeclarationExpr)^(ExpressionStmt)^(BlockStmt)_(ExpressionStmt)_(AssignExpr:assign0)_(BinaryExpr:plus)_(BinaryExpr:times)_(NameExpr0),prime
[0.0007] int,(PrimitiveType1)^(MethodDeclaration)_(BlockStmt)_(ExpressionStmt)_(VariableDeclarationExpr)_(PrimitiveType0),int
[0.0007] int,(PrimitiveType1)^(MethodDeclaration)_(BlockStmt)_(ExpressionStmt)_(VariableDeclarationExpr)_(PrimitiveType0),int
[0.0006] result,(NameExpr1)^(BinaryExpr:times)^(BinaryExpr:plus1)_(EnclosedExpr)_(ConditionalExpr)_(EnclosedExpr)_(BinaryExpr:equals)_(NameExpr0),methodname
[0.0006] METHOD_NAME,(NameExpr2)^(MethodDeclaration)_(BlockStmt)_(ExpressionStmt)_(AssignExpr:assign0)_(BinaryExpr:plus)_(BinaryExpr:times)_(NameExpr1),result
[0.0006] METHOD_NAME,(NameExpr2)^(MethodDeclaration)_(BlockStmt)_(ExpressionStmt)_(AssignExpr:assign0)_(BinaryExpr:plus)_(BinaryExpr:times)_(NameExpr1),result
[0.0006] result,(NameExpr1)^(BinaryExpr:times)^(BinaryExpr:plus1)_(EnclosedExpr)_(ConditionalExpr)_(MethodCallExpr2)_(NameExpr0),methodname
[0.0005] result,(NameExpr0)^(AssignExpr:assign)_(BinaryExpr:plus)_(EnclosedExpr)_(ConditionalExpr)_(EnclosedExpr)_(BinaryExpr:equals)_(NameExpr0),modulename
[0.0005] result,(NameExpr0)^(AssignExpr:assign)_(BinaryExpr:plus)_(EnclosedExpr)_(ConditionalExpr)_(MethodCallExpr2)_(NameExpr0),methodname
[0.0004] METHOD_NAME,(NameExpr2)^(MethodDeclaration)_(BlockStmt)_(ExpressionStmt)_(AssignExpr:assign0)_(BinaryExpr:plus)_(EnclosedExpr)_(ConditionalExpr)_(IntegerLiteralExpr1),0
[0.0004] METHOD_NAME,(NameExpr2)^(MethodDeclaration)_(BlockStmt)_(ExpressionStmt)_(AssignExpr:assign0)_(BinaryExpr:plus)_(EnclosedExpr)_(ConditionalExpr)_(IntegerLiteralExpr1),0
[0.0004] result,(NameExpr1)^(BinaryExpr:times)^(BinaryExpr:plus1)^(AssignExpr:assign)^(ExpressionStmt)^(BlockStmt)_(ExpressionStmt)_(AssignExpr:assign0)_(NameExpr0),result
[0.0004] result,(NameExpr0)^(AssignExpr:assign)_(BinaryExpr:plus)_(BinaryExpr:times)_(NameExpr0),prime
[0.0004] result,(NameExpr0)^(AssignExpr:assign)_(BinaryExpr:plus)_(BinaryExpr:times)_(NameExpr0),prime
[0.0004] prime,(NameExpr0)^(BinaryExpr:times)^(BinaryExpr:plus1)^(AssignExpr:assign)^(ExpressionStmt)^(BlockStmt)_(ExpressionStmt)_(AssignExpr:assign0)_(NameExpr0),result
[0.0003] prime,(NameExpr0)^(BinaryExpr:times)^(BinaryExpr:plus1)_(EnclosedExpr)_(ConditionalExpr)_(IntegerLiteralExpr1),0
[0.0003] prime,(NameExpr0)^(BinaryExpr:times)^(BinaryExpr:plus1)_(EnclosedExpr)_(ConditionalExpr)_(IntegerLiteralExpr1),0
[0.0003] int,(PrimitiveType0)^(VariableDeclarationExpr)^(ExpressionStmt)^(BlockStmt)_(ExpressionStmt)_(AssignExpr:assign0)_(BinaryExpr:plus)_(BinaryExpr:times)_(NameExpr1),result
[0.0003] int,(PrimitiveType0)^(VariableDeclarationExpr)^(ExpressionStmt)^(BlockStmt)_(ExpressionStmt)_(AssignExpr:assign0)_(BinaryExpr:plus)_(BinaryExpr:times)_(NameExpr1),result
[0.0003] int,(PrimitiveType0)^(VariableDeclarationExpr)^(ExpressionStmt)^(BlockStmt)_(ExpressionStmt)_(AssignExpr:assign0)_(BinaryExpr:plus)_(BinaryExpr:times)_(NameExpr1),result
[0.0003] methodname,(NameExpr0)^(BinaryExpr:equals)^(EnclosedExpr)^(ConditionalExpr)_(IntegerLiteralExpr1),0
[0.0003] prime,(NameExpr0)^(BinaryExpr:times)_(NameExpr1),result
[0.0003] prime,(NameExpr0)^(BinaryExpr:times)_(NameExpr1),result
[0.0003] result,(NameExpr0)^(AssignExpr:assign)_(BinaryExpr:plus)_(EnclosedExpr)_(ConditionalExpr)_(EnclosedExpr)_(BinaryExpr:equals)_(NameExpr0),methodname
[0.0002] modulename,(NameExpr0)^(BinaryExpr:equals)^(EnclosedExpr)^(ConditionalExpr)_(IntegerLiteralExpr1),0
[0.0002] METHOD_NAME,(NameExpr2)^(MethodDeclaration)_(BlockStmt)_(ExpressionStmt)_(AssignExpr:assign0)_(NameExpr0),result
[0.0002] METHOD_NAME,(NameExpr2)^(MethodDeclaration)_(BlockStmt)_(ExpressionStmt)_(AssignExpr:assign0)_(NameExpr0),result
[0.0002] int,(PrimitiveType1)^(MethodDeclaration)_(BlockStmt)_(ExpressionStmt)_(VariableDeclarationExpr)_(VariableDeclarator)_(VariableDeclaratorId0),result
[0.0002] result,(NameExpr1)^(BinaryExpr:times)^(BinaryExpr:plus1)_(EnclosedExpr)_(ConditionalExpr)_(IntegerLiteralExpr1),0
[0.0002] result,(NameExpr1)^(BinaryExpr:times)^(BinaryExpr:plus1)_(EnclosedExpr)_(ConditionalExpr)_(IntegerLiteralExpr1),0
[0.0002] result,(NameExpr0)^(AssignExpr:assign)^(ExpressionStmt)^(BlockStmt)_(ExpressionStmt)_(AssignExpr:assign0)_(BinaryExpr:plus)_(BinaryExpr:times)_(NameExpr1),result
[0.0002] null,(NullLiteralExpr1)^(BinaryExpr:equals)^(EnclosedExpr)^(ConditionalExpr)_(MethodCallExpr2)_(NameExpr0),modulename
[0.0002] modulename,(NameExpr0)^(BinaryExpr:equals)^(EnclosedExpr)^(ConditionalExpr)_(MethodCallExpr2)_(NameExpr0),modulename
[0.0002] null,(NullLiteralExpr1)^(BinaryExpr:equals)^(EnclosedExpr)^(ConditionalExpr)_(MethodCallExpr2)_(NameExpr0),methodname
[0.0001] result,(NameExpr0)^(AssignExpr:assign)^(ExpressionStmt)^(BlockStmt)_(ExpressionStmt)_(AssignExpr:assign0)_(NameExpr0),result
[0.0001] result,(NameExpr0)^(AssignExpr:assign)_(BinaryExpr:plus)_(EnclosedExpr)_(ConditionalExpr)_(IntegerLiteralExpr1),0
[0.0001] result,(NameExpr0)^(AssignExpr:assign)_(BinaryExpr:plus)_(EnclosedExpr)_(ConditionalExpr)_(IntegerLiteralExpr1),0
[0.0001] methodname,(NameExpr0)^(BinaryExpr:equals)^(EnclosedExpr)^(ConditionalExpr)_(MethodCallExpr2)_(NameExpr0),methodname
[0.0001] 0,(IntegerLiteralExpr1)^(ConditionalExpr)^(EnclosedExpr)^(BinaryExpr:plus1)^(AssignExpr:assign)^(ExpressionStmt)^(BlockStmt)_(ReturnStmt)_(NameExpr0),result
[0.0001] 0,(IntegerLiteralExpr1)^(ConditionalExpr)^(EnclosedExpr)^(BinaryExpr:plus1)^(AssignExpr:assign)^(ExpressionStmt)^(BlockStmt)_(ReturnStmt)_(NameExpr0),result
[0.0001] 31,(IntegerLiteralExpr1)^(VariableDeclarator)^(VariableDeclarationExpr)^(ExpressionStmt)^(BlockStmt)_(ExpressionStmt)_(AssignExpr:assign0)_(NameExpr0),result
[0.0001] result,(NameExpr0)^(AssignExpr:assign)^(ExpressionStmt)^(BlockStmt)_(ReturnStmt)_(NameExpr0),result
[0.0001] result,(NameExpr0)^(AssignExpr:assign)^(ExpressionStmt)^(BlockStmt)_(ReturnStmt)_(NameExpr0),result
[0.0000] 1,(IntegerLiteralExpr1)^(VariableDeclarator)^(VariableDeclarationExpr)^(ExpressionStmt)^(BlockStmt)_(ExpressionStmt)_(AssignExpr:assign0)_(NameExpr0),result
[0.0000] 1,(IntegerLiteralExpr1)^(VariableDeclarator)^(VariableDeclarationExpr)^(ExpressionStmt)^(BlockStmt)_(ExpressionStmt)_(AssignExpr:assign0)_(NameExpr0),result
[0.0000] result,(NameExpr0)^(AssignExpr:assign)_(BinaryExpr:plus)_(BinaryExpr:times)_(NameExpr1),result
[0.0000] result,(NameExpr0)^(AssignExpr:assign)_(BinaryExpr:plus)_(BinaryExpr:times)_(NameExpr1),result
[0.0000] 31,(IntegerLiteralExpr1)^(VariableDeclarator)^(VariableDeclarationExpr)^(ExpressionStmt)^(BlockStmt)_(ExpressionStmt)_(VariableDeclarationExpr)_(VariableDeclarator)_(IntegerLiteralExpr1),1
[0.0000] METHOD_NAME,(NameExpr2)^(MethodDeclaration)_(BlockStmt)_(ExpressionStmt)_(VariableDeclarationExpr)_(VariableDeclarator)_(IntegerLiteralExpr1),31
[0.0000] prime,(VariableDeclaratorId0)^(VariableDeclarator)_(IntegerLiteralExpr1),31
[0.0000] null,(NullLiteralExpr1)^(BinaryExpr:equals)^(EnclosedExpr)^(ConditionalExpr)_(IntegerLiteralExpr1),0
[0.0000] null,(NullLiteralExpr1)^(BinaryExpr:equals)^(EnclosedExpr)^(ConditionalExpr)_(IntegerLiteralExpr1),0
[0.0000] 31,(IntegerLiteralExpr1)^(VariableDeclarator)^(VariableDeclarationExpr)^(ExpressionStmt)^(BlockStmt)_(ExpressionStmt)_(VariableDeclarationExpr)_(PrimitiveType0),int
[0.0000] METHOD_NAME,(NameExpr2)^(MethodDeclaration)_(BlockStmt)_(ExpressionStmt)_(VariableDeclarationExpr)_(VariableDeclarator)_(VariableDeclaratorId0),prime
[0.0000] prime,(VariableDeclaratorId0)^(VariableDeclarator)^(VariableDeclarationExpr)^(ExpressionStmt)^(BlockStmt)_(ExpressionStmt)_(VariableDeclarationExpr)_(PrimitiveType0),int
[0.0000] 31,(IntegerLiteralExpr1)^(VariableDeclarator)^(VariableDeclarationExpr)^(ExpressionStmt)^(BlockStmt)_(ExpressionStmt)_(VariableDeclarationExpr)_(VariableDeclarator)_(VariableDeclaratorId0),result
[0.0000] METHOD_NAME,(NameExpr2)^(MethodDeclaration)_(BlockStmt)_(ExpressionStmt)_(VariableDeclarationExpr)_(PrimitiveType0),int
[0.0000] METHOD_NAME,(NameExpr2)^(MethodDeclaration)_(BlockStmt)_(ExpressionStmt)_(VariableDeclarationExpr)_(PrimitiveType0),int
[0.0000] int,(PrimitiveType0)^(VariableDeclarationExpr)_(VariableDeclarator)_(IntegerLiteralExpr1),31
[0.0000] int,(PrimitiveType0)^(VariableDeclarationExpr)_(VariableDeclarator)_(VariableDeclaratorId0),prime
[0.0000] METHOD_NAME,(NameExpr2)^(MethodDeclaration)_(BlockStmt)_(ExpressionStmt)_(VariableDeclarationExpr)_(VariableDeclarator)_(IntegerLiteralExpr1),1
[0.0000] prime,(VariableDeclaratorId0)^(VariableDeclarator)^(VariableDeclarationExpr)^(ExpressionStmt)^(BlockStmt)_(ExpressionStmt)_(VariableDeclarationExpr)_(VariableDeclarator)_(IntegerLiteralExpr1),1
[0.0000] int,(PrimitiveType0)^(VariableDeclarationExpr)^(ExpressionStmt)^(BlockStmt)_(ExpressionStmt)_(VariableDeclarationExpr)_(VariableDeclarator)_(IntegerLiteralExpr1),1
[0.0000] int,(PrimitiveType0)^(VariableDeclarationExpr)^(ExpressionStmt)^(BlockStmt)_(ExpressionStmt)_(VariableDeclarationExpr)_(PrimitiveType0),int
[0.0000] modulename,(NameExpr0)^(BinaryExpr:equals)_(NullLiteralExpr1),null
[0.0000] methodname,(NameExpr0)^(BinaryExpr:equals)_(NullLiteralExpr1),null
[0.0000] int,(PrimitiveType0)^(VariableDeclarationExpr)_(VariableDeclarator)_(IntegerLiteralExpr1),1
[0.0000] prime,(VariableDeclaratorId0)^(VariableDeclarator)^(VariableDeclarationExpr)^(ExpressionStmt)^(BlockStmt)_(ExpressionStmt)_(VariableDeclarationExpr)_(VariableDeclarator)_(VariableDeclaratorId0),result
[0.0000] prime,(VariableDeclaratorId0)^(VariableDeclarator)^(VariableDeclarationExpr)^(ExpressionStmt)^(BlockStmt)_(ExpressionStmt)_(AssignExpr:assign0)_(NameExpr0),result
[0.0000] result,(VariableDeclaratorId0)^(VariableDeclarator)_(IntegerLiteralExpr1),1
[0.0000] METHOD_NAME,(NameExpr2)^(MethodDeclaration)_(BlockStmt)_(ExpressionStmt)_(VariableDeclarationExpr)_(VariableDeclarator)_(VariableDeclaratorId0),result
[0.0000] int,(PrimitiveType0)^(VariableDeclarationExpr)^(ExpressionStmt)^(BlockStmt)_(ExpressionStmt)_(VariableDeclarationExpr)_(VariableDeclarator)_(VariableDeclaratorId0),result
[0.0000] int,(PrimitiveType0)^(VariableDeclarationExpr)_(VariableDeclarator)_(VariableDeclaratorId0),result
[0.0000] int,(PrimitiveType0)^(VariableDeclarationExpr)^(ExpressionStmt)^(BlockStmt)_(ExpressionStmt)_(AssignExpr:assign0)_(NameExpr0),result
[0.0000] int,(PrimitiveType0)^(VariableDeclarationExpr)^(ExpressionStmt)^(BlockStmt)_(ExpressionStmt)_(AssignExpr:assign0)_(NameExpr0),result
[0.0000] int,(PrimitiveType0)^(VariableDeclarationExpr)^(ExpressionStmt)^(BlockStmt)_(ExpressionStmt)_(AssignExpr:assign0)_(NameExpr0),result
[0.0000] result,(VariableDeclaratorId0)^(VariableDeclarator)^(VariableDeclarationExpr)^(ExpressionStmt)^(BlockStmt)_(ExpressionStmt)_(AssignExpr:assign0)_(NameExpr0),result
[0.0000] result,(VariableDeclaratorId0)^(VariableDeclarator)^(VariableDeclarationExpr)^(ExpressionStmt)^(BlockStmt)_(ExpressionStmt)_(AssignExpr:assign0)_(NameExpr0),result

topk terminals:
[['int', '0'], ['int', '0'], ['result', 'hashcode'], ['result', 'hashcode'], ['int', 'prime'], ['int', 'prime'], ['prime', 'hashcode'], ['prime', 'hashcode'], ['prime', 'result'], ['prime', 'result'], ['result', 'prime'], ['modulename', 'hashcode'], ['int', '31'], ['modulename', 'hashcode'], ['result', 'hashcode'], ['result', 'hashcode'], ['0', 'modulename'], ['0', 'hashcode'], ['0', 'hashcode'], ['0', 'methodname'], ['METHOD_NAME', 'prime'], ['METHOD_NAME', 'prime'], ['int', '1'], ['result', 'result'], ['result', 'result'], ['methodname', 'hashcode'], ['prime', 'null'], ['prime', 'null'], ['null', 'hashcode'], ['null', 'hashcode'], ['methodname', 'hashcode'], ['int', 'prime'], ['int', 'METHOD_NAME'], ['int', 'result'], ['int', 'result'], ['int', 'result'], ['int', 'result'], ['int', 'result'], ['override', 'METHOD_NAME'], ['override', 'int'], ['result', 'null'], ['result', 'null'], ['METHOD_NAME', 'result'], ['prime', 'modulename'], ['prime', 'methodname'], ['result', 'null'], ['result', 'null'], ['result', 'modulename'], ['prime', 'modulename'], ['result', 'modulename'], ['result', 'modulename'], ['prime', 'methodname'], ['int', 'prime'], ['int', 'prime'], ['int', 'prime'], ['int', 'int'], ['int', 'int'], ['result', 'methodname'], ['METHOD_NAME', 'result'], ['METHOD_NAME', 'result'], ['result', 'methodname'], ['result', 'modulename'], ['result', 'methodname'], ['METHOD_NAME', '0'], ['METHOD_NAME', '0'], ['result', 'result'], ['result', 'prime'], ['result', 'prime'], ['prime', 'result'], ['prime', '0'], ['prime', '0'], ['int', 'result'], ['int', 'result'], ['int', 'result'], ['methodname', '0'], ['prime', 'result'], ['prime', 'result'], ['result', 'methodname'], ['modulename', '0'], ['METHOD_NAME', 'result'], ['METHOD_NAME', 'result'], ['int', 'result'], ['result', '0'], ['result', '0'], ['result', 'result'], ['null', 'modulename'], ['modulename', 'modulename'], ['null', 'methodname'], ['result', 'result'], ['result', '0'], ['result', '0'], ['methodname', 'methodname'], ['0', 'result'], ['0', 'result'], ['31', 'result'], ['result', 'result'], ['result', 'result'], ['1', 'result'], ['1', 'result'], ['result', 'result'], ['result', 'result'], ['31', '1'], ['METHOD_NAME', '31'], ['prime', '31'], ['null', '0'], ['null', '0'], ['31', 'int'], ['METHOD_NAME', 'prime'], ['prime', 'int'], ['31', 'result'], ['METHOD_NAME', 'int'], ['METHOD_NAME', 'int'], ['int', '31'], ['int', 'prime'], ['METHOD_NAME', '1'], ['prime', '1'], ['int', '1'], ['int', 'int'], ['modulename', 'null'], ['methodname', 'null'], ['int', '1'], ['prime', 'result'], ['prime', 'result'], ['result', '1'], ['METHOD_NAME', 'result'], ['int', 'result'], ['int', 'result'], ['int', 'result'], ['int', 'result'], ['int', 'result'], ['result', 'result'], ['result', 'result']]

