
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/codefollower__Tomcat-Research/modules/bayeux/java/org/apache/tomcat/bayeux/HttpError_toString.java
method_name = toString
method_body = public String toString() { if (cause != null) return code + ":" + status + " - [" + cause + "]"; else return code + ":" + status; }

topk path-contexts:
[0.1688] METHOD_NAME,(NameExpr1)^(MethodDeclaration)_(BlockStmt)_(IfStmt)_(ReturnStmt)_(BinaryExpr:plus)_(BinaryExpr:plus)_(BinaryExpr:plus)_(StringLiteralExpr1),_-_[
[0.1419] METHOD_NAME,(NameExpr1)^(MethodDeclaration)_(BlockStmt)_(IfStmt)_(ReturnStmt)_(BinaryExpr:plus)_(BinaryExpr:plus)_(StringLiteralExpr1),:
[0.0956] string,(ClassOrInterfaceType0)^(MethodDeclaration)_(BlockStmt)_(IfStmt)_(ReturnStmt)_(BinaryExpr:plus)_(BinaryExpr:plus)_(StringLiteralExpr1),:
[0.0798] null,(NullLiteralExpr1)^(BinaryExpr:notEquals)^(IfStmt)_(ReturnStmt)_(BinaryExpr:plus)_(StringLiteralExpr1),]
[0.0747] METHOD_NAME,(NameExpr1)^(MethodDeclaration)_(BlockStmt)_(IfStmt)_(ReturnStmt)_(BinaryExpr:plus)_(BinaryExpr:plus)_(NameExpr1),cause
[0.0673] string,(ClassOrInterfaceType0)^(MethodDeclaration)_(BlockStmt)_(IfStmt)_(ReturnStmt)_(BinaryExpr:plus)_(StringLiteralExpr1),]
[0.0660] METHOD_NAME,(NameExpr1)^(MethodDeclaration)_(BlockStmt)_(IfStmt)_(ReturnStmt)_(BinaryExpr:plus)_(StringLiteralExpr1),]
[0.0631] null,(NullLiteralExpr1)^(BinaryExpr:notEquals)^(IfStmt)_(ReturnStmt)_(BinaryExpr:plus)_(NameExpr1),status
[0.0591] string,(ClassOrInterfaceType0)^(MethodDeclaration)_(BlockStmt)_(IfStmt)_(BinaryExpr:notEquals)_(NameExpr0),cause
[0.0226] cause,(NameExpr0)^(BinaryExpr:notEquals)^(IfStmt)_(ReturnStmt)_(BinaryExpr:plus)_(NameExpr1),status
[0.0190] code,(NameExpr0)^(BinaryExpr:plus)^(BinaryExpr:plus)^(BinaryExpr:plus)^(BinaryExpr:plus)_(NameExpr1),cause
[0.0151] code,(NameExpr0)^(BinaryExpr:plus)^(BinaryExpr:plus)^(BinaryExpr:plus)^(BinaryExpr:plus)^(BinaryExpr:plus)_(StringLiteralExpr1),]
[0.0134] METHOD_NAME,(NameExpr1)^(MethodDeclaration)_(BlockStmt)_(IfStmt)_(ReturnStmt)_(BinaryExpr:plus)_(NameExpr1),status
[0.0132] string,(ClassOrInterfaceType0)^(MethodDeclaration)_(BlockStmt)_(IfStmt)_(BinaryExpr:notEquals)_(NullLiteralExpr1),null
[0.0108] string,(ClassOrInterfaceType0)^(MethodDeclaration)_(NameExpr1),METHOD_NAME
[0.0098] :,(StringLiteralExpr1)^(BinaryExpr:plus)^(BinaryExpr:plus)^(BinaryExpr:plus)^(BinaryExpr:plus)^(BinaryExpr:plus)_(StringLiteralExpr1),]
[0.0074] code,(NameExpr0)^(BinaryExpr:plus)^(BinaryExpr:plus)^(BinaryExpr:plus)_(StringLiteralExpr1),_-_[
[0.0062] code,(NameExpr0)^(BinaryExpr:plus)^(BinaryExpr:plus)_(NameExpr1),status
[0.0062] code,(NameExpr0)^(BinaryExpr:plus)^(BinaryExpr:plus)_(NameExpr1),status
[0.0057] string,(ClassOrInterfaceType0)^(MethodDeclaration)_(BlockStmt)_(IfStmt)_(ReturnStmt)_(BinaryExpr:plus)_(NameExpr1),status
[0.0055] code,(NameExpr0)^(BinaryExpr:plus)_(StringLiteralExpr1),:
[0.0055] code,(NameExpr0)^(BinaryExpr:plus)_(StringLiteralExpr1),:
[0.0049] cause,(NameExpr0)^(BinaryExpr:notEquals)^(IfStmt)_(ReturnStmt)_(BinaryExpr:plus)_(StringLiteralExpr1),]
[0.0041] cause,(NameExpr1)^(BinaryExpr:plus)^(BinaryExpr:plus)_(StringLiteralExpr1),]
[0.0037] METHOD_NAME,(NameExpr1)^(MethodDeclaration)_(BlockStmt)_(IfStmt)_(BinaryExpr:notEquals)_(NameExpr0),cause
[0.0033] status,(NameExpr1)^(BinaryExpr:plus)^(BinaryExpr:plus)^(BinaryExpr:plus)^(BinaryExpr:plus)_(StringLiteralExpr1),]
[0.0032] cause,(NameExpr0)^(BinaryExpr:notEquals)^(IfStmt)_(ReturnStmt)_(BinaryExpr:plus)_(BinaryExpr:plus)_(NameExpr1),cause
[0.0030] :,(StringLiteralExpr1)^(BinaryExpr:plus)^(BinaryExpr:plus)^(BinaryExpr:plus)^(BinaryExpr:plus)_(NameExpr1),cause
[0.0022] cause,(NameExpr0)^(BinaryExpr:notEquals)^(IfStmt)_(ReturnStmt)_(BinaryExpr:plus)_(BinaryExpr:plus)_(BinaryExpr:plus)_(StringLiteralExpr1),_-_[
[0.0016] null,(NullLiteralExpr1)^(BinaryExpr:notEquals)^(IfStmt)_(ReturnStmt)_(BinaryExpr:plus)_(BinaryExpr:plus)_(NameExpr1),cause
[0.0013] cause,(NameExpr0)^(BinaryExpr:notEquals)^(IfStmt)_(ReturnStmt)_(BinaryExpr:plus)_(BinaryExpr:plus)_(StringLiteralExpr1),:
[0.0013] cause,(NameExpr1)^(BinaryExpr:plus)^(BinaryExpr:plus)^(ReturnStmt)^(IfStmt)_(ReturnStmt)_(BinaryExpr:plus)_(BinaryExpr:plus)_(StringLiteralExpr1),:
[0.0013] cause,(NameExpr0)^(BinaryExpr:notEquals)^(IfStmt)_(ReturnStmt)_(BinaryExpr:plus)_(BinaryExpr:plus)_(BinaryExpr:plus)_(BinaryExpr:plus)_(NameExpr1),status
[0.0013] cause,(NameExpr1)^(BinaryExpr:plus)^(BinaryExpr:plus)^(ReturnStmt)^(IfStmt)_(ReturnStmt)_(BinaryExpr:plus)_(NameExpr1),status
[0.0013] ],(StringLiteralExpr1)^(BinaryExpr:plus)^(ReturnStmt)^(IfStmt)_(ReturnStmt)_(BinaryExpr:plus)_(BinaryExpr:plus)_(StringLiteralExpr1),:
[0.0012] null,(NullLiteralExpr1)^(BinaryExpr:notEquals)^(IfStmt)_(ReturnStmt)_(BinaryExpr:plus)_(BinaryExpr:plus)_(StringLiteralExpr1),:
[0.0012] cause,(NameExpr0)^(BinaryExpr:notEquals)^(IfStmt)_(ReturnStmt)_(BinaryExpr:plus)_(BinaryExpr:plus)_(NameExpr0),code
[0.0012] cause,(NameExpr1)^(BinaryExpr:plus)^(BinaryExpr:plus)^(ReturnStmt)^(IfStmt)_(ReturnStmt)_(BinaryExpr:plus)_(BinaryExpr:plus)_(NameExpr0),code
[0.0010] status,(NameExpr1)^(BinaryExpr:plus)^(BinaryExpr:plus)_(StringLiteralExpr1),_-_[
[0.0009] null,(NullLiteralExpr1)^(BinaryExpr:notEquals)^(IfStmt)_(ReturnStmt)_(BinaryExpr:plus)_(BinaryExpr:plus)_(BinaryExpr:plus)_(StringLiteralExpr1),_-_[
[0.0009] ],(StringLiteralExpr1)^(BinaryExpr:plus)^(ReturnStmt)^(IfStmt)_(ReturnStmt)_(BinaryExpr:plus)_(NameExpr1),status
[0.0008] null,(NullLiteralExpr1)^(BinaryExpr:notEquals)^(IfStmt)_(ReturnStmt)_(BinaryExpr:plus)_(BinaryExpr:plus)_(BinaryExpr:plus)_(BinaryExpr:plus)_(NameExpr1),status
[0.0007] string,(ClassOrInterfaceType0)^(MethodDeclaration)_(BlockStmt)_(IfStmt)_(ReturnStmt)_(BinaryExpr:plus)_(BinaryExpr:plus)_(NameExpr1),cause
[0.0006] METHOD_NAME,(NameExpr1)^(MethodDeclaration)_(BlockStmt)_(IfStmt)_(ReturnStmt)_(BinaryExpr:plus)_(BinaryExpr:plus)_(NameExpr0),code
[0.0005] ],(StringLiteralExpr1)^(BinaryExpr:plus)^(ReturnStmt)^(IfStmt)_(ReturnStmt)_(BinaryExpr:plus)_(BinaryExpr:plus)_(NameExpr0),code
[0.0004] string,(ClassOrInterfaceType0)^(MethodDeclaration)_(BlockStmt)_(IfStmt)_(ReturnStmt)_(BinaryExpr:plus)_(BinaryExpr:plus)_(BinaryExpr:plus)_(StringLiteralExpr1),_-_[
[0.0004] _-_[,(StringLiteralExpr1)^(BinaryExpr:plus)^(BinaryExpr:plus)^(BinaryExpr:plus)^(ReturnStmt)^(IfStmt)_(ReturnStmt)_(BinaryExpr:plus)_(NameExpr1),status
[0.0003] null,(NullLiteralExpr1)^(BinaryExpr:notEquals)^(IfStmt)_(ReturnStmt)_(BinaryExpr:plus)_(BinaryExpr:plus)_(NameExpr0),code
[0.0002] string,(ClassOrInterfaceType0)^(MethodDeclaration)_(BlockStmt)_(IfStmt)_(ReturnStmt)_(BinaryExpr:plus)_(BinaryExpr:plus)_(NameExpr0),code
[0.0002] METHOD_NAME,(NameExpr1)^(MethodDeclaration)_(BlockStmt)_(IfStmt)_(BinaryExpr:notEquals)_(NullLiteralExpr1),null
[0.0001] status,(NameExpr1)^(BinaryExpr:plus)^(BinaryExpr:plus)^(BinaryExpr:plus)_(NameExpr1),cause
[0.0001] :,(StringLiteralExpr1)^(BinaryExpr:plus)^(BinaryExpr:plus)_(NameExpr1),status
[0.0001] :,(StringLiteralExpr1)^(BinaryExpr:plus)^(BinaryExpr:plus)_(NameExpr1),status
[0.0001] _-_[,(StringLiteralExpr1)^(BinaryExpr:plus)^(BinaryExpr:plus)_(NameExpr1),cause
[0.0001] cause,(NameExpr0)^(BinaryExpr:notEquals)_(NullLiteralExpr1),null
[0.0001] :,(StringLiteralExpr1)^(BinaryExpr:plus)^(BinaryExpr:plus)^(BinaryExpr:plus)_(StringLiteralExpr1),_-_[
[0.0000] _-_[,(StringLiteralExpr1)^(BinaryExpr:plus)^(BinaryExpr:plus)^(BinaryExpr:plus)_(StringLiteralExpr1),]

topk terminals:
[['METHOD_NAME', '_-_['], ['METHOD_NAME', ':'], ['string', ':'], ['null', ']'], ['METHOD_NAME', 'cause'], ['string', ']'], ['METHOD_NAME', ']'], ['null', 'status'], ['string', 'cause'], ['cause', 'status'], ['code', 'cause'], ['code', ']'], ['METHOD_NAME', 'status'], ['string', 'null'], ['string', 'METHOD_NAME'], [':', ']'], ['code', '_-_['], ['code', 'status'], ['code', 'status'], ['string', 'status'], ['code', ':'], ['code', ':'], ['cause', ']'], ['cause', ']'], ['METHOD_NAME', 'cause'], ['status', ']'], ['cause', 'cause'], [':', 'cause'], ['cause', '_-_['], ['null', 'cause'], ['cause', ':'], ['cause', ':'], ['cause', 'status'], ['cause', 'status'], [']', ':'], ['null', ':'], ['cause', 'code'], ['cause', 'code'], ['status', '_-_['], ['null', '_-_['], [']', 'status'], ['null', 'status'], ['string', 'cause'], ['METHOD_NAME', 'code'], [']', 'code'], ['string', '_-_['], ['_-_[', 'status'], ['null', 'code'], ['string', 'code'], ['METHOD_NAME', 'null'], ['status', 'cause'], [':', 'status'], [':', 'status'], ['_-_[', 'cause'], ['cause', 'null'], [':', '_-_['], ['_-_[', ']']]

