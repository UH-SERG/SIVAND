
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/ozodrukh__RippleDrawable/app/src/main/java/codetail/graphics/drawables/LayerDrawable_setPaddingMode.java
method_name = setPaddingMode
method_body = public void setPaddingMode(int mode) { if (mLayerState.mPaddingMode != mode) { mLayerState.mPaddingMode = mode; } }

topk path-contexts:
[0.3481] mode,(NameExpr1)^(BinaryExpr:notEquals)^(IfStmt)_(BlockStmt)_(ExpressionStmt)_(AssignExpr:assign0)_(FieldAccessExpr0)_(NameExpr2),mpaddingmode
[0.3275] mpaddingmode,(NameExpr2)^(FieldAccessExpr)^(BinaryExpr:notEquals)^(IfStmt)_(BlockStmt)_(ExpressionStmt)_(AssignExpr:assign0)_(FieldAccessExpr0)_(NameExpr2),mpaddingmode
[0.0681] mlayerstate,(NameExpr0)^(FieldAccessExpr)^(BinaryExpr:notEquals)^(IfStmt)_(BlockStmt)_(ExpressionStmt)_(AssignExpr:assign0)_(FieldAccessExpr0)_(NameExpr2),mpaddingmode
[0.0643] mode,(VariableDeclaratorId0)^(Parameter)^(MethodDeclaration)_(BlockStmt)_(IfStmt)_(BinaryExpr:notEquals)_(FieldAccessExpr0)_(NameExpr2),mpaddingmode
[0.0523] METHOD_NAME,(NameExpr1)^(MethodDeclaration)_(BlockStmt)_(IfStmt)_(BlockStmt)_(ExpressionStmt)_(AssignExpr:assign0)_(FieldAccessExpr0)_(NameExpr2),mpaddingmode
[0.0245] mpaddingmode,(NameExpr2)^(FieldAccessExpr)^(BinaryExpr:notEquals)^(IfStmt)_(BlockStmt)_(ExpressionStmt)_(AssignExpr:assign0)_(NameExpr1),mode
[0.0236] mpaddingmode,(NameExpr2)^(FieldAccessExpr0)^(AssignExpr:assign)_(NameExpr1),mode
[0.0225] mlayerstate,(NameExpr0)^(FieldAccessExpr0)_(NameExpr2),mpaddingmode
[0.0141] mode,(NameExpr1)^(BinaryExpr:notEquals)^(IfStmt)_(BlockStmt)_(ExpressionStmt)_(AssignExpr:assign0)_(FieldAccessExpr0)_(NameExpr0),mlayerstate
[0.0108] mlayerstate,(NameExpr0)^(FieldAccessExpr)_(NameExpr2),mpaddingmode
[0.0068] METHOD_NAME,(NameExpr1)^(MethodDeclaration)_(BlockStmt)_(IfStmt)_(BinaryExpr:notEquals)_(FieldAccessExpr0)_(NameExpr2),mpaddingmode
[0.0051] int,(PrimitiveType1)^(Parameter)^(MethodDeclaration)_(BlockStmt)_(IfStmt)_(BinaryExpr:notEquals)_(FieldAccessExpr0)_(NameExpr2),mpaddingmode
[0.0050] mode,(VariableDeclaratorId0)^(Parameter)^(MethodDeclaration)_(BlockStmt)_(IfStmt)_(BinaryExpr:notEquals)_(FieldAccessExpr0)_(NameExpr0),mlayerstate
[0.0049] mpaddingmode,(NameExpr2)^(FieldAccessExpr)^(BinaryExpr:notEquals)^(IfStmt)_(BlockStmt)_(ExpressionStmt)_(AssignExpr:assign0)_(FieldAccessExpr0)_(NameExpr0),mlayerstate
[0.0036] void,(VoidType0)^(MethodDeclaration)_(Parameter)_(VariableDeclaratorId0),mode
[0.0024] void,(VoidType0)^(MethodDeclaration)_(NameExpr1),METHOD_NAME
[0.0024] mlayerstate,(NameExpr0)^(FieldAccessExpr0)^(AssignExpr:assign)_(NameExpr1),mode
[0.0024] mode,(VariableDeclaratorId0)^(Parameter)^(MethodDeclaration)_(BlockStmt)_(IfStmt)_(BlockStmt)_(ExpressionStmt)_(AssignExpr:assign0)_(NameExpr1),mode
[0.0021] METHOD_NAME,(NameExpr1)^(MethodDeclaration)_(BlockStmt)_(IfStmt)_(BinaryExpr:notEquals)_(FieldAccessExpr0)_(NameExpr0),mlayerstate
[0.0019] mlayerstate,(NameExpr0)^(FieldAccessExpr)^(BinaryExpr:notEquals)^(IfStmt)_(BlockStmt)_(ExpressionStmt)_(AssignExpr:assign0)_(FieldAccessExpr0)_(NameExpr0),mlayerstate
[0.0016] int,(PrimitiveType1)^(Parameter)^(MethodDeclaration)_(BlockStmt)_(IfStmt)_(BinaryExpr:notEquals)_(NameExpr1),mode
[0.0011] mode,(VariableDeclaratorId0)^(Parameter)_(PrimitiveType1),int
[0.0010] int,(PrimitiveType1)^(Parameter)^(MethodDeclaration)_(BlockStmt)_(IfStmt)_(BlockStmt)_(ExpressionStmt)_(AssignExpr:assign0)_(NameExpr1),mode
[0.0009] mode,(VariableDeclaratorId0)^(Parameter)^(MethodDeclaration)_(BlockStmt)_(IfStmt)_(BinaryExpr:notEquals)_(NameExpr1),mode
[0.0008] mode,(NameExpr1)^(BinaryExpr:notEquals)^(IfStmt)_(BlockStmt)_(ExpressionStmt)_(AssignExpr:assign0)_(NameExpr1),mode
[0.0005] mlayerstate,(NameExpr0)^(FieldAccessExpr)^(BinaryExpr:notEquals)_(NameExpr1),mode
[0.0005] void,(VoidType0)^(MethodDeclaration)_(Parameter)_(PrimitiveType1),int
[0.0004] METHOD_NAME,(NameExpr1)^(MethodDeclaration)_(BlockStmt)_(IfStmt)_(BinaryExpr:notEquals)_(NameExpr1),mode
[0.0002] mpaddingmode,(NameExpr2)^(FieldAccessExpr)^(BinaryExpr:notEquals)_(NameExpr1),mode
[0.0002] mlayerstate,(NameExpr0)^(FieldAccessExpr)^(BinaryExpr:notEquals)^(IfStmt)_(BlockStmt)_(ExpressionStmt)_(AssignExpr:assign0)_(NameExpr1),mode
[0.0002] int,(PrimitiveType1)^(Parameter)^(MethodDeclaration)_(BlockStmt)_(IfStmt)_(BinaryExpr:notEquals)_(FieldAccessExpr0)_(NameExpr0),mlayerstate
[0.0001] METHOD_NAME,(NameExpr1)^(MethodDeclaration)_(BlockStmt)_(IfStmt)_(BlockStmt)_(ExpressionStmt)_(AssignExpr:assign0)_(FieldAccessExpr0)_(NameExpr0),mlayerstate
[0.0001] METHOD_NAME,(NameExpr1)^(MethodDeclaration)_(Parameter)_(VariableDeclaratorId0),mode
[0.0000] METHOD_NAME,(NameExpr1)^(MethodDeclaration)_(BlockStmt)_(IfStmt)_(BlockStmt)_(ExpressionStmt)_(AssignExpr:assign0)_(NameExpr1),mode
[0.0000] METHOD_NAME,(NameExpr1)^(MethodDeclaration)_(Parameter)_(PrimitiveType1),int

topk terminals:
[['mode', 'mpaddingmode'], ['mpaddingmode', 'mpaddingmode'], ['mlayerstate', 'mpaddingmode'], ['mode', 'mpaddingmode'], ['METHOD_NAME', 'mpaddingmode'], ['mpaddingmode', 'mode'], ['mpaddingmode', 'mode'], ['mlayerstate', 'mpaddingmode'], ['mode', 'mlayerstate'], ['mlayerstate', 'mpaddingmode'], ['METHOD_NAME', 'mpaddingmode'], ['int', 'mpaddingmode'], ['mode', 'mlayerstate'], ['mpaddingmode', 'mlayerstate'], ['void', 'mode'], ['void', 'METHOD_NAME'], ['mlayerstate', 'mode'], ['mode', 'mode'], ['METHOD_NAME', 'mlayerstate'], ['mlayerstate', 'mlayerstate'], ['int', 'mode'], ['mode', 'int'], ['int', 'mode'], ['mode', 'mode'], ['mode', 'mode'], ['mlayerstate', 'mode'], ['void', 'int'], ['METHOD_NAME', 'mode'], ['mpaddingmode', 'mode'], ['mlayerstate', 'mode'], ['int', 'mlayerstate'], ['METHOD_NAME', 'mlayerstate'], ['METHOD_NAME', 'mode'], ['METHOD_NAME', 'mode'], ['METHOD_NAME', 'int']]

