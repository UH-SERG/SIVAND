
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/wso2-attic__product-emm/modules/mobile-agents/android/app-catalog/volley/src/test/java/com/android/volley/mock/WaitableQueue_take.java
method_name = take
method_body = @Override public Request<?> take() throws InterruptedException { Request<?> item = super.take(); if (item == mStopRequest) { mStopEvent.release(); return take(); } return item; }

topk path-contexts:
[0.3464] super,(SuperExpr0)^(MethodCallExpr)_(NameExpr2),take
[0.1179] release,(NameExpr2)^(MethodCallExpr)^(ExpressionStmt)^(BlockStmt)_(ReturnStmt)_(MethodCallExpr0)_(NameExpr1),take
[0.0749] interruptedexception,(ClassOrInterfaceType3)^(MethodDeclaration)_(BlockStmt)_(ReturnStmt)_(NameExpr0),item
[0.0674] METHOD_NAME,(NameExpr2)^(MethodDeclaration)_(BlockStmt)_(IfStmt)_(BlockStmt)_(ReturnStmt)_(MethodCallExpr0)_(NameExpr1),take
[0.0518] item,(NameExpr0)^(BinaryExpr:equals)^(IfStmt)_(BlockStmt)_(ReturnStmt)_(MethodCallExpr0)_(NameExpr1),take
[0.0442] interruptedexception,(ClassOrInterfaceType3)^(MethodDeclaration)_(BlockStmt)_(IfStmt)_(BlockStmt)_(ReturnStmt)_(MethodCallExpr0)_(NameExpr1),take
[0.0441] METHOD_NAME,(NameExpr2)^(MethodDeclaration)_(BlockStmt)_(ExpressionStmt)_(VariableDeclarationExpr)_(VariableDeclarator)_(MethodCallExpr1)_(NameExpr2),take
[0.0232] mstoprequest,(NameExpr1)^(BinaryExpr:equals)^(IfStmt)_(BlockStmt)_(ReturnStmt)_(MethodCallExpr0)_(NameExpr1),take
[0.0230] take,(NameExpr2)^(MethodCallExpr)^(VariableDeclarator)^(VariableDeclarationExpr)^(ExpressionStmt)^(BlockStmt)_(ReturnStmt)_(NameExpr0),item
[0.0219] mstopevent,(NameExpr0)^(MethodCallExpr)^(ExpressionStmt)^(BlockStmt)_(ReturnStmt)_(MethodCallExpr0)_(NameExpr1),take
[0.0199] release,(NameExpr2)^(MethodCallExpr)^(ExpressionStmt)^(BlockStmt)^(IfStmt)^(BlockStmt)_(ReturnStmt)_(NameExpr0),item
[0.0185] ?,(WildcardType0)^(ClassOrInterfaceType)^(VariableDeclarationExpr)^(ExpressionStmt)^(BlockStmt)_(ReturnStmt)_(NameExpr0),item
[0.0171] interruptedexception,(ClassOrInterfaceType3)^(MethodDeclaration)_(BlockStmt)_(ExpressionStmt)_(VariableDeclarationExpr)_(VariableDeclarator)_(MethodCallExpr1)_(NameExpr2),take
[0.0161] METHOD_NAME,(NameExpr2)^(MethodDeclaration)_(BlockStmt)_(ReturnStmt)_(NameExpr0),item
[0.0152] ?,(WildcardType0)^(ClassOrInterfaceType)^(MethodDeclaration)_(ClassOrInterfaceType3),interruptedexception
[0.0138] take,(NameExpr1)^(MethodCallExpr)^(ReturnStmt)^(BlockStmt)^(IfStmt)^(BlockStmt)_(ReturnStmt)_(NameExpr0),item
[0.0096] ?,(WildcardType0)^(ClassOrInterfaceType)^(MethodDeclaration)_(NameExpr2),METHOD_NAME
[0.0088] mstopevent,(NameExpr0)^(MethodCallExpr)^(ExpressionStmt)^(BlockStmt)^(IfStmt)^(BlockStmt)_(ReturnStmt)_(NameExpr0),item
[0.0080] mstoprequest,(NameExpr1)^(BinaryExpr:equals)^(IfStmt)^(BlockStmt)_(ReturnStmt)_(NameExpr0),item
[0.0077] interruptedexception,(ClassOrInterfaceType3)^(MethodDeclaration)_(BlockStmt)_(IfStmt)_(BlockStmt)_(ExpressionStmt)_(MethodCallExpr0)_(NameExpr2),release
[0.0057] METHOD_NAME,(NameExpr2)^(MethodDeclaration)_(BlockStmt)_(IfStmt)_(BlockStmt)_(ExpressionStmt)_(MethodCallExpr0)_(NameExpr2),release
[0.0051] item,(NameExpr0)^(BinaryExpr:equals)^(IfStmt)^(BlockStmt)_(ReturnStmt)_(NameExpr0),item
[0.0050] mstoprequest,(NameExpr1)^(BinaryExpr:equals)^(IfStmt)_(BlockStmt)_(ExpressionStmt)_(MethodCallExpr0)_(NameExpr2),release
[0.0041] item,(NameExpr0)^(BinaryExpr:equals)^(IfStmt)_(BlockStmt)_(ExpressionStmt)_(MethodCallExpr0)_(NameExpr0),mstopevent
[0.0039] override,(NameExpr0)^(MarkerAnnotationExpr)^(MethodDeclaration)_(NameExpr2),METHOD_NAME
[0.0033] interruptedexception,(ClassOrInterfaceType3)^(MethodDeclaration)_(BlockStmt)_(IfStmt)_(BlockStmt)_(ExpressionStmt)_(MethodCallExpr0)_(NameExpr0),mstopevent
[0.0032] mstopevent,(NameExpr0)^(MethodCallExpr)_(NameExpr2),release
[0.0030] interruptedexception,(ClassOrInterfaceType3)^(MethodDeclaration)_(BlockStmt)_(IfStmt)_(BinaryExpr:equals)_(NameExpr1),mstoprequest
[0.0030] METHOD_NAME,(NameExpr2)^(MethodDeclaration)_(ClassOrInterfaceType3),interruptedexception
[0.0027] METHOD_NAME,(NameExpr2)^(MethodDeclaration)_(BlockStmt)_(IfStmt)_(BlockStmt)_(ExpressionStmt)_(MethodCallExpr0)_(NameExpr0),mstopevent
[0.0026] interruptedexception,(ClassOrInterfaceType3)^(MethodDeclaration)_(BlockStmt)_(ExpressionStmt)_(VariableDeclarationExpr)_(ClassOrInterfaceType)_(WildcardType0),?
[0.0026] override,(NameExpr0)^(MarkerAnnotationExpr)^(MethodDeclaration)_(ClassOrInterfaceType)_(WildcardType0),?
[0.0016] interruptedexception,(ClassOrInterfaceType3)^(MethodDeclaration)_(BlockStmt)_(IfStmt)_(BinaryExpr:equals)_(NameExpr0),item
[0.0011] interruptedexception,(ClassOrInterfaceType3)^(MethodDeclaration)_(BlockStmt)_(ExpressionStmt)_(VariableDeclarationExpr)_(VariableDeclarator)_(VariableDeclaratorId0),item
[0.0008] mstoprequest,(NameExpr1)^(BinaryExpr:equals)^(IfStmt)_(BlockStmt)_(ExpressionStmt)_(MethodCallExpr0)_(NameExpr0),mstopevent
[0.0006] item,(NameExpr0)^(BinaryExpr:equals)_(NameExpr1),mstoprequest
[0.0005] super,(SuperExpr0)^(MethodCallExpr)^(VariableDeclarator)^(VariableDeclarationExpr)^(ExpressionStmt)^(BlockStmt)_(IfStmt)_(BinaryExpr:equals)_(NameExpr1),mstoprequest
[0.0005] ?,(WildcardType0)^(ClassOrInterfaceType)^(VariableDeclarationExpr)_(VariableDeclarator)_(MethodCallExpr1)_(NameExpr2),take
[0.0004] ?,(WildcardType0)^(ClassOrInterfaceType)^(VariableDeclarationExpr)_(VariableDeclarator)_(MethodCallExpr1)_(SuperExpr0),super
[0.0003] METHOD_NAME,(NameExpr2)^(MethodDeclaration)_(BlockStmt)_(IfStmt)_(BinaryExpr:equals)_(NameExpr1),mstoprequest
[0.0002] super,(SuperExpr0)^(MethodCallExpr)^(VariableDeclarator)^(VariableDeclarationExpr)^(ExpressionStmt)^(BlockStmt)_(IfStmt)_(BinaryExpr:equals)_(NameExpr0),item
[0.0001] ?,(WildcardType0)^(ClassOrInterfaceType)^(VariableDeclarationExpr)^(ExpressionStmt)^(BlockStmt)_(IfStmt)_(BinaryExpr:equals)_(NameExpr0),item
[0.0001] interruptedexception,(ClassOrInterfaceType3)^(MethodDeclaration)_(BlockStmt)_(ExpressionStmt)_(VariableDeclarationExpr)_(VariableDeclarator)_(MethodCallExpr1)_(SuperExpr0),super
[0.0001] ?,(WildcardType0)^(ClassOrInterfaceType)^(VariableDeclarationExpr)^(ExpressionStmt)^(BlockStmt)_(IfStmt)_(BinaryExpr:equals)_(NameExpr1),mstoprequest
[0.0001] take,(NameExpr2)^(MethodCallExpr)^(VariableDeclarator)^(VariableDeclarationExpr)^(ExpressionStmt)^(BlockStmt)_(IfStmt)_(BinaryExpr:equals)_(NameExpr1),mstoprequest
[0.0000] item,(NameExpr0)^(BinaryExpr:equals)^(IfStmt)_(BlockStmt)_(ExpressionStmt)_(MethodCallExpr0)_(NameExpr2),release
[0.0000] METHOD_NAME,(NameExpr2)^(MethodDeclaration)_(BlockStmt)_(IfStmt)_(BinaryExpr:equals)_(NameExpr0),item
[0.0000] item,(VariableDeclaratorId0)^(VariableDeclarator)^(VariableDeclarationExpr)^(ExpressionStmt)^(BlockStmt)_(ReturnStmt)_(NameExpr0),item
[0.0000] METHOD_NAME,(NameExpr2)^(MethodDeclaration)_(BlockStmt)_(ExpressionStmt)_(VariableDeclarationExpr)_(ClassOrInterfaceType)_(WildcardType0),?
[0.0000] take,(NameExpr2)^(MethodCallExpr)^(VariableDeclarator)^(VariableDeclarationExpr)^(ExpressionStmt)^(BlockStmt)_(IfStmt)_(BinaryExpr:equals)_(NameExpr0),item
[0.0000] item,(VariableDeclaratorId0)^(VariableDeclarator)^(VariableDeclarationExpr)^(ExpressionStmt)^(BlockStmt)_(IfStmt)_(BinaryExpr:equals)_(NameExpr0),item
[0.0000] super,(SuperExpr0)^(MethodCallExpr)^(VariableDeclarator)^(VariableDeclarationExpr)^(ExpressionStmt)^(BlockStmt)_(ReturnStmt)_(NameExpr0),item
[0.0000] METHOD_NAME,(NameExpr2)^(MethodDeclaration)_(BlockStmt)_(ExpressionStmt)_(VariableDeclarationExpr)_(VariableDeclarator)_(MethodCallExpr1)_(SuperExpr0),super
[0.0000] METHOD_NAME,(NameExpr2)^(MethodDeclaration)_(BlockStmt)_(ExpressionStmt)_(VariableDeclarationExpr)_(VariableDeclarator)_(VariableDeclaratorId0),item
[0.0000] ?,(WildcardType0)^(ClassOrInterfaceType)^(VariableDeclarationExpr)_(VariableDeclarator)_(VariableDeclaratorId0),item
[0.0000] item,(VariableDeclaratorId0)^(VariableDeclarator)_(MethodCallExpr1)_(NameExpr2),take
[0.0000] item,(VariableDeclaratorId0)^(VariableDeclarator)_(MethodCallExpr1)_(SuperExpr0),super
[0.0000] item,(VariableDeclaratorId0)^(VariableDeclarator)^(VariableDeclarationExpr)^(ExpressionStmt)^(BlockStmt)_(IfStmt)_(BinaryExpr:equals)_(NameExpr1),mstoprequest

topk terminals:
[['super', 'take'], ['release', 'take'], ['interruptedexception', 'item'], ['METHOD_NAME', 'take'], ['item', 'take'], ['interruptedexception', 'take'], ['METHOD_NAME', 'take'], ['mstoprequest', 'take'], ['take', 'item'], ['mstopevent', 'take'], ['release', 'item'], ['?', 'item'], ['interruptedexception', 'take'], ['METHOD_NAME', 'item'], ['?', 'interruptedexception'], ['take', 'item'], ['?', 'METHOD_NAME'], ['mstopevent', 'item'], ['mstoprequest', 'item'], ['interruptedexception', 'release'], ['METHOD_NAME', 'release'], ['item', 'item'], ['mstoprequest', 'release'], ['item', 'mstopevent'], ['override', 'METHOD_NAME'], ['interruptedexception', 'mstopevent'], ['mstopevent', 'release'], ['interruptedexception', 'mstoprequest'], ['METHOD_NAME', 'interruptedexception'], ['METHOD_NAME', 'mstopevent'], ['interruptedexception', '?'], ['override', '?'], ['interruptedexception', 'item'], ['interruptedexception', 'item'], ['mstoprequest', 'mstopevent'], ['item', 'mstoprequest'], ['super', 'mstoprequest'], ['?', 'take'], ['?', 'super'], ['METHOD_NAME', 'mstoprequest'], ['super', 'item'], ['?', 'item'], ['interruptedexception', 'super'], ['?', 'mstoprequest'], ['take', 'mstoprequest'], ['item', 'release'], ['METHOD_NAME', 'item'], ['item', 'item'], ['METHOD_NAME', '?'], ['take', 'item'], ['item', 'item'], ['super', 'item'], ['METHOD_NAME', 'super'], ['METHOD_NAME', 'item'], ['?', 'item'], ['item', 'take'], ['item', 'super'], ['item', 'mstoprequest']]

