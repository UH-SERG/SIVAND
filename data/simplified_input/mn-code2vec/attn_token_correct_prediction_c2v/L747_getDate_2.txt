
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/bcgit__bc-java/core/src/main/java/org/bouncycastle/asn1/cms/Time_getDate.java
method_name = getDate
method_body = public Date getDate() { try { if (time instanceof ASN1UTCTime) { return ((ASN1UTCTime) time).getAdjustedDate(); } else { return ((ASN1GeneralizedTime) time).getDate(); } } catch (ParseException e) { throw new IllegalStateException("invalid date string: " + e.getMessage()); } }

topk path-contexts:
[0.1270] time,(NameExpr0)^(InstanceOfExpr)^(IfStmt)_(BlockStmt)_(ReturnStmt)_(MethodCallExpr0)_(NameExpr2),getdate
[0.1244] asnutctime,(ClassOrInterfaceType1)^(InstanceOfExpr)^(IfStmt)_(BlockStmt)_(ReturnStmt)_(MethodCallExpr0)_(NameExpr2),getdate
[0.1214] time,(NameExpr0)^(InstanceOfExpr)^(IfStmt)_(BlockStmt)_(ReturnStmt)_(MethodCallExpr0)_(NameExpr2),getadjusteddate
[0.0871] asnutctime,(ClassOrInterfaceType1)^(InstanceOfExpr)^(IfStmt)_(BlockStmt)_(ReturnStmt)_(MethodCallExpr0)_(EnclosedExpr)_(CastExpr)_(ClassOrInterfaceType0),asnutctime
[0.0857] asnutctime,(ClassOrInterfaceType1)^(InstanceOfExpr)^(IfStmt)_(BlockStmt)_(ReturnStmt)_(MethodCallExpr0)_(NameExpr2),getadjusteddate
[0.0719] asnutctime,(ClassOrInterfaceType1)^(InstanceOfExpr)^(IfStmt)_(BlockStmt)_(ReturnStmt)_(MethodCallExpr0)_(EnclosedExpr)_(CastExpr)_(ClassOrInterfaceType0),asngeneralizedtime
[0.0672] date,(ClassOrInterfaceType0)^(MethodDeclaration)_(BlockStmt)_(TryStmt)_(CatchClause)_(BlockStmt)_(ThrowStmt)_(ObjectCreationExpr)_(ClassOrInterfaceType0),illegalstateexception
[0.0659] date,(ClassOrInterfaceType0)^(MethodDeclaration)_(BlockStmt)_(TryStmt)_(CatchClause)_(Parameter)_(VariableDeclaratorId0),e
[0.0435] date,(ClassOrInterfaceType0)^(MethodDeclaration)_(NameExpr1),METHOD_NAME
[0.0423] asngeneralizedtime,(ClassOrInterfaceType0)^(CastExpr)^(EnclosedExpr0)^(MethodCallExpr)_(NameExpr2),getdate
[0.0402] date,(ClassOrInterfaceType0)^(MethodDeclaration)_(BlockStmt)_(TryStmt)_(CatchClause)_(Parameter)_(ClassOrInterfaceType1),parseexception
[0.0322] time,(NameExpr1)^(CastExpr)^(EnclosedExpr0)^(MethodCallExpr)_(NameExpr2),getdate
[0.0185] time,(NameExpr1)^(CastExpr)^(EnclosedExpr0)^(MethodCallExpr)_(NameExpr2),getadjusteddate
[0.0168] asnutctime,(ClassOrInterfaceType0)^(CastExpr)^(EnclosedExpr0)^(MethodCallExpr)_(NameExpr2),getadjusteddate
[0.0158] getadjusteddate,(NameExpr2)^(MethodCallExpr)^(ReturnStmt)^(BlockStmt)^(IfStmt)_(BlockStmt)_(ReturnStmt)_(MethodCallExpr0)_(NameExpr2),getdate
[0.0063] time,(NameExpr0)^(InstanceOfExpr)^(IfStmt)_(BlockStmt)_(ReturnStmt)_(MethodCallExpr0)_(EnclosedExpr)_(CastExpr)_(ClassOrInterfaceType0),asngeneralizedtime
[0.0041] parseexception,(ClassOrInterfaceType1)^(Parameter)^(CatchClause)_(BlockStmt)_(ThrowStmt)_(ObjectCreationExpr)_(BinaryExpr:plus)_(StringLiteralExpr0),invaliddatestring
[0.0040] e,(VariableDeclaratorId0)^(Parameter)_(ClassOrInterfaceType1),parseexception
[0.0030] date,(ClassOrInterfaceType0)^(MethodDeclaration)_(BlockStmt)_(TryStmt)_(BlockStmt)_(IfStmt)_(InstanceOfExpr)_(NameExpr0),time
[0.0030] METHOD_NAME,(NameExpr1)^(MethodDeclaration)_(BlockStmt)_(TryStmt)_(CatchClause)_(BlockStmt)_(ThrowStmt)_(ObjectCreationExpr)_(ClassOrInterfaceType0),illegalstateexception
[0.0029] e,(NameExpr0)^(MethodCallExpr)_(NameExpr2),getmessage
[0.0023] METHOD_NAME,(NameExpr1)^(MethodDeclaration)_(BlockStmt)_(TryStmt)_(BlockStmt)_(IfStmt)_(InstanceOfExpr)_(ClassOrInterfaceType1),asnutctime
[0.0021] parseexception,(ClassOrInterfaceType1)^(Parameter)^(CatchClause)_(BlockStmt)_(ThrowStmt)_(ObjectCreationExpr)_(ClassOrInterfaceType0),illegalstateexception
[0.0020] date,(ClassOrInterfaceType0)^(MethodDeclaration)_(BlockStmt)_(TryStmt)_(BlockStmt)_(IfStmt)_(InstanceOfExpr)_(ClassOrInterfaceType1),asnutctime
[0.0018] time,(NameExpr0)^(InstanceOfExpr)^(IfStmt)_(BlockStmt)_(ReturnStmt)_(MethodCallExpr0)_(EnclosedExpr)_(CastExpr)_(ClassOrInterfaceType0),asnutctime
[0.0011] invaliddatestring,(StringLiteralExpr0)^(BinaryExpr:plus)_(MethodCallExpr1)_(NameExpr2),getmessage
[0.0010] METHOD_NAME,(NameExpr1)^(MethodDeclaration)_(BlockStmt)_(TryStmt)_(BlockStmt)_(IfStmt)_(InstanceOfExpr)_(NameExpr0),time
[0.0009] e,(VariableDeclaratorId0)^(Parameter)^(CatchClause)_(BlockStmt)_(ThrowStmt)_(ObjectCreationExpr)_(BinaryExpr:plus)_(StringLiteralExpr0),invaliddatestring
[0.0008] illegalstateexception,(ClassOrInterfaceType0)^(ObjectCreationExpr)_(BinaryExpr:plus)_(StringLiteralExpr0),invaliddatestring
[0.0006] asnutctime,(ClassOrInterfaceType1)^(InstanceOfExpr)^(IfStmt)_(BlockStmt)_(ReturnStmt)_(MethodCallExpr0)_(EnclosedExpr)_(CastExpr)_(NameExpr1),time
[0.0006] asnutctime,(ClassOrInterfaceType1)^(InstanceOfExpr)^(IfStmt)_(BlockStmt)_(ReturnStmt)_(MethodCallExpr0)_(EnclosedExpr)_(CastExpr)_(NameExpr1),time
[0.0005] METHOD_NAME,(NameExpr1)^(MethodDeclaration)_(BlockStmt)_(TryStmt)_(CatchClause)_(Parameter)_(ClassOrInterfaceType1),parseexception
[0.0004] time,(NameExpr0)^(InstanceOfExpr)^(IfStmt)_(BlockStmt)_(ReturnStmt)_(MethodCallExpr0)_(EnclosedExpr)_(CastExpr)_(NameExpr1),time
[0.0004] time,(NameExpr0)^(InstanceOfExpr)^(IfStmt)_(BlockStmt)_(ReturnStmt)_(MethodCallExpr0)_(EnclosedExpr)_(CastExpr)_(NameExpr1),time
[0.0003] invaliddatestring,(StringLiteralExpr0)^(BinaryExpr:plus)_(MethodCallExpr1)_(NameExpr0),e
[0.0003] e,(VariableDeclaratorId0)^(Parameter)^(CatchClause)_(BlockStmt)_(ThrowStmt)_(ObjectCreationExpr)_(BinaryExpr:plus)_(MethodCallExpr1)_(NameExpr0),e
[0.0003] parseexception,(ClassOrInterfaceType1)^(Parameter)^(CatchClause)_(BlockStmt)_(ThrowStmt)_(ObjectCreationExpr)_(BinaryExpr:plus)_(MethodCallExpr1)_(NameExpr0),e
[0.0002] asnutctime,(ClassOrInterfaceType1)^(InstanceOfExpr)^(IfStmt)^(BlockStmt)^(TryStmt)_(CatchClause)_(Parameter)_(ClassOrInterfaceType1),parseexception
[0.0001] asngeneralizedtime,(ClassOrInterfaceType0)^(CastExpr)_(NameExpr1),time
[0.0001] e,(VariableDeclaratorId0)^(Parameter)^(CatchClause)_(BlockStmt)_(ThrowStmt)_(ObjectCreationExpr)_(ClassOrInterfaceType0),illegalstateexception
[0.0001] time,(NameExpr0)^(InstanceOfExpr)^(IfStmt)^(BlockStmt)^(TryStmt)_(CatchClause)_(Parameter)_(ClassOrInterfaceType1),parseexception
[0.0001] METHOD_NAME,(NameExpr1)^(MethodDeclaration)_(BlockStmt)_(TryStmt)_(CatchClause)_(Parameter)_(VariableDeclaratorId0),e
[0.0001] parseexception,(ClassOrInterfaceType1)^(Parameter)^(CatchClause)_(BlockStmt)_(ThrowStmt)_(ObjectCreationExpr)_(BinaryExpr:plus)_(MethodCallExpr1)_(NameExpr2),getmessage
[0.0001] time,(NameExpr0)^(InstanceOfExpr)^(IfStmt)^(BlockStmt)^(TryStmt)_(CatchClause)_(Parameter)_(VariableDeclaratorId0),e
[0.0001] e,(VariableDeclaratorId0)^(Parameter)^(CatchClause)_(BlockStmt)_(ThrowStmt)_(ObjectCreationExpr)_(BinaryExpr:plus)_(MethodCallExpr1)_(NameExpr2),getmessage
[0.0001] illegalstateexception,(ClassOrInterfaceType0)^(ObjectCreationExpr)_(BinaryExpr:plus)_(MethodCallExpr1)_(NameExpr0),e
[0.0001] asnutctime,(ClassOrInterfaceType0)^(CastExpr)_(NameExpr1),time
[0.0001] asnutctime,(ClassOrInterfaceType1)^(InstanceOfExpr)^(IfStmt)^(BlockStmt)^(TryStmt)_(CatchClause)_(Parameter)_(VariableDeclaratorId0),e
[0.0000] illegalstateexception,(ClassOrInterfaceType0)^(ObjectCreationExpr)_(BinaryExpr:plus)_(MethodCallExpr1)_(NameExpr2),getmessage
[0.0000] time,(NameExpr0)^(InstanceOfExpr)_(ClassOrInterfaceType1),asnutctime

topk terminals:
[['time', 'getdate'], ['asnutctime', 'getdate'], ['time', 'getadjusteddate'], ['asnutctime', 'asnutctime'], ['asnutctime', 'getadjusteddate'], ['asnutctime', 'asngeneralizedtime'], ['date', 'illegalstateexception'], ['date', 'e'], ['date', 'METHOD_NAME'], ['asngeneralizedtime', 'getdate'], ['date', 'parseexception'], ['time', 'getdate'], ['time', 'getadjusteddate'], ['asnutctime', 'getadjusteddate'], ['getadjusteddate', 'getdate'], ['time', 'asngeneralizedtime'], ['parseexception', 'invaliddatestring'], ['e', 'parseexception'], ['date', 'time'], ['METHOD_NAME', 'illegalstateexception'], ['e', 'getmessage'], ['METHOD_NAME', 'asnutctime'], ['parseexception', 'illegalstateexception'], ['date', 'asnutctime'], ['time', 'asnutctime'], ['invaliddatestring', 'getmessage'], ['METHOD_NAME', 'time'], ['e', 'invaliddatestring'], ['illegalstateexception', 'invaliddatestring'], ['asnutctime', 'time'], ['asnutctime', 'time'], ['METHOD_NAME', 'parseexception'], ['time', 'time'], ['time', 'time'], ['invaliddatestring', 'e'], ['e', 'e'], ['parseexception', 'e'], ['asnutctime', 'parseexception'], ['asngeneralizedtime', 'time'], ['e', 'illegalstateexception'], ['time', 'parseexception'], ['METHOD_NAME', 'e'], ['parseexception', 'getmessage'], ['time', 'e'], ['e', 'getmessage'], ['illegalstateexception', 'e'], ['asnutctime', 'time'], ['asnutctime', 'e'], ['illegalstateexception', 'getmessage'], ['time', 'asnutctime']]

