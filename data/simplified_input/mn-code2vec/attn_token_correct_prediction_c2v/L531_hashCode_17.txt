
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/rakam-io__rakam/rakam-spi/src/main/java/org/rakam/util/ProjectCollection_hashCode.java
method_name = hashCode
method_body = @Override public int hashCode() { int result = project.hashCode(); result = 31 * result + collection.hashCode(); return result; }

topk path-contexts:
[0.1677] int,(PrimitiveType1)^(MethodDeclaration)_(BlockStmt)_(ExpressionStmt)_(VariableDeclarationExpr)_(VariableDeclarator)_(MethodCallExpr1)_(NameExpr2),hashcode
[0.1633] int,(PrimitiveType1)^(MethodDeclaration)_(BlockStmt)_(ExpressionStmt)_(AssignExpr:assign0)_(BinaryExpr:plus)_(BinaryExpr:times)_(IntegerLiteralExpr0),31
[0.1039] 31,(IntegerLiteralExpr0)^(BinaryExpr:times)^(BinaryExpr:plus1)_(MethodCallExpr1)_(NameExpr2),hashcode
[0.0724] result,(NameExpr0)^(AssignExpr:assign)_(BinaryExpr:plus)_(BinaryExpr:times)_(IntegerLiteralExpr0),31
[0.0610] METHOD_NAME,(NameExpr2)^(MethodDeclaration)_(BlockStmt)_(ExpressionStmt)_(VariableDeclarationExpr)_(VariableDeclarator)_(MethodCallExpr1)_(NameExpr2),hashcode
[0.0463] int,(PrimitiveType1)^(MethodDeclaration)_(BlockStmt)_(ExpressionStmt)_(VariableDeclarationExpr)_(VariableDeclarator)_(MethodCallExpr1)_(NameExpr0),project
[0.0366] result,(NameExpr1)^(BinaryExpr:times)^(BinaryExpr:plus1)_(MethodCallExpr1)_(NameExpr0),collection
[0.0351] 31,(IntegerLiteralExpr0)^(BinaryExpr:times)^(BinaryExpr:plus1)_(MethodCallExpr1)_(NameExpr0),collection
[0.0327] METHOD_NAME,(NameExpr2)^(MethodDeclaration)_(BlockStmt)_(ExpressionStmt)_(AssignExpr:assign0)_(BinaryExpr:plus)_(BinaryExpr:times)_(IntegerLiteralExpr0),31
[0.0327] int,(PrimitiveType1)^(MethodDeclaration)_(BlockStmt)_(ExpressionStmt)_(AssignExpr:assign0)_(BinaryExpr:plus)_(MethodCallExpr1)_(NameExpr2),hashcode
[0.0301] int,(PrimitiveType0)^(VariableDeclarationExpr)^(ExpressionStmt)^(BlockStmt)_(ExpressionStmt)_(AssignExpr:assign0)_(BinaryExpr:plus)_(MethodCallExpr1)_(NameExpr2),hashcode
[0.0294] result,(NameExpr1)^(BinaryExpr:times)^(BinaryExpr:plus1)_(MethodCallExpr1)_(NameExpr2),hashcode
[0.0272] METHOD_NAME,(NameExpr2)^(MethodDeclaration)_(BlockStmt)_(ExpressionStmt)_(AssignExpr:assign0)_(BinaryExpr:plus)_(MethodCallExpr1)_(NameExpr2),hashcode
[0.0263] int,(PrimitiveType1)^(MethodDeclaration)_(BlockStmt)_(ExpressionStmt)_(AssignExpr:assign0)_(BinaryExpr:plus)_(MethodCallExpr1)_(NameExpr0),collection
[0.0153] result,(NameExpr1)^(BinaryExpr:times)^(BinaryExpr:plus1)^(AssignExpr:assign)^(ExpressionStmt)^(BlockStmt)_(ReturnStmt)_(NameExpr0),result
[0.0141] project,(NameExpr0)^(MethodCallExpr)_(NameExpr2),hashcode
[0.0137] hashcode,(NameExpr2)^(MethodCallExpr)^(BinaryExpr:plus1)^(AssignExpr:assign)^(ExpressionStmt)^(BlockStmt)_(ReturnStmt)_(NameExpr0),result
[0.0107] collection,(NameExpr0)^(MethodCallExpr)_(NameExpr2),hashcode
[0.0085] int,(PrimitiveType0)^(VariableDeclarationExpr)^(ExpressionStmt)^(BlockStmt)_(ExpressionStmt)_(AssignExpr:assign0)_(BinaryExpr:plus)_(BinaryExpr:times)_(IntegerLiteralExpr0),31
[0.0071] METHOD_NAME,(NameExpr2)^(MethodDeclaration)_(BlockStmt)_(ExpressionStmt)_(AssignExpr:assign0)_(BinaryExpr:plus)_(MethodCallExpr1)_(NameExpr0),collection
[0.0067] int,(PrimitiveType1)^(MethodDeclaration)_(NameExpr2),METHOD_NAME
[0.0062] int,(PrimitiveType1)^(MethodDeclaration)_(BlockStmt)_(ReturnStmt)_(NameExpr0),result
[0.0061] int,(PrimitiveType1)^(MethodDeclaration)_(BlockStmt)_(ExpressionStmt)_(AssignExpr:assign0)_(BinaryExpr:plus)_(BinaryExpr:times)_(NameExpr1),result
[0.0059] int,(PrimitiveType1)^(MethodDeclaration)_(BlockStmt)_(ExpressionStmt)_(AssignExpr:assign0)_(NameExpr0),result
[0.0054] override,(NameExpr0)^(MarkerAnnotationExpr)^(MethodDeclaration)_(NameExpr2),METHOD_NAME
[0.0051] hashcode,(NameExpr2)^(MethodCallExpr)^(VariableDeclarator)^(VariableDeclarationExpr)^(ExpressionStmt)^(BlockStmt)_(ReturnStmt)_(NameExpr0),result
[0.0044] override,(NameExpr0)^(MarkerAnnotationExpr)^(MethodDeclaration)_(PrimitiveType1),int
[0.0040] METHOD_NAME,(NameExpr2)^(MethodDeclaration)_(BlockStmt)_(ReturnStmt)_(NameExpr0),result
[0.0035] METHOD_NAME,(NameExpr2)^(MethodDeclaration)_(BlockStmt)_(ExpressionStmt)_(VariableDeclarationExpr)_(VariableDeclarator)_(MethodCallExpr1)_(NameExpr0),project
[0.0028] project,(NameExpr0)^(MethodCallExpr)^(VariableDeclarator)^(VariableDeclarationExpr)^(ExpressionStmt)^(BlockStmt)_(ReturnStmt)_(NameExpr0),result
[0.0028] 31,(IntegerLiteralExpr0)^(BinaryExpr:times)^(BinaryExpr:plus1)^(AssignExpr:assign)^(ExpressionStmt)^(BlockStmt)_(ReturnStmt)_(NameExpr0),result
[0.0027] collection,(NameExpr0)^(MethodCallExpr)^(BinaryExpr:plus1)^(AssignExpr:assign)^(ExpressionStmt)^(BlockStmt)_(ReturnStmt)_(NameExpr0),result
[0.0015] int,(PrimitiveType1)^(MethodDeclaration)_(BlockStmt)_(ExpressionStmt)_(VariableDeclarationExpr)_(PrimitiveType0),int
[0.0013] METHOD_NAME,(NameExpr2)^(MethodDeclaration)_(BlockStmt)_(ExpressionStmt)_(AssignExpr:assign0)_(BinaryExpr:plus)_(BinaryExpr:times)_(NameExpr1),result
[0.0011] int,(PrimitiveType0)^(VariableDeclarationExpr)^(ExpressionStmt)^(BlockStmt)_(ReturnStmt)_(NameExpr0),result
[0.0011] int,(PrimitiveType0)^(VariableDeclarationExpr)_(VariableDeclarator)_(MethodCallExpr1)_(NameExpr2),hashcode
[0.0011] result,(NameExpr0)^(AssignExpr:assign)_(BinaryExpr:plus)_(MethodCallExpr1)_(NameExpr2),hashcode
[0.0010] 31,(IntegerLiteralExpr0)^(BinaryExpr:times)_(NameExpr1),result
[0.0006] int,(PrimitiveType0)^(VariableDeclarationExpr)^(ExpressionStmt)^(BlockStmt)_(ExpressionStmt)_(AssignExpr:assign0)_(BinaryExpr:plus)_(BinaryExpr:times)_(NameExpr1),result
[0.0005] project,(NameExpr0)^(MethodCallExpr)^(VariableDeclarator)^(VariableDeclarationExpr)^(ExpressionStmt)^(BlockStmt)_(ExpressionStmt)_(AssignExpr:assign0)_(NameExpr0),result
[0.0005] METHOD_NAME,(NameExpr2)^(MethodDeclaration)_(BlockStmt)_(ExpressionStmt)_(AssignExpr:assign0)_(NameExpr0),result
[0.0005] int,(PrimitiveType1)^(MethodDeclaration)_(BlockStmt)_(ExpressionStmt)_(VariableDeclarationExpr)_(VariableDeclarator)_(VariableDeclaratorId0),result
[0.0005] hashcode,(NameExpr2)^(MethodCallExpr)^(VariableDeclarator)^(VariableDeclarationExpr)^(ExpressionStmt)^(BlockStmt)_(ExpressionStmt)_(AssignExpr:assign0)_(NameExpr0),result
[0.0004] int,(PrimitiveType0)^(VariableDeclarationExpr)^(ExpressionStmt)^(BlockStmt)_(ExpressionStmt)_(AssignExpr:assign0)_(BinaryExpr:plus)_(MethodCallExpr1)_(NameExpr0),collection
[0.0001] result,(NameExpr0)^(AssignExpr:assign)_(BinaryExpr:plus)_(MethodCallExpr1)_(NameExpr0),collection
[0.0001] result,(NameExpr0)^(AssignExpr:assign)^(ExpressionStmt)^(BlockStmt)_(ReturnStmt)_(NameExpr0),result
[0.0001] result,(NameExpr0)^(AssignExpr:assign)_(BinaryExpr:plus)_(BinaryExpr:times)_(NameExpr1),result
[0.0000] METHOD_NAME,(NameExpr2)^(MethodDeclaration)_(BlockStmt)_(ExpressionStmt)_(VariableDeclarationExpr)_(PrimitiveType0),int
[0.0000] int,(PrimitiveType0)^(VariableDeclarationExpr)_(VariableDeclarator)_(MethodCallExpr1)_(NameExpr0),project
[0.0000] result,(VariableDeclaratorId0)^(VariableDeclarator)_(MethodCallExpr1)_(NameExpr2),hashcode
[0.0000] result,(VariableDeclaratorId0)^(VariableDeclarator)_(MethodCallExpr1)_(NameExpr0),project
[0.0000] METHOD_NAME,(NameExpr2)^(MethodDeclaration)_(BlockStmt)_(ExpressionStmt)_(VariableDeclarationExpr)_(VariableDeclarator)_(VariableDeclaratorId0),result
[0.0000] result,(VariableDeclaratorId0)^(VariableDeclarator)^(VariableDeclarationExpr)^(ExpressionStmt)^(BlockStmt)_(ReturnStmt)_(NameExpr0),result
[0.0000] int,(PrimitiveType0)^(VariableDeclarationExpr)_(VariableDeclarator)_(VariableDeclaratorId0),result
[0.0000] int,(PrimitiveType0)^(VariableDeclarationExpr)^(ExpressionStmt)^(BlockStmt)_(ExpressionStmt)_(AssignExpr:assign0)_(NameExpr0),result
[0.0000] result,(VariableDeclaratorId0)^(VariableDeclarator)^(VariableDeclarationExpr)^(ExpressionStmt)^(BlockStmt)_(ExpressionStmt)_(AssignExpr:assign0)_(NameExpr0),result

topk terminals:
[['int', 'hashcode'], ['int', '31'], ['31', 'hashcode'], ['result', '31'], ['METHOD_NAME', 'hashcode'], ['int', 'project'], ['result', 'collection'], ['31', 'collection'], ['METHOD_NAME', '31'], ['int', 'hashcode'], ['int', 'hashcode'], ['result', 'hashcode'], ['METHOD_NAME', 'hashcode'], ['int', 'collection'], ['result', 'result'], ['project', 'hashcode'], ['hashcode', 'result'], ['collection', 'hashcode'], ['int', '31'], ['METHOD_NAME', 'collection'], ['int', 'METHOD_NAME'], ['int', 'result'], ['int', 'result'], ['int', 'result'], ['override', 'METHOD_NAME'], ['hashcode', 'result'], ['override', 'int'], ['METHOD_NAME', 'result'], ['METHOD_NAME', 'project'], ['project', 'result'], ['31', 'result'], ['collection', 'result'], ['int', 'int'], ['METHOD_NAME', 'result'], ['int', 'result'], ['int', 'hashcode'], ['result', 'hashcode'], ['31', 'result'], ['int', 'result'], ['project', 'result'], ['METHOD_NAME', 'result'], ['int', 'result'], ['hashcode', 'result'], ['int', 'collection'], ['result', 'collection'], ['result', 'result'], ['result', 'result'], ['METHOD_NAME', 'int'], ['int', 'project'], ['result', 'hashcode'], ['result', 'project'], ['METHOD_NAME', 'result'], ['result', 'result'], ['int', 'result'], ['int', 'result'], ['result', 'result']]

