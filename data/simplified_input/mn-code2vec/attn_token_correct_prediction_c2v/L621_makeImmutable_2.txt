
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/OpenRock__OpenAM/openam-federation/openam-federation-library/src/main/java/com/sun/identity/saml2/protocol/impl/ManageNameIDRequestImpl_makeImmutable.java
method_name = makeImmutable
method_body = public void makeImmutable() { if (isMutable) { super.makeImmutable(); if ((nameid != null) && (nameid.isMutable())) { nameid.makeImmutable(); } isMutable = false; } }

topk path-contexts:
[0.2210] super,(SuperExpr0)^(MethodCallExpr)_(NameExpr2),makeimmutable
[0.0904] makeimmutable,(NameExpr2)^(MethodCallExpr)^(ExpressionStmt)^(BlockStmt)_(ExpressionStmt)_(AssignExpr:assign0)_(NameExpr0),ismutable
[0.0699] ismutable,(NameExpr2)^(MethodCallExpr)^(EnclosedExpr)^(BinaryExpr:and)^(IfStmt)^(BlockStmt)_(ExpressionStmt)_(AssignExpr:assign0)_(NameExpr0),ismutable
[0.0642] void,(VoidType0)^(MethodDeclaration)_(BlockStmt)_(IfStmt)_(BlockStmt)_(ExpressionStmt)_(MethodCallExpr0)_(NameExpr2),makeimmutable
[0.0622] makeimmutable,(NameExpr2)^(MethodCallExpr)^(ExpressionStmt)^(BlockStmt)_(IfStmt)_(BinaryExpr:and)_(EnclosedExpr)_(MethodCallExpr0)_(NameExpr0),nameid
[0.0462] makeimmutable,(NameExpr2)^(MethodCallExpr)^(ExpressionStmt)^(BlockStmt)_(IfStmt)_(BinaryExpr:and)_(EnclosedExpr)_(BinaryExpr:notEquals)_(NameExpr0),nameid
[0.0377] makeimmutable,(NameExpr2)^(MethodCallExpr)^(ExpressionStmt)^(BlockStmt)_(IfStmt)_(BlockStmt)_(ExpressionStmt)_(MethodCallExpr0)_(NameExpr2),makeimmutable
[0.0358] makeimmutable,(NameExpr2)^(MethodCallExpr)^(ExpressionStmt)^(BlockStmt)_(IfStmt)_(BlockStmt)_(ExpressionStmt)_(MethodCallExpr0)_(NameExpr0),nameid
[0.0308] nameid,(NameExpr0)^(MethodCallExpr)_(NameExpr2),makeimmutable
[0.0280] ismutable,(NameExpr0)^(IfStmt)_(BlockStmt)_(IfStmt)_(BlockStmt)_(ExpressionStmt)_(MethodCallExpr0)_(NameExpr2),makeimmutable
[0.0276] makeimmutable,(NameExpr2)^(MethodCallExpr)^(ExpressionStmt)^(BlockStmt)^(IfStmt)^(BlockStmt)_(ExpressionStmt)_(AssignExpr:assign0)_(NameExpr0),ismutable
[0.0269] nameid,(NameExpr0)^(MethodCallExpr)^(EnclosedExpr)^(BinaryExpr:and)^(IfStmt)_(BlockStmt)_(ExpressionStmt)_(MethodCallExpr0)_(NameExpr2),makeimmutable
[0.0178] makeimmutable,(NameExpr2)^(MethodCallExpr)^(ExpressionStmt)^(BlockStmt)_(IfStmt)_(BinaryExpr:and)_(EnclosedExpr)_(MethodCallExpr0)_(NameExpr2),ismutable
[0.0175] nameid,(NameExpr0)^(MethodCallExpr)^(ExpressionStmt)^(BlockStmt)^(IfStmt)^(BlockStmt)_(ExpressionStmt)_(AssignExpr:assign0)_(NameExpr0),ismutable
[0.0160] nameid,(NameExpr0)^(MethodCallExpr)_(NameExpr2),ismutable
[0.0155] nameid,(NameExpr0)^(MethodCallExpr)^(EnclosedExpr)^(BinaryExpr:and)^(IfStmt)_(BlockStmt)_(ExpressionStmt)_(MethodCallExpr0)_(NameExpr0),nameid
[0.0151] ismutable,(NameExpr0)^(IfStmt)_(BlockStmt)_(ExpressionStmt)_(MethodCallExpr0)_(NameExpr2),makeimmutable
[0.0149] void,(VoidType0)^(MethodDeclaration)_(BlockStmt)_(IfStmt)_(BlockStmt)_(ExpressionStmt)_(AssignExpr:assign0)_(NameExpr0),ismutable
[0.0149] ismutable,(NameExpr2)^(MethodCallExpr)^(EnclosedExpr)^(BinaryExpr:and)^(IfStmt)_(BlockStmt)_(ExpressionStmt)_(MethodCallExpr0)_(NameExpr2),makeimmutable
[0.0103] nameid,(NameExpr0)^(BinaryExpr:notEquals)^(EnclosedExpr)^(BinaryExpr:and)^(IfStmt)_(BlockStmt)_(ExpressionStmt)_(MethodCallExpr0)_(NameExpr2),makeimmutable
[0.0097] nameid,(NameExpr0)^(BinaryExpr:notEquals)^(EnclosedExpr)^(BinaryExpr:and)_(EnclosedExpr)_(MethodCallExpr0)_(NameExpr2),ismutable
[0.0097] nameid,(NameExpr0)^(BinaryExpr:notEquals)^(EnclosedExpr)^(BinaryExpr:and)_(EnclosedExpr)_(MethodCallExpr0)_(NameExpr0),nameid
[0.0096] nameid,(NameExpr0)^(MethodCallExpr)^(EnclosedExpr)^(BinaryExpr:and)^(IfStmt)^(BlockStmt)_(ExpressionStmt)_(AssignExpr:assign0)_(NameExpr0),ismutable
[0.0095] ismutable,(NameExpr0)^(IfStmt)_(BlockStmt)_(IfStmt)_(BinaryExpr:and)_(EnclosedExpr)_(BinaryExpr:notEquals)_(NameExpr0),nameid
[0.0091] null,(NullLiteralExpr1)^(BinaryExpr:notEquals)^(EnclosedExpr)^(BinaryExpr:and)_(EnclosedExpr)_(MethodCallExpr0)_(NameExpr2),ismutable
[0.0081] ismutable,(NameExpr0)^(IfStmt)_(BlockStmt)_(IfStmt)_(BlockStmt)_(ExpressionStmt)_(MethodCallExpr0)_(NameExpr0),nameid
[0.0081] null,(NullLiteralExpr1)^(BinaryExpr:notEquals)^(EnclosedExpr)^(BinaryExpr:and)^(IfStmt)_(BlockStmt)_(ExpressionStmt)_(MethodCallExpr0)_(NameExpr2),makeimmutable
[0.0066] METHOD_NAME,(NameExpr1)^(MethodDeclaration)_(BlockStmt)_(IfStmt)_(NameExpr0),ismutable
[0.0064] ismutable,(NameExpr0)^(IfStmt)_(BlockStmt)_(ExpressionStmt)_(AssignExpr:assign0)_(NameExpr0),ismutable
[0.0063] void,(VoidType0)^(MethodDeclaration)_(BlockStmt)_(IfStmt)_(NameExpr0),ismutable
[0.0060] nameid,(NameExpr0)^(BinaryExpr:notEquals)^(EnclosedExpr)^(BinaryExpr:and)^(IfStmt)^(BlockStmt)_(ExpressionStmt)_(AssignExpr:assign0)_(NameExpr0),ismutable
[0.0053] makeimmutable,(NameExpr2)^(MethodCallExpr)^(ExpressionStmt)^(BlockStmt)_(IfStmt)_(BinaryExpr:and)_(EnclosedExpr)_(BinaryExpr:notEquals)_(NullLiteralExpr1),null
[0.0044] null,(NullLiteralExpr1)^(BinaryExpr:notEquals)^(EnclosedExpr)^(BinaryExpr:and)_(EnclosedExpr)_(MethodCallExpr0)_(NameExpr0),nameid
[0.0038] ismutable,(NameExpr0)^(IfStmt)_(BlockStmt)_(IfStmt)_(BinaryExpr:and)_(EnclosedExpr)_(MethodCallExpr0)_(NameExpr2),ismutable
[0.0037] METHOD_NAME,(NameExpr1)^(MethodDeclaration)_(BlockStmt)_(IfStmt)_(BlockStmt)_(ExpressionStmt)_(MethodCallExpr0)_(NameExpr2),makeimmutable
[0.0033] void,(VoidType0)^(MethodDeclaration)_(BlockStmt)_(IfStmt)_(BlockStmt)_(ExpressionStmt)_(AssignExpr:assign0)_(BooleanLiteralExpr1),false
[0.0032] ismutable,(NameExpr2)^(MethodCallExpr)^(EnclosedExpr)^(BinaryExpr:and)^(IfStmt)_(BlockStmt)_(ExpressionStmt)_(MethodCallExpr0)_(NameExpr0),nameid
[0.0031] ismutable,(NameExpr0)^(AssignExpr:assign)_(BooleanLiteralExpr1),false
[0.0028] ismutable,(NameExpr0)^(IfStmt)_(BlockStmt)_(IfStmt)_(BinaryExpr:and)_(EnclosedExpr)_(BinaryExpr:notEquals)_(NullLiteralExpr1),null
[0.0028] METHOD_NAME,(NameExpr1)^(MethodDeclaration)_(BlockStmt)_(IfStmt)_(BlockStmt)_(ExpressionStmt)_(AssignExpr:assign0)_(NameExpr0),ismutable
[0.0025] super,(SuperExpr0)^(MethodCallExpr)^(ExpressionStmt)^(BlockStmt)_(IfStmt)_(BinaryExpr:and)_(EnclosedExpr)_(MethodCallExpr0)_(NameExpr2),ismutable
[0.0019] ismutable,(NameExpr0)^(IfStmt)_(BlockStmt)_(IfStmt)_(BinaryExpr:and)_(EnclosedExpr)_(MethodCallExpr0)_(NameExpr0),nameid
[0.0018] nameid,(NameExpr0)^(BinaryExpr:notEquals)^(EnclosedExpr)^(BinaryExpr:and)^(IfStmt)_(BlockStmt)_(ExpressionStmt)_(MethodCallExpr0)_(NameExpr0),nameid
[0.0017] super,(SuperExpr0)^(MethodCallExpr)^(ExpressionStmt)^(BlockStmt)_(IfStmt)_(BinaryExpr:and)_(EnclosedExpr)_(BinaryExpr:notEquals)_(NameExpr0),nameid
[0.0017] super,(SuperExpr0)^(MethodCallExpr)^(ExpressionStmt)^(BlockStmt)_(IfStmt)_(BinaryExpr:and)_(EnclosedExpr)_(MethodCallExpr0)_(NameExpr0),nameid
[0.0017] void,(VoidType0)^(MethodDeclaration)_(NameExpr1),METHOD_NAME
[0.0012] ismutable,(NameExpr0)^(IfStmt)_(BlockStmt)_(ExpressionStmt)_(AssignExpr:assign0)_(BooleanLiteralExpr1),false
[0.0008] null,(NullLiteralExpr1)^(BinaryExpr:notEquals)^(EnclosedExpr)^(BinaryExpr:and)^(IfStmt)^(BlockStmt)_(ExpressionStmt)_(AssignExpr:assign0)_(NameExpr0),ismutable
[0.0005] nameid,(NameExpr0)^(BinaryExpr:notEquals)^(EnclosedExpr)^(BinaryExpr:and)^(IfStmt)^(BlockStmt)_(ExpressionStmt)_(AssignExpr:assign0)_(BooleanLiteralExpr1),false
[0.0005] void,(VoidType0)^(MethodDeclaration)_(BlockStmt)_(IfStmt)_(BlockStmt)_(ExpressionStmt)_(MethodCallExpr0)_(SuperExpr0),super
[0.0004] ismutable,(NameExpr2)^(MethodCallExpr)^(EnclosedExpr)^(BinaryExpr:and)^(IfStmt)^(BlockStmt)_(ExpressionStmt)_(AssignExpr:assign0)_(BooleanLiteralExpr1),false
[0.0004] nameid,(NameExpr0)^(MethodCallExpr)^(EnclosedExpr)^(BinaryExpr:and)^(IfStmt)^(BlockStmt)_(ExpressionStmt)_(AssignExpr:assign0)_(BooleanLiteralExpr1),false
[0.0003] makeimmutable,(NameExpr2)^(MethodCallExpr)^(ExpressionStmt)^(BlockStmt)^(IfStmt)^(BlockStmt)_(ExpressionStmt)_(AssignExpr:assign0)_(BooleanLiteralExpr1),false
[0.0002] ismutable,(NameExpr0)^(IfStmt)_(BlockStmt)_(ExpressionStmt)_(MethodCallExpr0)_(SuperExpr0),super
[0.0002] null,(NullLiteralExpr1)^(BinaryExpr:notEquals)^(EnclosedExpr)^(BinaryExpr:and)^(IfStmt)_(BlockStmt)_(ExpressionStmt)_(MethodCallExpr0)_(NameExpr0),nameid
[0.0002] makeimmutable,(NameExpr2)^(MethodCallExpr)^(ExpressionStmt)^(BlockStmt)_(ExpressionStmt)_(AssignExpr:assign0)_(BooleanLiteralExpr1),false
[0.0001] super,(SuperExpr0)^(MethodCallExpr)^(ExpressionStmt)^(BlockStmt)_(IfStmt)_(BinaryExpr:and)_(EnclosedExpr)_(BinaryExpr:notEquals)_(NullLiteralExpr1),null
[0.0001] null,(NullLiteralExpr1)^(BinaryExpr:notEquals)^(EnclosedExpr)^(BinaryExpr:and)^(IfStmt)^(BlockStmt)_(ExpressionStmt)_(AssignExpr:assign0)_(BooleanLiteralExpr1),false
[0.0000] super,(SuperExpr0)^(MethodCallExpr)^(ExpressionStmt)^(BlockStmt)_(IfStmt)_(BlockStmt)_(ExpressionStmt)_(MethodCallExpr0)_(NameExpr2),makeimmutable
[0.0000] METHOD_NAME,(NameExpr1)^(MethodDeclaration)_(BlockStmt)_(IfStmt)_(BlockStmt)_(ExpressionStmt)_(MethodCallExpr0)_(SuperExpr0),super
[0.0000] super,(SuperExpr0)^(MethodCallExpr)^(ExpressionStmt)^(BlockStmt)_(IfStmt)_(BlockStmt)_(ExpressionStmt)_(MethodCallExpr0)_(NameExpr0),nameid
[0.0000] nameid,(NameExpr0)^(MethodCallExpr)^(ExpressionStmt)^(BlockStmt)^(IfStmt)^(BlockStmt)_(ExpressionStmt)_(AssignExpr:assign0)_(BooleanLiteralExpr1),false
[0.0000] super,(SuperExpr0)^(MethodCallExpr)^(ExpressionStmt)^(BlockStmt)_(ExpressionStmt)_(AssignExpr:assign0)_(BooleanLiteralExpr1),false
[0.0000] METHOD_NAME,(NameExpr1)^(MethodDeclaration)_(BlockStmt)_(IfStmt)_(BlockStmt)_(ExpressionStmt)_(AssignExpr:assign0)_(BooleanLiteralExpr1),false
[0.0000] super,(SuperExpr0)^(MethodCallExpr)^(ExpressionStmt)^(BlockStmt)_(ExpressionStmt)_(AssignExpr:assign0)_(NameExpr0),ismutable
[0.0000] nameid,(NameExpr0)^(BinaryExpr:notEquals)_(NullLiteralExpr1),null

topk terminals:
[['super', 'makeimmutable'], ['makeimmutable', 'ismutable'], ['ismutable', 'ismutable'], ['void', 'makeimmutable'], ['makeimmutable', 'nameid'], ['makeimmutable', 'nameid'], ['makeimmutable', 'makeimmutable'], ['makeimmutable', 'nameid'], ['nameid', 'makeimmutable'], ['ismutable', 'makeimmutable'], ['makeimmutable', 'ismutable'], ['nameid', 'makeimmutable'], ['makeimmutable', 'ismutable'], ['nameid', 'ismutable'], ['nameid', 'ismutable'], ['nameid', 'nameid'], ['ismutable', 'makeimmutable'], ['void', 'ismutable'], ['ismutable', 'makeimmutable'], ['nameid', 'makeimmutable'], ['nameid', 'ismutable'], ['nameid', 'nameid'], ['nameid', 'ismutable'], ['ismutable', 'nameid'], ['null', 'ismutable'], ['ismutable', 'nameid'], ['null', 'makeimmutable'], ['METHOD_NAME', 'ismutable'], ['ismutable', 'ismutable'], ['void', 'ismutable'], ['nameid', 'ismutable'], ['makeimmutable', 'null'], ['null', 'nameid'], ['ismutable', 'ismutable'], ['METHOD_NAME', 'makeimmutable'], ['void', 'false'], ['ismutable', 'nameid'], ['ismutable', 'false'], ['ismutable', 'null'], ['METHOD_NAME', 'ismutable'], ['super', 'ismutable'], ['ismutable', 'nameid'], ['nameid', 'nameid'], ['super', 'nameid'], ['super', 'nameid'], ['void', 'METHOD_NAME'], ['ismutable', 'false'], ['null', 'ismutable'], ['nameid', 'false'], ['void', 'super'], ['ismutable', 'false'], ['nameid', 'false'], ['makeimmutable', 'false'], ['ismutable', 'super'], ['null', 'nameid'], ['makeimmutable', 'false'], ['super', 'null'], ['null', 'false'], ['super', 'makeimmutable'], ['METHOD_NAME', 'super'], ['super', 'nameid'], ['nameid', 'false'], ['super', 'false'], ['METHOD_NAME', 'false'], ['super', 'ismutable'], ['nameid', 'null']]

