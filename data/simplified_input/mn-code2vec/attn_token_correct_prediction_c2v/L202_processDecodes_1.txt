
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/sakaiproject__sakai/jsf/jsf-widgets/src/java/org/sakaiproject/jsf/component/FlowState_processDecodes.java
method_name = processDecodes
method_body = public void processDecodes(FacesContext context) { if (log.isDebugEnabled()) log.debug("processDecodes " + getBean()); super.processDecodes(context); }

topk path-contexts:
[0.3341] facescontext,(ClassOrInterfaceType1)^(Parameter)^(MethodDeclaration)_(BlockStmt)_(ExpressionStmt)_(MethodCallExpr0)_(NameExpr3),processdecodes
[0.3280] facescontext,(ClassOrInterfaceType1)^(Parameter)^(MethodDeclaration)_(BlockStmt)_(IfStmt)_(ExpressionStmt)_(MethodCallExpr0)_(BinaryExpr:plus)_(StringLiteralExpr0),processdecodes
[0.0730] METHOD_NAME,(NameExpr1)^(MethodDeclaration)_(BlockStmt)_(IfStmt)_(ExpressionStmt)_(MethodCallExpr0)_(BinaryExpr:plus)_(StringLiteralExpr0),processdecodes
[0.0451] context,(VariableDeclaratorId0)^(Parameter)^(MethodDeclaration)_(BlockStmt)_(IfStmt)_(ExpressionStmt)_(MethodCallExpr0)_(BinaryExpr:plus)_(StringLiteralExpr0),processdecodes
[0.0416] context,(VariableDeclaratorId0)^(Parameter)^(MethodDeclaration)_(BlockStmt)_(ExpressionStmt)_(MethodCallExpr0)_(NameExpr3),processdecodes
[0.0237] context,(NameExpr2)^(MethodCallExpr)_(NameExpr3),processdecodes
[0.0212] processdecodes,(StringLiteralExpr0)^(BinaryExpr:plus2)^(MethodCallExpr)^(ExpressionStmt)^(IfStmt)^(BlockStmt)_(ExpressionStmt)_(MethodCallExpr0)_(NameExpr3),processdecodes
[0.0188] METHOD_NAME,(NameExpr1)^(MethodDeclaration)_(BlockStmt)_(ExpressionStmt)_(MethodCallExpr0)_(NameExpr3),processdecodes
[0.0162] log,(NameExpr0)^(MethodCallExpr)^(IfStmt)_(ExpressionStmt)_(MethodCallExpr0)_(BinaryExpr:plus)_(StringLiteralExpr0),processdecodes
[0.0144] isdebugenabled,(NameExpr2)^(MethodCallExpr)^(IfStmt)^(BlockStmt)_(ExpressionStmt)_(MethodCallExpr0)_(NameExpr3),processdecodes
[0.0137] log,(NameExpr0)^(MethodCallExpr)^(IfStmt)^(BlockStmt)_(ExpressionStmt)_(MethodCallExpr0)_(NameExpr3),processdecodes
[0.0130] isdebugenabled,(NameExpr2)^(MethodCallExpr)^(IfStmt)_(ExpressionStmt)_(MethodCallExpr0)_(BinaryExpr:plus)_(StringLiteralExpr0),processdecodes
[0.0125] processdecodes,(StringLiteralExpr0)^(BinaryExpr:plus2)^(MethodCallExpr)^(ExpressionStmt)^(IfStmt)^(BlockStmt)_(ExpressionStmt)_(MethodCallExpr0)_(NameExpr2),context
[0.0123] log,(NameExpr0)^(MethodCallExpr)_(BinaryExpr:plus)_(StringLiteralExpr0),processdecodes
[0.0039] super,(SuperExpr0)^(MethodCallExpr)_(NameExpr2),context
[0.0031] void,(VoidType0)^(MethodDeclaration)_(Parameter)_(ClassOrInterfaceType1),facescontext
[0.0030] facescontext,(ClassOrInterfaceType1)^(Parameter)^(MethodDeclaration)_(BlockStmt)_(IfStmt)_(ExpressionStmt)_(MethodCallExpr0)_(NameExpr0),log
[0.0026] processdecodes,(StringLiteralExpr0)^(BinaryExpr:plus2)^(MethodCallExpr)^(ExpressionStmt)^(IfStmt)^(BlockStmt)_(ExpressionStmt)_(MethodCallExpr0)_(SuperExpr0),super
[0.0025] facescontext,(ClassOrInterfaceType1)^(Parameter)^(MethodDeclaration)_(BlockStmt)_(ExpressionStmt)_(MethodCallExpr0)_(NameExpr2),context
[0.0023] METHOD_NAME,(NameExpr1)^(MethodDeclaration)_(Parameter)_(ClassOrInterfaceType1),facescontext
[0.0017] facescontext,(ClassOrInterfaceType1)^(Parameter)^(MethodDeclaration)_(BlockStmt)_(IfStmt)_(ExpressionStmt)_(MethodCallExpr0)_(NameExpr3),debug
[0.0015] facescontext,(ClassOrInterfaceType1)^(Parameter)^(MethodDeclaration)_(BlockStmt)_(IfStmt)_(MethodCallExpr0)_(NameExpr2),isdebugenabled
[0.0012] void,(VoidType0)^(MethodDeclaration)_(NameExpr1),METHOD_NAME
[0.0012] context,(VariableDeclaratorId0)^(Parameter)_(ClassOrInterfaceType1),facescontext
[0.0011] void,(VoidType0)^(MethodDeclaration)_(Parameter)_(VariableDeclaratorId0),context
[0.0010] METHOD_NAME,(NameExpr1)^(MethodDeclaration)_(BlockStmt)_(ExpressionStmt)_(MethodCallExpr0)_(NameExpr2),context
[0.0010] facescontext,(ClassOrInterfaceType1)^(Parameter)^(MethodDeclaration)_(BlockStmt)_(IfStmt)_(MethodCallExpr0)_(NameExpr0),log
[0.0006] METHOD_NAME,(NameExpr1)^(MethodDeclaration)_(BlockStmt)_(IfStmt)_(ExpressionStmt)_(MethodCallExpr0)_(BinaryExpr:plus)_(MethodCallExpr1)_(NameExpr1),getbean
[0.0006] context,(VariableDeclaratorId0)^(Parameter)^(MethodDeclaration)_(BlockStmt)_(ExpressionStmt)_(MethodCallExpr0)_(NameExpr2),context
[0.0006] log,(NameExpr0)^(MethodCallExpr)^(ExpressionStmt)^(IfStmt)^(BlockStmt)_(ExpressionStmt)_(MethodCallExpr0)_(NameExpr3),processdecodes
[0.0005] processdecodes,(StringLiteralExpr0)^(BinaryExpr:plus2)_(MethodCallExpr1)_(NameExpr1),getbean
[0.0004] debug,(NameExpr3)^(MethodCallExpr)^(ExpressionStmt)^(IfStmt)^(BlockStmt)_(ExpressionStmt)_(MethodCallExpr0)_(NameExpr3),processdecodes
[0.0004] facescontext,(ClassOrInterfaceType1)^(Parameter)^(MethodDeclaration)_(BlockStmt)_(ExpressionStmt)_(MethodCallExpr0)_(SuperExpr0),super
[0.0004] METHOD_NAME,(NameExpr1)^(MethodDeclaration)_(BlockStmt)_(ExpressionStmt)_(MethodCallExpr0)_(SuperExpr0),super
[0.0004] context,(VariableDeclaratorId0)^(Parameter)^(MethodDeclaration)_(BlockStmt)_(IfStmt)_(ExpressionStmt)_(MethodCallExpr0)_(NameExpr0),log
[0.0002] context,(VariableDeclaratorId0)^(Parameter)^(MethodDeclaration)_(BlockStmt)_(IfStmt)_(MethodCallExpr0)_(NameExpr2),isdebugenabled
[0.0002] METHOD_NAME,(NameExpr1)^(MethodDeclaration)_(BlockStmt)_(IfStmt)_(ExpressionStmt)_(MethodCallExpr0)_(NameExpr0),log
[0.0002] getbean,(NameExpr1)^(MethodCallExpr)^(BinaryExpr:plus2)^(MethodCallExpr)_(NameExpr3),debug
[0.0002] context,(VariableDeclaratorId0)^(Parameter)^(MethodDeclaration)_(BlockStmt)_(IfStmt)_(MethodCallExpr0)_(NameExpr0),log
[0.0002] METHOD_NAME,(NameExpr1)^(MethodDeclaration)_(BlockStmt)_(IfStmt)_(MethodCallExpr0)_(NameExpr0),log
[0.0002] isdebugenabled,(NameExpr2)^(MethodCallExpr)^(IfStmt)_(ExpressionStmt)_(MethodCallExpr0)_(BinaryExpr:plus)_(MethodCallExpr1)_(NameExpr1),getbean
[0.0001] log,(NameExpr0)^(MethodCallExpr)^(IfStmt)^(BlockStmt)_(ExpressionStmt)_(MethodCallExpr0)_(NameExpr2),context
[0.0001] log,(NameExpr0)^(MethodCallExpr)_(BinaryExpr:plus)_(MethodCallExpr1)_(NameExpr1),getbean
[0.0001] context,(VariableDeclaratorId0)^(Parameter)^(MethodDeclaration)_(BlockStmt)_(IfStmt)_(ExpressionStmt)_(MethodCallExpr0)_(NameExpr3),debug
[0.0001] log,(NameExpr0)^(MethodCallExpr)^(IfStmt)_(ExpressionStmt)_(MethodCallExpr0)_(BinaryExpr:plus)_(MethodCallExpr1)_(NameExpr1),getbean
[0.0001] isdebugenabled,(NameExpr2)^(MethodCallExpr)^(IfStmt)^(BlockStmt)_(ExpressionStmt)_(MethodCallExpr0)_(NameExpr2),context
[0.0001] METHOD_NAME,(NameExpr1)^(MethodDeclaration)_(BlockStmt)_(IfStmt)_(ExpressionStmt)_(MethodCallExpr0)_(NameExpr3),debug
[0.0001] METHOD_NAME,(NameExpr1)^(MethodDeclaration)_(BlockStmt)_(IfStmt)_(MethodCallExpr0)_(NameExpr2),isdebugenabled
[0.0001] log,(NameExpr0)^(MethodCallExpr)_(NameExpr2),isdebugenabled
[0.0000] log,(NameExpr0)^(MethodCallExpr)^(IfStmt)_(ExpressionStmt)_(MethodCallExpr0)_(NameExpr3),debug
[0.0000] processdecodes,(StringLiteralExpr0)^(BinaryExpr:plus2)^(MethodCallExpr)_(NameExpr3),debug
[0.0000] isdebugenabled,(NameExpr2)^(MethodCallExpr)^(IfStmt)_(ExpressionStmt)_(MethodCallExpr0)_(NameExpr3),debug
[0.0000] debug,(NameExpr3)^(MethodCallExpr)^(ExpressionStmt)^(IfStmt)^(BlockStmt)_(ExpressionStmt)_(MethodCallExpr0)_(NameExpr2),context
[0.0000] METHOD_NAME,(NameExpr1)^(MethodDeclaration)_(Parameter)_(VariableDeclaratorId0),context
[0.0000] log,(NameExpr0)^(MethodCallExpr)^(ExpressionStmt)^(IfStmt)^(BlockStmt)_(ExpressionStmt)_(MethodCallExpr0)_(NameExpr2),context
[0.0000] log,(NameExpr0)^(MethodCallExpr)^(IfStmt)_(ExpressionStmt)_(MethodCallExpr0)_(NameExpr0),log
[0.0000] debug,(NameExpr3)^(MethodCallExpr)^(ExpressionStmt)^(IfStmt)^(BlockStmt)_(ExpressionStmt)_(MethodCallExpr0)_(SuperExpr0),super
[0.0000] isdebugenabled,(NameExpr2)^(MethodCallExpr)^(IfStmt)_(ExpressionStmt)_(MethodCallExpr0)_(NameExpr0),log
[0.0000] isdebugenabled,(NameExpr2)^(MethodCallExpr)^(IfStmt)^(BlockStmt)_(ExpressionStmt)_(MethodCallExpr0)_(SuperExpr0),super
[0.0000] log,(NameExpr0)^(MethodCallExpr)^(ExpressionStmt)^(IfStmt)^(BlockStmt)_(ExpressionStmt)_(MethodCallExpr0)_(SuperExpr0),super
[0.0000] log,(NameExpr0)^(MethodCallExpr)^(IfStmt)^(BlockStmt)_(ExpressionStmt)_(MethodCallExpr0)_(SuperExpr0),super
[0.0000] context,(VariableDeclaratorId0)^(Parameter)^(MethodDeclaration)_(BlockStmt)_(ExpressionStmt)_(MethodCallExpr0)_(SuperExpr0),super

topk terminals:
[['facescontext', 'processdecodes'], ['facescontext', 'processdecodes'], ['METHOD_NAME', 'processdecodes'], ['context', 'processdecodes'], ['context', 'processdecodes'], ['context', 'processdecodes'], ['processdecodes', 'processdecodes'], ['METHOD_NAME', 'processdecodes'], ['log', 'processdecodes'], ['isdebugenabled', 'processdecodes'], ['log', 'processdecodes'], ['isdebugenabled', 'processdecodes'], ['processdecodes', 'context'], ['log', 'processdecodes'], ['super', 'context'], ['void', 'facescontext'], ['facescontext', 'log'], ['processdecodes', 'super'], ['facescontext', 'context'], ['METHOD_NAME', 'facescontext'], ['facescontext', 'debug'], ['facescontext', 'isdebugenabled'], ['void', 'METHOD_NAME'], ['context', 'facescontext'], ['void', 'context'], ['METHOD_NAME', 'context'], ['facescontext', 'log'], ['METHOD_NAME', 'getbean'], ['context', 'context'], ['log', 'processdecodes'], ['processdecodes', 'getbean'], ['debug', 'processdecodes'], ['facescontext', 'super'], ['METHOD_NAME', 'super'], ['context', 'log'], ['context', 'isdebugenabled'], ['METHOD_NAME', 'log'], ['getbean', 'debug'], ['context', 'log'], ['METHOD_NAME', 'log'], ['isdebugenabled', 'getbean'], ['log', 'context'], ['log', 'getbean'], ['context', 'debug'], ['log', 'getbean'], ['isdebugenabled', 'context'], ['METHOD_NAME', 'debug'], ['METHOD_NAME', 'isdebugenabled'], ['log', 'isdebugenabled'], ['log', 'debug'], ['processdecodes', 'debug'], ['isdebugenabled', 'debug'], ['debug', 'context'], ['METHOD_NAME', 'context'], ['log', 'context'], ['log', 'log'], ['debug', 'super'], ['isdebugenabled', 'log'], ['isdebugenabled', 'super'], ['log', 'super'], ['log', 'super'], ['context', 'super']]

