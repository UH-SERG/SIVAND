
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/codefollower__Tomcat-Research/java/org/apache/jasper/compiler/SmapUtil_visit.java
method_name = visit
method_body = @Override public void visit(Node.TemplateText n) throws JasperException { Mark mark = n.getStart(); if (mark == null) { return; } String fileName = mark.getFile(); smap.addFile(unqualify(fileName), fileName); int iInputStartLine = mark.getLineNumber(); int iOutputStartLine = n.getBeginJavaLine(); int iOutputLineIncrement = breakAtLF ? 1 : 0; smap.addLineData(iInputStartLine, fileName, 1, iOutputStartLine, iOutputLineIncrement); java.util.ArrayList<Integer> extraSmap = n.getExtraSmap(); if (extraSmap != null) { for (int i = 0; i < extraSmap.size(); i++) { iOutputStartLine += iOutputLineIncrement; smap.addLineData(iInputStartLine + extraSmap.get(i).intValue(), fileName, 1, iOutputStartLine, iOutputLineIncrement); } } }

topk path-contexts:
[0.1394] n,(NameExpr0)^(MethodCallExpr)^(VariableDeclarator)^(VariableDeclarationExpr)^(ExpressionStmt)^(BlockStmt)_(ExpressionStmt)_(VariableDeclarationExpr)_(ClassOrInterfaceType0),string
[0.1344] jasperexception,(ClassOrInterfaceType4)^(MethodDeclaration)_(BlockStmt)_(ExpressionStmt)_(VariableDeclarationExpr)_(PrimitiveType0),int
[0.0893] jasperexception,(ClassOrInterfaceType4)^(MethodDeclaration)_(BlockStmt)_(IfStmt)_(BlockStmt)_(ForStmt)_(VariableDeclarationExpr)_(PrimitiveType0),int
[0.0747] jasperexception,(ClassOrInterfaceType4)^(MethodDeclaration)_(BlockStmt)_(ExpressionStmt)_(VariableDeclarationExpr)_(VariableDeclarator)_(MethodCallExpr1)_(NameExpr0),mark
[0.0655] null,(NullLiteralExpr1)^(BinaryExpr:equals)^(IfStmt)^(BlockStmt)_(ExpressionStmt)_(MethodCallExpr0)_(NameExpr4),addfile
[0.0575] jasperexception,(ClassOrInterfaceType4)^(MethodDeclaration)_(BlockStmt)_(IfStmt)_(BinaryExpr:equals)_(NameExpr0),mark
[0.0384] node,(ClassOrInterfaceType0)^(ClassOrInterfaceType)^(Parameter)^(MethodDeclaration)_(BlockStmt)_(ExpressionStmt)_(VariableDeclarationExpr)_(PrimitiveType0),int
[0.0369] mark,(NameExpr0)^(MethodCallExpr)_(NameExpr2),getfile
[0.0321] n,(VariableDeclaratorId0)^(Parameter)^(MethodDeclaration)_(BlockStmt)_(ExpressionStmt)_(VariableDeclarationExpr)_(VariableDeclarator)_(ConditionalExpr)_(NameExpr0),breakatlf
[0.0291] mark,(ClassOrInterfaceType0)^(VariableDeclarationExpr)_(VariableDeclarator)_(MethodCallExpr1)_(NameExpr0),n
[0.0205] filename,(VariableDeclaratorId0)^(VariableDeclarator)^(VariableDeclarationExpr)^(ExpressionStmt)^(BlockStmt)_(ExpressionStmt)_(MethodCallExpr0)_(MethodCallExpr2)_(NameExpr2),unqualify
[0.0187] n,(VariableDeclaratorId0)^(Parameter)^(MethodDeclaration)_(BlockStmt)_(IfStmt)_(BlockStmt)_(ForStmt)_(BinaryExpr:less)_(NameExpr0),i
[0.0152] jasperexception,(ClassOrInterfaceType4)^(MethodDeclaration)_(BlockStmt)_(ExpressionStmt)_(VariableDeclarationExpr)_(VariableDeclarator)_(MethodCallExpr1)_(NameExpr2),getextrasmap
[0.0143] mark,(VariableDeclaratorId0)^(VariableDeclarator)^(VariableDeclarationExpr)^(ExpressionStmt)^(BlockStmt)_(IfStmt)_(BinaryExpr:equals)_(NameExpr0),mark
[0.0142] node,(ClassOrInterfaceType0)^(ClassOrInterfaceType)^(Parameter)^(MethodDeclaration)_(BlockStmt)_(ExpressionStmt)_(MethodCallExpr0)_(MethodCallExpr2)_(NameExpr2),unqualify
[0.0140] n,(VariableDeclaratorId0)^(Parameter)^(MethodDeclaration)_(BlockStmt)_(ExpressionStmt)_(VariableDeclarationExpr)_(VariableDeclarator)_(MethodCallExpr1)_(NameExpr2),getbeginjavaline
[0.0137] null,(NullLiteralExpr1)^(BinaryExpr:equals)^(IfStmt)^(BlockStmt)_(ExpressionStmt)_(VariableDeclarationExpr)_(VariableDeclarator)_(VariableDeclaratorId0),filename
[0.0106] n,(VariableDeclaratorId0)^(Parameter)^(MethodDeclaration)_(BlockStmt)_(IfStmt)_(BlockStmt)_(ForStmt)_(VariableDeclarationExpr)_(PrimitiveType0),int
[0.0105] n,(VariableDeclaratorId0)^(Parameter)^(MethodDeclaration)_(BlockStmt)_(ExpressionStmt)_(MethodCallExpr0)_(NameExpr4),addfile
[0.0103] node,(ClassOrInterfaceType0)^(ClassOrInterfaceType)^(Parameter)^(MethodDeclaration)_(BlockStmt)_(IfStmt)_(BinaryExpr:notEquals)_(NullLiteralExpr1),null
[0.0097] n,(VariableDeclaratorId0)^(Parameter)^(MethodDeclaration)_(BlockStmt)_(ExpressionStmt)_(VariableDeclarationExpr)_(VariableDeclarator)_(MethodCallExpr1)_(NameExpr2),getstart
[0.0093] node,(ClassOrInterfaceType0)^(ClassOrInterfaceType)^(Parameter)^(MethodDeclaration)_(BlockStmt)_(ExpressionStmt)_(MethodCallExpr0)_(NameExpr7),addlinedata
[0.0086] n,(VariableDeclaratorId0)^(Parameter)^(MethodDeclaration)_(BlockStmt)_(ExpressionStmt)_(MethodCallExpr0)_(NameExpr3),filename
[0.0083] n,(NameExpr0)^(MethodCallExpr)^(VariableDeclarator)^(VariableDeclarationExpr)^(ExpressionStmt)^(BlockStmt)_(IfStmt)_(BinaryExpr:equals)_(NullLiteralExpr1),null
[0.0080] mark,(ClassOrInterfaceType0)^(VariableDeclarationExpr)^(ExpressionStmt)^(BlockStmt)_(ExpressionStmt)_(VariableDeclarationExpr)_(VariableDeclarator)_(MethodCallExpr1)_(NameExpr2),getfile
[0.0068] n,(VariableDeclaratorId0)^(Parameter)^(MethodDeclaration)_(BlockStmt)_(ExpressionStmt)_(VariableDeclarationExpr)_(ClassOrInterfaceType)_(ClassOrInterfaceType)_(ClassOrInterfaceType0),java
[0.0068] jasperexception,(ClassOrInterfaceType4)^(MethodDeclaration)_(BlockStmt)_(ExpressionStmt)_(VariableDeclarationExpr)_(VariableDeclarator)_(ConditionalExpr)_(IntegerLiteralExpr1),1
[0.0062] jasperexception,(ClassOrInterfaceType4)^(MethodDeclaration)_(BlockStmt)_(ExpressionStmt)_(VariableDeclarationExpr)_(VariableDeclarator)_(MethodCallExpr1)_(NameExpr2),getfile
[0.0050] node,(ClassOrInterfaceType0)^(ClassOrInterfaceType)^(Parameter)^(MethodDeclaration)_(BlockStmt)_(ExpressionStmt)_(VariableDeclarationExpr)_(VariableDeclarator)_(VariableDeclaratorId0),iinputstartline
[0.0047] mark,(ClassOrInterfaceType0)^(VariableDeclarationExpr)^(ExpressionStmt)^(BlockStmt)_(ExpressionStmt)_(VariableDeclarationExpr)_(VariableDeclarator)_(VariableDeclaratorId0),filename
[0.0045] mark,(ClassOrInterfaceType0)^(VariableDeclarationExpr)_(VariableDeclarator)_(MethodCallExpr1)_(NameExpr2),getstart
[0.0045] string,(ClassOrInterfaceType0)^(VariableDeclarationExpr)^(ExpressionStmt)^(BlockStmt)_(ExpressionStmt)_(VariableDeclarationExpr)_(VariableDeclarator)_(VariableDeclaratorId0),iinputstartline
[0.0043] mark,(NameExpr0)^(BinaryExpr:equals)^(IfStmt)^(BlockStmt)_(ExpressionStmt)_(MethodCallExpr0)_(MethodCallExpr2)_(NameExpr2),unqualify
[0.0039] jasperexception,(ClassOrInterfaceType4)^(MethodDeclaration)_(BlockStmt)_(ExpressionStmt)_(VariableDeclarationExpr)_(PrimitiveType0),int
[0.0037] n,(VariableDeclaratorId0)^(Parameter)^(MethodDeclaration)_(BlockStmt)_(ExpressionStmt)_(VariableDeclarationExpr)_(ClassOrInterfaceType)_(PrimitiveType1),int
[0.0031] jasperexception,(ClassOrInterfaceType4)^(MethodDeclaration)_(BlockStmt)_(IfStmt)_(BlockStmt)_(ForStmt)_(BinaryExpr:less)_(NameExpr0),i
[0.0027] node,(ClassOrInterfaceType0)^(ClassOrInterfaceType)^(Parameter)^(MethodDeclaration)_(BlockStmt)_(ExpressionStmt)_(MethodCallExpr0)_(NameExpr2),iinputstartline
[0.0026] null,(NullLiteralExpr1)^(BinaryExpr:equals)^(IfStmt)^(BlockStmt)_(ExpressionStmt)_(VariableDeclarationExpr)_(VariableDeclarator)_(MethodCallExpr1)_(NameExpr2),getfile
[0.0023] filename,(VariableDeclaratorId0)^(VariableDeclarator)^(VariableDeclarationExpr)^(ExpressionStmt)^(BlockStmt)_(ExpressionStmt)_(MethodCallExpr0)_(MethodCallExpr2)_(NameExpr1),filename
[0.0023] node,(ClassOrInterfaceType0)^(ClassOrInterfaceType)^(Parameter)^(MethodDeclaration)_(BlockStmt)_(ExpressionStmt)_(VariableDeclarationExpr)_(PrimitiveType0),int
[0.0022] node,(ClassOrInterfaceType0)^(ClassOrInterfaceType)^(Parameter)^(MethodDeclaration)_(BlockStmt)_(ExpressionStmt)_(MethodCallExpr0)_(NameExpr0),smap
[0.0020] string,(ClassOrInterfaceType0)^(VariableDeclarationExpr)^(ExpressionStmt)^(BlockStmt)_(ExpressionStmt)_(MethodCallExpr0)_(MethodCallExpr2)_(NameExpr2),unqualify
[0.0018] n,(VariableDeclaratorId0)^(Parameter)^(MethodDeclaration)_(BlockStmt)_(IfStmt)_(BlockStmt)_(ForStmt)_(UnaryExpr:posIncrement)_(NameExpr0),i
[0.0018] mark,(NameExpr0)^(BinaryExpr:equals)^(IfStmt)^(BlockStmt)_(ExpressionStmt)_(MethodCallExpr0)_(NameExpr3),filename
[0.0018] node,(ClassOrInterfaceType0)^(ClassOrInterfaceType)^(Parameter)^(MethodDeclaration)_(BlockStmt)_(IfStmt)_(BinaryExpr:notEquals)_(NameExpr0),extrasmap
[0.0017] jasperexception,(ClassOrInterfaceType4)^(MethodDeclaration)_(BlockStmt)_(ExpressionStmt)_(MethodCallExpr0)_(MethodCallExpr2)_(NameExpr1),filename
[0.0017] METHOD_NAME,(NameExpr2)^(MethodDeclaration)_(Parameter)_(ClassOrInterfaceType)_(ClassOrInterfaceType0),node
[0.0017] void,(VoidType1)^(MethodDeclaration)_(Parameter)_(ClassOrInterfaceType)_(ClassOrInterfaceType0),node
[0.0016] void,(VoidType1)^(MethodDeclaration)_(Parameter)_(VariableDeclaratorId0),n
[0.0016] n,(VariableDeclaratorId0)^(Parameter)^(MethodDeclaration)_(BlockStmt)_(ExpressionStmt)_(MethodCallExpr0)_(NameExpr7),addlinedata
[0.0015] n,(VariableDeclaratorId0)^(Parameter)^(MethodDeclaration)_(BlockStmt)_(ExpressionStmt)_(VariableDeclarationExpr)_(VariableDeclarator)_(MethodCallExpr1)_(NameExpr0),n
[0.0015] mark,(NameExpr0)^(BinaryExpr:equals)^(IfStmt)^(BlockStmt)_(ExpressionStmt)_(VariableDeclarationExpr)_(VariableDeclarator)_(MethodCallExpr1)_(NameExpr2),getfile
[0.0015] jasperexception,(ClassOrInterfaceType4)^(MethodDeclaration)_(BlockStmt)_(ExpressionStmt)_(VariableDeclarationExpr)_(VariableDeclarator)_(VariableDeclaratorId0),filename
[0.0014] n,(VariableDeclaratorId0)^(Parameter)^(MethodDeclaration)_(BlockStmt)_(ExpressionStmt)_(VariableDeclarationExpr)_(ClassOrInterfaceType0),string
[0.0014] jasperexception,(ClassOrInterfaceType4)^(MethodDeclaration)_(BlockStmt)_(IfStmt)_(BlockStmt)_(ForStmt)_(BinaryExpr:less)_(MethodCallExpr1)_(NameExpr0),extrasmap
[0.0013] node,(ClassOrInterfaceType0)^(ClassOrInterfaceType)^(Parameter)^(MethodDeclaration)_(BlockStmt)_(ExpressionStmt)_(MethodCallExpr0)_(NameExpr5),ioutputstartline
[0.0013] jasperexception,(ClassOrInterfaceType4)^(MethodDeclaration)_(BlockStmt)_(IfStmt)_(BlockStmt)_(ForStmt)_(BinaryExpr:less)_(MethodCallExpr1)_(NameExpr2),size
[0.0011] mark,(VariableDeclaratorId0)^(VariableDeclarator)^(VariableDeclarationExpr)^(ExpressionStmt)^(BlockStmt)_(IfStmt)_(BinaryExpr:equals)_(NullLiteralExpr1),null
[0.0011] jasperexception,(ClassOrInterfaceType4)^(MethodDeclaration)_(BlockStmt)_(ExpressionStmt)_(MethodCallExpr0)_(NameExpr3),filename
[0.0010] filename,(VariableDeclaratorId0)^(VariableDeclarator)_(MethodCallExpr1)_(NameExpr0),mark
[0.0010] override,(NameExpr0)^(MarkerAnnotationExpr)^(MethodDeclaration)_(VoidType1),void
[0.0010] jasperexception,(ClassOrInterfaceType4)^(MethodDeclaration)_(BlockStmt)_(IfStmt)_(BlockStmt)_(ForStmt)_(VariableDeclarationExpr)_(VariableDeclarator)_(VariableDeclaratorId0),i
[0.0010] null,(NullLiteralExpr1)^(BinaryExpr:equals)^(IfStmt)^(BlockStmt)_(ExpressionStmt)_(MethodCallExpr0)_(MethodCallExpr2)_(NameExpr2),unqualify
[0.0010] mark,(VariableDeclaratorId0)^(VariableDeclarator)^(VariableDeclarationExpr)^(ExpressionStmt)^(BlockStmt)_(ExpressionStmt)_(VariableDeclarationExpr)_(ClassOrInterfaceType0),string
[0.0010] null,(NullLiteralExpr1)^(BinaryExpr:equals)^(IfStmt)^(BlockStmt)_(ExpressionStmt)_(MethodCallExpr0)_(MethodCallExpr2)_(NameExpr1),filename
[0.0009] mark,(NameExpr0)^(BinaryExpr:equals)^(IfStmt)^(BlockStmt)_(ExpressionStmt)_(VariableDeclarationExpr)_(ClassOrInterfaceType0),string
[0.0009] n,(VariableDeclaratorId0)^(Parameter)^(MethodDeclaration)_(BlockStmt)_(ExpressionStmt)_(VariableDeclarationExpr)_(VariableDeclarator)_(VariableDeclaratorId0),extrasmap
[0.0009] n,(VariableDeclaratorId0)^(Parameter)^(MethodDeclaration)_(BlockStmt)_(ExpressionStmt)_(MethodCallExpr0)_(MethodCallExpr2)_(NameExpr1),filename
[0.0008] n,(VariableDeclaratorId0)^(Parameter)^(MethodDeclaration)_(BlockStmt)_(ExpressionStmt)_(VariableDeclarationExpr)_(ClassOrInterfaceType0),mark
[0.0008] node,(ClassOrInterfaceType0)^(ClassOrInterfaceType)^(Parameter)^(MethodDeclaration)_(ClassOrInterfaceType4),jasperexception
[0.0008] n,(VariableDeclaratorId0)^(Parameter)_(ClassOrInterfaceType)_(ClassOrInterfaceType0),node
[0.0008] n,(VariableDeclaratorId0)^(Parameter)^(MethodDeclaration)_(BlockStmt)_(ExpressionStmt)_(MethodCallExpr0)_(IntegerLiteralExpr4),1
[0.0007] filename,(VariableDeclaratorId0)^(VariableDeclarator)^(VariableDeclarationExpr)^(ExpressionStmt)^(BlockStmt)_(ExpressionStmt)_(MethodCallExpr0)_(NameExpr4),addfile
[0.0007] mark,(NameExpr0)^(BinaryExpr:equals)^(IfStmt)^(BlockStmt)_(ExpressionStmt)_(MethodCallExpr0)_(NameExpr0),smap
[0.0006] jasperexception,(ClassOrInterfaceType4)^(MethodDeclaration)_(BlockStmt)_(ExpressionStmt)_(VariableDeclarationExpr)_(VariableDeclarator)_(MethodCallExpr1)_(NameExpr0),n
[0.0006] jasperexception,(ClassOrInterfaceType4)^(MethodDeclaration)_(BlockStmt)_(ExpressionStmt)_(VariableDeclarationExpr)_(VariableDeclarator)_(VariableDeclaratorId0),extrasmap
[0.0006] mark,(ClassOrInterfaceType0)^(VariableDeclarationExpr)^(ExpressionStmt)^(BlockStmt)_(IfStmt)_(BinaryExpr:equals)_(NullLiteralExpr1),null
[0.0005] node,(ClassOrInterfaceType0)^(ClassOrInterfaceType)^(Parameter)^(MethodDeclaration)_(BlockStmt)_(ExpressionStmt)_(MethodCallExpr0)_(NameExpr3),filename
[0.0005] string,(ClassOrInterfaceType0)^(VariableDeclarationExpr)^(ExpressionStmt)^(BlockStmt)_(ExpressionStmt)_(VariableDeclarationExpr)_(VariableDeclarator)_(MethodCallExpr1)_(NameExpr2),getlinenumber
[0.0004] jasperexception,(ClassOrInterfaceType4)^(MethodDeclaration)_(BlockStmt)_(ExpressionStmt)_(VariableDeclarationExpr)_(ClassOrInterfaceType0),mark
[0.0004] filename,(VariableDeclaratorId0)^(VariableDeclarator)_(MethodCallExpr1)_(NameExpr2),getfile
[0.0004] n,(VariableDeclaratorId0)^(Parameter)^(MethodDeclaration)_(BlockStmt)_(ExpressionStmt)_(VariableDeclarationExpr)_(PrimitiveType0),int
[0.0004] jasperexception,(ClassOrInterfaceType4)^(MethodDeclaration)_(BlockStmt)_(IfStmt)_(BlockStmt)_(ForStmt)_(UnaryExpr:posIncrement)_(NameExpr0),i
[0.0004] mark,(VariableDeclaratorId0)^(VariableDeclarator)^(VariableDeclarationExpr)^(ExpressionStmt)^(BlockStmt)_(ExpressionStmt)_(VariableDeclarationExpr)_(VariableDeclarator)_(VariableDeclaratorId0),filename
[0.0004] null,(NullLiteralExpr1)^(BinaryExpr:equals)^(IfStmt)^(BlockStmt)_(ExpressionStmt)_(VariableDeclarationExpr)_(ClassOrInterfaceType0),string
[0.0003] jasperexception,(ClassOrInterfaceType4)^(MethodDeclaration)_(BlockStmt)_(ExpressionStmt)_(VariableDeclarationExpr)_(VariableDeclarator)_(MethodCallExpr1)_(NameExpr2),getlinenumber
[0.0003] mark,(VariableDeclaratorId0)^(VariableDeclarator)_(MethodCallExpr1)_(NameExpr0),n
[0.0003] n,(VariableDeclaratorId0)^(Parameter)^(MethodDeclaration)_(BlockStmt)_(ExpressionStmt)_(VariableDeclarationExpr)_(PrimitiveType0),int
[0.0003] node,(ClassOrInterfaceType0)^(ClassOrInterfaceType)^(Parameter)^(MethodDeclaration)_(BlockStmt)_(ExpressionStmt)_(VariableDeclarationExpr)_(VariableDeclarator)_(VariableDeclaratorId0),filename
[0.0003] n,(VariableDeclaratorId0)^(Parameter)^(MethodDeclaration)_(BlockStmt)_(ExpressionStmt)_(VariableDeclarationExpr)_(VariableDeclarator)_(MethodCallExpr1)_(NameExpr2),getextrasmap
[0.0003] jasperexception,(ClassOrInterfaceType4)^(MethodDeclaration)_(BlockStmt)_(ExpressionStmt)_(VariableDeclarationExpr)_(VariableDeclarator)_(VariableDeclaratorId0),ioutputlineincrement
[0.0002] node,(ClassOrInterfaceType0)^(ClassOrInterfaceType)^(Parameter)^(MethodDeclaration)_(BlockStmt)_(ExpressionStmt)_(MethodCallExpr0)_(IntegerLiteralExpr4),1
[0.0002] n,(VariableDeclaratorId0)^(Parameter)^(MethodDeclaration)_(BlockStmt)_(ExpressionStmt)_(VariableDeclarationExpr)_(VariableDeclarator)_(VariableDeclaratorId0),mark
[0.0002] n,(VariableDeclaratorId0)^(Parameter)^(MethodDeclaration)_(BlockStmt)_(ExpressionStmt)_(VariableDeclarationExpr)_(VariableDeclarator)_(VariableDeclaratorId0),iinputstartline
[0.0002] jasperexception,(ClassOrInterfaceType4)^(MethodDeclaration)_(BlockStmt)_(ExpressionStmt)_(MethodCallExpr0)_(NameExpr0),smap
[0.0002] n,(VariableDeclaratorId0)^(Parameter)^(MethodDeclaration)_(BlockStmt)_(ExpressionStmt)_(VariableDeclarationExpr)_(VariableDeclarator)_(ConditionalExpr)_(IntegerLiteralExpr2),0
[0.0001] node,(ClassOrInterfaceType0)^(ClassOrInterfaceType)^(Parameter)^(MethodDeclaration)_(BlockStmt)_(IfStmt)_(BinaryExpr:equals)_(NullLiteralExpr1),null
[0.0001] mark,(ClassOrInterfaceType0)^(VariableDeclarationExpr)^(ExpressionStmt)^(BlockStmt)_(ExpressionStmt)_(VariableDeclarationExpr)_(ClassOrInterfaceType0),string
[0.0001] node,(ClassOrInterfaceType0)^(ClassOrInterfaceType)^(Parameter)^(MethodDeclaration)_(BlockStmt)_(ExpressionStmt)_(MethodCallExpr0)_(NameExpr0),smap
[0.0001] mark,(ClassOrInterfaceType0)^(VariableDeclarationExpr)^(ExpressionStmt)^(BlockStmt)_(IfStmt)_(BinaryExpr:equals)_(NameExpr0),mark
[0.0001] jasperexception,(ClassOrInterfaceType4)^(MethodDeclaration)_(BlockStmt)_(ExpressionStmt)_(VariableDeclarationExpr)_(VariableDeclarator)_(VariableDeclaratorId0),ioutputstartline
[0.0001] n,(VariableDeclaratorId0)^(Parameter)^(MethodDeclaration)_(BlockStmt)_(ExpressionStmt)_(MethodCallExpr0)_(NameExpr2),iinputstartline
[0.0001] jasperexception,(ClassOrInterfaceType4)^(MethodDeclaration)_(BlockStmt)_(ExpressionStmt)_(MethodCallExpr0)_(NameExpr7),addlinedata
[0.0001] n,(VariableDeclaratorId0)^(Parameter)^(MethodDeclaration)_(BlockStmt)_(ExpressionStmt)_(VariableDeclarationExpr)_(PrimitiveType0),int
[0.0001] jasperexception,(ClassOrInterfaceType4)^(MethodDeclaration)_(BlockStmt)_(ExpressionStmt)_(VariableDeclarationExpr)_(PrimitiveType0),int
[0.0001] null,(NullLiteralExpr1)^(BinaryExpr:equals)^(IfStmt)^(BlockStmt)_(ExpressionStmt)_(MethodCallExpr0)_(NameExpr3),filename
[0.0001] node,(ClassOrInterfaceType0)^(ClassOrInterfaceType)^(Parameter)^(MethodDeclaration)_(BlockStmt)_(ExpressionStmt)_(MethodCallExpr0)_(NameExpr3),filename
[0.0001] n,(VariableDeclaratorId0)^(Parameter)^(MethodDeclaration)_(BlockStmt)_(ExpressionStmt)_(MethodCallExpr0)_(NameExpr3),filename
[0.0000] jasperexception,(ClassOrInterfaceType4)^(MethodDeclaration)_(BlockStmt)_(ExpressionStmt)_(VariableDeclarationExpr)_(ClassOrInterfaceType)_(PrimitiveType1),int
[0.0000] jasperexception,(ClassOrInterfaceType4)^(MethodDeclaration)_(BlockStmt)_(ExpressionStmt)_(VariableDeclarationExpr)_(VariableDeclarator)_(ConditionalExpr)_(NameExpr0),breakatlf
[0.0000] n,(VariableDeclaratorId0)^(Parameter)^(MethodDeclaration)_(BlockStmt)_(ExpressionStmt)_(MethodCallExpr0)_(NameExpr6),ioutputlineincrement
[0.0000] jasperexception,(ClassOrInterfaceType4)^(MethodDeclaration)_(BlockStmt)_(ExpressionStmt)_(MethodCallExpr0)_(NameExpr6),ioutputlineincrement
[0.0000] jasperexception,(ClassOrInterfaceType4)^(MethodDeclaration)_(BlockStmt)_(ExpressionStmt)_(MethodCallExpr0)_(IntegerLiteralExpr4),1
[0.0000] string,(ClassOrInterfaceType0)^(VariableDeclarationExpr)^(ExpressionStmt)^(BlockStmt)_(ExpressionStmt)_(MethodCallExpr0)_(NameExpr4),addfile
[0.0000] n,(VariableDeclaratorId0)^(Parameter)^(MethodDeclaration)_(BlockStmt)_(ExpressionStmt)_(VariableDeclarationExpr)_(VariableDeclarator)_(MethodCallExpr1)_(NameExpr0),mark
[0.0000] jasperexception,(ClassOrInterfaceType4)^(MethodDeclaration)_(BlockStmt)_(IfStmt)_(BlockStmt)_(ForStmt)_(VariableDeclarationExpr)_(VariableDeclarator)_(IntegerLiteralExpr1),0
[0.0000] n,(VariableDeclaratorId0)^(Parameter)^(MethodDeclaration)_(BlockStmt)_(ExpressionStmt)_(VariableDeclarationExpr)_(VariableDeclarator)_(MethodCallExpr1)_(NameExpr0),n
[0.0000] node,(ClassOrInterfaceType0)^(ClassOrInterfaceType)^(Parameter)^(MethodDeclaration)_(BlockStmt)_(ExpressionStmt)_(VariableDeclarationExpr)_(ClassOrInterfaceType0),mark
[0.0000] mark,(VariableDeclaratorId0)^(VariableDeclarator)_(MethodCallExpr1)_(NameExpr2),getstart
[0.0000] n,(VariableDeclaratorId0)^(Parameter)^(MethodDeclaration)_(BlockStmt)_(IfStmt)_(BinaryExpr:notEquals)_(NullLiteralExpr1),null
[0.0000] n,(VariableDeclaratorId0)^(Parameter)^(MethodDeclaration)_(BlockStmt)_(IfStmt)_(BinaryExpr:equals)_(NullLiteralExpr1),null
[0.0000] mark,(NameExpr0)^(BinaryExpr:equals)^(IfStmt)^(BlockStmt)_(ExpressionStmt)_(VariableDeclarationExpr)_(VariableDeclarator)_(VariableDeclaratorId0),filename
[0.0000] string,(ClassOrInterfaceType0)^(VariableDeclarationExpr)^(ExpressionStmt)^(BlockStmt)_(ExpressionStmt)_(MethodCallExpr0)_(NameExpr3),filename
[0.0000] n,(VariableDeclaratorId0)^(Parameter)^(MethodDeclaration)_(BlockStmt)_(ExpressionStmt)_(VariableDeclarationExpr)_(VariableDeclarator)_(ConditionalExpr)_(IntegerLiteralExpr1),1
[0.0000] node,(ClassOrInterfaceType0)^(ClassOrInterfaceType)^(Parameter)^(MethodDeclaration)_(BlockStmt)_(ExpressionStmt)_(VariableDeclarationExpr)_(VariableDeclarator)_(VariableDeclaratorId0),ioutputlineincrement
[0.0000] override,(NameExpr0)^(MarkerAnnotationExpr)^(MethodDeclaration)_(NameExpr2),METHOD_NAME
[0.0000] node,(ClassOrInterfaceType0)^(ClassOrInterfaceType)^(Parameter)^(MethodDeclaration)_(BlockStmt)_(ExpressionStmt)_(MethodCallExpr0)_(NameExpr6),ioutputlineincrement
[0.0000] jasperexception,(ClassOrInterfaceType4)^(MethodDeclaration)_(BlockStmt)_(IfStmt)_(BinaryExpr:equals)_(NullLiteralExpr1),null
[0.0000] n,(NameExpr0)^(MethodCallExpr)_(NameExpr2),getstart
[0.0000] mark,(NameExpr0)^(BinaryExpr:equals)^(IfStmt)^(BlockStmt)_(ExpressionStmt)_(MethodCallExpr0)_(MethodCallExpr2)_(NameExpr1),filename
[0.0000] getstart,(NameExpr2)^(MethodCallExpr)^(VariableDeclarator)^(VariableDeclarationExpr)^(ExpressionStmt)^(BlockStmt)_(IfStmt)_(BinaryExpr:equals)_(NameExpr0),mark
[0.0000] node,(ClassOrInterfaceType0)^(ClassOrInterfaceType)^(Parameter)^(MethodDeclaration)_(BlockStmt)_(ExpressionStmt)_(VariableDeclarationExpr)_(VariableDeclarator)_(VariableDeclaratorId0),ioutputstartline
[0.0000] jasperexception,(ClassOrInterfaceType4)^(MethodDeclaration)_(BlockStmt)_(ExpressionStmt)_(VariableDeclarationExpr)_(VariableDeclarator)_(MethodCallExpr1)_(NameExpr2),getbeginjavaline
[0.0000] mark,(NameExpr0)^(BinaryExpr:equals)^(IfStmt)^(BlockStmt)_(ExpressionStmt)_(MethodCallExpr0)_(NameExpr4),addfile
[0.0000] jasperexception,(ClassOrInterfaceType4)^(MethodDeclaration)_(BlockStmt)_(ExpressionStmt)_(MethodCallExpr0)_(MethodCallExpr2)_(NameExpr2),unqualify
[0.0000] mark,(ClassOrInterfaceType0)^(VariableDeclarationExpr)_(VariableDeclarator)_(VariableDeclaratorId0),mark
[0.0000] n,(VariableDeclaratorId0)^(Parameter)^(MethodDeclaration)_(BlockStmt)_(ExpressionStmt)_(VariableDeclarationExpr)_(VariableDeclarator)_(MethodCallExpr1)_(NameExpr0),n
[0.0000] n,(VariableDeclaratorId0)^(Parameter)^(MethodDeclaration)_(BlockStmt)_(ExpressionStmt)_(MethodCallExpr0)_(NameExpr0),smap
[0.0000] METHOD_NAME,(NameExpr2)^(MethodDeclaration)_(ClassOrInterfaceType4),jasperexception
[0.0000] n,(VariableDeclaratorId0)^(Parameter)^(MethodDeclaration)_(BlockStmt)_(IfStmt)_(BinaryExpr:equals)_(NameExpr0),mark
[0.0000] jasperexception,(ClassOrInterfaceType4)^(MethodDeclaration)_(BlockStmt)_(ExpressionStmt)_(MethodCallExpr0)_(NameExpr0),smap
[0.0000] node,(ClassOrInterfaceType0)^(ClassOrInterfaceType)^(Parameter)^(MethodDeclaration)_(BlockStmt)_(ExpressionStmt)_(VariableDeclarationExpr)_(PrimitiveType0),int
[0.0000] jasperexception,(ClassOrInterfaceType4)^(MethodDeclaration)_(BlockStmt)_(ExpressionStmt)_(VariableDeclarationExpr)_(VariableDeclarator)_(MethodCallExpr1)_(NameExpr0),n
[0.0000] node,(ClassOrInterfaceType0)^(ClassOrInterfaceType)^(Parameter)^(MethodDeclaration)_(BlockStmt)_(ExpressionStmt)_(MethodCallExpr0)_(MethodCallExpr2)_(NameExpr1),filename
[0.0000] mark,(ClassOrInterfaceType0)^(VariableDeclarationExpr)^(ExpressionStmt)^(BlockStmt)_(ExpressionStmt)_(VariableDeclarationExpr)_(VariableDeclarator)_(MethodCallExpr1)_(NameExpr0),mark
[0.0000] METHOD_NAME,(NameExpr2)^(MethodDeclaration)_(Parameter)_(VariableDeclaratorId0),n
[0.0000] n,(VariableDeclaratorId0)^(Parameter)^(MethodDeclaration)_(BlockStmt)_(IfStmt)_(BinaryExpr:notEquals)_(NameExpr0),extrasmap
[0.0000] string,(ClassOrInterfaceType0)^(VariableDeclarationExpr)_(VariableDeclarator)_(MethodCallExpr1)_(NameExpr0),mark
[0.0000] node,(ClassOrInterfaceType0)^(ClassOrInterfaceType)^(Parameter)^(MethodDeclaration)_(BlockStmt)_(ExpressionStmt)_(MethodCallExpr0)_(NameExpr4),addfile
[0.0000] n,(VariableDeclaratorId0)^(Parameter)^(MethodDeclaration)_(BlockStmt)_(ExpressionStmt)_(VariableDeclarationExpr)_(VariableDeclarator)_(MethodCallExpr1)_(NameExpr2),getfile
[0.0000] n,(VariableDeclaratorId0)^(Parameter)^(MethodDeclaration)_(BlockStmt)_(ExpressionStmt)_(VariableDeclarationExpr)_(VariableDeclarator)_(VariableDeclaratorId0),ioutputstartline
[0.0000] string,(ClassOrInterfaceType0)^(VariableDeclarationExpr)^(ExpressionStmt)^(BlockStmt)_(ExpressionStmt)_(MethodCallExpr0)_(MethodCallExpr2)_(NameExpr1),filename
[0.0000] string,(ClassOrInterfaceType0)^(VariableDeclarationExpr)_(VariableDeclarator)_(MethodCallExpr1)_(NameExpr2),getfile
[0.0000] n,(VariableDeclaratorId0)^(Parameter)^(MethodDeclaration)_(BlockStmt)_(ExpressionStmt)_(VariableDeclarationExpr)_(VariableDeclarator)_(MethodCallExpr1)_(NameExpr2),getlinenumber
[0.0000] filename,(VariableDeclaratorId0)^(VariableDeclarator)^(VariableDeclarationExpr)^(ExpressionStmt)^(BlockStmt)_(ExpressionStmt)_(MethodCallExpr0)_(NameExpr3),filename
[0.0000] n,(VariableDeclaratorId0)^(Parameter)^(MethodDeclaration)_(BlockStmt)_(ExpressionStmt)_(MethodCallExpr0)_(NameExpr0),smap
[0.0000] jasperexception,(ClassOrInterfaceType4)^(MethodDeclaration)_(BlockStmt)_(ExpressionStmt)_(VariableDeclarationExpr)_(VariableDeclarator)_(VariableDeclaratorId0),iinputstartline
[0.0000] jasperexception,(ClassOrInterfaceType4)^(MethodDeclaration)_(BlockStmt)_(ExpressionStmt)_(MethodCallExpr0)_(NameExpr5),ioutputstartline
[0.0000] mark,(NameExpr0)^(MethodCallExpr)^(VariableDeclarator)^(VariableDeclarationExpr)^(ExpressionStmt)^(BlockStmt)_(ExpressionStmt)_(VariableDeclarationExpr)_(PrimitiveType0),int
[0.0000] n,(VariableDeclaratorId0)^(Parameter)^(MethodDeclaration)_(BlockStmt)_(ExpressionStmt)_(MethodCallExpr0)_(MethodCallExpr2)_(NameExpr2),unqualify
[0.0000] node,(ClassOrInterfaceType0)^(ClassOrInterfaceType)^(Parameter)^(MethodDeclaration)_(BlockStmt)_(ExpressionStmt)_(VariableDeclarationExpr)_(VariableDeclarator)_(VariableDeclaratorId0),mark
[0.0000] jasperexception,(ClassOrInterfaceType4)^(MethodDeclaration)_(BlockStmt)_(ExpressionStmt)_(MethodCallExpr0)_(NameExpr2),iinputstartline
[0.0000] null,(NullLiteralExpr1)^(BinaryExpr:equals)^(IfStmt)^(BlockStmt)_(ExpressionStmt)_(MethodCallExpr0)_(NameExpr0),smap
[0.0000] string,(ClassOrInterfaceType0)^(VariableDeclarationExpr)^(ExpressionStmt)^(BlockStmt)_(ExpressionStmt)_(VariableDeclarationExpr)_(VariableDeclarator)_(MethodCallExpr1)_(NameExpr0),mark
[0.0000] filename,(VariableDeclaratorId0)^(VariableDeclarator)^(VariableDeclarationExpr)^(ExpressionStmt)^(BlockStmt)_(ExpressionStmt)_(MethodCallExpr0)_(NameExpr0),smap
[0.0000] string,(ClassOrInterfaceType0)^(VariableDeclarationExpr)_(VariableDeclarator)_(VariableDeclaratorId0),filename
[0.0000] n,(VariableDeclaratorId0)^(Parameter)^(MethodDeclaration)_(ClassOrInterfaceType4),jasperexception
[0.0000] node,(ClassOrInterfaceType0)^(ClassOrInterfaceType)^(Parameter)^(MethodDeclaration)_(BlockStmt)_(ExpressionStmt)_(VariableDeclarationExpr)_(VariableDeclarator)_(VariableDeclaratorId0),extrasmap
[0.0000] n,(VariableDeclaratorId0)^(Parameter)^(MethodDeclaration)_(BlockStmt)_(ExpressionStmt)_(VariableDeclarationExpr)_(VariableDeclarator)_(VariableDeclaratorId0),filename
[0.0000] jasperexception,(ClassOrInterfaceType4)^(MethodDeclaration)_(BlockStmt)_(ExpressionStmt)_(VariableDeclarationExpr)_(ClassOrInterfaceType)_(ClassOrInterfaceType)_(ClassOrInterfaceType0),java
[0.0000] string,(ClassOrInterfaceType0)^(VariableDeclarationExpr)^(ExpressionStmt)^(BlockStmt)_(ExpressionStmt)_(MethodCallExpr0)_(NameExpr0),smap
[0.0000] jasperexception,(ClassOrInterfaceType4)^(MethodDeclaration)_(BlockStmt)_(ExpressionStmt)_(VariableDeclarationExpr)_(ClassOrInterfaceType0),string
[0.0000] jasperexception,(ClassOrInterfaceType4)^(MethodDeclaration)_(BlockStmt)_(IfStmt)_(BinaryExpr:notEquals)_(NullLiteralExpr1),null
[0.0000] mark,(NameExpr0)^(MethodCallExpr)^(VariableDeclarator)^(VariableDeclarationExpr)^(ExpressionStmt)^(BlockStmt)_(ExpressionStmt)_(MethodCallExpr0)_(NameExpr4),addfile
[0.0000] node,(ClassOrInterfaceType0)^(ClassOrInterfaceType)^(Parameter)^(MethodDeclaration)_(BlockStmt)_(ExpressionStmt)_(VariableDeclarationExpr)_(ClassOrInterfaceType0),string
[0.0000] jasperexception,(ClassOrInterfaceType4)^(MethodDeclaration)_(BlockStmt)_(ExpressionStmt)_(VariableDeclarationExpr)_(VariableDeclarator)_(MethodCallExpr1)_(NameExpr2),getstart
[0.0000] n,(VariableDeclaratorId0)^(Parameter)^(MethodDeclaration)_(BlockStmt)_(ExpressionStmt)_(VariableDeclarationExpr)_(VariableDeclarator)_(VariableDeclaratorId0),ioutputlineincrement
[0.0000] node,(ClassOrInterfaceType0)^(ClassOrInterfaceType)^(Parameter)^(MethodDeclaration)_(BlockStmt)_(IfStmt)_(BinaryExpr:equals)_(NameExpr0),mark
[0.0000] mark,(NameExpr0)^(MethodCallExpr)^(VariableDeclarator)^(VariableDeclarationExpr)^(ExpressionStmt)^(BlockStmt)_(ExpressionStmt)_(MethodCallExpr0)_(NameExpr3),filename
[0.0000] jasperexception,(ClassOrInterfaceType4)^(MethodDeclaration)_(BlockStmt)_(ExpressionStmt)_(VariableDeclarationExpr)_(VariableDeclarator)_(ConditionalExpr)_(IntegerLiteralExpr2),0
[0.0000] getstart,(NameExpr2)^(MethodCallExpr)^(VariableDeclarator)^(VariableDeclarationExpr)^(ExpressionStmt)^(BlockStmt)_(IfStmt)_(BinaryExpr:equals)_(NullLiteralExpr1),null
[0.0000] filename,(VariableDeclaratorId0)^(VariableDeclarator)^(VariableDeclarationExpr)^(ExpressionStmt)^(BlockStmt)_(ExpressionStmt)_(VariableDeclarationExpr)_(VariableDeclarator)_(VariableDeclaratorId0),iinputstartline
[0.0000] getstart,(NameExpr2)^(MethodCallExpr)^(VariableDeclarator)^(VariableDeclarationExpr)^(ExpressionStmt)^(BlockStmt)_(ExpressionStmt)_(VariableDeclarationExpr)_(ClassOrInterfaceType0),string
[0.0000] mark,(NameExpr0)^(MethodCallExpr)^(VariableDeclarator)^(VariableDeclarationExpr)^(ExpressionStmt)^(BlockStmt)_(ExpressionStmt)_(MethodCallExpr0)_(NameExpr0),smap
[0.0000] jasperexception,(ClassOrInterfaceType4)^(MethodDeclaration)_(BlockStmt)_(ExpressionStmt)_(MethodCallExpr0)_(NameExpr4),addfile
[0.0000] null,(NullLiteralExpr1)^(BinaryExpr:equals)^(IfStmt)^(BlockStmt)_(ExpressionStmt)_(VariableDeclarationExpr)_(VariableDeclarator)_(MethodCallExpr1)_(NameExpr0),mark
[0.0000] n,(VariableDeclaratorId0)^(Parameter)^(MethodDeclaration)_(BlockStmt)_(ExpressionStmt)_(MethodCallExpr0)_(NameExpr5),ioutputstartline
[0.0000] jasperexception,(ClassOrInterfaceType4)^(MethodDeclaration)_(BlockStmt)_(IfStmt)_(BinaryExpr:notEquals)_(NameExpr0),extrasmap
[0.0000] n,(NameExpr0)^(MethodCallExpr)^(VariableDeclarator)^(VariableDeclarationExpr)^(ExpressionStmt)^(BlockStmt)_(IfStmt)_(BinaryExpr:equals)_(NameExpr0),mark
[0.0000] jasperexception,(ClassOrInterfaceType4)^(MethodDeclaration)_(BlockStmt)_(ExpressionStmt)_(VariableDeclarationExpr)_(VariableDeclarator)_(MethodCallExpr1)_(NameExpr0),n
[0.0000] node,(ClassOrInterfaceType0)^(ClassOrInterfaceType)^(Parameter)^(MethodDeclaration)_(BlockStmt)_(ExpressionStmt)_(VariableDeclarationExpr)_(ClassOrInterfaceType)_(PrimitiveType1),int
[0.0000] string,(ClassOrInterfaceType0)^(VariableDeclarationExpr)^(ExpressionStmt)^(BlockStmt)_(ExpressionStmt)_(VariableDeclarationExpr)_(PrimitiveType0),int
[0.0000] void,(VoidType1)^(MethodDeclaration)_(NameExpr2),METHOD_NAME
[0.0000] jasperexception,(ClassOrInterfaceType4)^(MethodDeclaration)_(BlockStmt)_(ExpressionStmt)_(VariableDeclarationExpr)_(VariableDeclarator)_(VariableDeclaratorId0),mark
[0.0000] n,(VariableDeclaratorId0)^(Parameter)^(MethodDeclaration)_(BlockStmt)_(ExpressionStmt)_(VariableDeclarationExpr)_(VariableDeclarator)_(MethodCallExpr1)_(NameExpr0),mark
[0.0000] mark,(NameExpr0)^(BinaryExpr:equals)_(NullLiteralExpr1),null
[0.0000] filename,(VariableDeclaratorId0)^(VariableDeclarator)^(VariableDeclarationExpr)^(ExpressionStmt)^(BlockStmt)_(ExpressionStmt)_(VariableDeclarationExpr)_(PrimitiveType0),int
[0.0000] mark,(NameExpr0)^(BinaryExpr:equals)^(IfStmt)^(BlockStmt)_(ExpressionStmt)_(VariableDeclarationExpr)_(VariableDeclarator)_(MethodCallExpr1)_(NameExpr0),mark
[0.0000] jasperexception,(ClassOrInterfaceType4)^(MethodDeclaration)_(BlockStmt)_(ExpressionStmt)_(VariableDeclarationExpr)_(VariableDeclarator)_(MethodCallExpr1)_(NameExpr0),mark
[0.0000] jasperexception,(ClassOrInterfaceType4)^(MethodDeclaration)_(BlockStmt)_(ExpressionStmt)_(MethodCallExpr0)_(NameExpr3),filename

topk terminals:
[['n', 'string'], ['jasperexception', 'int'], ['jasperexception', 'int'], ['jasperexception', 'mark'], ['null', 'addfile'], ['jasperexception', 'mark'], ['node', 'int'], ['mark', 'getfile'], ['n', 'breakatlf'], ['mark', 'n'], ['filename', 'unqualify'], ['n', 'i'], ['jasperexception', 'getextrasmap'], ['mark', 'mark'], ['node', 'unqualify'], ['n', 'getbeginjavaline'], ['null', 'filename'], ['n', 'int'], ['n', 'addfile'], ['node', 'null'], ['n', 'getstart'], ['node', 'addlinedata'], ['n', 'filename'], ['n', 'null'], ['mark', 'getfile'], ['n', 'java'], ['jasperexception', '1'], ['jasperexception', 'getfile'], ['node', 'iinputstartline'], ['mark', 'filename'], ['mark', 'getstart'], ['string', 'iinputstartline'], ['mark', 'unqualify'], ['jasperexception', 'int'], ['n', 'int'], ['jasperexception', 'i'], ['node', 'iinputstartline'], ['null', 'getfile'], ['filename', 'filename'], ['node', 'int'], ['node', 'smap'], ['string', 'unqualify'], ['n', 'i'], ['mark', 'filename'], ['node', 'extrasmap'], ['jasperexception', 'filename'], ['METHOD_NAME', 'node'], ['void', 'node'], ['void', 'n'], ['n', 'addlinedata'], ['n', 'n'], ['mark', 'getfile'], ['jasperexception', 'filename'], ['n', 'string'], ['jasperexception', 'extrasmap'], ['node', 'ioutputstartline'], ['jasperexception', 'size'], ['mark', 'null'], ['jasperexception', 'filename'], ['filename', 'mark'], ['override', 'void'], ['jasperexception', 'i'], ['null', 'unqualify'], ['mark', 'string'], ['null', 'filename'], ['mark', 'string'], ['n', 'extrasmap'], ['n', 'filename'], ['n', 'mark'], ['node', 'jasperexception'], ['n', 'node'], ['n', '1'], ['filename', 'addfile'], ['mark', 'smap'], ['jasperexception', 'n'], ['jasperexception', 'extrasmap'], ['mark', 'null'], ['node', 'filename'], ['string', 'getlinenumber'], ['jasperexception', 'mark'], ['filename', 'getfile'], ['n', 'int'], ['jasperexception', 'i'], ['mark', 'filename'], ['null', 'string'], ['jasperexception', 'getlinenumber'], ['mark', 'n'], ['n', 'int'], ['node', 'filename'], ['n', 'getextrasmap'], ['jasperexception', 'ioutputlineincrement'], ['node', '1'], ['n', 'mark'], ['n', 'iinputstartline'], ['jasperexception', 'smap'], ['n', '0'], ['node', 'null'], ['mark', 'string'], ['node', 'smap'], ['mark', 'mark'], ['jasperexception', 'ioutputstartline'], ['n', 'iinputstartline'], ['jasperexception', 'addlinedata'], ['n', 'int'], ['jasperexception', 'int'], ['null', 'filename'], ['node', 'filename'], ['n', 'filename'], ['jasperexception', 'int'], ['jasperexception', 'breakatlf'], ['n', 'ioutputlineincrement'], ['jasperexception', 'ioutputlineincrement'], ['jasperexception', '1'], ['string', 'addfile'], ['n', 'mark'], ['jasperexception', '0'], ['n', 'n'], ['node', 'mark'], ['mark', 'getstart'], ['n', 'null'], ['n', 'null'], ['mark', 'filename'], ['string', 'filename'], ['n', '1'], ['node', 'ioutputlineincrement'], ['override', 'METHOD_NAME'], ['node', 'ioutputlineincrement'], ['jasperexception', 'null'], ['n', 'getstart'], ['mark', 'filename'], ['getstart', 'mark'], ['node', 'ioutputstartline'], ['jasperexception', 'getbeginjavaline'], ['mark', 'addfile'], ['jasperexception', 'unqualify'], ['mark', 'mark'], ['n', 'n'], ['n', 'smap'], ['METHOD_NAME', 'jasperexception'], ['n', 'mark'], ['jasperexception', 'smap'], ['node', 'int'], ['jasperexception', 'n'], ['node', 'filename'], ['mark', 'mark'], ['METHOD_NAME', 'n'], ['n', 'extrasmap'], ['string', 'mark'], ['node', 'addfile'], ['n', 'getfile'], ['n', 'ioutputstartline'], ['string', 'filename'], ['string', 'getfile'], ['n', 'getlinenumber'], ['filename', 'filename'], ['n', 'smap'], ['jasperexception', 'iinputstartline'], ['jasperexception', 'ioutputstartline'], ['mark', 'int'], ['n', 'unqualify'], ['node', 'mark'], ['jasperexception', 'iinputstartline'], ['null', 'smap'], ['string', 'mark'], ['filename', 'smap'], ['string', 'filename'], ['n', 'jasperexception'], ['node', 'extrasmap'], ['n', 'filename'], ['jasperexception', 'java'], ['string', 'smap'], ['jasperexception', 'string'], ['jasperexception', 'null'], ['mark', 'addfile'], ['node', 'string'], ['jasperexception', 'getstart'], ['n', 'ioutputlineincrement'], ['node', 'mark'], ['mark', 'filename'], ['jasperexception', '0'], ['getstart', 'null'], ['filename', 'iinputstartline'], ['getstart', 'string'], ['mark', 'smap'], ['jasperexception', 'addfile'], ['null', 'mark'], ['n', 'ioutputstartline'], ['jasperexception', 'extrasmap'], ['n', 'mark'], ['jasperexception', 'n'], ['node', 'int'], ['string', 'int'], ['void', 'METHOD_NAME'], ['jasperexception', 'mark'], ['n', 'mark'], ['mark', 'null'], ['filename', 'int'], ['mark', 'mark'], ['jasperexception', 'mark'], ['jasperexception', 'filename']]

