
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/henryyan__activiti-in-action-codes/chapter14-management/src/main/java/me/kafeitu/activiti/chapter13/Page_setPageNo.java
method_name = setPageNo
method_body = public void setPageNo(final int pageNo) { this.pageNo = pageNo; if (pageNo < 1) { this.pageNo = 1; } }

topk path-contexts:
[0.1590] pageno,(NameExpr1)^(AssignExpr:assign)^(ExpressionStmt)^(BlockStmt)_(IfStmt)_(BinaryExpr:less)_(NameExpr0),pageno
[0.1358] pageno,(VariableDeclaratorId0)^(Parameter)^(MethodDeclaration)_(BlockStmt)_(ExpressionStmt)_(AssignExpr:assign0)_(FieldAccessExpr0)_(NameExpr2),pageno
[0.0856] pageno,(NameExpr2)^(FieldAccessExpr0)^(AssignExpr:assign)_(NameExpr1),pageno
[0.0830] this,(ThisExpr0)^(FieldAccessExpr0)^(AssignExpr:assign)^(ExpressionStmt)^(BlockStmt)_(IfStmt)_(BinaryExpr:less)_(NameExpr0),pageno
[0.0791] pageno,(NameExpr0)^(BinaryExpr:less)^(IfStmt)_(BlockStmt)_(ExpressionStmt)_(AssignExpr:assign0)_(FieldAccessExpr0)_(NameExpr2),pageno
[0.0651] METHOD_NAME,(NameExpr1)^(MethodDeclaration)_(BlockStmt)_(ExpressionStmt)_(AssignExpr:assign0)_(FieldAccessExpr0)_(NameExpr2),pageno
[0.0649] int,(PrimitiveType1)^(Parameter)^(MethodDeclaration)_(BlockStmt)_(ExpressionStmt)_(AssignExpr:assign0)_(FieldAccessExpr0)_(NameExpr2),pageno
[0.0493] pageno,(NameExpr0)^(BinaryExpr:less)^(IfStmt)_(BlockStmt)_(ExpressionStmt)_(AssignExpr:assign0)_(FieldAccessExpr0)_(ThisExpr0),this
[0.0424] pageno,(VariableDeclaratorId0)^(Parameter)^(MethodDeclaration)_(BlockStmt)_(ExpressionStmt)_(AssignExpr:assign0)_(NameExpr1),pageno
[0.0321] 1,(IntegerLiteralExpr1)^(BinaryExpr:less)^(IfStmt)_(BlockStmt)_(ExpressionStmt)_(AssignExpr:assign0)_(FieldAccessExpr0)_(NameExpr2),pageno
[0.0261] METHOD_NAME,(NameExpr1)^(MethodDeclaration)_(BlockStmt)_(IfStmt)_(BlockStmt)_(ExpressionStmt)_(AssignExpr:assign0)_(FieldAccessExpr0)_(NameExpr2),pageno
[0.0229] int,(PrimitiveType1)^(Parameter)^(MethodDeclaration)_(BlockStmt)_(ExpressionStmt)_(AssignExpr:assign0)_(NameExpr1),pageno
[0.0212] METHOD_NAME,(NameExpr1)^(MethodDeclaration)_(BlockStmt)_(ExpressionStmt)_(AssignExpr:assign0)_(NameExpr1),pageno
[0.0180] void,(VoidType0)^(MethodDeclaration)_(Parameter)_(VariableDeclaratorId0),pageno
[0.0170] pageno,(VariableDeclaratorId0)^(Parameter)^(MethodDeclaration)_(BlockStmt)_(IfStmt)_(BinaryExpr:less)_(NameExpr0),pageno
[0.0146] pageno,(NameExpr2)^(FieldAccessExpr0)^(AssignExpr:assign)_(IntegerLiteralExpr1),1
[0.0141] pageno,(NameExpr1)^(AssignExpr:assign)^(ExpressionStmt)^(BlockStmt)_(IfStmt)_(BinaryExpr:less)_(IntegerLiteralExpr1),1
[0.0102] this,(ThisExpr0)^(FieldAccessExpr0)^(AssignExpr:assign)_(NameExpr1),pageno
[0.0096] this,(ThisExpr0)^(FieldAccessExpr0)_(NameExpr2),pageno
[0.0096] this,(ThisExpr0)^(FieldAccessExpr0)_(NameExpr2),pageno
[0.0072] pageno,(NameExpr2)^(FieldAccessExpr0)^(AssignExpr:assign)^(ExpressionStmt)^(BlockStmt)_(IfStmt)_(BinaryExpr:less)_(NameExpr0),pageno
[0.0071] this,(ThisExpr0)^(FieldAccessExpr0)^(AssignExpr:assign)_(IntegerLiteralExpr1),1
[0.0051] int,(PrimitiveType1)^(Parameter)^(MethodDeclaration)_(BlockStmt)_(ExpressionStmt)_(AssignExpr:assign0)_(FieldAccessExpr0)_(ThisExpr0),this
[0.0042] void,(VoidType0)^(MethodDeclaration)_(NameExpr1),METHOD_NAME
[0.0040] pageno,(VariableDeclaratorId0)^(Parameter)^(MethodDeclaration)_(BlockStmt)_(ExpressionStmt)_(AssignExpr:assign0)_(FieldAccessExpr0)_(ThisExpr0),this
[0.0034] pageno,(NameExpr1)^(AssignExpr:assign)^(ExpressionStmt)^(BlockStmt)_(IfStmt)_(BlockStmt)_(ExpressionStmt)_(AssignExpr:assign0)_(IntegerLiteralExpr1),1
[0.0030] pageno,(VariableDeclaratorId0)^(Parameter)_(PrimitiveType1),int
[0.0020] int,(PrimitiveType1)^(Parameter)^(MethodDeclaration)_(BlockStmt)_(IfStmt)_(BinaryExpr:less)_(NameExpr0),pageno
[0.0012] METHOD_NAME,(NameExpr1)^(MethodDeclaration)_(BlockStmt)_(ExpressionStmt)_(AssignExpr:assign0)_(FieldAccessExpr0)_(ThisExpr0),this
[0.0008] void,(VoidType0)^(MethodDeclaration)_(Parameter)_(PrimitiveType1),int
[0.0004] pageno,(VariableDeclaratorId0)^(Parameter)^(MethodDeclaration)_(BlockStmt)_(IfStmt)_(BlockStmt)_(ExpressionStmt)_(AssignExpr:assign0)_(IntegerLiteralExpr1),1
[0.0003] pageno,(NameExpr2)^(FieldAccessExpr0)^(AssignExpr:assign)^(ExpressionStmt)^(BlockStmt)_(IfStmt)_(BinaryExpr:less)_(IntegerLiteralExpr1),1
[0.0003] METHOD_NAME,(NameExpr1)^(MethodDeclaration)_(BlockStmt)_(IfStmt)_(BinaryExpr:less)_(NameExpr0),pageno
[0.0003] int,(PrimitiveType1)^(Parameter)^(MethodDeclaration)_(BlockStmt)_(IfStmt)_(BlockStmt)_(ExpressionStmt)_(AssignExpr:assign0)_(IntegerLiteralExpr1),1
[0.0002] METHOD_NAME,(NameExpr1)^(MethodDeclaration)_(Parameter)_(VariableDeclaratorId0),pageno
[0.0002] METHOD_NAME,(NameExpr1)^(MethodDeclaration)_(BlockStmt)_(IfStmt)_(BlockStmt)_(ExpressionStmt)_(AssignExpr:assign0)_(IntegerLiteralExpr1),1
[0.0001] this,(ThisExpr0)^(FieldAccessExpr0)^(AssignExpr:assign)^(ExpressionStmt)^(BlockStmt)_(IfStmt)_(BinaryExpr:less)_(IntegerLiteralExpr1),1
[0.0001] pageno,(VariableDeclaratorId0)^(Parameter)^(MethodDeclaration)_(BlockStmt)_(IfStmt)_(BinaryExpr:less)_(IntegerLiteralExpr1),1
[0.0001] int,(PrimitiveType1)^(Parameter)^(MethodDeclaration)_(BlockStmt)_(IfStmt)_(BinaryExpr:less)_(IntegerLiteralExpr1),1
[0.0001] pageno,(NameExpr0)^(BinaryExpr:less)^(IfStmt)_(BlockStmt)_(ExpressionStmt)_(AssignExpr:assign0)_(IntegerLiteralExpr1),1
[0.0000] METHOD_NAME,(NameExpr1)^(MethodDeclaration)_(BlockStmt)_(IfStmt)_(BinaryExpr:less)_(IntegerLiteralExpr1),1
[0.0000] 1,(IntegerLiteralExpr1)^(BinaryExpr:less)^(IfStmt)_(BlockStmt)_(ExpressionStmt)_(AssignExpr:assign0)_(FieldAccessExpr0)_(ThisExpr0),this
[0.0000] METHOD_NAME,(NameExpr1)^(MethodDeclaration)_(Parameter)_(PrimitiveType1),int
[0.0000] 1,(IntegerLiteralExpr1)^(BinaryExpr:less)^(IfStmt)_(BlockStmt)_(ExpressionStmt)_(AssignExpr:assign0)_(IntegerLiteralExpr1),1
[0.0000] pageno,(NameExpr0)^(BinaryExpr:less)_(IntegerLiteralExpr1),1
[0.0000] METHOD_NAME,(NameExpr1)^(MethodDeclaration)_(BlockStmt)_(IfStmt)_(BlockStmt)_(ExpressionStmt)_(AssignExpr:assign0)_(FieldAccessExpr0)_(ThisExpr0),this

topk terminals:
[['pageno', 'pageno'], ['pageno', 'pageno'], ['pageno', 'pageno'], ['this', 'pageno'], ['pageno', 'pageno'], ['METHOD_NAME', 'pageno'], ['int', 'pageno'], ['pageno', 'this'], ['pageno', 'pageno'], ['1', 'pageno'], ['METHOD_NAME', 'pageno'], ['int', 'pageno'], ['METHOD_NAME', 'pageno'], ['void', 'pageno'], ['pageno', 'pageno'], ['pageno', '1'], ['pageno', '1'], ['this', 'pageno'], ['this', 'pageno'], ['this', 'pageno'], ['pageno', 'pageno'], ['this', '1'], ['int', 'this'], ['void', 'METHOD_NAME'], ['pageno', 'this'], ['pageno', '1'], ['pageno', 'int'], ['int', 'pageno'], ['METHOD_NAME', 'this'], ['void', 'int'], ['pageno', '1'], ['pageno', '1'], ['METHOD_NAME', 'pageno'], ['int', '1'], ['METHOD_NAME', 'pageno'], ['METHOD_NAME', '1'], ['this', '1'], ['pageno', '1'], ['int', '1'], ['pageno', '1'], ['METHOD_NAME', '1'], ['1', 'this'], ['METHOD_NAME', 'int'], ['1', '1'], ['pageno', '1'], ['METHOD_NAME', 'this']]

