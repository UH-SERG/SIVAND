
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/wotomas__VoiceRipple/ripplelibrary/src/main/java/info/kimjihyok/ripplelibrary/renderer/TimerCircleRippleRenderer_setStrokeWidth.java
method_name = setStrokeWidth
method_body = public void setStrokeWidth(int strokeWidth) { if (strokeWidth % 2 != 0) { throw new IllegalArgumentException("Stroke Width should be an even number!"); } this.strokeWidth = strokeWidth; timerPaint.setStrokeWidth(strokeWidth); }

topk path-contexts:
[0.0659] METHOD_NAME,(NameExpr1)^(MethodDeclaration)_(BlockStmt)_(IfStmt)_(BinaryExpr:notEquals)_(BinaryExpr:remainder)_(NameExpr0),strokewidth
[0.0613] 0,(IntegerLiteralExpr1)^(BinaryExpr:notEquals)^(IfStmt)^(BlockStmt)_(ExpressionStmt)_(AssignExpr:assign0)_(NameExpr1),strokewidth
[0.0589] strokewidth,(NameExpr0)^(BinaryExpr:remainder)^(BinaryExpr:notEquals)^(IfStmt)^(BlockStmt)_(ExpressionStmt)_(MethodCallExpr0)_(NameExpr0),timerpaint
[0.0513] 0,(IntegerLiteralExpr1)^(BinaryExpr:notEquals)^(IfStmt)^(BlockStmt)_(ExpressionStmt)_(AssignExpr:assign0)_(FieldAccessExpr0)_(NameExpr2),strokewidth
[0.0461] strokewidth,(NameExpr2)^(FieldAccessExpr0)^(AssignExpr:assign)^(ExpressionStmt)^(BlockStmt)_(ExpressionStmt)_(MethodCallExpr0)_(NameExpr2),strokewidth
[0.0430] int,(PrimitiveType1)^(Parameter)^(MethodDeclaration)_(BlockStmt)_(ExpressionStmt)_(AssignExpr:assign0)_(FieldAccessExpr0)_(NameExpr2),strokewidth
[0.0412] strokewidth,(VariableDeclaratorId0)^(Parameter)^(MethodDeclaration)_(BlockStmt)_(ExpressionStmt)_(MethodCallExpr0)_(NameExpr3),setstrokewidth
[0.0411] strokewidth,(NameExpr1)^(AssignExpr:assign)^(ExpressionStmt)^(BlockStmt)_(ExpressionStmt)_(MethodCallExpr0)_(NameExpr2),strokewidth
[0.0407] METHOD_NAME,(NameExpr1)^(MethodDeclaration)_(BlockStmt)_(ExpressionStmt)_(AssignExpr:assign0)_(FieldAccessExpr0)_(NameExpr2),strokewidth
[0.0338] strokewidth,(VariableDeclaratorId0)^(Parameter)^(MethodDeclaration)_(BlockStmt)_(ExpressionStmt)_(AssignExpr:assign0)_(FieldAccessExpr0)_(NameExpr2),strokewidth
[0.0284] strokewidth,(NameExpr2)^(FieldAccessExpr0)^(AssignExpr:assign)_(NameExpr1),strokewidth
[0.0253] strokewidthshouldbeanevennumber,(StringLiteralExpr1)^(ObjectCreationExpr)^(ThrowStmt)^(BlockStmt)^(IfStmt)^(BlockStmt)_(ExpressionStmt)_(AssignExpr:assign0)_(NameExpr1),strokewidth
[0.0252] strokewidth,(VariableDeclaratorId0)^(Parameter)^(MethodDeclaration)_(BlockStmt)_(ExpressionStmt)_(MethodCallExpr0)_(NameExpr2),strokewidth
[0.0245] strokewidth,(VariableDeclaratorId0)^(Parameter)^(MethodDeclaration)_(BlockStmt)_(IfStmt)_(BinaryExpr:notEquals)_(BinaryExpr:remainder)_(NameExpr0),strokewidth
[0.0223] strokewidth,(NameExpr1)^(AssignExpr:assign)^(ExpressionStmt)^(BlockStmt)_(ExpressionStmt)_(MethodCallExpr0)_(NameExpr3),setstrokewidth
[0.0209] int,(PrimitiveType1)^(Parameter)^(MethodDeclaration)_(BlockStmt)_(ExpressionStmt)_(AssignExpr:assign0)_(NameExpr1),strokewidth
[0.0207] this,(ThisExpr0)^(FieldAccessExpr0)^(AssignExpr:assign)_(NameExpr1),strokewidth
[0.0195] strokewidth,(NameExpr2)^(FieldAccessExpr0)^(AssignExpr:assign)^(ExpressionStmt)^(BlockStmt)_(ExpressionStmt)_(MethodCallExpr0)_(NameExpr3),setstrokewidth
[0.0192] strokewidth,(NameExpr2)^(MethodCallExpr)_(NameExpr3),setstrokewidth
[0.0176] strokewidth,(NameExpr1)^(AssignExpr:assign)^(ExpressionStmt)^(BlockStmt)_(ExpressionStmt)_(MethodCallExpr0)_(NameExpr0),timerpaint
[0.0172] strokewidth,(VariableDeclaratorId0)^(Parameter)^(MethodDeclaration)_(BlockStmt)_(ExpressionStmt)_(AssignExpr:assign0)_(NameExpr1),strokewidth
[0.0161] strokewidth,(NameExpr0)^(BinaryExpr:remainder)^(BinaryExpr:notEquals)^(IfStmt)^(BlockStmt)_(ExpressionStmt)_(MethodCallExpr0)_(NameExpr3),setstrokewidth
[0.0158] void,(VoidType0)^(MethodDeclaration)_(Parameter)_(VariableDeclaratorId0),strokewidth
[0.0143] strokewidthshouldbeanevennumber,(StringLiteralExpr1)^(ObjectCreationExpr)^(ThrowStmt)^(BlockStmt)^(IfStmt)^(BlockStmt)_(ExpressionStmt)_(MethodCallExpr0)_(NameExpr2),strokewidth
[0.0134] METHOD_NAME,(NameExpr1)^(MethodDeclaration)_(BlockStmt)_(ExpressionStmt)_(AssignExpr:assign0)_(NameExpr1),strokewidth
[0.0124] 2,(IntegerLiteralExpr1)^(BinaryExpr:remainder)^(BinaryExpr:notEquals)^(IfStmt)^(BlockStmt)_(ExpressionStmt)_(MethodCallExpr0)_(NameExpr3),setstrokewidth
[0.0124] this,(ThisExpr0)^(FieldAccessExpr0)_(NameExpr2),strokewidth
[0.0115] METHOD_NAME,(NameExpr1)^(MethodDeclaration)_(BlockStmt)_(ExpressionStmt)_(MethodCallExpr0)_(NameExpr2),strokewidth
[0.0103] strokewidth,(VariableDeclaratorId0)^(Parameter)^(MethodDeclaration)_(BlockStmt)_(ExpressionStmt)_(MethodCallExpr0)_(NameExpr0),timerpaint
[0.0096] int,(PrimitiveType1)^(Parameter)^(MethodDeclaration)_(BlockStmt)_(ExpressionStmt)_(MethodCallExpr0)_(NameExpr2),strokewidth
[0.0093] int,(PrimitiveType1)^(Parameter)^(MethodDeclaration)_(BlockStmt)_(ExpressionStmt)_(MethodCallExpr0)_(NameExpr3),setstrokewidth
[0.0086] METHOD_NAME,(NameExpr1)^(MethodDeclaration)_(BlockStmt)_(ExpressionStmt)_(MethodCallExpr0)_(NameExpr3),setstrokewidth
[0.0084] strokewidthshouldbeanevennumber,(StringLiteralExpr1)^(ObjectCreationExpr)^(ThrowStmt)^(BlockStmt)^(IfStmt)^(BlockStmt)_(ExpressionStmt)_(MethodCallExpr0)_(NameExpr3),setstrokewidth
[0.0076] strokewidth,(NameExpr0)^(BinaryExpr:remainder)_(IntegerLiteralExpr1),2
[0.0073] 2,(IntegerLiteralExpr1)^(BinaryExpr:remainder)^(BinaryExpr:notEquals)^(IfStmt)^(BlockStmt)_(ExpressionStmt)_(MethodCallExpr0)_(NameExpr2),strokewidth
[0.0069] timerpaint,(NameExpr0)^(MethodCallExpr)_(NameExpr2),strokewidth
[0.0068] strokewidth,(NameExpr2)^(FieldAccessExpr0)^(AssignExpr:assign)^(ExpressionStmt)^(BlockStmt)_(ExpressionStmt)_(MethodCallExpr0)_(NameExpr0),timerpaint
[0.0068] strokewidth,(VariableDeclaratorId0)^(Parameter)^(MethodDeclaration)_(BlockStmt)_(ExpressionStmt)_(AssignExpr:assign0)_(FieldAccessExpr0)_(ThisExpr0),this
[0.0058] METHOD_NAME,(NameExpr1)^(MethodDeclaration)_(BlockStmt)_(ExpressionStmt)_(MethodCallExpr0)_(NameExpr0),timerpaint
[0.0049] strokewidth,(NameExpr0)^(BinaryExpr:remainder)^(BinaryExpr:notEquals)^(IfStmt)^(BlockStmt)_(ExpressionStmt)_(AssignExpr:assign0)_(FieldAccessExpr0)_(NameExpr2),strokewidth
[0.0049] strokewidth,(NameExpr0)^(BinaryExpr:remainder)^(BinaryExpr:notEquals)^(IfStmt)^(BlockStmt)_(ExpressionStmt)_(AssignExpr:assign0)_(NameExpr1),strokewidth
[0.0049] strokewidth,(NameExpr0)^(BinaryExpr:remainder)^(BinaryExpr:notEquals)^(IfStmt)^(BlockStmt)_(ExpressionStmt)_(MethodCallExpr0)_(NameExpr2),strokewidth
[0.0049] int,(PrimitiveType1)^(Parameter)^(MethodDeclaration)_(BlockStmt)_(ExpressionStmt)_(MethodCallExpr0)_(NameExpr0),timerpaint
[0.0049] strokewidth,(NameExpr0)^(BinaryExpr:remainder)^(BinaryExpr:notEquals)^(IfStmt)_(BlockStmt)_(ThrowStmt)_(ObjectCreationExpr)_(ClassOrInterfaceType0),illegalargumentexception
[0.0044] int,(PrimitiveType1)^(Parameter)^(MethodDeclaration)_(BlockStmt)_(IfStmt)_(BinaryExpr:notEquals)_(BinaryExpr:remainder)_(IntegerLiteralExpr1),2
[0.0044] illegalargumentexception,(ClassOrInterfaceType0)^(ObjectCreationExpr)^(ThrowStmt)^(BlockStmt)^(IfStmt)^(BlockStmt)_(ExpressionStmt)_(MethodCallExpr0)_(NameExpr3),setstrokewidth
[0.0043] strokewidth,(NameExpr0)^(BinaryExpr:remainder)^(BinaryExpr:notEquals)_(IntegerLiteralExpr1),0
[0.0042] int,(PrimitiveType1)^(Parameter)^(MethodDeclaration)_(BlockStmt)_(ExpressionStmt)_(AssignExpr:assign0)_(FieldAccessExpr0)_(ThisExpr0),this
[0.0038] 2,(IntegerLiteralExpr1)^(BinaryExpr:remainder)^(BinaryExpr:notEquals)^(IfStmt)^(BlockStmt)_(ExpressionStmt)_(MethodCallExpr0)_(NameExpr0),timerpaint
[0.0036] strokewidth,(VariableDeclaratorId0)^(Parameter)^(MethodDeclaration)_(BlockStmt)_(IfStmt)_(BlockStmt)_(ThrowStmt)_(ObjectCreationExpr)_(ClassOrInterfaceType0),illegalargumentexception
[0.0035] void,(VoidType0)^(MethodDeclaration)_(NameExpr1),METHOD_NAME
[0.0029] strokewidth,(VariableDeclaratorId0)^(Parameter)^(MethodDeclaration)_(BlockStmt)_(IfStmt)_(BinaryExpr:notEquals)_(BinaryExpr:remainder)_(IntegerLiteralExpr1),2
[0.0028] strokewidth,(VariableDeclaratorId0)^(Parameter)_(PrimitiveType1),int
[0.0025] strokewidth,(VariableDeclaratorId0)^(Parameter)^(MethodDeclaration)_(BlockStmt)_(IfStmt)_(BlockStmt)_(ThrowStmt)_(ObjectCreationExpr)_(StringLiteralExpr1),strokewidthshouldbeanevennumber
[0.0024] illegalargumentexception,(ClassOrInterfaceType0)^(ObjectCreationExpr)^(ThrowStmt)^(BlockStmt)^(IfStmt)^(BlockStmt)_(ExpressionStmt)_(MethodCallExpr0)_(NameExpr0),timerpaint
[0.0023] 2,(IntegerLiteralExpr1)^(BinaryExpr:remainder)^(BinaryExpr:notEquals)_(IntegerLiteralExpr1),0
[0.0023] illegalargumentexception,(ClassOrInterfaceType0)^(ObjectCreationExpr)^(ThrowStmt)^(BlockStmt)^(IfStmt)^(BlockStmt)_(ExpressionStmt)_(AssignExpr:assign0)_(NameExpr1),strokewidth
[0.0022] METHOD_NAME,(NameExpr1)^(MethodDeclaration)_(BlockStmt)_(IfStmt)_(BinaryExpr:notEquals)_(BinaryExpr:remainder)_(IntegerLiteralExpr1),2
[0.0022] illegalargumentexception,(ClassOrInterfaceType0)^(ObjectCreationExpr)^(ThrowStmt)^(BlockStmt)^(IfStmt)^(BlockStmt)_(ExpressionStmt)_(MethodCallExpr0)_(NameExpr2),strokewidth
[0.0022] 2,(IntegerLiteralExpr1)^(BinaryExpr:remainder)^(BinaryExpr:notEquals)^(IfStmt)^(BlockStmt)_(ExpressionStmt)_(AssignExpr:assign0)_(FieldAccessExpr0)_(NameExpr2),strokewidth
[0.0022] 2,(IntegerLiteralExpr1)^(BinaryExpr:remainder)^(BinaryExpr:notEquals)^(IfStmt)^(BlockStmt)_(ExpressionStmt)_(AssignExpr:assign0)_(NameExpr1),strokewidth
[0.0019] 0,(IntegerLiteralExpr1)^(BinaryExpr:notEquals)^(IfStmt)_(BlockStmt)_(ThrowStmt)_(ObjectCreationExpr)_(ClassOrInterfaceType0),illegalargumentexception
[0.0015] strokewidthshouldbeanevennumber,(StringLiteralExpr1)^(ObjectCreationExpr)^(ThrowStmt)^(BlockStmt)^(IfStmt)^(BlockStmt)_(ExpressionStmt)_(MethodCallExpr0)_(NameExpr0),timerpaint
[0.0014] strokewidth,(NameExpr0)^(BinaryExpr:remainder)^(BinaryExpr:notEquals)^(IfStmt)^(BlockStmt)_(ExpressionStmt)_(AssignExpr:assign0)_(FieldAccessExpr0)_(ThisExpr0),this
[0.0012] 2,(IntegerLiteralExpr1)^(BinaryExpr:remainder)^(BinaryExpr:notEquals)^(IfStmt)_(BlockStmt)_(ThrowStmt)_(ObjectCreationExpr)_(ClassOrInterfaceType0),illegalargumentexception
[0.0011] int,(PrimitiveType1)^(Parameter)^(MethodDeclaration)_(BlockStmt)_(IfStmt)_(BinaryExpr:notEquals)_(BinaryExpr:remainder)_(NameExpr0),strokewidth
[0.0010] METHOD_NAME,(NameExpr1)^(MethodDeclaration)_(BlockStmt)_(ExpressionStmt)_(AssignExpr:assign0)_(FieldAccessExpr0)_(ThisExpr0),this
[0.0009] int,(PrimitiveType1)^(Parameter)^(MethodDeclaration)_(BlockStmt)_(IfStmt)_(BlockStmt)_(ThrowStmt)_(ObjectCreationExpr)_(ClassOrInterfaceType0),illegalargumentexception
[0.0008] this,(ThisExpr0)^(FieldAccessExpr0)^(AssignExpr:assign)^(ExpressionStmt)^(BlockStmt)_(ExpressionStmt)_(MethodCallExpr0)_(NameExpr2),strokewidth
[0.0008] 0,(IntegerLiteralExpr1)^(BinaryExpr:notEquals)^(IfStmt)^(BlockStmt)_(ExpressionStmt)_(MethodCallExpr0)_(NameExpr3),setstrokewidth
[0.0008] 0,(IntegerLiteralExpr1)^(BinaryExpr:notEquals)^(IfStmt)_(BlockStmt)_(ThrowStmt)_(ObjectCreationExpr)_(StringLiteralExpr1),strokewidthshouldbeanevennumber
[0.0007] strokewidth,(NameExpr0)^(BinaryExpr:remainder)^(BinaryExpr:notEquals)^(IfStmt)_(BlockStmt)_(ThrowStmt)_(ObjectCreationExpr)_(StringLiteralExpr1),strokewidthshouldbeanevennumber
[0.0006] void,(VoidType0)^(MethodDeclaration)_(Parameter)_(PrimitiveType1),int
[0.0006] int,(PrimitiveType1)^(Parameter)^(MethodDeclaration)_(BlockStmt)_(IfStmt)_(BlockStmt)_(ThrowStmt)_(ObjectCreationExpr)_(StringLiteralExpr1),strokewidthshouldbeanevennumber
[0.0005] 2,(IntegerLiteralExpr1)^(BinaryExpr:remainder)^(BinaryExpr:notEquals)^(IfStmt)_(BlockStmt)_(ThrowStmt)_(ObjectCreationExpr)_(StringLiteralExpr1),strokewidthshouldbeanevennumber
[0.0005] METHOD_NAME,(NameExpr1)^(MethodDeclaration)_(BlockStmt)_(IfStmt)_(BlockStmt)_(ThrowStmt)_(ObjectCreationExpr)_(ClassOrInterfaceType0),illegalargumentexception
[0.0004] this,(ThisExpr0)^(FieldAccessExpr0)^(AssignExpr:assign)^(ExpressionStmt)^(BlockStmt)_(ExpressionStmt)_(MethodCallExpr0)_(NameExpr3),setstrokewidth
[0.0003] 0,(IntegerLiteralExpr1)^(BinaryExpr:notEquals)^(IfStmt)^(BlockStmt)_(ExpressionStmt)_(MethodCallExpr0)_(NameExpr2),strokewidth
[0.0003] METHOD_NAME,(NameExpr1)^(MethodDeclaration)_(BlockStmt)_(IfStmt)_(BlockStmt)_(ThrowStmt)_(ObjectCreationExpr)_(StringLiteralExpr1),strokewidthshouldbeanevennumber
[0.0002] METHOD_NAME,(NameExpr1)^(MethodDeclaration)_(Parameter)_(VariableDeclaratorId0),strokewidth
[0.0002] illegalargumentexception,(ClassOrInterfaceType0)^(ObjectCreationExpr)_(StringLiteralExpr1),strokewidthshouldbeanevennumber
[0.0001] 2,(IntegerLiteralExpr1)^(BinaryExpr:remainder)^(BinaryExpr:notEquals)^(IfStmt)^(BlockStmt)_(ExpressionStmt)_(AssignExpr:assign0)_(FieldAccessExpr0)_(ThisExpr0),this
[0.0001] 0,(IntegerLiteralExpr1)^(BinaryExpr:notEquals)^(IfStmt)^(BlockStmt)_(ExpressionStmt)_(MethodCallExpr0)_(NameExpr0),timerpaint
[0.0001] strokewidth,(VariableDeclaratorId0)^(Parameter)^(MethodDeclaration)_(BlockStmt)_(IfStmt)_(BinaryExpr:notEquals)_(IntegerLiteralExpr1),0
[0.0000] 0,(IntegerLiteralExpr1)^(BinaryExpr:notEquals)^(IfStmt)^(BlockStmt)_(ExpressionStmt)_(AssignExpr:assign0)_(FieldAccessExpr0)_(ThisExpr0),this
[0.0000] METHOD_NAME,(NameExpr1)^(MethodDeclaration)_(Parameter)_(PrimitiveType1),int
[0.0000] int,(PrimitiveType1)^(Parameter)^(MethodDeclaration)_(BlockStmt)_(IfStmt)_(BinaryExpr:notEquals)_(IntegerLiteralExpr1),0
[0.0000] METHOD_NAME,(NameExpr1)^(MethodDeclaration)_(BlockStmt)_(IfStmt)_(BinaryExpr:notEquals)_(IntegerLiteralExpr1),0
[0.0000] this,(ThisExpr0)^(FieldAccessExpr0)^(AssignExpr:assign)^(ExpressionStmt)^(BlockStmt)_(ExpressionStmt)_(MethodCallExpr0)_(NameExpr0),timerpaint

topk terminals:
[['METHOD_NAME', 'strokewidth'], ['0', 'strokewidth'], ['strokewidth', 'timerpaint'], ['0', 'strokewidth'], ['strokewidth', 'strokewidth'], ['int', 'strokewidth'], ['strokewidth', 'setstrokewidth'], ['strokewidth', 'strokewidth'], ['METHOD_NAME', 'strokewidth'], ['strokewidth', 'strokewidth'], ['strokewidth', 'strokewidth'], ['strokewidthshouldbeanevennumber', 'strokewidth'], ['strokewidth', 'strokewidth'], ['strokewidth', 'strokewidth'], ['strokewidth', 'setstrokewidth'], ['int', 'strokewidth'], ['this', 'strokewidth'], ['strokewidth', 'setstrokewidth'], ['strokewidth', 'setstrokewidth'], ['strokewidth', 'timerpaint'], ['strokewidth', 'strokewidth'], ['strokewidth', 'setstrokewidth'], ['void', 'strokewidth'], ['strokewidthshouldbeanevennumber', 'strokewidth'], ['METHOD_NAME', 'strokewidth'], ['2', 'setstrokewidth'], ['this', 'strokewidth'], ['METHOD_NAME', 'strokewidth'], ['strokewidth', 'timerpaint'], ['int', 'strokewidth'], ['int', 'setstrokewidth'], ['METHOD_NAME', 'setstrokewidth'], ['strokewidthshouldbeanevennumber', 'setstrokewidth'], ['strokewidth', '2'], ['2', 'strokewidth'], ['timerpaint', 'strokewidth'], ['strokewidth', 'timerpaint'], ['strokewidth', 'this'], ['METHOD_NAME', 'timerpaint'], ['strokewidth', 'strokewidth'], ['strokewidth', 'strokewidth'], ['strokewidth', 'strokewidth'], ['int', 'timerpaint'], ['strokewidth', 'illegalargumentexception'], ['int', '2'], ['illegalargumentexception', 'setstrokewidth'], ['strokewidth', '0'], ['int', 'this'], ['2', 'timerpaint'], ['strokewidth', 'illegalargumentexception'], ['void', 'METHOD_NAME'], ['strokewidth', '2'], ['strokewidth', 'int'], ['strokewidth', 'strokewidthshouldbeanevennumber'], ['illegalargumentexception', 'timerpaint'], ['2', '0'], ['illegalargumentexception', 'strokewidth'], ['METHOD_NAME', '2'], ['illegalargumentexception', 'strokewidth'], ['2', 'strokewidth'], ['2', 'strokewidth'], ['0', 'illegalargumentexception'], ['strokewidthshouldbeanevennumber', 'timerpaint'], ['strokewidth', 'this'], ['2', 'illegalargumentexception'], ['int', 'strokewidth'], ['METHOD_NAME', 'this'], ['int', 'illegalargumentexception'], ['this', 'strokewidth'], ['0', 'setstrokewidth'], ['0', 'strokewidthshouldbeanevennumber'], ['strokewidth', 'strokewidthshouldbeanevennumber'], ['void', 'int'], ['int', 'strokewidthshouldbeanevennumber'], ['2', 'strokewidthshouldbeanevennumber'], ['METHOD_NAME', 'illegalargumentexception'], ['this', 'setstrokewidth'], ['0', 'strokewidth'], ['METHOD_NAME', 'strokewidthshouldbeanevennumber'], ['METHOD_NAME', 'strokewidth'], ['illegalargumentexception', 'strokewidthshouldbeanevennumber'], ['2', 'this'], ['0', 'timerpaint'], ['strokewidth', '0'], ['0', 'this'], ['METHOD_NAME', 'int'], ['int', '0'], ['METHOD_NAME', '0'], ['this', 'timerpaint']]

