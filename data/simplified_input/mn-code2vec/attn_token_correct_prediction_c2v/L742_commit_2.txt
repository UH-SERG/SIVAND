
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/kaazing__gateway/transport/wsn/src/test/java/org/kaazing/gateway/transport/wsn/auth/BasicLoginModuleWithMultiplePrincipalsInConfig_commit.java
method_name = commit
method_body = @Override public boolean commit() throws LoginException { if (super.commit()) { subject.getPrincipals().add(unixPrincipal); return true; } return false; }

topk path-contexts:
[0.1946] loginexception,(ClassOrInterfaceType3)^(MethodDeclaration)_(BlockStmt)_(IfStmt)_(BlockStmt)_(ExpressionStmt)_(MethodCallExpr0)_(NameExpr2),unixprincipal
[0.1710] super,(SuperExpr0)^(MethodCallExpr)_(NameExpr2),commit
[0.0779] loginexception,(ClassOrInterfaceType3)^(MethodDeclaration)_(BlockStmt)_(ReturnStmt)_(BooleanLiteralExpr0),false
[0.0622] loginexception,(ClassOrInterfaceType3)^(MethodDeclaration)_(BlockStmt)_(IfStmt)_(BlockStmt)_(ReturnStmt)_(BooleanLiteralExpr0),true
[0.0606] loginexception,(ClassOrInterfaceType3)^(MethodDeclaration)_(BlockStmt)_(IfStmt)_(BlockStmt)_(ExpressionStmt)_(MethodCallExpr0)_(MethodCallExpr0)_(NameExpr0),subject
[0.0596] boolean,(PrimitiveType1)^(MethodDeclaration)_(ClassOrInterfaceType3),loginexception
[0.0380] unixprincipal,(NameExpr2)^(MethodCallExpr)^(ExpressionStmt)^(BlockStmt)_(ReturnStmt)_(BooleanLiteralExpr0),true
[0.0353] loginexception,(ClassOrInterfaceType3)^(MethodDeclaration)_(BlockStmt)_(IfStmt)_(MethodCallExpr0)_(NameExpr2),commit
[0.0352] getprincipals,(NameExpr2)^(MethodCallExpr0)^(MethodCallExpr)_(NameExpr2),unixprincipal
[0.0272] getprincipals,(NameExpr2)^(MethodCallExpr0)^(MethodCallExpr)^(ExpressionStmt)^(BlockStmt)^(IfStmt)^(BlockStmt)_(ReturnStmt)_(BooleanLiteralExpr0),false
[0.0197] unixprincipal,(NameExpr2)^(MethodCallExpr)_(NameExpr3),add
[0.0194] getprincipals,(NameExpr2)^(MethodCallExpr0)^(MethodCallExpr)^(ExpressionStmt)^(BlockStmt)_(ReturnStmt)_(BooleanLiteralExpr0),true
[0.0172] loginexception,(ClassOrInterfaceType3)^(MethodDeclaration)_(BlockStmt)_(IfStmt)_(BlockStmt)_(ExpressionStmt)_(MethodCallExpr0)_(NameExpr3),add
[0.0141] commit,(NameExpr2)^(MethodCallExpr)^(IfStmt)_(BlockStmt)_(ExpressionStmt)_(MethodCallExpr0)_(NameExpr2),unixprincipal
[0.0140] loginexception,(ClassOrInterfaceType3)^(MethodDeclaration)_(BlockStmt)_(IfStmt)_(BlockStmt)_(ExpressionStmt)_(MethodCallExpr0)_(MethodCallExpr0)_(NameExpr2),getprincipals
[0.0131] super,(SuperExpr0)^(MethodCallExpr)^(IfStmt)_(BlockStmt)_(ExpressionStmt)_(MethodCallExpr0)_(NameExpr2),unixprincipal
[0.0120] boolean,(PrimitiveType1)^(MethodDeclaration)_(NameExpr2),METHOD_NAME
[0.0119] METHOD_NAME,(NameExpr2)^(MethodDeclaration)_(ClassOrInterfaceType3),loginexception
[0.0116] METHOD_NAME,(NameExpr2)^(MethodDeclaration)_(BlockStmt)_(IfStmt)_(BlockStmt)_(ExpressionStmt)_(MethodCallExpr0)_(MethodCallExpr0)_(NameExpr2),getprincipals
[0.0096] subject,(NameExpr0)^(MethodCallExpr0)^(MethodCallExpr)_(NameExpr2),unixprincipal
[0.0084] unixprincipal,(NameExpr2)^(MethodCallExpr)^(ExpressionStmt)^(BlockStmt)^(IfStmt)^(BlockStmt)_(ReturnStmt)_(BooleanLiteralExpr0),false
[0.0080] loginexception,(ClassOrInterfaceType3)^(MethodDeclaration)_(BlockStmt)_(IfStmt)_(MethodCallExpr0)_(SuperExpr0),super
[0.0074] METHOD_NAME,(NameExpr2)^(MethodDeclaration)_(BlockStmt)_(ReturnStmt)_(BooleanLiteralExpr0),false
[0.0070] override,(NameExpr0)^(MarkerAnnotationExpr)^(MethodDeclaration)_(PrimitiveType1),boolean
[0.0064] override,(NameExpr0)^(MarkerAnnotationExpr)^(MethodDeclaration)_(NameExpr2),METHOD_NAME
[0.0064] METHOD_NAME,(NameExpr2)^(MethodDeclaration)_(BlockStmt)_(IfStmt)_(BlockStmt)_(ExpressionStmt)_(MethodCallExpr0)_(NameExpr3),add
[0.0059] METHOD_NAME,(NameExpr2)^(MethodDeclaration)_(BlockStmt)_(IfStmt)_(BlockStmt)_(ExpressionStmt)_(MethodCallExpr0)_(NameExpr2),unixprincipal
[0.0051] super,(SuperExpr0)^(MethodCallExpr)^(IfStmt)_(BlockStmt)_(ExpressionStmt)_(MethodCallExpr0)_(MethodCallExpr0)_(NameExpr2),getprincipals
[0.0048] commit,(NameExpr2)^(MethodCallExpr)^(IfStmt)_(BlockStmt)_(ExpressionStmt)_(MethodCallExpr0)_(MethodCallExpr0)_(NameExpr2),getprincipals
[0.0046] super,(SuperExpr0)^(MethodCallExpr)^(IfStmt)_(BlockStmt)_(ExpressionStmt)_(MethodCallExpr0)_(NameExpr3),add
[0.0045] add,(NameExpr3)^(MethodCallExpr)^(ExpressionStmt)^(BlockStmt)_(ReturnStmt)_(BooleanLiteralExpr0),true
[0.0035] subject,(NameExpr0)^(MethodCallExpr0)_(NameExpr2),getprincipals
[0.0035] add,(NameExpr3)^(MethodCallExpr)^(ExpressionStmt)^(BlockStmt)^(IfStmt)^(BlockStmt)_(ReturnStmt)_(BooleanLiteralExpr0),false
[0.0032] METHOD_NAME,(NameExpr2)^(MethodDeclaration)_(BlockStmt)_(IfStmt)_(BlockStmt)_(ExpressionStmt)_(MethodCallExpr0)_(MethodCallExpr0)_(NameExpr0),subject
[0.0032] commit,(NameExpr2)^(MethodCallExpr)^(IfStmt)_(BlockStmt)_(ExpressionStmt)_(MethodCallExpr0)_(MethodCallExpr0)_(NameExpr0),subject
[0.0030] METHOD_NAME,(NameExpr2)^(MethodDeclaration)_(BlockStmt)_(IfStmt)_(BlockStmt)_(ReturnStmt)_(BooleanLiteralExpr0),true
[0.0028] commit,(NameExpr2)^(MethodCallExpr)^(IfStmt)_(BlockStmt)_(ExpressionStmt)_(MethodCallExpr0)_(NameExpr3),add
[0.0025] commit,(NameExpr2)^(MethodCallExpr)^(IfStmt)_(BlockStmt)_(ReturnStmt)_(BooleanLiteralExpr0),true
[0.0013] subject,(NameExpr0)^(MethodCallExpr0)^(MethodCallExpr)^(ExpressionStmt)^(BlockStmt)_(ReturnStmt)_(BooleanLiteralExpr0),true
[0.0012] super,(SuperExpr0)^(MethodCallExpr)^(IfStmt)_(BlockStmt)_(ExpressionStmt)_(MethodCallExpr0)_(MethodCallExpr0)_(NameExpr0),subject
[0.0010] commit,(NameExpr2)^(MethodCallExpr)^(IfStmt)^(BlockStmt)_(ReturnStmt)_(BooleanLiteralExpr0),false
[0.0010] METHOD_NAME,(NameExpr2)^(MethodDeclaration)_(BlockStmt)_(IfStmt)_(MethodCallExpr0)_(NameExpr2),commit
[0.0008] subject,(NameExpr0)^(MethodCallExpr0)^(MethodCallExpr)^(ExpressionStmt)^(BlockStmt)^(IfStmt)^(BlockStmt)_(ReturnStmt)_(BooleanLiteralExpr0),false
[0.0002] super,(SuperExpr0)^(MethodCallExpr)^(IfStmt)_(BlockStmt)_(ReturnStmt)_(BooleanLiteralExpr0),true
[0.0001] METHOD_NAME,(NameExpr2)^(MethodDeclaration)_(BlockStmt)_(IfStmt)_(MethodCallExpr0)_(SuperExpr0),super
[0.0000] super,(SuperExpr0)^(MethodCallExpr)^(IfStmt)^(BlockStmt)_(ReturnStmt)_(BooleanLiteralExpr0),false
[0.0000] true,(BooleanLiteralExpr0)^(ReturnStmt)^(BlockStmt)^(IfStmt)^(BlockStmt)_(ReturnStmt)_(BooleanLiteralExpr0),false

topk terminals:
[['loginexception', 'unixprincipal'], ['super', 'commit'], ['loginexception', 'false'], ['loginexception', 'true'], ['loginexception', 'subject'], ['boolean', 'loginexception'], ['unixprincipal', 'true'], ['loginexception', 'commit'], ['getprincipals', 'unixprincipal'], ['getprincipals', 'false'], ['unixprincipal', 'add'], ['getprincipals', 'true'], ['loginexception', 'add'], ['commit', 'unixprincipal'], ['loginexception', 'getprincipals'], ['super', 'unixprincipal'], ['boolean', 'METHOD_NAME'], ['METHOD_NAME', 'loginexception'], ['METHOD_NAME', 'getprincipals'], ['subject', 'unixprincipal'], ['unixprincipal', 'false'], ['loginexception', 'super'], ['METHOD_NAME', 'false'], ['override', 'boolean'], ['override', 'METHOD_NAME'], ['METHOD_NAME', 'add'], ['METHOD_NAME', 'unixprincipal'], ['super', 'getprincipals'], ['commit', 'getprincipals'], ['super', 'add'], ['add', 'true'], ['subject', 'getprincipals'], ['add', 'false'], ['METHOD_NAME', 'subject'], ['commit', 'subject'], ['METHOD_NAME', 'true'], ['commit', 'add'], ['commit', 'true'], ['subject', 'true'], ['super', 'subject'], ['commit', 'false'], ['METHOD_NAME', 'commit'], ['subject', 'false'], ['super', 'true'], ['METHOD_NAME', 'super'], ['super', 'false'], ['true', 'false']]

