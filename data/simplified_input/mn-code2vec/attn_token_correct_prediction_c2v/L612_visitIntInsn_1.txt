
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/jmockit__jmockit1/main/src/mockit/internal/expectations/transformation/InvocationBlockModifier_visitIntInsn.java
method_name = visitIntInsn
method_body = @Override public void visitIntInsn(@Nonnegative int opcode, int operand) { if (opcode != NEWARRAY) { stackSize++; } mw.visitIntInsn(opcode, operand); }

topk path-contexts:
[0.1127] opcode,(VariableDeclaratorId1)^(Parameter)^(MethodDeclaration)_(BlockStmt)_(ExpressionStmt)_(MethodCallExpr0)_(NameExpr4),visitintinsn
[0.1029] newarray,(NameExpr1)^(BinaryExpr:notEquals)^(IfStmt)^(BlockStmt)_(ExpressionStmt)_(MethodCallExpr0)_(NameExpr4),visitintinsn
[0.1026] operand,(VariableDeclaratorId0)^(Parameter)^(MethodDeclaration)_(BlockStmt)_(ExpressionStmt)_(MethodCallExpr0)_(NameExpr4),visitintinsn
[0.0882] opcode,(NameExpr2)^(MethodCallExpr)_(NameExpr4),visitintinsn
[0.0680] opcode,(NameExpr0)^(BinaryExpr:notEquals)^(IfStmt)^(BlockStmt)_(ExpressionStmt)_(MethodCallExpr0)_(NameExpr4),visitintinsn
[0.0668] nonnegative,(NameExpr0)^(MarkerAnnotationExpr)^(Parameter)^(MethodDeclaration)_(BlockStmt)_(ExpressionStmt)_(MethodCallExpr0)_(NameExpr4),visitintinsn
[0.0597] int,(PrimitiveType1)^(Parameter)^(MethodDeclaration)_(BlockStmt)_(ExpressionStmt)_(MethodCallExpr0)_(NameExpr4),visitintinsn
[0.0518] int,(PrimitiveType2)^(Parameter)^(MethodDeclaration)_(BlockStmt)_(ExpressionStmt)_(MethodCallExpr0)_(NameExpr4),visitintinsn
[0.0295] operand,(NameExpr3)^(MethodCallExpr)_(NameExpr4),visitintinsn
[0.0293] void,(VoidType1)^(MethodDeclaration)_(Parameter)_(MarkerAnnotationExpr)_(NameExpr0),nonnegative
[0.0228] opcode,(VariableDeclaratorId1)^(Parameter)^(MethodDeclaration)_(BlockStmt)_(ExpressionStmt)_(MethodCallExpr0)_(NameExpr3),operand
[0.0218] opcode,(VariableDeclaratorId1)^(Parameter)^(MethodDeclaration)_(Parameter)_(VariableDeclaratorId0),operand
[0.0217] void,(VoidType1)^(MethodDeclaration)_(Parameter)_(VariableDeclaratorId1),opcode
[0.0198] void,(VoidType1)^(MethodDeclaration)_(Parameter)_(PrimitiveType2),int
[0.0143] newarray,(NameExpr1)^(BinaryExpr:notEquals)^(IfStmt)_(BlockStmt)_(ExpressionStmt)_(UnaryExpr:posIncrement)_(NameExpr0),stacksize
[0.0118] opcode,(VariableDeclaratorId1)^(Parameter)^(MethodDeclaration)_(BlockStmt)_(ExpressionStmt)_(MethodCallExpr0)_(NameExpr0),mw
[0.0112] operand,(VariableDeclaratorId0)^(Parameter)^(MethodDeclaration)_(BlockStmt)_(ExpressionStmt)_(MethodCallExpr0)_(NameExpr3),operand
[0.0109] operand,(VariableDeclaratorId0)^(Parameter)^(MethodDeclaration)_(BlockStmt)_(ExpressionStmt)_(MethodCallExpr0)_(NameExpr0),mw
[0.0103] METHOD_NAME,(NameExpr2)^(MethodDeclaration)_(Parameter)_(VariableDeclaratorId0),operand
[0.0101] opcode,(VariableDeclaratorId1)^(Parameter)^(MethodDeclaration)_(BlockStmt)_(IfStmt)_(BlockStmt)_(ExpressionStmt)_(UnaryExpr:posIncrement)_(NameExpr0),stacksize
[0.0076] operand,(VariableDeclaratorId0)^(Parameter)^(MethodDeclaration)_(BlockStmt)_(IfStmt)_(BlockStmt)_(ExpressionStmt)_(UnaryExpr:posIncrement)_(NameExpr0),stacksize
[0.0075] int,(PrimitiveType1)^(Parameter)^(MethodDeclaration)_(BlockStmt)_(ExpressionStmt)_(MethodCallExpr0)_(NameExpr3),operand
[0.0071] opcode,(NameExpr0)^(BinaryExpr:notEquals)^(IfStmt)^(BlockStmt)_(ExpressionStmt)_(MethodCallExpr0)_(NameExpr3),operand
[0.0070] newarray,(NameExpr1)^(BinaryExpr:notEquals)^(IfStmt)^(BlockStmt)_(ExpressionStmt)_(MethodCallExpr0)_(NameExpr3),operand
[0.0069] opcode,(NameExpr2)^(MethodCallExpr)_(NameExpr3),operand
[0.0068] nonnegative,(NameExpr0)^(MarkerAnnotationExpr)^(Parameter)^(MethodDeclaration)_(BlockStmt)_(IfStmt)_(BinaryExpr:notEquals)_(NameExpr1),newarray
[0.0067] stacksize,(NameExpr0)^(UnaryExpr:posIncrement)^(ExpressionStmt)^(BlockStmt)^(IfStmt)^(BlockStmt)_(ExpressionStmt)_(MethodCallExpr0)_(NameExpr4),visitintinsn
[0.0055] int,(PrimitiveType1)^(Parameter)^(MethodDeclaration)_(BlockStmt)_(IfStmt)_(BlockStmt)_(ExpressionStmt)_(UnaryExpr:posIncrement)_(NameExpr0),stacksize
[0.0055] int,(PrimitiveType1)^(Parameter)^(MethodDeclaration)_(BlockStmt)_(ExpressionStmt)_(MethodCallExpr0)_(NameExpr0),mw
[0.0049] opcode,(VariableDeclaratorId1)^(Parameter)^(MethodDeclaration)_(BlockStmt)_(ExpressionStmt)_(MethodCallExpr0)_(NameExpr2),opcode
[0.0044] int,(PrimitiveType1)^(Parameter)^(MethodDeclaration)_(BlockStmt)_(IfStmt)_(BinaryExpr:notEquals)_(NameExpr1),newarray
[0.0042] override,(NameExpr0)^(MarkerAnnotationExpr)^(MethodDeclaration)_(NameExpr2),METHOD_NAME
[0.0040] int,(PrimitiveType2)^(Parameter)^(MethodDeclaration)_(BlockStmt)_(ExpressionStmt)_(MethodCallExpr0)_(NameExpr2),opcode
[0.0037] opcode,(VariableDeclaratorId1)^(Parameter)^(MethodDeclaration)_(BlockStmt)_(IfStmt)_(BinaryExpr:notEquals)_(NameExpr1),newarray
[0.0036] int,(PrimitiveType2)^(Parameter)^(MethodDeclaration)_(BlockStmt)_(ExpressionStmt)_(MethodCallExpr0)_(NameExpr0),mw
[0.0034] int,(PrimitiveType2)^(Parameter)^(MethodDeclaration)_(BlockStmt)_(ExpressionStmt)_(MethodCallExpr0)_(NameExpr3),operand
[0.0033] opcode,(NameExpr0)^(BinaryExpr:notEquals)^(IfStmt)^(BlockStmt)_(ExpressionStmt)_(MethodCallExpr0)_(NameExpr0),mw
[0.0032] nonnegative,(NameExpr0)^(MarkerAnnotationExpr)^(Parameter)^(MethodDeclaration)_(BlockStmt)_(ExpressionStmt)_(MethodCallExpr0)_(NameExpr0),mw
[0.0032] stacksize,(NameExpr0)^(UnaryExpr:posIncrement)^(ExpressionStmt)^(BlockStmt)^(IfStmt)^(BlockStmt)_(ExpressionStmt)_(MethodCallExpr0)_(NameExpr3),operand
[0.0031] newarray,(NameExpr1)^(BinaryExpr:notEquals)^(IfStmt)^(BlockStmt)_(ExpressionStmt)_(MethodCallExpr0)_(NameExpr2),opcode
[0.0030] opcode,(NameExpr0)^(BinaryExpr:notEquals)^(IfStmt)_(BlockStmt)_(ExpressionStmt)_(UnaryExpr:posIncrement)_(NameExpr0),stacksize
[0.0030] int,(PrimitiveType1)^(Parameter)^(MethodDeclaration)_(BlockStmt)_(ExpressionStmt)_(MethodCallExpr0)_(NameExpr2),opcode
[0.0028] nonnegative,(NameExpr0)^(MarkerAnnotationExpr)^(Parameter)_(PrimitiveType2),int
[0.0026] override,(NameExpr0)^(MarkerAnnotationExpr)^(MethodDeclaration)_(VoidType1),void
[0.0021] stacksize,(NameExpr0)^(UnaryExpr:posIncrement)^(ExpressionStmt)^(BlockStmt)^(IfStmt)^(BlockStmt)_(ExpressionStmt)_(MethodCallExpr0)_(NameExpr0),mw
[0.0020] opcode,(NameExpr0)^(BinaryExpr:notEquals)^(IfStmt)^(BlockStmt)_(ExpressionStmt)_(MethodCallExpr0)_(NameExpr2),opcode
[0.0020] nonnegative,(NameExpr0)^(MarkerAnnotationExpr)^(Parameter)^(MethodDeclaration)_(BlockStmt)_(ExpressionStmt)_(MethodCallExpr0)_(NameExpr3),operand
[0.0019] operand,(VariableDeclaratorId0)^(Parameter)^(MethodDeclaration)_(BlockStmt)_(ExpressionStmt)_(MethodCallExpr0)_(NameExpr2),opcode
[0.0017] METHOD_NAME,(NameExpr2)^(MethodDeclaration)_(Parameter)_(VariableDeclaratorId1),opcode
[0.0014] operand,(VariableDeclaratorId0)^(Parameter)^(MethodDeclaration)_(BlockStmt)_(IfStmt)_(BinaryExpr:notEquals)_(NameExpr1),newarray
[0.0011] operand,(VariableDeclaratorId0)^(Parameter)_(PrimitiveType1),int
[0.0011] operand,(VariableDeclaratorId0)^(Parameter)^(MethodDeclaration)_(BlockStmt)_(IfStmt)_(BinaryExpr:notEquals)_(NameExpr0),opcode
[0.0010] void,(VoidType1)^(MethodDeclaration)_(NameExpr2),METHOD_NAME
[0.0008] mw,(NameExpr0)^(MethodCallExpr)_(NameExpr2),opcode
[0.0008] stacksize,(NameExpr0)^(UnaryExpr:posIncrement)^(ExpressionStmt)^(BlockStmt)^(IfStmt)^(BlockStmt)_(ExpressionStmt)_(MethodCallExpr0)_(NameExpr2),opcode
[0.0008] int,(PrimitiveType1)^(Parameter)^(MethodDeclaration)_(BlockStmt)_(IfStmt)_(BinaryExpr:notEquals)_(NameExpr0),opcode
[0.0006] int,(PrimitiveType2)^(Parameter)^(MethodDeclaration)_(BlockStmt)_(IfStmt)_(BinaryExpr:notEquals)_(NameExpr1),newarray
[0.0006] nonnegative,(NameExpr0)^(MarkerAnnotationExpr)^(Parameter)^(MethodDeclaration)_(BlockStmt)_(ExpressionStmt)_(MethodCallExpr0)_(NameExpr2),opcode
[0.0005] nonnegative,(NameExpr0)^(MarkerAnnotationExpr)^(Parameter)^(MethodDeclaration)_(BlockStmt)_(IfStmt)_(BinaryExpr:notEquals)_(NameExpr0),opcode
[0.0005] newarray,(NameExpr1)^(BinaryExpr:notEquals)^(IfStmt)^(BlockStmt)_(ExpressionStmt)_(MethodCallExpr0)_(NameExpr0),mw
[0.0005] int,(PrimitiveType2)^(Parameter)^(MethodDeclaration)_(BlockStmt)_(IfStmt)_(BlockStmt)_(ExpressionStmt)_(UnaryExpr:posIncrement)_(NameExpr0),stacksize
[0.0005] METHOD_NAME,(NameExpr2)^(MethodDeclaration)_(Parameter)_(MarkerAnnotationExpr)_(NameExpr0),nonnegative
[0.0003] opcode,(NameExpr0)^(BinaryExpr:notEquals)_(NameExpr1),newarray
[0.0003] nonnegative,(NameExpr0)^(MarkerAnnotationExpr)^(Parameter)_(VariableDeclaratorId1),opcode
[0.0001] int,(PrimitiveType2)^(Parameter)^(MethodDeclaration)_(BlockStmt)_(IfStmt)_(BinaryExpr:notEquals)_(NameExpr0),opcode
[0.0001] int,(PrimitiveType2)^(Parameter)^(MethodDeclaration)_(Parameter)_(PrimitiveType1),int
[0.0001] opcode,(VariableDeclaratorId1)^(Parameter)^(MethodDeclaration)_(BlockStmt)_(IfStmt)_(BinaryExpr:notEquals)_(NameExpr0),opcode
[0.0001] opcode,(VariableDeclaratorId1)^(Parameter)_(PrimitiveType2),int
[0.0001] int,(PrimitiveType2)^(Parameter)^(MethodDeclaration)_(Parameter)_(VariableDeclaratorId0),operand
[0.0001] METHOD_NAME,(NameExpr2)^(MethodDeclaration)_(Parameter)_(PrimitiveType2),int
[0.0000] nonnegative,(NameExpr0)^(MarkerAnnotationExpr)^(Parameter)^(MethodDeclaration)_(Parameter)_(PrimitiveType1),int
[0.0000] nonnegative,(NameExpr0)^(MarkerAnnotationExpr)^(Parameter)^(MethodDeclaration)_(Parameter)_(VariableDeclaratorId0),operand
[0.0000] opcode,(VariableDeclaratorId1)^(Parameter)^(MethodDeclaration)_(Parameter)_(PrimitiveType1),int
[0.0000] METHOD_NAME,(NameExpr2)^(MethodDeclaration)_(Parameter)_(PrimitiveType1),int

topk terminals:
[['opcode', 'visitintinsn'], ['newarray', 'visitintinsn'], ['operand', 'visitintinsn'], ['opcode', 'visitintinsn'], ['opcode', 'visitintinsn'], ['nonnegative', 'visitintinsn'], ['int', 'visitintinsn'], ['int', 'visitintinsn'], ['operand', 'visitintinsn'], ['void', 'nonnegative'], ['opcode', 'operand'], ['opcode', 'operand'], ['void', 'opcode'], ['void', 'int'], ['newarray', 'stacksize'], ['opcode', 'mw'], ['operand', 'operand'], ['operand', 'mw'], ['METHOD_NAME', 'operand'], ['opcode', 'stacksize'], ['operand', 'stacksize'], ['int', 'operand'], ['opcode', 'operand'], ['newarray', 'operand'], ['opcode', 'operand'], ['nonnegative', 'newarray'], ['stacksize', 'visitintinsn'], ['int', 'stacksize'], ['int', 'mw'], ['opcode', 'opcode'], ['int', 'newarray'], ['override', 'METHOD_NAME'], ['int', 'opcode'], ['opcode', 'newarray'], ['int', 'mw'], ['int', 'operand'], ['opcode', 'mw'], ['nonnegative', 'mw'], ['stacksize', 'operand'], ['newarray', 'opcode'], ['opcode', 'stacksize'], ['int', 'opcode'], ['nonnegative', 'int'], ['override', 'void'], ['stacksize', 'mw'], ['opcode', 'opcode'], ['nonnegative', 'operand'], ['operand', 'opcode'], ['METHOD_NAME', 'opcode'], ['operand', 'newarray'], ['operand', 'int'], ['operand', 'opcode'], ['void', 'METHOD_NAME'], ['mw', 'opcode'], ['stacksize', 'opcode'], ['int', 'opcode'], ['int', 'newarray'], ['nonnegative', 'opcode'], ['nonnegative', 'opcode'], ['newarray', 'mw'], ['int', 'stacksize'], ['METHOD_NAME', 'nonnegative'], ['opcode', 'newarray'], ['nonnegative', 'opcode'], ['int', 'opcode'], ['int', 'int'], ['opcode', 'opcode'], ['opcode', 'int'], ['int', 'operand'], ['METHOD_NAME', 'int'], ['nonnegative', 'int'], ['nonnegative', 'operand'], ['opcode', 'int'], ['METHOD_NAME', 'int']]

