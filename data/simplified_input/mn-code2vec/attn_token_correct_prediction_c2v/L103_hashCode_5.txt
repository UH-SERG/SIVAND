
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/OpenRock__OpenAM/openam-entitlements/src/main/java/com/sun/identity/entitlement/AttributeLookupCondition_hashCode.java
method_name = hashCode
method_body = @Override public int hashCode() { int code = super.hashCode(); if (key != null) { code = 31 * code + key.hashCode(); } if (value != null) { code = 31 * code + value.hashCode(); } if (pConditionName != null) { code = 31 * code + pConditionName.hashCode(); } return code; }

topk path-contexts:
[0.0917] null,(NullLiteralExpr1)^(BinaryExpr:notEquals)^(IfStmt)_(BlockStmt)_(ExpressionStmt)_(AssignExpr:assign0)_(BinaryExpr:plus)_(BinaryExpr:times)_(IntegerLiteralExpr0),31
[0.0917] null,(NullLiteralExpr1)^(BinaryExpr:notEquals)^(IfStmt)_(BlockStmt)_(ExpressionStmt)_(AssignExpr:assign0)_(BinaryExpr:plus)_(BinaryExpr:times)_(IntegerLiteralExpr0),31
[0.0917] null,(NullLiteralExpr1)^(BinaryExpr:notEquals)^(IfStmt)_(BlockStmt)_(ExpressionStmt)_(AssignExpr:assign0)_(BinaryExpr:plus)_(BinaryExpr:times)_(IntegerLiteralExpr0),31
[0.0877] super,(SuperExpr0)^(MethodCallExpr)_(NameExpr2),hashcode
[0.0583] int,(PrimitiveType1)^(MethodDeclaration)_(BlockStmt)_(ExpressionStmt)_(VariableDeclarationExpr)_(VariableDeclarator)_(MethodCallExpr1)_(NameExpr2),hashcode
[0.0580] key,(NameExpr0)^(BinaryExpr:notEquals)^(IfStmt)_(BlockStmt)_(ExpressionStmt)_(AssignExpr:assign0)_(BinaryExpr:plus)_(BinaryExpr:times)_(IntegerLiteralExpr0),31
[0.0439] pconditionname,(NameExpr0)^(BinaryExpr:notEquals)^(IfStmt)_(BlockStmt)_(ExpressionStmt)_(AssignExpr:assign0)_(BinaryExpr:plus)_(BinaryExpr:times)_(IntegerLiteralExpr0),31
[0.0365] value,(NameExpr0)^(BinaryExpr:notEquals)^(IfStmt)_(BlockStmt)_(ExpressionStmt)_(AssignExpr:assign0)_(BinaryExpr:plus)_(BinaryExpr:times)_(IntegerLiteralExpr0),31
[0.0361] 31,(IntegerLiteralExpr0)^(BinaryExpr:times)^(BinaryExpr:plus1)_(MethodCallExpr1)_(NameExpr2),hashcode
[0.0361] 31,(IntegerLiteralExpr0)^(BinaryExpr:times)^(BinaryExpr:plus1)_(MethodCallExpr1)_(NameExpr2),hashcode
[0.0361] 31,(IntegerLiteralExpr0)^(BinaryExpr:times)^(BinaryExpr:plus1)_(MethodCallExpr1)_(NameExpr2),hashcode
[0.0290] code,(NameExpr0)^(AssignExpr:assign)_(BinaryExpr:plus)_(BinaryExpr:times)_(IntegerLiteralExpr0),31
[0.0290] code,(NameExpr0)^(AssignExpr:assign)_(BinaryExpr:plus)_(BinaryExpr:times)_(IntegerLiteralExpr0),31
[0.0290] code,(NameExpr0)^(AssignExpr:assign)_(BinaryExpr:plus)_(BinaryExpr:times)_(IntegerLiteralExpr0),31
[0.0212] METHOD_NAME,(NameExpr2)^(MethodDeclaration)_(BlockStmt)_(ExpressionStmt)_(VariableDeclarationExpr)_(VariableDeclarator)_(MethodCallExpr1)_(NameExpr2),hashcode
[0.0122] null,(NullLiteralExpr1)^(BinaryExpr:notEquals)^(IfStmt)_(BlockStmt)_(ExpressionStmt)_(AssignExpr:assign0)_(BinaryExpr:plus)_(BinaryExpr:times)_(NameExpr1),code
[0.0122] null,(NullLiteralExpr1)^(BinaryExpr:notEquals)^(IfStmt)_(BlockStmt)_(ExpressionStmt)_(AssignExpr:assign0)_(BinaryExpr:plus)_(BinaryExpr:times)_(NameExpr1),code
[0.0122] null,(NullLiteralExpr1)^(BinaryExpr:notEquals)^(IfStmt)_(BlockStmt)_(ExpressionStmt)_(AssignExpr:assign0)_(BinaryExpr:plus)_(BinaryExpr:times)_(NameExpr1),code
[0.0110] code,(NameExpr1)^(BinaryExpr:times)^(BinaryExpr:plus1)_(MethodCallExpr1)_(NameExpr0),pconditionname
[0.0105] null,(NullLiteralExpr1)^(BinaryExpr:notEquals)^(IfStmt)_(BlockStmt)_(ExpressionStmt)_(AssignExpr:assign0)_(BinaryExpr:plus)_(MethodCallExpr1)_(NameExpr2),hashcode
[0.0105] null,(NullLiteralExpr1)^(BinaryExpr:notEquals)^(IfStmt)_(BlockStmt)_(ExpressionStmt)_(AssignExpr:assign0)_(BinaryExpr:plus)_(MethodCallExpr1)_(NameExpr2),hashcode
[0.0105] null,(NullLiteralExpr1)^(BinaryExpr:notEquals)^(IfStmt)_(BlockStmt)_(ExpressionStmt)_(AssignExpr:assign0)_(BinaryExpr:plus)_(MethodCallExpr1)_(NameExpr2),hashcode
[0.0100] int,(PrimitiveType1)^(MethodDeclaration)_(BlockStmt)_(ExpressionStmt)_(VariableDeclarationExpr)_(VariableDeclarator)_(MethodCallExpr1)_(SuperExpr0),super
[0.0090] 31,(IntegerLiteralExpr0)^(BinaryExpr:times)^(BinaryExpr:plus1)_(MethodCallExpr1)_(NameExpr0),pconditionname
[0.0082] code,(NameExpr1)^(BinaryExpr:times)^(BinaryExpr:plus1)_(MethodCallExpr1)_(NameExpr0),key
[0.0081] 31,(IntegerLiteralExpr0)^(BinaryExpr:times)^(BinaryExpr:plus1)_(MethodCallExpr1)_(NameExpr0),key
[0.0073] int,(PrimitiveType1)^(MethodDeclaration)_(BlockStmt)_(IfStmt)_(BlockStmt)_(ExpressionStmt)_(AssignExpr:assign0)_(NameExpr0),code
[0.0073] int,(PrimitiveType1)^(MethodDeclaration)_(BlockStmt)_(IfStmt)_(BlockStmt)_(ExpressionStmt)_(AssignExpr:assign0)_(NameExpr0),code
[0.0073] int,(PrimitiveType1)^(MethodDeclaration)_(BlockStmt)_(IfStmt)_(BlockStmt)_(ExpressionStmt)_(AssignExpr:assign0)_(NameExpr0),code
[0.0067] code,(NameExpr1)^(BinaryExpr:times)^(BinaryExpr:plus1)_(MethodCallExpr1)_(NameExpr2),hashcode
[0.0067] code,(NameExpr1)^(BinaryExpr:times)^(BinaryExpr:plus1)_(MethodCallExpr1)_(NameExpr2),hashcode
[0.0067] code,(NameExpr1)^(BinaryExpr:times)^(BinaryExpr:plus1)_(MethodCallExpr1)_(NameExpr2),hashcode
[0.0064] key,(NameExpr0)^(MethodCallExpr)_(NameExpr2),hashcode
[0.0053] 31,(IntegerLiteralExpr0)^(BinaryExpr:times)^(BinaryExpr:plus1)_(MethodCallExpr1)_(NameExpr0),value
[0.0047] int,(PrimitiveType1)^(MethodDeclaration)_(BlockStmt)_(ReturnStmt)_(NameExpr0),code
[0.0042] code,(NameExpr1)^(BinaryExpr:times)^(BinaryExpr:plus1)_(MethodCallExpr1)_(NameExpr0),value
[0.0042] value,(NameExpr0)^(MethodCallExpr)_(NameExpr2),hashcode
[0.0036] METHOD_NAME,(NameExpr2)^(MethodDeclaration)_(BlockStmt)_(ReturnStmt)_(NameExpr0),code
[0.0030] key,(NameExpr0)^(BinaryExpr:notEquals)^(IfStmt)_(BlockStmt)_(ExpressionStmt)_(AssignExpr:assign0)_(BinaryExpr:plus)_(MethodCallExpr1)_(NameExpr2),hashcode
[0.0029] pconditionname,(NameExpr0)^(MethodCallExpr)_(NameExpr2),hashcode
[0.0023] int,(PrimitiveType1)^(MethodDeclaration)_(NameExpr2),METHOD_NAME
[0.0022] int,(PrimitiveType1)^(MethodDeclaration)_(BlockStmt)_(IfStmt)_(BinaryExpr:notEquals)_(NameExpr0),pconditionname
[0.0020] int,(PrimitiveType1)^(MethodDeclaration)_(BlockStmt)_(IfStmt)_(BinaryExpr:notEquals)_(NameExpr0),key
[0.0019] override,(NameExpr0)^(MarkerAnnotationExpr)^(MethodDeclaration)_(NameExpr2),METHOD_NAME
[0.0016] int,(PrimitiveType1)^(MethodDeclaration)_(BlockStmt)_(IfStmt)_(BinaryExpr:notEquals)_(NameExpr0),value
[0.0015] override,(NameExpr0)^(MarkerAnnotationExpr)^(MethodDeclaration)_(PrimitiveType1),int
[0.0014] value,(NameExpr0)^(BinaryExpr:notEquals)^(IfStmt)_(BlockStmt)_(ExpressionStmt)_(AssignExpr:assign0)_(BinaryExpr:plus)_(MethodCallExpr1)_(NameExpr2),hashcode
[0.0014] pconditionname,(NameExpr0)^(BinaryExpr:notEquals)^(IfStmt)^(BlockStmt)_(ReturnStmt)_(NameExpr0),code
[0.0013] 31,(IntegerLiteralExpr0)^(BinaryExpr:times)_(NameExpr1),code
[0.0013] 31,(IntegerLiteralExpr0)^(BinaryExpr:times)_(NameExpr1),code
[0.0013] 31,(IntegerLiteralExpr0)^(BinaryExpr:times)_(NameExpr1),code
[0.0011] pconditionname,(NameExpr0)^(BinaryExpr:notEquals)^(IfStmt)_(BlockStmt)_(ExpressionStmt)_(AssignExpr:assign0)_(BinaryExpr:plus)_(MethodCallExpr1)_(NameExpr2),hashcode
[0.0011] int,(PrimitiveType1)^(MethodDeclaration)_(BlockStmt)_(IfStmt)_(BinaryExpr:notEquals)_(NullLiteralExpr1),null
[0.0011] int,(PrimitiveType1)^(MethodDeclaration)_(BlockStmt)_(IfStmt)_(BinaryExpr:notEquals)_(NullLiteralExpr1),null
[0.0011] int,(PrimitiveType1)^(MethodDeclaration)_(BlockStmt)_(IfStmt)_(BinaryExpr:notEquals)_(NullLiteralExpr1),null
[0.0010] METHOD_NAME,(NameExpr2)^(MethodDeclaration)_(BlockStmt)_(IfStmt)_(BinaryExpr:notEquals)_(NameExpr0),pconditionname
[0.0008] value,(NameExpr0)^(BinaryExpr:notEquals)^(IfStmt)^(BlockStmt)_(ReturnStmt)_(NameExpr0),code
[0.0006] key,(NameExpr0)^(BinaryExpr:notEquals)^(IfStmt)_(BlockStmt)_(ExpressionStmt)_(AssignExpr:assign0)_(BinaryExpr:plus)_(BinaryExpr:times)_(NameExpr1),code
[0.0006] METHOD_NAME,(NameExpr2)^(MethodDeclaration)_(BlockStmt)_(IfStmt)_(BinaryExpr:notEquals)_(NameExpr0),key
[0.0005] int,(PrimitiveType1)^(MethodDeclaration)_(BlockStmt)_(ExpressionStmt)_(VariableDeclarationExpr)_(PrimitiveType0),int
[0.0005] code,(NameExpr0)^(AssignExpr:assign)^(ExpressionStmt)^(BlockStmt)^(IfStmt)^(BlockStmt)_(ReturnStmt)_(NameExpr0),code
[0.0005] code,(NameExpr0)^(AssignExpr:assign)^(ExpressionStmt)^(BlockStmt)^(IfStmt)^(BlockStmt)_(ReturnStmt)_(NameExpr0),code
[0.0005] key,(NameExpr0)^(BinaryExpr:notEquals)^(IfStmt)_(BlockStmt)_(ExpressionStmt)_(AssignExpr:assign0)_(BinaryExpr:plus)_(MethodCallExpr1)_(NameExpr0),key
[0.0005] int,(PrimitiveType1)^(MethodDeclaration)_(BlockStmt)_(ExpressionStmt)_(VariableDeclarationExpr)_(VariableDeclarator)_(VariableDeclaratorId0),code
[0.0004] pconditionname,(NameExpr0)^(BinaryExpr:notEquals)^(IfStmt)_(BlockStmt)_(ExpressionStmt)_(AssignExpr:assign0)_(BinaryExpr:plus)_(BinaryExpr:times)_(NameExpr1),code
[0.0004] value,(NameExpr0)^(BinaryExpr:notEquals)^(IfStmt)_(BlockStmt)_(ExpressionStmt)_(AssignExpr:assign0)_(BinaryExpr:plus)_(BinaryExpr:times)_(NameExpr1),code
[0.0004] int,(PrimitiveType0)^(VariableDeclarationExpr)_(VariableDeclarator)_(MethodCallExpr1)_(NameExpr2),hashcode
[0.0004] key,(NameExpr0)^(BinaryExpr:notEquals)^(IfStmt)_(BlockStmt)_(ExpressionStmt)_(AssignExpr:assign0)_(NameExpr0),code
[0.0003] METHOD_NAME,(NameExpr2)^(MethodDeclaration)_(BlockStmt)_(IfStmt)_(BinaryExpr:notEquals)_(NameExpr0),value
[0.0003] key,(NameExpr0)^(BinaryExpr:notEquals)^(IfStmt)^(BlockStmt)_(IfStmt)_(BlockStmt)_(ExpressionStmt)_(AssignExpr:assign0)_(NameExpr0),code
[0.0003] key,(NameExpr0)^(BinaryExpr:notEquals)^(IfStmt)^(BlockStmt)_(IfStmt)_(BlockStmt)_(ExpressionStmt)_(AssignExpr:assign0)_(NameExpr0),code
[0.0003] pconditionname,(NameExpr0)^(BinaryExpr:notEquals)^(IfStmt)_(BlockStmt)_(ExpressionStmt)_(AssignExpr:assign0)_(BinaryExpr:plus)_(MethodCallExpr1)_(NameExpr0),pconditionname
[0.0003] value,(NameExpr0)^(BinaryExpr:notEquals)^(IfStmt)_(BlockStmt)_(ExpressionStmt)_(AssignExpr:assign0)_(NameExpr0),code
[0.0002] value,(NameExpr0)^(BinaryExpr:notEquals)^(IfStmt)^(BlockStmt)_(IfStmt)_(BlockStmt)_(ExpressionStmt)_(AssignExpr:assign0)_(NameExpr0),code
[0.0002] pconditionname,(NameExpr0)^(BinaryExpr:notEquals)^(IfStmt)_(BlockStmt)_(ExpressionStmt)_(AssignExpr:assign0)_(NameExpr0),code
[0.0001] value,(NameExpr0)^(BinaryExpr:notEquals)^(IfStmt)_(BlockStmt)_(ExpressionStmt)_(AssignExpr:assign0)_(BinaryExpr:plus)_(MethodCallExpr1)_(NameExpr0),value
[0.0001] null,(NullLiteralExpr1)^(BinaryExpr:notEquals)^(IfStmt)_(BlockStmt)_(ExpressionStmt)_(AssignExpr:assign0)_(BinaryExpr:plus)_(MethodCallExpr1)_(NameExpr0),pconditionname
[0.0001] code,(NameExpr0)^(AssignExpr:assign)_(BinaryExpr:plus)_(MethodCallExpr1)_(NameExpr2),hashcode
[0.0001] code,(NameExpr0)^(AssignExpr:assign)_(BinaryExpr:plus)_(MethodCallExpr1)_(NameExpr2),hashcode
[0.0001] code,(NameExpr0)^(AssignExpr:assign)_(BinaryExpr:plus)_(MethodCallExpr1)_(NameExpr2),hashcode
[0.0001] null,(NullLiteralExpr1)^(BinaryExpr:notEquals)^(IfStmt)^(BlockStmt)_(ReturnStmt)_(NameExpr0),code
[0.0001] null,(NullLiteralExpr1)^(BinaryExpr:notEquals)^(IfStmt)^(BlockStmt)_(ReturnStmt)_(NameExpr0),code
[0.0001] null,(NullLiteralExpr1)^(BinaryExpr:notEquals)^(IfStmt)_(BlockStmt)_(ExpressionStmt)_(AssignExpr:assign0)_(BinaryExpr:plus)_(MethodCallExpr1)_(NameExpr0),key
[0.0001] int,(PrimitiveType0)^(VariableDeclarationExpr)_(VariableDeclarator)_(MethodCallExpr1)_(SuperExpr0),super
[0.0000] null,(NullLiteralExpr1)^(BinaryExpr:notEquals)^(IfStmt)_(BlockStmt)_(ExpressionStmt)_(AssignExpr:assign0)_(BinaryExpr:plus)_(MethodCallExpr1)_(NameExpr0),value
[0.0000] METHOD_NAME,(NameExpr2)^(MethodDeclaration)_(BlockStmt)_(IfStmt)_(BinaryExpr:notEquals)_(NullLiteralExpr1),null
[0.0000] METHOD_NAME,(NameExpr2)^(MethodDeclaration)_(BlockStmt)_(IfStmt)_(BinaryExpr:notEquals)_(NullLiteralExpr1),null
[0.0000] METHOD_NAME,(NameExpr2)^(MethodDeclaration)_(BlockStmt)_(IfStmt)_(BinaryExpr:notEquals)_(NullLiteralExpr1),null
[0.0000] code,(NameExpr0)^(AssignExpr:assign)_(BinaryExpr:plus)_(BinaryExpr:times)_(NameExpr1),code
[0.0000] code,(NameExpr0)^(AssignExpr:assign)_(BinaryExpr:plus)_(BinaryExpr:times)_(NameExpr1),code
[0.0000] code,(NameExpr0)^(AssignExpr:assign)_(BinaryExpr:plus)_(BinaryExpr:times)_(NameExpr1),code
[0.0000] code,(NameExpr0)^(AssignExpr:assign)_(BinaryExpr:plus)_(MethodCallExpr1)_(NameExpr0),key
[0.0000] code,(NameExpr0)^(AssignExpr:assign)_(BinaryExpr:plus)_(MethodCallExpr1)_(NameExpr0),pconditionname
[0.0000] super,(SuperExpr0)^(MethodCallExpr)^(VariableDeclarator)^(VariableDeclarationExpr)^(ExpressionStmt)^(BlockStmt)_(IfStmt)_(BinaryExpr:notEquals)_(NameExpr0),key
[0.0000] code,(NameExpr0)^(AssignExpr:assign)_(BinaryExpr:plus)_(MethodCallExpr1)_(NameExpr0),value
[0.0000] super,(SuperExpr0)^(MethodCallExpr)^(VariableDeclarator)^(VariableDeclarationExpr)^(ExpressionStmt)^(BlockStmt)_(IfStmt)_(BinaryExpr:notEquals)_(NullLiteralExpr1),null
[0.0000] super,(SuperExpr0)^(MethodCallExpr)^(VariableDeclarator)^(VariableDeclarationExpr)^(ExpressionStmt)^(BlockStmt)_(IfStmt)_(BinaryExpr:notEquals)_(NullLiteralExpr1),null
[0.0000] super,(SuperExpr0)^(MethodCallExpr)^(VariableDeclarator)^(VariableDeclarationExpr)^(ExpressionStmt)^(BlockStmt)_(IfStmt)_(BinaryExpr:notEquals)_(NameExpr0),value
[0.0000] METHOD_NAME,(NameExpr2)^(MethodDeclaration)_(BlockStmt)_(ExpressionStmt)_(VariableDeclarationExpr)_(VariableDeclarator)_(MethodCallExpr1)_(SuperExpr0),super
[0.0000] METHOD_NAME,(NameExpr2)^(MethodDeclaration)_(BlockStmt)_(ExpressionStmt)_(VariableDeclarationExpr)_(PrimitiveType0),int
[0.0000] key,(NameExpr0)^(BinaryExpr:notEquals)_(NullLiteralExpr1),null
[0.0000] null,(NullLiteralExpr1)^(BinaryExpr:notEquals)^(IfStmt)^(BlockStmt)_(IfStmt)_(BinaryExpr:notEquals)_(NullLiteralExpr1),null
[0.0000] null,(NullLiteralExpr1)^(BinaryExpr:notEquals)^(IfStmt)^(BlockStmt)_(IfStmt)_(BinaryExpr:notEquals)_(NullLiteralExpr1),null
[0.0000] null,(NullLiteralExpr1)^(BinaryExpr:notEquals)^(IfStmt)^(BlockStmt)_(IfStmt)_(BinaryExpr:notEquals)_(NullLiteralExpr1),null
[0.0000] int,(PrimitiveType0)^(VariableDeclarationExpr)^(ExpressionStmt)^(BlockStmt)_(IfStmt)_(BinaryExpr:notEquals)_(NameExpr0),key
[0.0000] hashcode,(NameExpr2)^(MethodCallExpr)^(VariableDeclarator)^(VariableDeclarationExpr)^(ExpressionStmt)^(BlockStmt)_(IfStmt)_(BinaryExpr:notEquals)_(NameExpr0),key
[0.0000] int,(PrimitiveType0)^(VariableDeclarationExpr)^(ExpressionStmt)^(BlockStmt)_(IfStmt)_(BinaryExpr:notEquals)_(NullLiteralExpr1),null
[0.0000] int,(PrimitiveType0)^(VariableDeclarationExpr)^(ExpressionStmt)^(BlockStmt)_(IfStmt)_(BinaryExpr:notEquals)_(NullLiteralExpr1),null
[0.0000] hashcode,(NameExpr2)^(MethodCallExpr)^(VariableDeclarator)^(VariableDeclarationExpr)^(ExpressionStmt)^(BlockStmt)_(IfStmt)_(BinaryExpr:notEquals)_(NullLiteralExpr1),null
[0.0000] hashcode,(NameExpr2)^(MethodCallExpr)^(VariableDeclarator)^(VariableDeclarationExpr)^(ExpressionStmt)^(BlockStmt)_(IfStmt)_(BinaryExpr:notEquals)_(NullLiteralExpr1),null
[0.0000] pconditionname,(NameExpr0)^(BinaryExpr:notEquals)_(NullLiteralExpr1),null
[0.0000] key,(NameExpr0)^(BinaryExpr:notEquals)^(IfStmt)^(BlockStmt)_(IfStmt)_(BinaryExpr:notEquals)_(NullLiteralExpr1),null
[0.0000] key,(NameExpr0)^(BinaryExpr:notEquals)^(IfStmt)^(BlockStmt)_(IfStmt)_(BinaryExpr:notEquals)_(NullLiteralExpr1),null
[0.0000] code,(VariableDeclaratorId0)^(VariableDeclarator)_(MethodCallExpr1)_(NameExpr2),hashcode
[0.0000] null,(NullLiteralExpr1)^(BinaryExpr:notEquals)^(IfStmt)^(BlockStmt)_(IfStmt)_(BinaryExpr:notEquals)_(NameExpr0),pconditionname
[0.0000] null,(NullLiteralExpr1)^(BinaryExpr:notEquals)^(IfStmt)^(BlockStmt)_(IfStmt)_(BinaryExpr:notEquals)_(NameExpr0),pconditionname
[0.0000] code,(VariableDeclaratorId0)^(VariableDeclarator)_(MethodCallExpr1)_(SuperExpr0),super
[0.0000] value,(NameExpr0)^(BinaryExpr:notEquals)_(NullLiteralExpr1),null
[0.0000] METHOD_NAME,(NameExpr2)^(MethodDeclaration)_(BlockStmt)_(IfStmt)_(BlockStmt)_(ExpressionStmt)_(AssignExpr:assign0)_(NameExpr0),code
[0.0000] METHOD_NAME,(NameExpr2)^(MethodDeclaration)_(BlockStmt)_(IfStmt)_(BlockStmt)_(ExpressionStmt)_(AssignExpr:assign0)_(NameExpr0),code
[0.0000] METHOD_NAME,(NameExpr2)^(MethodDeclaration)_(BlockStmt)_(IfStmt)_(BlockStmt)_(ExpressionStmt)_(AssignExpr:assign0)_(NameExpr0),code
[0.0000] key,(NameExpr0)^(BinaryExpr:notEquals)^(IfStmt)^(BlockStmt)_(IfStmt)_(BinaryExpr:notEquals)_(NameExpr0),pconditionname
[0.0000] value,(NameExpr0)^(BinaryExpr:notEquals)^(IfStmt)^(BlockStmt)_(IfStmt)_(BinaryExpr:notEquals)_(NullLiteralExpr1),null
[0.0000] null,(NullLiteralExpr1)^(BinaryExpr:notEquals)^(IfStmt)^(BlockStmt)_(IfStmt)_(BinaryExpr:notEquals)_(NameExpr0),value
[0.0000] METHOD_NAME,(NameExpr2)^(MethodDeclaration)_(BlockStmt)_(ExpressionStmt)_(VariableDeclarationExpr)_(VariableDeclarator)_(VariableDeclaratorId0),code
[0.0000] value,(NameExpr0)^(BinaryExpr:notEquals)^(IfStmt)^(BlockStmt)_(IfStmt)_(BinaryExpr:notEquals)_(NameExpr0),pconditionname
[0.0000] key,(NameExpr0)^(BinaryExpr:notEquals)^(IfStmt)^(BlockStmt)_(IfStmt)_(BinaryExpr:notEquals)_(NameExpr0),value
[0.0000] code,(NameExpr0)^(AssignExpr:assign)^(ExpressionStmt)^(BlockStmt)^(IfStmt)^(BlockStmt)_(IfStmt)_(BinaryExpr:notEquals)_(NameExpr0),pconditionname
[0.0000] code,(NameExpr0)^(AssignExpr:assign)^(ExpressionStmt)^(BlockStmt)^(IfStmt)^(BlockStmt)_(IfStmt)_(BinaryExpr:notEquals)_(NameExpr0),pconditionname
[0.0000] code,(NameExpr0)^(AssignExpr:assign)^(ExpressionStmt)^(BlockStmt)^(IfStmt)^(BlockStmt)_(IfStmt)_(BinaryExpr:notEquals)_(NameExpr0),value
[0.0000] hashcode,(NameExpr2)^(MethodCallExpr)^(VariableDeclarator)^(VariableDeclarationExpr)^(ExpressionStmt)^(BlockStmt)_(IfStmt)_(BinaryExpr:notEquals)_(NameExpr0),value
[0.0000] code,(VariableDeclaratorId0)^(VariableDeclarator)^(VariableDeclarationExpr)^(ExpressionStmt)^(BlockStmt)_(IfStmt)_(BinaryExpr:notEquals)_(NameExpr0),key
[0.0000] null,(NullLiteralExpr1)^(BinaryExpr:notEquals)^(IfStmt)^(BlockStmt)_(IfStmt)_(BlockStmt)_(ExpressionStmt)_(AssignExpr:assign0)_(NameExpr0),code
[0.0000] null,(NullLiteralExpr1)^(BinaryExpr:notEquals)^(IfStmt)^(BlockStmt)_(IfStmt)_(BlockStmt)_(ExpressionStmt)_(AssignExpr:assign0)_(NameExpr0),code
[0.0000] null,(NullLiteralExpr1)^(BinaryExpr:notEquals)^(IfStmt)^(BlockStmt)_(IfStmt)_(BlockStmt)_(ExpressionStmt)_(AssignExpr:assign0)_(NameExpr0),code
[0.0000] code,(NameExpr0)^(AssignExpr:assign)^(ExpressionStmt)^(BlockStmt)^(IfStmt)^(BlockStmt)_(IfStmt)_(BinaryExpr:notEquals)_(NullLiteralExpr1),null
[0.0000] code,(NameExpr0)^(AssignExpr:assign)^(ExpressionStmt)^(BlockStmt)^(IfStmt)^(BlockStmt)_(IfStmt)_(BinaryExpr:notEquals)_(NullLiteralExpr1),null
[0.0000] code,(NameExpr0)^(AssignExpr:assign)^(ExpressionStmt)^(BlockStmt)^(IfStmt)^(BlockStmt)_(IfStmt)_(BinaryExpr:notEquals)_(NullLiteralExpr1),null
[0.0000] code,(VariableDeclaratorId0)^(VariableDeclarator)^(VariableDeclarationExpr)^(ExpressionStmt)^(BlockStmt)_(IfStmt)_(BinaryExpr:notEquals)_(NullLiteralExpr1),null
[0.0000] code,(VariableDeclaratorId0)^(VariableDeclarator)^(VariableDeclarationExpr)^(ExpressionStmt)^(BlockStmt)_(IfStmt)_(BinaryExpr:notEquals)_(NullLiteralExpr1),null
[0.0000] int,(PrimitiveType0)^(VariableDeclarationExpr)^(ExpressionStmt)^(BlockStmt)_(IfStmt)_(BinaryExpr:notEquals)_(NameExpr0),value
[0.0000] int,(PrimitiveType0)^(VariableDeclarationExpr)_(VariableDeclarator)_(VariableDeclaratorId0),code
[0.0000] null,(NullLiteralExpr1)^(BinaryExpr:notEquals)^(IfStmt)_(BlockStmt)_(ExpressionStmt)_(AssignExpr:assign0)_(NameExpr0),code
[0.0000] null,(NullLiteralExpr1)^(BinaryExpr:notEquals)^(IfStmt)_(BlockStmt)_(ExpressionStmt)_(AssignExpr:assign0)_(NameExpr0),code
[0.0000] null,(NullLiteralExpr1)^(BinaryExpr:notEquals)^(IfStmt)_(BlockStmt)_(ExpressionStmt)_(AssignExpr:assign0)_(NameExpr0),code
[0.0000] code,(VariableDeclaratorId0)^(VariableDeclarator)^(VariableDeclarationExpr)^(ExpressionStmt)^(BlockStmt)_(IfStmt)_(BinaryExpr:notEquals)_(NameExpr0),value
[0.0000] int,(PrimitiveType0)^(VariableDeclarationExpr)^(ExpressionStmt)^(BlockStmt)_(IfStmt)_(BlockStmt)_(ExpressionStmt)_(AssignExpr:assign0)_(NameExpr0),code
[0.0000] int,(PrimitiveType0)^(VariableDeclarationExpr)^(ExpressionStmt)^(BlockStmt)_(IfStmt)_(BlockStmt)_(ExpressionStmt)_(AssignExpr:assign0)_(NameExpr0),code

topk terminals:
[['null', '31'], ['null', '31'], ['null', '31'], ['super', 'hashcode'], ['int', 'hashcode'], ['key', '31'], ['pconditionname', '31'], ['value', '31'], ['31', 'hashcode'], ['31', 'hashcode'], ['31', 'hashcode'], ['code', '31'], ['code', '31'], ['code', '31'], ['METHOD_NAME', 'hashcode'], ['null', 'code'], ['null', 'code'], ['null', 'code'], ['code', 'pconditionname'], ['null', 'hashcode'], ['null', 'hashcode'], ['null', 'hashcode'], ['int', 'super'], ['31', 'pconditionname'], ['code', 'key'], ['31', 'key'], ['int', 'code'], ['int', 'code'], ['int', 'code'], ['code', 'hashcode'], ['code', 'hashcode'], ['code', 'hashcode'], ['key', 'hashcode'], ['31', 'value'], ['int', 'code'], ['code', 'value'], ['value', 'hashcode'], ['METHOD_NAME', 'code'], ['key', 'hashcode'], ['pconditionname', 'hashcode'], ['int', 'METHOD_NAME'], ['int', 'pconditionname'], ['int', 'key'], ['override', 'METHOD_NAME'], ['int', 'value'], ['override', 'int'], ['value', 'hashcode'], ['pconditionname', 'code'], ['31', 'code'], ['31', 'code'], ['31', 'code'], ['pconditionname', 'hashcode'], ['int', 'null'], ['int', 'null'], ['int', 'null'], ['METHOD_NAME', 'pconditionname'], ['value', 'code'], ['key', 'code'], ['METHOD_NAME', 'key'], ['int', 'int'], ['code', 'code'], ['code', 'code'], ['key', 'key'], ['int', 'code'], ['pconditionname', 'code'], ['value', 'code'], ['int', 'hashcode'], ['key', 'code'], ['METHOD_NAME', 'value'], ['key', 'code'], ['key', 'code'], ['pconditionname', 'pconditionname'], ['value', 'code'], ['value', 'code'], ['pconditionname', 'code'], ['value', 'value'], ['null', 'pconditionname'], ['code', 'hashcode'], ['code', 'hashcode'], ['code', 'hashcode'], ['null', 'code'], ['null', 'code'], ['null', 'key'], ['int', 'super'], ['null', 'value'], ['METHOD_NAME', 'null'], ['METHOD_NAME', 'null'], ['METHOD_NAME', 'null'], ['code', 'code'], ['code', 'code'], ['code', 'code'], ['code', 'key'], ['code', 'pconditionname'], ['super', 'key'], ['code', 'value'], ['super', 'null'], ['super', 'null'], ['super', 'value'], ['METHOD_NAME', 'super'], ['METHOD_NAME', 'int'], ['key', 'null'], ['null', 'null'], ['null', 'null'], ['null', 'null'], ['int', 'key'], ['hashcode', 'key'], ['int', 'null'], ['int', 'null'], ['hashcode', 'null'], ['hashcode', 'null'], ['pconditionname', 'null'], ['key', 'null'], ['key', 'null'], ['code', 'hashcode'], ['null', 'pconditionname'], ['null', 'pconditionname'], ['code', 'super'], ['value', 'null'], ['METHOD_NAME', 'code'], ['METHOD_NAME', 'code'], ['METHOD_NAME', 'code'], ['key', 'pconditionname'], ['value', 'null'], ['null', 'value'], ['METHOD_NAME', 'code'], ['value', 'pconditionname'], ['key', 'value'], ['code', 'pconditionname'], ['code', 'pconditionname'], ['code', 'value'], ['hashcode', 'value'], ['code', 'key'], ['null', 'code'], ['null', 'code'], ['null', 'code'], ['code', 'null'], ['code', 'null'], ['code', 'null'], ['code', 'null'], ['code', 'null'], ['int', 'value'], ['int', 'code'], ['null', 'code'], ['null', 'code'], ['null', 'code'], ['code', 'value'], ['int', 'code'], ['int', 'code']]

