
Original sample:

{"has_bug": true, "bug_kind": 1, "bug_kind_name": "VARIABLE_MISUSE", "source_tokens": ["#NEWLINE#", "@", "sig", "(", "(", "(", "(", "(", "(", "(", "(", "H", "/", "(", "(", "(", "(", "(", "(", "H", "/", "'a'", ")", ">>", "'b'", ")", ">>", "'c'", ")", ">>", "'d'", ")", ">>", "'e'", ")", ">>", "'f'", ")", ")", ">>", "[", "'a'", "]", ")", ">>", "[", "'b'", "]", ")", ">>", "[", "'c'", "]", ")", ">>", "[", "'d'", "]", ")", ">>", "[", "'e'", "]", ")", ">>", "[", "'f'", "]", ")", ")", "#NEWLINE#", "def zipWith5(", "fn", ",", "a", ",", "b", ",", "c", ",", "d", ",", "e", ")", ":", "#NEWLINE#", "#INDENT#", "'\\n    zipWith5 :: (a -> b -> c -> d -> e -> f) -> [a] -> [b] -> [c] -> [d] -> [e]\\n                -> [f]\\n\\n    The zipWith5 function takes a function which combines five elements, as\\n    well as five lists and returns a list of their point-wise combination,\\n    analogous to zipWith.\\n    '", "#NEWLINE#", "return", "L", "[", "(", "fn", "(", "*", "s", ")", "for", "s", "in", "zip5", "(", "a", ",", "c", ",", "c", ",", "d", ",", "e", ")", ")", "]"], "error_location": [105], "repair_targets": [76], "repair_candidates": [72, 93, 82, 111, 76, 80, 109, 96, 99, 74, 103, 78, 105, 107], "provenances": [{"datasetProvenance": {"datasetName": "ETHPy150Open", "filepath": "billpmurphy/hask/hask/Data/List.py", "license": "bsd-2-clause", "note": "license: bigquery_api"}}], "txt_file": "eval__VARIABLE_MISUSE__SStuB.txt-00001-of-00300", "js_count": 3467, "results": {"model": "rnn", "prob": {"loc": [[0.17360931634902954, 1.0710360584198497e-05, 4.7400129687957815e-07, 1.4752647103932759e-08, 2.4465984793664575e-08, 4.863192870629973e-08, 6.220901127562684e-08, 7.054914874515816e-08, 6.886001813199982e-08, 6.816814135390814e-08, 6.620371806320691e-08, 0.0044615427032113075, 1.7990434031389668e-08, 4.6610974635541425e-08, 3.588041863622493e-08, 2.9562313486053426e-08, 3.0038165732548805e-08, 4.064349568011494e-08, 3.3411133415484073e-08, 0.08909040689468384, 1.2025536477722198e-07, 1.313115262746578e-06, 3.087949451696659e-09, 3.1522370136372047e-07, 1.72776267959307e-07, 2.610845095674108e-09, 2.0230853436942198e-08, 3.0564724085024864e-08, 5.32507682393657e-09, 7.771811993961819e-08, 7.014172354047332e-08, 9.497322928098129e-09, 1.015759423239615e-07, 1.1447117742591217e-07, 7.0800720841646125e-09, 6.5355179046378e-09, 9.553905755410597e-08, 2.8862621181957593e-09, 1.953066508519896e-08, 6.805845487178885e-07, 7.234270071876381e-09, 1.561586373099999e-06, 5.23764187576603e-09, 1.553524953123997e-08, 5.296527660902939e-07, 3.2364596336265095e-08, 7.743317951280915e-07, 3.095794554042186e-08, 1.50143488752974e-08, 4.744128432321304e-07, 5.9433894250560115e-08, 1.2210509225951682e-07, 6.929758455953561e-08, 1.1587061976570112e-08, 3.6269364045438124e-07, 1.276348768897151e-07, 4.997540941076295e-07, 6.479604763853786e-08, 1.247378378366193e-08, 3.3739607374627667e-07, 3.966315631487305e-08, 6.020319460731116e-07, 5.4778819702505643e-08, 3.857306030141672e-09, 1.8446631884216913e-06, 3.7004273423235645e-08, 7.156189099077892e-07, 1.2626768963741597e-08, 8.254836814103328e-08, 6.562809318211293e-08, 1.0075654444108295e-07, 6.763803406251157e-10, 2.2580850611575443e-07, 7.614443520154168e-10, 1.762372647817756e-07, 3.366828371653696e-09, 4.5685229110858927e-07, 1.1043574943414569e-08, 3.2293235108227236e-07, 2.6534372477016177e-09, 3.0020910912753607e-07, 3.259652547882297e-09, 9.419255206921662e-07, 2.2413383149455512e-08, 5.89632476177826e-09, 1.5774710959703953e-07, 1.889251066700126e-08, 2.482349437116227e-09, 8.410631302524507e-09, 4.2589221038724645e-08, 0.0014700061874464154, 2.146492095178587e-09, 3.53730371216443e-07, 2.125175569744897e-06, 1.419257671386731e-07, 8.373900527658407e-06, 0.01926647685468197, 1.7113394790158054e-07, 2.3689691985850914e-08, 4.474762533845933e-07, 2.422541456326144e-07, 1.68291734325976e-07, 6.223310577979646e-08, 0.0025179737713187933, 7.201737428630395e-09, 0.10627928376197815, 6.291230647548218e-08, 0.1704673171043396, 2.2117724540748895e-08, 0.11323312669992447, 2.2523995113488127e-08, 0.3195630609989166, 1.8511518646846525e-06, 7.251974238897674e-07, 2.935942120529944e-07]], "pointer": [[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.010846611112356186, 0.0, 0.013536333106458187, 0.0, 0.8435117602348328, 0.0, 0.01177585031837225, 0.0, 0.005756569094955921, 0.0, 0.0008277324959635735, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0007074446766637266, 0.0, 0.0, 1.9551809600670822e-05, 0.0, 0.0, 0.11298547685146332, 0.0, 0.0, 0.0, 1.8961092791869305e-05, 0.0, 2.313388449692866e-06, 0.0, 1.6365002011298202e-06, 0.0, 5.499295639310731e-06, 0.0, 4.270794761396246e-06, 0.0, 0.0, 0.0]], "target": [0.8435117602348328]}, "loss": [2.241684675216675, 0.17018143832683563], "acc": [0.0, 0.0, 1.0, 0.0]}, "wrong_error_location": [111]}


Trace of simplified code(s):

{"result": {"time": "2021-02-21 11:32:07.390023", "n_pass": [1, 1, 1], "n_token": 115, "loss": [1.1408004760742188, 0.17018143832683563], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "@", "sig", "(", "(", "(", "(", "(", "(", "(", "(", "H", "/", "(", "(", "(", "(", "(", "(", "H", "/", "'a'", ")", ">>", "'b'", ")", ">>", "'c'", ")", ">>", "'d'", ")", ">>", "'e'", ")", ">>", "'f'", ")", ")", ">>", "[", "'a'", "]", ")", ">>", "[", "'b'", "]", ")", ">>", "[", "'c'", "]", ")", ">>", "[", "'d'", "]", ")", ">>", "[", "'e'", "]", ")", ">>", "[", "'f'", "]", ")", ")", "#NEWLINE#", "def zipWith5(", "fn", ",", "a", ",", "b", ",", "c", ",", "d", ",", "e", ")", ":", "#NEWLINE#", "#INDENT#", "'\\n    zipWith5 :: (a -> b -> c -> d -> e -> f) -> [a] -> [b] -> [c] -> [d] -> [e]\\n                -> [f]\\n\\n    The zipWith5 function takes a function which combines five elements, as\\n    well as five lists and returns a list of their point-wise combination,\\n    analogous to zipWith.\\n    '", "#NEWLINE#", "return", "L", "[", "(", "fn", "(", "*", "s", ")", "for", "s", "in", "zip5", "(", "a", ",", "c", ",", "c", ",", "d", ",", "e", ")", ")", "]"]}}
{"position": {"error_location": 111, "repair_targets": [76], "repair_candidates": [72, 93, 82, 111, 76, 80, 109, 96, 99, 74, 103, 78, 105, 107]}}
{"prediction": {"error_location": 0.3195630609989166, "repair_targets": [0.8435117602348328], "repair_candidates": [0.010846611112356186, 0.013536333106458187, 0.8435117602348328, 0.01177585031837225, 0.005756569094955921, 0.0008277324959635735, 0.0007074446766637266, 1.9551809600670822e-05, 0.11298547685146332, 1.8961092791869305e-05, 2.313388449692866e-06, 1.6365002011298202e-06, 5.499295639310731e-06, 4.270794761396246e-06], "target_probs": 0.8435117602348328}}


{"result": {"time": "2021-02-21 11:32:07.469271", "n_pass": [3, 2, 2], "n_token": 58, "loss": [0.7662047147750854, 0.12485582381486893], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["]", ")", ">>", "[", "'e'", "]", ")", ">>", "[", "'f'", "]", ")", ")", "#NEWLINE#", "def zipWith5(", "fn", ",", "a", ",", "b", ",", "c", ",", "d", ",", "e", ")", ":", "#NEWLINE#", "#INDENT#", "'\\n    zipWith5 :: (a -> b -> c -> d -> e -> f) -> [a] -> [b] -> [c] -> [d] -> [e]\\n                -> [f]\\n\\n    The zipWith5 function takes a function which combines five elements, as\\n    well as five lists and returns a list of their point-wise combination,\\n    analogous to zipWith.\\n    '", "#NEWLINE#", "return", "L", "[", "(", "fn", "(", "*", "s", ")", "for", "s", "in", "zip5", "(", "a", ",", "c", ",", "c", ",", "d", ",", "e", ")", ")", "]"]}}
{"position": {"error_location": 54, "repair_targets": [19], "repair_candidates": [15, 36, 25, 54, 19, 23, 52, 39, 42, 17, 46, 21, 48, 50]}}
{"prediction": {"error_location": 0.46477368474006653, "repair_targets": [0.8826241493225098], "repair_candidates": [0.010027796030044556, 0.013429767452180386, 0.8826241493225098, 0.006426611915230751, 0.0036311917938292027, 0.0007285913452506065, 0.0007558196666650474, 1.920126123877708e-05, 0.08233868330717087, 1.0038798791356385e-05, 1.5046691714815097e-06, 9.712623523228103e-07, 3.4023723856080323e-06, 2.265662487843656e-06], "target_probs": 0.8826241493225098}}


{"result": {"time": "2021-02-21 11:32:07.541937", "n_pass": [10, 3, 3], "n_token": 44, "loss": [0.9118112325668335, 0.0971330776810646], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["def zipWith5(", "fn", ",", "a", ",", "b", ",", "c", ",", "d", ",", "e", ")", ":", "#NEWLINE#", "#INDENT#", "'\\n    zipWith5 :: (a -> b -> c -> d -> e -> f) -> [a] -> [b] -> [c] -> [d] -> [e]\\n                -> [f]\\n\\n    The zipWith5 function takes a function which combines five elements, as\\n    well as five lists and returns a list of their point-wise combination,\\n    analogous to zipWith.\\n    '", "#NEWLINE#", "return", "L", "[", "(", "fn", "(", "*", "s", ")", "for", "s", "in", "zip5", "(", "a", ",", "c", ",", "c", ",", "d", ",", "e", ")", ")", "]"]}}
{"position": {"error_location": 40, "repair_targets": [5], "repair_candidates": [1, 22, 11, 40, 5, 9, 38, 25, 28, 3, 32, 7, 34, 36]}}
{"prediction": {"error_location": 0.4017958343029022, "repair_targets": [0.9074352383613586], "repair_candidates": [0.015431960113346577, 0.022241126745939255, 0.9074352383613586, 0.008985365740954876, 0.004905260168015957, 0.0007893551955930889, 0.0003685244591906667, 1.4744691725354642e-05, 0.039812926203012466, 9.933066394296475e-06, 1.1900045819857041e-06, 6.276753197198559e-07, 2.3655552467971575e-06, 1.4546116062774672e-06], "target_probs": 0.9074352383613586}}


{"result": {"time": "2021-02-21 11:32:07.611398", "n_pass": [22, 4, 4], "n_token": 37, "loss": [0.7662923336029053, 0.046327974647283554], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["def zipWith5(", "fn", ",", "a", ",", "b", ",", "c", ",", "d", ",", "e", ")", ":", "(", "fn", "(", "*", "s", ")", "for", "s", "in", "zip5", "(", "a", ",", "c", ",", "c", ",", "d", ",", "e", ")", ")", "]"]}}
{"position": {"error_location": 33, "repair_targets": [5], "repair_candidates": [1, 15, 11, 33, 5, 9, 31, 18, 21, 3, 25, 7, 27, 29]}}
{"prediction": {"error_location": 0.46473294496536255, "repair_targets": [0.9547287821769714], "repair_candidates": [0.01095779612660408, 0.01246502622961998, 0.9547287821769714, 0.006753950845450163, 0.004950927570462227, 0.0005032767658121884, 0.00018765839922707528, 0.00010649296018527821, 0.009336331859230995, 4.9533191486261785e-06, 7.749440555926412e-07, 4.578143091293896e-07, 2.8091931199014653e-06, 7.4805058147831e-07], "target_probs": 0.9547287821769714}}


{"result": {"time": "2021-02-21 11:32:07.682284", "n_pass": [68, 5, 5], "n_token": 35, "loss": [0.768642008304596, 0.043350085616111755], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["def zipWith5(", "fn", ",", "a", ",", "b", ",", "c", ",", "d", ",", "e", ")", "fn", "(", "*", "s", ")", "for", "s", "in", "zip5", "(", "a", ",", "c", ",", "c", ",", "d", ",", "e", ")", ")", "]"]}}
{"position": {"error_location": 31, "repair_targets": [5], "repair_candidates": [1, 13, 11, 31, 5, 9, 29, 16, 19, 3, 23, 7, 25, 27]}}
{"prediction": {"error_location": 0.46364226937294006, "repair_targets": [0.9575760960578918], "repair_candidates": [0.011855389922857285, 0.013404496014118195, 0.9575760960578918, 0.006723325699567795, 0.004913355689495802, 0.0002260629553347826, 0.0001191068222397007, 0.00013839182793162763, 0.0050324080511927605, 5.9649864851962775e-06, 8.591591154072376e-07, 5.091654884381569e-07, 3.2589684906270122e-06, 7.850481438254064e-07], "target_probs": 0.9575760960578918}}


{"result": {"time": "2021-02-21 11:32:07.815202", "n_pass": [72, 7, 6], "n_token": 33, "loss": [0.779344916343689, 0.02722211554646492], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["def zipWith5(", "fn", ",", "a", ",", "b", ",", "c", ",", "d", ",", "e", ")", "fn", "(", "*", "s", ")", "for", "s", "in", "a", ",", "c", ",", "c", ",", "d", ",", "e", ")", ")", "]"]}}
{"position": {"error_location": 29, "repair_targets": [5], "repair_candidates": [1, 13, 11, 29, 5, 9, 27, 16, 19, 3, 21, 7, 23, 25]}}
{"prediction": {"error_location": 0.4587063491344452, "repair_targets": [0.973145067691803], "repair_candidates": [0.007458778563886881, 0.0057434700429439545, 0.973145067691803, 0.006223054137080908, 0.005330135114490986, 0.0003004363097716123, 8.407654968323186e-05, 0.00015675858594477177, 0.0015477677807211876, 3.406480800549616e-06, 1.1519191502884496e-06, 7.155866228458763e-07, 4.3134496081620455e-06, 8.816753052087734e-07], "target_probs": 0.973145067691803}}


{"result": {"time": "2021-02-21 11:32:07.881523", "n_pass": [78, 8, 7], "n_token": 31, "loss": [0.7688747048377991, 0.022171029821038246], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["def zipWith5(", "fn", ",", "a", ",", "b", ",", "c", ",", "d", ",", "e", ")", "fn", "(", "*", "s", ")", "for", "s", "in", "a", ",", "c", ",", "c", ",", "d", ",", "e", ")"]}}
{"position": {"error_location": 29, "repair_targets": [5], "repair_candidates": [1, 13, 11, 29, 5, 9, 27, 16, 19, 3, 21, 7, 23, 25]}}
{"prediction": {"error_location": 0.463534414768219, "repair_targets": [0.9780729413032532], "repair_candidates": [0.006590493023395538, 0.004418377298861742, 0.9780729413032532, 0.00461622653529048, 0.0038787703961133957, 0.0002180495939683169, 7.575481868116185e-05, 0.00014582613948732615, 0.0019761081784963608, 3.5676246170623926e-06, 1.006984007290157e-06, 4.982617269888578e-07, 1.9003282432095148e-06, 4.450746473594336e-07], "target_probs": 0.9780729413032532}}


{"result": {"time": "2021-02-21 11:32:07.946249", "n_pass": [79, 9, 8], "n_token": 30, "loss": [0.935393750667572, 0.02543131448328495], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["fn", ",", "a", ",", "b", ",", "c", ",", "d", ",", "e", ")", "fn", "(", "*", "s", ")", "for", "s", "in", "a", ",", "c", ",", "c", ",", "d", ",", "e", ")"]}}
{"position": {"error_location": 28, "repair_targets": [4], "repair_candidates": [0, 12, 10, 28, 4, 8, 26, 15, 18, 2, 20, 6, 22, 24]}}
{"prediction": {"error_location": 0.3924313187599182, "repair_targets": [0.97488933801651], "repair_candidates": [0.0030639488250017166, 0.00351416296325624, 0.97488933801651, 0.008697403594851494, 0.0073791248723864555, 0.000388092128559947, 7.930156425572932e-05, 0.0001399103639414534, 0.0018421309068799019, 3.0305807285913033e-06, 9.063252264240873e-07, 4.4012745092913974e-07, 1.7032587038556812e-06, 4.294966515772103e-07], "target_probs": 0.97488933801651}}


{"result": {"time": "2021-02-21 11:32:08.010846", "n_pass": [81, 10, 9], "n_token": 29, "loss": [0.927386999130249, 0.03971181437373161], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["fn", "a", ",", "b", ",", "c", ",", "d", ",", "e", ")", "fn", "(", "*", "s", ")", "for", "s", "in", "a", ",", "c", ",", "c", ",", "d", ",", "e", ")"]}}
{"position": {"error_location": 27, "repair_targets": [3], "repair_candidates": [0, 11, 9, 27, 3, 7, 25, 14, 17, 1, 19, 5, 21, 23]}}
{"prediction": {"error_location": 0.3955860137939453, "repair_targets": [0.9610663652420044], "repair_candidates": [0.002934747841209173, 0.006050182040780783, 0.9610663652420044, 0.010478715412318707, 0.01500472892075777, 0.0007789374212734401, 0.0001556277711642906, 0.00019490353588480502, 0.003326153615489602, 4.226235887472285e-06, 1.4435928505918127e-06, 6.930543463568029e-07, 2.7969247184955748e-06, 5.921092451899312e-07], "target_probs": 0.9610663652420044}}


{"result": {"time": "2021-02-21 11:32:08.141880", "n_pass": [126, 12, 10], "n_token": 28, "loss": [0.9063258171081543, 0.18037262558937073], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["fn", "a", "b", ",", "c", ",", "d", ",", "e", ")", "fn", "(", "*", "s", ")", "for", "s", "in", "a", ",", "c", ",", "c", ",", "d", ",", "e", ")"]}}
{"position": {"error_location": 26, "repair_targets": [2], "repair_candidates": [0, 10, 8, 26, 2, 6, 24, 13, 16, 1, 18, 4, 20, 22]}}
{"prediction": {"error_location": 0.40400588512420654, "repair_targets": [0.8349590301513672], "repair_candidates": [0.01453133299946785, 0.018969949334859848, 0.8349590301513672, 0.04051411524415016, 0.07121311128139496, 0.005132551770657301, 0.0006418924313038588, 0.001953564817085862, 0.012015258893370628, 2.6497651560930535e-05, 9.967046025849413e-06, 4.863943559030304e-06, 2.3052138203638606e-05, 4.903414719592547e-06], "target_probs": 0.8349590301513672}}


{"result": {"time": "2021-02-21 11:32:08.268858", "n_pass": [130, 14, 11], "n_token": 27, "loss": [0.9700093269348145, 0.21274779736995697], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["fn", "a", "b", ",", "c", "d", ",", "e", ")", "fn", "(", "*", "s", ")", "for", "s", "in", "a", ",", "c", ",", "c", ",", "d", ",", "e", ")"]}}
{"position": {"error_location": 25, "repair_targets": [2], "repair_candidates": [0, 9, 7, 25, 2, 5, 23, 12, 15, 1, 17, 4, 19, 21]}}
{"prediction": {"error_location": 0.37907952070236206, "repair_targets": [0.8083599805831909], "repair_candidates": [0.01878836378455162, 0.023520546033978462, 0.8083599805831909, 0.026509474962949753, 0.08959846198558807, 0.008377423509955406, 0.000908202026039362, 0.004588731098920107, 0.019211959093809128, 6.20826831436716e-05, 1.8989594536833465e-05, 8.810430699668359e-06, 3.8200680137379095e-05, 8.767732651904225e-06], "target_probs": 0.8083599805831909}}


{"result": {"time": "2021-02-21 11:32:08.331696", "n_pass": [132, 15, 12], "n_token": 26, "loss": [1.071286916732788, 0.14158955216407776], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["fn", "a", "b", ",", "c", "d", "e", ")", "fn", "(", "*", "s", ")", "for", "s", "in", "a", ",", "c", ",", "c", ",", "d", ",", "e", ")"]}}
{"position": {"error_location": 24, "repair_targets": [2], "repair_candidates": [0, 8, 6, 24, 2, 5, 22, 11, 14, 1, 16, 4, 18, 20]}}
{"prediction": {"error_location": 0.3425673246383667, "repair_targets": [0.8679774403572083], "repair_candidates": [0.03176484629511833, 0.04047942906618118, 0.8679774403572083, 0.01667722873389721, 0.0057488102465868, 0.0011040883837267756, 0.001781216822564602, 0.004144130274653435, 0.02997652068734169, 0.00019548609270714223, 3.679687142721377e-05, 1.6328480342053808e-05, 8.132916264003143e-05, 1.641895687498618e-05], "target_probs": 0.8679774403572083}}


{"result": {"time": "2021-02-21 11:32:08.396882", "n_pass": [134, 16, 13], "n_token": 25, "loss": [1.0526870489120483, 0.11467335373163223], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["fn", "a", "b", ",", "c", "d", "e", "fn", "(", "*", "s", ")", "for", "s", "in", "a", ",", "c", ",", "c", ",", "d", ",", "e", ")"]}}
{"position": {"error_location": 23, "repair_targets": [2], "repair_candidates": [0, 7, 6, 23, 2, 5, 21, 10, 13, 1, 15, 4, 17, 19]}}
{"prediction": {"error_location": 0.3489987254142761, "repair_targets": [0.8916573524475098], "repair_candidates": [0.028532734140753746, 0.036636412143707275, 0.8916573524475098, 0.014860827475786209, 0.0029047857969999313, 0.0004708803608082235, 0.0010631741024553776, 0.004915242549031973, 0.01871110312640667, 0.0001423544017598033, 2.602660060802009e-05, 1.184487518912647e-05, 5.644400152959861e-05, 1.0793843102874234e-05], "target_probs": 0.8916573524475098}}


{"result": {"time": "2021-02-21 11:32:08.458702", "n_pass": [136, 17, 14], "n_token": 24, "loss": [0.9548075199127197, 0.15206438302993774], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["fn", "a", "b", ",", "c", "d", "e", "fn", "*", "s", ")", "for", "s", "in", "a", ",", "c", ",", "c", ",", "d", ",", "e", ")"]}}
{"position": {"error_location": 22, "repair_targets": [2], "repair_candidates": [0, 7, 6, 22, 2, 5, 20, 9, 12, 1, 14, 4, 16, 18]}}
{"prediction": {"error_location": 0.384886234998703, "repair_targets": [0.8589329719543457], "repair_candidates": [0.033674947917461395, 0.0378907211124897, 0.8589329719543457, 0.021096820011734962, 0.005275336094200611, 0.0021333866752684116, 0.001609847298823297, 0.010789255611598492, 0.028148246929049492, 0.00027159310411661863, 4.626953523256816e-05, 2.217971268692054e-05, 8.965675078798085e-05, 1.878160946944263e-05], "target_probs": 0.8589329719543457}}


{"result": {"time": "2021-02-21 11:32:08.520201", "n_pass": [137, 18, 15], "n_token": 23, "loss": [0.9538460373878479, 0.13292346894741058], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["fn", "a", "b", ",", "c", "d", "e", "fn", "s", ")", "for", "s", "in", "a", ",", "c", ",", "c", ",", "d", ",", "e", ")"]}}
{"position": {"error_location": 21, "repair_targets": [2], "repair_candidates": [0, 7, 6, 21, 2, 5, 19, 8, 11, 1, 13, 4, 15, 17]}}
{"prediction": {"error_location": 0.38525640964508057, "repair_targets": [0.8755320906639099], "repair_candidates": [0.027323657646775246, 0.03527229279279709, 0.8755320906639099, 0.0213005430996418, 0.003870748681947589, 0.0008191222441382706, 0.000700538803357631, 0.003524162108078599, 0.03105146810412407, 0.000400163495214656, 6.848909106338397e-05, 2.644390770001337e-05, 9.337141091236845e-05, 1.6951447832980193e-05], "target_probs": 0.8755320906639099}}


{"result": {"time": "2021-02-21 11:32:08.581457", "n_pass": [139, 19, 16], "n_token": 22, "loss": [0.816139817237854, 0.19253860414028168], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["fn", "a", "b", ",", "c", "d", "e", "fn", "s", "for", "s", "in", "a", ",", "c", ",", "c", ",", "d", ",", "e", ")"]}}
{"position": {"error_location": 20, "repair_targets": [2], "repair_candidates": [0, 7, 6, 20, 2, 5, 18, 8, 10, 1, 12, 4, 14, 16]}}
{"prediction": {"error_location": 0.4421350955963135, "repair_targets": [0.8248624801635742], "repair_candidates": [0.03185953199863434, 0.03400008752942085, 0.8248624801635742, 0.020309627056121826, 0.0053858826868236065, 0.0013360960874706507, 0.0007032222929410636, 0.010447926819324493, 0.0688956081867218, 0.0011989681515842676, 0.00030427129240706563, 0.00013176888751331717, 0.0005275864969007671, 3.688927972689271e-05], "target_probs": 0.8248624801635742}}


{"result": {"time": "2021-02-21 11:32:08.701925", "n_pass": [142, 21, 17], "n_token": 21, "loss": [0.552584707736969, 0.18246614933013916], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["fn", "a", "b", ",", "c", "d", "e", "fn", "s", "for", "s", "a", ",", "c", ",", "c", ",", "d", ",", "e", ")"]}}
{"position": {"error_location": 19, "repair_targets": [2], "repair_candidates": [0, 7, 6, 19, 2, 5, 17, 8, 10, 1, 11, 4, 13, 15]}}
{"prediction": {"error_location": 0.5754604339599609, "repair_targets": [0.8332128524780273], "repair_candidates": [0.05973917618393898, 0.058265868574380875, 0.8332128524780273, 0.0205378495156765, 0.005219326354563236, 0.0008044724236242473, 0.00034165987744927406, 0.0010799147421494126, 0.010814907029271126, 0.005504926200956106, 0.0008550866041332483, 0.0003278111689724028, 0.0030464043375104666, 0.0002496932866051793], "target_probs": 0.8332128524780273}}


{"result": {"time": "2021-02-21 11:32:08.824286", "n_pass": [146, 23, 18], "n_token": 20, "loss": [0.4933205246925354, 0.28635066747665405], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["fn", "a", "b", ",", "c", "d", "e", "fn", "s", "for", "s", "a", ",", "c", "c", ",", "d", ",", "e", ")"]}}
{"position": {"error_location": 18, "repair_targets": [2], "repair_candidates": [0, 7, 6, 18, 2, 5, 16, 8, 10, 1, 11, 4, 13, 14]}}
{"prediction": {"error_location": 0.6105955243110657, "repair_targets": [0.7509992122650146], "repair_candidates": [0.08269769698381424, 0.07209403067827225, 0.7509992122650146, 0.02820148877799511, 0.006758963223546743, 0.0014774075243622065, 0.0007102275849319994, 0.001631600665859878, 0.026865631341934204, 0.01556968130171299, 0.001682425383478403, 0.00016745258471928537, 0.010991453193128109, 0.00015278971113730222], "target_probs": 0.7509992122650146}}


{"result": {"time": "2021-02-21 11:32:08.883776", "n_pass": [148, 24, 19], "n_token": 19, "loss": [0.09426982700824738, 0.32129859924316406], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["fn", "a", "b", ",", "c", "d", "e", "fn", "s", "for", "s", "a", ",", "c", "c", "d", ",", "e", ")"]}}
{"position": {"error_location": 17, "repair_targets": [2], "repair_candidates": [0, 7, 6, 17, 2, 5, 15, 8, 10, 1, 11, 4, 13, 14]}}
{"prediction": {"error_location": 0.9100371599197388, "repair_targets": [0.7252066731452942], "repair_candidates": [0.09557007253170013, 0.08041059970855713, 0.7252066731452942, 0.027438635006546974, 0.005991057492792606, 0.0007087359554134309, 0.0003194179153069854, 0.0008170090732164681, 0.047236133366823196, 0.013764774426817894, 0.0009972547413781285, 0.0006223641685210168, 0.000631180009804666, 0.00028606015257537365], "target_probs": 0.7252066731452942}}


{"result": {"time": "2021-02-21 11:32:08.942722", "n_pass": [150, 25, 20], "n_token": 18, "loss": [0.19309166073799133, 0.3448061943054199], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["fn", "a", "b", ",", "c", "d", "e", "fn", "s", "for", "s", "a", ",", "c", "c", "d", "e", ")"]}}
{"position": {"error_location": 16, "repair_targets": [2], "repair_candidates": [0, 7, 6, 16, 2, 5, 15, 8, 10, 1, 11, 4, 13, 14]}}
{"prediction": {"error_location": 0.8244063854217529, "repair_targets": [0.7083576321601868], "repair_candidates": [0.11245303601026535, 0.08572138100862503, 0.7083576321601868, 0.01902271993458271, 0.003245430300012231, 0.00020365291857160628, 0.00018556005670689046, 0.0004563914844766259, 0.045487914234399796, 0.012120910920202732, 0.0006409616325981915, 0.0010325642069801688, 0.010857448913156986, 0.00021430403285194188], "target_probs": 0.7083576321601868}}


{"result": {"time": "2021-02-21 11:32:09.120263", "n_pass": [162, 28, 21], "n_token": 17, "loss": [0.31971967220306396, 0.2577751576900482], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["fn", "a", "b", ",", "c", "d", "e", "fn", "s", "s", "a", ",", "c", "c", "d", "e", ")"]}}
{"position": {"error_location": 15, "repair_targets": [2], "repair_candidates": [0, 7, 6, 15, 2, 5, 14, 8, 9, 1, 10, 4, 12, 13]}}
{"prediction": {"error_location": 0.7263526320457458, "repair_targets": [0.7727689743041992], "repair_candidates": [0.10422995686531067, 0.07722655683755875, 0.7727689743041992, 0.02291046269237995, 0.00390721345320344, 0.0004739289579447359, 0.0003775714139919728, 0.0021210145205259323, 0.0009100650204345584, 0.0012201790232211351, 0.002024382119998336, 0.0009467710624448955, 0.01071751769632101, 0.00016536909970454872], "target_probs": 0.7727689743041992}}


{"result": {"time": "2021-02-21 11:32:09.178486", "n_pass": [165, 29, 22], "n_token": 16, "loss": [0.1118641123175621, 0.2509022057056427], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["fn", "a", "b", ",", "c", "d", "e", "fn", "s", "s", "a", "c", "c", "d", "e", ")"]}}
{"position": {"error_location": 14, "repair_targets": [2], "repair_candidates": [0, 7, 6, 14, 2, 5, 13, 8, 9, 1, 10, 4, 11, 12]}}
{"prediction": {"error_location": 0.8941658735275269, "repair_targets": [0.778098464012146], "repair_candidates": [0.11500130593776703, 0.08090769499540329, 0.778098464012146, 0.01678774319589138, 0.0018132749246433377, 0.00010154375195270404, 0.0001530830777483061, 0.0003992985002696514, 0.0002203799522249028, 0.00020828572451137006, 0.0004420084005687386, 0.0020718916784971952, 0.0037573433946818113, 3.764346183743328e-05], "target_probs": 0.778098464012146}}


{"result": {"time": "2021-02-21 11:32:09.235980", "n_pass": [170, 30, 23], "n_token": 15, "loss": [1.0569097995758057, 0.3398042619228363], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["fn", "a", "b", ",", "c", "d", "e", "fn", "s", "s", "a", "c", "c", "d", "e"]}}
{"position": {"error_location": 14, "repair_targets": [2], "repair_candidates": [0, 7, 6, 14, 2, 5, 13, 8, 9, 1, 10, 4, 11, 12]}}
{"prediction": {"error_location": 0.3475280702114105, "repair_targets": [0.7119096517562866], "repair_candidates": [0.17189396917819977, 0.10284633189439774, 0.7119096517562866, 0.0101036187261343, 0.0010063963709399104, 7.430010009557009e-05, 0.0001621792616788298, 0.00040490165702067316, 0.0002461366239003837, 0.0001537347852718085, 0.00025593818281777203, 0.0005191016243770719, 0.0003805636370088905, 4.3168256524950266e-05], "target_probs": 0.7119096517562866}}




Minimal simplified tokens:

['fn', 'a', 'b', ',', 'c', 'd', 'e', 'fn', 's', 's', 'a', 'c', 'c', 'd', 'e']
