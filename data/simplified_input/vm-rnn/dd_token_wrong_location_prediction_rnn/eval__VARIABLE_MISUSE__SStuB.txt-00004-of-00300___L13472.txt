
Original sample:

{"has_bug": true, "bug_kind": 1, "bug_kind_name": "VARIABLE_MISUSE", "source_tokens": ["#NEWLINE#", "def bind_processor(", "self", ",", "dialect", ")", ":", "#NEWLINE#", "#INDENT#", "if", "(", "self", ".", "convert_unicode", "or", "dialect", ".", "convert_unicode", ")", ":", "#NEWLINE#", "#INDENT#", "if", "(", "dialect", ".", "supports_unicode_binds", "and", "(", "self", ".", "convert_unicode", "!=", "'force'", ")", ")", ":", "#NEWLINE#", "#INDENT#", "if", "self", ".", "_warn_on_bytestring", ":", "#NEWLINE#", "#INDENT#", "def process(", "value", ")", ":", "#NEWLINE#", "#INDENT#", "if", "isinstance", "(", "value", ",", "util", ".", "binary_type", ")", ":", "#NEWLINE#", "#INDENT#", "util", ".", "warn", "(", "'Unicode type received non-unicodebind param value.'", ")", "#NEWLINE#", "#UNINDENT#", "return", "value", "#NEWLINE#", "#UNINDENT#", "return", "process", "#NEWLINE#", "#UNINDENT#", "else", ":", "#NEWLINE#", "#INDENT#", "return", "None", "#NEWLINE#", "#UNINDENT#", "#UNINDENT#", "else", ":", "#NEWLINE#", "#INDENT#", "encoder", "=", "codecs", ".", "getencoder", "(", "self", ".", "encoding", ")", "#NEWLINE#", "warn_on_bytestring", "=", "self", ".", "_warn_on_bytestring", "#NEWLINE#", "def process(", "value", ")", ":", "#NEWLINE#", "#INDENT#", "if", "isinstance", "(", "value", ",", "util", ".", "text_type", ")", ":", "#NEWLINE#", "#INDENT#", "return", "encoder", "(", "value", ",", "self", ".", "unicode_error", ")", "[", "0", "]", "#NEWLINE#", "#UNINDENT#", "else", ":", "#NEWLINE#", "#INDENT#", "if", "(", "warn_on_bytestring", "and", "(", "value", "is not", "None", ")", ")", ":", "#NEWLINE#", "#INDENT#", "util", ".", "warn", "(", "'Unicode type received non-unicode bind param value'", ")", "#NEWLINE#", "#UNINDENT#", "#UNINDENT#", "return", "value", "#NEWLINE#", "#UNINDENT#", "#UNINDENT#", "return", "process", "#NEWLINE#", "#UNINDENT#", "else", ":", "#NEWLINE#", "#INDENT#", "return", "None"], "error_location": [99], "repair_targets": [4, 15, 24], "repair_candidates": [2, 11, 29, 40, 99, 106, 133, 77, 174, 93, 129, 104, 148, 4, 15, 24], "provenances": [{"datasetProvenance": {"datasetName": "ETHPy150Open", "filepath": "goFrendiAsgard/kokoropy/kokoropy/packages/sqlalchemy/sql/sqltypes.py", "license": "mit", "note": "license: bigquery_api"}}], "txt_file": "eval__VARIABLE_MISUSE__SStuB.txt-00004-of-00300", "js_count": 13472, "results": {"model": "rnn", "prob": {"loc": [[0.24843601882457733, 1.034947558764543e-06, 7.17151488061063e-06, 1.7848536870701537e-08, 8.16378133094986e-07, 1.1797837373705988e-08, 2.1847307962730156e-08, 9.988251576942275e-07, 1.954544615045961e-07, 1.591448040016985e-07, 6.646472229476785e-06, 0.694499135017395, 4.045591310841701e-07, 4.297243449968846e-08, 3.398378566998872e-06, 0.0017385658575221896, 7.22863759961001e-08, 3.6276048831496155e-08, 2.3253154779467877e-07, 1.6024222304622526e-07, 2.226127890025964e-06, 1.2491877896536607e-06, 1.6006627845399635e-07, 4.922204084323312e-07, 0.017087841406464577, 4.759155913802715e-08, 5.949892667445056e-08, 8.257599404259963e-08, 9.663413891303207e-08, 6.1825030570616946e-06, 1.754237533013736e-09, 4.24163948409273e-09, 2.5913010404110537e-08, 5.8840523564640534e-08, 4.380077101018287e-08, 2.4067679404993214e-08, 1.4723345032052748e-07, 4.34989090081217e-07, 5.397010340857378e-07, 1.843872965423543e-08, 4.9043763283407316e-05, 2.6954252163591264e-09, 9.095534210246115e-07, 6.862892973913404e-07, 2.434509042359423e-06, 3.812720450468987e-08, 1.8579865354695357e-05, 9.407178731635213e-05, 1.0947096740210327e-07, 2.0437003200868276e-08, 2.6408545750200574e-07, 1.2172905883289786e-07, 2.1259795701666917e-08, 8.201753871617257e-07, 1.998184870899422e-06, 0.0012018908746540546, 3.992344943526405e-08, 9.666406413089135e-07, 8.151278763079972e-09, 1.344884648091238e-09, 1.1873537886231134e-07, 6.739655589171889e-08, 2.5643439016675984e-07, 1.255976300740258e-08, 2.43065070293369e-08, 5.8522955370676755e-09, 7.12157444127115e-09, 5.9811915420482364e-09, 7.125729098333977e-06, 1.8823016034730244e-06, 1.0270713346471894e-07, 9.827969549291993e-09, 6.32755430274301e-08, 0.0001012043867376633, 9.159577984974021e-08, 2.5103254586156254e-08, 6.470766322763666e-08, 0.0029049294535070658, 7.11317511559173e-08, 1.213743871630868e-06, 7.809464364072483e-08, 8.756888973948662e-07, 2.3573790031150565e-07, 1.9699145425988718e-08, 6.645645385106036e-07, 6.740211802025442e-07, 2.9716005656155176e-07, 9.495541775095262e-08, 1.2575787877722178e-06, 2.999799519898261e-08, 3.70925079096196e-07, 4.480239681470266e-07, 1.057379872548836e-08, 1.0480458456640918e-07, 3.740385778883137e-09, 5.899372581552598e-07, 3.6606320197307696e-09, 2.0851777193797716e-08, 5.148446646785487e-08, 0.0012485786573961377, 4.3438470243017946e-07, 5.504223281604936e-07, 1.1206635974758683e-07, 2.0617346763174282e-07, 1.1142844158484877e-07, 5.3287383394717835e-09, 7.858470780774951e-05, 4.357952221312189e-08, 7.335308396250184e-07, 6.305170785481096e-08, 1.3214987120591104e-05, 5.4835334594827145e-05, 3.1301983227649544e-08, 2.3636809842741968e-08, 2.3370182589133037e-07, 2.1938974725799198e-07, 2.6711877154639296e-08, 5.943895189375326e-07, 2.6157966203754768e-05, 0.0017092775087803602, 9.932274558366316e-09, 6.154272824687723e-08, 1.68474112438588e-09, 2.359486606096084e-09, 7.004244650943292e-08, 3.499910050663857e-08, 2.837522572463058e-07, 2.2654472076055754e-08, 7.944179003516183e-08, 4.6987807422738115e-07, 2.263434595306535e-08, 0.0005202103639021516, 1.5806985942390384e-08, 5.6771004892652854e-05, 3.910205936819011e-09, 2.2981184955028766e-08, 3.2534777005821525e-07, 2.8876804947230994e-08, 1.0254065273329616e-05, 1.1199734473166245e-07, 2.9842269100299745e-07, 1.9597493974288227e-06, 2.6510930339895822e-08, 3.059165010199649e-07, 2.47634318384371e-07, 1.697175946446805e-07, 2.449621305800065e-08, 2.883340073367435e-07, 0.015467568300664425, 1.5901425953757098e-08, 4.4948416189072304e-07, 0.0015830561751499772, 5.30886040905898e-07, 4.6790518126726965e-07, 1.2952774852692528e-07, 5.2933266658783396e-08, 8.242131599445202e-08, 4.0043579474513535e-07, 2.6129802321861462e-08, 4.150185972662257e-08, 7.979573446448285e-09, 1.04383790500151e-08, 1.851891262560912e-08, 9.738720109453425e-05, 8.655977580929175e-06, 3.484784656393458e-07, 5.6314725327411e-08, 1.1636859476027439e-08, 1.2905920243611035e-07, 0.0006133897113613784, 1.077228191093127e-07, 6.2746728701768e-08, 6.440735234036765e-08, 3.1207317618964225e-08, 0.012302656657993793, 8.011832619558845e-08, 2.573159463281627e-06, 5.9415121711481333e-08, 1.7426117437935318e-06, 1.494624939368805e-07, 1.8062271678331854e-08, 1.4068937161937356e-06, 1.9855335722240852e-06]], "pointer": [[0.0, 0.0, 0.17451807856559753, 0.0, 0.6846583485603333, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.07822220772504807, 0.0, 0.0, 0.0, 0.03386490046977997, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.00014387771079782397, 0.0, 0.0, 0.0, 0.0, 8.345957030542195e-05, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 5.302893623593263e-05, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0007333324756473303, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0031090378761291504, 0.0, 0.0, 0.0, 0.0, 0.0, 0.00014334289880935103, 0.0, 0.0, 0.0, 0.0, 0.010129745118319988, 0.0, 9.807623428059742e-05, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0004408023087307811, 0.0, 0.0, 0.0, 0.0002038625389104709, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.012396437115967274, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.001201484352350235, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]], "target": [0.7186671495437622]}, "loss": [6.685749530792236, 0.3303569555282593], "acc": [0.0, 0.0, 1.0, 0.0]}, "wrong_error_location": [11]}


Trace of simplified code(s):

{"result": {"time": "2021-02-21 11:54:07.242395", "n_pass": [1, 1, 1], "n_token": 183, "loss": [0.36456432938575745, 0.3303569555282593], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def bind_processor(", "self", ",", "dialect", ")", ":", "#NEWLINE#", "#INDENT#", "if", "(", "self", ".", "convert_unicode", "or", "dialect", ".", "convert_unicode", ")", ":", "#NEWLINE#", "#INDENT#", "if", "(", "dialect", ".", "supports_unicode_binds", "and", "(", "self", ".", "convert_unicode", "!=", "'force'", ")", ")", ":", "#NEWLINE#", "#INDENT#", "if", "self", ".", "_warn_on_bytestring", ":", "#NEWLINE#", "#INDENT#", "def process(", "value", ")", ":", "#NEWLINE#", "#INDENT#", "if", "isinstance", "(", "value", ",", "util", ".", "binary_type", ")", ":", "#NEWLINE#", "#INDENT#", "util", ".", "warn", "(", "'Unicode type received non-unicodebind param value.'", ")", "#NEWLINE#", "#UNINDENT#", "return", "value", "#NEWLINE#", "#UNINDENT#", "return", "process", "#NEWLINE#", "#UNINDENT#", "else", ":", "#NEWLINE#", "#INDENT#", "return", "None", "#NEWLINE#", "#UNINDENT#", "#UNINDENT#", "else", ":", "#NEWLINE#", "#INDENT#", "encoder", "=", "codecs", ".", "getencoder", "(", "self", ".", "encoding", ")", "#NEWLINE#", "warn_on_bytestring", "=", "self", ".", "_warn_on_bytestring", "#NEWLINE#", "def process(", "value", ")", ":", "#NEWLINE#", "#INDENT#", "if", "isinstance", "(", "value", ",", "util", ".", "text_type", ")", ":", "#NEWLINE#", "#INDENT#", "return", "encoder", "(", "value", ",", "self", ".", "unicode_error", ")", "[", "0", "]", "#NEWLINE#", "#UNINDENT#", "else", ":", "#NEWLINE#", "#INDENT#", "if", "(", "warn_on_bytestring", "and", "(", "value", "is not", "None", ")", ")", ":", "#NEWLINE#", "#INDENT#", "util", ".", "warn", "(", "'Unicode type received non-unicode bind param value'", ")", "#NEWLINE#", "#UNINDENT#", "#UNINDENT#", "return", "value", "#NEWLINE#", "#UNINDENT#", "#UNINDENT#", "return", "process", "#NEWLINE#", "#UNINDENT#", "else", ":", "#NEWLINE#", "#INDENT#", "return", "None"]}}
{"position": {"error_location": 11, "repair_targets": [4, 15, 24], "repair_candidates": [2, 11, 29, 40, 99, 106, 133, 77, 174, 93, 129, 104, 148, 4, 15, 24]}}
{"prediction": {"error_location": 0.694499135017395, "repair_targets": [0.6846583485603333, 0.03386490046977997, 0.00014387771079782397], "repair_candidates": [0.17451807856559753, 0.6846583485603333, 0.07822220772504807, 0.03386490046977997, 0.00014387771079782397, 8.345957030542195e-05, 5.302893623593263e-05, 0.0007333324756473303, 0.0031090378761291504, 0.00014334289880935103, 0.010129745118319988, 9.807623428059742e-05, 0.0004408023087307811, 0.0002038625389104709, 0.012396437115967274, 0.001201484352350235], "target_probs": 0.7186671495437622}}


{"result": {"time": "2021-02-21 11:54:07.665806", "n_pass": [49, 4, 2], "n_token": 172, "loss": [0.45113205909729004, 0.3469023108482361], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def bind_processor(", "self", ",", "dialect", ")", ":", "#NEWLINE#", "#INDENT#", "if", "(", "self", ".", "convert_unicode", "or", "dialect", ".", "convert_unicode", ")", ":", "#NEWLINE#", "#INDENT#", "if", "(", "dialect", ".", "supports_unicode_binds", "and", "(", "self", ".", "convert_unicode", "!=", "'force'", ")", ")", ":", "#NEWLINE#", "#INDENT#", "if", "self", ".", "_warn_on_bytestring", ":", "#NEWLINE#", "#INDENT#", "def process(", "value", ")", ":", "#NEWLINE#", "#INDENT#", "if", "isinstance", "(", "warn", "(", "'Unicode type received non-unicodebind param value.'", ")", "#NEWLINE#", "#UNINDENT#", "return", "value", "#NEWLINE#", "#UNINDENT#", "return", "process", "#NEWLINE#", "#UNINDENT#", "else", ":", "#NEWLINE#", "#INDENT#", "return", "None", "#NEWLINE#", "#UNINDENT#", "#UNINDENT#", "else", ":", "#NEWLINE#", "#INDENT#", "encoder", "=", "codecs", ".", "getencoder", "(", "self", ".", "encoding", ")", "#NEWLINE#", "warn_on_bytestring", "=", "self", ".", "_warn_on_bytestring", "#NEWLINE#", "def process(", "value", ")", ":", "#NEWLINE#", "#INDENT#", "if", "isinstance", "(", "value", ",", "util", ".", "text_type", ")", ":", "#NEWLINE#", "#INDENT#", "return", "encoder", "(", "value", ",", "self", ".", "unicode_error", ")", "[", "0", "]", "#NEWLINE#", "#UNINDENT#", "else", ":", "#NEWLINE#", "#INDENT#", "if", "(", "warn_on_bytestring", "and", "(", "value", "is not", "None", ")", ")", ":", "#NEWLINE#", "#INDENT#", "util", ".", "warn", "(", "'Unicode type received non-unicode bind param value'", ")", "#NEWLINE#", "#UNINDENT#", "#UNINDENT#", "return", "value", "#NEWLINE#", "#UNINDENT#", "#UNINDENT#", "return", "process", "#NEWLINE#", "#UNINDENT#", "else", ":", "#NEWLINE#", "#INDENT#", "return", "None"]}}
{"position": {"error_location": 11, "repair_targets": [4, 15, 24], "repair_candidates": [2, 11, 29, 40, 88, 95, 122, 66, 163, 82, 118, 93, 137, 4, 15, 24]}}
{"prediction": {"error_location": 0.6369066834449768, "repair_targets": [0.6765281558036804, 0.03018762730062008, 0.00015858441474847496], "repair_candidates": [0.17164121568202972, 0.6765281558036804, 0.09567637741565704, 0.03018762730062008, 0.00015858441474847496, 9.528607915854082e-05, 5.941598647041246e-05, 0.0008575215470045805, 0.0038906042464077473, 0.00011527538299560547, 0.007148092146962881, 6.205488898558542e-05, 0.0004389153909869492, 0.00017786156968213618, 0.011875980533659458, 0.0010870121186599135], "target_probs": 0.7068743705749512}}


{"result": {"time": "2021-02-21 11:54:07.802670", "n_pass": [50, 5, 3], "n_token": 161, "loss": [0.318175733089447, 0.3929879069328308], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def bind_processor(", "self", ",", "dialect", ")", ":", "#NEWLINE#", "#INDENT#", "if", "(", "self", ".", "convert_unicode", "or", "dialect", ".", "convert_unicode", ")", ":", "#NEWLINE#", "#INDENT#", "if", "(", "dialect", ".", "supports_unicode_binds", "and", "(", "self", ".", "convert_unicode", "!=", "'force'", ")", ")", ":", "#NEWLINE#", "#INDENT#", "if", "self", ".", "_warn_on_bytestring", ":", "#NEWLINE#", "#INDENT#", "def process(", "value", ")", ":", "#NEWLINE#", "#INDENT#", "if", "isinstance", "(", "process", "#NEWLINE#", "#UNINDENT#", "else", ":", "#NEWLINE#", "#INDENT#", "return", "None", "#NEWLINE#", "#UNINDENT#", "#UNINDENT#", "else", ":", "#NEWLINE#", "#INDENT#", "encoder", "=", "codecs", ".", "getencoder", "(", "self", ".", "encoding", ")", "#NEWLINE#", "warn_on_bytestring", "=", "self", ".", "_warn_on_bytestring", "#NEWLINE#", "def process(", "value", ")", ":", "#NEWLINE#", "#INDENT#", "if", "isinstance", "(", "value", ",", "util", ".", "text_type", ")", ":", "#NEWLINE#", "#INDENT#", "return", "encoder", "(", "value", ",", "self", ".", "unicode_error", ")", "[", "0", "]", "#NEWLINE#", "#UNINDENT#", "else", ":", "#NEWLINE#", "#INDENT#", "if", "(", "warn_on_bytestring", "and", "(", "value", "is not", "None", ")", ")", ":", "#NEWLINE#", "#INDENT#", "util", ".", "warn", "(", "'Unicode type received non-unicode bind param value'", ")", "#NEWLINE#", "#UNINDENT#", "#UNINDENT#", "return", "value", "#NEWLINE#", "#UNINDENT#", "#UNINDENT#", "return", "process", "#NEWLINE#", "#UNINDENT#", "else", ":", "#NEWLINE#", "#INDENT#", "return", "None"]}}
{"position": {"error_location": 11, "repair_targets": [4, 15, 24], "repair_candidates": [2, 11, 29, 40, 77, 84, 111, 55, 152, 71, 107, 82, 126, 4, 15, 24]}}
{"prediction": {"error_location": 0.7274749279022217, "repair_targets": [0.6388944387435913, 0.035999421030282974, 0.0001430781849194318], "repair_candidates": [0.2329038381576538, 0.6388944387435913, 0.07218104600906372, 0.035999421030282974, 0.0001430781849194318, 9.776448860066012e-05, 5.69772491871845e-05, 0.007166552823036909, 0.0013574064942076802, 5.98675396759063e-05, 0.004438423551619053, 2.7547117497306317e-05, 0.0002104872983181849, 8.477224037051201e-05, 0.005805098917335272, 0.0005732503486797214], "target_probs": 0.6750369071960449}}


{"result": {"time": "2021-02-21 11:54:07.935112", "n_pass": [54, 6, 4], "n_token": 149, "loss": [0.43340951204299927, 0.3368785083293915], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def bind_processor(", "self", ",", "dialect", ")", ":", "#NEWLINE#", "#INDENT#", "if", "(", "self", ".", "convert_unicode", "or", "dialect", ".", "convert_unicode", ")", ":", "#NEWLINE#", "#INDENT#", "if", "(", "dialect", ".", "supports_unicode_binds", "and", "(", "self", ".", "convert_unicode", "!=", "'force'", ")", ")", ":", "#NEWLINE#", "#INDENT#", "if", "self", ".", "_warn_on_bytestring", ":", "#NEWLINE#", "#INDENT#", "def process(", "value", ")", ":", "#NEWLINE#", "#INDENT#", "if", "isinstance", "(", "process", "#NEWLINE#", "#UNINDENT#", "else", ":", "#NEWLINE#", "#INDENT#", "return", "None", "#NEWLINE#", "#UNINDENT#", "#UNINDENT#", "else", ":", "#NEWLINE#", "#INDENT#", "encoder", "=", "codecs", ".", "getencoder", "(", "self", ".", "encoding", ")", "#NEWLINE#", "warn_on_bytestring", "=", "self", ".", "_warn_on_bytestring", "#NEWLINE#", "def process(", "text_type", ")", ":", "#NEWLINE#", "#INDENT#", "return", "encoder", "(", "value", ",", "self", ".", "unicode_error", ")", "[", "0", "]", "#NEWLINE#", "#UNINDENT#", "else", ":", "#NEWLINE#", "#INDENT#", "if", "(", "warn_on_bytestring", "and", "(", "value", "is not", "None", ")", ")", ":", "#NEWLINE#", "#INDENT#", "util", ".", "warn", "(", "'Unicode type received non-unicode bind param value'", ")", "#NEWLINE#", "#UNINDENT#", "#UNINDENT#", "return", "value", "#NEWLINE#", "#UNINDENT#", "#UNINDENT#", "return", "process", "#NEWLINE#", "#UNINDENT#", "else", ":", "#NEWLINE#", "#INDENT#", "return", "None"]}}
{"position": {"error_location": 11, "repair_targets": [4, 15, 24], "repair_candidates": [2, 11, 29, 40, 77, 84, 99, 55, 140, 71, 95, 82, 114, 4, 15, 24]}}
{"prediction": {"error_location": 0.648294985294342, "repair_targets": [0.6834363341331482, 0.030402664095163345, 0.00015657026960980147], "repair_candidates": [0.1640857607126236, 0.6834363341331482, 0.09146072715520859, 0.030402664095163345, 0.00015657026960980147, 9.081471944227815e-05, 6.275714986259118e-05, 0.008082900196313858, 0.0036205670330673456, 6.839643174316734e-05, 0.011956083588302135, 0.00014035121421329677, 0.0001645551237743348, 0.00012061611778335646, 0.005706605035811663, 0.0004444077785592526], "target_probs": 0.7139955759048462}}


{"result": {"time": "2021-02-21 11:54:08.059047", "n_pass": [56, 7, 5], "n_token": 137, "loss": [0.4073035418987274, 0.28401312232017517], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def bind_processor(", "self", ",", "dialect", ")", ":", "#NEWLINE#", "#INDENT#", "if", "(", "self", ".", "convert_unicode", "or", "dialect", ".", "convert_unicode", ")", ":", "#NEWLINE#", "#INDENT#", "if", "(", "dialect", ".", "supports_unicode_binds", "and", "(", "self", ".", "convert_unicode", "!=", "'force'", ")", ")", ":", "#NEWLINE#", "#INDENT#", "if", "self", ".", "_warn_on_bytestring", ":", "#NEWLINE#", "#INDENT#", "def process(", "value", ")", ":", "#NEWLINE#", "#INDENT#", "if", "isinstance", "(", "process", "#NEWLINE#", "#UNINDENT#", "else", ":", "#NEWLINE#", "#INDENT#", "return", "None", "#NEWLINE#", "#UNINDENT#", "#UNINDENT#", "else", ":", "#NEWLINE#", "#INDENT#", "encoder", "=", "codecs", ".", "getencoder", "(", "self", ".", "encoding", ")", "#NEWLINE#", "warn_on_bytestring", "=", "self", ".", "_warn_on_bytestring", "#NEWLINE#", "def process(", "text_type", ")", ":", "#NEWLINE#", "#INDENT#", "return", "encoder", "(", "value", ",", "self", ".", "(", "warn_on_bytestring", "and", "(", "value", "is not", "None", ")", ")", ":", "#NEWLINE#", "#INDENT#", "util", ".", "warn", "(", "'Unicode type received non-unicode bind param value'", ")", "#NEWLINE#", "#UNINDENT#", "#UNINDENT#", "return", "value", "#NEWLINE#", "#UNINDENT#", "#UNINDENT#", "return", "process", "#NEWLINE#", "#UNINDENT#", "else", ":", "#NEWLINE#", "#INDENT#", "return", "None"]}}
{"position": {"error_location": 11, "repair_targets": [4, 15, 24], "repair_candidates": [2, 11, 29, 40, 77, 84, 99, 55, 128, 71, 95, 82, 102, 4, 15, 24]}}
{"prediction": {"error_location": 0.6654422283172607, "repair_targets": [0.7229000329971313, 0.02967982552945614, 0.0001768935180734843], "repair_candidates": [0.13120076060295105, 0.7229000329971313, 0.07649348676204681, 0.02967982552945614, 0.0001768935180734843, 9.438954293727875e-05, 7.779347652103752e-05, 0.010729804635047913, 0.006514857988804579, 0.00016052299179136753, 0.014263159595429897, 0.0002623749023769051, 0.00023035162303131074, 8.188818901544437e-05, 0.006427518092095852, 0.0007062617805786431], "target_probs": 0.7527567744255066}}


{"result": {"time": "2021-02-21 11:54:08.177334", "n_pass": [58, 8, 6], "n_token": 125, "loss": [0.1483202874660492, 0.187423974275589], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def bind_processor(", "self", ",", "dialect", ")", ":", "#NEWLINE#", "#INDENT#", "if", "(", "self", ".", "convert_unicode", "or", "dialect", ".", "convert_unicode", ")", ":", "#NEWLINE#", "#INDENT#", "if", "(", "dialect", ".", "supports_unicode_binds", "and", "(", "self", ".", "convert_unicode", "!=", "'force'", ")", ")", ":", "#NEWLINE#", "#INDENT#", "if", "self", ".", "_warn_on_bytestring", ":", "#NEWLINE#", "#INDENT#", "def process(", "value", ")", ":", "#NEWLINE#", "#INDENT#", "if", "isinstance", "(", "process", "#NEWLINE#", "#UNINDENT#", "else", ":", "#NEWLINE#", "#INDENT#", "return", "None", "#NEWLINE#", "#UNINDENT#", "#UNINDENT#", "else", ":", "#NEWLINE#", "#INDENT#", "encoder", "=", "codecs", ".", "getencoder", "(", "self", ".", "encoding", ")", "#NEWLINE#", "warn_on_bytestring", "=", "self", ".", "_warn_on_bytestring", "#NEWLINE#", "def process(", "text_type", ")", ":", "#NEWLINE#", "#INDENT#", "return", "encoder", "(", "value", ",", "self", ".", "(", "warn_on_bytestring", "and", "(", "value", "is not", "None", ")", ")", ":", "#NEWLINE#", "#INDENT#", "#UNINDENT#", "#UNINDENT#", "return", "process", "#NEWLINE#", "#UNINDENT#", "else", ":", "#NEWLINE#", "#INDENT#", "return", "None"]}}
{"position": {"error_location": 11, "repair_targets": [4, 15, 24], "repair_candidates": [2, 11, 29, 40, 77, 84, 99, 55, 116, 71, 95, 82, 102, 4, 15, 24]}}
{"prediction": {"error_location": 0.8621546626091003, "repair_targets": [0.8075634241104126, 0.02136066183447838, 0.00016810836677905172], "repair_candidates": [0.09518542885780334, 0.8075634241104126, 0.03672979399561882, 0.02136066183447838, 0.00016810836677905172, 8.420144149567932e-05, 4.760109004564583e-05, 0.013875391334295273, 0.004419275093823671, 0.00012654595775529742, 0.011599576100707054, 0.0001731921365717426, 0.00031120938365347683, 0.00015135474677663296, 0.007895437069237232, 0.0003086828510276973], "target_probs": 0.8290921449661255}}


{"result": {"time": "2021-02-21 11:54:08.290509", "n_pass": [64, 9, 7], "n_token": 114, "loss": [0.756644606590271, 0.233603835105896], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def bind_processor(", "self", ",", "dialect", ")", ":", "#NEWLINE#", "#INDENT#", "if", "(", "self", ".", "convert_unicode", "or", "dialect", ".", "convert_unicode", ")", ":", "#NEWLINE#", "#INDENT#", "if", "(", "dialect", ".", "supports_unicode_binds", "and", "(", "self", ".", "convert_unicode", "!=", "'force'", ")", ")", ":", "#NEWLINE#", "#INDENT#", "if", "self", ".", "_warn_on_bytestring", ":", "process", "#NEWLINE#", "#UNINDENT#", "else", ":", "#NEWLINE#", "#INDENT#", "return", "None", "#NEWLINE#", "#UNINDENT#", "#UNINDENT#", "else", ":", "#NEWLINE#", "#INDENT#", "encoder", "=", "codecs", ".", "getencoder", "(", "self", ".", "encoding", ")", "#NEWLINE#", "warn_on_bytestring", "=", "self", ".", "_warn_on_bytestring", "#NEWLINE#", "def process(", "text_type", ")", ":", "#NEWLINE#", "#INDENT#", "return", "encoder", "(", "value", ",", "self", ".", "(", "warn_on_bytestring", "and", "(", "value", "is not", "None", ")", ")", ":", "#NEWLINE#", "#INDENT#", "#UNINDENT#", "#UNINDENT#", "return", "process", "#NEWLINE#", "#UNINDENT#", "else", ":", "#NEWLINE#", "#INDENT#", "return", "None"]}}
{"position": {"error_location": 11, "repair_targets": [4, 15, 24], "repair_candidates": [2, 11, 29, 40, 66, 73, 88, 44, 105, 60, 84, 71, 91, 4, 15, 24]}}
{"prediction": {"error_location": 0.4692382514476776, "repair_targets": [0.7709492444992065, 0.020358309149742126, 0.00036782489041797817], "repair_candidates": [0.05689167603850365, 0.7709492444992065, 0.12856519222259521, 0.020358309149742126, 0.00036782489041797817, 0.0001538042415631935, 5.438923108158633e-05, 0.00046820295392535627, 0.007937895134091377, 9.646362741477787e-05, 0.01013338565826416, 9.627798135625198e-05, 0.00035784830106422305, 0.00010602291149552912, 0.0032732486724853516, 0.00019029219402000308], "target_probs": 0.7916753888130188}}


{"result": {"time": "2021-02-21 11:54:08.403615", "n_pass": [96, 10, 8], "n_token": 108, "loss": [0.8408511281013489, 0.22744326293468475], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def bind_processor(", "self", ",", "dialect", ")", ":", "#NEWLINE#", "#INDENT#", "if", "(", "self", ".", "convert_unicode", "or", "dialect", ".", "convert_unicode", ")", ":", "#NEWLINE#", "#INDENT#", "if", "(", "dialect", ".", "supports_unicode_binds", "and", "(", "self", ".", "convert_unicode", "!=", "'force'", ")", ")", ":", "#NEWLINE#", "#INDENT#", "if", "self", ".", "_warn_on_bytestring", ":", "process", "#NEWLINE#", "#UNINDENT#", "else", "#UNINDENT#", "#UNINDENT#", "else", ":", "#NEWLINE#", "#INDENT#", "encoder", "=", "codecs", ".", "getencoder", "(", "self", ".", "encoding", ")", "#NEWLINE#", "warn_on_bytestring", "=", "self", ".", "_warn_on_bytestring", "#NEWLINE#", "def process(", "text_type", ")", ":", "#NEWLINE#", "#INDENT#", "return", "encoder", "(", "value", ",", "self", ".", "(", "warn_on_bytestring", "and", "(", "value", "is not", "None", ")", ")", ":", "#NEWLINE#", "#INDENT#", "#UNINDENT#", "#UNINDENT#", "return", "process", "#NEWLINE#", "#UNINDENT#", "else", ":", "#NEWLINE#", "#INDENT#", "return", "None"]}}
{"position": {"error_location": 11, "repair_targets": [4, 15, 24], "repair_candidates": [2, 11, 29, 40, 60, 67, 82, 44, 99, 54, 78, 65, 85, 4, 15, 24]}}
{"prediction": {"error_location": 0.4313432276248932, "repair_targets": [0.774493396282196, 0.021654833108186722, 0.00041936946217902005], "repair_candidates": [0.048168081790208817, 0.774493396282196, 0.1256030946969986, 0.021654833108186722, 0.00041936946217902005, 0.00016638616216368973, 6.769386527594179e-05, 0.0005147953052073717, 0.011377807706594467, 0.00012094363773940131, 0.013124808669090271, 0.00012289790902286768, 0.0004703212471213192, 0.0001288172643398866, 0.0033473095390945673, 0.00021942165039945394], "target_probs": 0.7965676188468933}}


{"result": {"time": "2021-02-21 11:54:08.723219", "n_pass": [104, 13, 9], "n_token": 102, "loss": [0.8261972069740295, 0.2019844651222229], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def bind_processor(", "self", ",", "dialect", ")", ":", "#NEWLINE#", "#INDENT#", "if", "(", "self", ".", "convert_unicode", "or", "dialect", ".", "convert_unicode", ")", ":", "#NEWLINE#", "#INDENT#", "if", "(", "dialect", ".", "supports_unicode_binds", "and", "(", "self", ".", "convert_unicode", "!=", "'force'", ")", ")", ":", "#NEWLINE#", "#INDENT#", "if", "self", ".", "_warn_on_bytestring", ":", "process", "#NEWLINE#", "#UNINDENT#", "else", "#UNINDENT#", "#UNINDENT#", "else", ":", "#NEWLINE#", "#INDENT#", "encoder", "=", "codecs", ".", "getencoder", "(", "self", ".", "encoding", ")", "#NEWLINE#", "warn_on_bytestring", "=", "self", ".", "_warn_on_bytestring", "#NEWLINE#", "def process(", "text_type", ")", ":", "#NEWLINE#", "#INDENT#", "return", "encoder", "(", "value", ",", "self", ".", "(", "warn_on_bytestring", "and", "(", "value", "is not", "#UNINDENT#", "#UNINDENT#", "return", "process", "#NEWLINE#", "#UNINDENT#", "else", ":", "#NEWLINE#", "#INDENT#", "return", "None"]}}
{"position": {"error_location": 11, "repair_targets": [4, 15, 24], "repair_candidates": [2, 11, 29, 40, 60, 67, 82, 44, 93, 54, 78, 65, 85, 4, 15, 24]}}
{"prediction": {"error_location": 0.43771058320999146, "repair_targets": [0.7933576107025146, 0.023253031075000763, 0.0004969856236129999], "repair_candidates": [0.031072312965989113, 0.7933576107025146, 0.11767011880874634, 0.023253031075000763, 0.0004969856236129999, 0.00014711645781062543, 6.101271355873905e-05, 0.0006714599439874291, 0.012665665708482265, 0.000148527164128609, 0.018351322039961815, 0.00012867532495874912, 0.00038550887256860733, 0.00022519413323607296, 0.001009586500003934, 0.0003558785538189113], "target_probs": 0.817107617855072}}


{"result": {"time": "2021-02-21 11:54:08.826984", "n_pass": [106, 14, 10], "n_token": 96, "loss": [0.7568881511688232, 0.16592377424240112], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def bind_processor(", "self", ",", "dialect", ")", ":", "#NEWLINE#", "#INDENT#", "if", "(", "self", ".", "convert_unicode", "or", "dialect", ".", "convert_unicode", ")", ":", "#NEWLINE#", "#INDENT#", "if", "(", "dialect", ".", "supports_unicode_binds", "and", "(", "self", ".", "convert_unicode", "!=", "'force'", ")", ")", ":", "#NEWLINE#", "#INDENT#", "if", "self", ".", "_warn_on_bytestring", ":", "process", "#NEWLINE#", "#UNINDENT#", "else", "#UNINDENT#", "#UNINDENT#", "else", ":", "#NEWLINE#", "#INDENT#", "encoder", "=", "codecs", ".", "getencoder", "(", "self", ".", "encoding", ")", "#NEWLINE#", "warn_on_bytestring", "=", "self", ".", "_warn_on_bytestring", "#NEWLINE#", "def process(", "text_type", ")", ":", "#NEWLINE#", "#INDENT#", "return", "encoder", "(", "value", ",", "self", ".", "(", "warn_on_bytestring", "and", "(", "value", "is not", "#UNINDENT#", "#UNINDENT#", "return", "process", "#NEWLINE#", "#UNINDENT#"]}}
{"position": {"error_location": 11, "repair_targets": [4, 15, 24], "repair_candidates": [2, 11, 29, 40, 60, 67, 82, 44, 93, 54, 78, 65, 85, 4, 15, 24]}}
{"prediction": {"error_location": 0.469123899936676, "repair_targets": [0.8284698724746704, 0.01821320131421089, 0.00042772991582751274], "repair_candidates": [0.01954231597483158, 0.8284698724746704, 0.1041763499379158, 0.01821320131421089, 0.00042772991582751274, 0.0001492587325628847, 5.88013936067e-05, 0.0003759823739528656, 0.01103229820728302, 0.00010475786257302389, 0.0155878197401762, 0.00011470997560536489, 0.0004949293797835708, 0.0004204863798804581, 0.0007101946976035833, 0.0001212042334373109], "target_probs": 0.8471108078956604}}


{"result": {"time": "2021-02-21 11:54:09.637868", "n_pass": [164, 22, 11], "n_token": 93, "loss": [0.01327415369451046, 0.004876982886344194], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def bind_processor(", "self", ",", "dialect", ")", ":", "#NEWLINE#", "#INDENT#", "if", "(", "self", "dialect", ".", "convert_unicode", ")", ":", "#NEWLINE#", "#INDENT#", "if", "(", "dialect", ".", "supports_unicode_binds", "and", "(", "self", ".", "convert_unicode", "!=", "'force'", ")", ")", ":", "#NEWLINE#", "#INDENT#", "if", "self", ".", "_warn_on_bytestring", ":", "process", "#NEWLINE#", "#UNINDENT#", "else", "#UNINDENT#", "#UNINDENT#", "else", ":", "#NEWLINE#", "#INDENT#", "encoder", "=", "codecs", ".", "getencoder", "(", "self", ".", "encoding", ")", "#NEWLINE#", "warn_on_bytestring", "=", "self", ".", "_warn_on_bytestring", "#NEWLINE#", "def process(", "text_type", ")", ":", "#NEWLINE#", "#INDENT#", "return", "encoder", "(", "value", ",", "self", ".", "(", "warn_on_bytestring", "and", "(", "value", "is not", "#UNINDENT#", "#UNINDENT#", "return", "process", "#NEWLINE#", "#UNINDENT#"]}}
{"position": {"error_location": 11, "repair_targets": [4, 12, 21], "repair_candidates": [2, 11, 26, 37, 57, 64, 79, 41, 90, 51, 75, 62, 82, 4, 12, 21]}}
{"prediction": {"error_location": 0.9868133068084717, "repair_targets": [0.9948563575744629, 0.00015196343883872032, 0.0001265635364688933], "repair_candidates": [0.00176026183180511, 0.9948563575744629, 0.0011864369735121727, 0.00015196343883872032, 0.0001265635364688933, 3.0140645321807824e-05, 1.0202319572272245e-05, 0.00019554499885998666, 0.0005466807051561773, 1.4719007594976574e-05, 0.0007508068229071796, 1.6285357560263947e-05, 4.667909524869174e-05, 6.564727664226666e-05, 0.00022305887250695378, 1.8693184756557457e-05], "target_probs": 0.9951348900794983}}


{"result": {"time": "2021-02-21 11:54:09.738561", "n_pass": [166, 23, 12], "n_token": 90, "loss": [0.6883533000946045, 0.047349557280540466], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def bind_processor(", "self", ",", "dialect", ")", ":", "#NEWLINE#", "#INDENT#", "if", "(", "self", "dialect", ".", "convert_unicode", "#INDENT#", "if", "(", "dialect", ".", "supports_unicode_binds", "and", "(", "self", ".", "convert_unicode", "!=", "'force'", ")", ")", ":", "#NEWLINE#", "#INDENT#", "if", "self", ".", "_warn_on_bytestring", ":", "process", "#NEWLINE#", "#UNINDENT#", "else", "#UNINDENT#", "#UNINDENT#", "else", ":", "#NEWLINE#", "#INDENT#", "encoder", "=", "codecs", ".", "getencoder", "(", "self", ".", "encoding", ")", "#NEWLINE#", "warn_on_bytestring", "=", "self", ".", "_warn_on_bytestring", "#NEWLINE#", "def process(", "text_type", ")", ":", "#NEWLINE#", "#INDENT#", "return", "encoder", "(", "value", ",", "self", ".", "(", "warn_on_bytestring", "and", "(", "value", "is not", "#UNINDENT#", "#UNINDENT#", "return", "process", "#NEWLINE#", "#UNINDENT#"]}}
{"position": {"error_location": 11, "repair_targets": [4, 12, 18], "repair_candidates": [2, 11, 23, 34, 54, 61, 76, 38, 87, 48, 72, 59, 79, 4, 12, 18]}}
{"prediction": {"error_location": 0.5024027228355408, "repair_targets": [0.95196533203125, 0.0010703064035624266, 0.000718307972420007], "repair_candidates": [0.015781408175826073, 0.95196533203125, 0.01850050501525402, 0.0010703064035624266, 0.000718307972420007, 0.00016114303434733301, 5.151329969521612e-05, 0.00020330895495135337, 0.003718405030667782, 0.00010079852654598653, 0.006692905910313129, 7.752408419037238e-05, 0.00020721310283988714, 0.00031423105974681675, 0.00037586662801913917, 6.111775292083621e-05], "target_probs": 0.9537539482116699}}


{"result": {"time": "2021-02-21 11:54:10.035472", "n_pass": [171, 26, 13], "n_token": 87, "loss": [0.8089087009429932, 0.07444209605455399], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def bind_processor(", "self", ",", "dialect", ")", ":", "#NEWLINE#", "#INDENT#", "if", "(", "self", "dialect", ".", "convert_unicode", "#INDENT#", "if", "(", "dialect", ".", "supports_unicode_binds", "and", "(", "self", ".", "convert_unicode", "!=", ":", "#NEWLINE#", "#INDENT#", "if", "self", ".", "_warn_on_bytestring", ":", "process", "#NEWLINE#", "#UNINDENT#", "else", "#UNINDENT#", "#UNINDENT#", "else", ":", "#NEWLINE#", "#INDENT#", "encoder", "=", "codecs", ".", "getencoder", "(", "self", ".", "encoding", ")", "#NEWLINE#", "warn_on_bytestring", "=", "self", ".", "_warn_on_bytestring", "#NEWLINE#", "def process(", "text_type", ")", ":", "#NEWLINE#", "#INDENT#", "return", "encoder", "(", "value", ",", "self", ".", "(", "warn_on_bytestring", "and", "(", "value", "is not", "#UNINDENT#", "#UNINDENT#", "return", "process", "#NEWLINE#", "#UNINDENT#"]}}
{"position": {"error_location": 11, "repair_targets": [4, 12, 18], "repair_candidates": [2, 11, 23, 31, 51, 58, 73, 35, 84, 45, 69, 56, 76, 4, 12, 18]}}
{"prediction": {"error_location": 0.4453437626361847, "repair_targets": [0.9256856441497803, 0.0018486311892047524, 0.0007269532070495188], "repair_candidates": [0.02854153886437416, 0.9256856441497803, 0.03253111615777016, 0.0018486311892047524, 0.0007269532070495188, 0.0003544907958712429, 8.122086001094431e-05, 0.000123322315630503, 0.0029521046672016382, 0.00011362208897480741, 0.005938914138823748, 6.23044979874976e-05, 0.00022160809021443129, 0.00033271461143158376, 0.0004165461868979037, 6.928358925506473e-05], "target_probs": 0.9282612204551697}}


{"result": {"time": "2021-02-21 11:54:10.133357", "n_pass": [172, 27, 14], "n_token": 84, "loss": [0.9196968078613281, 0.1656683087348938], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def bind_processor(", "self", ",", "dialect", ")", ":", "#NEWLINE#", "#INDENT#", "if", "(", "self", "dialect", ".", "convert_unicode", "#INDENT#", "if", "(", "dialect", ".", "supports_unicode_binds", "and", "(", "self", ".", "convert_unicode", "!=", "if", "self", ".", "_warn_on_bytestring", ":", "process", "#NEWLINE#", "#UNINDENT#", "else", "#UNINDENT#", "#UNINDENT#", "else", ":", "#NEWLINE#", "#INDENT#", "encoder", "=", "codecs", ".", "getencoder", "(", "self", ".", "encoding", ")", "#NEWLINE#", "warn_on_bytestring", "=", "self", ".", "_warn_on_bytestring", "#NEWLINE#", "def process(", "text_type", ")", ":", "#NEWLINE#", "#INDENT#", "return", "encoder", "(", "value", ",", "self", ".", "(", "warn_on_bytestring", "and", "(", "value", "is not", "#UNINDENT#", "#UNINDENT#", "return", "process", "#NEWLINE#", "#UNINDENT#"]}}
{"position": {"error_location": 11, "repair_targets": [4, 12, 18], "repair_candidates": [2, 11, 23, 28, 48, 55, 70, 32, 81, 42, 66, 53, 73, 4, 12, 18]}}
{"prediction": {"error_location": 0.3986399471759796, "repair_targets": [0.8432711958885193, 0.003737581195309758, 0.00031846121419221163], "repair_candidates": [0.07402952760457993, 0.8432711958885193, 0.07034028321504593, 0.003737581195309758, 0.00031846121419221163, 0.00032263362663798034, 3.405121969990432e-05, 5.6001088523771614e-05, 0.0034077242016792297, 7.083130913088098e-05, 0.0036508936900645494, 5.235979188000783e-05, 0.00016353785758838058, 0.00022706737217959017, 0.0002727205283008516, 4.521598020801321e-05], "target_probs": 0.8473272323608398}}


{"result": {"time": "2021-02-21 11:54:10.229525", "n_pass": [175, 28, 15], "n_token": 81, "loss": [0.6739795207977295, 0.25315770506858826], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def bind_processor(", "self", ",", "dialect", ")", ":", "#NEWLINE#", "#INDENT#", "if", "(", "self", "dialect", ".", "convert_unicode", "#INDENT#", "if", "(", "dialect", ".", "supports_unicode_binds", "and", "(", "self", ".", "convert_unicode", "!=", "if", "self", ".", "_warn_on_bytestring", ":", "process", "#UNINDENT#", "#UNINDENT#", "else", ":", "#NEWLINE#", "#INDENT#", "encoder", "=", "codecs", ".", "getencoder", "(", "self", ".", "encoding", ")", "#NEWLINE#", "warn_on_bytestring", "=", "self", ".", "_warn_on_bytestring", "#NEWLINE#", "def process(", "text_type", ")", ":", "#NEWLINE#", "#INDENT#", "return", "encoder", "(", "value", ",", "self", ".", "(", "warn_on_bytestring", "and", "(", "value", "is not", "#UNINDENT#", "#UNINDENT#", "return", "process", "#NEWLINE#", "#UNINDENT#"]}}
{"position": {"error_location": 11, "repair_targets": [4, 12, 18], "repair_candidates": [2, 11, 23, 28, 45, 52, 67, 32, 78, 39, 63, 50, 70, 4, 12, 18]}}
{"prediction": {"error_location": 0.5096762180328369, "repair_targets": [0.7708316445350647, 0.005187186878174543, 0.00032656328403390944], "repair_candidates": [0.08360245823860168, 0.7708316445350647, 0.07252617180347443, 0.005187186878174543, 0.00032656328403390944, 0.000406744540669024, 8.782820805208758e-05, 3.861808727378957e-05, 0.0448533333837986, 0.0002829119621310383, 0.020588872954249382, 0.00013579042570199817, 0.0005167387425899506, 0.0004730249347630888, 0.00011741834168788046, 2.4706927433726378e-05], "target_probs": 0.776345431804657}}


{"result": {"time": "2021-02-21 11:54:10.419634", "n_pass": [177, 30, 16], "n_token": 78, "loss": [0.602778971195221, 0.1904100626707077], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def bind_processor(", "self", ",", "dialect", ")", ":", "#NEWLINE#", "#INDENT#", "if", "(", "self", "dialect", ".", "convert_unicode", "#INDENT#", "if", "(", "dialect", ".", "supports_unicode_binds", "and", "(", "self", ".", "convert_unicode", "!=", "if", "self", ".", "_warn_on_bytestring", ":", "process", "#UNINDENT#", "#UNINDENT#", "else", "encoder", "=", "codecs", ".", "getencoder", "(", "self", ".", "encoding", ")", "#NEWLINE#", "warn_on_bytestring", "=", "self", ".", "_warn_on_bytestring", "#NEWLINE#", "def process(", "text_type", ")", ":", "#NEWLINE#", "#INDENT#", "return", "encoder", "(", "value", ",", "self", ".", "(", "warn_on_bytestring", "and", "(", "value", "is not", "#UNINDENT#", "#UNINDENT#", "return", "process", "#NEWLINE#", "#UNINDENT#"]}}
{"position": {"error_location": 11, "repair_targets": [4, 12, 18], "repair_candidates": [2, 11, 23, 28, 42, 49, 64, 32, 75, 36, 60, 47, 67, 4, 12, 18]}}
{"prediction": {"error_location": 0.5472885966300964, "repair_targets": [0.8221640586853027, 0.004102741833776236, 0.0003532906121108681], "repair_candidates": [0.06579487770795822, 0.8221640586853027, 0.059009891003370285, 0.004102741833776236, 0.0003532906121108681, 0.0003946970100514591, 7.291600195458159e-05, 2.8094793378841132e-05, 0.023750443011522293, 0.00023075516219250858, 0.02278057113289833, 0.00016730926290620118, 0.000513232487719506, 0.00047187990276142955, 0.000137871946208179, 2.7368965675123036e-05], "target_probs": 0.8266201019287109}}


{"result": {"time": "2021-02-21 11:54:10.512513", "n_pass": [179, 31, 17], "n_token": 75, "loss": [0.632368266582489, 0.25013938546180725], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def bind_processor(", "self", ",", "dialect", ")", ":", "#NEWLINE#", "#INDENT#", "if", "(", "self", "dialect", ".", "convert_unicode", "#INDENT#", "if", "(", "dialect", ".", "supports_unicode_binds", "and", "(", "self", ".", "convert_unicode", "!=", "if", "self", ".", "_warn_on_bytestring", ":", "process", "#UNINDENT#", "#UNINDENT#", "else", "encoder", "=", "codecs", "self", ".", "encoding", ")", "#NEWLINE#", "warn_on_bytestring", "=", "self", ".", "_warn_on_bytestring", "#NEWLINE#", "def process(", "text_type", ")", ":", "#NEWLINE#", "#INDENT#", "return", "encoder", "(", "value", ",", "self", ".", "(", "warn_on_bytestring", "and", "(", "value", "is not", "#UNINDENT#", "#UNINDENT#", "return", "process", "#NEWLINE#", "#UNINDENT#"]}}
{"position": {"error_location": 11, "repair_targets": [4, 12, 18], "repair_candidates": [2, 11, 23, 28, 39, 46, 61, 32, 72, 36, 57, 44, 64, 4, 12, 18]}}
{"prediction": {"error_location": 0.5313320159912109, "repair_targets": [0.7746666073799133, 0.003692253492772579, 0.0003333558270242065], "repair_candidates": [0.06332147866487503, 0.7746666073799133, 0.05552494525909424, 0.003692253492772579, 0.0003333558270242065, 0.0004429187101777643, 9.417307592229918e-05, 2.3764743673382327e-05, 0.06101103127002716, 0.0002837016654666513, 0.03931563347578049, 0.0001629017060622573, 0.0005183768225833774, 0.0004487744008656591, 0.00013214505452197045, 2.7972642783424817e-05], "target_probs": 0.7786922454833984}}


{"result": {"time": "2021-02-21 11:54:10.604237", "n_pass": [183, 32, 18], "n_token": 72, "loss": [0.8913493156433105, 0.3745769262313843], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def bind_processor(", "self", ",", "dialect", ")", ":", "#NEWLINE#", "#INDENT#", "if", "(", "self", "dialect", ".", "convert_unicode", "#INDENT#", "if", "(", "dialect", ".", "supports_unicode_binds", "and", "(", "self", ".", "convert_unicode", "!=", "if", "self", ".", "_warn_on_bytestring", ":", "process", "#UNINDENT#", "#UNINDENT#", "else", "encoder", "=", "codecs", "self", ".", "encoding", ")", "#NEWLINE#", "warn_on_bytestring", "=", "self", ".", "text_type", ")", ":", "#NEWLINE#", "#INDENT#", "return", "encoder", "(", "value", ",", "self", ".", "(", "warn_on_bytestring", "and", "(", "value", "is not", "#UNINDENT#", "#UNINDENT#", "return", "process", "#NEWLINE#", "#UNINDENT#"]}}
{"position": {"error_location": 11, "repair_targets": [4, 12, 18], "repair_candidates": [2, 11, 23, 28, 39, 46, 58, 32, 69, 36, 54, 44, 61, 4, 12, 18]}}
{"prediction": {"error_location": 0.410101979970932, "repair_targets": [0.6836535930633545, 0.0036738591734319925, 0.00025265730801038444], "repair_candidates": [0.07951691001653671, 0.6836535930633545, 0.05262480303645134, 0.0036738591734319925, 0.00025265730801038444, 0.0005064404103904963, 0.00010658702376531437, 1.7583965018275194e-05, 0.07136034220457077, 0.00028945779195055366, 0.10555381327867508, 9.039274300448596e-05, 0.0011168301571160555, 0.0010651827324181795, 0.00012670310388784856, 4.483184602577239e-05], "target_probs": 0.6875801086425781}}


{"result": {"time": "2021-02-21 11:54:10.693835", "n_pass": [184, 33, 19], "n_token": 69, "loss": [0.7432433366775513, 0.3015516400337219], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def bind_processor(", "self", ",", "dialect", ")", ":", "#NEWLINE#", "#INDENT#", "if", "(", "self", "dialect", ".", "convert_unicode", "#INDENT#", "if", "(", "dialect", ".", "supports_unicode_binds", "and", "(", "self", ".", "convert_unicode", "!=", "if", "self", ".", "_warn_on_bytestring", ":", "process", "#UNINDENT#", "#UNINDENT#", "else", "encoder", "=", "codecs", "self", ".", "encoding", ")", "#NEWLINE#", "warn_on_bytestring", "=", "self", ".", "#NEWLINE#", "#INDENT#", "return", "encoder", "(", "value", ",", "self", ".", "(", "warn_on_bytestring", "and", "(", "value", "is not", "#UNINDENT#", "#UNINDENT#", "return", "process", "#NEWLINE#", "#UNINDENT#"]}}
{"position": {"error_location": 11, "repair_targets": [4, 12, 18], "repair_candidates": [2, 11, 23, 28, 39, 46, 55, 32, 66, 36, 51, 44, 58, 4, 12, 18]}}
{"prediction": {"error_location": 0.4755689799785614, "repair_targets": [0.7371999621391296, 0.002201921073719859, 0.00026771510601975024], "repair_candidates": [0.04473140463232994, 0.7371999621391296, 0.026705268770456314, 0.002201921073719859, 0.00026771510601975024, 0.0005146492039784789, 0.0001219217010657303, 2.0855997718172148e-05, 0.13058868050575256, 0.00020832235168199986, 0.05524274706840515, 0.00040475971763953567, 0.0005539771518670022, 0.0010662319837138057, 0.0001265799073735252, 4.493786400416866e-05], "target_probs": 0.7396696209907532}}


{"result": {"time": "2021-02-21 11:54:10.871825", "n_pass": [189, 35, 20], "n_token": 66, "loss": [0.7522715926170349, 0.3713357448577881], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def bind_processor(", "self", ",", "dialect", ")", ":", "#NEWLINE#", "#INDENT#", "if", "(", "self", "dialect", ".", "convert_unicode", "#INDENT#", "if", "(", "dialect", ".", "supports_unicode_binds", "and", "(", "self", ".", "convert_unicode", "!=", "if", "self", ".", "_warn_on_bytestring", ":", "process", "#UNINDENT#", "#UNINDENT#", "else", "encoder", "=", "codecs", "self", ".", "encoding", ")", "#NEWLINE#", "warn_on_bytestring", "=", "self", ".", "#NEWLINE#", "#INDENT#", "return", "encoder", "(", "value", ",", "self", ".", "(", "warn_on_bytestring", "and", "#UNINDENT#", "#UNINDENT#", "return", "process", "#NEWLINE#", "#UNINDENT#"]}}
{"position": {"error_location": 11, "repair_targets": [4, 12, 18], "repair_candidates": [2, 11, 23, 28, 39, 46, 55, 32, 63, 36, 51, 44, 58, 4, 12, 18]}}
{"prediction": {"error_location": 0.4712947905063629, "repair_targets": [0.686867356300354, 0.0026876814663410187, 0.00025727463071234524], "repair_candidates": [0.05649945139884949, 0.686867356300354, 0.036826975643634796, 0.0026876814663410187, 0.00025727463071234524, 0.0004734572721645236, 8.158150740200654e-05, 2.345671964576468e-05, 0.181209996342659, 0.0001704472379060462, 0.033124908804893494, 0.00027342818793840706, 0.0004362183390185237, 0.0009324824786745012, 0.00010524519166210666, 2.996151306433603e-05], "target_probs": 0.6898123025894165}}


{"result": {"time": "2021-02-21 11:54:10.958187", "n_pass": [190, 36, 21], "n_token": 63, "loss": [1.0236034393310547, 0.6681593656539917], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def bind_processor(", "self", ",", "dialect", ")", ":", "#NEWLINE#", "#INDENT#", "if", "(", "self", "dialect", ".", "convert_unicode", "#INDENT#", "if", "(", "dialect", ".", "supports_unicode_binds", "and", "(", "self", ".", "convert_unicode", "!=", "if", "self", ".", "_warn_on_bytestring", ":", "process", "#UNINDENT#", "#UNINDENT#", "else", "encoder", "=", "codecs", "self", ".", "encoding", ")", "#NEWLINE#", "warn_on_bytestring", "=", "self", ".", "#NEWLINE#", "#INDENT#", "return", "encoder", "(", "value", ",", "self", ".", "(", "warn_on_bytestring", "and", "process", "#NEWLINE#", "#UNINDENT#"]}}
{"position": {"error_location": 11, "repair_targets": [4, 12, 18], "repair_candidates": [2, 11, 23, 28, 39, 46, 55, 32, 60, 36, 51, 44, 58, 4, 12, 18]}}
{"prediction": {"error_location": 0.35929784178733826, "repair_targets": [0.5078920125961304, 0.004611397627741098, 0.00014792040747124702], "repair_candidates": [0.09304647147655487, 0.5078920125961304, 0.07176727056503296, 0.004611397627741098, 0.00014792040747124702, 0.00025682547129690647, 3.839583587250672e-05, 1.3528003364626784e-05, 0.3155204653739929, 9.491531091043726e-05, 0.006233840715140104, 0.00011845058179460466, 0.00013827411748934537, 7.558876677649096e-05, 3.554436261765659e-05, 9.13980147743132e-06], "target_probs": 0.5126513242721558}}


{"result": {"time": "2021-02-21 11:54:11.469281", "n_pass": [205, 42, 22], "n_token": 60, "loss": [0.8538538813591003, 0.30024391412734985], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def bind_processor(", "self", ",", "dialect", ")", ":", "#NEWLINE#", "#INDENT#", "if", "(", "self", "dialect", ".", "convert_unicode", "#INDENT#", "if", "(", "dialect", ".", "supports_unicode_binds", "and", "(", "self", ".", "convert_unicode", "!=", "if", "self", ".", "_warn_on_bytestring", ":", "process", "encoder", "=", "codecs", "self", ".", "encoding", ")", "#NEWLINE#", "warn_on_bytestring", "=", "self", ".", "#NEWLINE#", "#INDENT#", "return", "encoder", "(", "value", ",", "self", ".", "(", "warn_on_bytestring", "and", "process", "#NEWLINE#", "#UNINDENT#"]}}
{"position": {"error_location": 11, "repair_targets": [4, 12, 18], "repair_candidates": [2, 11, 23, 28, 36, 43, 52, 32, 57, 33, 48, 41, 55, 4, 12, 18]}}
{"prediction": {"error_location": 0.42577090859413147, "repair_targets": [0.730459451675415, 0.00981476902961731, 0.0003633238666225225], "repair_candidates": [0.13017480075359344, 0.730459451675415, 0.1152956634759903, 0.00981476902961731, 0.0003633238666225225, 0.00025185314007103443, 1.8240214558318257e-05, 0.0008572726510465145, 0.004978612065315247, 8.764659287407994e-05, 0.007219950668513775, 0.0001425376976840198, 0.00017739897884894162, 0.00010203580313827842, 4.495399844017811e-05, 1.1477813131932635e-05], "target_probs": 0.7406375408172607}}


{"result": {"time": "2021-02-21 11:54:11.874115", "n_pass": [222, 47, 23], "n_token": 57, "loss": [1.0006967782974243, 0.02967645227909088], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def bind_processor(", "self", ",", "dialect", ")", ":", "#NEWLINE#", "#INDENT#", "if", "(", "self", "dialect", ".", "convert_unicode", "dialect", ".", "supports_unicode_binds", "and", "(", "self", ".", "convert_unicode", "!=", "if", "self", ".", "_warn_on_bytestring", ":", "process", "encoder", "=", "codecs", "self", ".", "encoding", ")", "#NEWLINE#", "warn_on_bytestring", "=", "self", ".", "#NEWLINE#", "#INDENT#", "return", "encoder", "(", "value", ",", "self", ".", "(", "warn_on_bytestring", "and", "process", "#NEWLINE#", "#UNINDENT#"]}}
{"position": {"error_location": 11, "repair_targets": [4, 12, 15], "repair_candidates": [2, 11, 20, 25, 33, 40, 49, 29, 54, 30, 45, 38, 52, 4, 12, 15]}}
{"prediction": {"error_location": 0.3676231801509857, "repair_targets": [0.9697263240814209, 0.0008062342531047761, 0.0002270241966471076], "repair_candidates": [0.004512852989137173, 0.9697263240814209, 0.00792514719069004, 0.0008062342531047761, 0.0002270241966471076, 0.00013300424325279891, 1.5878380509093404e-05, 0.0007243403815664351, 0.0065373620018363, 9.286139538744465e-05, 0.008770093321800232, 0.0001572210167068988, 0.00018823856953531504, 9.918444266077131e-05, 6.988780660321936e-05, 1.4284214557847008e-05], "target_probs": 0.9707595705986023}}


{"result": {"time": "2021-02-21 11:54:12.669628", "n_pass": [291, 57, 24], "n_token": 56, "loss": [1.116924524307251, 0.020216859877109528], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def bind_processor(", "self", ",", "dialect", ")", ":", "#NEWLINE#", "#INDENT#", "if", "(", "self", "dialect", ".", "convert_unicode", "dialect", ".", "supports_unicode_binds", "and", "self", ".", "convert_unicode", "!=", "if", "self", ".", "_warn_on_bytestring", ":", "process", "encoder", "=", "codecs", "self", ".", "encoding", ")", "#NEWLINE#", "warn_on_bytestring", "=", "self", ".", "#NEWLINE#", "#INDENT#", "return", "encoder", "(", "value", ",", "self", ".", "(", "warn_on_bytestring", "and", "process", "#NEWLINE#", "#UNINDENT#"]}}
{"position": {"error_location": 11, "repair_targets": [4, 12, 15], "repair_candidates": [2, 11, 19, 24, 32, 39, 48, 28, 53, 29, 44, 37, 51, 4, 12, 15]}}
{"prediction": {"error_location": 0.3272848427295685, "repair_targets": [0.979213297367096, 0.0004943905514664948, 0.0002784171374514699], "repair_candidates": [0.0034219922963529825, 0.979213297367096, 0.004951415583491325, 0.0004943905514664948, 0.0002784171374514699, 8.918847743188962e-05, 1.7604343156563118e-05, 0.0004802297044079751, 0.005103827454149723, 9.06020577531308e-05, 0.005440856795758009, 0.00012648440315388143, 0.00014919033856131136, 7.38476010155864e-05, 5.666732249665074e-05, 1.1906151485163718e-05], "target_probs": 0.9799861311912537}}


{"result": {"time": "2021-02-21 11:54:13.143831", "n_pass": [299, 63, 25], "n_token": 54, "loss": [0.7632052302360535, 0.08535443991422653], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def bind_processor(", "self", ",", "dialect", ")", ":", "#NEWLINE#", "#INDENT#", "if", "(", "self", "dialect", ".", "convert_unicode", "dialect", ".", "supports_unicode_binds", "and", "self", ".", "convert_unicode", "!=", "if", "self", ".", "process", "encoder", "=", "codecs", "self", ".", "encoding", ")", "#NEWLINE#", "warn_on_bytestring", "=", "self", ".", "#NEWLINE#", "#INDENT#", "return", "encoder", "(", "value", ",", "self", ".", "(", "warn_on_bytestring", "and", "process", "#NEWLINE#", "#UNINDENT#"]}}
{"position": {"error_location": 11, "repair_targets": [4, 12, 15], "repair_candidates": [2, 11, 19, 24, 30, 37, 46, 26, 51, 27, 42, 35, 49, 4, 12, 15]}}
{"prediction": {"error_location": 0.4661698341369629, "repair_targets": [0.916848361492157, 0.0011037748772650957, 0.0002346263063373044], "repair_candidates": [0.0036634851712733507, 0.916848361492157, 0.004378028679639101, 0.0011037748772650957, 0.0002346263063373044, 8.635305130155757e-05, 3.192346412106417e-05, 0.0163568127900362, 0.053325653076171875, 8.450736640952528e-05, 0.0035028618294745684, 0.0001188257519970648, 0.00013687420869246125, 7.119784277165309e-05, 4.605482899933122e-05, 1.0576793101790827e-05], "target_probs": 0.9181867837905884}}


{"result": {"time": "2021-02-21 11:54:13.221893", "n_pass": [301, 64, 26], "n_token": 52, "loss": [0.4418463408946991, 0.01804131641983986], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def bind_processor(", "self", ",", "dialect", ")", ":", "#NEWLINE#", "#INDENT#", "if", "(", "self", "dialect", ".", "convert_unicode", "dialect", ".", "supports_unicode_binds", "and", "self", ".", "convert_unicode", "!=", "if", "self", ".", "process", "encoder", "self", ".", "encoding", ")", "#NEWLINE#", "warn_on_bytestring", "=", "self", ".", "#NEWLINE#", "#INDENT#", "return", "encoder", "(", "value", ",", "self", ".", "(", "warn_on_bytestring", "and", "process", "#NEWLINE#", "#UNINDENT#"]}}
{"position": {"error_location": 11, "repair_targets": [4, 12, 15], "repair_candidates": [2, 11, 19, 24, 28, 35, 44, 26, 49, 27, 40, 33, 47, 4, 12, 15]}}
{"prediction": {"error_location": 0.6428483724594116, "repair_targets": [0.9805797934532166, 0.0013013452989980578, 0.0002393080503679812], "repair_candidates": [0.0034201708622276783, 0.9805797934532166, 0.00456872908398509, 0.0013013452989980578, 0.0002393080503679812, 9.311882604379207e-05, 4.4061664084438235e-05, 0.003268299624323845, 0.0016561413649469614, 0.00011063154670409858, 0.004254645202308893, 0.00014287064550444484, 0.00016296622925437987, 7.934465247672051e-05, 6.427359039662406e-05, 1.4311057384475134e-05], "target_probs": 0.9821204543113708}}


{"result": {"time": "2021-02-21 11:54:13.300499", "n_pass": [303, 65, 27], "n_token": 50, "loss": [0.7410571575164795, 0.012066633440554142], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def bind_processor(", "self", ",", "dialect", ")", ":", "#NEWLINE#", "#INDENT#", "if", "(", "self", "dialect", ".", "convert_unicode", "dialect", ".", "supports_unicode_binds", "and", "self", ".", "convert_unicode", "!=", "if", "self", ".", "process", "encoder", "self", ".", "#NEWLINE#", "warn_on_bytestring", "=", "self", ".", "#NEWLINE#", "#INDENT#", "return", "encoder", "(", "value", ",", "self", ".", "(", "warn_on_bytestring", "and", "process", "#NEWLINE#", "#UNINDENT#"]}}
{"position": {"error_location": 11, "repair_targets": [4, 12, 15], "repair_candidates": [2, 11, 19, 24, 28, 33, 42, 26, 47, 27, 38, 31, 45, 4, 12, 15]}}
{"prediction": {"error_location": 0.47660985589027405, "repair_targets": [0.9865569472312927, 0.0012128106318414211, 0.00023614706879016012], "repair_candidates": [0.003811576636508107, 0.9865569472312927, 0.003426765091717243, 0.0012128106318414211, 0.00023614706879016012, 8.273232378996909e-05, 3.592613211367279e-05, 0.001361797098070383, 0.0011663752375170588, 0.0002412775211269036, 0.0014393535675480962, 0.00012311326281633228, 0.00012507133942563087, 8.09136254247278e-05, 8.590495417593047e-05, 1.3341971680347342e-05], "target_probs": 0.9880058765411377}}


{"result": {"time": "2021-02-21 11:54:13.451097", "n_pass": [307, 67, 28], "n_token": 48, "loss": [0.5566636919975281, 0.008945842273533344], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def bind_processor(", "self", ",", "dialect", ")", ":", "#NEWLINE#", "#INDENT#", "if", "(", "self", "dialect", ".", "convert_unicode", "dialect", ".", "supports_unicode_binds", "and", "self", ".", "convert_unicode", "!=", "if", "self", ".", "process", "encoder", "self", ".", "#NEWLINE#", "warn_on_bytestring", "=", "self", ".", "#NEWLINE#", "encoder", "(", "value", ",", "self", ".", "(", "warn_on_bytestring", "and", "process", "#NEWLINE#", "#UNINDENT#"]}}
{"position": {"error_location": 11, "repair_targets": [4, 12, 15], "repair_candidates": [2, 11, 19, 24, 28, 33, 40, 26, 45, 27, 36, 31, 43, 4, 12, 15]}}
{"prediction": {"error_location": 0.5731179714202881, "repair_targets": [0.9895763397216797, 0.001290047075599432, 0.0002276814338983968], "repair_candidates": [0.002942865714430809, 0.9895763397216797, 0.0027115007396787405, 0.001290047075599432, 0.0002276814338983968, 6.946654320927337e-05, 2.5561086658854038e-05, 0.0008494266658090055, 0.0006805017474107444, 0.00014109504991210997, 0.00116654799785465, 3.067529178224504e-05, 0.0001642538554733619, 3.2469626603415236e-05, 7.76730157667771e-05, 1.3877323908673134e-05], "target_probs": 0.9910940527915955}}


{"result": {"time": "2021-02-21 11:54:13.525575", "n_pass": [309, 68, 29], "n_token": 46, "loss": [0.22498473525047302, 0.0031322967261075974], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def bind_processor(", "self", ",", "dialect", ")", ":", "#NEWLINE#", "#INDENT#", "if", "(", "self", "dialect", ".", "convert_unicode", "dialect", ".", "supports_unicode_binds", "and", "self", ".", "convert_unicode", "!=", "if", "self", ".", "process", "encoder", "self", ".", "#NEWLINE#", "warn_on_bytestring", "=", "self", ".", "#NEWLINE#", "encoder", "(", "self", ".", "(", "warn_on_bytestring", "and", "process", "#NEWLINE#", "#UNINDENT#"]}}
{"position": {"error_location": 11, "repair_targets": [4, 12, 15], "repair_candidates": [2, 11, 19, 24, 28, 33, 38, 26, 43, 27, 36, 31, 41, 4, 12, 15]}}
{"prediction": {"error_location": 0.7985283136367798, "repair_targets": [0.9958958625793457, 0.0008739494951441884, 0.00010279058187734336], "repair_candidates": [0.00038610558840446174, 0.9958958625793457, 0.0006911139353178442, 0.0008739494951441884, 0.00010279058187734336, 3.7772333598695695e-05, 7.152561465773033e-06, 0.0003393536899238825, 0.00020390923600643873, 2.8785183530999348e-05, 0.0013140728697180748, 4.668274414143525e-05, 4.724478640127927e-05, 7.88422221376095e-06, 1.538596916361712e-05, 1.9657261418615235e-06], "target_probs": 0.99687260389328}}


{"result": {"time": "2021-02-21 11:54:13.600294", "n_pass": [313, 69, 30], "n_token": 44, "loss": [0.07709617167711258, 0.002267306437715888], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def bind_processor(", "self", ",", "dialect", ")", ":", "#NEWLINE#", "#INDENT#", "if", "(", "self", "dialect", ".", "convert_unicode", "dialect", ".", "supports_unicode_binds", "and", "self", ".", "convert_unicode", "!=", "if", "self", ".", "process", "encoder", "self", ".", "#NEWLINE#", "warn_on_bytestring", "=", "self", ".", "#NEWLINE#", "encoder", "(", "self", ".", "(", "warn_on_bytestring", "and", "process"]}}
{"position": {"error_location": 11, "repair_targets": [4, 12, 15], "repair_candidates": [2, 11, 19, 24, 28, 33, 38, 26, 43, 27, 36, 31, 41, 4, 12, 15]}}
{"prediction": {"error_location": 0.9258009195327759, "repair_targets": [0.9967717528343201, 0.0008548811892978847, 0.00010864449723158032], "repair_candidates": [0.00036291099968366325, 0.9967717528343201, 0.000640933751128614, 0.0008548811892978847, 0.00010864449723158032, 1.941266054927837e-05, 3.98958081859746e-06, 0.00041578957461752, 0.0002145706966985017, 2.602893982839305e-05, 0.00046454291441477835, 3.991878475062549e-05, 5.0515274779172614e-05, 6.117051725595957e-06, 1.7353238945361227e-05, 2.7514895464264555e-06], "target_probs": 0.9977352619171143}}


{"result": {"time": "2021-02-21 11:54:13.674113", "n_pass": [314, 70, 31], "n_token": 43, "loss": [0.5082650780677795, 0.04835003614425659], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["def bind_processor(", "self", ",", "dialect", ")", ":", "#NEWLINE#", "#INDENT#", "if", "(", "self", "dialect", ".", "convert_unicode", "dialect", ".", "supports_unicode_binds", "and", "self", ".", "convert_unicode", "!=", "if", "self", ".", "process", "encoder", "self", ".", "#NEWLINE#", "warn_on_bytestring", "=", "self", ".", "#NEWLINE#", "encoder", "(", "self", ".", "(", "warn_on_bytestring", "and", "process"]}}
{"position": {"error_location": 10, "repair_targets": [3, 11, 14], "repair_candidates": [1, 10, 18, 23, 27, 32, 37, 25, 42, 26, 35, 30, 40, 3, 11, 14]}}
{"prediction": {"error_location": 0.6015383005142212, "repair_targets": [0.9420665502548218, 0.009899142198264599, 0.0008344976231455803], "repair_candidates": [0.008708678185939789, 0.9420665502548218, 0.02581353299319744, 0.009899142198264599, 0.0008344976231455803, 0.0002035441721091047, 2.7903202862944454e-05, 0.00210523116402328, 0.0012967361835762858, 0.0002292925928486511, 0.007942499592900276, 0.00035985891008749604, 0.0004134176706429571, 2.56522253039293e-05, 6.191776628838852e-05, 1.1590957910811994e-05], "target_probs": 0.9528002142906189}}


{"result": {"time": "2021-02-21 11:54:13.893588", "n_pass": [319, 73, 32], "n_token": 42, "loss": [0.8541758060455322, 0.14913630485534668], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["def bind_processor(", "self", ",", "dialect", ":", "#NEWLINE#", "#INDENT#", "if", "(", "self", "dialect", ".", "convert_unicode", "dialect", ".", "supports_unicode_binds", "and", "self", ".", "convert_unicode", "!=", "if", "self", ".", "process", "encoder", "self", ".", "#NEWLINE#", "warn_on_bytestring", "=", "self", ".", "#NEWLINE#", "encoder", "(", "self", ".", "(", "warn_on_bytestring", "and", "process"]}}
{"position": {"error_location": 9, "repair_targets": [3, 10, 13], "repair_candidates": [1, 9, 17, 22, 26, 31, 36, 24, 41, 25, 34, 29, 39, 3, 10, 13]}}
{"prediction": {"error_location": 0.42563384771347046, "repair_targets": [0.8244766592979431, 0.034719277173280716, 0.0022557557094842196], "repair_candidates": [0.018089594319462776, 0.8244766592979431, 0.08915451169013977, 0.034719277173280716, 0.0022557557094842196, 0.0003924015036318451, 4.808560697711073e-05, 0.006554973777383566, 0.002484670141711831, 0.0003817086399067193, 0.019435107707977295, 0.0007684644660912454, 0.0009196332539431751, 5.35939761903137e-05, 0.00022876499861013144, 3.676205960800871e-05], "target_probs": 0.8614516854286194}}


{"result": {"time": "2021-02-21 11:54:13.965988", "n_pass": [320, 74, 33], "n_token": 41, "loss": [0.1775168627500534, 0.30696338415145874], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["def bind_processor(", "self", ",", "dialect", "#NEWLINE#", "#INDENT#", "if", "(", "self", "dialect", ".", "convert_unicode", "dialect", ".", "supports_unicode_binds", "and", "self", ".", "convert_unicode", "!=", "if", "self", ".", "process", "encoder", "self", ".", "#NEWLINE#", "warn_on_bytestring", "=", "self", ".", "#NEWLINE#", "encoder", "(", "self", ".", "(", "warn_on_bytestring", "and", "process"]}}
{"position": {"error_location": 8, "repair_targets": [3, 9, 12], "repair_candidates": [1, 8, 16, 21, 25, 30, 35, 23, 40, 24, 33, 28, 38, 3, 9, 12]}}
{"prediction": {"error_location": 0.8373468518257141, "repair_targets": [0.6143419146537781, 0.1129150390625, 0.008420602418482304], "repair_candidates": [0.031403109431266785, 0.6143419146537781, 0.1614372581243515, 0.1129150390625, 0.008420602418482304, 0.0008870519232004881, 0.0001154326819232665, 0.015310163609683514, 0.006428624037653208, 0.0008954647928476334, 0.04382097348570824, 0.0016948801930993795, 0.0015944429906085134, 0.00014470453606918454, 0.0005062702111899853, 8.403234096476808e-05], "target_probs": 0.7356775403022766}}


{"result": {"time": "2021-02-21 11:54:14.110566", "n_pass": [322, 76, 34], "n_token": 40, "loss": [0.1793549507856369, 0.0939805880188942], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["def bind_processor(", "self", ",", "dialect", "#NEWLINE#", "if", "(", "self", "dialect", ".", "convert_unicode", "dialect", ".", "supports_unicode_binds", "and", "self", ".", "convert_unicode", "!=", "if", "self", ".", "process", "encoder", "self", ".", "#NEWLINE#", "warn_on_bytestring", "=", "self", ".", "#NEWLINE#", "encoder", "(", "self", ".", "(", "warn_on_bytestring", "and", "process"]}}
{"position": {"error_location": 7, "repair_targets": [3, 8, 11], "repair_candidates": [1, 7, 15, 20, 24, 29, 34, 22, 39, 23, 32, 27, 37, 3, 8, 11]}}
{"prediction": {"error_location": 0.8358091115951538, "repair_targets": [0.8825535774230957, 0.02522371895611286, 0.002523109083995223], "repair_candidates": [0.008560706861317158, 0.8825535774230957, 0.05260854959487915, 0.02522371895611286, 0.002523109083995223, 0.00030146274366416037, 3.0195042199920863e-05, 0.00566362589597702, 0.0024723359383642673, 0.00034425349440425634, 0.018307173624634743, 0.00038912781747058034, 0.0007440149784088135, 5.012851033825427e-05, 0.00019540233188308775, 3.2673262467142195e-05], "target_probs": 0.9103004336357117}}


{"result": {"time": "2021-02-21 11:54:14.323376", "n_pass": [327, 79, 35], "n_token": 39, "loss": [0.04919092357158661, 0.12220562994480133], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["def bind_processor(", "self", ",", "dialect", "#NEWLINE#", "if", "(", "self", "dialect", "convert_unicode", "dialect", ".", "supports_unicode_binds", "and", "self", ".", "convert_unicode", "!=", "if", "self", ".", "process", "encoder", "self", ".", "#NEWLINE#", "warn_on_bytestring", "=", "self", ".", "#NEWLINE#", "encoder", "(", "self", ".", "(", "warn_on_bytestring", "and", "process"]}}
{"position": {"error_location": 7, "repair_targets": [3, 8, 10], "repair_candidates": [1, 7, 14, 19, 23, 28, 33, 21, 38, 22, 31, 26, 36, 3, 8, 10]}}
{"prediction": {"error_location": 0.9519990086555481, "repair_targets": [0.8143976926803589, 0.053172215819358826, 0.017396487295627594], "repair_candidates": [0.025618914514780045, 0.8143976926803589, 0.07420797646045685, 0.053172215819358826, 0.017396487295627594, 0.00037770369090139866, 3.994338840129785e-05, 0.007241440936923027, 0.002103017643094063, 0.00032032697345130146, 0.0038831455167382956, 0.000254410580964759, 0.0003855137329082936, 5.5514425184810534e-05, 0.0004896756145171821, 5.60360167582985e-05], "target_probs": 0.8849663734436035}}


{"result": {"time": "2021-02-21 11:54:14.394125", "n_pass": [328, 80, 36], "n_token": 38, "loss": [0.03985721245408058, 0.09172433614730835], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["def bind_processor(", "self", ",", "dialect", "#NEWLINE#", "if", "(", "self", "dialect", "dialect", ".", "supports_unicode_binds", "and", "self", ".", "convert_unicode", "!=", "if", "self", ".", "process", "encoder", "self", ".", "#NEWLINE#", "warn_on_bytestring", "=", "self", ".", "#NEWLINE#", "encoder", "(", "self", ".", "(", "warn_on_bytestring", "and", "process"]}}
{"position": {"error_location": 7, "repair_targets": [3, 8, 9], "repair_candidates": [1, 7, 13, 18, 22, 27, 32, 20, 37, 21, 30, 25, 35, 3, 8, 9]}}
{"prediction": {"error_location": 0.9609266519546509, "repair_targets": [0.8405479192733765, 0.06135525181889534, 0.010453452356159687], "repair_candidates": [0.03404853120446205, 0.8405479192733765, 0.04217040538787842, 0.06135525181889534, 0.010453452356159687, 0.0004215120861772448, 3.3291118597844616e-05, 0.005877894815057516, 0.001282702200114727, 0.00014875191845931113, 0.002631200011819601, 0.00024918103008531034, 0.0002854167832992971, 4.121354504604824e-05, 0.00040828483179211617, 4.499338683672249e-05], "target_probs": 0.9123566150665283}}


{"result": {"time": "2021-02-21 11:54:14.465872", "n_pass": [330, 81, 37], "n_token": 37, "loss": [0.02252645045518875, 0.032194625586271286], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["def bind_processor(", "self", ",", "dialect", "#NEWLINE#", "if", "(", "self", "dialect", "dialect", "supports_unicode_binds", "and", "self", ".", "convert_unicode", "!=", "if", "self", ".", "process", "encoder", "self", ".", "#NEWLINE#", "warn_on_bytestring", "=", "self", ".", "#NEWLINE#", "encoder", "(", "self", ".", "(", "warn_on_bytestring", "and", "process"]}}
{"position": {"error_location": 7, "repair_targets": [3, 8, 9], "repair_candidates": [1, 7, 12, 17, 21, 26, 31, 19, 36, 20, 29, 24, 34, 3, 8, 9]}}
{"prediction": {"error_location": 0.9777253866195679, "repair_targets": [0.7930163741111755, 0.010035675019025803, 0.16526606678962708], "repair_candidates": [0.006211342755705118, 0.7930163741111755, 0.005870215594768524, 0.010035675019025803, 0.16526606678962708, 0.0003868195344693959, 6.535391003126279e-05, 0.004825450945645571, 0.0010168851586058736, 0.00015972123946994543, 0.012221403419971466, 0.0003744116984307766, 0.0003217556222807616, 3.736752114491537e-05, 0.00016927847173064947, 2.2003652702551335e-05], "target_probs": 0.9683181047439575}}


{"result": {"time": "2021-02-21 11:54:14.535687", "n_pass": [331, 82, 38], "n_token": 36, "loss": [0.28484100103378296, 0.04150385409593582], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["def bind_processor(", "self", ",", "dialect", "#NEWLINE#", "if", "(", "self", "dialect", "dialect", "and", "self", ".", "convert_unicode", "!=", "if", "self", ".", "process", "encoder", "self", ".", "#NEWLINE#", "warn_on_bytestring", "=", "self", ".", "#NEWLINE#", "encoder", "(", "self", ".", "(", "warn_on_bytestring", "and", "process"]}}
{"position": {"error_location": 7, "repair_targets": [3, 8, 9], "repair_candidates": [1, 7, 11, 16, 20, 25, 30, 18, 35, 19, 28, 23, 33, 3, 8, 9]}}
{"prediction": {"error_location": 0.7521339058876038, "repair_targets": [0.7982420325279236, 0.030344989150762558, 0.130758598446846], "repair_candidates": [0.010087731294333935, 0.7982420325279236, 0.011937935836613178, 0.030344989150762558, 0.130758598446846, 0.0025254152715206146, 0.0001687311305431649, 0.0019022863125428557, 0.0017836734186857939, 0.0006024581380188465, 0.010255520232021809, 0.0008116785320453346, 0.00035107540315948427, 5.492125637829304e-05, 0.00015117894508875906, 2.1766061763628386e-05], "target_probs": 0.9593456387519836}}


{"result": {"time": "2021-02-21 11:54:14.605288", "n_pass": [332, 83, 39], "n_token": 35, "loss": [0.06941721588373184, 0.08938765525817871], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["def bind_processor(", "self", ",", "dialect", "#NEWLINE#", "if", "(", "self", "dialect", "dialect", "self", ".", "convert_unicode", "!=", "if", "self", ".", "process", "encoder", "self", ".", "#NEWLINE#", "warn_on_bytestring", "=", "self", ".", "#NEWLINE#", "encoder", "(", "self", ".", "(", "warn_on_bytestring", "and", "process"]}}
{"position": {"error_location": 7, "repair_targets": [3, 8, 9], "repair_candidates": [1, 7, 10, 15, 19, 24, 29, 17, 34, 18, 27, 22, 32, 3, 8, 9]}}
{"prediction": {"error_location": 0.9329373836517334, "repair_targets": [0.7959301471710205, 0.019865678623318672, 0.09869515150785446], "repair_candidates": [0.013062293641269207, 0.7959301471710205, 0.039208684116601944, 0.019865678623318672, 0.09869515150785446, 0.003455294296145439, 0.0001912602747324854, 0.006310294847935438, 0.0022084596566855907, 0.0009254376636818051, 0.018206115812063217, 0.0007886072271503508, 0.0005660184542648494, 8.168496424332261e-05, 0.0004329809744376689, 7.180788088589907e-05], "target_probs": 0.9144909977912903}}


{"result": {"time": "2021-02-21 11:54:14.674372", "n_pass": [334, 84, 40], "n_token": 34, "loss": [0.05943518877029419, 0.06594923883676529], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["def bind_processor(", "self", ",", "dialect", "#NEWLINE#", "if", "(", "self", "dialect", "dialect", "self", "convert_unicode", "!=", "if", "self", ".", "process", "encoder", "self", ".", "#NEWLINE#", "warn_on_bytestring", "=", "self", ".", "#NEWLINE#", "encoder", "(", "self", ".", "(", "warn_on_bytestring", "and", "process"]}}
{"position": {"error_location": 7, "repair_targets": [3, 8, 9], "repair_candidates": [1, 7, 10, 14, 18, 23, 28, 16, 33, 17, 26, 21, 31, 3, 8, 9]}}
{"prediction": {"error_location": 0.9422966837882996, "repair_targets": [0.9266828298568726, 0.0029400780331343412, 0.006555459927767515], "repair_candidates": [0.007685467135161161, 0.9266828298568726, 0.014600458554923534, 0.0029400780331343412, 0.006555459927767515, 0.011912818998098373, 9.827077883528545e-05, 0.018139109015464783, 0.002839900553226471, 0.00040406090556643903, 0.006752216722816229, 0.0005485689616762102, 0.00038189697079360485, 5.673483246937394e-05, 0.0003516722354106605, 5.0424878281774e-05], "target_probs": 0.9361783862113953}}


{"result": {"time": "2021-02-21 11:54:14.742803", "n_pass": [335, 85, 41], "n_token": 33, "loss": [0.08323538303375244, 0.034860916435718536], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["def bind_processor(", "self", ",", "dialect", "#NEWLINE#", "if", "(", "self", "dialect", "dialect", "self", "!=", "if", "self", ".", "process", "encoder", "self", ".", "#NEWLINE#", "warn_on_bytestring", "=", "self", ".", "#NEWLINE#", "encoder", "(", "self", ".", "(", "warn_on_bytestring", "and", "process"]}}
{"position": {"error_location": 7, "repair_targets": [3, 8, 9], "repair_candidates": [1, 7, 10, 13, 17, 22, 27, 15, 32, 16, 25, 20, 30, 3, 8, 9]}}
{"prediction": {"error_location": 0.9201346635818481, "repair_targets": [0.952396810054779, 0.001879748422652483, 0.011463160626590252], "repair_candidates": [0.003643648698925972, 0.952396810054779, 0.002730994950979948, 0.001879748422652483, 0.011463160626590252, 0.017079662531614304, 3.9658469177084044e-05, 0.00701194629073143, 0.0009606566745787859, 0.00010733786621131003, 0.0017390402499586344, 0.00028884763014502823, 0.0002301745698787272, 3.515399293974042e-05, 0.00035286834463477135, 4.03717604058329e-05], "target_probs": 0.9657397270202637}}


{"result": {"time": "2021-02-21 11:54:14.810782", "n_pass": [336, 86, 42], "n_token": 32, "loss": [0.10632418841123581, 0.06762038916349411], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["def bind_processor(", "self", ",", "dialect", "#NEWLINE#", "if", "(", "self", "dialect", "dialect", "self", "if", "self", ".", "process", "encoder", "self", ".", "#NEWLINE#", "warn_on_bytestring", "=", "self", ".", "#NEWLINE#", "encoder", "(", "self", ".", "(", "warn_on_bytestring", "and", "process"]}}
{"position": {"error_location": 7, "repair_targets": [3, 8, 9], "repair_candidates": [1, 7, 10, 12, 16, 21, 26, 14, 31, 15, 24, 19, 29, 3, 8, 9]}}
{"prediction": {"error_location": 0.8991332054138184, "repair_targets": [0.9094740748405457, 0.0027569516096264124, 0.022384177893400192], "repair_candidates": [0.005159975495189428, 0.9094740748405457, 0.006049832329154015, 0.0027569516096264124, 0.022384177893400192, 0.019973939284682274, 0.0009306661086156964, 0.021583544090390205, 0.003251883201301098, 0.0005337927141226828, 0.005916657857596874, 0.0006638229824602604, 0.0005027567385695875, 6.639933417318389e-05, 0.0006607843097299337, 9.076196874957532e-05], "target_probs": 0.9346151947975159}}


{"result": {"time": "2021-02-21 11:54:14.879526", "n_pass": [337, 87, 43], "n_token": 31, "loss": [0.04302423447370529, 0.09302885830402374], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["def bind_processor(", "self", ",", "dialect", "#NEWLINE#", "if", "(", "self", "dialect", "dialect", "self", "self", ".", "process", "encoder", "self", ".", "#NEWLINE#", "warn_on_bytestring", "=", "self", ".", "#NEWLINE#", "encoder", "(", "self", ".", "(", "warn_on_bytestring", "and", "process"]}}
{"position": {"error_location": 7, "repair_targets": [3, 8, 9], "repair_candidates": [1, 7, 10, 11, 15, 20, 25, 13, 30, 14, 23, 18, 28, 3, 8, 9]}}
{"prediction": {"error_location": 0.9578883051872253, "repair_targets": [0.8967368006706238, 0.005290080793201923, 0.009140326641499996], "repair_candidates": [0.016526129096746445, 0.8967368006706238, 0.0263358186930418, 0.005290080793201923, 0.009140326641499996, 0.005343673750758171, 0.0009981135372072458, 0.014644934795796871, 0.0027039917185902596, 0.001529501867480576, 0.01825263351202011, 0.0008792384760454297, 0.0007508162525482476, 0.00011087718303315341, 0.000649105932097882, 0.00010803698387462646], "target_probs": 0.9111672043800354}}


{"result": {"time": "2021-02-21 11:54:14.945652", "n_pass": [339, 88, 44], "n_token": 30, "loss": [0.17449717223644257, 0.32114583253860474], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["def bind_processor(", "self", ",", "dialect", "#NEWLINE#", "if", "(", "self", "dialect", "dialect", "self", "self", "process", "encoder", "self", ".", "#NEWLINE#", "warn_on_bytestring", "=", "self", ".", "#NEWLINE#", "encoder", "(", "self", ".", "(", "warn_on_bytestring", "and", "process"]}}
{"position": {"error_location": 7, "repair_targets": [3, 8, 9], "repair_candidates": [1, 7, 10, 11, 14, 19, 24, 12, 29, 13, 22, 17, 27, 3, 8, 9]}}
{"prediction": {"error_location": 0.8398791551589966, "repair_targets": [0.6960629224777222, 0.01037984061986208, 0.01887468621134758], "repair_candidates": [0.009492088109254837, 0.6960629224777222, 0.027782941237092018, 0.01037984061986208, 0.01887468621134758, 0.0032336455769836903, 0.004445198457688093, 0.0016326045151799917, 0.013693053275346756, 0.0078556714579463, 0.20119324326515198, 0.0022881177719682455, 0.0020707985386252403, 0.0001414527796441689, 0.0007413109415210783, 0.00011243021435802802], "target_probs": 0.7253174781799316}}


{"result": {"time": "2021-02-21 11:54:15.011636", "n_pass": [344, 89, 45], "n_token": 28, "loss": [0.436872661113739, 0.18796424567699432], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["def bind_processor(", "self", ",", "dialect", "#NEWLINE#", "if", "(", "self", "dialect", "dialect", "self", "self", "process", "encoder", "self", ".", "#NEWLINE#", "warn_on_bytestring", "=", "self", "encoder", "(", "self", ".", "(", "warn_on_bytestring", "and", "process"]}}
{"position": {"error_location": 7, "repair_targets": [3, 8, 9], "repair_candidates": [1, 7, 10, 11, 14, 19, 22, 12, 27, 13, 20, 17, 25, 3, 8, 9]}}
{"prediction": {"error_location": 0.6460537314414978, "repair_targets": [0.7918965220451355, 0.009947247803211212, 0.026800550520420074], "repair_candidates": [0.01159368734806776, 0.7918965220451355, 0.0256106648594141, 0.009947247803211212, 0.026800550520420074, 0.006517753005027771, 0.006717194337397814, 0.0020376965403556824, 0.011897850781679153, 0.003218015655875206, 0.10009953379631042, 0.0010512290755286813, 0.0011756293242797256, 5.278881508274935e-05, 0.0012808069586753845, 0.00010285214375471696], "target_probs": 0.828644335269928}}


{"result": {"time": "2021-02-21 11:54:15.208530", "n_pass": [353, 92, 46], "n_token": 27, "loss": [0.722855269908905, 0.28601160645484924], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["def bind_processor(", "self", ",", "dialect", "if", "(", "self", "dialect", "dialect", "self", "self", "process", "encoder", "self", ".", "#NEWLINE#", "warn_on_bytestring", "=", "self", "encoder", "(", "self", ".", "(", "warn_on_bytestring", "and", "process"]}}
{"position": {"error_location": 6, "repair_targets": [3, 7, 8], "repair_candidates": [1, 6, 9, 10, 13, 18, 21, 11, 26, 12, 19, 16, 24, 3, 7, 8]}}
{"prediction": {"error_location": 0.48536449670791626, "repair_targets": [0.6831756830215454, 0.013962464407086372, 0.05411577224731445], "repair_candidates": [0.01805035211145878, 0.6831756830215454, 0.01519492082297802, 0.013962464407086372, 0.05411577224731445, 0.005999940913170576, 0.00484086386859417, 0.001971501624211669, 0.015445071272552013, 0.0050981114618480206, 0.17693951725959778, 0.0015604824293404818, 0.002112693153321743, 5.297711686580442e-05, 0.0013745336327701807, 0.00010516052134335041], "target_probs": 0.7512539029121399}}


{"result": {"time": "2021-02-21 11:54:15.467563", "n_pass": [371, 96, 47], "n_token": 26, "loss": [0.29095616936683655, 0.6104258298873901], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["def bind_processor(", "self", "dialect", "if", "(", "self", "dialect", "dialect", "self", "self", "process", "encoder", "self", ".", "#NEWLINE#", "warn_on_bytestring", "=", "self", "encoder", "(", "self", ".", "(", "warn_on_bytestring", "and", "process"]}}
{"position": {"error_location": 5, "repair_targets": [2, 6, 7], "repair_candidates": [1, 5, 8, 9, 12, 17, 20, 10, 25, 11, 18, 15, 23, 2, 6, 7]}}
{"prediction": {"error_location": 0.747548520565033, "repair_targets": [0.4124378561973572, 0.05717705190181732, 0.07350461184978485], "repair_candidates": [0.009711887687444687, 0.4124378561973572, 0.11151453852653503, 0.05717705190181732, 0.07350461184978485, 0.00569099560379982, 0.0074808369390666485, 0.00240552076138556, 0.013476407155394554, 0.008038926869630814, 0.28900936245918274, 0.0032044625841081142, 0.0037556651514023542, 8.710507245268673e-05, 0.002329212846234441, 0.00017546310846228153], "target_probs": 0.5431195497512817}}


{"result": {"time": "2021-02-21 11:54:15.984444", "n_pass": [417, 104, 48], "n_token": 25, "loss": [0.06127369403839111, 0.251239538192749], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["def bind_processor(", "self", "dialect", "if", "(", "self", "dialect", "dialect", "self", "self", "process", "encoder", "self", ".", "#NEWLINE#", "warn_on_bytestring", "=", "self", "encoder", "(", "self", "(", "warn_on_bytestring", "and", "process"]}}
{"position": {"error_location": 5, "repair_targets": [2, 6, 7], "repair_candidates": [1, 5, 8, 9, 12, 17, 20, 10, 24, 11, 18, 15, 22, 2, 6, 7]}}
{"prediction": {"error_location": 0.9405657649040222, "repair_targets": [0.6614133715629578, 0.05263931304216385, 0.06378332525491714], "repair_candidates": [0.018080484122037888, 0.6614133715629578, 0.08276700228452682, 0.05263931304216385, 0.06378332525491714, 0.007048279978334904, 0.009718104265630245, 0.003595446702092886, 0.011533817276358604, 0.0035577991511672735, 0.07993613183498383, 0.0008280035108327866, 0.0017044804990291595, 0.00257115694694221, 0.0006460725562646985, 0.00017727483646012843], "target_probs": 0.7778360247612}}


{"result": {"time": "2021-02-21 11:54:16.111838", "n_pass": [420, 106, 49], "n_token": 24, "loss": [0.08190760016441345, 0.6680992245674133], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["def bind_processor(", "self", "dialect", "if", "(", "self", "dialect", "dialect", "self", "self", "process", "encoder", "self", ".", "#NEWLINE#", "warn_on_bytestring", "=", "self", "encoder", "(", "self", "(", "warn_on_bytestring", "process"]}}
{"position": {"error_location": 5, "repair_targets": [2, 6, 7], "repair_candidates": [1, 5, 8, 9, 12, 17, 20, 10, 23, 11, 18, 15, 22, 2, 6, 7]}}
{"prediction": {"error_location": 0.9213570952415466, "repair_targets": [0.4328802824020386, 0.04373067989945412, 0.036071162670850754], "repair_candidates": [0.011741834692656994, 0.4328802824020386, 0.06582428514957428, 0.04373067989945412, 0.036071162670850754, 0.0035427946131676435, 0.0045955488458275795, 0.0013582578394562006, 0.007047745399177074, 0.0024698281195014715, 0.3858516812324524, 0.0006189553532749414, 0.000776751316152513, 0.003337670350447297, 0.00010441496124258265, 4.8116959078470245e-05], "target_probs": 0.5126821398735046}}


{"result": {"time": "2021-02-21 11:54:16.492721", "n_pass": [438, 112, 50], "n_token": 23, "loss": [0.24538449943065643, 0.3899078667163849], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["def bind_processor(", "self", "dialect", "if", "(", "self", "dialect", "dialect", "self", "self", "process", "encoder", "self", ".", "#NEWLINE#", "warn_on_bytestring", "self", "encoder", "(", "self", "(", "warn_on_bytestring", "process"]}}
{"position": {"error_location": 5, "repair_targets": [2, 6, 7], "repair_candidates": [1, 5, 8, 9, 12, 16, 19, 10, 22, 11, 17, 15, 21, 2, 6, 7]}}
{"prediction": {"error_location": 0.7824036478996277, "repair_targets": [0.4306052625179291, 0.14694100618362427, 0.09957297146320343], "repair_candidates": [0.012604787014424801, 0.4306052625179291, 0.18410097062587738, 0.14694100618362427, 0.09957297146320343, 0.005038571543991566, 0.006991829723119736, 0.0038731913082301617, 0.04037986695766449, 0.046669844537973404, 0.010974538512527943, 0.0003863577148877084, 0.0010819819290190935, 0.01047608070075512, 0.0002190771047025919, 8.385838737012818e-05], "target_probs": 0.677119255065918}}


{"result": {"time": "2021-02-21 11:54:16.555634", "n_pass": [441, 113, 51], "n_token": 22, "loss": [0.3196520507335663, 0.3333747386932373], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["def bind_processor(", "self", "dialect", "if", "(", "self", "dialect", "dialect", "self", "self", "process", "encoder", "self", ".", "#NEWLINE#", "warn_on_bytestring", "self", "encoder", "self", "(", "warn_on_bytestring", "process"]}}
{"position": {"error_location": 5, "repair_targets": [2, 6, 7], "repair_candidates": [1, 5, 8, 9, 12, 16, 18, 10, 21, 11, 17, 15, 20, 2, 6, 7]}}
{"prediction": {"error_location": 0.7264018654823303, "repair_targets": [0.5153746604919434, 0.11836007982492447, 0.08276690542697906], "repair_candidates": [0.013369183987379074, 0.5153746604919434, 0.1627340018749237, 0.11836007982492447, 0.08276690542697906, 0.004310206510126591, 0.0049199508503079414, 0.0019813724793493748, 0.03364153578877449, 0.040179744362831116, 0.017224973067641258, 0.0005098599358461797, 0.0006672581657767296, 0.0034685672726482153, 0.00036568715586327016, 0.00012599896581377834], "target_probs": 0.7165016531944275}}


{"result": {"time": "2021-02-21 11:54:16.620079", "n_pass": [443, 114, 52], "n_token": 21, "loss": [0.2657662630081177, 0.20785051584243774], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["def bind_processor(", "self", "dialect", "if", "(", "self", "dialect", "dialect", "self", "self", "process", "encoder", "self", ".", "#NEWLINE#", "warn_on_bytestring", "self", "encoder", "self", "warn_on_bytestring", "process"]}}
{"position": {"error_location": 5, "repair_targets": [2, 6, 7], "repair_candidates": [1, 5, 8, 9, 12, 16, 18, 10, 20, 11, 17, 15, 19, 2, 6, 7]}}
{"prediction": {"error_location": 0.7666182518005371, "repair_targets": [0.5921778678894043, 0.16653479635715485, 0.05361577495932579], "repair_candidates": [0.010848984122276306, 0.5921778678894043, 0.11568902432918549, 0.16653479635715485, 0.05361577495932579, 0.0007766452617943287, 0.0019536258187144995, 0.007283942773938179, 0.04263617470860481, 0.0028469774406403303, 0.005074593238532543, 4.379084930405952e-05, 0.0001973952166736126, 5.983136725262739e-05, 0.00010404478234704584, 0.00015660302597098053], "target_probs": 0.8123284578323364}}


{"result": {"time": "2021-02-21 11:54:16.866314", "n_pass": [459, 118, 53], "n_token": 20, "loss": [0.4292168915271759, 0.19860652089118958], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["def bind_processor(", "self", "dialect", "if", "(", "self", "dialect", "dialect", "self", "self", "process", "encoder", "self", "#NEWLINE#", "warn_on_bytestring", "self", "encoder", "self", "warn_on_bytestring", "process"]}}
{"position": {"error_location": 5, "repair_targets": [2, 6, 7], "repair_candidates": [1, 5, 8, 9, 12, 15, 17, 10, 19, 11, 16, 14, 18, 2, 6, 7]}}
{"prediction": {"error_location": 0.6510186791419983, "repair_targets": [0.5967047810554504, 0.15059983730316162, 0.07256781309843063], "repair_candidates": [0.015971265733242035, 0.5967047810554504, 0.08245490491390228, 0.15059983730316162, 0.07256781309843063, 0.000430606072768569, 0.0006398310069926083, 0.005010918248444796, 0.05016651377081871, 0.01962854713201523, 0.005170533899217844, 5.372373198042624e-05, 0.00015017486293800175, 6.318646774161607e-05, 0.0001308853243244812, 0.00025649170856922865], "target_probs": 0.8198724389076233}}


{"result": {"time": "2021-02-21 11:54:16.928970", "n_pass": [460, 119, 54], "n_token": 19, "loss": [0.08507601916790009, 0.1403154879808426], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["def bind_processor(", "self", "dialect", "if", "(", "self", "dialect", "dialect", "self", "self", "process", "encoder", "self", "warn_on_bytestring", "self", "encoder", "self", "warn_on_bytestring", "process"]}}
{"position": {"error_location": 5, "repair_targets": [2, 6, 7], "repair_candidates": [1, 5, 8, 9, 12, 14, 16, 10, 18, 11, 15, 13, 17, 2, 6, 7]}}
{"prediction": {"error_location": 0.9184425473213196, "repair_targets": [0.6706951856613159, 0.10824357718229294, 0.09014527499675751], "repair_candidates": [0.012879600748419762, 0.6706951856613159, 0.053737301379442215, 0.10824357718229294, 0.09014527499675751, 0.0015879955608397722, 0.001673663966357708, 0.0050092339515686035, 0.033153582364320755, 0.012197596952319145, 0.005785799119621515, 0.001313094049692154, 0.0011302900966256857, 0.0006928962538950145, 0.0006650097202509642, 0.0010899644112214446], "target_probs": 0.8690840005874634}}




Minimal simplified tokens:

['def bind_processor(', 'self', 'dialect', 'if', '(', 'self', 'dialect', 'dialect', 'self', 'self', 'process', 'encoder', 'self', 'warn_on_bytestring', 'self', 'encoder', 'self', 'warn_on_bytestring', 'process']
