
Original sample:

{"has_bug": true, "bug_kind": 1, "bug_kind_name": "VARIABLE_MISUSE", "source_tokens": ["#NEWLINE#", "def __init__(", "self", ",", "application", ",", "limits", "=", "None", ",", "limiter", "=", "None", ",", "**kwargs", ")", ":", "#NEWLINE#", "#INDENT#", "'\\n        Initialize new `RateLimitingMiddleware`, which wraps the given WSGI\\n        application and sets up the given limits.\\n\\n        @param application: WSGI application to wrap\\n        @param limits: String describing limits\\n        @param limiter: String identifying class for representing limits\\n\\n        Other parameters are passed to the constructor for the limiter.\\n        '", "#NEWLINE#", "base_wsgi", ".", "Middleware", ".", "__init__", "(", "self", ",", "limits", ")", "#NEWLINE#", "if", "(", "limiter", "is", "None", ")", ":", "#NEWLINE#", "#INDENT#", "limiter", "=", "Limiter", "#NEWLINE#", "#UNINDENT#", "else", ":", "#NEWLINE#", "#INDENT#", "limiter", "=", "utils", ".", "import_class", "(", "limiter", ")", "#NEWLINE#", "#UNINDENT#", "if", "(", "limits", "is not", "None", ")", ":", "#NEWLINE#", "#INDENT#", "limits", "=", "limiter", ".", "parse_limits", "(", "limits", ")", "#NEWLINE#", "#UNINDENT#", "self", ".", "_limiter", "=", "limiter", "(", "(", "limits", "or", "DEFAULT_LIMITS", ")", ",", "**", "kwargs", ")"], "error_location": [29], "repair_targets": [4], "repair_candidates": [2, 27, 79, 4, 92, 6, 29, 62, 69, 75, 86, 10, 34, 41, 50, 56, 71, 83], "provenances": [{"datasetProvenance": {"datasetName": "ETHPy150Open", "filepath": "nii-cloud/dodai-compute/nova/api/openstack/limits.py", "license": "apache-2.0", "note": "license: bigquery_api"}}], "txt_file": "eval__VARIABLE_MISUSE__SStuB.txt-00007-of-00300", "js_count": 24595, "results": {"model": "rnn", "prob": {"loc": [[0.135628342628479, 3.061387587877107e-06, 8.354563618695465e-08, 9.402693734728018e-09, 7.138996807043441e-07, 9.462984174035682e-09, 4.330192027168778e-08, 1.0032682240534996e-08, 3.430869366383149e-09, 5.058360952325813e-10, 4.328135716491488e-08, 6.869480984050824e-09, 3.3876725868964286e-09, 2.1294128960125391e-10, 1.951257644350335e-07, 3.799461012476968e-08, 2.9375013532728644e-09, 7.6515462410498e-08, 3.511381407861336e-08, 2.8497602500010544e-08, 1.5670327258021644e-08, 2.8184675926468117e-08, 5.844345563055242e-10, 7.374936217274808e-10, 3.3825722223213006e-09, 7.350018194074437e-08, 3.231647482948574e-08, 0.8007469773292542, 5.2634048188338056e-05, 0.005207002628594637, 7.426303454849403e-06, 1.9350734419276705e-06, 2.935654386249098e-08, 4.967395739186031e-07, 0.021172864362597466, 1.5589672557325684e-06, 9.292609206568159e-07, 8.278013297058351e-08, 5.279458292761774e-08, 7.023988359833311e-07, 3.3928476028677323e-08, 2.26592486995969e-08, 1.0940507166878888e-08, 0.02005140483379364, 1.9515627514010703e-07, 2.3423233415087452e-06, 6.003511288099617e-08, 1.6453197986265877e-06, 4.7194802732519747e-07, 7.385300371254289e-09, 2.6722965174030833e-08, 3.2773321834156377e-09, 9.612211471221599e-08, 6.753737125109183e-09, 7.321722339526104e-09, 3.169613194131671e-08, 0.008104950189590454, 2.619694861039079e-08, 1.0860777877041983e-07, 6.274312340792676e-07, 4.311901502518367e-09, 4.79883283333038e-07, 0.002956777112558484, 1.5088306781763094e-07, 1.5756478433104348e-06, 1.316783766469598e-07, 5.5563344147913085e-08, 3.223037481348001e-07, 2.036208357480973e-08, 1.7639166571825626e-08, 3.3668918764107048e-09, 1.4204761100700125e-07, 1.4353805921629714e-09, 1.0344930467809377e-09, 5.663121527277326e-09, 0.0019068733090534806, 1.8503607535080846e-08, 5.966479221797272e-08, 1.336132182672145e-08, 1.7241349269170314e-05, 3.1778808473603704e-09, 4.877448667173212e-09, 9.925996913295876e-09, 1.6493220300617395e-07, 1.5000256592401229e-09, 4.509624886850361e-07, 0.0035534861963242292, 2.726742195591214e-06, 2.106951615132857e-05, 9.93643922697629e-08, 6.957542808549988e-08, 1.3009406885089447e-08, 0.0005501267733052373, 1.743683242239058e-07]], "pointer": [[0.0, 0.0, 0.00030262049403972924, 0.0, 0.6528675556182861, 0.0, 0.1810893714427948, 0.0, 0.0, 0.0, 0.12167548388242722, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0005347634432837367, 0.0, 1.7096337614930235e-05, 0.0, 0.0, 0.0, 0.0, 3.953792474931106e-05, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0007485212408937514, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0009994098218157887, 0.0, 0.0, 0.0, 0.0, 0.0, 0.000385746214305982, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0015990076353773475, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0030545855406671762, 0.0, 1.5524645277764648e-05, 0.0, 0.0, 0.0, 0.0008454092894680798, 0.0, 0.0, 0.0, 6.836266402387992e-05, 0.0, 0.0, 0.0, 6.926692003617063e-05, 0.0, 0.0, 0.0007319464930333197, 0.0, 0.0, 0.0, 0.0, 0.0, 0.03495587408542633, 0.0]], "target": [0.6528675556182861]}, "loss": [5.257750511169434, 0.42638099193573], "acc": [0.0, 0.0, 1.0, 0.0]}, "wrong_error_location": [27]}


Trace of simplified code(s):

{"result": {"time": "2021-02-21 12:17:45.803451", "n_pass": [1, 1, 1], "n_token": 94, "loss": [0.22221003472805023, 0.42638099193573], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def __init__(", "self", ",", "application", ",", "limits", "=", "None", ",", "limiter", "=", "None", ",", "**kwargs", ")", ":", "#NEWLINE#", "#INDENT#", "'\\n        Initialize new `RateLimitingMiddleware`, which wraps the given WSGI\\n        application and sets up the given limits.\\n\\n        @param application: WSGI application to wrap\\n        @param limits: String describing limits\\n        @param limiter: String identifying class for representing limits\\n\\n        Other parameters are passed to the constructor for the limiter.\\n        '", "#NEWLINE#", "base_wsgi", ".", "Middleware", ".", "__init__", "(", "self", ",", "limits", ")", "#NEWLINE#", "if", "(", "limiter", "is", "None", ")", ":", "#NEWLINE#", "#INDENT#", "limiter", "=", "Limiter", "#NEWLINE#", "#UNINDENT#", "else", ":", "#NEWLINE#", "#INDENT#", "limiter", "=", "utils", ".", "import_class", "(", "limiter", ")", "#NEWLINE#", "#UNINDENT#", "if", "(", "limits", "is not", "None", ")", ":", "#NEWLINE#", "#INDENT#", "limits", "=", "limiter", ".", "parse_limits", "(", "limits", ")", "#NEWLINE#", "#UNINDENT#", "self", ".", "_limiter", "=", "limiter", "(", "(", "limits", "or", "DEFAULT_LIMITS", ")", ",", "**", "kwargs", ")"]}}
{"position": {"error_location": 27, "repair_targets": [4], "repair_candidates": [2, 27, 79, 4, 92, 6, 29, 62, 69, 75, 86, 10, 34, 41, 50, 56, 71, 83]}}
{"prediction": {"error_location": 0.8007469773292542, "repair_targets": [0.6528675556182861], "repair_candidates": [0.00030262049403972924, 0.6528675556182861, 0.1810893714427948, 0.12167548388242722, 0.0005347634432837367, 1.7096337614930235e-05, 3.953792474931106e-05, 0.0007485212408937514, 0.0009994098218157887, 0.000385746214305982, 0.0015990076353773475, 0.0030545855406671762, 1.5524645277764648e-05, 0.0008454092894680798, 6.836266402387992e-05, 6.926692003617063e-05, 0.0007319464930333197, 0.03495587408542633], "target_probs": 0.6528675556182861}}


{"result": {"time": "2021-02-21 12:17:46.194829", "n_pass": [95, 5, 2], "n_token": 91, "loss": [0.27633824944496155, 0.2927846610546112], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def __init__(", "self", ",", "application", ",", "limits", "limiter", "=", "None", ",", "**kwargs", ")", ":", "#NEWLINE#", "#INDENT#", "'\\n        Initialize new `RateLimitingMiddleware`, which wraps the given WSGI\\n        application and sets up the given limits.\\n\\n        @param application: WSGI application to wrap\\n        @param limits: String describing limits\\n        @param limiter: String identifying class for representing limits\\n\\n        Other parameters are passed to the constructor for the limiter.\\n        '", "#NEWLINE#", "base_wsgi", ".", "Middleware", ".", "__init__", "(", "self", ",", "limits", ")", "#NEWLINE#", "if", "(", "limiter", "is", "None", ")", ":", "#NEWLINE#", "#INDENT#", "limiter", "=", "Limiter", "#NEWLINE#", "#UNINDENT#", "else", ":", "#NEWLINE#", "#INDENT#", "limiter", "=", "utils", ".", "import_class", "(", "limiter", ")", "#NEWLINE#", "#UNINDENT#", "if", "(", "limits", "is not", "None", ")", ":", "#NEWLINE#", "#INDENT#", "limits", "=", "limiter", ".", "parse_limits", "(", "limits", ")", "#NEWLINE#", "#UNINDENT#", "self", ".", "_limiter", "=", "limiter", "(", "(", "limits", "or", "DEFAULT_LIMITS", ")", ",", "**", "kwargs", ")"]}}
{"position": {"error_location": 24, "repair_targets": [4], "repair_candidates": [2, 24, 76, 4, 89, 6, 26, 59, 66, 72, 83, 7, 31, 38, 47, 53, 68, 80]}}
{"prediction": {"error_location": 0.7585561871528625, "repair_targets": [0.7461827993392944], "repair_candidates": [0.00044293864630162716, 0.7461827993392944, 0.11921650916337967, 0.0653068870306015, 0.0005474592908285558, 2.104237319144886e-05, 3.360083792358637e-05, 0.0010200844844803214, 0.0010409847600385547, 0.0005866187857463956, 0.0019264613511040807, 0.004287599585950375, 2.077539829770103e-05, 0.0009309568558819592, 0.0001096571795642376, 9.781130211194977e-05, 0.0009713433682918549, 0.057256441563367844], "target_probs": 0.7461827993392944}}


{"result": {"time": "2021-02-21 12:17:46.672839", "n_pass": [103, 10, 3], "n_token": 88, "loss": [0.18796707689762115, 0.21245422959327698], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def __init__(", "self", ",", "application", ",", "limits", "limiter", "=", "None", ",", "**kwargs", ")", ":", "#NEWLINE#", "#INDENT#", "'\\n        Initialize new `RateLimitingMiddleware`, which wraps the given WSGI\\n        application and sets up the given limits.\\n\\n        @param application: WSGI application to wrap\\n        @param limits: String describing limits\\n        @param limiter: String identifying class for representing limits\\n\\n        Other parameters are passed to the constructor for the limiter.\\n        '", "#NEWLINE#", "base_wsgi", ".", "Middleware", ".", "__init__", "(", "self", ",", "limits", ")", "limiter", "is", "None", ")", ":", "#NEWLINE#", "#INDENT#", "limiter", "=", "Limiter", "#NEWLINE#", "#UNINDENT#", "else", ":", "#NEWLINE#", "#INDENT#", "limiter", "=", "utils", ".", "import_class", "(", "limiter", ")", "#NEWLINE#", "#UNINDENT#", "if", "(", "limits", "is not", "None", ")", ":", "#NEWLINE#", "#INDENT#", "limits", "=", "limiter", ".", "parse_limits", "(", "limits", ")", "#NEWLINE#", "#UNINDENT#", "self", ".", "_limiter", "=", "limiter", "(", "(", "limits", "or", "DEFAULT_LIMITS", ")", ",", "**", "kwargs", ")"]}}
{"position": {"error_location": 24, "repair_targets": [4], "repair_candidates": [2, 24, 73, 4, 86, 6, 26, 56, 63, 69, 80, 7, 28, 35, 44, 50, 65, 77]}}
{"prediction": {"error_location": 0.8286418914794922, "repair_targets": [0.8085973262786865], "repair_candidates": [0.0003472253738436848, 0.8085973262786865, 0.06966015696525574, 0.04686995595693588, 0.0004576705687213689, 1.850702210504096e-05, 1.3711280189454556e-05, 0.0005454396596178412, 0.0008476875955238938, 0.0004396965086925775, 0.00196277117356658, 0.002786895027384162, 1.622726813366171e-05, 0.0008125408203341067, 8.383052045246586e-05, 7.307394116651267e-05, 0.0009453031234443188, 0.06552193313837051], "target_probs": 0.8085973262786865}}


{"result": {"time": "2021-02-21 12:17:46.766588", "n_pass": [105, 11, 4], "n_token": 85, "loss": [0.04633332043886185, 0.21823768317699432], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def __init__(", "self", ",", "application", ",", "limits", "limiter", "=", "None", ",", "**kwargs", ")", ":", "#NEWLINE#", "#INDENT#", "'\\n        Initialize new `RateLimitingMiddleware`, which wraps the given WSGI\\n        application and sets up the given limits.\\n\\n        @param application: WSGI application to wrap\\n        @param limits: String describing limits\\n        @param limiter: String identifying class for representing limits\\n\\n        Other parameters are passed to the constructor for the limiter.\\n        '", "#NEWLINE#", "base_wsgi", ".", "Middleware", ".", "__init__", "(", "self", ",", "limits", ")", "limiter", "is", "None", "#INDENT#", "limiter", "=", "Limiter", "#NEWLINE#", "#UNINDENT#", "else", ":", "#NEWLINE#", "#INDENT#", "limiter", "=", "utils", ".", "import_class", "(", "limiter", ")", "#NEWLINE#", "#UNINDENT#", "if", "(", "limits", "is not", "None", ")", ":", "#NEWLINE#", "#INDENT#", "limits", "=", "limiter", ".", "parse_limits", "(", "limits", ")", "#NEWLINE#", "#UNINDENT#", "self", ".", "_limiter", "=", "limiter", "(", "(", "limits", "or", "DEFAULT_LIMITS", ")", ",", "**", "kwargs", ")"]}}
{"position": {"error_location": 24, "repair_targets": [4], "repair_candidates": [2, 24, 70, 4, 83, 6, 26, 53, 60, 66, 77, 7, 28, 32, 41, 47, 62, 74]}}
{"prediction": {"error_location": 0.954723596572876, "repair_targets": [0.8039343357086182], "repair_candidates": [0.0003867446503136307, 0.8039343357086182, 0.07540716230869293, 0.04897051304578781, 0.0003734317433554679, 1.8357111912337132e-05, 1.3562743333750404e-05, 0.00035848625702783465, 0.00040707478183321655, 0.0004231410566717386, 0.0018469849601387978, 0.00135740265250206, 1.336811783403391e-05, 0.0007461091736331582, 6.820181442890316e-05, 5.171482916921377e-05, 0.0009158930624835193, 0.06470753997564316], "target_probs": 0.8039343357086182}}


{"result": {"time": "2021-02-21 12:17:46.858615", "n_pass": [107, 12, 5], "n_token": 82, "loss": [0.008105834946036339, 0.251270592212677], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def __init__(", "self", ",", "application", ",", "limits", "limiter", "=", "None", ",", "**kwargs", ")", ":", "#NEWLINE#", "#INDENT#", "'\\n        Initialize new `RateLimitingMiddleware`, which wraps the given WSGI\\n        application and sets up the given limits.\\n\\n        @param application: WSGI application to wrap\\n        @param limits: String describing limits\\n        @param limiter: String identifying class for representing limits\\n\\n        Other parameters are passed to the constructor for the limiter.\\n        '", "#NEWLINE#", "base_wsgi", ".", "Middleware", ".", "__init__", "(", "self", ",", "limits", ")", "limiter", "is", "None", "#INDENT#", "limiter", "=", "else", ":", "#NEWLINE#", "#INDENT#", "limiter", "=", "utils", ".", "import_class", "(", "limiter", ")", "#NEWLINE#", "#UNINDENT#", "if", "(", "limits", "is not", "None", ")", ":", "#NEWLINE#", "#INDENT#", "limits", "=", "limiter", ".", "parse_limits", "(", "limits", ")", "#NEWLINE#", "#UNINDENT#", "self", ".", "_limiter", "=", "limiter", "(", "(", "limits", "or", "DEFAULT_LIMITS", ")", ",", "**", "kwargs", ")"]}}
{"position": {"error_location": 24, "repair_targets": [4], "repair_candidates": [2, 24, 67, 4, 80, 6, 26, 50, 57, 63, 74, 7, 28, 32, 38, 44, 59, 71]}}
{"prediction": {"error_location": 0.9919270277023315, "repair_targets": [0.7778118848800659], "repair_candidates": [0.00040001721936278045, 0.7778118848800659, 0.09413276612758636, 0.06230428069829941, 0.0003403003793209791, 1.8432272554491647e-05, 1.2041384252370335e-05, 0.0013209546450525522, 0.0001509051799075678, 0.0007987791323103011, 0.001832845970056951, 0.0008002537651918828, 1.0764355465653352e-05, 0.0007363528129644692, 6.0629907238762826e-05, 4.179784809821285e-05, 0.0007273528608493507, 0.05849968269467354], "target_probs": 0.7778118848800659}}


{"result": {"time": "2021-02-21 12:17:46.949027", "n_pass": [108, 13, 6], "n_token": 79, "loss": [0.004809715319424868, 0.23742316663265228], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def __init__(", "self", ",", "application", ",", "limits", "limiter", "=", "None", ",", "**kwargs", ")", ":", "#NEWLINE#", "#INDENT#", "'\\n        Initialize new `RateLimitingMiddleware`, which wraps the given WSGI\\n        application and sets up the given limits.\\n\\n        @param application: WSGI application to wrap\\n        @param limits: String describing limits\\n        @param limiter: String identifying class for representing limits\\n\\n        Other parameters are passed to the constructor for the limiter.\\n        '", "#NEWLINE#", "base_wsgi", ".", "Middleware", ".", "__init__", "(", "self", ",", "limits", ")", "limiter", "is", "None", "#INDENT#", "limiter", "=", "#INDENT#", "limiter", "=", "utils", ".", "import_class", "(", "limiter", ")", "#NEWLINE#", "#UNINDENT#", "if", "(", "limits", "is not", "None", ")", ":", "#NEWLINE#", "#INDENT#", "limits", "=", "limiter", ".", "parse_limits", "(", "limits", ")", "#NEWLINE#", "#UNINDENT#", "self", ".", "_limiter", "=", "limiter", "(", "(", "limits", "or", "DEFAULT_LIMITS", ")", ",", "**", "kwargs", ")"]}}
{"position": {"error_location": 24, "repair_targets": [4], "repair_candidates": [2, 24, 64, 4, 77, 6, 26, 47, 54, 60, 71, 7, 28, 32, 35, 41, 56, 68]}}
{"prediction": {"error_location": 0.9952017068862915, "repair_targets": [0.7886574864387512], "repair_candidates": [0.00038046686677262187, 0.7886574864387512, 0.08382598310709, 0.057002563029527664, 0.00030827109003439546, 2.0395935280248523e-05, 1.3598637451650575e-05, 0.00015392187924589962, 6.07967194810044e-05, 0.0007082185475155711, 0.001715579885058105, 0.0008109291084110737, 1.0908664080488961e-05, 0.0007740844739601016, 6.131178815849125e-05, 4.153982808929868e-05, 0.0008120815618894994, 0.0646418035030365], "target_probs": 0.7886574864387512}}


{"result": {"time": "2021-02-21 12:17:47.040710", "n_pass": [110, 14, 7], "n_token": 76, "loss": [0.02050803229212761, 0.3072914183139801], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def __init__(", "self", ",", "application", ",", "limits", "limiter", "=", "None", ",", "**kwargs", ")", ":", "#NEWLINE#", "#INDENT#", "'\\n        Initialize new `RateLimitingMiddleware`, which wraps the given WSGI\\n        application and sets up the given limits.\\n\\n        @param application: WSGI application to wrap\\n        @param limits: String describing limits\\n        @param limiter: String identifying class for representing limits\\n\\n        Other parameters are passed to the constructor for the limiter.\\n        '", "#NEWLINE#", "base_wsgi", ".", "Middleware", ".", "__init__", "(", "self", ",", "limits", ")", "limiter", "is", "None", "#INDENT#", "limiter", "=", "#INDENT#", "limiter", "=", "(", "limiter", ")", "#NEWLINE#", "#UNINDENT#", "if", "(", "limits", "is not", "None", ")", ":", "#NEWLINE#", "#INDENT#", "limits", "=", "limiter", ".", "parse_limits", "(", "limits", ")", "#NEWLINE#", "#UNINDENT#", "self", ".", "_limiter", "=", "limiter", "(", "(", "limits", "or", "DEFAULT_LIMITS", ")", ",", "**", "kwargs", ")"]}}
{"position": {"error_location": 24, "repair_targets": [4], "repair_candidates": [2, 24, 61, 4, 74, 6, 26, 44, 51, 57, 68, 7, 28, 32, 35, 38, 53, 65]}}
{"prediction": {"error_location": 0.9797006845474243, "repair_targets": [0.7354362607002258], "repair_candidates": [0.0003789353067986667, 0.7354362607002258, 0.07672134041786194, 0.07230034470558167, 0.00047874002484604716, 2.8862674298579805e-05, 2.213205698353704e-05, 0.00031532783759757876, 0.00021119494340382516, 0.00011459103552624583, 0.002029760042205453, 0.0014867123682051897, 1.5408229955937713e-05, 0.0011135508539155126, 0.0001027657781378366, 6.876364204799756e-05, 0.0012055293191224337, 0.10796977579593658], "target_probs": 0.7354362607002258}}


{"result": {"time": "2021-02-21 12:17:47.128469", "n_pass": [112, 15, 8], "n_token": 73, "loss": [0.04288879781961441, 0.3098718523979187], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def __init__(", "self", ",", "application", ",", "limits", "limiter", "=", "None", ",", "**kwargs", ")", ":", "#NEWLINE#", "#INDENT#", "'\\n        Initialize new `RateLimitingMiddleware`, which wraps the given WSGI\\n        application and sets up the given limits.\\n\\n        @param application: WSGI application to wrap\\n        @param limits: String describing limits\\n        @param limiter: String identifying class for representing limits\\n\\n        Other parameters are passed to the constructor for the limiter.\\n        '", "#NEWLINE#", "base_wsgi", ".", "Middleware", ".", "__init__", "(", "self", ",", "limits", ")", "limiter", "is", "None", "#INDENT#", "limiter", "=", "#INDENT#", "limiter", "=", "(", "limiter", ")", "(", "limits", "is not", "None", ")", ":", "#NEWLINE#", "#INDENT#", "limits", "=", "limiter", ".", "parse_limits", "(", "limits", ")", "#NEWLINE#", "#UNINDENT#", "self", ".", "_limiter", "=", "limiter", "(", "(", "limits", "or", "DEFAULT_LIMITS", ")", ",", "**", "kwargs", ")"]}}
{"position": {"error_location": 24, "repair_targets": [4], "repair_candidates": [2, 24, 58, 4, 71, 6, 26, 41, 48, 54, 65, 7, 28, 32, 35, 38, 50, 62]}}
{"prediction": {"error_location": 0.9580178260803223, "repair_targets": [0.733540952205658], "repair_candidates": [0.00043556871241889894, 0.733540952205658, 0.07550525665283203, 0.07549915462732315, 0.00044399459147825837, 2.7019244953407906e-05, 2.3889695512480102e-05, 0.0013154486659914255, 0.0006132890121079981, 0.0001231799105880782, 0.0056161414831876755, 0.002241723472252488, 1.2954164049006067e-05, 0.00043046692735515535, 0.00012352375779300928, 7.720076973782852e-05, 0.0007970697479322553, 0.10317308455705643], "target_probs": 0.733540952205658}}


{"result": {"time": "2021-02-21 12:17:47.214779", "n_pass": [114, 16, 9], "n_token": 70, "loss": [0.030713627114892006, 0.3263768255710602], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def __init__(", "self", ",", "application", ",", "limits", "limiter", "=", "None", ",", "**kwargs", ")", ":", "#NEWLINE#", "#INDENT#", "'\\n        Initialize new `RateLimitingMiddleware`, which wraps the given WSGI\\n        application and sets up the given limits.\\n\\n        @param application: WSGI application to wrap\\n        @param limits: String describing limits\\n        @param limiter: String identifying class for representing limits\\n\\n        Other parameters are passed to the constructor for the limiter.\\n        '", "#NEWLINE#", "base_wsgi", ".", "Middleware", ".", "__init__", "(", "self", ",", "limits", ")", "limiter", "is", "None", "#INDENT#", "limiter", "=", "#INDENT#", "limiter", "=", "(", "limiter", ")", "(", "limits", "is not", "#NEWLINE#", "#INDENT#", "limits", "=", "limiter", ".", "parse_limits", "(", "limits", ")", "#NEWLINE#", "#UNINDENT#", "self", ".", "_limiter", "=", "limiter", "(", "(", "limits", "or", "DEFAULT_LIMITS", ")", ",", "**", "kwargs", ")"]}}
{"position": {"error_location": 24, "repair_targets": [4], "repair_candidates": [2, 24, 55, 4, 68, 6, 26, 41, 45, 51, 62, 7, 28, 32, 35, 38, 47, 59]}}
{"prediction": {"error_location": 0.9697532653808594, "repair_targets": [0.7215332388877869], "repair_candidates": [0.00043472391553223133, 0.7215332388877869, 0.08023370057344437, 0.0819452702999115, 0.0004310908552724868, 2.704846156120766e-05, 2.3768419850966893e-05, 0.0012454550014808774, 0.0005285629886202514, 0.00010383430344518274, 0.0036918281111866236, 0.0015840528067201376, 1.7101194316637702e-05, 0.00043324034777469933, 0.00012049596989527345, 7.97343163867481e-05, 0.0009480331791564822, 0.10661881417036057], "target_probs": 0.7215332388877869}}


{"result": {"time": "2021-02-21 12:17:47.300006", "n_pass": [118, 17, 10], "n_token": 67, "loss": [0.0207720585167408, 0.3011869192123413], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def __init__(", "self", ",", "application", ",", "limits", "limiter", "=", "None", ",", "**kwargs", ")", ":", "#NEWLINE#", "#INDENT#", "'\\n        Initialize new `RateLimitingMiddleware`, which wraps the given WSGI\\n        application and sets up the given limits.\\n\\n        @param application: WSGI application to wrap\\n        @param limits: String describing limits\\n        @param limiter: String identifying class for representing limits\\n\\n        Other parameters are passed to the constructor for the limiter.\\n        '", "#NEWLINE#", "base_wsgi", ".", "Middleware", ".", "__init__", "(", "self", ",", "limits", ")", "limiter", "is", "None", "#INDENT#", "limiter", "=", "#INDENT#", "limiter", "=", "(", "limiter", ")", "(", "limits", "is not", "#NEWLINE#", "#INDENT#", "limits", "=", "limiter", ".", "parse_limits", "(", "limits", "self", ".", "_limiter", "=", "limiter", "(", "(", "limits", "or", "DEFAULT_LIMITS", ")", ",", "**", "kwargs", ")"]}}
{"position": {"error_location": 24, "repair_targets": [4], "repair_candidates": [2, 24, 52, 4, 65, 6, 26, 41, 45, 51, 59, 7, 28, 32, 35, 38, 47, 56]}}
{"prediction": {"error_location": 0.9794421792030334, "repair_targets": [0.7399394512176514], "repair_candidates": [0.00041525965207256377, 0.7399394512176514, 0.08837202936410904, 0.11254356056451797, 0.0005260262987576425, 3.1082203349797055e-05, 2.554390812292695e-05, 0.0036026309244334698, 0.0013328527566045523, 0.00016910507110878825, 0.004796062596142292, 0.002038363367319107, 2.3944003260112368e-05, 0.0006696491036564112, 5.6998418585862964e-05, 6.777223461540416e-05, 0.0003804485604632646, 0.04500914737582207], "target_probs": 0.7399394512176514}}


{"result": {"time": "2021-02-21 12:17:47.385729", "n_pass": [122, 18, 11], "n_token": 64, "loss": [0.07272693514823914, 0.344778835773468], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def __init__(", "self", ",", "application", ",", "limits", "limiter", "=", "None", ",", "**kwargs", ")", ":", "#NEWLINE#", "#INDENT#", "'\\n        Initialize new `RateLimitingMiddleware`, which wraps the given WSGI\\n        application and sets up the given limits.\\n\\n        @param application: WSGI application to wrap\\n        @param limits: String describing limits\\n        @param limiter: String identifying class for representing limits\\n\\n        Other parameters are passed to the constructor for the limiter.\\n        '", "#NEWLINE#", "base_wsgi", ".", "Middleware", ".", "__init__", "(", "self", ",", "limits", ")", "limiter", "is", "None", "#INDENT#", "limiter", "=", "#INDENT#", "limiter", "=", "(", "limiter", ")", "(", "limits", "is not", "#NEWLINE#", "#INDENT#", "limits", "=", "limiter", ".", "parse_limits", "(", "limits", "self", ".", "_limiter", "=", "limiter", "(", "(", "limits", "or", "**", "kwargs", ")"]}}
{"position": {"error_location": 24, "repair_targets": [4], "repair_candidates": [2, 24, 52, 4, 62, 6, 26, 41, 45, 51, 59, 7, 28, 32, 35, 38, 47, 56]}}
{"prediction": {"error_location": 0.929854691028595, "repair_targets": [0.7083770036697388], "repair_candidates": [0.00043580529745668173, 0.7083770036697388, 0.08444804698228836, 0.11797671020030975, 0.001102255773730576, 4.787416401086375e-05, 5.067071833764203e-05, 0.0029741767793893814, 0.0007938917260617018, 0.0001705249451333657, 0.0031704436987638474, 0.0031206863932311535, 3.669904253911227e-05, 0.0006832632352598011, 7.04427802702412e-05, 0.00011873005860252306, 0.00027532593230716884, 0.07614747434854507], "target_probs": 0.7083770036697388}}


{"result": {"time": "2021-02-21 12:17:47.548665", "n_pass": [128, 20, 12], "n_token": 61, "loss": [0.20689351856708527, 0.2667700946331024], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def __init__(", "self", ",", "application", ",", "limits", "limiter", "=", "None", ":", "#NEWLINE#", "#INDENT#", "'\\n        Initialize new `RateLimitingMiddleware`, which wraps the given WSGI\\n        application and sets up the given limits.\\n\\n        @param application: WSGI application to wrap\\n        @param limits: String describing limits\\n        @param limiter: String identifying class for representing limits\\n\\n        Other parameters are passed to the constructor for the limiter.\\n        '", "#NEWLINE#", "base_wsgi", ".", "Middleware", ".", "__init__", "(", "self", ",", "limits", ")", "limiter", "is", "None", "#INDENT#", "limiter", "=", "#INDENT#", "limiter", "=", "(", "limiter", ")", "(", "limits", "is not", "#NEWLINE#", "#INDENT#", "limits", "=", "limiter", ".", "parse_limits", "(", "limits", "self", ".", "_limiter", "=", "limiter", "(", "(", "limits", "or", "**", "kwargs", ")"]}}
{"position": {"error_location": 21, "repair_targets": [4], "repair_candidates": [2, 21, 49, 4, 59, 6, 23, 38, 42, 48, 56, 7, 25, 29, 32, 35, 44, 53]}}
{"prediction": {"error_location": 0.8131061792373657, "repair_targets": [0.7658491134643555], "repair_candidates": [0.00040510203689336777, 0.7658491134643555, 0.08538519591093063, 0.07145292311906815, 0.0015570337418466806, 5.344245073501952e-05, 6.192825821926817e-05, 0.003924800083041191, 0.0011456909123808146, 0.00011065076978411525, 0.0025059403851628304, 0.004926959052681923, 4.142840043641627e-05, 0.000817898369859904, 9.86985833151266e-05, 0.00012973324919585139, 0.00024682353250682354, 0.06128671020269394], "target_probs": 0.7658491134643555}}


{"result": {"time": "2021-02-21 12:17:48.033117", "n_pass": [193, 26, 13], "n_token": 60, "loss": [0.11655426770448685, 0.268341988325119], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def __init__(", "self", ",", "application", ",", "limits", "limiter", "=", ":", "#NEWLINE#", "#INDENT#", "'\\n        Initialize new `RateLimitingMiddleware`, which wraps the given WSGI\\n        application and sets up the given limits.\\n\\n        @param application: WSGI application to wrap\\n        @param limits: String describing limits\\n        @param limiter: String identifying class for representing limits\\n\\n        Other parameters are passed to the constructor for the limiter.\\n        '", "#NEWLINE#", "base_wsgi", ".", "Middleware", ".", "__init__", "(", "self", ",", "limits", ")", "limiter", "is", "None", "#INDENT#", "limiter", "=", "#INDENT#", "limiter", "=", "(", "limiter", ")", "(", "limits", "is not", "#NEWLINE#", "#INDENT#", "limits", "=", "limiter", ".", "parse_limits", "(", "limits", "self", ".", "_limiter", "=", "limiter", "(", "(", "limits", "or", "**", "kwargs", ")"]}}
{"position": {"error_location": 20, "repair_targets": [4], "repair_candidates": [2, 20, 48, 4, 58, 6, 22, 37, 41, 47, 55, 7, 24, 28, 31, 34, 43, 52]}}
{"prediction": {"error_location": 0.8899818658828735, "repair_targets": [0.7646462321281433], "repair_candidates": [0.0004328348150011152, 0.7646462321281433, 0.03728226572275162, 0.10829602181911469, 0.0016109864227473736, 5.279065226204693e-05, 5.234697528067045e-05, 0.0026159563567489386, 0.0008409491856582463, 0.00011757868196582422, 0.0028601502999663353, 0.00405819620937109, 3.5863373341271654e-05, 0.0007264529122039676, 7.239199476316571e-05, 0.0001091708181775175, 0.00026373384753242135, 0.07592616975307465], "target_probs": 0.7646462321281433}}


{"result": {"time": "2021-02-21 12:17:48.113296", "n_pass": [194, 27, 14], "n_token": 59, "loss": [0.6561440825462341, 0.16888216137886047], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def __init__(", "self", ",", "application", ",", "limits", "limiter", "=", "#NEWLINE#", "#INDENT#", "'\\n        Initialize new `RateLimitingMiddleware`, which wraps the given WSGI\\n        application and sets up the given limits.\\n\\n        @param application: WSGI application to wrap\\n        @param limits: String describing limits\\n        @param limiter: String identifying class for representing limits\\n\\n        Other parameters are passed to the constructor for the limiter.\\n        '", "#NEWLINE#", "base_wsgi", ".", "Middleware", ".", "__init__", "(", "self", ",", "limits", ")", "limiter", "is", "None", "#INDENT#", "limiter", "=", "#INDENT#", "limiter", "=", "(", "limiter", ")", "(", "limits", "is not", "#NEWLINE#", "#INDENT#", "limits", "=", "limiter", ".", "parse_limits", "(", "limits", "self", ".", "_limiter", "=", "limiter", "(", "(", "limits", "or", "**", "kwargs", ")"]}}
{"position": {"error_location": 19, "repair_targets": [4], "repair_candidates": [2, 19, 47, 4, 57, 6, 21, 36, 40, 46, 54, 7, 23, 27, 30, 33, 42, 51]}}
{"prediction": {"error_location": 0.5188480615615845, "repair_targets": [0.8446084260940552], "repair_candidates": [0.0004265980969648808, 0.8446084260940552, 0.04366094991564751, 0.03912665322422981, 0.0026267541106790304, 7.202544657047838e-05, 9.254974429495633e-05, 0.008135554380714893, 0.0023207280319184065, 0.00011292099952697754, 0.002474742941558361, 0.010284128598868847, 4.7243280278053135e-05, 0.0011000530794262886, 0.00016890016559045762, 0.00016371738456655294, 0.000273064972134307, 0.04430506005883217], "target_probs": 0.8446084260940552}}


{"result": {"time": "2021-02-21 12:17:48.193074", "n_pass": [195, 28, 15], "n_token": 58, "loss": [0.6536413431167603, 0.22100147604942322], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def __init__(", "self", ",", "application", ",", "limits", "limiter", "=", "#INDENT#", "'\\n        Initialize new `RateLimitingMiddleware`, which wraps the given WSGI\\n        application and sets up the given limits.\\n\\n        @param application: WSGI application to wrap\\n        @param limits: String describing limits\\n        @param limiter: String identifying class for representing limits\\n\\n        Other parameters are passed to the constructor for the limiter.\\n        '", "#NEWLINE#", "base_wsgi", ".", "Middleware", ".", "__init__", "(", "self", ",", "limits", ")", "limiter", "is", "None", "#INDENT#", "limiter", "=", "#INDENT#", "limiter", "=", "(", "limiter", ")", "(", "limits", "is not", "#NEWLINE#", "#INDENT#", "limits", "=", "limiter", ".", "parse_limits", "(", "limits", "self", ".", "_limiter", "=", "limiter", "(", "(", "limits", "or", "**", "kwargs", ")"]}}
{"position": {"error_location": 18, "repair_targets": [4], "repair_candidates": [2, 18, 46, 4, 56, 6, 20, 35, 39, 45, 53, 7, 22, 26, 29, 32, 41, 50]}}
{"prediction": {"error_location": 0.5201482772827148, "repair_targets": [0.8017154932022095], "repair_candidates": [0.0004497807822190225, 0.8017154932022095, 0.09014838188886642, 0.04557036980986595, 0.00225669308565557, 6.978289457038045e-05, 8.969594637164846e-05, 0.008187380619347095, 0.002109342021867633, 9.763470006873831e-05, 0.0018346671713516116, 0.01005821954458952, 4.399225872475654e-05, 0.000988450483419001, 0.00017584538727533072, 0.00016074013547040522, 0.00024046770704444498, 0.03580308333039284], "target_probs": 0.8017154932022095}}


{"result": {"time": "2021-02-21 12:17:48.669408", "n_pass": [201, 34, 16], "n_token": 57, "loss": [0.19077584147453308, 0.2901494801044464], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def __init__(", "self", ",", "application", ",", "limits", "limiter", "=", "#INDENT#", "'\\n        Initialize new `RateLimitingMiddleware`, which wraps the given WSGI\\n        application and sets up the given limits.\\n\\n        @param application: WSGI application to wrap\\n        @param limits: String describing limits\\n        @param limiter: String identifying class for representing limits\\n\\n        Other parameters are passed to the constructor for the limiter.\\n        '", "#NEWLINE#", "base_wsgi", ".", ".", "__init__", "(", "self", ",", "limits", ")", "limiter", "is", "None", "#INDENT#", "limiter", "=", "#INDENT#", "limiter", "=", "(", "limiter", ")", "(", "limits", "is not", "#NEWLINE#", "#INDENT#", "limits", "=", "limiter", ".", "parse_limits", "(", "limits", "self", ".", "_limiter", "=", "limiter", "(", "(", "limits", "or", "**", "kwargs", ")"]}}
{"position": {"error_location": 17, "repair_targets": [4], "repair_candidates": [2, 17, 45, 4, 55, 6, 19, 34, 38, 44, 52, 7, 21, 25, 28, 31, 40, 49]}}
{"prediction": {"error_location": 0.8263178467750549, "repair_targets": [0.7481517195701599], "repair_candidates": [0.0005660614697262645, 0.7481517195701599, 0.08177918940782547, 0.04279293492436409, 0.0004538048233371228, 3.728532828972675e-05, 6.388493056874722e-05, 0.007025527767837048, 0.001974988728761673, 0.00016780279111117125, 0.004101898986846209, 0.007043321616947651, 6.311656761681661e-05, 0.0011449356097728014, 0.00011833589087473229, 0.00016833878180477768, 0.00035412635770626366, 0.10399283468723297], "target_probs": 0.7481517195701599}}


{"result": {"time": "2021-02-21 12:17:48.831320", "n_pass": [203, 36, 17], "n_token": 56, "loss": [5.125986263010418e-06, 0.108781598508358], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def __init__(", "self", ",", "application", ",", "limits", "limiter", "=", "#INDENT#", "'\\n        Initialize new `RateLimitingMiddleware`, which wraps the given WSGI\\n        application and sets up the given limits.\\n\\n        @param application: WSGI application to wrap\\n        @param limits: String describing limits\\n        @param limiter: String identifying class for representing limits\\n\\n        Other parameters are passed to the constructor for the limiter.\\n        '", "#NEWLINE#", "base_wsgi", ".", ".", "(", "self", ",", "limits", ")", "limiter", "is", "None", "#INDENT#", "limiter", "=", "#INDENT#", "limiter", "=", "(", "limiter", ")", "(", "limits", "is not", "#NEWLINE#", "#INDENT#", "limits", "=", "limiter", ".", "parse_limits", "(", "limits", "self", ".", "_limiter", "=", "limiter", "(", "(", "limits", "or", "**", "kwargs", ")"]}}
{"position": {"error_location": 16, "repair_targets": [4], "repair_candidates": [2, 16, 44, 4, 54, 6, 18, 33, 37, 43, 51, 7, 20, 24, 27, 30, 39, 48]}}
{"prediction": {"error_location": 0.9999949932098389, "repair_targets": [0.8969262838363647], "repair_candidates": [0.00019758183043450117, 0.8969262838363647, 0.0334300622344017, 0.018638407811522484, 2.3007107301964425e-05, 1.3738119378103875e-05, 2.1038626073277555e-05, 0.001287312712520361, 0.0003575556620489806, 8.095645171124488e-05, 0.003231263253837824, 0.0006932158139534295, 1.420330681867199e-05, 0.0002468819438945502, 1.7626036424189806e-05, 3.605222445912659e-05, 0.00017858373757917434, 0.044606246054172516], "target_probs": 0.8969262838363647}}


{"result": {"time": "2021-02-21 12:17:48.989654", "n_pass": [206, 38, 18], "n_token": 55, "loss": [5.435795901576057e-05, 0.06624011695384979], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def __init__(", "self", ",", "application", ",", "limits", "limiter", "=", "#INDENT#", "'\\n        Initialize new `RateLimitingMiddleware`, which wraps the given WSGI\\n        application and sets up the given limits.\\n\\n        @param application: WSGI application to wrap\\n        @param limits: String describing limits\\n        @param limiter: String identifying class for representing limits\\n\\n        Other parameters are passed to the constructor for the limiter.\\n        '", "#NEWLINE#", "base_wsgi", ".", ".", "(", "self", "limits", ")", "limiter", "is", "None", "#INDENT#", "limiter", "=", "#INDENT#", "limiter", "=", "(", "limiter", ")", "(", "limits", "is not", "#NEWLINE#", "#INDENT#", "limits", "=", "limiter", ".", "parse_limits", "(", "limits", "self", ".", "_limiter", "=", "limiter", "(", "(", "limits", "or", "**", "kwargs", ")"]}}
{"position": {"error_location": 16, "repair_targets": [4], "repair_candidates": [2, 16, 43, 4, 53, 6, 17, 32, 36, 42, 50, 7, 19, 23, 26, 29, 38, 47]}}
{"prediction": {"error_location": 0.9999457597732544, "repair_targets": [0.9359061121940613], "repair_candidates": [8.325834642164409e-05, 0.9359061121940613, 0.017416195943951607, 0.013008690439164639, 1.5664232705603354e-05, 1.2203749975014944e-05, 2.5032613848452456e-05, 0.0010990370064973831, 0.0002891077601816505, 5.718029569834471e-05, 0.002562860492616892, 0.0004924969398416579, 9.412546205567196e-06, 0.0001476266043027863, 8.65639594849199e-06, 2.1555273633566685e-05, 0.00013753975508734584, 0.028707440942525864], "target_probs": 0.9359061121940613}}


{"result": {"time": "2021-02-21 12:17:49.066692", "n_pass": [209, 39, 19], "n_token": 53, "loss": [5.352353764465079e-05, 0.07039741426706314], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def __init__(", "self", ",", "application", ",", "limits", "limiter", "=", "#INDENT#", "'\\n        Initialize new `RateLimitingMiddleware`, which wraps the given WSGI\\n        application and sets up the given limits.\\n\\n        @param application: WSGI application to wrap\\n        @param limits: String describing limits\\n        @param limiter: String identifying class for representing limits\\n\\n        Other parameters are passed to the constructor for the limiter.\\n        '", "#NEWLINE#", "base_wsgi", ".", ".", "(", "self", "limits", ")", "limiter", "is", "limiter", "=", "#INDENT#", "limiter", "=", "(", "limiter", ")", "(", "limits", "is not", "#NEWLINE#", "#INDENT#", "limits", "=", "limiter", ".", "parse_limits", "(", "limits", "self", ".", "_limiter", "=", "limiter", "(", "(", "limits", "or", "**", "kwargs", ")"]}}
{"position": {"error_location": 16, "repair_targets": [4], "repair_candidates": [2, 16, 41, 4, 51, 6, 17, 30, 34, 40, 48, 7, 19, 21, 24, 27, 36, 45]}}
{"prediction": {"error_location": 0.9999464750289917, "repair_targets": [0.9320233464241028], "repair_candidates": [8.537722169421613e-05, 0.9320233464241028, 0.017602086067199707, 0.013956530950963497, 1.820572288124822e-05, 1.623512252990622e-05, 9.725172276375815e-05, 6.047793067409657e-05, 0.00041663917363621294, 5.13959166710265e-05, 0.0034569883719086647, 0.0006771149346604943, 1.0407891750219278e-05, 0.00017392220615874976, 9.544435670250095e-06, 2.3053093173075467e-05, 0.00015495656407438219, 0.03116639330983162], "target_probs": 0.9320233464241028}}


{"result": {"time": "2021-02-21 12:17:49.142739", "n_pass": [212, 40, 20], "n_token": 51, "loss": [4.970903682988137e-05, 0.09656395018100739], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def __init__(", "self", ",", "application", ",", "limits", "limiter", "=", "#INDENT#", "'\\n        Initialize new `RateLimitingMiddleware`, which wraps the given WSGI\\n        application and sets up the given limits.\\n\\n        @param application: WSGI application to wrap\\n        @param limits: String describing limits\\n        @param limiter: String identifying class for representing limits\\n\\n        Other parameters are passed to the constructor for the limiter.\\n        '", "#NEWLINE#", "base_wsgi", ".", ".", "(", "self", "limits", ")", "limiter", "is", "limiter", "=", "#INDENT#", "limiter", "limiter", ")", "(", "limits", "is not", "#NEWLINE#", "#INDENT#", "limits", "=", "limiter", ".", "parse_limits", "(", "limits", "self", ".", "_limiter", "=", "limiter", "(", "(", "limits", "or", "**", "kwargs", ")"]}}
{"position": {"error_location": 16, "repair_targets": [4], "repair_candidates": [2, 16, 39, 4, 49, 6, 17, 28, 32, 38, 46, 7, 19, 21, 24, 25, 34, 43]}}
{"prediction": {"error_location": 0.9999500513076782, "repair_targets": [0.907951831817627], "repair_candidates": [0.00010718475823523477, 0.907951831817627, 0.019076697528362274, 0.017436256632208824, 3.3259970223298296e-05, 2.7480762582854368e-05, 0.00012772486661560833, 0.00011854013428092003, 0.0002036744263023138, 6.390578346326947e-05, 0.004690598230808973, 0.0008714569848962128, 1.547281317471061e-05, 0.000275254191365093, 1.30889948195545e-05, 3.3397660445189103e-05, 0.0003347486490383744, 0.04861943796277046], "target_probs": 0.907951831817627}}


{"result": {"time": "2021-02-21 12:17:49.220941", "n_pass": [215, 41, 21], "n_token": 49, "loss": [4.911301948595792e-05, 0.08361219614744186], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def __init__(", "self", ",", "application", ",", "limits", "limiter", "=", "#INDENT#", "'\\n        Initialize new `RateLimitingMiddleware`, which wraps the given WSGI\\n        application and sets up the given limits.\\n\\n        @param application: WSGI application to wrap\\n        @param limits: String describing limits\\n        @param limiter: String identifying class for representing limits\\n\\n        Other parameters are passed to the constructor for the limiter.\\n        '", "#NEWLINE#", "base_wsgi", ".", ".", "(", "self", "limits", ")", "limiter", "is", "limiter", "=", "#INDENT#", "limiter", "limiter", ")", "(", "limits", "#INDENT#", "limits", "=", "limiter", ".", "parse_limits", "(", "limits", "self", ".", "_limiter", "=", "limiter", "(", "(", "limits", "or", "**", "kwargs", ")"]}}
{"position": {"error_location": 16, "repair_targets": [4], "repair_candidates": [2, 16, 37, 4, 47, 6, 17, 28, 30, 36, 44, 7, 19, 21, 24, 25, 32, 41]}}
{"prediction": {"error_location": 0.9999508857727051, "repair_targets": [0.9197878837585449], "repair_candidates": [0.00010265682794852182, 0.9197878837585449, 0.01867818646132946, 0.01911894790828228, 2.870356729545165e-05, 3.180369094479829e-05, 0.00011504894064273685, 0.00010944782115984708, 0.00025708627072162926, 7.229673065012321e-05, 0.001241637161001563, 0.0004912277800031006, 1.1570973583729938e-05, 0.0002184184268116951, 1.5759576854179613e-05, 3.269367880420759e-05, 0.0002437547518638894, 0.03944283723831177], "target_probs": 0.9197878837585449}}


{"result": {"time": "2021-02-21 12:17:49.295039", "n_pass": [218, 42, 22], "n_token": 47, "loss": [3.85038583772257e-05, 0.08183203637599945], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def __init__(", "self", ",", "application", ",", "limits", "limiter", "=", "#INDENT#", "'\\n        Initialize new `RateLimitingMiddleware`, which wraps the given WSGI\\n        application and sets up the given limits.\\n\\n        @param application: WSGI application to wrap\\n        @param limits: String describing limits\\n        @param limiter: String identifying class for representing limits\\n\\n        Other parameters are passed to the constructor for the limiter.\\n        '", "#NEWLINE#", "base_wsgi", ".", ".", "(", "self", "limits", ")", "limiter", "is", "limiter", "=", "#INDENT#", "limiter", "limiter", ")", "(", "limits", "#INDENT#", "limits", "=", "limiter", "(", "limits", "self", ".", "_limiter", "=", "limiter", "(", "(", "limits", "or", "**", "kwargs", ")"]}}
{"position": {"error_location": 16, "repair_targets": [4], "repair_candidates": [2, 16, 35, 4, 45, 6, 17, 28, 30, 34, 42, 7, 19, 21, 24, 25, 32, 39]}}
{"prediction": {"error_location": 0.9999614953994751, "repair_targets": [0.9214267134666443], "repair_candidates": [9.936324204318225e-05, 0.9214267134666443, 0.01793595217168331, 0.018568873405456543, 2.7077365302830003e-05, 2.9466238629538566e-05, 0.00011461839312687516, 0.00011965475277975202, 0.00024270663561765105, 5.7958121033152565e-05, 0.0012162216007709503, 0.0002681625774130225, 3.454045145190321e-05, 0.0007515245233662426, 4.515556793194264e-05, 2.6979672838933766e-05, 0.00022293262009043247, 0.03881203383207321], "target_probs": 0.9214267134666443}}


{"result": {"time": "2021-02-21 12:17:49.367858", "n_pass": [221, 43, 23], "n_token": 45, "loss": [6.05564855504781e-05, 0.058289457112550735], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def __init__(", "self", ",", "application", ",", "limits", "limiter", "=", "#INDENT#", "'\\n        Initialize new `RateLimitingMiddleware`, which wraps the given WSGI\\n        application and sets up the given limits.\\n\\n        @param application: WSGI application to wrap\\n        @param limits: String describing limits\\n        @param limiter: String identifying class for representing limits\\n\\n        Other parameters are passed to the constructor for the limiter.\\n        '", "#NEWLINE#", "base_wsgi", ".", ".", "(", "self", "limits", ")", "limiter", "is", "limiter", "=", "#INDENT#", "limiter", "limiter", ")", "(", "limits", "#INDENT#", "limits", "=", "limiter", "(", "limits", "self", ".", "limiter", "(", "(", "limits", "or", "**", "kwargs", ")"]}}
{"position": {"error_location": 16, "repair_targets": [4], "repair_candidates": [2, 16, 35, 4, 43, 6, 17, 28, 30, 34, 40, 7, 19, 21, 24, 25, 32, 37]}}
{"prediction": {"error_location": 0.9999394416809082, "repair_targets": [0.9433768391609192], "repair_candidates": [7.004578219493851e-05, 0.9433768391609192, 0.0134111437946558, 0.012200846336781979, 1.9468512618914247e-05, 1.8974555132444948e-05, 0.00010921018838416785, 0.00012055873958161101, 0.00018025783356279135, 5.099138434161432e-05, 0.0018917444394901395, 0.0007106107077561319, 3.890034349751659e-05, 0.00024176437000278383, 6.039847903593909e-06, 0.0017928644083440304, 6.66615815134719e-05, 0.02569301426410675], "target_probs": 0.9433768391609192}}


{"result": {"time": "2021-02-21 12:17:49.439955", "n_pass": [224, 44, 24], "n_token": 43, "loss": [2.992108420585282e-05, 0.01896975375711918], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def __init__(", "self", ",", "application", ",", "limits", "limiter", "=", "#INDENT#", "'\\n        Initialize new `RateLimitingMiddleware`, which wraps the given WSGI\\n        application and sets up the given limits.\\n\\n        @param application: WSGI application to wrap\\n        @param limits: String describing limits\\n        @param limiter: String identifying class for representing limits\\n\\n        Other parameters are passed to the constructor for the limiter.\\n        '", "#NEWLINE#", "base_wsgi", ".", ".", "(", "self", "limits", ")", "limiter", "is", "limiter", "=", "#INDENT#", "limiter", "limiter", ")", "(", "limits", "#INDENT#", "limits", "=", "limiter", "(", "limits", "self", ".", "limiter", "(", "(", "limits", "kwargs", ")"]}}
{"position": {"error_location": 16, "repair_targets": [4], "repair_candidates": [2, 16, 35, 4, 41, 6, 17, 28, 30, 34, 40, 7, 19, 21, 24, 25, 32, 37]}}
{"prediction": {"error_location": 0.9999701976776123, "repair_targets": [0.9812090396881104], "repair_candidates": [2.4471011784044094e-05, 0.9812090396881104, 0.007529067806899548, 0.00790062453597784, 9.703487194201443e-06, 1.137966501119081e-05, 0.00011207894567633048, 0.00038292541285045445, 0.0002315858582733199, 9.853958908934146e-05, 0.0014685633359476924, 9.18095902306959e-05, 6.518708687508479e-06, 8.57921622809954e-05, 1.6867406884557568e-06, 0.00020162998407613486, 0.0005753552541136742, 5.918877650401555e-05], "target_probs": 0.9812090396881104}}


{"result": {"time": "2021-02-21 12:17:49.511396", "n_pass": [226, 45, 25], "n_token": 42, "loss": [2.4199192921514623e-05, 0.04287862777709961], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["def __init__(", "self", ",", "application", ",", "limits", "limiter", "=", "#INDENT#", "'\\n        Initialize new `RateLimitingMiddleware`, which wraps the given WSGI\\n        application and sets up the given limits.\\n\\n        @param application: WSGI application to wrap\\n        @param limits: String describing limits\\n        @param limiter: String identifying class for representing limits\\n\\n        Other parameters are passed to the constructor for the limiter.\\n        '", "#NEWLINE#", "base_wsgi", ".", ".", "(", "self", "limits", ")", "limiter", "is", "limiter", "=", "#INDENT#", "limiter", "limiter", ")", "(", "limits", "#INDENT#", "limits", "=", "limiter", "(", "limits", "self", ".", "limiter", "(", "(", "limits", "kwargs", ")"]}}
{"position": {"error_location": 15, "repair_targets": [3], "repair_candidates": [1, 15, 34, 3, 40, 5, 16, 27, 29, 33, 39, 6, 18, 20, 23, 24, 31, 36]}}
{"prediction": {"error_location": 0.9999758005142212, "repair_targets": [0.9580276608467102], "repair_candidates": [0.0005581529112532735, 0.9580276608467102, 0.014030617661774158, 0.02417203225195408, 1.4911851394572295e-05, 1.693357444310095e-05, 0.00010491793364053592, 0.00045056207454763353, 0.0002580248692538589, 0.00011569824710022658, 0.0012129651149734855, 0.00010148515139007941, 6.9918978624627925e-06, 8.192388486349955e-05, 1.7053507690434344e-06, 0.00018684176029637456, 0.0006096523138694465, 4.8885362048167735e-05], "target_probs": 0.9580276608467102}}


{"result": {"time": "2021-02-21 12:17:49.582850", "n_pass": [227, 46, 26], "n_token": 41, "loss": [0.00013207517622504383, 0.48508015275001526], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["self", ",", "application", ",", "limits", "limiter", "=", "#INDENT#", "'\\n        Initialize new `RateLimitingMiddleware`, which wraps the given WSGI\\n        application and sets up the given limits.\\n\\n        @param application: WSGI application to wrap\\n        @param limits: String describing limits\\n        @param limiter: String identifying class for representing limits\\n\\n        Other parameters are passed to the constructor for the limiter.\\n        '", "#NEWLINE#", "base_wsgi", ".", ".", "(", "self", "limits", ")", "limiter", "is", "limiter", "=", "#INDENT#", "limiter", "limiter", ")", "(", "limits", "#INDENT#", "limits", "=", "limiter", "(", "limits", "self", ".", "limiter", "(", "(", "limits", "kwargs", ")"]}}
{"position": {"error_location": 14, "repair_targets": [2], "repair_candidates": [0, 14, 33, 2, 39, 4, 15, 26, 28, 32, 38, 5, 17, 19, 22, 23, 30, 35]}}
{"prediction": {"error_location": 0.9998679161071777, "repair_targets": [0.6156478524208069], "repair_candidates": [0.17643506824970245, 0.6156478524208069, 0.12793809175491333, 0.05627105385065079, 0.00017301760090049356, 0.00025198073126375675, 0.0030884426087141037, 0.0037789775524288416, 0.0019433448323979974, 0.0005949382903054357, 0.008715142495930195, 0.0006802272982895374, 4.3685453420039266e-05, 0.00043999875197187066, 9.297888027504086e-06, 0.0008166697807610035, 0.0029066612478345633, 0.0002654973359312862], "target_probs": 0.6156478524208069}}


{"result": {"time": "2021-02-21 12:17:49.656505", "n_pass": [229, 47, 27], "n_token": 40, "loss": [0.00021789084712509066, 0.6617928743362427], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["self", "application", ",", "limits", "limiter", "=", "#INDENT#", "'\\n        Initialize new `RateLimitingMiddleware`, which wraps the given WSGI\\n        application and sets up the given limits.\\n\\n        @param application: WSGI application to wrap\\n        @param limits: String describing limits\\n        @param limiter: String identifying class for representing limits\\n\\n        Other parameters are passed to the constructor for the limiter.\\n        '", "#NEWLINE#", "base_wsgi", ".", ".", "(", "self", "limits", ")", "limiter", "is", "limiter", "=", "#INDENT#", "limiter", "limiter", ")", "(", "limits", "#INDENT#", "limits", "=", "limiter", "(", "limits", "self", ".", "limiter", "(", "(", "limits", "kwargs", ")"]}}
{"position": {"error_location": 13, "repair_targets": [1], "repair_candidates": [0, 13, 32, 1, 38, 3, 14, 25, 27, 31, 37, 4, 16, 18, 21, 22, 29, 34]}}
{"prediction": {"error_location": 0.999782145023346, "repair_targets": [0.5159255266189575], "repair_candidates": [0.1295769363641739, 0.5159255266189575, 0.2739552855491638, 0.06387566030025482, 0.0002542925358284265, 0.0003955015854444355, 0.0013501800131052732, 0.0045180232264101505, 0.0015821579145267606, 0.0006064336630515754, 0.003993780352175236, 0.0006698635988868773, 3.8723257603123784e-05, 0.00038533195038326085, 8.087759852060117e-06, 0.000762024661526084, 0.0019642820116132498, 0.00013786934141535312], "target_probs": 0.5159255266189575}}


{"result": {"time": "2021-02-21 12:17:49.936526", "n_pass": [236, 51, 28], "n_token": 39, "loss": [0.0002256377338198945, 0.45639848709106445], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["self", "application", ",", "limits", "limiter", "=", "#INDENT#", "#NEWLINE#", "base_wsgi", ".", ".", "(", "self", "limits", ")", "limiter", "is", "limiter", "=", "#INDENT#", "limiter", "limiter", ")", "(", "limits", "#INDENT#", "limits", "=", "limiter", "(", "limits", "self", ".", "limiter", "(", "(", "limits", "kwargs", ")"]}}
{"position": {"error_location": 12, "repair_targets": [1], "repair_candidates": [0, 12, 31, 1, 37, 3, 13, 24, 26, 30, 36, 4, 15, 17, 20, 21, 28, 33]}}
{"prediction": {"error_location": 0.9997743964195251, "repair_targets": [0.6335613131523132], "repair_candidates": [0.1881156712770462, 0.6335613131523132, 0.11198627203702927, 0.03447681665420532, 0.0003659850044641644, 0.0006520519382320344, 0.005553711671382189, 0.005102159455418587, 0.002803420415148139, 0.0008753289585001767, 0.010103774257004261, 0.001004739897325635, 5.2650997531600296e-05, 0.0006885084440000355, 9.140886504610535e-06, 0.0011301964987069368, 0.0031551190186291933, 0.00036311178700998425], "target_probs": 0.6335613131523132}}


{"result": {"time": "2021-02-21 12:17:50.147472", "n_pass": [239, 54, 29], "n_token": 38, "loss": [0.0022106750402599573, 0.49016496539115906], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["self", "application", ",", "limits", "limiter", "=", "#INDENT#", "#NEWLINE#", "base_wsgi", ".", "(", "self", "limits", ")", "limiter", "is", "limiter", "=", "#INDENT#", "limiter", "limiter", ")", "(", "limits", "#INDENT#", "limits", "=", "limiter", "(", "limits", "self", ".", "limiter", "(", "(", "limits", "kwargs", ")"]}}
{"position": {"error_location": 11, "repair_targets": [1], "repair_candidates": [0, 11, 30, 1, 36, 3, 12, 23, 25, 29, 35, 4, 14, 16, 19, 20, 27, 32]}}
{"prediction": {"error_location": 0.9977917671203613, "repair_targets": [0.6125253438949585], "repair_candidates": [0.16069121658802032, 0.6125253438949585, 0.10773497819900513, 0.03870726749300957, 0.0008236275753006339, 0.0008301181951537728, 0.011570668779313564, 0.04182703420519829, 0.005854341201484203, 0.0018797933589667082, 0.007238017860800028, 0.00394429313018918, 0.00011506621376611292, 0.000983977923169732, 1.3552961718232837e-05, 0.0017887743888422847, 0.0031661265529692173, 0.00030583274201489985], "target_probs": 0.6125253438949585}}


{"result": {"time": "2021-02-21 12:17:50.699301", "n_pass": [291, 62, 30], "n_token": 37, "loss": [0.0018306892598047853, 0.4569125771522522], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["self", "application", ",", "limits", "limiter", "=", "#INDENT#", "#NEWLINE#", "base_wsgi", ".", "(", "self", "limits", "limiter", "is", "limiter", "=", "#INDENT#", "limiter", "limiter", ")", "(", "limits", "#INDENT#", "limits", "=", "limiter", "(", "limits", "self", ".", "limiter", "(", "(", "limits", "kwargs", ")"]}}
{"position": {"error_location": 11, "repair_targets": [1], "repair_candidates": [0, 11, 29, 1, 35, 3, 12, 22, 24, 28, 34, 4, 13, 15, 18, 19, 26, 31]}}
{"prediction": {"error_location": 0.9981710910797119, "repair_targets": [0.6332356929779053], "repair_candidates": [0.15988288819789886, 0.6332356929779053, 0.105328269302845, 0.03887435793876648, 0.00040458395960740745, 0.0008178676362149417, 0.00035218108678236604, 0.04105302691459656, 0.006748283747583628, 0.0013796299463137984, 0.005527689587324858, 0.002472326857969165, 7.882751378929242e-05, 0.0005737906321883202, 7.457144874933874e-06, 0.001286379643715918, 0.0018870366038754582, 8.965953747974709e-05], "target_probs": 0.6332356929779053}}


{"result": {"time": "2021-02-21 12:17:50.838137", "n_pass": [295, 64, 31], "n_token": 36, "loss": [0.0042341588996350765, 0.48814189434051514], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["self", "application", ",", "limits", "limiter", "=", "#INDENT#", "#NEWLINE#", "base_wsgi", ".", "(", "self", "limits", "limiter", "is", "limiter", "#INDENT#", "limiter", "limiter", ")", "(", "limits", "#INDENT#", "limits", "=", "limiter", "(", "limits", "self", ".", "limiter", "(", "(", "limits", "kwargs", ")"]}}
{"position": {"error_location": 11, "repair_targets": [1], "repair_candidates": [0, 11, 28, 1, 34, 3, 12, 21, 23, 27, 33, 4, 13, 15, 17, 18, 25, 30]}}
{"prediction": {"error_location": 0.9957749247550964, "repair_targets": [0.6137657761573792], "repair_candidates": [0.20608091354370117, 0.6137657761573792, 0.07097391039133072, 0.031076611950993538, 0.001172325573861599, 0.0012319046072661877, 0.0002504846779629588, 0.0020267562940716743, 0.03889649361371994, 0.00642381701618433, 0.00934276171028614, 0.007192333694547415, 0.00018849036132451147, 0.0016622054390609264, 1.7843092791736126e-05, 0.0034425919875502586, 0.005947474855929613, 0.00030726531986147165], "target_probs": 0.6137657761573792}}


{"result": {"time": "2021-02-21 12:17:50.905961", "n_pass": [296, 65, 32], "n_token": 35, "loss": [0.00610558083280921, 0.4929327666759491], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["self", "application", ",", "limits", "limiter", "=", "#INDENT#", "#NEWLINE#", "base_wsgi", ".", "(", "self", "limits", "limiter", "is", "limiter", "limiter", "limiter", ")", "(", "limits", "#INDENT#", "limits", "=", "limiter", "(", "limits", "self", ".", "limiter", "(", "(", "limits", "kwargs", ")"]}}
{"position": {"error_location": 11, "repair_targets": [1], "repair_candidates": [0, 11, 27, 1, 33, 3, 12, 20, 22, 26, 32, 4, 13, 15, 16, 17, 24, 29]}}
{"prediction": {"error_location": 0.9939129948616028, "repair_targets": [0.6108323335647583], "repair_candidates": [0.2370826154947281, 0.6108323335647583, 0.049575626850128174, 0.024434229359030724, 0.002453705295920372, 0.0025275726802647114, 0.0004568715812638402, 0.002064503263682127, 0.012004263699054718, 0.013421355746686459, 0.0152469826862216, 0.011480018496513367, 0.0003367947065271437, 0.0032771541737020016, 2.82438013528008e-05, 0.005551083013415337, 0.008727450855076313, 0.0004991840105503798], "target_probs": 0.6108323335647583}}


{"result": {"time": "2021-02-21 12:17:50.973697", "n_pass": [299, 66, 33], "n_token": 34, "loss": [0.0010998159414157271, 0.3558630347251892], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["self", "application", ",", "limits", "limiter", "=", "#INDENT#", "#NEWLINE#", "base_wsgi", ".", "(", "self", "limits", "limiter", "is", "limiter", "limiter", "limiter", "(", "limits", "#INDENT#", "limits", "=", "limiter", "(", "limits", "self", ".", "limiter", "(", "(", "limits", "kwargs", ")"]}}
{"position": {"error_location": 11, "repair_targets": [1], "repair_candidates": [0, 11, 26, 1, 32, 3, 12, 19, 21, 25, 31, 4, 13, 15, 16, 17, 23, 28]}}
{"prediction": {"error_location": 0.9989008903503418, "repair_targets": [0.7005685567855835], "repair_candidates": [0.15070763230323792, 0.7005685567855835, 0.10714676231145859, 0.027701467275619507, 0.00026378381880931556, 0.0004104124673176557, 8.395460463361815e-05, 0.00016426309593953192, 0.00039450559415854514, 0.0018788098823279142, 0.004303108435124159, 0.0006690974696539342, 3.995839870185591e-05, 0.0005496240337379277, 9.70216206042096e-06, 0.0012988110538572073, 0.0035083589609712362, 0.00030119583243504167], "target_probs": 0.7005685567855835}}


{"result": {"time": "2021-02-21 12:17:51.040313", "n_pass": [300, 67, 34], "n_token": 33, "loss": [0.00042989550274796784, 0.3430057466030121], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["self", "application", ",", "limits", "limiter", "=", "#INDENT#", "#NEWLINE#", "base_wsgi", ".", "(", "self", "limits", "limiter", "is", "limiter", "limiter", "limiter", "limits", "#INDENT#", "limits", "=", "limiter", "(", "limits", "self", ".", "limiter", "(", "(", "limits", "kwargs", ")"]}}
{"position": {"error_location": 11, "repair_targets": [1], "repair_candidates": [0, 11, 25, 1, 31, 3, 12, 18, 20, 24, 30, 4, 13, 15, 16, 17, 22, 27]}}
{"prediction": {"error_location": 0.9995701909065247, "repair_targets": [0.7096341252326965], "repair_candidates": [0.13587243854999542, 0.7096341252326965, 0.11715364456176758, 0.02644248493015766, 0.00012346953735686839, 0.00019377656280994415, 4.516683839028701e-05, 0.00010958435450447723, 0.0004411755653563887, 0.0022462508641183376, 0.003469415009021759, 0.00025980552891269326, 1.578944102220703e-05, 0.0003042780444957316, 7.789506526023615e-06, 0.0009052619570866227, 0.002554369391873479, 0.00022128161799628288], "target_probs": 0.7096341252326965}}


{"result": {"time": "2021-02-21 12:17:51.106860", "n_pass": [302, 68, 35], "n_token": 32, "loss": [0.0007273888913914561, 0.3491548001766205], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["self", "application", ",", "limits", "limiter", "=", "#INDENT#", "#NEWLINE#", "base_wsgi", ".", "(", "self", "limits", "limiter", "is", "limiter", "limiter", "limiter", "limits", "limits", "=", "limiter", "(", "limits", "self", ".", "limiter", "(", "(", "limits", "kwargs", ")"]}}
{"position": {"error_location": 11, "repair_targets": [1], "repair_candidates": [0, 11, 24, 1, 30, 3, 12, 18, 19, 23, 29, 4, 13, 15, 16, 17, 21, 26]}}
{"prediction": {"error_location": 0.9992730021476746, "repair_targets": [0.7052839398384094], "repair_candidates": [0.14688129723072052, 0.7052839398384094, 0.08451662957668304, 0.01823662966489792, 0.00015072365931700915, 0.00019567337585613132, 4.723659003502689e-05, 0.00011763495422201231, 0.0008889799937605858, 0.015084119513630867, 0.02319672703742981, 0.0003568324900697917, 1.8299613657291047e-05, 0.0003306599974166602, 7.913843546702992e-06, 0.0009800019906833768, 0.003408468794077635, 0.0002982817532029003], "target_probs": 0.7052839398384094}}


{"result": {"time": "2021-02-21 12:17:51.172611", "n_pass": [304, 69, 36], "n_token": 31, "loss": [0.000442407006630674, 0.3090779781341553], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["self", "application", ",", "limits", "limiter", "=", "#INDENT#", "#NEWLINE#", "base_wsgi", ".", "(", "self", "limits", "limiter", "is", "limiter", "limiter", "limiter", "limits", "limits", "limiter", "(", "limits", "self", ".", "limiter", "(", "(", "limits", "kwargs", ")"]}}
{"position": {"error_location": 11, "repair_targets": [1], "repair_candidates": [0, 11, 23, 1, 29, 3, 12, 18, 19, 22, 28, 4, 13, 15, 16, 17, 20, 25]}}
{"prediction": {"error_location": 0.9995577931404114, "repair_targets": [0.7341235280036926], "repair_candidates": [0.14352908730506897, 0.7341235280036926, 0.0868946984410286, 0.02112128771841526, 0.0002186143392464146, 0.00023587088799104095, 5.320755371940322e-05, 0.00013370330270845443, 0.0007805564091540873, 0.0030067386105656624, 0.0007801121682859957, 5.140211578691378e-05, 3.812143040704541e-05, 0.00030477045220322907, 3.2193177048611687e-06, 0.0008830096921883523, 0.0067869978956878185, 0.0010549492435529828], "target_probs": 0.7341235280036926}}


{"result": {"time": "2021-02-21 12:17:51.240070", "n_pass": [306, 70, 37], "n_token": 30, "loss": [0.00026973424246534705, 0.3167656660079956], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["self", "application", ",", "limits", "limiter", "=", "#INDENT#", "#NEWLINE#", "base_wsgi", ".", "(", "self", "limits", "limiter", "is", "limiter", "limiter", "limiter", "limits", "limits", "limiter", "limits", "self", ".", "limiter", "(", "(", "limits", "kwargs", ")"]}}
{"position": {"error_location": 11, "repair_targets": [1], "repair_candidates": [0, 11, 22, 1, 28, 3, 12, 18, 19, 21, 27, 4, 13, 15, 16, 17, 20, 24]}}
{"prediction": {"error_location": 0.9997302889823914, "repair_targets": [0.7285014390945435], "repair_candidates": [0.13222217559814453, 0.7285014390945435, 0.09912305325269699, 0.025394469499588013, 0.00011535313387867063, 0.00014313454448711127, 3.769382965401746e-05, 0.00013596950157079846, 0.0007747475756332278, 0.005167464725673199, 0.0012436492834240198, 9.839454287430272e-05, 3.368297257111408e-05, 7.14349516783841e-05, 2.9421946692309575e-06, 0.0008378504426218569, 0.005216585006564856, 0.0008800087962299585], "target_probs": 0.7285014390945435}}


{"result": {"time": "2021-02-21 12:17:51.305127", "n_pass": [309, 71, 38], "n_token": 29, "loss": [0.0006058764411136508, 0.3344886600971222], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["self", "application", ",", "limits", "limiter", "=", "#INDENT#", "#NEWLINE#", "base_wsgi", ".", "(", "self", "limits", "limiter", "is", "limiter", "limiter", "limiter", "limits", "limits", "limiter", "limits", "self", "limiter", "(", "(", "limits", "kwargs", ")"]}}
{"position": {"error_location": 11, "repair_targets": [1], "repair_candidates": [0, 11, 22, 1, 27, 3, 12, 18, 19, 21, 26, 4, 13, 15, 16, 17, 20, 23]}}
{"prediction": {"error_location": 0.9993942975997925, "repair_targets": [0.7157039642333984], "repair_candidates": [0.1726563572883606, 0.7157039642333984, 0.07660329341888428, 0.01714438758790493, 0.00024740456137806177, 0.0002663599152583629, 5.592777961282991e-05, 0.00014134886441752315, 0.0011705700308084488, 0.006577910389751196, 0.0025791190564632416, 0.0002781146904453635, 6.818868132540956e-05, 0.00010909757111221552, 2.9620248824357986e-05, 6.627522088820115e-05, 0.005351961124688387, 0.000950092391576618], "target_probs": 0.7157039642333984}}


{"result": {"time": "2021-02-21 12:17:51.369889", "n_pass": [311, 72, 39], "n_token": 28, "loss": [0.0004960260121151805, 0.3463958501815796], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["self", "application", ",", "limits", "limiter", "=", "#INDENT#", "#NEWLINE#", "base_wsgi", ".", "(", "self", "limits", "limiter", "is", "limiter", "limiter", "limiter", "limits", "limits", "limiter", "limits", "self", "limiter", "(", "limits", "kwargs", ")"]}}
{"position": {"error_location": 11, "repair_targets": [1], "repair_candidates": [0, 11, 22, 1, 26, 3, 12, 18, 19, 21, 25, 4, 13, 15, 16, 17, 20, 23]}}
{"prediction": {"error_location": 0.9995040893554688, "repair_targets": [0.7072324752807617], "repair_candidates": [0.17177526652812958, 0.7072324752807617, 0.08040083944797516, 0.020140236243605614, 0.00020240848243702203, 0.0001819310855353251, 4.424485450726934e-05, 0.0001609988830750808, 0.001133557059802115, 0.007374870590865612, 0.0043792761862277985, 0.0003819748817477375, 6.62127131363377e-05, 0.00010768908396130428, 3.0978389986557886e-05, 0.00012552831321954727, 0.005733804777264595, 0.0005278225289657712], "target_probs": 0.7072324752807617}}


{"result": {"time": "2021-02-21 12:17:51.433902", "n_pass": [312, 73, 40], "n_token": 27, "loss": [0.0001573438785271719, 0.410077840089798], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["self", "application", ",", "limits", "limiter", "=", "#INDENT#", "#NEWLINE#", "base_wsgi", ".", "(", "self", "limits", "limiter", "is", "limiter", "limiter", "limiter", "limits", "limits", "limiter", "limits", "self", "limiter", "limits", "kwargs", ")"]}}
{"position": {"error_location": 11, "repair_targets": [1], "repair_candidates": [0, 11, 22, 1, 25, 3, 12, 18, 19, 21, 24, 4, 13, 15, 16, 17, 20, 23]}}
{"prediction": {"error_location": 0.999842643737793, "repair_targets": [0.6635985970497131], "repair_candidates": [0.12720701098442078, 0.6635985970497131, 0.12407761067152023, 0.04582880809903145, 4.138326767133549e-05, 4.3380998249631375e-05, 2.040193612629082e-05, 0.00021577024017460644, 0.001630100654438138, 0.02095804363489151, 0.011575255542993546, 0.0008009840385057032, 0.00011978035763604566, 0.00010096700134454295, 2.4482509616063908e-05, 0.0002806217526085675, 0.0028093531727790833, 0.0006674962351098657], "target_probs": 0.6635985970497131}}


{"result": {"time": "2021-02-21 12:17:51.497557", "n_pass": [315, 74, 41], "n_token": 26, "loss": [0.00026639728457666934, 0.4341830611228943], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["self", "application", ",", "limits", "limiter", "=", "#INDENT#", "#NEWLINE#", "base_wsgi", ".", "(", "self", "limits", "limiter", "is", "limiter", "limiter", "limiter", "limits", "limits", "limiter", "limits", "self", "limiter", "limits", "kwargs"]}}
{"position": {"error_location": 11, "repair_targets": [1], "repair_candidates": [0, 11, 22, 1, 25, 3, 12, 18, 19, 21, 24, 4, 13, 15, 16, 17, 20, 23]}}
{"prediction": {"error_location": 0.9997336268424988, "repair_targets": [0.6477936506271362], "repair_candidates": [0.15724235773086548, 0.6477936506271362, 0.07911816984415054, 0.021539749577641487, 4.470199564821087e-05, 4.525438998825848e-05, 2.5720039047882892e-05, 0.0003870190994348377, 0.00572995375841856, 0.05011127516627312, 0.028464144095778465, 0.00316992518492043, 0.0004523807729128748, 0.00015402075950987637, 3.6121669836575165e-05, 0.0003481292224023491, 0.004503593780100346, 0.0008338376646861434], "target_probs": 0.6477936506271362}}


{"result": {"time": "2021-02-21 12:17:51.560458", "n_pass": [318, 75, 42], "n_token": 25, "loss": [0.0008775911992415786, 0.6105595231056213], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["self", "application", "limits", "limiter", "=", "#INDENT#", "#NEWLINE#", "base_wsgi", ".", "(", "self", "limits", "limiter", "is", "limiter", "limiter", "limiter", "limits", "limits", "limiter", "limits", "self", "limiter", "limits", "kwargs"]}}
{"position": {"error_location": 10, "repair_targets": [1], "repair_candidates": [0, 10, 21, 1, 24, 2, 11, 17, 18, 20, 23, 3, 12, 14, 15, 16, 19, 22]}}
{"prediction": {"error_location": 0.9991227984428406, "repair_targets": [0.5430469512939453], "repair_candidates": [0.08973885327577591, 0.5430469512939453, 0.23060499131679535, 0.06412447243928909, 5.7794528402155265e-05, 7.273675873875618e-05, 2.4553351977374405e-05, 0.00026895501650869846, 0.0023961737751960754, 0.0360482893884182, 0.029046356678009033, 0.0022049949038773775, 0.00025874158018268645, 0.00011238358274567872, 2.1679170458810404e-05, 0.0001960346708074212, 0.0015582810156047344, 0.00021771277533844113], "target_probs": 0.5430469512939453}}


{"result": {"time": "2021-02-21 12:17:51.625417", "n_pass": [321, 76, 43], "n_token": 24, "loss": [0.011193573474884033, 0.647542417049408], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["self", "application", "limits", "limiter", "#INDENT#", "#NEWLINE#", "base_wsgi", ".", "(", "self", "limits", "limiter", "is", "limiter", "limiter", "limiter", "limits", "limits", "limiter", "limits", "self", "limiter", "limits", "kwargs"]}}
{"position": {"error_location": 9, "repair_targets": [1], "repair_candidates": [0, 9, 20, 1, 23, 2, 10, 16, 17, 19, 22, 3, 11, 13, 14, 15, 18, 21]}}
{"prediction": {"error_location": 0.9888685941696167, "repair_targets": [0.5233303308486938], "repair_candidates": [0.34246960282325745, 0.5233303308486938, 0.017047466710209846, 0.00671624718233943, 0.0012208132538944483, 0.0009021366713568568, 0.00018535187700763345, 0.00045938490075059235, 0.003668049816042185, 0.034156933426856995, 0.05800934135913849, 0.0049177007749676704, 0.0004429858236107975, 0.00032861094223335385, 0.00013414847489912063, 0.0006639446946792305, 0.005164653528481722, 0.0001822897174861282], "target_probs": 0.5233303308486938}}


{"result": {"time": "2021-02-21 12:17:57.877204", "n_pass": [322, 77, 44], "n_token": 23, "loss": [0.13487954437732697, 0.616240382194519], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["self", "application", "limits", "limiter", "#NEWLINE#", "base_wsgi", ".", "(", "self", "limits", "limiter", "is", "limiter", "limiter", "limiter", "limits", "limits", "limiter", "limits", "self", "limiter", "limits", "kwargs"]}}
{"position": {"error_location": 8, "repair_targets": [1], "repair_candidates": [0, 8, 19, 1, 22, 2, 9, 15, 16, 18, 21, 3, 10, 12, 13, 14, 17, 20]}}
{"prediction": {"error_location": 0.8738212585449219, "repair_targets": [0.5399706959724426], "repair_candidates": [0.31076493859291077, 0.5399706959724426, 0.0191523227840662, 0.011919465847313404, 0.0038553676567971706, 0.0015001674182713032, 0.00025523369549773633, 0.0004744358593598008, 0.004853770602494478, 0.04359975829720497, 0.05163200944662094, 0.004657944198697805, 0.00044374584103934467, 0.000380970595870167, 0.00024440002744086087, 0.001181423431262374, 0.004975045099854469, 0.00013827586371917278], "target_probs": 0.5399706959724426}}




Minimal simplified tokens:

['self', 'application', 'limits', 'limiter', '#NEWLINE#', 'base_wsgi', '.', '(', 'self', 'limits', 'limiter', 'is', 'limiter', 'limiter', 'limiter', 'limits', 'limits', 'limiter', 'limits', 'self', 'limiter', 'limits', 'kwargs']
