
Original sample:

{"has_bug": true, "bug_kind": 1, "bug_kind_name": "VARIABLE_MISUSE", "source_tokens": ["#NEWLINE#", "def safely_reserve_a_username(", "cursor", ",", "gen_usernames", "=", "gen_random_usernames", ",", "reserve", "=", "insert_into_participants", ")", ":", "#NEWLINE#", "#INDENT#", "'Safely reserve a username.\\n\\n    :param cursor: a :py:class:`psycopg2.cursor` managed as a :py:mod:`postgres`\\n        transaction\\n    :param gen_usernames: a generator of usernames to try\\n    :param reserve: a function that takes the cursor and does the SQL\\n        stuff\\n    :database: one ``INSERT`` on average\\n    :returns: a 12-hex-digit unicode\\n    :raises: :py:class:`FailedToReserveUsername` if no acceptable username is found\\n        within 100 attempts, or :py:class:`RanOutOfUsernameAttempts` if the username\\n        generator runs out first\\n\\n    The returned value is guaranteed to have been reserved in the database.\\n\\n    '", "#NEWLINE#", "cursor", ".", "execute", "(", "'SAVEPOINT safely_reserve_a_username'", ")", "#NEWLINE#", "seatbelt", "=", "0", "#NEWLINE#", "for", "username", "in", "gen_usernames", "(", ")", ":", "#NEWLINE#", "#INDENT#", "seatbelt", "+=", "1", "#NEWLINE#", "if", "(", "seatbelt", ">", "100", ")", ":", "#NEWLINE#", "#INDENT#", "raise", "FailedToReserveUsername", "#NEWLINE#", "#UNINDENT#", "try", ":", "#NEWLINE#", "#INDENT#", "check", "=", "reserve", "(", "check", ",", "username", ")", "#NEWLINE#", "#UNINDENT#", "except", "IntegrityError", ":", "#NEWLINE#", "#INDENT#", "cursor", ".", "execute", "(", "'ROLLBACK TO safely_reserve_a_username'", ")", "#NEWLINE#", "continue", "#NEWLINE#", "#UNINDENT#", "else", ":", "#NEWLINE#", "#INDENT#", "assert", "(", "check", "==", "username", ")", "#NEWLINE#", "break", "#NEWLINE#", "#UNINDENT#", "#UNINDENT#", "else", ":", "#NEWLINE#", "#INDENT#", "raise", "RanOutOfUsernameAttempts", "#NEWLINE#", "#UNINDENT#", "cursor", ".", "execute", "(", "'RELEASE safely_reserve_a_username'", ")", "#NEWLINE#", "return", "username"], "error_location": [62], "repair_targets": [2, 17, 73, 106], "repair_candidates": [2, 17, 73, 106, 58, 62, 89, 8, 60, 29, 64, 91, 114, 24, 37, 43, 4, 31], "provenances": [{"datasetProvenance": {"datasetName": "ETHPy150Open", "filepath": "gratipay/gratipay.com/gratipay/utils/username.py", "license": "mit", "note": "license: bigquery_api"}}], "txt_file": "eval__VARIABLE_MISUSE__SStuB.txt-00000-of-00300", "js_count": 2439, "results": {"model": "rnn", "prob": {"loc": [[0.1787760853767395, 2.2994380799445935e-07, 6.933776148798643e-07, 4.530970265648193e-09, 1.287473878619494e-07, 3.0574526022064674e-08, 1.590324791322928e-05, 3.3049727399259154e-09, 1.3200332205087761e-07, 3.4003107884927886e-07, 0.023552773520350456, 7.73375575136015e-07, 1.1108160151707125e-06, 1.1265996363363229e-05, 1.93533892911546e-07, 1.0770854714792222e-06, 4.798655481863534e-07, 1.0348937848903006e-06, 4.7432497041199895e-08, 8.258098915803203e-08, 6.89916350893327e-06, 3.5679991015058476e-06, 1.6815471326481202e-06, 8.043152206482773e-07, 6.613025789192761e-07, 6.916403890500078e-06, 3.796172677539289e-05, 2.082953869830817e-05, 1.4260276657296345e-06, 5.699569527450876e-08, 4.744760673247583e-08, 1.305733547951604e-07, 4.7941364300641e-07, 1.8461885701981373e-05, 1.314656117301638e-07, 2.451306500006467e-07, 4.5504940260343574e-08, 1.169864503935969e-06, 2.969273396047356e-07, 9.909800428431481e-05, 3.7063518902868964e-06, 6.723240630890359e-09, 4.537080258160131e-07, 0.0014241168973967433, 4.138533071795791e-08, 2.626295099616982e-06, 4.2540665390333743e-07, 8.049755706451833e-08, 1.5105749184840533e-07, 3.32696536986532e-08, 5.832105216541095e-06, 0.0028473404236137867, 1.1782659470327417e-07, 2.3393474180011253e-07, 6.469795152952429e-06, 1.3883868632547092e-07, 3.859636024117208e-07, 1.3127430520398775e-07, 1.3926263875418954e-07, 5.849190909401614e-09, 8.68787265062565e-06, 2.8477021629669252e-08, 0.009629121981561184, 1.931230372065329e-06, 0.007908452302217484, 7.007448488138834e-08, 4.4661945253210433e-07, 4.450337655725889e-06, 4.148091647948604e-06, 0.0002942685969173908, 3.7844085909455316e-06, 2.906277245529054e-07, 1.2220023215547826e-08, 9.157976421647618e-08, 2.2281285705361142e-09, 3.0432797615276286e-08, 4.335695962254249e-07, 2.4140032195418826e-08, 1.276664818306017e-08, 7.744368701878557e-09, 1.583712901265244e-06, 1.9880498314250872e-07, 7.827326044207439e-06, 1.3040522617302486e-07, 1.3099124771542847e-06, 2.2172969238454243e-07, 2.7711916317230134e-08, 9.212251228518653e-08, 1.4476479748282145e-07, 0.027623292058706284, 4.212346084386809e-06, 0.007191727869212627, 1.0635546665582751e-08, 1.319247928677214e-07, 6.196390131663065e-06, 2.367857518947858e-07, 2.3392671266719844e-07, 1.4385662325366866e-05, 4.4385664921264834e-08, 2.1883331555727636e-06, 2.7309863526170375e-07, 8.376038529434027e-09, 1.3714425222133286e-05, 0.0002154482208425179, 1.0644928494230044e-07, 3.4918940627903794e-08, 2.1882004830331425e-07, 2.3111625946370395e-09, 1.6407401659535026e-08, 6.934004659342463e-08, 0.01442867610603571, 1.3440470070236188e-07, 3.096155509751952e-08, 6.606017268495634e-05, 0.7257090210914612]], "pointer": [[0.0, 0.0, 0.21891160309314728, 0.0, 0.010910830460488796, 0.0, 0.0, 0.0, 0.08207593858242035, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.00027887578471563756, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.07454545795917511, 0.0, 0.0, 0.0, 0.0, 0.05424688011407852, 0.0, 0.002706974744796753, 0.0, 0.0, 0.0, 0.0, 0.0, 0.024962732568383217, 0.0, 0.0, 0.0, 0.0, 0.0, 0.00048488276661373675, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.004597680177539587, 0.0, 0.0015341606922447681, 0.0, 3.184625893482007e-05, 0.0, 5.745303496951237e-05, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.022566094994544983, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.00021858629770576954, 0.0, 5.141164729138836e-05, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.50180584192276, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.2666117072512861e-05]], "target": [0.7435624003410339]}, "loss": [4.642963409423828, 0.29630258679389954], "acc": [0.0, 0.0, 1.0, 0.0]}, "wrong_error_location": [114]}


Trace of simplified code(s):

{"result": {"time": "2021-02-21 11:29:27.532520", "n_pass": [1, 1, 1], "n_token": 115, "loss": [0.32060620188713074, 0.29630258679389954], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def safely_reserve_a_username(", "cursor", ",", "gen_usernames", "=", "gen_random_usernames", ",", "reserve", "=", "insert_into_participants", ")", ":", "#NEWLINE#", "#INDENT#", "'Safely reserve a username.\\n\\n    :param cursor: a :py:class:`psycopg2.cursor` managed as a :py:mod:`postgres`\\n        transaction\\n    :param gen_usernames: a generator of usernames to try\\n    :param reserve: a function that takes the cursor and does the SQL\\n        stuff\\n    :database: one ``INSERT`` on average\\n    :returns: a 12-hex-digit unicode\\n    :raises: :py:class:`FailedToReserveUsername` if no acceptable username is found\\n        within 100 attempts, or :py:class:`RanOutOfUsernameAttempts` if the username\\n        generator runs out first\\n\\n    The returned value is guaranteed to have been reserved in the database.\\n\\n    '", "#NEWLINE#", "cursor", ".", "execute", "(", "'SAVEPOINT safely_reserve_a_username'", ")", "#NEWLINE#", "seatbelt", "=", "0", "#NEWLINE#", "for", "username", "in", "gen_usernames", "(", ")", ":", "#NEWLINE#", "#INDENT#", "seatbelt", "+=", "1", "#NEWLINE#", "if", "(", "seatbelt", ">", "100", ")", ":", "#NEWLINE#", "#INDENT#", "raise", "FailedToReserveUsername", "#NEWLINE#", "#UNINDENT#", "try", ":", "#NEWLINE#", "#INDENT#", "check", "=", "reserve", "(", "check", ",", "username", ")", "#NEWLINE#", "#UNINDENT#", "except", "IntegrityError", ":", "#NEWLINE#", "#INDENT#", "cursor", ".", "execute", "(", "'ROLLBACK TO safely_reserve_a_username'", ")", "#NEWLINE#", "continue", "#NEWLINE#", "#UNINDENT#", "else", ":", "#NEWLINE#", "#INDENT#", "assert", "(", "check", "==", "username", ")", "#NEWLINE#", "break", "#NEWLINE#", "#UNINDENT#", "#UNINDENT#", "else", ":", "#NEWLINE#", "#INDENT#", "raise", "RanOutOfUsernameAttempts", "#NEWLINE#", "#UNINDENT#", "cursor", ".", "execute", "(", "'RELEASE safely_reserve_a_username'", ")", "#NEWLINE#", "return", "username"]}}
{"position": {"error_location": 114, "repair_targets": [2, 17, 73, 106], "repair_candidates": [2, 17, 73, 106, 58, 62, 89, 8, 60, 29, 64, 91, 114, 24, 37, 43, 4, 31]}}
{"prediction": {"error_location": 0.7257090210914612, "repair_targets": [0.21891160309314728, 0.00027887578471563756, 0.022566094994544983, 0.50180584192276], "repair_candidates": [0.21891160309314728, 0.010910830460488796, 0.08207593858242035, 0.00027887578471563756, 0.07454545795917511, 0.05424688011407852, 0.002706974744796753, 0.024962732568383217, 0.00048488276661373675, 0.004597680177539587, 0.0015341606922447681, 3.184625893482007e-05, 5.745303496951237e-05, 0.022566094994544983, 0.00021858629770576954, 5.141164729138836e-05, 0.50180584192276, 1.2666117072512861e-05], "target_probs": 0.7435624003410339}}


{"result": {"time": "2021-02-21 11:29:27.645306", "n_pass": [51, 2, 2], "n_token": 108, "loss": [0.2955414056777954, 0.35082489252090454], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def safely_reserve_a_username(", "cursor", ",", "gen_usernames", "=", "gen_random_usernames", ",", "reserve", "=", "insert_into_participants", ")", ":", "#NEWLINE#", "#INDENT#", "'Safely reserve a username.\\n\\n    :param cursor: a :py:class:`psycopg2.cursor` managed as a :py:mod:`postgres`\\n        transaction\\n    :param gen_usernames: a generator of usernames to try\\n    :param reserve: a function that takes the cursor and does the SQL\\n        stuff\\n    :database: one ``INSERT`` on average\\n    :returns: a 12-hex-digit unicode\\n    :raises: :py:class:`FailedToReserveUsername` if no acceptable username is found\\n        within 100 attempts, or :py:class:`RanOutOfUsernameAttempts` if the username\\n        generator runs out first\\n\\n    The returned value is guaranteed to have been reserved in the database.\\n\\n    '", "#NEWLINE#", "cursor", ".", "execute", "(", "'SAVEPOINT safely_reserve_a_username'", ")", "#NEWLINE#", "seatbelt", "=", "0", "#NEWLINE#", "for", "username", "in", "gen_usernames", "(", ")", ":", "#NEWLINE#", "#INDENT#", "seatbelt", "+=", "1", "#NEWLINE#", "if", "(", "seatbelt", ">", "100", ")", ":", "#NEWLINE#", "#NEWLINE#", "#INDENT#", "check", "=", "reserve", "(", "check", ",", "username", ")", "#NEWLINE#", "#UNINDENT#", "except", "IntegrityError", ":", "#NEWLINE#", "#INDENT#", "cursor", ".", "execute", "(", "'ROLLBACK TO safely_reserve_a_username'", ")", "#NEWLINE#", "continue", "#NEWLINE#", "#UNINDENT#", "else", ":", "#NEWLINE#", "#INDENT#", "assert", "(", "check", "==", "username", ")", "#NEWLINE#", "break", "#NEWLINE#", "#UNINDENT#", "#UNINDENT#", "else", ":", "#NEWLINE#", "#INDENT#", "raise", "RanOutOfUsernameAttempts", "#NEWLINE#", "#UNINDENT#", "cursor", ".", "execute", "(", "'RELEASE safely_reserve_a_username'", ")", "#NEWLINE#", "return", "username"]}}
{"position": {"error_location": 107, "repair_targets": [2, 17, 66, 99], "repair_candidates": [2, 17, 66, 99, 51, 55, 82, 8, 53, 29, 57, 84, 107, 24, 37, 43, 4, 31]}}
{"prediction": {"error_location": 0.7441285252571106, "repair_targets": [0.2236395627260208, 0.0003055545676033944, 0.03108716942369938, 0.44907477498054504], "repair_candidates": [0.2236395627260208, 0.011632603593170643, 0.09950105845928192, 0.0003055545676033944, 0.08947904407978058, 0.051488883793354034, 0.003644415410235524, 0.03239680826663971, 0.0006668686401098967, 0.00514295743778348, 0.0014698896557092667, 7.091823499649763e-05, 9.468953794566914e-05, 0.03108716942369938, 0.00023259228328242898, 5.89402588957455e-05, 0.44907477498054504, 1.326425808656495e-05], "target_probs": 0.7041070461273193}}


{"result": {"time": "2021-02-21 11:29:27.748135", "n_pass": [55, 3, 3], "n_token": 101, "loss": [0.2542376220226288, 0.32728320360183716], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def safely_reserve_a_username(", "cursor", ",", "gen_usernames", "=", "gen_random_usernames", ",", "reserve", "=", "insert_into_participants", ")", ":", "#NEWLINE#", "#INDENT#", "'Safely reserve a username.\\n\\n    :param cursor: a :py:class:`psycopg2.cursor` managed as a :py:mod:`postgres`\\n        transaction\\n    :param gen_usernames: a generator of usernames to try\\n    :param reserve: a function that takes the cursor and does the SQL\\n        stuff\\n    :database: one ``INSERT`` on average\\n    :returns: a 12-hex-digit unicode\\n    :raises: :py:class:`FailedToReserveUsername` if no acceptable username is found\\n        within 100 attempts, or :py:class:`RanOutOfUsernameAttempts` if the username\\n        generator runs out first\\n\\n    The returned value is guaranteed to have been reserved in the database.\\n\\n    '", "#NEWLINE#", "cursor", ".", "execute", "(", "'SAVEPOINT safely_reserve_a_username'", ")", "#NEWLINE#", "seatbelt", "=", "0", "#NEWLINE#", "for", "username", "in", "gen_usernames", "(", ")", ":", "#NEWLINE#", "#INDENT#", "seatbelt", "+=", "1", "#NEWLINE#", "if", "(", "seatbelt", ">", "100", ")", ":", "#NEWLINE#", "#NEWLINE#", "#INDENT#", "check", "=", "reserve", "(", "check", ",", "username", ")", "#NEWLINE#", "#UNINDENT#", "except", "IntegrityError", ":", "#NEWLINE#", "#INDENT#", "cursor", ".", "execute", "(", ":", "#NEWLINE#", "#INDENT#", "assert", "(", "check", "==", "username", ")", "#NEWLINE#", "break", "#NEWLINE#", "#UNINDENT#", "#UNINDENT#", "else", ":", "#NEWLINE#", "#INDENT#", "raise", "RanOutOfUsernameAttempts", "#NEWLINE#", "#UNINDENT#", "cursor", ".", "execute", "(", "'RELEASE safely_reserve_a_username'", ")", "#NEWLINE#", "return", "username"]}}
{"position": {"error_location": 100, "repair_targets": [2, 17, 66, 92], "repair_candidates": [2, 17, 66, 92, 51, 55, 75, 8, 53, 29, 57, 77, 100, 24, 37, 43, 4, 31]}}
{"prediction": {"error_location": 0.7755075097084045, "repair_targets": [0.1890486180782318, 0.0003343701537232846, 0.14970248937606812, 0.3817940950393677], "repair_candidates": [0.1890486180782318, 0.009515613317489624, 0.10129167139530182, 0.0003343701537232846, 0.08186449855566025, 0.03781004622578621, 0.004925983492285013, 0.03679864853620529, 0.0004894694429822266, 0.004628841765224934, 0.0014596604742109776, 4.1982490074587986e-05, 8.713977149454877e-05, 0.14970248937606812, 0.000156349953613244, 3.9876398659544066e-05, 0.3817940950393677, 1.0688177098927554e-05], "target_probs": 0.7208795547485352}}


{"result": {"time": "2021-02-21 11:29:27.853118", "n_pass": [98, 4, 4], "n_token": 97, "loss": [0.21067340672016144, 0.34746211767196655], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def safely_reserve_a_username(", "cursor", ",", "gen_usernames", "=", "gen_random_usernames", ",", "reserve", "=", "insert_into_participants", ")", ":", "#NEWLINE#", "#INDENT#", "'Safely reserve a username.\\n\\n    :param cursor: a :py:class:`psycopg2.cursor` managed as a :py:mod:`postgres`\\n        transaction\\n    :param gen_usernames: a generator of usernames to try\\n    :param reserve: a function that takes the cursor and does the SQL\\n        stuff\\n    :database: one ``INSERT`` on average\\n    :returns: a 12-hex-digit unicode\\n    :raises: :py:class:`FailedToReserveUsername` if no acceptable username is found\\n        within 100 attempts, or :py:class:`RanOutOfUsernameAttempts` if the username\\n        generator runs out first\\n\\n    The returned value is guaranteed to have been reserved in the database.\\n\\n    '", "#NEWLINE#", "cursor", ".", "execute", "(", "'SAVEPOINT safely_reserve_a_username'", ")", "#NEWLINE#", "seatbelt", "=", "0", "#NEWLINE#", "for", "username", "in", "gen_usernames", "(", ")", ":", "#NEWLINE#", "#INDENT#", "seatbelt", "+=", "1", "#NEWLINE#", "if", "(", "seatbelt", ">", "100", ")", ":", "#NEWLINE#", "#NEWLINE#", "#INDENT#", "check", "=", "reserve", "(", "check", ",", "username", ")", "#NEWLINE#", "#UNINDENT#", "except", "IntegrityError", ":", "#NEWLINE#", "#INDENT#", "cursor", ".", "execute", "assert", "(", "check", "==", "username", ")", "#NEWLINE#", "break", "#NEWLINE#", "#UNINDENT#", "#UNINDENT#", "else", ":", "#NEWLINE#", "#INDENT#", "raise", "RanOutOfUsernameAttempts", "#NEWLINE#", "#UNINDENT#", "cursor", ".", "execute", "(", "'RELEASE safely_reserve_a_username'", ")", "#NEWLINE#", "return", "username"]}}
{"position": {"error_location": 96, "repair_targets": [2, 17, 66, 88], "repair_candidates": [2, 17, 66, 88, 51, 55, 71, 8, 53, 29, 57, 73, 96, 24, 37, 43, 4, 31]}}
{"prediction": {"error_location": 0.8100385069847107, "repair_targets": [0.19501113891601562, 0.00037459362647496164, 0.003925224766135216, 0.5071678161621094], "repair_candidates": [0.19501113891601562, 0.010520411655306816, 0.10630660504102707, 0.00037459362647496164, 0.08910445123910904, 0.04066362604498863, 0.006000066641718149, 0.03275987505912781, 0.00048270865227095783, 0.005214419681578875, 0.0021779390517622232, 5.4896354413358495e-05, 9.394700464326888e-05, 0.003925224766135216, 9.72226625890471e-05, 3.2639236451359466e-05, 0.5071678161621094, 1.2514445188571699e-05], "target_probs": 0.7064787745475769}}


{"result": {"time": "2021-02-21 11:29:27.952285", "n_pass": [101, 5, 5], "n_token": 93, "loss": [0.24053767323493958, 0.4327182173728943], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def safely_reserve_a_username(", "cursor", ",", "gen_usernames", "=", "gen_random_usernames", ",", "reserve", "=", "insert_into_participants", ")", ":", "#NEWLINE#", "#INDENT#", "'Safely reserve a username.\\n\\n    :param cursor: a :py:class:`psycopg2.cursor` managed as a :py:mod:`postgres`\\n        transaction\\n    :param gen_usernames: a generator of usernames to try\\n    :param reserve: a function that takes the cursor and does the SQL\\n        stuff\\n    :database: one ``INSERT`` on average\\n    :returns: a 12-hex-digit unicode\\n    :raises: :py:class:`FailedToReserveUsername` if no acceptable username is found\\n        within 100 attempts, or :py:class:`RanOutOfUsernameAttempts` if the username\\n        generator runs out first\\n\\n    The returned value is guaranteed to have been reserved in the database.\\n\\n    '", "#NEWLINE#", "cursor", ".", "execute", "(", "'SAVEPOINT safely_reserve_a_username'", ")", "#NEWLINE#", "seatbelt", "=", "0", "#NEWLINE#", "for", "username", "in", "gen_usernames", "(", ")", ":", "#NEWLINE#", "#INDENT#", "seatbelt", "+=", "1", "#NEWLINE#", "if", "(", "seatbelt", ">", "100", ")", ":", "#NEWLINE#", "#NEWLINE#", "#INDENT#", "check", "=", "reserve", "(", "check", ",", "username", ")", "#NEWLINE#", "#UNINDENT#", "except", "IntegrityError", ":", "#NEWLINE#", "#INDENT#", "cursor", ".", "execute", "assert", "(", "check", "==", "username", ")", "#NEWLINE#", "break", ":", "#NEWLINE#", "#INDENT#", "raise", "RanOutOfUsernameAttempts", "#NEWLINE#", "#UNINDENT#", "cursor", ".", "execute", "(", "'RELEASE safely_reserve_a_username'", ")", "#NEWLINE#", "return", "username"]}}
{"position": {"error_location": 92, "repair_targets": [2, 17, 66, 84], "repair_candidates": [2, 17, 66, 84, 51, 55, 71, 8, 53, 29, 57, 73, 92, 24, 37, 43, 4, 31]}}
{"prediction": {"error_location": 0.7862050533294678, "repair_targets": [0.23881471157073975, 0.0006811889470554888, 0.016942942515015602, 0.392304390668869], "repair_candidates": [0.23881471157073975, 0.010938304476439953, 0.1558881253004074, 0.0006811889470554888, 0.09999559074640274, 0.034795574843883514, 0.005564435850828886, 0.03442012891173363, 0.000800682173576206, 0.006211227271705866, 0.002364322543144226, 5.773026350652799e-05, 9.477505227550864e-05, 0.016942942515015602, 8.20903733256273e-05, 3.147285679006018e-05, 0.392304390668869, 1.230055931955576e-05], "target_probs": 0.6487432718276978}}


{"result": {"time": "2021-02-21 11:29:28.049009", "n_pass": [102, 6, 6], "n_token": 89, "loss": [0.11574136465787888, 0.3531457185745239], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def safely_reserve_a_username(", "cursor", ",", "gen_usernames", "=", "gen_random_usernames", ",", "reserve", "=", "insert_into_participants", ")", ":", "#NEWLINE#", "#INDENT#", "'Safely reserve a username.\\n\\n    :param cursor: a :py:class:`psycopg2.cursor` managed as a :py:mod:`postgres`\\n        transaction\\n    :param gen_usernames: a generator of usernames to try\\n    :param reserve: a function that takes the cursor and does the SQL\\n        stuff\\n    :database: one ``INSERT`` on average\\n    :returns: a 12-hex-digit unicode\\n    :raises: :py:class:`FailedToReserveUsername` if no acceptable username is found\\n        within 100 attempts, or :py:class:`RanOutOfUsernameAttempts` if the username\\n        generator runs out first\\n\\n    The returned value is guaranteed to have been reserved in the database.\\n\\n    '", "#NEWLINE#", "cursor", ".", "execute", "(", "'SAVEPOINT safely_reserve_a_username'", ")", "#NEWLINE#", "seatbelt", "=", "0", "#NEWLINE#", "for", "username", "in", "gen_usernames", "(", ")", ":", "#NEWLINE#", "#INDENT#", "seatbelt", "+=", "1", "#NEWLINE#", "if", "(", "seatbelt", ">", "100", ")", ":", "#NEWLINE#", "#NEWLINE#", "#INDENT#", "check", "=", "reserve", "(", "check", ",", "username", ")", "#NEWLINE#", "#UNINDENT#", "except", "IntegrityError", ":", "#NEWLINE#", "#INDENT#", "cursor", ".", "execute", "assert", "(", "check", "==", "username", ")", "#NEWLINE#", "break", "RanOutOfUsernameAttempts", "#NEWLINE#", "#UNINDENT#", "cursor", ".", "execute", "(", "'RELEASE safely_reserve_a_username'", ")", "#NEWLINE#", "return", "username"]}}
{"position": {"error_location": 88, "repair_targets": [2, 17, 66, 80], "repair_candidates": [2, 17, 66, 80, 51, 55, 71, 8, 53, 29, 57, 73, 88, 24, 37, 43, 4, 31]}}
{"prediction": {"error_location": 0.8907055854797363, "repair_targets": [0.17470555007457733, 0.00044197894749231637, 0.008350172080099583, 0.5189771056175232], "repair_candidates": [0.17470555007457733, 0.00979924388229847, 0.1165274977684021, 0.00044197894749231637, 0.1042143702507019, 0.027312863618135452, 0.004515799693763256, 0.02772495336830616, 0.0006350146140903234, 0.004596943501383066, 0.002016059122979641, 5.221477840677835e-05, 7.493258453905582e-05, 0.008350172080099583, 3.0134582630125806e-05, 1.4002633179188706e-05, 0.5189771056175232, 1.1170848665642552e-05], "target_probs": 0.70247483253479}}


{"result": {"time": "2021-02-21 11:29:28.143924", "n_pass": [104, 7, 7], "n_token": 85, "loss": [0.10267593711614609, 0.6139240264892578], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def safely_reserve_a_username(", "cursor", ",", "gen_usernames", "=", "gen_random_usernames", ",", "reserve", "=", "insert_into_participants", ")", ":", "#NEWLINE#", "#INDENT#", "'Safely reserve a username.\\n\\n    :param cursor: a :py:class:`psycopg2.cursor` managed as a :py:mod:`postgres`\\n        transaction\\n    :param gen_usernames: a generator of usernames to try\\n    :param reserve: a function that takes the cursor and does the SQL\\n        stuff\\n    :database: one ``INSERT`` on average\\n    :returns: a 12-hex-digit unicode\\n    :raises: :py:class:`FailedToReserveUsername` if no acceptable username is found\\n        within 100 attempts, or :py:class:`RanOutOfUsernameAttempts` if the username\\n        generator runs out first\\n\\n    The returned value is guaranteed to have been reserved in the database.\\n\\n    '", "#NEWLINE#", "cursor", ".", "execute", "(", "'SAVEPOINT safely_reserve_a_username'", ")", "#NEWLINE#", "seatbelt", "=", "0", "#NEWLINE#", "for", "username", "in", "gen_usernames", "(", ")", ":", "#NEWLINE#", "#INDENT#", "seatbelt", "+=", "1", "#NEWLINE#", "if", "(", "seatbelt", ">", "100", ")", ":", "#NEWLINE#", "#NEWLINE#", "#INDENT#", "check", "=", "reserve", "(", "check", ",", "username", ")", "#NEWLINE#", "#UNINDENT#", "except", "IntegrityError", ":", "#NEWLINE#", "#INDENT#", "cursor", ".", "execute", "assert", "(", "check", "==", "username", ")", "#NEWLINE#", "break", "RanOutOfUsernameAttempts", "#NEWLINE#", "#UNINDENT#", "cursor", ")", "#NEWLINE#", "return", "username"]}}
{"position": {"error_location": 84, "repair_targets": [2, 17, 66, 80], "repair_candidates": [2, 17, 66, 80, 51, 55, 71, 8, 53, 29, 57, 73, 84, 24, 37, 43, 4, 31]}}
{"prediction": {"error_location": 0.90241938829422, "repair_targets": [0.2279701828956604, 0.0009099234594032168, 0.10912904143333435, 0.20321378111839294], "repair_candidates": [0.2279701828956604, 0.01222680602222681, 0.214104562997818, 0.0009099234594032168, 0.13767483830451965, 0.033348407596349716, 0.005788775626569986, 0.04391351342201233, 0.0008574978564865887, 0.007514758966863155, 0.0030660973861813545, 7.461257337126881e-05, 9.486739145359024e-05, 0.10912904143333435, 6.469618529081345e-05, 1.4803621525061317e-05, 0.20321378111839294, 3.2900599762797356e-05], "target_probs": 0.5412229299545288}}


{"result": {"time": "2021-02-21 11:29:28.237443", "n_pass": [109, 8, 8], "n_token": 82, "loss": [0.06515651941299438, 0.5536683797836304], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def safely_reserve_a_username(", "cursor", ",", "gen_usernames", "=", "gen_random_usernames", ",", "reserve", ":", "#NEWLINE#", "#INDENT#", "'Safely reserve a username.\\n\\n    :param cursor: a :py:class:`psycopg2.cursor` managed as a :py:mod:`postgres`\\n        transaction\\n    :param gen_usernames: a generator of usernames to try\\n    :param reserve: a function that takes the cursor and does the SQL\\n        stuff\\n    :database: one ``INSERT`` on average\\n    :returns: a 12-hex-digit unicode\\n    :raises: :py:class:`FailedToReserveUsername` if no acceptable username is found\\n        within 100 attempts, or :py:class:`RanOutOfUsernameAttempts` if the username\\n        generator runs out first\\n\\n    The returned value is guaranteed to have been reserved in the database.\\n\\n    '", "#NEWLINE#", "cursor", ".", "execute", "(", "'SAVEPOINT safely_reserve_a_username'", ")", "#NEWLINE#", "seatbelt", "=", "0", "#NEWLINE#", "for", "username", "in", "gen_usernames", "(", ")", ":", "#NEWLINE#", "#INDENT#", "seatbelt", "+=", "1", "#NEWLINE#", "if", "(", "seatbelt", ">", "100", ")", ":", "#NEWLINE#", "#NEWLINE#", "#INDENT#", "check", "=", "reserve", "(", "check", ",", "username", ")", "#NEWLINE#", "#UNINDENT#", "except", "IntegrityError", ":", "#NEWLINE#", "#INDENT#", "cursor", ".", "execute", "assert", "(", "check", "==", "username", ")", "#NEWLINE#", "break", "RanOutOfUsernameAttempts", "#NEWLINE#", "#UNINDENT#", "cursor", ")", "#NEWLINE#", "return", "username"]}}
{"position": {"error_location": 81, "repair_targets": [2, 14, 63, 77], "repair_candidates": [2, 14, 63, 77, 48, 52, 68, 8, 50, 26, 54, 70, 81, 21, 34, 40, 4, 28]}}
{"prediction": {"error_location": 0.9369208216667175, "repair_targets": [0.04322855547070503, 0.0004085680120624602, 0.278538316488266, 0.25266173481941223], "repair_candidates": [0.04322855547070503, 0.06302719563245773, 0.021740036085247993, 0.0004085680120624602, 0.21111029386520386, 0.04891308769583702, 0.008279776200652122, 0.053688183426856995, 0.0010179508244618773, 0.014017777517437935, 0.0029921780806034803, 8.494948997395113e-05, 0.0001584517303854227, 0.278538316488266, 7.442258356604725e-05, 2.415622293483466e-05, 0.25266173481941223, 3.432692392379977e-05], "target_probs": 0.5748372077941895}}


{"result": {"time": "2021-02-21 11:29:28.330969", "n_pass": [110, 9, 9], "n_token": 79, "loss": [0.06105570122599602, 0.5551590919494629], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def safely_reserve_a_username(", "cursor", ",", "gen_usernames", "=", "gen_random_usernames", ",", "reserve", "'Safely reserve a username.\\n\\n    :param cursor: a :py:class:`psycopg2.cursor` managed as a :py:mod:`postgres`\\n        transaction\\n    :param gen_usernames: a generator of usernames to try\\n    :param reserve: a function that takes the cursor and does the SQL\\n        stuff\\n    :database: one ``INSERT`` on average\\n    :returns: a 12-hex-digit unicode\\n    :raises: :py:class:`FailedToReserveUsername` if no acceptable username is found\\n        within 100 attempts, or :py:class:`RanOutOfUsernameAttempts` if the username\\n        generator runs out first\\n\\n    The returned value is guaranteed to have been reserved in the database.\\n\\n    '", "#NEWLINE#", "cursor", ".", "execute", "(", "'SAVEPOINT safely_reserve_a_username'", ")", "#NEWLINE#", "seatbelt", "=", "0", "#NEWLINE#", "for", "username", "in", "gen_usernames", "(", ")", ":", "#NEWLINE#", "#INDENT#", "seatbelt", "+=", "1", "#NEWLINE#", "if", "(", "seatbelt", ">", "100", ")", ":", "#NEWLINE#", "#NEWLINE#", "#INDENT#", "check", "=", "reserve", "(", "check", ",", "username", ")", "#NEWLINE#", "#UNINDENT#", "except", "IntegrityError", ":", "#NEWLINE#", "#INDENT#", "cursor", ".", "execute", "assert", "(", "check", "==", "username", ")", "#NEWLINE#", "break", "RanOutOfUsernameAttempts", "#NEWLINE#", "#UNINDENT#", "cursor", ")", "#NEWLINE#", "return", "username"]}}
{"position": {"error_location": 78, "repair_targets": [2, 11, 60, 74], "repair_candidates": [2, 11, 60, 74, 45, 49, 65, 8, 47, 23, 51, 67, 78, 18, 31, 37, 4, 25]}}
{"prediction": {"error_location": 0.9407709240913391, "repair_targets": [0.09411857277154922, 0.001206170883961022, 0.26333290338516235, 0.21532325446605682], "repair_candidates": [0.09411857277154922, 0.09870973974466324, 0.002028128830716014, 0.001206170883961022, 0.19523906707763672, 0.06028880551457405, 0.008681715466082096, 0.043639130890369415, 0.0011259601451456547, 0.012972217053174973, 0.002983602462336421, 9.701328963274136e-05, 0.00012206734390929341, 0.26333290338516235, 6.895029218867421e-05, 2.6304700440960005e-05, 0.21532325446605682, 3.636864494183101e-05], "target_probs": 0.5739809274673462}}


{"result": {"time": "2021-02-21 11:29:28.420903", "n_pass": [112, 10, 10], "n_token": 76, "loss": [0.04732879251241684, 0.5382179021835327], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def safely_reserve_a_username(", "cursor", ",", "gen_usernames", "=", "gen_random_usernames", ",", "reserve", "'Safely reserve a username.\\n\\n    :param cursor: a :py:class:`psycopg2.cursor` managed as a :py:mod:`postgres`\\n        transaction\\n    :param gen_usernames: a generator of usernames to try\\n    :param reserve: a function that takes the cursor and does the SQL\\n        stuff\\n    :database: one ``INSERT`` on average\\n    :returns: a 12-hex-digit unicode\\n    :raises: :py:class:`FailedToReserveUsername` if no acceptable username is found\\n        within 100 attempts, or :py:class:`RanOutOfUsernameAttempts` if the username\\n        generator runs out first\\n\\n    The returned value is guaranteed to have been reserved in the database.\\n\\n    '", "#NEWLINE#", "cursor", "'SAVEPOINT safely_reserve_a_username'", ")", "#NEWLINE#", "seatbelt", "=", "0", "#NEWLINE#", "for", "username", "in", "gen_usernames", "(", ")", ":", "#NEWLINE#", "#INDENT#", "seatbelt", "+=", "1", "#NEWLINE#", "if", "(", "seatbelt", ">", "100", ")", ":", "#NEWLINE#", "#NEWLINE#", "#INDENT#", "check", "=", "reserve", "(", "check", ",", "username", ")", "#NEWLINE#", "#UNINDENT#", "except", "IntegrityError", ":", "#NEWLINE#", "#INDENT#", "cursor", ".", "execute", "assert", "(", "check", "==", "username", ")", "#NEWLINE#", "break", "RanOutOfUsernameAttempts", "#NEWLINE#", "#UNINDENT#", "cursor", ")", "#NEWLINE#", "return", "username"]}}
{"position": {"error_location": 75, "repair_targets": [2, 11, 57, 71], "repair_candidates": [2, 11, 57, 71, 42, 46, 62, 8, 44, 20, 48, 64, 75, 15, 28, 34, 4, 22]}}
{"prediction": {"error_location": 0.9537736177444458, "repair_targets": [0.06503817439079285, 0.00405678479000926, 0.27621713280677795, 0.23847562074661255], "repair_candidates": [0.06503817439079285, 0.08516120910644531, 0.0016431654803454876, 0.00405678479000926, 0.21107514202594757, 0.05096117779612541, 0.007853429764509201, 0.04419415071606636, 0.0008134627132676542, 0.011515832506120205, 0.0026222814340144396, 8.746890671318397e-05, 0.00013433002459350973, 0.27621713280677795, 9.730141755426303e-05, 2.1513531464734115e-05, 0.23847562074661255, 3.180904241162352e-05], "target_probs": 0.5837876796722412}}


{"result": {"time": "2021-02-21 11:29:28.596812", "n_pass": [117, 12, 11], "n_token": 72, "loss": [0.11056752502918243, 0.5634396076202393], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def safely_reserve_a_username(", "cursor", ",", "gen_usernames", "=", "gen_random_usernames", ",", "reserve", "'Safely reserve a username.\\n\\n    :param cursor: a :py:class:`psycopg2.cursor` managed as a :py:mod:`postgres`\\n        transaction\\n    :param gen_usernames: a generator of usernames to try\\n    :param reserve: a function that takes the cursor and does the SQL\\n        stuff\\n    :database: one ``INSERT`` on average\\n    :returns: a 12-hex-digit unicode\\n    :raises: :py:class:`FailedToReserveUsername` if no acceptable username is found\\n        within 100 attempts, or :py:class:`RanOutOfUsernameAttempts` if the username\\n        generator runs out first\\n\\n    The returned value is guaranteed to have been reserved in the database.\\n\\n    '", "#NEWLINE#", "cursor", "'SAVEPOINT safely_reserve_a_username'", ")", "#NEWLINE#", "seatbelt", "=", "0", "#NEWLINE#", "for", "username", "in", "gen_usernames", "(", "seatbelt", "+=", "1", "#NEWLINE#", "if", "(", "seatbelt", ">", "100", ")", ":", "#NEWLINE#", "#NEWLINE#", "#INDENT#", "check", "=", "reserve", "(", "check", ",", "username", ")", "#NEWLINE#", "#UNINDENT#", "except", "IntegrityError", ":", "#NEWLINE#", "#INDENT#", "cursor", ".", "execute", "assert", "(", "check", "==", "username", ")", "#NEWLINE#", "break", "RanOutOfUsernameAttempts", "#NEWLINE#", "#UNINDENT#", "cursor", ")", "#NEWLINE#", "return", "username"]}}
{"position": {"error_location": 71, "repair_targets": [2, 11, 53, 67], "repair_candidates": [2, 11, 53, 67, 38, 42, 58, 8, 40, 20, 44, 60, 71, 15, 24, 30, 4, 22]}}
{"prediction": {"error_location": 0.8953259587287903, "repair_targets": [0.09616084396839142, 0.008469353429973125, 0.23383060097694397, 0.23078690469264984], "repair_candidates": [0.09616084396839142, 0.07962662726640701, 0.0026652326341718435, 0.008469353429973125, 0.2448151856660843, 0.09059575945138931, 0.0017636367119848728, 0.0005108182085677981, 0.000410222914069891, 0.008390579372644424, 0.0016754501266404986, 5.9839599998667836e-05, 9.951314132194966e-05, 0.23383060097694397, 9.23895786399953e-05, 1.967557727766689e-05, 0.23078690469264984, 2.731032327574212e-05], "target_probs": 0.5692477226257324}}


{"result": {"time": "2021-02-21 11:29:28.684861", "n_pass": [120, 13, 12], "n_token": 68, "loss": [0.13152441382408142, 0.45215168595314026], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def safely_reserve_a_username(", "cursor", ",", "gen_usernames", "=", "gen_random_usernames", ",", "reserve", "'Safely reserve a username.\\n\\n    :param cursor: a :py:class:`psycopg2.cursor` managed as a :py:mod:`postgres`\\n        transaction\\n    :param gen_usernames: a generator of usernames to try\\n    :param reserve: a function that takes the cursor and does the SQL\\n        stuff\\n    :database: one ``INSERT`` on average\\n    :returns: a 12-hex-digit unicode\\n    :raises: :py:class:`FailedToReserveUsername` if no acceptable username is found\\n        within 100 attempts, or :py:class:`RanOutOfUsernameAttempts` if the username\\n        generator runs out first\\n\\n    The returned value is guaranteed to have been reserved in the database.\\n\\n    '", "#NEWLINE#", "cursor", "'SAVEPOINT safely_reserve_a_username'", ")", "#NEWLINE#", "seatbelt", "=", "0", "#NEWLINE#", "for", "username", "in", "gen_usernames", "(", "seatbelt", "+=", "1", "#NEWLINE#", "if", "(", "seatbelt", ">", "#NEWLINE#", "#INDENT#", "check", "=", "reserve", "(", "check", ",", "username", ")", "#NEWLINE#", "#UNINDENT#", "except", "IntegrityError", ":", "#NEWLINE#", "#INDENT#", "cursor", ".", "execute", "assert", "(", "check", "==", "username", ")", "#NEWLINE#", "break", "RanOutOfUsernameAttempts", "#NEWLINE#", "#UNINDENT#", "cursor", ")", "#NEWLINE#", "return", "username"]}}
{"position": {"error_location": 67, "repair_targets": [2, 11, 49, 63], "repair_candidates": [2, 11, 49, 63, 34, 38, 54, 8, 36, 20, 40, 56, 67, 15, 24, 30, 4, 22]}}
{"prediction": {"error_location": 0.8767578601837158, "repair_targets": [0.099366694688797, 0.009306776337325573, 0.27205514907836914, 0.2555290758609772], "repair_candidates": [0.099366694688797, 0.0804109126329422, 0.0028917519375681877, 0.009306776337325573, 0.20843279361724854, 0.059333279728889465, 0.001726303482428193, 0.00026505705318413675, 0.00035707346978597343, 0.007444416172802448, 0.0025808028876781464, 5.1078630349365994e-05, 0.00010166877473238856, 0.27205514907836914, 9.787372982827947e-05, 2.0077999579370953e-05, 0.2555290758609772, 2.9217217161203735e-05], "target_probs": 0.6362576484680176}}


{"result": {"time": "2021-02-21 11:29:28.768636", "n_pass": [124, 14, 13], "n_token": 64, "loss": [0.06739361584186554, 0.3107154965400696], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def safely_reserve_a_username(", "cursor", ",", "gen_usernames", "=", "gen_random_usernames", ",", "reserve", "'Safely reserve a username.\\n\\n    :param cursor: a :py:class:`psycopg2.cursor` managed as a :py:mod:`postgres`\\n        transaction\\n    :param gen_usernames: a generator of usernames to try\\n    :param reserve: a function that takes the cursor and does the SQL\\n        stuff\\n    :database: one ``INSERT`` on average\\n    :returns: a 12-hex-digit unicode\\n    :raises: :py:class:`FailedToReserveUsername` if no acceptable username is found\\n        within 100 attempts, or :py:class:`RanOutOfUsernameAttempts` if the username\\n        generator runs out first\\n\\n    The returned value is guaranteed to have been reserved in the database.\\n\\n    '", "#NEWLINE#", "cursor", "'SAVEPOINT safely_reserve_a_username'", ")", "#NEWLINE#", "seatbelt", "=", "0", "#NEWLINE#", "for", "username", "in", "gen_usernames", "(", "seatbelt", "+=", "1", "#NEWLINE#", "if", "(", "seatbelt", ">", "#NEWLINE#", "#INDENT#", "check", "=", "reserve", "(", "check", ",", "username", ")", "#NEWLINE#", "#UNINDENT#", "#INDENT#", "cursor", ".", "execute", "assert", "(", "check", "==", "username", ")", "#NEWLINE#", "break", "RanOutOfUsernameAttempts", "#NEWLINE#", "#UNINDENT#", "cursor", ")", "#NEWLINE#", "return", "username"]}}
{"position": {"error_location": 63, "repair_targets": [2, 11, 45, 59], "repair_candidates": [2, 11, 45, 59, 34, 38, 50, 8, 36, 20, 40, 52, 63, 15, 24, 30, 4, 22]}}
{"prediction": {"error_location": 0.9348271489143372, "repair_targets": [0.12186402827501297, 0.013672828674316406, 0.2990281879901886, 0.29835736751556396], "repair_candidates": [0.12186402827501297, 0.0521097369492054, 0.004565101582556963, 0.013672828674316406, 0.1521095335483551, 0.044134482741355896, 0.0011042043333873153, 0.00023010445875115693, 0.0003403510490898043, 0.007863377220928669, 0.004352058283984661, 2.8874515919596888e-05, 9.637320908950642e-05, 0.2990281879901886, 9.175750892609358e-05, 2.6275936761521734e-05, 0.29835736751556396, 2.5439761884626932e-05], "target_probs": 0.732922375202179}}


{"result": {"time": "2021-02-21 11:29:28.851803", "n_pass": [134, 15, 14], "n_token": 61, "loss": [0.07982230931520462, 0.42675527930259705], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def safely_reserve_a_username(", "cursor", ",", "gen_usernames", "=", "gen_random_usernames", ",", "reserve", "'Safely reserve a username.\\n\\n    :param cursor: a :py:class:`psycopg2.cursor` managed as a :py:mod:`postgres`\\n        transaction\\n    :param gen_usernames: a generator of usernames to try\\n    :param reserve: a function that takes the cursor and does the SQL\\n        stuff\\n    :database: one ``INSERT`` on average\\n    :returns: a 12-hex-digit unicode\\n    :raises: :py:class:`FailedToReserveUsername` if no acceptable username is found\\n        within 100 attempts, or :py:class:`RanOutOfUsernameAttempts` if the username\\n        generator runs out first\\n\\n    The returned value is guaranteed to have been reserved in the database.\\n\\n    '", "#NEWLINE#", "cursor", "seatbelt", "=", "0", "#NEWLINE#", "for", "username", "in", "gen_usernames", "(", "seatbelt", "+=", "1", "#NEWLINE#", "if", "(", "seatbelt", ">", "#NEWLINE#", "#INDENT#", "check", "=", "reserve", "(", "check", ",", "username", ")", "#NEWLINE#", "#UNINDENT#", "#INDENT#", "cursor", ".", "execute", "assert", "(", "check", "==", "username", ")", "#NEWLINE#", "break", "RanOutOfUsernameAttempts", "#NEWLINE#", "#UNINDENT#", "cursor", ")", "#NEWLINE#", "return", "username"]}}
{"position": {"error_location": 60, "repair_targets": [2, 11, 42, 56], "repair_candidates": [2, 11, 42, 56, 31, 35, 47, 8, 33, 17, 37, 49, 60, 12, 21, 27, 4, 19]}}
{"prediction": {"error_location": 0.9232804179191589, "repair_targets": [0.06126430258154869, 0.2932109236717224, 0.1203245297074318, 0.1778234839439392], "repair_candidates": [0.06126430258154869, 0.008514498360455036, 0.0008433550246991217, 0.2932109236717224, 0.30711477994918823, 0.020308971405029297, 0.0009254011674784124, 0.00031079360633157194, 0.00023950818285811692, 0.005800190381705761, 0.003121013753116131, 2.10810740099987e-05, 6.0169728385517374e-05, 0.1203245297074318, 8.314001024700701e-05, 1.9398285076022148e-05, 0.1778234839439392, 1.4471807844529394e-05], "target_probs": 0.6526232361793518}}


{"result": {"time": "2021-02-21 11:29:28.937164", "n_pass": [186, 16, 15], "n_token": 59, "loss": [0.13422849774360657, 0.2970958650112152], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def safely_reserve_a_username(", "cursor", ",", "gen_usernames", "=", "gen_random_usernames", ",", "reserve", "cursor", "seatbelt", "=", "0", "#NEWLINE#", "for", "username", "in", "gen_usernames", "(", "seatbelt", "+=", "1", "#NEWLINE#", "if", "(", "seatbelt", ">", "#NEWLINE#", "#INDENT#", "check", "=", "reserve", "(", "check", ",", "username", ")", "#NEWLINE#", "#UNINDENT#", "#INDENT#", "cursor", ".", "execute", "assert", "(", "check", "==", "username", ")", "#NEWLINE#", "break", "RanOutOfUsernameAttempts", "#NEWLINE#", "#UNINDENT#", "cursor", ")", "#NEWLINE#", "return", "username"]}}
{"position": {"error_location": 58, "repair_targets": [2, 9, 40, 54], "repair_candidates": [2, 9, 40, 54, 29, 33, 45, 8, 31, 15, 35, 47, 58, 10, 19, 25, 4, 17]}}
{"prediction": {"error_location": 0.8743904232978821, "repair_targets": [0.15711240470409393, 0.03912472724914551, 0.25191205739974976, 0.294823557138443], "repair_candidates": [0.15711240470409393, 0.10151995718479156, 0.04243602231144905, 0.03912472724914551, 0.046777281910181046, 0.04100671783089638, 0.0025895824655890465, 0.0005944837466813624, 0.0005728680989705026, 0.012544028460979462, 0.008519471623003483, 4.3457803258206695e-05, 0.00011764307419070974, 0.25191205739974976, 0.000232565522310324, 3.6263572837924585e-05, 0.294823557138443, 3.682887472677976e-05], "target_probs": 0.7429727911949158}}


{"result": {"time": "2021-02-21 11:29:29.016867", "n_pass": [188, 17, 16], "n_token": 57, "loss": [0.132144957780838, 0.21710804104804993], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def safely_reserve_a_username(", "cursor", ",", "gen_usernames", "=", "gen_random_usernames", ",", "reserve", "cursor", "seatbelt", "#NEWLINE#", "for", "username", "in", "gen_usernames", "(", "seatbelt", "+=", "1", "#NEWLINE#", "if", "(", "seatbelt", ">", "#NEWLINE#", "#INDENT#", "check", "=", "reserve", "(", "check", ",", "username", ")", "#NEWLINE#", "#UNINDENT#", "#INDENT#", "cursor", ".", "execute", "assert", "(", "check", "==", "username", ")", "#NEWLINE#", "break", "RanOutOfUsernameAttempts", "#NEWLINE#", "#UNINDENT#", "cursor", ")", "#NEWLINE#", "return", "username"]}}
{"position": {"error_location": 56, "repair_targets": [2, 9, 38, 52], "repair_candidates": [2, 9, 38, 52, 27, 31, 43, 8, 29, 13, 33, 45, 56, 10, 17, 23, 4, 15]}}
{"prediction": {"error_location": 0.8762140870094299, "repair_targets": [0.20517101883888245, 0.011567160487174988, 0.20788148045539856, 0.3802233636379242], "repair_candidates": [0.20517101883888245, 0.036216966807842255, 0.0089796744287014, 0.011567160487174988, 0.00935096014291048, 0.1159101128578186, 0.002737824572250247, 0.0009711328311823308, 0.0006833499646745622, 0.01050406601279974, 0.009348071180284023, 4.743825411424041e-05, 0.0001865003869170323, 0.20788148045539856, 0.0001278011332033202, 5.079082984593697e-05, 0.3802233636379242, 4.227300814818591e-05], "target_probs": 0.804843008518219}}


{"result": {"time": "2021-02-21 11:29:29.173361", "n_pass": [193, 19, 17], "n_token": 55, "loss": [0.10354456305503845, 0.1388021856546402], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def safely_reserve_a_username(", "cursor", ",", "gen_usernames", "=", "gen_random_usernames", ",", "reserve", "cursor", "seatbelt", "#NEWLINE#", "for", "username", "in", "gen_usernames", "(", "seatbelt", "+=", "if", "(", "seatbelt", ">", "#NEWLINE#", "#INDENT#", "check", "=", "reserve", "(", "check", ",", "username", ")", "#NEWLINE#", "#UNINDENT#", "#INDENT#", "cursor", ".", "execute", "assert", "(", "check", "==", "username", ")", "#NEWLINE#", "break", "RanOutOfUsernameAttempts", "#NEWLINE#", "#UNINDENT#", "cursor", ")", "#NEWLINE#", "return", "username"]}}
{"position": {"error_location": 54, "repair_targets": [2, 9, 36, 50], "repair_candidates": [2, 9, 36, 50, 25, 29, 41, 8, 27, 13, 31, 43, 54, 10, 17, 21, 4, 15]}}
{"prediction": {"error_location": 0.9016358256340027, "repair_targets": [0.23595234751701355, 0.01230823714286089, 0.24406734108924866, 0.37807223200798035], "repair_candidates": [0.23595234751701355, 0.030177639797329903, 0.011036870069801807, 0.01230823714286089, 0.007400018163025379, 0.05783037096261978, 0.0021966195199638605, 0.0004404087085276842, 4.404798528412357e-05, 0.01094751711934805, 0.00910272914916277, 3.235643089283258e-05, 0.0001680520363152027, 0.24406734108924866, 0.0001310409134021029, 5.243889245321043e-05, 0.37807223200798035, 3.972283229813911e-05], "target_probs": 0.8704001903533936}}


{"result": {"time": "2021-02-21 11:29:29.250634", "n_pass": [194, 20, 18], "n_token": 53, "loss": [0.0640774592757225, 0.11271451413631439], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def safely_reserve_a_username(", "cursor", ",", "gen_usernames", "=", "gen_random_usernames", ",", "reserve", "cursor", "seatbelt", "#NEWLINE#", "for", "username", "in", "gen_usernames", "(", "seatbelt", "+=", "seatbelt", ">", "#NEWLINE#", "#INDENT#", "check", "=", "reserve", "(", "check", ",", "username", ")", "#NEWLINE#", "#UNINDENT#", "#INDENT#", "cursor", ".", "execute", "assert", "(", "check", "==", "username", ")", "#NEWLINE#", "break", "RanOutOfUsernameAttempts", "#NEWLINE#", "#UNINDENT#", "cursor", ")", "#NEWLINE#", "return", "username"]}}
{"position": {"error_location": 52, "repair_targets": [2, 9, 34, 48], "repair_candidates": [2, 9, 34, 48, 23, 27, 39, 8, 25, 13, 29, 41, 52, 10, 17, 19, 4, 15]}}
{"prediction": {"error_location": 0.9379322528839111, "repair_targets": [0.17026251554489136, 0.009473593905568123, 0.33961376547813416, 0.37405577301979065], "repair_candidates": [0.17026251554489136, 0.017608245834708214, 0.005684304982423782, 0.009473593905568123, 0.005326724145561457, 0.035129301249980927, 0.0019623921252787113, 0.019840652123093605, 0.00010965124965878204, 0.009623498655855656, 0.010844079777598381, 3.5456552723189816e-05, 0.0001804227358661592, 0.33961376547813416, 0.00014843937242403626, 6.089477028581314e-05, 0.37405577301979065, 4.025040107080713e-05], "target_probs": 0.8934056758880615}}


{"result": {"time": "2021-02-21 11:29:29.328065", "n_pass": [196, 21, 19], "n_token": 51, "loss": [0.058298543095588684, 0.11593621969223022], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def safely_reserve_a_username(", "cursor", ",", "gen_usernames", "=", "gen_random_usernames", ",", "reserve", "cursor", "seatbelt", "#NEWLINE#", "for", "username", "in", "gen_usernames", "(", "seatbelt", "+=", "seatbelt", ">", "check", "=", "reserve", "(", "check", ",", "username", ")", "#NEWLINE#", "#UNINDENT#", "#INDENT#", "cursor", ".", "execute", "assert", "(", "check", "==", "username", ")", "#NEWLINE#", "break", "RanOutOfUsernameAttempts", "#NEWLINE#", "#UNINDENT#", "cursor", ")", "#NEWLINE#", "return", "username"]}}
{"position": {"error_location": 50, "repair_targets": [2, 9, 32, 46], "repair_candidates": [2, 9, 32, 46, 21, 25, 37, 8, 23, 13, 27, 39, 50, 10, 17, 19, 4, 15]}}
{"prediction": {"error_location": 0.9433682560920715, "repair_targets": [0.23863595724105835, 0.010613160207867622, 0.3229343891143799, 0.3183484971523285], "repair_candidates": [0.23863595724105835, 0.01682480052113533, 0.008893019519746304, 0.010613160207867622, 0.004205512348562479, 0.015818767249584198, 0.0015352193731814623, 0.03201930597424507, 0.00010087219561683014, 0.02571849711239338, 0.003892699023708701, 4.434659786056727e-05, 0.00018337949586566538, 0.3229343891143799, 0.00013413956912700087, 6.249514262890443e-05, 0.3183484971523285, 3.491053212201223e-05], "target_probs": 0.8905320167541504}}


{"result": {"time": "2021-02-21 11:29:29.403310", "n_pass": [201, 22, 20], "n_token": 49, "loss": [0.2567957937717438, 0.31985530257225037], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def safely_reserve_a_username(", "cursor", ",", "gen_usernames", "=", "gen_random_usernames", ",", "reserve", "cursor", "seatbelt", "#NEWLINE#", "for", "username", "in", "gen_usernames", "(", "seatbelt", "+=", "seatbelt", ">", "check", "=", "reserve", "(", "check", ",", "username", ")", "#INDENT#", "cursor", ".", "execute", "assert", "(", "check", "==", "username", ")", "#NEWLINE#", "break", "RanOutOfUsernameAttempts", "#NEWLINE#", "#UNINDENT#", "cursor", ")", "#NEWLINE#", "return", "username"]}}
{"position": {"error_location": 48, "repair_targets": [2, 9, 30, 44], "repair_candidates": [2, 9, 30, 44, 21, 25, 35, 8, 23, 13, 27, 37, 48, 10, 17, 19, 4, 15]}}
{"prediction": {"error_location": 0.7735260725021362, "repair_targets": [0.17427898943424225, 0.009996481239795685, 0.022685974836349487, 0.5192926526069641], "repair_candidates": [0.17427898943424225, 0.02564326673746109, 0.004679364617913961, 0.009996481239795685, 0.007842681370675564, 0.06708208471536636, 0.01229451596736908, 0.061863575130701065, 0.00018334444030188024, 0.08111457526683807, 0.010504751466214657, 0.00013581736129708588, 0.0020923162810504436, 0.022685974836349487, 0.0001329298975178972, 9.676704939920455e-05, 0.5192926526069641, 7.989904406713322e-05], "target_probs": 0.7262541055679321}}


{"result": {"time": "2021-02-21 11:29:29.477375", "n_pass": [203, 23, 21], "n_token": 47, "loss": [0.26737257838249207, 0.24015258252620697], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def safely_reserve_a_username(", "cursor", ",", "gen_usernames", "=", "gen_random_usernames", ",", "reserve", "cursor", "seatbelt", "#NEWLINE#", "for", "username", "in", "gen_usernames", "(", "seatbelt", "+=", "seatbelt", ">", "check", "=", "reserve", "(", "check", ",", "username", ")", "#INDENT#", "cursor", "assert", "(", "check", "==", "username", ")", "#NEWLINE#", "break", "RanOutOfUsernameAttempts", "#NEWLINE#", "#UNINDENT#", "cursor", ")", "#NEWLINE#", "return", "username"]}}
{"position": {"error_location": 46, "repair_targets": [2, 9, 30, 42], "repair_candidates": [2, 9, 30, 42, 21, 25, 33, 8, 23, 13, 27, 35, 46, 10, 17, 19, 4, 15]}}
{"prediction": {"error_location": 0.7653878331184387, "repair_targets": [0.19766870141029358, 0.012332143262028694, 0.013330593705177307, 0.5631763935089111], "repair_candidates": [0.19766870141029358, 0.018071571364998817, 0.005123770795762539, 0.012332143262028694, 0.008456632494926453, 0.03880297392606735, 0.010516191832721233, 0.06195857375860214, 0.00012688709830399603, 0.059481218457221985, 0.009539728984236717, 0.00012463514576666057, 0.0009997630259022117, 0.013330593705177307, 0.00013110597501508892, 8.706107473699376e-05, 0.5631763935089111, 7.198019739007577e-05], "target_probs": 0.7865078449249268}}


{"result": {"time": "2021-02-21 11:29:29.550583", "n_pass": [204, 24, 22], "n_token": 45, "loss": [0.49172621965408325, 0.28026288747787476], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def safely_reserve_a_username(", "cursor", ",", "gen_usernames", "=", "gen_random_usernames", ",", "reserve", "cursor", "seatbelt", "#NEWLINE#", "for", "username", "in", "gen_usernames", "(", "seatbelt", "+=", "seatbelt", ">", "check", "=", "reserve", "(", "check", ",", "username", ")", "#INDENT#", "cursor", "check", "==", "username", ")", "#NEWLINE#", "break", "RanOutOfUsernameAttempts", "#NEWLINE#", "#UNINDENT#", "cursor", ")", "#NEWLINE#", "return", "username"]}}
{"position": {"error_location": 44, "repair_targets": [2, 9, 30, 40], "repair_candidates": [2, 9, 30, 40, 21, 25, 31, 8, 23, 13, 27, 33, 44, 10, 17, 19, 4, 15]}}
{"prediction": {"error_location": 0.6115697622299194, "repair_targets": [0.2568327486515045, 0.01394463051110506, 0.04272103309631348, 0.4420866370201111], "repair_candidates": [0.2568327486515045, 0.024913618341088295, 0.007233451120555401, 0.01394463051110506, 0.008208103477954865, 0.04610564187169075, 0.010438240133225918, 0.0511348694562912, 0.0001292297092732042, 0.08667755872011185, 0.008490847423672676, 0.0001522460806882009, 0.0005035222857259214, 0.04272103309631348, 0.00018880295101553202, 0.00013225217116996646, 0.4420866370201111, 0.0001065849864971824], "target_probs": 0.7555850744247437}}


{"result": {"time": "2021-02-21 11:29:29.622538", "n_pass": [207, 25, 23], "n_token": 43, "loss": [0.46453577280044556, 0.1892235279083252], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def safely_reserve_a_username(", "cursor", ",", "gen_usernames", "=", "gen_random_usernames", ",", "reserve", "cursor", "seatbelt", "#NEWLINE#", "for", "username", "in", "gen_usernames", "(", "seatbelt", "+=", "seatbelt", ">", "check", "=", "reserve", "(", "check", ",", "username", ")", "#INDENT#", "cursor", "check", "==", "username", ")", "RanOutOfUsernameAttempts", "#NEWLINE#", "#UNINDENT#", "cursor", ")", "#NEWLINE#", "return", "username"]}}
{"position": {"error_location": 42, "repair_targets": [2, 9, 30, 38], "repair_candidates": [2, 9, 30, 38, 21, 25, 31, 8, 23, 13, 27, 33, 42, 10, 17, 19, 4, 15]}}
{"prediction": {"error_location": 0.628426730632782, "repair_targets": [0.23967142403125763, 0.011356104165315628, 0.024022705852985382, 0.55255126953125], "repair_candidates": [0.23967142403125763, 0.02030991017818451, 0.006754747126251459, 0.011356104165315628, 0.006114125717431307, 0.046895164996385574, 0.005600244738161564, 0.0364854633808136, 0.0001089112920453772, 0.03945606201887131, 0.0097920848056674, 0.00011987418838543817, 0.0003670991864055395, 0.024022705852985382, 0.00015024037566035986, 0.0001504932006355375, 0.55255126953125, 9.40121099120006e-05], "target_probs": 0.8276014924049377}}


{"result": {"time": "2021-02-21 11:29:29.695402", "n_pass": [208, 26, 24], "n_token": 41, "loss": [0.5412466526031494, 0.37956514954566956], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def safely_reserve_a_username(", "cursor", ",", "gen_usernames", "=", "gen_random_usernames", ",", "reserve", "cursor", "seatbelt", "#NEWLINE#", "for", "username", "in", "gen_usernames", "(", "seatbelt", "+=", "seatbelt", ">", "check", "=", "reserve", "(", "check", ",", "username", ")", "#INDENT#", "cursor", "check", "==", "username", ")", "#UNINDENT#", "cursor", ")", "#NEWLINE#", "return", "username"]}}
{"position": {"error_location": 40, "repair_targets": [2, 9, 30, 36], "repair_candidates": [2, 9, 30, 36, 21, 25, 31, 8, 23, 13, 27, 33, 40, 10, 17, 19, 4, 15]}}
{"prediction": {"error_location": 0.5820221900939941, "repair_targets": [0.2892453074455261, 0.018486598506569862, 0.13737674057483673, 0.2390502244234085], "repair_candidates": [0.2892453074455261, 0.04032977670431137, 0.01224305760115385, 0.018486598506569862, 0.01174662820994854, 0.05582914128899574, 0.013681319542229176, 0.09071081876754761, 0.0002506104065105319, 0.07804961502552032, 0.010692436248064041, 0.00018558406736701727, 0.0005228783702477813, 0.13737674057483673, 0.001034703105688095, 0.00042810506420210004, 0.2390502244234085, 0.00013638452219311148], "target_probs": 0.6841588616371155}}


{"result": {"time": "2021-02-21 11:29:29.835283", "n_pass": [212, 28, 25], "n_token": 40, "loss": [0.7118300199508667, 0.41446104645729065], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["def safely_reserve_a_username(", "cursor", ",", "gen_usernames", "=", "gen_random_usernames", ",", "reserve", "cursor", "seatbelt", "#NEWLINE#", "for", "username", "in", "gen_usernames", "(", "seatbelt", "+=", "seatbelt", ">", "check", "=", "reserve", "(", "check", ",", "username", ")", "#INDENT#", "cursor", "check", "==", "username", ")", "#UNINDENT#", "cursor", ")", "#NEWLINE#", "return", "username"]}}
{"position": {"error_location": 39, "repair_targets": [1, 8, 29, 35], "repair_candidates": [1, 8, 29, 35, 20, 24, 30, 7, 22, 12, 26, 32, 39, 9, 16, 18, 3, 14]}}
{"prediction": {"error_location": 0.49074530601501465, "repair_targets": [0.251725971698761, 0.004428056534379721, 0.12429001927375793, 0.28025224804878235], "repair_candidates": [0.251725971698761, 0.06297958642244339, 0.02264038659632206, 0.004428056534379721, 0.0029462112579494715, 0.05069882050156593, 0.019671551883220673, 0.12398882210254669, 0.0004450500418897718, 0.037178367376327515, 0.015747133642435074, 0.00036645180080085993, 0.0007330094813369215, 0.12429001927375793, 0.0012432967778295279, 0.00042623854824341834, 0.28025224804878235, 0.0002387275599176064], "target_probs": 0.660696268081665}}


{"result": {"time": "2021-02-21 11:29:29.974251", "n_pass": [215, 30, 26], "n_token": 39, "loss": [1.0677434206008911, 0.30369308590888977], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["def safely_reserve_a_username(", "cursor", "gen_usernames", "=", "gen_random_usernames", ",", "reserve", "cursor", "seatbelt", "#NEWLINE#", "for", "username", "in", "gen_usernames", "(", "seatbelt", "+=", "seatbelt", ">", "check", "=", "reserve", "(", "check", ",", "username", ")", "#INDENT#", "cursor", "check", "==", "username", ")", "#UNINDENT#", "cursor", ")", "#NEWLINE#", "return", "username"]}}
{"position": {"error_location": 38, "repair_targets": [1, 7, 28, 34], "repair_candidates": [1, 7, 28, 34, 19, 23, 29, 6, 21, 11, 25, 31, 38, 8, 15, 17, 2, 13]}}
{"prediction": {"error_location": 0.3437833786010742, "repair_targets": [0.6844650506973267, 0.001176030607894063, 0.016729140654206276, 0.03571715205907822], "repair_candidates": [0.6844650506973267, 0.2131659835577011, 0.006738742347806692, 0.001176030607894063, 0.0010728446068242192, 0.003576530609279871, 0.006357364356517792, 0.018961338326334953, 0.00012061189045198262, 0.00741316145285964, 0.003728682640939951, 0.00014240355812944472, 0.00019605060515459627, 0.016729140654206276, 0.00022934828302823007, 0.0001402348279953003, 0.03571715205907822, 6.943915650481358e-05], "target_probs": 0.7380873560905457}}


{"result": {"time": "2021-02-21 11:29:30.461762", "n_pass": [276, 37, 27], "n_token": 38, "loss": [0.04686342924833298, 0.573952853679657], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["def safely_reserve_a_username(", "cursor", "gen_usernames", "=", "gen_random_usernames", ",", "reserve", "cursor", "seatbelt", "for", "username", "in", "gen_usernames", "(", "seatbelt", "+=", "seatbelt", ">", "check", "=", "reserve", "(", "check", ",", "username", ")", "#INDENT#", "cursor", "check", "==", "username", ")", "#UNINDENT#", "cursor", ")", "#NEWLINE#", "return", "username"]}}
{"position": {"error_location": 37, "repair_targets": [1, 7, 27, 33], "repair_candidates": [1, 7, 27, 33, 18, 22, 28, 6, 20, 10, 24, 30, 37, 8, 14, 16, 2, 12]}}
{"prediction": {"error_location": 0.9542176127433777, "repair_targets": [0.4829618036746979, 0.00042188738007098436, 0.018704498186707497, 0.06120624393224716], "repair_candidates": [0.4829618036746979, 0.3235509395599365, 0.016928154975175858, 0.00042188738007098436, 0.00023971774498932064, 0.045140307396650314, 0.0014925104333087802, 0.02053990587592125, 0.00012829086335841566, 0.02476884238421917, 0.0032390181440860033, 0.00010614639904815704, 0.00012191596033517271, 0.018704498186707497, 0.0003060460148844868, 0.00011021418322343379, 0.06120624393224716, 3.354684668011032e-05], "target_probs": 0.5632944107055664}}


{"result": {"time": "2021-02-21 11:29:30.530719", "n_pass": [278, 38, 28], "n_token": 37, "loss": [0.04134081304073334, 0.6566320657730103], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["def safely_reserve_a_username(", "cursor", "gen_usernames", "=", "gen_random_usernames", ",", "reserve", "cursor", "seatbelt", "for", "username", "gen_usernames", "(", "seatbelt", "+=", "seatbelt", ">", "check", "=", "reserve", "(", "check", ",", "username", ")", "#INDENT#", "cursor", "check", "==", "username", ")", "#UNINDENT#", "cursor", ")", "#NEWLINE#", "return", "username"]}}
{"position": {"error_location": 36, "repair_targets": [1, 7, 26, 32], "repair_candidates": [1, 7, 26, 32, 17, 21, 27, 6, 19, 10, 23, 29, 36, 8, 13, 15, 2, 11]}}
{"prediction": {"error_location": 0.9595020413398743, "repair_targets": [0.4721224904060364, 0.00011897511285496876, 0.011894813738763332, 0.0344587080180645], "repair_candidates": [0.4721224904060364, 0.3858090937137604, 0.005304440390318632, 0.00011897511285496876, 4.6738092351006344e-05, 0.02013305015861988, 0.002429376821964979, 0.04296240210533142, 0.00042925417074002326, 0.021516159176826477, 0.002260414883494377, 0.00010809514787979424, 0.00010002116323448718, 0.011894813738763332, 0.00020013355242554098, 7.82364877522923e-05, 0.0344587080180645, 2.757197762548458e-05], "target_probs": 0.5185949802398682}}


{"result": {"time": "2021-02-21 11:29:30.806127", "n_pass": [286, 42, 29], "n_token": 36, "loss": [0.03485555201768875, 0.5294690728187561], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["def safely_reserve_a_username(", "cursor", "gen_usernames", "=", "gen_random_usernames", ",", "reserve", "cursor", "seatbelt", "for", "username", "gen_usernames", "(", "seatbelt", "+=", "seatbelt", ">", "check", "reserve", "(", "check", ",", "username", ")", "#INDENT#", "cursor", "check", "==", "username", ")", "#UNINDENT#", "cursor", ")", "#NEWLINE#", "return", "username"]}}
{"position": {"error_location": 35, "repair_targets": [1, 7, 25, 31], "repair_candidates": [1, 7, 25, 31, 17, 20, 26, 6, 18, 10, 22, 28, 35, 8, 13, 15, 2, 11]}}
{"prediction": {"error_location": 0.9657449126243591, "repair_targets": [0.5099934935569763, 0.00018363914568908513, 0.021602777764201164, 0.057137660682201385], "repair_candidates": [0.5099934935569763, 0.3494500517845154, 0.01045574713498354, 0.00018363914568908513, 6.231799488887191e-05, 0.021139023825526237, 0.0021430826745927334, 0.023029359057545662, 0.00034769572084769607, 0.0021439024712890387, 0.0015548476949334145, 0.00015119124145712703, 0.0001480753271607682, 0.021602777764201164, 0.00031572976149618626, 0.00010380059393355623, 0.057137660682201385, 3.760584513656795e-05], "target_probs": 0.5889175534248352}}


{"result": {"time": "2021-02-21 11:29:30.874131", "n_pass": [288, 43, 30], "n_token": 35, "loss": [0.04550294578075409, 0.43764528632164], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["def safely_reserve_a_username(", "cursor", "gen_usernames", "=", "gen_random_usernames", ",", "reserve", "cursor", "seatbelt", "for", "username", "gen_usernames", "(", "seatbelt", "+=", "seatbelt", ">", "check", "reserve", "check", ",", "username", ")", "#INDENT#", "cursor", "check", "==", "username", ")", "#UNINDENT#", "cursor", ")", "#NEWLINE#", "return", "username"]}}
{"position": {"error_location": 34, "repair_targets": [1, 7, 24, 30], "repair_candidates": [1, 7, 24, 30, 17, 19, 25, 6, 18, 10, 21, 27, 34, 8, 13, 15, 2, 11]}}
{"prediction": {"error_location": 0.9555166959762573, "repair_targets": [0.5165969729423523, 0.00022586880368180573, 0.035120319575071335, 0.09361158311367035], "repair_candidates": [0.5165969729423523, 0.26527565717697144, 0.011947650462388992, 0.00022586880368180573, 8.648713992442936e-05, 0.042254023253917694, 0.0018560343887656927, 0.026599019765853882, 0.0003528915694914758, 0.004743744153529406, 5.824574327562004e-05, 9.415545355295762e-05, 0.0002722518693190068, 0.035120319575071335, 0.0006258569192141294, 0.00020990266057197005, 0.09361158311367035, 6.927640060894191e-05], "target_probs": 0.6455547213554382}}


{"result": {"time": "2021-02-21 11:29:30.941564", "n_pass": [290, 44, 31], "n_token": 34, "loss": [0.048819977790117264, 0.38104599714279175], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["def safely_reserve_a_username(", "cursor", "gen_usernames", "=", "gen_random_usernames", ",", "reserve", "cursor", "seatbelt", "for", "username", "gen_usernames", "(", "seatbelt", "+=", "seatbelt", ">", "check", "reserve", "check", "username", ")", "#INDENT#", "cursor", "check", "==", "username", ")", "#UNINDENT#", "cursor", ")", "#NEWLINE#", "return", "username"]}}
{"position": {"error_location": 33, "repair_targets": [1, 7, 23, 29], "repair_candidates": [1, 7, 23, 29, 17, 19, 24, 6, 18, 10, 20, 26, 33, 8, 13, 15, 2, 11]}}
{"prediction": {"error_location": 0.9523525834083557, "repair_targets": [0.530640721321106, 0.0003803426225204021, 0.04624797776341438, 0.10587740689516068], "repair_candidates": [0.530640721321106, 0.22770486772060394, 0.01723342016339302, 0.0003803426225204021, 0.00011915413779206574, 0.040653809905052185, 0.0018418829422444105, 0.024267351254820824, 0.0005907547893002629, 0.0030417675152420998, 4.952902236254886e-05, 4.461505523067899e-05, 0.00025143896345980465, 0.04624797776341438, 0.0007281041471287608, 0.00023827850236557424, 0.10587740689516068, 8.85589761310257e-05], "target_probs": 0.6831464767456055}}


{"result": {"time": "2021-02-21 11:29:31.008768", "n_pass": [292, 45, 32], "n_token": 33, "loss": [0.06439483910799026, 0.36984962224960327], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["def safely_reserve_a_username(", "cursor", "gen_usernames", "=", "gen_random_usernames", ",", "reserve", "cursor", "seatbelt", "for", "username", "gen_usernames", "(", "seatbelt", "+=", "seatbelt", ">", "check", "reserve", "check", "username", "#INDENT#", "cursor", "check", "==", "username", ")", "#UNINDENT#", "cursor", ")", "#NEWLINE#", "return", "username"]}}
{"position": {"error_location": 32, "repair_targets": [1, 7, 22, 28], "repair_candidates": [1, 7, 22, 28, 17, 19, 23, 6, 18, 10, 20, 25, 32, 8, 13, 15, 2, 11]}}
{"prediction": {"error_location": 0.9376348257064819, "repair_targets": [0.5603483319282532, 0.00021793053019791842, 0.07970409095287323, 0.0505678616464138], "repair_candidates": [0.5603483319282532, 0.22813460230827332, 0.01174040324985981, 0.00021793053019791842, 7.628290768479928e-05, 0.04055735096335411, 0.0011047010775655508, 0.019623488187789917, 0.0002894210338126868, 0.0045918612740933895, 5.642354517476633e-05, 2.3634633180336095e-05, 0.0010941089130938053, 0.07970409095287323, 0.0015452048974111676, 0.0002380610239924863, 0.0505678616464138, 8.624462498119101e-05], "target_probs": 0.6908382177352905}}


{"result": {"time": "2021-02-21 11:29:31.075047", "n_pass": [293, 46, 33], "n_token": 32, "loss": [0.05032889172434807, 0.3977520763874054], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["def safely_reserve_a_username(", "cursor", "gen_usernames", "=", "gen_random_usernames", ",", "reserve", "cursor", "seatbelt", "for", "username", "gen_usernames", "(", "seatbelt", "+=", "seatbelt", ">", "check", "reserve", "check", "username", "cursor", "check", "==", "username", ")", "#UNINDENT#", "cursor", ")", "#NEWLINE#", "return", "username"]}}
{"position": {"error_location": 31, "repair_targets": [1, 7, 21, 27], "repair_candidates": [1, 7, 21, 27, 17, 19, 22, 6, 18, 10, 20, 24, 31, 8, 13, 15, 2, 11]}}
{"prediction": {"error_location": 0.9509167075157166, "repair_targets": [0.5603436827659607, 0.00023124295694287866, 0.024180887266993523, 0.08707275241613388], "repair_candidates": [0.5603436827659607, 0.2434401512145996, 0.01230546087026596, 0.00023124295694287866, 8.709465328138322e-05, 0.04585068300366402, 0.0015856284881010652, 0.01734084077179432, 0.00035470930743031204, 0.005398189648985863, 4.960029400535859e-05, 2.6243746106047183e-05, 0.0009030830697156489, 0.024180887266993523, 0.0005668914527632296, 0.00017065157589968294, 0.08707275241613388, 9.220794163411483e-05], "target_probs": 0.67182856798172}}


{"result": {"time": "2021-02-21 11:29:31.143147", "n_pass": [296, 47, 34], "n_token": 31, "loss": [0.03665461763739586, 0.30152466893196106], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["def safely_reserve_a_username(", "cursor", "gen_usernames", "=", "gen_random_usernames", ",", "reserve", "cursor", "seatbelt", "for", "username", "gen_usernames", "(", "seatbelt", "+=", "seatbelt", ">", "check", "reserve", "check", "username", "cursor", "check", "username", ")", "#UNINDENT#", "cursor", ")", "#NEWLINE#", "return", "username"]}}
{"position": {"error_location": 30, "repair_targets": [1, 7, 21, 26], "repair_candidates": [1, 7, 21, 26, 17, 19, 22, 6, 18, 10, 20, 23, 30, 8, 13, 15, 2, 11]}}
{"prediction": {"error_location": 0.9640090465545654, "repair_targets": [0.5363622307777405, 0.0002987813204526901, 0.0766199603676796, 0.12640857696533203], "repair_candidates": [0.5363622307777405, 0.1658681333065033, 0.010582550428807735, 0.0002987813204526901, 9.704652620712295e-05, 0.04729118198156357, 0.0009109577513299882, 0.017387807369232178, 0.0004147384315729141, 0.013044644147157669, 9.164631046587601e-05, 4.519233334576711e-05, 0.003267645835876465, 0.0766199603676796, 0.0004526859847828746, 0.0006956917350180447, 0.12640857696533203, 0.0001604787103133276], "target_probs": 0.7396895885467529}}


{"result": {"time": "2021-02-21 11:29:31.208239", "n_pass": [298, 48, 35], "n_token": 30, "loss": [0.06259554624557495, 0.21406041085720062], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["def safely_reserve_a_username(", "cursor", "gen_usernames", "=", "gen_random_usernames", ",", "reserve", "cursor", "seatbelt", "for", "username", "gen_usernames", "(", "seatbelt", "+=", "seatbelt", ">", "check", "reserve", "check", "username", "cursor", "check", "username", "#UNINDENT#", "cursor", ")", "#NEWLINE#", "return", "username"]}}
{"position": {"error_location": 29, "repair_targets": [1, 7, 21, 25], "repair_candidates": [1, 7, 21, 25, 17, 19, 22, 6, 18, 10, 20, 23, 29, 8, 13, 15, 2, 11]}}
{"prediction": {"error_location": 0.9393233060836792, "repair_targets": [0.48179101943969727, 0.00016949180280789733, 0.08365937322378159, 0.24167977273464203], "repair_candidates": [0.48179101943969727, 0.12352104485034943, 0.004754636902362108, 0.00016949180280789733, 6.268619472393766e-05, 0.0403280146420002, 0.00044296644045971334, 0.00572554673999548, 0.00019982871890533715, 0.008366525173187256, 6.0937254602322355e-05, 4.2742114601423964e-05, 0.007785599213093519, 0.08365937322378159, 0.00018044748867396265, 0.0010769428918138146, 0.24167977273464203, 0.00015236152103170753], "target_probs": 0.8072996139526367}}


{"result": {"time": "2021-02-21 11:29:31.272715", "n_pass": [299, 49, 36], "n_token": 29, "loss": [0.09772798418998718, 0.36789757013320923], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["def safely_reserve_a_username(", "cursor", "gen_usernames", "=", "gen_random_usernames", ",", "reserve", "cursor", "seatbelt", "for", "username", "gen_usernames", "(", "seatbelt", "+=", "seatbelt", ">", "check", "reserve", "check", "username", "cursor", "check", "username", "cursor", ")", "#NEWLINE#", "return", "username"]}}
{"position": {"error_location": 28, "repair_targets": [1, 7, 21, 24], "repair_candidates": [1, 7, 21, 24, 17, 19, 22, 6, 18, 10, 20, 23, 28, 8, 13, 15, 2, 11]}}
{"prediction": {"error_location": 0.906895637512207, "repair_targets": [0.6141310930252075, 0.0002443592238705605, 0.07060462981462479, 0.007208006922155619], "repair_candidates": [0.6141310930252075, 0.1883736103773117, 0.006494154222309589, 0.0002443592238705605, 0.00012595525186043233, 0.07507352530956268, 0.001181605737656355, 0.00980310421437025, 0.000259303575148806, 0.01081811636686325, 9.718988439999521e-05, 7.431899575749412e-05, 0.010954424738883972, 0.07060462981462479, 0.00030474417144432664, 0.004084363579750061, 0.007208006922155619, 0.00016747103654779494], "target_probs": 0.6921880841255188}}


{"result": {"time": "2021-02-21 11:29:31.337404", "n_pass": [301, 50, 37], "n_token": 28, "loss": [0.08642835915088654, 0.31109941005706787], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["def safely_reserve_a_username(", "cursor", "gen_usernames", "=", "gen_random_usernames", ",", "reserve", "cursor", "seatbelt", "for", "username", "gen_usernames", "(", "seatbelt", "+=", "seatbelt", ">", "check", "reserve", "check", "username", "cursor", "check", "username", "cursor", "#NEWLINE#", "return", "username"]}}
{"position": {"error_location": 27, "repair_targets": [1, 7, 21, 24], "repair_candidates": [1, 7, 21, 24, 17, 19, 22, 6, 18, 10, 20, 23, 27, 8, 13, 15, 2, 11]}}
{"prediction": {"error_location": 0.9172011613845825, "repair_targets": [0.587975263595581, 0.00021168951934669167, 0.13677483797073364, 0.007679220288991928], "repair_candidates": [0.587975263595581, 0.15760774910449982, 0.007783446926623583, 0.00021168951934669167, 9.473411046201363e-05, 0.0647810697555542, 0.0011768327094614506, 0.008625532500445843, 0.0002484461001586169, 0.01607142761349678, 0.00024333223700523376, 6.869538628961891e-05, 0.009240582585334778, 0.13677483797073364, 0.000403751153498888, 0.0008827709825709462, 0.007679220288991928, 0.00013063871301710606], "target_probs": 0.7326410412788391}}


{"result": {"time": "2021-02-21 11:29:31.401074", "n_pass": [302, 51, 38], "n_token": 27, "loss": [0.005781001411378384, 0.34332194924354553], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["def safely_reserve_a_username(", "cursor", "gen_usernames", "=", "gen_random_usernames", ",", "reserve", "cursor", "seatbelt", "for", "username", "gen_usernames", "(", "seatbelt", "+=", "seatbelt", ">", "check", "reserve", "check", "username", "cursor", "check", "username", "cursor", "return", "username"]}}
{"position": {"error_location": 26, "repair_targets": [1, 7, 21, 24], "repair_candidates": [1, 7, 21, 24, 17, 19, 22, 6, 18, 10, 20, 23, 26, 8, 13, 15, 2, 11]}}
{"prediction": {"error_location": 0.9942355751991272, "repair_targets": [0.620757520198822, 0.00033636970329098403, 0.07907918840646744, 0.009236715734004974], "repair_candidates": [0.620757520198822, 0.14906704425811768, 0.012731566093862057, 0.00033636970329098403, 0.00012504665937740356, 0.08424301445484161, 0.0026929087471216917, 0.006064323242753744, 0.0003070819075219333, 0.01340737659484148, 0.0002700039476621896, 0.00013926091196481138, 0.020970461890101433, 0.07907918840646744, 0.00018325797282159328, 0.0002599694998934865, 0.009236715734004974, 0.00012878091365564615], "target_probs": 0.709409773349762}}


{"result": {"time": "2021-02-21 11:29:31.781899", "n_pass": [314, 57, 39], "n_token": 26, "loss": [0.010683602653443813, 0.23414810001850128], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["def safely_reserve_a_username(", "cursor", "gen_usernames", "=", "gen_random_usernames", ",", "reserve", "cursor", "seatbelt", "username", "gen_usernames", "(", "seatbelt", "+=", "seatbelt", ">", "check", "reserve", "check", "username", "cursor", "check", "username", "cursor", "return", "username"]}}
{"position": {"error_location": 25, "repair_targets": [1, 7, 20, 23], "repair_candidates": [1, 7, 20, 23, 16, 18, 21, 6, 17, 9, 19, 22, 25, 8, 12, 14, 2, 10]}}
{"prediction": {"error_location": 0.9893732666969299, "repair_targets": [0.6790317893028259, 0.0012329182354733348, 0.09946513175964355, 0.011514787562191486], "repair_candidates": [0.6790317893028259, 0.14450788497924805, 0.002818027976900339, 0.0012329182354733348, 0.0001478994672652334, 0.01101985014975071, 0.01038415264338255, 0.0009602383361198008, 9.908509673550725e-05, 0.012716940604150295, 0.0001590691681485623, 0.00013248874165583402, 0.025240173563361168, 0.09946513175964355, 0.00015409912157338113, 0.0002593726967461407, 0.011514787562191486, 0.00015612241986673325], "target_probs": 0.791244626045227}}


{"result": {"time": "2021-02-21 11:29:31.845042", "n_pass": [317, 58, 40], "n_token": 25, "loss": [0.00241869012825191, 0.6849579811096191], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["def safely_reserve_a_username(", "cursor", "gen_usernames", "=", "gen_random_usernames", ",", "reserve", "cursor", "seatbelt", "username", "gen_usernames", "seatbelt", "+=", "seatbelt", ">", "check", "reserve", "check", "username", "cursor", "check", "username", "cursor", "return", "username"]}}
{"position": {"error_location": 24, "repair_targets": [1, 7, 19, 22], "repair_candidates": [1, 7, 19, 22, 15, 17, 20, 6, 16, 9, 18, 21, 24, 8, 11, 13, 2, 10]}}
{"prediction": {"error_location": 0.9975842237472534, "repair_targets": [0.42944180965423584, 0.0004968275316059589, 0.0675899013876915, 0.00658287713304162], "repair_candidates": [0.42944180965423584, 0.08944601565599442, 0.0015505868941545486, 0.0004968275316059589, 9.854273230303079e-05, 0.025600293651223183, 0.24142494797706604, 0.09964152425527573, 7.310248474823311e-05, 0.013869506306946278, 0.00018800538964569569, 0.00011196702689630911, 0.023442020639777184, 0.0675899013876915, 0.00014465890126302838, 0.00019890903786290437, 0.00658287713304162, 9.850694186752662e-05], "target_probs": 0.5041114091873169}}


{"result": {"time": "2021-02-21 11:29:31.909541", "n_pass": [319, 59, 41], "n_token": 24, "loss": [0.004687985870987177, 0.25013211369514465], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["def safely_reserve_a_username(", "cursor", "gen_usernames", "=", "gen_random_usernames", ",", "reserve", "cursor", "seatbelt", "username", "gen_usernames", "seatbelt", "seatbelt", ">", "check", "reserve", "check", "username", "cursor", "check", "username", "cursor", "return", "username"]}}
{"position": {"error_location": 23, "repair_targets": [1, 7, 18, 21], "repair_candidates": [1, 7, 18, 21, 14, 16, 19, 6, 15, 9, 17, 20, 23, 8, 11, 12, 2, 10]}}
{"prediction": {"error_location": 0.9953230023384094, "repair_targets": [0.6410486102104187, 0.000551594072021544, 0.12682309746742249, 0.01027462538331747], "repair_candidates": [0.6410486102104187, 0.14270228147506714, 0.005745982751250267, 0.000551594072021544, 0.00010974836914101616, 0.013529840856790543, 0.011326850391924381, 0.0004362874897196889, 4.24448553530965e-05, 0.011804706417024136, 0.0003085426869802177, 0.00015183976211119443, 0.03437112271785736, 0.12682309746742249, 0.0002744670200627297, 0.0003231055161450058, 0.01027462538331747, 0.0001747914939187467], "target_probs": 0.7786979079246521}}


{"result": {"time": "2021-02-21 11:29:31.971159", "n_pass": [321, 60, 42], "n_token": 23, "loss": [0.0033753111492842436, 0.4307903051376343], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["def safely_reserve_a_username(", "cursor", "gen_usernames", "=", "gen_random_usernames", ",", "reserve", "cursor", "seatbelt", "username", "gen_usernames", "seatbelt", "seatbelt", "check", "reserve", "check", "username", "cursor", "check", "username", "cursor", "return", "username"]}}
{"position": {"error_location": 22, "repair_targets": [1, 7, 17, 20], "repair_candidates": [1, 7, 17, 20, 13, 15, 18, 6, 14, 9, 16, 19, 22, 8, 11, 12, 2, 10]}}
{"prediction": {"error_location": 0.9966304898262024, "repair_targets": [0.4967018663883209, 0.0011642065364867449, 0.13661964237689972, 0.015509485267102718], "repair_candidates": [0.4967018663883209, 0.07122661173343658, 0.0035666567273437977, 0.0011642065364867449, 0.00023199991846922785, 0.04502489045262337, 0.029992129653692245, 0.0007228729664348066, 0.0023941746912896633, 0.14810645580291748, 0.020911401137709618, 0.0006082418840378523, 0.026028119027614594, 0.13661964237689972, 0.0004023842921014875, 0.0005586041370406747, 0.015509485267102718, 0.00023022849927656353], "target_probs": 0.6499952077865601}}


{"result": {"time": "2021-02-21 11:29:32.278359", "n_pass": [337, 65, 43], "n_token": 22, "loss": [0.0020256969146430492, 0.5521646738052368], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["def safely_reserve_a_username(", "cursor", "gen_usernames", "=", "gen_random_usernames", "reserve", "cursor", "seatbelt", "username", "gen_usernames", "seatbelt", "seatbelt", "check", "reserve", "check", "username", "cursor", "check", "username", "cursor", "return", "username"]}}
{"position": {"error_location": 21, "repair_targets": [1, 6, 16, 19], "repair_candidates": [1, 6, 16, 19, 12, 14, 17, 5, 13, 8, 15, 18, 21, 7, 10, 11, 2, 9]}}
{"prediction": {"error_location": 0.9979763627052307, "repair_targets": [0.30021530389785767, 5.984773451928049e-05, 0.25062018632888794, 0.024806901812553406], "repair_candidates": [0.30021530389785767, 0.16631120443344116, 0.00019529604469425976, 5.984773451928049e-05, 6.040318476152606e-05, 0.06992220878601074, 0.034270934760570526, 0.0009204673697240651, 0.002946938620880246, 0.08773566782474518, 0.008276359178125858, 0.0006571367848664522, 0.05151661857962608, 0.25062018632888794, 0.0005589338834397495, 0.0006843311130069196, 0.024806901812553406, 0.00024122353352140635], "target_probs": 0.5757022500038147}}


{"result": {"time": "2021-02-21 11:29:32.399827", "n_pass": [355, 67, 44], "n_token": 21, "loss": [0.030980519950389862, 0.5096773505210876], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["cursor", "gen_usernames", "=", "gen_random_usernames", "reserve", "cursor", "seatbelt", "username", "gen_usernames", "seatbelt", "seatbelt", "check", "reserve", "check", "username", "cursor", "check", "username", "cursor", "return", "username"]}}
{"position": {"error_location": 20, "repair_targets": [0, 5, 15, 18], "repair_candidates": [0, 5, 15, 18, 11, 13, 16, 4, 12, 7, 14, 17, 20, 6, 9, 10, 1, 8]}}
{"prediction": {"error_location": 0.9694944620132446, "repair_targets": [0.05577872693538666, 6.065530396881513e-05, 0.5331786274909973, 0.011671346612274647], "repair_candidates": [0.05577872693538666, 0.20855839550495148, 8.098281978163868e-05, 6.065530396881513e-05, 4.301839362597093e-05, 0.021128496155142784, 0.002798239467665553, 0.0001707675401121378, 0.0018673217855393887, 0.09534717351198196, 0.004318412858992815, 0.00034334269003011286, 0.06326443701982498, 0.5331786274909973, 0.0006596848252229393, 0.0005818087956868112, 0.011671346612274647, 0.00014855059271212667], "target_probs": 0.6006893515586853}}


{"result": {"time": "2021-02-21 11:29:32.460142", "n_pass": [358, 68, 45], "n_token": 20, "loss": [0.007475025020539761, 0.4950922727584839], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["cursor", "gen_usernames", "gen_random_usernames", "reserve", "cursor", "seatbelt", "username", "gen_usernames", "seatbelt", "seatbelt", "check", "reserve", "check", "username", "cursor", "check", "username", "cursor", "return", "username"]}}
{"position": {"error_location": 19, "repair_targets": [0, 4, 14, 17], "repair_candidates": [0, 4, 14, 17, 10, 12, 15, 3, 11, 6, 13, 16, 19, 5, 8, 9, 1, 7]}}
{"prediction": {"error_location": 0.9925529360771179, "repair_targets": [0.15854348242282867, 0.0010708480840548873, 0.4335901439189911, 0.016310157254338264], "repair_candidates": [0.15854348242282867, 0.14753247797489166, 0.0012705931439995766, 0.0010708480840548873, 0.00015541473112534732, 0.015341268852353096, 0.00401307363063097, 0.0004992299946025014, 0.00517680961638689, 0.15120570361614227, 0.015134143643081188, 0.0012234373716637492, 0.04511451721191406, 0.4335901439189911, 0.0018252467270940542, 0.001541201607324183, 0.016310157254338264, 0.0004521828086581081], "target_probs": 0.6095146536827087}}


{"result": {"time": "2021-02-21 11:29:32.519895", "n_pass": [359, 69, 46], "n_token": 19, "loss": [0.009735722094774246, 0.45969802141189575], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["cursor", "gen_usernames", "reserve", "cursor", "seatbelt", "username", "gen_usernames", "seatbelt", "seatbelt", "check", "reserve", "check", "username", "cursor", "check", "username", "cursor", "return", "username"]}}
{"position": {"error_location": 18, "repair_targets": [0, 3, 13, 16], "repair_candidates": [0, 3, 13, 16, 9, 11, 14, 2, 10, 5, 12, 15, 18, 4, 7, 8, 1, 6]}}
{"prediction": {"error_location": 0.9903115034103394, "repair_targets": [0.16573968529701233, 0.003544207662343979, 0.4364791512489319, 0.025711262598633766], "repair_candidates": [0.16573968529701233, 0.048641499131917953, 0.004449241328984499, 0.003544207662343979, 0.0004105955013073981, 0.01957441121339798, 0.00998895987868309, 0.0013066804967820644, 0.011231280863285065, 0.1843308061361313, 0.015181835740804672, 0.001801845384761691, 0.06681825965642929, 0.4364791512489319, 0.0022793628741055727, 0.001712486264295876, 0.025711262598633766, 0.000798371562268585], "target_probs": 0.6314743161201477}}




Minimal simplified tokens:

['cursor', 'gen_usernames', 'reserve', 'cursor', 'seatbelt', 'username', 'gen_usernames', 'seatbelt', 'seatbelt', 'check', 'reserve', 'check', 'username', 'cursor', 'check', 'username', 'cursor', 'return', 'username']
