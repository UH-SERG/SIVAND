
Original sample:

{"has_bug": true, "bug_kind": 1, "bug_kind_name": "VARIABLE_MISUSE", "source_tokens": ["#NEWLINE#", "def clause_is_present(", "clause", ",", "search", ")", ":", "#NEWLINE#", "#INDENT#", "'Given a target clause and a second to search within, return True\\n    if the target is plainly present in the search without any\\n    subqueries or aliases involved.\\n\\n    Basically descends through Joins.\\n\\n    '", "#NEWLINE#", "for", "elem", "in", "surface_selectables", "(", "search", ")", ":", "#NEWLINE#", "#INDENT#", "if", "(", "search", "==", "elem", ")", ":", "#NEWLINE#", "#INDENT#", "return", "True", "#NEWLINE#", "#UNINDENT#", "#UNINDENT#", "else", ":", "#NEWLINE#", "#INDENT#", "return", "False"], "error_location": [23], "repair_targets": [2], "repair_candidates": [4, 16, 23, 2, 12, 25], "provenances": [{"datasetProvenance": {"datasetName": "ETHPy150Open", "filepath": "goFrendiAsgard/kokoropy/kokoropy/packages/sqlalchemy/sql/util.py", "license": "mit", "note": "license: bigquery_api"}}], "txt_file": "eval__VARIABLE_MISUSE__SStuB.txt-00000-of-00300", "js_count": 1631, "results": {"model": "rnn", "prob": {"loc": [[0.24999535083770752, 2.808989847835619e-06, 2.59211865341058e-05, 3.7827142023161286e-06, 1.2380766747810412e-05, 8.117368111015821e-08, 4.6461757108318125e-08, 2.6473149773664773e-05, 1.3920599428729474e-07, 8.186273703358893e-07, 1.9781775790761458e-06, 1.9963572128745e-07, 3.6336035691419966e-07, 2.811450094952761e-08, 2.8498514438979328e-05, 2.0934310214215657e-06, 0.660886287689209, 2.0844740902248304e-06, 1.9814184781807853e-07, 1.090025534722372e-06, 1.7353793282381957e-06, 7.720159089785739e-08, 2.4294390641443897e-06, 0.029500804841518402, 1.2840821455029072e-06, 0.05937473475933075, 3.567803787518642e-06, 1.160824126600346e-06, 3.8677262637065724e-07, 4.1599463429520256e-08, 6.902760105731431e-06, 3.613429726101458e-05, 1.27090993373713e-06, 5.163855689716002e-07, 4.160476237302646e-05, 1.1974380242918414e-07, 4.996655661670957e-06, 6.80676635056443e-07, 5.764958999066039e-08, 7.213783646875527e-06, 2.35949810303282e-05]], "pointer": [[0.0, 0.0, 0.9994444251060486, 0.0, 0.00012135550059610978, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0004282804438844323, 0.0, 0.0, 0.0, 2.1509226826310623e-06, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.1396738273106166e-06, 0.0, 2.5563599592715036e-06, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]], "target": [0.9994444251060486]}, "loss": [3.5233376026153564, 0.0005557292606681585], "acc": [0.0, 0.0, 1.0, 0.0]}, "wrong_error_location": [16]}


Trace of simplified code(s):

{"result": {"time": "2021-02-21 11:27:23.368456", "n_pass": [1, 1, 1], "n_token": 41, "loss": [0.41417330503463745, 0.0005557292606681585], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def clause_is_present(", "clause", ",", "search", ")", ":", "#NEWLINE#", "#INDENT#", "'Given a target clause and a second to search within, return True\\n    if the target is plainly present in the search without any\\n    subqueries or aliases involved.\\n\\n    Basically descends through Joins.\\n\\n    '", "#NEWLINE#", "for", "elem", "in", "surface_selectables", "(", "search", ")", ":", "#NEWLINE#", "#INDENT#", "if", "(", "search", "==", "elem", ")", ":", "#NEWLINE#", "#INDENT#", "return", "True", "#NEWLINE#", "#UNINDENT#", "#UNINDENT#", "else", ":", "#NEWLINE#", "#INDENT#", "return", "False"]}}
{"position": {"error_location": 16, "repair_targets": [2], "repair_candidates": [4, 16, 23, 2, 12, 25]}}
{"prediction": {"error_location": 0.660886287689209, "repair_targets": [0.9994444251060486], "repair_candidates": [0.9994444251060486, 0.00012135550059610978, 0.0004282804438844323, 2.1509226826310623e-06, 1.1396738273106166e-06, 2.5563599592715036e-06], "target_probs": 0.9994444251060486}}


{"result": {"time": "2021-02-21 11:27:23.432262", "n_pass": [11, 2, 2], "n_token": 30, "loss": [0.3306773900985718, 0.0004035452438984066], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def clause_is_present(", "clause", ",", "search", ")", ":", "#NEWLINE#", "#INDENT#", "'Given a target clause and a second to search within, return True\\n    if the target is plainly present in the search without any\\n    subqueries or aliases involved.\\n\\n    Basically descends through Joins.\\n\\n    '", "#NEWLINE#", "for", "elem", "in", "surface_selectables", "(", "search", ")", ":", "#NEWLINE#", "#INDENT#", "if", "(", "search", "==", "elem", ")", ":", "#NEWLINE#", "#INDENT#"]}}
{"position": {"error_location": 16, "repair_targets": [2], "repair_candidates": [4, 16, 23, 2, 12, 25]}}
{"prediction": {"error_location": 0.7184367775917053, "repair_targets": [0.9995965361595154], "repair_candidates": [0.9995965361595154, 0.00010795007256092504, 0.00029185350285843015, 1.5740696426291834e-06, 7.030979531919002e-07, 1.358624103886541e-06], "target_probs": 0.9995965361595154}}


{"result": {"time": "2021-02-21 11:27:23.493340", "n_pass": [21, 3, 3], "n_token": 25, "loss": [0.13171450793743134, 0.0010297830449417233], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def clause_is_present(", "clause", ",", "search", "#NEWLINE#", "for", "elem", "in", "surface_selectables", "(", "search", ")", ":", "#NEWLINE#", "#INDENT#", "if", "(", "search", "==", "elem", ")", ":", "#NEWLINE#", "#INDENT#"]}}
{"position": {"error_location": 11, "repair_targets": [2], "repair_candidates": [4, 11, 18, 2, 7, 20]}}
{"prediction": {"error_location": 0.8765912055969238, "repair_targets": [0.9989707469940186], "repair_candidates": [0.9989707469940186, 0.00035964828566648066, 0.0006614045123569667, 3.51081735061598e-06, 2.174973587898421e-06, 2.635465762068634e-06], "target_probs": 0.9989707469940186}}


{"result": {"time": "2021-02-21 11:27:23.672646", "n_pass": [43, 6, 4], "n_token": 22, "loss": [0.10643651336431503, 0.0007337042479775846], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def clause_is_present(", "clause", ",", "search", "#NEWLINE#", "for", "elem", "in", "surface_selectables", "(", "search", ")", ":", "#NEWLINE#", "#INDENT#", "if", "(", "search", "==", "elem", ")"]}}
{"position": {"error_location": 11, "repair_targets": [2], "repair_candidates": [4, 11, 18, 2, 7, 20]}}
{"prediction": {"error_location": 0.8990319967269897, "repair_targets": [0.9992665648460388], "repair_candidates": [0.9992665648460388, 0.0002888102608267218, 0.0004386822984088212, 2.859498408724903e-06, 1.4277918580773985e-06, 1.6100149196063285e-06], "target_probs": 0.9992665648460388}}


{"result": {"time": "2021-02-21 11:27:23.909479", "n_pass": [71, 10, 5], "n_token": 21, "loss": [0.6022758483886719, 0.0316610261797905], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["def clause_is_present(", "clause", ",", "search", "#NEWLINE#", "for", "elem", "in", "surface_selectables", "(", "search", ")", ":", "#NEWLINE#", "#INDENT#", "if", "(", "search", "==", "elem", ")"]}}
{"position": {"error_location": 10, "repair_targets": [1], "repair_candidates": [3, 10, 17, 1, 6, 19]}}
{"prediction": {"error_location": 0.5475640296936035, "repair_targets": [0.9688349366188049], "repair_candidates": [0.9688349366188049, 0.01915692538022995, 0.011801901273429394, 4.858379907091148e-05, 7.293667295016348e-05, 8.46625043777749e-05], "target_probs": 0.9688349366188049}}


{"result": {"time": "2021-02-21 11:27:24.025724", "n_pass": [75, 12, 6], "n_token": 20, "loss": [0.7307003140449524, 0.10486045479774475], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["def clause_is_present(", "clause", ",", "search", "for", "elem", "in", "surface_selectables", "(", "search", ")", ":", "#NEWLINE#", "#INDENT#", "if", "(", "search", "==", "elem", ")"]}}
{"position": {"error_location": 9, "repair_targets": [1], "repair_candidates": [3, 9, 16, 1, 5, 18]}}
{"prediction": {"error_location": 0.48157164454460144, "repair_targets": [0.9004501700401306], "repair_candidates": [0.9004501700401306, 0.05039865896105766, 0.049070071429014206, 1.5872954463702627e-05, 2.3888100258773193e-05, 4.123480539419688e-05], "target_probs": 0.9004501700401306}}


{"result": {"time": "2021-02-21 11:27:24.201254", "n_pass": [79, 15, 7], "n_token": 19, "loss": [0.8105461597442627, 0.15785719454288483], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["def clause_is_present(", "clause", ",", "search", "for", "elem", "in", "(", "search", ")", ":", "#NEWLINE#", "#INDENT#", "if", "(", "search", "==", "elem", ")"]}}
{"position": {"error_location": 8, "repair_targets": [1], "repair_candidates": [3, 8, 15, 1, 5, 17]}}
{"prediction": {"error_location": 0.4446151852607727, "repair_targets": [0.8539717197418213], "repair_candidates": [0.8539717197418213, 0.0682898536324501, 0.0775260254740715, 3.21029219776392e-05, 0.00010423013009130955, 7.603874837514013e-05], "target_probs": 0.8539717197418213}}


{"result": {"time": "2021-02-21 11:27:24.315066", "n_pass": [82, 17, 8], "n_token": 18, "loss": [0.694392740726471, 0.16440480947494507], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["def clause_is_present(", "clause", ",", "search", "for", "elem", "in", "(", "search", ":", "#NEWLINE#", "#INDENT#", "if", "(", "search", "==", "elem", ")"]}}
{"position": {"error_location": 8, "repair_targets": [1], "repair_candidates": [3, 8, 14, 1, 5, 16]}}
{"prediction": {"error_location": 0.49937760829925537, "repair_targets": [0.8483985066413879], "repair_candidates": [0.8483985066413879, 0.0733020082116127, 0.07814609259366989, 1.9351211449247785e-05, 7.235562225105241e-05, 6.162436329759657e-05], "target_probs": 0.8483985066413879}}


{"result": {"time": "2021-02-21 11:27:24.372607", "n_pass": [83, 18, 9], "n_token": 17, "loss": [0.7166314721107483, 0.17199677228927612], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["def clause_is_present(", "clause", ",", "search", "for", "elem", "in", "(", "search", "#NEWLINE#", "#INDENT#", "if", "(", "search", "==", "elem", ")"]}}
{"position": {"error_location": 8, "repair_targets": [1], "repair_candidates": [3, 8, 13, 1, 5, 15]}}
{"prediction": {"error_location": 0.4883945882320404, "repair_targets": [0.8419818878173828], "repair_candidates": [0.8419818878173828, 0.06879677623510361, 0.08910202234983444, 1.9162975149811246e-05, 4.6787739847786725e-05, 5.342950316844508e-05], "target_probs": 0.8419818878173828}}


{"result": {"time": "2021-02-21 11:27:24.428467", "n_pass": [84, 19, 10], "n_token": 15, "loss": [0.9665037393569946, 0.15115761756896973], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["def clause_is_present(", "clause", ",", "search", "for", "elem", "in", "(", "search", "if", "(", "search", "==", "elem", ")"]}}
{"position": {"error_location": 8, "repair_targets": [1], "repair_candidates": [3, 8, 11, 1, 5, 13]}}
{"prediction": {"error_location": 0.38041073083877563, "repair_targets": [0.8597121834754944], "repair_candidates": [0.8597121834754944, 0.06107021123170853, 0.07906147092580795, 1.723521745589096e-05, 6.134939758339897e-05, 7.7584118116647e-05], "target_probs": 0.8597121834754944}}


{"result": {"time": "2021-02-21 11:27:24.816091", "n_pass": [104, 26, 11], "n_token": 14, "loss": [0.8804412484169006, 0.1604943871498108], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["def clause_is_present(", "clause", ",", "search", "for", "elem", "in", "(", "search", "if", "(", "search", "elem", ")"]}}
{"position": {"error_location": 8, "repair_targets": [1], "repair_candidates": [3, 8, 11, 1, 5, 12]}}
{"prediction": {"error_location": 0.4145999848842621, "repair_targets": [0.8517225980758667], "repair_candidates": [0.8517225980758667, 0.06900332868099213, 0.07783831655979156, 2.3750433683744632e-05, 0.0010025158990174532, 0.0004095012554898858], "target_probs": 0.8517225980758667}}


{"result": {"time": "2021-02-21 11:27:24.873002", "n_pass": [106, 27, 12], "n_token": 13, "loss": [0.8984622955322266, 0.21042393147945404], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["def clause_is_present(", "clause", ",", "search", "for", "elem", "in", "(", "search", "if", "(", "search", "elem"]}}
{"position": {"error_location": 8, "repair_targets": [1], "repair_candidates": [3, 8, 11, 1, 5, 12]}}
{"prediction": {"error_location": 0.4071952700614929, "repair_targets": [0.8102406859397888], "repair_candidates": [0.8102406859397888, 0.07459048926830292, 0.1145307645201683, 1.7028472939273342e-05, 0.00023362325737252831, 0.0003875503607559949], "target_probs": 0.8102406859397888}}


{"result": {"time": "2021-02-21 11:27:25.143337", "n_pass": [114, 32, 13], "n_token": 12, "loss": [0.6904521584510803, 0.4523705542087555], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["def clause_is_present(", "clause", ",", "search", "for", "elem", "in", "search", "if", "(", "search", "elem"]}}
{"position": {"error_location": 7, "repair_targets": [1], "repair_candidates": [3, 7, 10, 1, 5, 11]}}
{"prediction": {"error_location": 0.5013493299484253, "repair_targets": [0.6361184120178223], "repair_candidates": [0.6361184120178223, 0.08377190679311752, 0.27948805689811707, 0.00013290568313095719, 0.0002451842010486871, 0.00024358525115530938], "target_probs": 0.6361184120178223}}




Minimal simplified tokens:

['def clause_is_present(', 'clause', ',', 'search', 'for', 'elem', 'in', 'search', 'if', '(', 'search', 'elem']
