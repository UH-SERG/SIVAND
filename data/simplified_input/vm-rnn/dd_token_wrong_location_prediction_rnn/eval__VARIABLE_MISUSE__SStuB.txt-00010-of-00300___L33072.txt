
Original sample:

{"has_bug": true, "bug_kind": 1, "bug_kind_name": "VARIABLE_MISUSE", "source_tokens": ["#NEWLINE#", "def test_badcmd(", "self", ")", ":", "#NEWLINE#", "#INDENT#", "logging", ".", "debug", "(", "''", ")", "#NEWLINE#", "logging", ".", "debug", "(", "'test_badcmd'", ")", "#NEWLINE#", "extcode", "=", "set_as_top", "(", "ExternalCode", "(", ")", ")", "#NEWLINE#", "extcode", ".", "command", "=", "[", "'no-such-command'", "]", "#NEWLINE#", "try", ":", "#NEWLINE#", "#INDENT#", "extcode", ".", "run", "(", ")", "#NEWLINE#", "#UNINDENT#", "except", "ValueError", "as", "exc", ":", "#NEWLINE#", "#INDENT#", "msg", "=", "\": The command to be executed, 'no-such-command', cannot be found\"", "#NEWLINE#", "self", ".", "assertEqual", "(", "str", "(", "extcode", ")", ",", "msg", ")", "#NEWLINE#", "self", ".", "assertEqual", "(", "extcode", ".", "return_code", ",", "(", "-", "999999", ")", ")", "#NEWLINE#", "#UNINDENT#", "else", ":", "#NEWLINE#", "#INDENT#", "self", ".", "fail", "(", "'Expected OSError'", ")"], "error_location": [66], "repair_targets": [52], "repair_candidates": [52, 2, 60, 72, 91, 56, 69, 21, 30, 42, 66, 76], "provenances": [{"datasetProvenance": {"datasetName": "ETHPy150Open", "filepath": "OpenMDAO/OpenMDAO-Framework/openmdao.lib/src/openmdao/lib/components/test/test_extcode.py", "license": "apache-2.0", "note": "license: manual_eval"}}], "txt_file": "eval__VARIABLE_MISUSE__SStuB.txt-00010-of-00300", "js_count": 33072, "results": {"model": "rnn", "prob": {"loc": [[0.003896798240020871, 1.401131726197491e-07, 2.1612910572343935e-08, 2.0007420720169478e-10, 9.585595511785172e-11, 2.6718012247073375e-09, 2.2481391748208068e-10, 2.2020842094239157e-10, 5.548830839252616e-10, 4.272570630625694e-10, 1.2648480041121957e-09, 2.3019628425657856e-09, 5.727743834782473e-10, 5.86205572972176e-09, 7.96724519691594e-10, 9.61737467441992e-10, 1.9995975708564373e-10, 6.709067745802599e-10, 2.9493488540310864e-08, 3.327105604911118e-11, 8.669470141775548e-10, 1.1186520598727157e-09, 4.693574973124726e-10, 1.4209661891584346e-08, 1.6340298558681354e-10, 7.716263183965566e-09, 4.360403704772864e-11, 1.501482715937641e-09, 7.354746672794121e-11, 7.87143572544835e-10, 2.083254679874358e-09, 2.520794961657913e-10, 1.5032040889817466e-10, 4.5967393780266264e-10, 1.2964197493303686e-09, 2.603290361058441e-10, 3.626844102821991e-10, 2.739891646896808e-09, 6.107944816591271e-09, 4.541470532970493e-10, 2.3665067683253938e-09, 1.7261633233900397e-09, 6.747056247036198e-09, 6.905447325067371e-10, 3.1829752722423166e-10, 6.037922384294347e-10, 1.3990367753180522e-09, 2.528423692638171e-09, 1.7187199219392824e-08, 1.1135902866499237e-08, 6.615281655797389e-09, 3.8843811722699684e-08, 6.315272305101871e-09, 1.6609978947812465e-09, 1.8113178512635386e-08, 2.5345172627311285e-09, 9.540720924405832e-08, 1.3826380040882214e-08, 1.1417565559668219e-08, 2.199316284645647e-08, 1.7585581701951014e-07, 1.0756289192670465e-09, 1.370110513931877e-08, 7.215528174953079e-09, 3.685686635890306e-07, 3.058495678942563e-08, 0.0393417589366436, 1.1257358067950918e-07, 1.4535316950059496e-08, 0.004370944574475288, 3.880188170768406e-09, 1.672436766853025e-08, 7.73235910855874e-07, 3.645836299526195e-09, 5.6318548047329386e-08, 3.293415647931397e-05, 0.9523519277572632, 1.7233098503766087e-07, 1.6934950508584734e-07, 2.243179253458294e-10, 2.1022078300347857e-08, 1.531733886395159e-07, 2.1583189209195552e-06, 2.041341096159499e-09, 8.739781676148084e-10, 1.8190028372444544e-09, 3.4146161453918467e-08, 1.655185211113519e-09, 1.576446173601198e-08, 3.325301989320906e-08, 8.032796650070395e-10, 7.298460218407854e-07, 1.7603020430190242e-10, 1.5873132808152945e-09, 1.28594568327145e-09, 9.68090607678107e-10, 8.750974944682355e-10]], "pointer": [[0.0, 0.0, 8.172578418452758e-06, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 2.2791349692852236e-05, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 4.963693299941951e-06, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 5.393515039031627e-07, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.9997476935386658, 0.0, 0.0, 0.0, 0.0002104160957969725, 0.0, 0.0, 0.0, 4.39862878920394e-06, 0.0, 0.0, 0.0, 0.0, 0.0, 1.1282816103630466e-07, 0.0, 0.0, 4.2925265120175027e-07, 0.0, 0.0, 1.0945075068491406e-08, 0.0, 0.0, 0.0, 4.498259045249142e-07, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 2.164607160182186e-08, 0.0, 0.0, 0.0, 0.0, 0.0]], "target": [0.9997476935386658]}, "loss": [3.235468864440918, 0.0002523383009247482], "acc": [0.0, 0.0, 1.0, 0.0]}, "wrong_error_location": [76]}


Trace of simplified code(s):

{"result": {"time": "2021-02-21 12:36:47.023631", "n_pass": [1, 1, 1], "n_token": 97, "loss": [0.04882065951824188, 0.0002523383009247482], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def test_badcmd(", "self", ")", ":", "#NEWLINE#", "#INDENT#", "logging", ".", "debug", "(", "''", ")", "#NEWLINE#", "logging", ".", "debug", "(", "'test_badcmd'", ")", "#NEWLINE#", "extcode", "=", "set_as_top", "(", "ExternalCode", "(", ")", ")", "#NEWLINE#", "extcode", ".", "command", "=", "[", "'no-such-command'", "]", "#NEWLINE#", "try", ":", "#NEWLINE#", "#INDENT#", "extcode", ".", "run", "(", ")", "#NEWLINE#", "#UNINDENT#", "except", "ValueError", "as", "exc", ":", "#NEWLINE#", "#INDENT#", "msg", "=", "\": The command to be executed, 'no-such-command', cannot be found\"", "#NEWLINE#", "self", ".", "assertEqual", "(", "str", "(", "extcode", ")", ",", "msg", ")", "#NEWLINE#", "self", ".", "assertEqual", "(", "extcode", ".", "return_code", ",", "(", "-", "999999", ")", ")", "#NEWLINE#", "#UNINDENT#", "else", ":", "#NEWLINE#", "#INDENT#", "self", ".", "fail", "(", "'Expected OSError'", ")"]}}
{"position": {"error_location": 76, "repair_targets": [52], "repair_candidates": [52, 2, 60, 72, 91, 56, 69, 21, 30, 42, 66, 76]}}
{"prediction": {"error_location": 0.9523519277572632, "repair_targets": [0.9997476935386658], "repair_candidates": [8.172578418452758e-06, 2.2791349692852236e-05, 4.963693299941951e-06, 5.393515039031627e-07, 0.9997476935386658, 0.0002104160957969725, 4.39862878920394e-06, 1.1282816103630466e-07, 4.2925265120175027e-07, 1.0945075068491406e-08, 4.498259045249142e-07, 2.164607160182186e-08], "target_probs": 0.9997476935386658}}


{"result": {"time": "2021-02-21 12:36:47.125566", "n_pass": [45, 2, 2], "n_token": 91, "loss": [0.060997944325208664, 0.0002479264512658119], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def test_badcmd(", "self", ")", ":", "#NEWLINE#", ")", "#NEWLINE#", "logging", ".", "debug", "(", "'test_badcmd'", ")", "#NEWLINE#", "extcode", "=", "set_as_top", "(", "ExternalCode", "(", ")", ")", "#NEWLINE#", "extcode", ".", "command", "=", "[", "'no-such-command'", "]", "#NEWLINE#", "try", ":", "#NEWLINE#", "#INDENT#", "extcode", ".", "run", "(", ")", "#NEWLINE#", "#UNINDENT#", "except", "ValueError", "as", "exc", ":", "#NEWLINE#", "#INDENT#", "msg", "=", "\": The command to be executed, 'no-such-command', cannot be found\"", "#NEWLINE#", "self", ".", "assertEqual", "(", "str", "(", "extcode", ")", ",", "msg", ")", "#NEWLINE#", "self", ".", "assertEqual", "(", "extcode", ".", "return_code", ",", "(", "-", "999999", ")", ")", "#NEWLINE#", "#UNINDENT#", "else", ":", "#NEWLINE#", "#INDENT#", "self", ".", "fail", "(", "'Expected OSError'", ")"]}}
{"position": {"error_location": 70, "repair_targets": [46], "repair_candidates": [46, 2, 54, 66, 85, 50, 63, 15, 24, 36, 60, 70]}}
{"prediction": {"error_location": 0.9408251643180847, "repair_targets": [0.9997521042823792], "repair_candidates": [8.114101319733891e-07, 3.504142296151258e-05, 4.7118387556110974e-06, 3.3371864560649556e-07, 0.9997521042823792, 0.00020260865858290344, 3.6670476220024284e-06, 6.792564022362058e-08, 3.9792760730961163e-07, 7.842085203435545e-09, 3.3523920706102217e-07, 2.4871139814308663e-08], "target_probs": 0.9997521042823792}}


{"result": {"time": "2021-02-21 12:36:47.220118", "n_pass": [46, 3, 3], "n_token": 85, "loss": [0.06150800734758377, 0.00034815171966329217], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def test_badcmd(", "self", ")", ":", "#NEWLINE#", "'test_badcmd'", ")", "#NEWLINE#", "extcode", "=", "set_as_top", "(", "ExternalCode", "(", ")", ")", "#NEWLINE#", "extcode", ".", "command", "=", "[", "'no-such-command'", "]", "#NEWLINE#", "try", ":", "#NEWLINE#", "#INDENT#", "extcode", ".", "run", "(", ")", "#NEWLINE#", "#UNINDENT#", "except", "ValueError", "as", "exc", ":", "#NEWLINE#", "#INDENT#", "msg", "=", "\": The command to be executed, 'no-such-command', cannot be found\"", "#NEWLINE#", "self", ".", "assertEqual", "(", "str", "(", "extcode", ")", ",", "msg", ")", "#NEWLINE#", "self", ".", "assertEqual", "(", "extcode", ".", "return_code", ",", "(", "-", "999999", ")", ")", "#NEWLINE#", "#UNINDENT#", "else", ":", "#NEWLINE#", "#INDENT#", "self", ".", "fail", "(", "'Expected OSError'", ")"]}}
{"position": {"error_location": 64, "repair_targets": [40], "repair_candidates": [40, 2, 48, 60, 79, 44, 57, 9, 18, 30, 54, 64]}}
{"prediction": {"error_location": 0.9403452277183533, "repair_targets": [0.9996519088745117], "repair_candidates": [6.952168973839434e-07, 1.4086617738939822e-05, 7.130517587938812e-06, 4.0812088286656945e-07, 0.9996519088745117, 0.0003204381500836462, 4.416120191308437e-06, 8.825736586004496e-08, 4.444468686415348e-07, 1.3416218358486276e-08, 3.9563903442285664e-07, 2.5352319354965402e-08], "target_probs": 0.9996519088745117}}


{"result": {"time": "2021-02-21 12:36:47.311504", "n_pass": [48, 4, 4], "n_token": 79, "loss": [0.058727703988552094, 0.00015534176782239228], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def test_badcmd(", "self", ")", ":", "#NEWLINE#", "'test_badcmd'", ")", "#NEWLINE#", "extcode", "=", "set_as_top", "extcode", ".", "command", "=", "[", "'no-such-command'", "]", "#NEWLINE#", "try", ":", "#NEWLINE#", "#INDENT#", "extcode", ".", "run", "(", ")", "#NEWLINE#", "#UNINDENT#", "except", "ValueError", "as", "exc", ":", "#NEWLINE#", "#INDENT#", "msg", "=", "\": The command to be executed, 'no-such-command', cannot be found\"", "#NEWLINE#", "self", ".", "assertEqual", "(", "str", "(", "extcode", ")", ",", "msg", ")", "#NEWLINE#", "self", ".", "assertEqual", "(", "extcode", ".", "return_code", ",", "(", "-", "999999", ")", ")", "#NEWLINE#", "#UNINDENT#", "else", ":", "#NEWLINE#", "#INDENT#", "self", ".", "fail", "(", "'Expected OSError'", ")"]}}
{"position": {"error_location": 58, "repair_targets": [34], "repair_candidates": [34, 2, 42, 54, 73, 38, 51, 9, 12, 24, 48, 58]}}
{"prediction": {"error_location": 0.9429636001586914, "repair_targets": [0.9998446702957153], "repair_candidates": [1.1518317251102417e-06, 8.440023520961404e-06, 3.100923322563176e-07, 4.4156433887110325e-07, 0.9998446702957153, 0.0001354181149508804, 8.358853847312275e-06, 1.1844262814975082e-07, 5.921210686210543e-07, 2.5784050450283758e-08, 4.184348654234782e-07, 5.148429593759829e-08], "target_probs": 0.9998446702957153}}


{"result": {"time": "2021-02-21 12:36:47.399805", "n_pass": [50, 5, 5], "n_token": 73, "loss": [0.038535330444574356, 0.0001673838560236618], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def test_badcmd(", "self", ")", ":", "#NEWLINE#", "'test_badcmd'", ")", "#NEWLINE#", "extcode", "=", "set_as_top", "extcode", ".", "command", "=", "[", "'no-such-command'", "extcode", ".", "run", "(", ")", "#NEWLINE#", "#UNINDENT#", "except", "ValueError", "as", "exc", ":", "#NEWLINE#", "#INDENT#", "msg", "=", "\": The command to be executed, 'no-such-command', cannot be found\"", "#NEWLINE#", "self", ".", "assertEqual", "(", "str", "(", "extcode", ")", ",", "msg", ")", "#NEWLINE#", "self", ".", "assertEqual", "(", "extcode", ".", "return_code", ",", "(", "-", "999999", ")", ")", "#NEWLINE#", "#UNINDENT#", "else", ":", "#NEWLINE#", "#INDENT#", "self", ".", "fail", "(", "'Expected OSError'", ")"]}}
{"position": {"error_location": 52, "repair_targets": [28], "repair_candidates": [28, 2, 36, 48, 67, 32, 45, 9, 12, 18, 42, 52]}}
{"prediction": {"error_location": 0.962197482585907, "repair_targets": [0.9998326301574707], "repair_candidates": [5.733494958803931e-07, 4.308425104682101e-06, 3.183874923706753e-07, 1.6636546718018508e-07, 0.9998326301574707, 0.0001564916456118226, 4.561970854410902e-06, 9.608131534832864e-08, 3.777416850425652e-07, 1.8409032520594337e-08, 3.5593018310464686e-07, 3.1389209453891453e-08], "target_probs": 0.9998326301574707}}


{"result": {"time": "2021-02-21 12:36:47.484684", "n_pass": [57, 6, 6], "n_token": 67, "loss": [0.02966073341667652, 0.0009434499661438167], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def test_badcmd(", "self", ")", ":", "#NEWLINE#", "'test_badcmd'", ")", "#NEWLINE#", "extcode", "=", "set_as_top", "extcode", ".", "command", "=", "[", "'no-such-command'", "extcode", ".", "run", "(", ")", "#NEWLINE#", "#UNINDENT#", "except", "ValueError", "as", "exc", ":", "#NEWLINE#", "#INDENT#", "msg", "=", "\": The command to be executed, 'no-such-command', cannot be found\"", "#NEWLINE#", "self", ".", "assertEqual", "(", "str", "(", "extcode", ")", ",", "msg", ")", "#NEWLINE#", "self", ".", "assertEqual", "(", "extcode", ".", ")", "#NEWLINE#", "#UNINDENT#", "else", ":", "#NEWLINE#", "#INDENT#", "self", ".", "fail", "(", "'Expected OSError'", ")"]}}
{"position": {"error_location": 52, "repair_targets": [28], "repair_candidates": [28, 2, 36, 48, 61, 32, 45, 9, 12, 18, 42, 52]}}
{"prediction": {"error_location": 0.9707747101783752, "repair_targets": [0.9990569949150085], "repair_candidates": [3.083955562033225e-07, 3.5532264064386254e-06, 4.035222787024395e-07, 1.9343382007264154e-07, 0.9990569949150085, 0.0009338313830085099, 2.528024651837768e-06, 1.6116395329390798e-07, 9.841720611802884e-07, 1.3907351714692595e-08, 7.58712644710613e-07, 2.323542389603972e-07], "target_probs": 0.9990569949150085}}


{"result": {"time": "2021-02-21 12:36:47.652006", "n_pass": [91, 8, 7], "n_token": 64, "loss": [0.0092815812677145, 0.00016833769041113555], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def test_badcmd(", "self", ")", ":", "#NEWLINE#", "'test_badcmd'", ")", "#NEWLINE#", "extcode", "=", "set_as_top", "extcode", ".", "command", "=", "[", "'no-such-command'", "extcode", ".", "run", "(", ")", "#NEWLINE#", "#UNINDENT#", "except", "ValueError", "as", "exc", ":", "#NEWLINE#", "#INDENT#", "msg", "=", "\": The command to be executed, 'no-such-command', cannot be found\"", "#NEWLINE#", "self", ".", "assertEqual", "(", "str", "(", "extcode", ")", ",", "msg", ")", "#NEWLINE#", "self", ".", "assertEqual", "(", "extcode", ".", "else", ":", "#NEWLINE#", "#INDENT#", "self", ".", "fail", "(", "'Expected OSError'", ")"]}}
{"position": {"error_location": 52, "repair_targets": [28], "repair_candidates": [28, 2, 36, 48, 58, 32, 45, 9, 12, 18, 42, 52]}}
{"prediction": {"error_location": 0.9907613396644592, "repair_targets": [0.9998316764831543], "repair_candidates": [1.191188221127959e-05, 7.826291039236821e-06, 5.864396825927543e-07, 6.220623163244454e-07, 0.9998316764831543, 0.00012555943976622075, 1.918517955346033e-05, 1.367854736145091e-07, 8.326908869094041e-07, 2.908612941610045e-07, 9.969313623514608e-07, 4.1691541241561936e-07], "target_probs": 0.9998316764831543}}


{"result": {"time": "2021-02-21 12:36:47.814119", "n_pass": [95, 10, 8], "n_token": 61, "loss": [0.009405232965946198, 0.00013781544112134725], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def test_badcmd(", "self", "'test_badcmd'", ")", "#NEWLINE#", "extcode", "=", "set_as_top", "extcode", ".", "command", "=", "[", "'no-such-command'", "extcode", ".", "run", "(", ")", "#NEWLINE#", "#UNINDENT#", "except", "ValueError", "as", "exc", ":", "#NEWLINE#", "#INDENT#", "msg", "=", "\": The command to be executed, 'no-such-command', cannot be found\"", "#NEWLINE#", "self", ".", "assertEqual", "(", "str", "(", "extcode", ")", ",", "msg", ")", "#NEWLINE#", "self", ".", "assertEqual", "(", "extcode", ".", "else", ":", "#NEWLINE#", "#INDENT#", "self", ".", "fail", "(", "'Expected OSError'", ")"]}}
{"position": {"error_location": 49, "repair_targets": [25], "repair_candidates": [25, 2, 33, 45, 55, 29, 42, 6, 9, 15, 39, 49]}}
{"prediction": {"error_location": 0.9906388521194458, "repair_targets": [0.9998621940612793], "repair_candidates": [6.977592192924931e-07, 4.393956987769343e-05, 4.919322691421257e-07, 3.3148100442303985e-07, 0.9998621940612793, 7.944129902170971e-05, 1.094709659810178e-05, 1.4411152449156361e-07, 6.389646500792878e-07, 1.5842428524592833e-07, 8.077207667156472e-07, 2.5761289634829154e-07], "target_probs": 0.9998621940612793}}


{"result": {"time": "2021-02-21 12:36:47.894304", "n_pass": [96, 11, 9], "n_token": 58, "loss": [0.0019350391812622547, 0.0019211136968806386], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def test_badcmd(", "self", "extcode", "=", "set_as_top", "extcode", ".", "command", "=", "[", "'no-such-command'", "extcode", ".", "run", "(", ")", "#NEWLINE#", "#UNINDENT#", "except", "ValueError", "as", "exc", ":", "#NEWLINE#", "#INDENT#", "msg", "=", "\": The command to be executed, 'no-such-command', cannot be found\"", "#NEWLINE#", "self", ".", "assertEqual", "(", "str", "(", "extcode", ")", ",", "msg", ")", "#NEWLINE#", "self", ".", "assertEqual", "(", "extcode", ".", "else", ":", "#NEWLINE#", "#INDENT#", "self", ".", "fail", "(", "'Expected OSError'", ")"]}}
{"position": {"error_location": 46, "repair_targets": [22], "repair_candidates": [22, 2, 30, 42, 52, 26, 39, 3, 6, 12, 36, 46]}}
{"prediction": {"error_location": 0.9980668425559998, "repair_targets": [0.9980807304382324], "repair_candidates": [0.001704747905023396, 0.00014921177353244275, 3.853510577300767e-07, 2.9611925356221036e-07, 0.9980807304382324, 3.642270166892558e-05, 2.4900429707486182e-05, 1.8485253860944795e-07, 8.45409545036091e-07, 4.6419924615292985e-07, 9.458174190513091e-07, 9.722182312543737e-07], "target_probs": 0.9980807304382324}}


{"result": {"time": "2021-02-21 12:36:47.974963", "n_pass": [99, 12, 10], "n_token": 55, "loss": [0.005878895986825228, 0.0004332407843321562], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def test_badcmd(", "self", "extcode", "=", "set_as_top", "extcode", ".", "command", "extcode", ".", "run", "(", ")", "#NEWLINE#", "#UNINDENT#", "except", "ValueError", "as", "exc", ":", "#NEWLINE#", "#INDENT#", "msg", "=", "\": The command to be executed, 'no-such-command', cannot be found\"", "#NEWLINE#", "self", ".", "assertEqual", "(", "str", "(", "extcode", ")", ",", "msg", ")", "#NEWLINE#", "self", ".", "assertEqual", "(", "extcode", ".", "else", ":", "#NEWLINE#", "#INDENT#", "self", ".", "fail", "(", "'Expected OSError'", ")"]}}
{"position": {"error_location": 43, "repair_targets": [19], "repair_candidates": [19, 2, 27, 39, 49, 23, 36, 3, 6, 9, 33, 43]}}
{"prediction": {"error_location": 0.9941383600234985, "repair_targets": [0.9995668530464172], "repair_candidates": [0.00016077948384918272, 0.00018950254889205098, 5.389167654357152e-07, 1.1334402216789385e-07, 0.9995668530464172, 5.478281309478916e-05, 2.3041371605359018e-05, 3.187633694778924e-07, 1.3790153161608032e-06, 4.3065099930572615e-07, 1.4575419982065796e-06, 8.662506729706365e-07], "target_probs": 0.9995668530464172}}


{"result": {"time": "2021-02-21 12:36:48.051503", "n_pass": [101, 13, 11], "n_token": 52, "loss": [0.010502544231712818, 0.0011723354691639543], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def test_badcmd(", "self", "extcode", "=", "set_as_top", "extcode", ".", "command", "extcode", ".", "run", "#UNINDENT#", "except", "ValueError", "as", "exc", ":", "#NEWLINE#", "#INDENT#", "msg", "=", "\": The command to be executed, 'no-such-command', cannot be found\"", "#NEWLINE#", "self", ".", "assertEqual", "(", "str", "(", "extcode", ")", ",", "msg", ")", "#NEWLINE#", "self", ".", "assertEqual", "(", "extcode", ".", "else", ":", "#NEWLINE#", "#INDENT#", "self", ".", "fail", "(", "'Expected OSError'", ")"]}}
{"position": {"error_location": 40, "repair_targets": [16], "repair_candidates": [16, 2, 24, 36, 46, 20, 33, 3, 6, 9, 30, 40]}}
{"prediction": {"error_location": 0.9895524382591248, "repair_targets": [0.9988283514976501], "repair_candidates": [0.000101181045465637, 0.0005414960905909538, 1.7706779544823803e-05, 2.937631961685838e-06, 0.9988283514976501, 0.0003983938368037343, 8.581466681789607e-05, 1.6651097212161403e-06, 9.049475011124741e-06, 1.324233494415239e-06, 8.943550710682757e-06, 3.1259717161447043e-06], "target_probs": 0.9988283514976501}}


{"result": {"time": "2021-02-21 12:36:48.126550", "n_pass": [102, 14, 12], "n_token": 49, "loss": [0.01802457682788372, 0.0001400807232130319], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def test_badcmd(", "self", "extcode", "=", "set_as_top", "extcode", ".", "command", "extcode", ".", "run", "as", "exc", ":", "#NEWLINE#", "#INDENT#", "msg", "=", "\": The command to be executed, 'no-such-command', cannot be found\"", "#NEWLINE#", "self", ".", "assertEqual", "(", "str", "(", "extcode", ")", ",", "msg", ")", "#NEWLINE#", "self", ".", "assertEqual", "(", "extcode", ".", "else", ":", "#NEWLINE#", "#INDENT#", "self", ".", "fail", "(", "'Expected OSError'", ")"]}}
{"position": {"error_location": 37, "repair_targets": [13], "repair_candidates": [13, 2, 21, 33, 43, 17, 30, 3, 6, 9, 27, 37]}}
{"prediction": {"error_location": 0.9821370244026184, "repair_targets": [0.9998599290847778], "repair_candidates": [1.302953387494199e-05, 7.548202120233327e-05, 7.339318472077139e-06, 1.6163202190000447e-06, 0.9998599290847778, 2.858102561731357e-05, 1.094991330319317e-05, 1.9310674304051645e-07, 9.328956593890325e-07, 1.8153281189370318e-07, 1.3372419971346972e-06, 4.297223483717971e-07], "target_probs": 0.9998599290847778}}


{"result": {"time": "2021-02-21 12:36:48.200110", "n_pass": [105, 15, 13], "n_token": 46, "loss": [0.27985310554504395, 0.0001554609916638583], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def test_badcmd(", "self", "extcode", "=", "set_as_top", "extcode", ".", "command", "extcode", ".", "run", "as", "exc", ":", "#NEWLINE#", "#INDENT#", "msg", "self", ".", "assertEqual", "(", "str", "(", "extcode", ")", ",", "msg", ")", "#NEWLINE#", "self", ".", "assertEqual", "(", "extcode", ".", "else", ":", "#NEWLINE#", "#INDENT#", "self", ".", "fail", "(", "'Expected OSError'", ")"]}}
{"position": {"error_location": 34, "repair_targets": [13], "repair_candidates": [13, 2, 18, 30, 40, 17, 27, 3, 6, 9, 24, 34]}}
{"prediction": {"error_location": 0.7558947801589966, "repair_targets": [0.9998445510864258], "repair_candidates": [1.198610698338598e-05, 9.224941459251568e-05, 1.2195861017971765e-05, 3.38791505782865e-06, 0.9998445510864258, 2.5489041945547797e-05, 6.79182539897738e-06, 3.967434452079033e-07, 1.0529888641030993e-06, 1.362115966685451e-07, 1.4656465054940782e-06, 2.797942215693183e-07], "target_probs": 0.9998445510864258}}


{"result": {"time": "2021-02-21 12:36:48.272499", "n_pass": [107, 16, 14], "n_token": 43, "loss": [0.12303393334150314, 0.008290528319776058], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def test_badcmd(", "self", "extcode", "=", "set_as_top", "extcode", ".", "command", "extcode", ".", "run", "as", "exc", ":", "#NEWLINE#", "#INDENT#", "msg", "self", ".", "assertEqual", "extcode", ")", ",", "msg", ")", "#NEWLINE#", "self", ".", "assertEqual", "(", "extcode", ".", "else", ":", "#NEWLINE#", "#INDENT#", "self", ".", "fail", "(", "'Expected OSError'", ")"]}}
{"position": {"error_location": 31, "repair_targets": [13], "repair_candidates": [13, 2, 18, 27, 37, 17, 24, 3, 6, 9, 21, 31]}}
{"prediction": {"error_location": 0.8842336535453796, "repair_targets": [0.9917437434196472], "repair_candidates": [3.778116297326051e-05, 0.0003307066799607128, 4.654081567423418e-05, 1.905788121803198e-05, 0.9917437434196472, 0.005181069951504469, 0.0026136813685297966, 1.7307864936810802e-06, 6.718807071592892e-06, 2.514957714083721e-06, 9.665712241258007e-06, 6.774849225621438e-06], "target_probs": 0.9917437434196472}}


{"result": {"time": "2021-02-21 12:36:48.487015", "n_pass": [150, 19, 15], "n_token": 41, "loss": [0.11041852086782455, 0.0009011513320729136], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def test_badcmd(", "self", "extcode", "=", "set_as_top", "extcode", ".", "command", "extcode", ".", "run", "as", "exc", ":", "msg", "self", ".", "assertEqual", "extcode", ")", ",", "msg", ")", "#NEWLINE#", "self", ".", "assertEqual", "(", "extcode", ".", "else", ":", "#NEWLINE#", "#INDENT#", "self", ".", "fail", "(", "'Expected OSError'", ")"]}}
{"position": {"error_location": 29, "repair_targets": [13], "repair_candidates": [13, 2, 16, 25, 35, 15, 22, 3, 6, 9, 19, 29]}}
{"prediction": {"error_location": 0.8954592943191528, "repair_targets": [0.9990992546081543], "repair_candidates": [2.695459988899529e-05, 0.00029333081329241395, 7.056393224047497e-05, 2.064153886749409e-05, 0.9990992546081543, 0.00012877080007456243, 0.0003453625540714711, 6.753727461727976e-07, 3.82905091100838e-06, 2.412613184787915e-06, 5.553793471335666e-06, 2.8039539756719023e-06], "target_probs": 0.9990992546081543}}


{"result": {"time": "2021-02-21 12:36:48.626649", "n_pass": [155, 21, 16], "n_token": 39, "loss": [0.09531161189079285, 0.0012378005776554346], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def test_badcmd(", "self", "extcode", "=", "set_as_top", "extcode", ".", "command", "extcode", ".", "run", "as", "exc", ":", "msg", "self", ".", "assertEqual", "extcode", ")", ",", "msg", "self", ".", "assertEqual", "(", "extcode", ".", "else", ":", "#NEWLINE#", "#INDENT#", "self", ".", "fail", "(", "'Expected OSError'", ")"]}}
{"position": {"error_location": 27, "repair_targets": [13], "repair_candidates": [13, 2, 16, 23, 33, 15, 22, 3, 6, 9, 19, 27]}}
{"prediction": {"error_location": 0.9090898036956787, "repair_targets": [0.9987629652023315], "repair_candidates": [3.80621750082355e-05, 0.0002778384368866682, 3.7145382520975545e-05, 1.0015646694228053e-05, 0.9987629652023315, 0.0002468164311721921, 0.0005538880359381437, 3.0763851555093424e-06, 2.059731377812568e-05, 1.063964100467274e-05, 1.411422636010684e-05, 2.4889663109206595e-05], "target_probs": 0.9987629652023315}}


{"result": {"time": "2021-02-21 12:36:48.835083", "n_pass": [160, 24, 17], "n_token": 37, "loss": [0.1740300953388214, 0.0008952451171353459], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def test_badcmd(", "self", "extcode", "=", "set_as_top", "extcode", ".", "command", "extcode", ".", "run", "as", "exc", ":", "msg", "self", ".", "assertEqual", "extcode", ")", ",", "msg", "self", ".", "assertEqual", "(", "extcode", ".", "else", ":", "self", ".", "fail", "(", "'Expected OSError'", ")"]}}
{"position": {"error_location": 27, "repair_targets": [13], "repair_candidates": [13, 2, 16, 23, 31, 15, 22, 3, 6, 9, 19, 27]}}
{"prediction": {"error_location": 0.8402715921401978, "repair_targets": [0.9991051554679871], "repair_candidates": [2.6765666916617192e-05, 0.0002648871741257608, 3.731959077413194e-05, 1.8931703380076215e-05, 0.9991051554679871, 0.00019302235159557313, 0.0002831735764630139, 3.63600997843605e-06, 2.04726675292477e-05, 1.028905353450682e-05, 2.1666299289790913e-05, 1.4646302588516846e-05], "target_probs": 0.9991051554679871}}


{"result": {"time": "2021-02-21 12:36:48.903149", "n_pass": [162, 25, 18], "n_token": 35, "loss": [0.08552394062280655, 0.0003040299052372575], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def test_badcmd(", "self", "extcode", "=", "set_as_top", "extcode", ".", "command", "extcode", ".", "run", "as", "exc", ":", "msg", "self", ".", "assertEqual", "extcode", ")", ",", "msg", "self", ".", "assertEqual", "(", "extcode", ".", "else", ":", "self", ".", "'Expected OSError'", ")"]}}
{"position": {"error_location": 27, "repair_targets": [13], "repair_candidates": [13, 2, 16, 23, 31, 15, 22, 3, 6, 9, 19, 27]}}
{"prediction": {"error_location": 0.9180312752723694, "repair_targets": [0.9996960163116455], "repair_candidates": [2.5105246095336042e-05, 0.00013087638944853097, 1.7954627764993347e-05, 6.5787976382125635e-06, 0.9996960163116455, 5.585496546700597e-05, 3.175335223204456e-05, 1.2747805158142e-06, 6.36323738945066e-06, 2.9039431410637917e-06, 1.0080319952976424e-05, 1.5184567928372417e-05], "target_probs": 0.9996960163116455}}


{"result": {"time": "2021-02-21 12:36:49.037469", "n_pass": [164, 27, 19], "n_token": 34, "loss": [0.15752077102661133, 0.0016596969217061996], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["def test_badcmd(", "self", "extcode", "=", "set_as_top", "extcode", ".", "command", "extcode", ".", "run", "as", "exc", ":", "msg", "self", ".", "assertEqual", "extcode", ")", ",", "msg", "self", ".", "assertEqual", "(", "extcode", ".", "else", ":", "self", ".", "'Expected OSError'", ")"]}}
{"position": {"error_location": 26, "repair_targets": [12], "repair_candidates": [12, 1, 15, 22, 30, 14, 21, 2, 5, 8, 18, 26]}}
{"prediction": {"error_location": 0.8542590737342834, "repair_targets": [0.9983416795730591], "repair_candidates": [0.00017934844072442502, 0.0013147047720849514, 6.699835012113908e-06, 4.662550963985268e-06, 0.9983416795730591, 5.7193519751308486e-05, 5.0102964451070875e-05, 8.695979545336741e-07, 9.490798220213037e-06, 2.834890210579033e-06, 1.1944567631871905e-05, 2.040614708676003e-05], "target_probs": 0.9983416795730591}}


{"result": {"time": "2021-02-21 12:36:49.171665", "n_pass": [168, 29, 20], "n_token": 33, "loss": [0.11457705497741699, 0.0003962705668527633], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["def test_badcmd(", "self", "extcode", "set_as_top", "extcode", ".", "command", "extcode", ".", "run", "as", "exc", ":", "msg", "self", ".", "assertEqual", "extcode", ")", ",", "msg", "self", ".", "assertEqual", "(", "extcode", ".", "else", ":", "self", ".", "'Expected OSError'", ")"]}}
{"position": {"error_location": 25, "repair_targets": [11], "repair_candidates": [11, 1, 14, 21, 29, 13, 20, 2, 4, 7, 17, 25]}}
{"prediction": {"error_location": 0.8917432427406311, "repair_targets": [0.999603807926178], "repair_candidates": [3.175454185111448e-05, 0.00013124113320373, 3.865225880872458e-05, 1.2195515409985092e-05, 0.999603807926178, 8.572801743866876e-05, 4.718106720247306e-05, 9.67126425166498e-07, 8.664037522976287e-06, 2.802524704748066e-06, 1.3566846973844804e-05, 2.3418684577336535e-05], "target_probs": 0.999603807926178}}


{"result": {"time": "2021-02-21 12:36:49.240184", "n_pass": [169, 30, 21], "n_token": 32, "loss": [0.20491710305213928, 0.0013943493831902742], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["def test_badcmd(", "self", "extcode", "extcode", ".", "command", "extcode", ".", "run", "as", "exc", ":", "msg", "self", ".", "assertEqual", "extcode", ")", ",", "msg", "self", ".", "assertEqual", "(", "extcode", ".", "else", ":", "self", ".", "'Expected OSError'", ")"]}}
{"position": {"error_location": 24, "repair_targets": [10], "repair_candidates": [10, 1, 13, 20, 28, 12, 19, 2, 3, 6, 16, 24]}}
{"prediction": {"error_location": 0.814714789390564, "repair_targets": [0.9986066222190857], "repair_candidates": [7.692120561841875e-05, 0.0010224744910374284, 8.861568494467065e-05, 1.1084807738370728e-05, 0.9986066222190857, 0.00010929529526038095, 3.9876373193692416e-05, 1.4173757563185063e-06, 1.1196577361261006e-05, 3.5125508475175593e-06, 7.880179509811569e-06, 2.1054896933492273e-05], "target_probs": 0.9986066222190857}}


{"result": {"time": "2021-02-21 12:36:49.306077", "n_pass": [171, 31, 22], "n_token": 31, "loss": [0.05118970200419426, 0.0007173607009463012], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["def test_badcmd(", "self", "extcode", "extcode", "command", "extcode", ".", "run", "as", "exc", ":", "msg", "self", ".", "assertEqual", "extcode", ")", ",", "msg", "self", ".", "assertEqual", "(", "extcode", ".", "else", ":", "self", ".", "'Expected OSError'", ")"]}}
{"position": {"error_location": 23, "repair_targets": [9], "repair_candidates": [9, 1, 12, 19, 27, 11, 18, 2, 3, 5, 15, 23]}}
{"prediction": {"error_location": 0.9500983357429504, "repair_targets": [0.9992828965187073], "repair_candidates": [3.141406341455877e-05, 0.00048252346459776163, 8.47431001602672e-05, 1.841972698457539e-05, 0.9992828965187073, 4.367104702396318e-05, 2.561492146924138e-05, 4.770259920405806e-07, 7.493205430364469e-06, 2.5706729047669796e-06, 7.567951797682326e-06, 1.2685047295235563e-05], "target_probs": 0.9992828965187073}}


{"result": {"time": "2021-02-21 12:36:49.371482", "n_pass": [172, 32, 23], "n_token": 30, "loss": [0.03930962085723877, 0.0008130397764034569], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["def test_badcmd(", "self", "extcode", "extcode", "extcode", ".", "run", "as", "exc", ":", "msg", "self", ".", "assertEqual", "extcode", ")", ",", "msg", "self", ".", "assertEqual", "(", "extcode", ".", "else", ":", "self", ".", "'Expected OSError'", ")"]}}
{"position": {"error_location": 22, "repair_targets": [8], "repair_candidates": [8, 1, 11, 18, 26, 10, 17, 2, 3, 4, 14, 22]}}
{"prediction": {"error_location": 0.9614530801773071, "repair_targets": [0.9991872906684875], "repair_candidates": [3.14915923809167e-05, 0.0006097566802054644, 6.536769797094166e-05, 1.0559211659710854e-05, 0.9991872906684875, 3.8346672226907685e-05, 3.0100884032435715e-05, 5.30098247963906e-07, 9.193586265610065e-06, 2.9906752843089635e-06, 6.186543487274321e-06, 8.17040381662082e-06], "target_probs": 0.9991872906684875}}


{"result": {"time": "2021-02-21 12:36:49.436829", "n_pass": [174, 33, 24], "n_token": 29, "loss": [0.018740614876151085, 0.00017412033048458397], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["def test_badcmd(", "self", "extcode", "extcode", "extcode", "run", "as", "exc", ":", "msg", "self", ".", "assertEqual", "extcode", ")", ",", "msg", "self", ".", "assertEqual", "(", "extcode", ".", "else", ":", "self", ".", "'Expected OSError'", ")"]}}
{"position": {"error_location": 21, "repair_targets": [7], "repair_candidates": [7, 1, 10, 17, 25, 9, 16, 2, 3, 4, 13, 21]}}
{"prediction": {"error_location": 0.9814339876174927, "repair_targets": [0.9998258948326111], "repair_candidates": [1.2927536772622261e-05, 7.590722088934854e-05, 1.2868015801359434e-05, 2.299818333995063e-05, 0.9998258948326111, 2.1617468519252725e-05, 1.2752409020322375e-05, 1.645508405090368e-07, 5.323153345671017e-06, 1.1141283948745695e-06, 5.340161806088872e-06, 3.1603133265889483e-06], "target_probs": 0.9998258948326111}}


{"result": {"time": "2021-02-21 12:36:49.501154", "n_pass": [175, 34, 25], "n_token": 28, "loss": [0.07336953282356262, 0.0013317388948053122], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["def test_badcmd(", "self", "extcode", "extcode", "extcode", "as", "exc", ":", "msg", "self", ".", "assertEqual", "extcode", ")", ",", "msg", "self", ".", "assertEqual", "(", "extcode", ".", "else", ":", "self", ".", "'Expected OSError'", ")"]}}
{"position": {"error_location": 20, "repair_targets": [6], "repair_candidates": [6, 1, 9, 16, 24, 8, 15, 2, 3, 4, 12, 20]}}
{"prediction": {"error_location": 0.9292574524879456, "repair_targets": [0.9986691474914551], "repair_candidates": [7.99742410890758e-05, 0.0006434844108298421, 0.0002105331514030695, 0.0001673207152634859, 0.9986691474914551, 0.00011068225285271183, 4.5293651055544615e-05, 5.569147560890997e-07, 2.1660149286617525e-05, 5.325657184584998e-06, 1.9663628336274996e-05, 2.6429206627653912e-05], "target_probs": 0.9986691474914551}}


{"result": {"time": "2021-02-21 12:36:49.883091", "n_pass": [188, 40, 26], "n_token": 27, "loss": [0.3629838526248932, 0.01518944837152958], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["self", "extcode", "extcode", "extcode", "as", "exc", ":", "msg", "self", ".", "assertEqual", "extcode", ")", ",", "msg", "self", ".", "assertEqual", "(", "extcode", ".", "else", ":", "self", ".", "'Expected OSError'", ")"]}}
{"position": {"error_location": 19, "repair_targets": [5], "repair_candidates": [5, 0, 8, 15, 23, 7, 14, 1, 2, 3, 11, 19]}}
{"prediction": {"error_location": 0.6955977082252502, "repair_targets": [0.9849253296852112], "repair_candidates": [0.004122336395084858, 0.001255203620530665, 0.0028095648158341646, 0.005748774856328964, 0.9849253296852112, 0.0003868344647344202, 0.00034610103466548026, 3.292019300715765e-06, 8.085564331850037e-05, 2.2235790311242454e-05, 6.651384319411591e-05, 0.00023287256772164255], "target_probs": 0.9849253296852112}}


{"result": {"time": "2021-02-21 12:36:50.326529", "n_pass": [231, 47, 27], "n_token": 26, "loss": [0.24715711176395416, 0.017395056784152985], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["self", "extcode", "extcode", "extcode", "as", "exc", ":", "msg", "self", "assertEqual", "extcode", ")", ",", "msg", "self", ".", "assertEqual", "(", "extcode", ".", "else", ":", "self", ".", "'Expected OSError'", ")"]}}
{"position": {"error_location": 18, "repair_targets": [5], "repair_candidates": [5, 0, 8, 14, 22, 7, 13, 1, 2, 3, 10, 18]}}
{"prediction": {"error_location": 0.781018078327179, "repair_targets": [0.9827553629875183], "repair_candidates": [0.004636417608708143, 0.0014293816639110446, 0.0038412907160818577, 0.006841551046818495, 0.9827553629875183, 0.00017729823593981564, 0.00010338381980545819, 3.636803057815996e-06, 5.181023516342975e-05, 1.8736474885372445e-05, 5.285346560413018e-05, 8.8323256932199e-05], "target_probs": 0.9827553629875183}}


{"result": {"time": "2021-02-21 12:36:50.391750", "n_pass": [233, 48, 28], "n_token": 25, "loss": [0.08218862861394882, 0.006880775094032288], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["self", "extcode", "extcode", "extcode", "as", "exc", ":", "msg", "self", "assertEqual", "extcode", ",", "msg", "self", ".", "assertEqual", "(", "extcode", ".", "else", ":", "self", ".", "'Expected OSError'", ")"]}}
{"position": {"error_location": 17, "repair_targets": [5], "repair_candidates": [5, 0, 8, 13, 21, 7, 12, 1, 2, 3, 10, 17]}}
{"prediction": {"error_location": 0.9210982918739319, "repair_targets": [0.99314284324646], "repair_candidates": [0.0019035516306757927, 0.0006106924847699702, 0.0013359405566006899, 0.002747026039287448, 0.99314284324646, 0.00014416225894819945, 4.95920903631486e-05, 1.1238957995374221e-06, 7.039034699118929e-06, 2.9404975521174492e-06, 2.145508369721938e-05, 3.346313678775914e-05], "target_probs": 0.99314284324646}}


{"result": {"time": "2021-02-21 12:36:50.454077", "n_pass": [234, 49, 29], "n_token": 24, "loss": [0.08649899065494537, 0.005729787051677704], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["self", "extcode", "extcode", "extcode", "as", "exc", ":", "msg", "self", "assertEqual", "extcode", "msg", "self", ".", "assertEqual", "(", "extcode", ".", "else", ":", "self", ".", "'Expected OSError'", ")"]}}
{"position": {"error_location": 16, "repair_targets": [5], "repair_candidates": [5, 0, 8, 12, 20, 7, 11, 1, 2, 3, 10, 16]}}
{"prediction": {"error_location": 0.9171364903450012, "repair_targets": [0.9942865967750549], "repair_candidates": [0.0016592401079833508, 0.0005575721734203398, 0.0010579567169770598, 0.002149475272744894, 0.9942865967750549, 0.0001859659532783553, 1.3111075531924143e-05, 2.684015271370299e-06, 4.1863891055982094e-06, 7.266658030857798e-07, 4.442468343768269e-05, 3.80657656933181e-05], "target_probs": 0.9942865967750549}}


{"result": {"time": "2021-02-21 12:36:50.516390", "n_pass": [237, 50, 30], "n_token": 23, "loss": [0.029573936015367508, 0.003961591515690088], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["self", "extcode", "extcode", "extcode", "as", "exc", ":", "msg", "self", "assertEqual", "extcode", "msg", "self", "assertEqual", "(", "extcode", ".", "else", ":", "self", ".", "'Expected OSError'", ")"]}}
{"position": {"error_location": 15, "repair_targets": [5], "repair_candidates": [5, 0, 8, 12, 19, 7, 11, 1, 2, 3, 10, 15]}}
{"prediction": {"error_location": 0.9708591103553772, "repair_targets": [0.996046245098114], "repair_candidates": [0.0013085914542898536, 0.00042224646313115954, 0.0006619710475206375, 0.0013241763226687908, 0.996046245098114, 0.0001689801865722984, 4.107636777916923e-05, 1.0044221880889381e-06, 4.959038051310927e-07, 3.7712774769715907e-07, 1.5303996406146325e-05, 9.484413567406591e-06], "target_probs": 0.996046245098114}}


{"result": {"time": "2021-02-21 12:36:50.577681", "n_pass": [238, 51, 31], "n_token": 22, "loss": [0.029004240408539772, 0.0014405489200726151], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["self", "extcode", "extcode", "extcode", "as", "exc", ":", "msg", "self", "assertEqual", "extcode", "msg", "self", "(", "extcode", ".", "else", ":", "self", ".", "'Expected OSError'", ")"]}}
{"position": {"error_location": 14, "repair_targets": [5], "repair_candidates": [5, 0, 8, 12, 18, 7, 11, 1, 2, 3, 10, 14]}}
{"prediction": {"error_location": 0.9714123606681824, "repair_targets": [0.9985604882240295], "repair_candidates": [0.00037260702811181545, 0.000126028127851896, 0.0002393759205006063, 0.0006462699384428561, 0.9985604882240295, 4.0743747376836836e-05, 1.0328576536267065e-05, 2.6960725563185406e-07, 2.496455522305041e-07, 1.1875092695845524e-06, 7.326827358156152e-07, 1.8263300489707035e-06], "target_probs": 0.9985604882240295}}


{"result": {"time": "2021-02-21 12:36:50.699516", "n_pass": [241, 53, 32], "n_token": 21, "loss": [0.24053935706615448, 0.262495756149292], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["self", "extcode", "extcode", "extcode", "as", "exc", ":", "msg", "self", "assertEqual", "extcode", "msg", "self", "(", "extcode", "else", ":", "self", ".", "'Expected OSError'", ")"]}}
{"position": {"error_location": 14, "repair_targets": [5], "repair_candidates": [5, 0, 8, 12, 17, 7, 11, 1, 2, 3, 10, 14]}}
{"prediction": {"error_location": 0.7862035632133484, "repair_targets": [0.7691296339035034], "repair_candidates": [0.10680771619081497, 0.030157532542943954, 0.040416475385427475, 0.05194401368498802, 0.7691296339035034, 0.0002205103519372642, 0.0004495700413826853, 0.00011444181291153654, 0.0001643533178139478, 0.00029401140636764467, 0.0002221656613983214, 7.955994078656659e-05], "target_probs": 0.7691296339035034}}


{"result": {"time": "2021-02-21 12:36:50.761798", "n_pass": [242, 54, 33], "n_token": 20, "loss": [0.07743018865585327, 0.0996789038181305], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["self", "extcode", "extcode", "extcode", "as", "exc", ":", "msg", "self", "assertEqual", "extcode", "msg", "self", "(", "extcode", ":", "self", ".", "'Expected OSError'", ")"]}}
{"position": {"error_location": 14, "repair_targets": [5], "repair_candidates": [5, 0, 8, 12, 16, 7, 11, 1, 2, 3, 10, 14]}}
{"prediction": {"error_location": 0.9254915118217468, "repair_targets": [0.905128002166748], "repair_candidates": [0.04007713496685028, 0.013126556761562824, 0.01663512922823429, 0.02402840554714203, 0.905128002166748, 0.00019671900372486562, 0.0002964117156807333, 3.343516436871141e-05, 5.479203173308633e-05, 0.00018445284513290972, 0.00013596340431831777, 0.000102995902125258], "target_probs": 0.905128002166748}}


{"result": {"time": "2021-02-21 12:36:50.880882", "n_pass": [245, 56, 34], "n_token": 19, "loss": [0.02341536246240139, 0.03418507054448128], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["self", "extcode", "extcode", "extcode", "as", "exc", ":", "msg", "self", "assertEqual", "extcode", "msg", "self", "(", "extcode", ":", "self", "'Expected OSError'", ")"]}}
{"position": {"error_location": 14, "repair_targets": [5], "repair_candidates": [5, 0, 8, 12, 16, 7, 11, 1, 2, 3, 10, 14]}}
{"prediction": {"error_location": 0.976856529712677, "repair_targets": [0.9663926362991333], "repair_candidates": [0.013990717940032482, 0.005274055525660515, 0.006484690587967634, 0.007513898424804211, 0.9663926362991333, 9.181078348774463e-05, 0.0001052226361935027, 8.252622137661092e-06, 9.504718036623672e-06, 5.363821765058674e-05, 2.711254455789458e-05, 4.8461231926921755e-05], "target_probs": 0.9663926362991333}}


{"result": {"time": "2021-02-21 12:36:50.999164", "n_pass": [247, 58, 35], "n_token": 18, "loss": [0.041691213846206665, 0.03710290417075157], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["self", "extcode", "extcode", "extcode", "as", "exc", ":", "msg", "self", "assertEqual", "extcode", "msg", "self", "(", "extcode", ":", "self", "'Expected OSError'"]}}
{"position": {"error_location": 14, "repair_targets": [5], "repair_candidates": [5, 0, 8, 12, 16, 7, 11, 1, 2, 3, 10, 14]}}
{"prediction": {"error_location": 0.9591659307479858, "repair_targets": [0.9635769724845886], "repair_candidates": [0.01510633621364832, 0.007085948716849089, 0.0061874305829405785, 0.00767621910199523, 0.9635769724845886, 9.612656867830083e-05, 0.00010723244486143813, 1.2841614989156369e-05, 1.4018735782883596e-05, 6.105773354647681e-05, 4.262914808350615e-05, 3.320721589261666e-05], "target_probs": 0.9635769724845886}}




Minimal simplified tokens:

['self', 'extcode', 'extcode', 'extcode', 'as', 'exc', ':', 'msg', 'self', 'assertEqual', 'extcode', 'msg', 'self', '(', 'extcode', ':', 'self', "'Expected OSError'"]
