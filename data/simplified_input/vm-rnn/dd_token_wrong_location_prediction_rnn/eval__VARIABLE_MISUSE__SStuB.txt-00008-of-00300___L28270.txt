
Original sample:

{"has_bug": true, "bug_kind": 1, "bug_kind_name": "VARIABLE_MISUSE", "source_tokens": ["#NEWLINE#", "def set_bounds(", "self", ",", "new_bounds", ")", ":", "#NEWLINE#", "#INDENT#", "'\\n        A method that allows changing the lower and upper searching bounds\\n\\n        :param new_bounds:\\n            A dictionary with the parameter name and its new bounds\\n\\n        '", "#NEWLINE#", "self", ".", "pbounds", ".", "update", "(", "new_bounds", ")", "#NEWLINE#", "for", "(", "row", ",", "key", ")", "in", "enumerate", "(", "self", ".", "pbounds", ".", "keys", "(", ")", ")", ":", "#NEWLINE#", "#INDENT#", "self", ".", "bounds", "[", "row", "]", "=", "self", ".", "pbounds", "[", "row", "]"], "error_location": [51], "repair_targets": [24], "repair_candidates": [4, 17, 24, 22, 44, 51, 2, 11, 29, 40, 47], "provenances": [{"datasetProvenance": {"datasetName": "ETHPy150Open", "filepath": "fmfn/BayesianOptimization/bayes_opt/bayesian_optimization.py", "license": "mit", "note": "license: bigquery_api"}}], "txt_file": "eval__VARIABLE_MISUSE__SStuB.txt-00008-of-00300", "js_count": 28270, "results": {"model": "rnn", "prob": {"loc": [[0.4122522473335266, 1.93606842913141e-06, 2.2215608908027207e-07, 1.7476363467494593e-08, 6.8549243223969825e-06, 8.84309940829553e-08, 3.214468691226102e-08, 6.541098400703049e-07, 7.959423697911916e-08, 3.4078377098012425e-07, 6.522301987388346e-08, 8.014845320758468e-08, 1.0089720170469718e-09, 4.110079832031488e-09, 1.772893085671967e-07, 2.8818488928550323e-08, 9.516312360347001e-08, 0.00014567999460268766, 1.5770723393870867e-07, 4.812529368791729e-06, 8.367265280639913e-08, 2.8767839221899294e-09, 2.324458819202846e-06, 3.892392612669937e-07, 3.899420335073955e-06, 4.3323606035983175e-08, 8.406243701131189e-09, 9.515935630588501e-07, 5.49331389265717e-08, 1.7501906768302433e-07, 3.0659206284866514e-09, 2.313595537373203e-08, 3.9271844798349775e-07, 4.916647711183941e-08, 3.3471044957877893e-07, 5.781438176200027e-06, 1.2269784122054261e-07, 4.104741151422786e-07, 3.7954578147036955e-07, 1.4683937621384757e-08, 2.0291274722694652e-06, 7.256345302408818e-09, 2.0488437257881742e-07, 2.0797432664920734e-09, 0.5438641309738159, 2.796723563847081e-08, 2.1241508818548027e-07, 0.0001239003468072042, 4.088180460826152e-09, 1.3531270042221877e-06, 1.9537351292342464e-08, 0.043578434735536575, 6.678537260995654e-07]], "pointer": [[0.0, 0.0, 8.48438503453508e-05, 0.0, 0.012800239026546478, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 3.022928285645321e-05, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0003322924894746393, 0.0, 0.0, 0.0, 0.0, 0.19625018537044525, 0.0, 0.7902000546455383, 0.0, 0.0, 0.0, 0.0, 0.00010130878945346922, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.9869250536430627e-05, 0.0, 0.0, 0.0, 9.280157973989844e-05, 0.0, 0.0, 2.536318606871646e-05, 0.0, 0.0, 0.0, 6.280873640207574e-05, 0.0]], "target": [0.7902000546455383]}, "loss": [3.133192777633667, 0.23546913266181946], "acc": [0.0, 0.0, 1.0, 0.0]}, "wrong_error_location": [44]}


Trace of simplified code(s):

{"result": {"time": "2021-02-21 12:24:25.921113", "n_pass": [1, 1, 1], "n_token": 53, "loss": [0.6090556979179382, 0.23546913266181946], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def set_bounds(", "self", ",", "new_bounds", ")", ":", "#NEWLINE#", "#INDENT#", "'\\n        A method that allows changing the lower and upper searching bounds\\n\\n        :param new_bounds:\\n            A dictionary with the parameter name and its new bounds\\n\\n        '", "#NEWLINE#", "self", ".", "pbounds", ".", "update", "(", "new_bounds", ")", "#NEWLINE#", "for", "(", "row", ",", "key", ")", "in", "enumerate", "(", "self", ".", "pbounds", ".", "keys", "(", ")", ")", ":", "#NEWLINE#", "#INDENT#", "self", ".", "bounds", "[", "row", "]", "=", "self", ".", "pbounds", "[", "row", "]"]}}
{"position": {"error_location": 44, "repair_targets": [24], "repair_candidates": [4, 17, 24, 22, 44, 51, 2, 11, 29, 40, 47]}}
{"prediction": {"error_location": 0.5438641309738159, "repair_targets": [0.7902000546455383], "repair_candidates": [8.48438503453508e-05, 0.012800239026546478, 3.022928285645321e-05, 0.0003322924894746393, 0.19625018537044525, 0.7902000546455383, 0.00010130878945346922, 1.9869250536430627e-05, 9.280157973989844e-05, 2.536318606871646e-05, 6.280873640207574e-05], "target_probs": 0.7902000546455383}}


{"result": {"time": "2021-02-21 12:24:26.073908", "n_pass": [46, 3, 2], "n_token": 50, "loss": [0.24088682234287262, 0.14444118738174438], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def set_bounds(", "self", ",", "new_bounds", ")", "'\\n        A method that allows changing the lower and upper searching bounds\\n\\n        :param new_bounds:\\n            A dictionary with the parameter name and its new bounds\\n\\n        '", "#NEWLINE#", "self", ".", "pbounds", ".", "update", "(", "new_bounds", ")", "#NEWLINE#", "for", "(", "row", ",", "key", ")", "in", "enumerate", "(", "self", ".", "pbounds", ".", "keys", "(", ")", ")", ":", "#NEWLINE#", "#INDENT#", "self", ".", "bounds", "[", "row", "]", "=", "self", ".", "pbounds", "[", "row", "]"]}}
{"position": {"error_location": 41, "repair_targets": [21], "repair_candidates": [4, 14, 21, 19, 41, 48, 2, 8, 26, 37, 44]}}
{"prediction": {"error_location": 0.7859305739402771, "repair_targets": [0.8655058145523071], "repair_candidates": [9.432727529201657e-05, 0.0008545857272110879, 3.57854223693721e-05, 0.0003122371854260564, 0.13305442035198212, 0.8655058145523071, 5.063836943008937e-05, 1.0217107046628371e-05, 4.26696460635867e-05, 9.261221748602111e-06, 3.0105109544820152e-05], "target_probs": 0.8655058145523071}}


{"result": {"time": "2021-02-21 12:24:26.146908", "n_pass": [47, 4, 3], "n_token": 47, "loss": [0.12731847167015076, 0.1445663869380951], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def set_bounds(", "self", ",", "new_bounds", ")", "'\\n        A method that allows changing the lower and upper searching bounds\\n\\n        :param new_bounds:\\n            A dictionary with the parameter name and its new bounds\\n\\n        '", "#NEWLINE#", "self", "update", "(", "new_bounds", ")", "#NEWLINE#", "for", "(", "row", ",", "key", ")", "in", "enumerate", "(", "self", ".", "pbounds", ".", "keys", "(", ")", ")", ":", "#NEWLINE#", "#INDENT#", "self", ".", "bounds", "[", "row", "]", "=", "self", ".", "pbounds", "[", "row", "]"]}}
{"position": {"error_location": 38, "repair_targets": [18], "repair_candidates": [4, 11, 18, 16, 38, 45, 2, 8, 23, 34, 41]}}
{"prediction": {"error_location": 0.88045334815979, "repair_targets": [0.8653974533081055], "repair_candidates": [0.00016810085799079388, 0.00020375734311528504, 0.0006988489185459912, 6.635047611780465e-05, 0.13328000903129578, 0.8653974533081055, 9.05743581824936e-05, 1.8327895304537378e-05, 3.6231762351235375e-05, 1.5271456504706293e-05, 2.5101986466324888e-05], "target_probs": 0.8653974533081055}}


{"result": {"time": "2021-02-21 12:24:26.361599", "n_pass": [54, 7, 4], "n_token": 43, "loss": [0.27605101466178894, 0.12614542245864868], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def set_bounds(", "self", ",", "new_bounds", ")", "'\\n        A method that allows changing the lower and upper searching bounds\\n\\n        :param new_bounds:\\n            A dictionary with the parameter name and its new bounds\\n\\n        '", "#NEWLINE#", "self", "update", "(", "new_bounds", ")", "#NEWLINE#", "for", "(", "row", ",", "key", ")", "in", "enumerate", "(", "self", ".", "pbounds", ".", ":", "#NEWLINE#", "#INDENT#", "self", ".", "bounds", "[", "row", "]", "=", "self", ".", "pbounds", "[", "row", "]"]}}
{"position": {"error_location": 34, "repair_targets": [18], "repair_candidates": [4, 11, 18, 16, 34, 41, 2, 8, 23, 30, 37]}}
{"prediction": {"error_location": 0.7587742805480957, "repair_targets": [0.8814866542816162], "repair_candidates": [0.00018752894538920373, 0.00023686286294832826, 0.000802277063485235, 7.81043927418068e-05, 0.11702517420053482, 0.8814866542816162, 9.066914935829118e-05, 1.9941488062613644e-05, 2.493228021194227e-05, 2.13429029827239e-05, 2.6510881070862524e-05], "target_probs": 0.8814866542816162}}


{"result": {"time": "2021-02-21 12:24:26.785033", "n_pass": [100, 13, 5], "n_token": 41, "loss": [0.28170666098594666, 0.21762701869010925], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def set_bounds(", "self", ",", "new_bounds", ")", "'\\n        A method that allows changing the lower and upper searching bounds\\n\\n        :param new_bounds:\\n            A dictionary with the parameter name and its new bounds\\n\\n        '", "#NEWLINE#", "self", "update", "(", "new_bounds", ")", "#NEWLINE#", "for", "(", "row", ",", "key", ")", "in", "enumerate", "(", "self", ".", "pbounds", ".", ":", "#NEWLINE#", "#INDENT#", "self", ".", "bounds", "[", "row", "]", "=", "self", ".", "row", "]"]}}
{"position": {"error_location": 34, "repair_targets": [18], "repair_candidates": [4, 11, 18, 16, 34, 39, 2, 8, 23, 30, 37]}}
{"prediction": {"error_location": 0.7544949650764465, "repair_targets": [0.8044254183769226], "repair_candidates": [0.0003717506187967956, 0.00022097397595643997, 0.000973974063526839, 5.9162688557989895e-05, 0.1927972137928009, 0.8044254183769226, 7.201022526714951e-05, 2.2328498744172975e-05, 1.789538328011986e-05, 0.0009488454088568687, 9.036792471306399e-05], "target_probs": 0.8044254183769226}}


{"result": {"time": "2021-02-21 12:24:26.857661", "n_pass": [101, 14, 6], "n_token": 40, "loss": [0.21583935618400574, 0.18329301476478577], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["def set_bounds(", "self", ",", "new_bounds", ")", "'\\n        A method that allows changing the lower and upper searching bounds\\n\\n        :param new_bounds:\\n            A dictionary with the parameter name and its new bounds\\n\\n        '", "#NEWLINE#", "self", "update", "(", "new_bounds", ")", "#NEWLINE#", "for", "(", "row", ",", "key", ")", "in", "enumerate", "(", "self", ".", "pbounds", ".", ":", "#NEWLINE#", "#INDENT#", "self", ".", "bounds", "[", "row", "]", "=", "self", ".", "row", "]"]}}
{"position": {"error_location": 33, "repair_targets": [17], "repair_candidates": [3, 10, 17, 15, 33, 38, 1, 7, 22, 29, 36]}}
{"prediction": {"error_location": 0.8058648109436035, "repair_targets": [0.8325241804122925], "repair_candidates": [0.004212023690342903, 0.0014092953642830253, 0.001726529560983181, 4.091733353561722e-05, 0.1580381840467453, 0.8325241804122925, 8.789115236140788e-05, 2.855945422197692e-05, 3.2777599699329585e-05, 0.0017916864017024636, 0.00010784497862914577], "target_probs": 0.8325241804122925}}


{"result": {"time": "2021-02-21 12:24:26.995500", "n_pass": [104, 16, 7], "n_token": 39, "loss": [0.1454637497663498, 0.11831142753362656], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["def set_bounds(", "self", "new_bounds", ")", "'\\n        A method that allows changing the lower and upper searching bounds\\n\\n        :param new_bounds:\\n            A dictionary with the parameter name and its new bounds\\n\\n        '", "#NEWLINE#", "self", "update", "(", "new_bounds", ")", "#NEWLINE#", "for", "(", "row", ",", "key", ")", "in", "enumerate", "(", "self", ".", "pbounds", ".", ":", "#NEWLINE#", "#INDENT#", "self", ".", "bounds", "[", "row", "]", "=", "self", ".", "row", "]"]}}
{"position": {"error_location": 32, "repair_targets": [16], "repair_candidates": [2, 9, 16, 14, 32, 37, 1, 6, 21, 28, 35]}}
{"prediction": {"error_location": 0.8646211624145508, "repair_targets": [0.8884193301200867], "repair_candidates": [0.001946369418874383, 0.0007814179407432675, 0.0017372661968693137, 5.329175837687217e-05, 0.10497897863388062, 0.8884193301200867, 0.00010599079541862011, 3.292393739684485e-05, 4.2140167352044955e-05, 0.0017649404471740127, 0.00013736360415350646], "target_probs": 0.8884193301200867}}


{"result": {"time": "2021-02-21 12:24:27.064319", "n_pass": [106, 17, 8], "n_token": 38, "loss": [0.07063860446214676, 0.09027165919542313], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["def set_bounds(", "self", "new_bounds", "'\\n        A method that allows changing the lower and upper searching bounds\\n\\n        :param new_bounds:\\n            A dictionary with the parameter name and its new bounds\\n\\n        '", "#NEWLINE#", "self", "update", "(", "new_bounds", ")", "#NEWLINE#", "for", "(", "row", ",", "key", ")", "in", "enumerate", "(", "self", ".", "pbounds", ".", ":", "#NEWLINE#", "#INDENT#", "self", ".", "bounds", "[", "row", "]", "=", "self", ".", "row", "]"]}}
{"position": {"error_location": 31, "repair_targets": [15], "repair_candidates": [2, 8, 15, 13, 31, 36, 1, 5, 20, 27, 34]}}
{"prediction": {"error_location": 0.9317986965179443, "repair_targets": [0.9136829376220703], "repair_candidates": [0.001014389214105904, 0.000597146456129849, 0.0007345493067987263, 7.962917152326554e-05, 0.08197219669818878, 0.9136829376220703, 8.455319766653702e-05, 3.070080128964037e-05, 3.441574881435372e-05, 0.0016405406640842557, 0.00012897017586510628], "target_probs": 0.9136829376220703}}


{"result": {"time": "2021-02-21 12:24:27.132216", "n_pass": [107, 18, 9], "n_token": 37, "loss": [0.09335575252771378, 0.12215404212474823], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["def set_bounds(", "self", "new_bounds", "#NEWLINE#", "self", "update", "(", "new_bounds", ")", "#NEWLINE#", "for", "(", "row", ",", "key", ")", "in", "enumerate", "(", "self", ".", "pbounds", ".", ":", "#NEWLINE#", "#INDENT#", "self", ".", "bounds", "[", "row", "]", "=", "self", ".", "row", "]"]}}
{"position": {"error_location": 30, "repair_targets": [14], "repair_candidates": [2, 7, 14, 12, 30, 35, 1, 4, 19, 26, 33]}}
{"prediction": {"error_location": 0.910869300365448, "repair_targets": [0.8850120306015015], "repair_candidates": [0.0053728423081338406, 0.016249116510152817, 0.0009881362784653902, 0.00019890107796527445, 0.08960866183042526, 0.8850120306015015, 0.00012193659495096654, 3.2882162486203015e-05, 4.011156488559209e-05, 0.0021989410743117332, 0.00017632718663662672], "target_probs": 0.8850120306015015}}


{"result": {"time": "2021-02-21 12:24:27.199772", "n_pass": [108, 19, 10], "n_token": 36, "loss": [0.08290714025497437, 0.10221842676401138], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["def set_bounds(", "self", "new_bounds", "self", "update", "(", "new_bounds", ")", "#NEWLINE#", "for", "(", "row", ",", "key", ")", "in", "enumerate", "(", "self", ".", "pbounds", ".", ":", "#NEWLINE#", "#INDENT#", "self", ".", "bounds", "[", "row", "]", "=", "self", ".", "row", "]"]}}
{"position": {"error_location": 29, "repair_targets": [13], "repair_candidates": [2, 6, 13, 11, 29, 34, 1, 3, 18, 25, 32]}}
{"prediction": {"error_location": 0.9204365015029907, "repair_targets": [0.9028323292732239], "repair_candidates": [0.004112929571419954, 0.01547203678637743, 0.004512872081249952, 0.0001510065922047943, 0.07062538713216782, 0.9028323292732239, 0.00011310604895697907, 3.066820136155002e-05, 3.1039122404763475e-05, 0.0019641872495412827, 0.00015449519560206681], "target_probs": 0.9028323292732239}}


{"result": {"time": "2021-02-21 12:24:27.268894", "n_pass": [110, 20, 11], "n_token": 34, "loss": [0.682663083076477, 0.22195647656917572], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["def set_bounds(", "self", "new_bounds", "self", "new_bounds", ")", "#NEWLINE#", "for", "(", "row", ",", "key", ")", "in", "enumerate", "(", "self", ".", "pbounds", ".", ":", "#NEWLINE#", "#INDENT#", "self", ".", "bounds", "[", "row", "]", "=", "self", ".", "row", "]"]}}
{"position": {"error_location": 27, "repair_targets": [11], "repair_candidates": [2, 4, 11, 9, 27, 32, 1, 3, 16, 23, 30]}}
{"prediction": {"error_location": 0.5052696466445923, "repair_targets": [0.8009502291679382], "repair_candidates": [0.0019949160050600767, 0.0015598435420542955, 0.01660013012588024, 0.05903647467494011, 0.10681047290563583, 0.8009502291679382, 0.0003957863664254546, 0.00011042259575333446, 0.00020185411267448217, 0.011419695802032948, 0.0009201993234455585], "target_probs": 0.8009502291679382}}


{"result": {"time": "2021-02-21 12:24:27.793044", "n_pass": [126, 28, 12], "n_token": 33, "loss": [0.6046736240386963, 0.47738295793533325], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["self", "new_bounds", "self", "new_bounds", ")", "#NEWLINE#", "for", "(", "row", ",", "key", ")", "in", "enumerate", "(", "self", ".", "pbounds", ".", ":", "#NEWLINE#", "#INDENT#", "self", ".", "bounds", "[", "row", "]", "=", "self", ".", "row", "]"]}}
{"position": {"error_location": 26, "repair_targets": [10], "repair_candidates": [1, 3, 10, 8, 26, 31, 0, 2, 15, 22, 29]}}
{"prediction": {"error_location": 0.5462526679039001, "repair_targets": [0.6204048991203308], "repair_candidates": [0.012689203955233097, 0.0008432135218754411, 0.001137981191277504, 0.3095136880874634, 0.05428551882505417, 0.6204048991203308, 4.1774655983317643e-05, 1.073897692549508e-05, 1.7355838281218894e-05, 0.0009187444229610264, 0.0001368756202282384], "target_probs": 0.6204048991203308}}


{"result": {"time": "2021-02-21 12:24:28.314773", "n_pass": [176, 36, 13], "n_token": 32, "loss": [0.04697581008076668, 0.41278499364852905], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["self", "new_bounds", "self", "new_bounds", "#NEWLINE#", "for", "(", "row", ",", "key", ")", "in", "enumerate", "(", "self", ".", "pbounds", ".", ":", "#NEWLINE#", "#INDENT#", "self", ".", "bounds", "[", "row", "]", "=", "self", ".", "row", "]"]}}
{"position": {"error_location": 25, "repair_targets": [9], "repair_candidates": [1, 3, 9, 7, 25, 30, 0, 2, 14, 21, 28]}}
{"prediction": {"error_location": 0.9541105031967163, "repair_targets": [0.6618045568466187], "repair_candidates": [0.0045233783312141895, 0.000423124642111361, 0.0006347363232634962, 0.30421093106269836, 0.028219573199748993, 0.6618045568466187, 2.0670071535278112e-05, 3.959277819376439e-06, 4.568968051898992e-06, 0.00010568447032710537, 4.8783738748170435e-05], "target_probs": 0.6618045568466187}}


{"result": {"time": "2021-02-21 12:24:28.446198", "n_pass": [178, 38, 14], "n_token": 31, "loss": [0.3939998745918274, 0.22093337774276733], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["self", "new_bounds", "self", "new_bounds", "#NEWLINE#", "(", "row", ",", "key", ")", "in", "enumerate", "(", "self", ".", "pbounds", ".", ":", "#NEWLINE#", "#INDENT#", "self", ".", "bounds", "[", "row", "]", "=", "self", ".", "row", "]"]}}
{"position": {"error_location": 24, "repair_targets": [8], "repair_candidates": [1, 3, 8, 6, 24, 29, 0, 2, 13, 20, 27]}}
{"prediction": {"error_location": 0.6743540167808533, "repair_targets": [0.8017700910568237], "repair_candidates": [0.01075445394963026, 0.002527139848098159, 0.005258983466774225, 0.1367444396018982, 0.0425088033080101, 0.8017700910568237, 4.518506466411054e-05, 7.5097013905178756e-06, 1.1534366421983577e-05, 0.0003085054340772331, 6.325084541458637e-05], "target_probs": 0.8017700910568237}}


{"result": {"time": "2021-02-21 12:24:28.510542", "n_pass": [179, 39, 15], "n_token": 30, "loss": [0.11581950634717941, 0.5864800810813904], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["self", "new_bounds", "self", "new_bounds", "#NEWLINE#", "row", ",", "key", ")", "in", "enumerate", "(", "self", ".", "pbounds", ".", ":", "#NEWLINE#", "#INDENT#", "self", ".", "bounds", "[", "row", "]", "=", "self", ".", "row", "]"]}}
{"position": {"error_location": 23, "repair_targets": [7], "repair_candidates": [1, 3, 7, 5, 23, 28, 0, 2, 12, 19, 26]}}
{"prediction": {"error_location": 0.8906358480453491, "repair_targets": [0.5562819242477417], "repair_candidates": [0.013441021554172039, 0.0017893252661451697, 0.0018184809014201164, 0.4097973704338074, 0.016422398388385773, 0.5562819242477417, 7.056885078782216e-05, 1.0943763300019782e-05, 1.7461186871514656e-05, 0.00026463824906386435, 8.585260366089642e-05], "target_probs": 0.5562819242477417}}


{"result": {"time": "2021-02-21 12:24:28.637738", "n_pass": [183, 41, 16], "n_token": 29, "loss": [0.18891336023807526, 0.6901019811630249], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["self", "new_bounds", "self", "new_bounds", "#NEWLINE#", "row", ",", "key", "in", "enumerate", "(", "self", ".", "pbounds", ".", ":", "#NEWLINE#", "#INDENT#", "self", ".", "bounds", "[", "row", "]", "=", "self", ".", "row", "]"]}}
{"position": {"error_location": 22, "repair_targets": [7], "repair_candidates": [1, 3, 7, 5, 22, 27, 0, 2, 11, 18, 25]}}
{"prediction": {"error_location": 0.8278581500053406, "repair_targets": [0.5015249252319336], "repair_candidates": [0.01696249470114708, 0.0025331401266157627, 0.0033678736072033644, 0.459188848733902, 0.015825405716896057, 0.5015249252319336, 8.104152948362753e-05, 1.4005372577230446e-05, 2.175486042688135e-05, 0.00039560484583489597, 8.486182196065784e-05], "target_probs": 0.5015249252319336}}


{"result": {"time": "2021-02-21 12:24:29.143195", "n_pass": [192, 49, 17], "n_token": 28, "loss": [0.28032994270324707, 0.6203014254570007], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["self", "new_bounds", "self", "new_bounds", "#NEWLINE#", "row", ",", "key", "in", "enumerate", "(", "self", ".", "pbounds", ".", ":", "#INDENT#", "self", ".", "bounds", "[", "row", "]", "=", "self", ".", "row", "]"]}}
{"position": {"error_location": 21, "repair_targets": [7], "repair_candidates": [1, 3, 7, 5, 21, 26, 0, 2, 11, 17, 24]}}
{"prediction": {"error_location": 0.7555343508720398, "repair_targets": [0.5377823114395142], "repair_candidates": [0.03618667274713516, 0.004887239541858435, 0.004955714102834463, 0.405558317899704, 0.00887366570532322, 0.5377823114395142, 8.835458720568568e-05, 4.004576840088703e-05, 0.00014038156950846314, 0.0010746734915301204, 0.0004126060812268406], "target_probs": 0.5377823114395142}}


{"result": {"time": "2021-02-21 12:24:29.208478", "n_pass": [193, 50, 18], "n_token": 27, "loss": [0.5344939827919006, 0.6797505617141724], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["self", "new_bounds", "self", "new_bounds", "#NEWLINE#", "row", ",", "key", "in", "enumerate", "(", "self", ".", "pbounds", ".", ":", "self", ".", "bounds", "[", "row", "]", "=", "self", ".", "row", "]"]}}
{"position": {"error_location": 20, "repair_targets": [7], "repair_candidates": [1, 3, 7, 5, 20, 25, 0, 2, 11, 16, 23]}}
{"prediction": {"error_location": 0.585965633392334, "repair_targets": [0.5067433714866638], "repair_candidates": [0.046344514936208725, 0.00609118165448308, 0.005623196717351675, 0.4240260124206543, 0.007186274975538254, 0.5067433714866638, 9.220717038260773e-05, 4.8837289796210825e-05, 0.0007555844495072961, 0.0021369317546486855, 0.00095193280139938], "target_probs": 0.5067433714866638}}


{"result": {"time": "2021-02-21 12:24:29.582245", "n_pass": [202, 56, 19], "n_token": 26, "loss": [0.32672247290611267, 0.1832887828350067], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["self", "new_bounds", "self", "new_bounds", "#NEWLINE#", "row", ",", "key", "in", "enumerate", "(", "self", ".", "pbounds", ".", ":", "self", ".", "bounds", "[", "row", "]", "=", "self", "row", "]"]}}
{"position": {"error_location": 20, "repair_targets": [7], "repair_candidates": [1, 3, 7, 5, 20, 24, 0, 2, 11, 16, 23]}}
{"prediction": {"error_location": 0.7212839722633362, "repair_targets": [0.8325276970863342], "repair_candidates": [0.08936570584774017, 0.005743470508605242, 0.0008390976581722498, 0.06767211109399796, 0.0033406547736376524, 0.8325276970863342, 7.290807843673974e-05, 3.120103065157309e-05, 0.00021748051221948117, 0.00018086409545503557, 8.680663995619398e-06], "target_probs": 0.8325276970863342}}


{"result": {"time": "2021-02-21 12:24:29.891661", "n_pass": [214, 61, 20], "n_token": 25, "loss": [0.6388667821884155, 0.16994552314281464], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["self", "new_bounds", "self", "new_bounds", "#NEWLINE#", "row", ",", "key", "in", "(", "self", ".", "pbounds", ".", ":", "self", ".", "bounds", "[", "row", "]", "=", "self", "row", "]"]}}
{"position": {"error_location": 19, "repair_targets": [7], "repair_candidates": [1, 3, 7, 5, 19, 23, 0, 2, 10, 15, 22]}}
{"prediction": {"error_location": 0.5278902649879456, "repair_targets": [0.8437107801437378], "repair_candidates": [0.07616037130355835, 0.0046439021825790405, 0.0006863926537334919, 0.07121865451335907, 0.0031169417779892683, 0.8437107801437378, 0.00011971093772444874, 2.7560283342609182e-05, 0.00019053791766054928, 0.00011816719052148983, 6.964889507798944e-06], "target_probs": 0.8437107801437378}}


{"result": {"time": "2021-02-21 12:24:30.015585", "n_pass": [217, 63, 21], "n_token": 24, "loss": [0.8294478058815002, 0.042220041155815125], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["self", "new_bounds", "self", "new_bounds", "#NEWLINE#", "row", ",", "key", "in", "(", "self", "pbounds", ".", ":", "self", ".", "bounds", "[", "row", "]", "=", "self", "row", "]"]}}
{"position": {"error_location": 18, "repair_targets": [7], "repair_candidates": [1, 3, 7, 5, 18, 22, 0, 2, 10, 14, 21]}}
{"prediction": {"error_location": 0.4362901449203491, "repair_targets": [0.9586588144302368], "repair_candidates": [0.024977540597319603, 0.0011555798118934035, 0.00017361980280838907, 0.01241782121360302, 0.0021415490191429853, 0.9586588144302368, 0.0002746515383478254, 1.2944447007612325e-05, 0.0001414783182553947, 4.368068039184436e-05, 2.2168496798258275e-06], "target_probs": 0.9586588144302368}}


{"result": {"time": "2021-02-21 12:24:30.076499", "n_pass": [218, 64, 22], "n_token": 23, "loss": [0.5872593522071838, 0.15889835357666016], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["self", "new_bounds", "self", "new_bounds", "#NEWLINE#", "row", ",", "key", "in", "(", "self", ".", ":", "self", ".", "bounds", "[", "row", "]", "=", "self", "row", "]"]}}
{"position": {"error_location": 17, "repair_targets": [7], "repair_candidates": [1, 3, 7, 5, 17, 21, 0, 2, 10, 13, 20]}}
{"prediction": {"error_location": 0.5558485388755798, "repair_targets": [0.853083074092865], "repair_candidates": [0.09042437374591827, 0.004826756659895182, 0.0006701035308651626, 0.048125818371772766, 0.0020278298761695623, 0.853083074092865, 0.00029999794787727296, 2.2351583538693376e-05, 0.00032968760933727026, 0.00018168908718507737, 8.291866834042594e-06], "target_probs": 0.853083074092865}}


{"result": {"time": "2021-02-21 12:24:30.196753", "n_pass": [220, 66, 23], "n_token": 22, "loss": [0.5408507585525513, 0.3418114185333252], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["self", "new_bounds", "self", "new_bounds", "#NEWLINE#", "row", ",", "key", "in", "(", "self", ".", "self", ".", "bounds", "[", "row", "]", "=", "self", "row", "]"]}}
{"position": {"error_location": 16, "repair_targets": [7], "repair_candidates": [1, 3, 7, 5, 16, 20, 0, 2, 10, 12, 19]}}
{"prediction": {"error_location": 0.5822526812553406, "repair_targets": [0.7104821801185608], "repair_candidates": [0.16538730263710022, 0.010244411416351795, 0.0013763069873675704, 0.1060933768749237, 0.0042358445934951305, 0.7104821801185608, 0.00041077338391914964, 0.00032513728365302086, 0.0008009921875782311, 0.0006225358811207116, 2.111876347044017e-05], "target_probs": 0.7104821801185608}}


{"result": {"time": "2021-02-21 12:24:30.318274", "n_pass": [223, 68, 24], "n_token": 21, "loss": [0.07239899039268494, 0.2333664745092392], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["self", "new_bounds", "self", "new_bounds", "#NEWLINE#", "row", ",", "key", "in", "(", "self", ".", "self", ".", "[", "row", "]", "=", "self", "row", "]"]}}
{"position": {"error_location": 15, "repair_targets": [7], "repair_candidates": [1, 3, 7, 5, 15, 19, 0, 2, 10, 12, 18]}}
{"prediction": {"error_location": 0.9301596879959106, "repair_targets": [0.7918633222579956], "repair_candidates": [0.10137470811605453, 0.007246207445859909, 0.0008423823164775968, 0.09439200907945633, 0.0031931984703987837, 0.7918633222579956, 0.00026588563923723996, 0.00032330164685845375, 0.0003865257021971047, 0.00010818235023180023, 4.366213943285402e-06], "target_probs": 0.7918633222579956}}


{"result": {"time": "2021-02-21 12:24:30.554183", "n_pass": [230, 72, 25], "n_token": 20, "loss": [0.7499199509620667, 0.2666062116622925], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["self", "new_bounds", "self", "new_bounds", "#NEWLINE#", "row", ",", "key", "in", "(", "self", ".", "self", ".", "[", "row", "]", "=", "self", "row"]}}
{"position": {"error_location": 15, "repair_targets": [7], "repair_candidates": [1, 3, 7, 5, 15, 19, 0, 2, 10, 12, 18]}}
{"prediction": {"error_location": 0.4724043607711792, "repair_targets": [0.7659746408462524], "repair_candidates": [0.10354967415332794, 0.007284843362867832, 0.0008006166899576783, 0.11833911389112473, 0.0024745187256485224, 0.7659746408462524, 0.00021122145699337125, 0.0002255484723718837, 0.0010809164959937334, 5.1456052460707724e-05, 7.4233748819096945e-06], "target_probs": 0.7659746408462524}}




Minimal simplified tokens:

['self', 'new_bounds', 'self', 'new_bounds', '#NEWLINE#', 'row', ',', 'key', 'in', '(', 'self', '.', 'self', '.', '[', 'row', ']', '=', 'self', 'row']
