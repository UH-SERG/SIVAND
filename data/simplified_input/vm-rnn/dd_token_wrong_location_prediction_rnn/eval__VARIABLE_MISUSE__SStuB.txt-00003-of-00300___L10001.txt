
Original sample:

{"has_bug": true, "bug_kind": 1, "bug_kind_name": "VARIABLE_MISUSE", "source_tokens": ["#NEWLINE#", "def des_cbc_pkcs5_decrypt(", "key", ",", "data", ",", "iv", ")", ":", "#NEWLINE#", "#INDENT#", "'\\n    Decrypts DES ciphertext using a 56 bit key\\n\\n    :param key:\\n        The encryption key - a byte string 8 bytes long (includes error\\n        correction bits)\\n\\n    :param data:\\n        The ciphertext - a byte string\\n\\n    :param iv:\\n        The initialization vector used for encryption - a byte string\\n\\n    :raises:\\n        ValueError - when any of the parameters contain an invalid value\\n        TypeError - when any of the parameters are of the wrong type\\n        OSError - when an error is returned by the OS crypto library\\n\\n    :return:\\n        A byte string of the plaintext\\n    '", "#NEWLINE#", "if", "(", "len", "(", "key", ")", "!=", "8", ")", ":", "#NEWLINE#", "#INDENT#", "raise", "ValueError", "(", "pretty_message", "(", "'\\n            key must be 8 bytes (56 bits + 8 parity bits) long - is %s\\n            '", ",", "len", "(", "key", ")", ")", ")", "#NEWLINE#", "#UNINDENT#", "if", "(", "len", "(", "iv", ")", "!=", "8", ")", ":", "#NEWLINE#", "#INDENT#", "raise", "ValueError", "(", "pretty_message", "(", "'\\n            iv must be 8 bytes long - is %s\\n            '", ",", "len", "(", "iv", ")", ")", ")", "#NEWLINE#", "#UNINDENT#", "return", "_decrypt", "(", "'des'", ",", "data", ",", "data", ",", "iv", ",", "True", ")"], "error_location": [72], "repair_targets": [2, 17, 34], "repair_candidates": [6, 44, 61, 76, 4, 72, 74, 2, 17, 34], "provenances": [{"datasetProvenance": {"datasetName": "ETHPy150Open", "filepath": "wbond/oscrypto/oscrypto/_win/symmetric.py", "license": "mit", "note": "license: bigquery_api"}}], "txt_file": "eval__VARIABLE_MISUSE__SStuB.txt-00003-of-00300", "js_count": 10001, "results": {"model": "rnn", "prob": {"loc": [[0.07089761644601822, 0.0006506785866804421, 2.88046521745855e-05, 8.062039924539022e-09, 3.136734221698134e-06, 5.533631330933986e-10, 1.931394777443529e-08, 2.1910955272375077e-09, 7.630466924979373e-09, 8.975933241117673e-08, 3.461606823407237e-08, 1.5866779889961435e-08, 1.5331801250795252e-07, 3.384075242252038e-09, 2.8834142540290486e-07, 9.120294635067694e-06, 0.00021361721155699342, 0.6657597422599792, 1.151265564658388e-06, 3.4055597097903956e-07, 1.2014794265269302e-05, 5.3428724555715235e-08, 8.17874621361625e-08, 1.8816061242432625e-07, 2.376336105669452e-08, 9.801279077237268e-08, 1.7439623434256646e-07, 6.377796069045871e-08, 2.5457898118474986e-06, 4.0170203163825136e-08, 1.426106427970808e-05, 8.179753052672822e-08, 1.7077694565159618e-06, 6.077265425119549e-05, 0.07607309520244598, 5.214774319028948e-07, 1.4986986229814647e-07, 8.024992581567858e-08, 1.0687513452012354e-07, 5.923851063016627e-07, 1.4448244378684194e-08, 2.4967840772660566e-07, 9.695710332380258e-07, 6.073191798350308e-07, 0.026765652000904083, 2.2119901643691264e-07, 2.0917512699725194e-07, 7.825246939319186e-06, 6.054452228454466e-08, 8.025796915944738e-08, 1.9433055342688021e-07, 3.098611145446739e-08, 6.764737037201485e-08, 1.406489218425122e-07, 6.806294550187886e-08, 2.21347295337182e-06, 3.9810487351132906e-08, 7.432579877786338e-06, 1.4652033542006393e-07, 1.0898232005729369e-07, 3.636123437900096e-07, 0.010356293991208076, 2.7358464649296366e-07, 3.1317227922045277e-07, 1.4774093415326206e-07, 7.417758496330862e-08, 7.267546209277498e-08, 1.4699304884402409e-08, 1.4012918825301313e-07, 7.637321886022619e-08, 3.787435844060383e-06, 8.832435582917242e-08, 0.0660516694188118, 6.47302897505142e-07, 0.07947736233472824, 1.841245911293754e-08, 0.0035888883285224438, 9.444244142287062e-08, 1.8126794429917936e-06, 6.517358031032927e-08]], "pointer": [[0.0, 0.0, 0.4406109154224396, 0.0, 0.2514624297618866, 0.0, 0.1983805000782013, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0012760756071656942, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.061059195548295975, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.046097274869680405, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0009382408461533487, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 2.0198045604047365e-05, 0.0, 7.53770800656639e-05, 0.0, 7.980258669704199e-05, 0.0, 0.0, 0.0]], "target": [0.5029461979866028]}, "loss": [2.717318058013916, 0.6872720718383789], "acc": [0.0, 0.0, 1.0, 0.0]}, "wrong_error_location": [17]}


Trace of simplified code(s):

{"result": {"time": "2021-02-21 11:47:25.964943", "n_pass": [1, 1, 1], "n_token": 80, "loss": [0.40682658553123474, 0.6872720718383789], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def des_cbc_pkcs5_decrypt(", "key", ",", "data", ",", "iv", ")", ":", "#NEWLINE#", "#INDENT#", "'\\n    Decrypts DES ciphertext using a 56 bit key\\n\\n    :param key:\\n        The encryption key - a byte string 8 bytes long (includes error\\n        correction bits)\\n\\n    :param data:\\n        The ciphertext - a byte string\\n\\n    :param iv:\\n        The initialization vector used for encryption - a byte string\\n\\n    :raises:\\n        ValueError - when any of the parameters contain an invalid value\\n        TypeError - when any of the parameters are of the wrong type\\n        OSError - when an error is returned by the OS crypto library\\n\\n    :return:\\n        A byte string of the plaintext\\n    '", "#NEWLINE#", "if", "(", "len", "(", "key", ")", "!=", "8", ")", ":", "#NEWLINE#", "#INDENT#", "raise", "ValueError", "(", "pretty_message", "(", "'\\n            key must be 8 bytes (56 bits + 8 parity bits) long - is %s\\n            '", ",", "len", "(", "key", ")", ")", ")", "#NEWLINE#", "#UNINDENT#", "if", "(", "len", "(", "iv", ")", "!=", "8", ")", ":", "#NEWLINE#", "#INDENT#", "raise", "ValueError", "(", "pretty_message", "(", "'\\n            iv must be 8 bytes long - is %s\\n            '", ",", "len", "(", "iv", ")", ")", ")", "#NEWLINE#", "#UNINDENT#", "return", "_decrypt", "(", "'des'", ",", "data", ",", "data", ",", "iv", ",", "True", ")"]}}
{"position": {"error_location": 17, "repair_targets": [2, 17, 34], "repair_candidates": [6, 44, 61, 76, 4, 72, 74, 2, 17, 34]}}
{"prediction": {"error_location": 0.6657597422599792, "repair_targets": [0.4406109154224396, 0.0012760756071656942, 0.061059195548295975], "repair_candidates": [0.4406109154224396, 0.2514624297618866, 0.1983805000782013, 0.0012760756071656942, 0.061059195548295975, 0.046097274869680405, 0.0009382408461533487, 2.0198045604047365e-05, 7.53770800656639e-05, 7.980258669704199e-05], "target_probs": 0.5029461979866028}}


{"result": {"time": "2021-02-21 11:47:26.139157", "n_pass": [25, 3, 2], "n_token": 70, "loss": [0.6811155080795288, 0.3551231324672699], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def des_cbc_pkcs5_decrypt(", "key", ",", "data", ",", "iv", ")", ":", "#NEWLINE#", "#INDENT#", "'\\n    Decrypts DES ciphertext using a 56 bit key\\n\\n    :param key:\\n        The encryption key - a byte string 8 bytes long (includes error\\n        correction bits)\\n\\n    :param data:\\n        The ciphertext - a byte string\\n\\n    :param iv:\\n        The initialization vector used for encryption - a byte string\\n\\n    :raises:\\n        ValueError - when any of the parameters contain an invalid value\\n        TypeError - when any of the parameters are of the wrong type\\n        OSError - when an error is returned by the OS crypto library\\n\\n    :return:\\n        A byte string of the plaintext\\n    '", "#NEWLINE#", "if", "(", "len", "(", "key", ")", "!=", "8", ")", ":", "#NEWLINE#", "#INDENT#", "raise", "ValueError", "(", "pretty_message", "(", "'\\n            key must be 8 bytes (56 bits + 8 parity bits) long - is %s\\n            '", ",", "len", "(", "key", ")", ")", ")", "#NEWLINE#", "#UNINDENT#", "if", "(", "len", "(", "iv", ")", "!=", "8", ")", ":", "(", "iv", ")", ")", ")", "#NEWLINE#", "#UNINDENT#", "return", "_decrypt", "(", "'des'", ",", "data", ",", "data", ",", "iv", ",", "True", ")"]}}
{"position": {"error_location": 17, "repair_targets": [2, 17, 34], "repair_candidates": [6, 44, 51, 66, 4, 62, 64, 2, 17, 34]}}
{"prediction": {"error_location": 0.5060521960258484, "repair_targets": [0.5745419263839722, 0.002605485264211893, 0.12393968552350998], "repair_candidates": [0.5745419263839722, 0.08043897897005081, 0.16630467772483826, 0.002605485264211893, 0.12393968552350998, 0.05136410519480705, 0.000558700819965452, 3.7988917028997093e-05, 0.00011076696682721376, 9.77178497123532e-05], "target_probs": 0.7010871171951294}}


{"result": {"time": "2021-02-21 11:47:26.220494", "n_pass": [30, 4, 3], "n_token": 60, "loss": [0.8165313005447388, 0.412598580121994], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def des_cbc_pkcs5_decrypt(", "key", ",", "data", ",", "iv", ")", ":", "#NEWLINE#", "#INDENT#", "'\\n    Decrypts DES ciphertext using a 56 bit key\\n\\n    :param key:\\n        The encryption key - a byte string 8 bytes long (includes error\\n        correction bits)\\n\\n    :param data:\\n        The ciphertext - a byte string\\n\\n    :param iv:\\n        The initialization vector used for encryption - a byte string\\n\\n    :raises:\\n        ValueError - when any of the parameters contain an invalid value\\n        TypeError - when any of the parameters are of the wrong type\\n        OSError - when an error is returned by the OS crypto library\\n\\n    :return:\\n        A byte string of the plaintext\\n    '", "#NEWLINE#", "if", "(", "len", "(", "key", ")", "!=", "'\\n            key must be 8 bytes (56 bits + 8 parity bits) long - is %s\\n            '", ",", "len", "(", "key", ")", ")", ")", "#NEWLINE#", "#UNINDENT#", "if", "(", "len", "(", "iv", ")", "!=", "8", ")", ":", "(", "iv", ")", ")", ")", "#NEWLINE#", "#UNINDENT#", "return", "_decrypt", "(", "'des'", ",", "data", ",", "data", ",", "iv", ",", "True", ")"]}}
{"position": {"error_location": 17, "repair_targets": [2, 17, 24], "repair_candidates": [6, 34, 41, 56, 4, 52, 54, 2, 17, 24]}}
{"prediction": {"error_location": 0.44196203351020813, "repair_targets": [0.5882405042648315, 0.00673059793189168, 0.06695686280727386], "repair_candidates": [0.5882405042648315, 0.06667111068964005, 0.19593866169452667, 0.00673059793189168, 0.06695686280727386, 0.07437297701835632, 0.0008288141689263284, 4.059364437125623e-05, 0.00011308889952488244, 0.00010686588211683556], "target_probs": 0.6619279384613037}}


{"result": {"time": "2021-02-21 11:47:26.376784", "n_pass": [52, 6, 4], "n_token": 55, "loss": [1.1994458436965942, 0.2655435800552368], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def des_cbc_pkcs5_decrypt(", "key", ",", "data", ",", "iv", ")", ":", "#NEWLINE#", "#INDENT#", "'\\n    Decrypts DES ciphertext using a 56 bit key\\n\\n    :param key:\\n        The encryption key - a byte string 8 bytes long (includes error\\n        correction bits)\\n\\n    :param data:\\n        The ciphertext - a byte string\\n\\n    :param iv:\\n        The initialization vector used for encryption - a byte string\\n\\n    :raises:\\n        ValueError - when any of the parameters contain an invalid value\\n        TypeError - when any of the parameters are of the wrong type\\n        OSError - when an error is returned by the OS crypto library\\n\\n    :return:\\n        A byte string of the plaintext\\n    '", "#NEWLINE#", "if", "(", "len", "(", "key", ")", "!=", "'\\n            key must be 8 bytes (56 bits + 8 parity bits) long - is %s\\n            '", ",", "len", "(", "key", ")", ")", ")", "#NEWLINE#", "#UNINDENT#", "if", "(", "len", "(", "iv", "(", "iv", ")", ")", ")", "#NEWLINE#", "#UNINDENT#", "return", "_decrypt", "(", "'des'", ",", "data", ",", "data", ",", "iv", ",", "True", ")"]}}
{"position": {"error_location": 17, "repair_targets": [2, 17, 24], "repair_candidates": [6, 34, 36, 51, 4, 47, 49, 2, 17, 24]}}
{"prediction": {"error_location": 0.30136120319366455, "repair_targets": [0.7063162326812744, 0.010148449800908566, 0.05032433196902275], "repair_candidates": [0.7063162326812744, 0.03141174837946892, 0.19678924977779388, 0.010148449800908566, 0.05032433196902275, 0.0011230760719627142, 0.0036426258739084005, 3.7290235923137516e-05, 0.00010559226939221844, 0.00010139235382666811], "target_probs": 0.7667890191078186}}


{"result": {"time": "2021-02-21 11:47:26.680326", "n_pass": [85, 10, 5], "n_token": 52, "loss": [1.3131976127624512, 0.22846195101737976], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def des_cbc_pkcs5_decrypt(", "key", ",", "data", ",", "iv", ")", ":", "#NEWLINE#", "#INDENT#", "'\\n    Decrypts DES ciphertext using a 56 bit key\\n\\n    :param key:\\n        The encryption key - a byte string 8 bytes long (includes error\\n        correction bits)\\n\\n    :param data:\\n        The ciphertext - a byte string\\n\\n    :param iv:\\n        The initialization vector used for encryption - a byte string\\n\\n    :raises:\\n        ValueError - when any of the parameters contain an invalid value\\n        TypeError - when any of the parameters are of the wrong type\\n        OSError - when an error is returned by the OS crypto library\\n\\n    :return:\\n        A byte string of the plaintext\\n    '", "#NEWLINE#", "if", "(", "len", "(", "key", ")", "!=", "'\\n            key must be 8 bytes (56 bits + 8 parity bits) long - is %s\\n            '", ",", "len", "(", "key", ")", ")", ")", "#NEWLINE#", "#UNINDENT#", "if", "iv", "(", "iv", ")", ")", ")", "#NEWLINE#", "#UNINDENT#", "return", "_decrypt", "(", "'des'", ",", "data", ",", "data", ",", "iv", ",", "True", ")"]}}
{"position": {"error_location": 17, "repair_targets": [2, 17, 24], "repair_candidates": [6, 31, 33, 48, 4, 44, 46, 2, 17, 24]}}
{"prediction": {"error_location": 0.2689586281776428, "repair_targets": [0.7388076186180115, 0.0101667121052742, 0.04678225517272949], "repair_candidates": [0.7388076186180115, 0.021650541573762894, 0.17906422913074493, 0.0101667121052742, 0.04678225517272949, 0.0018387051532045007, 0.0014081179397180676, 3.662790186353959e-05, 0.00011874980555148795, 0.00012644456000998616], "target_probs": 0.7957565784454346}}


{"result": {"time": "2021-02-21 11:47:26.754776", "n_pass": [87, 11, 6], "n_token": 49, "loss": [1.331735372543335, 0.37676167488098145], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def des_cbc_pkcs5_decrypt(", "key", ",", "data", ",", "iv", ")", ":", "#NEWLINE#", "#INDENT#", "'\\n    Decrypts DES ciphertext using a 56 bit key\\n\\n    :param key:\\n        The encryption key - a byte string 8 bytes long (includes error\\n        correction bits)\\n\\n    :param data:\\n        The ciphertext - a byte string\\n\\n    :param iv:\\n        The initialization vector used for encryption - a byte string\\n\\n    :raises:\\n        ValueError - when any of the parameters contain an invalid value\\n        TypeError - when any of the parameters are of the wrong type\\n        OSError - when an error is returned by the OS crypto library\\n\\n    :return:\\n        A byte string of the plaintext\\n    '", "#NEWLINE#", "if", "(", "len", "(", "key", ")", "!=", "'\\n            key must be 8 bytes (56 bits + 8 parity bits) long - is %s\\n            '", ",", "len", "(", "key", ")", ")", ")", "#NEWLINE#", "#UNINDENT#", "if", "iv", "(", "iv", "#NEWLINE#", "#UNINDENT#", "return", "_decrypt", "(", "'des'", ",", "data", ",", "data", ",", "iv", ",", "True", ")"]}}
{"position": {"error_location": 17, "repair_targets": [2, 17, 24], "repair_candidates": [6, 31, 33, 45, 4, 41, 43, 2, 17, 24]}}
{"prediction": {"error_location": 0.2640186846256256, "repair_targets": [0.6460184454917908, 0.00813735369592905, 0.03192378580570221], "repair_candidates": [0.6460184454917908, 0.04253465682268143, 0.2684275507926941, 0.00813735369592905, 0.03192378580570221, 0.0022416780702769756, 0.00046477335854433477, 2.94233195745619e-05, 8.811021689325571e-05, 0.00013425365614239126], "target_probs": 0.6860795617103577}}


{"result": {"time": "2021-02-21 11:47:27.195640", "n_pass": [98, 17, 7], "n_token": 47, "loss": [0.8380564451217651, 0.38211387395858765], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def des_cbc_pkcs5_decrypt(", "key", ",", "data", ",", "iv", ")", ":", "#NEWLINE#", "#NEWLINE#", "if", "(", "len", "(", "key", ")", "!=", "'\\n            key must be 8 bytes (56 bits + 8 parity bits) long - is %s\\n            '", ",", "len", "(", "key", ")", ")", ")", "#NEWLINE#", "#UNINDENT#", "if", "iv", "(", "iv", "#NEWLINE#", "#UNINDENT#", "return", "_decrypt", "(", "'des'", ",", "data", ",", "data", ",", "iv", ",", "True", ")"]}}
{"position": {"error_location": 15, "repair_targets": [2, 15, 22], "repair_candidates": [6, 29, 31, 43, 4, 39, 41, 2, 15, 22]}}
{"prediction": {"error_location": 0.4325504004955292, "repair_targets": [0.5987814664840698, 0.027168264612555504, 0.05646757408976555], "repair_candidates": [0.5987814664840698, 0.04254426434636116, 0.2729753255844116, 0.027168264612555504, 0.05646757408976555, 0.00136002863291651, 0.0005134307430125773, 2.213096377090551e-05, 6.254210893530399e-05, 0.0001050080536515452], "target_probs": 0.6824173331260681}}


{"result": {"time": "2021-02-21 11:47:27.486529", "n_pass": [103, 21, 8], "n_token": 45, "loss": [1.009023904800415, 0.4070771336555481], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def des_cbc_pkcs5_decrypt(", "key", ",", "data", ",", "iv", ")", ":", "#NEWLINE#", "#NEWLINE#", "if", "(", "len", "(", "key", ")", "!=", "len", "(", "key", ")", ")", ")", "#NEWLINE#", "#UNINDENT#", "if", "iv", "(", "iv", "#NEWLINE#", "#UNINDENT#", "return", "_decrypt", "(", "'des'", ",", "data", ",", "data", ",", "iv", ",", "True", ")"]}}
{"position": {"error_location": 15, "repair_targets": [2, 15, 20], "repair_candidates": [6, 27, 29, 41, 4, 37, 39, 2, 15, 20]}}
{"prediction": {"error_location": 0.3645746409893036, "repair_targets": [0.625186026096344, 0.02353512868285179, 0.01687166839838028], "repair_candidates": [0.625186026096344, 0.052214354276657104, 0.2797931134700775, 0.02353512868285179, 0.01687166839838028, 0.0017089179018512368, 0.0005066557205282152, 2.0003612007712945e-05, 6.013123129378073e-05, 0.00010405927605461329], "target_probs": 0.6655928492546082}}


{"result": {"time": "2021-02-21 11:47:27.557068", "n_pass": [105, 22, 9], "n_token": 42, "loss": [0.6789624094963074, 0.5376809239387512], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def des_cbc_pkcs5_decrypt(", "key", ",", "data", ",", "iv", ")", ":", "#NEWLINE#", "#NEWLINE#", "if", "(", "len", "(", "key", ")", "!=", "len", "(", "key", "#NEWLINE#", "#UNINDENT#", "if", "iv", "(", "iv", "#NEWLINE#", "#UNINDENT#", "return", "_decrypt", "(", "'des'", ",", "data", ",", "data", ",", "iv", ",", "True", ")"]}}
{"position": {"error_location": 15, "repair_targets": [2, 15, 20], "repair_candidates": [6, 24, 26, 38, 4, 34, 36, 2, 15, 20]}}
{"prediction": {"error_location": 0.5071429014205933, "repair_targets": [0.5656920671463013, 0.015208941884338856, 0.0032002150546759367], "repair_candidates": [0.5656920671463013, 0.08987482637166977, 0.3232826590538025, 0.015208941884338856, 0.0032002150546759367, 0.0019358753925189376, 0.0005371700972318649, 2.8901979021611623e-05, 9.249532740795985e-05, 0.00014685463975183666], "target_probs": 0.5841012597084045}}


{"result": {"time": "2021-02-21 11:47:27.694787", "n_pass": [108, 24, 10], "n_token": 39, "loss": [1.0807645320892334, 0.4230513870716095], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def des_cbc_pkcs5_decrypt(", "key", ",", "data", ",", "iv", ")", ":", "#NEWLINE#", "#NEWLINE#", "if", "(", "len", "(", "key", ")", "!=", "len", "(", "key", "#NEWLINE#", "#UNINDENT#", "if", "iv", "(", "iv", "_decrypt", "(", "'des'", ",", "data", ",", "data", ",", "iv", ",", "True", ")"]}}
{"position": {"error_location": 15, "repair_targets": [2, 15, 20], "repair_candidates": [6, 24, 26, 35, 4, 31, 33, 2, 15, 20]}}
{"prediction": {"error_location": 0.33933597803115845, "repair_targets": [0.6232283711433411, 0.02975672297179699, 0.002059880644083023], "repair_candidates": [0.6232283711433411, 0.060074541717767715, 0.2809183597564697, 0.02975672297179699, 0.002059880644083023, 0.001746681286022067, 0.0019453600980341434, 5.552254515350796e-05, 0.00011098467803094536, 0.0001035460300045088], "target_probs": 0.6550449728965759}}


{"result": {"time": "2021-02-21 11:47:27.831237", "n_pass": [112, 26, 11], "n_token": 36, "loss": [0.915273904800415, 0.41155052185058594], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def des_cbc_pkcs5_decrypt(", "key", ",", "data", ",", "iv", ")", ":", "#NEWLINE#", "#NEWLINE#", "if", "(", "len", "(", "key", ")", "!=", "len", "(", "key", "#NEWLINE#", "#UNINDENT#", "if", "iv", "(", "iv", "_decrypt", "(", "'des'", ",", "data", ",", "data", ",", "iv"]}}
{"position": {"error_location": 15, "repair_targets": [2, 15, 20], "repair_candidates": [6, 24, 26, 35, 4, 31, 33, 2, 15, 20]}}
{"prediction": {"error_location": 0.4004068970680237, "repair_targets": [0.6340327262878418, 0.02656455896794796, 0.002024772809818387], "repair_candidates": [0.6340327262878418, 0.04192749038338661, 0.2921573519706726, 0.02656455896794796, 0.002024772809818387, 0.0011098087998107076, 0.001989089883863926, 3.9707865653326735e-05, 9.020621655508876e-05, 6.431168003473431e-05], "target_probs": 0.6626220345497131}}


{"result": {"time": "2021-02-21 11:47:28.364379", "n_pass": [158, 34, 12], "n_token": 35, "loss": [0.6816864013671875, 0.570172905921936], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["def des_cbc_pkcs5_decrypt(", "key", ",", "data", ",", "iv", ")", ":", "#NEWLINE#", "#NEWLINE#", "if", "(", "len", "(", "key", ")", "!=", "len", "(", "key", "#NEWLINE#", "#UNINDENT#", "if", "iv", "(", "iv", "_decrypt", "(", "'des'", ",", "data", ",", "data", ",", "iv"]}}
{"position": {"error_location": 14, "repair_targets": [1, 14, 19], "repair_candidates": [5, 23, 25, 34, 3, 30, 32, 1, 14, 19]}}
{"prediction": {"error_location": 0.5057634115219116, "repair_targets": [0.534816563129425, 0.02849382907152176, 0.0021172857377678156], "repair_candidates": [0.534816563129425, 0.08616749942302704, 0.3448261618614197, 0.02849382907152176, 0.0021172857377678156, 0.0012486567720770836, 0.002023248467594385, 4.6542561904061586e-05, 0.00013764065806753933, 0.00012253237946424633], "target_probs": 0.5654276609420776}}


{"result": {"time": "2021-02-21 11:47:28.562313", "n_pass": [164, 37, 13], "n_token": 34, "loss": [1.0145902633666992, 0.566102147102356], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["def des_cbc_pkcs5_decrypt(", "key", ",", "data", ",", "iv", ":", "#NEWLINE#", "#NEWLINE#", "if", "(", "len", "(", "key", ")", "!=", "len", "(", "key", "#NEWLINE#", "#UNINDENT#", "if", "iv", "(", "iv", "_decrypt", "(", "'des'", ",", "data", ",", "data", ",", "iv"]}}
{"position": {"error_location": 13, "repair_targets": [1, 13, 18], "repair_candidates": [5, 22, 24, 33, 3, 29, 31, 1, 13, 18]}}
{"prediction": {"error_location": 0.3625509440898895, "repair_targets": [0.5461835861206055, 0.019365593791007996, 0.002184855053201318], "repair_candidates": [0.5461835861206055, 0.15056267380714417, 0.2783478796482086, 0.019365593791007996, 0.002184855053201318, 0.0013290493516251445, 0.001688470016233623, 4.853110294789076e-05, 0.00014505026047118008, 0.00014427768473979086], "target_probs": 0.5677340626716614}}


{"result": {"time": "2021-02-21 11:47:29.092854", "n_pass": [173, 45, 14], "n_token": 33, "loss": [1.1436630487442017, 0.6716729402542114], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["def des_cbc_pkcs5_decrypt(", "key", ",", "data", ",", "iv", ":", "#NEWLINE#", "#NEWLINE#", "if", "(", "len", "(", "key", "!=", "len", "(", "key", "#NEWLINE#", "#UNINDENT#", "if", "iv", "(", "iv", "_decrypt", "(", "'des'", ",", "data", ",", "data", ",", "iv"]}}
{"position": {"error_location": 13, "repair_targets": [1, 13, 17], "repair_candidates": [5, 21, 23, 32, 3, 28, 30, 1, 13, 17]}}
{"prediction": {"error_location": 0.31864967942237854, "repair_targets": [0.503104031085968, 0.006684957537800074, 0.001064244657754898], "repair_candidates": [0.503104031085968, 0.23046875, 0.255586177110672, 0.006684957537800074, 0.001064244657754898, 0.0012250426225364208, 0.0014921746915206313, 5.0427650421625e-05, 0.00016993755707517266, 0.0001541919627925381], "target_probs": 0.5108532309532166}}


{"result": {"time": "2021-02-21 11:47:29.222473", "n_pass": [175, 47, 15], "n_token": 32, "loss": [0.9053426384925842, 0.5123381018638611], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["def des_cbc_pkcs5_decrypt(", "key", ",", "data", ",", "iv", ":", "#NEWLINE#", "#NEWLINE#", "if", "(", "len", "(", "key", "!=", "(", "key", "#NEWLINE#", "#UNINDENT#", "if", "iv", "(", "iv", "_decrypt", "(", "'des'", ",", "data", ",", "data", ",", "iv"]}}
{"position": {"error_location": 13, "repair_targets": [1, 13, 16], "repair_candidates": [5, 20, 22, 31, 3, 27, 29, 1, 13, 16]}}
{"prediction": {"error_location": 0.40440329909324646, "repair_targets": [0.589957058429718, 0.008349645882844925, 0.0007865073275752366], "repair_candidates": [0.589957058429718, 0.13649486005306244, 0.2598019540309906, 0.008349645882844925, 0.0007865073275752366, 0.0019851780962198973, 0.0021455539390444756, 7.25885183783248e-05, 0.0002188678627135232, 0.0001877742470242083], "target_probs": 0.5990931987762451}}


{"result": {"time": "2021-02-21 11:47:29.419035", "n_pass": [179, 50, 16], "n_token": 31, "loss": [1.0054250955581665, 0.48606061935424805], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["def des_cbc_pkcs5_decrypt(", "key", ",", "data", ",", "iv", ":", "#NEWLINE#", "#NEWLINE#", "if", "(", "len", "(", "key", "!=", "(", "key", "#NEWLINE#", "if", "iv", "(", "iv", "_decrypt", "(", "'des'", ",", "data", ",", "data", ",", "iv"]}}
{"position": {"error_location": 13, "repair_targets": [1, 13, 16], "repair_candidates": [5, 19, 21, 30, 3, 26, 28, 1, 13, 16]}}
{"prediction": {"error_location": 0.3658890426158905, "repair_targets": [0.6051803231239319, 0.009017128497362137, 0.0008470752509310842], "repair_candidates": [0.6051803231239319, 0.13666683435440063, 0.2449624389410019, 0.009017128497362137, 0.0008470752509310842, 0.0014022289542481303, 0.0015498677967116237, 5.581729783443734e-05, 0.00016840375610627234, 0.0001499656355008483], "target_probs": 0.6150445342063904}}


{"result": {"time": "2021-02-21 11:47:30.449543", "n_pass": [217, 66, 17], "n_token": 30, "loss": [0.6878975033760071, 0.5395727753639221], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["def des_cbc_pkcs5_decrypt(", "key", ",", "data", ",", "iv", ":", "#NEWLINE#", "#NEWLINE#", "if", "(", "len", "(", "key", "!=", "(", "key", "#NEWLINE#", "if", "iv", "(", "iv", "(", "'des'", ",", "data", ",", "data", ",", "iv"]}}
{"position": {"error_location": 13, "repair_targets": [1, 13, 16], "repair_candidates": [5, 19, 21, 29, 3, 25, 27, 1, 13, 16]}}
{"prediction": {"error_location": 0.5026317238807678, "repair_targets": [0.5770730972290039, 0.005072200205177069, 0.0008519688271917403], "repair_candidates": [0.5770730972290039, 0.18092358112335205, 0.2290177345275879, 0.005072200205177069, 0.0008519688271917403, 0.002282949397340417, 0.004259082954376936, 0.00012609940313268453, 0.00024295449838973582, 0.0001503362727817148], "target_probs": 0.5829972624778748}}


{"result": {"time": "2021-02-21 11:47:30.513562", "n_pass": [218, 67, 18], "n_token": 29, "loss": [0.49229565262794495, 0.5329803824424744], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["def des_cbc_pkcs5_decrypt(", "key", ",", "data", ",", "iv", ":", "#NEWLINE#", "#NEWLINE#", "if", "(", "len", "(", "key", "!=", "(", "key", "#NEWLINE#", "if", "iv", "(", "iv", "'des'", ",", "data", ",", "data", ",", "iv"]}}
{"position": {"error_location": 13, "repair_targets": [1, 13, 16], "repair_candidates": [5, 19, 21, 28, 3, 24, 26, 1, 13, 16]}}
{"prediction": {"error_location": 0.6112215518951416, "repair_targets": [0.5806563496589661, 0.005356262903660536, 0.0008407527930103242], "repair_candidates": [0.5806563496589661, 0.15168461203575134, 0.24490627646446228, 0.005356262903660536, 0.0008407527930103242, 0.0027901954017579556, 0.012924648821353912, 0.00021168214152567089, 0.000442091521108523, 0.00018712451856117696], "target_probs": 0.5868533253669739}}


{"result": {"time": "2021-02-21 11:47:31.024514", "n_pass": [232, 75, 19], "n_token": 28, "loss": [0.7649492025375366, 0.45985180139541626], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["def des_cbc_pkcs5_decrypt(", "key", ",", "data", ",", "iv", "#NEWLINE#", "#NEWLINE#", "if", "(", "len", "(", "key", "!=", "(", "key", "#NEWLINE#", "if", "iv", "(", "iv", "'des'", ",", "data", ",", "data", ",", "iv"]}}
{"position": {"error_location": 12, "repair_targets": [1, 12, 15], "repair_candidates": [5, 18, 20, 27, 3, 23, 25, 1, 12, 15]}}
{"prediction": {"error_location": 0.46535757184028625, "repair_targets": [0.6175475120544434, 0.012447109445929527, 0.0013826063368469477], "repair_candidates": [0.6175475120544434, 0.11164689809083939, 0.24247002601623535, 0.012447109445929527, 0.0013826063368469477, 0.0023291611578315496, 0.01130304578691721, 0.00027299803332425654, 0.0004017442115582526, 0.00019888531824108213], "target_probs": 0.6313772201538086}}


{"result": {"time": "2021-02-21 11:47:31.528521", "n_pass": [241, 83, 20], "n_token": 27, "loss": [0.40919923782348633, 0.6376614570617676], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["def des_cbc_pkcs5_decrypt(", "key", ",", "data", ",", "iv", "#NEWLINE#", "#NEWLINE#", "if", "(", "len", "(", "key", "!=", "key", "#NEWLINE#", "if", "iv", "(", "iv", "'des'", ",", "data", ",", "data", ",", "iv"]}}
{"position": {"error_location": 12, "repair_targets": [1, 12, 14], "repair_candidates": [5, 17, 19, 26, 3, 22, 24, 1, 12, 14]}}
{"prediction": {"error_location": 0.6641818284988403, "repair_targets": [0.5203258395195007, 0.005771745927631855, 0.002429381711408496], "repair_candidates": [0.5203258395195007, 0.2589302062988281, 0.2001163512468338, 0.005771745927631855, 0.002429381711408496, 0.0015043974854052067, 0.01000853069126606, 0.0002826839918270707, 0.0004272024962119758, 0.00020370441779959947], "target_probs": 0.5285269618034363}}


{"result": {"time": "2021-02-21 11:47:31.590823", "n_pass": [243, 84, 21], "n_token": 26, "loss": [1.0028765201568604, 0.42563575506210327], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["def des_cbc_pkcs5_decrypt(", "key", ",", "data", ",", "iv", "#NEWLINE#", "#NEWLINE#", "if", "(", "len", "(", "key", "!=", "key", "if", "iv", "(", "iv", "'des'", ",", "data", ",", "data", ",", "iv"]}}
{"position": {"error_location": 12, "repair_targets": [1, 12, 14], "repair_candidates": [5, 16, 18, 25, 3, 21, 23, 1, 12, 14]}}
{"prediction": {"error_location": 0.3668228089809418, "repair_targets": [0.6358449459075928, 0.015842944383621216, 0.0016663807909935713], "repair_candidates": [0.6358449459075928, 0.08418393135070801, 0.23669669032096863, 0.015842944383621216, 0.0016663807909935713, 0.0017835720209404826, 0.02263164520263672, 0.0004971282323822379, 0.0006056801066733897, 0.0002471210027579218], "target_probs": 0.653354287147522}}


{"result": {"time": "2021-02-21 11:47:31.839815", "n_pass": [249, 88, 22], "n_token": 25, "loss": [0.5123595595359802, 0.6278945207595825], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["def des_cbc_pkcs5_decrypt(", "key", ",", "data", ",", "iv", "#NEWLINE#", "#NEWLINE#", "if", "(", "len", "(", "key", "!=", "key", "if", "iv", "(", "iv", "'des'", "data", ",", "data", ",", "iv"]}}
{"position": {"error_location": 12, "repair_targets": [1, 12, 14], "repair_candidates": [5, 16, 18, 24, 3, 20, 22, 1, 12, 14]}}
{"prediction": {"error_location": 0.5990803241729736, "repair_targets": [0.5255507230758667, 0.0070752715691924095, 0.001088359858840704], "repair_candidates": [0.5255507230758667, 0.20030175149440765, 0.25430628657341003, 0.0070752715691924095, 0.001088359858840704, 0.0010064037051051855, 0.008950765244662762, 0.0006628343835473061, 0.0008446496794931591, 0.00021297989587765187], "target_probs": 0.5337143540382385}}


{"result": {"time": "2021-02-21 11:47:32.208159", "n_pass": [261, 94, 23], "n_token": 24, "loss": [0.76920485496521, 0.5107444524765015], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["def des_cbc_pkcs5_decrypt(", "key", ",", "data", ",", "iv", "#NEWLINE#", "if", "(", "len", "(", "key", "!=", "key", "if", "iv", "(", "iv", "'des'", "data", ",", "data", ",", "iv"]}}
{"position": {"error_location": 11, "repair_targets": [1, 11, 13], "repair_candidates": [5, 15, 17, 23, 3, 19, 21, 1, 11, 13]}}
{"prediction": {"error_location": 0.4633813798427582, "repair_targets": [0.5888527035713196, 0.009766640141606331, 0.0014293543063104153], "repair_candidates": [0.5888527035713196, 0.21787695586681366, 0.1723226010799408, 0.009766640141606331, 0.0014293543063104153, 0.0009482636232860386, 0.007233527023345232, 0.0005665138596668839, 0.0007994170882739127, 0.00020404576207511127], "target_probs": 0.6000487208366394}}


{"result": {"time": "2021-02-21 11:47:32.698786", "n_pass": [272, 102, 24], "n_token": 23, "loss": [0.816559374332428, 0.6806213855743408], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["def des_cbc_pkcs5_decrypt(", "key", ",", "data", ",", "iv", "#NEWLINE#", "if", "(", "len", "(", "key", "!=", "key", "if", "iv", "iv", "'des'", "data", ",", "data", ",", "iv"]}}
{"position": {"error_location": 11, "repair_targets": [1, 11, 13], "repair_candidates": [5, 15, 16, 22, 3, 18, 20, 1, 11, 13]}}
{"prediction": {"error_location": 0.44194963574409485, "repair_targets": [0.4979516565799713, 0.006856875494122505, 0.0014937679516151547], "repair_candidates": [0.4979516565799713, 0.2924565076828003, 0.19675767421722412, 0.006856875494122505, 0.0014937679516151547, 0.0012412182986736298, 0.0011004699626937509, 0.0008560388232581317, 0.001065374817699194, 0.00022038572933524847], "target_probs": 0.5063022971153259}}




Minimal simplified tokens:

['def des_cbc_pkcs5_decrypt(', 'key', ',', 'data', ',', 'iv', '#NEWLINE#', 'if', '(', 'len', '(', 'key', '!=', 'key', 'if', 'iv', 'iv', "'des'", 'data', ',', 'data', ',', 'iv']
