
Original sample:

{"has_bug": true, "bug_kind": 1, "bug_kind_name": "VARIABLE_MISUSE", "source_tokens": ["#NEWLINE#", "def test_badcmd(", "self", ")", ":", "#NEWLINE#", "#INDENT#", "logging", ".", "debug", "(", "''", ")", "#NEWLINE#", "logging", ".", "debug", "(", "'test_badcmd'", ")", "#NEWLINE#", "extcode", "=", "set_as_top", "(", "ExternalCode", "(", ")", ")", "#NEWLINE#", "extcode", ".", "command", "=", "[", "'no-such-command'", "]", "#NEWLINE#", "try", ":", "#NEWLINE#", "#INDENT#", "extcode", ".", "run", "(", ")", "#NEWLINE#", "#UNINDENT#", "except", "ValueError", "as", "exc", ":", "#NEWLINE#", "#INDENT#", "msg", "=", "\": The command to be executed, 'no-such-command', cannot be found\"", "#NEWLINE#", "self", ".", "assertEqual", "(", "str", "(", "msg", ")", ",", "msg", ")", "#NEWLINE#", "self", ".", "assertEqual", "(", "extcode", ".", "return_code", ",", "(", "-", "999999", ")", ")", "#NEWLINE#", "#UNINDENT#", "else", ":", "#NEWLINE#", "#INDENT#", "self", ".", "fail", "(", "'Expected OSError'", ")"], "error_location": [66], "repair_targets": [52], "repair_candidates": [52, 2, 60, 72, 91, 56, 66, 69, 21, 30, 42, 76], "provenances": [{"datasetProvenance": {"datasetName": "ETHPy150Open", "filepath": "OpenMDAO/OpenMDAO-Framework/openmdao.lib/src/openmdao/lib/components/test/test_extcode.py", "license": "apache-2.0", "note": "license: manual_eval"}}], "txt_file": "eval__VARIABLE_MISUSE__SStuB.txt-00015-of-00300", "js_count": 49199, "results": {"model": "rnn", "prob": {"loc": [[0.004705972038209438, 1.8426239023483504e-07, 3.0845416887359534e-08, 2.6166158129115047e-10, 1.2976208996207106e-10, 3.80924003451355e-09, 3.028370609836628e-10, 3.570273798825241e-10, 8.352402103284362e-10, 6.774917848950679e-10, 1.906272695251232e-09, 3.477779175753426e-09, 7.743310437291484e-10, 9.186035931918468e-09, 1.4450222129980261e-09, 1.5371477424253044e-09, 3.7956029985686257e-10, 9.809769663249313e-10, 4.4740158244849226e-08, 4.546744578060036e-11, 1.234864210886144e-09, 1.402726379495789e-09, 6.750165426616661e-10, 1.7014292197359282e-08, 2.1878535094721485e-10, 1.1459669657654104e-08, 5.66407615254505e-11, 2.345041938411896e-09, 1.0145183998444551e-10, 8.58773940848323e-10, 2.483679484299728e-09, 3.016702443403574e-10, 1.8406434709739017e-10, 5.241995171267888e-10, 1.8609919161249877e-09, 3.291877048727798e-10, 4.462004099536898e-10, 3.622683264481452e-09, 9.123785282838526e-09, 6.220536863388304e-10, 3.4614464627935604e-09, 2.5680491066992772e-09, 6.954685716209497e-09, 9.712195492284081e-10, 3.1874397565800905e-10, 6.072278790902885e-10, 1.985611897126205e-09, 2.8638766913502423e-09, 2.7648173528405096e-08, 1.3842789137186173e-08, 6.977499023008704e-09, 3.8540633795491885e-08, 5.896131138882765e-09, 1.2662404458296805e-09, 2.111667107840276e-08, 2.5926618629767972e-09, 1.325722251976913e-07, 1.719591580240376e-08, 1.2000976212789283e-08, 2.7237394562007466e-08, 3.5290543110022554e-07, 2.253802700025176e-09, 2.4969519785145167e-08, 1.7890100068029824e-08, 2.1920590143054142e-07, 6.406076558107543e-09, 0.061975426971912384, 3.2310985886851995e-08, 1.4745213938738289e-08, 0.1318558156490326, 6.0752589625678866e-09, 1.0778738790406805e-08, 9.821616231420194e-07, 2.6092361604668213e-09, 3.574454154886553e-08, 1.7380052668158896e-05, 0.801437497138977, 6.83062708617399e-08, 2.2663492416086228e-07, 2.167546697684486e-10, 2.6844698908234932e-08, 2.0799647870717308e-07, 3.3830731354100863e-06, 2.5633215550158184e-09, 1.0173265563295786e-09, 2.2178325842503455e-09, 5.316766049645594e-08, 2.3133490678617363e-09, 2.07906367677424e-08, 3.907288714799506e-08, 9.503403619604e-10, 1.462640852878394e-06, 2.9183944150190655e-10, 1.739286603630319e-09, 1.4707457474116836e-09, 1.1562680812815529e-09, 1.449422137866918e-09]], "pointer": [[0.0, 0.0, 1.3936230971012264e-05, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 5.763431909144856e-05, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.592677472217474e-05, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.1824947705463273e-06, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.9998981952667236, 0.0, 0.0, 0.0, 9.113830856222194e-06, 0.0, 0.0, 0.0, 3.1594208849128336e-06, 0.0, 0.0, 0.0, 0.0, 0.0, 3.0447392873611534e-07, 0.0, 0.0, 1.61496672035355e-07, 0.0, 0.0, 2.5493530841913525e-08, 0.0, 0.0, 0.0, 2.1451035081554437e-07, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 2.0857795490769604e-08, 0.0, 0.0, 0.0, 0.0, 0.0]], "target": [0.9998981952667236]}, "loss": [2.781017303466797, 0.00010180991375818849], "acc": [0.0, 0.0, 1.0, 0.0]}, "wrong_error_location": [76]}


Trace of simplified code(s):

{"result": {"time": "2021-02-21 13:08:41.282719", "n_pass": [1, 1, 1], "n_token": 97, "loss": [0.22134818136692047, 0.00010180991375818849], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def test_badcmd(", "self", ")", ":", "#NEWLINE#", "#INDENT#", "logging", ".", "debug", "(", "''", ")", "#NEWLINE#", "logging", ".", "debug", "(", "'test_badcmd'", ")", "#NEWLINE#", "extcode", "=", "set_as_top", "(", "ExternalCode", "(", ")", ")", "#NEWLINE#", "extcode", ".", "command", "=", "[", "'no-such-command'", "]", "#NEWLINE#", "try", ":", "#NEWLINE#", "#INDENT#", "extcode", ".", "run", "(", ")", "#NEWLINE#", "#UNINDENT#", "except", "ValueError", "as", "exc", ":", "#NEWLINE#", "#INDENT#", "msg", "=", "\": The command to be executed, 'no-such-command', cannot be found\"", "#NEWLINE#", "self", ".", "assertEqual", "(", "str", "(", "msg", ")", ",", "msg", ")", "#NEWLINE#", "self", ".", "assertEqual", "(", "extcode", ".", "return_code", ",", "(", "-", "999999", ")", ")", "#NEWLINE#", "#UNINDENT#", "else", ":", "#NEWLINE#", "#INDENT#", "self", ".", "fail", "(", "'Expected OSError'", ")"]}}
{"position": {"error_location": 76, "repair_targets": [52], "repair_candidates": [52, 2, 60, 72, 91, 56, 66, 69, 21, 30, 42, 76]}}
{"prediction": {"error_location": 0.801437497138977, "repair_targets": [0.9998981952667236], "repair_candidates": [1.3936230971012264e-05, 5.763431909144856e-05, 1.592677472217474e-05, 1.1824947705463273e-06, 0.9998981952667236, 9.113830856222194e-06, 3.1594208849128336e-06, 3.0447392873611534e-07, 1.61496672035355e-07, 2.5493530841913525e-08, 2.1451035081554437e-07, 2.0857795490769604e-08], "target_probs": 0.9998981952667236}}


{"result": {"time": "2021-02-21 13:08:41.382916", "n_pass": [45, 2, 2], "n_token": 91, "loss": [0.3208795487880707, 0.0001205278531415388], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def test_badcmd(", "self", ")", ":", "#NEWLINE#", ")", "#NEWLINE#", "logging", ".", "debug", "(", "'test_badcmd'", ")", "#NEWLINE#", "extcode", "=", "set_as_top", "(", "ExternalCode", "(", ")", ")", "#NEWLINE#", "extcode", ".", "command", "=", "[", "'no-such-command'", "]", "#NEWLINE#", "try", ":", "#NEWLINE#", "#INDENT#", "extcode", ".", "run", "(", ")", "#NEWLINE#", "#UNINDENT#", "except", "ValueError", "as", "exc", ":", "#NEWLINE#", "#INDENT#", "msg", "=", "\": The command to be executed, 'no-such-command', cannot be found\"", "#NEWLINE#", "self", ".", "assertEqual", "(", "str", "(", "msg", ")", ",", "msg", ")", "#NEWLINE#", "self", ".", "assertEqual", "(", "extcode", ".", "return_code", ",", "(", "-", "999999", ")", ")", "#NEWLINE#", "#UNINDENT#", "else", ":", "#NEWLINE#", "#INDENT#", "self", ".", "fail", "(", "'Expected OSError'", ")"]}}
{"position": {"error_location": 70, "repair_targets": [46], "repair_candidates": [46, 2, 54, 66, 85, 50, 60, 63, 15, 24, 36, 70]}}
{"prediction": {"error_location": 0.7255105376243591, "repair_targets": [0.9998794794082642], "repair_candidates": [1.3054459486738779e-06, 9.325598512077704e-05, 1.3728760677622631e-05, 6.894533157719707e-07, 0.9998794794082642, 8.632219760329463e-06, 2.4821749775583157e-06, 1.7166745180929865e-07, 1.423105118192325e-07, 1.6371943800663757e-08, 1.5609926151682885e-07, 2.111743846455738e-08], "target_probs": 0.9998794794082642}}


{"result": {"time": "2021-02-21 13:08:41.479342", "n_pass": [46, 3, 3], "n_token": 85, "loss": [0.3705722689628601, 7.33163979020901e-05], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def test_badcmd(", "self", ")", ":", "#NEWLINE#", "'test_badcmd'", ")", "#NEWLINE#", "extcode", "=", "set_as_top", "(", "ExternalCode", "(", ")", ")", "#NEWLINE#", "extcode", ".", "command", "=", "[", "'no-such-command'", "]", "#NEWLINE#", "try", ":", "#NEWLINE#", "#INDENT#", "extcode", ".", "run", "(", ")", "#NEWLINE#", "#UNINDENT#", "except", "ValueError", "as", "exc", ":", "#NEWLINE#", "#INDENT#", "msg", "=", "\": The command to be executed, 'no-such-command', cannot be found\"", "#NEWLINE#", "self", ".", "assertEqual", "(", "str", "(", "msg", ")", ",", "msg", ")", "#NEWLINE#", "self", ".", "assertEqual", "(", "extcode", ".", "return_code", ",", "(", "-", "999999", ")", ")", "#NEWLINE#", "#UNINDENT#", "else", ":", "#NEWLINE#", "#INDENT#", "self", ".", "fail", "(", "'Expected OSError'", ")"]}}
{"position": {"error_location": 64, "repair_targets": [40], "repair_candidates": [40, 2, 48, 60, 79, 44, 54, 57, 9, 18, 30, 64]}}
{"prediction": {"error_location": 0.6903390288352966, "repair_targets": [0.9999266862869263], "repair_candidates": [1.0248326134387753e-06, 3.621155701694079e-05, 1.994265039684251e-05, 8.355710292562435e-07, 0.9999266862869263, 1.1758233085856773e-05, 2.882666422010516e-06, 2.4003546172934875e-07, 1.584166824386557e-07, 3.6338391851131746e-08, 1.8684140457025933e-07, 2.1833320928976718e-08], "target_probs": 0.9999266862869263}}


{"result": {"time": "2021-02-21 13:08:41.570773", "n_pass": [48, 4, 4], "n_token": 79, "loss": [0.3633684515953064, 5.3049541747896e-05], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def test_badcmd(", "self", ")", ":", "#NEWLINE#", "'test_badcmd'", ")", "#NEWLINE#", "extcode", "=", "set_as_top", "extcode", ".", "command", "=", "[", "'no-such-command'", "]", "#NEWLINE#", "try", ":", "#NEWLINE#", "#INDENT#", "extcode", ".", "run", "(", ")", "#NEWLINE#", "#UNINDENT#", "except", "ValueError", "as", "exc", ":", "#NEWLINE#", "#INDENT#", "msg", "=", "\": The command to be executed, 'no-such-command', cannot be found\"", "#NEWLINE#", "self", ".", "assertEqual", "(", "str", "(", "msg", ")", ",", "msg", ")", "#NEWLINE#", "self", ".", "assertEqual", "(", "extcode", ".", "return_code", ",", "(", "-", "999999", ")", ")", "#NEWLINE#", "#UNINDENT#", "else", ":", "#NEWLINE#", "#INDENT#", "self", ".", "fail", "(", "'Expected OSError'", ")"]}}
{"position": {"error_location": 58, "repair_targets": [34], "repair_candidates": [34, 2, 42, 54, 73, 38, 48, 51, 9, 12, 24, 58]}}
{"prediction": {"error_location": 0.6953301429748535, "repair_targets": [0.9999469518661499], "repair_candidates": [1.8213223711427418e-06, 3.67676439054776e-05, 5.510488563231775e-07, 9.291835567637463e-07, 0.9999469518661499, 6.3184238570102025e-06, 5.736915227316786e-06, 3.230714753499342e-07, 2.132118339659428e-07, 8.239818782840302e-08, 2.1368164482282737e-07, 4.636865824636516e-08], "target_probs": 0.9999469518661499}}


{"result": {"time": "2021-02-21 13:08:41.658471", "n_pass": [50, 5, 5], "n_token": 73, "loss": [0.31452199816703796, 3.83861297450494e-05], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def test_badcmd(", "self", ")", ":", "#NEWLINE#", "'test_badcmd'", ")", "#NEWLINE#", "extcode", "=", "set_as_top", "extcode", ".", "command", "=", "[", "'no-such-command'", "extcode", ".", "run", "(", ")", "#NEWLINE#", "#UNINDENT#", "except", "ValueError", "as", "exc", ":", "#NEWLINE#", "#INDENT#", "msg", "=", "\": The command to be executed, 'no-such-command', cannot be found\"", "#NEWLINE#", "self", ".", "assertEqual", "(", "str", "(", "msg", ")", ",", "msg", ")", "#NEWLINE#", "self", ".", "assertEqual", "(", "extcode", ".", "return_code", ",", "(", "-", "999999", ")", ")", "#NEWLINE#", "#UNINDENT#", "else", ":", "#NEWLINE#", "#INDENT#", "self", ".", "fail", "(", "'Expected OSError'", ")"]}}
{"position": {"error_location": 52, "repair_targets": [28], "repair_candidates": [28, 2, 36, 48, 67, 32, 42, 45, 9, 12, 18, 52]}}
{"prediction": {"error_location": 0.7301377058029175, "repair_targets": [0.9999616146087646], "repair_candidates": [8.517373544236762e-07, 2.5546418328303844e-05, 6.527507707687619e-07, 3.2159209695237223e-07, 0.9999616146087646, 6.847723852843046e-06, 3.4414761103107594e-06, 3.0740659440198215e-07, 1.4513854296183126e-07, 6.241926087113825e-08, 1.8865492279473983e-07, 3.235274093071894e-08], "target_probs": 0.9999616146087646}}


{"result": {"time": "2021-02-21 13:08:41.744251", "n_pass": [57, 6, 6], "n_token": 67, "loss": [0.1463444083929062, 4.184333738521673e-05], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def test_badcmd(", "self", ")", ":", "#NEWLINE#", "'test_badcmd'", ")", "#NEWLINE#", "extcode", "=", "set_as_top", "extcode", ".", "command", "=", "[", "'no-such-command'", "extcode", ".", "run", "(", ")", "#NEWLINE#", "#UNINDENT#", "except", "ValueError", "as", "exc", ":", "#NEWLINE#", "#INDENT#", "msg", "=", "\": The command to be executed, 'no-such-command', cannot be found\"", "#NEWLINE#", "self", ".", "assertEqual", "(", "str", "(", "msg", ")", ",", "msg", ")", "#NEWLINE#", "self", ".", "assertEqual", "(", "extcode", ".", ")", "#NEWLINE#", "#UNINDENT#", "else", ":", "#NEWLINE#", "#INDENT#", "self", ".", "fail", "(", "'Expected OSError'", ")"]}}
{"position": {"error_location": 52, "repair_targets": [28], "repair_candidates": [28, 2, 36, 48, 61, 32, 42, 45, 9, 12, 18, 52]}}
{"prediction": {"error_location": 0.8638602495193481, "repair_targets": [0.9999581575393677], "repair_candidates": [3.333779545755533e-07, 1.965671981452033e-05, 9.301230647906777e-07, 3.1778793641024095e-07, 0.9999581575393677, 1.7474796550231986e-05, 1.946904376382008e-06, 3.6643649536927114e-07, 2.672686321147921e-07, 3.534275094807526e-08, 3.006053930221242e-07, 1.8085972897097236e-07], "target_probs": 0.9999581575393677}}


{"result": {"time": "2021-02-21 13:08:41.913334", "n_pass": [91, 8, 7], "n_token": 64, "loss": [0.04916175454854965, 8.142326259985566e-05], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def test_badcmd(", "self", ")", ":", "#NEWLINE#", "'test_badcmd'", ")", "#NEWLINE#", "extcode", "=", "set_as_top", "extcode", ".", "command", "=", "[", "'no-such-command'", "extcode", ".", "run", "(", ")", "#NEWLINE#", "#UNINDENT#", "except", "ValueError", "as", "exc", ":", "#NEWLINE#", "#INDENT#", "msg", "=", "\": The command to be executed, 'no-such-command', cannot be found\"", "#NEWLINE#", "self", ".", "assertEqual", "(", "str", "(", "msg", ")", ",", "msg", ")", "#NEWLINE#", "self", ".", "assertEqual", "(", "extcode", ".", "else", ":", "#NEWLINE#", "#INDENT#", "self", ".", "fail", "(", "'Expected OSError'", ")"]}}
{"position": {"error_location": 52, "repair_targets": [28], "repair_candidates": [28, 2, 36, 48, 58, 32, 42, 45, 9, 12, 18, 52]}}
{"prediction": {"error_location": 0.9520271420478821, "repair_targets": [0.9999185800552368], "repair_candidates": [1.80387341970345e-05, 3.835154348053038e-05, 1.2338715578152915e-06, 1.3345314755497384e-06, 0.9999185800552368, 6.946583198441658e-06, 1.2785998478648253e-05, 3.7912428751951666e-07, 3.54095874399718e-07, 8.614715056864952e-07, 7.189069606283738e-07, 4.1978682929766364e-07], "target_probs": 0.9999185800552368}}


{"result": {"time": "2021-02-21 13:08:42.076054", "n_pass": [95, 10, 8], "n_token": 61, "loss": [0.051433976739645004, 0.0001918857597047463], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def test_badcmd(", "self", "'test_badcmd'", ")", "#NEWLINE#", "extcode", "=", "set_as_top", "extcode", ".", "command", "=", "[", "'no-such-command'", "extcode", ".", "run", "(", ")", "#NEWLINE#", "#UNINDENT#", "except", "ValueError", "as", "exc", ":", "#NEWLINE#", "#INDENT#", "msg", "=", "\": The command to be executed, 'no-such-command', cannot be found\"", "#NEWLINE#", "self", ".", "assertEqual", "(", "str", "(", "msg", ")", ",", "msg", ")", "#NEWLINE#", "self", ".", "assertEqual", "(", "extcode", ".", "else", ":", "#NEWLINE#", "#INDENT#", "self", ".", "fail", "(", "'Expected OSError'", ")"]}}
{"position": {"error_location": 49, "repair_targets": [25], "repair_candidates": [25, 2, 33, 45, 55, 29, 39, 42, 6, 9, 15, 49]}}
{"prediction": {"error_location": 0.9498664736747742, "repair_targets": [0.999808132648468], "repair_candidates": [9.938862604030874e-07, 0.00017454862245358527, 9.258040449822147e-07, 6.431017141039774e-07, 0.999808132648468, 4.947338766214671e-06, 7.816506695235148e-06, 3.6665375091615715e-07, 2.8356674874885357e-07, 4.915065687782771e-07, 5.625786343443906e-07, 2.3578270713642269e-07], "target_probs": 0.999808132648468}}


{"result": {"time": "2021-02-21 13:08:42.155946", "n_pass": [96, 11, 9], "n_token": 58, "loss": [0.010830902494490147, 0.002309304429218173], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def test_badcmd(", "self", "extcode", "=", "set_as_top", "extcode", ".", "command", "=", "[", "'no-such-command'", "extcode", ".", "run", "(", ")", "#NEWLINE#", "#UNINDENT#", "except", "ValueError", "as", "exc", ":", "#NEWLINE#", "#INDENT#", "msg", "=", "\": The command to be executed, 'no-such-command', cannot be found\"", "#NEWLINE#", "self", ".", "assertEqual", "(", "str", "(", "msg", ")", ",", "msg", ")", "#NEWLINE#", "self", ".", "assertEqual", "(", "extcode", ".", "else", ":", "#NEWLINE#", "#INDENT#", "self", ".", "fail", "(", "'Expected OSError'", ")"]}}
{"position": {"error_location": 46, "repair_targets": [22], "repair_candidates": [22, 2, 30, 42, 52, 26, 36, 39, 3, 6, 12, 46]}}
{"prediction": {"error_location": 0.9892274141311646, "repair_targets": [0.9976933598518372], "repair_candidates": [0.0019613259937614202, 0.0003145022492390126, 9.713562576507684e-07, 5.90474201089819e-07, 0.9976933598518372, 4.9737304834707174e-06, 1.9692057321663015e-05, 4.763939500662673e-07, 5.129379587742733e-07, 1.695589844530332e-06, 8.445722414762713e-07, 1.0438427580083953e-06], "target_probs": 0.9976933598518372}}


{"result": {"time": "2021-02-21 13:08:42.234729", "n_pass": [99, 12, 10], "n_token": 55, "loss": [0.03252234309911728, 0.00057368038687855], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def test_badcmd(", "self", "extcode", "=", "set_as_top", "extcode", ".", "command", "extcode", ".", "run", "(", ")", "#NEWLINE#", "#UNINDENT#", "except", "ValueError", "as", "exc", ":", "#NEWLINE#", "#INDENT#", "msg", "=", "\": The command to be executed, 'no-such-command', cannot be found\"", "#NEWLINE#", "self", ".", "assertEqual", "(", "str", "(", "msg", ")", ",", "msg", ")", "#NEWLINE#", "self", ".", "assertEqual", "(", "extcode", ".", "else", ":", "#NEWLINE#", "#INDENT#", "self", ".", "fail", "(", "'Expected OSError'", ")"]}}
{"position": {"error_location": 43, "repair_targets": [19], "repair_candidates": [19, 2, 27, 39, 49, 23, 33, 36, 3, 6, 9, 43]}}
{"prediction": {"error_location": 0.9680008292198181, "repair_targets": [0.9994264841079712], "repair_candidates": [0.00016945082461461425, 0.0003712722391355783, 2.234537760159583e-06, 2.2592924153741478e-07, 0.9994264841079712, 6.4883092818490695e-06, 1.8180660845246166e-05, 1.0649524710970582e-06, 6.698583661091106e-07, 1.734976990519499e-06, 1.2497940815592301e-06, 9.440717576580937e-07], "target_probs": 0.9994264841079712}}


{"result": {"time": "2021-02-21 13:08:42.314666", "n_pass": [101, 13, 11], "n_token": 52, "loss": [0.05717715620994568, 0.0012254471657797694], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def test_badcmd(", "self", "extcode", "=", "set_as_top", "extcode", ".", "command", "extcode", ".", "run", "#UNINDENT#", "except", "ValueError", "as", "exc", ":", "#NEWLINE#", "#INDENT#", "msg", "=", "\": The command to be executed, 'no-such-command', cannot be found\"", "#NEWLINE#", "self", ".", "assertEqual", "(", "str", "(", "msg", ")", ",", "msg", ")", "#NEWLINE#", "self", ".", "assertEqual", "(", "extcode", ".", "else", ":", "#NEWLINE#", "#INDENT#", "self", ".", "fail", "(", "'Expected OSError'", ")"]}}
{"position": {"error_location": 40, "repair_targets": [16], "repair_candidates": [16, 2, 24, 36, 46, 20, 30, 33, 3, 6, 9, 40]}}
{"prediction": {"error_location": 0.9444266557693481, "repair_targets": [0.9987753033638], "repair_candidates": [9.342257544631138e-05, 0.000913189142011106, 7.003570499364287e-05, 1.2188233085907996e-05, 0.9987753033638, 3.364739677635953e-05, 7.477934559574351e-05, 7.539664238720434e-06, 3.9861188270151615e-06, 4.784953489433974e-06, 7.693080078752246e-06, 3.387003971511149e-06], "target_probs": 0.9987753033638}}


{"result": {"time": "2021-02-21 13:08:42.389980", "n_pass": [102, 14, 12], "n_token": 49, "loss": [0.12120784819126129, 0.00017447801656089723], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def test_badcmd(", "self", "extcode", "=", "set_as_top", "extcode", ".", "command", "extcode", ".", "run", "as", "exc", ":", "#NEWLINE#", "#INDENT#", "msg", "=", "\": The command to be executed, 'no-such-command', cannot be found\"", "#NEWLINE#", "self", ".", "assertEqual", "(", "str", "(", "msg", ")", ",", "msg", ")", "#NEWLINE#", "self", ".", "assertEqual", "(", "extcode", ".", "else", ":", "#NEWLINE#", "#INDENT#", "self", ".", "fail", "(", "'Expected OSError'", ")"]}}
{"position": {"error_location": 37, "repair_targets": [13], "repair_candidates": [13, 2, 21, 33, 43, 17, 27, 30, 3, 6, 9, 37]}}
{"prediction": {"error_location": 0.8858498334884644, "repair_targets": [0.9998255372047424], "repair_candidates": [1.1169436220370699e-05, 0.00012101163883926347, 2.2156586055643857e-05, 5.3289218158170115e-06, 0.9998255372047424, 2.587583367130719e-06, 9.233649507223163e-06, 6.661282441200456e-07, 3.5023376199205813e-07, 5.928103519181604e-07, 9.24596349705098e-07, 3.455587034295604e-07], "target_probs": 0.9998255372047424}}


{"result": {"time": "2021-02-21 13:08:42.537334", "n_pass": [107, 16, 13], "n_token": 46, "loss": [0.06424661725759506, 0.0035755105782300234], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def test_badcmd(", "self", "extcode", "=", "set_as_top", "extcode", ".", "command", "extcode", ".", "run", "as", "exc", ":", "#NEWLINE#", "#INDENT#", "msg", "=", "\": The command to be executed, 'no-such-command', cannot be found\"", "#NEWLINE#", "self", ".", "assertEqual", "msg", ")", ",", "msg", ")", "#NEWLINE#", "self", ".", "assertEqual", "(", "extcode", ".", "else", ":", "#NEWLINE#", "#INDENT#", "self", ".", "fail", "(", "'Expected OSError'", ")"]}}
{"position": {"error_location": 34, "repair_targets": [13], "repair_candidates": [13, 2, 21, 30, 40, 17, 24, 27, 3, 6, 9, 34]}}
{"prediction": {"error_location": 0.9377738237380981, "repair_targets": [0.9964308738708496], "repair_candidates": [1.8932361854240298e-05, 0.00019869284005835652, 3.738001760211773e-05, 9.796601261768956e-06, 0.9964308738708496, 4.020171672891593e-06, 0.0032904241234064102, 4.196027987291018e-07, 7.189132702478673e-07, 4.07559400628088e-06, 2.0860572931269417e-06, 2.587052449598559e-06], "target_probs": 0.9964308738708496}}


{"result": {"time": "2021-02-21 13:08:42.757745", "n_pass": [121, 19, 14], "n_token": 43, "loss": [0.6927115321159363, 0.007049194537103176], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def test_badcmd(", "self", "extcode", "=", "set_as_top", "extcode", ".", "command", "extcode", ".", "run", "as", "exc", ":", "#NEWLINE#", "#INDENT#", "msg", "self", ".", "assertEqual", "msg", ")", ",", "msg", ")", "#NEWLINE#", "self", ".", "assertEqual", "(", "extcode", ".", "else", ":", "#NEWLINE#", "#INDENT#", "self", ".", "fail", "(", "'Expected OSError'", ")"]}}
{"position": {"error_location": 31, "repair_targets": [13], "repair_candidates": [13, 2, 18, 27, 37, 17, 21, 24, 3, 6, 9, 31]}}
{"prediction": {"error_location": 0.500217854976654, "repair_targets": [0.9929755926132202], "repair_candidates": [4.732314482680522e-05, 0.0005593309761025012, 0.00010498628398636356, 4.520466609392315e-05, 0.9929755926132202, 0.002745423000305891, 0.0034994727466255426, 1.6529123740838259e-06, 2.8006807042402215e-06, 8.47724368213676e-06, 6.305457191047026e-06, 3.4337833767494885e-06], "target_probs": 0.9929755926132202}}


{"result": {"time": "2021-02-21 13:08:43.041214", "n_pass": [166, 23, 15], "n_token": 41, "loss": [0.45827120542526245, 0.0012463942402973771], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def test_badcmd(", "self", "extcode", "=", "set_as_top", "extcode", ".", "command", "extcode", ".", "run", "as", "exc", ":", "msg", "self", ".", "assertEqual", "msg", ")", ",", "msg", ")", "#NEWLINE#", "self", ".", "assertEqual", "(", "extcode", ".", "else", ":", "#NEWLINE#", "#INDENT#", "self", ".", "fail", "(", "'Expected OSError'", ")"]}}
{"position": {"error_location": 29, "repair_targets": [13], "repair_candidates": [13, 2, 16, 25, 35, 15, 19, 22, 3, 6, 9, 29]}}
{"prediction": {"error_location": 0.6323758959770203, "repair_targets": [0.9987543821334839], "repair_candidates": [3.2929547160165384e-05, 0.0005093554500490427, 0.0001643647119635716, 5.566410982282832e-05, 0.9987543821334839, 6.151116394903511e-05, 0.00040856978739611804, 7.347844643845747e-07, 2.2954054657020606e-06, 5.24571896676207e-06, 3.38219774675963e-06, 1.3495717894329573e-06], "target_probs": 0.9987543821334839}}


{"result": {"time": "2021-02-21 13:08:43.184446", "n_pass": [171, 25, 16], "n_token": 39, "loss": [0.09175752848386765, 0.0021222683135420084], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def test_badcmd(", "self", "extcode", "=", "set_as_top", "extcode", ".", "command", "extcode", ".", "run", "as", "exc", ":", "msg", "self", ".", "assertEqual", "msg", ")", ",", "msg", "self", ".", "assertEqual", "(", "extcode", ".", "else", ":", "#NEWLINE#", "#INDENT#", "self", ".", "fail", "(", "'Expected OSError'", ")"]}}
{"position": {"error_location": 27, "repair_targets": [13], "repair_candidates": [13, 2, 16, 23, 33, 15, 19, 22, 3, 6, 9, 27]}}
{"prediction": {"error_location": 0.9123262166976929, "repair_targets": [0.9978799819946289], "repair_candidates": [3.318846574984491e-05, 0.0003776453377213329, 0.00013255057274363935, 4.207981692161411e-05, 0.9978799819946289, 0.00019084950326941907, 0.0012804943835362792, 1.8879485423894948e-06, 1.6409048839705065e-05, 1.628723657631781e-05, 1.3046251297055278e-05, 1.555675407871604e-05], "target_probs": 0.9978799819946289}}


{"result": {"time": "2021-02-21 13:08:43.391154", "n_pass": [176, 28, 17], "n_token": 37, "loss": [0.205501988530159, 0.0014533227076753974], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def test_badcmd(", "self", "extcode", "=", "set_as_top", "extcode", ".", "command", "extcode", ".", "run", "as", "exc", ":", "msg", "self", ".", "assertEqual", "msg", ")", ",", "msg", "self", ".", "assertEqual", "(", "extcode", ".", "else", ":", "self", ".", "fail", "(", "'Expected OSError'", ")"]}}
{"position": {"error_location": 27, "repair_targets": [13], "repair_candidates": [13, 2, 16, 23, 31, 15, 19, 22, 3, 6, 9, 27]}}
{"prediction": {"error_location": 0.8142386078834534, "repair_targets": [0.9985477328300476], "repair_candidates": [2.547886106185615e-05, 0.0003828678745776415, 0.00012912163219880313, 8.386597619391978e-05, 0.9985477328300476, 0.00015387407620437443, 0.0006164500373415649, 2.46489707933506e-06, 1.5665696992073208e-05, 1.3905614650866482e-05, 1.8045073375105858e-05, 1.0461670171935111e-05], "target_probs": 0.9985477328300476}}


{"result": {"time": "2021-02-21 13:08:43.459206", "n_pass": [178, 29, 18], "n_token": 35, "loss": [0.11952123790979385, 0.0005313973524607718], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def test_badcmd(", "self", "extcode", "=", "set_as_top", "extcode", ".", "command", "extcode", ".", "run", "as", "exc", ":", "msg", "self", ".", "assertEqual", "msg", ")", ",", "msg", "self", ".", "assertEqual", "(", "extcode", ".", "else", ":", "self", ".", "'Expected OSError'", ")"]}}
{"position": {"error_location": 27, "repair_targets": [13], "repair_candidates": [13, 2, 16, 23, 31, 15, 19, 22, 3, 6, 9, 27]}}
{"prediction": {"error_location": 0.8873450756072998, "repair_targets": [0.9994687438011169], "repair_candidates": [2.6279642042936757e-05, 0.0002327338297618553, 6.916121492395177e-05, 2.950245288957376e-05, 0.9994687438011169, 4.991381865693256e-05, 9.252471500076354e-05, 1.049608840730798e-06, 5.179621894058073e-06, 4.559632088785293e-06, 8.579335371905472e-06, 1.179641822091071e-05], "target_probs": 0.9994687438011169}}


{"result": {"time": "2021-02-21 13:08:43.595818", "n_pass": [180, 31, 19], "n_token": 34, "loss": [0.19322825968265533, 0.001352330087684095], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["def test_badcmd(", "self", "extcode", "=", "set_as_top", "extcode", ".", "command", "extcode", ".", "run", "as", "exc", ":", "msg", "self", ".", "assertEqual", "msg", ")", ",", "msg", "self", ".", "assertEqual", "(", "extcode", ".", "else", ":", "self", ".", "'Expected OSError'", ")"]}}
{"position": {"error_location": 26, "repair_targets": [12], "repair_candidates": [12, 1, 15, 22, 30, 14, 18, 21, 2, 5, 8, 26]}}
{"prediction": {"error_location": 0.824293851852417, "repair_targets": [0.9986485838890076], "repair_candidates": [0.0001262872392544523, 0.0009231778676621616, 2.670377944014035e-05, 1.63991662702756e-05, 0.9986485838890076, 5.328456609277055e-05, 0.00016316027904395014, 8.705681580067903e-07, 7.284814273589291e-06, 6.072027645132039e-06, 8.880278073775116e-06, 1.9291583157610148e-05], "target_probs": 0.9986485838890076}}


{"result": {"time": "2021-02-21 13:08:43.729653", "n_pass": [184, 33, 20], "n_token": 33, "loss": [0.1338368058204651, 0.0007514796452596784], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["def test_badcmd(", "self", "extcode", "set_as_top", "extcode", ".", "command", "extcode", ".", "run", "as", "exc", ":", "msg", "self", ".", "assertEqual", "msg", ")", ",", "msg", "self", ".", "assertEqual", "(", "extcode", ".", "else", ":", "self", ".", "'Expected OSError'", ")"]}}
{"position": {"error_location": 25, "repair_targets": [11], "repair_candidates": [11, 1, 14, 21, 29, 13, 17, 20, 2, 4, 7, 25]}}
{"prediction": {"error_location": 0.8747327327728271, "repair_targets": [0.9992488026618958], "repair_candidates": [3.240681326133199e-05, 0.0002005669812206179, 0.0002140155411325395, 6.142721395008266e-05, 0.9992488026618958, 7.278103294083849e-05, 0.0001254225935554132, 8.748119739721005e-07, 8.35121227282798e-06, 5.22154186910484e-06, 1.0596632819215301e-05, 1.9513721781549975e-05], "target_probs": 0.9992488026618958}}


{"result": {"time": "2021-02-21 13:08:43.796097", "n_pass": [185, 34, 21], "n_token": 32, "loss": [0.1633373647928238, 0.0013575823977589607], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["def test_badcmd(", "self", "extcode", "extcode", ".", "command", "extcode", ".", "run", "as", "exc", ":", "msg", "self", ".", "assertEqual", "msg", ")", ",", "msg", "self", ".", "assertEqual", "(", "extcode", ".", "else", ":", "self", ".", "'Expected OSError'", ")"]}}
{"position": {"error_location": 24, "repair_targets": [10], "repair_candidates": [10, 1, 13, 20, 28, 12, 16, 19, 2, 3, 6, 24]}}
{"prediction": {"error_location": 0.8493046164512634, "repair_targets": [0.9986433386802673], "repair_candidates": [7.29875682736747e-05, 0.0008456007344648242, 0.00013293311349116266, 4.888578041573055e-05, 0.9986433386802673, 8.347931725438684e-05, 0.00013377041614148766, 9.309460438089445e-07, 9.202506589645054e-06, 6.0250822571106255e-06, 8.239261660492048e-06, 1.4704499335493892e-05], "target_probs": 0.9986433386802673}}


{"result": {"time": "2021-02-21 13:08:43.862508", "n_pass": [187, 35, 22], "n_token": 31, "loss": [0.10690068453550339, 0.0011556863319128752], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["def test_badcmd(", "self", "extcode", "extcode", "command", "extcode", ".", "run", "as", "exc", ":", "msg", "self", ".", "assertEqual", "msg", ")", ",", "msg", "self", ".", "assertEqual", "(", "extcode", ".", "else", ":", "self", ".", "'Expected OSError'", ")"]}}
{"position": {"error_location": 23, "repair_targets": [9], "repair_candidates": [9, 1, 12, 19, 27, 11, 15, 18, 2, 3, 5, 23]}}
{"prediction": {"error_location": 0.8986149430274963, "repair_targets": [0.9988449811935425], "repair_candidates": [4.0172548324335366e-05, 0.0005816190387122333, 0.0002016362122958526, 0.00018037893460132182, 0.9988449811935425, 4.2052517528645694e-05, 7.290011126315221e-05, 5.798340225737775e-07, 7.785167326801457e-06, 5.2343762035889085e-06, 8.117318429867737e-06, 1.4568790902558248e-05], "target_probs": 0.9988449811935425}}


{"result": {"time": "2021-02-21 13:08:43.930830", "n_pass": [188, 36, 23], "n_token": 30, "loss": [0.023502696305513382, 0.0007511217263527215], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["def test_badcmd(", "self", "extcode", "extcode", "extcode", ".", "run", "as", "exc", ":", "msg", "self", ".", "assertEqual", "msg", ")", ",", "msg", "self", ".", "assertEqual", "(", "extcode", ".", "else", ":", "self", ".", "'Expected OSError'", ")"]}}
{"position": {"error_location": 22, "repair_targets": [8], "repair_candidates": [8, 1, 11, 18, 26, 10, 14, 17, 2, 3, 4, 22]}}
{"prediction": {"error_location": 0.976771354675293, "repair_targets": [0.9992491602897644], "repair_candidates": [3.50191185134463e-05, 0.0005202740430831909, 3.255880073993467e-05, 8.865701602189802e-06, 0.9992491602897644, 3.0706196412211284e-05, 9.659420175012201e-05, 5.062832428848196e-07, 8.469827662338503e-06, 5.5792502280382905e-06, 6.199033578013768e-06, 6.102862698753597e-06], "target_probs": 0.9992491602897644}}


{"result": {"time": "2021-02-21 13:08:43.996873", "n_pass": [190, 37, 24], "n_token": 29, "loss": [0.013334499672055244, 0.0002053590869763866], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["def test_badcmd(", "self", "extcode", "extcode", "extcode", "run", "as", "exc", ":", "msg", "self", ".", "assertEqual", "msg", ")", ",", "msg", "self", ".", "assertEqual", "(", "extcode", ".", "else", ":", "self", ".", "'Expected OSError'", ")"]}}
{"position": {"error_location": 21, "repair_targets": [7], "repair_candidates": [7, 1, 10, 17, 25, 9, 13, 16, 2, 3, 4, 21]}}
{"prediction": {"error_location": 0.9867538809776306, "repair_targets": [0.9997946619987488], "repair_candidates": [1.870221058197785e-05, 8.165168401319534e-05, 1.2421510291460436e-05, 2.9050181183265522e-05, 0.9997946619987488, 1.672917824180331e-05, 3.373732397449203e-05, 1.62309660822757e-07, 4.405888830660842e-06, 1.8415569229546236e-06, 4.611390977515839e-06, 1.9852952846122207e-06], "target_probs": 0.9997946619987488}}


{"result": {"time": "2021-02-21 13:08:44.061576", "n_pass": [191, 38, 25], "n_token": 28, "loss": [0.024537313729524612, 0.0009731018799357116], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["def test_badcmd(", "self", "extcode", "extcode", "extcode", "as", "exc", ":", "msg", "self", ".", "assertEqual", "msg", ")", ",", "msg", "self", ".", "assertEqual", "(", "extcode", ".", "else", ":", "self", ".", "'Expected OSError'", ")"]}}
{"position": {"error_location": 20, "repair_targets": [6], "repair_candidates": [6, 1, 9, 16, 24, 8, 12, 15, 2, 3, 4, 20]}}
{"prediction": {"error_location": 0.9757612943649292, "repair_targets": [0.9990273714065552], "repair_candidates": [9.300038800574839e-05, 0.0004903885419480503, 7.050161366350949e-05, 7.771710806991905e-05, 0.9990273714065552, 7.959881622809917e-05, 0.00010824674973264337, 4.105723689917795e-07, 1.7494998246547766e-05, 8.509337931172922e-06, 1.5518375221290626e-05, 1.1099740731879137e-05], "target_probs": 0.9990273714065552}}


{"result": {"time": "2021-02-21 13:08:44.447001", "n_pass": [204, 44, 26], "n_token": 27, "loss": [0.17418864369392395, 0.009141136892139912], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["self", "extcode", "extcode", "extcode", "as", "exc", ":", "msg", "self", ".", "assertEqual", "msg", ")", ",", "msg", "self", ".", "assertEqual", "(", "extcode", ".", "else", ":", "self", ".", "'Expected OSError'", ")"]}}
{"position": {"error_location": 19, "repair_targets": [5], "repair_candidates": [5, 0, 8, 15, 23, 7, 11, 14, 1, 2, 3, 19]}}
{"prediction": {"error_location": 0.8401383757591248, "repair_targets": [0.9909005165100098], "repair_candidates": [0.0029492678586393595, 0.0007293099188245833, 0.0014154702657833695, 0.002747784135863185, 0.9909005165100098, 0.0002546980686020106, 0.0007582770194858313, 1.7467634734202875e-06, 4.418211756274104e-05, 2.7898257030756213e-05, 4.779568189405836e-05, 0.00012308749137446284], "target_probs": 0.9909005165100098}}


{"result": {"time": "2021-02-21 13:08:44.890222", "n_pass": [247, 51, 27], "n_token": 26, "loss": [0.5709885358810425, 0.029705984517931938], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["self", "extcode", "extcode", "extcode", "as", "exc", ":", "msg", "self", "assertEqual", "msg", ")", ",", "msg", "self", ".", "assertEqual", "(", "extcode", ".", "else", ":", "self", ".", "'Expected OSError'", ")"]}}
{"position": {"error_location": 18, "repair_targets": [5], "repair_candidates": [5, 0, 8, 14, 22, 7, 10, 13, 1, 2, 3, 18]}}
{"prediction": {"error_location": 0.5649666786193848, "repair_targets": [0.9707309007644653], "repair_candidates": [0.011852940544486046, 0.0025732675567269325, 0.004638486076146364, 0.007249870337545872, 0.9707309007644653, 0.000905742694158107, 0.0014242505421862006, 1.4253727385948878e-05, 0.00014172596274875104, 8.442980470135808e-05, 0.00011706256191246212, 0.00026716632419265807], "target_probs": 0.9707309007644653}}


{"result": {"time": "2021-02-21 13:08:44.953052", "n_pass": [249, 52, 28], "n_token": 25, "loss": [0.27826979756355286, 0.02011450193822384], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["self", "extcode", "extcode", "extcode", "as", "exc", ":", "msg", "self", "assertEqual", "msg", ",", "msg", "self", ".", "assertEqual", "(", "extcode", ".", "else", ":", "self", ".", "'Expected OSError'", ")"]}}
{"position": {"error_location": 17, "repair_targets": [5], "repair_candidates": [5, 0, 8, 13, 21, 7, 10, 12, 1, 2, 3, 17]}}
{"prediction": {"error_location": 0.7570925354957581, "repair_targets": [0.9800864458084106], "repair_candidates": [0.007943334989249706, 0.0018821380799636245, 0.0029897827189415693, 0.004974674433469772, 0.9800864458084106, 0.0008874847553670406, 0.0010058577172458172, 5.5845575843704864e-06, 3.7440193409565836e-05, 1.3831790056428872e-05, 6.809102342231199e-05, 0.00010529571591177955], "target_probs": 0.9800864458084106}}


{"result": {"time": "2021-02-21 13:08:45.015651", "n_pass": [250, 53, 29], "n_token": 24, "loss": [0.12983565032482147, 0.008275623433291912], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["self", "extcode", "extcode", "extcode", "as", "exc", ":", "msg", "self", "assertEqual", "msg", "msg", "self", ".", "assertEqual", "(", "extcode", ".", "else", ":", "self", ".", "'Expected OSError'", ")"]}}
{"position": {"error_location": 16, "repair_targets": [5], "repair_candidates": [5, 0, 8, 12, 20, 7, 10, 11, 1, 2, 3, 16]}}
{"prediction": {"error_location": 0.8782397508621216, "repair_targets": [0.9917585253715515], "repair_candidates": [0.003088592318817973, 0.0007761336746625602, 0.0012429386842995882, 0.002385293133556843, 0.9917585253715515, 0.000514730520080775, 0.00010832107363967225, 2.4781063530099345e-06, 5.671554845321225e-06, 2.251234718642081e-06, 5.870193854207173e-05, 5.6374607083853334e-05], "target_probs": 0.9917585253715515}}


{"result": {"time": "2021-02-21 13:08:45.081060", "n_pass": [253, 54, 30], "n_token": 23, "loss": [0.06700093299150467, 0.006994752213358879], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["self", "extcode", "extcode", "extcode", "as", "exc", ":", "msg", "self", "assertEqual", "msg", "msg", "self", "assertEqual", "(", "extcode", ".", "else", ":", "self", ".", "'Expected OSError'", ")"]}}
{"position": {"error_location": 15, "repair_targets": [5], "repair_candidates": [5, 0, 8, 12, 19, 7, 10, 11, 1, 2, 3, 15]}}
{"prediction": {"error_location": 0.9351944327354431, "repair_targets": [0.9930296540260315], "repair_candidates": [0.002686277963221073, 0.0006891295197419822, 0.0009792842902243137, 0.0018661579815670848, 0.9930296540260315, 0.0003895728732459247, 0.00032491475576534867, 9.850789410847938e-07, 8.544128036191978e-07, 1.2713704791167402e-06, 1.0999913683917839e-05, 2.080062222376e-05], "target_probs": 0.9930296540260315}}


{"result": {"time": "2021-02-21 13:08:45.142861", "n_pass": [254, 55, 31], "n_token": 22, "loss": [0.04176141694188118, 0.0016478757606819272], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["self", "extcode", "extcode", "extcode", "as", "exc", ":", "msg", "self", "assertEqual", "msg", "msg", "self", "(", "extcode", ".", "else", ":", "self", ".", "'Expected OSError'", ")"]}}
{"position": {"error_location": 14, "repair_targets": [5], "repair_candidates": [5, 0, 8, 12, 18, 7, 10, 11, 1, 2, 3, 14]}}
{"prediction": {"error_location": 0.9590984582901001, "repair_targets": [0.9983534812927246], "repair_candidates": [0.0004769729566760361, 0.00013299354759510607, 0.00023562014393974096, 0.0006813263753429055, 0.9983534812927246, 5.96794779994525e-05, 5.4248324886430055e-05, 1.7912584837631584e-07, 2.406400483323523e-07, 2.5350461783091305e-06, 2.772389962046873e-07, 2.4583659978816286e-06], "target_probs": 0.9983534812927246}}


{"result": {"time": "2021-02-21 13:08:45.265172", "n_pass": [257, 57, 32], "n_token": 21, "loss": [0.32187435030937195, 0.2716975510120392], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["self", "extcode", "extcode", "extcode", "as", "exc", ":", "msg", "self", "assertEqual", "msg", "msg", "self", "(", "extcode", "else", ":", "self", ".", "'Expected OSError'", ")"]}}
{"position": {"error_location": 14, "repair_targets": [5], "repair_candidates": [5, 0, 8, 12, 17, 7, 10, 11, 1, 2, 3, 14]}}
{"prediction": {"error_location": 0.7247892022132874, "repair_targets": [0.7620847225189209], "repair_candidates": [0.09961164742708206, 0.03144022449851036, 0.04339892789721489, 0.061005279421806335, 0.7620847225189209, 0.00016464260988868773, 0.0010698129190132022, 2.9518963856389746e-05, 0.0001031996653182432, 0.0009112911648117006, 6.631982250837609e-05, 0.00011451040336396545], "target_probs": 0.7620847225189209}}


{"result": {"time": "2021-02-21 13:08:45.325456", "n_pass": [258, 58, 33], "n_token": 20, "loss": [0.06419485807418823, 0.11611440777778625], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["self", "extcode", "extcode", "extcode", "as", "exc", ":", "msg", "self", "assertEqual", "msg", "msg", "self", "(", "extcode", ":", "self", ".", "'Expected OSError'", ")"]}}
{"position": {"error_location": 14, "repair_targets": [5], "repair_candidates": [5, 0, 8, 12, 16, 7, 10, 11, 1, 2, 3, 14]}}
{"prediction": {"error_location": 0.9378222227096558, "repair_targets": [0.8903733491897583], "repair_candidates": [0.04011387750506401, 0.015087870880961418, 0.021050820127129555, 0.031449101865291595, 0.8903733491897583, 0.0001242068101419136, 0.0008057725499384105, 9.894677532429341e-06, 4.4840213377028704e-05, 0.000735497276764363, 4.777278081746772e-05, 0.00015697948401793838], "target_probs": 0.8903733491897583}}


{"result": {"time": "2021-02-21 13:08:45.447907", "n_pass": [261, 60, 34], "n_token": 19, "loss": [0.013057442381978035, 0.03771647438406944], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["self", "extcode", "extcode", "extcode", "as", "exc", ":", "msg", "self", "assertEqual", "msg", "msg", "self", "(", "extcode", ":", "self", "'Expected OSError'", ")"]}}
{"position": {"error_location": 14, "repair_targets": [5], "repair_candidates": [5, 0, 8, 12, 16, 7, 10, 11, 1, 2, 3, 14]}}
{"prediction": {"error_location": 0.9870274662971497, "repair_targets": [0.9629859328269958], "repair_candidates": [0.014520462602376938, 0.005635526031255722, 0.007268277928233147, 0.00884027685970068, 0.9629859328269958, 5.489340401254594e-05, 0.00032812549034133554, 2.6178613552474417e-06, 9.221236723533366e-06, 0.0002625549677759409, 9.976459296012763e-06, 8.22383226477541e-05], "target_probs": 0.9629859328269958}}


{"result": {"time": "2021-02-21 13:08:45.566360", "n_pass": [263, 62, 35], "n_token": 18, "loss": [0.022772466763854027, 0.04017402604222298], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["self", "extcode", "extcode", "extcode", "as", "exc", ":", "msg", "self", "assertEqual", "msg", "msg", "self", "(", "extcode", ":", "self", "'Expected OSError'"]}}
{"position": {"error_location": 14, "repair_targets": [5], "repair_candidates": [5, 0, 8, 12, 16, 7, 10, 11, 1, 2, 3, 14]}}
{"prediction": {"error_location": 0.9774848818778992, "repair_targets": [0.960622251033783], "repair_candidates": [0.015637880191206932, 0.007477207109332085, 0.006710769142955542, 0.00871199183166027, 0.960622251033783, 6.458002462750301e-05, 0.00036571064265444875, 3.4275021789653692e-06, 1.1187628842890263e-05, 0.00031464200583286583, 1.3311901966517325e-05, 6.702732207486406e-05], "target_probs": 0.960622251033783}}


{"result": {"time": "2021-02-21 13:08:45.625614", "n_pass": [268, 63, 36], "n_token": 17, "loss": [0.6858720779418945, 0.2790623605251312], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["self", "extcode", "extcode", "extcode", "exc", ":", "msg", "self", "assertEqual", "msg", "msg", "self", "(", "extcode", ":", "self", "'Expected OSError'"]}}
{"position": {"error_location": 13, "repair_targets": [4], "repair_candidates": [4, 0, 7, 11, 15, 6, 9, 10, 1, 2, 3, 13]}}
{"prediction": {"error_location": 0.5036508440971375, "repair_targets": [0.7564927339553833], "repair_candidates": [0.060073595494031906, 0.024816034361720085, 0.043311696499586105, 0.11224018037319183, 0.7564927339553833, 0.0004901338252238929, 0.0016074150335043669, 2.1071045921416953e-05, 1.690793942543678e-05, 0.0006208885461091995, 7.960947550600395e-05, 0.00022979635105002671], "target_probs": 0.7564927339553833}}




Minimal simplified tokens:

['self', 'extcode', 'extcode', 'extcode', 'exc', ':', 'msg', 'self', 'assertEqual', 'msg', 'msg', 'self', '(', 'extcode', ':', 'self', "'Expected OSError'"]
