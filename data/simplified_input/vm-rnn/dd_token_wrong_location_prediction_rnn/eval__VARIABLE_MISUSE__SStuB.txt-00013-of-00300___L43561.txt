
Original sample:

{"has_bug": true, "bug_kind": 1, "bug_kind_name": "VARIABLE_MISUSE", "source_tokens": ["#NEWLINE#", "def raise_not_equal(", "self", ",", "other", ",", "value_desc", ",", "self_value", ",", "other_value", ")", ":", "#NEWLINE#", "#INDENT#", "raise", "AssertionError", "(", "'{!r} != {!r}: {!s} not equal: {!r} != {!r}'", ".", "format", "(", "self", ",", "other", ",", "value_desc", ",", "self_value", ",", "self_value", ")", ")"], "error_location": [30], "repair_targets": [10], "repair_candidates": [2, 22, 6, 26, 8, 28, 30, 4, 24, 10], "provenances": [{"datasetProvenance": {"datasetName": "ETHPy150Open", "filepath": "cjerdonek/open-rcv/openrcv/jsonlib.py", "license": "mit", "note": "license: bigquery_api"}}], "txt_file": "eval__VARIABLE_MISUSE__SStuB.txt-00013-of-00300", "js_count": 43561, "results": {"model": "rnn", "prob": {"loc": [[0.18932011723518372, 1.0547535111982143e-06, 2.3604953014455532e-07, 3.909117474165669e-09, 1.2671970353039796e-06, 1.8679832791690387e-08, 2.0653353658417473e-06, 1.6791113921499345e-07, 2.4912749267969048e-06, 1.255941128874838e-07, 4.037253347632941e-06, 1.2875109405285912e-06, 4.3897941282011743e-07, 2.8712352104776073e-06, 8.209329962483025e-07, 1.0440541018397198e-06, 3.873715741065098e-06, 1.519705620012246e-06, 6.579952014362789e-07, 2.9598759283544496e-06, 1.3666534570688782e-08, 9.675122036867378e-09, 0.01965847983956337, 2.541907235809049e-07, 0.12418224662542343, 6.103955456637777e-07, 0.4644017815589905, 5.09890151079162e-06, 0.08436431735754013, 7.5168109106016345e-06, 0.11802136898040771, 1.0669652510841843e-05, 5.784589802715345e-07]], "pointer": [[0.0, 0.0, 0.003579951822757721, 0.0, 0.00803570356220007, 0.0, 0.007867731153964996, 0.0, 0.0015013256343081594, 0.0, 0.9785888195037842, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0003560862096492201, 0.0, 3.103059952991316e-06, 0.0, 2.8515282792795915e-06, 0.0, 3.997996827820316e-06, 0.0, 6.048074283171445e-05, 0.0, 0.0]], "target": [0.9785888195037842]}, "loss": [2.1368894577026367, 0.02164372429251671], "acc": [0.0, 0.0, 1.0, 0.0]}, "wrong_error_location": [26]}


Trace of simplified code(s):

{"result": {"time": "2021-02-21 12:59:09.239905", "n_pass": [1, 1, 1], "n_token": 33, "loss": [0.7670050859451294, 0.02164372429251671], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def raise_not_equal(", "self", ",", "other", ",", "value_desc", ",", "self_value", ",", "other_value", ")", ":", "#NEWLINE#", "#INDENT#", "raise", "AssertionError", "(", "'{!r} != {!r}: {!s} not equal: {!r} != {!r}'", ".", "format", "(", "self", ",", "other", ",", "value_desc", ",", "self_value", ",", "self_value", ")", ")"]}}
{"position": {"error_location": 26, "repair_targets": [10], "repair_candidates": [2, 22, 6, 26, 8, 28, 30, 4, 24, 10]}}
{"prediction": {"error_location": 0.4644017815589905, "repair_targets": [0.9785888195037842], "repair_candidates": [0.003579951822757721, 0.00803570356220007, 0.007867731153964996, 0.0015013256343081594, 0.9785888195037842, 0.0003560862096492201, 3.103059952991316e-06, 2.8515282792795915e-06, 3.997996827820316e-06, 6.048074283171445e-05], "target_probs": 0.9785888195037842}}


{"result": {"time": "2021-02-21 12:59:09.304547", "n_pass": [23, 2, 2], "n_token": 29, "loss": [0.7601999640464783, 0.10142207890748978], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def raise_not_equal(", "self", ",", "other", ",", "value_desc", ",", "self_value", ",", "other_value", ")", "AssertionError", "(", "'{!r} != {!r}: {!s} not equal: {!r} != {!r}'", ".", "format", "(", "self", ",", "other", ",", "value_desc", ",", "self_value", ",", "self_value", ")", ")"]}}
{"position": {"error_location": 22, "repair_targets": [10], "repair_candidates": [2, 18, 6, 22, 8, 24, 26, 4, 20, 10]}}
{"prediction": {"error_location": 0.4675729274749756, "repair_targets": [0.9035515785217285], "repair_candidates": [0.004331410862505436, 0.04750129580497742, 0.03674371913075447, 0.0065711610950529575, 0.9035515785217285, 0.0010739844292402267, 1.592914486536756e-05, 1.2126877663831692e-05, 1.5307239664252847e-05, 0.0001834376744227484], "target_probs": 0.9035515785217285}}


{"result": {"time": "2021-02-21 12:59:09.369228", "n_pass": [24, 3, 3], "n_token": 25, "loss": [1.1020478010177612, 0.07207096368074417], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def raise_not_equal(", "self", ",", "other", ",", "value_desc", ",", "self_value", ",", "other_value", ")", "format", "(", "self", ",", "other", ",", "value_desc", ",", "self_value", ",", "self_value", ")", ")"]}}
{"position": {"error_location": 18, "repair_targets": [10], "repair_candidates": [2, 14, 6, 18, 8, 20, 22, 4, 16, 10]}}
{"prediction": {"error_location": 0.3321901559829712, "repair_targets": [0.9304648637771606], "repair_candidates": [0.015173683874309063, 0.02325628697872162, 0.022693561390042305, 0.004019350744783878, 0.9304648637771606, 0.003963755909353495, 3.427414412726648e-05, 1.9765087927225977e-05, 2.4290362489409745e-05, 0.00035028342972509563], "target_probs": 0.9304648637771606}}


{"result": {"time": "2021-02-21 12:59:09.551690", "n_pass": [79, 6, 4], "n_token": 24, "loss": [0.9578293561935425, 0.3304687738418579], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def raise_not_equal(", "self", ",", "other", ",", "value_desc", ",", "self_value", ",", "other_value", ")", "(", "self", ",", "other", ",", "value_desc", ",", "self_value", ",", "self_value", ")", ")"]}}
{"position": {"error_location": 17, "repair_targets": [10], "repair_candidates": [2, 13, 6, 17, 8, 19, 21, 4, 15, 10]}}
{"prediction": {"error_location": 0.38372495770454407, "repair_targets": [0.718586802482605], "repair_candidates": [0.059796061366796494, 0.13073673844337463, 0.06766489148139954, 0.01697513647377491, 0.718586802482605, 0.005086706019937992, 0.0003058684815187007, 7.313799869734794e-05, 6.306056457106024e-05, 0.0007115304470062256], "target_probs": 0.718586802482605}}




Minimal simplified tokens:

['#NEWLINE#', 'def raise_not_equal(', 'self', ',', 'other', ',', 'value_desc', ',', 'self_value', ',', 'other_value', ')', '(', 'self', ',', 'other', ',', 'value_desc', ',', 'self_value', ',', 'self_value', ')', ')']
