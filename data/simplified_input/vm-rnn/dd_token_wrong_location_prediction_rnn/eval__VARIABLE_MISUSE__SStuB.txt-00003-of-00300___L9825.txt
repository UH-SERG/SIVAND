
Original sample:

{"has_bug": true, "bug_kind": 1, "bug_kind_name": "VARIABLE_MISUSE", "source_tokens": ["#NEWLINE#", "@", "sig", "(", "(", "(", "(", "H", "[", "(", "Ord", ",", "'a'", ")", "]", "/", "'a'", ")", ">>", "[", "'a'", "]", ")", ">>", "[", "'a'", "]", ")", ")", "#NEWLINE#", "def insert(", "x", ",", "xs", ")", ":", "#NEWLINE#", "#INDENT#", "'\\n    insert :: Ord a => a -> [a] -> [a]\\n\\n    The insert function takes an element and a list and inserts the element\\n    into the list at the first position where it is less than or equal to the\\n    next element. In particular, if the list is sorted before the call, the\\n    result will also be sorted.\\n    '", "#NEWLINE#", "def __insert(", "x", ",", "xs", ")", ":", "#NEWLINE#", "#INDENT#", "for", "i", "in", "xs", ":", "#NEWLINE#", "#INDENT#", "if", "(", "i", ">", "x", ")", ":", "#NEWLINE#", "#INDENT#", "(", "yield", "x", ")", "#NEWLINE#", "#UNINDENT#", "(", "yield", "i", ")", "#NEWLINE#", "#UNINDENT#", "#UNINDENT#", "return", "L", "[", "__insert", "(", "__insert", ",", "xs", ")", "]"], "error_location": [82], "repair_targets": [31, 41, 59, 66], "repair_candidates": [31, 41, 59, 66, 80, 82, 33, 43, 51, 84], "provenances": [{"datasetProvenance": {"datasetName": "ETHPy150Open", "filepath": "billpmurphy/hask/hask/Data/List.py", "license": "bsd-2-clause", "note": "license: bigquery_api"}}], "txt_file": "eval__VARIABLE_MISUSE__SStuB.txt-00003-of-00300", "js_count": 9825, "results": {"model": "rnn", "prob": {"loc": [[0.35741573572158813, 1.6279876945191063e-05, 5.762449859503249e-07, 1.6432638361152385e-08, 2.6597161806307668e-08, 5.212549680777556e-08, 6.215379499963092e-08, 6.666556146228686e-05, 3.799857761777048e-09, 2.0421605029241618e-07, 0.031336549669504166, 3.834632877897093e-08, 8.994925337901805e-06, 1.1944822908560582e-08, 6.115104866921683e-08, 1.432454297400909e-07, 2.2309932319330983e-06, 2.28877254926374e-08, 1.5518190821239841e-06, 4.813378495782672e-08, 5.1027536756009795e-06, 2.4098158135643644e-08, 3.99043855736636e-08, 2.853649675671477e-06, 7.829009263105036e-08, 7.207223461591639e-06, 2.9736261453194857e-08, 8.154223252176962e-08, 1.273032239623717e-07, 1.238057279806526e-06, 3.3908744256905266e-08, 2.2721853838447714e-06, 2.0438808423506316e-09, 5.909446940677299e-07, 8.613664448375857e-09, 9.42540800963343e-09, 4.842395924242737e-07, 1.4627951827606012e-07, 3.735173592644969e-08, 1.2924644465783786e-07, 1.3738943316354835e-08, 1.0564594049355946e-05, 4.124620200940399e-09, 3.255643150623655e-06, 1.416532739995091e-07, 7.14836119186657e-08, 1.1502489542181138e-05, 1.9165836420143023e-05, 3.316024788091454e-07, 8.763694125946131e-08, 4.510294360215994e-08, 0.0007085667457431555, 8.689973896025549e-08, 2.444621713948436e-07, 2.757833215127903e-07, 1.0069053502093084e-07, 1.5358856444436242e-06, 0.004263976123183966, 5.480276854541444e-07, 0.014117881655693054, 1.558800164502827e-07, 1.8891975628321234e-07, 3.4966194562002784e-07, 1.4052096375394285e-08, 2.65811355149026e-08, 2.8922177079948597e-06, 0.004301773384213448, 8.746626889433173e-08, 3.1360238494926307e-07, 1.1313311176763818e-07, 2.0505627418287986e-08, 8.480288670398295e-06, 0.012592166662216187, 3.1450210258299194e-07, 7.68926668115455e-07, 1.025291794576333e-06, 2.532250960030069e-07, 7.026615094218869e-07, 0.00410828972235322, 3.0359736058471753e-08, 1.1526235539349727e-06, 1.0227042679389342e-07, 0.06293400377035141, 1.1599421867458659e-08, 0.5080381631851196, 1.8258263878578873e-07, 2.1532764549192507e-07]], "pointer": [[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.6351927518844604, 0.0, 0.059666622430086136, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.17265042662620544, 0.0, 0.11420422047376633, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 7.15668938937597e-05, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.00012602641072589904, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0004294482641853392, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.003589475294575095, 0.0, 0.012824966572225094, 0.0, 0.00124456943012774, 0.0, 0.0]], "target": [0.8083986639976501]}, "loss": [2.7656686305999756, 0.21269994974136353], "acc": [0.0, 0.0, 1.0, 0.0]}, "wrong_error_location": [84]}


Trace of simplified code(s):

{"result": {"time": "2021-02-21 11:47:03.652926", "n_pass": [1, 1, 1], "n_token": 87, "loss": [0.6771987080574036, 0.21269994974136353], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "@", "sig", "(", "(", "(", "(", "H", "[", "(", "Ord", ",", "'a'", ")", "]", "/", "'a'", ")", ">>", "[", "'a'", "]", ")", ">>", "[", "'a'", "]", ")", ")", "#NEWLINE#", "def insert(", "x", ",", "xs", ")", ":", "#NEWLINE#", "#INDENT#", "'\\n    insert :: Ord a => a -> [a] -> [a]\\n\\n    The insert function takes an element and a list and inserts the element\\n    into the list at the first position where it is less than or equal to the\\n    next element. In particular, if the list is sorted before the call, the\\n    result will also be sorted.\\n    '", "#NEWLINE#", "def __insert(", "x", ",", "xs", ")", ":", "#NEWLINE#", "#INDENT#", "for", "i", "in", "xs", ":", "#NEWLINE#", "#INDENT#", "if", "(", "i", ">", "x", ")", ":", "#NEWLINE#", "#INDENT#", "(", "yield", "x", ")", "#NEWLINE#", "#UNINDENT#", "(", "yield", "i", ")", "#NEWLINE#", "#UNINDENT#", "#UNINDENT#", "return", "L", "[", "__insert", "(", "__insert", ",", "xs", ")", "]"]}}
{"position": {"error_location": 84, "repair_targets": [31, 41, 59, 66], "repair_candidates": [31, 41, 59, 66, 80, 82, 33, 43, 51, 84]}}
{"prediction": {"error_location": 0.5080381631851196, "repair_targets": [0.6351927518844604, 0.17265042662620544, 0.00012602641072589904, 0.0004294482641853392], "repair_candidates": [0.6351927518844604, 0.059666622430086136, 0.17265042662620544, 0.11420422047376633, 7.15668938937597e-05, 0.00012602641072589904, 0.0004294482641853392, 0.003589475294575095, 0.012824966572225094, 0.00124456943012774], "target_probs": 0.8083986639976501}}


{"result": {"time": "2021-02-21 11:47:03.736568", "n_pass": [8, 2, 2], "n_token": 66, "loss": [0.32082608342170715, 0.19869594275951385], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["]", ")", ">>", "[", "'a'", "]", ")", ")", "#NEWLINE#", "def insert(", "x", ",", "xs", ")", ":", "#NEWLINE#", "#INDENT#", "'\\n    insert :: Ord a => a -> [a] -> [a]\\n\\n    The insert function takes an element and a list and inserts the element\\n    into the list at the first position where it is less than or equal to the\\n    next element. In particular, if the list is sorted before the call, the\\n    result will also be sorted.\\n    '", "#NEWLINE#", "def __insert(", "x", ",", "xs", ")", ":", "#NEWLINE#", "#INDENT#", "for", "i", "in", "xs", ":", "#NEWLINE#", "#INDENT#", "if", "(", "i", ">", "x", ")", ":", "#NEWLINE#", "#INDENT#", "(", "yield", "x", ")", "#NEWLINE#", "#UNINDENT#", "(", "yield", "i", ")", "#NEWLINE#", "#UNINDENT#", "#UNINDENT#", "return", "L", "[", "__insert", "(", "__insert", ",", "xs", ")", "]"]}}
{"position": {"error_location": 63, "repair_targets": [10, 20, 38, 45], "repair_candidates": [10, 20, 38, 45, 59, 61, 12, 22, 30, 63]}}
{"prediction": {"error_location": 0.7255494594573975, "repair_targets": [0.6705142259597778, 0.14802280068397522, 0.00045409597805701196, 0.0008080265251919627], "repair_candidates": [0.6705142259597778, 0.0688028484582901, 0.14802280068397522, 0.10049837827682495, 0.00015038129640743136, 0.00045409597805701196, 0.0008080265251919627, 0.0033614563290029764, 0.006623482797294855, 0.0007644094293937087], "target_probs": 0.8197991251945496}}


{"result": {"time": "2021-02-21 11:47:03.818919", "n_pass": [35, 3, 3], "n_token": 61, "loss": [0.38360047340393066, 0.25928011536598206], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["]", ")", ")", "#NEWLINE#", "def insert(", "x", ",", "xs", ")", ":", "#NEWLINE#", "#INDENT#", "'\\n    insert :: Ord a => a -> [a] -> [a]\\n\\n    The insert function takes an element and a list and inserts the element\\n    into the list at the first position where it is less than or equal to the\\n    next element. In particular, if the list is sorted before the call, the\\n    result will also be sorted.\\n    '", "#NEWLINE#", "def __insert(", "x", ",", "xs", ")", ":", "#NEWLINE#", "#INDENT#", "for", "i", "in", "xs", ":", "#NEWLINE#", "#INDENT#", "if", "(", "i", ">", "x", ")", ":", "#NEWLINE#", "#INDENT#", "(", "yield", "x", ")", "#NEWLINE#", "#UNINDENT#", "(", "yield", "i", ")", "#NEWLINE#", "#UNINDENT#", "#UNINDENT#", "return", "L", "[", "__insert", "(", "__insert", ",", "xs", ")", "]"]}}
{"position": {"error_location": 58, "repair_targets": [5, 15, 33, 40], "repair_candidates": [5, 15, 33, 40, 54, 56, 7, 17, 25, 58]}}
{"prediction": {"error_location": 0.6814035773277283, "repair_targets": [0.6234535574913025, 0.14701855182647705, 0.00030489746131934226, 0.0008298823377117515], "repair_candidates": [0.6234535574913025, 0.07773144543170929, 0.14701855182647705, 0.1279018372297287, 0.00012090583913959563, 0.00030489746131934226, 0.0008298823377117515, 0.004408067092299461, 0.01603703573346138, 0.002193826949223876], "target_probs": 0.7716068625450134}}


{"result": {"time": "2021-02-21 11:47:03.975759", "n_pass": [38, 5, 4], "n_token": 56, "loss": [0.406322717666626, 0.3068411350250244], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["]", ")", ")", "#NEWLINE#", "def insert(", "x", ",", "xs", ")", ":", "x", ",", "xs", ")", ":", "#NEWLINE#", "#INDENT#", "for", "i", "in", "xs", ":", "#NEWLINE#", "#INDENT#", "if", "(", "i", ">", "x", ")", ":", "#NEWLINE#", "#INDENT#", "(", "yield", "x", ")", "#NEWLINE#", "#UNINDENT#", "(", "yield", "i", ")", "#NEWLINE#", "#UNINDENT#", "#UNINDENT#", "return", "L", "[", "__insert", "(", "__insert", ",", "xs", ")", "]"]}}
{"position": {"error_location": 53, "repair_targets": [5, 10, 28, 35], "repair_candidates": [5, 10, 28, 35, 49, 51, 7, 12, 20, 53]}}
{"prediction": {"error_location": 0.6660951375961304, "repair_targets": [0.678927481174469, 0.05502614751458168, 0.0006041874876245856, 0.0012095978017896414], "repair_candidates": [0.678927481174469, 0.11962109804153442, 0.05502614751458168, 0.0703604444861412, 0.0003311067703180015, 0.0006041874876245856, 0.0012095978017896414, 0.006940983701497316, 0.0567743182182312, 0.0102046187967062], "target_probs": 0.7357674837112427}}


{"result": {"time": "2021-02-21 11:47:04.054398", "n_pass": [40, 6, 5], "n_token": 51, "loss": [1.5291105508804321, 0.4507749676704407], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["]", ")", ")", "#NEWLINE#", "def insert(", "x", ",", "xs", ")", ":", "x", ",", "xs", ")", ":", "xs", ":", "#NEWLINE#", "#INDENT#", "if", "(", "i", ">", "x", ")", ":", "#NEWLINE#", "#INDENT#", "(", "yield", "x", ")", "#NEWLINE#", "#UNINDENT#", "(", "yield", "i", ")", "#NEWLINE#", "#UNINDENT#", "#UNINDENT#", "return", "L", "[", "__insert", "(", "__insert", ",", "xs", ")", "]"]}}
{"position": {"error_location": 48, "repair_targets": [5, 10, 23, 30], "repair_candidates": [5, 10, 23, 30, 44, 46, 7, 12, 15, 48]}}
{"prediction": {"error_location": 0.2167283594608307, "repair_targets": [0.587105393409729, 0.0487649105489254, 0.0005413655308075249, 0.0007225717417895794], "repair_candidates": [0.587105393409729, 0.15756383538246155, 0.0487649105489254, 0.10120389610528946, 0.00021976279094815254, 0.0005413655308075249, 0.0007225717417895794, 0.007653679233044386, 0.06159025430679321, 0.03463437780737877], "target_probs": 0.6371341943740845}}


{"result": {"time": "2021-02-21 11:47:04.127098", "n_pass": [44, 7, 6], "n_token": 45, "loss": [1.350501537322998, 0.2509077191352844], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["]", ")", ")", "#NEWLINE#", "def insert(", "x", ",", "xs", ")", ":", "x", ",", "xs", ")", ":", "xs", ":", "#NEWLINE#", "#INDENT#", "if", "(", "i", ">", "x", ")", ":", "#NEWLINE#", "#INDENT#", "(", "yield", "x", ")", "#NEWLINE#", "#UNINDENT#", "#UNINDENT#", "return", "L", "[", "__insert", "(", "__insert", ",", "xs", ")", "]"]}}
{"position": {"error_location": 42, "repair_targets": [5, 10, 23, 30], "repair_candidates": [5, 10, 23, 30, 38, 40, 7, 12, 15, 42]}}
{"prediction": {"error_location": 0.25911030173301697, "repair_targets": [0.708893895149231, 0.06795428693294525, 0.0005281100166030228, 0.0007178487721830606], "repair_candidates": [0.708893895149231, 0.09671557694673538, 0.06795428693294525, 0.07926365733146667, 0.00017128347826655954, 0.0005281100166030228, 0.0007178487721830606, 0.009792526252567768, 0.02453790418803692, 0.011424927972257137], "target_probs": 0.7780941724777222}}


{"result": {"time": "2021-02-21 11:47:04.269042", "n_pass": [69, 9, 7], "n_token": 42, "loss": [1.2911033630371094, 0.32419875264167786], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["]", ")", ")", "#NEWLINE#", "def insert(", "x", ",", "xs", ")", ":", "x", ",", "xs", ")", ":", "xs", ":", "#NEWLINE#", "#INDENT#", "if", "(", "i", ">", "x", ")", ":", "#NEWLINE#", "#INDENT#", "(", "yield", "x", ")", "#NEWLINE#", "L", "[", "__insert", "(", "__insert", ",", "xs", ")", "]"]}}
{"position": {"error_location": 39, "repair_targets": [5, 10, 23, 30], "repair_candidates": [5, 10, 23, 30, 35, 37, 7, 12, 15, 39]}}
{"prediction": {"error_location": 0.2749671936035156, "repair_targets": [0.657788872718811, 0.06424693763256073, 0.0005115551175549626, 0.000559126609005034], "repair_candidates": [0.657788872718811, 0.12088409811258316, 0.06424693763256073, 0.111504465341568, 9.606946696294472e-05, 0.0005115551175549626, 0.000559126609005034, 0.0058562979102134705, 0.02721264772117138, 0.011339934542775154], "target_probs": 0.7231065034866333}}


{"result": {"time": "2021-02-21 11:47:04.409343", "n_pass": [73, 11, 8], "n_token": 40, "loss": [1.3226991891860962, 0.2864697277545929], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["]", ")", "def insert(", "x", ",", "xs", ")", ":", "x", ",", "xs", ")", ":", "xs", ":", "#NEWLINE#", "#INDENT#", "if", "(", "i", ">", "x", ")", ":", "#NEWLINE#", "#INDENT#", "(", "yield", "x", ")", "#NEWLINE#", "L", "[", "__insert", "(", "__insert", ",", "xs", ")", "]"]}}
{"position": {"error_location": 37, "repair_targets": [3, 8, 21, 28], "repair_candidates": [3, 8, 21, 28, 33, 35, 5, 10, 13, 37]}}
{"prediction": {"error_location": 0.26641523838043213, "repair_targets": [0.6864549517631531, 0.06350385397672653, 0.00043714468483813107, 0.0005138351698406041], "repair_candidates": [0.6864549517631531, 0.10345520079135895, 0.06350385397672653, 0.11337414383888245, 0.00021015756647102535, 0.00043714468483813107, 0.0005138351698406041, 0.003535900032147765, 0.019285263493657112, 0.009229502640664577], "target_probs": 0.7509098052978516}}


{"result": {"time": "2021-02-21 11:47:04.481238", "n_pass": [79, 12, 9], "n_token": 37, "loss": [0.539629340171814, 0.19404520094394684], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["]", ")", "def insert(", "x", ",", "xs", ")", ":", "x", ",", "xs", ")", ":", "xs", ":", "#NEWLINE#", "i", ">", "x", ")", ":", "#NEWLINE#", "#INDENT#", "(", "yield", "x", ")", "#NEWLINE#", "L", "[", "__insert", "(", "__insert", ",", "xs", ")", "]"]}}
{"position": {"error_location": 34, "repair_targets": [3, 8, 18, 25], "repair_candidates": [3, 8, 18, 25, 30, 32, 5, 10, 13, 34]}}
{"prediction": {"error_location": 0.5829642415046692, "repair_targets": [0.6949672698974609, 0.11354018747806549, 0.014467027969658375, 0.0006462118471972644], "repair_candidates": [0.6949672698974609, 0.08246976137161255, 0.11354018747806549, 0.07243451476097107, 0.001189498812891543, 0.014467027969658375, 0.0006462118471972644, 0.0049462090246379375, 0.012649777345359325, 0.002689496846869588], "target_probs": 0.8236206769943237}}


{"result": {"time": "2021-02-21 11:47:04.548144", "n_pass": [81, 13, 10], "n_token": 34, "loss": [0.5542612075805664, 0.1354609727859497], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["]", ")", "def insert(", "x", ",", "xs", ")", ":", "x", ",", "xs", ")", ":", "xs", ":", "#NEWLINE#", "i", ">", "x", "#INDENT#", "(", "yield", "x", ")", "#NEWLINE#", "L", "[", "__insert", "(", "__insert", ",", "xs", ")", "]"]}}
{"position": {"error_location": 31, "repair_targets": [3, 8, 18, 22], "repair_candidates": [3, 8, 18, 22, 27, 29, 5, 10, 13, 31]}}
{"prediction": {"error_location": 0.5744965672492981, "repair_targets": [0.7554418444633484, 0.10973485559225082, 0.007954624481499195, 0.00018197213648818433], "repair_candidates": [0.7554418444633484, 0.06164032220840454, 0.10973485559225082, 0.05015123263001442, 0.00047725741751492023, 0.007954624481499195, 0.00018197213648818433, 0.0054659368470311165, 0.00730350473895669, 0.0016485311789438128], "target_probs": 0.8733132481575012}}


{"result": {"time": "2021-02-21 11:47:04.613542", "n_pass": [82, 14, 11], "n_token": 31, "loss": [0.54462730884552, 0.19368422031402588], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["]", ")", "def insert(", "x", ",", "xs", ")", ":", "x", ",", "xs", ")", ":", "xs", ":", "#NEWLINE#", "i", ">", "x", "x", ")", "#NEWLINE#", "L", "[", "__insert", "(", "__insert", ",", "xs", ")", "]"]}}
{"position": {"error_location": 28, "repair_targets": [3, 8, 18, 19], "repair_candidates": [3, 8, 18, 19, 24, 26, 5, 10, 13, 28]}}
{"prediction": {"error_location": 0.5800578594207764, "repair_targets": [0.6491048336029053, 0.1565551906824112, 0.011522429995238781, 0.006735591217875481], "repair_candidates": [0.6491048336029053, 0.08239477872848511, 0.1565551906824112, 0.0680808275938034, 0.0019196377834305167, 0.011522429995238781, 0.006735591217875481, 0.00719561567530036, 0.014001201838254929, 0.0024898299016058445], "target_probs": 0.8239180445671082}}


{"result": {"time": "2021-02-21 11:47:04.742673", "n_pass": [116, 16, 12], "n_token": 29, "loss": [0.8734289407730103, 0.116988405585289], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["]", ")", "def insert(", "x", ",", "xs", ")", ":", "x", ",", "xs", ")", ":", "xs", ":", ">", "x", "x", ")", "#NEWLINE#", "L", "[", "__insert", "(", "__insert", ",", "xs", ")", "]"]}}
{"position": {"error_location": 26, "repair_targets": [3, 8, 16, 17], "repair_candidates": [3, 8, 16, 17, 22, 24, 5, 10, 13, 26]}}
{"prediction": {"error_location": 0.4175175130367279, "repair_targets": [0.7116576433181763, 0.15246926248073578, 0.00920097716152668, 0.01626763306558132], "repair_candidates": [0.7116576433181763, 0.05247795581817627, 0.15246926248073578, 0.04262455552816391, 0.00541020929813385, 0.00920097716152668, 0.01626763306558132, 0.005754435434937477, 0.00320288073271513, 0.0009344356949441135], "target_probs": 0.8895955085754395}}


{"result": {"time": "2021-02-21 11:47:04.808520", "n_pass": [119, 17, 13], "n_token": 27, "loss": [0.41549181938171387, 0.06530378758907318], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["]", ")", "def insert(", "x", ",", "xs", ")", ":", "x", ",", "xs", ")", ":", "xs", ":", ">", "x", "x", ")", "[", "__insert", "(", "__insert", ",", "xs", ")", "]"]}}
{"position": {"error_location": 24, "repair_targets": [3, 8, 16, 17], "repair_candidates": [3, 8, 16, 17, 20, 22, 5, 10, 13, 24]}}
{"prediction": {"error_location": 0.6600155830383301, "repair_targets": [0.7252578735351562, 0.1356770396232605, 0.03264015167951584, 0.04320777207612991], "repair_candidates": [0.7252578735351562, 0.03168819472193718, 0.1356770396232605, 0.016586853191256523, 0.006370657589286566, 0.03264015167951584, 0.04320777207612991, 0.006874314974993467, 0.001294764457270503, 0.0004023339133709669], "target_probs": 0.9367828369140625}}


{"result": {"time": "2021-02-21 11:47:04.871238", "n_pass": [123, 18, 14], "n_token": 25, "loss": [0.5197015404701233, 0.12893788516521454], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["]", ")", "def insert(", "x", ",", "xs", ")", ":", "x", ",", "xs", ")", ":", "xs", ":", ">", "x", "x", ")", "[", "__insert", "(", "__insert", ",", "xs"]}}
{"position": {"error_location": 24, "repair_targets": [3, 8, 16, 17], "repair_candidates": [3, 8, 16, 17, 20, 22, 5, 10, 13, 24]}}
{"prediction": {"error_location": 0.5946980118751526, "repair_targets": [0.715067982673645, 0.11466533690690994, 0.026136185973882675, 0.02315904013812542], "repair_candidates": [0.715067982673645, 0.058832019567489624, 0.11466533690690994, 0.033678919076919556, 0.011462542228400707, 0.026136185973882675, 0.02315904013812542, 0.015516174025833607, 0.0011848087888211012, 0.0002970117493532598], "target_probs": 0.8790285587310791}}


{"result": {"time": "2021-02-21 11:47:04.933523", "n_pass": [124, 19, 15], "n_token": 24, "loss": [0.6705106496810913, 0.1024131327867508], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": [")", "def insert(", "x", ",", "xs", ")", ":", "x", ",", "xs", ")", ":", "xs", ":", ">", "x", "x", ")", "[", "__insert", "(", "__insert", ",", "xs"]}}
{"position": {"error_location": 23, "repair_targets": [2, 7, 15, 16], "repair_candidates": [2, 7, 15, 16, 19, 21, 4, 9, 12, 23]}}
{"prediction": {"error_location": 0.5114473700523376, "repair_targets": [0.8054687976837158, 0.08902346342802048, 0.0036459288094192743, 0.0045183501206338406], "repair_candidates": [0.8054687976837158, 0.03836485370993614, 0.08902346342802048, 0.03184404969215393, 0.0013601056998595595, 0.0036459288094192743, 0.0045183501206338406, 0.024626126512885094, 0.0008913017809391022, 0.0002569528005551547], "target_probs": 0.9026565551757812}}


{"result": {"time": "2021-02-21 11:47:05.056319", "n_pass": [126, 21, 16], "n_token": 23, "loss": [0.9225347638130188, 0.2123367339372635], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": [")", "x", ",", "xs", ")", ":", "x", ",", "xs", ")", ":", "xs", ":", ">", "x", "x", ")", "[", "__insert", "(", "__insert", ",", "xs"]}}
{"position": {"error_location": 22, "repair_targets": [1, 6, 14, 15], "repair_candidates": [1, 6, 14, 15, 18, 20, 3, 8, 11, 22]}}
{"prediction": {"error_location": 0.3975101709365845, "repair_targets": [0.7565606832504272, 0.0487707257270813, 0.0012322558322921395, 0.0021286539267748594], "repair_candidates": [0.7565606832504272, 0.09968982636928558, 0.0487707257270813, 0.06388263404369354, 0.0010398488957434893, 0.0012322558322921395, 0.0021286539267748594, 0.025372423231601715, 0.0008770805434323847, 0.0004458011535461992], "target_probs": 0.8086923360824585}}


{"result": {"time": "2021-02-21 11:47:05.117356", "n_pass": [128, 22, 17], "n_token": 22, "loss": [0.8473422527313232, 0.3652834892272949], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": [")", "x", "xs", ")", ":", "x", ",", "xs", ")", ":", "xs", ":", ">", "x", "x", ")", "[", "__insert", "(", "__insert", ",", "xs"]}}
{"position": {"error_location": 21, "repair_targets": [1, 5, 13, 14], "repair_candidates": [1, 5, 13, 14, 17, 19, 2, 7, 10, 21]}}
{"prediction": {"error_location": 0.42855238914489746, "repair_targets": [0.6309077143669128, 0.05122325196862221, 0.005522890016436577, 0.006345989182591438], "repair_candidates": [0.6309077143669128, 0.18821938335895538, 0.05122325196862221, 0.07956387102603912, 0.005593446549028158, 0.005522890016436577, 0.006345989182591438, 0.029954448342323303, 0.0018412064528092742, 0.00082778389332816], "target_probs": 0.6939998865127563}}


{"result": {"time": "2021-02-21 11:47:05.180013", "n_pass": [130, 23, 18], "n_token": 21, "loss": [0.6074903011322021, 0.3293841779232025], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": [")", "x", "xs", ":", "x", ",", "xs", ")", ":", "xs", ":", ">", "x", "x", ")", "[", "__insert", "(", "__insert", ",", "xs"]}}
{"position": {"error_location": 20, "repair_targets": [1, 4, 12, 13], "repair_candidates": [1, 4, 12, 13, 16, 18, 2, 6, 9, 20]}}
{"prediction": {"error_location": 0.5447162389755249, "repair_targets": [0.5178907513618469, 0.18811799585819244, 0.007367835380136967, 0.0059900362975895405], "repair_candidates": [0.5178907513618469, 0.19425790011882782, 0.18811799585819244, 0.05615706741809845, 0.006683423183858395, 0.007367835380136967, 0.0059900362975895405, 0.02182384766638279, 0.001166231813840568, 0.0005449054297059774], "target_probs": 0.7193666100502014}}


{"result": {"time": "2021-02-21 11:47:05.240105", "n_pass": [131, 24, 19], "n_token": 20, "loss": [0.8900706768035889, 0.2811858057975769], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": [")", "x", "xs", "x", ",", "xs", ")", ":", "xs", ":", ">", "x", "x", ")", "[", "__insert", "(", "__insert", ",", "xs"]}}
{"position": {"error_location": 19, "repair_targets": [1, 3, 11, 12], "repair_candidates": [1, 3, 11, 12, 15, 17, 2, 5, 8, 19]}}
{"prediction": {"error_location": 0.41062667965888977, "repair_targets": [0.5414252877235413, 0.19577448070049286, 0.008481775410473347, 0.009206485003232956], "repair_candidates": [0.5414252877235413, 0.1473710983991623, 0.19577448070049286, 0.04230732098221779, 0.008702550083398819, 0.008481775410473347, 0.009206485003232956, 0.04321976751089096, 0.002536621643230319, 0.0009746926953084767], "target_probs": 0.7548880577087402}}


{"result": {"time": "2021-02-21 11:47:05.358311", "n_pass": [135, 26, 20], "n_token": 19, "loss": [0.271837443113327, 0.39384928345680237], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": [")", "x", "xs", "x", ",", "xs", ":", "xs", ":", ">", "x", "x", ")", "[", "__insert", "(", "__insert", ",", "xs"]}}
{"position": {"error_location": 18, "repair_targets": [1, 3, 10, 11], "repair_candidates": [1, 3, 10, 11, 14, 16, 2, 5, 7, 18]}}
{"prediction": {"error_location": 0.7619781494140625, "repair_targets": [0.3262741267681122, 0.1271321326494217, 0.11965185403823853, 0.1013975664973259], "repair_candidates": [0.3262741267681122, 0.08768303692340851, 0.1271321326494217, 0.04376627132296562, 0.174859881401062, 0.11965185403823853, 0.1013975664973259, 0.01754661090672016, 0.0012745126150548458, 0.00041404087096452713], "target_probs": 0.6744557023048401}}


{"result": {"time": "2021-02-21 11:47:05.417008", "n_pass": [136, 27, 21], "n_token": 18, "loss": [0.1418868750333786, 0.29418545961380005], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": [")", "x", "xs", "x", ",", "xs", "xs", ":", ">", "x", "x", ")", "[", "__insert", "(", "__insert", ",", "xs"]}}
{"position": {"error_location": 17, "repair_targets": [1, 3, 9, 10], "repair_candidates": [1, 3, 9, 10, 13, 15, 2, 5, 6, 17]}}
{"prediction": {"error_location": 0.8677194118499756, "repair_targets": [0.5500311255455017, 0.18157632648944855, 0.004764664452522993, 0.008766170591115952], "repair_candidates": [0.5500311255455017, 0.20805595815181732, 0.18157632648944855, 0.020903680473566055, 0.004644307773560286, 0.004764664452522993, 0.008766170591115952, 0.01906668394804001, 0.0016466026427224278, 0.0005444783018901944], "target_probs": 0.7451382875442505}}


{"result": {"time": "2021-02-21 11:47:05.475173", "n_pass": [143, 28, 22], "n_token": 17, "loss": [0.6175847053527832, 0.347835510969162], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["x", "xs", "x", ",", "xs", "xs", ":", ">", "x", "x", ")", "[", "__insert", "(", "__insert", ",", "xs"]}}
{"position": {"error_location": 16, "repair_targets": [0, 2, 8, 9], "repair_candidates": [0, 2, 8, 9, 12, 14, 1, 4, 5, 16]}}
{"prediction": {"error_location": 0.5392453074455261, "repair_targets": [0.15078110992908478, 0.519949197769165, 0.017985744401812553, 0.017498964443802834], "repair_candidates": [0.15078110992908478, 0.24593643844127655, 0.519949197769165, 0.020728645846247673, 0.016232138499617577, 0.017985744401812553, 0.017498964443802834, 0.01010073907673359, 0.0005597336567007005, 0.00022726230963598937], "target_probs": 0.7062150239944458}}


{"result": {"time": "2021-02-21 11:47:05.536037", "n_pass": [147, 29, 23], "n_token": 16, "loss": [0.41149502992630005, 0.42121365666389465], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["x", "xs", "x", "xs", "xs", ":", ">", "x", "x", ")", "[", "__insert", "(", "__insert", ",", "xs"]}}
{"position": {"error_location": 15, "repair_targets": [0, 2, 7, 8], "repair_candidates": [0, 2, 7, 8, 11, 13, 1, 3, 4, 15]}}
{"prediction": {"error_location": 0.6626587510108948, "repair_targets": [0.4170175790786743, 0.12015628814697266, 0.08125197142362595, 0.037824030965566635], "repair_candidates": [0.4170175790786743, 0.21992352604866028, 0.12015628814697266, 0.05436341464519501, 0.055651094764471054, 0.08125197142362595, 0.037824030965566635, 0.012224305421113968, 0.001019345480017364, 0.000568457180634141], "target_probs": 0.6562498807907104}}


{"result": {"time": "2021-02-21 11:47:05.594322", "n_pass": [171, 30, 24], "n_token": 15, "loss": [0.3742254078388214, 0.4056786894798279], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["x", "xs", "x", "xs", "xs", ">", "x", "x", ")", "[", "__insert", "(", "__insert", ",", "xs"]}}
{"position": {"error_location": 14, "repair_targets": [0, 2, 6, 7], "repair_candidates": [0, 2, 6, 7, 10, 12, 1, 3, 4, 14]}}
{"prediction": {"error_location": 0.6878218650817871, "repair_targets": [0.41713419556617737, 0.1048237606883049, 0.11582429707050323, 0.02874208614230156], "repair_candidates": [0.41713419556617737, 0.1952618658542633, 0.1048237606883049, 0.04949737712740898, 0.07143149524927139, 0.11582429707050323, 0.02874208614230156, 0.015447144396603107, 0.00127545150462538, 0.0005623314646072686], "target_probs": 0.6665242910385132}}


{"result": {"time": "2021-02-21 11:47:05.651686", "n_pass": [172, 31, 25], "n_token": 14, "loss": [0.35304054617881775, 0.4768274128437042], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["x", "xs", "x", "xs", "xs", "x", "x", ")", "[", "__insert", "(", "__insert", ",", "xs"]}}
{"position": {"error_location": 13, "repair_targets": [0, 2, 5, 6], "repair_candidates": [0, 2, 5, 6, 9, 11, 1, 3, 4, 13]}}
{"prediction": {"error_location": 0.7025487422943115, "repair_targets": [0.3488272428512573, 0.1860821694135666, 0.033046044409275055, 0.05279416963458061], "repair_candidates": [0.3488272428512573, 0.32933923602104187, 0.1860821694135666, 0.03035612776875496, 0.011235654354095459, 0.033046044409275055, 0.05279416963458061, 0.006796699482947588, 0.0011851125163957477, 0.00033753420575521886], "target_probs": 0.6207496523857117}}


{"result": {"time": "2021-02-21 11:47:05.707688", "n_pass": [175, 32, 26], "n_token": 13, "loss": [0.5333132147789001, 0.4941139817237854], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["x", "xs", "x", "xs", "xs", "x", "x", "[", "__insert", "(", "__insert", ",", "xs"]}}
{"position": {"error_location": 12, "repair_targets": [0, 2, 5, 6], "repair_candidates": [0, 2, 5, 6, 8, 10, 1, 3, 4, 12]}}
{"prediction": {"error_location": 0.5866580605506897, "repair_targets": [0.36622151732444763, 0.1869199275970459, 0.025625213980674744, 0.03134455531835556], "repair_candidates": [0.36622151732444763, 0.3254472017288208, 0.1869199275970459, 0.03696688264608383, 0.015370500274002552, 0.025625213980674744, 0.03134455531835556, 0.007745245471596718, 0.0038650832138955593, 0.0004938236670568585], "target_probs": 0.6101112365722656}}




Minimal simplified tokens:

['x', 'xs', 'x', 'xs', 'xs', 'x', 'x', '[', '__insert', '(', '__insert', ',', 'xs']
