
Original sample:

{"has_bug": true, "bug_kind": 1, "bug_kind_name": "VARIABLE_MISUSE", "source_tokens": ["#NEWLINE#", "def test01(", "self", ")", ":", "#NEWLINE#", "#INDENT#", "'Opening a table with nested types with gaps.'", "#NEWLINE#", "tbl", "=", "self", ".", "h5file", ".", "get_node", "(", "'/nestedtype'", ")", "#NEWLINE#", "type_descr", "=", "repr", "(", "tbl", ".", "description", ")", "#NEWLINE#", "if", "common", ".", "verbose", ":", "#NEWLINE#", "#INDENT#", "print", "(", "'Type size with no gaps:'", ",", "tbl", ".", "description", ".", "_v_itemsize", ")", "#NEWLINE#", "print", "(", "'And should be: 13'", ")", "#NEWLINE#", "print", "(", "'Representation of the nested type:\\n'", ",", "type_descr", ")", "#NEWLINE#", "print", "(", "'And should be:\\n'", ",", "self", ".", "correct_descr", ")", "#NEWLINE#", "#UNINDENT#", "self", ".", "assertEqual", "(", "tbl", ".", "description", ".", "_v_itemsize", ",", "13", ")", "#NEWLINE#", "self", ".", "assertEqual", "(", "tbl", ",", "self", ".", "correct_descr", ")", "#NEWLINE#", "if", "common", ".", "verbose", ":", "#NEWLINE#", "#INDENT#", "print", "(", "'Great!  Nested types with gaps recognized correctly.'", ")"], "error_location": [86], "repair_targets": [20, 56], "repair_candidates": [9, 24, 40, 73, 86, 20, 56, 2, 11, 63, 69, 82, 88], "provenances": [{"datasetProvenance": {"datasetName": "ETHPy150Open", "filepath": "PyTables/PyTables/tables/tests/test_nestedtypes.py", "license": "bsd-3-clause", "note": "license: manual_eval"}}], "txt_file": "eval__VARIABLE_MISUSE__SStuB.txt-00013-of-00300", "js_count": 42139, "results": {"model": "rnn", "prob": {"loc": [[4.1183277062373236e-05, 5.027528393597436e-10, 1.0371172670664563e-10, 1.8996334453375008e-12, 3.7379607330419173e-13, 2.43723478898783e-11, 3.6492289225142915e-12, 2.4137694881049e-12, 1.232240958576325e-11, 2.8237927621188597e-11, 8.146507014979154e-13, 1.1439747586716731e-11, 4.049089216045035e-14, 7.949991034407466e-14, 9.997731809097132e-13, 3.219939777050068e-13, 2.0488129422180368e-12, 2.7379163172747134e-11, 2.3091465805452627e-12, 8.529693618086753e-11, 4.4767627105368746e-11, 1.305523571193401e-11, 4.174282447477751e-11, 7.974415398848134e-13, 2.3099309132135204e-08, 5.5558405098743435e-12, 5.140596281982823e-12, 1.437703146638103e-12, 2.835574657022999e-11, 7.662290246734926e-11, 8.19084652903257e-06, 2.7803851235241872e-11, 2.4734270187565244e-10, 2.907757368220132e-10, 7.577848071260718e-11, 1.4910855536398593e-11, 3.1977064225696683e-12, 3.875379531170786e-11, 1.6658431578608912e-10, 1.3316733783394485e-12, 1.6846996686581406e-07, 9.433975952863327e-13, 2.030901141703012e-11, 2.4565319396707697e-12, 7.638272653265332e-11, 7.88644757138135e-12, 2.6882909093250973e-11, 7.738173816995708e-12, 8.125797257285683e-11, 1.6354832418907783e-11, 2.1126007193617014e-11, 9.595187838717933e-11, 4.9707902724516195e-12, 4.3104183417019826e-12, 1.1217466955315558e-09, 3.6873746243892835e-12, 3.935739982807718e-07, 6.585754077498285e-12, 5.1696934927347726e-11, 3.415812077633973e-11, 1.2742296107148832e-09, 1.684608702534618e-10, 2.0507082698628665e-09, 0.9999433755874634, 1.4987472241045907e-07, 5.359389376735635e-09, 3.0420072016923427e-10, 1.2255707559916118e-10, 2.9007319116147734e-11, 4.2938064215292115e-10, 1.3562816234685693e-12, 2.6975978742460605e-11, 2.787309098806201e-11, 1.1280994840490166e-06, 8.632408156350468e-12, 1.3868272086270395e-09, 3.408106782898379e-11, 1.1038628899839864e-09, 2.299254710236287e-11, 9.166058134724153e-09, 5.243397729892685e-11, 8.269123580317839e-11, 6.29823762587911e-11, 2.5304385323221545e-12, 1.1939690555684557e-11, 6.946767813764687e-12, 2.696277761060628e-06, 3.1072251976266285e-12, 2.8161913689928042e-08, 8.117350541736457e-12, 1.3429488077143503e-10, 4.819371464404032e-12, 6.420257658845685e-10, 2.530922520171952e-11, 2.4304797534568934e-06, 1.0622372122529034e-12, 2.602835169618345e-10, 7.221739317664344e-10, 2.268731313925798e-10, 1.0678648069972763e-11, 1.825822479317729e-11, 9.119419108749582e-11, 1.399406102109424e-07, 6.182603040638668e-12]], "pointer": [[0.0, 0.0, 2.16411044675624e-05, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.060373011976480484, 0.0, 3.8442267396021634e-05, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.7801479697227478, 0.0, 0.0, 0.0, 0.008190661668777466, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.14952178299427032, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0013406906509771943, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 8.759500633459538e-05, 0.0, 0.0, 0.0, 0.0, 0.0, 6.253455649130046e-05, 0.0, 0.0, 0.0, 0.00018860818818211555, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 4.71975045002182e-06, 0.0, 0.0, 0.0, 7.13776535121724e-06, 0.0, 1.5162863746809307e-05, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]], "target": [0.7814886569976807]}, "loss": [12.823637962341309, 0.2465546429157257], "acc": [0.0, 0.0, 1.0, 0.0]}, "wrong_error_location": [63]}


Trace of simplified code(s):

{"result": {"time": "2021-02-21 12:55:08.535703", "n_pass": [1, 1, 1], "n_token": 104, "loss": [5.6503606174374e-05, 0.2465546429157257], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def test01(", "self", ")", ":", "#NEWLINE#", "#INDENT#", "'Opening a table with nested types with gaps.'", "#NEWLINE#", "tbl", "=", "self", ".", "h5file", ".", "get_node", "(", "'/nestedtype'", ")", "#NEWLINE#", "type_descr", "=", "repr", "(", "tbl", ".", "description", ")", "#NEWLINE#", "if", "common", ".", "verbose", ":", "#NEWLINE#", "#INDENT#", "print", "(", "'Type size with no gaps:'", ",", "tbl", ".", "description", ".", "_v_itemsize", ")", "#NEWLINE#", "print", "(", "'And should be: 13'", ")", "#NEWLINE#", "print", "(", "'Representation of the nested type:\\n'", ",", "type_descr", ")", "#NEWLINE#", "print", "(", "'And should be:\\n'", ",", "self", ".", "correct_descr", ")", "#NEWLINE#", "#UNINDENT#", "self", ".", "assertEqual", "(", "tbl", ".", "description", ".", "_v_itemsize", ",", "13", ")", "#NEWLINE#", "self", ".", "assertEqual", "(", "tbl", ",", "self", ".", "correct_descr", ")", "#NEWLINE#", "if", "common", ".", "verbose", ":", "#NEWLINE#", "#INDENT#", "print", "(", "'Great!  Nested types with gaps recognized correctly.'", ")"]}}
{"position": {"error_location": 63, "repair_targets": [20, 56], "repair_candidates": [9, 24, 40, 73, 86, 20, 56, 2, 11, 63, 69, 82, 88]}}
{"prediction": {"error_location": 0.9999433755874634, "repair_targets": [0.7801479697227478, 0.0013406906509771943], "repair_candidates": [2.16411044675624e-05, 0.060373011976480484, 3.8442267396021634e-05, 0.7801479697227478, 0.008190661668777466, 0.14952178299427032, 0.0013406906509771943, 8.759500633459538e-05, 6.253455649130046e-05, 0.00018860818818211555, 4.71975045002182e-06, 7.13776535121724e-06, 1.5162863746809307e-05], "target_probs": 0.7814886569976807}}


{"result": {"time": "2021-02-21 12:55:08.636899", "n_pass": [22, 2, 2], "n_token": 91, "loss": [1.4424220353248529e-05, 0.08816000074148178], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def test01(", "self", ")", ":", "#NEWLINE#", "#INDENT#", "'Opening a table with nested types with gaps.'", "#NEWLINE#", "tbl", "=", "self", ".", "h5file", ".", "get_node", "(", "'/nestedtype'", ")", "#NEWLINE#", "type_descr", "=", "repr", "(", "tbl", ".", ",", "tbl", ".", "description", ".", "_v_itemsize", ")", "#NEWLINE#", "print", "(", "'And should be: 13'", ")", "#NEWLINE#", "print", "(", "'Representation of the nested type:\\n'", ",", "type_descr", ")", "#NEWLINE#", "print", "(", "'And should be:\\n'", ",", "self", ".", "correct_descr", ")", "#NEWLINE#", "#UNINDENT#", "self", ".", "assertEqual", "(", "tbl", ".", "description", ".", "_v_itemsize", ",", "13", ")", "#NEWLINE#", "self", ".", "assertEqual", "(", "tbl", ",", "self", ".", "correct_descr", ")", "#NEWLINE#", "if", "common", ".", "verbose", ":", "#NEWLINE#", "#INDENT#", "print", "(", "'Great!  Nested types with gaps recognized correctly.'", ")"]}}
{"position": {"error_location": 50, "repair_targets": [20, 43], "repair_candidates": [9, 24, 27, 60, 73, 20, 43, 2, 11, 50, 56, 69, 75]}}
{"prediction": {"error_location": 0.9999855756759644, "repair_targets": [0.9153050780296326, 0.0003092868719249964], "repair_candidates": [1.2219717973493971e-05, 0.048470962792634964, 2.3241529561346397e-05, 0.9153050780296326, 0.022313062101602554, 0.013431875966489315, 0.0003092868719249964, 3.79648081434425e-05, 2.888069866457954e-05, 5.439390224637464e-05, 2.0868999399681343e-06, 3.315215280963457e-06, 7.647071470273659e-06], "target_probs": 0.9156143665313721}}


{"result": {"time": "2021-02-21 12:55:08.727839", "n_pass": [26, 3, 3], "n_token": 78, "loss": [5.781483559985645e-05, 0.014109985902905464], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def test01(", "self", ")", ":", "#NEWLINE#", "#INDENT#", "'Opening a table with nested types with gaps.'", "#NEWLINE#", "tbl", "=", "self", ".", "h5file", ".", "get_node", "(", "'/nestedtype'", ")", "#NEWLINE#", "type_descr", "=", "repr", "(", "tbl", ".", ",", "tbl", ".", "description", ".", "_v_itemsize", ")", "#NEWLINE#", "print", "(", "'And should be: 13'", ")", "#NEWLINE#", "print", "(", "'Representation of the nested type:\\n'", ",", "type_descr", ")", "#NEWLINE#", "print", "(", "'And should be:\\n'", ",", "self", ".", "correct_descr", ")", "#NEWLINE#", "#UNINDENT#", "self", ".", "assertEqual", "(", "tbl", ".", "description", ".", "_v_itemsize", ",", "13", ")", "#NEWLINE#", "self", ".", "assertEqual", "(", "tbl", ",", "self", ".", "correct_descr"]}}
{"position": {"error_location": 50, "repair_targets": [20, 43], "repair_candidates": [9, 24, 27, 60, 73, 20, 43, 2, 11, 50, 56, 69, 75]}}
{"prediction": {"error_location": 0.9999421834945679, "repair_targets": [0.9858381152153015, 0.00015095589333213866], "repair_candidates": [4.162102868576767e-06, 0.009962363168597221, 1.1092179192928597e-05, 0.9858381152153015, 0.0034845606423914433, 0.00038364381180144846, 0.00015095589333213866, 9.917192801367491e-05, 2.0878440409433097e-05, 2.5165119950543158e-05, 9.921931223288993e-07, 3.485386287138681e-06, 1.539222830615472e-05], "target_probs": 0.9859890937805176}}


{"result": {"time": "2021-02-21 12:55:08.817774", "n_pass": [47, 4, 4], "n_token": 72, "loss": [0.03274918347597122, 0.04141495004296303], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def test01(", "self", ")", ":", "#NEWLINE#", "#INDENT#", "'Opening a table with nested types with gaps.'", "#NEWLINE#", "tbl", "=", "self", ")", "#NEWLINE#", "type_descr", "=", "repr", "(", "tbl", ".", ",", "tbl", ".", "description", ".", "_v_itemsize", ")", "#NEWLINE#", "print", "(", "'And should be: 13'", ")", "#NEWLINE#", "print", "(", "'Representation of the nested type:\\n'", ",", "type_descr", ")", "#NEWLINE#", "print", "(", "'And should be:\\n'", ",", "self", ".", "correct_descr", ")", "#NEWLINE#", "#UNINDENT#", "self", ".", "assertEqual", "(", "tbl", ".", "description", ".", "_v_itemsize", ",", "13", ")", "#NEWLINE#", "self", ".", "assertEqual", "(", "tbl", ",", "self", ".", "correct_descr"]}}
{"position": {"error_location": 44, "repair_targets": [14, 37], "repair_candidates": [9, 18, 21, 54, 67, 14, 37, 2, 11, 44, 50, 63, 69]}}
{"prediction": {"error_location": 0.9677810668945312, "repair_targets": [0.958572506904602, 0.0008584539755247533], "repair_candidates": [8.194237125280779e-06, 0.013004268519580364, 0.01427214965224266, 0.958572506904602, 0.003399453591555357, 0.000764169089961797, 0.0008584539755247533, 0.008510199375450611, 0.00014606658078264445, 6.15035169175826e-05, 7.560254289273871e-06, 2.6447285563335754e-05, 0.0003690017620101571], "target_probs": 0.9594309329986572}}


{"result": {"time": "2021-02-21 12:55:08.905038", "n_pass": [50, 5, 5], "n_token": 66, "loss": [0.09884349256753922, 0.04210900142788887], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def test01(", "self", ")", ":", "#NEWLINE#", "#INDENT#", "'Opening a table with nested types with gaps.'", "#NEWLINE#", "tbl", "=", "self", ")", "#NEWLINE#", "type_descr", "=", "repr", "(", "tbl", ".", ",", "tbl", ".", "description", "'And should be: 13'", ")", "#NEWLINE#", "print", "(", "'Representation of the nested type:\\n'", ",", "type_descr", ")", "#NEWLINE#", "print", "(", "'And should be:\\n'", ",", "self", ".", "correct_descr", ")", "#NEWLINE#", "#UNINDENT#", "self", ".", "assertEqual", "(", "tbl", ".", "description", ".", "_v_itemsize", ",", "13", ")", "#NEWLINE#", "self", ".", "assertEqual", "(", "tbl", ",", "self", ".", "correct_descr"]}}
{"position": {"error_location": 38, "repair_targets": [14, 31], "repair_candidates": [9, 18, 21, 48, 61, 14, 31, 2, 11, 38, 44, 57, 63]}}
{"prediction": {"error_location": 0.9058842658996582, "repair_targets": [0.9585493803024292, 0.00021589933021459728], "repair_candidates": [5.479530500451801e-06, 0.008620467968285084, 0.011434256099164486, 0.9585493803024292, 0.004070869646966457, 0.0006190160638652742, 0.00021589933021459728, 0.016170300543308258, 7.709972123848274e-05, 2.0280966054997407e-05, 3.4105726172128925e-06, 1.234465071320301e-05, 0.0002011219330597669], "target_probs": 0.9587652683258057}}


{"result": {"time": "2021-02-21 12:55:08.985958", "n_pass": [51, 6, 6], "n_token": 59, "loss": [0.05277986079454422, 0.07713636010885239], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def test01(", "self", ")", ":", "#NEWLINE#", "#INDENT#", "'Opening a table with nested types with gaps.'", "#NEWLINE#", "tbl", "=", "self", ")", "#NEWLINE#", "type_descr", "=", "repr", "(", "tbl", ".", ",", "tbl", ".", "description", "type_descr", ")", "#NEWLINE#", "print", "(", "'And should be:\\n'", ",", "self", ".", "correct_descr", ")", "#NEWLINE#", "#UNINDENT#", "self", ".", "assertEqual", "(", "tbl", ".", "description", ".", "_v_itemsize", ",", "13", ")", "#NEWLINE#", "self", ".", "assertEqual", "(", "tbl", ",", "self", ".", "correct_descr"]}}
{"position": {"error_location": 31, "repair_targets": [14, 24], "repair_candidates": [9, 18, 21, 41, 54, 14, 24, 2, 11, 31, 37, 50, 56]}}
{"prediction": {"error_location": 0.9485889077186584, "repair_targets": [0.9183917045593262, 0.007371880114078522], "repair_candidates": [1.1934975191252306e-05, 0.03474504500627518, 0.023983966559171677, 0.9183917045593262, 0.007844624109566212, 0.00360236712731421, 0.007371880114078522, 0.0032650555949658155, 0.00023300402972381562, 0.0001004882506094873, 8.528469152224716e-06, 2.638565820234362e-05, 0.00041504352702759206], "target_probs": 0.9257636070251465}}


{"result": {"time": "2021-02-21 12:55:09.224330", "n_pass": [85, 9, 7], "n_token": 55, "loss": [0.026982156559824944, 0.0665685385465622], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def test01(", "self", ")", ":", "#NEWLINE#", "#INDENT#", "'Opening a table with nested types with gaps.'", "#NEWLINE#", "tbl", "=", "self", ")", "#NEWLINE#", "type_descr", "=", "repr", "(", "tbl", ".", ",", "tbl", ".", "description", "type_descr", ")", "#NEWLINE#", "print", "(", "'And should be:\\n'", ",", "self", ".", "correct_descr", ")", "#NEWLINE#", "#UNINDENT#", "self", ".", "assertEqual", "(", "tbl", ".", "13", ")", "#NEWLINE#", "self", ".", "assertEqual", "(", "tbl", ",", "self", ".", "correct_descr"]}}
{"position": {"error_location": 31, "repair_targets": [14, 24], "repair_candidates": [9, 18, 21, 41, 50, 14, 24, 2, 11, 31, 37, 46, 52]}}
{"prediction": {"error_location": 0.973378598690033, "repair_targets": [0.9323615431785583, 0.0032372598070651293], "repair_candidates": [8.812377018330153e-06, 0.0397263802587986, 0.014991824515163898, 0.9323615431785583, 0.005718930624425411, 0.0023015979677438736, 0.0032372598070651293, 0.0010685677407309413, 0.00012810523912776262, 0.0003080716705881059, 2.8400115752447164e-06, 1.1367209481250029e-05, 0.00013470584235619754], "target_probs": 0.9355987906455994}}


{"result": {"time": "2021-02-21 12:55:09.303756", "n_pass": [90, 10, 8], "n_token": 52, "loss": [0.03727096691727638, 0.11939901858568192], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def test01(", "self", "#INDENT#", "'Opening a table with nested types with gaps.'", "#NEWLINE#", "tbl", "=", "self", ")", "#NEWLINE#", "type_descr", "=", "repr", "(", "tbl", ".", ",", "tbl", ".", "description", "type_descr", ")", "#NEWLINE#", "print", "(", "'And should be:\\n'", ",", "self", ".", "correct_descr", ")", "#NEWLINE#", "#UNINDENT#", "self", ".", "assertEqual", "(", "tbl", ".", "13", ")", "#NEWLINE#", "self", ".", "assertEqual", "(", "tbl", ",", "self", ".", "correct_descr"]}}
{"position": {"error_location": 28, "repair_targets": [11, 21], "repair_candidates": [6, 15, 18, 38, 47, 11, 21, 2, 8, 28, 34, 43, 49]}}
{"prediction": {"error_location": 0.9634150266647339, "repair_targets": [0.8796641826629639, 0.007789439056068659], "repair_candidates": [1.3125436453265138e-05, 0.07585994899272919, 0.020783042535185814, 0.8796641826629639, 0.007874027825891972, 0.0025486047379672527, 0.007789439056068659, 0.0044469572603702545, 0.0001716146944090724, 0.000495624786708504, 5.147167030372657e-06, 2.0200288417981938e-05, 0.00032802787609398365], "target_probs": 0.8874536156654358}}


{"result": {"time": "2021-02-21 12:55:09.379608", "n_pass": [91, 11, 9], "n_token": 49, "loss": [0.5017178654670715, 0.12169031798839569], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def test01(", "self", "tbl", "=", "self", ")", "#NEWLINE#", "type_descr", "=", "repr", "(", "tbl", ".", ",", "tbl", ".", "description", "type_descr", ")", "#NEWLINE#", "print", "(", "'And should be:\\n'", ",", "self", ".", "correct_descr", ")", "#NEWLINE#", "#UNINDENT#", "self", ".", "assertEqual", "(", "tbl", ".", "13", ")", "#NEWLINE#", "self", ".", "assertEqual", "(", "tbl", ",", "self", ".", "correct_descr"]}}
{"position": {"error_location": 25, "repair_targets": [8, 18], "repair_candidates": [3, 12, 15, 35, 44, 8, 18, 2, 5, 25, 31, 40, 46]}}
{"prediction": {"error_location": 0.6054895520210266, "repair_targets": [0.8679008483886719, 0.017521698027849197], "repair_candidates": [0.0008619440486654639, 0.07683656364679337, 0.018231850117444992, 0.8679008483886719, 0.004381356295198202, 0.0028776030521839857, 0.017521698027849197, 0.010944546200335026, 8.002098184078932e-05, 0.0001137307845056057, 3.695533223435632e-06, 1.5581586922053248e-05, 0.0002304501977050677], "target_probs": 0.8854225277900696}}


{"result": {"time": "2021-02-21 12:55:09.679933", "n_pass": [139, 15, 10], "n_token": 48, "loss": [0.0113587137311697, 0.026799581944942474], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def test01(", "self", "tbl", "self", ")", "#NEWLINE#", "type_descr", "=", "repr", "(", "tbl", ".", ",", "tbl", ".", "description", "type_descr", ")", "#NEWLINE#", "print", "(", "'And should be:\\n'", ",", "self", ".", "correct_descr", ")", "#NEWLINE#", "#UNINDENT#", "self", ".", "assertEqual", "(", "tbl", ".", "13", ")", "#NEWLINE#", "self", ".", "assertEqual", "(", "tbl", ",", "self", ".", "correct_descr"]}}
{"position": {"error_location": 24, "repair_targets": [7, 17], "repair_candidates": [3, 11, 14, 34, 43, 7, 17, 2, 4, 24, 30, 39, 45]}}
{"prediction": {"error_location": 0.988705575466156, "repair_targets": [0.9627860188484192, 0.010770301334559917], "repair_candidates": [3.9377904613502324e-05, 0.0016955587780103087, 0.018565261736512184, 0.9627860188484192, 0.003409421071410179, 0.0015418323455378413, 0.010770301334559917, 0.0008334792219102383, 5.1259135943837464e-05, 0.00010129651491297409, 2.9025077310507186e-06, 1.5088207874214277e-05, 0.00018817778618540615], "target_probs": 0.9735563397407532}}


{"result": {"time": "2021-02-21 12:55:09.754500", "n_pass": [141, 16, 11], "n_token": 47, "loss": [0.002315342193469405, 0.07292626053094864], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def test01(", "self", "tbl", "self", "#NEWLINE#", "type_descr", "=", "repr", "(", "tbl", ".", ",", "tbl", ".", "description", "type_descr", ")", "#NEWLINE#", "print", "(", "'And should be:\\n'", ",", "self", ".", "correct_descr", ")", "#NEWLINE#", "#UNINDENT#", "self", ".", "assertEqual", "(", "tbl", ".", "13", ")", "#NEWLINE#", "self", ".", "assertEqual", "(", "tbl", ",", "self", ".", "correct_descr"]}}
{"position": {"error_location": 23, "repair_targets": [6, 16], "repair_candidates": [3, 10, 13, 33, 42, 6, 16, 2, 4, 23, 29, 38, 44]}}
{"prediction": {"error_location": 0.9976873397827148, "repair_targets": [0.9176152944564819, 0.012054091319441795], "repair_candidates": [6.276543717831373e-05, 0.00317578436806798, 0.054351821541786194, 0.9176152944564819, 0.009836897253990173, 0.001923660864122212, 0.012054091319441795, 0.0006276343483477831, 6.062782267690636e-05, 0.00010020146874012426, 2.757884203674621e-06, 1.4414947145269252e-05, 0.0001740862790029496], "target_probs": 0.9296693801879883}}


{"result": {"time": "2021-02-21 12:55:09.977684", "n_pass": [145, 19, 12], "n_token": 46, "loss": [0.0031735554803162813, 0.16710570454597473], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def test01(", "self", "tbl", "self", "#NEWLINE#", "type_descr", "=", "(", "tbl", ".", ",", "tbl", ".", "description", "type_descr", ")", "#NEWLINE#", "print", "(", "'And should be:\\n'", ",", "self", ".", "correct_descr", ")", "#NEWLINE#", "#UNINDENT#", "self", ".", "assertEqual", "(", "tbl", ".", "13", ")", "#NEWLINE#", "self", ".", "assertEqual", "(", "tbl", ",", "self", ".", "correct_descr"]}}
{"position": {"error_location": 22, "repair_targets": [6, 15], "repair_candidates": [3, 9, 12, 32, 41, 6, 15, 2, 4, 22, 28, 37, 43]}}
{"prediction": {"error_location": 0.9968315958976746, "repair_targets": [0.8199756145477295, 0.02613452635705471], "repair_candidates": [0.00010086621477967128, 0.00439790403470397, 0.07455193996429443, 0.8199756145477295, 0.06947918236255646, 0.0034301397390663624, 0.02613452635705471, 0.0012559846509248018, 9.815450175665319e-05, 0.0001796679280232638, 5.308105301082833e-06, 2.6970592443831265e-05, 0.000363765109796077], "target_probs": 0.8461101651191711}}


{"result": {"time": "2021-02-21 12:55:10.051433", "n_pass": [147, 20, 13], "n_token": 44, "loss": [0.0029250476509332657, 0.2292947620153427], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def test01(", "self", "tbl", "self", "#NEWLINE#", "type_descr", "=", "(", "tbl", "tbl", ".", "description", "type_descr", ")", "#NEWLINE#", "print", "(", "'And should be:\\n'", ",", "self", ".", "correct_descr", ")", "#NEWLINE#", "#UNINDENT#", "self", ".", "assertEqual", "(", "tbl", ".", "13", ")", "#NEWLINE#", "self", ".", "assertEqual", "(", "tbl", ",", "self", ".", "correct_descr"]}}
{"position": {"error_location": 20, "repair_targets": [6, 13], "repair_candidates": [3, 9, 10, 30, 39, 6, 13, 2, 4, 20, 26, 35, 41]}}
{"prediction": {"error_location": 0.9970792531967163, "repair_targets": [0.7837799787521362, 0.011314180679619312], "repair_candidates": [8.391522715101019e-05, 0.0034135787282139063, 0.06179024279117584, 0.7837799787521362, 0.03196010738611221, 0.10401668399572372, 0.011314180679619312, 0.0022192338947206736, 0.0002306822716491297, 0.0004929658025503159, 9.106614015763626e-06, 3.911885141860694e-05, 0.0006501820171251893], "target_probs": 0.7950941324234009}}


{"result": {"time": "2021-02-21 12:55:10.124078", "n_pass": [150, 21, 14], "n_token": 42, "loss": [0.018157219514250755, 0.12510180473327637], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def test01(", "self", "tbl", "self", "#NEWLINE#", "type_descr", "=", "(", "tbl", "tbl", ".", "description", "type_descr", "print", "(", "'And should be:\\n'", ",", "self", ".", "correct_descr", ")", "#NEWLINE#", "#UNINDENT#", "self", ".", "assertEqual", "(", "tbl", ".", "13", ")", "#NEWLINE#", "self", ".", "assertEqual", "(", "tbl", ",", "self", ".", "correct_descr"]}}
{"position": {"error_location": 18, "repair_targets": [6, 13], "repair_candidates": [3, 9, 10, 28, 37, 6, 13, 2, 4, 18, 24, 33, 39]}}
{"prediction": {"error_location": 0.9820064902305603, "repair_targets": [0.8783921599388123, 0.004014906007796526], "repair_candidates": [7.282875594682992e-05, 0.002387653337791562, 0.03518527001142502, 0.8783921599388123, 0.019151095300912857, 0.04865821823477745, 0.004014906007796526, 0.0106973173096776, 0.00021457455295603722, 0.00024273681628983468, 1.0387765541963745e-05, 5.010757740819827e-05, 0.0009228112176060677], "target_probs": 0.8824070692062378}}


{"result": {"time": "2021-02-21 12:55:10.265637", "n_pass": [152, 23, 15], "n_token": 40, "loss": [0.013548563234508038, 0.342446506023407], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def test01(", "self", "tbl", "self", "#NEWLINE#", "type_descr", "=", "(", "tbl", "tbl", ".", "description", "type_descr", "print", "(", "self", ".", "correct_descr", ")", "#NEWLINE#", "#UNINDENT#", "self", ".", "assertEqual", "(", "tbl", ".", "13", ")", "#NEWLINE#", "self", ".", "assertEqual", "(", "tbl", ",", "self", ".", "correct_descr"]}}
{"position": {"error_location": 16, "repair_targets": [6, 13], "repair_candidates": [3, 9, 10, 26, 35, 6, 13, 2, 4, 16, 22, 31, 37]}}
{"prediction": {"error_location": 0.9865429401397705, "repair_targets": [0.7037100195884705, 0.006321071647107601], "repair_candidates": [7.039643242023885e-05, 0.003041214542463422, 0.0778937116265297, 0.7037100195884705, 0.04656943678855896, 0.15763284265995026, 0.006321071647107601, 0.003655701410025358, 0.00023581122513860464, 0.00018640849157236516, 5.964763658994343e-06, 2.6146184609388e-05, 0.0006512606050819159], "target_probs": 0.7100310921669006}}


{"result": {"time": "2021-02-21 12:55:10.337674", "n_pass": [154, 24, 16], "n_token": 38, "loss": [0.46908003091812134, 0.2384953498840332], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def test01(", "self", "tbl", "self", "#NEWLINE#", "type_descr", "=", "(", "tbl", "tbl", ".", "description", "type_descr", "print", "(", "self", ".", "#NEWLINE#", "#UNINDENT#", "self", ".", "assertEqual", "(", "tbl", ".", "13", ")", "#NEWLINE#", "self", ".", "assertEqual", "(", "tbl", ",", "self", ".", "correct_descr"]}}
{"position": {"error_location": 16, "repair_targets": [6, 13], "repair_candidates": [3, 9, 10, 24, 33, 6, 13, 2, 4, 16, 20, 29, 35]}}
{"prediction": {"error_location": 0.6255775690078735, "repair_targets": [0.7790612578392029, 0.00875110924243927], "repair_candidates": [8.937203529058024e-05, 0.0041360873728990555, 0.08928437530994415, 0.7790612578392029, 0.027727637439966202, 0.06615981459617615, 0.00875110924243927, 0.022666513919830322, 0.0015249240677803755, 0.00022456898295786232, 8.140508725773543e-06, 2.241040056105703e-05, 0.000343911669915542], "target_probs": 0.787812352180481}}


{"result": {"time": "2021-02-21 12:55:10.475504", "n_pass": [157, 26, 17], "n_token": 36, "loss": [0.3522237241268158, 0.13226306438446045], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def test01(", "self", "tbl", "self", "#NEWLINE#", "type_descr", "=", "(", "tbl", "tbl", ".", "description", "type_descr", "print", "(", "self", ".", "#NEWLINE#", "#UNINDENT#", "self", ".", "tbl", ".", "13", ")", "#NEWLINE#", "self", ".", "assertEqual", "(", "tbl", ",", "self", ".", "correct_descr"]}}
{"position": {"error_location": 16, "repair_targets": [6, 13], "repair_candidates": [3, 9, 10, 22, 31, 6, 13, 2, 4, 16, 20, 27, 33]}}
{"prediction": {"error_location": 0.7031226754188538, "repair_targets": [0.852278470993042, 0.023832019418478012], "repair_candidates": [0.00013093423331156373, 0.007017059251666069, 0.10718797892332077, 0.852278470993042, 0.001670242752879858, 0.0024825739674270153, 0.023832019418478012, 0.00037956496817059815, 0.0005867460859008133, 0.003774235723540187, 6.694558578601573e-06, 3.3136846468551084e-05, 0.0006202677614055574], "target_probs": 0.8761104941368103}}


{"result": {"time": "2021-02-21 12:55:10.543352", "n_pass": [159, 27, 18], "n_token": 34, "loss": [0.8899461627006531, 0.14387023448944092], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def test01(", "self", "tbl", "self", "#NEWLINE#", "type_descr", "=", "(", "tbl", "tbl", ".", "description", "type_descr", "print", "(", "self", ".", "#NEWLINE#", "#UNINDENT#", "self", ".", "tbl", ".", "#NEWLINE#", "self", ".", "assertEqual", "(", "tbl", ",", "self", ".", "correct_descr"]}}
{"position": {"error_location": 16, "repair_targets": [6, 13], "repair_candidates": [3, 9, 10, 22, 29, 6, 13, 2, 4, 16, 20, 25, 31]}}
{"prediction": {"error_location": 0.41067788004875183, "repair_targets": [0.8298025727272034, 0.03619754686951637], "repair_candidates": [0.00017731377738527954, 0.008335500955581665, 0.11163658648729324, 0.8298025727272034, 0.003093309933319688, 0.00455186702311039, 0.03619754686951637, 0.0016222376143559813, 0.00023572549980599433, 0.0033069178462028503, 2.547176154621411e-05, 4.394607822177932e-05, 0.0009710773592814803], "target_probs": 0.8660001158714294}}


{"result": {"time": "2021-02-21 12:55:11.217009", "n_pass": [209, 37, 19], "n_token": 33, "loss": [0.7232090830802917, 0.31840771436691284], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def test01(", "self", "tbl", "self", "#NEWLINE#", "type_descr", "=", "(", "tbl", "tbl", ".", "description", "type_descr", "print", "(", "self", ".", "#NEWLINE#", "#UNINDENT#", "self", ".", "tbl", ".", "#NEWLINE#", "self", ".", "(", "tbl", ",", "self", ".", "correct_descr"]}}
{"position": {"error_location": 16, "repair_targets": [6, 13], "repair_candidates": [3, 9, 10, 22, 28, 6, 13, 2, 4, 16, 20, 25, 30]}}
{"prediction": {"error_location": 0.4851928651332855, "repair_targets": [0.6995278000831604, 0.02777840383350849], "repair_candidates": [0.00020791057613678277, 0.013258651830255985, 0.24744874238967896, 0.6995278000831604, 0.0015956456772983074, 0.004623997490853071, 0.02777840383350849, 0.0011940866243094206, 0.00012703258835244924, 0.002406276063993573, 4.528761564870365e-05, 0.00036851572804152966, 0.0014175857650116086], "target_probs": 0.7273061871528625}}


{"result": {"time": "2021-02-21 12:55:11.283555", "n_pass": [210, 38, 20], "n_token": 32, "loss": [0.0823257640004158, 0.3495563268661499], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def test01(", "self", "tbl", "self", "#NEWLINE#", "type_descr", "=", "(", "tbl", "tbl", ".", "description", "type_descr", "print", "(", "self", ".", "#NEWLINE#", "#UNINDENT#", "self", ".", "tbl", ".", "#NEWLINE#", "self", ".", "tbl", ",", "self", ".", "correct_descr"]}}
{"position": {"error_location": 16, "repair_targets": [6, 13], "repair_candidates": [3, 9, 10, 22, 27, 6, 13, 2, 4, 16, 20, 25, 29]}}
{"prediction": {"error_location": 0.9209718704223633, "repair_targets": [0.7011685371398926, 0.0038322971668094397], "repair_candidates": [0.0001804217608878389, 0.008691802620887756, 0.20852020382881165, 0.7011685371398926, 0.027014093473553658, 0.02259264513850212, 0.0038322971668094397, 0.000686713436152786, 0.0005875687347725034, 0.004040708765387535, 0.00039916185778565705, 0.007268903777003288, 0.015016981400549412], "target_probs": 0.7050008177757263}}


{"result": {"time": "2021-02-21 12:55:11.350352", "n_pass": [212, 39, 21], "n_token": 31, "loss": [0.009246975183486938, 0.501901388168335], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def test01(", "self", "tbl", "self", "#NEWLINE#", "type_descr", "=", "(", "tbl", "tbl", ".", "description", "type_descr", "print", "(", "self", ".", "#NEWLINE#", "#UNINDENT#", "self", ".", "tbl", ".", "#NEWLINE#", "self", ".", "tbl", "self", ".", "correct_descr"]}}
{"position": {"error_location": 16, "repair_targets": [6, 13], "repair_candidates": [3, 9, 10, 22, 27, 6, 13, 2, 4, 16, 20, 25, 28]}}
{"prediction": {"error_location": 0.9907956719398499, "repair_targets": [0.6024169921875, 0.0029615445528179407], "repair_candidates": [0.00018043497402686626, 0.008168349973857403, 0.19547466933727264, 0.6024169921875, 0.09217913448810577, 0.05356870964169502, 0.0029615445528179407, 0.0004935700562782586, 0.0013725572498515248, 0.0027590838726609945, 0.0002237130975117907, 0.03956451639533043, 0.0006367119494825602], "target_probs": 0.6053785085678101}}


{"result": {"time": "2021-02-21 12:55:11.416332", "n_pass": [214, 40, 22], "n_token": 30, "loss": [0.009714589454233646, 0.6088650226593018], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def test01(", "self", "tbl", "self", "#NEWLINE#", "type_descr", "=", "(", "tbl", "tbl", ".", "description", "type_descr", "print", "(", "self", ".", "#NEWLINE#", "#UNINDENT#", "self", ".", "tbl", ".", "#NEWLINE#", "self", ".", "tbl", "self", "correct_descr"]}}
{"position": {"error_location": 16, "repair_targets": [6, 13], "repair_candidates": [3, 9, 10, 22, 27, 6, 13, 2, 4, 16, 20, 25, 28]}}
{"prediction": {"error_location": 0.9903324246406555, "repair_targets": [0.5393657088279724, 0.004602192435413599], "repair_candidates": [0.00020079570822417736, 0.009671852923929691, 0.19914409518241882, 0.5393657088279724, 0.04796202480792999, 0.03828291967511177, 0.004602192435413599, 0.0003333997738081962, 0.0003257520729675889, 0.00762226851657033, 0.00010159458179259673, 0.15230491757392883, 8.240910392487422e-05], "target_probs": 0.5439679026603699}}


{"result": {"time": "2021-02-21 12:55:11.484107", "n_pass": [215, 41, 23], "n_token": 29, "loss": [0.015283966436982155, 0.5572123527526855], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def test01(", "self", "tbl", "self", "#NEWLINE#", "type_descr", "=", "(", "tbl", "tbl", ".", "description", "type_descr", "print", "(", "self", ".", "#NEWLINE#", "#UNINDENT#", "self", ".", "tbl", ".", "#NEWLINE#", "self", ".", "tbl", "self"]}}
{"position": {"error_location": 16, "repair_targets": [6, 13], "repair_candidates": [3, 9, 10, 22, 27, 6, 13, 2, 4, 16, 20, 25, 28]}}
{"prediction": {"error_location": 0.9848321080207825, "repair_targets": [0.5675389766693115, 0.005264651030302048], "repair_candidates": [0.0001556648057885468, 0.007384331431239843, 0.1418076455593109, 0.5675389766693115, 0.08847680687904358, 0.06243140250444412, 0.005264651030302048, 0.00034547733957879245, 0.0005774185992777348, 0.016412172466516495, 0.00011003403051290661, 0.10930855572223663, 0.00018693604215513915], "target_probs": 0.5728036165237427}}


{"result": {"time": "2021-02-21 12:55:11.549179", "n_pass": [216, 42, 24], "n_token": 28, "loss": [0.019457660615444183, 0.42519429326057434], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["def test01(", "self", "tbl", "self", "#NEWLINE#", "type_descr", "=", "(", "tbl", "tbl", ".", "description", "type_descr", "print", "(", "self", ".", "#NEWLINE#", "#UNINDENT#", "self", ".", "tbl", ".", "#NEWLINE#", "self", ".", "tbl", "self"]}}
{"position": {"error_location": 15, "repair_targets": [5, 12], "repair_candidates": [2, 8, 9, 21, 26, 5, 12, 1, 3, 15, 19, 24, 27]}}
{"prediction": {"error_location": 0.9807305335998535, "repair_targets": [0.6519998908042908, 0.001642897492274642], "repair_candidates": [0.00047796565922908485, 0.002093384275212884, 0.22656722366809845, 0.6519998908042908, 0.02716132439672947, 0.015373731032013893, 0.001642897492274642, 0.00015979964518919587, 0.0002695540024433285, 0.006852385587990284, 4.313970930525102e-05, 0.06725654006004333, 0.00010211542394245043], "target_probs": 0.6536427736282349}}


{"result": {"time": "2021-02-21 12:55:11.613357", "n_pass": [217, 43, 25], "n_token": 27, "loss": [0.020762484520673752, 0.27110910415649414], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["self", "tbl", "self", "#NEWLINE#", "type_descr", "=", "(", "tbl", "tbl", ".", "description", "type_descr", "print", "(", "self", ".", "#NEWLINE#", "#UNINDENT#", "self", ".", "tbl", ".", "#NEWLINE#", "self", ".", "tbl", "self"]}}
{"position": {"error_location": 14, "repair_targets": [4, 11], "repair_candidates": [1, 7, 8, 20, 25, 4, 11, 0, 2, 14, 18, 23, 26]}}
{"prediction": {"error_location": 0.9794517159461975, "repair_targets": [0.7613707780838013, 0.0011625022161751986], "repair_candidates": [0.010343577712774277, 0.006981425452977419, 0.1295456439256668, 0.7613707780838013, 0.02835938334465027, 0.023113219067454338, 0.0011625022161751986, 0.00020206326735205948, 0.0002765190147329122, 0.0034748560283333063, 3.9441722037736326e-05, 0.03498092293739319, 0.0001496136246714741], "target_probs": 0.7625333070755005}}


{"result": {"time": "2021-02-21 12:55:11.804950", "n_pass": [224, 46, 26], "n_token": 26, "loss": [0.010389292612671852, 0.06065564975142479], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["self", "tbl", "self", "#NEWLINE#", "type_descr", "=", "tbl", "tbl", ".", "description", "type_descr", "print", "(", "self", ".", "#NEWLINE#", "#UNINDENT#", "self", ".", "tbl", ".", "#NEWLINE#", "self", ".", "tbl", "self"]}}
{"position": {"error_location": 13, "repair_targets": [4, 10], "repair_candidates": [1, 6, 7, 19, 24, 4, 10, 0, 2, 13, 17, 22, 25]}}
{"prediction": {"error_location": 0.9896644949913025, "repair_targets": [0.9406537413597107, 0.0004935389151796699], "repair_candidates": [0.005032193381339312, 0.002816037042066455, 0.02520640194416046, 0.9406537413597107, 0.003286873921751976, 0.007443233393132687, 0.0004935389151796699, 6.438861601054668e-05, 7.011334673734382e-05, 0.0015512765385210514, 1.28292167573818e-05, 0.013330183923244476, 3.920117160305381e-05], "target_probs": 0.9411472678184509}}


{"result": {"time": "2021-02-21 12:55:11.870748", "n_pass": [227, 47, 27], "n_token": 25, "loss": [0.04311489686369896, 0.008181571029126644], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["self", "tbl", "self", "#NEWLINE#", "type_descr", "=", "tbl", "tbl", "description", "type_descr", "print", "(", "self", ".", "#NEWLINE#", "#UNINDENT#", "self", ".", "tbl", ".", "#NEWLINE#", "self", ".", "tbl", "self"]}}
{"position": {"error_location": 12, "repair_targets": [4, 9], "repair_candidates": [1, 6, 7, 18, 23, 4, 9, 0, 2, 12, 16, 21, 24]}}
{"prediction": {"error_location": 0.9578012228012085, "repair_targets": [0.9914576411247253, 0.00039413748891092837], "repair_candidates": [0.0009487256174907088, 0.00026236820849590003, 0.0006974913412705064, 0.9914576411247253, 0.003722686553373933, 0.0010289386846125126, 0.00039413748891092837, 1.075369982572738e-05, 6.796589332225267e-06, 0.00038807952660135925, 1.756611823111598e-06, 0.0010705208405852318, 1.0085867870657239e-05], "target_probs": 0.991851806640625}}


{"result": {"time": "2021-02-21 12:55:11.933699", "n_pass": [228, 48, 28], "n_token": 24, "loss": [0.024913886561989784, 0.04085281118750572], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["self", "tbl", "self", "#NEWLINE#", "type_descr", "=", "tbl", "tbl", "type_descr", "print", "(", "self", ".", "#NEWLINE#", "#UNINDENT#", "self", ".", "tbl", ".", "#NEWLINE#", "self", ".", "tbl", "self"]}}
{"position": {"error_location": 11, "repair_targets": [4, 8], "repair_candidates": [1, 6, 7, 17, 22, 4, 8, 0, 2, 11, 15, 20, 23]}}
{"prediction": {"error_location": 0.9753938913345337, "repair_targets": [0.9561840891838074, 0.0037863063625991344], "repair_candidates": [0.0043957126326859, 0.0007406924851238728, 0.0005581945297308266, 0.9561840891838074, 0.0006480037700384855, 0.0004814398125745356, 0.0037863063625991344, 9.84174112090841e-05, 7.831560651538894e-05, 0.0031851560343056917, 1.0311503501725383e-05, 0.029792482033371925, 4.076439290656708e-05], "target_probs": 0.9599704146385193}}


{"result": {"time": "2021-02-21 12:55:11.996187", "n_pass": [230, 49, 29], "n_token": 23, "loss": [0.7563228011131287, 0.07658351957798004], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["self", "tbl", "self", "#NEWLINE#", "type_descr", "=", "tbl", "tbl", "type_descr", "(", "self", ".", "#NEWLINE#", "#UNINDENT#", "self", ".", "tbl", ".", "#NEWLINE#", "self", ".", "tbl", "self"]}}
{"position": {"error_location": 10, "repair_targets": [4, 8], "repair_candidates": [1, 6, 7, 16, 21, 4, 8, 0, 2, 10, 14, 19, 22]}}
{"prediction": {"error_location": 0.46938928961753845, "repair_targets": [0.9144330024719238, 0.011842566542327404], "repair_candidates": [0.0047139013186097145, 0.0007352858665399253, 0.0004161971155554056, 0.9144330024719238, 0.0004234953667037189, 0.0004626357404049486, 0.011842566542327404, 0.00038254837272688746, 9.644336387282237e-05, 0.001982186222448945, 1.62325468409108e-05, 0.06438875943422318, 0.0001067563280230388], "target_probs": 0.9262755513191223}}


{"result": {"time": "2021-02-21 12:55:12.119921", "n_pass": [233, 51, 30], "n_token": 22, "loss": [0.004457656294107437, 0.0018035334069281816], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["self", "tbl", "self", "#NEWLINE#", "type_descr", "=", "tbl", "tbl", "type_descr", "(", "self", "#NEWLINE#", "#UNINDENT#", "self", ".", "tbl", ".", "#NEWLINE#", "self", ".", "tbl", "self"]}}
{"position": {"error_location": 10, "repair_targets": [4, 8], "repair_candidates": [1, 6, 7, 15, 20, 4, 8, 0, 2, 10, 13, 18, 21]}}
{"prediction": {"error_location": 0.9955522418022156, "repair_targets": [0.9968584775924683, 0.0013395908754318953], "repair_candidates": [0.0009555052383802831, 0.0001246036117663607, 4.545810224954039e-05, 0.9968584775924683, 7.827161607565358e-05, 0.00016857356240507215, 0.0013395908754318953, 0.000165142715559341, 6.322400167846354e-07, 4.5548971684183925e-05, 2.6272346076439135e-07, 0.00021441138233058155, 3.479334054645733e-06], "target_probs": 0.9981980919837952}}


{"result": {"time": "2021-02-21 12:55:12.181268", "n_pass": [234, 52, 31], "n_token": 21, "loss": [0.12751786410808563, 0.032360222190618515], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["self", "tbl", "self", "#NEWLINE#", "type_descr", "=", "tbl", "tbl", "type_descr", "(", "self", "#UNINDENT#", "self", ".", "tbl", ".", "#NEWLINE#", "self", ".", "tbl", "self"]}}
{"position": {"error_location": 10, "repair_targets": [4, 8], "repair_candidates": [1, 6, 7, 14, 19, 4, 8, 0, 2, 10, 12, 17, 20]}}
{"prediction": {"error_location": 0.880277693271637, "repair_targets": [0.9657163023948669, 0.002441466087475419], "repair_candidates": [0.0024060162249952555, 0.00034235947532579303, 0.00015463613090105355, 0.9657163023948669, 0.00028292820206843317, 0.00038737442810088396, 0.002441466087475419, 0.00031684551504440606, 0.0001717544364510104, 0.004084894433617592, 4.3458408072183374e-06, 0.023671109229326248, 1.9852350305882283e-05], "target_probs": 0.9681577682495117}}


{"result": {"time": "2021-02-21 12:55:12.365077", "n_pass": [239, 55, 32], "n_token": 20, "loss": [0.33339717984199524, 0.02394982986152172], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["self", "tbl", "self", "#NEWLINE#", "type_descr", "=", "tbl", "tbl", "type_descr", "(", "self", "#UNINDENT#", "self", ".", "tbl", "#NEWLINE#", "self", ".", "tbl", "self"]}}
{"position": {"error_location": 10, "repair_targets": [4, 8], "repair_candidates": [1, 6, 7, 14, 18, 4, 8, 0, 2, 10, 12, 16, 19]}}
{"prediction": {"error_location": 0.7164855599403381, "repair_targets": [0.975471019744873, 0.000863666005898267], "repair_candidates": [0.0011543293949216604, 0.00017316665616817772, 8.313889702549204e-05, 0.975471019744873, 0.00021041336003690958, 0.00014951407501939684, 0.000863666005898267, 6.165092781884596e-05, 8.2997496065218e-05, 0.005363116040825844, 7.226856837405649e-07, 0.01637766696512699, 8.683173291501589e-06], "target_probs": 0.9763346910476685}}


{"result": {"time": "2021-02-21 12:55:12.485822", "n_pass": [242, 57, 33], "n_token": 19, "loss": [0.11690336465835571, 0.01916895993053913], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["self", "tbl", "self", "#NEWLINE#", "type_descr", "=", "tbl", "tbl", "type_descr", "(", "self", "#UNINDENT#", "self", ".", "tbl", "#NEWLINE#", "self", "tbl", "self"]}}
{"position": {"error_location": 10, "repair_targets": [4, 8], "repair_candidates": [1, 6, 7, 14, 17, 4, 8, 0, 2, 10, 12, 16, 18]}}
{"prediction": {"error_location": 0.8896711468696594, "repair_targets": [0.9764381051063538, 0.004575486294925213], "repair_candidates": [0.002039279555901885, 0.0003339116519782692, 0.00013902051432523876, 0.9764381051063538, 0.0002898256934713572, 0.0005247617373242974, 0.004575486294925213, 0.00023272940597962588, 0.00020121180568821728, 0.014928484335541725, 1.0319038665329572e-05, 6.537581793963909e-05, 0.000221598704229109], "target_probs": 0.9810135960578918}}


{"result": {"time": "2021-02-21 12:55:12.607521", "n_pass": [250, 59, 34], "n_token": 18, "loss": [0.263650506734848, 0.1742181032896042], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["self", "tbl", "self", "#NEWLINE#", "type_descr", "tbl", "tbl", "type_descr", "(", "self", "#UNINDENT#", "self", ".", "tbl", "#NEWLINE#", "self", "tbl", "self"]}}
{"position": {"error_location": 9, "repair_targets": [4, 7], "repair_candidates": [1, 5, 6, 13, 16, 4, 7, 0, 2, 9, 11, 15, 17]}}
{"prediction": {"error_location": 0.7682418823242188, "repair_targets": [0.8246663808822632, 0.0154472840949893], "repair_candidates": [0.013318995013833046, 0.0018754871562123299, 0.00041676475666463375, 0.8246663808822632, 0.10064928978681564, 0.0083494046702981, 0.0154472840949893, 0.0005624438053928316, 0.0010832366533577442, 0.03267717733979225, 5.8558067394187674e-05, 0.0001665744639467448, 0.0007283265003934503], "target_probs": 0.840113639831543}}


{"result": {"time": "2021-02-21 12:55:12.843635", "n_pass": [260, 63, 35], "n_token": 17, "loss": [0.1648438721895218, 0.5236032605171204], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["self", "tbl", "self", "#NEWLINE#", "type_descr", "tbl", "tbl", "type_descr", "(", "self", "#UNINDENT#", "self", ".", "tbl", "self", "tbl", "self"]}}
{"position": {"error_location": 9, "repair_targets": [4, 7], "repair_candidates": [1, 5, 6, 13, 15, 4, 7, 0, 2, 9, 11, 14, 16]}}
{"prediction": {"error_location": 0.8480260968208313, "repair_targets": [0.5749378800392151, 0.01744428649544716], "repair_candidates": [0.013758180662989616, 0.001646636170335114, 0.0002577579580247402, 0.5749378800392151, 0.11188194155693054, 0.009617342613637447, 0.01744428649544716, 0.0006118310266174376, 0.0005464563146233559, 0.2685752213001251, 0.000210563579457812, 0.00019139624782837927, 0.00032047307468019426], "target_probs": 0.5923821926116943}}


{"result": {"time": "2021-02-21 12:55:13.080169", "n_pass": [276, 67, 36], "n_token": 16, "loss": [0.10250002890825272, 0.1391512155532837], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["self", "tbl", "self", "#NEWLINE#", "type_descr", "tbl", "tbl", "type_descr", "(", "self", "#UNINDENT#", "self", "tbl", "self", "tbl", "self"]}}
{"position": {"error_location": 9, "repair_targets": [4, 7], "repair_candidates": [1, 5, 6, 12, 14, 4, 7, 0, 2, 9, 11, 13, 15]}}
{"prediction": {"error_location": 0.9025779962539673, "repair_targets": [0.8519777655601501, 0.01811867207288742], "repair_candidates": [0.025709141045808792, 0.0036536972038447857, 0.0006779000395908952, 0.8519777655601501, 0.06311289221048355, 0.00749169709160924, 0.01811867207288742, 0.0016068113036453724, 0.009733203798532486, 0.003683721646666527, 0.004556562751531601, 0.003513252129778266, 0.006164735183119774], "target_probs": 0.8700964450836182}}




Minimal simplified tokens:

['self', 'tbl', 'self', '#NEWLINE#', 'type_descr', 'tbl', 'tbl', 'type_descr', '(', 'self', '#UNINDENT#', 'self', 'tbl', 'self', 'tbl', 'self']
