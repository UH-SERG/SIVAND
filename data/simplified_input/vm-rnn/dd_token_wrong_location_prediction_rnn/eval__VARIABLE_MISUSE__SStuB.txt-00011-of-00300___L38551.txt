
Original sample:

{"has_bug": true, "bug_kind": 1, "bug_kind_name": "VARIABLE_MISUSE", "source_tokens": ["#NEWLINE#", "def test_ref_label_with_proper_include_directive(", "self", ")", ":", "#NEWLINE#", "#INDENT#", "desc", "=", "'\\n            input: \"data\"\\n            layer {\\n                name: \"hidden\"\\n                type: \\'InnerProduct\\'\\n                bottom: \"data\"\\n                top: \"output\"\\n            }\\n            layer {\\n                name: \"loss\"\\n                type: \"SoftmaxWithLoss\"\\n                bottom: \"output\"\\n                bottom: \"label\"\\n                top: \"loss\"\\n                include {\\n                    phase: TRAIN\\n                }\\n            }\\n            '", "#NEWLINE#", "check_positive", "(", "self", ",", "caffe_pb2", ".", "TEST", ")"], "error_location": [13], "repair_targets": [7], "repair_candidates": [2, 13, 7], "provenances": [{"datasetProvenance": {"datasetName": "ETHPy150Open", "filepath": "NVIDIA/DIGITS/digits/model/tasks/test_caffe_sanity_checks.py", "license": "bsd-3-clause", "note": "license: manual_eval"}}], "txt_file": "eval__VARIABLE_MISUSE__SStuB.txt-00011-of-00300", "js_count": 38551, "results": {"model": "rnn", "prob": {"loc": [[0.2363983541727066, 1.1539871138666058e-06, 2.138138370355591e-06, 4.101883277485285e-09, 3.4687357430840393e-09, 5.787712211713369e-07, 6.184654921526089e-08, 3.7373834516074567e-07, 8.548362018245825e-08, 2.5023061880347086e-06, 1.2012781098746927e-06, 3.3765106763894437e-06, 1.3968740859127138e-05, 0.3129968047142029, 2.6666126359486952e-05, 0.4505511522293091, 1.2587112685480406e-08, 7.184551691352681e-07, 9.22019466997881e-07]], "pointer": [[0.0, 0.0, 3.7356210668804124e-05, 0.0, 0.0, 0.0, 0.0, 0.999948263168335, 0.0, 0.0, 0.0, 0.0, 0.0, 1.4468761037278455e-05, 0.0, 0.0, 0.0, 0.0, 0.0]], "target": [0.999948263168335]}, "loss": [1.161562204360962, 5.173817044124007e-05], "acc": [0.0, 0.0, 1.0, 0.0]}, "wrong_error_location": [15]}


Trace of simplified code(s):

{"result": {"time": "2021-02-21 12:49:20.382919", "n_pass": [1, 1, 1], "n_token": 19, "loss": [0.7972837090492249, 5.173817044124007e-05], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def test_ref_label_with_proper_include_directive(", "self", ")", ":", "#NEWLINE#", "#INDENT#", "desc", "=", "'\\n            input: \"data\"\\n            layer {\\n                name: \"hidden\"\\n                type: \\'InnerProduct\\'\\n                bottom: \"data\"\\n                top: \"output\"\\n            }\\n            layer {\\n                name: \"loss\"\\n                type: \"SoftmaxWithLoss\"\\n                bottom: \"output\"\\n                bottom: \"label\"\\n                top: \"loss\"\\n                include {\\n                    phase: TRAIN\\n                }\\n            }\\n            '", "#NEWLINE#", "check_positive", "(", "self", ",", "caffe_pb2", ".", "TEST", ")"]}}
{"position": {"error_location": 15, "repair_targets": [7], "repair_candidates": [2, 13, 7]}}
{"prediction": {"error_location": 0.4505511522293091, "repair_targets": [0.999948263168335], "repair_candidates": [3.7356210668804124e-05, 0.999948263168335, 1.4468761037278455e-05], "target_probs": 0.999948263168335}}


{"result": {"time": "2021-02-21 12:49:20.496394", "n_pass": [22, 3, 2], "n_token": 17, "loss": [0.8241123557090759, 0.00023182934091892093], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def test_ref_label_with_proper_include_directive(", "self", ")", "#INDENT#", "desc", "=", "'\\n            input: \"data\"\\n            layer {\\n                name: \"hidden\"\\n                type: \\'InnerProduct\\'\\n                bottom: \"data\"\\n                top: \"output\"\\n            }\\n            layer {\\n                name: \"loss\"\\n                type: \"SoftmaxWithLoss\"\\n                bottom: \"output\"\\n                bottom: \"label\"\\n                top: \"loss\"\\n                include {\\n                    phase: TRAIN\\n                }\\n            }\\n            '", "#NEWLINE#", "check_positive", "(", "self", ",", "caffe_pb2", ".", "TEST", ")"]}}
{"position": {"error_location": 13, "repair_targets": [5], "repair_candidates": [2, 11, 5]}}
{"prediction": {"error_location": 0.4386241137981415, "repair_targets": [0.9997681975364685], "repair_candidates": [0.00011690981045830995, 0.9997681975364685, 0.00011489977623568848], "target_probs": 0.9997681975364685}}


{"result": {"time": "2021-02-21 12:49:21.172521", "n_pass": [54, 15, 3], "n_token": 16, "loss": [0.5517807006835938, 0.02280214987695217], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["def test_ref_label_with_proper_include_directive(", "self", ")", "#INDENT#", "desc", "=", "'\\n            input: \"data\"\\n            layer {\\n                name: \"hidden\"\\n                type: \\'InnerProduct\\'\\n                bottom: \"data\"\\n                top: \"output\"\\n            }\\n            layer {\\n                name: \"loss\"\\n                type: \"SoftmaxWithLoss\"\\n                bottom: \"output\"\\n                bottom: \"label\"\\n                top: \"loss\"\\n                include {\\n                    phase: TRAIN\\n                }\\n            }\\n            '", "#NEWLINE#", "check_positive", "(", "self", ",", "caffe_pb2", ".", "TEST", ")"]}}
{"position": {"error_location": 12, "repair_targets": [4], "repair_candidates": [1, 10, 4]}}
{"prediction": {"error_location": 0.5759233236312866, "repair_targets": [0.9774558544158936], "repair_candidates": [0.01619339920580387, 0.9774558544158936, 0.006350745912641287], "target_probs": 0.9774558544158936}}


{"result": {"time": "2021-02-21 12:49:31.090835", "n_pass": [56, 16, 4], "n_token": 15, "loss": [0.19403478503227234, 0.024492522701621056], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["def test_ref_label_with_proper_include_directive(", "self", "#INDENT#", "desc", "=", "'\\n            input: \"data\"\\n            layer {\\n                name: \"hidden\"\\n                type: \\'InnerProduct\\'\\n                bottom: \"data\"\\n                top: \"output\"\\n            }\\n            layer {\\n                name: \"loss\"\\n                type: \"SoftmaxWithLoss\"\\n                bottom: \"output\"\\n                bottom: \"label\"\\n                top: \"loss\"\\n                include {\\n                    phase: TRAIN\\n                }\\n            }\\n            '", "#NEWLINE#", "check_positive", "(", "self", ",", "caffe_pb2", ".", "TEST", ")"]}}
{"position": {"error_location": 11, "repair_targets": [3], "repair_candidates": [1, 9, 3]}}
{"prediction": {"error_location": 0.8236292004585266, "repair_targets": [0.9758049845695496], "repair_candidates": [0.02361341007053852, 0.9758049845695496, 0.0005815926706418395], "target_probs": 0.9758049845695496}}


{"result": {"time": "2021-02-21 12:49:31.152621", "n_pass": [57, 17, 5], "n_token": 14, "loss": [0.04165634140372276, 0.18842312693595886], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["def test_ref_label_with_proper_include_directive(", "self", "desc", "=", "'\\n            input: \"data\"\\n            layer {\\n                name: \"hidden\"\\n                type: \\'InnerProduct\\'\\n                bottom: \"data\"\\n                top: \"output\"\\n            }\\n            layer {\\n                name: \"loss\"\\n                type: \"SoftmaxWithLoss\"\\n                bottom: \"output\"\\n                bottom: \"label\"\\n                top: \"loss\"\\n                include {\\n                    phase: TRAIN\\n                }\\n            }\\n            '", "#NEWLINE#", "check_positive", "(", "self", ",", "caffe_pb2", ".", "TEST", ")"]}}
{"position": {"error_location": 10, "repair_targets": [2], "repair_candidates": [1, 8, 2]}}
{"prediction": {"error_location": 0.9591992497444153, "repair_targets": [0.8282641768455505], "repair_candidates": [0.17143689095973969, 0.8282641768455505, 0.00029892686870880425], "target_probs": 0.8282641768455505}}


{"result": {"time": "2021-02-21 12:49:31.213445", "n_pass": [59, 18, 6], "n_token": 13, "loss": [0.150069460272789, 0.20502890646457672], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["def test_ref_label_with_proper_include_directive(", "self", "desc", "'\\n            input: \"data\"\\n            layer {\\n                name: \"hidden\"\\n                type: \\'InnerProduct\\'\\n                bottom: \"data\"\\n                top: \"output\"\\n            }\\n            layer {\\n                name: \"loss\"\\n                type: \"SoftmaxWithLoss\"\\n                bottom: \"output\"\\n                bottom: \"label\"\\n                top: \"loss\"\\n                include {\\n                    phase: TRAIN\\n                }\\n            }\\n            '", "#NEWLINE#", "check_positive", "(", "self", ",", "caffe_pb2", ".", "TEST", ")"]}}
{"position": {"error_location": 9, "repair_targets": [2], "repair_candidates": [1, 7, 2]}}
{"prediction": {"error_location": 0.8606482744216919, "repair_targets": [0.8146237730979919], "repair_candidates": [0.1331651657819748, 0.8146237730979919, 0.05221101641654968], "target_probs": 0.8146237730979919}}


{"result": {"time": "2021-02-21 12:49:31.515426", "n_pass": [66, 23, 7], "n_token": 11, "loss": [0.6954554915428162, 0.039784688502550125], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["def test_ref_label_with_proper_include_directive(", "self", "desc", "'\\n            input: \"data\"\\n            layer {\\n                name: \"hidden\"\\n                type: \\'InnerProduct\\'\\n                bottom: \"data\"\\n                top: \"output\"\\n            }\\n            layer {\\n                name: \"loss\"\\n                type: \"SoftmaxWithLoss\"\\n                bottom: \"output\"\\n                bottom: \"label\"\\n                top: \"loss\"\\n                include {\\n                    phase: TRAIN\\n                }\\n            }\\n            '", "#NEWLINE#", "check_positive", "(", "self", ",", "caffe_pb2", "."]}}
{"position": {"error_location": 9, "repair_targets": [2], "repair_candidates": [1, 7, 2]}}
{"prediction": {"error_location": 0.498847097158432, "repair_targets": [0.9609963297843933], "repair_candidates": [0.01616680435836315, 0.9609963297843933, 0.022836919873952866], "target_probs": 0.9609963297843933}}




Minimal simplified tokens:

['def test_ref_label_with_proper_include_directive(', 'self', 'desc', '\'\\n            input: "data"\\n            layer {\\n                name: "hidden"\\n                type: \\\'InnerProduct\\\'\\n                bottom: "data"\\n                top: "output"\\n            }\\n            layer {\\n                name: "loss"\\n                type: "SoftmaxWithLoss"\\n                bottom: "output"\\n                bottom: "label"\\n                top: "loss"\\n                include {\\n                    phase: TRAIN\\n                }\\n            }\\n            \'', '#NEWLINE#', 'check_positive', '(', 'self', ',', 'caffe_pb2', '.']
