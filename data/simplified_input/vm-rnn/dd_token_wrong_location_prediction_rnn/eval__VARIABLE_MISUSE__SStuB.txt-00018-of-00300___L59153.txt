
Original sample:

{"has_bug": true, "bug_kind": 1, "bug_kind_name": "VARIABLE_MISUSE", "source_tokens": ["#NEWLINE#", "def test_wrapper_catches_base_exception(", "self", ")", ":", "#NEWLINE#", "#INDENT#", "func", "=", "mock", ".", "MagicMock", "(", ")", "#NEWLINE#", "func", ".", "side_effect", "=", "BaseException", "(", ")", "#NEWLINE#", "tg", "=", "mock", ".", "MagicMock", "(", "exc", "=", "None", ",", "failed_thread", "=", "None", ")", "#NEWLINE#", "context", ".", "_wrapper", "(", "None", ",", "'test thread'", ",", "func", ",", "func", ")", "#NEWLINE#", "self", ".", "assertIsNotNone", "(", "tg", ".", "exc", ")", "#NEWLINE#", "self", ".", "assertEqual", "(", "'test thread'", ",", "tg", ".", "failed_thread", ")"], "error_location": [46], "repair_targets": [23, 55, 66], "repair_candidates": [23, 55, 66, 2, 51, 60, 7, 15, 46, 48], "provenances": [{"datasetProvenance": {"datasetName": "ETHPy150Open", "filepath": "openstack/sahara/sahara/tests/unit/test_context.py", "license": "apache-2.0", "note": "license: bigquery_api"}}], "txt_file": "eval__VARIABLE_MISUSE__SStuB.txt-00018-of-00300", "js_count": 59153, "results": {"model": "rnn", "prob": {"loc": [[0.08230791985988617, 4.046322317208251e-07, 9.777393472631957e-08, 9.65133528652018e-10, 7.16102732667423e-10, 7.113536781844232e-08, 7.662717571577105e-09, 1.8192679362982744e-08, 1.6700011373771417e-09, 3.158359618282702e-08, 1.0769081182360196e-09, 1.7822826547941872e-10, 8.915956861699215e-09, 7.701194348896934e-09, 4.235864992097049e-09, 2.732253712167676e-08, 1.852383912925859e-09, 1.3448250291148156e-09, 1.9685830743298993e-09, 7.958559367082785e-10, 2.9249635602468516e-08, 8.67275602445261e-08, 8.96833629582261e-09, 2.0855912907791208e-07, 7.0276557906368e-09, 2.279102595537097e-08, 3.3291915890742985e-09, 2.511418295547685e-10, 1.0649567894205347e-09, 1.4595379070669878e-05, 5.144733705719773e-08, 7.511100363899459e-08, 2.3570734253297587e-10, 3.3437871138630726e-07, 1.309738166810348e-07, 5.4998732679223394e-08, 6.700939358950109e-09, 5.867291985595102e-09, 4.790777552443615e-07, 2.476499894044082e-09, 3.5505856033068994e-08, 2.409651322921036e-08, 7.986491254996508e-07, 1.7940453744813567e-07, 9.377507694807719e-07, 1.6766989574534819e-07, 0.37550705671310425, 4.733811874757521e-05, 0.5226288437843323, 1.2978791801288025e-06, 2.2157589540938716e-08, 1.1035328384423337e-07, 1.1396485533055056e-08, 6.318130019167256e-09, 4.197151781681896e-08, 0.011174755170941353, 4.103059669802178e-09, 6.459422365878709e-07, 4.1741273548723257e-08, 8.7263344994426e-08, 3.350942634483545e-08, 5.978919137561434e-09, 4.4772797025416367e-08, 8.35431137602427e-08, 2.4963165401459264e-07, 4.2204156613934174e-08, 0.008290757425129414, 6.303891808556727e-08, 2.147824125131592e-05, 9.747359541734113e-08]], "pointer": [[0.0, 0.0, 8.630743104731664e-05, 0.0, 0.0, 0.0, 0.0, 0.10487352311611176, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.004969433415681124, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.8885507583618164, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0011639657896012068, 0.0, 0.0003158384351991117, 0.0, 0.0, 9.710151061881334e-06, 0.0, 0.0, 0.0, 1.7324351574643515e-05, 0.0, 0.0, 0.0, 0.0, 4.417602212924976e-06, 0.0, 0.0, 0.0, 0.0, 0.0, 8.65885249368148e-06, 0.0, 0.0, 0.0]], "target": [0.8885767459869385]}, "loss": [0.9794779419898987, 0.1181342601776123], "acc": [0.0, 0.0, 1.0, 0.0]}, "wrong_error_location": [48]}


Trace of simplified code(s):

{"result": {"time": "2021-02-21 13:31:44.648333", "n_pass": [1, 1, 1], "n_token": 70, "loss": [0.6488836407661438, 0.1181342601776123], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def test_wrapper_catches_base_exception(", "self", ")", ":", "#NEWLINE#", "#INDENT#", "func", "=", "mock", ".", "MagicMock", "(", ")", "#NEWLINE#", "func", ".", "side_effect", "=", "BaseException", "(", ")", "#NEWLINE#", "tg", "=", "mock", ".", "MagicMock", "(", "exc", "=", "None", ",", "failed_thread", "=", "None", ")", "#NEWLINE#", "context", ".", "_wrapper", "(", "None", ",", "'test thread'", ",", "func", ",", "func", ")", "#NEWLINE#", "self", ".", "assertIsNotNone", "(", "tg", ".", "exc", ")", "#NEWLINE#", "self", ".", "assertEqual", "(", "'test thread'", ",", "tg", ".", "failed_thread", ")"]}}
{"position": {"error_location": 48, "repair_targets": [23, 55, 66], "repair_candidates": [23, 55, 66, 2, 51, 60, 7, 15, 46, 48]}}
{"prediction": {"error_location": 0.5226288437843323, "repair_targets": [0.8885507583618164, 1.7324351574643515e-05, 8.65885249368148e-06], "repair_candidates": [8.630743104731664e-05, 0.10487352311611176, 0.004969433415681124, 0.8885507583618164, 0.0011639657896012068, 0.0003158384351991117, 9.710151061881334e-06, 1.7324351574643515e-05, 4.417602212924976e-06, 8.65885249368148e-06], "target_probs": 0.8885767459869385}}


{"result": {"time": "2021-02-21 13:31:44.730779", "n_pass": [23, 2, 2], "n_token": 61, "loss": [0.5982010364532471, 0.20398737490177155], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def test_wrapper_catches_base_exception(", "self", ")", ":", "#NEWLINE#", "#INDENT#", "func", "=", "mock", ".", "MagicMock", "(", ")", "#NEWLINE#", "func", ".", "side_effect", "=", "BaseException", "(", ")", "#NEWLINE#", "tg", "=", "=", "None", ")", "#NEWLINE#", "context", ".", "_wrapper", "(", "None", ",", "'test thread'", ",", "func", ",", "func", ")", "#NEWLINE#", "self", ".", "assertIsNotNone", "(", "tg", ".", "exc", ")", "#NEWLINE#", "self", ".", "assertEqual", "(", "'test thread'", ",", "tg", ".", "failed_thread", ")"]}}
{"position": {"error_location": 39, "repair_targets": [23, 46, 57], "repair_candidates": [23, 46, 57, 2, 42, 51, 7, 15, 37, 39]}}
{"prediction": {"error_location": 0.5497997999191284, "repair_targets": [0.8154268264770508, 3.226122498745099e-05, 1.3578111975220963e-05], "repair_candidates": [0.0002739446354098618, 0.16122601926326752, 0.018133802339434624, 0.8154268264770508, 0.004172586370259523, 0.0006898731226101518, 2.2193675249582157e-05, 3.226122498745099e-05, 8.824329597700853e-06, 1.3578111975220963e-05], "target_probs": 0.8154726624488831}}


{"result": {"time": "2021-02-21 13:31:45.207073", "n_pass": [57, 8, 3], "n_token": 57, "loss": [0.7164324522018433, 0.13088789582252502], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def test_wrapper_catches_base_exception(", "self", ")", ":", "#NEWLINE#", "#INDENT#", "func", "=", "mock", ".", "MagicMock", "(", ")", "#NEWLINE#", "func", "(", ")", "#NEWLINE#", "tg", "=", "=", "None", ")", "#NEWLINE#", "context", ".", "_wrapper", "(", "None", ",", "'test thread'", ",", "func", ",", "func", ")", "#NEWLINE#", "self", ".", "assertIsNotNone", "(", "tg", ".", "exc", ")", "#NEWLINE#", "self", ".", "assertEqual", "(", "'test thread'", ",", "tg", ".", "failed_thread", ")"]}}
{"position": {"error_location": 35, "repair_targets": [19, 42, 53], "repair_candidates": [19, 42, 53, 2, 38, 47, 7, 15, 33, 35]}}
{"prediction": {"error_location": 0.48849186301231384, "repair_targets": [0.8772897720336914, 1.8469063434167765e-05, 7.902461220510304e-06], "repair_candidates": [8.13809092505835e-05, 0.11671091616153717, 0.003735691774636507, 0.8772897720336914, 0.0018072656821459532, 0.0003368011675775051, 7.264116902661044e-06, 1.8469063434167765e-05, 4.50120114692254e-06, 7.902461220510304e-06], "target_probs": 0.8773161172866821}}


{"result": {"time": "2021-02-21 13:31:45.436369", "n_pass": [61, 11, 4], "n_token": 53, "loss": [0.9051423668861389, 0.6364901661872864], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def test_wrapper_catches_base_exception(", "self", ")", ":", "#NEWLINE#", "#INDENT#", "func", "=", "mock", ".", "MagicMock", "(", ")", "#NEWLINE#", "func", "(", ")", "#NEWLINE#", "tg", "=", "=", "None", ")", "#NEWLINE#", "context", ".", "_wrapper", ",", "func", ",", "func", ")", "#NEWLINE#", "self", ".", "assertIsNotNone", "(", "tg", ".", "exc", ")", "#NEWLINE#", "self", ".", "assertEqual", "(", "'test thread'", ",", "tg", ".", "failed_thread", ")"]}}
{"position": {"error_location": 31, "repair_targets": [19, 38, 49], "repair_candidates": [19, 38, 49, 2, 34, 43, 7, 15, 29, 31]}}
{"prediction": {"error_location": 0.4044843018054962, "repair_targets": [0.5289596319198608, 0.00011921344412257895, 6.754091737093404e-05], "repair_candidates": [0.07575023174285889, 0.32949548959732056, 0.03873516246676445, 0.5289596319198608, 0.02590629644691944, 0.0008040281245484948, 0.00013385670899879187, 0.00011921344412257895, 2.8552567528095096e-05, 6.754091737093404e-05], "target_probs": 0.5291463732719421}}


{"result": {"time": "2021-02-21 13:31:45.966813", "n_pass": [107, 18, 5], "n_token": 50, "loss": [1.0004165172576904, 0.5664204359054565], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def test_wrapper_catches_base_exception(", "self", ")", ":", "#NEWLINE#", "#INDENT#", "func", "=", "mock", ".", "MagicMock", "(", ")", "#NEWLINE#", "func", "(", ")", "#NEWLINE#", "tg", "=", "=", "None", ")", "#NEWLINE#", "context", ".", "_wrapper", ",", "func", ",", "func", ")", "#NEWLINE#", "self", ".", "assertIsNotNone", "(", "tg", ".", "exc", ")", "#NEWLINE#", "self", ".", "assertEqual", "(", "'test thread'", ",", "tg"]}}
{"position": {"error_location": 31, "repair_targets": [19, 38, 49], "repair_candidates": [19, 38, 49, 2, 34, 43, 7, 15, 29, 31]}}
{"prediction": {"error_location": 0.36772623658180237, "repair_targets": [0.5673501491546631, 0.00017691223183646798, 2.632754694786854e-05], "repair_candidates": [0.0037209484726190567, 0.25545501708984375, 0.02616444230079651, 0.5673501491546631, 0.14381927251815796, 0.003034179098904133, 0.00024344729899894446, 0.00017691223183646798, 9.383698852616362e-06, 2.632754694786854e-05], "target_probs": 0.5675534009933472}}


{"result": {"time": "2021-02-21 13:31:46.118293", "n_pass": [110, 20, 6], "n_token": 48, "loss": [0.5600139498710632, 0.4256559908390045], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def test_wrapper_catches_base_exception(", "self", ")", "#INDENT#", "func", "=", "mock", ".", "MagicMock", "(", ")", "#NEWLINE#", "func", "(", ")", "#NEWLINE#", "tg", "=", "=", "None", ")", "#NEWLINE#", "context", ".", "_wrapper", ",", "func", ",", "func", ")", "#NEWLINE#", "self", ".", "assertIsNotNone", "(", "tg", ".", "exc", ")", "#NEWLINE#", "self", ".", "assertEqual", "(", "'test thread'", ",", "tg"]}}
{"position": {"error_location": 29, "repair_targets": [17, 36, 47], "repair_candidates": [17, 36, 47, 2, 32, 41, 5, 13, 27, 29]}}
{"prediction": {"error_location": 0.5712010860443115, "repair_targets": [0.653121292591095, 0.000192858642549254, 2.6900481316260993e-05], "repair_candidates": [0.0006422016303986311, 0.034745458513498306, 0.020099973306059837, 0.653121292591095, 0.28742191195487976, 0.003571550128981471, 0.00016926851822063327, 0.000192858642549254, 8.567845725337975e-06, 2.6900481316260993e-05], "target_probs": 0.6533410549163818}}


{"result": {"time": "2021-02-21 13:31:46.191358", "n_pass": [112, 21, 7], "n_token": 46, "loss": [0.48577290773391724, 0.43571752309799194], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def test_wrapper_catches_base_exception(", "self", ")", "#INDENT#", "func", ".", "MagicMock", "(", ")", "#NEWLINE#", "func", "(", ")", "#NEWLINE#", "tg", "=", "=", "None", ")", "#NEWLINE#", "context", ".", "_wrapper", ",", "func", ",", "func", ")", "#NEWLINE#", "self", ".", "assertIsNotNone", "(", "tg", ".", "exc", ")", "#NEWLINE#", "self", ".", "assertEqual", "(", "'test thread'", ",", "tg"]}}
{"position": {"error_location": 27, "repair_targets": [15, 34, 45], "repair_candidates": [15, 34, 45, 2, 30, 39, 5, 11, 25, 27]}}
{"prediction": {"error_location": 0.6152216196060181, "repair_targets": [0.6464471220970154, 0.0003102156915701926, 4.304380854591727e-05], "repair_candidates": [0.01682414300739765, 0.003443581983447075, 0.014808731153607368, 0.6464471220970154, 0.31204721331596375, 0.005821736995130777, 0.00024006042804103345, 0.0003102156915701926, 1.4179229765431955e-05, 4.304380854591727e-05], "target_probs": 0.6468003988265991}}


{"result": {"time": "2021-02-21 13:31:46.263785", "n_pass": [113, 22, 8], "n_token": 44, "loss": [0.7123311161994934, 0.3475472629070282], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def test_wrapper_catches_base_exception(", "self", ")", "#INDENT#", "func", "(", ")", "#NEWLINE#", "func", "(", ")", "#NEWLINE#", "tg", "=", "=", "None", ")", "#NEWLINE#", "context", ".", "_wrapper", ",", "func", ",", "func", ")", "#NEWLINE#", "self", ".", "assertIsNotNone", "(", "tg", ".", "exc", ")", "#NEWLINE#", "self", ".", "assertEqual", "(", "'test thread'", ",", "tg"]}}
{"position": {"error_location": 25, "repair_targets": [13, 32, 43], "repair_candidates": [13, 32, 43, 2, 28, 37, 5, 9, 23, 25]}}
{"prediction": {"error_location": 0.490499347448349, "repair_targets": [0.7062495946884155, 0.00014569118502549827, 2.3328204406425357e-05], "repair_candidates": [0.0010459977202117443, 0.0015489135403186083, 0.008234478533267975, 0.7062495946884155, 0.2747310698032379, 0.007896961644291878, 0.000116499955765903, 0.00014569118502549827, 7.4105737439822406e-06, 2.3328204406425357e-05], "target_probs": 0.7064186334609985}}


{"result": {"time": "2021-02-21 13:31:46.335445", "n_pass": [114, 23, 9], "n_token": 42, "loss": [0.5439630150794983, 0.4175914525985718], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def test_wrapper_catches_base_exception(", "self", ")", "#INDENT#", "func", "#NEWLINE#", "func", "(", ")", "#NEWLINE#", "tg", "=", "=", "None", ")", "#NEWLINE#", "context", ".", "_wrapper", ",", "func", ",", "func", ")", "#NEWLINE#", "self", ".", "assertIsNotNone", "(", "tg", ".", "exc", ")", "#NEWLINE#", "self", ".", "assertEqual", "(", "'test thread'", ",", "tg"]}}
{"position": {"error_location": 23, "repair_targets": [11, 30, 41], "repair_candidates": [11, 30, 41, 2, 26, 35, 5, 7, 21, 23]}}
{"prediction": {"error_location": 0.5804433822631836, "repair_targets": [0.6584333181381226, 0.0001692484802333638, 2.8640981327043846e-05], "repair_candidates": [0.0007555882330052555, 0.009429202415049076, 0.018525321036577225, 0.6584333181381226, 0.3052815794944763, 0.007214289158582687, 0.0001517032360425219, 0.0001692484802333638, 1.1160805115650874e-05, 2.8640981327043846e-05], "target_probs": 0.6586312651634216}}


{"result": {"time": "2021-02-21 13:31:46.405968", "n_pass": [116, 24, 10], "n_token": 40, "loss": [0.6458268761634827, 0.47500306367874146], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def test_wrapper_catches_base_exception(", "self", ")", "#INDENT#", "func", "#NEWLINE#", "func", "#NEWLINE#", "tg", "=", "=", "None", ")", "#NEWLINE#", "context", ".", "_wrapper", ",", "func", ",", "func", ")", "#NEWLINE#", "self", ".", "assertIsNotNone", "(", "tg", ".", "exc", ")", "#NEWLINE#", "self", ".", "assertEqual", "(", "'test thread'", ",", "tg"]}}
{"position": {"error_location": 21, "repair_targets": [9, 28, 39], "repair_candidates": [9, 28, 39, 2, 24, 33, 5, 7, 19, 21]}}
{"prediction": {"error_location": 0.5242288708686829, "repair_targets": [0.6216538548469543, 0.000196241817320697, 3.309623207314871e-05], "repair_candidates": [0.0005015460774302483, 0.010248380713164806, 0.056128259748220444, 0.6216538548469543, 0.30514955520629883, 0.005909561179578304, 0.00016549884458072484, 0.000196241817320697, 1.4088935131439939e-05, 3.309623207314871e-05], "target_probs": 0.6218831539154053}}


{"result": {"time": "2021-02-21 13:31:46.546825", "n_pass": [119, 26, 11], "n_token": 38, "loss": [0.5577495098114014, 0.41221505403518677], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def test_wrapper_catches_base_exception(", "self", ")", "#INDENT#", "func", "#NEWLINE#", "func", "#NEWLINE#", "tg", "=", "=", "#NEWLINE#", "context", ".", "_wrapper", ",", "func", ",", "func", ")", "#NEWLINE#", "self", ".", "assertIsNotNone", "(", "tg", ".", "exc", ")", "#NEWLINE#", "self", ".", "assertEqual", "(", "'test thread'", ",", "tg"]}}
{"position": {"error_location": 19, "repair_targets": [9, 26, 37], "repair_candidates": [9, 26, 37, 2, 22, 31, 5, 7, 17, 19]}}
{"prediction": {"error_location": 0.5724959373474121, "repair_targets": [0.6617979407310486, 0.00033305544639006257, 5.085070006316528e-05], "repair_candidates": [0.0003811752249021083, 0.01503364834934473, 0.10319066047668457, 0.6617979407310486, 0.21681350469589233, 0.002163992729038, 0.0002155166439479217, 0.00033305544639006257, 1.968206197489053e-05, 5.085070006316528e-05], "target_probs": 0.6621818542480469}}


{"result": {"time": "2021-02-21 13:31:46.817497", "n_pass": [126, 30, 12], "n_token": 36, "loss": [0.2642015814781189, 0.1172044426202774], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def test_wrapper_catches_base_exception(", "self", ")", "#INDENT#", "func", "#NEWLINE#", "func", "#NEWLINE#", "tg", "=", "=", "#NEWLINE#", "context", ".", "_wrapper", ",", "func", ",", "func", ")", "#NEWLINE#", "self", ".", "tg", ".", "exc", ")", "#NEWLINE#", "self", ".", "assertEqual", "(", "'test thread'", ",", "tg"]}}
{"position": {"error_location": 19, "repair_targets": [9, 24, 35], "repair_candidates": [9, 24, 35, 2, 22, 29, 5, 7, 17, 19]}}
{"prediction": {"error_location": 0.767818808555603, "repair_targets": [0.8879782557487488, 0.0013942732475697994, 3.084262061747722e-05], "repair_candidates": [0.0008546478347852826, 0.010968120768666267, 0.08466194570064545, 0.8879782557487488, 0.013394759967923164, 0.0006550931720994413, 5.124506787979044e-05, 0.0013942732475697994, 1.0795557500387076e-05, 3.084262061747722e-05], "target_probs": 0.8894033432006836}}


{"result": {"time": "2021-02-21 13:31:46.885109", "n_pass": [129, 31, 13], "n_token": 33, "loss": [0.5185086727142334, 0.3002811074256897], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def test_wrapper_catches_base_exception(", "self", ")", "#INDENT#", "func", "#NEWLINE#", "func", "#NEWLINE#", "tg", "=", "=", "#NEWLINE#", "context", ".", "_wrapper", ",", "func", ",", "func", ")", "#NEWLINE#", "self", ".", "tg", ".", "exc", ")", "#NEWLINE#", "self", "'test thread'", ",", "tg"]}}
{"position": {"error_location": 19, "repair_targets": [9, 24, 32], "repair_candidates": [9, 24, 32, 2, 22, 29, 5, 7, 17, 19]}}
{"prediction": {"error_location": 0.5954078435897827, "repair_targets": [0.7359448671340942, 0.0044868034310638905, 0.00017832645971793681], "repair_candidates": [0.004314009100198746, 0.02763553522527218, 0.18274015188217163, 0.7359448671340942, 0.042247675359249115, 0.0018885633908212185, 0.00018852857465390116, 0.0044868034310638905, 0.00037547919782809913, 0.00017832645971793681], "target_probs": 0.7406100034713745}}


{"result": {"time": "2021-02-21 13:31:47.280475", "n_pass": [177, 37, 14], "n_token": 32, "loss": [0.609495997428894, 0.44076865911483765], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["def test_wrapper_catches_base_exception(", "self", ")", "#INDENT#", "func", "#NEWLINE#", "func", "#NEWLINE#", "tg", "=", "=", "#NEWLINE#", "context", ".", "_wrapper", ",", "func", ",", "func", ")", "#NEWLINE#", "self", ".", "tg", ".", "exc", ")", "#NEWLINE#", "self", "'test thread'", ",", "tg"]}}
{"position": {"error_location": 18, "repair_targets": [8, 23, 31], "repair_candidates": [8, 23, 31, 1, 21, 28, 4, 6, 16, 18]}}
{"prediction": {"error_location": 0.5436248779296875, "repair_targets": [0.6387540102005005, 0.004632414318621159, 0.00015516918210778385], "repair_candidates": [0.0874609425663948, 0.011259338818490505, 0.2345389574766159, 0.6387540102005005, 0.021352816373109818, 0.0012134785065427423, 0.0002097919787047431, 0.004632414318621159, 0.00042312953155487776, 0.00015516918210778385], "target_probs": 0.6435415744781494}}


{"result": {"time": "2021-02-21 13:31:47.349265", "n_pass": [179, 38, 15], "n_token": 31, "loss": [0.682926595211029, 0.0887489840388298], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["def test_wrapper_catches_base_exception(", "self", "#INDENT#", "func", "#NEWLINE#", "func", "#NEWLINE#", "tg", "=", "=", "#NEWLINE#", "context", ".", "_wrapper", ",", "func", ",", "func", ")", "#NEWLINE#", "self", ".", "tg", ".", "exc", ")", "#NEWLINE#", "self", "'test thread'", ",", "tg"]}}
{"position": {"error_location": 17, "repair_targets": [7, 22, 30], "repair_candidates": [7, 22, 30, 1, 20, 27, 3, 5, 15, 17]}}
{"prediction": {"error_location": 0.5051364898681641, "repair_targets": [0.9123507142066956, 0.0026269322261214256, 9.759180102264509e-05], "repair_candidates": [0.021570460870862007, 0.01789887249469757, 0.021524110808968544, 0.9123507142066956, 0.022982003167271614, 0.0006609654519706964, 7.611112232552841e-05, 0.0026269322261214256, 0.0002122100122505799, 9.759180102264509e-05], "target_probs": 0.9150752425193787}}


{"result": {"time": "2021-02-21 13:31:47.479438", "n_pass": [182, 40, 16], "n_token": 30, "loss": [0.7544746994972229, 0.17654429376125336], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["def test_wrapper_catches_base_exception(", "self", "#INDENT#", "func", "func", "#NEWLINE#", "tg", "=", "=", "#NEWLINE#", "context", ".", "_wrapper", ",", "func", ",", "func", ")", "#NEWLINE#", "self", ".", "tg", ".", "exc", ")", "#NEWLINE#", "self", "'test thread'", ",", "tg"]}}
{"position": {"error_location": 16, "repair_targets": [6, 21, 29], "repair_candidates": [6, 21, 29, 1, 19, 26, 3, 4, 14, 16]}}
{"prediction": {"error_location": 0.4702575206756592, "repair_targets": [0.8328937888145447, 0.005101961083710194, 0.00016591181338299066], "repair_candidates": [0.09360188245773315, 0.024393385276198387, 0.008075859397649765, 0.8328937888145447, 0.03382144868373871, 0.0013047592947259545, 0.00014760358317289501, 0.005101961083710194, 0.0004933658638037741, 0.00016591181338299066], "target_probs": 0.8381616473197937}}


{"result": {"time": "2021-02-21 13:31:47.739168", "n_pass": [188, 44, 17], "n_token": 29, "loss": [0.7093386054039001, 0.32966169714927673], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["def test_wrapper_catches_base_exception(", "self", "#INDENT#", "func", "func", "#NEWLINE#", "tg", "=", "=", "context", ".", "_wrapper", ",", "func", ",", "func", ")", "#NEWLINE#", "self", ".", "tg", ".", "exc", ")", "#NEWLINE#", "self", "'test thread'", ",", "tg"]}}
{"position": {"error_location": 15, "repair_targets": [6, 20, 28], "repair_candidates": [6, 20, 28, 1, 18, 25, 3, 4, 13, 15]}}
{"prediction": {"error_location": 0.4919695258140564, "repair_targets": [0.7164443135261536, 0.0026705751661211252, 5.209787923377007e-05], "repair_candidates": [0.25971248745918274, 0.012966982088983059, 0.0045263986103236675, 0.7164443135261536, 0.0029582201968878508, 0.0003261336823925376, 6.695627234876156e-05, 0.0026705751661211252, 0.0002758490154519677, 5.209787923377007e-05], "target_probs": 0.7191669940948486}}


{"result": {"time": "2021-02-21 13:31:47.803079", "n_pass": [189, 45, 18], "n_token": 28, "loss": [0.9983711242675781, 0.3026808500289917], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["def test_wrapper_catches_base_exception(", "self", "#INDENT#", "func", "func", "#NEWLINE#", "tg", "=", "=", ".", "_wrapper", ",", "func", ",", "func", ")", "#NEWLINE#", "self", ".", "tg", ".", "exc", ")", "#NEWLINE#", "self", "'test thread'", ",", "tg"]}}
{"position": {"error_location": 14, "repair_targets": [6, 19, 27], "repair_candidates": [6, 19, 27, 1, 17, 24, 3, 4, 12, 14]}}
{"prediction": {"error_location": 0.3684791624546051, "repair_targets": [0.7263041734695435, 0.012277494184672832, 0.0002532030048314482], "repair_candidates": [0.15835487842559814, 0.07892582565546036, 0.016829440370202065, 0.7263041734695435, 0.004133092705160379, 0.0008010200108401477, 0.00040775147499516606, 0.012277494184672832, 0.0017130621708929539, 0.0002532030048314482], "target_probs": 0.7388348579406738}}


{"result": {"time": "2021-02-21 13:31:48.311254", "n_pass": [201, 53, 19], "n_token": 27, "loss": [1.1349660158157349, 0.3978314995765686], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["def test_wrapper_catches_base_exception(", "self", "#INDENT#", "func", "func", "#NEWLINE#", "tg", "=", "=", ".", "_wrapper", ",", "func", ",", "func", ")", "#NEWLINE#", "self", ".", "tg", "exc", ")", "#NEWLINE#", "self", "'test thread'", ",", "tg"]}}
{"position": {"error_location": 14, "repair_targets": [6, 19, 26], "repair_candidates": [6, 19, 26, 1, 17, 23, 3, 4, 12, 14]}}
{"prediction": {"error_location": 0.32143306732177734, "repair_targets": [0.5301843285560608, 0.14116419851779938, 0.0004267017648089677], "repair_candidates": [0.09258674085140228, 0.15873628854751587, 0.04162408784031868, 0.5301843285560608, 0.027544237673282623, 0.001828900189138949, 0.0004958903300575912, 0.14116419851779938, 0.005408586002886295, 0.0004267017648089677], "target_probs": 0.671775221824646}}


{"result": {"time": "2021-02-21 13:31:48.689488", "n_pass": [213, 59, 20], "n_token": 26, "loss": [1.1486151218414307, 0.6549602746963501], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["def test_wrapper_catches_base_exception(", "self", "#INDENT#", "func", "func", "#NEWLINE#", "tg", "=", ".", "_wrapper", ",", "func", ",", "func", ")", "#NEWLINE#", "self", ".", "tg", "exc", ")", "#NEWLINE#", "self", "'test thread'", ",", "tg"]}}
{"position": {"error_location": 13, "repair_targets": [6, 18, 25], "repair_candidates": [6, 18, 25, 1, 16, 22, 3, 4, 11, 13]}}
{"prediction": {"error_location": 0.31707555055618286, "repair_targets": [0.2571398913860321, 0.26151153445243835, 0.0008112900541163981], "repair_candidates": [0.1936957985162735, 0.15587781369686127, 0.04369811713695526, 0.2571398913860321, 0.07387550920248032, 0.006865878589451313, 0.00079524633474648, 0.26151153445243835, 0.005728959105908871, 0.0008112900541163981], "target_probs": 0.5194627046585083}}


{"result": {"time": "2021-02-21 13:31:48.940677", "n_pass": [217, 63, 21], "n_token": 25, "loss": [0.9625547528266907, 0.37812283635139465], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["def test_wrapper_catches_base_exception(", "self", "#INDENT#", "func", "func", "#NEWLINE#", "tg", "=", ".", "_wrapper", "func", ",", "func", ")", "#NEWLINE#", "self", ".", "tg", "exc", ")", "#NEWLINE#", "self", "'test thread'", ",", "tg"]}}
{"position": {"error_location": 12, "repair_targets": [6, 17, 24], "repair_candidates": [6, 17, 24, 1, 15, 21, 3, 4, 10, 12]}}
{"prediction": {"error_location": 0.3819158971309662, "repair_targets": [0.44105157256126404, 0.24355368316173553, 0.000541096436791122], "repair_candidates": [0.07906382530927658, 0.14278824627399445, 0.04379187151789665, 0.44105157256126404, 0.037503138184547424, 0.005227621644735336, 0.0008229219820350409, 0.24355368316173553, 0.005655959714204073, 0.000541096436791122], "target_probs": 0.6851463317871094}}


{"result": {"time": "2021-02-21 13:31:49.251636", "n_pass": [226, 68, 22], "n_token": 24, "loss": [0.6937757134437561, 0.09418627619743347], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["def test_wrapper_catches_base_exception(", "self", "#INDENT#", "func", "func", "#NEWLINE#", "tg", "=", ".", "_wrapper", "func", ",", "func", ")", "#NEWLINE#", "self", ".", "tg", ")", "#NEWLINE#", "self", "'test thread'", ",", "tg"]}}
{"position": {"error_location": 12, "repair_targets": [6, 17, 23], "repair_candidates": [6, 17, 23, 1, 15, 20, 3, 4, 10, 12]}}
{"prediction": {"error_location": 0.4996858537197113, "repair_targets": [0.8848689198493958, 0.025011908262968063, 0.00023239690926857293], "repair_candidates": [0.03200090304017067, 0.039849903434515, 0.011323733255267143, 0.8848689198493958, 0.004951287526637316, 0.0010593265760689974, 0.0003094448475167155, 0.025011908262968063, 0.0003920435847248882, 0.00023239690926857293], "target_probs": 0.9101132154464722}}


{"result": {"time": "2021-02-21 13:31:50.051882", "n_pass": [256, 81, 23], "n_token": 23, "loss": [0.16603969037532806, 0.028990358114242554], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["def test_wrapper_catches_base_exception(", "self", "#INDENT#", "func", "func", "#NEWLINE#", "tg", "=", ".", "_wrapper", "func", ",", "func", ")", "#NEWLINE#", "self", ".", "tg", ")", "#NEWLINE#", "self", "'test thread'", "tg"]}}
{"position": {"error_location": 12, "repair_targets": [6, 17, 22], "repair_candidates": [6, 17, 22, 1, 15, 20, 3, 4, 10, 12]}}
{"prediction": {"error_location": 0.8470126390457153, "repair_targets": [0.9604765176773071, 0.0108437305316329, 0.00010560566443018615], "repair_candidates": [0.012606672011315823, 0.011388554237782955, 0.0033014726359397173, 0.9604765176773071, 0.0009054441470652819, 0.0002543632290326059, 7.38574963179417e-05, 0.0108437305316329, 4.3795233068522066e-05, 0.00010560566443018615], "target_probs": 0.9714258313179016}}


{"result": {"time": "2021-02-21 13:31:50.173514", "n_pass": [259, 83, 24], "n_token": 22, "loss": [0.10883741080760956, 0.5137479901313782], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["def test_wrapper_catches_base_exception(", "self", "func", "func", "#NEWLINE#", "tg", "=", ".", "_wrapper", "func", ",", "func", ")", "#NEWLINE#", "self", ".", "tg", ")", "#NEWLINE#", "self", "'test thread'", "tg"]}}
{"position": {"error_location": 11, "repair_targets": [5, 16, 21], "repair_candidates": [5, 16, 21, 1, 14, 19, 2, 3, 9, 11]}}
{"prediction": {"error_location": 0.8968761563301086, "repair_targets": [0.5797117948532104, 0.01828777976334095, 0.00024953894899226725], "repair_candidates": [0.09411060065031052, 0.28574734926223755, 0.018930256366729736, 0.5797117948532104, 0.002228059805929661, 0.0005120907444506884, 0.0001310022344114259, 0.01828777976334095, 9.153396968031302e-05, 0.00024953894899226725], "target_probs": 0.5982491374015808}}


{"result": {"time": "2021-02-21 13:31:50.656627", "n_pass": [273, 91, 25], "n_token": 21, "loss": [0.37733006477355957, 0.40921834111213684], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["def test_wrapper_catches_base_exception(", "self", "func", "func", "#NEWLINE#", "tg", "=", ".", "_wrapper", "func", ",", "func", ")", "#NEWLINE#", "self", "tg", ")", "#NEWLINE#", "self", "'test thread'", "tg"]}}
{"position": {"error_location": 11, "repair_targets": [5, 15, 20], "repair_candidates": [5, 15, 20, 1, 14, 18, 2, 3, 9, 11]}}
{"prediction": {"error_location": 0.6856896281242371, "repair_targets": [0.662665843963623, 0.001206379965879023, 0.00029695898410864174], "repair_candidates": [0.04846370965242386, 0.22766368091106415, 0.055441536009311676, 0.662665843963623, 0.0010268674232065678, 0.0005762891378253698, 0.0025487251114100218, 0.001206379965879023, 0.00010993373143719509, 0.00029695898410864174], "target_probs": 0.664169192314148}}


{"result": {"time": "2021-02-21 13:31:50.837049", "n_pass": [278, 94, 26], "n_token": 20, "loss": [0.2231418341398239, 0.19805632531642914], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["def test_wrapper_catches_base_exception(", "self", "func", "func", "#NEWLINE#", "tg", "=", ".", "_wrapper", "func", ",", "func", ")", "#NEWLINE#", "self", "tg", ")", "#NEWLINE#", "self", "tg"]}}
{"position": {"error_location": 11, "repair_targets": [5, 15, 19], "repair_candidates": [5, 15, 19, 1, 14, 18, 2, 3, 9, 11]}}
{"prediction": {"error_location": 0.8000014424324036, "repair_targets": [0.8187967538833618, 0.001412397250533104, 0.00011447500583017245], "repair_candidates": [0.024448005482554436, 0.1168462261557579, 0.035186994820833206, 0.8187967538833618, 0.0005793753080070019, 0.0003951573162339628, 0.0018630217527970672, 0.001412397250533104, 0.0003575376467779279, 0.00011447500583017245], "target_probs": 0.820323646068573}}


{"result": {"time": "2021-02-21 13:31:51.371399", "n_pass": [296, 103, 27], "n_token": 19, "loss": [0.15644092857837677, 0.38393375277519226], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["def test_wrapper_catches_base_exception(", "self", "func", "func", "#NEWLINE#", "tg", "=", ".", "_wrapper", "func", ",", "func", ")", "#NEWLINE#", "self", "tg", "#NEWLINE#", "self", "tg"]}}
{"position": {"error_location": 11, "repair_targets": [5, 15, 18], "repair_candidates": [5, 15, 18, 1, 14, 17, 2, 3, 9, 11]}}
{"prediction": {"error_location": 0.8551819324493408, "repair_targets": [0.6781862378120422, 0.0021951659582555294, 0.0007951448787935078], "repair_candidates": [0.06024910882115364, 0.21729160845279694, 0.03595295920968056, 0.6781862378120422, 0.0009605982922948897, 0.0005626282072626054, 0.002663107356056571, 0.0021951659582555294, 0.0011433936888352036, 0.0007951448787935078], "target_probs": 0.6811765432357788}}




Minimal simplified tokens:

['def test_wrapper_catches_base_exception(', 'self', 'func', 'func', '#NEWLINE#', 'tg', '=', '.', '_wrapper', 'func', ',', 'func', ')', '#NEWLINE#', 'self', 'tg', '#NEWLINE#', 'self', 'tg']
