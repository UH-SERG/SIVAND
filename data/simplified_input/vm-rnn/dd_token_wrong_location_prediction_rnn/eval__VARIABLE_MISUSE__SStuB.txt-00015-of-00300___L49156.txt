
Original sample:

{"has_bug": true, "bug_kind": 1, "bug_kind_name": "VARIABLE_MISUSE", "source_tokens": ["#NEWLINE#", "def _resolve_datacenter(", "dc", ",", "pillarenv", ")", ":", "#NEWLINE#", "#INDENT#", "\"\\n    If ``dc`` is a string - return it as is.\\n\\n    If it's a dict then sort it in descending order by key length and try\\n    to use keys as RegEx patterns to match against ``pillarenv``.\\n    The value for matched pattern should be a string (that can use\\n    ``str.format`` syntax togetehr with captured variables from pattern)\\n    pointing to targe data center to use.\\n\\n    If none patterns matched return ``None`` which meanse us datacenter of\\n    conencted Consul agent.\\n    \"", "#NEWLINE#", "log", ".", "debug", "(", "'Resolving Consul datacenter based on: {dc}'", ".", "format", "(", "dc", "=", "dc", ")", ")", "#NEWLINE#", "try", ":", "#NEWLINE#", "#INDENT#", "mappings", "=", "dc", ".", "items", "(", ")", "#NEWLINE#", "#UNINDENT#", "except", "AttributeError", ":", "#NEWLINE#", "#INDENT#", "log", ".", "debug", "(", "'Using pre-defined DC: {dc!r}'", ".", "format", "(", "dc", "=", "dc", ")", ")", "#NEWLINE#", "return", "dc", "#NEWLINE#", "#UNINDENT#", "log", ".", "debug", "(", "'Selecting DC based on pillarenv using {num} pattern(s)'", ".", "format", "(", "num", "=", "len", "(", "mappings", ")", ")", ")", "#NEWLINE#", "log", ".", "debug", "(", "'Pillarenv set to {env!r}'", ".", "format", "(", "env", "=", "pillarenv", ")", ")", "#NEWLINE#", "sorted_mappings", "=", "sorted", "(", "mappings", ",", "key", "=", "(", "lambda", "m", ":", "(", "(", "-", "len", "(", "m", "[", "0", "]", ")", ")", ",", "m", "[", "0", "]", ")", ")", ")", "#NEWLINE#", "for", "(", "pattern", ",", "target", ")", "in", "dc", ":", "#NEWLINE#", "#INDENT#", "match", "=", "re", ".", "match", "(", "pattern", ",", "pillarenv", ")", "#NEWLINE#", "if", "match", ":", "#NEWLINE#", "#INDENT#", "log", ".", "debug", "(", "'Matched pattern: {pattern!r}'", ".", "format", "(", "pattern", "=", "pattern", ")", ")", "#NEWLINE#", "result", "=", "target", ".", "format", "(", "**", "match", ".", "groupdict", "(", ")", ")", "#NEWLINE#", "log", ".", "debug", "(", "'Resolved datacenter: {result!r}'", ".", "format", "(", "result", "=", "result", ")", ")", "#NEWLINE#", "return", "result", "#NEWLINE#", "#UNINDENT#", "#UNINDENT#", "log", ".", "debug", "(", "'None of following patterns matched pillarenv={env}: {lst}'", ".", "format", "(", "env", "=", "pillarenv", ",", "lst", "=", "', '", ".", "join", "(", "(", "repr", "(", "x", ")", "for", "x", "in", "mappings", ")", ")", ")", ")"], "error_location": [131], "repair_targets": [92], "repair_candidates": [2, 19, 21, 31, 51, 53, 58, 131, 126, 141, 159, 161, 29, 73, 96, 224, 92, 135, 139, 147, 172, 165, 187, 189, 194, 219, 222, 128, 167, 4, 88, 143, 208], "provenances": [{"datasetProvenance": {"datasetName": "ETHPy150Open", "filepath": "saltstack/salt/salt/pillar/consul_pillar.py", "license": "apache-2.0", "note": "license: manual_eval"}}], "txt_file": "eval__VARIABLE_MISUSE__SStuB.txt-00015-of-00300", "js_count": 49156, "results": {"model": "rnn", "prob": {"loc": [[0.049049437046051025, 8.598973977314017e-09, 1.8260826095684024e-07, 2.0588430960089e-09, 1.8118028322078317e-07, 5.713813866492501e-09, 6.416791542562805e-09, 4.950591048213937e-08, 7.205860352854643e-09, 2.0905472908339107e-09, 2.7838208183084134e-08, 6.677689157186251e-08, 1.4663605441000982e-08, 1.1701821733822726e-08, 2.1651738180139546e-08, 9.406782737642061e-06, 1.834830101188345e-07, 2.5493498867490416e-08, 2.5882716414571405e-08, 1.7507195479993243e-06, 3.7868539948249236e-07, 0.08149996399879456, 2.2637387075974402e-07, 9.767303410512795e-09, 2.1358191304443608e-07, 1.8975773627971648e-06, 8.268641948916411e-08, 2.0003865586204483e-07, 5.362220534266271e-08, 4.8232074334464414e-08, 1.0222271917825765e-08, 2.0252137744591892e-07, 4.633245787033502e-09, 3.60151308775869e-09, 1.3054868475137482e-07, 6.641402023888077e-07, 6.054921897202803e-08, 5.728649057346047e-07, 1.313530617608194e-07, 3.980835856509657e-07, 2.634862994455034e-07, 6.217840819999765e-08, 2.0000718858881328e-09, 2.066843229897586e-08, 5.892581089739224e-09, 3.0210984824918796e-09, 6.2443294979175334e-09, 6.094701632264332e-09, 1.614513394088135e-07, 6.316513978532612e-09, 2.712785551750585e-08, 6.513200787594542e-07, 6.68268995696053e-08, 0.001709194970317185, 1.506937863382518e-08, 3.3351972295037058e-09, 1.4654825797322246e-08, 2.169590089806661e-07, 0.011077609844505787, 5.589694183072424e-07, 2.1716756393175274e-08, 2.6613509618300668e-08, 1.004934713222383e-08, 3.878330989692813e-09, 8.9215692611333e-09, 7.252839218097051e-09, 7.127240309046101e-08, 4.315827251133442e-09, 2.466466071382456e-07, 2.872924369512475e-07, 1.0901161751064592e-08, 3.006000426353239e-08, 1.3081127292480232e-07, 0.0006366593297570944, 5.444985617941711e-08, 1.696818330287897e-08, 1.2329308241021408e-08, 2.4477234461528496e-08, 2.5241561729671957e-08, 6.645710204367106e-09, 1.993931686428141e-09, 1.3684624988741234e-08, 4.087407745601013e-08, 3.317556149795564e-07, 5.10246422891214e-09, 4.9574698124388306e-08, 1.8582129612809695e-08, 9.656144328573646e-09, 0.09034418314695358, 7.884167985139356e-09, 2.8914985961137063e-08, 9.208059026377668e-08, 2.500618023759671e-08, 1.9315724131274692e-08, 1.5331207237068156e-07, 2.991354222103837e-07, 0.0032644786406308413, 1.7208900544574135e-06, 3.2132663818629226e-07, 7.565502890827247e-09, 1.1566440889509977e-06, 2.5713349671718788e-08, 4.5731550102345864e-08, 1.4455478480890349e-11, 4.901767533538326e-11, 3.6220213495141707e-09, 3.2194407140195835e-09, 1.5797986252508167e-09, 6.711593059094412e-09, 3.2908570574363694e-05, 2.0561460867263293e-10, 1.4191468267199525e-07, 8.780657090312616e-09, 2.5622131083480326e-09, 4.622071170246045e-09, 1.4990026997452333e-08, 0.0015640674391761422, 4.239380402282222e-09, 3.1616232263331767e-06, 6.669326069186354e-08, 3.4252877867402276e-08, 4.8991577017432064e-08, 2.2066194205194734e-08, 5.623781476060685e-07, 9.719430593690959e-09, 5.538310920982781e-10, 9.026593033922836e-06, 8.199346979154143e-09, 1.4876410432407283e-06, 5.139117931207693e-08, 7.928235135068462e-08, 0.3458346128463745, 0.0001428705727448687, 2.2640108454652363e-07, 1.3887293537351297e-09, 1.4786339264105663e-08, 3.308414098235346e-10, 1.630659696161274e-08, 8.24642631958028e-10, 2.8117335126864873e-09, 2.1910723901896745e-08, 0.011446796357631683, 2.7612404807086932e-08, 0.031082095578312874, 2.1912281056302163e-07, 2.6334387825954764e-07, 6.312446743095279e-08, 0.0012413733638823032, 1.077602984622672e-08, 1.4707555173743003e-08, 6.490446513574e-10, 3.855526120588593e-09, 5.363514077316722e-10, 1.1974838898254347e-09, 2.983537306100459e-10, 1.394625481765388e-08, 6.78284024502318e-08, 1.1008953748614658e-09, 3.0495241887251723e-09, 6.349608128175532e-08, 7.522052669628465e-08, 0.0004222955903969705, 8.231737069763767e-09, 5.5083528849309005e-09, 4.192044489315094e-09, 9.68865077055625e-09, 4.329513636491811e-09, 1.0891794488543383e-07, 1.5229861816123957e-08, 3.7103344840971886e-09, 6.560913590192285e-08, 1.0543362627402075e-08, 9.56950316322036e-07, 1.0571180042440176e-10, 9.548071666642954e-09, 2.8034614629746102e-08, 1.949335910467198e-06, 1.505779856358913e-08, 1.1365983709765715e-08, 2.995924841542319e-09, 3.5812099952181597e-09, 4.683222698531608e-09, 8.777346494071026e-08, 4.540442688494295e-09, 3.874353637911554e-07, 2.357730455315732e-09, 2.730109471826836e-10, 6.4057004145468e-09, 1.179130015849239e-09, 3.24575012200512e-05, 2.4620829819355095e-09, 3.319200203577566e-08, 3.5021032740445435e-09, 4.8939625685306964e-09, 0.00017165456665679812, 1.7398489760012126e-08, 2.62524260108421e-08, 1.7441251998207008e-08, 5.0831729936362535e-09, 7.569182614020065e-09, 1.6456063178793556e-09, 1.2675481775303865e-09, 4.07793123713418e-08, 1.16170113528824e-07, 7.73660069341986e-09, 3.080546377987048e-07, 1.2045307862251775e-08, 1.668992233305744e-08, 0.36763182282447815, 5.5481037541937894e-09, 2.717204097280046e-07, 5.172212524939823e-08, 3.8521026368698585e-08, 9.033197301278051e-08, 2.707656099332212e-09, 1.708955821300151e-08, 9.302183201498337e-08, 1.1131922974527697e-06, 5.713511086469225e-08, 0.0013344665057957172, 1.015239035950799e-06, 2.4038268975346e-07, 5.939468650240087e-08, 2.753479293460259e-07, 0.0014324425719678402, 1.8610283802900085e-07, 4.416070353840951e-08, 9.780749365972952e-08, 3.896484201959538e-08]], "pointer": [[0.0, 0.0, 8.92770622158423e-05, 0.0, 0.005841563921421766, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.00046282156836241484, 0.0, 1.3350587551030912e-06, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.00650158291682601, 0.0, 7.358358288911404e-06, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.00011209616786800325, 0.0, 4.489046841626987e-05, 0.0, 0.0, 0.0, 0.0, 1.0958026905427687e-05, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0007501356885768473, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 2.7828344173030928e-05, 0.0, 0.0, 0.0, 0.9858529567718506, 0.0, 0.0, 0.0, 1.3730740647588391e-05, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 8.685520879225805e-05, 0.0, 6.812898209318519e-05, 0.0, 0.0, 1.8654500308912247e-06, 0.0, 0.0, 0.0, 2.4031804059632123e-05, 0.0, 0.0, 0.0, 1.0208072126260959e-05, 0.0, 4.090962022473832e-07, 0.0, 9.225250607869384e-08, 0.0, 0.0, 0.0, 2.445357722535846e-06, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 7.246993391163414e-06, 0.0, 1.3207468327891547e-05, 0.0, 0.0, 0.0, 8.780300959188025e-06, 0.0, 1.607798026270757e-06, 0.0, 0.0, 0.0, 0.0, 8.497868293488864e-07, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 4.825167252420215e-06, 0.0, 8.740703947296424e-07, 0.0, 0.0, 0.0, 0.0, 5.117697696732648e-07, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 8.784803071648639e-07, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.7404586571956315e-07, 0.0, 0.0, 5.0117589125875384e-05, 0.0, 2.789024904359394e-07, 0.0, 0.0, 0.0, 0.0]], "target": [0.9858529567718506]}, "loss": [1.0617945194244385, 0.014248066581785679], "acc": [0.0, 0.0, 1.0, 0.0]}, "wrong_error_location": [208]}


Trace of simplified code(s):

{"result": {"time": "2021-02-21 13:08:17.252903", "n_pass": [1, 1, 1], "n_token": 229, "loss": [1.0006732940673828, 0.014248066581785679], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def _resolve_datacenter(", "dc", ",", "pillarenv", ")", ":", "#NEWLINE#", "#INDENT#", "\"\\n    If ``dc`` is a string - return it as is.\\n\\n    If it's a dict then sort it in descending order by key length and try\\n    to use keys as RegEx patterns to match against ``pillarenv``.\\n    The value for matched pattern should be a string (that can use\\n    ``str.format`` syntax togetehr with captured variables from pattern)\\n    pointing to targe data center to use.\\n\\n    If none patterns matched return ``None`` which meanse us datacenter of\\n    conencted Consul agent.\\n    \"", "#NEWLINE#", "log", ".", "debug", "(", "'Resolving Consul datacenter based on: {dc}'", ".", "format", "(", "dc", "=", "dc", ")", ")", "#NEWLINE#", "try", ":", "#NEWLINE#", "#INDENT#", "mappings", "=", "dc", ".", "items", "(", ")", "#NEWLINE#", "#UNINDENT#", "except", "AttributeError", ":", "#NEWLINE#", "#INDENT#", "log", ".", "debug", "(", "'Using pre-defined DC: {dc!r}'", ".", "format", "(", "dc", "=", "dc", ")", ")", "#NEWLINE#", "return", "dc", "#NEWLINE#", "#UNINDENT#", "log", ".", "debug", "(", "'Selecting DC based on pillarenv using {num} pattern(s)'", ".", "format", "(", "num", "=", "len", "(", "mappings", ")", ")", ")", "#NEWLINE#", "log", ".", "debug", "(", "'Pillarenv set to {env!r}'", ".", "format", "(", "env", "=", "pillarenv", ")", ")", "#NEWLINE#", "sorted_mappings", "=", "sorted", "(", "mappings", ",", "key", "=", "(", "lambda", "m", ":", "(", "(", "-", "len", "(", "m", "[", "0", "]", ")", ")", ",", "m", "[", "0", "]", ")", ")", ")", "#NEWLINE#", "for", "(", "pattern", ",", "target", ")", "in", "dc", ":", "#NEWLINE#", "#INDENT#", "match", "=", "re", ".", "match", "(", "pattern", ",", "pillarenv", ")", "#NEWLINE#", "if", "match", ":", "#NEWLINE#", "#INDENT#", "log", ".", "debug", "(", "'Matched pattern: {pattern!r}'", ".", "format", "(", "pattern", "=", "pattern", ")", ")", "#NEWLINE#", "result", "=", "target", ".", "format", "(", "**", "match", ".", "groupdict", "(", ")", ")", "#NEWLINE#", "log", ".", "debug", "(", "'Resolved datacenter: {result!r}'", ".", "format", "(", "result", "=", "result", ")", ")", "#NEWLINE#", "return", "result", "#NEWLINE#", "#UNINDENT#", "#UNINDENT#", "log", ".", "debug", "(", "'None of following patterns matched pillarenv={env}: {lst}'", ".", "format", "(", "env", "=", "pillarenv", ",", "lst", "=", "', '", ".", "join", "(", "(", "repr", "(", "x", ")", "for", "x", "in", "mappings", ")", ")", ")", ")"]}}
{"position": {"error_location": 208, "repair_targets": [92], "repair_candidates": [2, 19, 21, 31, 51, 53, 58, 131, 126, 141, 159, 161, 29, 73, 96, 224, 92, 135, 139, 147, 172, 165, 187, 189, 194, 219, 222, 128, 167, 4, 88, 143, 208]}}
{"prediction": {"error_location": 0.36763182282447815, "repair_targets": [0.9858529567718506], "repair_candidates": [8.92770622158423e-05, 0.005841563921421766, 0.00046282156836241484, 1.3350587551030912e-06, 0.00650158291682601, 7.358358288911404e-06, 0.00011209616786800325, 4.489046841626987e-05, 1.0958026905427687e-05, 0.0007501356885768473, 2.7828344173030928e-05, 0.9858529567718506, 1.3730740647588391e-05, 8.685520879225805e-05, 6.812898209318519e-05, 1.8654500308912247e-06, 2.4031804059632123e-05, 1.0208072126260959e-05, 4.090962022473832e-07, 9.225250607869384e-08, 2.445357722535846e-06, 7.246993391163414e-06, 1.3207468327891547e-05, 8.780300959188025e-06, 1.607798026270757e-06, 8.497868293488864e-07, 4.825167252420215e-06, 8.740703947296424e-07, 5.117697696732648e-07, 8.784803071648639e-07, 1.7404586571956315e-07, 5.0117589125875384e-05, 2.789024904359394e-07], "target_probs": 0.9858529567718506}}


{"result": {"time": "2021-02-21 13:08:18.165373", "n_pass": [98, 6, 2], "n_token": 222, "loss": [0.8796043395996094, 0.010121794417500496], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def _resolve_datacenter(", "dc", ",", "pillarenv", ")", ":", "#NEWLINE#", "#INDENT#", "\"\\n    If ``dc`` is a string - return it as is.\\n\\n    If it's a dict then sort it in descending order by key length and try\\n    to use keys as RegEx patterns to match against ``pillarenv``.\\n    The value for matched pattern should be a string (that can use\\n    ``str.format`` syntax togetehr with captured variables from pattern)\\n    pointing to targe data center to use.\\n\\n    If none patterns matched return ``None`` which meanse us datacenter of\\n    conencted Consul agent.\\n    \"", "#NEWLINE#", "log", ".", "debug", "(", "'Resolving Consul datacenter based on: {dc}'", ".", "format", "(", "dc", "=", "dc", ")", ")", "#NEWLINE#", "try", ":", "#NEWLINE#", "#INDENT#", "mappings", "=", "dc", ".", "items", "(", ")", "#NEWLINE#", "#UNINDENT#", "except", "AttributeError", ":", "#NEWLINE#", "format", "(", "dc", "=", "dc", ")", ")", "#NEWLINE#", "return", "dc", "#NEWLINE#", "#UNINDENT#", "log", ".", "debug", "(", "'Selecting DC based on pillarenv using {num} pattern(s)'", ".", "format", "(", "num", "=", "len", "(", "mappings", ")", ")", ")", "#NEWLINE#", "log", ".", "debug", "(", "'Pillarenv set to {env!r}'", ".", "format", "(", "env", "=", "pillarenv", ")", ")", "#NEWLINE#", "sorted_mappings", "=", "sorted", "(", "mappings", ",", "key", "=", "(", "lambda", "m", ":", "(", "(", "-", "len", "(", "m", "[", "0", "]", ")", ")", ",", "m", "[", "0", "]", ")", ")", ")", "#NEWLINE#", "for", "(", "pattern", ",", "target", ")", "in", "dc", ":", "#NEWLINE#", "#INDENT#", "match", "=", "re", ".", "match", "(", "pattern", ",", "pillarenv", ")", "#NEWLINE#", "if", "match", ":", "#NEWLINE#", "#INDENT#", "log", ".", "debug", "(", "'Matched pattern: {pattern!r}'", ".", "format", "(", "pattern", "=", "pattern", ")", ")", "#NEWLINE#", "result", "=", "target", ".", "format", "(", "**", "match", ".", "groupdict", "(", ")", ")", "#NEWLINE#", "log", ".", "debug", "(", "'Resolved datacenter: {result!r}'", ".", "format", "(", "result", "=", "result", ")", ")", "#NEWLINE#", "return", "result", "#NEWLINE#", "#UNINDENT#", "#UNINDENT#", "log", ".", "debug", "(", "'None of following patterns matched pillarenv={env}: {lst}'", ".", "format", "(", "env", "=", "pillarenv", ",", "lst", "=", "', '", ".", "join", "(", "(", "repr", "(", "x", ")", "for", "x", "in", "mappings", ")", ")", ")", ")"]}}
{"position": {"error_location": 201, "repair_targets": [85], "repair_candidates": [2, 19, 21, 31, 44, 46, 51, 124, 119, 134, 152, 154, 29, 66, 89, 217, 85, 128, 132, 140, 165, 158, 180, 182, 187, 212, 215, 121, 160, 4, 81, 136, 201]}}
{"prediction": {"error_location": 0.4149470627307892, "repair_targets": [0.9899292588233948], "repair_candidates": [7.541663944721222e-05, 0.004571889061480761, 0.0003963479248341173, 1.0636717888701241e-06, 0.003554931143298745, 5.827821041748393e-06, 3.7040368624730036e-05, 2.669714558578562e-05, 6.026110895618331e-06, 0.0010155572090297937, 2.8735674277413636e-05, 0.9899292588233948, 1.3095514077576809e-05, 9.200064232572913e-05, 9.527221118332818e-05, 2.1588596155197592e-06, 2.1441246644826606e-05, 8.745624654693529e-06, 3.083022761529719e-07, 8.727703004751675e-08, 4.8260180847137235e-06, 9.121840776060708e-06, 1.4793930859013926e-05, 1.077112028724514e-05, 1.9074195733992383e-06, 9.712385917737265e-07, 6.66004325466929e-06, 9.517086709820433e-07, 5.261400701783714e-07, 7.734909104328835e-07, 1.5968966238233406e-07, 6.631444557569921e-05, 2.62412413576385e-07], "target_probs": 0.9899292588233948}}


{"result": {"time": "2021-02-21 13:08:18.345208", "n_pass": [100, 7, 3], "n_token": 215, "loss": [0.9201403856277466, 0.01086579728871584], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def _resolve_datacenter(", "dc", ",", "pillarenv", ")", ":", "#NEWLINE#", "#INDENT#", "\"\\n    If ``dc`` is a string - return it as is.\\n\\n    If it's a dict then sort it in descending order by key length and try\\n    to use keys as RegEx patterns to match against ``pillarenv``.\\n    The value for matched pattern should be a string (that can use\\n    ``str.format`` syntax togetehr with captured variables from pattern)\\n    pointing to targe data center to use.\\n\\n    If none patterns matched return ``None`` which meanse us datacenter of\\n    conencted Consul agent.\\n    \"", "#NEWLINE#", "log", ".", "debug", "(", "'Resolving Consul datacenter based on: {dc}'", ".", "format", "(", "dc", "=", "dc", ")", ")", "#NEWLINE#", "try", ":", "#NEWLINE#", "#INDENT#", "mappings", "=", "dc", ".", "items", "(", ")", "#NEWLINE#", "#UNINDENT#", "except", "AttributeError", ":", "#NEWLINE#", "format", "(", "dc", "=", "dc", ")", ")", "#NEWLINE#", "return", "dc", "#NEWLINE#", "#UNINDENT#", "log", ".", "=", "len", "(", "mappings", ")", ")", ")", "#NEWLINE#", "log", ".", "debug", "(", "'Pillarenv set to {env!r}'", ".", "format", "(", "env", "=", "pillarenv", ")", ")", "#NEWLINE#", "sorted_mappings", "=", "sorted", "(", "mappings", ",", "key", "=", "(", "lambda", "m", ":", "(", "(", "-", "len", "(", "m", "[", "0", "]", ")", ")", ",", "m", "[", "0", "]", ")", ")", ")", "#NEWLINE#", "for", "(", "pattern", ",", "target", ")", "in", "dc", ":", "#NEWLINE#", "#INDENT#", "match", "=", "re", ".", "match", "(", "pattern", ",", "pillarenv", ")", "#NEWLINE#", "if", "match", ":", "#NEWLINE#", "#INDENT#", "log", ".", "debug", "(", "'Matched pattern: {pattern!r}'", ".", "format", "(", "pattern", "=", "pattern", ")", ")", "#NEWLINE#", "result", "=", "target", ".", "format", "(", "**", "match", ".", "groupdict", "(", ")", ")", "#NEWLINE#", "log", ".", "debug", "(", "'Resolved datacenter: {result!r}'", ".", "format", "(", "result", "=", "result", ")", ")", "#NEWLINE#", "return", "result", "#NEWLINE#", "#UNINDENT#", "#UNINDENT#", "log", ".", "debug", "(", "'None of following patterns matched pillarenv={env}: {lst}'", ".", "format", "(", "env", "=", "pillarenv", ",", "lst", "=", "', '", ".", "join", "(", "(", "repr", "(", "x", ")", "for", "x", "in", "mappings", ")", ")", ")", ")"]}}
{"position": {"error_location": 194, "repair_targets": [78], "repair_candidates": [2, 19, 21, 31, 44, 46, 51, 117, 112, 127, 145, 147, 29, 59, 82, 210, 78, 121, 125, 133, 158, 151, 173, 175, 180, 205, 208, 114, 153, 4, 74, 129, 194]}}
{"prediction": {"error_location": 0.39846310019493103, "repair_targets": [0.9891930222511292], "repair_candidates": [0.00020816725736949593, 0.005405019968748093, 0.00046911704703234136, 5.072874955658335e-07, 0.0026372300926595926, 1.4492107766272966e-05, 3.1817769922781736e-05, 6.800837127229897e-06, 1.71714727912331e-05, 0.001585869467817247, 3.651531369541772e-05, 0.9891930222511292, 1.923792478919495e-05, 9.482124733040109e-05, 0.00011935482325498015, 2.1429477783385664e-06, 2.8649774321820587e-05, 1.3960721844341606e-05, 5.677819103766524e-07, 9.07980606257297e-08, 3.1584122552885674e-06, 9.521682841295842e-06, 1.4889809790474828e-05, 1.0059779924631584e-05, 2.01620264306257e-06, 1.0490940667295945e-06, 6.161465535114985e-06, 9.76653495854407e-07, 6.103634291321214e-07, 1.0036335424956633e-06, 1.7384209627380187e-07, 6.550711259478703e-05, 2.847383768767031e-07], "target_probs": 0.9891930222511292}}


{"result": {"time": "2021-02-21 13:08:18.522815", "n_pass": [102, 8, 4], "n_token": 208, "loss": [0.9913243055343628, 0.005813836585730314], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def _resolve_datacenter(", "dc", ",", "pillarenv", ")", ":", "#NEWLINE#", "#INDENT#", "\"\\n    If ``dc`` is a string - return it as is.\\n\\n    If it's a dict then sort it in descending order by key length and try\\n    to use keys as RegEx patterns to match against ``pillarenv``.\\n    The value for matched pattern should be a string (that can use\\n    ``str.format`` syntax togetehr with captured variables from pattern)\\n    pointing to targe data center to use.\\n\\n    If none patterns matched return ``None`` which meanse us datacenter of\\n    conencted Consul agent.\\n    \"", "#NEWLINE#", "log", ".", "debug", "(", "'Resolving Consul datacenter based on: {dc}'", ".", "format", "(", "dc", "=", "dc", ")", ")", "#NEWLINE#", "try", ":", "#NEWLINE#", "#INDENT#", "mappings", "=", "dc", ".", "items", "(", ")", "#NEWLINE#", "#UNINDENT#", "except", "AttributeError", ":", "#NEWLINE#", "format", "(", "dc", "=", "dc", ")", ")", "#NEWLINE#", "return", "dc", "#NEWLINE#", "#UNINDENT#", "log", ".", "=", "len", "(", "mappings", ")", ")", ")", "format", "(", "env", "=", "pillarenv", ")", ")", "#NEWLINE#", "sorted_mappings", "=", "sorted", "(", "mappings", ",", "key", "=", "(", "lambda", "m", ":", "(", "(", "-", "len", "(", "m", "[", "0", "]", ")", ")", ",", "m", "[", "0", "]", ")", ")", ")", "#NEWLINE#", "for", "(", "pattern", ",", "target", ")", "in", "dc", ":", "#NEWLINE#", "#INDENT#", "match", "=", "re", ".", "match", "(", "pattern", ",", "pillarenv", ")", "#NEWLINE#", "if", "match", ":", "#NEWLINE#", "#INDENT#", "log", ".", "debug", "(", "'Matched pattern: {pattern!r}'", ".", "format", "(", "pattern", "=", "pattern", ")", ")", "#NEWLINE#", "result", "=", "target", ".", "format", "(", "**", "match", ".", "groupdict", "(", ")", ")", "#NEWLINE#", "log", ".", "debug", "(", "'Resolved datacenter: {result!r}'", ".", "format", "(", "result", "=", "result", ")", ")", "#NEWLINE#", "return", "result", "#NEWLINE#", "#UNINDENT#", "#UNINDENT#", "log", ".", "debug", "(", "'None of following patterns matched pillarenv={env}: {lst}'", ".", "format", "(", "env", "=", "pillarenv", ",", "lst", "=", "', '", ".", "join", "(", "(", "repr", "(", "x", ")", "for", "x", "in", "mappings", ")", ")", ")", ")"]}}
{"position": {"error_location": 187, "repair_targets": [71], "repair_candidates": [2, 19, 21, 31, 44, 46, 51, 110, 105, 120, 138, 140, 29, 59, 75, 203, 71, 114, 118, 126, 151, 144, 166, 168, 173, 198, 201, 107, 146, 4, 67, 122, 187]}}
{"prediction": {"error_location": 0.37108495831489563, "repair_targets": [0.9942030310630798], "repair_candidates": [9.212814620696008e-05, 0.002993421396240592, 0.00027770668384619057, 3.7826194443368877e-07, 0.0015621710335835814, 6.688439952995395e-06, 2.2248241293709725e-05, 5.945900738879573e-06, 1.1780543900385965e-05, 0.0006140010664239526, 1.4846326848783065e-05, 0.9942030310630798, 5.985115876683267e-06, 5.1561451982706785e-05, 6.449904321925715e-05, 9.245547403224919e-07, 9.866065738606267e-06, 3.874528829328483e-06, 2.4517331098650175e-07, 5.6637837531070545e-08, 3.7484521726582898e-06, 5.525901997316396e-06, 1.1020917554560583e-05, 4.808295216207625e-06, 9.166531640403264e-07, 4.348336233306327e-07, 2.6186137347394833e-06, 5.188676936995762e-07, 2.8071971769350057e-07, 4.7412646608790965e-07, 8.444600752000042e-08, 2.7919335479964502e-05, 1.4273392423547193e-07], "target_probs": 0.9942030310630798}}


{"result": {"time": "2021-02-21 13:08:18.695636", "n_pass": [105, 9, 5], "n_token": 201, "loss": [1.002610445022583, 0.006901361048221588], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def _resolve_datacenter(", "dc", ",", "pillarenv", ")", ":", "#NEWLINE#", "#INDENT#", "\"\\n    If ``dc`` is a string - return it as is.\\n\\n    If it's a dict then sort it in descending order by key length and try\\n    to use keys as RegEx patterns to match against ``pillarenv``.\\n    The value for matched pattern should be a string (that can use\\n    ``str.format`` syntax togetehr with captured variables from pattern)\\n    pointing to targe data center to use.\\n\\n    If none patterns matched return ``None`` which meanse us datacenter of\\n    conencted Consul agent.\\n    \"", "#NEWLINE#", "log", ".", "debug", "(", "'Resolving Consul datacenter based on: {dc}'", ".", "format", "(", "dc", "=", "dc", ")", ")", "#NEWLINE#", "try", ":", "#NEWLINE#", "#INDENT#", "mappings", "=", "dc", ".", "items", "(", ")", "#NEWLINE#", "#UNINDENT#", "except", "AttributeError", ":", "#NEWLINE#", "format", "(", "dc", "=", "dc", ")", ")", "#NEWLINE#", "return", "dc", "#NEWLINE#", "#UNINDENT#", "log", ".", "=", "len", "(", "mappings", ")", ")", ")", "format", "(", "env", "=", "pillarenv", ")", ")", "#NEWLINE#", "sorted_mappings", "=", "sorted", "(", "mappings", ",", "(", "-", "len", "(", "m", "[", "0", "]", ")", ")", ",", "m", "[", "0", "]", ")", ")", ")", "#NEWLINE#", "for", "(", "pattern", ",", "target", ")", "in", "dc", ":", "#NEWLINE#", "#INDENT#", "match", "=", "re", ".", "match", "(", "pattern", ",", "pillarenv", ")", "#NEWLINE#", "if", "match", ":", "#NEWLINE#", "#INDENT#", "log", ".", "debug", "(", "'Matched pattern: {pattern!r}'", ".", "format", "(", "pattern", "=", "pattern", ")", ")", "#NEWLINE#", "result", "=", "target", ".", "format", "(", "**", "match", ".", "groupdict", "(", ")", ")", "#NEWLINE#", "log", ".", "debug", "(", "'Resolved datacenter: {result!r}'", ".", "format", "(", "result", "=", "result", ")", ")", "#NEWLINE#", "return", "result", "#NEWLINE#", "#UNINDENT#", "#UNINDENT#", "log", ".", "debug", "(", "'None of following patterns matched pillarenv={env}: {lst}'", ".", "format", "(", "env", "=", "pillarenv", ",", "lst", "=", "', '", ".", "join", "(", "(", "repr", "(", "x", ")", "for", "x", "in", "mappings", ")", ")", ")", ")"]}}
{"position": {"error_location": 180, "repair_targets": [71], "repair_candidates": [2, 19, 21, 31, 44, 46, 51, 103, 98, 113, 131, 133, 29, 59, 75, 196, 71, 107, 111, 119, 144, 137, 159, 161, 166, 191, 194, 100, 139, 4, 67, 115, 180]}}
{"prediction": {"error_location": 0.3669203519821167, "repair_targets": [0.993122398853302], "repair_candidates": [0.0001050193386618048, 0.0032529672607779503, 0.00031190417939797044, 4.425129418450524e-07, 0.001985221868380904, 8.185736987798009e-06, 2.8975107852602378e-05, 7.515861398132984e-06, 1.540593439131044e-05, 0.0009064952027983963, 3.599074261728674e-05, 0.993122398853302, 2.600467087177094e-05, 4.7702997107990086e-05, 6.868562923045829e-05, 1.063576291926438e-06, 1.0847040357475635e-05, 3.5014622881135438e-06, 1.9756610925014684e-07, 4.694150845807599e-08, 1.8320254184800433e-06, 5.351153049559798e-06, 8.410208465647884e-06, 4.674253887060331e-06, 9.309327424489311e-07, 5.644620841849246e-07, 2.680478701222455e-06, 4.863211984229565e-07, 2.9577148552561994e-07, 4.997605174139608e-07, 9.780987397789431e-08, 3.5470351576805115e-05, 1.724085052501323e-07], "target_probs": 0.993122398853302}}


{"result": {"time": "2021-02-21 13:08:19.367718", "n_pass": [116, 13, 6], "n_token": 194, "loss": [0.905267059803009, 0.0069738044403493404], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def _resolve_datacenter(", "dc", ",", "pillarenv", ")", ":", "#NEWLINE#", "#INDENT#", "\"\\n    If ``dc`` is a string - return it as is.\\n\\n    If it's a dict then sort it in descending order by key length and try\\n    to use keys as RegEx patterns to match against ``pillarenv``.\\n    The value for matched pattern should be a string (that can use\\n    ``str.format`` syntax togetehr with captured variables from pattern)\\n    pointing to targe data center to use.\\n\\n    If none patterns matched return ``None`` which meanse us datacenter of\\n    conencted Consul agent.\\n    \"", "#NEWLINE#", "log", ".", "debug", "(", "'Resolving Consul datacenter based on: {dc}'", ".", "format", "(", "dc", "=", "dc", ")", ")", "#NEWLINE#", "try", ":", "#NEWLINE#", "#INDENT#", "mappings", "=", "dc", ".", "items", "(", ")", "#NEWLINE#", "#UNINDENT#", "except", "AttributeError", ":", "#NEWLINE#", "format", "(", "dc", "=", "dc", ")", ")", "#NEWLINE#", "return", "dc", "#NEWLINE#", "#UNINDENT#", "log", ".", "=", "len", "(", "mappings", ")", ")", ")", "format", "(", "env", "=", "pillarenv", ")", ")", "#NEWLINE#", "sorted_mappings", "=", "sorted", "(", "mappings", ",", "(", "-", "len", "(", "m", "[", "0", "]", ")", ")", ",", "m", "[", "0", "]", ")", ")", ")", "#NEWLINE#", "for", "(", "pattern", ",", "target", ")", "in", "dc", ":", "#NEWLINE#", "#INDENT#", "match", "=", "re", ".", "match", "(", "pattern", ",", "pillarenv", ")", "#NEWLINE#", "if", "match", ":", "#NEWLINE#", "#INDENT#", "log", ".", "debug", "(", "'Matched pattern: {pattern!r}'", ".", "format", "(", "pattern", "=", "pattern", ")", ")", "#NEWLINE#", "result", "=", "target", ".", "format", "(", "**", "match", ".", "groupdict", "(", "'Resolved datacenter: {result!r}'", ".", "format", "(", "result", "=", "result", ")", ")", "#NEWLINE#", "return", "result", "#NEWLINE#", "#UNINDENT#", "#UNINDENT#", "log", ".", "debug", "(", "'None of following patterns matched pillarenv={env}: {lst}'", ".", "format", "(", "env", "=", "pillarenv", ",", "lst", "=", "', '", ".", "join", "(", "(", "repr", "(", "x", ")", "for", "x", "in", "mappings", ")", ")", ")", ")"]}}
{"position": {"error_location": 173, "repair_targets": [71], "repair_candidates": [2, 19, 21, 31, 44, 46, 51, 103, 98, 113, 131, 133, 29, 59, 75, 189, 71, 107, 111, 119, 144, 137, 152, 154, 159, 184, 187, 100, 139, 4, 67, 115, 173]}}
{"prediction": {"error_location": 0.40443387627601624, "repair_targets": [0.9930504560470581], "repair_candidates": [0.00010403267515357584, 0.00314992549829185, 0.00030730030266568065, 4.421932260356698e-07, 0.0020403885282576084, 8.259362402895931e-06, 3.1289226171793416e-05, 9.029352440848015e-06, 1.5756335415062495e-05, 0.0009978835005313158, 3.615290916059166e-05, 0.9930504560470581, 4.362174877314828e-05, 5.6125001719919965e-05, 7.334958354476839e-05, 1.1330988627378247e-06, 8.331495337188244e-06, 2.2949861886445433e-06, 1.5540304332262167e-07, 4.426237509846942e-08, 1.2899464536531013e-06, 6.507860689453082e-06, 1.0810896128532477e-05, 3.055180513911182e-06, 6.680676278847386e-07, 4.348725042291335e-07, 9.606320645616506e-07, 7.770600518597348e-08, 1.8551726554960624e-07, 3.569693660665507e-07, 8.047231858654413e-08, 3.947324148612097e-05, 1.862968446175728e-07], "target_probs": 0.9930504560470581}}


{"result": {"time": "2021-02-21 13:08:20.188807", "n_pass": [135, 18, 7], "n_token": 187, "loss": [0.9944165349006653, 0.006454810965806246], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def _resolve_datacenter(", "dc", ",", "pillarenv", ")", ":", "#NEWLINE#", "#INDENT#", "\"\\n    If ``dc`` is a string - return it as is.\\n\\n    If it's a dict then sort it in descending order by key length and try\\n    to use keys as RegEx patterns to match against ``pillarenv``.\\n    The value for matched pattern should be a string (that can use\\n    ``str.format`` syntax togetehr with captured variables from pattern)\\n    pointing to targe data center to use.\\n\\n    If none patterns matched return ``None`` which meanse us datacenter of\\n    conencted Consul agent.\\n    \"", "#NEWLINE#", "log", ".", "debug", "(", "'Resolving Consul datacenter based on: {dc}'", ".", "format", "(", "dc", "=", "dc", ")", ")", "#NEWLINE#", "try", ":", "#NEWLINE#", "#INDENT#", "mappings", "=", "dc", ".", "items", "(", ")", "#NEWLINE#", "#UNINDENT#", "except", "AttributeError", ":", "#NEWLINE#", "format", "(", "dc", "=", "dc", ")", ")", "#NEWLINE#", "return", "dc", "#NEWLINE#", "#UNINDENT#", "log", ".", "=", "len", "(", "mappings", ")", ")", ")", "format", "(", "env", "=", "pillarenv", ")", ")", "#NEWLINE#", "sorted_mappings", "=", "sorted", "(", "mappings", ",", "(", "-", "len", "(", "m", "[", "0", "]", ")", ")", ")", "#NEWLINE#", "for", "(", "pattern", ",", "target", ")", "in", "dc", ":", "#NEWLINE#", "#INDENT#", "match", "=", "re", ".", "match", "(", "pattern", ",", "pillarenv", ")", "#NEWLINE#", "if", "match", ":", "#NEWLINE#", "#INDENT#", "log", ".", "debug", "(", "'Matched pattern: {pattern!r}'", ".", "format", "(", "pattern", "=", "pattern", ")", ")", "#NEWLINE#", "result", "=", "target", ".", "format", "(", "**", "match", ".", "groupdict", "(", "'Resolved datacenter: {result!r}'", ".", "format", "(", "result", "=", "result", ")", ")", "#NEWLINE#", "return", "result", "#NEWLINE#", "#UNINDENT#", "#UNINDENT#", "log", ".", "debug", "(", "'None of following patterns matched pillarenv={env}: {lst}'", ".", "format", "(", "env", "=", "pillarenv", ",", "lst", "=", "', '", ".", "join", "(", "(", "repr", "(", "x", ")", "for", "x", "in", "mappings", ")", ")", ")", ")"]}}
{"position": {"error_location": 166, "repair_targets": [71], "repair_candidates": [2, 19, 21, 31, 44, 46, 51, 96, 91, 106, 124, 126, 29, 59, 75, 182, 71, 100, 104, 112, 137, 130, 145, 147, 152, 177, 180, 93, 132, 4, 67, 108, 166]}}
{"prediction": {"error_location": 0.36993923783302307, "repair_targets": [0.9935659766197205], "repair_candidates": [9.945422789314762e-05, 0.0031188596040010452, 0.00029025686671957374, 3.8325254081428284e-07, 0.0018241825746372342, 7.82635197538184e-06, 2.532917460484896e-05, 7.539006674051052e-06, 1.3735779248236213e-05, 0.0008366424008272588, 2.3591630451846868e-05, 0.9935659766197205, 2.3180091375252232e-05, 4.54650325991679e-05, 5.947252793703228e-05, 9.799873623705935e-07, 7.138271939766128e-06, 2.6248842459608568e-06, 1.596741725506945e-07, 4.423782584694891e-08, 1.1171439382451354e-06, 5.004424565413501e-06, 8.323174370161723e-06, 2.5255569653381826e-06, 5.673051646226668e-07, 3.610722103530861e-07, 7.049878831821843e-07, 6.714680012009921e-08, 1.5942248410283355e-07, 2.926629747435072e-07, 6.68607853526737e-08, 2.8003492843708955e-05, 1.4945196369353653e-07], "target_probs": 0.9935659766197205}}


{"result": {"time": "2021-02-21 13:08:21.315726", "n_pass": [216, 25, 8], "n_token": 183, "loss": [0.8395634889602661, 0.008693946525454521], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def _resolve_datacenter(", "dc", ",", "pillarenv", ")", ":", "#NEWLINE#", "#INDENT#", "\"\\n    If ``dc`` is a string - return it as is.\\n\\n    If it's a dict then sort it in descending order by key length and try\\n    to use keys as RegEx patterns to match against ``pillarenv``.\\n    The value for matched pattern should be a string (that can use\\n    ``str.format`` syntax togetehr with captured variables from pattern)\\n    pointing to targe data center to use.\\n\\n    If none patterns matched return ``None`` which meanse us datacenter of\\n    conencted Consul agent.\\n    \"", "#NEWLINE#", "log", ".", "debug", "(", "'Resolving Consul datacenter based on: {dc}'", ".", "format", "(", "dc", "=", "dc", ")", ")", "#NEWLINE#", "try", ":", "#NEWLINE#", "#INDENT#", "mappings", "=", "dc", ".", "items", "(", ")", "#NEWLINE#", "#UNINDENT#", "except", "AttributeError", ":", "#NEWLINE#", "format", "(", "dc", "=", "dc", ")", ")", "#NEWLINE#", "return", "dc", "#NEWLINE#", "#UNINDENT#", "log", ".", "=", "len", "(", "mappings", ")", ")", ")", "format", "(", "env", "=", "pillarenv", ")", ")", "#NEWLINE#", "sorted_mappings", "=", "sorted", "(", "mappings", ",", "(", "-", "len", "(", "m", "[", ")", "#NEWLINE#", "for", "(", "pattern", ",", "target", ")", "in", "dc", ":", "#NEWLINE#", "#INDENT#", "match", "=", "re", ".", "match", "(", "pattern", ",", "pillarenv", ")", "#NEWLINE#", "if", "match", ":", "#NEWLINE#", "#INDENT#", "log", ".", "debug", "(", "'Matched pattern: {pattern!r}'", ".", "format", "(", "pattern", "=", "pattern", ")", ")", "#NEWLINE#", "result", "=", "target", ".", "format", "(", "**", "match", ".", "groupdict", "(", "'Resolved datacenter: {result!r}'", ".", "format", "(", "result", "=", "result", ")", ")", "#NEWLINE#", "return", "result", "#NEWLINE#", "#UNINDENT#", "#UNINDENT#", "log", ".", "debug", "(", "'None of following patterns matched pillarenv={env}: {lst}'", ".", "format", "(", "env", "=", "pillarenv", ",", "lst", "=", "', '", ".", "join", "(", "(", "repr", "(", "x", ")", "for", "x", "in", "mappings", ")", ")", ")", ")"]}}
{"position": {"error_location": 162, "repair_targets": [71], "repair_candidates": [2, 19, 21, 31, 44, 46, 51, 92, 87, 102, 120, 122, 29, 59, 75, 178, 71, 96, 100, 108, 133, 126, 141, 143, 148, 173, 176, 89, 128, 4, 67, 104, 162]}}
{"prediction": {"error_location": 0.43189898133277893, "repair_targets": [0.9913437366485596], "repair_candidates": [0.00013104557001497597, 0.004140225704759359, 0.0003886480408255011, 5.329293912836874e-07, 0.002530681900680065, 1.065235846908763e-05, 3.474872937658802e-05, 1.0433251190988813e-05, 1.7788699551601894e-05, 0.0010652445489540696, 2.101056270475965e-05, 0.9913437366485596, 1.8595839719637297e-05, 5.0181770347990096e-05, 0.000127544641145505, 2.246146323159337e-06, 1.4839108189335093e-05, 3.994874077761779e-06, 2.544429662520997e-07, 7.648103661495043e-08, 1.6769679405115312e-06, 9.606062121747527e-06, 1.5258640814863611e-05, 4.511382940108888e-06, 9.98797645479499e-07, 6.724887384734757e-07, 1.476372290198924e-06, 1.1403228938888788e-07, 2.4912881713134993e-07, 5.088813281872717e-07, 1.1187363213593926e-07, 5.2158895414322615e-05, 2.4391397346335e-07], "target_probs": 0.9913437366485596}}


{"result": {"time": "2021-02-21 13:08:21.637748", "n_pass": [224, 27, 9], "n_token": 179, "loss": [0.8905682563781738, 0.007862461730837822], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def _resolve_datacenter(", "dc", ",", "pillarenv", ")", ":", "#NEWLINE#", "#INDENT#", "\"\\n    If ``dc`` is a string - return it as is.\\n\\n    If it's a dict then sort it in descending order by key length and try\\n    to use keys as RegEx patterns to match against ``pillarenv``.\\n    The value for matched pattern should be a string (that can use\\n    ``str.format`` syntax togetehr with captured variables from pattern)\\n    pointing to targe data center to use.\\n\\n    If none patterns matched return ``None`` which meanse us datacenter of\\n    conencted Consul agent.\\n    \"", "#NEWLINE#", "log", ".", "debug", "(", "'Resolving Consul datacenter based on: {dc}'", ".", "format", "(", "dc", "=", "dc", ")", ")", "#NEWLINE#", "try", ":", "#NEWLINE#", "#INDENT#", "mappings", "=", "dc", ".", "items", "(", ")", "#NEWLINE#", "#UNINDENT#", "except", "AttributeError", ":", "#NEWLINE#", "format", "(", "dc", "=", "dc", ")", ")", "#NEWLINE#", "return", "dc", "#NEWLINE#", "#UNINDENT#", "log", ".", "=", "len", "(", "mappings", ")", ")", ")", "format", "(", "env", "=", "pillarenv", ")", ")", "#NEWLINE#", "sorted_mappings", "=", "sorted", "(", "mappings", ",", "(", "-", "len", "(", "m", "[", ")", "#NEWLINE#", "for", "(", "pattern", ",", "target", ")", "in", "dc", ":", "#NEWLINE#", "#INDENT#", "match", "=", "re", ".", "match", "(", "pattern", ",", "pillarenv", ")", "#NEWLINE#", "if", "match", ":", "#NEWLINE#", "(", "'Matched pattern: {pattern!r}'", ".", "format", "(", "pattern", "=", "pattern", ")", ")", "#NEWLINE#", "result", "=", "target", ".", "format", "(", "**", "match", ".", "groupdict", "(", "'Resolved datacenter: {result!r}'", ".", "format", "(", "result", "=", "result", ")", ")", "#NEWLINE#", "return", "result", "#NEWLINE#", "#UNINDENT#", "#UNINDENT#", "log", ".", "debug", "(", "'None of following patterns matched pillarenv={env}: {lst}'", ".", "format", "(", "env", "=", "pillarenv", ",", "lst", "=", "', '", ".", "join", "(", "(", "repr", "(", "x", ")", "for", "x", "in", "mappings", ")", ")", ")", ")"]}}
{"position": {"error_location": 158, "repair_targets": [71], "repair_candidates": [2, 19, 21, 31, 44, 46, 51, 92, 87, 102, 116, 118, 29, 59, 75, 174, 71, 96, 100, 108, 129, 122, 137, 139, 144, 169, 172, 89, 124, 4, 67, 104, 158]}}
{"prediction": {"error_location": 0.4104224443435669, "repair_targets": [0.9921683669090271], "repair_candidates": [0.00011826294212369248, 0.0037585017271339893, 0.00034719923860393465, 4.7045065798556607e-07, 0.0023410257417708635, 9.81594803306507e-06, 3.092773840762675e-05, 9.455546205572318e-06, 1.5980502212187275e-05, 0.0009470793884247541, 2.121345096384175e-05, 0.9921683669090271, 1.312848962697899e-05, 4.355529017630033e-05, 8.866130519891158e-05, 1.5551597698504338e-06, 1.291961598326452e-05, 4.6637064770038705e-06, 1.9899647440979606e-07, 5.631359556446114e-08, 2.8812689834012417e-06, 6.620643034693785e-06, 1.2781841178366449e-05, 4.9313180170429405e-06, 1.143354779742367e-06, 6.906839757903072e-07, 1.3596620647149393e-06, 1.2691917561369337e-07, 2.4196918957386515e-07, 5.083210226075607e-07, 1.0455909915663142e-07, 3.530785397742875e-05, 2.1261774918457377e-07], "target_probs": 0.9921683669090271}}


{"result": {"time": "2021-02-21 13:08:21.795405", "n_pass": [225, 28, 10], "n_token": 175, "loss": [0.6871950030326843, 0.008883357979357243], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def _resolve_datacenter(", "dc", ",", "pillarenv", ")", ":", "#NEWLINE#", "#INDENT#", "\"\\n    If ``dc`` is a string - return it as is.\\n\\n    If it's a dict then sort it in descending order by key length and try\\n    to use keys as RegEx patterns to match against ``pillarenv``.\\n    The value for matched pattern should be a string (that can use\\n    ``str.format`` syntax togetehr with captured variables from pattern)\\n    pointing to targe data center to use.\\n\\n    If none patterns matched return ``None`` which meanse us datacenter of\\n    conencted Consul agent.\\n    \"", "#NEWLINE#", "log", ".", "debug", "(", "'Resolving Consul datacenter based on: {dc}'", ".", "format", "(", "dc", "=", "dc", ")", ")", "#NEWLINE#", "try", ":", "#NEWLINE#", "#INDENT#", "mappings", "=", "dc", ".", "items", "(", ")", "#NEWLINE#", "#UNINDENT#", "except", "AttributeError", ":", "#NEWLINE#", "format", "(", "dc", "=", "dc", ")", ")", "#NEWLINE#", "return", "dc", "#NEWLINE#", "#UNINDENT#", "log", ".", "=", "len", "(", "mappings", ")", ")", ")", "format", "(", "env", "=", "pillarenv", ")", ")", "#NEWLINE#", "sorted_mappings", "=", "sorted", "(", "mappings", ",", "(", "-", "len", "(", "m", "[", ")", "#NEWLINE#", "for", "(", "pattern", ",", "target", ")", "in", "dc", ":", "#NEWLINE#", "#INDENT#", "match", "=", "re", ".", "match", "(", "pattern", ",", "pillarenv", ")", "#NEWLINE#", "if", "match", ":", "#NEWLINE#", "(", "pattern", "=", "pattern", ")", ")", "#NEWLINE#", "result", "=", "target", ".", "format", "(", "**", "match", ".", "groupdict", "(", "'Resolved datacenter: {result!r}'", ".", "format", "(", "result", "=", "result", ")", ")", "#NEWLINE#", "return", "result", "#NEWLINE#", "#UNINDENT#", "#UNINDENT#", "log", ".", "debug", "(", "'None of following patterns matched pillarenv={env}: {lst}'", ".", "format", "(", "env", "=", "pillarenv", ",", "lst", "=", "', '", ".", "join", "(", "(", "repr", "(", "x", ")", "for", "x", "in", "mappings", ")", ")", ")", ")"]}}
{"position": {"error_location": 154, "repair_targets": [71], "repair_candidates": [2, 19, 21, 31, 44, 46, 51, 92, 87, 102, 112, 114, 29, 59, 75, 170, 71, 96, 100, 108, 125, 118, 133, 135, 140, 165, 168, 89, 120, 4, 67, 104, 154]}}
{"prediction": {"error_location": 0.5029850006103516, "repair_targets": [0.9911559820175171], "repair_candidates": [0.00014796147297602147, 0.003999578766524792, 0.0004288800118956715, 6.0833514226033e-07, 0.0026414531748741865, 1.2265471923456062e-05, 4.524566975305788e-05, 1.3006591871089768e-05, 2.238603883597534e-05, 0.001170324976556003, 3.4605742257554084e-05, 0.9911559820175171, 1.449421870347578e-05, 6.029773794580251e-05, 0.00011775251186918467, 2.296447974003968e-06, 2.2348111087922007e-05, 5.514033091458259e-06, 3.08503359747192e-07, 8.409684681964791e-08, 5.376088211050956e-06, 3.729913942152052e-06, 1.0629590178723447e-05, 5.358500402508071e-06, 1.0549097169132438e-06, 6.940590537851676e-07, 2.2463805180450436e-06, 1.0751698198419035e-07, 2.7025797066926316e-07, 5.548909598473983e-07, 1.3518950936486362e-07, 7.415199070237577e-05, 2.877341955809243e-07], "target_probs": 0.9911559820175171}}


{"result": {"time": "2021-02-21 13:08:21.954058", "n_pass": [230, 29, 11], "n_token": 171, "loss": [0.7249652743339539, 0.012055895291268826], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def _resolve_datacenter(", "dc", ",", "pillarenv", ")", ":", "#NEWLINE#", "#INDENT#", "\"\\n    If ``dc`` is a string - return it as is.\\n\\n    If it's a dict then sort it in descending order by key length and try\\n    to use keys as RegEx patterns to match against ``pillarenv``.\\n    The value for matched pattern should be a string (that can use\\n    ``str.format`` syntax togetehr with captured variables from pattern)\\n    pointing to targe data center to use.\\n\\n    If none patterns matched return ``None`` which meanse us datacenter of\\n    conencted Consul agent.\\n    \"", "#NEWLINE#", "log", ".", "debug", "(", "'Resolving Consul datacenter based on: {dc}'", ".", "format", "(", "dc", "=", "dc", ")", ")", "#NEWLINE#", "try", ":", "#NEWLINE#", "#INDENT#", "mappings", "=", "dc", ".", "items", "(", ")", "#NEWLINE#", "#UNINDENT#", "except", "AttributeError", ":", "#NEWLINE#", "format", "(", "dc", "=", "dc", ")", ")", "#NEWLINE#", "return", "dc", "#NEWLINE#", "#UNINDENT#", "log", ".", "=", "len", "(", "mappings", ")", ")", ")", "format", "(", "env", "=", "pillarenv", ")", ")", "#NEWLINE#", "sorted_mappings", "=", "sorted", "(", "mappings", ",", "(", "-", "len", "(", "m", "[", ")", "#NEWLINE#", "for", "(", "pattern", ",", "target", ")", "in", "dc", ":", "#NEWLINE#", "#INDENT#", "match", "=", "re", ".", "match", "(", "pattern", ",", "pillarenv", ")", "#NEWLINE#", "if", "match", ":", "#NEWLINE#", "(", "pattern", "=", "pattern", ")", ")", "#NEWLINE#", "result", "=", "target", ".", "format", "(", "**", "match", ".", "format", "(", "result", "=", "result", ")", ")", "#NEWLINE#", "return", "result", "#NEWLINE#", "#UNINDENT#", "#UNINDENT#", "log", ".", "debug", "(", "'None of following patterns matched pillarenv={env}: {lst}'", ".", "format", "(", "env", "=", "pillarenv", ",", "lst", "=", "', '", ".", "join", "(", "(", "repr", "(", "x", ")", "for", "x", "in", "mappings", ")", ")", ")", ")"]}}
{"position": {"error_location": 150, "repair_targets": [71], "repair_candidates": [2, 19, 21, 31, 44, 46, 51, 92, 87, 102, 112, 114, 29, 59, 75, 166, 71, 96, 100, 108, 125, 118, 129, 131, 136, 161, 164, 89, 120, 4, 67, 104, 150]}}
{"prediction": {"error_location": 0.48434141278266907, "repair_targets": [0.9880164861679077], "repair_candidates": [0.00020421514636836946, 0.00532075110822916, 0.0005864145932719111, 8.616078162049234e-07, 0.0035172379575669765, 1.6637548469589092e-05, 6.555811705766246e-05, 2.2336527763400227e-05, 3.549647954059765e-05, 0.0016817861469462514, 5.329155828803778e-05, 0.9880164861679077, 1.8255665054311976e-05, 8.979859558166936e-05, 0.00018568748782854527, 3.275068593211472e-06, 2.7105048502562568e-05, 8.175034963642247e-06, 4.156723605319712e-07, 1.0988517118448726e-07, 3.968570126744453e-06, 4.89610101794824e-06, 1.5402603821712546e-05, 6.512611435027793e-06, 1.7450463474233402e-06, 6.547456337102631e-07, 3.596481974454946e-06, 2.6755077442430775e-07, 4.134946323119948e-07, 7.529984600296302e-07, 1.814518668652454e-07, 0.00010722249135142192, 3.720970767062681e-07], "target_probs": 0.9880164861679077}}


{"result": {"time": "2021-02-21 13:08:22.108614", "n_pass": [234, 30, 12], "n_token": 167, "loss": [0.6962310075759888, 0.012443876825273037], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def _resolve_datacenter(", "dc", ",", "pillarenv", ")", ":", "#NEWLINE#", "#INDENT#", "\"\\n    If ``dc`` is a string - return it as is.\\n\\n    If it's a dict then sort it in descending order by key length and try\\n    to use keys as RegEx patterns to match against ``pillarenv``.\\n    The value for matched pattern should be a string (that can use\\n    ``str.format`` syntax togetehr with captured variables from pattern)\\n    pointing to targe data center to use.\\n\\n    If none patterns matched return ``None`` which meanse us datacenter of\\n    conencted Consul agent.\\n    \"", "#NEWLINE#", "log", ".", "debug", "(", "'Resolving Consul datacenter based on: {dc}'", ".", "format", "(", "dc", "=", "dc", ")", ")", "#NEWLINE#", "try", ":", "#NEWLINE#", "#INDENT#", "mappings", "=", "dc", ".", "items", "(", ")", "#NEWLINE#", "#UNINDENT#", "except", "AttributeError", ":", "#NEWLINE#", "format", "(", "dc", "=", "dc", ")", ")", "#NEWLINE#", "return", "dc", "#NEWLINE#", "#UNINDENT#", "log", ".", "=", "len", "(", "mappings", ")", ")", ")", "format", "(", "env", "=", "pillarenv", ")", ")", "#NEWLINE#", "sorted_mappings", "=", "sorted", "(", "mappings", ",", "(", "-", "len", "(", "m", "[", ")", "#NEWLINE#", "for", "(", "pattern", ",", "target", ")", "in", "dc", ":", "#NEWLINE#", "#INDENT#", "match", "=", "re", ".", "match", "(", "pattern", ",", "pillarenv", ")", "#NEWLINE#", "if", "match", ":", "#NEWLINE#", "(", "pattern", "=", "pattern", ")", ")", "#NEWLINE#", "result", "=", "target", ".", "format", "(", "**", "match", ".", "format", "(", "result", "=", "result", ")", ")", "#NEWLINE#", "return", "result", "#NEWLINE#", "#UNINDENT#", "(", "'None of following patterns matched pillarenv={env}: {lst}'", ".", "format", "(", "env", "=", "pillarenv", ",", "lst", "=", "', '", ".", "join", "(", "(", "repr", "(", "x", ")", "for", "x", "in", "mappings", ")", ")", ")", ")"]}}
{"position": {"error_location": 146, "repair_targets": [71], "repair_candidates": [2, 19, 21, 31, 44, 46, 51, 92, 87, 102, 112, 114, 29, 59, 75, 162, 71, 96, 100, 108, 125, 118, 129, 131, 136, 157, 160, 89, 120, 4, 67, 104, 146]}}
{"prediction": {"error_location": 0.49846047163009644, "repair_targets": [0.987633228302002], "repair_candidates": [0.00020843170932494104, 0.005032374989241362, 0.0005806873668916523, 9.37527715905162e-07, 0.004074227996170521, 2.148408930224832e-05, 8.4537903603632e-05, 2.2032867491361685e-05, 3.849294444080442e-05, 0.0017855887999758124, 4.934603930450976e-05, 0.987633228302002, 1.5259103747666813e-05, 0.00010583788389340043, 0.00016568094724789262, 3.1400354600918945e-06, 3.403826121939346e-05, 1.2136716577515472e-05, 4.618188427230052e-07, 1.3066548376627907e-07, 2.860374024749035e-06, 4.5821861931472085e-06, 1.2853743101004511e-05, 7.430702225974528e-06, 1.6493006569362478e-06, 7.29086195860873e-07, 3.43691340276564e-06, 2.2370744545696652e-07, 4.48666185093316e-07, 5.812149765915819e-07, 2.1400553862349625e-07, 9.655019675847143e-05, 4.1183278653988964e-07], "target_probs": 0.987633228302002}}


{"result": {"time": "2021-02-21 13:08:22.563621", "n_pass": [238, 33, 13], "n_token": 163, "loss": [0.729025661945343, 0.011304374784231186], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def _resolve_datacenter(", "dc", ",", "pillarenv", ")", ":", "#NEWLINE#", "#INDENT#", "\"\\n    If ``dc`` is a string - return it as is.\\n\\n    If it's a dict then sort it in descending order by key length and try\\n    to use keys as RegEx patterns to match against ``pillarenv``.\\n    The value for matched pattern should be a string (that can use\\n    ``str.format`` syntax togetehr with captured variables from pattern)\\n    pointing to targe data center to use.\\n\\n    If none patterns matched return ``None`` which meanse us datacenter of\\n    conencted Consul agent.\\n    \"", "#NEWLINE#", "log", ".", "debug", "(", "'Resolving Consul datacenter based on: {dc}'", ".", "format", "(", "dc", "=", "dc", ")", ")", "#NEWLINE#", "try", ":", "#NEWLINE#", "#INDENT#", "mappings", "=", "dc", ".", "items", "(", ")", "#NEWLINE#", "#UNINDENT#", "except", "AttributeError", ":", "#NEWLINE#", "format", "(", "dc", "=", "dc", ")", ")", "#NEWLINE#", "return", "dc", "#NEWLINE#", "#UNINDENT#", "log", ".", "=", "len", "(", "mappings", ")", ")", ")", "format", "(", "env", "=", "pillarenv", ")", ")", "#NEWLINE#", "sorted_mappings", "=", "sorted", "(", "mappings", ",", "(", "-", "len", "(", "m", "[", ")", "#NEWLINE#", "for", "(", "pattern", ",", "target", ")", "in", "dc", ":", "#NEWLINE#", "#INDENT#", "match", "=", "re", ".", "match", "(", "pattern", ",", "pillarenv", ")", "#NEWLINE#", "if", "match", ":", "#NEWLINE#", "(", "pattern", "=", "pattern", ")", ")", "#NEWLINE#", "result", "=", "target", ".", "format", "(", "**", "match", ".", "format", "(", "result", "=", "result", ")", ")", "#NEWLINE#", "return", "result", "#NEWLINE#", "#UNINDENT#", "(", "'None of following patterns matched pillarenv={env}: {lst}'", ".", "format", "(", "env", "=", "pillarenv", ",", "lst", "=", "', '", "repr", "(", "x", ")", "for", "x", "in", "mappings", ")", ")", ")", ")"]}}
{"position": {"error_location": 146, "repair_targets": [71], "repair_candidates": [2, 19, 21, 31, 44, 46, 51, 92, 87, 102, 112, 114, 29, 59, 75, 158, 71, 96, 100, 108, 125, 118, 129, 131, 136, 153, 156, 89, 120, 4, 67, 104, 146]}}
{"prediction": {"error_location": 0.48237869143486023, "repair_targets": [0.9887592792510986], "repair_candidates": [0.0001779018057277426, 0.003914368338882923, 0.00045769449207000434, 8.184438797798066e-07, 0.003940589260309935, 1.704031637927983e-05, 7.771472883177921e-05, 3.0351817258633673e-05, 3.242147795390338e-05, 0.0017736818408593535, 3.516996730468236e-05, 0.9887592792510986, 1.3173916158848442e-05, 9.938092262018472e-05, 0.00017611314251553267, 3.7999136566213565e-06, 3.6691530112875625e-05, 9.189799129671883e-06, 3.9187730749290495e-07, 1.0399374161806918e-07, 2.4776011287030997e-06, 4.217781679471955e-06, 1.497355606261408e-05, 6.683687388431281e-06, 1.508432660557446e-06, 5.539230869544554e-07, 2.756692538241623e-06, 1.8861027228922467e-07, 4.855051543017908e-07, 5.862227681063814e-07, 2.3637139179299993e-07, 0.00040903646731749177, 4.4285752665018663e-07], "target_probs": 0.9887592792510986}}


{"result": {"time": "2021-02-21 13:08:22.713484", "n_pass": [241, 34, 14], "n_token": 159, "loss": [0.8139384388923645, 0.010831030085682869], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def _resolve_datacenter(", "dc", ",", "pillarenv", ")", ":", "#NEWLINE#", "#INDENT#", "\"\\n    If ``dc`` is a string - return it as is.\\n\\n    If it's a dict then sort it in descending order by key length and try\\n    to use keys as RegEx patterns to match against ``pillarenv``.\\n    The value for matched pattern should be a string (that can use\\n    ``str.format`` syntax togetehr with captured variables from pattern)\\n    pointing to targe data center to use.\\n\\n    If none patterns matched return ``None`` which meanse us datacenter of\\n    conencted Consul agent.\\n    \"", "#NEWLINE#", "log", ".", "debug", "(", "'Resolving Consul datacenter based on: {dc}'", ".", "format", "(", "dc", "=", "dc", ")", ")", "#NEWLINE#", "try", ":", "#NEWLINE#", "#INDENT#", "mappings", "=", "dc", ".", "items", "(", ")", "#NEWLINE#", "#UNINDENT#", "except", "AttributeError", ":", "#NEWLINE#", "format", "(", "dc", "=", "dc", ")", ")", "#NEWLINE#", "return", "dc", "#NEWLINE#", "#UNINDENT#", "log", ".", "=", "len", "(", "mappings", ")", ")", ")", "format", "(", "env", "=", "pillarenv", ")", ")", "#NEWLINE#", "sorted_mappings", "=", "sorted", "(", "mappings", ",", "(", "-", "len", "(", "m", "[", ")", "#NEWLINE#", "for", "(", "pattern", ",", "target", ")", "in", "dc", ":", "#NEWLINE#", "#INDENT#", "match", "=", "re", ".", "match", "(", "pattern", ",", "pillarenv", ")", "#NEWLINE#", "if", "match", ":", "#NEWLINE#", "(", "pattern", "=", "pattern", ")", ")", "#NEWLINE#", "result", "=", "target", ".", "format", "(", "**", "match", ".", "format", "(", "result", "=", "result", ")", ")", "#NEWLINE#", "return", "result", "#NEWLINE#", "#UNINDENT#", "(", "'None of following patterns matched pillarenv={env}: {lst}'", ".", "format", "(", "env", "=", "pillarenv", ",", "lst", "=", "', '", "repr", "(", "x", ")", "for", "x", "in", "mappings"]}}
{"position": {"error_location": 146, "repair_targets": [71], "repair_candidates": [2, 19, 21, 31, 44, 46, 51, 92, 87, 102, 112, 114, 29, 59, 75, 158, 71, 96, 100, 108, 125, 118, 129, 131, 136, 153, 156, 89, 120, 4, 67, 104, 146]}}
{"prediction": {"error_location": 0.44310951232910156, "repair_targets": [0.9892274141311646], "repair_candidates": [0.00020726444199681282, 0.004495806060731411, 0.0005981744034215808, 8.810115446067357e-07, 0.0030941066797822714, 2.1374451534939e-05, 7.943905075080693e-05, 2.4155908249667846e-05, 3.0276401957962662e-05, 0.0014457672368735075, 3.1204992410494015e-05, 0.9892274141311646, 1.3597161341749597e-05, 9.523609332973137e-05, 0.00020215734548401088, 3.06076071865391e-06, 3.320823088870384e-05, 9.75344028120162e-06, 4.3380438796702947e-07, 1.0996907917615317e-07, 3.018986035385751e-06, 4.555772648018319e-06, 1.4185000509314705e-05, 9.861711077974178e-06, 1.3987654483571532e-06, 6.873218012515281e-07, 2.970514515254763e-06, 2.0996623106839252e-07, 4.0634793663230084e-07, 4.39910280647382e-07, 1.5647147222352942e-07, 0.00034827558556571603, 3.206553174095461e-07], "target_probs": 0.9892274141311646}}


{"result": {"time": "2021-02-21 13:08:22.862447", "n_pass": [244, 35, 15], "n_token": 156, "loss": [0.8379901647567749, 0.0073335194028913975], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def _resolve_datacenter(", "dc", ",", "pillarenv", ")", "\"\\n    If ``dc`` is a string - return it as is.\\n\\n    If it's a dict then sort it in descending order by key length and try\\n    to use keys as RegEx patterns to match against ``pillarenv``.\\n    The value for matched pattern should be a string (that can use\\n    ``str.format`` syntax togetehr with captured variables from pattern)\\n    pointing to targe data center to use.\\n\\n    If none patterns matched return ``None`` which meanse us datacenter of\\n    conencted Consul agent.\\n    \"", "#NEWLINE#", "log", ".", "debug", "(", "'Resolving Consul datacenter based on: {dc}'", ".", "format", "(", "dc", "=", "dc", ")", ")", "#NEWLINE#", "try", ":", "#NEWLINE#", "#INDENT#", "mappings", "=", "dc", ".", "items", "(", ")", "#NEWLINE#", "#UNINDENT#", "except", "AttributeError", ":", "#NEWLINE#", "format", "(", "dc", "=", "dc", ")", ")", "#NEWLINE#", "return", "dc", "#NEWLINE#", "#UNINDENT#", "log", ".", "=", "len", "(", "mappings", ")", ")", ")", "format", "(", "env", "=", "pillarenv", ")", ")", "#NEWLINE#", "sorted_mappings", "=", "sorted", "(", "mappings", ",", "(", "-", "len", "(", "m", "[", ")", "#NEWLINE#", "for", "(", "pattern", ",", "target", ")", "in", "dc", ":", "#NEWLINE#", "#INDENT#", "match", "=", "re", ".", "match", "(", "pattern", ",", "pillarenv", ")", "#NEWLINE#", "if", "match", ":", "#NEWLINE#", "(", "pattern", "=", "pattern", ")", ")", "#NEWLINE#", "result", "=", "target", ".", "format", "(", "**", "match", ".", "format", "(", "result", "=", "result", ")", ")", "#NEWLINE#", "return", "result", "#NEWLINE#", "#UNINDENT#", "(", "'None of following patterns matched pillarenv={env}: {lst}'", ".", "format", "(", "env", "=", "pillarenv", ",", "lst", "=", "', '", "repr", "(", "x", ")", "for", "x", "in", "mappings"]}}
{"position": {"error_location": 143, "repair_targets": [68], "repair_candidates": [2, 16, 18, 28, 41, 43, 48, 89, 84, 99, 109, 111, 26, 56, 72, 155, 68, 93, 97, 105, 122, 115, 126, 128, 133, 150, 153, 86, 117, 4, 64, 101, 143]}}
{"prediction": {"error_location": 0.4325791299343109, "repair_targets": [0.992693305015564], "repair_candidates": [0.00023724477796349674, 0.0012482376769185066, 0.0005252723931334913, 1.2007774330413667e-06, 0.003264680504798889, 1.1999605703749694e-05, 0.00013652748020831496, 2.1330333765945397e-05, 3.1177311029750854e-05, 0.0010720825521275401, 1.761754901963286e-05, 0.992693305015564, 8.685843567945994e-06, 0.0001247700274689123, 0.0002458734670653939, 3.1330259844253305e-06, 2.4458473490085453e-05, 7.259287940541981e-06, 3.6568314953910885e-07, 8.926002692533075e-08, 2.552162868596497e-06, 3.324247927594115e-06, 1.192910349345766e-05, 8.147511834977195e-06, 1.336946411356621e-06, 5.251358743407764e-07, 2.535955900384579e-06, 1.5866586977608677e-07, 3.2318547482645954e-07, 2.733326596171537e-07, 1.214002196547881e-07, 0.0002933607902377844, 2.295923735573524e-07], "target_probs": 0.992693305015564}}


{"result": {"time": "2021-02-21 13:08:23.156286", "n_pass": [246, 37, 16], "n_token": 153, "loss": [1.0491269826889038, 0.0077545722015202045], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def _resolve_datacenter(", "dc", ",", "pillarenv", ")", "\"\\n    If ``dc`` is a string - return it as is.\\n\\n    If it's a dict then sort it in descending order by key length and try\\n    to use keys as RegEx patterns to match against ``pillarenv``.\\n    The value for matched pattern should be a string (that can use\\n    ``str.format`` syntax togetehr with captured variables from pattern)\\n    pointing to targe data center to use.\\n\\n    If none patterns matched return ``None`` which meanse us datacenter of\\n    conencted Consul agent.\\n    \"", "#NEWLINE#", "log", "'Resolving Consul datacenter based on: {dc}'", ".", "format", "(", "dc", "=", "dc", ")", ")", "#NEWLINE#", "try", ":", "#NEWLINE#", "#INDENT#", "mappings", "=", "dc", ".", "items", "(", ")", "#NEWLINE#", "#UNINDENT#", "except", "AttributeError", ":", "#NEWLINE#", "format", "(", "dc", "=", "dc", ")", ")", "#NEWLINE#", "return", "dc", "#NEWLINE#", "#UNINDENT#", "log", ".", "=", "len", "(", "mappings", ")", ")", ")", "format", "(", "env", "=", "pillarenv", ")", ")", "#NEWLINE#", "sorted_mappings", "=", "sorted", "(", "mappings", ",", "(", "-", "len", "(", "m", "[", ")", "#NEWLINE#", "for", "(", "pattern", ",", "target", ")", "in", "dc", ":", "#NEWLINE#", "#INDENT#", "match", "=", "re", ".", "match", "(", "pattern", ",", "pillarenv", ")", "#NEWLINE#", "if", "match", ":", "#NEWLINE#", "(", "pattern", "=", "pattern", ")", ")", "#NEWLINE#", "result", "=", "target", ".", "format", "(", "**", "match", ".", "format", "(", "result", "=", "result", ")", ")", "#NEWLINE#", "return", "result", "#NEWLINE#", "#UNINDENT#", "(", "'None of following patterns matched pillarenv={env}: {lst}'", ".", "format", "(", "env", "=", "pillarenv", ",", "lst", "=", "', '", "repr", "(", "x", ")", "for", "x", "in", "mappings"]}}
{"position": {"error_location": 140, "repair_targets": [65], "repair_candidates": [2, 13, 15, 25, 38, 40, 45, 86, 81, 96, 106, 108, 23, 53, 69, 152, 65, 90, 94, 102, 119, 112, 123, 125, 130, 147, 150, 83, 114, 4, 61, 98, 140]}}
{"prediction": {"error_location": 0.35024338960647583, "repair_targets": [0.9922754168510437], "repair_candidates": [0.000247218762524426, 0.0004694651870522648, 0.0004409630782902241, 2.2071997136663413e-06, 0.004489644430577755, 1.2763302947860211e-05, 0.00022164474648889154, 1.1162276678078342e-05, 3.303159974166192e-05, 0.0012486072955653071, 1.0841903531400021e-05, 0.9922754168510437, 4.5646788748854306e-06, 0.00011914936476387084, 0.00021389489120338112, 2.2894932953931857e-06, 2.2073209038353525e-05, 5.982883976685116e-06, 3.017377991909598e-07, 6.976645750000898e-08, 1.995933871512534e-06, 2.0758723167091375e-06, 7.165431725297822e-06, 4.220824848744087e-06, 8.250550536104129e-07, 3.938259567348723e-07, 1.1369050980647444e-06, 9.768917408337074e-08, 2.127339797652894e-07, 2.2284147860318626e-07, 8.089455860726957e-08, 0.00015020434511825442, 1.434611647255224e-07], "target_probs": 0.9922754168510437}}


{"result": {"time": "2021-02-21 13:08:23.301520", "n_pass": [247, 38, 17], "n_token": 150, "loss": [1.0048850774765015, 0.008161740377545357], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def _resolve_datacenter(", "dc", ",", "pillarenv", ")", "\"\\n    If ``dc`` is a string - return it as is.\\n\\n    If it's a dict then sort it in descending order by key length and try\\n    to use keys as RegEx patterns to match against ``pillarenv``.\\n    The value for matched pattern should be a string (that can use\\n    ``str.format`` syntax togetehr with captured variables from pattern)\\n    pointing to targe data center to use.\\n\\n    If none patterns matched return ``None`` which meanse us datacenter of\\n    conencted Consul agent.\\n    \"", "#NEWLINE#", "log", "(", "dc", "=", "dc", ")", ")", "#NEWLINE#", "try", ":", "#NEWLINE#", "#INDENT#", "mappings", "=", "dc", ".", "items", "(", ")", "#NEWLINE#", "#UNINDENT#", "except", "AttributeError", ":", "#NEWLINE#", "format", "(", "dc", "=", "dc", ")", ")", "#NEWLINE#", "return", "dc", "#NEWLINE#", "#UNINDENT#", "log", ".", "=", "len", "(", "mappings", ")", ")", ")", "format", "(", "env", "=", "pillarenv", ")", ")", "#NEWLINE#", "sorted_mappings", "=", "sorted", "(", "mappings", ",", "(", "-", "len", "(", "m", "[", ")", "#NEWLINE#", "for", "(", "pattern", ",", "target", ")", "in", "dc", ":", "#NEWLINE#", "#INDENT#", "match", "=", "re", ".", "match", "(", "pattern", ",", "pillarenv", ")", "#NEWLINE#", "if", "match", ":", "#NEWLINE#", "(", "pattern", "=", "pattern", ")", ")", "#NEWLINE#", "result", "=", "target", ".", "format", "(", "**", "match", ".", "format", "(", "result", "=", "result", ")", ")", "#NEWLINE#", "return", "result", "#NEWLINE#", "#UNINDENT#", "(", "'None of following patterns matched pillarenv={env}: {lst}'", ".", "format", "(", "env", "=", "pillarenv", ",", "lst", "=", "', '", "repr", "(", "x", ")", "for", "x", "in", "mappings"]}}
{"position": {"error_location": 137, "repair_targets": [62], "repair_candidates": [2, 10, 12, 22, 35, 37, 42, 83, 78, 93, 103, 105, 20, 50, 66, 149, 62, 87, 91, 99, 116, 109, 120, 122, 127, 144, 147, 80, 111, 4, 58, 95, 137]}}
{"prediction": {"error_location": 0.3660867214202881, "repair_targets": [0.9918714761734009], "repair_candidates": [0.00023891916498541832, 0.0010695775272324681, 0.000584592460654676, 1.1363323210389353e-05, 0.004048112779855728, 1.699846143310424e-05, 0.00017937240772880614, 2.843773108907044e-05, 3.924664997612126e-05, 0.0010525741381570697, 2.2062391508370638e-05, 0.9918714761734009, 8.91026411409257e-06, 0.00015604399959556758, 0.0002713357098400593, 3.0795047223364236e-06, 3.1138195481617004e-05, 9.654518180468585e-06, 3.90945359640682e-07, 1.1497959917505796e-07, 2.494072987246909e-06, 3.544207402228494e-06, 1.2871591934526805e-05, 6.469058916991344e-06, 1.5490305713683483e-06, 6.87100907725835e-07, 3.007838131452445e-06, 1.6749723386055848e-07, 3.96112000089488e-07, 3.301780395759124e-07, 1.3517926333861396e-07, 0.00032475253101438284, 2.571610764334764e-07], "target_probs": 0.9918714761734009}}


{"result": {"time": "2021-02-21 13:08:23.447223", "n_pass": [250, 39, 18], "n_token": 147, "loss": [1.0176894664764404, 0.005280943587422371], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def _resolve_datacenter(", "dc", ",", "pillarenv", ")", "\"\\n    If ``dc`` is a string - return it as is.\\n\\n    If it's a dict then sort it in descending order by key length and try\\n    to use keys as RegEx patterns to match against ``pillarenv``.\\n    The value for matched pattern should be a string (that can use\\n    ``str.format`` syntax togetehr with captured variables from pattern)\\n    pointing to targe data center to use.\\n\\n    If none patterns matched return ``None`` which meanse us datacenter of\\n    conencted Consul agent.\\n    \"", "#NEWLINE#", "log", "(", "dc", "=", "dc", ")", ")", "#NEWLINE#", "#INDENT#", "mappings", "=", "dc", ".", "items", "(", ")", "#NEWLINE#", "#UNINDENT#", "except", "AttributeError", ":", "#NEWLINE#", "format", "(", "dc", "=", "dc", ")", ")", "#NEWLINE#", "return", "dc", "#NEWLINE#", "#UNINDENT#", "log", ".", "=", "len", "(", "mappings", ")", ")", ")", "format", "(", "env", "=", "pillarenv", ")", ")", "#NEWLINE#", "sorted_mappings", "=", "sorted", "(", "mappings", ",", "(", "-", "len", "(", "m", "[", ")", "#NEWLINE#", "for", "(", "pattern", ",", "target", ")", "in", "dc", ":", "#NEWLINE#", "#INDENT#", "match", "=", "re", ".", "match", "(", "pattern", ",", "pillarenv", ")", "#NEWLINE#", "if", "match", ":", "#NEWLINE#", "(", "pattern", "=", "pattern", ")", ")", "#NEWLINE#", "result", "=", "target", ".", "format", "(", "**", "match", ".", "format", "(", "result", "=", "result", ")", ")", "#NEWLINE#", "return", "result", "#NEWLINE#", "#UNINDENT#", "(", "'None of following patterns matched pillarenv={env}: {lst}'", ".", "format", "(", "env", "=", "pillarenv", ",", "lst", "=", "', '", "repr", "(", "x", ")", "for", "x", "in", "mappings"]}}
{"position": {"error_location": 134, "repair_targets": [59], "repair_candidates": [2, 10, 12, 19, 32, 34, 39, 80, 75, 90, 100, 102, 17, 47, 63, 146, 59, 84, 88, 96, 113, 106, 117, 119, 124, 141, 144, 77, 108, 4, 55, 92, 134]}}
{"prediction": {"error_location": 0.3614291250705719, "repair_targets": [0.9947329759597778], "repair_candidates": [0.0001334616681560874, 0.0006265617557801306, 0.00039677225868217647, 6.1722294049104676e-06, 0.0020430253352969885, 8.689822607266251e-06, 0.00015728193102404475, 1.6856187357916497e-05, 3.150112024741247e-05, 0.0010677310638129711, 1.7853279132395983e-05, 0.9947329759597778, 7.085882316459902e-06, 0.00013552280142903328, 0.0002702572091948241, 2.4853441118466435e-06, 2.6494593839743175e-05, 6.986245807638625e-06, 3.9563622067362303e-07, 9.167652592623199e-08, 2.6973166313837282e-06, 3.859308435494313e-06, 1.1768480362661649e-05, 5.395716470957268e-06, 1.4815257145528449e-06, 5.008990910937428e-07, 3.4357922231720295e-06, 1.4709506501731084e-07, 2.9979759119669325e-07, 2.8672710072896734e-07, 1.1297211699456966e-07, 0.0002816033083945513, 2.0755008733885916e-07], "target_probs": 0.9947329759597778}}


{"result": {"time": "2021-02-21 13:08:23.589941", "n_pass": [253, 40, 19], "n_token": 144, "loss": [0.9010581970214844, 0.004625690635293722], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def _resolve_datacenter(", "dc", ",", "pillarenv", ")", "\"\\n    If ``dc`` is a string - return it as is.\\n\\n    If it's a dict then sort it in descending order by key length and try\\n    to use keys as RegEx patterns to match against ``pillarenv``.\\n    The value for matched pattern should be a string (that can use\\n    ``str.format`` syntax togetehr with captured variables from pattern)\\n    pointing to targe data center to use.\\n\\n    If none patterns matched return ``None`` which meanse us datacenter of\\n    conencted Consul agent.\\n    \"", "#NEWLINE#", "log", "(", "dc", "=", "dc", ")", ")", "#NEWLINE#", "#INDENT#", "mappings", "=", "dc", ".", "#NEWLINE#", "#UNINDENT#", "except", "AttributeError", ":", "#NEWLINE#", "format", "(", "dc", "=", "dc", ")", ")", "#NEWLINE#", "return", "dc", "#NEWLINE#", "#UNINDENT#", "log", ".", "=", "len", "(", "mappings", ")", ")", ")", "format", "(", "env", "=", "pillarenv", ")", ")", "#NEWLINE#", "sorted_mappings", "=", "sorted", "(", "mappings", ",", "(", "-", "len", "(", "m", "[", ")", "#NEWLINE#", "for", "(", "pattern", ",", "target", ")", "in", "dc", ":", "#NEWLINE#", "#INDENT#", "match", "=", "re", ".", "match", "(", "pattern", ",", "pillarenv", ")", "#NEWLINE#", "if", "match", ":", "#NEWLINE#", "(", "pattern", "=", "pattern", ")", ")", "#NEWLINE#", "result", "=", "target", ".", "format", "(", "**", "match", ".", "format", "(", "result", "=", "result", ")", ")", "#NEWLINE#", "return", "result", "#NEWLINE#", "#UNINDENT#", "(", "'None of following patterns matched pillarenv={env}: {lst}'", ".", "format", "(", "env", "=", "pillarenv", ",", "lst", "=", "', '", "repr", "(", "x", ")", "for", "x", "in", "mappings"]}}
{"position": {"error_location": 131, "repair_targets": [56], "repair_candidates": [2, 10, 12, 19, 29, 31, 36, 77, 72, 87, 97, 99, 17, 44, 60, 143, 56, 81, 85, 93, 110, 103, 114, 116, 121, 138, 141, 74, 105, 4, 52, 89, 131]}}
{"prediction": {"error_location": 0.40613964200019836, "repair_targets": [0.9953849911689758], "repair_candidates": [0.0001731106749502942, 0.0008313334546983242, 0.00041502859676256776, 8.706056178198196e-06, 0.0010672680800780654, 7.023217767709866e-05, 0.0001831982226576656, 2.447553924866952e-05, 2.400099219812546e-05, 0.0009205910027958453, 2.8884785933769308e-05, 0.9953849911689758, 7.323925274249632e-06, 0.00013631403271574527, 0.000300966581562534, 2.7399789814808173e-06, 3.222220402676612e-05, 6.323922661977122e-06, 4.1864620925480267e-07, 1.0752442136663376e-07, 3.7924312437098706e-06, 4.704123057308607e-06, 1.3171190403227229e-05, 6.15148019278422e-06, 1.700525899650529e-06, 5.758966494795459e-07, 3.0800006243225653e-06, 1.6302371363963175e-07, 3.8482554032270855e-07, 3.3754730566215585e-07, 1.2946415495207475e-07, 0.00034735602093860507, 2.4141044718817284e-07], "target_probs": 0.9953849911689758}}


{"result": {"time": "2021-02-21 13:08:23.731830", "n_pass": [254, 41, 20], "n_token": 141, "loss": [0.9003738164901733, 0.017214760184288025], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def _resolve_datacenter(", "dc", ",", "pillarenv", ")", "\"\\n    If ``dc`` is a string - return it as is.\\n\\n    If it's a dict then sort it in descending order by key length and try\\n    to use keys as RegEx patterns to match against ``pillarenv``.\\n    The value for matched pattern should be a string (that can use\\n    ``str.format`` syntax togetehr with captured variables from pattern)\\n    pointing to targe data center to use.\\n\\n    If none patterns matched return ``None`` which meanse us datacenter of\\n    conencted Consul agent.\\n    \"", "#NEWLINE#", "log", "(", "dc", "=", "dc", ")", ")", "#NEWLINE#", "#INDENT#", "mappings", "=", "dc", ".", "AttributeError", ":", "#NEWLINE#", "format", "(", "dc", "=", "dc", ")", ")", "#NEWLINE#", "return", "dc", "#NEWLINE#", "#UNINDENT#", "log", ".", "=", "len", "(", "mappings", ")", ")", ")", "format", "(", "env", "=", "pillarenv", ")", ")", "#NEWLINE#", "sorted_mappings", "=", "sorted", "(", "mappings", ",", "(", "-", "len", "(", "m", "[", ")", "#NEWLINE#", "for", "(", "pattern", ",", "target", ")", "in", "dc", ":", "#NEWLINE#", "#INDENT#", "match", "=", "re", ".", "match", "(", "pattern", ",", "pillarenv", ")", "#NEWLINE#", "if", "match", ":", "#NEWLINE#", "(", "pattern", "=", "pattern", ")", ")", "#NEWLINE#", "result", "=", "target", ".", "format", "(", "**", "match", ".", "format", "(", "result", "=", "result", ")", ")", "#NEWLINE#", "return", "result", "#NEWLINE#", "#UNINDENT#", "(", "'None of following patterns matched pillarenv={env}: {lst}'", ".", "format", "(", "env", "=", "pillarenv", ",", "lst", "=", "', '", "repr", "(", "x", ")", "for", "x", "in", "mappings"]}}
{"position": {"error_location": 128, "repair_targets": [53], "repair_candidates": [2, 10, 12, 19, 26, 28, 33, 74, 69, 84, 94, 96, 17, 41, 57, 140, 53, 78, 82, 90, 107, 100, 111, 113, 118, 135, 138, 71, 102, 4, 49, 86, 128]}}
{"prediction": {"error_location": 0.40641772747039795, "repair_targets": [0.9829325675964355], "repair_candidates": [0.0006247904384508729, 0.0025793041568249464, 0.0006969021051190794, 8.013868864509277e-06, 0.010500898584723473, 5.270131441648118e-05, 0.00016867525118868798, 8.302296009787824e-06, 6.970168033149093e-05, 0.0017104261787608266, 4.2983298044418916e-05, 0.9829325675964355, 1.187364432553295e-05, 9.37396616791375e-05, 0.00014471447502728552, 2.338250624234206e-06, 2.983479862450622e-05, 5.651936589856632e-06, 2.923623299011524e-07, 9.809325973719751e-08, 4.165282916801516e-06, 5.238824996922631e-06, 1.326486835750984e-05, 5.584129212365951e-06, 1.6046427617766312e-06, 5.574931378760084e-07, 1.8539594748290256e-06, 1.214023797047048e-07, 2.9966625447741535e-07, 2.5951342763619323e-07, 1.1041802849831583e-07, 0.0002830158337019384, 2.4276161525449425e-07], "target_probs": 0.9829325675964355}}


{"result": {"time": "2021-02-21 13:08:23.871206", "n_pass": [255, 42, 21], "n_token": 138, "loss": [1.1665034294128418, 0.007793857716023922], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def _resolve_datacenter(", "dc", ",", "pillarenv", ")", "\"\\n    If ``dc`` is a string - return it as is.\\n\\n    If it's a dict then sort it in descending order by key length and try\\n    to use keys as RegEx patterns to match against ``pillarenv``.\\n    The value for matched pattern should be a string (that can use\\n    ``str.format`` syntax togetehr with captured variables from pattern)\\n    pointing to targe data center to use.\\n\\n    If none patterns matched return ``None`` which meanse us datacenter of\\n    conencted Consul agent.\\n    \"", "#NEWLINE#", "log", "(", "dc", "=", "dc", ")", ")", "#NEWLINE#", "#INDENT#", "mappings", "=", "dc", ".", "format", "(", "dc", "=", "dc", ")", ")", "#NEWLINE#", "return", "dc", "#NEWLINE#", "#UNINDENT#", "log", ".", "=", "len", "(", "mappings", ")", ")", ")", "format", "(", "env", "=", "pillarenv", ")", ")", "#NEWLINE#", "sorted_mappings", "=", "sorted", "(", "mappings", ",", "(", "-", "len", "(", "m", "[", ")", "#NEWLINE#", "for", "(", "pattern", ",", "target", ")", "in", "dc", ":", "#NEWLINE#", "#INDENT#", "match", "=", "re", ".", "match", "(", "pattern", ",", "pillarenv", ")", "#NEWLINE#", "if", "match", ":", "#NEWLINE#", "(", "pattern", "=", "pattern", ")", ")", "#NEWLINE#", "result", "=", "target", ".", "format", "(", "**", "match", ".", "format", "(", "result", "=", "result", ")", ")", "#NEWLINE#", "return", "result", "#NEWLINE#", "#UNINDENT#", "(", "'None of following patterns matched pillarenv={env}: {lst}'", ".", "format", "(", "env", "=", "pillarenv", ",", "lst", "=", "', '", "repr", "(", "x", ")", "for", "x", "in", "mappings"]}}
{"position": {"error_location": 125, "repair_targets": [50], "repair_candidates": [2, 10, 12, 19, 23, 25, 30, 71, 66, 81, 91, 93, 17, 38, 54, 137, 50, 75, 79, 87, 104, 97, 108, 110, 115, 132, 135, 68, 99, 4, 46, 83, 125]}}
{"prediction": {"error_location": 0.31145408749580383, "repair_targets": [0.9922364354133606], "repair_candidates": [0.00011448737495811656, 0.0006335337529890239, 0.00027037475956603885, 7.758687388559338e-06, 0.005046647973358631, 4.822424671147019e-06, 0.0003131814009975642, 6.879862667119596e-06, 1.448085004085442e-05, 0.000741147727239877, 4.962056664226111e-06, 0.9922364354133606, 6.347196631395491e-06, 0.00012007525219814852, 0.0001856023445725441, 1.952626689671888e-06, 2.1749798179371282e-05, 4.7980888666643295e-06, 2.4510899265806074e-07, 7.236907606511522e-08, 2.4106157070491463e-06, 4.110308964300202e-06, 8.689243259141222e-06, 4.468933184398338e-06, 1.1025483672710834e-06, 3.9917071603667864e-07, 1.2745766753141652e-06, 1.0616069090474411e-07, 2.4627658490317117e-07, 2.176409310550298e-07, 9.007369783375907e-08, 0.0002410818124189973, 1.7518320305498492e-07], "target_probs": 0.9922364354133606}}


{"result": {"time": "2021-02-21 13:08:24.282905", "n_pass": [262, 45, 22], "n_token": 135, "loss": [0.9315285086631775, 0.00574081763625145], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def _resolve_datacenter(", "dc", ",", "pillarenv", ")", "\"\\n    If ``dc`` is a string - return it as is.\\n\\n    If it's a dict then sort it in descending order by key length and try\\n    to use keys as RegEx patterns to match against ``pillarenv``.\\n    The value for matched pattern should be a string (that can use\\n    ``str.format`` syntax togetehr with captured variables from pattern)\\n    pointing to targe data center to use.\\n\\n    If none patterns matched return ``None`` which meanse us datacenter of\\n    conencted Consul agent.\\n    \"", "#NEWLINE#", "log", "(", "dc", "=", "dc", ")", ")", "#NEWLINE#", "#INDENT#", "mappings", "=", "dc", ".", "format", "(", "dc", "=", "dc", ")", ")", "#NEWLINE#", "return", "dc", "#NEWLINE#", "#UNINDENT#", "log", ".", "=", "len", "(", "mappings", "format", "(", "env", "=", "pillarenv", ")", ")", "#NEWLINE#", "sorted_mappings", "=", "sorted", "(", "mappings", ",", "(", "-", "len", "(", "m", "[", ")", "#NEWLINE#", "for", "(", "pattern", ",", "target", ")", "in", "dc", ":", "#NEWLINE#", "#INDENT#", "match", "=", "re", ".", "match", "(", "pattern", ",", "pillarenv", ")", "#NEWLINE#", "if", "match", ":", "#NEWLINE#", "(", "pattern", "=", "pattern", ")", ")", "#NEWLINE#", "result", "=", "target", ".", "format", "(", "**", "match", ".", "format", "(", "result", "=", "result", ")", ")", "#NEWLINE#", "return", "result", "#NEWLINE#", "#UNINDENT#", "(", "'None of following patterns matched pillarenv={env}: {lst}'", ".", "format", "(", "env", "=", "pillarenv", ",", "lst", "=", "', '", "repr", "(", "x", ")", "for", "x", "in", "mappings"]}}
{"position": {"error_location": 122, "repair_targets": [47], "repair_candidates": [2, 10, 12, 19, 23, 25, 30, 68, 63, 78, 88, 90, 17, 38, 51, 134, 47, 72, 76, 84, 101, 94, 105, 107, 112, 129, 132, 65, 96, 4, 43, 80, 122]}}
{"prediction": {"error_location": 0.39395108819007874, "repair_targets": [0.9942756295204163], "repair_candidates": [0.00011718412133632228, 0.0005511108902283013, 0.0002386171108810231, 4.177358277956955e-06, 0.003805893938988447, 6.12893427387462e-06, 0.00024365201534237713, 4.453178462426877e-06, 1.09826059997431e-05, 2.200508060923312e-05, 1.0311695405107457e-05, 0.9942756295204163, 8.733271897654049e-06, 0.0001413358113495633, 0.00029985629953444004, 2.317582811883767e-06, 2.3691183741902933e-05, 4.827103111892939e-06, 3.3845847724478517e-07, 9.534831235669117e-08, 2.0299801235523773e-06, 4.455421276361449e-06, 1.1468114280432928e-05, 4.384882231533993e-06, 1.1837664715130813e-06, 4.484607245558436e-07, 1.0816147550940514e-06, 1.0376249548471606e-07, 2.675685948361206e-07, 2.327755481701388e-07, 8.420849439971789e-08, 0.00020279930322431028, 1.4811813286996767e-07], "target_probs": 0.9942756295204163}}


{"result": {"time": "2021-02-21 13:08:25.094909", "n_pass": [289, 51, 23], "n_token": 132, "loss": [0.8727717399597168, 0.0068099587224423885], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def _resolve_datacenter(", "dc", ",", "pillarenv", ")", "(", "dc", "=", "dc", ")", ")", "#NEWLINE#", "#INDENT#", "mappings", "=", "dc", ".", "format", "(", "dc", "=", "dc", ")", ")", "#NEWLINE#", "return", "dc", "#NEWLINE#", "#UNINDENT#", "log", ".", "=", "len", "(", "mappings", "format", "(", "env", "=", "pillarenv", ")", ")", "#NEWLINE#", "sorted_mappings", "=", "sorted", "(", "mappings", ",", "(", "-", "len", "(", "m", "[", ")", "#NEWLINE#", "for", "(", "pattern", ",", "target", ")", "in", "dc", ":", "#NEWLINE#", "#INDENT#", "match", "=", "re", ".", "match", "(", "pattern", ",", "pillarenv", ")", "#NEWLINE#", "if", "match", ":", "#NEWLINE#", "(", "pattern", "=", "pattern", ")", ")", "#NEWLINE#", "result", "=", "target", ".", "format", "(", "**", "match", ".", "format", "(", "result", "=", "result", ")", ")", "#NEWLINE#", "return", "result", "#NEWLINE#", "#UNINDENT#", "(", "'None of following patterns matched pillarenv={env}: {lst}'", ".", "format", "(", "env", "=", "pillarenv", ",", "lst", "=", "', '", "repr", "(", "x", ")", "for", "x", "in", "mappings"]}}
{"position": {"error_location": 119, "repair_targets": [44], "repair_candidates": [2, 7, 9, 16, 20, 22, 27, 65, 60, 75, 85, 87, 14, 35, 48, 131, 44, 69, 73, 81, 98, 91, 102, 104, 109, 126, 129, 62, 93, 4, 40, 77, 119]}}
{"prediction": {"error_location": 0.4177919328212738, "repair_targets": [0.9932131767272949], "repair_candidates": [0.00024147797375917435, 0.00026976814842782915, 0.0005905768484808505, 9.55673476710217e-06, 0.0047212205827236176, 6.136431238701334e-06, 0.0002956545795314014, 1.976996372832218e-06, 1.0834549357241485e-05, 5.3758609283249825e-05, 1.5978897863533348e-05, 0.9932131767272949, 1.1716169865394477e-05, 0.0001397462037857622, 0.00017372085130773485, 1.8414243641018402e-06, 2.3999773475225084e-05, 5.892361514270306e-06, 3.193389090938581e-07, 8.942932794298031e-08, 2.825714318532846e-06, 3.2414279758086195e-06, 9.467597919865511e-06, 6.4569076130283065e-06, 1.1325541890983004e-06, 5.648496994581365e-07, 1.0452033620822476e-06, 1.1680725009455273e-07, 2.588886047760752e-07, 2.6722304369286576e-07, 7.786771050177776e-08, 0.00018691655714064837, 1.4730868258538976e-07], "target_probs": 0.9932131767272949}}


{"result": {"time": "2021-02-21 13:08:25.232778", "n_pass": [296, 52, 24], "n_token": 129, "loss": [0.8155287504196167, 0.017931170761585236], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def _resolve_datacenter(", "dc", ",", "pillarenv", ")", "(", "dc", "=", "dc", ")", ")", "#NEWLINE#", "#INDENT#", "mappings", "=", "dc", ".", "format", "(", "dc", "=", "dc", ")", "dc", "#NEWLINE#", "#UNINDENT#", "log", ".", "=", "len", "(", "mappings", "format", "(", "env", "=", "pillarenv", ")", ")", "#NEWLINE#", "sorted_mappings", "=", "sorted", "(", "mappings", ",", "(", "-", "len", "(", "m", "[", ")", "#NEWLINE#", "for", "(", "pattern", ",", "target", ")", "in", "dc", ":", "#NEWLINE#", "#INDENT#", "match", "=", "re", ".", "match", "(", "pattern", ",", "pillarenv", ")", "#NEWLINE#", "if", "match", ":", "#NEWLINE#", "(", "pattern", "=", "pattern", ")", ")", "#NEWLINE#", "result", "=", "target", ".", "format", "(", "**", "match", ".", "format", "(", "result", "=", "result", ")", ")", "#NEWLINE#", "return", "result", "#NEWLINE#", "#UNINDENT#", "(", "'None of following patterns matched pillarenv={env}: {lst}'", ".", "format", "(", "env", "=", "pillarenv", ",", "lst", "=", "', '", "repr", "(", "x", ")", "for", "x", "in", "mappings"]}}
{"position": {"error_location": 116, "repair_targets": [41], "repair_candidates": [2, 7, 9, 16, 20, 22, 24, 62, 57, 72, 82, 84, 14, 32, 45, 128, 41, 66, 70, 78, 95, 88, 99, 101, 106, 123, 126, 59, 90, 4, 37, 74, 116]}}
{"prediction": {"error_location": 0.4424053430557251, "repair_targets": [0.9822286367416382], "repair_candidates": [0.0023194390814751387, 0.002070346847176552, 0.003651698585599661, 0.00020242358732502908, 0.0018947020871564746, 9.999476787925232e-06, 0.005096935201436281, 1.017280465021031e-05, 8.866732969181612e-05, 0.00026332237757742405, 0.0004947700654156506, 0.9822286367416382, 0.00017138817929662764, 0.00023487616272177547, 0.00037242297548800707, 1.640660957491491e-05, 6.626951653743163e-05, 3.154829755658284e-05, 1.5073732129167183e-06, 5.154724362910201e-07, 1.268162395717809e-05, 1.1276367331447545e-05, 4.818244997295551e-05, 1.9343438907526433e-05, 5.849956778547494e-06, 3.1722784115117975e-06, 3.983218448411208e-06, 5.154291216058482e-07, 1.2727682587865274e-06, 1.3953585948911496e-06, 3.8653519141007564e-07, 0.0006651074509136379, 6.352730110847915e-07], "target_probs": 0.9822286367416382}}


{"result": {"time": "2021-02-21 13:08:25.366711", "n_pass": [298, 53, 25], "n_token": 126, "loss": [0.83451908826828, 0.013873828575015068], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def _resolve_datacenter(", "dc", ",", "pillarenv", ")", "(", "dc", "=", "dc", ")", ")", "#NEWLINE#", "#INDENT#", "mappings", "=", "dc", ".", "format", "(", "dc", "=", "dc", ")", "dc", "#NEWLINE#", "#UNINDENT#", "len", "(", "mappings", "format", "(", "env", "=", "pillarenv", ")", ")", "#NEWLINE#", "sorted_mappings", "=", "sorted", "(", "mappings", ",", "(", "-", "len", "(", "m", "[", ")", "#NEWLINE#", "for", "(", "pattern", ",", "target", ")", "in", "dc", ":", "#NEWLINE#", "#INDENT#", "match", "=", "re", ".", "match", "(", "pattern", ",", "pillarenv", ")", "#NEWLINE#", "if", "match", ":", "#NEWLINE#", "(", "pattern", "=", "pattern", ")", ")", "#NEWLINE#", "result", "=", "target", ".", "format", "(", "**", "match", ".", "format", "(", "result", "=", "result", ")", ")", "#NEWLINE#", "return", "result", "#NEWLINE#", "#UNINDENT#", "(", "'None of following patterns matched pillarenv={env}: {lst}'", ".", "format", "(", "env", "=", "pillarenv", ",", "lst", "=", "', '", "repr", "(", "x", ")", "for", "x", "in", "mappings"]}}
{"position": {"error_location": 113, "repair_targets": [38], "repair_candidates": [2, 7, 9, 16, 20, 22, 24, 59, 54, 69, 79, 81, 14, 29, 42, 125, 38, 63, 67, 75, 92, 85, 96, 98, 103, 120, 123, 56, 87, 4, 34, 71, 113]}}
{"prediction": {"error_location": 0.4340831935405731, "repair_targets": [0.986221969127655], "repair_candidates": [0.0017326850211247802, 0.001707373303361237, 0.0032607954926788807, 0.0004453577857930213, 0.001134486636146903, 5.22852906215121e-06, 0.003635155502706766, 8.415052434429526e-06, 3.3351636375300586e-05, 6.586086328752572e-06, 0.00039124826434999704, 0.986221969127655, 0.00015445718599949032, 0.00023117860837373883, 0.0002931854105554521, 1.2214916750963312e-05, 5.648853402817622e-05, 2.3791530111338943e-05, 1.444161625840934e-06, 3.946661308873445e-07, 1.0405214197817259e-05, 1.0212078450422268e-05, 4.083292878931388e-05, 1.3000628314330243e-05, 3.936664143111557e-06, 2.386587539149332e-06, 2.68588041762996e-06, 5.234783202467952e-07, 1.0265739547321573e-06, 1.1391630323487334e-06, 3.4038248486467637e-07, 0.0005571555811911821, 5.368958682083758e-07], "target_probs": 0.986221969127655}}


{"result": {"time": "2021-02-21 13:08:25.498105", "n_pass": [300, 54, 26], "n_token": 122, "loss": [0.5434436202049255, 0.004454086534678936], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def _resolve_datacenter(", "dc", ",", "pillarenv", ")", "(", "dc", "=", "dc", ")", ")", "#NEWLINE#", "#INDENT#", "mappings", "=", "dc", ".", "format", "(", "dc", "=", "dc", ")", "dc", "#NEWLINE#", "#UNINDENT#", "len", "(", "mappings", "pillarenv", ")", ")", "#NEWLINE#", "sorted_mappings", "=", "sorted", "(", "mappings", ",", "(", "-", "len", "(", "m", "[", ")", "#NEWLINE#", "for", "(", "pattern", ",", "target", ")", "in", "dc", ":", "#NEWLINE#", "#INDENT#", "match", "=", "re", ".", "match", "(", "pattern", ",", "pillarenv", ")", "#NEWLINE#", "if", "match", ":", "#NEWLINE#", "(", "pattern", "=", "pattern", ")", ")", "#NEWLINE#", "result", "=", "target", ".", "format", "(", "**", "match", ".", "format", "(", "result", "=", "result", ")", ")", "#NEWLINE#", "return", "result", "#NEWLINE#", "#UNINDENT#", "(", "'None of following patterns matched pillarenv={env}: {lst}'", ".", "format", "(", "env", "=", "pillarenv", ",", "lst", "=", "', '", "repr", "(", "x", ")", "for", "x", "in", "mappings"]}}
{"position": {"error_location": 109, "repair_targets": [34], "repair_candidates": [2, 7, 9, 16, 20, 22, 24, 55, 50, 65, 75, 77, 14, 29, 38, 121, 34, 59, 63, 71, 88, 81, 92, 94, 99, 116, 119, 52, 83, 4, 30, 67, 109]}}
{"prediction": {"error_location": 0.5807449221611023, "repair_targets": [0.9955558180809021], "repair_candidates": [0.0002713659487199038, 0.0003580821503419429, 0.0007250544731505215, 0.00013892278366256505, 0.0003458610735833645, 1.2097973467461998e-06, 0.0004310784861445427, 2.984914090120583e-06, 2.3667884306632914e-05, 2.362911618547514e-05, 2.816120468196459e-05, 0.9955558180809021, 3.0737752240384e-05, 0.0004329838848207146, 0.0006305952556431293, 7.840747457521502e-06, 7.877701864344999e-05, 1.3231418961368036e-05, 1.2711934687104076e-06, 2.5895013777699205e-07, 9.057322131411638e-06, 1.1423004252719693e-05, 5.053397762821987e-05, 1.6897954992600717e-05, 2.502117695257766e-06, 1.4929219105397351e-06, 8.868882105161902e-06, 2.83048734672775e-07, 7.257506808855396e-07, 7.127546837182308e-07, 2.2914467479040468e-07, 0.0007952176965773106, 3.941054558254109e-07], "target_probs": 0.9955558180809021}}


{"result": {"time": "2021-02-21 13:08:25.628748", "n_pass": [304, 55, 27], "n_token": 118, "loss": [0.8181831240653992, 0.0017832315061241388], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def _resolve_datacenter(", "dc", ",", "pillarenv", ")", "(", "dc", "=", "dc", ")", ")", "#NEWLINE#", "#INDENT#", "mappings", "=", "dc", ".", "format", "(", "dc", "=", "dc", ")", "dc", "#NEWLINE#", "#UNINDENT#", "len", "(", "mappings", "pillarenv", ")", ")", "#NEWLINE#", "sorted_mappings", "=", "sorted", "(", "mappings", ",", "(", "-", ")", "#NEWLINE#", "for", "(", "pattern", ",", "target", ")", "in", "dc", ":", "#NEWLINE#", "#INDENT#", "match", "=", "re", ".", "match", "(", "pattern", ",", "pillarenv", ")", "#NEWLINE#", "if", "match", ":", "#NEWLINE#", "(", "pattern", "=", "pattern", ")", ")", "#NEWLINE#", "result", "=", "target", ".", "format", "(", "**", "match", ".", "format", "(", "result", "=", "result", ")", ")", "#NEWLINE#", "return", "result", "#NEWLINE#", "#UNINDENT#", "(", "'None of following patterns matched pillarenv={env}: {lst}'", ".", "format", "(", "env", "=", "pillarenv", ",", "lst", "=", "', '", "repr", "(", "x", ")", "for", "x", "in", "mappings"]}}
{"position": {"error_location": 105, "repair_targets": [34], "repair_candidates": [2, 7, 9, 16, 20, 22, 24, 51, 46, 61, 71, 73, 14, 29, 38, 117, 34, 55, 59, 67, 84, 77, 88, 90, 95, 112, 115, 48, 79, 4, 30, 63, 105]}}
{"prediction": {"error_location": 0.4412325322628021, "repair_targets": [0.9982183575630188], "repair_candidates": [0.00012587975652422756, 0.0001631755440030247, 0.0003246139385737479, 5.9738416894106194e-05, 0.00013962497177999467, 5.186847715776821e-07, 0.00018813193310052156, 1.07363962342788e-06, 8.182605597539805e-06, 8.50480682856869e-06, 1.2426799912645947e-05, 0.9982183575630188, 8.538721885997802e-06, 0.0001857504976214841, 0.0003463161119725555, 2.8525732886919286e-06, 2.2003083358868025e-05, 4.920797437080182e-06, 4.4657514308710233e-07, 8.66191172121944e-08, 1.7295150200880016e-06, 2.372709786868654e-06, 9.764722562977113e-06, 2.8831259442085866e-06, 7.428725439240225e-07, 3.8865113083375036e-07, 1.0201317763858242e-06, 8.727400313546241e-08, 1.9992921806988306e-07, 1.6776139943885937e-07, 5.933616264996999e-08, 0.0001592107000760734, 9.47568992160086e-08], "target_probs": 0.9982183575630188}}


{"result": {"time": "2021-02-21 13:08:26.256515", "n_pass": [402, 60, 28], "n_token": 116, "loss": [0.9616824984550476, 0.002581587992608547], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def _resolve_datacenter(", "dc", ",", "pillarenv", ")", "(", "dc", "=", "dc", ")", ")", "#NEWLINE#", "#INDENT#", "mappings", "=", "dc", ".", "format", "(", "dc", "=", "dc", ")", "dc", "#NEWLINE#", "#UNINDENT#", "len", "(", "mappings", "pillarenv", ")", ")", "#NEWLINE#", "sorted_mappings", "=", "sorted", "(", "mappings", ",", "(", "-", ")", "#NEWLINE#", "pattern", ",", "target", ")", "in", "dc", ":", "#NEWLINE#", "#INDENT#", "match", "=", "re", ".", "match", "(", "pattern", ",", "pillarenv", ")", "#NEWLINE#", "if", "match", ":", "#NEWLINE#", "(", "pattern", "=", "pattern", ")", ")", "#NEWLINE#", "result", "=", "target", ".", "format", "(", "**", "match", ".", "format", "(", "result", "=", "result", ")", ")", "#NEWLINE#", "return", "result", "#NEWLINE#", "#UNINDENT#", "(", "'None of following patterns matched pillarenv={env}: {lst}'", ".", "format", "(", "env", "=", "pillarenv", ",", "lst", "=", "', '", "repr", "(", "x", ")", "for", "x", "in", "mappings"]}}
{"position": {"error_location": 103, "repair_targets": [34], "repair_candidates": [2, 7, 9, 16, 20, 22, 24, 49, 44, 59, 69, 71, 14, 29, 38, 115, 34, 53, 57, 65, 82, 75, 86, 88, 93, 110, 113, 46, 77, 4, 30, 61, 103]}}
{"prediction": {"error_location": 0.3822491765022278, "repair_targets": [0.9974217414855957], "repair_candidates": [0.00015170835831668228, 0.00019766697369050235, 0.0004128723230678588, 7.35394423827529e-05, 0.00019054260337725282, 6.770752065676788e-07, 0.00025024436763487756, 1.722050910757389e-06, 1.3673963621840812e-05, 1.2496870112954639e-05, 1.7708338418742642e-05, 0.9974217414855957, 1.7580807252670638e-05, 0.00026954433997161686, 0.0007319889264181256, 1.0029600161942653e-05, 9.565736399963498e-05, 2.7599518944043666e-05, 1.464890260649554e-06, 2.706448185563204e-07, 4.9126892918138765e-06, 2.1413902686617803e-06, 1.3275321180117317e-05, 5.170862550585298e-06, 1.0754697541415226e-06, 4.513386784310569e-07, 1.8054994370686472e-06, 2.473983613526798e-07, 2.784313437587116e-07, 2.8706867283290194e-07, 5.4488197065438726e-08, 7.152874604798853e-05, 8.492745706689675e-08], "target_probs": 0.9974217414855957}}


{"result": {"time": "2021-02-21 13:08:26.380208", "n_pass": [406, 61, 29], "n_token": 114, "loss": [0.9194645881652832, 0.005973322317004204], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def _resolve_datacenter(", "dc", ",", "pillarenv", ")", "(", "dc", "=", "dc", ")", ")", "#NEWLINE#", "#INDENT#", "mappings", "=", "dc", ".", "format", "(", "dc", "=", "dc", ")", "dc", "#NEWLINE#", "#UNINDENT#", "len", "(", "mappings", "pillarenv", ")", ")", "#NEWLINE#", "sorted_mappings", "=", "sorted", "(", "mappings", ",", "(", "-", ")", "#NEWLINE#", "pattern", ",", "target", ")", "in", "dc", "#INDENT#", "match", "=", "re", ".", "match", "(", "pattern", ",", "pillarenv", ")", "#NEWLINE#", "if", "match", ":", "#NEWLINE#", "(", "pattern", "=", "pattern", ")", ")", "#NEWLINE#", "result", "=", "target", ".", "format", "(", "**", "match", ".", "format", "(", "result", "=", "result", ")", ")", "#NEWLINE#", "return", "result", "#NEWLINE#", "#UNINDENT#", "(", "'None of following patterns matched pillarenv={env}: {lst}'", ".", "format", "(", "env", "=", "pillarenv", ",", "lst", "=", "', '", "repr", "(", "x", ")", "for", "x", "in", "mappings"]}}
{"position": {"error_location": 101, "repair_targets": [34], "repair_candidates": [2, 7, 9, 16, 20, 22, 24, 49, 44, 57, 67, 69, 14, 29, 38, 113, 34, 51, 55, 63, 80, 73, 84, 86, 91, 108, 111, 46, 75, 4, 30, 59, 101]}}
{"prediction": {"error_location": 0.3987325131893158, "repair_targets": [0.9940444827079773], "repair_candidates": [0.0003709981683641672, 0.000461544725112617, 0.0010970444418489933, 0.0002083734580082819, 0.000451350788353011, 1.6160662426045747e-06, 0.0006463115569204092, 3.997422936663497e-06, 3.104197094216943e-05, 2.1305493646650575e-05, 2.2078236725064926e-05, 0.9940444827079773, 5.3361021855380386e-05, 0.0004766152997035533, 0.001682942034676671, 4.225655357004143e-05, 7.495408499380574e-05, 0.00010404914792161435, 6.3793286244617775e-06, 7.43191662877507e-07, 1.4137282050796784e-05, 4.0778127186058555e-06, 2.245958603452891e-05, 1.0205685612163506e-05, 2.2105953121354105e-06, 9.074029776456882e-07, 3.6341214126878185e-06, 4.5410385496325034e-07, 4.955230110681441e-07, 5.187225156078057e-07, 1.08846357704806e-07, 0.00013922175276093185, 1.5977040845882584e-07], "target_probs": 0.9940444827079773}}


{"result": {"time": "2021-02-21 13:08:26.503253", "n_pass": [408, 62, 30], "n_token": 112, "loss": [0.45797377824783325, 0.09866509586572647], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def _resolve_datacenter(", "dc", ",", "pillarenv", ")", "(", "dc", "=", "dc", ")", ")", "#NEWLINE#", "#INDENT#", "mappings", "=", "dc", ".", "format", "(", "dc", "=", "dc", ")", "dc", "#NEWLINE#", "#UNINDENT#", "len", "(", "mappings", "pillarenv", ")", ")", "#NEWLINE#", "sorted_mappings", "=", "sorted", "(", "mappings", ",", "(", "-", ")", "#NEWLINE#", "pattern", ",", "target", ")", "in", "dc", "#INDENT#", "match", ".", "match", "(", "pattern", ",", "pillarenv", ")", "#NEWLINE#", "if", "match", ":", "#NEWLINE#", "(", "pattern", "=", "pattern", ")", ")", "#NEWLINE#", "result", "=", "target", ".", "format", "(", "**", "match", ".", "format", "(", "result", "=", "result", ")", ")", "#NEWLINE#", "return", "result", "#NEWLINE#", "#UNINDENT#", "(", "'None of following patterns matched pillarenv={env}: {lst}'", ".", "format", "(", "env", "=", "pillarenv", ",", "lst", "=", "', '", "repr", "(", "x", ")", "for", "x", "in", "mappings"]}}
{"position": {"error_location": 99, "repair_targets": [34], "repair_candidates": [2, 7, 9, 16, 20, 22, 24, 49, 44, 55, 65, 67, 14, 29, 38, 111, 34, 51, 53, 61, 78, 71, 82, 84, 89, 106, 109, 46, 73, 4, 30, 57, 99]}}
{"prediction": {"error_location": 0.6325640678405762, "repair_targets": [0.9060460925102234], "repair_candidates": [0.0033727914560586214, 0.0037132068537175655, 0.010583133436739445, 0.002189332153648138, 0.004944954067468643, 1.7864769688458182e-05, 0.0065946560353040695, 5.415136183728464e-05, 0.0003715799830388278, 0.0001232859503943473, 8.700910984771326e-05, 0.9060460925102234, 0.0007408897508867085, 0.01542089693248272, 0.034934353083372116, 0.000917461235076189, 2.460507857904304e-06, 0.0008669366943649948, 0.0002941799466498196, 3.2178093533730134e-05, 0.0005668079829774797, 0.00015284490655176342, 0.0008506634039804339, 0.0002563364105299115, 5.175942715140991e-05, 2.2081934730522335e-05, 0.00012265759869478643, 4.174856258032378e-06, 9.16155750019243e-06, 1.2765317478624638e-05, 3.4255929222126724e-06, 0.00663547869771719, 4.4302569222054444e-06], "target_probs": 0.9060460925102234}}


{"result": {"time": "2021-02-21 13:08:26.624246", "n_pass": [412, 63, 31], "n_token": 110, "loss": [0.3827298581600189, 0.3479159474372864], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def _resolve_datacenter(", "dc", ",", "pillarenv", ")", "(", "dc", "=", "dc", ")", ")", "#NEWLINE#", "#INDENT#", "mappings", "=", "dc", ".", "format", "(", "dc", "=", "dc", ")", "dc", "#NEWLINE#", "#UNINDENT#", "len", "(", "mappings", "pillarenv", ")", ")", "#NEWLINE#", "sorted_mappings", "=", "sorted", "(", "mappings", ",", "(", "-", ")", "#NEWLINE#", "pattern", ",", "target", ")", "in", "dc", "#INDENT#", "match", ".", "match", "(", "pattern", ",", "pillarenv", "if", "match", ":", "#NEWLINE#", "(", "pattern", "=", "pattern", ")", ")", "#NEWLINE#", "result", "=", "target", ".", "format", "(", "**", "match", ".", "format", "(", "result", "=", "result", ")", ")", "#NEWLINE#", "return", "result", "#NEWLINE#", "#UNINDENT#", "(", "'None of following patterns matched pillarenv={env}: {lst}'", ".", "format", "(", "env", "=", "pillarenv", ",", "lst", "=", "', '", "repr", "(", "x", ")", "for", "x", "in", "mappings"]}}
{"position": {"error_location": 97, "repair_targets": [34], "repair_candidates": [2, 7, 9, 16, 20, 22, 24, 49, 44, 55, 63, 65, 14, 29, 38, 109, 34, 51, 53, 59, 76, 69, 80, 82, 87, 104, 107, 46, 71, 4, 30, 57, 97]}}
{"prediction": {"error_location": 0.6819970607757568, "repair_targets": [0.7061582207679749], "repair_candidates": [0.009029566310346127, 0.008763439953327179, 0.02743689715862274, 0.0065689049661159515, 0.015551578253507614, 5.093819345347583e-05, 0.01664966531097889, 0.0001904909295262769, 0.0011245962232351303, 0.00033759934012778103, 0.00019539736967999488, 0.7061582207679749, 0.0028274315409362316, 0.04587709531188011, 0.11727698892354965, 0.0032655331306159496, 7.636813279532362e-06, 0.0020569157786667347, 0.0004893128643743694, 2.5296778403571807e-05, 7.497418846469373e-05, 0.0011491919867694378, 0.004473633598536253, 0.0004564613336697221, 0.00011580831051105633, 6.710939487675205e-05, 0.0003035655536223203, 7.927650585770607e-06, 2.3139607947086915e-05, 4.044603701913729e-05, 1.3290556125866715e-05, 0.029374361038208008, 1.654776315263007e-05], "target_probs": 0.7061582207679749}}


{"result": {"time": "2021-02-21 13:08:26.744698", "n_pass": [414, 64, 32], "n_token": 108, "loss": [0.3956933915615082, 0.030951375141739845], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def _resolve_datacenter(", "dc", ",", "pillarenv", ")", "(", "dc", "=", "dc", ")", ")", "#NEWLINE#", "#INDENT#", "mappings", "=", "dc", ".", "format", "(", "dc", "=", "dc", ")", "dc", "#NEWLINE#", "#UNINDENT#", "len", "(", "mappings", "pillarenv", ")", ")", "#NEWLINE#", "sorted_mappings", "=", "sorted", "(", "mappings", ",", "(", "-", ")", "#NEWLINE#", "pattern", ",", "target", ")", "in", "dc", "#INDENT#", "match", ".", "match", "(", "pattern", ",", "pillarenv", "if", "match", "(", "pattern", "=", "pattern", ")", ")", "#NEWLINE#", "result", "=", "target", ".", "format", "(", "**", "match", ".", "format", "(", "result", "=", "result", ")", ")", "#NEWLINE#", "return", "result", "#NEWLINE#", "#UNINDENT#", "(", "'None of following patterns matched pillarenv={env}: {lst}'", ".", "format", "(", "env", "=", "pillarenv", ",", "lst", "=", "', '", "repr", "(", "x", ")", "for", "x", "in", "mappings"]}}
{"position": {"error_location": 95, "repair_targets": [34], "repair_candidates": [2, 7, 9, 16, 20, 22, 24, 49, 44, 55, 61, 63, 14, 29, 38, 107, 34, 51, 53, 59, 74, 67, 78, 80, 85, 102, 105, 46, 69, 4, 30, 57, 95]}}
{"prediction": {"error_location": 0.673213005065918, "repair_targets": [0.9695227146148682], "repair_candidates": [0.0012271404266357422, 0.001418240019120276, 0.004026100970804691, 0.0007619553944095969, 0.0015155221335589886, 6.079334980313433e-06, 0.0024761368986219168, 1.669545963522978e-05, 0.00011404467659303918, 4.169848398305476e-05, 3.187072798027657e-05, 0.9695227146148682, 0.00023583912116009742, 0.004637714475393295, 0.011468157172203064, 0.0001626291632419452, 9.46824115999334e-07, 0.00024767499417066574, 3.2930209272308275e-05, 8.132574293995276e-06, 3.16901205223985e-05, 0.00018726036068983376, 0.0001643976429477334, 6.46034677629359e-05, 1.1022057151421905e-05, 4.8403649088868406e-06, 5.6570897868368775e-05, 2.168339960917365e-06, 2.5343258585053263e-06, 2.47240723183495e-06, 5.071170789960888e-07, 0.0015185994561761618, 1.094945673685288e-06], "target_probs": 0.9695227146148682}}


{"result": {"time": "2021-02-21 13:08:26.865401", "n_pass": [417, 65, 33], "n_token": 106, "loss": [0.5237587690353394, 0.032102543860673904], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def _resolve_datacenter(", "dc", ",", "pillarenv", ")", "(", "dc", "=", "dc", ")", ")", "#NEWLINE#", "#INDENT#", "mappings", "=", "dc", ".", "format", "(", "dc", "=", "dc", ")", "dc", "#NEWLINE#", "#UNINDENT#", "len", "(", "mappings", "pillarenv", ")", ")", "#NEWLINE#", "sorted_mappings", "=", "sorted", "(", "mappings", ",", "(", "-", ")", "#NEWLINE#", "pattern", ",", "target", ")", "in", "dc", "#INDENT#", "match", ".", "match", "(", "pattern", ",", "pillarenv", "if", "match", "(", "pattern", "=", "pattern", "#NEWLINE#", "result", "=", "target", ".", "format", "(", "**", "match", ".", "format", "(", "result", "=", "result", ")", ")", "#NEWLINE#", "return", "result", "#NEWLINE#", "#UNINDENT#", "(", "'None of following patterns matched pillarenv={env}: {lst}'", ".", "format", "(", "env", "=", "pillarenv", ",", "lst", "=", "', '", "repr", "(", "x", ")", "for", "x", "in", "mappings"]}}
{"position": {"error_location": 93, "repair_targets": [34], "repair_candidates": [2, 7, 9, 16, 20, 22, 24, 49, 44, 55, 61, 63, 14, 29, 38, 105, 34, 51, 53, 59, 72, 65, 76, 78, 83, 100, 103, 46, 67, 4, 30, 57, 93]}}
{"prediction": {"error_location": 0.5922899842262268, "repair_targets": [0.9684072732925415], "repair_candidates": [0.0013830874813720584, 0.0015960480086505413, 0.0044647869653999805, 0.0008457023068331182, 0.0015751513419672847, 6.548187684529694e-06, 0.002804586198180914, 1.7889691662276164e-05, 0.0001210061163874343, 4.425495717441663e-05, 3.39705657097511e-05, 0.9684072732925415, 0.00026353271096013486, 0.0035029009450227022, 0.013085365295410156, 0.00015035917749628425, 8.231706374317582e-07, 0.00022077816538512707, 3.0786290153628215e-05, 6.615709480684018e-06, 3.55779702658765e-05, 0.00019095282186754048, 5.3038776968605816e-05, 0.0001664887968217954, 6.591274541278835e-06, 5.022906407248229e-06, 2.1387402739492245e-05, 2.0253869479347486e-06, 2.6666127723729005e-06, 2.4370885967073264e-06, 4.78667118386511e-07, 0.0009509494411759079, 8.764762355895073e-07], "target_probs": 0.9684072732925415}}


{"result": {"time": "2021-02-21 13:08:26.983073", "n_pass": [420, 66, 34], "n_token": 104, "loss": [0.49456822872161865, 0.03044215776026249], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def _resolve_datacenter(", "dc", ",", "pillarenv", ")", "(", "dc", "=", "dc", ")", ")", "#NEWLINE#", "#INDENT#", "mappings", "=", "dc", ".", "format", "(", "dc", "=", "dc", ")", "dc", "#NEWLINE#", "#UNINDENT#", "len", "(", "mappings", "pillarenv", ")", ")", "#NEWLINE#", "sorted_mappings", "=", "sorted", "(", "mappings", ",", "(", "-", ")", "#NEWLINE#", "pattern", ",", "target", ")", "in", "dc", "#INDENT#", "match", ".", "match", "(", "pattern", ",", "pillarenv", "if", "match", "(", "pattern", "=", "pattern", "#NEWLINE#", "result", "=", "target", "(", "**", "match", ".", "format", "(", "result", "=", "result", ")", ")", "#NEWLINE#", "return", "result", "#NEWLINE#", "#UNINDENT#", "(", "'None of following patterns matched pillarenv={env}: {lst}'", ".", "format", "(", "env", "=", "pillarenv", ",", "lst", "=", "', '", "repr", "(", "x", ")", "for", "x", "in", "mappings"]}}
{"position": {"error_location": 91, "repair_targets": [34], "repair_candidates": [2, 7, 9, 16, 20, 22, 24, 49, 44, 55, 61, 63, 14, 29, 38, 103, 34, 51, 53, 59, 70, 65, 74, 76, 81, 98, 101, 46, 67, 4, 30, 57, 91]}}
{"prediction": {"error_location": 0.6098341345787048, "repair_targets": [0.9700165390968323], "repair_candidates": [0.0013256763340905309, 0.0015103566693142056, 0.004266300238668919, 0.0007821132894605398, 0.0014909409219399095, 6.253033916436834e-06, 0.0027442127466201782, 1.6622314433334395e-05, 0.00011249640374444425, 4.208288373774849e-05, 3.278844087617472e-05, 0.9700165390968323, 0.0002570933720562607, 0.0038068860303610563, 0.011312825605273247, 0.00013409467646852136, 8.111880447358999e-07, 0.00029614722006954253, 3.675669722724706e-05, 6.356619451253209e-06, 4.7610355977667496e-05, 0.0003891653905157, 4.1247050830861554e-05, 0.000180692775757052, 9.678983769845217e-05, 5.188784598431084e-06, 1.919628084579017e-05, 2.1795851807837607e-06, 2.9986308618390467e-06, 2.3230390979733784e-06, 4.706074321347842e-07, 0.0010138797806575894, 8.71773011112964e-07], "target_probs": 0.9700165390968323}}


{"result": {"time": "2021-02-21 13:08:27.100430", "n_pass": [421, 67, 35], "n_token": 102, "loss": [0.41269248723983765, 0.03159575164318085], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def _resolve_datacenter(", "dc", ",", "pillarenv", ")", "(", "dc", "=", "dc", ")", ")", "#NEWLINE#", "#INDENT#", "mappings", "=", "dc", ".", "format", "(", "dc", "=", "dc", ")", "dc", "#NEWLINE#", "#UNINDENT#", "len", "(", "mappings", "pillarenv", ")", ")", "#NEWLINE#", "sorted_mappings", "=", "sorted", "(", "mappings", ",", "(", "-", ")", "#NEWLINE#", "pattern", ",", "target", ")", "in", "dc", "#INDENT#", "match", ".", "match", "(", "pattern", ",", "pillarenv", "if", "match", "(", "pattern", "=", "pattern", "#NEWLINE#", "result", "=", "target", "match", ".", "format", "(", "result", "=", "result", ")", ")", "#NEWLINE#", "return", "result", "#NEWLINE#", "#UNINDENT#", "(", "'None of following patterns matched pillarenv={env}: {lst}'", ".", "format", "(", "env", "=", "pillarenv", ",", "lst", "=", "', '", "repr", "(", "x", ")", "for", "x", "in", "mappings"]}}
{"position": {"error_location": 89, "repair_targets": [34], "repair_candidates": [2, 7, 9, 16, 20, 22, 24, 49, 44, 55, 61, 63, 14, 29, 38, 101, 34, 51, 53, 59, 68, 65, 72, 74, 79, 96, 99, 46, 67, 4, 30, 57, 89]}}
{"prediction": {"error_location": 0.6618657112121582, "repair_targets": [0.9688981771469116], "repair_candidates": [0.0014330333797261119, 0.001542573212645948, 0.004571210592985153, 0.000806395779363811, 0.0016654960345476866, 6.91090053805965e-06, 0.003157918807119131, 1.83449883479625e-05, 0.00012551224790513515, 4.7780129534658045e-05, 3.7804980820510536e-05, 0.9688981771469116, 0.0003531294933054596, 0.004105862695723772, 0.009759289212524891, 0.00015252167941071093, 7.748456596345932e-07, 0.00032505017588846385, 4.323083703638986e-05, 6.737714556948049e-06, 5.028331361245364e-05, 0.0007607938605360687, 3.431922959862277e-05, 0.00013193019549362361, 4.3932570406468585e-05, 1.7816920490076882e-06, 4.291299046599306e-05, 2.327927631995408e-06, 2.749396344370325e-06, 2.0025418052682653e-06, 6.767959916942345e-07, 0.001867383485659957, 1.0799482197398902e-06], "target_probs": 0.9688981771469116}}


{"result": {"time": "2021-02-21 13:08:27.216968", "n_pass": [423, 68, 36], "n_token": 100, "loss": [0.4451702833175659, 0.03248058632016182], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def _resolve_datacenter(", "dc", ",", "pillarenv", ")", "(", "dc", "=", "dc", ")", ")", "#NEWLINE#", "#INDENT#", "mappings", "=", "dc", ".", "format", "(", "dc", "=", "dc", ")", "dc", "#NEWLINE#", "#UNINDENT#", "len", "(", "mappings", "pillarenv", ")", ")", "#NEWLINE#", "sorted_mappings", "=", "sorted", "(", "mappings", ",", "(", "-", ")", "#NEWLINE#", "pattern", ",", "target", ")", "in", "dc", "#INDENT#", "match", ".", "match", "(", "pattern", ",", "pillarenv", "if", "match", "(", "pattern", "=", "pattern", "#NEWLINE#", "result", "=", "target", "match", ".", "result", "=", "result", ")", ")", "#NEWLINE#", "return", "result", "#NEWLINE#", "#UNINDENT#", "(", "'None of following patterns matched pillarenv={env}: {lst}'", ".", "format", "(", "env", "=", "pillarenv", ",", "lst", "=", "', '", "repr", "(", "x", ")", "for", "x", "in", "mappings"]}}
{"position": {"error_location": 87, "repair_targets": [34], "repair_candidates": [2, 7, 9, 16, 20, 22, 24, 49, 44, 55, 61, 63, 14, 29, 38, 99, 34, 51, 53, 59, 68, 65, 70, 72, 77, 94, 97, 46, 67, 4, 30, 57, 87]}}
{"prediction": {"error_location": 0.6407151818275452, "repair_targets": [0.9680412411689758], "repair_candidates": [0.0013014614814892411, 0.0014005505945533514, 0.004282213747501373, 0.0007450919947586954, 0.0015443339943885803, 6.5744916355470195e-06, 0.002947479020804167, 1.783534389687702e-05, 0.00011808759154519066, 4.726637780549936e-05, 4.43062926933635e-05, 0.9680412411689758, 0.00025897231535054743, 0.0033330838195979595, 0.01113105658441782, 0.00012823422730434686, 6.966217256376694e-07, 0.0003217293706256896, 4.0450126107316464e-05, 6.9212442213029135e-06, 5.251546099316329e-05, 0.0014660661108791828, 2.803937968565151e-05, 0.00022186657588463277, 4.165836435277015e-05, 5.659393991663819e-06, 0.00015754226478748024, 1.276845750908251e-06, 2.8460722205636557e-06, 2.127038669641479e-06, 8.012189027795102e-07, 0.0023007842246443033, 1.158322788796795e-06], "target_probs": 0.9680412411689758}}


{"result": {"time": "2021-02-21 13:08:27.333308", "n_pass": [426, 69, 37], "n_token": 98, "loss": [0.9535393714904785, 0.018199849873781204], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def _resolve_datacenter(", "dc", ",", "pillarenv", ")", "(", "dc", "=", "dc", ")", ")", "#NEWLINE#", "#INDENT#", "mappings", "=", "dc", ".", "format", "(", "dc", "=", "dc", ")", "dc", "#NEWLINE#", "#UNINDENT#", "len", "(", "mappings", "pillarenv", ")", ")", "#NEWLINE#", "sorted_mappings", "=", "sorted", "(", "mappings", ",", "(", "-", ")", "#NEWLINE#", "pattern", ",", "target", ")", "in", "dc", "#INDENT#", "match", ".", "match", "(", "pattern", ",", "pillarenv", "if", "match", "(", "pattern", "=", "pattern", "#NEWLINE#", "result", "=", "target", "match", ".", "result", "=", "result", ")", "return", "result", "#NEWLINE#", "#UNINDENT#", "(", "'None of following patterns matched pillarenv={env}: {lst}'", ".", "format", "(", "env", "=", "pillarenv", ",", "lst", "=", "', '", "repr", "(", "x", ")", "for", "x", "in", "mappings"]}}
{"position": {"error_location": 85, "repair_targets": [34], "repair_candidates": [2, 7, 9, 16, 20, 22, 24, 49, 44, 55, 61, 63, 14, 29, 38, 97, 34, 51, 53, 59, 68, 65, 70, 72, 75, 92, 95, 46, 67, 4, 30, 57, 85]}}
{"prediction": {"error_location": 0.38537460565567017, "repair_targets": [0.9819647669792175], "repair_candidates": [0.0008022251422517002, 0.000911094481125474, 0.002874114317819476, 0.00048132106894627213, 0.0009491464006714523, 4.109088422410423e-06, 0.0019067323300987482, 1.0649406249285676e-05, 6.997735908953473e-05, 2.9687753340112977e-05, 2.814771323755849e-05, 0.9819647669792175, 0.0001649792247917503, 0.0017653194954618812, 0.0066319420002400875, 5.8466150221647695e-05, 3.9024737930049014e-07, 0.0001836231822380796, 1.657746543060057e-05, 2.697928039196995e-06, 2.0472742107813247e-05, 0.00020892135216854513, 1.0626092262100428e-05, 5.0908005505334586e-05, 2.082218816212844e-05, 1.0287337772751926e-06, 1.8116459614248015e-05, 5.117277396493591e-06, 1.3276915922233457e-07, 1.5602737448716653e-06, 3.895943905263266e-07, 0.000805253570433706, 5.431924705590063e-07], "target_probs": 0.9819647669792175}}


{"result": {"time": "2021-02-21 13:08:27.672631", "n_pass": [430, 72, 38], "n_token": 96, "loss": [1.121010661125183, 0.019792230799794197], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def _resolve_datacenter(", "dc", ",", "pillarenv", ")", "(", "dc", "=", "dc", ")", ")", "#NEWLINE#", "#INDENT#", "mappings", "=", "dc", ".", "format", "(", "dc", "=", "dc", ")", "dc", "#NEWLINE#", "#UNINDENT#", "len", "(", "mappings", "pillarenv", ")", ")", "#NEWLINE#", "sorted_mappings", "=", "sorted", "(", "mappings", ",", "(", "-", ")", "#NEWLINE#", "pattern", ",", "target", ")", "in", "dc", "#INDENT#", "match", ".", "match", "(", "pattern", ",", "pillarenv", "if", "match", "(", "pattern", "=", "pattern", "#NEWLINE#", "result", "=", "target", "match", ".", "result", "=", "result", ")", "return", "result", "#NEWLINE#", "#UNINDENT#", "(", "'None of following patterns matched pillarenv={env}: {lst}'", "(", "env", "=", "pillarenv", ",", "lst", "=", "', '", "repr", "(", "x", ")", "for", "x", "in", "mappings"]}}
{"position": {"error_location": 83, "repair_targets": [34], "repair_candidates": [2, 7, 9, 16, 20, 22, 24, 49, 44, 55, 61, 63, 14, 29, 38, 95, 34, 51, 53, 59, 68, 65, 70, 72, 75, 90, 93, 46, 67, 4, 30, 57, 83]}}
{"prediction": {"error_location": 0.32595014572143555, "repair_targets": [0.9804023504257202], "repair_candidates": [0.0009761606343090534, 0.0010941022774204612, 0.0033906830940395594, 0.000523336639162153, 0.0011335936142131686, 4.753816028824076e-06, 0.002173658460378647, 1.2768716260325164e-05, 0.00010287400073138997, 3.743651177501306e-05, 3.759131141123362e-05, 0.9804023504257202, 0.00017602949810680002, 0.002200510585680604, 0.006113744806498289, 6.353261414915323e-05, 4.925157668367319e-07, 0.00022863420599605888, 1.8010727217188105e-05, 3.5342827686690725e-06, 2.6964276912622154e-05, 0.0002576233528088778, 1.2701311788987368e-05, 7.655730587430298e-05, 1.8276672562933527e-05, 1.2325529041845584e-06, 2.0377883629407734e-05, 4.605720278050285e-06, 1.4194060327099578e-07, 2.8698270853055874e-06, 4.560124011732114e-07, 0.000883823202457279, 6.993413990130648e-07], "target_probs": 0.9804023504257202}}


{"result": {"time": "2021-02-21 13:08:28.008163", "n_pass": [434, 75, 39], "n_token": 94, "loss": [1.127602219581604, 0.01634320244193077], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def _resolve_datacenter(", "dc", ",", "pillarenv", ")", "(", "dc", "=", "dc", ")", ")", "#NEWLINE#", "#INDENT#", "mappings", "=", "dc", ".", "format", "(", "dc", "=", "dc", ")", "dc", "#NEWLINE#", "#UNINDENT#", "len", "(", "mappings", "pillarenv", ")", ")", "#NEWLINE#", "sorted_mappings", "=", "sorted", "(", "mappings", ",", "(", "-", ")", "#NEWLINE#", "pattern", ",", "target", ")", "in", "dc", "#INDENT#", "match", ".", "match", "(", "pattern", ",", "pillarenv", "if", "match", "(", "pattern", "=", "pattern", "#NEWLINE#", "result", "=", "target", "match", ".", "result", "=", "result", ")", "return", "result", "#NEWLINE#", "#UNINDENT#", "(", "'None of following patterns matched pillarenv={env}: {lst}'", "(", "env", "=", "pillarenv", ",", "lst", "repr", "(", "x", ")", "for", "x", "in", "mappings"]}}
{"position": {"error_location": 83, "repair_targets": [34], "repair_candidates": [2, 7, 9, 16, 20, 22, 24, 49, 44, 55, 61, 63, 14, 29, 38, 93, 34, 51, 53, 59, 68, 65, 70, 72, 75, 88, 91, 46, 67, 4, 30, 57, 83]}}
{"prediction": {"error_location": 0.3238087296485901, "repair_targets": [0.9837896227836609], "repair_candidates": [0.0008163473103195429, 0.0009103192132897675, 0.0027939146384596825, 0.00047690013889223337, 0.0010166047140955925, 3.810326006714604e-06, 0.001918485970236361, 1.4085086149862036e-05, 9.563857020111755e-05, 2.997825686179567e-05, 3.017174640262965e-05, 0.9837896227836609, 9.676721674622968e-05, 0.0016603642143309116, 0.004366193898022175, 5.6761597079457715e-05, 4.352079372438311e-07, 0.00020963804854545742, 1.931750557560008e-05, 2.9942098080937285e-06, 2.1028910850873217e-05, 0.00021801920956932008, 8.430360139755066e-06, 4.573610931402072e-05, 1.2503413017839193e-05, 7.165238571360533e-07, 1.3684856639883947e-05, 5.691393653250998e-06, 1.3781088625819393e-07, 1.7701439674056019e-06, 7.783468731759058e-07, 0.0013623926788568497, 6.959173788345652e-07], "target_probs": 0.9837896227836609}}


{"result": {"time": "2021-02-21 13:08:28.121979", "n_pass": [435, 76, 40], "n_token": 92, "loss": [0.9082406759262085, 0.013622562400996685], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def _resolve_datacenter(", "dc", ",", "pillarenv", ")", "(", "dc", "=", "dc", ")", ")", "#NEWLINE#", "#INDENT#", "mappings", "=", "dc", ".", "format", "(", "dc", "=", "dc", ")", "dc", "#NEWLINE#", "#UNINDENT#", "len", "(", "mappings", "pillarenv", ")", ")", "#NEWLINE#", "sorted_mappings", "=", "sorted", "(", "mappings", ",", "(", "-", ")", "#NEWLINE#", "pattern", ",", "target", ")", "in", "dc", "#INDENT#", "match", ".", "match", "(", "pattern", ",", "pillarenv", "if", "match", "(", "pattern", "=", "pattern", "#NEWLINE#", "result", "=", "target", "match", ".", "result", "=", "result", ")", "return", "result", "#NEWLINE#", "#UNINDENT#", "(", "'None of following patterns matched pillarenv={env}: {lst}'", "(", "env", "=", "pillarenv", ",", "lst", "x", ")", "for", "x", "in", "mappings"]}}
{"position": {"error_location": 83, "repair_targets": [34], "repair_candidates": [2, 7, 9, 16, 20, 22, 24, 49, 44, 55, 61, 63, 14, 29, 38, 91, 34, 51, 53, 59, 68, 65, 70, 72, 75, 86, 89, 46, 67, 4, 30, 57, 83]}}
{"prediction": {"error_location": 0.40323296189308167, "repair_targets": [0.9864698052406311], "repair_candidates": [0.0004576672799885273, 0.0005097061512060463, 0.001524367369711399, 0.00029606808675453067, 0.0004897380131296813, 2.549366627135896e-06, 0.001147761126048863, 1.0876960004679859e-05, 5.565162064158358e-05, 1.5714891560492106e-05, 1.6622723705950193e-05, 0.9864698052406311, 5.7623630709713325e-05, 0.0010028643300756812, 0.0029323308262974024, 3.088037919951603e-05, 2.575731343767984e-07, 0.00016189884627237916, 1.5379780961666256e-05, 2.0772388324985513e-06, 2.0891460735583678e-05, 0.00015423852892126888, 5.383289135352243e-06, 3.833209120784886e-05, 7.335670034080977e-06, 7.995572559593711e-07, 8.384311513509601e-06, 4.534247182164108e-06, 7.353733622039726e-08, 8.296527198581316e-07, 3.08682444938313e-07, 0.004558630753308535, 4.6147766852300265e-07], "target_probs": 0.9864698052406311}}


{"result": {"time": "2021-02-21 13:08:28.564167", "n_pass": [444, 80, 41], "n_token": 91, "loss": [0.8981673121452332, 0.013018825091421604], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def _resolve_datacenter(", "dc", ",", "pillarenv", "(", "dc", "=", "dc", ")", ")", "#NEWLINE#", "#INDENT#", "mappings", "=", "dc", ".", "format", "(", "dc", "=", "dc", ")", "dc", "#NEWLINE#", "#UNINDENT#", "len", "(", "mappings", "pillarenv", ")", ")", "#NEWLINE#", "sorted_mappings", "=", "sorted", "(", "mappings", ",", "(", "-", ")", "#NEWLINE#", "pattern", ",", "target", ")", "in", "dc", "#INDENT#", "match", ".", "match", "(", "pattern", ",", "pillarenv", "if", "match", "(", "pattern", "=", "pattern", "#NEWLINE#", "result", "=", "target", "match", ".", "result", "=", "result", ")", "return", "result", "#NEWLINE#", "#UNINDENT#", "(", "'None of following patterns matched pillarenv={env}: {lst}'", "(", "env", "=", "pillarenv", ",", "lst", "x", ")", "for", "x", "in", "mappings"]}}
{"position": {"error_location": 82, "repair_targets": [33], "repair_candidates": [2, 6, 8, 15, 19, 21, 23, 48, 43, 54, 60, 62, 13, 28, 37, 90, 33, 50, 52, 58, 67, 64, 69, 71, 74, 85, 88, 45, 66, 4, 29, 56, 82]}}
{"prediction": {"error_location": 0.4073154628276825, "repair_targets": [0.9870655536651611], "repair_candidates": [0.00015117654402274638, 0.00015533191617578268, 0.00055030855583027, 0.0003581663768272847, 0.00020603112352546304, 1.130527152781724e-06, 0.0005640904419124126, 9.17392571864184e-06, 4.494015593081713e-05, 6.642747393925674e-06, 5.565934316109633e-06, 0.9870655536651611, 1.6751848306739703e-05, 0.0014940290711820126, 0.00266725174151361, 2.6672263629734516e-05, 2.840309036855615e-07, 0.00024183416098821908, 1.3121107258484699e-05, 1.7905500726556056e-06, 1.5152391824813094e-05, 0.0001533416798338294, 4.060269930050708e-06, 3.0016184609849006e-05, 5.4534193623112515e-06, 5.389933903643396e-07, 7.795817509759218e-06, 2.1479349925357383e-06, 6.482898129434034e-08, 5.600242047876236e-07, 3.0720346444468305e-07, 0.006200213450938463, 4.3579802877502516e-07], "target_probs": 0.9870655536651611}}


{"result": {"time": "2021-02-21 13:08:28.674678", "n_pass": [445, 81, 42], "n_token": 90, "loss": [0.8380268812179565, 0.02453845925629139], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def _resolve_datacenter(", "dc", ",", "pillarenv", "dc", "=", "dc", ")", ")", "#NEWLINE#", "#INDENT#", "mappings", "=", "dc", ".", "format", "(", "dc", "=", "dc", ")", "dc", "#NEWLINE#", "#UNINDENT#", "len", "(", "mappings", "pillarenv", ")", ")", "#NEWLINE#", "sorted_mappings", "=", "sorted", "(", "mappings", ",", "(", "-", ")", "#NEWLINE#", "pattern", ",", "target", ")", "in", "dc", "#INDENT#", "match", ".", "match", "(", "pattern", ",", "pillarenv", "if", "match", "(", "pattern", "=", "pattern", "#NEWLINE#", "result", "=", "target", "match", ".", "result", "=", "result", ")", "return", "result", "#NEWLINE#", "#UNINDENT#", "(", "'None of following patterns matched pillarenv={env}: {lst}'", "(", "env", "=", "pillarenv", ",", "lst", "x", ")", "for", "x", "in", "mappings"]}}
{"position": {"error_location": 81, "repair_targets": [32], "repair_candidates": [2, 5, 7, 14, 18, 20, 22, 47, 42, 53, 59, 61, 12, 27, 36, 89, 32, 49, 51, 57, 66, 63, 68, 70, 73, 84, 87, 44, 65, 4, 28, 55, 81]}}
{"prediction": {"error_location": 0.4325631558895111, "repair_targets": [0.9757601618766785], "repair_candidates": [0.0003132557903882116, 0.003478444879874587, 0.002051393035799265, 0.000101444311439991, 0.00042869921890087426, 1.7199673720824649e-06, 0.0016833352856338024, 6.255881999095436e-06, 2.6844074454857036e-05, 7.1510335146740545e-06, 7.957767593325116e-06, 0.9757601618766785, 2.3751072149025276e-05, 0.0013645781436935067, 0.0021067033521831036, 2.2989743229118176e-05, 3.141435627185274e-07, 0.0002415881463093683, 9.855061762209516e-06, 1.115719214794808e-06, 1.9289920601295307e-05, 0.0005729125696234405, 3.7897661968600005e-06, 5.248637171462178e-05, 5.61939123144839e-06, 8.717051969142631e-07, 1.4005931916472036e-05, 1.4778145214222604e-06, 9.444667625757575e-08, 8.187163302864064e-07, 4.0693302594263514e-07, 0.011689952574670315, 7.903158234512375e-07], "target_probs": 0.9757601618766785}}


{"result": {"time": "2021-02-21 13:08:28.785389", "n_pass": [447, 82, 43], "n_token": 89, "loss": [1.0040647983551025, 0.012486605904996395], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def _resolve_datacenter(", "dc", ",", "pillarenv", "dc", "dc", ")", ")", "#NEWLINE#", "#INDENT#", "mappings", "=", "dc", ".", "format", "(", "dc", "=", "dc", ")", "dc", "#NEWLINE#", "#UNINDENT#", "len", "(", "mappings", "pillarenv", ")", ")", "#NEWLINE#", "sorted_mappings", "=", "sorted", "(", "mappings", ",", "(", "-", ")", "#NEWLINE#", "pattern", ",", "target", ")", "in", "dc", "#INDENT#", "match", ".", "match", "(", "pattern", ",", "pillarenv", "if", "match", "(", "pattern", "=", "pattern", "#NEWLINE#", "result", "=", "target", "match", ".", "result", "=", "result", ")", "return", "result", "#NEWLINE#", "#UNINDENT#", "(", "'None of following patterns matched pillarenv={env}: {lst}'", "(", "env", "=", "pillarenv", ",", "lst", "x", ")", "for", "x", "in", "mappings"]}}
{"position": {"error_location": 80, "repair_targets": [31], "repair_candidates": [2, 5, 6, 13, 17, 19, 21, 46, 41, 52, 58, 60, 11, 26, 35, 88, 31, 48, 50, 56, 65, 62, 67, 69, 72, 83, 86, 43, 64, 4, 27, 54, 80]}}
{"prediction": {"error_location": 0.36638712882995605, "repair_targets": [0.987591028213501], "repair_candidates": [0.0002276591258123517, 0.00031683119595982134, 0.00021410595218185335, 0.0003932268882635981, 0.0002371528244111687, 1.0519607940295828e-06, 0.0006254356703720987, 6.911285709065851e-06, 2.2849446395412087e-05, 5.929112376179546e-06, 5.9721560319303535e-06, 0.987591028213501, 1.305896421399666e-05, 0.0015030927024781704, 0.0019181399838998914, 2.0916262656101026e-05, 3.414236857679498e-07, 0.00025329360505566, 9.679678441898432e-06, 1.1540051900738035e-06, 1.6976575352600776e-05, 0.00022682888084091246, 3.6159281080472283e-06, 3.5471653973218054e-05, 7.626311798958341e-06, 7.700355126871727e-07, 6.909328021720285e-06, 2.5792628548515495e-06, 8.663504047490278e-08, 8.014360446395585e-07, 3.5622639416033053e-07, 0.006329599302262068, 5.826486244586704e-07], "target_probs": 0.987591028213501}}


{"result": {"time": "2021-02-21 13:08:29.005685", "n_pass": [450, 84, 44], "n_token": 87, "loss": [1.1132999658584595, 0.010893153958022594], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def _resolve_datacenter(", "dc", ",", "pillarenv", "dc", "dc", ")", ")", "mappings", "=", "dc", ".", "format", "(", "dc", "=", "dc", ")", "dc", "#NEWLINE#", "#UNINDENT#", "len", "(", "mappings", "pillarenv", ")", ")", "#NEWLINE#", "sorted_mappings", "=", "sorted", "(", "mappings", ",", "(", "-", ")", "#NEWLINE#", "pattern", ",", "target", ")", "in", "dc", "#INDENT#", "match", ".", "match", "(", "pattern", ",", "pillarenv", "if", "match", "(", "pattern", "=", "pattern", "#NEWLINE#", "result", "=", "target", "match", ".", "result", "=", "result", ")", "return", "result", "#NEWLINE#", "#UNINDENT#", "(", "'None of following patterns matched pillarenv={env}: {lst}'", "(", "env", "=", "pillarenv", ",", "lst", "x", ")", "for", "x", "in", "mappings"]}}
{"position": {"error_location": 78, "repair_targets": [29], "repair_candidates": [2, 5, 6, 11, 15, 17, 19, 44, 39, 50, 56, 58, 9, 24, 33, 86, 29, 46, 48, 54, 63, 60, 65, 67, 70, 81, 84, 41, 62, 4, 25, 52, 78]}}
{"prediction": {"error_location": 0.32847321033477783, "repair_targets": [0.9891659617424011], "repair_candidates": [0.00017976044910028577, 0.00016986166883725673, 0.00012581213377416134, 0.0002885019639506936, 1.8891671061282977e-05, 3.9493437498094863e-07, 0.0005854583578184247, 5.1370393521210644e-06, 2.0294728528824635e-05, 4.506807272264268e-06, 8.517848073097412e-06, 0.9891659617424011, 3.986488081864081e-05, 0.0015667566331103444, 0.0036676565650850534, 3.1321174901677296e-05, 3.195227122887445e-07, 0.0002309296978637576, 1.6872401829459704e-05, 1.8541711597208632e-06, 1.6694770238245837e-05, 0.00016607945144642144, 5.484070243255701e-06, 4.691187496064231e-05, 9.721956303110346e-06, 9.482552059125737e-07, 8.112028808682226e-06, 4.788306796399411e-06, 9.241028919859673e-08, 7.63579691920313e-07, 3.207610461686272e-07, 0.003611018881201744, 4.7294329874603136e-07], "target_probs": 0.9891659617424011}}


{"result": {"time": "2021-02-21 13:08:29.113921", "n_pass": [453, 85, 45], "n_token": 85, "loss": [1.0656630992889404, 0.0077671268954873085], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def _resolve_datacenter(", "dc", ",", "pillarenv", "dc", "dc", ")", ")", "mappings", "=", "dc", ".", "dc", "=", "dc", ")", "dc", "#NEWLINE#", "#UNINDENT#", "len", "(", "mappings", "pillarenv", ")", ")", "#NEWLINE#", "sorted_mappings", "=", "sorted", "(", "mappings", ",", "(", "-", ")", "#NEWLINE#", "pattern", ",", "target", ")", "in", "dc", "#INDENT#", "match", ".", "match", "(", "pattern", ",", "pillarenv", "if", "match", "(", "pattern", "=", "pattern", "#NEWLINE#", "result", "=", "target", "match", ".", "result", "=", "result", ")", "return", "result", "#NEWLINE#", "#UNINDENT#", "(", "'None of following patterns matched pillarenv={env}: {lst}'", "(", "env", "=", "pillarenv", ",", "lst", "x", ")", "for", "x", "in", "mappings"]}}
{"position": {"error_location": 76, "repair_targets": [27], "repair_candidates": [2, 5, 6, 11, 13, 15, 17, 42, 37, 48, 54, 56, 9, 22, 31, 84, 27, 44, 46, 52, 61, 58, 63, 65, 68, 79, 82, 39, 60, 4, 23, 50, 76]}}
{"prediction": {"error_location": 0.3444993197917938, "repair_targets": [0.9922629594802856], "repair_candidates": [9.792549826670438e-05, 8.129643538268283e-05, 6.124708306742832e-05, 0.0001577527291374281, 1.4404407920665108e-05, 5.032092644796649e-07, 0.00044019389315508306, 1.4505535546049941e-05, 9.001436410471797e-06, 2.4042856239248067e-06, 4.32144952355884e-06, 0.9922629594802856, 4.444641308509745e-05, 0.0011602021986618638, 0.0030306524131447077, 3.323372220620513e-05, 2.61858446037877e-07, 0.00020026681886520237, 1.7486891010776162e-05, 1.3533773426388507e-06, 1.1836792509711813e-05, 0.00011152428487548605, 4.214236014377093e-06, 3.0026058084331453e-05, 9.318144293501973e-06, 8.893924814401544e-07, 4.467391136131482e-06, 5.925176537857624e-06, 7.347508557131732e-08, 6.59551915305201e-07, 2.408759769423341e-07, 0.002185915829613805, 3.2112097869685385e-07], "target_probs": 0.9922629594802856}}


{"result": {"time": "2021-02-21 13:08:29.223091", "n_pass": [457, 86, 46], "n_token": 83, "loss": [0.868565559387207, 0.011985676363110542], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def _resolve_datacenter(", "dc", ",", "pillarenv", "dc", "dc", ")", ")", "mappings", "=", "dc", ".", "dc", "=", "dc", ")", "dc", "#NEWLINE#", "(", "mappings", "pillarenv", ")", ")", "#NEWLINE#", "sorted_mappings", "=", "sorted", "(", "mappings", ",", "(", "-", ")", "#NEWLINE#", "pattern", ",", "target", ")", "in", "dc", "#INDENT#", "match", ".", "match", "(", "pattern", ",", "pillarenv", "if", "match", "(", "pattern", "=", "pattern", "#NEWLINE#", "result", "=", "target", "match", ".", "result", "=", "result", ")", "return", "result", "#NEWLINE#", "#UNINDENT#", "(", "'None of following patterns matched pillarenv={env}: {lst}'", "(", "env", "=", "pillarenv", ",", "lst", "x", ")", "for", "x", "in", "mappings"]}}
{"position": {"error_location": 74, "repair_targets": [25], "repair_candidates": [2, 5, 6, 11, 13, 15, 17, 40, 35, 46, 52, 54, 9, 20, 29, 82, 25, 42, 44, 50, 59, 56, 61, 63, 66, 77, 80, 37, 58, 4, 21, 48, 74]}}
{"prediction": {"error_location": 0.4195529520511627, "repair_targets": [0.9880858659744263], "repair_candidates": [0.00015002459986135364, 0.0001237200922332704, 9.643125667935237e-05, 0.0002661100297700614, 1.8862838260247372e-05, 6.63925675326027e-07, 0.000963119207881391, 1.4490363355434965e-05, 7.609241038153414e-06, 1.558849726279732e-05, 2.901717380154878e-06, 0.9880858659744263, 2.0455274352570996e-05, 0.001690779230557382, 0.003584040328860283, 4.609948518918827e-05, 3.7125192875464563e-07, 0.00026643252931535244, 1.9006251022801735e-05, 1.990894816117361e-06, 1.3988505997986067e-05, 0.00013163643598090857, 5.078888534626458e-06, 4.242426803102717e-05, 9.539022357785143e-06, 8.564610425310093e-07, 7.955048204166815e-06, 5.470626547321444e-06, 1.143363519418017e-07, 8.765239272179315e-07, 3.3280775824096054e-07, 0.004406828433275223, 3.938667134661955e-07], "target_probs": 0.9880858659744263}}


{"result": {"time": "2021-02-21 13:08:29.329533", "n_pass": [460, 87, 47], "n_token": 81, "loss": [0.2718043625354767, 0.46133625507354736], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def _resolve_datacenter(", "dc", ",", "pillarenv", "dc", "dc", ")", ")", "mappings", "=", "dc", ".", "dc", "=", "dc", ")", "dc", "#NEWLINE#", "(", "mappings", "pillarenv", ")", "sorted_mappings", "=", "sorted", "(", "mappings", ",", "(", "-", ")", "#NEWLINE#", "pattern", ",", "target", ")", "in", "dc", "#INDENT#", "match", ".", "match", "(", "pattern", ",", "pillarenv", "if", "match", "(", "pattern", "=", "pattern", "#NEWLINE#", "result", "=", "target", "match", ".", "result", "=", "result", ")", "return", "result", "#NEWLINE#", "#UNINDENT#", "(", "'None of following patterns matched pillarenv={env}: {lst}'", "(", "env", "=", "pillarenv", ",", "lst", "x", ")", "for", "x", "in", "mappings"]}}
{"position": {"error_location": 72, "repair_targets": [23], "repair_candidates": [2, 5, 6, 11, 13, 15, 17, 38, 33, 44, 50, 52, 9, 20, 27, 80, 23, 40, 42, 48, 57, 54, 59, 61, 64, 75, 78, 35, 56, 4, 21, 46, 72]}}
{"prediction": {"error_location": 0.7620033025741577, "repair_targets": [0.6304406523704529], "repair_candidates": [0.0010767007479444146, 0.0008155896794050932, 0.0005805199616588652, 0.0013900938211008906, 0.00012308830628171563, 5.0982794164156076e-06, 0.005680127069354057, 0.0001043085940182209, 6.577392923645675e-05, 0.000371621863450855, 0.0007644509896636009, 0.6304406523704529, 4.3687668949132785e-05, 0.03014719858765602, 0.04446650296449661, 0.0005156974657438695, 4.6902018766559195e-06, 0.005148505326360464, 0.0009736656211316586, 2.5015709979925305e-05, 0.0002622127649374306, 0.008622050285339355, 5.512935240403749e-05, 0.0008486935403198004, 0.00010080600623041391, 3.3278611226705834e-05, 0.0003551968839019537, 3.353782813064754e-05, 2.0620902887458215e-06, 4.480113057070412e-05, 1.0957880476780701e-05, 0.26687324047088623, 1.4966582057240885e-05], "target_probs": 0.6304406523704529}}


{"result": {"time": "2021-02-21 13:08:29.541193", "n_pass": [464, 89, 48], "n_token": 79, "loss": [0.2531697452068329, 0.5691424608230591], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def _resolve_datacenter(", "dc", ",", "pillarenv", "dc", "dc", ")", ")", "mappings", "=", "dc", ".", "dc", "=", "dc", ")", "dc", "#NEWLINE#", "(", "mappings", "pillarenv", ")", "sorted_mappings", "=", "sorted", "(", "mappings", ",", ")", "#NEWLINE#", "pattern", ",", "target", ")", "in", "dc", "#INDENT#", "match", ".", "match", "(", "pattern", ",", "pillarenv", "if", "match", "(", "pattern", "=", "pattern", "#NEWLINE#", "result", "=", "target", "match", ".", "result", "=", "result", ")", "return", "result", "#NEWLINE#", "#UNINDENT#", "(", "'None of following patterns matched pillarenv={env}: {lst}'", "(", "env", "=", "pillarenv", ",", "lst", "x", ")", "for", "x", "in", "mappings"]}}
{"position": {"error_location": 70, "repair_targets": [23], "repair_candidates": [2, 5, 6, 11, 13, 15, 17, 36, 31, 42, 48, 50, 9, 20, 27, 78, 23, 38, 40, 46, 55, 52, 57, 59, 62, 73, 76, 33, 54, 4, 21, 44, 70]}}
{"prediction": {"error_location": 0.7763360142707825, "repair_targets": [0.566010594367981], "repair_candidates": [0.0011248093796893954, 0.0008554197265766561, 0.0006188711849972606, 0.0015087506035342813, 0.000142916280310601, 5.841528036398813e-06, 0.005582792684435844, 0.0001223008439410478, 7.16448703315109e-05, 0.00038353490526787937, 0.0007690812344662845, 0.566010594367981, 4.153717964072712e-05, 0.02233627811074257, 0.03511696681380272, 0.0004715616814792156, 5.1883189371437766e-06, 0.007704834453761578, 0.0010273871012032032, 2.2912332497071475e-05, 0.0003015688562300056, 0.013600541278719902, 6.259390647755936e-05, 0.0009374480578117073, 0.00012548334780149162, 5.03173032484483e-05, 0.00042425800347700715, 4.034203811897896e-05, 2.585350785011542e-06, 5.753232107963413e-05, 1.372003407595912e-05, 0.3404417037963867, 1.8696793631534092e-05], "target_probs": 0.566010594367981}}


{"result": {"time": "2021-02-21 13:08:29.645815", "n_pass": [465, 90, 49], "n_token": 77, "loss": [0.4191591441631317, 0.12898209691047668], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def _resolve_datacenter(", "dc", ",", "pillarenv", "dc", "dc", ")", ")", "mappings", "=", "dc", ".", "dc", "=", "dc", ")", "dc", "#NEWLINE#", "(", "mappings", "pillarenv", ")", "sorted_mappings", "=", "sorted", "(", "mappings", ",", "pattern", ",", "target", ")", "in", "dc", "#INDENT#", "match", ".", "match", "(", "pattern", ",", "pillarenv", "if", "match", "(", "pattern", "=", "pattern", "#NEWLINE#", "result", "=", "target", "match", ".", "result", "=", "result", ")", "return", "result", "#NEWLINE#", "#UNINDENT#", "(", "'None of following patterns matched pillarenv={env}: {lst}'", "(", "env", "=", "pillarenv", ",", "lst", "x", ")", "for", "x", "in", "mappings"]}}
{"position": {"error_location": 68, "repair_targets": [23], "repair_candidates": [2, 5, 6, 11, 13, 15, 17, 34, 29, 40, 46, 48, 9, 20, 27, 76, 23, 36, 38, 44, 53, 50, 55, 57, 60, 71, 74, 31, 52, 4, 21, 42, 68]}}
{"prediction": {"error_location": 0.6575995683670044, "repair_targets": [0.8789896965026855], "repair_candidates": [0.000574461359065026, 0.0004546453128568828, 0.0002962905855383724, 0.000728403334505856, 8.203732431866229e-05, 2.9657608138222713e-06, 0.0035720434971153736, 6.557674350915477e-05, 4.921190338791348e-05, 0.00042460652184672654, 0.002168152714148164, 0.8789896965026855, 0.0012652808800339699, 0.0026313653215765953, 0.019621824845671654, 8.466068538837135e-05, 1.3842366115568439e-06, 0.0012898450950160623, 0.0001537320058559999, 8.570998943469021e-06, 0.00014250109961722046, 0.004105700179934502, 2.7316100386087783e-05, 0.000688730098772794, 6.102650877437554e-05, 1.3832463082508184e-05, 0.0002009064774028957, 1.679428169154562e-05, 8.310026942126569e-07, 1.60424333444098e-05, 3.8243842936935835e-06, 0.08225299417972565, 4.885345788352424e-06], "target_probs": 0.8789896965026855}}


{"result": {"time": "2021-02-21 13:08:29.753343", "n_pass": [482, 91, 50], "n_token": 75, "loss": [0.779108464717865, 0.08520332723855972], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def _resolve_datacenter(", "dc", ",", "pillarenv", "dc", "dc", ")", ")", "mappings", "=", "dc", ".", "dc", "=", "dc", ")", "dc", "#NEWLINE#", "(", "mappings", "pillarenv", ")", "sorted_mappings", "=", "sorted", "(", "mappings", ",", "pattern", ",", "target", ")", "in", "dc", "#INDENT#", "match", ".", "match", "(", "pattern", ",", "pillarenv", "if", "match", "(", "pattern", "=", "pattern", "#NEWLINE#", "result", "=", "target", "match", ".", "result", "=", "result", ")", "return", "result", "(", "'None of following patterns matched pillarenv={env}: {lst}'", "(", "env", "=", "pillarenv", ",", "lst", "x", ")", "for", "x", "in", "mappings"]}}
{"position": {"error_location": 66, "repair_targets": [23], "repair_candidates": [2, 5, 6, 11, 13, 15, 17, 34, 29, 40, 46, 48, 9, 20, 27, 74, 23, 36, 38, 44, 53, 50, 55, 57, 60, 69, 72, 31, 52, 4, 21, 42, 66]}}
{"prediction": {"error_location": 0.4588148891925812, "repair_targets": [0.9183255434036255], "repair_candidates": [0.0003295877540949732, 0.00026896243798546493, 0.00017084590217564255, 0.0004234416701365262, 5.246516229817644e-05, 1.724410481074301e-06, 0.0022478580940514803, 3.597249451559037e-05, 2.9433238523779437e-05, 0.00042296460014767945, 0.0027683409862220287, 0.9183255434036255, 0.0007988366996869445, 0.0017396450275555253, 0.017094450071454048, 4.364181950222701e-05, 9.928592135111103e-07, 0.0006476260023191571, 2.7258442059974186e-05, 4.828795226785587e-06, 9.673648310126737e-05, 0.002232356695458293, 1.447310842195293e-05, 0.0004618667298927903, 9.346586739411578e-05, 1.0736644071585033e-05, 3.8794521969975904e-05, 9.785125257621985e-06, 3.0666333259432577e-06, 2.5627418835938442e-06, 1.0216530199613771e-06, 0.05159888043999672, 1.9028179849556182e-06], "target_probs": 0.9183255434036255}}


{"result": {"time": "2021-02-21 13:08:29.956583", "n_pass": [484, 93, 51], "n_token": 73, "loss": [0.660352349281311, 0.05331682786345482], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def _resolve_datacenter(", "dc", ",", "pillarenv", "dc", "dc", ")", ")", "mappings", "=", "dc", ".", "dc", "=", "dc", ")", "dc", "#NEWLINE#", "(", "mappings", "pillarenv", ")", "sorted_mappings", "=", "sorted", "(", "mappings", ",", "pattern", ",", "target", ")", "in", "dc", "#INDENT#", "match", ".", "match", "(", "pattern", ",", "pillarenv", "if", "match", "(", "pattern", "=", "pattern", "#NEWLINE#", "result", "=", "target", "match", ".", "result", "=", "result", ")", "return", "result", "(", "'None of following patterns matched pillarenv={env}: {lst}'", "=", "pillarenv", ",", "lst", "x", ")", "for", "x", "in", "mappings"]}}
{"position": {"error_location": 64, "repair_targets": [23], "repair_candidates": [2, 5, 6, 11, 13, 15, 17, 34, 29, 40, 46, 48, 9, 20, 27, 72, 23, 36, 38, 44, 53, 50, 55, 57, 60, 67, 70, 31, 52, 4, 21, 42, 64]}}
{"prediction": {"error_location": 0.5166692733764648, "repair_targets": [0.9480795860290527], "repair_candidates": [0.00033884518779814243, 0.0002784504322335124, 0.0001731766533339396, 0.0004255420353729278, 5.37159139639698e-05, 1.6553777868466568e-06, 0.0027175694704055786, 3.391033533262089e-05, 3.239062425564043e-05, 0.00047600583638995886, 0.0028841975145041943, 0.9480795860290527, 0.0005724481889046729, 0.001391856581903994, 0.015776224434375763, 3.296320210210979e-05, 8.821637038636254e-07, 0.0005814543692395091, 2.3260889065568335e-05, 4.523754341789754e-06, 8.93658580025658e-05, 0.0026335816364735365, 1.4189171452017035e-05, 0.00043442475725896657, 9.440230496693403e-05, 1.3312927876540925e-05, 5.2680072258226573e-05, 4.764258846989833e-06, 9.943392797140405e-06, 3.670206979222712e-06, 1.5121468095458113e-06, 0.022767096757888794, 2.4424894036201295e-06], "target_probs": 0.9480795860290527}}


{"result": {"time": "2021-02-21 13:08:30.162187", "n_pass": [490, 95, 52], "n_token": 72, "loss": [0.502726674079895, 0.10816190391778946], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["def _resolve_datacenter(", "dc", ",", "pillarenv", "dc", "dc", ")", ")", "mappings", "=", "dc", ".", "dc", "=", "dc", ")", "dc", "#NEWLINE#", "(", "mappings", "pillarenv", ")", "sorted_mappings", "=", "sorted", "(", "mappings", ",", "pattern", ",", "target", ")", "in", "dc", "#INDENT#", "match", ".", "match", "(", "pattern", ",", "pillarenv", "if", "match", "(", "pattern", "=", "pattern", "#NEWLINE#", "result", "=", "target", "match", ".", "result", "=", "result", ")", "return", "result", "(", "'None of following patterns matched pillarenv={env}: {lst}'", "=", "pillarenv", ",", "lst", "x", ")", "for", "x", "in", "mappings"]}}
{"position": {"error_location": 63, "repair_targets": [22], "repair_candidates": [1, 4, 5, 10, 12, 14, 16, 33, 28, 39, 45, 47, 8, 19, 26, 71, 22, 35, 37, 43, 52, 49, 54, 56, 59, 66, 69, 30, 51, 3, 20, 41, 63]}}
{"prediction": {"error_location": 0.6048791408538818, "repair_targets": [0.8974822759628296], "repair_candidates": [0.0024395070504397154, 0.0010054204612970352, 0.0004729309002868831, 0.001245874329470098, 0.00012622620852198452, 3.5991083677799907e-06, 0.005850625690072775, 0.0002028665621764958, 0.00012074650294380262, 0.0008894950733520091, 0.004172350745648146, 0.8974822759628296, 0.0004605776339303702, 0.0012204074300825596, 0.013516277074813843, 4.022180291940458e-05, 1.6569505305596977e-06, 0.0010654953075572848, 3.8166093872860074e-05, 6.745375685568433e-06, 0.0001460137136746198, 0.0034161366056650877, 2.3436368792317808e-05, 0.0006122476770542562, 0.0002212678373325616, 2.5268625904573128e-05, 7.232678035506979e-05, 1.1961978088947944e-05, 1.840391087171156e-05, 7.4078866418858524e-06, 3.1938102438289206e-06, 0.06507545709609985, 5.4775591706857085e-06], "target_probs": 0.8974822759628296}}


{"result": {"time": "2021-02-21 13:08:30.262642", "n_pass": [491, 96, 53], "n_token": 71, "loss": [0.780561625957489, 0.10636531561613083], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["dc", ",", "pillarenv", "dc", "dc", ")", ")", "mappings", "=", "dc", ".", "dc", "=", "dc", ")", "dc", "#NEWLINE#", "(", "mappings", "pillarenv", ")", "sorted_mappings", "=", "sorted", "(", "mappings", ",", "pattern", ",", "target", ")", "in", "dc", "#INDENT#", "match", ".", "match", "(", "pattern", ",", "pillarenv", "if", "match", "(", "pattern", "=", "pattern", "#NEWLINE#", "result", "=", "target", "match", ".", "result", "=", "result", ")", "return", "result", "(", "'None of following patterns matched pillarenv={env}: {lst}'", "=", "pillarenv", ",", "lst", "x", ")", "for", "x", "in", "mappings"]}}
{"position": {"error_location": 62, "repair_targets": [21], "repair_candidates": [0, 3, 4, 9, 11, 13, 15, 32, 27, 38, 44, 46, 7, 18, 25, 70, 21, 34, 36, 42, 51, 48, 53, 55, 58, 65, 68, 29, 50, 2, 19, 40, 62]}}
{"prediction": {"error_location": 0.4581485688686371, "repair_targets": [0.8990961313247681], "repair_candidates": [0.007267518434673548, 0.0012655186001211405, 0.000983819947578013, 0.010854169726371765, 0.0004243609728291631, 1.9533938029780984e-05, 0.021430471912026405, 0.0010774058755487204, 0.0002994441019836813, 0.0016100421780720353, 0.008067789487540722, 0.8990961313247681, 0.00174664705991745, 0.0024342683609575033, 0.011913307942450047, 5.580128345172852e-05, 1.9737892671400914e-06, 0.0008236201829276979, 3.1311745260609314e-05, 5.383839379646815e-06, 0.0001168301168945618, 0.001947868731804192, 1.8114935301127844e-05, 0.0004655411757994443, 0.00018436115351505578, 1.7901413229992613e-05, 3.7375812098616734e-05, 1.6619078451185487e-05, 1.3824450434185565e-05, 7.877083589846734e-06, 2.5064459805435035e-06, 0.02775685116648674, 5.831786893395474e-06], "target_probs": 0.8990961313247681}}


{"result": {"time": "2021-02-21 13:08:30.363493", "n_pass": [493, 97, 54], "n_token": 70, "loss": [0.6928778290748596, 0.048801489174366], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["dc", "pillarenv", "dc", "dc", ")", ")", "mappings", "=", "dc", ".", "dc", "=", "dc", ")", "dc", "#NEWLINE#", "(", "mappings", "pillarenv", ")", "sorted_mappings", "=", "sorted", "(", "mappings", ",", "pattern", ",", "target", ")", "in", "dc", "#INDENT#", "match", ".", "match", "(", "pattern", ",", "pillarenv", "if", "match", "(", "pattern", "=", "pattern", "#NEWLINE#", "result", "=", "target", "match", ".", "result", "=", "result", ")", "return", "result", "(", "'None of following patterns matched pillarenv={env}: {lst}'", "=", "pillarenv", ",", "lst", "x", ")", "for", "x", "in", "mappings"]}}
{"position": {"error_location": 61, "repair_targets": [20], "repair_candidates": [0, 2, 3, 8, 10, 12, 14, 31, 26, 37, 43, 45, 6, 17, 24, 69, 20, 33, 35, 41, 50, 47, 52, 54, 57, 64, 67, 28, 49, 1, 18, 39, 61]}}
{"prediction": {"error_location": 0.5001347064971924, "repair_targets": [0.9523701667785645], "repair_candidates": [0.0012558200396597385, 0.00033212004927918315, 0.0003417930565774441, 0.005343305878341198, 0.0004368950903881341, 7.579228167742258e-06, 0.014186762273311615, 0.00021271711739245802, 0.00010796501737786457, 0.00088452611817047, 0.00557845551520586, 0.9523701667785645, 0.0005673570558428764, 0.0009411898208782077, 0.006286583840847015, 2.093079274345655e-05, 1.0596071433610632e-06, 0.000519602675922215, 2.1076393750263378e-05, 3.0123687793093268e-06, 4.743328463518992e-05, 0.0008850851445458829, 6.2933622757554986e-06, 0.00015812437050044537, 5.9741942095570266e-05, 6.453944934037281e-06, 2.060894257738255e-05, 6.213194410520373e-06, 5.155071448825765e-06, 2.4365283479710342e-06, 8.74133036177227e-07, 0.009380508214235306, 1.978346062969649e-06], "target_probs": 0.9523701667785645}}


{"result": {"time": "2021-02-21 13:08:30.463524", "n_pass": [497, 98, 55], "n_token": 68, "loss": [0.6492285132408142, 0.035089362412691116], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["dc", "pillarenv", "dc", "dc", "mappings", "=", "dc", ".", "dc", "=", "dc", ")", "dc", "#NEWLINE#", "(", "mappings", "pillarenv", ")", "sorted_mappings", "=", "sorted", "(", "mappings", ",", "pattern", ",", "target", ")", "in", "dc", "#INDENT#", "match", ".", "match", "(", "pattern", ",", "pillarenv", "if", "match", "(", "pattern", "=", "pattern", "#NEWLINE#", "result", "=", "target", "match", ".", "result", "=", "result", ")", "return", "result", "(", "'None of following patterns matched pillarenv={env}: {lst}'", "=", "pillarenv", ",", "lst", "x", ")", "for", "x", "in", "mappings"]}}
{"position": {"error_location": 59, "repair_targets": [18], "repair_candidates": [0, 2, 3, 6, 8, 10, 12, 29, 24, 35, 41, 43, 4, 15, 22, 67, 18, 31, 33, 39, 48, 45, 50, 52, 55, 62, 65, 26, 47, 1, 16, 37, 59]}}
{"prediction": {"error_location": 0.5224486589431763, "repair_targets": [0.96551913022995], "repair_candidates": [0.0009152520215138793, 0.00015366863226518035, 0.00010548445425229147, 0.0020202994346618652, 0.004931024741381407, 2.4496087007719325e-06, 0.005997451487928629, 0.00014505413128063083, 0.00011495898070279509, 0.0006679894286207855, 0.004482574295252562, 0.96551913022995, 0.0007120075169950724, 0.0014690675307065248, 0.00560991233214736, 1.9137221897835843e-05, 8.054919931055338e-07, 0.00031250313622877, 1.4350420315167867e-05, 2.716581775530358e-06, 4.318957508075982e-05, 0.0005507427267730236, 5.743017936765682e-06, 0.0001237059332197532, 5.090626291348599e-05, 5.263564617052907e-06, 1.5076331692398526e-05, 5.201126441534143e-06, 4.341950443631504e-06, 1.6117885479616234e-06, 7.408010560538969e-07, 0.005996285006403923, 1.333356749455561e-06], "target_probs": 0.96551913022995}}


{"result": {"time": "2021-02-21 13:08:30.565087", "n_pass": [506, 99, 56], "n_token": 66, "loss": [0.5127021074295044, 0.06093700975179672], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["dc", "pillarenv", "dc", "dc", "mappings", "=", "dc", ".", "dc", "=", "dc", ")", "dc", "#NEWLINE#", "(", "mappings", "pillarenv", ")", "sorted_mappings", "=", "mappings", ",", "pattern", ",", "target", ")", "in", "dc", "#INDENT#", "match", ".", "match", "(", "pattern", ",", "pillarenv", "if", "match", "(", "pattern", "=", "pattern", "#NEWLINE#", "result", "=", "target", "match", ".", "result", "=", "result", ")", "return", "result", "(", "'None of following patterns matched pillarenv={env}: {lst}'", "=", "pillarenv", ",", "lst", "x", ")", "for", "x", "in", "mappings"]}}
{"position": {"error_location": 57, "repair_targets": [18], "repair_candidates": [0, 2, 3, 6, 8, 10, 12, 27, 22, 33, 39, 41, 4, 15, 20, 65, 18, 29, 31, 37, 46, 43, 48, 50, 53, 60, 63, 24, 45, 1, 16, 35, 57]}}
{"prediction": {"error_location": 0.5988752245903015, "repair_targets": [0.9408825039863586], "repair_candidates": [0.0010477944742888212, 0.00017566935275681317, 0.00012286595301702619, 0.0020373514853417873, 0.0041358317248523235, 3.2273612760036485e-06, 0.006826209370046854, 0.0002628835791256279, 0.0001998837396968156, 0.0007577237556688488, 0.004316552542150021, 0.9408825039863586, 0.0028833916876465082, 0.006829455029219389, 0.016267690807580948, 5.885668724658899e-05, 9.052079121829593e-07, 0.000593986886087805, 3.1427789508597925e-05, 3.406335508771008e-06, 6.382261926773936e-05, 0.0009019321296364069, 6.603914243896725e-06, 0.00020325867808423936, 5.883939957129769e-05, 8.011139470909256e-06, 2.1438474504975602e-05, 7.631099833815824e-06, 7.110973001545062e-06, 2.6350705866207136e-06, 1.203453848575009e-06, 0.01127744372934103, 2.540360583225265e-06], "target_probs": 0.9408825039863586}}


{"result": {"time": "2021-02-21 13:08:30.863176", "n_pass": [605, 102, 57], "n_token": 65, "loss": [0.5402072668075562, 0.031425055116415024], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["dc", "pillarenv", "dc", "dc", "mappings", "=", "dc", ".", "dc", "=", "dc", ")", "dc", "#NEWLINE#", "(", "mappings", "pillarenv", ")", "sorted_mappings", "=", "mappings", ",", "pattern", "target", ")", "in", "dc", "#INDENT#", "match", ".", "match", "(", "pattern", ",", "pillarenv", "if", "match", "(", "pattern", "=", "pattern", "#NEWLINE#", "result", "=", "target", "match", ".", "result", "=", "result", ")", "return", "result", "(", "'None of following patterns matched pillarenv={env}: {lst}'", "=", "pillarenv", ",", "lst", "x", ")", "for", "x", "in", "mappings"]}}
{"position": {"error_location": 56, "repair_targets": [18], "repair_candidates": [0, 2, 3, 6, 8, 10, 12, 26, 22, 32, 38, 40, 4, 15, 20, 64, 18, 28, 30, 36, 45, 42, 47, 49, 52, 59, 62, 23, 44, 1, 16, 34, 56]}}
{"prediction": {"error_location": 0.5826274156570435, "repair_targets": [0.9690635800361633], "repair_candidates": [0.000910939765162766, 0.0001550457818666473, 0.00011276884470134974, 0.001927675330080092, 0.004015750717371702, 2.9123837066435954e-06, 0.005547377746552229, 0.00024428675533272326, 0.00017627241322770715, 0.0006080041639506817, 0.0040090144611895084, 0.9690635800361633, 0.001520442427136004, 0.002726862672716379, 0.0008125174790620804, 1.554432492412161e-05, 4.6725182301088353e-07, 0.0004910925636067986, 2.0550192857626826e-05, 2.7025200779462466e-06, 4.37872986367438e-05, 0.0004779109440278262, 6.057293376215966e-06, 0.00013559557555709034, 5.088346733828075e-05, 3.935167569579789e-06, 1.4540270967700053e-05, 6.2092349253362045e-06, 5.2862492339045275e-06, 1.8793811022987938e-06, 8.893211429494841e-07, 0.0068875206634402275, 1.69196334809385e-06], "target_probs": 0.9690635800361633}}


{"result": {"time": "2021-02-21 13:08:30.961506", "n_pass": [607, 103, 58], "n_token": 64, "loss": [0.5037146210670471, 0.04941251128911972], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["dc", "pillarenv", "dc", "dc", "mappings", "=", "dc", ".", "dc", "=", "dc", ")", "dc", "#NEWLINE#", "(", "mappings", "pillarenv", ")", "sorted_mappings", "=", "mappings", ",", "pattern", "target", "in", "dc", "#INDENT#", "match", ".", "match", "(", "pattern", ",", "pillarenv", "if", "match", "(", "pattern", "=", "pattern", "#NEWLINE#", "result", "=", "target", "match", ".", "result", "=", "result", ")", "return", "result", "(", "'None of following patterns matched pillarenv={env}: {lst}'", "=", "pillarenv", ",", "lst", "x", ")", "for", "x", "in", "mappings"]}}
{"position": {"error_location": 55, "repair_targets": [18], "repair_candidates": [0, 2, 3, 6, 8, 10, 12, 25, 22, 31, 37, 39, 4, 15, 20, 63, 18, 27, 29, 35, 44, 41, 46, 48, 51, 58, 61, 23, 43, 1, 16, 33, 55]}}
{"prediction": {"error_location": 0.6042817831039429, "repair_targets": [0.9517884254455566], "repair_candidates": [0.0015241209184750915, 0.0002571996010374278, 0.00019606536079663783, 0.003447375725954771, 0.00632401742041111, 5.020857315685134e-06, 0.00845628697425127, 0.0004915586323477328, 0.0002548806369304657, 0.0005942501593381166, 0.003154313424602151, 0.9517884254455566, 0.0003645120305009186, 0.0026753824204206467, 0.0008007186697795987, 0.00014150286733638495, 9.478886795477592e-07, 0.0008191296365112066, 8.980499114841223e-05, 5.820248588861432e-06, 9.604999650036916e-05, 0.002150213113054633, 1.295697165915044e-05, 0.000349124864442274, 0.00012925259943585843, 1.6004365534172393e-05, 2.847318501153495e-05, 1.8973380065290257e-05, 1.2820169104088563e-05, 5.49242122360738e-06, 2.1423547877930105e-06, 0.015782613307237625, 4.6248792386904825e-06], "target_probs": 0.9517884254455566}}


{"result": {"time": "2021-02-21 13:08:31.060680", "n_pass": [608, 104, 59], "n_token": 63, "loss": [0.5234931707382202, 0.07604783028364182], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["dc", "pillarenv", "dc", "dc", "mappings", "=", "dc", ".", "dc", "=", "dc", ")", "dc", "#NEWLINE#", "(", "mappings", "pillarenv", ")", "sorted_mappings", "=", "mappings", ",", "pattern", "target", "dc", "#INDENT#", "match", ".", "match", "(", "pattern", ",", "pillarenv", "if", "match", "(", "pattern", "=", "pattern", "#NEWLINE#", "result", "=", "target", "match", ".", "result", "=", "result", ")", "return", "result", "(", "'None of following patterns matched pillarenv={env}: {lst}'", "=", "pillarenv", ",", "lst", "x", ")", "for", "x", "in", "mappings"]}}
{"position": {"error_location": 54, "repair_targets": [18], "repair_candidates": [0, 2, 3, 6, 8, 10, 12, 24, 22, 30, 36, 38, 4, 15, 20, 62, 18, 26, 28, 34, 43, 40, 45, 47, 50, 57, 60, 23, 42, 1, 16, 32, 54]}}
{"prediction": {"error_location": 0.5924474000930786, "repair_targets": [0.926771879196167], "repair_candidates": [0.002484165597707033, 0.0004163318080827594, 0.0003244203398935497, 0.005810767412185669, 0.009472004137933254, 8.054823410930112e-06, 0.014489362016320229, 0.0008314300794154406, 0.00035115069476887584, 0.0006003130110912025, 0.0020371857099235058, 0.926771879196167, 0.0004223141586408019, 0.0005631915992125869, 0.0001505300751887262, 0.0001378927699988708, 1.5005234672571532e-06, 0.0012301658280193806, 0.0001927974954014644, 7.539586022176081e-06, 0.00017595273675397038, 0.005211677867919207, 3.0881008569849655e-05, 0.0004561530367936939, 0.00027197724557481706, 4.139817974646576e-05, 3.874550384352915e-05, 4.439767144504003e-05, 1.9340383005328476e-05, 1.1475069186417386e-05, 4.245544914738275e-06, 0.027382679283618927, 8.160597644746304e-06], "target_probs": 0.926771879196167}}


{"result": {"time": "2021-02-21 13:08:31.157556", "n_pass": [610, 105, 60], "n_token": 62, "loss": [0.40993285179138184, 0.08451595157384872], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["dc", "pillarenv", "dc", "dc", "mappings", "=", "dc", ".", "dc", "=", "dc", ")", "dc", "#NEWLINE#", "(", "mappings", "pillarenv", ")", "sorted_mappings", "=", "mappings", ",", "pattern", "target", "dc", "match", ".", "match", "(", "pattern", ",", "pillarenv", "if", "match", "(", "pattern", "=", "pattern", "#NEWLINE#", "result", "=", "target", "match", ".", "result", "=", "result", ")", "return", "result", "(", "'None of following patterns matched pillarenv={env}: {lst}'", "=", "pillarenv", ",", "lst", "x", ")", "for", "x", "in", "mappings"]}}
{"position": {"error_location": 53, "repair_targets": [18], "repair_candidates": [0, 2, 3, 6, 8, 10, 12, 24, 22, 29, 35, 37, 4, 15, 20, 61, 18, 25, 27, 33, 42, 39, 44, 46, 49, 56, 59, 23, 41, 1, 16, 31, 53]}}
{"prediction": {"error_location": 0.6636947393417358, "repair_targets": [0.918956995010376], "repair_candidates": [0.0025722666177898645, 0.000417215604102239, 0.000314573961077258, 0.005571266170591116, 0.008612304925918579, 7.999678928172216e-06, 0.013762397691607475, 0.000969916523899883, 0.00034092500573024154, 0.0005426628631539643, 0.00208577373996377, 0.918956995010376, 0.0003672736929729581, 0.0003894306719303131, 5.766232425230555e-05, 8.501336560584605e-05, 2.4954335913207615e-06, 0.001462461776100099, 0.00021809255122207105, 9.953596418199595e-06, 0.00021305304835550487, 0.007734065875411034, 3.6775541957467794e-05, 0.0006778279785066843, 0.0002896363439504057, 5.679954483639449e-05, 5.565718674915843e-05, 4.207985330140218e-05, 2.4279579520225525e-05, 1.3874159776605666e-05, 4.917777459922945e-06, 0.034094762057065964, 9.575859621691052e-06], "target_probs": 0.918956995010376}}


{"result": {"time": "2021-02-21 13:08:31.254151", "n_pass": [612, 106, 61], "n_token": 61, "loss": [0.3858565092086792, 0.12982270121574402], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["dc", "pillarenv", "dc", "dc", "mappings", "=", "dc", ".", "dc", "=", "dc", ")", "dc", "#NEWLINE#", "(", "mappings", "pillarenv", ")", "sorted_mappings", "=", "mappings", ",", "pattern", "target", "dc", "match", "match", "(", "pattern", ",", "pillarenv", "if", "match", "(", "pattern", "=", "pattern", "#NEWLINE#", "result", "=", "target", "match", ".", "result", "=", "result", ")", "return", "result", "(", "'None of following patterns matched pillarenv={env}: {lst}'", "=", "pillarenv", ",", "lst", "x", ")", "for", "x", "in", "mappings"]}}
{"position": {"error_location": 52, "repair_targets": [18], "repair_candidates": [0, 2, 3, 6, 8, 10, 12, 24, 22, 28, 34, 36, 4, 15, 20, 60, 18, 25, 26, 32, 41, 38, 43, 45, 48, 55, 58, 23, 40, 1, 16, 30, 52]}}
{"prediction": {"error_location": 0.6798681020736694, "repair_targets": [0.8782511353492737], "repair_candidates": [0.003584884572774172, 0.0006031933007761836, 0.0005044213612563908, 0.009383060038089752, 0.013535521924495697, 1.1273090422037058e-05, 0.0180386770516634, 0.0014732145937159657, 0.0004985653213225305, 0.0006747631123289466, 0.0015369903994724154, 0.8782511353492737, 0.00040707472362555563, 0.000316663266858086, 0.0001359602902084589, 0.00010764991020550951, 2.8513562938314863e-05, 1.84973978321068e-05, 2.05489486688748e-05, 6.171290351630887e-06, 0.0003121055196970701, 0.013019349426031113, 6.717094947816804e-05, 0.0010418439051136374, 0.0005220304592512548, 0.00011252773401793092, 8.108593465294689e-05, 8.289729157695547e-05, 3.69372392015066e-05, 2.4175338694476523e-05, 8.113640433293767e-06, 0.055538494139909744, 1.6442014384665526e-05], "target_probs": 0.8782511353492737}}


{"result": {"time": "2021-02-21 13:08:31.446494", "n_pass": [616, 108, 62], "n_token": 60, "loss": [0.1619439721107483, 0.4879264235496521], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["dc", "pillarenv", "dc", "dc", "mappings", "=", "dc", ".", "dc", "=", "dc", ")", "dc", "#NEWLINE#", "(", "mappings", "pillarenv", ")", "sorted_mappings", "=", "mappings", ",", "pattern", "target", "dc", "match", "match", "(", "pattern", "pillarenv", "if", "match", "(", "pattern", "=", "pattern", "#NEWLINE#", "result", "=", "target", "match", ".", "result", "=", "result", ")", "return", "result", "(", "'None of following patterns matched pillarenv={env}: {lst}'", "=", "pillarenv", ",", "lst", "x", ")", "for", "x", "in", "mappings"]}}
{"position": {"error_location": 51, "repair_targets": [18], "repair_candidates": [0, 2, 3, 6, 8, 10, 12, 24, 22, 28, 33, 35, 4, 15, 20, 59, 18, 25, 26, 31, 40, 37, 42, 44, 47, 54, 57, 23, 39, 1, 16, 29, 51]}}
{"prediction": {"error_location": 0.8504890203475952, "repair_targets": [0.6138980388641357], "repair_candidates": [0.007183018606156111, 0.0011634442489594221, 0.0010055628372356296, 0.022137638181447983, 0.03716864809393883, 2.0411858713487163e-05, 0.03274764120578766, 0.0023403449449688196, 0.0008656057179905474, 0.0009528507944196463, 0.0006383951986208558, 0.6138980388641357, 0.0009341122349724174, 0.00043233769247308373, 0.0003404534072615206, 8.531725325156003e-05, 1.4589255442842841e-05, 2.3436794435838237e-05, 1.4381957953446545e-05, 1.5555045820292435e-06, 0.0020620289724320173, 0.0591910146176815, 0.00030893218354322016, 0.0030427449382841587, 0.0012388862669467926, 0.0004059036145918071, 0.0003103605122305453, 9.743451664689928e-05, 8.684546628501266e-05, 5.594319009105675e-05, 2.0747658709296957e-05, 0.2111647129058838, 4.678143886849284e-05], "target_probs": 0.6138980388641357}}


{"result": {"time": "2021-02-21 13:08:31.729556", "n_pass": [622, 111, 63], "n_token": 59, "loss": [0.5921463966369629, 0.12947995960712433], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["dc", "pillarenv", "dc", "dc", "mappings", "=", "dc", ".", "dc", "=", "dc", ")", "dc", "#NEWLINE#", "(", "mappings", "pillarenv", ")", "sorted_mappings", "=", "mappings", ",", "pattern", "target", "dc", "match", "match", "(", "pattern", "pillarenv", "if", "match", "(", "pattern", "pattern", "#NEWLINE#", "result", "=", "target", "match", ".", "result", "=", "result", ")", "return", "result", "(", "'None of following patterns matched pillarenv={env}: {lst}'", "=", "pillarenv", ",", "lst", "x", ")", "for", "x", "in", "mappings"]}}
{"position": {"error_location": 50, "repair_targets": [18], "repair_candidates": [0, 2, 3, 6, 8, 10, 12, 24, 22, 28, 33, 34, 4, 15, 20, 58, 18, 25, 26, 31, 39, 36, 41, 43, 46, 53, 56, 23, 38, 1, 16, 29, 50]}}
{"prediction": {"error_location": 0.553138792514801, "repair_targets": [0.8785521984100342], "repair_candidates": [0.004649386741220951, 0.0007971807499416173, 0.0007002995116636157, 0.013282673433423042, 0.025790199637413025, 1.587773294886574e-05, 0.015441063791513443, 0.0017351501155644655, 0.0007915826281532645, 0.0019401483004912734, 0.004312433302402496, 0.8785521984100342, 0.0006868141354061663, 0.0003040774608962238, 0.00039343457319773734, 0.00011869578884216025, 2.6646905098459683e-05, 2.256144944112748e-05, 5.109978701511864e-06, 1.95969664673612e-06, 0.004646735731512308, 0.002234166022390127, 0.0006098991143517196, 0.00047115309280343354, 0.0019570281729102135, 0.00012363496352918446, 6.819733971497044e-05, 0.0007013462018221617, 5.1016548241022974e-05, 5.0857895985245705e-05, 1.384749702992849e-05, 0.039471689611673355, 3.284863487351686e-05], "target_probs": 0.8785521984100342}}


{"result": {"time": "2021-02-21 13:08:31.826536", "n_pass": [624, 112, 64], "n_token": 58, "loss": [0.11424533277750015, 0.34701356291770935], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["dc", "pillarenv", "dc", "dc", "mappings", "=", "dc", ".", "dc", "=", "dc", ")", "dc", "#NEWLINE#", "(", "mappings", "pillarenv", ")", "sorted_mappings", "=", "mappings", ",", "pattern", "target", "dc", "match", "match", "(", "pattern", "pillarenv", "if", "match", "(", "pattern", "pattern", "result", "=", "target", "match", ".", "result", "=", "result", ")", "return", "result", "(", "'None of following patterns matched pillarenv={env}: {lst}'", "=", "pillarenv", ",", "lst", "x", ")", "for", "x", "in", "mappings"]}}
{"position": {"error_location": 49, "repair_targets": [18], "repair_candidates": [0, 2, 3, 6, 8, 10, 12, 24, 22, 28, 33, 34, 4, 15, 20, 57, 18, 25, 26, 31, 38, 35, 40, 42, 45, 52, 55, 23, 37, 1, 16, 29, 49]}}
{"prediction": {"error_location": 0.8920391798019409, "repair_targets": [0.7067957520484924], "repair_candidates": [0.006919764913618565, 0.0011779264314100146, 0.0011004357365891337, 0.023923490196466446, 0.04312009736895561, 2.0391735233715735e-05, 0.03079337440431118, 0.002076552016660571, 0.0009168785181827843, 0.0014386881375685334, 0.0011409997241571546, 0.7067957520484924, 0.0009170743869617581, 0.000449866900453344, 0.0007388860103674233, 9.018458513310179e-05, 1.4339663721329998e-05, 1.9210050595575012e-05, 1.1021025784430094e-05, 2.069211859634379e-06, 0.0026902721729129553, 0.001969711622223258, 0.0052340528927743435, 0.0008557232795283198, 0.004939949605613947, 0.00035899007343687117, 0.00010403430496808141, 0.0003512790717650205, 6.774665234843269e-05, 3.2143791031558067e-05, 1.3664355719811283e-05, 0.16166405379772186, 5.145427712704986e-05], "target_probs": 0.7067957520484924}}


{"result": {"time": "2021-02-21 13:08:31.921264", "n_pass": [626, 113, 65], "n_token": 57, "loss": [0.02873021550476551, 0.3096611797809601], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["dc", "pillarenv", "dc", "dc", "mappings", "=", "dc", ".", "dc", "=", "dc", ")", "dc", "#NEWLINE#", "(", "mappings", "pillarenv", ")", "sorted_mappings", "=", "mappings", ",", "pattern", "target", "dc", "match", "match", "(", "pattern", "pillarenv", "if", "match", "(", "pattern", "pattern", "result", "target", "match", ".", "result", "=", "result", ")", "return", "result", "(", "'None of following patterns matched pillarenv={env}: {lst}'", "=", "pillarenv", ",", "lst", "x", ")", "for", "x", "in", "mappings"]}}
{"position": {"error_location": 48, "repair_targets": [18], "repair_candidates": [0, 2, 3, 6, 8, 10, 12, 24, 22, 28, 33, 34, 4, 15, 20, 56, 18, 25, 26, 31, 37, 35, 39, 41, 44, 51, 54, 23, 36, 1, 16, 29, 48]}}
{"prediction": {"error_location": 0.9716785550117493, "repair_targets": [0.7336955070495605], "repair_candidates": [0.008511544205248356, 0.0016074477462098002, 0.001730388030409813, 0.03370188921689987, 0.05256766453385353, 3.0504284950438887e-05, 0.042542047798633575, 0.003122490830719471, 0.001514333300292492, 0.0029515004716813564, 0.002893980359658599, 0.7336955070495605, 0.0023679223377257586, 0.0019300285493955016, 0.0007926934049464762, 0.00015275388432200998, 1.88800895557506e-05, 1.1864054613397457e-05, 1.5222245565382764e-05, 1.6655401395837544e-06, 0.0008100009290501475, 0.0019285636954009533, 0.0018924906617030501, 0.00019029287796001881, 0.004835174884647131, 0.003306226572021842, 4.3222320528002456e-05, 0.0002769717830233276, 7.932518929010257e-05, 1.7242533431272022e-05, 9.474919352214783e-06, 0.0963972881436348, 5.337325274012983e-05], "target_probs": 0.7336955070495605}}


{"result": {"time": "2021-02-21 13:08:32.202913", "n_pass": [633, 116, 66], "n_token": 56, "loss": [0.029429949820041656, 0.2712271213531494], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["dc", "pillarenv", "dc", "dc", "mappings", "=", "dc", ".", "dc", "=", "dc", ")", "dc", "#NEWLINE#", "(", "mappings", "pillarenv", ")", "sorted_mappings", "=", "mappings", ",", "pattern", "target", "dc", "match", "match", "(", "pattern", "pillarenv", "if", "match", "(", "pattern", "pattern", "result", "target", "match", ".", "result", "=", "result", "return", "result", "(", "'None of following patterns matched pillarenv={env}: {lst}'", "=", "pillarenv", ",", "lst", "x", ")", "for", "x", "in", "mappings"]}}
{"position": {"error_location": 47, "repair_targets": [18], "repair_candidates": [0, 2, 3, 6, 8, 10, 12, 24, 22, 28, 33, 34, 4, 15, 20, 55, 18, 25, 26, 31, 37, 35, 39, 41, 43, 50, 53, 23, 36, 1, 16, 29, 47]}}
{"prediction": {"error_location": 0.9709987640380859, "repair_targets": [0.7624433040618896], "repair_candidates": [0.007825210690498352, 0.0015181094640865922, 0.0016920487396419048, 0.031673774123191833, 0.04696723073720932, 2.921630220953375e-05, 0.03982072323560715, 0.003005721140652895, 0.0014800503849983215, 0.0033790101297199726, 0.0031036476138979197, 0.7624433040618896, 0.0023576992098242044, 0.0021399366669356823, 0.0006212722510099411, 0.00014960236148908734, 1.7817443222156726e-05, 1.1366140824975446e-05, 1.441635140508879e-05, 1.552844992147584e-06, 0.0004785527125932276, 0.001176077639684081, 0.001056209090165794, 0.00010263014701195061, 0.0024233204312622547, 0.001938541536219418, 5.0909933634102345e-05, 0.00010330830264138058, 7.637043745489791e-05, 1.5083101061463822e-05, 6.949533144506859e-06, 0.0842815712094307, 3.875679976772517e-05], "target_probs": 0.7624433040618896}}


{"result": {"time": "2021-02-21 13:08:32.295941", "n_pass": [634, 117, 67], "n_token": 55, "loss": [0.03993796557188034, 0.34911465644836426], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["dc", "pillarenv", "dc", "dc", "mappings", "=", "dc", ".", "dc", "=", "dc", ")", "dc", "#NEWLINE#", "(", "mappings", "pillarenv", ")", "sorted_mappings", "=", "mappings", ",", "pattern", "target", "dc", "match", "match", "(", "pattern", "pillarenv", "if", "match", "(", "pattern", "pattern", "result", "target", "match", ".", "result", "=", "result", "result", "(", "'None of following patterns matched pillarenv={env}: {lst}'", "=", "pillarenv", ",", "lst", "x", ")", "for", "x", "in", "mappings"]}}
{"position": {"error_location": 46, "repair_targets": [18], "repair_candidates": [0, 2, 3, 6, 8, 10, 12, 24, 22, 28, 33, 34, 4, 15, 20, 54, 18, 25, 26, 31, 37, 35, 39, 41, 42, 49, 52, 23, 36, 1, 16, 29, 46]}}
{"prediction": {"error_location": 0.9608491659164429, "repair_targets": [0.7053122520446777], "repair_candidates": [0.00886529590934515, 0.0017244828632101417, 0.001953913364559412, 0.03714046627283096, 0.055425237864255905, 3.295221540611237e-05, 0.04607035964727402, 0.0033540737349539995, 0.0016917388420552015, 0.003615959081798792, 0.0037168865092098713, 0.7053122520446777, 0.0024061882868409157, 0.0016539499629288912, 0.000592041586060077, 0.00013042429054621607, 1.6806943676783703e-05, 1.1898387128894683e-05, 2.2003077901899815e-05, 2.0332670374045847e-06, 0.00048582881572656333, 0.0014634680701419711, 0.0013902336359024048, 0.00013438395399134606, 0.0023681900929659605, 0.004410106223076582, 2.8813612516387366e-05, 4.6184180973796174e-05, 1.1383334822312463e-05, 1.8861968783312477e-05, 9.29159523366252e-06, 0.11585096269845963, 4.3325944716343656e-05], "target_probs": 0.7053122520446777}}


{"result": {"time": "2021-02-21 13:08:32.388746", "n_pass": [636, 118, 68], "n_token": 54, "loss": [0.3395852744579315, 0.26808401942253113], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["dc", "pillarenv", "dc", "dc", "mappings", "=", "dc", ".", "dc", "=", "dc", ")", "dc", "#NEWLINE#", "(", "mappings", "pillarenv", ")", "sorted_mappings", "=", "mappings", ",", "pattern", "target", "dc", "match", "match", "(", "pattern", "pillarenv", "if", "match", "(", "pattern", "pattern", "result", "target", "match", ".", "result", "=", "result", "result", "'None of following patterns matched pillarenv={env}: {lst}'", "=", "pillarenv", ",", "lst", "x", ")", "for", "x", "in", "mappings"]}}
{"position": {"error_location": 45, "repair_targets": [18], "repair_candidates": [0, 2, 3, 6, 8, 10, 12, 24, 22, 28, 33, 34, 4, 15, 20, 53, 18, 25, 26, 31, 37, 35, 39, 41, 42, 48, 51, 23, 36, 1, 16, 29, 45]}}
{"prediction": {"error_location": 0.7120655179023743, "repair_targets": [0.7648435235023499], "repair_candidates": [0.007857193239033222, 0.0015381143894046545, 0.001757025602273643, 0.03230403736233711, 0.0466054268181324, 3.076189022976905e-05, 0.041259657591581345, 0.003147134790197015, 0.0016868201782926917, 0.004342453554272652, 0.004030238371342421, 0.7648435235023499, 0.002149656182155013, 0.0015655175084248185, 0.0005805292166769505, 0.00014651160745415837, 1.84767250175355e-05, 1.1552441719686612e-05, 2.055672121059615e-05, 1.6956156514424947e-06, 0.00023677220451645553, 0.0007264380692504346, 0.0004764078767038882, 3.659909634734504e-05, 0.0007309886277653277, 0.0003923556942027062, 7.158467633416876e-05, 0.0003302844415884465, 5.670168684446253e-05, 2.3585396775160916e-05, 1.0384528650320135e-05, 0.08296361565589905, 4.7440047637792304e-05], "target_probs": 0.7648435235023499}}


{"result": {"time": "2021-02-21 13:08:32.756182", "n_pass": [641, 122, 69], "n_token": 53, "loss": [0.5897218585014343, 0.3734417259693146], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["dc", "pillarenv", "dc", "dc", "mappings", "=", "dc", ".", "dc", "=", "dc", ")", "dc", "#NEWLINE#", "(", "mappings", "pillarenv", ")", "sorted_mappings", "=", "mappings", ",", "pattern", "target", "dc", "match", "match", "(", "pattern", "pillarenv", "if", "match", "(", "pattern", "pattern", "result", "target", "match", ".", "result", "=", "result", "result", "'None of following patterns matched pillarenv={env}: {lst}'", "=", "pillarenv", ",", "x", ")", "for", "x", "in", "mappings"]}}
{"position": {"error_location": 45, "repair_targets": [18], "repair_candidates": [0, 2, 3, 6, 8, 10, 12, 24, 22, 28, 33, 34, 4, 15, 20, 52, 18, 25, 26, 31, 37, 35, 39, 41, 42, 47, 50, 23, 36, 1, 16, 29, 45]}}
{"prediction": {"error_location": 0.554481565952301, "repair_targets": [0.6883611083030701], "repair_candidates": [0.01292824000120163, 0.0025925200898200274, 0.0030496588442474604, 0.05361461266875267, 0.08126318454742432, 5.26382755197119e-05, 0.07390034943819046, 0.006705926265567541, 0.0026657748967409134, 0.007251076865941286, 0.006816279608756304, 0.6883611083030701, 0.003316177986562252, 0.0017457737121731043, 0.0008241797331720591, 0.00020259935990907252, 2.2765536414226517e-05, 1.5480629372177646e-05, 3.092529732384719e-05, 2.194736453020596e-06, 0.00018867109611164778, 0.000627968751359731, 0.0006298369844444096, 5.1410868763923645e-05, 0.0008133938536047935, 0.0004522640665527433, 0.0002484181895852089, 0.0007208387833088636, 0.0002215239219367504, 5.9689431509468704e-05, 3.0141231036395766e-05, 0.05051496997475624, 7.931613072287291e-05], "target_probs": 0.6883611083030701}}


{"result": {"time": "2021-02-21 13:08:32.847844", "n_pass": [643, 123, 70], "n_token": 52, "loss": [0.37702175974845886, 0.4272465109825134], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["dc", "pillarenv", "dc", "dc", "mappings", "=", "dc", ".", "dc", "=", "dc", ")", "dc", "#NEWLINE#", "(", "mappings", "pillarenv", ")", "sorted_mappings", "=", "mappings", ",", "pattern", "target", "dc", "match", "match", "(", "pattern", "pillarenv", "if", "match", "(", "pattern", "pattern", "result", "target", "match", ".", "result", "=", "result", "result", "'None of following patterns matched pillarenv={env}: {lst}'", "=", "pillarenv", ",", "x", "for", "x", "in", "mappings"]}}
{"position": {"error_location": 45, "repair_targets": [18], "repair_candidates": [0, 2, 3, 6, 8, 10, 12, 24, 22, 28, 33, 34, 4, 15, 20, 51, 18, 25, 26, 31, 37, 35, 39, 41, 42, 47, 49, 23, 36, 1, 16, 29, 45]}}
{"prediction": {"error_location": 0.6859011054039001, "repair_targets": [0.6523027420043945], "repair_candidates": [0.015582507476210594, 0.003082588082179427, 0.0034878505393862724, 0.0619751513004303, 0.1006820872426033, 6.308289448497817e-05, 0.07255633175373077, 0.008405819535255432, 0.0028905507642775774, 0.008918216452002525, 0.008182356134057045, 0.6523027420043945, 0.0034924305509775877, 0.0019082975341007113, 0.0010687269968912005, 0.0002046436711680144, 2.6726722353487276e-05, 1.881469870568253e-05, 4.162115146755241e-05, 2.7854052859765943e-06, 0.00018383265705779195, 0.0007667503668926656, 0.0009275746415369213, 6.548332021338865e-05, 0.0007044845260679722, 0.0001816032745409757, 0.00038898151251487434, 0.0007844098145142198, 0.0003508180088829249, 6.438919808715582e-05, 7.29840321582742e-05, 0.050575222820043564, 4.015226295450702e-05], "target_probs": 0.6523027420043945}}


{"result": {"time": "2021-02-21 13:08:32.941033", "n_pass": [644, 124, 71], "n_token": 51, "loss": [0.612472653388977, 0.39321884512901306], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["dc", "pillarenv", "dc", "dc", "mappings", "=", "dc", ".", "dc", "=", "dc", ")", "dc", "#NEWLINE#", "(", "mappings", "pillarenv", ")", "sorted_mappings", "=", "mappings", ",", "pattern", "target", "dc", "match", "match", "(", "pattern", "pillarenv", "if", "match", "(", "pattern", "pattern", "result", "target", "match", ".", "result", "=", "result", "result", "'None of following patterns matched pillarenv={env}: {lst}'", "=", "pillarenv", ",", "x", "x", "in", "mappings"]}}
{"position": {"error_location": 45, "repair_targets": [18], "repair_candidates": [0, 2, 3, 6, 8, 10, 12, 24, 22, 28, 33, 34, 4, 15, 20, 50, 18, 25, 26, 31, 37, 35, 39, 41, 42, 47, 48, 23, 36, 1, 16, 29, 45]}}
{"prediction": {"error_location": 0.5420089960098267, "repair_targets": [0.6748810410499573], "repair_candidates": [0.017407534644007683, 0.0034627201966941357, 0.003917255438864231, 0.06291712075471878, 0.09220000356435776, 7.573849870823324e-05, 0.10200535506010056, 0.009765822440385818, 0.004049623850733042, 0.00940370000898838, 0.009398899041116238, 0.6748810410499573, 0.003230574307963252, 0.0020882219541817904, 0.0008094304939731956, 0.0002608709328342229, 3.338065289426595e-05, 2.0486786524998024e-05, 4.098445788258687e-05, 2.898616912716534e-06, 0.00019780336879193783, 0.0008589654462412, 0.0007736423867754638, 5.5183234508149326e-05, 0.0006937081343494356, 0.0002676623989827931, 0.00023015280021354556, 0.0004618347156792879, 0.00010723932791734114, 7.159884989960119e-05, 0.00016653028433211148, 0.00010195958748226985, 4.208874815958552e-05], "target_probs": 0.6748810410499573}}


{"result": {"time": "2021-02-21 13:08:33.123150", "n_pass": [653, 126, 72], "n_token": 50, "loss": [0.6978660225868225, 0.35210973024368286], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["dc", "pillarenv", "dc", "dc", "mappings", "dc", ".", "dc", "=", "dc", ")", "dc", "#NEWLINE#", "(", "mappings", "pillarenv", ")", "sorted_mappings", "=", "mappings", ",", "pattern", "target", "dc", "match", "match", "(", "pattern", "pillarenv", "if", "match", "(", "pattern", "pattern", "result", "target", "match", ".", "result", "=", "result", "result", "'None of following patterns matched pillarenv={env}: {lst}'", "=", "pillarenv", ",", "x", "x", "in", "mappings"]}}
{"position": {"error_location": 44, "repair_targets": [17], "repair_candidates": [0, 2, 3, 5, 7, 9, 11, 23, 21, 27, 32, 33, 4, 14, 19, 49, 17, 24, 25, 30, 36, 34, 38, 40, 41, 46, 47, 22, 35, 1, 15, 28, 44]}}
{"prediction": {"error_location": 0.49764615297317505, "repair_targets": [0.7032029628753662], "repair_candidates": [0.017665619030594826, 0.004376120399683714, 0.004315331112593412, 0.015369421802461147, 0.004259984940290451, 0.00010371071402914822, 0.19820518791675568, 0.008336752653121948, 0.0040902988985180855, 0.010940786451101303, 0.011662805452942848, 0.7032029628753662, 0.007324150763452053, 0.004874945152550936, 0.00106993003282696, 0.00032054950133897364, 4.73269319627434e-05, 2.021694672293961e-05, 4.845988587476313e-05, 3.427949422984966e-06, 0.00016329449135810137, 0.000658634991850704, 0.0005703605129383504, 6.171077257022262e-05, 0.0007853436982259154, 0.00024197429593186826, 0.0002314757730346173, 0.0005275043076835573, 0.00010063967056339607, 6.157685129437596e-05, 0.00019698409596458077, 0.00011769077536882833, 4.479161725612357e-05], "target_probs": 0.7032029628753662}}


{"result": {"time": "2021-02-21 13:08:33.213599", "n_pass": [655, 127, 73], "n_token": 49, "loss": [0.5166738629341125, 0.2876814305782318], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["dc", "pillarenv", "dc", "dc", "mappings", "dc", "dc", "=", "dc", ")", "dc", "#NEWLINE#", "(", "mappings", "pillarenv", ")", "sorted_mappings", "=", "mappings", ",", "pattern", "target", "dc", "match", "match", "(", "pattern", "pillarenv", "if", "match", "(", "pattern", "pattern", "result", "target", "match", ".", "result", "=", "result", "result", "'None of following patterns matched pillarenv={env}: {lst}'", "=", "pillarenv", ",", "x", "x", "in", "mappings"]}}
{"position": {"error_location": 43, "repair_targets": [16], "repair_candidates": [0, 2, 3, 5, 6, 8, 10, 22, 20, 26, 31, 32, 4, 13, 18, 48, 16, 23, 24, 29, 35, 33, 37, 39, 40, 45, 46, 21, 34, 1, 14, 27, 43]}}
{"prediction": {"error_location": 0.5965014100074768, "repair_targets": [0.7500004768371582], "repair_candidates": [0.01763637736439705, 0.006220064591616392, 0.004489181097596884, 0.015470725484192371, 0.008590513840317726, 0.020129263401031494, 0.14178408682346344, 0.0006735515198670328, 0.0015517933061346412, 0.010236830450594425, 0.009692683815956116, 0.7500004768371582, 0.003402562579140067, 0.003972016274929047, 0.0015815314836800098, 0.00043025403283536434, 4.077369885635562e-05, 2.25062103709206e-05, 4.198030728730373e-05, 3.7627260098815896e-06, 0.00025329101481474936, 0.0009265663102269173, 0.0005949345650151372, 4.92738327011466e-05, 0.0007737846462987363, 0.0002734626177698374, 0.00029966444708406925, 0.0003227029519621283, 0.00011358100164216012, 4.981188612873666e-05, 0.00019167570280842483, 0.00013457612658385187, 4.566089774016291e-05], "target_probs": 0.7500004768371582}}


{"result": {"time": "2021-02-21 13:08:33.304655", "n_pass": [657, 128, 74], "n_token": 48, "loss": [0.46458154916763306, 0.09757240861654282], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["dc", "pillarenv", "dc", "dc", "mappings", "dc", "dc", "dc", ")", "dc", "#NEWLINE#", "(", "mappings", "pillarenv", ")", "sorted_mappings", "=", "mappings", ",", "pattern", "target", "dc", "match", "match", "(", "pattern", "pillarenv", "if", "match", "(", "pattern", "pattern", "result", "target", "match", ".", "result", "=", "result", "result", "'None of following patterns matched pillarenv={env}: {lst}'", "=", "pillarenv", ",", "x", "x", "in", "mappings"]}}
{"position": {"error_location": 42, "repair_targets": [15], "repair_candidates": [0, 2, 3, 5, 6, 7, 9, 21, 19, 25, 30, 31, 4, 12, 17, 47, 15, 22, 23, 28, 34, 32, 36, 38, 39, 44, 45, 20, 33, 1, 13, 26, 42]}}
{"prediction": {"error_location": 0.6283980011940002, "repair_targets": [0.9070366621017456], "repair_candidates": [0.01643115095794201, 0.010592476464807987, 0.0050574252381920815, 0.006461707875132561, 0.00206524645909667, 0.0011296571465209126, 0.001137418788857758, 0.0010457171592861414, 0.021863654255867004, 0.0056648170575499535, 0.008513347245752811, 0.9070366621017456, 0.0048802816309034824, 0.004354151897132397, 0.0010089031420648098, 0.00032883050153031945, 4.426575469551608e-05, 1.6620759197394364e-05, 3.1118102924665436e-05, 2.6572959086479386e-06, 0.00014195834228303283, 0.0005533671355806291, 0.0002847992873284966, 3.049547922273632e-05, 0.0004393713315948844, 0.0001755537959979847, 0.00013132570893503726, 0.00032827339600771666, 6.494134868262336e-05, 3.492528048809618e-05, 9.159009641734883e-05, 4.0012295357882977e-05, 1.7289779862039723e-05], "target_probs": 0.9070366621017456}}


{"result": {"time": "2021-02-21 13:08:33.393701", "n_pass": [659, 129, 75], "n_token": 47, "loss": [0.7599543333053589, 0.0898142009973526], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["dc", "pillarenv", "dc", "dc", "mappings", "dc", "dc", "dc", "dc", "#NEWLINE#", "(", "mappings", "pillarenv", ")", "sorted_mappings", "=", "mappings", ",", "pattern", "target", "dc", "match", "match", "(", "pattern", "pillarenv", "if", "match", "(", "pattern", "pattern", "result", "target", "match", ".", "result", "=", "result", "result", "'None of following patterns matched pillarenv={env}: {lst}'", "=", "pillarenv", ",", "x", "x", "in", "mappings"]}}
{"position": {"error_location": 41, "repair_targets": [14], "repair_candidates": [0, 2, 3, 5, 6, 7, 8, 20, 18, 24, 29, 30, 4, 11, 16, 46, 14, 21, 22, 27, 33, 31, 35, 37, 38, 43, 44, 19, 32, 1, 12, 25, 41]}}
{"prediction": {"error_location": 0.46768778562545776, "repair_targets": [0.9141010046005249], "repair_candidates": [0.0180934127420187, 0.01656264439225197, 0.010679774917662144, 0.009143956936895847, 0.002650577574968338, 0.0010950471041724086, 0.0009684311808086932, 0.0013801116729155183, 0.0023869068827480078, 0.0025072582066059113, 0.002792330924421549, 0.9141010046005249, 0.009202750399708748, 0.006855603773146868, 0.0005403520190156996, 0.0001590777246747166, 2.1291365555953234e-05, 7.569880835944787e-06, 1.0106828085554298e-05, 9.155778002423176e-07, 6.384459265973419e-05, 0.00014523696154356003, 9.975147986551747e-05, 1.0843828931683674e-05, 0.0001553692709421739, 6.402947474271059e-05, 6.366000889101997e-05, 0.00015460894792340696, 2.297184801136609e-05, 1.4881471543048974e-05, 3.020923577423673e-05, 9.840949132922105e-06, 5.661895556841046e-06], "target_probs": 0.9141010046005249}}


{"result": {"time": "2021-02-21 13:08:33.482648", "n_pass": [661, 130, 76], "n_token": 46, "loss": [0.6254610419273376, 0.07993138581514359], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["dc", "pillarenv", "dc", "dc", "mappings", "dc", "dc", "dc", "dc", "(", "mappings", "pillarenv", ")", "sorted_mappings", "=", "mappings", ",", "pattern", "target", "dc", "match", "match", "(", "pattern", "pillarenv", "if", "match", "(", "pattern", "pattern", "result", "target", "match", ".", "result", "=", "result", "result", "'None of following patterns matched pillarenv={env}: {lst}'", "=", "pillarenv", ",", "x", "x", "in", "mappings"]}}
{"position": {"error_location": 40, "repair_targets": [13], "repair_candidates": [0, 2, 3, 5, 6, 7, 8, 19, 17, 23, 28, 29, 4, 10, 15, 45, 13, 20, 21, 26, 32, 30, 34, 36, 37, 42, 43, 18, 31, 1, 11, 24, 40]}}
{"prediction": {"error_location": 0.5350146889686584, "repair_targets": [0.9231796860694885], "repair_candidates": [0.018068963661789894, 0.005001112353056669, 0.002547598909586668, 0.006309094838798046, 0.003988128155469894, 0.002404608763754368, 0.0017493859631940722, 0.0012806534068658948, 0.0031811732333153486, 0.0022862700279802084, 0.0031647486612200737, 0.9231796860694885, 0.010502214543521404, 0.009429960511624813, 0.0021953415125608444, 0.0005381545051932335, 5.328135739546269e-05, 2.4616090740892105e-05, 4.6034059778321534e-05, 3.970676061726408e-06, 0.00026808457914739847, 0.0009585548541508615, 0.0005418650107458234, 5.767388574895449e-05, 0.00074347312329337, 0.00019709134357981384, 0.00029675985570065677, 0.00046711103641428053, 0.00012645352398976684, 6.632338772760704e-05, 0.00018314360931981355, 9.692920866655186e-05, 4.1528503061272204e-05], "target_probs": 0.9231796860694885}}


{"result": {"time": "2021-02-21 13:08:33.570784", "n_pass": [662, 131, 77], "n_token": 45, "loss": [0.08584694564342499, 0.3802555501461029], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["dc", "pillarenv", "dc", "dc", "mappings", "dc", "dc", "dc", "dc", "mappings", "pillarenv", ")", "sorted_mappings", "=", "mappings", ",", "pattern", "target", "dc", "match", "match", "(", "pattern", "pillarenv", "if", "match", "(", "pattern", "pattern", "result", "target", "match", ".", "result", "=", "result", "result", "'None of following patterns matched pillarenv={env}: {lst}'", "=", "pillarenv", ",", "x", "x", "in", "mappings"]}}
{"position": {"error_location": 39, "repair_targets": [12], "repair_candidates": [0, 2, 3, 5, 6, 7, 8, 18, 16, 22, 27, 28, 4, 9, 14, 44, 12, 19, 20, 25, 31, 29, 33, 35, 36, 41, 42, 17, 30, 1, 10, 23, 39]}}
{"prediction": {"error_location": 0.9177345633506775, "repair_targets": [0.6836866736412048], "repair_candidates": [0.017843099310994148, 0.00824524275958538, 0.0026995702646672726, 0.0019570286385715008, 0.0011429287260398269, 0.0007192392367869616, 0.0008209628285840154, 0.0018252814188599586, 0.010472053661942482, 0.0635407492518425, 0.12841641902923584, 0.6836866736412048, 0.033336881548166275, 0.03926672786474228, 0.0036522014997899532, 0.0003881035663653165, 3.422433655941859e-05, 2.1049141651019454e-05, 9.452206541027408e-06, 1.3888472949474817e-06, 0.0002258246240671724, 0.0001769877999322489, 0.00036452594213187695, 1.7006686903187074e-05, 0.0002751137362793088, 0.0002399742661509663, 0.0004140886594541371, 0.00011764375813072547, 3.737564475159161e-05, 1.7240863598999567e-05, 2.2637243091594428e-05, 8.528272701369133e-06, 3.7797558434249368e-06], "target_probs": 0.6836866736412048}}


{"result": {"time": "2021-02-21 13:08:33.659637", "n_pass": [665, 132, 78], "n_token": 44, "loss": [0.34094667434692383, 0.6457728147506714], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["dc", "pillarenv", "dc", "dc", "mappings", "dc", "dc", "dc", "dc", "mappings", "pillarenv", "sorted_mappings", "=", "mappings", ",", "pattern", "target", "dc", "match", "match", "(", "pattern", "pillarenv", "if", "match", "(", "pattern", "pattern", "result", "target", "match", ".", "result", "=", "result", "result", "'None of following patterns matched pillarenv={env}: {lst}'", "=", "pillarenv", ",", "x", "x", "in", "mappings"]}}
{"position": {"error_location": 38, "repair_targets": [11], "repair_candidates": [0, 2, 3, 5, 6, 7, 8, 17, 15, 21, 26, 27, 4, 9, 13, 43, 11, 18, 19, 24, 30, 28, 32, 34, 35, 40, 41, 16, 29, 1, 10, 22, 38]}}
{"prediction": {"error_location": 0.7110968232154846, "repair_targets": [0.524257242679596], "repair_candidates": [0.027943676337599754, 0.013624892570078373, 0.004878312814980745, 0.0022648796439170837, 0.0011568067129701376, 0.000542611931450665, 0.0004616797377821058, 0.0008751563727855682, 0.004544629715383053, 0.052343592047691345, 0.33608123660087585, 0.524257242679596, 0.01713314652442932, 0.011968422681093216, 0.000661035010125488, 0.00023054056509863585, 4.3067833757959306e-05, 1.2563094969664235e-05, 7.138017281249631e-06, 9.749512628332013e-07, 7.44855497032404e-05, 8.339391206391156e-05, 0.0001170711693703197, 1.530415829620324e-05, 0.00017815573664847761, 5.8932349929818884e-05, 0.0001763687323546037, 0.00020631060760933906, 2.301685162819922e-05, 1.5038236597320065e-05, 1.1749357327062171e-05, 5.3372687034425326e-06, 3.2477526019647485e-06], "target_probs": 0.524257242679596}}


{"result": {"time": "2021-02-21 13:08:34.094241", "n_pass": [680, 137, 79], "n_token": 43, "loss": [0.17612811923027039, 0.5099659562110901], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["dc", "pillarenv", "dc", "dc", "mappings", "dc", "dc", "dc", "dc", "mappings", "pillarenv", "sorted_mappings", "=", "mappings", ",", "pattern", "target", "dc", "match", "match", "(", "pattern", "pillarenv", "if", "match", "pattern", "pattern", "result", "target", "match", ".", "result", "=", "result", "result", "'None of following patterns matched pillarenv={env}: {lst}'", "=", "pillarenv", ",", "x", "x", "in", "mappings"]}}
{"position": {"error_location": 37, "repair_targets": [11], "repair_candidates": [0, 2, 3, 5, 6, 7, 8, 17, 15, 21, 25, 26, 4, 9, 13, 42, 11, 18, 19, 24, 29, 27, 31, 33, 34, 39, 40, 16, 28, 1, 10, 22, 37]}}
{"prediction": {"error_location": 0.8385104537010193, "repair_targets": [0.6005160212516785], "repair_candidates": [0.015776678919792175, 0.006981274113059044, 0.0025807274505496025, 0.0013580563245341182, 0.0007446510135196149, 0.0004053017182741314, 0.0004083576495759189, 0.0010754590621218085, 0.00667833024635911, 0.05837743356823921, 0.2873566150665283, 0.6005160212516785, 0.006997945252805948, 0.008983397856354713, 0.0003251179587095976, 0.0001339056616416201, 2.060538827208802e-05, 5.527584562514676e-06, 3.6646208627644228e-06, 9.502942361905298e-07, 4.361444734968245e-05, 2.8974127417313866e-05, 0.0005369631107896566, 2.0757652237080038e-05, 0.00012480260920710862, 5.28976961504668e-05, 0.0002797408669721335, 0.00013703081640414894, 2.2602744138566777e-05, 1.1094464753114153e-05, 6.821855095040519e-06, 2.914288188549108e-06, 1.7541640318086138e-06], "target_probs": 0.6005160212516785}}


{"result": {"time": "2021-02-21 13:08:34.266572", "n_pass": [688, 139, 80], "n_token": 42, "loss": [0.08012725412845612, 0.36185145378112793], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["dc", "pillarenv", "dc", "dc", "mappings", "dc", "dc", "dc", "dc", "mappings", "pillarenv", "sorted_mappings", "=", "mappings", ",", "pattern", "target", "dc", "match", "match", "(", "pattern", "pillarenv", "if", "match", "pattern", "pattern", "result", "target", "match", ".", "result", "result", "result", "'None of following patterns matched pillarenv={env}: {lst}'", "=", "pillarenv", ",", "x", "x", "in", "mappings"]}}
{"position": {"error_location": 36, "repair_targets": [11], "repair_candidates": [0, 2, 3, 5, 6, 7, 8, 17, 15, 21, 25, 26, 4, 9, 13, 41, 11, 18, 19, 24, 29, 27, 31, 32, 33, 38, 39, 16, 28, 1, 10, 22, 36]}}
{"prediction": {"error_location": 0.9229989051818848, "repair_targets": [0.6963858008384705], "repair_candidates": [0.02471497841179371, 0.012535925023257732, 0.00918050017207861, 0.01020343042910099, 0.004039125517010689, 0.0032348940148949623, 0.003965095151215792, 0.013599696569144726, 0.00611157575622201, 0.022936886176466942, 0.15636584162712097, 0.6963858008384705, 0.002978529781103134, 0.013892361894249916, 0.0026471554301679134, 0.0014895036583766341, 0.00019739916024263948, 5.955332744633779e-05, 0.00010421526530990377, 1.1315466508676764e-05, 0.0019882903434336185, 0.002903697546571493, 0.006110908463597298, 0.000559572596102953, 0.0002999215212184936, 0.00019936275202780962, 0.0011551493080332875, 0.0006960866157896817, 0.0012153913266956806, 5.854622577317059e-05, 0.00010176191426580772, 4.209549297229387e-05, 1.5438614354934543e-05], "target_probs": 0.6963858008384705}}


{"result": {"time": "2021-02-21 13:08:34.354480", "n_pass": [691, 140, 81], "n_token": 41, "loss": [0.5031383037567139, 0.5561015605926514], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["dc", "pillarenv", "dc", "dc", "mappings", "dc", "dc", "dc", "dc", "mappings", "pillarenv", "sorted_mappings", "=", "mappings", ",", "pattern", "target", "dc", "match", "match", "(", "pattern", "pillarenv", "if", "match", "pattern", "pattern", "result", "target", "match", ".", "result", "result", "result", "=", "pillarenv", ",", "x", "x", "in", "mappings"]}}
{"position": {"error_location": 35, "repair_targets": [11], "repair_candidates": [0, 2, 3, 5, 6, 7, 8, 17, 15, 21, 25, 26, 4, 9, 13, 40, 11, 18, 19, 24, 29, 27, 31, 32, 33, 37, 38, 16, 28, 1, 10, 22, 35]}}
{"prediction": {"error_location": 0.6046302318572998, "repair_targets": [0.5734402537345886], "repair_candidates": [0.01466443482786417, 0.007208812981843948, 0.003357765730470419, 0.0028054818976670504, 0.0016180393286049366, 0.0011737868189811707, 0.0014689275994896889, 0.005246183834969997, 0.016116997227072716, 0.05835297703742981, 0.26153504848480225, 0.5734402537345886, 0.013839250430464745, 0.01624772697687149, 0.0008888432057574391, 0.00035189633490517735, 4.3946180085185915e-05, 2.0363448129501194e-05, 1.3092327208141796e-05, 2.6194340989604825e-06, 8.684763452038169e-05, 0.0004848672542721033, 0.019888335838913918, 0.0003960255708079785, 0.0001220712292706594, 7.080298382788897e-05, 0.0001741333690006286, 0.00017756818851921707, 0.0001505104301031679, 6.689011115668109e-06, 1.948311910382472e-05, 2.1959149307804182e-05, 4.300829914427595e-06], "target_probs": 0.5734402537345886}}


{"result": {"time": "2021-02-21 13:08:34.609153", "n_pass": [697, 143, 82], "n_token": 40, "loss": [0.38172465562820435, 0.4209950566291809], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["dc", "pillarenv", "dc", "dc", "mappings", "dc", "dc", "dc", "dc", "mappings", "pillarenv", "sorted_mappings", "=", "mappings", ",", "pattern", "target", "dc", "match", "match", "(", "pattern", "pillarenv", "if", "match", "pattern", "pattern", "result", "target", "match", ".", "result", "result", "result", "=", "pillarenv", ",", "x", "x", "mappings"]}}
{"position": {"error_location": 35, "repair_targets": [11], "repair_candidates": [0, 2, 3, 5, 6, 7, 8, 17, 15, 21, 25, 26, 4, 9, 13, 39, 11, 18, 19, 24, 29, 27, 31, 32, 33, 37, 38, 16, 28, 1, 10, 22, 35]}}
{"prediction": {"error_location": 0.6826829314231873, "repair_targets": [0.6563933491706848], "repair_candidates": [0.013035854324698448, 0.0062944116070866585, 0.0032875819597393274, 0.002448794897645712, 0.0012757377699017525, 0.0008972028736025095, 0.0010331150842830539, 0.00455480394884944, 0.013278952799737453, 0.05487809702754021, 0.21719059348106384, 0.6563933491706848, 0.008732117712497711, 0.008985632099211216, 0.0004639523976948112, 0.00020874463371001184, 2.9889983125030994e-05, 1.3499917258741334e-05, 8.367521331820171e-06, 1.7004610981530277e-06, 4.6009477955522016e-05, 0.00011349151463946328, 0.0062629845924675465, 0.00019478618924040347, 9.37533113756217e-05, 6.647472037002444e-05, 5.26447402080521e-05, 7.191504846559837e-05, 6.563325587194413e-05, 5.123599748912966e-06, 3.5408422718319343e-06, 4.8077217797981575e-06, 6.4620853663655e-06], "target_probs": 0.6563933491706848}}


{"result": {"time": "2021-02-21 13:08:35.204131", "n_pass": [735, 150, 83], "n_token": 39, "loss": [0.08398942649364471, 0.6416746973991394], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["dc", "pillarenv", "dc", "dc", "mappings", "dc", "dc", "dc", "dc", "mappings", "pillarenv", "sorted_mappings", "=", "mappings", ",", "pattern", "target", "dc", "match", "match", "(", "pattern", "pillarenv", "if", "match", "pattern", "pattern", "result", "target", "match", ".", "result", "result", "result", "=", "pillarenv", "x", "x", "mappings"]}}
{"position": {"error_location": 35, "repair_targets": [11], "repair_candidates": [0, 2, 3, 5, 6, 7, 8, 17, 15, 21, 25, 26, 4, 9, 13, 38, 11, 18, 19, 24, 29, 27, 31, 32, 33, 36, 37, 16, 28, 1, 10, 22, 35]}}
{"prediction": {"error_location": 0.9194408655166626, "repair_targets": [0.5264101028442383], "repair_candidates": [0.03505159169435501, 0.01727270521223545, 0.008132941089570522, 0.0035703335888683796, 0.0016753800446167588, 0.0008184675825759768, 0.0007802182226441801, 0.0014298654859885573, 0.0066981143318116665, 0.06547408550977707, 0.31122082471847534, 0.5264101028442383, 0.007516747340559959, 0.00486786151304841, 0.0002934783697128296, 0.00014990594354458153, 2.362857230764348e-05, 9.932589819072746e-06, 5.043576948082773e-06, 1.2799885098502273e-06, 2.736208807618823e-05, 1.4150538845569827e-05, 0.0008392821182496846, 5.7407989515922964e-05, 7.954241300467402e-05, 8.330609125550836e-05, 8.788109698798507e-05, 0.0005587040213868022, 0.006740995217114687, 2.3408865672536194e-06, 5.000396413379349e-06, 5.044392673880793e-05, 5.10763238708023e-05], "target_probs": 0.5264101028442383}}


{"result": {"time": "2021-02-21 13:08:35.628020", "n_pass": [769, 155, 84], "n_token": 38, "loss": [0.2915209233760834, 0.384054958820343], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["dc", "pillarenv", "dc", "dc", "mappings", "dc", "dc", "dc", "dc", "mappings", "pillarenv", "sorted_mappings", "=", "mappings", ",", "pattern", "target", "dc", "match", "match", "(", "pattern", "pillarenv", "if", "match", "pattern", "pattern", "result", "target", "match", "result", "result", "result", "=", "pillarenv", "x", "x", "mappings"]}}
{"position": {"error_location": 34, "repair_targets": [11], "repair_candidates": [0, 2, 3, 5, 6, 7, 8, 17, 15, 21, 25, 26, 4, 9, 13, 37, 11, 18, 19, 24, 29, 27, 30, 31, 32, 35, 36, 16, 28, 1, 10, 22, 34]}}
{"prediction": {"error_location": 0.7471263408660889, "repair_targets": [0.6810939908027649], "repair_candidates": [0.018685879185795784, 0.007917259819805622, 0.0032827553804963827, 0.001307152328081429, 0.0005474458448588848, 0.0002064627769868821, 0.00016900118498597294, 0.00028866835054941475, 0.0016401814064010978, 0.030644943937659264, 0.2519895136356354, 0.6810939908027649, 0.0007830466493032873, 0.00042329204734414816, 4.080038706888445e-05, 2.4690016289241612e-05, 1.0410218237666413e-05, 3.6246538002160378e-06, 1.2841760508308653e-06, 3.824815735242737e-07, 6.208339073054958e-06, 1.5824222145965905e-06, 3.465055851847865e-05, 7.345376161538297e-06, 1.915824213938322e-05, 8.849342702887952e-05, 6.545301584992558e-05, 0.0002099550183629617, 0.0004428618703968823, 7.29722444248182e-07, 1.656285917306377e-06, 2.3017619241727516e-05, 3.802339779213071e-05], "target_probs": 0.6810939908027649}}


{"result": {"time": "2021-02-21 13:08:35.711605", "n_pass": [773, 156, 85], "n_token": 37, "loss": [0.5143085718154907, 0.22577586770057678], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["dc", "pillarenv", "dc", "dc", "mappings", "dc", "dc", "dc", "dc", "mappings", "pillarenv", "sorted_mappings", "=", "mappings", ",", "pattern", "target", "dc", "match", "match", "(", "pattern", "pillarenv", "if", "match", "pattern", "pattern", "result", "target", "match", "result", "result", "result", "pillarenv", "x", "x", "mappings"]}}
{"position": {"error_location": 33, "repair_targets": [11], "repair_candidates": [0, 2, 3, 5, 6, 7, 8, 17, 15, 21, 25, 26, 4, 9, 13, 36, 11, 18, 19, 24, 29, 27, 30, 31, 32, 34, 35, 16, 28, 1, 10, 22, 33]}}
{"prediction": {"error_location": 0.597913920879364, "repair_targets": [0.7978969216346741], "repair_candidates": [0.008408601395785809, 0.003024907084181905, 0.0011179004795849323, 0.00042731603025458753, 0.0001808941160561517, 6.897876301081851e-05, 4.999753582524136e-05, 9.867323387879878e-05, 0.0008519149851053953, 0.019252659752964973, 0.1681925505399704, 0.7978969216346741, 6.788544851588085e-05, 4.47393067588564e-05, 1.2214190064696595e-05, 7.930344509077258e-06, 3.5383045542403124e-06, 9.947045782610076e-07, 3.9957109265742474e-07, 1.4991350383297686e-07, 2.804520136123756e-06, 4.78192987429793e-07, 6.81140090819099e-06, 2.619638053147355e-06, 5.937327841820661e-06, 8.197460374503862e-06, 2.8885961000924e-06, 2.656966216818546e-06, 8.159992717082787e-07, 5.430452461041568e-07, 1.805745341698639e-06, 8.093017095234245e-05, 0.00017440805095247924], "target_probs": 0.7978969216346741}}


{"result": {"time": "2021-02-21 13:08:35.878579", "n_pass": [792, 158, 86], "n_token": 36, "loss": [0.4787812829017639, 0.3411562442779541], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["dc", "pillarenv", "dc", "dc", "mappings", "dc", "dc", "dc", "dc", "mappings", "pillarenv", "sorted_mappings", "=", "mappings", "pattern", "target", "dc", "match", "match", "(", "pattern", "pillarenv", "if", "match", "pattern", "pattern", "result", "target", "match", "result", "result", "result", "pillarenv", "x", "x", "mappings"]}}
{"position": {"error_location": 32, "repair_targets": [11], "repair_candidates": [0, 2, 3, 5, 6, 7, 8, 16, 14, 20, 24, 25, 4, 9, 13, 35, 11, 17, 18, 23, 28, 26, 29, 30, 31, 33, 34, 15, 27, 1, 10, 21, 32]}}
{"prediction": {"error_location": 0.6195380091667175, "repair_targets": [0.7109478116035461], "repair_candidates": [0.048388998955488205, 0.021859493106603622, 0.008778028190135956, 0.002737176837399602, 0.0010257891844958067, 0.0002756723843049258, 0.00011060797260142863, 7.723140151938424e-05, 0.0002163307653972879, 0.008775834925472736, 0.19435153901576996, 0.7109478116035461, 0.0006483276374638081, 4.921445361105725e-05, 0.00012523990881163627, 3.535870564519428e-05, 1.267003062821459e-05, 8.233208063757047e-06, 3.066226099690539e-06, 1.1960428309976123e-06, 1.0898277650994714e-05, 2.2446195089287357e-06, 3.992545316577889e-05, 9.697677342046518e-06, 2.3865011826273985e-05, 3.638160342234187e-05, 1.740772495395504e-05, 1.857138158811722e-05, 5.466046332003316e-06, 3.207505187674542e-06, 1.2090276868548244e-05, 0.0005471984040923417, 0.0008452311740256846], "target_probs": 0.7109478116035461}}


{"result": {"time": "2021-02-21 13:08:36.046148", "n_pass": [801, 160, 87], "n_token": 35, "loss": [1.045847773551941, 0.4285542070865631], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["dc", "pillarenv", "dc", "dc", "mappings", "dc", "dc", "dc", "dc", "mappings", "pillarenv", "sorted_mappings", "=", "mappings", "pattern", "target", "dc", "match", "match", "(", "pattern", "pillarenv", "match", "pattern", "pattern", "result", "target", "match", "result", "result", "result", "pillarenv", "x", "x", "mappings"]}}
{"position": {"error_location": 31, "repair_targets": [11], "repair_candidates": [0, 2, 3, 5, 6, 7, 8, 16, 14, 20, 23, 24, 4, 9, 13, 34, 11, 17, 18, 22, 27, 25, 28, 29, 30, 32, 33, 15, 26, 1, 10, 21, 31]}}
{"prediction": {"error_location": 0.35139378905296326, "repair_targets": [0.6514502763748169], "repair_candidates": [0.08471377938985825, 0.036715924739837646, 0.012322397902607918, 0.0033929748460650444, 0.0012004856253042817, 0.00033472804352641106, 0.00013193886843509972, 8.523285941919312e-05, 0.00018576841102913022, 0.005369077902287245, 0.20117469131946564, 0.6514502763748169, 0.0007399060414172709, 5.955457891104743e-05, 0.00019237164815422148, 0.00010868375829886645, 3.672404636745341e-05, 2.0059851522091776e-05, 4.486877060116967e-06, 2.8111785468354356e-06, 8.208313374780118e-06, 6.960063274163986e-06, 6.98794683557935e-05, 1.7677028154139407e-05, 4.2559793655527756e-05, 6.552097329404205e-05, 4.2259409383405e-05, 4.524960968410596e-05, 1.0106435183843132e-05, 4.884413556283107e-06, 1.7248941730940714e-05, 0.0005719098844565451, 0.0008556494722142816], "target_probs": 0.6514502763748169}}




Minimal simplified tokens:

['dc', 'pillarenv', 'dc', 'dc', 'mappings', 'dc', 'dc', 'dc', 'dc', 'mappings', 'pillarenv', 'sorted_mappings', '=', 'mappings', 'pattern', 'target', 'dc', 'match', 'match', '(', 'pattern', 'pillarenv', 'match', 'pattern', 'pattern', 'result', 'target', 'match', 'result', 'result', 'result', 'pillarenv', 'x', 'x', 'mappings']
