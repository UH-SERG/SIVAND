
Original sample:

{"has_bug": false, "bug_kind": 0, "bug_kind_name": "NONE", "source_tokens": ["#NEWLINE#", "def run(", "self", ")", ":", "#NEWLINE#", "#INDENT#", "while", "(", "self", ".", "is_connected", "(", ")", "and", "(", "self", ".", "thread", "==", "threading", ".", "current_thread", "(", ")", ")", ")", ":", "#NEWLINE#", "#INDENT#", "try", ":", "#NEWLINE#", "#INDENT#", "if", "self", ".", "ws", ".", "connected", ":", "#NEWLINE#", "#INDENT#", "data", "=", "self", ".", "ws", ".", "recv", "(", ")", "#NEWLINE#", "self", ".", "inbound", ".", "append", "(", "data", ")", "#NEWLINE#", "#UNINDENT#", "#UNINDENT#", "except", "Exception", "as", "ex", ":", "#NEWLINE#", "#INDENT#", "print", "(", "(", "(", "(", "'[session] run ('", "+", "str", "(", "self", ".", "ws", ".", "connected", ")", ")", "+", "'): '", ")", "+", "str", "(", "ex", ")", ")", ")", "#NEWLINE#", "return"], "error_location": [0], "repair_targets": [], "repair_candidates": [43, 59, 67, 93, 2, 9, 16, 35, 45, 53, 80], "provenances": [{"datasetProvenance": {"datasetName": "ETHPy150Open", "filepath": "Raeon/pygar/session.py", "license": "apache-2.0", "note": "license: manual_eval"}}], "txt_file": "eval__VARIABLE_MISUSE__SStuB.txt-00000-of-00300", "js_count": 355, "results": {"model": "rnn", "prob": {"loc": [[0.9834262132644653, 2.3539776520919986e-05, 8.068054171417316e-07, 1.1578399572442777e-08, 5.301189709427945e-09, 1.772492055351904e-07, 1.1402768507196015e-07, 6.132108865131158e-08, 7.812867863776773e-08, 3.11108436790164e-07, 1.1267611288445778e-09, 4.863374147845434e-09, 1.822445767629688e-07, 1.068940377990657e-06, 1.0903159619601865e-07, 9.760418606674648e-07, 0.000526591669768095, 1.7381434957997044e-08, 6.908545060468896e-07, 6.211343617223974e-08, 7.002557822488598e-07, 1.2259803838787775e-07, 1.1634623575673686e-07, 1.0631677014316665e-06, 1.7003481843858026e-05, 5.567528091887652e-07, 8.954639270086773e-07, 9.016501394398801e-07, 1.3975129604659742e-06, 4.227586032357067e-07, 1.1162625924043823e-05, 3.673452511065989e-07, 1.3299904821906239e-06, 1.9785868516919436e-06, 1.234015485351847e-07, 2.6329707907279953e-05, 1.8044415739382202e-08, 3.873042714985786e-06, 1.384556753691868e-07, 3.345080301642156e-07, 6.597790047635499e-07, 1.3485772797139362e-05, 3.283313105839625e-07, 2.177352826038259e-06, 3.6420907179035567e-08, 7.182003400885151e-07, 1.3310416102640943e-09, 8.540959051117625e-09, 8.651768723666464e-08, 1.730248122555622e-08, 1.383334051752172e-06, 2.0775016764673637e-06, 8.967924713942921e-08, 1.3957088640381698e-07, 2.118257569350135e-09, 1.961184992183007e-08, 1.267515813196951e-06, 2.4601632730991696e-08, 1.6861541496382415e-07, 0.0005197127466090024, 2.577514806034742e-07, 5.99465124651033e-07, 1.7833359606811428e-06, 2.2641165742243174e-06, 3.2746625038271304e-06, 1.1413812899263576e-05, 3.0814911156085145e-07, 3.105103019152011e-07, 1.280570387507396e-07, 1.89379284165625e-06, 2.622505235194694e-07, 6.232490790125667e-08, 5.281119186406613e-08, 1.2816235539503396e-07, 2.7239696009928593e-07, 5.965514446870657e-07, 1.1278981446594116e-06, 4.6178706725186203e-07, 2.324272145415307e-06, 4.542251463846014e-09, 0.005300553981214762, 1.2204554877826013e-07, 6.425083938665921e-06, 6.316101917036576e-07, 2.500364189472748e-06, 2.0154213586920378e-07, 4.749631727918313e-07, 1.8126256691175513e-06, 9.587280146661215e-06, 9.885209806270723e-08, 9.057037431148274e-08, 8.515414151588629e-07, 6.412449238268891e-08, 0.010049928911030293, 8.563968663111154e-07, 5.04857041505602e-07, 3.078228303365904e-07, 2.174187301307029e-07, 5.017714101995807e-06]], "pointer": [[0.0, 0.0, 0.0027858491521328688, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.00040929747046902776, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.013727662153542042, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.000222397327888757, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.8283226490020752, 0.0, 0.0010870404075831175, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.00014511360495816916, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0009225737885572016, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.15184573829174042, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.00040987913962453604, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.00012173613504273817, 0.0, 0.0, 0.0, 0.0, 0.0]], "target": [0.0]}, "loss": [0.016712890937924385, 0.0], "acc": [1.0, 0.0, 0.0, 0.0]}}


Trace of simplified code(s):

{"result": {"time": "2021-02-11 14:45:53.507720", "n_pass": [1, 1, 1], "n_token": 99, "loss": [0.016712890937924385, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def run(", "self", ")", ":", "#NEWLINE#", "#INDENT#", "while", "(", "self", ".", "is_connected", "(", ")", "and", "(", "self", ".", "thread", "==", "threading", ".", "current_thread", "(", ")", ")", ")", ":", "#NEWLINE#", "#INDENT#", "try", ":", "#NEWLINE#", "#INDENT#", "if", "self", ".", "ws", ".", "connected", ":", "#NEWLINE#", "#INDENT#", "data", "=", "self", ".", "ws", ".", "recv", "(", ")", "#NEWLINE#", "self", ".", "inbound", ".", "append", "(", "data", ")", "#NEWLINE#", "#UNINDENT#", "#UNINDENT#", "except", "Exception", "as", "ex", ":", "#NEWLINE#", "#INDENT#", "print", "(", "(", "(", "(", "'[session] run ('", "+", "str", "(", "self", ".", "ws", ".", "connected", ")", ")", "+", "'): '", ")", "+", "str", "(", "ex", ")", ")", ")", "#NEWLINE#", "return"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [43, 59, 67, 93, 2, 9, 16, 35, 45, 53, 80]}}
{"prediction": {"error_location": 0.9834262132644653, "repair_targets": [], "repair_candidates": [0.0027858491521328688, 0.00040929747046902776, 0.013727662153542042, 0.000222397327888757, 0.8283226490020752, 0.0010870404075831175, 0.00014511360495816916, 0.0009225737885572016, 0.15184573829174042, 0.00040987913962453604, 0.00012173613504273817], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 14:45:53.606356", "n_pass": [47, 2, 2], "n_token": 93, "loss": [0.016612650826573372, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def run(", "self", ")", ":", "#NEWLINE#", "#INDENT#", "while", "(", "self", ".", "is_connected", "(", ")", "and", "(", "self", ".", ")", ")", ")", ":", "#NEWLINE#", "#INDENT#", "try", ":", "#NEWLINE#", "#INDENT#", "if", "self", ".", "ws", ".", "connected", ":", "#NEWLINE#", "#INDENT#", "data", "=", "self", ".", "ws", ".", "recv", "(", ")", "#NEWLINE#", "self", ".", "inbound", ".", "append", "(", "data", ")", "#NEWLINE#", "#UNINDENT#", "#UNINDENT#", "except", "Exception", "as", "ex", ":", "#NEWLINE#", "#INDENT#", "print", "(", "(", "(", "(", "'[session] run ('", "+", "str", "(", "self", ".", "ws", ".", "connected", ")", ")", "+", "'): '", ")", "+", "str", "(", "ex", ")", ")", ")", "#NEWLINE#", "return"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [37, 53, 61, 87, 2, 9, 16, 29, 39, 47, 74]}}
{"prediction": {"error_location": 0.9835245609283447, "repair_targets": [], "repair_candidates": [0.0031327891629189253, 0.0005775675526820123, 0.0034635914489626884, 0.0001415982114849612, 0.8592414259910583, 0.001138195744715631, 0.00012892184895463288, 0.0006866499898023903, 0.13105466961860657, 0.0003052018000744283, 0.00012942000466864556], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 14:45:53.700887", "n_pass": [48, 3, 3], "n_token": 87, "loss": [0.017237255349755287, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def run(", "self", ")", ":", "#NEWLINE#", "#INDENT#", "while", "(", "self", ".", "is_connected", "(", ")", "and", "(", "self", ".", "try", ":", "#NEWLINE#", "#INDENT#", "if", "self", ".", "ws", ".", "connected", ":", "#NEWLINE#", "#INDENT#", "data", "=", "self", ".", "ws", ".", "recv", "(", ")", "#NEWLINE#", "self", ".", "inbound", ".", "append", "(", "data", ")", "#NEWLINE#", "#UNINDENT#", "#UNINDENT#", "except", "Exception", "as", "ex", ":", "#NEWLINE#", "#INDENT#", "print", "(", "(", "(", "(", "'[session] run ('", "+", "str", "(", "self", ".", "ws", ".", "connected", ")", ")", "+", "'): '", ")", "+", "str", "(", "ex", ")", ")", ")", "#NEWLINE#", "return"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [31, 47, 55, 81, 2, 9, 16, 23, 33, 41, 68]}}
{"prediction": {"error_location": 0.9829102158546448, "repair_targets": [], "repair_candidates": [0.001871118787676096, 0.0003849603235721588, 0.0006622563814744353, 5.311423592502251e-05, 0.917292594909668, 0.0006408673361875117, 6.996165757300332e-05, 0.00040307463495992124, 0.0784064307808876, 0.00013748579658567905, 7.808970258338377e-05], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 14:45:53.791594", "n_pass": [50, 4, 4], "n_token": 81, "loss": [0.283662348985672, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def run(", "self", ")", ":", "#NEWLINE#", "#INDENT#", "while", "(", "self", ".", "is_connected", "(", ")", "and", "(", "self", ".", "try", ":", "#NEWLINE#", "#INDENT#", "if", "self", "#INDENT#", "data", "=", "self", ".", "ws", ".", "recv", "(", ")", "#NEWLINE#", "self", ".", "inbound", ".", "append", "(", "data", ")", "#NEWLINE#", "#UNINDENT#", "#UNINDENT#", "except", "Exception", "as", "ex", ":", "#NEWLINE#", "#INDENT#", "print", "(", "(", "(", "(", "'[session] run ('", "+", "str", "(", "self", ".", "ws", ".", "connected", ")", ")", "+", "'): '", ")", "+", "str", "(", "ex", ")", ")", ")", "#NEWLINE#", "return"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [25, 41, 49, 75, 2, 9, 16, 23, 27, 35, 62]}}
{"prediction": {"error_location": 0.7530208826065063, "repair_targets": [], "repair_candidates": [0.0013632625341415405, 0.0010970765724778175, 0.0013896309537813067, 0.007983040064573288, 0.7099043726921082, 0.009099696762859821, 0.001124521135352552, 0.011949405074119568, 0.2538372576236725, 0.0017683305777609348, 0.00048338191118091345], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 14:45:53.878943", "n_pass": [54, 5, 5], "n_token": 75, "loss": [0.14572210609912872, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def run(", "self", ")", ":", "#NEWLINE#", "#INDENT#", "while", "(", "self", ".", "is_connected", "(", ")", "and", "(", "self", ".", "try", ":", "#NEWLINE#", "#INDENT#", "if", "self", "#INDENT#", "data", "=", "self", ".", "ws", ".", "recv", "(", ")", "#NEWLINE#", "self", ".", "inbound", ".", "append", "(", "data", "as", "ex", ":", "#NEWLINE#", "#INDENT#", "print", "(", "(", "(", "(", "'[session] run ('", "+", "str", "(", "self", ".", "ws", ".", "connected", ")", ")", "+", "'): '", ")", "+", "str", "(", "ex", ")", ")", ")", "#NEWLINE#", "return"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [25, 41, 43, 69, 2, 9, 16, 23, 27, 35, 56]}}
{"prediction": {"error_location": 0.8643977046012878, "repair_targets": [], "repair_candidates": [0.001943457406014204, 0.0017208490753546357, 0.0024609942920506, 0.011375311762094498, 0.6367443799972534, 0.01097832154482603, 0.0032062616664916277, 0.08708622306585312, 0.24051529169082642, 0.0032841621432453394, 0.0006847703480161726], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 14:45:53.962859", "n_pass": [56, 6, 6], "n_token": 69, "loss": [0.17651277780532837, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def run(", "self", ")", ":", "#NEWLINE#", "#INDENT#", "while", "(", "self", ".", "is_connected", "(", ")", "and", "(", "self", ".", "try", ":", "#NEWLINE#", "#INDENT#", "if", "self", "#INDENT#", "data", "=", "self", ".", "ws", ".", "recv", "(", ")", "#NEWLINE#", "self", ".", "inbound", ".", "append", "(", "data", "as", "ex", ":", "#NEWLINE#", "#INDENT#", "print", "str", "(", "self", ".", "ws", ".", "connected", ")", ")", "+", "'): '", ")", "+", "str", "(", "ex", ")", ")", ")", "#NEWLINE#", "return"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [25, 41, 43, 63, 2, 9, 16, 23, 27, 35, 50]}}
{"prediction": {"error_location": 0.8381881713867188, "repair_targets": [], "repair_candidates": [0.0018679916393011808, 0.001646264223381877, 0.002388145076110959, 0.015336228534579277, 0.6033146381378174, 0.01510412897914648, 0.0029788040556013584, 0.09870680421590805, 0.23681898415088654, 0.02157292515039444, 0.00026507681468501687], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 14:45:54.043576", "n_pass": [58, 7, 7], "n_token": 62, "loss": [0.09256266802549362, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def run(", "self", ")", ":", "#NEWLINE#", "#INDENT#", "while", "(", "self", ".", "is_connected", "(", ")", "and", "(", "self", ".", "try", ":", "#NEWLINE#", "#INDENT#", "if", "self", "#INDENT#", "data", "=", "self", ".", "ws", ".", "recv", "(", ")", "#NEWLINE#", "self", ".", "inbound", ".", "append", "(", "data", "as", "ex", ":", "#NEWLINE#", "#INDENT#", "print", "str", "(", "self", ".", "ws", ".", "connected", "(", "ex", ")", ")", ")", "#NEWLINE#", "return"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [25, 41, 43, 56, 2, 9, 16, 23, 27, 35, 50]}}
{"prediction": {"error_location": 0.9115920066833496, "repair_targets": [], "repair_candidates": [0.0016122296219691634, 0.0013964439276605844, 0.0027223338838666677, 0.028353216126561165, 0.5690304636955261, 0.02036457136273384, 0.009209588170051575, 0.07444945722818375, 0.08794745802879333, 0.2006484568119049, 0.0042657870799303055], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 14:45:54.125832", "n_pass": [90, 8, 8], "n_token": 58, "loss": [0.12205694615840912, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def run(", "self", ")", ":", "#NEWLINE#", "#INDENT#", "while", "(", "self", ".", "is_connected", "(", ")", "and", "(", "self", ".", "try", ":", "#NEWLINE#", "#INDENT#", "if", "self", "#INDENT#", "data", "=", "self", ".", "ws", ".", "recv", "(", ")", "#NEWLINE#", "self", ".", "inbound", ".", "append", "(", "data", "as", "ex", ":", "#NEWLINE#", "#INDENT#", "print", "str", "(", "self", ".", "ws", ".", "connected", "(", "ex", ")"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [25, 41, 43, 56, 2, 9, 16, 23, 27, 35, 50]}}
{"prediction": {"error_location": 0.8850979804992676, "repair_targets": [], "repair_candidates": [0.0012909239158034325, 0.0012728683650493622, 0.003745047841221094, 0.018578482791781425, 0.6896651387214661, 0.03254157677292824, 0.008173475973308086, 0.05468324199318886, 0.04127670079469681, 0.14708028733730316, 0.0016922783106565475], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 14:45:54.202732", "n_pass": [92, 9, 9], "n_token": 55, "loss": [0.20147892832756042, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def run(", "self", "#INDENT#", "while", "(", "self", ".", "is_connected", "(", ")", "and", "(", "self", ".", "try", ":", "#NEWLINE#", "#INDENT#", "if", "self", "#INDENT#", "data", "=", "self", ".", "ws", ".", "recv", "(", ")", "#NEWLINE#", "self", ".", "inbound", ".", "append", "(", "data", "as", "ex", ":", "#NEWLINE#", "#INDENT#", "print", "str", "(", "self", ".", "ws", ".", "connected", "(", "ex", ")"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [22, 38, 40, 53, 2, 6, 13, 20, 24, 32, 47]}}
{"prediction": {"error_location": 0.8175206780433655, "repair_targets": [], "repair_candidates": [0.0010178076336160302, 0.0007843861822038889, 0.0030233501456677914, 0.02735341340303421, 0.4674723446369171, 0.0442044772207737, 0.015566783025860786, 0.16844986379146576, 0.08045609295368195, 0.18921159207820892, 0.002459889277815819], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 14:45:54.278254", "n_pass": [93, 10, 10], "n_token": 52, "loss": [0.08524023741483688, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def run(", "self", "self", ".", "is_connected", "(", ")", "and", "(", "self", ".", "try", ":", "#NEWLINE#", "#INDENT#", "if", "self", "#INDENT#", "data", "=", "self", ".", "ws", ".", "recv", "(", ")", "#NEWLINE#", "self", ".", "inbound", ".", "append", "(", "data", "as", "ex", ":", "#NEWLINE#", "#INDENT#", "print", "str", "(", "self", ".", "ws", ".", "connected", "(", "ex", ")"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [19, 35, 37, 50, 2, 3, 10, 17, 21, 29, 44]}}
{"prediction": {"error_location": 0.9182915687561035, "repair_targets": [], "repair_candidates": [0.0055212900042533875, 0.00016849047096911818, 0.002823364222422242, 0.041183363646268845, 0.3096754848957062, 0.044999342411756516, 0.02930501289665699, 0.1226053461432457, 0.09076672047376633, 0.35065165162086487, 0.002299949759617448], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 14:45:54.352323", "n_pass": [95, 11, 11], "n_token": 49, "loss": [0.05646401643753052, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def run(", "self", "self", ".", "is_connected", "(", "self", ".", "try", ":", "#NEWLINE#", "#INDENT#", "if", "self", "#INDENT#", "data", "=", "self", ".", "ws", ".", "recv", "(", ")", "#NEWLINE#", "self", ".", "inbound", ".", "append", "(", "data", "as", "ex", ":", "#NEWLINE#", "#INDENT#", "print", "str", "(", "self", ".", "ws", ".", "connected", "(", "ex", ")"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [16, 32, 34, 47, 2, 3, 7, 14, 18, 26, 41]}}
{"prediction": {"error_location": 0.9451001882553101, "repair_targets": [], "repair_candidates": [0.006915058474987745, 0.00030464091105386615, 0.0011747395619750023, 0.04882778227329254, 0.332469642162323, 0.044386547058820724, 0.03192685544490814, 0.08314961940050125, 0.11746400594711304, 0.33133089542388916, 0.002050188370049], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 14:45:54.425242", "n_pass": [97, 12, 12], "n_token": 46, "loss": [0.37721773982048035, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def run(", "self", "self", ".", "is_connected", "(", "self", ".", "#INDENT#", "if", "self", "#INDENT#", "data", "=", "self", ".", "ws", ".", "recv", "(", ")", "#NEWLINE#", "self", ".", "inbound", ".", "append", "(", "data", "as", "ex", ":", "#NEWLINE#", "#INDENT#", "print", "str", "(", "self", ".", "ws", ".", "connected", "(", "ex", ")"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [13, 29, 31, 44, 2, 3, 7, 11, 15, 23, 38]}}
{"prediction": {"error_location": 0.6857666969299316, "repair_targets": [], "repair_candidates": [0.002920812228694558, 0.00021213118452578783, 0.00018519145669415593, 0.10685312002897263, 0.2615785002708435, 0.021572571247816086, 0.020402461290359497, 0.10769330710172653, 0.07718656957149506, 0.399050772190094, 0.002344510518014431], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 14:45:54.498874", "n_pass": [101, 13, 13], "n_token": 43, "loss": [0.17405273020267487, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def run(", "self", "self", ".", "is_connected", "(", "self", ".", "#INDENT#", "if", "self", "#INDENT#", "data", "=", "self", ".", "ws", ")", "#NEWLINE#", "self", ".", "inbound", ".", "append", "(", "data", "as", "ex", ":", "#NEWLINE#", "#INDENT#", "print", "str", "(", "self", ".", "ws", ".", "connected", "(", "ex", ")"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [13, 26, 28, 41, 2, 3, 7, 11, 15, 20, 35]}}
{"prediction": {"error_location": 0.8402525782585144, "repair_targets": [], "repair_candidates": [0.007714186329394579, 0.0004999181255698204, 0.0005550223868340254, 0.1380591094493866, 0.09170600026845932, 0.00859227403998375, 0.041654299944639206, 0.16981996595859528, 0.09523848444223404, 0.4438314437866211, 0.0023292903788387775], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 14:45:54.568118", "n_pass": [103, 14, 14], "n_token": 40, "loss": [0.18604451417922974, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def run(", "self", "self", ".", "is_connected", "(", "self", ".", "#INDENT#", "if", "self", "#INDENT#", "data", "=", "self", ".", "ws", ")", "#NEWLINE#", "self", "append", "(", "data", "as", "ex", ":", "#NEWLINE#", "#INDENT#", "print", "str", "(", "self", ".", "ws", ".", "connected", "(", "ex", ")"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [13, 23, 25, 38, 2, 3, 7, 11, 15, 20, 32]}}
{"prediction": {"error_location": 0.8302366137504578, "repair_targets": [], "repair_candidates": [0.0036753062158823013, 0.0002608635404612869, 0.00038043336826376617, 0.03818855807185173, 0.008886327967047691, 0.001324807177297771, 0.7568686604499817, 0.0031754085794091225, 0.022812619805336, 0.1639404147863388, 0.00048659747699275613], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 14:45:54.703068", "n_pass": [108, 16, 15], "n_token": 37, "loss": [0.12506352365016937, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def run(", "self", "self", ".", "is_connected", "(", "self", ".", "#INDENT#", "if", "self", "#INDENT#", "data", "=", "self", ".", "ws", ")", "#NEWLINE#", "self", "append", "(", "data", "as", "ex", ":", "#NEWLINE#", "#INDENT#", "print", "str", "(", "self", "connected", "(", "ex", ")"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [13, 23, 25, 35, 2, 3, 7, 11, 15, 20, 32]}}
{"prediction": {"error_location": 0.8824408650398254, "repair_targets": [], "repair_candidates": [0.010325738228857517, 0.0007367900689132512, 0.0007492915610782802, 0.08002404868602753, 0.04568962752819061, 0.002437529619783163, 0.4328952133655548, 0.03278231620788574, 0.37910914421081543, 0.014510853216052055, 0.0007394784479402006], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 14:45:54.770077", "n_pass": [119, 17, 16], "n_token": 34, "loss": [0.07588154077529907, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def run(", "self", "self", ".", "is_connected", "(", "self", ".", "#INDENT#", "if", "self", "#INDENT#", "data", "=", "self", ".", "ws", ")", "#NEWLINE#", "self", "append", "(", "data", "as", "ex", ":", "str", "(", "self", "connected", "(", "ex", ")"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [13, 23, 25, 32, 2, 3, 7, 11, 15, 20, 29]}}
{"prediction": {"error_location": 0.926925778388977, "repair_targets": [], "repair_candidates": [0.01654064655303955, 0.0011928606545552611, 0.0010112188756465912, 0.10481271147727966, 0.04961923509836197, 0.002956230891868472, 0.7759069800376892, 0.011152682825922966, 0.032373882830142975, 0.003975377418100834, 0.0004580929526127875], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 14:45:54.836527", "n_pass": [153, 18, 17], "n_token": 32, "loss": [0.18403396010398865, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def run(", "self", "self", ".", "is_connected", "(", "self", ".", "#INDENT#", "if", "self", "#INDENT#", "data", "=", "self", ".", "ws", ")", "#NEWLINE#", "self", "append", "(", "data", "as", "ex", "(", "self", "connected", "(", "ex", ")"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [13, 23, 25, 30, 2, 3, 7, 11, 15, 20, 27]}}
{"prediction": {"error_location": 0.8319075703620911, "repair_targets": [], "repair_candidates": [0.009352553635835648, 0.0007288065971806645, 0.0006987957749515772, 0.036409877240657806, 0.0358368344604969, 0.001120679546147585, 0.8925938010215759, 0.0036775118205696344, 0.0023354897275567055, 0.017119385302066803, 0.00012623341172002256], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 14:45:54.903143", "n_pass": [155, 19, 18], "n_token": 30, "loss": [0.11646705120801926, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def run(", "self", "self", ".", "is_connected", "(", "self", ".", "#INDENT#", "if", "self", "#INDENT#", "data", "=", "self", ".", "ws", ")", "#NEWLINE#", "self", "append", "(", "data", "as", "ex", "(", "self", "ex", ")"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [13, 23, 25, 28, 2, 3, 7, 11, 15, 20, 27]}}
{"prediction": {"error_location": 0.890059232711792, "repair_targets": [], "repair_candidates": [0.029214948415756226, 0.001859549549408257, 0.002293291734531522, 0.12360116094350815, 0.22418807446956635, 0.004807135555893183, 0.447452187538147, 0.02392330765724182, 0.023120736703276634, 0.11846394091844559, 0.0010756684932857752], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 14:45:54.967282", "n_pass": [158, 20, 19], "n_token": 29, "loss": [0.10977344959974289, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "self", "self", ".", "is_connected", "(", "self", ".", "#INDENT#", "if", "self", "#INDENT#", "data", "=", "self", ".", "ws", ")", "#NEWLINE#", "self", "append", "(", "data", "as", "ex", "(", "self", "ex", ")"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [12, 22, 24, 27, 1, 2, 6, 10, 14, 19, 26]}}
{"prediction": {"error_location": 0.8960369229316711, "repair_targets": [], "repair_candidates": [0.04107663407921791, 0.0010336019331589341, 0.0033306442201137543, 0.18403947353363037, 0.3574065566062927, 0.0029404747765511274, 0.29623621702194214, 0.015913553535938263, 0.00776329729706049, 0.08919455856084824, 0.0010649347677826881], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 14:45:55.030865", "n_pass": [161, 21, 20], "n_token": 28, "loss": [0.05860292166471481, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "self", "self", "is_connected", "(", "self", ".", "#INDENT#", "if", "self", "#INDENT#", "data", "=", "self", ".", "ws", ")", "#NEWLINE#", "self", "append", "(", "data", "as", "ex", "(", "self", "ex", ")"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [11, 21, 23, 26, 1, 2, 5, 9, 13, 18, 25]}}
{"prediction": {"error_location": 0.9430812001228333, "repair_targets": [], "repair_candidates": [0.01932641677558422, 0.008088389411568642, 0.0017784456722438335, 0.09332077205181122, 0.3331110179424286, 0.003450916148722172, 0.4102717936038971, 0.018547510728240013, 0.007615930866450071, 0.10351531207561493, 0.0009735124185681343], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 14:45:55.094113", "n_pass": [162, 22, 21], "n_token": 27, "loss": [0.41352811455726624, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "self", "self", "(", "self", ".", "#INDENT#", "if", "self", "#INDENT#", "data", "=", "self", ".", "ws", ")", "#NEWLINE#", "self", "append", "(", "data", "as", "ex", "(", "self", "ex", ")"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [10, 20, 22, 25, 1, 2, 4, 8, 12, 17, 24]}}
{"prediction": {"error_location": 0.661312997341156, "repair_targets": [], "repair_candidates": [0.013873503543436527, 0.0013664697762578726, 0.0034337129909545183, 0.0717892050743103, 0.5328463912010193, 0.0038612275384366512, 0.23908677697181702, 0.03500247746706009, 0.006517987232655287, 0.09127387404441833, 0.0009483991307206452], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 14:45:55.218799", "n_pass": [165, 24, 22], "n_token": 26, "loss": [0.3794745206832886, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "self", "self", "(", "self", "#INDENT#", "if", "self", "#INDENT#", "data", "=", "self", ".", "ws", ")", "#NEWLINE#", "self", "append", "(", "data", "as", "ex", "(", "self", "ex", ")"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [9, 19, 21, 24, 1, 2, 4, 7, 11, 16, 23]}}
{"prediction": {"error_location": 0.6842207908630371, "repair_targets": [], "repair_candidates": [0.012763201259076595, 0.001211646944284439, 0.012837862595915794, 0.006859964225441217, 0.6987990736961365, 0.002819317625835538, 0.1775512546300888, 0.02728615328669548, 0.004619136452674866, 0.054593056440353394, 0.000659300887491554], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 14:45:55.343661", "n_pass": [170, 26, 23], "n_token": 24, "loss": [0.7371830940246582, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "self", "self", "(", "self", "#INDENT#", "if", "self", "#INDENT#", "data", "=", "self", ")", "#NEWLINE#", "self", "append", "(", "data", "as", "ex", "(", "self", "ex", ")"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [9, 17, 19, 22, 1, 2, 4, 7, 11, 14, 21]}}
{"prediction": {"error_location": 0.47845980525016785, "repair_targets": [], "repair_candidates": [0.0005464777932502329, 5.269882603897713e-05, 0.00018945024930872023, 0.00015590367547702044, 0.9952538013458252, 0.0002554946986492723, 0.0011012246832251549, 0.0008385868859477341, 0.00015588538371957839, 0.001422111876308918, 2.8443932023947127e-05], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 14:45:55.465108", "n_pass": [180, 28, 24], "n_token": 23, "loss": [0.690966010093689, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "self", "self", "self", "#INDENT#", "if", "self", "#INDENT#", "data", "=", "self", ")", "#NEWLINE#", "self", "append", "(", "data", "as", "ex", "(", "self", "ex", ")"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [8, 16, 18, 21, 1, 2, 3, 6, 10, 13, 20]}}
{"prediction": {"error_location": 0.5010917782783508, "repair_targets": [], "repair_candidates": [0.0007189426687546074, 5.550598507397808e-05, 3.7318408431019634e-05, 0.00016815841081552207, 0.9962592124938965, 0.00031501238117925823, 0.0006174131412990391, 0.0007298322743736207, 0.0001237101823789999, 0.0009537513251416385, 2.1219429982011206e-05], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 14:45:55.525688", "n_pass": [182, 29, 25], "n_token": 22, "loss": [0.6693601608276367, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "self", "self", "self", "if", "self", "#INDENT#", "data", "=", "self", ")", "#NEWLINE#", "self", "append", "(", "data", "as", "ex", "(", "self", "ex", ")"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [7, 15, 17, 20, 1, 2, 3, 5, 9, 12, 19]}}
{"prediction": {"error_location": 0.5120360255241394, "repair_targets": [], "repair_candidates": [9.824225708143786e-05, 1.1228626135562081e-05, 9.168155884253792e-06, 0.00017022919200826436, 0.9988905787467957, 7.264200394274667e-05, 0.00017735642904881388, 0.0002150743530364707, 2.882648550439626e-05, 0.0003195406752638519, 7.090820417943178e-06], "target_probs": 0.0}}




Minimal simplified tokens:

['#NEWLINE#', 'self', 'self', 'self', 'if', 'self', '#INDENT#', 'data', '=', 'self', ')', '#NEWLINE#', 'self', 'append', '(', 'data', 'as', 'ex', '(', 'self', 'ex', ')']
