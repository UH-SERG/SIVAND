
Original sample:

{"has_bug": false, "bug_kind": 0, "bug_kind_name": "NONE", "source_tokens": ["#NEWLINE#", "def send_to_server(", "self", ",", "address", ",", "event_name", ",", "event_args", ")", ":", "#NEWLINE#", "#INDENT#", "'Send a message with ``event_name`` and ``event_args`` only\\n    to the server listening at ``address``. ``address`` must have\\n    previously been passed to ``register_server``. This is more\\n    efficient than ``send`` if you only intent to send the event\\n    to a single server and know the address in advance.\\n    '", "#NEWLINE#", "event", "=", "{", "#NEWLINE#", "#INDENT#", "'name'", ":", "event_name", ",", "#NEWLINE#", "'args'", ":", "event_args", ",", "#NEWLINE#", "#UNINDENT#", "}", "#NEWLINE#", "event_data", "=", "zlib", ".", "compress", "(", "pickle", ".", "dumps", "(", "event", ")", ")", "#NEWLINE#", "self", ".", "__remote_servers", "[", "address", "]", ".", "send", "(", "event_data", ")"], "error_location": [0], "repair_targets": [], "repair_candidates": [8, 27, 15, 43, 33, 56, 4, 51, 6, 22, 2, 47], "provenances": [{"datasetProvenance": {"datasetName": "ETHPy150Open", "filepath": "JeremyOT/Toto/toto/events.py", "license": "mit", "note": "license: bigquery_api"}}], "txt_file": "eval__VARIABLE_MISUSE__SStuB.txt-00000-of-00300", "js_count": 1212, "results": {"model": "rnn", "prob": {"loc": [[0.8117554187774658, 3.3928872653632425e-06, 2.601838787086308e-06, 7.897359211028743e-09, 1.1097696415163227e-06, 3.771611716274492e-07, 1.9823633010673802e-06, 3.980697371730457e-08, 9.148634489974938e-06, 5.2841389930335936e-08, 2.651701080935709e-08, 1.20063157282857e-06, 1.1137534983163278e-07, 1.4653219082561009e-08, 7.128797108180152e-08, 3.29174810076438e-07, 2.919876962437229e-08, 2.936799035069271e-07, 1.0942952712866827e-06, 1.4090473143824056e-07, 5.4698170970368665e-06, 1.069969925993064e-06, 0.0023578929249197245, 4.847207719649305e-07, 4.259497359271336e-07, 1.6754735270296806e-06, 9.609784683561884e-06, 0.0013104790123179555, 4.7609984221708146e-07, 5.430944725048903e-07, 1.846479790401645e-06, 1.7746866376455728e-07, 3.5245656704319117e-07, 5.31024454630824e-07, 3.379856039487095e-08, 2.1106652638991363e-06, 2.0075313855727472e-08, 9.778693765838398e-07, 1.1948306166686962e-07, 3.2918189845076995e-06, 9.933552291840897e-08, 1.3462518211326824e-07, 3.8901912375877146e-06, 0.17590148746967316, 3.5618077163235284e-06, 6.719766361129587e-07, 2.804395933253545e-07, 7.216021202793854e-08, 1.8918593358563385e-09, 1.0919844584122984e-07, 1.7084222747598687e-07, 0.0006568653043359518, 8.217673652666235e-09, 3.2822376283547783e-07, 1.596656602487201e-07, 1.420112880623492e-06, 0.00795518048107624, 4.688871513280901e-07]], "pointer": [[0.0, 0.0, 0.0004962568636983633, 0.0, 0.20593325793743134, 0.0, 0.6308515667915344, 0.0, 0.039883725345134735, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1187223345041275, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0004486318212002516, 0.0, 0.0, 0.0, 0.0, 0.0007198238745331764, 0.0, 0.0, 0.0, 0.0, 0.0, 0.002519340021535754, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 5.708041862817481e-05, 0.0, 0.0, 0.0, 0.00017368838598486036, 0.0, 0.0, 0.0, 0.0001251039793714881, 0.0, 0.0, 0.0, 0.0, 6.917489372426644e-05, 0.0]], "target": [0.0]}, "loss": [0.20855602622032166, 0.0], "acc": [1.0, 0.0, 0.0, 0.0]}}


Trace of simplified code(s):

{"result": {"time": "2021-02-11 13:43:21.841701", "n_pass": [1, 1, 1], "n_token": 58, "loss": [0.20855602622032166, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def send_to_server(", "self", ",", "address", ",", "event_name", ",", "event_args", ")", ":", "#NEWLINE#", "#INDENT#", "'Send a message with ``event_name`` and ``event_args`` only\\n    to the server listening at ``address``. ``address`` must have\\n    previously been passed to ``register_server``. This is more\\n    efficient than ``send`` if you only intent to send the event\\n    to a single server and know the address in advance.\\n    '", "#NEWLINE#", "event", "=", "{", "#NEWLINE#", "#INDENT#", "'name'", ":", "event_name", ",", "#NEWLINE#", "'args'", ":", "event_args", ",", "#NEWLINE#", "#UNINDENT#", "}", "#NEWLINE#", "event_data", "=", "zlib", ".", "compress", "(", "pickle", ".", "dumps", "(", "event", ")", ")", "#NEWLINE#", "self", ".", "__remote_servers", "[", "address", "]", ".", "send", "(", "event_data", ")"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [8, 27, 15, 43, 33, 56, 4, 51, 6, 22, 2, 47]}}
{"prediction": {"error_location": 0.8117554187774658, "repair_targets": [], "repair_candidates": [0.0004962568636983633, 0.20593325793743134, 0.6308515667915344, 0.039883725345134735, 0.1187223345041275, 0.0004486318212002516, 0.0007198238745331764, 0.002519340021535754, 5.708041862817481e-05, 0.00017368838598486036, 0.0001251039793714881, 6.917489372426644e-05], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 13:43:21.994888", "n_pass": [47, 3, 2], "n_token": 55, "loss": [0.09095130860805511, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def send_to_server(", "self", ",", "address", ",", "event_name", ",", "event_args", "#INDENT#", "'Send a message with ``event_name`` and ``event_args`` only\\n    to the server listening at ``address``. ``address`` must have\\n    previously been passed to ``register_server``. This is more\\n    efficient than ``send`` if you only intent to send the event\\n    to a single server and know the address in advance.\\n    '", "#NEWLINE#", "event", "=", "{", "#NEWLINE#", "#INDENT#", "'name'", ":", "event_name", ",", "#NEWLINE#", "'args'", ":", "event_args", ",", "#NEWLINE#", "#UNINDENT#", "}", "#NEWLINE#", "event_data", "=", "zlib", ".", "compress", "(", "pickle", ".", "dumps", "(", "event", ")", ")", "#NEWLINE#", "self", ".", "__remote_servers", "[", "address", "]", ".", "send", "(", "event_data", ")"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [8, 24, 12, 40, 30, 53, 4, 48, 6, 19, 2, 44]}}
{"prediction": {"error_location": 0.9130621552467346, "repair_targets": [], "repair_candidates": [0.0007083101663738489, 0.206928089261055, 0.5742682814598083, 0.028549175709486008, 0.18690136075019836, 0.0007632340420968831, 0.0007369995582848787, 0.0007415979634970427, 4.881198037764989e-05, 0.0001512258022557944, 0.00013283816224429756, 7.000400364631787e-05], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 13:43:22.142570", "n_pass": [50, 5, 3], "n_token": 51, "loss": [0.1895291805267334, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def send_to_server(", "self", ",", "address", ",", "event_name", ",", "event_args", "#INDENT#", "'Send a message with ``event_name`` and ``event_args`` only\\n    to the server listening at ``address``. ``address`` must have\\n    previously been passed to ``register_server``. This is more\\n    efficient than ``send`` if you only intent to send the event\\n    to a single server and know the address in advance.\\n    '", "#NEWLINE#", "event", "=", "{", "event_name", ",", "#NEWLINE#", "'args'", ":", "event_args", ",", "#NEWLINE#", "#UNINDENT#", "}", "#NEWLINE#", "event_data", "=", "zlib", ".", "compress", "(", "pickle", ".", "dumps", "(", "event", ")", ")", "#NEWLINE#", "self", ".", "__remote_servers", "[", "address", "]", ".", "send", "(", "event_data", ")"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [8, 20, 12, 36, 26, 49, 4, 44, 6, 15, 2, 40]}}
{"prediction": {"error_location": 0.8273485898971558, "repair_targets": [], "repair_candidates": [0.0008257615845650434, 0.15148808062076569, 0.7689061760902405, 0.03991575539112091, 0.03553152084350586, 0.0019485166994854808, 0.00048753811279311776, 0.0006212256266735494, 3.4733744541881606e-05, 7.65806034905836e-05, 0.00010386743088020012, 6.0187401686562225e-05], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 13:43:22.214449", "n_pass": [54, 6, 4], "n_token": 47, "loss": [0.5781577229499817, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def send_to_server(", "self", ",", "address", ",", "event_name", ",", "event_args", "#INDENT#", "'Send a message with ``event_name`` and ``event_args`` only\\n    to the server listening at ``address``. ``address`` must have\\n    previously been passed to ``register_server``. This is more\\n    efficient than ``send`` if you only intent to send the event\\n    to a single server and know the address in advance.\\n    '", "#NEWLINE#", "event", "=", "{", "event_name", ",", "#NEWLINE#", "'args'", ":", "event_args", ",", "#NEWLINE#", "#UNINDENT#", "}", "#NEWLINE#", "event_data", "(", "pickle", ".", "dumps", "(", "event", ")", ")", "#NEWLINE#", "self", ".", "__remote_servers", "[", "address", "]", ".", "send", "(", "event_data", ")"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [8, 20, 12, 32, 26, 45, 4, 40, 6, 15, 2, 36]}}
{"prediction": {"error_location": 0.5609307885169983, "repair_targets": [], "repair_candidates": [0.0005993826780468225, 0.2120412141084671, 0.7257753014564514, 0.016915222629904747, 0.04253668710589409, 0.0011291556293144822, 0.0004064191016368568, 0.00022482319036498666, 9.832068462856114e-05, 7.406299846479669e-05, 0.0001702790177660063, 2.9153818104532547e-05], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 13:43:22.284403", "n_pass": [55, 7, 5], "n_token": 43, "loss": [0.7533644437789917, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def send_to_server(", "self", ",", "address", ",", "event_name", ",", "event_args", "#INDENT#", "'Send a message with ``event_name`` and ``event_args`` only\\n    to the server listening at ``address``. ``address`` must have\\n    previously been passed to ``register_server``. This is more\\n    efficient than ``send`` if you only intent to send the event\\n    to a single server and know the address in advance.\\n    '", "#NEWLINE#", "event", "=", "{", "event_name", ",", "#NEWLINE#", "'args'", ":", "event_args", ",", "#NEWLINE#", "#UNINDENT#", "}", "#NEWLINE#", "event_data", "(", "event", ")", ")", "#NEWLINE#", "self", ".", "__remote_servers", "[", "address", "]", ".", "send", "(", "event_data", ")"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [8, 20, 12, 28, 26, 41, 4, 36, 6, 15, 2, 32]}}
{"prediction": {"error_location": 0.47077998518943787, "repair_targets": [], "repair_candidates": [0.0011553213698789477, 0.1832074373960495, 0.758651852607727, 0.012228302657604218, 0.04165492206811905, 0.0014655758859589696, 0.000320371997077018, 0.0004772627435158938, 0.0005374703323468566, 9.368563041789457e-05, 0.00017572843353264034, 3.1920044420985505e-05], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 13:43:22.425269", "n_pass": [93, 9, 6], "n_token": 41, "loss": [0.7302621603012085, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def send_to_server(", "self", ",", "address", ",", "event_name", ",", "event_args", "#INDENT#", "'Send a message with ``event_name`` and ``event_args`` only\\n    to the server listening at ``address``. ``address`` must have\\n    previously been passed to ``register_server``. This is more\\n    efficient than ``send`` if you only intent to send the event\\n    to a single server and know the address in advance.\\n    '", "#NEWLINE#", "event", "=", "{", "event_name", ",", "#NEWLINE#", "'args'", ":", "event_args", ",", "#NEWLINE#", "#UNINDENT#", "}", "#NEWLINE#", "event_data", "(", "event", "#NEWLINE#", "self", ".", "__remote_servers", "[", "address", "]", ".", "send", "(", "event_data", ")"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [8, 20, 12, 28, 26, 39, 4, 34, 6, 15, 2, 30]}}
{"prediction": {"error_location": 0.4817827343940735, "repair_targets": [], "repair_candidates": [0.0012015145039185882, 0.16001825034618378, 0.7827063202857971, 0.014471780508756638, 0.037278443574905396, 0.0020316680893301964, 0.00040412775706499815, 0.0006426363834179938, 0.0006824941956438124, 0.00027487825718708336, 0.00024019108968786895, 4.773439286509529e-05], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 13:43:22.492979", "n_pass": [95, 10, 7], "n_token": 39, "loss": [0.2094036489725113, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def send_to_server(", "self", ",", "address", ",", "event_name", ",", "event_args", "#INDENT#", "'Send a message with ``event_name`` and ``event_args`` only\\n    to the server listening at ``address``. ``address`` must have\\n    previously been passed to ``register_server``. This is more\\n    efficient than ``send`` if you only intent to send the event\\n    to a single server and know the address in advance.\\n    '", "#NEWLINE#", "event", "=", "{", "event_name", ",", "#NEWLINE#", "'args'", ":", "event_args", ",", "#NEWLINE#", "#UNINDENT#", "}", "#NEWLINE#", "event_data", "(", "event", "#NEWLINE#", "self", "[", "address", "]", ".", "send", "(", "event_data", ")"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [8, 20, 12, 28, 26, 37, 4, 32, 6, 15, 2, 30]}}
{"prediction": {"error_location": 0.8110677003860474, "repair_targets": [], "repair_candidates": [0.003442631335929036, 0.16617640852928162, 0.7706140875816345, 0.008462945930659771, 0.04425683990120888, 0.0015639811754226685, 0.00040413113310933113, 0.0006821466377004981, 0.0010071700671687722, 0.0029234038665890694, 0.0003766591544263065, 8.959651313489303e-05], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 13:43:22.559734", "n_pass": [97, 11, 8], "n_token": 37, "loss": [0.6099588871002197, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def send_to_server(", "self", ",", "address", ",", "event_name", ",", "event_args", "#INDENT#", "'Send a message with ``event_name`` and ``event_args`` only\\n    to the server listening at ``address``. ``address`` must have\\n    previously been passed to ``register_server``. This is more\\n    efficient than ``send`` if you only intent to send the event\\n    to a single server and know the address in advance.\\n    '", "#NEWLINE#", "event", "=", "{", "event_name", ",", "#NEWLINE#", "'args'", ":", "event_args", ",", "#NEWLINE#", "#UNINDENT#", "}", "#NEWLINE#", "event_data", "(", "event", "#NEWLINE#", "self", "[", "address", "send", "(", "event_data", ")"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [8, 20, 12, 28, 26, 35, 4, 32, 6, 15, 2, 30]}}
{"prediction": {"error_location": 0.543373167514801, "repair_targets": [], "repair_candidates": [0.0022981842048466206, 0.18123632669448853, 0.7564242482185364, 0.008840711787343025, 0.043686408549547195, 0.0011579652782529593, 0.0003755679354071617, 0.0001502522500231862, 0.0002699605538509786, 0.005135699640959501, 0.0003737018851097673, 5.097373286844231e-05], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 13:43:22.625722", "n_pass": [98, 12, 9], "n_token": 35, "loss": [0.8014711737632751, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def send_to_server(", "self", ",", "address", ",", "event_name", ",", "event_args", "#INDENT#", "'Send a message with ``event_name`` and ``event_args`` only\\n    to the server listening at ``address``. ``address`` must have\\n    previously been passed to ``register_server``. This is more\\n    efficient than ``send`` if you only intent to send the event\\n    to a single server and know the address in advance.\\n    '", "#NEWLINE#", "event", "=", "{", "event_name", ",", "#NEWLINE#", "'args'", ":", "event_args", ",", "#NEWLINE#", "#UNINDENT#", "}", "#NEWLINE#", "event_data", "(", "event", "#NEWLINE#", "self", "[", "address", "event_data", ")"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [8, 20, 12, 28, 26, 33, 4, 32, 6, 15, 2, 30]}}
{"prediction": {"error_location": 0.4486684203147888, "repair_targets": [], "repair_candidates": [0.0011155882384628057, 0.27440062165260315, 0.6338697075843811, 0.00403189193457365, 0.0841345489025116, 0.0008451195899397135, 0.00021001661662012339, 0.00018162478227168322, 0.0001597115769982338, 0.0006995141156949103, 0.00015008222544565797, 0.00020151675562374294], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 13:43:22.691186", "n_pass": [101, 13, 10], "n_token": 34, "loss": [0.6280960440635681, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "self", ",", "address", ",", "event_name", ",", "event_args", "#INDENT#", "'Send a message with ``event_name`` and ``event_args`` only\\n    to the server listening at ``address``. ``address`` must have\\n    previously been passed to ``register_server``. This is more\\n    efficient than ``send`` if you only intent to send the event\\n    to a single server and know the address in advance.\\n    '", "#NEWLINE#", "event", "=", "{", "event_name", ",", "#NEWLINE#", "'args'", ":", "event_args", ",", "#NEWLINE#", "#UNINDENT#", "}", "#NEWLINE#", "event_data", "(", "event", "#NEWLINE#", "self", "[", "address", "event_data", ")"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [7, 19, 11, 27, 25, 32, 3, 31, 5, 14, 1, 29]}}
{"prediction": {"error_location": 0.533606767654419, "repair_targets": [], "repair_candidates": [0.01780850999057293, 0.47398823499679565, 0.25487369298934937, 0.00349012715741992, 0.24667669832706451, 0.001151371281594038, 0.00025436232681386173, 0.0001252810179721564, 0.0002246617805212736, 0.0010185744613409042, 0.00016584379773121327, 0.00022266125597525388], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 13:43:22.756338", "n_pass": [103, 14, 11], "n_token": 33, "loss": [0.9600744247436523, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "self", "address", ",", "event_name", ",", "event_args", "#INDENT#", "'Send a message with ``event_name`` and ``event_args`` only\\n    to the server listening at ``address``. ``address`` must have\\n    previously been passed to ``register_server``. This is more\\n    efficient than ``send`` if you only intent to send the event\\n    to a single server and know the address in advance.\\n    '", "#NEWLINE#", "event", "=", "{", "event_name", ",", "#NEWLINE#", "'args'", ":", "event_args", ",", "#NEWLINE#", "#UNINDENT#", "}", "#NEWLINE#", "event_data", "(", "event", "#NEWLINE#", "self", "[", "address", "event_data", ")"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [6, 18, 10, 26, 24, 31, 2, 30, 4, 13, 1, 28]}}
{"prediction": {"error_location": 0.382864385843277, "repair_targets": [], "repair_candidates": [0.013654188252985477, 0.8411620259284973, 0.0490826815366745, 0.0006492446991614997, 0.09454364329576492, 0.00020375278836581856, 7.58224559831433e-05, 3.8771479012211785e-05, 6.922437023604289e-05, 0.00042392051545903087, 3.672375169117004e-05, 5.9992398746544495e-05], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 13:43:22.822636", "n_pass": [107, 15, 12], "n_token": 31, "loss": [0.9428488612174988, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "self", "address", ",", "event_name", ",", "event_args", "#NEWLINE#", "event", "=", "{", "event_name", ",", "#NEWLINE#", "'args'", ":", "event_args", ",", "#NEWLINE#", "#UNINDENT#", "}", "#NEWLINE#", "event_data", "(", "event", "#NEWLINE#", "self", "[", "address", "event_data", ")"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [6, 16, 8, 24, 22, 29, 2, 28, 4, 11, 1, 26]}}
{"prediction": {"error_location": 0.38951653242111206, "repair_targets": [], "repair_candidates": [0.015743276104331017, 0.8131533861160278, 0.09912694245576859, 0.0005217133439145982, 0.0701233372092247, 0.00021478335838764906, 9.901290468405932e-05, 8.246795187005773e-05, 7.423542410833761e-05, 0.0007391121471300721, 4.601002365234308e-05, 7.571901369374245e-05], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 13:43:22.884815", "n_pass": [109, 16, 13], "n_token": 29, "loss": [0.9889174699783325, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "self", "address", ",", "event_name", ",", "event_args", "#NEWLINE#", "event", "event_name", ",", "#NEWLINE#", "'args'", ":", "event_args", ",", "#NEWLINE#", "#UNINDENT#", "}", "#NEWLINE#", "event_data", "(", "event", "#NEWLINE#", "self", "[", "address", "event_data", ")"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [6, 14, 8, 22, 20, 27, 2, 26, 4, 9, 1, 24]}}
{"prediction": {"error_location": 0.37197914719581604, "repair_targets": [], "repair_candidates": [0.013858775608241558, 0.729836642742157, 0.12327539920806885, 0.0012908261269330978, 0.11155529320240021, 0.017674051225185394, 0.00020293374836910516, 0.00031455460703000426, 0.0002552260411903262, 0.0014209817163646221, 0.00010617175576044247, 0.00020913369371555746], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 13:43:22.946087", "n_pass": [111, 17, 14], "n_token": 27, "loss": [1.0265907049179077, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "self", "address", ",", "event_name", ",", "event_args", "#NEWLINE#", "event", "event_name", ",", ":", "event_args", ",", "#NEWLINE#", "#UNINDENT#", "}", "#NEWLINE#", "event_data", "(", "event", "#NEWLINE#", "self", "[", "address", "event_data", ")"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [6, 12, 8, 20, 18, 25, 2, 24, 4, 9, 1, 22]}}
{"prediction": {"error_location": 0.3582261800765991, "repair_targets": [], "repair_candidates": [0.026185430586338043, 0.8099220395088196, 0.08886773884296417, 0.0010585575364530087, 0.03514987975358963, 0.03663471341133118, 0.000323091255268082, 0.00031988584669306874, 0.00019392087415326387, 0.0011042057303711772, 9.19126468943432e-05, 0.0001486594701418653], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 13:43:23.192808", "n_pass": [153, 21, 15], "n_token": 26, "loss": [1.1457068920135498, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "self", "address", ",", "event_name", ",", "event_args", "#NEWLINE#", "event", "event_name", ",", ":", "event_args", ",", "#UNINDENT#", "}", "#NEWLINE#", "event_data", "(", "event", "#NEWLINE#", "self", "[", "address", "event_data", ")"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [6, 12, 8, 19, 17, 24, 2, 23, 4, 9, 1, 21]}}
{"prediction": {"error_location": 0.31799906492233276, "repair_targets": [], "repair_candidates": [0.021073637530207634, 0.6536650657653809, 0.15633024275302887, 0.0020961002446711063, 0.08928810805082321, 0.07416525483131409, 0.0008752552676014602, 0.0007534282631240785, 0.00026397511828690767, 0.0012414712691679597, 9.36016658670269e-05, 0.00015394999354612082], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 13:43:23.313801", "n_pass": [155, 23, 16], "n_token": 25, "loss": [0.8154534101486206, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "self", "address", ",", "event_name", ",", "event_args", "#NEWLINE#", "event", "event_name", ",", ":", "event_args", ",", "#UNINDENT#", "#NEWLINE#", "event_data", "(", "event", "#NEWLINE#", "self", "[", "address", "event_data", ")"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [6, 12, 8, 18, 16, 23, 2, 22, 4, 9, 1, 20]}}
{"prediction": {"error_location": 0.4424387216567993, "repair_targets": [], "repair_candidates": [0.029503213241696358, 0.6884016394615173, 0.1607922464609146, 0.002595054917037487, 0.04695378988981247, 0.059070441871881485, 0.0017090397886931896, 0.0071904840879142284, 0.0006223548552952707, 0.0025971769355237484, 0.0002019193780142814, 0.00036263922811485827], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 13:43:23.373659", "n_pass": [156, 24, 17], "n_token": 24, "loss": [0.9879635572433472, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "self", "address", ",", "event_name", ",", "event_args", "#NEWLINE#", "event", "event_name", ",", ":", "event_args", ",", "#UNINDENT#", "event_data", "(", "event", "#NEWLINE#", "self", "[", "address", "event_data", ")"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [6, 12, 8, 17, 15, 22, 2, 21, 4, 9, 1, 19]}}
{"prediction": {"error_location": 0.37233415246009827, "repair_targets": [], "repair_candidates": [0.021670915186405182, 0.6271277070045471, 0.15464335680007935, 0.0014101554406806827, 0.07671596109867096, 0.11418028175830841, 0.0005151116638444364, 0.0012967740185558796, 0.00025595235638320446, 0.0018126225331798196, 0.0001271727669518441, 0.00024397166271228343], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 13:43:23.433011", "n_pass": [158, 25, 18], "n_token": 23, "loss": [0.40489545464515686, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "self", "address", ",", "event_name", ",", "event_args", "#NEWLINE#", "event", "event_name", ",", ":", "event_args", ",", "#UNINDENT#", "event_data", "event", "#NEWLINE#", "self", "[", "address", "event_data", ")"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [6, 12, 8, 16, 15, 21, 2, 20, 4, 9, 1, 18]}}
{"prediction": {"error_location": 0.6670466065406799, "repair_targets": [], "repair_candidates": [0.025835756212472916, 0.7734993100166321, 0.07293956726789474, 0.0007443576469086111, 0.08562692999839783, 0.032595694065093994, 0.0002688536769710481, 0.0022750990465283394, 0.0009483752073720098, 0.004507983569055796, 0.0003444838512223214, 0.00041353522101417184], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 13:43:23.552786", "n_pass": [162, 27, 19], "n_token": 22, "loss": [0.0695890262722969, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "self", "address", ",", "event_name", ",", "event_args", "#NEWLINE#", "event", "event_name", ",", ":", "event_args", ",", "#UNINDENT#", "event_data", "event", "#NEWLINE#", "self", "address", "event_data", ")"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [6, 12, 8, 16, 15, 20, 2, 19, 4, 9, 1, 18]}}
{"prediction": {"error_location": 0.9327768683433533, "repair_targets": [], "repair_candidates": [0.02162177860736847, 0.8009347915649414, 0.06798987835645676, 0.0004018733452539891, 0.03733910992741585, 0.033632420003414154, 0.000219781490159221, 0.0008107202011160553, 0.0007833355339244008, 0.010085372254252434, 0.0071647074073553085, 0.019016258418560028], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 13:43:23.611296", "n_pass": [165, 28, 20], "n_token": 21, "loss": [0.06564001739025116, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "self", "address", ",", "event_name", ",", "event_args", "#NEWLINE#", "event", "event_name", ",", ":", "event_args", ",", "#UNINDENT#", "event_data", "event", "#NEWLINE#", "self", "address", "event_data"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [6, 12, 8, 16, 15, 20, 2, 19, 4, 9, 1, 18]}}
{"prediction": {"error_location": 0.9364678859710693, "repair_targets": [], "repair_candidates": [0.02188042551279068, 0.8230589628219604, 0.05415688455104828, 0.0003219671780243516, 0.02728532999753952, 0.017219271510839462, 0.0001937567867571488, 0.0005523160798475146, 0.0013514786260202527, 0.03842140734195709, 0.0052657658234238625, 0.010292495600879192], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 13:43:23.669386", "n_pass": [169, 29, 21], "n_token": 20, "loss": [0.07363314181566238, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "self", "address", "event_name", ",", "event_args", "#NEWLINE#", "event", "event_name", ",", ":", "event_args", ",", "#UNINDENT#", "event_data", "event", "#NEWLINE#", "self", "address", "event_data"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [5, 11, 7, 15, 14, 19, 2, 18, 3, 8, 1, 17]}}
{"prediction": {"error_location": 0.9290124177932739, "repair_targets": [], "repair_candidates": [0.013623638078570366, 0.7068451046943665, 0.07985251396894455, 0.00037388925557024777, 0.036984674632549286, 0.08029793947935104, 0.00034961762139573693, 0.000982288271188736, 0.0014802097575739026, 0.04852554202079773, 0.00942234881222248, 0.021262263879179955], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 13:43:23.727474", "n_pass": [171, 30, 22], "n_token": 19, "loss": [0.04241324961185455, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "self", "address", "event_name", "event_args", "#NEWLINE#", "event", "event_name", ",", ":", "event_args", ",", "#UNINDENT#", "event_data", "event", "#NEWLINE#", "self", "address", "event_data"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [4, 10, 6, 14, 13, 18, 2, 17, 3, 7, 1, 16]}}
{"prediction": {"error_location": 0.9584737420082092, "repair_targets": [], "repair_candidates": [0.0360223613679409, 0.43631795048713684, 0.0320451445877552, 0.0017667539650574327, 0.07739492505788803, 0.14025849103927612, 0.001774052856490016, 0.003326035337522626, 0.007157428655773401, 0.16320255398750305, 0.03685905039310455, 0.06387518346309662], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 13:43:23.784767", "n_pass": [173, 31, 23], "n_token": 18, "loss": [0.042563945055007935, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "self", "address", "event_name", "event_args", "event", "event_name", ",", ":", "event_args", ",", "#UNINDENT#", "event_data", "event", "#NEWLINE#", "self", "address", "event_data"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [4, 9, 5, 13, 12, 17, 2, 16, 3, 6, 1, 15]}}
{"prediction": {"error_location": 0.9583292007446289, "repair_targets": [], "repair_candidates": [0.020948100835084915, 0.3599900007247925, 0.04990733414888382, 0.009128661826252937, 0.01358899287879467, 0.20632165670394897, 0.005930603016167879, 0.008696134202182293, 0.011133317835628986, 0.17349840700626373, 0.05343988910317421, 0.08741685003042221], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 13:43:23.843463", "n_pass": [176, 32, 24], "n_token": 17, "loss": [0.04578641802072525, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "self", "address", "event_name", "event_args", "event", "event_name", ":", "event_args", ",", "#UNINDENT#", "event_data", "event", "#NEWLINE#", "self", "address", "event_data"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [4, 8, 5, 12, 11, 16, 2, 15, 3, 6, 1, 14]}}
{"prediction": {"error_location": 0.955246090888977, "repair_targets": [], "repair_candidates": [0.057872314006090164, 0.4123519957065582, 0.09833015501499176, 0.012561044655740261, 0.003260680241510272, 0.04033958911895752, 0.004871782846748829, 0.01068639662116766, 0.01269557699561119, 0.16786593198776245, 0.07584964483976364, 0.10331489145755768], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 13:43:23.899516", "n_pass": [177, 33, 25], "n_token": 16, "loss": [0.12222690880298615, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "self", "address", "event_name", "event_args", "event", "event_name", "event_args", ",", "#UNINDENT#", "event_data", "event", "#NEWLINE#", "self", "address", "event_data"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [4, 7, 5, 11, 10, 15, 2, 14, 3, 6, 1, 13]}}
{"prediction": {"error_location": 0.8849474191665649, "repair_targets": [], "repair_candidates": [0.13946637511253357, 0.531524121761322, 0.17973999679088593, 0.02066137082874775, 0.0006281642708927393, 0.015223316848278046, 0.014824260957539082, 0.007302423007786274, 0.004325585439801216, 0.023484474048018456, 0.013296309858560562, 0.04952362924814224], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 13:43:23.955029", "n_pass": [179, 34, 26], "n_token": 15, "loss": [0.13557754456996918, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "self", "address", "event_name", "event_args", "event", "event_name", "event_args", "#UNINDENT#", "event_data", "event", "#NEWLINE#", "self", "address", "event_data"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [4, 7, 5, 10, 9, 14, 2, 13, 3, 6, 1, 12]}}
{"prediction": {"error_location": 0.8732114434242249, "repair_targets": [], "repair_candidates": [0.08040601760149002, 0.2953352630138397, 0.3252100944519043, 0.05289312079548836, 0.0009104642667807639, 0.013935266993939877, 0.01661784015595913, 0.026837535202503204, 0.007808072958141565, 0.06335961073637009, 0.03971457853913307, 0.07697217166423798], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 13:43:24.010124", "n_pass": [180, 35, 27], "n_token": 14, "loss": [0.1206539198756218, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "self", "address", "event_name", "event_args", "event", "event_name", "event_args", "event_data", "event", "#NEWLINE#", "self", "address", "event_data"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [4, 7, 5, 9, 8, 13, 2, 12, 3, 6, 1, 11]}}
{"prediction": {"error_location": 0.8863406777381897, "repair_targets": [], "repair_candidates": [0.06979871541261673, 0.4361342489719391, 0.11401593685150146, 0.011462573893368244, 0.001236775773577392, 0.05764229595661163, 0.14582642912864685, 0.019144540652632713, 0.014491027221083641, 0.029791122302412987, 0.04106440395116806, 0.059391994029283524], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 13:43:24.064356", "n_pass": [183, 36, 28], "n_token": 13, "loss": [0.1922527253627777, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "self", "address", "event_name", "event_args", "event", "event_name", "event_args", "event_data", "event", "self", "address", "event_data"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [4, 7, 5, 9, 8, 12, 2, 11, 3, 6, 1, 10]}}
{"prediction": {"error_location": 0.8250983357429504, "repair_targets": [], "repair_candidates": [0.024745246395468712, 0.7440467476844788, 0.15320365130901337, 0.008305770345032215, 0.0018037761328741908, 0.049341581761837006, 0.012604829855263233, 0.0018832263303920627, 0.0018906656187027693, 0.00047474223538301885, 0.0003970548859797418, 0.0013026912929490209], "target_probs": 0.0}}




Minimal simplified tokens:

['#NEWLINE#', 'self', 'address', 'event_name', 'event_args', 'event', 'event_name', 'event_args', 'event_data', 'event', 'self', 'address', 'event_data']
