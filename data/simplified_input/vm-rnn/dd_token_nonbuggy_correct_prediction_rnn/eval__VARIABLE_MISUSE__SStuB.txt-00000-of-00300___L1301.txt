
Original sample:

{"has_bug": false, "bug_kind": 0, "bug_kind_name": "NONE", "source_tokens": ["#NEWLINE#", "def is_fullfilled_by(", "self", ",", "other", ")", ":", "#NEWLINE#", "#INDENT#", "'\\n        Checks if the other index already fulfills\\n        all the indexing and constraint needs of the current one.\\n\\n        :param other: The other index\\n        :type other: Index\\n\\n        :rtype: bool\\n        '", "#NEWLINE#", "if", "(", "len", "(", "other", ".", "get_columns", "(", ")", ")", "!=", "len", "(", "self", ".", "get_columns", "(", ")", ")", ")", ":", "#NEWLINE#", "#INDENT#", "return", "False", "#NEWLINE#", "#UNINDENT#", "if", "(", "not", "self", ".", "spans_columns", "(", "other", ".", "get_columns", "(", ")", ")", ")", ":", "#NEWLINE#", "#INDENT#", "return", "False", "#NEWLINE#", "#UNINDENT#", "if", "(", "not", "self", ".", "same_partial_index", "(", "other", ")", ")", ":", "#NEWLINE#", "#INDENT#", "return", "False", "#NEWLINE#", "#UNINDENT#", "if", "self", ".", "is_simple_index", "(", ")", ":", "#NEWLINE#", "#INDENT#", "return", "True", "#NEWLINE#", "#UNINDENT#", "if", "(", "other", ".", "is_primary", "(", ")", "!=", "self", ".", "is_primary", "(", ")", ")", ":", "#NEWLINE#", "#INDENT#", "return", "False", "#NEWLINE#", "#UNINDENT#", "if", "(", "other", ".", "is_unique", "(", ")", "!=", "self", ".", "is_unique", "(", ")", ")", ":", "#NEWLINE#", "#INDENT#", "return", "False", "#NEWLINE#", "#UNINDENT#", "return", "True"], "error_location": [0], "repair_targets": [], "repair_candidates": [4, 15, 45, 66, 91, 112, 2, 24, 41, 62, 77, 97, 118], "provenances": [{"datasetProvenance": {"datasetName": "ETHPy150Open", "filepath": "sdispater/orator/orator/dbal/index.py", "license": "mit", "note": "license: bigquery_api"}}], "txt_file": "eval__VARIABLE_MISUSE__SStuB.txt-00000-of-00300", "js_count": 1301, "results": {"model": "rnn", "prob": {"loc": [[0.9939445853233337, 3.3180681384692434e-06, 1.2227741308379336e-06, 6.6863914405246305e-09, 1.5171966651905677e-06, 6.152761500288761e-08, 1.9565860043258e-07, 6.8296940298751e-06, 1.3433083267955226e-06, 7.437866770487744e-06, 2.5475288566667587e-05, 3.596056785681867e-07, 2.8375147849146742e-06, 9.089243349080789e-07, 6.031722818988783e-07, 4.789709055330604e-05, 5.619725840233514e-08, 1.019196247398213e-06, 2.672078835530556e-06, 1.3301225408213213e-05, 4.81810843666608e-07, 1.7695349470159272e-06, 7.2526645453763194e-06, 3.164257122989511e-06, 2.4986937205540016e-05, 2.803310792387492e-07, 1.0731010888775927e-06, 2.525331865399494e-06, 2.166104968637228e-05, 1.3487562000591424e-06, 2.3239388156071072e-06, 4.513161911745556e-06, 7.83319501351798e-06, 1.5804388340256992e-06, 2.4061257136054337e-05, 4.318591163610108e-05, 8.313587386510335e-06, 3.5967532312497497e-05, 4.1432227249060816e-07, 1.2968685041414574e-06, 3.687645744321344e-07, 6.503302074634121e-07, 7.231298226884064e-09, 5.94901052863861e-08, 4.965514932564474e-08, 1.7646048945607617e-05, 5.432756111645176e-08, 6.125750928731577e-07, 4.5941424104967155e-06, 0.00013725488679483533, 1.146555746345257e-06, 1.3101423519401578e-06, 3.581007604225306e-06, 5.9563512877502944e-06, 8.221696816690383e-07, 2.02614173758775e-05, 5.432495163404383e-05, 6.622887667617761e-06, 6.521269824588671e-05, 4.4719948277816e-07, 2.763469638011884e-06, 9.272827696804598e-07, 1.8957815655085142e-06, 5.939036782365292e-07, 4.1991876642555326e-09, 1.6800908042569063e-07, 0.003260146826505661, 2.7641326028060575e-07, 1.125460812545498e-06, 5.8838145378103945e-06, 6.8601789280364756e-06, 3.3085552786360495e-07, 1.1606560292420909e-05, 4.269059718353674e-05, 1.0122416824742686e-05, 6.651919829891995e-05, 6.380777790582215e-07, 1.3579333426605444e-05, 4.370909891804331e-07, 1.8893794972996147e-08, 1.7425919907054777e-07, 1.1573223673622124e-05, 1.215751012750843e-06, 1.8619066395331174e-06, 1.5831776067898318e-07, 4.237257144268369e-06, 6.824433057772694e-06, 7.586471042486664e-07, 5.148994205228519e-06, 6.003862296211082e-08, 7.44728822610341e-07, 0.0002488727914169431, 1.6097661159619747e-07, 5.253168566810018e-08, 3.3157905363623286e-06, 7.017631287453696e-05, 7.22581887657725e-07, 2.553629565227311e-05, 4.9999659523791706e-08, 3.6882628506873516e-08, 9.726574035084923e-07, 1.2469488865463063e-05, 6.282667754931026e-07, 1.7949480479728663e-06, 5.195241556066321e-06, 8.50185983836127e-07, 2.106697138515301e-05, 3.1042523914948106e-05, 6.0153656704642344e-06, 2.5729807020979933e-05, 1.4467633491221932e-07, 2.5168446882162243e-06, 0.00040332067874260247, 7.633713750010429e-08, 3.3462211490586924e-07, 6.898282208567252e-06, 0.00042554852552711964, 2.863148210963118e-06, 6.5919644839596e-05, 7.286405434570042e-08, 3.082989223912591e-07, 1.6138002365551074e-06, 4.5045297156320885e-05, 2.6069906198245008e-06, 5.859444627276389e-06, 1.0520008800085634e-05, 7.042013976388262e-07, 2.2339054339681752e-05, 7.711358921369538e-05, 3.546707603163668e-06, 2.922482281064731e-06, 6.0039983509341255e-05, 0.00036898712278343737]], "pointer": [[0.0, 0.0, 0.056590110063552856, 0.0, 0.19722847640514374, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.008355870842933655, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.003403829177841544, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0027386448346078396, 0.0, 0.0, 0.0, 0.02284628339111805, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0007557444623671472, 0.0, 0.0, 0.0, 0.0019646661821752787, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.05510459095239639, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1864398568868637, 0.0, 0.0, 0.0, 0.0, 0.0, 0.021526016294956207, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.43602806329727173, 0.0, 0.0, 0.0, 0.0, 0.0, 0.007017861120402813, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]], "target": [0.0]}, "loss": [0.006073708180338144, 0.0], "acc": [1.0, 0.0, 0.0, 0.0]}}


Trace of simplified code(s):

{"result": {"time": "2021-02-11 13:48:45.104199", "n_pass": [1, 1, 1], "n_token": 133, "loss": [0.006073708180338144, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def is_fullfilled_by(", "self", ",", "other", ")", ":", "#NEWLINE#", "#INDENT#", "'\\n        Checks if the other index already fulfills\\n        all the indexing and constraint needs of the current one.\\n\\n        :param other: The other index\\n        :type other: Index\\n\\n        :rtype: bool\\n        '", "#NEWLINE#", "if", "(", "len", "(", "other", ".", "get_columns", "(", ")", ")", "!=", "len", "(", "self", ".", "get_columns", "(", ")", ")", ")", ":", "#NEWLINE#", "#INDENT#", "return", "False", "#NEWLINE#", "#UNINDENT#", "if", "(", "not", "self", ".", "spans_columns", "(", "other", ".", "get_columns", "(", ")", ")", ")", ":", "#NEWLINE#", "#INDENT#", "return", "False", "#NEWLINE#", "#UNINDENT#", "if", "(", "not", "self", ".", "same_partial_index", "(", "other", ")", ")", ":", "#NEWLINE#", "#INDENT#", "return", "False", "#NEWLINE#", "#UNINDENT#", "if", "self", ".", "is_simple_index", "(", ")", ":", "#NEWLINE#", "#INDENT#", "return", "True", "#NEWLINE#", "#UNINDENT#", "if", "(", "other", ".", "is_primary", "(", ")", "!=", "self", ".", "is_primary", "(", ")", ")", ":", "#NEWLINE#", "#INDENT#", "return", "False", "#NEWLINE#", "#UNINDENT#", "if", "(", "other", ".", "is_unique", "(", ")", "!=", "self", ".", "is_unique", "(", ")", ")", ":", "#NEWLINE#", "#INDENT#", "return", "False", "#NEWLINE#", "#UNINDENT#", "return", "True"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [4, 15, 45, 66, 91, 112, 2, 24, 41, 62, 77, 97, 118]}}
{"prediction": {"error_location": 0.9939445853233337, "repair_targets": [], "repair_candidates": [0.056590110063552856, 0.19722847640514374, 0.008355870842933655, 0.003403829177841544, 0.0027386448346078396, 0.02284628339111805, 0.0007557444623671472, 0.0019646661821752787, 0.05510459095239639, 0.1864398568868637, 0.021526016294956207, 0.43602806329727173, 0.007017861120402813], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 13:48:45.220135", "n_pass": [46, 2, 2], "n_token": 125, "loss": [0.006627010181546211, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def is_fullfilled_by(", "self", ",", "other", ")", ":", "#NEWLINE#", "#INDENT#", "'\\n        Checks if the other index already fulfills\\n        all the indexing and constraint needs of the current one.\\n\\n        :param other: The other index\\n        :type other: Index\\n\\n        :rtype: bool\\n        '", "#NEWLINE#", "if", "(", "len", "(", "other", "self", ".", "get_columns", "(", ")", ")", ")", ":", "#NEWLINE#", "#INDENT#", "return", "False", "#NEWLINE#", "#UNINDENT#", "if", "(", "not", "self", ".", "spans_columns", "(", "other", ".", "get_columns", "(", ")", ")", ")", ":", "#NEWLINE#", "#INDENT#", "return", "False", "#NEWLINE#", "#UNINDENT#", "if", "(", "not", "self", ".", "same_partial_index", "(", "other", ")", ")", ":", "#NEWLINE#", "#INDENT#", "return", "False", "#NEWLINE#", "#UNINDENT#", "if", "self", ".", "is_simple_index", "(", ")", ":", "#NEWLINE#", "#INDENT#", "return", "True", "#NEWLINE#", "#UNINDENT#", "if", "(", "other", ".", "is_primary", "(", ")", "!=", "self", ".", "is_primary", "(", ")", ")", ":", "#NEWLINE#", "#INDENT#", "return", "False", "#NEWLINE#", "#UNINDENT#", "if", "(", "other", ".", "is_unique", "(", ")", "!=", "self", ".", "is_unique", "(", ")", ")", ":", "#NEWLINE#", "#INDENT#", "return", "False", "#NEWLINE#", "#UNINDENT#", "return", "True"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [4, 15, 37, 58, 83, 104, 2, 16, 33, 54, 69, 89, 110]}}
{"prediction": {"error_location": 0.9933945536613464, "repair_targets": [], "repair_candidates": [0.017838485538959503, 0.36764225363731384, 0.018501674756407738, 0.00526514183729887, 0.0021442603319883347, 0.013865898363292217, 0.0006966161890886724, 0.0012036212719976902, 0.04714871197938919, 0.16881783306598663, 0.018695110455155373, 0.33263131976127625, 0.005549056921154261], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 13:48:45.330650", "n_pass": [47, 3, 3], "n_token": 117, "loss": [0.004640405531972647, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def is_fullfilled_by(", "self", ",", "other", ")", ":", "#NEWLINE#", "#INDENT#", "'\\n        Checks if the other index already fulfills\\n        all the indexing and constraint needs of the current one.\\n\\n        :param other: The other index\\n        :type other: Index\\n\\n        :rtype: bool\\n        '", "#NEWLINE#", "if", "(", "len", "(", "other", "self", ".", "get_columns", "(", ")", ")", ")", ":", "not", "self", ".", "spans_columns", "(", "other", ".", "get_columns", "(", ")", ")", ")", ":", "#NEWLINE#", "#INDENT#", "return", "False", "#NEWLINE#", "#UNINDENT#", "if", "(", "not", "self", ".", "same_partial_index", "(", "other", ")", ")", ":", "#NEWLINE#", "#INDENT#", "return", "False", "#NEWLINE#", "#UNINDENT#", "if", "self", ".", "is_simple_index", "(", ")", ":", "#NEWLINE#", "#INDENT#", "return", "True", "#NEWLINE#", "#UNINDENT#", "if", "(", "other", ".", "is_primary", "(", ")", "!=", "self", ".", "is_primary", "(", ")", ")", ":", "#NEWLINE#", "#INDENT#", "return", "False", "#NEWLINE#", "#UNINDENT#", "if", "(", "other", ".", "is_unique", "(", ")", "!=", "self", ".", "is_unique", "(", ")", ")", ":", "#NEWLINE#", "#INDENT#", "return", "False", "#NEWLINE#", "#UNINDENT#", "return", "True"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [4, 15, 29, 50, 75, 96, 2, 16, 25, 46, 61, 81, 102]}}
{"prediction": {"error_location": 0.995370090007782, "repair_targets": [], "repair_candidates": [0.026650061830878258, 0.16864198446273804, 0.04625571146607399, 0.006031138822436333, 0.00474415672942996, 0.00934963021427393, 0.0007430322002619505, 0.002173221204429865, 0.0685824304819107, 0.21743080019950867, 0.025407757610082626, 0.4170592129230499, 0.006930917035788298], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 13:48:45.435214", "n_pass": [49, 4, 4], "n_token": 109, "loss": [0.004616911057382822, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def is_fullfilled_by(", "self", ",", "other", ")", ":", "#NEWLINE#", "#INDENT#", "'\\n        Checks if the other index already fulfills\\n        all the indexing and constraint needs of the current one.\\n\\n        :param other: The other index\\n        :type other: Index\\n\\n        :rtype: bool\\n        '", "#NEWLINE#", "if", "(", "len", "(", "other", "self", ".", "get_columns", "(", ")", ")", ")", ":", "not", "self", ".", "spans_columns", "(", "other", ".", "get_columns", "False", "#NEWLINE#", "#UNINDENT#", "if", "(", "not", "self", ".", "same_partial_index", "(", "other", ")", ")", ":", "#NEWLINE#", "#INDENT#", "return", "False", "#NEWLINE#", "#UNINDENT#", "if", "self", ".", "is_simple_index", "(", ")", ":", "#NEWLINE#", "#INDENT#", "return", "True", "#NEWLINE#", "#UNINDENT#", "if", "(", "other", ".", "is_primary", "(", ")", "!=", "self", ".", "is_primary", "(", ")", ")", ":", "#NEWLINE#", "#INDENT#", "return", "False", "#NEWLINE#", "#UNINDENT#", "if", "(", "other", ".", "is_unique", "(", ")", "!=", "self", ".", "is_unique", "(", ")", ")", ":", "#NEWLINE#", "#INDENT#", "return", "False", "#NEWLINE#", "#UNINDENT#", "return", "True"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [4, 15, 29, 42, 67, 88, 2, 16, 25, 38, 53, 73, 94]}}
{"prediction": {"error_location": 0.9953938722610474, "repair_targets": [], "repair_candidates": [0.08828708529472351, 0.09295906871557236, 0.035144660621881485, 0.04853896424174309, 0.008724721148610115, 0.008936266414821148, 0.0013459227047860622, 0.0026013823226094246, 0.0728813111782074, 0.2271195352077484, 0.024978497996926308, 0.3802342414855957, 0.008248332887887955], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 13:48:45.535887", "n_pass": [53, 5, 5], "n_token": 101, "loss": [0.0072430879808962345, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def is_fullfilled_by(", "self", ",", "other", ")", ":", "#NEWLINE#", "#INDENT#", "'\\n        Checks if the other index already fulfills\\n        all the indexing and constraint needs of the current one.\\n\\n        :param other: The other index\\n        :type other: Index\\n\\n        :rtype: bool\\n        '", "#NEWLINE#", "if", "(", "len", "(", "other", "self", ".", "get_columns", "(", ")", ")", ")", ":", "not", "self", ".", "spans_columns", "(", "other", ".", "get_columns", "False", "#NEWLINE#", "#UNINDENT#", "if", "(", "not", "self", ".", "same_partial_index", "(", "other", ")", ")", ":", "#NEWLINE#", "#INDENT#", "return", "False", "#NEWLINE#", "#UNINDENT#", "if", "self", ".", "is_simple_index", "#UNINDENT#", "if", "(", "other", ".", "is_primary", "(", ")", "!=", "self", ".", "is_primary", "(", ")", ")", ":", "#NEWLINE#", "#INDENT#", "return", "False", "#NEWLINE#", "#UNINDENT#", "if", "(", "other", ".", "is_unique", "(", ")", "!=", "self", ".", "is_unique", "(", ")", ")", ":", "#NEWLINE#", "#INDENT#", "return", "False", "#NEWLINE#", "#UNINDENT#", "return", "True"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [4, 15, 29, 42, 59, 80, 2, 16, 25, 38, 53, 65, 86]}}
{"prediction": {"error_location": 0.9927828311920166, "repair_targets": [], "repair_candidates": [0.04384514316916466, 0.04039502516388893, 0.013767605647444725, 0.023037495091557503, 0.0035536163486540318, 0.0035093461629003286, 0.0005275827134028077, 0.000646747590508312, 0.20949837565422058, 0.36784717440605164, 0.02416909672319889, 0.26400312781333923, 0.005199705250561237], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 13:48:45.632404", "n_pass": [58, 6, 6], "n_token": 92, "loss": [0.005979388020932674, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def is_fullfilled_by(", "self", ",", "other", ")", ":", "#NEWLINE#", "#INDENT#", "'\\n        Checks if the other index already fulfills\\n        all the indexing and constraint needs of the current one.\\n\\n        :param other: The other index\\n        :type other: Index\\n\\n        :rtype: bool\\n        '", "#NEWLINE#", "if", "(", "len", "(", "other", "self", ".", "get_columns", "(", ")", ")", ")", ":", "not", "self", ".", "spans_columns", "(", "other", ".", "get_columns", "False", "#NEWLINE#", "#UNINDENT#", "if", "(", "not", "self", ".", "same_partial_index", "(", "other", ")", ")", ":", "#NEWLINE#", "#INDENT#", "return", "False", "#NEWLINE#", "#UNINDENT#", "if", "self", ".", "is_simple_index", "#UNINDENT#", "if", "(", "other", ".", "is_primary", "(", ")", "!=", "self", ".", "is_primary", "(", ")", ")", ":", "#NEWLINE#", "#INDENT#", "return", "False", "#NEWLINE#", "#UNINDENT#", "if", "(", "other", ".", "is_unique", "(", ")", "!=", "self", ".", "is_unique", "(", ")", ")"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [4, 15, 29, 42, 59, 80, 2, 16, 25, 38, 53, 65, 86]}}
{"prediction": {"error_location": 0.9940383434295654, "repair_targets": [], "repair_candidates": [0.02345684915781021, 0.05457019805908203, 0.024805858731269836, 0.038030702620744705, 0.0021964360494166613, 0.0033017818350344896, 0.00048660801257938147, 0.0006417916738428175, 0.1292320340871811, 0.4334319829940796, 0.02264970727264881, 0.2652670741081238, 0.001928950659930706], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 13:48:45.730472", "n_pass": [94, 7, 7], "n_token": 88, "loss": [0.006185790989547968, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def is_fullfilled_by(", "self", ",", "other", ")", ":", "#NEWLINE#", "(", "len", "(", "other", "self", ".", "get_columns", "(", ")", ")", ")", ":", "not", "self", ".", "spans_columns", "(", "other", ".", "get_columns", "False", "#NEWLINE#", "#UNINDENT#", "if", "(", "not", "self", ".", "same_partial_index", "(", "other", ")", ")", ":", "#NEWLINE#", "#INDENT#", "return", "False", "#NEWLINE#", "#UNINDENT#", "if", "self", ".", "is_simple_index", "#UNINDENT#", "if", "(", "other", ".", "is_primary", "(", ")", "!=", "self", ".", "is_primary", "(", ")", ")", ":", "#NEWLINE#", "#INDENT#", "return", "False", "#NEWLINE#", "#UNINDENT#", "if", "(", "other", ".", "is_unique", "(", ")", "!=", "self", ".", "is_unique", "(", ")", ")"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [4, 11, 25, 38, 55, 76, 2, 12, 21, 34, 49, 61, 82]}}
{"prediction": {"error_location": 0.9938333034515381, "repair_targets": [], "repair_candidates": [0.03229786083102226, 0.026768755167722702, 0.016398422420024872, 0.018056107684969902, 0.004515503067523241, 0.0035129294265061617, 0.0006639182684011757, 0.000551871838979423, 0.25523295998573303, 0.34678035974502563, 0.02571343630552292, 0.2676715850830078, 0.001836249721236527], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 13:48:45.823075", "n_pass": [96, 8, 8], "n_token": 84, "loss": [0.0063069830648601055, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def is_fullfilled_by(", "self", ",", "other", ")", ":", "#NEWLINE#", "(", "len", "(", "other", "self", ".", "get_columns", "(", "not", "self", ".", "spans_columns", "(", "other", ".", "get_columns", "False", "#NEWLINE#", "#UNINDENT#", "if", "(", "not", "self", ".", "same_partial_index", "(", "other", ")", ")", ":", "#NEWLINE#", "#INDENT#", "return", "False", "#NEWLINE#", "#UNINDENT#", "if", "self", ".", "is_simple_index", "#UNINDENT#", "if", "(", "other", ".", "is_primary", "(", ")", "!=", "self", ".", "is_primary", "(", ")", ")", ":", "#NEWLINE#", "#INDENT#", "return", "False", "#NEWLINE#", "#UNINDENT#", "if", "(", "other", ".", "is_unique", "(", ")", "!=", "self", ".", "is_unique", "(", ")", ")"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [4, 11, 21, 34, 51, 72, 2, 12, 17, 30, 45, 57, 78]}}
{"prediction": {"error_location": 0.993712842464447, "repair_targets": [], "repair_candidates": [0.038561735302209854, 0.026306284591555595, 0.01321770902723074, 0.008395001292228699, 0.0036798794753849506, 0.003155896905809641, 0.0006414122181013227, 0.0007262041326612234, 0.22245807945728302, 0.4126988649368286, 0.030639510601758957, 0.23776723444461823, 0.0017522746929898858], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 13:48:45.913482", "n_pass": [99, 9, 9], "n_token": 80, "loss": [0.003449206706136465, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def is_fullfilled_by(", "self", ",", "other", ")", ":", "#NEWLINE#", "(", "len", "(", "other", "self", ".", "get_columns", "(", "not", "self", ".", "spans_columns", "(", "other", ".", "get_columns", "(", "not", "self", ".", "same_partial_index", "(", "other", ")", ")", ":", "#NEWLINE#", "#INDENT#", "return", "False", "#NEWLINE#", "#UNINDENT#", "if", "self", ".", "is_simple_index", "#UNINDENT#", "if", "(", "other", ".", "is_primary", "(", ")", "!=", "self", ".", "is_primary", "(", ")", ")", ":", "#NEWLINE#", "#INDENT#", "return", "False", "#NEWLINE#", "#UNINDENT#", "if", "(", "other", ".", "is_unique", "(", ")", "!=", "self", ".", "is_unique", "(", ")", ")"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [4, 11, 21, 30, 47, 68, 2, 12, 17, 26, 41, 53, 74]}}
{"prediction": {"error_location": 0.9965566396713257, "repair_targets": [], "repair_candidates": [0.009641747921705246, 0.04300815612077713, 0.014430389739573002, 0.0015109068481251597, 0.001007680082693696, 0.002587523078545928, 0.00022205186542123556, 0.0008466121507808566, 0.1319952756166458, 0.4970136880874634, 0.020019562914967537, 0.2761189937591553, 0.00159739563241601], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 13:48:46.003694", "n_pass": [102, 10, 10], "n_token": 76, "loss": [0.0031123552471399307, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def is_fullfilled_by(", "self", ",", "other", ")", ":", "#NEWLINE#", "(", "len", "(", "other", "self", ".", "get_columns", "(", "not", "self", ".", "spans_columns", "(", "other", ".", "get_columns", "(", "not", "self", ".", "same_partial_index", "(", "other", ")", "return", "False", "#NEWLINE#", "#UNINDENT#", "if", "self", ".", "is_simple_index", "#UNINDENT#", "if", "(", "other", ".", "is_primary", "(", ")", "!=", "self", ".", "is_primary", "(", ")", ")", ":", "#NEWLINE#", "#INDENT#", "return", "False", "#NEWLINE#", "#UNINDENT#", "if", "(", "other", ".", "is_unique", "(", ")", "!=", "self", ".", "is_unique", "(", ")", ")"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [4, 11, 21, 30, 43, 64, 2, 12, 17, 26, 37, 49, 70]}}
{"prediction": {"error_location": 0.9968926906585693, "repair_targets": [], "repair_candidates": [0.007671601604670286, 0.051780372858047485, 0.014287731610238552, 0.0032751515973359346, 0.0020076667424291372, 0.0052750906907022, 0.0003479879815131426, 0.0009796720696613193, 0.20472308993339539, 0.38548344373703003, 0.0215041171759367, 0.3010789155960083, 0.0015852354699745774], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 13:48:46.090007", "n_pass": [103, 11, 11], "n_token": 72, "loss": [0.004122569225728512, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def is_fullfilled_by(", "self", ",", "other", ")", ":", "#NEWLINE#", "(", "len", "(", "other", "self", ".", "get_columns", "(", "not", "self", ".", "spans_columns", "(", "other", ".", "get_columns", "(", "not", "self", ".", "same_partial_index", "(", "other", ")", "if", "self", ".", "is_simple_index", "#UNINDENT#", "if", "(", "other", ".", "is_primary", "(", ")", "!=", "self", ".", "is_primary", "(", ")", ")", ":", "#NEWLINE#", "#INDENT#", "return", "False", "#NEWLINE#", "#UNINDENT#", "if", "(", "other", ".", "is_unique", "(", ")", "!=", "self", ".", "is_unique", "(", ")", ")"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [4, 11, 21, 30, 39, 60, 2, 12, 17, 26, 33, 45, 66]}}
{"prediction": {"error_location": 0.9958857893943787, "repair_targets": [], "repair_candidates": [0.010722815990447998, 0.021834321320056915, 0.014001015573740005, 0.0018219052581116557, 0.0016722975997254252, 0.003253091359511018, 0.0003238680073991418, 0.000942956015933305, 0.040650874376297, 0.668553352355957, 0.019515395164489746, 0.2151326686143875, 0.001575459842570126], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 13:48:46.174820", "n_pass": [106, 12, 12], "n_token": 68, "loss": [0.03308623284101486, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def is_fullfilled_by(", "self", ",", "other", ")", ":", "#NEWLINE#", "(", "len", "(", "other", "self", ".", "get_columns", "(", "not", "self", ".", "spans_columns", "(", "other", ".", "get_columns", "(", "not", "self", ".", "same_partial_index", "(", "other", ")", "if", "self", ".", "is_simple_index", "#UNINDENT#", "if", "(", "other", "!=", "self", ".", "is_primary", "(", ")", ")", ":", "#NEWLINE#", "#INDENT#", "return", "False", "#NEWLINE#", "#UNINDENT#", "if", "(", "other", ".", "is_unique", "(", ")", "!=", "self", ".", "is_unique", "(", ")", ")"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [4, 11, 21, 30, 39, 56, 2, 12, 17, 26, 33, 41, 62]}}
{"prediction": {"error_location": 0.9674547910690308, "repair_targets": [], "repair_candidates": [0.02268604375422001, 0.058350156992673874, 0.0782216340303421, 0.0034875688143074512, 0.00461675226688385, 0.01879541203379631, 0.0009728576405905187, 0.0032158158719539642, 0.2020392268896103, 0.0188582856208086, 0.1108655035495758, 0.47277864813804626, 0.005112128797918558], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 13:48:46.257078", "n_pass": [108, 13, 13], "n_token": 64, "loss": [0.009724270552396774, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def is_fullfilled_by(", "self", ",", "other", ")", ":", "#NEWLINE#", "(", "len", "(", "other", "self", ".", "get_columns", "(", "not", "self", ".", "spans_columns", "(", "other", ".", "get_columns", "(", "not", "self", ".", "same_partial_index", "(", "other", ")", "if", "self", ".", "is_simple_index", "#UNINDENT#", "if", "(", "other", "!=", "self", ".", "is_primary", "#NEWLINE#", "#INDENT#", "return", "False", "#NEWLINE#", "#UNINDENT#", "if", "(", "other", ".", "is_unique", "(", ")", "!=", "self", ".", "is_unique", "(", ")", ")"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [4, 11, 21, 30, 39, 52, 2, 12, 17, 26, 33, 41, 58]}}
{"prediction": {"error_location": 0.9903225302696228, "repair_targets": [], "repair_candidates": [0.009860611520707607, 0.04167533293366432, 0.03499419987201691, 0.002136589726433158, 0.0049651432782411575, 0.01572406478226185, 0.0011565455934032798, 0.0016277485992759466, 0.4550987184047699, 0.01567937806248665, 0.24197536706924438, 0.17217621207237244, 0.0029300381429493427], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 13:48:46.337301", "n_pass": [109, 14, 14], "n_token": 59, "loss": [0.017737338319420815, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def is_fullfilled_by(", "self", ",", "other", ")", ":", "#NEWLINE#", "(", "len", "(", "other", "self", ".", "get_columns", "(", "not", "self", ".", "spans_columns", "(", "other", ".", "get_columns", "(", "not", "self", ".", "same_partial_index", "(", "other", ")", "if", "self", ".", "is_simple_index", "#UNINDENT#", "if", "(", "other", "!=", "self", ".", "is_primary", "#UNINDENT#", "if", "(", "other", ".", "is_unique", "(", ")", "!=", "self", ".", "is_unique", "(", ")", ")"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [4, 11, 21, 30, 39, 47, 2, 12, 17, 26, 33, 41, 53]}}
{"prediction": {"error_location": 0.9824191331863403, "repair_targets": [], "repair_candidates": [0.004968054126948118, 0.03178044781088829, 0.021564800292253494, 0.0010281630093231797, 0.001400966546498239, 0.01123923808336258, 0.0006127094384282827, 0.0014879974769428372, 0.14510877430438995, 0.016318175941705704, 0.5656817555427551, 0.19732612371444702, 0.0014827654231339693], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 13:48:46.416907", "n_pass": [112, 15, 15], "n_token": 54, "loss": [0.29537707567214966, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def is_fullfilled_by(", "self", ",", "other", ")", ":", "#NEWLINE#", "(", "len", "(", "other", "self", ".", "get_columns", "(", "not", "self", ".", "spans_columns", "(", "other", ".", "get_columns", "(", "not", "self", ".", "same_partial_index", "(", "other", ")", "if", "self", ".", "is_simple_index", "#UNINDENT#", "if", "(", "other", "!=", "self", ".", "is_primary", "#UNINDENT#", "if", "(", "other", ".", "is_unique", "(", ")", "!=", "self"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [4, 11, 21, 30, 39, 47, 2, 12, 17, 26, 33, 41, 53]}}
{"prediction": {"error_location": 0.7442508935928345, "repair_targets": [], "repair_candidates": [0.006734137888997793, 0.23478001356124878, 0.27577024698257446, 0.001791719812899828, 0.004089909605681896, 0.06048799306154251, 0.0012033478124067187, 0.009648673236370087, 0.06720956414937973, 0.07552772015333176, 0.07640967518091202, 0.18560630083084106, 0.0007406875374726951], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 13:48:46.494702", "n_pass": [155, 16, 16], "n_token": 52, "loss": [0.20847967267036438, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def is_fullfilled_by(", "self", ",", "other", ")", "(", "len", "(", "other", "self", ".", "get_columns", "(", "not", "self", ".", "spans_columns", "(", "other", ".", "get_columns", "(", "not", "self", ".", "same_partial_index", "(", "other", ")", "if", "self", ".", "is_simple_index", "#UNINDENT#", "if", "(", "other", "!=", "self", ".", "is_primary", "#UNINDENT#", "if", "(", "other", ".", "is_unique", "(", ")", "!=", "self"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [4, 9, 19, 28, 37, 45, 2, 10, 15, 24, 31, 39, 51]}}
{"prediction": {"error_location": 0.8118177056312561, "repair_targets": [], "repair_candidates": [0.02635614387691021, 0.15713678300380707, 0.15711332857608795, 0.0014823181554675102, 0.006075945217162371, 0.04858313873410225, 0.0015500177396461368, 0.008608246222138405, 0.09160417318344116, 0.08328847587108612, 0.1860463172197342, 0.23001351952552795, 0.0021416207309812307], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 13:48:46.569019", "n_pass": [156, 17, 17], "n_token": 50, "loss": [0.25463783740997314, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def is_fullfilled_by(", "self", ",", "other", ")", "(", "other", "self", ".", "get_columns", "(", "not", "self", ".", "spans_columns", "(", "other", ".", "get_columns", "(", "not", "self", ".", "same_partial_index", "(", "other", ")", "if", "self", ".", "is_simple_index", "#UNINDENT#", "if", "(", "other", "!=", "self", ".", "is_primary", "#UNINDENT#", "if", "(", "other", ".", "is_unique", "(", ")", "!=", "self"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [4, 7, 17, 26, 35, 43, 2, 8, 13, 22, 29, 37, 49]}}
{"prediction": {"error_location": 0.7751970887184143, "repair_targets": [], "repair_candidates": [0.027108730748295784, 0.12416239082813263, 0.2293265461921692, 0.002182251773774624, 0.005023961886763573, 0.05780450999736786, 0.004042043350636959, 0.009788597002625465, 0.09863881766796112, 0.07609039545059204, 0.1144452914595604, 0.24852129817008972, 0.0028651447501033545], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 13:48:46.642675", "n_pass": [159, 18, 18], "n_token": 48, "loss": [0.2489713728427887, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def is_fullfilled_by(", "self", ",", "other", ")", "(", "other", "self", ".", "not", "self", ".", "spans_columns", "(", "other", ".", "get_columns", "(", "not", "self", ".", "same_partial_index", "(", "other", ")", "if", "self", ".", "is_simple_index", "#UNINDENT#", "if", "(", "other", "!=", "self", ".", "is_primary", "#UNINDENT#", "if", "(", "other", ".", "is_unique", "(", ")", "!=", "self"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [4, 7, 15, 24, 33, 41, 2, 8, 11, 20, 27, 35, 47]}}
{"prediction": {"error_location": 0.7796022295951843, "repair_targets": [], "repair_candidates": [0.02603132277727127, 0.13398288190364838, 0.1572898030281067, 0.001046749297529459, 0.0032157162204384804, 0.10986985266208649, 0.0031787720508873463, 0.012838917784392834, 0.1155082955956459, 0.0881192684173584, 0.12141326814889908, 0.22419793903827667, 0.0033071988727897406], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 13:48:46.717466", "n_pass": [161, 19, 19], "n_token": 46, "loss": [0.2148304432630539, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def is_fullfilled_by(", "self", ",", "other", ")", "(", "other", "self", ".", "not", "self", "(", "other", ".", "get_columns", "(", "not", "self", ".", "same_partial_index", "(", "other", ")", "if", "self", ".", "is_simple_index", "#UNINDENT#", "if", "(", "other", "!=", "self", ".", "is_primary", "#UNINDENT#", "if", "(", "other", ".", "is_unique", "(", ")", "!=", "self"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [4, 7, 13, 22, 31, 39, 2, 8, 11, 18, 25, 33, 45]}}
{"prediction": {"error_location": 0.8066781163215637, "repair_targets": [], "repair_candidates": [0.025653637945652008, 0.13392117619514465, 0.1774674504995346, 0.0009610730921849608, 0.006267774850130081, 0.005987617652863264, 0.0032559477258473635, 0.013448750600218773, 0.1260160356760025, 0.09874311834573746, 0.16270993649959564, 0.24268090724945068, 0.0028866268694400787], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 13:48:46.788896", "n_pass": [163, 20, 20], "n_token": 44, "loss": [0.26757320761680603, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def is_fullfilled_by(", "self", ",", "other", ")", "(", "other", "self", ".", "not", "self", "(", "other", "(", "not", "self", ".", "same_partial_index", "(", "other", ")", "if", "self", ".", "is_simple_index", "#UNINDENT#", "if", "(", "other", "!=", "self", ".", "is_primary", "#UNINDENT#", "if", "(", "other", ".", "is_unique", "(", ")", "!=", "self"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [4, 7, 13, 20, 29, 37, 2, 8, 11, 16, 23, 31, 43]}}
{"prediction": {"error_location": 0.7652342319488525, "repair_targets": [], "repair_candidates": [0.01970551162958145, 0.149386927485466, 0.18784254789352417, 0.0007481134380213916, 0.007093335036188364, 0.008277525193989277, 0.001826909021474421, 0.014651368372142315, 0.09920930117368698, 0.1266355961561203, 0.12380483001470566, 0.2586209177970886, 0.002197127789258957], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 13:48:46.859246", "n_pass": [164, 21, 21], "n_token": 42, "loss": [0.24204471707344055, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def is_fullfilled_by(", "self", ",", "other", ")", "(", "other", "self", ".", "not", "self", "(", "other", "self", ".", "same_partial_index", "(", "other", ")", "if", "self", ".", "is_simple_index", "#UNINDENT#", "if", "(", "other", "!=", "self", ".", "is_primary", "#UNINDENT#", "if", "(", "other", ".", "is_unique", "(", ")", "!=", "self"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [4, 7, 13, 18, 27, 35, 2, 8, 11, 14, 21, 29, 41]}}
{"prediction": {"error_location": 0.7850211262702942, "repair_targets": [], "repair_candidates": [0.02016991749405861, 0.1195804700255394, 0.1810014396905899, 0.0008713511051610112, 0.008821148425340652, 0.02848271280527115, 0.0008014951017685235, 0.015353077091276646, 0.10005572438240051, 0.12648074328899384, 0.1226876825094223, 0.27321144938468933, 0.0024826745502650738], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 13:48:46.928787", "n_pass": [166, 22, 22], "n_token": 40, "loss": [0.3996936082839966, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def is_fullfilled_by(", "self", ",", "other", ")", "(", "other", "self", ".", "not", "self", "(", "other", "self", ".", "other", ")", "if", "self", ".", "is_simple_index", "#UNINDENT#", "if", "(", "other", "!=", "self", ".", "is_primary", "#UNINDENT#", "if", "(", "other", ".", "is_unique", "(", ")", "!=", "self"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [4, 7, 13, 16, 25, 33, 2, 8, 11, 14, 19, 27, 39]}}
{"prediction": {"error_location": 0.6705253720283508, "repair_targets": [], "repair_candidates": [0.01169402152299881, 0.1472095549106598, 0.17834168672561646, 0.0008884315611794591, 0.0064869713969528675, 0.02927103266119957, 0.0013575195334851742, 0.07481610774993896, 0.03787020966410637, 0.06720071285963058, 0.04931209981441498, 0.3939623534679413, 0.0015893157105892897], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 13:48:47.065895", "n_pass": [170, 24, 23], "n_token": 38, "loss": [0.4776385426521301, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def is_fullfilled_by(", "self", ",", "other", ")", "(", "other", "self", ".", "not", "self", "(", "other", "self", ".", "other", ")", "if", "self", ".", "is_simple_index", "(", "other", "!=", "self", ".", "is_primary", "#UNINDENT#", "if", "(", "other", ".", "is_unique", "(", ")", "!=", "self"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [4, 7, 13, 16, 23, 31, 2, 8, 11, 14, 19, 25, 37]}}
{"prediction": {"error_location": 0.6202463507652283, "repair_targets": [], "repair_candidates": [0.014376114122569561, 0.10637151449918747, 0.15752027928829193, 0.0008711054688319564, 0.005543558858335018, 0.01385832205414772, 0.0005161094595678151, 0.08159194141626358, 0.0012300482485443354, 0.19645273685455322, 0.022298991680145264, 0.398587167263031, 0.0007821421604603529], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 13:48:47.269677", "n_pass": [176, 27, 24], "n_token": 35, "loss": [0.20333880186080933, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def is_fullfilled_by(", "self", ",", "other", ")", "(", "other", "self", ".", "not", "self", "(", "other", "self", ".", "other", ")", "if", "self", ".", "is_simple_index", "(", "other", "!=", "self", ".", "is_primary", "#UNINDENT#", "if", "(", "other", ")", "!=", "self"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [4, 7, 13, 16, 23, 31, 2, 8, 11, 14, 19, 25, 34]}}
{"prediction": {"error_location": 0.8160015940666199, "repair_targets": [], "repair_candidates": [0.04086233675479889, 0.10120018571615219, 0.1624106913805008, 0.001484427833929658, 0.021474432200193405, 0.014492679387331009, 0.0009072705288417637, 0.1502472311258316, 0.0018642027862370014, 0.3287215828895569, 0.034036338329315186, 0.14126823842525482, 0.0010304230963811278], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 13:48:47.336610", "n_pass": [188, 28, 25], "n_token": 33, "loss": [0.08270193636417389, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def is_fullfilled_by(", "self", ",", "other", ")", "(", "other", "self", ".", "not", "self", "(", "other", "self", ".", "other", ")", "if", "self", "(", "other", "!=", "self", ".", "is_primary", "#UNINDENT#", "if", "(", "other", ")", "!=", "self"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [4, 7, 13, 16, 21, 29, 2, 8, 11, 14, 19, 23, 32]}}
{"prediction": {"error_location": 0.920625627040863, "repair_targets": [], "repair_candidates": [0.06976572424173355, 0.09741993248462677, 0.20927438139915466, 0.0018231822177767754, 0.02661537565290928, 0.01856432668864727, 0.0014092075871303678, 0.2777164578437805, 0.045588936656713486, 0.009615476243197918, 0.0801495611667633, 0.15770110487937927, 0.00435631163418293], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 13:48:47.401606", "n_pass": [191, 29, 26], "n_token": 31, "loss": [0.15823671221733093, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def is_fullfilled_by(", "self", ",", "other", ")", "(", "other", "self", ".", "not", "self", "(", "other", "self", ".", "other", ")", "if", "self", "(", "other", "!=", "self", "#UNINDENT#", "if", "(", "other", ")", "!=", "self"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [4, 7, 13, 16, 21, 27, 2, 8, 11, 14, 19, 23, 30]}}
{"prediction": {"error_location": 0.8536475896835327, "repair_targets": [], "repair_candidates": [0.06948543339967728, 0.14814609289169312, 0.19495850801467896, 0.00238934182561934, 0.020469212904572487, 0.027460575103759766, 0.001570694730617106, 0.38910141587257385, 0.02313162013888359, 0.04294976592063904, 0.020192744210362434, 0.05721306428313255, 0.0029315073043107986], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 13:48:47.467965", "n_pass": [192, 30, 27], "n_token": 29, "loss": [0.06823185086250305, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def is_fullfilled_by(", "self", ",", "other", ")", "(", "other", "self", ".", "not", "self", "(", "other", "self", ".", "other", ")", "if", "self", "(", "other", "!=", "self", "(", "other", ")", "!=", "self"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [4, 7, 13, 16, 21, 25, 2, 8, 11, 14, 19, 23, 28]}}
{"prediction": {"error_location": 0.9340438842773438, "repair_targets": [], "repair_candidates": [0.09772790968418121, 0.07397078722715378, 0.1457408219575882, 0.0012169374385848641, 0.022470057010650635, 0.01642133854329586, 0.000848654774017632, 0.5689658522605896, 0.010126480832695961, 0.006257299333810806, 0.0515282116830349, 0.0017220689915120602, 0.003003619611263275], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 13:48:47.532595", "n_pass": [235, 31, 28], "n_token": 28, "loss": [0.04814549908041954, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def is_fullfilled_by(", "self", ",", "other", ")", "(", "other", "self", ".", "not", "self", "(", "other", "self", ".", "other", ")", "if", "self", "(", "other", "!=", "self", "other", ")", "!=", "self"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [4, 7, 13, 16, 21, 24, 2, 8, 11, 14, 19, 23, 27]}}
{"prediction": {"error_location": 0.9529951214790344, "repair_targets": [], "repair_candidates": [0.018908075988292694, 0.12002896517515182, 0.08161858469247818, 0.0008392800809815526, 0.024006562307476997, 0.01696351356804371, 0.0006351648480631411, 0.5062383413314819, 0.009996221400797367, 0.20614561438560486, 0.011689530685544014, 0.0009801076957955956, 0.0019501139177009463], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 13:48:47.595731", "n_pass": [236, 32, 29], "n_token": 27, "loss": [0.04235714673995972, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def is_fullfilled_by(", "self", ",", "other", ")", "(", "other", "self", ".", "not", "self", "(", "other", "self", ".", "other", ")", "if", "self", "(", "other", "!=", "self", "other", "!=", "self"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [4, 7, 13, 16, 21, 24, 2, 8, 11, 14, 19, 23, 26]}}
{"prediction": {"error_location": 0.9585272669792175, "repair_targets": [], "repair_candidates": [0.018496625125408173, 0.08402158319950104, 0.05388006940484047, 0.0006289954762905836, 0.010843584313988686, 0.01858520321547985, 0.0003707638825289905, 0.6808825731277466, 0.009329456835985184, 0.10650277137756348, 0.011227317154407501, 0.001398978172801435, 0.0038320799358189106], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 13:48:47.658311", "n_pass": [239, 33, 30], "n_token": 26, "loss": [0.05681648105382919, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "self", ",", "other", ")", "(", "other", "self", ".", "not", "self", "(", "other", "self", ".", "other", ")", "if", "self", "(", "other", "!=", "self", "other", "!=", "self"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [3, 6, 12, 15, 20, 23, 1, 7, 10, 13, 18, 22, 25]}}
{"prediction": {"error_location": 0.9447676539421082, "repair_targets": [], "repair_candidates": [0.12972383201122284, 0.2011999785900116, 0.061489880084991455, 0.00233697728253901, 0.02716723456978798, 0.01043957844376564, 0.0007330009248107672, 0.44297993183135986, 0.011843465268611908, 0.09778883308172226, 0.009702271781861782, 0.0009563015191815794, 0.003638623282313347], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 13:48:47.720159", "n_pass": [241, 34, 31], "n_token": 25, "loss": [0.036924753338098526, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "self", "other", ")", "(", "other", "self", ".", "not", "self", "(", "other", "self", ".", "other", ")", "if", "self", "(", "other", "!=", "self", "other", "!=", "self"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [2, 5, 11, 14, 19, 22, 1, 6, 9, 12, 17, 21, 24]}}
{"prediction": {"error_location": 0.9637485146522522, "repair_targets": [], "repair_candidates": [0.23996329307556152, 0.48246896266937256, 0.0406235046684742, 0.0014207812491804361, 0.01130423229187727, 0.00286228209733963, 0.00042600862798281014, 0.19606120884418488, 0.006680580321699381, 0.007641911040991545, 0.005602991208434105, 0.00037492052069865167, 0.004569335840642452], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 13:48:47.781587", "n_pass": [243, 35, 32], "n_token": 24, "loss": [0.03961903229355812, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "self", "other", "(", "other", "self", ".", "not", "self", "(", "other", "self", ".", "other", ")", "if", "self", "(", "other", "!=", "self", "other", "!=", "self"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [2, 4, 10, 13, 18, 21, 1, 5, 8, 11, 16, 20, 23]}}
{"prediction": {"error_location": 0.9611555337905884, "repair_targets": [], "repair_candidates": [0.1183246597647667, 0.11826929450035095, 0.09589634835720062, 0.001177292549982667, 0.015449287369847298, 0.006782078184187412, 0.0004248669429216534, 0.5735442042350769, 0.010239284485578537, 0.03655153885483742, 0.014803259633481503, 0.0007155432831496, 0.007822362706065178], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 13:48:47.844426", "n_pass": [244, 36, 33], "n_token": 23, "loss": [0.04991878941655159, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "self", "other", "other", "self", ".", "not", "self", "(", "other", "self", ".", "other", ")", "if", "self", "(", "other", "!=", "self", "other", "!=", "self"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [2, 3, 9, 12, 17, 20, 1, 4, 7, 10, 15, 19, 22]}}
{"prediction": {"error_location": 0.9513067007064819, "repair_targets": [], "repair_candidates": [0.11058752238750458, 0.40508684515953064, 0.12280090153217316, 0.0006346539012156427, 0.008341727778315544, 0.003477080725133419, 0.0005422609392553568, 0.2985100746154785, 0.011406820267438889, 0.024839377030730247, 0.009189579635858536, 0.0005171715165488422, 0.004065933637320995], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 13:48:47.905145", "n_pass": [247, 37, 34], "n_token": 22, "loss": [0.04349047318100929, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "self", "other", "other", "self", "not", "self", "(", "other", "self", ".", "other", ")", "if", "self", "(", "other", "!=", "self", "other", "!=", "self"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [2, 3, 8, 11, 16, 19, 1, 4, 6, 9, 14, 18, 21]}}
{"prediction": {"error_location": 0.9574415683746338, "repair_targets": [], "repair_candidates": [0.11490172147750854, 0.5566263198852539, 0.11975851655006409, 0.0015339883975684643, 0.003757831174880266, 0.0008318433538079262, 0.00014667694631498307, 0.17093981802463531, 0.006132257170975208, 0.015306048095226288, 0.006088961381465197, 0.00035717341233976185, 0.003618907881900668], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 13:48:47.964788", "n_pass": [248, 38, 35], "n_token": 21, "loss": [0.0511753186583519, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "self", "other", "other", "self", "self", "(", "other", "self", ".", "other", ")", "if", "self", "(", "other", "!=", "self", "other", "!=", "self"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [2, 3, 7, 10, 15, 18, 1, 4, 5, 8, 13, 17, 20]}}
{"prediction": {"error_location": 0.950111985206604, "repair_targets": [], "repair_candidates": [0.07370319217443466, 0.6444847583770752, 0.09546332061290741, 0.0008176982519216835, 0.0017037988873198628, 0.0006232959567569196, 9.315533679910004e-05, 0.1656125783920288, 0.004618574865162373, 0.007272707298398018, 0.0035843055229634047, 0.00024039024719968438, 0.0017822033260017633], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 13:48:48.024088", "n_pass": [250, 39, 36], "n_token": 20, "loss": [0.04495752602815628, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "self", "other", "other", "self", "self", "other", "self", ".", "other", ")", "if", "self", "(", "other", "!=", "self", "other", "!=", "self"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [2, 3, 6, 9, 14, 17, 1, 4, 5, 7, 12, 16, 19]}}
{"prediction": {"error_location": 0.9560380578041077, "repair_targets": [], "repair_candidates": [0.11615588515996933, 0.7023032307624817, 0.049191344529390335, 0.0034868165384978056, 0.013492164202034473, 0.0012454717652872205, 0.00031260139076039195, 0.07663465291261673, 0.010034726932644844, 0.01658989116549492, 0.006932571530342102, 0.0003547585802152753, 0.003265950595960021], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 13:48:48.082602", "n_pass": [253, 40, 37], "n_token": 19, "loss": [0.08804014325141907, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "self", "other", "other", "self", "self", "other", "self", "other", ")", "if", "self", "(", "other", "!=", "self", "other", "!=", "self"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [2, 3, 6, 8, 13, 16, 1, 4, 5, 7, 11, 15, 18]}}
{"prediction": {"error_location": 0.9157238006591797, "repair_targets": [], "repair_candidates": [0.09801545739173889, 0.6364458203315735, 0.1569165289402008, 0.0024037121329456568, 0.03194757178425789, 0.005782461725175381, 0.023905351758003235, 0.0009594664443284273, 0.020368564873933792, 0.010036560706794262, 0.009058758616447449, 0.00041390678961761296, 0.003745805937796831], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 13:48:48.140922", "n_pass": [255, 41, 38], "n_token": 18, "loss": [0.10097132623195648, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "self", "other", "other", "self", "self", "other", "self", "other", "if", "self", "(", "other", "!=", "self", "other", "!=", "self"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [2, 3, 6, 8, 12, 15, 1, 4, 5, 7, 10, 14, 17]}}
{"prediction": {"error_location": 0.9039589762687683, "repair_targets": [], "repair_candidates": [0.09054911881685257, 0.687416672706604, 0.13544979691505432, 0.002328108996152878, 0.03378691524267197, 0.007246469147503376, 0.013895583339035511, 0.0004399224417284131, 0.00611130753532052, 0.0022259473334997892, 0.013182692229747772, 0.00044616038212552667, 0.006921351421624422], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 13:48:48.200385", "n_pass": [256, 42, 39], "n_token": 17, "loss": [0.10239705443382263, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "self", "other", "other", "self", "self", "other", "self", "other", "self", "(", "other", "!=", "self", "other", "!=", "self"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [2, 3, 6, 8, 11, 14, 1, 4, 5, 7, 9, 13, 16]}}
{"prediction": {"error_location": 0.9026710987091064, "repair_targets": [], "repair_candidates": [0.0853346437215805, 0.6397422552108765, 0.1766667515039444, 0.0029481202363967896, 0.03873053193092346, 0.0099940849468112, 0.008474237285554409, 0.0009359795949421823, 0.013513830490410328, 0.0027751103043556213, 0.010396977886557579, 0.0006708233268000185, 0.009816632606089115], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 13:48:48.257812", "n_pass": [258, 43, 40], "n_token": 16, "loss": [0.07467926293611526, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "self", "other", "other", "self", "self", "other", "self", "other", "self", "other", "!=", "self", "other", "!=", "self"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [2, 3, 6, 8, 10, 13, 1, 4, 5, 7, 9, 12, 15]}}
{"prediction": {"error_location": 0.9280411005020142, "repair_targets": [], "repair_candidates": [0.10360149294137955, 0.5688249468803406, 0.19596102833747864, 0.0053130583837628365, 0.06446995586156845, 0.010113734751939774, 0.010672157630324364, 0.013803904876112938, 0.012207313440740108, 0.0014387667179107666, 0.005151479039341211, 0.0005965783493593335, 0.007845529355108738], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 13:48:48.314771", "n_pass": [260, 44, 41], "n_token": 15, "loss": [0.10035377740859985, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "self", "other", "other", "self", "self", "other", "self", "other", "self", "other", "self", "other", "!=", "self"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [2, 3, 6, 8, 10, 12, 1, 4, 5, 7, 9, 11, 14]}}
{"prediction": {"error_location": 0.9045173525810242, "repair_targets": [], "repair_candidates": [0.06978080421686172, 0.6053093075752258, 0.17269845306873322, 0.003996852785348892, 0.0629638060927391, 0.01895948126912117, 0.015588497743010521, 0.010666063986718655, 0.023592641577124596, 0.011076891794800758, 0.0012060287408530712, 0.00072771857958287, 0.003433500649407506], "target_probs": 0.0}}




Minimal simplified tokens:

['#NEWLINE#', 'self', 'other', 'other', 'self', 'self', 'other', 'self', 'other', 'self', 'other', 'self', 'other', '!=', 'self']
