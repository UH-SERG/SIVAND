
Original sample:

{"has_bug": false, "bug_kind": 0, "bug_kind_name": "NONE", "source_tokens": ["#NEWLINE#", "def resid_anscombe(", "self", ",", "endog", ",", "mu", ")", ":", "#NEWLINE#", "#INDENT#", "'\\n        Anscombe residuals for the Poisson exponential family distribution\\n\\n        Parameters\\n        ----------\\n        endog : array-like\\n            Endogenous response variable\\n        mu : array-like\\n            Fitted mean response variable\\n\\n        Returns\\n        -------\\n        resid_anscombe : array\\n            The Anscome residuals for the Poisson family defined below\\n\\n        Notes\\n        -----\\n        .. math::\\n\\n           resid\\\\_anscombe_i = (3/2) * (Y_i^{2/3} - \\\\mu_i^{2/3}) / \\\\mu_i^{1/6}\\n        '", "#NEWLINE#", "return", "(", "(", "(", "3", "/", "2.0", ")", "*", "(", "(", "endog", "**", "(", "2", "/", "3.0", ")", ")", "-", "(", "mu", "**", "(", "2", "/", "3.0", ")", ")", ")", ")", "/", "(", "mu", "**", "(", "1", "/", "6.0", ")", ")", ")"], "error_location": [0], "repair_targets": [], "repair_candidates": [6, 34, 46, 2, 4, 24], "provenances": [{"datasetProvenance": {"datasetName": "ETHPy150Open", "filepath": "statsmodels/statsmodels/statsmodels/genmod/families/family.py", "license": "bsd-3-clause", "note": "license: manual_eval"}}], "txt_file": "eval__VARIABLE_MISUSE__SStuB.txt-00000-of-00300", "js_count": 3101, "results": {"model": "rnn", "prob": {"loc": [[0.5950859785079956, 2.9585666538878286e-07, 5.505339686351363e-07, 3.996329933642073e-09, 7.810038482602977e-07, 4.707895584488142e-08, 4.452940174815012e-06, 2.2049864867312863e-07, 3.796235858999353e-08, 3.117374092198588e-07, 3.5460772096485016e-07, 3.023715322569842e-08, 5.440178938442841e-07, 4.7783327516981444e-08, 6.009194066791679e-07, 3.6545475268212613e-07, 3.973068032792071e-06, 0.0010266273748129606, 1.8477035723662993e-07, 7.087857625265315e-07, 1.116154777491829e-07, 1.157954443442577e-08, 1.273926812928039e-07, 2.0151260287093464e-06, 0.3674994707107544, 3.058716302462017e-08, 1.7993771734836628e-06, 0.00043115834705531597, 1.1125749779239413e-06, 7.122068836906692e-07, 2.455966978232027e-06, 4.2400773736517294e-07, 7.529656187443834e-08, 2.373701363467262e-06, 0.01809641718864441, 2.8231834647840515e-09, 1.1232671113248216e-06, 0.0007586925057694316, 1.185264181913226e-06, 4.398559383389511e-07, 2.5439928776904708e-06, 2.6672555009099597e-07, 2.147725979284587e-07, 1.6634113819691265e-07, 8.098366777176125e-08, 1.2932633808304672e-06, 0.01647154614329338, 3.788473090793332e-09, 1.0342525911255507e-06, 0.0005109428311698139, 1.3407186827407713e-07, 8.503717981511727e-05, 5.08721939240786e-07, 3.0318679478114063e-07, 1.1429973767462798e-07]], "pointer": [[0.0, 0.0, 0.0028711212798953056, 0.0, 0.10866580903530121, 0.0, 0.8872318863868713, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0003720561508089304, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0003674499166663736, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0004916823236271739, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]], "target": [0.0]}, "loss": [0.5190495252609253, 0.0], "acc": [1.0, 0.0, 0.0, 0.0]}}


Trace of simplified code(s):

{"result": {"time": "2021-02-11 14:37:58.157899", "n_pass": [1, 1, 1], "n_token": 55, "loss": [0.5190495252609253, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def resid_anscombe(", "self", ",", "endog", ",", "mu", ")", ":", "#NEWLINE#", "#INDENT#", "'\\n        Anscombe residuals for the Poisson exponential family distribution\\n\\n        Parameters\\n        ----------\\n        endog : array-like\\n            Endogenous response variable\\n        mu : array-like\\n            Fitted mean response variable\\n\\n        Returns\\n        -------\\n        resid_anscombe : array\\n            The Anscome residuals for the Poisson family defined below\\n\\n        Notes\\n        -----\\n        .. math::\\n\\n           resid\\\\_anscombe_i = (3/2) * (Y_i^{2/3} - \\\\mu_i^{2/3}) / \\\\mu_i^{1/6}\\n        '", "#NEWLINE#", "return", "(", "(", "(", "3", "/", "2.0", ")", "*", "(", "(", "endog", "**", "(", "2", "/", "3.0", ")", ")", "-", "(", "mu", "**", "(", "2", "/", "3.0", ")", ")", ")", ")", "/", "(", "mu", "**", "(", "1", "/", "6.0", ")", ")", ")"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [6, 34, 46, 2, 4, 24]}}
{"prediction": {"error_location": 0.5950859785079956, "repair_targets": [], "repair_candidates": [0.0028711212798953056, 0.10866580903530121, 0.8872318863868713, 0.0003720561508089304, 0.0003674499166663736, 0.0004916823236271739], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 14:37:58.233991", "n_pass": [22, 2, 2], "n_token": 48, "loss": [0.16948506236076355, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def resid_anscombe(", "self", ",", "endog", ",", "mu", ")", ":", "#NEWLINE#", "#INDENT#", "'\\n        Anscombe residuals for the Poisson exponential family distribution\\n\\n        Parameters\\n        ----------\\n        endog : array-like\\n            Endogenous response variable\\n        mu : array-like\\n            Fitted mean response variable\\n\\n        Returns\\n        -------\\n        resid_anscombe : array\\n            The Anscome residuals for the Poisson family defined below\\n\\n        Notes\\n        -----\\n        .. math::\\n\\n           resid\\\\_anscombe_i = (3/2) * (Y_i^{2/3} - \\\\mu_i^{2/3}) / \\\\mu_i^{1/6}\\n        '", "#NEWLINE#", ")", "*", "(", "(", "endog", "**", "(", "2", "/", "3.0", ")", ")", "-", "(", "mu", "**", "(", "2", "/", "3.0", ")", ")", ")", ")", "/", "(", "mu", "**", "(", "1", "/", "6.0", ")", ")", ")"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [6, 27, 39, 2, 4, 17]}}
{"prediction": {"error_location": 0.8440992832183838, "repair_targets": [], "repair_candidates": [0.006558941677212715, 0.16023020446300507, 0.8300524353981018, 0.0016471707494929433, 0.0007553496980108321, 0.0007559377700090408], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 14:37:58.303451", "n_pass": [23, 3, 3], "n_token": 41, "loss": [0.2199680209159851, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def resid_anscombe(", "self", ",", "endog", ",", "mu", ")", ":", "#NEWLINE#", "#INDENT#", "'\\n        Anscombe residuals for the Poisson exponential family distribution\\n\\n        Parameters\\n        ----------\\n        endog : array-like\\n            Endogenous response variable\\n        mu : array-like\\n            Fitted mean response variable\\n\\n        Returns\\n        -------\\n        resid_anscombe : array\\n            The Anscome residuals for the Poisson family defined below\\n\\n        Notes\\n        -----\\n        .. math::\\n\\n           resid\\\\_anscombe_i = (3/2) * (Y_i^{2/3} - \\\\mu_i^{2/3}) / \\\\mu_i^{1/6}\\n        '", "#NEWLINE#", ")", "*", "(", "(", "endog", "**", "(", "mu", "**", "(", "2", "/", "3.0", ")", ")", ")", ")", "/", "(", "mu", "**", "(", "1", "/", "6.0", ")", ")", ")"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [6, 20, 32, 2, 4, 17]}}
{"prediction": {"error_location": 0.8025445342063904, "repair_targets": [], "repair_candidates": [0.005787125788629055, 0.04571537673473358, 0.9460031390190125, 0.00031352107180282474, 0.0008437050273641944, 0.0013370272936299443], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 14:37:58.369302", "n_pass": [26, 4, 4], "n_token": 34, "loss": [0.21065351366996765, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def resid_anscombe(", "self", ",", "endog", ",", "mu", ")", ":", "#NEWLINE#", "#INDENT#", "'\\n        Anscombe residuals for the Poisson exponential family distribution\\n\\n        Parameters\\n        ----------\\n        endog : array-like\\n            Endogenous response variable\\n        mu : array-like\\n            Fitted mean response variable\\n\\n        Returns\\n        -------\\n        resid_anscombe : array\\n            The Anscome residuals for the Poisson family defined below\\n\\n        Notes\\n        -----\\n        .. math::\\n\\n           resid\\\\_anscombe_i = (3/2) * (Y_i^{2/3} - \\\\mu_i^{2/3}) / \\\\mu_i^{1/6}\\n        '", "#NEWLINE#", ")", "*", "(", "(", "endog", "**", "(", "mu", "**", "(", "2", "/", "3.0", ")", ")", ")", ")", "/", "(", "mu", "**"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [6, 20, 32, 2, 4, 17]}}
{"prediction": {"error_location": 0.8100546002388, "repair_targets": [], "repair_candidates": [0.07468213140964508, 0.4711867868900299, 0.44830435514450073, 0.002447471721097827, 0.0026335581205785275, 0.0007457116735167801], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 14:37:58.433488", "n_pass": [45, 5, 5], "n_token": 31, "loss": [0.28380146622657776, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def resid_anscombe(", "self", ",", "endog", ",", "mu", ")", ":", "#NEWLINE#", ")", "*", "(", "(", "endog", "**", "(", "mu", "**", "(", "2", "/", "3.0", ")", ")", ")", ")", "/", "(", "mu", "**"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [6, 17, 29, 2, 4, 14]}}
{"prediction": {"error_location": 0.7529160380363464, "repair_targets": [], "repair_candidates": [0.05137377604842186, 0.49656814336776733, 0.4379912316799164, 0.0033160417806357145, 0.008679999969899654, 0.0020708912052214146], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 14:37:58.495923", "n_pass": [46, 6, 6], "n_token": 28, "loss": [0.378819078207016, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def resid_anscombe(", "self", ",", "endog", ",", "mu", ")", ":", "(", "(", "endog", "**", "(", "mu", "**", "(", "2", "/", "3.0", ")", ")", ")", ")", "/", "(", "mu", "**"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [6, 14, 26, 2, 4, 11]}}
{"prediction": {"error_location": 0.684669554233551, "repair_targets": [], "repair_candidates": [0.050890736281871796, 0.6705153584480286, 0.16372352838516235, 0.0824117362499237, 0.030990909785032272, 0.0014676664723083377], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 14:37:58.556597", "n_pass": [49, 7, 7], "n_token": 24, "loss": [0.4967811703681946, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def resid_anscombe(", "self", ",", "endog", ",", "mu", ")", ":", "(", "(", "endog", "**", "(", "mu", "**", ")", ")", ")", ")", "/", "(", "mu", "**"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [6, 14, 22, 2, 4, 11]}}
{"prediction": {"error_location": 0.6084861755371094, "repair_targets": [], "repair_candidates": [0.1570064127445221, 0.6150543093681335, 0.1394219845533371, 0.06735000014305115, 0.01962573267519474, 0.0015415454981848598], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 14:37:58.617629", "n_pass": [50, 8, 8], "n_token": 20, "loss": [0.20916548371315002, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def resid_anscombe(", "self", ",", "endog", ",", "mu", ")", ":", "(", "(", "endog", "**", "(", "mu", "**", "/", "(", "mu", "**"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [6, 14, 18, 2, 4, 11]}}
{"prediction": {"error_location": 0.811260998249054, "repair_targets": [], "repair_candidates": [0.1121143251657486, 0.5788815021514893, 0.18125581741333008, 0.08390326797962189, 0.015865344554185867, 0.027979722246527672], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 14:37:58.675194", "n_pass": [69, 9, 9], "n_token": 18, "loss": [0.43576711416244507, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def resid_anscombe(", "self", ",", "endog", ",", "mu", ")", ":", "(", "(", "endog", "**", "(", "mu", "**", "mu", "**"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [6, 14, 16, 2, 4, 11]}}
{"prediction": {"error_location": 0.6467682719230652, "repair_targets": [], "repair_candidates": [0.04995426535606384, 0.6067327260971069, 0.13067887723445892, 0.12076608091592789, 0.017215821892023087, 0.0746522918343544], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 14:37:58.789127", "n_pass": [73, 11, 10], "n_token": 17, "loss": [0.16478635370731354, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def resid_anscombe(", "self", "endog", ",", "mu", ")", ":", "(", "(", "endog", "**", "(", "mu", "**", "mu", "**"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [5, 13, 15, 2, 3, 10]}}
{"prediction": {"error_location": 0.8480747938156128, "repair_targets": [], "repair_candidates": [0.014353427104651928, 0.0679004043340683, 0.036480799317359924, 0.637454092502594, 0.051556047052145004, 0.19225525856018066], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 14:37:58.845044", "n_pass": [76, 12, 11], "n_token": 15, "loss": [0.19046589732170105, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def resid_anscombe(", "self", "endog", ",", "mu", ")", "(", "endog", "**", "(", "mu", "**", "mu", "**"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [5, 11, 13, 2, 3, 8]}}
{"prediction": {"error_location": 0.8265738487243652, "repair_targets": [], "repair_candidates": [0.00594966858625412, 0.03418498486280441, 0.011889200657606125, 0.7806980609893799, 0.059064723551273346, 0.10821332037448883], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 14:37:58.900134", "n_pass": [78, 13, 12], "n_token": 13, "loss": [0.11817619204521179, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def resid_anscombe(", "self", "endog", ",", "mu", ")", "(", "endog", "mu", "**", "mu", "**"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [5, 9, 11, 2, 3, 8]}}
{"prediction": {"error_location": 0.8885395526885986, "repair_targets": [], "repair_candidates": [0.03566266968846321, 0.15915456414222717, 0.03407908231019974, 0.6391037106513977, 0.015424994751811028, 0.1165749728679657], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 14:37:59.011699", "n_pass": [98, 15, 13], "n_token": 12, "loss": [0.23682045936584473, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def resid_anscombe(", "self", "endog", ",", "mu", ")", "(", "endog", "mu", "mu", "**"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [5, 9, 10, 2, 3, 8]}}
{"prediction": {"error_location": 0.7891329526901245, "repair_targets": [], "repair_candidates": [0.3327985107898712, 0.5982714295387268, 0.023505182936787605, 0.03378671780228615, 0.00673372158780694, 0.004904486704617739], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 14:37:59.173891", "n_pass": [105, 18, 14], "n_token": 11, "loss": [0.07363491505384445, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def resid_anscombe(", "self", "endog", "mu", ")", "(", "endog", "mu", "mu", "**"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [4, 8, 9, 2, 3, 7]}}
{"prediction": {"error_location": 0.929010808467865, "repair_targets": [], "repair_candidates": [0.15019658207893372, 0.2903890311717987, 0.02028626948595047, 0.4052509069442749, 0.07780453562736511, 0.056072626262903214], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 14:37:59.227378", "n_pass": [107, 19, 15], "n_token": 10, "loss": [0.18109090626239777, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def resid_anscombe(", "self", "endog", "mu", "(", "endog", "mu", "mu", "**"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [4, 7, 8, 2, 3, 6]}}
{"prediction": {"error_location": 0.8343595266342163, "repair_targets": [], "repair_candidates": [0.15674199163913727, 0.09592399001121521, 0.036592014133930206, 0.3229137063026428, 0.1996072679758072, 0.1882210373878479], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 14:37:59.282801", "n_pass": [108, 20, 16], "n_token": 9, "loss": [0.00670409994199872, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def resid_anscombe(", "self", "endog", "mu", "endog", "mu", "mu", "**"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [4, 6, 7, 2, 3, 5]}}
{"prediction": {"error_location": 0.9933183193206787, "repair_targets": [], "repair_candidates": [0.01517932303249836, 0.027883829548954964, 0.01032518595457077, 0.041230857372283936, 0.2722935676574707, 0.6330872178077698], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 14:37:59.335529", "n_pass": [112, 21, 17], "n_token": 8, "loss": [0.010300688445568085, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def resid_anscombe(", "self", "endog", "mu", "endog", "mu", "mu"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [4, 6, 7, 2, 3, 5]}}
{"prediction": {"error_location": 0.9897522926330566, "repair_targets": [], "repair_candidates": [0.07108950614929199, 0.2607685923576355, 0.05652638524770737, 0.07960079610347748, 0.12280847132205963, 0.40920621156692505], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 14:37:59.387487", "n_pass": [114, 22, 18], "n_token": 7, "loss": [0.583896815776825, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "self", "endog", "mu", "endog", "mu", "mu"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [3, 5, 6, 1, 2, 4]}}
{"prediction": {"error_location": 0.5577207803726196, "repair_targets": [], "repair_candidates": [0.2593480944633484, 0.611434817314148, 0.04803252965211868, 0.035150736570358276, 0.019310196861624718, 0.02672366425395012], "target_probs": 0.0}}




Minimal simplified tokens:

['#NEWLINE#', 'self', 'endog', 'mu', 'endog', 'mu', 'mu']
