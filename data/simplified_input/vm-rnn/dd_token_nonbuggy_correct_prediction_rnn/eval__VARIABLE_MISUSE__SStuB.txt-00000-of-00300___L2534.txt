
Original sample:

{"has_bug": false, "bug_kind": 0, "bug_kind_name": "NONE", "source_tokens": ["#NEWLINE#", "def post(", "self", ",", "request", ",", "project_id", ",", "usergroup_id", ")", ":", "#NEWLINE#", "#INDENT#", "'\\n        Updates the user group based on the data entered by the user.\\n\\n        Parameter\\n        ---------\\n        request : django.http.HttpRequest\\n            Object representing the request\\n        project_id : int\\n            Identifies the project in the database\\n        usergroup_id : int\\n            Identifies the user group in the database\\n\\n        Returns\\n        -------\\n        django.http.HttpResponse\\n            Rendered template when user group updated\\n        django.http.HttpResponse\\n            Rendered template, if project or user group does not exist\\n        '", "#NEWLINE#", "data", "=", "request", ".", "POST", "#NEWLINE#", "context", "=", "self", ".", "get_context_data", "(", "project_id", ",", "usergroup_id", ")", "#NEWLINE#", "usergroup", "=", "context", ".", "get", "(", "'usergroup'", ")", "#NEWLINE#", "if", "usergroup", ":", "#NEWLINE#", "#INDENT#", "usergroup", ".", "name", "=", "strip_tags", "(", "data", ".", "get", "(", "'name'", ")", ")", "#NEWLINE#", "usergroup", ".", "description", "=", "strip_tags", "(", "data", ".", "get", "(", "'description'", ")", ")", "#NEWLINE#", "usergroup", ".", "save", "(", ")", "#NEWLINE#", "messages", ".", "success", "(", "self", ".", "request", ",", "'The user group has been updated.'", ")", "#NEWLINE#", "#UNINDENT#", "return", "self", ".", "render_to_response", "(", "context", ")"], "error_location": [0], "repair_targets": [], "repair_candidates": [21, 34, 97, 2, 23, 84, 93, 32, 42, 46, 60, 74, 8, 29, 4, 17, 86, 6, 27, 15, 52, 66], "provenances": [{"datasetProvenance": {"datasetName": "ETHPy150Open", "filepath": "ExCiteS/geokey/geokey/users/views.py", "license": "apache-2.0", "note": "license: manual_eval"}}], "txt_file": "eval__VARIABLE_MISUSE__SStuB.txt-00000-of-00300", "js_count": 2534, "results": {"model": "rnn", "prob": {"loc": [[0.6703338623046875, 0.00019211400649510324, 4.623445875040488e-06, 4.517532659065182e-08, 1.518612407380715e-06, 2.3097595658327918e-07, 1.755947778292466e-05, 7.275102120729571e-08, 1.0162470971408766e-05, 1.775043223517514e-08, 3.0184541088829064e-08, 6.578599140993902e-07, 1.4509430457110284e-07, 3.1578707648804993e-07, 3.349813084696507e-07, 7.652261047041975e-07, 3.9798689499548345e-07, 0.0034501715563237667, 1.598944265879254e-07, 3.354309541236944e-08, 2.595884609490895e-07, 1.5781555475768982e-06, 7.59686091811318e-09, 0.0001384355127811432, 3.5289371425051286e-08, 8.397519479785842e-08, 3.7986590086802607e-06, 0.21869006752967834, 2.8292479328229092e-05, 0.023654690012335777, 1.0247848649669322e-06, 4.1312085841127555e-07, 7.452056820511643e-07, 1.4302381146080734e-07, 1.79620678864012e-06, 1.268931129061457e-07, 1.7719473532906704e-07, 2.84510349501943e-07, 5.62172044737963e-06, 1.1301755620252152e-07, 5.741599579778267e-06, 9.695679182186723e-05, 0.05297159031033516, 7.215785444714129e-07, 8.831502213979547e-07, 2.4208839022321627e-07, 1.117726469601621e-06, 2.239427203676314e-06, 1.0708039788198676e-08, 5.495097710195296e-08, 6.727446361765033e-06, 1.7155354470332895e-08, 1.8637056200532243e-05, 3.2734529753497554e-08, 2.8855231448687846e-07, 2.5835200645474288e-08, 5.6368385230598506e-06, 4.5610821786112865e-08, 7.413286340351988e-08, 6.353810704240459e-07, 1.1452062835815013e-06, 1.3847716218151618e-07, 2.2217747641661845e-08, 1.1144432932042037e-07, 3.847433617920615e-06, 2.6737582814462257e-08, 1.7526068404549733e-05, 1.454892739616298e-08, 8.696302700172964e-08, 7.639522792146636e-09, 2.842994490492856e-06, 2.1715870843763696e-06, 8.469719858794633e-08, 9.808106824493734e-07, 2.222243438154692e-06, 1.2154919204476755e-07, 7.359342646395817e-08, 1.1800906349890283e-06, 4.810843165614642e-06, 7.358265747825499e-07, 4.457584054762265e-06, 7.973093829605205e-08, 5.505554554474656e-07, 3.150068437207665e-07, 0.0002108760818373412, 1.9818824625872367e-07, 2.714915171964094e-05, 2.2216985584577742e-08, 2.392357146163704e-06, 2.3752103572860506e-07, 7.381621571767027e-07, 4.4393902953743236e-07, 3.330149311864261e-08, 3.394438408577116e-06, 3.058768172081727e-08, 1.983703725727537e-07, 1.8030099226962193e-06, 0.030038481578230858, 1.7932039554580115e-05]], "pointer": [[0.0, 0.0, 0.00022060854826122522, 0.0, 0.17543445527553558, 0.0, 0.04113529622554779, 0.0, 0.006066930014640093, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.6029239892959595, 0.0, 0.03089582920074463, 0.0, 0.0, 0.0, 0.0007335652480833232, 0.0, 3.8690857763867825e-05, 0.0, 0.0, 0.0, 3.934103915526066e-06, 0.0, 9.803145985642914e-06, 0.0, 0.0, 0.12487005442380905, 0.0, 3.570938861230388e-05, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 2.0958619643351994e-05, 0.0, 0.0, 0.0, 0.001204592757858336, 0.0, 0.0, 0.0, 0.0, 0.0, 0.00016913999570533633, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.008416798897087574, 0.0, 0.0, 0.0, 0.0, 0.0, 0.00032157768146134913, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0030814141500741243, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0033464068546891212, 0.0, 0.0004160964454058558, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 6.801587915106211e-06, 0.0, 0.0, 0.0, 0.0006473681423813105, 0.0]], "target": [0.0]}, "loss": [0.3999794125556946, 0.0], "acc": [1.0, 0.0, 0.0, 0.0]}}


Trace of simplified code(s):

{"result": {"time": "2021-02-11 14:19:24.787909", "n_pass": [1, 1, 1], "n_token": 99, "loss": [0.3999794125556946, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def post(", "self", ",", "request", ",", "project_id", ",", "usergroup_id", ")", ":", "#NEWLINE#", "#INDENT#", "'\\n        Updates the user group based on the data entered by the user.\\n\\n        Parameter\\n        ---------\\n        request : django.http.HttpRequest\\n            Object representing the request\\n        project_id : int\\n            Identifies the project in the database\\n        usergroup_id : int\\n            Identifies the user group in the database\\n\\n        Returns\\n        -------\\n        django.http.HttpResponse\\n            Rendered template when user group updated\\n        django.http.HttpResponse\\n            Rendered template, if project or user group does not exist\\n        '", "#NEWLINE#", "data", "=", "request", ".", "POST", "#NEWLINE#", "context", "=", "self", ".", "get_context_data", "(", "project_id", ",", "usergroup_id", ")", "#NEWLINE#", "usergroup", "=", "context", ".", "get", "(", "'usergroup'", ")", "#NEWLINE#", "if", "usergroup", ":", "#NEWLINE#", "#INDENT#", "usergroup", ".", "name", "=", "strip_tags", "(", "data", ".", "get", "(", "'name'", ")", ")", "#NEWLINE#", "usergroup", ".", "description", "=", "strip_tags", "(", "data", ".", "get", "(", "'description'", ")", ")", "#NEWLINE#", "usergroup", ".", "save", "(", ")", "#NEWLINE#", "messages", ".", "success", "(", "self", ".", "request", ",", "'The user group has been updated.'", ")", "#NEWLINE#", "#UNINDENT#", "return", "self", ".", "render_to_response", "(", "context", ")"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [21, 34, 97, 2, 23, 84, 93, 32, 42, 46, 60, 74, 8, 29, 4, 17, 86, 6, 27, 15, 52, 66]}}
{"prediction": {"error_location": 0.6703338623046875, "repair_targets": [], "repair_candidates": [0.00022060854826122522, 0.17543445527553558, 0.04113529622554779, 0.006066930014640093, 0.6029239892959595, 0.03089582920074463, 0.0007335652480833232, 3.8690857763867825e-05, 3.934103915526066e-06, 9.803145985642914e-06, 0.12487005442380905, 3.570938861230388e-05, 2.0958619643351994e-05, 0.001204592757858336, 0.00016913999570533633, 0.008416798897087574, 0.00032157768146134913, 0.0030814141500741243, 0.0033464068546891212, 0.0004160964454058558, 6.801587915106211e-06, 0.0006473681423813105], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 14:19:24.890222", "n_pass": [50, 2, 2], "n_token": 93, "loss": [0.6684212684631348, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def post(", "self", ",", "request", ",", "project_id", ",", "usergroup_id", ")", ":", "#NEWLINE#", "#INDENT#", "'\\n        Updates the user group based on the data entered by the user.\\n\\n        Parameter\\n        ---------\\n        request : django.http.HttpRequest\\n            Object representing the request\\n        project_id : int\\n            Identifies the project in the database\\n        usergroup_id : int\\n            Identifies the user group in the database\\n\\n        Returns\\n        -------\\n        django.http.HttpResponse\\n            Rendered template when user group updated\\n        django.http.HttpResponse\\n            Rendered template, if project or user group does not exist\\n        '", "#NEWLINE#", "data", "=", "request", ".", "POST", "#NEWLINE#", "context", "=", "self", ".", "get_context_data", "(", "project_id", ",", "usergroup_id", ")", "#NEWLINE#", "usergroup", "=", "context", ".", "usergroup", ":", "#NEWLINE#", "#INDENT#", "usergroup", ".", "name", "=", "strip_tags", "(", "data", ".", "get", "(", "'name'", ")", ")", "#NEWLINE#", "usergroup", ".", "description", "=", "strip_tags", "(", "data", ".", "get", "(", "'description'", ")", ")", "#NEWLINE#", "usergroup", ".", "save", "(", ")", "#NEWLINE#", "messages", ".", "success", "(", "self", ".", "request", ",", "'The user group has been updated.'", ")", "#NEWLINE#", "#UNINDENT#", "return", "self", ".", "render_to_response", "(", "context", ")"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [21, 34, 91, 2, 23, 78, 87, 32, 36, 40, 54, 68, 8, 29, 4, 17, 80, 6, 27, 15, 46, 60]}}
{"prediction": {"error_location": 0.5125170350074768, "repair_targets": [], "repair_candidates": [0.010631336830556393, 0.43930181860923767, 0.07739321142435074, 0.007581349462270737, 0.08943451941013336, 0.1697527915239334, 0.06722787022590637, 0.009152569808065891, 2.503629366401583e-05, 3.03011984215118e-05, 0.1057363897562027, 7.289552740985528e-05, 0.0006246113334782422, 0.0014105087611824274, 0.00010786759958136827, 0.012954985722899437, 0.0002656113647390157, 0.0026108953170478344, 0.004722641780972481, 0.00045307906111702323, 1.1331005225656554e-05, 0.0004983377293683589], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 14:19:24.984822", "n_pass": [52, 3, 3], "n_token": 87, "loss": [0.5236320495605469, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def post(", "self", ",", "request", ",", "project_id", ",", "usergroup_id", ")", ":", "#NEWLINE#", "#INDENT#", "'\\n        Updates the user group based on the data entered by the user.\\n\\n        Parameter\\n        ---------\\n        request : django.http.HttpRequest\\n            Object representing the request\\n        project_id : int\\n            Identifies the project in the database\\n        usergroup_id : int\\n            Identifies the user group in the database\\n\\n        Returns\\n        -------\\n        django.http.HttpResponse\\n            Rendered template when user group updated\\n        django.http.HttpResponse\\n            Rendered template, if project or user group does not exist\\n        '", "#NEWLINE#", "data", "=", "request", ".", "POST", "#NEWLINE#", "context", "=", "self", ".", "get_context_data", "(", "project_id", ",", "usergroup_id", ")", "#NEWLINE#", "usergroup", "=", "context", ".", "usergroup", ":", "#NEWLINE#", "#INDENT#", "usergroup", ".", "name", "=", "strip_tags", "(", "data", ".", "usergroup", ".", "description", "=", "strip_tags", "(", "data", ".", "get", "(", "'description'", ")", ")", "#NEWLINE#", "usergroup", ".", "save", "(", ")", "#NEWLINE#", "messages", ".", "success", "(", "self", ".", "request", ",", "'The user group has been updated.'", ")", "#NEWLINE#", "#UNINDENT#", "return", "self", ".", "render_to_response", "(", "context", ")"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [21, 34, 85, 2, 23, 72, 81, 32, 36, 40, 48, 62, 8, 29, 4, 17, 74, 6, 27, 15, 46, 54]}}
{"prediction": {"error_location": 0.5923652052879333, "repair_targets": [], "repair_candidates": [0.002760300412774086, 0.36646419763565063, 0.09113150835037231, 0.008732327260077, 0.170912504196167, 0.16342753171920776, 0.05568722262978554, 0.00234006205573678, 2.0923074771417305e-05, 2.937116914836224e-05, 0.11589567363262177, 0.00012156191223766655, 0.0009917592396959662, 0.00869500357657671, 0.00027780194068327546, 0.0024438726250082254, 7.110803562682122e-05, 0.0035266471095383167, 0.005178834777325392, 0.0005543619627133012, 1.2850908206019085e-05, 0.0007245272281579673], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 14:19:25.265881", "n_pass": [100, 6, 4], "n_token": 84, "loss": [0.6124751567840576, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def post(", "self", ",", "request", ",", "project_id", ",", "usergroup_id", ")", ":", "#NEWLINE#", "#INDENT#", "'\\n        Updates the user group based on the data entered by the user.\\n\\n        Parameter\\n        ---------\\n        request : django.http.HttpRequest\\n            Object representing the request\\n        project_id : int\\n            Identifies the project in the database\\n        usergroup_id : int\\n            Identifies the user group in the database\\n\\n        Returns\\n        -------\\n        django.http.HttpResponse\\n            Rendered template when user group updated\\n        django.http.HttpResponse\\n            Rendered template, if project or user group does not exist\\n        '", "#NEWLINE#", "data", "=", "request", ".", "POST", "#NEWLINE#", "context", "=", "self", ".", "get_context_data", "(", "project_id", ",", "usergroup_id", ")", "#NEWLINE#", "usergroup", "=", "context", ".", "usergroup", ":", "#NEWLINE#", "#INDENT#", "usergroup", ".", "name", "=", "strip_tags", "(", "data", ".", "usergroup", ".", "description", "=", "strip_tags", "(", "data", ".", "get", "(", "'description'", ")", ")", "#NEWLINE#", "usergroup", ")", "#NEWLINE#", "messages", ".", "success", "(", "self", ".", "request", ",", "'The user group has been updated.'", ")", "#NEWLINE#", "#UNINDENT#", "return", "self", ".", "render_to_response", "(", "context", ")"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [21, 34, 82, 2, 23, 69, 78, 32, 36, 40, 48, 62, 8, 29, 4, 17, 71, 6, 27, 15, 46, 54]}}
{"prediction": {"error_location": 0.5420077443122864, "repair_targets": [], "repair_candidates": [0.002891948213800788, 0.38812845945358276, 0.08996382355690002, 0.008049075491726398, 0.15219081938266754, 0.17179854214191437, 0.06253048777580261, 0.0021469900384545326, 1.9399119992158376e-05, 2.884105015255045e-05, 0.09698768705129623, 0.000149295519804582, 0.0012820465490221977, 0.007719462737441063, 0.00023136951494961977, 0.0021313235629349947, 7.702119182795286e-05, 0.004559176508337259, 0.007497740443795919, 0.0007258914993144572, 1.5714471373939887e-05, 0.0008748428081162274], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 14:19:25.356950", "n_pass": [101, 7, 5], "n_token": 81, "loss": [0.5997780561447144, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def post(", "self", ",", "request", ",", "project_id", ",", "usergroup_id", ")", ":", "#NEWLINE#", "#INDENT#", "'\\n        Updates the user group based on the data entered by the user.\\n\\n        Parameter\\n        ---------\\n        request : django.http.HttpRequest\\n            Object representing the request\\n        project_id : int\\n            Identifies the project in the database\\n        usergroup_id : int\\n            Identifies the user group in the database\\n\\n        Returns\\n        -------\\n        django.http.HttpResponse\\n            Rendered template when user group updated\\n        django.http.HttpResponse\\n            Rendered template, if project or user group does not exist\\n        '", "#NEWLINE#", "data", "=", "request", ".", "POST", "#NEWLINE#", "context", "=", "self", ".", "get_context_data", "(", "project_id", ",", "usergroup_id", ")", "#NEWLINE#", "usergroup", "=", "context", ".", "usergroup", ":", "#NEWLINE#", "#INDENT#", "usergroup", ".", "name", "=", "strip_tags", "(", "data", ".", "usergroup", ".", "description", "=", "strip_tags", "(", "data", ".", "get", "(", "'description'", ")", ")", "#NEWLINE#", "usergroup", ".", "success", "(", "self", ".", "request", ",", "'The user group has been updated.'", ")", "#NEWLINE#", "#UNINDENT#", "return", "self", ".", "render_to_response", "(", "context", ")"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [21, 34, 79, 2, 23, 66, 75, 32, 36, 40, 48, 62, 8, 29, 4, 17, 68, 6, 27, 15, 46, 54]}}
{"prediction": {"error_location": 0.5489335656166077, "repair_targets": [], "repair_candidates": [0.002208627061918378, 0.2850722670555115, 0.0762411430478096, 0.00801103375852108, 0.20081086456775665, 0.1696544736623764, 0.044259872287511826, 0.001374136540107429, 1.959702422027476e-05, 2.4643524739076383e-05, 0.1674906313419342, 0.00018004716548603028, 0.0011369390413165092, 0.032665617763996124, 0.0003271208261139691, 0.001893889275379479, 0.00012924578913953155, 0.0002700421609915793, 0.007105064112693071, 0.0002587847411632538, 1.1740090485545807e-05, 0.0008542686700820923], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 14:19:25.446105", "n_pass": [102, 8, 6], "n_token": 78, "loss": [0.6961106061935425, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def post(", "self", ",", "request", ",", "project_id", ",", "usergroup_id", ")", ":", "#NEWLINE#", "#INDENT#", "'\\n        Updates the user group based on the data entered by the user.\\n\\n        Parameter\\n        ---------\\n        request : django.http.HttpRequest\\n            Object representing the request\\n        project_id : int\\n            Identifies the project in the database\\n        usergroup_id : int\\n            Identifies the user group in the database\\n\\n        Returns\\n        -------\\n        django.http.HttpResponse\\n            Rendered template when user group updated\\n        django.http.HttpResponse\\n            Rendered template, if project or user group does not exist\\n        '", "#NEWLINE#", "data", "=", "request", ".", "POST", "#NEWLINE#", "context", "=", "self", ".", "get_context_data", "(", "project_id", ",", "usergroup_id", ")", "#NEWLINE#", "usergroup", "=", "context", ".", "usergroup", ":", "#NEWLINE#", "#INDENT#", "usergroup", ".", "name", "=", "strip_tags", "(", "data", ".", "usergroup", ".", "description", "=", "strip_tags", "(", "data", ".", "get", "(", "'description'", ")", ")", "#NEWLINE#", "usergroup", "self", ".", "request", ",", "'The user group has been updated.'", ")", "#NEWLINE#", "#UNINDENT#", "return", "self", ".", "render_to_response", "(", "context", ")"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [21, 34, 76, 2, 23, 63, 72, 32, 36, 40, 48, 62, 8, 29, 4, 17, 65, 6, 27, 15, 46, 54]}}
{"prediction": {"error_location": 0.49852046370506287, "repair_targets": [], "repair_candidates": [0.003329584375023842, 0.27841058373451233, 0.07128942012786865, 0.007166644558310509, 0.20907387137413025, 0.19554410874843597, 0.05562414601445198, 0.001288035186007619, 1.9779825379373506e-05, 2.8225760615896434e-05, 0.09506218135356903, 0.00019184130360372365, 0.0010104815009981394, 0.07408439368009567, 0.00046868607751093805, 0.0024262242950499058, 0.0001615233049960807, 0.0025046560913324356, 0.0007902205688878894, 0.000442531454609707, 1.049904585670447e-05, 0.0010723364539444447], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 14:19:25.535759", "n_pass": [104, 9, 7], "n_token": 74, "loss": [0.6962021589279175, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def post(", "self", ",", "request", ",", "project_id", ",", "usergroup_id", ")", ":", "#NEWLINE#", "#INDENT#", "'\\n        Updates the user group based on the data entered by the user.\\n\\n        Parameter\\n        ---------\\n        request : django.http.HttpRequest\\n            Object representing the request\\n        project_id : int\\n            Identifies the project in the database\\n        usergroup_id : int\\n            Identifies the user group in the database\\n\\n        Returns\\n        -------\\n        django.http.HttpResponse\\n            Rendered template when user group updated\\n        django.http.HttpResponse\\n            Rendered template, if project or user group does not exist\\n        '", "#NEWLINE#", "data", "=", "request", ".", "POST", "#NEWLINE#", "context", "=", "self", ".", "get_context_data", "(", "project_id", ",", "usergroup_id", ")", "#NEWLINE#", "usergroup", "=", "context", ".", "usergroup", ":", "#NEWLINE#", "#INDENT#", "usergroup", ".", "name", "=", "strip_tags", "(", "data", ".", "usergroup", ".", "description", "=", "strip_tags", "(", "data", ".", "get", "(", "'description'", ")", ")", "#NEWLINE#", "usergroup", "self", ".", "request", "#UNINDENT#", "return", "self", ".", "render_to_response", "(", "context", ")"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [21, 34, 72, 2, 23, 63, 68, 32, 36, 40, 48, 62, 8, 29, 4, 17, 65, 6, 27, 15, 46, 54]}}
{"prediction": {"error_location": 0.4984748065471649, "repair_targets": [], "repair_candidates": [0.0026580123230814934, 0.2796723544597626, 0.07649056613445282, 0.008196773938834667, 0.20337484776973724, 0.23231865465641022, 0.044160958379507065, 0.0015830236952751875, 1.7093710994231515e-05, 2.0914671040372923e-05, 0.09296304732561111, 0.00011404461838537827, 0.0006574745639227331, 0.05194832384586334, 0.0003128724347334355, 0.0021273335441946983, 0.00023557701206300408, 0.0020362823270261288, 0.000228543984121643, 0.0005665115313604474, 1.4202559214027133e-05, 0.0003026057383976877], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 14:19:25.793131", "n_pass": [113, 12, 8], "n_token": 71, "loss": [0.5835834741592407, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def post(", "self", ",", "request", ",", "project_id", ",", "usergroup_id", ")", ":", "#NEWLINE#", "#INDENT#", "'\\n        Updates the user group based on the data entered by the user.\\n\\n        Parameter\\n        ---------\\n        request : django.http.HttpRequest\\n            Object representing the request\\n        project_id : int\\n            Identifies the project in the database\\n        usergroup_id : int\\n            Identifies the user group in the database\\n\\n        Returns\\n        -------\\n        django.http.HttpResponse\\n            Rendered template when user group updated\\n        django.http.HttpResponse\\n            Rendered template, if project or user group does not exist\\n        '", "#NEWLINE#", "data", "=", "request", "context", "=", "self", ".", "get_context_data", "(", "project_id", ",", "usergroup_id", ")", "#NEWLINE#", "usergroup", "=", "context", ".", "usergroup", ":", "#NEWLINE#", "#INDENT#", "usergroup", ".", "name", "=", "strip_tags", "(", "data", ".", "usergroup", ".", "description", "=", "strip_tags", "(", "data", ".", "get", "(", "'description'", ")", ")", "#NEWLINE#", "usergroup", "self", ".", "request", "#UNINDENT#", "return", "self", ".", "render_to_response", "(", "context", ")"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [18, 31, 69, 2, 20, 60, 65, 29, 33, 37, 45, 59, 8, 26, 4, 17, 62, 6, 24, 15, 43, 51]}}
{"prediction": {"error_location": 0.5578954815864563, "repair_targets": [], "repair_candidates": [0.0029581438284367323, 0.4755968749523163, 0.05462701618671417, 0.00585979362949729, 0.03881150484085083, 0.07535840570926666, 0.09488509595394135, 0.0056023187935352325, 4.7547935537295416e-05, 7.927555270725861e-05, 0.14797069132328033, 0.00016691030759830028, 0.00112129095941782, 0.09028758108615875, 0.00040276767686009407, 0.002760866656899452, 0.0002634883567225188, 0.0023269967641681433, 0.00013729602505918592, 0.0004931514849886298, 1.2651902579818852e-05, 0.00023033510660752654], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 14:19:25.964375", "n_pass": [121, 14, 9], "n_token": 68, "loss": [0.6309766173362732, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def post(", "self", ",", "request", ",", "project_id", ",", "usergroup_id", ")", ":", "#NEWLINE#", "#INDENT#", "'\\n        Updates the user group based on the data entered by the user.\\n\\n        Parameter\\n        ---------\\n        request : django.http.HttpRequest\\n            Object representing the request\\n        project_id : int\\n            Identifies the project in the database\\n        usergroup_id : int\\n            Identifies the user group in the database\\n\\n        Returns\\n        -------\\n        django.http.HttpResponse\\n            Rendered template when user group updated\\n        django.http.HttpResponse\\n            Rendered template, if project or user group does not exist\\n        '", "#NEWLINE#", "data", "=", "request", "context", "=", "self", ".", "get_context_data", "(", "project_id", ",", "usergroup_id", ")", "#NEWLINE#", "usergroup", "=", "context", ".", "usergroup", ":", "#NEWLINE#", "#INDENT#", "usergroup", ".", "(", "data", ".", "usergroup", ".", "description", "=", "strip_tags", "(", "data", ".", "get", "(", "'description'", ")", ")", "#NEWLINE#", "usergroup", "self", ".", "request", "#UNINDENT#", "return", "self", ".", "render_to_response", "(", "context", ")"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [18, 31, 66, 2, 20, 57, 62, 29, 33, 37, 42, 56, 8, 26, 4, 17, 59, 6, 24, 15, 40, 48]}}
{"prediction": {"error_location": 0.5320719480514526, "repair_targets": [], "repair_candidates": [0.00702272541821003, 0.4427144229412079, 0.044102124869823456, 0.00565337622538209, 0.08581989258527756, 0.12685394287109375, 0.1241791695356369, 0.012025801464915276, 5.022326877224259e-05, 8.290491678053513e-05, 0.13577859103679657, 0.00011267522495472804, 0.0008934359648264945, 0.008920785039663315, 0.0011287283850833774, 0.0008958411635830998, 0.0005024546990171075, 0.0021408372558653355, 0.00023316184524446726, 0.0005974308005534112, 1.5726191122666933e-05, 0.00027568190125748515], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 14:19:26.047447", "n_pass": [124, 15, 10], "n_token": 65, "loss": [0.7487649321556091, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def post(", "self", ",", "request", ",", "project_id", ",", "usergroup_id", ")", ":", "#NEWLINE#", "#INDENT#", "'\\n        Updates the user group based on the data entered by the user.\\n\\n        Parameter\\n        ---------\\n        request : django.http.HttpRequest\\n            Object representing the request\\n        project_id : int\\n            Identifies the project in the database\\n        usergroup_id : int\\n            Identifies the user group in the database\\n\\n        Returns\\n        -------\\n        django.http.HttpResponse\\n            Rendered template when user group updated\\n        django.http.HttpResponse\\n            Rendered template, if project or user group does not exist\\n        '", "#NEWLINE#", "data", "=", "request", "context", "=", "self", ".", "get_context_data", "(", "project_id", ",", "usergroup_id", ")", "#NEWLINE#", "usergroup", "=", "context", ".", "usergroup", ":", "#NEWLINE#", "#INDENT#", "usergroup", ".", "(", "data", ".", "usergroup", ".", "description", "data", ".", "get", "(", "'description'", ")", ")", "#NEWLINE#", "usergroup", "self", ".", "request", "#UNINDENT#", "return", "self", ".", "render_to_response", "(", "context", ")"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [18, 31, 63, 2, 20, 54, 59, 29, 33, 37, 42, 53, 8, 26, 4, 17, 56, 6, 24, 15, 40, 45]}}
{"prediction": {"error_location": 0.47295042872428894, "repair_targets": [], "repair_candidates": [0.0019198415102437139, 0.4160163104534149, 0.025172915309667587, 0.001782092615030706, 0.04644089937210083, 0.07315307855606079, 0.13250666856765747, 0.002769416430965066, 2.1850339180673473e-05, 2.7027412215829827e-05, 0.2825641632080078, 0.012026602402329445, 0.0008719609468244016, 0.0008061498519964516, 0.00032015563920140266, 0.0005783831002190709, 0.0007650750922039151, 0.0013048237888142467, 0.0002510392514523119, 0.00047061964869499207, 1.2551208783406764e-05, 0.0002183260367019102], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 14:19:26.537304", "n_pass": [191, 21, 11], "n_token": 63, "loss": [0.823280930519104, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def post(", "self", ",", "request", ",", "project_id", ",", "usergroup_id", ")", ":", "#NEWLINE#", "#INDENT#", "'\\n        Updates the user group based on the data entered by the user.\\n\\n        Parameter\\n        ---------\\n        request : django.http.HttpRequest\\n            Object representing the request\\n        project_id : int\\n            Identifies the project in the database\\n        usergroup_id : int\\n            Identifies the user group in the database\\n\\n        Returns\\n        -------\\n        django.http.HttpResponse\\n            Rendered template when user group updated\\n        django.http.HttpResponse\\n            Rendered template, if project or user group does not exist\\n        '", "#NEWLINE#", "data", "=", "request", "context", "=", "self", ".", "get_context_data", "(", "project_id", ",", "usergroup_id", ")", "#NEWLINE#", "usergroup", "=", "context", ".", "usergroup", ":", "#NEWLINE#", "#INDENT#", "usergroup", ".", "(", "data", ".", "usergroup", ".", "description", "data", ".", "'description'", ")", ")", "#NEWLINE#", "usergroup", "self", ".", "request", "#UNINDENT#", "return", "self", ".", "render_to_response", "(", "context", ")"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [18, 31, 61, 2, 20, 52, 57, 29, 33, 37, 42, 51, 8, 26, 4, 17, 54, 6, 24, 15, 40, 45]}}
{"prediction": {"error_location": 0.4389890432357788, "repair_targets": [], "repair_candidates": [0.001184768625535071, 0.40849873423576355, 0.03475653752684593, 0.002104503568261862, 0.14102470874786377, 0.06365229189395905, 0.06426585465669632, 0.0021217658650130033, 2.2425865608965978e-05, 3.99060154450126e-05, 0.2370198518037796, 0.009829353541135788, 0.001278200070373714, 0.002586265094578266, 0.018804442137479782, 0.0016296047251671553, 0.007402452640235424, 0.0017336525488644838, 0.00029256808920763433, 0.0012868104968219995, 2.747556754911784e-05, 0.0004378292360343039], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 14:19:26.618750", "n_pass": [192, 22, 12], "n_token": 61, "loss": [0.9380170702934265, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def post(", "self", ",", "request", ",", "project_id", ",", "usergroup_id", ")", ":", "#NEWLINE#", "#INDENT#", "'\\n        Updates the user group based on the data entered by the user.\\n\\n        Parameter\\n        ---------\\n        request : django.http.HttpRequest\\n            Object representing the request\\n        project_id : int\\n            Identifies the project in the database\\n        usergroup_id : int\\n            Identifies the user group in the database\\n\\n        Returns\\n        -------\\n        django.http.HttpResponse\\n            Rendered template when user group updated\\n        django.http.HttpResponse\\n            Rendered template, if project or user group does not exist\\n        '", "#NEWLINE#", "data", "=", "request", "context", "=", "self", ".", "get_context_data", "(", "project_id", ",", "usergroup_id", ")", "#NEWLINE#", "usergroup", "=", "context", ".", "usergroup", ":", "#NEWLINE#", "#INDENT#", "usergroup", ".", "(", "data", ".", "usergroup", ".", "description", "data", ".", ")", "#NEWLINE#", "usergroup", "self", ".", "request", "#UNINDENT#", "return", "self", ".", "render_to_response", "(", "context", ")"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [18, 31, 59, 2, 20, 50, 55, 29, 33, 37, 42, 49, 8, 26, 4, 17, 52, 6, 24, 15, 40, 45]}}
{"prediction": {"error_location": 0.3914031982421875, "repair_targets": [], "repair_candidates": [0.0013838527956977487, 0.3128998875617981, 0.014744499698281288, 0.0009158998727798462, 0.13720843195915222, 0.0651225671172142, 0.06719759851694107, 0.0016650097677484155, 1.3356851923163049e-05, 2.449217572575435e-05, 0.35707929730415344, 0.03552096709609032, 0.001364841707982123, 0.00034024924389086664, 0.0017053064657375216, 0.0007264724117703736, 0.0006350736366584897, 0.000597801641561091, 0.00016003104974515736, 0.0005513470387086272, 2.01425064005889e-05, 0.00012285132834222168], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 14:19:26.699144", "n_pass": [193, 23, 13], "n_token": 59, "loss": [0.565912663936615, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def post(", "self", ",", "request", ",", "project_id", ",", "usergroup_id", ")", ":", "#NEWLINE#", "#INDENT#", "'\\n        Updates the user group based on the data entered by the user.\\n\\n        Parameter\\n        ---------\\n        request : django.http.HttpRequest\\n            Object representing the request\\n        project_id : int\\n            Identifies the project in the database\\n        usergroup_id : int\\n            Identifies the user group in the database\\n\\n        Returns\\n        -------\\n        django.http.HttpResponse\\n            Rendered template when user group updated\\n        django.http.HttpResponse\\n            Rendered template, if project or user group does not exist\\n        '", "#NEWLINE#", "data", "=", "request", "context", "=", "self", ".", "get_context_data", "(", "project_id", ",", "usergroup_id", ")", "#NEWLINE#", "usergroup", "=", "context", ".", "usergroup", ":", "#NEWLINE#", "#INDENT#", "usergroup", ".", "(", "data", ".", "usergroup", ".", "description", "data", ".", "usergroup", "self", ".", "request", "#UNINDENT#", "return", "self", ".", "render_to_response", "(", "context", ")"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [18, 31, 57, 2, 20, 48, 53, 29, 33, 37, 42, 47, 8, 26, 4, 17, 50, 6, 24, 15, 40, 45]}}
{"prediction": {"error_location": 0.5678417682647705, "repair_targets": [], "repair_candidates": [0.0011422274401411414, 0.3956018090248108, 0.03792503848671913, 0.0033725369721651077, 0.1772572100162506, 0.052206914871931076, 0.025846583768725395, 0.002014711732044816, 2.4436645617242903e-05, 4.269722558092326e-05, 0.26832112669944763, 0.0027275325264781713, 0.0006367643945850432, 0.0008675247081555426, 0.010178904980421066, 0.0009437848930247128, 0.00031033818959258497, 0.018807703629136086, 0.0007301719742827117, 0.0008543616277165711, 7.850211841287091e-05, 0.0001090948426281102], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 14:19:26.780452", "n_pass": [196, 24, 14], "n_token": 57, "loss": [0.5420680046081543, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def post(", "self", ",", "request", ",", "project_id", ",", "usergroup_id", ")", ":", "#NEWLINE#", "#INDENT#", "'\\n        Updates the user group based on the data entered by the user.\\n\\n        Parameter\\n        ---------\\n        request : django.http.HttpRequest\\n            Object representing the request\\n        project_id : int\\n            Identifies the project in the database\\n        usergroup_id : int\\n            Identifies the user group in the database\\n\\n        Returns\\n        -------\\n        django.http.HttpResponse\\n            Rendered template when user group updated\\n        django.http.HttpResponse\\n            Rendered template, if project or user group does not exist\\n        '", "#NEWLINE#", "data", "=", "request", "context", "=", "self", ".", "get_context_data", "(", "project_id", ",", "usergroup_id", ")", "#NEWLINE#", "usergroup", "=", "context", ".", "usergroup", ":", "#NEWLINE#", "#INDENT#", "usergroup", ".", "(", "data", ".", "usergroup", ".", "description", "data", ".", "usergroup", "self", ".", "request", "self", ".", "render_to_response", "(", "context", ")"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [18, 31, 55, 2, 20, 48, 51, 29, 33, 37, 42, 47, 8, 26, 4, 17, 50, 6, 24, 15, 40, 45]}}
{"prediction": {"error_location": 0.5815443992614746, "repair_targets": [], "repair_candidates": [0.0009705863194540143, 0.268475204706192, 0.02531498670578003, 0.0030975420959293842, 0.3936663866043091, 0.05340726673603058, 0.01976734586060047, 0.0011848866706714034, 1.8159504179493524e-05, 4.405466097523458e-05, 0.21444255113601685, 0.0016270765336230397, 0.00046777731040492654, 0.0005358901107683778, 0.007021081168204546, 0.0007753222016617656, 0.0004196263034828007, 0.008020221255719662, 6.674060568911955e-05, 0.0006345617002807558, 1.819363569666166e-05, 2.456851871102117e-05], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 14:19:26.857855", "n_pass": [198, 25, 15], "n_token": 55, "loss": [0.7189502716064453, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def post(", "self", ",", "request", ",", "project_id", ",", "usergroup_id", ")", ":", "#NEWLINE#", "#INDENT#", "'\\n        Updates the user group based on the data entered by the user.\\n\\n        Parameter\\n        ---------\\n        request : django.http.HttpRequest\\n            Object representing the request\\n        project_id : int\\n            Identifies the project in the database\\n        usergroup_id : int\\n            Identifies the user group in the database\\n\\n        Returns\\n        -------\\n        django.http.HttpResponse\\n            Rendered template when user group updated\\n        django.http.HttpResponse\\n            Rendered template, if project or user group does not exist\\n        '", "#NEWLINE#", "data", "=", "request", "context", "=", "self", ".", "get_context_data", "(", "project_id", ",", "usergroup_id", ")", "#NEWLINE#", "usergroup", "=", "context", ".", "usergroup", ":", "#NEWLINE#", "#INDENT#", "usergroup", ".", "(", "data", ".", "usergroup", ".", "description", "data", ".", "usergroup", "self", ".", "request", "self", ".", "context", ")"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [18, 31, 53, 2, 20, 48, 51, 29, 33, 37, 42, 47, 8, 26, 4, 17, 50, 6, 24, 15, 40, 45]}}
{"prediction": {"error_location": 0.48726341128349304, "repair_targets": [], "repair_candidates": [0.0014047696022316813, 0.4205400347709656, 0.026254039257764816, 0.0012659212807193398, 0.19452118873596191, 0.0472264438867569, 0.047992974519729614, 0.0023536437656730413, 2.06727836484788e-05, 3.5415687307249755e-05, 0.23174412548542023, 0.004628724884241819, 0.000692701549269259, 0.0005366337718442082, 0.008709188550710678, 0.0020083871204406023, 0.00015074844122864306, 0.004102344159036875, 2.1107998691149987e-05, 0.004468015860766172, 0.0005126676405780017, 0.000810233352240175], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 14:19:27.013138", "n_pass": [203, 27, 16], "n_token": 54, "loss": [0.3526711165904999, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def post(", "self", "request", ",", "project_id", ",", "usergroup_id", ")", ":", "#NEWLINE#", "#INDENT#", "'\\n        Updates the user group based on the data entered by the user.\\n\\n        Parameter\\n        ---------\\n        request : django.http.HttpRequest\\n            Object representing the request\\n        project_id : int\\n            Identifies the project in the database\\n        usergroup_id : int\\n            Identifies the user group in the database\\n\\n        Returns\\n        -------\\n        django.http.HttpResponse\\n            Rendered template when user group updated\\n        django.http.HttpResponse\\n            Rendered template, if project or user group does not exist\\n        '", "#NEWLINE#", "data", "=", "request", "context", "=", "self", ".", "get_context_data", "(", "project_id", ",", "usergroup_id", ")", "#NEWLINE#", "usergroup", "=", "context", ".", "usergroup", ":", "#NEWLINE#", "#INDENT#", "usergroup", ".", "(", "data", ".", "usergroup", ".", "description", "data", ".", "usergroup", "self", ".", "request", "self", ".", "context", ")"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [17, 30, 52, 2, 19, 47, 50, 28, 32, 36, 41, 46, 7, 25, 3, 16, 49, 5, 23, 14, 39, 44]}}
{"prediction": {"error_location": 0.7028083205223083, "repair_targets": [], "repair_candidates": [0.00015657307812944055, 0.0230892114341259, 0.01604536920785904, 0.002462254837155342, 0.5718263387680054, 0.03274153918027878, 0.011337606236338615, 0.0004039280174765736, 2.6246660127071664e-05, 4.454096779227257e-05, 0.31401026248931885, 0.0023189696948975325, 0.0006828370387665927, 0.0008627173956483603, 0.009735031984746456, 0.0022328170016407967, 0.0001332093233941123, 0.006449198350310326, 1.9119104763376527e-05, 0.004205951001495123, 0.00033824201091192663, 0.0008780612843111157], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 14:19:27.090350", "n_pass": [205, 28, 17], "n_token": 53, "loss": [0.5837419033050537, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def post(", "self", "request", "project_id", ",", "usergroup_id", ")", ":", "#NEWLINE#", "#INDENT#", "'\\n        Updates the user group based on the data entered by the user.\\n\\n        Parameter\\n        ---------\\n        request : django.http.HttpRequest\\n            Object representing the request\\n        project_id : int\\n            Identifies the project in the database\\n        usergroup_id : int\\n            Identifies the user group in the database\\n\\n        Returns\\n        -------\\n        django.http.HttpResponse\\n            Rendered template when user group updated\\n        django.http.HttpResponse\\n            Rendered template, if project or user group does not exist\\n        '", "#NEWLINE#", "data", "=", "request", "context", "=", "self", ".", "get_context_data", "(", "project_id", ",", "usergroup_id", ")", "#NEWLINE#", "usergroup", "=", "context", ".", "usergroup", ":", "#NEWLINE#", "#INDENT#", "usergroup", ".", "(", "data", ".", "usergroup", ".", "description", "data", ".", "usergroup", "self", ".", "request", "self", ".", "context", ")"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [16, 29, 51, 2, 18, 46, 49, 27, 31, 35, 40, 45, 6, 24, 3, 15, 48, 4, 22, 13, 38, 43]}}
{"prediction": {"error_location": 0.557807207107544, "repair_targets": [], "repair_candidates": [8.474640344502404e-05, 0.08854377269744873, 0.04873298481106758, 0.0016169247683137655, 0.7209097146987915, 0.029526367783546448, 0.007328551262617111, 0.0003439129504840821, 1.2514826266851742e-05, 2.480439616192598e-05, 0.08751354366540909, 0.0012063521426171064, 0.0004777717113029212, 0.00024691448197700083, 0.007610501255840063, 0.0010819314047694206, 8.91990857780911e-05, 0.0024371773470193148, 9.533451702736784e-06, 0.0016183038242161274, 0.00016075861640274525, 0.00042375343036837876], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 14:19:27.244789", "n_pass": [209, 30, 18], "n_token": 52, "loss": [0.5602091550827026, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def post(", "self", "request", "project_id", ",", "usergroup_id", ":", "#NEWLINE#", "#INDENT#", "'\\n        Updates the user group based on the data entered by the user.\\n\\n        Parameter\\n        ---------\\n        request : django.http.HttpRequest\\n            Object representing the request\\n        project_id : int\\n            Identifies the project in the database\\n        usergroup_id : int\\n            Identifies the user group in the database\\n\\n        Returns\\n        -------\\n        django.http.HttpResponse\\n            Rendered template when user group updated\\n        django.http.HttpResponse\\n            Rendered template, if project or user group does not exist\\n        '", "#NEWLINE#", "data", "=", "request", "context", "=", "self", ".", "get_context_data", "(", "project_id", ",", "usergroup_id", ")", "#NEWLINE#", "usergroup", "=", "context", ".", "usergroup", ":", "#NEWLINE#", "#INDENT#", "usergroup", ".", "(", "data", ".", "usergroup", ".", "description", "data", ".", "usergroup", "self", ".", "request", "self", ".", "context", ")"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [15, 28, 50, 2, 17, 45, 48, 26, 30, 34, 39, 44, 6, 23, 3, 14, 47, 4, 21, 12, 37, 42]}}
{"prediction": {"error_location": 0.5710897445678711, "repair_targets": [], "repair_candidates": [0.0001233813090948388, 0.1616353690624237, 0.1097048670053482, 0.0013745276955887675, 0.450813889503479, 0.04185494780540466, 0.018808146938681602, 0.0008078559185378253, 2.2461817934527062e-05, 3.643007585196756e-05, 0.1927178055047989, 0.002128136809915304, 0.0006163925281725824, 0.0005113676888868213, 0.009156585671007633, 0.0015582696069031954, 0.00012865255121141672, 0.004306786227971315, 1.624248943699058e-05, 0.002697354881092906, 0.00026676783454604447, 0.0007138109649531543], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 14:19:27.320810", "n_pass": [210, 31, 19], "n_token": 51, "loss": [0.8436880707740784, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def post(", "self", "request", "project_id", ",", "usergroup_id", "#NEWLINE#", "#INDENT#", "'\\n        Updates the user group based on the data entered by the user.\\n\\n        Parameter\\n        ---------\\n        request : django.http.HttpRequest\\n            Object representing the request\\n        project_id : int\\n            Identifies the project in the database\\n        usergroup_id : int\\n            Identifies the user group in the database\\n\\n        Returns\\n        -------\\n        django.http.HttpResponse\\n            Rendered template when user group updated\\n        django.http.HttpResponse\\n            Rendered template, if project or user group does not exist\\n        '", "#NEWLINE#", "data", "=", "request", "context", "=", "self", ".", "get_context_data", "(", "project_id", ",", "usergroup_id", ")", "#NEWLINE#", "usergroup", "=", "context", ".", "usergroup", ":", "#NEWLINE#", "#INDENT#", "usergroup", ".", "(", "data", ".", "usergroup", ".", "description", "data", ".", "usergroup", "self", ".", "request", "self", ".", "context", ")"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [14, 27, 49, 2, 16, 44, 47, 25, 29, 33, 38, 43, 6, 22, 3, 13, 46, 4, 20, 11, 36, 41]}}
{"prediction": {"error_location": 0.43012136220932007, "repair_targets": [], "repair_candidates": [0.00021374049538280815, 0.36520272493362427, 0.16061292588710785, 0.0014484524726867676, 0.2120504081249237, 0.048028115183115005, 0.026025252416729927, 0.0009452994563616812, 4.47519269073382e-05, 5.3353956900537014e-05, 0.1487448513507843, 0.0032868965063244104, 0.0015160990878939629, 0.000404101621825248, 0.018755396828055382, 0.0025185735430568457, 0.00026753335259854794, 0.004394238349050283, 2.3812557628843933e-05, 0.0037349474150687456, 0.0005954414955340326, 0.0011331208515912294], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 14:19:27.396763", "n_pass": [211, 32, 20], "n_token": 50, "loss": [0.733970046043396, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def post(", "self", "request", "project_id", ",", "usergroup_id", "#INDENT#", "'\\n        Updates the user group based on the data entered by the user.\\n\\n        Parameter\\n        ---------\\n        request : django.http.HttpRequest\\n            Object representing the request\\n        project_id : int\\n            Identifies the project in the database\\n        usergroup_id : int\\n            Identifies the user group in the database\\n\\n        Returns\\n        -------\\n        django.http.HttpResponse\\n            Rendered template when user group updated\\n        django.http.HttpResponse\\n            Rendered template, if project or user group does not exist\\n        '", "#NEWLINE#", "data", "=", "request", "context", "=", "self", ".", "get_context_data", "(", "project_id", ",", "usergroup_id", ")", "#NEWLINE#", "usergroup", "=", "context", ".", "usergroup", ":", "#NEWLINE#", "#INDENT#", "usergroup", ".", "(", "data", ".", "usergroup", ".", "description", "data", ".", "usergroup", "self", ".", "request", "self", ".", "context", ")"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [13, 26, 48, 2, 15, 43, 46, 24, 28, 32, 37, 42, 6, 21, 3, 12, 45, 4, 19, 10, 35, 40]}}
{"prediction": {"error_location": 0.4799996316432953, "repair_targets": [], "repair_candidates": [0.00024350453168153763, 0.7262582778930664, 0.04839939996600151, 0.0002460124669596553, 0.008124120533466339, 0.020222313702106476, 0.04203733429312706, 0.0005046474398113787, 1.0955785910482518e-05, 1.872558641480282e-05, 0.1463412195444107, 0.0009424323216080666, 0.00041470129508525133, 0.00012477113341446966, 0.0021096544805914164, 0.0007898931507952511, 4.759167131851427e-05, 0.001480552600696683, 7.396107776003191e-06, 0.0012124174972996116, 0.0001412812271155417, 0.0003227932611480355], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 14:19:27.471870", "n_pass": [212, 33, 21], "n_token": 49, "loss": [0.8220534324645996, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def post(", "self", "request", "project_id", ",", "usergroup_id", "'\\n        Updates the user group based on the data entered by the user.\\n\\n        Parameter\\n        ---------\\n        request : django.http.HttpRequest\\n            Object representing the request\\n        project_id : int\\n            Identifies the project in the database\\n        usergroup_id : int\\n            Identifies the user group in the database\\n\\n        Returns\\n        -------\\n        django.http.HttpResponse\\n            Rendered template when user group updated\\n        django.http.HttpResponse\\n            Rendered template, if project or user group does not exist\\n        '", "#NEWLINE#", "data", "=", "request", "context", "=", "self", ".", "get_context_data", "(", "project_id", ",", "usergroup_id", ")", "#NEWLINE#", "usergroup", "=", "context", ".", "usergroup", ":", "#NEWLINE#", "#INDENT#", "usergroup", ".", "(", "data", ".", "usergroup", ".", "description", "data", ".", "usergroup", "self", ".", "request", "self", ".", "context", ")"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [12, 25, 47, 2, 14, 42, 45, 23, 27, 31, 36, 41, 6, 20, 3, 11, 44, 4, 18, 9, 34, 39]}}
{"prediction": {"error_location": 0.43952813744544983, "repair_targets": [], "repair_candidates": [0.00022740091662853956, 0.6400701403617859, 0.05092677101492882, 0.00022064807126298547, 0.08238391578197479, 0.04591227322816849, 0.021691229194402695, 0.0005920151597820222, 1.9205983335268684e-05, 3.9788097637938336e-05, 0.13912521302700043, 0.001621070085093379, 0.0009796279482543468, 0.00024221274361480027, 0.009283630177378654, 0.0011151507496833801, 0.00011604737665038556, 0.003090049372985959, 1.0527212907618377e-05, 0.0016732397489249706, 0.00019408644584473222, 0.0004657874524127692], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 14:19:27.547245", "n_pass": [213, 34, 22], "n_token": 48, "loss": [1.1775749921798706, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def post(", "self", "request", "project_id", ",", "usergroup_id", "#NEWLINE#", "data", "=", "request", "context", "=", "self", ".", "get_context_data", "(", "project_id", ",", "usergroup_id", ")", "#NEWLINE#", "usergroup", "=", "context", ".", "usergroup", ":", "#NEWLINE#", "#INDENT#", "usergroup", ".", "(", "data", ".", "usergroup", ".", "description", "data", ".", "usergroup", "self", ".", "request", "self", ".", "context", ")"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [11, 24, 46, 2, 13, 41, 44, 22, 26, 30, 35, 40, 6, 19, 3, 10, 43, 4, 17, 8, 33, 38]}}
{"prediction": {"error_location": 0.3080247938632965, "repair_targets": [], "repair_candidates": [0.00026312575209885836, 0.7955920696258545, 0.07156321406364441, 0.0016046137316152453, 0.04908822476863861, 0.012547336518764496, 0.006802606396377087, 0.0002306811511516571, 1.1590922440518625e-05, 2.802427115966566e-05, 0.04574884474277496, 0.0006961843464523554, 0.0007724297465756536, 0.00017400243086740375, 0.01017390750348568, 0.0010216133669018745, 0.00011973059008596465, 0.0021220874041318893, 6.5746598920668475e-06, 0.0010414818534627557, 9.302760736318305e-05, 0.00029875969630666077], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 14:19:27.911291", "n_pass": [227, 39, 23], "n_token": 46, "loss": [0.7032774686813354, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def post(", "self", "request", "project_id", ",", "usergroup_id", "#NEWLINE#", "data", "=", "request", "context", "=", "self", ".", "get_context_data", "(", "project_id", ",", "usergroup_id", ")", "#NEWLINE#", "usergroup", "=", "context", ".", "usergroup", ":", "usergroup", ".", "(", "data", ".", "usergroup", ".", "description", "data", ".", "usergroup", "self", ".", "request", "self", ".", "context", ")"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [11, 24, 44, 2, 13, 39, 42, 22, 26, 28, 33, 38, 6, 19, 3, 10, 41, 4, 17, 8, 31, 36]}}
{"prediction": {"error_location": 0.4949604868888855, "repair_targets": [], "repair_candidates": [0.00019288128532934934, 0.6353294253349304, 0.04773452877998352, 0.0004179665120318532, 0.0021994884591549635, 0.006393250543624163, 0.004193481523543596, 8.201529271900654e-05, 6.4567502704449e-06, 1.991016870306339e-05, 0.294183611869812, 0.0006991422851569951, 0.0010705060558393598, 0.0001336117129540071, 0.0024369985330849886, 0.000713884481228888, 5.307144965627231e-05, 0.002402097685262561, 6.275709893088788e-06, 0.0013837070437148213, 7.841119077056646e-05, 0.00026924238773062825], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 14:19:27.983122", "n_pass": [231, 40, 24], "n_token": 44, "loss": [0.7814818024635315, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def post(", "self", "request", "project_id", ",", "usergroup_id", "#NEWLINE#", "data", "=", "request", "context", "=", "self", ".", "get_context_data", "(", "project_id", ",", "usergroup_id", ")", "#NEWLINE#", "usergroup", "=", "context", ".", "usergroup", ":", "usergroup", ".", "(", "data", ".", "usergroup", "data", ".", "usergroup", "self", ".", "request", "self", ".", "context", ")"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [11, 24, 42, 2, 13, 37, 40, 22, 26, 28, 33, 36, 6, 19, 3, 10, 39, 4, 17, 8, 31, 34]}}
{"prediction": {"error_location": 0.45772725343704224, "repair_targets": [], "repair_candidates": [0.0001413240097463131, 0.48263952136039734, 0.04732109606266022, 0.000361512356903404, 0.004751804284751415, 0.0057145338505506516, 0.0032766833901405334, 6.228159327292815e-05, 6.544566076627234e-06, 1.9292298020445742e-05, 0.4460304081439972, 0.0011438525980338454, 0.0006585041410289705, 0.0002637056459207088, 0.0020263392943888903, 0.00046972656855359674, 2.6983918360201642e-05, 0.0027260056231170893, 6.8136814661556855e-06, 0.0020764064975082874, 7.443453068844974e-05, 0.0002022728876909241], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 14:19:28.338385", "n_pass": [250, 45, 25], "n_token": 42, "loss": [0.8086404800415039, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def post(", "self", "request", "project_id", ",", "usergroup_id", "#NEWLINE#", "data", "=", "request", "context", "=", "self", "(", "project_id", ",", "usergroup_id", ")", "#NEWLINE#", "usergroup", "=", "context", ".", "usergroup", ":", "usergroup", ".", "(", "data", ".", "usergroup", "data", ".", "usergroup", "self", ".", "request", "self", ".", "context", ")"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [11, 22, 40, 2, 13, 35, 38, 20, 24, 26, 31, 34, 6, 17, 3, 10, 37, 4, 15, 8, 29, 32]}}
{"prediction": {"error_location": 0.44546326994895935, "repair_targets": [], "repair_candidates": [3.3795546187320724e-05, 0.008955325931310654, 0.08920738846063614, 0.0014102633576840162, 0.17253559827804565, 0.00285405945032835, 0.001627447665669024, 0.0004954440519213676, 2.0194065655232407e-05, 6.778653187211603e-05, 0.6845019459724426, 0.0017840842483565211, 0.0036018462851643562, 0.0009700757800601423, 0.009097570553421974, 0.0018098073778674006, 7.616075163241476e-05, 0.012108671478927135, 1.9873061319231056e-05, 0.007986812852323055, 0.00020512928313110024, 0.000630679540336132], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 14:19:28.478102", "n_pass": [266, 47, 26], "n_token": 41, "loss": [0.8383643627166748, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "self", "request", "project_id", ",", "usergroup_id", "#NEWLINE#", "data", "=", "request", "context", "=", "self", "(", "project_id", ",", "usergroup_id", ")", "#NEWLINE#", "usergroup", "=", "context", ".", "usergroup", ":", "usergroup", ".", "(", "data", ".", "usergroup", "data", ".", "usergroup", "self", ".", "request", "self", ".", "context", ")"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [10, 21, 39, 1, 12, 34, 37, 19, 23, 25, 30, 33, 5, 16, 2, 9, 36, 3, 14, 7, 28, 31]}}
{"prediction": {"error_location": 0.43241727352142334, "repair_targets": [], "repair_candidates": [0.0002369817957514897, 0.018631670624017715, 0.12876728177070618, 0.0017240439774468541, 0.15672820806503296, 0.004655191674828529, 0.0036551011726260185, 0.0008690203540027142, 2.2517724573845044e-05, 4.366644861875102e-05, 0.6499255895614624, 0.0020518722012639046, 0.0038191559724509716, 0.0008674545679241419, 0.007865652441978455, 0.0012895030668005347, 4.2718871554825455e-05, 0.011319028213620186, 1.5625517335138284e-05, 0.006962985266000032, 0.0001373296690871939, 0.00036935057141818106], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 14:19:28.618935", "n_pass": [272, 49, 27], "n_token": 40, "loss": [0.6387388706207275, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "self", "request", "project_id", ",", "usergroup_id", "data", "=", "request", "context", "=", "self", "(", "project_id", ",", "usergroup_id", ")", "#NEWLINE#", "usergroup", "=", "context", ".", "usergroup", ":", "usergroup", ".", "(", "data", ".", "usergroup", "data", ".", "usergroup", "self", ".", "request", "self", ".", "context", ")"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [9, 20, 38, 1, 11, 33, 36, 18, 22, 24, 29, 32, 5, 15, 2, 8, 35, 3, 13, 6, 27, 30]}}
{"prediction": {"error_location": 0.5279578566551208, "repair_targets": [], "repair_candidates": [0.0003019436844624579, 0.054626237601041794, 0.05210776627063751, 0.02701598033308983, 0.3227023184299469, 0.002200688701122999, 0.0011689843377098441, 0.0006402861326932907, 1.7595037206774577e-05, 2.140195829269942e-05, 0.5154344439506531, 0.0015755160711705685, 0.0014738417230546474, 0.0004674336523748934, 0.0011071943445131183, 0.0009189842385239899, 2.4767134163994342e-05, 0.00959697924554348, 2.245497853436973e-05, 0.008076703175902367, 0.00019166304264217615, 0.00030681517091579735], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 14:19:28.827896", "n_pass": [296, 52, 28], "n_token": 39, "loss": [0.9710818529129028, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "self", "request", "project_id", "usergroup_id", "data", "=", "request", "context", "=", "self", "(", "project_id", ",", "usergroup_id", ")", "#NEWLINE#", "usergroup", "=", "context", ".", "usergroup", ":", "usergroup", ".", "(", "data", ".", "usergroup", "data", ".", "usergroup", "self", ".", "request", "self", ".", "context", ")"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [8, 19, 37, 1, 10, 32, 35, 17, 21, 23, 28, 31, 4, 14, 2, 7, 34, 3, 12, 5, 26, 29]}}
{"prediction": {"error_location": 0.37867316603660583, "repair_targets": [], "repair_candidates": [0.0006532659172080457, 0.15043680369853973, 0.01597328670322895, 0.010494567453861237, 0.4493944048881531, 0.00491776317358017, 0.005034648813307285, 0.0013565287226811051, 9.625872735341545e-06, 2.6780846383189783e-05, 0.337129682302475, 0.0019129320280626416, 0.002493137726560235, 0.0005584224709309638, 0.003306211205199361, 0.0008992628427222371, 3.992492929683067e-05, 0.0077016279101371765, 2.1718424250138924e-05, 0.007150603923946619, 0.00018493559036869556, 0.00030393380438908935], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 14:19:29.104700", "n_pass": [353, 56, 29], "n_token": 38, "loss": [0.3721776008605957, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "self", "request", "project_id", "usergroup_id", "data", "=", "request", "context", "=", "self", "project_id", ",", "usergroup_id", ")", "#NEWLINE#", "usergroup", "=", "context", ".", "usergroup", ":", "usergroup", ".", "(", "data", ".", "usergroup", "data", ".", "usergroup", "self", ".", "request", "self", ".", "context", ")"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [8, 18, 36, 1, 10, 31, 34, 16, 20, 22, 27, 30, 4, 13, 2, 7, 33, 3, 11, 5, 25, 28]}}
{"prediction": {"error_location": 0.6892317533493042, "repair_targets": [], "repair_candidates": [0.00012271659215912223, 0.006020226050168276, 0.015950901433825493, 0.008679867722094059, 0.09882232546806335, 0.0012128996895626187, 0.014388425275683403, 0.0020302576012909412, 4.541679300018586e-05, 5.0374223064864054e-05, 0.8258092403411865, 0.005234056152403355, 0.0024430514313280582, 0.0005868081352673471, 0.0007422149647027254, 0.00045454432256519794, 2.2330883439281024e-05, 0.009248293936252594, 2.259385473735165e-05, 0.007783751934766769, 0.00014296243898570538, 0.0001867054816102609], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 14:19:29.172767", "n_pass": [354, 57, 30], "n_token": 37, "loss": [0.7526212334632874, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "self", "request", "project_id", "usergroup_id", "data", "=", "request", "context", "=", "self", "project_id", "usergroup_id", ")", "#NEWLINE#", "usergroup", "=", "context", ".", "usergroup", ":", "usergroup", ".", "(", "data", ".", "usergroup", "data", ".", "usergroup", "self", ".", "request", "self", ".", "context", ")"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [8, 17, 35, 1, 10, 30, 33, 15, 19, 21, 26, 29, 4, 12, 2, 7, 32, 3, 11, 5, 24, 27]}}
{"prediction": {"error_location": 0.47113004326820374, "repair_targets": [], "repair_candidates": [6.956442666705698e-05, 0.0030937253031879663, 0.04218978062272072, 0.08844675868749619, 0.4239512085914612, 0.0007386111537925899, 0.009809036739170551, 0.0004982887767255306, 1.3928723092249129e-05, 1.5080992852745112e-05, 0.4147675335407257, 0.0014591303188353777, 0.0007023118669167161, 0.0005254870629869401, 0.0015862624859437346, 0.00046976213343441486, 2.0731540644192137e-05, 0.005524247884750366, 1.1962893040617928e-05, 0.005891342181712389, 7.605967402923852e-05, 0.00013914603914599866], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 14:19:29.240533", "n_pass": [356, 58, 31], "n_token": 36, "loss": [0.7538354396820068, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "self", "request", "project_id", "usergroup_id", "data", "=", "request", "context", "=", "self", "project_id", "usergroup_id", "#NEWLINE#", "usergroup", "=", "context", ".", "usergroup", ":", "usergroup", ".", "(", "data", ".", "usergroup", "data", ".", "usergroup", "self", ".", "request", "self", ".", "context", ")"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [8, 16, 34, 1, 10, 29, 32, 14, 18, 20, 25, 28, 4, 12, 2, 7, 31, 3, 11, 5, 23, 26]}}
{"prediction": {"error_location": 0.4705582857131958, "repair_targets": [], "repair_candidates": [7.438803731929511e-05, 0.0047559067606925964, 0.07234454900026321, 0.11857667565345764, 0.406583309173584, 0.0011359845520928502, 0.023758696392178535, 0.000776764762122184, 1.8506972992327064e-05, 5.10518038936425e-05, 0.3564152121543884, 0.0022755591198801994, 0.0004588578303810209, 0.0004804793279618025, 0.0005306480452418327, 0.00039142518653534353, 1.6324795069522224e-05, 0.005507722496986389, 1.1555519449757412e-05, 0.005614477675408125, 6.984285573707893e-05, 0.00015206010721158236], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 14:19:29.373554", "n_pass": [359, 60, 32], "n_token": 35, "loss": [0.7368135452270508, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "self", "request", "project_id", "usergroup_id", "data", "=", "request", "context", "=", "self", "project_id", "usergroup_id", "#NEWLINE#", "usergroup", "context", ".", "usergroup", ":", "usergroup", ".", "(", "data", ".", "usergroup", "data", ".", "usergroup", "self", ".", "request", "self", ".", "context", ")"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [8, 15, 33, 1, 10, 28, 31, 14, 17, 19, 24, 27, 4, 12, 2, 7, 30, 3, 11, 5, 22, 25]}}
{"prediction": {"error_location": 0.4786367118358612, "repair_targets": [], "repair_candidates": [0.00010291652870364487, 0.0069565619342029095, 0.06655774265527725, 0.09750550240278244, 0.4305463433265686, 0.0013692737556993961, 0.021509384736418724, 0.0007033772417344153, 2.122628029610496e-05, 3.411082798265852e-05, 0.24505916237831116, 0.10684949904680252, 0.0032170836348086596, 0.0008625753107480705, 0.00643282663077116, 0.00048796850023791194, 2.8133879823144525e-05, 0.0049413880333304405, 1.748448994476348e-05, 0.00633747223764658, 0.0003232563321944326, 0.00013671971100848168], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 14:19:29.440432", "n_pass": [361, 61, 33], "n_token": 34, "loss": [0.5681412220001221, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "self", "request", "project_id", "usergroup_id", "data", "=", "request", "context", "=", "self", "project_id", "usergroup_id", "#NEWLINE#", "usergroup", "context", "usergroup", ":", "usergroup", ".", "(", "data", ".", "usergroup", "data", ".", "usergroup", "self", ".", "request", "self", ".", "context", ")"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [8, 15, 32, 1, 10, 27, 30, 14, 16, 18, 23, 26, 4, 12, 2, 7, 29, 3, 11, 5, 21, 24]}}
{"prediction": {"error_location": 0.5665775537490845, "repair_targets": [], "repair_candidates": [0.00020922190742567182, 0.004970190580934286, 0.1093686893582344, 0.22438523173332214, 0.4575590193271637, 0.0025121206417679787, 0.05003337934613228, 0.0016715412493795156, 4.312053351895884e-05, 5.113740553497337e-05, 0.032347116619348526, 0.028628956526517868, 0.0004671723290812224, 0.002202424453571439, 0.049707427620887756, 0.0016223816201090813, 0.00010801367898238823, 0.012769528664648533, 5.015668284613639e-05, 0.019976628944277763, 0.0009536593570373952, 0.00036282624932937324], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 14:19:29.508818", "n_pass": [363, 62, 34], "n_token": 33, "loss": [0.7088324427604675, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "self", "request", "project_id", "usergroup_id", "data", "=", "request", "context", "=", "self", "project_id", "usergroup_id", "#NEWLINE#", "usergroup", "context", "usergroup", "usergroup", ".", "(", "data", ".", "usergroup", "data", ".", "usergroup", "self", ".", "request", "self", ".", "context", ")"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [8, 15, 31, 1, 10, 26, 29, 14, 16, 17, 22, 25, 4, 12, 2, 7, 28, 3, 11, 5, 20, 23]}}
{"prediction": {"error_location": 0.492218554019928, "repair_targets": [], "repair_candidates": [0.00014174828538671136, 0.005352061241865158, 0.0945606529712677, 0.17274488508701324, 0.5988467931747437, 0.0013936429750174284, 0.019013354554772377, 0.0008555824169889092, 2.1344963897718117e-05, 2.3722970581729896e-05, 0.014362881891429424, 0.01591012440621853, 0.0047218287363648415, 0.0024844706058502197, 0.053803667426109314, 0.0017640793230384588, 8.213266119128093e-05, 0.005264190956950188, 1.4342663234856445e-05, 0.008252211846411228, 0.00024029373889788985, 0.00014588693738915026], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 14:19:29.574344", "n_pass": [365, 63, 35], "n_token": 32, "loss": [0.7562161684036255, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "self", "request", "project_id", "usergroup_id", "data", "=", "request", "context", "=", "self", "project_id", "usergroup_id", "#NEWLINE#", "usergroup", "context", "usergroup", "usergroup", "(", "data", ".", "usergroup", "data", ".", "usergroup", "self", ".", "request", "self", ".", "context", ")"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [8, 15, 30, 1, 10, 25, 28, 14, 16, 17, 21, 24, 4, 12, 2, 7, 27, 3, 11, 5, 19, 22]}}
{"prediction": {"error_location": 0.46943941712379456, "repair_targets": [], "repair_candidates": [0.0001660356647334993, 0.007720279041677713, 0.09222634881734848, 0.16869854927062988, 0.637133002281189, 0.002462510485202074, 0.04905105382204056, 0.001782574807293713, 2.8933462090208195e-05, 3.1878575100563467e-05, 0.006968208588659763, 0.0018822049023583531, 0.00023040790983941406, 0.0048800245858728886, 0.010500069707632065, 0.002241807756945491, 0.00012015688844257966, 0.00628576148301363, 1.8885231838794425e-05, 0.007151274010539055, 0.00028846977511420846, 0.00013152803876437247], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 14:19:29.639478", "n_pass": [366, 64, 36], "n_token": 31, "loss": [0.4977805018424988, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "self", "request", "project_id", "usergroup_id", "data", "=", "request", "context", "=", "self", "project_id", "usergroup_id", "#NEWLINE#", "usergroup", "context", "usergroup", "usergroup", "data", ".", "usergroup", "data", ".", "usergroup", "self", ".", "request", "self", ".", "context", ")"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [8, 15, 29, 1, 10, 24, 27, 14, 16, 17, 20, 23, 4, 12, 2, 7, 26, 3, 11, 5, 18, 21]}}
{"prediction": {"error_location": 0.6078783273696899, "repair_targets": [], "repair_candidates": [0.00027489179046824574, 0.01606747694313526, 0.1409764140844345, 0.17374099791049957, 0.5240921974182129, 0.003985085058957338, 0.08045279234647751, 0.002726705279201269, 3.8038877391954884e-05, 3.4027110814349726e-05, 0.010218936018645763, 0.007014502305537462, 0.0004371466056909412, 0.002661827253177762, 0.011049369350075722, 0.003484969260171056, 0.00016702027642168105, 0.01131898071616888, 3.106274380115792e-05, 0.010509994812309742, 0.0005100721027702093, 0.000207503791898489], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 14:19:29.832674", "n_pass": [374, 67, 37], "n_token": 30, "loss": [0.7733956575393677, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "self", "request", "project_id", "usergroup_id", "data", "=", "request", "context", "=", "self", "project_id", "usergroup_id", "#NEWLINE#", "usergroup", "context", "usergroup", "usergroup", "data", ".", "usergroup", "data", ".", "usergroup", "self", "request", "self", ".", "context", ")"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [8, 15, 28, 1, 10, 24, 26, 14, 16, 17, 20, 23, 4, 12, 2, 7, 25, 3, 11, 5, 18, 21]}}
{"prediction": {"error_location": 0.4614434540271759, "repair_targets": [], "repair_candidates": [0.00030822091503068805, 0.028882207348942757, 0.10105447471141815, 0.12049968540668488, 0.34959280490875244, 0.003941686823964119, 0.056586578488349915, 0.0013480547349900007, 3.3828706364147365e-05, 3.0889077606843784e-05, 0.03149416297674179, 0.05775380879640579, 0.018904440104961395, 0.09590896964073181, 0.11857819557189941, 0.012931585311889648, 0.00022884682402946055, 0.001047038473188877, 3.4458596928743646e-05, 0.00013286703324411064, 0.00017541593115311116, 0.00053180888062343], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 14:19:30.026918", "n_pass": [386, 70, 38], "n_token": 29, "loss": [0.810546338558197, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "self", "request", "project_id", "usergroup_id", "data", "request", "context", "=", "self", "project_id", "usergroup_id", "#NEWLINE#", "usergroup", "context", "usergroup", "usergroup", "data", ".", "usergroup", "data", ".", "usergroup", "self", "request", "self", ".", "context", ")"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [7, 14, 27, 1, 9, 23, 25, 13, 15, 16, 19, 22, 4, 11, 2, 6, 24, 3, 10, 5, 17, 20]}}
{"prediction": {"error_location": 0.44461509585380554, "repair_targets": [], "repair_candidates": [0.0002633867261465639, 0.023107318207621574, 0.05145778879523277, 0.0012194509617984295, 0.0004963952233083546, 0.005849748849868774, 0.8408148288726807, 0.0012911268277093768, 2.653053161338903e-05, 3.7643640098394826e-05, 0.0185849592089653, 0.02692696638405323, 0.008845104835927486, 0.009554549120366573, 0.007897214032709599, 0.0028301109559834003, 0.00013641160330735147, 0.000338216545060277, 1.4637375898018945e-05, 2.990033863170538e-05, 3.1442512408830225e-05, 0.0002460887480992824], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 14:19:30.090275", "n_pass": [389, 71, 39], "n_token": 28, "loss": [0.738967776298523, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "self", "request", "project_id", "usergroup_id", "data", "request", "context", "self", "project_id", "usergroup_id", "#NEWLINE#", "usergroup", "context", "usergroup", "usergroup", "data", ".", "usergroup", "data", ".", "usergroup", "self", "request", "self", ".", "context", ")"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [7, 13, 26, 1, 8, 22, 24, 12, 14, 15, 18, 21, 4, 10, 2, 6, 23, 3, 9, 5, 16, 19]}}
{"prediction": {"error_location": 0.47760671377182007, "repair_targets": [], "repair_candidates": [0.0013991916785016656, 0.4599108397960663, 0.22212131321430206, 0.0030587499495595694, 0.000572892720811069, 0.0005378671339713037, 0.019168928265571594, 0.009206421673297882, 0.0002582919842097908, 0.0003330912149976939, 0.07878946512937546, 0.13035239279270172, 0.033721134066581726, 0.019619064405560493, 0.013915486633777618, 0.005356251262128353, 0.0002195656270487234, 0.0007131125312298536, 3.1412877433467656e-05, 9.767103620106354e-05, 8.981784776551649e-05, 0.0005269635585136712], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 14:19:30.153222", "n_pass": [393, 72, 40], "n_token": 27, "loss": [1.008500099182129, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "self", "request", "project_id", "usergroup_id", "data", "request", "context", "self", "project_id", "usergroup_id", "usergroup", "context", "usergroup", "usergroup", "data", ".", "usergroup", "data", ".", "usergroup", "self", "request", "self", ".", "context", ")"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [7, 12, 25, 1, 8, 21, 23, 11, 13, 14, 17, 20, 4, 10, 2, 6, 22, 3, 9, 5, 15, 18]}}
{"prediction": {"error_location": 0.3647657036781311, "repair_targets": [], "repair_candidates": [0.00229067075997591, 0.5400755405426025, 0.1566743701696396, 0.002817576751112938, 0.0007915488677099347, 0.0014746253145858645, 0.05426531657576561, 0.010088139213621616, 0.000350552931195125, 0.0006350987823680043, 0.009413919411599636, 0.02775990590453148, 0.05632494390010834, 0.07807508111000061, 0.047108668833971024, 0.009858019649982452, 0.00038217747351154685, 0.000904733082279563, 3.480965460767038e-05, 9.343457350041717e-05, 6.639020284637809e-05, 0.0005145080504007638], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 14:19:30.217187", "n_pass": [399, 73, 41], "n_token": 26, "loss": [0.5334988832473755, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "self", "request", "project_id", "usergroup_id", "data", "request", "context", "self", "project_id", "usergroup_id", "usergroup", "context", "usergroup", "usergroup", "data", "usergroup", "data", ".", "usergroup", "self", "request", "self", ".", "context", ")"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [7, 12, 24, 1, 8, 20, 22, 11, 13, 14, 16, 19, 4, 10, 2, 6, 21, 3, 9, 5, 15, 17]}}
{"prediction": {"error_location": 0.5865491032600403, "repair_targets": [], "repair_candidates": [0.0023248735815286636, 0.6361991763114929, 0.23827898502349854, 0.0048030889593064785, 0.0006888264324516058, 0.0008914434583857656, 0.03363283351063728, 0.005488920956850052, 0.0004962410312145948, 0.000549395103007555, 0.0017040831735357642, 0.002973448019474745, 0.006980423349887133, 0.023369239643216133, 0.028520449995994568, 0.006113594863563776, 0.001908511738292873, 0.004150248598307371, 0.00011213491234229878, 0.00027475401293486357, 0.0001451009011361748, 0.0003941912727896124], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 14:19:30.340482", "n_pass": [407, 75, 42], "n_token": 25, "loss": [0.6508871912956238, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "self", "request", "project_id", "usergroup_id", "data", "request", "context", "self", "project_id", "usergroup_id", "usergroup", "context", "usergroup", "usergroup", "data", "usergroup", "data", ".", "usergroup", "self", "request", "self", "context", ")"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [7, 12, 23, 1, 8, 20, 22, 11, 13, 14, 16, 19, 4, 10, 2, 6, 21, 3, 9, 5, 15, 17]}}
{"prediction": {"error_location": 0.5215829014778137, "repair_targets": [], "repair_candidates": [0.0012067066272720695, 0.3986266255378723, 0.06913473457098007, 0.002240583999082446, 0.0003175960446242243, 0.0003532132541295141, 0.0103982612490654, 0.0012515215203166008, 0.00025612718309275806, 0.0002690943656489253, 0.001148938899859786, 0.002089443849399686, 0.007029205560684204, 0.07588790357112885, 0.35711997747421265, 0.06209225952625275, 0.007783419918268919, 0.002663323190063238, 2.1889793060836382e-05, 3.683913018903695e-05, 6.384339212672785e-05, 8.446842912235297e-06], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 14:19:30.401787", "n_pass": [409, 76, 43], "n_token": 24, "loss": [0.8233559131622314, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "self", "request", "project_id", "usergroup_id", "data", "request", "context", "self", "project_id", "usergroup_id", "usergroup", "context", "usergroup", "usergroup", "data", "usergroup", "data", ".", "usergroup", "self", "request", "self", "context"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [7, 12, 23, 1, 8, 20, 22, 11, 13, 14, 16, 19, 4, 10, 2, 6, 21, 3, 9, 5, 15, 17]}}
{"prediction": {"error_location": 0.43895605206489563, "repair_targets": [], "repair_candidates": [0.0004477358306758106, 0.14015834033489227, 0.01672893576323986, 0.0005957154207862914, 8.814583998173475e-05, 0.00016264595615211874, 0.005372714716941118, 0.0006347338203340769, 0.00010955644393106923, 0.00013323720486368984, 0.0006572522688657045, 0.0021079147700220346, 0.010674373246729374, 0.15949365496635437, 0.5899439454078674, 0.06455531716346741, 0.007466895040124655, 0.0006332563934847713, 5.84418876314885e-06, 8.747434549150057e-06, 1.7631822629482485e-05, 3.319828465464525e-06], "target_probs": 0.0}}




Minimal simplified tokens:

['#NEWLINE#', 'self', 'request', 'project_id', 'usergroup_id', 'data', 'request', 'context', 'self', 'project_id', 'usergroup_id', 'usergroup', 'context', 'usergroup', 'usergroup', 'data', 'usergroup', 'data', '.', 'usergroup', 'self', 'request', 'self', 'context']
