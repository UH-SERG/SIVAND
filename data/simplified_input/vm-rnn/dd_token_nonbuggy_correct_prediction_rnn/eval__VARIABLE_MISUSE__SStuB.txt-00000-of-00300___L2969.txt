
Original sample:

{"has_bug": false, "bug_kind": 0, "bug_kind_name": "NONE", "source_tokens": ["#NEWLINE#", "def testForRegression(", "self", ")", ":", "#NEWLINE#", "#INDENT#", "\"Checks whether there's a regression.\"", "#NEWLINE#", "self", ".", "maxDiff", "=", "65536", "#NEWLINE#", "with", "open", "(", "os", ".", "path", ".", "join", "(", "DOCUMENT_ROOT", ",", "'angular-components/docs/api-docs-examples.json'", ")", ")", "as", "fd", ":", "#NEWLINE#", "#INDENT#", "prev_data", "=", "json", ".", "load", "(", "fd", ")", "#NEWLINE#", "#UNINDENT#", "checks", "=", "prev_data", "[", "self", ".", "handler", "]", "#NEWLINE#", "relevant_checks", "=", "[", "]", "#NEWLINE#", "for", "check", "in", "checks", ":", "#NEWLINE#", "#INDENT#", "if", "(", "check", "[", "'test_class'", "]", "==", "self", ".", "__class__", ".", "__name__", ")", ":", "#NEWLINE#", "#INDENT#", "relevant_checks", ".", "append", "(", "check", ")", "#NEWLINE#", "#UNINDENT#", "#UNINDENT#", "self", ".", "Run", "(", ")", "#NEWLINE#", "self", ".", "assertTrue", "(", "self", ".", "checks", ")", "#NEWLINE#", "checks_str", "=", "json", ".", "dumps", "(", "self", ".", "checks", ",", "indent", "=", "2", ",", "sort_keys", "=", "True", ",", "separators", "=", "(", "','", ",", "': '", ")", ")", "#NEWLINE#", "prev_checks_str", "=", "json", ".", "dumps", "(", "relevant_checks", ",", "indent", "=", "2", ",", "sort_keys", "=", "True", ",", "separators", "=", "(", "','", ",", "': '", ")", ")", "#NEWLINE#", "self", ".", "assertMultiLineEqual", "(", "prev_checks_str", ",", "checks_str", ")"], "error_location": [0], "repair_targets": [], "repair_candidates": [34, 46, 59, 67, 85, 44, 61, 102, 113, 105, 163, 30, 40, 2, 9, 48, 72, 90, 96, 100, 111, 157, 132, 161, 53, 81, 138], "provenances": [{"datasetProvenance": {"datasetName": "ETHPy150Open", "filepath": "google/grr/grr/gui/api_test_lib.py", "license": "apache-2.0", "note": "license: bigquery_api"}}], "txt_file": "eval__VARIABLE_MISUSE__SStuB.txt-00000-of-00300", "js_count": 2969, "results": {"model": "rnn", "prob": {"loc": [[0.8114991784095764, 1.8150186633647536e-06, 2.194025000790134e-06, 2.5673936310255385e-09, 2.166659962554718e-09, 8.746729207587123e-08, 5.341987829865502e-08, 1.224198381555297e-10, 2.9009553870196214e-08, 7.823442871313091e-08, 3.922139502066102e-09, 6.888787140724162e-08, 6.849520417517851e-08, 4.704680577560794e-06, 9.432968539613285e-08, 1.3976267254633967e-08, 1.7729981038883125e-07, 1.7360558546286597e-09, 9.23772631722386e-08, 8.013091523650928e-09, 1.5352911830746052e-08, 3.410164239880942e-08, 3.4511391078240194e-08, 2.108264283151584e-07, 4.365141649032012e-06, 5.2208362077976744e-09, 6.506417804530429e-08, 5.927020296780938e-08, 2.3331809373416945e-08, 2.3298312953556888e-05, 5.51829032247042e-07, 1.9404947693146823e-07, 3.971941623603925e-06, 5.073479769635014e-08, 3.9841631860326743e-07, 2.107398877626565e-08, 9.160083891401882e-07, 8.345260482656158e-09, 3.60490979289807e-08, 4.558255113806808e-06, 0.0008141008438542485, 2.8053133860339585e-07, 3.511166255520948e-07, 3.2008867947297404e-06, 1.0995072585728849e-07, 7.752898056878621e-08, 0.01833445020020008, 3.0021196639751224e-09, 0.0004992299363948405, 2.131398524340966e-08, 4.303072273614816e-06, 1.6417478931884943e-08, 6.483944758883808e-08, 7.081929425112321e-07, 6.738931460859021e-06, 1.3133842912793625e-05, 6.274663519434398e-06, 2.0765766748809256e-05, 1.0375296000120215e-07, 6.729256369908398e-07, 3.832955826510442e-06, 0.009368380531668663, 3.252918759244494e-06, 4.7015029736030556e-07, 5.721856837226369e-07, 5.284224613433253e-08, 9.79139372248028e-07, 0.007705642841756344, 1.6048458562067935e-08, 1.4374425916230393e-07, 6.510762773359602e-08, 8.595927880605814e-08, 0.00014758051838725805, 4.1116339843938476e-07, 1.9250203422416234e-06, 2.318550286872778e-06, 2.590503811461531e-08, 1.5372860673323885e-07, 4.4137223653706315e-07, 6.217778718564659e-07, 1.694026678933369e-07, 3.9478441067331005e-06, 8.593956408731174e-07, 5.754356102727343e-09, 1.9822760322085742e-08, 0.03572741895914078, 2.0677411782799027e-07, 1.1071494299130791e-07, 7.268425861184369e-07, 1.47795375937676e-07, 3.676604762858915e-07, 1.732947936261553e-07, 3.5361082950657874e-08, 5.66137941859779e-07, 7.921343240013812e-06, 4.621242339908349e-07, 6.251506334820078e-08, 1.3094574313754492e-08, 2.803457448408153e-07, 5.287524231789575e-07, 0.0033909485209733248, 6.559098864045154e-08, 2.58874194969394e-07, 1.8536313461936516e-07, 2.789445545658964e-07, 9.138170753431041e-08, 2.3599598364398844e-07, 1.3690644209418679e-06, 9.479023077574311e-08, 2.561177154802863e-07, 1.6747626432334073e-06, 0.00021913484670221806, 6.285737441658057e-08, 8.147582093442907e-07, 2.0657219010900008e-06, 1.1055304867113591e-06, 2.9040020876891504e-07, 2.8604990802705288e-05, 4.5596131315051025e-09, 3.3696155696816277e-06, 1.0004786190620507e-06, 4.821313723368803e-06, 9.1655368805732e-07, 1.0333250429539476e-05, 1.1018328471834593e-08, 9.068365898201591e-07, 2.0395274987095036e-05, 3.221283577659051e-07, 1.5706567637607804e-06, 2.5748515781742753e-06, 1.5775600559209124e-07, 3.016443486103526e-07, 1.1828536372604503e-07, 3.0506268444696616e-07, 1.2981079180462984e-06, 1.0751799095487513e-07, 1.1033444025088102e-07, 1.83994939106924e-06, 0.0011058906093239784, 2.2287947558652377e-06, 8.336398309438664e-07, 2.3496116341448214e-07, 2.110340392391663e-05, 2.6673256936504686e-09, 1.6723638509574812e-06, 5.580048423325934e-07, 6.569635843334254e-06, 6.834477517259074e-07, 6.106661658122903e-06, 3.931074576968285e-09, 4.528912711521116e-07, 6.136370757303666e-06, 1.1004598121644449e-07, 6.742766345269047e-07, 6.038092692506325e-07, 2.991455261280862e-08, 2.0292350200179499e-07, 5.582555786531884e-07, 1.7370407334738047e-08, 3.853653041119287e-08, 3.0855329669066123e-07, 0.021920889616012573, 2.0816953565372387e-06, 0.0889887884259224, 2.1941043542028638e-06]], "pointer": [[0.0, 0.0, 5.83774590268149e-06, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.1231695680180565e-05, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.024036170914769173, 0.0, 0.0, 0.0, 0.00784270465373993, 0.0, 0.0, 0.0, 0.0, 0.0, 0.00015758629888296127, 0.0, 0.0, 0.0, 0.021759824827313423, 0.0, 2.852263605745975e-05, 0.0, 4.347312278696336e-05, 0.0, 0.0, 0.0, 0.0, 0.0026330770924687386, 0.0, 0.0, 0.0, 0.0, 0.0, 0.10876186192035675, 0.0, 9.2343871074263e-06, 0.0, 0.0, 0.0, 0.0, 0.0, 0.004778679460287094, 0.0, 0.0, 0.0, 0.0, 0.00012663188681472093, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1394580453634262, 0.0, 0.0, 0.0, 2.1244264644337818e-05, 0.0, 0.0, 0.0, 0.0, 7.961158553371206e-05, 0.0, 0.0, 0.0, 0.0, 0.0, 8.044150490604807e-06, 0.0, 0.0, 0.0, 0.0015212638536468148, 0.0, 0.000209109450224787, 0.0, 0.0, 0.501924991607666, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0008799724164418876, 0.0, 0.0002205966884503141, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.18542073667049408, 0.0, 0.0, 0.0, 0.0, 0.0, 4.700381759903394e-05, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.6264025362033863e-06, 0.0, 0.0, 0.0, 1.8608443497214466e-06, 0.0, 1.0977051715599373e-05, 0.0]], "target": [0.0]}, "loss": [0.20887193083763123, 0.0], "acc": [1.0, 0.0, 0.0, 0.0]}}


Trace of simplified code(s):

{"result": {"time": "2021-02-11 14:33:14.833886", "n_pass": [1, 1, 1], "n_token": 165, "loss": [0.20887193083763123, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def testForRegression(", "self", ")", ":", "#NEWLINE#", "#INDENT#", "\"Checks whether there's a regression.\"", "#NEWLINE#", "self", ".", "maxDiff", "=", "65536", "#NEWLINE#", "with", "open", "(", "os", ".", "path", ".", "join", "(", "DOCUMENT_ROOT", ",", "'angular-components/docs/api-docs-examples.json'", ")", ")", "as", "fd", ":", "#NEWLINE#", "#INDENT#", "prev_data", "=", "json", ".", "load", "(", "fd", ")", "#NEWLINE#", "#UNINDENT#", "checks", "=", "prev_data", "[", "self", ".", "handler", "]", "#NEWLINE#", "relevant_checks", "=", "[", "]", "#NEWLINE#", "for", "check", "in", "checks", ":", "#NEWLINE#", "#INDENT#", "if", "(", "check", "[", "'test_class'", "]", "==", "self", ".", "__class__", ".", "__name__", ")", ":", "#NEWLINE#", "#INDENT#", "relevant_checks", ".", "append", "(", "check", ")", "#NEWLINE#", "#UNINDENT#", "#UNINDENT#", "self", ".", "Run", "(", ")", "#NEWLINE#", "self", ".", "assertTrue", "(", "self", ".", "checks", ")", "#NEWLINE#", "checks_str", "=", "json", ".", "dumps", "(", "self", ".", "checks", ",", "indent", "=", "2", ",", "sort_keys", "=", "True", ",", "separators", "=", "(", "','", ",", "': '", ")", ")", "#NEWLINE#", "prev_checks_str", "=", "json", ".", "dumps", "(", "relevant_checks", ",", "indent", "=", "2", ",", "sort_keys", "=", "True", ",", "separators", "=", "(", "','", ",", "': '", ")", ")", "#NEWLINE#", "self", ".", "assertMultiLineEqual", "(", "prev_checks_str", ",", "checks_str", ")"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [34, 46, 59, 67, 85, 44, 61, 102, 113, 105, 163, 30, 40, 2, 9, 48, 72, 90, 96, 100, 111, 157, 132, 161, 53, 81, 138]}}
{"prediction": {"error_location": 0.8114991784095764, "repair_targets": [], "repair_candidates": [5.83774590268149e-06, 1.1231695680180565e-05, 0.024036170914769173, 0.00784270465373993, 0.00015758629888296127, 0.021759824827313423, 2.852263605745975e-05, 4.347312278696336e-05, 0.0026330770924687386, 0.10876186192035675, 9.2343871074263e-06, 0.004778679460287094, 0.00012663188681472093, 0.1394580453634262, 2.1244264644337818e-05, 7.961158553371206e-05, 8.044150490604807e-06, 0.0015212638536468148, 0.000209109450224787, 0.501924991607666, 0.0008799724164418876, 0.0002205966884503141, 0.18542073667049408, 4.700381759903394e-05, 1.6264025362033863e-06, 1.8608443497214466e-06, 1.0977051715599373e-05], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 14:33:14.973927", "n_pass": [45, 2, 2], "n_token": 155, "loss": [0.2028316706418991, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def testForRegression(", "self", ")", ":", "#NEWLINE#", "#INDENT#", "\"Checks whether there's a regression.\"", "#NEWLINE#", "self", "path", ".", "join", "(", "DOCUMENT_ROOT", ",", "'angular-components/docs/api-docs-examples.json'", ")", ")", "as", "fd", ":", "#NEWLINE#", "#INDENT#", "prev_data", "=", "json", ".", "load", "(", "fd", ")", "#NEWLINE#", "#UNINDENT#", "checks", "=", "prev_data", "[", "self", ".", "handler", "]", "#NEWLINE#", "relevant_checks", "=", "[", "]", "#NEWLINE#", "for", "check", "in", "checks", ":", "#NEWLINE#", "#INDENT#", "if", "(", "check", "[", "'test_class'", "]", "==", "self", ".", "__class__", ".", "__name__", ")", ":", "#NEWLINE#", "#INDENT#", "relevant_checks", ".", "append", "(", "check", ")", "#NEWLINE#", "#UNINDENT#", "#UNINDENT#", "self", ".", "Run", "(", ")", "#NEWLINE#", "self", ".", "assertTrue", "(", "self", ".", "checks", ")", "#NEWLINE#", "checks_str", "=", "json", ".", "dumps", "(", "self", ".", "checks", ",", "indent", "=", "2", ",", "sort_keys", "=", "True", ",", "separators", "=", "(", "','", ",", "': '", ")", ")", "#NEWLINE#", "prev_checks_str", "=", "json", ".", "dumps", "(", "relevant_checks", ",", "indent", "=", "2", ",", "sort_keys", "=", "True", ",", "separators", "=", "(", "','", ",", "': '", ")", ")", "#NEWLINE#", "self", ".", "assertMultiLineEqual", "(", "prev_checks_str", ",", "checks_str", ")"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [24, 36, 49, 57, 75, 34, 51, 92, 103, 95, 153, 20, 30, 2, 9, 38, 62, 80, 86, 90, 101, 147, 122, 151, 43, 71, 128]}}
{"prediction": {"error_location": 0.8164156675338745, "repair_targets": [], "repair_candidates": [2.541741423556232e-06, 0.00041835953015834093, 0.011927058920264244, 0.004834405146539211, 0.00017310869588982314, 0.01964205875992775, 3.00802021229174e-05, 7.569340959889814e-05, 0.003698139451444149, 0.09539514780044556, 1.2165560292487498e-05, 0.0026747100055217743, 0.00014459923841059208, 0.12858790159225464, 2.3091197363100946e-05, 0.00016301775758620352, 1.4737325727764983e-05, 0.001374049810692668, 0.0002502149436622858, 0.5367805361747742, 0.0010854260763153434, 0.00021803683193866163, 0.19238556921482086, 7.156318315537646e-05, 2.2058172817196464e-06, 2.1409794044302544e-06, 1.3456380656862166e-05], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 14:33:15.103868", "n_pass": [46, 3, 3], "n_token": 145, "loss": [0.2357521802186966, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def testForRegression(", "self", ")", ":", "#NEWLINE#", "#INDENT#", "\"Checks whether there's a regression.\"", "#NEWLINE#", "self", "fd", ":", "#NEWLINE#", "#INDENT#", "prev_data", "=", "json", ".", "load", "(", "fd", ")", "#NEWLINE#", "#UNINDENT#", "checks", "=", "prev_data", "[", "self", ".", "handler", "]", "#NEWLINE#", "relevant_checks", "=", "[", "]", "#NEWLINE#", "for", "check", "in", "checks", ":", "#NEWLINE#", "#INDENT#", "if", "(", "check", "[", "'test_class'", "]", "==", "self", ".", "__class__", ".", "__name__", ")", ":", "#NEWLINE#", "#INDENT#", "relevant_checks", ".", "append", "(", "check", ")", "#NEWLINE#", "#UNINDENT#", "#UNINDENT#", "self", ".", "Run", "(", ")", "#NEWLINE#", "self", ".", "assertTrue", "(", "self", ".", "checks", ")", "#NEWLINE#", "checks_str", "=", "json", ".", "dumps", "(", "self", ".", "checks", ",", "indent", "=", "2", ",", "sort_keys", "=", "True", ",", "separators", "=", "(", "','", ",", "': '", ")", ")", "#NEWLINE#", "prev_checks_str", "=", "json", ".", "dumps", "(", "relevant_checks", ",", "indent", "=", "2", ",", "sort_keys", "=", "True", ",", "separators", "=", "(", "','", ",", "': '", ")", ")", "#NEWLINE#", "self", ".", "assertMultiLineEqual", "(", "prev_checks_str", ",", "checks_str", ")"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [14, 26, 39, 47, 65, 24, 41, 82, 93, 85, 143, 10, 20, 2, 9, 28, 52, 70, 76, 80, 91, 137, 112, 141, 33, 61, 118]}}
{"prediction": {"error_location": 0.7899763584136963, "repair_targets": [], "repair_candidates": [3.285040520495386e-06, 0.0003838503616861999, 0.002045917557552457, 0.006149004213511944, 6.01535321038682e-05, 0.011758311651647091, 2.8445563657442108e-05, 2.587751077953726e-05, 0.005504625383764505, 0.05983186513185501, 1.0431188457005192e-05, 0.004372114315629005, 9.267385030398145e-05, 0.1134055107831955, 2.0718580344691873e-05, 0.00010923751688096672, 6.9482721301028505e-06, 0.0012841146672144532, 0.00023151181812863797, 0.6660003662109375, 0.0007974636391736567, 0.0002267076779389754, 0.1275794357061386, 5.886995859327726e-05, 1.4982290394982556e-06, 1.4596921573684085e-06, 9.703299838292878e-06], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 14:33:15.230041", "n_pass": [56, 4, 4], "n_token": 134, "loss": [0.20861080288887024, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def testForRegression(", "self", ")", ":", "#NEWLINE#", "#INDENT#", "\"Checks whether there's a regression.\"", "#NEWLINE#", "self", "fd", ":", "#NEWLINE#", "#INDENT#", "prev_data", "=", "json", ".", "load", "(", "fd", ")", "#NEWLINE#", "#UNINDENT#", "checks", "=", "prev_data", "[", "self", ".", "handler", "]", "#NEWLINE#", "relevant_checks", "=", "[", "]", "#NEWLINE#", "for", "check", "in", "checks", ":", "#NEWLINE#", "#INDENT#", "if", "(", "check", "[", "'test_class'", "]", "==", "self", ".", "__class__", ".", "__name__", ")", ":", "#NEWLINE#", "#INDENT#", "relevant_checks", ".", "append", "(", "check", ")", "#NEWLINE#", "#UNINDENT#", "#UNINDENT#", "self", ".", "Run", "(", ")", "#NEWLINE#", "self", ".", "assertTrue", "(", "self", ".", "checks", ")", "#NEWLINE#", "checks_str", "=", "json", ".", "dumps", "(", "self", ".", "checks", ",", "indent", "=", "2", ",", "sort_keys", "=", "prev_checks_str", "=", "json", ".", "dumps", "(", "relevant_checks", ",", "indent", "=", "2", ",", "sort_keys", "=", "True", ",", "separators", "=", "(", "','", ",", "': '", ")", ")", "#NEWLINE#", "self", ".", "assertMultiLineEqual", "(", "prev_checks_str", ",", "checks_str", ")"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [14, 26, 39, 47, 65, 24, 41, 82, 93, 85, 132, 10, 20, 2, 9, 28, 52, 70, 76, 80, 91, 126, 101, 130, 33, 61, 107]}}
{"prediction": {"error_location": 0.8117110729217529, "repair_targets": [], "repair_candidates": [1.0562366696831305e-05, 0.0012267010752111673, 0.005957982037216425, 0.017410431057214737, 0.00018048009951598942, 0.031173571944236755, 8.611881639808416e-05, 8.223269833251834e-05, 0.012104024179279804, 0.17948231101036072, 3.626116449595429e-05, 0.010680543258786201, 0.00023788500402588397, 0.2264782339334488, 5.9126487030880526e-05, 0.0006058471044525504, 2.670127469173167e-05, 0.00763185229152441, 0.0008535551023669541, 0.49905112385749817, 0.004274667706340551, 0.0004083859676029533, 0.0016881658229976892, 0.00021575028949882835, 6.016648057993734e-06, 4.760731826536357e-06, 2.670183494046796e-05], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 14:33:15.350967", "n_pass": [58, 5, 5], "n_token": 123, "loss": [0.20212864875793457, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def testForRegression(", "self", ")", ":", "#NEWLINE#", "#INDENT#", "\"Checks whether there's a regression.\"", "#NEWLINE#", "self", "fd", ":", "#NEWLINE#", "#INDENT#", "prev_data", "=", "json", ".", "load", "(", "fd", ")", "#NEWLINE#", "#UNINDENT#", "checks", "=", "prev_data", "[", "self", ".", "handler", "]", "#NEWLINE#", "relevant_checks", "=", "[", "]", "#NEWLINE#", "for", "check", "in", "checks", ":", "#NEWLINE#", "#INDENT#", "if", "(", "check", "[", "'test_class'", "]", "==", "self", ".", "__class__", ".", "__name__", ")", ":", "#NEWLINE#", "#INDENT#", "relevant_checks", ".", "append", "(", "check", ")", "#NEWLINE#", "#UNINDENT#", "#UNINDENT#", "self", ".", "Run", "(", ")", "#NEWLINE#", "self", ".", "assertTrue", "(", "self", ".", "checks", ")", "#NEWLINE#", "checks_str", "=", "json", ".", "dumps", "(", "self", ".", "checks", ",", "indent", "=", "2", ",", "sort_keys", "=", "prev_checks_str", "=", "json", ".", "dumps", "(", "relevant_checks", ",", "indent", "=", "2", ")", ")", "#NEWLINE#", "self", ".", "assertMultiLineEqual", "(", "prev_checks_str", ",", "checks_str", ")"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [14, 26, 39, 47, 65, 24, 41, 82, 93, 85, 121, 10, 20, 2, 9, 28, 52, 70, 76, 80, 91, 115, 101, 119, 33, 61, 107]}}
{"prediction": {"error_location": 0.8169896602630615, "repair_targets": [], "repair_candidates": [1.3377609320741612e-05, 0.0015185261145234108, 0.005837574601173401, 0.014463680796325207, 0.00019219836394768208, 0.03148077055811882, 0.00010496607137611136, 0.00010529161227168515, 0.01101057417690754, 0.1820579320192337, 3.888852006639354e-05, 0.009607297368347645, 0.00031981212669052184, 0.22740048170089722, 6.440946162911132e-05, 0.00035557104274630547, 2.533665974624455e-05, 0.012642448768019676, 0.000718220544513315, 0.4915389120578766, 0.007856195792555809, 0.00047767075011506677, 0.0018790059257298708, 0.0002370661386521533, 1.1170910511282273e-05, 6.3322504502139054e-06, 3.627163823693991e-05], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 14:33:15.588497", "n_pass": [108, 7, 6], "n_token": 118, "loss": [0.1948392689228058, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def testForRegression(", "self", ")", ":", "#NEWLINE#", "#INDENT#", "\"Checks whether there's a regression.\"", "#NEWLINE#", "self", "fd", ":", "#NEWLINE#", "#INDENT#", "prev_data", "=", "json", ".", "load", "(", "fd", ")", "#NEWLINE#", "#UNINDENT#", "checks", "=", "prev_data", "[", "self", ".", "handler", "]", "#NEWLINE#", "relevant_checks", "=", "[", "]", "#NEWLINE#", "for", "check", "in", "checks", ":", "#NEWLINE#", "#INDENT#", "if", "(", "check", "[", "'test_class'", "]", "==", "self", ".", "__class__", "#INDENT#", "relevant_checks", ".", "append", "(", "check", ")", "#NEWLINE#", "#UNINDENT#", "#UNINDENT#", "self", ".", "Run", "(", ")", "#NEWLINE#", "self", ".", "assertTrue", "(", "self", ".", "checks", ")", "#NEWLINE#", "checks_str", "=", "json", ".", "dumps", "(", "self", ".", "checks", ",", "indent", "=", "2", ",", "sort_keys", "=", "prev_checks_str", "=", "json", ".", "dumps", "(", "relevant_checks", ",", "indent", "=", "2", ")", ")", "#NEWLINE#", "self", ".", "assertMultiLineEqual", "(", "prev_checks_str", ",", "checks_str", ")"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [14, 26, 39, 47, 60, 24, 41, 77, 88, 80, 116, 10, 20, 2, 9, 28, 52, 65, 71, 75, 86, 110, 96, 114, 33, 56, 102]}}
{"prediction": {"error_location": 0.8229667544364929, "repair_targets": [], "repair_candidates": [1.449063256586669e-05, 0.0016397630097344518, 0.006419491488486528, 0.015824254602193832, 0.00021505462063942105, 0.03376481682062149, 0.00010867789387702942, 0.0001118324144044891, 0.011898585595190525, 0.19599545001983643, 4.312946111895144e-05, 0.0060045975260436535, 0.00031993119046092033, 0.013282802887260914, 9.13822659640573e-05, 0.0003464306064415723, 3.0154908017721027e-05, 0.008070439100265503, 0.0012391777709126472, 0.6968485116958618, 0.0053637162782251835, 0.00045524872257374227, 0.0016681163106113672, 0.00019492633873596787, 1.3571961972047575e-05, 6.086636403779266e-06, 2.9401477149804123e-05], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 14:33:15.703865", "n_pass": [116, 8, 7], "n_token": 113, "loss": [0.1931898444890976, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def testForRegression(", "self", ")", ":", "#NEWLINE#", "#INDENT#", "\"Checks whether there's a regression.\"", "#NEWLINE#", "self", "fd", ":", "#NEWLINE#", "#INDENT#", "prev_data", "=", "json", ".", "load", "(", "fd", ")", "#NEWLINE#", "#UNINDENT#", "checks", "=", "prev_data", "[", "self", ".", "handler", "]", "#NEWLINE#", "relevant_checks", "=", "[", "]", "#NEWLINE#", "for", "check", "in", "checks", ":", "#NEWLINE#", "#INDENT#", "if", "(", "check", "[", "'test_class'", "]", "==", "self", ".", "__class__", "#INDENT#", "relevant_checks", ".", "append", "(", "check", ")", "#NEWLINE#", "#UNINDENT#", "#UNINDENT#", "self", ".", "Run", "(", ")", "#NEWLINE#", "self", ".", "assertTrue", "(", "self", ".", "checks", ")", "#NEWLINE#", "checks_str", "=", "json", ".", "dumps", "(", "self", ".", "checks", ",", "=", "prev_checks_str", "=", "json", ".", "dumps", "(", "relevant_checks", ",", "indent", "=", "2", ")", ")", "#NEWLINE#", "self", ".", "assertMultiLineEqual", "(", "prev_checks_str", ",", "checks_str", ")"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [14, 26, 39, 47, 60, 24, 41, 77, 88, 80, 111, 10, 20, 2, 9, 28, 52, 65, 71, 75, 86, 105, 91, 109, 33, 56, 97]}}
{"prediction": {"error_location": 0.8243255615234375, "repair_targets": [], "repair_candidates": [3.297498187748715e-05, 0.003661511465907097, 0.012719457969069481, 0.028007838875055313, 0.0004061176732648164, 0.05579482018947601, 0.00020136480452492833, 0.00024203929933719337, 0.02454310655593872, 0.2713981568813324, 6.026598930475302e-05, 0.025068633258342743, 0.0007051370339468122, 0.015241212211549282, 0.00017119395488407463, 0.0011361677898094058, 0.00011696913134073839, 0.016094904392957687, 0.0027967547066509724, 0.49257850646972656, 0.041403740644454956, 0.0008229606901295483, 0.006354611832648516, 0.00034350890200585127, 2.2804229956818745e-05, 1.1757299034798052e-05, 6.342905544443056e-05], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 14:33:15.932866", "n_pass": [184, 10, 8], "n_token": 110, "loss": [0.30804404616355896, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def testForRegression(", "self", ")", ":", "#NEWLINE#", "#INDENT#", "\"Checks whether there's a regression.\"", "#NEWLINE#", "self", "fd", ":", "#NEWLINE#", "#INDENT#", "prev_data", "=", "json", ".", "load", "(", "fd", ")", "#NEWLINE#", "#UNINDENT#", "checks", "=", "prev_data", "[", "self", ".", "handler", "]", "#NEWLINE#", "relevant_checks", "=", "[", "]", "#NEWLINE#", "for", "check", "in", "checks", ":", "#NEWLINE#", "#INDENT#", "if", "(", "check", "[", "'test_class'", "]", "==", "self", ".", "__class__", "#INDENT#", "relevant_checks", ".", "append", "(", "check", ")", "#NEWLINE#", "#UNINDENT#", "#UNINDENT#", "self", ".", "Run", "(", ")", "#NEWLINE#", "self", ".", "assertTrue", "(", "self", ".", "checks", ")", "#NEWLINE#", "checks_str", "=", "json", ".", "dumps", "(", "self", ".", "checks", ",", "=", "prev_checks_str", "dumps", "(", "relevant_checks", ",", "indent", "=", "2", ")", ")", "#NEWLINE#", "self", ".", "assertMultiLineEqual", "(", "prev_checks_str", ",", "checks_str", ")"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [14, 26, 39, 47, 60, 24, 41, 77, 88, 80, 108, 10, 20, 2, 9, 28, 52, 65, 71, 75, 86, 102, 91, 106, 33, 56, 94]}}
{"prediction": {"error_location": 0.7348830103874207, "repair_targets": [], "repair_candidates": [2.4512206437066197e-05, 0.002547814976423979, 0.008475705049932003, 0.018881291151046753, 0.0002481293922755867, 0.035215266048908234, 0.00015500465815421194, 0.00018528872169554234, 0.01587468758225441, 0.2196374386548996, 3.906865094904788e-05, 0.014089596457779408, 0.0005149717326276004, 0.0132424496114254, 8.113105286611244e-05, 0.0009014518582262099, 8.864108531270176e-05, 0.020175624638795853, 0.00229814974591136, 0.30165743827819824, 0.3443147540092468, 0.0005457449587993324, 0.00012364827853161842, 0.0006153490976430476, 1.4258816008805297e-05, 7.234084023366449e-06, 4.5359734940575436e-05], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 14:33:16.043420", "n_pass": [186, 11, 9], "n_token": 107, "loss": [0.35635775327682495, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def testForRegression(", "self", ")", ":", "#NEWLINE#", "#INDENT#", "\"Checks whether there's a regression.\"", "#NEWLINE#", "self", "fd", ":", "#NEWLINE#", "#INDENT#", "prev_data", "=", "json", ".", "load", "(", "fd", ")", "#NEWLINE#", "#UNINDENT#", "checks", "=", "prev_data", "[", "self", ".", "handler", "]", "#NEWLINE#", "relevant_checks", "=", "[", "]", "#NEWLINE#", "for", "check", "in", "checks", ":", "#NEWLINE#", "#INDENT#", "if", "(", "check", "[", "'test_class'", "]", "==", "self", ".", "__class__", "#INDENT#", "relevant_checks", ".", "append", "(", "check", ")", "#NEWLINE#", "#UNINDENT#", "#UNINDENT#", "self", ".", "Run", "(", ")", "#NEWLINE#", "self", ".", "assertTrue", "(", "self", ".", "checks", ")", "#NEWLINE#", "checks_str", "=", "json", ".", "dumps", "(", "self", ".", "checks", ",", "=", "prev_checks_str", "dumps", "(", "relevant_checks", "2", ")", ")", "#NEWLINE#", "self", ".", "assertMultiLineEqual", "(", "prev_checks_str", ",", "checks_str", ")"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [14, 26, 39, 47, 60, 24, 41, 77, 88, 80, 105, 10, 20, 2, 9, 28, 52, 65, 71, 75, 86, 99, 91, 103, 33, 56, 94]}}
{"prediction": {"error_location": 0.7002220749855042, "repair_targets": [], "repair_candidates": [1.8167200323659927e-05, 0.0016942883376032114, 0.005862221121788025, 0.01063831802457571, 0.00017509915051050484, 0.022917672991752625, 0.00011369398998795077, 0.00010711418144637719, 0.014692711643874645, 0.10394256561994553, 5.8082885516341776e-05, 0.008947382681071758, 0.00040491647087037563, 0.030851444229483604, 6.797205423936248e-05, 0.0008190785883925855, 7.710813224548474e-05, 0.012735933996737003, 0.0025695529766380787, 0.19963295757770538, 0.5827464461326599, 0.00029975580400787294, 7.953129534143955e-05, 0.000507124001160264, 7.75103490013862e-06, 3.609333361964673e-06, 2.9475313567672856e-05], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 14:33:16.153104", "n_pass": [187, 12, 10], "n_token": 104, "loss": [1.0089858770370483, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def testForRegression(", "self", ")", ":", "#NEWLINE#", "#INDENT#", "\"Checks whether there's a regression.\"", "#NEWLINE#", "self", "fd", ":", "#NEWLINE#", "#INDENT#", "prev_data", "=", "json", ".", "load", "(", "fd", ")", "#NEWLINE#", "#UNINDENT#", "checks", "=", "prev_data", "[", "self", ".", "handler", "]", "#NEWLINE#", "relevant_checks", "=", "[", "]", "#NEWLINE#", "for", "check", "in", "checks", ":", "#NEWLINE#", "#INDENT#", "if", "(", "check", "[", "'test_class'", "]", "==", "self", ".", "__class__", "#INDENT#", "relevant_checks", ".", "append", "(", "check", ")", "#NEWLINE#", "#UNINDENT#", "#UNINDENT#", "self", ".", "Run", "(", ")", "#NEWLINE#", "self", ".", "assertTrue", "(", "self", ".", "checks", ")", "#NEWLINE#", "checks_str", "=", "json", ".", "dumps", "(", "self", ".", "checks", ",", "=", "prev_checks_str", "dumps", "(", "relevant_checks", "#NEWLINE#", "self", ".", "assertMultiLineEqual", "(", "prev_checks_str", ",", "checks_str", ")"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [14, 26, 39, 47, 60, 24, 41, 77, 88, 80, 102, 10, 20, 2, 9, 28, 52, 65, 71, 75, 86, 96, 91, 100, 33, 56, 94]}}
{"prediction": {"error_location": 0.36458849906921387, "repair_targets": [], "repair_candidates": [1.1198037555004703e-06, 0.00013286287139635533, 0.00036931593785993755, 0.0007049846462905407, 2.2712127247359604e-05, 0.0013943782541900873, 1.0188567102886736e-05, 1.5921154044917785e-05, 0.0007540500373579562, 0.005464188754558563, 2.613236347315251e-06, 0.0003429777279961854, 7.625963189639151e-05, 0.0008510204497724771, 6.3847196543065365e-06, 0.00022610068845096976, 1.1509134310472291e-05, 0.028305761516094208, 0.00016713424702174962, 0.011324259452521801, 0.9497799873352051, 2.8656220820266753e-05, 4.272572368790861e-06, 1.1848393342006602e-06, 2.309074460526972e-07, 4.332968046583119e-07, 1.4190127330948599e-06], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 14:33:16.262517", "n_pass": [193, 13, 11], "n_token": 102, "loss": [1.0251094102859497, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def testForRegression(", "self", ")", "#INDENT#", "\"Checks whether there's a regression.\"", "#NEWLINE#", "self", "fd", ":", "#NEWLINE#", "#INDENT#", "prev_data", "=", "json", ".", "load", "(", "fd", ")", "#NEWLINE#", "#UNINDENT#", "checks", "=", "prev_data", "[", "self", ".", "handler", "]", "#NEWLINE#", "relevant_checks", "=", "[", "]", "#NEWLINE#", "for", "check", "in", "checks", ":", "#NEWLINE#", "#INDENT#", "if", "(", "check", "[", "'test_class'", "]", "==", "self", ".", "__class__", "#INDENT#", "relevant_checks", ".", "append", "(", "check", ")", "#NEWLINE#", "#UNINDENT#", "#UNINDENT#", "self", ".", "Run", "(", ")", "#NEWLINE#", "self", ".", "assertTrue", "(", "self", ".", "checks", ")", "#NEWLINE#", "checks_str", "=", "json", ".", "dumps", "(", "self", ".", "checks", ",", "=", "prev_checks_str", "dumps", "(", "relevant_checks", "#NEWLINE#", "self", ".", "assertMultiLineEqual", "(", "prev_checks_str", ",", "checks_str", ")"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [12, 24, 37, 45, 58, 22, 39, 75, 86, 78, 100, 8, 18, 2, 7, 26, 50, 63, 69, 73, 84, 94, 89, 98, 31, 54, 92]}}
{"prediction": {"error_location": 0.35875722765922546, "repair_targets": [], "repair_candidates": [4.543938700862782e-07, 6.625290552619845e-05, 0.00025561547954566777, 0.0007864786311984062, 1.3882821804145351e-05, 0.0011583303567022085, 9.469003998674452e-06, 1.4712122720084153e-05, 0.0008079446270130575, 0.004522235132753849, 2.21926711674314e-06, 0.0003045611083507538, 5.931972191319801e-05, 0.0007391377002932131, 5.082894858787768e-06, 0.00014344813826028258, 8.64636149344733e-06, 0.033028703182935715, 9.020539437187836e-05, 0.006910117343068123, 0.9510505199432373, 1.811061883927323e-05, 1.9429846815910423e-06, 1.0814607094289386e-06, 1.4509330981127277e-07, 3.170586637679662e-07, 9.67326059253537e-07], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 14:33:16.479983", "n_pass": [197, 15, 12], "n_token": 100, "loss": [0.9708133935928345, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def testForRegression(", "self", ")", "#INDENT#", "\"Checks whether there's a regression.\"", "#NEWLINE#", "self", "fd", ":", "prev_data", "=", "json", ".", "load", "(", "fd", ")", "#NEWLINE#", "#UNINDENT#", "checks", "=", "prev_data", "[", "self", ".", "handler", "]", "#NEWLINE#", "relevant_checks", "=", "[", "]", "#NEWLINE#", "for", "check", "in", "checks", ":", "#NEWLINE#", "#INDENT#", "if", "(", "check", "[", "'test_class'", "]", "==", "self", ".", "__class__", "#INDENT#", "relevant_checks", ".", "append", "(", "check", ")", "#NEWLINE#", "#UNINDENT#", "#UNINDENT#", "self", ".", "Run", "(", ")", "#NEWLINE#", "self", ".", "assertTrue", "(", "self", ".", "checks", ")", "#NEWLINE#", "checks_str", "=", "json", ".", "dumps", "(", "self", ".", "checks", ",", "=", "prev_checks_str", "dumps", "(", "relevant_checks", "#NEWLINE#", "self", ".", "assertMultiLineEqual", "(", "prev_checks_str", ",", "checks_str", ")"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [10, 22, 35, 43, 56, 20, 37, 73, 84, 76, 98, 8, 16, 2, 7, 24, 48, 61, 67, 71, 82, 92, 87, 96, 29, 52, 90]}}
{"prediction": {"error_location": 0.37877482175827026, "repair_targets": [], "repair_candidates": [1.7577909829924465e-06, 0.00011531316704349592, 0.0008446548017673194, 0.00031993549782782793, 9.789675095817074e-05, 0.0016771729569882154, 3.825948806479573e-05, 2.7811896870844066e-05, 0.0006233229651115835, 0.0013373532565310597, 8.221541065722704e-06, 0.00036555557744577527, 7.763540634186938e-05, 0.0006487485952675343, 2.323159424122423e-05, 0.00016465128283016384, 1.849155523814261e-05, 0.01818653754889965, 0.0001854394213296473, 0.0038218318950384855, 0.971347451210022, 5.491468255058862e-05, 7.3867981882358436e-06, 3.395528437977191e-06, 3.684705802697863e-07, 6.644176551162673e-07, 2.0853112800978124e-06], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 14:33:16.587003", "n_pass": [199, 16, 13], "n_token": 98, "loss": [1.07535982131958, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def testForRegression(", "self", ")", "#INDENT#", "\"Checks whether there's a regression.\"", "#NEWLINE#", "self", "fd", ":", "prev_data", "=", "load", "(", "fd", ")", "#NEWLINE#", "#UNINDENT#", "checks", "=", "prev_data", "[", "self", ".", "handler", "]", "#NEWLINE#", "relevant_checks", "=", "[", "]", "#NEWLINE#", "for", "check", "in", "checks", ":", "#NEWLINE#", "#INDENT#", "if", "(", "check", "[", "'test_class'", "]", "==", "self", ".", "__class__", "#INDENT#", "relevant_checks", ".", "append", "(", "check", ")", "#NEWLINE#", "#UNINDENT#", "#UNINDENT#", "self", ".", "Run", "(", ")", "#NEWLINE#", "self", ".", "assertTrue", "(", "self", ".", "checks", ")", "#NEWLINE#", "checks_str", "=", "json", ".", "dumps", "(", "self", ".", "checks", ",", "=", "prev_checks_str", "dumps", "(", "relevant_checks", "#NEWLINE#", "self", ".", "assertMultiLineEqual", "(", "prev_checks_str", ",", "checks_str", ")"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [10, 20, 33, 41, 54, 18, 35, 71, 82, 74, 96, 8, 14, 2, 7, 22, 46, 59, 65, 69, 80, 90, 85, 94, 27, 50, 88]}}
{"prediction": {"error_location": 0.34117498993873596, "repair_targets": [], "repair_candidates": [1.081736968444602e-06, 6.816733366576955e-05, 0.0005521824932657182, 0.0002065109583782032, 7.059016934363171e-05, 0.0007268211338669062, 2.105608109559398e-05, 2.6004134269896895e-05, 0.0005313539877533913, 0.0014066051226109266, 5.0577741603774484e-06, 0.0002689578104764223, 7.908951374702156e-05, 0.0008340251515619457, 1.1296688171569258e-05, 0.00013389618834480643, 1.4262617696658708e-05, 0.02783559262752533, 0.0001133942641899921, 0.003952208440750837, 0.9630956053733826, 3.719492815434933e-05, 4.6095628931652755e-06, 2.2367730707628652e-06, 2.502198128695454e-07, 4.829981321563537e-07, 1.5402450799228973e-06], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 14:33:16.694659", "n_pass": [200, 17, 14], "n_token": 96, "loss": [1.1293734312057495, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def testForRegression(", "self", ")", "#INDENT#", "\"Checks whether there's a regression.\"", "#NEWLINE#", "self", "fd", ":", "prev_data", "=", "fd", ")", "#NEWLINE#", "#UNINDENT#", "checks", "=", "prev_data", "[", "self", ".", "handler", "]", "#NEWLINE#", "relevant_checks", "=", "[", "]", "#NEWLINE#", "for", "check", "in", "checks", ":", "#NEWLINE#", "#INDENT#", "if", "(", "check", "[", "'test_class'", "]", "==", "self", ".", "__class__", "#INDENT#", "relevant_checks", ".", "append", "(", "check", ")", "#NEWLINE#", "#UNINDENT#", "#UNINDENT#", "self", ".", "Run", "(", ")", "#NEWLINE#", "self", ".", "assertTrue", "(", "self", ".", "checks", ")", "#NEWLINE#", "checks_str", "=", "json", ".", "dumps", "(", "self", ".", "checks", ",", "=", "prev_checks_str", "dumps", "(", "relevant_checks", "#NEWLINE#", "self", ".", "assertMultiLineEqual", "(", "prev_checks_str", ",", "checks_str", ")"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [10, 18, 31, 39, 52, 16, 33, 69, 80, 72, 94, 8, 12, 2, 7, 20, 44, 57, 63, 67, 78, 88, 83, 92, 25, 48, 86]}}
{"prediction": {"error_location": 0.32323575019836426, "repair_targets": [], "repair_candidates": [3.9442539900846896e-07, 5.444677753985161e-06, 0.00016091857105493546, 0.0009227857808582485, 6.781910633435473e-05, 0.0007950568688102067, 1.4365664355864283e-05, 1.9827395590255037e-05, 0.0006290467572398484, 0.002475506393238902, 3.1386518912768224e-06, 0.00028113668668083847, 7.490513962693512e-05, 0.0005786222754977643, 1.0390641364210751e-05, 0.00012634633458219469, 1.4437303434533533e-05, 0.028480324894189835, 9.386432793689892e-05, 0.0064518991857767105, 0.9587616324424744, 2.4902756194933318e-05, 3.999184627900831e-06, 1.4712712754771928e-06, 1.9025496555968857e-07, 4.030468119253783e-07, 1.1858005564135965e-06], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 14:33:17.007603", "n_pass": [208, 20, 15], "n_token": 94, "loss": [0.8320389986038208, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def testForRegression(", "self", ")", "#INDENT#", "\"Checks whether there's a regression.\"", "#NEWLINE#", "self", "fd", ":", "prev_data", "=", "fd", ")", "#NEWLINE#", "#UNINDENT#", "checks", "=", "prev_data", "[", "self", ".", "handler", "]", "#NEWLINE#", "relevant_checks", "]", "#NEWLINE#", "for", "check", "in", "checks", ":", "#NEWLINE#", "#INDENT#", "if", "(", "check", "[", "'test_class'", "]", "==", "self", ".", "__class__", "#INDENT#", "relevant_checks", ".", "append", "(", "check", ")", "#NEWLINE#", "#UNINDENT#", "#UNINDENT#", "self", ".", "Run", "(", ")", "#NEWLINE#", "self", ".", "assertTrue", "(", "self", ".", "checks", ")", "#NEWLINE#", "checks_str", "=", "json", ".", "dumps", "(", "self", ".", "checks", ",", "=", "prev_checks_str", "dumps", "(", "relevant_checks", "#NEWLINE#", "self", ".", "assertMultiLineEqual", "(", "prev_checks_str", ",", "checks_str", ")"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [10, 18, 29, 37, 50, 16, 31, 67, 78, 70, 92, 8, 12, 2, 7, 20, 42, 55, 61, 65, 76, 86, 81, 90, 25, 46, 84]}}
{"prediction": {"error_location": 0.4351610839366913, "repair_targets": [], "repair_candidates": [1.157682049779396e-06, 2.7815254725283012e-05, 0.0008135517709888518, 0.002834753133356571, 0.00028313472284935415, 0.0017874257173389196, 2.7261914510745555e-05, 0.00010324070899514481, 0.0017229034565389156, 0.0072204312309622765, 2.72223610409128e-06, 0.0003637849004007876, 0.00010029236727859825, 0.0009362994460389018, 2.4143484552041627e-05, 0.00010892158752540126, 1.607522244739812e-05, 0.03378595411777496, 0.00021722112433053553, 0.009158692322671413, 0.9403859972953796, 6.169018888613209e-05, 8.775693459028844e-06, 4.052284566569142e-06, 4.104681465832982e-07, 7.47596061501099e-07, 2.621626435939106e-06], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 14:33:17.216116", "n_pass": [212, 22, 16], "n_token": 91, "loss": [0.8839547634124756, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def testForRegression(", "self", ")", "#INDENT#", "\"Checks whether there's a regression.\"", "#NEWLINE#", "self", "fd", ":", "prev_data", "=", "fd", ")", "#NEWLINE#", "#UNINDENT#", "checks", "=", "prev_data", "[", "self", ".", "handler", "]", "#NEWLINE#", "relevant_checks", "]", "#NEWLINE#", "for", "check", "in", "checks", ":", "#NEWLINE#", "check", "[", "'test_class'", "]", "==", "self", ".", "__class__", "#INDENT#", "relevant_checks", ".", "append", "(", "check", ")", "#NEWLINE#", "#UNINDENT#", "#UNINDENT#", "self", ".", "Run", "(", ")", "#NEWLINE#", "self", ".", "assertTrue", "(", "self", ".", "checks", ")", "#NEWLINE#", "checks_str", "=", "json", ".", "dumps", "(", "self", ".", "checks", ",", "=", "prev_checks_str", "dumps", "(", "relevant_checks", "#NEWLINE#", "self", ".", "assertMultiLineEqual", "(", "prev_checks_str", ",", "checks_str", ")"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [10, 18, 29, 34, 47, 16, 31, 64, 75, 67, 89, 8, 12, 2, 7, 20, 39, 52, 58, 62, 73, 83, 78, 87, 25, 43, 81]}}
{"prediction": {"error_location": 0.41314584016799927, "repair_targets": [], "repair_candidates": [1.404304839525139e-06, 4.971000089426525e-05, 0.001217736047692597, 0.003248234512284398, 0.0003646970435511321, 0.0018214290030300617, 3.0518760468112305e-05, 0.00014643000031355768, 0.0007464402006007731, 0.004731095861643553, 5.483398126671091e-06, 4.5062359276926145e-05, 7.456479215761647e-05, 0.0008442021207883954, 2.7517158741829917e-05, 0.0001548876316519454, 1.451048501621699e-05, 0.029650792479515076, 0.00020586840400937945, 0.007720515597611666, 0.9488285183906555, 5.461981345433742e-05, 8.279454959847499e-06, 3.85600333174807e-06, 3.752948032342829e-07, 7.158300832088571e-07, 2.5306092084065313e-06], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 14:33:17.318043", "n_pass": [215, 23, 17], "n_token": 88, "loss": [1.0178991556167603, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def testForRegression(", "self", ")", "#INDENT#", "\"Checks whether there's a regression.\"", "#NEWLINE#", "self", "fd", ":", "prev_data", "=", "fd", ")", "#NEWLINE#", "#UNINDENT#", "checks", "=", "prev_data", "[", "self", ".", "handler", "]", "#NEWLINE#", "relevant_checks", "]", "#NEWLINE#", "for", "check", "in", "checks", ":", "#NEWLINE#", "check", "[", "'test_class'", "]", "==", "self", "relevant_checks", ".", "append", "(", "check", ")", "#NEWLINE#", "#UNINDENT#", "#UNINDENT#", "self", ".", "Run", "(", ")", "#NEWLINE#", "self", ".", "assertTrue", "(", "self", ".", "checks", ")", "#NEWLINE#", "checks_str", "=", "json", ".", "dumps", "(", "self", ".", "checks", ",", "=", "prev_checks_str", "dumps", "(", "relevant_checks", "#NEWLINE#", "self", ".", "assertMultiLineEqual", "(", "prev_checks_str", ",", "checks_str", ")"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [10, 18, 29, 34, 44, 16, 31, 61, 72, 64, 86, 8, 12, 2, 7, 20, 39, 49, 55, 59, 70, 80, 75, 84, 25, 40, 78]}}
{"prediction": {"error_location": 0.3613532781600952, "repair_targets": [], "repair_candidates": [1.4101051419856958e-06, 4.303183231968433e-05, 0.0010952588636428118, 0.0014265822246670723, 0.00048577541019767523, 0.0023959765676409006, 4.042026921524666e-05, 0.00011272700066911057, 0.0012009269557893276, 0.010904994793236256, 1.5625249943695962e-05, 7.08901052348665e-06, 0.00032474202453158796, 0.00013662752462550998, 3.0310013244161382e-05, 0.00035807694075629115, 1.2336506188148633e-05, 0.02607591822743416, 0.0002498102548997849, 0.009754459373652935, 0.9452592730522156, 5.2898514695698395e-05, 1.0183089216297958e-05, 2.4901694359868998e-06, 3.0306921416922705e-07, 6.989972689552815e-07, 2.0951458736817585e-06], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 14:33:17.418245", "n_pass": [218, 24, 18], "n_token": 85, "loss": [0.7915248870849609, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def testForRegression(", "self", ")", "#INDENT#", "\"Checks whether there's a regression.\"", "#NEWLINE#", "self", "fd", ":", "prev_data", "=", "fd", ")", "#NEWLINE#", "#UNINDENT#", "checks", "=", "prev_data", "[", "self", ".", "handler", "]", "#NEWLINE#", "relevant_checks", "]", "#NEWLINE#", "for", "check", "in", "checks", ":", "#NEWLINE#", "check", "[", "'test_class'", "]", "==", "self", "relevant_checks", ".", "append", "(", "check", ")", "self", ".", "Run", "(", ")", "#NEWLINE#", "self", ".", "assertTrue", "(", "self", ".", "checks", ")", "#NEWLINE#", "checks_str", "=", "json", ".", "dumps", "(", "self", ".", "checks", ",", "=", "prev_checks_str", "dumps", "(", "relevant_checks", "#NEWLINE#", "self", ".", "assertMultiLineEqual", "(", "prev_checks_str", ",", "checks_str", ")"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [10, 18, 29, 34, 44, 16, 31, 58, 69, 61, 83, 8, 12, 2, 7, 20, 39, 46, 52, 56, 67, 77, 72, 81, 25, 40, 75]}}
{"prediction": {"error_location": 0.45315325260162354, "repair_targets": [], "repair_candidates": [2.344023869227385e-06, 7.10245585651137e-05, 0.0020611712243407965, 0.0030583313200622797, 0.000760003225877881, 0.004150689579546452, 5.584956306847744e-05, 0.00015913232346065342, 0.001848215819336474, 0.026610804721713066, 2.1548399672610685e-05, 2.3984590370673686e-05, 0.0006744344718754292, 0.0005462277913466096, 0.0012795587535947561, 0.0002659729216247797, 2.0798166588065214e-05, 0.037567976862192154, 0.0001986087008845061, 0.01431281492114067, 0.9062055349349976, 8.03614966571331e-05, 1.4267458936956245e-05, 4.699262717622332e-06, 5.1714152959903e-07, 1.1828143442471628e-06, 3.991644916823134e-06], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 14:33:17.518533", "n_pass": [220, 25, 19], "n_token": 82, "loss": [0.6809197068214417, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def testForRegression(", "self", ")", "#INDENT#", "\"Checks whether there's a regression.\"", "#NEWLINE#", "self", "fd", ":", "prev_data", "=", "fd", ")", "#NEWLINE#", "#UNINDENT#", "checks", "=", "prev_data", "[", "self", ".", "handler", "]", "#NEWLINE#", "relevant_checks", "]", "#NEWLINE#", "for", "check", "in", "checks", ":", "#NEWLINE#", "check", "[", "'test_class'", "]", "==", "self", "relevant_checks", ".", "append", "(", "check", ")", "self", ".", "Run", "self", ".", "assertTrue", "(", "self", ".", "checks", ")", "#NEWLINE#", "checks_str", "=", "json", ".", "dumps", "(", "self", ".", "checks", ",", "=", "prev_checks_str", "dumps", "(", "relevant_checks", "#NEWLINE#", "self", ".", "assertMultiLineEqual", "(", "prev_checks_str", ",", "checks_str", ")"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [10, 18, 29, 34, 44, 16, 31, 55, 66, 58, 80, 8, 12, 2, 7, 20, 39, 46, 49, 53, 64, 74, 69, 78, 25, 40, 72]}}
{"prediction": {"error_location": 0.5061511993408203, "repair_targets": [], "repair_candidates": [7.295770956261549e-06, 0.00033300218638032675, 0.007586203049868345, 0.010257321409881115, 0.002476433990523219, 0.008604590781033039, 0.0001577896618982777, 0.0004918075283057988, 0.004905093461275101, 0.061710670590400696, 8.73473982210271e-05, 6.878392741782591e-05, 0.0022841854952275753, 0.0008155493414960802, 0.0047456384636461735, 0.0002404417609795928, 4.1193186916643754e-05, 0.06637206673622131, 0.00015342084225267172, 0.023712031543254852, 0.8047173023223877, 0.0001699004351394251, 3.1662471883464605e-05, 1.3259669685794506e-05, 1.6084314893305418e-06, 3.4112476896552835e-06, 1.2051611520291772e-05], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 14:33:17.616515", "n_pass": [225, 26, 20], "n_token": 79, "loss": [0.6805236339569092, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def testForRegression(", "self", ")", "#INDENT#", "\"Checks whether there's a regression.\"", "#NEWLINE#", "self", "fd", ":", "prev_data", "=", "fd", ")", "#NEWLINE#", "#UNINDENT#", "checks", "=", "prev_data", "[", "self", ".", "handler", "]", "#NEWLINE#", "relevant_checks", "]", "#NEWLINE#", "for", "check", "in", "checks", ":", "#NEWLINE#", "check", "[", "'test_class'", "]", "==", "self", "relevant_checks", ".", "append", "(", "check", ")", "self", ".", "Run", "self", ".", "assertTrue", "(", "self", ".", "checks", ")", "#NEWLINE#", "checks_str", "=", "json", "self", ".", "checks", ",", "=", "prev_checks_str", "dumps", "(", "relevant_checks", "#NEWLINE#", "self", ".", "assertMultiLineEqual", "(", "prev_checks_str", ",", "checks_str", ")"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [10, 18, 29, 34, 44, 16, 31, 55, 63, 58, 77, 8, 12, 2, 7, 20, 39, 46, 49, 53, 61, 71, 66, 75, 25, 40, 69]}}
{"prediction": {"error_location": 0.5063517093658447, "repair_targets": [], "repair_candidates": [1.4228711734176613e-05, 0.0007035831222310662, 0.013553205877542496, 0.019189639016985893, 0.003775864839553833, 0.014439163729548454, 0.00032224212191067636, 0.0009012779919430614, 0.007977090775966644, 0.09812404215335846, 0.00013309289352037013, 9.989485261030495e-05, 0.0038437696639448404, 0.001598964212462306, 0.010124768130481243, 0.000798010325524956, 8.192181849153712e-05, 0.07905998826026917, 0.00029698412981815636, 0.0853133276104927, 0.6592699885368347, 0.00022945870296098292, 0.00010037011816166341, 2.26861684495816e-05, 3.2981795357045485e-06, 6.341941116261296e-06, 1.6748115740483627e-05], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 14:33:17.809354", "n_pass": [239, 28, 21], "n_token": 77, "loss": [0.4083794951438904, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def testForRegression(", "self", ")", "#INDENT#", "\"Checks whether there's a regression.\"", "#NEWLINE#", "self", "fd", ":", "prev_data", "=", "fd", ")", "checks", "=", "prev_data", "[", "self", ".", "handler", "]", "#NEWLINE#", "relevant_checks", "]", "#NEWLINE#", "for", "check", "in", "checks", ":", "#NEWLINE#", "check", "[", "'test_class'", "]", "==", "self", "relevant_checks", ".", "append", "(", "check", ")", "self", ".", "Run", "self", ".", "assertTrue", "(", "self", ".", "checks", ")", "#NEWLINE#", "checks_str", "=", "json", "self", ".", "checks", ",", "=", "prev_checks_str", "dumps", "(", "relevant_checks", "#NEWLINE#", "self", ".", "assertMultiLineEqual", "(", "prev_checks_str", ",", "checks_str", ")"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [10, 16, 27, 32, 42, 14, 29, 53, 61, 56, 75, 8, 12, 2, 7, 18, 37, 44, 47, 51, 59, 69, 64, 73, 23, 38, 67]}}
{"prediction": {"error_location": 0.6647264957427979, "repair_targets": [], "repair_candidates": [2.9906372219556943e-05, 0.007101151626557112, 0.06362724304199219, 0.01843740977346897, 0.0460844486951828, 0.002234760904684663, 0.00020660583686549217, 0.000931008777115494, 0.0043610213324427605, 0.14167246222496033, 0.00019279593834653497, 0.00012171750131528825, 0.005236565135419369, 0.0010611475445330143, 0.006978984922170639, 0.0009324037819169462, 0.00010632479097694159, 0.09953217953443527, 0.0003371396742295474, 0.08031994104385376, 0.520028829574585, 0.00030261225765571, 9.982462506741285e-05, 3.2516447390662506e-05, 4.391273250803351e-06, 7.118115263438085e-06, 1.9484459699015133e-05], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 14:33:17.906764", "n_pass": [243, 29, 22], "n_token": 75, "loss": [0.4000483751296997, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def testForRegression(", "self", ")", "#INDENT#", "\"Checks whether there's a regression.\"", "#NEWLINE#", "self", "fd", ":", "prev_data", "=", "fd", ")", "checks", "=", "prev_data", "[", "self", ".", "#NEWLINE#", "relevant_checks", "]", "#NEWLINE#", "for", "check", "in", "checks", ":", "#NEWLINE#", "check", "[", "'test_class'", "]", "==", "self", "relevant_checks", ".", "append", "(", "check", ")", "self", ".", "Run", "self", ".", "assertTrue", "(", "self", ".", "checks", ")", "#NEWLINE#", "checks_str", "=", "json", "self", ".", "checks", ",", "=", "prev_checks_str", "dumps", "(", "relevant_checks", "#NEWLINE#", "self", ".", "assertMultiLineEqual", "(", "prev_checks_str", ",", "checks_str", ")"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [10, 16, 25, 30, 40, 14, 27, 51, 59, 54, 73, 8, 12, 2, 7, 18, 35, 42, 45, 49, 57, 67, 62, 71, 21, 36, 65]}}
{"prediction": {"error_location": 0.670287549495697, "repair_targets": [], "repair_candidates": [2.5948556867660955e-05, 0.008847588673233986, 0.07951182126998901, 0.009338279254734516, 0.07496806234121323, 0.00045723633957095444, 0.00011307867680443451, 0.0029817544855177402, 0.0003653598832897842, 0.20065928995609283, 0.00019199801317881793, 0.00018354355415794998, 0.005369323771446943, 0.0008745458326302469, 0.004668164532631636, 0.0008423171238973737, 6.892210512887686e-05, 0.10288364440202713, 0.0002192321262555197, 0.07079622894525528, 0.43634313344955444, 0.00018307173741050065, 6.003169255563989e-05, 2.0673458493547514e-05, 3.229182084396598e-06, 6.5007020566554274e-06, 1.6943649825407192e-05], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 14:33:18.001498", "n_pass": [245, 30, 23], "n_token": 73, "loss": [0.6218082308769226, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def testForRegression(", "self", ")", "#INDENT#", "\"Checks whether there's a regression.\"", "#NEWLINE#", "self", "fd", ":", "prev_data", "=", "fd", ")", "checks", "=", "prev_data", "[", "self", ".", "#NEWLINE#", "relevant_checks", "for", "check", "in", "checks", ":", "#NEWLINE#", "check", "[", "'test_class'", "]", "==", "self", "relevant_checks", ".", "append", "(", "check", ")", "self", ".", "Run", "self", ".", "assertTrue", "(", "self", ".", "checks", ")", "#NEWLINE#", "checks_str", "=", "json", "self", ".", "checks", ",", "=", "prev_checks_str", "dumps", "(", "relevant_checks", "#NEWLINE#", "self", ".", "assertMultiLineEqual", "(", "prev_checks_str", ",", "checks_str", ")"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [10, 16, 23, 28, 38, 14, 25, 49, 57, 52, 71, 8, 12, 2, 7, 18, 33, 40, 43, 47, 55, 65, 60, 69, 21, 34, 63]}}
{"prediction": {"error_location": 0.5369725823402405, "repair_targets": [], "repair_candidates": [2.2427823296311544e-06, 0.0008496344671584666, 0.007216192781925201, 0.0006540674949064851, 0.005900827702134848, 5.653212429024279e-05, 1.1630858352873474e-05, 0.00099876057356596, 6.922274042153731e-05, 0.8704224228858948, 0.00017500839021522552, 3.2135951187228784e-05, 0.0010472516296431422, 8.012528996914625e-05, 0.0006973556010052562, 0.00023172202054411173, 1.8618686226545833e-05, 0.026966778561472893, 2.4880004275473766e-05, 0.003709453623741865, 0.08080461621284485, 1.760375926096458e-05, 8.09175799076911e-06, 2.315573965461226e-06, 3.869432134706585e-07, 5.47629269931349e-07, 1.6409452427978977e-06], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 14:33:18.096786", "n_pass": [265, 31, 24], "n_token": 71, "loss": [0.6885943412780762, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def testForRegression(", "self", ")", "#NEWLINE#", "self", "fd", ":", "prev_data", "=", "fd", ")", "checks", "=", "prev_data", "[", "self", ".", "#NEWLINE#", "relevant_checks", "for", "check", "in", "checks", ":", "#NEWLINE#", "check", "[", "'test_class'", "]", "==", "self", "relevant_checks", ".", "append", "(", "check", ")", "self", ".", "Run", "self", ".", "assertTrue", "(", "self", ".", "checks", ")", "#NEWLINE#", "checks_str", "=", "json", "self", ".", "checks", ",", "=", "prev_checks_str", "dumps", "(", "relevant_checks", "#NEWLINE#", "self", ".", "assertMultiLineEqual", "(", "prev_checks_str", ",", "checks_str", ")"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [8, 14, 21, 26, 36, 12, 23, 47, 55, 50, 69, 6, 10, 2, 5, 16, 31, 38, 41, 45, 53, 63, 58, 67, 19, 32, 61]}}
{"prediction": {"error_location": 0.5022816061973572, "repair_targets": [], "repair_candidates": [1.2370830518193543e-05, 0.0004120449593756348, 0.02347562275826931, 0.0013696970418095589, 0.007673722691833973, 0.00015460375288967043, 9.270847840525676e-06, 0.001040719565935433, 8.520924166077748e-05, 0.8683120608329773, 0.00011812758748419583, 2.3149763364926912e-05, 0.0010045062517747283, 7.263608858920634e-05, 0.0004946145345456898, 0.00020767556270584464, 3.5096858482575044e-05, 0.02238466404378414, 2.3874092221376486e-05, 0.003350286977365613, 0.06971723586320877, 1.4485906831396278e-05, 5.333617991709616e-06, 1.2457509228624986e-06, 2.9984826710460766e-07, 3.7564447552540514e-07, 1.1900966683242586e-06], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 14:33:18.195147", "n_pass": [347, 32, 25], "n_token": 70, "loss": [0.8079192638397217, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def testForRegression(", "self", ")", "self", "fd", ":", "prev_data", "=", "fd", ")", "checks", "=", "prev_data", "[", "self", ".", "#NEWLINE#", "relevant_checks", "for", "check", "in", "checks", ":", "#NEWLINE#", "check", "[", "'test_class'", "]", "==", "self", "relevant_checks", ".", "append", "(", "check", ")", "self", ".", "Run", "self", ".", "assertTrue", "(", "self", ".", "checks", ")", "#NEWLINE#", "checks_str", "=", "json", "self", ".", "checks", ",", "=", "prev_checks_str", "dumps", "(", "relevant_checks", "#NEWLINE#", "self", ".", "assertMultiLineEqual", "(", "prev_checks_str", ",", "checks_str", ")"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [7, 13, 20, 25, 35, 11, 22, 46, 54, 49, 68, 5, 9, 2, 4, 15, 30, 37, 40, 44, 52, 62, 57, 66, 18, 31, 60]}}
{"prediction": {"error_location": 0.44578465819358826, "repair_targets": [], "repair_candidates": [4.416612682689447e-06, 3.9218404708663e-05, 0.011117414571344852, 0.006738536991178989, 0.005438745021820068, 0.0001881851494545117, 8.693049494468141e-06, 0.0010640607215464115, 7.617955998284742e-05, 0.8965137004852295, 0.00013235921505838633, 2.1734604160883464e-05, 0.0012495729606598616, 0.00010677007958292961, 0.0007735501858405769, 0.00015546189388260245, 2.1151498003746383e-05, 0.021378204226493835, 2.187173413403798e-05, 0.002713533351197839, 0.05221344530582428, 1.3023231986153405e-05, 7.589678261865629e-06, 1.0188421128987102e-06, 2.0189020233374322e-07, 3.538947055403696e-07, 1.0565546517682378e-06], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 14:33:18.287553", "n_pass": [349, 33, 26], "n_token": 69, "loss": [0.9914989471435547, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def testForRegression(", "self", ")", "self", "fd", "prev_data", "=", "fd", ")", "checks", "=", "prev_data", "[", "self", ".", "#NEWLINE#", "relevant_checks", "for", "check", "in", "checks", ":", "#NEWLINE#", "check", "[", "'test_class'", "]", "==", "self", "relevant_checks", ".", "append", "(", "check", ")", "self", ".", "Run", "self", ".", "assertTrue", "(", "self", ".", "checks", ")", "#NEWLINE#", "checks_str", "=", "json", "self", ".", "checks", ",", "=", "prev_checks_str", "dumps", "(", "relevant_checks", "#NEWLINE#", "self", ".", "assertMultiLineEqual", "(", "prev_checks_str", ",", "checks_str", ")"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [6, 12, 19, 24, 34, 10, 21, 45, 53, 48, 67, 5, 8, 2, 4, 14, 29, 36, 39, 43, 51, 61, 56, 65, 17, 30, 59]}}
{"prediction": {"error_location": 0.3710201382637024, "repair_targets": [], "repair_candidates": [3.177038706780877e-06, 0.00013527392002288252, 0.002085888059809804, 0.0064993626438081264, 0.0006376978708431125, 0.00022158079082146287, 2.5469120373600163e-05, 0.0006881868466734886, 0.0001218447505380027, 0.8593116402626038, 0.000241911067860201, 4.085322143509984e-05, 0.0016077287727966905, 0.00014137446123640984, 0.001783793093636632, 0.0002247827360406518, 2.3641503503313288e-05, 0.02061234787106514, 3.444906906224787e-05, 0.004492267034947872, 0.10102669149637222, 2.2814525436842814e-05, 1.3689557817997411e-05, 1.5528455605817726e-06, 2.5589952201698907e-07, 4.517758895872248e-07, 1.1827743264802848e-06], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 14:33:18.379683", "n_pass": [351, 34, 27], "n_token": 68, "loss": [0.9231168627738953, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def testForRegression(", "self", ")", "self", "fd", "prev_data", "fd", ")", "checks", "=", "prev_data", "[", "self", ".", "#NEWLINE#", "relevant_checks", "for", "check", "in", "checks", ":", "#NEWLINE#", "check", "[", "'test_class'", "]", "==", "self", "relevant_checks", ".", "append", "(", "check", ")", "self", ".", "Run", "self", ".", "assertTrue", "(", "self", ".", "checks", ")", "#NEWLINE#", "checks_str", "=", "json", "self", ".", "checks", ",", "=", "prev_checks_str", "dumps", "(", "relevant_checks", "#NEWLINE#", "self", ".", "assertMultiLineEqual", "(", "prev_checks_str", ",", "checks_str", ")"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [6, 11, 18, 23, 33, 9, 20, 44, 52, 47, 66, 5, 7, 2, 4, 13, 28, 35, 38, 42, 50, 60, 55, 64, 16, 29, 58]}}
{"prediction": {"error_location": 0.3972788155078888, "repair_targets": [], "repair_candidates": [3.967458178522065e-05, 0.0017970155458897352, 0.07981964945793152, 0.31809547543525696, 0.10714226216077805, 0.000475182052468881, 1.7118361938628368e-05, 0.0022633024491369724, 9.477105049882084e-05, 0.25985243916511536, 0.0015352728078141809, 7.116439519450068e-05, 0.0034193049650639296, 9.185507951769978e-05, 0.0016155242919921875, 0.000813633727375418, 9.035426774062216e-05, 0.03763466700911522, 9.794263314688578e-05, 0.004087233915925026, 0.18086007237434387, 4.506042751017958e-05, 2.3480062736780383e-05, 8.68955521582393e-06, 1.4728276482856018e-06, 1.9742526546906447e-06, 5.3881244639342185e-06], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 14:33:18.472303", "n_pass": [353, 35, 28], "n_token": 67, "loss": [1.0772345066070557, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def testForRegression(", "self", ")", "self", "fd", "prev_data", "fd", "checks", "=", "prev_data", "[", "self", ".", "#NEWLINE#", "relevant_checks", "for", "check", "in", "checks", ":", "#NEWLINE#", "check", "[", "'test_class'", "]", "==", "self", "relevant_checks", ".", "append", "(", "check", ")", "self", ".", "Run", "self", ".", "assertTrue", "(", "self", ".", "checks", ")", "#NEWLINE#", "checks_str", "=", "json", "self", ".", "checks", ",", "=", "prev_checks_str", "dumps", "(", "relevant_checks", "#NEWLINE#", "self", ".", "assertMultiLineEqual", "(", "prev_checks_str", ",", "checks_str", ")"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [6, 10, 17, 22, 32, 8, 19, 43, 51, 46, 65, 5, 7, 2, 4, 12, 27, 34, 37, 41, 49, 59, 54, 63, 15, 28, 57]}}
{"prediction": {"error_location": 0.340535968542099, "repair_targets": [], "repair_candidates": [3.590170308598317e-05, 0.0017322618514299393, 0.048845816403627396, 0.15499505400657654, 0.035500895231962204, 0.0005393206374719739, 7.4446434155106544e-06, 0.0015342195983976126, 0.0001182936757686548, 0.6222882866859436, 0.0028342807199805975, 7.336124690482393e-05, 0.0014195722760632634, 7.640856347279623e-05, 0.0029466443229466677, 0.0004342288011685014, 3.9077738620107993e-05, 0.019988978281617165, 7.685758464504033e-05, 0.001983685651794076, 0.10444823652505875, 3.7193552998360246e-05, 2.9181337595218793e-05, 8.962039828475099e-06, 1.0589910743874498e-06, 1.2775308277923614e-06, 3.5288562685309444e-06], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 14:33:18.562845", "n_pass": [355, 36, 29], "n_token": 66, "loss": [1.1443893909454346, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def testForRegression(", "self", ")", "self", "fd", "prev_data", "fd", "checks", "prev_data", "[", "self", ".", "#NEWLINE#", "relevant_checks", "for", "check", "in", "checks", ":", "#NEWLINE#", "check", "[", "'test_class'", "]", "==", "self", "relevant_checks", ".", "append", "(", "check", ")", "self", ".", "Run", "self", ".", "assertTrue", "(", "self", ".", "checks", ")", "#NEWLINE#", "checks_str", "=", "json", "self", ".", "checks", ",", "=", "prev_checks_str", "dumps", "(", "relevant_checks", "#NEWLINE#", "self", ".", "assertMultiLineEqual", "(", "prev_checks_str", ",", "checks_str", ")"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [6, 9, 16, 21, 31, 8, 18, 42, 50, 45, 64, 5, 7, 2, 4, 11, 26, 33, 36, 40, 48, 58, 53, 62, 14, 27, 56]}}
{"prediction": {"error_location": 0.3184182941913605, "repair_targets": [], "repair_candidates": [5.733487705583684e-05, 0.0022484492510557175, 0.03896237537264824, 0.048843853175640106, 0.006233550608158112, 8.335813618032262e-05, 1.209596848639194e-05, 0.005372877232730389, 0.00033544664620421827, 0.2895527482032776, 0.004316036589443684, 0.00018500823352951556, 0.0070487880147993565, 0.00039210490649566054, 0.007859262637794018, 0.001214507152326405, 0.00013054232113063335, 0.08530576527118683, 0.00015011176583357155, 0.007528022862970829, 0.494040846824646, 5.68059112993069e-05, 4.610406176652759e-05, 1.2718508514808491e-05, 1.811780066418578e-06, 2.576805400167359e-06, 6.9318821260822006e-06], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 14:33:18.653469", "n_pass": [357, 37, 30], "n_token": 65, "loss": [0.9731446504592896, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def testForRegression(", "self", ")", "self", "fd", "prev_data", "fd", "checks", "prev_data", "self", ".", "#NEWLINE#", "relevant_checks", "for", "check", "in", "checks", ":", "#NEWLINE#", "check", "[", "'test_class'", "]", "==", "self", "relevant_checks", ".", "append", "(", "check", ")", "self", ".", "Run", "self", ".", "assertTrue", "(", "self", ".", "checks", ")", "#NEWLINE#", "checks_str", "=", "json", "self", ".", "checks", ",", "=", "prev_checks_str", "dumps", "(", "relevant_checks", "#NEWLINE#", "self", ".", "assertMultiLineEqual", "(", "prev_checks_str", ",", "checks_str", ")"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [6, 9, 15, 20, 30, 8, 17, 41, 49, 44, 63, 5, 7, 2, 4, 10, 25, 32, 35, 39, 47, 57, 52, 61, 13, 26, 55]}}
{"prediction": {"error_location": 0.3778928816318512, "repair_targets": [], "repair_candidates": [6.845178722869605e-05, 0.0027750420849770308, 0.02968403324484825, 0.03324649855494499, 0.0016276396345347166, 2.1346311768866144e-05, 6.034429316059686e-05, 0.0058575281873345375, 0.0017700308235362172, 0.08318972587585449, 0.001236362149938941, 0.00014467989967670292, 0.01099210325628519, 0.0010273782536387444, 0.010268381796777248, 0.0013132746098563075, 0.00017230193770956248, 0.09740357100963593, 0.00021353285410441458, 0.02957676537334919, 0.6892284750938416, 6.35746109765023e-05, 3.607589314924553e-05, 1.1085287951573264e-05, 1.927058292494621e-06, 2.4235375803982606e-06, 7.504545010306174e-06], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 14:33:19.012067", "n_pass": [364, 41, 31], "n_token": 64, "loss": [0.8556118607521057, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def testForRegression(", "self", ")", "self", "fd", "prev_data", "fd", "checks", "prev_data", "self", ".", "#NEWLINE#", "relevant_checks", "for", "check", "checks", ":", "#NEWLINE#", "check", "[", "'test_class'", "]", "==", "self", "relevant_checks", ".", "append", "(", "check", ")", "self", ".", "Run", "self", ".", "assertTrue", "(", "self", ".", "checks", ")", "#NEWLINE#", "checks_str", "=", "json", "self", ".", "checks", ",", "=", "prev_checks_str", "dumps", "(", "relevant_checks", "#NEWLINE#", "self", ".", "assertMultiLineEqual", "(", "prev_checks_str", ",", "checks_str", ")"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [6, 9, 15, 19, 29, 8, 16, 40, 48, 43, 62, 5, 7, 2, 4, 10, 24, 31, 34, 38, 46, 56, 51, 60, 13, 25, 54]}}
{"prediction": {"error_location": 0.42502301931381226, "repair_targets": [], "repair_candidates": [7.319504220504314e-05, 0.002543550683185458, 0.03306350111961365, 0.029311450198292732, 0.0012003625743091106, 1.8420289052301086e-05, 2.8630260203499347e-05, 0.0008001298410817981, 0.0012804585276171565, 0.06275330483913422, 0.0653696283698082, 0.0007350545492954552, 0.006674604024738073, 0.0006390894996002316, 0.018697096034884453, 0.0016098840860649943, 0.0002711763954721391, 0.05534125864505768, 0.00032341983751393855, 0.018099403008818626, 0.7009509801864624, 0.00011561025166884065, 6.2828155932948e-05, 2.3170814529294148e-05, 2.624987473609508e-06, 2.7248916012467816e-06, 8.459845048491843e-06], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 14:33:19.101272", "n_pass": [366, 42, 32], "n_token": 63, "loss": [0.7263308763504028, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def testForRegression(", "self", ")", "self", "fd", "prev_data", "fd", "checks", "prev_data", "self", ".", "#NEWLINE#", "relevant_checks", "for", "check", "checks", "#NEWLINE#", "check", "[", "'test_class'", "]", "==", "self", "relevant_checks", ".", "append", "(", "check", ")", "self", ".", "Run", "self", ".", "assertTrue", "(", "self", ".", "checks", ")", "#NEWLINE#", "checks_str", "=", "json", "self", ".", "checks", ",", "=", "prev_checks_str", "dumps", "(", "relevant_checks", "#NEWLINE#", "self", ".", "assertMultiLineEqual", "(", "prev_checks_str", ",", "checks_str", ")"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [6, 9, 15, 18, 28, 8, 16, 39, 47, 42, 61, 5, 7, 2, 4, 10, 23, 30, 33, 37, 45, 55, 50, 59, 13, 24, 53]}}
{"prediction": {"error_location": 0.4836803674697876, "repair_targets": [], "repair_candidates": [8.713438000995666e-05, 0.003023451194167137, 0.053941428661346436, 0.05423562601208687, 0.002218976616859436, 2.769395177892875e-05, 4.0750277548795566e-05, 0.0011546809691935778, 0.0014681548345834017, 0.06523890048265457, 0.019436288625001907, 0.000829501950647682, 0.01110511552542448, 0.0011409439612179995, 0.026137471199035645, 0.002376534743234515, 0.0003033746324945241, 0.06999512761831284, 0.0003796076634898782, 0.02491283230483532, 0.6616612672805786, 0.00015953343245200813, 7.87663520895876e-05, 2.767090336419642e-05, 3.3900919333973434e-06, 3.878402367263334e-06, 1.1856282071676105e-05], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 14:33:19.190839", "n_pass": [367, 43, 33], "n_token": 62, "loss": [0.9653945565223694, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def testForRegression(", "self", ")", "self", "fd", "prev_data", "fd", "checks", "prev_data", "self", ".", "#NEWLINE#", "relevant_checks", "for", "check", "checks", "check", "[", "'test_class'", "]", "==", "self", "relevant_checks", ".", "append", "(", "check", ")", "self", ".", "Run", "self", ".", "assertTrue", "(", "self", ".", "checks", ")", "#NEWLINE#", "checks_str", "=", "json", "self", ".", "checks", ",", "=", "prev_checks_str", "dumps", "(", "relevant_checks", "#NEWLINE#", "self", ".", "assertMultiLineEqual", "(", "prev_checks_str", ",", "checks_str", ")"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [6, 9, 15, 17, 27, 8, 16, 38, 46, 41, 60, 5, 7, 2, 4, 10, 22, 29, 32, 36, 44, 54, 49, 58, 13, 23, 52]}}
{"prediction": {"error_location": 0.38083285093307495, "repair_targets": [], "repair_candidates": [6.523491902044043e-05, 0.002562497975304723, 0.02526955120265484, 0.020028620958328247, 0.001050348044373095, 2.202563700848259e-05, 4.2158491851296276e-05, 0.0019177586073055863, 0.0017549771582707763, 0.03826718404889107, 0.01076612900942564, 0.00022014307614881545, 0.017430678009986877, 0.0008454534108750522, 0.012167778797447681, 0.0018931957893073559, 0.0002658665762282908, 0.09932044893503189, 0.0002131198561983183, 0.037270475178956985, 0.7284592390060425, 9.24185078474693e-05, 4.663503204938024e-05, 1.4323609320854302e-05, 2.235497049696278e-06, 2.85360511043109e-06, 8.585077011957765e-06], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 14:33:19.278982", "n_pass": [369, 44, 34], "n_token": 61, "loss": [0.9810094237327576, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def testForRegression(", "self", ")", "self", "fd", "prev_data", "fd", "checks", "prev_data", "self", ".", "#NEWLINE#", "relevant_checks", "for", "check", "checks", "check", "'test_class'", "]", "==", "self", "relevant_checks", ".", "append", "(", "check", ")", "self", ".", "Run", "self", ".", "assertTrue", "(", "self", ".", "checks", ")", "#NEWLINE#", "checks_str", "=", "json", "self", ".", "checks", ",", "=", "prev_checks_str", "dumps", "(", "relevant_checks", "#NEWLINE#", "self", ".", "assertMultiLineEqual", "(", "prev_checks_str", ",", "checks_str", ")"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [6, 9, 15, 17, 26, 8, 16, 37, 45, 40, 59, 5, 7, 2, 4, 10, 21, 28, 31, 35, 43, 53, 48, 57, 13, 22, 51]}}
{"prediction": {"error_location": 0.3749324381351471, "repair_targets": [], "repair_candidates": [9.672476880950853e-05, 0.003506386186927557, 0.03445117548108101, 0.02769707329571247, 0.0011917591327801347, 2.082878017972689e-05, 4.1829756810329854e-05, 0.0018848880426958203, 0.0013793344842270017, 0.03828343749046326, 0.025085708126425743, 0.0012696293415501714, 0.03869429975748062, 0.002265069168061018, 0.0075128269381821156, 0.0030690282583236694, 0.0004307880299165845, 0.1438789963722229, 0.0002002368710236624, 0.0520036406815052, 0.6168139576911926, 0.00012418143160175532, 6.136776937637478e-05, 2.0620009308913723e-05, 3.1006402423372492e-06, 3.385346644790843e-06, 9.76217688730685e-06], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 14:33:19.453992", "n_pass": [371, 46, 35], "n_token": 60, "loss": [0.9100654721260071, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def testForRegression(", "self", ")", "self", "fd", "prev_data", "fd", "checks", "prev_data", "self", ".", "#NEWLINE#", "relevant_checks", "for", "check", "checks", "check", "'test_class'", "==", "self", "relevant_checks", ".", "append", "(", "check", ")", "self", ".", "Run", "self", ".", "assertTrue", "(", "self", ".", "checks", ")", "#NEWLINE#", "checks_str", "=", "json", "self", ".", "checks", ",", "=", "prev_checks_str", "dumps", "(", "relevant_checks", "#NEWLINE#", "self", ".", "assertMultiLineEqual", "(", "prev_checks_str", ",", "checks_str", ")"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [6, 9, 15, 17, 25, 8, 16, 36, 44, 39, 58, 5, 7, 2, 4, 10, 20, 27, 30, 34, 42, 52, 47, 56, 13, 21, 50]}}
{"prediction": {"error_location": 0.40249788761138916, "repair_targets": [], "repair_candidates": [8.35140745039098e-05, 0.0028066139202564955, 0.030165744945406914, 0.02511686645448208, 0.0010729776695370674, 1.705396243778523e-05, 3.151734927087091e-05, 0.0012033976381644607, 0.001392159960232675, 0.051888879388570786, 0.0592876560986042, 0.0036707893013954163, 0.011532792821526527, 0.0015071468660607934, 0.005781359970569611, 0.0013107737759128213, 0.00017605377070140094, 0.09768502414226532, 0.00018701064982451499, 0.0238906592130661, 0.6809762120246887, 0.0001231851929333061, 5.5218799388967454e-05, 2.2014224668964744e-05, 2.7125111046188977e-06, 3.1235224469128298e-06, 9.610022061679047e-06], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 14:33:19.543008", "n_pass": [372, 47, 36], "n_token": 59, "loss": [0.7760152816772461, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def testForRegression(", "self", ")", "self", "fd", "prev_data", "fd", "checks", "prev_data", "self", ".", "#NEWLINE#", "relevant_checks", "for", "check", "checks", "check", "'test_class'", "self", "relevant_checks", ".", "append", "(", "check", ")", "self", ".", "Run", "self", ".", "assertTrue", "(", "self", ".", "checks", ")", "#NEWLINE#", "checks_str", "=", "json", "self", ".", "checks", ",", "=", "prev_checks_str", "dumps", "(", "relevant_checks", "#NEWLINE#", "self", ".", "assertMultiLineEqual", "(", "prev_checks_str", ",", "checks_str", ")"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [6, 9, 15, 17, 24, 8, 16, 35, 43, 38, 57, 5, 7, 2, 4, 10, 19, 26, 29, 33, 41, 51, 46, 55, 13, 20, 49]}}
{"prediction": {"error_location": 0.46023622155189514, "repair_targets": [], "repair_candidates": [6.243392999749631e-05, 0.0018225492676720023, 0.02484358474612236, 0.034296706318855286, 0.0012073153629899025, 9.9240505733178e-06, 1.9114500901196152e-05, 0.0008889764430932701, 0.0006175797898322344, 0.047268129885196686, 0.07309708744287491, 0.0042151701636612415, 0.005217714235186577, 0.0020249593071639538, 0.0037923622876405716, 0.0011014763731509447, 0.00015276596241164953, 0.07164677232503891, 0.00015422128490172327, 0.015166427940130234, 0.7122723460197449, 6.572957499884069e-05, 3.2136267691385e-05, 1.3793798643746413e-05, 2.0035006400576094e-06, 2.0230229438311653e-06, 6.687263976346003e-06], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 14:33:19.630902", "n_pass": [375, 48, 37], "n_token": 58, "loss": [0.5651623606681824, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def testForRegression(", "self", ")", "self", "fd", "prev_data", "fd", "checks", "prev_data", "self", ".", "#NEWLINE#", "relevant_checks", "for", "check", "checks", "check", "'test_class'", "self", "relevant_checks", "append", "(", "check", ")", "self", ".", "Run", "self", ".", "assertTrue", "(", "self", ".", "checks", ")", "#NEWLINE#", "checks_str", "=", "json", "self", ".", "checks", ",", "=", "prev_checks_str", "dumps", "(", "relevant_checks", "#NEWLINE#", "self", ".", "assertMultiLineEqual", "(", "prev_checks_str", ",", "checks_str", ")"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [6, 9, 15, 17, 23, 8, 16, 34, 42, 37, 56, 5, 7, 2, 4, 10, 19, 25, 28, 32, 40, 50, 45, 54, 13, 20, 48]}}
{"prediction": {"error_location": 0.5682678818702698, "repair_targets": [], "repair_candidates": [4.297671330277808e-05, 0.0011886043939739466, 0.021853400394320488, 0.02273823693394661, 0.0013060540659353137, 1.3619916899187956e-05, 1.4605574506276753e-05, 0.0002808928838931024, 0.0005761418724432588, 0.05151641368865967, 0.18582244217395782, 0.04670502617955208, 0.030132349580526352, 0.004838236141949892, 0.009870536625385284, 0.001901490380987525, 0.0003117660235147923, 0.06677567213773727, 0.00032110317260958254, 0.022688977420330048, 0.5307255387306213, 0.00022989674471318722, 0.00010156761709367856, 2.7285737814963795e-05, 3.7335198612709064e-06, 3.382050181244267e-06, 1.0083504093927331e-05], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 14:33:19.717161", "n_pass": [376, 49, 38], "n_token": 57, "loss": [0.9111954569816589, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def testForRegression(", "self", ")", "self", "fd", "prev_data", "fd", "checks", "prev_data", "self", ".", "#NEWLINE#", "relevant_checks", "for", "check", "checks", "check", "'test_class'", "self", "relevant_checks", "(", "check", ")", "self", ".", "Run", "self", ".", "assertTrue", "(", "self", ".", "checks", ")", "#NEWLINE#", "checks_str", "=", "json", "self", ".", "checks", ",", "=", "prev_checks_str", "dumps", "(", "relevant_checks", "#NEWLINE#", "self", ".", "assertMultiLineEqual", "(", "prev_checks_str", ",", "checks_str", ")"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [6, 9, 15, 17, 22, 8, 16, 33, 41, 36, 55, 5, 7, 2, 4, 10, 19, 24, 27, 31, 39, 49, 44, 53, 13, 20, 47]}}
{"prediction": {"error_location": 0.40204331278800964, "repair_targets": [], "repair_candidates": [4.3830361391883343e-05, 0.0012594230938702822, 0.014535712078213692, 0.019565656781196594, 0.0007850047550164163, 6.787247457396006e-06, 1.6181978935492225e-05, 0.0012890712823718786, 0.0005188386421650648, 0.038609012961387634, 0.032308053225278854, 0.0029937666840851307, 0.004711437039077282, 0.0001218172037624754, 9.371661144541577e-05, 0.002713204128667712, 0.0001068247074726969, 0.0862354189157486, 0.00012618431355804205, 0.013591447845101357, 0.7802944183349609, 4.02138612116687e-05, 1.7694177586236037e-05, 8.16513602330815e-06, 1.5436570492965984e-06, 1.4905397165421164e-06, 5.14852808919386e-06], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 14:33:19.803127", "n_pass": [377, 50, 39], "n_token": 56, "loss": [0.8996220827102661, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def testForRegression(", "self", ")", "self", "fd", "prev_data", "fd", "checks", "prev_data", "self", ".", "#NEWLINE#", "relevant_checks", "for", "check", "checks", "check", "'test_class'", "self", "relevant_checks", "check", ")", "self", ".", "Run", "self", ".", "assertTrue", "(", "self", ".", "checks", ")", "#NEWLINE#", "checks_str", "=", "json", "self", ".", "checks", ",", "=", "prev_checks_str", "dumps", "(", "relevant_checks", "#NEWLINE#", "self", ".", "assertMultiLineEqual", "(", "prev_checks_str", ",", "checks_str", ")"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [6, 9, 15, 17, 21, 8, 16, 32, 40, 35, 54, 5, 7, 2, 4, 10, 19, 23, 26, 30, 38, 48, 43, 52, 13, 20, 46]}}
{"prediction": {"error_location": 0.4067233204841614, "repair_targets": [], "repair_candidates": [2.2641212126472965e-05, 0.0005166438641026616, 0.012100525200366974, 0.014715502969920635, 0.000958736811298877, 9.409430276718922e-06, 9.303461411036551e-06, 0.00022734174854122102, 0.0003809420741163194, 0.024480512365698814, 0.07022040337324142, 0.005031068809330463, 0.007586663123220205, 0.00014377945626620203, 8.825069380691275e-05, 0.00918340589851141, 0.00010822492185980082, 0.0647733062505722, 0.00012259512732271105, 0.025129426270723343, 0.7640718221664429, 6.819544069003314e-05, 3.135669248877093e-05, 9.052293535205536e-06, 2.1534815459745005e-06, 2.1149051008251263e-06, 6.5767389969551004e-06], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 14:33:19.889929", "n_pass": [380, 51, 40], "n_token": 54, "loss": [0.8265038728713989, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def testForRegression(", "self", ")", "self", "fd", "prev_data", "fd", "checks", "prev_data", "self", ".", "#NEWLINE#", "relevant_checks", "for", "check", "checks", "check", "'test_class'", "self", "relevant_checks", "check", ")", "self", "self", ".", "assertTrue", "(", "self", ".", "checks", ")", "#NEWLINE#", "checks_str", "=", "json", "self", ".", "checks", ",", "=", "prev_checks_str", "dumps", "(", "relevant_checks", "#NEWLINE#", "self", ".", "assertMultiLineEqual", "(", "prev_checks_str", ",", "checks_str", ")"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [6, 9, 15, 17, 21, 8, 16, 30, 38, 33, 52, 5, 7, 2, 4, 10, 19, 23, 24, 28, 36, 46, 41, 50, 13, 20, 44]}}
{"prediction": {"error_location": 0.43757644295692444, "repair_targets": [], "repair_candidates": [3.14537865051534e-05, 0.0007181406836025417, 0.017480751499533653, 0.0209665410220623, 0.0013298012781888247, 1.2727507964882534e-05, 1.2664884707191959e-05, 0.00032298616133630276, 0.00040716491639614105, 0.03373162820935249, 0.06508157402276993, 0.003709959564730525, 0.008230230771005154, 0.00016399860032834113, 8.266139047918841e-05, 0.004562401678413153, 6.637305341428146e-05, 0.04463537409901619, 0.00020463923283386976, 0.03653011843562126, 0.7615655064582825, 9.281345410272479e-05, 3.6266148526920006e-05, 1.054481526807649e-05, 2.70594341600372e-06, 2.650484702826361e-06, 8.30092449177755e-06], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 14:33:19.974427", "n_pass": [382, 52, 41], "n_token": 52, "loss": [0.4092141091823578, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def testForRegression(", "self", ")", "self", "fd", "prev_data", "fd", "checks", "prev_data", "self", ".", "#NEWLINE#", "relevant_checks", "for", "check", "checks", "check", "'test_class'", "self", "relevant_checks", "check", ")", "self", "self", ".", "self", ".", "checks", ")", "#NEWLINE#", "checks_str", "=", "json", "self", ".", "checks", ",", "=", "prev_checks_str", "dumps", "(", "relevant_checks", "#NEWLINE#", "self", ".", "assertMultiLineEqual", "(", "prev_checks_str", ",", "checks_str", ")"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [6, 9, 15, 17, 21, 8, 16, 28, 36, 31, 50, 5, 7, 2, 4, 10, 19, 23, 24, 26, 34, 44, 39, 48, 13, 20, 42]}}
{"prediction": {"error_location": 0.6641721129417419, "repair_targets": [], "repair_candidates": [0.00011293269199086353, 0.0029800417833030224, 0.04739243537187576, 0.05365850403904915, 0.003250136272981763, 3.160907363053411e-05, 3.466760244918987e-05, 0.0012657225597649813, 0.0010570299345999956, 0.06899994611740112, 0.15438981354236603, 0.017532626166939735, 0.02261298894882202, 0.0003924517659470439, 0.00036466054734773934, 0.032502368092536926, 0.006654329597949982, 0.01388560514897108, 0.00046598425251431763, 0.05888110399246216, 0.5131530165672302, 0.00024347232829313725, 7.89768309914507e-05, 2.6763202185975388e-05, 7.043365712888772e-06, 6.155131359264487e-06, 1.9522278307704255e-05], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 14:33:20.058285", "n_pass": [386, 53, 42], "n_token": 50, "loss": [0.8962865471839905, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def testForRegression(", "self", ")", "self", "fd", "prev_data", "fd", "checks", "prev_data", "self", ".", "#NEWLINE#", "relevant_checks", "for", "check", "checks", "check", "'test_class'", "self", "relevant_checks", "check", ")", "self", "self", ".", "self", ".", "checks", ")", "#NEWLINE#", "checks_str", "self", ".", "checks", ",", "=", "prev_checks_str", "dumps", "(", "relevant_checks", "#NEWLINE#", "self", ".", "assertMultiLineEqual", "(", "prev_checks_str", ",", "checks_str", ")"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [6, 9, 15, 17, 21, 8, 16, 28, 34, 31, 48, 5, 7, 2, 4, 10, 19, 23, 24, 26, 32, 42, 37, 46, 13, 20, 40]}}
{"prediction": {"error_location": 0.4080822765827179, "repair_targets": [], "repair_candidates": [2.0621502699214034e-05, 0.0005824333638884127, 0.008133254945278168, 0.008689926005899906, 0.0005558531847782433, 5.270961992209777e-06, 5.371509814722231e-06, 0.00021568416559603065, 0.000128325613331981, 0.007610506843775511, 0.010827315039932728, 0.001047608908265829, 0.003614159533753991, 5.761011198046617e-05, 2.5220133466064e-05, 0.0059902300126850605, 0.0022770646028220654, 0.003495385404676199, 4.873227953794412e-05, 0.06277576088905334, 0.8838409781455994, 3.840106728603132e-05, 3.5972477689938387e-06, 6.5176081989193335e-06, 7.341951686612447e-07, 9.670095550973201e-07, 2.52869517680665e-06], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 14:33:20.140633", "n_pass": [390, 54, 43], "n_token": 48, "loss": [0.41562873125076294, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def testForRegression(", "self", ")", "self", "fd", "prev_data", "fd", "checks", "prev_data", "self", ".", "#NEWLINE#", "relevant_checks", "for", "check", "checks", "check", "'test_class'", "self", "relevant_checks", "check", ")", "self", "self", ".", "self", ".", "checks", ")", "#NEWLINE#", "checks_str", "self", ".", "checks", ",", "=", "prev_checks_str", "relevant_checks", "#NEWLINE#", "self", ".", "assertMultiLineEqual", "(", "prev_checks_str", ",", "checks_str", ")"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [6, 9, 15, 17, 21, 8, 16, 28, 34, 31, 46, 5, 7, 2, 4, 10, 19, 23, 24, 26, 32, 40, 37, 44, 13, 20, 38]}}
{"prediction": {"error_location": 0.6599252223968506, "repair_targets": [], "repair_candidates": [9.727177530294284e-05, 0.0021794564090669155, 0.03087829425930977, 0.03573591262102127, 0.0024694183375686407, 2.5310375349363312e-05, 2.328574555576779e-05, 0.0006320718675851822, 0.0004904151428490877, 0.03405167534947395, 0.03493904694914818, 0.0026685846969485283, 0.011405687779188156, 0.0001622343115741387, 7.724791794316843e-05, 0.012058437801897526, 0.0036639960017055273, 0.007635022513568401, 0.00016517854237463325, 0.10602698475122452, 0.7142835259437561, 9.966325887944549e-05, 0.00013891835988033563, 7.599310629302636e-05, 5.734627393394476e-06, 2.8334991384326713e-06, 7.771762284392025e-06], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 14:33:20.223277", "n_pass": [393, 55, 44], "n_token": 46, "loss": [0.034840356558561325, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def testForRegression(", "self", ")", "self", "fd", "prev_data", "fd", "checks", "prev_data", "self", ".", "#NEWLINE#", "relevant_checks", "for", "check", "checks", "check", "'test_class'", "self", "relevant_checks", "check", ")", "self", "self", ".", "self", ".", "checks", ")", "#NEWLINE#", "checks_str", "self", ".", "checks", ",", "=", "prev_checks_str", "relevant_checks", "#NEWLINE#", "self", ".", "prev_checks_str", ",", "checks_str", ")"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [6, 9, 15, 17, 21, 8, 16, 28, 34, 31, 44, 5, 7, 2, 4, 10, 19, 23, 24, 26, 32, 40, 37, 42, 13, 20, 38]}}
{"prediction": {"error_location": 0.9657593369483948, "repair_targets": [], "repair_candidates": [0.0005136384861543775, 0.008931408636271954, 0.1231321170926094, 0.2397637665271759, 0.013908167369663715, 0.0002298697072546929, 0.0001686751638771966, 0.0007439320906996727, 0.0008787554106675088, 0.5154595971107483, 0.04152164235711098, 0.0012157869059592485, 0.008900848217308521, 0.0005097664543427527, 0.00022942577197682112, 0.0022441912442445755, 0.00011762898793676868, 0.0007834535790607333, 0.0037279792595654726, 0.011446332558989525, 0.0011797180632129312, 0.0009158016182482243, 0.0018757929792627692, 0.0003950957616325468, 0.00011422137322369963, 0.02081514522433281, 0.0002772524021565914], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 14:33:20.304536", "n_pass": [397, 56, 45], "n_token": 45, "loss": [0.08411744236946106, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "self", ")", "self", "fd", "prev_data", "fd", "checks", "prev_data", "self", ".", "#NEWLINE#", "relevant_checks", "for", "check", "checks", "check", "'test_class'", "self", "relevant_checks", "check", ")", "self", "self", ".", "self", ".", "checks", ")", "#NEWLINE#", "checks_str", "self", ".", "checks", ",", "=", "prev_checks_str", "relevant_checks", "#NEWLINE#", "self", ".", "prev_checks_str", ",", "checks_str", ")"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [5, 8, 14, 16, 20, 7, 15, 27, 33, 30, 43, 4, 6, 1, 3, 9, 18, 22, 23, 25, 31, 39, 36, 41, 12, 19, 37]}}
{"prediction": {"error_location": 0.9193232655525208, "repair_targets": [], "repair_candidates": [0.029656007885932922, 0.1877840906381607, 0.2073715627193451, 0.0633336752653122, 0.021740706637501717, 0.00025807417114265263, 0.0002692545822355896, 0.003494681790471077, 0.0007527585839852691, 0.4028976857662201, 0.03047827072441578, 0.0021202079951763153, 0.011176626197993755, 0.0006954605923965573, 0.0003950890968553722, 0.005106537137180567, 0.00025651458417996764, 0.0025001803878694773, 0.002165884478017688, 0.009206066839396954, 0.0024913561064749956, 0.00046765527804382145, 0.0020293097477406263, 0.0004035097954329103, 0.0001934506290126592, 0.012552585452795029, 0.00020283710910007358], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 14:33:20.384688", "n_pass": [399, 57, 46], "n_token": 44, "loss": [0.08848858624696732, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "self", "self", "fd", "prev_data", "fd", "checks", "prev_data", "self", ".", "#NEWLINE#", "relevant_checks", "for", "check", "checks", "check", "'test_class'", "self", "relevant_checks", "check", ")", "self", "self", ".", "self", ".", "checks", ")", "#NEWLINE#", "checks_str", "self", ".", "checks", ",", "=", "prev_checks_str", "relevant_checks", "#NEWLINE#", "self", ".", "prev_checks_str", ",", "checks_str", ")"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [4, 7, 13, 15, 19, 6, 14, 26, 32, 29, 42, 3, 5, 1, 2, 8, 17, 21, 22, 24, 30, 38, 35, 40, 11, 18, 36]}}
{"prediction": {"error_location": 0.9153133630752563, "repair_targets": [], "repair_candidates": [0.0031372560188174248, 0.01036154292523861, 0.4243195652961731, 0.31041860580444336, 0.02656455710530281, 0.0005470417672768235, 0.0002477051457390189, 0.0014689957024529576, 0.00028856340213678777, 0.1922515630722046, 0.013747488148510456, 0.000678535841871053, 0.005697120912373066, 0.00017292541451752186, 0.00010810731328092515, 0.0013746871845796704, 9.539380698697641e-05, 0.0008090954506769776, 0.00044037229963578284, 0.001983324997127056, 0.0006734756752848625, 0.00018083823670167476, 0.0005178585997782648, 0.00013613648479804397, 4.8465561121702194e-05, 0.0036820126697421074, 4.8672372940927744e-05], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 14:33:20.545635", "n_pass": [408, 59, 47], "n_token": 43, "loss": [0.1742950975894928, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "self", "self", "fd", "prev_data", "fd", "checks", "prev_data", "self", ".", "relevant_checks", "for", "check", "checks", "check", "'test_class'", "self", "relevant_checks", "check", ")", "self", "self", ".", "self", ".", "checks", ")", "#NEWLINE#", "checks_str", "self", ".", "checks", ",", "=", "prev_checks_str", "relevant_checks", "#NEWLINE#", "self", ".", "prev_checks_str", ",", "checks_str", ")"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [4, 7, 12, 14, 18, 6, 13, 25, 31, 28, 41, 3, 5, 1, 2, 8, 16, 20, 21, 23, 29, 37, 34, 39, 10, 17, 35]}}
{"prediction": {"error_location": 0.8400489687919617, "repair_targets": [], "repair_candidates": [0.005524499341845512, 0.018461095169186592, 0.29414066672325134, 0.1365031749010086, 0.026787886396050453, 0.0008065278525464237, 0.00022449097014032304, 0.0012004984309896827, 0.005079285707324743, 0.4393666684627533, 0.028477169573307037, 0.0017772335559129715, 0.009211055003106594, 0.0003608195693232119, 0.00023261585738509893, 0.004444050136953592, 0.0002744467929005623, 0.0015797917731106281, 0.0010928348638117313, 0.008450167253613472, 0.0027412401977926493, 0.0004452020803000778, 0.0006270803860388696, 0.0002997861593030393, 0.00021826190641149879, 0.011540886014699936, 0.00013261270942166448], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 14:33:20.624520", "n_pass": [410, 60, 48], "n_token": 42, "loss": [0.011329718865454197, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "self", "self", "fd", "prev_data", "fd", "checks", "prev_data", "self", ".", "relevant_checks", "check", "checks", "check", "'test_class'", "self", "relevant_checks", "check", ")", "self", "self", ".", "self", ".", "checks", ")", "#NEWLINE#", "checks_str", "self", ".", "checks", ",", "=", "prev_checks_str", "relevant_checks", "#NEWLINE#", "self", ".", "prev_checks_str", ",", "checks_str", ")"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [4, 7, 11, 13, 17, 6, 12, 24, 30, 27, 40, 3, 5, 1, 2, 8, 15, 19, 20, 22, 28, 36, 33, 38, 10, 16, 34]}}
{"prediction": {"error_location": 0.988734245300293, "repair_targets": [], "repair_candidates": [0.013551337644457817, 0.057343147695064545, 0.521253764629364, 0.20148390531539917, 0.06163790449500084, 0.0015698971692472696, 0.0005971277714706957, 0.001264471560716629, 0.007765376474708319, 0.00014618488785345107, 0.00043789102346636355, 0.004244833253324032, 0.047364767640829086, 0.0007673416403122246, 0.00033127370988950133, 0.013315894640982151, 0.0010290254140272737, 0.00663762679323554, 0.0014152586227282882, 0.019687939435243607, 0.00934575591236353, 0.0009277683566324413, 0.0010606588330119848, 0.00045628115185536444, 0.0007796084973961115, 0.02515239268541336, 0.00043255568016320467], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 14:33:20.702939", "n_pass": [414, 61, 49], "n_token": 41, "loss": [0.04219544678926468, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "self", "self", "fd", "prev_data", "fd", "checks", "prev_data", "self", ".", "relevant_checks", "check", "checks", "check", "self", "relevant_checks", "check", ")", "self", "self", ".", "self", ".", "checks", ")", "#NEWLINE#", "checks_str", "self", ".", "checks", ",", "=", "prev_checks_str", "relevant_checks", "#NEWLINE#", "self", ".", "prev_checks_str", ",", "checks_str", ")"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [4, 7, 11, 13, 16, 6, 12, 23, 29, 26, 39, 3, 5, 1, 2, 8, 14, 18, 19, 21, 27, 35, 32, 37, 10, 15, 33]}}
{"prediction": {"error_location": 0.9586824774742126, "repair_targets": [], "repair_candidates": [0.0056311036460101604, 0.025018570944666862, 0.4399382174015045, 0.36971208453178406, 0.09423112124204636, 0.001308840117417276, 0.00045309713459573686, 0.000621055718511343, 0.0037144646048545837, 4.4617463572649285e-05, 7.97643733676523e-05, 0.006692351773381233, 0.03022996336221695, 0.0002409615262877196, 0.00014213164104148746, 0.004767749458551407, 0.00038565442082472146, 0.0021514324471354485, 0.00038379206671379507, 0.005784673150628805, 0.002022163476794958, 0.00019726637401618063, 0.0001809960085665807, 8.949523908086121e-05, 0.00016366680210921913, 0.005685498937964439, 0.00012924497423227876], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 14:33:20.782846", "n_pass": [439, 62, 50], "n_token": 40, "loss": [0.03409093990921974, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "self", "self", "fd", "prev_data", "fd", "checks", "prev_data", "self", "relevant_checks", "check", "checks", "check", "self", "relevant_checks", "check", ")", "self", "self", ".", "self", ".", "checks", ")", "#NEWLINE#", "checks_str", "self", ".", "checks", ",", "=", "prev_checks_str", "relevant_checks", "#NEWLINE#", "self", ".", "prev_checks_str", ",", "checks_str", ")"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [4, 7, 10, 12, 15, 6, 11, 22, 28, 25, 38, 3, 5, 1, 2, 8, 13, 17, 18, 20, 26, 34, 31, 36, 9, 14, 32]}}
{"prediction": {"error_location": 0.9664835929870605, "repair_targets": [], "repair_candidates": [0.007144141476601362, 0.011738438159227371, 0.3547270596027374, 0.4166751801967621, 0.10913094133138657, 0.008959684520959854, 0.005333054810762405, 0.023497533053159714, 0.0006169459666125476, 0.00011475697829155251, 0.0001851516863098368, 0.0060346401296556, 0.015736952424049377, 0.0003907577774953097, 0.0003263751568738371, 0.008236485533416271, 0.000620932609308511, 0.004398094955831766, 0.0009499756852164865, 0.010310676880180836, 0.0025271179620176554, 0.0005867452127858996, 0.0005185828194953501, 0.00020801633945666254, 0.00026614119997248054, 0.010461402125656605, 0.00030418054666370153], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 14:33:20.864117", "n_pass": [492, 63, 51], "n_token": 39, "loss": [0.0843728706240654, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "self", "self", "fd", "prev_data", "fd", "checks", "prev_data", "self", "relevant_checks", "check", "checks", "check", "self", "relevant_checks", "check", "self", "self", ".", "self", ".", "checks", ")", "#NEWLINE#", "checks_str", "self", ".", "checks", ",", "=", "prev_checks_str", "relevant_checks", "#NEWLINE#", "self", ".", "prev_checks_str", ",", "checks_str", ")"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [4, 7, 10, 12, 15, 6, 11, 21, 27, 24, 37, 3, 5, 1, 2, 8, 13, 16, 17, 19, 25, 33, 30, 35, 9, 14, 31]}}
{"prediction": {"error_location": 0.9190884828567505, "repair_targets": [], "repair_candidates": [0.00406859815120697, 0.009594623930752277, 0.2677862346172333, 0.5035128593444824, 0.17243172228336334, 0.007413101382553577, 0.004124137107282877, 0.009833513759076595, 0.00024914316600188613, 4.9363883590558544e-05, 8.52951779961586e-05, 0.0028735243249684572, 0.0031281746923923492, 0.00018978287698701024, 0.00018349758465774357, 0.0006764467689208686, 0.0002864223497454077, 0.0019519941415637732, 0.0005181417800486088, 0.005008416716009378, 0.0011054414790123701, 0.0002389412693446502, 0.00018931523663923144, 8.005239942576736e-05, 0.0001057697954820469, 0.004190156236290932, 0.0001253980299225077], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 14:33:20.940818", "n_pass": [494, 64, 52], "n_token": 38, "loss": [0.08935054391622543, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "self", "self", "fd", "prev_data", "fd", "checks", "prev_data", "self", "relevant_checks", "check", "checks", "check", "self", "relevant_checks", "check", "self", "self", "self", ".", "checks", ")", "#NEWLINE#", "checks_str", "self", ".", "checks", ",", "=", "prev_checks_str", "relevant_checks", "#NEWLINE#", "self", ".", "prev_checks_str", ",", "checks_str", ")"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [4, 7, 10, 12, 15, 6, 11, 20, 26, 23, 36, 3, 5, 1, 2, 8, 13, 16, 17, 18, 24, 32, 29, 34, 9, 14, 30]}}
{"prediction": {"error_location": 0.9145246148109436, "repair_targets": [], "repair_candidates": [0.004404464736580849, 0.011324386112391949, 0.27543511986732483, 0.47715383768081665, 0.1764170229434967, 0.00734067615121603, 0.004770455416291952, 0.010879063978791237, 0.00032840980566106737, 8.058473031269386e-05, 0.00015079106378834695, 0.005268953740596771, 0.006760484538972378, 0.00030082379817031324, 0.00015144565259106457, 0.00023683611652813852, 0.0020115391816943884, 0.001124973059631884, 0.0007718105334788561, 0.008237228728830814, 0.0015448611229658127, 0.00029134575743228197, 0.00023301926557905972, 9.003630111692473e-05, 0.0001033800290315412, 0.004447698127478361, 0.00014073459897190332], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 14:33:21.017484", "n_pass": [496, 65, 53], "n_token": 37, "loss": [0.061973776668310165, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "self", "self", "fd", "prev_data", "fd", "checks", "prev_data", "self", "relevant_checks", "check", "checks", "check", "self", "relevant_checks", "check", "self", "self", "self", "checks", ")", "#NEWLINE#", "checks_str", "self", ".", "checks", ",", "=", "prev_checks_str", "relevant_checks", "#NEWLINE#", "self", ".", "prev_checks_str", ",", "checks_str", ")"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [4, 7, 10, 12, 15, 6, 11, 19, 25, 22, 35, 3, 5, 1, 2, 8, 13, 16, 17, 18, 23, 31, 28, 33, 9, 14, 29]}}
{"prediction": {"error_location": 0.939907431602478, "repair_targets": [], "repair_candidates": [0.003057858906686306, 0.012917349115014076, 0.2418694794178009, 0.4825563430786133, 0.21710368990898132, 0.007256608922034502, 0.008096972480416298, 0.013122701086103916, 0.0007150325109250844, 0.00022145181719679385, 0.00020028190920129418, 0.0012141081970185041, 0.0017065469874069095, 0.0003572787099983543, 9.64555365499109e-05, 2.926544584624935e-05, 0.0007770099327899516, 0.0010561238741502166, 8.783399243839085e-05, 0.003423679154366255, 0.0006539567257277668, 0.00012995638826396316, 0.00021296407794579864, 6.75311021041125e-05, 5.601814336841926e-05, 0.0029395949095487595, 7.387403456959873e-05], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 14:33:21.094865", "n_pass": [498, 66, 54], "n_token": 36, "loss": [0.05881841480731964, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "self", "self", "fd", "prev_data", "fd", "checks", "prev_data", "self", "relevant_checks", "check", "checks", "check", "self", "relevant_checks", "check", "self", "self", "self", "checks", "#NEWLINE#", "checks_str", "self", ".", "checks", ",", "=", "prev_checks_str", "relevant_checks", "#NEWLINE#", "self", ".", "prev_checks_str", ",", "checks_str", ")"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [4, 7, 10, 12, 15, 6, 11, 19, 24, 21, 34, 3, 5, 1, 2, 8, 13, 16, 17, 18, 22, 30, 27, 32, 9, 14, 28]}}
{"prediction": {"error_location": 0.9428780674934387, "repair_targets": [], "repair_candidates": [0.0031348401680588722, 0.012405863031744957, 0.22754807770252228, 0.48088985681533813, 0.22639328241348267, 0.007612468674778938, 0.008981927298009396, 0.01772529073059559, 0.0011826565023511648, 0.0004582800029311329, 0.00037105573574081063, 0.002047488233074546, 0.002572746481746435, 0.0004035092133563012, 0.00012385308218654245, 3.768633905565366e-05, 0.0007197363884188235, 0.002285264665260911, 9.661595686338842e-05, 0.0012381724081933498, 0.0006754910573363304, 0.00026087916921824217, 0.0003294257039669901, 7.8040779044386e-05, 5.7739802286960185e-05, 0.0023032191675156355, 6.646939436905086e-05], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 14:33:21.169879", "n_pass": [499, 67, 55], "n_token": 35, "loss": [0.13147121667861938, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "self", "self", "fd", "prev_data", "fd", "checks", "prev_data", "self", "relevant_checks", "check", "checks", "check", "self", "relevant_checks", "check", "self", "self", "self", "checks", "checks_str", "self", ".", "checks", ",", "=", "prev_checks_str", "relevant_checks", "#NEWLINE#", "self", ".", "prev_checks_str", ",", "checks_str", ")"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [4, 7, 10, 12, 15, 6, 11, 19, 23, 20, 33, 3, 5, 1, 2, 8, 13, 16, 17, 18, 21, 29, 26, 31, 9, 14, 27]}}
{"prediction": {"error_location": 0.876804530620575, "repair_targets": [], "repair_candidates": [0.0022146995179355145, 0.007555416785180569, 0.19051924347877502, 0.5119398236274719, 0.25407350063323975, 0.007673255633562803, 0.0073754386976361275, 0.011289625428617, 0.0008924971334636211, 0.00036623026244342327, 0.00019733066437765956, 0.0008405112312175333, 0.0008226350764743984, 0.00017747485253494233, 6.726633000653237e-05, 2.642407525854651e-05, 0.00041760122985579073, 0.0004418458556756377, 4.613391502061859e-05, 0.0003745126014109701, 0.00029804781661368906, 0.0003580872144084424, 0.00015457739937119186, 3.748786912183277e-05, 3.4006148780463263e-05, 0.0017612756928429008, 4.502767842495814e-05], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 14:33:21.244624", "n_pass": [502, 68, 56], "n_token": 34, "loss": [0.1372367888689041, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "self", "self", "fd", "prev_data", "fd", "checks", "prev_data", "self", "relevant_checks", "check", "checks", "check", "self", "relevant_checks", "check", "self", "self", "self", "checks", "checks_str", "self", "checks", ",", "=", "prev_checks_str", "relevant_checks", "#NEWLINE#", "self", ".", "prev_checks_str", ",", "checks_str", ")"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [4, 7, 10, 12, 15, 6, 11, 19, 22, 20, 32, 3, 5, 1, 2, 8, 13, 16, 17, 18, 21, 28, 25, 30, 9, 14, 26]}}
{"prediction": {"error_location": 0.8717638850212097, "repair_targets": [], "repair_candidates": [0.001568945124745369, 0.0036594648845493793, 0.17529179155826569, 0.5457958579063416, 0.2515758275985718, 0.00460509117692709, 0.0023572915233671665, 0.003381386399269104, 0.00015076746058184654, 4.177651499048807e-05, 3.567416933947243e-05, 0.00023217311536427587, 0.0005325322272256017, 4.7981222451198846e-05, 2.155014044546988e-05, 1.6901869457797147e-05, 0.00019930212874896824, 0.0004217222740408033, 0.0004236050881445408, 0.007256652228534222, 0.001040130853652954, 2.0420548025867902e-05, 0.0001124336922657676, 3.2452964660478756e-05, 2.3780465198797174e-05, 0.0011065390426665545, 4.7976333007682115e-05], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 14:33:21.393944", "n_pass": [505, 70, 57], "n_token": 33, "loss": [0.32040926814079285, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "self", "self", "fd", "prev_data", "fd", "checks", "prev_data", "self", "relevant_checks", "check", "checks", "check", "self", "relevant_checks", "check", "self", "self", "self", "checks", "checks_str", "self", "checks", ",", "prev_checks_str", "relevant_checks", "#NEWLINE#", "self", ".", "prev_checks_str", ",", "checks_str", ")"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [4, 7, 10, 12, 15, 6, 11, 19, 22, 20, 31, 3, 5, 1, 2, 8, 13, 16, 17, 18, 21, 27, 24, 29, 9, 14, 25]}}
{"prediction": {"error_location": 0.7258519530296326, "repair_targets": [], "repair_candidates": [0.0023719684686511755, 0.0057794381864368916, 0.2336665838956833, 0.5297187566757202, 0.19624637067317963, 0.003220334881916642, 0.0020232186652719975, 0.004529931116849184, 0.00014291280240286142, 4.364300912129693e-05, 4.60679002571851e-05, 0.00044882981455884874, 0.0009786036098375916, 5.3695537644671276e-05, 3.5659337299875915e-05, 3.213372110622004e-05, 0.0002640091406647116, 0.0004547553835436702, 0.0003458963183220476, 0.017312070354819298, 0.001013831701129675, 1.411351786373416e-05, 9.05556371435523e-05, 2.4229146220022812e-05, 1.8183676729677245e-05, 0.0010277212131768465, 9.649870480643585e-05], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 14:33:21.469949", "n_pass": [508, 71, 58], "n_token": 32, "loss": [0.6656667590141296, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "self", "self", "fd", "prev_data", "fd", "checks", "prev_data", "self", "relevant_checks", "check", "checks", "check", "self", "relevant_checks", "check", "self", "self", "self", "checks", "checks_str", "self", "checks", ",", "prev_checks_str", "relevant_checks", "self", ".", "prev_checks_str", ",", "checks_str", ")"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [4, 7, 10, 12, 15, 6, 11, 19, 22, 20, 30, 3, 5, 1, 2, 8, 13, 16, 17, 18, 21, 26, 24, 28, 9, 14, 25]}}
{"prediction": {"error_location": 0.5139307379722595, "repair_targets": [], "repair_candidates": [0.00286676874384284, 0.004862740635871887, 0.23229265213012695, 0.5555803179740906, 0.1727544516324997, 0.002021079882979393, 0.0010616193758323789, 0.00521023478358984, 0.0001717771083349362, 6.487175414804369e-05, 6.678467616438866e-05, 0.0014811193104833364, 0.0010502012446522713, 6.349058821797371e-05, 6.715017661917955e-05, 2.9971819458296522e-05, 0.00022873328998684883, 0.0002501719573047012, 0.00015290899318642914, 0.018015433102846146, 0.0005943040596321225, 1.5440991774084978e-05, 2.1838905013282783e-05, 9.55124050960876e-05, 8.07570104370825e-05, 0.00069936498766765, 0.00020036226487718523], "target_probs": 0.0}}




Minimal simplified tokens:

['#NEWLINE#', 'self', 'self', 'fd', 'prev_data', 'fd', 'checks', 'prev_data', 'self', 'relevant_checks', 'check', 'checks', 'check', 'self', 'relevant_checks', 'check', 'self', 'self', 'self', 'checks', 'checks_str', 'self', 'checks', ',', 'prev_checks_str', 'relevant_checks', 'self', '.', 'prev_checks_str', ',', 'checks_str', ')']
