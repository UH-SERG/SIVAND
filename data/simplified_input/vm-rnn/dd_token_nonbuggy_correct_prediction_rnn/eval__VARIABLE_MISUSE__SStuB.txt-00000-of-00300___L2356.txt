
Original sample:

{"has_bug": false, "bug_kind": 0, "bug_kind_name": "NONE", "source_tokens": ["#NEWLINE#", "def test_network_io_counters(", "self", ")", ":", "#NEWLINE#", "#INDENT#", "def check_ntuple(", "nt", ")", ":", "#NEWLINE#", "#INDENT#", "self", ".", "assertEqual", "(", "nt", "[", "0", "]", ",", "nt", ".", "bytes_sent", ")", "#NEWLINE#", "self", ".", "assertEqual", "(", "nt", "[", "1", "]", ",", "nt", ".", "bytes_recv", ")", "#NEWLINE#", "self", ".", "assertEqual", "(", "nt", "[", "2", "]", ",", "nt", ".", "packets_sent", ")", "#NEWLINE#", "self", ".", "assertEqual", "(", "nt", "[", "3", "]", ",", "nt", ".", "packets_recv", ")", "#NEWLINE#", "self", ".", "assertEqual", "(", "nt", "[", "4", "]", ",", "nt", ".", "errin", ")", "#NEWLINE#", "self", ".", "assertEqual", "(", "nt", "[", "5", "]", ",", "nt", ".", "errout", ")", "#NEWLINE#", "self", ".", "assertEqual", "(", "nt", "[", "6", "]", ",", "nt", ".", "dropin", ")", "#NEWLINE#", "self", ".", "assertEqual", "(", "nt", "[", "7", "]", ",", "nt", ".", "dropout", ")", "#NEWLINE#", "assert", "(", "nt", ".", "bytes_sent", ">=", "0", ")", ",", "nt", "#NEWLINE#", "assert", "(", "nt", ".", "bytes_recv", ">=", "0", ")", ",", "nt", "#NEWLINE#", "assert", "(", "nt", ".", "packets_sent", ">=", "0", ")", ",", "nt", "#NEWLINE#", "assert", "(", "nt", ".", "packets_recv", ">=", "0", ")", ",", "nt", "#NEWLINE#", "assert", "(", "nt", ".", "errin", ">=", "0", ")", ",", "nt", "#NEWLINE#", "assert", "(", "nt", ".", "errout", ">=", "0", ")", ",", "nt", "#NEWLINE#", "assert", "(", "nt", ".", "dropin", ">=", "0", ")", ",", "nt", "#NEWLINE#", "assert", "(", "nt", ".", "dropout", ">=", "0", ")", ",", "nt", "#NEWLINE#", "#UNINDENT#", "ret", "=", "psutil", ".", "network_io_counters", "(", "pernic", "=", "False", ")", "#NEWLINE#", "check_ntuple", "(", "ret", ")", "#NEWLINE#", "ret", "=", "psutil", ".", "network_io_counters", "(", "pernic", "=", "True", ")", "#NEWLINE#", "assert", "(", "ret", "!=", "[", "]", ")", "#NEWLINE#", "for", "key", "in", "ret", ":", "#NEWLINE#", "#INDENT#", "assert", "key", "#NEWLINE#", "check_ntuple", "(", "ret", "[", "key", "]", ")"], "error_location": [0], "repair_targets": [], "repair_candidates": [250, 257, 263, 225, 259, 2, 13, 27, 41, 55, 69, 83, 97, 111, 214, 227, 230, 243, 252, 261], "provenances": [{"datasetProvenance": {"datasetName": "ETHPy150Open", "filepath": "packages/psutil/test/test_psutil.py", "license": "bsd-3-clause", "note": "license: bigquery_api"}}], "txt_file": "eval__VARIABLE_MISUSE__SStuB.txt-00000-of-00300", "js_count": 2356, "results": {"model": "rnn", "prob": {"loc": [[0.8819530010223389, 2.1884896341362037e-05, 2.369111143707414e-06, 3.280973714936408e-08, 3.895507472151394e-09, 1.101278286341767e-07, 1.3266101461795188e-07, 5.008204695400309e-08, 1.1717821735146572e-06, 2.967772871897978e-08, 1.617944533904847e-08, 5.497869892678864e-07, 2.794028119978975e-08, 1.3750850769156386e-07, 3.5468661341298002e-09, 1.1252326181931949e-08, 4.750898341399079e-08, 0.0016818230506032705, 1.919683825235552e-07, 8.005004929145798e-06, 1.0264827210448857e-07, 4.9771511356766496e-08, 0.001983535010367632, 2.0088933183615154e-07, 7.526470113816686e-08, 6.224008330946162e-08, 3.006029487551132e-07, 1.6696485261036287e-07, 3.3125755471985485e-09, 4.4375742191959944e-08, 2.5557915250828955e-07, 0.006571661215275526, 3.2709277775211376e-07, 0.0002339222701266408, 7.344639243456186e-07, 1.6100125321827363e-07, 0.0030897902324795723, 2.4092838657452376e-07, 3.790297498085238e-08, 5.454208462651877e-08, 3.6922924095961207e-07, 1.3376480865190388e-06, 1.4189507346884511e-08, 6.31235934633878e-08, 5.35415779268078e-07, 0.010718949139118195, 1.5916468498744507e-07, 0.00027477744151838124, 9.574466730555287e-07, 1.6499697608196584e-07, 0.005764225497841835, 2.8579316335708427e-07, 1.7245129413367977e-07, 3.6001811309915865e-08, 1.0119091342630782e-07, 4.28266230301233e-06, 4.585724244776657e-09, 1.0452259857629542e-07, 1.201117925120343e-06, 0.005843441002070904, 1.5437396427842032e-07, 0.00018493994139134884, 3.9884082525531994e-07, 6.070825975257321e-08, 0.0023112986236810684, 8.952304852982707e-08, 2.5101471123889496e-07, 3.531483372398725e-08, 8.573884713314328e-08, 6.978068540774984e-06, 5.50891776640583e-09, 5.873864949990093e-08, 5.950547574684606e-07, 0.004834302701056004, 1.2664469295486924e-07, 0.000380755023797974, 2.426082801321172e-07, 6.173029021283583e-08, 0.002051403047516942, 1.488873238031374e-07, 7.171952631779277e-08, 8.026822797546629e-06, 1.7464388690768828e-07, 5.033434263168601e-06, 4.310938273022202e-09, 1.0713790743466234e-07, 9.882858194032451e-07, 0.00373230897821486, 7.916007405128767e-08, 0.0001002746939775534, 1.2954541261933628e-07, 1.0806288486264748e-07, 0.003833848750218749, 1.5709918699258196e-08, 1.326954475189268e-07, 2.7045029327155135e-08, 7.433848736582149e-08, 1.3650022992806043e-05, 3.1735618577499736e-09, 6.357779369636773e-08, 9.233121431861946e-07, 0.00306523684412241, 3.801838488470821e-08, 0.00016349650104530156, 7.304655014195305e-07, 6.093668503126537e-08, 0.001942516420967877, 1.315744242447181e-07, 5.378341327855196e-08, 1.5079767763381824e-06, 1.788836954119688e-07, 1.7792656308301957e-06, 2.456340908452148e-09, 3.439926032910989e-08, 3.091540747846011e-07, 0.0027911639772355556, 5.998542462748446e-08, 0.0001402514462824911, 1.3126184228440252e-07, 1.0815401196850871e-07, 0.003777492558583617, 5.001999525688916e-08, 2.6714835712482454e-06, 8.955720431913505e-08, 1.2664108339777158e-07, 3.358023548116762e-08, 1.4816105249337852e-06, 0.0019109511049464345, 2.112247265984024e-08, 8.296807152419206e-08, 1.2576441577039077e-07, 8.18257740320405e-06, 1.4058180397569231e-08, 7.251300893074131e-09, 0.0010860338807106018, 2.1489968560217676e-07, 1.3834316803240654e-08, 3.00972402555999e-07, 0.0018792820628732443, 1.689245188174482e-08, 2.5359394584256734e-08, 1.5872539904648875e-07, 1.0335701517760754e-05, 8.644061466611674e-09, 5.551108461787635e-09, 0.0007541404920630157, 3.486051127765677e-07, 1.6585229190013706e-08, 3.5701839351531817e-07, 0.0025165146216750145, 1.4809196535736646e-08, 1.1876492322926424e-07, 1.666377897890925e-07, 4.936531240673503e-06, 1.8710403892896466e-08, 1.568081842151514e-08, 0.002681465120986104, 2.8367244908622524e-07, 1.0496586710928568e-08, 1.5085082338828215e-07, 0.0007782817119732499, 9.877553885928592e-09, 1.0913375092513888e-07, 3.6599061559172696e-07, 3.5268089959572535e-06, 9.287725255546775e-09, 9.173656501104688e-09, 0.0014731816481798887, 1.7627571935463493e-07, 6.772169935942429e-09, 1.623952812224161e-07, 0.001303974655456841, 1.9594986966353645e-08, 3.24177200639042e-08, 4.306583650759421e-05, 2.98630548059009e-05, 1.2762575885005845e-08, 1.1694009316443044e-08, 0.0029359080363065004, 2.619046313157014e-07, 1.9380705040816792e-08, 1.1609636203502305e-06, 0.001731446711346507, 3.81572684560183e-09, 2.850821658739733e-07, 8.252033012468019e-08, 1.6409101135650417e-06, 1.2714516550715871e-08, 5.31820409932493e-09, 0.0033329802099615335, 1.3351419170248846e-07, 1.7249032424615507e-08, 5.404473881753802e-07, 0.0015146363293752074, 6.127982032921864e-08, 9.303563786033919e-08, 1.4349891898746137e-05, 1.6075529856607318e-05, 1.630603385649465e-08, 1.0171660846935993e-08, 0.0009146739612333477, 1.517656755822827e-07, 1.4891734956279379e-08, 1.0422523928355076e-06, 0.002250391524285078, 4.0090824882099696e-08, 8.951033123594243e-06, 2.387382664892357e-06, 1.3055288036412094e-05, 3.5530906217218217e-08, 2.818149980043927e-08, 0.0054327878169715405, 5.886316785108647e-07, 3.540946735824946e-08, 2.478618341683614e-07, 2.875765847676348e-09, 1.610697353271462e-07, 4.801610220539487e-09, 1.3330902604025141e-08, 3.2787841774961635e-08, 1.5444647942786105e-06, 1.2272913636479643e-06, 2.2068313683121232e-06, 2.7187377327209106e-07, 1.6210723288168083e-06, 3.6537315395435144e-08, 5.401801672633155e-08, 0.000966206076554954, 2.8162530085751314e-08, 3.909338630592174e-08, 8.772840942583571e-08, 3.5075768956005504e-09, 2.20014769070076e-07, 1.5294977728785852e-08, 5.3718622439191677e-08, 7.03850773220438e-08, 1.5072665746629355e-06, 2.6207919745502295e-06, 2.0471570678637363e-06, 7.877119401200616e-08, 2.2617504669142363e-07, 4.5027640283024084e-08, 5.362354613680509e-07, 0.00033249464468099177, 5.653036510011589e-07, 6.53743086331815e-07, 1.009696916298708e-05, 2.1005169514864974e-07, 9.81332686933456e-06, 1.5082010804690071e-06, 1.6996818885672837e-07, 1.6560770177420636e-07, 0.0018530442612245679, 3.795947378648634e-08, 1.0209958389850726e-07, 5.663977376002549e-08, 0.0003152847057208419, 0.007615550421178341, 2.461056283209473e-07, 7.527921042083108e-08, 2.024397183220117e-08, 0.007847649045288563, 4.4296335488525074e-08, 0.00084919692017138, 2.5467892328379094e-07, 6.375557859428227e-08]], "pointer": [[0.0, 0.0, 0.000643412466160953, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.00048401966341771185, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.00034802505979314446, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.6081499779829755e-05, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 5.489734758157283e-05, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.5682671801187098e-05, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 2.7882617359864525e-05, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 2.6455663828528486e-05, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 4.723245001514442e-05, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.2094433605670929, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.019404200837016106, 0.0, 0.0022833282127976418, 0.0, 0.0, 0.08072657883167267, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.00124923640396446, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.659555971622467, 0.0, 0.004234109539538622, 0.0, 0.0, 0.0, 0.0, 0.004206325393170118, 0.0, 0.009052813053131104, 0.0, 0.0072974166832864285, 0.0, 0.0008830391452647746, 0.0, 0.0]], "target": [0.0]}, "loss": [0.1256163865327835, 0.0], "acc": [1.0, 0.0, 0.0, 0.0]}}


Trace of simplified code(s):

{"result": {"time": "2021-02-11 14:14:55.245987", "n_pass": [1, 1, 1], "n_token": 266, "loss": [0.1256163865327835, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def test_network_io_counters(", "self", ")", ":", "#NEWLINE#", "#INDENT#", "def check_ntuple(", "nt", ")", ":", "#NEWLINE#", "#INDENT#", "self", ".", "assertEqual", "(", "nt", "[", "0", "]", ",", "nt", ".", "bytes_sent", ")", "#NEWLINE#", "self", ".", "assertEqual", "(", "nt", "[", "1", "]", ",", "nt", ".", "bytes_recv", ")", "#NEWLINE#", "self", ".", "assertEqual", "(", "nt", "[", "2", "]", ",", "nt", ".", "packets_sent", ")", "#NEWLINE#", "self", ".", "assertEqual", "(", "nt", "[", "3", "]", ",", "nt", ".", "packets_recv", ")", "#NEWLINE#", "self", ".", "assertEqual", "(", "nt", "[", "4", "]", ",", "nt", ".", "errin", ")", "#NEWLINE#", "self", ".", "assertEqual", "(", "nt", "[", "5", "]", ",", "nt", ".", "errout", ")", "#NEWLINE#", "self", ".", "assertEqual", "(", "nt", "[", "6", "]", ",", "nt", ".", "dropin", ")", "#NEWLINE#", "self", ".", "assertEqual", "(", "nt", "[", "7", "]", ",", "nt", ".", "dropout", ")", "#NEWLINE#", "assert", "(", "nt", ".", "bytes_sent", ">=", "0", ")", ",", "nt", "#NEWLINE#", "assert", "(", "nt", ".", "bytes_recv", ">=", "0", ")", ",", "nt", "#NEWLINE#", "assert", "(", "nt", ".", "packets_sent", ">=", "0", ")", ",", "nt", "#NEWLINE#", "assert", "(", "nt", ".", "packets_recv", ">=", "0", ")", ",", "nt", "#NEWLINE#", "assert", "(", "nt", ".", "errin", ">=", "0", ")", ",", "nt", "#NEWLINE#", "assert", "(", "nt", ".", "errout", ">=", "0", ")", ",", "nt", "#NEWLINE#", "assert", "(", "nt", ".", "dropin", ">=", "0", ")", ",", "nt", "#NEWLINE#", "assert", "(", "nt", ".", "dropout", ">=", "0", ")", ",", "nt", "#NEWLINE#", "#UNINDENT#", "ret", "=", "psutil", ".", "network_io_counters", "(", "pernic", "=", "False", ")", "#NEWLINE#", "check_ntuple", "(", "ret", ")", "#NEWLINE#", "ret", "=", "psutil", ".", "network_io_counters", "(", "pernic", "=", "True", ")", "#NEWLINE#", "assert", "(", "ret", "!=", "[", "]", ")", "#NEWLINE#", "for", "key", "in", "ret", ":", "#NEWLINE#", "#INDENT#", "assert", "key", "#NEWLINE#", "check_ntuple", "(", "ret", "[", "key", "]", ")"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [250, 257, 263, 225, 259, 2, 13, 27, 41, 55, 69, 83, 97, 111, 214, 227, 230, 243, 252, 261]}}
{"prediction": {"error_location": 0.8819530010223389, "repair_targets": [], "repair_candidates": [0.000643412466160953, 0.00048401966341771185, 0.00034802505979314446, 1.6081499779829755e-05, 5.489734758157283e-05, 1.5682671801187098e-05, 2.7882617359864525e-05, 2.6455663828528486e-05, 4.723245001514442e-05, 0.2094433605670929, 0.019404200837016106, 0.0022833282127976418, 0.08072657883167267, 0.00124923640396446, 0.659555971622467, 0.004234109539538622, 0.004206325393170118, 0.009052813053131104, 0.0072974166832864285, 0.0008830391452647746], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 14:14:55.424655", "n_pass": [10, 2, 2], "n_token": 199, "loss": [0.10015039145946503, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def test_network_io_counters(", "self", ")", ":", "#NEWLINE#", "#INDENT#", "def check_ntuple(", "nt", ")", ":", "#NEWLINE#", "#INDENT#", "self", ".", "assertEqual", "(", "nt", "[", "0", "]", ",", "nt", ".", "bytes_sent", ")", "#NEWLINE#", "self", ".", "assertEqual", "(", "nt", "[", "1", "]", ",", "nt", ".", "bytes_recv", ")", "#NEWLINE#", "self", ".", "assertEqual", "(", "nt", "[", "2", "]", ",", "nt", ".", "packets_sent", ")", "#NEWLINE#", "self", ".", "assertEqual", "(", "nt", "[", "3", "]", ",", "nt", ".", "packets_recv", ")", "#NEWLINE#", "self", ".", "assertEqual", "(", "nt", "[", "4", "]", ",", "nt", ".", "errin", ")", "#NEWLINE#", "self", ".", "assertEqual", "(", "nt", "[", "5", "]", ",", "nt", ".", "errout", ")", "#NEWLINE#", "self", ".", "assertEqual", "(", "nt", "[", "6", "]", ",", "nt", ".", "dropin", ")", "#NEWLINE#", "self", ".", "assertEqual", "(", "nt", "[", "7", "]", ",", "nt", ".", "dropout", ")", "#NEWLINE#", "assert", "(", "nt", ".", "bytes_sent", ">=", "0", ",", "nt", "#NEWLINE#", "assert", "(", "nt", ".", "dropout", ">=", "0", ")", ",", "nt", "#NEWLINE#", "#UNINDENT#", "ret", "=", "psutil", ".", "network_io_counters", "(", "pernic", "=", "False", ")", "#NEWLINE#", "check_ntuple", "(", "ret", ")", "#NEWLINE#", "ret", "=", "psutil", ".", "network_io_counters", "(", "pernic", "=", "True", ")", "#NEWLINE#", "assert", "(", "ret", "!=", "[", "]", ")", "#NEWLINE#", "for", "key", "in", "ret", ":", "#NEWLINE#", "#INDENT#", "assert", "key", "#NEWLINE#", "check_ntuple", "(", "ret", "[", "key", "]", ")"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [183, 190, 196, 158, 192, 2, 13, 27, 41, 55, 69, 83, 97, 111, 147, 160, 163, 176, 185, 194]}}
{"prediction": {"error_location": 0.9047012329101562, "repair_targets": [], "repair_candidates": [0.0011617164127528667, 0.0008507554302923381, 0.0005761651555076241, 2.650801616255194e-05, 9.024986502481624e-05, 2.6215233447146602e-05, 4.7880490456009284e-05, 0.0001065389733412303, 0.00019268841424491256, 0.2241336852312088, 0.023528702557086945, 0.0030039381235837936, 0.08369527757167816, 0.0016894962172955275, 0.6290394067764282, 0.0042857215739786625, 0.004879015032202005, 0.011690516956150532, 0.00983282458037138, 0.001142674358561635], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 14:14:55.597075", "n_pass": [49, 3, 3], "n_token": 182, "loss": [0.10159064829349518, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def test_network_io_counters(", "self", ")", ":", "#NEWLINE#", "#INDENT#", "def check_ntuple(", "nt", ")", ":", "#NEWLINE#", "#INDENT#", "self", ".", "assertEqual", "(", "nt", "[", "0", "]", ",", "nt", ".", "bytes_sent", ")", "#NEWLINE#", "self", ".", "assertEqual", "(", "nt", "[", "1", "]", ",", "nt", ".", "bytes_recv", ")", "#NEWLINE#", "self", ".", "assertEqual", "(", "nt", "[", "2", "]", ",", "nt", ".", "packets_sent", ")", "#NEWLINE#", "self", ".", "assertEqual", "(", "nt", "[", "3", "]", ",", "nt", ".", "packets_recv", ")", "#NEWLINE#", "self", ".", "assertEqual", "(", "nt", "[", "4", "]", ",", "nt", ".", "errin", ")", "#NEWLINE#", "self", ".", "assertEqual", "(", "nt", "[", "5", "]", ",", "nt", ".", "errout", ")", "#NEWLINE#", "self", ".", "assertEqual", "(", "nt", "[", "6", "]", ",", "nt", ".", "dropin", ")", "#NEWLINE#", "self", ".", "assertEqual", "0", ",", "nt", "#NEWLINE#", "assert", "(", "nt", ".", "dropout", ">=", "0", ")", ",", "nt", "#NEWLINE#", "#UNINDENT#", "ret", "=", "psutil", ".", "network_io_counters", "(", "pernic", "=", "False", ")", "#NEWLINE#", "check_ntuple", "(", "ret", ")", "#NEWLINE#", "ret", "=", "psutil", ".", "network_io_counters", "(", "pernic", "=", "True", ")", "#NEWLINE#", "assert", "(", "ret", "!=", "[", "]", ")", "#NEWLINE#", "for", "key", "in", "ret", ":", "#NEWLINE#", "#INDENT#", "assert", "key", "#NEWLINE#", "check_ntuple", "(", "ret", "[", "key", "]", ")"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [166, 173, 179, 141, 175, 2, 13, 27, 41, 55, 69, 83, 97, 111, 130, 143, 146, 159, 168, 177]}}
{"prediction": {"error_location": 0.9033989906311035, "repair_targets": [], "repair_candidates": [0.0024747431743890047, 0.0016843072371557355, 0.0009141683112829924, 3.143814319628291e-05, 9.881357982521877e-05, 5.296363087836653e-05, 0.0002464510907884687, 0.00010739808203652501, 0.001434744568541646, 0.27367764711380005, 0.029802462086081505, 0.0040500531904399395, 0.07174481451511383, 0.0017707118531689048, 0.5721903443336487, 0.003990039695054293, 0.005295161623507738, 0.01253258902579546, 0.016397273167967796, 0.0015039572026580572], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 14:14:55.761644", "n_pass": [83, 4, 4], "n_token": 174, "loss": [0.18699873983860016, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def test_network_io_counters(", "self", ")", ":", "#NEWLINE#", "#INDENT#", "def check_ntuple(", "nt", ")", ":", "#NEWLINE#", "#INDENT#", "self", ".", "assertEqual", "(", "nt", "[", "0", "]", ",", "nt", ".", "bytes_sent", ")", "#NEWLINE#", "self", ".", "assertEqual", "(", "nt", "[", "1", "]", ",", "nt", ".", "bytes_recv", ")", "#NEWLINE#", "self", ".", "assertEqual", "(", "nt", "[", "2", "]", ",", "nt", ".", "packets_sent", ")", "#NEWLINE#", "self", ".", "assertEqual", "(", "nt", "[", "3", "]", ",", "nt", ".", "packets_recv", ")", "#NEWLINE#", "self", ".", "assertEqual", "(", "nt", "[", "4", "]", ",", "nt", ".", "errin", ")", "#NEWLINE#", "self", ".", "assertEqual", "(", "nt", "[", "5", "]", ",", "nt", ".", "errout", ")", "#NEWLINE#", "self", ".", "assertEqual", "(", "nt", "[", "6", "]", ",", "nt", ".", "dropin", ")", "#NEWLINE#", "self", "nt", ".", "dropout", ">=", "0", ")", ",", "nt", "#NEWLINE#", "#UNINDENT#", "ret", "=", "psutil", ".", "network_io_counters", "(", "pernic", "=", "False", ")", "#NEWLINE#", "check_ntuple", "(", "ret", ")", "#NEWLINE#", "ret", "=", "psutil", ".", "network_io_counters", "(", "pernic", "=", "True", ")", "#NEWLINE#", "assert", "(", "ret", "!=", "[", "]", ")", "#NEWLINE#", "for", "key", "in", "ret", ":", "#NEWLINE#", "#INDENT#", "assert", "key", "#NEWLINE#", "check_ntuple", "(", "ret", "[", "key", "]", ")"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [158, 165, 171, 133, 167, 2, 13, 27, 41, 55, 69, 83, 97, 111, 122, 135, 138, 151, 160, 169]}}
{"prediction": {"error_location": 0.8294448852539062, "repair_targets": [], "repair_candidates": [0.0030951101798564196, 0.0019221064867451787, 0.001183415181003511, 6.149476394057274e-05, 0.00018223562801722437, 3.525200008880347e-05, 0.00012759448145516217, 9.302884427597746e-05, 0.0011641262099146843, 0.2469712793827057, 0.024387439712882042, 0.0074622780084609985, 0.0811287984251976, 0.002317404607310891, 0.5603270530700684, 0.012789101339876652, 0.008348166942596436, 0.014401751570403576, 0.03107456862926483, 0.002927820198237896], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 14:14:56.079049", "n_pass": [93, 6, 5], "n_token": 166, "loss": [0.5046524405479431, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def test_network_io_counters(", "self", ")", ":", "#NEWLINE#", "#INDENT#", "def check_ntuple(", "nt", ")", ":", "#NEWLINE#", "#INDENT#", "self", ".", "assertEqual", "bytes_sent", ")", "#NEWLINE#", "self", ".", "assertEqual", "(", "nt", "[", "1", "]", ",", "nt", ".", "bytes_recv", ")", "#NEWLINE#", "self", ".", "assertEqual", "(", "nt", "[", "2", "]", ",", "nt", ".", "packets_sent", ")", "#NEWLINE#", "self", ".", "assertEqual", "(", "nt", "[", "3", "]", ",", "nt", ".", "packets_recv", ")", "#NEWLINE#", "self", ".", "assertEqual", "(", "nt", "[", "4", "]", ",", "nt", ".", "errin", ")", "#NEWLINE#", "self", ".", "assertEqual", "(", "nt", "[", "5", "]", ",", "nt", ".", "errout", ")", "#NEWLINE#", "self", ".", "assertEqual", "(", "nt", "[", "6", "]", ",", "nt", ".", "dropin", ")", "#NEWLINE#", "self", "nt", ".", "dropout", ">=", "0", ")", ",", "nt", "#NEWLINE#", "#UNINDENT#", "ret", "=", "psutil", ".", "network_io_counters", "(", "pernic", "=", "False", ")", "#NEWLINE#", "check_ntuple", "(", "ret", ")", "#NEWLINE#", "ret", "=", "psutil", ".", "network_io_counters", "(", "pernic", "=", "True", ")", "#NEWLINE#", "assert", "(", "ret", "!=", "[", "]", ")", "#NEWLINE#", "for", "key", "in", "ret", ":", "#NEWLINE#", "#INDENT#", "assert", "key", "#NEWLINE#", "check_ntuple", "(", "ret", "[", "key", "]", ")"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [150, 157, 163, 125, 159, 2, 13, 19, 33, 47, 61, 75, 89, 103, 114, 127, 130, 143, 152, 161]}}
{"prediction": {"error_location": 0.6037153601646423, "repair_targets": [], "repair_candidates": [0.006708402652293444, 0.8217699527740479, 0.003990955650806427, 3.917299545719288e-05, 9.888350905384868e-05, 2.3690974558121525e-05, 7.693714724155143e-05, 3.477343125268817e-05, 0.0006192727014422417, 0.04835227131843567, 0.0061391605995595455, 0.0005717377061955631, 0.01054710615426302, 0.0002993633388541639, 0.09345372766256332, 0.0004983879625797272, 0.0009056325070559978, 0.002326976042240858, 0.003252199850976467, 0.0002914344076998532], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 14:14:56.231857", "n_pass": [95, 7, 6], "n_token": 158, "loss": [0.11440461128950119, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def test_network_io_counters(", "self", ")", ":", "#NEWLINE#", "#INDENT#", "def check_ntuple(", "nt", ")", ":", "#NEWLINE#", "#INDENT#", "self", ".", "assertEqual", "bytes_sent", ")", "#NEWLINE#", "self", ".", "assertEqual", "(", "nt", "#NEWLINE#", "self", ".", "assertEqual", "(", "nt", "[", "2", "]", ",", "nt", ".", "packets_sent", ")", "#NEWLINE#", "self", ".", "assertEqual", "(", "nt", "[", "3", "]", ",", "nt", ".", "packets_recv", ")", "#NEWLINE#", "self", ".", "assertEqual", "(", "nt", "[", "4", "]", ",", "nt", ".", "errin", ")", "#NEWLINE#", "self", ".", "assertEqual", "(", "nt", "[", "5", "]", ",", "nt", ".", "errout", ")", "#NEWLINE#", "self", ".", "assertEqual", "(", "nt", "[", "6", "]", ",", "nt", ".", "dropin", ")", "#NEWLINE#", "self", "nt", ".", "dropout", ">=", "0", ")", ",", "nt", "#NEWLINE#", "#UNINDENT#", "ret", "=", "psutil", ".", "network_io_counters", "(", "pernic", "=", "False", ")", "#NEWLINE#", "check_ntuple", "(", "ret", ")", "#NEWLINE#", "ret", "=", "psutil", ".", "network_io_counters", "(", "pernic", "=", "True", ")", "#NEWLINE#", "assert", "(", "ret", "!=", "[", "]", ")", "#NEWLINE#", "for", "key", "in", "ret", ":", "#NEWLINE#", "#INDENT#", "assert", "key", "#NEWLINE#", "check_ntuple", "(", "ret", "[", "key", "]", ")"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [142, 149, 155, 117, 151, 2, 13, 19, 25, 39, 53, 67, 81, 95, 106, 119, 122, 135, 144, 153]}}
{"prediction": {"error_location": 0.8918970227241516, "repair_targets": [], "repair_candidates": [0.00013729807687923312, 0.0005234922864474356, 3.17471130983904e-05, 6.310909520834684e-05, 0.0005100199487060308, 0.0001333524560322985, 0.0002381783997407183, 0.00017247268988285214, 0.0015934451948851347, 0.2240932732820511, 0.0337015837430954, 0.005546584725379944, 0.0678117424249649, 0.002970385365188122, 0.5869807004928589, 0.0096000786870718, 0.009295530617237091, 0.019398817792534828, 0.03332241624593735, 0.00387578341178596], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 14:14:56.382485", "n_pass": [98, 8, 7], "n_token": 150, "loss": [0.10277339071035385, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def test_network_io_counters(", "self", ")", ":", "#NEWLINE#", "#INDENT#", "def check_ntuple(", "nt", ")", ":", "#NEWLINE#", "#INDENT#", "self", ".", "assertEqual", "bytes_sent", ")", "#NEWLINE#", "self", ".", "assertEqual", "(", "nt", "#NEWLINE#", "self", ".", "assertEqual", "(", "nt", "[", "2", "]", ",", "nt", ".", "packets_sent", ")", "#NEWLINE#", "self", "nt", ".", "packets_recv", ")", "#NEWLINE#", "self", ".", "assertEqual", "(", "nt", "[", "4", "]", ",", "nt", ".", "errin", ")", "#NEWLINE#", "self", ".", "assertEqual", "(", "nt", "[", "5", "]", ",", "nt", ".", "errout", ")", "#NEWLINE#", "self", ".", "assertEqual", "(", "nt", "[", "6", "]", ",", "nt", ".", "dropin", ")", "#NEWLINE#", "self", "nt", ".", "dropout", ">=", "0", ")", ",", "nt", "#NEWLINE#", "#UNINDENT#", "ret", "=", "psutil", ".", "network_io_counters", "(", "pernic", "=", "False", ")", "#NEWLINE#", "check_ntuple", "(", "ret", ")", "#NEWLINE#", "ret", "=", "psutil", ".", "network_io_counters", "(", "pernic", "=", "True", ")", "#NEWLINE#", "assert", "(", "ret", "!=", "[", "]", ")", "#NEWLINE#", "for", "key", "in", "ret", ":", "#NEWLINE#", "#INDENT#", "assert", "key", "#NEWLINE#", "check_ntuple", "(", "ret", "[", "key", "]", ")"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [134, 141, 147, 109, 143, 2, 13, 19, 25, 39, 45, 59, 73, 87, 98, 111, 114, 127, 136, 145]}}
{"prediction": {"error_location": 0.9023313522338867, "repair_targets": [], "repair_candidates": [0.00015314693155232817, 0.0004237969114910811, 3.324908539070748e-05, 6.32096198387444e-05, 0.05968830734491348, 0.0003765412839129567, 0.0018996709259226918, 0.0004852941492572427, 0.006958356127142906, 0.2173597365617752, 0.039566583931446075, 0.0047096069902181625, 0.052397243678569794, 0.0025485313963145018, 0.5444751381874084, 0.005160028114914894, 0.008359258063137531, 0.01991087943315506, 0.0316518098115921, 0.0037796027027070522], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 14:14:56.528073", "n_pass": [100, 9, 8], "n_token": 142, "loss": [0.13762059807777405, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def test_network_io_counters(", "self", ")", ":", "#NEWLINE#", "#INDENT#", "def check_ntuple(", "nt", ")", ":", "#NEWLINE#", "#INDENT#", "self", ".", "assertEqual", "bytes_sent", ")", "#NEWLINE#", "self", ".", "assertEqual", "(", "nt", "#NEWLINE#", "self", ".", "assertEqual", "(", "nt", "[", "2", "]", ",", "nt", ".", "packets_sent", ")", "#NEWLINE#", "self", "nt", ".", "packets_recv", ")", "#NEWLINE#", "self", ".", "assertEqual", "errin", ")", "#NEWLINE#", "self", ".", "assertEqual", "(", "nt", "[", "5", "]", ",", "nt", ".", "errout", ")", "#NEWLINE#", "self", ".", "assertEqual", "(", "nt", "[", "6", "]", ",", "nt", ".", "dropin", ")", "#NEWLINE#", "self", "nt", ".", "dropout", ">=", "0", ")", ",", "nt", "#NEWLINE#", "#UNINDENT#", "ret", "=", "psutil", ".", "network_io_counters", "(", "pernic", "=", "False", ")", "#NEWLINE#", "check_ntuple", "(", "ret", ")", "#NEWLINE#", "ret", "=", "psutil", ".", "network_io_counters", "(", "pernic", "=", "True", ")", "#NEWLINE#", "assert", "(", "ret", "!=", "[", "]", ")", "#NEWLINE#", "for", "key", "in", "ret", ":", "#NEWLINE#", "#INDENT#", "assert", "key", "#NEWLINE#", "check_ntuple", "(", "ret", "[", "key", "]", ")"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [126, 133, 139, 101, 135, 2, 13, 19, 25, 39, 45, 51, 65, 79, 90, 103, 106, 119, 128, 137]}}
{"prediction": {"error_location": 0.871429443359375, "repair_targets": [], "repair_candidates": [0.00017014249169733375, 0.0004522572853602469, 3.5669094359036535e-05, 6.826480966992676e-05, 0.11956235766410828, 0.008760771714150906, 0.0028619449585676193, 0.0007229149923659861, 0.011861062608659267, 0.22750751674175262, 0.030425889417529106, 0.005174502730369568, 0.04913923516869545, 0.0030767382122576237, 0.46260514855384827, 0.006481240037828684, 0.00892249308526516, 0.02014019526541233, 0.03815311938524246, 0.003878579242154956], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 14:14:56.666993", "n_pass": [102, 10, 9], "n_token": 134, "loss": [0.09568986296653748, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def test_network_io_counters(", "self", ")", ":", "#NEWLINE#", "#INDENT#", "def check_ntuple(", "nt", ")", ":", "#NEWLINE#", "#INDENT#", "self", ".", "assertEqual", "bytes_sent", ")", "#NEWLINE#", "self", ".", "assertEqual", "(", "nt", "#NEWLINE#", "self", ".", "assertEqual", "(", "nt", "[", "2", "]", ",", "nt", ".", "packets_sent", ")", "#NEWLINE#", "self", "nt", ".", "packets_recv", ")", "#NEWLINE#", "self", ".", "assertEqual", "errin", ")", "#NEWLINE#", "self", ".", "assertEqual", "(", "nt", "#NEWLINE#", "self", ".", "assertEqual", "(", "nt", "[", "6", "]", ",", "nt", ".", "dropin", ")", "#NEWLINE#", "self", "nt", ".", "dropout", ">=", "0", ")", ",", "nt", "#NEWLINE#", "#UNINDENT#", "ret", "=", "psutil", ".", "network_io_counters", "(", "pernic", "=", "False", ")", "#NEWLINE#", "check_ntuple", "(", "ret", ")", "#NEWLINE#", "ret", "=", "psutil", ".", "network_io_counters", "(", "pernic", "=", "True", ")", "#NEWLINE#", "assert", "(", "ret", "!=", "[", "]", ")", "#NEWLINE#", "for", "key", "in", "ret", ":", "#NEWLINE#", "#INDENT#", "assert", "key", "#NEWLINE#", "check_ntuple", "(", "ret", "[", "key", "]", ")"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [118, 125, 131, 93, 127, 2, 13, 19, 25, 39, 45, 51, 57, 71, 82, 95, 98, 111, 120, 129]}}
{"prediction": {"error_location": 0.9087458848953247, "repair_targets": [], "repair_candidates": [0.00021063745953142643, 0.0007382427575066686, 5.477044760482386e-05, 0.00013494676386471838, 0.06228383257985115, 0.0006071498501114547, 0.0002935238881036639, 0.0005961195565760136, 0.009026659652590752, 0.21530048549175262, 0.026224153116345406, 0.0066909207962453365, 0.055416133254766464, 0.00441822549328208, 0.5040275454521179, 0.014051629230380058, 0.011824539862573147, 0.02242669276893139, 0.0604376345872879, 0.0052361153066158295], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 14:14:56.800831", "n_pass": [105, 11, 10], "n_token": 126, "loss": [0.07961801439523697, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def test_network_io_counters(", "self", ")", ":", "#NEWLINE#", "#INDENT#", "def check_ntuple(", "nt", ")", ":", "#NEWLINE#", "#INDENT#", "self", ".", "assertEqual", "bytes_sent", ")", "#NEWLINE#", "self", ".", "assertEqual", "(", "nt", "#NEWLINE#", "self", ".", "assertEqual", "(", "nt", "[", "2", "]", ",", "nt", ".", "packets_sent", ")", "#NEWLINE#", "self", "nt", ".", "packets_recv", ")", "#NEWLINE#", "self", ".", "assertEqual", "errin", ")", "#NEWLINE#", "self", ".", "assertEqual", "(", "nt", "#NEWLINE#", "self", ".", "assertEqual", "(", "nt", "[", "6", "]", ",", "nt", ".", "dropin", ")", "#NEWLINE#", "self", "#NEWLINE#", "#UNINDENT#", "ret", "=", "psutil", ".", "network_io_counters", "(", "pernic", "=", "False", ")", "#NEWLINE#", "check_ntuple", "(", "ret", ")", "#NEWLINE#", "ret", "=", "psutil", ".", "network_io_counters", "(", "pernic", "=", "True", ")", "#NEWLINE#", "assert", "(", "ret", "!=", "[", "]", ")", "#NEWLINE#", "for", "key", "in", "ret", ":", "#NEWLINE#", "#INDENT#", "assert", "key", "#NEWLINE#", "check_ntuple", "(", "ret", "[", "key", "]", ")"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [110, 117, 123, 85, 119, 2, 13, 19, 25, 39, 45, 51, 57, 71, 74, 87, 90, 103, 112, 121]}}
{"prediction": {"error_location": 0.923468828201294, "repair_targets": [], "repair_candidates": [0.00013899081386625767, 0.00037385974428616464, 2.6371382773504592e-05, 5.72795033804141e-05, 0.017766527831554413, 0.0005085680168122053, 0.00021096059936098754, 0.00022370154329109937, 0.14317214488983154, 0.15255974233150482, 0.03260788694024086, 0.007853899151086807, 0.07033184170722961, 0.0032604304142296314, 0.4645603895187378, 0.008775167167186737, 0.00867580808699131, 0.020335519686341286, 0.0651891902089119, 0.003371764672920108], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 14:14:56.938065", "n_pass": [152, 12, 11], "n_token": 122, "loss": [0.07993875443935394, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def test_network_io_counters(", "self", ")", ":", "#NEWLINE#", "#INDENT#", "def check_ntuple(", "nt", ")", ":", "#NEWLINE#", "#INDENT#", "self", ".", "assertEqual", "bytes_sent", ")", "#NEWLINE#", "self", ".", "assertEqual", "(", "nt", "#NEWLINE#", "self", ".", "assertEqual", "(", "nt", "[", "2", "]", ",", "nt", ".", "packets_sent", ")", "#NEWLINE#", "self", "nt", ".", "packets_recv", ")", "#NEWLINE#", "self", ".", "assertEqual", "errin", ")", "#NEWLINE#", "self", ".", "assertEqual", "(", "nt", "#NEWLINE#", "self", ".", "assertEqual", "(", "nt", "[", "6", "]", ",", "nt", ".", "dropin", ")", "#NEWLINE#", "self", "#NEWLINE#", "#UNINDENT#", "ret", "=", "pernic", "=", "False", ")", "#NEWLINE#", "check_ntuple", "(", "ret", ")", "#NEWLINE#", "ret", "=", "psutil", ".", "network_io_counters", "(", "pernic", "=", "True", ")", "#NEWLINE#", "assert", "(", "ret", "!=", "[", "]", ")", "#NEWLINE#", "for", "key", "in", "ret", ":", "#NEWLINE#", "#INDENT#", "assert", "key", "#NEWLINE#", "check_ntuple", "(", "ret", "[", "key", "]", ")"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [106, 113, 119, 81, 115, 2, 13, 19, 25, 39, 45, 51, 57, 71, 74, 83, 86, 99, 108, 117]}}
{"prediction": {"error_location": 0.9231727719306946, "repair_targets": [], "repair_candidates": [0.00013614729687105864, 0.0003675754414871335, 2.5529994672979228e-05, 5.6589909945614636e-05, 0.01610472984611988, 0.0005527593893930316, 0.0001805221982067451, 0.0001546421117382124, 0.10524698346853256, 0.21709300577640533, 0.03708823397755623, 0.014791037887334824, 0.08481840789318085, 0.003802195657044649, 0.4165116548538208, 0.009118548594415188, 0.007915157824754715, 0.016303660348057747, 0.06634578108787537, 0.003386774333193898], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 14:14:57.068169", "n_pass": [153, 13, 12], "n_token": 118, "loss": [0.13725870847702026, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def test_network_io_counters(", "self", ")", ":", "#NEWLINE#", "#INDENT#", "def check_ntuple(", "nt", ")", ":", "#NEWLINE#", "#INDENT#", "self", ".", "assertEqual", "bytes_sent", ")", "#NEWLINE#", "self", ".", "assertEqual", "(", "nt", "#NEWLINE#", "self", ".", "assertEqual", "(", "nt", "[", "2", "]", ",", "nt", ".", "packets_sent", ")", "#NEWLINE#", "self", "nt", ".", "packets_recv", ")", "#NEWLINE#", "self", ".", "assertEqual", "errin", ")", "#NEWLINE#", "self", ".", "assertEqual", "(", "nt", "#NEWLINE#", "self", ".", "assertEqual", "(", "nt", "[", "6", "]", ",", "nt", ".", "dropin", ")", "#NEWLINE#", "self", "#NEWLINE#", "#UNINDENT#", "ret", "=", "#NEWLINE#", "check_ntuple", "(", "ret", ")", "#NEWLINE#", "ret", "=", "psutil", ".", "network_io_counters", "(", "pernic", "=", "True", ")", "#NEWLINE#", "assert", "(", "ret", "!=", "[", "]", ")", "#NEWLINE#", "for", "key", "in", "ret", ":", "#NEWLINE#", "#INDENT#", "assert", "key", "#NEWLINE#", "check_ntuple", "(", "ret", "[", "key", "]", ")"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [102, 109, 115, 77, 111, 2, 13, 19, 25, 39, 45, 51, 57, 71, 74, 79, 82, 95, 104, 113]}}
{"prediction": {"error_location": 0.8717445135116577, "repair_targets": [], "repair_candidates": [0.00020417262567207217, 0.0005362122901715338, 3.694240513141267e-05, 8.412347960984334e-05, 0.018028639256954193, 0.0007762640598230064, 0.00014310955884866416, 0.0002545759780332446, 0.2405732274055481, 0.06337963044643402, 0.007343134842813015, 0.0057535902597010136, 0.08137170225381851, 0.005077080335468054, 0.34932568669319153, 0.015503776259720325, 0.013521479442715645, 0.018810251727700233, 0.17169465124607086, 0.007581766694784164], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 14:14:57.196794", "n_pass": [156, 14, 13], "n_token": 114, "loss": [0.13248592615127563, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def test_network_io_counters(", "self", ")", ":", "#NEWLINE#", "#INDENT#", "def check_ntuple(", "nt", ")", ":", "#NEWLINE#", "#INDENT#", "self", ".", "assertEqual", "bytes_sent", ")", "#NEWLINE#", "self", ".", "assertEqual", "(", "nt", "#NEWLINE#", "self", ".", "assertEqual", "(", "nt", "[", "2", "]", ",", "nt", ".", "packets_sent", ")", "#NEWLINE#", "self", "nt", ".", "packets_recv", ")", "#NEWLINE#", "self", ".", "assertEqual", "errin", ")", "#NEWLINE#", "self", ".", "assertEqual", "(", "nt", "#NEWLINE#", "self", ".", "assertEqual", "(", "nt", "[", "6", "]", ",", "nt", ".", "dropin", ")", "#NEWLINE#", "self", "#NEWLINE#", "#UNINDENT#", "ret", "=", "#NEWLINE#", "check_ntuple", "(", "ret", ")", "#NEWLINE#", "ret", "=", "pernic", "=", "True", ")", "#NEWLINE#", "assert", "(", "ret", "!=", "[", "]", ")", "#NEWLINE#", "for", "key", "in", "ret", ":", "#NEWLINE#", "#INDENT#", "assert", "key", "#NEWLINE#", "check_ntuple", "(", "ret", "[", "key", "]", ")"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [98, 105, 111, 77, 107, 2, 13, 19, 25, 39, 45, 51, 57, 71, 74, 79, 82, 91, 100, 109]}}
{"prediction": {"error_location": 0.8759151697158813, "repair_targets": [], "repair_candidates": [0.0001535502087790519, 0.00041735213017091155, 2.8229669624124654e-05, 6.630522693740204e-05, 0.015979843214154243, 0.0003253818431403488, 9.63773563853465e-05, 0.00017405541439075023, 0.11728864908218384, 0.05308442935347557, 0.005709837190806866, 0.004593322053551674, 0.28711727261543274, 0.00669123837724328, 0.3589553236961365, 0.011155696585774422, 0.009575345553457737, 0.014750966802239418, 0.10853805392980576, 0.005298745818436146], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 14:14:57.323351", "n_pass": [157, 15, 14], "n_token": 109, "loss": [0.2016552984714508, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def test_network_io_counters(", "self", ")", ":", "#NEWLINE#", "#INDENT#", "def check_ntuple(", "nt", ")", ":", "#NEWLINE#", "#INDENT#", "self", ".", "assertEqual", "bytes_sent", ")", "#NEWLINE#", "self", ".", "assertEqual", "(", "nt", "#NEWLINE#", "self", ".", "assertEqual", "(", "nt", "[", "2", "]", ",", "nt", ".", "packets_sent", ")", "#NEWLINE#", "self", "nt", ".", "packets_recv", ")", "#NEWLINE#", "self", ".", "assertEqual", "errin", ")", "#NEWLINE#", "self", ".", "assertEqual", "(", "nt", "#NEWLINE#", "self", ".", "assertEqual", "(", "nt", "[", "6", "]", ",", "nt", ".", "dropin", ")", "#NEWLINE#", "self", "#NEWLINE#", "#UNINDENT#", "ret", "=", "#NEWLINE#", "check_ntuple", "(", "ret", ")", "#NEWLINE#", "ret", "=", "assert", "(", "ret", "!=", "[", "]", ")", "#NEWLINE#", "for", "key", "in", "ret", ":", "#NEWLINE#", "#INDENT#", "assert", "key", "#NEWLINE#", "check_ntuple", "(", "ret", "[", "key", "]", ")"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [93, 100, 106, 77, 102, 2, 13, 19, 25, 39, 45, 51, 57, 71, 74, 79, 82, 86, 95, 104]}}
{"prediction": {"error_location": 0.8173764944076538, "repair_targets": [], "repair_candidates": [0.0001632072526263073, 0.0004301972803659737, 2.7687161491485313e-05, 5.7241304602939636e-05, 0.011824291199445724, 0.00021264489623717964, 0.00013286333705764264, 0.00020855206821579486, 0.21285724639892578, 0.07647359371185303, 0.007726205512881279, 0.013026258908212185, 0.26389437913894653, 0.00740676699206233, 0.2508408725261688, 0.006025722716003656, 0.00662491749972105, 0.01298572402447462, 0.12287401407957077, 0.006207583472132683], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 14:14:57.447557", "n_pass": [164, 16, 15], "n_token": 105, "loss": [0.1649310141801834, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def test_network_io_counters(", "self", ")", "nt", ")", ":", "#NEWLINE#", "#INDENT#", "self", ".", "assertEqual", "bytes_sent", ")", "#NEWLINE#", "self", ".", "assertEqual", "(", "nt", "#NEWLINE#", "self", ".", "assertEqual", "(", "nt", "[", "2", "]", ",", "nt", ".", "packets_sent", ")", "#NEWLINE#", "self", "nt", ".", "packets_recv", ")", "#NEWLINE#", "self", ".", "assertEqual", "errin", ")", "#NEWLINE#", "self", ".", "assertEqual", "(", "nt", "#NEWLINE#", "self", ".", "assertEqual", "(", "nt", "[", "6", "]", ",", "nt", ".", "dropin", ")", "#NEWLINE#", "self", "#NEWLINE#", "#UNINDENT#", "ret", "=", "#NEWLINE#", "check_ntuple", "(", "ret", ")", "#NEWLINE#", "ret", "=", "assert", "(", "ret", "!=", "[", "]", ")", "#NEWLINE#", "for", "key", "in", "ret", ":", "#NEWLINE#", "#INDENT#", "assert", "key", "#NEWLINE#", "check_ntuple", "(", "ret", "[", "key", "]", ")"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [89, 96, 102, 73, 98, 2, 9, 15, 21, 35, 41, 47, 53, 67, 70, 75, 78, 82, 91, 100]}}
{"prediction": {"error_location": 0.8479523062705994, "repair_targets": [], "repair_candidates": [0.00020719924941658974, 0.0007106033153831959, 4.347247158875689e-05, 6.205724639585242e-05, 0.02679312787950039, 0.00027349049923941493, 0.0001329598162556067, 0.00018873605586122721, 0.2324407547712326, 0.08180366456508636, 0.010552708059549332, 0.009117009118199348, 0.31759315729141235, 0.006388503592461348, 0.22024084627628326, 0.0035951551981270313, 0.004517366643995047, 0.010304155759513378, 0.07122921943664551, 0.0038058804348111153], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 14:14:57.568291", "n_pass": [165, 17, 16], "n_token": 101, "loss": [0.22736769914627075, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def test_network_io_counters(", "self", ")", "#INDENT#", "self", ".", "assertEqual", "bytes_sent", ")", "#NEWLINE#", "self", ".", "assertEqual", "(", "nt", "#NEWLINE#", "self", ".", "assertEqual", "(", "nt", "[", "2", "]", ",", "nt", ".", "packets_sent", ")", "#NEWLINE#", "self", "nt", ".", "packets_recv", ")", "#NEWLINE#", "self", ".", "assertEqual", "errin", ")", "#NEWLINE#", "self", ".", "assertEqual", "(", "nt", "#NEWLINE#", "self", ".", "assertEqual", "(", "nt", "[", "6", "]", ",", "nt", ".", "dropin", ")", "#NEWLINE#", "self", "#NEWLINE#", "#UNINDENT#", "ret", "=", "#NEWLINE#", "check_ntuple", "(", "ret", ")", "#NEWLINE#", "ret", "=", "assert", "(", "ret", "!=", "[", "]", ")", "#NEWLINE#", "for", "key", "in", "ret", ":", "#NEWLINE#", "#INDENT#", "assert", "key", "#NEWLINE#", "check_ntuple", "(", "ret", "[", "key", "]", ")"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [85, 92, 98, 69, 94, 2, 5, 11, 17, 31, 37, 43, 49, 63, 66, 71, 74, 78, 87, 96]}}
{"prediction": {"error_location": 0.7966280579566956, "repair_targets": [], "repair_candidates": [0.00010328109783586115, 5.162498928257264e-05, 7.408137753373012e-05, 8.486444130539894e-05, 0.04469249024987221, 0.00044166756561025977, 7.770662341499701e-05, 0.00014098621613811702, 0.2941506505012512, 0.10286377370357513, 0.009372247382998466, 0.0035374369472265244, 0.25069859623908997, 0.0029697169084101915, 0.21106189489364624, 0.0030698471236974, 0.004585635382682085, 0.008298903703689575, 0.06141503155231476, 0.002309575444087386], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 14:14:57.689276", "n_pass": [168, 18, 17], "n_token": 97, "loss": [0.24961715936660767, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def test_network_io_counters(", "self", ")", "#INDENT#", "self", ".", "assertEqual", "bytes_sent", ")", "#NEWLINE#", "self", "#NEWLINE#", "self", ".", "assertEqual", "(", "nt", "[", "2", "]", ",", "nt", ".", "packets_sent", ")", "#NEWLINE#", "self", "nt", ".", "packets_recv", ")", "#NEWLINE#", "self", ".", "assertEqual", "errin", ")", "#NEWLINE#", "self", ".", "assertEqual", "(", "nt", "#NEWLINE#", "self", ".", "assertEqual", "(", "nt", "[", "6", "]", ",", "nt", ".", "dropin", ")", "#NEWLINE#", "self", "#NEWLINE#", "#UNINDENT#", "ret", "=", "#NEWLINE#", "check_ntuple", "(", "ret", ")", "#NEWLINE#", "ret", "=", "assert", "(", "ret", "!=", "[", "]", ")", "#NEWLINE#", "for", "key", "in", "ret", ":", "#NEWLINE#", "#INDENT#", "assert", "key", "#NEWLINE#", "check_ntuple", "(", "ret", "[", "key", "]", ")"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [81, 88, 94, 65, 90, 2, 5, 11, 13, 27, 33, 39, 45, 59, 62, 67, 70, 74, 83, 92]}}
{"prediction": {"error_location": 0.7790989279747009, "repair_targets": [], "repair_candidates": [8.412094757659361e-05, 4.736214395961724e-05, 0.10614380240440369, 0.000927389832213521, 0.03092862293124199, 0.00034253447665832937, 0.00010824432683875784, 9.269732981920242e-05, 0.2539081275463104, 0.09347467869520187, 0.007963556796312332, 0.004458998329937458, 0.2358674854040146, 0.0031818419229239225, 0.17239314317703247, 0.0039035987574607134, 0.0043395874090492725, 0.007489494979381561, 0.07063302397727966, 0.003711691126227379], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 14:14:57.806906", "n_pass": [170, 19, 18], "n_token": 93, "loss": [0.3430478572845459, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def test_network_io_counters(", "self", ")", "#INDENT#", "self", ".", "assertEqual", "bytes_sent", ")", "#NEWLINE#", "self", "#NEWLINE#", "self", ".", "assertEqual", "]", ",", "nt", ".", "packets_sent", ")", "#NEWLINE#", "self", "nt", ".", "packets_recv", ")", "#NEWLINE#", "self", ".", "assertEqual", "errin", ")", "#NEWLINE#", "self", ".", "assertEqual", "(", "nt", "#NEWLINE#", "self", ".", "assertEqual", "(", "nt", "[", "6", "]", ",", "nt", ".", "dropin", ")", "#NEWLINE#", "self", "#NEWLINE#", "#UNINDENT#", "ret", "=", "#NEWLINE#", "check_ntuple", "(", "ret", ")", "#NEWLINE#", "ret", "=", "assert", "(", "ret", "!=", "[", "]", ")", "#NEWLINE#", "for", "key", "in", "ret", ":", "#NEWLINE#", "#INDENT#", "assert", "key", "#NEWLINE#", "check_ntuple", "(", "ret", "[", "key", "]", ")"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [77, 84, 90, 61, 86, 2, 5, 11, 13, 23, 29, 35, 41, 55, 58, 63, 66, 70, 79, 88]}}
{"prediction": {"error_location": 0.7096042037010193, "repair_targets": [], "repair_candidates": [6.997388118179515e-05, 7.33635388314724e-05, 0.036575835198163986, 0.13176733255386353, 0.0444510281085968, 0.00041496698395349085, 0.00012132131814723834, 0.00010499535710550845, 0.28630322217941284, 0.06707912683486938, 0.0074296919628977776, 0.003412307472899556, 0.20414923131465912, 0.0024177194572985172, 0.14386647939682007, 0.0026179589331150055, 0.0034344212617725134, 0.006431626155972481, 0.05656306818127632, 0.002716334071010351], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 14:14:57.922523", "n_pass": [171, 20, 19], "n_token": 89, "loss": [0.3155144453048706, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def test_network_io_counters(", "self", ")", "#INDENT#", "self", ".", "assertEqual", "bytes_sent", ")", "#NEWLINE#", "self", "#NEWLINE#", "self", ".", "assertEqual", "packets_sent", ")", "#NEWLINE#", "self", "nt", ".", "packets_recv", ")", "#NEWLINE#", "self", ".", "assertEqual", "errin", ")", "#NEWLINE#", "self", ".", "assertEqual", "(", "nt", "#NEWLINE#", "self", ".", "assertEqual", "(", "nt", "[", "6", "]", ",", "nt", ".", "dropin", ")", "#NEWLINE#", "self", "#NEWLINE#", "#UNINDENT#", "ret", "=", "#NEWLINE#", "check_ntuple", "(", "ret", ")", "#NEWLINE#", "ret", "=", "assert", "(", "ret", "!=", "[", "]", ")", "#NEWLINE#", "for", "key", "in", "ret", ":", "#NEWLINE#", "#INDENT#", "assert", "key", "#NEWLINE#", "check_ntuple", "(", "ret", "[", "key", "]", ")"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [73, 80, 86, 57, 82, 2, 5, 11, 13, 19, 25, 31, 37, 51, 54, 59, 62, 66, 75, 84]}}
{"prediction": {"error_location": 0.7294134497642517, "repair_targets": [], "repair_candidates": [0.0001384559291182086, 9.67450687312521e-05, 0.028029220178723335, 0.002887182170525193, 0.10440757870674133, 0.0010055698221549392, 0.00028296938398852944, 0.0003443594032432884, 0.2437012940645218, 0.1145397275686264, 0.0072446041740477085, 0.00822446122765541, 0.2125193178653717, 0.0034827725030481815, 0.16188980638980865, 0.004353569354861975, 0.005681138020008802, 0.010350443422794342, 0.08496986329555511, 0.005850881803780794], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 14:14:58.037352", "n_pass": [173, 21, 20], "n_token": 85, "loss": [0.28894177079200745, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def test_network_io_counters(", "self", ")", "#INDENT#", "self", ".", "assertEqual", "bytes_sent", ")", "#NEWLINE#", "self", "#NEWLINE#", "self", ".", "assertEqual", "packets_sent", ")", "#NEWLINE#", "self", "#NEWLINE#", "self", ".", "assertEqual", "errin", ")", "#NEWLINE#", "self", ".", "assertEqual", "(", "nt", "#NEWLINE#", "self", ".", "assertEqual", "(", "nt", "[", "6", "]", ",", "nt", ".", "dropin", ")", "#NEWLINE#", "self", "#NEWLINE#", "#UNINDENT#", "ret", "=", "#NEWLINE#", "check_ntuple", "(", "ret", ")", "#NEWLINE#", "ret", "=", "assert", "(", "ret", "!=", "[", "]", ")", "#NEWLINE#", "for", "key", "in", "ret", ":", "#NEWLINE#", "#INDENT#", "assert", "key", "#NEWLINE#", "check_ntuple", "(", "ret", "[", "key", "]", ")"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [69, 76, 82, 53, 78, 2, 5, 11, 13, 19, 21, 27, 33, 47, 50, 55, 58, 62, 71, 80]}}
{"prediction": {"error_location": 0.7490558624267578, "repair_targets": [], "repair_candidates": [9.078844595933333e-05, 4.800365786650218e-05, 0.01902299001812935, 0.001486005261540413, 0.038968220353126526, 0.004028148017823696, 0.0004047953407280147, 0.0004656065721064806, 0.3343225121498108, 0.1078336089849472, 0.008562169969081879, 0.00798224750906229, 0.20797878503799438, 0.003932078834623098, 0.16339394450187683, 0.004137677140533924, 0.004968087188899517, 0.009504122659564018, 0.07879718393087387, 0.004073058255016804], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 14:14:58.148993", "n_pass": [176, 22, 21], "n_token": 81, "loss": [0.3600558340549469, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def test_network_io_counters(", "self", ")", "#INDENT#", "self", ".", "assertEqual", "bytes_sent", ")", "#NEWLINE#", "self", "#NEWLINE#", "self", ".", "assertEqual", "packets_sent", ")", "#NEWLINE#", "self", "#NEWLINE#", "self", ".", "assertEqual", "errin", ")", "#NEWLINE#", "self", "#NEWLINE#", "self", ".", "assertEqual", "(", "nt", "[", "6", "]", ",", "nt", ".", "dropin", ")", "#NEWLINE#", "self", "#NEWLINE#", "#UNINDENT#", "ret", "=", "#NEWLINE#", "check_ntuple", "(", "ret", ")", "#NEWLINE#", "ret", "=", "assert", "(", "ret", "!=", "[", "]", ")", "#NEWLINE#", "for", "key", "in", "ret", ":", "#NEWLINE#", "#INDENT#", "assert", "key", "#NEWLINE#", "check_ntuple", "(", "ret", "[", "key", "]", ")"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [65, 72, 78, 49, 74, 2, 5, 11, 13, 19, 21, 27, 29, 43, 46, 51, 54, 58, 67, 76]}}
{"prediction": {"error_location": 0.6976373195648193, "repair_targets": [], "repair_candidates": [4.7592955525033176e-05, 2.8857448342023417e-05, 0.012470087967813015, 0.0016875816509127617, 0.022042300552129745, 0.0012216450413689017, 0.20837515592575073, 0.0028347698971629143, 0.32739436626434326, 0.088338702917099, 0.006616221275180578, 0.0036293412558734417, 0.16067811846733093, 0.001430327771231532, 0.1056123897433281, 0.001957701751962304, 0.0027700799982994795, 0.005374561529606581, 0.0455341674387455, 0.001955988584086299], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 14:14:58.258558", "n_pass": [178, 23, 22], "n_token": 77, "loss": [0.38223594427108765, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def test_network_io_counters(", "self", ")", "#INDENT#", "self", ".", "assertEqual", "bytes_sent", ")", "#NEWLINE#", "self", "#NEWLINE#", "self", ".", "assertEqual", "packets_sent", ")", "#NEWLINE#", "self", "#NEWLINE#", "self", ".", "assertEqual", "errin", ")", "#NEWLINE#", "self", "#NEWLINE#", "self", ".", "assertEqual", "]", ",", "nt", ".", "dropin", ")", "#NEWLINE#", "self", "#NEWLINE#", "#UNINDENT#", "ret", "=", "#NEWLINE#", "check_ntuple", "(", "ret", ")", "#NEWLINE#", "ret", "=", "assert", "(", "ret", "!=", "[", "]", ")", "#NEWLINE#", "for", "key", "in", "ret", ":", "#NEWLINE#", "#INDENT#", "assert", "key", "#NEWLINE#", "check_ntuple", "(", "ret", "[", "key", "]", ")"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [61, 68, 74, 45, 70, 2, 5, 11, 13, 19, 21, 27, 29, 39, 42, 47, 50, 54, 63, 72]}}
{"prediction": {"error_location": 0.6823339462280273, "repair_targets": [], "repair_candidates": [2.6373627406428568e-05, 1.5964438716764562e-05, 0.006912596989423037, 0.0009687873534858227, 0.01638025790452957, 0.0010174050694331527, 0.11403623968362808, 0.04499342292547226, 0.4783419370651245, 0.05773072689771652, 0.00390805397182703, 0.0021514715626835823, 0.15505450963974, 0.0008075677324086428, 0.07647545635700226, 0.0013567995047196746, 0.0017326329834759235, 0.003127677831798792, 0.03380945324897766, 0.0011526269372552633], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 14:14:58.366746", "n_pass": [179, 24, 23], "n_token": 73, "loss": [0.3566071093082428, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def test_network_io_counters(", "self", ")", "#INDENT#", "self", ".", "assertEqual", "bytes_sent", ")", "#NEWLINE#", "self", "#NEWLINE#", "self", ".", "assertEqual", "packets_sent", ")", "#NEWLINE#", "self", "#NEWLINE#", "self", ".", "assertEqual", "errin", ")", "#NEWLINE#", "self", "#NEWLINE#", "self", ".", "assertEqual", "dropin", ")", "#NEWLINE#", "self", "#NEWLINE#", "#UNINDENT#", "ret", "=", "#NEWLINE#", "check_ntuple", "(", "ret", ")", "#NEWLINE#", "ret", "=", "assert", "(", "ret", "!=", "[", "]", ")", "#NEWLINE#", "for", "key", "in", "ret", ":", "#NEWLINE#", "#INDENT#", "assert", "key", "#NEWLINE#", "check_ntuple", "(", "ret", "[", "key", "]", ")"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [57, 64, 70, 41, 66, 2, 5, 11, 13, 19, 21, 27, 29, 35, 38, 43, 46, 50, 59, 68]}}
{"prediction": {"error_location": 0.7000475525856018, "repair_targets": [], "repair_candidates": [7.291304791579023e-05, 4.287988485884853e-05, 0.013493664562702179, 0.002398602431640029, 0.03149908781051636, 0.0018667192198336124, 0.06194591894745827, 0.0025262623094022274, 0.449171781539917, 0.08109550923109055, 0.005857354030013084, 0.007122439797967672, 0.1873949021100998, 0.0014254575362429023, 0.07010742276906967, 0.0029681858140975237, 0.0028686600271612406, 0.005645611323416233, 0.06986258924007416, 0.002634005155414343], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 14:14:58.475712", "n_pass": [231, 25, 24], "n_token": 71, "loss": [0.33695149421691895, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def test_network_io_counters(", "self", ")", "#INDENT#", "self", ".", "assertEqual", "bytes_sent", ")", "#NEWLINE#", "self", "#NEWLINE#", "self", ".", "assertEqual", "packets_sent", ")", "#NEWLINE#", "self", "#NEWLINE#", "self", ".", "assertEqual", "errin", ")", "#NEWLINE#", "self", "#NEWLINE#", "self", ".", "assertEqual", "#NEWLINE#", "self", "#NEWLINE#", "#UNINDENT#", "ret", "=", "#NEWLINE#", "check_ntuple", "(", "ret", ")", "#NEWLINE#", "ret", "=", "assert", "(", "ret", "!=", "[", "]", ")", "#NEWLINE#", "for", "key", "in", "ret", ":", "#NEWLINE#", "#INDENT#", "assert", "key", "#NEWLINE#", "check_ntuple", "(", "ret", "[", "key", "]", ")"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [55, 62, 68, 39, 64, 2, 5, 11, 13, 19, 21, 27, 29, 33, 36, 41, 44, 48, 57, 66]}}
{"prediction": {"error_location": 0.7139434814453125, "repair_targets": [], "repair_candidates": [9.302695252699777e-05, 4.9718248192220926e-05, 0.017131393775343895, 0.0018923301249742508, 0.02605358138680458, 0.0007645310834050179, 0.022426094859838486, 0.0012370033655315638, 0.44482189416885376, 0.04535333439707756, 0.012316630221903324, 0.01826847530901432, 0.18114927411079407, 0.0023208872880786657, 0.07939283549785614, 0.006049966439604759, 0.004404719453305006, 0.006888119503855705, 0.12477349489927292, 0.004612691234797239], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 14:14:58.580747", "n_pass": [232, 26, 25], "n_token": 69, "loss": [0.7864752411842346, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def test_network_io_counters(", "self", ")", "#INDENT#", "self", ".", "assertEqual", "bytes_sent", ")", "#NEWLINE#", "self", "#NEWLINE#", "self", ".", "assertEqual", "packets_sent", ")", "#NEWLINE#", "self", "#NEWLINE#", "self", ".", "assertEqual", "errin", ")", "#NEWLINE#", "self", "#NEWLINE#", "self", ".", "assertEqual", "#NEWLINE#", "self", "ret", "=", "#NEWLINE#", "check_ntuple", "(", "ret", ")", "#NEWLINE#", "ret", "=", "assert", "(", "ret", "!=", "[", "]", ")", "#NEWLINE#", "for", "key", "in", "ret", ":", "#NEWLINE#", "#INDENT#", "assert", "key", "#NEWLINE#", "check_ntuple", "(", "ret", "[", "key", "]", ")"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [53, 60, 66, 37, 62, 2, 5, 11, 13, 19, 21, 27, 29, 33, 34, 39, 42, 46, 55, 64]}}
{"prediction": {"error_location": 0.45544731616973877, "repair_targets": [], "repair_candidates": [1.5209038792818319e-05, 7.943119271658361e-06, 0.0033415418583899736, 0.0003890785446856171, 0.005656102672219276, 0.00019712962966877967, 0.018288087099790573, 0.0013492649886757135, 0.7716535329818726, 0.15060891211032867, 0.0007198056555353105, 0.0006307455478236079, 0.007154080085456371, 0.0001919382921187207, 0.015070266090333462, 0.0006182008655741811, 0.000567559793125838, 0.0007780220475979149, 0.02181944064795971, 0.0009431036305613816], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 14:14:58.686177", "n_pass": [236, 27, 26], "n_token": 67, "loss": [0.25361183285713196, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def test_network_io_counters(", "self", ")", "#INDENT#", "self", ".", "assertEqual", "bytes_sent", ")", "#NEWLINE#", "self", "#NEWLINE#", "self", ".", "assertEqual", "packets_sent", ")", "#NEWLINE#", "self", "#NEWLINE#", "self", ".", "assertEqual", "errin", ")", "#NEWLINE#", "self", "#NEWLINE#", "self", ".", "assertEqual", "#NEWLINE#", "self", "ret", "=", "#NEWLINE#", "check_ntuple", "(", "ret", "ret", "=", "assert", "(", "ret", "!=", "[", "]", ")", "#NEWLINE#", "for", "key", "in", "ret", ":", "#NEWLINE#", "#INDENT#", "assert", "key", "#NEWLINE#", "check_ntuple", "(", "ret", "[", "key", "]", ")"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [51, 58, 64, 37, 60, 2, 5, 11, 13, 19, 21, 27, 29, 33, 34, 39, 40, 44, 53, 62]}}
{"prediction": {"error_location": 0.7759929299354553, "repair_targets": [], "repair_candidates": [2.9680128136533312e-05, 1.5635689123882912e-05, 0.006133696995675564, 0.0006486328784376383, 0.008985104039311409, 0.00024122398463077843, 0.016996894031763077, 0.0014572440413758159, 0.5232291221618652, 0.3199828267097473, 0.0005462721455842257, 0.005820560269057751, 0.01807677373290062, 0.0005359651404432952, 0.05455724522471428, 0.0012973312987014651, 0.0012310902820900083, 0.002012331737205386, 0.03707479313015938, 0.0011275290744379163], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 14:14:58.789751", "n_pass": [238, 28, 27], "n_token": 65, "loss": [0.24873992800712585, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def test_network_io_counters(", "self", ")", "#INDENT#", "self", ".", "assertEqual", "bytes_sent", ")", "#NEWLINE#", "self", "#NEWLINE#", "self", ".", "assertEqual", "packets_sent", ")", "#NEWLINE#", "self", "#NEWLINE#", "self", ".", "assertEqual", "errin", ")", "#NEWLINE#", "self", "#NEWLINE#", "self", ".", "assertEqual", "#NEWLINE#", "self", "ret", "=", "#NEWLINE#", "check_ntuple", "(", "ret", "ret", "=", "ret", "!=", "[", "]", ")", "#NEWLINE#", "for", "key", "in", "ret", ":", "#NEWLINE#", "#INDENT#", "assert", "key", "#NEWLINE#", "check_ntuple", "(", "ret", "[", "key", "]", ")"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [49, 56, 62, 37, 58, 2, 5, 11, 13, 19, 21, 27, 29, 33, 34, 39, 40, 42, 51, 60]}}
{"prediction": {"error_location": 0.779782772064209, "repair_targets": [], "repair_candidates": [2.7501671866048127e-05, 1.422645800630562e-05, 0.005949041340500116, 0.0006975261494517326, 0.010555557906627655, 0.0003288633015472442, 0.02382143773138523, 0.002237412380054593, 0.6495492458343506, 0.1762389838695526, 0.0012408684706315398, 0.008403759449720383, 0.01956419087946415, 0.002283412264660001, 0.055189307779073715, 0.002014618366956711, 0.0015204744413495064, 0.0019006727961823344, 0.03756900876760483, 0.0008939388208091259], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 14:14:58.891823", "n_pass": [240, 29, 28], "n_token": 63, "loss": [0.24084559082984924, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def test_network_io_counters(", "self", ")", "#INDENT#", "self", ".", "assertEqual", "bytes_sent", ")", "#NEWLINE#", "self", "#NEWLINE#", "self", ".", "assertEqual", "packets_sent", ")", "#NEWLINE#", "self", "#NEWLINE#", "self", ".", "assertEqual", "errin", ")", "#NEWLINE#", "self", "#NEWLINE#", "self", ".", "assertEqual", "#NEWLINE#", "self", "ret", "=", "#NEWLINE#", "check_ntuple", "(", "ret", "ret", "=", "ret", "!=", ")", "#NEWLINE#", "for", "key", "in", "ret", ":", "#NEWLINE#", "#INDENT#", "assert", "key", "#NEWLINE#", "check_ntuple", "(", "ret", "[", "key", "]", ")"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [47, 54, 60, 37, 56, 2, 5, 11, 13, 19, 21, 27, 29, 33, 34, 39, 40, 42, 49, 58]}}
{"prediction": {"error_location": 0.7859629988670349, "repair_targets": [], "repair_candidates": [4.284207534510642e-05, 2.1430874767247587e-05, 0.009309903718531132, 0.0010345353512093425, 0.016567490994930267, 0.0006772139458917081, 0.04570271447300911, 0.005494954530149698, 0.527991771697998, 0.14558812975883484, 0.0016683867434039712, 0.014905262738466263, 0.045272376388311386, 0.0025334698148071766, 0.10739809274673462, 0.0010900802444666624, 0.00301138567738235, 0.003358572255820036, 0.06632344424724579, 0.0020079179666936398], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 14:14:59.094042", "n_pass": [244, 31, 29], "n_token": 60, "loss": [0.2862059772014618, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def test_network_io_counters(", "self", ")", "#INDENT#", "self", ".", "assertEqual", "bytes_sent", ")", "#NEWLINE#", "self", "#NEWLINE#", "self", ".", "assertEqual", "packets_sent", ")", "#NEWLINE#", "self", "#NEWLINE#", "self", ".", "assertEqual", "errin", ")", "#NEWLINE#", "self", "#NEWLINE#", "self", ".", "assertEqual", "#NEWLINE#", "self", "ret", "=", "#NEWLINE#", "check_ntuple", "(", "ret", "ret", "=", "ret", "!=", ")", "#NEWLINE#", "for", "key", "in", "ret", ":", "key", "#NEWLINE#", "check_ntuple", "(", "ret", "[", "key", "]", ")"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [47, 51, 57, 37, 53, 2, 5, 11, 13, 19, 21, 27, 29, 33, 34, 39, 40, 42, 49, 55]}}
{"prediction": {"error_location": 0.7511078715324402, "repair_targets": [], "repair_candidates": [2.3105580112314783e-05, 1.1916895346075762e-05, 0.00549367256462574, 0.0006499699666164815, 0.01831350289285183, 0.0011781181674450636, 0.06164946034550667, 0.017180392518639565, 0.7092776894569397, 0.127500981092453, 0.0007302465965040028, 0.0030617862939834595, 0.010974543169140816, 0.0005650182720273733, 0.025429174304008484, 0.0004504276148509234, 0.0005214309203438461, 0.0037544425576925278, 0.012829171493649483, 0.0004049885901622474], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 14:14:59.194367", "n_pass": [251, 32, 30], "n_token": 58, "loss": [0.29042482376098633, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def test_network_io_counters(", "self", ")", "#INDENT#", "self", "bytes_sent", ")", "#NEWLINE#", "self", "#NEWLINE#", "self", ".", "assertEqual", "packets_sent", ")", "#NEWLINE#", "self", "#NEWLINE#", "self", ".", "assertEqual", "errin", ")", "#NEWLINE#", "self", "#NEWLINE#", "self", ".", "assertEqual", "#NEWLINE#", "self", "ret", "=", "#NEWLINE#", "check_ntuple", "(", "ret", "ret", "=", "ret", "!=", ")", "#NEWLINE#", "for", "key", "in", "ret", ":", "key", "#NEWLINE#", "check_ntuple", "(", "ret", "[", "key", "]", ")"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [45, 49, 55, 35, 51, 2, 5, 9, 11, 17, 19, 25, 27, 31, 32, 37, 38, 40, 47, 53]}}
{"prediction": {"error_location": 0.7479459047317505, "repair_targets": [], "repair_candidates": [1.689979762886651e-05, 0.00196745153516531, 0.0067928144708275795, 0.0009641427313908935, 0.012025104835629463, 0.000834271137136966, 0.0468716062605381, 0.01833384670317173, 0.7188435196876526, 0.1199999526143074, 0.000779721129219979, 0.002003919333219528, 0.01221077423542738, 0.00040589566924609244, 0.04143953323364258, 0.0003230114234611392, 0.0003915196575690061, 0.003948023077100515, 0.011449921876192093, 0.0003980506444349885], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 14:14:59.293835", "n_pass": [252, 33, 31], "n_token": 56, "loss": [0.36899077892303467, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def test_network_io_counters(", "self", ")", "#INDENT#", "self", "#NEWLINE#", "self", "#NEWLINE#", "self", ".", "assertEqual", "packets_sent", ")", "#NEWLINE#", "self", "#NEWLINE#", "self", ".", "assertEqual", "errin", ")", "#NEWLINE#", "self", "#NEWLINE#", "self", ".", "assertEqual", "#NEWLINE#", "self", "ret", "=", "#NEWLINE#", "check_ntuple", "(", "ret", "ret", "=", "ret", "!=", ")", "#NEWLINE#", "for", "key", "in", "ret", ":", "key", "#NEWLINE#", "check_ntuple", "(", "ret", "[", "key", "]", ")"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [43, 47, 53, 33, 49, 2, 5, 7, 9, 15, 17, 23, 25, 29, 30, 35, 36, 38, 45, 51]}}
{"prediction": {"error_location": 0.6914317011833191, "repair_targets": [], "repair_candidates": [5.885511200176552e-06, 0.0001343267795164138, 0.04072755202651024, 0.0007906456594355404, 0.0110407043248415, 0.00041078918729908764, 0.047041717916727066, 0.013408808968961239, 0.7990724444389343, 0.06070621684193611, 0.0003437706327531487, 0.0008970963535830379, 0.005193497519940138, 0.0001409023388987407, 0.012922320514917374, 0.00010209166066488251, 0.00010067753464682028, 0.0011445543495938182, 0.005682218819856644, 0.00013370512169785798], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 14:14:59.391827", "n_pass": [255, 34, 32], "n_token": 54, "loss": [0.3354603946208954, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def test_network_io_counters(", "self", ")", "#INDENT#", "self", "#NEWLINE#", "self", "#NEWLINE#", "self", "packets_sent", ")", "#NEWLINE#", "self", "#NEWLINE#", "self", ".", "assertEqual", "errin", ")", "#NEWLINE#", "self", "#NEWLINE#", "self", ".", "assertEqual", "#NEWLINE#", "self", "ret", "=", "#NEWLINE#", "check_ntuple", "(", "ret", "ret", "=", "ret", "!=", ")", "#NEWLINE#", "for", "key", "in", "ret", ":", "key", "#NEWLINE#", "check_ntuple", "(", "ret", "[", "key", "]", ")"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [41, 45, 51, 31, 47, 2, 5, 7, 9, 13, 15, 21, 23, 27, 28, 33, 34, 36, 43, 49]}}
{"prediction": {"error_location": 0.7150088548660278, "repair_targets": [], "repair_candidates": [1.0973450116580352e-05, 0.00023089996830094606, 0.0030655672308057547, 0.036077097058296204, 0.03178152069449425, 0.0010117742931470275, 0.031560152769088745, 0.012486394494771957, 0.8051431775093079, 0.05354728922247887, 0.00037833122769370675, 0.0008649402880109847, 0.004626695532351732, 0.00010187584848608822, 0.013193093240261078, 8.092946518445387e-05, 9.55672439886257e-05, 0.0014221775345504284, 0.004187976475805044, 0.00013354801922105253], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 14:14:59.488205", "n_pass": [256, 35, 33], "n_token": 52, "loss": [0.37808170914649963, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def test_network_io_counters(", "self", ")", "#INDENT#", "self", "#NEWLINE#", "self", "#NEWLINE#", "self", "#NEWLINE#", "self", "#NEWLINE#", "self", ".", "assertEqual", "errin", ")", "#NEWLINE#", "self", "#NEWLINE#", "self", ".", "assertEqual", "#NEWLINE#", "self", "ret", "=", "#NEWLINE#", "check_ntuple", "(", "ret", "ret", "=", "ret", "!=", ")", "#NEWLINE#", "for", "key", "in", "ret", ":", "key", "#NEWLINE#", "check_ntuple", "(", "ret", "[", "key", "]", ")"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [39, 43, 49, 29, 45, 2, 5, 7, 9, 11, 13, 19, 21, 25, 26, 31, 32, 34, 41, 47]}}
{"prediction": {"error_location": 0.6851746439933777, "repair_targets": [], "repair_candidates": [1.073121984518366e-05, 0.00047466836986131966, 0.005139081738889217, 0.018812350928783417, 0.18656006455421448, 0.0014181782025843859, 0.028219757601618767, 0.009352441877126694, 0.698773205280304, 0.03902560472488403, 0.0002119987620972097, 0.0004128228174522519, 0.002349581802263856, 6.329134339466691e-05, 0.005591962952166796, 5.3789819503435865e-05, 5.552270158659667e-05, 0.000762182695325464, 0.002632932970300317, 7.984692638274282e-05], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 14:14:59.584478", "n_pass": [259, 36, 34], "n_token": 50, "loss": [0.5248860716819763, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def test_network_io_counters(", "self", ")", "#INDENT#", "self", "#NEWLINE#", "self", "#NEWLINE#", "self", "#NEWLINE#", "self", "#NEWLINE#", "self", "errin", ")", "#NEWLINE#", "self", "#NEWLINE#", "self", ".", "assertEqual", "#NEWLINE#", "self", "ret", "=", "#NEWLINE#", "check_ntuple", "(", "ret", "ret", "=", "ret", "!=", ")", "#NEWLINE#", "for", "key", "in", "ret", ":", "key", "#NEWLINE#", "check_ntuple", "(", "ret", "[", "key", "]", ")"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [37, 41, 47, 27, 43, 2, 5, 7, 9, 11, 13, 17, 19, 23, 24, 29, 30, 32, 39, 45]}}
{"prediction": {"error_location": 0.5916228294372559, "repair_targets": [], "repair_candidates": [4.795138920599129e-06, 0.00013683583529200405, 0.005139959044754505, 0.011122828349471092, 0.012374785728752613, 0.09238434582948685, 0.04065871611237526, 0.007729775737971067, 0.7965899109840393, 0.024083375930786133, 0.00015181211347226053, 0.0002299844636581838, 0.0015071297530084848, 2.400207449682057e-05, 0.006022054702043533, 2.4234959710156545e-05, 3.148031100863591e-05, 0.0005180417792871594, 0.0012213008012622595, 4.4659969717031345e-05], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 14:14:59.678819", "n_pass": [260, 37, 35], "n_token": 48, "loss": [0.5042867660522461, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def test_network_io_counters(", "self", ")", "#INDENT#", "self", "#NEWLINE#", "self", "#NEWLINE#", "self", "#NEWLINE#", "self", "#NEWLINE#", "self", "#NEWLINE#", "self", "#NEWLINE#", "self", ".", "assertEqual", "#NEWLINE#", "self", "ret", "=", "#NEWLINE#", "check_ntuple", "(", "ret", "ret", "=", "ret", "!=", ")", "#NEWLINE#", "for", "key", "in", "ret", ":", "key", "#NEWLINE#", "check_ntuple", "(", "ret", "[", "key", "]", ")"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [35, 39, 45, 25, 41, 2, 5, 7, 9, 11, 13, 15, 17, 21, 22, 27, 28, 30, 37, 43]}}
{"prediction": {"error_location": 0.6039360761642456, "repair_targets": [], "repair_candidates": [7.868864486226812e-06, 0.00022492255084216595, 0.004805090371519327, 0.010513966903090477, 0.005218103062361479, 0.009617741219699383, 0.08014394342899323, 0.008249194361269474, 0.8498034477233887, 0.022669803351163864, 0.00014972030476201326, 0.00034189445432275534, 0.0013824828201904893, 2.9446609914884903e-05, 0.004469187930226326, 3.7310612242436036e-05, 3.6650915717473254e-05, 0.0005670818500220776, 0.0016779621364548802, 5.414583574747667e-05], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 14:14:59.772260", "n_pass": [263, 38, 36], "n_token": 46, "loss": [0.7546512484550476, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def test_network_io_counters(", "self", ")", "#INDENT#", "self", "#NEWLINE#", "self", "#NEWLINE#", "self", "#NEWLINE#", "self", "#NEWLINE#", "self", "#NEWLINE#", "self", "#NEWLINE#", "self", "#NEWLINE#", "self", "ret", "=", "#NEWLINE#", "check_ntuple", "(", "ret", "ret", "=", "ret", "!=", ")", "#NEWLINE#", "for", "key", "in", "ret", ":", "key", "#NEWLINE#", "check_ntuple", "(", "ret", "[", "key", "]", ")"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [33, 37, 43, 23, 39, 2, 5, 7, 9, 11, 13, 15, 17, 19, 20, 25, 26, 28, 35, 41]}}
{"prediction": {"error_location": 0.47017455101013184, "repair_targets": [], "repair_candidates": [8.261299626610707e-06, 0.0002796005574055016, 0.003375527448952198, 0.013888231478631496, 0.015271672047674656, 0.0068363468162715435, 0.016745731234550476, 0.2167700231075287, 0.686487078666687, 0.033127810806035995, 0.00019531126599758863, 0.00019421151955612004, 0.0014863010728731751, 1.5228513802867383e-05, 0.003810694208368659, 2.2788875867263414e-05, 2.482926720404066e-05, 0.0004016093153040856, 0.0010214954381808639, 3.722848850884475e-05], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 14:14:59.865601", "n_pass": [270, 39, 37], "n_token": 44, "loss": [1.0881839990615845, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def test_network_io_counters(", "self", ")", "#INDENT#", "self", "#NEWLINE#", "self", "#NEWLINE#", "self", "#NEWLINE#", "self", "#NEWLINE#", "self", "#NEWLINE#", "self", "#NEWLINE#", "self", "#NEWLINE#", "self", "ret", "=", "#NEWLINE#", "check_ntuple", "(", "ret", "ret", "=", "ret", "!=", "for", "key", "in", "ret", ":", "key", "#NEWLINE#", "check_ntuple", "(", "ret", "[", "key", "]", ")"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [31, 35, 41, 23, 37, 2, 5, 7, 9, 11, 13, 15, 17, 19, 20, 25, 26, 28, 33, 39]}}
{"prediction": {"error_location": 0.3368276059627533, "repair_targets": [], "repair_candidates": [7.537920737377135e-06, 0.0002947482862509787, 0.0030889830086380243, 0.012606368400156498, 0.013918861746788025, 0.005856185685843229, 0.013395950198173523, 0.19673365354537964, 0.656503438949585, 0.03572418913245201, 0.00019701705605257303, 0.00030764061375521123, 0.0014440211234614253, 1.2851180144934915e-05, 0.05868571996688843, 3.4531811252236366e-05, 1.9104571038042195e-05, 0.0003389010962564498, 0.0007943194941617548, 3.596435999497771e-05], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 14:15:00.052018", "n_pass": [333, 41, 38], "n_token": 43, "loss": [0.7328551411628723, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def test_network_io_counters(", "self", ")", "#INDENT#", "self", "#NEWLINE#", "self", "#NEWLINE#", "self", "#NEWLINE#", "self", "#NEWLINE#", "self", "#NEWLINE#", "self", "#NEWLINE#", "self", "#NEWLINE#", "self", "ret", "=", "#NEWLINE#", "check_ntuple", "(", "ret", "ret", "=", "ret", "!=", "for", "key", "ret", ":", "key", "#NEWLINE#", "check_ntuple", "(", "ret", "[", "key", "]", ")"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [31, 34, 40, 23, 36, 2, 5, 7, 9, 11, 13, 15, 17, 19, 20, 25, 26, 28, 32, 38]}}
{"prediction": {"error_location": 0.48053500056266785, "repair_targets": [], "repair_candidates": [5.834391231474001e-06, 0.00024871976347640157, 0.002496196422725916, 0.010251005180180073, 0.011306516826152802, 0.004406739957630634, 0.009099451825022697, 0.17595630884170532, 0.7077394723892212, 0.05984657630324364, 0.00014820070646237582, 0.0001891045249067247, 0.0015344750136137009, 1.1457825166871771e-05, 0.0157137680798769, 0.0002389360888628289, 1.2079574844392482e-05, 0.00032026131520979106, 0.00044650546624325216, 2.8376214686431922e-05], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 14:15:00.235361", "n_pass": [340, 43, 39], "n_token": 41, "loss": [0.6578289270401001, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def test_network_io_counters(", "self", ")", "#INDENT#", "self", "#NEWLINE#", "self", "#NEWLINE#", "self", "#NEWLINE#", "self", "#NEWLINE#", "self", "#NEWLINE#", "self", "#NEWLINE#", "self", "#NEWLINE#", "self", "ret", "=", "#NEWLINE#", "check_ntuple", "(", "ret", "ret", "=", "ret", "!=", "for", "key", "ret", ":", "key", "#NEWLINE#", "check_ntuple", "(", "ret", "[", "key"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [31, 34, 40, 23, 36, 2, 5, 7, 9, 11, 13, 15, 17, 19, 20, 25, 26, 28, 32, 38]}}
{"prediction": {"error_location": 0.5179746747016907, "repair_targets": [], "repair_candidates": [5.56136728846468e-06, 0.00028884949279017746, 0.0019248543540015817, 0.009833112359046936, 0.008003991097211838, 0.003094957210123539, 0.01039670780301094, 0.14973491430282593, 0.7580541968345642, 0.04087202250957489, 9.844607848208398e-05, 0.0001230153429787606, 0.0010185091523453593, 8.922587767301593e-06, 0.015744267031550407, 0.00020117942767683417, 1.1796814760600682e-05, 0.00038815828156657517, 0.00018247991101816297, 1.4068360542296432e-05], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 14:15:00.326143", "n_pass": [342, 44, 40], "n_token": 40, "loss": [1.0302231311798096, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "self", ")", "#INDENT#", "self", "#NEWLINE#", "self", "#NEWLINE#", "self", "#NEWLINE#", "self", "#NEWLINE#", "self", "#NEWLINE#", "self", "#NEWLINE#", "self", "#NEWLINE#", "self", "ret", "=", "#NEWLINE#", "check_ntuple", "(", "ret", "ret", "=", "ret", "!=", "for", "key", "ret", ":", "key", "#NEWLINE#", "check_ntuple", "(", "ret", "[", "key"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [30, 33, 39, 22, 35, 1, 4, 6, 8, 10, 12, 14, 16, 18, 19, 24, 25, 27, 31, 37]}}
{"prediction": {"error_location": 0.35692736506462097, "repair_targets": [], "repair_candidates": [0.0005130362114869058, 0.0028754803352057934, 0.0033202243503183126, 0.0069811721332371235, 0.007573836948722601, 0.00308137945830822, 0.009420755319297314, 0.20448261499404907, 0.7021676301956177, 0.047139182686805725, 7.251409988384694e-05, 0.0001080512665794231, 0.0010503503726795316, 8.148102097038645e-06, 0.010566554963588715, 0.00013889757974538952, 1.304155830439413e-05, 0.00021790078608319163, 0.0002510569174773991, 1.8104890841641463e-05], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 14:15:00.596018", "n_pass": [347, 47, 41], "n_token": 39, "loss": [0.9744035601615906, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "self", ")", "#INDENT#", "self", "self", "#NEWLINE#", "self", "#NEWLINE#", "self", "#NEWLINE#", "self", "#NEWLINE#", "self", "#NEWLINE#", "self", "#NEWLINE#", "self", "ret", "=", "#NEWLINE#", "check_ntuple", "(", "ret", "ret", "=", "ret", "!=", "for", "key", "ret", ":", "key", "#NEWLINE#", "check_ntuple", "(", "ret", "[", "key"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [29, 32, 38, 21, 34, 1, 4, 5, 7, 9, 11, 13, 15, 17, 18, 23, 24, 26, 30, 36]}}
{"prediction": {"error_location": 0.37741735577583313, "repair_targets": [], "repair_candidates": [0.0010112125892192125, 0.00025636114878579974, 0.0007899096817709506, 0.004928651265799999, 0.006089102476835251, 0.0036546289920806885, 0.008441583253443241, 0.21351373195648193, 0.7064779996871948, 0.0369134284555912, 7.99283297965303e-05, 9.732969920150936e-05, 0.0009201217326335609, 8.529990736860782e-06, 0.01612781547009945, 0.00017560446576680988, 1.3414069144346286e-05, 0.0002445660065859556, 0.00023498584050685167, 2.107622094627004e-05], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 14:15:00.686097", "n_pass": [349, 48, 42], "n_token": 38, "loss": [0.9609801769256592, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "self", ")", "#INDENT#", "self", "self", "self", "#NEWLINE#", "self", "#NEWLINE#", "self", "#NEWLINE#", "self", "#NEWLINE#", "self", "#NEWLINE#", "self", "ret", "=", "#NEWLINE#", "check_ntuple", "(", "ret", "ret", "=", "ret", "!=", "for", "key", "ret", ":", "key", "#NEWLINE#", "check_ntuple", "(", "ret", "[", "key"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [28, 31, 37, 20, 33, 1, 4, 5, 6, 8, 10, 12, 14, 16, 17, 22, 23, 25, 29, 35]}}
{"prediction": {"error_location": 0.3825177550315857, "repair_targets": [], "repair_candidates": [0.0016857301816344261, 6.0257763834670186e-05, 0.00038511038292199373, 0.0012254525208845735, 0.003898619906976819, 0.003926623612642288, 0.0075303614139556885, 0.22946622967720032, 0.7008687853813171, 0.033745165914297104, 8.261055336333811e-05, 9.290590969612822e-05, 0.000840642664115876, 7.595413535455009e-06, 0.01553101185709238, 0.00018532824469730258, 1.54978934006067e-05, 0.00022898518363945186, 0.00020128664618823677, 2.1785404896945693e-05], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 14:15:00.774775", "n_pass": [351, 49, 43], "n_token": 37, "loss": [1.0182809829711914, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "self", ")", "#INDENT#", "self", "self", "self", "self", "#NEWLINE#", "self", "#NEWLINE#", "self", "#NEWLINE#", "self", "#NEWLINE#", "self", "ret", "=", "#NEWLINE#", "check_ntuple", "(", "ret", "ret", "=", "ret", "!=", "for", "key", "ret", ":", "key", "#NEWLINE#", "check_ntuple", "(", "ret", "[", "key"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [27, 30, 36, 19, 32, 1, 4, 5, 6, 7, 9, 11, 13, 15, 16, 21, 22, 24, 28, 34]}}
{"prediction": {"error_location": 0.36121538281440735, "repair_targets": [], "repair_candidates": [0.0021955438423901796, 0.0001666910684434697, 0.00010769919754238799, 0.0004043801745865494, 0.00019499498012010008, 0.0018492565723136067, 0.011756636202335358, 0.21678096055984497, 0.7222995162010193, 0.02945898286998272, 6.605859380215406e-05, 7.46760779293254e-05, 0.0007702605798840523, 5.976556167297531e-06, 0.013266235589981079, 0.0001555406633997336, 1.142226938100066e-05, 0.00018806751177180558, 0.00022602090029977262, 2.1187763195484877e-05], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 14:15:00.863410", "n_pass": [353, 50, 44], "n_token": 36, "loss": [0.848057746887207, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "self", ")", "#INDENT#", "self", "self", "self", "self", "self", "#NEWLINE#", "self", "#NEWLINE#", "self", "#NEWLINE#", "self", "ret", "=", "#NEWLINE#", "check_ntuple", "(", "ret", "ret", "=", "ret", "!=", "for", "key", "ret", ":", "key", "#NEWLINE#", "check_ntuple", "(", "ret", "[", "key"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [26, 29, 35, 18, 31, 1, 4, 5, 6, 7, 8, 10, 12, 14, 15, 20, 21, 23, 27, 33]}}
{"prediction": {"error_location": 0.4282459318637848, "repair_targets": [], "repair_candidates": [0.0020843942184001207, 0.00032751509570516646, 0.0001692679215921089, 7.011488196440041e-05, 0.00023113023780751973, 3.681797898025252e-05, 0.0065444414503872395, 0.17791031301021576, 0.7763195037841797, 0.025411827489733696, 5.004198828828521e-05, 6.083958942326717e-05, 0.0007424326031468809, 5.555985353566939e-06, 0.009542496874928474, 0.00013794706319458783, 1.0108820788445882e-05, 0.0001436964957974851, 0.00018295070913154632, 1.8607603124110028e-05], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 14:15:00.952139", "n_pass": [355, 51, 45], "n_token": 35, "loss": [0.9337597489356995, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "self", ")", "#INDENT#", "self", "self", "self", "self", "self", "self", "#NEWLINE#", "self", "#NEWLINE#", "self", "ret", "=", "#NEWLINE#", "check_ntuple", "(", "ret", "ret", "=", "ret", "!=", "for", "key", "ret", ":", "key", "#NEWLINE#", "check_ntuple", "(", "ret", "[", "key"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [25, 28, 34, 17, 30, 1, 4, 5, 6, 7, 8, 9, 11, 13, 14, 19, 20, 22, 26, 32]}}
{"prediction": {"error_location": 0.39307311177253723, "repair_targets": [], "repair_candidates": [0.0016084267990663648, 0.00018791692855302244, 0.00012487632920965552, 4.641539271688089e-05, 4.4663098378805444e-05, 0.00023586995666846633, 3.1399758881889284e-05, 0.15220898389816284, 0.8132309317588806, 0.022585541009902954, 4.5685683289775625e-05, 4.068867565365508e-05, 0.0004911036812700331, 4.800013812200632e-06, 0.008673494681715965, 0.00010885241499636322, 9.004318599181715e-06, 0.0001109483273467049, 0.00019130227155983448, 1.9101415091427043e-05], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 14:15:01.039424", "n_pass": [357, 52, 46], "n_token": 34, "loss": [0.5848589539527893, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "self", ")", "#INDENT#", "self", "self", "self", "self", "self", "self", "self", "#NEWLINE#", "self", "ret", "=", "#NEWLINE#", "check_ntuple", "(", "ret", "ret", "=", "ret", "!=", "for", "key", "ret", ":", "key", "#NEWLINE#", "check_ntuple", "(", "ret", "[", "key"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [24, 27, 33, 16, 29, 1, 4, 5, 6, 7, 8, 9, 10, 12, 13, 18, 19, 21, 25, 31]}}
{"prediction": {"error_location": 0.5571845173835754, "repair_targets": [], "repair_candidates": [0.001984120812267065, 0.00021793141786474735, 0.000279314088402316, 0.00017961322737392038, 0.00011682773038046435, 0.00028022818150930107, 0.0006144437938928604, 8.349667768925428e-05, 0.9216926693916321, 0.06051047891378403, 9.430271165911108e-05, 0.00010158043005503714, 0.0011750906705856323, 7.542270850535715e-06, 0.01180520560592413, 0.00021739315707236528, 1.4976142665545922e-05, 0.0001727091148495674, 0.0004139095253776759, 3.813744115177542e-05], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 14:15:01.126454", "n_pass": [359, 53, 47], "n_token": 33, "loss": [0.5310139656066895, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "self", ")", "#INDENT#", "self", "self", "self", "self", "self", "self", "self", "self", "ret", "=", "#NEWLINE#", "check_ntuple", "(", "ret", "ret", "=", "ret", "!=", "for", "key", "ret", ":", "key", "#NEWLINE#", "check_ntuple", "(", "ret", "[", "key"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [23, 26, 32, 15, 28, 1, 4, 5, 6, 7, 8, 9, 10, 11, 12, 17, 18, 20, 24, 30]}}
{"prediction": {"error_location": 0.5880085229873657, "repair_targets": [], "repair_candidates": [0.04088658094406128, 0.0016905207885429263, 0.006572353653609753, 0.01077446062117815, 0.007000417914241552, 0.008988037705421448, 0.03918461501598358, 0.3186221718788147, 0.1076643168926239, 0.018926210701465607, 0.014562100172042847, 0.012416084297001362, 0.1661943942308426, 0.0003421442524995655, 0.2050788551568985, 0.007780319079756737, 0.0005212551332078874, 0.0034835864789783955, 0.028506165370345116, 0.0008054124191403389], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 14:15:01.214085", "n_pass": [362, 54, 48], "n_token": 32, "loss": [0.3196225166320801, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "self", ")", "#INDENT#", "self", "self", "self", "self", "self", "self", "self", "self", "ret", "#NEWLINE#", "check_ntuple", "(", "ret", "ret", "=", "ret", "!=", "for", "key", "ret", ":", "key", "#NEWLINE#", "check_ntuple", "(", "ret", "[", "key"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [22, 25, 31, 14, 27, 1, 4, 5, 6, 7, 8, 9, 10, 11, 12, 16, 17, 19, 23, 29]}}
{"prediction": {"error_location": 0.7264230847358704, "repair_targets": [], "repair_candidates": [0.04356301948428154, 0.004309781361371279, 0.0054165939800441265, 0.017198244109749794, 0.01945308782160282, 0.014863797463476658, 0.038194913417100906, 0.13599880039691925, 0.017949393019080162, 0.0008661691099405289, 0.026881514117121696, 0.04179172217845917, 0.2563338577747345, 0.0009958522859960794, 0.2791930139064789, 0.013936498202383518, 0.0012161496561020613, 0.006450618617236614, 0.07358992099761963, 0.0017969978507608175], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 14:15:01.300051", "n_pass": [363, 55, 49], "n_token": 31, "loss": [0.3494774103164673, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "self", ")", "#INDENT#", "self", "self", "self", "self", "self", "self", "self", "self", "ret", "check_ntuple", "(", "ret", "ret", "=", "ret", "!=", "for", "key", "ret", ":", "key", "#NEWLINE#", "check_ntuple", "(", "ret", "[", "key"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [21, 24, 30, 13, 26, 1, 4, 5, 6, 7, 8, 9, 10, 11, 12, 15, 16, 18, 22, 28]}}
{"prediction": {"error_location": 0.7050564289093018, "repair_targets": [], "repair_candidates": [0.037028808146715164, 0.001791351125575602, 0.005236028227955103, 0.014409931376576424, 0.010179918259382248, 0.012413126416504383, 0.04404185339808464, 0.17681406438350677, 0.030254272744059563, 0.0012485727202147245, 0.02559506893157959, 0.021854467689990997, 0.2201654016971588, 0.0008201418677344918, 0.295399934053421, 0.013616279698908329, 0.001076420652680099, 0.006689169909805059, 0.07958479225635529, 0.0017803438240662217], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 14:15:01.385276", "n_pass": [365, 56, 50], "n_token": 30, "loss": [0.372732549905777, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "self", ")", "#INDENT#", "self", "self", "self", "self", "self", "self", "self", "self", "ret", "check_ntuple", "ret", "ret", "=", "ret", "!=", "for", "key", "ret", ":", "key", "#NEWLINE#", "check_ntuple", "(", "ret", "[", "key"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [20, 23, 29, 13, 25, 1, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 15, 17, 21, 27]}}
{"prediction": {"error_location": 0.6888493895530701, "repair_targets": [], "repair_candidates": [0.03584660217165947, 0.0017166368197649717, 0.00664062425494194, 0.010563372634351254, 0.007527562323957682, 0.009434414096176624, 0.03526916727423668, 0.26973193883895874, 0.051754407584667206, 0.0007104148389771581, 0.017830053344368935, 0.05495534464716911, 0.2378665804862976, 0.00045116766705177724, 0.1979353278875351, 0.007633834145963192, 0.0006010857759974897, 0.0035216230899095535, 0.04890134185552597, 0.001108556054532528], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 14:15:01.471740", "n_pass": [368, 57, 51], "n_token": 29, "loss": [0.2606716752052307, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "self", ")", "#INDENT#", "self", "self", "self", "self", "self", "self", "self", "self", "ret", "check_ntuple", "ret", "ret", "ret", "!=", "for", "key", "ret", ":", "key", "#NEWLINE#", "check_ntuple", "(", "ret", "[", "key"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [19, 22, 28, 13, 24, 1, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 15, 16, 20, 26]}}
{"prediction": {"error_location": 0.7705339193344116, "repair_targets": [], "repair_candidates": [0.04783153906464577, 0.0016962701920419931, 0.007416564505547285, 0.014567629434168339, 0.010078066028654575, 0.012680425308644772, 0.042566683143377304, 0.17783299088478088, 0.0234395582228899, 0.0008173218811862171, 0.019495166838169098, 0.014978570863604546, 0.002913182834163308, 0.0007760453154332936, 0.49157410860061646, 0.03726278617978096, 0.0014993976801633835, 0.010402653366327286, 0.07995683699846268, 0.0022142953239381313], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 14:15:01.555600", "n_pass": [370, 58, 52], "n_token": 28, "loss": [0.13824588060379028, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "self", ")", "#INDENT#", "self", "self", "self", "self", "self", "self", "self", "self", "ret", "check_ntuple", "ret", "ret", "ret", "for", "key", "ret", ":", "key", "#NEWLINE#", "check_ntuple", "(", "ret", "[", "key"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [18, 21, 27, 13, 23, 1, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 15, 16, 19, 25]}}
{"prediction": {"error_location": 0.8708845376968384, "repair_targets": [], "repair_candidates": [0.03505429998040199, 0.0012139652390033007, 0.0046086907386779785, 0.011731925420463085, 0.008751819841563702, 0.01018011849373579, 0.03286043182015419, 0.11957287788391113, 0.0173121839761734, 0.0008753680740483105, 0.027291202917695045, 0.019519589841365814, 0.002840302884578705, 0.0005632000393234193, 0.4957111179828644, 0.12264260649681091, 0.0022026109509170055, 0.011719937436282635, 0.07350322604179382, 0.0018445004243403673], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 14:15:01.638994", "n_pass": [371, 59, 53], "n_token": 27, "loss": [0.5130475163459778, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "self", ")", "#INDENT#", "self", "self", "self", "self", "self", "self", "self", "self", "ret", "check_ntuple", "ret", "ret", "ret", "key", "ret", ":", "key", "#NEWLINE#", "check_ntuple", "(", "ret", "[", "key"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [17, 20, 26, 13, 22, 1, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 15, 16, 18, 24]}}
{"prediction": {"error_location": 0.5986683368682861, "repair_targets": [], "repair_candidates": [0.11323728412389755, 0.0036239326000213623, 0.010643458925187588, 0.03354873135685921, 0.023669378831982613, 0.026074150577187538, 0.08386704325675964, 0.29180917143821716, 0.04217668995261192, 0.0036670768167823553, 0.07406497001647949, 0.0353546105325222, 0.0027930368669331074, 0.0009151148842647672, 0.02026013471186161, 0.005547516513615847, 0.005111149046570063, 0.02934543788433075, 0.18598465621471405, 0.008306491188704967], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 14:15:01.805723", "n_pass": [381, 61, 54], "n_token": 26, "loss": [0.1561698168516159, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "self", "#INDENT#", "self", "self", "self", "self", "self", "self", "self", "self", "ret", "check_ntuple", "ret", "ret", "ret", "key", "ret", ":", "key", "#NEWLINE#", "check_ntuple", "(", "ret", "[", "key"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [16, 19, 25, 12, 21, 1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 14, 15, 17, 23]}}
{"prediction": {"error_location": 0.8554139137268066, "repair_targets": [], "repair_candidates": [0.04434363543987274, 0.00591411255300045, 0.0119124511256814, 0.036264028400182724, 0.024682147428393364, 0.023584594950079918, 0.04547008126974106, 0.07529539614915848, 0.012975481338799, 0.003685698611661792, 0.09091783314943314, 0.05945650115609169, 0.007309441454708576, 0.0017060100799426436, 0.035933829843997955, 0.01098356768488884, 0.006692389491945505, 0.036298368126153946, 0.4571680724620819, 0.009406299330294132], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 14:15:01.888873", "n_pass": [382, 62, 55], "n_token": 25, "loss": [0.1040557324886322, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "self", "self", "self", "self", "self", "self", "self", "self", "self", "ret", "check_ntuple", "ret", "ret", "ret", "key", "ret", ":", "key", "#NEWLINE#", "check_ntuple", "(", "ret", "[", "key"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [15, 18, 24, 11, 20, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 12, 13, 14, 16, 22]}}
{"prediction": {"error_location": 0.9011751413345337, "repair_targets": [], "repair_candidates": [0.015939267352223396, 0.003899815259501338, 0.006485383026301861, 0.026739491149783134, 0.053872834891080856, 0.046780604869127274, 0.08814762532711029, 0.1426500380039215, 0.01680184341967106, 0.00368350837379694, 0.059894051402807236, 0.04714085906744003, 0.005985199473798275, 0.001224727020598948, 0.035970065742731094, 0.011091617867350578, 0.0060128928162157536, 0.03219093009829521, 0.389256089925766, 0.006233227904886007], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 14:15:01.972130", "n_pass": [398, 63, 56], "n_token": 24, "loss": [0.25267118215560913, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "self", "self", "self", "self", "self", "self", "self", "self", "self", "ret", "check_ntuple", "ret", "ret", "ret", "key", "ret", "key", "#NEWLINE#", "check_ntuple", "(", "ret", "[", "key"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [15, 17, 23, 11, 19, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 12, 13, 14, 16, 21]}}
{"prediction": {"error_location": 0.7767233848571777, "repair_targets": [], "repair_candidates": [0.029162488877773285, 0.005686569027602673, 0.005668741185218096, 0.021076476201415062, 0.07543966174125671, 0.06087695062160492, 0.08416139334440231, 0.09447681903839111, 0.013311568647623062, 0.0036028779577463865, 0.06286578625440598, 0.04322672262787819, 0.007029748987406492, 0.0013640127144753933, 0.031980499625205994, 0.011206022463738918, 0.031863585114479065, 0.02086048014461994, 0.39164838194847107, 0.004491189029067755], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 14:15:02.055982", "n_pass": [427, 64, 57], "n_token": 23, "loss": [0.15282051265239716, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "self", "self", "self", "self", "self", "self", "self", "self", "self", "ret", "check_ntuple", "ret", "ret", "ret", "key", "ret", "key", "#NEWLINE#", "check_ntuple", "ret", "[", "key"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [15, 17, 22, 11, 19, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 12, 13, 14, 16, 20]}}
{"prediction": {"error_location": 0.8582836985588074, "repair_targets": [], "repair_candidates": [0.0464932955801487, 0.009061343967914581, 0.008470139466226101, 0.03101470321416855, 0.10109234601259232, 0.06772522628307343, 0.07175400853157043, 0.10220509767532349, 0.014858456328511238, 0.004309327807277441, 0.06608042865991592, 0.04477443918585777, 0.013184216804802418, 0.0014068958116695285, 0.05381425842642784, 0.02062060311436653, 0.02677919529378414, 0.10429409891366959, 0.20977026224136353, 0.0022916237358003855], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 14:15:02.137238", "n_pass": [428, 65, 58], "n_token": 22, "loss": [0.44294771552085876, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "self", "self", "self", "self", "self", "self", "self", "self", "self", "ret", "check_ntuple", "ret", "ret", "ret", "key", "ret", "key", "#NEWLINE#", "check_ntuple", "ret", "key"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [15, 17, 21, 11, 19, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 12, 13, 14, 16, 20]}}
{"prediction": {"error_location": 0.642140805721283, "repair_targets": [], "repair_candidates": [0.05050446838140488, 0.010098649188876152, 0.009711424820125103, 0.037538107484579086, 0.10403507202863693, 0.06581354886293411, 0.09041577577590942, 0.12384592741727829, 0.01993183046579361, 0.005410572048276663, 0.10158852487802505, 0.049097511917352676, 0.02058192901313305, 0.0017578719416633248, 0.08360270410776138, 0.029827432706952095, 0.04267909377813339, 0.07152319699525833, 0.06966031342744827, 0.012376032769680023], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 14:15:02.218747", "n_pass": [448, 66, 59], "n_token": 21, "loss": [0.2106989026069641, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "self", "self", "self", "self", "self", "self", "self", "self", "self", "ret", "check_ntuple", "ret", "ret", "ret", "key", "ret", "key", "check_ntuple", "ret", "key"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [15, 17, 20, 11, 18, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 12, 13, 14, 16, 19]}}
{"prediction": {"error_location": 0.8100179433822632, "repair_targets": [], "repair_candidates": [0.06939874589443207, 0.013339645229279995, 0.01225835271179676, 0.04365640878677368, 0.13129094243049622, 0.09988278895616531, 0.11183787137269974, 0.13043120503425598, 0.021005338057875633, 0.006029737647622824, 0.07693874090909958, 0.03566305711865425, 0.007535694632679224, 0.0017317186575382948, 0.04511568695306778, 0.014001501724123955, 0.04406239092350006, 0.08419609814882278, 0.029048290103673935, 0.022575803101062775], "target_probs": 0.0}}




Minimal simplified tokens:

['#NEWLINE#', 'self', 'self', 'self', 'self', 'self', 'self', 'self', 'self', 'self', 'ret', 'check_ntuple', 'ret', 'ret', 'ret', 'key', 'ret', 'key', 'check_ntuple', 'ret', 'key']
