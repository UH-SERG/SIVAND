
Original sample:

{"has_bug": false, "bug_kind": 0, "bug_kind_name": "NONE", "source_tokens": ["#NEWLINE#", "def do_pending_operations(", "self", ",", "model", ")", ":", "#NEWLINE#", "#INDENT#", "'\\n        Take a newly-prepared model and pass it to each function waiting for\\n        it. This is called at the very end of `Apps.register_model()`.\\n        '", "#NEWLINE#", "key", "=", "(", "model", ".", "_meta", ".", "app_label", ",", "model", ".", "_meta", ".", "model_name", ")", "#NEWLINE#", "for", "function", "in", "self", ".", "_pending_operations", ".", "pop", "(", "key", ",", "[", "]", ")", ":", "#NEWLINE#", "#INDENT#", "function", "(", "model", ")"], "error_location": [0], "repair_targets": [], "repair_candidates": [28, 44, 2, 30, 4, 14, 20, 46, 11, 36], "provenances": [{"datasetProvenance": {"datasetName": "ETHPy150Open", "filepath": "django/django/django/apps/registry.py", "license": "bsd-3-clause", "note": "license: manual_eval"}}], "txt_file": "eval__VARIABLE_MISUSE__SStuB.txt-00000-of-00300", "js_count": 300, "results": {"model": "rnn", "prob": {"loc": [[0.8770254254341125, 2.1457601633301238e-06, 3.1548363494948717e-06, 1.0408781037085646e-07, 9.890976571114152e-07, 1.1818512390959768e-08, 1.1775131980584774e-08, 5.247500212135492e-07, 3.425324734962487e-07, 6.02492136181354e-08, 1.9371109374333173e-05, 2.5332263930977206e-07, 2.0740158035437162e-08, 1.6692791859895806e-07, 0.01927807927131653, 1.3060542869425262e-07, 2.0885163394268602e-05, 8.663571406941628e-07, 7.385363574030634e-07, 2.6829113153326034e-08, 0.00890752486884594, 2.854350498182612e-07, 3.148682662867941e-05, 5.053777840657858e-07, 1.75648847289267e-06, 9.389601700604544e-07, 1.1567877663765103e-05, 1.2360921175513795e-07, 1.0233243301627226e-06, 5.461084384705828e-08, 5.832770057168091e-06, 6.621067250023316e-09, 2.4027754079725128e-06, 4.125551900102664e-09, 7.789188316564832e-08, 6.180139422440334e-08, 0.001502355677075684, 8.34234583635407e-07, 1.6413310959251248e-06, 1.7993323126574978e-05, 4.0663783806849096e-07, 1.0623823527566856e-06, 5.706730007659644e-06, 2.4104056706164556e-07, 1.5508425121879554e-06, 1.363813794341695e-06, 0.09314867854118347, 1.0803553323057713e-06]], "pointer": [[0.0, 0.0, 0.28253763914108276, 0.0, 0.053006190806627274, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.4752312898635864, 0.0, 0.0, 0.013433711603283882, 0.0, 0.0, 0.0, 0.0, 0.0, 0.02395879104733467, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.146448016166687, 0.0, 0.00016702842549420893, 0.0, 0.0, 0.0, 0.0, 0.0, 0.001909244223497808, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.002388712717220187, 0.0, 0.0009194306330755353, 0.0]], "target": [0.0]}, "loss": [0.13121917843818665, 0.0], "acc": [1.0, 0.0, 0.0, 0.0]}}


Trace of simplified code(s):

{"result": {"time": "2021-02-11 14:34:53.683816", "n_pass": [1, 1, 1], "n_token": 48, "loss": [0.13121917843818665, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def do_pending_operations(", "self", ",", "model", ")", ":", "#NEWLINE#", "#INDENT#", "'\\n        Take a newly-prepared model and pass it to each function waiting for\\n        it. This is called at the very end of `Apps.register_model()`.\\n        '", "#NEWLINE#", "key", "=", "(", "model", ".", "_meta", ".", "app_label", ",", "model", ".", "_meta", ".", "model_name", ")", "#NEWLINE#", "for", "function", "in", "self", ".", "_pending_operations", ".", "pop", "(", "key", ",", "[", "]", ")", ":", "#NEWLINE#", "#INDENT#", "function", "(", "model", ")"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [28, 44, 2, 30, 4, 14, 20, 46, 11, 36]}}
{"prediction": {"error_location": 0.8770254254341125, "repair_targets": [], "repair_candidates": [0.28253763914108276, 0.053006190806627274, 0.4752312898635864, 0.013433711603283882, 0.02395879104733467, 0.146448016166687, 0.00016702842549420893, 0.001909244223497808, 0.002388712717220187, 0.0009194306330755353], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 14:34:53.759068", "n_pass": [46, 2, 2], "n_token": 45, "loss": [0.18382835388183594, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def do_pending_operations(", "self", ",", "model", ")", "'\\n        Take a newly-prepared model and pass it to each function waiting for\\n        it. This is called at the very end of `Apps.register_model()`.\\n        '", "#NEWLINE#", "key", "=", "(", "model", ".", "_meta", ".", "app_label", ",", "model", ".", "_meta", ".", "model_name", ")", "#NEWLINE#", "for", "function", "in", "self", ".", "_pending_operations", ".", "pop", "(", "key", ",", "[", "]", ")", ":", "#NEWLINE#", "#INDENT#", "function", "(", "model", ")"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [25, 41, 2, 27, 4, 11, 17, 43, 8, 33]}}
{"prediction": {"error_location": 0.832078754901886, "repair_targets": [], "repair_candidates": [0.48897477984428406, 0.013059626333415508, 0.3578832447528839, 0.011727347038686275, 0.018719982355833054, 0.10399912297725677, 0.00016830666572786868, 0.0021468179766088724, 0.0022013981360942125, 0.0011194050312042236], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 14:34:53.828579", "n_pass": [48, 3, 3], "n_token": 42, "loss": [0.3054196536540985, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def do_pending_operations(", "self", ",", "model", ")", "'\\n        Take a newly-prepared model and pass it to each function waiting for\\n        it. This is called at the very end of `Apps.register_model()`.\\n        '", "#NEWLINE#", "key", "=", "(", "model", "app_label", ",", "model", ".", "_meta", ".", "model_name", ")", "#NEWLINE#", "for", "function", "in", "self", ".", "_pending_operations", ".", "pop", "(", "key", ",", "[", "]", ")", ":", "#NEWLINE#", "#INDENT#", "function", "(", "model", ")"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [22, 38, 2, 24, 4, 11, 14, 40, 8, 30]}}
{"prediction": {"error_location": 0.736814022064209, "repair_targets": [], "repair_candidates": [0.06674663722515106, 0.009072951041162014, 0.7626479864120483, 0.012167482636868954, 0.05942092090845108, 0.08399206399917603, 0.00031701914849691093, 0.0029359827749431133, 0.0014026545686647296, 0.001296220812946558], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 14:34:54.032381", "n_pass": [54, 6, 4], "n_token": 39, "loss": [0.5746206641197205, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def do_pending_operations(", "self", ",", "model", ")", "'\\n        Take a newly-prepared model and pass it to each function waiting for\\n        it. This is called at the very end of `Apps.register_model()`.\\n        '", "#NEWLINE#", "key", "=", "(", "model", "app_label", ",", "model", ".", "_meta", ".", "model_name", ")", "#NEWLINE#", "for", "function", "in", "self", ".", "_pending_operations", "key", ",", "[", "]", ")", ":", "#NEWLINE#", "#INDENT#", "function", "(", "model", ")"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [22, 35, 2, 24, 4, 11, 14, 37, 8, 27]}}
{"prediction": {"error_location": 0.5629184246063232, "repair_targets": [], "repair_candidates": [0.03629476949572563, 0.005271884612739086, 0.914570689201355, 0.0022973252926021814, 0.015419308096170425, 0.020918291062116623, 0.00038250803481787443, 0.0038416304159909487, 0.00048243365017697215, 0.0005211041425354779], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 14:34:54.368931", "n_pass": [97, 11, 5], "n_token": 37, "loss": [0.6602951884269714, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def do_pending_operations(", "self", ",", "model", ")", "'\\n        Take a newly-prepared model and pass it to each function waiting for\\n        it. This is called at the very end of `Apps.register_model()`.\\n        '", "#NEWLINE#", "key", "=", "(", "model", "app_label", ",", "model", ".", "_meta", ".", "model_name", ")", "#NEWLINE#", "for", "function", "in", "self", ".", "_pending_operations", "key", ",", ")", ":", "#NEWLINE#", "#INDENT#", "function", "(", "model", ")"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [22, 33, 2, 24, 4, 11, 14, 35, 8, 27]}}
{"prediction": {"error_location": 0.5166987776756287, "repair_targets": [], "repair_candidates": [0.041025836020708084, 0.0041169701144099236, 0.9184839725494385, 0.0016985820839181542, 0.006404360290616751, 0.020673252642154694, 0.0002811115118674934, 0.006406269036233425, 0.00046416750410571694, 0.0004454580193851143], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 14:34:54.569590", "n_pass": [103, 14, 6], "n_token": 36, "loss": [0.5923740267753601, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "self", ",", "model", ")", "'\\n        Take a newly-prepared model and pass it to each function waiting for\\n        it. This is called at the very end of `Apps.register_model()`.\\n        '", "#NEWLINE#", "key", "=", "(", "model", "app_label", ",", "model", ".", "_meta", ".", "model_name", ")", "#NEWLINE#", "for", "function", "in", "self", ".", "_pending_operations", "key", ",", ")", ":", "#NEWLINE#", "#INDENT#", "function", "(", "model", ")"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [21, 32, 1, 23, 3, 10, 13, 34, 7, 26]}}
{"prediction": {"error_location": 0.5530128479003906, "repair_targets": [], "repair_candidates": [0.04874272644519806, 0.005732573568820953, 0.9202982783317566, 0.0007326987688429654, 0.004979012534022331, 0.012710032053291798, 0.00013494300947058946, 0.0063162497244775295, 0.00015807959425728768, 0.00019549472199287266], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 14:34:54.635798", "n_pass": [105, 15, 7], "n_token": 35, "loss": [0.8794877529144287, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "self", "model", ")", "'\\n        Take a newly-prepared model and pass it to each function waiting for\\n        it. This is called at the very end of `Apps.register_model()`.\\n        '", "#NEWLINE#", "key", "=", "(", "model", "app_label", ",", "model", ".", "_meta", ".", "model_name", ")", "#NEWLINE#", "for", "function", "in", "self", ".", "_pending_operations", "key", ",", ")", ":", "#NEWLINE#", "#INDENT#", "function", "(", "model", ")"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [20, 31, 1, 22, 2, 9, 12, 33, 6, 25]}}
{"prediction": {"error_location": 0.4149954319000244, "repair_targets": [], "repair_candidates": [0.005607111379504204, 0.05791158601641655, 0.9284022450447083, 0.0010262137511745095, 0.0017227015923708677, 0.0035081463865935802, 5.687312295776792e-05, 0.0015922837192192674, 8.222660835599527e-05, 9.062317258212715e-05], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 14:34:54.965303", "n_pass": [112, 20, 8], "n_token": 34, "loss": [0.6647196412086487, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "self", "model", ")", "'\\n        Take a newly-prepared model and pass it to each function waiting for\\n        it. This is called at the very end of `Apps.register_model()`.\\n        '", "#NEWLINE#", "key", "=", "model", "app_label", ",", "model", ".", "_meta", ".", "model_name", ")", "#NEWLINE#", "for", "function", "in", "self", ".", "_pending_operations", "key", ",", ")", ":", "#NEWLINE#", "#INDENT#", "function", "(", "model", ")"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [19, 30, 1, 21, 2, 8, 11, 32, 6, 24]}}
{"prediction": {"error_location": 0.5144177675247192, "repair_targets": [], "repair_candidates": [0.0002004715643124655, 0.0006175954476930201, 0.9971241354942322, 0.0001607185258762911, 0.0002833645266946405, 0.0014136569807305932, 5.384759333537659e-06, 0.00015760409587528557, 1.6543810488656163e-05, 2.0587200197041966e-05], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 14:34:55.030555", "n_pass": [114, 21, 9], "n_token": 33, "loss": [0.8022217154502869, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "self", "model", ")", "'\\n        Take a newly-prepared model and pass it to each function waiting for\\n        it. This is called at the very end of `Apps.register_model()`.\\n        '", "#NEWLINE#", "key", "=", "model", ",", "model", ".", "_meta", ".", "model_name", ")", "#NEWLINE#", "for", "function", "in", "self", ".", "_pending_operations", "key", ",", ")", ":", "#NEWLINE#", "#INDENT#", "function", "(", "model", ")"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [18, 29, 1, 20, 2, 8, 10, 31, 6, 23]}}
{"prediction": {"error_location": 0.4483318328857422, "repair_targets": [], "repair_candidates": [0.012890193611383438, 0.13826502859592438, 0.8417186141014099, 0.0009306925931014121, 0.00020069829770363867, 0.004754848312586546, 1.4604809621232562e-05, 0.0010922381188720465, 7.21966935088858e-05, 6.101259350543842e-05], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 14:34:55.157771", "n_pass": [117, 23, 10], "n_token": 31, "loss": [0.8548625111579895, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "self", "model", ")", "'\\n        Take a newly-prepared model and pass it to each function waiting for\\n        it. This is called at the very end of `Apps.register_model()`.\\n        '", "#NEWLINE#", "key", "=", "model", ",", "model", ".", "_meta", ")", "#NEWLINE#", "for", "function", "in", "self", ".", "_pending_operations", "key", ",", ")", ":", "#NEWLINE#", "#INDENT#", "function", "(", "model", ")"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [16, 27, 1, 18, 2, 8, 10, 29, 6, 21]}}
{"prediction": {"error_location": 0.4253416359424591, "repair_targets": [], "repair_candidates": [0.007150429300963879, 0.07763919979333878, 0.9113789200782776, 0.00043533844291232526, 6.769460014766082e-05, 0.0027689337730407715, 9.261808372684754e-06, 0.00045557646080851555, 4.60594856122043e-05, 4.8472626076545566e-05], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 14:34:55.474790", "n_pass": [130, 28, 11], "n_token": 30, "loss": [0.9240034818649292, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "self", "model", "'\\n        Take a newly-prepared model and pass it to each function waiting for\\n        it. This is called at the very end of `Apps.register_model()`.\\n        '", "#NEWLINE#", "key", "=", "model", ",", "model", ".", "_meta", ")", "#NEWLINE#", "for", "function", "in", "self", ".", "_pending_operations", "key", ",", ")", ":", "#NEWLINE#", "#INDENT#", "function", "(", "model", ")"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [15, 26, 1, 17, 2, 7, 9, 28, 5, 20]}}
{"prediction": {"error_location": 0.39692676067352295, "repair_targets": [], "repair_candidates": [0.0033281859941780567, 0.010946248658001423, 0.9812715649604797, 0.0007689527119509876, 9.652753942646086e-05, 0.0029028826393187046, 1.2380742191453464e-05, 0.0004999611410312355, 6.084218330215663e-05, 0.00011240089952480048], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 14:34:55.537895", "n_pass": [131, 29, 12], "n_token": 29, "loss": [0.7635818123817444, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "self", "model", "#NEWLINE#", "key", "=", "model", ",", "model", ".", "_meta", ")", "#NEWLINE#", "for", "function", "in", "self", ".", "_pending_operations", "key", ",", ")", ":", "#NEWLINE#", "#INDENT#", "function", "(", "model", ")"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [14, 25, 1, 16, 2, 6, 8, 27, 4, 19]}}
{"prediction": {"error_location": 0.46599432826042175, "repair_targets": [], "repair_candidates": [0.014587074518203735, 0.390191912651062, 0.5875836610794067, 0.0004299810389056802, 0.00015052456001285464, 0.006317236460745335, 1.9096542018814944e-05, 0.0003887219645548612, 0.00011899776291102171, 0.00021271126752253622], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 14:34:55.662383", "n_pass": [134, 31, 13], "n_token": 28, "loss": [0.5886759757995605, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "self", "model", "#NEWLINE#", "key", "model", ",", "model", ".", "_meta", ")", "#NEWLINE#", "for", "function", "in", "self", ".", "_pending_operations", "key", ",", ")", ":", "#NEWLINE#", "#INDENT#", "function", "(", "model", ")"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [13, 24, 1, 15, 2, 5, 7, 26, 4, 18]}}
{"prediction": {"error_location": 0.5550616979598999, "repair_targets": [], "repair_candidates": [0.03377382829785347, 0.8422937393188477, 0.08354712277650833, 0.013986933045089245, 0.0006679158541373909, 0.022123154252767563, 4.729058127850294e-05, 0.0022078524343669415, 0.0006677088676951826, 0.000684479542542249], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 14:34:55.787586", "n_pass": [138, 33, 14], "n_token": 26, "loss": [0.6641910672187805, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "self", "model", "#NEWLINE#", "key", "model", ",", "model", ".", "_meta", "for", "function", "in", "self", ".", "_pending_operations", "key", ",", ")", ":", "#NEWLINE#", "#INDENT#", "function", "(", "model", ")"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [11, 22, 1, 13, 2, 5, 7, 24, 4, 16]}}
{"prediction": {"error_location": 0.5146896839141846, "repair_targets": [], "repair_candidates": [0.02004093863070011, 0.7614957690238953, 0.04301478713750839, 0.005859421566128731, 0.0006010719807818532, 0.15642504394054413, 0.0008156453259289265, 0.009645055048167706, 0.0007072322187013924, 0.0013949933927506208], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 14:34:55.848124", "n_pass": [141, 34, 15], "n_token": 24, "loss": [0.6595712900161743, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "self", "model", "#NEWLINE#", "key", "model", ",", "model", ".", "_meta", "for", "function", "in", "self", "key", ",", ")", ":", "#NEWLINE#", "#INDENT#", "function", "(", "model", ")"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [11, 20, 1, 13, 2, 5, 7, 22, 4, 14]}}
{"prediction": {"error_location": 0.5170729756355286, "repair_targets": [], "repair_candidates": [0.03553275391459465, 0.46157053112983704, 0.0615665540099144, 0.007016235496848822, 0.0034667891450226307, 0.34571027755737305, 0.07451611757278442, 0.0019998711068183184, 0.0038823529612272978, 0.0047385250218212605], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 14:34:55.907407", "n_pass": [143, 35, 16], "n_token": 22, "loss": [0.7313117384910583, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "self", "model", "#NEWLINE#", "key", "model", ",", "model", ".", "_meta", "for", "function", "in", "self", "key", ",", "#NEWLINE#", "#INDENT#", "function", "(", "model", ")"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [11, 18, 1, 13, 2, 5, 7, 20, 4, 14]}}
{"prediction": {"error_location": 0.4812772274017334, "repair_targets": [], "repair_candidates": [0.05160105600953102, 0.6322335004806519, 0.06438269466161728, 0.00588559964671731, 0.0046119955368340015, 0.1468810737133026, 0.08116766810417175, 0.0013588006841018796, 0.005018949508666992, 0.006858625449240208], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 14:34:55.965547", "n_pass": [144, 36, 17], "n_token": 20, "loss": [0.707158625125885, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "self", "model", "#NEWLINE#", "key", "model", ",", "model", ".", "_meta", "for", "function", "in", "self", "key", ",", "function", "(", "model", ")"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [11, 16, 1, 13, 2, 5, 7, 18, 4, 14]}}
{"prediction": {"error_location": 0.49304306507110596, "repair_targets": [], "repair_candidates": [0.04043256491422653, 0.2722264528274536, 0.029698260128498077, 0.003410341450944543, 0.0023211361840367317, 0.17875546216964722, 0.4683845341205597, 0.0024914569221436977, 0.0011442500399425626, 0.0011355944443494081], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 14:34:56.023487", "n_pass": [150, 37, 18], "n_token": 19, "loss": [0.658106803894043, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "self", "model", "key", "model", ",", "model", ".", "_meta", "for", "function", "in", "self", "key", ",", "function", "(", "model", ")"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [10, 15, 1, 12, 2, 4, 6, 17, 3, 13]}}
{"prediction": {"error_location": 0.5178307890892029, "repair_targets": [], "repair_candidates": [0.020230790600180626, 0.17313171923160553, 0.0864977166056633, 0.016012834385037422, 0.013300367631018162, 0.30542996525764465, 0.38304319977760315, 0.0014256795402616262, 0.0004949707072228193, 0.00043265309068374336], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 14:34:56.083049", "n_pass": [154, 38, 19], "n_token": 17, "loss": [0.4876498878002167, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "self", "model", "key", "model", ",", "model", "for", "function", "in", "self", "key", ",", "function", "(", "model", ")"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [8, 13, 1, 10, 2, 4, 6, 15, 3, 11]}}
{"prediction": {"error_location": 0.614067792892456, "repair_targets": [], "repair_candidates": [0.014814142137765884, 0.08173483610153198, 0.12874962389469147, 0.06356240063905716, 0.08913394063711166, 0.19314917922019958, 0.42573097348213196, 0.0015491698868572712, 0.0009507765644229949, 0.0006249656435102224], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 14:34:56.140028", "n_pass": [178, 39, 20], "n_token": 16, "loss": [0.33893078565597534, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "self", "model", "key", "model", ",", "model", "for", "function", "self", "key", ",", "function", "(", "model", ")"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [8, 12, 1, 9, 2, 4, 6, 14, 3, 10]}}
{"prediction": {"error_location": 0.7125317454338074, "repair_targets": [], "repair_candidates": [0.015883326530456543, 0.15982887148857117, 0.3371066749095917, 0.4021138846874237, 0.0036133327521383762, 0.004865661263465881, 0.06795132160186768, 0.005267633590847254, 0.0016045853262767196, 0.0017647072672843933], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 14:34:56.196080", "n_pass": [180, 40, 21], "n_token": 15, "loss": [0.4285806119441986, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "self", "model", "key", "model", ",", "model", "for", "function", "self", "key", "function", "(", "model", ")"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [8, 11, 1, 9, 2, 4, 6, 13, 3, 10]}}
{"prediction": {"error_location": 0.6514330506324768, "repair_targets": [], "repair_candidates": [0.04489078000187874, 0.40741395950317383, 0.3854422867298126, 0.12364616990089417, 0.004919613711535931, 0.00795599166303873, 0.009789831005036831, 0.005437392275780439, 0.006897127255797386, 0.0036068721674382687], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 14:34:56.307269", "n_pass": [184, 42, 22], "n_token": 14, "loss": [0.40861260890960693, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "self", "model", "key", "model", ",", "model", "for", "function", "self", "key", "function", "(", "model"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [8, 11, 1, 9, 2, 4, 6, 13, 3, 10]}}
{"prediction": {"error_location": 0.6645716428756714, "repair_targets": [], "repair_candidates": [0.04496896266937256, 0.5429132580757141, 0.30201518535614014, 0.06929711997509003, 0.006960156373679638, 0.009999238885939121, 0.012999018654227257, 0.004428917076438665, 0.004494199063628912, 0.001923891599290073], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 14:34:56.362147", "n_pass": [190, 43, 23], "n_token": 13, "loss": [0.24304161965847015, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "self", "model", "key", "model", "model", "for", "function", "self", "key", "function", "(", "model"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [7, 10, 1, 8, 2, 4, 5, 12, 3, 9]}}
{"prediction": {"error_location": 0.7842389941215515, "repair_targets": [], "repair_candidates": [0.009537464939057827, 0.41140520572662354, 0.20549966394901276, 0.13414201140403748, 0.06816300749778748, 0.034711696207523346, 0.12673333287239075, 0.007610191125422716, 0.0019082007929682732, 0.0002891543845180422], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 14:34:56.473842", "n_pass": [197, 45, 24], "n_token": 12, "loss": [0.26972657442092896, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "self", "model", "key", "model", "model", "for", "function", "self", "key", "function", "model"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [7, 10, 1, 8, 2, 4, 5, 11, 3, 9]}}
{"prediction": {"error_location": 0.7635881900787354, "repair_targets": [], "repair_candidates": [0.010310654528439045, 0.5289092063903809, 0.17689968645572662, 0.10885829478502274, 0.10638906806707382, 0.008386187255382538, 0.04912363365292549, 0.0061317975632846355, 0.0028888036031275988, 0.0021026378963142633], "target_probs": 0.0}}




Minimal simplified tokens:

['#NEWLINE#', 'self', 'model', 'key', 'model', 'model', 'for', 'function', 'self', 'key', 'function', 'model']
