
Original sample:

{"has_bug": false, "bug_kind": 0, "bug_kind_name": "NONE", "source_tokens": ["#NEWLINE#", "def enable(", "instrumentation_key", ",", "*", "args", ",", "**kwargs", ")", ":", "#NEWLINE#", "#INDENT#", "\"Enables the Application Insights logging handler for the root logger for the supplied instrumentation key.\\n    Multiple calls to this function with different instrumentation keys result in multiple handler instances.\\n\\n    .. code:: python\\n\\n        import logging\\n        from applicationinsights.logging import enable\\n\\n        # set up logging\\n        enable('<YOUR INSTRUMENTATION KEY GOES HERE>')\\n\\n        # log something (this will be sent to the Application Insights service as a trace)\\n        logging.info('This is a message')\\n\\n        # logging shutdown will cause a flush of all un-sent telemetry items\\n        # alternatively set up an async channel via enable('<YOUR INSTRUMENTATION KEY GOES HERE>', telemetry_channel=...)\\n\\n    Args:\\n        instrumentation_key (str). the instrumentation key to use while sending telemetry to the service.\\n\\n    Returns:\\n        :class:`ApplicationInsightsHandler`. the newly created or existing handler.\\n    \"", "#NEWLINE#", "if", "(", "not", "instrumentation_key", ")", ":", "#NEWLINE#", "#INDENT#", "raise", "Exception", "(", "'Instrumentation key was required but not provided'", ")", "#NEWLINE#", "#UNINDENT#", "if", "(", "instrumentation_key", "in", "enabled_instrumentation_keys", ")", ":", "#NEWLINE#", "#INDENT#", "logging", ".", "getLogger", "(", ")", ".", "removeHandler", "(", "enabled_instrumentation_keys", "[", "instrumentation_key", "]", ")", "#NEWLINE#", "#UNINDENT#", "handler", "=", "LoggingHandler", "(", "instrumentation_key", ",", "*", "args", ",", "**", "kwargs", ")", "#NEWLINE#", "handler", ".", "setLevel", "(", "logging", ".", "INFO", ")", "#NEWLINE#", "enabled_instrumentation_keys", "[", "instrumentation_key", "]", "=", "handler", "#NEWLINE#", "logging", ".", "getLogger", "(", ")", ".", "addHandler", "(", "handler", ")", "#NEWLINE#", "return", "handler"], "error_location": [0], "repair_targets": [], "repair_candidates": [63, 2, 17, 31, 48, 57, 77, 53, 66, 80, 90, 94, 5, 60], "provenances": [{"datasetProvenance": {"datasetName": "ETHPy150Open", "filepath": "Microsoft/ApplicationInsights-Python/applicationinsights/logging/LoggingHandler.py", "license": "mit", "note": "license: bigquery_api"}}], "txt_file": "eval__VARIABLE_MISUSE__SStuB.txt-00000-of-00300", "js_count": 289, "results": {"model": "rnn", "prob": {"loc": [[0.5701257586479187, 1.4504896626021946e-06, 2.4593105081294198e-06, 2.6582180012724166e-08, 4.6709008216794246e-08, 0.00015938507567625493, 1.1330816285237688e-09, 1.949183570104651e-06, 6.257295126488316e-07, 7.036621063605253e-09, 3.114906803602935e-07, 4.333210199547466e-07, 3.748030863448548e-08, 1.5896396234893473e-06, 2.3217417322030087e-07, 9.383356314174307e-07, 0.00016820809105411172, 0.015625914558768272, 3.3015082863130374e-06, 2.4075160354186664e-07, 1.68125973232236e-06, 1.5712898004949238e-07, 2.3415043415297987e-06, 1.8293501398147782e-06, 5.350009928406507e-07, 9.880354809865821e-07, 1.0028882968526887e-07, 1.4019018124145077e-07, 4.770381110574817e-06, 9.387652539771807e-07, 2.3708602384431288e-05, 0.0058837831020355225, 1.787348992365878e-05, 0.005747984629124403, 3.3955576128619214e-08, 1.1656478449140195e-08, 1.0306052899977658e-06, 4.1190766353338404e-08, 6.651698924997618e-08, 3.340405214657949e-07, 8.214002633621931e-08, 2.084160222182163e-08, 9.323915861614296e-08, 2.4857374114617414e-07, 5.5237840967947704e-08, 2.9694652425860113e-07, 0.026170430704951286, 2.8931892757100286e-06, 0.003752737771719694, 1.962667965926812e-06, 1.0962467911213025e-07, 3.113748050509457e-07, 1.1238650898803826e-07, 2.2299893771560164e-06, 2.370196305889749e-08, 4.536067024218937e-07, 5.989244982629316e-06, 0.07714761048555374, 5.6267264881171286e-05, 6.280435172811849e-06, 0.003817344782873988, 1.203388478643319e-06, 5.195036933969277e-08, 0.0002003295230679214, 1.6959518234216375e-07, 3.222007194381149e-08, 2.3319984165937058e-07, 9.18496567692273e-08, 1.4859409702694393e-08, 2.8785848371626344e-07, 0.00014283126802183688, 6.549207682837732e-07, 8.116463590113199e-08, 2.5704633799250587e-07, 3.4578304166643647e-06, 0.0003374920634087175, 2.472158087130083e-07, 0.0004539092187769711, 4.399257402809553e-09, 8.764297376728791e-08, 0.261582612991333, 3.982322027695773e-08, 6.482850523070738e-08, 1.171201574834413e-06, 9.176832094226484e-08, 4.098395578466807e-08, 8.928724071211036e-08, 1.6029440530473948e-07, 1.58037892106222e-07, 2.13739319576689e-08, 0.008295932784676552, 7.229236302919162e-07, 2.2248390507684235e-07, 8.031339575609309e-07, 0.020229699090123177]], "pointer": [[0.0, 0.0, 0.5111663937568665, 0.0, 0.0, 0.14966847002506256, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.002970438916236162, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.029950983822345734, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.00043126309174112976, 0.0, 0.0, 0.0, 0.0, 0.037536438554525375, 0.0, 0.0, 0.0, 0.003294270485639572, 0.0, 0.0, 0.001412775251083076, 0.0, 0.0, 0.06925807893276215, 0.0, 0.0, 0.0007420193287543952, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.18518856167793274, 0.0, 0.0, 0.0005677603185176849, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.007174500729888678, 0.0, 0.0, 0.0, 0.0006380394333973527]], "target": [0.0]}, "loss": [0.561898410320282, 0.0], "acc": [1.0, 0.0, 0.0, 0.0]}}


Trace of simplified code(s):

{"result": {"time": "2021-02-11 14:30:37.646595", "n_pass": [1, 1, 1], "n_token": 95, "loss": [0.561898410320282, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def enable(", "instrumentation_key", ",", "*", "args", ",", "**kwargs", ")", ":", "#NEWLINE#", "#INDENT#", "\"Enables the Application Insights logging handler for the root logger for the supplied instrumentation key.\\n    Multiple calls to this function with different instrumentation keys result in multiple handler instances.\\n\\n    .. code:: python\\n\\n        import logging\\n        from applicationinsights.logging import enable\\n\\n        # set up logging\\n        enable('<YOUR INSTRUMENTATION KEY GOES HERE>')\\n\\n        # log something (this will be sent to the Application Insights service as a trace)\\n        logging.info('This is a message')\\n\\n        # logging shutdown will cause a flush of all un-sent telemetry items\\n        # alternatively set up an async channel via enable('<YOUR INSTRUMENTATION KEY GOES HERE>', telemetry_channel=...)\\n\\n    Args:\\n        instrumentation_key (str). the instrumentation key to use while sending telemetry to the service.\\n\\n    Returns:\\n        :class:`ApplicationInsightsHandler`. the newly created or existing handler.\\n    \"", "#NEWLINE#", "if", "(", "not", "instrumentation_key", ")", ":", "#NEWLINE#", "#INDENT#", "raise", "Exception", "(", "'Instrumentation key was required but not provided'", ")", "#NEWLINE#", "#UNINDENT#", "if", "(", "instrumentation_key", "in", "enabled_instrumentation_keys", ")", ":", "#NEWLINE#", "#INDENT#", "logging", ".", "getLogger", "(", ")", ".", "removeHandler", "(", "enabled_instrumentation_keys", "[", "instrumentation_key", "]", ")", "#NEWLINE#", "#UNINDENT#", "handler", "=", "LoggingHandler", "(", "instrumentation_key", ",", "*", "args", ",", "**", "kwargs", ")", "#NEWLINE#", "handler", ".", "setLevel", "(", "logging", ".", "INFO", ")", "#NEWLINE#", "enabled_instrumentation_keys", "[", "instrumentation_key", "]", "=", "handler", "#NEWLINE#", "logging", ".", "getLogger", "(", ")", ".", "addHandler", "(", "handler", ")", "#NEWLINE#", "return", "handler"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [63, 2, 17, 31, 48, 57, 77, 53, 66, 80, 90, 94, 5, 60]}}
{"prediction": {"error_location": 0.5701257586479187, "repair_targets": [], "repair_candidates": [0.5111663937568665, 0.14966847002506256, 0.002970438916236162, 0.029950983822345734, 0.00043126309174112976, 0.037536438554525375, 0.003294270485639572, 0.001412775251083076, 0.06925807893276215, 0.0007420193287543952, 0.18518856167793274, 0.0005677603185176849, 0.007174500729888678, 0.0006380394333973527], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 14:30:37.740065", "n_pass": [23, 2, 2], "n_token": 83, "loss": [0.5763310790061951, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def enable(", "instrumentation_key", ",", "*", "args", ",", "**kwargs", ")", ":", "#NEWLINE#", "#INDENT#", "\"Enables the Application Insights logging handler for the root logger for the supplied instrumentation key.\\n    Multiple calls to this function with different instrumentation keys result in multiple handler instances.\\n\\n    .. code:: python\\n\\n        import logging\\n        from applicationinsights.logging import enable\\n\\n        # set up logging\\n        enable('<YOUR INSTRUMENTATION KEY GOES HERE>')\\n\\n        # log something (this will be sent to the Application Insights service as a trace)\\n        logging.info('This is a message')\\n\\n        # logging shutdown will cause a flush of all un-sent telemetry items\\n        # alternatively set up an async channel via enable('<YOUR INSTRUMENTATION KEY GOES HERE>', telemetry_channel=...)\\n\\n    Args:\\n        instrumentation_key (str). the instrumentation key to use while sending telemetry to the service.\\n\\n    Returns:\\n        :class:`ApplicationInsightsHandler`. the newly created or existing handler.\\n    \"", "#NEWLINE#", "if", "(", "not", "instrumentation_key", ")", ":", "#NEWLINE#", "#INDENT#", "raise", "Exception", "(", "'Instrumentation key was required but not provided'", ")", "#NEWLINE#", "#UNINDENT#", "if", "(", "instrumentation_key", "in", "enabled_instrumentation_keys", ")", "[", "instrumentation_key", "]", ")", "#NEWLINE#", "#UNINDENT#", "handler", "=", "LoggingHandler", "(", "instrumentation_key", ",", "*", "args", ",", "**", "kwargs", ")", "#NEWLINE#", "handler", ".", "setLevel", "(", "logging", ".", "INFO", ")", "#NEWLINE#", "enabled_instrumentation_keys", "[", "instrumentation_key", "]", "=", "handler", "#NEWLINE#", "logging", ".", "getLogger", "(", ")", ".", "addHandler", "(", "handler", ")", "#NEWLINE#", "return", "handler"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [51, 2, 17, 31, 36, 45, 65, 41, 54, 68, 78, 82, 5, 48]}}
{"prediction": {"error_location": 0.5619564056396484, "repair_targets": [], "repair_candidates": [0.3851853907108307, 0.18389637768268585, 0.0014376052422448993, 0.026480495929718018, 0.011972860433161259, 0.07261747866868973, 0.003584384685382247, 0.001976013882085681, 0.1025015190243721, 0.001193819916807115, 0.20022021234035492, 0.00045477671665139496, 0.007583125494420528, 0.0008960001287050545], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 14:30:37.830268", "n_pass": [48, 3, 3], "n_token": 77, "loss": [0.3281148672103882, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def enable(", "instrumentation_key", ",", "*", "args", ",", "**kwargs", ")", ":", "#NEWLINE#", "#INDENT#", "\"Enables the Application Insights logging handler for the root logger for the supplied instrumentation key.\\n    Multiple calls to this function with different instrumentation keys result in multiple handler instances.\\n\\n    .. code:: python\\n\\n        import logging\\n        from applicationinsights.logging import enable\\n\\n        # set up logging\\n        enable('<YOUR INSTRUMENTATION KEY GOES HERE>')\\n\\n        # log something (this will be sent to the Application Insights service as a trace)\\n        logging.info('This is a message')\\n\\n        # logging shutdown will cause a flush of all un-sent telemetry items\\n        # alternatively set up an async channel via enable('<YOUR INSTRUMENTATION KEY GOES HERE>', telemetry_channel=...)\\n\\n    Args:\\n        instrumentation_key (str). the instrumentation key to use while sending telemetry to the service.\\n\\n    Returns:\\n        :class:`ApplicationInsightsHandler`. the newly created or existing handler.\\n    \"", "#NEWLINE#", "if", "(", "not", "instrumentation_key", ")", ":", "#NEWLINE#", "#INDENT#", "raise", "Exception", "(", "'Instrumentation key was required but not provided'", ")", "#NEWLINE#", "#UNINDENT#", "if", "(", "instrumentation_key", "in", "enabled_instrumentation_keys", ")", "[", "instrumentation_key", "]", ")", "#NEWLINE#", "#UNINDENT#", "handler", "=", "LoggingHandler", "(", "instrumentation_key", ",", "*", "args", ",", "**", "kwargs", ")", "#NEWLINE#", "handler", ".", "setLevel", "(", "logging", "instrumentation_key", "]", "=", "handler", "#NEWLINE#", "logging", ".", "getLogger", "(", ")", ".", "addHandler", "(", "handler", ")", "#NEWLINE#", "return", "handler"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [51, 2, 17, 31, 36, 45, 59, 41, 54, 62, 72, 76, 5, 48]}}
{"prediction": {"error_location": 0.7202804088592529, "repair_targets": [], "repair_candidates": [0.37190431356430054, 0.18909871578216553, 0.001106145908124745, 0.044935569167137146, 0.008846454322338104, 0.022353867068886757, 0.005113145336508751, 0.013673256151378155, 0.16478489339351654, 0.0002973483642563224, 0.16712836921215057, 0.0022001443430781364, 0.0069596790708601475, 0.0015981703763827682], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 14:30:37.916751", "n_pass": [49, 4, 4], "n_token": 71, "loss": [0.3227848410606384, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def enable(", "instrumentation_key", ",", "*", "args", ",", "**kwargs", ")", ":", "#NEWLINE#", "#INDENT#", "\"Enables the Application Insights logging handler for the root logger for the supplied instrumentation key.\\n    Multiple calls to this function with different instrumentation keys result in multiple handler instances.\\n\\n    .. code:: python\\n\\n        import logging\\n        from applicationinsights.logging import enable\\n\\n        # set up logging\\n        enable('<YOUR INSTRUMENTATION KEY GOES HERE>')\\n\\n        # log something (this will be sent to the Application Insights service as a trace)\\n        logging.info('This is a message')\\n\\n        # logging shutdown will cause a flush of all un-sent telemetry items\\n        # alternatively set up an async channel via enable('<YOUR INSTRUMENTATION KEY GOES HERE>', telemetry_channel=...)\\n\\n    Args:\\n        instrumentation_key (str). the instrumentation key to use while sending telemetry to the service.\\n\\n    Returns:\\n        :class:`ApplicationInsightsHandler`. the newly created or existing handler.\\n    \"", "#NEWLINE#", "if", "(", "not", "instrumentation_key", ")", ":", "#NEWLINE#", "#INDENT#", "raise", "Exception", "(", "'Instrumentation key was required but not provided'", ")", "#NEWLINE#", "#UNINDENT#", "if", "(", "instrumentation_key", "in", "enabled_instrumentation_keys", ")", "[", "instrumentation_key", "]", ")", "#NEWLINE#", "#UNINDENT#", "handler", "=", "LoggingHandler", "(", "instrumentation_key", ",", "*", "args", ",", "**", "kwargs", ")", "#NEWLINE#", "handler", ".", "setLevel", "(", "logging", "instrumentation_key", "]", "=", "handler", "#NEWLINE#", "logging", "(", "handler", ")", "#NEWLINE#", "return", "handler"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [51, 2, 17, 31, 36, 45, 59, 41, 54, 62, 66, 70, 5, 48]}}
{"prediction": {"error_location": 0.7241297364234924, "repair_targets": [], "repair_candidates": [0.337921679019928, 0.21556726098060608, 0.0014854003675282001, 0.0531512126326561, 0.010306249372661114, 0.04406556114554405, 0.008886781521141529, 0.010003860108554363, 0.16059860587120056, 0.00039142611785791814, 0.1490832269191742, 0.0028050714172422886, 0.004028597846627235, 0.001705183181911707], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 14:30:38.001368", "n_pass": [53, 5, 5], "n_token": 65, "loss": [0.3035305440425873, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def enable(", "instrumentation_key", ",", "*", "args", ",", "**kwargs", ")", ":", "#NEWLINE#", "instrumentation_key", ")", ":", "#NEWLINE#", "#INDENT#", "raise", "Exception", "(", "'Instrumentation key was required but not provided'", ")", "#NEWLINE#", "#UNINDENT#", "if", "(", "instrumentation_key", "in", "enabled_instrumentation_keys", ")", "[", "instrumentation_key", "]", ")", "#NEWLINE#", "#UNINDENT#", "handler", "=", "LoggingHandler", "(", "instrumentation_key", ",", "*", "args", ",", "**", "kwargs", ")", "#NEWLINE#", "handler", ".", "setLevel", "(", "logging", "instrumentation_key", "]", "=", "handler", "#NEWLINE#", "logging", "(", "handler", ")", "#NEWLINE#", "return", "handler"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [45, 2, 11, 25, 30, 39, 53, 35, 48, 56, 60, 64, 5, 42]}}
{"prediction": {"error_location": 0.7382072806358337, "repair_targets": [], "repair_candidates": [0.39559775590896606, 0.08601861447095871, 0.10253690183162689, 0.021400798112154007, 0.005941811949014664, 0.06061047315597534, 0.005777551326900721, 0.006291783880442381, 0.11354456841945648, 0.00048720388440415263, 0.192804217338562, 0.0030052654910832644, 0.00392679451033473, 0.0020562259014695883], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 14:30:38.079807", "n_pass": [55, 6, 6], "n_token": 59, "loss": [0.2642427682876587, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def enable(", "instrumentation_key", ",", "*", "args", ",", "**kwargs", ")", ":", "#NEWLINE#", "instrumentation_key", ")", ":", "#NEWLINE#", "#INDENT#", "raise", "if", "(", "instrumentation_key", "in", "enabled_instrumentation_keys", ")", "[", "instrumentation_key", "]", ")", "#NEWLINE#", "#UNINDENT#", "handler", "=", "LoggingHandler", "(", "instrumentation_key", ",", "*", "args", ",", "**", "kwargs", ")", "#NEWLINE#", "handler", ".", "setLevel", "(", "logging", "instrumentation_key", "]", "=", "handler", "#NEWLINE#", "logging", "(", "handler", ")", "#NEWLINE#", "return", "handler"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [39, 2, 11, 19, 24, 33, 47, 29, 42, 50, 54, 58, 5, 36]}}
{"prediction": {"error_location": 0.7677870392799377, "repair_targets": [], "repair_candidates": [0.4311945140361786, 0.0802823156118393, 0.14333529770374298, 0.016465434804558754, 0.006863434333354235, 0.060969363898038864, 0.004595060367137194, 0.003773012198507786, 0.0946408063173294, 0.0004169287858530879, 0.14941760897636414, 0.0027106658089905977, 0.003389169229194522, 0.0019463669741526246], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 14:30:38.158771", "n_pass": [87, 7, 7], "n_token": 56, "loss": [0.46297764778137207, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def enable(", "instrumentation_key", ",", "*", "args", ",", "**kwargs", ")", ":", "#NEWLINE#", "instrumentation_key", ")", ":", "#NEWLINE#", "#INDENT#", "raise", "if", "(", "instrumentation_key", "[", "instrumentation_key", "]", ")", "#NEWLINE#", "#UNINDENT#", "handler", "=", "LoggingHandler", "(", "instrumentation_key", ",", "*", "args", ",", "**", "kwargs", ")", "#NEWLINE#", "handler", ".", "setLevel", "(", "logging", "instrumentation_key", "]", "=", "handler", "#NEWLINE#", "logging", "(", "handler", ")", "#NEWLINE#", "return", "handler"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [36, 2, 11, 19, 21, 30, 44, 26, 39, 47, 51, 55, 5, 33]}}
{"prediction": {"error_location": 0.6294066905975342, "repair_targets": [], "repair_candidates": [0.28415319323539734, 0.09587080776691437, 0.10538097470998764, 0.002074136398732662, 0.002081961603835225, 0.028444606810808182, 0.006412521004676819, 0.021587921306490898, 0.3047714829444885, 0.00018903642194345593, 0.14118249714374542, 0.004184282384812832, 0.002715709386393428, 0.0009508589864708483], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 14:30:38.235312", "n_pass": [89, 8, 8], "n_token": 53, "loss": [0.5790563821792603, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def enable(", "instrumentation_key", ",", "*", "args", ",", "**kwargs", ")", ":", "#NEWLINE#", "instrumentation_key", ")", ":", "#NEWLINE#", "#INDENT#", "raise", "if", "(", "instrumentation_key", "[", "instrumentation_key", "]", "handler", "=", "LoggingHandler", "(", "instrumentation_key", ",", "*", "args", ",", "**", "kwargs", ")", "#NEWLINE#", "handler", ".", "setLevel", "(", "logging", "instrumentation_key", "]", "=", "handler", "#NEWLINE#", "logging", "(", "handler", ")", "#NEWLINE#", "return", "handler"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [33, 2, 11, 19, 21, 27, 41, 23, 36, 44, 48, 52, 5, 30]}}
{"prediction": {"error_location": 0.5604268908500671, "repair_targets": [], "repair_candidates": [0.22630804777145386, 0.04784408584237099, 0.09233366698026657, 0.0012642788933590055, 0.0025312239304184914, 0.34891805052757263, 0.0038854076992720366, 0.01337511744350195, 0.23342488706111908, 0.00013146569835953414, 0.024179600179195404, 0.003881515469402075, 0.0014565048040822148, 0.00046615549945272505], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 14:30:38.387011", "n_pass": [103, 10, 9], "n_token": 50, "loss": [0.6237300634384155, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def enable(", "instrumentation_key", ",", "*", "args", ",", "**kwargs", "instrumentation_key", ")", ":", "#NEWLINE#", "#INDENT#", "raise", "if", "(", "instrumentation_key", "[", "instrumentation_key", "]", "handler", "=", "LoggingHandler", "(", "instrumentation_key", ",", "*", "args", ",", "**", "kwargs", ")", "#NEWLINE#", "handler", ".", "setLevel", "(", "logging", "instrumentation_key", "]", "=", "handler", "#NEWLINE#", "logging", "(", "handler", ")", "#NEWLINE#", "return", "handler"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [30, 2, 8, 16, 18, 24, 38, 20, 33, 41, 45, 49, 5, 27]}}
{"prediction": {"error_location": 0.5359416007995605, "repair_targets": [], "repair_candidates": [0.23540103435516357, 0.09958989918231964, 0.0913754254579544, 0.001394991879351437, 0.002742065116763115, 0.2954257130622864, 0.00358806224539876, 0.0109338890761137, 0.22781036794185638, 0.00013510632561519742, 0.025807969272136688, 0.0037779884878546, 0.0015234093880280852, 0.000494029198307544], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 14:30:38.459496", "n_pass": [105, 11, 10], "n_token": 47, "loss": [0.4608408808708191, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def enable(", "instrumentation_key", ",", "*", "args", ",", "**kwargs", "instrumentation_key", ")", ":", "if", "(", "instrumentation_key", "[", "instrumentation_key", "]", "handler", "=", "LoggingHandler", "(", "instrumentation_key", ",", "*", "args", ",", "**", "kwargs", ")", "#NEWLINE#", "handler", ".", "setLevel", "(", "logging", "instrumentation_key", "]", "=", "handler", "#NEWLINE#", "logging", "(", "handler", ")", "#NEWLINE#", "return", "handler"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [27, 2, 8, 13, 15, 21, 35, 17, 30, 38, 42, 46, 5, 24]}}
{"prediction": {"error_location": 0.6307529807090759, "repair_targets": [], "repair_candidates": [0.22284583747386932, 0.028457149863243103, 0.1467958390712738, 0.0027772272005677223, 0.0028197637293487787, 0.35380327701568604, 0.004124030936509371, 0.009319605305790901, 0.19285526871681213, 0.0001246310566784814, 0.03062555380165577, 0.003487995592877269, 0.0014550038613379002, 0.0005087890895083547], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 14:30:38.607030", "n_pass": [155, 13, 11], "n_token": 46, "loss": [0.596689760684967, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def enable(", "instrumentation_key", ",", "*", "args", ",", "**kwargs", "instrumentation_key", ":", "if", "(", "instrumentation_key", "[", "instrumentation_key", "]", "handler", "=", "LoggingHandler", "(", "instrumentation_key", ",", "*", "args", ",", "**", "kwargs", ")", "#NEWLINE#", "handler", ".", "setLevel", "(", "logging", "instrumentation_key", "]", "=", "handler", "#NEWLINE#", "logging", "(", "handler", ")", "#NEWLINE#", "return", "handler"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [26, 2, 8, 12, 14, 20, 34, 16, 29, 37, 41, 45, 5, 23]}}
{"prediction": {"error_location": 0.5506312251091003, "repair_targets": [], "repair_candidates": [0.1908169835805893, 0.02955496311187744, 0.08419235795736313, 0.007883750833570957, 0.008072358556091785, 0.27806970477104187, 0.004417408723384142, 0.014465573243796825, 0.3445911407470703, 0.0001307272323174402, 0.031179435551166534, 0.004968198947608471, 0.0012672670418396592, 0.0003901312011294067], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 14:30:38.679038", "n_pass": [156, 14, 12], "n_token": 45, "loss": [0.5867760181427002, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def enable(", "instrumentation_key", ",", "*", "args", ",", "**kwargs", "instrumentation_key", "if", "(", "instrumentation_key", "[", "instrumentation_key", "]", "handler", "=", "LoggingHandler", "(", "instrumentation_key", ",", "*", "args", ",", "**", "kwargs", ")", "#NEWLINE#", "handler", ".", "setLevel", "(", "logging", "instrumentation_key", "]", "=", "handler", "#NEWLINE#", "logging", "(", "handler", ")", "#NEWLINE#", "return", "handler"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [25, 2, 8, 11, 13, 19, 33, 15, 28, 36, 40, 44, 5, 22]}}
{"prediction": {"error_location": 0.5561172962188721, "repair_targets": [], "repair_candidates": [0.254107803106308, 0.035976994782686234, 0.031241513788700104, 0.00822923332452774, 0.006627018563449383, 0.23630723357200623, 0.0037307029124349356, 0.014691391959786415, 0.36872443556785583, 0.0001407888630637899, 0.033915597945451736, 0.004716556519269943, 0.0012273916509002447, 0.00036333431489765644], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 14:30:38.750186", "n_pass": [157, 15, 13], "n_token": 44, "loss": [0.6797590851783752, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def enable(", "instrumentation_key", ",", "*", "args", ",", "**kwargs", "instrumentation_key", "(", "instrumentation_key", "[", "instrumentation_key", "]", "handler", "=", "LoggingHandler", "(", "instrumentation_key", ",", "*", "args", ",", "**", "kwargs", ")", "#NEWLINE#", "handler", ".", "setLevel", "(", "logging", "instrumentation_key", "]", "=", "handler", "#NEWLINE#", "logging", "(", "handler", ")", "#NEWLINE#", "return", "handler"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [24, 2, 8, 10, 12, 18, 32, 14, 27, 35, 39, 43, 5, 21]}}
{"prediction": {"error_location": 0.50673907995224, "repair_targets": [], "repair_candidates": [0.34923145174980164, 0.03441666439175606, 0.008832676336169243, 0.012922895140945911, 0.013925801031291485, 0.25999924540519714, 0.005337859969586134, 0.011938512325286865, 0.2621384859085083, 0.0001872419088613242, 0.03257876634597778, 0.00649512792006135, 0.0015165285440161824, 0.00047876383177936077], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 14:30:38.821493", "n_pass": [158, 16, 14], "n_token": 43, "loss": [0.6573575139045715, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def enable(", "instrumentation_key", ",", "*", "args", ",", "**kwargs", "instrumentation_key", "instrumentation_key", "[", "instrumentation_key", "]", "handler", "=", "LoggingHandler", "(", "instrumentation_key", ",", "*", "args", ",", "**", "kwargs", ")", "#NEWLINE#", "handler", ".", "setLevel", "(", "logging", "instrumentation_key", "]", "=", "handler", "#NEWLINE#", "logging", "(", "handler", ")", "#NEWLINE#", "return", "handler"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [23, 2, 8, 9, 11, 17, 31, 13, 26, 34, 38, 42, 5, 20]}}
{"prediction": {"error_location": 0.5182188749313354, "repair_targets": [], "repair_candidates": [0.31998348236083984, 0.030249204486608505, 0.04908858984708786, 0.015498073771595955, 0.07019849121570587, 0.22678060829639435, 0.00882694125175476, 0.011758264154195786, 0.22042414546012878, 0.00022318332048598677, 0.03621605783700943, 0.008595793507993221, 0.0017001698724925518, 0.0004570270830299705], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 14:30:38.891728", "n_pass": [160, 17, 15], "n_token": 42, "loss": [0.7045630812644958, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def enable(", "instrumentation_key", ",", "*", "args", ",", "**kwargs", "instrumentation_key", "instrumentation_key", "instrumentation_key", "]", "handler", "=", "LoggingHandler", "(", "instrumentation_key", ",", "*", "args", ",", "**", "kwargs", ")", "#NEWLINE#", "handler", ".", "setLevel", "(", "logging", "instrumentation_key", "]", "=", "handler", "#NEWLINE#", "logging", "(", "handler", ")", "#NEWLINE#", "return", "handler"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [22, 2, 8, 9, 10, 16, 30, 12, 25, 33, 37, 41, 5, 19]}}
{"prediction": {"error_location": 0.4943245053291321, "repair_targets": [], "repair_candidates": [0.33092451095581055, 0.02148955874145031, 0.023221710696816444, 0.031180674210190773, 0.046795427799224854, 0.058867037296295166, 0.015130219049751759, 0.025816993787884712, 0.40759822726249695, 0.00015529424126725644, 0.026465289294719696, 0.010119101032614708, 0.0018236683681607246, 0.0004123316321056336], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 14:30:38.961703", "n_pass": [162, 18, 16], "n_token": 41, "loss": [0.16975922882556915, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def enable(", "instrumentation_key", ",", "*", "args", ",", "**kwargs", "instrumentation_key", "instrumentation_key", "instrumentation_key", "handler", "=", "LoggingHandler", "(", "instrumentation_key", ",", "*", "args", ",", "**", "kwargs", ")", "#NEWLINE#", "handler", ".", "setLevel", "(", "logging", "instrumentation_key", "]", "=", "handler", "#NEWLINE#", "logging", "(", "handler", ")", "#NEWLINE#", "return", "handler"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [21, 2, 8, 9, 10, 15, 29, 11, 24, 32, 36, 40, 5, 18]}}
{"prediction": {"error_location": 0.8438679575920105, "repair_targets": [], "repair_candidates": [0.44283053278923035, 0.04000856727361679, 0.04728378355503082, 0.05710308998823166, 0.104941725730896, 0.055266134440898895, 0.012623319402337074, 0.007355273701250553, 0.13403283059597015, 0.00022318940318655223, 0.08987516909837723, 0.003281935816630721, 0.0036061157006770372, 0.0015683870296925306], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 14:30:39.033164", "n_pass": [164, 19, 17], "n_token": 39, "loss": [0.3844563364982605, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def enable(", "instrumentation_key", ",", "*", "args", ",", "**kwargs", "instrumentation_key", "instrumentation_key", "instrumentation_key", "handler", "=", "instrumentation_key", ",", "*", "args", ",", "**", "kwargs", ")", "#NEWLINE#", "handler", ".", "setLevel", "(", "logging", "instrumentation_key", "]", "=", "handler", "#NEWLINE#", "logging", "(", "handler", ")", "#NEWLINE#", "return", "handler"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [19, 2, 8, 9, 10, 13, 27, 11, 22, 30, 34, 38, 5, 16]}}
{"prediction": {"error_location": 0.680820643901825, "repair_targets": [], "repair_candidates": [0.17537197470664978, 0.026771435514092445, 0.0937943235039711, 0.14436234533786774, 0.08046533912420273, 0.009315266273915768, 0.016425004228949547, 0.09816588461399078, 0.3217536509037018, 0.00011606920452322811, 0.025543393567204475, 0.0062383622862398624, 0.001332632964476943, 0.00034437034628354013], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 14:30:39.101533", "n_pass": [167, 20, 18], "n_token": 37, "loss": [0.8747933506965637, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def enable(", "instrumentation_key", ",", "*", "args", ",", "**kwargs", "instrumentation_key", "instrumentation_key", "instrumentation_key", "handler", "=", "instrumentation_key", ",", "*", "args", "kwargs", ")", "#NEWLINE#", "handler", ".", "setLevel", "(", "logging", "instrumentation_key", "]", "=", "handler", "#NEWLINE#", "logging", "(", "handler", ")", "#NEWLINE#", "return", "handler"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [17, 2, 8, 9, 10, 13, 25, 11, 20, 28, 32, 36, 5, 16]}}
{"prediction": {"error_location": 0.41694822907447815, "repair_targets": [], "repair_candidates": [0.05862509459257126, 0.23314115405082703, 0.019314249977469444, 0.02498663403093815, 0.00817368645220995, 0.0021783977281302214, 0.0032471218146383762, 0.5477421283721924, 0.097195565700531, 3.4185803087893873e-05, 0.0038818882312625647, 0.0011923765996471047, 0.00022889468527864665, 5.8534486015560105e-05], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 14:30:39.168345", "n_pass": [170, 21, 19], "n_token": 35, "loss": [0.17073002457618713, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def enable(", "instrumentation_key", ",", "*", "args", ",", "**kwargs", "instrumentation_key", "instrumentation_key", "instrumentation_key", "handler", "=", "instrumentation_key", ",", "*", "args", "kwargs", ")", "#NEWLINE#", "handler", "(", "logging", "instrumentation_key", "]", "=", "handler", "#NEWLINE#", "logging", "(", "handler", ")", "#NEWLINE#", "return", "handler"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [17, 2, 8, 9, 10, 13, 23, 11, 20, 26, 30, 34, 5, 16]}}
{"prediction": {"error_location": 0.8430490493774414, "repair_targets": [], "repair_candidates": [0.10721080005168915, 0.16100487112998962, 0.0229327455163002, 0.04870445281267166, 0.025645406916737556, 0.012434924021363258, 0.00481129065155983, 0.49574515223503113, 0.10260332375764847, 0.0007477428880520165, 0.017104072496294975, 0.00045728645636700094, 0.0003604695084504783, 0.0002375546027906239], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 14:30:39.234050", "n_pass": [171, 22, 20], "n_token": 33, "loss": [0.46013343334198, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def enable(", "instrumentation_key", ",", "*", "args", ",", "**kwargs", "instrumentation_key", "instrumentation_key", "instrumentation_key", "handler", "=", "instrumentation_key", ",", "*", "args", "kwargs", ")", "#NEWLINE#", "handler", "instrumentation_key", "]", "=", "handler", "#NEWLINE#", "logging", "(", "handler", ")", "#NEWLINE#", "return", "handler"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [17, 2, 8, 9, 10, 13, 21, 11, 20, 24, 28, 32, 5, 16]}}
{"prediction": {"error_location": 0.631199300289154, "repair_targets": [], "repair_candidates": [0.06589341163635254, 0.1692715287208557, 0.016558567062020302, 0.027258435264229774, 0.009159140288829803, 0.0035893279127776623, 0.003951707389205694, 0.4165416955947876, 0.02366562932729721, 0.009113863110542297, 0.2546887695789337, 0.0001328435610048473, 8.509807230439037e-05, 8.99300939636305e-05], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 14:30:39.299028", "n_pass": [174, 23, 21], "n_token": 31, "loss": [0.6128256916999817, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def enable(", "instrumentation_key", ",", "*", "args", ",", "**kwargs", "instrumentation_key", "instrumentation_key", "instrumentation_key", "handler", "=", "instrumentation_key", ",", "*", "args", "kwargs", ")", "#NEWLINE#", "handler", "instrumentation_key", "]", "=", "handler", "(", "handler", ")", "#NEWLINE#", "return", "handler"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [17, 2, 8, 9, 10, 13, 21, 11, 20, 24, 26, 30, 5, 16]}}
{"prediction": {"error_location": 0.5418177247047424, "repair_targets": [], "repair_candidates": [0.09563162922859192, 0.1514705866575241, 0.022610289976000786, 0.03765146806836128, 0.011556149460375309, 0.004077844321727753, 0.006596717517822981, 0.4540729522705078, 0.030637210234999657, 0.007765449583530426, 0.1773895025253296, 8.4353428974282e-05, 0.00041200005216524005, 4.383817213238217e-05], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 14:30:39.363160", "n_pass": [176, 24, 22], "n_token": 29, "loss": [0.6643299460411072, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def enable(", "instrumentation_key", ",", "*", "args", ",", "**kwargs", "instrumentation_key", "instrumentation_key", "instrumentation_key", "handler", "=", "instrumentation_key", ",", "*", "args", "kwargs", ")", "#NEWLINE#", "handler", "instrumentation_key", "]", "=", "handler", "(", "handler", "return", "handler"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [17, 2, 8, 9, 10, 13, 21, 11, 20, 24, 26, 28, 5, 16]}}
{"prediction": {"error_location": 0.5146182775497437, "repair_targets": [], "repair_candidates": [0.09279109537601471, 0.2198920100927353, 0.020977474749088287, 0.03217214718461037, 0.011793112382292747, 0.00553629407659173, 0.00429409509524703, 0.5406736731529236, 0.024650659412145615, 0.0030835254583507776, 0.04397664591670036, 2.4687076802365482e-05, 0.0001269692147616297, 7.599489435961004e-06], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 14:30:39.429141", "n_pass": [179, 25, 23], "n_token": 28, "loss": [0.7164154648780823, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "instrumentation_key", ",", "*", "args", ",", "**kwargs", "instrumentation_key", "instrumentation_key", "instrumentation_key", "handler", "=", "instrumentation_key", ",", "*", "args", "kwargs", ")", "#NEWLINE#", "handler", "instrumentation_key", "]", "=", "handler", "(", "handler", "return", "handler"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [16, 1, 7, 8, 9, 12, 20, 10, 19, 23, 25, 27, 4, 15]}}
{"prediction": {"error_location": 0.4885002374649048, "repair_targets": [], "repair_candidates": [0.03642246872186661, 0.46804189682006836, 0.004117609467357397, 0.014083386398851871, 0.0061823902651667595, 0.0027413279749453068, 0.0021338360384106636, 0.4262802302837372, 0.023944562301039696, 0.0010269785998389125, 0.014950781129300594, 1.0564946023805533e-05, 5.985997631796636e-05, 4.109760993742384e-06], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 14:30:39.492609", "n_pass": [181, 26, 24], "n_token": 27, "loss": [1.0539178848266602, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "instrumentation_key", "*", "args", ",", "**kwargs", "instrumentation_key", "instrumentation_key", "instrumentation_key", "handler", "=", "instrumentation_key", ",", "*", "args", "kwargs", ")", "#NEWLINE#", "handler", "instrumentation_key", "]", "=", "handler", "(", "handler", "return", "handler"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [15, 1, 6, 7, 8, 11, 19, 9, 18, 22, 24, 26, 3, 14]}}
{"prediction": {"error_location": 0.34856945276260376, "repair_targets": [], "repair_candidates": [0.03771470859646797, 0.5412487983703613, 0.002100202953442931, 0.008084254339337349, 0.004423410166054964, 0.0023009502328932285, 0.0011180692818015814, 0.37592771649360657, 0.020734358578920364, 0.00043032134999521077, 0.00587092898786068, 5.172278633835958e-06, 3.9146747440099716e-05, 1.9128510757582262e-06], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 14:30:39.806665", "n_pass": [221, 31, 25], "n_token": 26, "loss": [0.3194892406463623, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "instrumentation_key", "*", "args", ",", "**kwargs", "instrumentation_key", "instrumentation_key", "instrumentation_key", "handler", "=", "instrumentation_key", "*", "args", "kwargs", ")", "#NEWLINE#", "handler", "instrumentation_key", "]", "=", "handler", "(", "handler", "return", "handler"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [14, 1, 6, 7, 8, 11, 18, 9, 17, 21, 23, 25, 3, 13]}}
{"prediction": {"error_location": 0.7265200614929199, "repair_targets": [], "repair_candidates": [0.04028855264186859, 0.26159900426864624, 0.002326952526345849, 0.010674144141376019, 0.01993231475353241, 0.0050655147060751915, 0.003195367055013776, 0.6305323243141174, 0.01664716750383377, 0.0008569278288632631, 0.008805060759186745, 8.93224569153972e-06, 6.364346336340532e-05, 4.05899845645763e-06], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 14:30:39.868745", "n_pass": [222, 32, 26], "n_token": 25, "loss": [0.3129400312900543, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "instrumentation_key", "*", "args", ",", "**kwargs", "instrumentation_key", "instrumentation_key", "instrumentation_key", "handler", "=", "instrumentation_key", "args", "kwargs", ")", "#NEWLINE#", "handler", "instrumentation_key", "]", "=", "handler", "(", "handler", "return", "handler"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [13, 1, 6, 7, 8, 11, 17, 9, 16, 20, 22, 24, 3, 12]}}
{"prediction": {"error_location": 0.731293797492981, "repair_targets": [], "repair_candidates": [0.08564592897891998, 0.7288114428520203, 0.0014608930796384811, 0.005621528252959251, 0.022762279957532883, 0.010851757600903511, 0.04848901554942131, 0.03395500034093857, 0.041155751794576645, 0.002588292583823204, 0.01852821372449398, 2.2224967324291356e-05, 0.00010033501894213259, 7.395175089186523e-06], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 14:30:39.930505", "n_pass": [225, 33, 27], "n_token": 24, "loss": [0.3878355622291565, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "instrumentation_key", "*", "args", ",", "**kwargs", "instrumentation_key", "instrumentation_key", "instrumentation_key", "handler", "=", "instrumentation_key", "args", "kwargs", "#NEWLINE#", "handler", "instrumentation_key", "]", "=", "handler", "(", "handler", "return", "handler"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [13, 1, 6, 7, 8, 11, 16, 9, 15, 19, 21, 23, 3, 12]}}
{"prediction": {"error_location": 0.6785238981246948, "repair_targets": [], "repair_candidates": [0.07536236941814423, 0.7159679532051086, 0.0009640682837925851, 0.0038860440254211426, 0.019675323739647865, 0.016144517809152603, 0.028918452560901642, 0.03517531603574753, 0.03428395465016365, 0.008069190196692944, 0.06142056733369827, 2.3664893888053484e-05, 0.00010328074858989567, 5.2855561989417765e-06], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 14:30:39.991443", "n_pass": [226, 34, 28], "n_token": 23, "loss": [0.6133119463920593, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "instrumentation_key", "*", "args", ",", "**kwargs", "instrumentation_key", "instrumentation_key", "instrumentation_key", "handler", "=", "instrumentation_key", "args", "kwargs", "handler", "instrumentation_key", "]", "=", "handler", "(", "handler", "return", "handler"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [13, 1, 6, 7, 8, 11, 15, 9, 14, 18, 20, 22, 3, 12]}}
{"prediction": {"error_location": 0.54155433177948, "repair_targets": [], "repair_candidates": [0.05765300244092941, 0.8315998315811157, 0.0009891637600958347, 0.0031941684428602457, 0.008374418132007122, 0.006992395035922527, 0.02680043876171112, 0.02706199511885643, 0.009737761691212654, 0.0006886660703457892, 0.02581087127327919, 0.0002316790196346119, 0.0008360568899661303, 2.948540168290492e-05], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 14:30:40.111802", "n_pass": [230, 36, 29], "n_token": 22, "loss": [0.616468608379364, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "instrumentation_key", "*", "args", ",", "**kwargs", "instrumentation_key", "instrumentation_key", "instrumentation_key", "handler", "=", "instrumentation_key", "args", "kwargs", "handler", "instrumentation_key", "]", "handler", "(", "handler", "return", "handler"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [13, 1, 6, 7, 8, 11, 15, 9, 14, 17, 19, 21, 3, 12]}}
{"prediction": {"error_location": 0.5398474335670471, "repair_targets": [], "repair_candidates": [0.05576622113585472, 0.8839436769485474, 0.0010963758686557412, 0.0028146090917289257, 0.0064399163238704205, 0.008360881358385086, 0.016016986221075058, 0.016871828585863113, 0.006809844635426998, 0.00023198437702376395, 0.0011240122839808464, 0.00010158218356082216, 0.00038306525675579906, 3.911105523002334e-05], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 14:30:40.173775", "n_pass": [232, 37, 30], "n_token": 21, "loss": [0.7092345356941223, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "instrumentation_key", "*", "args", ",", "**kwargs", "instrumentation_key", "instrumentation_key", "instrumentation_key", "handler", "=", "instrumentation_key", "args", "kwargs", "handler", "instrumentation_key", "]", "handler", "handler", "return", "handler"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [13, 1, 6, 7, 8, 11, 15, 9, 14, 17, 18, 20, 3, 12]}}
{"prediction": {"error_location": 0.4920206665992737, "repair_targets": [], "repair_candidates": [0.05343655124306679, 0.901421844959259, 0.0010738312266767025, 0.0022046242374926805, 0.004922158550471067, 0.008218233473598957, 0.008901966735720634, 0.01320413127541542, 0.00551494350656867, 0.00017583811131771654, 0.0007623563287779689, 0.00011543826258275658, 2.8864302294095978e-05, 1.9297023754916154e-05], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 14:30:40.233337", "n_pass": [234, 38, 31], "n_token": 20, "loss": [0.6559163331985474, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "instrumentation_key", "*", "args", ",", "**kwargs", "instrumentation_key", "instrumentation_key", "instrumentation_key", "handler", "=", "instrumentation_key", "args", "kwargs", "handler", "instrumentation_key", "]", "handler", "handler", "handler"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [13, 1, 6, 7, 8, 11, 15, 9, 14, 17, 18, 19, 3, 12]}}
{"prediction": {"error_location": 0.5189662575721741, "repair_targets": [], "repair_candidates": [0.039666350930929184, 0.9287291765213013, 0.0008258054731413722, 0.0019006408983841538, 0.003910142462700605, 0.0075269718654453754, 0.008573794737458229, 0.005303371697664261, 0.003088824450969696, 9.127996600000188e-05, 0.0002048822643700987, 6.900760490680113e-05, 4.2035040678456426e-05, 6.772188498871401e-05], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 14:30:40.351366", "n_pass": [240, 40, 32], "n_token": 19, "loss": [0.10429473221302032, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "instrumentation_key", "*", "args", "**kwargs", "instrumentation_key", "instrumentation_key", "instrumentation_key", "handler", "=", "instrumentation_key", "args", "kwargs", "handler", "instrumentation_key", "]", "handler", "handler", "handler"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [12, 1, 5, 6, 7, 10, 14, 8, 13, 16, 17, 18, 3, 11]}}
{"prediction": {"error_location": 0.9009597301483154, "repair_targets": [], "repair_candidates": [0.417436808347702, 0.2382083386182785, 0.03223295137286186, 0.026953967288136482, 0.03308083117008209, 0.06960421800613403, 0.12578797340393066, 0.025936907157301903, 0.02285698428750038, 0.0012489124201238155, 0.0035460758954286575, 0.0015464241150766611, 0.0007988862344063818, 0.000760699447710067], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 14:30:40.409536", "n_pass": [241, 41, 33], "n_token": 18, "loss": [0.2633717656135559, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "instrumentation_key", "*", "args", "instrumentation_key", "instrumentation_key", "instrumentation_key", "handler", "=", "instrumentation_key", "args", "kwargs", "handler", "instrumentation_key", "]", "handler", "handler", "handler"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [11, 1, 4, 5, 6, 9, 13, 7, 12, 15, 16, 17, 3, 10]}}
{"prediction": {"error_location": 0.768456220626831, "repair_targets": [], "repair_candidates": [0.2583620250225067, 0.07481948286294937, 0.04190098121762276, 0.0916912853717804, 0.02337459847331047, 0.023992497473955154, 0.42887967824935913, 0.03336630389094353, 0.017850670963525772, 0.0012825410813093185, 0.002693822607398033, 0.0009045404149219394, 0.0004695650713983923, 0.00041195008088834584], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 14:30:40.467715", "n_pass": [246, 42, 34], "n_token": 17, "loss": [1.0577768087387085, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "instrumentation_key", "*", "args", "instrumentation_key", "instrumentation_key", "instrumentation_key", "handler", "instrumentation_key", "args", "kwargs", "handler", "instrumentation_key", "]", "handler", "handler", "handler"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [10, 1, 4, 5, 6, 8, 12, 7, 11, 14, 15, 16, 3, 9]}}
{"prediction": {"error_location": 0.3472268581390381, "repair_targets": [], "repair_candidates": [0.1359846293926239, 0.0792449414730072, 0.04449049383401871, 0.0845402181148529, 0.03639261797070503, 0.03954111784696579, 0.34546101093292236, 0.21810242533683777, 0.01472578663378954, 0.0003133478749077767, 0.0006250945734791458, 0.00024751032469794154, 0.0002320740168215707, 9.87897437880747e-05], "target_probs": 0.0}}




Minimal simplified tokens:

['#NEWLINE#', 'instrumentation_key', '*', 'args', 'instrumentation_key', 'instrumentation_key', 'instrumentation_key', 'handler', 'instrumentation_key', 'args', 'kwargs', 'handler', 'instrumentation_key', ']', 'handler', 'handler', 'handler']
