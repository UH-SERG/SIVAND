
Original sample:

{"has_bug": false, "bug_kind": 0, "bug_kind_name": "NONE", "source_tokens": ["#NEWLINE#", "def addObserver(", "self", ",", "other", ")", ":", "#NEWLINE#", "#INDENT#", "'\\n        Add a new observer.\\n\\n        @type other: Provider of L{ILogObserver}\\n        @param other: A callable object that will be called with each new log\\n            message (a dict).\\n        '", "#NEWLINE#", "wrapped", "=", "LegacyLogObserverWrapper", "(", "other", ")", "#NEWLINE#", "self", ".", "_legacyObservers", ".", "append", "(", "wrapped", ")", "#NEWLINE#", "self", ".", "_observerPublisher", ".", "addObserver", "(", "wrapped", ")"], "error_location": [0], "repair_targets": [], "repair_candidates": [11, 24, 33, 4, 15, 2, 18, 27], "provenances": [{"datasetProvenance": {"datasetName": "ETHPy150Open", "filepath": "twisted/twisted/twisted/python/log.py", "license": "mit", "note": "license: manual_eval"}}], "txt_file": "eval__VARIABLE_MISUSE__SStuB.txt-00000-of-00300", "js_count": 2748, "results": {"model": "rnn", "prob": {"loc": [[0.4377784729003906, 2.8130252758273855e-06, 2.0767271280419664e-07, 4.97641039487462e-09, 5.907340323574317e-07, 4.512756390795403e-08, 1.1851989256683737e-07, 4.370089754957007e-06, 1.2761742027578293e-06, 6.585101459677389e-07, 3.7384975826171285e-07, 6.168544928186748e-07, 5.453243190345347e-08, 1.2547770893434063e-06, 4.504077821820829e-07, 0.0002817830245476216, 2.0108778642224934e-07, 1.9607885803907266e-07, 1.6829915239213733e-07, 3.039605758203834e-07, 5.276982761870386e-08, 1.5876125871727709e-06, 9.518291932408829e-08, 8.336562018484983e-08, 0.18893496692180634, 6.311789491064701e-08, 4.145524101772935e-08, 9.134624633588828e-06, 1.2139039995417988e-08, 9.835159886506517e-08, 1.2258751667104661e-06, 1.712038866230614e-08, 4.282120613652296e-08, 0.3729785680770874, 7.839126681119524e-08]], "pointer": [[0.0, 0.0, 0.011955433525145054, 0.0, 0.8379128575325012, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.12288744002580643, 0.0, 0.0, 0.0, 0.01293088961392641, 0.0, 0.0, 0.012639478780329227, 0.0, 0.0, 0.0, 0.0, 0.0, 3.3243773941649124e-05, 0.0, 0.0, 0.0003874701797030866, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0012530793901532888, 0.0]], "target": [0.0]}, "loss": [0.8260422348976135, 0.0], "acc": [1.0, 0.0, 0.0, 0.0]}}


Trace of simplified code(s):

{"result": {"time": "2021-02-11 14:27:40.858049", "n_pass": [1, 1, 1], "n_token": 35, "loss": [0.8260422348976135, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def addObserver(", "self", ",", "other", ")", ":", "#NEWLINE#", "#INDENT#", "'\\n        Add a new observer.\\n\\n        @type other: Provider of L{ILogObserver}\\n        @param other: A callable object that will be called with each new log\\n            message (a dict).\\n        '", "#NEWLINE#", "wrapped", "=", "LegacyLogObserverWrapper", "(", "other", ")", "#NEWLINE#", "self", ".", "_legacyObservers", ".", "append", "(", "wrapped", ")", "#NEWLINE#", "self", ".", "_observerPublisher", ".", "addObserver", "(", "wrapped", ")"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [11, 24, 33, 4, 15, 2, 18, 27]}}
{"prediction": {"error_location": 0.4377784729003906, "repair_targets": [], "repair_candidates": [0.011955433525145054, 0.8379128575325012, 0.12288744002580643, 0.01293088961392641, 0.012639478780329227, 3.3243773941649124e-05, 0.0003874701797030866, 0.0012530793901532888], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 14:27:40.924476", "n_pass": [47, 2, 2], "n_token": 33, "loss": [0.5902692079544067, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def addObserver(", "self", ",", "other", ")", "#INDENT#", "'\\n        Add a new observer.\\n\\n        @type other: Provider of L{ILogObserver}\\n        @param other: A callable object that will be called with each new log\\n            message (a dict).\\n        '", "#NEWLINE#", "wrapped", "=", "LegacyLogObserverWrapper", "(", "other", ")", "#NEWLINE#", "self", ".", "_legacyObservers", ".", "append", "(", "wrapped", ")", "#NEWLINE#", "self", ".", "_observerPublisher", ".", "addObserver", "(", "wrapped", ")"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [9, 22, 31, 4, 13, 2, 16, 25]}}
{"prediction": {"error_location": 0.55417799949646, "repair_targets": [], "repair_candidates": [0.08012766391038895, 0.6451699733734131, 0.23334935307502747, 0.009004124440252781, 0.028787903487682343, 6.260057125473395e-05, 0.0010279056150466204, 0.0024704099632799625], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 14:27:41.246544", "n_pass": [55, 7, 3], "n_token": 31, "loss": [0.15967988967895508, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def addObserver(", "self", ",", "other", ")", "#INDENT#", "'\\n        Add a new observer.\\n\\n        @type other: Provider of L{ILogObserver}\\n        @param other: A callable object that will be called with each new log\\n            message (a dict).\\n        '", "#NEWLINE#", "wrapped", "=", "LegacyLogObserverWrapper", "(", "other", ")", "#NEWLINE#", "self", ".", "_legacyObservers", ".", "wrapped", ")", "#NEWLINE#", "self", ".", "_observerPublisher", ".", "addObserver", "(", "wrapped", ")"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [9, 20, 29, 4, 13, 2, 16, 23]}}
{"prediction": {"error_location": 0.8524166345596313, "repair_targets": [], "repair_candidates": [0.013284831307828426, 0.21512942016124725, 0.7473567128181458, 0.001951389480382204, 0.0129042137414217, 0.008693660609424114, 0.0002683789061848074, 0.00041147563024424016], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 14:27:41.309447", "n_pass": [58, 8, 4], "n_token": 28, "loss": [0.024071810767054558, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def addObserver(", "self", ",", "other", ")", "#INDENT#", "'\\n        Add a new observer.\\n\\n        @type other: Provider of L{ILogObserver}\\n        @param other: A callable object that will be called with each new log\\n            message (a dict).\\n        '", "#NEWLINE#", "wrapped", "=", "LegacyLogObserverWrapper", "(", "other", ")", "#NEWLINE#", "self", ".", "_legacyObservers", ".", "wrapped", ")", "#NEWLINE#", "self", ".", "(", "wrapped", ")"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [9, 20, 26, 4, 13, 2, 16, 23]}}
{"prediction": {"error_location": 0.9762156009674072, "repair_targets": [], "repair_candidates": [0.003826247528195381, 0.05762363225221634, 0.9180905222892761, 0.0009834631346166134, 0.001912103034555912, 0.016396421939134598, 0.0010518698254600167, 0.00011560107668628916], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 14:27:41.370901", "n_pass": [63, 9, 5], "n_token": 26, "loss": [0.042075444012880325, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def addObserver(", "self", ",", "other", ")", "#NEWLINE#", "wrapped", "=", "LegacyLogObserverWrapper", "(", "other", ")", "#NEWLINE#", "self", ".", "_legacyObservers", ".", "wrapped", ")", "#NEWLINE#", "self", ".", "(", "wrapped", ")"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [7, 18, 24, 4, 11, 2, 14, 21]}}
{"prediction": {"error_location": 0.9587973356246948, "repair_targets": [], "repair_candidates": [0.0023303560446947813, 0.5919066071510315, 0.32276836037635803, 0.006661292631179094, 0.004697503987699747, 0.06687203049659729, 0.004083652514964342, 0.0006801776471547782], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 14:27:41.431361", "n_pass": [65, 10, 6], "n_token": 24, "loss": [0.3218538463115692, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def addObserver(", "self", ",", "other", ")", "#NEWLINE#", "wrapped", "(", "other", ")", "#NEWLINE#", "self", ".", "_legacyObservers", ".", "wrapped", ")", "#NEWLINE#", "self", ".", "(", "wrapped", ")"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [7, 16, 22, 4, 9, 2, 12, 19]}}
{"prediction": {"error_location": 0.7248041033744812, "repair_targets": [], "repair_candidates": [0.19711042940616608, 0.6840291619300842, 0.003667471930384636, 0.004815229680389166, 0.04552948474884033, 0.06105004996061325, 0.0027319928631186485, 0.0010662258137017488], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 14:27:41.550339", "n_pass": [69, 12, 7], "n_token": 22, "loss": [0.5866677165031433, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def addObserver(", "self", ",", "other", ")", "#NEWLINE#", "wrapped", "(", "other", ")", "#NEWLINE#", "self", ".", "wrapped", ")", "#NEWLINE#", "self", ".", "(", "wrapped", ")"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [7, 14, 20, 4, 9, 2, 12, 17]}}
{"prediction": {"error_location": 0.55617755651474, "repair_targets": [], "repair_candidates": [0.3445990979671478, 0.5978904962539673, 0.002964782528579235, 0.006136259995400906, 0.024290351197123528, 0.020674539729952812, 0.002493834588676691, 0.0009506368078291416], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 14:27:41.788098", "n_pass": [104, 16, 8], "n_token": 20, "loss": [0.06907094269990921, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def addObserver(", "self", ",", "other", ")", "#NEWLINE#", "wrapped", "(", "other", ")", "#NEWLINE#", "self", ".", "wrapped", ")", "#NEWLINE#", "self", "wrapped", ")"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [7, 14, 18, 4, 9, 2, 12, 17]}}
{"prediction": {"error_location": 0.9332605600357056, "repair_targets": [], "repair_candidates": [0.6639112234115601, 0.21180711686611176, 0.001155070262029767, 0.0013330033980309963, 0.0056772115640342236, 0.05572450906038284, 0.05513100326061249, 0.005260802339762449], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 14:27:41.845938", "n_pass": [107, 17, 9], "n_token": 19, "loss": [0.2615748345851898, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "self", ",", "other", ")", "#NEWLINE#", "wrapped", "(", "other", ")", "#NEWLINE#", "self", ".", "wrapped", ")", "#NEWLINE#", "self", "wrapped", ")"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [6, 13, 17, 3, 8, 1, 11, 16]}}
{"prediction": {"error_location": 0.7698382139205933, "repair_targets": [], "repair_candidates": [0.404075562953949, 0.5158533453941345, 0.001145770656876266, 0.0006841578288003802, 0.005320526659488678, 0.04104013741016388, 0.027244459837675095, 0.0046359882690012455], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 14:27:41.903308", "n_pass": [109, 18, 10], "n_token": 18, "loss": [0.6084194183349609, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "self", "other", ")", "#NEWLINE#", "wrapped", "(", "other", ")", "#NEWLINE#", "self", ".", "wrapped", ")", "#NEWLINE#", "self", "wrapped", ")"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [5, 12, 16, 2, 7, 1, 10, 15]}}
{"prediction": {"error_location": 0.5442103743553162, "repair_targets": [], "repair_candidates": [0.2292891889810562, 0.7289945483207703, 0.0011624073376879096, 0.00026298215379938483, 0.003247356042265892, 0.014920038171112537, 0.0208668801933527, 0.0012565989745780826], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 14:27:42.076714", "n_pass": [114, 21, 11], "n_token": 17, "loss": [0.026025449857115746, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "self", "other", ")", "#NEWLINE#", "wrapped", "other", ")", "#NEWLINE#", "self", ".", "wrapped", ")", "#NEWLINE#", "self", "wrapped", ")"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [5, 11, 15, 2, 6, 1, 9, 14]}}
{"prediction": {"error_location": 0.9743103981018066, "repair_targets": [], "repair_candidates": [0.05344788730144501, 0.852750837802887, 0.00987427681684494, 0.001246797270141542, 0.0023580784909427166, 0.026299526914954185, 0.05274622142314911, 0.0012764075072482228], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 14:27:42.133025", "n_pass": [116, 22, 12], "n_token": 16, "loss": [0.013255213387310505, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "self", "other", ")", "#NEWLINE#", "wrapped", "other", "#NEWLINE#", "self", ".", "wrapped", ")", "#NEWLINE#", "self", "wrapped", ")"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [5, 10, 14, 2, 6, 1, 8, 13]}}
{"prediction": {"error_location": 0.9868322610855103, "repair_targets": [], "repair_candidates": [0.06156245619058609, 0.8415932655334473, 0.008525410667061806, 0.000930893118493259, 0.0014315798180177808, 0.005703540053218603, 0.07749124616384506, 0.002761550946161151], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 14:27:42.189197", "n_pass": [117, 23, 13], "n_token": 15, "loss": [0.03241559863090515, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "self", "other", ")", "#NEWLINE#", "wrapped", "other", "self", ".", "wrapped", ")", "#NEWLINE#", "self", "wrapped", ")"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [5, 9, 13, 2, 6, 1, 7, 12]}}
{"prediction": {"error_location": 0.9681039452552795, "repair_targets": [], "repair_candidates": [0.01109546422958374, 0.9423884749412537, 0.0009085581987164915, 0.003279085736721754, 0.00023916654754430056, 0.0008619324653409421, 0.040178537368774414, 0.0010486552491784096], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 14:27:42.244829", "n_pass": [119, 24, 14], "n_token": 14, "loss": [0.02181568555533886, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "self", "other", ")", "#NEWLINE#", "wrapped", "other", "self", "wrapped", ")", "#NEWLINE#", "self", "wrapped", ")"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [5, 8, 12, 2, 6, 1, 7, 11]}}
{"prediction": {"error_location": 0.9784204363822937, "repair_targets": [], "repair_candidates": [0.008863931521773338, 0.972977340221405, 0.000524435774423182, 0.005997644271701574, 0.00040605608955956995, 1.3183308510633651e-05, 0.010405370965600014, 0.000812001817394048], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 14:27:42.302214", "n_pass": [121, 25, 15], "n_token": 13, "loss": [0.010112008079886436, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "self", "other", ")", "#NEWLINE#", "wrapped", "other", "self", "wrapped", "#NEWLINE#", "self", "wrapped", ")"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [5, 8, 11, 2, 6, 1, 7, 10]}}
{"prediction": {"error_location": 0.9899390339851379, "repair_targets": [], "repair_candidates": [0.009011536836624146, 0.9723748564720154, 0.001068960060365498, 0.008470994420349598, 0.0010082183871418238, 0.00016412932018283755, 0.0070299808867275715, 0.000871355994604528], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 14:27:42.356725", "n_pass": [122, 26, 16], "n_token": 12, "loss": [0.019822826609015465, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "self", "other", ")", "#NEWLINE#", "wrapped", "other", "self", "wrapped", "self", "wrapped", ")"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [5, 8, 10, 2, 6, 1, 7, 9]}}
{"prediction": {"error_location": 0.9803724884986877, "repair_targets": [], "repair_candidates": [0.012029857374727726, 0.9845832586288452, 0.0005509257316589355, 0.0018567005172371864, 0.0003739535459317267, 0.000379254634026438, 0.0002048449678113684, 2.115800634783227e-05], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 14:27:42.411020", "n_pass": [128, 27, 17], "n_token": 11, "loss": [0.005975477397441864, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "self", "other", "#NEWLINE#", "wrapped", "other", "self", "wrapped", "self", "wrapped", ")"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [4, 7, 9, 2, 5, 1, 6, 8]}}
{"prediction": {"error_location": 0.9940423369407654, "repair_targets": [], "repair_candidates": [0.027943629771471024, 0.9524171352386475, 0.007622101344168186, 0.009623030200600624, 0.0006384207517839968, 0.0008188952342607081, 0.0008655330748297274, 7.126718264771625e-05], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 14:27:42.464570", "n_pass": [129, 28, 18], "n_token": 10, "loss": [0.0030882307328283787, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "self", "other", "wrapped", "other", "self", "wrapped", "self", "wrapped", ")"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [3, 6, 8, 2, 4, 1, 5, 7]}}
{"prediction": {"error_location": 0.9969165325164795, "repair_targets": [], "repair_candidates": [0.026007400825619698, 0.7329443097114563, 0.2200002372264862, 0.016411373391747475, 0.0007562832324765623, 0.0017156116664409637, 0.002004018984735012, 0.0001606991427252069], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 14:27:42.517570", "n_pass": [142, 29, 19], "n_token": 9, "loss": [0.016495633870363235, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "self", "other", "wrapped", "other", "self", "wrapped", "self", "wrapped"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [3, 6, 8, 2, 4, 1, 5, 7]}}
{"prediction": {"error_location": 0.9836395382881165, "repair_targets": [], "repair_candidates": [0.009752440266311169, 0.7390020489692688, 0.23870262503623962, 0.01200897991657257, 0.00026495789643377066, 0.00013690207561012357, 0.00010025478695752099, 3.1679221137892455e-05], "target_probs": 0.0}}




Minimal simplified tokens:

['#NEWLINE#', 'self', 'other', 'wrapped', 'other', 'self', 'wrapped', 'self', 'wrapped']
