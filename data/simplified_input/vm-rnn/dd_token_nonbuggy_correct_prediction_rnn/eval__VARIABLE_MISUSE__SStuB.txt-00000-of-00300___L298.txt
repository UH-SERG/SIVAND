
Original sample:

{"has_bug": false, "bug_kind": 0, "bug_kind_name": "NONE", "source_tokens": ["#NEWLINE#", "def test_node_error_type_enum(", "self", ")", ":", "#NEWLINE#", "#INDENT#", "added_error_types", "=", "(", "'discover'", ",", ")", "#NEWLINE#", "nodes_table", "=", "self", ".", "meta", ".", "tables", "[", "'nodes'", "]", "#NEWLINE#", "for", "error_type", "in", "added_error_types", ":", "#NEWLINE#", "#INDENT#", "insert_table_row", "(", "nodes_table", ",", "{", "#NEWLINE#", "#INDENT#", "'name'", ":", "'node1'", ",", "#NEWLINE#", "'status'", ":", "'error'", ",", "#NEWLINE#", "'error_type'", ":", "error_type", ",", "#NEWLINE#", "'uuid'", ":", "str", "(", "uuid", ".", "uuid4", "(", ")", ")", ",", "#NEWLINE#", "'mac'", ":", "'00:00:00:00:00:00'", ",", "#NEWLINE#", "'timestamp'", ":", "datetime", ".", "now", "(", ")", ",", "#NEWLINE#", "#UNINDENT#", "}", ")", "#NEWLINE#", "inserted_count", "=", "db", ".", "execute", "(", "sa", ".", "select", "(", "[", "sa", ".", "func", ".", "count", "(", "nodes_table", ".", "c", ".", "error_type", ")", "]", ")", ".", "where", "(", "sa", ".", "and_", "(", "(", "nodes_table", ".", "c", ".", "error_type", "==", "error_type", ")", ")", ")", ")", ".", "fetchone", "(", ")", "[", "0", "]", "#NEWLINE#", "self", ".", "assertEqual", "(", "inserted_count", ",", "1", ")", "#NEWLINE#", "#UNINDENT#", "with", "self", ".", "assertRaisesRegexp", "(", "DataError", ",", "'invalid input value for enum node_error_type'", ")", ":", "#NEWLINE#", "#INDENT#", "insert_table_row", "(", "nodes_table", ",", "{", "#NEWLINE#", "#INDENT#", "'name'", ":", "'node1'", ",", "#NEWLINE#", "'status'", ":", "'error'", ",", "#NEWLINE#", "'error_type'", ":", "'wrong_error_type'", ",", "#NEWLINE#", "'uuid'", ":", "str", "(", "uuid", ".", "uuid4", "(", ")", ")", ",", "#NEWLINE#", "'mac'", ":", "'00:00:00:00:00:00'", ",", "#NEWLINE#", "'timestamp'", ":", "datetime", ".", "now", "(", ")", ",", "#NEWLINE#", "#UNINDENT#", "}", ")"], "error_location": [0], "repair_targets": [], "repair_candidates": [7, 28, 14, 34, 101, 117, 160, 84, 140, 2, 16, 136, 147, 26, 51, 105, 121, 123], "provenances": [{"datasetProvenance": {"datasetName": "ETHPy150Open", "filepath": "openstack/fuel-web/nailgun/nailgun/test/unit/test_migration_fuel_8_0.py", "license": "apache-2.0", "note": "license: bigquery_api"}}], "txt_file": "eval__VARIABLE_MISUSE__SStuB.txt-00000-of-00300", "js_count": 298, "results": {"model": "rnn", "prob": {"loc": [[0.9317991733551025, 2.8310266770859016e-06, 1.988522171814111e-06, 2.858373759906385e-09, 1.694422158138309e-09, 1.1491239604310977e-07, 2.6250984319631243e-07, 7.9558567733784e-08, 3.363136258371924e-08, 4.4179099489838336e-08, 2.770972855614673e-07, 5.992915248498321e-07, 1.0426024346088525e-06, 6.542359187733382e-07, 2.140458946087165e-06, 2.2994592541181191e-07, 2.677183147170581e-05, 5.066073782700187e-09, 1.9583596895245137e-06, 2.133389109815198e-08, 1.4971262316976208e-05, 1.2588705544658296e-07, 0.00013716780813410878, 1.2280852388357744e-06, 3.914923217962496e-05, 4.4835530843556626e-07, 2.1422120255465416e-07, 4.5770152610202786e-06, 0.002470689592882991, 4.305349648348056e-06, 9.064370942724054e-07, 2.088031436642268e-08, 5.825623929922585e-07, 4.740087433674489e-08, 0.0189223550260067, 2.0543385659266278e-08, 1.2887018385754345e-07, 6.202764097906766e-07, 1.6771821265137987e-08, 1.6818977428556536e-06, 1.7136631003111802e-09, 3.4697743558353977e-06, 4.301563762965088e-07, 9.695688873989639e-08, 1.0259729776862514e-07, 3.418398364374298e-08, 2.0958439108653693e-06, 2.510487036033737e-07, 4.9389051071102585e-08, 5.083867904431827e-08, 2.1963911933653435e-07, 0.003097130684182048, 1.3600011072867346e-07, 1.4125472489467938e-06, 1.703250376294818e-07, 7.11264718233906e-08, 7.179539807111723e-07, 2.4559140499036403e-08, 1.7040067632478895e-06, 3.5214320348586625e-08, 1.7006232866378923e-08, 5.215122769186564e-07, 1.059627811628161e-05, 3.187301089724315e-08, 8.947637297751498e-08, 1.0142787232325645e-06, 4.9260281230090186e-05, 1.0087680690773482e-09, 9.967694580836906e-08, 1.1095645646719277e-07, 8.506041240252671e-07, 1.9078611046552396e-07, 4.462899383383956e-08, 1.0367288041379652e-06, 1.0050580812048793e-08, 3.4051024222492288e-09, 4.5847940555177047e-07, 1.8730754163698293e-05, 1.0842770592489615e-07, 1.3449317748381873e-06, 1.0380174899182748e-05, 4.296498445910402e-06, 1.4356079702793068e-07, 1.2275303333808552e-06, 4.196575957848836e-07, 1.6756121823391368e-08, 3.188217760907719e-07, 1.0477376299888874e-08, 3.648812096912479e-08, 3.646362856102314e-08, 9.320158369519049e-07, 1.1669084187815315e-07, 2.3741732135817983e-08, 1.1535973953868961e-07, 1.888045808584593e-08, 4.194663461021264e-07, 1.0259353366848245e-08, 3.865862296947853e-08, 1.2191303078168403e-08, 2.881891392192415e-09, 1.1185811388259026e-08, 0.00012279553629923612, 2.7789728296312433e-09, 8.355894465239544e-08, 1.229436890071156e-07, 1.8735315521212215e-08, 5.887196508069792e-08, 9.39279587441888e-08, 2.4694983835615858e-08, 2.8528347684186883e-07, 1.3624267936052092e-08, 2.402423815439647e-09, 1.647369600732418e-07, 4.5635253798081976e-08, 2.859144210276554e-08, 8.919602834112084e-09, 3.46688864283351e-07, 0.00032382720382884145, 2.9642853505151834e-08, 2.2867665450121422e-07, 1.5089543126123317e-07, 5.296872984672518e-08, 6.30858707495463e-08, 6.850179943285184e-06, 3.060593556369895e-08, 2.3262375137278468e-08, 1.9845890264491572e-08, 1.3904461582114891e-08, 8.36102813650541e-08, 4.755524418698087e-09, 9.294812031157562e-08, 1.9198509107809514e-05, 8.231633152888662e-09, 2.6632229491951875e-05, 3.007780691177686e-08, 1.787449832590937e-08, 6.445712585900765e-08, 1.1411842582020881e-09, 2.2522552711734534e-08, 4.507802202624589e-07, 0.0042346627451479435, 2.5979975504242248e-08, 0.00042092966032214463, 8.18771539456975e-08, 1.6000785763026215e-07, 5.10502900397114e-07, 8.529915440647073e-09, 6.730574142466139e-08, 3.764805966977036e-10, 2.724558534339394e-08, 2.672394527891697e-09, 0.0024328234139829874, 2.341716793807791e-07, 0.0014271188993006945, 1.1166306421728223e-06, 3.844208151804196e-08, 7.828046477698081e-08, 1.1363067820013839e-08, 1.1427985668888141e-07, 4.814530640828707e-08, 0.03427140787243843, 5.8142600067867534e-08, 1.2246134417637222e-07, 2.9100561960149207e-07, 1.269366745049183e-08, 8.122165695567674e-07, 2.0782680021369515e-09, 1.2623361271835165e-06, 3.5735911296796985e-07, 7.301442650486933e-08, 1.0458833799020795e-07, 2.23914398134184e-08, 1.1653876299533295e-06, 1.5126241237339855e-07, 2.494860318336123e-08, 1.757473988561742e-08, 4.190584323993107e-09, 2.1097061164709885e-07, 1.4618970567426004e-07, 1.6113506262627197e-07, 4.465683645094032e-08, 2.499981022197062e-08, 5.847683155479899e-07, 1.9075926616096694e-08, 5.151325694896514e-06, 1.62629394395708e-08, 5.1504480680364395e-09, 6.34390289633302e-07, 4.757740953209577e-06, 2.1079713974359038e-08, 7.146520886180951e-08, 8.991447089101712e-07, 6.271049642236903e-06, 1.0108250902973737e-09, 5.15263245404185e-08, 1.7622666348415805e-07, 4.789272907146369e-07, 1.3249199071196927e-07, 3.627549816087594e-08, 8.812568239591201e-07, 6.842471922396953e-09, 4.377577855763093e-09, 6.001728820592689e-07, 1.7865648260340095e-05, 1.1541188627006704e-07, 1.4833271961833816e-06, 9.456385669182055e-06, 4.796931989403674e-06, 2.234450136029409e-07]], "pointer": [[0.0, 0.0, 7.86638065619627e-06, 0.0, 0.0, 0.0, 0.0, 0.23835575580596924, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.36024966835975647, 0.0, 0.0008459031814709306, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.23467230796813965, 0.0, 0.00033029308542609215, 0.0, 0.0, 0.0, 0.0, 0.0, 6.657002086285502e-05, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.00010565176489762962, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.15181437134742737, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0001875737652881071, 0.0, 0.0, 0.0, 0.003275537397712469, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 2.4072889573290013e-05, 0.0, 0.0, 0.0, 0.0030375057831406593, 0.0, 0.002569328062236309, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.8736553784037824e-06, 0.0, 0.0, 0.0, 1.1564031410671305e-05, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.974775113922078e-05, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.004424392245709896, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]], "target": [0.0]}, "loss": [0.07063816487789154, 0.0], "acc": [1.0, 0.0, 0.0, 0.0]}}


Trace of simplified code(s):

{"result": {"time": "2021-02-11 14:33:44.747352", "n_pass": [1, 1, 1], "n_token": 209, "loss": [0.07063816487789154, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def test_node_error_type_enum(", "self", ")", ":", "#NEWLINE#", "#INDENT#", "added_error_types", "=", "(", "'discover'", ",", ")", "#NEWLINE#", "nodes_table", "=", "self", ".", "meta", ".", "tables", "[", "'nodes'", "]", "#NEWLINE#", "for", "error_type", "in", "added_error_types", ":", "#NEWLINE#", "#INDENT#", "insert_table_row", "(", "nodes_table", ",", "{", "#NEWLINE#", "#INDENT#", "'name'", ":", "'node1'", ",", "#NEWLINE#", "'status'", ":", "'error'", ",", "#NEWLINE#", "'error_type'", ":", "error_type", ",", "#NEWLINE#", "'uuid'", ":", "str", "(", "uuid", ".", "uuid4", "(", ")", ")", ",", "#NEWLINE#", "'mac'", ":", "'00:00:00:00:00:00'", ",", "#NEWLINE#", "'timestamp'", ":", "datetime", ".", "now", "(", ")", ",", "#NEWLINE#", "#UNINDENT#", "}", ")", "#NEWLINE#", "inserted_count", "=", "db", ".", "execute", "(", "sa", ".", "select", "(", "[", "sa", ".", "func", ".", "count", "(", "nodes_table", ".", "c", ".", "error_type", ")", "]", ")", ".", "where", "(", "sa", ".", "and_", "(", "(", "nodes_table", ".", "c", ".", "error_type", "==", "error_type", ")", ")", ")", ")", ".", "fetchone", "(", ")", "[", "0", "]", "#NEWLINE#", "self", ".", "assertEqual", "(", "inserted_count", ",", "1", ")", "#NEWLINE#", "#UNINDENT#", "with", "self", ".", "assertRaisesRegexp", "(", "DataError", ",", "'invalid input value for enum node_error_type'", ")", ":", "#NEWLINE#", "#INDENT#", "insert_table_row", "(", "nodes_table", ",", "{", "#NEWLINE#", "#INDENT#", "'name'", ":", "'node1'", ",", "#NEWLINE#", "'status'", ":", "'error'", ",", "#NEWLINE#", "'error_type'", ":", "'wrong_error_type'", ",", "#NEWLINE#", "'uuid'", ":", "str", "(", "uuid", ".", "uuid4", "(", ")", ")", ",", "#NEWLINE#", "'mac'", ":", "'00:00:00:00:00:00'", ",", "#NEWLINE#", "'timestamp'", ":", "datetime", ".", "now", "(", ")", ",", "#NEWLINE#", "#UNINDENT#", "}", ")"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [7, 28, 14, 34, 101, 117, 160, 84, 140, 2, 16, 136, 147, 26, 51, 105, 121, 123]}}
{"prediction": {"error_location": 0.9317991733551025, "repair_targets": [], "repair_candidates": [7.86638065619627e-06, 0.23835575580596924, 0.36024966835975647, 0.0008459031814709306, 0.23467230796813965, 0.00033029308542609215, 6.657002086285502e-05, 0.00010565176489762962, 0.15181437134742737, 0.0001875737652881071, 0.003275537397712469, 2.4072889573290013e-05, 0.0030375057831406593, 0.002569328062236309, 1.8736553784037824e-06, 1.1564031410671305e-05, 1.974775113922078e-05, 0.004424392245709896], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 14:33:44.906759", "n_pass": [22, 2, 2], "n_token": 183, "loss": [0.0859050378203392, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def test_node_error_type_enum(", "self", ")", ":", "#NEWLINE#", "#INDENT#", "added_error_types", "=", "(", "'discover'", ",", ")", "#NEWLINE#", "nodes_table", "=", "self", ".", "meta", ".", "tables", "[", "'nodes'", "]", "#NEWLINE#", "for", "error_type", "in", "added_error_types", ":", "#NEWLINE#", "#INDENT#", "insert_table_row", "(", "nodes_table", ",", "{", "#NEWLINE#", "#INDENT#", "'name'", ":", "'node1'", ",", "#NEWLINE#", "'status'", ":", "'error'", ",", "#NEWLINE#", "'error_type'", ":", "error_type", ",", "#NEWLINE#", "#UNINDENT#", "}", ")", "#NEWLINE#", "inserted_count", "=", "db", ".", "execute", "(", "sa", ".", "select", "(", "[", "sa", ".", "func", ".", "count", "(", "nodes_table", ".", "c", ".", "error_type", ")", "]", ")", ".", "where", "(", "sa", ".", "and_", "(", "(", "nodes_table", ".", "c", ".", "error_type", "==", "error_type", ")", ")", ")", ")", ".", "fetchone", "(", ")", "[", "0", "]", "#NEWLINE#", "self", ".", "assertEqual", "(", "inserted_count", ",", "1", ")", "#NEWLINE#", "#UNINDENT#", "with", "self", ".", "assertRaisesRegexp", "(", "DataError", ",", "'invalid input value for enum node_error_type'", ")", ":", "#NEWLINE#", "#INDENT#", "insert_table_row", "(", "nodes_table", ",", "{", "#NEWLINE#", "#INDENT#", "'name'", ":", "'node1'", ",", "#NEWLINE#", "'status'", ":", "'error'", ",", "#NEWLINE#", "'error_type'", ":", "'wrong_error_type'", ",", "#NEWLINE#", "'uuid'", ":", "str", "(", "uuid", ".", "uuid4", "(", ")", ")", ",", "#NEWLINE#", "'mac'", ":", "'00:00:00:00:00:00'", ",", "#NEWLINE#", "'timestamp'", ":", "datetime", ".", "now", "(", ")", ",", "#NEWLINE#", "#UNINDENT#", "}", ")"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [7, 28, 14, 34, 75, 91, 134, 58, 114, 2, 16, 110, 121, 26, 51, 79, 95, 97]}}
{"prediction": {"error_location": 0.9176812767982483, "repair_targets": [], "repair_candidates": [5.979991783533478e-06, 0.22987163066864014, 0.2305532693862915, 0.0005213633994571865, 0.1709134578704834, 0.00044069564319215715, 5.0833128625527024e-05, 6.122104241512716e-05, 0.3552056550979614, 0.00016928660625126213, 0.0033640586771070957, 2.432679320918396e-05, 0.0026971332263201475, 0.0026134285144507885, 1.476137072131678e-06, 1.0174288036068901e-05, 1.2117784535803366e-05, 0.003483792068436742], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 14:33:45.048579", "n_pass": [26, 3, 3], "n_token": 156, "loss": [0.050359949469566345, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def test_node_error_type_enum(", "self", ")", ":", "#NEWLINE#", "#INDENT#", "added_error_types", "=", "(", "'discover'", ",", ")", "#NEWLINE#", "nodes_table", "=", "self", ".", "meta", ".", "tables", "[", "'nodes'", "]", "#NEWLINE#", "for", "error_type", "in", "added_error_types", ":", "#NEWLINE#", "#INDENT#", "insert_table_row", "(", "nodes_table", ",", "{", "#NEWLINE#", "#INDENT#", "'name'", ":", "'node1'", ",", "#NEWLINE#", "'status'", ":", "'error'", ",", "#NEWLINE#", "'error_type'", ":", "error_type", ",", "#NEWLINE#", "#UNINDENT#", "}", ")", "#NEWLINE#", "inserted_count", "=", "db", ".", "execute", "(", "sa", ".", "select", "(", "[", "sa", ".", "func", ".", "count", "(", "nodes_table", ".", "c", ".", "error_type", ")", "]", ")", ".", "where", "(", "sa", ".", "and_", "(", "(", "nodes_table", ".", "c", ".", "error_type", "==", "error_type", ")", ")", ")", ")", ".", "fetchone", "(", ")", "[", "0", "]", "#NEWLINE#", "self", ".", "assertEqual", "(", "inserted_count", ",", "1", ")", "#NEWLINE#", "#UNINDENT#", "with", "self", ".", "assertRaisesRegexp", "(", "DataError", ",", "'invalid input value for enum node_error_type'", ")", ":", "#NEWLINE#", "#INDENT#", "insert_table_row", "(", "nodes_table", ",", "{", "#NEWLINE#", "#INDENT#", "'name'", ":", "'node1'", ",", "#NEWLINE#", "'status'", ":", "'error'", ",", "#NEWLINE#", "'error_type'", ":", "'wrong_error_type'", ",", "#NEWLINE#", "'uuid'", ":"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [7, 28, 14, 34, 75, 91, 134, 58, 114, 2, 16, 110, 121, 26, 51, 79, 95, 97]}}
{"prediction": {"error_location": 0.9508870840072632, "repair_targets": [], "repair_candidates": [4.2356705307611264e-06, 0.24891526997089386, 0.2229563146829605, 0.00019217398948967457, 0.164010688662529, 0.0004792659601662308, 0.00015060248551890254, 4.8806443373905495e-05, 0.33371976017951965, 0.00012515796697698534, 0.00412013242021203, 2.6125975637114607e-05, 0.002986316569149494, 0.0025377455167472363, 1.2573807453009067e-06, 9.067623068403918e-06, 9.651091204432305e-06, 0.01970737800002098], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 14:33:45.183745", "n_pass": [56, 4, 4], "n_token": 143, "loss": [0.053741149604320526, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def test_node_error_type_enum(", "self", ")", ":", "#NEWLINE#", "#INDENT#", "added_error_types", "=", "(", "'discover'", ",", ")", "#NEWLINE#", "nodes_table", "=", "self", ".", "meta", ".", "tables", "[", "'nodes'", "]", "#NEWLINE#", "for", "error_type", "in", "added_error_types", ":", "#NEWLINE#", "#INDENT#", "insert_table_row", "(", "nodes_table", ",", "{", "#NEWLINE#", "#INDENT#", "'name'", ":", "'node1'", ",", "#NEWLINE#", "'status'", ":", "'error'", ",", "#NEWLINE#", "'error_type'", ":", "error_type", ",", "#NEWLINE#", "#UNINDENT#", "}", ")", "#NEWLINE#", "inserted_count", "=", "db", ".", "execute", "(", "sa", ".", "select", "(", "[", "sa", ".", "func", ".", "count", "(", "nodes_table", ".", "c", ".", "error_type", ")", "]", ")", ".", "where", "(", "sa", ".", "and_", "(", "(", "nodes_table", ".", "c", ".", "error_type", "==", "error_type", ")", ")", ")", ")", ".", "fetchone", "(", ")", "[", "0", "]", "#NEWLINE#", "self", ".", "assertEqual", "(", "inserted_count", ",", "1", ")", "#NEWLINE#", "#UNINDENT#", "with", "self", ".", "assertRaisesRegexp", "(", "DataError", ",", "'invalid input value for enum node_error_type'", ")", ":", "#NEWLINE#", "#INDENT#", "insert_table_row", "(", "nodes_table", ",", "{", "#NEWLINE#", "#INDENT#", "'name'", ":", "'node1'", ","]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [7, 28, 14, 34, 75, 91, 134, 58, 114, 2, 16, 110, 121, 26, 51, 79, 95, 97]}}
{"prediction": {"error_location": 0.947677493095398, "repair_targets": [], "repair_candidates": [5.378269634093158e-06, 0.3717655539512634, 0.24365034699440002, 0.0001872065186034888, 0.14368842542171478, 0.0004248763434588909, 7.92036225902848e-05, 5.024224810767919e-05, 0.23168283700942993, 0.00011921776604140177, 0.0024389885365962982, 1.8898805137723684e-05, 0.002128512831404805, 0.0015655310126021504, 1.7902630133903585e-06, 8.60046930029057e-06, 1.2931190212839283e-05, 0.002171454718336463], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 14:33:45.438866", "n_pass": [95, 6, 5], "n_token": 137, "loss": [0.03608192503452301, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def test_node_error_type_enum(", "self", ")", ":", "#NEWLINE#", "#INDENT#", "added_error_types", "=", "(", "'discover'", ",", ")", "#NEWLINE#", "nodes_table", "=", "self", ".", "meta", ".", "tables", "[", "'nodes'", "]", "#NEWLINE#", "for", "error_type", "in", "added_error_types", ":", "#NEWLINE#", "#INDENT#", "insert_table_row", "(", "nodes_table", ",", ",", "#NEWLINE#", "'status'", ":", "'error'", ",", "#NEWLINE#", "'error_type'", ":", "error_type", ",", "#NEWLINE#", "#UNINDENT#", "}", ")", "#NEWLINE#", "inserted_count", "=", "db", ".", "execute", "(", "sa", ".", "select", "(", "[", "sa", ".", "func", ".", "count", "(", "nodes_table", ".", "c", ".", "error_type", ")", "]", ")", ".", "where", "(", "sa", ".", "and_", "(", "(", "nodes_table", ".", "c", ".", "error_type", "==", "error_type", ")", ")", ")", ")", ".", "fetchone", "(", ")", "[", "0", "]", "#NEWLINE#", "self", ".", "assertEqual", "(", "inserted_count", ",", "1", ")", "#NEWLINE#", "#UNINDENT#", "with", "self", ".", "assertRaisesRegexp", "(", "DataError", ",", "'invalid input value for enum node_error_type'", ")", ":", "#NEWLINE#", "#INDENT#", "insert_table_row", "(", "nodes_table", ",", "{", "#NEWLINE#", "#INDENT#", "'name'", ":", "'node1'", ","]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [7, 28, 14, 34, 69, 85, 128, 52, 108, 2, 16, 104, 115, 26, 45, 73, 89, 91]}}
{"prediction": {"error_location": 0.9645611643791199, "repair_targets": [], "repair_candidates": [4.46762078354368e-06, 0.35387176275253296, 0.2258293777704239, 0.00013235969527158886, 0.14104360342025757, 0.0003912938991561532, 0.0003092935949098319, 3.461374217295088e-05, 0.27158287167549133, 9.231863805325702e-05, 0.0019275522790849209, 1.827465348469559e-05, 0.0016708879265934229, 0.0010765165789052844, 1.6541947616133257e-06, 7.6070468821853865e-06, 1.203107603942044e-05, 0.00199354556389153], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 14:33:45.563307", "n_pass": [96, 7, 6], "n_token": 131, "loss": [0.08592024445533752, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def test_node_error_type_enum(", "self", ")", ":", "#NEWLINE#", "#INDENT#", "added_error_types", "=", "(", "'discover'", ",", ")", "#NEWLINE#", "nodes_table", "=", "self", ".", "meta", ".", "tables", "[", "'nodes'", "]", "#NEWLINE#", "for", "error_type", "in", "added_error_types", ":", "#NEWLINE#", "#INDENT#", "insert_table_row", "(", "nodes_table", ",", "#NEWLINE#", "'error_type'", ":", "error_type", ",", "#NEWLINE#", "#UNINDENT#", "}", ")", "#NEWLINE#", "inserted_count", "=", "db", ".", "execute", "(", "sa", ".", "select", "(", "[", "sa", ".", "func", ".", "count", "(", "nodes_table", ".", "c", ".", "error_type", ")", "]", ")", ".", "where", "(", "sa", ".", "and_", "(", "(", "nodes_table", ".", "c", ".", "error_type", "==", "error_type", ")", ")", ")", ")", ".", "fetchone", "(", ")", "[", "0", "]", "#NEWLINE#", "self", ".", "assertEqual", "(", "inserted_count", ",", "1", ")", "#NEWLINE#", "#UNINDENT#", "with", "self", ".", "assertRaisesRegexp", "(", "DataError", ",", "'invalid input value for enum node_error_type'", ")", ":", "#NEWLINE#", "#INDENT#", "insert_table_row", "(", "nodes_table", ",", "{", "#NEWLINE#", "#INDENT#", "'name'", ":", "'node1'", ","]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [7, 28, 14, 34, 63, 79, 122, 46, 102, 2, 16, 98, 109, 26, 39, 67, 83, 85]}}
{"prediction": {"error_location": 0.9176675081253052, "repair_targets": [], "repair_candidates": [4.526097200141521e-06, 0.44971907138824463, 0.18468785285949707, 0.00019718219118658453, 0.16795192658901215, 0.0004984156112186611, 7.184947025962174e-05, 2.6206447728327475e-05, 0.18758073449134827, 0.00011653872934402898, 0.002132578520104289, 1.9809094737865962e-05, 0.0023769985418766737, 0.0022979655768722296, 1.601034000486834e-06, 7.851002010283992e-06, 1.1015289601346012e-05, 0.002297884551808238], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 14:33:45.684217", "n_pass": [99, 8, 7], "n_token": 125, "loss": [0.0841495543718338, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def test_node_error_type_enum(", "self", ")", ":", "#NEWLINE#", "#INDENT#", "added_error_types", "=", "(", "'discover'", ",", ")", "#NEWLINE#", "nodes_table", "=", "self", ".", "meta", ".", "tables", "[", "'nodes'", "]", "#NEWLINE#", "for", "error_type", "in", "added_error_types", ":", "#NEWLINE#", "#INDENT#", "insert_table_row", "(", "nodes_table", ",", "#NEWLINE#", "'error_type'", ":", "error_type", ",", "#NEWLINE#", "#UNINDENT#", "}", ")", "#NEWLINE#", "inserted_count", "=", "select", "(", "[", "sa", ".", "func", ".", "count", "(", "nodes_table", ".", "c", ".", "error_type", ")", "]", ")", ".", "where", "(", "sa", ".", "and_", "(", "(", "nodes_table", ".", "c", ".", "error_type", "==", "error_type", ")", ")", ")", ")", ".", "fetchone", "(", ")", "[", "0", "]", "#NEWLINE#", "self", ".", "assertEqual", "(", "inserted_count", ",", "1", ")", "#NEWLINE#", "#UNINDENT#", "with", "self", ".", "assertRaisesRegexp", "(", "DataError", ",", "'invalid input value for enum node_error_type'", ")", ":", "#NEWLINE#", "#INDENT#", "insert_table_row", "(", "nodes_table", ",", "{", "#NEWLINE#", "#INDENT#", "'name'", ":", "'node1'", ","]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [7, 28, 14, 34, 57, 73, 116, 46, 96, 2, 16, 92, 103, 26, 39, 61, 77, 79]}}
{"prediction": {"error_location": 0.9192937612533569, "repair_targets": [], "repair_candidates": [4.527155397227034e-06, 0.43721580505371094, 0.19631436467170715, 0.00020584212325047702, 0.16832727193832397, 0.00046451936941593885, 7.369453669525683e-05, 2.468071943440009e-05, 0.18876025080680847, 0.0001767808134900406, 0.0022446734365075827, 1.7397012925357558e-05, 0.002126190345734358, 0.0017982803983613849, 1.6037665773183107e-06, 7.79645506554516e-06, 1.164180321211461e-05, 0.0022246644366532564], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 14:33:45.801067", "n_pass": [100, 9, 8], "n_token": 118, "loss": [0.08426132798194885, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def test_node_error_type_enum(", "self", ")", ":", "#NEWLINE#", "#INDENT#", "added_error_types", "=", "(", "'discover'", ",", ")", "#NEWLINE#", "nodes_table", "=", "self", ".", "meta", ".", "tables", "[", "'nodes'", "]", "#NEWLINE#", "for", "error_type", "in", "added_error_types", ":", "#NEWLINE#", "#INDENT#", "insert_table_row", "(", "nodes_table", ",", "#NEWLINE#", "'error_type'", ":", "error_type", ",", "#NEWLINE#", "#UNINDENT#", "}", ")", "#NEWLINE#", "inserted_count", "=", "count", "(", "nodes_table", ".", "c", ".", "error_type", ")", "]", ")", ".", "where", "(", "sa", ".", "and_", "(", "(", "nodes_table", ".", "c", ".", "error_type", "==", "error_type", ")", ")", ")", ")", ".", "fetchone", "(", ")", "[", "0", "]", "#NEWLINE#", "self", ".", "assertEqual", "(", "inserted_count", ",", "1", ")", "#NEWLINE#", "#UNINDENT#", "with", "self", ".", "assertRaisesRegexp", "(", "DataError", ",", "'invalid input value for enum node_error_type'", ")", ":", "#NEWLINE#", "#INDENT#", "insert_table_row", "(", "nodes_table", ",", "{", "#NEWLINE#", "#INDENT#", "'name'", ":", "'node1'", ","]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [7, 28, 14, 34, 50, 66, 109, 46, 89, 2, 16, 85, 96, 26, 39, 54, 70, 72]}}
{"prediction": {"error_location": 0.9191910028457642, "repair_targets": [], "repair_candidates": [4.528929821390193e-06, 0.41408613324165344, 0.20943252742290497, 0.00020931065955664963, 0.1685182750225067, 0.00042623982881195843, 9.25560889299959e-05, 2.7283418603474274e-05, 0.19488535821437836, 0.00022984572569839656, 0.004465509206056595, 2.729914012888912e-05, 0.002640187507495284, 0.0019833394326269627, 2.3911550215416355e-06, 1.2124541171942838e-05, 1.7122378267231397e-05, 0.0029399218037724495], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 14:33:45.916366", "n_pass": [102, 10, 9], "n_token": 111, "loss": [0.08274868875741959, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def test_node_error_type_enum(", "self", ")", ":", "#NEWLINE#", "#INDENT#", "added_error_types", "=", "(", "'discover'", ",", ")", "#NEWLINE#", "nodes_table", "=", "self", ".", "meta", ".", "tables", "[", "'nodes'", "]", "#NEWLINE#", "for", "error_type", "in", "added_error_types", ":", "#NEWLINE#", "#INDENT#", "insert_table_row", "(", "nodes_table", ",", "#NEWLINE#", "'error_type'", ":", "error_type", ",", "#NEWLINE#", "#UNINDENT#", "}", ")", "#NEWLINE#", "inserted_count", "=", "count", "(", "nodes_table", ".", "c", ".", "error_type", ".", "and_", "(", "(", "nodes_table", ".", "c", ".", "error_type", "==", "error_type", ")", ")", ")", ")", ".", "fetchone", "(", ")", "[", "0", "]", "#NEWLINE#", "self", ".", "assertEqual", "(", "inserted_count", ",", "1", ")", "#NEWLINE#", "#UNINDENT#", "with", "self", ".", "assertRaisesRegexp", "(", "DataError", ",", "'invalid input value for enum node_error_type'", ")", ":", "#NEWLINE#", "#INDENT#", "insert_table_row", "(", "nodes_table", ",", "{", "#NEWLINE#", "#INDENT#", "'name'", ":", "'node1'", ","]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [7, 28, 14, 34, 50, 59, 102, 46, 82, 2, 16, 78, 89, 26, 39, 54, 63, 65]}}
{"prediction": {"error_location": 0.9205822944641113, "repair_targets": [], "repair_candidates": [4.775524757860694e-06, 0.42493098974227905, 0.21805012226104736, 0.00022179783263709396, 0.17064295709133148, 0.00042865294381044805, 9.610109555069357e-05, 2.85347177850781e-05, 0.1707465648651123, 0.00019808323122560978, 0.005394532345235348, 5.828265057061799e-05, 0.003946095705032349, 0.0023089239839464426, 2.353182708247914e-06, 1.2006034012301825e-05, 1.7828426280175336e-05, 0.0029113658238202333], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 14:33:46.026292", "n_pass": [105, 11, 10], "n_token": 104, "loss": [0.09559246897697449, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def test_node_error_type_enum(", "self", ")", ":", "#NEWLINE#", "#INDENT#", "added_error_types", "=", "(", "'discover'", ",", ")", "#NEWLINE#", "nodes_table", "=", "self", ".", "meta", ".", "tables", "[", "'nodes'", "]", "#NEWLINE#", "for", "error_type", "in", "added_error_types", ":", "#NEWLINE#", "#INDENT#", "insert_table_row", "(", "nodes_table", ",", "#NEWLINE#", "'error_type'", ":", "error_type", ",", "#NEWLINE#", "#UNINDENT#", "}", ")", "#NEWLINE#", "inserted_count", "=", "count", "(", "nodes_table", ".", "c", ".", "error_type", ".", "and_", "(", "(", "nodes_table", ".", "c", ".", "error_type", "==", "error_type", ")", ")", ")", "]", "#NEWLINE#", "self", ".", "assertEqual", "(", "inserted_count", ",", "1", ")", "#NEWLINE#", "#UNINDENT#", "with", "self", ".", "assertRaisesRegexp", "(", "DataError", ",", "'invalid input value for enum node_error_type'", ")", ":", "#NEWLINE#", "#INDENT#", "insert_table_row", "(", "nodes_table", ",", "{", "#NEWLINE#", "#INDENT#", "'name'", ":", "'node1'", ","]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [7, 28, 14, 34, 50, 59, 95, 46, 75, 2, 16, 71, 82, 26, 39, 54, 63, 65]}}
{"prediction": {"error_location": 0.9088343381881714, "repair_targets": [], "repair_candidates": [1.0952377124340273e-05, 0.32994499802589417, 0.35687974095344543, 0.0011907072039321065, 0.21737341582775116, 0.00029735692078247666, 0.0005568550550378859, 2.9247641577967443e-05, 0.08872681856155396, 0.0001939026260515675, 0.0008841297822073102, 3.3907577744685113e-05, 0.0012068693758919835, 0.00025694415671750903, 6.857509106339421e-06, 1.0281447430315893e-05, 1.953309947566595e-05, 0.0023775037843734026], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 14:33:46.239223", "n_pass": [110, 13, 11], "n_token": 97, "loss": [0.1031346470117569, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def test_node_error_type_enum(", "self", ")", ":", "#NEWLINE#", "#INDENT#", "added_error_types", "=", "(", "'discover'", ",", ")", "#NEWLINE#", "nodes_table", "=", "self", ".", "meta", ".", "tables", "[", "'nodes'", "]", "#NEWLINE#", "for", "error_type", "in", "added_error_types", ":", "#NEWLINE#", "#INDENT#", "insert_table_row", "(", "nodes_table", ",", "#NEWLINE#", "'error_type'", ":", "error_type", ",", "#NEWLINE#", "#UNINDENT#", "}", ")", "#NEWLINE#", "inserted_count", "=", "count", "(", "nodes_table", ".", "c", ".", "error_type", ".", "and_", "(", "(", "nodes_table", ".", "c", ".", "error_type", "==", "error_type", ")", ")", ")", "]", "#NEWLINE#", "self", ".", "assertEqual", "(", "inserted_count", ",", "1", ")", "#NEWLINE#", "#UNINDENT#", "with", "self", ".", "assertRaisesRegexp", "(", "DataError", ",", "'invalid input value for enum node_error_type'", ")", ":", "#NEWLINE#", "#INDENT#", "insert_table_row", "(", "nodes_table", ","]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [7, 28, 14, 34, 50, 59, 95, 46, 75, 2, 16, 71, 82, 26, 39, 54, 63, 65]}}
{"prediction": {"error_location": 0.9020053148269653, "repair_targets": [], "repair_candidates": [1.4690520401927643e-05, 0.35422420501708984, 0.37954238057136536, 0.0021907230839133263, 0.1815192848443985, 0.0004352759278845042, 0.0012878288980573416, 3.504342748783529e-05, 0.07282372564077377, 0.00026558118406683207, 0.0012334639905020595, 3.749327515834011e-05, 0.0022421025205403566, 0.0005721572088077664, 1.3608296285383403e-05, 1.4777187061554287e-05, 5.320922355167568e-05, 0.0034943530336022377], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 14:33:46.552459", "n_pass": [157, 16, 12], "n_token": 94, "loss": [0.11136864870786667, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def test_node_error_type_enum(", "self", "#INDENT#", "added_error_types", "=", "(", "'discover'", ",", ")", "#NEWLINE#", "nodes_table", "=", "self", ".", "meta", ".", "tables", "[", "'nodes'", "]", "#NEWLINE#", "for", "error_type", "in", "added_error_types", ":", "#NEWLINE#", "#INDENT#", "insert_table_row", "(", "nodes_table", ",", "#NEWLINE#", "'error_type'", ":", "error_type", ",", "#NEWLINE#", "#UNINDENT#", "}", ")", "#NEWLINE#", "inserted_count", "=", "count", "(", "nodes_table", ".", "c", ".", "error_type", ".", "and_", "(", "(", "nodes_table", ".", "c", ".", "error_type", "==", "error_type", ")", ")", ")", "]", "#NEWLINE#", "self", ".", "assertEqual", "(", "inserted_count", ",", "1", ")", "#NEWLINE#", "#UNINDENT#", "with", "self", ".", "assertRaisesRegexp", "(", "DataError", ",", "'invalid input value for enum node_error_type'", ")", ":", "#NEWLINE#", "#INDENT#", "insert_table_row", "(", "nodes_table", ","]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [4, 25, 11, 31, 47, 56, 92, 43, 72, 2, 13, 68, 79, 23, 36, 51, 60, 62]}}
{"prediction": {"error_location": 0.8946086168289185, "repair_targets": [], "repair_candidates": [2.3759992473060265e-05, 0.2839619219303131, 0.37018436193466187, 0.001498583354987204, 0.2611995041370392, 0.0005363852251321077, 0.0006240037037059665, 3.898033901350573e-05, 0.07538791000843048, 0.00023176359536591917, 0.0016180264065042138, 2.9634125894517638e-05, 0.0019585897680372, 0.00027855654479935765, 1.4365908100444358e-05, 1.4955171536712442e-05, 5.067444362794049e-05, 0.0023480290547013283], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 14:33:46.655974", "n_pass": [159, 17, 13], "n_token": 91, "loss": [0.1211898997426033, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def test_node_error_type_enum(", "self", "#INDENT#", "added_error_types", "=", ")", "#NEWLINE#", "nodes_table", "=", "self", ".", "meta", ".", "tables", "[", "'nodes'", "]", "#NEWLINE#", "for", "error_type", "in", "added_error_types", ":", "#NEWLINE#", "#INDENT#", "insert_table_row", "(", "nodes_table", ",", "#NEWLINE#", "'error_type'", ":", "error_type", ",", "#NEWLINE#", "#UNINDENT#", "}", ")", "#NEWLINE#", "inserted_count", "=", "count", "(", "nodes_table", ".", "c", ".", "error_type", ".", "and_", "(", "(", "nodes_table", ".", "c", ".", "error_type", "==", "error_type", ")", ")", ")", "]", "#NEWLINE#", "self", ".", "assertEqual", "(", "inserted_count", ",", "1", ")", "#NEWLINE#", "#UNINDENT#", "with", "self", ".", "assertRaisesRegexp", "(", "DataError", ",", "'invalid input value for enum node_error_type'", ")", ":", "#NEWLINE#", "#INDENT#", "insert_table_row", "(", "nodes_table", ","]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [4, 22, 8, 28, 44, 53, 89, 40, 69, 2, 10, 65, 76, 20, 33, 48, 57, 59]}}
{"prediction": {"error_location": 0.8858657479286194, "repair_targets": [], "repair_candidates": [9.344634236185811e-06, 0.3956678807735443, 0.23616823554039001, 0.0010602696565911174, 0.2908227741718292, 0.0006063584005460143, 0.0006181862554512918, 4.3025429476983845e-05, 0.06997700780630112, 0.00018991857359651476, 0.0010890006087720394, 2.9476394047378562e-05, 0.001511102425865829, 0.00023711661924608052, 1.6658150343573652e-05, 1.4447643479797989e-05, 5.0968301366083324e-05, 0.001888201106339693], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 14:33:46.759511", "n_pass": [162, 18, 14], "n_token": 88, "loss": [0.12832996249198914, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def test_node_error_type_enum(", "self", "#INDENT#", "added_error_types", "=", ")", "#NEWLINE#", "nodes_table", "=", "self", ".", "[", "'nodes'", "]", "#NEWLINE#", "for", "error_type", "in", "added_error_types", ":", "#NEWLINE#", "#INDENT#", "insert_table_row", "(", "nodes_table", ",", "#NEWLINE#", "'error_type'", ":", "error_type", ",", "#NEWLINE#", "#UNINDENT#", "}", ")", "#NEWLINE#", "inserted_count", "=", "count", "(", "nodes_table", ".", "c", ".", "error_type", ".", "and_", "(", "(", "nodes_table", ".", "c", ".", "error_type", "==", "error_type", ")", ")", ")", "]", "#NEWLINE#", "self", ".", "assertEqual", "(", "inserted_count", ",", "1", ")", "#NEWLINE#", "#UNINDENT#", "with", "self", ".", "assertRaisesRegexp", "(", "DataError", ",", "'invalid input value for enum node_error_type'", ")", ":", "#NEWLINE#", "#INDENT#", "insert_table_row", "(", "nodes_table", ","]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [4, 19, 8, 25, 41, 50, 86, 37, 66, 2, 10, 62, 73, 17, 30, 45, 54, 56]}}
{"prediction": {"error_location": 0.8795632123947144, "repair_targets": [], "repair_candidates": [1.1122259820695035e-05, 0.4178159534931183, 0.07507799565792084, 0.023278800770640373, 0.38709816336631775, 0.0006364024011418223, 0.001784809399396181, 5.689301178790629e-05, 0.08604925870895386, 0.0002811075246427208, 0.0016728838672861457, 4.197881571599282e-05, 0.0027423964347690344, 0.0005626927595585585, 1.695618630037643e-05, 2.2374057152774185e-05, 6.1839418776799e-05, 0.002788437297567725], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 14:33:46.859422", "n_pass": [163, 19, 15], "n_token": 85, "loss": [0.5379475355148315, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def test_node_error_type_enum(", "self", "#INDENT#", "added_error_types", "=", ")", "#NEWLINE#", "nodes_table", "=", "self", ".", "#NEWLINE#", "for", "error_type", "in", "added_error_types", ":", "#NEWLINE#", "#INDENT#", "insert_table_row", "(", "nodes_table", ",", "#NEWLINE#", "'error_type'", ":", "error_type", ",", "#NEWLINE#", "#UNINDENT#", "}", ")", "#NEWLINE#", "inserted_count", "=", "count", "(", "nodes_table", ".", "c", ".", "error_type", ".", "and_", "(", "(", "nodes_table", ".", "c", ".", "error_type", "==", "error_type", ")", ")", ")", "]", "#NEWLINE#", "self", ".", "assertEqual", "(", "inserted_count", ",", "1", ")", "#NEWLINE#", "#UNINDENT#", "with", "self", ".", "assertRaisesRegexp", "(", "DataError", ",", "'invalid input value for enum node_error_type'", ")", ":", "#NEWLINE#", "#INDENT#", "insert_table_row", "(", "nodes_table", ","]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [4, 16, 8, 22, 38, 47, 83, 34, 63, 2, 10, 59, 70, 14, 27, 42, 51, 53]}}
{"prediction": {"error_location": 0.5839454531669617, "repair_targets": [], "repair_candidates": [5.014946509618312e-06, 0.3341662585735321, 0.021811706945300102, 0.0012686782283708453, 0.6209869980812073, 0.0005227100336924195, 0.0004877651226706803, 4.3036827264586464e-05, 0.01801052689552307, 0.0001049964630510658, 0.0004348533402662724, 9.316780960944016e-06, 0.001111579593271017, 0.0001909693964989856, 6.357407983159646e-06, 7.258919595187763e-06, 1.2744880223181099e-05, 0.000819200708065182], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 14:33:47.057494", "n_pass": [168, 21, 16], "n_token": 82, "loss": [0.6938574314117432, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def test_node_error_type_enum(", "self", "#INDENT#", "added_error_types", "=", ")", "#NEWLINE#", "nodes_table", "=", "self", ".", "#NEWLINE#", "for", "error_type", "in", "added_error_types", ":", "#NEWLINE#", "#INDENT#", "insert_table_row", "(", "nodes_table", ",", "error_type", ",", "#NEWLINE#", "#UNINDENT#", "}", ")", "#NEWLINE#", "inserted_count", "=", "count", "(", "nodes_table", ".", "c", ".", "error_type", ".", "and_", "(", "(", "nodes_table", ".", "c", ".", "error_type", "==", "error_type", ")", ")", ")", "]", "#NEWLINE#", "self", ".", "assertEqual", "(", "inserted_count", ",", "1", ")", "#NEWLINE#", "#UNINDENT#", "with", "self", ".", "assertRaisesRegexp", "(", "DataError", ",", "'invalid input value for enum node_error_type'", ")", ":", "#NEWLINE#", "#INDENT#", "insert_table_row", "(", "nodes_table", ","]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [4, 16, 8, 22, 35, 44, 80, 31, 60, 2, 10, 56, 67, 14, 24, 39, 48, 50]}}
{"prediction": {"error_location": 0.4996449947357178, "repair_targets": [], "repair_candidates": [6.6112443164456636e-06, 0.41951611638069153, 0.023274611681699753, 0.002039269544184208, 0.5444372296333313, 0.0007777308346703649, 0.0010909729171544313, 2.1283187379594892e-05, 0.005943065509200096, 0.0001061238581314683, 0.0004931804724037647, 1.1391482075850945e-05, 0.0011391185689717531, 0.0002340857172384858, 8.944570254243445e-06, 7.693453881074674e-06, 1.4390505384653807e-05, 0.0008781150099821389], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 14:33:47.156223", "n_pass": [170, 22, 17], "n_token": 79, "loss": [0.5189590454101562, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def test_node_error_type_enum(", "self", "#INDENT#", "added_error_types", "=", ")", "#NEWLINE#", "nodes_table", "=", "self", ".", "#NEWLINE#", "for", "error_type", "in", "added_error_types", ":", "#NEWLINE#", "#INDENT#", "insert_table_row", "(", "nodes_table", ",", "error_type", ",", "#NEWLINE#", "#NEWLINE#", "inserted_count", "=", "count", "(", "nodes_table", ".", "c", ".", "error_type", ".", "and_", "(", "(", "nodes_table", ".", "c", ".", "error_type", "==", "error_type", ")", ")", ")", "]", "#NEWLINE#", "self", ".", "assertEqual", "(", "inserted_count", ",", "1", ")", "#NEWLINE#", "#UNINDENT#", "with", "self", ".", "assertRaisesRegexp", "(", "DataError", ",", "'invalid input value for enum node_error_type'", ")", ":", "#NEWLINE#", "#INDENT#", "insert_table_row", "(", "nodes_table", ","]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [4, 16, 8, 22, 32, 41, 77, 28, 57, 2, 10, 53, 64, 14, 24, 36, 45, 47]}}
{"prediction": {"error_location": 0.5951396822929382, "repair_targets": [], "repair_candidates": [6.2267217799671926e-06, 0.35954195261001587, 0.024501174688339233, 0.002311126561835408, 0.5960391759872437, 0.000678477284964174, 0.000812422891613096, 1.757804784574546e-05, 0.0127690639346838, 0.00012891004735138267, 0.0008050434407778084, 7.943648597574793e-06, 0.0011705593205988407, 0.00024041322467382997, 6.871620371384779e-06, 8.07523974799551e-06, 1.6487476386828348e-05, 0.0009385523735545576], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 14:33:47.252091", "n_pass": [173, 23, 18], "n_token": 76, "loss": [0.511737048625946, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def test_node_error_type_enum(", "self", "#INDENT#", "added_error_types", "=", ")", "#NEWLINE#", "nodes_table", "=", "self", ".", "#NEWLINE#", "for", "error_type", "in", "added_error_types", ":", "#NEWLINE#", "#INDENT#", "insert_table_row", "(", "nodes_table", ",", "error_type", ",", "#NEWLINE#", "#NEWLINE#", "inserted_count", "=", "count", "(", "nodes_table", "error_type", ".", "and_", "(", "(", "nodes_table", ".", "c", ".", "error_type", "==", "error_type", ")", ")", ")", "]", "#NEWLINE#", "self", ".", "assertEqual", "(", "inserted_count", ",", "1", ")", "#NEWLINE#", "#UNINDENT#", "with", "self", ".", "assertRaisesRegexp", "(", "DataError", ",", "'invalid input value for enum node_error_type'", ")", ":", "#NEWLINE#", "#INDENT#", "insert_table_row", "(", "nodes_table", ","]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [4, 16, 8, 22, 32, 38, 74, 28, 54, 2, 10, 50, 61, 14, 24, 33, 42, 44]}}
{"prediction": {"error_location": 0.5994532704353333, "repair_targets": [], "repair_candidates": [5.931356554356171e-06, 0.37150102853775024, 0.021822843700647354, 0.0023392620496451855, 0.5691874027252197, 0.0007228028262034059, 0.0004963437095284462, 1.309366780333221e-05, 0.03179524093866348, 0.0001596587389940396, 1.1777374311350286e-05, 1.2158079698565416e-05, 0.0007493377197533846, 0.00025024154456332326, 5.890689408261096e-06, 9.098845112021081e-06, 1.560503187647555e-05, 0.0009022667654789984], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 14:33:47.346596", "n_pass": [176, 24, 19], "n_token": 73, "loss": [0.5171647071838379, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def test_node_error_type_enum(", "self", "#INDENT#", "added_error_types", "=", ")", "#NEWLINE#", "nodes_table", "=", "self", ".", "#NEWLINE#", "for", "error_type", "in", "added_error_types", ":", "#NEWLINE#", "#INDENT#", "insert_table_row", "(", "nodes_table", ",", "error_type", ",", "#NEWLINE#", "#NEWLINE#", "inserted_count", "=", "count", "(", "nodes_table", "error_type", ".", "and_", "(", "(", "nodes_table", "error_type", "==", "error_type", ")", ")", ")", "]", "#NEWLINE#", "self", ".", "assertEqual", "(", "inserted_count", ",", "1", ")", "#NEWLINE#", "#UNINDENT#", "with", "self", ".", "assertRaisesRegexp", "(", "DataError", ",", "'invalid input value for enum node_error_type'", ")", ":", "#NEWLINE#", "#INDENT#", "insert_table_row", "(", "nodes_table", ","]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [4, 16, 8, 22, 32, 38, 71, 28, 51, 2, 10, 47, 58, 14, 24, 33, 39, 41]}}
{"prediction": {"error_location": 0.5962085723876953, "repair_targets": [], "repair_candidates": [3.6911330880684545e-06, 0.43676814436912537, 0.011454600840806961, 0.0012650464195758104, 0.4851818084716797, 0.0009122469928115606, 0.00014129946066532284, 9.724069968797266e-06, 0.06346986442804337, 7.498770719394088e-05, 5.0178487072116695e-06, 3.951715370931197e-06, 6.695861884509213e-06, 3.815804302575998e-05, 1.958540906343842e-06, 6.445663530030288e-06, 6.748970463377191e-06, 0.000649565365165472], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 14:33:47.439676", "n_pass": [178, 25, 20], "n_token": 70, "loss": [0.772936999797821, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def test_node_error_type_enum(", "self", "#INDENT#", "added_error_types", "=", ")", "#NEWLINE#", "nodes_table", "=", "self", ".", "#NEWLINE#", "for", "error_type", "in", "added_error_types", ":", "#NEWLINE#", "#INDENT#", "insert_table_row", "(", "nodes_table", ",", "error_type", ",", "#NEWLINE#", "#NEWLINE#", "inserted_count", "=", "count", "(", "nodes_table", "error_type", ".", "and_", "(", "(", "nodes_table", "error_type", "==", "error_type", "]", "#NEWLINE#", "self", ".", "assertEqual", "(", "inserted_count", ",", "1", ")", "#NEWLINE#", "#UNINDENT#", "with", "self", ".", "assertRaisesRegexp", "(", "DataError", ",", "'invalid input value for enum node_error_type'", ")", ":", "#NEWLINE#", "#INDENT#", "insert_table_row", "(", "nodes_table", ","]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [4, 16, 8, 22, 32, 38, 68, 28, 48, 2, 10, 44, 55, 14, 24, 33, 39, 41]}}
{"prediction": {"error_location": 0.4616551399230957, "repair_targets": [], "repair_candidates": [2.4147807380359154e-06, 0.36328181624412537, 0.006452429573982954, 0.0006984954816289246, 0.3309125304222107, 0.0009832335636019707, 0.0001288709172513336, 8.330011951329652e-06, 0.29710495471954346, 3.0487879485008307e-05, 2.0453910565265687e-06, 1.0402912948848098e-06, 2.048448095592903e-06, 8.913307283364702e-06, 3.059785058212583e-06, 3.7346608223742805e-06, 4.309757969167549e-06, 0.0003713649930432439], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 14:33:47.532540", "n_pass": [181, 26, 21], "n_token": 66, "loss": [1.198108434677124, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def test_node_error_type_enum(", "self", "#INDENT#", "added_error_types", "=", ")", "#NEWLINE#", "nodes_table", "=", "self", ".", "#NEWLINE#", "for", "error_type", "in", "added_error_types", ":", "#NEWLINE#", "#INDENT#", "insert_table_row", "(", "nodes_table", ",", "error_type", ",", "#NEWLINE#", "#NEWLINE#", "inserted_count", "=", "count", "(", "nodes_table", "error_type", ".", "and_", "(", "(", "nodes_table", "error_type", "==", "error_type", "]", "#NEWLINE#", "self", ".", "assertEqual", "(", "inserted_count", ",", "with", "self", ".", "assertRaisesRegexp", "(", "DataError", ",", "'invalid input value for enum node_error_type'", ")", ":", "#NEWLINE#", "#INDENT#", "insert_table_row", "(", "nodes_table", ","]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [4, 16, 8, 22, 32, 38, 64, 28, 48, 2, 10, 44, 51, 14, 24, 33, 39, 41]}}
{"prediction": {"error_location": 0.30176448822021484, "repair_targets": [], "repair_candidates": [1.5155047776715946e-06, 0.24597971141338348, 0.003767886431887746, 0.00042563414899632335, 0.2197256088256836, 0.0006840083515271544, 8.090319170150906e-05, 6.196349204401486e-06, 0.5291779041290283, 1.5004185115685686e-05, 9.848118907029857e-07, 6.185741767694708e-07, 1.2826619695260888e-06, 4.401460046210559e-06, 5.015095212002052e-06, 2.6992429411620833e-06, 1.4040068890608381e-05, 0.000106604173197411], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 14:33:47.620927", "n_pass": [183, 27, 22], "n_token": 62, "loss": [0.8105892539024353, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def test_node_error_type_enum(", "self", "#INDENT#", "added_error_types", "=", ")", "#NEWLINE#", "nodes_table", "=", "self", ".", "#NEWLINE#", "for", "error_type", "in", "added_error_types", ":", "#NEWLINE#", "#INDENT#", "insert_table_row", "(", "nodes_table", ",", "error_type", ",", "#NEWLINE#", "#NEWLINE#", "inserted_count", "=", "count", "(", "nodes_table", "error_type", ".", "and_", "(", "(", "nodes_table", "error_type", "==", "error_type", "]", "#NEWLINE#", "self", ".", "assertEqual", "(", "inserted_count", ",", "with", "self", ".", "assertRaisesRegexp", ")", ":", "#NEWLINE#", "#INDENT#", "insert_table_row", "(", "nodes_table", ","]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [4, 16, 8, 22, 32, 38, 60, 28, 48, 2, 10, 44, 51, 14, 24, 33, 39, 41]}}
{"prediction": {"error_location": 0.44459599256515503, "repair_targets": [], "repair_candidates": [1.2930205457450938e-06, 0.16724663972854614, 0.0035096127539873123, 0.00039132399251684546, 0.3998100459575653, 0.0007365797064267099, 0.00010842194024007767, 4.514113697950961e-06, 0.42795246839523315, 2.0996894818381406e-05, 9.950864523489145e-07, 9.828097518038703e-07, 1.4644172097177943e-06, 5.312295343173901e-06, 6.218869657459436e-06, 3.018656116182683e-06, 3.1350184144685045e-05, 0.0001687410258455202], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 14:33:47.708041", "n_pass": [184, 28, 23], "n_token": 58, "loss": [1.137244462966919, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def test_node_error_type_enum(", "self", "#INDENT#", "added_error_types", "=", ")", "#NEWLINE#", "nodes_table", "=", "self", ".", "#NEWLINE#", "for", "error_type", "in", "added_error_types", ":", "#NEWLINE#", "#INDENT#", "insert_table_row", "(", "nodes_table", ",", "error_type", ",", "#NEWLINE#", "#NEWLINE#", "inserted_count", "=", "count", "(", "nodes_table", "error_type", ".", "and_", "(", "(", "nodes_table", "error_type", "==", "error_type", "]", "#NEWLINE#", "self", ".", "assertEqual", "(", "inserted_count", ",", "with", "self", ".", "assertRaisesRegexp", "insert_table_row", "(", "nodes_table", ","]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [4, 16, 8, 22, 32, 38, 56, 28, 48, 2, 10, 44, 51, 14, 24, 33, 39, 41]}}
{"prediction": {"error_location": 0.3207015097141266, "repair_targets": [], "repair_candidates": [1.096510573006526e-06, 0.17763632535934448, 0.0027145049534738064, 0.0002596529957372695, 0.22657401859760284, 0.0005408782744780183, 7.30208630557172e-05, 3.308899295006995e-06, 0.5921424031257629, 1.2908778444398195e-05, 6.928809739292774e-07, 5.615831355498813e-07, 9.001793728202756e-07, 2.8778883915947517e-06, 5.554347353609046e-06, 2.6630207230482483e-06, 3.402954916964518e-06, 2.5237548470613547e-05], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 14:33:47.795913", "n_pass": [192, 29, 24], "n_token": 55, "loss": [1.4508453607559204, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def test_node_error_type_enum(", "self", "#INDENT#", "added_error_types", "=", ")", "#NEWLINE#", "nodes_table", "=", "self", ".", "#NEWLINE#", "for", "error_type", "in", "added_error_types", ":", "(", "nodes_table", ",", "error_type", ",", "#NEWLINE#", "#NEWLINE#", "inserted_count", "=", "count", "(", "nodes_table", "error_type", ".", "and_", "(", "(", "nodes_table", "error_type", "==", "error_type", "]", "#NEWLINE#", "self", ".", "assertEqual", "(", "inserted_count", ",", "with", "self", ".", "assertRaisesRegexp", "insert_table_row", "(", "nodes_table", ","]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [4, 16, 8, 19, 29, 35, 53, 25, 45, 2, 10, 41, 48, 14, 21, 30, 36, 38]}}
{"prediction": {"error_location": 0.23437203466892242, "repair_targets": [], "repair_candidates": [2.156006303266622e-06, 0.7879958152770996, 0.0014126974856480956, 7.096531771821901e-05, 0.08243391662836075, 0.006288486532866955, 9.315564238931984e-05, 1.4326415112009272e-05, 0.12156523764133453, 2.112732363457326e-05, 7.772977710374107e-07, 7.232027314785228e-07, 7.540959927609947e-07, 3.4319612041144865e-06, 5.329072791937506e-06, 4.872360477747861e-06, 3.2425914469058625e-06, 8.285655349027365e-05], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 14:33:48.387463", "n_pass": [258, 36, 25], "n_token": 53, "loss": [0.9891926050186157, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def test_node_error_type_enum(", "self", "#INDENT#", "added_error_types", "=", ")", "#NEWLINE#", "nodes_table", "=", "self", ".", "#NEWLINE#", "for", "error_type", "in", "added_error_types", ":", "(", "nodes_table", ",", "error_type", ",", "#NEWLINE#", "#NEWLINE#", "inserted_count", "=", "count", "(", "nodes_table", "error_type", ".", "and_", "(", "(", "nodes_table", "error_type", "==", "error_type", "self", ".", "assertEqual", "(", "inserted_count", ",", "with", "self", ".", "assertRaisesRegexp", "insert_table_row", "(", "nodes_table", ","]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [4, 16, 8, 19, 29, 35, 51, 25, 43, 2, 10, 39, 46, 14, 21, 30, 36, 38]}}
{"prediction": {"error_location": 0.3718768358230591, "repair_targets": [], "repair_candidates": [2.9888497010688297e-06, 0.8645015954971313, 0.0022024097852408886, 0.00012458392302505672, 0.12061336636543274, 0.006604989990592003, 0.00011573648225748911, 1.4397753147932235e-05, 0.005636706482619047, 3.372437276993878e-05, 1.0976190196743119e-06, 1.537812067908817e-06, 1.8178632217313861e-06, 8.731034176889807e-05, 3.995885890617501e-06, 5.980877631373005e-06, 4.733150490210392e-06, 4.294920654501766e-05], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 14:33:48.472267", "n_pass": [259, 37, 26], "n_token": 51, "loss": [1.2454936504364014, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def test_node_error_type_enum(", "self", "#INDENT#", "added_error_types", "=", ")", "#NEWLINE#", "nodes_table", "=", "self", ".", "#NEWLINE#", "for", "error_type", "in", "added_error_types", ":", "(", "nodes_table", ",", "error_type", ",", "#NEWLINE#", "#NEWLINE#", "inserted_count", "=", "count", "(", "nodes_table", "error_type", ".", "and_", "(", "(", "nodes_table", "error_type", "==", "error_type", "self", ".", "inserted_count", ",", "with", "self", ".", "assertRaisesRegexp", "insert_table_row", "(", "nodes_table", ","]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [4, 16, 8, 19, 29, 35, 49, 25, 41, 2, 10, 39, 44, 14, 21, 30, 36, 38]}}
{"prediction": {"error_location": 0.28779879212379456, "repair_targets": [], "repair_candidates": [1.8593636923469603e-06, 0.58692467212677, 0.0018189378315582871, 6.89243315719068e-05, 0.22553569078445435, 0.0038468006532639265, 6.581397610716522e-05, 1.4654626284027472e-05, 0.1810610592365265, 3.4196371416328475e-05, 7.956082868076919e-07, 5.547295813812525e-07, 1.311195887865324e-06, 0.00023595384845975786, 0.0002095121453749016, 0.00015711350715719163, 7.340514912357321e-06, 1.4689902855025139e-05], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 14:33:49.461250", "n_pass": [283, 49, 27], "n_token": 49, "loss": [1.0609304904937744, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def test_node_error_type_enum(", "self", "#INDENT#", "added_error_types", "=", ")", "#NEWLINE#", "nodes_table", "=", "self", ".", "#NEWLINE#", "for", "error_type", "in", "added_error_types", ":", "(", "nodes_table", ",", "error_type", ",", "inserted_count", "=", "count", "(", "nodes_table", "error_type", ".", "and_", "(", "(", "nodes_table", "error_type", "==", "error_type", "self", ".", "inserted_count", ",", "with", "self", ".", "assertRaisesRegexp", "insert_table_row", "(", "nodes_table", ","]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [4, 16, 8, 19, 27, 33, 47, 23, 39, 2, 10, 37, 42, 14, 21, 28, 34, 36]}}
{"prediction": {"error_location": 0.3461335599422455, "repair_targets": [], "repair_candidates": [1.3763029755864409e-06, 0.7132530808448792, 0.001188575872220099, 3.289854066679254e-05, 0.16754364967346191, 0.001769591704942286, 5.996576510369778e-05, 1.7689775631879456e-05, 0.1112975999712944, 8.127927867462859e-05, 2.3654756660107523e-06, 1.914681888592895e-06, 3.5306477457197616e-06, 0.0014930164907127619, 0.0030162003822624683, 0.0001770831731846556, 4.324470410210779e-06, 5.586131374002434e-05], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 14:33:49.542567", "n_pass": [285, 50, 28], "n_token": 47, "loss": [1.1895831823349, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def test_node_error_type_enum(", "self", "#INDENT#", "added_error_types", "=", ")", "#NEWLINE#", "nodes_table", "=", "self", ".", "#NEWLINE#", "for", "error_type", "in", "added_error_types", ":", "(", "nodes_table", ",", "error_type", ",", "inserted_count", "=", "nodes_table", "error_type", ".", "and_", "(", "(", "nodes_table", "error_type", "==", "error_type", "self", ".", "inserted_count", ",", "with", "self", ".", "assertRaisesRegexp", "insert_table_row", "(", "nodes_table", ","]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [4, 16, 8, 19, 25, 31, 45, 23, 37, 2, 10, 35, 40, 14, 21, 26, 32, 34]}}
{"prediction": {"error_location": 0.30434808135032654, "repair_targets": [], "repair_candidates": [1.47067862599215e-06, 0.6992425918579102, 0.0010930548887699842, 3.1291005143430084e-05, 0.13636884093284607, 0.001196232158690691, 7.63510906836018e-05, 1.5637751857866533e-05, 0.1590341031551361, 0.0002263329952256754, 2.3005666207609465e-06, 1.664684759816737e-06, 2.826586978699197e-06, 0.000935879535973072, 0.0015522888861596584, 0.00015575085126329213, 3.74881392417592e-06, 5.9648915339494124e-05], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 14:33:49.622798", "n_pass": [287, 51, 29], "n_token": 45, "loss": [1.0851651430130005, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def test_node_error_type_enum(", "self", "#INDENT#", "added_error_types", "=", ")", "#NEWLINE#", "nodes_table", "=", "self", ".", "#NEWLINE#", "for", "error_type", "in", "added_error_types", ":", "(", "nodes_table", ",", "error_type", ",", "inserted_count", "=", "nodes_table", "error_type", "(", "(", "nodes_table", "error_type", "==", "error_type", "self", ".", "inserted_count", ",", "with", "self", ".", "assertRaisesRegexp", "insert_table_row", "(", "nodes_table", ","]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [4, 16, 8, 19, 25, 29, 43, 23, 35, 2, 10, 33, 38, 14, 21, 26, 30, 32]}}
{"prediction": {"error_location": 0.3378460109233856, "repair_targets": [], "repair_candidates": [7.125517527128977e-07, 0.25618934631347656, 0.0005525602609850466, 2.5660965548013337e-05, 0.08218943327665329, 0.00047523906687274575, 6.30316135357134e-05, 7.1163594839163125e-06, 0.6546205878257751, 3.7429887015605345e-05, 9.177515494229738e-06, 4.28566318078083e-06, 4.6638947424071375e-06, 0.0016924539813771844, 0.004008971620351076, 7.418911263812333e-05, 4.410337623994565e-06, 4.0759423427516595e-05], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 14:33:49.783144", "n_pass": [294, 53, 30], "n_token": 43, "loss": [0.8576093912124634, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def test_node_error_type_enum(", "self", "#INDENT#", "added_error_types", "=", ")", "#NEWLINE#", "nodes_table", "=", "self", ".", "#NEWLINE#", "for", "error_type", "in", "added_error_types", ":", "(", "nodes_table", ",", "error_type", ",", "inserted_count", "=", "nodes_table", "error_type", "(", "(", "nodes_table", "error_type", "==", "error_type", "self", ".", "inserted_count", ",", "with", "self", "insert_table_row", "(", "nodes_table", ","]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [4, 16, 8, 19, 25, 29, 41, 23, 35, 2, 10, 33, 38, 14, 21, 26, 30, 32]}}
{"prediction": {"error_location": 0.424174964427948, "repair_targets": [], "repair_candidates": [1.3264736935525434e-06, 0.24975718557834625, 0.0018966408679261804, 7.315424591070041e-05, 0.15380343794822693, 0.0014651716919615865, 0.0001950694277184084, 1.988336407521274e-05, 0.589895486831665, 9.536735888104886e-05, 3.845821993309073e-05, 3.110262332484126e-05, 1.5385421647806652e-05, 0.000776761444285512, 0.0014761450001969934, 0.0002828042197506875, 5.453559788293205e-05, 0.00012206596875330433], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 14:33:50.018650", "n_pass": [300, 56, 31], "n_token": 42, "loss": [0.48509764671325684, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def test_node_error_type_enum(", "self", "added_error_types", "=", ")", "#NEWLINE#", "nodes_table", "=", "self", ".", "#NEWLINE#", "for", "error_type", "in", "added_error_types", ":", "(", "nodes_table", ",", "error_type", ",", "inserted_count", "=", "nodes_table", "error_type", "(", "(", "nodes_table", "error_type", "==", "error_type", "self", ".", "inserted_count", ",", "with", "self", "insert_table_row", "(", "nodes_table", ","]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [3, 15, 7, 18, 24, 28, 40, 22, 34, 2, 9, 32, 37, 13, 20, 25, 29, 31]}}
{"prediction": {"error_location": 0.6156370639801025, "repair_targets": [], "repair_candidates": [9.59332101047039e-06, 0.024150315672159195, 0.0029069881420582533, 6.418090197257698e-05, 0.20303989946842194, 0.0017034776974469423, 0.00012570565741043538, 1.462907312088646e-05, 0.7616309523582458, 8.375031757168472e-05, 5.33389174961485e-05, 2.4747483621467836e-05, 2.1773528715129942e-05, 0.0014371933648362756, 0.004235243424773216, 0.00025533282314427197, 0.00013679565745405853, 0.0001059638598235324], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 14:33:50.098433", "n_pass": [302, 57, 32], "n_token": 41, "loss": [0.3056904971599579, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def test_node_error_type_enum(", "self", "added_error_types", ")", "#NEWLINE#", "nodes_table", "=", "self", ".", "#NEWLINE#", "for", "error_type", "in", "added_error_types", ":", "(", "nodes_table", ",", "error_type", ",", "inserted_count", "=", "nodes_table", "error_type", "(", "(", "nodes_table", "error_type", "==", "error_type", "self", ".", "inserted_count", ",", "with", "self", "insert_table_row", "(", "nodes_table", ","]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [3, 14, 6, 17, 23, 27, 39, 21, 33, 2, 8, 31, 36, 12, 19, 24, 28, 30]}}
{"prediction": {"error_location": 0.7366145253181458, "repair_targets": [], "repair_candidates": [5.2431678341235965e-06, 0.003564653918147087, 0.006056542973965406, 6.461830344051123e-05, 0.2864587903022766, 0.0065963552333414555, 0.0004706965701188892, 2.475246219546534e-05, 0.6860384345054626, 0.00015790104225743562, 7.700576679781079e-05, 4.372847979539074e-05, 3.387383185327053e-05, 0.003140376415103674, 0.006490868981927633, 0.00039824863779358566, 0.00027419350226409733, 0.00010359058069298044], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 14:33:50.176959", "n_pass": [303, 58, 33], "n_token": 40, "loss": [0.32385262846946716, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def test_node_error_type_enum(", "self", "added_error_types", "#NEWLINE#", "nodes_table", "=", "self", ".", "#NEWLINE#", "for", "error_type", "in", "added_error_types", ":", "(", "nodes_table", ",", "error_type", ",", "inserted_count", "=", "nodes_table", "error_type", "(", "(", "nodes_table", "error_type", "==", "error_type", "self", ".", "inserted_count", ",", "with", "self", "insert_table_row", "(", "nodes_table", ","]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [3, 13, 5, 16, 22, 26, 38, 20, 32, 2, 7, 30, 35, 11, 18, 23, 27, 29]}}
{"prediction": {"error_location": 0.7233568429946899, "repair_targets": [], "repair_candidates": [5.820326805405784e-06, 0.003056654939427972, 0.007392320781946182, 0.00019601677195169032, 0.23660321533679962, 0.03732667863368988, 0.0020729152020066977, 6.426269101211801e-05, 0.6992807984352112, 0.00038553791819140315, 0.00011727925448212773, 7.753416139166802e-05, 4.407343658385798e-05, 0.004136223811656237, 0.008364646695554256, 0.0005539750563912094, 0.00022640344104729593, 9.562255581840873e-05], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 14:33:50.254973", "n_pass": [304, 59, 34], "n_token": 39, "loss": [0.4650196433067322, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def test_node_error_type_enum(", "self", "added_error_types", "nodes_table", "=", "self", ".", "#NEWLINE#", "for", "error_type", "in", "added_error_types", ":", "(", "nodes_table", ",", "error_type", ",", "inserted_count", "=", "nodes_table", "error_type", "(", "(", "nodes_table", "error_type", "==", "error_type", "self", ".", "inserted_count", ",", "with", "self", "insert_table_row", "(", "nodes_table", ","]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [3, 12, 4, 15, 21, 25, 37, 19, 31, 2, 6, 29, 34, 10, 17, 22, 26, 28]}}
{"prediction": {"error_location": 0.6281228065490723, "repair_targets": [], "repair_candidates": [2.693150963750668e-05, 0.021510040387511253, 0.02545875869691372, 0.001791257644072175, 0.22902292013168335, 0.12514278292655945, 0.004051015246659517, 0.00018018105765804648, 0.5645246505737305, 0.002018444240093231, 0.0002730519918259233, 0.0004182010015938431, 0.00016588155995123088, 0.004271227400749922, 0.01868494227528572, 0.001587240374647081, 0.00044444770901463926, 0.0004281032888684422], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 14:33:50.332635", "n_pass": [306, 60, 35], "n_token": 38, "loss": [0.8240002393722534, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def test_node_error_type_enum(", "self", "added_error_types", "nodes_table", "self", ".", "#NEWLINE#", "for", "error_type", "in", "added_error_types", ":", "(", "nodes_table", ",", "error_type", ",", "inserted_count", "=", "nodes_table", "error_type", "(", "(", "nodes_table", "error_type", "==", "error_type", "self", ".", "inserted_count", ",", "with", "self", "insert_table_row", "(", "nodes_table", ","]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [3, 11, 4, 14, 20, 24, 36, 18, 30, 2, 5, 28, 33, 9, 16, 21, 25, 27]}}
{"prediction": {"error_location": 0.43867331743240356, "repair_targets": [], "repair_candidates": [0.00011274749704170972, 0.01924046315252781, 0.01594957336783409, 0.01197858341038227, 0.23185423016548157, 0.28032079339027405, 0.005623349454253912, 0.0003721025714185089, 0.3892360329627991, 0.004681579768657684, 0.0005632803658954799, 0.000925940228626132, 0.0003976539010182023, 0.005122640635818243, 0.025221506133675575, 0.006073556374758482, 0.0009469413780607283, 0.001379080000333488], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 14:33:50.410635", "n_pass": [308, 61, 36], "n_token": 37, "loss": [1.161775827407837, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def test_node_error_type_enum(", "self", "added_error_types", "nodes_table", "self", "#NEWLINE#", "for", "error_type", "in", "added_error_types", ":", "(", "nodes_table", ",", "error_type", ",", "inserted_count", "=", "nodes_table", "error_type", "(", "(", "nodes_table", "error_type", "==", "error_type", "self", ".", "inserted_count", ",", "with", "self", "insert_table_row", "(", "nodes_table", ","]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [3, 10, 4, 13, 19, 23, 35, 17, 29, 2, 5, 27, 32, 8, 15, 20, 24, 26]}}
{"prediction": {"error_location": 0.3129299581050873, "repair_targets": [], "repair_candidates": [1.494262323831208e-05, 0.010494275949895382, 0.05791082605719566, 0.12989658117294312, 0.19692841172218323, 0.09474168717861176, 0.004418090917170048, 0.00026439657085575163, 0.45093050599098206, 0.003483437467366457, 0.0005195348057895899, 0.0006523554911836982, 0.0002942094870377332, 0.006243458483368158, 0.03500618413090706, 0.006325563415884972, 0.0006746479193679988, 0.0012007885379716754], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 14:33:50.943309", "n_pass": [363, 68, 37], "n_token": 36, "loss": [0.9049384593963623, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def test_node_error_type_enum(", "self", "added_error_types", "nodes_table", "self", "#NEWLINE#", "for", "error_type", "in", "added_error_types", ":", "nodes_table", ",", "error_type", ",", "inserted_count", "=", "nodes_table", "error_type", "(", "(", "nodes_table", "error_type", "==", "error_type", "self", ".", "inserted_count", ",", "with", "self", "insert_table_row", "(", "nodes_table", ","]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [3, 10, 4, 12, 18, 22, 34, 16, 28, 2, 5, 26, 31, 8, 14, 19, 23, 25]}}
{"prediction": {"error_location": 0.40456676483154297, "repair_targets": [], "repair_candidates": [1.2612787031685002e-05, 0.007657778449356556, 0.0644076019525528, 0.17073237895965576, 0.2399945855140686, 0.1169116199016571, 0.021199556067585945, 0.0008506417507305741, 0.2938496470451355, 0.003655838780105114, 0.0005519459373317659, 0.0007798151345923543, 0.00035417117760516703, 0.007570637855678797, 0.06439084559679031, 0.005645993631333113, 0.0006201344076544046, 0.0008142570150084794], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 14:33:51.020425", "n_pass": [365, 69, 38], "n_token": 35, "loss": [0.5306860208511353, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def test_node_error_type_enum(", "self", "added_error_types", "nodes_table", "self", "#NEWLINE#", "for", "error_type", "in", "added_error_types", ":", "nodes_table", "error_type", ",", "inserted_count", "=", "nodes_table", "error_type", "(", "(", "nodes_table", "error_type", "==", "error_type", "self", ".", "inserted_count", ",", "with", "self", "insert_table_row", "(", "nodes_table", ","]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [3, 10, 4, 12, 17, 21, 33, 15, 27, 2, 5, 25, 30, 8, 13, 18, 22, 24]}}
{"prediction": {"error_location": 0.5882013440132141, "repair_targets": [], "repair_candidates": [7.4624749686336145e-06, 0.004735663998872042, 0.04681291803717613, 0.0743841826915741, 0.26688051223754883, 0.053267382085323334, 0.0015096503775566816, 0.0009060356533154845, 0.4913922846317291, 0.0017110439948737621, 0.00037659917143173516, 0.0004884788068011403, 0.00024009616754483432, 0.007088587619364262, 0.04607732966542244, 0.0034305755980312824, 0.0003204762761015445, 0.0003706686256919056], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 14:33:51.095670", "n_pass": [367, 70, 39], "n_token": 34, "loss": [0.5444391369819641, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def test_node_error_type_enum(", "self", "added_error_types", "nodes_table", "self", "#NEWLINE#", "for", "error_type", "in", "added_error_types", ":", "nodes_table", "error_type", "inserted_count", "=", "nodes_table", "error_type", "(", "(", "nodes_table", "error_type", "==", "error_type", "self", ".", "inserted_count", ",", "with", "self", "insert_table_row", "(", "nodes_table", ","]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [3, 10, 4, 12, 16, 20, 32, 14, 26, 2, 5, 24, 29, 8, 13, 17, 21, 23]}}
{"prediction": {"error_location": 0.5801671147346497, "repair_targets": [], "repair_candidates": [5.887322913622484e-06, 0.00395660474896431, 0.03880009800195694, 0.05335810035467148, 0.20335263013839722, 0.026018595322966576, 0.00039479206316173077, 0.010238472372293472, 0.6195933222770691, 0.0012276602210476995, 0.00025853540864773095, 0.00013926577230449766, 8.23279915493913e-05, 0.005476460326462984, 0.03426647558808327, 0.0022943567018955946, 0.0002366924163652584, 0.00029957102378830314], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 14:33:51.171111", "n_pass": [369, 71, 40], "n_token": 33, "loss": [0.6099226474761963, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def test_node_error_type_enum(", "self", "added_error_types", "nodes_table", "self", "#NEWLINE#", "for", "error_type", "in", "added_error_types", ":", "nodes_table", "error_type", "inserted_count", "nodes_table", "error_type", "(", "(", "nodes_table", "error_type", "==", "error_type", "self", ".", "inserted_count", ",", "with", "self", "insert_table_row", "(", "nodes_table", ","]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [3, 10, 4, 12, 15, 19, 31, 14, 25, 2, 5, 23, 28, 8, 13, 16, 20, 22]}}
{"prediction": {"error_location": 0.5433928966522217, "repair_targets": [], "repair_candidates": [1.0115451914316509e-05, 0.006215529982000589, 0.08820554614067078, 0.17018131911754608, 0.5180552005767822, 0.013417857699096203, 0.0011707812082022429, 0.0009195457678288221, 0.002767385682091117, 0.002218816429376602, 0.0004215865337755531, 0.0011395523324608803, 0.000767343386542052, 0.020118292421102524, 0.16683383285999298, 0.005714933853596449, 0.0009701582021079957, 0.0008721508784219623], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 14:33:51.245748", "n_pass": [372, 72, 41], "n_token": 32, "loss": [0.5686848163604736, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def test_node_error_type_enum(", "self", "added_error_types", "nodes_table", "self", "#NEWLINE#", "for", "error_type", "in", "added_error_types", ":", "nodes_table", "error_type", "inserted_count", "nodes_table", "error_type", "(", "nodes_table", "error_type", "==", "error_type", "self", ".", "inserted_count", ",", "with", "self", "insert_table_row", "(", "nodes_table", ","]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [3, 10, 4, 12, 15, 18, 30, 14, 24, 2, 5, 22, 27, 8, 13, 16, 19, 21]}}
{"prediction": {"error_location": 0.5662696957588196, "repair_targets": [], "repair_candidates": [1.0738285709521733e-05, 0.006214064080268145, 0.09561864286661148, 0.19488361477851868, 0.5365089774131775, 0.014174133539199829, 0.0013680801494047046, 0.000877158367075026, 0.0022640463430434465, 0.0016553422901779413, 0.0006687479908578098, 0.005057293921709061, 0.0015162969939410686, 0.016598794609308243, 0.11489034444093704, 0.005360024515539408, 0.0011812994489446282, 0.0011524466099217534], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 14:33:51.321132", "n_pass": [373, 73, 42], "n_token": 31, "loss": [0.5021108984947205, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def test_node_error_type_enum(", "self", "added_error_types", "nodes_table", "self", "#NEWLINE#", "for", "error_type", "in", "added_error_types", ":", "nodes_table", "error_type", "inserted_count", "nodes_table", "error_type", "nodes_table", "error_type", "==", "error_type", "self", ".", "inserted_count", ",", "with", "self", "insert_table_row", "(", "nodes_table", ","]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [3, 10, 4, 12, 15, 17, 29, 14, 23, 2, 5, 21, 26, 8, 13, 16, 18, 20]}}
{"prediction": {"error_location": 0.605251669883728, "repair_targets": [], "repair_candidates": [6.685310381726595e-06, 0.0031958629842847586, 0.06926662474870682, 0.1481599360704422, 0.660541296005249, 0.009660006500780582, 0.0013071876019239426, 0.0004558238433673978, 0.000557675666641444, 0.0003900915035046637, 0.0008717243908904493, 0.0014544689329341054, 0.0010138934012502432, 0.010756545700132847, 0.08322317898273468, 0.0056623066775500774, 0.0013375296257436275, 0.0021391648333519697], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 14:33:51.394157", "n_pass": [376, 74, 43], "n_token": 30, "loss": [0.5783889293670654, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def test_node_error_type_enum(", "self", "added_error_types", "nodes_table", "self", "#NEWLINE#", "for", "error_type", "in", "added_error_types", ":", "nodes_table", "error_type", "inserted_count", "nodes_table", "error_type", "nodes_table", "error_type", "error_type", "self", ".", "inserted_count", ",", "with", "self", "insert_table_row", "(", "nodes_table", ","]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [3, 10, 4, 12, 15, 17, 28, 14, 22, 2, 5, 20, 25, 8, 13, 16, 18, 19]}}
{"prediction": {"error_location": 0.5608012080192566, "repair_targets": [], "repair_candidates": [1.0287141776643693e-05, 0.005189863499253988, 0.09492858499288559, 0.15593229234218597, 0.5920587182044983, 0.014670017175376415, 0.0014667679788544774, 0.0005824302206747234, 0.001240801764652133, 0.0006882731104269624, 0.0012448886409401894, 0.0010525999823585153, 0.0007886868552304804, 0.011021389625966549, 0.06918580830097198, 0.03483327105641365, 0.0049968441016972065, 0.010108448565006256], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 14:33:51.467183", "n_pass": [379, 75, 44], "n_token": 29, "loss": [0.680691123008728, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def test_node_error_type_enum(", "self", "added_error_types", "nodes_table", "self", "#NEWLINE#", "for", "error_type", "in", "added_error_types", ":", "nodes_table", "error_type", "inserted_count", "nodes_table", "error_type", "nodes_table", "error_type", "error_type", "self", "inserted_count", ",", "with", "self", "insert_table_row", "(", "nodes_table", ","]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [3, 10, 4, 12, 15, 17, 27, 14, 21, 2, 5, 20, 24, 8, 13, 16, 18, 19]}}
{"prediction": {"error_location": 0.5062669515609741, "repair_targets": [], "repair_candidates": [2.9493443435057998e-05, 0.015417894348502159, 0.14954134821891785, 0.06884028017520905, 0.10807088762521744, 0.13504555821418762, 0.004757511895149946, 0.0013831680407747626, 0.002262936206534505, 0.0013355730334296823, 0.0013526198454201221, 0.0011318782344460487, 0.0005933984066359699, 0.010260018520057201, 0.29575130343437195, 0.19748865067958832, 0.003559894859790802, 0.003177652135491371], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 14:33:51.612449", "n_pass": [382, 77, 45], "n_token": 28, "loss": [0.5684496164321899, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def test_node_error_type_enum(", "self", "added_error_types", "nodes_table", "self", "#NEWLINE#", "for", "error_type", "in", "added_error_types", ":", "nodes_table", "error_type", "inserted_count", "nodes_table", "error_type", "nodes_table", "error_type", "error_type", "self", "inserted_count", ",", "self", "insert_table_row", "(", "nodes_table", ","]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [3, 10, 4, 12, 15, 17, 26, 14, 21, 2, 5, 20, 23, 8, 13, 16, 18, 19]}}
{"prediction": {"error_location": 0.5664029121398926, "repair_targets": [], "repair_candidates": [3.9864251448307186e-05, 0.020821699872612953, 0.1874939501285553, 0.07245832681655884, 0.07592505216598511, 0.26570746302604675, 0.005780385807156563, 0.0015525902854278684, 0.003009688574820757, 0.0015354797942563891, 0.0010033792350441217, 0.0006292018806561828, 0.0002903137356042862, 0.004517022054642439, 0.12958921492099762, 0.21626076102256775, 0.0093715600669384, 0.004014006815850735], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 14:33:51.684273", "n_pass": [384, 78, 46], "n_token": 27, "loss": [0.40414610505104065, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def test_node_error_type_enum(", "self", "added_error_types", "nodes_table", "self", "#NEWLINE#", "for", "error_type", "in", "added_error_types", ":", "nodes_table", "error_type", "inserted_count", "nodes_table", "error_type", "nodes_table", "error_type", "error_type", "self", "inserted_count", ",", "self", "(", "nodes_table", ","]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [3, 10, 4, 12, 15, 17, 25, 14, 21, 2, 5, 20, 23, 8, 13, 16, 18, 19]}}
{"prediction": {"error_location": 0.6675466299057007, "repair_targets": [], "repair_candidates": [6.23545638518408e-05, 0.026867179200053215, 0.22816158831119537, 0.20367126166820526, 0.13164940476417542, 0.23277238011360168, 0.008260217495262623, 0.0020677647553384304, 0.0027596200816333294, 0.001193215954117477, 0.0009148194221779704, 0.0006387220928445458, 0.0002859467640519142, 0.0026828062254935503, 0.09054901450872421, 0.016702208667993546, 0.0017361562931910157, 0.049025364220142365], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 14:33:51.755186", "n_pass": [385, 79, 47], "n_token": 26, "loss": [0.5678726434707642, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def test_node_error_type_enum(", "self", "added_error_types", "nodes_table", "self", "#NEWLINE#", "for", "error_type", "in", "added_error_types", ":", "nodes_table", "error_type", "inserted_count", "nodes_table", "error_type", "nodes_table", "error_type", "error_type", "self", "inserted_count", ",", "self", "nodes_table", ","]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [3, 10, 4, 12, 15, 17, 24, 14, 21, 2, 5, 20, 23, 8, 13, 16, 18, 19]}}
{"prediction": {"error_location": 0.5667298436164856, "repair_targets": [], "repair_candidates": [4.933761010761373e-05, 0.01904413476586342, 0.24031126499176025, 0.10683365911245346, 0.07367952167987823, 0.28963181376457214, 0.006764180026948452, 0.0018462996231392026, 0.0025812210515141487, 0.0018743348773568869, 0.0013610150199383497, 0.0006906345952302217, 0.00025206615100614727, 0.0017527053132653236, 0.009038557298481464, 0.016061419621109962, 0.22770532965660095, 0.000522505899425596], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 14:33:51.825962", "n_pass": [387, 80, 48], "n_token": 25, "loss": [0.8784655928611755, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def test_node_error_type_enum(", "self", "added_error_types", "nodes_table", "self", "#NEWLINE#", "for", "error_type", "in", "added_error_types", ":", "nodes_table", "error_type", "inserted_count", "nodes_table", "error_type", "nodes_table", "error_type", "error_type", "self", "inserted_count", ",", "self", "nodes_table"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [3, 10, 4, 12, 15, 17, 24, 14, 21, 2, 5, 20, 23, 8, 13, 16, 18, 19]}}
{"prediction": {"error_location": 0.4154198467731476, "repair_targets": [], "repair_candidates": [8.710046677151695e-05, 0.03319805487990379, 0.3242104649543762, 0.13594664633274078, 0.16316935420036316, 0.2053348571062088, 0.0047728531062603, 0.0017488031880930066, 0.0031452008988708258, 0.0031245779246091843, 0.002782332245260477, 0.0016581774689257145, 0.0005136201507411897, 0.002994344336912036, 0.017775816842913628, 0.030509036034345627, 0.06855414062738419, 0.0004746079503092915], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 14:33:51.897566", "n_pass": [389, 81, 49], "n_token": 24, "loss": [1.3999831676483154, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "self", "added_error_types", "nodes_table", "self", "#NEWLINE#", "for", "error_type", "in", "added_error_types", ":", "nodes_table", "error_type", "inserted_count", "nodes_table", "error_type", "nodes_table", "error_type", "error_type", "self", "inserted_count", ",", "self", "nodes_table"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [2, 9, 3, 11, 14, 16, 23, 13, 20, 1, 4, 19, 22, 7, 12, 15, 17, 18]}}
{"prediction": {"error_location": 0.24660110473632812, "repair_targets": [], "repair_candidates": [0.003043780568987131, 0.1265305131673813, 0.3752511143684387, 0.22871939837932587, 0.04928569123148918, 0.1401316225528717, 0.0034661423414945602, 0.0016242043348029256, 0.002133761066943407, 0.0014990393538028002, 0.0008978831465356052, 0.00048793788300827146, 0.00017429448780603707, 0.0006161333876661956, 0.006197439040988684, 0.011053450405597687, 0.048474207520484924, 0.00041334284469485283], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 14:33:52.036357", "n_pass": [395, 83, 50], "n_token": 23, "loss": [1.1200023889541626, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "self", "added_error_types", "nodes_table", "self", "#NEWLINE#", "error_type", "in", "added_error_types", ":", "nodes_table", "error_type", "inserted_count", "nodes_table", "error_type", "nodes_table", "error_type", "error_type", "self", "inserted_count", ",", "self", "nodes_table"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [2, 8, 3, 10, 13, 15, 22, 12, 19, 1, 4, 18, 21, 6, 11, 14, 16, 17]}}
{"prediction": {"error_location": 0.326278954744339, "repair_targets": [], "repair_candidates": [0.008317389525473118, 0.20094706118106842, 0.15318045020103455, 0.08780729025602341, 0.0716199204325676, 0.1852193921804428, 0.002256246516481042, 0.0013348166830837727, 0.002331719035282731, 0.0018999725580215454, 0.0014346246607601643, 0.000907099514734, 0.0002825459523592144, 0.002064608968794346, 0.04237838834524155, 0.07234346866607666, 0.16423074901103973, 0.0014443013351410627], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 14:33:52.106046", "n_pass": [397, 84, 51], "n_token": 22, "loss": [1.410499930381775, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "self", "added_error_types", "nodes_table", "self", "#NEWLINE#", "error_type", "added_error_types", ":", "nodes_table", "error_type", "inserted_count", "nodes_table", "error_type", "nodes_table", "error_type", "error_type", "self", "inserted_count", ",", "self", "nodes_table"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [2, 7, 3, 9, 12, 14, 21, 11, 18, 1, 4, 17, 20, 6, 10, 13, 15, 16]}}
{"prediction": {"error_location": 0.24402129650115967, "repair_targets": [], "repair_candidates": [0.0038568489253520966, 0.12395250797271729, 0.01106539648026228, 0.0018496055854484439, 0.00847572274506092, 0.7611975073814392, 0.0011116430396214128, 0.0008499901741743088, 0.0017762243514880538, 0.0013440444599837065, 0.0005141236470080912, 0.00027131507522426546, 0.00010317954729543999, 0.000997384893707931, 0.011358439922332764, 0.023194152861833572, 0.04785085842013359, 0.000231048499699682], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 14:33:52.177403", "n_pass": [399, 85, 52], "n_token": 21, "loss": [1.0527513027191162, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "self", "added_error_types", "nodes_table", "self", "#NEWLINE#", "error_type", "added_error_types", "nodes_table", "error_type", "inserted_count", "nodes_table", "error_type", "nodes_table", "error_type", "error_type", "self", "inserted_count", ",", "self", "nodes_table"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [2, 7, 3, 8, 11, 13, 20, 10, 17, 1, 4, 16, 19, 6, 9, 12, 14, 15]}}
{"prediction": {"error_location": 0.3489763140678406, "repair_targets": [], "repair_candidates": [0.025262970477342606, 0.8862777352333069, 0.021313142031431198, 0.0011841683881357312, 0.00034846842754632235, 0.0022002721671015024, 0.00043654657201841474, 0.0013100388459861279, 0.0031075214501470327, 0.004046479240059853, 0.0023684012703597546, 0.000687397550791502, 0.00024309691798407584, 0.001053104642778635, 0.009411748498678207, 0.017660636454820633, 0.022861270233988762, 0.00022687992895953357], "target_probs": 0.0}}




Minimal simplified tokens:

['#NEWLINE#', 'self', 'added_error_types', 'nodes_table', 'self', '#NEWLINE#', 'error_type', 'added_error_types', 'nodes_table', 'error_type', 'inserted_count', 'nodes_table', 'error_type', 'nodes_table', 'error_type', 'error_type', 'self', 'inserted_count', ',', 'self', 'nodes_table']
