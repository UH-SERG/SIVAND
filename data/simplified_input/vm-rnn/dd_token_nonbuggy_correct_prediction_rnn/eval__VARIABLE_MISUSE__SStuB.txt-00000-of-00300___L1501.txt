
Original sample:

{"has_bug": false, "bug_kind": 0, "bug_kind_name": "NONE", "source_tokens": ["#NEWLINE#", "def validate(", "self", ")", ":", "#NEWLINE#", "#INDENT#", "if", "(", "self", ".", "properties", "[", "'Type'", "]", "!=", "'String'", ")", ":", "#NEWLINE#", "#INDENT#", "for", "p", "in", "self", ".", "STRING_PROPERTIES", ":", "#NEWLINE#", "#INDENT#", "if", "(", "p", "in", "self", ".", "properties", ")", ":", "#NEWLINE#", "#INDENT#", "raise", "ValueError", "(", "(", "'%s can only be used with parameters of the String type.'", "%", "p", ")", ")", "#NEWLINE#", "#UNINDENT#", "#UNINDENT#", "#UNINDENT#", "if", "(", "self", ".", "properties", "[", "'Type'", "]", "!=", "'Number'", ")", ":", "#NEWLINE#", "#INDENT#", "for", "p", "in", "self", ".", "NUMBER_PROPERTIES", ":", "#NEWLINE#", "#INDENT#", "if", "(", "p", "in", "self", ".", "properties", ")", ":", "#NEWLINE#", "#INDENT#", "raise", "ValueError", "(", "(", "'%s can only be used with parameters of the Number type.'", "%", "p", ")", ")"], "error_location": [0], "repair_targets": [], "repair_candidates": [22, 32, 47, 69, 79, 94, 2, 9, 24, 34, 56, 71, 81], "provenances": [{"datasetProvenance": {"datasetName": "ETHPy150Open", "filepath": "cloudtools/troposphere/troposphere/__init__.py", "license": "bsd-2-clause", "note": "license: bigquery_api"}}], "txt_file": "eval__VARIABLE_MISUSE__SStuB.txt-00000-of-00300", "js_count": 1501, "results": {"model": "rnn", "prob": {"loc": [[0.9306257963180542, 4.4439409975893795e-05, 1.541257120152295e-06, 1.0363873315100136e-08, 6.318005230099288e-09, 9.045094202519977e-07, 7.509195256716339e-07, 2.1828175533755712e-07, 3.7596979041154555e-07, 6.463233148679137e-05, 8.042641219674351e-09, 2.496929312201246e-07, 7.6635604528974e-09, 7.0810724537295755e-06, 1.2511906106738024e-06, 1.7585408329523489e-07, 4.0623970676278987e-07, 3.064984639422619e-07, 1.9011910978861124e-07, 1.4489828572550323e-05, 1.1810473552031908e-05, 8.743610351302777e-07, 1.3062827974863467e-06, 6.621240800086525e-08, 3.7696954677812755e-06, 3.484187871549693e-08, 1.5338914138851578e-08, 1.757098175403371e-06, 1.4876950160669367e-07, 3.384333524536487e-07, 3.659038227965539e-08, 3.8511993238898867e-07, 0.00804861169308424, 1.2644587741306168e-06, 0.00010005602234741673, 3.520447222626899e-08, 1.2064560905855615e-06, 1.396819442334163e-07, 1.1801353849705265e-07, 7.605394785059616e-07, 2.387390338753903e-07, 6.808050443396496e-07, 3.919516586847749e-07, 3.9318564404311473e-07, 2.6896948384091957e-06, 0.0011909905588254333, 8.932246231552199e-08, 0.026953868567943573, 7.735204121672723e-07, 1.8545378566159343e-07, 1.391874548062333e-06, 1.6442951391582028e-06, 3.165936504956335e-06, 8.432093636656646e-06, 1.7438874522213155e-07, 1.5538105344603537e-06, 0.0017058950616046786, 1.027597278380199e-07, 8.931543220569438e-07, 2.1246275849762242e-08, 2.317584221600555e-05, 1.5372943380498327e-05, 1.2137635394537938e-06, 4.48158573362889e-07, 5.639391247314052e-07, 4.179552490768401e-07, 1.8049468053504825e-05, 2.7144809791934676e-05, 7.109583179953916e-07, 3.145153868899797e-06, 4.627829639503034e-07, 9.574018622515723e-05, 9.623656183066487e-08, 1.0406347428215668e-07, 1.708280706225196e-06, 6.417358804355899e-07, 1.945071289810585e-06, 1.1531471244552449e-07, 4.666096913297224e-07, 0.011727520264685154, 1.9282645098428475e-06, 0.0012413940858095884, 4.522853203070554e-08, 6.912258868396748e-06, 2.9341973117880116e-07, 2.636810165768111e-07, 1.6182208355530747e-06, 2.992662757606013e-07, 1.1204663223907119e-06, 8.20131560885784e-07, 5.402231408879743e-07, 3.638372845671256e-06, 0.0016970984870567918, 1.2789057279860572e-07, 0.016314683482050896, 5.001663225812081e-07, 3.021295924554579e-07]], "pointer": [[0.0, 0.0, 0.01488363929092884, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.017022907733917236, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.2382340282201767, 0.0, 0.05063199624419212, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0005162287852726877, 0.0, 0.00253655225969851, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0002062672283500433, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.07818251103162766, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.5632500052452087, 0.0, 0.009729836136102676, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.001276513678021729, 0.0, 0.023253915831446648, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.00027560137095861137, 0.0, 0.0]], "target": [0.0]}, "loss": [0.07189789414405823, 0.0], "acc": [1.0, 0.0, 0.0, 0.0]}}


Trace of simplified code(s):

{"result": {"time": "2021-02-11 13:54:09.002560", "n_pass": [1, 1, 1], "n_token": 97, "loss": [0.07189789414405823, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def validate(", "self", ")", ":", "#NEWLINE#", "#INDENT#", "if", "(", "self", ".", "properties", "[", "'Type'", "]", "!=", "'String'", ")", ":", "#NEWLINE#", "#INDENT#", "for", "p", "in", "self", ".", "STRING_PROPERTIES", ":", "#NEWLINE#", "#INDENT#", "if", "(", "p", "in", "self", ".", "properties", ")", ":", "#NEWLINE#", "#INDENT#", "raise", "ValueError", "(", "(", "'%s can only be used with parameters of the String type.'", "%", "p", ")", ")", "#NEWLINE#", "#UNINDENT#", "#UNINDENT#", "#UNINDENT#", "if", "(", "self", ".", "properties", "[", "'Type'", "]", "!=", "'Number'", ")", ":", "#NEWLINE#", "#INDENT#", "for", "p", "in", "self", ".", "NUMBER_PROPERTIES", ":", "#NEWLINE#", "#INDENT#", "if", "(", "p", "in", "self", ".", "properties", ")", ":", "#NEWLINE#", "#INDENT#", "raise", "ValueError", "(", "(", "'%s can only be used with parameters of the Number type.'", "%", "p", ")", ")"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [22, 32, 47, 69, 79, 94, 2, 9, 24, 34, 56, 71, 81]}}
{"prediction": {"error_location": 0.9306257963180542, "repair_targets": [], "repair_candidates": [0.01488363929092884, 0.017022907733917236, 0.2382340282201767, 0.05063199624419212, 0.0005162287852726877, 0.00253655225969851, 0.0002062672283500433, 0.07818251103162766, 0.5632500052452087, 0.009729836136102676, 0.001276513678021729, 0.023253915831446648, 0.00027560137095861137], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 13:54:09.099794", "n_pass": [46, 2, 2], "n_token": 91, "loss": [0.07731522619724274, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def validate(", "self", ")", ":", "#NEWLINE#", "#INDENT#", "if", "(", "self", ".", "properties", ":", "#NEWLINE#", "#INDENT#", "for", "p", "in", "self", ".", "STRING_PROPERTIES", ":", "#NEWLINE#", "#INDENT#", "if", "(", "p", "in", "self", ".", "properties", ")", ":", "#NEWLINE#", "#INDENT#", "raise", "ValueError", "(", "(", "'%s can only be used with parameters of the String type.'", "%", "p", ")", ")", "#NEWLINE#", "#UNINDENT#", "#UNINDENT#", "#UNINDENT#", "if", "(", "self", ".", "properties", "[", "'Type'", "]", "!=", "'Number'", ")", ":", "#NEWLINE#", "#INDENT#", "for", "p", "in", "self", ".", "NUMBER_PROPERTIES", ":", "#NEWLINE#", "#INDENT#", "if", "(", "p", "in", "self", ".", "properties", ")", ":", "#NEWLINE#", "#INDENT#", "raise", "ValueError", "(", "(", "'%s can only be used with parameters of the Number type.'", "%", "p", ")", ")"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [16, 26, 41, 63, 73, 88, 2, 9, 18, 28, 50, 65, 75]}}
{"prediction": {"error_location": 0.9255980253219604, "repair_targets": [], "repair_candidates": [0.02099715732038021, 0.0019140789518132806, 0.16277340054512024, 0.04883003979921341, 0.0006949853268451989, 0.003917150665074587, 0.00023329041141550988, 0.08589338511228561, 0.6174455881118774, 0.012081922963261604, 0.0014368132688105106, 0.0435095876455307, 0.000272696022875607], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 13:54:09.193189", "n_pass": [49, 3, 3], "n_token": 85, "loss": [0.09890159219503403, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def validate(", "self", ")", ":", "#NEWLINE#", "#INDENT#", "if", "(", "self", ".", "properties", ":", "#NEWLINE#", "#INDENT#", "for", "p", "in", "self", ".", "STRING_PROPERTIES", ":", "#NEWLINE#", "#INDENT#", "if", "(", "p", "in", "self", ".", "ValueError", "(", "(", "'%s can only be used with parameters of the String type.'", "%", "p", ")", ")", "#NEWLINE#", "#UNINDENT#", "#UNINDENT#", "#UNINDENT#", "if", "(", "self", ".", "properties", "[", "'Type'", "]", "!=", "'Number'", ")", ":", "#NEWLINE#", "#INDENT#", "for", "p", "in", "self", ".", "NUMBER_PROPERTIES", ":", "#NEWLINE#", "#INDENT#", "if", "(", "p", "in", "self", ".", "properties", ")", ":", "#NEWLINE#", "#INDENT#", "raise", "ValueError", "(", "(", "'%s can only be used with parameters of the Number type.'", "%", "p", ")", ")"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [16, 26, 35, 57, 67, 82, 2, 9, 18, 28, 44, 59, 69]}}
{"prediction": {"error_location": 0.9058321118354797, "repair_targets": [], "repair_candidates": [0.03108949586749077, 0.0027148777153342962, 0.12906880676746368, 0.050493549555540085, 0.0005164558533579111, 0.0013953458983451128, 5.041210897616111e-05, 0.10310689359903336, 0.6114444136619568, 0.01277773454785347, 0.0021680903155356646, 0.05471162870526314, 0.0004623325075954199], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 13:54:09.282496", "n_pass": [51, 4, 4], "n_token": 79, "loss": [0.18088579177856445, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def validate(", "self", ")", ":", "#NEWLINE#", "#INDENT#", "if", "(", "self", ".", "properties", ":", "#NEWLINE#", "#INDENT#", "for", "p", "in", "self", ".", "STRING_PROPERTIES", ":", "#NEWLINE#", "#INDENT#", "if", "(", "p", "in", "self", ".", "ValueError", "(", "(", "'%s can only be used with parameters of the String type.'", "%", "p", "if", "(", "self", ".", "properties", "[", "'Type'", "]", "!=", "'Number'", ")", ":", "#NEWLINE#", "#INDENT#", "for", "p", "in", "self", ".", "NUMBER_PROPERTIES", ":", "#NEWLINE#", "#INDENT#", "if", "(", "p", "in", "self", ".", "properties", ")", ":", "#NEWLINE#", "#INDENT#", "raise", "ValueError", "(", "(", "'%s can only be used with parameters of the Number type.'", "%", "p", ")", ")"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [16, 26, 35, 51, 61, 76, 2, 9, 18, 28, 38, 53, 63]}}
{"prediction": {"error_location": 0.8345306515693665, "repair_targets": [], "repair_candidates": [0.010582532733678818, 0.0007197569939307868, 0.07760635018348694, 0.011950327083468437, 0.00048450875328853726, 0.00032887666020542383, 1.6842730474309064e-05, 0.0032791972626000643, 0.859679639339447, 0.005268755368888378, 0.0008280327310785651, 0.029101133346557617, 0.0001538798096589744], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 13:54:09.368370", "n_pass": [53, 5, 5], "n_token": 73, "loss": [0.08499083667993546, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def validate(", "self", ")", ":", "#NEWLINE#", "#INDENT#", "if", "(", "self", ".", "properties", ":", "#NEWLINE#", "#INDENT#", "for", "p", "in", "self", ".", "STRING_PROPERTIES", ":", "#NEWLINE#", "#INDENT#", "if", "(", "p", "in", "self", ".", "ValueError", "(", "(", "'%s can only be used with parameters of the String type.'", "%", "p", "if", "(", "self", ".", "properties", "[", "#NEWLINE#", "#INDENT#", "for", "p", "in", "self", ".", "NUMBER_PROPERTIES", ":", "#NEWLINE#", "#INDENT#", "if", "(", "p", "in", "self", ".", "properties", ")", ":", "#NEWLINE#", "#INDENT#", "raise", "ValueError", "(", "(", "'%s can only be used with parameters of the Number type.'", "%", "p", ")", ")"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [16, 26, 35, 45, 55, 70, 2, 9, 18, 28, 38, 47, 57]}}
{"prediction": {"error_location": 0.918520987033844, "repair_targets": [], "repair_candidates": [0.023905012756586075, 0.0011714790016412735, 0.06522774696350098, 0.02362591214478016, 0.0003438189160078764, 0.0007509173010475934, 2.5624352929298766e-05, 0.0015846333699300885, 0.8439437747001648, 0.005478474777191877, 0.0010312427766621113, 0.03271574527025223, 0.0001955360930878669], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 13:54:09.451227", "n_pass": [55, 6, 6], "n_token": 67, "loss": [0.08766334503889084, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def validate(", "self", ")", ":", "#NEWLINE#", "#INDENT#", "if", "(", "self", ".", "properties", ":", "#NEWLINE#", "#INDENT#", "for", "p", "in", "self", ".", "STRING_PROPERTIES", ":", "#NEWLINE#", "#INDENT#", "if", "(", "p", "in", "self", ".", "ValueError", "(", "(", "'%s can only be used with parameters of the String type.'", "%", "p", "if", "(", "self", ".", "properties", "[", "#NEWLINE#", "#INDENT#", "for", "p", "in", "self", "(", "p", "in", "self", ".", "properties", ")", ":", "#NEWLINE#", "#INDENT#", "raise", "ValueError", "(", "(", "'%s can only be used with parameters of the Number type.'", "%", "p", ")", ")"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [16, 26, 35, 45, 49, 64, 2, 9, 18, 28, 38, 47, 51]}}
{"prediction": {"error_location": 0.9160694479942322, "repair_targets": [], "repair_candidates": [0.1303880661725998, 0.004682756960391998, 0.22108513116836548, 0.08876816928386688, 0.0018392872298136353, 0.002501999493688345, 0.0001041870636981912, 0.005738848354667425, 0.4624164402484894, 0.005126100964844227, 0.00055235082982108, 0.07621914148330688, 0.0005774935125373304], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 13:54:09.530756", "n_pass": [57, 7, 7], "n_token": 61, "loss": [0.13181190192699432, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def validate(", "self", ")", ":", "#NEWLINE#", "#INDENT#", "if", "(", "self", ".", "properties", ":", "#NEWLINE#", "#INDENT#", "for", "p", "in", "self", ".", "STRING_PROPERTIES", ":", "#NEWLINE#", "#INDENT#", "if", "(", "p", "in", "self", ".", "ValueError", "(", "(", "'%s can only be used with parameters of the String type.'", "%", "p", "if", "(", "self", ".", "properties", "[", "#NEWLINE#", "#INDENT#", "for", "p", "in", "self", "(", "p", "in", "self", ".", "properties", "(", "(", "'%s can only be used with parameters of the Number type.'", "%", "p", ")", ")"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [16, 26, 35, 45, 49, 58, 2, 9, 18, 28, 38, 47, 51]}}
{"prediction": {"error_location": 0.8765058517456055, "repair_targets": [], "repair_candidates": [0.12940968573093414, 0.007914782501757145, 0.5786477327346802, 0.15818141400814056, 0.002535488922148943, 0.004931739065796137, 0.00025627564173191786, 0.01795150712132454, 0.07535760849714279, 0.008640429005026817, 0.0008493633940815926, 0.014838870614767075, 0.0004850500845350325], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 13:54:09.610224", "n_pass": [88, 8, 8], "n_token": 58, "loss": [0.08209430426359177, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def validate(", "self", ")", ":", "#NEWLINE#", "#INDENT#", "if", "(", "self", ".", "properties", ":", "#NEWLINE#", "#INDENT#", "for", "p", "in", "self", ".", "STRING_PROPERTIES", ":", "#NEWLINE#", "#INDENT#", "if", "(", "p", "in", "self", ".", "ValueError", "(", "(", "'%s can only be used with parameters of the String type.'", "%", "p", "if", "(", "self", ".", "properties", "[", "#NEWLINE#", "#INDENT#", "for", "p", "in", "self", "(", "p", "in", "self", ".", "properties", "%", "p", ")", ")"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [16, 26, 35, 45, 49, 55, 2, 9, 18, 28, 38, 47, 51]}}
{"prediction": {"error_location": 0.9211849570274353, "repair_targets": [], "repair_candidates": [0.06200121343135834, 0.005080202594399452, 0.6063939929008484, 0.1174703910946846, 0.0026337187737226486, 0.0032414018642157316, 0.000273243262199685, 0.011000384576618671, 0.18045151233673096, 0.006164363119751215, 0.00042808055877685547, 0.0021698123309761286, 0.002691628411412239], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 13:54:09.689490", "n_pass": [90, 9, 9], "n_token": 55, "loss": [0.11248119920492172, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def validate(", "self", "#INDENT#", "if", "(", "self", ".", "properties", ":", "#NEWLINE#", "#INDENT#", "for", "p", "in", "self", ".", "STRING_PROPERTIES", ":", "#NEWLINE#", "#INDENT#", "if", "(", "p", "in", "self", ".", "ValueError", "(", "(", "'%s can only be used with parameters of the String type.'", "%", "p", "if", "(", "self", ".", "properties", "[", "#NEWLINE#", "#INDENT#", "for", "p", "in", "self", "(", "p", "in", "self", ".", "properties", "%", "p", ")", ")"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [13, 23, 32, 42, 46, 52, 2, 6, 15, 25, 35, 44, 48]}}
{"prediction": {"error_location": 0.8936141729354858, "repair_targets": [], "repair_candidates": [0.0029111728072166443, 0.0007385639473795891, 0.8542267084121704, 0.04413827136158943, 0.0013710563071072102, 0.0011204683687537909, 0.00018366445146966726, 0.005064691416919231, 0.08543498814105988, 0.0020550552289932966, 0.0002548474876675755, 0.0006808757316321135, 0.001819571596570313], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 13:54:09.764522", "n_pass": [91, 10, 10], "n_token": 52, "loss": [0.152263343334198, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def validate(", "self", "self", ".", "properties", ":", "#NEWLINE#", "#INDENT#", "for", "p", "in", "self", ".", "STRING_PROPERTIES", ":", "#NEWLINE#", "#INDENT#", "if", "(", "p", "in", "self", ".", "ValueError", "(", "(", "'%s can only be used with parameters of the String type.'", "%", "p", "if", "(", "self", ".", "properties", "[", "#NEWLINE#", "#INDENT#", "for", "p", "in", "self", "(", "p", "in", "self", ".", "properties", "%", "p", ")", ")"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [10, 20, 29, 39, 43, 49, 2, 3, 12, 22, 32, 41, 45]}}
{"prediction": {"error_location": 0.8587620854377747, "repair_targets": [], "repair_candidates": [0.014620818197727203, 0.0007836544536985457, 0.6850442886352539, 0.1406507045030594, 0.0037193847820162773, 0.00350046600215137, 0.00038222401053644717, 0.007924840785562992, 0.12672238051891327, 0.007399546913802624, 0.000685413193423301, 0.002260219305753708, 0.0063060978427529335], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 13:54:09.838020", "n_pass": [93, 11, 11], "n_token": 49, "loss": [0.26554590463638306, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def validate(", "self", "self", ".", "properties", "for", "p", "in", "self", ".", "STRING_PROPERTIES", ":", "#NEWLINE#", "#INDENT#", "if", "(", "p", "in", "self", ".", "ValueError", "(", "(", "'%s can only be used with parameters of the String type.'", "%", "p", "if", "(", "self", ".", "properties", "[", "#NEWLINE#", "#INDENT#", "for", "p", "in", "self", "(", "p", "in", "self", ".", "properties", "%", "p", ")", ")"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [7, 17, 26, 36, 40, 46, 2, 3, 9, 19, 29, 38, 42]}}
{"prediction": {"error_location": 0.7667872309684753, "repair_targets": [], "repair_candidates": [0.016781847923994064, 0.25799432396888733, 0.4885638952255249, 0.2049909234046936, 0.006011289544403553, 0.0010887550888583064, 0.0006063106702640653, 0.0036066428292542696, 0.011422560550272465, 0.0007052812143228948, 0.0018999349558725953, 0.000920845428481698, 0.005407344549894333], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 13:54:09.910309", "n_pass": [96, 12, 12], "n_token": 46, "loss": [0.3707295060157776, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def validate(", "self", "self", ".", "properties", "for", "p", "in", "self", ".", "STRING_PROPERTIES", "if", "(", "p", "in", "self", ".", "ValueError", "(", "(", "'%s can only be used with parameters of the String type.'", "%", "p", "if", "(", "self", ".", "properties", "[", "#NEWLINE#", "#INDENT#", "for", "p", "in", "self", "(", "p", "in", "self", ".", "properties", "%", "p", ")", ")"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [7, 14, 23, 33, 37, 43, 2, 3, 9, 16, 26, 35, 39]}}
{"prediction": {"error_location": 0.690230667591095, "repair_targets": [], "repair_candidates": [0.01493337843567133, 0.7745859026908875, 0.19242823123931885, 0.006511401385068893, 0.0010742557933554053, 0.0005655518034473062, 9.164661605609581e-05, 0.0011950533371418715, 0.005040236748754978, 0.00024358539667446166, 0.0014149714261293411, 0.00024244794622063637, 0.0016733590746298432], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 13:54:09.981439", "n_pass": [99, 13, 13], "n_token": 43, "loss": [0.49256789684295654, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def validate(", "self", "self", ".", "properties", "for", "p", "in", "self", ".", "STRING_PROPERTIES", "if", "(", "p", "in", "self", ".", "'%s can only be used with parameters of the String type.'", "%", "p", "if", "(", "self", ".", "properties", "[", "#NEWLINE#", "#INDENT#", "for", "p", "in", "self", "(", "p", "in", "self", ".", "properties", "%", "p", ")", ")"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [7, 14, 20, 30, 34, 40, 2, 3, 9, 16, 23, 32, 36]}}
{"prediction": {"error_location": 0.6110551953315735, "repair_targets": [], "repair_candidates": [0.008838753215968609, 0.9358347058296204, 0.049299560487270355, 0.004640074446797371, 0.0002787865523714572, 6.755738286301494e-05, 3.793673840846168e-06, 0.00015304735279642045, 0.0004434006696101278, 5.912081905989908e-05, 0.00011401771189412102, 5.713052814826369e-05, 0.00020997242245357484], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 13:54:10.121781", "n_pass": [103, 15, 14], "n_token": 40, "loss": [0.3690044581890106, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def validate(", "self", "self", ".", "properties", "for", "p", "in", "self", ".", "STRING_PROPERTIES", "if", "(", "p", "in", "self", ".", "'%s can only be used with parameters of the String type.'", "%", "p", "if", "(", "self", ".", "properties", "[", "p", "in", "self", "(", "p", "in", "self", ".", "properties", "%", "p", ")", ")"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [7, 14, 20, 27, 31, 37, 2, 3, 9, 16, 23, 29, 33]}}
{"prediction": {"error_location": 0.6914223432540894, "repair_targets": [], "repair_candidates": [0.011352906934916973, 0.9276177883148193, 0.0408029705286026, 0.0031597765628248453, 0.0007512783049605787, 0.00016271597996819764, 2.19170415221015e-05, 0.0005509559996426105, 0.01273971889168024, 0.0008753358270041645, 0.0007220395491458476, 0.00023592969228047878, 0.0010067116236314178], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 13:54:10.189911", "n_pass": [116, 16, 15], "n_token": 37, "loss": [0.27257174253463745, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def validate(", "self", "self", ".", "properties", "for", "p", "in", "self", ".", "STRING_PROPERTIES", "if", "(", "p", "in", "self", ".", "'%s can only be used with parameters of the String type.'", "%", "p", "if", "(", "self", "p", "in", "self", "(", "p", "in", "self", ".", "properties", "%", "p", ")", ")"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [7, 14, 20, 24, 28, 34, 2, 3, 9, 16, 23, 26, 30]}}
{"prediction": {"error_location": 0.7614188194274902, "repair_targets": [], "repair_candidates": [0.03216410055756569, 0.3183510899543762, 0.5086392760276794, 0.012084202840924263, 0.0658738985657692, 0.0013885446824133396, 0.0011556906392797828, 0.031342945992946625, 0.003640341805294156, 0.0008375669131055474, 0.004182450473308563, 0.00026887431158684194, 0.020071005448698997], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 13:54:10.257271", "n_pass": [153, 17, 16], "n_token": 35, "loss": [0.5563464164733887, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def validate(", "self", "self", ".", "properties", "for", "p", "in", "self", ".", "STRING_PROPERTIES", "if", "(", "p", "in", "self", ".", "'%s can only be used with parameters of the String type.'", "%", "p", "self", "p", "in", "self", "(", "p", "in", "self", ".", "properties", "%", "p", ")", ")"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [7, 14, 20, 22, 26, 32, 2, 3, 9, 16, 21, 24, 28]}}
{"prediction": {"error_location": 0.5732998847961426, "repair_targets": [], "repair_candidates": [0.012094967998564243, 0.4633917510509491, 0.5118374824523926, 0.005554713774472475, 0.0023941821418702602, 0.000930950278416276, 0.0002163376921089366, 0.0018467610934749246, 0.0004118233919143677, 0.0004279252316337079, 0.00013548812421504408, 3.488238144200295e-05, 0.0007227642345242202], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 13:54:10.323169", "n_pass": [158, 18, 17], "n_token": 33, "loss": [0.24462004005908966, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def validate(", "self", "self", ".", "properties", "for", "p", "in", "self", ".", "STRING_PROPERTIES", "if", "(", "p", "in", "self", ".", "'%s can only be used with parameters of the String type.'", "%", "p", "self", "p", "in", "self", "(", "p", "in", "self", "%", "p", ")", ")"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [7, 14, 20, 22, 26, 30, 2, 3, 9, 16, 21, 24, 28]}}
{"prediction": {"error_location": 0.7830020785331726, "repair_targets": [], "repair_candidates": [0.024209672585129738, 0.4558183550834656, 0.47069597244262695, 0.014378687366843224, 0.024170303717255592, 0.0019832532852888107, 0.00039580120937898755, 0.0019247655291110277, 0.0011185355251654983, 0.0007506278343498707, 0.0034572191070765257, 0.0008869339362718165, 0.0002100541169056669], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 13:54:10.387477", "n_pass": [160, 19, 18], "n_token": 31, "loss": [0.0902019515633583, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def validate(", "self", "self", ".", "properties", "for", "p", "in", "self", ".", "STRING_PROPERTIES", "if", "(", "p", "in", "self", ".", "'%s can only be used with parameters of the String type.'", "%", "p", "self", "p", "in", "self", "(", "p", "in", "self", "%", "p"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [7, 14, 20, 22, 26, 30, 2, 3, 9, 16, 21, 24, 28]}}
{"prediction": {"error_location": 0.9137465357780457, "repair_targets": [], "repair_candidates": [0.022968797013163567, 0.23457254469394684, 0.6450924277305603, 0.01553867757320404, 0.06231258809566498, 0.0037804963067173958, 0.0005192873650230467, 0.002549757482483983, 0.0030814623460173607, 0.0006752377958036959, 0.0055710794404149055, 0.0031382348388433456, 0.00019939662888646126], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 13:54:10.452791", "n_pass": [162, 20, 19], "n_token": 30, "loss": [0.09690795093774796, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "self", "self", ".", "properties", "for", "p", "in", "self", ".", "STRING_PROPERTIES", "if", "(", "p", "in", "self", ".", "'%s can only be used with parameters of the String type.'", "%", "p", "self", "p", "in", "self", "(", "p", "in", "self", "%", "p"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [6, 13, 19, 21, 25, 29, 1, 2, 8, 15, 20, 23, 27]}}
{"prediction": {"error_location": 0.9076395630836487, "repair_targets": [], "repair_candidates": [0.039664603769779205, 0.05598998814821243, 0.8498417735099792, 0.011458347551524639, 0.031560081988573074, 0.0019951455760747194, 0.00038092309841886163, 0.0012918467400595546, 0.0021155120339244604, 0.0004312140808906406, 0.003149246098473668, 0.0020071323961019516, 0.0001142827095463872], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 13:54:10.515800", "n_pass": [165, 21, 20], "n_token": 29, "loss": [0.10157998651266098, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "self", "self", "properties", "for", "p", "in", "self", ".", "STRING_PROPERTIES", "if", "(", "p", "in", "self", ".", "'%s can only be used with parameters of the String type.'", "%", "p", "self", "p", "in", "self", "(", "p", "in", "self", "%", "p"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [5, 12, 18, 20, 24, 28, 1, 2, 7, 14, 19, 22, 26]}}
{"prediction": {"error_location": 0.9034088253974915, "repair_targets": [], "repair_candidates": [0.06925937533378601, 0.7541287541389465, 0.1669503003358841, 0.0030966445337980986, 0.0027907127514481544, 0.0007268708432093263, 0.00021452682267408818, 0.0006644898094236851, 0.00026124162832275033, 0.000268512696493417, 0.000619692204054445, 0.000920511141885072, 9.82969140750356e-05], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 13:54:10.579046", "n_pass": [166, 22, 21], "n_token": 28, "loss": [0.13145898282527924, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "self", "self", "for", "p", "in", "self", ".", "STRING_PROPERTIES", "if", "(", "p", "in", "self", ".", "'%s can only be used with parameters of the String type.'", "%", "p", "self", "p", "in", "self", "(", "p", "in", "self", "%", "p"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [4, 11, 17, 19, 23, 27, 1, 2, 6, 13, 18, 21, 25]}}
{"prediction": {"error_location": 0.876815140247345, "repair_targets": [], "repair_candidates": [0.010787312872707844, 0.8834123611450195, 0.10427611321210861, 0.00045868891174905, 0.00024594683782197535, 0.0003238228673581034, 3.1486957595916465e-05, 0.00015446160978171974, 2.8647393264691345e-05, 9.582730126567185e-05, 2.1736414055339992e-05, 0.00014676159480586648, 1.6927369870245457e-05], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 13:54:10.641866", "n_pass": [167, 23, 22], "n_token": 27, "loss": [0.06913557648658752, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "self", "self", "p", "in", "self", ".", "STRING_PROPERTIES", "if", "(", "p", "in", "self", ".", "'%s can only be used with parameters of the String type.'", "%", "p", "self", "p", "in", "self", "(", "p", "in", "self", "%", "p"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [3, 10, 16, 18, 22, 26, 1, 2, 5, 12, 17, 20, 24]}}
{"prediction": {"error_location": 0.9332001209259033, "repair_targets": [], "repair_candidates": [0.009993265382945538, 0.02331087365746498, 0.9212648868560791, 0.0011591180227696896, 0.03720096871256828, 0.0023216267582029104, 0.0002907494781538844, 0.0012419947888702154, 0.0009186372044496238, 0.0002584236499387771, 0.0007558568613603711, 0.001204546308144927, 7.910376007203013e-05], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 13:54:10.704092", "n_pass": [169, 24, 23], "n_token": 26, "loss": [0.17797353863716125, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "self", "self", "p", "self", ".", "STRING_PROPERTIES", "if", "(", "p", "in", "self", ".", "'%s can only be used with parameters of the String type.'", "%", "p", "self", "p", "in", "self", "(", "p", "in", "self", "%", "p"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [3, 9, 15, 17, 21, 25, 1, 2, 4, 11, 16, 19, 23]}}
{"prediction": {"error_location": 0.8369645476341248, "repair_targets": [], "repair_candidates": [0.058981381356716156, 0.12453446537256241, 0.4305635988712311, 0.0050282711163163185, 0.3320463001728058, 0.009212052449584007, 0.0008718896424397826, 0.004588906187564135, 0.014057371765375137, 0.0009686585981398821, 0.010842258110642433, 0.007985151372849941, 0.00031962167122401297], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 13:54:10.766923", "n_pass": [171, 25, 24], "n_token": 25, "loss": [0.3128969371318817, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "self", "self", "p", "self", "STRING_PROPERTIES", "if", "(", "p", "in", "self", ".", "'%s can only be used with parameters of the String type.'", "%", "p", "self", "p", "in", "self", "(", "p", "in", "self", "%", "p"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [3, 8, 14, 16, 20, 24, 1, 2, 4, 10, 15, 18, 22]}}
{"prediction": {"error_location": 0.7313252687454224, "repair_targets": [], "repair_candidates": [0.10677463561296463, 0.559341311454773, 0.22628428041934967, 0.00793734285980463, 0.04357299953699112, 0.012681318446993828, 0.0010908524272963405, 0.007732333615422249, 0.01300306897610426, 0.0017650192603468895, 0.008074249140918255, 0.011260797269642353, 0.00048173850518651307], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 13:54:10.830245", "n_pass": [172, 26, 25], "n_token": 23, "loss": [0.29093852639198303, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "self", "self", "p", "self", "(", "p", "in", "self", ".", "'%s can only be used with parameters of the String type.'", "%", "p", "self", "p", "in", "self", "(", "p", "in", "self", "%", "p"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [3, 6, 12, 14, 18, 22, 1, 2, 4, 8, 13, 16, 20]}}
{"prediction": {"error_location": 0.7475616931915283, "repair_targets": [], "repair_candidates": [0.19149816036224365, 0.042250823229551315, 0.0366939939558506, 0.025723038241267204, 0.3670959770679474, 0.014543050900101662, 0.01766890473663807, 0.033860281109809875, 0.04032415151596069, 0.003993234597146511, 0.17637886106967926, 0.04784640297293663, 0.0021231158170849085], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 13:54:10.889985", "n_pass": [175, 27, 26], "n_token": 21, "loss": [0.5165528655052185, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "self", "self", "p", "self", "(", "p", "in", "self", "%", "p", "self", "p", "in", "self", "(", "p", "in", "self", "%", "p"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [3, 6, 10, 12, 16, 20, 1, 2, 4, 8, 11, 14, 18]}}
{"prediction": {"error_location": 0.5965734124183655, "repair_targets": [], "repair_candidates": [0.018398404121398926, 0.0014586535980924964, 0.005122258793562651, 0.00072693289257586, 0.8992176651954651, 0.015935158357024193, 0.003861361648887396, 0.003285603364929557, 0.008046578615903854, 0.002653340809047222, 0.019029274582862854, 0.021565822884440422, 0.0006990444962866604], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 13:54:10.950446", "n_pass": [207, 28, 27], "n_token": 20, "loss": [0.6130219101905823, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "self", "self", "p", "self", "(", "p", "in", "self", "%", "p", "self", "p", "self", "(", "p", "in", "self", "%", "p"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [3, 6, 10, 12, 15, 19, 1, 2, 4, 8, 11, 13, 17]}}
{"prediction": {"error_location": 0.5417113900184631, "repair_targets": [], "repair_candidates": [0.06071528419852257, 0.004557068459689617, 0.015585138462483883, 0.002264756942167878, 0.7632105350494385, 0.029172701761126518, 0.0024064499884843826, 0.0010254796361550689, 0.001111710211262107, 0.006604796275496483, 0.07413418591022491, 0.03776900842785835, 0.0014428684953600168], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 13:54:11.009166", "n_pass": [208, 29, 28], "n_token": 19, "loss": [0.7175171971321106, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "self", "self", "p", "self", "(", "p", "in", "self", "%", "p", "self", "p", "self", "p", "in", "self", "%", "p"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [3, 6, 10, 12, 14, 18, 1, 2, 4, 8, 11, 13, 16]}}
{"prediction": {"error_location": 0.4879622459411621, "repair_targets": [], "repair_candidates": [0.06761032342910767, 0.005205512046813965, 0.016308583319187164, 0.0031662550754845142, 0.799396276473999, 0.02140757441520691, 0.0015837218379601836, 0.0010471595451235771, 0.003653304884210229, 0.03955066576600075, 0.025757433846592903, 0.014698282815515995, 0.0006148394313640893], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 13:54:11.301096", "n_pass": [223, 34, 29], "n_token": 18, "loss": [0.4579561948776245, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "self", "self", "p", "self", "(", "p", "in", "self", "p", "self", "p", "self", "p", "in", "self", "%", "p"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [3, 6, 9, 11, 13, 17, 1, 2, 4, 8, 10, 12, 15]}}
{"prediction": {"error_location": 0.6325752139091492, "repair_targets": [], "repair_candidates": [0.02339010313153267, 0.002550424775108695, 0.00601095799356699, 0.0017231212696060538, 0.8765966892242432, 0.005387093871831894, 0.0009312337497249246, 0.001409859862178564, 0.005929969251155853, 0.05464812368154526, 0.018612131476402283, 0.002584065543487668, 0.0002263135538669303], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 13:54:11.416622", "n_pass": [231, 36, 30], "n_token": 17, "loss": [0.1438005417585373, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "self", "self", "p", "self", "(", "p", "in", "self", "p", "self", "p", "self", "p", "in", "self", "p"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [3, 6, 9, 11, 13, 16, 1, 2, 4, 8, 10, 12, 15]}}
{"prediction": {"error_location": 0.8660603165626526, "repair_targets": [], "repair_candidates": [0.10702738165855408, 0.015405242331326008, 0.02754070982336998, 0.018247559666633606, 0.5222086310386658, 0.011219813488423824, 0.004260200075805187, 0.007224920205771923, 0.028150804340839386, 0.16562558710575104, 0.07096244394779205, 0.021391090005636215, 0.0007355508860200644], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 13:54:11.475988", "n_pass": [238, 37, 31], "n_token": 16, "loss": [0.26276394724845886, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "self", "self", "p", "self", "p", "in", "self", "p", "self", "p", "self", "p", "in", "self", "p"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [3, 5, 8, 10, 12, 15, 1, 2, 4, 7, 9, 11, 14]}}
{"prediction": {"error_location": 0.7689234018325806, "repair_targets": [], "repair_candidates": [0.00881428737193346, 0.004423015750944614, 0.19866332411766052, 0.6616260409355164, 0.09346310049295425, 0.0026433649472892284, 0.0012849693885073066, 0.001095660962164402, 0.002468682825565338, 0.013461405411362648, 0.008474867790937424, 0.0034909043461084366, 9.030306682689115e-05], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 13:54:11.532829", "n_pass": [240, 38, 32], "n_token": 15, "loss": [0.11818815767765045, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "self", "self", "p", "self", "p", "self", "p", "self", "p", "self", "p", "in", "self", "p"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [3, 5, 7, 9, 11, 14, 1, 2, 4, 6, 8, 10, 13]}}
{"prediction": {"error_location": 0.8885290622711182, "repair_targets": [], "repair_candidates": [0.005256326403468847, 0.010435264557600021, 0.5660071969032288, 0.16399037837982178, 0.05825340747833252, 0.014309672638773918, 0.012599056586623192, 0.015832951292395592, 0.040301304310560226, 0.07337918132543564, 0.03749803453683853, 0.002060345374047756, 7.689750782446936e-05], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 13:54:11.588934", "n_pass": [247, 39, 33], "n_token": 14, "loss": [0.21669936180114746, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "self", "self", "p", "self", "p", "self", "p", "self", "p", "self", "p", "self", "p"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [3, 5, 7, 9, 11, 13, 1, 2, 4, 6, 8, 10, 12]}}
{"prediction": {"error_location": 0.8051719069480896, "repair_targets": [], "repair_candidates": [0.00474975723773241, 0.020629284903407097, 0.3487154245376587, 0.16736003756523132, 0.10976730287075043, 0.08975761383771896, 0.1496361345052719, 0.03180035576224327, 0.01682535745203495, 0.01357489824295044, 0.020525937899947166, 0.02622899040579796, 0.000428886734880507], "target_probs": 0.0}}




Minimal simplified tokens:

['#NEWLINE#', 'self', 'self', 'p', 'self', 'p', 'self', 'p', 'self', 'p', 'self', 'p', 'self', 'p']
