
Original sample:

{"has_bug": false, "bug_kind": 0, "bug_kind_name": "NONE", "source_tokens": ["#NEWLINE#", "def test_start(", "self", ")", ":", "#NEWLINE#", "#INDENT#", "'\\n        L{ThreadPool.start} creates the minimum number of threads specified.\\n        '", "#NEWLINE#", "pool", "=", "threadpool", ".", "ThreadPool", "(", "0", ",", "5", ")", "#NEWLINE#", "pool", ".", "start", "(", ")", "#NEWLINE#", "self", ".", "addCleanup", "(", "pool", ".", "stop", ")", "#NEWLINE#", "self", ".", "assertEqual", "(", "len", "(", "pool", ".", "threads", ")", ",", "0", ")", "#NEWLINE#", "pool", "=", "threadpool", ".", "ThreadPool", "(", "3", ",", "10", ")", "#NEWLINE#", "self", ".", "assertEqual", "(", "len", "(", "pool", ".", "threads", ")", ",", "0", ")", "#NEWLINE#", "pool", ".", "start", "(", ")", "#NEWLINE#", "self", ".", "addCleanup", "(", "pool", ".", "stop", ")", "#NEWLINE#", "self", ".", "assertEqual", "(", "len", "(", "pool", ".", "threads", ")", ",", "3", ")"], "error_location": [0], "repair_targets": [], "repair_candidates": [9, 20, 30, 41, 49, 66, 74, 84, 95, 2, 26, 35, 60, 80, 89], "provenances": [{"datasetProvenance": {"datasetName": "ETHPy150Open", "filepath": "kuri65536/python-for-android/python-modules/twisted/twisted/test/test_threadpool.py", "license": "apache-2.0", "note": "license: bigquery_api"}}], "txt_file": "eval__VARIABLE_MISUSE__SStuB.txt-00000-of-00300", "js_count": 375, "results": {"model": "rnn", "prob": {"loc": [[0.8620042204856873, 9.440661415283103e-06, 4.7133582370406657e-07, 1.3418650635088625e-09, 1.4335610476479133e-09, 3.841586959651977e-08, 2.351954897505948e-08, 3.5229394512725776e-08, 1.7661309925642854e-07, 2.1766004465462174e-07, 8.126913364492339e-09, 1.4838461765975808e-06, 2.5467587150274085e-08, 5.960870907983917e-08, 1.9209585389035055e-07, 8.590545621700585e-05, 9.37741333473241e-07, 0.00012991852418053895, 1.0569872443966233e-07, 1.2408459326707089e-07, 1.968611513802898e-06, 1.8565322079666657e-07, 1.1048418180337194e-08, 9.608177720110689e-08, 1.6798351509805798e-07, 8.02539119604262e-08, 3.5399085618337267e-07, 8.209011803650412e-10, 8.55803339305794e-09, 5.020973503633286e-08, 0.0005120655987411737, 1.3263368714433454e-07, 2.0193790817302215e-07, 4.650422269492083e-08, 2.388039206380199e-07, 4.938567599310772e-07, 7.530903900487829e-09, 1.6841870831285632e-07, 1.5032162536954274e-07, 6.424824050554889e-07, 1.2747007076541195e-06, 0.0031754469964653254, 5.579740047778614e-08, 2.2747707362213987e-07, 1.0440304265557643e-07, 1.6147130565968837e-07, 2.819076325977221e-05, 5.83753312355384e-08, 3.3741017091415415e-07, 8.040924512897618e-07, 2.7782872891179977e-08, 2.965930889331503e-06, 9.708761439242153e-08, 2.4320340230588045e-07, 1.899726157716941e-06, 0.0020828493870794773, 1.2945656635565683e-06, 7.512183947255835e-05, 9.198542016974898e-08, 8.911979421100114e-08, 1.882452465906681e-06, 2.0457303406828942e-08, 3.017849508069048e-07, 4.235467372382118e-07, 2.1199402908678167e-06, 4.435366008692654e-06, 0.015013618394732475, 5.775667588636679e-08, 6.333032729344268e-07, 3.1462118954550533e-07, 2.8427774623196456e-07, 5.275414514471777e-05, 1.0680054174372344e-07, 4.528307044893154e-07, 3.6544915928971022e-06, 3.695442103435198e-07, 3.815735993839553e-08, 2.5385517687936954e-07, 8.514496130374027e-07, 3.1784111342858523e-07, 1.917213012347929e-06, 4.4411367916552535e-09, 3.394044867377488e-08, 1.8573433635538095e-07, 0.003168124007061124, 2.6900633542936703e-07, 8.977094125839358e-07, 1.1982317005276855e-07, 6.8160488808644e-07, 1.3967709264761652e-06, 1.8036089954875933e-08, 6.100224823057943e-07, 6.503757390419196e-07, 4.668285328079946e-06, 2.3568882170366123e-06, 0.11230956017971039, 1.4609157972245157e-07, 6.777642624911095e-07, 9.026628617903043e-07, 5.061504566583608e-07, 0.001301476964727044, 2.2127012755390751e-07]], "pointer": [[0.0, 0.0, 0.002795322798192501, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.013530906289815903, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0027471461798995733, 0.0, 0.0, 0.0, 0.0, 0.0, 0.004040190950036049, 0.0, 0.0, 0.0, 0.02090291678905487, 0.0, 0.0, 0.0, 0.0, 0.006424246821552515, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0022296481765806675, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.8430380821228027, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0008148530614562333, 0.0, 0.0, 0.0, 0.0, 0.0, 0.00029784260550513864, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.01080517377704382, 0.0, 0.0, 0.0, 0.0, 0.0, 0.012574905529618263, 0.0, 0.0, 0.0, 0.06386759877204895, 0.0, 0.0, 0.0, 0.0, 0.015429784543812275, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0005014316411688924, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]], "target": [0.0]}, "loss": [0.14849519729614258, 0.0], "acc": [1.0, 0.0, 0.0, 0.0]}}


Trace of simplified code(s):

{"result": {"time": "2021-02-11 14:47:33.498146", "n_pass": [1, 1, 1], "n_token": 102, "loss": [0.14849519729614258, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def test_start(", "self", ")", ":", "#NEWLINE#", "#INDENT#", "'\\n        L{ThreadPool.start} creates the minimum number of threads specified.\\n        '", "#NEWLINE#", "pool", "=", "threadpool", ".", "ThreadPool", "(", "0", ",", "5", ")", "#NEWLINE#", "pool", ".", "start", "(", ")", "#NEWLINE#", "self", ".", "addCleanup", "(", "pool", ".", "stop", ")", "#NEWLINE#", "self", ".", "assertEqual", "(", "len", "(", "pool", ".", "threads", ")", ",", "0", ")", "#NEWLINE#", "pool", "=", "threadpool", ".", "ThreadPool", "(", "3", ",", "10", ")", "#NEWLINE#", "self", ".", "assertEqual", "(", "len", "(", "pool", ".", "threads", ")", ",", "0", ")", "#NEWLINE#", "pool", ".", "start", "(", ")", "#NEWLINE#", "self", ".", "addCleanup", "(", "pool", ".", "stop", ")", "#NEWLINE#", "self", ".", "assertEqual", "(", "len", "(", "pool", ".", "threads", ")", ",", "3", ")"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [9, 20, 30, 41, 49, 66, 74, 84, 95, 2, 26, 35, 60, 80, 89]}}
{"prediction": {"error_location": 0.8620042204856873, "repair_targets": [], "repair_candidates": [0.002795322798192501, 0.013530906289815903, 0.0027471461798995733, 0.004040190950036049, 0.02090291678905487, 0.006424246821552515, 0.0022296481765806675, 0.8430380821228027, 0.0008148530614562333, 0.00029784260550513864, 0.01080517377704382, 0.012574905529618263, 0.06386759877204895, 0.015429784543812275, 0.0005014316411688924], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 14:47:33.700715", "n_pass": [51, 3, 2], "n_token": 96, "loss": [0.21122319996356964, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def test_start(", "self", ")", ":", "#NEWLINE#", "#INDENT#", "'\\n        L{ThreadPool.start} creates the minimum number of threads specified.\\n        '", "#NEWLINE#", "pool", "=", "threadpool", ".", "ThreadPool", "(", "0", ",", "5", ")", "#NEWLINE#", "pool", ".", "start", "(", ")", "#NEWLINE#", "self", ".", "addCleanup", "(", "pool", ".", "stop", ")", "#NEWLINE#", "self", ".", "assertEqual", "(", "len", "(", "pool", "#NEWLINE#", "pool", "=", "threadpool", ".", "ThreadPool", "(", "3", ",", "10", ")", "#NEWLINE#", "self", ".", "assertEqual", "(", "len", "(", "pool", ".", "threads", ")", ",", "0", ")", "#NEWLINE#", "pool", ".", "start", "(", ")", "#NEWLINE#", "self", ".", "addCleanup", "(", "pool", ".", "stop", ")", "#NEWLINE#", "self", ".", "assertEqual", "(", "len", "(", "pool", ".", "threads", ")", ",", "3", ")"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [9, 20, 30, 41, 43, 60, 68, 78, 89, 2, 26, 35, 54, 74, 83]}}
{"prediction": {"error_location": 0.8095934391021729, "repair_targets": [], "repair_candidates": [0.006153397262096405, 0.09445878118276596, 0.010612708516418934, 0.009315049275755882, 0.033199623227119446, 0.00037338564288802445, 0.0004913648590445518, 0.6270347833633423, 0.002044370397925377, 0.0006128293462097645, 0.022543074563145638, 0.024737171828746796, 0.1415204107761383, 0.025500508025288582, 0.0014025141717866063], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 14:47:33.796386", "n_pass": [53, 4, 3], "n_token": 90, "loss": [0.18799731135368347, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def test_start(", "self", ")", ":", "#NEWLINE#", "#INDENT#", "'\\n        L{ThreadPool.start} creates the minimum number of threads specified.\\n        '", "#NEWLINE#", "pool", "=", "threadpool", ".", "ThreadPool", "(", "0", ",", "5", ")", "#NEWLINE#", "pool", ".", "start", "(", ")", "#NEWLINE#", "self", ".", "addCleanup", "(", "pool", ".", "stop", ")", "#NEWLINE#", "self", ".", "assertEqual", "(", "len", "(", "pool", "#NEWLINE#", "pool", "=", "threadpool", ".", "ThreadPool", "self", ".", "assertEqual", "(", "len", "(", "pool", ".", "threads", ")", ",", "0", ")", "#NEWLINE#", "pool", ".", "start", "(", ")", "#NEWLINE#", "self", ".", "addCleanup", "(", "pool", ".", "stop", ")", "#NEWLINE#", "self", ".", "assertEqual", "(", "len", "(", "pool", ".", "threads", ")", ",", "3", ")"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [9, 20, 30, 41, 43, 54, 62, 72, 83, 2, 26, 35, 48, 68, 77]}}
{"prediction": {"error_location": 0.8286166191101074, "repair_targets": [], "repair_candidates": [0.013099081814289093, 0.21564586460590363, 0.02624366246163845, 0.026084458455443382, 0.215983048081398, 0.0017235266277566552, 0.0007401633774861693, 0.05576581507921219, 0.017682276666164398, 0.002090072724968195, 0.03475876897573471, 0.06192255765199661, 0.24558661878108978, 0.07983507215976715, 0.0028390255756676197], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 14:47:33.887990", "n_pass": [55, 5, 4], "n_token": 83, "loss": [0.11582937836647034, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def test_start(", "self", ")", ":", "#NEWLINE#", "#INDENT#", "'\\n        L{ThreadPool.start} creates the minimum number of threads specified.\\n        '", "#NEWLINE#", "pool", "=", "threadpool", ".", "ThreadPool", "(", "0", ",", "5", ")", "#NEWLINE#", "pool", ".", "start", "(", ")", "#NEWLINE#", "self", ".", "addCleanup", "(", "pool", ".", "stop", ")", "#NEWLINE#", "self", ".", "assertEqual", "(", "len", "(", "pool", "#NEWLINE#", "pool", "=", "threadpool", ".", "ThreadPool", "self", ".", "assertEqual", "(", "len", "(", "pool", "pool", ".", "start", "(", ")", "#NEWLINE#", "self", ".", "addCleanup", "(", "pool", ".", "stop", ")", "#NEWLINE#", "self", ".", "assertEqual", "(", "len", "(", "pool", ".", "threads", ")", ",", "3", ")"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [9, 20, 30, 41, 43, 54, 55, 65, 76, 2, 26, 35, 48, 61, 70]}}
{"prediction": {"error_location": 0.8906270861625671, "repair_targets": [], "repair_candidates": [0.01516904216259718, 0.33786603808403015, 0.03488250821828842, 0.024539422243833542, 0.052335865795612335, 0.0003887369530275464, 0.0007313892128877342, 0.03737566992640495, 0.0037118326872587204, 0.004349433351308107, 0.003910439554601908, 0.08985616266727448, 0.28401368856430054, 0.10634288191795349, 0.004526932258158922], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 14:47:33.979667", "n_pass": [62, 6, 5], "n_token": 77, "loss": [0.5174006223678589, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def test_start(", "self", ")", ":", "#NEWLINE#", "#INDENT#", "'\\n        L{ThreadPool.start} creates the minimum number of threads specified.\\n        '", "#NEWLINE#", "pool", "=", "threadpool", ")", "#NEWLINE#", "pool", ".", "start", "(", ")", "#NEWLINE#", "self", ".", "addCleanup", "(", "pool", ".", "stop", ")", "#NEWLINE#", "self", ".", "assertEqual", "(", "len", "(", "pool", "#NEWLINE#", "pool", "=", "threadpool", ".", "ThreadPool", "self", ".", "assertEqual", "(", "len", "(", "pool", "pool", ".", "start", "(", ")", "#NEWLINE#", "self", ".", "addCleanup", "(", "pool", ".", "stop", ")", "#NEWLINE#", "self", ".", "assertEqual", "(", "len", "(", "pool", ".", "threads", ")", ",", "3", ")"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [9, 14, 24, 35, 37, 48, 49, 59, 70, 2, 20, 29, 42, 55, 64]}}
{"prediction": {"error_location": 0.5960681438446045, "repair_targets": [], "repair_candidates": [0.18626609444618225, 0.731890857219696, 0.004021004773676395, 0.0013493993319571018, 0.02566913142800331, 0.00012033306120429188, 0.0005510433111339808, 0.0019590139854699373, 0.0010709897615015507, 0.002305059926584363, 0.0006826153257861733, 0.002170535968616605, 0.03615885600447655, 0.004960445687174797, 0.0008246006909757853], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 14:47:34.069067", "n_pass": [100, 7, 6], "n_token": 74, "loss": [0.5188958048820496, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def test_start(", "self", ")", ":", "#NEWLINE#", "#INDENT#", "'\\n        L{ThreadPool.start} creates the minimum number of threads specified.\\n        '", "#NEWLINE#", "pool", "=", "threadpool", ")", "#NEWLINE#", "pool", ")", "#NEWLINE#", "self", ".", "addCleanup", "(", "pool", ".", "stop", ")", "#NEWLINE#", "self", ".", "assertEqual", "(", "len", "(", "pool", "#NEWLINE#", "pool", "=", "threadpool", ".", "ThreadPool", "self", ".", "assertEqual", "(", "len", "(", "pool", "pool", ".", "start", "(", ")", "#NEWLINE#", "self", ".", "addCleanup", "(", "pool", ".", "stop", ")", "#NEWLINE#", "self", ".", "assertEqual", "(", "len", "(", "pool", ".", "threads", ")", ",", "3", ")"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [9, 14, 21, 32, 34, 45, 46, 56, 67, 2, 17, 26, 39, 52, 61]}}
{"prediction": {"error_location": 0.595177412033081, "repair_targets": [], "repair_candidates": [0.13627459108829498, 0.7618656158447266, 0.015256018377840519, 0.0027878328692167997, 0.018025239929556847, 0.00013525920803658664, 0.0009263987303711474, 0.00332786631770432, 0.0013082930818200111, 0.004155741073191166, 0.0010104336543008685, 0.002175805391743779, 0.04497991502285004, 0.006662321276962757, 0.0011086207814514637], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 14:47:34.240865", "n_pass": [105, 9, 7], "n_token": 71, "loss": [0.596304178237915, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def test_start(", "self", ")", ":", "#NEWLINE#", "#INDENT#", "'\\n        L{ThreadPool.start} creates the minimum number of threads specified.\\n        '", "#NEWLINE#", "pool", "=", "threadpool", ")", "#NEWLINE#", "pool", ")", "#NEWLINE#", "self", ".", "addCleanup", "(", "pool", ".", "stop", ")", "#NEWLINE#", "self", "len", "(", "pool", "#NEWLINE#", "pool", "=", "threadpool", ".", "ThreadPool", "self", ".", "assertEqual", "(", "len", "(", "pool", "pool", ".", "start", "(", ")", "#NEWLINE#", "self", ".", "addCleanup", "(", "pool", ".", "stop", ")", "#NEWLINE#", "self", ".", "assertEqual", "(", "len", "(", "pool", ".", "threads", ")", ",", "3", ")"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [9, 14, 21, 29, 31, 42, 43, 53, 64, 2, 17, 26, 36, 49, 58]}}
{"prediction": {"error_location": 0.5508437752723694, "repair_targets": [], "repair_candidates": [0.054425571113824844, 0.8620455265045166, 0.013463707640767097, 0.0014893807237967849, 0.015186483040452003, 0.012525390833616257, 0.0005277385353110731, 0.0027130702510476112, 0.0011884908890351653, 0.0010127363493666053, 0.00045172858517616987, 0.001968355616554618, 0.026275653392076492, 0.006119618657976389, 0.0006065805209800601], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 14:47:34.327588", "n_pass": [108, 10, 8], "n_token": 68, "loss": [0.5417853593826294, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def test_start(", "self", ")", ":", "#NEWLINE#", "#INDENT#", "'\\n        L{ThreadPool.start} creates the minimum number of threads specified.\\n        '", "#NEWLINE#", "pool", "=", "threadpool", ")", "#NEWLINE#", "pool", ")", "#NEWLINE#", "self", ".", "addCleanup", "(", "pool", ".", "stop", ")", "#NEWLINE#", "self", "len", "(", "pool", "#NEWLINE#", "pool", "=", "self", ".", "assertEqual", "(", "len", "(", "pool", "pool", ".", "start", "(", ")", "#NEWLINE#", "self", ".", "addCleanup", "(", "pool", ".", "stop", ")", "#NEWLINE#", "self", ".", "assertEqual", "(", "len", "(", "pool", ".", "threads", ")", ",", "3", ")"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [9, 14, 21, 29, 31, 39, 40, 50, 61, 2, 17, 26, 33, 46, 55]}}
{"prediction": {"error_location": 0.5817087292671204, "repair_targets": [], "repair_candidates": [0.035285744816064835, 0.8896777629852295, 0.01157322060316801, 0.0009689260041341186, 0.010422972962260246, 0.008006580173969269, 0.0005485641886480153, 0.004003727342933416, 0.00028580237994901836, 0.0009295478230342269, 0.00041238853009417653, 0.002451844746246934, 0.02822466567158699, 0.006518721580505371, 0.0006896007107570767], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 14:47:34.410516", "n_pass": [110, 11, 9], "n_token": 65, "loss": [0.517019510269165, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def test_start(", "self", ")", ":", "#NEWLINE#", "#INDENT#", "'\\n        L{ThreadPool.start} creates the minimum number of threads specified.\\n        '", "#NEWLINE#", "pool", "=", "threadpool", ")", "#NEWLINE#", "pool", ")", "#NEWLINE#", "self", ".", "addCleanup", "(", "pool", ".", "stop", ")", "#NEWLINE#", "self", "len", "(", "pool", "#NEWLINE#", "pool", "=", "self", ".", "assertEqual", "pool", "pool", ".", "start", "(", ")", "#NEWLINE#", "self", ".", "addCleanup", "(", "pool", ".", "stop", ")", "#NEWLINE#", "self", ".", "assertEqual", "(", "len", "(", "pool", ".", "threads", ")", ",", "3", ")"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [9, 14, 21, 29, 31, 36, 37, 47, 58, 2, 17, 26, 33, 43, 52]}}
{"prediction": {"error_location": 0.596295177936554, "repair_targets": [], "repair_candidates": [0.03438061848282814, 0.895473062992096, 0.008949794806540012, 0.001012949040159583, 0.006747147999703884, 0.0056210714392364025, 0.00030887877801433206, 0.0030767563730478287, 0.005593795329332352, 0.0007022570935077965, 0.002108121756464243, 0.003087481949478388, 0.0255602914839983, 0.0067896852269768715, 0.0005881928955204785], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 14:47:34.491974", "n_pass": [112, 12, 10], "n_token": 62, "loss": [0.6183416247367859, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def test_start(", "self", ")", ":", "#NEWLINE#", "#INDENT#", "'\\n        L{ThreadPool.start} creates the minimum number of threads specified.\\n        '", "#NEWLINE#", "pool", "=", "threadpool", ")", "#NEWLINE#", "pool", ")", "#NEWLINE#", "self", ".", "addCleanup", "(", "pool", ".", "stop", ")", "#NEWLINE#", "self", "len", "(", "pool", "#NEWLINE#", "pool", "=", "self", ".", "assertEqual", "pool", "pool", ".", "#NEWLINE#", "self", ".", "addCleanup", "(", "pool", ".", "stop", ")", "#NEWLINE#", "self", ".", "assertEqual", "(", "len", "(", "pool", ".", "threads", ")", ",", "3", ")"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [9, 14, 21, 29, 31, 36, 37, 44, 55, 2, 17, 26, 33, 40, 49]}}
{"prediction": {"error_location": 0.538837194442749, "repair_targets": [], "repair_candidates": [0.01494608074426651, 0.9143965244293213, 0.0091657480224967, 0.0008591430960223079, 0.006370331160724163, 0.007277852855622768, 0.0002844474802259356, 0.0028591861482709646, 0.0066282800398766994, 0.00047259023995138705, 0.0027027262840420008, 0.009623240679502487, 0.012492943555116653, 0.01137132104486227, 0.0005496108205989003], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 14:47:34.593791", "n_pass": [116, 13, 11], "n_token": 58, "loss": [0.42901816964149475, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def test_start(", "self", ")", ":", "#NEWLINE#", "#INDENT#", "'\\n        L{ThreadPool.start} creates the minimum number of threads specified.\\n        '", "#NEWLINE#", "pool", "=", "threadpool", ")", "#NEWLINE#", "pool", ")", "#NEWLINE#", "self", ".", "addCleanup", "(", "pool", ".", "stop", ")", "#NEWLINE#", "self", "len", "(", "pool", "#NEWLINE#", "pool", "=", "self", ".", "assertEqual", "pool", "pool", ".", "#NEWLINE#", "self", ".", "addCleanup", "(", "pool", ".", "stop", ")", "#NEWLINE#", "self", "(", "pool", ".", "threads", ")", ",", "3", ")"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [9, 14, 21, 29, 31, 36, 37, 44, 51, 2, 17, 26, 33, 40, 49]}}
{"prediction": {"error_location": 0.6511482000350952, "repair_targets": [], "repair_candidates": [0.039408888667821884, 0.8882105946540833, 0.013414558954536915, 0.0019383028848096728, 0.007433062419295311, 0.010323216207325459, 0.00036737791378982365, 0.002402406418696046, 0.0034315127413719893, 0.0007268375484272838, 0.00696906540542841, 0.009933948516845703, 0.006682344246655703, 0.0054652635008096695, 0.0032925589475780725], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 14:47:34.670942", "n_pass": [118, 14, 12], "n_token": 54, "loss": [0.5605719089508057, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def test_start(", "self", ")", ":", "#NEWLINE#", "#INDENT#", "'\\n        L{ThreadPool.start} creates the minimum number of threads specified.\\n        '", "#NEWLINE#", "pool", "=", "threadpool", ")", "#NEWLINE#", "pool", ")", "#NEWLINE#", "self", ".", "addCleanup", "(", "pool", ".", "stop", ")", "#NEWLINE#", "self", "len", "(", "pool", "#NEWLINE#", "pool", "=", "self", ".", "assertEqual", "pool", "pool", ".", "#NEWLINE#", "self", ".", "addCleanup", "(", "pool", ".", "stop", ")", "#NEWLINE#", "self", "(", "pool", ".", "threads"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [9, 14, 21, 29, 31, 36, 37, 44, 51, 2, 17, 26, 33, 40, 49]}}
{"prediction": {"error_location": 0.5708824396133423, "repair_targets": [], "repair_candidates": [0.019866079092025757, 0.9336012601852417, 0.008642439730465412, 0.0015116451540961862, 0.006381000857800245, 0.008417436853051186, 0.0002923292340710759, 0.0014918220695108175, 0.0028990262653678656, 0.000411633140174672, 0.0022115500178188086, 0.006709340028464794, 0.0020042036194354296, 0.004053578712046146, 0.0015067321946844459], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 14:47:34.824384", "n_pass": [121, 16, 13], "n_token": 51, "loss": [0.5567018985748291, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def test_start(", "self", ")", ":", "#NEWLINE#", "pool", "=", "threadpool", ")", "#NEWLINE#", "pool", ")", "#NEWLINE#", "self", ".", "addCleanup", "(", "pool", ".", "stop", ")", "#NEWLINE#", "self", "len", "(", "pool", "#NEWLINE#", "pool", "=", "self", ".", "assertEqual", "pool", "pool", ".", "#NEWLINE#", "self", ".", "addCleanup", "(", "pool", ".", "stop", ")", "#NEWLINE#", "self", "(", "pool", ".", "threads"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [6, 11, 18, 26, 28, 33, 34, 41, 48, 2, 14, 23, 30, 37, 46]}}
{"prediction": {"error_location": 0.5730960965156555, "repair_targets": [], "repair_candidates": [0.010976338759064674, 0.9497219324111938, 0.007851666770875454, 0.0014880495145916939, 0.006211963947862387, 0.006013714242726564, 0.00021201114577706903, 0.0016097777988761663, 0.0031811243388801813, 0.0004002144269179553, 0.00255860248580575, 0.00398674700409174, 0.001774073694832623, 0.002744749654084444, 0.0012690285220742226], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 14:47:34.899131", "n_pass": [125, 17, 14], "n_token": 48, "loss": [0.3615901470184326, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def test_start(", "self", ")", ":", "#NEWLINE#", "pool", "=", "threadpool", ")", "#NEWLINE#", "pool", ")", "#NEWLINE#", "self", "pool", ".", "stop", ")", "#NEWLINE#", "self", "len", "(", "pool", "#NEWLINE#", "pool", "=", "self", ".", "assertEqual", "pool", "pool", ".", "#NEWLINE#", "self", ".", "addCleanup", "(", "pool", ".", "stop", ")", "#NEWLINE#", "self", "(", "pool", ".", "threads"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [6, 11, 15, 23, 25, 30, 31, 38, 45, 2, 14, 20, 27, 34, 43]}}
{"prediction": {"error_location": 0.6965677738189697, "repair_targets": [], "repair_candidates": [0.03992713987827301, 0.8833070397377014, 0.004435023758560419, 0.034281302243471146, 0.010460739023983479, 0.014330858364701271, 0.0002343457454117015, 0.0007283242302946746, 0.0024628823157399893, 0.00035674654645845294, 0.0014742716448381543, 0.0034645770210772753, 0.0012466375483199954, 0.002331834752112627, 0.0009583018836565316], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 14:47:34.972030", "n_pass": [137, 18, 15], "n_token": 45, "loss": [0.2515888214111328, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def test_start(", "self", "pool", "=", "threadpool", ")", "#NEWLINE#", "pool", ")", "#NEWLINE#", "self", "pool", ".", "stop", ")", "#NEWLINE#", "self", "len", "(", "pool", "#NEWLINE#", "pool", "=", "self", ".", "assertEqual", "pool", "pool", ".", "#NEWLINE#", "self", ".", "addCleanup", "(", "pool", ".", "stop", ")", "#NEWLINE#", "self", "(", "pool", ".", "threads"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [3, 8, 12, 20, 22, 27, 28, 35, 42, 2, 11, 17, 24, 31, 40]}}
{"prediction": {"error_location": 0.7775644063949585, "repair_targets": [], "repair_candidates": [0.004155236762017012, 0.9074708819389343, 0.010724625550210476, 0.04074344038963318, 0.007682300638407469, 0.018368002027273178, 0.00012014297681162134, 0.00032651907531544566, 0.0021138149313628674, 0.000162195268785581, 0.0005819194484502077, 0.00441535422578454, 0.0012367627350613475, 0.0011068712919950485, 0.0007919630734249949], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 14:47:35.047769", "n_pass": [182, 19, 16], "n_token": 44, "loss": [0.23099438846111298, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def test_start(", "self", "pool", "threadpool", ")", "#NEWLINE#", "pool", ")", "#NEWLINE#", "self", "pool", ".", "stop", ")", "#NEWLINE#", "self", "len", "(", "pool", "#NEWLINE#", "pool", "=", "self", ".", "assertEqual", "pool", "pool", ".", "#NEWLINE#", "self", ".", "addCleanup", "(", "pool", ".", "stop", ")", "#NEWLINE#", "self", "(", "pool", ".", "threads"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [3, 7, 11, 19, 21, 26, 27, 34, 41, 2, 10, 16, 23, 30, 39]}}
{"prediction": {"error_location": 0.793743908405304, "repair_targets": [], "repair_candidates": [0.002351369708776474, 0.21794946491718292, 0.12640394270420074, 0.27135559916496277, 0.08290784806013107, 0.1536606401205063, 0.0019348314963281155, 0.004462396260350943, 0.02455453760921955, 0.002546110423281789, 0.008009602315723896, 0.06082011014223099, 0.011172819882631302, 0.021649979054927826, 0.010220840573310852], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 14:47:35.119430", "n_pass": [183, 20, 17], "n_token": 43, "loss": [0.18076351284980774, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def test_start(", "self", "pool", ")", "#NEWLINE#", "pool", ")", "#NEWLINE#", "self", "pool", ".", "stop", ")", "#NEWLINE#", "self", "len", "(", "pool", "#NEWLINE#", "pool", "=", "self", ".", "assertEqual", "pool", "pool", ".", "#NEWLINE#", "self", ".", "addCleanup", "(", "pool", ".", "stop", ")", "#NEWLINE#", "self", "(", "pool", ".", "threads"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [3, 6, 10, 18, 20, 25, 26, 33, 40, 2, 9, 15, 22, 29, 38]}}
{"prediction": {"error_location": 0.8346326351165771, "repair_targets": [], "repair_candidates": [0.005314723588526249, 0.4023358225822449, 0.09034816920757294, 0.13093219697475433, 0.05966825410723686, 0.1586643010377884, 0.0017978802789002657, 0.004855540581047535, 0.021850459277629852, 0.0024496845435351133, 0.008502405136823654, 0.06695566326379776, 0.011151137761771679, 0.024900853633880615, 0.010272830724716187], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 14:47:35.190531", "n_pass": [184, 21, 18], "n_token": 42, "loss": [0.23933786153793335, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def test_start(", "self", "pool", "#NEWLINE#", "pool", ")", "#NEWLINE#", "self", "pool", ".", "stop", ")", "#NEWLINE#", "self", "len", "(", "pool", "#NEWLINE#", "pool", "=", "self", ".", "assertEqual", "pool", "pool", ".", "#NEWLINE#", "self", ".", "addCleanup", "(", "pool", ".", "stop", ")", "#NEWLINE#", "self", "(", "pool", ".", "threads"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [3, 5, 9, 17, 19, 24, 25, 32, 39, 2, 8, 14, 21, 28, 37]}}
{"prediction": {"error_location": 0.7871488928794861, "repair_targets": [], "repair_candidates": [0.004691806621849537, 0.3968186378479004, 0.17850764095783234, 0.11821963638067245, 0.039281055331230164, 0.13376590609550476, 0.0011860018130391836, 0.004073825199157, 0.01700785383582115, 0.0022918828763067722, 0.006901845335960388, 0.05518604442477226, 0.00739822443574667, 0.027300866320729256, 0.007368756923824549], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 14:47:35.261184", "n_pass": [185, 22, 19], "n_token": 41, "loss": [0.29498958587646484, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def test_start(", "self", "pool", "pool", ")", "#NEWLINE#", "self", "pool", ".", "stop", ")", "#NEWLINE#", "self", "len", "(", "pool", "#NEWLINE#", "pool", "=", "self", ".", "assertEqual", "pool", "pool", ".", "#NEWLINE#", "self", ".", "addCleanup", "(", "pool", ".", "stop", ")", "#NEWLINE#", "self", "(", "pool", ".", "threads"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [3, 4, 8, 16, 18, 23, 24, 31, 38, 2, 7, 13, 20, 27, 36]}}
{"prediction": {"error_location": 0.7445394396781921, "repair_targets": [], "repair_candidates": [0.003808496752753854, 0.24376483261585236, 0.17302806675434113, 0.16766273975372314, 0.10141226649284363, 0.15552079677581787, 0.0014007323188707232, 0.003315724665299058, 0.019593069329857826, 0.0028298592660576105, 0.005932960659265518, 0.08074118196964264, 0.010004240088164806, 0.021249808371067047, 0.009735154919326305], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 14:47:35.331571", "n_pass": [187, 23, 20], "n_token": 40, "loss": [0.4180442690849304, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def test_start(", "self", "pool", "pool", "#NEWLINE#", "self", "pool", ".", "stop", ")", "#NEWLINE#", "self", "len", "(", "pool", "#NEWLINE#", "pool", "=", "self", ".", "assertEqual", "pool", "pool", ".", "#NEWLINE#", "self", ".", "addCleanup", "(", "pool", ".", "stop", ")", "#NEWLINE#", "self", "(", "pool", ".", "threads"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [3, 4, 7, 15, 17, 22, 23, 30, 37, 2, 6, 12, 19, 26, 35]}}
{"prediction": {"error_location": 0.6583331227302551, "repair_targets": [], "repair_candidates": [0.002976069925352931, 0.2527819573879242, 0.17339971661567688, 0.10952214151620865, 0.28884315490722656, 0.09424679726362228, 0.0004097960190847516, 0.0018463231390342116, 0.011198808439075947, 0.0010594010818749666, 0.0027380757965147495, 0.03734537959098816, 0.005219242535531521, 0.014257809147238731, 0.004155383910983801], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 14:47:35.403454", "n_pass": [188, 24, 21], "n_token": 39, "loss": [0.35838258266448975, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def test_start(", "self", "pool", "pool", "self", "pool", ".", "stop", ")", "#NEWLINE#", "self", "len", "(", "pool", "#NEWLINE#", "pool", "=", "self", ".", "assertEqual", "pool", "pool", ".", "#NEWLINE#", "self", ".", "addCleanup", "(", "pool", ".", "stop", ")", "#NEWLINE#", "self", "(", "pool", ".", "threads"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [3, 4, 6, 14, 16, 21, 22, 29, 36, 2, 5, 11, 18, 25, 34]}}
{"prediction": {"error_location": 0.6988056302070618, "repair_targets": [], "repair_candidates": [0.01646539568901062, 0.5042393803596497, 0.3715439736843109, 0.028794975951313972, 0.010394418612122536, 0.03480816259980202, 0.00015982902550604194, 0.0004958046483807266, 0.00906318798661232, 0.0005053482600487769, 0.0008150523062795401, 0.013664418831467628, 0.0026087940204888582, 0.00395740894600749, 0.0024838638491928577], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 14:47:35.472054", "n_pass": [190, 25, 22], "n_token": 37, "loss": [0.24931572377681732, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def test_start(", "self", "pool", "pool", "self", "pool", ")", "#NEWLINE#", "self", "len", "(", "pool", "#NEWLINE#", "pool", "=", "self", ".", "assertEqual", "pool", "pool", ".", "#NEWLINE#", "self", ".", "addCleanup", "(", "pool", ".", "stop", ")", "#NEWLINE#", "self", "(", "pool", ".", "threads"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [3, 4, 6, 12, 14, 19, 20, 27, 34, 2, 5, 9, 16, 23, 32]}}
{"prediction": {"error_location": 0.7793339490890503, "repair_targets": [], "repair_candidates": [0.00294131669215858, 0.35176247358322144, 0.48277607560157776, 0.05070086568593979, 0.00654876884073019, 0.013924547471106052, 0.0003159325278829783, 0.0009880989091470838, 0.028325043618679047, 0.0011528207687661052, 0.0030078536365181208, 0.03533747047185898, 0.006987735629081726, 0.009901625104248524, 0.005329435225576162], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 14:47:35.539609", "n_pass": [191, 26, 23], "n_token": 35, "loss": [0.7231995463371277, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def test_start(", "self", "pool", "pool", "self", "pool", "self", "len", "(", "pool", "#NEWLINE#", "pool", "=", "self", ".", "assertEqual", "pool", "pool", ".", "#NEWLINE#", "self", ".", "addCleanup", "(", "pool", ".", "stop", ")", "#NEWLINE#", "self", "(", "pool", ".", "threads"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [3, 4, 6, 10, 12, 17, 18, 25, 32, 2, 5, 7, 14, 21, 30]}}
{"prediction": {"error_location": 0.4851973056793213, "repair_targets": [], "repair_candidates": [0.004905564244836569, 0.5858166217803955, 0.202137753367424, 0.010781818069517612, 0.1089581549167633, 0.00452007120475173, 0.00027127048815600574, 0.000790411198977381, 0.02762635238468647, 0.0016466674860566854, 0.0017902826657518744, 0.026399478316307068, 0.00828736275434494, 0.008041799068450928, 0.008026299066841602], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 14:47:35.606027", "n_pass": [196, 27, 24], "n_token": 33, "loss": [0.07589447498321533, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def test_start(", "self", "pool", "pool", "self", "pool", "self", "len", "(", "pool", "#NEWLINE#", "pool", "=", "self", "pool", "pool", ".", "#NEWLINE#", "self", ".", "addCleanup", "(", "pool", ".", "stop", ")", "#NEWLINE#", "self", "(", "pool", ".", "threads"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [3, 4, 6, 10, 12, 15, 16, 23, 30, 2, 5, 7, 14, 19, 28]}}
{"prediction": {"error_location": 0.9269140362739563, "repair_targets": [], "repair_candidates": [0.004537935368716717, 0.3645784556865692, 0.11433342844247818, 0.004563129507005215, 0.10955183953046799, 0.008954692631959915, 0.0038075305055826902, 0.2780122756958008, 0.022050412371754646, 0.0006366973975673318, 0.0006401073769666255, 0.030715297907590866, 0.010448829270899296, 0.036115266382694244, 0.011054101400077343], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 14:47:35.671547", "n_pass": [198, 28, 25], "n_token": 31, "loss": [0.11163266748189926, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def test_start(", "self", "pool", "pool", "self", "pool", "self", "len", "(", "pool", "#NEWLINE#", "pool", "=", "self", "pool", "pool", "self", ".", "addCleanup", "(", "pool", ".", "stop", ")", "#NEWLINE#", "self", "(", "pool", ".", "threads"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [3, 4, 6, 10, 12, 15, 16, 21, 28, 2, 5, 7, 14, 17, 26]}}
{"prediction": {"error_location": 0.8943727016448975, "repair_targets": [], "repair_candidates": [0.001556610339321196, 0.1281420886516571, 0.027072688564658165, 0.0013761178124696016, 0.030780233442783356, 0.0018746227724477649, 0.0031597325578331947, 0.7728013396263123, 0.004435747396200895, 0.00019105301180388778, 0.0018051753286272287, 0.005152396857738495, 0.007699396926909685, 0.008262106217443943, 0.0056906468234956264], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 14:47:35.735492", "n_pass": [200, 29, 26], "n_token": 29, "loss": [0.2691185176372528, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def test_start(", "self", "pool", "pool", "self", "pool", "self", "len", "(", "pool", "#NEWLINE#", "pool", "=", "self", "pool", "pool", "self", ".", "pool", ".", "stop", ")", "#NEWLINE#", "self", "(", "pool", ".", "threads"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [3, 4, 6, 10, 12, 15, 16, 19, 26, 2, 5, 7, 14, 17, 24]}}
{"prediction": {"error_location": 0.7640525698661804, "repair_targets": [], "repair_candidates": [0.0010295920073986053, 0.13614210486412048, 0.021371783688664436, 0.0011254322016611695, 0.013129126280546188, 0.0004082902451045811, 0.0006917695282027125, 0.8134071230888367, 0.0011115962406620383, 0.0001114937404054217, 0.0024475648533552885, 0.003710946999490261, 0.0031840673182159662, 0.0013618003576993942, 0.0007672929205000401], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 14:47:35.801006", "n_pass": [202, 30, 27], "n_token": 27, "loss": [0.18688276410102844, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def test_start(", "self", "pool", "pool", "self", "pool", "self", "len", "(", "pool", "#NEWLINE#", "pool", "=", "self", "pool", "pool", "self", ".", "pool", ".", "#NEWLINE#", "self", "(", "pool", ".", "threads"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [3, 4, 6, 10, 12, 15, 16, 19, 24, 2, 5, 7, 14, 17, 22]}}
{"prediction": {"error_location": 0.8295409679412842, "repair_targets": [], "repair_candidates": [0.00162560457829386, 0.14812326431274414, 0.02616354078054428, 0.0013064678059890866, 0.021932028234004974, 0.001197860692627728, 0.0015943055041134357, 0.7729505300521851, 0.0026759852189570665, 0.0001556561910547316, 0.0026813833974301815, 0.010688282549381256, 0.00385101605206728, 0.003343479475006461, 0.0017105526058003306], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 14:47:35.863240", "n_pass": [205, 31, 28], "n_token": 25, "loss": [0.2664652168750763, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def test_start(", "self", "pool", "pool", "self", "pool", "self", "len", "(", "pool", "#NEWLINE#", "pool", "=", "self", "pool", "pool", "self", ".", "pool", ".", "#NEWLINE#", "self", "(", "pool"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [3, 4, 6, 10, 12, 15, 16, 19, 24, 2, 5, 7, 14, 17, 22]}}
{"prediction": {"error_location": 0.7660826444625854, "repair_targets": [], "repair_candidates": [0.0006101528415456414, 0.04995955899357796, 0.018518099561333656, 0.0010725901229307055, 0.010504058562219143, 0.0005387731944210827, 0.0012078463332727551, 0.9107566475868225, 0.0013896507443860173, 5.85340203542728e-05, 0.0004781872557941824, 0.0006189474370330572, 0.002670547692105174, 0.0006842543371021748, 0.0009320550016127527], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 14:47:35.924968", "n_pass": [207, 32, 29], "n_token": 24, "loss": [0.2904437184333801, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "self", "pool", "pool", "self", "pool", "self", "len", "(", "pool", "#NEWLINE#", "pool", "=", "self", "pool", "pool", "self", ".", "pool", ".", "#NEWLINE#", "self", "(", "pool"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [2, 3, 5, 9, 11, 14, 15, 18, 23, 1, 4, 6, 13, 16, 21]}}
{"prediction": {"error_location": 0.7479315400123596, "repair_targets": [], "repair_candidates": [0.04291975498199463, 0.22882142663002014, 0.01620977185666561, 0.005191451869904995, 0.014549320563673973, 0.0018560567405074835, 0.0002979017444886267, 0.6835932731628418, 0.002428669948130846, 8.540458657080308e-05, 0.0005322290817275643, 0.000791251368355006, 0.001143312663771212, 0.001009819912724197, 0.0005703076021745801], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 14:47:35.988024", "n_pass": [245, 33, 30], "n_token": 23, "loss": [0.08755708485841751, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "self", "pool", "pool", "self", "pool", "self", "(", "pool", "#NEWLINE#", "pool", "=", "self", "pool", "pool", "self", ".", "pool", ".", "#NEWLINE#", "self", "(", "pool"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [2, 3, 5, 8, 10, 13, 14, 17, 22, 1, 4, 6, 12, 15, 20]}}
{"prediction": {"error_location": 0.9161665439605713, "repair_targets": [], "repair_candidates": [0.03516407683491707, 0.12288452684879303, 0.022594450041651726, 0.008113525807857513, 0.00454693241044879, 0.005891012959182262, 0.0008427873835898936, 0.7874229550361633, 0.005699418019503355, 0.00018668246048036963, 0.0014501747209578753, 0.0011652163229882717, 0.0015453114174306393, 0.001473902491852641, 0.0010190728353336453], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 14:47:36.048710", "n_pass": [246, 34, 31], "n_token": 22, "loss": [0.4557790160179138, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "self", "pool", "pool", "self", "pool", "self", "pool", "#NEWLINE#", "pool", "=", "self", "pool", "pool", "self", ".", "pool", ".", "#NEWLINE#", "self", "(", "pool"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [2, 3, 5, 7, 9, 12, 13, 16, 21, 1, 4, 6, 11, 14, 19]}}
{"prediction": {"error_location": 0.6339539289474487, "repair_targets": [], "repair_candidates": [0.04974491521716118, 0.22052928805351257, 0.018426349386572838, 0.0025271738413721323, 0.0294369924813509, 0.016359321773052216, 0.00756197702139616, 0.6447705030441284, 0.00271017849445343, 0.00020334617875050753, 0.0010546704288572073, 0.0017477337969467044, 0.0023116038646548986, 0.0014367146650329232, 0.001179250655695796], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 14:47:36.111038", "n_pass": [248, 35, 32], "n_token": 21, "loss": [0.6305710077285767, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "self", "pool", "pool", "self", "pool", "self", "pool", "pool", "=", "self", "pool", "pool", "self", ".", "pool", ".", "#NEWLINE#", "self", "(", "pool"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [2, 3, 5, 7, 8, 11, 12, 15, 20, 1, 4, 6, 10, 13, 18]}}
{"prediction": {"error_location": 0.5322878360748291, "repair_targets": [], "repair_candidates": [0.0001237934920936823, 0.0002766114193946123, 4.2867977754212916e-05, 8.932113814807963e-06, 5.709690594812855e-05, 8.260804315796122e-05, 0.0010846457444131374, 0.9982439279556274, 1.5455034372280352e-05, 7.420397878377116e-07, 6.3164452512864955e-06, 5.402046554081608e-06, 4.195064684608951e-05, 4.7038602133397944e-06, 4.958865702064941e-06], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 14:47:36.171121", "n_pass": [250, 36, 33], "n_token": 20, "loss": [0.3807993233203888, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "self", "pool", "pool", "self", "pool", "self", "pool", "pool", "self", "pool", "pool", "self", ".", "pool", ".", "#NEWLINE#", "self", "(", "pool"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [2, 3, 5, 7, 8, 10, 11, 14, 19, 1, 4, 6, 9, 12, 17]}}
{"prediction": {"error_location": 0.6833149194717407, "repair_targets": [], "repair_candidates": [0.04769604653120041, 0.45210692286491394, 0.18969260156154633, 0.07860763370990753, 0.15498661994934082, 0.016897521913051605, 0.006227129139006138, 0.03679250180721283, 0.006375969387590885, 0.0005759930936619639, 0.0010320494184270501, 0.0013651689514517784, 0.0014984970912337303, 0.005127986427396536, 0.001017421018332243], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 14:47:36.230354", "n_pass": [255, 37, 34], "n_token": 19, "loss": [0.23218251764774323, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "self", "pool", "pool", "self", "pool", "self", "pool", "pool", "self", "pool", "pool", "self", "pool", ".", "#NEWLINE#", "self", "(", "pool"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [2, 3, 5, 7, 8, 10, 11, 13, 18, 1, 4, 6, 9, 12, 16]}}
{"prediction": {"error_location": 0.7928013205528259, "repair_targets": [], "repair_candidates": [0.09682067483663559, 0.3462151288986206, 0.17756982147693634, 0.09853260964155197, 0.10596637427806854, 0.01201925240457058, 0.00551963783800602, 0.031558237969875336, 0.005246181506663561, 0.005275611765682697, 0.06714950501918793, 0.024701282382011414, 0.0014559077098965645, 0.019873155280947685, 0.002096637152135372], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 14:47:36.289661", "n_pass": [257, 38, 35], "n_token": 18, "loss": [0.3180416524410248, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "self", "pool", "pool", "self", "pool", "self", "pool", "pool", "self", "pool", "pool", "self", "pool", "#NEWLINE#", "self", "(", "pool"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [2, 3, 5, 7, 8, 10, 11, 13, 17, 1, 4, 6, 9, 12, 15]}}
{"prediction": {"error_location": 0.7275723218917847, "repair_targets": [], "repair_candidates": [0.06531287729740143, 0.19834038615226746, 0.16006115078926086, 0.12711654603481293, 0.18444976210594177, 0.02015339583158493, 0.008993227034807205, 0.03368757665157318, 0.01216953620314598, 0.012417278252542019, 0.13400378823280334, 0.03705311939120293, 0.001272947178222239, 0.0032074791379272938, 0.0017609628848731518], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 14:47:36.347988", "n_pass": [258, 39, 36], "n_token": 17, "loss": [0.30062800645828247, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "self", "pool", "pool", "self", "pool", "self", "pool", "pool", "self", "pool", "pool", "self", "pool", "self", "(", "pool"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [2, 3, 5, 7, 8, 10, 11, 13, 16, 1, 4, 6, 9, 12, 14]}}
{"prediction": {"error_location": 0.7403531074523926, "repair_targets": [], "repair_candidates": [0.11367350071668625, 0.3041425347328186, 0.17776863276958466, 0.1467188000679016, 0.11924737691879272, 0.014503099955618382, 0.007943394593894482, 0.04915044084191322, 0.009718682616949081, 0.005733637139201164, 0.015640554949641228, 0.008639116771519184, 0.0038137976080179214, 0.022653941065073013, 0.0006525297649204731], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 14:47:36.405660", "n_pass": [260, 40, 37], "n_token": 16, "loss": [1.1943421363830566, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "self", "pool", "pool", "self", "pool", "self", "pool", "pool", "self", "pool", "pool", "self", "pool", "self", "pool"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [2, 3, 5, 7, 8, 10, 11, 13, 15, 1, 4, 6, 9, 12, 14]}}
{"prediction": {"error_location": 0.3029031455516815, "repair_targets": [], "repair_candidates": [0.07140044867992401, 0.49117472767829895, 0.037961140275001526, 0.03384990245103836, 0.156403049826622, 0.040174223482608795, 0.04552830383181572, 0.11352063715457916, 0.004671270027756691, 0.001574849826283753, 0.0011097213719040155, 0.00041907496051862836, 0.0011046126019209623, 0.0007925040554255247, 0.00031548566767014563], "target_probs": 0.0}}




Minimal simplified tokens:

['#NEWLINE#', 'self', 'pool', 'pool', 'self', 'pool', 'self', 'pool', 'pool', 'self', 'pool', 'pool', 'self', 'pool', 'self', 'pool']
