
Original sample:

{"has_bug": false, "bug_kind": 0, "bug_kind_name": "NONE", "source_tokens": ["#NEWLINE#", "def check_migrations(", "self", ")", ":", "#NEWLINE#", "#INDENT#", "\"\\n        Checks to see if the set of migrations on disk matches the\\n        migrations in the database. Prints a warning if they don't match.\\n        \"", "#NEWLINE#", "executor", "=", "MigrationExecutor", "(", "connections", "[", "DEFAULT_DB_ALIAS", "]", ")", "#NEWLINE#", "plan", "=", "executor", ".", "migration_plan", "(", "executor", ".", "loader", ".", "graph", ".", "leaf_nodes", "(", ")", ")", "#NEWLINE#", "if", "(", "plan", "and", "self", ".", "show_startup_messages", ")", ":", "#NEWLINE#", "#INDENT#", "self", ".", "stdout", ".", "write", "(", "self", ".", "style", ".", "NOTICE", "(", "'\\nYou have unapplied migrations; your app may not work properly until they are applied.'", ")", ")", "#NEWLINE#", "self", ".", "stdout", ".", "write", "(", "self", ".", "style", ".", "NOTICE", "(", "\"Run 'python manage.py migrate' to apply them.\\n\"", ")", ")"], "error_location": [0], "repair_targets": [], "repair_candidates": [2, 40, 47, 53, 63, 69, 9, 21, 25, 19, 38], "provenances": [{"datasetProvenance": {"datasetName": "ETHPy150Open", "filepath": "django-extensions/django-extensions/django_extensions/management/commands/runserver_plus.py", "license": "mit", "note": "license: bigquery_api"}}], "txt_file": "eval__VARIABLE_MISUSE__SStuB.txt-00000-of-00300", "js_count": 1363, "results": {"model": "rnn", "prob": {"loc": [[0.9972641468048096, 6.516977919091005e-06, 6.0802117332059424e-06, 1.0643188552705851e-08, 1.1461591675754335e-08, 9.164535299532872e-07, 1.7849785649559635e-07, 5.4106891411720426e-08, 1.01049568002054e-06, 1.0722379784056102e-06, 1.1687188106179747e-07, 1.674173262244949e-07, 3.4912670798803447e-07, 0.0006440801080316305, 1.985558384376418e-09, 1.57214035425568e-05, 1.033712777598339e-07, 4.527090169403891e-08, 2.5761852384675876e-07, 3.412581577322271e-07, 2.5926291868927365e-07, 8.807822268863674e-06, 2.015108435671209e-08, 3.017809646621572e-08, 7.248620903510528e-08, 0.0001561819517519325, 6.16777651174516e-09, 1.1611986337811686e-05, 2.73455458277283e-09, 4.3836385543727374e-07, 5.65144695485742e-08, 1.0329554100962923e-08, 4.969246560904139e-07, 2.7228743419982493e-06, 6.486835957275616e-08, 6.0601646509894636e-06, 9.238611653472617e-08, 1.934330839503673e-06, 0.0012602986535057425, 5.374932925406029e-07, 0.0003769942850340158, 6.798284601927662e-09, 2.5356914079566195e-07, 4.1965259356402385e-07, 7.353979754043394e-07, 2.1619475774059538e-06, 7.435222215690374e-08, 4.292652988624468e-07, 1.7767709081795147e-08, 3.848127150263281e-08, 1.768292889892109e-07, 4.3983472863828865e-08, 5.375447642563813e-08, 3.4664722079469357e-06, 2.01124965570898e-08, 1.5247758611280915e-08, 5.225904828876082e-07, 1.7763676751769708e-08, 1.6848051132001274e-07, 0.00021617602033074945, 3.7636166325683007e-06, 4.97151688705344e-07, 1.8198889506493288e-07, 2.6500345029489836e-07, 3.886111432649386e-09, 4.40621477082459e-08, 2.0835561542753567e-07, 4.296795808045317e-08, 5.611725839571591e-08, 1.2432058156264247e-06, 7.789485501064064e-09, 8.053046229861138e-09, 2.7168604788130324e-07, 6.171106292640616e-09, 4.8589715362368224e-08, 1.482100486782656e-08, 5.579411777034693e-07, 5.074240760905013e-08]], "pointer": [[0.0, 0.0, 0.1841617226600647, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.12643621861934662, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.5840411186218262, 0.0, 0.0005529531626962125, 0.0, 0.0, 0.0, 0.0030277930200099945, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.007888984866440296, 0.0, 0.001672612619586289, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.006453654728829861, 0.0, 0.0, 0.0, 0.0, 0.0, 0.02419736236333847, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.03507508337497711, 0.0, 0.0, 0.0, 0.0, 0.0, 0.02649247832596302, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]], "target": [0.0]}, "loss": [0.002739250659942627, 0.0], "acc": [1.0, 0.0, 0.0, 0.0]}}


Trace of simplified code(s):

{"result": {"time": "2021-02-11 13:52:43.119355", "n_pass": [1, 1, 1], "n_token": 78, "loss": [0.002739250659942627, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def check_migrations(", "self", ")", ":", "#NEWLINE#", "#INDENT#", "\"\\n        Checks to see if the set of migrations on disk matches the\\n        migrations in the database. Prints a warning if they don't match.\\n        \"", "#NEWLINE#", "executor", "=", "MigrationExecutor", "(", "connections", "[", "DEFAULT_DB_ALIAS", "]", ")", "#NEWLINE#", "plan", "=", "executor", ".", "migration_plan", "(", "executor", ".", "loader", ".", "graph", ".", "leaf_nodes", "(", ")", ")", "#NEWLINE#", "if", "(", "plan", "and", "self", ".", "show_startup_messages", ")", ":", "#NEWLINE#", "#INDENT#", "self", ".", "stdout", ".", "write", "(", "self", ".", "style", ".", "NOTICE", "(", "'\\nYou have unapplied migrations; your app may not work properly until they are applied.'", ")", ")", "#NEWLINE#", "self", ".", "stdout", ".", "write", "(", "self", ".", "style", ".", "NOTICE", "(", "\"Run 'python manage.py migrate' to apply them.\\n\"", ")", ")"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [2, 40, 47, 53, 63, 69, 9, 21, 25, 19, 38]}}
{"prediction": {"error_location": 0.9972641468048096, "repair_targets": [], "repair_candidates": [0.1841617226600647, 0.12643621861934662, 0.5840411186218262, 0.0005529531626962125, 0.0030277930200099945, 0.007888984866440296, 0.001672612619586289, 0.006453654728829861, 0.02419736236333847, 0.03507508337497711, 0.02649247832596302], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 13:52:43.292212", "n_pass": [45, 3, 2], "n_token": 74, "loss": [0.003400379093363881, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def check_migrations(", "self", ")", "#NEWLINE#", "executor", "=", "MigrationExecutor", "(", "connections", "[", "DEFAULT_DB_ALIAS", "]", ")", "#NEWLINE#", "plan", "=", "executor", ".", "migration_plan", "(", "executor", ".", "loader", ".", "graph", ".", "leaf_nodes", "(", ")", ")", "#NEWLINE#", "if", "(", "plan", "and", "self", ".", "show_startup_messages", ")", ":", "#NEWLINE#", "#INDENT#", "self", ".", "stdout", ".", "write", "(", "self", ".", "style", ".", "NOTICE", "(", "'\\nYou have unapplied migrations; your app may not work properly until they are applied.'", ")", ")", "#NEWLINE#", "self", ".", "stdout", ".", "write", "(", "self", ".", "style", ".", "NOTICE", "(", "\"Run 'python manage.py migrate' to apply them.\\n\"", ")", ")"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [2, 36, 43, 49, 59, 65, 5, 17, 21, 15, 34]}}
{"prediction": {"error_location": 0.996605634689331, "repair_targets": [], "repair_candidates": [0.06447003781795502, 0.09690308570861816, 0.761175274848938, 0.0006009438657201827, 0.0030646747909486294, 0.006978115066885948, 0.0010018153116106987, 0.004639637656509876, 0.014240703545510769, 0.02231583185493946, 0.024609940126538277], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 13:52:43.375983", "n_pass": [47, 4, 3], "n_token": 69, "loss": [0.004056559409946203, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def check_migrations(", "self", ")", "#NEWLINE#", "executor", "=", "MigrationExecutor", "(", "#NEWLINE#", "plan", "=", "executor", ".", "migration_plan", "(", "executor", ".", "loader", ".", "graph", ".", "leaf_nodes", "(", ")", ")", "#NEWLINE#", "if", "(", "plan", "and", "self", ".", "show_startup_messages", ")", ":", "#NEWLINE#", "#INDENT#", "self", ".", "stdout", ".", "write", "(", "self", ".", "style", ".", "NOTICE", "(", "'\\nYou have unapplied migrations; your app may not work properly until they are applied.'", ")", ")", "#NEWLINE#", "self", ".", "stdout", ".", "write", "(", "self", ".", "style", ".", "NOTICE", "(", "\"Run 'python manage.py migrate' to apply them.\\n\"", ")", ")"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [2, 31, 38, 44, 54, 60, 5, 12, 16, 10, 29]}}
{"prediction": {"error_location": 0.9959515333175659, "repair_targets": [], "repair_candidates": [0.0649973601102829, 0.4152619242668152, 0.4140198230743408, 0.0024228410329669714, 0.00616737175732851, 0.01037480030208826, 0.001557386596687138, 0.007507032714784145, 0.027694853022694588, 0.015848930925130844, 0.03414778783917427], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 13:52:43.537796", "n_pass": [51, 6, 4], "n_token": 64, "loss": [0.04479796066880226, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def check_migrations(", "self", ")", "#NEWLINE#", "executor", "=", "MigrationExecutor", "(", "#NEWLINE#", "plan", "=", "executor", ".", "migration_plan", "(", "executor", ".", "loader", ".", "graph", ".", "leaf_nodes", "(", "plan", "and", "self", ".", "show_startup_messages", ")", ":", "#NEWLINE#", "#INDENT#", "self", ".", "stdout", ".", "write", "(", "self", ".", "style", ".", "NOTICE", "(", "'\\nYou have unapplied migrations; your app may not work properly until they are applied.'", ")", ")", "#NEWLINE#", "self", ".", "stdout", ".", "write", "(", "self", ".", "style", ".", "NOTICE", "(", "\"Run 'python manage.py migrate' to apply them.\\n\"", ")", ")"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [2, 26, 33, 39, 49, 55, 5, 12, 16, 10, 24]}}
{"prediction": {"error_location": 0.9561906456947327, "repair_targets": [], "repair_candidates": [0.06691662222146988, 0.5537401437759399, 0.32578885555267334, 0.0005251049296930432, 0.0017478711670264602, 0.038557812571525574, 0.0011527091264724731, 0.0009153329883702099, 0.005458230618387461, 0.0014479750534519553, 0.003749363124370575], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 13:52:43.618625", "n_pass": [54, 7, 5], "n_token": 59, "loss": [0.07105206698179245, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def check_migrations(", "self", ")", "#NEWLINE#", "executor", "=", "MigrationExecutor", "(", "#NEWLINE#", "plan", "=", "executor", ".", "migration_plan", "(", "executor", ".", "loader", ".", "graph", ".", "leaf_nodes", "(", "plan", "and", "self", ".", "show_startup_messages", ")", ":", "#NEWLINE#", "#INDENT#", "self", "self", ".", "style", ".", "NOTICE", "(", "'\\nYou have unapplied migrations; your app may not work properly until they are applied.'", ")", ")", "#NEWLINE#", "self", ".", "stdout", ".", "write", "(", "self", ".", "style", ".", "NOTICE", "(", "\"Run 'python manage.py migrate' to apply them.\\n\"", ")", ")"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [2, 26, 33, 34, 44, 50, 5, 12, 16, 10, 24]}}
{"prediction": {"error_location": 0.9314134120941162, "repair_targets": [], "repair_candidates": [0.027341363951563835, 0.3426487147808075, 0.5969938635826111, 0.00040309439646080136, 0.001333593507297337, 0.025119617581367493, 0.0006596297607757151, 0.0022162350360304117, 0.0003349664038978517, 0.0010025243973359466, 0.0019463793141767383], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 13:52:43.694279", "n_pass": [56, 8, 6], "n_token": 54, "loss": [0.06901531666517258, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def check_migrations(", "self", ")", "#NEWLINE#", "executor", "=", "MigrationExecutor", "(", "#NEWLINE#", "plan", "=", "executor", ".", "migration_plan", "(", "executor", ".", "loader", ".", "graph", ".", "leaf_nodes", "(", "plan", "and", "self", ".", "show_startup_messages", ")", ":", "#NEWLINE#", "#INDENT#", "self", "self", ".", "style", ".", "NOTICE", "self", ".", "stdout", ".", "write", "(", "self", ".", "style", ".", "NOTICE", "(", "\"Run 'python manage.py migrate' to apply them.\\n\"", ")", ")"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [2, 26, 33, 34, 39, 45, 5, 12, 16, 10, 24]}}
{"prediction": {"error_location": 0.9333125948905945, "repair_targets": [], "repair_candidates": [0.03531557694077492, 0.6327038407325745, 0.2972809672355652, 0.000460375304101035, 0.0012687933631241322, 0.025851847603917122, 0.000457399437436834, 0.002983509562909603, 0.00045661881449632347, 0.0007697324035689235, 0.002451410051435232], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 13:52:43.768296", "n_pass": [59, 9, 7], "n_token": 49, "loss": [0.16898804903030396, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def check_migrations(", "self", ")", "#NEWLINE#", "executor", "=", "MigrationExecutor", "(", "#NEWLINE#", "plan", "=", "executor", ".", "migration_plan", "(", "executor", ".", "loader", ".", "graph", ".", "leaf_nodes", "(", "plan", "and", "self", ".", "show_startup_messages", ")", ":", "#NEWLINE#", "#INDENT#", "self", "self", ".", "style", ".", "NOTICE", "self", ".", "stdout", ".", "write", "(", "self", ".", "style", "."]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [2, 26, 33, 34, 39, 45, 5, 12, 16, 10, 24]}}
{"prediction": {"error_location": 0.8445188403129578, "repair_targets": [], "repair_candidates": [0.0014165370957925916, 0.0656222552061081, 0.9304476380348206, 0.00011387552513042465, 0.00013062420475762337, 0.0013612366747111082, 7.929681305540726e-05, 8.783705561654642e-05, 1.1425196134950966e-05, 0.00014362181536853313, 0.0005856856005266309], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 13:52:43.912630", "n_pass": [93, 11, 8], "n_token": 47, "loss": [0.16916270554065704, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def check_migrations(", "self", ")", "#NEWLINE#", "executor", "(", "#NEWLINE#", "plan", "=", "executor", ".", "migration_plan", "(", "executor", ".", "loader", ".", "graph", ".", "leaf_nodes", "(", "plan", "and", "self", ".", "show_startup_messages", ")", ":", "#NEWLINE#", "#INDENT#", "self", "self", ".", "style", ".", "NOTICE", "self", ".", "stdout", ".", "write", "(", "self", ".", "style", "."]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [2, 24, 31, 32, 37, 43, 5, 10, 14, 8, 22]}}
{"prediction": {"error_location": 0.844371497631073, "repair_targets": [], "repair_candidates": [0.0017167647602036595, 0.000281629734672606, 0.9963890314102173, 5.194944969844073e-05, 3.467490751063451e-05, 0.0010187397710978985, 4.7764100600034e-05, 6.720521923853084e-05, 8.044535206863657e-06, 8.061480184551328e-05, 0.00030359826632775366], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 13:52:43.983833", "n_pass": [94, 12, 9], "n_token": 45, "loss": [0.025138624012470245, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def check_migrations(", "self", ")", "#NEWLINE#", "executor", "plan", "=", "executor", ".", "migration_plan", "(", "executor", ".", "loader", ".", "graph", ".", "leaf_nodes", "(", "plan", "and", "self", ".", "show_startup_messages", ")", ":", "#NEWLINE#", "#INDENT#", "self", "self", ".", "style", ".", "NOTICE", "self", ".", "stdout", ".", "write", "(", "self", ".", "style", "."]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [2, 22, 29, 30, 35, 41, 5, 8, 12, 6, 20]}}
{"prediction": {"error_location": 0.9751743674278259, "repair_targets": [], "repair_candidates": [0.011682301759719849, 0.10561743378639221, 0.846068799495697, 0.00011357315088389441, 0.001065336517058313, 0.021719155833125114, 0.00019305318710394204, 0.0007053901790641248, 6.807721365476027e-05, 0.001013309694826603, 0.011753605678677559], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 13:52:44.057045", "n_pass": [97, 13, 10], "n_token": 43, "loss": [0.03601006045937538, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def check_migrations(", "self", ")", "#NEWLINE#", "executor", "plan", "=", "executor", ".", "executor", ".", "loader", ".", "graph", ".", "leaf_nodes", "(", "plan", "and", "self", ".", "show_startup_messages", ")", ":", "#NEWLINE#", "#INDENT#", "self", "self", ".", "style", ".", "NOTICE", "self", ".", "stdout", ".", "write", "(", "self", ".", "style", "."]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [2, 20, 27, 28, 33, 39, 5, 8, 10, 6, 18]}}
{"prediction": {"error_location": 0.9646306037902832, "repair_targets": [], "repair_candidates": [0.025173358619213104, 0.12541769444942474, 0.804596483707428, 0.0001710434298729524, 0.014390820637345314, 0.019019028171896935, 0.00045137255801819265, 0.0009995989967137575, 0.00013202623813413084, 0.0011371864238753915, 0.008511350490152836], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 13:52:44.126161", "n_pass": [99, 14, 11], "n_token": 41, "loss": [0.04781530797481537, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def check_migrations(", "self", ")", "#NEWLINE#", "executor", "plan", "=", "executor", ".", "executor", ".", "graph", ".", "leaf_nodes", "(", "plan", "and", "self", ".", "show_startup_messages", ")", ":", "#NEWLINE#", "#INDENT#", "self", "self", ".", "style", ".", "NOTICE", "self", ".", "stdout", ".", "write", "(", "self", ".", "style", "."]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [2, 18, 25, 26, 31, 37, 5, 8, 10, 6, 16]}}
{"prediction": {"error_location": 0.953309953212738, "repair_targets": [], "repair_candidates": [0.018873225897550583, 0.10902465134859085, 0.828428328037262, 0.00013309069618117064, 0.00941718090325594, 0.023873448371887207, 0.000994734582491219, 0.0009651919244788587, 0.00015581233310513198, 0.0009628994157537818, 0.007171459496021271], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 13:52:44.194487", "n_pass": [100, 15, 12], "n_token": 39, "loss": [0.0699266716837883, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def check_migrations(", "self", ")", "#NEWLINE#", "executor", "plan", "=", "executor", ".", "executor", ".", "leaf_nodes", "(", "plan", "and", "self", ".", "show_startup_messages", ")", ":", "#NEWLINE#", "#INDENT#", "self", "self", ".", "style", ".", "NOTICE", "self", ".", "stdout", ".", "write", "(", "self", ".", "style", "."]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [2, 16, 23, 24, 29, 35, 5, 8, 10, 6, 14]}}
{"prediction": {"error_location": 0.9324620962142944, "repair_targets": [], "repair_candidates": [0.011793901212513447, 0.09379357099533081, 0.8476030826568604, 0.00010555553308222443, 0.01220664568245411, 0.02665717527270317, 0.0014197744894772768, 0.0006730111199431121, 0.00014092786295805126, 0.0008139906567521393, 0.004792358726263046], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 13:52:44.261533", "n_pass": [103, 16, 13], "n_token": 36, "loss": [0.0527552105486393, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def check_migrations(", "self", ")", "#NEWLINE#", "executor", "plan", "=", "executor", ".", "executor", ".", "leaf_nodes", "(", "plan", "and", "self", ".", "#NEWLINE#", "#INDENT#", "self", "self", ".", "style", ".", "NOTICE", "self", ".", "stdout", ".", "write", "(", "self", ".", "style", "."]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [2, 16, 20, 21, 26, 32, 5, 8, 10, 6, 14]}}
{"prediction": {"error_location": 0.9486122131347656, "repair_targets": [], "repair_candidates": [0.04349706694483757, 0.08639586716890335, 0.8234782218933105, 0.00015121285105124116, 0.016437796875834465, 0.008120639249682426, 0.006228415295481682, 0.0008580266730859876, 0.0001127525101765059, 0.001973961014300585, 0.012746107764542103], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 13:52:44.528309", "n_pass": [148, 20, 14], "n_token": 35, "loss": [0.04293733090162277, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def check_migrations(", "self", ")", "#NEWLINE#", "executor", "plan", "=", "executor", ".", "executor", ".", "leaf_nodes", "(", "plan", "and", "self", ".", "#INDENT#", "self", "self", ".", "style", ".", "NOTICE", "self", ".", "stdout", ".", "write", "(", "self", ".", "style", "."]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [2, 16, 19, 20, 25, 31, 5, 8, 10, 6, 14]}}
{"prediction": {"error_location": 0.9579713940620422, "repair_targets": [], "repair_candidates": [0.10152953863143921, 0.07885849475860596, 0.6668331623077393, 0.00031848190701566637, 0.05551458150148392, 0.017618117853999138, 0.0017218900611624122, 0.0022720876149833202, 0.000450560066383332, 0.004515849985182285, 0.07036720216274261], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 13:52:44.594133", "n_pass": [149, 21, 15], "n_token": 34, "loss": [0.013401782140135765, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def check_migrations(", "self", ")", "#NEWLINE#", "executor", "plan", "=", "executor", ".", "executor", ".", "leaf_nodes", "(", "plan", "and", "self", ".", "self", "self", ".", "style", ".", "NOTICE", "self", ".", "stdout", ".", "write", "(", "self", ".", "style", "."]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [2, 16, 18, 19, 24, 30, 5, 8, 10, 6, 14]}}
{"prediction": {"error_location": 0.9866876006126404, "repair_targets": [], "repair_candidates": [0.06793902069330215, 0.0634133443236351, 0.6123798489570618, 0.0003094880376011133, 0.041571613401174545, 0.009974104352295399, 0.0013503296067938209, 0.025204911828041077, 0.0005968258483335376, 0.00909646786749363, 0.16816401481628418], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 13:52:44.659429", "n_pass": [151, 22, 16], "n_token": 32, "loss": [0.04058045521378517, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def check_migrations(", "self", ")", "#NEWLINE#", "executor", "plan", "=", "executor", ".", "executor", ".", "leaf_nodes", "(", "plan", "and", "self", ".", "self", "self", ".", "NOTICE", "self", ".", "stdout", ".", "write", "(", "self", ".", "style", "."]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [2, 16, 18, 19, 22, 28, 5, 8, 10, 6, 14]}}
{"prediction": {"error_location": 0.9602317810058594, "repair_targets": [], "repair_candidates": [0.038040995597839355, 0.06632915139198303, 0.8008682727813721, 0.00032156045199371874, 0.032373689115047455, 0.00607012864202261, 0.0006931729149073362, 0.015856917947530746, 0.00032765755895525217, 0.0031271548941731453, 0.03599128499627113], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 13:52:44.723322", "n_pass": [152, 23, 17], "n_token": 30, "loss": [0.07079510390758514, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def check_migrations(", "self", ")", "#NEWLINE#", "executor", "plan", "=", "executor", ".", "executor", ".", "leaf_nodes", "(", "plan", "and", "self", ".", "self", "self", "self", ".", "stdout", ".", "write", "(", "self", ".", "style", "."]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [2, 16, 18, 19, 20, 26, 5, 8, 10, 6, 14]}}
{"prediction": {"error_location": 0.931652843952179, "repair_targets": [], "repair_candidates": [0.0037443768233060837, 0.045452989637851715, 0.9373248219490051, 8.750151755521074e-05, 0.001998633611947298, 0.0003413636877667159, 2.5993813324021176e-05, 0.00043077024747617543, 3.185014065820724e-05, 4.884802910964936e-05, 0.010512983426451683], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 13:52:44.913854", "n_pass": [157, 26, 18], "n_token": 28, "loss": [0.2668496370315552, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def check_migrations(", "self", ")", "#NEWLINE#", "executor", "plan", "=", "executor", ".", "executor", ".", "leaf_nodes", "(", "plan", "and", "self", ".", "self", "self", "self", ".", "stdout", ".", "write", "(", "self", "."]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [2, 16, 18, 19, 20, 26, 5, 8, 10, 6, 14]}}
{"prediction": {"error_location": 0.765788197517395, "repair_targets": [], "repair_candidates": [0.001099577872082591, 0.04401184618473053, 0.9505001902580261, 9.32724797166884e-05, 0.0014608767814934254, 0.00021556185674853623, 1.4772606846236158e-05, 0.00023003188834991306, 2.099762969010044e-05, 3.34333126374986e-05, 0.00231945957057178], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 13:52:44.976177", "n_pass": [159, 27, 19], "n_token": 27, "loss": [0.15326456725597382, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "self", ")", "#NEWLINE#", "executor", "plan", "=", "executor", ".", "executor", ".", "leaf_nodes", "(", "plan", "and", "self", ".", "self", "self", "self", ".", "stdout", ".", "write", "(", "self", "."]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [1, 15, 17, 18, 19, 25, 4, 7, 9, 5, 13]}}
{"prediction": {"error_location": 0.8579027056694031, "repair_targets": [], "repair_candidates": [0.010467836633324623, 0.04706137254834175, 0.9332791566848755, 4.0684855775907636e-05, 0.0008675038116052747, 0.0001589988241903484, 3.102804475929588e-05, 0.0003011038643307984, 2.3932818294269964e-05, 3.9991045923670754e-05, 0.007728450000286102], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 13:52:45.038067", "n_pass": [161, 28, 20], "n_token": 26, "loss": [0.6177446246147156, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "self", "#NEWLINE#", "executor", "plan", "=", "executor", ".", "executor", ".", "leaf_nodes", "(", "plan", "and", "self", ".", "self", "self", "self", ".", "stdout", ".", "write", "(", "self", "."]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [1, 14, 16, 17, 18, 24, 3, 6, 8, 4, 12]}}
{"prediction": {"error_location": 0.5391590595245361, "repair_targets": [], "repair_candidates": [0.01721699722111225, 0.12385717779397964, 0.8560405969619751, 1.903100564959459e-05, 0.0008445768035016954, 0.00011340304627083242, 1.090763726097066e-05, 0.00010429249959997833, 1.0290610589436255e-05, 1.8388207536190748e-05, 0.0017644466133788228], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 13:52:45.099258", "n_pass": [162, 29, 21], "n_token": 25, "loss": [0.37246012687683105, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "self", "executor", "plan", "=", "executor", ".", "executor", ".", "leaf_nodes", "(", "plan", "and", "self", ".", "self", "self", "self", ".", "stdout", ".", "write", "(", "self", "."]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [1, 13, 15, 16, 17, 23, 2, 5, 7, 3, 11]}}
{"prediction": {"error_location": 0.6890371441841125, "repair_targets": [], "repair_candidates": [0.020217353478074074, 0.6706457734107971, 0.3064526915550232, 7.616035873070359e-06, 0.0005678274901583791, 6.2161372625269e-05, 7.1589515755476896e-06, 9.481370216235518e-05, 6.5716599237930495e-06, 1.2787270861736033e-05, 0.001925281248986721], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 13:52:45.162582", "n_pass": [165, 30, 22], "n_token": 24, "loss": [0.11053112894296646, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "self", "executor", "plan", "executor", ".", "executor", ".", "leaf_nodes", "(", "plan", "and", "self", ".", "self", "self", "self", ".", "stdout", ".", "write", "(", "self", "."]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [1, 12, 14, 15, 16, 22, 2, 4, 6, 3, 10]}}
{"prediction": {"error_location": 0.8953584432601929, "repair_targets": [], "repair_candidates": [0.10219909995794296, 0.7442740201950073, 0.033753130584955215, 0.001365596312098205, 0.02450902760028839, 0.009239423088729382, 0.00010616386134643108, 0.00683650141581893, 0.00017829616263043135, 7.29460152797401e-05, 0.07746577262878418], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 13:52:45.222898", "n_pass": [167, 31, 23], "n_token": 23, "loss": [0.09255582094192505, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "self", "executor", "plan", "executor", "executor", ".", "leaf_nodes", "(", "plan", "and", "self", ".", "self", "self", "self", ".", "stdout", ".", "write", "(", "self", "."]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [1, 11, 13, 14, 15, 21, 2, 4, 5, 3, 9]}}
{"prediction": {"error_location": 0.9115981459617615, "repair_targets": [], "repair_candidates": [0.05592293664813042, 0.6817540526390076, 0.11258319765329361, 0.007543806452304125, 0.0008966446039266884, 0.012065136805176735, 0.00011377730697859079, 0.02472994290292263, 0.00020530876645352691, 0.00015201464702840894, 0.1040332019329071], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 13:52:45.282425", "n_pass": [169, 32, 24], "n_token": 22, "loss": [0.029444998130202293, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "self", "executor", "plan", "executor", "executor", "leaf_nodes", "(", "plan", "and", "self", ".", "self", "self", "self", ".", "stdout", ".", "write", "(", "self", "."]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [1, 10, 12, 13, 14, 20, 2, 4, 5, 3, 8]}}
{"prediction": {"error_location": 0.9709842801094055, "repair_targets": [], "repair_candidates": [0.06691281497478485, 0.689538836479187, 0.03494594991207123, 0.0014267750084400177, 0.00043284057755954564, 0.001847082283347845, 0.000147647486301139, 0.01925637759268284, 0.0002563960151746869, 0.00022200473176781088, 0.18501335382461548], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 13:52:45.341765", "n_pass": [170, 33, 25], "n_token": 21, "loss": [0.05266236513853073, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "self", "executor", "plan", "executor", "executor", "(", "plan", "and", "self", ".", "self", "self", "self", ".", "stdout", ".", "write", "(", "self", "."]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [1, 9, 11, 12, 13, 19, 2, 4, 5, 3, 7]}}
{"prediction": {"error_location": 0.9487003684043884, "repair_targets": [], "repair_candidates": [0.05156364291906357, 0.8243826031684875, 0.018642624840140343, 0.0009693601750768721, 0.0001767452631611377, 0.00019008856907021254, 4.241420538164675e-05, 0.02335309237241745, 0.00018406769959256053, 0.0001784652704373002, 0.08031689375638962], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 13:52:45.400271", "n_pass": [171, 34, 26], "n_token": 20, "loss": [0.08133717626333237, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "self", "executor", "plan", "executor", "executor", "plan", "and", "self", ".", "self", "self", "self", ".", "stdout", ".", "write", "(", "self", "."]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [1, 8, 10, 11, 12, 18, 2, 4, 5, 3, 6]}}
{"prediction": {"error_location": 0.921882688999176, "repair_targets": [], "repair_candidates": [0.11113662272691727, 0.7266805171966553, 0.007345990743488073, 0.0005271792178973556, 0.00011182495654793456, 0.000152632623212412, 0.00013019639300182462, 0.036212947219610214, 0.0004494159948080778, 0.00029551860643550754, 0.1169571503996849], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 13:52:45.458140", "n_pass": [173, 35, 27], "n_token": 19, "loss": [0.27805063128471375, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "self", "executor", "plan", "executor", "executor", "plan", "self", ".", "self", "self", "self", ".", "stdout", ".", "write", "(", "self", "."]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [1, 7, 9, 10, 11, 17, 2, 4, 5, 3, 6]}}
{"prediction": {"error_location": 0.7572584748268127, "repair_targets": [], "repair_candidates": [0.08620350062847137, 0.4994305968284607, 0.010472433641552925, 0.00026773629360832274, 0.00013110580039210618, 0.002362326253205538, 0.0007914587622508407, 0.2699057459831238, 0.0009426015894860029, 0.0008721220074221492, 0.12862041592597961], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 13:52:45.631687", "n_pass": [179, 38, 28], "n_token": 17, "loss": [0.15884293615818024, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "self", "executor", "plan", "executor", "executor", "plan", "self", ".", "self", "self", "self", ".", "stdout", ".", "self", "."]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [1, 7, 9, 10, 11, 15, 2, 4, 5, 3, 6]}}
{"prediction": {"error_location": 0.8531303405761719, "repair_targets": [], "repair_candidates": [0.027567153796553612, 0.38800275325775146, 0.015507233329117298, 0.00033918124972842634, 0.00017576481332071126, 0.0039304569363594055, 0.0013862652704119682, 0.12240449339151382, 0.0015159513568505645, 0.0013946344843134284, 0.43777620792388916], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 13:52:45.688888", "n_pass": [189, 39, 29], "n_token": 16, "loss": [0.08742077648639679, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "self", "executor", "plan", "executor", "executor", "plan", "self", "self", "self", "self", ".", "stdout", ".", "self", "."]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [1, 7, 8, 9, 10, 14, 2, 4, 5, 3, 6]}}
{"prediction": {"error_location": 0.916291356086731, "repair_targets": [], "repair_candidates": [0.01301584206521511, 0.7298765182495117, 0.1625378280878067, 0.0011115799425169826, 0.00012596095621120185, 0.0002878558007068932, 0.00022809345682617277, 0.00019089099077973515, 0.0007371656247414649, 0.0012340733082965016, 0.090654157102108], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 13:52:45.744843", "n_pass": [192, 40, 30], "n_token": 14, "loss": [0.04512766748666763, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "self", "executor", "plan", "executor", "executor", "plan", "self", "self", "self", "self", ".", "self", "."]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [1, 7, 8, 9, 10, 12, 2, 4, 5, 3, 6]}}
{"prediction": {"error_location": 0.9558754563331604, "repair_targets": [], "repair_candidates": [0.060224514454603195, 0.7335637807846069, 0.04774220287799835, 0.0006494915578514338, 0.00026712502585723996, 0.0019736418034881353, 0.003115816507488489, 0.0013191428733989596, 0.0019783794414252043, 0.0017788705881685019, 0.1473870426416397], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 13:52:45.801009", "n_pass": [211, 41, 31], "n_token": 13, "loss": [0.389779657125473, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "self", "executor", "plan", "executor", "executor", "plan", "self", "self", "self", "self", ".", "self"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [1, 7, 8, 9, 10, 12, 2, 4, 5, 3, 6]}}
{"prediction": {"error_location": 0.6772060394287109, "repair_targets": [], "repair_candidates": [0.023193862289190292, 0.8556307554244995, 0.11424555629491806, 0.001052442123182118, 0.00012364033318590373, 0.00038203035364858806, 0.00017668516375124454, 0.00028741342248395085, 0.0005251028924249113, 0.00035047679557465017, 0.004032068885862827], "target_probs": 0.0}}




Minimal simplified tokens:

['#NEWLINE#', 'self', 'executor', 'plan', 'executor', 'executor', 'plan', 'self', 'self', 'self', 'self', '.', 'self']
