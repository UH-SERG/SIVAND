
Original sample:

{"has_bug": false, "bug_kind": 0, "bug_kind_name": "NONE", "source_tokens": ["#NEWLINE#", "def get_test_subprocess(", "cmd", "=", "None", ",", "stdout", "=", "DEVNULL", ",", "stderr", "=", "DEVNULL", ",", "stdin", "=", "None", ",", "wait", "=", "False", ")", ":", "#NEWLINE#", "#INDENT#", "\"Return a subprocess.Popen object to use in tests.\\n    By default stdout and stderr are redirected to /dev/null and the\\n    python interpreter is used as test process.\\n    If 'wait' is True attemps to make sure the process is in a\\n    reasonably initialized state.\\n    \"", "#NEWLINE#", "if", "(", "cmd", "is", "None", ")", ":", "#NEWLINE#", "#INDENT#", "pyline", "=", "''", "#NEWLINE#", "if", "wait", ":", "#NEWLINE#", "#INDENT#", "pyline", "+=", "(", "\"open('%s', 'w'); \"", "%", "TESTFN", ")", "#NEWLINE#", "#UNINDENT#", "pyline", "+=", "'import time; time.sleep(3600);'", "#NEWLINE#", "cmd_", "=", "[", "PYTHON", ",", "'-c'", ",", "pyline", "]", "#NEWLINE#", "#UNINDENT#", "else", ":", "#NEWLINE#", "#INDENT#", "cmd_", "=", "cmd", "#NEWLINE#", "#UNINDENT#", "sproc", "=", "subprocess", ".", "Popen", "(", "cmd_", ",", "stdout", "=", "stdout", ",", "stderr", "=", "stderr", ",", "stdin", "=", "stdin", ")", "#NEWLINE#", "if", "wait", ":", "#NEWLINE#", "#INDENT#", "if", "(", "cmd", "is", "None", ")", ":", "#NEWLINE#", "#INDENT#", "stop_at", "=", "(", "time", ".", "time", "(", ")", "+", "3", ")", "#NEWLINE#", "while", "(", "time", ".", "time", "(", ")", ">", "stop_at", ")", ":", "#NEWLINE#", "#INDENT#", "if", "os", ".", "path", ".", "exists", "(", "TESTFN", ")", ":", "#NEWLINE#", "#INDENT#", "break", "#NEWLINE#", "#UNINDENT#", "time", ".", "sleep", "(", "0.001", ")", "#NEWLINE#", "#UNINDENT#", "else", ":", "#NEWLINE#", "#INDENT#", "warn", "(", "\"couldn't make sure test file was actually created\"", ")", "#NEWLINE#", "#UNINDENT#", "#UNINDENT#", "else", ":", "#NEWLINE#", "#INDENT#", "wait_for_pid", "(", "sproc", ".", "pid", ")", "#NEWLINE#", "#UNINDENT#", "#UNINDENT#", "_subprocesses_started", ".", "add", "(", "sproc", ".", "pid", ")", "#NEWLINE#", "return", "sproc"], "error_location": [0], "repair_targets": [], "repair_candidates": [58, 73, 84, 6, 86, 88, 113, 133, 78, 178, 189, 195, 18, 41, 100, 10, 90, 92, 14, 94, 96, 2, 29, 75, 106, 36, 45, 54, 65], "provenances": [{"datasetProvenance": {"datasetName": "ETHPy150Open", "filepath": "packages/psutil/test/test_psutil.py", "license": "bsd-3-clause", "note": "license: bigquery_api"}}], "txt_file": "eval__VARIABLE_MISUSE__SStuB.txt-00000-of-00300", "js_count": 2355, "results": {"model": "rnn", "prob": {"loc": [[0.5067217946052551, 1.3375457683650893e-06, 1.8007084179316735e-07, 1.3015805322424967e-08, 5.1349456242633096e-08, 4.883395021693104e-09, 3.7921887496850104e-07, 1.4099073020190644e-08, 3.87396312362398e-07, 1.6844506234292567e-08, 2.9466161777236266e-07, 8.627550585060817e-08, 7.124697845029004e-07, 4.679471743429531e-08, 1.1684496712405235e-06, 3.4296594009219916e-08, 6.258508733480994e-07, 2.537193211082922e-07, 1.4593788364436477e-06, 5.306148054273763e-08, 9.87471594271483e-07, 2.7485137366056733e-07, 1.507273879042259e-07, 1.2310949841776164e-06, 4.2315821247029817e-07, 2.661454630015214e-07, 2.4533062514819903e-07, 1.086098109226441e-07, 9.591631169314496e-06, 0.027686407789587975, 7.282590104296105e-07, 6.14719692748622e-06, 5.409885943663539e-07, 1.2646556513118412e-07, 5.808024639009091e-07, 1.534183624585239e-08, 8.583913313486846e-08, 1.43211843806057e-06, 2.2482583972305292e-06, 3.123798023807467e-06, 6.643891083513154e-06, 0.06032227724790573, 3.55460286982634e-07, 1.1930126220249804e-07, 1.8423941483547424e-08, 9.523225941165947e-08, 7.849067173992808e-09, 9.173248145089019e-06, 5.359315768949102e-11, 5.2639013148336744e-08, 6.94573755026795e-05, 8.290785444842186e-06, 6.126405764916854e-07, 1.0253064175458348e-07, 1.4095381573042687e-07, 2.661943021564639e-08, 1.2395594239933416e-06, 3.134228450107912e-07, 5.996407281827487e-08, 1.3788509534151672e-07, 5.575363957177615e-07, 0.00016159735969267786, 1.3662058151453493e-08, 1.4156266843201593e-06, 4.838200595713715e-08, 0.05295448750257492, 4.19617009583817e-07, 8.688072483664655e-08, 5.752473953180015e-06, 4.921435348137493e-08, 1.6534040696569718e-06, 7.111162290129869e-07, 4.6150647747822404e-09, 4.2256395715867257e-08, 4.0527279310254016e-08, 0.0026227952912449837, 1.021511764065508e-07, 1.9515098870215297e-07, 9.368056197445185e-08, 9.072360640516308e-10, 5.334968378178928e-08, 9.469457440403062e-10, 1.010893502240151e-08, 2.7010250960302074e-06, 0.0092944810166955, 1.0815955420184764e-07, 1.0612847489710475e-07, 4.378970857032982e-07, 0.0004461752832867205, 3.902528789012649e-08, 1.519231744850913e-07, 5.371566089706903e-07, 8.28284682938829e-05, 1.0591554655547952e-07, 2.1559880281074584e-07, 2.4667468778716284e-07, 0.0015010018832981586, 1.5298992650514265e-07, 7.620767519256333e-06, 1.612673804629594e-05, 0.1034417375922203, 3.370963440829655e-06, 4.976060949957173e-07, 7.079372608131962e-07, 3.491120423859684e-07, 4.746846025227569e-05, 0.07455957680940628, 3.252346232329728e-06, 1.8974893691847683e-06, 6.526552169816568e-07, 1.336899799753155e-07, 8.72248790528829e-07, 1.7960039144782058e-07, 1.1488692308603277e-07, 1.1049152703890286e-08, 6.598055790618673e-08, 6.157772531878436e-07, 6.228873417057912e-09, 1.2351496714302357e-08, 2.8033699095431075e-07, 1.345791679341346e-05, 5.6885738786149886e-08, 0.0008302298374474049, 2.7888464870784446e-08, 5.31690744765001e-08, 8.721830369040617e-09, 4.215963045339777e-08, 1.0725938182076789e-06, 4.1946890405597514e-09, 1.1333763261234253e-08, 2.445959239594231e-07, 3.797299359575845e-05, 2.7640959388008923e-07, 0.003929215483367443, 2.2995942572379136e-07, 3.1759846308432316e-08, 1.3506090112969105e-07, 2.3814251903786499e-07, 4.0492508901479596e-08, 2.3655107384001894e-07, 7.859119577346974e-09, 3.376783652697668e-08, 1.8470103668732918e-08, 6.90030617533921e-07, 1.3561319178734266e-07, 0.002450118539854884, 4.373814135760767e-06, 1.195924284047578e-07, 8.554110308978125e-08, 8.179242882988547e-08, 5.562180376728065e-06, 3.265788706130479e-08, 7.678648472619898e-08, 9.821889790373461e-08, 9.23300458310905e-09, 2.5125736158315704e-08, 2.3682812155811916e-08, 2.5080766135943122e-05, 2.922808661764975e-08, 6.894047288596994e-08, 1.5791689520483487e-06, 2.0846339765512312e-08, 3.043322749363142e-07, 3.297200521501509e-07, 2.3664343373752672e-08, 8.985420407725542e-08, 3.655750147046888e-09, 2.2735208915491967e-07, 8.096359493947602e-08, 4.273794829146027e-08, 2.326807759800431e-07, 8.278895620605908e-06, 3.177523666408888e-08, 8.076066251305747e-07, 9.443574811029976e-08, 3.52460716612768e-07, 1.988143871756165e-08, 6.657654694208759e-08, 0.03104725293815136, 2.4363476569533304e-08, 2.617018708406249e-07, 2.716330449459292e-08, 3.532986738719046e-07, 2.2434277013871906e-07, 1.1800984793808311e-06, 1.903061092889402e-05, 4.992095625766524e-08, 2.2834127477722177e-08, 2.804327436933818e-07, 0.09289656579494476, 6.159473286970751e-08, 9.921674063662067e-06, 8.705448095724933e-08, 2.832490224591311e-07, 1.3916129546487355e-06, 0.028682349249720573]], "pointer": [[0.0, 0.0, 0.09832464158535004, 0.0, 0.0, 0.0, 0.06527315825223923, 0.0, 0.0, 0.0, 0.055786266922950745, 0.0, 0.0, 0.0, 0.14273343980312347, 0.0, 0.0, 0.0, 0.10525161027908325, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0024014138616621494, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.016338352113962173, 0.0, 0.0, 0.0, 0.0, 0.0005890563479624689, 0.0, 0.0, 0.0, 0.0012944430345669389, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.017558081075549126, 0.0, 0.0, 0.0, 0.015230529010295868, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0004347106732893735, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.057428523898124695, 0.0, 0.00042220286559313536, 0.0, 0.0, 0.0966261774301529, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0073415069200564e-05, 0.0, 0.0002266906521981582, 0.0, 1.3791131095786113e-05, 0.0, 0.0014066343428567052, 0.0, 1.3416361980489455e-05, 0.0, 0.003079848363995552, 0.0, 1.3922222024120856e-05, 0.0, 0.0, 0.0, 9.72932466538623e-05, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0004814865533262491, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.11931425333023071, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.00020870778826065361, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.19912903010845184, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0002321321953786537, 0.0, 0.0, 0.0, 0.0, 0.0, 8.010134479263797e-05]], "target": [0.0]}, "loss": [0.6797930598258972, 0.0], "acc": [1.0, 0.0, 0.0, 0.0]}}


Trace of simplified code(s):

{"result": {"time": "2021-02-11 14:14:48.295919", "n_pass": [1, 1, 1], "n_token": 196, "loss": [0.679793119430542, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def get_test_subprocess(", "cmd", "=", "None", ",", "stdout", "=", "DEVNULL", ",", "stderr", "=", "DEVNULL", ",", "stdin", "=", "None", ",", "wait", "=", "False", ")", ":", "#NEWLINE#", "#INDENT#", "\"Return a subprocess.Popen object to use in tests.\\n    By default stdout and stderr are redirected to /dev/null and the\\n    python interpreter is used as test process.\\n    If 'wait' is True attemps to make sure the process is in a\\n    reasonably initialized state.\\n    \"", "#NEWLINE#", "if", "(", "cmd", "is", "None", ")", ":", "#NEWLINE#", "#INDENT#", "pyline", "=", "''", "#NEWLINE#", "if", "wait", ":", "#NEWLINE#", "#INDENT#", "pyline", "+=", "(", "\"open('%s', 'w'); \"", "%", "TESTFN", ")", "#NEWLINE#", "#UNINDENT#", "pyline", "+=", "'import time; time.sleep(3600);'", "#NEWLINE#", "cmd_", "=", "[", "PYTHON", ",", "'-c'", ",", "pyline", "]", "#NEWLINE#", "#UNINDENT#", "else", ":", "#NEWLINE#", "#INDENT#", "cmd_", "=", "cmd", "#NEWLINE#", "#UNINDENT#", "sproc", "=", "subprocess", ".", "Popen", "(", "cmd_", ",", "stdout", "=", "stdout", ",", "stderr", "=", "stderr", ",", "stdin", "=", "stdin", ")", "#NEWLINE#", "if", "wait", ":", "#NEWLINE#", "#INDENT#", "if", "(", "cmd", "is", "None", ")", ":", "#NEWLINE#", "#INDENT#", "stop_at", "=", "(", "time", ".", "time", "(", ")", "+", "3", ")", "#NEWLINE#", "while", "(", "time", ".", "time", "(", ")", ">", "stop_at", ")", ":", "#NEWLINE#", "#INDENT#", "if", "os", ".", "path", ".", "exists", "(", "TESTFN", ")", ":", "#NEWLINE#", "#INDENT#", "break", "#NEWLINE#", "#UNINDENT#", "time", ".", "sleep", "(", "0.001", ")", "#NEWLINE#", "#UNINDENT#", "else", ":", "#NEWLINE#", "#INDENT#", "warn", "(", "\"couldn't make sure test file was actually created\"", ")", "#NEWLINE#", "#UNINDENT#", "#UNINDENT#", "else", ":", "#NEWLINE#", "#INDENT#", "wait_for_pid", "(", "sproc", ".", "pid", ")", "#NEWLINE#", "#UNINDENT#", "#UNINDENT#", "_subprocesses_started", ".", "add", "(", "sproc", ".", "pid", ")", "#NEWLINE#", "return", "sproc"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [58, 73, 84, 6, 86, 88, 113, 133, 78, 178, 189, 195, 18, 41, 100, 10, 90, 92, 14, 94, 96, 2, 29, 75, 106, 36, 45, 54, 65]}}
{"prediction": {"error_location": 0.5067217946052551, "repair_targets": [], "repair_candidates": [0.09832464158535004, 0.06527315825223923, 0.055786266922950745, 0.14273343980312347, 0.10525161027908325, 0.0024014138616621494, 0.016338352113962173, 0.0005890563479624689, 0.0012944430345669389, 0.017558081075549126, 0.015230529010295868, 0.0004347106732893735, 0.057428523898124695, 0.00042220286559313536, 0.0966261774301529, 1.0073415069200564e-05, 0.0002266906521981582, 1.3791131095786113e-05, 0.0014066343428567052, 1.3416361980489455e-05, 0.003079848363995552, 1.3922222024120856e-05, 9.72932466538623e-05, 0.0004814865533262491, 0.11931425333023071, 0.00020870778826065361, 0.19912903010845184, 0.0002321321953786537, 8.010134479263797e-05], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 14:14:48.451023", "n_pass": [26, 2, 2], "n_token": 171, "loss": [0.6589550971984863, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def get_test_subprocess(", "cmd", "=", "None", ",", "stdout", "=", "DEVNULL", ",", "stderr", "=", "DEVNULL", ",", "stdin", "=", "None", ",", "wait", "=", "False", ")", ":", "#NEWLINE#", "#INDENT#", "\"Return a subprocess.Popen object to use in tests.\\n    By default stdout and stderr are redirected to /dev/null and the\\n    python interpreter is used as test process.\\n    If 'wait' is True attemps to make sure the process is in a\\n    reasonably initialized state.\\n    \"", "#NEWLINE#", "if", "(", "cmd", "is", "None", ")", ":", "#NEWLINE#", "#INDENT#", "pyline", "=", "''", "#NEWLINE#", "if", "wait", ":", "#NEWLINE#", "#INDENT#", "pyline", "+=", "(", "\"open('%s', 'w'); \"", "%", "TESTFN", ")", "#NEWLINE#", "#UNINDENT#", "pyline", "+=", "'import time; time.sleep(3600);'", "#NEWLINE#", "cmd_", "=", "[", "PYTHON", ",", "'-c'", ",", "pyline", "]", "#NEWLINE#", "#UNINDENT#", "else", ":", "#NEWLINE#", "#INDENT#", "cmd_", "=", "cmd", "#NEWLINE#", "#UNINDENT#", "sproc", "=", "subprocess", ".", "Popen", "(", "cmd_", ",", "stdout", "=", "stdout", ",", "stderr", "=", "stderr", ",", "stdin", "=", "stdin", ")", "#NEWLINE#", "if", "wait", ":", "#NEWLINE#", "#INDENT#", "if", "(", "cmd", "is", "None", ")", ":", "#NEWLINE#", "#INDENT#", "stop_at", "=", "(", "time", ".", "time", "(", ")", "+", "3", ")", "#NEWLINE#", "while", "(", "time", ".", "time", "(", ")", ">", "stop_at", ")", ":", "#NEWLINE#", "#INDENT#", "if", "os", ".", "path", ".", "exists", "(", "TESTFN", "#UNINDENT#", "else", ":", "#NEWLINE#", "#INDENT#", "wait_for_pid", "(", "sproc", ".", "pid", ")", "#NEWLINE#", "#UNINDENT#", "#UNINDENT#", "_subprocesses_started", ".", "add", "(", "sproc", ".", "pid", ")", "#NEWLINE#", "return", "sproc"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [58, 73, 84, 6, 86, 88, 113, 133, 78, 153, 164, 170, 18, 41, 100, 10, 90, 92, 14, 94, 96, 2, 29, 75, 106, 36, 45, 54, 65]}}
{"prediction": {"error_location": 0.5173916220664978, "repair_targets": [], "repair_candidates": [0.08322684466838837, 0.05413771793246269, 0.04662300646305084, 0.11715245246887207, 0.08445461839437485, 0.001198686077259481, 0.012539631687104702, 0.0004994294140487909, 0.0010424331994727254, 0.014197073876857758, 0.016158228740096092, 0.000509345845784992, 0.04537177458405495, 0.00029579942929558456, 0.0681983232498169, 7.893379915913101e-06, 0.0002735261805355549, 1.3876650882593822e-05, 0.0014808820560574532, 1.1217866813240107e-05, 0.003328502643853426, 1.4304505384643562e-05, 0.00013176463835407048, 0.0004780754097737372, 0.17835958302021027, 0.0004746842314489186, 0.26958224177360535, 0.00017479567031841725, 6.335234502330422e-05], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 14:14:48.599158", "n_pass": [60, 3, 3], "n_token": 159, "loss": [0.6722230315208435, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def get_test_subprocess(", "cmd", "=", "None", ",", "stdout", "=", "DEVNULL", ",", "stderr", "=", "DEVNULL", ",", "stdin", "=", "None", ",", "wait", "=", "False", ")", ":", "#NEWLINE#", "#INDENT#", "\"Return a subprocess.Popen object to use in tests.\\n    By default stdout and stderr are redirected to /dev/null and the\\n    python interpreter is used as test process.\\n    If 'wait' is True attemps to make sure the process is in a\\n    reasonably initialized state.\\n    \"", "#NEWLINE#", "if", "(", "cmd", "is", "None", ")", ":", "#NEWLINE#", "#INDENT#", "pyline", "=", "''", "#NEWLINE#", "if", "wait", ":", "#NEWLINE#", "#INDENT#", "pyline", "+=", "(", "\"open('%s', 'w'); \"", "%", "TESTFN", ")", "#NEWLINE#", "#UNINDENT#", "pyline", "+=", "'import time; time.sleep(3600);'", "#NEWLINE#", "cmd_", "=", "[", "PYTHON", ",", "'-c'", ",", "pyline", "]", "#NEWLINE#", "#UNINDENT#", "else", ":", "#NEWLINE#", "#INDENT#", "cmd_", "=", "cmd", "#NEWLINE#", "#UNINDENT#", "sproc", "=", "subprocess", ".", "Popen", "(", "cmd_", ",", "stdout", "=", "stdout", ",", "stderr", "=", "stderr", ",", "stdin", "=", "stdin", ")", "#NEWLINE#", "if", "wait", ":", "#NEWLINE#", "#INDENT#", "if", "(", "cmd", "is", "None", ")", ":", "#NEWLINE#", "#INDENT#", "stop_at", "=", "(", "time", ".", "time", "(", ">", "stop_at", ")", ":", "#NEWLINE#", "#INDENT#", "if", "os", ".", "path", ".", "exists", "(", "TESTFN", "#UNINDENT#", "else", ":", "#NEWLINE#", "#INDENT#", "wait_for_pid", "(", "sproc", ".", "pid", ")", "#NEWLINE#", "#UNINDENT#", "#UNINDENT#", "_subprocesses_started", ".", "add", "(", "sproc", ".", "pid", ")", "#NEWLINE#", "return", "sproc"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [58, 73, 84, 6, 86, 88, 113, 121, 78, 141, 152, 158, 18, 41, 100, 10, 90, 92, 14, 94, 96, 2, 29, 75, 106, 36, 45, 54, 65]}}
{"prediction": {"error_location": 0.5105723142623901, "repair_targets": [], "repair_candidates": [0.07363194227218628, 0.045570723712444305, 0.03968740627169609, 0.09874088317155838, 0.07193852961063385, 0.0011503536952659488, 0.010722680017352104, 0.0005303090438246727, 0.0011174051323905587, 0.011332951486110687, 0.012896070256829262, 0.00026605307357385755, 0.05573933571577072, 0.0004298053390812129, 0.1010398343205452, 5.310590040608076e-06, 0.0002202401519753039, 1.5242362678691279e-05, 0.0014078348176553845, 1.4635626939707436e-05, 0.002898940583691001, 1.1082816854468547e-05, 8.159252320183441e-05, 0.0006312215700745583, 0.2688594460487366, 0.00045552250230684876, 0.2003437727689743, 0.00020887305436190218, 5.2064464398426935e-05], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 14:14:48.742434", "n_pass": [101, 4, 4], "n_token": 153, "loss": [0.6469334959983826, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def get_test_subprocess(", "cmd", "=", "None", ",", "stdout", "=", "DEVNULL", ",", "stderr", "=", "DEVNULL", ",", "stdin", "=", "None", ",", "wait", "=", "False", ")", ":", "#NEWLINE#", "#INDENT#", "\"Return a subprocess.Popen object to use in tests.\\n    By default stdout and stderr are redirected to /dev/null and the\\n    python interpreter is used as test process.\\n    If 'wait' is True attemps to make sure the process is in a\\n    reasonably initialized state.\\n    \"", "#NEWLINE#", "if", "(", "cmd", "is", "None", ")", ":", "#NEWLINE#", "#INDENT#", "pyline", "=", "''", "#NEWLINE#", "if", "wait", ":", "#NEWLINE#", "#INDENT#", "pyline", "+=", "(", "\"open('%s', 'w'); \"", "%", "TESTFN", ")", "#NEWLINE#", "#UNINDENT#", "pyline", "+=", "'import time; time.sleep(3600);'", "#NEWLINE#", "cmd_", "=", "[", "PYTHON", ",", "'-c'", ",", "pyline", "]", "#NEWLINE#", "#UNINDENT#", "else", ":", "#NEWLINE#", "#INDENT#", "cmd_", "=", "cmd", "#NEWLINE#", "#UNINDENT#", "sproc", "=", "subprocess", ".", "Popen", "(", "cmd_", ",", "stdout", "=", "stdout", ",", "stderr", "=", "stderr", ",", "stdin", "=", "stdin", ")", "#NEWLINE#", "if", "wait", ":", "#NEWLINE#", "#INDENT#", "if", "(", "cmd", "is", "None", ")", ":", "#NEWLINE#", "#INDENT#", "stop_at", "=", "(", "time", ".", "time", "(", ">", "stop_at", ")", ":", "#NEWLINE#", "#INDENT#", "(", "TESTFN", "#UNINDENT#", "else", ":", "#NEWLINE#", "#INDENT#", "wait_for_pid", "(", "sproc", ".", "pid", ")", "#NEWLINE#", "#UNINDENT#", "#UNINDENT#", "_subprocesses_started", ".", "add", "(", "sproc", ".", "pid", ")", "#NEWLINE#", "return", "sproc"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [58, 73, 84, 6, 86, 88, 113, 121, 78, 135, 146, 152, 18, 41, 100, 10, 90, 92, 14, 94, 96, 2, 29, 75, 106, 36, 45, 54, 65]}}
{"prediction": {"error_location": 0.5236491560935974, "repair_targets": [], "repair_candidates": [0.08830758929252625, 0.054023873060941696, 0.047482024878263474, 0.11918323487043381, 0.08841656893491745, 0.0017364908708259463, 0.012860497459769249, 0.0005238506710156798, 0.0012700767256319523, 0.013542196713387966, 0.0170199666172266, 0.0004178097879048437, 0.049821268767118454, 0.00036787515273317695, 0.10336320847272873, 7.61681621952448e-06, 0.0003207353292964399, 1.4957070561649743e-05, 0.001495076809078455, 1.4894412743160501e-05, 0.002950688824057579, 1.4163798368826974e-05, 0.00015318872465286404, 0.0008242177427746356, 0.2056807577610016, 0.00023834288003854454, 0.1896217167377472, 0.0002695440489333123, 5.7522418501321226e-05], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 14:14:48.881157", "n_pass": [102, 5, 5], "n_token": 147, "loss": [0.5920772552490234, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def get_test_subprocess(", "cmd", "=", "None", ",", "stdout", "=", "DEVNULL", ",", "stderr", "=", "DEVNULL", ",", "stdin", "=", "None", ",", "wait", "=", "False", ")", ":", "#NEWLINE#", "#INDENT#", "\"Return a subprocess.Popen object to use in tests.\\n    By default stdout and stderr are redirected to /dev/null and the\\n    python interpreter is used as test process.\\n    If 'wait' is True attemps to make sure the process is in a\\n    reasonably initialized state.\\n    \"", "#NEWLINE#", "if", "(", "cmd", "is", "None", ")", ":", "#NEWLINE#", "#INDENT#", "pyline", "=", "''", "#NEWLINE#", "if", "wait", ":", "#NEWLINE#", "#INDENT#", "pyline", "+=", "(", "\"open('%s', 'w'); \"", "%", "TESTFN", ")", "#NEWLINE#", "#UNINDENT#", "pyline", "+=", "'import time; time.sleep(3600);'", "#NEWLINE#", "cmd_", "=", "[", "PYTHON", ",", "'-c'", ",", "pyline", "]", "#NEWLINE#", "#UNINDENT#", "else", ":", "#NEWLINE#", "#INDENT#", "cmd_", "=", "cmd", "#NEWLINE#", "#UNINDENT#", "sproc", "=", "subprocess", ".", "Popen", "(", "cmd_", ",", "stdout", "=", "stdout", ",", "stderr", "=", "stderr", ",", "stdin", "=", "stdin", ")", "#NEWLINE#", "if", "wait", ":", "#NEWLINE#", "#INDENT#", "if", "(", "cmd", "is", "None", ")", ":", "#NEWLINE#", "#INDENT#", "stop_at", "=", "(", "time", ".", "time", "(", ">", "stop_at", ")", ":", "#NEWLINE#", "#INDENT#", "#INDENT#", "wait_for_pid", "(", "sproc", ".", "pid", ")", "#NEWLINE#", "#UNINDENT#", "#UNINDENT#", "_subprocesses_started", ".", "add", "(", "sproc", ".", "pid", ")", "#NEWLINE#", "return", "sproc"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [58, 73, 84, 6, 86, 88, 113, 121, 78, 129, 140, 146, 18, 41, 100, 10, 90, 92, 14, 94, 96, 2, 29, 75, 106, 36, 45, 54, 65]}}
{"prediction": {"error_location": 0.5531769394874573, "repair_targets": [], "repair_candidates": [0.08577712625265121, 0.052401039749383926, 0.04637736827135086, 0.11661839485168457, 0.0885007232427597, 0.0017026597633957863, 0.012281331233680248, 0.0004018721519969404, 0.001275444868952036, 0.016754115000367165, 0.020650869235396385, 0.0003280694945715368, 0.04033144935965538, 0.00043863910832442343, 0.12779037654399872, 7.742049092485104e-06, 0.0003360381524544209, 1.3202666195866186e-05, 0.0020570005290210247, 1.2841084753745236e-05, 0.004040220286697149, 9.58394321060041e-06, 0.00014309787366073579, 0.0006063943146727979, 0.24307356774806976, 0.0002581001608632505, 0.13751989603042603, 0.00024119745648931712, 5.1624760089907795e-05], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 14:14:49.015278", "n_pass": [104, 6, 6], "n_token": 140, "loss": [0.6799735426902771, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def get_test_subprocess(", "cmd", "=", "None", ",", "stdout", "=", "DEVNULL", ",", "stderr", "=", "DEVNULL", ",", "stdin", "=", "None", ",", "wait", "=", "False", ")", ":", "#NEWLINE#", "#INDENT#", "\"Return a subprocess.Popen object to use in tests.\\n    By default stdout and stderr are redirected to /dev/null and the\\n    python interpreter is used as test process.\\n    If 'wait' is True attemps to make sure the process is in a\\n    reasonably initialized state.\\n    \"", "#NEWLINE#", "if", "(", "cmd", "is", "None", ")", ":", "#NEWLINE#", "#INDENT#", "pyline", "=", "''", "#NEWLINE#", "if", "wait", ":", "#NEWLINE#", "#INDENT#", "pyline", "+=", "(", "\"open('%s', 'w'); \"", "%", "TESTFN", ")", "#NEWLINE#", "#UNINDENT#", "pyline", "+=", "'import time; time.sleep(3600);'", "#NEWLINE#", "cmd_", "=", "[", "PYTHON", ",", "'-c'", ",", "pyline", "]", "#NEWLINE#", "#UNINDENT#", "else", ":", "#NEWLINE#", "#INDENT#", "cmd_", "=", "cmd", "#NEWLINE#", "#UNINDENT#", "sproc", "=", "subprocess", ".", "Popen", "(", "cmd_", ",", "stdout", "=", "stdout", ",", "stderr", "=", "stderr", ",", "stdin", "=", "stdin", ")", "#NEWLINE#", "if", "wait", ":", "#NEWLINE#", "#INDENT#", "if", "(", "cmd", "is", "None", ")", ":", "#NEWLINE#", "#INDENT#", "stop_at", "=", "(", "time", ".", "time", "(", ">", "stop_at", ")", ":", "#NEWLINE#", "#INDENT#", "#INDENT#", "wait_for_pid", "(", "sproc", ".", "pid", ")", "sproc", ".", "pid", ")", "#NEWLINE#", "return", "sproc"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [58, 73, 84, 6, 86, 88, 113, 121, 78, 129, 133, 139, 18, 41, 100, 10, 90, 92, 14, 94, 96, 2, 29, 75, 106, 36, 45, 54, 65]}}
{"prediction": {"error_location": 0.5066303610801697, "repair_targets": [], "repair_candidates": [0.11692631989717484, 0.07726835459470749, 0.05755233019590378, 0.13371941447257996, 0.0980321541428566, 0.0014327896060422063, 0.014916853047907352, 0.000285190821159631, 0.0013089459389448166, 0.02489374950528145, 0.020137818530201912, 0.00017174030654132366, 0.07978411763906479, 0.00040136658935807645, 0.19740287959575653, 7.759264008200262e-06, 0.00042058731196448207, 2.221467366325669e-05, 0.0014530071057379246, 1.5116794202185702e-05, 0.0029222844168543816, 1.0588334589556325e-05, 0.00011590050416998565, 0.0008800209616310894, 0.1644827127456665, 0.00018776005890686065, 0.004910989198833704, 0.000196467008208856, 0.00014058005763217807], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 14:14:49.147110", "n_pass": [111, 7, 7], "n_token": 134, "loss": [0.755236804485321, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def get_test_subprocess(", "cmd", "=", "None", ",", "stdout", "=", "DEVNULL", ",", "stderr", "=", "DEVNULL", ",", "stdin", "=", "None", ",", "wait", "=", "False", ")", ":", "#NEWLINE#", "#INDENT#", "\"Return a subprocess.Popen object to use in tests.\\n    By default stdout and stderr are redirected to /dev/null and the\\n    python interpreter is used as test process.\\n    If 'wait' is True attemps to make sure the process is in a\\n    reasonably initialized state.\\n    \"", "#NEWLINE#", "if", "(", "cmd", "pyline", "=", "''", "#NEWLINE#", "if", "wait", ":", "#NEWLINE#", "#INDENT#", "pyline", "+=", "(", "\"open('%s', 'w'); \"", "%", "TESTFN", ")", "#NEWLINE#", "#UNINDENT#", "pyline", "+=", "'import time; time.sleep(3600);'", "#NEWLINE#", "cmd_", "=", "[", "PYTHON", ",", "'-c'", ",", "pyline", "]", "#NEWLINE#", "#UNINDENT#", "else", ":", "#NEWLINE#", "#INDENT#", "cmd_", "=", "cmd", "#NEWLINE#", "#UNINDENT#", "sproc", "=", "subprocess", ".", "Popen", "(", "cmd_", ",", "stdout", "=", "stdout", ",", "stderr", "=", "stderr", ",", "stdin", "=", "stdin", ")", "#NEWLINE#", "if", "wait", ":", "#NEWLINE#", "#INDENT#", "if", "(", "cmd", "is", "None", ")", ":", "#NEWLINE#", "#INDENT#", "stop_at", "=", "(", "time", ".", "time", "(", ">", "stop_at", ")", ":", "#NEWLINE#", "#INDENT#", "#INDENT#", "wait_for_pid", "(", "sproc", ".", "pid", ")", "sproc", ".", "pid", ")", "#NEWLINE#", "return", "sproc"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [52, 67, 78, 6, 80, 82, 107, 115, 72, 123, 127, 133, 18, 35, 94, 10, 84, 86, 14, 88, 90, 2, 29, 69, 100, 30, 39, 48, 59]}}
{"prediction": {"error_location": 0.46989932656288147, "repair_targets": [], "repair_candidates": [0.25833621621131897, 0.06028906628489494, 0.03498438000679016, 0.08533957600593567, 0.06285763531923294, 0.009944386780261993, 0.0009229687275364995, 0.00022478772734757513, 0.0016858846647664905, 0.02384331077337265, 0.03145033121109009, 5.421477180789225e-05, 0.0690600574016571, 0.0003043835167773068, 0.2156607210636139, 6.048045634088339e-06, 0.00038880747160874307, 1.3539352949010208e-05, 0.0015101288445293903, 1.530458393972367e-05, 0.0025513519067317247, 8.366864676645491e-06, 8.788033301243559e-05, 0.0006311699980869889, 0.13516409695148468, 0.0001550922024762258, 0.004223555792123079, 0.00016337193665094674, 0.00012333018821664155], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 14:14:49.276641", "n_pass": [114, 8, 8], "n_token": 128, "loss": [0.7365038990974426, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def get_test_subprocess(", "cmd", "=", "None", ",", "stdout", "=", "DEVNULL", ",", "stderr", "=", "DEVNULL", ",", "stdin", "=", "None", ",", "wait", "=", "False", ")", ":", "#NEWLINE#", "#INDENT#", "\"Return a subprocess.Popen object to use in tests.\\n    By default stdout and stderr are redirected to /dev/null and the\\n    python interpreter is used as test process.\\n    If 'wait' is True attemps to make sure the process is in a\\n    reasonably initialized state.\\n    \"", "#NEWLINE#", "if", "(", "cmd", "pyline", "=", "''", "#NEWLINE#", "if", "wait", ":", "#NEWLINE#", "#INDENT#", "pyline", "+=", "(", "pyline", "+=", "'import time; time.sleep(3600);'", "#NEWLINE#", "cmd_", "=", "[", "PYTHON", ",", "'-c'", ",", "pyline", "]", "#NEWLINE#", "#UNINDENT#", "else", ":", "#NEWLINE#", "#INDENT#", "cmd_", "=", "cmd", "#NEWLINE#", "#UNINDENT#", "sproc", "=", "subprocess", ".", "Popen", "(", "cmd_", ",", "stdout", "=", "stdout", ",", "stderr", "=", "stderr", ",", "stdin", "=", "stdin", ")", "#NEWLINE#", "if", "wait", ":", "#NEWLINE#", "#INDENT#", "if", "(", "cmd", "is", "None", ")", ":", "#NEWLINE#", "#INDENT#", "stop_at", "=", "(", "time", ".", "time", "(", ">", "stop_at", ")", ":", "#NEWLINE#", "#INDENT#", "#INDENT#", "wait_for_pid", "(", "sproc", ".", "pid", ")", "sproc", ".", "pid", ")", "#NEWLINE#", "return", "sproc"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [46, 61, 72, 6, 74, 76, 101, 109, 66, 117, 121, 127, 18, 35, 88, 10, 78, 80, 14, 82, 84, 2, 29, 63, 94, 30, 39, 42, 53]}}
{"prediction": {"error_location": 0.4787848889827728, "repair_targets": [], "repair_candidates": [0.3320556581020355, 0.06260747462511063, 0.03431929275393486, 0.08573561161756516, 0.06284181773662567, 0.010075456462800503, 0.0009483288740739226, 0.00022821825405117124, 0.015239848755300045, 0.008752602152526379, 0.0457388237118721, 2.6036910639959387e-05, 0.06379219144582748, 0.00020323108765296638, 0.1169687882065773, 5.8198897932015825e-06, 0.0004523706156760454, 1.2857911315222736e-05, 0.0013665551086887717, 1.3848607522959355e-05, 0.0017276440048590302, 8.10229448688915e-06, 8.947359310695902e-05, 0.0007431276608258486, 0.15101070702075958, 0.00016116940241772681, 0.004564267583191395, 0.0001730434742057696, 0.000137690149131231], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 14:14:49.401653", "n_pass": [117, 9, 9], "n_token": 122, "loss": [0.751272439956665, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def get_test_subprocess(", "cmd", "=", "None", ",", "stdout", "=", "DEVNULL", ",", "stderr", "=", "DEVNULL", ",", "stdin", "=", "None", ",", "wait", "=", "False", ")", ":", "#NEWLINE#", "#INDENT#", "\"Return a subprocess.Popen object to use in tests.\\n    By default stdout and stderr are redirected to /dev/null and the\\n    python interpreter is used as test process.\\n    If 'wait' is True attemps to make sure the process is in a\\n    reasonably initialized state.\\n    \"", "#NEWLINE#", "if", "(", "cmd", "pyline", "=", "''", "#NEWLINE#", "if", "wait", ":", "#NEWLINE#", "#INDENT#", "pyline", "+=", "(", "pyline", "+=", "'import time; time.sleep(3600);'", "#NEWLINE#", "cmd_", "=", "[", "PYTHON", ",", "'-c'", ",", "pyline", "#INDENT#", "cmd_", "=", "cmd", "#NEWLINE#", "#UNINDENT#", "sproc", "=", "subprocess", ".", "Popen", "(", "cmd_", ",", "stdout", "=", "stdout", ",", "stderr", "=", "stderr", ",", "stdin", "=", "stdin", ")", "#NEWLINE#", "if", "wait", ":", "#NEWLINE#", "#INDENT#", "if", "(", "cmd", "is", "None", ")", ":", "#NEWLINE#", "#INDENT#", "stop_at", "=", "(", "time", ".", "time", "(", ">", "stop_at", ")", ":", "#NEWLINE#", "#INDENT#", "#INDENT#", "wait_for_pid", "(", "sproc", ".", "pid", ")", "sproc", ".", "pid", ")", "#NEWLINE#", "return", "sproc"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [46, 55, 66, 6, 68, 70, 95, 103, 60, 111, 115, 121, 18, 35, 82, 10, 72, 74, 14, 76, 78, 2, 29, 57, 88, 30, 39, 42, 53]}}
{"prediction": {"error_location": 0.4717658460140228, "repair_targets": [], "repair_candidates": [0.20983779430389404, 0.04811903461813927, 0.026657020673155785, 0.0636163204908371, 0.04420508071780205, 0.006125777028501034, 0.0007543159881606698, 0.00010355339327361435, 0.013249387964606285, 0.009747853502631187, 0.07347239553928375, 0.00012273030006326735, 0.10530923306941986, 6.693792238365859e-05, 0.28063952922821045, 2.596653075670474e-06, 0.000508836645167321, 1.2500754564825911e-05, 0.0011681705946102738, 1.1689448911056388e-05, 0.001452722237445414, 5.89551882512751e-06, 5.938985486864112e-05, 0.00048101265565492213, 0.11023362725973129, 0.00011259588791290298, 0.0036926164757460356, 0.0001357359578832984, 9.564773790771142e-05], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 14:14:49.524356", "n_pass": [125, 10, 10], "n_token": 116, "loss": [0.8006278872489929, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def get_test_subprocess(", "cmd", "=", "None", ",", "stdout", "=", "DEVNULL", ",", "stderr", "=", "DEVNULL", ",", "stdin", "=", "None", ",", "wait", "=", "False", ")", ":", "#NEWLINE#", "#INDENT#", "\"Return a subprocess.Popen object to use in tests.\\n    By default stdout and stderr are redirected to /dev/null and the\\n    python interpreter is used as test process.\\n    If 'wait' is True attemps to make sure the process is in a\\n    reasonably initialized state.\\n    \"", "#NEWLINE#", "if", "(", "cmd", "pyline", "=", "''", "#NEWLINE#", "if", "wait", ":", "#NEWLINE#", "#INDENT#", "pyline", "+=", "(", "pyline", "+=", "'import time; time.sleep(3600);'", "#NEWLINE#", "cmd_", "=", "[", "PYTHON", ",", "'-c'", ",", "pyline", "#INDENT#", "cmd_", "=", "cmd", "#NEWLINE#", "#UNINDENT#", "sproc", "=", "subprocess", ".", "Popen", "(", "cmd_", ",", "stdout", "=", "stdout", ",", "stderr", "=", "stderr", ",", "stdin", "=", "stdin", ")", "#NEWLINE#", "if", "wait", ":", "#NEWLINE#", "#INDENT#", "if", "(", "cmd", "is", "None", ")", ":", "#NEWLINE#", "#INDENT#", "stop_at", ">", "stop_at", ")", ":", "#NEWLINE#", "#INDENT#", "#INDENT#", "wait_for_pid", "(", "sproc", ".", "pid", ")", "sproc", ".", "pid", ")", "#NEWLINE#", "return", "sproc"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [46, 55, 66, 6, 68, 70, 95, 97, 60, 105, 109, 115, 18, 35, 82, 10, 72, 74, 14, 76, 78, 2, 29, 57, 88, 30, 39, 42, 53]}}
{"prediction": {"error_location": 0.44904693961143494, "repair_targets": [], "repair_candidates": [0.25074079632759094, 0.05935021489858627, 0.03330404683947563, 0.07883971184492111, 0.05634636431932449, 0.005783118307590485, 0.000742016127333045, 0.00011296485899947584, 0.013265875168144703, 0.012535126879811287, 0.09479889273643494, 0.00017969802138395607, 0.11782070994377136, 7.245453889481723e-05, 0.19050799310207367, 3.749295046873158e-06, 0.0006059339502826333, 1.6465950466226786e-05, 0.0011383055243641138, 1.3020124242757447e-05, 0.0019662438426166773, 7.925442332634702e-06, 7.114508480299264e-05, 0.0005879526142962277, 0.06827875226736069, 0.000701169716194272, 0.011873419396579266, 0.0002392531605437398, 9.666849655332044e-05], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 14:14:49.649183", "n_pass": [184, 11, 11], "n_token": 113, "loss": [0.9831108450889587, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def get_test_subprocess(", "cmd", "=", "None", ",", "stdout", "=", "DEVNULL", ",", "stderr", "=", "DEVNULL", ",", "stdin", "=", "None", ",", "wait", "=", "False", ")", ":", "#NEWLINE#", "#INDENT#", "\"Return a subprocess.Popen object to use in tests.\\n    By default stdout and stderr are redirected to /dev/null and the\\n    python interpreter is used as test process.\\n    If 'wait' is True attemps to make sure the process is in a\\n    reasonably initialized state.\\n    \"", "#NEWLINE#", "if", "(", "cmd", "pyline", "=", "''", "#NEWLINE#", "if", "wait", ":", "#NEWLINE#", "#INDENT#", "pyline", "+=", "(", "pyline", "+=", "'import time; time.sleep(3600);'", "#NEWLINE#", "cmd_", "=", "[", "PYTHON", ",", "'-c'", ",", "pyline", "#INDENT#", "cmd_", "=", "cmd", "#NEWLINE#", "#UNINDENT#", "sproc", "=", "subprocess", ".", "Popen", "(", "cmd_", ",", "stdout", "=", "stdout", ",", "stderr", "=", "stderr", ",", "stdin", "=", "stdin", ")", "#NEWLINE#", "if", "wait", ":", "#NEWLINE#", "#INDENT#", "if", "(", "cmd", "is", "None", ")", ":", "#NEWLINE#", "#INDENT#", "stop_at", ">", "stop_at", ")", "#INDENT#", "wait_for_pid", "(", "sproc", ".", "pid", ")", "sproc", ".", "pid", ")", "#NEWLINE#", "return", "sproc"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [46, 55, 66, 6, 68, 70, 95, 97, 60, 102, 106, 112, 18, 35, 82, 10, 72, 74, 14, 76, 78, 2, 29, 57, 88, 30, 39, 42, 53]}}
{"prediction": {"error_location": 0.37414541840553284, "repair_targets": [], "repair_candidates": [0.14333917200565338, 0.03328119218349457, 0.01805832050740719, 0.04536927118897438, 0.03604698181152344, 0.0032528049778193235, 0.000381583085982129, 6.561984628206119e-05, 0.010804079473018646, 0.00781210558488965, 0.05492999032139778, 9.825477172853425e-05, 0.07285622507333755, 3.878933421219699e-05, 0.1666146069765091, 1.9530830286385026e-06, 0.00038771319668740034, 1.1579256351978984e-05, 0.0008288903045468032, 8.015057574084494e-06, 0.0017442587995901704, 5.639200935547706e-06, 4.9271129682892933e-05, 0.0006374293589033186, 0.3873034119606018, 0.0077047026716172695, 0.008271957747638226, 8.218941366067156e-05, 1.3905409105063882e-05], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 14:14:49.767145", "n_pass": [185, 12, 12], "n_token": 110, "loss": [0.7771527171134949, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def get_test_subprocess(", "cmd", "=", "None", ",", "stdout", "=", "DEVNULL", ",", "stderr", "=", "DEVNULL", ",", "stdin", "=", "None", ",", "wait", "=", "False", ")", ":", "#NEWLINE#", "#INDENT#", "\"Return a subprocess.Popen object to use in tests.\\n    By default stdout and stderr are redirected to /dev/null and the\\n    python interpreter is used as test process.\\n    If 'wait' is True attemps to make sure the process is in a\\n    reasonably initialized state.\\n    \"", "#NEWLINE#", "if", "(", "cmd", "pyline", "=", "''", "#NEWLINE#", "if", "wait", ":", "#NEWLINE#", "#INDENT#", "pyline", "+=", "(", "pyline", "+=", "'import time; time.sleep(3600);'", "#NEWLINE#", "cmd_", "=", "[", "PYTHON", ",", "'-c'", ",", "pyline", "#INDENT#", "cmd_", "=", "cmd", "#NEWLINE#", "#UNINDENT#", "sproc", "=", "subprocess", ".", "Popen", "(", "cmd_", ",", "stdout", "=", "stdout", ",", "stderr", "=", "stderr", ",", "stdin", "=", "stdin", ")", "#NEWLINE#", "if", "wait", ":", "#NEWLINE#", "#INDENT#", "if", "(", "cmd", "is", "None", ")", ":", "#NEWLINE#", "#INDENT#", "stop_at", ">", "stop_at", ")", "sproc", ".", "pid", ")", "sproc", ".", "pid", ")", "#NEWLINE#", "return", "sproc"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [46, 55, 66, 6, 68, 70, 95, 97, 60, 99, 103, 109, 18, 35, 82, 10, 72, 74, 14, 76, 78, 2, 29, 57, 88, 30, 39, 42, 53]}}
{"prediction": {"error_location": 0.45971307158470154, "repair_targets": [], "repair_candidates": [0.233634352684021, 0.06757243722677231, 0.04072275385260582, 0.10186178237199783, 0.0648505687713623, 0.006084249820560217, 0.0008167251944541931, 0.00015864119632169604, 0.02202727273106575, 0.016822803765535355, 0.0932653471827507, 0.0001826837396947667, 0.11042210459709167, 0.00010881466732826084, 0.22626334428787231, 3.7088993849465623e-06, 0.00060098129324615, 2.0724906789837405e-05, 0.0017911307513713837, 1.4775026102142874e-05, 0.0024259905330836773, 1.2472874004743062e-05, 0.00010737743286881596, 0.00113778468221426, 0.006935840472579002, 0.0003111086552962661, 0.0015291896415874362, 0.0002205972996307537, 9.442656300961971e-05], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 14:14:49.885138", "n_pass": [190, 13, 13], "n_token": 107, "loss": [0.9739795923233032, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def get_test_subprocess(", "cmd", "stdout", "=", "DEVNULL", ",", "stderr", "=", "DEVNULL", ",", "stdin", "=", "None", ",", "wait", "=", "False", ")", ":", "#NEWLINE#", "#INDENT#", "\"Return a subprocess.Popen object to use in tests.\\n    By default stdout and stderr are redirected to /dev/null and the\\n    python interpreter is used as test process.\\n    If 'wait' is True attemps to make sure the process is in a\\n    reasonably initialized state.\\n    \"", "#NEWLINE#", "if", "(", "cmd", "pyline", "=", "''", "#NEWLINE#", "if", "wait", ":", "#NEWLINE#", "#INDENT#", "pyline", "+=", "(", "pyline", "+=", "'import time; time.sleep(3600);'", "#NEWLINE#", "cmd_", "=", "[", "PYTHON", ",", "'-c'", ",", "pyline", "#INDENT#", "cmd_", "=", "cmd", "#NEWLINE#", "#UNINDENT#", "sproc", "=", "subprocess", ".", "Popen", "(", "cmd_", ",", "stdout", "=", "stdout", ",", "stderr", "=", "stderr", ",", "stdin", "=", "stdin", ")", "#NEWLINE#", "if", "wait", ":", "#NEWLINE#", "#INDENT#", "if", "(", "cmd", "is", "None", ")", ":", "#NEWLINE#", "#INDENT#", "stop_at", ">", "stop_at", ")", "sproc", ".", "pid", ")", "sproc", ".", "pid", ")", "#NEWLINE#", "return", "sproc"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [43, 52, 63, 3, 65, 67, 92, 94, 57, 96, 100, 106, 15, 32, 79, 7, 69, 71, 11, 73, 75, 2, 26, 54, 85, 27, 36, 39, 50]}}
{"prediction": {"error_location": 0.37757745385169983, "repair_targets": [], "repair_candidates": [0.13176746666431427, 0.13379940390586853, 0.05576726421713829, 0.1415589451789856, 0.06433910131454468, 0.005021768156439066, 0.0008206589263863862, 0.00022218406957108527, 0.024594588205218315, 0.03845971077680588, 0.0709306076169014, 0.0004239472036715597, 0.09158612787723541, 9.595486335456371e-05, 0.22703875601291656, 5.08713355884538e-06, 0.0005417291540652514, 2.429795677016955e-05, 0.0009577589808031917, 2.11463775485754e-05, 0.0017830217257142067, 1.5273508324753493e-05, 0.0001087952041416429, 0.0011713184649124742, 0.006390709895640612, 0.0005795378820039332, 0.0015541426837444305, 0.00030829652678221464, 0.00011244308552704751], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 14:14:50.002840", "n_pass": [194, 14, 14], "n_token": 104, "loss": [0.7895764708518982, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def get_test_subprocess(", "cmd", "stdout", "=", "DEVNULL", ",", "stderr", "=", "DEVNULL", ",", "stdin", "wait", "=", "False", ")", ":", "#NEWLINE#", "#INDENT#", "\"Return a subprocess.Popen object to use in tests.\\n    By default stdout and stderr are redirected to /dev/null and the\\n    python interpreter is used as test process.\\n    If 'wait' is True attemps to make sure the process is in a\\n    reasonably initialized state.\\n    \"", "#NEWLINE#", "if", "(", "cmd", "pyline", "=", "''", "#NEWLINE#", "if", "wait", ":", "#NEWLINE#", "#INDENT#", "pyline", "+=", "(", "pyline", "+=", "'import time; time.sleep(3600);'", "#NEWLINE#", "cmd_", "=", "[", "PYTHON", ",", "'-c'", ",", "pyline", "#INDENT#", "cmd_", "=", "cmd", "#NEWLINE#", "#UNINDENT#", "sproc", "=", "subprocess", ".", "Popen", "(", "cmd_", ",", "stdout", "=", "stdout", ",", "stderr", "=", "stderr", ",", "stdin", "=", "stdin", ")", "#NEWLINE#", "if", "wait", ":", "#NEWLINE#", "#INDENT#", "if", "(", "cmd", "is", "None", ")", ":", "#NEWLINE#", "#INDENT#", "stop_at", ">", "stop_at", ")", "sproc", ".", "pid", ")", "sproc", ".", "pid", ")", "#NEWLINE#", "return", "sproc"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [40, 49, 60, 3, 62, 64, 89, 91, 54, 93, 97, 103, 12, 29, 76, 7, 66, 68, 11, 70, 72, 2, 23, 51, 82, 24, 33, 36, 47]}}
{"prediction": {"error_location": 0.45403701066970825, "repair_targets": [], "repair_candidates": [0.10296403616666794, 0.09375230222940445, 0.050829995423555374, 0.22545917332172394, 0.05219310522079468, 0.004801273345947266, 0.0009369227336719632, 0.0002216281573055312, 0.02227678894996643, 0.050258222967386246, 0.08118342608213425, 0.0006232638261280954, 0.0925360769033432, 0.00010045154340332374, 0.19614073634147644, 5.337350557965692e-06, 0.0007782343309372663, 2.5394760086783208e-05, 0.002456642920151353, 2.1655947421095334e-05, 0.0047155688516795635, 1.5693658497184515e-05, 0.000161551361088641, 0.0019436944276094437, 0.011996434070169926, 0.0006828265031799674, 0.002335103927180171, 0.0004292077792342752, 0.0001552491303300485], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 14:14:50.117181", "n_pass": [196, 15, 15], "n_token": 101, "loss": [0.7710810899734497, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def get_test_subprocess(", "cmd", "stdout", "=", "DEVNULL", ",", "stderr", "=", "DEVNULL", ",", "stdin", "wait", "=", "False", "#INDENT#", "\"Return a subprocess.Popen object to use in tests.\\n    By default stdout and stderr are redirected to /dev/null and the\\n    python interpreter is used as test process.\\n    If 'wait' is True attemps to make sure the process is in a\\n    reasonably initialized state.\\n    \"", "#NEWLINE#", "if", "(", "cmd", "pyline", "=", "''", "#NEWLINE#", "if", "wait", ":", "#NEWLINE#", "#INDENT#", "pyline", "+=", "(", "pyline", "+=", "'import time; time.sleep(3600);'", "#NEWLINE#", "cmd_", "=", "[", "PYTHON", ",", "'-c'", ",", "pyline", "#INDENT#", "cmd_", "=", "cmd", "#NEWLINE#", "#UNINDENT#", "sproc", "=", "subprocess", ".", "Popen", "(", "cmd_", ",", "stdout", "=", "stdout", ",", "stderr", "=", "stderr", ",", "stdin", "=", "stdin", ")", "#NEWLINE#", "if", "wait", ":", "#NEWLINE#", "#INDENT#", "if", "(", "cmd", "is", "None", ")", ":", "#NEWLINE#", "#INDENT#", "stop_at", ">", "stop_at", ")", "sproc", ".", "pid", ")", "sproc", ".", "pid", ")", "#NEWLINE#", "return", "sproc"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [37, 46, 57, 3, 59, 61, 86, 88, 51, 90, 94, 100, 12, 26, 73, 7, 63, 65, 11, 67, 69, 2, 20, 48, 79, 21, 30, 33, 44]}}
{"prediction": {"error_location": 0.4625127613544464, "repair_targets": [], "repair_candidates": [0.0918869823217392, 0.0937289446592331, 0.05565333738923073, 0.2548093795776367, 0.07459969818592072, 0.015645623207092285, 0.0017240723827853799, 0.00017764326184988022, 0.021266154944896698, 0.03390592709183693, 0.060882568359375, 0.00043839006684720516, 0.07499384880065918, 0.0001087288255803287, 0.19463256001472473, 4.115353021916235e-06, 0.0004984991974197328, 2.7838372261612676e-05, 0.002086071763187647, 2.4478336854372174e-05, 0.004493884276598692, 1.2675079233304132e-05, 0.0001933948660735041, 0.0015593292191624641, 0.013377011753618717, 0.0006713556358590722, 0.0021030025091022253, 0.0003647850826382637, 0.0001296762638958171], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 14:14:50.225111", "n_pass": [197, 16, 16], "n_token": 98, "loss": [0.8488297462463379, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def get_test_subprocess(", "cmd", "stdout", "=", "DEVNULL", ",", "stderr", "=", "DEVNULL", ",", "stdin", "wait", "=", "False", "if", "(", "cmd", "pyline", "=", "''", "#NEWLINE#", "if", "wait", ":", "#NEWLINE#", "#INDENT#", "pyline", "+=", "(", "pyline", "+=", "'import time; time.sleep(3600);'", "#NEWLINE#", "cmd_", "=", "[", "PYTHON", ",", "'-c'", ",", "pyline", "#INDENT#", "cmd_", "=", "cmd", "#NEWLINE#", "#UNINDENT#", "sproc", "=", "subprocess", ".", "Popen", "(", "cmd_", ",", "stdout", "=", "stdout", ",", "stderr", "=", "stderr", ",", "stdin", "=", "stdin", ")", "#NEWLINE#", "if", "wait", ":", "#NEWLINE#", "#INDENT#", "if", "(", "cmd", "is", "None", ")", ":", "#NEWLINE#", "#INDENT#", "stop_at", ">", "stop_at", ")", "sproc", ".", "pid", ")", "sproc", ".", "pid", ")", "#NEWLINE#", "return", "sproc"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [34, 43, 54, 3, 56, 58, 83, 85, 48, 87, 91, 97, 12, 23, 70, 7, 60, 62, 11, 64, 66, 2, 17, 45, 76, 18, 27, 30, 41]}}
{"prediction": {"error_location": 0.42791539430618286, "repair_targets": [], "repair_candidates": [0.1135033443570137, 0.0929185301065445, 0.03310571238398552, 0.1496761292219162, 0.02683236636221409, 0.021817972883582115, 0.005784109700471163, 0.0004514586762525141, 0.025941219180822372, 0.047061119228601456, 0.09459684789180756, 0.0005667039076797664, 0.12239053845405579, 0.00014511124754790217, 0.24471642076969147, 5.503207830770407e-06, 0.0007697685505263507, 2.4372398911509663e-05, 0.001856402144767344, 2.7768108338932507e-05, 0.002304918598383665, 1.7151443898910657e-05, 0.000204600059078075, 0.001634927000850439, 0.009907509200274944, 0.0009861225262284279, 0.002139697317034006, 0.00044079418876208365, 0.00017285437206737697], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 14:14:50.331919", "n_pass": [201, 17, 17], "n_token": 95, "loss": [0.7530256509780884, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def get_test_subprocess(", "cmd", "stdout", "=", "DEVNULL", ",", "stderr", "=", "DEVNULL", ",", "stdin", "wait", "=", "False", "if", "(", "cmd", "pyline", "=", "''", "#NEWLINE#", "if", "wait", "pyline", "+=", "(", "pyline", "+=", "'import time; time.sleep(3600);'", "#NEWLINE#", "cmd_", "=", "[", "PYTHON", ",", "'-c'", ",", "pyline", "#INDENT#", "cmd_", "=", "cmd", "#NEWLINE#", "#UNINDENT#", "sproc", "=", "subprocess", ".", "Popen", "(", "cmd_", ",", "stdout", "=", "stdout", ",", "stderr", "=", "stderr", ",", "stdin", "=", "stdin", ")", "#NEWLINE#", "if", "wait", ":", "#NEWLINE#", "#INDENT#", "if", "(", "cmd", "is", "None", ")", ":", "#NEWLINE#", "#INDENT#", "stop_at", ">", "stop_at", ")", "sproc", ".", "pid", ")", "sproc", ".", "pid", ")", "#NEWLINE#", "return", "sproc"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [31, 40, 51, 3, 53, 55, 80, 82, 45, 84, 88, 94, 12, 23, 67, 7, 57, 59, 11, 61, 63, 2, 17, 42, 73, 18, 24, 27, 38]}}
{"prediction": {"error_location": 0.47093939781188965, "repair_targets": [], "repair_candidates": [0.09725383669137955, 0.07945357263088226, 0.03852590173482895, 0.20030194520950317, 0.04100693017244339, 0.02883410081267357, 0.008182859048247337, 0.01980016753077507, 0.005899349227547646, 0.05288268253207207, 0.09327088296413422, 0.0008313055150210857, 0.1269170045852661, 0.00017945474246516824, 0.18242277204990387, 6.321542969089933e-06, 0.0006332501070573926, 2.3500646420870908e-05, 0.0022197128273546696, 2.1596872102236375e-05, 0.004187444224953651, 1.53464079630794e-05, 0.00021642389765474945, 0.002029559575021267, 0.01109886635094881, 0.0008853083127178252, 0.002238878048956394, 0.0004645211447495967, 0.00019652697665151209], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 14:14:50.438801", "n_pass": [205, 18, 18], "n_token": 92, "loss": [0.6920272707939148, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def get_test_subprocess(", "cmd", "stdout", "=", "DEVNULL", ",", "stderr", "=", "DEVNULL", ",", "stdin", "wait", "=", "False", "if", "(", "cmd", "pyline", "=", "''", "#NEWLINE#", "if", "wait", "pyline", "+=", "(", "pyline", "+=", "'import time; time.sleep(3600);'", "#NEWLINE#", "cmd_", "=", "'-c'", ",", "pyline", "#INDENT#", "cmd_", "=", "cmd", "#NEWLINE#", "#UNINDENT#", "sproc", "=", "subprocess", ".", "Popen", "(", "cmd_", ",", "stdout", "=", "stdout", ",", "stderr", "=", "stderr", ",", "stdin", "=", "stdin", ")", "#NEWLINE#", "if", "wait", ":", "#NEWLINE#", "#INDENT#", "if", "(", "cmd", "is", "None", ")", ":", "#NEWLINE#", "#INDENT#", "stop_at", ">", "stop_at", ")", "sproc", ".", "pid", ")", "sproc", ".", "pid", ")", "#NEWLINE#", "return", "sproc"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [31, 37, 48, 3, 50, 52, 77, 79, 42, 81, 85, 91, 12, 23, 64, 7, 54, 56, 11, 58, 60, 2, 17, 39, 70, 18, 24, 27, 35]}}
{"prediction": {"error_location": 0.5005602836608887, "repair_targets": [], "repair_candidates": [0.09339769929647446, 0.07761988788843155, 0.04248620569705963, 0.2184070199728012, 0.04660072922706604, 0.03183787688612938, 0.009558649733662605, 0.026517560705542564, 0.007272274233400822, 0.05202558636665344, 0.10720985382795334, 0.0018039330607280135, 0.08032187819480896, 6.320852844510227e-05, 0.1828007698059082, 6.459596079366747e-06, 0.0007842988707125187, 3.221338920411654e-05, 0.0016656738007441163, 3.0073724701651372e-05, 0.0035284198820590973, 1.661105670791585e-05, 0.0002335871395189315, 0.0019675814546644688, 0.010370728559792042, 0.0007215649820864201, 0.0020920594688504934, 0.0004380161699373275, 0.00018953101243823767], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 14:14:50.542390", "n_pass": [210, 19, 19], "n_token": 89, "loss": [0.6260377764701843, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def get_test_subprocess(", "cmd", "stdout", "=", "DEVNULL", ",", "stderr", "=", "DEVNULL", ",", "stdin", "wait", "=", "False", "if", "(", "cmd", "pyline", "=", "''", "#NEWLINE#", "if", "wait", "pyline", "+=", "(", "pyline", "+=", "'import time; time.sleep(3600);'", "#NEWLINE#", "cmd_", "=", "'-c'", ",", "pyline", "#INDENT#", "cmd_", "=", "cmd", "#NEWLINE#", "#UNINDENT#", "sproc", "=", "subprocess", "cmd_", ",", "stdout", "=", "stdout", ",", "stderr", "=", "stderr", ",", "stdin", "=", "stdin", ")", "#NEWLINE#", "if", "wait", ":", "#NEWLINE#", "#INDENT#", "if", "(", "cmd", "is", "None", ")", ":", "#NEWLINE#", "#INDENT#", "stop_at", ">", "stop_at", ")", "sproc", ".", "pid", ")", "sproc", ".", "pid", ")", "#NEWLINE#", "return", "sproc"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [31, 37, 45, 3, 47, 49, 74, 76, 42, 78, 82, 88, 12, 23, 61, 7, 51, 53, 11, 55, 57, 2, 17, 39, 67, 18, 24, 27, 35]}}
{"prediction": {"error_location": 0.5347062349319458, "repair_targets": [], "repair_candidates": [0.09330247342586517, 0.07335805892944336, 0.03209584951400757, 0.1561460942029953, 0.03455265611410141, 0.02601481042802334, 0.006307245697826147, 0.01969359815120697, 0.0043137152679264545, 0.033448103815317154, 0.1005375012755394, 0.00231114961206913, 0.07376553118228912, 7.098801870597526e-05, 0.32891321182250977, 6.8849199124088045e-06, 0.0015274833422154188, 5.549086836253991e-06, 0.0006870467332191765, 9.349329957331065e-06, 0.003043267410248518, 1.5143741620704532e-05, 0.00020323343051131815, 0.001396893640048802, 0.005926852580159903, 0.00042228554957546294, 0.001522205420769751, 0.0002828494762070477, 0.00011992648069281131], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 14:14:50.644651", "n_pass": [217, 20, 20], "n_token": 86, "loss": [0.5429493188858032, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def get_test_subprocess(", "cmd", "stdout", "=", "DEVNULL", ",", "stderr", "=", "DEVNULL", ",", "stdin", "wait", "=", "False", "if", "(", "cmd", "pyline", "=", "''", "#NEWLINE#", "if", "wait", "pyline", "+=", "(", "pyline", "+=", "'import time; time.sleep(3600);'", "#NEWLINE#", "cmd_", "=", "'-c'", ",", "pyline", "#INDENT#", "cmd_", "=", "cmd", "#NEWLINE#", "#UNINDENT#", "sproc", "=", "subprocess", "cmd_", ",", "stdout", "=", "stdout", ",", "stderr", "=", "stderr", ",", "stdin", "=", "stdin", ")", "#NEWLINE#", "if", "wait", ":", "(", "cmd", "is", "None", ")", ":", "#NEWLINE#", "#INDENT#", "stop_at", ">", "stop_at", ")", "sproc", ".", "pid", ")", "sproc", ".", "pid", ")", "#NEWLINE#", "return", "sproc"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [31, 37, 45, 3, 47, 49, 71, 73, 42, 75, 79, 85, 12, 23, 61, 7, 51, 53, 11, 55, 57, 2, 17, 39, 64, 18, 24, 27, 35]}}
{"prediction": {"error_location": 0.5810320973396301, "repair_targets": [], "repair_candidates": [0.08568242937326431, 0.07010495662689209, 0.03436964377760887, 0.16018830239772797, 0.03560272976756096, 0.02528807893395424, 0.0063491142354905605, 0.02007981762290001, 0.004403242841362953, 0.030819479376077652, 0.10586722195148468, 0.00362234259955585, 0.07696695625782013, 7.592620386276394e-05, 0.3223235011100769, 5.2344885261845775e-06, 0.001651729573495686, 6.501094958366593e-06, 0.001624929835088551, 9.808153663470875e-06, 0.00343542592599988, 2.098371260217391e-05, 0.0005717399762943387, 0.00033323673414997756, 0.00864570401608944, 0.0002906506124418229, 0.0013449043035507202, 0.00022144833928905427, 9.401161514688283e-05], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 14:14:50.745346", "n_pass": [219, 21, 21], "n_token": 83, "loss": [0.5072857141494751, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def get_test_subprocess(", "cmd", "stdout", "=", "DEVNULL", ",", "stderr", "=", "DEVNULL", ",", "stdin", "wait", "=", "False", "if", "(", "cmd", "pyline", "=", "''", "#NEWLINE#", "if", "wait", "pyline", "+=", "(", "pyline", "+=", "'import time; time.sleep(3600);'", "#NEWLINE#", "cmd_", "=", "'-c'", ",", "pyline", "#INDENT#", "cmd_", "=", "cmd", "#NEWLINE#", "#UNINDENT#", "sproc", "=", "subprocess", "cmd_", ",", "stdout", "=", "stdout", ",", "stderr", "=", "stderr", ",", "stdin", "=", "stdin", ")", "#NEWLINE#", "if", "wait", ":", "(", "cmd", "is", "#NEWLINE#", "#INDENT#", "stop_at", ">", "stop_at", ")", "sproc", ".", "pid", ")", "sproc", ".", "pid", ")", "#NEWLINE#", "return", "sproc"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [31, 37, 45, 3, 47, 49, 68, 70, 42, 72, 76, 82, 12, 23, 61, 7, 51, 53, 11, 55, 57, 2, 17, 39, 64, 18, 24, 27, 35]}}
{"prediction": {"error_location": 0.6021277904510498, "repair_targets": [], "repair_candidates": [0.08707386255264282, 0.07272763550281525, 0.03822554647922516, 0.18910513818264008, 0.0421890951693058, 0.027053702622652054, 0.006668278947472572, 0.021861547604203224, 0.0052456604316830635, 0.02821839414536953, 0.11430540680885315, 0.0037323147989809513, 0.08607495576143265, 9.84680955298245e-05, 0.2537752389907837, 3.962699338444509e-06, 0.0028779669664800167, 9.398131624038797e-06, 0.0015873784432187676, 1.4364331946126185e-05, 0.0040617515332996845, 2.8540987841552123e-05, 0.0003278145450167358, 0.000300676969345659, 0.011235959827899933, 0.0006133692804723978, 0.0021600329782813787, 0.0003171833523083478, 0.00010633484635036439], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 14:14:50.848771", "n_pass": [302, 22, 22], "n_token": 81, "loss": [0.7838466763496399, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def get_test_subprocess(", "cmd", "stdout", "=", "DEVNULL", ",", "stderr", "=", "DEVNULL", ",", "stdin", "wait", "=", "False", "if", "(", "cmd", "pyline", "=", "''", "#NEWLINE#", "if", "wait", "pyline", "+=", "(", "pyline", "+=", "'import time; time.sleep(3600);'", "#NEWLINE#", "cmd_", "=", "'-c'", ",", "pyline", "#INDENT#", "cmd_", "=", "cmd", "#NEWLINE#", "#UNINDENT#", "sproc", "=", "subprocess", "cmd_", ",", "stdout", "=", "stdout", ",", "stderr", "=", "stderr", ",", "stdin", "=", "stdin", ")", "#NEWLINE#", "if", "wait", ":", "(", "cmd", "#INDENT#", "stop_at", ">", "stop_at", ")", "sproc", ".", "pid", ")", "sproc", ".", "pid", ")", "#NEWLINE#", "return", "sproc"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [31, 37, 45, 3, 47, 49, 66, 68, 42, 70, 74, 80, 12, 23, 61, 7, 51, 53, 11, 55, 57, 2, 17, 39, 64, 18, 24, 27, 35]}}
{"prediction": {"error_location": 0.45664599537849426, "repair_targets": [], "repair_candidates": [0.10633927583694458, 0.08010262995958328, 0.028919247910380363, 0.17763596773147583, 0.04051224887371063, 0.02302064374089241, 0.004914787132292986, 0.018026970326900482, 0.003699285676702857, 0.02919352985918522, 0.15568220615386963, 0.002873512916266918, 0.12137532234191895, 0.00010232233762508258, 0.1940465122461319, 6.769868832634529e-06, 0.0045700171031057835, 5.398784651333699e-06, 0.0015671876026317477, 6.722106718370924e-06, 0.002805134980008006, 1.139455252996413e-05, 0.00026388870901428163, 0.0016027214005589485, 0.0001551642781123519, 0.00012765407154802233, 0.002075407188385725, 0.00024666913668625057, 0.00011141745198983699], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 14:14:50.948196", "n_pass": [306, 23, 23], "n_token": 79, "loss": [0.8522380590438843, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def get_test_subprocess(", "cmd", "stdout", "=", "DEVNULL", ",", "stderr", "=", "DEVNULL", ",", "stdin", "wait", "=", "False", "if", "(", "cmd", "pyline", "=", "''", "#NEWLINE#", "if", "wait", "pyline", "+=", "(", "pyline", "+=", "'import time; time.sleep(3600);'", "#NEWLINE#", "cmd_", "=", "'-c'", ",", "pyline", "#INDENT#", "cmd_", "=", "cmd", "#NEWLINE#", "#UNINDENT#", "sproc", "=", "subprocess", "cmd_", ",", "stdout", "=", "stdout", ",", "stderr", "=", "stderr", ",", "stdin", "=", "stdin", ")", "#NEWLINE#", "if", "wait", ":", "(", "cmd", "#INDENT#", "stop_at", ">", "stop_at", ")", "sproc", ")", "sproc", ".", "pid", ")", "#NEWLINE#", "return", "sproc"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [31, 37, 45, 3, 47, 49, 66, 68, 42, 70, 72, 78, 12, 23, 61, 7, 51, 53, 11, 55, 57, 2, 17, 39, 64, 18, 24, 27, 35]}}
{"prediction": {"error_location": 0.4264594316482544, "repair_targets": [], "repair_candidates": [0.09428393840789795, 0.07241232693195343, 0.033765267580747604, 0.19780217111110687, 0.047053445130586624, 0.02324228733778, 0.0048191724345088005, 0.018745167180895805, 0.004070550203323364, 0.028371071442961693, 0.14244933426380157, 0.004433791618794203, 0.12560608983039856, 7.880945486249402e-05, 0.19301345944404602, 5.813087682327023e-06, 0.0023305111099034548, 6.508636033686344e-06, 0.0009334276546724141, 8.160925972333644e-06, 0.003311736509203911, 1.190887087432202e-05, 0.00019289151532575488, 0.0010510364081710577, 7.938304770505056e-05, 8.544314187020063e-05, 0.0009985987562686205, 0.00038372218841686845, 0.0004539935616776347], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 14:14:51.045242", "n_pass": [308, 24, 24], "n_token": 77, "loss": [0.893688440322876, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def get_test_subprocess(", "cmd", "stdout", "=", "DEVNULL", ",", "stderr", "=", "DEVNULL", ",", "stdin", "wait", "=", "False", "if", "(", "cmd", "pyline", "=", "''", "#NEWLINE#", "if", "wait", "pyline", "+=", "(", "pyline", "+=", "'import time; time.sleep(3600);'", "#NEWLINE#", "cmd_", "=", "'-c'", ",", "pyline", "#INDENT#", "cmd_", "=", "cmd", "#NEWLINE#", "#UNINDENT#", "sproc", "=", "subprocess", "cmd_", ",", "stdout", "=", "stdout", ",", "stderr", "=", "stderr", ",", "stdin", "=", "stdin", ")", "#NEWLINE#", "if", "wait", ":", "(", "cmd", "#INDENT#", "stop_at", ">", "stop_at", ")", "sproc", ")", "sproc", ")", "#NEWLINE#", "return", "sproc"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [31, 37, 45, 3, 47, 49, 66, 68, 42, 70, 72, 76, 12, 23, 61, 7, 51, 53, 11, 55, 57, 2, 17, 39, 64, 18, 24, 27, 35]}}
{"prediction": {"error_location": 0.4091437757015228, "repair_targets": [], "repair_candidates": [0.08714842796325684, 0.07405081391334534, 0.0335177481174469, 0.22424381971359253, 0.05524655058979988, 0.022840578109025955, 0.0052827647887170315, 0.024697132408618927, 0.005090087186545134, 0.03423352167010307, 0.13814762234687805, 0.004256858956068754, 0.08929434418678284, 6.11601717537269e-05, 0.18938571214675903, 4.9091604523709975e-06, 0.004455420654267073, 6.066202331567183e-06, 0.001589423161931336, 8.604890354035888e-06, 0.003889668732881546, 1.5778785382281058e-05, 0.00017543818103149533, 0.0007981782546266913, 8.311882265843451e-05, 7.928557897685096e-05, 0.0008867678116075695, 0.00035693979589268565, 0.00015323814295697957], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 14:14:51.141309", "n_pass": [309, 25, 25], "n_token": 75, "loss": [0.8987306356430054, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def get_test_subprocess(", "cmd", "stdout", "=", "DEVNULL", ",", "stderr", "=", "DEVNULL", ",", "stdin", "wait", "=", "False", "if", "(", "cmd", "pyline", "=", "''", "#NEWLINE#", "if", "wait", "pyline", "+=", "(", "pyline", "+=", "'import time; time.sleep(3600);'", "#NEWLINE#", "cmd_", "=", "'-c'", ",", "pyline", "#INDENT#", "cmd_", "=", "cmd", "#NEWLINE#", "#UNINDENT#", "sproc", "=", "subprocess", "cmd_", ",", "stdout", "=", "stdout", ",", "stderr", "=", "stderr", ",", "stdin", "=", "stdin", ")", "#NEWLINE#", "if", "wait", ":", "(", "cmd", "#INDENT#", "stop_at", ">", "stop_at", ")", "sproc", ")", "sproc", "return", "sproc"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [31, 37, 45, 3, 47, 49, 66, 68, 42, 70, 72, 74, 12, 23, 61, 7, 51, 53, 11, 55, 57, 2, 17, 39, 64, 18, 24, 27, 35]}}
{"prediction": {"error_location": 0.4070860743522644, "repair_targets": [], "repair_candidates": [0.08130152523517609, 0.07681403309106827, 0.03396857902407646, 0.21310226619243622, 0.05748140811920166, 0.025386089459061623, 0.00499676913022995, 0.0207796823233366, 0.005095936357975006, 0.03032197430729866, 0.14628095924854279, 0.003444324480369687, 0.0769289955496788, 8.745960803935304e-05, 0.2124013602733612, 4.760925094160484e-06, 0.002347887959331274, 5.645214969263179e-06, 0.0016124029643833637, 7.903129699116107e-06, 0.004387757740914822, 1.2487008461903315e-05, 0.00020095166109967977, 0.0011533494107425213, 0.0001505444524809718, 0.0001076195330824703, 0.0009995081927627325, 0.00060518819373101, 1.261725901713362e-05], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 14:14:51.236851", "n_pass": [312, 26, 26], "n_token": 74, "loss": [0.786953330039978, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "cmd", "stdout", "=", "DEVNULL", ",", "stderr", "=", "DEVNULL", ",", "stdin", "wait", "=", "False", "if", "(", "cmd", "pyline", "=", "''", "#NEWLINE#", "if", "wait", "pyline", "+=", "(", "pyline", "+=", "'import time; time.sleep(3600);'", "#NEWLINE#", "cmd_", "=", "'-c'", ",", "pyline", "#INDENT#", "cmd_", "=", "cmd", "#NEWLINE#", "#UNINDENT#", "sproc", "=", "subprocess", "cmd_", ",", "stdout", "=", "stdout", ",", "stderr", "=", "stderr", ",", "stdin", "=", "stdin", ")", "#NEWLINE#", "if", "wait", ":", "(", "cmd", "#INDENT#", "stop_at", ">", "stop_at", ")", "sproc", ")", "sproc", "return", "sproc"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [30, 36, 44, 2, 46, 48, 65, 67, 41, 69, 71, 73, 11, 22, 60, 6, 50, 52, 10, 54, 56, 1, 16, 38, 63, 17, 23, 26, 34]}}
{"prediction": {"error_location": 0.45522961020469666, "repair_targets": [], "repair_candidates": [0.08157134056091309, 0.07781953364610672, 0.02535606175661087, 0.21872201561927795, 0.09721647948026657, 0.04768786579370499, 0.009149400517344475, 0.03259597718715668, 0.0060975938104093075, 0.040406234562397, 0.14193043112754822, 0.0047292402014136314, 0.0846296027302742, 9.163327922578901e-05, 0.12134604156017303, 5.534916908800369e-06, 0.002640629420056939, 4.733840796689037e-06, 0.0017337501049041748, 7.283536888280651e-06, 0.003791632130742073, 9.840687198447995e-06, 0.00016727596812415868, 0.0008852827595546842, 0.00011376057227607816, 7.839879981474951e-05, 0.000833173980936408, 0.00036994126276113093, 9.30997612158535e-06], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 14:14:51.334480", "n_pass": [315, 27, 27], "n_token": 73, "loss": [0.6983315944671631, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "cmd", "stdout", "DEVNULL", ",", "stderr", "=", "DEVNULL", ",", "stdin", "wait", "=", "False", "if", "(", "cmd", "pyline", "=", "''", "#NEWLINE#", "if", "wait", "pyline", "+=", "(", "pyline", "+=", "'import time; time.sleep(3600);'", "#NEWLINE#", "cmd_", "=", "'-c'", ",", "pyline", "#INDENT#", "cmd_", "=", "cmd", "#NEWLINE#", "#UNINDENT#", "sproc", "=", "subprocess", "cmd_", ",", "stdout", "=", "stdout", ",", "stderr", "=", "stderr", ",", "stdin", "=", "stdin", ")", "#NEWLINE#", "if", "wait", ":", "(", "cmd", "#INDENT#", "stop_at", ">", "stop_at", ")", "sproc", ")", "sproc", "return", "sproc"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [29, 35, 43, 2, 45, 47, 64, 66, 40, 68, 70, 72, 10, 21, 59, 5, 49, 51, 9, 53, 55, 1, 15, 37, 62, 16, 22, 25, 33]}}
{"prediction": {"error_location": 0.4974144995212555, "repair_targets": [], "repair_candidates": [0.017896385863423347, 0.025684786960482597, 0.034151218831539154, 0.33640405535697937, 0.11863081902265549, 0.057223621755838394, 0.010662746615707874, 0.047706667333841324, 0.006787895690649748, 0.0475241057574749, 0.12847687304019928, 0.010782033205032349, 0.05923846364021301, 0.00014963463763706386, 0.0905233770608902, 5.306830189510947e-06, 0.001682085101492703, 6.890351869515143e-06, 0.0009817000245675445, 1.0618353371683042e-05, 0.0024322394747287035, 1.89071233762661e-05, 0.0002373980387346819, 0.0011608722852542996, 0.00011597679258557037, 0.00012246074038557708, 0.0009704660042189062, 0.000400709715904668, 1.1692225598380901e-05], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 14:14:51.429598", "n_pass": [316, 28, 28], "n_token": 72, "loss": [0.7589345574378967, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "cmd", "stdout", ",", "stderr", "=", "DEVNULL", ",", "stdin", "wait", "=", "False", "if", "(", "cmd", "pyline", "=", "''", "#NEWLINE#", "if", "wait", "pyline", "+=", "(", "pyline", "+=", "'import time; time.sleep(3600);'", "#NEWLINE#", "cmd_", "=", "'-c'", ",", "pyline", "#INDENT#", "cmd_", "=", "cmd", "#NEWLINE#", "#UNINDENT#", "sproc", "=", "subprocess", "cmd_", ",", "stdout", "=", "stdout", ",", "stderr", "=", "stderr", ",", "stdin", "=", "stdin", ")", "#NEWLINE#", "if", "wait", ":", "(", "cmd", "#INDENT#", "stop_at", ">", "stop_at", ")", "sproc", ")", "sproc", "return", "sproc"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [28, 34, 42, 2, 44, 46, 63, 65, 39, 67, 69, 71, 9, 20, 58, 4, 48, 50, 8, 52, 54, 1, 14, 36, 61, 15, 21, 24, 32]}}
{"prediction": {"error_location": 0.46816498041152954, "repair_targets": [], "repair_candidates": [0.051541153341531754, 0.0933842584490776, 0.07490154355764389, 0.22601881623268127, 0.0756952241063118, 0.015228806994855404, 0.0030783263500779867, 0.042336560785770416, 0.006514272186905146, 0.04451490193605423, 0.1508593112230301, 0.005161678418517113, 0.06859969347715378, 8.383101521758363e-05, 0.12791475653648376, 5.3842595661990345e-06, 0.002020967425778508, 8.295757652376778e-06, 0.0018205835949629545, 9.152648090093862e-06, 0.007597696036100388, 1.6722033251426183e-05, 0.0003444405156187713, 0.0009265015833079815, 0.00012587766104843467, 7.657423702767119e-05, 0.0007154872873798013, 0.0004886468523181975, 1.0587207725620829e-05], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 14:14:51.523654", "n_pass": [317, 29, 29], "n_token": 71, "loss": [0.7365715503692627, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "cmd", "stdout", "stderr", "=", "DEVNULL", ",", "stdin", "wait", "=", "False", "if", "(", "cmd", "pyline", "=", "''", "#NEWLINE#", "if", "wait", "pyline", "+=", "(", "pyline", "+=", "'import time; time.sleep(3600);'", "#NEWLINE#", "cmd_", "=", "'-c'", ",", "pyline", "#INDENT#", "cmd_", "=", "cmd", "#NEWLINE#", "#UNINDENT#", "sproc", "=", "subprocess", "cmd_", ",", "stdout", "=", "stdout", ",", "stderr", "=", "stderr", ",", "stdin", "=", "stdin", ")", "#NEWLINE#", "if", "wait", ":", "(", "cmd", "#INDENT#", "stop_at", ">", "stop_at", ")", "sproc", ")", "sproc", "return", "sproc"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [27, 33, 41, 2, 43, 45, 62, 64, 38, 66, 68, 70, 8, 19, 57, 3, 47, 49, 7, 51, 53, 1, 13, 35, 60, 14, 20, 23, 31]}}
{"prediction": {"error_location": 0.4787525236606598, "repair_targets": [], "repair_candidates": [0.034855641424655914, 0.04103156924247742, 0.07358495146036148, 0.23526230454444885, 0.17198707163333893, 0.028547415509819984, 0.005774611607193947, 0.06338875740766525, 0.010941344313323498, 0.04743523895740509, 0.1151287704706192, 0.008338319137692451, 0.07045792043209076, 0.00011104851000709459, 0.08202623575925827, 5.692847935279133e-06, 0.0014119319384917617, 8.219150004151743e-06, 0.001270232256501913, 9.82380697678309e-06, 0.0054620238952338696, 1.6201740436372347e-05, 0.00039425722206942737, 0.0010296567343175411, 0.0001304777106270194, 8.418684592470527e-05, 0.0008080862462520599, 0.0004870617121923715, 1.0958881830447353e-05], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 14:14:51.617569", "n_pass": [319, 30, 30], "n_token": 70, "loss": [0.8358134031295776, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "cmd", "stdout", "stderr", "DEVNULL", ",", "stdin", "wait", "=", "False", "if", "(", "cmd", "pyline", "=", "''", "#NEWLINE#", "if", "wait", "pyline", "+=", "(", "pyline", "+=", "'import time; time.sleep(3600);'", "#NEWLINE#", "cmd_", "=", "'-c'", ",", "pyline", "#INDENT#", "cmd_", "=", "cmd", "#NEWLINE#", "#UNINDENT#", "sproc", "=", "subprocess", "cmd_", ",", "stdout", "=", "stdout", ",", "stderr", "=", "stderr", ",", "stdin", "=", "stdin", ")", "#NEWLINE#", "if", "wait", ":", "(", "cmd", "#INDENT#", "stop_at", ">", "stop_at", ")", "sproc", ")", "sproc", "return", "sproc"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [26, 32, 40, 2, 42, 44, 61, 63, 37, 65, 67, 69, 7, 18, 56, 3, 46, 48, 6, 50, 52, 1, 12, 34, 59, 13, 19, 22, 30]}}
{"prediction": {"error_location": 0.4335217773914337, "repair_targets": [], "repair_candidates": [0.017647741362452507, 0.014838739298284054, 0.010353672318160534, 0.14060097932815552, 0.09068505465984344, 0.08895169198513031, 0.014542811550199986, 0.08117350190877914, 0.00913767609745264, 0.07810566574335098, 0.23167981207370758, 0.01336545217782259, 0.11308230459690094, 0.00031039988971315324, 0.08441649377346039, 8.14890518086031e-06, 0.0022614821791648865, 1.0503732482902706e-05, 0.0012070961529389024, 1.5573363270959817e-05, 0.002955685369670391, 2.3604454327141866e-05, 0.0005352059961296618, 0.0018856580136343837, 0.0002027119480771944, 0.0001606101868674159, 0.0012858640402555466, 0.0005393290775828063, 1.6569634681218304e-05], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 14:14:51.711796", "n_pass": [320, 31, 31], "n_token": 69, "loss": [0.8696450591087341, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "cmd", "stdout", "stderr", ",", "stdin", "wait", "=", "False", "if", "(", "cmd", "pyline", "=", "''", "#NEWLINE#", "if", "wait", "pyline", "+=", "(", "pyline", "+=", "'import time; time.sleep(3600);'", "#NEWLINE#", "cmd_", "=", "'-c'", ",", "pyline", "#INDENT#", "cmd_", "=", "cmd", "#NEWLINE#", "#UNINDENT#", "sproc", "=", "subprocess", "cmd_", ",", "stdout", "=", "stdout", ",", "stderr", "=", "stderr", ",", "stdin", "=", "stdin", ")", "#NEWLINE#", "if", "wait", ":", "(", "cmd", "#INDENT#", "stop_at", ">", "stop_at", ")", "sproc", ")", "sproc", "return", "sproc"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [25, 31, 39, 2, 41, 43, 60, 62, 36, 64, 66, 68, 6, 17, 55, 3, 45, 47, 5, 49, 51, 1, 11, 33, 58, 12, 18, 21, 29]}}
{"prediction": {"error_location": 0.419100284576416, "repair_targets": [], "repair_candidates": [0.01773279905319214, 0.019951926544308662, 0.226891428232193, 0.19522535800933838, 0.1105046272277832, 0.01204134151339531, 0.0023788074031472206, 0.08843565732240677, 0.012743134051561356, 0.05633039399981499, 0.13819052278995514, 0.004475441295653582, 0.046468641608953476, 0.0001733585086185485, 0.05148646607995033, 5.808571586385369e-06, 0.0017870500450953841, 9.960849638446234e-06, 0.0028403152246028185, 1.082124981621746e-05, 0.009014936164021492, 2.2453241399489343e-05, 0.0008359012426808476, 0.001128538278862834, 0.0001601920957909897, 8.71299926075153e-05, 0.0006335040670819581, 0.00042202460463158786, 1.1433049621700775e-05], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 14:14:51.804290", "n_pass": [321, 32, 32], "n_token": 68, "loss": [0.7915673851966858, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "cmd", "stdout", "stderr", "stdin", "wait", "=", "False", "if", "(", "cmd", "pyline", "=", "''", "#NEWLINE#", "if", "wait", "pyline", "+=", "(", "pyline", "+=", "'import time; time.sleep(3600);'", "#NEWLINE#", "cmd_", "=", "'-c'", ",", "pyline", "#INDENT#", "cmd_", "=", "cmd", "#NEWLINE#", "#UNINDENT#", "sproc", "=", "subprocess", "cmd_", ",", "stdout", "=", "stdout", ",", "stderr", "=", "stderr", ",", "stdin", "=", "stdin", ")", "#NEWLINE#", "if", "wait", ":", "(", "cmd", "#INDENT#", "stop_at", ">", "stop_at", ")", "sproc", ")", "sproc", "return", "sproc"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [24, 30, 38, 2, 40, 42, 59, 61, 35, 63, 65, 67, 5, 16, 54, 3, 44, 46, 4, 48, 50, 1, 10, 32, 57, 11, 17, 20, 28]}}
{"prediction": {"error_location": 0.45313405990600586, "repair_targets": [], "repair_candidates": [0.01091932225972414, 0.012022738344967365, 0.09625265002250671, 0.26837360858917236, 0.1446666717529297, 0.013919824734330177, 0.0022262749262154102, 0.0728050023317337, 0.0104738250374794, 0.05669432133436203, 0.1717659831047058, 0.004656582605093718, 0.06812771409749985, 0.00020654693071264774, 0.050174545496702194, 5.245784905127948e-06, 0.003272630274295807, 9.525540917820763e-06, 0.0023434136528521776, 1.0493795343791135e-05, 0.007400778587907553, 1.7183083400595933e-05, 0.0006685094558633864, 0.001381025416776538, 0.00014504817954730242, 8.983874431578442e-05, 0.0009192571160383523, 0.00044178887037560344, 9.609721928427462e-06], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 14:14:51.990049", "n_pass": [325, 34, 33], "n_token": 67, "loss": [0.7204699516296387, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "cmd", "stdout", "stderr", "stdin", "wait", "=", "if", "(", "cmd", "pyline", "=", "''", "#NEWLINE#", "if", "wait", "pyline", "+=", "(", "pyline", "+=", "'import time; time.sleep(3600);'", "#NEWLINE#", "cmd_", "=", "'-c'", ",", "pyline", "#INDENT#", "cmd_", "=", "cmd", "#NEWLINE#", "#UNINDENT#", "sproc", "=", "subprocess", "cmd_", ",", "stdout", "=", "stdout", ",", "stderr", "=", "stderr", ",", "stdin", "=", "stdin", ")", "#NEWLINE#", "if", "wait", ":", "(", "cmd", "#INDENT#", "stop_at", ">", "stop_at", ")", "sproc", ")", "sproc", "return", "sproc"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [23, 29, 37, 2, 39, 41, 58, 60, 34, 62, 64, 66, 5, 15, 53, 3, 43, 45, 4, 47, 49, 1, 9, 31, 56, 10, 16, 19, 27]}}
{"prediction": {"error_location": 0.48652365803718567, "repair_targets": [], "repair_candidates": [0.013715638779103756, 0.015358643606305122, 0.07967690378427505, 0.20736533403396606, 0.14259082078933716, 0.027629660442471504, 0.004638501908630133, 0.09945536404848099, 0.013599655590951443, 0.051902495324611664, 0.159382164478302, 0.005869671702384949, 0.09025097638368607, 0.0002773935266304761, 0.07201773673295975, 5.197290647629416e-06, 0.004380140453577042, 1.0920653949142434e-05, 0.001773489871993661, 1.5995901776477695e-05, 0.005504303146153688, 2.1890280549996532e-05, 0.000711749424226582, 0.0017499795649200678, 0.0001589554303791374, 0.0001223395811393857, 0.0012918475549668074, 0.000510615820530802, 1.171883377537597e-05], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 14:14:52.083289", "n_pass": [326, 35, 34], "n_token": 66, "loss": [1.1491050720214844, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "cmd", "stdout", "stderr", "stdin", "wait", "=", "(", "cmd", "pyline", "=", "''", "#NEWLINE#", "if", "wait", "pyline", "+=", "(", "pyline", "+=", "'import time; time.sleep(3600);'", "#NEWLINE#", "cmd_", "=", "'-c'", ",", "pyline", "#INDENT#", "cmd_", "=", "cmd", "#NEWLINE#", "#UNINDENT#", "sproc", "=", "subprocess", "cmd_", ",", "stdout", "=", "stdout", ",", "stderr", "=", "stderr", ",", "stdin", "=", "stdin", ")", "#NEWLINE#", "if", "wait", ":", "(", "cmd", "#INDENT#", "stop_at", ">", "stop_at", ")", "sproc", ")", "sproc", "return", "sproc"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [22, 28, 36, 2, 38, 40, 57, 59, 33, 61, 63, 65, 5, 14, 52, 3, 42, 44, 4, 46, 48, 1, 8, 30, 55, 9, 15, 18, 26]}}
{"prediction": {"error_location": 0.3169202506542206, "repair_targets": [], "repair_candidates": [0.0054446859285235405, 0.006765373516827822, 0.061331167817115784, 0.28991058468818665, 0.2948938310146332, 0.009562436491250992, 0.002485639648512006, 0.12582527101039886, 0.020317645743489265, 0.04043543338775635, 0.07867907732725143, 0.002164487959817052, 0.02079375833272934, 9.854498057393357e-05, 0.032803718000650406, 2.4527405457774876e-06, 0.0010267413454130292, 6.9959833126631565e-06, 0.0016372969839721918, 7.898132935224567e-06, 0.004435731563717127, 1.1585414540604688e-05, 0.0003041900636162609, 0.00047544066910631955, 6.523763295263052e-05, 3.973432831116952e-05, 0.0003095222928095609, 0.00016142729145940393, 4.131919013161678e-06], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 14:14:52.173656", "n_pass": [327, 36, 35], "n_token": 65, "loss": [0.9735332727432251, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "cmd", "stdout", "stderr", "stdin", "wait", "=", "cmd", "pyline", "=", "''", "#NEWLINE#", "if", "wait", "pyline", "+=", "(", "pyline", "+=", "'import time; time.sleep(3600);'", "#NEWLINE#", "cmd_", "=", "'-c'", ",", "pyline", "#INDENT#", "cmd_", "=", "cmd", "#NEWLINE#", "#UNINDENT#", "sproc", "=", "subprocess", "cmd_", ",", "stdout", "=", "stdout", ",", "stderr", "=", "stderr", ",", "stdin", "=", "stdin", ")", "#NEWLINE#", "if", "wait", ":", "(", "cmd", "#INDENT#", "stop_at", ">", "stop_at", ")", "sproc", ")", "sproc", "return", "sproc"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [21, 27, 35, 2, 37, 39, 56, 58, 32, 60, 62, 64, 5, 13, 51, 3, 41, 43, 4, 45, 47, 1, 7, 29, 54, 8, 14, 17, 25]}}
{"prediction": {"error_location": 0.37774598598480225, "repair_targets": [], "repair_candidates": [0.004638195503503084, 0.005773512180894613, 0.05116819962859154, 0.23911821842193604, 0.2947230935096741, 0.011683780699968338, 0.0029913997277617455, 0.14961223304271698, 0.0241794902831316, 0.03585830330848694, 0.09307260811328888, 0.002344219945371151, 0.021407602354884148, 6.886746996315196e-05, 0.0525784008204937, 2.1322725842765067e-06, 0.0010336601408198476, 6.6972224885830656e-06, 0.0018223787192255259, 6.667321940767579e-06, 0.006269643548876047, 9.995471373258624e-06, 0.00034384644823148847, 0.0005943236174061894, 6.741074321325868e-05, 4.1343129851156846e-05, 0.00036913956864736974, 0.0002095036907121539, 5.15172405357589e-06], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 14:14:52.264823", "n_pass": [330, 37, 36], "n_token": 64, "loss": [0.7654563784599304, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "cmd", "stdout", "stderr", "stdin", "wait", "=", "cmd", "pyline", "''", "#NEWLINE#", "if", "wait", "pyline", "+=", "(", "pyline", "+=", "'import time; time.sleep(3600);'", "#NEWLINE#", "cmd_", "=", "'-c'", ",", "pyline", "#INDENT#", "cmd_", "=", "cmd", "#NEWLINE#", "#UNINDENT#", "sproc", "=", "subprocess", "cmd_", ",", "stdout", "=", "stdout", ",", "stderr", "=", "stderr", ",", "stdin", "=", "stdin", ")", "#NEWLINE#", "if", "wait", ":", "(", "cmd", "#INDENT#", "stop_at", ">", "stop_at", ")", "sproc", ")", "sproc", "return", "sproc"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [20, 26, 34, 2, 36, 38, 55, 57, 31, 59, 61, 63, 5, 12, 50, 3, 40, 42, 4, 44, 46, 1, 7, 28, 53, 8, 13, 16, 24]}}
{"prediction": {"error_location": 0.46512162685394287, "repair_targets": [], "repair_candidates": [0.0032715562265366316, 0.002999142510816455, 0.024027641862630844, 0.1299486756324768, 0.25345373153686523, 0.0036428323946893215, 0.0007014113361947238, 0.15774334967136383, 0.02893226221203804, 0.05616353824734688, 0.16024813055992126, 0.006667051464319229, 0.05521759018301964, 0.000199509973754175, 0.10159847885370255, 4.9851573749037925e-06, 0.0027668725233525038, 8.740024895814713e-06, 0.0026373497676104307, 1.387662450724747e-05, 0.005993375089019537, 1.857967617979739e-05, 0.0006349905161187053, 0.0014359973138198256, 0.00016001507174223661, 9.344804857391864e-05, 0.0009579890756867826, 0.00044893063022755086, 9.993737876357045e-06], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 14:14:52.354827", "n_pass": [331, 38, 37], "n_token": 63, "loss": [0.7473270297050476, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "cmd", "stdout", "stderr", "stdin", "wait", "=", "cmd", "pyline", "#NEWLINE#", "if", "wait", "pyline", "+=", "(", "pyline", "+=", "'import time; time.sleep(3600);'", "#NEWLINE#", "cmd_", "=", "'-c'", ",", "pyline", "#INDENT#", "cmd_", "=", "cmd", "#NEWLINE#", "#UNINDENT#", "sproc", "=", "subprocess", "cmd_", ",", "stdout", "=", "stdout", ",", "stderr", "=", "stderr", ",", "stdin", "=", "stdin", ")", "#NEWLINE#", "if", "wait", ":", "(", "cmd", "#INDENT#", "stop_at", ">", "stop_at", ")", "sproc", ")", "sproc", "return", "sproc"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [19, 25, 33, 2, 35, 37, 54, 56, 30, 58, 60, 62, 5, 11, 49, 3, 39, 41, 4, 43, 45, 1, 7, 27, 52, 8, 12, 15, 23]}}
{"prediction": {"error_location": 0.4736309349536896, "repair_targets": [], "repair_candidates": [0.003636118955910206, 0.0033017927780747414, 0.02448096126317978, 0.13165141642093658, 0.2581050395965576, 0.0052150823175907135, 0.0024044353049248457, 0.09220264852046967, 0.030393416061997414, 0.06860961019992828, 0.1646517813205719, 0.00826827809214592, 0.09296330064535141, 0.00021203600044827908, 0.094383604824543, 8.747736501391046e-06, 0.003469867166131735, 9.9395947472658e-06, 0.004110202193260193, 2.172357744711917e-05, 0.006745252758264542, 3.0888975743437186e-05, 0.0008495363290421665, 0.0019126137485727668, 0.0002074820367852226, 0.00013160017260815948, 0.0013860651524737477, 0.0006230865838006139, 1.3507603398466017e-05], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 14:14:52.446091", "n_pass": [332, 39, 38], "n_token": 62, "loss": [0.7846370339393616, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "cmd", "stdout", "stderr", "stdin", "wait", "=", "cmd", "pyline", "if", "wait", "pyline", "+=", "(", "pyline", "+=", "'import time; time.sleep(3600);'", "#NEWLINE#", "cmd_", "=", "'-c'", ",", "pyline", "#INDENT#", "cmd_", "=", "cmd", "#NEWLINE#", "#UNINDENT#", "sproc", "=", "subprocess", "cmd_", ",", "stdout", "=", "stdout", ",", "stderr", "=", "stderr", ",", "stdin", "=", "stdin", ")", "#NEWLINE#", "if", "wait", ":", "(", "cmd", "#INDENT#", "stop_at", ">", "stop_at", ")", "sproc", ")", "sproc", "return", "sproc"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [18, 24, 32, 2, 34, 36, 53, 55, 29, 57, 59, 61, 5, 10, 48, 3, 38, 40, 4, 42, 44, 1, 7, 26, 51, 8, 11, 14, 22]}}
{"prediction": {"error_location": 0.4562852382659912, "repair_targets": [], "repair_candidates": [0.0054311915300786495, 0.00593770993873477, 0.035926453769207, 0.17861630022525787, 0.30011186003685, 0.00424157315865159, 0.002097510499879718, 0.038411300629377365, 0.011262204498052597, 0.10057856887578964, 0.17752961814403534, 0.006926529109477997, 0.05854902043938637, 0.00021103135077282786, 0.054203614592552185, 8.211472959374078e-06, 0.002121965866535902, 1.1127449397463351e-05, 0.002865096554160118, 2.1824002033099532e-05, 0.010615814477205276, 2.7032341677113436e-05, 0.0007607354200445116, 0.0016804722836241126, 0.00015354453353211284, 0.00010965757974190637, 0.0010659616673365235, 0.0005108056939207017, 1.3214450518717058e-05], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 14:14:52.534685", "n_pass": [333, 40, 39], "n_token": 61, "loss": [0.7674590945243835, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "cmd", "stdout", "stderr", "stdin", "wait", "=", "cmd", "pyline", "wait", "pyline", "+=", "(", "pyline", "+=", "'import time; time.sleep(3600);'", "#NEWLINE#", "cmd_", "=", "'-c'", ",", "pyline", "#INDENT#", "cmd_", "=", "cmd", "#NEWLINE#", "#UNINDENT#", "sproc", "=", "subprocess", "cmd_", ",", "stdout", "=", "stdout", ",", "stderr", "=", "stderr", ",", "stdin", "=", "stdin", ")", "#NEWLINE#", "if", "wait", ":", "(", "cmd", "#INDENT#", "stop_at", ">", "stop_at", ")", "sproc", ")", "sproc", "return", "sproc"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [17, 23, 31, 2, 33, 35, 52, 54, 28, 56, 58, 60, 5, 9, 47, 3, 37, 39, 4, 41, 43, 1, 7, 25, 50, 8, 10, 13, 21]}}
{"prediction": {"error_location": 0.4641909897327423, "repair_targets": [], "repair_candidates": [0.004345302935689688, 0.004197605419903994, 0.021643130108714104, 0.13404640555381775, 0.24934683740139008, 0.008208464831113815, 0.006843535695225, 0.04430430755019188, 0.011671533808112144, 0.14503610134124756, 0.20583510398864746, 0.006967653054744005, 0.05424059182405472, 0.00017999076226260513, 0.0834137424826622, 8.850837730278727e-06, 0.002906002337113023, 1.1727222045010421e-05, 0.001846779021434486, 2.207215948146768e-05, 0.009514319710433483, 2.2509726477437653e-05, 0.0008124115411192179, 0.0022073646541684866, 0.00020544763538055122, 0.0001330422965111211, 0.0013929748674854636, 0.0006206748075783253, 1.5492043530684896e-05], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 14:14:52.622808", "n_pass": [336, 41, 40], "n_token": 59, "loss": [0.7117757201194763, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "cmd", "stdout", "stderr", "stdin", "wait", "=", "cmd", "pyline", "wait", "pyline", "pyline", "+=", "'import time; time.sleep(3600);'", "#NEWLINE#", "cmd_", "=", "'-c'", ",", "pyline", "#INDENT#", "cmd_", "=", "cmd", "#NEWLINE#", "#UNINDENT#", "sproc", "=", "subprocess", "cmd_", ",", "stdout", "=", "stdout", ",", "stderr", "=", "stderr", ",", "stdin", "=", "stdin", ")", "#NEWLINE#", "if", "wait", ":", "(", "cmd", "#INDENT#", "stop_at", ">", "stop_at", ")", "sproc", ")", "sproc", "return", "sproc"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [15, 21, 29, 2, 31, 33, 50, 52, 26, 54, 56, 58, 5, 9, 45, 3, 35, 37, 4, 39, 41, 1, 7, 23, 48, 8, 10, 11, 19]}}
{"prediction": {"error_location": 0.490772008895874, "repair_targets": [], "repair_candidates": [0.0038911199662834406, 0.0032580820843577385, 0.016527220606803894, 0.10385893285274506, 0.21984784305095673, 0.006769303698092699, 0.004877306055277586, 0.03465477377176285, 0.03071996197104454, 0.06170782446861267, 0.24590164422988892, 0.007903879508376122, 0.07402851432561874, 0.0001445643720217049, 0.1598934531211853, 1.0232615750283003e-05, 0.004749820102006197, 1.659973531786818e-05, 0.0031043952330946922, 1.6703752407920547e-05, 0.010668155737221241, 3.2504489354323596e-05, 0.0008972410578280687, 0.0032752833794802427, 0.000255933846347034, 0.00017046171706169844, 0.0019678149838000536, 0.0008316852618008852, 1.8836568415281363e-05], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 14:14:52.709730", "n_pass": [338, 42, 41], "n_token": 57, "loss": [0.8756657838821411, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "cmd", "stdout", "stderr", "stdin", "wait", "=", "cmd", "pyline", "wait", "pyline", "pyline", "+=", "cmd_", "=", "'-c'", ",", "pyline", "#INDENT#", "cmd_", "=", "cmd", "#NEWLINE#", "#UNINDENT#", "sproc", "=", "subprocess", "cmd_", ",", "stdout", "=", "stdout", ",", "stderr", "=", "stderr", ",", "stdin", "=", "stdin", ")", "#NEWLINE#", "if", "wait", ":", "(", "cmd", "#INDENT#", "stop_at", ">", "stop_at", ")", "sproc", ")", "sproc", "return", "sproc"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [13, 19, 27, 2, 29, 31, 48, 50, 24, 52, 54, 56, 5, 9, 43, 3, 33, 35, 4, 37, 39, 1, 7, 21, 46, 8, 10, 11, 17]}}
{"prediction": {"error_location": 0.41658464074134827, "repair_targets": [], "repair_candidates": [0.006359827239066362, 0.005472848657518625, 0.027814768254756927, 0.1508438140153885, 0.2794686555862427, 0.0062004923820495605, 0.004609768278896809, 0.03515072911977768, 0.05222124978899956, 0.15994471311569214, 0.06130995228886604, 0.010350492782890797, 0.08240222185850143, 0.0004771954263560474, 0.10451343655586243, 1.4020062735653482e-05, 0.0011491453042253852, 1.6452724594273604e-05, 0.001428987830877304, 1.5463510862900876e-05, 0.004027229268103838, 4.403007187647745e-05, 0.000579319370444864, 0.002483547432348132, 0.0002687579835765064, 0.0001987781433854252, 0.0018188189715147018, 0.0007900879136286676, 2.5217203074134886e-05], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 14:14:52.797628", "n_pass": [340, 43, 42], "n_token": 55, "loss": [0.837532103061676, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "cmd", "stdout", "stderr", "stdin", "wait", "=", "cmd", "pyline", "wait", "pyline", "pyline", "+=", "cmd_", "=", "pyline", "#INDENT#", "cmd_", "=", "cmd", "#NEWLINE#", "#UNINDENT#", "sproc", "=", "subprocess", "cmd_", ",", "stdout", "=", "stdout", ",", "stderr", "=", "stderr", ",", "stdin", "=", "stdin", ")", "#NEWLINE#", "if", "wait", ":", "(", "cmd", "#INDENT#", "stop_at", ">", "stop_at", ")", "sproc", ")", "sproc", "return", "sproc"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [13, 17, 25, 2, 27, 29, 46, 48, 22, 50, 52, 54, 5, 9, 41, 3, 31, 33, 4, 35, 37, 1, 7, 19, 44, 8, 10, 11, 15]}}
{"prediction": {"error_location": 0.4327772557735443, "repair_targets": [], "repair_candidates": [0.007319910917431116, 0.006324796471744776, 0.02812109887599945, 0.15175962448120117, 0.29919159412384033, 0.007401890587061644, 0.004889627918601036, 0.030593011528253555, 0.0347835049033165, 0.10119098424911499, 0.11694065481424332, 0.018833577632904053, 0.10958478599786758, 0.001051472732797265, 0.06750879436731339, 1.5200555026240181e-05, 0.0009034082177095115, 1.4413091776077636e-05, 0.0015094185946509242, 1.794345553207677e-05, 0.005690734833478928, 2.662854421942029e-05, 0.000603312102612108, 0.0026125931181013584, 0.0002681636542547494, 0.00020430806034710258, 0.0018402148270979524, 0.0007717951666563749, 2.6592102585709654e-05], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 14:14:52.883537", "n_pass": [345, 44, 43], "n_token": 53, "loss": [1.2239603996276855, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "cmd", "stdout", "stderr", "stdin", "wait", "=", "cmd", "pyline", "wait", "pyline", "pyline", "+=", "cmd_", "=", "pyline", "#INDENT#", "cmd_", "=", "cmd", "#NEWLINE#", "#UNINDENT#", "sproc", "cmd_", ",", "stdout", "=", "stdout", ",", "stderr", "=", "stderr", ",", "stdin", "=", "stdin", ")", "#NEWLINE#", "if", "wait", ":", "(", "cmd", "#INDENT#", "stop_at", ">", "stop_at", ")", "sproc", ")", "sproc", "return", "sproc"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [13, 17, 23, 2, 25, 27, 44, 46, 22, 48, 50, 52, 5, 9, 39, 3, 29, 31, 4, 33, 35, 1, 7, 19, 42, 8, 10, 11, 15]}}
{"prediction": {"error_location": 0.2940632104873657, "repair_targets": [], "repair_candidates": [0.01039848756045103, 0.00839170627295971, 0.03420514613389969, 0.18706904351711273, 0.3608570992946625, 0.011179497465491295, 0.0057083494029939175, 0.03519478812813759, 0.03895667940378189, 0.10685983300209045, 0.10313484072685242, 0.016492636874318123, 0.03225652128458023, 0.0009501112508587539, 0.024122973904013634, 0.0007710093632340431, 0.0014588620979338884, 2.984579623444006e-05, 0.003271311754360795, 3.579989788704552e-05, 0.014300172217190266, 2.392961505393032e-05, 0.0006629241397604346, 0.0011176415719091892, 0.00027966551715508103, 0.00023395234893541783, 0.001392225967720151, 0.0006034082034602761, 4.1499231883790344e-05], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 14:14:53.053107", "n_pass": [367, 46, 44], "n_token": 52, "loss": [0.880909264087677, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "cmd", "stdout", "stderr", "stdin", "wait", "cmd", "pyline", "wait", "pyline", "pyline", "+=", "cmd_", "=", "pyline", "#INDENT#", "cmd_", "=", "cmd", "#NEWLINE#", "#UNINDENT#", "sproc", "cmd_", ",", "stdout", "=", "stdout", ",", "stderr", "=", "stderr", ",", "stdin", "=", "stdin", ")", "#NEWLINE#", "if", "wait", ":", "(", "cmd", "#INDENT#", "stop_at", ">", "stop_at", ")", "sproc", ")", "sproc", "return", "sproc"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [12, 16, 22, 2, 24, 26, 43, 45, 21, 47, 49, 51, 5, 8, 38, 3, 28, 30, 4, 32, 34, 1, 6, 18, 41, 7, 9, 10, 14]}}
{"prediction": {"error_location": 0.4144059419631958, "repair_targets": [], "repair_candidates": [0.04744670167565346, 0.012939045205712318, 0.008366231806576252, 0.004881338682025671, 0.011077472008764744, 0.0350068062543869, 0.02294999174773693, 0.0588558167219162, 0.06358423084020615, 0.07915405929088593, 0.4770655333995819, 0.02358156628906727, 0.08661001920700073, 0.0019920114427804947, 0.053106147795915604, 0.0022583138197660446, 0.000949465436860919, 0.0001190193070215173, 0.0005026874132454395, 8.945780427893624e-05, 0.0020777445752173662, 7.014822767814621e-05, 0.0008316282765008509, 0.002890856470912695, 0.0005319170304574072, 0.0004982641548849642, 0.0019552884623408318, 0.0005395356565713882, 6.868596392450854e-05], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 14:14:53.139559", "n_pass": [385, 47, 45], "n_token": 50, "loss": [0.7313238978385925, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "cmd", "stdout", "stderr", "stdin", "wait", "cmd", "pyline", "wait", "pyline", "pyline", "+=", "cmd_", "=", "pyline", "#INDENT#", "cmd_", "=", "cmd", "#NEWLINE#", "#UNINDENT#", "sproc", "cmd_", ",", "stdout", "=", "stdout", ",", "stderr", "=", "stderr", ",", "stdin", "=", "stdin", ")", "wait", ":", "(", "cmd", "#INDENT#", "stop_at", ">", "stop_at", ")", "sproc", ")", "sproc", "return", "sproc"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [12, 16, 22, 2, 24, 26, 41, 43, 21, 45, 47, 49, 5, 8, 36, 3, 28, 30, 4, 32, 34, 1, 6, 18, 39, 7, 9, 10, 14]}}
{"prediction": {"error_location": 0.4812714159488678, "repair_targets": [], "repair_candidates": [0.05387508124113083, 0.013885882683098316, 0.00975482165813446, 0.005334349349141121, 0.01228101085871458, 0.03741806000471115, 0.025352006778120995, 0.06681764125823975, 0.07331924885511398, 0.08634630590677261, 0.45219674706459045, 0.022843293845653534, 0.07427540421485901, 0.0027352632023394108, 0.05036278814077377, 0.0039664930664002895, 0.0013521385844796896, 0.00014839011419098824, 0.0004443258512765169, 0.00012718421930912882, 0.0011682136682793498, 0.00015846992027945817, 0.0008340200292877853, 0.0015166589291766286, 0.0005034650675952435, 0.00039876470691524446, 0.0019683765713125467, 0.000553316087462008, 6.224391108844429e-05], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 14:14:53.226248", "n_pass": [456, 48, 46], "n_token": 49, "loss": [0.9783915281295776, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "cmd", "stdout", "stderr", "stdin", "wait", "cmd", "pyline", "wait", "pyline", "pyline", "+=", "cmd_", "=", "pyline", "#INDENT#", "cmd_", "=", "cmd", "#NEWLINE#", "#UNINDENT#", "sproc", "cmd_", ",", "stdout", "=", "stdout", ",", "stderr", "=", "stderr", ",", "stdin", "=", "stdin", ")", "wait", ":", "cmd", "#INDENT#", "stop_at", ">", "stop_at", ")", "sproc", ")", "sproc", "return", "sproc"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [12, 16, 22, 2, 24, 26, 40, 42, 21, 44, 46, 48, 5, 8, 36, 3, 28, 30, 4, 32, 34, 1, 6, 18, 38, 7, 9, 10, 14]}}
{"prediction": {"error_location": 0.3759153187274933, "repair_targets": [], "repair_candidates": [0.05652114748954773, 0.01444587018340826, 0.01001354493200779, 0.005444564390927553, 0.012434891425073147, 0.038878221064805984, 0.026024123653769493, 0.06473703682422638, 0.0711938887834549, 0.08608972281217575, 0.44271788001060486, 0.02069188840687275, 0.06671112030744553, 0.002372566144913435, 0.06829523295164108, 0.0038267860654741526, 0.000972046866081655, 0.0001342454634141177, 0.00041234525269828737, 0.00010004173236666247, 0.0009845964377745986, 0.00011512515629874542, 0.000434958899859339, 0.0023618757259100676, 0.0005492803757078946, 0.0003867401974275708, 0.0023731477558612823, 0.0007136318599805236, 6.348296301439404e-05], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 14:14:53.309195", "n_pass": [457, 49, 47], "n_token": 48, "loss": [1.020667552947998, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "cmd", "stdout", "stderr", "stdin", "wait", "cmd", "pyline", "wait", "pyline", "pyline", "+=", "cmd_", "=", "pyline", "#INDENT#", "cmd_", "=", "cmd", "#NEWLINE#", "#UNINDENT#", "sproc", "cmd_", ",", "stdout", "=", "stdout", ",", "stderr", "=", "stderr", ",", "stdin", "=", "stdin", ")", "wait", ":", "cmd", "stop_at", ">", "stop_at", ")", "sproc", ")", "sproc", "return", "sproc"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [12, 16, 22, 2, 24, 26, 39, 41, 21, 43, 45, 47, 5, 8, 36, 3, 28, 30, 4, 32, 34, 1, 6, 18, 38, 7, 9, 10, 14]}}
{"prediction": {"error_location": 0.36035430431365967, "repair_targets": [], "repair_candidates": [0.06008541211485863, 0.015821781009435654, 0.011194149032235146, 0.006811921019107103, 0.015226073563098907, 0.038367174565792084, 0.028447555378079414, 0.06868691742420197, 0.07655366510152817, 0.10484008491039276, 0.3989509344100952, 0.03165518119931221, 0.07739487290382385, 0.0027067074552178383, 0.04743705689907074, 0.0027508847415447235, 0.0014035814674571157, 0.0001884776575025171, 0.0005496367230080068, 0.00014886728604324162, 0.0011645668419077992, 0.00017940645921044052, 0.0009614487062208354, 0.0007338774739764631, 0.0005136984400451183, 0.0011808226117864251, 0.00488504720851779, 0.0010525149991735816, 0.00010765491606434807], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 14:14:53.392947", "n_pass": [459, 50, 48], "n_token": 47, "loss": [0.7208815217018127, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "cmd", "stdout", "stderr", "stdin", "wait", "cmd", "pyline", "wait", "pyline", "pyline", "+=", "cmd_", "=", "pyline", "#INDENT#", "cmd_", "=", "cmd", "#NEWLINE#", "#UNINDENT#", "sproc", "cmd_", ",", "stdout", "=", "stdout", ",", "stderr", "=", "stderr", ",", "stdin", "=", "stdin", ")", "wait", ":", "cmd", "stop_at", "stop_at", ")", "sproc", ")", "sproc", "return", "sproc"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [12, 16, 22, 2, 24, 26, 39, 40, 21, 42, 44, 46, 5, 8, 36, 3, 28, 30, 4, 32, 34, 1, 6, 18, 38, 7, 9, 10, 14]}}
{"prediction": {"error_location": 0.4863232970237732, "repair_targets": [], "repair_candidates": [0.05986896529793739, 0.015575348399579525, 0.010636581107974052, 0.006084452848881483, 0.015001530759036541, 0.04229000210762024, 0.030008740723133087, 0.07080287486314774, 0.07686862349510193, 0.10832922160625458, 0.3946177065372467, 0.024352919310331345, 0.07098625600337982, 0.001566556515172124, 0.048065848648548126, 0.001477763638831675, 0.0012445240281522274, 9.933154797181487e-05, 0.0006562222260981798, 6.37427729088813e-05, 0.0016986762639135122, 9.069703082786873e-05, 0.001646638149395585, 0.00045873032649978995, 0.0006934701232239604, 0.003964083734899759, 0.010991627350449562, 0.0017198623390868306, 0.00013898551696911454], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 14:14:53.474553", "n_pass": [461, 51, 49], "n_token": 46, "loss": [0.551931619644165, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "cmd", "stdout", "stderr", "stdin", "wait", "cmd", "pyline", "wait", "pyline", "pyline", "+=", "cmd_", "=", "pyline", "#INDENT#", "cmd_", "=", "cmd", "#NEWLINE#", "#UNINDENT#", "sproc", "cmd_", ",", "stdout", "=", "stdout", ",", "stderr", "=", "stderr", ",", "stdin", "=", "stdin", ")", "wait", ":", "cmd", "stop_at", "stop_at", "sproc", ")", "sproc", "return", "sproc"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [12, 16, 22, 2, 24, 26, 39, 40, 21, 41, 43, 45, 5, 8, 36, 3, 28, 30, 4, 32, 34, 1, 6, 18, 38, 7, 9, 10, 14]}}
{"prediction": {"error_location": 0.5758363604545593, "repair_targets": [], "repair_candidates": [0.0574735552072525, 0.015437119640409946, 0.010105094872415066, 0.006175214424729347, 0.0152337197214365, 0.04002125933766365, 0.029399389401078224, 0.06806694716215134, 0.07412895560264587, 0.1105496808886528, 0.397616446018219, 0.03161286190152168, 0.07507001608610153, 0.002422657795250416, 0.03758488968014717, 0.001734465011395514, 0.0015027087647467852, 9.576712182024494e-05, 0.000932626542635262, 7.558642391813919e-05, 0.002277116058394313, 0.0001082918606698513, 0.002094852738082409, 0.00047606765292584896, 0.0009683840326033533, 0.005440740846097469, 0.007802953943610191, 0.005490691866725683, 0.00010184212442254648], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 14:14:53.555596", "n_pass": [463, 52, 50], "n_token": 45, "loss": [0.2917909324169159, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "cmd", "stdout", "stderr", "stdin", "wait", "cmd", "pyline", "wait", "pyline", "pyline", "+=", "cmd_", "=", "pyline", "#INDENT#", "cmd_", "=", "cmd", "#NEWLINE#", "#UNINDENT#", "sproc", "cmd_", ",", "stdout", "=", "stdout", ",", "stderr", "=", "stderr", ",", "stdin", "=", "stdin", ")", "wait", ":", "cmd", "stop_at", "stop_at", "sproc", "sproc", "return", "sproc"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [12, 16, 22, 2, 24, 26, 39, 40, 21, 41, 42, 44, 5, 8, 36, 3, 28, 30, 4, 32, 34, 1, 6, 18, 38, 7, 9, 10, 14]}}
{"prediction": {"error_location": 0.746924638748169, "repair_targets": [], "repair_candidates": [0.057304564863443375, 0.015612016431987286, 0.00895693339407444, 0.005637872498482466, 0.013948459178209305, 0.038333822041749954, 0.030314816161990166, 0.06537335366010666, 0.07746598869562149, 0.11231650412082672, 0.3948407471179962, 0.034602873027324677, 0.0824347510933876, 0.002456441754475236, 0.04121692478656769, 0.0014133007498458028, 0.0013875614386051893, 6.064570334274322e-05, 0.0006355567020364106, 6.374809890985489e-05, 0.0025650602765381336, 0.00011014074698323384, 0.0024055882822722197, 0.0007617227383889258, 0.0006325842696242034, 0.0026281375903636217, 0.0034443428739905357, 0.002996918046846986, 7.860728510422632e-05], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 14:14:53.636099", "n_pass": [465, 53, 51], "n_token": 44, "loss": [0.3939456343650818, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "cmd", "stdout", "stderr", "stdin", "wait", "cmd", "pyline", "wait", "pyline", "pyline", "+=", "cmd_", "=", "pyline", "#INDENT#", "cmd_", "=", "cmd", "#NEWLINE#", "#UNINDENT#", "sproc", "cmd_", ",", "stdout", "=", "stdout", ",", "stderr", "=", "stderr", ",", "stdin", "=", "stdin", ")", "wait", ":", "cmd", "stop_at", "stop_at", "sproc", "sproc", "sproc"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [12, 16, 22, 2, 24, 26, 39, 40, 21, 41, 42, 43, 5, 8, 36, 3, 28, 30, 4, 32, 34, 1, 6, 18, 38, 7, 9, 10, 14]}}
{"prediction": {"error_location": 0.6743907332420349, "repair_targets": [], "repair_candidates": [0.0547403022646904, 0.014983931556344032, 0.007600538898259401, 0.0044953119941055775, 0.010803109034895897, 0.032984524965286255, 0.026608804240822792, 0.05879928171634674, 0.06728710979223251, 0.09408202767372131, 0.4431540369987488, 0.036522746086120605, 0.08090167492628098, 0.00316440686583519, 0.025306325405836105, 0.0009287807624787092, 0.0008497389499098063, 3.776917947106995e-05, 0.0007661809795536101, 5.1605646149255335e-05, 0.008850062265992165, 0.00013038217730354518, 0.001158669707365334, 0.0005752418655902147, 0.0007915194728411734, 0.004236740991473198, 0.007034356240183115, 0.009541266597807407, 0.0036135679110884666], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 14:14:53.718599", "n_pass": [478, 54, 52], "n_token": 43, "loss": [0.415854811668396, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "cmd", "stdout", "stderr", "stdin", "wait", "cmd", "pyline", "wait", "pyline", "pyline", "cmd_", "=", "pyline", "#INDENT#", "cmd_", "=", "cmd", "#NEWLINE#", "#UNINDENT#", "sproc", "cmd_", ",", "stdout", "=", "stdout", ",", "stderr", "=", "stderr", ",", "stdin", "=", "stdin", ")", "wait", ":", "cmd", "stop_at", "stop_at", "sproc", "sproc", "sproc"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [11, 15, 21, 2, 23, 25, 38, 39, 20, 40, 41, 42, 5, 8, 35, 3, 27, 29, 4, 31, 33, 1, 6, 17, 37, 7, 9, 10, 13]}}
{"prediction": {"error_location": 0.6597760319709778, "repair_targets": [], "repair_candidates": [0.09798793494701385, 0.025840748101472855, 0.01101356279104948, 0.004974301904439926, 0.011297102086246014, 0.05207955092191696, 0.03778919205069542, 0.05933316797018051, 0.05575717240571976, 0.11611546576023102, 0.18625928461551666, 0.033028338104486465, 0.18373624980449677, 0.006752197165042162, 0.05902659893035889, 0.001334029366262257, 0.004359209444373846, 4.4925847760168836e-05, 0.000814126105979085, 3.956141517846845e-05, 0.009752761572599411, 0.0001058001143974252, 0.001004924182780087, 0.0007493707817047834, 0.0012005949392914772, 0.007017727009952068, 0.013336163014173508, 0.014829147607088089, 0.004420825745910406], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 14:14:53.797727", "n_pass": [480, 55, 53], "n_token": 42, "loss": [0.42740559577941895, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "cmd", "stdout", "stderr", "stdin", "wait", "cmd", "pyline", "wait", "pyline", "pyline", "cmd_", "pyline", "#INDENT#", "cmd_", "=", "cmd", "#NEWLINE#", "#UNINDENT#", "sproc", "cmd_", ",", "stdout", "=", "stdout", ",", "stderr", "=", "stderr", ",", "stdin", "=", "stdin", ")", "wait", ":", "cmd", "stop_at", "stop_at", "sproc", "sproc", "sproc"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [11, 14, 20, 2, 22, 24, 37, 38, 19, 39, 40, 41, 5, 8, 34, 3, 26, 28, 4, 30, 32, 1, 6, 16, 36, 7, 9, 10, 12]}}
{"prediction": {"error_location": 0.6521989107131958, "repair_targets": [], "repair_candidates": [0.13957248628139496, 0.036952096968889236, 0.020817294716835022, 0.009896627627313137, 0.022633105516433716, 0.08321361988782883, 0.06309930235147476, 0.10813985019922256, 0.060942262411117554, 0.032510656863451004, 0.018009766936302185, 0.03252267464995384, 0.10858916491270065, 0.007428122218698263, 0.12163558602333069, 0.0031402716413140297, 0.006906008347868919, 8.513569628121331e-05, 0.0020348425023257732, 7.967953570187092e-05, 0.02691655047237873, 0.00027483110898174345, 0.002760806353762746, 0.0018536747666075826, 0.002453282242640853, 0.01601799577474594, 0.028943540528416634, 0.0325995609164238, 0.009971206076443195], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 14:14:53.876615", "n_pass": [482, 56, 54], "n_token": 41, "loss": [0.42079925537109375, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "cmd", "stdout", "stderr", "stdin", "wait", "cmd", "pyline", "wait", "pyline", "pyline", "cmd_", "pyline", "cmd_", "=", "cmd", "#NEWLINE#", "#UNINDENT#", "sproc", "cmd_", ",", "stdout", "=", "stdout", ",", "stderr", "=", "stderr", ",", "stdin", "=", "stdin", ")", "wait", ":", "cmd", "stop_at", "stop_at", "sproc", "sproc", "sproc"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [11, 13, 19, 2, 21, 23, 36, 37, 18, 38, 39, 40, 5, 8, 33, 3, 25, 27, 4, 29, 31, 1, 6, 15, 35, 7, 9, 10, 12]}}
{"prediction": {"error_location": 0.6565218567848206, "repair_targets": [], "repair_candidates": [0.12005011737346649, 0.035909853875637054, 0.024952271953225136, 0.013950422406196594, 0.024563537910580635, 0.053913287818431854, 0.05621692165732384, 0.11081303656101227, 0.07279402762651443, 0.05926008149981499, 0.024347256869077682, 0.047028668224811554, 0.03428749740123749, 0.002363328356295824, 0.209690123796463, 0.002469682600349188, 0.003224823158234358, 6.384561856975779e-05, 0.0016716653481125832, 5.567875268752687e-05, 0.020365014672279358, 0.0002675575378816575, 0.003092612139880657, 0.001764138462021947, 0.0021076048724353313, 0.013935250230133533, 0.024064622819423676, 0.027738194912672043, 0.009038899093866348], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 14:14:53.955450", "n_pass": [484, 57, 55], "n_token": 40, "loss": [0.5406338572502136, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "cmd", "stdout", "stderr", "stdin", "wait", "cmd", "pyline", "wait", "pyline", "pyline", "cmd_", "pyline", "cmd_", "cmd", "#NEWLINE#", "#UNINDENT#", "sproc", "cmd_", ",", "stdout", "=", "stdout", ",", "stderr", "=", "stderr", ",", "stdin", "=", "stdin", ")", "wait", ":", "cmd", "stop_at", "stop_at", "sproc", "sproc", "sproc"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [11, 13, 18, 2, 20, 22, 35, 36, 17, 37, 38, 39, 5, 8, 32, 3, 24, 26, 4, 28, 30, 1, 6, 14, 34, 7, 9, 10, 12]}}
{"prediction": {"error_location": 0.5823789834976196, "repair_targets": [], "repair_candidates": [0.1876199096441269, 0.0903165340423584, 0.07882427424192429, 0.022213317453861237, 0.023396160453557968, 0.05985581874847412, 0.06731940060853958, 0.16900400817394257, 0.07901883125305176, 0.03429645299911499, 0.00597830256447196, 0.005189999006688595, 0.001084393821656704, 0.002637252677232027, 0.09387359023094177, 0.012036250904202461, 0.0012740850215777755, 0.0012682050000876188, 0.00048276653978973627, 0.0011044414713978767, 0.005777972750365734, 0.001470412826165557, 0.009923151694238186, 0.0013195170322433114, 0.0015763180563226342, 0.007507702801376581, 0.011630935594439507, 0.01660318300127983, 0.007396799046546221], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 14:14:54.034846", "n_pass": [486, 58, 56], "n_token": 39, "loss": [0.4780881404876709, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "cmd", "stdout", "stderr", "stdin", "wait", "cmd", "pyline", "wait", "pyline", "pyline", "cmd_", "pyline", "cmd_", "cmd", "#UNINDENT#", "sproc", "cmd_", ",", "stdout", "=", "stdout", ",", "stderr", "=", "stderr", ",", "stdin", "=", "stdin", ")", "wait", ":", "cmd", "stop_at", "stop_at", "sproc", "sproc", "sproc"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [11, 13, 17, 2, 19, 21, 34, 35, 16, 36, 37, 38, 5, 8, 31, 3, 23, 25, 4, 27, 29, 1, 6, 14, 33, 7, 9, 10, 12]}}
{"prediction": {"error_location": 0.6199675798416138, "repair_targets": [], "repair_candidates": [0.08359045535326004, 0.04629119858145714, 0.032477617263793945, 0.011961045674979687, 0.01056674961000681, 0.020565597340464592, 0.01312650553882122, 0.02243724837899208, 0.01761596091091633, 0.009015879593789577, 0.0013518378837034106, 0.0005285689840093255, 9.758117812452838e-05, 0.0007284551975317299, 0.692126452922821, 0.007472374010831118, 0.0017266548238694668, 0.00315850623883307, 0.0007057705661281943, 0.0014360311906784773, 0.002966842148452997, 0.0006138821481727064, 0.003459685016423464, 0.00039122189627960324, 0.00044346193317323923, 0.002363354666158557, 0.003892398439347744, 0.0059446473605930805, 0.0029439954087138176], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 14:14:54.111790", "n_pass": [487, 59, 57], "n_token": 38, "loss": [0.8872284889221191, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "cmd", "stdout", "stderr", "stdin", "wait", "cmd", "pyline", "wait", "pyline", "pyline", "cmd_", "pyline", "cmd_", "cmd", "sproc", "cmd_", ",", "stdout", "=", "stdout", ",", "stderr", "=", "stderr", ",", "stdin", "=", "stdin", ")", "wait", ":", "cmd", "stop_at", "stop_at", "sproc", "sproc", "sproc"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [11, 13, 16, 2, 18, 20, 33, 34, 15, 35, 36, 37, 5, 8, 30, 3, 22, 24, 4, 26, 28, 1, 6, 14, 32, 7, 9, 10, 12]}}
{"prediction": {"error_location": 0.4117954671382904, "repair_targets": [], "repair_candidates": [0.2409413754940033, 0.12309598922729492, 0.08860518783330917, 0.0336792878806591, 0.03231097385287285, 0.055365268141031265, 0.047678347676992416, 0.07435572892427444, 0.04146796464920044, 0.02357570081949234, 0.004605990834534168, 0.002985832281410694, 0.0008939886465668678, 0.010103190317749977, 0.04146256670355797, 0.002016886603087187, 0.014959605410695076, 0.04452329874038696, 0.0008725564111955464, 0.0273102018982172, 0.0029259570874273777, 0.007047182414680719, 0.031939320266246796, 0.0009849502239376307, 0.0012395331868901849, 0.00536392442882061, 0.0092433150857687, 0.018973015248775482, 0.0114727932959795], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 14:14:54.188479", "n_pass": [490, 60, 58], "n_token": 37, "loss": [0.8847972750663757, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "cmd", "stdout", "stderr", "stdin", "wait", "cmd", "pyline", "wait", "pyline", "pyline", "cmd_", "pyline", "cmd_", "cmd", "sproc", "cmd_", "stdout", "=", "stdout", ",", "stderr", "=", "stderr", ",", "stdin", "=", "stdin", ")", "wait", ":", "cmd", "stop_at", "stop_at", "sproc", "sproc", "sproc"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [11, 13, 16, 2, 17, 19, 32, 33, 15, 34, 35, 36, 5, 8, 29, 3, 21, 23, 4, 25, 27, 1, 6, 14, 31, 7, 9, 10, 12]}}
{"prediction": {"error_location": 0.41279780864715576, "repair_targets": [], "repair_candidates": [0.2310398519039154, 0.11345364898443222, 0.08399952948093414, 0.02250041998922825, 0.021954655647277832, 0.05362816900014877, 0.03864847123622894, 0.0843135416507721, 0.05338168516755104, 0.022618547081947327, 0.004680559504777193, 0.003158535109832883, 0.0008407940622419119, 0.005190709605813026, 0.03835403174161911, 0.17791572213172913, 0.009135542437434196, 0.0002009110030485317, 0.0006678183563053608, 0.0010710309725254774, 0.0047554378397762775, 0.0005283281207084656, 0.0011360298376530409, 0.00026239632279612124, 0.0005634046392515302, 0.0030895869713276625, 0.006233804859220982, 0.011004568077623844, 0.005672274623066187], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 14:14:54.265206", "n_pass": [492, 61, 59], "n_token": 36, "loss": [0.9537796974182129, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "cmd", "stdout", "stderr", "stdin", "wait", "cmd", "pyline", "wait", "pyline", "pyline", "cmd_", "pyline", "cmd_", "cmd", "sproc", "cmd_", "stdout", "stdout", ",", "stderr", "=", "stderr", ",", "stdin", "=", "stdin", ")", "wait", ":", "cmd", "stop_at", "stop_at", "sproc", "sproc", "sproc"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [11, 13, 16, 2, 17, 18, 31, 32, 15, 33, 34, 35, 5, 8, 28, 3, 20, 22, 4, 24, 26, 1, 6, 14, 30, 7, 9, 10, 12]}}
{"prediction": {"error_location": 0.3852819800376892, "repair_targets": [], "repair_candidates": [0.3050038814544678, 0.15855732560157776, 0.14599041640758514, 0.022779781371355057, 0.018632369115948677, 0.047667134553194046, 0.030712660402059555, 0.11593402177095413, 0.08427666872739792, 0.022482482716441154, 0.003248615423217416, 0.0014814144233241677, 0.0003130470577161759, 0.000797061191406101, 0.0026113565545529127, 0.00215744087472558, 0.0026427926495671272, 9.395066444994882e-05, 0.005913500674068928, 0.0008810177096165717, 0.006200636737048626, 0.0005473463679663837, 0.0013278343249112368, 0.00021108219516463578, 0.00046948014642111957, 0.0025372174568474293, 0.00495569221675396, 0.0077551561407744884, 0.003818599972873926], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 14:14:54.418708", "n_pass": [496, 63, 60], "n_token": 35, "loss": [0.5248887538909912, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "cmd", "stdout", "stderr", "stdin", "wait", "cmd", "pyline", "wait", "pyline", "pyline", "cmd_", "pyline", "cmd_", "cmd", "sproc", "cmd_", "stdout", "stdout", ",", "stderr", "stderr", ",", "stdin", "=", "stdin", ")", "wait", ":", "cmd", "stop_at", "stop_at", "sproc", "sproc", "sproc"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [11, 13, 16, 2, 17, 18, 30, 31, 15, 32, 33, 34, 5, 8, 27, 3, 20, 21, 4, 23, 25, 1, 6, 14, 29, 7, 9, 10, 12]}}
{"prediction": {"error_location": 0.5916212201118469, "repair_targets": [], "repair_candidates": [0.21674811840057373, 0.10472321510314941, 0.060442592948675156, 0.017349354922771454, 0.02082424983382225, 0.07342252880334854, 0.05962204933166504, 0.1426045000553131, 0.05943742021918297, 0.0192679725587368, 0.004217588342726231, 0.00246468186378479, 0.00045151892118155956, 0.0011161301517859101, 0.0033837738446891308, 0.001394864753820002, 0.0020271658431738615, 0.00020196082186885178, 0.18705765902996063, 0.00017484871204942465, 0.004438950680196285, 0.0003030741645488888, 0.0009289763402193785, 0.00021423566795419902, 0.0004286640032660216, 0.0024820473045110703, 0.004956037737429142, 0.006593461614102125, 0.0027224000077694654], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 14:14:54.493833", "n_pass": [498, 64, 61], "n_token": 34, "loss": [0.7921884059906006, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "cmd", "stdout", "stderr", "stdin", "wait", "cmd", "pyline", "wait", "pyline", "pyline", "cmd_", "pyline", "cmd_", "cmd", "sproc", "cmd_", "stdout", "stdout", ",", "stderr", "stderr", "stdin", "=", "stdin", ")", "wait", ":", "cmd", "stop_at", "stop_at", "sproc", "sproc", "sproc"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [11, 13, 16, 2, 17, 18, 29, 30, 15, 31, 32, 33, 5, 8, 26, 3, 20, 21, 4, 22, 24, 1, 6, 14, 28, 7, 9, 10, 12]}}
{"prediction": {"error_location": 0.45285263657569885, "repair_targets": [], "repair_candidates": [0.26410147547721863, 0.1347343474626541, 0.09080501645803452, 0.009277868084609509, 0.009537903591990471, 0.047707829624414444, 0.044040169566869736, 0.25093981623649597, 0.0861678272485733, 0.015815798193216324, 0.002315433928743005, 0.0010878463508561254, 0.00026709778467193246, 0.000657862750813365, 0.0037245696876198053, 0.0017742977943271399, 0.003552630078047514, 0.0007464135996997356, 0.009907570667564869, 0.00260523846372962, 0.006416216026991606, 0.0011387637350708246, 0.0014283774653449655, 0.00021767342695966363, 0.0004124887636862695, 0.0017543332651257515, 0.002882464323192835, 0.0039892736822366714, 0.001993371406570077], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 14:14:54.569035", "n_pass": [500, 65, 62], "n_token": 33, "loss": [1.0734531879425049, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "cmd", "stdout", "stderr", "stdin", "wait", "cmd", "pyline", "wait", "pyline", "pyline", "cmd_", "pyline", "cmd_", "cmd", "sproc", "cmd_", "stdout", "stdout", ",", "stderr", "stderr", "stdin", "stdin", ")", "wait", ":", "cmd", "stop_at", "stop_at", "sproc", "sproc", "sproc"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [11, 13, 16, 2, 17, 18, 28, 29, 15, 30, 31, 32, 5, 8, 25, 3, 20, 21, 4, 22, 23, 1, 6, 14, 27, 7, 9, 10, 12]}}
{"prediction": {"error_location": 0.34182611107826233, "repair_targets": [], "repair_candidates": [0.16046848893165588, 0.06487299501895905, 0.05176464095711708, 0.00282727531157434, 0.0035782107152044773, 0.028820443898439407, 0.02359483763575554, 0.4690976142883301, 0.15207503736019135, 0.01777324266731739, 0.0028128279373049736, 0.0010310786310583353, 0.0002595897822175175, 0.0007917573093436658, 0.003444089787080884, 0.0009999672183766961, 0.002236839383840561, 0.0002900117542594671, 0.0030427323654294014, 7.835769793018699e-05, 0.0002489506150595844, 0.0009047388448379934, 0.004722835496068001, 9.511840471532196e-05, 0.00018343786359764636, 0.0007666586898267269, 0.0010296577820554376, 0.0014198839198797941, 0.0007687138277105987], "target_probs": 0.0}}




Minimal simplified tokens:

['#NEWLINE#', 'cmd', 'stdout', 'stderr', 'stdin', 'wait', 'cmd', 'pyline', 'wait', 'pyline', 'pyline', 'cmd_', 'pyline', 'cmd_', 'cmd', 'sproc', 'cmd_', 'stdout', 'stdout', ',', 'stderr', 'stderr', 'stdin', 'stdin', ')', 'wait', ':', 'cmd', 'stop_at', 'stop_at', 'sproc', 'sproc', 'sproc']
