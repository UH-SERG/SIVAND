
Original sample:

{"has_bug": false, "bug_kind": 0, "bug_kind_name": "NONE", "source_tokens": ["#NEWLINE#", "def run(", "message", ")", ":", "#NEWLINE#", "#INDENT#", "'\\n        Run\\n\\n        Run the custom plugin specific code. A returned\\n        string is the message that will be sent back\\n        to the user.\\n\\n        --\\n        @param  message:dict    The message sent by the user\\n\\n        @return str\\n    '", "#NEWLINE#", "text", "=", "message", "[", "'text'", "]", "#NEWLINE#", "if", "text", ".", "startswith", "(", "'@'", ")", ":", "#NEWLINE#", "#INDENT#", "text", "=", "text", ".", "split", "(", "' '", ",", "1", ")", "[", "1", "]", ".", "strip", "(", ")", "#NEWLINE#", "#UNINDENT#", "if", "text", ".", "startswith", "(", "'/'", ")", ":", "#NEWLINE#", "#INDENT#", "text", "=", "text", ".", "replace", "(", "'/'", ",", "''", ",", "1", ")", ".", "strip", "(", ")", "#NEWLINE#", "#UNINDENT#", "action", "=", "text", ".", "split", "(", "' '", ")", "[", "0", "]", ".", "strip", "(", ")", "#NEWLINE#", "if", "(", "action", "not in", "commands", "(", ")", ")", ":", "#NEWLINE#", "#INDENT#", "return", "\"Sorry, I don't know what to do with: {command}\"", ".", "format", "(", "command", "=", "action", ")", "#NEWLINE#", "#UNINDENT#", "for", "command", "in", "commands", "(", ")", ":", "#NEWLINE#", "#INDENT#", "text", "=", "ignore_case_replace", "(", "command", ",", "''", ",", "text", ")", ".", "strip", "(", ")", "#NEWLINE#", "#UNINDENT#", "if", "(", "text", "==", "'help'", ")", ":", "#NEWLINE#", "#INDENT#", "return", "_show_help", "(", ")", "#NEWLINE#", "#UNINDENT#", "if", "(", "text", "in", "[", "'neutral'", ",", "'explicit'", ",", "'chuck'", ",", "'all'", "]", ")", ":", "#NEWLINE#", "#INDENT#", "return", "pyjokes", ".", "get_joke", "(", "language", "=", "'en'", ",", "category", "=", "text", ")", "#NEWLINE#", "#UNINDENT#", "return", "pyjokes", ".", "get_joke", "(", "language", "=", "'en'", ",", "category", "=", "'all'", ")"], "error_location": [0], "repair_targets": [], "repair_candidates": [105, 112, 124, 2, 11, 9, 17, 26, 28, 46, 55, 57, 75, 120, 128, 138, 153, 179, 73, 91, 107], "provenances": [{"datasetProvenance": {"datasetName": "ETHPy150Open", "filepath": "leonjza/hogar/hogar/Plugins/Joke/main.py", "license": "mit", "note": "license: bigquery_api"}}], "txt_file": "eval__VARIABLE_MISUSE__SStuB.txt-00000-of-00300", "js_count": 3272, "results": {"model": "rnn", "prob": {"loc": [[0.7606701254844666, 1.966552417798084e-06, 1.7436186681152321e-06, 3.258878322753844e-08, 4.532088127007228e-08, 7.822658858458453e-07, 2.3349279842932447e-07, 3.6658053659266443e-07, 1.5318038322220673e-06, 1.8676055901778454e-07, 2.536653767037933e-07, 0.0011501640547066927, 2.961575873428046e-09, 2.275940687468392e-06, 6.180800937727327e-07, 5.696030029866961e-07, 2.472326343649911e-07, 1.4293076446847408e-06, 2.49136547836315e-07, 5.972517413965761e-08, 1.0300830126652727e-06, 9.25113090488594e-06, 3.382092117476532e-08, 2.972889205921092e-07, 1.5394690535686095e-06, 7.474505423488154e-07, 1.4860428620977473e-07, 1.7594227585959743e-07, 3.1335009680333314e-06, 7.913295974049106e-08, 1.48065723237778e-07, 7.879243213437803e-08, 5.196677079766232e-07, 3.5740342241297185e-08, 1.8606981484481366e-06, 9.55733554519611e-08, 2.6671447272974547e-08, 1.0878412695092265e-06, 3.8775947786007237e-08, 4.555998884825385e-07, 2.8822544351214674e-08, 5.06608159867028e-07, 9.77629156295734e-07, 2.42800098249063e-07, 1.0779601780086523e-06, 1.73285926052813e-07, 1.251758476428222e-06, 9.143046497683827e-08, 5.01578938383318e-08, 4.783337317348924e-07, 2.3520364266005345e-05, 1.844464208033969e-07, 4.064426946115418e-07, 1.1257069445491652e-06, 4.7525037416562554e-07, 1.8646763066954009e-07, 9.305335879616905e-08, 1.7372913134749979e-06, 1.2571869945077196e-07, 1.0351845958211925e-07, 5.591871286014793e-07, 6.0213415054022335e-06, 9.557909663726605e-08, 2.419195084257808e-07, 7.265043677762151e-08, 1.1232275483052945e-06, 5.526953827938996e-08, 6.279715876189584e-07, 5.95409161974203e-08, 1.4412736391022918e-06, 3.657021579783759e-06, 4.649315030746948e-07, 6.244957262424577e-07, 8.430089337707614e-08, 8.089713787740038e-08, 3.645356628112495e-06, 1.9910755710839112e-08, 8.236895610025385e-08, 3.07968228696609e-08, 1.5023007335912553e-06, 6.756515347206005e-08, 1.1630288732078498e-08, 1.1866543445648858e-06, 3.507969026372848e-08, 3.269027786245715e-07, 4.4662950671181534e-08, 9.366453923576046e-07, 7.56830240788986e-06, 6.438742730097147e-06, 4.6220751670489335e-08, 1.419850013917312e-05, 0.014332793653011322, 2.372032525954637e-07, 5.064014203526312e-07, 4.289971968773898e-07, 1.0488444786460605e-05, 4.0454622762808867e-07, 4.478187918266485e-07, 8.284039836325974e-07, 5.3767141849903055e-08, 9.802922562585081e-08, 2.0377095566459502e-08, 5.085788643555134e-07, 1.491101642159265e-08, 6.502760641069472e-08, 5.9359626902733e-07, 1.62417290994199e-06, 0.027105038985610008, 2.5662464508968696e-07, 8.138072757901682e-07, 7.062441000016406e-05, 1.4649668855781783e-07, 4.044193246954819e-07, 1.529283792933711e-07, 1.410438699167571e-06, 4.927106829200056e-07, 7.019888289505616e-05, 2.1151195142010693e-06, 6.995797775743995e-06, 1.3790410093861283e-06, 4.3368584101699525e-07, 7.024176085224099e-08, 5.123695245856652e-06, 3.6337445408207714e-07, 0.02635638602077961, 2.329187651639586e-07, 6.965643706280389e-07, 1.462472454250019e-07, 1.7709289750200696e-05, 7.062877394048428e-09, 2.0093430919132516e-07, 3.637240908460626e-08, 6.471706228694529e-07, 2.111525873260689e-06, 2.6905374284069694e-07, 3.6219815228832886e-05, 5.250339540907589e-08, 2.4808396119624376e-06, 0.03992746025323868, 7.31196081460439e-08, 3.300749813206494e-05, 5.03704143284267e-07, 9.736974249108243e-08, 1.167041574490213e-07, 8.268624895890753e-09, 1.583516109349148e-07, 1.808062165764568e-06, 2.931006903850175e-08, 3.1295351163862506e-06, 6.940823595869006e-07, 1.7224580005859025e-05, 4.880571324861194e-08, 1.3734982076130109e-06, 0.11454256623983383, 3.1433989988727262e-06, 8.006721145648044e-06, 4.889323008683277e-07, 1.45978589216611e-07, 6.130845122243045e-06, 1.5119651308737048e-08, 9.179978405882139e-06, 1.3160952505586465e-07, 5.303495345287956e-05, 7.238310217871913e-07, 3.7609737546517863e-07, 1.1118781912955455e-06, 9.819225397222908e-07, 3.43446764361488e-08, 3.557989103342152e-08, 1.5489226257159316e-07, 1.8270926105401486e-08, 1.7509162830720015e-07, 2.13527528103441e-06, 3.851490419037873e-06, 3.0674154913867824e-06, 0.00015339381934609264, 4.792064700609444e-08, 9.16549595331162e-07, 2.2949902813707013e-06, 0.014298683032393456, 4.0056937677945825e-07, 3.2180636821976805e-07, 2.0239613718331384e-07, 1.846085773138384e-08, 1.6314841388975765e-07, 1.650933434405033e-08, 8.673336537867726e-08, 1.3412461612460902e-06, 3.908104645233834e-06, 1.934004558279412e-06, 8.556661487091333e-05, 3.8110904654331534e-08, 6.201732389854442e-07, 8.383268834677438e-08, 0.0008584366296418011, 7.79224720304228e-08]], "pointer": [[0.0, 0.0, 0.15821798145771027, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.05667578801512718, 0.0, 0.0016693364595994353, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0011086479062214494, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.06454446911811829, 0.0, 0.00042545251199044287, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0013579383958131075, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.03099190816283226, 0.0, 0.00019818567670881748, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.2589419186115265, 0.0, 0.0003080643655266613, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.000736062997020781, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.021554213017225266, 0.0, 1.6556814443902113e-05, 0.0, 0.0, 0.0, 0.0, 0.13953354954719543, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.25370556116104126, 0.0, 0.0, 0.0, 0.0006896729464642704, 0.0, 0.0, 0.0, 0.0007292106165550649, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0003697842766996473, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.007961559109389782, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.00026415460160933435, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]], "target": [0.0]}, "loss": [0.2735554575920105, 0.0], "acc": [1.0, 0.0, 0.0, 0.0]}}


Trace of simplified code(s):

{"result": {"time": "2021-02-11 14:40:13.384627", "n_pass": [1, 1, 1], "n_token": 196, "loss": [0.27355554699897766, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def run(", "message", ")", ":", "#NEWLINE#", "#INDENT#", "'\\n        Run\\n\\n        Run the custom plugin specific code. A returned\\n        string is the message that will be sent back\\n        to the user.\\n\\n        --\\n        @param  message:dict    The message sent by the user\\n\\n        @return str\\n    '", "#NEWLINE#", "text", "=", "message", "[", "'text'", "]", "#NEWLINE#", "if", "text", ".", "startswith", "(", "'@'", ")", ":", "#NEWLINE#", "#INDENT#", "text", "=", "text", ".", "split", "(", "' '", ",", "1", ")", "[", "1", "]", ".", "strip", "(", ")", "#NEWLINE#", "#UNINDENT#", "if", "text", ".", "startswith", "(", "'/'", ")", ":", "#NEWLINE#", "#INDENT#", "text", "=", "text", ".", "replace", "(", "'/'", ",", "''", ",", "1", ")", ".", "strip", "(", ")", "#NEWLINE#", "#UNINDENT#", "action", "=", "text", ".", "split", "(", "' '", ")", "[", "0", "]", ".", "strip", "(", ")", "#NEWLINE#", "if", "(", "action", "not in", "commands", "(", ")", ")", ":", "#NEWLINE#", "#INDENT#", "return", "\"Sorry, I don't know what to do with: {command}\"", ".", "format", "(", "command", "=", "action", ")", "#NEWLINE#", "#UNINDENT#", "for", "command", "in", "commands", "(", ")", ":", "#NEWLINE#", "#INDENT#", "text", "=", "ignore_case_replace", "(", "command", ",", "''", ",", "text", ")", ".", "strip", "(", ")", "#NEWLINE#", "#UNINDENT#", "if", "(", "text", "==", "'help'", ")", ":", "#NEWLINE#", "#INDENT#", "return", "_show_help", "(", ")", "#NEWLINE#", "#UNINDENT#", "if", "(", "text", "in", "[", "'neutral'", ",", "'explicit'", ",", "'chuck'", ",", "'all'", "]", ")", ":", "#NEWLINE#", "#INDENT#", "return", "pyjokes", ".", "get_joke", "(", "language", "=", "'en'", ",", "category", "=", "text", ")", "#NEWLINE#", "#UNINDENT#", "return", "pyjokes", ".", "get_joke", "(", "language", "=", "'en'", ",", "category", "=", "'all'", ")"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [105, 112, 124, 2, 11, 9, 17, 26, 28, 46, 55, 57, 75, 120, 128, 138, 153, 179, 73, 91, 107]}}
{"prediction": {"error_location": 0.7606701254844666, "repair_targets": [], "repair_candidates": [0.15821798145771027, 0.05667578801512718, 0.0016693364595994353, 0.0011086479062214494, 0.06454446911811829, 0.00042545251199044287, 0.0013579383958131075, 0.03099190816283226, 0.00019818567670881748, 0.2589419186115265, 0.0003080643655266613, 0.000736062997020781, 0.021554213017225266, 1.6556814443902113e-05, 0.13953354954719543, 0.25370556116104126, 0.0006896729464642704, 0.0007292106165550649, 0.0003697842766996473, 0.007961559109389782, 0.00026415460160933435], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 14:40:13.547026", "n_pass": [49, 2, 2], "n_token": 184, "loss": [0.2841348648071289, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def run(", "message", ")", ":", "#NEWLINE#", "#INDENT#", "'\\n        Run\\n\\n        Run the custom plugin specific code. A returned\\n        string is the message that will be sent back\\n        to the user.\\n\\n        --\\n        @param  message:dict    The message sent by the user\\n\\n        @return str\\n    '", "#NEWLINE#", "text", "=", "message", "[", "'text'", "]", "#NEWLINE#", "if", "text", ".", "startswith", "(", "'@'", ")", ":", "#NEWLINE#", "#INDENT#", "text", "=", "text", ".", "split", "(", "' '", ",", "1", ")", "[", "1", "]", ".", "strip", "(", ")", "#NEWLINE#", "#UNINDENT#", "if", "text", ".", "startswith", "(", "'/'", ")", ":", "#NEWLINE#", "#INDENT#", "text", "=", "text", ".", "replace", "#UNINDENT#", "action", "=", "text", ".", "split", "(", "' '", ")", "[", "0", "]", ".", "strip", "(", ")", "#NEWLINE#", "if", "(", "action", "not in", "commands", "(", ")", ")", ":", "#NEWLINE#", "#INDENT#", "return", "\"Sorry, I don't know what to do with: {command}\"", ".", "format", "(", "command", "=", "action", ")", "#NEWLINE#", "#UNINDENT#", "for", "command", "in", "commands", "(", ")", ":", "#NEWLINE#", "#INDENT#", "text", "=", "ignore_case_replace", "(", "command", ",", "''", ",", "text", ")", ".", "strip", "(", ")", "#NEWLINE#", "#UNINDENT#", "if", "(", "text", "==", "'help'", ")", ":", "#NEWLINE#", "#INDENT#", "return", "_show_help", "(", ")", "#NEWLINE#", "#UNINDENT#", "if", "(", "text", "in", "[", "'neutral'", ",", "'explicit'", ",", "'chuck'", ",", "'all'", "]", ")", ":", "#NEWLINE#", "#INDENT#", "return", "pyjokes", ".", "get_joke", "(", "language", "=", "'en'", ",", "category", "=", "text", ")", "#NEWLINE#", "#UNINDENT#", "return", "pyjokes", ".", "get_joke", "(", "language", "=", "'en'", ",", "category", "=", "'all'", ")"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [93, 100, 112, 2, 11, 9, 17, 26, 28, 46, 55, 57, 63, 108, 116, 126, 141, 167, 61, 79, 95]}}
{"prediction": {"error_location": 0.7526652216911316, "repair_targets": [], "repair_candidates": [0.1125420555472374, 0.008081227540969849, 0.013371235691010952, 0.0004489135753829032, 0.0065853530541062355, 0.001195517717860639, 0.002490988466888666, 0.013221808709204197, 0.0003889179206453264, 0.7222678065299988, 0.00045070951455272734, 0.00041990316822193563, 0.012094497680664062, 8.538916517863981e-06, 0.04269728437066078, 0.05833079293370247, 0.00045477130333893, 0.0006070957169868052, 0.00015680844080634415, 0.004051597323268652, 0.00013420711911749095], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 14:40:13.698879", "n_pass": [57, 3, 3], "n_token": 171, "loss": [0.29149678349494934, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def run(", "message", ")", ":", "#NEWLINE#", "#INDENT#", "'\\n        Run\\n\\n        Run the custom plugin specific code. A returned\\n        string is the message that will be sent back\\n        to the user.\\n\\n        --\\n        @param  message:dict    The message sent by the user\\n\\n        @return str\\n    '", "#NEWLINE#", "text", "=", "message", "[", "'text'", "]", "#NEWLINE#", "if", "text", ".", "startswith", "(", "'@'", ")", ":", "#NEWLINE#", "#INDENT#", "text", "=", "text", ".", "split", "(", "' '", ",", "1", ")", "[", "1", "]", ".", "strip", "(", ")", "#NEWLINE#", "#UNINDENT#", "if", "text", ".", "startswith", "(", "'/'", ")", ":", "#NEWLINE#", "#INDENT#", "text", "=", "text", ".", "replace", "#UNINDENT#", "action", "=", "text", ".", "split", "(", "' '", ")", "[", "0", "]", ".", "strip", "(", ")", "#NEWLINE#", "if", "(", "action", "not in", "commands", "(", ")", ")", ":", "#NEWLINE#", "#INDENT#", "return", "\"Sorry, I don't know what to do with: {command}\"", ".", "format", "(", "command", "=", "action", ")", "#NEWLINE#", "#UNINDENT#", "for", "command", "in", "commands", "(", ")", ":", "#NEWLINE#", "#INDENT#", "text", "=", "ignore_case_replace", "(", "command", ",", "''", ",", "text", ")", ".", "strip", "(", ")", "#NEWLINE#", "#UNINDENT#", "if", "(", "text", "==", "'help'", ")", ":", "#NEWLINE#", "#INDENT#", "return", "_show_help", "(", ")", "#NEWLINE#", "#UNINDENT#", "if", "(", "text", "in", "[", "'neutral'", ".", "get_joke", "(", "language", "=", "'en'", ",", "category", "=", "text", ")", "#NEWLINE#", "#UNINDENT#", "return", "pyjokes", ".", "get_joke", "(", "language", "=", "'en'", ",", "category", "=", "'all'", ")"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [93, 100, 112, 2, 11, 9, 17, 26, 28, 46, 55, 57, 63, 108, 116, 126, 141, 154, 61, 79, 95]}}
{"prediction": {"error_location": 0.7471445202827454, "repair_targets": [], "repair_candidates": [0.10563308745622635, 0.007492577191442251, 0.013671093620359898, 0.000457710528280586, 0.005757191218435764, 0.0011902182595804334, 0.0025272511411458254, 0.013275344856083393, 0.00027663458604365587, 0.7153992652893066, 0.00044545033597387373, 0.0003718008811119944, 0.014767201617360115, 9.801693522604182e-06, 0.04114037752151489, 0.07077034562826157, 0.0003184812667313963, 0.0004330975061748177, 0.00014243445184547454, 0.00577615387737751, 0.0001444780791644007], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 14:40:13.842416", "n_pass": [59, 4, 4], "n_token": 158, "loss": [0.2524228096008301, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def run(", "message", ")", ":", "#NEWLINE#", "#INDENT#", "'\\n        Run\\n\\n        Run the custom plugin specific code. A returned\\n        string is the message that will be sent back\\n        to the user.\\n\\n        --\\n        @param  message:dict    The message sent by the user\\n\\n        @return str\\n    '", "#NEWLINE#", "text", "=", "message", "[", "'text'", "]", "#NEWLINE#", "if", "text", ".", "startswith", "(", "'@'", ")", ":", "#NEWLINE#", "#INDENT#", "text", "=", "text", ".", "split", "(", "' '", ",", "1", ")", "[", "1", "]", ".", "strip", "(", ")", "#NEWLINE#", "#UNINDENT#", "if", "text", ".", "startswith", "(", "'/'", ")", ":", "#NEWLINE#", "#INDENT#", "text", "=", "text", ".", "replace", "#UNINDENT#", "action", "=", "text", ".", "split", "(", "' '", ")", "[", "0", "]", ".", "strip", "(", ")", "#NEWLINE#", "if", "(", "action", "not in", "commands", "(", ")", ")", ":", "#NEWLINE#", "#INDENT#", "return", "\"Sorry, I don't know what to do with: {command}\"", ".", "format", "(", "command", "=", "action", ")", "#NEWLINE#", "#UNINDENT#", "for", "command", "in", "commands", "(", ")", ":", "#NEWLINE#", "#INDENT#", "text", "=", "ignore_case_replace", "(", "command", ",", "''", ",", "text", ")", ".", "strip", "(", ")", "#NEWLINE#", "#UNINDENT#", "if", "(", "text", "==", "'help'", ")", ":", "#NEWLINE#", "#INDENT#", "return", "_show_help", "(", ")", "#NEWLINE#", "#UNINDENT#", "if", "(", "text", "in", "[", "'neutral'", ".", "get_joke", "(", "language", "=", "'en'", ",", "category", "=", "text", ")", "#NEWLINE#", "#UNINDENT#"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [93, 100, 112, 2, 11, 9, 17, 26, 28, 46, 55, 57, 63, 108, 116, 126, 141, 154, 61, 79, 95]}}
{"prediction": {"error_location": 0.7769160866737366, "repair_targets": [], "repair_candidates": [0.07769696414470673, 0.005299543961882591, 0.015386849641799927, 0.000270037999143824, 0.00560794910416007, 0.0011839369544759393, 0.0016588562866672873, 0.011495516635477543, 0.00024404651776421815, 0.7811868786811829, 0.00039666093653067946, 0.00028334170929156244, 0.01191623229533434, 7.70310634834459e-06, 0.04005654901266098, 0.04381394386291504, 0.0002593944955151528, 0.0002696427400223911, 0.00010597980144666508, 0.0027732253074645996, 8.676158176967874e-05], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 14:40:13.987741", "n_pass": [102, 5, 5], "n_token": 152, "loss": [0.2844443619251251, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def run(", "message", ")", ":", "#NEWLINE#", "#INDENT#", "'\\n        Run\\n\\n        Run the custom plugin specific code. A returned\\n        string is the message that will be sent back\\n        to the user.\\n\\n        --\\n        @param  message:dict    The message sent by the user\\n\\n        @return str\\n    '", "#NEWLINE#", "text", "=", "message", "[", "'text'", "]", "#NEWLINE#", "if", "text", "#NEWLINE#", "#INDENT#", "text", "=", "text", ".", "split", "(", "' '", ",", "1", ")", "[", "1", "]", ".", "strip", "(", ")", "#NEWLINE#", "#UNINDENT#", "if", "text", ".", "startswith", "(", "'/'", ")", ":", "#NEWLINE#", "#INDENT#", "text", "=", "text", ".", "replace", "#UNINDENT#", "action", "=", "text", ".", "split", "(", "' '", ")", "[", "0", "]", ".", "strip", "(", ")", "#NEWLINE#", "if", "(", "action", "not in", "commands", "(", ")", ")", ":", "#NEWLINE#", "#INDENT#", "return", "\"Sorry, I don't know what to do with: {command}\"", ".", "format", "(", "command", "=", "action", ")", "#NEWLINE#", "#UNINDENT#", "for", "command", "in", "commands", "(", ")", ":", "#NEWLINE#", "#INDENT#", "text", "=", "ignore_case_replace", "(", "command", ",", "''", ",", "text", ")", ".", "strip", "(", ")", "#NEWLINE#", "#UNINDENT#", "if", "(", "text", "==", "'help'", ")", ":", "#NEWLINE#", "#INDENT#", "return", "_show_help", "(", ")", "#NEWLINE#", "#UNINDENT#", "if", "(", "text", "in", "[", "'neutral'", ".", "get_joke", "(", "language", "=", "'en'", ",", "category", "=", "text", ")", "#NEWLINE#", "#UNINDENT#"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [87, 94, 106, 2, 11, 9, 17, 20, 22, 40, 49, 51, 57, 102, 110, 120, 135, 148, 55, 73, 89]}}
{"prediction": {"error_location": 0.7524322271347046, "repair_targets": [], "repair_candidates": [0.13681361079216003, 0.011443832889199257, 0.01696549914777279, 0.00026797197642736137, 0.008414479903876781, 0.0010004250798374414, 0.00208488991484046, 0.011220371350646019, 0.0002475187066011131, 0.7196236252784729, 0.0003677211352623999, 0.00028831535018980503, 0.010895170271396637, 1.0177690455748234e-05, 0.03726646304130554, 0.038773197680711746, 0.00030453564249910414, 0.0003284704580437392, 0.0001208922840305604, 0.0034598323982208967, 0.00010307973570888862], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 14:40:14.124367", "n_pass": [104, 6, 6], "n_token": 146, "loss": [0.27686962485313416, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def run(", "message", ")", ":", "#NEWLINE#", "#INDENT#", "'\\n        Run\\n\\n        Run the custom plugin specific code. A returned\\n        string is the message that will be sent back\\n        to the user.\\n\\n        --\\n        @param  message:dict    The message sent by the user\\n\\n        @return str\\n    '", "#NEWLINE#", "text", "=", "message", "[", "'text'", "]", "#NEWLINE#", "if", "text", "#NEWLINE#", "#INDENT#", "text", "=", "text", ".", "[", "1", "]", ".", "strip", "(", ")", "#NEWLINE#", "#UNINDENT#", "if", "text", ".", "startswith", "(", "'/'", ")", ":", "#NEWLINE#", "#INDENT#", "text", "=", "text", ".", "replace", "#UNINDENT#", "action", "=", "text", ".", "split", "(", "' '", ")", "[", "0", "]", ".", "strip", "(", ")", "#NEWLINE#", "if", "(", "action", "not in", "commands", "(", ")", ")", ":", "#NEWLINE#", "#INDENT#", "return", "\"Sorry, I don't know what to do with: {command}\"", ".", "format", "(", "command", "=", "action", ")", "#NEWLINE#", "#UNINDENT#", "for", "command", "in", "commands", "(", ")", ":", "#NEWLINE#", "#INDENT#", "text", "=", "ignore_case_replace", "(", "command", ",", "''", ",", "text", ")", ".", "strip", "(", ")", "#NEWLINE#", "#UNINDENT#", "if", "(", "text", "==", "'help'", ")", ":", "#NEWLINE#", "#INDENT#", "return", "_show_help", "(", ")", "#NEWLINE#", "#UNINDENT#", "if", "(", "text", "in", "[", "'neutral'", ".", "get_joke", "(", "language", "=", "'en'", ",", "category", "=", "text", ")", "#NEWLINE#", "#UNINDENT#"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [81, 88, 100, 2, 11, 9, 17, 20, 22, 34, 43, 45, 51, 96, 104, 114, 129, 142, 49, 67, 83]}}
{"prediction": {"error_location": 0.7581533193588257, "repair_targets": [], "repair_candidates": [0.15834040939807892, 0.013471337035298347, 0.020219381898641586, 0.0003334413922857493, 0.009100611321628094, 0.002045162720605731, 0.0028499888721853495, 0.012064050883054733, 0.000255170016316697, 0.6744981408119202, 0.00046284132986329496, 0.00039742098306305707, 0.0140495290979743, 1.0560588634689339e-05, 0.044418979436159134, 0.0428127646446228, 0.0003535445430316031, 0.0003134666185360402, 0.0001113700054702349, 0.0037720713298767805, 0.00011967735918005928], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 14:40:14.392231", "n_pass": [107, 8, 7], "n_token": 140, "loss": [0.23118598759174347, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def run(", "message", ")", ":", "#NEWLINE#", "#INDENT#", "'\\n        Run\\n\\n        Run the custom plugin specific code. A returned\\n        string is the message that will be sent back\\n        to the user.\\n\\n        --\\n        @param  message:dict    The message sent by the user\\n\\n        @return str\\n    '", "#NEWLINE#", "text", "=", "message", "[", "'text'", "]", "#NEWLINE#", "if", "text", "#NEWLINE#", "#INDENT#", "text", "=", "text", ".", "[", "1", "]", ".", "strip", "(", ")", "#NEWLINE#", "#UNINDENT#", "if", "text", ".", "#INDENT#", "text", "=", "text", ".", "replace", "#UNINDENT#", "action", "=", "text", ".", "split", "(", "' '", ")", "[", "0", "]", ".", "strip", "(", ")", "#NEWLINE#", "if", "(", "action", "not in", "commands", "(", ")", ")", ":", "#NEWLINE#", "#INDENT#", "return", "\"Sorry, I don't know what to do with: {command}\"", ".", "format", "(", "command", "=", "action", ")", "#NEWLINE#", "#UNINDENT#", "for", "command", "in", "commands", "(", ")", ":", "#NEWLINE#", "#INDENT#", "text", "=", "ignore_case_replace", "(", "command", ",", "''", ",", "text", ")", ".", "strip", "(", ")", "#NEWLINE#", "#UNINDENT#", "if", "(", "text", "==", "'help'", ")", ":", "#NEWLINE#", "#INDENT#", "return", "_show_help", "(", ")", "#NEWLINE#", "#UNINDENT#", "if", "(", "text", "in", "[", "'neutral'", ".", "get_joke", "(", "language", "=", "'en'", ",", "category", "=", "text", ")", "#NEWLINE#", "#UNINDENT#"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [75, 82, 94, 2, 11, 9, 17, 20, 22, 34, 37, 39, 45, 90, 98, 108, 123, 136, 43, 61, 77]}}
{"prediction": {"error_location": 0.7935917973518372, "repair_targets": [], "repair_candidates": [0.14020708203315735, 0.022298483178019524, 0.011864786967635155, 0.00057371542789042, 0.013113513588905334, 0.0021793702617287636, 0.0017846169648692012, 0.00725948391482234, 0.0006561973132193089, 0.6444255709648132, 0.0006651811418123543, 0.0007462755311280489, 0.014218425378203392, 1.798850644263439e-05, 0.0618877150118351, 0.06997154653072357, 0.0005225838394835591, 0.0005239519523456693, 0.00019857502775266767, 0.006680062040686607, 0.00020481554383877665], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 14:40:14.523750", "n_pass": [110, 9, 8], "n_token": 134, "loss": [0.22124861180782318, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def run(", "message", ")", ":", "#NEWLINE#", "#INDENT#", "'\\n        Run\\n\\n        Run the custom plugin specific code. A returned\\n        string is the message that will be sent back\\n        to the user.\\n\\n        --\\n        @param  message:dict    The message sent by the user\\n\\n        @return str\\n    '", "#NEWLINE#", "text", "=", "message", "[", "'text'", "]", "#NEWLINE#", "if", "text", "#NEWLINE#", "#INDENT#", "text", "=", "text", ".", "[", "1", "]", ".", "strip", "(", ")", "#NEWLINE#", "#UNINDENT#", "if", "text", ".", "#INDENT#", "text", "=", "text", ".", "replace", "#UNINDENT#", "action", "=", "text", ".", "split", ".", "strip", "(", ")", "#NEWLINE#", "if", "(", "action", "not in", "commands", "(", ")", ")", ":", "#NEWLINE#", "#INDENT#", "return", "\"Sorry, I don't know what to do with: {command}\"", ".", "format", "(", "command", "=", "action", ")", "#NEWLINE#", "#UNINDENT#", "for", "command", "in", "commands", "(", ")", ":", "#NEWLINE#", "#INDENT#", "text", "=", "ignore_case_replace", "(", "command", ",", "''", ",", "text", ")", ".", "strip", "(", ")", "#NEWLINE#", "#UNINDENT#", "if", "(", "text", "==", "'help'", ")", ":", "#NEWLINE#", "#INDENT#", "return", "_show_help", "(", ")", "#NEWLINE#", "#UNINDENT#", "if", "(", "text", "in", "[", "'neutral'", ".", "get_joke", "(", "language", "=", "'en'", ",", "category", "=", "text", ")", "#NEWLINE#", "#UNINDENT#"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [69, 76, 88, 2, 11, 9, 17, 20, 22, 34, 37, 39, 45, 84, 92, 102, 117, 130, 43, 55, 71]}}
{"prediction": {"error_location": 0.8015174865722656, "repair_targets": [], "repair_candidates": [0.12453552335500717, 0.017991259694099426, 0.01088816300034523, 0.0004596339713316411, 0.00989125669002533, 0.0017718450399115682, 0.001574781141243875, 0.006116504315286875, 0.0007541580707766116, 0.6973709464073181, 0.0004692200745921582, 0.00032124598510563374, 0.01593344658613205, 1.1269568858551793e-05, 0.05368753895163536, 0.05094639211893082, 0.00046738985111005604, 0.0004883511574007571, 0.00017339350597467273, 0.0059622107073664665, 0.0001854898000601679], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 14:40:14.651404", "n_pass": [111, 10, 9], "n_token": 128, "loss": [0.2640198767185211, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def run(", "message", ")", ":", "#NEWLINE#", "#INDENT#", "'\\n        Run\\n\\n        Run the custom plugin specific code. A returned\\n        string is the message that will be sent back\\n        to the user.\\n\\n        --\\n        @param  message:dict    The message sent by the user\\n\\n        @return str\\n    '", "#NEWLINE#", "text", "=", "message", "[", "'text'", "]", "#NEWLINE#", "if", "text", "#NEWLINE#", "#INDENT#", "text", "=", "text", ".", "[", "1", "]", ".", "strip", "(", ")", "#NEWLINE#", "#UNINDENT#", "if", "text", ".", "#INDENT#", "text", "=", "text", ".", "replace", "#UNINDENT#", "action", "=", "text", ".", "split", "(", "action", "not in", "commands", "(", ")", ")", ":", "#NEWLINE#", "#INDENT#", "return", "\"Sorry, I don't know what to do with: {command}\"", ".", "format", "(", "command", "=", "action", ")", "#NEWLINE#", "#UNINDENT#", "for", "command", "in", "commands", "(", ")", ":", "#NEWLINE#", "#INDENT#", "text", "=", "ignore_case_replace", "(", "command", ",", "''", ",", "text", ")", ".", "strip", "(", ")", "#NEWLINE#", "#UNINDENT#", "if", "(", "text", "==", "'help'", ")", ":", "#NEWLINE#", "#INDENT#", "return", "_show_help", "(", ")", "#NEWLINE#", "#UNINDENT#", "if", "(", "text", "in", "[", "'neutral'", ".", "get_joke", "(", "language", "=", "'en'", ",", "category", "=", "text", ")", "#NEWLINE#", "#UNINDENT#"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [63, 70, 82, 2, 11, 9, 17, 20, 22, 34, 37, 39, 45, 78, 86, 96, 111, 124, 43, 49, 65]}}
{"prediction": {"error_location": 0.7679582834243774, "repair_targets": [], "repair_candidates": [0.18952389061450958, 0.03194286301732063, 0.01700102537870407, 0.0008548666373826563, 0.01811268739402294, 0.0026273136027157307, 0.0025852073449641466, 0.007493572775274515, 0.0008351218421012163, 0.5626790523529053, 0.0001775343989720568, 0.0007984390249475837, 0.017266130074858665, 2.0982408386771567e-05, 0.07059074193239212, 0.06748398393392563, 0.0008598816930316389, 0.0007168438751250505, 0.0002589883515611291, 0.007879761978983879, 0.00029108376475051045], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 14:40:14.776710", "n_pass": [113, 11, 10], "n_token": 122, "loss": [0.2695826590061188, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def run(", "message", ")", ":", "#NEWLINE#", "#INDENT#", "'\\n        Run\\n\\n        Run the custom plugin specific code. A returned\\n        string is the message that will be sent back\\n        to the user.\\n\\n        --\\n        @param  message:dict    The message sent by the user\\n\\n        @return str\\n    '", "#NEWLINE#", "text", "=", "message", "[", "'text'", "]", "#NEWLINE#", "if", "text", "#NEWLINE#", "#INDENT#", "text", "=", "text", ".", "[", "1", "]", ".", "strip", "(", ")", "#NEWLINE#", "#UNINDENT#", "if", "text", ".", "#INDENT#", "text", "=", "text", ".", "replace", "#UNINDENT#", "action", "=", "text", ".", "split", "(", "action", "not in", "commands", "(", ")", ".", "format", "(", "command", "=", "action", ")", "#NEWLINE#", "#UNINDENT#", "for", "command", "in", "commands", "(", ")", ":", "#NEWLINE#", "#INDENT#", "text", "=", "ignore_case_replace", "(", "command", ",", "''", ",", "text", ")", ".", "strip", "(", ")", "#NEWLINE#", "#UNINDENT#", "if", "(", "text", "==", "'help'", ")", ":", "#NEWLINE#", "#INDENT#", "return", "_show_help", "(", ")", "#NEWLINE#", "#UNINDENT#", "if", "(", "text", "in", "[", "'neutral'", ".", "get_joke", "(", "language", "=", "'en'", ",", "category", "=", "text", ")", "#NEWLINE#", "#UNINDENT#"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [57, 64, 76, 2, 11, 9, 17, 20, 22, 34, 37, 39, 45, 72, 80, 90, 105, 118, 43, 49, 59]}}
{"prediction": {"error_location": 0.7636980414390564, "repair_targets": [], "repair_candidates": [0.29596036672592163, 0.04880018159747124, 0.02479397878050804, 0.0012354122009128332, 0.02639267034828663, 0.003698834218084812, 0.002873400691896677, 0.009147408418357372, 0.001275308313779533, 0.23549211025238037, 0.00014053475752007216, 0.00337604945525527, 0.19753915071487427, 0.0001483914238633588, 0.07264819741249084, 0.06369712203741074, 0.0010798727162182331, 0.0009602179052308202, 0.0003146039671264589, 0.010078812018036842, 0.0003473707474768162], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 14:40:14.899752", "n_pass": [116, 12, 11], "n_token": 116, "loss": [0.8055693507194519, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def run(", "message", ")", ":", "#NEWLINE#", "#INDENT#", "'\\n        Run\\n\\n        Run the custom plugin specific code. A returned\\n        string is the message that will be sent back\\n        to the user.\\n\\n        --\\n        @param  message:dict    The message sent by the user\\n\\n        @return str\\n    '", "#NEWLINE#", "text", "=", "message", "[", "'text'", "]", "#NEWLINE#", "if", "text", "#NEWLINE#", "#INDENT#", "text", "=", "text", ".", "[", "1", "]", ".", "strip", "(", ")", "#NEWLINE#", "#UNINDENT#", "if", "text", ".", "#INDENT#", "text", "=", "text", ".", "replace", "#UNINDENT#", "action", "=", "text", ".", "split", "(", "action", "not in", "commands", "(", ")", ".", "format", "(", "command", "=", "action", ")", "#NEWLINE#", "#UNINDENT#", "for", "command", "in", "text", "=", "ignore_case_replace", "(", "command", ",", "''", ",", "text", ")", ".", "strip", "(", ")", "#NEWLINE#", "#UNINDENT#", "if", "(", "text", "==", "'help'", ")", ":", "#NEWLINE#", "#INDENT#", "return", "_show_help", "(", ")", "#NEWLINE#", "#UNINDENT#", "if", "(", "text", "in", "[", "'neutral'", ".", "get_joke", "(", "language", "=", "'en'", ",", "category", "=", "text", ")", "#NEWLINE#", "#UNINDENT#"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [57, 64, 70, 2, 11, 9, 17, 20, 22, 34, 37, 39, 45, 66, 74, 84, 99, 112, 43, 49, 59]}}
{"prediction": {"error_location": 0.44683340191841125, "repair_targets": [], "repair_candidates": [0.1640641838312149, 0.024230560287833214, 0.013150226324796677, 0.0005694745341315866, 0.012510683387517929, 0.0018309333827346563, 0.0011791973374783993, 0.004777653608471155, 0.0005308354739099741, 0.16045184433460236, 7.850358815630898e-05, 0.0016909821424633265, 0.033430781215429306, 6.813527579652146e-05, 0.5791153311729431, 0.0007725448231212795, 0.00025572741287760437, 0.0001276904222322628, 8.308181713800877e-05, 0.0009762138361111283, 0.00010541127994656563], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 14:40:15.136237", "n_pass": [121, 14, 12], "n_token": 110, "loss": [0.7014700770378113, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def run(", "message", ")", ":", "#NEWLINE#", "#INDENT#", "'\\n        Run\\n\\n        Run the custom plugin specific code. A returned\\n        string is the message that will be sent back\\n        to the user.\\n\\n        --\\n        @param  message:dict    The message sent by the user\\n\\n        @return str\\n    '", "#NEWLINE#", "text", "=", "message", "[", "'text'", "]", "#NEWLINE#", "if", "text", "#NEWLINE#", "#INDENT#", "text", "=", "text", ".", "[", "1", "]", ".", "strip", "(", ")", "#NEWLINE#", "#UNINDENT#", "if", "text", ".", "#INDENT#", "text", "=", "text", ".", "replace", "#UNINDENT#", "action", "=", "text", ".", "split", "(", "action", "not in", "commands", "(", ")", ".", "format", "(", "command", "=", "action", ")", "#NEWLINE#", "#UNINDENT#", "for", "command", "in", "text", "=", "ignore_case_replace", "(", "command", ",", "''", ",", "text", ")", ".", "strip", "(", ")", "#NEWLINE#", "#UNINDENT#", "if", "(", "text", "==", "'help'", ")", ":", "#NEWLINE#", "#UNINDENT#", "if", "(", "text", "in", "[", "'neutral'", ".", "get_joke", "(", "language", "=", "'en'", ",", "category", "=", "text", ")", "#NEWLINE#", "#UNINDENT#"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [57, 64, 70, 2, 11, 9, 17, 20, 22, 34, 37, 39, 45, 66, 74, 84, 93, 106, 43, 49, 59]}}
{"prediction": {"error_location": 0.4958558678627014, "repair_targets": [], "repair_candidates": [0.16562971472740173, 0.0240482110530138, 0.014534995891153812, 0.0006407857872545719, 0.013379027135670185, 0.001981179229915142, 0.0010388355003669858, 0.005854855291545391, 0.0004465241509024054, 0.20812749862670898, 9.305425191996619e-05, 0.0018711823504418135, 0.03681058809161186, 6.17495461483486e-05, 0.5237598419189453, 0.0007512532756663859, 0.00021047719928901643, 0.00013142266834620386, 0.00024060528085101396, 0.00029448443092405796, 9.373947250423953e-05], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 14:40:15.602482", "n_pass": [176, 18, 13], "n_token": 107, "loss": [1.046273946762085, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def run(", "message", ")", ":", "#NEWLINE#", "#INDENT#", "'\\n        Run\\n\\n        Run the custom plugin specific code. A returned\\n        string is the message that will be sent back\\n        to the user.\\n\\n        --\\n        @param  message:dict    The message sent by the user\\n\\n        @return str\\n    '", "#NEWLINE#", "text", "=", "message", "[", "'text'", "]", "#NEWLINE#", "if", "text", "#NEWLINE#", "#INDENT#", "text", "=", "text", ".", "[", "1", "]", ".", "strip", "(", ")", "#NEWLINE#", "#UNINDENT#", "if", "text", ".", "#INDENT#", "text", "=", "text", ".", "replace", "#UNINDENT#", "action", "=", "text", ".", "split", "(", "action", "not in", "commands", "(", ")", ".", "format", "(", "command", "=", "action", ")", "#NEWLINE#", "#UNINDENT#", "for", "command", "in", "text", "=", "ignore_case_replace", "(", "command", ",", "''", ",", "text", ")", ".", "strip", "(", ")", "#NEWLINE#", "#UNINDENT#", "if", "(", "text", "==", "'help'", ")", ":", "#NEWLINE#", "text", "in", "[", "'neutral'", ".", "get_joke", "(", "language", "=", "'en'", ",", "category", "=", "text", ")", "#NEWLINE#", "#UNINDENT#"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [57, 64, 70, 2, 11, 9, 17, 20, 22, 34, 37, 39, 45, 66, 74, 84, 90, 103, 43, 49, 59]}}
{"prediction": {"error_location": 0.35124415159225464, "repair_targets": [], "repair_candidates": [0.20256561040878296, 0.02952210046350956, 0.017823420464992523, 0.0008445855346508324, 0.012448112480342388, 0.002146882703527808, 0.0011855143820866942, 0.00669116573408246, 0.0006170171545818448, 0.23978190124034882, 0.00011766172247007489, 0.0020578873809427023, 0.056448981165885925, 7.501872460125014e-05, 0.4250807762145996, 0.0008460825774818659, 0.0002419346710667014, 0.00020424433751031756, 0.0005868041189387441, 0.0005948790931142867, 0.0001194905853481032], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 14:40:15.947829", "n_pass": [179, 21, 14], "n_token": 103, "loss": [0.9301164746284485, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def run(", "message", ")", ":", "#NEWLINE#", "#INDENT#", "'\\n        Run\\n\\n        Run the custom plugin specific code. A returned\\n        string is the message that will be sent back\\n        to the user.\\n\\n        --\\n        @param  message:dict    The message sent by the user\\n\\n        @return str\\n    '", "#NEWLINE#", "text", "=", "message", "[", "'text'", "]", "#NEWLINE#", "if", "text", "#NEWLINE#", "#INDENT#", "text", "=", "text", ".", "[", "1", "]", ".", "strip", "(", ")", "#NEWLINE#", "#UNINDENT#", "if", "text", ".", "#INDENT#", "text", "=", "text", ".", "replace", "#UNINDENT#", "action", "=", "text", ".", "split", "(", "action", "not in", "commands", "(", ")", ".", "format", "(", "command", "=", "action", ")", "#NEWLINE#", "#UNINDENT#", "for", "command", "in", "text", "=", "ignore_case_replace", "(", "command", ",", "''", ",", "text", ")", ".", "strip", "(", ")", "#NEWLINE#", "#UNINDENT#", "if", "(", "text", "==", "'help'", ")", ":", "#NEWLINE#", "text", "in", "[", "'neutral'", ".", "get_joke", "(", "language", "=", "text", ")", "#NEWLINE#", "#UNINDENT#"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [57, 64, 70, 2, 11, 9, 17, 20, 22, 34, 37, 39, 45, 66, 74, 84, 90, 99, 43, 49, 59]}}
{"prediction": {"error_location": 0.39450785517692566, "repair_targets": [], "repair_candidates": [0.14370787143707275, 0.019998494535684586, 0.013436433859169483, 0.0004540530208032578, 0.009236152283847332, 0.0018536488059908152, 0.0007088083657436073, 0.004964909050613642, 0.0005791084258817136, 0.16947400569915771, 7.193740020738915e-05, 0.0016127648996189237, 0.038637954741716385, 5.84078261454124e-05, 0.5925039052963257, 0.0006973342387937009, 0.00020854662579949945, 0.00017139548435807228, 0.00023233042156789452, 0.0013799197040498257, 1.2079246516805142e-05], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 14:40:16.164624", "n_pass": [183, 23, 15], "n_token": 100, "loss": [0.9340139627456665, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def run(", "message", ")", ":", "#NEWLINE#", "text", "=", "message", "[", "'text'", "]", "#NEWLINE#", "if", "text", "#NEWLINE#", "#INDENT#", "text", "=", "text", ".", "[", "1", "]", ".", "strip", "(", ")", "#NEWLINE#", "#UNINDENT#", "if", "text", ".", "#INDENT#", "text", "=", "text", ".", "replace", "#UNINDENT#", "action", "=", "text", ".", "split", "(", "action", "not in", "commands", "(", ")", ".", "format", "(", "command", "=", "action", ")", "#NEWLINE#", "#UNINDENT#", "for", "command", "in", "text", "=", "ignore_case_replace", "(", "command", ",", "''", ",", "text", ")", ".", "strip", "(", ")", "#NEWLINE#", "#UNINDENT#", "if", "(", "text", "==", "'help'", ")", ":", "#NEWLINE#", "text", "in", "[", "'neutral'", ".", "get_joke", "(", "language", "=", "text", ")", "#NEWLINE#", "#UNINDENT#"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [54, 61, 67, 2, 8, 6, 14, 17, 19, 31, 34, 36, 42, 63, 71, 81, 87, 96, 40, 46, 56]}}
{"prediction": {"error_location": 0.3929732143878937, "repair_targets": [], "repair_candidates": [0.09492681920528412, 0.03169196844100952, 0.008860038593411446, 0.0009340147371403873, 0.013113204389810562, 0.002298424718901515, 0.0010458609322085977, 0.005699983797967434, 0.0005703080096282065, 0.21682865917682648, 9.23940388020128e-05, 0.002021543215960264, 0.033151719719171524, 7.609990279888734e-05, 0.5862548351287842, 0.0006633682642132044, 0.00020091206533834338, 0.00016221335681620985, 0.0002396379568381235, 0.0011571410577744246, 1.0808515980897937e-05], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 14:40:16.271263", "n_pass": [185, 24, 16], "n_token": 97, "loss": [0.7676013708114624, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def run(", "message", ")", ":", "#NEWLINE#", "text", "=", "message", "#NEWLINE#", "if", "text", "#NEWLINE#", "#INDENT#", "text", "=", "text", ".", "[", "1", "]", ".", "strip", "(", ")", "#NEWLINE#", "#UNINDENT#", "if", "text", ".", "#INDENT#", "text", "=", "text", ".", "replace", "#UNINDENT#", "action", "=", "text", ".", "split", "(", "action", "not in", "commands", "(", ")", ".", "format", "(", "command", "=", "action", ")", "#NEWLINE#", "#UNINDENT#", "for", "command", "in", "text", "=", "ignore_case_replace", "(", "command", ",", "''", ",", "text", ")", ".", "strip", "(", ")", "#NEWLINE#", "#UNINDENT#", "if", "(", "text", "==", "'help'", ")", ":", "#NEWLINE#", "text", "in", "[", "'neutral'", ".", "get_joke", "(", "language", "=", "text", ")", "#NEWLINE#", "#UNINDENT#"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [51, 58, 64, 2, 8, 6, 11, 14, 16, 28, 31, 33, 39, 60, 68, 78, 84, 93, 37, 43, 53]}}
{"prediction": {"error_location": 0.46412503719329834, "repair_targets": [], "repair_candidates": [0.13128761947155, 0.0519820861518383, 0.0007508693961426616, 0.002907052868977189, 0.02828281559050083, 0.0019130496075376868, 0.001677001011557877, 0.008392837829887867, 0.0007894185837358236, 0.15764036774635315, 0.00013856776058673859, 0.0030006617307662964, 0.034584175795316696, 9.465174662182108e-05, 0.5716040730476379, 0.000977553310804069, 0.0003159826446790248, 0.0002530753263272345, 0.0003301218675915152, 0.0030614077113568783, 1.660634734435007e-05], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 14:40:16.377005", "n_pass": [189, 25, 17], "n_token": 94, "loss": [0.7559471726417542, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def run(", "message", ")", ":", "#NEWLINE#", "text", "=", "message", "#NEWLINE#", "if", "text", "#NEWLINE#", "#INDENT#", "text", "=", "text", ".", ".", "strip", "(", ")", "#NEWLINE#", "#UNINDENT#", "if", "text", ".", "#INDENT#", "text", "=", "text", ".", "replace", "#UNINDENT#", "action", "=", "text", ".", "split", "(", "action", "not in", "commands", "(", ")", ".", "format", "(", "command", "=", "action", ")", "#NEWLINE#", "#UNINDENT#", "for", "command", "in", "text", "=", "ignore_case_replace", "(", "command", ",", "''", ",", "text", ")", ".", "strip", "(", ")", "#NEWLINE#", "#UNINDENT#", "if", "(", "text", "==", "'help'", ")", ":", "#NEWLINE#", "text", "in", "[", "'neutral'", ".", "get_joke", "(", "language", "=", "text", ")", "#NEWLINE#", "#UNINDENT#"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [48, 55, 61, 2, 8, 6, 11, 14, 16, 25, 28, 30, 36, 57, 65, 75, 81, 90, 34, 40, 50]}}
{"prediction": {"error_location": 0.46956560015678406, "repair_targets": [], "repair_candidates": [0.14150044322013855, 0.06074537709355354, 0.0007950025028549135, 0.0030620729085057974, 0.029751265421509743, 0.0006101183244027197, 0.0015705323312431574, 0.009872141294181347, 0.0007186640286818147, 0.1454480141401291, 0.00011639759759418666, 0.0029263386968523264, 0.030035926029086113, 9.28117660805583e-05, 0.5667775273323059, 0.0012873470550403, 0.0003342379059176892, 0.0003068502410314977, 0.00040736974915489554, 0.0036250706762075424, 1.654165862419177e-05], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 14:40:16.585282", "n_pass": [191, 27, 18], "n_token": 91, "loss": [0.7809252738952637, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def run(", "message", ")", ":", "#NEWLINE#", "text", "=", "message", "#NEWLINE#", "if", "text", "#NEWLINE#", "#INDENT#", "text", "=", "text", ".", ".", "strip", "(", "if", "text", ".", "#INDENT#", "text", "=", "text", ".", "replace", "#UNINDENT#", "action", "=", "text", ".", "split", "(", "action", "not in", "commands", "(", ")", ".", "format", "(", "command", "=", "action", ")", "#NEWLINE#", "#UNINDENT#", "for", "command", "in", "text", "=", "ignore_case_replace", "(", "command", ",", "''", ",", "text", ")", ".", "strip", "(", ")", "#NEWLINE#", "#UNINDENT#", "if", "(", "text", "==", "'help'", ")", ":", "#NEWLINE#", "text", "in", "[", "'neutral'", ".", "get_joke", "(", "language", "=", "text", ")", "#NEWLINE#", "#UNINDENT#"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [45, 52, 58, 2, 8, 6, 11, 14, 16, 22, 25, 27, 33, 54, 62, 72, 78, 87, 31, 37, 47]}}
{"prediction": {"error_location": 0.4579820930957794, "repair_targets": [], "repair_candidates": [0.18184536695480347, 0.06409902125597, 0.0011586544569581747, 0.004499526694417, 0.024647414684295654, 0.0006616988684982061, 0.000278107967460528, 0.006228048820048571, 0.0008631431846879423, 0.1116209626197815, 9.821975254453719e-05, 0.002103492384776473, 0.02897201105952263, 0.00010197403753409162, 0.5661179423332214, 0.0015325965359807014, 0.00040208693826571107, 0.000373178074369207, 0.00043723531416617334, 0.003939911723136902, 1.9314387827762403e-05], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 14:40:16.687993", "n_pass": [198, 28, 19], "n_token": 88, "loss": [0.7068064212799072, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def run(", "message", ")", ":", "#NEWLINE#", "text", "=", "message", "#NEWLINE#", "if", "text", "#NEWLINE#", "#INDENT#", "text", "=", "text", ".", ".", "strip", "(", "if", "text", ".", "#INDENT#", "text", "=", "text", ".", "replace", "#UNINDENT#", "action", "=", "text", ".", "split", "(", "action", "not in", ".", "format", "(", "command", "=", "action", ")", "#NEWLINE#", "#UNINDENT#", "for", "command", "in", "text", "=", "ignore_case_replace", "(", "command", ",", "''", ",", "text", ")", ".", "strip", "(", ")", "#NEWLINE#", "#UNINDENT#", "if", "(", "text", "==", "'help'", ")", ":", "#NEWLINE#", "text", "in", "[", "'neutral'", ".", "get_joke", "(", "language", "=", "text", ")", "#NEWLINE#", "#UNINDENT#"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [42, 49, 55, 2, 8, 6, 11, 14, 16, 22, 25, 27, 33, 51, 59, 69, 75, 84, 31, 37, 44]}}
{"prediction": {"error_location": 0.49321675300598145, "repair_targets": [], "repair_candidates": [0.22156663239002228, 0.07674868404865265, 0.0014458317309617996, 0.005370546597987413, 0.02616271749138832, 0.0007383557967841625, 0.000261105305980891, 0.005942893214523792, 0.0010668697068467736, 0.08028034120798111, 0.00010143339022761211, 0.0028647638391703367, 0.03373285382986069, 8.938558312365785e-05, 0.5345562696456909, 0.0023123216815292835, 0.0005544953746721148, 0.0004886791575700045, 0.0005192807293497026, 0.005171352066099644, 2.5253895728383213e-05], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 14:40:16.788261", "n_pass": [199, 29, 20], "n_token": 85, "loss": [0.7290830612182617, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def run(", "message", ")", ":", "#NEWLINE#", "text", "=", "message", "#NEWLINE#", "if", "text", "#NEWLINE#", "#INDENT#", "text", "=", "text", ".", ".", "strip", "(", "if", "text", ".", "#INDENT#", "text", "=", "text", ".", "replace", "#UNINDENT#", "action", "=", "text", ".", "split", "(", "action", "not in", "command", "=", "action", ")", "#NEWLINE#", "#UNINDENT#", "for", "command", "in", "text", "=", "ignore_case_replace", "(", "command", ",", "''", ",", "text", ")", ".", "strip", "(", ")", "#NEWLINE#", "#UNINDENT#", "if", "(", "text", "==", "'help'", ")", ":", "#NEWLINE#", "text", "in", "[", "'neutral'", ".", "get_joke", "(", "language", "=", "text", ")", "#NEWLINE#", "#UNINDENT#"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [39, 46, 52, 2, 8, 6, 11, 14, 16, 22, 25, 27, 33, 48, 56, 66, 72, 81, 31, 37, 41]}}
{"prediction": {"error_location": 0.4823511838912964, "repair_targets": [], "repair_candidates": [0.16021253168582916, 0.07536862790584564, 0.0012128385715186596, 0.006186704151332378, 0.051360756158828735, 0.0010607200674712658, 0.00035256557748652995, 0.008816560730338097, 0.00099480792414397, 0.07608260959386826, 8.049113966990262e-05, 0.0003458565042819828, 0.021250970661640167, 0.00019304733723402023, 0.5887780785560608, 0.0022474511060863733, 0.0004394510469865054, 0.0004300849686842412, 0.0005037879454903305, 0.004061427433043718, 2.0667124772444367e-05], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 14:40:16.888334", "n_pass": [201, 30, 21], "n_token": 82, "loss": [0.5859721899032593, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def run(", "message", ")", ":", "#NEWLINE#", "text", "=", "message", "#NEWLINE#", "if", "text", "#NEWLINE#", "#INDENT#", "text", "=", "text", ".", ".", "strip", "(", "if", "text", ".", "#INDENT#", "text", "=", "text", ".", "replace", "#UNINDENT#", "action", "=", "text", ".", "split", "(", "action", "not in", "command", "=", "action", "for", "command", "in", "text", "=", "ignore_case_replace", "(", "command", ",", "''", ",", "text", ")", ".", "strip", "(", ")", "#NEWLINE#", "#UNINDENT#", "if", "(", "text", "==", "'help'", ")", ":", "#NEWLINE#", "text", "in", "[", "'neutral'", ".", "get_joke", "(", "language", "=", "text", ")", "#NEWLINE#", "#UNINDENT#"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [39, 43, 49, 2, 8, 6, 11, 14, 16, 22, 25, 27, 33, 45, 53, 63, 69, 78, 31, 37, 41]}}
{"prediction": {"error_location": 0.5565645098686218, "repair_targets": [], "repair_candidates": [0.06550494581460953, 0.019409744068980217, 0.0003952456754632294, 0.001291025779210031, 0.005135725252330303, 0.00016417809820268303, 5.325666643329896e-05, 0.0015129894018173218, 0.00014943981659598649, 0.1888665407896042, 6.147648673504591e-05, 0.00017949717584997416, 0.013855173252522945, 6.991010013734922e-05, 0.69873046875, 0.0014794600429013371, 0.00015043732128106058, 0.0001475675671827048, 0.00016706963651813567, 0.0026673448737710714, 8.585990144638345e-06], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 14:40:16.986087", "n_pass": [206, 31, 22], "n_token": 79, "loss": [0.5707128643989563, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def run(", "message", ")", ":", "#NEWLINE#", "text", "=", "message", "#NEWLINE#", "if", "text", "#NEWLINE#", "#INDENT#", "text", "=", "text", ".", ".", "strip", "(", "if", "text", ".", "#INDENT#", "text", "=", "text", ".", "replace", "#UNINDENT#", "action", "=", "text", ".", "split", "(", "action", "not in", "command", "=", "action", "for", "command", "in", "text", "=", "ignore_case_replace", "(", "command", ",", "''", ",", "text", "(", ")", "#NEWLINE#", "#UNINDENT#", "if", "(", "text", "==", "'help'", ")", ":", "#NEWLINE#", "text", "in", "[", "'neutral'", ".", "get_joke", "(", "language", "=", "text", ")", "#NEWLINE#", "#UNINDENT#"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [39, 43, 49, 2, 8, 6, 11, 14, 16, 22, 25, 27, 33, 45, 53, 60, 66, 75, 31, 37, 41]}}
{"prediction": {"error_location": 0.5651224255561829, "repair_targets": [], "repair_candidates": [0.10138057917356491, 0.03564829006791115, 0.0007379146409220994, 0.002702524187043309, 0.014749773778021336, 0.0004749622312374413, 0.00012932001845911145, 0.0036711220163851976, 0.0003688364813569933, 0.16965065896511078, 0.00011164158786414191, 0.00036883505526930094, 0.016795895993709564, 0.00011243610788369551, 0.6407272219657898, 0.0045737046748399734, 6.709463195875287e-05, 0.0007161293760873377, 0.0004922467051073909, 0.0065017445012927055, 1.9108167180093005e-05], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 14:40:17.081868", "n_pass": [207, 32, 23], "n_token": 76, "loss": [0.5640008449554443, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def run(", "message", ")", ":", "#NEWLINE#", "text", "=", "message", "#NEWLINE#", "if", "text", "#NEWLINE#", "#INDENT#", "text", "=", "text", ".", ".", "strip", "(", "if", "text", ".", "#INDENT#", "text", "=", "text", ".", "replace", "#UNINDENT#", "action", "=", "text", ".", "split", "(", "action", "not in", "command", "=", "action", "for", "command", "in", "text", "=", "ignore_case_replace", "(", "command", ",", "''", ",", "text", "#UNINDENT#", "if", "(", "text", "==", "'help'", ")", ":", "#NEWLINE#", "text", "in", "[", "'neutral'", ".", "get_joke", "(", "language", "=", "text", ")", "#NEWLINE#", "#UNINDENT#"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [39, 43, 49, 2, 8, 6, 11, 14, 16, 22, 25, 27, 33, 45, 53, 57, 63, 72, 31, 37, 41]}}
{"prediction": {"error_location": 0.5689283013343811, "repair_targets": [], "repair_candidates": [0.0600321888923645, 0.02005157247185707, 0.000452980340924114, 0.0014788861153647304, 0.006873937789350748, 0.00021503466996364295, 5.359613714972511e-05, 0.0015790121397003531, 0.00014983049186412245, 0.1789110153913498, 8.219362644013017e-05, 0.00026459834771230817, 0.015100209042429924, 8.843211981002241e-05, 0.7108669281005859, 0.0016613334883004427, 6.791508349124342e-05, 5.554248855332844e-05, 0.00012471748050302267, 0.0018813394708558917, 8.673628144606482e-06], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 14:40:17.176126", "n_pass": [208, 33, 24], "n_token": 73, "loss": [0.7203945517539978, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def run(", "message", ")", ":", "#NEWLINE#", "text", "=", "message", "#NEWLINE#", "if", "text", "#NEWLINE#", "#INDENT#", "text", "=", "text", ".", ".", "strip", "(", "if", "text", ".", "#INDENT#", "text", "=", "text", ".", "replace", "#UNINDENT#", "action", "=", "text", ".", "split", "(", "action", "not in", "command", "=", "action", "for", "command", "in", "text", "=", "ignore_case_replace", "(", "command", ",", "''", ",", "text", "text", "==", "'help'", ")", ":", "#NEWLINE#", "text", "in", "[", "'neutral'", ".", "get_joke", "(", "language", "=", "text", ")", "#NEWLINE#", "#UNINDENT#"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [39, 43, 49, 2, 8, 6, 11, 14, 16, 22, 25, 27, 33, 45, 53, 54, 60, 69, 31, 37, 41]}}
{"prediction": {"error_location": 0.48656025528907776, "repair_targets": [], "repair_candidates": [0.05181930586695671, 0.01673945225775242, 0.0004127727006562054, 0.0011451041791588068, 0.005637043155729771, 0.00011087626626249403, 3.405097231734544e-05, 0.001470091287046671, 0.00012514743139036, 0.1783459335565567, 6.675082840956748e-05, 0.0002188304060837254, 0.012450484558939934, 5.632697866531089e-05, 0.7293912768363953, 0.0013685160083696246, 3.755612124223262e-05, 3.779051257879473e-05, 3.1010979000711814e-05, 0.0004975234623998404, 4.156129762122873e-06], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 14:40:17.270962", "n_pass": [210, 34, 25], "n_token": 70, "loss": [0.7878955602645874, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def run(", "message", ")", ":", "#NEWLINE#", "text", "=", "message", "#NEWLINE#", "if", "text", "#NEWLINE#", "#INDENT#", "text", "=", "text", ".", ".", "strip", "(", "if", "text", ".", "#INDENT#", "text", "=", "text", ".", "replace", "#UNINDENT#", "action", "=", "text", ".", "split", "(", "action", "not in", "command", "=", "action", "for", "command", "in", "text", "=", "ignore_case_replace", "(", "command", ",", "''", ",", "text", "text", "==", "'help'", "text", "in", "[", "'neutral'", ".", "get_joke", "(", "language", "=", "text", ")", "#NEWLINE#", "#UNINDENT#"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [39, 43, 49, 2, 8, 6, 11, 14, 16, 22, 25, 27, 33, 45, 53, 54, 57, 66, 31, 37, 41]}}
{"prediction": {"error_location": 0.4548008441925049, "repair_targets": [], "repair_candidates": [0.0594780258834362, 0.019661223515868187, 0.0004663229046855122, 0.0012003034353256226, 0.007491015829145908, 0.00011063413694500923, 2.8589056455530226e-05, 0.0021333598997443914, 0.00015613585128448904, 0.19245164096355438, 7.91017955634743e-05, 0.0002401650999672711, 0.011086678132414818, 5.9564026742009446e-05, 0.7042630314826965, 0.0009964397177100182, 2.8485068469308317e-05, 3.746592119568959e-05, 1.556587994855363e-05, 1.3572737771028187e-05, 2.6679372240323573e-06], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 14:40:17.362279", "n_pass": [212, 35, 26], "n_token": 67, "loss": [0.717323362827301, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def run(", "message", ")", ":", "#NEWLINE#", "text", "=", "message", "#NEWLINE#", "if", "text", "#NEWLINE#", "#INDENT#", "text", "=", "text", ".", ".", "strip", "(", "if", "text", ".", "#INDENT#", "text", "=", "text", ".", "replace", "#UNINDENT#", "action", "=", "text", ".", "split", "(", "action", "not in", "command", "=", "action", "for", "command", "in", "text", "=", "ignore_case_replace", "(", "command", ",", "''", ",", "text", "text", "==", "'help'", "text", "in", "[", "(", "language", "=", "text", ")", "#NEWLINE#", "#UNINDENT#"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [39, 43, 49, 2, 8, 6, 11, 14, 16, 22, 25, 27, 33, 45, 53, 54, 57, 63, 31, 37, 41]}}
{"prediction": {"error_location": 0.48805686831474304, "repair_targets": [], "repair_candidates": [0.05655178800225258, 0.015764860436320305, 0.0005490292678587139, 0.0011693438282236457, 0.005623885430395603, 0.0001249246415682137, 2.621801286295522e-05, 0.0016150493174791336, 0.000133745459606871, 0.13495288789272308, 7.251144415931776e-05, 0.00037921461625956, 0.011848801746964455, 6.154283619252965e-05, 0.7697324156761169, 0.0012763973791152239, 4.0147442632587627e-05, 4.124011320527643e-05, 1.4030130842002109e-05, 1.6034575310186483e-05, 5.846526164532406e-06], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 14:40:17.452540", "n_pass": [213, 36, 27], "n_token": 64, "loss": [0.9449024200439453, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def run(", "message", ")", ":", "#NEWLINE#", "text", "=", "message", "#NEWLINE#", "if", "text", "#NEWLINE#", "#INDENT#", "text", "=", "text", ".", ".", "strip", "(", "if", "text", ".", "#INDENT#", "text", "=", "text", ".", "replace", "#UNINDENT#", "action", "=", "text", ".", "split", "(", "action", "not in", "command", "=", "action", "for", "command", "in", "text", "=", "ignore_case_replace", "(", "command", ",", "''", ",", "text", "text", "==", "'help'", "text", "in", "[", "text", ")", "#NEWLINE#", "#UNINDENT#"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [39, 43, 49, 2, 8, 6, 11, 14, 16, 22, 25, 27, 33, 45, 53, 54, 57, 60, 31, 37, 41]}}
{"prediction": {"error_location": 0.38871753215789795, "repair_targets": [], "repair_candidates": [0.06838822364807129, 0.015735868364572525, 0.0004322697059251368, 0.0011458563385531306, 0.003967895172536373, 0.000152002161485143, 2.8400434530340135e-05, 0.0014266555663198233, 0.00018513778923079371, 0.18673056364059448, 6.470295193139464e-05, 0.0005450356984511018, 0.01890859194099903, 8.288714161608368e-05, 0.7011233568191528, 0.0009659559582360089, 2.817149470502045e-05, 4.39559189544525e-05, 1.4736649063706864e-05, 1.6143561879289337e-05, 1.3534555364458356e-05], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 14:40:17.541205", "n_pass": [216, 37, 28], "n_token": 61, "loss": [0.7365462183952332, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def run(", "message", "text", "=", "message", "#NEWLINE#", "if", "text", "#NEWLINE#", "#INDENT#", "text", "=", "text", ".", ".", "strip", "(", "if", "text", ".", "#INDENT#", "text", "=", "text", ".", "replace", "#UNINDENT#", "action", "=", "text", ".", "split", "(", "action", "not in", "command", "=", "action", "for", "command", "in", "text", "=", "ignore_case_replace", "(", "command", ",", "''", ",", "text", "text", "==", "'help'", "text", "in", "[", "text", ")", "#NEWLINE#", "#UNINDENT#"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [36, 40, 46, 2, 5, 3, 8, 11, 13, 19, 22, 24, 30, 42, 50, 51, 54, 57, 28, 34, 38]}}
{"prediction": {"error_location": 0.4787645936012268, "repair_targets": [], "repair_candidates": [0.15555912256240845, 0.08192591369152069, 0.004085724242031574, 0.007281464524567127, 0.05065353214740753, 0.0008841122034937143, 0.00013088592095300555, 0.016462542116642, 0.00082929409109056, 0.20402251183986664, 0.00023213597887661308, 0.001958866836503148, 0.045057401061058044, 0.00025489082327112556, 0.41259628534317017, 0.017514558508992195, 0.00011370102583896369, 0.0002468832244630903, 6.138379831099883e-05, 8.416119089815766e-05, 4.465647361939773e-05], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 14:40:17.630040", "n_pass": [221, 38, 29], "n_token": 58, "loss": [0.5959915518760681, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def run(", "message", "text", "=", "message", "#NEWLINE#", "if", "text", "#NEWLINE#", "#INDENT#", "text", "=", "text", ".", "if", "text", ".", "#INDENT#", "text", "=", "text", ".", "replace", "#UNINDENT#", "action", "=", "text", ".", "split", "(", "action", "not in", "command", "=", "action", "for", "command", "in", "text", "=", "ignore_case_replace", "(", "command", ",", "''", ",", "text", "text", "==", "'help'", "text", "in", "[", "text", ")", "#NEWLINE#", "#UNINDENT#"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [33, 37, 43, 2, 5, 3, 8, 11, 13, 16, 19, 21, 27, 39, 47, 48, 51, 54, 25, 31, 35]}}
{"prediction": {"error_location": 0.5510159134864807, "repair_targets": [], "repair_candidates": [0.1718355119228363, 0.07664977014064789, 0.002302404958754778, 0.0068334368988871574, 0.049156542867422104, 0.0028625326231122017, 0.0005723561043851078, 0.016686895862221718, 0.004641535226255655, 0.18074823915958405, 0.00040866469498723745, 0.002728838939219713, 0.02989032492041588, 0.0005211190436966717, 0.44337552785873413, 0.010195030830800533, 0.00011855885531986132, 0.00022975883621256799, 6.157784082461149e-05, 0.0001259775017388165, 5.54334073967766e-05], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 14:40:17.718209", "n_pass": [279, 39, 30], "n_token": 57, "loss": [0.6304260492324829, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def run(", "message", "text", "=", "message", "#NEWLINE#", "if", "text", "#NEWLINE#", "text", "=", "text", ".", "if", "text", ".", "#INDENT#", "text", "=", "text", ".", "replace", "#UNINDENT#", "action", "=", "text", ".", "split", "(", "action", "not in", "command", "=", "action", "for", "command", "in", "text", "=", "ignore_case_replace", "(", "command", ",", "''", ",", "text", "text", "==", "'help'", "text", "in", "[", "text", ")", "#NEWLINE#", "#UNINDENT#"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [32, 36, 42, 2, 5, 3, 8, 10, 12, 15, 18, 20, 26, 38, 46, 47, 50, 53, 24, 30, 34]}}
{"prediction": {"error_location": 0.5323649048805237, "repair_targets": [], "repair_candidates": [0.22215841710567474, 0.0953696146607399, 0.0029115539509803057, 0.0071985977701842785, 0.04694264754652977, 0.003129342570900917, 0.0005809373687952757, 0.013827929273247719, 0.0029648453928530216, 0.17181658744812012, 0.00030642503406852484, 0.0018878012197092175, 0.028062596917152405, 0.0003148038231302053, 0.39282095432281494, 0.009306319989264011, 7.95930900494568e-05, 0.00016232120105996728, 4.260892092133872e-05, 7.787748472765088e-05, 3.811870192294009e-05], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 14:40:17.804168", "n_pass": [281, 40, 31], "n_token": 56, "loss": [0.5964407920837402, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def run(", "message", "text", "=", "message", "#NEWLINE#", "if", "text", "#NEWLINE#", "text", "text", ".", "if", "text", ".", "#INDENT#", "text", "=", "text", ".", "replace", "#UNINDENT#", "action", "=", "text", ".", "split", "(", "action", "not in", "command", "=", "action", "for", "command", "in", "text", "=", "ignore_case_replace", "(", "command", ",", "''", ",", "text", "text", "==", "'help'", "text", "in", "[", "text", ")", "#NEWLINE#", "#UNINDENT#"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [31, 35, 41, 2, 5, 3, 8, 10, 11, 14, 17, 19, 25, 37, 45, 46, 49, 52, 23, 29, 33]}}
{"prediction": {"error_location": 0.5507685542106628, "repair_targets": [], "repair_candidates": [0.19630713760852814, 0.09246169775724411, 0.0030282072257250547, 0.00868811085820198, 0.09865772724151611, 0.04604160040616989, 0.0010854069842025638, 0.027499953284859657, 0.003931031096726656, 0.1504248082637787, 0.00046476791612803936, 0.001995170721784234, 0.036801014095544815, 0.00042413410847075284, 0.31230372190475464, 0.01928389072418213, 8.872284524841234e-05, 0.00027452167705632746, 6.447421765187755e-05, 0.00012510262604337186, 4.875767990597524e-05], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 14:40:17.890581", "n_pass": [283, 41, 32], "n_token": 55, "loss": [0.7180910706520081, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def run(", "message", "text", "=", "message", "#NEWLINE#", "if", "text", "#NEWLINE#", "text", "text", "if", "text", ".", "#INDENT#", "text", "=", "text", ".", "replace", "#UNINDENT#", "action", "=", "text", ".", "split", "(", "action", "not in", "command", "=", "action", "for", "command", "in", "text", "=", "ignore_case_replace", "(", "command", ",", "''", ",", "text", "text", "==", "'help'", "text", "in", "[", "text", ")", "#NEWLINE#", "#UNINDENT#"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [30, 34, 40, 2, 5, 3, 8, 10, 11, 13, 16, 18, 24, 36, 44, 45, 48, 51, 22, 28, 32]}}
{"prediction": {"error_location": 0.4876823127269745, "repair_targets": [], "repair_candidates": [0.18181057274341583, 0.09886906296014786, 0.003205888206139207, 0.008284126408398151, 0.048645514994859695, 0.03829389065504074, 0.00027683289954438806, 0.017448341473937035, 0.0007958058849908412, 0.2167988121509552, 0.00017805167590267956, 0.0014378492487594485, 0.036333173513412476, 0.0002081841230392456, 0.33627331256866455, 0.010734915733337402, 8.345081732841209e-05, 0.00017774330626707524, 4.4278483983362094e-05, 6.687541463179514e-05, 3.333052518428303e-05], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 14:40:17.974588", "n_pass": [284, 42, 33], "n_token": 54, "loss": [0.6910209655761719, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def run(", "message", "text", "=", "message", "#NEWLINE#", "if", "text", "#NEWLINE#", "text", "text", "text", ".", "#INDENT#", "text", "=", "text", ".", "replace", "#UNINDENT#", "action", "=", "text", ".", "split", "(", "action", "not in", "command", "=", "action", "for", "command", "in", "text", "=", "ignore_case_replace", "(", "command", ",", "''", ",", "text", "text", "==", "'help'", "text", "in", "[", "text", ")", "#NEWLINE#", "#UNINDENT#"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [29, 33, 39, 2, 5, 3, 8, 10, 11, 12, 15, 17, 23, 35, 43, 44, 47, 50, 21, 27, 31]}}
{"prediction": {"error_location": 0.5010642409324646, "repair_targets": [], "repair_candidates": [0.12062910199165344, 0.06559260189533234, 0.002679693279787898, 0.008641019463539124, 0.08581923693418503, 0.12991963326931, 0.002157818991690874, 0.015610869973897934, 0.0008582462323829532, 0.24269741773605347, 0.00024253217270597816, 0.0013173155020922422, 0.030022628605365753, 0.00025840496527962387, 0.2837526798248291, 0.009431598708033562, 7.727045885985717e-05, 0.0001594033237779513, 4.160029493505135e-05, 6.0612172092078254e-05, 3.0372184482985176e-05], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 14:40:18.058980", "n_pass": [286, 43, 34], "n_token": 53, "loss": [0.7018283605575562, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def run(", "message", "text", "=", "message", "#NEWLINE#", "if", "text", "#NEWLINE#", "text", "text", "text", "#INDENT#", "text", "=", "text", ".", "replace", "#UNINDENT#", "action", "=", "text", ".", "split", "(", "action", "not in", "command", "=", "action", "for", "command", "in", "text", "=", "ignore_case_replace", "(", "command", ",", "''", ",", "text", "text", "==", "'help'", "text", "in", "[", "text", ")", "#NEWLINE#", "#UNINDENT#"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [28, 32, 38, 2, 5, 3, 8, 10, 11, 12, 14, 16, 22, 34, 42, 43, 46, 49, 20, 26, 30]}}
{"prediction": {"error_location": 0.4956780672073364, "repair_targets": [], "repair_candidates": [0.1872989535331726, 0.1073884665966034, 0.0037922600749880075, 0.008078021928668022, 0.03493036702275276, 0.016672179102897644, 0.003415179904550314, 0.007710884790867567, 0.00029662527958862484, 0.3289366662502289, 0.00020524559658952057, 0.001092460472136736, 0.025890469551086426, 0.000244480645051226, 0.26493844389915466, 0.00876021571457386, 6.30759823252447e-05, 0.00015948335931170732, 4.173021807218902e-05, 5.539312041946687e-05, 2.9398563128779642e-05], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 14:40:18.141999", "n_pass": [289, 44, 35], "n_token": 51, "loss": [0.7324484586715698, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def run(", "message", "text", "=", "message", "#NEWLINE#", "if", "text", "#NEWLINE#", "text", "text", "text", "#INDENT#", "text", "=", "text", "#UNINDENT#", "action", "=", "text", ".", "split", "(", "action", "not in", "command", "=", "action", "for", "command", "in", "text", "=", "ignore_case_replace", "(", "command", ",", "''", ",", "text", "text", "==", "'help'", "text", "in", "[", "text", ")", "#NEWLINE#", "#UNINDENT#"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [26, 30, 36, 2, 5, 3, 8, 10, 11, 12, 14, 16, 20, 32, 40, 41, 44, 47, 18, 24, 28]}}
{"prediction": {"error_location": 0.48073044419288635, "repair_targets": [], "repair_candidates": [0.25664520263671875, 0.1663113832473755, 0.006504109129309654, 0.009446078911423683, 0.026958433911204338, 0.010162290185689926, 0.0034262656699866056, 0.01741843670606613, 0.0005721126799471676, 0.24397972226142883, 9.450979996472597e-05, 0.0005569259519688785, 0.022090738639235497, 0.00016394289559684694, 0.2254340499639511, 0.009932138957083225, 3.5957553336629644e-05, 0.000152578140841797, 4.164058555033989e-05, 4.6594523155363277e-05, 2.6918816729448736e-05], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 14:40:18.225512", "n_pass": [292, 45, 36], "n_token": 49, "loss": [0.7283428907394409, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def run(", "message", "text", "=", "message", "#NEWLINE#", "if", "text", "#NEWLINE#", "text", "text", "text", "#INDENT#", "text", "=", "text", "#UNINDENT#", "action", "=", "text", "(", "action", "not in", "command", "=", "action", "for", "command", "in", "text", "=", "ignore_case_replace", "(", "command", ",", "''", ",", "text", "text", "==", "'help'", "text", "in", "[", "text", ")", "#NEWLINE#", "#UNINDENT#"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [24, 28, 34, 2, 5, 3, 8, 10, 11, 12, 14, 16, 20, 30, 38, 39, 42, 45, 18, 22, 26]}}
{"prediction": {"error_location": 0.48270830512046814, "repair_targets": [], "repair_candidates": [0.3252880275249481, 0.21424655616283417, 0.007099124602973461, 0.009832795709371567, 0.03143109381198883, 0.010316693224012852, 0.0031914031133055687, 0.019802939146757126, 0.0005118218250572681, 0.23612214624881744, 0.0014481254620477557, 0.004976730793714523, 0.01161306630820036, 0.00016771662922110409, 0.11442164331674576, 0.009219231083989143, 3.321639451314695e-05, 0.0001591462641954422, 4.299546344554983e-05, 4.762836761074141e-05, 2.783083800750319e-05], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 14:40:18.306850", "n_pass": [298, 46, 37], "n_token": 47, "loss": [0.7705342173576355, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def run(", "message", "text", "=", "message", "#NEWLINE#", "if", "text", "#NEWLINE#", "text", "text", "text", "#INDENT#", "text", "=", "text", "#UNINDENT#", "action", "=", "text", "(", "action", "not in", "command", "=", "action", "for", "command", "in", "text", "(", "command", ",", "''", ",", "text", "text", "==", "'help'", "text", "in", "[", "text", ")", "#NEWLINE#", "#UNINDENT#"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [24, 28, 32, 2, 5, 3, 8, 10, 11, 12, 14, 16, 20, 30, 36, 37, 40, 43, 18, 22, 26]}}
{"prediction": {"error_location": 0.46276572346687317, "repair_targets": [], "repair_candidates": [0.31002700328826904, 0.21718427538871765, 0.00796446017920971, 0.010013127699494362, 0.031131476163864136, 0.010413740761578083, 0.003383212024345994, 0.019441697746515274, 0.0006736796349287033, 0.2897905111312866, 0.0026984447613358498, 0.0026306291110813618, 0.009630685672163963, 0.00029098978848196566, 0.08306935429573059, 0.0010798906441777945, 0.00015181487833615392, 0.0002284741058247164, 6.901028245920315e-05, 8.651380630908534e-05, 4.1039598727365956e-05], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 14:40:18.387276", "n_pass": [300, 47, 38], "n_token": 45, "loss": [0.6199201345443726, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def run(", "message", "text", "=", "message", "#NEWLINE#", "if", "text", "#NEWLINE#", "text", "text", "text", "#INDENT#", "text", "=", "text", "#UNINDENT#", "action", "=", "text", "(", "action", "not in", "command", "=", "action", "for", "command", "in", "text", "(", "command", ",", "text", "text", "==", "'help'", "text", "in", "[", "text", ")", "#NEWLINE#", "#UNINDENT#"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [24, 28, 32, 2, 5, 3, 8, 10, 11, 12, 14, 16, 20, 30, 34, 35, 38, 41, 18, 22, 26]}}
{"prediction": {"error_location": 0.537987470626831, "repair_targets": [], "repair_candidates": [0.25580692291259766, 0.1650141328573227, 0.005706246942281723, 0.007428458891808987, 0.023777563124895096, 0.00741272047162056, 0.002432554727420211, 0.015489008277654648, 0.0005881719989702106, 0.4346674978733063, 0.0018505334155634046, 0.003475294215604663, 0.009069988504052162, 0.0002782843657769263, 0.06545424461364746, 0.0004224534786771983, 0.0008852948085404932, 7.039889896987006e-05, 3.117667438345961e-05, 0.00011305057705612853, 2.5996425392804667e-05], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 14:40:18.466925", "n_pass": [304, 48, 39], "n_token": 43, "loss": [0.6254806518554688, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def run(", "message", "text", "=", "message", "#NEWLINE#", "if", "text", "#NEWLINE#", "text", "text", "text", "#INDENT#", "text", "=", "text", "#UNINDENT#", "action", "=", "text", "(", "action", "not in", "command", "=", "action", "for", "command", "in", "text", "(", "command", ",", "text", "text", "==", "'help'", "text", "text", ")", "#NEWLINE#", "#UNINDENT#"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [24, 28, 32, 2, 5, 3, 8, 10, 11, 12, 14, 16, 20, 30, 34, 35, 38, 39, 18, 22, 26]}}
{"prediction": {"error_location": 0.5350042581558228, "repair_targets": [], "repair_candidates": [0.27261030673980713, 0.14179986715316772, 0.005838783923536539, 0.009116508066654205, 0.02424796111881733, 0.008182917721569538, 0.0037518709432333708, 0.016511691734194756, 0.001583754550665617, 0.4369112253189087, 0.002938199322670698, 0.006754958536475897, 0.009178534150123596, 0.0005665206699632108, 0.058970775455236435, 0.0004738882416859269, 0.00026397392502985895, 5.142364534549415e-05, 2.0694214981631376e-05, 0.0001369592937408015, 8.918156527215615e-05], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 14:40:18.546992", "n_pass": [306, 49, 40], "n_token": 41, "loss": [0.56145840883255, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def run(", "message", "text", "=", "message", "#NEWLINE#", "if", "text", "#NEWLINE#", "text", "text", "text", "#INDENT#", "text", "=", "text", "#UNINDENT#", "action", "=", "text", "(", "action", "not in", "command", "=", "action", "for", "command", "in", "text", "(", "command", ",", "text", "text", "==", "'help'", "text", "text", ")"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [24, 28, 32, 2, 5, 3, 8, 10, 11, 12, 14, 16, 20, 30, 34, 35, 38, 39, 18, 22, 26]}}
{"prediction": {"error_location": 0.5703765749931335, "repair_targets": [], "repair_candidates": [0.2607623040676117, 0.11933329701423645, 0.008083682507276535, 0.010614646598696709, 0.02772749774158001, 0.009473252110183239, 0.004472536034882069, 0.02532895840704441, 0.001212615636177361, 0.4309617280960083, 0.00354853761382401, 0.0067636859603226185, 0.011578841134905815, 0.0004724987084046006, 0.07834745198488235, 0.0005691404803656042, 0.0002863087283913046, 4.361473475000821e-05, 1.8683853340917267e-05, 0.0001990852615563199, 0.00020163480076007545], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 14:40:18.625269", "n_pass": [308, 50, 41], "n_token": 40, "loss": [0.7341508269309998, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "message", "text", "=", "message", "#NEWLINE#", "if", "text", "#NEWLINE#", "text", "text", "text", "#INDENT#", "text", "=", "text", "#UNINDENT#", "action", "=", "text", "(", "action", "not in", "command", "=", "action", "for", "command", "in", "text", "(", "command", ",", "text", "text", "==", "'help'", "text", "text", ")"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [23, 27, 31, 1, 4, 2, 7, 9, 10, 11, 13, 15, 19, 29, 33, 34, 37, 38, 17, 21, 25]}}
{"prediction": {"error_location": 0.47991281747817993, "repair_targets": [], "repair_candidates": [0.14469407498836517, 0.1366497427225113, 0.019043659791350365, 0.008524863049387932, 0.010345187038183212, 0.002454071771353483, 0.0013097235932946205, 0.015538200736045837, 0.0005362376687116921, 0.5705834031105042, 0.0008820028160698712, 0.002373021561652422, 0.009171583689749241, 0.00014743949577677995, 0.07745134830474854, 0.00011230551172047853, 8.294959116028622e-05, 8.504030120093375e-06, 4.182213160675019e-06, 3.4748682082863525e-05, 5.267821688903496e-05], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 14:40:18.702854", "n_pass": [311, 51, 42], "n_token": 39, "loss": [0.5891831517219543, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "message", "text", "message", "#NEWLINE#", "if", "text", "#NEWLINE#", "text", "text", "text", "#INDENT#", "text", "=", "text", "#UNINDENT#", "action", "=", "text", "(", "action", "not in", "command", "=", "action", "for", "command", "in", "text", "(", "command", ",", "text", "text", "==", "'help'", "text", "text", ")"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [22, 26, 30, 1, 3, 2, 6, 8, 9, 10, 12, 14, 18, 28, 32, 33, 36, 37, 16, 20, 24]}}
{"prediction": {"error_location": 0.5547803044319153, "repair_targets": [], "repair_candidates": [0.06947658956050873, 0.06722553074359894, 0.04052697867155075, 0.021227313205599785, 0.0213096234947443, 0.0067047178745269775, 0.00469990586861968, 0.0203082375228405, 0.002289682161062956, 0.5242559313774109, 0.002297458006069064, 0.0052339015528559685, 0.016720542684197426, 0.0003899533476214856, 0.1962166577577591, 0.0003592426946852356, 0.0003995544684585184, 2.939608930319082e-05, 1.2060472727171145e-05, 0.0001388306263834238, 0.00017778929031919688], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 14:40:18.779765", "n_pass": [313, 52, 43], "n_token": 38, "loss": [0.6340503096580505, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "message", "text", "message", "if", "text", "#NEWLINE#", "text", "text", "text", "#INDENT#", "text", "=", "text", "#UNINDENT#", "action", "=", "text", "(", "action", "not in", "command", "=", "action", "for", "command", "in", "text", "(", "command", ",", "text", "text", "==", "'help'", "text", "text", ")"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [21, 25, 29, 1, 3, 2, 5, 7, 8, 9, 11, 13, 17, 27, 31, 32, 35, 36, 15, 19, 23]}}
{"prediction": {"error_location": 0.5304389595985413, "repair_targets": [], "repair_candidates": [0.06879131495952606, 0.06075197830796242, 0.04471154883503914, 0.022991418838500977, 0.0157337449491024, 0.00496106268838048, 0.003781774314120412, 0.02023722603917122, 0.0015533927362412214, 0.5601713061332703, 0.002351486124098301, 0.0037257522344589233, 0.01808944344520569, 0.00038591941120103, 0.1708066463470459, 0.00031402838067151606, 0.0003433407109696418, 2.639843114593532e-05, 1.1529024959600065e-05, 0.00011630429798969999, 0.0001444188819732517], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 14:40:18.857563", "n_pass": [314, 53, 44], "n_token": 37, "loss": [0.5440178513526917, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "message", "text", "message", "text", "#NEWLINE#", "text", "text", "text", "#INDENT#", "text", "=", "text", "#UNINDENT#", "action", "=", "text", "(", "action", "not in", "command", "=", "action", "for", "command", "in", "text", "(", "command", ",", "text", "text", "==", "'help'", "text", "text", ")"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [20, 24, 28, 1, 3, 2, 4, 6, 7, 8, 10, 12, 16, 26, 30, 31, 34, 35, 14, 18, 22]}}
{"prediction": {"error_location": 0.5804116129875183, "repair_targets": [], "repair_candidates": [0.03667158633470535, 0.038395967334508896, 0.03291970118880272, 0.023724308237433434, 0.030054420232772827, 0.0074820732697844505, 0.005978667177259922, 0.04003336653113365, 0.0016308835474774241, 0.5909337401390076, 0.002426674822345376, 0.005917833186686039, 0.02634921483695507, 0.00038989391759969294, 0.15602542459964752, 0.00035186862805858254, 0.00034190560108982027, 3.458852006588131e-05, 1.2298150977585465e-05, 0.00015290177543647587, 0.00017266161739826202], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 14:40:18.933168", "n_pass": [316, 54, 45], "n_token": 36, "loss": [0.6799737215042114, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "message", "text", "message", "text", "text", "text", "text", "#INDENT#", "text", "=", "text", "#UNINDENT#", "action", "=", "text", "(", "action", "not in", "command", "=", "action", "for", "command", "in", "text", "(", "command", ",", "text", "text", "==", "'help'", "text", "text", ")"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [19, 23, 27, 1, 3, 2, 4, 5, 6, 7, 9, 11, 15, 25, 29, 30, 33, 34, 13, 17, 21]}}
{"prediction": {"error_location": 0.5066303014755249, "repair_targets": [], "repair_candidates": [0.03158334270119667, 0.03829183429479599, 0.03218991309404373, 0.019246526062488556, 0.011252381838858128, 0.002979680197313428, 0.00218223431147635, 0.030511707067489624, 0.0011574863456189632, 0.6359537243843079, 0.0025136135518550873, 0.006110129412263632, 0.03686445578932762, 0.0004946290864609182, 0.14789515733718872, 0.0002619210572447628, 0.00025047906092368066, 2.6120649636141025e-05, 9.442390364711173e-06, 0.00010733473754953593, 0.00011781491775764152], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 14:40:19.010313", "n_pass": [367, 55, 46], "n_token": 35, "loss": [0.7810386419296265, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "message", "text", "message", "text", "text", "text", "text", "text", "=", "text", "#UNINDENT#", "action", "=", "text", "(", "action", "not in", "command", "=", "action", "for", "command", "in", "text", "(", "command", ",", "text", "text", "==", "'help'", "text", "text", ")"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [18, 22, 26, 1, 3, 2, 4, 5, 6, 7, 8, 10, 14, 24, 28, 29, 32, 33, 12, 16, 20]}}
{"prediction": {"error_location": 0.45793020725250244, "repair_targets": [], "repair_candidates": [0.03996669128537178, 0.05737290903925896, 0.053125619888305664, 0.0415707491338253, 0.029764296486973763, 0.014299644157290459, 0.016993073746562004, 0.032470736652612686, 0.0009373557986691594, 0.5346335768699646, 0.004504706710577011, 0.0059945229440927505, 0.044207245111465454, 0.0005955338710919023, 0.12276474386453629, 0.0002960784186143428, 0.00018935685511678457, 2.8332904548733495e-05, 1.1165381692990195e-05, 0.00013188854791224003, 0.00014170508075039834], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 14:40:19.086451", "n_pass": [368, 56, 47], "n_token": 34, "loss": [0.7428185939788818, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "message", "text", "message", "text", "text", "text", "text", "text", "text", "#UNINDENT#", "action", "=", "text", "(", "action", "not in", "command", "=", "action", "for", "command", "in", "text", "(", "command", ",", "text", "text", "==", "'help'", "text", "text", ")"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [17, 21, 25, 1, 3, 2, 4, 5, 6, 7, 8, 9, 13, 23, 27, 28, 31, 32, 11, 15, 19]}}
{"prediction": {"error_location": 0.4757710099220276, "repair_targets": [], "repair_candidates": [0.04979436472058296, 0.05438094958662987, 0.04643654078245163, 0.0321914367377758, 0.0270625539124012, 0.0135794160887599, 0.006822922267019749, 0.003352058120071888, 0.004280010238289833, 0.19196119904518127, 0.009751466102898121, 0.018908102065324783, 0.10062193125486374, 0.0008734606090001762, 0.4383280277252197, 0.0006075697019696236, 0.000574848207179457, 5.11449106852524e-05, 1.9810024241451174e-05, 0.00018957983411382884, 0.00021258761989884079], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 14:40:19.160214", "n_pass": [370, 57, 48], "n_token": 33, "loss": [0.6371101140975952, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "message", "text", "message", "text", "text", "text", "text", "text", "text", "action", "=", "text", "(", "action", "not in", "command", "=", "action", "for", "command", "in", "text", "(", "command", ",", "text", "text", "==", "'help'", "text", "text", ")"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [16, 20, 24, 1, 3, 2, 4, 5, 6, 7, 8, 9, 12, 22, 26, 27, 30, 31, 10, 14, 18]}}
{"prediction": {"error_location": 0.5288185477256775, "repair_targets": [], "repair_candidates": [0.0658833384513855, 0.08254656195640564, 0.07823266834020615, 0.07244345545768738, 0.06658422946929932, 0.03521043434739113, 0.016741599887609482, 0.011047061532735825, 0.02219214476644993, 0.13831117749214172, 0.008090697228908539, 0.011210558004677296, 0.13112275302410126, 0.0011923756683245301, 0.25753363966941833, 0.0006458529969677329, 0.0004408970125950873, 5.3611991461366415e-05, 2.0328063328634016e-05, 0.00024749894510023296, 0.0002491227351129055], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 14:40:19.234141", "n_pass": [372, 58, 49], "n_token": 32, "loss": [0.6525030136108398, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "message", "text", "message", "text", "text", "text", "text", "text", "text", "action", "text", "(", "action", "not in", "command", "=", "action", "for", "command", "in", "text", "(", "command", ",", "text", "text", "==", "'help'", "text", "text", ")"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [15, 19, 23, 1, 3, 2, 4, 5, 6, 7, 8, 9, 11, 21, 25, 26, 29, 30, 10, 13, 17]}}
{"prediction": {"error_location": 0.5207406282424927, "repair_targets": [], "repair_candidates": [0.10503436625003815, 0.13453711569309235, 0.12365200370550156, 0.11711274087429047, 0.10200831294059753, 0.05278564989566803, 0.028146807104349136, 0.01585795357823372, 0.010400974191725254, 0.011473427526652813, 0.00812719389796257, 0.01636611856520176, 0.13581570982933044, 0.008762696757912636, 0.12490219622850418, 0.0022491796407848597, 0.0016821882454678416, 7.686726894462481e-05, 2.7239364499109797e-05, 0.000549667573068291, 0.0004316670529078692], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 14:40:19.307832", "n_pass": [374, 59, 50], "n_token": 31, "loss": [0.6337850689888, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "message", "text", "message", "text", "text", "text", "text", "text", "text", "action", "text", "action", "not in", "command", "=", "action", "for", "command", "in", "text", "(", "command", ",", "text", "text", "==", "'help'", "text", "text", ")"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [14, 18, 22, 1, 3, 2, 4, 5, 6, 7, 8, 9, 11, 20, 24, 25, 28, 29, 10, 12, 16]}}
{"prediction": {"error_location": 0.530579686164856, "repair_targets": [], "repair_candidates": [0.07138379663228989, 0.08048927783966064, 0.07153219729661942, 0.06584979593753815, 0.06551036983728409, 0.04485691711306572, 0.03158266097307205, 0.021379023790359497, 0.01669660210609436, 0.020812073722481728, 0.03615804389119148, 0.06538251787424088, 0.14949895441532135, 0.007896621711552143, 0.24665415287017822, 0.0019404450431466103, 0.0013703986769542098, 6.501191819552332e-05, 2.777224472083617e-05, 0.0004997271462343633, 0.0004136493953410536], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 14:40:19.382357", "n_pass": [376, 60, 51], "n_token": 30, "loss": [0.6072914600372314, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "message", "text", "message", "text", "text", "text", "text", "text", "text", "action", "text", "action", "command", "=", "action", "for", "command", "in", "text", "(", "command", ",", "text", "text", "==", "'help'", "text", "text", ")"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [13, 17, 21, 1, 3, 2, 4, 5, 6, 7, 8, 9, 11, 19, 23, 24, 27, 28, 10, 12, 15]}}
{"prediction": {"error_location": 0.5448246002197266, "repair_targets": [], "repair_candidates": [0.02565908432006836, 0.023293428122997284, 0.017451494932174683, 0.011188818141818047, 0.01048891432583332, 0.006262481212615967, 0.004193282686173916, 0.002806895412504673, 0.0022254539653658867, 0.001707179006189108, 0.0029678491409868, 0.1746366173028946, 0.3834989368915558, 0.003561262972652912, 0.328653484582901, 0.0006294733611866832, 0.0005320631316863, 2.130258690158371e-05, 9.531014256936032e-06, 0.00010796733113238588, 0.00010449095134390518], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 14:40:19.454763", "n_pass": [378, 61, 52], "n_token": 29, "loss": [0.43829357624053955, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "message", "text", "message", "text", "text", "text", "text", "text", "text", "action", "text", "action", "command", "action", "for", "command", "in", "text", "(", "command", ",", "text", "text", "==", "'help'", "text", "text", ")"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [13, 16, 20, 1, 3, 2, 4, 5, 6, 7, 8, 9, 11, 18, 22, 23, 26, 27, 10, 12, 14]}}
{"prediction": {"error_location": 0.6451364159584045, "repair_targets": [], "repair_candidates": [0.15518780052661896, 0.13617832958698273, 0.10270213335752487, 0.07848094403743744, 0.08490541577339172, 0.04693799838423729, 0.027967184782028198, 0.015147783793509007, 0.009135943837463856, 0.0068559423089027405, 0.004711220506578684, 0.013125617988407612, 0.030316542834043503, 0.052741773426532745, 0.17551174759864807, 0.015323449857532978, 0.03918467089533806, 0.0006785045261494815, 0.00014815654139965773, 0.0031756742391735315, 0.001583207049407065], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 14:40:19.526743", "n_pass": [380, 62, 53], "n_token": 28, "loss": [0.5678360462188721, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "message", "text", "message", "text", "text", "text", "text", "text", "text", "action", "text", "action", "command", "action", "command", "in", "text", "(", "command", ",", "text", "text", "==", "'help'", "text", "text", ")"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [13, 15, 19, 1, 3, 2, 4, 5, 6, 7, 8, 9, 11, 17, 21, 22, 25, 26, 10, 12, 14]}}
{"prediction": {"error_location": 0.5667505264282227, "repair_targets": [], "repair_candidates": [0.12867972254753113, 0.14109282195568085, 0.1282036304473877, 0.1218562126159668, 0.13184769451618195, 0.07681175321340561, 0.045574117451906204, 0.025620410218834877, 0.018437737599015236, 0.014619098976254463, 0.006090305279940367, 0.005867783445864916, 0.009067335166037083, 0.03442229703068733, 0.035424891859292984, 0.015407168306410313, 0.055578574538230896, 0.0004640264087356627, 0.000118470867164433, 0.0031930666882544756, 0.0016229070024564862], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 14:40:19.597768", "n_pass": [382, 63, 54], "n_token": 27, "loss": [0.7779731154441833, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "message", "text", "message", "text", "text", "text", "text", "text", "text", "action", "text", "action", "command", "action", "command", "text", "(", "command", ",", "text", "text", "==", "'help'", "text", "text", ")"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [13, 15, 18, 1, 3, 2, 4, 5, 6, 7, 8, 9, 11, 16, 20, 21, 24, 25, 10, 12, 14]}}
{"prediction": {"error_location": 0.45933613181114197, "repair_targets": [], "repair_candidates": [0.11602424830198288, 0.1417219042778015, 0.1415071338415146, 0.13659250736236572, 0.13565601408481598, 0.06348448991775513, 0.028822559863328934, 0.012262960895895958, 0.007950534112751484, 0.006892251316457987, 0.00510826800018549, 0.006711296271532774, 0.007638673763722181, 0.007227473426610231, 0.005259332247078419, 0.0019122433150187135, 0.15880489349365234, 0.0033691192511469126, 0.0005340503412298858, 0.00952816754579544, 0.0029918684158474207], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 14:40:19.670165", "n_pass": [384, 64, 55], "n_token": 26, "loss": [1.2015128135681152, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "message", "text", "message", "text", "text", "text", "text", "text", "text", "action", "text", "action", "command", "action", "command", "text", "command", ",", "text", "text", "==", "'help'", "text", "text", ")"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [13, 15, 17, 1, 3, 2, 4, 5, 6, 7, 8, 9, 11, 16, 19, 20, 23, 24, 10, 12, 14]}}
{"prediction": {"error_location": 0.3007389008998871, "repair_targets": [], "repair_candidates": [0.12730945646762848, 0.16872738301753998, 0.19221125543117523, 0.1806664615869522, 0.15944702923297882, 0.05805126577615738, 0.022099580615758896, 0.00901372916996479, 0.006236101035028696, 0.005459580570459366, 0.0045447503216564655, 0.0067453994415700436, 0.008447961881756783, 0.00810970738530159, 0.00346478633582592, 0.003935813903808594, 0.014248869381844997, 0.0055251759476959705, 0.0006145332590676844, 0.010461492463946342, 0.004679671488702297], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 14:40:19.740308", "n_pass": [386, 65, 56], "n_token": 25, "loss": [1.6132678985595703, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "message", "text", "message", "text", "text", "text", "text", "text", "text", "action", "text", "action", "command", "action", "command", "text", "command", "text", "text", "==", "'help'", "text", "text", ")"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [13, 15, 17, 1, 3, 2, 4, 5, 6, 7, 8, 9, 11, 16, 18, 19, 22, 23, 10, 12, 14]}}
{"prediction": {"error_location": 0.1992354691028595, "repair_targets": [], "repair_candidates": [0.22992877662181854, 0.23437412083148956, 0.2151762843132019, 0.10876592993736267, 0.079355388879776, 0.022564852610230446, 0.008657858707010746, 0.005143618211150169, 0.003895812900736928, 0.004056667909026146, 0.004166149999946356, 0.0053315237164497375, 0.008504507131874561, 0.009645340032875538, 0.005468153394758701, 0.003603639081120491, 0.003374867606908083, 0.008006229065358639, 0.004684566054493189, 0.026224296540021896, 0.009071316570043564], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 14:40:19.879238", "n_pass": [390, 67, 57], "n_token": 24, "loss": [1.5272443294525146, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "message", "text", "message", "text", "text", "text", "text", "text", "text", "action", "text", "action", "command", "action", "command", "text", "command", "text", "text", "==", "text", "text", ")"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [13, 15, 17, 1, 3, 2, 4, 5, 6, 7, 8, 9, 11, 16, 18, 19, 21, 22, 10, 12, 14]}}
{"prediction": {"error_location": 0.21713316440582275, "repair_targets": [], "repair_candidates": [0.168767049908638, 0.17714020609855652, 0.21608948707580566, 0.15340517461299896, 0.10995975881814957, 0.039032891392707825, 0.014378429390490055, 0.006452678237110376, 0.003699821187183261, 0.0034527212847024202, 0.003422932466492057, 0.003704534377902746, 0.0075175343081355095, 0.014436325058341026, 0.009513608179986477, 0.007265401538461447, 0.007196933962404728, 0.009693020023405552, 0.00523386849090457, 0.028191983699798584, 0.01144570205360651], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 14:40:19.950066", "n_pass": [393, 68, 58], "n_token": 23, "loss": [1.5187373161315918, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "message", "text", "message", "text", "text", "text", "text", "text", "text", "action", "text", "action", "command", "action", "command", "text", "command", "text", "text", "==", "text", "text"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [13, 15, 17, 1, 3, 2, 4, 5, 6, 7, 8, 9, 11, 16, 18, 19, 21, 22, 10, 12, 14]}}
{"prediction": {"error_location": 0.21898823976516724, "repair_targets": [], "repair_candidates": [0.2181997299194336, 0.21320472657680511, 0.24926184117794037, 0.12792420387268066, 0.0814473107457161, 0.02810629829764366, 0.010930785909295082, 0.005753980949521065, 0.0036573500838130713, 0.00341510190628469, 0.0032000478822737932, 0.0029568509198725224, 0.00526922894641757, 0.008054614998400211, 0.004988509695976973, 0.0036447227466851473, 0.004167810548096895, 0.006439064629375935, 0.0038001961074769497, 0.00877690501511097, 0.0068007162772119045], "target_probs": 0.0}}




Minimal simplified tokens:

['#NEWLINE#', 'message', 'text', 'message', 'text', 'text', 'text', 'text', 'text', 'text', 'action', 'text', 'action', 'command', 'action', 'command', 'text', 'command', 'text', 'text', '==', 'text', 'text']
