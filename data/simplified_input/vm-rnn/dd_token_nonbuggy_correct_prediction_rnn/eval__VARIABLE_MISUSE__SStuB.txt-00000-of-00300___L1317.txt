
Original sample:

{"has_bug": false, "bug_kind": 0, "bug_kind_name": "NONE", "source_tokens": ["#NEWLINE#", "def setOpenBreakdownEntryRows(", "self", ",", "*", "args", ")", ":", "#NEWLINE#", "#INDENT#", "import", "tkinter.simpledialog", "#NEWLINE#", "newValue", "=", "tkinter", ".", "simpledialog", ".", "askinteger", "(", "_", "(", "'arelle - Open breakdown entry rows setting'", ")", ",", "_", "(", "'The number of extra entry rows for open breakdowns is: {0} \\n\\n(When a row header includes an open breakdown, such as \\nfor typed dimension(s), this number of extra entry rows \\nare provided below the table.)'", ")", ".", "format", "(", "self", ".", "options", "[", "'openBreakdownLines'", "]", ")", ",", "parent", "=", "self", ".", "tabWin", ")", "#NEWLINE#", "if", "(", "newValue", "is not", "None", ")", ":", "#NEWLINE#", "#INDENT#", "self", ".", "options", "[", "'openBreakdownLines'", "]", "=", "self", ".", "openBreakdownLines", "=", "newValue", "#NEWLINE#", "self", ".", "viewReloadDueToMenuAction", "(", ")"], "error_location": [0], "repair_targets": [], "repair_candidates": [13, 50, 68, 5, 2, 33, 43, 57, 64, 70], "provenances": [{"datasetProvenance": {"datasetName": "ETHPy150Open", "filepath": "Arelle/Arelle/arelle/ViewWinRenderedGrid.py", "license": "apache-2.0", "note": "license: bigquery_api"}}], "txt_file": "eval__VARIABLE_MISUSE__SStuB.txt-00000-of-00300", "js_count": 1317, "results": {"model": "rnn", "prob": {"loc": [[0.6530998349189758, 5.386644261307083e-06, 1.4517270301439567e-06, 2.6805622610481805e-08, 7.459510698026861e-08, 4.287268529878929e-05, 9.942131384832464e-08, 1.2440577279448917e-07, 6.673818916169694e-06, 1.5903775363312889e-07, 7.123001211084556e-08, 2.13879713939491e-09, 7.570252869015803e-09, 4.454060587022468e-08, 6.078140302179236e-08, 4.428349598128989e-07, 8.478744928375193e-10, 6.79651313006957e-09, 7.157415637948361e-08, 5.4806683635888476e-08, 6.074674985256934e-08, 6.114599727879977e-06, 6.71005784269596e-09, 8.742303180042654e-06, 1.6506899669366248e-07, 3.265081005565662e-08, 6.582440050806326e-07, 3.0201598999468615e-09, 1.066629351953452e-06, 7.458361928058821e-09, 3.813953526332625e-07, 2.983045988003141e-08, 1.2221189393812892e-08, 8.570922545914073e-06, 9.7049601688326e-10, 5.598513439508679e-07, 1.218701761729335e-08, 4.377719960757531e-06, 2.205140845035203e-06, 6.530775863211602e-06, 3.1964080449142784e-07, 8.095053090073634e-06, 2.8683404096341292e-08, 0.00019461079500615597, 1.2677914185132977e-07, 5.854576556885149e-07, 3.149785698042251e-05, 1.2494462680479046e-05, 1.8349614094859135e-07, 2.6943794182443526e-06, 0.006121184676885605, 6.2006017742533e-07, 2.4010012111830292e-06, 7.912694286460464e-07, 2.0706956149751932e-07, 3.6952602044948435e-07, 9.8205443777033e-09, 5.766283948105411e-07, 5.733877261882014e-10, 6.890956427696437e-08, 8.588173727730464e-09, 1.5410707419505343e-05, 3.0675991524731216e-08, 2.669305843028269e-07, 4.3621645318125957e-07, 1.8956538561099023e-09, 9.845540205333236e-08, 5.417441570898518e-06, 0.3401583135128021, 2.6969127020493033e-07, 2.2191352400113828e-07, 1.0304889741519219e-07, 1.139365934932357e-08, 5.374708507588366e-06, 0.00024014250084292144]], "pointer": [[0.0, 0.0, 0.0017926570726558566, 0.0, 0.0, 0.5422366857528687, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.4551052153110504, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0001164201894425787, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 8.813480962999165e-05, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.00047680773423053324, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.00014731426199432462, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 2.2587062630918808e-05, 0.0, 0.0, 0.0, 7.042098786769202e-06, 0.0, 7.092412488418631e-06, 0.0, 0.0, 0.0, 0.0]], "target": [0.0]}, "loss": [0.426025390625, 0.0], "acc": [1.0, 0.0, 0.0, 0.0]}}


Trace of simplified code(s):

{"result": {"time": "2021-02-11 13:49:10.907433", "n_pass": [1, 1, 1], "n_token": 75, "loss": [0.426025390625, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def setOpenBreakdownEntryRows(", "self", ",", "*", "args", ")", ":", "#NEWLINE#", "#INDENT#", "import", "tkinter.simpledialog", "#NEWLINE#", "newValue", "=", "tkinter", ".", "simpledialog", ".", "askinteger", "(", "_", "(", "'arelle - Open breakdown entry rows setting'", ")", ",", "_", "(", "'The number of extra entry rows for open breakdowns is: {0} \\n\\n(When a row header includes an open breakdown, such as \\nfor typed dimension(s), this number of extra entry rows \\nare provided below the table.)'", ")", ".", "format", "(", "self", ".", "options", "[", "'openBreakdownLines'", "]", ")", ",", "parent", "=", "self", ".", "tabWin", ")", "#NEWLINE#", "if", "(", "newValue", "is not", "None", ")", ":", "#NEWLINE#", "#INDENT#", "self", ".", "options", "[", "'openBreakdownLines'", "]", "=", "self", ".", "openBreakdownLines", "=", "newValue", "#NEWLINE#", "self", ".", "viewReloadDueToMenuAction", "(", ")"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [13, 50, 68, 5, 2, 33, 43, 57, 64, 70]}}
{"prediction": {"error_location": 0.6530998349189758, "repair_targets": [], "repair_candidates": [0.0017926570726558566, 0.5422366857528687, 0.4551052153110504, 0.0001164201894425787, 8.813480962999165e-05, 0.00047680773423053324, 0.00014731426199432462, 2.2587062630918808e-05, 7.042098786769202e-06, 7.092412488418631e-06], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 13:49:10.993558", "n_pass": [22, 2, 2], "n_token": 66, "loss": [0.4424143433570862, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def setOpenBreakdownEntryRows(", "self", ",", "*", "args", ")", ":", "#NEWLINE#", "#INDENT#", "import", "tkinter.simpledialog", "#NEWLINE#", "newValue", "=", "tkinter", ".", "simpledialog", "(", "'The number of extra entry rows for open breakdowns is: {0} \\n\\n(When a row header includes an open breakdown, such as \\nfor typed dimension(s), this number of extra entry rows \\nare provided below the table.)'", ")", ".", "format", "(", "self", ".", "options", "[", "'openBreakdownLines'", "]", ")", ",", "parent", "=", "self", ".", "tabWin", ")", "#NEWLINE#", "if", "(", "newValue", "is not", "None", ")", ":", "#NEWLINE#", "#INDENT#", "self", ".", "options", "[", "'openBreakdownLines'", "]", "=", "self", ".", "openBreakdownLines", "=", "newValue", "#NEWLINE#", "self", ".", "viewReloadDueToMenuAction", "(", ")"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [13, 41, 59, 5, 2, 24, 34, 48, 55, 61]}}
{"prediction": {"error_location": 0.6424834132194519, "repair_targets": [], "repair_candidates": [0.0010321500012651086, 0.4502738118171692, 0.5476511120796204, 0.00021680167992599308, 0.00010082463995786384, 0.0005074901855550706, 0.00017977296374738216, 2.5262401322834194e-05, 6.156510153232375e-06, 6.602011580980616e-06], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 13:49:11.073860", "n_pass": [44, 3, 3], "n_token": 61, "loss": [0.29204654693603516, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def setOpenBreakdownEntryRows(", "self", ",", "*", "args", ")", ":", "#NEWLINE#", "#INDENT#", "import", "tkinter.simpledialog", "#NEWLINE#", "newValue", "=", "tkinter", ".", "format", "(", "self", ".", "options", "[", "'openBreakdownLines'", "]", ")", ",", "parent", "=", "self", ".", "tabWin", ")", "#NEWLINE#", "if", "(", "newValue", "is not", "None", ")", ":", "#NEWLINE#", "#INDENT#", "self", ".", "options", "[", "'openBreakdownLines'", "]", "=", "self", ".", "openBreakdownLines", "=", "newValue", "#NEWLINE#", "self", ".", "viewReloadDueToMenuAction", "(", ")"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [13, 36, 54, 5, 2, 19, 29, 43, 50, 56]}}
{"prediction": {"error_location": 0.7467336058616638, "repair_targets": [], "repair_candidates": [0.0005981089198030531, 0.8806136846542358, 0.11753606051206589, 9.426823817193508e-05, 0.0001779158046701923, 0.0007031132117845118, 0.00021285307593643665, 3.673051833175123e-05, 1.4751039088878315e-05, 1.2482802048907615e-05], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 13:49:11.150907", "n_pass": [46, 4, 4], "n_token": 56, "loss": [0.36270827054977417, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def setOpenBreakdownEntryRows(", "self", ",", "*", "args", ")", ":", "#NEWLINE#", "#INDENT#", "import", "tkinter.simpledialog", "#NEWLINE#", "newValue", "=", "tkinter", ".", "format", "(", "self", ".", ",", "parent", "=", "self", ".", "tabWin", ")", "#NEWLINE#", "if", "(", "newValue", "is not", "None", ")", ":", "#NEWLINE#", "#INDENT#", "self", ".", "options", "[", "'openBreakdownLines'", "]", "=", "self", ".", "openBreakdownLines", "=", "newValue", "#NEWLINE#", "self", ".", "viewReloadDueToMenuAction", "(", ")"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [13, 31, 49, 5, 2, 19, 24, 38, 45, 51]}}
{"prediction": {"error_location": 0.6957893967628479, "repair_targets": [], "repair_candidates": [0.0007379836170002818, 0.9327399730682373, 0.06295766681432724, 0.0020061067771166563, 0.0005068054306320846, 0.0006978270830586553, 0.00029059898224659264, 3.7376237742137164e-05, 1.4363877198775299e-05, 1.128173516917741e-05], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 13:49:11.301917", "n_pass": [56, 6, 5], "n_token": 52, "loss": [0.30869728326797485, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def setOpenBreakdownEntryRows(", "self", ",", "*", "args", ")", ":", "#NEWLINE#", "newValue", "=", "tkinter", ".", "format", "(", "self", ".", ",", "parent", "=", "self", ".", "tabWin", ")", "#NEWLINE#", "if", "(", "newValue", "is not", "None", ")", ":", "#NEWLINE#", "#INDENT#", "self", ".", "options", "[", "'openBreakdownLines'", "]", "=", "self", ".", "openBreakdownLines", "=", "newValue", "#NEWLINE#", "self", ".", "viewReloadDueToMenuAction", "(", ")"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [9, 27, 45, 5, 2, 15, 20, 34, 41, 47]}}
{"prediction": {"error_location": 0.734403133392334, "repair_targets": [], "repair_candidates": [0.00027617430896498263, 0.9895574450492859, 0.0073975734412670135, 0.0012342629488557577, 0.00031257898081094027, 0.0009642454679124057, 0.0001999648957280442, 3.0873539799358696e-05, 1.6048497855081223e-05, 1.0820087481988594e-05], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 13:49:11.524746", "n_pass": [92, 9, 6], "n_token": 50, "loss": [0.1388571858406067, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def setOpenBreakdownEntryRows(", "self", ",", "*", "args", ")", ":", "#NEWLINE#", "newValue", "=", "tkinter", "(", "self", ".", ",", "parent", "=", "self", ".", "tabWin", ")", "#NEWLINE#", "if", "(", "newValue", "is not", "None", ")", ":", "#NEWLINE#", "#INDENT#", "self", ".", "options", "[", "'openBreakdownLines'", "]", "=", "self", ".", "openBreakdownLines", "=", "newValue", "#NEWLINE#", "self", ".", "viewReloadDueToMenuAction", "(", ")"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [9, 25, 43, 5, 2, 13, 18, 32, 39, 45]}}
{"prediction": {"error_location": 0.8703523278236389, "repair_targets": [], "repair_candidates": [0.00029245574842207134, 0.9896563291549683, 0.007647846359759569, 0.0009040006552822888, 0.00041322619654238224, 0.0008379757055081427, 0.00017546383605804294, 4.308233837946318e-05, 1.472038002248155e-05, 1.4900761925673578e-05], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 13:49:11.670862", "n_pass": [95, 11, 7], "n_token": 48, "loss": [0.14861120283603668, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def setOpenBreakdownEntryRows(", "self", ",", "*", "args", ")", ":", "#NEWLINE#", "newValue", "=", "tkinter", "(", "self", ".", ",", "self", ".", "tabWin", ")", "#NEWLINE#", "if", "(", "newValue", "is not", "None", ")", ":", "#NEWLINE#", "#INDENT#", "self", ".", "options", "[", "'openBreakdownLines'", "]", "=", "self", ".", "openBreakdownLines", "=", "newValue", "#NEWLINE#", "self", ".", "viewReloadDueToMenuAction", "(", ")"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [9, 23, 41, 5, 2, 13, 16, 30, 37, 43]}}
{"prediction": {"error_location": 0.8619040846824646, "repair_targets": [], "repair_candidates": [0.00028536043828353286, 0.9896492958068848, 0.008830116130411625, 0.0004142327525187284, 0.00020288261293899268, 0.00039340060902759433, 0.00017065701831597835, 3.0743245588382706e-05, 1.252543370355852e-05, 1.0643769201124087e-05], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 13:49:11.887575", "n_pass": [100, 14, 8], "n_token": 45, "loss": [0.4705412983894348, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def setOpenBreakdownEntryRows(", "self", ",", "*", "args", ")", ":", "#NEWLINE#", "newValue", "=", "tkinter", "(", "self", ".", ",", "self", ".", "tabWin", ")", "#NEWLINE#", "if", "(", "newValue", ":", "#NEWLINE#", "#INDENT#", "self", ".", "options", "[", "'openBreakdownLines'", "]", "=", "self", ".", "openBreakdownLines", "=", "newValue", "#NEWLINE#", "self", ".", "viewReloadDueToMenuAction", "(", ")"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [9, 23, 38, 5, 2, 13, 16, 27, 34, 40]}}
{"prediction": {"error_location": 0.6246641278266907, "repair_targets": [], "repair_candidates": [0.00014694422134198248, 0.9945077300071716, 0.004932041745632887, 0.00016766424232628196, 7.762522000120953e-05, 4.392450864543207e-05, 9.7848147561308e-05, 1.5249173884512857e-05, 6.141664471215336e-06, 4.790738785231952e-06], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 13:49:11.957579", "n_pass": [101, 15, 9], "n_token": 42, "loss": [0.6388395428657532, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def setOpenBreakdownEntryRows(", "self", ",", "*", "args", ")", ":", "#NEWLINE#", "newValue", "=", "tkinter", "(", "self", ".", ",", "self", ".", "tabWin", ")", "#NEWLINE#", "if", "(", "newValue", "self", ".", "options", "[", "'openBreakdownLines'", "]", "=", "self", ".", "openBreakdownLines", "=", "newValue", "#NEWLINE#", "self", ".", "viewReloadDueToMenuAction", "(", ")"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [9, 23, 35, 5, 2, 13, 16, 24, 31, 37]}}
{"prediction": {"error_location": 0.5279046297073364, "repair_targets": [], "repair_candidates": [0.0003381390415597707, 0.995455265045166, 0.002490915125235915, 0.0004427560488693416, 0.0003740841639228165, 0.00036992348032072186, 0.00048154077376239, 3.3993335819104686e-05, 4.506261120695854e-06, 8.951614290708676e-06], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 13:49:12.025843", "n_pass": [103, 16, 10], "n_token": 39, "loss": [0.5321303009986877, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def setOpenBreakdownEntryRows(", "self", ",", "*", "args", ")", ":", "#NEWLINE#", "newValue", "=", "tkinter", "(", "self", ".", ",", "self", ".", "tabWin", ")", "#NEWLINE#", "if", "(", "newValue", "self", ".", "options", "=", "self", ".", "openBreakdownLines", "=", "newValue", "#NEWLINE#", "self", ".", "viewReloadDueToMenuAction", "(", ")"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [9, 23, 32, 5, 2, 13, 16, 24, 28, 34]}}
{"prediction": {"error_location": 0.5873523950576782, "repair_targets": [], "repair_candidates": [0.0004137270152568817, 0.9962724447250366, 0.0017582335276529193, 0.00044480038923211396, 0.0002818490320350975, 0.00023060121748130769, 0.0005373079911805689, 3.8544789276784286e-05, 8.107715984806418e-06, 1.4294949323812034e-05], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 13:49:12.092454", "n_pass": [107, 17, 11], "n_token": 36, "loss": [0.29067936539649963, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def setOpenBreakdownEntryRows(", "self", ",", "*", "args", ")", ":", "#NEWLINE#", "newValue", "=", "tkinter", "(", "self", ".", ",", "self", ".", "tabWin", ")", "#NEWLINE#", "if", "(", "newValue", "self", ".", "options", "=", "self", ".", "openBreakdownLines", "=", "newValue", "#NEWLINE#", "self", "."]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [9, 23, 32, 5, 2, 13, 16, 24, 28, 34]}}
{"prediction": {"error_location": 0.7477554082870483, "repair_targets": [], "repair_candidates": [4.7598448873031884e-05, 0.9975566864013672, 0.0015663617523387074, 0.00015797106607351452, 8.810494909994304e-05, 0.000168370344908908, 0.00018017976253759116, 2.6687661375035532e-05, 7.148847089410992e-06, 0.0002009163290495053], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 13:49:12.158573", "n_pass": [111, 18, 12], "n_token": 34, "loss": [0.01501461211591959, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def setOpenBreakdownEntryRows(", "self", ",", "*", "args", "#NEWLINE#", "newValue", "=", "tkinter", "(", "self", ".", ",", "self", ".", "tabWin", ")", "#NEWLINE#", "if", "(", "newValue", "self", ".", "options", "=", "self", ".", "openBreakdownLines", "=", "newValue", "#NEWLINE#", "self", "."]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [7, 21, 30, 5, 2, 11, 14, 22, 26, 32]}}
{"prediction": {"error_location": 0.9850975275039673, "repair_targets": [], "repair_candidates": [0.0004520850779954344, 0.9785142540931702, 0.010700966231524944, 0.0019896288868039846, 0.0006649157148785889, 0.0029964528512209654, 0.0017695029964670539, 0.00018640402413439006, 7.273239316418767e-05, 0.0026531305629760027], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 13:49:12.225342", "n_pass": [113, 19, 13], "n_token": 32, "loss": [0.6734510064125061, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def setOpenBreakdownEntryRows(", "self", ",", "*", "args", "#NEWLINE#", "newValue", "(", "self", ".", ",", "self", ".", "tabWin", ")", "#NEWLINE#", "if", "(", "newValue", "self", ".", "options", "=", "self", ".", "openBreakdownLines", "=", "newValue", "#NEWLINE#", "self", "."]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [7, 19, 28, 5, 2, 9, 12, 20, 24, 30]}}
{"prediction": {"error_location": 0.5099457502365112, "repair_targets": [], "repair_candidates": [0.0009397747344337404, 0.9898959398269653, 0.0010417255107313395, 0.003048122860491276, 0.0001900087809190154, 0.00251322565600276, 0.0013840432511642575, 0.0001506651024101302, 4.01360921387095e-05, 0.0007963224779814482], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 13:49:12.288815", "n_pass": [115, 20, 14], "n_token": 30, "loss": [0.6622164249420166, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def setOpenBreakdownEntryRows(", "self", ",", "*", "args", "#NEWLINE#", "newValue", "(", "self", "self", ".", "tabWin", ")", "#NEWLINE#", "if", "(", "newValue", "self", ".", "options", "=", "self", ".", "openBreakdownLines", "=", "newValue", "#NEWLINE#", "self", "."]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [7, 17, 26, 5, 2, 9, 10, 18, 22, 28]}}
{"prediction": {"error_location": 0.5157070755958557, "repair_targets": [], "repair_candidates": [0.0018355591455474496, 0.9824961423873901, 0.0012879729038104415, 0.0046251253224909306, 0.003498074831441045, 0.0029685436747968197, 0.0022046277299523354, 0.00018209994595963508, 3.5522753023542464e-05, 0.0008663656772114336], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 13:49:12.351519", "n_pass": [117, 21, 15], "n_token": 28, "loss": [0.2457880824804306, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def setOpenBreakdownEntryRows(", "self", ",", "*", "args", "#NEWLINE#", "newValue", "(", "self", "self", ".", "#NEWLINE#", "if", "(", "newValue", "self", ".", "options", "=", "self", ".", "openBreakdownLines", "=", "newValue", "#NEWLINE#", "self", "."]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [7, 15, 24, 5, 2, 9, 10, 16, 20, 26]}}
{"prediction": {"error_location": 0.7820878624916077, "repair_targets": [], "repair_candidates": [0.002742096781730652, 0.9180837273597717, 0.0007686114404350519, 0.01834941655397415, 0.042576003819704056, 0.0062688435427844524, 0.004957928322255611, 0.0010841733310371637, 0.00010632420162437484, 0.005062812007963657], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 13:49:12.601634", "n_pass": [156, 25, 16], "n_token": 27, "loss": [0.3810306191444397, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def setOpenBreakdownEntryRows(", "self", ",", "*", "args", "#NEWLINE#", "newValue", "(", "self", "self", ".", "#NEWLINE#", "if", "newValue", "self", ".", "options", "=", "self", ".", "openBreakdownLines", "=", "newValue", "#NEWLINE#", "self", "."]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [7, 14, 23, 5, 2, 9, 10, 15, 19, 25]}}
{"prediction": {"error_location": 0.6831569671630859, "repair_targets": [], "repair_candidates": [0.0015876201214268804, 0.9366522431373596, 0.0005785763496533036, 0.013192710466682911, 0.03042016737163067, 0.011198381893336773, 0.0018314877524971962, 0.0008627132629044354, 6.826765456935391e-05, 0.0036078044213354588], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 13:49:12.724609", "n_pass": [159, 27, 17], "n_token": 26, "loss": [0.19466541707515717, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def setOpenBreakdownEntryRows(", "self", ",", "*", "args", "#NEWLINE#", "newValue", "(", "self", "self", ".", "#NEWLINE#", "if", "newValue", "self", ".", "=", "self", ".", "openBreakdownLines", "=", "newValue", "#NEWLINE#", "self", "."]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [7, 14, 22, 5, 2, 9, 10, 15, 18, 24]}}
{"prediction": {"error_location": 0.8231099843978882, "repair_targets": [], "repair_candidates": [0.0011133385123685002, 0.9111878871917725, 0.0005503467982634902, 0.00935672502964735, 0.017156483605504036, 0.05421445891261101, 0.0036277121398597956, 0.0003686824347823858, 4.505259857978672e-05, 0.0023792388383299112], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 13:49:12.785758", "n_pass": [160, 28, 18], "n_token": 25, "loss": [0.49984264373779297, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def setOpenBreakdownEntryRows(", "self", ",", "*", "args", "#NEWLINE#", "newValue", "(", "self", "self", ".", "#NEWLINE#", "if", "newValue", "self", ".", "self", ".", "openBreakdownLines", "=", "newValue", "#NEWLINE#", "self", "."]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [7, 14, 21, 5, 2, 9, 10, 15, 17, 23]}}
{"prediction": {"error_location": 0.6066260933876038, "repair_targets": [], "repair_candidates": [0.0012732112081721425, 0.9510846138000488, 0.0006166519015096128, 0.014016321860253811, 0.014300146140158176, 0.003993232734501362, 0.00047840893967077136, 0.011784457601606846, 4.37485687143635e-05, 0.0024091126397252083], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 13:49:12.845920", "n_pass": [162, 29, 19], "n_token": 23, "loss": [0.025337623432278633, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def setOpenBreakdownEntryRows(", "self", ",", "*", "args", "#NEWLINE#", "newValue", "(", "self", "self", ".", "#NEWLINE#", "if", "newValue", "self", ".", "self", ".", "newValue", "#NEWLINE#", "self", "."]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [7, 14, 19, 5, 2, 9, 10, 15, 17, 21]}}
{"prediction": {"error_location": 0.9749807715415955, "repair_targets": [], "repair_candidates": [0.001958427717909217, 0.8363141417503357, 0.00676911324262619, 0.00776412058621645, 0.003184607019647956, 0.01108319777995348, 0.0014718087622895837, 0.047967519611120224, 0.06678377836942673, 0.01670333929359913], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 13:49:12.907884", "n_pass": [166, 30, 20], "n_token": 22, "loss": [0.009805489331483841, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "self", ",", "*", "args", "#NEWLINE#", "newValue", "(", "self", "self", ".", "#NEWLINE#", "if", "newValue", "self", ".", "self", ".", "newValue", "#NEWLINE#", "self", "."]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [6, 13, 18, 4, 1, 8, 9, 14, 16, 20]}}
{"prediction": {"error_location": 0.9902424216270447, "repair_targets": [], "repair_candidates": [0.4378758370876312, 0.18948152661323547, 0.053124718368053436, 0.04889366775751114, 0.019488133490085602, 0.02467416040599346, 0.006563469301909208, 0.0897190123796463, 0.02861795946955681, 0.10156156122684479], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 13:49:12.966483", "n_pass": [168, 31, 21], "n_token": 21, "loss": [0.016802219673991203, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "self", "*", "args", "#NEWLINE#", "newValue", "(", "self", "self", ".", "#NEWLINE#", "if", "newValue", "self", ".", "self", ".", "newValue", "#NEWLINE#", "self", "."]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [5, 12, 17, 3, 1, 7, 8, 13, 15, 19]}}
{"prediction": {"error_location": 0.9833382368087769, "repair_targets": [], "repair_candidates": [0.056766580790281296, 0.8371195197105408, 0.00809540320187807, 0.006386139430105686, 0.002425565617159009, 0.005779940169304609, 0.002050135051831603, 0.04645666107535362, 0.016507795080542564, 0.018412131816148758], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 13:49:13.025029", "n_pass": [169, 32, 22], "n_token": 20, "loss": [0.04743430018424988, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "self", "args", "#NEWLINE#", "newValue", "(", "self", "self", ".", "#NEWLINE#", "if", "newValue", "self", ".", "self", ".", "newValue", "#NEWLINE#", "self", "."]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [4, 11, 16, 2, 1, 6, 7, 12, 14, 18]}}
{"prediction": {"error_location": 0.9536731243133545, "repair_targets": [], "repair_candidates": [0.018874788656830788, 0.9791967272758484, 0.00041344386409036815, 6.894201942486688e-05, 2.4132978069246747e-05, 4.1314011468784884e-05, 3.2301319151883945e-05, 0.0008694329881109297, 0.0002662247861735523, 0.00021268609270919114], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 13:49:13.082848", "n_pass": [171, 33, 23], "n_token": 19, "loss": [0.08922810852527618, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "self", "args", "newValue", "(", "self", "self", ".", "#NEWLINE#", "if", "newValue", "self", ".", "self", ".", "newValue", "#NEWLINE#", "self", "."]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [3, 10, 15, 2, 1, 5, 6, 11, 13, 17]}}
{"prediction": {"error_location": 0.9146367907524109, "repair_targets": [], "repair_candidates": [0.02398667298257351, 0.9638990163803101, 0.005922864191234112, 0.00031992525327950716, 9.202851651934907e-05, 0.0003046948404517025, 0.0002127989282598719, 0.002370489062741399, 0.0006696305936202407, 0.002221953123807907], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 13:49:13.140409", "n_pass": [173, 34, 24], "n_token": 18, "loss": [0.04130123555660248, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "self", "args", "newValue", "self", "self", ".", "#NEWLINE#", "if", "newValue", "self", ".", "self", ".", "newValue", "#NEWLINE#", "self", "."]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [3, 9, 14, 2, 1, 4, 5, 10, 12, 16]}}
{"prediction": {"error_location": 0.9595401287078857, "repair_targets": [], "repair_candidates": [0.03364989906549454, 0.9485953450202942, 0.010324092581868172, 0.0005303301732055843, 0.0001005498124868609, 0.00047449918929487467, 0.00019644349231384695, 0.001839273376390338, 0.0006260474910959601, 0.003663543611764908], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 13:49:13.197502", "n_pass": [176, 35, 25], "n_token": 17, "loss": [0.05586322024464607, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "self", "args", "newValue", "self", "self", "#NEWLINE#", "if", "newValue", "self", ".", "self", ".", "newValue", "#NEWLINE#", "self", "."]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [3, 8, 13, 2, 1, 4, 5, 9, 11, 15]}}
{"prediction": {"error_location": 0.9456685781478882, "repair_targets": [], "repair_candidates": [0.06311687082052231, 0.9160025715827942, 0.008852393366396427, 0.00026077142683789134, 0.00011850223381770775, 0.0007182261324487627, 0.00016749433416407555, 0.0055115255527198315, 0.002265676623210311, 0.0029859752394258976], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 13:49:13.256123", "n_pass": [177, 36, 26], "n_token": 16, "loss": [0.20518958568572998, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "self", "args", "newValue", "self", "self", "if", "newValue", "self", ".", "self", ".", "newValue", "#NEWLINE#", "self", "."]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [3, 7, 12, 2, 1, 4, 5, 8, 10, 14]}}
{"prediction": {"error_location": 0.8144928812980652, "repair_targets": [], "repair_candidates": [0.053267013281583786, 0.9310815334320068, 0.006636667065322399, 0.00012250196596141905, 1.516028441983508e-05, 0.00012359458196442574, 1.227642314916011e-05, 0.006473584100604057, 0.0013240574626252055, 0.0009435578249394894], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 13:49:13.312090", "n_pass": [178, 37, 27], "n_token": 15, "loss": [0.11453931778669357, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "self", "args", "newValue", "self", "self", "newValue", "self", ".", "self", ".", "newValue", "#NEWLINE#", "self", "."]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [3, 6, 11, 2, 1, 4, 5, 7, 9, 13]}}
{"prediction": {"error_location": 0.8917768001556396, "repair_targets": [], "repair_candidates": [0.035543397068977356, 0.9411742687225342, 0.005481063388288021, 0.00016573000175412744, 2.8575108444783837e-05, 0.00018657726468518376, 0.00024282888625748456, 0.009052983485162258, 0.002787605859339237, 0.005337107926607132], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 13:49:13.367736", "n_pass": [181, 38, 28], "n_token": 14, "loss": [0.1673060804605484, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "self", "args", "newValue", "self", "self", "newValue", "self", "self", ".", "newValue", "#NEWLINE#", "self", "."]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [3, 6, 10, 2, 1, 4, 5, 7, 8, 12]}}
{"prediction": {"error_location": 0.8459407091140747, "repair_targets": [], "repair_candidates": [0.03777974098920822, 0.9489898085594177, 0.008216369897127151, 0.00012559919559862465, 2.015361860685516e-05, 1.810781395761296e-05, 0.00014622294111177325, 0.00011991333303740248, 0.003116514766588807, 0.0014674941776320338], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 13:49:13.533728", "n_pass": [204, 41, 29], "n_token": 13, "loss": [0.06804777681827545, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "self", "args", "newValue", "self", "self", "newValue", "self", "self", "newValue", "#NEWLINE#", "self", "."]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [3, 6, 9, 2, 1, 4, 5, 7, 8, 11]}}
{"prediction": {"error_location": 0.9342159628868103, "repair_targets": [], "repair_candidates": [0.03819068893790245, 0.9452614188194275, 0.009520761668682098, 0.0001413771096849814, 5.4729283874621615e-05, 0.00014533475041389465, 0.00014882851974107325, 0.00014810344146098942, 2.266025694552809e-05, 0.0063659995794296265], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 13:49:13.645332", "n_pass": [208, 43, 30], "n_token": 12, "loss": [0.07338426262140274, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "self", "args", "newValue", "self", "self", "newValue", "self", "self", "newValue", "#NEWLINE#", "self"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [3, 6, 9, 2, 1, 4, 5, 7, 8, 11]}}
{"prediction": {"error_location": 0.9292436838150024, "repair_targets": [], "repair_candidates": [0.028955496847629547, 0.953203558921814, 0.008599821478128433, 0.00017194797692354769, 0.00013735229731537402, 0.0008090365445241332, 0.0002907670568674803, 0.00030756229534745216, 5.8392597566125914e-05, 0.007466013077646494], "target_probs": 0.0}}




Minimal simplified tokens:

['#NEWLINE#', 'self', 'args', 'newValue', 'self', 'self', 'newValue', 'self', 'self', 'newValue', '#NEWLINE#', 'self']
