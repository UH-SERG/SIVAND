
Original sample:

{"has_bug": false, "bug_kind": 0, "bug_kind_name": "NONE", "source_tokens": ["#NEWLINE#", "def GetPoleType(", "self", ")", ":", "#NEWLINE#", "#INDENT#", "'Get the pole vector type'", "#NEWLINE#", "poleVectorType", "=", "self", ".", "component", ".", "PropertyList", ".", "Find", "(", "'PoleVectorType'", ")", ".", "Data", "#NEWLINE#", "for", "(", "_type", ",", "idx", ")", "in", "self", ".", "kPoleType", ".", "iteritems", "(", ")", ":", "#NEWLINE#", "#INDENT#", "if", "(", "poleVectorType", "==", "idx", ")", ":", "#NEWLINE#", "#INDENT#", "return", "_type"], "error_location": [0], "repair_targets": [], "repair_candidates": [9, 43, 26, 51, 2, 11, 31, 28, 45], "provenances": [{"datasetProvenance": {"datasetName": "ETHPy150Open", "filepath": "CountZer0/PipelineConstructionSet/python/moBu/site-packages/PyMoBu-0.2/pymobu/components/constraints.py", "license": "bsd-3-clause", "note": "license: bigquery_api"}}], "txt_file": "eval__VARIABLE_MISUSE__SStuB.txt-00000-of-00300", "js_count": 2305, "results": {"model": "rnn", "prob": {"loc": [[0.6543298959732056, 7.613099910486198e-07, 8.220426934713032e-07, 1.2230809254276664e-08, 1.3120816433342952e-08, 5.387993269323488e-07, 1.3577661661656748e-07, 4.7170903627602456e-08, 5.519880801330146e-07, 3.894876243748513e-08, 8.582536992207679e-08, 4.427243140980863e-07, 2.632800089052978e-10, 1.952918937675463e-09, 2.8037266730507326e-08, 5.274259695653427e-09, 1.9504740933484754e-08, 4.125147157196807e-08, 7.484722885919837e-08, 1.902820486066048e-06, 1.476648230891442e-05, 2.0506566045241925e-07, 1.5398431969515514e-06, 3.181639840477146e-05, 1.8926961047327495e-06, 2.8103762872433435e-08, 3.4817787764040986e-06, 5.583286224464246e-07, 2.403950247753528e-06, 1.1153395718110914e-07, 1.8680871960441436e-08, 3.6834211414316087e-07, 1.0733969268983401e-08, 4.310602363943872e-08, 8.62806786017245e-08, 1.2945818639309437e-07, 1.973212965822313e-05, 2.2276595700532198e-05, 4.4343255467538256e-07, 7.395128136522544e-07, 1.2487048479670193e-06, 2.1086368917622167e-07, 1.1823318345705047e-05, 0.11701027303934097, 0.0033072938676923513, 0.1744193434715271, 7.469096772183548e-07, 2.542308550346206e-07, 2.155905463041563e-07, 6.211980263515215e-08, 5.795741526526399e-05, 0.05075458809733391]], "pointer": [[0.0, 0.0, 0.001195077900774777, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.41778168082237244, 0.0, 0.0016194742638617754, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.2753444015979767, 0.0, 0.3004631996154785, 0.0, 0.0, 0.0028400765731930733, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.00022555203759111464, 0.0, 0.0004380813625175506, 0.0, 0.0, 0.0, 0.0, 0.0, 9.251826850231737e-05]], "target": [0.0]}, "loss": [0.42414364218711853, 0.0], "acc": [1.0, 0.0, 0.0, 0.0]}}


Trace of simplified code(s):

{"result": {"time": "2021-02-11 14:12:46.360357", "n_pass": [1, 1, 1], "n_token": 52, "loss": [0.42414364218711853, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def GetPoleType(", "self", ")", ":", "#NEWLINE#", "#INDENT#", "'Get the pole vector type'", "#NEWLINE#", "poleVectorType", "=", "self", ".", "component", ".", "PropertyList", ".", "Find", "(", "'PoleVectorType'", ")", ".", "Data", "#NEWLINE#", "for", "(", "_type", ",", "idx", ")", "in", "self", ".", "kPoleType", ".", "iteritems", "(", ")", ":", "#NEWLINE#", "#INDENT#", "if", "(", "poleVectorType", "==", "idx", ")", ":", "#NEWLINE#", "#INDENT#", "return", "_type"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [9, 43, 26, 51, 2, 11, 31, 28, 45]}}
{"prediction": {"error_location": 0.6543298959732056, "repair_targets": [], "repair_candidates": [0.001195077900774777, 0.41778168082237244, 0.0016194742638617754, 0.2753444015979767, 0.3004631996154785, 0.0028400765731930733, 0.00022555203759111464, 0.0004380813625175506, 9.251826850231737e-05], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 14:12:46.428475", "n_pass": [9, 2, 2], "n_token": 39, "loss": [0.5867902040481567, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def GetPoleType(", "self", ")", ":", "#NEWLINE#", "#INDENT#", "'Get the pole vector type'", "#NEWLINE#", "poleVectorType", "=", "self", ".", "_type", ",", "idx", ")", "in", "self", ".", "kPoleType", ".", "iteritems", "(", ")", ":", "#NEWLINE#", "#INDENT#", "if", "(", "poleVectorType", "==", "idx", ")", ":", "#NEWLINE#", "#INDENT#", "return", "_type"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [9, 30, 13, 38, 2, 11, 18, 15, 32]}}
{"prediction": {"error_location": 0.5561094284057617, "repair_targets": [], "repair_candidates": [0.03925195336341858, 0.8456454277038574, 0.041977860033512115, 0.016759909689426422, 0.04697199910879135, 0.008767161518335342, 0.00017256231512874365, 0.00036711900611408055, 8.60100844874978e-05], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 14:12:46.497917", "n_pass": [39, 3, 3], "n_token": 36, "loss": [0.6574639081954956, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def GetPoleType(", "self", ")", ":", "#NEWLINE#", "#INDENT#", "'Get the pole vector type'", "#NEWLINE#", "poleVectorType", "=", "self", ".", "_type", ",", "idx", ")", "in", "self", ".", "kPoleType", ")", ":", "#NEWLINE#", "#INDENT#", "if", "(", "poleVectorType", "==", "idx", ")", ":", "#NEWLINE#", "#INDENT#", "return", "_type"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [9, 27, 13, 35, 2, 11, 18, 15, 29]}}
{"prediction": {"error_location": 0.518163800239563, "repair_targets": [], "repair_candidates": [0.09104111790657043, 0.42515450716018677, 0.034421656280756, 0.009517527185380459, 0.01456483919173479, 0.4247623682022095, 0.00021849354379810393, 0.00020642377785407007, 0.00011303854262223467], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 14:12:46.562370", "n_pass": [40, 4, 4], "n_token": 33, "loss": [0.4455725848674774, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def GetPoleType(", "self", ")", ":", "#NEWLINE#", "#INDENT#", "'Get the pole vector type'", "#NEWLINE#", "poleVectorType", "=", "self", ".", "_type", ",", "idx", ")", "in", "self", ".", "kPoleType", "#INDENT#", "if", "(", "poleVectorType", "==", "idx", ")", ":", "#NEWLINE#", "#INDENT#", "return", "_type"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [9, 24, 13, 32, 2, 11, 18, 15, 26]}}
{"prediction": {"error_location": 0.6404574513435364, "repair_targets": [], "repair_candidates": [0.08436089754104614, 0.7460388541221619, 0.04711528122425079, 0.017003824934363365, 0.05072418227791786, 0.0540313720703125, 0.00019286420138087124, 0.0003984774521086365, 0.00013419071910902858], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 14:12:46.625547", "n_pass": [45, 5, 5], "n_token": 30, "loss": [0.4988548755645752, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def GetPoleType(", "self", "#INDENT#", "'Get the pole vector type'", "#NEWLINE#", "poleVectorType", "=", "self", ".", "_type", ",", "idx", ")", "in", "self", ".", "kPoleType", "#INDENT#", "if", "(", "poleVectorType", "==", "idx", ")", ":", "#NEWLINE#", "#INDENT#", "return", "_type"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [6, 21, 10, 29, 2, 8, 15, 12, 23]}}
{"prediction": {"error_location": 0.6072255373001099, "repair_targets": [], "repair_candidates": [0.004523885902017355, 0.9077720642089844, 0.013470846228301525, 0.01142477709800005, 0.04970327019691467, 0.0127699701115489, 8.120330312522128e-05, 0.00021181887132115662, 4.2069666960742325e-05], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 14:12:46.749855", "n_pass": [74, 7, 6], "n_token": 29, "loss": [0.48516958951950073, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def GetPoleType(", "self", "'Get the pole vector type'", "#NEWLINE#", "poleVectorType", "=", "self", ".", "_type", ",", "idx", ")", "in", "self", ".", "kPoleType", "#INDENT#", "if", "(", "poleVectorType", "==", "idx", ")", ":", "#NEWLINE#", "#INDENT#", "return", "_type"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [5, 20, 9, 28, 2, 7, 14, 11, 22]}}
{"prediction": {"error_location": 0.6155927181243896, "repair_targets": [], "repair_candidates": [0.0007937197806313634, 0.7786749601364136, 0.037140559405088425, 0.01992568001151085, 0.1348610818386078, 0.02783459983766079, 0.0002595023834146559, 0.0004178294038865715, 9.199468331644312e-05], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 14:12:46.812519", "n_pass": [75, 8, 7], "n_token": 28, "loss": [0.5451579093933105, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def GetPoleType(", "self", "#NEWLINE#", "poleVectorType", "=", "self", ".", "_type", ",", "idx", ")", "in", "self", ".", "kPoleType", "#INDENT#", "if", "(", "poleVectorType", "==", "idx", ")", ":", "#NEWLINE#", "#INDENT#", "return", "_type"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [4, 19, 8, 27, 2, 6, 13, 10, 21]}}
{"prediction": {"error_location": 0.5797501802444458, "repair_targets": [], "repair_candidates": [0.27924537658691406, 0.18490512669086456, 0.029513530433177948, 0.05867673456668854, 0.37046727538108826, 0.07511433213949203, 0.0006186047103255987, 0.0012445886386558414, 0.00021444792218971997], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 14:12:46.875983", "n_pass": [81, 9, 8], "n_token": 26, "loss": [0.5514454245567322, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def GetPoleType(", "self", "#NEWLINE#", "poleVectorType", "=", "self", ".", "_type", ",", "idx", ")", "in", "self", "#INDENT#", "if", "(", "poleVectorType", "==", "idx", ")", ":", "#NEWLINE#", "#INDENT#", "return", "_type"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [4, 17, 8, 25, 2, 6, 13, 10, 19]}}
{"prediction": {"error_location": 0.5761165022850037, "repair_targets": [], "repair_candidates": [0.12745843827724457, 0.18076813220977783, 0.005181991029530764, 0.047399334609508514, 0.6218692064285278, 0.016947666183114052, 4.89416706841439e-05, 0.00019585016707424074, 0.0001304016332142055], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 14:12:46.936122", "n_pass": [82, 10, 9], "n_token": 24, "loss": [0.6946695446968079, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def GetPoleType(", "self", "#NEWLINE#", "poleVectorType", "=", "self", ".", "_type", ",", "idx", ")", "in", "self", "(", "poleVectorType", "==", "idx", ")", ":", "#NEWLINE#", "#INDENT#", "return", "_type"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [4, 15, 8, 23, 2, 6, 13, 10, 17]}}
{"prediction": {"error_location": 0.49923941493034363, "repair_targets": [], "repair_candidates": [0.2565692961215973, 0.12673285603523254, 0.00827233586460352, 0.05452769249677658, 0.549853503704071, 0.0038760050665587187, 3.943726187571883e-05, 7.25836944184266e-05, 5.6279943237314e-05], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 14:12:46.995222", "n_pass": [85, 11, 10], "n_token": 22, "loss": [0.35497406125068665, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def GetPoleType(", "self", "#NEWLINE#", "poleVectorType", "=", "self", ".", "_type", ",", "idx", ")", "in", "self", "(", "poleVectorType", "==", "idx", "#NEWLINE#", "#INDENT#", "return", "_type"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [4, 15, 8, 21, 2, 6, 13, 10, 17]}}
{"prediction": {"error_location": 0.7011916041374207, "repair_targets": [], "repair_candidates": [0.41377124190330505, 0.13755446672439575, 0.024267802014946938, 0.03162221983075142, 0.3797486126422882, 0.012843795120716095, 3.735587961273268e-05, 0.00011293986608507112, 4.153787449467927e-05], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 14:12:47.053696", "n_pass": [86, 12, 11], "n_token": 20, "loss": [0.31324151158332825, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def GetPoleType(", "self", "#NEWLINE#", "poleVectorType", "=", "self", ".", "_type", ",", "idx", ")", "in", "self", "(", "poleVectorType", "==", "idx", "return", "_type"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [4, 15, 8, 19, 2, 6, 13, 10, 17]}}
{"prediction": {"error_location": 0.7310733795166016, "repair_targets": [], "repair_candidates": [0.49633798003196716, 0.08145079761743546, 0.05256891995668411, 0.02243519201874733, 0.3305956721305847, 0.016391605138778687, 3.126038427581079e-05, 0.00011634628754109144, 7.233571523102e-05], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 14:12:47.112015", "n_pass": [89, 13, 12], "n_token": 19, "loss": [0.6403125524520874, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "self", "#NEWLINE#", "poleVectorType", "=", "self", ".", "_type", ",", "idx", ")", "in", "self", "(", "poleVectorType", "==", "idx", "return", "_type"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [3, 14, 7, 18, 1, 5, 12, 9, 16]}}
{"prediction": {"error_location": 0.5271275639533997, "repair_targets": [], "repair_candidates": [0.7402589321136475, 0.0811685100197792, 0.1109808087348938, 0.001678379951044917, 0.0369756706058979, 0.02869749441742897, 2.167545426345896e-05, 0.0001584633137099445, 6.0101454437244684e-05], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 14:12:47.342304", "n_pass": [122, 17, 13], "n_token": 18, "loss": [0.4560238718986511, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "self", "#NEWLINE#", "poleVectorType", "=", "self", ".", "_type", "idx", ")", "in", "self", "(", "poleVectorType", "==", "idx", "return", "_type"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [3, 13, 7, 17, 1, 5, 11, 8, 15]}}
{"prediction": {"error_location": 0.6337986588478088, "repair_targets": [], "repair_candidates": [0.7617872357368469, 0.07245860248804092, 0.13890954852104187, 0.001192007097415626, 0.008261471055448055, 0.017202388495206833, 1.3758505701844115e-05, 0.00013336936535779387, 4.1586732550058514e-05], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 14:12:47.399452", "n_pass": [124, 18, 14], "n_token": 17, "loss": [0.5333716869354248, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "self", "#NEWLINE#", "poleVectorType", "=", "self", ".", "_type", "idx", "in", "self", "(", "poleVectorType", "==", "idx", "return", "_type"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [3, 12, 7, 16, 1, 5, 10, 8, 14]}}
{"prediction": {"error_location": 0.5866236686706543, "repair_targets": [], "repair_candidates": [0.771307110786438, 0.08343344181776047, 0.1192408874630928, 0.0020995871163904667, 0.002624988555908203, 0.021108478307724, 1.843654172262177e-05, 0.000131028558826074, 3.6027115129400045e-05], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 14:12:47.455714", "n_pass": [125, 19, 15], "n_token": 16, "loss": [0.3108116686344147, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "self", "#NEWLINE#", "poleVectorType", "=", "self", ".", "_type", "idx", "self", "(", "poleVectorType", "==", "idx", "return", "_type"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [3, 11, 7, 15, 1, 5, 9, 8, 13]}}
{"prediction": {"error_location": 0.7328518629074097, "repair_targets": [], "repair_candidates": [0.8647503852844238, 0.08230889588594437, 0.05059308558702469, 0.00019624095875769854, 0.00042562451562844217, 0.0015853061340749264, 3.841828220174648e-05, 6.592861609533429e-05, 3.606462632887997e-05], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 14:12:47.570082", "n_pass": [129, 21, 16], "n_token": 15, "loss": [0.31039130687713623, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "self", "#NEWLINE#", "poleVectorType", "=", "self", ".", "_type", "idx", "self", "(", "poleVectorType", "idx", "return", "_type"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [3, 11, 7, 14, 1, 5, 9, 8, 12]}}
{"prediction": {"error_location": 0.7331599593162537, "repair_targets": [], "repair_candidates": [0.7628916501998901, 0.1971486359834671, 0.03852039948105812, 0.000382176018320024, 0.000715689908247441, 0.000242331312620081, 2.2934442313271575e-05, 2.3015489205135964e-05, 5.319384945323691e-05], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 14:12:47.790073", "n_pass": [139, 25, 17], "n_token": 14, "loss": [0.3740657567977905, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "self", "#NEWLINE#", "poleVectorType", "=", "self", "_type", "idx", "self", "(", "poleVectorType", "idx", "return", "_type"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [3, 10, 6, 13, 1, 5, 8, 7, 11]}}
{"prediction": {"error_location": 0.6879317164421082, "repair_targets": [], "repair_candidates": [0.15595228970050812, 0.3061842620372772, 0.532015860080719, 0.004050776362419128, 0.0006987332599237561, 0.0008118842379190028, 8.120755956042558e-05, 4.5701170165557414e-05, 0.00015926285414025187], "target_probs": 0.0}}




Minimal simplified tokens:

['#NEWLINE#', 'self', '#NEWLINE#', 'poleVectorType', '=', 'self', '_type', 'idx', 'self', '(', 'poleVectorType', 'idx', 'return', '_type']
