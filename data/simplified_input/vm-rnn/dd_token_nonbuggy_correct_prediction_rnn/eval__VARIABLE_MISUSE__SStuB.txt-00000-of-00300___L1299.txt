
Original sample:

{"has_bug": false, "bug_kind": 0, "bug_kind_name": "NONE", "source_tokens": ["#NEWLINE#", "def create_instance(", "self", ",", "instance_name", ")", ":", "#NEWLINE#", "#INDENT#", "'\\n        Creates a GCE instance that will be destroyed at the end of the test.\\n        Blocks until the creation has concluded.\\n\\n        :param unicode instance_name: The name of the new instance.\\n\\n        :returns GCEInstance: The instance to use in the tests.\\n        '", "#NEWLINE#", "instance", "=", "self", ".", "_get_instance_builder", "(", ")", ".", "create_instance", "(", "instance_name", ",", "machine_type", "=", "'f1-micro'", ")", "#NEWLINE#", "def destroy_best_effort(", "inst", ")", ":", "#NEWLINE#", "#INDENT#", "try", ":", "#NEWLINE#", "#INDENT#", "inst", ".", "destroy", "(", ")", "#NEWLINE#", "#UNINDENT#", "except", "HttpError", "as", "e", ":", "#NEWLINE#", "#INDENT#", "if", "(", "e", ".", "resp", ".", "status", "==", "404", ")", ":", "#NEWLINE#", "#INDENT#", "pass", "#NEWLINE#", "#UNINDENT#", "else", ":", "#NEWLINE#", "#INDENT#", "raise", "#NEWLINE#", "#UNINDENT#", "#UNINDENT#", "#UNINDENT#", "self", ".", "addCleanup", "(", "(", "lambda", ":", "destroy_best_effort", "(", "instance", ")", ")", ")", "#NEWLINE#", "return", "instance"], "error_location": [0], "repair_targets": [], "repair_candidates": [2, 13, 77, 4, 21, 11, 86, 92, 84], "provenances": [{"datasetProvenance": {"datasetName": "ETHPy150Open", "filepath": "ClusterHQ/flocker/flocker/node/agents/functional/test_gce.py", "license": "apache-2.0", "note": "license: github_api"}}], "txt_file": "eval__VARIABLE_MISUSE__SStuB.txt-00000-of-00300", "js_count": 1299, "results": {"model": "rnn", "prob": {"loc": [[0.7825337052345276, 3.886071681336034e-06, 1.8502680632082047e-06, 7.030005377828275e-08, 8.985996942101337e-07, 1.9113461036113222e-08, 9.631497377426967e-09, 3.2734629940023297e-07, 1.0717617016098302e-07, 7.509910915359796e-08, 1.1489797202557384e-07, 4.061366709606773e-08, 3.828266592620366e-09, 2.83055072713978e-07, 2.540291532682204e-09, 7.680674940502286e-08, 1.2606125032732507e-08, 1.1772610442051246e-08, 3.513512680797248e-08, 4.852204682492811e-08, 7.677702029695865e-08, 0.001082550035789609, 5.905791908844549e-07, 1.3703472632187186e-06, 3.397161307816532e-08, 1.555525159346871e-06, 3.51951257471228e-06, 1.2849663733049965e-07, 3.317002450486939e-09, 3.819870471488684e-06, 1.8338592155942024e-07, 1.2529447701581375e-07, 1.8255882139328605e-07, 1.3847079571860377e-07, 2.24881023314083e-05, 6.404861352393709e-08, 2.8813371955038747e-07, 3.613508070543503e-08, 7.634117196175794e-07, 5.0727059885957715e-08, 5.312035256110903e-08, 4.443404577614274e-07, 1.0674361874407623e-06, 2.86728067067088e-07, 2.9618986445711926e-06, 7.524126885982696e-06, 2.8081188929718337e-07, 7.5824741543328855e-06, 8.130226660796325e-07, 1.5979326235537883e-06, 2.79402388514427e-06, 8.81015921549988e-07, 7.350637076797284e-08, 1.4323829873319482e-06, 0.001542160171084106, 1.5779354711753513e-08, 1.5487672499148175e-05, 5.76948195885052e-08, 5.185274289942754e-07, 1.452378626254358e-07, 3.489162554615177e-05, 1.054909603226406e-06, 1.6830989579830202e-07, 8.457364515379595e-07, 1.7137732356786728e-05, 0.00017036839562933892, 1.4116951660980703e-06, 1.3096544535073917e-05, 2.0066252659489692e-07, 2.2851572794024833e-06, 7.092825171639561e-07, 9.898071340330716e-08, 0.00023980859259609133, 0.00016295532986987382, 1.5309564105336904e-06, 8.366122301595169e-07, 1.2966252427304426e-07, 3.2320278933184454e-06, 6.703064059365715e-08, 6.859078638399296e-08, 3.771223759940767e-07, 0.00011641172750387341, 0.00027861291891895235, 7.504165289162756e-09, 2.3355850586881388e-08, 2.8315765288056127e-09, 0.0002577191044110805, 1.262154647463376e-08, 8.245643279281012e-09, 2.4567368583916505e-08, 9.797414435297469e-08, 7.847995107113093e-07, 0.21344925463199615]], "pointer": [[0.0, 0.0, 0.009025122039020061, 0.0, 0.30388954281806946, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.004365937784314156, 0.0, 0.00016650871839374304, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0005973433726467192, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.023460639640688896, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.492731511592865, 0.0, 0.16454462707042694, 0.0, 0.0, 0.0, 0.0, 0.0, 0.001218722085468471]], "target": [0.0]}, "loss": [0.24521827697753906, 0.0], "acc": [1.0, 0.0, 0.0, 0.0]}}


Trace of simplified code(s):

{"result": {"time": "2021-02-11 13:48:37.534456", "n_pass": [1, 1, 1], "n_token": 93, "loss": [0.24521827697753906, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def create_instance(", "self", ",", "instance_name", ")", ":", "#NEWLINE#", "#INDENT#", "'\\n        Creates a GCE instance that will be destroyed at the end of the test.\\n        Blocks until the creation has concluded.\\n\\n        :param unicode instance_name: The name of the new instance.\\n\\n        :returns GCEInstance: The instance to use in the tests.\\n        '", "#NEWLINE#", "instance", "=", "self", ".", "_get_instance_builder", "(", ")", ".", "create_instance", "(", "instance_name", ",", "machine_type", "=", "'f1-micro'", ")", "#NEWLINE#", "def destroy_best_effort(", "inst", ")", ":", "#NEWLINE#", "#INDENT#", "try", ":", "#NEWLINE#", "#INDENT#", "inst", ".", "destroy", "(", ")", "#NEWLINE#", "#UNINDENT#", "except", "HttpError", "as", "e", ":", "#NEWLINE#", "#INDENT#", "if", "(", "e", ".", "resp", ".", "status", "==", "404", ")", ":", "#NEWLINE#", "#INDENT#", "pass", "#NEWLINE#", "#UNINDENT#", "else", ":", "#NEWLINE#", "#INDENT#", "raise", "#NEWLINE#", "#UNINDENT#", "#UNINDENT#", "#UNINDENT#", "self", ".", "addCleanup", "(", "(", "lambda", ":", "destroy_best_effort", "(", "instance", ")", ")", ")", "#NEWLINE#", "return", "instance"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [2, 13, 77, 4, 21, 11, 86, 92, 84]}}
{"prediction": {"error_location": 0.7825337052345276, "repair_targets": [], "repair_candidates": [0.009025122039020061, 0.30388954281806946, 0.004365937784314156, 0.00016650871839374304, 0.0005973433726467192, 0.023460639640688896, 0.492731511592865, 0.16454462707042694, 0.001218722085468471], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 13:48:37.618999", "n_pass": [9, 2, 2], "n_token": 70, "loss": [0.3392232656478882, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def create_instance(", "self", ",", "instance_name", ")", ":", "#NEWLINE#", "#INDENT#", "'\\n        Creates a GCE instance that will be destroyed at the end of the test.\\n        Blocks until the creation has concluded.\\n\\n        :param unicode instance_name: The name of the new instance.\\n\\n        :returns GCEInstance: The instance to use in the tests.\\n        '", "#NEWLINE#", "instance", "=", "self", ".", "_get_instance_builder", "(", ")", ".", "create_instance", "(", "instance_name", ",", "HttpError", "as", "e", ":", "#NEWLINE#", "#INDENT#", "if", "(", "e", ".", "resp", ".", "status", "==", "404", ")", ":", "#NEWLINE#", "#INDENT#", "pass", "#NEWLINE#", "#UNINDENT#", "else", ":", "#NEWLINE#", "#INDENT#", "raise", "#NEWLINE#", "#UNINDENT#", "#UNINDENT#", "#UNINDENT#", "self", ".", "addCleanup", "(", "(", "lambda", ":", "destroy_best_effort", "(", "instance", ")", ")", ")", "#NEWLINE#", "return", "instance"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [2, 13, 54, 4, 21, 11, 63, 69, 61]}}
{"prediction": {"error_location": 0.7123233079910278, "repair_targets": [], "repair_candidates": [0.015111753717064857, 0.530861496925354, 0.18213705718517303, 0.0006995783769525588, 0.0009139979956671596, 0.040665220469236374, 0.19422052800655365, 0.034612495452165604, 0.000777821580413729], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 13:48:37.690947", "n_pass": [10, 3, 3], "n_token": 47, "loss": [0.06441440433263779, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def create_instance(", "self", ",", "instance_name", ")", ":", "#NEWLINE#", "#INDENT#", "'\\n        Creates a GCE instance that will be destroyed at the end of the test.\\n        Blocks until the creation has concluded.\\n\\n        :param unicode instance_name: The name of the new instance.\\n\\n        :returns GCEInstance: The instance to use in the tests.\\n        '", "#NEWLINE#", "instance", "=", "self", ".", "_get_instance_builder", "(", ")", ".", "create_instance", "(", "instance_name", ",", ":", "#NEWLINE#", "#INDENT#", "raise", "#NEWLINE#", "#UNINDENT#", "#UNINDENT#", "#UNINDENT#", "self", ".", "addCleanup", "(", "(", "lambda", ":", "destroy_best_effort", "(", "instance", ")", ")", ")", "#NEWLINE#", "return", "instance"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [2, 13, 31, 4, 21, 11, 40, 46, 38]}}
{"prediction": {"error_location": 0.9376163482666016, "repair_targets": [], "repair_candidates": [0.012505494989454746, 0.15059059858322144, 0.7845624089241028, 0.0015578968450427055, 0.0007844449137337506, 0.014737121760845184, 0.03253956511616707, 0.0023338175378739834, 0.00038870665594004095], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 13:48:37.763472", "n_pass": [27, 4, 4], "n_token": 41, "loss": [0.4420478641986847, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def create_instance(", "self", ",", "instance_name", ")", ":", "#NEWLINE#", "#INDENT#", "'\\n        Creates a GCE instance that will be destroyed at the end of the test.\\n        Blocks until the creation has concluded.\\n\\n        :param unicode instance_name: The name of the new instance.\\n\\n        :returns GCEInstance: The instance to use in the tests.\\n        '", "#NEWLINE#", "instance", "=", "self", ".", "_get_instance_builder", "(", ")", ".", "create_instance", "(", "instance_name", ",", "#UNINDENT#", "#UNINDENT#", "self", ".", "addCleanup", "(", "(", "lambda", ":", "destroy_best_effort", "(", "instance", ")", ")", ")", "#NEWLINE#", "return", "instance"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [2, 13, 25, 4, 21, 11, 34, 40, 32]}}
{"prediction": {"error_location": 0.6427188515663147, "repair_targets": [], "repair_candidates": [0.014059396460652351, 0.9178590774536133, 0.023412156850099564, 0.00044025329407304525, 0.000497241213452071, 0.013584482483565807, 0.029132621362805367, 0.0009082978358492255, 0.00010647126327967271], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 13:48:37.829882", "n_pass": [31, 5, 5], "n_token": 35, "loss": [0.15336191654205322, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def create_instance(", "self", ",", "instance_name", "instance", "=", "self", ".", "_get_instance_builder", "(", ")", ".", "create_instance", "(", "instance_name", ",", "#UNINDENT#", "#UNINDENT#", "self", ".", "addCleanup", "(", "(", "lambda", ":", "destroy_best_effort", "(", "instance", ")", ")", ")", "#NEWLINE#", "return", "instance"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [2, 7, 19, 4, 15, 5, 28, 34, 26]}}
{"prediction": {"error_location": 0.857819139957428, "repair_targets": [], "repair_candidates": [0.4484984874725342, 0.060410913079977036, 0.03062734752893448, 0.0007708063931204379, 0.0023167424369603395, 0.42848196625709534, 0.02551436983048916, 0.0027806912548840046, 0.0005985746975056827], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 13:48:37.895689", "n_pass": [51, 6, 6], "n_token": 32, "loss": [0.2567934989929199, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def create_instance(", "self", ",", "instance_name", "instance", "=", "self", ")", ".", "create_instance", "(", "instance_name", ",", "#UNINDENT#", "#UNINDENT#", "self", ".", "addCleanup", "(", "(", "lambda", ":", "destroy_best_effort", "(", "instance", ")", ")", ")", "#NEWLINE#", "return", "instance"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [2, 7, 16, 4, 12, 5, 25, 31, 23]}}
{"prediction": {"error_location": 0.7735279202461243, "repair_targets": [], "repair_candidates": [0.31956034898757935, 0.18026719987392426, 0.06884970515966415, 0.16753315925598145, 0.0022078005131334066, 0.23619797825813293, 0.02158389240503311, 0.0022389856167137623, 0.001560926903039217], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 13:48:37.959157", "n_pass": [52, 7, 7], "n_token": 29, "loss": [0.1926383078098297, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def create_instance(", "self", ",", "instance_name", "instance", "=", "self", "(", "instance_name", ",", "#UNINDENT#", "#UNINDENT#", "self", ".", "addCleanup", "(", "(", "lambda", ":", "destroy_best_effort", "(", "instance", ")", ")", ")", "#NEWLINE#", "return", "instance"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [2, 7, 13, 4, 9, 5, 22, 28, 20]}}
{"prediction": {"error_location": 0.8247802257537842, "repair_targets": [], "repair_candidates": [0.15479004383087158, 0.5003429651260376, 0.1795637309551239, 0.014773298054933548, 0.012557758949697018, 0.0713055357336998, 0.05917767435312271, 0.006786610931158066, 0.0007023927173577249], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 13:48:38.021110", "n_pass": [55, 8, 8], "n_token": 26, "loss": [0.15613116323947906, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def create_instance(", "self", ",", "instance_name", "instance", "=", "self", "(", "instance_name", ",", "#UNINDENT#", "#UNINDENT#", "self", "(", "lambda", ":", "destroy_best_effort", "(", "instance", ")", ")", ")", "#NEWLINE#", "return", "instance"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [2, 7, 13, 4, 9, 5, 19, 25, 17]}}
{"prediction": {"error_location": 0.8554468750953674, "repair_targets": [], "repair_candidates": [0.15695245563983917, 0.13180160522460938, 0.04405472055077553, 0.026574725285172462, 0.004533777944743633, 0.5571337342262268, 0.07466760277748108, 0.0037632733583450317, 0.0005180211155675352], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 13:48:38.144382", "n_pass": [58, 10, 9], "n_token": 23, "loss": [0.013285799883306026, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def create_instance(", "self", ",", "instance_name", "instance", "=", "self", "(", "instance_name", ",", "#UNINDENT#", "#UNINDENT#", "self", "(", "lambda", ":", "destroy_best_effort", "(", "instance", "#NEWLINE#", "return", "instance"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [2, 7, 13, 4, 9, 5, 19, 22, 17]}}
{"prediction": {"error_location": 0.9868019223213196, "repair_targets": [], "repair_candidates": [0.07993543148040771, 0.036358170211315155, 0.011987939476966858, 0.03147014230489731, 0.002848274540156126, 0.7907201647758484, 0.045509930700063705, 0.0010129979345947504, 0.00015693495515733957], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 13:48:38.263572", "n_pass": [86, 12, 10], "n_token": 22, "loss": [0.05552113056182861, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "self", ",", "instance_name", "instance", "=", "self", "(", "instance_name", ",", "#UNINDENT#", "#UNINDENT#", "self", "(", "lambda", ":", "destroy_best_effort", "(", "instance", "#NEWLINE#", "return", "instance"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [1, 6, 12, 3, 8, 4, 18, 21, 16]}}
{"prediction": {"error_location": 0.9459922313690186, "repair_targets": [], "repair_candidates": [0.21973851323127747, 0.041610632091760635, 0.011213667690753937, 0.02974456362426281, 0.0003928128571715206, 0.6894192695617676, 0.007611357606947422, 0.00023073531338013709, 3.850928260362707e-05], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 13:48:38.322486", "n_pass": [88, 13, 11], "n_token": 21, "loss": [0.08543036878108978, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "self", "instance_name", "instance", "=", "self", "(", "instance_name", ",", "#UNINDENT#", "#UNINDENT#", "self", "(", "lambda", ":", "destroy_best_effort", "(", "instance", "#NEWLINE#", "return", "instance"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [1, 5, 11, 2, 7, 3, 17, 20, 15]}}
{"prediction": {"error_location": 0.9181169867515564, "repair_targets": [], "repair_candidates": [0.388791024684906, 0.2975858747959137, 0.014848955906927586, 0.021138735115528107, 0.00010422134073451161, 0.2745637595653534, 0.002837901236489415, 0.00011095700756413862, 1.8667349650058895e-05], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 13:48:38.381451", "n_pass": [91, 14, 12], "n_token": 20, "loss": [0.17181241512298584, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "self", "instance_name", "instance", "self", "(", "instance_name", ",", "#UNINDENT#", "#UNINDENT#", "self", "(", "lambda", ":", "destroy_best_effort", "(", "instance", "#NEWLINE#", "return", "instance"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [1, 4, 10, 2, 6, 3, 16, 19, 14]}}
{"prediction": {"error_location": 0.8421372175216675, "repair_targets": [], "repair_candidates": [0.2905537784099579, 0.06919457763433456, 0.0003674938343465328, 0.01248689740896225, 0.00014158700651023537, 0.6240178346633911, 0.00312969833612442, 9.560860780766234e-05, 1.2527802937256638e-05], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 13:48:38.499934", "n_pass": [95, 16, 13], "n_token": 18, "loss": [0.05125674977898598, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "self", "instance_name", "instance", "self", "(", "instance_name", ",", "self", "(", "lambda", ":", "destroy_best_effort", "(", "instance", "#NEWLINE#", "return", "instance"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [1, 4, 8, 2, 6, 3, 14, 17, 12]}}
{"prediction": {"error_location": 0.9500347375869751, "repair_targets": [], "repair_candidates": [0.6258472204208374, 0.21100199222564697, 0.0015564541099593043, 0.03096732124686241, 0.0020368502009660006, 0.10444097220897675, 0.022849150002002716, 0.0011343571823090315, 0.00016563961980864406], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 13:48:38.613576", "n_pass": [106, 18, 14], "n_token": 17, "loss": [0.5755619406700134, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "self", "instance_name", "instance", "self", "instance_name", ",", "self", "(", "lambda", ":", "destroy_best_effort", "(", "instance", "#NEWLINE#", "return", "instance"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [1, 4, 7, 2, 5, 3, 13, 16, 11]}}
{"prediction": {"error_location": 0.5623887777328491, "repair_targets": [], "repair_candidates": [0.0023959227837622166, 0.05726315453648567, 0.21584603190422058, 0.7198758721351624, 0.0022276141680777073, 0.0007166615105234087, 0.0016141454689204693, 5.593431706074625e-05, 4.694130439020228e-06], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 13:48:38.725702", "n_pass": [131, 20, 15], "n_token": 16, "loss": [0.46177977323532104, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "self", "instance_name", "instance", "self", "instance_name", ",", "self", "lambda", ":", "destroy_best_effort", "(", "instance", "#NEWLINE#", "return", "instance"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [1, 4, 7, 2, 5, 3, 12, 15, 10]}}
{"prediction": {"error_location": 0.6301611065864563, "repair_targets": [], "repair_candidates": [0.002979092765599489, 0.055049292743206024, 0.09348376095294952, 0.7954034805297852, 0.030398642644286156, 0.007976807653903961, 0.013796831481158733, 0.0007683803560212255, 0.00014377120533026755], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 13:48:38.839965", "n_pass": [133, 22, 16], "n_token": 15, "loss": [0.8619582653045654, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "self", "instance_name", "instance", "self", "instance_name", ",", "self", "lambda", "destroy_best_effort", "(", "instance", "#NEWLINE#", "return", "instance"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [1, 4, 7, 2, 5, 3, 11, 14, 9]}}
{"prediction": {"error_location": 0.4223341941833496, "repair_targets": [], "repair_candidates": [0.0026757323648780584, 0.06150728836655617, 0.12687870860099792, 0.7794144749641418, 0.009140420705080032, 0.0037141800858080387, 0.016185810789465904, 0.00042273965664207935, 6.058287181076594e-05], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 13:48:38.895614", "n_pass": [135, 23, 17], "n_token": 14, "loss": [0.43790513277053833, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "self", "instance_name", "instance", "self", "instance_name", ",", "self", "lambda", "destroy_best_effort", "instance", "#NEWLINE#", "return", "instance"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [1, 4, 7, 2, 5, 3, 10, 13, 9]}}
{"prediction": {"error_location": 0.6453869938850403, "repair_targets": [], "repair_candidates": [0.032025109976530075, 0.5172535181045532, 0.01756099797785282, 0.0967228040099144, 0.0596352256834507, 0.011167753487825394, 0.25910255312919617, 0.005183341912925243, 0.0013487142277881503], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 13:48:39.004678", "n_pass": [138, 25, 18], "n_token": 13, "loss": [0.21560214459896088, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "self", "instance_name", "instance", "self", "instance_name", ",", "self", "lambda", "destroy_best_effort", "instance", "#NEWLINE#", "instance"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [1, 4, 7, 2, 5, 3, 10, 12, 9]}}
{"prediction": {"error_location": 0.8060558438301086, "repair_targets": [], "repair_candidates": [0.04886307939887047, 0.6330068707466125, 0.010988801717758179, 0.03273473680019379, 0.029548028483986855, 0.009103179909288883, 0.1680644303560257, 0.004182928241789341, 0.0635078027844429], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 13:48:39.113982", "n_pass": [148, 27, 19], "n_token": 12, "loss": [0.08338192105293274, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "self", "instance_name", "instance", "self", "instance_name", ",", "self", "destroy_best_effort", "instance", "#NEWLINE#", "instance"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [1, 4, 7, 2, 5, 3, 9, 11, 8]}}
{"prediction": {"error_location": 0.9199995994567871, "repair_targets": [], "repair_candidates": [0.012456954456865788, 0.12849117815494537, 0.10740155726671219, 0.7181373834609985, 0.02295275405049324, 0.0033490448258817196, 0.00015431146312039346, 8.614820399088785e-05, 0.006970602553337812], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 13:48:39.170360", "n_pass": [151, 28, 20], "n_token": 11, "loss": [0.5200382471084595, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "self", "instance_name", "instance", "self", "instance_name", ",", "self", "destroy_best_effort", "instance", "instance"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [1, 4, 7, 2, 5, 3, 9, 10, 8]}}
{"prediction": {"error_location": 0.594497799873352, "repair_targets": [], "repair_candidates": [0.012520167045295238, 0.19364799559116364, 0.14484229683876038, 0.6064196825027466, 0.03921801969408989, 0.002635367913171649, 0.0002767425903584808, 0.0003173869918100536, 0.000122338198707439], "target_probs": 0.0}}




Minimal simplified tokens:

['#NEWLINE#', 'self', 'instance_name', 'instance', 'self', 'instance_name', ',', 'self', 'destroy_best_effort', 'instance', 'instance']
