
Original sample:

{"has_bug": true, "bug_kind": 1, "bug_kind_name": "VARIABLE_MISUSE", "source_tokens": ["#NEWLINE#", "def get_queue_file_location(", "self", ",", "app_id", ")", ":", "#NEWLINE#", "#INDENT#", "' Gets the location of the queue.yaml or queue.xml file\\n        of a given application.\\n    Args:\\n      app_id: The application ID.\\n    Returns:\\n      The location of the queue.yaml or queue.xml file, and \\n      an empty string if it could not be found.\\n    '", "#NEWLINE#", "queue_yaml", "=", "(", "appscale_info", ".", "get_app_path", "(", "app_id", ")", "+", "'queue.yaml'", ")", "#NEWLINE#", "queue_xml", "=", "(", "appscale_info", ".", "get_app_path", "(", "app_id", ")", "+", "'/war/WEB-INF/queue.xml'", ")", "#NEWLINE#", "if", "file_io", ".", "exists", "(", "queue_yaml", ")", ":", "#NEWLINE#", "#INDENT#", "return", "queue_yaml", "#NEWLINE#", "#UNINDENT#", "else", ":", "#NEWLINE#", "#INDENT#", "if", "file_io", ".", "exists", "(", "queue_xml", ")", ":", "#NEWLINE#", "#INDENT#", "return", "self", "#NEWLINE#", "#UNINDENT#", "else", ":", "#NEWLINE#", "#INDENT#", "return", "''"], "error_location": [66], "repair_targets": [24, 60], "repair_candidates": [4, 18, 31, 24, 60, 11, 42, 48, 2, 66], "provenances": [{"datasetProvenance": {"datasetName": "ETHPy150Open", "filepath": "AppScale/appscale/AppTaskQueue/tq_config.py", "license": "apache-2.0", "note": "license: github_api"}}], "txt_file": "eval__VARIABLE_MISUSE__SStuB.txt-00001-of-00300", "js_count": 4199, "results": {"model": "rnn", "prob": {"loc": [[0.00030514062382280827, 2.3152825490146967e-10, 3.3398747656399053e-10, 1.822224315883858e-11, 7.975183846653522e-10, 2.194800244326167e-11, 2.2267285237909107e-11, 5.400624392137843e-10, 5.414525425240235e-11, 7.985271471833144e-11, 4.7957502552486986e-11, 5.120232710043027e-11, 2.2413355893480258e-11, 1.3581669122686435e-10, 9.088427788128683e-09, 4.51492836173184e-11, 1.2202776289438333e-10, 3.172186124889009e-11, 2.2820147478341823e-06, 7.661201534281403e-12, 1.229515239620227e-10, 1.3140657451060633e-09, 3.5799981035200545e-11, 2.401110976713028e-10, 4.1101383407848857e-10, 8.342240960523828e-12, 1.4089385040605418e-11, 9.169882630999382e-09, 2.3565821169468926e-11, 1.7738246982368366e-10, 8.088558295371584e-11, 2.641756509547122e-06, 3.1906151332083965e-11, 1.1121609189146398e-10, 2.5128114866657114e-11, 2.3681995253710397e-10, 5.413918202634704e-10, 2.406685094269445e-11, 1.402652216597744e-09, 5.916012124629333e-11, 1.5527810148796561e-09, 2.12124151577342e-10, 6.697343633277342e-05, 1.6220798926269708e-08, 5.631668464900486e-10, 5.408304359910687e-10, 2.5812380011203118e-11, 1.0843818065708888e-09, 3.3166492357850075e-05, 3.127175851602715e-09, 6.569705846004581e-08, 4.687304988593155e-10, 1.087024781298851e-08, 2.669738652372189e-09, 8.595298361946391e-10, 2.3768745305297045e-10, 1.4324308850177658e-08, 1.6108824343885608e-11, 4.768280215117215e-10, 7.282761893545597e-11, 7.711932994425297e-05, 1.344940603331679e-09, 1.8166447512957262e-10, 3.777369805835207e-10, 4.4065393695058575e-11, 4.225576333283243e-09, 0.9995100498199463, 2.4370795017603086e-06, 5.879694064958585e-09, 5.7584027823853745e-11, 3.432133910408197e-09, 3.99122707106514e-10, 5.420683693579953e-11, 2.5206444931313854e-08, 1.885761991005097e-09]], "pointer": [[0.0, 0.0, 0.0009603186626918614, 0.0, 0.22557617723941803, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.12007637321949005, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0031066027004271746, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1777380257844925, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0028439995367079973, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0014948969474062324, 0.0, 0.0, 0.0, 0.0, 0.0, 0.001717248815111816, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.4664388597011566, 0.0, 0.0, 0.0, 0.0, 0.0, 4.7525983973173425e-05, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]], "target": [0.6441769003868103]}, "loss": [0.000490068516228348, 0.43978190422058105], "acc": [0.0, 1.0, 1.0, 1.0]}}


Trace of simplified code(s):

{"result": {"time": "2021-02-11 10:51:41.453637", "n_pass": [1, 1, 1], "n_token": 75, "loss": [0.000490068516228348, 0.43978190422058105], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def get_queue_file_location(", "self", ",", "app_id", ")", ":", "#NEWLINE#", "#INDENT#", "' Gets the location of the queue.yaml or queue.xml file\\n        of a given application.\\n    Args:\\n      app_id: The application ID.\\n    Returns:\\n      The location of the queue.yaml or queue.xml file, and \\n      an empty string if it could not be found.\\n    '", "#NEWLINE#", "queue_yaml", "=", "(", "appscale_info", ".", "get_app_path", "(", "app_id", ")", "+", "'queue.yaml'", ")", "#NEWLINE#", "queue_xml", "=", "(", "appscale_info", ".", "get_app_path", "(", "app_id", ")", "+", "'/war/WEB-INF/queue.xml'", ")", "#NEWLINE#", "if", "file_io", ".", "exists", "(", "queue_yaml", ")", ":", "#NEWLINE#", "#INDENT#", "return", "queue_yaml", "#NEWLINE#", "#UNINDENT#", "else", ":", "#NEWLINE#", "#INDENT#", "if", "file_io", ".", "exists", "(", "queue_xml", ")", ":", "#NEWLINE#", "#INDENT#", "return", "self", "#NEWLINE#", "#UNINDENT#", "else", ":", "#NEWLINE#", "#INDENT#", "return", "''"]}}
{"position": {"error_location": 66, "repair_targets": [24, 60], "repair_candidates": [4, 18, 31, 24, 60, 11, 42, 48, 2, 66]}}
{"prediction": {"error_location": 0.9995100498199463, "repair_targets": [0.1777380257844925, 0.4664388597011566], "repair_candidates": [0.0009603186626918614, 0.22557617723941803, 0.12007637321949005, 0.0031066027004271746, 0.1777380257844925, 0.0028439995367079973, 0.0014948969474062324, 0.001717248815111816, 0.4664388597011566, 4.7525983973173425e-05], "target_probs": 0.6441769003868103}}


{"result": {"time": "2021-02-11 10:51:41.543101", "n_pass": [47, 2, 2], "n_token": 71, "loss": [0.0030415249057114124, 0.1872047334909439], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def get_queue_file_location(", "self", ",", "app_id", ")", ":", "#NEWLINE#", "#INDENT#", "' Gets the location of the queue.yaml or queue.xml file\\n        of a given application.\\n    Args:\\n      app_id: The application ID.\\n    Returns:\\n      The location of the queue.yaml or queue.xml file, and \\n      an empty string if it could not be found.\\n    '", "#NEWLINE#", "queue_yaml", "get_app_path", "(", "app_id", ")", "+", "'queue.yaml'", ")", "#NEWLINE#", "queue_xml", "=", "(", "appscale_info", ".", "get_app_path", "(", "app_id", ")", "+", "'/war/WEB-INF/queue.xml'", ")", "#NEWLINE#", "if", "file_io", ".", "exists", "(", "queue_yaml", ")", ":", "#NEWLINE#", "#INDENT#", "return", "queue_yaml", "#NEWLINE#", "#UNINDENT#", "else", ":", "#NEWLINE#", "#INDENT#", "if", "file_io", ".", "exists", "(", "queue_xml", ")", ":", "#NEWLINE#", "#INDENT#", "return", "self", "#NEWLINE#", "#UNINDENT#", "else", ":", "#NEWLINE#", "#INDENT#", "return", "''"]}}
{"position": {"error_location": 62, "repair_targets": [20, 56], "repair_candidates": [4, 14, 27, 20, 56, 11, 38, 44, 2, 62]}}
{"prediction": {"error_location": 0.9969630837440491, "repair_targets": [0.18277572095394135, 0.6464982032775879], "repair_candidates": [0.0009102060575969517, 0.15887734293937683, 0.0027219965122640133, 0.0010066081304103136, 0.18277572095394135, 0.004653749987483025, 0.0013050389243289828, 0.0012006163597106934, 0.6464982032775879, 5.0505816034274176e-05], "target_probs": 0.8292739391326904}}


{"result": {"time": "2021-02-11 10:51:41.708225", "n_pass": [52, 4, 3], "n_token": 66, "loss": [0.004218370653688908, 0.15709558129310608], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def get_queue_file_location(", "self", ",", "app_id", ")", ":", "#NEWLINE#", "#INDENT#", "' Gets the location of the queue.yaml or queue.xml file\\n        of a given application.\\n    Args:\\n      app_id: The application ID.\\n    Returns:\\n      The location of the queue.yaml or queue.xml file, and \\n      an empty string if it could not be found.\\n    '", "#NEWLINE#", "queue_yaml", "get_app_path", "(", "app_id", ")", "+", "'queue.yaml'", ")", "#NEWLINE#", "queue_xml", "=", "(", "appscale_info", ".", "get_app_path", "(", "app_id", ")", "+", "'/war/WEB-INF/queue.xml'", "exists", "(", "queue_yaml", ")", ":", "#NEWLINE#", "#INDENT#", "return", "queue_yaml", "#NEWLINE#", "#UNINDENT#", "else", ":", "#NEWLINE#", "#INDENT#", "if", "file_io", ".", "exists", "(", "queue_xml", ")", ":", "#NEWLINE#", "#INDENT#", "return", "self", "#NEWLINE#", "#UNINDENT#", "else", ":", "#NEWLINE#", "#INDENT#", "return", "''"]}}
{"position": {"error_location": 57, "repair_targets": [20, 51], "repair_candidates": [4, 14, 27, 20, 51, 11, 33, 39, 2, 57]}}
{"prediction": {"error_location": 0.9957906603813171, "repair_targets": [0.10709003359079361, 0.747532308101654], "repair_candidates": [0.0012524058111011982, 0.1358598917722702, 0.0034043851774185896, 0.000834843551274389, 0.10709003359079361, 0.003375050611793995, 0.00012865093594882637, 0.00046096614096313715, 0.747532308101654, 6.140844925539568e-05], "target_probs": 0.8546223640441895}}


{"result": {"time": "2021-02-11 10:51:41.788450", "n_pass": [55, 5, 4], "n_token": 61, "loss": [0.0034221201203763485, 0.12375795841217041], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def get_queue_file_location(", "self", ",", "app_id", ")", ":", "#NEWLINE#", "#INDENT#", "' Gets the location of the queue.yaml or queue.xml file\\n        of a given application.\\n    Args:\\n      app_id: The application ID.\\n    Returns:\\n      The location of the queue.yaml or queue.xml file, and \\n      an empty string if it could not be found.\\n    '", "#NEWLINE#", "queue_yaml", "get_app_path", "(", "app_id", ")", "+", "'queue.yaml'", ")", "#NEWLINE#", "queue_xml", "=", "(", "appscale_info", ".", "get_app_path", "(", "app_id", ")", "+", "'/war/WEB-INF/queue.xml'", "exists", "(", "queue_yaml", ")", ":", "#NEWLINE#", "#INDENT#", "return", "queue_yaml", "#NEWLINE#", "if", "file_io", ".", "exists", "(", "queue_xml", ")", ":", "#NEWLINE#", "#INDENT#", "return", "self", "#NEWLINE#", "#UNINDENT#", "else", ":", "#NEWLINE#", "#INDENT#", "return", "''"]}}
{"position": {"error_location": 52, "repair_targets": [20, 46], "repair_candidates": [4, 14, 27, 20, 46, 11, 33, 39, 2, 52]}}
{"prediction": {"error_location": 0.9965838193893433, "repair_targets": [0.6034836769104004, 0.2801099717617035], "repair_candidates": [0.0012062336318194866, 0.1087133064866066, 0.0034143468365073204, 0.0006865584291517735, 0.6034836769104004, 0.0019600149244070053, 6.91429668222554e-05, 0.0003117381129413843, 0.2801099717617035, 4.504984462982975e-05], "target_probs": 0.8835936784744263}}


{"result": {"time": "2021-02-11 10:51:41.866085", "n_pass": [56, 6, 5], "n_token": 56, "loss": [0.0055774785578250885, 0.002195083536207676], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def get_queue_file_location(", "self", ",", "app_id", ")", ":", "#NEWLINE#", "#INDENT#", "' Gets the location of the queue.yaml or queue.xml file\\n        of a given application.\\n    Args:\\n      app_id: The application ID.\\n    Returns:\\n      The location of the queue.yaml or queue.xml file, and \\n      an empty string if it could not be found.\\n    '", "#NEWLINE#", "queue_yaml", "get_app_path", "(", "app_id", ")", "+", "'queue.yaml'", ")", "#NEWLINE#", "queue_xml", "=", "(", "appscale_info", ".", "get_app_path", "(", "app_id", ")", "+", "'/war/WEB-INF/queue.xml'", "exists", "(", "queue_yaml", ")", ":", "#NEWLINE#", "#INDENT#", "return", "queue_yaml", "#NEWLINE#", "queue_xml", ")", ":", "#NEWLINE#", "#INDENT#", "return", "self", "#NEWLINE#", "#UNINDENT#", "else", ":", "#NEWLINE#", "#INDENT#", "return", "''"]}}
{"position": {"error_location": 47, "repair_targets": [20, 41], "repair_candidates": [4, 14, 27, 20, 41, 11, 33, 39, 2, 47]}}
{"prediction": {"error_location": 0.9944381713867188, "repair_targets": [0.887507975101471, 0.11029935628175735], "repair_candidates": [0.00013735560060013086, 0.001919507747516036, 9.666523692430928e-05, 2.164589568565134e-05, 0.887507975101471, 1.3706894606002606e-05, 1.4606011973228306e-06, 1.5544460438832175e-06, 0.11029935628175735, 6.926771334292425e-07], "target_probs": 0.9978073239326477}}


{"result": {"time": "2021-02-11 10:51:41.943612", "n_pass": [59, 7, 6], "n_token": 51, "loss": [0.029810702428221703, 0.0021606762893497944], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def get_queue_file_location(", "self", ",", "app_id", ")", ":", "#NEWLINE#", "#INDENT#", "' Gets the location of the queue.yaml or queue.xml file\\n        of a given application.\\n    Args:\\n      app_id: The application ID.\\n    Returns:\\n      The location of the queue.yaml or queue.xml file, and \\n      an empty string if it could not be found.\\n    '", "#NEWLINE#", "queue_yaml", "get_app_path", "(", "app_id", ")", "+", "'queue.yaml'", ")", "#NEWLINE#", "queue_xml", "=", "(", "appscale_info", ".", "get_app_path", "(", "app_id", ")", "+", "'/war/WEB-INF/queue.xml'", "exists", "(", "queue_yaml", ")", ":", "#NEWLINE#", "#INDENT#", "return", "queue_yaml", "#NEWLINE#", "queue_xml", ")", ":", "#NEWLINE#", "#INDENT#", "return", "self", "#NEWLINE#", "#UNINDENT#", "else"]}}
{"position": {"error_location": 47, "repair_targets": [20, 41], "repair_candidates": [4, 14, 27, 20, 41, 11, 33, 39, 2, 47]}}
{"prediction": {"error_location": 0.9706291556358337, "repair_targets": [0.9237179756164551, 0.07412370294332504], "repair_candidates": [8.979564881883562e-05, 0.0019332132069393992, 9.843358566286042e-05, 1.831657391448971e-05, 0.9237179756164551, 1.4353143342304975e-05, 1.7133116898548906e-06, 1.6181182900254498e-06, 0.07412370294332504, 8.959497108662617e-07], "target_probs": 0.9978416562080383}}


{"result": {"time": "2021-02-11 10:51:42.016585", "n_pass": [65, 8, 7], "n_token": 46, "loss": [0.5816992521286011, 0.17642682790756226], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def get_queue_file_location(", "self", ",", "app_id", ")", ":", "#NEWLINE#", "#INDENT#", "' Gets the location of the queue.yaml or queue.xml file\\n        of a given application.\\n    Args:\\n      app_id: The application ID.\\n    Returns:\\n      The location of the queue.yaml or queue.xml file, and \\n      an empty string if it could not be found.\\n    '", "#NEWLINE#", "queue_yaml", "get_app_path", "(", "app_id", ")", "+", "'queue.yaml'", ")", "#NEWLINE#", "queue_xml", "(", "app_id", ")", "+", "'/war/WEB-INF/queue.xml'", "exists", "(", "queue_yaml", ")", ":", "#NEWLINE#", "#INDENT#", "return", "queue_yaml", "#NEWLINE#", "queue_xml", ")", ":", "#NEWLINE#", "#INDENT#", "return", "self", "#NEWLINE#", "#UNINDENT#", "else"]}}
{"position": {"error_location": 42, "repair_targets": [20, 36], "repair_candidates": [4, 14, 22, 20, 36, 11, 28, 34, 2, 42]}}
{"prediction": {"error_location": 0.5589478015899658, "repair_targets": [0.006728007458150387, 0.8315321207046509], "repair_candidates": [0.019054634496569633, 0.0946640595793724, 0.032887183129787445, 0.002096151700243354, 0.006728007458150387, 0.010751577094197273, 0.0006709070294164121, 0.0013435458531603217, 0.8315321207046509, 0.00027170946123078465], "target_probs": 0.8382601141929626}}


{"result": {"time": "2021-02-11 10:51:42.088901", "n_pass": [98, 9, 8], "n_token": 44, "loss": [0.13037541508674622, 0.10424761474132538], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def get_queue_file_location(", "self", ",", "app_id", ")", ":", "#NEWLINE#", "#INDENT#", "' Gets the location of the queue.yaml or queue.xml file\\n        of a given application.\\n    Args:\\n      app_id: The application ID.\\n    Returns:\\n      The location of the queue.yaml or queue.xml file, and \\n      an empty string if it could not be found.\\n    '", "#NEWLINE#", "queue_yaml", "get_app_path", "(", "app_id", ")", "+", "'queue.yaml'", ")", "#NEWLINE#", "queue_xml", "(", "app_id", ")", "exists", "(", "queue_yaml", ")", ":", "#NEWLINE#", "#INDENT#", "return", "queue_yaml", "#NEWLINE#", "queue_xml", ")", ":", "#NEWLINE#", "#INDENT#", "return", "self", "#NEWLINE#", "#UNINDENT#", "else"]}}
{"position": {"error_location": 40, "repair_targets": [20, 34], "repair_candidates": [4, 14, 22, 20, 34, 11, 26, 32, 2, 40]}}
{"prediction": {"error_location": 0.877765953540802, "repair_targets": [0.005778937134891748, 0.8952232599258423], "repair_candidates": [0.007849151268601418, 0.059187278151512146, 0.01945648528635502, 0.0010683807777240872, 0.005778937134891748, 0.00810650922358036, 0.0015604172367602587, 0.001629447448067367, 0.8952232599258423, 0.00014006684068590403], "target_probs": 0.9010021686553955}}


{"result": {"time": "2021-02-11 10:51:42.159244", "n_pass": [99, 10, 9], "n_token": 42, "loss": [0.11702553182840347, 0.05345112457871437], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def get_queue_file_location(", "self", ",", "app_id", ")", ":", "#NEWLINE#", "#INDENT#", "' Gets the location of the queue.yaml or queue.xml file\\n        of a given application.\\n    Args:\\n      app_id: The application ID.\\n    Returns:\\n      The location of the queue.yaml or queue.xml file, and \\n      an empty string if it could not be found.\\n    '", "#NEWLINE#", "queue_yaml", "get_app_path", "(", "app_id", ")", "+", "'queue.yaml'", ")", "#NEWLINE#", "queue_xml", "(", "app_id", ")", "queue_yaml", ")", ":", "#NEWLINE#", "#INDENT#", "return", "queue_yaml", "#NEWLINE#", "queue_xml", ")", ":", "#NEWLINE#", "#INDENT#", "return", "self", "#NEWLINE#", "#UNINDENT#", "else"]}}
{"position": {"error_location": 38, "repair_targets": [20, 32], "repair_candidates": [4, 14, 22, 20, 32, 11, 24, 30, 2, 38]}}
{"prediction": {"error_location": 0.8895624876022339, "repair_targets": [0.00825969036668539, 0.9396925568580627], "repair_candidates": [0.008743482641875744, 0.02634727582335472, 0.010283732786774635, 0.0005575141403824091, 0.00825969036668539, 0.004474541172385216, 0.0009236609330400825, 0.0006265861447900534, 0.9396925568580627, 9.108254016609862e-05], "target_probs": 0.9479522705078125}}


{"result": {"time": "2021-02-11 10:51:42.228367", "n_pass": [101, 11, 10], "n_token": 39, "loss": [0.06983762979507446, 0.05255395546555519], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def get_queue_file_location(", "self", ",", "app_id", ")", ":", "#NEWLINE#", "#INDENT#", "' Gets the location of the queue.yaml or queue.xml file\\n        of a given application.\\n    Args:\\n      app_id: The application ID.\\n    Returns:\\n      The location of the queue.yaml or queue.xml file, and \\n      an empty string if it could not be found.\\n    '", "#NEWLINE#", "queue_yaml", "get_app_path", "(", "app_id", ")", "+", "'queue.yaml'", ")", "#NEWLINE#", "queue_xml", "(", "app_id", ")", "queue_yaml", ")", ":", "queue_yaml", "#NEWLINE#", "queue_xml", ")", ":", "#NEWLINE#", "#INDENT#", "return", "self", "#NEWLINE#", "#UNINDENT#", "else"]}}
{"position": {"error_location": 35, "repair_targets": [20, 29], "repair_candidates": [4, 14, 22, 20, 29, 11, 24, 27, 2, 35]}}
{"prediction": {"error_location": 0.9325452446937561, "repair_targets": [0.009617498144507408, 0.939185619354248], "repair_candidates": [0.0008899066597223282, 0.021641341969370842, 0.003994743339717388, 0.0004099784418940544, 0.009617498144507408, 0.02297218330204487, 0.0011961328564211726, 4.8372105084126815e-05, 0.939185619354248, 4.413719580043107e-05], "target_probs": 0.9488031268119812}}


{"result": {"time": "2021-02-11 10:51:42.295641", "n_pass": [103, 12, 11], "n_token": 36, "loss": [0.07879456132650375, 0.6634673476219177], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def get_queue_file_location(", "self", ",", "app_id", ")", ":", "#NEWLINE#", "#INDENT#", "' Gets the location of the queue.yaml or queue.xml file\\n        of a given application.\\n    Args:\\n      app_id: The application ID.\\n    Returns:\\n      The location of the queue.yaml or queue.xml file, and \\n      an empty string if it could not be found.\\n    '", "#NEWLINE#", "queue_yaml", "get_app_path", "(", "app_id", ")", "+", "'queue.yaml'", ")", "#NEWLINE#", "queue_xml", "(", "app_id", ")", "queue_yaml", ")", ":", "queue_yaml", "#NEWLINE#", "queue_xml", "#INDENT#", "return", "self", "#NEWLINE#", "#UNINDENT#", "else"]}}
{"position": {"error_location": 32, "repair_targets": [20, 29], "repair_candidates": [4, 14, 22, 20, 29, 11, 24, 27, 2, 32]}}
{"prediction": {"error_location": 0.9242296814918518, "repair_targets": [0.5140407681465149, 0.0010215684305876493], "repair_candidates": [0.0015312349423766136, 0.025650661438703537, 0.0038454700261354446, 0.0016189576126635075, 0.5140407681465149, 0.4503035247325897, 0.0018705236725509167, 9.3449154519476e-05, 0.0010215684305876493, 2.3826634787837975e-05], "target_probs": 0.5150623321533203}}


{"result": {"time": "2021-02-11 10:51:42.363932", "n_pass": [105, 13, 12], "n_token": 33, "loss": [0.03233850374817848, 0.08712508529424667], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def get_queue_file_location(", "self", ",", "app_id", ")", ":", "#NEWLINE#", "#INDENT#", "' Gets the location of the queue.yaml or queue.xml file\\n        of a given application.\\n    Args:\\n      app_id: The application ID.\\n    Returns:\\n      The location of the queue.yaml or queue.xml file, and \\n      an empty string if it could not be found.\\n    '", "#NEWLINE#", "queue_yaml", "get_app_path", "(", "app_id", ")", "+", "'queue.yaml'", ")", "#NEWLINE#", "queue_xml", "(", "app_id", ")", "queue_yaml", ")", ":", "queue_yaml", "#NEWLINE#", "queue_xml", "#INDENT#", "return", "self"]}}
{"position": {"error_location": 32, "repair_targets": [20, 29], "repair_candidates": [4, 14, 22, 20, 29, 11, 24, 27, 2, 32]}}
{"prediction": {"error_location": 0.9681786894798279, "repair_targets": [0.9061985015869141, 0.010363951325416565], "repair_candidates": [0.0018962289905175567, 0.008647657930850983, 0.002825536299496889, 0.0004472020373214036, 0.9061985015869141, 0.06917618215084076, 0.00040003107278607786, 4.0130093111656606e-05, 0.010363951325416565, 4.616371370502748e-06], "target_probs": 0.9165624380111694}}


{"result": {"time": "2021-02-11 10:51:42.493151", "n_pass": [109, 15, 13], "n_token": 31, "loss": [0.13213565945625305, 0.09759731590747833], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def get_queue_file_location(", "self", ",", "app_id", ")", "#INDENT#", "' Gets the location of the queue.yaml or queue.xml file\\n        of a given application.\\n    Args:\\n      app_id: The application ID.\\n    Returns:\\n      The location of the queue.yaml or queue.xml file, and \\n      an empty string if it could not be found.\\n    '", "#NEWLINE#", "queue_yaml", "get_app_path", "(", "app_id", ")", "+", "'queue.yaml'", ")", "#NEWLINE#", "queue_xml", "(", "app_id", ")", "queue_yaml", ")", ":", "queue_yaml", "#NEWLINE#", "queue_xml", "#INDENT#", "return", "self"]}}
{"position": {"error_location": 30, "repair_targets": [18, 27], "repair_candidates": [4, 12, 20, 18, 27, 9, 22, 25, 2, 30]}}
{"prediction": {"error_location": 0.8762221336364746, "repair_targets": [0.8945704698562622, 0.012443585321307182], "repair_candidates": [0.008769441395998001, 0.004435025155544281, 0.008017413318157196, 0.0011032524053007364, 0.8945704698562622, 0.06991519778966904, 0.0006475766422227025, 8.166972838807851e-05, 0.012443585321307182, 1.6345104086212814e-05], "target_probs": 0.9070140719413757}}


{"result": {"time": "2021-02-11 10:51:42.556943", "n_pass": [110, 16, 14], "n_token": 29, "loss": [0.006599299143999815, 0.1268518716096878], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def get_queue_file_location(", "self", ",", "app_id", ")", "#NEWLINE#", "queue_yaml", "get_app_path", "(", "app_id", ")", "+", "'queue.yaml'", ")", "#NEWLINE#", "queue_xml", "(", "app_id", ")", "queue_yaml", ")", ":", "queue_yaml", "#NEWLINE#", "queue_xml", "#INDENT#", "return", "self"]}}
{"position": {"error_location": 28, "repair_targets": [16, 25], "repair_candidates": [4, 10, 18, 16, 25, 7, 20, 23, 2, 28]}}
{"prediction": {"error_location": 0.9934224486351013, "repair_targets": [0.8715416193008423, 0.009322539903223515], "repair_candidates": [0.0005879772361367941, 0.01041987631469965, 0.007282967213541269, 0.0018876648973673582, 0.8715416193008423, 0.09860660880804062, 0.0003091931575909257, 3.892618406098336e-05, 0.009322539903223515, 2.5955826004064875e-06], "target_probs": 0.880864143371582}}


{"result": {"time": "2021-02-11 10:51:42.619596", "n_pass": [112, 17, 15], "n_token": 27, "loss": [0.0004295380203984678, 0.12436289340257645], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def get_queue_file_location(", "self", ",", "app_id", ")", "#NEWLINE#", "queue_yaml", "app_id", ")", "+", "'queue.yaml'", ")", "#NEWLINE#", "queue_xml", "(", "app_id", ")", "queue_yaml", ")", ":", "queue_yaml", "#NEWLINE#", "queue_xml", "#INDENT#", "return", "self"]}}
{"position": {"error_location": 26, "repair_targets": [14, 23], "repair_candidates": [4, 8, 16, 14, 23, 7, 18, 21, 2, 26]}}
{"prediction": {"error_location": 0.9995706677436829, "repair_targets": [0.8795153498649597, 0.00354394456371665], "repair_candidates": [2.370603397139348e-05, 0.007212716154754162, 0.035367995500564575, 0.019617542624473572, 0.8795153498649597, 0.054559119045734406, 0.00014778663171455264, 1.144865200330969e-05, 0.00354394456371665, 3.771339720515243e-07], "target_probs": 0.8830593228340149}}


{"result": {"time": "2021-02-11 10:51:42.681182", "n_pass": [114, 18, 16], "n_token": 25, "loss": [0.0018290233565494418, 0.042178817093372345], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def get_queue_file_location(", "self", ",", "app_id", ")", "#NEWLINE#", "queue_yaml", "app_id", ")", ")", "#NEWLINE#", "queue_xml", "(", "app_id", ")", "queue_yaml", ")", ":", "queue_yaml", "#NEWLINE#", "queue_xml", "#INDENT#", "return", "self"]}}
{"position": {"error_location": 24, "repair_targets": [12, 21], "repair_candidates": [4, 8, 14, 12, 21, 7, 16, 19, 2, 24]}}
{"prediction": {"error_location": 0.9981726408004761, "repair_targets": [0.9570146799087524, 0.0016836391296237707], "repair_candidates": [3.4366581530775875e-05, 0.005708957556635141, 0.008690687827765942, 0.0035184600856155157, 0.9570146799087524, 0.02319169230759144, 0.00015085704217199236, 6.296124865912134e-06, 0.0016836391296237707, 3.38344818828773e-07], "target_probs": 0.9586983323097229}}


{"result": {"time": "2021-02-11 10:51:42.803940", "n_pass": [121, 20, 17], "n_token": 23, "loss": [0.10895084589719772, 0.4267800450325012], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["self", ",", "app_id", ")", "#NEWLINE#", "queue_yaml", "app_id", ")", ")", "#NEWLINE#", "queue_xml", "(", "app_id", ")", "queue_yaml", ")", ":", "queue_yaml", "#NEWLINE#", "queue_xml", "#INDENT#", "return", "self"]}}
{"position": {"error_location": 22, "repair_targets": [10, 19], "repair_candidates": [2, 6, 12, 10, 19, 5, 14, 17, 0, 22]}}
{"prediction": {"error_location": 0.8967744708061218, "repair_targets": [0.649846076965332, 0.0027610210236161947], "repair_candidates": [0.013579527847468853, 0.027316704392433167, 0.04341559484601021, 0.05429879203438759, 0.649846076965332, 0.20322677493095398, 0.005363183096051216, 0.00018393671780359, 0.0027610210236161947, 8.408696885453537e-06], "target_probs": 0.6526070833206177}}


{"result": {"time": "2021-02-11 10:51:42.923814", "n_pass": [153, 22, 18], "n_token": 22, "loss": [0.15419314801692963, 0.4832361340522766], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["self", "app_id", ")", "#NEWLINE#", "queue_yaml", "app_id", ")", ")", "#NEWLINE#", "queue_xml", "(", "app_id", ")", "queue_yaml", ")", ":", "queue_yaml", "#NEWLINE#", "queue_xml", "#INDENT#", "return", "self"]}}
{"position": {"error_location": 21, "repair_targets": [9, 18], "repair_candidates": [1, 5, 11, 9, 18, 4, 13, 16, 0, 21]}}
{"prediction": {"error_location": 0.8571064472198486, "repair_targets": [0.6143543124198914, 0.002429863205179572], "repair_candidates": [0.010649342089891434, 0.015981871634721756, 0.008724992163479328, 0.12372273951768875, 0.6143543124198914, 0.22036723792552948, 0.0036738072521984577, 8.830676961224526e-05, 0.002429863205179572, 7.528757578256773e-06], "target_probs": 0.6167841553688049}}


{"result": {"time": "2021-02-11 10:51:42.983588", "n_pass": [155, 23, 19], "n_token": 21, "loss": [0.0038764348719269037, 0.4908313751220703], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["self", "app_id", "#NEWLINE#", "queue_yaml", "app_id", ")", ")", "#NEWLINE#", "queue_xml", "(", "app_id", ")", "queue_yaml", ")", ":", "queue_yaml", "#NEWLINE#", "queue_xml", "#INDENT#", "return", "self"]}}
{"position": {"error_location": 20, "repair_targets": [8, 17], "repair_candidates": [1, 4, 10, 8, 17, 3, 12, 15, 0, 20]}}
{"prediction": {"error_location": 0.9961309432983398, "repair_targets": [0.6096185445785522, 0.0024987743236124516], "repair_candidates": [0.007834908552467823, 0.014557135291397572, 0.012384023517370224, 0.17272168397903442, 0.6096185445785522, 0.1781015843153, 0.00223487988114357, 4.668284600484185e-05, 0.0024987743236124516, 1.7901490991789615e-06], "target_probs": 0.6121172904968262}}


{"result": {"time": "2021-02-11 10:51:43.042833", "n_pass": [156, 24, 20], "n_token": 20, "loss": [0.07554004341363907, 0.31415000557899475], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["self", "app_id", "queue_yaml", "app_id", ")", ")", "#NEWLINE#", "queue_xml", "(", "app_id", ")", "queue_yaml", ")", ":", "queue_yaml", "#NEWLINE#", "queue_xml", "#INDENT#", "return", "self"]}}
{"position": {"error_location": 19, "repair_targets": [7, 16], "repair_candidates": [1, 3, 9, 7, 16, 2, 11, 14, 0, 19]}}
{"prediction": {"error_location": 0.9272425770759583, "repair_targets": [0.7266607284545898, 0.0037486942019313574], "repair_candidates": [0.020187735557556152, 0.040028516203165054, 0.027854157611727715, 0.02150590531527996, 0.7266607284545898, 0.15314841270446777, 0.006555791944265366, 0.00029701110906898975, 0.0037486942019313574, 1.3045851119386498e-05], "target_probs": 0.7304094433784485}}


{"result": {"time": "2021-02-11 10:51:43.103935", "n_pass": [159, 25, 21], "n_token": 19, "loss": [0.037073638290166855, 0.26416727900505066], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["self", "app_id", "queue_yaml", "app_id", ")", "#NEWLINE#", "queue_xml", "(", "app_id", ")", "queue_yaml", ")", ":", "queue_yaml", "#NEWLINE#", "queue_xml", "#INDENT#", "return", "self"]}}
{"position": {"error_location": 18, "repair_targets": [6, 15], "repair_candidates": [1, 3, 8, 6, 15, 2, 10, 13, 0, 18]}}
{"prediction": {"error_location": 0.9636051654815674, "repair_targets": [0.7655431032180786, 0.0023019881919026375], "repair_candidates": [0.01381219457834959, 0.030128510668873787, 0.022208496928215027, 0.02231421135365963, 0.7655431032180786, 0.13860246539115906, 0.004910646006464958, 0.000171663225046359, 0.0023019881919026375, 6.757127266610041e-06], "target_probs": 0.767845094203949}}


{"result": {"time": "2021-02-11 10:51:43.161996", "n_pass": [160, 26, 22], "n_token": 18, "loss": [0.008959567174315453, 0.14852996170520782], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["self", "app_id", "queue_yaml", "app_id", "#NEWLINE#", "queue_xml", "(", "app_id", ")", "queue_yaml", ")", ":", "queue_yaml", "#NEWLINE#", "queue_xml", "#INDENT#", "return", "self"]}}
{"position": {"error_location": 17, "repair_targets": [5, 14], "repair_candidates": [1, 3, 7, 5, 14, 2, 9, 12, 0, 17]}}
{"prediction": {"error_location": 0.9910804629325867, "repair_targets": [0.860490620136261, 0.001483564148657024], "repair_candidates": [0.006415960378944874, 0.01912466064095497, 0.009908980689942837, 0.017994824796915054, 0.860490620136261, 0.0828588604927063, 0.0016882586060091853, 3.214439857401885e-05, 0.001483564148657024, 2.1080418264318723e-06], "target_probs": 0.8619741797447205}}


{"result": {"time": "2021-02-11 10:51:43.276907", "n_pass": [163, 28, 23], "n_token": 17, "loss": [0.0008762810612097383, 0.13344807922840118], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["self", "app_id", "queue_yaml", "app_id", "#NEWLINE#", "queue_xml", "app_id", ")", "queue_yaml", ")", ":", "queue_yaml", "#NEWLINE#", "queue_xml", "#INDENT#", "return", "self"]}}
{"position": {"error_location": 16, "repair_targets": [5, 13], "repair_candidates": [1, 3, 6, 5, 13, 2, 8, 11, 0, 16]}}
{"prediction": {"error_location": 0.9991241097450256, "repair_targets": [0.8747962713241577, 0.0002766238176263869], "repair_candidates": [0.0007530962466262281, 0.003110898192971945, 0.004748377948999405, 0.009654770605266094, 0.8747962713241577, 0.10658708214759827, 7.007672684267163e-05, 2.6126276679860894e-06, 0.0002766238176263869, 9.191968786126381e-08], "target_probs": 0.8750728964805603}}


{"result": {"time": "2021-02-11 10:51:43.333449", "n_pass": [165, 29, 24], "n_token": 16, "loss": [0.0012584156356751919, 0.16690495610237122], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["self", "app_id", "queue_yaml", "app_id", "#NEWLINE#", "queue_xml", "app_id", "queue_yaml", ")", ":", "queue_yaml", "#NEWLINE#", "queue_xml", "#INDENT#", "return", "self"]}}
{"position": {"error_location": 15, "repair_targets": [5, 12], "repair_candidates": [1, 3, 6, 5, 12, 2, 7, 10, 0, 15]}}
{"prediction": {"error_location": 0.9987422823905945, "repair_targets": [0.8459873795509338, 0.00029268019716255367], "repair_candidates": [0.001686897943727672, 0.008621658198535442, 0.0072402372024953365, 0.009341338649392128, 0.8459873795509338, 0.1208684965968132, 0.005955572240054607, 5.599903488473501e-06, 0.00029268019716255367, 1.7041961086761148e-07], "target_probs": 0.846280038356781}}


{"result": {"time": "2021-02-11 10:51:43.389924", "n_pass": [167, 30, 25], "n_token": 15, "loss": [0.0004932855372317135, 0.07656936347484589], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["self", "app_id", "queue_yaml", "app_id", "#NEWLINE#", "queue_xml", "app_id", "queue_yaml", ":", "queue_yaml", "#NEWLINE#", "queue_xml", "#INDENT#", "return", "self"]}}
{"position": {"error_location": 14, "repair_targets": [5, 11], "repair_candidates": [1, 3, 6, 5, 11, 2, 7, 9, 0, 14]}}
{"prediction": {"error_location": 0.9995068311691284, "repair_targets": [0.9260796308517456, 0.0002090083435177803], "repair_candidates": [0.0015374309150502086, 0.00943805929273367, 0.009420578368008137, 0.01218452025204897, 0.9260796308517456, 0.04052497819066048, 0.0005944811273366213, 1.1294638170511462e-05, 0.0002090083435177803, 8.532911976999458e-08], "target_probs": 0.9262886643409729}}


{"result": {"time": "2021-02-11 10:51:43.447898", "n_pass": [168, 31, 26], "n_token": 14, "loss": [0.0005710878176614642, 0.14326989650726318], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["self", "app_id", "queue_yaml", "app_id", "#NEWLINE#", "queue_xml", "app_id", "queue_yaml", "queue_yaml", "#NEWLINE#", "queue_xml", "#INDENT#", "return", "self"]}}
{"position": {"error_location": 13, "repair_targets": [5, 10], "repair_candidates": [1, 3, 6, 5, 10, 2, 7, 8, 0, 13]}}
{"prediction": {"error_location": 0.999428927898407, "repair_targets": [0.86590176820755, 0.0006183927762322128], "repair_candidates": [0.004499403294175863, 0.029444808140397072, 0.03047882579267025, 0.029671648517251015, 0.86590176820755, 0.03616248071193695, 0.002953142626211047, 0.00026925583370029926, 0.0006183927762322128, 3.15322722599376e-07], "target_probs": 0.8665201663970947}}


{"result": {"time": "2021-02-11 10:51:43.558729", "n_pass": [187, 33, 27], "n_token": 13, "loss": [4.851700214203447e-05, 0.07447895407676697], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["self", "app_id", "queue_yaml", "app_id", "#NEWLINE#", "queue_xml", "app_id", "queue_yaml", "queue_yaml", "#NEWLINE#", "queue_xml", "return", "self"]}}
{"position": {"error_location": 12, "repair_targets": [5, 10], "repair_candidates": [1, 3, 6, 5, 10, 2, 7, 8, 0, 12]}}
{"prediction": {"error_location": 0.9999514818191528, "repair_targets": [0.9280717968940735, 0.00015521212480962276], "repair_candidates": [0.0008750671986490488, 0.008173132315278053, 0.020084822550415993, 0.026171568781137466, 0.9280717968940735, 0.015584130771458149, 0.0008422327809967101, 4.203253047307953e-05, 0.00015521212480962276, 6.338299129993175e-08], "target_probs": 0.9282270073890686}}


{"result": {"time": "2021-02-11 10:51:43.613598", "n_pass": [188, 34, 28], "n_token": 12, "loss": [0.0018897071713581681, 0.1333972066640854], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["self", "app_id", "queue_yaml", "app_id", "#NEWLINE#", "queue_xml", "app_id", "queue_yaml", "queue_yaml", "#NEWLINE#", "queue_xml", "self"]}}
{"position": {"error_location": 11, "repair_targets": [5, 10], "repair_candidates": [1, 3, 6, 5, 10, 2, 7, 8, 0, 11]}}
{"prediction": {"error_location": 0.9981120824813843, "repair_targets": [0.8750774264335632, 3.998338070232421e-05], "repair_candidates": [0.00432354211807251, 0.034178826957941055, 0.039682820439338684, 0.02233717404305935, 0.8750774264335632, 0.021943822503089905, 0.002289852360263467, 0.00012568180682137609, 3.998338070232421e-05, 8.615013484813971e-07], "target_probs": 0.8751174211502075}}


{"result": {"time": "2021-02-11 10:51:43.722016", "n_pass": [199, 36, 29], "n_token": 11, "loss": [0.00036483307485468686, 0.15316829085350037], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["self", "app_id", "queue_yaml", "app_id", "#NEWLINE#", "queue_xml", "app_id", "queue_yaml", "queue_yaml", "queue_xml", "self"]}}
{"position": {"error_location": 10, "repair_targets": [5, 9], "repair_candidates": [1, 3, 6, 5, 9, 2, 7, 8, 0, 10]}}
{"prediction": {"error_location": 0.9996352195739746, "repair_targets": [0.8578982353210449, 8.706164226168767e-05], "repair_candidates": [0.0036855170037597418, 0.026593009009957314, 0.05549401789903641, 0.031597938388586044, 0.8578982353210449, 0.02283441461622715, 0.0016189002199098468, 0.00018873048247769475, 8.706164226168767e-05, 2.1617863694700645e-06], "target_probs": 0.8579853177070618}}




Minimal simplified tokens:

['self', 'app_id', 'queue_yaml', 'app_id', '#NEWLINE#', 'queue_xml', 'app_id', 'queue_yaml', 'queue_yaml', 'queue_xml', 'self']
