
Original sample:

{"has_bug": true, "bug_kind": 1, "bug_kind_name": "VARIABLE_MISUSE", "source_tokens": ["#NEWLINE#", "@", "query_params", "(", "'field_data'", ",", "'fielddata'", ",", "'fields'", ",", "'filter'", ",", "'filter_cache'", ",", "'filter_keys'", ",", "'id'", ",", "'id_cache'", ",", "'allow_no_indices'", ",", "'expand_wildcards'", ",", "'ignore_indices'", ",", "'ignore_unavailable'", ",", "'query_cache'", ",", "'recycler'", ")", "#NEWLINE#", "def clear_cache(", "self", ",", "index", "=", "None", ",", "params", "=", "None", ")", ":", "#NEWLINE#", "#INDENT#", "'\\n        Clear either all caches or specific cached associated with one ore more indices.\\n        `<http://www.elastic.co/guide/en/elasticsearch/reference/current/indices-clearcache.html>`_\\n\\n        :arg index: A comma-separated list of index name to limit the operation\\n        :arg field_data: Clear field data\\n        :arg fielddata: Clear field data\\n        :arg fields: A comma-separated list of fields to clear when using the\\n            `field_data` parameter (default: all)\\n        :arg filter: Clear filter caches\\n        :arg filter_cache: Clear filter caches\\n        :arg filter_keys: A comma-separated list of keys to clear when using\\n            the `filter_cache` parameter (default: all)\\n        :arg id: Clear ID caches for parent/child\\n        :arg id_cache: Clear ID caches for parent/child\\n        :arg allow_no_indices: Whether to ignore if a wildcard indices\\n            expression resolves into no concrete indices. (This includes `_all` string or\\n            when no indices have been specified)\\n        :arg expand_wildcards: Whether to expand wildcard expression to concrete indices\\n            that are open, closed or both.\\n        :arg ignore_indices: When performed on multiple indices, allows to\\n            ignore `missing` ones (default: none)\\n        :arg ignore_unavailable: Whether specified concrete indices should be ignored\\n            when unavailable (missing or closed)\\n        :arg query_cache: Clear query cache\\n        :arg recycler: Clear the recycler cache\\n        '", "#NEWLINE#", "(", "_", ",", "data", ")", "=", "self", ".", "transport", ".", "perform_request", "(", "'POST'", ",", "_make_path", "(", "index", ",", "'_cache'", ",", "'clear'", ")", ",", "params", "=", "params", ")", "#NEWLINE#", "return", "self"], "error_location": [78], "repair_targets": [52], "repair_candidates": [34, 55, 78, 52, 36, 65, 50, 40, 72, 74], "provenances": [{"datasetProvenance": {"datasetName": "ETHPy150Open", "filepath": "KunihikoKido/sublime-elasticsearch-client/lib/elasticsearch/client/indices.py", "license": "mit", "note": "license: bigquery_api"}}], "txt_file": "eval__VARIABLE_MISUSE__SStuB.txt-00000-of-00300", "js_count": 3053, "results": {"model": "rnn", "prob": {"loc": [[3.3558848372194916e-05, 9.50284406719959e-10, 7.962637493807989e-11, 2.270083253319566e-11, 3.852182461905329e-12, 6.357885680603748e-13, 1.4961466093810216e-11, 6.356483048253203e-12, 7.011713432092392e-11, 1.1274352978984936e-11, 8.864668027408484e-11, 1.076655583263919e-12, 7.089545964178434e-12, 6.442825873503866e-13, 6.499621674205258e-11, 3.5627202143312386e-12, 2.5408761206158204e-10, 9.656381597111796e-13, 7.85860543306427e-11, 1.2161469747917764e-12, 2.880455422793471e-12, 2.696476939303971e-13, 2.5725570979018286e-11, 7.0555657670501315e-12, 2.8325126966155523e-11, 1.9042197831574403e-13, 1.4035013602697877e-11, 1.2887053349366212e-13, 6.180856521043054e-11, 1.4497603421578797e-12, 6.409832734033394e-12, 3.233108659267403e-12, 7.907285937136521e-12, 1.1845464388017535e-13, 3.746502219570402e-09, 3.717431093855361e-13, 2.258421531384225e-12, 2.666739984218125e-13, 2.4805789475453033e-13, 8.794913853183567e-14, 2.4671100232187548e-11, 1.2270068858524774e-12, 8.898284127763223e-13, 2.6684915128277753e-12, 4.476116526042073e-12, 5.1315233312587694e-11, 8.198801880465734e-12, 2.3918346470086504e-11, 2.9671445422180254e-12, 6.520164724972688e-13, 2.9930913303388706e-09, 3.498323592615593e-13, 2.027018969341654e-10, 3.5572930777265366e-13, 2.843017271256243e-12, 3.3798959186981392e-09, 2.808420271512013e-13, 3.461090192658639e-13, 1.6703548266772117e-12, 8.956335673104832e-12, 5.720785997698208e-11, 5.795702251454316e-10, 1.1842494866687314e-11, 3.6370118722262035e-11, 4.115335502929973e-11, 2.1544894934777403e-06, 6.197399906628098e-13, 5.360604049542417e-08, 4.4395234016780805e-11, 1.0353553431263762e-10, 1.272209976255212e-10, 3.441359003319988e-11, 3.4934613535320125e-10, 4.958320420911377e-10, 7.057198558868549e-07, 6.695452525740109e-10, 5.138117153968835e-10, 2.9998179496004695e-09, 0.9999635219573975]], "pointer": [[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.1028197377527249e-07, 0.0, 0.0074787624180316925, 0.0, 0.0, 0.0, 0.0028905938379466534, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0017923003761097789, 0.0, 0.9878107905387878, 0.0, 0.0, 5.40984501640196e-07, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 2.9438706405926496e-06, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 2.304223926330451e-05, 0.0, 5.364556727727177e-07, 0.0, 0.0, 0.0, 3.202663378942816e-07]], "target": [0.9878107905387878]}, "loss": [3.6477376852417365e-05, 0.01226410735398531], "acc": [0.0, 1.0, 1.0, 1.0]}}


Trace of simplified code(s):

{"result": {"time": "2021-02-11 10:27:08.116520", "n_pass": [1, 1, 1], "n_token": 79, "loss": [3.6477376852417365e-05, 0.01226410735398531], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "@", "query_params", "(", "'field_data'", ",", "'fielddata'", ",", "'fields'", ",", "'filter'", ",", "'filter_cache'", ",", "'filter_keys'", ",", "'id'", ",", "'id_cache'", ",", "'allow_no_indices'", ",", "'expand_wildcards'", ",", "'ignore_indices'", ",", "'ignore_unavailable'", ",", "'query_cache'", ",", "'recycler'", ")", "#NEWLINE#", "def clear_cache(", "self", ",", "index", "=", "None", ",", "params", "=", "None", ")", ":", "#NEWLINE#", "#INDENT#", "'\\n        Clear either all caches or specific cached associated with one ore more indices.\\n        `<http://www.elastic.co/guide/en/elasticsearch/reference/current/indices-clearcache.html>`_\\n\\n        :arg index: A comma-separated list of index name to limit the operation\\n        :arg field_data: Clear field data\\n        :arg fielddata: Clear field data\\n        :arg fields: A comma-separated list of fields to clear when using the\\n            `field_data` parameter (default: all)\\n        :arg filter: Clear filter caches\\n        :arg filter_cache: Clear filter caches\\n        :arg filter_keys: A comma-separated list of keys to clear when using\\n            the `filter_cache` parameter (default: all)\\n        :arg id: Clear ID caches for parent/child\\n        :arg id_cache: Clear ID caches for parent/child\\n        :arg allow_no_indices: Whether to ignore if a wildcard indices\\n            expression resolves into no concrete indices. (This includes `_all` string or\\n            when no indices have been specified)\\n        :arg expand_wildcards: Whether to expand wildcard expression to concrete indices\\n            that are open, closed or both.\\n        :arg ignore_indices: When performed on multiple indices, allows to\\n            ignore `missing` ones (default: none)\\n        :arg ignore_unavailable: Whether specified concrete indices should be ignored\\n            when unavailable (missing or closed)\\n        :arg query_cache: Clear query cache\\n        :arg recycler: Clear the recycler cache\\n        '", "#NEWLINE#", "(", "_", ",", "data", ")", "=", "self", ".", "transport", ".", "perform_request", "(", "'POST'", ",", "_make_path", "(", "index", ",", "'_cache'", ",", "'clear'", ")", ",", "params", "=", "params", ")", "#NEWLINE#", "return", "self"]}}
{"position": {"error_location": 78, "repair_targets": [52], "repair_candidates": [34, 55, 78, 52, 36, 65, 50, 40, 72, 74]}}
{"prediction": {"error_location": 0.9999635219573975, "repair_targets": [0.9878107905387878], "repair_candidates": [1.1028197377527249e-07, 0.0074787624180316925, 0.0028905938379466534, 0.0017923003761097789, 0.9878107905387878, 5.40984501640196e-07, 2.9438706405926496e-06, 2.304223926330451e-05, 5.364556727727177e-07, 3.202663378942816e-07], "target_probs": 0.9878107905387878}}


{"result": {"time": "2021-02-11 10:27:08.196431", "n_pass": [8, 2, 2], "n_token": 60, "loss": [0.00019488819816615433, 0.009503497742116451], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": [",", "'allow_no_indices'", ",", "'expand_wildcards'", ",", "'ignore_indices'", ",", "'ignore_unavailable'", ",", "'query_cache'", ",", "'recycler'", ")", "#NEWLINE#", "def clear_cache(", "self", ",", "index", "=", "None", ",", "params", "=", "None", ")", ":", "#NEWLINE#", "#INDENT#", "'\\n        Clear either all caches or specific cached associated with one ore more indices.\\n        `<http://www.elastic.co/guide/en/elasticsearch/reference/current/indices-clearcache.html>`_\\n\\n        :arg index: A comma-separated list of index name to limit the operation\\n        :arg field_data: Clear field data\\n        :arg fielddata: Clear field data\\n        :arg fields: A comma-separated list of fields to clear when using the\\n            `field_data` parameter (default: all)\\n        :arg filter: Clear filter caches\\n        :arg filter_cache: Clear filter caches\\n        :arg filter_keys: A comma-separated list of keys to clear when using\\n            the `filter_cache` parameter (default: all)\\n        :arg id: Clear ID caches for parent/child\\n        :arg id_cache: Clear ID caches for parent/child\\n        :arg allow_no_indices: Whether to ignore if a wildcard indices\\n            expression resolves into no concrete indices. (This includes `_all` string or\\n            when no indices have been specified)\\n        :arg expand_wildcards: Whether to expand wildcard expression to concrete indices\\n            that are open, closed or both.\\n        :arg ignore_indices: When performed on multiple indices, allows to\\n            ignore `missing` ones (default: none)\\n        :arg ignore_unavailable: Whether specified concrete indices should be ignored\\n            when unavailable (missing or closed)\\n        :arg query_cache: Clear query cache\\n        :arg recycler: Clear the recycler cache\\n        '", "#NEWLINE#", "(", "_", ",", "data", ")", "=", "self", ".", "transport", ".", "perform_request", "(", "'POST'", ",", "_make_path", "(", "index", ",", "'_cache'", ",", "'clear'", ")", ",", "params", "=", "params", ")", "#NEWLINE#", "return", "self"]}}
{"position": {"error_location": 59, "repair_targets": [33], "repair_candidates": [15, 36, 59, 33, 17, 46, 31, 21, 53, 55]}}
{"prediction": {"error_location": 0.9998051524162292, "repair_targets": [0.9905415177345276], "repair_candidates": [3.440244142893789e-07, 0.0034849157091230154, 0.0025061664637178183, 0.003427065908908844, 0.9905415177345276, 1.7332032484773663e-06, 3.1354877592093544e-06, 3.293604095233604e-05, 1.0593555543891853e-06, 1.091114654627745e-06], "target_probs": 0.9905415177345276}}


{"result": {"time": "2021-02-11 10:27:08.271575", "n_pass": [17, 3, 3], "n_token": 50, "loss": [4.279521817807108e-05, 0.016033530235290527], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": [",", "'recycler'", ")", "#NEWLINE#", "def clear_cache(", "self", ",", "index", "=", "None", ",", "params", "=", "None", ")", ":", "#NEWLINE#", "#INDENT#", "'\\n        Clear either all caches or specific cached associated with one ore more indices.\\n        `<http://www.elastic.co/guide/en/elasticsearch/reference/current/indices-clearcache.html>`_\\n\\n        :arg index: A comma-separated list of index name to limit the operation\\n        :arg field_data: Clear field data\\n        :arg fielddata: Clear field data\\n        :arg fields: A comma-separated list of fields to clear when using the\\n            `field_data` parameter (default: all)\\n        :arg filter: Clear filter caches\\n        :arg filter_cache: Clear filter caches\\n        :arg filter_keys: A comma-separated list of keys to clear when using\\n            the `filter_cache` parameter (default: all)\\n        :arg id: Clear ID caches for parent/child\\n        :arg id_cache: Clear ID caches for parent/child\\n        :arg allow_no_indices: Whether to ignore if a wildcard indices\\n            expression resolves into no concrete indices. (This includes `_all` string or\\n            when no indices have been specified)\\n        :arg expand_wildcards: Whether to expand wildcard expression to concrete indices\\n            that are open, closed or both.\\n        :arg ignore_indices: When performed on multiple indices, allows to\\n            ignore `missing` ones (default: none)\\n        :arg ignore_unavailable: Whether specified concrete indices should be ignored\\n            when unavailable (missing or closed)\\n        :arg query_cache: Clear query cache\\n        :arg recycler: Clear the recycler cache\\n        '", "#NEWLINE#", "(", "_", ",", "data", ")", "=", "self", ".", "transport", ".", "perform_request", "(", "'POST'", ",", "_make_path", "(", "index", ",", "'_cache'", ",", "'clear'", ")", ",", "params", "=", "params", ")", "#NEWLINE#", "return", "self"]}}
{"position": {"error_location": 49, "repair_targets": [23], "repair_candidates": [5, 26, 49, 23, 7, 36, 21, 11, 43, 45]}}
{"prediction": {"error_location": 0.9999572038650513, "repair_targets": [0.9840943217277527], "repair_candidates": [5.81791198328574e-07, 0.009083053097128868, 0.004300272092223167, 0.0024828752502799034, 0.9840943217277527, 9.699843985799816e-07, 2.2236222321225796e-06, 3.417057450860739e-05, 8.716171464584477e-07, 6.389403210960154e-07], "target_probs": 0.9840943217277527}}


{"result": {"time": "2021-02-11 10:27:08.346216", "n_pass": [32, 4, 4], "n_token": 45, "loss": [0.01069374568760395, 0.04179535061120987], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["self", ",", "index", "=", "None", ",", "params", "=", "None", ")", ":", "#NEWLINE#", "#INDENT#", "'\\n        Clear either all caches or specific cached associated with one ore more indices.\\n        `<http://www.elastic.co/guide/en/elasticsearch/reference/current/indices-clearcache.html>`_\\n\\n        :arg index: A comma-separated list of index name to limit the operation\\n        :arg field_data: Clear field data\\n        :arg fielddata: Clear field data\\n        :arg fields: A comma-separated list of fields to clear when using the\\n            `field_data` parameter (default: all)\\n        :arg filter: Clear filter caches\\n        :arg filter_cache: Clear filter caches\\n        :arg filter_keys: A comma-separated list of keys to clear when using\\n            the `filter_cache` parameter (default: all)\\n        :arg id: Clear ID caches for parent/child\\n        :arg id_cache: Clear ID caches for parent/child\\n        :arg allow_no_indices: Whether to ignore if a wildcard indices\\n            expression resolves into no concrete indices. (This includes `_all` string or\\n            when no indices have been specified)\\n        :arg expand_wildcards: Whether to expand wildcard expression to concrete indices\\n            that are open, closed or both.\\n        :arg ignore_indices: When performed on multiple indices, allows to\\n            ignore `missing` ones (default: none)\\n        :arg ignore_unavailable: Whether specified concrete indices should be ignored\\n            when unavailable (missing or closed)\\n        :arg query_cache: Clear query cache\\n        :arg recycler: Clear the recycler cache\\n        '", "#NEWLINE#", "(", "_", ",", "data", ")", "=", "self", ".", "transport", ".", "perform_request", "(", "'POST'", ",", "_make_path", "(", "index", ",", "'_cache'", ",", "'clear'", ")", ",", "params", "=", "params", ")", "#NEWLINE#", "return", "self"]}}
{"position": {"error_location": 44, "repair_targets": [18], "repair_candidates": [0, 21, 44, 18, 2, 31, 16, 6, 38, 40]}}
{"prediction": {"error_location": 0.9893632531166077, "repair_targets": [0.9590660333633423], "repair_candidates": [0.0034255399368703365, 0.018714964389801025, 0.007099210750311613, 0.011564401909708977, 0.9590660333633423, 1.385528867103858e-05, 1.6860880350577645e-05, 8.380100189242512e-05, 7.848803761589807e-06, 7.565459327452118e-06], "target_probs": 0.9590660333633423}}


{"result": {"time": "2021-02-11 10:27:08.483695", "n_pass": [37, 6, 5], "n_token": 40, "loss": [0.043289002031087875, 0.04831031337380409], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["self", ",", "index", "=", "None", ",", "params", "=", "None", ")", ":", "#NEWLINE#", "#INDENT#", "'\\n        Clear either all caches or specific cached associated with one ore more indices.\\n        `<http://www.elastic.co/guide/en/elasticsearch/reference/current/indices-clearcache.html>`_\\n\\n        :arg index: A comma-separated list of index name to limit the operation\\n        :arg field_data: Clear field data\\n        :arg fielddata: Clear field data\\n        :arg fields: A comma-separated list of fields to clear when using the\\n            `field_data` parameter (default: all)\\n        :arg filter: Clear filter caches\\n        :arg filter_cache: Clear filter caches\\n        :arg filter_keys: A comma-separated list of keys to clear when using\\n            the `filter_cache` parameter (default: all)\\n        :arg id: Clear ID caches for parent/child\\n        :arg id_cache: Clear ID caches for parent/child\\n        :arg allow_no_indices: Whether to ignore if a wildcard indices\\n            expression resolves into no concrete indices. (This includes `_all` string or\\n            when no indices have been specified)\\n        :arg expand_wildcards: Whether to expand wildcard expression to concrete indices\\n            that are open, closed or both.\\n        :arg ignore_indices: When performed on multiple indices, allows to\\n            ignore `missing` ones (default: none)\\n        :arg ignore_unavailable: Whether specified concrete indices should be ignored\\n            when unavailable (missing or closed)\\n        :arg query_cache: Clear query cache\\n        :arg recycler: Clear the recycler cache\\n        '", "#NEWLINE#", "(", "_", ",", "data", ")", "=", "self", ".", "transport", ".", "(", "index", ",", "'_cache'", ",", "'clear'", ")", ",", "params", "=", "params", ")", "#NEWLINE#", "return", "self"]}}
{"position": {"error_location": 39, "repair_targets": [18], "repair_candidates": [0, 21, 39, 18, 2, 26, 16, 6, 33, 35]}}
{"prediction": {"error_location": 0.9576345682144165, "repair_targets": [0.9528380632400513], "repair_candidates": [0.0025020772591233253, 0.02043195068836212, 0.00739595340564847, 0.016634073108434677, 0.9528380632400513, 7.04187186784111e-05, 3.419343556743115e-05, 8.067219459917396e-05, 5.854042683495209e-06, 6.773222139599966e-06], "target_probs": 0.9528380632400513}}


{"result": {"time": "2021-02-11 10:27:08.618388", "n_pass": [62, 8, 6], "n_token": 37, "loss": [0.039532750844955444, 0.039042167365550995], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["self", ",", "index", "=", "None", ",", "params", "=", "None", ")", ":", "#NEWLINE#", "#INDENT#", "'\\n        Clear either all caches or specific cached associated with one ore more indices.\\n        `<http://www.elastic.co/guide/en/elasticsearch/reference/current/indices-clearcache.html>`_\\n\\n        :arg index: A comma-separated list of index name to limit the operation\\n        :arg field_data: Clear field data\\n        :arg fielddata: Clear field data\\n        :arg fields: A comma-separated list of fields to clear when using the\\n            `field_data` parameter (default: all)\\n        :arg filter: Clear filter caches\\n        :arg filter_cache: Clear filter caches\\n        :arg filter_keys: A comma-separated list of keys to clear when using\\n            the `filter_cache` parameter (default: all)\\n        :arg id: Clear ID caches for parent/child\\n        :arg id_cache: Clear ID caches for parent/child\\n        :arg allow_no_indices: Whether to ignore if a wildcard indices\\n            expression resolves into no concrete indices. (This includes `_all` string or\\n            when no indices have been specified)\\n        :arg expand_wildcards: Whether to expand wildcard expression to concrete indices\\n            that are open, closed or both.\\n        :arg ignore_indices: When performed on multiple indices, allows to\\n            ignore `missing` ones (default: none)\\n        :arg ignore_unavailable: Whether specified concrete indices should be ignored\\n            when unavailable (missing or closed)\\n        :arg query_cache: Clear query cache\\n        :arg recycler: Clear the recycler cache\\n        '", "#NEWLINE#", "(", "_", ",", "data", ")", "=", "self", "(", "index", ",", "'_cache'", ",", "'clear'", ")", ",", "params", "=", "params", ")", "#NEWLINE#", "return", "self"]}}
{"position": {"error_location": 36, "repair_targets": [18], "repair_candidates": [0, 21, 36, 18, 2, 23, 16, 6, 30, 32]}}
{"prediction": {"error_location": 0.961238443851471, "repair_targets": [0.9617101550102234], "repair_candidates": [0.0030786683782935143, 0.02121509611606598, 0.00556413596495986, 0.008283678442239761, 0.9617101550102234, 5.75349731661845e-05, 1.8222110156784765e-05, 5.908290040679276e-05, 6.029116320860339e-06, 7.474901394743938e-06], "target_probs": 0.9617101550102234}}


{"result": {"time": "2021-02-11 10:27:08.684741", "n_pass": [64, 9, 7], "n_token": 34, "loss": [0.11259304732084274, 0.0208049975335598], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["self", ",", "index", "=", "None", ",", "params", "=", "None", ")", ":", "#NEWLINE#", "#INDENT#", "'\\n        Clear either all caches or specific cached associated with one ore more indices.\\n        `<http://www.elastic.co/guide/en/elasticsearch/reference/current/indices-clearcache.html>`_\\n\\n        :arg index: A comma-separated list of index name to limit the operation\\n        :arg field_data: Clear field data\\n        :arg fielddata: Clear field data\\n        :arg fields: A comma-separated list of fields to clear when using the\\n            `field_data` parameter (default: all)\\n        :arg filter: Clear filter caches\\n        :arg filter_cache: Clear filter caches\\n        :arg filter_keys: A comma-separated list of keys to clear when using\\n            the `filter_cache` parameter (default: all)\\n        :arg id: Clear ID caches for parent/child\\n        :arg id_cache: Clear ID caches for parent/child\\n        :arg allow_no_indices: Whether to ignore if a wildcard indices\\n            expression resolves into no concrete indices. (This includes `_all` string or\\n            when no indices have been specified)\\n        :arg expand_wildcards: Whether to expand wildcard expression to concrete indices\\n            that are open, closed or both.\\n        :arg ignore_indices: When performed on multiple indices, allows to\\n            ignore `missing` ones (default: none)\\n        :arg ignore_unavailable: Whether specified concrete indices should be ignored\\n            when unavailable (missing or closed)\\n        :arg query_cache: Clear query cache\\n        :arg recycler: Clear the recycler cache\\n        '", "#NEWLINE#", "(", "_", ",", "data", ")", "=", "self", "(", "index", ",", ")", ",", "params", "=", "params", ")", "#NEWLINE#", "return", "self"]}}
{"position": {"error_location": 33, "repair_targets": [18], "repair_candidates": [0, 21, 33, 18, 2, 23, 16, 6, 27, 29]}}
{"prediction": {"error_location": 0.8935142755508423, "repair_targets": [0.97940993309021], "repair_candidates": [0.0018812182825058699, 0.010617734864354134, 0.0024106050841510296, 0.005482194945216179, 0.97940993309021, 3.953552368329838e-05, 4.418300250108587e-06, 0.00012642971705645323, 1.9444731151452288e-05, 8.575413630751427e-06], "target_probs": 0.97940993309021}}


{"result": {"time": "2021-02-11 10:27:08.752127", "n_pass": [70, 10, 8], "n_token": 32, "loss": [0.08811851590871811, 0.02973165176808834], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["self", ",", "index", "=", "params", "=", "None", ")", ":", "#NEWLINE#", "#INDENT#", "'\\n        Clear either all caches or specific cached associated with one ore more indices.\\n        `<http://www.elastic.co/guide/en/elasticsearch/reference/current/indices-clearcache.html>`_\\n\\n        :arg index: A comma-separated list of index name to limit the operation\\n        :arg field_data: Clear field data\\n        :arg fielddata: Clear field data\\n        :arg fields: A comma-separated list of fields to clear when using the\\n            `field_data` parameter (default: all)\\n        :arg filter: Clear filter caches\\n        :arg filter_cache: Clear filter caches\\n        :arg filter_keys: A comma-separated list of keys to clear when using\\n            the `filter_cache` parameter (default: all)\\n        :arg id: Clear ID caches for parent/child\\n        :arg id_cache: Clear ID caches for parent/child\\n        :arg allow_no_indices: Whether to ignore if a wildcard indices\\n            expression resolves into no concrete indices. (This includes `_all` string or\\n            when no indices have been specified)\\n        :arg expand_wildcards: Whether to expand wildcard expression to concrete indices\\n            that are open, closed or both.\\n        :arg ignore_indices: When performed on multiple indices, allows to\\n            ignore `missing` ones (default: none)\\n        :arg ignore_unavailable: Whether specified concrete indices should be ignored\\n            when unavailable (missing or closed)\\n        :arg query_cache: Clear query cache\\n        :arg recycler: Clear the recycler cache\\n        '", "#NEWLINE#", "(", "_", ",", "data", ")", "=", "self", "(", "index", ",", ")", ",", "params", "=", "params", ")", "#NEWLINE#", "return", "self"]}}
{"position": {"error_location": 31, "repair_targets": [16], "repair_candidates": [0, 19, 31, 16, 2, 21, 14, 4, 25, 27]}}
{"prediction": {"error_location": 0.915652334690094, "repair_targets": [0.9707059860229492], "repair_candidates": [0.0015260886866599321, 0.019610121846199036, 0.0017635812982916832, 0.006233104504644871, 0.9707059860229492, 2.7936845071963035e-05, 3.2071334317151923e-06, 0.00010940460924757645, 1.3441238479572348e-05, 7.222356998681789e-06], "target_probs": 0.9707059860229492}}


{"result": {"time": "2021-02-11 10:27:08.815871", "n_pass": [72, 11, 9], "n_token": 30, "loss": [0.12397278845310211, 0.048067692667245865], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["self", ",", "index", "=", "params", "=", ":", "#NEWLINE#", "#INDENT#", "'\\n        Clear either all caches or specific cached associated with one ore more indices.\\n        `<http://www.elastic.co/guide/en/elasticsearch/reference/current/indices-clearcache.html>`_\\n\\n        :arg index: A comma-separated list of index name to limit the operation\\n        :arg field_data: Clear field data\\n        :arg fielddata: Clear field data\\n        :arg fields: A comma-separated list of fields to clear when using the\\n            `field_data` parameter (default: all)\\n        :arg filter: Clear filter caches\\n        :arg filter_cache: Clear filter caches\\n        :arg filter_keys: A comma-separated list of keys to clear when using\\n            the `filter_cache` parameter (default: all)\\n        :arg id: Clear ID caches for parent/child\\n        :arg id_cache: Clear ID caches for parent/child\\n        :arg allow_no_indices: Whether to ignore if a wildcard indices\\n            expression resolves into no concrete indices. (This includes `_all` string or\\n            when no indices have been specified)\\n        :arg expand_wildcards: Whether to expand wildcard expression to concrete indices\\n            that are open, closed or both.\\n        :arg ignore_indices: When performed on multiple indices, allows to\\n            ignore `missing` ones (default: none)\\n        :arg ignore_unavailable: Whether specified concrete indices should be ignored\\n            when unavailable (missing or closed)\\n        :arg query_cache: Clear query cache\\n        :arg recycler: Clear the recycler cache\\n        '", "#NEWLINE#", "(", "_", ",", "data", ")", "=", "self", "(", "index", ",", ")", ",", "params", "=", "params", ")", "#NEWLINE#", "return", "self"]}}
{"position": {"error_location": 29, "repair_targets": [14], "repair_candidates": [0, 17, 29, 14, 2, 19, 12, 4, 23, 25]}}
{"prediction": {"error_location": 0.8834038972854614, "repair_targets": [0.953069269657135], "repair_candidates": [0.0032347925007343292, 0.03070821799337864, 0.003252284834161401, 0.00946398451924324, 0.953069269657135, 5.78875515202526e-05, 9.44824205362238e-06, 0.00016330402286257595, 2.6646499463822693e-05, 1.4122565517027397e-05], "target_probs": 0.953069269657135}}


{"result": {"time": "2021-02-11 10:27:08.878882", "n_pass": [73, 12, 10], "n_token": 28, "loss": [0.17623086273670197, 0.05267910286784172], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["self", ",", "index", "=", "params", "=", "#INDENT#", "'\\n        Clear either all caches or specific cached associated with one ore more indices.\\n        `<http://www.elastic.co/guide/en/elasticsearch/reference/current/indices-clearcache.html>`_\\n\\n        :arg index: A comma-separated list of index name to limit the operation\\n        :arg field_data: Clear field data\\n        :arg fielddata: Clear field data\\n        :arg fields: A comma-separated list of fields to clear when using the\\n            `field_data` parameter (default: all)\\n        :arg filter: Clear filter caches\\n        :arg filter_cache: Clear filter caches\\n        :arg filter_keys: A comma-separated list of keys to clear when using\\n            the `filter_cache` parameter (default: all)\\n        :arg id: Clear ID caches for parent/child\\n        :arg id_cache: Clear ID caches for parent/child\\n        :arg allow_no_indices: Whether to ignore if a wildcard indices\\n            expression resolves into no concrete indices. (This includes `_all` string or\\n            when no indices have been specified)\\n        :arg expand_wildcards: Whether to expand wildcard expression to concrete indices\\n            that are open, closed or both.\\n        :arg ignore_indices: When performed on multiple indices, allows to\\n            ignore `missing` ones (default: none)\\n        :arg ignore_unavailable: Whether specified concrete indices should be ignored\\n            when unavailable (missing or closed)\\n        :arg query_cache: Clear query cache\\n        :arg recycler: Clear the recycler cache\\n        '", "#NEWLINE#", "(", "_", ",", "data", ")", "=", "self", "(", "index", ",", ")", ",", "params", "=", "params", ")", "#NEWLINE#", "return", "self"]}}
{"position": {"error_location": 27, "repair_targets": [12], "repair_candidates": [0, 15, 27, 12, 2, 17, 10, 4, 21, 23]}}
{"prediction": {"error_location": 0.8384243845939636, "repair_targets": [0.9486843943595886], "repair_candidates": [0.0034651048481464386, 0.02761714905500412, 0.005898843053728342, 0.013995997607707977, 0.9486843943595886, 4.172314584138803e-05, 1.169505685538752e-05, 0.0002371402079006657, 3.0278572012321092e-05, 1.765559136401862e-05], "target_probs": 0.9486843943595886}}


{"result": {"time": "2021-02-11 10:27:09.066208", "n_pass": [107, 15, 11], "n_token": 27, "loss": [0.15031935274600983, 0.07110682874917984], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["self", ",", "index", "=", "params", "=", "'\\n        Clear either all caches or specific cached associated with one ore more indices.\\n        `<http://www.elastic.co/guide/en/elasticsearch/reference/current/indices-clearcache.html>`_\\n\\n        :arg index: A comma-separated list of index name to limit the operation\\n        :arg field_data: Clear field data\\n        :arg fielddata: Clear field data\\n        :arg fields: A comma-separated list of fields to clear when using the\\n            `field_data` parameter (default: all)\\n        :arg filter: Clear filter caches\\n        :arg filter_cache: Clear filter caches\\n        :arg filter_keys: A comma-separated list of keys to clear when using\\n            the `filter_cache` parameter (default: all)\\n        :arg id: Clear ID caches for parent/child\\n        :arg id_cache: Clear ID caches for parent/child\\n        :arg allow_no_indices: Whether to ignore if a wildcard indices\\n            expression resolves into no concrete indices. (This includes `_all` string or\\n            when no indices have been specified)\\n        :arg expand_wildcards: Whether to expand wildcard expression to concrete indices\\n            that are open, closed or both.\\n        :arg ignore_indices: When performed on multiple indices, allows to\\n            ignore `missing` ones (default: none)\\n        :arg ignore_unavailable: Whether specified concrete indices should be ignored\\n            when unavailable (missing or closed)\\n        :arg query_cache: Clear query cache\\n        :arg recycler: Clear the recycler cache\\n        '", "#NEWLINE#", "(", "_", ",", "data", ")", "=", "self", "(", "index", ",", ")", ",", "params", "=", "params", ")", "#NEWLINE#", "return", "self"]}}
{"position": {"error_location": 26, "repair_targets": [11], "repair_candidates": [0, 14, 26, 11, 2, 16, 9, 4, 20, 22]}}
{"prediction": {"error_location": 0.8604331612586975, "repair_targets": [0.9313623905181885], "repair_candidates": [0.0036481632851064205, 0.030216937884688377, 0.023214930668473244, 0.011239523068070412, 0.9313623905181885, 4.8233956476906314e-05, 1.1974558219662867e-05, 0.0002018455124925822, 3.822365033556707e-05, 1.783224070095457e-05], "target_probs": 0.9313623905181885}}


{"result": {"time": "2021-02-11 10:27:09.192483", "n_pass": [109, 17, 12], "n_token": 26, "loss": [0.6909149885177612, 0.2176920771598816], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["self", ",", "index", "=", "params", "=", "'\\n        Clear either all caches or specific cached associated with one ore more indices.\\n        `<http://www.elastic.co/guide/en/elasticsearch/reference/current/indices-clearcache.html>`_\\n\\n        :arg index: A comma-separated list of index name to limit the operation\\n        :arg field_data: Clear field data\\n        :arg fielddata: Clear field data\\n        :arg fields: A comma-separated list of fields to clear when using the\\n            `field_data` parameter (default: all)\\n        :arg filter: Clear filter caches\\n        :arg filter_cache: Clear filter caches\\n        :arg filter_keys: A comma-separated list of keys to clear when using\\n            the `filter_cache` parameter (default: all)\\n        :arg id: Clear ID caches for parent/child\\n        :arg id_cache: Clear ID caches for parent/child\\n        :arg allow_no_indices: Whether to ignore if a wildcard indices\\n            expression resolves into no concrete indices. (This includes `_all` string or\\n            when no indices have been specified)\\n        :arg expand_wildcards: Whether to expand wildcard expression to concrete indices\\n            that are open, closed or both.\\n        :arg ignore_indices: When performed on multiple indices, allows to\\n            ignore `missing` ones (default: none)\\n        :arg ignore_unavailable: Whether specified concrete indices should be ignored\\n            when unavailable (missing or closed)\\n        :arg query_cache: Clear query cache\\n        :arg recycler: Clear the recycler cache\\n        '", "#NEWLINE#", "_", ",", "data", ")", "=", "self", "(", "index", ",", ")", ",", "params", "=", "params", ")", "#NEWLINE#", "return", "self"]}}
{"position": {"error_location": 25, "repair_targets": [10], "repair_candidates": [0, 13, 25, 10, 2, 15, 8, 4, 19, 21]}}
{"prediction": {"error_location": 0.5011173486709595, "repair_targets": [0.8043730854988098], "repair_candidates": [0.010956213809549809, 0.10768690705299377, 0.03232523798942566, 0.043812382966279984, 0.8043730854988098, 0.00030338772921822965, 5.076823799754493e-05, 0.0002651236718520522, 0.0001512995222583413, 7.562166138086468e-05], "target_probs": 0.8043730854988098}}


{"result": {"time": "2021-02-11 10:27:09.254612", "n_pass": [111, 18, 13], "n_token": 25, "loss": [0.06005999818444252, 0.0182768814265728], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["self", ",", "index", "=", "params", "=", "'\\n        Clear either all caches or specific cached associated with one ore more indices.\\n        `<http://www.elastic.co/guide/en/elasticsearch/reference/current/indices-clearcache.html>`_\\n\\n        :arg index: A comma-separated list of index name to limit the operation\\n        :arg field_data: Clear field data\\n        :arg fielddata: Clear field data\\n        :arg fields: A comma-separated list of fields to clear when using the\\n            `field_data` parameter (default: all)\\n        :arg filter: Clear filter caches\\n        :arg filter_cache: Clear filter caches\\n        :arg filter_keys: A comma-separated list of keys to clear when using\\n            the `filter_cache` parameter (default: all)\\n        :arg id: Clear ID caches for parent/child\\n        :arg id_cache: Clear ID caches for parent/child\\n        :arg allow_no_indices: Whether to ignore if a wildcard indices\\n            expression resolves into no concrete indices. (This includes `_all` string or\\n            when no indices have been specified)\\n        :arg expand_wildcards: Whether to expand wildcard expression to concrete indices\\n            that are open, closed or both.\\n        :arg ignore_indices: When performed on multiple indices, allows to\\n            ignore `missing` ones (default: none)\\n        :arg ignore_unavailable: Whether specified concrete indices should be ignored\\n            when unavailable (missing or closed)\\n        :arg query_cache: Clear query cache\\n        :arg recycler: Clear the recycler cache\\n        '", "#NEWLINE#", "_", "data", ")", "=", "self", "(", "index", ",", ")", ",", "params", "=", "params", ")", "#NEWLINE#", "return", "self"]}}
{"position": {"error_location": 24, "repair_targets": [9], "repair_candidates": [0, 12, 24, 9, 2, 14, 8, 4, 18, 20]}}
{"prediction": {"error_location": 0.9417080283164978, "repair_targets": [0.9818891286849976], "repair_candidates": [0.0005975099047645926, 0.005477490834891796, 0.0014734574360772967, 0.010389639064669609, 0.9818891286849976, 2.4857099560904317e-05, 1.7181898783746874e-06, 0.0001363816118100658, 7.66041466704337e-06, 2.1820294477947755e-06], "target_probs": 0.9818891286849976}}


{"result": {"time": "2021-02-11 10:27:09.315183", "n_pass": [113, 19, 14], "n_token": 24, "loss": [0.060277536511421204, 0.010917678475379944], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["self", ",", "index", "=", "params", "=", "'\\n        Clear either all caches or specific cached associated with one ore more indices.\\n        `<http://www.elastic.co/guide/en/elasticsearch/reference/current/indices-clearcache.html>`_\\n\\n        :arg index: A comma-separated list of index name to limit the operation\\n        :arg field_data: Clear field data\\n        :arg fielddata: Clear field data\\n        :arg fields: A comma-separated list of fields to clear when using the\\n            `field_data` parameter (default: all)\\n        :arg filter: Clear filter caches\\n        :arg filter_cache: Clear filter caches\\n        :arg filter_keys: A comma-separated list of keys to clear when using\\n            the `filter_cache` parameter (default: all)\\n        :arg id: Clear ID caches for parent/child\\n        :arg id_cache: Clear ID caches for parent/child\\n        :arg allow_no_indices: Whether to ignore if a wildcard indices\\n            expression resolves into no concrete indices. (This includes `_all` string or\\n            when no indices have been specified)\\n        :arg expand_wildcards: Whether to expand wildcard expression to concrete indices\\n            that are open, closed or both.\\n        :arg ignore_indices: When performed on multiple indices, allows to\\n            ignore `missing` ones (default: none)\\n        :arg ignore_unavailable: Whether specified concrete indices should be ignored\\n            when unavailable (missing or closed)\\n        :arg query_cache: Clear query cache\\n        :arg recycler: Clear the recycler cache\\n        '", "#NEWLINE#", "_", "data", "=", "self", "(", "index", ",", ")", ",", "params", "=", "params", ")", "#NEWLINE#", "return", "self"]}}
{"position": {"error_location": 23, "repair_targets": [9], "repair_candidates": [0, 11, 23, 9, 2, 13, 8, 4, 17, 19]}}
{"prediction": {"error_location": 0.9415031671524048, "repair_targets": [0.9891417026519775], "repair_candidates": [0.0002267164527438581, 0.0010353547986596823, 0.0011786165414378047, 0.008354324847459793, 0.9891417026519775, 1.4581825780624058e-05, 2.4996190859383205e-06, 4.157859802944586e-05, 3.6164426546747563e-06, 1.0798426046676468e-06], "target_probs": 0.9891417026519775}}


{"result": {"time": "2021-02-11 10:27:09.436026", "n_pass": [117, 21, 15], "n_token": 22, "loss": [0.053248584270477295, 0.006055472884327173], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["self", ",", "index", "=", "params", "=", "'\\n        Clear either all caches or specific cached associated with one ore more indices.\\n        `<http://www.elastic.co/guide/en/elasticsearch/reference/current/indices-clearcache.html>`_\\n\\n        :arg index: A comma-separated list of index name to limit the operation\\n        :arg field_data: Clear field data\\n        :arg fielddata: Clear field data\\n        :arg fields: A comma-separated list of fields to clear when using the\\n            `field_data` parameter (default: all)\\n        :arg filter: Clear filter caches\\n        :arg filter_cache: Clear filter caches\\n        :arg filter_keys: A comma-separated list of keys to clear when using\\n            the `filter_cache` parameter (default: all)\\n        :arg id: Clear ID caches for parent/child\\n        :arg id_cache: Clear ID caches for parent/child\\n        :arg allow_no_indices: Whether to ignore if a wildcard indices\\n            expression resolves into no concrete indices. (This includes `_all` string or\\n            when no indices have been specified)\\n        :arg expand_wildcards: Whether to expand wildcard expression to concrete indices\\n            that are open, closed or both.\\n        :arg ignore_indices: When performed on multiple indices, allows to\\n            ignore `missing` ones (default: none)\\n        :arg ignore_unavailable: Whether specified concrete indices should be ignored\\n            when unavailable (missing or closed)\\n        :arg query_cache: Clear query cache\\n        :arg recycler: Clear the recycler cache\\n        '", "#NEWLINE#", "_", "data", "=", "self", "(", "index", ",", "params", "=", "params", ")", "#NEWLINE#", "return", "self"]}}
{"position": {"error_location": 21, "repair_targets": [9], "repair_candidates": [0, 11, 21, 9, 2, 13, 8, 4, 15, 17]}}
{"prediction": {"error_location": 0.9481443166732788, "repair_targets": [0.993962824344635], "repair_candidates": [0.00014556621317751706, 0.00044473240268416703, 0.0013791194651275873, 0.004019787069410086, 0.993962824344635, 1.964030889212154e-05, 3.3725601156220364e-07, 2.5738056137925014e-05, 1.7742549971444532e-06, 5.289574005473696e-07], "target_probs": 0.993962824344635}}


{"result": {"time": "2021-02-11 10:27:09.557167", "n_pass": [123, 23, 16], "n_token": 21, "loss": [0.09694235771894455, 0.006541021168231964], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["self", "index", "=", "params", "=", "'\\n        Clear either all caches or specific cached associated with one ore more indices.\\n        `<http://www.elastic.co/guide/en/elasticsearch/reference/current/indices-clearcache.html>`_\\n\\n        :arg index: A comma-separated list of index name to limit the operation\\n        :arg field_data: Clear field data\\n        :arg fielddata: Clear field data\\n        :arg fields: A comma-separated list of fields to clear when using the\\n            `field_data` parameter (default: all)\\n        :arg filter: Clear filter caches\\n        :arg filter_cache: Clear filter caches\\n        :arg filter_keys: A comma-separated list of keys to clear when using\\n            the `filter_cache` parameter (default: all)\\n        :arg id: Clear ID caches for parent/child\\n        :arg id_cache: Clear ID caches for parent/child\\n        :arg allow_no_indices: Whether to ignore if a wildcard indices\\n            expression resolves into no concrete indices. (This includes `_all` string or\\n            when no indices have been specified)\\n        :arg expand_wildcards: Whether to expand wildcard expression to concrete indices\\n            that are open, closed or both.\\n        :arg ignore_indices: When performed on multiple indices, allows to\\n            ignore `missing` ones (default: none)\\n        :arg ignore_unavailable: Whether specified concrete indices should be ignored\\n            when unavailable (missing or closed)\\n        :arg query_cache: Clear query cache\\n        :arg recycler: Clear the recycler cache\\n        '", "#NEWLINE#", "_", "data", "=", "self", "(", "index", ",", "params", "=", "params", ")", "#NEWLINE#", "return", "self"]}}
{"position": {"error_location": 20, "repair_targets": [8], "repair_candidates": [0, 10, 20, 8, 1, 12, 7, 3, 14, 16]}}
{"prediction": {"error_location": 0.9076083302497864, "repair_targets": [0.9934803247451782], "repair_candidates": [4.59127186331898e-05, 0.0005005141138099134, 0.0007625231519341469, 0.005180032458156347, 0.9934803247451782, 1.0891943929891568e-05, 1.076436006997028e-07, 1.872193934104871e-05, 7.612896979480865e-07, 2.2125064447209297e-07], "target_probs": 0.9934803247451782}}


{"result": {"time": "2021-02-11 10:27:09.616197", "n_pass": [125, 24, 17], "n_token": 20, "loss": [0.035909779369831085, 0.004954431671649218], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["self", "index", "params", "=", "'\\n        Clear either all caches or specific cached associated with one ore more indices.\\n        `<http://www.elastic.co/guide/en/elasticsearch/reference/current/indices-clearcache.html>`_\\n\\n        :arg index: A comma-separated list of index name to limit the operation\\n        :arg field_data: Clear field data\\n        :arg fielddata: Clear field data\\n        :arg fields: A comma-separated list of fields to clear when using the\\n            `field_data` parameter (default: all)\\n        :arg filter: Clear filter caches\\n        :arg filter_cache: Clear filter caches\\n        :arg filter_keys: A comma-separated list of keys to clear when using\\n            the `filter_cache` parameter (default: all)\\n        :arg id: Clear ID caches for parent/child\\n        :arg id_cache: Clear ID caches for parent/child\\n        :arg allow_no_indices: Whether to ignore if a wildcard indices\\n            expression resolves into no concrete indices. (This includes `_all` string or\\n            when no indices have been specified)\\n        :arg expand_wildcards: Whether to expand wildcard expression to concrete indices\\n            that are open, closed or both.\\n        :arg ignore_indices: When performed on multiple indices, allows to\\n            ignore `missing` ones (default: none)\\n        :arg ignore_unavailable: Whether specified concrete indices should be ignored\\n            when unavailable (missing or closed)\\n        :arg query_cache: Clear query cache\\n        :arg recycler: Clear the recycler cache\\n        '", "#NEWLINE#", "_", "data", "=", "self", "(", "index", ",", "params", "=", "params", ")", "#NEWLINE#", "return", "self"]}}
{"position": {"error_location": 19, "repair_targets": [7], "repair_candidates": [0, 9, 19, 7, 1, 11, 6, 2, 13, 15]}}
{"prediction": {"error_location": 0.9647274613380432, "repair_targets": [0.9950578212738037], "repair_candidates": [2.9986234949319623e-05, 0.00047803003690205514, 0.0015946861822158098, 0.0028168412391096354, 0.9950578212738037, 5.395985226641642e-06, 2.8733694534821552e-08, 1.6656191291986033e-05, 4.1350151036567695e-07, 9.760334052089092e-08], "target_probs": 0.9950578212738037}}


{"result": {"time": "2021-02-11 10:27:09.674878", "n_pass": [127, 25, 18], "n_token": 19, "loss": [0.07528556138277054, 0.003731408854946494], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["self", "index", "params", "'\\n        Clear either all caches or specific cached associated with one ore more indices.\\n        `<http://www.elastic.co/guide/en/elasticsearch/reference/current/indices-clearcache.html>`_\\n\\n        :arg index: A comma-separated list of index name to limit the operation\\n        :arg field_data: Clear field data\\n        :arg fielddata: Clear field data\\n        :arg fields: A comma-separated list of fields to clear when using the\\n            `field_data` parameter (default: all)\\n        :arg filter: Clear filter caches\\n        :arg filter_cache: Clear filter caches\\n        :arg filter_keys: A comma-separated list of keys to clear when using\\n            the `filter_cache` parameter (default: all)\\n        :arg id: Clear ID caches for parent/child\\n        :arg id_cache: Clear ID caches for parent/child\\n        :arg allow_no_indices: Whether to ignore if a wildcard indices\\n            expression resolves into no concrete indices. (This includes `_all` string or\\n            when no indices have been specified)\\n        :arg expand_wildcards: Whether to expand wildcard expression to concrete indices\\n            that are open, closed or both.\\n        :arg ignore_indices: When performed on multiple indices, allows to\\n            ignore `missing` ones (default: none)\\n        :arg ignore_unavailable: Whether specified concrete indices should be ignored\\n            when unavailable (missing or closed)\\n        :arg query_cache: Clear query cache\\n        :arg recycler: Clear the recycler cache\\n        '", "#NEWLINE#", "_", "data", "=", "self", "(", "index", ",", "params", "=", "params", ")", "#NEWLINE#", "return", "self"]}}
{"position": {"error_location": 18, "repair_targets": [6], "repair_candidates": [0, 8, 18, 6, 1, 10, 5, 2, 12, 14]}}
{"prediction": {"error_location": 0.9274786114692688, "repair_targets": [0.9962755441665649], "repair_candidates": [0.0002536902029532939, 0.000433179346146062, 0.00011250157695030794, 0.0028598823118954897, 0.9962755441665649, 2.412191497569438e-05, 2.2196329041435092e-07, 3.693658436532132e-05, 2.955406898763613e-06, 9.139903909272107e-07], "target_probs": 0.9962755441665649}}


{"result": {"time": "2021-02-11 10:27:09.732333", "n_pass": [128, 26, 19], "n_token": 18, "loss": [0.005630111321806908, 0.006095651537179947], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["self", "index", "params", "#NEWLINE#", "_", "data", "=", "self", "(", "index", ",", "params", "=", "params", ")", "#NEWLINE#", "return", "self"]}}
{"position": {"error_location": 17, "repair_targets": [5], "repair_candidates": [0, 7, 17, 5, 1, 9, 4, 2, 11, 13]}}
{"prediction": {"error_location": 0.9943857192993164, "repair_targets": [0.9939228892326355], "repair_candidates": [0.0001837559975683689, 0.0004695277020800859, 0.0019195122877135873, 0.00341373891569674, 0.9939228892326355, 9.087853868550155e-06, 1.3160764922304224e-07, 7.880742487031966e-05, 2.084069592456217e-06, 3.609722796227288e-07], "target_probs": 0.9939228892326355}}


{"result": {"time": "2021-02-11 10:27:09.789481", "n_pass": [129, 27, 20], "n_token": 17, "loss": [0.03303767740726471, 0.372199684381485], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["self", "index", "params", "_", "data", "=", "self", "(", "index", ",", "params", "=", "params", ")", "#NEWLINE#", "return", "self"]}}
{"position": {"error_location": 16, "repair_targets": [4], "repair_candidates": [0, 6, 16, 4, 1, 8, 3, 2, 10, 12]}}
{"prediction": {"error_location": 0.9675021171569824, "repair_targets": [0.6892166137695312], "repair_candidates": [0.00477804196998477, 0.06042313203215599, 0.19066689908504486, 0.053820278495550156, 0.6892166137695312, 9.001071157399565e-05, 3.863543042825768e-06, 0.0009568819659762084, 3.618322080001235e-05, 7.977803761605173e-06], "target_probs": 0.6892166137695312}}


{"result": {"time": "2021-02-11 10:27:09.961169", "n_pass": [152, 30, 21], "n_token": 16, "loss": [0.39143121242523193, 0.12273260205984116], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["self", "index", "params", "_", "data", "=", "self", "index", ",", "params", "=", "params", ")", "#NEWLINE#", "return", "self"]}}
{"position": {"error_location": 15, "repair_targets": [4], "repair_candidates": [0, 6, 15, 4, 1, 7, 3, 2, 9, 11]}}
{"prediction": {"error_location": 0.6760886311531067, "repair_targets": [0.8845001459121704], "repair_candidates": [0.010837027803063393, 0.02477291226387024, 0.04575232043862343, 0.03151896968483925, 0.8845001459121704, 0.0007402176852338016, 9.14837364689447e-05, 0.0014536958187818527, 0.0003011896042153239, 3.2051702874014154e-05], "target_probs": 0.8845001459121704}}


{"result": {"time": "2021-02-11 10:27:10.017832", "n_pass": [153, 31, 22], "n_token": 15, "loss": [0.288367360830307, 0.4099007248878479], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["self", "index", "params", "_", "data", "=", "self", "index", "params", "=", "params", ")", "#NEWLINE#", "return", "self"]}}
{"position": {"error_location": 14, "repair_targets": [4], "repair_candidates": [0, 6, 14, 4, 1, 7, 3, 2, 8, 10]}}
{"prediction": {"error_location": 0.7494862079620361, "repair_targets": [0.6637161374092102], "repair_candidates": [0.024042688310146332, 0.07305299490690231, 0.15193107724189758, 0.054129306226968765, 0.6637161374092102, 0.0005451517645269632, 0.0018980144523084164, 0.030161814764142036, 0.0004987500142306089, 2.406357270956505e-05], "target_probs": 0.6637161374092102}}


{"result": {"time": "2021-02-11 10:27:10.073848", "n_pass": [155, 32, 23], "n_token": 14, "loss": [0.392808198928833, 0.6010266542434692], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["self", "index", "params", "_", "data", "=", "self", "index", "params", "params", ")", "#NEWLINE#", "return", "self"]}}
{"position": {"error_location": 13, "repair_targets": [4], "repair_candidates": [0, 6, 13, 4, 1, 7, 3, 2, 8, 9]}}
{"prediction": {"error_location": 0.6751582622528076, "repair_targets": [0.5482484698295593], "repair_candidates": [0.01636641100049019, 0.06588954478502274, 0.2724730670452118, 0.09522350877523422, 0.5482484698295593, 0.00013381819007918239, 0.00024151703109964728, 0.0013087347615510225, 0.00010120267688762397, 1.369208621326834e-05], "target_probs": 0.5482484698295593}}




Minimal simplified tokens:

['self', 'index', 'params', '_', 'data', '=', 'self', 'index', 'params', 'params', ')', '#NEWLINE#', 'return', 'self']
