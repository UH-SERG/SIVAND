
Original sample:

{"has_bug": true, "bug_kind": 1, "bug_kind_name": "VARIABLE_MISUSE", "source_tokens": ["#NEWLINE#", "def testRoundingError(", "self", ")", ":", "#NEWLINE#", "#INDENT#", "'Scaling might give us some rounding error.  Make sure that the encoder\\n    deals with it properly.\\n    '", "#NEWLINE#", "a", "=", "[", "(", "-", "1", ")", ",", "0", ",", "0", ",", "1", ",", "60", ",", "61", ",", "61", ",", "62", "]", "#NEWLINE#", "b", "=", "[", "(", "-", "0.999999", ")", ",", "(", "-", "1e-05", ")", ",", "1e-05", ",", "0.99998", ",", "60.00001", ",", "60.99999", ",", "61.00001", ",", "61.99998", "]", "#NEWLINE#", "self", ".", "assertEqual", "(", "self", ".", "simple", ".", "Encode", "(", "b", ")", ",", "self", ".", "simple", ".", "Encode", "(", "b", ")", ")"], "error_location": [68], "repair_targets": [9], "repair_candidates": [9, 2, 58, 62, 71, 32, 68, 77], "provenances": [{"datasetProvenance": {"datasetName": "ETHPy150Open", "filepath": "baz/app-sales-machine/lib/graphy/backends/google_chart_api/util_test.py", "license": "bsd-3-clause", "note": "license: bigquery_api"}}], "txt_file": "eval__VARIABLE_MISUSE__SStuB.txt-00001-of-00300", "js_count": 3736, "results": {"model": "rnn", "prob": {"loc": [[0.020370041951537132, 2.3469820575883205e-07, 2.8816863562042272e-08, 6.537795305128213e-10, 5.312210116237281e-10, 5.187384299887299e-09, 7.411306679472318e-09, 1.1043357339701743e-09, 4.199135617000138e-08, 3.2482649459097956e-08, 1.522288961552931e-08, 6.86656020931764e-09, 2.1707185382524585e-08, 2.7765551635638985e-08, 6.070945914871118e-07, 7.644481492263822e-09, 3.483229482625916e-09, 5.402062015491538e-07, 5.8169904448845955e-09, 3.9149972508312203e-07, 4.258854602312567e-09, 1.3309879705047933e-06, 1.2494807855034651e-08, 6.738264914929459e-07, 5.944935099755355e-10, 9.320544336333114e-08, 2.3777675384195618e-09, 1.7409880115337728e-07, 1.0591405530391285e-09, 2.10095393526899e-07, 1.1858151793830984e-08, 2.5375944900929426e-08, 1.8422541714357976e-08, 4.719565183108898e-09, 1.0032102926160746e-09, 8.47981738161252e-08, 2.648679853223257e-08, 1.4145226145956258e-07, 2.2622659301418935e-09, 9.709932163870505e-11, 2.9763951303607428e-08, 7.598157480970258e-08, 5.296382354913476e-08, 1.0817687190467495e-08, 9.950843482542382e-10, 3.793711300659197e-08, 8.391562111853546e-09, 4.953832011267423e-09, 4.0419116942302935e-09, 6.850848333073145e-09, 2.7114541722994545e-09, 3.9542143781545747e-08, 2.861081815908051e-09, 5.33597566132471e-09, 1.3591283654079689e-09, 1.6673413938406156e-07, 1.8800626833126444e-08, 1.947051941897371e-08, 1.5392031116334692e-07, 5.148325862847081e-11, 1.1538997535254225e-09, 3.967332573573401e-10, 7.76530578150414e-06, 3.9983422128742063e-10, 2.4236523898935047e-09, 1.4482652410663377e-08, 3.247464075428752e-09, 3.786920999004906e-09, 0.7245275974273682, 2.918215500358201e-07, 1.7988533995705325e-09, 2.5642046352913894e-07, 8.996441924757903e-10, 4.048246626808805e-09, 4.569687561684077e-08, 5.044431539147354e-09, 1.00040580264249e-08, 0.2550879418849945, 5.667914138030028e-07, 3.955783611786501e-08]], "pointer": [[0.0, 0.0, 7.64258311392041e-06, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.9983377456665039, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0015995445428416133, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 3.6099488625040976e-06, 0.0, 0.0, 0.0, 2.087940629280638e-05, 0.0, 0.0, 0.0, 0.0, 0.0, 6.495903903669387e-07, 0.0, 0.0, 2.9175116651458666e-05, 0.0, 0.0, 0.0, 0.0, 0.0, 7.062354825393413e-07, 0.0, 0.0]], "target": [0.9983377456665039]}, "loss": [0.3222355246543884, 0.0016636374639347196], "acc": [0.0, 1.0, 1.0, 1.0]}}


Trace of simplified code(s):

{"result": {"time": "2021-02-11 10:46:21.610209", "n_pass": [1, 1, 1], "n_token": 80, "loss": [0.3222355246543884, 0.0016636374639347196], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def testRoundingError(", "self", ")", ":", "#NEWLINE#", "#INDENT#", "'Scaling might give us some rounding error.  Make sure that the encoder\\n    deals with it properly.\\n    '", "#NEWLINE#", "a", "=", "[", "(", "-", "1", ")", ",", "0", ",", "0", ",", "1", ",", "60", ",", "61", ",", "61", ",", "62", "]", "#NEWLINE#", "b", "=", "[", "(", "-", "0.999999", ")", ",", "(", "-", "1e-05", ")", ",", "1e-05", ",", "0.99998", ",", "60.00001", ",", "60.99999", ",", "61.00001", ",", "61.99998", "]", "#NEWLINE#", "self", ".", "assertEqual", "(", "self", ".", "simple", ".", "Encode", "(", "b", ")", ",", "self", ".", "simple", ".", "Encode", "(", "b", ")", ")"]}}
{"position": {"error_location": 68, "repair_targets": [9], "repair_candidates": [9, 2, 58, 62, 71, 32, 68, 77]}}
{"prediction": {"error_location": 0.7245275974273682, "repair_targets": [0.9983377456665039], "repair_candidates": [7.64258311392041e-06, 0.9983377456665039, 0.0015995445428416133, 3.6099488625040976e-06, 2.087940629280638e-05, 6.495903903669387e-07, 2.9175116651458666e-05, 7.062354825393413e-07], "target_probs": 0.9983377456665039}}


{"result": {"time": "2021-02-11 10:46:21.695421", "n_pass": [21, 2, 2], "n_token": 70, "loss": [0.10987973213195801, 0.0030426131561398506], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def testRoundingError(", "self", ")", ":", "#NEWLINE#", "#INDENT#", "'Scaling might give us some rounding error.  Make sure that the encoder\\n    deals with it properly.\\n    '", "#NEWLINE#", "a", ",", "1", ",", "60", ",", "61", ",", "61", ",", "62", "]", "#NEWLINE#", "b", "=", "[", "(", "-", "0.999999", ")", ",", "(", "-", "1e-05", ")", ",", "1e-05", ",", "0.99998", ",", "60.00001", ",", "60.99999", ",", "61.00001", ",", "61.99998", "]", "#NEWLINE#", "self", ".", "assertEqual", "(", "self", ".", "simple", ".", "Encode", "(", "b", ")", ",", "self", ".", "simple", ".", "Encode", "(", "b", ")", ")"]}}
{"position": {"error_location": 58, "repair_targets": [9], "repair_candidates": [9, 2, 48, 52, 61, 22, 58, 67]}}
{"prediction": {"error_location": 0.8959419131278992, "repair_targets": [0.9969620108604431], "repair_candidates": [5.068703103461303e-05, 0.9969620108604431, 0.0028142090886831284, 1.0936611943179742e-05, 7.396309956675395e-05, 3.504867208903306e-06, 8.015880302991718e-05, 4.453608653420815e-06], "target_probs": 0.9969620108604431}}


{"result": {"time": "2021-02-11 10:46:21.854015", "n_pass": [24, 4, 3], "n_token": 60, "loss": [0.07239610701799393, 0.0018206710228696465], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def testRoundingError(", "self", ")", ":", "#NEWLINE#", "#INDENT#", "'Scaling might give us some rounding error.  Make sure that the encoder\\n    deals with it properly.\\n    '", "#NEWLINE#", "a", ",", "1", ",", "60", ",", "61", ",", "61", ",", "62", "]", "#NEWLINE#", "b", "=", "[", "(", "-", "0.999999", ")", ",", ",", "60.99999", ",", "61.00001", ",", "61.99998", "]", "#NEWLINE#", "self", ".", "assertEqual", "(", "self", ".", "simple", ".", "Encode", "(", "b", ")", ",", "self", ".", "simple", ".", "Encode", "(", "b", ")", ")"]}}
{"position": {"error_location": 48, "repair_targets": [9], "repair_candidates": [9, 2, 38, 42, 51, 22, 48, 57]}}
{"prediction": {"error_location": 0.9301624894142151, "repair_targets": [0.9981809854507446], "repair_candidates": [3.512974944896996e-05, 0.9981809854507446, 0.0016815204871818423, 6.7523960751714185e-06, 4.997536234441213e-05, 2.2050098777981475e-06, 4.057586193084717e-05, 2.8768270112777827e-06], "target_probs": 0.9981809854507446}}


{"result": {"time": "2021-02-11 10:46:22.007725", "n_pass": [43, 6, 4], "n_token": 55, "loss": [0.0660015419125557, 0.0015377895906567574], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def testRoundingError(", "self", ")", ":", "#NEWLINE#", "#INDENT#", "'Scaling might give us some rounding error.  Make sure that the encoder\\n    deals with it properly.\\n    '", "#NEWLINE#", "a", ",", "1", ",", "60", ",", "61", ",", "61", ",", "62", "]", "#NEWLINE#", "b", "=", "[", "(", "-", "0.999999", ")", ",", "61.99998", "]", "#NEWLINE#", "self", ".", "assertEqual", "(", "self", ".", "simple", ".", "Encode", "(", "b", ")", ",", "self", ".", "simple", ".", "Encode", "(", "b", ")", ")"]}}
{"position": {"error_location": 43, "repair_targets": [9], "repair_candidates": [9, 2, 33, 37, 46, 22, 43, 52]}}
{"prediction": {"error_location": 0.9361294507980347, "repair_targets": [0.9984633922576904], "repair_candidates": [4.127622378291562e-05, 0.9984633922576904, 0.0013912637950852513, 7.263749012054177e-06, 4.2576804844429716e-05, 2.210683760495158e-06, 4.8503774451091886e-05, 3.3645565054030158e-06], "target_probs": 0.9984633922576904}}


{"result": {"time": "2021-02-11 10:46:22.082279", "n_pass": [50, 7, 5], "n_token": 50, "loss": [0.24359463155269623, 0.005379157606512308], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def testRoundingError(", "self", ")", ":", "#NEWLINE#", "#INDENT#", "'Scaling might give us some rounding error.  Make sure that the encoder\\n    deals with it properly.\\n    '", "#NEWLINE#", "a", "61", ",", "61", ",", "62", "]", "#NEWLINE#", "b", "=", "[", "(", "-", "0.999999", ")", ",", "61.99998", "]", "#NEWLINE#", "self", ".", "assertEqual", "(", "self", ".", "simple", ".", "Encode", "(", "b", ")", ",", "self", ".", "simple", ".", "Encode", "(", "b", ")", ")"]}}
{"position": {"error_location": 38, "repair_targets": [9], "repair_candidates": [9, 2, 28, 32, 41, 17, 38, 47]}}
{"prediction": {"error_location": 0.7838053703308105, "repair_targets": [0.994635283946991], "repair_candidates": [0.00011239705054322258, 0.994635283946991, 0.005012126173824072, 1.2788570529664867e-05, 7.442350761266425e-05, 5.570962457568385e-06, 0.00014091673074290156, 6.530965492856922e-06], "target_probs": 0.994635283946991}}


{"result": {"time": "2021-02-11 10:46:22.225703", "n_pass": [53, 9, 6], "n_token": 45, "loss": [0.061910804361104965, 0.000846147770062089], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def testRoundingError(", "self", ")", ":", "#NEWLINE#", "#INDENT#", "'Scaling might give us some rounding error.  Make sure that the encoder\\n    deals with it properly.\\n    '", "#NEWLINE#", "a", "61", ",", "61", ",", "62", "]", "#NEWLINE#", "b", "=", "[", "61.99998", "]", "#NEWLINE#", "self", ".", "assertEqual", "(", "self", ".", "simple", ".", "Encode", "(", "b", ")", ",", "self", ".", "simple", ".", "Encode", "(", "b", ")", ")"]}}
{"position": {"error_location": 33, "repair_targets": [9], "repair_candidates": [9, 2, 23, 27, 36, 17, 33, 42]}}
{"prediction": {"error_location": 0.9399667382240295, "repair_targets": [0.9991542100906372], "repair_candidates": [5.4944539442658424e-05, 0.9991542100906372, 0.000688256521243602, 5.81850872549694e-06, 4.269367491360754e-05, 2.0561242308758665e-06, 4.922712832922116e-05, 2.753823991952231e-06], "target_probs": 0.9991542100906372}}


{"result": {"time": "2021-02-11 10:46:22.295210", "n_pass": [61, 10, 7], "n_token": 40, "loss": [0.15935659408569336, 0.036953963339328766], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def testRoundingError(", "self", ")", ":", "#NEWLINE#", "#INDENT#", "'Scaling might give us some rounding error.  Make sure that the encoder\\n    deals with it properly.\\n    '", "#NEWLINE#", "a", "]", "#NEWLINE#", "b", "=", "[", "61.99998", "]", "#NEWLINE#", "self", ".", "assertEqual", "(", "self", ".", "simple", ".", "Encode", "(", "b", ")", ",", "self", ".", "simple", ".", "Encode", "(", "b", ")", ")"]}}
{"position": {"error_location": 28, "repair_targets": [9], "repair_candidates": [9, 2, 18, 22, 31, 12, 28, 37]}}
{"prediction": {"error_location": 0.8526921272277832, "repair_targets": [0.9637205004692078], "repair_candidates": [0.0002355877950321883, 0.9637205004692078, 0.0343095138669014, 4.547402568277903e-05, 0.00036528013879433274, 4.8916583182290196e-05, 0.0012067462084814906, 6.796584784751758e-05], "target_probs": 0.9637205004692078}}


{"result": {"time": "2021-02-11 10:46:22.363766", "n_pass": [87, 11, 8], "n_token": 38, "loss": [0.05580008774995804, 0.03594473376870155], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def testRoundingError(", "self", ")", ":", "#NEWLINE#", "#INDENT#", "'Scaling might give us some rounding error.  Make sure that the encoder\\n    deals with it properly.\\n    '", "#NEWLINE#", "a", "b", "=", "[", "61.99998", "]", "#NEWLINE#", "self", ".", "assertEqual", "(", "self", ".", "simple", ".", "Encode", "(", "b", ")", ",", "self", ".", "simple", ".", "Encode", "(", "b", ")", ")"]}}
{"position": {"error_location": 26, "repair_targets": [9], "repair_candidates": [9, 2, 16, 20, 29, 10, 26, 35]}}
{"prediction": {"error_location": 0.9457283020019531, "repair_targets": [0.9646936058998108], "repair_candidates": [2.3653776224819012e-05, 0.9646936058998108, 0.03516018018126488, 6.223383934411686e-06, 4.1848521505016834e-05, 2.932902589236619e-06, 6.783933349652216e-05, 3.7227641769277398e-06], "target_probs": 0.9646936058998108}}


{"result": {"time": "2021-02-11 10:46:22.432793", "n_pass": [89, 12, 9], "n_token": 36, "loss": [0.08398032933473587, 0.0394071601331234], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def testRoundingError(", "self", ")", ":", "#NEWLINE#", "#INDENT#", "'Scaling might give us some rounding error.  Make sure that the encoder\\n    deals with it properly.\\n    '", "#NEWLINE#", "a", "b", "=", "]", "#NEWLINE#", "self", ".", "assertEqual", "(", "self", ".", "simple", ".", "Encode", "(", "b", ")", ",", "self", ".", "simple", ".", "Encode", "(", "b", ")", ")"]}}
{"position": {"error_location": 24, "repair_targets": [9], "repair_candidates": [9, 2, 14, 18, 27, 10, 24, 33]}}
{"prediction": {"error_location": 0.9194493293762207, "repair_targets": [0.9613592028617859], "repair_candidates": [4.8000038077589124e-05, 0.9613592028617859, 0.03846318647265434, 2.3459928343072534e-05, 4.972742317477241e-05, 5.791531293652952e-06, 4.2207138903904706e-05, 8.44107307784725e-06], "target_probs": 0.9613592028617859}}


{"result": {"time": "2021-02-11 10:46:22.498107", "n_pass": [91, 13, 10], "n_token": 33, "loss": [0.07361476123332977, 0.03931509330868721], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def testRoundingError(", "self", ")", ":", "#NEWLINE#", "#INDENT#", "'Scaling might give us some rounding error.  Make sure that the encoder\\n    deals with it properly.\\n    '", "#NEWLINE#", "a", "b", "=", "]", "#NEWLINE#", "self", "self", ".", "simple", ".", "Encode", "(", "b", ")", ",", "self", ".", "simple", ".", "Encode", "(", "b", ")", ")"]}}
{"position": {"error_location": 21, "repair_targets": [9], "repair_candidates": [9, 2, 14, 15, 24, 10, 21, 30]}}
{"prediction": {"error_location": 0.9290295243263245, "repair_targets": [0.9614477157592773], "repair_candidates": [0.00013090732682030648, 0.9614477157592773, 0.033831849694252014, 0.004298683255910873, 0.00020607560873031616, 8.488423191010952e-06, 6.427524931496009e-05, 1.2094410521967802e-05], "target_probs": 0.9614477157592773}}


{"result": {"time": "2021-02-11 10:46:22.625825", "n_pass": [96, 15, 11], "n_token": 30, "loss": [0.026454171165823936, 0.02171468548476696], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def testRoundingError(", "self", ")", ":", "#NEWLINE#", "#INDENT#", "'Scaling might give us some rounding error.  Make sure that the encoder\\n    deals with it properly.\\n    '", "#NEWLINE#", "a", "b", "=", "]", "#NEWLINE#", "self", "self", ".", "simple", ".", "Encode", "(", "b", ")", ",", "self", ".", "simple", "b", ")", ")"]}}
{"position": {"error_location": 21, "repair_targets": [9], "repair_candidates": [9, 2, 14, 15, 24, 10, 21, 27]}}
{"prediction": {"error_location": 0.9738926887512207, "repair_targets": [0.9785193800926208], "repair_candidates": [1.4935150829842314e-05, 0.9785193800926208, 0.021014899015426636, 0.0004057571350131184, 2.5342968001496047e-05, 2.427669414828415e-06, 6.939809281902853e-06, 1.0201072655036114e-05], "target_probs": 0.9785193800926208}}


{"result": {"time": "2021-02-11 10:46:22.688935", "n_pass": [98, 16, 12], "n_token": 28, "loss": [0.33709949254989624, 0.02772589586675167], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["self", ")", ":", "#NEWLINE#", "#INDENT#", "'Scaling might give us some rounding error.  Make sure that the encoder\\n    deals with it properly.\\n    '", "#NEWLINE#", "a", "b", "=", "]", "#NEWLINE#", "self", "self", ".", "simple", ".", "Encode", "(", "b", ")", ",", "self", ".", "simple", "b", ")", ")"]}}
{"position": {"error_location": 19, "repair_targets": [7], "repair_candidates": [7, 0, 12, 13, 22, 8, 19, 25]}}
{"prediction": {"error_location": 0.713837742805481, "repair_targets": [0.9726549386978149], "repair_candidates": [0.002823316026479006, 0.9726549386978149, 0.024425895884633064, 6.00642706558574e-05, 5.461500222736504e-06, 2.4008115815377096e-06, 2.192723513871897e-05, 5.933854936301941e-06], "target_probs": 0.9726549386978149}}


{"result": {"time": "2021-02-11 10:46:22.750717", "n_pass": [100, 17, 13], "n_token": 26, "loss": [0.21444031596183777, 0.02674172818660736], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["self", ")", "#INDENT#", "'Scaling might give us some rounding error.  Make sure that the encoder\\n    deals with it properly.\\n    '", "#NEWLINE#", "a", "b", "=", "]", "#NEWLINE#", "self", "self", ".", "simple", ".", "Encode", "(", "b", ")", ",", "self", ".", "simple", "b", ")", ")"]}}
{"position": {"error_location": 17, "repair_targets": [5], "repair_candidates": [5, 0, 10, 11, 20, 6, 17, 23]}}
{"prediction": {"error_location": 0.8069929480552673, "repair_targets": [0.9736126661300659], "repair_candidates": [0.0029469989240169525, 0.9736126661300659, 0.023261725902557373, 0.00013218660023994744, 7.2657358032302e-06, 2.445186055410886e-06, 2.9934019039501436e-05, 6.68576467433013e-06], "target_probs": 0.9736126661300659}}


{"result": {"time": "2021-02-11 10:46:22.813824", "n_pass": [101, 18, 14], "n_token": 24, "loss": [0.19724193215370178, 0.04358334839344025], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["self", ")", "#NEWLINE#", "a", "b", "=", "]", "#NEWLINE#", "self", "self", ".", "simple", ".", "Encode", "(", "b", ")", ",", "self", ".", "simple", "b", ")", ")"]}}
{"position": {"error_location": 15, "repair_targets": [3], "repair_candidates": [3, 0, 8, 9, 18, 4, 15, 21]}}
{"prediction": {"error_location": 0.8209919333457947, "repair_targets": [0.9573527574539185], "repair_candidates": [0.005764637608081102, 0.9573527574539185, 0.03663433715701103, 0.00015578909369651228, 1.7922589904628694e-05, 5.683462404704187e-06, 5.2525072533171624e-05, 1.6355770640075207e-05], "target_probs": 0.9573527574539185}}


{"result": {"time": "2021-02-11 10:46:22.933741", "n_pass": [129, 20, 15], "n_token": 23, "loss": [0.6621257662773132, 0.014873236417770386], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["self", ")", "a", "b", "=", "]", "#NEWLINE#", "self", "self", ".", "simple", ".", "Encode", "(", "b", ")", ",", "self", ".", "simple", "b", ")", ")"]}}
{"position": {"error_location": 14, "repair_targets": [2], "repair_candidates": [2, 0, 7, 8, 17, 3, 14, 20]}}
{"prediction": {"error_location": 0.5157538056373596, "repair_targets": [0.9852368235588074], "repair_candidates": [0.007112227845937014, 0.9852368235588074, 0.007152614649385214, 0.0002469069149810821, 2.348808448005002e-05, 2.3728674932499416e-05, 0.00016733598022256047, 3.678914436022751e-05], "target_probs": 0.9852368235588074}}


{"result": {"time": "2021-02-11 10:46:23.053512", "n_pass": [132, 22, 16], "n_token": 22, "loss": [0.2725672125816345, 0.02445947751402855], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["self", ")", "a", "b", "=", "#NEWLINE#", "self", "self", ".", "simple", ".", "Encode", "(", "b", ")", ",", "self", ".", "simple", "b", ")", ")"]}}
{"position": {"error_location": 13, "repair_targets": [2], "repair_candidates": [2, 0, 6, 7, 16, 3, 13, 19]}}
{"prediction": {"error_location": 0.7614221572875977, "repair_targets": [0.975837230682373], "repair_candidates": [0.014105518348515034, 0.975837230682373, 0.009607644751667976, 0.00021477027621585876, 2.5032330086105503e-05, 2.7495703761815093e-05, 0.00012774948845617473, 5.4663334594806656e-05], "target_probs": 0.975837230682373}}


{"result": {"time": "2021-02-11 10:46:23.112825", "n_pass": [133, 23, 17], "n_token": 21, "loss": [0.058977335691452026, 0.0942777693271637], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["self", ")", "a", "b", "=", "self", "self", ".", "simple", ".", "Encode", "(", "b", ")", ",", "self", ".", "simple", "b", ")", ")"]}}
{"position": {"error_location": 12, "repair_targets": [2], "repair_candidates": [2, 0, 5, 6, 15, 3, 12, 18]}}
{"prediction": {"error_location": 0.9427282214164734, "repair_targets": [0.910029947757721], "repair_candidates": [0.07084012031555176, 0.910029947757721, 0.015962818637490273, 0.00227440451271832, 0.00011182547314092517, 8.614814578322694e-05, 0.00033727186382748187, 0.0003575338050723076], "target_probs": 0.910029947757721}}


{"result": {"time": "2021-02-11 10:46:23.173404", "n_pass": [136, 24, 18], "n_token": 20, "loss": [0.14167024195194244, 0.10804974287748337], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["self", ")", "a", "b", "=", "self", "self", "simple", ".", "Encode", "(", "b", ")", ",", "self", ".", "simple", "b", ")", ")"]}}
{"position": {"error_location": 11, "repair_targets": [2], "repair_candidates": [2, 0, 5, 6, 14, 3, 11, 17]}}
{"prediction": {"error_location": 0.8679074645042419, "repair_targets": [0.8975829482078552], "repair_candidates": [0.01988634280860424, 0.8975829482078552, 0.08153001219034195, 0.00045054449583403766, 0.00028536986792460084, 1.837438867369201e-05, 0.00016895885346457362, 7.74854706833139e-05], "target_probs": 0.8975829482078552}}


{"result": {"time": "2021-02-11 10:46:23.232082", "n_pass": [137, 25, 19], "n_token": 19, "loss": [0.017213119193911552, 0.06665683537721634], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["self", ")", "a", "b", "=", "self", "self", ".", "Encode", "(", "b", ")", ",", "self", ".", "simple", "b", ")", ")"]}}
{"position": {"error_location": 10, "repair_targets": [2], "repair_candidates": [2, 0, 5, 6, 13, 3, 10, 16]}}
{"prediction": {"error_location": 0.9829341769218445, "repair_targets": [0.9355161786079407], "repair_candidates": [0.047971099615097046, 0.9355161786079407, 0.015240614302456379, 0.0007990096928551793, 5.163129753782414e-05, 2.2809175789006986e-05, 0.00022089404228609055, 0.0001777501602191478], "target_probs": 0.9355161786079407}}


{"result": {"time": "2021-02-11 10:46:23.288991", "n_pass": [138, 26, 20], "n_token": 17, "loss": [0.27167636156082153, 0.1938260942697525], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["self", ")", "a", "b", "=", "self", "self", "(", "b", ")", ",", "self", ".", "simple", "b", ")", ")"]}}
{"position": {"error_location": 8, "repair_targets": [2], "repair_candidates": [2, 0, 5, 6, 11, 3, 8, 14]}}
{"prediction": {"error_location": 0.762100875377655, "repair_targets": [0.8238011598587036], "repair_candidates": [0.14290490746498108, 0.8238011598587036, 0.028962885960936546, 0.000387586624128744, 0.001013264642097056, 4.3110503611387685e-05, 0.0020343270152807236, 0.0008527641766704619], "target_probs": 0.8238011598587036}}


{"result": {"time": "2021-02-11 10:46:23.401767", "n_pass": [143, 28, 21], "n_token": 15, "loss": [0.1785735934972763, 0.16314010322093964], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["self", ")", "a", "b", "=", "self", "self", "(", "b", ")", ",", "self", ".", "simple", "b"]}}
{"position": {"error_location": 8, "repair_targets": [2], "repair_candidates": [2, 0, 5, 6, 11, 3, 8, 14]}}
{"prediction": {"error_location": 0.8364624977111816, "repair_targets": [0.849472165107727], "repair_candidates": [0.11684633791446686, 0.849472165107727, 0.027146250009536743, 0.0003200648643542081, 0.0005444112466648221, 4.343000546214171e-05, 0.00519011402502656, 0.00043727975571528077], "target_probs": 0.849472165107727}}


{"result": {"time": "2021-02-11 10:46:23.682083", "n_pass": [165, 33, 22], "n_token": 14, "loss": [0.32130417227745056, 0.2561285197734833], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["self", ")", "a", "b", "=", "self", "self", "(", "b", ",", "self", ".", "simple", "b"]}}
{"position": {"error_location": 8, "repair_targets": [2], "repair_candidates": [2, 0, 5, 6, 10, 3, 8, 13]}}
{"prediction": {"error_location": 0.7252026796340942, "repair_targets": [0.7740424871444702], "repair_candidates": [0.20422542095184326, 0.7740424871444702, 0.01623586378991604, 0.0006969717214815319, 0.0014545060694217682, 6.382723950082436e-05, 0.0026815219316631556, 0.0005994072998873889], "target_probs": 0.7740424871444702}}




Minimal simplified tokens:

['self', ')', 'a', 'b', '=', 'self', 'self', '(', 'b', ',', 'self', '.', 'simple', 'b']
