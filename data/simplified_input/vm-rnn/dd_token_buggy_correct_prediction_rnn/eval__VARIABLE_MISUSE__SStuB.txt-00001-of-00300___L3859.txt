
Original sample:

{"has_bug": true, "bug_kind": 1, "bug_kind_name": "VARIABLE_MISUSE", "source_tokens": ["#NEWLINE#", "def changeTabText(", "self", ",", "tabIdx", ",", "newTabText", ")", ":", "#NEWLINE#", "#INDENT#", "' changeTabText(tabIdx: int, newTabText: str) -> None\\n        Update window title on the operating widget when the tab text\\n        has changed\\n\\n        '", "#NEWLINE#", "self", ".", "operatingWidget", ".", "widget", "(", "tabIdx", ")", ".", "setWindowTitle", "(", "tabIdx", ")"], "error_location": [24], "repair_targets": [6], "repair_candidates": [6, 2, 13, 4, 19, 24], "provenances": [{"datasetProvenance": {"datasetName": "ETHPy150Open", "filepath": "VisTrails/VisTrails/vistrails/packages/spreadsheet/spreadsheet_tabcontroller.py", "license": "bsd-3-clause", "note": "license: bigquery_api"}}], "txt_file": "eval__VARIABLE_MISUSE__SStuB.txt-00001-of-00300", "js_count": 3859, "results": {"model": "rnn", "prob": {"loc": [[0.3649214804172516, 2.2493851759008976e-07, 9.220447054758552e-07, 1.6697457638770175e-08, 2.22646789893588e-07, 3.1951097323457134e-09, 1.926683762576431e-05, 2.5590145469323033e-07, 2.5172849404953013e-07, 1.629662983759772e-05, 2.300858795933891e-06, 5.4140333105578975e-08, 2.60351725955843e-06, 2.6124560008611297e-06, 4.385678042950758e-09, 1.0265174665846644e-07, 1.717842110338097e-06, 2.626595687615918e-06, 2.862694827854284e-06, 0.007664736360311508, 4.1865160937959445e-07, 5.297041752783116e-06, 2.0349709757283563e-06, 4.865810296905693e-06, 0.6273047924041748, 4.41102274635341e-05]], "pointer": [[0.0, 0.0, 0.3976665139198303, 0.0, 0.0011837012134492397, 0.0, 0.6010745763778687, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 6.298257358139381e-05, 0.0, 0.0, 0.0, 0.0, 0.0, 1.5563781516902964e-06, 0.0, 0.0, 0.0, 0.0, 1.0596025276754517e-05, 0.0]], "target": [0.6010745763778687]}, "loss": [0.4663229286670685, 0.5090363025665283], "acc": [0.0, 1.0, 1.0, 1.0]}}


Trace of simplified code(s):

{"result": {"time": "2021-02-11 10:47:38.537077", "n_pass": [1, 1, 1], "n_token": 26, "loss": [0.4663229286670685, 0.5090363025665283], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def changeTabText(", "self", ",", "tabIdx", ",", "newTabText", ")", ":", "#NEWLINE#", "#INDENT#", "' changeTabText(tabIdx: int, newTabText: str) -> None\\n        Update window title on the operating widget when the tab text\\n        has changed\\n\\n        '", "#NEWLINE#", "self", ".", "operatingWidget", ".", "widget", "(", "tabIdx", ")", ".", "setWindowTitle", "(", "tabIdx", ")"]}}
{"position": {"error_location": 24, "repair_targets": [6], "repair_candidates": [6, 2, 13, 4, 19, 24]}}
{"prediction": {"error_location": 0.6273047924041748, "repair_targets": [0.6010745763778687], "repair_candidates": [0.3976665139198303, 0.0011837012134492397, 0.6010745763778687, 6.298257358139381e-05, 1.5563781516902964e-06, 1.0596025276754517e-05], "target_probs": 0.6010745763778687}}


{"result": {"time": "2021-02-11 10:47:38.600278", "n_pass": [23, 2, 2], "n_token": 23, "loss": [0.3031448423862457, 0.07199076563119888], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def changeTabText(", "self", ",", "tabIdx", ",", "newTabText", ")", ":", "#NEWLINE#", "self", ".", "operatingWidget", ".", "widget", "(", "tabIdx", ")", ".", "setWindowTitle", "(", "tabIdx", ")"]}}
{"position": {"error_location": 21, "repair_targets": [6], "repair_candidates": [6, 2, 10, 4, 16, 21]}}
{"prediction": {"error_location": 0.7384921312332153, "repair_targets": [0.9305394887924194], "repair_candidates": [0.06799975782632828, 0.0013738854322582483, 0.9305394887924194, 7.184646528912708e-05, 8.201043783628847e-06, 6.783334356441628e-06], "target_probs": 0.9305394887924194}}


{"result": {"time": "2021-02-11 10:47:38.658149", "n_pass": [25, 3, 3], "n_token": 20, "loss": [0.5032711029052734, 0.004835236351937056], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def changeTabText(", "self", ",", "tabIdx", ",", "newTabText", ")", ":", "#NEWLINE#", "self", ".", "(", "tabIdx", ")", ".", "setWindowTitle", "(", "tabIdx", ")"]}}
{"position": {"error_location": 18, "repair_targets": [6], "repair_candidates": [6, 2, 10, 4, 13, 18]}}
{"prediction": {"error_location": 0.6045498251914978, "repair_targets": [0.9951764345169067], "repair_candidates": [0.004189139697700739, 0.0005866360734216869, 0.9951764345169067, 4.294741302146576e-06, 4.170853935647756e-05, 1.8287535112904152e-06], "target_probs": 0.9951764345169067}}


{"result": {"time": "2021-02-11 10:47:39.290786", "n_pass": [78, 14, 4], "n_token": 19, "loss": [0.561179518699646, 0.003606257727369666], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def changeTabText(", "self", ",", "tabIdx", ",", "newTabText", ")", ":", "#NEWLINE#", "self", ".", "(", "tabIdx", ")", ".", "setWindowTitle", "(", "tabIdx"]}}
{"position": {"error_location": 18, "repair_targets": [6], "repair_candidates": [6, 2, 10, 4, 13, 18]}}
{"prediction": {"error_location": 0.5705357193946838, "repair_targets": [0.9964002370834351], "repair_candidates": [0.002147262915968895, 0.0013801833847537637, 0.9964002370834351, 1.0836794899660163e-05, 5.8549147070152685e-05, 2.8267365905776387e-06], "target_probs": 0.9964002370834351}}


{"result": {"time": "2021-02-11 10:47:39.863733", "n_pass": [93, 24, 5], "n_token": 18, "loss": [0.6831725835800171, 0.003849814413115382], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def changeTabText(", "self", ",", "tabIdx", ",", "newTabText", ")", ":", "#NEWLINE#", "self", ".", "(", "tabIdx", ".", "setWindowTitle", "(", "tabIdx"]}}
{"position": {"error_location": 17, "repair_targets": [6], "repair_candidates": [6, 2, 10, 4, 13, 17]}}
{"prediction": {"error_location": 0.5050122737884521, "repair_targets": [0.9961575865745544], "repair_candidates": [0.002587395254522562, 0.0012169423280283809, 0.9961575865745544, 9.935373782354873e-06, 2.5844652554951608e-05, 2.3164200229075504e-06], "target_probs": 0.9961575865745544}}




Minimal simplified tokens:

['#NEWLINE#', 'def changeTabText(', 'self', ',', 'tabIdx', ',', 'newTabText', ')', ':', '#NEWLINE#', 'self', '.', '(', 'tabIdx', '.', 'setWindowTitle', '(', 'tabIdx']
