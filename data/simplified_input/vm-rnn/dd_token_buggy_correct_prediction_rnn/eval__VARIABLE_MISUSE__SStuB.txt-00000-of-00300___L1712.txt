
Original sample:

{"has_bug": true, "bug_kind": 1, "bug_kind_name": "VARIABLE_MISUSE", "source_tokens": ["#NEWLINE#", "@", "retry", "(", ")", "#NEWLINE#", "def exists(", "self", ")", ":", "#NEWLINE#", "#INDENT#", "'Check if network exists\\n\\n        :type network_uuid: str\\n            :rtype : Boolean\\n        '", "#NEWLINE#", "try", ":", "#NEWLINE#", "#INDENT#", "self", ".", "driver", ".", "conn", ".", "networkLookupByUUIDString", "(", "e", ".", "uuid", ")", "#NEWLINE#", "return", "True", "#NEWLINE#", "#UNINDENT#", "except", "libvirt", ".", "libvirtError", "as", "e", ":", "#NEWLINE#", "#INDENT#", "if", "(", "e", ".", "get_error_code", "(", ")", "==", "libvirt", ".", "VIR_ERR_NO_NETWORK", ")", ":", "#NEWLINE#", "#INDENT#", "return", "False", "#NEWLINE#", "#UNINDENT#", "else", ":", "#NEWLINE#", "#INDENT#", "raise"], "error_location": [26], "repair_targets": [7, 18], "repair_candidates": [26, 40, 46, 7, 18], "provenances": [{"datasetProvenance": {"datasetName": "ETHPy150Open", "filepath": "openstack/fuel-devops/devops/driver/libvirt/libvirt_driver.py", "license": "apache-2.0", "note": "license: bigquery_api"}}], "txt_file": "eval__VARIABLE_MISUSE__SStuB.txt-00000-of-00300", "js_count": 1712, "results": {"model": "rnn", "prob": {"loc": [[0.000276538310572505, 3.904780943031483e-09, 2.6198299085677945e-10, 5.2122386268171894e-11, 1.6035351865784087e-11, 1.6613060926928824e-10, 4.24040446853069e-12, 6.947915576205332e-10, 9.093496897323583e-13, 3.490377474893447e-12, 2.4703533663128496e-10, 4.722034430137967e-10, 6.855633422064855e-11, 1.0237025671600009e-09, 3.295362871469365e-09, 5.768798216898574e-10, 3.736543519039515e-09, 9.129483835579322e-10, 6.935261254170655e-09, 2.2407086602838078e-11, 5.101881694891119e-10, 1.1171817915212046e-09, 1.5320242852112642e-09, 9.970138048487343e-10, 9.505957798694453e-09, 1.5597517721843701e-09, 0.9997223019599915, 2.4551238198000647e-07, 1.5051916379960062e-09, 4.760840610629202e-10, 2.6289351251485016e-10, 1.8096127929467798e-09, 2.286388323113897e-08, 1.5203106551453516e-09, 6.184288192656595e-09, 5.580095052692968e-09, 7.665435077797156e-07, 5.609766817737949e-11, 2.6400148733785045e-10, 1.2644929547889205e-08, 7.336585783335181e-10, 1.6749787112857462e-09, 5.25304377774205e-09, 1.3300257561965623e-09, 3.2775776537263823e-10, 3.463027087313719e-10, 6.94061128569956e-08, 3.093851841384776e-10, 4.594488678399955e-11, 2.734170945206671e-10, 1.7557386655653318e-08, 2.624696571196239e-10, 1.7919184358561324e-08, 1.240154784420966e-10, 7.579377230004791e-12, 7.638859544911725e-10, 3.181800656282263e-10, 7.962239201297905e-10, 1.8956279254633834e-11, 4.1466380329424624e-10, 9.411310619711344e-10, 5.316919682307741e-10, 5.442168493630106e-09, 6.444325628685021e-11, 1.3596664905080047e-09, 1.0272526163035423e-09, 4.1383712429121644e-11, 7.940419877172644e-09]], "pointer": [[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.9997075200080872, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.00017809087876230478, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 4.993019501853269e-06, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 9.553158452035859e-05, 0.0, 0.0, 0.0, 0.0, 0.0, 1.3911783753428608e-05, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]], "target": [0.999885618686676]}, "loss": [0.00027771908207796514, 0.00011438785440986976], "acc": [0.0, 1.0, 1.0, 1.0]}}


Trace of simplified code(s):

{"result": {"time": "2021-02-11 10:04:41.995260", "n_pass": [1, 1, 1], "n_token": 68, "loss": [0.00027771908207796514, 0.00011438785440986976], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "@", "retry", "(", ")", "#NEWLINE#", "def exists(", "self", ")", ":", "#NEWLINE#", "#INDENT#", "'Check if network exists\\n\\n        :type network_uuid: str\\n            :rtype : Boolean\\n        '", "#NEWLINE#", "try", ":", "#NEWLINE#", "#INDENT#", "self", ".", "driver", ".", "conn", ".", "networkLookupByUUIDString", "(", "e", ".", "uuid", ")", "#NEWLINE#", "return", "True", "#NEWLINE#", "#UNINDENT#", "except", "libvirt", ".", "libvirtError", "as", "e", ":", "#NEWLINE#", "#INDENT#", "if", "(", "e", ".", "get_error_code", "(", ")", "==", "libvirt", ".", "VIR_ERR_NO_NETWORK", ")", ":", "#NEWLINE#", "#INDENT#", "return", "False", "#NEWLINE#", "#UNINDENT#", "else", ":", "#NEWLINE#", "#INDENT#", "raise"]}}
{"position": {"error_location": 26, "repair_targets": [7, 18], "repair_candidates": [26, 40, 46, 7, 18]}}
{"prediction": {"error_location": 0.9997223019599915, "repair_targets": [0.9997075200080872, 0.00017809087876230478], "repair_candidates": [0.9997075200080872, 0.00017809087876230478, 4.993019501853269e-06, 9.553158452035859e-05, 1.3911783753428608e-05], "target_probs": 0.999885618686676}}


{"result": {"time": "2021-02-11 10:04:42.070448", "n_pass": [11, 2, 2], "n_token": 51, "loss": [0.0007099968497641385, 0.00010973817552439868], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "@", "retry", "(", ")", "#NEWLINE#", "def exists(", "self", ")", ":", "#NEWLINE#", "#INDENT#", "'Check if network exists\\n\\n        :type network_uuid: str\\n            :rtype : Boolean\\n        '", "#NEWLINE#", "try", ":", "#NEWLINE#", "#INDENT#", "self", ".", "driver", ".", "conn", ".", "networkLookupByUUIDString", "(", "e", ".", "uuid", ")", "#NEWLINE#", "return", "True", "#NEWLINE#", "#UNINDENT#", "except", "libvirt", ".", "libvirtError", "as", "e", ":", "#NEWLINE#", "#INDENT#", "if", "(", "e", ".", "get_error_code", "(", ")"]}}
{"position": {"error_location": 26, "repair_targets": [7, 18], "repair_candidates": [26, 40, 46, 7, 18]}}
{"prediction": {"error_location": 0.9992899894714355, "repair_targets": [0.9997617602348328, 0.00012849332415498793], "repair_candidates": [0.9997617602348328, 0.00012849332415498793, 3.499778813420562e-06, 9.901572775561363e-05, 7.146673851821106e-06], "target_probs": 0.9998902678489685}}


{"result": {"time": "2021-02-11 10:04:42.141408", "n_pass": [21, 3, 3], "n_token": 43, "loss": [0.14592096209526062, 0.0005737997125834227], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "@", "retry", "(", ")", "#NEWLINE#", "def exists(", "self", "#NEWLINE#", "#INDENT#", "self", ".", "driver", ".", "conn", ".", "networkLookupByUUIDString", "(", "e", ".", "uuid", ")", "#NEWLINE#", "return", "True", "#NEWLINE#", "#UNINDENT#", "except", "libvirt", ".", "libvirtError", "as", "e", ":", "#NEWLINE#", "#INDENT#", "if", "(", "e", ".", "get_error_code", "(", ")"]}}
{"position": {"error_location": 18, "repair_targets": [7, 10], "repair_candidates": [18, 32, 38, 7, 10]}}
{"prediction": {"error_location": 0.8642259836196899, "repair_targets": [0.9993472695350647, 7.910162094049156e-05], "repair_candidates": [0.9993472695350647, 7.910162094049156e-05, 8.466091094305739e-05, 0.0004636901430785656, 2.5291848942288198e-05], "target_probs": 0.9994263648986816}}


{"result": {"time": "2021-02-11 10:04:42.348393", "n_pass": [41, 6, 4], "n_token": 39, "loss": [0.1288890838623047, 0.00026128129684366286], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "@", "retry", "(", ")", "#NEWLINE#", "def exists(", "self", "#NEWLINE#", "#INDENT#", "self", ".", "driver", ".", "conn", ".", "networkLookupByUUIDString", "(", "e", ".", "uuid", ")", "#NEWLINE#", "return", "libvirt", ".", "libvirtError", "as", "e", ":", "#NEWLINE#", "#INDENT#", "if", "(", "e", ".", "get_error_code", "(", ")"]}}
{"position": {"error_location": 18, "repair_targets": [7, 10], "repair_candidates": [18, 28, 34, 7, 10]}}
{"prediction": {"error_location": 0.8790713548660278, "repair_targets": [0.9996576309204102, 8.112151408568025e-05], "repair_candidates": [0.9996576309204102, 8.112151408568025e-05, 7.709093188168481e-05, 0.00016521633369848132, 1.8912080122390762e-05], "target_probs": 0.9997387528419495}}


{"result": {"time": "2021-02-11 10:04:42.414079", "n_pass": [43, 7, 5], "n_token": 34, "loss": [0.35016930103302, 0.00017942607519216835], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "@", "retry", "(", ")", "#NEWLINE#", "def exists(", "self", "#NEWLINE#", "#INDENT#", "self", ".", "driver", ".", "conn", ".", "networkLookupByUUIDString", "(", "e", ".", "uuid", ")", "#NEWLINE#", "return", "libvirt", ".", "libvirtError", "as", "e", "e", ".", "get_error_code", "(", ")"]}}
{"position": {"error_location": 18, "repair_targets": [7, 10], "repair_candidates": [18, 28, 29, 7, 10]}}
{"prediction": {"error_location": 0.7045688033103943, "repair_targets": [0.9997351765632629, 8.541764691472054e-05], "repair_candidates": [0.9997351765632629, 8.541764691472054e-05, 7.12792607373558e-05, 7.923064549686387e-05, 2.8836444471380673e-05], "target_probs": 0.9998205900192261}}


{"result": {"time": "2021-02-11 10:04:42.477491", "n_pass": [45, 8, 6], "n_token": 30, "loss": [0.0343654565513134, 9.692185267340392e-05], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": [")", "#NEWLINE#", "def exists(", "self", "#NEWLINE#", "#INDENT#", "self", ".", "driver", ".", "conn", ".", "networkLookupByUUIDString", "(", "e", ".", "uuid", ")", "#NEWLINE#", "return", "libvirt", ".", "libvirtError", "as", "e", "e", ".", "get_error_code", "(", ")"]}}
{"position": {"error_location": 14, "repair_targets": [3, 6], "repair_candidates": [14, 24, 25, 3, 6]}}
{"prediction": {"error_location": 0.966218113899231, "repair_targets": [0.9998494386672974, 5.363579839468002e-05], "repair_candidates": [0.9998494386672974, 5.363579839468002e-05, 4.506691038841382e-05, 3.724349880940281e-05, 1.466153480578214e-05], "target_probs": 0.9999030828475952}}


{"result": {"time": "2021-02-11 10:04:42.538879", "n_pass": [48, 9, 7], "n_token": 26, "loss": [0.29216697812080383, 0.00011242067557759583], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": [")", "#NEWLINE#", "def exists(", "self", "#NEWLINE#", "#INDENT#", "self", ".", "networkLookupByUUIDString", "(", "e", ".", "uuid", ")", "#NEWLINE#", "return", "libvirt", ".", "libvirtError", "as", "e", "e", ".", "get_error_code", "(", ")"]}}
{"position": {"error_location": 10, "repair_targets": [3, 6], "repair_candidates": [10, 20, 21, 3, 6]}}
{"prediction": {"error_location": 0.7466438412666321, "repair_targets": [0.9998687505722046, 1.8811966583598405e-05], "repair_candidates": [0.9998687505722046, 1.8811966583598405e-05, 2.8018042939947918e-05, 6.294970080489293e-05, 2.1482055672095157e-05], "target_probs": 0.9998875856399536}}


{"result": {"time": "2021-02-11 10:04:42.598669", "n_pass": [50, 10, 8], "n_token": 22, "loss": [0.15922647714614868, 7.581998215755448e-05], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": [")", "#NEWLINE#", "def exists(", "self", "#NEWLINE#", "#INDENT#", "self", ".", "networkLookupByUUIDString", "(", "e", ".", "libvirt", ".", "libvirtError", "as", "e", "e", ".", "get_error_code", "(", ")"]}}
{"position": {"error_location": 10, "repair_targets": [3, 6], "repair_candidates": [10, 16, 17, 3, 6]}}
{"prediction": {"error_location": 0.8528032898902893, "repair_targets": [0.9999005794525146, 2.359345307922922e-05], "repair_candidates": [0.9999005794525146, 2.359345307922922e-05, 3.094411295023747e-05, 3.077959263464436e-05, 1.4054369785299059e-05], "target_probs": 0.9999241828918457}}


{"result": {"time": "2021-02-11 10:04:42.657215", "n_pass": [66, 11, 9], "n_token": 20, "loss": [0.4817134439945221, 0.0006260446971282363], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": [")", "#NEWLINE#", "def exists(", "self", "#NEWLINE#", "#INDENT#", "self", ".", "networkLookupByUUIDString", "(", "e", ".", "libvirtError", "as", "e", "e", ".", "get_error_code", "(", ")"]}}
{"position": {"error_location": 10, "repair_targets": [3, 6], "repair_candidates": [10, 14, 15, 3, 6]}}
{"prediction": {"error_location": 0.6177240014076233, "repair_targets": [0.99928879737854, 8.534604421583936e-05], "repair_candidates": [0.99928879737854, 8.534604421583936e-05, 0.0003025973855983466, 0.0002833215403370559, 4.000627086497843e-05], "target_probs": 0.9993741512298584}}


{"result": {"time": "2021-02-11 10:04:42.717043", "n_pass": [67, 12, 10], "n_token": 18, "loss": [0.6599105000495911, 0.0007034033187665045], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": [")", "#NEWLINE#", "def exists(", "self", "#NEWLINE#", "#INDENT#", "self", ".", "networkLookupByUUIDString", "(", "e", ".", "e", "e", ".", "get_error_code", "(", ")"]}}
{"position": {"error_location": 10, "repair_targets": [3, 6], "repair_candidates": [10, 12, 13, 3, 6]}}
{"prediction": {"error_location": 0.5168974995613098, "repair_targets": [0.9992008805274963, 9.593763388693333e-05], "repair_candidates": [0.9992008805274963, 9.593763388693333e-05, 1.2579418580571655e-05, 0.0006637523183599114, 2.694634167710319e-05], "target_probs": 0.9992968440055847}}


{"result": {"time": "2021-02-11 10:04:42.772888", "n_pass": [69, 13, 11], "n_token": 15, "loss": [0.06522509455680847, 0.0006870006327517331], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": [")", "#NEWLINE#", "def exists(", "self", "#NEWLINE#", "#INDENT#", "self", ".", "networkLookupByUUIDString", "(", "e", ".", "e", "e", "."]}}
{"position": {"error_location": 10, "repair_targets": [3, 6], "repair_candidates": [10, 12, 13, 3, 6]}}
{"prediction": {"error_location": 0.9368564486503601, "repair_targets": [0.999259889125824, 5.334541492629796e-05], "repair_candidates": [0.999259889125824, 5.334541492629796e-05, 5.7676484175317455e-06, 0.0006763300043530762, 4.679889116232516e-06], "target_probs": 0.999313235282898}}


{"result": {"time": "2021-02-11 10:04:42.827856", "n_pass": [70, 14, 12], "n_token": 13, "loss": [0.1117849051952362, 0.004102827049791813], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["def exists(", "self", "#NEWLINE#", "#INDENT#", "self", ".", "networkLookupByUUIDString", "(", "e", ".", "e", "e", "."]}}
{"position": {"error_location": 8, "repair_targets": [1, 4], "repair_candidates": [8, 10, 11, 1, 4]}}
{"prediction": {"error_location": 0.8942365646362305, "repair_targets": [0.9940551519393921, 0.0018504115287214518], "repair_candidates": [0.9940551519393921, 0.0018504115287214518, 2.55483446380822e-05, 0.004031532909721136, 3.738347368198447e-05], "target_probs": 0.9959055781364441}}


{"result": {"time": "2021-02-11 10:04:43.100334", "n_pass": [92, 19, 13], "n_token": 12, "loss": [0.1533597707748413, 0.0023915732745081186], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["def exists(", "self", "#NEWLINE#", "self", ".", "networkLookupByUUIDString", "(", "e", ".", "e", "e", "."]}}
{"position": {"error_location": 7, "repair_targets": [1, 3], "repair_candidates": [7, 9, 10, 1, 3]}}
{"prediction": {"error_location": 0.857820987701416, "repair_targets": [0.9837340116500854, 0.013877292163670063], "repair_candidates": [0.9837340116500854, 0.013877292163670063, 1.2741216778522357e-05, 0.0023517501540482044, 2.41468042077031e-05], "target_probs": 0.9976112842559814}}


{"result": {"time": "2021-02-11 10:04:43.154264", "n_pass": [94, 20, 14], "n_token": 11, "loss": [0.15759530663490295, 0.0033299874048680067], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["def exists(", "self", "#NEWLINE#", "self", "networkLookupByUUIDString", "(", "e", ".", "e", "e", "."]}}
{"position": {"error_location": 6, "repair_targets": [1, 3], "repair_candidates": [6, 8, 9, 1, 3]}}
{"prediction": {"error_location": 0.8541954159736633, "repair_targets": [0.9832133054733276, 0.013462258502840996], "repair_candidates": [0.9832133054733276, 0.013462258502840996, 2.597341881482862e-05, 0.003253856673836708, 4.4553093175636604e-05], "target_probs": 0.9966755509376526}}


{"result": {"time": "2021-02-11 10:04:43.369632", "n_pass": [101, 24, 15], "n_token": 10, "loss": [0.6116998791694641, 0.12009003758430481], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["self", "#NEWLINE#", "self", "networkLookupByUUIDString", "(", "e", ".", "e", "e", "."]}}
{"position": {"error_location": 5, "repair_targets": [0, 2], "repair_candidates": [5, 7, 8, 0, 2]}}
{"prediction": {"error_location": 0.5424280762672424, "repair_targets": [0.8202093839645386, 0.06663121283054352], "repair_candidates": [0.8202093839645386, 0.06663121283054352, 0.0003735584032256156, 0.10941189527511597, 0.0033738925121724606], "target_probs": 0.8868405818939209}}


{"result": {"time": "2021-02-11 10:04:43.422701", "n_pass": [103, 25, 16], "n_token": 9, "loss": [0.45331889390945435, 0.09175092726945877], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["self", "self", "networkLookupByUUIDString", "(", "e", ".", "e", "e", "."]}}
{"position": {"error_location": 4, "repair_targets": [0, 1], "repair_candidates": [4, 6, 7, 0, 1]}}
{"prediction": {"error_location": 0.6355153322219849, "repair_targets": [0.7520084381103516, 0.16032393276691437], "repair_candidates": [0.7520084381103516, 0.16032393276691437, 0.00025480991462245584, 0.0857032835483551, 0.001709526521153748], "target_probs": 0.9123323559761047}}


{"result": {"time": "2021-02-11 10:04:43.631549", "n_pass": [115, 29, 17], "n_token": 8, "loss": [0.16418392956256866, 0.11311502754688263], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["self", "self", "networkLookupByUUIDString", "(", "e", ".", "e", "e"]}}
{"position": {"error_location": 4, "repair_targets": [0, 1], "repair_candidates": [4, 6, 7, 0, 1]}}
{"prediction": {"error_location": 0.8485860228538513, "repair_targets": [0.7517074346542358, 0.1413404941558838], "repair_candidates": [0.7517074346542358, 0.1413404941558838, 0.00010618946544127539, 0.10637719184160233, 0.00046862949966453016], "target_probs": 0.8930479288101196}}




Minimal simplified tokens:

['self', 'self', 'networkLookupByUUIDString', '(', 'e', '.', 'e', 'e']
