
Original sample:

{"has_bug": true, "bug_kind": 1, "bug_kind_name": "VARIABLE_MISUSE", "source_tokens": ["#NEWLINE#", "def test_absolute_path(", "self", ")", ":", "#NEWLINE#", "#INDENT#", "\"\\n        Regression test for ticket #6436 --\\n        os.path.join will throw away the initial parts of a path if it\\n        encounters an absolute path.\\n        This means that if a fixture is specified as an absolute path,\\n        we need to make sure we don't discover the absolute path in every\\n        fixture directory.\\n        \"", "#NEWLINE#", "load_absolute_path", "=", "os", ".", "path", ".", "join", "(", "os", ".", "path", ".", "dirname", "(", "__file__", ")", ",", "'fixtures'", ",", "'absolute.json'", ")", "#NEWLINE#", "management", ".", "call_command", "(", "'loaddata'", ",", "self", ",", "verbosity", "=", "0", ",", "commit", "=", "False", ")", "#NEWLINE#", "self", ".", "assertEqual", "(", "Absolute", ".", "load_count", ",", "1", ")"], "error_location": [37], "repair_targets": [9], "repair_candidates": [9, 2, 37, 48], "provenances": [{"datasetProvenance": {"datasetName": "ETHPy150Open", "filepath": "AppScale/appscale/AppServer/lib/django-1.4/tests/regressiontests/fixtures_regress/tests.py", "license": "apache-2.0", "note": "license: github_api"}}], "txt_file": "eval__VARIABLE_MISUSE__SStuB.txt-00000-of-00300", "js_count": 1090, "results": {"model": "rnn", "prob": {"loc": [[4.390032245282782e-06, 2.930677575618823e-11, 1.44903370986188e-12, 1.870172006352474e-14, 1.3717931514843889e-14, 7.226904621612795e-13, 3.639652598405596e-13, 1.95403805983152e-13, 5.4153816847479774e-11, 1.4428979712433065e-11, 6.19874865413067e-13, 1.8217200317693916e-11, 2.814641694628278e-13, 1.2544999761221476e-13, 6.761136789323885e-13, 6.204829402015055e-13, 2.6700911447130604e-12, 1.0380962756073586e-10, 4.34789275980188e-13, 4.715525387700981e-13, 2.3272518894640326e-12, 4.582560459570617e-13, 3.1108466497231646e-12, 1.4625444189064751e-09, 3.4453426982043733e-13, 2.0331808881900865e-13, 3.590953229215543e-11, 3.8895690596292554e-13, 8.485494208329558e-13, 2.886427533620173e-13, 1.4864477704268353e-11, 1.0347825027401392e-11, 6.881932090169185e-12, 8.415964106167628e-12, 2.6217160387087546e-11, 7.719566497144115e-08, 7.619024522398377e-09, 0.9999752044677734, 1.7795677194953896e-05, 4.199975478513807e-09, 2.673038734801736e-10, 1.636830688767077e-07, 4.077619752268502e-12, 8.652770167039137e-10, 1.546675634789274e-11, 7.122775702583795e-10, 3.8067396457286407e-11, 3.999943085086777e-11, 1.0027586400118693e-10, 1.1306781249123543e-12, 2.0132090439162198e-11, 1.5565786160021133e-10, 7.797340231263661e-07, 6.631164801290668e-12, 3.528229652882686e-10, 8.769396667163143e-12, 1.7455946590416715e-06, 3.749673488373517e-11]], "pointer": [[0.0, 0.0, 1.2700307649993192e-07, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.9999995231628418, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.730372503061517e-07, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 9.472685036371331e-08, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]], "target": [0.9999995231628418]}, "loss": [2.4914430468925275e-05, 4.768372718899627e-07], "acc": [0.0, 1.0, 1.0, 1.0]}}


Trace of simplified code(s):

{"result": {"time": "2021-02-11 09:52:38.936614", "n_pass": [1, 1, 1], "n_token": 58, "loss": [2.4914430468925275e-05, 4.768372718899627e-07], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def test_absolute_path(", "self", ")", ":", "#NEWLINE#", "#INDENT#", "\"\\n        Regression test for ticket #6436 --\\n        os.path.join will throw away the initial parts of a path if it\\n        encounters an absolute path.\\n        This means that if a fixture is specified as an absolute path,\\n        we need to make sure we don't discover the absolute path in every\\n        fixture directory.\\n        \"", "#NEWLINE#", "load_absolute_path", "=", "os", ".", "path", ".", "join", "(", "os", ".", "path", ".", "dirname", "(", "__file__", ")", ",", "'fixtures'", ",", "'absolute.json'", ")", "#NEWLINE#", "management", ".", "call_command", "(", "'loaddata'", ",", "self", ",", "verbosity", "=", "0", ",", "commit", "=", "False", ")", "#NEWLINE#", "self", ".", "assertEqual", "(", "Absolute", ".", "load_count", ",", "1", ")"]}}
{"position": {"error_location": 37, "repair_targets": [9], "repair_candidates": [9, 2, 37, 48]}}
{"prediction": {"error_location": 0.9999752044677734, "repair_targets": [0.9999995231628418], "repair_candidates": [1.2700307649993192e-07, 0.9999995231628418, 1.730372503061517e-07, 9.472685036371331e-08], "target_probs": 0.9999995231628418}}


{"result": {"time": "2021-02-11 09:52:39.007441", "n_pass": [9, 2, 2], "n_token": 44, "loss": [8.761498611420393e-05, 8.344653679159819e-07], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def test_absolute_path(", "self", ")", ":", "#NEWLINE#", "#INDENT#", "\"\\n        Regression test for ticket #6436 --\\n        os.path.join will throw away the initial parts of a path if it\\n        encounters an absolute path.\\n        This means that if a fixture is specified as an absolute path,\\n        we need to make sure we don't discover the absolute path in every\\n        fixture directory.\\n        \"", "#NEWLINE#", "load_absolute_path", "=", "os", ".", "path", "'absolute.json'", ")", "#NEWLINE#", "management", ".", "call_command", "(", "'loaddata'", ",", "self", ",", "verbosity", "=", "0", ",", "commit", "=", "False", ")", "#NEWLINE#", "self", ".", "assertEqual", "(", "Absolute", ".", "load_count", ",", "1", ")"]}}
{"position": {"error_location": 23, "repair_targets": [9], "repair_candidates": [9, 2, 23, 34]}}
{"prediction": {"error_location": 0.9999123811721802, "repair_targets": [0.9999991655349731], "repair_candidates": [1.643981875076861e-07, 0.9999991655349731, 4.4039396129846864e-07, 1.6877220332389697e-07], "target_probs": 0.9999991655349731}}


{"result": {"time": "2021-02-11 09:52:39.075034", "n_pass": [19, 3, 3], "n_token": 37, "loss": [0.0019710890483111143, 0.00270786602050066], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def test_absolute_path(", "self", ")", ":", "#NEWLINE#", "#INDENT#", "\"\\n        Regression test for ticket #6436 --\\n        os.path.join will throw away the initial parts of a path if it\\n        encounters an absolute path.\\n        This means that if a fixture is specified as an absolute path,\\n        we need to make sure we don't discover the absolute path in every\\n        fixture directory.\\n        \"", "#NEWLINE#", "load_absolute_path", "=", "os", ".", "path", "'loaddata'", ",", "self", ",", "verbosity", "=", "0", ",", "commit", "=", "False", ")", "#NEWLINE#", "self", ".", "assertEqual", "(", "Absolute", ".", "load_count", ",", "1", ")"]}}
{"position": {"error_location": 16, "repair_targets": [9], "repair_candidates": [9, 2, 16, 27]}}
{"prediction": {"error_location": 0.9980308413505554, "repair_targets": [0.9972957968711853], "repair_candidates": [0.0014823187375441194, 0.9972957968711853, 0.0008520346600562334, 0.00036992505192756653], "target_probs": 0.9972957968711853}}


{"result": {"time": "2021-02-11 09:52:39.140624", "n_pass": [22, 4, 4], "n_token": 29, "loss": [0.0002498314715921879, 0.0014174488605931401], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def test_absolute_path(", "self", ")", ":", "#NEWLINE#", "#INDENT#", "\"\\n        Regression test for ticket #6436 --\\n        os.path.join will throw away the initial parts of a path if it\\n        encounters an absolute path.\\n        This means that if a fixture is specified as an absolute path,\\n        we need to make sure we don't discover the absolute path in every\\n        fixture directory.\\n        \"", "#NEWLINE#", "load_absolute_path", "=", "os", ".", "path", "'loaddata'", ",", "self", ",", "verbosity", "=", "0", ",", "commit", "=", "False", ")", "#NEWLINE#", "self", "."]}}
{"position": {"error_location": 16, "repair_targets": [9], "repair_candidates": [9, 2, 16, 27]}}
{"prediction": {"error_location": 0.9997500777244568, "repair_targets": [0.9985835552215576], "repair_candidates": [0.00041986259748227894, 0.9985835552215576, 0.0001318052236456424, 0.0008648260263726115], "target_probs": 0.9985835552215576}}


{"result": {"time": "2021-02-11 09:52:39.202513", "n_pass": [36, 5, 5], "n_token": 26, "loss": [7.760223525110632e-05, 0.0030184597708284855], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def test_absolute_path(", "self", "#INDENT#", "\"\\n        Regression test for ticket #6436 --\\n        os.path.join will throw away the initial parts of a path if it\\n        encounters an absolute path.\\n        This means that if a fixture is specified as an absolute path,\\n        we need to make sure we don't discover the absolute path in every\\n        fixture directory.\\n        \"", "#NEWLINE#", "load_absolute_path", "=", "os", ".", "path", "'loaddata'", ",", "self", ",", "verbosity", "=", "0", ",", "commit", "=", "False", ")", "#NEWLINE#", "self", "."]}}
{"position": {"error_location": 13, "repair_targets": [6], "repair_candidates": [6, 2, 13, 24]}}
{"prediction": {"error_location": 0.9999223947525024, "repair_targets": [0.9969860911369324], "repair_candidates": [0.0004880049091298133, 0.9969860911369324, 0.0005109703633934259, 0.002015040023252368], "target_probs": 0.9969860911369324}}


{"result": {"time": "2021-02-11 09:52:39.321383", "n_pass": [40, 7, 6], "n_token": 22, "loss": [3.015949550899677e-05, 0.003492905292659998], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def test_absolute_path(", "self", "#INDENT#", "\"\\n        Regression test for ticket #6436 --\\n        os.path.join will throw away the initial parts of a path if it\\n        encounters an absolute path.\\n        This means that if a fixture is specified as an absolute path,\\n        we need to make sure we don't discover the absolute path in every\\n        fixture directory.\\n        \"", "#NEWLINE#", "load_absolute_path", "=", "os", ".", "path", "'loaddata'", ",", "self", ",", "commit", "=", "False", ")", "#NEWLINE#", "self", "."]}}
{"position": {"error_location": 13, "repair_targets": [6], "repair_candidates": [6, 2, 13, 20]}}
{"prediction": {"error_location": 0.9999698400497437, "repair_targets": [0.9965131878852844], "repair_candidates": [0.0005666432552970946, 0.9965131878852844, 0.0005704044015146792, 0.002349772257730365], "target_probs": 0.9965131878852844}}


{"result": {"time": "2021-02-11 09:52:39.378376", "n_pass": [41, 8, 7], "n_token": 18, "loss": [6.0794889577664435e-05, 0.001514269388280809], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def test_absolute_path(", "self", "#INDENT#", "\"\\n        Regression test for ticket #6436 --\\n        os.path.join will throw away the initial parts of a path if it\\n        encounters an absolute path.\\n        This means that if a fixture is specified as an absolute path,\\n        we need to make sure we don't discover the absolute path in every\\n        fixture directory.\\n        \"", "#NEWLINE#", "load_absolute_path", "=", "os", ".", "path", "'loaddata'", ",", "self", ")", "#NEWLINE#", "self", "."]}}
{"position": {"error_location": 13, "repair_targets": [6], "repair_candidates": [6, 2, 13, 16]}}
{"prediction": {"error_location": 0.9999392032623291, "repair_targets": [0.9984868764877319], "repair_candidates": [0.0005910292384214699, 0.9984868764877319, 0.0007593048503622413, 0.00016281740681733936], "target_probs": 0.9984868764877319}}


{"result": {"time": "2021-02-11 09:52:39.493006", "n_pass": [57, 10, 8], "n_token": 16, "loss": [0.23929065465927124, 0.0003449319628998637], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def test_absolute_path(", "self", "#INDENT#", "\"\\n        Regression test for ticket #6436 --\\n        os.path.join will throw away the initial parts of a path if it\\n        encounters an absolute path.\\n        This means that if a fixture is specified as an absolute path,\\n        we need to make sure we don't discover the absolute path in every\\n        fixture directory.\\n        \"", "#NEWLINE#", "load_absolute_path", "=", "os", ".", "path", "'loaddata'", ",", "self", "self", "."]}}
{"position": {"error_location": 13, "repair_targets": [6], "repair_candidates": [6, 2, 13, 14]}}
{"prediction": {"error_location": 0.7871859073638916, "repair_targets": [0.9996551275253296], "repair_candidates": [3.980773180956021e-05, 0.9996551275253296, 0.00021818674576934427, 8.682643965585157e-05], "target_probs": 0.9996551275253296}}


{"result": {"time": "2021-02-11 09:52:39.548700", "n_pass": [58, 11, 9], "n_token": 15, "loss": [0.2357233613729477, 0.00034540894557721913], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["def test_absolute_path(", "self", "#INDENT#", "\"\\n        Regression test for ticket #6436 --\\n        os.path.join will throw away the initial parts of a path if it\\n        encounters an absolute path.\\n        This means that if a fixture is specified as an absolute path,\\n        we need to make sure we don't discover the absolute path in every\\n        fixture directory.\\n        \"", "#NEWLINE#", "load_absolute_path", "=", "os", ".", "path", "'loaddata'", ",", "self", "self", "."]}}
{"position": {"error_location": 12, "repair_targets": [5], "repair_candidates": [5, 1, 12, 13]}}
{"prediction": {"error_location": 0.7899991869926453, "repair_targets": [0.9996546506881714], "repair_candidates": [0.00017937652592081577, 0.9996546506881714, 0.00011087782331742346, 5.50803160876967e-05], "target_probs": 0.9996546506881714}}


{"result": {"time": "2021-02-11 09:52:39.767763", "n_pass": [64, 15, 10], "n_token": 13, "loss": [0.17189432680606842, 0.0006969018722884357], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["def test_absolute_path(", "self", "#INDENT#", "\"\\n        Regression test for ticket #6436 --\\n        os.path.join will throw away the initial parts of a path if it\\n        encounters an absolute path.\\n        This means that if a fixture is specified as an absolute path,\\n        we need to make sure we don't discover the absolute path in every\\n        fixture directory.\\n        \"", "#NEWLINE#", "load_absolute_path", "=", "os", ".", ",", "self", "self", "."]}}
{"position": {"error_location": 10, "repair_targets": [5], "repair_candidates": [5, 1, 10, 11]}}
{"prediction": {"error_location": 0.8420681357383728, "repair_targets": [0.9993033409118652], "repair_candidates": [0.0003597318136598915, 0.9993033409118652, 0.00022692937636747956, 0.00010996571654686704], "target_probs": 0.9993033409118652}}


{"result": {"time": "2021-02-11 09:52:40.039592", "n_pass": [87, 20, 11], "n_token": 12, "loss": [0.2955795228481293, 0.0001179049359052442], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["def test_absolute_path(", "self", "#INDENT#", "\"\\n        Regression test for ticket #6436 --\\n        os.path.join will throw away the initial parts of a path if it\\n        encounters an absolute path.\\n        This means that if a fixture is specified as an absolute path,\\n        we need to make sure we don't discover the absolute path in every\\n        fixture directory.\\n        \"", "#NEWLINE#", "load_absolute_path", "=", "os", ".", ",", "self", "self"]}}
{"position": {"error_location": 10, "repair_targets": [5], "repair_candidates": [5, 1, 10, 11]}}
{"prediction": {"error_location": 0.7441001534461975, "repair_targets": [0.9998821020126343], "repair_candidates": [7.79608017182909e-05, 0.9998821020126343, 3.0064102247706614e-05, 9.875165233097505e-06], "target_probs": 0.9998821020126343}}


{"result": {"time": "2021-02-11 09:52:40.148682", "n_pass": [90, 22, 12], "n_token": 11, "loss": [0.2748259902000427, 0.00011456669017206877], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["def test_absolute_path(", "self", "\"\\n        Regression test for ticket #6436 --\\n        os.path.join will throw away the initial parts of a path if it\\n        encounters an absolute path.\\n        This means that if a fixture is specified as an absolute path,\\n        we need to make sure we don't discover the absolute path in every\\n        fixture directory.\\n        \"", "#NEWLINE#", "load_absolute_path", "=", "os", ".", ",", "self", "self"]}}
{"position": {"error_location": 9, "repair_targets": [4], "repair_candidates": [4, 1, 9, 10]}}
{"prediction": {"error_location": 0.7597042918205261, "repair_targets": [0.9998854398727417], "repair_candidates": [6.285633571678773e-05, 0.9998854398727417, 3.932751133106649e-05, 1.2436470569809899e-05], "target_probs": 0.9998854398727417}}


{"result": {"time": "2021-02-11 09:52:40.201422", "n_pass": [91, 23, 13], "n_token": 10, "loss": [0.11600369960069656, 0.0036937780678272247], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["def test_absolute_path(", "self", "#NEWLINE#", "load_absolute_path", "=", "os", ".", ",", "self", "self"]}}
{"position": {"error_location": 8, "repair_targets": [3], "repair_candidates": [3, 1, 8, 9]}}
{"prediction": {"error_location": 0.8904719352722168, "repair_targets": [0.9963130354881287], "repair_candidates": [0.0036259873304516077, 0.9963130354881287, 4.8441106628160924e-05, 1.2447968401829712e-05], "target_probs": 0.9963130354881287}}


{"result": {"time": "2021-02-11 09:52:40.305829", "n_pass": [94, 25, 14], "n_token": 9, "loss": [0.16545863449573517, 0.16113248467445374], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["def test_absolute_path(", "self", "#NEWLINE#", "load_absolute_path", "os", ".", ",", "self", "self"]}}
{"position": {"error_location": 7, "repair_targets": [3], "repair_candidates": [3, 1, 7, 8]}}
{"prediction": {"error_location": 0.8475050330162048, "repair_targets": [0.851179301738739], "repair_candidates": [0.1449100375175476, 0.851179301738739, 0.003300979733467102, 0.0006096265860833228], "target_probs": 0.851179301738739}}




Minimal simplified tokens:

['def test_absolute_path(', 'self', '#NEWLINE#', 'load_absolute_path', 'os', '.', ',', 'self', 'self']
