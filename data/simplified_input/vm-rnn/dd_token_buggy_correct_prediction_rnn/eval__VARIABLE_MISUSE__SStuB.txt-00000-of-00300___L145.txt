
Original sample:

{"has_bug": true, "bug_kind": 1, "bug_kind_name": "VARIABLE_MISUSE", "source_tokens": ["#NEWLINE#", "def test_textfield_hash(", "self", ")", ":", "#NEWLINE#", "#INDENT#", "'\\n        Regression test for #10034: the hash generation function should ignore\\n        leading/trailing whitespace so as to be friendly to broken browsers that\\n        submit it (usually in textareas).\\n        '", "#NEWLINE#", "f1", "=", "HashTestForm", "(", "{", "#NEWLINE#", "#INDENT#", "'name'", ":", "'joe'", ",", "#NEWLINE#", "'bio'", ":", "'Nothing notable.'", ",", "#NEWLINE#", "#UNINDENT#", "}", ")", "#NEWLINE#", "f2", "=", "HashTestForm", "(", "{", "#NEWLINE#", "#INDENT#", "'name'", ":", "'  joe'", ",", "#NEWLINE#", "'bio'", ":", "'Nothing notable.  '", ",", "#NEWLINE#", "#UNINDENT#", "}", ")", "#NEWLINE#", "hash1", "=", "utils", ".", "security_hash", "(", "None", ",", "f1", ")", "#NEWLINE#", "hash2", "=", "utils", ".", "security_hash", "(", "None", ",", "hash2", ")", "#NEWLINE#", "self", ".", "assertEqual", "(", "hash1", ",", "hash2", ")"], "error_location": [70], "repair_targets": [30], "repair_candidates": [9, 59, 51, 77, 62, 70, 79, 30, 2, 73], "provenances": [{"datasetProvenance": {"datasetName": "ETHPy150Open", "filepath": "AppScale/appscale/AppServer/lib/django-1.2/django/contrib/formtools/tests.py", "license": "apache-2.0", "note": "license: github_api"}}], "txt_file": "eval__VARIABLE_MISUSE__SStuB.txt-00000-of-00300", "js_count": 145, "results": {"model": "rnn", "prob": {"loc": [[0.35295605659484863, 1.40857605401834e-06, 2.9301008908078074e-07, 1.5149308474349255e-09, 1.3205248006187276e-09, 6.376324535040112e-08, 1.4009544635484872e-08, 2.843912128014381e-08, 3.334137659294356e-07, 6.614021685891203e-08, 1.0977902142883522e-08, 4.7740709163690553e-08, 2.84453065546586e-08, 1.959002027263068e-08, 8.989988486973743e-07, 5.719604700971104e-08, 1.3294985592438024e-06, 1.808596272745433e-09, 3.95851031953498e-07, 6.533376506467903e-08, 6.689344189680924e-08, 6.702137067549074e-09, 4.321122126782484e-09, 1.1331823479565628e-08, 6.365603599789438e-09, 7.329634144070951e-08, 3.1351401048596017e-06, 4.2542311007309763e-07, 2.472172511147619e-08, 2.0236920761362853e-07, 6.438619379878219e-07, 2.0140564771509162e-08, 2.764418240985833e-07, 3.1399363109585465e-08, 1.0622976276408735e-07, 4.054339228787285e-07, 9.154243230113934e-08, 1.5331737586166128e-06, 1.5625311045042167e-09, 2.4880288052031574e-08, 3.2552932793805667e-07, 1.2996962084343977e-07, 1.1052901927044445e-09, 3.4484646249666184e-09, 2.3114701264148607e-09, 9.680316992444205e-09, 2.2346758044022863e-07, 3.0892258564563235e-06, 1.6515861034349655e-06, 3.1844109571466106e-08, 2.8927789230692724e-07, 2.5517522317386465e-08, 9.666779732242503e-08, 1.7362865492032142e-06, 4.345100279579128e-08, 3.466251641270901e-08, 1.0331847022371221e-07, 1.3102810953569133e-05, 1.0291435046383413e-06, 0.1403397172689438, 5.135136120770767e-07, 1.439580387341266e-06, 1.1761726170789188e-07, 4.824195443120516e-08, 5.747493787566782e-07, 5.308619677180104e-08, 5.8792899437776214e-08, 5.370973212848185e-07, 7.91814636613708e-06, 2.866470367735019e-07, 0.490570992231369, 7.58928251798352e-07, 1.967025653470955e-08, 1.282261928281514e-05, 2.0405617195962122e-09, 8.895981551404475e-08, 4.50480229119421e-07, 0.014204800128936768, 1.1250256193306996e-06, 0.0018672983860597014, 2.3203290311357705e-07]], "pointer": [[0.0, 0.0, 1.9881808839272708e-06, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.012584500014781952, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.7273896336555481, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.2598547339439392, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 9.546868386678398e-05, 0.0, 0.0, 4.350351809989661e-05, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.5849442206672393e-05, 0.0, 0.0, 3.376026711521263e-07, 0.0, 0.0, 0.0, 1.6651714531690232e-06, 0.0, 1.2246146070538089e-05, 0.0]], "target": [0.7273896336555481]}, "loss": [0.7121851444244385, 0.3182930052280426], "acc": [0.0, 1.0, 1.0, 1.0]}}


Trace of simplified code(s):

{"result": {"time": "2021-02-11 09:56:48.072968", "n_pass": [1, 1, 1], "n_token": 81, "loss": [0.7121851444244385, 0.3182930052280426], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def test_textfield_hash(", "self", ")", ":", "#NEWLINE#", "#INDENT#", "'\\n        Regression test for #10034: the hash generation function should ignore\\n        leading/trailing whitespace so as to be friendly to broken browsers that\\n        submit it (usually in textareas).\\n        '", "#NEWLINE#", "f1", "=", "HashTestForm", "(", "{", "#NEWLINE#", "#INDENT#", "'name'", ":", "'joe'", ",", "#NEWLINE#", "'bio'", ":", "'Nothing notable.'", ",", "#NEWLINE#", "#UNINDENT#", "}", ")", "#NEWLINE#", "f2", "=", "HashTestForm", "(", "{", "#NEWLINE#", "#INDENT#", "'name'", ":", "'  joe'", ",", "#NEWLINE#", "'bio'", ":", "'Nothing notable.  '", ",", "#NEWLINE#", "#UNINDENT#", "}", ")", "#NEWLINE#", "hash1", "=", "utils", ".", "security_hash", "(", "None", ",", "f1", ")", "#NEWLINE#", "hash2", "=", "utils", ".", "security_hash", "(", "None", ",", "hash2", ")", "#NEWLINE#", "self", ".", "assertEqual", "(", "hash1", ",", "hash2", ")"]}}
{"position": {"error_location": 70, "repair_targets": [30], "repair_candidates": [9, 59, 51, 77, 62, 70, 79, 30, 2, 73]}}
{"prediction": {"error_location": 0.490570992231369, "repair_targets": [0.7273896336555481], "repair_candidates": [1.9881808839272708e-06, 0.012584500014781952, 0.7273896336555481, 0.2598547339439392, 9.546868386678398e-05, 4.350351809989661e-05, 1.5849442206672393e-05, 3.376026711521263e-07, 1.6651714531690232e-06, 1.2246146070538089e-05], "target_probs": 0.7273896336555481}}


{"result": {"time": "2021-02-11 09:56:48.329509", "n_pass": [24, 4, 2], "n_token": 71, "loss": [0.5435410141944885, 0.04402904212474823], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def test_textfield_hash(", "self", ")", ":", "#NEWLINE#", "#INDENT#", "'\\n        Regression test for #10034: the hash generation function should ignore\\n        leading/trailing whitespace so as to be friendly to broken browsers that\\n        submit it (usually in textareas).\\n        '", "#NEWLINE#", "f1", "=", "HashTestForm", "(", "{", "#NEWLINE#", "#INDENT#", "'name'", ":", "'joe'", ",", "#NEWLINE#", "'bio'", ":", "'Nothing notable.'", ",", "#NEWLINE#", "#UNINDENT#", "}", ")", "#NEWLINE#", "f2", "=", "HashTestForm", "(", "{", "#NEWLINE#", "#INDENT#", "'name'", ":", "'  joe'", "#NEWLINE#", "hash1", "=", "utils", ".", "security_hash", "(", "None", ",", "f1", ")", "#NEWLINE#", "hash2", "=", "utils", ".", "security_hash", "(", "None", ",", "hash2", ")", "#NEWLINE#", "self", ".", "assertEqual", "(", "hash1", ",", "hash2", ")"]}}
{"position": {"error_location": 60, "repair_targets": [30], "repair_candidates": [9, 49, 41, 67, 52, 60, 69, 30, 2, 63]}}
{"prediction": {"error_location": 0.5806883573532104, "repair_targets": [0.956926167011261], "repair_candidates": [5.263004823063966e-07, 0.002061971230432391, 0.956926167011261, 0.04094546288251877, 3.568321335478686e-05, 2.0826284526265226e-05, 4.644490672944812e-06, 9.572367076771116e-08, 5.706692149942683e-07, 4.079900008946424e-06], "target_probs": 0.956926167011261}}


{"result": {"time": "2021-02-11 09:56:48.656779", "n_pass": [53, 8, 3], "n_token": 66, "loss": [0.6752054691314697, 0.02156759239733219], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def test_textfield_hash(", "self", ")", ":", "#NEWLINE#", "#INDENT#", "'\\n        Regression test for #10034: the hash generation function should ignore\\n        leading/trailing whitespace so as to be friendly to broken browsers that\\n        submit it (usually in textareas).\\n        '", "#NEWLINE#", "f1", "#INDENT#", "'name'", ":", "'joe'", ",", "#NEWLINE#", "'bio'", ":", "'Nothing notable.'", ",", "#NEWLINE#", "#UNINDENT#", "}", ")", "#NEWLINE#", "f2", "=", "HashTestForm", "(", "{", "#NEWLINE#", "#INDENT#", "'name'", ":", "'  joe'", "#NEWLINE#", "hash1", "=", "utils", ".", "security_hash", "(", "None", ",", "f1", ")", "#NEWLINE#", "hash2", "=", "utils", ".", "security_hash", "(", "None", ",", "hash2", ")", "#NEWLINE#", "self", ".", "assertEqual", "(", "hash1", ",", "hash2", ")"]}}
{"position": {"error_location": 55, "repair_targets": [25], "repair_candidates": [9, 44, 36, 62, 47, 55, 64, 25, 2, 58]}}
{"prediction": {"error_location": 0.5090518593788147, "repair_targets": [0.9786633253097534], "repair_candidates": [5.95628364408185e-07, 6.532496627187356e-05, 0.9786633253097534, 0.021228624507784843, 2.7209172912989743e-05, 6.91667173668975e-06, 4.996451480110409e-06, 7.198054419177424e-08, 4.0367817177866527e-07, 2.511226284696022e-06], "target_probs": 0.9786633253097534}}


{"result": {"time": "2021-02-11 09:56:48.815844", "n_pass": [55, 10, 4], "n_token": 61, "loss": [0.18507105112075806, 0.540276050567627], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def test_textfield_hash(", "self", ")", ":", "#NEWLINE#", "#INDENT#", "'\\n        Regression test for #10034: the hash generation function should ignore\\n        leading/trailing whitespace so as to be friendly to broken browsers that\\n        submit it (usually in textareas).\\n        '", "#NEWLINE#", "f1", "#INDENT#", "'name'", ":", "'joe'", ",", "#NEWLINE#", "'bio'", ":", "'Nothing notable.'", ",", "f2", "=", "HashTestForm", "(", "{", "#NEWLINE#", "#INDENT#", "'name'", ":", "'  joe'", "#NEWLINE#", "hash1", "=", "utils", ".", "security_hash", "(", "None", ",", "f1", ")", "#NEWLINE#", "hash2", "=", "utils", ".", "security_hash", "(", "None", ",", "hash2", ")", "#NEWLINE#", "self", ".", "assertEqual", "(", "hash1", ",", "hash2", ")"]}}
{"position": {"error_location": 50, "repair_targets": [20], "repair_candidates": [9, 39, 31, 57, 42, 50, 59, 20, 2, 53]}}
{"prediction": {"error_location": 0.8310452103614807, "repair_targets": [0.5825874209403992], "repair_candidates": [1.8479016944183968e-05, 0.011705933138728142, 0.5825874209403992, 0.396001935005188, 0.008206741884350777, 0.0012512445682659745, 0.00013697535905521363, 1.9494411844789283e-06, 1.0126225788553711e-05, 7.92114733485505e-05], "target_probs": 0.5825874209403992}}


{"result": {"time": "2021-02-11 09:56:48.893342", "n_pass": [57, 11, 5], "n_token": 56, "loss": [0.6107328534126282, 0.20423388481140137], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def test_textfield_hash(", "self", ")", ":", "#NEWLINE#", "#INDENT#", "'\\n        Regression test for #10034: the hash generation function should ignore\\n        leading/trailing whitespace so as to be friendly to broken browsers that\\n        submit it (usually in textareas).\\n        '", "#NEWLINE#", "f1", "#INDENT#", "'name'", ":", "'joe'", ",", "#NEWLINE#", "'bio'", ":", "'Nothing notable.'", ",", "f2", "=", "HashTestForm", "(", "{", "#NEWLINE#", "hash1", "=", "utils", ".", "security_hash", "(", "None", ",", "f1", ")", "#NEWLINE#", "hash2", "=", "utils", ".", "security_hash", "(", "None", ",", "hash2", ")", "#NEWLINE#", "self", ".", "assertEqual", "(", "hash1", ",", "hash2", ")"]}}
{"position": {"error_location": 45, "repair_targets": [20], "repair_candidates": [9, 34, 26, 52, 37, 45, 54, 20, 2, 48]}}
{"prediction": {"error_location": 0.5429527759552002, "repair_targets": [0.8152716755867004], "repair_candidates": [7.106558769010007e-05, 0.017086783424019814, 0.8152716755867004, 0.10433512926101685, 0.05941154435276985, 0.0023505371063947678, 0.0008857487118802965, 8.246720426541287e-06, 5.655224231304601e-05, 0.0005227163201197982], "target_probs": 0.8152716755867004}}


{"result": {"time": "2021-02-11 09:56:49.044441", "n_pass": [66, 13, 6], "n_token": 51, "loss": [0.4435434937477112, 0.23739519715309143], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def test_textfield_hash(", "self", ")", ":", "#NEWLINE#", "#INDENT#", "'\\n        Regression test for #10034: the hash generation function should ignore\\n        leading/trailing whitespace so as to be friendly to broken browsers that\\n        submit it (usually in textareas).\\n        '", "#NEWLINE#", "f1", "#NEWLINE#", "'bio'", ":", "'Nothing notable.'", ",", "f2", "=", "HashTestForm", "(", "{", "#NEWLINE#", "hash1", "=", "utils", ".", "security_hash", "(", "None", ",", "f1", ")", "#NEWLINE#", "hash2", "=", "utils", ".", "security_hash", "(", "None", ",", "hash2", ")", "#NEWLINE#", "self", ".", "assertEqual", "(", "hash1", ",", "hash2", ")"]}}
{"position": {"error_location": 40, "repair_targets": [15], "repair_candidates": [9, 29, 21, 47, 32, 40, 49, 15, 2, 43]}}
{"prediction": {"error_location": 0.6417582631111145, "repair_targets": [0.7886795401573181], "repair_candidates": [3.7940339097986e-05, 0.0369628481566906, 0.7886795401573181, 0.16666200757026672, 0.005871852859854698, 0.0011437066132202744, 0.0003507706569507718, 6.706900876451982e-06, 3.270991874160245e-05, 0.0002519380650483072], "target_probs": 0.7886795401573181}}


{"result": {"time": "2021-02-11 09:56:49.116338", "n_pass": [67, 14, 7], "n_token": 46, "loss": [0.4372134804725647, 0.08091544359922409], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def test_textfield_hash(", "self", ")", ":", "#NEWLINE#", "#INDENT#", "'\\n        Regression test for #10034: the hash generation function should ignore\\n        leading/trailing whitespace so as to be friendly to broken browsers that\\n        submit it (usually in textareas).\\n        '", "#NEWLINE#", "f1", "f2", "=", "HashTestForm", "(", "{", "#NEWLINE#", "hash1", "=", "utils", ".", "security_hash", "(", "None", ",", "f1", ")", "#NEWLINE#", "hash2", "=", "utils", ".", "security_hash", "(", "None", ",", "hash2", ")", "#NEWLINE#", "self", ".", "assertEqual", "(", "hash1", ",", "hash2", ")"]}}
{"position": {"error_location": 35, "repair_targets": [10], "repair_candidates": [9, 24, 16, 42, 27, 35, 44, 10, 2, 38]}}
{"prediction": {"error_location": 0.6458335518836975, "repair_targets": [0.9222716689109802], "repair_candidates": [4.3018462747568265e-06, 0.06675542145967484, 0.9222716689109802, 0.010287624783813953, 0.0004990152665413916, 0.00010940637002931908, 3.6495737731456757e-05, 1.0156052212551003e-06, 4.425459337653592e-06, 3.0660125048598275e-05], "target_probs": 0.9222716689109802}}


{"result": {"time": "2021-02-11 09:56:49.256883", "n_pass": [97, 16, 8], "n_token": 44, "loss": [0.38462886214256287, 0.14267981052398682], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def test_textfield_hash(", "self", ")", ":", "#NEWLINE#", "#INDENT#", "'\\n        Regression test for #10034: the hash generation function should ignore\\n        leading/trailing whitespace so as to be friendly to broken browsers that\\n        submit it (usually in textareas).\\n        '", "#NEWLINE#", "f1", "f2", "=", "{", "#NEWLINE#", "hash1", "=", "utils", ".", "security_hash", "(", "None", ",", "f1", ")", "#NEWLINE#", "hash2", "=", "utils", ".", "security_hash", "(", "None", ",", "hash2", ")", "#NEWLINE#", "self", ".", "assertEqual", "(", "hash1", ",", "hash2", ")"]}}
{"position": {"error_location": 33, "repair_targets": [10], "repair_candidates": [9, 22, 14, 40, 25, 33, 42, 10, 2, 36]}}
{"prediction": {"error_location": 0.6807031631469727, "repair_targets": [0.8670316338539124], "repair_candidates": [1.0839511560334358e-05, 0.10328802466392517, 0.8670316338539124, 0.028387969359755516, 0.0009028707281686366, 0.00023822580988053232, 7.901032222434878e-05, 1.8096370695275255e-06, 8.034050551941618e-06, 5.1596602133940905e-05], "target_probs": 0.8670316338539124}}


{"result": {"time": "2021-02-11 09:56:49.326740", "n_pass": [98, 17, 9], "n_token": 42, "loss": [0.3548678755760193, 0.0866435170173645], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def test_textfield_hash(", "self", ")", ":", "#NEWLINE#", "#INDENT#", "'\\n        Regression test for #10034: the hash generation function should ignore\\n        leading/trailing whitespace so as to be friendly to broken browsers that\\n        submit it (usually in textareas).\\n        '", "#NEWLINE#", "f1", "f2", "=", "hash1", "=", "utils", ".", "security_hash", "(", "None", ",", "f1", ")", "#NEWLINE#", "hash2", "=", "utils", ".", "security_hash", "(", "None", ",", "hash2", ")", "#NEWLINE#", "self", ".", "assertEqual", "(", "hash1", ",", "hash2", ")"]}}
{"position": {"error_location": 31, "repair_targets": [10], "repair_candidates": [9, 20, 12, 38, 23, 31, 40, 10, 2, 34]}}
{"prediction": {"error_location": 0.7012661695480347, "repair_targets": [0.9170039296150208], "repair_candidates": [5.633783075609244e-06, 0.08186724036931992, 0.9170039296150208, 0.000407614978030324, 0.0004137554788030684, 0.0002297268802067265, 4.1950192098738626e-05, 1.1261689678576658e-06, 3.826479314739117e-06, 2.5184341211570427e-05], "target_probs": 0.9170039296150208}}


{"result": {"time": "2021-02-11 09:56:49.395169", "n_pass": [100, 18, 10], "n_token": 39, "loss": [0.5102624893188477, 0.06824876368045807], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def test_textfield_hash(", "self", ")", ":", "#NEWLINE#", "#INDENT#", "'\\n        Regression test for #10034: the hash generation function should ignore\\n        leading/trailing whitespace so as to be friendly to broken browsers that\\n        submit it (usually in textareas).\\n        '", "#NEWLINE#", "f1", "f2", "=", "hash1", "=", "utils", "None", ",", "f1", ")", "#NEWLINE#", "hash2", "=", "utils", ".", "security_hash", "(", "None", ",", "hash2", ")", "#NEWLINE#", "self", ".", "assertEqual", "(", "hash1", ",", "hash2", ")"]}}
{"position": {"error_location": 28, "repair_targets": [10], "repair_candidates": [9, 17, 12, 35, 20, 28, 37, 10, 2, 31]}}
{"prediction": {"error_location": 0.6003379821777344, "repair_targets": [0.9340280890464783], "repair_candidates": [9.184722330246586e-06, 0.06375470757484436, 0.9340280890464783, 0.0008466940489597619, 0.0006435807445086539, 0.0006221882067620754, 5.939019683864899e-05, 1.4987784879849642e-06, 4.965282187185949e-06, 2.972338734252844e-05], "target_probs": 0.9340280890464783}}


{"result": {"time": "2021-02-11 09:56:49.665318", "n_pass": [111, 22, 11], "n_token": 37, "loss": [0.38845932483673096, 0.15138746798038483], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def test_textfield_hash(", "self", ")", "#INDENT#", "'\\n        Regression test for #10034: the hash generation function should ignore\\n        leading/trailing whitespace so as to be friendly to broken browsers that\\n        submit it (usually in textareas).\\n        '", "#NEWLINE#", "f1", "f2", "=", "hash1", "=", "utils", "None", ",", "f1", ")", "#NEWLINE#", "hash2", "=", "utils", ".", "security_hash", "(", "None", ",", "hash2", ")", "#NEWLINE#", "self", ".", "assertEqual", "(", "hash1", ",", "hash2", ")"]}}
{"position": {"error_location": 26, "repair_targets": [8], "repair_candidates": [7, 15, 10, 33, 18, 26, 35, 8, 2, 29]}}
{"prediction": {"error_location": 0.6781008243560791, "repair_targets": [0.859514594078064], "repair_candidates": [3.7823972434125608e-06, 0.13800011575222015, 0.859514594078064, 0.000872266769874841, 0.0007498016348108649, 0.0007445383816957474, 6.927990762051195e-05, 1.9394169612496626e-06, 6.295215371210361e-06, 3.736201688298024e-05], "target_probs": 0.859514594078064}}


{"result": {"time": "2021-02-11 09:56:49.731118", "n_pass": [112, 23, 12], "n_token": 35, "loss": [0.5577629804611206, 0.05259573087096214], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def test_textfield_hash(", "self", ")", "#NEWLINE#", "f1", "f2", "=", "hash1", "=", "utils", "None", ",", "f1", ")", "#NEWLINE#", "hash2", "=", "utils", ".", "security_hash", "(", "None", ",", "hash2", ")", "#NEWLINE#", "self", ".", "assertEqual", "(", "hash1", ",", "hash2", ")"]}}
{"position": {"error_location": 24, "repair_targets": [6], "repair_candidates": [5, 13, 8, 31, 16, 24, 33, 6, 2, 27]}}
{"prediction": {"error_location": 0.5724883079528809, "repair_targets": [0.9487634897232056], "repair_candidates": [5.409533514466602e-06, 0.049210075289011, 0.9487634897232056, 0.0008834141190163791, 0.0006022542365826666, 0.0004736405680887401, 3.8993763155303895e-05, 7.97678751496278e-07, 3.158580739182071e-06, 1.884651464933995e-05], "target_probs": 0.9487634897232056}}


{"result": {"time": "2021-02-11 09:56:49.926918", "n_pass": [124, 26, 13], "n_token": 33, "loss": [0.5128505229949951, 0.05895789712667465], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["self", ")", "#NEWLINE#", "f1", "f2", "=", "hash1", "=", "utils", "None", ",", "f1", ")", "#NEWLINE#", "hash2", "=", "utils", ".", "security_hash", "(", "None", ",", "hash2", ")", "#NEWLINE#", "self", ".", "assertEqual", "(", "hash1", ",", "hash2", ")"]}}
{"position": {"error_location": 22, "repair_targets": [4], "repair_candidates": [3, 11, 6, 29, 14, 22, 31, 4, 0, 25]}}
{"prediction": {"error_location": 0.5987863540649414, "repair_targets": [0.9427464604377747], "repair_candidates": [0.0160220880061388, 0.02652803435921669, 0.9427464604377747, 0.004021532833576202, 0.010001111775636673, 0.0005598682328127325, 6.793961074436083e-05, 3.895824193023145e-06, 6.1265250224096235e-06, 4.297522900742479e-05], "target_probs": 0.9427464604377747}}


{"result": {"time": "2021-02-11 09:56:50.118072", "n_pass": [162, 29, 14], "n_token": 32, "loss": [0.4380549192428589, 0.05245727673172951], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["self", "#NEWLINE#", "f1", "f2", "=", "hash1", "=", "utils", "None", ",", "f1", ")", "#NEWLINE#", "hash2", "=", "utils", ".", "security_hash", "(", "None", ",", "hash2", ")", "#NEWLINE#", "self", ".", "assertEqual", "(", "hash1", ",", "hash2", ")"]}}
{"position": {"error_location": 21, "repair_targets": [3], "repair_candidates": [2, 10, 5, 28, 13, 21, 30, 3, 0, 24]}}
{"prediction": {"error_location": 0.6452903747558594, "repair_targets": [0.9488948583602905], "repair_candidates": [0.004896300379186869, 0.026245445013046265, 0.9488948583602905, 0.0026517799124121666, 0.016757696866989136, 0.0004878381732851267, 3.901400850736536e-05, 1.6991575648717117e-06, 2.6503878416406224e-06, 2.2827223801868968e-05], "target_probs": 0.9488948583602905}}


{"result": {"time": "2021-02-11 09:56:50.311341", "n_pass": [168, 32, 15], "n_token": 31, "loss": [0.6058467030525208, 0.045952774584293365], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["self", "#NEWLINE#", "f1", "f2", "=", "hash1", "utils", "None", ",", "f1", ")", "#NEWLINE#", "hash2", "=", "utils", ".", "security_hash", "(", "None", ",", "hash2", ")", "#NEWLINE#", "self", ".", "assertEqual", "(", "hash1", ",", "hash2", ")"]}}
{"position": {"error_location": 20, "repair_targets": [3], "repair_candidates": [2, 9, 5, 27, 12, 20, 29, 3, 0, 23]}}
{"prediction": {"error_location": 0.5456122756004333, "repair_targets": [0.9550870656967163], "repair_candidates": [0.004045701585710049, 0.0382709801197052, 0.9550870656967163, 0.00016725092427805066, 0.002028841059654951, 0.00034428032813593745, 3.183485023328103e-05, 1.2434414884410216e-06, 2.3410420908476226e-06, 2.0494444470386952e-05], "target_probs": 0.9550870656967163}}


{"result": {"time": "2021-02-11 09:56:50.374653", "n_pass": [169, 33, 16], "n_token": 30, "loss": [0.3259032368659973, 0.09727121889591217], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["self", "#NEWLINE#", "f1", "f2", "=", "hash1", "None", ",", "f1", ")", "#NEWLINE#", "hash2", "=", "utils", ".", "security_hash", "(", "None", ",", "hash2", ")", "#NEWLINE#", "self", ".", "assertEqual", "(", "hash1", ",", "hash2", ")"]}}
{"position": {"error_location": 19, "repair_targets": [3], "repair_candidates": [2, 8, 5, 26, 11, 19, 28, 3, 0, 22]}}
{"prediction": {"error_location": 0.7218748927116394, "repair_targets": [0.907309889793396], "repair_candidates": [0.007019432727247477, 0.03693076968193054, 0.907309889793396, 0.0007152480538934469, 0.047441210597753525, 0.000487040524603799, 5.683216659235768e-05, 2.345555685678846e-06, 3.639414671852137e-06, 3.3586507925065234e-05], "target_probs": 0.907309889793396}}


{"result": {"time": "2021-02-11 09:56:50.438168", "n_pass": [170, 34, 17], "n_token": 29, "loss": [0.341478556394577, 0.0849655419588089], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["self", "#NEWLINE#", "f1", "f2", "=", "hash1", ",", "f1", ")", "#NEWLINE#", "hash2", "=", "utils", ".", "security_hash", "(", "None", ",", "hash2", ")", "#NEWLINE#", "self", ".", "assertEqual", "(", "hash1", ",", "hash2", ")"]}}
{"position": {"error_location": 18, "repair_targets": [3], "repair_candidates": [2, 7, 5, 25, 10, 18, 27, 3, 0, 21]}}
{"prediction": {"error_location": 0.7107187509536743, "repair_targets": [0.9185439348220825], "repair_candidates": [0.007801444735378027, 0.05248822271823883, 0.9185439348220825, 0.0006522349431179464, 0.019299713894724846, 0.0011035368079319596, 6.844988092780113e-05, 2.600378365968936e-06, 3.23170183946786e-06, 3.660306174424477e-05], "target_probs": 0.9185439348220825}}


{"result": {"time": "2021-02-11 09:56:50.500793", "n_pass": [171, 35, 18], "n_token": 28, "loss": [0.21721139550209045, 0.041898831725120544], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["self", "#NEWLINE#", "f1", "f2", "=", "hash1", "f1", ")", "#NEWLINE#", "hash2", "=", "utils", ".", "security_hash", "(", "None", ",", "hash2", ")", "#NEWLINE#", "self", ".", "assertEqual", "(", "hash1", ",", "hash2", ")"]}}
{"position": {"error_location": 17, "repair_targets": [3], "repair_candidates": [2, 6, 5, 24, 9, 17, 26, 3, 0, 20]}}
{"prediction": {"error_location": 0.8047599196434021, "repair_targets": [0.9589667916297913], "repair_candidates": [0.004898027516901493, 0.030110616236925125, 0.9589667916297913, 0.0006547537632286549, 0.004076008684933186, 0.001221152488142252, 4.615503712557256e-05, 1.3216825891504413e-06, 2.0625545857910765e-06, 2.3030084776110016e-05], "target_probs": 0.9589667916297913}}


{"result": {"time": "2021-02-11 09:56:50.562864", "n_pass": [173, 36, 19], "n_token": 27, "loss": [0.09633661061525345, 0.03855321928858757], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["self", "#NEWLINE#", "f1", "f2", "=", "hash1", "f1", "#NEWLINE#", "hash2", "=", "utils", ".", "security_hash", "(", "None", ",", "hash2", ")", "#NEWLINE#", "self", ".", "assertEqual", "(", "hash1", ",", "hash2", ")"]}}
{"position": {"error_location": 16, "repair_targets": [3], "repair_candidates": [2, 6, 5, 23, 8, 16, 25, 3, 0, 19]}}
{"prediction": {"error_location": 0.9081582427024841, "repair_targets": [0.962180495262146], "repair_candidates": [0.001959004206582904, 0.0326266773045063, 0.962180495262146, 0.00014924215793143958, 0.0028585002291947603, 0.00020691510871984065, 1.2213726222398691e-05, 3.9934337792146835e-07, 5.833230716234539e-07, 6.072630185371963e-06], "target_probs": 0.962180495262146}}


{"result": {"time": "2021-02-11 09:56:50.747979", "n_pass": [177, 39, 20], "n_token": 25, "loss": [0.06387965381145477, 0.039342183619737625], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["self", "#NEWLINE#", "f1", "f2", "=", "hash1", "f1", "#NEWLINE#", "hash2", "=", "utils", "(", "None", ",", "hash2", ")", "#NEWLINE#", "self", ".", "assertEqual", "(", "hash1", ",", "hash2", ")"]}}
{"position": {"error_location": 14, "repair_targets": [3], "repair_candidates": [2, 6, 5, 21, 8, 14, 23, 3, 0, 17]}}
{"prediction": {"error_location": 0.9381179213523865, "repair_targets": [0.9614216685295105], "repair_candidates": [0.001812134520150721, 0.034000325947999954, 0.9614216685295105, 0.00016673663049004972, 0.002305657370015979, 0.00027601473266258836, 1.1121973329863977e-05, 5.193052174945478e-07, 4.954871997142618e-07, 5.363647233025404e-06], "target_probs": 0.9614216685295105}}


{"result": {"time": "2021-02-11 09:56:50.926915", "n_pass": [182, 42, 21], "n_token": 23, "loss": [0.07201603800058365, 0.047413866966962814], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["self", "#NEWLINE#", "f1", "f2", "=", "hash1", "f1", "#NEWLINE#", "hash2", "=", "utils", "(", "None", ",", "hash2", ")", "#NEWLINE#", "self", ".", "hash1", ",", "hash2", ")"]}}
{"position": {"error_location": 14, "repair_targets": [3], "repair_candidates": [2, 6, 5, 19, 8, 14, 21, 3, 0, 17]}}
{"prediction": {"error_location": 0.9305158853530884, "repair_targets": [0.953692615032196], "repair_candidates": [0.0010665094014257193, 0.04248553887009621, 0.953692615032196, 0.00013801181921735406, 0.0022061073686927557, 0.0002906447625719011, 6.636872512899572e-06, 5.348217655409826e-06, 8.654698467580602e-05, 2.1885050955461338e-05], "target_probs": 0.953692615032196}}


{"result": {"time": "2021-02-11 09:56:50.988589", "n_pass": [186, 43, 22], "n_token": 22, "loss": [0.27519240975379944, 0.035344723612070084], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["self", "f1", "f2", "=", "hash1", "f1", "#NEWLINE#", "hash2", "=", "utils", "(", "None", ",", "hash2", ")", "#NEWLINE#", "self", ".", "hash1", ",", "hash2", ")"]}}
{"position": {"error_location": 13, "repair_targets": [2], "repair_candidates": [1, 5, 4, 18, 7, 13, 20, 2, 0, 16]}}
{"prediction": {"error_location": 0.7594258189201355, "repair_targets": [0.9652726054191589], "repair_candidates": [0.0022519435733556747, 0.028257647529244423, 0.9652726054191589, 7.201797416200861e-05, 0.0024954057298600674, 0.0013570315204560757, 1.8426429960527457e-05, 1.918510315590538e-05, 0.00021034646488260478, 4.5415188651531935e-05], "target_probs": 0.9652726054191589}}


{"result": {"time": "2021-02-11 09:56:51.163907", "n_pass": [194, 46, 23], "n_token": 20, "loss": [0.601010799407959, 0.04773572459816933], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["self", "f1", "f2", "=", "hash1", "f1", "#NEWLINE#", "hash2", "(", "None", ",", "hash2", ")", "#NEWLINE#", "self", ".", "hash1", ",", "hash2", ")"]}}
{"position": {"error_location": 11, "repair_targets": [2], "repair_candidates": [1, 5, 4, 16, 7, 11, 18, 2, 0, 14]}}
{"prediction": {"error_location": 0.5482571721076965, "repair_targets": [0.9533857107162476], "repair_candidates": [0.002710842527449131, 0.04146058112382889, 0.9533857107162476, 9.883895108941942e-05, 0.0010802877368405461, 0.0005691847763955593, 4.993418406229466e-05, 0.0001503094972576946, 0.00045237637823447585, 4.187408194411546e-05], "target_probs": 0.9533857107162476}}


{"result": {"time": "2021-02-11 09:56:51.221444", "n_pass": [195, 47, 24], "n_token": 18, "loss": [0.38574254512786865, 0.03860761225223541], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["self", "f1", "f2", "=", "hash1", "f1", "#NEWLINE#", "hash2", ",", "hash2", ")", "#NEWLINE#", "self", ".", "hash1", ",", "hash2", ")"]}}
{"position": {"error_location": 9, "repair_targets": [2], "repair_candidates": [1, 5, 4, 14, 7, 9, 16, 2, 0, 12]}}
{"prediction": {"error_location": 0.6799455881118774, "repair_targets": [0.9621281623840332], "repair_candidates": [0.0018958665896207094, 0.03425666689872742, 0.9621281623840332, 9.055845293914899e-05, 0.0008967801695689559, 0.0001836702722357586, 2.267630407004617e-05, 4.6625147660961375e-05, 0.0004183660203125328, 6.0564911109395325e-05], "target_probs": 0.9621281623840332}}


{"result": {"time": "2021-02-11 09:56:51.506682", "n_pass": [221, 52, 25], "n_token": 17, "loss": [0.5185078978538513, 0.039088960736989975], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["self", "f1", "f2", "=", "hash1", "f1", "#NEWLINE#", "hash2", ",", "hash2", ")", "#NEWLINE#", "self", "hash1", ",", "hash2", ")"]}}
{"position": {"error_location": 9, "repair_targets": [2], "repair_candidates": [1, 5, 4, 13, 7, 9, 15, 2, 0, 12]}}
{"prediction": {"error_location": 0.5954082608222961, "repair_targets": [0.961665153503418], "repair_candidates": [0.0019538092892616987, 0.03339805081486702, 0.961665153503418, 0.00010635477519826964, 0.0007574360934086144, 2.9902314054197632e-05, 8.908280506148003e-06, 0.0006284541450440884, 0.0007312073139473796, 0.0007206973386928439], "target_probs": 0.961665153503418}}


{"result": {"time": "2021-02-11 09:56:51.563226", "n_pass": [223, 53, 26], "n_token": 16, "loss": [0.40077853202819824, 0.02829608879983425], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["self", "f1", "f2", "=", "hash1", "f1", "#NEWLINE#", "hash2", ",", "hash2", ")", "#NEWLINE#", "self", "hash1", "hash2", ")"]}}
{"position": {"error_location": 9, "repair_targets": [2], "repair_candidates": [1, 5, 4, 13, 7, 9, 14, 2, 0, 12]}}
{"prediction": {"error_location": 0.6697983741760254, "repair_targets": [0.9721004962921143], "repair_candidates": [0.0012815471272915602, 0.025233091786503792, 0.9721004962921143, 6.230490544112399e-05, 0.00035756544093601406, 1.7405975086148828e-05, 5.83600149184349e-06, 0.0002562919689808041, 0.00014876008208375424, 0.0005367544363252819], "target_probs": 0.9721004962921143}}


{"result": {"time": "2021-02-11 09:56:51.843036", "n_pass": [236, 58, 27], "n_token": 15, "loss": [0.13080424070358276, 0.024422036483883858], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["self", "f1", "f2", "=", "hash1", "f1", "#NEWLINE#", "hash2", ",", "hash2", "#NEWLINE#", "self", "hash1", "hash2", ")"]}}
{"position": {"error_location": 9, "repair_targets": [2], "repair_candidates": [1, 5, 4, 12, 7, 9, 13, 2, 0, 11]}}
{"prediction": {"error_location": 0.8773894906044006, "repair_targets": [0.9758737683296204], "repair_candidates": [0.0011302987113595009, 0.02085132524371147, 0.9758737683296204, 4.96356442454271e-05, 0.00042379225487820804, 1.891478314064443e-05, 6.373613814503187e-06, 0.0006395972450263798, 0.0002972835209220648, 0.0007090152357704937], "target_probs": 0.9758737683296204}}


{"result": {"time": "2021-02-11 09:56:51.954814", "n_pass": [241, 60, 28], "n_token": 14, "loss": [0.15940101444721222, 0.031923145055770874], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["self", "f1", "f2", "=", "hash1", "f1", "#NEWLINE#", "hash2", ",", "hash2", "#NEWLINE#", "self", "hash1", "hash2"]}}
{"position": {"error_location": 9, "repair_targets": [2], "repair_candidates": [1, 5, 4, 12, 7, 9, 13, 2, 0, 11]}}
{"prediction": {"error_location": 0.8526543378829956, "repair_targets": [0.9685810208320618], "repair_candidates": [0.0010943671222776175, 0.027735546231269836, 0.9685810208320618, 2.8428443329175934e-05, 0.00025600564549677074, 1.468455320718931e-05, 8.045903086895123e-06, 0.0014512207126244903, 0.000355926516931504, 0.0004746363847516477], "target_probs": 0.9685810208320618}}




Minimal simplified tokens:

['self', 'f1', 'f2', '=', 'hash1', 'f1', '#NEWLINE#', 'hash2', ',', 'hash2', '#NEWLINE#', 'self', 'hash1', 'hash2']
