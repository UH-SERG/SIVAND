
Original sample:

{"has_bug": true, "bug_kind": 1, "bug_kind_name": "VARIABLE_MISUSE", "source_tokens": ["#NEWLINE#", "def test_ascii_file_shelf(", "self", ")", ":", "#NEWLINE#", "#INDENT#", "try", ":", "#NEWLINE#", "#INDENT#", "s", "=", "shelve", ".", "open", "(", "self", ".", "fn", ",", "protocol", "=", "0", ")", "#NEWLINE#", "s", "[", "'key1'", "]", "=", "(", "1", ",", "2", ",", "3", ",", "4", ")", "#NEWLINE#", "self", ".", "assertEqual", "(", "s", "[", "'key1'", "]", ",", "(", "1", ",", "2", ",", "3", ",", "4", ")", ")", "#NEWLINE#", "s", ".", "close", "(", ")", "#NEWLINE#", "#UNINDENT#", "finally", ":", "#NEWLINE#", "#INDENT#", "for", "f", "in", "glob", ".", "glob", "(", "(", "f", ".", "fn", "+", "'*'", ")", ")", ":", "#NEWLINE#", "#INDENT#", "os", ".", "unlink", "(", "f", ")"], "error_location": [80], "repair_targets": [2, 17, 41], "repair_candidates": [11, 26, 45, 61, 2, 17, 41, 73, 80, 94], "provenances": [{"datasetProvenance": {"datasetName": "ETHPy150Open", "filepath": "azoft-dev-team/imagrium/env/Lib/test/test_shelve.py", "license": "mit", "note": "license: bigquery_api"}}], "txt_file": "eval__VARIABLE_MISUSE__SStuB.txt-00001-of-00300", "js_count": 4344, "results": {"model": "rnn", "prob": {"loc": [[0.0025654982309788465, 1.37628006768864e-07, 6.939585794896175e-09, 1.398468563174049e-10, 1.33653726974714e-10, 7.966418635874106e-09, 4.508978967976418e-09, 9.811845558260757e-08, 2.2890873641046028e-09, 5.444453421432627e-08, 3.333004761074676e-09, 1.0910840231304064e-08, 7.931905687819096e-10, 3.9508321947323566e-08, 5.900186561547116e-09, 6.121847473394837e-10, 2.9070856832902336e-10, 0.00020127715833950788, 2.418634403866804e-09, 2.0003446010719017e-08, 7.970684667846228e-10, 1.0093687663470519e-08, 2.5702662220794537e-09, 2.516083270620584e-07, 2.6911712858179726e-09, 1.0315034160157666e-08, 4.315125750053994e-07, 5.743522324408445e-10, 5.168589041204541e-07, 1.1721115744656174e-10, 5.580962914031318e-10, 1.9919456306638494e-08, 9.705534012027783e-07, 2.5072421916405574e-09, 1.2266463045307319e-06, 1.0176036013831435e-08, 5.010762720303319e-07, 4.074128590048076e-09, 3.681269333810633e-07, 1.8788119948709436e-09, 6.589846890392437e-09, 1.8914802168978895e-08, 1.3791474906543755e-10, 4.716580459529496e-09, 7.662369405636582e-09, 5.034804780734703e-05, 1.1203160621420238e-09, 1.5420818044731277e-06, 4.275771292583386e-09, 6.455534440341637e-10, 1.0792572169293635e-08, 1.835433863561775e-06, 5.109244582968131e-09, 2.399880258963094e-06, 9.069935913430527e-09, 5.723748017771868e-07, 2.557375866629741e-09, 7.451219516951824e-07, 3.770159739957535e-09, 1.535625071547031e-09, 2.144460431452444e-08, 1.051906792781665e-07, 9.320510585553166e-09, 2.133045740038142e-09, 4.812763521044872e-09, 1.0957101181929829e-07, 1.4517953061954358e-08, 1.2170753294071801e-09, 4.4872322746414284e-08, 4.319913760042482e-09, 7.47708384096768e-08, 6.349738868038912e-08, 3.7862375457109465e-09, 2.4790147712394628e-09, 4.279646415028537e-09, 6.006951736026167e-08, 2.448974800728365e-09, 4.1297241182292055e-09, 4.548696530548568e-09, 1.6332712959865603e-07, 0.9970236420631409, 1.2852439112975844e-07, 5.345740561324419e-08, 1.1658697118832606e-08, 7.242353916581123e-08, 5.810792957916533e-10, 6.291047127682248e-10, 1.9507695458997887e-09, 1.7383735340104067e-08, 1.6571288785627303e-09, 2.5541193604539103e-09, 3.7006466779843095e-09, 6.105987937488067e-10, 1.1683751188762415e-10, 0.00014625319454353303, 1.1392484733363517e-09]], "pointer": [[0.0, 0.0, 0.0017872065072879195, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.1919594726350624e-05, 0.0, 0.0, 0.0, 0.0, 0.0, 0.9972754120826721, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.874784538813401e-05, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0007136478670872748, 0.0, 0.0, 0.0, 5.177887487661792e-07, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.880579293356277e-05, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.00017046023276634514, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0139272035303293e-06, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 2.2952217477723025e-06, 0.0]], "target": [0.9997762441635132]}, "loss": [0.0029806732200086117, 0.00022378088033292443], "acc": [0.0, 1.0, 1.0, 1.0]}}


Trace of simplified code(s):

{"result": {"time": "2021-02-11 10:53:37.423013", "n_pass": [1, 1, 1], "n_token": 96, "loss": [0.0029806732200086117, 0.00022378088033292443], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def test_ascii_file_shelf(", "self", ")", ":", "#NEWLINE#", "#INDENT#", "try", ":", "#NEWLINE#", "#INDENT#", "s", "=", "shelve", ".", "open", "(", "self", ".", "fn", ",", "protocol", "=", "0", ")", "#NEWLINE#", "s", "[", "'key1'", "]", "=", "(", "1", ",", "2", ",", "3", ",", "4", ")", "#NEWLINE#", "self", ".", "assertEqual", "(", "s", "[", "'key1'", "]", ",", "(", "1", ",", "2", ",", "3", ",", "4", ")", ")", "#NEWLINE#", "s", ".", "close", "(", ")", "#NEWLINE#", "#UNINDENT#", "finally", ":", "#NEWLINE#", "#INDENT#", "for", "f", "in", "glob", ".", "glob", "(", "(", "f", ".", "fn", "+", "'*'", ")", ")", ":", "#NEWLINE#", "#INDENT#", "os", ".", "unlink", "(", "f", ")"]}}
{"position": {"error_location": 80, "repair_targets": [2, 17, 41], "repair_candidates": [11, 26, 45, 61, 2, 17, 41, 73, 80, 94]}}
{"prediction": {"error_location": 0.9970236420631409, "repair_targets": [0.0017872065072879195, 0.9972754120826721, 0.0007136478670872748], "repair_candidates": [0.0017872065072879195, 1.1919594726350624e-05, 0.9972754120826721, 1.874784538813401e-05, 0.0007136478670872748, 5.177887487661792e-07, 1.880579293356277e-05, 0.00017046023276634514, 1.0139272035303293e-06, 2.2952217477723025e-06], "target_probs": 0.9997762441635132}}


{"result": {"time": "2021-02-11 10:53:37.517157", "n_pass": [24, 2, 2], "n_token": 84, "loss": [0.002915182150900364, 0.00027731925365515053], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def test_ascii_file_shelf(", "self", ")", ":", "#NEWLINE#", "#INDENT#", "try", ":", "#NEWLINE#", "#INDENT#", "s", "=", "shelve", ".", "open", "(", "self", ".", "fn", ",", "protocol", "=", "0", ")", "#NEWLINE#", "s", "[", "'key1'", "]", "=", "(", "1", ",", "2", ",", "3", ",", "4", ")", "#NEWLINE#", "self", ".", "assertEqual", "(", "s", "[", "'key1'", "#NEWLINE#", "s", ".", "close", "(", ")", "#NEWLINE#", "#UNINDENT#", "finally", ":", "#NEWLINE#", "#INDENT#", "for", "f", "in", "glob", ".", "glob", "(", "(", "f", ".", "fn", "+", "'*'", ")", ")", ":", "#NEWLINE#", "#INDENT#", "os", ".", "unlink", "(", "f", ")"]}}
{"position": {"error_location": 68, "repair_targets": [2, 17, 41], "repair_candidates": [11, 26, 45, 49, 2, 17, 41, 61, 68, 82]}}
{"prediction": {"error_location": 0.9970892071723938, "repair_targets": [0.0016353110549971461, 0.9979478716850281, 0.00013951871369499713], "repair_candidates": [0.0016353110549971461, 1.7533871869090945e-05, 0.9979478716850281, 2.8337379262666218e-05, 0.00013951871369499713, 4.811339522348135e-07, 2.6118865207536146e-05, 0.00020029897859785706, 1.3396005442700698e-06, 3.079963562413468e-06], "target_probs": 0.9997227191925049}}


{"result": {"time": "2021-02-11 10:53:37.607039", "n_pass": [46, 3, 3], "n_token": 78, "loss": [0.0008624648326076567, 0.00018973958503920585], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def test_ascii_file_shelf(", "self", ")", ":", "#NEWLINE#", "#INDENT#", "try", ":", "#NEWLINE#", "#INDENT#", "s", "=", "shelve", ".", "open", "(", "self", ".", "fn", ",", "protocol", "=", "0", ")", "#NEWLINE#", "s", "[", "'key1'", "]", "=", "(", "1", ",", "2", ",", "3", ",", "4", ")", "#NEWLINE#", "self", ".", "assertEqual", "(", "s", "[", "'key1'", "#NEWLINE#", "s", ".", "close", "(", ")", "for", "f", "in", "glob", ".", "glob", "(", "(", "f", ".", "fn", "+", "'*'", ")", ")", ":", "#NEWLINE#", "#INDENT#", "os", ".", "unlink", "(", "f", ")"]}}
{"position": {"error_location": 62, "repair_targets": [2, 17, 41], "repair_candidates": [11, 26, 45, 49, 2, 17, 41, 55, 62, 76]}}
{"prediction": {"error_location": 0.9991377592086792, "repair_targets": [0.0055737621150910854, 0.9934656023979187, 0.0007709305500611663], "repair_candidates": [0.0055737621150910854, 1.0564532203716226e-05, 0.9934656023979187, 2.375537769694347e-05, 0.0007709305500611663, 5.657453812091262e-07, 5.378036803449504e-05, 9.538632730254903e-05, 1.2388946970531833e-06, 4.430770331964595e-06], "target_probs": 0.9998102784156799}}


{"result": {"time": "2021-02-11 10:53:37.693125", "n_pass": [49, 4, 4], "n_token": 72, "loss": [0.0029037713538855314, 0.00012332962069194764], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def test_ascii_file_shelf(", "self", ")", ":", "#NEWLINE#", "#INDENT#", "try", ":", "#NEWLINE#", "#INDENT#", "s", "=", "shelve", ".", "open", "(", "self", ".", "fn", ",", "protocol", "=", "0", ")", "#NEWLINE#", "s", "[", "'key1'", "]", "=", "(", "1", ",", "2", ",", "3", ",", "4", ")", "#NEWLINE#", "self", ".", "assertEqual", "(", "s", "[", "'key1'", "#NEWLINE#", "s", ".", "close", "(", ")", "for", "f", "in", "glob", ".", "glob", "(", "(", "f", ".", "fn", "+", "os", ".", "unlink", "(", "f", ")"]}}
{"position": {"error_location": 62, "repair_targets": [2, 17, 41], "repair_candidates": [11, 26, 45, 49, 2, 17, 41, 55, 62, 70]}}
{"prediction": {"error_location": 0.9971004128456116, "repair_targets": [0.00437968410551548, 0.9946611523628235, 0.0008358091581612825], "repair_candidates": [0.00437968410551548, 1.0888876204262488e-05, 0.9946611523628235, 3.537810334819369e-05, 0.0008358091581612825, 7.041944058983063e-07, 1.1050618923036382e-05, 6.341350672300905e-05, 5.590061391558265e-07, 1.3244621186458971e-06], "target_probs": 0.9998766779899597}}


{"result": {"time": "2021-02-11 10:53:37.778389", "n_pass": [54, 5, 5], "n_token": 66, "loss": [0.09489353001117706, 0.10665228217840195], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def test_ascii_file_shelf(", "self", ")", ":", "#NEWLINE#", "#INDENT#", "try", ":", "#NEWLINE#", "#INDENT#", "s", "=", "shelve", ".", "open", "(", "self", ")", "#NEWLINE#", "s", "[", "'key1'", "]", "=", "(", "1", ",", "2", ",", "3", ",", "4", ")", "#NEWLINE#", "self", ".", "assertEqual", "(", "s", "[", "'key1'", "#NEWLINE#", "s", ".", "close", "(", ")", "for", "f", "in", "glob", ".", "glob", "(", "(", "f", ".", "fn", "+", "os", ".", "unlink", "(", "f", ")"]}}
{"position": {"error_location": 56, "repair_targets": [2, 17, 35], "repair_candidates": [11, 20, 39, 43, 2, 17, 35, 49, 56, 64]}}
{"prediction": {"error_location": 0.9094696640968323, "repair_targets": [0.012756974436342716, 0.6936619281768799, 0.19241921603679657], "repair_candidates": [0.012756974436342716, 0.006212258245795965, 0.6936619281768799, 0.07022853195667267, 0.19241921603679657, 0.00028599571669474244, 0.004151373635977507, 0.019813094288110733, 0.00019390769011806697, 0.00027677626349031925], "target_probs": 0.8988381624221802}}


{"result": {"time": "2021-02-11 10:53:37.858347", "n_pass": [56, 6, 6], "n_token": 60, "loss": [0.07490614056587219, 0.03581418842077255], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def test_ascii_file_shelf(", "self", ")", ":", "#NEWLINE#", "#INDENT#", "try", ":", "#NEWLINE#", "#INDENT#", "s", "=", "shelve", ".", "open", "(", "self", ")", "#NEWLINE#", "s", "[", "'key1'", "]", "3", ",", "4", ")", "#NEWLINE#", "self", ".", "assertEqual", "(", "s", "[", "'key1'", "#NEWLINE#", "s", ".", "close", "(", ")", "for", "f", "in", "glob", ".", "glob", "(", "(", "f", ".", "fn", "+", "os", ".", "unlink", "(", "f", ")"]}}
{"position": {"error_location": 50, "repair_targets": [2, 17, 29], "repair_candidates": [11, 20, 33, 37, 2, 17, 29, 43, 50, 58]}}
{"prediction": {"error_location": 0.9278305768966675, "repair_targets": [0.014373528771102428, 0.6879600286483765, 0.26248595118522644], "repair_candidates": [0.014373528771102428, 0.0038549250457435846, 0.6879600286483765, 0.01088381465524435, 0.26248595118522644, 0.00028859873418696225, 0.002868568291887641, 0.016861090436577797, 0.00016527461411897093, 0.0002583747263997793], "target_probs": 0.9648195505142212}}


{"result": {"time": "2021-02-11 10:53:37.937855", "n_pass": [87, 7, 7], "n_token": 57, "loss": [0.10012979805469513, 0.05171753093600273], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def test_ascii_file_shelf(", "self", ")", ":", "#NEWLINE#", "#INDENT#", "try", ":", "#NEWLINE#", "#INDENT#", "s", "=", "shelve", ".", "open", "(", "self", ")", "#NEWLINE#", "s", "[", "'key1'", "]", ")", "#NEWLINE#", "self", ".", "assertEqual", "(", "s", "[", "'key1'", "#NEWLINE#", "s", ".", "close", "(", ")", "for", "f", "in", "glob", ".", "glob", "(", "(", "f", ".", "fn", "+", "os", ".", "unlink", "(", "f", ")"]}}
{"position": {"error_location": 47, "repair_targets": [2, 17, 26], "repair_candidates": [11, 20, 30, 34, 2, 17, 26, 40, 47, 55]}}
{"prediction": {"error_location": 0.9047200083732605, "repair_targets": [0.011869876645505428, 0.7185366749763489, 0.21919052302837372], "repair_candidates": [0.011869876645505428, 0.004743988625705242, 0.7185366749763489, 0.006143821403384209, 0.21919052302837372, 0.0007896926254034042, 0.005952462553977966, 0.031979888677597046, 0.0002970438217744231, 0.0004960340447723866], "target_probs": 0.9495970606803894}}


{"result": {"time": "2021-02-11 10:53:38.014270", "n_pass": [88, 8, 8], "n_token": 54, "loss": [0.42590343952178955, 0.6359504461288452], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def test_ascii_file_shelf(", "self", ")", ":", "#NEWLINE#", "#INDENT#", "try", ":", "#NEWLINE#", "#INDENT#", "s", "=", "shelve", ".", "open", "(", "self", ")", "#NEWLINE#", "s", "[", "'key1'", "]", ")", "#NEWLINE#", "self", "s", "[", "'key1'", "#NEWLINE#", "s", ".", "close", "(", ")", "for", "f", "in", "glob", ".", "glob", "(", "(", "f", ".", "fn", "+", "os", ".", "unlink", "(", "f", ")"]}}
{"position": {"error_location": 44, "repair_targets": [2, 17, 26], "repair_candidates": [11, 20, 27, 31, 2, 17, 26, 37, 44, 52]}}
{"prediction": {"error_location": 0.6531794667243958, "repair_targets": [0.00021316122729331255, 0.0069931852631270885, 0.5222257375717163], "repair_candidates": [0.00021316122729331255, 0.00203952775336802, 0.0069931852631270885, 0.0027617886662483215, 0.5222257375717163, 0.002207088051363826, 0.13319562375545502, 0.32942014932632446, 0.00036885213921777904, 0.0005748524563387036], "target_probs": 0.5294320583343506}}


{"result": {"time": "2021-02-11 10:53:38.164466", "n_pass": [93, 10, 9], "n_token": 51, "loss": [0.26587381958961487, 0.3250894844532013], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def test_ascii_file_shelf(", "self", ")", ":", "#NEWLINE#", "#INDENT#", "try", ":", "#NEWLINE#", "#INDENT#", "s", "=", "shelve", ".", "open", "(", "self", ")", "#NEWLINE#", "s", "[", "'key1'", "]", ")", "#NEWLINE#", "self", "s", "[", "'key1'", "#NEWLINE#", "s", ".", "close", "(", ")", "for", "f", "in", "(", "(", "f", ".", "fn", "+", "os", ".", "unlink", "(", "f", ")"]}}
{"position": {"error_location": 41, "repair_targets": [2, 17, 26], "repair_candidates": [11, 20, 27, 31, 2, 17, 26, 37, 41, 49]}}
{"prediction": {"error_location": 0.7665358185768127, "repair_targets": [0.0001468853442929685, 0.005245709326118231, 0.7170701622962952], "repair_candidates": [0.0001468853442929685, 0.0016357344575226307, 0.005245709326118231, 0.0029457362834364176, 0.7170701622962952, 0.001819708733819425, 0.14926297962665558, 0.12141846865415573, 5.697452070307918e-05, 0.00039761242805980146], "target_probs": 0.7224627137184143}}


{"result": {"time": "2021-02-11 10:53:38.313260", "n_pass": [96, 12, 10], "n_token": 48, "loss": [0.24209263920783997, 0.1787748485803604], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def test_ascii_file_shelf(", "self", ")", ":", "#NEWLINE#", "#INDENT#", "try", ":", "#NEWLINE#", "#INDENT#", "s", "=", "shelve", ".", "open", "(", "self", ")", "#NEWLINE#", "s", "[", "'key1'", "]", ")", "#NEWLINE#", "self", "s", "[", "'key1'", "#NEWLINE#", "s", ".", "close", "(", ")", "for", "f", "in", "(", "(", "f", ".", "fn", "+", "(", "f", ")"]}}
{"position": {"error_location": 41, "repair_targets": [2, 17, 26], "repair_candidates": [11, 20, 27, 31, 2, 17, 26, 37, 41, 46]}}
{"prediction": {"error_location": 0.7849834561347961, "repair_targets": [0.0002679095487110317, 0.014152804389595985, 0.8218734264373779], "repair_candidates": [0.0002679095487110317, 0.0025763516314327717, 0.014152804389595985, 0.007323722820729017, 0.8218734264373779, 0.005200803745537996, 0.07466316223144531, 0.07363404333591461, 6.65191255393438e-05, 0.0002412696194369346], "target_probs": 0.8362941741943359}}


{"result": {"time": "2021-02-11 10:53:38.385076", "n_pass": [99, 13, 11], "n_token": 45, "loss": [0.20953726768493652, 0.12114552408456802], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def test_ascii_file_shelf(", "self", "#INDENT#", "try", ":", "#NEWLINE#", "#INDENT#", "s", "=", "shelve", ".", "open", "(", "self", ")", "#NEWLINE#", "s", "[", "'key1'", "]", ")", "#NEWLINE#", "self", "s", "[", "'key1'", "#NEWLINE#", "s", ".", "close", "(", ")", "for", "f", "in", "(", "(", "f", ".", "fn", "+", "(", "f", ")"]}}
{"position": {"error_location": 38, "repair_targets": [2, 14, 23], "repair_candidates": [8, 17, 24, 28, 2, 14, 23, 34, 38, 43]}}
{"prediction": {"error_location": 0.81095951795578, "repair_targets": [0.0001326620258623734, 0.0067345318384468555, 0.8790378570556641], "repair_candidates": [0.0001326620258623734, 0.0007802324253134429, 0.0067345318384468555, 0.005233000032603741, 0.8790378570556641, 0.0029710845556110144, 0.06039809808135033, 0.044542115181684494, 4.0630227886140347e-05, 0.00012985910871066153], "target_probs": 0.8859050273895264}}


{"result": {"time": "2021-02-11 10:53:38.455422", "n_pass": [100, 14, 12], "n_token": 42, "loss": [0.2868083119392395, 0.16493995487689972], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def test_ascii_file_shelf(", "self", "#NEWLINE#", "#INDENT#", "s", "=", "shelve", ".", "open", "(", "self", ")", "#NEWLINE#", "s", "[", "'key1'", "]", ")", "#NEWLINE#", "self", "s", "[", "'key1'", "#NEWLINE#", "s", ".", "close", "(", ")", "for", "f", "in", "(", "(", "f", ".", "fn", "+", "(", "f", ")"]}}
{"position": {"error_location": 35, "repair_targets": [2, 11, 20], "repair_candidates": [5, 14, 21, 25, 2, 11, 20, 31, 35, 40]}}
{"prediction": {"error_location": 0.7506555914878845, "repair_targets": [0.00031700104591436684, 0.020623212680220604, 0.8270043730735779], "repair_candidates": [0.00031700104591436684, 0.0031844170298427343, 0.020623212680220604, 0.008851037360727787, 0.8270043730735779, 0.0047775027342140675, 0.079532191157341, 0.05532972142100334, 6.86094572301954e-05, 0.00031188526190817356], "target_probs": 0.8479446172714233}}


{"result": {"time": "2021-02-11 10:53:38.524694", "n_pass": [102, 15, 13], "n_token": 39, "loss": [0.1640959084033966, 0.05241556838154793], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def test_ascii_file_shelf(", "self", "#NEWLINE#", "#INDENT#", "s", "open", "(", "self", ")", "#NEWLINE#", "s", "[", "'key1'", "]", ")", "#NEWLINE#", "self", "s", "[", "'key1'", "#NEWLINE#", "s", ".", "close", "(", ")", "for", "f", "in", "(", "(", "f", ".", "fn", "+", "(", "f", ")"]}}
{"position": {"error_location": 32, "repair_targets": [2, 8, 17], "repair_candidates": [5, 11, 18, 22, 2, 8, 17, 28, 32, 37]}}
{"prediction": {"error_location": 0.8486604690551758, "repair_targets": [0.00018646162061486393, 0.009990471415221691, 0.9387574791908264], "repair_candidates": [0.00018646162061486393, 0.0011101544369012117, 0.009990471415221691, 0.006372589152306318, 0.9387574791908264, 0.003673671977594495, 0.014128913171589375, 0.025677481666207314, 2.2476415324490517e-05, 8.039516978897154e-05], "target_probs": 0.9489344358444214}}


{"result": {"time": "2021-02-11 10:53:38.592070", "n_pass": [105, 16, 14], "n_token": 36, "loss": [0.14999446272850037, 0.29292455315589905], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def test_ascii_file_shelf(", "self", "#NEWLINE#", "#INDENT#", "s", "open", "(", "self", ")", "#NEWLINE#", "s", ")", "#NEWLINE#", "self", "s", "[", "'key1'", "#NEWLINE#", "s", ".", "close", "(", ")", "for", "f", "in", "(", "(", "f", ".", "fn", "+", "(", "f", ")"]}}
{"position": {"error_location": 29, "repair_targets": [2, 8, 14], "repair_candidates": [5, 11, 15, 19, 2, 8, 14, 25, 29, 34]}}
{"prediction": {"error_location": 0.8607127666473389, "repair_targets": [0.0008609671494923532, 0.03627828136086464, 0.7089391350746155], "repair_candidates": [0.0008609671494923532, 0.004492427222430706, 0.03627828136086464, 0.08971720933914185, 0.7089391350746155, 0.0019489411497488618, 0.048770971596241, 0.10855681449174881, 9.810191113501787e-05, 0.00033716182224452496], "target_probs": 0.7460784316062927}}


{"result": {"time": "2021-02-11 10:53:38.793300", "n_pass": [143, 19, 15], "n_token": 35, "loss": [0.0746058002114296, 0.05426332727074623], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def test_ascii_file_shelf(", "self", "#NEWLINE#", "#INDENT#", "s", "open", "(", "self", "#NEWLINE#", "s", ")", "#NEWLINE#", "self", "s", "[", "'key1'", "#NEWLINE#", "s", ".", "close", "(", ")", "for", "f", "in", "(", "(", "f", ".", "fn", "+", "(", "f", ")"]}}
{"position": {"error_location": 28, "repair_targets": [2, 8, 13], "repair_candidates": [5, 10, 14, 18, 2, 8, 13, 24, 28, 33]}}
{"prediction": {"error_location": 0.928109347820282, "repair_targets": [0.00035089824814349413, 0.017559761181473732, 0.9292719960212708], "repair_candidates": [0.00035089824814349413, 0.0015245391987264156, 0.017559761181473732, 0.0011904245475307107, 0.9292719960212708, 0.003029388142749667, 0.01613832637667656, 0.03077647276222706, 3.3941836591111496e-05, 0.00012419885024428368], "target_probs": 0.9471826553344727}}


{"result": {"time": "2021-02-11 10:53:38.859707", "n_pass": [144, 20, 16], "n_token": 34, "loss": [0.12250252813100815, 0.06824366003274918], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def test_ascii_file_shelf(", "self", "#NEWLINE#", "#INDENT#", "s", "open", "(", "self", "s", ")", "#NEWLINE#", "self", "s", "[", "'key1'", "#NEWLINE#", "s", ".", "close", "(", ")", "for", "f", "in", "(", "(", "f", ".", "fn", "+", "(", "f", ")"]}}
{"position": {"error_location": 27, "repair_targets": [2, 8, 12], "repair_candidates": [5, 9, 13, 17, 2, 8, 12, 23, 27, 32]}}
{"prediction": {"error_location": 0.8847035765647888, "repair_targets": [0.00029904316761530936, 0.05442008376121521, 0.8793137073516846], "repair_candidates": [0.00029904316761530936, 0.001287834718823433, 0.05442008376121521, 0.0004963902174495161, 0.8793137073516846, 0.005719429347664118, 0.014136959798634052, 0.044083692133426666, 5.660440365318209e-05, 0.00018625333905220032], "target_probs": 0.9340328574180603}}


{"result": {"time": "2021-02-11 10:53:38.992842", "n_pass": [147, 22, 17], "n_token": 32, "loss": [0.1589052826166153, 0.061392344534397125], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def test_ascii_file_shelf(", "self", "#NEWLINE#", "#INDENT#", "s", "open", "(", "self", "s", ")", "#NEWLINE#", "self", "s", "#NEWLINE#", "s", ".", "close", "(", ")", "for", "f", "in", "(", "(", "f", ".", "fn", "+", "(", "f", ")"]}}
{"position": {"error_location": 25, "repair_targets": [2, 8, 12], "repair_candidates": [5, 9, 13, 15, 2, 8, 12, 21, 25, 30]}}
{"prediction": {"error_location": 0.8530771732330322, "repair_targets": [0.0003680209629237652, 0.06684701889753342, 0.8732391595840454], "repair_candidates": [0.0003680209629237652, 0.0017994445515796542, 0.06684701889753342, 0.00048065997543744743, 0.8732391595840454, 0.0061014024540781975, 0.02717340551316738, 0.02384953387081623, 3.29266840708442e-05, 0.00010847402154468], "target_probs": 0.9404541850090027}}


{"result": {"time": "2021-02-11 10:53:39.057021", "n_pass": [149, 23, 18], "n_token": 30, "loss": [0.20246975123882294, 0.07106612622737885], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def test_ascii_file_shelf(", "self", "#NEWLINE#", "#INDENT#", "s", "open", "(", "self", "s", ")", "#NEWLINE#", "self", "s", "#NEWLINE#", "s", "(", ")", "for", "f", "in", "(", "(", "f", ".", "fn", "+", "(", "f", ")"]}}
{"position": {"error_location": 23, "repair_targets": [2, 8, 12], "repair_candidates": [5, 9, 13, 15, 2, 8, 12, 19, 23, 28]}}
{"prediction": {"error_location": 0.8167111277580261, "repair_targets": [0.0003709844022523612, 0.059771858155727386, 0.871257483959198], "repair_candidates": [0.0003709844022523612, 0.0018590306863188744, 0.059771858155727386, 0.0005743212532252073, 0.871257483959198, 0.012736923061311245, 0.013754761777818203, 0.039476796984672546, 6.553005368914455e-05, 0.00013232510536909103], "target_probs": 0.9314002990722656}}


{"result": {"time": "2021-02-11 10:53:39.120089", "n_pass": [150, 24, 19], "n_token": 28, "loss": [0.11543849110603333, 0.12166331708431244], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def test_ascii_file_shelf(", "self", "#NEWLINE#", "#INDENT#", "s", "open", "(", "self", "s", ")", "#NEWLINE#", "self", "s", "#NEWLINE#", "s", "for", "f", "in", "(", "(", "f", ".", "fn", "+", "(", "f", ")"]}}
{"position": {"error_location": 21, "repair_targets": [2, 8, 12], "repair_candidates": [5, 9, 13, 15, 2, 8, 12, 17, 21, 26]}}
{"prediction": {"error_location": 0.8909753561019897, "repair_targets": [0.0004385549109429121, 0.08260404318571091, 0.8024038076400757], "repair_candidates": [0.0004385549109429121, 0.001504869433119893, 0.08260404318571091, 0.0005624269833788276, 0.8024038076400757, 0.008787345141172409, 0.08797264844179153, 0.015598345547914505, 4.265380266588181e-05, 8.530032209819183e-05], "target_probs": 0.8854464292526245}}


{"result": {"time": "2021-02-11 10:53:39.182405", "n_pass": [152, 25, 20], "n_token": 26, "loss": [0.06595969200134277, 0.039159126579761505], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def test_ascii_file_shelf(", "self", "#NEWLINE#", "#INDENT#", "s", "open", "(", "self", "s", ")", "#NEWLINE#", "self", "s", "#NEWLINE#", "s", "for", "f", "(", "f", ".", "fn", "+", "(", "f", ")"]}}
{"position": {"error_location": 19, "repair_targets": [2, 8, 12], "repair_candidates": [5, 9, 13, 15, 2, 8, 12, 17, 19, 24]}}
{"prediction": {"error_location": 0.9361686110496521, "repair_targets": [0.0015840576961636543, 0.18365567922592163, 0.7763579487800598], "repair_candidates": [0.0015840576961636543, 0.002723375800997019, 0.18365567922592163, 0.0009507065988145769, 0.7763579487800598, 0.009517688304185867, 0.011545121669769287, 0.01287596020847559, 0.0004423568316269666, 0.00034722607233561575], "target_probs": 0.9615976810455322}}


{"result": {"time": "2021-02-11 10:53:39.243765", "n_pass": [154, 26, 21], "n_token": 24, "loss": [0.3785114288330078, 0.24794785678386688], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def test_ascii_file_shelf(", "self", "#NEWLINE#", "#INDENT#", "s", "open", "(", "self", "s", ")", "#NEWLINE#", "self", "s", "#NEWLINE#", "s", "for", "f", "(", "f", "+", "(", "f", ")"]}}
{"position": {"error_location": 19, "repair_targets": [2, 8, 12], "repair_candidates": [5, 9, 13, 15, 2, 8, 12, 17, 19, 22]}}
{"prediction": {"error_location": 0.6848801374435425, "repair_targets": [0.003113147569820285, 0.22268351912498474, 0.5546039938926697], "repair_candidates": [0.003113147569820285, 0.010329101234674454, 0.22268351912498474, 0.002105466788634658, 0.5546039938926697, 0.06539508700370789, 0.09087693691253662, 0.04810887947678566, 0.0008179760770872235, 0.0019659651443362236], "target_probs": 0.7804006338119507}}


{"result": {"time": "2021-02-11 10:53:39.366725", "n_pass": [157, 28, 22], "n_token": 23, "loss": [0.27254679799079895, 0.13747093081474304], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["def test_ascii_file_shelf(", "self", "#NEWLINE#", "#INDENT#", "s", "open", "(", "self", "s", ")", "#NEWLINE#", "self", "s", "#NEWLINE#", "s", "for", "f", "(", "f", "+", "(", "f", ")"]}}
{"position": {"error_location": 18, "repair_targets": [1, 7, 11], "repair_candidates": [4, 8, 12, 14, 1, 7, 11, 16, 18, 21]}}
{"prediction": {"error_location": 0.7614378333091736, "repair_targets": [0.042849600315093994, 0.10669010132551193, 0.7220199704170227], "repair_candidates": [0.042849600315093994, 0.014235256239771843, 0.10669010132551193, 0.0010088327107951045, 0.7220199704170227, 0.02796773426234722, 0.05728570744395256, 0.025616437196731567, 0.0005754487938247621, 0.0017509005265310407], "target_probs": 0.8715596795082092}}


{"result": {"time": "2021-02-11 10:53:39.426680", "n_pass": [158, 29, 23], "n_token": 22, "loss": [0.6224097609519958, 0.09747068583965302], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["self", "#NEWLINE#", "#INDENT#", "s", "open", "(", "self", "s", ")", "#NEWLINE#", "self", "s", "#NEWLINE#", "s", "for", "f", "(", "f", "+", "(", "f", ")"]}}
{"position": {"error_location": 17, "repair_targets": [0, 6, 10], "repair_candidates": [3, 7, 11, 13, 0, 6, 10, 15, 17, 20]}}
{"prediction": {"error_location": 0.5366497039794922, "repair_targets": [0.15945379436016083, 0.3379507064819336, 0.4097244441509247], "repair_candidates": [0.15945379436016083, 0.006569174118340015, 0.3379507064819336, 0.003944642376154661, 0.4097244441509247, 0.029963472858071327, 0.03881681710481644, 0.012440466322004795, 0.0003103245981037617, 0.000826123112346977], "target_probs": 0.9071289300918579}}


{"result": {"time": "2021-02-11 10:53:39.486267", "n_pass": [160, 30, 24], "n_token": 21, "loss": [0.5047500133514404, 0.07493426650762558], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["self", "#INDENT#", "s", "open", "(", "self", "s", ")", "#NEWLINE#", "self", "s", "#NEWLINE#", "s", "for", "f", "(", "f", "+", "(", "f", ")"]}}
{"position": {"error_location": 16, "repair_targets": [0, 5, 9], "repair_candidates": [2, 6, 10, 12, 0, 5, 9, 14, 16, 19]}}
{"prediction": {"error_location": 0.6036564707756042, "repair_targets": [0.14331109821796417, 0.4282510578632355, 0.3562423288822174], "repair_candidates": [0.14331109821796417, 0.007795435376465321, 0.4282510578632355, 0.008429531008005142, 0.3562423288822174, 0.021222639828920364, 0.022747818380594254, 0.010951155796647072, 0.0002892711490858346, 0.0007596122450195253], "target_probs": 0.9278044700622559}}


{"result": {"time": "2021-02-11 10:53:39.545109", "n_pass": [161, 31, 25], "n_token": 20, "loss": [0.36239752173423767, 0.07510825246572495], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["self", "s", "open", "(", "self", "s", ")", "#NEWLINE#", "self", "s", "#NEWLINE#", "s", "for", "f", "(", "f", "+", "(", "f", ")"]}}
{"position": {"error_location": 15, "repair_targets": [0, 4, 8], "repair_candidates": [1, 5, 9, 11, 0, 4, 8, 13, 15, 18]}}
{"prediction": {"error_location": 0.696005642414093, "repair_targets": [0.08028233051300049, 0.4331125020980835, 0.41424819827079773], "repair_candidates": [0.08028233051300049, 0.02297838404774666, 0.4331125020980835, 0.01276968140155077, 0.41424819827079773, 0.015524979680776596, 0.015499874018132687, 0.004983352031558752, 0.00018662269576452672, 0.00041412035352550447], "target_probs": 0.9276430606842041}}


{"result": {"time": "2021-02-11 10:53:39.603340", "n_pass": [163, 32, 26], "n_token": 19, "loss": [0.5012417435646057, 0.18281544744968414], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["self", "s", "(", "self", "s", ")", "#NEWLINE#", "self", "s", "#NEWLINE#", "s", "for", "f", "(", "f", "+", "(", "f", ")"]}}
{"position": {"error_location": 14, "repair_targets": [0, 3, 7], "repair_candidates": [1, 4, 8, 10, 0, 3, 7, 12, 14, 17]}}
{"prediction": {"error_location": 0.6057779788970947, "repair_targets": [0.12242339551448822, 0.3088794946670532, 0.40161898732185364], "repair_candidates": [0.12242339551448822, 0.0302948746830225, 0.3088794946670532, 0.07420075684785843, 0.40161898732185364, 0.0161901768296957, 0.036856431514024734, 0.008319607004523277, 0.0003719296946655959, 0.0008442570688202977], "target_probs": 0.8329218626022339}}


{"result": {"time": "2021-02-11 10:53:39.661360", "n_pass": [164, 33, 27], "n_token": 18, "loss": [0.4465080201625824, 0.5527448654174805], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["self", "s", "self", "s", ")", "#NEWLINE#", "self", "s", "#NEWLINE#", "s", "for", "f", "(", "f", "+", "(", "f", ")"]}}
{"position": {"error_location": 13, "repair_targets": [0, 2, 6], "repair_candidates": [1, 3, 7, 9, 0, 2, 6, 11, 13, 16]}}
{"prediction": {"error_location": 0.639858603477478, "repair_targets": [0.10988243669271469, 0.08078303188085556, 0.3847028911113739], "repair_candidates": [0.10988243669271469, 0.0352889746427536, 0.08078303188085556, 0.2590774595737457, 0.3847028911113739, 0.043762221932411194, 0.07414659857749939, 0.011315147392451763, 0.0002981467987410724, 0.0007430844707414508], "target_probs": 0.575368344783783}}


{"result": {"time": "2021-02-11 10:53:39.835389", "n_pass": [190, 36, 28], "n_token": 17, "loss": [0.31511229276657104, 0.5451692938804626], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["self", "s", "self", "s", "#NEWLINE#", "self", "s", "#NEWLINE#", "s", "for", "f", "(", "f", "+", "(", "f", ")"]}}
{"position": {"error_location": 12, "repair_targets": [0, 2, 5], "repair_candidates": [1, 3, 6, 8, 0, 2, 5, 10, 12, 15]}}
{"prediction": {"error_location": 0.7297070026397705, "repair_targets": [0.12706048786640167, 0.23054905235767365, 0.2221340835094452], "repair_candidates": [0.12706048786640167, 0.061046991497278214, 0.23054905235767365, 0.2809388339519501, 0.2221340835094452, 0.0290963314473629, 0.03332063928246498, 0.015020035207271576, 0.00020950130419805646, 0.000624045089352876], "target_probs": 0.5797436237335205}}


{"result": {"time": "2021-02-11 10:53:39.892432", "n_pass": [193, 37, 29], "n_token": 16, "loss": [0.5540416240692139, 0.3010813295841217], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["self", "s", "self", "s", "#NEWLINE#", "self", "s", "s", "for", "f", "(", "f", "+", "(", "f", ")"]}}
{"position": {"error_location": 11, "repair_targets": [0, 2, 5], "repair_candidates": [1, 3, 6, 7, 0, 2, 5, 9, 11, 14]}}
{"prediction": {"error_location": 0.5746227502822876, "repair_targets": [0.10503498464822769, 0.4915328621864319, 0.14344972372055054], "repair_candidates": [0.10503498464822769, 0.07460446655750275, 0.4915328621864319, 0.15186238288879395, 0.14344972372055054, 0.00726087624207139, 0.0032113755587488413, 0.022376764565706253, 0.00026234652614220977, 0.0004042351501993835], "target_probs": 0.7400175929069519}}


{"result": {"time": "2021-02-11 10:53:40.121934", "n_pass": [200, 41, 30], "n_token": 15, "loss": [0.198635995388031, 0.20439846813678741], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["self", "s", "self", "s", "#NEWLINE#", "self", "s", "s", "for", "f", "(", "f", "+", "f", ")"]}}
{"position": {"error_location": 11, "repair_targets": [0, 2, 5], "repair_candidates": [1, 3, 6, 7, 0, 2, 5, 9, 11, 13]}}
{"prediction": {"error_location": 0.8198481798171997, "repair_targets": [0.0783170834183693, 0.6759042143821716, 0.06091616675257683], "repair_candidates": [0.0783170834183693, 0.09112151712179184, 0.6759042143821716, 0.07570803910493851, 0.06091616675257683, 0.002481757663190365, 0.0015518332365900278, 0.013483657501637936, 0.0003460214356891811, 0.00016976744518615305], "target_probs": 0.815137505531311}}


{"result": {"time": "2021-02-11 10:53:40.178438", "n_pass": [202, 42, 31], "n_token": 14, "loss": [0.17047953605651855, 0.16979718208312988], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["self", "s", "self", "s", "#NEWLINE#", "self", "s", "s", "for", "f", "(", "f", "+", "f"]}}
{"position": {"error_location": 11, "repair_targets": [0, 2, 5], "repair_candidates": [1, 3, 6, 7, 0, 2, 5, 9, 11, 13]}}
{"prediction": {"error_location": 0.8432604074478149, "repair_targets": [0.059177059680223465, 0.5759750008583069, 0.20868387818336487], "repair_candidates": [0.059177059680223465, 0.06551250070333481, 0.5759750008583069, 0.07571615278720856, 0.20868387818336487, 0.006069540046155453, 0.0015940029406920075, 0.00705188000574708, 0.00014367845142260194, 7.632517372258008e-05], "target_probs": 0.8438359498977661}}




Minimal simplified tokens:

['self', 's', 'self', 's', '#NEWLINE#', 'self', 's', 's', 'for', 'f', '(', 'f', '+', 'f']
