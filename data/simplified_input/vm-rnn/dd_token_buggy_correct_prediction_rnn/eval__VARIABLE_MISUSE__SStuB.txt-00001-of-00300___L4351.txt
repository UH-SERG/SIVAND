
Original sample:

{"has_bug": true, "bug_kind": 1, "bug_kind_name": "VARIABLE_MISUSE", "source_tokens": ["#NEWLINE#", "@", "patch", "(", "'socket.socket'", ")", "#NEWLINE#", "@", "patch", "(", "'select.select'", ",", "return_value", "=", "(", "True", ",", "False", ",", "False", ")", ")", "#NEWLINE#", "def test_update_returns_if_template_render_fails(", "self", ",", "mock_select", ",", "mock_socket", ")", ":", "#NEWLINE#", "#INDENT#", "'Should return None if rendering the template fails.'", "#NEWLINE#", "test_value", "=", "'test_value'", "#NEWLINE#", "mock_socket", "=", "mock_socket", "(", ")", ".", "__enter__", "(", ")", "#NEWLINE#", "mock_socket", ".", "recv", ".", "return_value", "=", "test_value", ".", "encode", "(", ")", "#NEWLINE#", "config", "=", "copy", "(", "TEST_CONFIG", ")", "#NEWLINE#", "config", "[", "tcp", ".", "CONF_VALUE_TEMPLATE", "]", "=", "\"{{ this won't work\"", "#NEWLINE#", "sensor", "=", "tcp", ".", "Sensor", "(", "test_value", ".", "hass", ",", "config", ")", "#NEWLINE#", "assert", "(", "sensor", ".", "update", "(", ")", "is", "None", ")"], "error_location": [83], "repair_targets": [24], "repair_candidates": [28, 39, 41, 49, 77, 92, 61, 68, 87, 26, 24, 35, 55, 83], "provenances": [{"datasetProvenance": {"datasetName": "ETHPy150Open", "filepath": "home-assistant/home-assistant/tests/components/sensor/test_tcp.py", "license": "apache-2.0", "note": "license: bigquery_api"}}], "txt_file": "eval__VARIABLE_MISUSE__SStuB.txt-00001-of-00300", "js_count": 4351, "results": {"model": "rnn", "prob": {"loc": [[0.006170577369630337, 2.9704901294280717e-07, 1.735132926228289e-08, 6.686111664322425e-10, 2.857039604897693e-10, 3.2451267367727965e-11, 7.619894937249683e-09, 4.628545546836449e-09, 4.204351089498459e-09, 7.96697152694037e-10, 1.5209031256624428e-10, 1.1670736599356246e-10, 1.158608942120054e-08, 4.6045839363628716e-10, 2.0649197907118833e-08, 1.207028788030584e-07, 3.2602927024782957e-09, 9.514624110806835e-08, 3.825654459888028e-08, 2.296647352295622e-07, 4.181169543926444e-08, 1.307218777668595e-08, 4.594946645397613e-08, 1.1154651424760686e-08, 1.7800510931920144e-07, 1.4218518584740991e-09, 1.7400097931385972e-06, 1.6469690056197805e-09, 4.195207452539762e-07, 4.632855876707254e-09, 7.04609148804991e-10, 2.1416266093865488e-08, 5.522500678978304e-09, 5.947374259740457e-10, 1.8823305580895067e-08, 1.749428868436098e-08, 8.168875353931071e-09, 1.4499411804536066e-07, 4.844516343638361e-09, 4.072083115147507e-09, 9.732206152079925e-10, 2.0293033031748564e-08, 1.5814119791457415e-08, 1.1945415323566522e-08, 2.8565848353423462e-08, 5.022753768457733e-09, 5.86735726670895e-09, 2.471112203750181e-08, 1.1911924779894889e-08, 7.633325793676704e-08, 7.88463250245286e-09, 7.505008170483052e-09, 4.75932431243109e-08, 2.2029633672815407e-09, 2.189930237150861e-09, 5.123387722960615e-07, 4.759769467455044e-08, 3.0129838624048944e-09, 2.830346268467565e-08, 6.144684761011376e-08, 2.6682323905902194e-08, 2.128789944322307e-08, 2.6676371334133364e-08, 2.3064016829721368e-07, 1.4516725599378333e-08, 3.3794437968026614e-06, 1.4980315654611331e-07, 7.377378352657615e-08, 6.495650950455456e-07, 2.6595350277602847e-07, 4.9390302592655644e-05, 5.84386983248919e-09, 2.545548438703804e-09, 6.999374413396708e-09, 3.3847552316501606e-08, 3.773375567561743e-08, 1.7638841143252648e-07, 1.2423233108904697e-08, 2.394187514909163e-09, 1.0175845090998337e-06, 1.5929833807604155e-07, 1.1755510342936759e-08, 1.2127541992867918e-07, 0.9916444420814514, 1.9728443021449493e-06, 5.949967999185901e-06, 9.579979831642049e-08, 0.002103794366121292, 5.7371302375486266e-08, 6.812828701185936e-08, 4.830215338813559e-09, 1.954929729208743e-08, 1.804258090487565e-06, 2.610391680590851e-09, 4.790167373869281e-09, 3.3225126117031323e-06, 6.7919086177425925e-06, 7.38737867322925e-07, 1.7162768983780552e-07, 2.083355177262547e-08]], "pointer": [[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.9982990622520447, 0.0, 0.00019527299446053803, 0.0, 3.728250885615125e-05, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 4.07531661039684e-05, 0.0, 0.0, 0.0, 0.00024385066353715956, 0.0, 6.036719696567161e-06, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0007976020569913089, 0.0, 0.0, 0.0, 0.0, 0.0, 6.443501206376823e-06, 0.0, 0.0, 0.0, 0.0, 0.0, 0.00010444955114508048, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 7.576824282296002e-05, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.00019099775818176568, 0.0, 0.0, 0.0, 0.0, 0.0, 6.490190003205498e-07, 0.0, 0.0, 0.0, 3.262448728946765e-07, 0.0, 0.0, 0.0, 0.0, 1.4889936892359401e-06, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]], "target": [0.9982990622520447]}, "loss": [0.008390769362449646, 0.0017023859545588493], "acc": [0.0, 1.0, 1.0, 1.0]}}


Trace of simplified code(s):

{"result": {"time": "2021-02-11 10:53:46.985694", "n_pass": [1, 1, 1], "n_token": 100, "loss": [0.008390769362449646, 0.0017023859545588493], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "@", "patch", "(", "'socket.socket'", ")", "#NEWLINE#", "@", "patch", "(", "'select.select'", ",", "return_value", "=", "(", "True", ",", "False", ",", "False", ")", ")", "#NEWLINE#", "def test_update_returns_if_template_render_fails(", "self", ",", "mock_select", ",", "mock_socket", ")", ":", "#NEWLINE#", "#INDENT#", "'Should return None if rendering the template fails.'", "#NEWLINE#", "test_value", "=", "'test_value'", "#NEWLINE#", "mock_socket", "=", "mock_socket", "(", ")", ".", "__enter__", "(", ")", "#NEWLINE#", "mock_socket", ".", "recv", ".", "return_value", "=", "test_value", ".", "encode", "(", ")", "#NEWLINE#", "config", "=", "copy", "(", "TEST_CONFIG", ")", "#NEWLINE#", "config", "[", "tcp", ".", "CONF_VALUE_TEMPLATE", "]", "=", "\"{{ this won't work\"", "#NEWLINE#", "sensor", "=", "tcp", ".", "Sensor", "(", "test_value", ".", "hass", ",", "config", ")", "#NEWLINE#", "assert", "(", "sensor", ".", "update", "(", ")", "is", "None", ")"]}}
{"position": {"error_location": 83, "repair_targets": [24], "repair_candidates": [28, 39, 41, 49, 77, 92, 61, 68, 87, 26, 24, 35, 55, 83]}}
{"prediction": {"error_location": 0.9916444420814514, "repair_targets": [0.9982990622520447], "repair_candidates": [0.9982990622520447, 0.00019527299446053803, 3.728250885615125e-05, 4.07531661039684e-05, 0.00024385066353715956, 6.036719696567161e-06, 0.0007976020569913089, 6.443501206376823e-06, 0.00010444955114508048, 7.576824282296002e-05, 0.00019099775818176568, 6.490190003205498e-07, 3.262448728946765e-07, 1.4889936892359401e-06], "target_probs": 0.9982990622520447}}


{"result": {"time": "2021-02-11 10:53:47.081006", "n_pass": [20, 2, 2], "n_token": 88, "loss": [0.04040209949016571, 0.0029413404408842325], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["return_value", "=", "(", "True", ",", "False", ",", "False", ")", ")", "#NEWLINE#", "def test_update_returns_if_template_render_fails(", "self", ",", "mock_select", ",", "mock_socket", ")", ":", "#NEWLINE#", "#INDENT#", "'Should return None if rendering the template fails.'", "#NEWLINE#", "test_value", "=", "'test_value'", "#NEWLINE#", "mock_socket", "=", "mock_socket", "(", ")", ".", "__enter__", "(", ")", "#NEWLINE#", "mock_socket", ".", "recv", ".", "return_value", "=", "test_value", ".", "encode", "(", ")", "#NEWLINE#", "config", "=", "copy", "(", "TEST_CONFIG", ")", "#NEWLINE#", "config", "[", "tcp", ".", "CONF_VALUE_TEMPLATE", "]", "=", "\"{{ this won't work\"", "#NEWLINE#", "sensor", "=", "tcp", ".", "Sensor", "(", "test_value", ".", "hass", ",", "config", ")", "#NEWLINE#", "assert", "(", "sensor", ".", "update", "(", ")", "is", "None", ")"]}}
{"position": {"error_location": 71, "repair_targets": [12], "repair_candidates": [16, 27, 29, 37, 65, 80, 49, 56, 75, 14, 12, 23, 43, 71]}}
{"prediction": {"error_location": 0.9604032039642334, "repair_targets": [0.9970629811286926], "repair_candidates": [0.9970629811286926, 0.00019878093735314906, 3.560233017196879e-05, 6.172616122057661e-05, 0.00039412343176081777, 9.61206569627393e-06, 0.0012774515198543668, 1.0417472367407754e-05, 0.00019396502466406673, 0.00016667574527673423, 0.0005810727016068995, 8.591898676968412e-07, 5.752073093390209e-07, 6.2493122641171794e-06], "target_probs": 0.9970629811286926}}


{"result": {"time": "2021-02-11 10:53:47.263763", "n_pass": [42, 4, 3], "n_token": 82, "loss": [0.01930507831275463, 0.0030591143295168877], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": [",", "False", ")", ")", "#NEWLINE#", "def test_update_returns_if_template_render_fails(", "self", ",", "mock_select", ",", "mock_socket", ")", ":", "#NEWLINE#", "#INDENT#", "'Should return None if rendering the template fails.'", "#NEWLINE#", "test_value", "=", "'test_value'", "#NEWLINE#", "mock_socket", "=", "mock_socket", "(", ")", ".", "__enter__", "(", ")", "#NEWLINE#", "mock_socket", ".", "recv", ".", "return_value", "=", "test_value", ".", "encode", "(", ")", "#NEWLINE#", "config", "=", "copy", "(", "TEST_CONFIG", ")", "#NEWLINE#", "config", "[", "tcp", ".", "CONF_VALUE_TEMPLATE", "]", "=", "\"{{ this won't work\"", "#NEWLINE#", "sensor", "=", "tcp", ".", "Sensor", "(", "test_value", ".", "hass", ",", "config", ")", "#NEWLINE#", "assert", "(", "sensor", ".", "update", "(", ")", "is", "None", ")"]}}
{"position": {"error_location": 65, "repair_targets": [6], "repair_candidates": [10, 21, 23, 31, 59, 74, 43, 50, 69, 8, 6, 17, 37, 65]}}
{"prediction": {"error_location": 0.9808802008628845, "repair_targets": [0.9969455599784851], "repair_candidates": [0.9969455599784851, 0.0003192434960510582, 4.739450741908513e-05, 8.991400682134554e-05, 0.0004567090072669089, 8.674999662616756e-06, 0.0012244401732459664, 1.1987093785137404e-05, 0.0001925414107972756, 0.00013963310630060732, 0.0005516387755051255, 1.186907866213005e-06, 9.99597659756546e-07, 1.0105991350428667e-05], "target_probs": 0.9969455599784851}}


{"result": {"time": "2021-02-11 10:53:47.352636", "n_pass": [46, 5, 4], "n_token": 76, "loss": [0.02429848164319992, 0.0032493756152689457], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": [",", "False", ")", ")", "#NEWLINE#", "def test_update_returns_if_template_render_fails(", "self", ",", "mock_select", ",", "mock_socket", ")", ":", "#NEWLINE#", "#INDENT#", "'Should return None if rendering the template fails.'", "#NEWLINE#", "test_value", "=", "'test_value'", "#NEWLINE#", "mock_socket", "=", "mock_socket", "#NEWLINE#", "mock_socket", ".", "recv", ".", "return_value", "=", "test_value", ".", "encode", "(", ")", "#NEWLINE#", "config", "=", "copy", "(", "TEST_CONFIG", ")", "#NEWLINE#", "config", "[", "tcp", ".", "CONF_VALUE_TEMPLATE", "]", "=", "\"{{ this won't work\"", "#NEWLINE#", "sensor", "=", "tcp", ".", "Sensor", "(", "test_value", ".", "hass", ",", "config", ")", "#NEWLINE#", "assert", "(", "sensor", ".", "update", "(", ")", "is", "None", ")"]}}
{"position": {"error_location": 59, "repair_targets": [6], "repair_candidates": [10, 21, 23, 25, 53, 68, 37, 44, 63, 8, 6, 17, 31, 59]}}
{"prediction": {"error_location": 0.975994348526001, "repair_targets": [0.9967558979988098], "repair_candidates": [0.9967558979988098, 0.00035897360066883266, 6.386090535670519e-05, 0.00011546590394573286, 0.0011275249999016523, 3.236920917970565e-07, 0.0001938742061611265, 2.6149766199523583e-05, 0.00036312435986474156, 0.00022848258959129453, 0.0007514699827879667, 1.545478994557925e-06, 1.2500186130637303e-06, 1.21681259770412e-05], "target_probs": 0.9967558979988098}}


{"result": {"time": "2021-02-11 10:53:47.438021", "n_pass": [54, 6, 5], "n_token": 69, "loss": [0.03545092046260834, 0.003873329609632492], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": [",", "False", ")", ")", "#NEWLINE#", "def test_update_returns_if_template_render_fails(", "self", ",", "mock_select", ",", "mock_socket", ")", ":", "#NEWLINE#", "#INDENT#", "'Should return None if rendering the template fails.'", "#NEWLINE#", "test_value", "=", "'test_value'", "#NEWLINE#", "mock_socket", "=", "mock_socket", "#NEWLINE#", "mock_socket", ".", "recv", ".", "return_value", "=", "test_value", ".", "encode", "(", ")", "#NEWLINE#", "config", "=", "copy", "(", "TEST_CONFIG", ")", "#NEWLINE#", "config", "[", "tcp", ".", "CONF_VALUE_TEMPLATE", "]", "=", "\"{{ this won't work\"", "#NEWLINE#", "sensor", "=", "tcp", ".", "Sensor", "(", "test_value", ".", "hass", ",", "config", ")", "#NEWLINE#", "assert", "(", "sensor"]}}
{"position": {"error_location": 59, "repair_targets": [6], "repair_candidates": [10, 21, 23, 25, 53, 68, 37, 44, 63, 8, 6, 17, 31, 59]}}
{"prediction": {"error_location": 0.9651702046394348, "repair_targets": [0.9961341619491577], "repair_candidates": [0.9961341619491577, 0.0003607293765526265, 6.157240568427369e-05, 0.00011372573499102145, 0.0011664960766211152, 4.130059494400484e-07, 0.00026608779444359243, 3.20470571750775e-05, 0.00037849374348297715, 0.0002140821743523702, 0.0012688921997323632, 1.822912508941954e-06, 1.1036212299586623e-06, 3.9837735243963834e-07], "target_probs": 0.9961341619491577}}


{"result": {"time": "2021-02-11 10:53:47.606270", "n_pass": [88, 8, 6], "n_token": 66, "loss": [0.005210154689848423, 0.0009110546670854092], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": [")", "#NEWLINE#", "def test_update_returns_if_template_render_fails(", "self", ",", "mock_select", ",", "mock_socket", ")", ":", "#NEWLINE#", "#INDENT#", "'Should return None if rendering the template fails.'", "#NEWLINE#", "test_value", "=", "'test_value'", "#NEWLINE#", "mock_socket", "=", "mock_socket", "#NEWLINE#", "mock_socket", ".", "recv", ".", "return_value", "=", "test_value", ".", "encode", "(", ")", "#NEWLINE#", "config", "=", "copy", "(", "TEST_CONFIG", ")", "#NEWLINE#", "config", "[", "tcp", ".", "CONF_VALUE_TEMPLATE", "]", "=", "\"{{ this won't work\"", "#NEWLINE#", "sensor", "=", "tcp", ".", "Sensor", "(", "test_value", ".", "hass", ",", "config", ")", "#NEWLINE#", "assert", "(", "sensor"]}}
{"position": {"error_location": 56, "repair_targets": [3], "repair_candidates": [7, 18, 20, 22, 50, 65, 34, 41, 60, 5, 3, 14, 28, 56]}}
{"prediction": {"error_location": 0.9948034882545471, "repair_targets": [0.9990893602371216], "repair_candidates": [0.9990893602371216, 0.00012210631393827498, 3.714529157150537e-05, 2.6186000468442217e-05, 0.00024009295157156885, 2.1237721625766426e-07, 4.3366664613131434e-05, 1.0377342732681427e-05, 8.559324487578124e-05, 7.384878699667752e-05, 0.00027002047863788903, 1.0976522162309266e-06, 4.92939250307245e-07, 1.1889605389114877e-07], "target_probs": 0.9990893602371216}}


{"result": {"time": "2021-02-11 10:53:47.688058", "n_pass": [91, 9, 7], "n_token": 63, "loss": [0.004569445736706257, 0.0012320117093622684], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": [")", "#NEWLINE#", "def test_update_returns_if_template_render_fails(", "self", ",", "mock_select", ",", "mock_socket", ")", "'Should return None if rendering the template fails.'", "#NEWLINE#", "test_value", "=", "'test_value'", "#NEWLINE#", "mock_socket", "=", "mock_socket", "#NEWLINE#", "mock_socket", ".", "recv", ".", "return_value", "=", "test_value", ".", "encode", "(", ")", "#NEWLINE#", "config", "=", "copy", "(", "TEST_CONFIG", ")", "#NEWLINE#", "config", "[", "tcp", ".", "CONF_VALUE_TEMPLATE", "]", "=", "\"{{ this won't work\"", "#NEWLINE#", "sensor", "=", "tcp", ".", "Sensor", "(", "test_value", ".", "hass", ",", "config", ")", "#NEWLINE#", "assert", "(", "sensor"]}}
{"position": {"error_location": 53, "repair_targets": [3], "repair_candidates": [7, 15, 17, 19, 47, 62, 31, 38, 57, 5, 3, 11, 25, 53]}}
{"prediction": {"error_location": 0.9954408407211304, "repair_targets": [0.9987687468528748], "repair_candidates": [0.9987687468528748, 0.00013549291179515421, 3.376369932084344e-05, 3.512007970130071e-05, 0.00038840548950247467, 3.472833043360879e-07, 5.4733325669076294e-05, 1.6124766261782497e-05, 0.00012927234638482332, 0.00011010338494088501, 0.0003255250630900264, 1.521298372608726e-06, 7.378299642368802e-07, 1.4439115147979464e-07], "target_probs": 0.9987687468528748}}


{"result": {"time": "2021-02-11 10:53:47.767801", "n_pass": [93, 10, 8], "n_token": 60, "loss": [0.0035103862173855305, 0.0011466160649433732], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": [")", "#NEWLINE#", "def test_update_returns_if_template_render_fails(", "self", ",", "mock_select", ",", "mock_socket", ")", "'Should return None if rendering the template fails.'", "#NEWLINE#", "test_value", "mock_socket", "=", "mock_socket", "#NEWLINE#", "mock_socket", ".", "recv", ".", "return_value", "=", "test_value", ".", "encode", "(", ")", "#NEWLINE#", "config", "=", "copy", "(", "TEST_CONFIG", ")", "#NEWLINE#", "config", "[", "tcp", ".", "CONF_VALUE_TEMPLATE", "]", "=", "\"{{ this won't work\"", "#NEWLINE#", "sensor", "=", "tcp", ".", "Sensor", "(", "test_value", ".", "hass", ",", "config", ")", "#NEWLINE#", "assert", "(", "sensor"]}}
{"position": {"error_location": 50, "repair_targets": [3], "repair_candidates": [7, 12, 14, 16, 44, 59, 28, 35, 54, 5, 3, 11, 22, 50]}}
{"prediction": {"error_location": 0.9964956641197205, "repair_targets": [0.9988540410995483], "repair_candidates": [0.9988540410995483, 0.00014218622527550906, 3.772935087908991e-05, 0.00028314293012954295, 0.00011100043775513768, 3.368115812918404e-07, 0.0001736732228891924, 9.253005373466294e-06, 6.720687815686688e-05, 6.30934810033068e-05, 0.0002563267480581999, 1.1748101087505347e-06, 6.219360670911556e-07, 1.378432017418163e-07], "target_probs": 0.9988540410995483}}


{"result": {"time": "2021-02-11 10:53:47.845844", "n_pass": [96, 11, 9], "n_token": 57, "loss": [0.005254387855529785, 0.002110979286953807], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": [")", "#NEWLINE#", "def test_update_returns_if_template_render_fails(", "self", ",", "mock_select", ",", "mock_socket", ")", "'Should return None if rendering the template fails.'", "#NEWLINE#", "test_value", "mock_socket", "=", "mock_socket", "#NEWLINE#", "mock_socket", ".", "=", "test_value", ".", "encode", "(", ")", "#NEWLINE#", "config", "=", "copy", "(", "TEST_CONFIG", ")", "#NEWLINE#", "config", "[", "tcp", ".", "CONF_VALUE_TEMPLATE", "]", "=", "\"{{ this won't work\"", "#NEWLINE#", "sensor", "=", "tcp", ".", "Sensor", "(", "test_value", ".", "hass", ",", "config", ")", "#NEWLINE#", "assert", "(", "sensor"]}}
{"position": {"error_location": 47, "repair_targets": [3], "repair_candidates": [7, 12, 14, 16, 41, 56, 25, 32, 51, 5, 3, 11, 19, 47]}}
{"prediction": {"error_location": 0.9947595000267029, "repair_targets": [0.9978912472724915], "repair_candidates": [0.9978912472724915, 0.00014283991185948253, 3.8976890209596604e-05, 0.0003137454914394766, 0.00013728451449424028, 5.585838493971096e-07, 0.0010402320185676217, 1.082100880012149e-06, 0.0001108932337956503, 7.194089266704395e-05, 0.00024944436154328287, 1.0002519275076338e-06, 5.884716642867716e-07, 1.3807209597871406e-07], "target_probs": 0.9978912472724915}}


{"result": {"time": "2021-02-11 10:53:47.922864", "n_pass": [98, 12, 10], "n_token": 54, "loss": [0.005485482048243284, 0.0024909977801144123], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": [")", "#NEWLINE#", "def test_update_returns_if_template_render_fails(", "self", ",", "mock_select", ",", "mock_socket", ")", "'Should return None if rendering the template fails.'", "#NEWLINE#", "test_value", "mock_socket", "=", "mock_socket", "#NEWLINE#", "mock_socket", ".", "=", "test_value", ".", "#NEWLINE#", "config", "=", "copy", "(", "TEST_CONFIG", ")", "#NEWLINE#", "config", "[", "tcp", ".", "CONF_VALUE_TEMPLATE", "]", "=", "\"{{ this won't work\"", "#NEWLINE#", "sensor", "=", "tcp", ".", "Sensor", "(", "test_value", ".", "hass", ",", "config", ")", "#NEWLINE#", "assert", "(", "sensor"]}}
{"position": {"error_location": 44, "repair_targets": [3], "repair_candidates": [7, 12, 14, 16, 38, 53, 22, 29, 48, 5, 3, 11, 19, 44]}}
{"prediction": {"error_location": 0.994529664516449, "repair_targets": [0.9975121021270752], "repair_candidates": [0.9975121021270752, 0.00013795933045912534, 3.803775325650349e-05, 0.0003050119848921895, 0.0001411514967912808, 6.691685712212347e-07, 0.0012546570505946875, 8.353893008461455e-07, 0.0002913307398557663, 7.396326691377908e-05, 0.0002425381971988827, 9.703511523184716e-07, 5.952775268269761e-07, 1.3944560350864776e-07], "target_probs": 0.9975121021270752}}


{"result": {"time": "2021-02-11 10:53:48.000079", "n_pass": [100, 13, 11], "n_token": 51, "loss": [0.00423427764326334, 0.002211033133789897], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": [")", "#NEWLINE#", "def test_update_returns_if_template_render_fails(", "self", ",", "mock_select", ",", "mock_socket", ")", "'Should return None if rendering the template fails.'", "#NEWLINE#", "test_value", "mock_socket", "=", "mock_socket", "#NEWLINE#", "mock_socket", ".", "=", "test_value", ".", "#NEWLINE#", "config", "=", ")", "#NEWLINE#", "config", "[", "tcp", ".", "CONF_VALUE_TEMPLATE", "]", "=", "\"{{ this won't work\"", "#NEWLINE#", "sensor", "=", "tcp", ".", "Sensor", "(", "test_value", ".", "hass", ",", "config", ")", "#NEWLINE#", "assert", "(", "sensor"]}}
{"position": {"error_location": 41, "repair_targets": [3], "repair_candidates": [7, 12, 14, 16, 35, 50, 22, 26, 45, 5, 3, 11, 19, 41]}}
{"prediction": {"error_location": 0.9957746863365173, "repair_targets": [0.9977914094924927], "repair_candidates": [0.9977914094924927, 0.00013617589138448238, 3.743301931535825e-05, 0.0002960104320663959, 0.00013634470815304667, 6.205840463735512e-07, 0.0010272418148815632, 7.136538329177711e-07, 0.0002184951736126095, 0.00011522739805513993, 0.00023876194609329104, 8.70889266479935e-07, 5.358377279662818e-07, 1.3259183617719827e-07], "target_probs": 0.9977914094924927}}


{"result": {"time": "2021-02-11 10:53:48.074036", "n_pass": [102, 14, 12], "n_token": 48, "loss": [0.003691764548420906, 0.0025516492314636707], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": [")", "#NEWLINE#", "def test_update_returns_if_template_render_fails(", "self", ",", "mock_select", ",", "mock_socket", ")", "'Should return None if rendering the template fails.'", "#NEWLINE#", "test_value", "mock_socket", "=", "mock_socket", "#NEWLINE#", "mock_socket", ".", "=", "test_value", ".", "#NEWLINE#", "config", "=", ")", "#NEWLINE#", "config", "CONF_VALUE_TEMPLATE", "]", "=", "\"{{ this won't work\"", "#NEWLINE#", "sensor", "=", "tcp", ".", "Sensor", "(", "test_value", ".", "hass", ",", "config", ")", "#NEWLINE#", "assert", "(", "sensor"]}}
{"position": {"error_location": 38, "repair_targets": [3], "repair_candidates": [7, 12, 14, 16, 32, 47, 22, 26, 42, 5, 3, 11, 19, 38]}}
{"prediction": {"error_location": 0.9963148236274719, "repair_targets": [0.9974516034126282], "repair_candidates": [0.9974516034126282, 0.00012548257654998451, 3.548540917108767e-05, 0.0003014885005541146, 0.00014353154983837157, 6.141798394310172e-07, 0.0012630908749997616, 6.172425628392375e-07, 0.0002203296171501279, 4.502177398535423e-05, 0.00041077990317717195, 1.250713353329047e-06, 6.43726707494352e-07, 1.2128728599236638e-07], "target_probs": 0.9974516034126282}}


{"result": {"time": "2021-02-11 10:53:48.146133", "n_pass": [103, 15, 13], "n_token": 45, "loss": [0.0040039620362222195, 0.003623964497819543], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": [")", "#NEWLINE#", "def test_update_returns_if_template_render_fails(", "self", ",", "mock_select", ",", "mock_socket", ")", "'Should return None if rendering the template fails.'", "#NEWLINE#", "test_value", "mock_socket", "=", "mock_socket", "#NEWLINE#", "mock_socket", ".", "=", "test_value", ".", "#NEWLINE#", "config", "=", ")", "#NEWLINE#", "config", "\"{{ this won't work\"", "#NEWLINE#", "sensor", "=", "tcp", ".", "Sensor", "(", "test_value", ".", "hass", ",", "config", ")", "#NEWLINE#", "assert", "(", "sensor"]}}
{"position": {"error_location": 35, "repair_targets": [3], "repair_candidates": [7, 12, 14, 16, 29, 44, 22, 26, 39, 5, 3, 11, 19, 35]}}
{"prediction": {"error_location": 0.996004045009613, "repair_targets": [0.9963825941085815], "repair_candidates": [0.9963825941085815, 0.00013848884555045515, 3.801461571129039e-05, 0.0003127183299511671, 0.0001856815506471321, 8.650242193652957e-07, 0.002318507758900523, 6.951221394047025e-07, 0.0003097605367656797, 6.402629514923319e-05, 0.0002468230086378753, 1.0390075431132573e-06, 5.933040938543854e-07, 1.383840668722769e-07], "target_probs": 0.9963825941085815}}


{"result": {"time": "2021-02-11 10:53:48.217219", "n_pass": [105, 16, 14], "n_token": 42, "loss": [0.0006606780225411057, 0.004376616794615984], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": [")", "#NEWLINE#", "def test_update_returns_if_template_render_fails(", "self", ",", "mock_select", ",", "mock_socket", ")", "'Should return None if rendering the template fails.'", "#NEWLINE#", "test_value", "mock_socket", "=", "mock_socket", "#NEWLINE#", "mock_socket", ".", "=", "test_value", ".", "#NEWLINE#", "config", "=", ")", "#NEWLINE#", "config", "\"{{ this won't work\"", "#NEWLINE#", "sensor", "Sensor", "(", "test_value", ".", "hass", ",", "config", ")", "#NEWLINE#", "assert", "(", "sensor"]}}
{"position": {"error_location": 32, "repair_targets": [3], "repair_candidates": [7, 12, 14, 16, 29, 41, 22, 26, 36, 5, 3, 11, 19, 32]}}
{"prediction": {"error_location": 0.9993395209312439, "repair_targets": [0.9956329464912415], "repair_candidates": [0.9956329464912415, 0.00013289335765875876, 3.5576027585193515e-05, 0.0003605831298045814, 0.00022311232169158757, 9.394207722834835e-07, 0.003209456568583846, 6.029385986039415e-07, 0.00031183529063127935, 2.5933279175660573e-05, 6.38986166450195e-05, 1.6035991166063468e-06, 4.576891399210581e-07, 1.4029647843472048e-07], "target_probs": 0.9956329464912415}}


{"result": {"time": "2021-02-11 10:53:48.359557", "n_pass": [145, 18, 15], "n_token": 40, "loss": [0.26784446835517883, 0.03449930623173714], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": [")", "#NEWLINE#", "def test_update_returns_if_template_render_fails(", "self", ",", "mock_select", ",", "mock_socket", ")", "'Should return None if rendering the template fails.'", "#NEWLINE#", "test_value", "mock_socket", "=", "mock_socket", "#NEWLINE#", "mock_socket", ".", "=", "test_value", ".", "#NEWLINE#", "config", "=", ")", "#NEWLINE#", "config", "\"{{ this won't work\"", "#NEWLINE#", "sensor", "test_value", ".", "hass", ",", "config", ")", "#NEWLINE#", "assert", "(", "sensor"]}}
{"position": {"error_location": 30, "repair_targets": [3], "repair_candidates": [7, 12, 14, 16, 29, 39, 22, 26, 34, 5, 3, 11, 19, 30]}}
{"prediction": {"error_location": 0.7650267481803894, "repair_targets": [0.9660890102386475], "repair_candidates": [0.9660890102386475, 0.0010130536975339055, 0.0003524019557517022, 0.0030657697934657335, 0.004902528133243322, 3.841134002868785e-06, 0.016544194892048836, 4.463397999643348e-06, 0.004968202672898769, 9.170800331048667e-05, 0.0018141284817829728, 0.0011489709140732884, 4.401175885959674e-07, 1.2831753792852396e-06], "target_probs": 0.9660890102386475}}


{"result": {"time": "2021-02-11 10:53:48.496274", "n_pass": [148, 20, 16], "n_token": 38, "loss": [0.3344614505767822, 0.059212662279605865], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": [")", "#NEWLINE#", "def test_update_returns_if_template_render_fails(", "self", ",", "mock_select", ",", "mock_socket", ")", "'Should return None if rendering the template fails.'", "#NEWLINE#", "test_value", "mock_socket", "=", "mock_socket", "#NEWLINE#", "mock_socket", ".", "=", "test_value", ".", "#NEWLINE#", "config", "=", ")", "#NEWLINE#", "config", "\"{{ this won't work\"", "#NEWLINE#", "sensor", "test_value", ".", "hass", ",", "config", ")", "(", "sensor"]}}
{"position": {"error_location": 30, "repair_targets": [3], "repair_candidates": [7, 12, 14, 16, 29, 37, 22, 26, 34, 5, 3, 11, 19, 30]}}
{"prediction": {"error_location": 0.71572345495224, "repair_targets": [0.9425063133239746], "repair_candidates": [0.9425063133239746, 0.0017924412386491895, 0.0007682357681915164, 0.0030205189250409603, 0.00913931056857109, 6.14342116023181e-06, 0.0338587760925293, 5.965799118712312e-06, 0.006763376761227846, 8.161738514900208e-05, 0.0012770710745826364, 0.000768229947425425, 6.755633421562379e-07, 1.1238342267461121e-05], "target_probs": 0.9425063133239746}}


{"result": {"time": "2021-02-11 10:53:48.564949", "n_pass": [150, 21, 17], "n_token": 37, "loss": [0.8080874085426331, 0.0238137599080801], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def test_update_returns_if_template_render_fails(", "self", ",", "mock_select", ",", "mock_socket", ")", "'Should return None if rendering the template fails.'", "#NEWLINE#", "test_value", "mock_socket", "=", "mock_socket", "#NEWLINE#", "mock_socket", ".", "=", "test_value", ".", "#NEWLINE#", "config", "=", ")", "#NEWLINE#", "config", "\"{{ this won't work\"", "#NEWLINE#", "sensor", "test_value", ".", "hass", ",", "config", ")", "(", "sensor"]}}
{"position": {"error_location": 29, "repair_targets": [2], "repair_candidates": [6, 11, 13, 15, 28, 36, 21, 25, 33, 4, 2, 10, 18, 29]}}
{"prediction": {"error_location": 0.4457097053527832, "repair_targets": [0.9764675498008728], "repair_candidates": [0.9764675498008728, 0.00032856452162377536, 0.0001019502742565237, 0.0013452561106532812, 0.003940573427826166, 1.2115754088881658e-06, 0.012880351394414902, 2.206902536272537e-06, 0.003938247915357351, 3.6785186239285395e-05, 0.0006027401541359723, 0.00035038910573348403, 2.846553570634569e-07, 3.853228918160312e-06], "target_probs": 0.9764675498008728}}


{"result": {"time": "2021-02-11 10:53:48.838197", "n_pass": [156, 25, 18], "n_token": 36, "loss": [0.47194790840148926, 0.018286775797605515], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def test_update_returns_if_template_render_fails(", "self", ",", "mock_select", "mock_socket", ")", "'Should return None if rendering the template fails.'", "#NEWLINE#", "test_value", "mock_socket", "=", "mock_socket", "#NEWLINE#", "mock_socket", ".", "=", "test_value", ".", "#NEWLINE#", "config", "=", ")", "#NEWLINE#", "config", "\"{{ this won't work\"", "#NEWLINE#", "sensor", "test_value", ".", "hass", ",", "config", ")", "(", "sensor"]}}
{"position": {"error_location": 28, "repair_targets": [2], "repair_candidates": [5, 10, 12, 14, 27, 35, 20, 24, 32, 4, 2, 9, 17, 28]}}
{"prediction": {"error_location": 0.6237859725952148, "repair_targets": [0.9818794131278992], "repair_candidates": [0.9818794131278992, 0.0002670394314918667, 2.401235542492941e-05, 0.0009068544604815543, 0.002866345690563321, 8.582990176364547e-07, 0.012069550342857838, 8.458316074211325e-07, 0.0014619650319218636, 2.055400182143785e-05, 0.0003016091068275273, 0.00019866744696628302, 1.878585464964999e-07, 2.017871338466648e-06], "target_probs": 0.9818794131278992}}


{"result": {"time": "2021-02-11 10:53:48.905591", "n_pass": [158, 26, 19], "n_token": 35, "loss": [0.53908371925354, 0.017105918377637863], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def test_update_returns_if_template_render_fails(", "self", ",", "mock_select", "mock_socket", "'Should return None if rendering the template fails.'", "#NEWLINE#", "test_value", "mock_socket", "=", "mock_socket", "#NEWLINE#", "mock_socket", ".", "=", "test_value", ".", "#NEWLINE#", "config", "=", ")", "#NEWLINE#", "config", "\"{{ this won't work\"", "#NEWLINE#", "sensor", "test_value", ".", "hass", ",", "config", ")", "(", "sensor"]}}
{"position": {"error_location": 27, "repair_targets": [2], "repair_candidates": [5, 9, 11, 13, 26, 34, 19, 23, 31, 4, 2, 8, 16, 27]}}
{"prediction": {"error_location": 0.583282470703125, "repair_targets": [0.9830395579338074], "repair_candidates": [0.9830395579338074, 0.0001660972775425762, 1.191909541375935e-05, 0.000740487186703831, 0.0022251447662711143, 9.086965064852848e-07, 0.011809936724603176, 8.825549571156444e-07, 0.0015652562724426389, 1.7728771126712672e-05, 0.00024088314967229962, 0.00017930645844899118, 1.5412793175073602e-07, 1.6266933471342782e-06], "target_probs": 0.9830395579338074}}


{"result": {"time": "2021-02-11 10:53:49.104092", "n_pass": [167, 29, 20], "n_token": 33, "loss": [0.15356753766536713, 0.010417955927550793], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def test_update_returns_if_template_render_fails(", "self", ",", "mock_select", "mock_socket", "'Should return None if rendering the template fails.'", "#NEWLINE#", "test_value", "mock_socket", "=", "mock_socket", "#NEWLINE#", "mock_socket", ".", "=", "test_value", ".", "#NEWLINE#", "config", "=", "config", "\"{{ this won't work\"", "#NEWLINE#", "sensor", "test_value", ".", "hass", ",", "config", ")", "(", "sensor"]}}
{"position": {"error_location": 25, "repair_targets": [2], "repair_candidates": [5, 9, 11, 13, 24, 32, 19, 21, 29, 4, 2, 8, 16, 25]}}
{"prediction": {"error_location": 0.8576427698135376, "repair_targets": [0.9896361231803894], "repair_candidates": [0.9896361231803894, 0.0001571729953866452, 1.174628414446488e-05, 0.0006444064783863723, 0.0015824483707547188, 6.885244374643662e-07, 0.007288306951522827, 9.191306276079558e-07, 0.00041623329161666334, 7.941285389279074e-07, 0.00015447910118382424, 0.00010518828639760613, 1.2745607591568842e-07, 1.332034798906534e-06], "target_probs": 0.9896361231803894}}


{"result": {"time": "2021-02-11 10:53:49.236948", "n_pass": [174, 31, 21], "n_token": 32, "loss": [0.42830604314804077, 0.40683645009994507], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["def test_update_returns_if_template_render_fails(", "self", ",", "mock_select", "mock_socket", "'Should return None if rendering the template fails.'", "#NEWLINE#", "test_value", "mock_socket", "=", "mock_socket", "#NEWLINE#", "mock_socket", ".", "=", "test_value", ".", "#NEWLINE#", "config", "=", "config", "\"{{ this won't work\"", "#NEWLINE#", "sensor", "test_value", ".", "hass", ",", "config", ")", "(", "sensor"]}}
{"position": {"error_location": 24, "repair_targets": [1], "repair_candidates": [4, 8, 10, 12, 23, 31, 18, 20, 28, 3, 1, 7, 15, 24]}}
{"prediction": {"error_location": 0.6516119837760925, "repair_targets": [0.6657530665397644], "repair_candidates": [0.6657530665397644, 0.006585476920008659, 0.00021273538004606962, 0.031148303300142288, 0.0734732374548912, 2.8602702514035627e-05, 0.19801825284957886, 2.8133945306763053e-05, 0.01739010214805603, 4.171018008491956e-05, 0.004596351180225611, 0.0026947215665131807, 2.544720473451889e-06, 2.67688519670628e-05], "target_probs": 0.6657530665397644}}


{"result": {"time": "2021-02-11 10:53:49.629162", "n_pass": [220, 37, 22], "n_token": 31, "loss": [0.30372220277786255, 0.37034523487091064], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["def test_update_returns_if_template_render_fails(", "self", ",", "mock_select", "mock_socket", "'Should return None if rendering the template fails.'", "test_value", "mock_socket", "=", "mock_socket", "#NEWLINE#", "mock_socket", ".", "=", "test_value", ".", "#NEWLINE#", "config", "=", "config", "\"{{ this won't work\"", "#NEWLINE#", "sensor", "test_value", ".", "hass", ",", "config", ")", "(", "sensor"]}}
{"position": {"error_location": 23, "repair_targets": [1], "repair_candidates": [4, 7, 9, 11, 22, 30, 17, 19, 27, 3, 1, 6, 14, 23]}}
{"prediction": {"error_location": 0.7380658388137817, "repair_targets": [0.6904959082603455], "repair_candidates": [0.6904959082603455, 0.0026724322233349085, 0.0002040001272689551, 0.009203449822962284, 0.07637929171323776, 0.00010897721949731931, 0.201739102602005, 3.4561009670142084e-05, 0.01300688087940216, 2.590683288872242e-05, 0.003669763682410121, 0.0024379470851272345, 2.772608013401623e-06, 1.8981700122822076e-05], "target_probs": 0.6904959082603455}}


{"result": {"time": "2021-02-11 10:53:49.694273", "n_pass": [222, 38, 23], "n_token": 30, "loss": [0.27105194330215454, 0.30634626746177673], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["def test_update_returns_if_template_render_fails(", "self", ",", "mock_select", "mock_socket", "'Should return None if rendering the template fails.'", "test_value", "mock_socket", "mock_socket", "#NEWLINE#", "mock_socket", ".", "=", "test_value", ".", "#NEWLINE#", "config", "=", "config", "\"{{ this won't work\"", "#NEWLINE#", "sensor", "test_value", ".", "hass", ",", "config", ")", "(", "sensor"]}}
{"position": {"error_location": 22, "repair_targets": [1], "repair_candidates": [4, 7, 8, 10, 21, 29, 16, 18, 26, 3, 1, 6, 13, 22]}}
{"prediction": {"error_location": 0.7625768780708313, "repair_targets": [0.7361316680908203], "repair_candidates": [0.7361316680908203, 0.004973059985786676, 0.0003840197459794581, 0.0029845330864191055, 0.009943583980202675, 0.0004262750153429806, 0.2238216996192932, 4.1110601159743965e-05, 0.014621501788496971, 2.0387569747981615e-05, 0.0040453337132930756, 0.002582335378974676, 2.2075282686273567e-06, 2.2323305529425852e-05], "target_probs": 0.7361316680908203}}


{"result": {"time": "2021-02-11 10:53:49.758407", "n_pass": [224, 39, 24], "n_token": 29, "loss": [0.13690760731697083, 0.1308092325925827], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["def test_update_returns_if_template_render_fails(", "self", ",", "mock_select", "mock_socket", "'Should return None if rendering the template fails.'", "test_value", "mock_socket", "mock_socket", "mock_socket", ".", "=", "test_value", ".", "#NEWLINE#", "config", "=", "config", "\"{{ this won't work\"", "#NEWLINE#", "sensor", "test_value", ".", "hass", ",", "config", ")", "(", "sensor"]}}
{"position": {"error_location": 21, "repair_targets": [1], "repair_candidates": [4, 7, 8, 9, 20, 28, 15, 17, 25, 3, 1, 6, 12, 21]}}
{"prediction": {"error_location": 0.8720507025718689, "repair_targets": [0.877385139465332], "repair_candidates": [0.877385139465332, 0.004958889912813902, 0.0003005853504873812, 0.002164224861189723, 0.01563352532684803, 0.005529048386961222, 0.06948729604482651, 0.00011472848564153537, 0.017307138070464134, 3.290808672318235e-05, 0.0037006547208875418, 0.003365470329299569, 3.1598285659129033e-06, 1.7172294974443503e-05], "target_probs": 0.877385139465332}}


{"result": {"time": "2021-02-11 10:53:49.822597", "n_pass": [226, 40, 25], "n_token": 28, "loss": [0.15242303907871246, 0.07694586366415024], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["def test_update_returns_if_template_render_fails(", "self", ",", "mock_select", "mock_socket", "'Should return None if rendering the template fails.'", "test_value", "mock_socket", "mock_socket", "mock_socket", "=", "test_value", ".", "#NEWLINE#", "config", "=", "config", "\"{{ this won't work\"", "#NEWLINE#", "sensor", "test_value", ".", "hass", ",", "config", ")", "(", "sensor"]}}
{"position": {"error_location": 20, "repair_targets": [1], "repair_candidates": [4, 7, 8, 9, 19, 27, 14, 16, 24, 3, 1, 6, 11, 20]}}
{"prediction": {"error_location": 0.858625054359436, "repair_targets": [0.9259399771690369], "repair_candidates": [0.9259399771690369, 0.0048192087560892105, 0.0002771248109638691, 0.002256683073937893, 0.007918412797152996, 0.009348207153379917, 0.00619366904720664, 0.0003281064273323864, 0.02759542688727379, 7.795366400387138e-05, 0.00819846149533987, 0.007026111241430044, 6.665628461632878e-06, 1.4010578524903394e-05], "target_probs": 0.9259399771690369}}


{"result": {"time": "2021-02-11 10:53:49.888041", "n_pass": [227, 41, 26], "n_token": 27, "loss": [0.3320203423500061, 0.11411453783512115], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["def test_update_returns_if_template_render_fails(", "self", ",", "mock_select", "mock_socket", "'Should return None if rendering the template fails.'", "test_value", "mock_socket", "mock_socket", "mock_socket", "test_value", ".", "#NEWLINE#", "config", "=", "config", "\"{{ this won't work\"", "#NEWLINE#", "sensor", "test_value", ".", "hass", ",", "config", ")", "(", "sensor"]}}
{"position": {"error_location": 19, "repair_targets": [1], "repair_candidates": [4, 7, 8, 9, 18, 26, 13, 15, 23, 3, 1, 6, 10, 19]}}
{"prediction": {"error_location": 0.7174726724624634, "repair_targets": [0.8921557664871216], "repair_candidates": [0.8921557664871216, 0.0071461983025074005, 0.0004767595382872969, 0.003572444897145033, 0.0430963933467865, 0.010702296160161495, 7.554157491540536e-05, 0.0004086645785719156, 0.011809171177446842, 6.633327575400472e-05, 0.016387151554226875, 0.01406640000641346, 1.2656607395911124e-05, 2.433005465718452e-05], "target_probs": 0.8921557664871216}}


{"result": {"time": "2021-02-11 10:53:49.950253", "n_pass": [229, 42, 27], "n_token": 26, "loss": [0.12471694499254227, 0.12252701818943024], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["def test_update_returns_if_template_render_fails(", "self", ",", "mock_select", "mock_socket", "'Should return None if rendering the template fails.'", "test_value", "mock_socket", "mock_socket", "mock_socket", "test_value", "#NEWLINE#", "config", "=", "config", "\"{{ this won't work\"", "#NEWLINE#", "sensor", "test_value", ".", "hass", ",", "config", ")", "(", "sensor"]}}
{"position": {"error_location": 18, "repair_targets": [1], "repair_candidates": [4, 7, 8, 9, 17, 25, 12, 14, 22, 3, 1, 6, 10, 18]}}
{"prediction": {"error_location": 0.8827467560768127, "repair_targets": [0.8846819996833801], "repair_candidates": [0.8846819996833801, 0.0058358474634587765, 0.00040655414341017604, 0.0029558350797742605, 0.03804733604192734, 0.04093506559729576, 0.00038573588244616985, 0.0002657942532096058, 0.0053111170418560505, 1.7889471564558335e-05, 0.012792452238500118, 0.008338898420333862, 6.070569270377746e-06, 1.9235169020248577e-05], "target_probs": 0.8846819996833801}}


{"result": {"time": "2021-02-11 10:53:50.012060", "n_pass": [230, 43, 28], "n_token": 25, "loss": [0.6231169700622559, 0.05942820757627487], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["def test_update_returns_if_template_render_fails(", "self", ",", "mock_select", "mock_socket", "'Should return None if rendering the template fails.'", "test_value", "mock_socket", "mock_socket", "mock_socket", "test_value", "config", "=", "config", "\"{{ this won't work\"", "#NEWLINE#", "sensor", "test_value", ".", "hass", ",", "config", ")", "(", "sensor"]}}
{"position": {"error_location": 17, "repair_targets": [1], "repair_candidates": [4, 7, 8, 9, 16, 24, 11, 13, 21, 3, 1, 6, 10, 17]}}
{"prediction": {"error_location": 0.536270260810852, "repair_targets": [0.9423031806945801], "repair_candidates": [0.9423031806945801, 0.004084382671862841, 0.00028378149727359414, 0.002241993322968483, 0.020683402195572853, 0.004316241480410099, 4.8465833970112726e-05, 0.0003649340651463717, 0.002090464113280177, 2.2645486751571298e-05, 0.012112284079194069, 0.01143391989171505, 4.43076760348049e-06, 9.798040991881862e-06], "target_probs": 0.9423031806945801}}


{"result": {"time": "2021-02-11 10:53:50.135154", "n_pass": [234, 45, 29], "n_token": 24, "loss": [0.5307605862617493, 0.06429536640644073], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["def test_update_returns_if_template_render_fails(", "self", ",", "mock_select", "mock_socket", "'Should return None if rendering the template fails.'", "test_value", "mock_socket", "mock_socket", "mock_socket", "test_value", "config", "=", "config", "#NEWLINE#", "sensor", "test_value", ".", "hass", ",", "config", ")", "(", "sensor"]}}
{"position": {"error_location": 16, "repair_targets": [1], "repair_candidates": [4, 7, 8, 9, 15, 23, 11, 13, 20, 3, 1, 6, 10, 16]}}
{"prediction": {"error_location": 0.5881574153900146, "repair_targets": [0.9377279877662659], "repair_candidates": [0.9377279877662659, 0.0035708975046873093, 0.00028221678803674877, 0.0016682685818523169, 0.018300341442227364, 0.007185658439993858, 0.0001423526555299759, 0.003477334976196289, 0.021781770512461662, 3.637234385678312e-06, 0.002700446406379342, 0.003129007527604699, 1.1644525329757016e-05, 1.843187965278048e-05], "target_probs": 0.9377279877662659}}


{"result": {"time": "2021-02-11 10:53:50.196105", "n_pass": [235, 46, 30], "n_token": 23, "loss": [0.08375155925750732, 0.021495789289474487], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["def test_update_returns_if_template_render_fails(", "self", ",", "mock_select", "mock_socket", "'Should return None if rendering the template fails.'", "test_value", "mock_socket", "mock_socket", "mock_socket", "test_value", "config", "=", "config", "sensor", "test_value", ".", "hass", ",", "config", ")", "(", "sensor"]}}
{"position": {"error_location": 15, "repair_targets": [1], "repair_candidates": [4, 7, 8, 9, 14, 22, 11, 13, 19, 3, 1, 6, 10, 15]}}
{"prediction": {"error_location": 0.9196597337722778, "repair_targets": [0.9787335991859436], "repair_candidates": [0.9787335991859436, 0.00426437146961689, 0.00027812476037070155, 0.0022265624720603228, 0.010522501543164253, 0.001454811543226242, 3.025856494787149e-05, 0.0003418539999984205, 0.0016557085327804089, 4.0073893615044653e-05, 2.5198836738127284e-05, 0.00033958529820665717, 3.237835699110292e-05, 5.513245923793875e-05], "target_probs": 0.9787335991859436}}


{"result": {"time": "2021-02-11 10:53:50.439548", "n_pass": [242, 50, 31], "n_token": 22, "loss": [0.060359351336956024, 0.025559592992067337], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["def test_update_returns_if_template_render_fails(", "self", ",", "mock_select", "mock_socket", "'Should return None if rendering the template fails.'", "test_value", "mock_socket", "mock_socket", "mock_socket", "test_value", "config", "=", "config", "sensor", "test_value", ".", "hass", ",", "config", "(", "sensor"]}}
{"position": {"error_location": 15, "repair_targets": [1], "repair_candidates": [4, 7, 8, 9, 14, 21, 11, 13, 19, 3, 1, 6, 10, 15]}}
{"prediction": {"error_location": 0.941426157951355, "repair_targets": [0.9747642874717712], "repair_candidates": [0.9747642874717712, 0.004974007606506348, 0.0002782069204840809, 0.0027401272673159838, 0.012479516677558422, 0.0016579313669353724, 3.295300848549232e-05, 0.0003211730218026787, 0.00206825602799654, 5.2491985115921125e-05, 4.21018194174394e-05, 0.000560009095352143, 2.1336692952900194e-05, 7.563802682852838e-06], "target_probs": 0.9747642874717712}}


{"result": {"time": "2021-02-11 10:53:50.499471", "n_pass": [243, 51, 32], "n_token": 21, "loss": [0.11418896913528442, 0.02332591637969017], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["def test_update_returns_if_template_render_fails(", "self", ",", "mock_select", "mock_socket", "'Should return None if rendering the template fails.'", "test_value", "mock_socket", "mock_socket", "mock_socket", "test_value", "config", "=", "config", "sensor", "test_value", ".", "hass", ",", "config", "sensor"]}}
{"position": {"error_location": 15, "repair_targets": [1], "repair_candidates": [4, 7, 8, 9, 14, 20, 11, 13, 19, 3, 1, 6, 10, 15]}}
{"prediction": {"error_location": 0.8920892477035522, "repair_targets": [0.9769440293312073], "repair_candidates": [0.9769440293312073, 0.00479645561426878, 0.0003027754428330809, 0.00253378227353096, 0.010057537816464901, 0.0015180440386757255, 3.2428572012577206e-05, 0.0005065984441898763, 0.00245866971090436, 4.265111419954337e-05, 5.7637989812064916e-05, 0.0007235310040414333, 1.923740273923613e-05, 6.661539828201057e-06], "target_probs": 0.9769440293312073}}


{"result": {"time": "2021-02-11 10:53:50.620735", "n_pass": [247, 53, 33], "n_token": 20, "loss": [0.44965994358062744, 0.567686915397644], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["def test_update_returns_if_template_render_fails(", "self", "mock_select", "mock_socket", "'Should return None if rendering the template fails.'", "test_value", "mock_socket", "mock_socket", "mock_socket", "test_value", "config", "=", "config", "sensor", "test_value", ".", "hass", ",", "config", "sensor"]}}
{"position": {"error_location": 14, "repair_targets": [1], "repair_candidates": [3, 6, 7, 8, 13, 19, 10, 12, 18, 2, 1, 5, 9, 14]}}
{"prediction": {"error_location": 0.6378450989723206, "repair_targets": [0.5668350458145142], "repair_candidates": [0.5668350458145142, 0.33566129207611084, 0.003986319061368704, 0.019619733095169067, 0.04834423586726189, 0.005624890327453613, 0.00011617683776421472, 0.002890189876779914, 0.014032947830855846, 0.00019696549861691892, 0.00018283180543221533, 0.0024362767580896616, 5.446537397801876e-05, 1.861632517830003e-05], "target_probs": 0.5668350458145142}}




Minimal simplified tokens:

['def test_update_returns_if_template_render_fails(', 'self', 'mock_select', 'mock_socket', "'Should return None if rendering the template fails.'", 'test_value', 'mock_socket', 'mock_socket', 'mock_socket', 'test_value', 'config', '=', 'config', 'sensor', 'test_value', '.', 'hass', ',', 'config', 'sensor']
