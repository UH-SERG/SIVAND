
Original sample:

{"has_bug": true, "bug_kind": 1, "bug_kind_name": "VARIABLE_MISUSE", "source_tokens": ["#NEWLINE#", "def test_writeSequenceUnicode(", "self", ")", ":", "#NEWLINE#", "#INDENT#", "'\\n        L{_pollingfile._PollableWritePipe.writeSequence} raises a C{TypeError}\\n        if unicode data is part of the data sequence to be appended to the\\n        output buffer.\\n        '", "#NEWLINE#", "p", "=", "_pollingfile", ".", "_PollableWritePipe", "(", "1", ",", "(", "lambda", ":", "None", ")", ")", "#NEWLINE#", "self", ".", "assertRaises", "(", "TypeError", ",", "p", ".", "writeSequence", ",", "[", "'test'", "]", ")", "#NEWLINE#", "self", ".", "assertRaises", "(", "TypeError", ",", "self", ".", "writeSequence", ",", "(", "'test'", ",", ")", ")"], "error_location": [45], "repair_targets": [9, 30], "repair_candidates": [9, 30, 2, 24, 39, 45], "provenances": [{"datasetProvenance": {"datasetName": "ETHPy150Open", "filepath": "nlloyd/SubliminalCollaborator/libs/twisted/internet/test/test_pollingfile.py", "license": "apache-2.0", "note": "license: bigquery_api"}}], "txt_file": "eval__VARIABLE_MISUSE__SStuB.txt-00000-of-00300", "js_count": 1707, "results": {"model": "rnn", "prob": {"loc": [[5.583388883678708e-06, 1.3346539585318284e-12, 7.1034285224758076e-12, 6.761216884759377e-14, 2.6616446744645757e-14, 1.0013308541709232e-12, 2.0191205478414798e-12, 4.510015191167005e-12, 8.661504673213027e-12, 2.2487154499595263e-11, 1.2333129309483049e-12, 2.952826524960095e-11, 1.789182951100754e-12, 3.239516809102824e-14, 4.4996333590542614e-13, 2.92514878985628e-09, 4.279044295545792e-13, 3.4997393871805116e-11, 8.269052109710628e-10, 7.872734853354296e-14, 4.883821212026129e-13, 6.220319940554442e-14, 3.395651408709746e-14, 8.952119102435818e-14, 1.2416874169488001e-12, 7.150522714086463e-14, 1.8651237238681562e-13, 9.354058428171202e-15, 5.937718199067188e-12, 2.788606151549189e-12, 5.236701738908778e-08, 1.1361990341629546e-11, 1.7242871627048961e-12, 3.7268266250833904e-10, 3.928563724331369e-11, 3.605582152288456e-11, 1.426853513813997e-11, 2.46196899672535e-12, 4.494935239990339e-12, 4.683644583280966e-10, 3.7048801526662345e-12, 4.572398015767476e-11, 1.7367297920969915e-13, 4.230618355638427e-10, 4.0761735653482845e-10, 0.9999895095825195, 4.8086308197525796e-06, 1.6699109650630817e-08, 2.9939098422637755e-10, 7.096137011330939e-10, 5.570299776991305e-10, 1.690286660638307e-10, 1.8081743879960754e-09, 8.694049646873481e-11]], "pointer": [[0.0, 0.0, 2.409528292446339e-07, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.8486340045928955, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 4.877027208749496e-07, 0.0, 0.0, 0.0, 0.0, 0.0, 0.15136459469795227, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 2.5532726155574892e-08, 0.0, 0.0, 0.0, 0.0, 0.0, 5.594569074673927e-07, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]], "target": [0.9999985694885254]}, "loss": [1.0490362910786644e-05, 1.4305124977909145e-06], "acc": [0.0, 1.0, 1.0, 1.0]}}


Trace of simplified code(s):

{"result": {"time": "2021-02-11 10:04:30.842799", "n_pass": [1, 1, 1], "n_token": 54, "loss": [1.0490362910786644e-05, 1.4305124977909145e-06], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def test_writeSequenceUnicode(", "self", ")", ":", "#NEWLINE#", "#INDENT#", "'\\n        L{_pollingfile._PollableWritePipe.writeSequence} raises a C{TypeError}\\n        if unicode data is part of the data sequence to be appended to the\\n        output buffer.\\n        '", "#NEWLINE#", "p", "=", "_pollingfile", ".", "_PollableWritePipe", "(", "1", ",", "(", "lambda", ":", "None", ")", ")", "#NEWLINE#", "self", ".", "assertRaises", "(", "TypeError", ",", "p", ".", "writeSequence", ",", "[", "'test'", "]", ")", "#NEWLINE#", "self", ".", "assertRaises", "(", "TypeError", ",", "self", ".", "writeSequence", ",", "(", "'test'", ",", ")", ")"]}}
{"position": {"error_location": 45, "repair_targets": [9, 30], "repair_candidates": [9, 30, 2, 24, 39, 45]}}
{"prediction": {"error_location": 0.9999895095825195, "repair_targets": [0.8486340045928955, 0.15136459469795227], "repair_candidates": [2.409528292446339e-07, 0.8486340045928955, 4.877027208749496e-07, 0.15136459469795227, 2.5532726155574892e-08, 5.594569074673927e-07], "target_probs": 0.9999985694885254}}


{"result": {"time": "2021-02-11 10:04:30.915840", "n_pass": [22, 2, 2], "n_token": 47, "loss": [1.4662635294371285e-05, 2.98023678624304e-06], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def test_writeSequenceUnicode(", "self", ")", ":", "#NEWLINE#", "#INDENT#", "'\\n        L{_pollingfile._PollableWritePipe.writeSequence} raises a C{TypeError}\\n        if unicode data is part of the data sequence to be appended to the\\n        output buffer.\\n        '", "#NEWLINE#", "p", "=", "_pollingfile", ":", "None", ")", ")", "#NEWLINE#", "self", ".", "assertRaises", "(", "TypeError", ",", "p", ".", "writeSequence", ",", "[", "'test'", "]", ")", "#NEWLINE#", "self", ".", "assertRaises", "(", "TypeError", ",", "self", ".", "writeSequence", ",", "(", "'test'", ",", ")", ")"]}}
{"position": {"error_location": 38, "repair_targets": [9, 23], "repair_candidates": [9, 23, 2, 17, 32, 38]}}
{"prediction": {"error_location": 0.9999853372573853, "repair_targets": [0.4070165753364563, 0.5929804444313049], "repair_candidates": [2.1728392312070355e-06, 0.4070165753364563, 4.3803638050121663e-07, 0.5929804444313049, 1.419469253249872e-08, 3.56390785327676e-07], "target_probs": 0.9999970197677612}}


{"result": {"time": "2021-02-11 10:04:30.985221", "n_pass": [27, 3, 3], "n_token": 40, "loss": [0.0003738896339200437, 0.000104313570773229], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def test_writeSequenceUnicode(", "self", ")", ":", "#NEWLINE#", "#INDENT#", "'\\n        L{_pollingfile._PollableWritePipe.writeSequence} raises a C{TypeError}\\n        if unicode data is part of the data sequence to be appended to the\\n        output buffer.\\n        '", "#NEWLINE#", "p", "=", "_pollingfile", ":", "None", ")", ")", "#NEWLINE#", "self", ".", "assertRaises", "(", "TypeError", ",", "p", ".", "writeSequence", ",", "[", "'test'", "]", ")", "#NEWLINE#", "self", ".", "assertRaises", "(", "TypeError", ",", "self", "."]}}
{"position": {"error_location": 38, "repair_targets": [9, 23], "repair_candidates": [9, 23, 2, 17, 32, 38]}}
{"prediction": {"error_location": 0.9996261596679688, "repair_targets": [0.8222293853759766, 0.1776662915945053], "repair_candidates": [8.617693674750626e-05, 0.8222293853759766, 1.053747928381199e-05, 0.1776662915945053, 1.389180852129357e-06, 6.238238711375743e-06], "target_probs": 0.9998956918716431}}


{"result": {"time": "2021-02-11 10:04:31.052821", "n_pass": [47, 4, 4], "n_token": 37, "loss": [0.00022909401741344482, 1.6808651707833633e-05], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def test_writeSequenceUnicode(", "self", "#INDENT#", "'\\n        L{_pollingfile._PollableWritePipe.writeSequence} raises a C{TypeError}\\n        if unicode data is part of the data sequence to be appended to the\\n        output buffer.\\n        '", "#NEWLINE#", "p", "=", "_pollingfile", ":", "None", ")", ")", "#NEWLINE#", "self", ".", "assertRaises", "(", "TypeError", ",", "p", ".", "writeSequence", ",", "[", "'test'", "]", ")", "#NEWLINE#", "self", ".", "assertRaises", "(", "TypeError", ",", "self", "."]}}
{"position": {"error_location": 35, "repair_targets": [6, 20], "repair_candidates": [6, 20, 2, 14, 29, 35]}}
{"prediction": {"error_location": 0.9997709393501282, "repair_targets": [0.7259448766708374, 0.27403831481933594], "repair_candidates": [6.006513103784528e-06, 0.7259448766708374, 6.073862550692866e-06, 0.27403831481933594, 7.988476795617316e-07, 3.9584942896908615e-06], "target_probs": 0.9999831914901733}}


{"result": {"time": "2021-02-11 10:04:31.118397", "n_pass": [48, 5, 5], "n_token": 34, "loss": [0.000985494232736528, 0.001159803825430572], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def test_writeSequenceUnicode(", "self", "p", "=", "_pollingfile", ":", "None", ")", ")", "#NEWLINE#", "self", ".", "assertRaises", "(", "TypeError", ",", "p", ".", "writeSequence", ",", "[", "'test'", "]", ")", "#NEWLINE#", "self", ".", "assertRaises", "(", "TypeError", ",", "self", "."]}}
{"position": {"error_location": 32, "repair_targets": [3, 17], "repair_candidates": [3, 17, 2, 11, 26, 32]}}
{"prediction": {"error_location": 0.9990149736404419, "repair_targets": [0.18058419227600098, 0.818256676197052], "repair_candidates": [0.001048382604494691, 0.18058419227600098, 7.468735566362739e-05, 0.818256676197052, 7.78637968323892e-06, 2.8254709832253866e-05], "target_probs": 0.998840868473053}}


{"result": {"time": "2021-02-11 10:04:31.185679", "n_pass": [50, 6, 6], "n_token": 31, "loss": [0.000990496133454144, 0.00026163901202380657], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def test_writeSequenceUnicode(", "self", "p", "=", "_pollingfile", ")", "#NEWLINE#", "self", ".", "assertRaises", "(", "TypeError", ",", "p", ".", "writeSequence", ",", "[", "'test'", "]", ")", "#NEWLINE#", "self", ".", "assertRaises", "(", "TypeError", ",", "self", "."]}}
{"position": {"error_location": 29, "repair_targets": [3, 14], "repair_candidates": [3, 14, 2, 8, 23, 29]}}
{"prediction": {"error_location": 0.9990100860595703, "repair_targets": [0.03320520743727684, 0.9665331840515137], "repair_candidates": [0.000223086797632277, 0.03320520743727684, 2.4114408006425947e-05, 0.9665331840515137, 3.111350906692678e-06, 1.1398043170629535e-05], "target_probs": 0.9997383952140808}}


{"result": {"time": "2021-02-11 10:04:31.310555", "n_pass": [54, 8, 7], "n_token": 27, "loss": [0.001657065935432911, 0.0054354299791157246], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def test_writeSequenceUnicode(", "self", "p", "=", "_pollingfile", ")", "#NEWLINE#", "self", ".", "assertRaises", "(", "TypeError", ",", "p", "'test'", "]", ")", "#NEWLINE#", "self", ".", "assertRaises", "(", "TypeError", ",", "self", "."]}}
{"position": {"error_location": 25, "repair_targets": [3, 14], "repair_candidates": [3, 14, 2, 8, 19, 25]}}
{"prediction": {"error_location": 0.9983443021774292, "repair_targets": [0.8302547335624695, 0.1643245965242386], "repair_candidates": [0.004854051861912012, 0.8302547335624695, 0.0003760865656659007, 0.1643245965242386, 4.302652450860478e-05, 0.00014746560191269964], "target_probs": 0.9945793151855469}}


{"result": {"time": "2021-02-11 10:04:31.370283", "n_pass": [55, 9, 8], "n_token": 23, "loss": [0.0015574480639770627, 0.006872912868857384], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def test_writeSequenceUnicode(", "self", "p", "=", "_pollingfile", ")", "#NEWLINE#", "self", ".", "assertRaises", "(", "TypeError", ",", "p", "self", ".", "assertRaises", "(", "TypeError", ",", "self", "."]}}
{"position": {"error_location": 21, "repair_targets": [3, 14], "repair_candidates": [3, 14, 2, 8, 15, 21]}}
{"prediction": {"error_location": 0.9984437823295593, "repair_targets": [0.9921019673347473, 0.0010486916871741414], "repair_candidates": [0.006410114001482725, 0.9921019673347473, 0.00015991408145055175, 0.0010486916871741414, 2.112834590661805e-05, 0.0002581351436674595], "target_probs": 0.9931506514549255}}


{"result": {"time": "2021-02-11 10:04:31.429104", "n_pass": [61, 10, 9], "n_token": 20, "loss": [0.5925847291946411, 0.1791508048772812], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def test_writeSequenceUnicode(", "self", "p", "=", "_pollingfile", ")", "#NEWLINE#", "self", "TypeError", ",", "p", "self", ".", "assertRaises", "(", "TypeError", ",", "self", "."]}}
{"position": {"error_location": 18, "repair_targets": [3, 11], "repair_candidates": [3, 11, 2, 8, 12, 18]}}
{"prediction": {"error_location": 0.5528963804244995, "repair_targets": [0.8340530395507812, 0.0019267797470092773], "repair_candidates": [0.006357969716191292, 0.8340530395507812, 0.10808657109737396, 0.0019267797470092773, 0.00022236851509660482, 0.04935320094227791], "target_probs": 0.8359798192977905}}


{"result": {"time": "2021-02-11 10:04:31.487181", "n_pass": [83, 11, 10], "n_token": 18, "loss": [0.6027711629867554, 0.05683612450957298], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def test_writeSequenceUnicode(", "self", "p", "=", "_pollingfile", ")", "#NEWLINE#", "self", "TypeError", ",", "p", "self", ".", "TypeError", ",", "self", "."]}}
{"position": {"error_location": 16, "repair_targets": [3, 11], "repair_candidates": [3, 11, 2, 8, 12, 16]}}
{"prediction": {"error_location": 0.5472928881645203, "repair_targets": [0.93133944272995, 0.013409406878054142], "repair_candidates": [0.004602082539349794, 0.93133944272995, 0.03648042306303978, 0.013409406878054142, 0.004268626682460308, 0.009900006465613842], "target_probs": 0.9447488784790039}}


{"result": {"time": "2021-02-11 10:04:31.602880", "n_pass": [86, 13, 11], "n_token": 17, "loss": [0.029668718576431274, 0.02597322128713131], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["def test_writeSequenceUnicode(", "self", "p", "=", "_pollingfile", ")", "#NEWLINE#", "self", "TypeError", ",", "p", "self", ".", "TypeError", ",", "self", "."]}}
{"position": {"error_location": 15, "repair_targets": [2, 10], "repair_candidates": [2, 10, 1, 7, 11, 15]}}
{"prediction": {"error_location": 0.970767080783844, "repair_targets": [0.9739738702774048, 0.00038733112160116434], "repair_candidates": [0.021606862545013428, 0.9739738702774048, 0.0026968105230480433, 0.00038733112160116434, 0.00036108845961280167, 0.0009740244713611901], "target_probs": 0.9743611812591553}}


{"result": {"time": "2021-02-11 10:04:31.715592", "n_pass": [90, 15, 12], "n_token": 15, "loss": [0.11596771329641342, 0.24323879182338715], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["def test_writeSequenceUnicode(", "self", "p", ")", "#NEWLINE#", "self", "TypeError", ",", "p", "self", ".", "TypeError", ",", "self", "."]}}
{"position": {"error_location": 13, "repair_targets": [2, 8], "repair_candidates": [2, 8, 1, 5, 9, 13]}}
{"prediction": {"error_location": 0.890504002571106, "repair_targets": [0.7367457151412964, 0.04733852297067642], "repair_candidates": [0.0203899797052145, 0.7367457151412964, 0.10740009695291519, 0.04733852297067642, 0.013472693040966988, 0.07465294003486633], "target_probs": 0.7840842604637146}}


{"result": {"time": "2021-02-11 10:04:31.995230", "n_pass": [114, 20, 13], "n_token": 14, "loss": [0.17460408806800842, 0.05858607962727547], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["def test_writeSequenceUnicode(", "self", "p", ")", "#NEWLINE#", "self", "TypeError", "p", "self", ".", "TypeError", ",", "self", "."]}}
{"position": {"error_location": 12, "repair_targets": [2, 7], "repair_candidates": [2, 7, 1, 5, 8, 12]}}
{"prediction": {"error_location": 0.8397893309593201, "repair_targets": [0.8742629289627075, 0.06883411109447479], "repair_candidates": [0.01362092886120081, 0.8742629289627075, 0.005434098653495312, 0.06883411109447479, 0.009269781410694122, 0.028578124940395355], "target_probs": 0.9430970549583435}}


{"result": {"time": "2021-02-11 10:04:32.104785", "n_pass": [117, 22, 14], "n_token": 13, "loss": [0.01320580393075943, 0.025492027401924133], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["def test_writeSequenceUnicode(", "self", "p", ")", "#NEWLINE#", "self", "TypeError", "p", "self", ".", ",", "self", "."]}}
{"position": {"error_location": 11, "repair_targets": [2, 7], "repair_candidates": [2, 7, 1, 5, 8, 11]}}
{"prediction": {"error_location": 0.9868811368942261, "repair_targets": [0.961536169052124, 0.013293972238898277], "repair_candidates": [0.013906012289226055, 0.961536169052124, 0.003520228201523423, 0.013293972238898277, 0.0032585179433226585, 0.004485165234655142], "target_probs": 0.974830150604248}}


{"result": {"time": "2021-02-11 10:04:32.216037", "n_pass": [120, 24, 15], "n_token": 12, "loss": [0.027733903378248215, 0.006255662068724632], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["def test_writeSequenceUnicode(", "self", "p", ")", "#NEWLINE#", "self", "TypeError", "p", "self", ".", ",", "self"]}}
{"position": {"error_location": 11, "repair_targets": [2, 7], "repair_candidates": [2, 7, 1, 5, 8, 11]}}
{"prediction": {"error_location": 0.9726471304893494, "repair_targets": [0.9916309714317322, 0.0021328642033040524], "repair_candidates": [0.0055660768412053585, 0.9916309714317322, 9.882378071779385e-05, 0.0021328642033040524, 0.00017747021047398448, 0.0003936952562071383], "target_probs": 0.9937638640403748}}


{"result": {"time": "2021-02-11 10:04:32.269777", "n_pass": [121, 25, 16], "n_token": 11, "loss": [0.09760062396526337, 0.31150001287460327], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["self", "p", ")", "#NEWLINE#", "self", "TypeError", "p", "self", ".", ",", "self"]}}
{"position": {"error_location": 10, "repair_targets": [1, 6], "repair_candidates": [1, 6, 0, 4, 7, 10]}}
{"prediction": {"error_location": 0.907011091709137, "repair_targets": [0.7098507285118103, 0.02249685302376747], "repair_candidates": [0.26605257391929626, 0.7098507285118103, 0.00020529009634628892, 0.02249685302376747, 0.0002386849810136482, 0.0011558679398149252], "target_probs": 0.7323476076126099}}


{"result": {"time": "2021-02-11 10:04:32.323246", "n_pass": [124, 26, 17], "n_token": 10, "loss": [0.22236037254333496, 0.6603525280952454], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["self", "p", "#NEWLINE#", "self", "TypeError", "p", "self", ".", ",", "self"]}}
{"position": {"error_location": 9, "repair_targets": [1, 5], "repair_candidates": [1, 5, 0, 3, 6, 9]}}
{"prediction": {"error_location": 0.800626814365387, "repair_targets": [0.3598209619522095, 0.1568482220172882], "repair_candidates": [0.476743221282959, 0.3598209619522095, 0.001035828609019518, 0.1568482220172882, 0.0007814841228537261, 0.004770281258970499], "target_probs": 0.5166691541671753}}


{"result": {"time": "2021-02-11 10:04:32.376604", "n_pass": [125, 27, 18], "n_token": 9, "loss": [0.1116039901971817, 0.2228287309408188], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["self", "p", "self", "TypeError", "p", "self", ".", ",", "self"]}}
{"position": {"error_location": 8, "repair_targets": [1, 4], "repair_candidates": [1, 4, 0, 2, 5, 8]}}
{"prediction": {"error_location": 0.8943983912467957, "repair_targets": [0.009068245068192482, 0.7911836504936218], "repair_candidates": [0.19202381372451782, 0.009068245068192482, 0.0005342144868336618, 0.7911836504936218, 0.001144251087680459, 0.006045732647180557], "target_probs": 0.8002519011497498}}


{"result": {"time": "2021-02-11 10:04:32.481001", "n_pass": [130, 29, 19], "n_token": 8, "loss": [0.05324473977088928, 0.011569109745323658], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["self", "p", "self", "TypeError", "p", "self", ",", "self"]}}
{"position": {"error_location": 7, "repair_targets": [1, 4], "repair_candidates": [1, 4, 0, 2, 5, 7]}}
{"prediction": {"error_location": 0.9481479525566101, "repair_targets": [0.0007155092898756266, 0.9877820611000061], "repair_candidates": [0.01024235412478447, 0.0007155092898756266, 7.651805208297446e-05, 0.9877820611000061, 0.0010467045940458775, 0.00013687431055586785], "target_probs": 0.9884975552558899}}




Minimal simplified tokens:

['self', 'p', 'self', 'TypeError', 'p', 'self', ',', 'self']
