
Original sample:

{"has_bug": true, "bug_kind": 1, "bug_kind_name": "VARIABLE_MISUSE", "source_tokens": ["#NEWLINE#", "def moveRedWindowToSlice(", "self", ",", "newSlice", ")", ":", "#NEWLINE#", "#INDENT#", "' Moves the red display to the specified RAS slice\\n        :param newSlice: slice to jump (RAS format)\\n        :return:\\n        '", "#NEWLINE#", "redNodeSliceNode", "=", "slicer", ".", "app", ".", "layoutManager", "(", ")", ".", "sliceWidget", "(", "'Red'", ")", ".", "sliceLogic", "(", ")", ".", "GetSliceNode", "(", ")", "#NEWLINE#", "redNodeSliceNode", ".", "JumpSlice", "(", "0", ",", "0", ",", "self", ")"], "error_location": [42], "repair_targets": [4], "repair_candidates": [11, 34, 4, 2, 42], "provenances": [{"datasetProvenance": {"datasetName": "ETHPy150Open", "filepath": "acil-bwh/SlicerCIP/Scripted/CIP_PAARatio/CIP_PAARatio.py", "license": "bsd-3-clause", "note": "license: bigquery_api"}}], "txt_file": "eval__VARIABLE_MISUSE__SStuB.txt-00001-of-00300", "js_count": 3854, "results": {"model": "rnn", "prob": {"loc": [[0.0002289249823661521, 3.5029906753081264e-10, 3.2575511732524376e-10, 2.447714557082814e-12, 1.8857728711907384e-09, 4.1688780899606925e-11, 2.4272040974326892e-11, 2.8344679936509465e-09, 8.218070668419841e-10, 7.771824850344444e-11, 4.6983528179112e-09, 4.247059648410101e-10, 6.057900708844599e-11, 6.265258889470715e-08, 4.368738357185542e-11, 4.959778698854223e-10, 3.7480027414993344e-10, 1.1814400568965766e-09, 3.803601433816084e-09, 6.122538476205364e-09, 3.272773385631922e-09, 3.1847997572498343e-09, 1.029313301259549e-09, 4.850428680924779e-08, 5.317352669287345e-10, 3.3132472321284467e-09, 7.788923950258209e-10, 1.1671348332242815e-09, 1.5991683532945444e-09, 6.806749830445824e-09, 1.0073581968583767e-09, 2.3475775989822978e-08, 2.733137534960406e-06, 1.883369193933504e-08, 1.1615921557961428e-08, 2.59645904776562e-09, 6.648751549320764e-10, 4.068513526078732e-09, 0.00023722369223833084, 1.7467279844751715e-09, 0.0001314965629717335, 9.71748348455037e-10, 0.9993976354598999, 1.7194058727909578e-06]], "pointer": [[0.0, 0.0, 1.464696106268093e-05, 0.0, 0.9990938901901245, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0008627062779851258, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 4.088708465133095e-06, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 2.467450758558698e-05, 0.0]], "target": [0.9990938901901245]}, "loss": [0.000602421467192471, 0.0009065205813385546], "acc": [0.0, 1.0, 1.0, 1.0]}}


Trace of simplified code(s):

{"result": {"time": "2021-02-11 10:47:29.297871", "n_pass": [1, 1, 1], "n_token": 44, "loss": [0.000602421467192471, 0.0009065205813385546], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def moveRedWindowToSlice(", "self", ",", "newSlice", ")", ":", "#NEWLINE#", "#INDENT#", "' Moves the red display to the specified RAS slice\\n        :param newSlice: slice to jump (RAS format)\\n        :return:\\n        '", "#NEWLINE#", "redNodeSliceNode", "=", "slicer", ".", "app", ".", "layoutManager", "(", ")", ".", "sliceWidget", "(", "'Red'", ")", ".", "sliceLogic", "(", ")", ".", "GetSliceNode", "(", ")", "#NEWLINE#", "redNodeSliceNode", ".", "JumpSlice", "(", "0", ",", "0", ",", "self", ")"]}}
{"position": {"error_location": 42, "repair_targets": [4], "repair_candidates": [11, 34, 4, 2, 42]}}
{"prediction": {"error_location": 0.9993976354598999, "repair_targets": [0.9990938901901245], "repair_candidates": [1.464696106268093e-05, 0.9990938901901245, 0.0008627062779851258, 4.088708465133095e-06, 2.467450758558698e-05], "target_probs": 0.9990938901901245}}


{"result": {"time": "2021-02-11 10:47:29.363498", "n_pass": [10, 2, 2], "n_token": 33, "loss": [0.0052443076856434345, 0.00022419820015784353], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def moveRedWindowToSlice(", "self", ",", "newSlice", ")", ":", "#NEWLINE#", "#INDENT#", "' Moves the red display to the specified RAS slice\\n        :param newSlice: slice to jump (RAS format)\\n        :return:\\n        '", "#NEWLINE#", "redNodeSliceNode", "=", "slicer", ".", "app", ".", "layoutManager", "(", ")", ".", "sliceWidget", "#NEWLINE#", "redNodeSliceNode", ".", "JumpSlice", "(", "0", ",", "0", ",", "self", ")"]}}
{"position": {"error_location": 31, "repair_targets": [4], "repair_candidates": [11, 23, 4, 2, 31]}}
{"prediction": {"error_location": 0.9947695136070251, "repair_targets": [0.9997758269309998], "repair_candidates": [2.34429826377891e-05, 0.9997758269309998, 0.00015558901941403747, 8.188494007299596e-07, 4.431395063875243e-05], "target_probs": 0.9997758269309998}}


{"result": {"time": "2021-02-11 10:47:29.428901", "n_pass": [22, 3, 3], "n_token": 28, "loss": [0.2405424416065216, 0.11032605916261673], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def moveRedWindowToSlice(", "self", ",", "newSlice", "#NEWLINE#", "redNodeSliceNode", "=", "slicer", ".", "app", ".", "layoutManager", "(", ")", ".", "sliceWidget", "#NEWLINE#", "redNodeSliceNode", ".", "JumpSlice", "(", "0", ",", "0", ",", "self", ")"]}}
{"position": {"error_location": 26, "repair_targets": [4], "repair_candidates": [6, 18, 4, 2, 26]}}
{"prediction": {"error_location": 0.7862012982368469, "repair_targets": [0.8955420851707458], "repair_candidates": [0.000771453429479152, 0.8955420851707458, 0.07432408630847931, 2.2163152607390657e-05, 0.029340269044041634], "target_probs": 0.8955420851707458}}


{"result": {"time": "2021-02-11 10:47:29.610287", "n_pass": [40, 6, 4], "n_token": 25, "loss": [0.06227054074406624, 0.16445539891719818], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def moveRedWindowToSlice(", "self", ",", "newSlice", "#NEWLINE#", "redNodeSliceNode", "=", "slicer", ".", "(", ")", ".", "sliceWidget", "#NEWLINE#", "redNodeSliceNode", ".", "JumpSlice", "(", "0", ",", "0", ",", "self", ")"]}}
{"position": {"error_location": 23, "repair_targets": [4], "repair_candidates": [6, 15, 4, 2, 23]}}
{"prediction": {"error_location": 0.9396287202835083, "repair_targets": [0.8483555912971497], "repair_candidates": [0.0003745033754967153, 0.8483555912971497, 0.14219532907009125, 2.370279617025517e-05, 0.009050899185240269], "target_probs": 0.8483555912971497}}


{"result": {"time": "2021-02-11 10:47:29.669917", "n_pass": [42, 7, 5], "n_token": 22, "loss": [0.002651748713105917, 0.32076993584632874], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def moveRedWindowToSlice(", "self", ",", "newSlice", "#NEWLINE#", "redNodeSliceNode", "=", "slicer", ".", "(", ")", ".", "sliceWidget", "#NEWLINE#", "redNodeSliceNode", "0", ",", "0", ",", "self", ")"]}}
{"position": {"error_location": 20, "repair_targets": [4], "repair_candidates": [6, 15, 4, 2, 20]}}
{"prediction": {"error_location": 0.9973516464233398, "repair_targets": [0.725590169429779], "repair_candidates": [0.0005815112381242216, 0.725590169429779, 0.27278727293014526, 0.0007003382197581232, 0.0003406778851058334], "target_probs": 0.725590169429779}}


{"result": {"time": "2021-02-11 10:47:29.789335", "n_pass": [45, 9, 6], "n_token": 20, "loss": [0.06959880888462067, 0.1865704208612442], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["self", ",", "newSlice", "#NEWLINE#", "redNodeSliceNode", "=", "slicer", ".", "(", ")", ".", "sliceWidget", "#NEWLINE#", "redNodeSliceNode", "0", ",", "0", ",", "self", ")"]}}
{"position": {"error_location": 18, "repair_targets": [2], "repair_candidates": [4, 13, 2, 0, 18]}}
{"prediction": {"error_location": 0.9327679872512817, "repair_targets": [0.8298001289367676], "repair_candidates": [0.11912354081869125, 0.8298001289367676, 0.04744046926498413, 0.0014909816673025489, 0.0021447816397994757], "target_probs": 0.8298001289367676}}


{"result": {"time": "2021-02-11 10:47:29.846469", "n_pass": [48, 10, 7], "n_token": 17, "loss": [0.4557778835296631, 0.5280266404151917], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["self", ",", "newSlice", "#NEWLINE#", "redNodeSliceNode", "(", ")", ".", "sliceWidget", "#NEWLINE#", "redNodeSliceNode", "0", ",", "0", ",", "self", ")"]}}
{"position": {"error_location": 15, "repair_targets": [2], "repair_candidates": [4, 10, 2, 0, 15]}}
{"prediction": {"error_location": 0.633954644203186, "repair_targets": [0.5897676348686218], "repair_candidates": [0.36021390557289124, 0.5897676348686218, 0.005350408609956503, 0.0005915153888054192, 0.04407655447721481], "target_probs": 0.5897676348686218}}


{"result": {"time": "2021-02-11 10:47:29.902136", "n_pass": [49, 11, 8], "n_token": 14, "loss": [0.09411772340536118, 0.6333437561988831], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["self", ",", "newSlice", "#NEWLINE#", "redNodeSliceNode", "sliceWidget", "#NEWLINE#", "redNodeSliceNode", "0", ",", "0", ",", "self", ")"]}}
{"position": {"error_location": 12, "repair_targets": [2], "repair_candidates": [4, 7, 2, 0, 12]}}
{"prediction": {"error_location": 0.910175621509552, "repair_targets": [0.5308139324188232], "repair_candidates": [0.44420796632766724, 0.5308139324188232, 0.004637682344764471, 0.0042158919386565685, 0.016124580055475235], "target_probs": 0.5308139324188232}}


{"result": {"time": "2021-02-11 10:47:30.011223", "n_pass": [66, 13, 9], "n_token": 13, "loss": [0.3391071856021881, 0.5303652882575989], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["self", ",", "newSlice", "#NEWLINE#", "redNodeSliceNode", "#NEWLINE#", "redNodeSliceNode", "0", ",", "0", ",", "self", ")"]}}
{"position": {"error_location": 11, "repair_targets": [2], "repair_candidates": [4, 6, 2, 0, 11]}}
{"prediction": {"error_location": 0.7124060988426208, "repair_targets": [0.5883899927139282], "repair_candidates": [0.38560590147972107, 0.5883899927139282, 0.004686378408223391, 0.003973392304033041, 0.01734442450106144], "target_probs": 0.5883899927139282}}


{"result": {"time": "2021-02-11 10:47:30.336866", "n_pass": [84, 19, 10], "n_token": 12, "loss": [0.4156991243362427, 0.690109133720398], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["self", ",", "newSlice", "#NEWLINE#", "redNodeSliceNode", "#NEWLINE#", "redNodeSliceNode", "0", "0", ",", "self", ")"]}}
{"position": {"error_location": 10, "repair_targets": [2], "repair_candidates": [4, 6, 2, 0, 10]}}
{"prediction": {"error_location": 0.6598788499832153, "repair_targets": [0.5015213489532471], "repair_candidates": [0.47697487473487854, 0.5015213489532471, 0.008234645240008831, 0.003071579383686185, 0.010197543539106846], "target_probs": 0.5015213489532471}}


{"result": {"time": "2021-02-11 10:47:30.501012", "n_pass": [88, 22, 11], "n_token": 11, "loss": [0.1074463278055191, 0.5495200157165527], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["self", ",", "newSlice", "#NEWLINE#", "redNodeSliceNode", "#NEWLINE#", "redNodeSliceNode", "0", "0", ",", "self"]}}
{"position": {"error_location": 10, "repair_targets": [2], "repair_candidates": [4, 6, 2, 0, 10]}}
{"prediction": {"error_location": 0.8981247544288635, "repair_targets": [0.5772268176078796], "repair_candidates": [0.410025954246521, 0.5772268176078796, 0.006973039824515581, 0.002259115455672145, 0.0035151035990566015], "target_probs": 0.5772268176078796}}


{"result": {"time": "2021-02-11 10:47:30.713336", "n_pass": [96, 26, 12], "n_token": 10, "loss": [0.4591018259525299, 0.5797507166862488], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["self", ",", "newSlice", "#NEWLINE#", "redNodeSliceNode", "#NEWLINE#", "redNodeSliceNode", "0", ",", "self"]}}
{"position": {"error_location": 9, "repair_targets": [2], "repair_candidates": [4, 6, 2, 0, 9]}}
{"prediction": {"error_location": 0.6318508982658386, "repair_targets": [0.5600379705429077], "repair_candidates": [0.42228034138679504, 0.5600379705429077, 0.006216205190867186, 0.00634554959833622, 0.005119951441884041], "target_probs": 0.5600379705429077}}




Minimal simplified tokens:

['self', ',', 'newSlice', '#NEWLINE#', 'redNodeSliceNode', '#NEWLINE#', 'redNodeSliceNode', '0', ',', 'self']
