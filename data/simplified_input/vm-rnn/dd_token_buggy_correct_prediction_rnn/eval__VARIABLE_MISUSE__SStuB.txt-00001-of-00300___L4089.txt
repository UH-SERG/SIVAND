
Original sample:

{"has_bug": true, "bug_kind": 1, "bug_kind_name": "VARIABLE_MISUSE", "source_tokens": ["#NEWLINE#", "def test_get_import_name_without_alias(", "self", ")", ":", "#NEWLINE#", "#INDENT#", "\"\\n        Test that function get_name_without_alias() will work on a string.\\n        - Note: This isn't truly needed when pipreqs is walking the AST to find imports\\n        \"", "#NEWLINE#", "import_name_with_alias", "=", "'requests as R'", "#NEWLINE#", "expected_import_name_without_alias", "=", "'requests'", "#NEWLINE#", "import_name_without_aliases", "=", "pipreqs", ".", "get_name_without_alias", "(", "self", ")", "#NEWLINE#", "self", ".", "assertEqual", "(", "import_name_without_aliases", ",", "expected_import_name_without_alias", ")"], "error_location": [23], "repair_targets": [9], "repair_candidates": [2, 23, 26, 9, 17, 30, 13, 32], "provenances": [{"datasetProvenance": {"datasetName": "ETHPy150Open", "filepath": "bndr/pipreqs/tests/test_pipreqs.py", "license": "apache-2.0", "note": "license: bigquery_api"}}], "txt_file": "eval__VARIABLE_MISUSE__SStuB.txt-00001-of-00300", "js_count": 4089, "results": {"model": "rnn", "prob": {"loc": [[6.516734720207751e-05, 1.0735843325448968e-09, 8.480412899691814e-11, 2.0960666470733191e-13, 3.819633140594164e-13, 3.4371311352643374e-11, 8.144584832947555e-12, 3.4204134750220883e-12, 2.1538515415642223e-09, 2.063473870939081e-11, 2.0213559992487973e-11, 1.5725899749075012e-10, 1.2903325075086514e-09, 1.554736200892748e-11, 1.3995116697473886e-11, 3.101744208700019e-11, 1.549186889882037e-10, 3.037136167560739e-11, 5.1255488568713314e-12, 7.730348583478985e-10, 1.3566783113594383e-11, 5.440945870932579e-12, 1.8993527584054704e-10, 0.999901533126831, 2.2961438617130625e-07, 2.3295048615784575e-12, 3.2378419390077795e-10, 3.8951472798066933e-13, 8.355845529384176e-12, 7.885098129989387e-11, 2.2306496248347685e-05, 7.008893021520635e-09, 1.0749019565992057e-05, 1.810750160924357e-11]], "pointer": [[0.0, 0.0, 3.7442337088577915e-06, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.9957699179649353, 0.0, 0.0, 0.0, 0.004060222767293453, 0.0, 0.0, 0.0, 0.00016074060113169253, 0.0, 0.0, 0.0, 0.0, 0.0, 1.6370236153306905e-06, 0.0, 0.0, 4.1949142826069874e-08, 0.0, 0.0, 0.0, 5.859966449861531e-07, 0.0, 3.1014453725219937e-06, 0.0]], "target": [0.9957699179649353]}, "loss": [9.846202738117427e-05, 0.0042390539310872555], "acc": [0.0, 1.0, 1.0, 1.0]}}


Trace of simplified code(s):

{"result": {"time": "2021-02-11 10:49:45.042357", "n_pass": [1, 1, 1], "n_token": 34, "loss": [9.846202738117427e-05, 0.0042390539310872555], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def test_get_import_name_without_alias(", "self", ")", ":", "#NEWLINE#", "#INDENT#", "\"\\n        Test that function get_name_without_alias() will work on a string.\\n        - Note: This isn't truly needed when pipreqs is walking the AST to find imports\\n        \"", "#NEWLINE#", "import_name_with_alias", "=", "'requests as R'", "#NEWLINE#", "expected_import_name_without_alias", "=", "'requests'", "#NEWLINE#", "import_name_without_aliases", "=", "pipreqs", ".", "get_name_without_alias", "(", "self", ")", "#NEWLINE#", "self", ".", "assertEqual", "(", "import_name_without_aliases", ",", "expected_import_name_without_alias", ")"]}}
{"position": {"error_location": 23, "repair_targets": [9], "repair_candidates": [2, 23, 26, 9, 17, 30, 13, 32]}}
{"prediction": {"error_location": 0.999901533126831, "repair_targets": [0.9957699179649353], "repair_candidates": [3.7442337088577915e-06, 0.9957699179649353, 0.004060222767293453, 0.00016074060113169253, 1.6370236153306905e-06, 4.1949142826069874e-08, 5.859966449861531e-07, 3.1014453725219937e-06], "target_probs": 0.9957699179649353}}


{"result": {"time": "2021-02-11 10:49:45.106887", "n_pass": [21, 2, 2], "n_token": 30, "loss": [4.95898348162882e-05, 0.0034014550037682056], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def test_get_import_name_without_alias(", "self", ")", "#NEWLINE#", "import_name_with_alias", "=", "'requests as R'", "#NEWLINE#", "expected_import_name_without_alias", "=", "'requests'", "#NEWLINE#", "import_name_without_aliases", "=", "pipreqs", ".", "get_name_without_alias", "(", "self", ")", "#NEWLINE#", "self", ".", "assertEqual", "(", "import_name_without_aliases", ",", "expected_import_name_without_alias", ")"]}}
{"position": {"error_location": 19, "repair_targets": [5], "repair_candidates": [2, 19, 22, 5, 13, 26, 9, 28]}}
{"prediction": {"error_location": 0.9999504089355469, "repair_targets": [0.996604323387146], "repair_candidates": [2.3701049940427765e-06, 0.996604323387146, 0.003244822844862938, 0.00014492252375930548, 8.558464514862862e-07, 3.244647572842041e-08, 4.2438884406692523e-07, 2.3088027774065267e-06], "target_probs": 0.996604323387146}}


{"result": {"time": "2021-02-11 10:49:45.170070", "n_pass": [43, 3, 3], "n_token": 28, "loss": [9.214453893946484e-05, 0.10779676586389542], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def test_get_import_name_without_alias(", "self", ")", "#NEWLINE#", "import_name_with_alias", "#NEWLINE#", "expected_import_name_without_alias", "=", "'requests'", "#NEWLINE#", "import_name_without_aliases", "=", "pipreqs", ".", "get_name_without_alias", "(", "self", ")", "#NEWLINE#", "self", ".", "assertEqual", "(", "import_name_without_aliases", ",", "expected_import_name_without_alias", ")"]}}
{"position": {"error_location": 17, "repair_targets": [5], "repair_candidates": [2, 17, 20, 5, 11, 24, 7, 26]}}
{"prediction": {"error_location": 0.9999078512191772, "repair_targets": [0.8978100419044495], "repair_candidates": [1.301945849263575e-05, 0.8978100419044495, 0.1008865162730217, 0.0012477041454985738, 1.466357207391411e-05, 2.6917089712696907e-07, 5.07677077621338e-06, 2.269339165650308e-05], "target_probs": 0.8978100419044495}}


{"result": {"time": "2021-02-11 10:49:45.231476", "n_pass": [45, 4, 4], "n_token": 26, "loss": [0.000500196241773665, 0.05594492703676224], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def test_get_import_name_without_alias(", "self", ")", "#NEWLINE#", "import_name_with_alias", "#NEWLINE#", "expected_import_name_without_alias", "#NEWLINE#", "import_name_without_aliases", "=", "pipreqs", ".", "get_name_without_alias", "(", "self", ")", "#NEWLINE#", "self", ".", "assertEqual", "(", "import_name_without_aliases", ",", "expected_import_name_without_alias", ")"]}}
{"position": {"error_location": 15, "repair_targets": [5], "repair_candidates": [2, 15, 18, 5, 9, 22, 7, 24]}}
{"prediction": {"error_location": 0.9994999170303345, "repair_targets": [0.9455912113189697], "repair_candidates": [3.367601311765611e-05, 0.9455912113189697, 0.0530707985162735, 0.0011983879376202822, 5.034655987401493e-05, 6.156893732622848e-07, 1.17447552838712e-05, 4.3255833588773385e-05], "target_probs": 0.9455912113189697}}


{"result": {"time": "2021-02-11 10:49:45.294431", "n_pass": [47, 5, 5], "n_token": 24, "loss": [0.10907238721847534, 0.025340035557746887], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def test_get_import_name_without_alias(", "self", ")", "#NEWLINE#", "import_name_with_alias", "#NEWLINE#", "expected_import_name_without_alias", "#NEWLINE#", "import_name_without_aliases", ".", "get_name_without_alias", "(", "self", ")", "#NEWLINE#", "self", ".", "assertEqual", "(", "import_name_without_aliases", ",", "expected_import_name_without_alias", ")"]}}
{"position": {"error_location": 13, "repair_targets": [5], "repair_candidates": [2, 13, 16, 5, 9, 20, 7, 22]}}
{"prediction": {"error_location": 0.8966655135154724, "repair_targets": [0.9749783277511597], "repair_candidates": [7.231512427097186e-05, 0.9749783277511597, 0.023298639804124832, 3.985546936746687e-05, 0.001490700407885015, 2.230832023997209e-06, 3.682626993395388e-05, 8.114294905681163e-05], "target_probs": 0.9749783277511597}}


{"result": {"time": "2021-02-11 10:49:45.354157", "n_pass": [48, 6, 6], "n_token": 22, "loss": [0.030740909278392792, 0.023668615147471428], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def test_get_import_name_without_alias(", "self", ")", "#NEWLINE#", "import_name_with_alias", "#NEWLINE#", "expected_import_name_without_alias", "#NEWLINE#", "import_name_without_aliases", "(", "self", ")", "#NEWLINE#", "self", ".", "assertEqual", "(", "import_name_without_aliases", ",", "expected_import_name_without_alias", ")"]}}
{"position": {"error_location": 11, "repair_targets": [5], "repair_candidates": [2, 11, 14, 5, 9, 18, 7, 20]}}
{"prediction": {"error_location": 0.9697265625, "repair_targets": [0.9766092896461487], "repair_candidates": [4.30091968155466e-05, 0.9766092896461487, 0.020921627059578896, 0.0007773145334795117, 0.0015846617752686143, 1.3023125120525947e-06, 1.8586264559417032e-05, 4.4263295421842486e-05], "target_probs": 0.9766092896461487}}


{"result": {"time": "2021-02-11 10:49:45.530541", "n_pass": [79, 9, 7], "n_token": 21, "loss": [0.1921948790550232, 0.07910807430744171], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def test_get_import_name_without_alias(", "self", ")", "#NEWLINE#", "import_name_with_alias", "#NEWLINE#", "expected_import_name_without_alias", "#NEWLINE#", "import_name_without_aliases", "self", ")", "#NEWLINE#", "self", ".", "assertEqual", "(", "import_name_without_aliases", ",", "expected_import_name_without_alias", ")"]}}
{"position": {"error_location": 10, "repair_targets": [5], "repair_candidates": [2, 10, 13, 5, 9, 17, 7, 19]}}
{"prediction": {"error_location": 0.8251459002494812, "repair_targets": [0.9239400625228882], "repair_candidates": [0.00022521233768202364, 0.9239400625228882, 0.047024644911289215, 0.015795622020959854, 0.012696914374828339, 9.856015822151676e-06, 0.0001038906630128622, 0.00020368467085063457], "target_probs": 0.9239400625228882}}


{"result": {"time": "2021-02-11 10:49:45.588982", "n_pass": [80, 10, 8], "n_token": 20, "loss": [0.02959754504263401, 0.026730462908744812], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def test_get_import_name_without_alias(", "self", ")", "#NEWLINE#", "import_name_with_alias", "#NEWLINE#", "expected_import_name_without_alias", "#NEWLINE#", "import_name_without_aliases", "self", "#NEWLINE#", "self", ".", "assertEqual", "(", "import_name_without_aliases", ",", "expected_import_name_without_alias", ")"]}}
{"position": {"error_location": 10, "repair_targets": [5], "repair_candidates": [2, 10, 12, 5, 9, 16, 7, 18]}}
{"prediction": {"error_location": 0.9708364009857178, "repair_targets": [0.9736236333847046], "repair_candidates": [5.908327511860989e-05, 0.9736236333847046, 0.020245801657438278, 0.005104318726807833, 0.0007845434010960162, 1.3506592040357646e-05, 6.379245314747095e-05, 0.00010527601261856034], "target_probs": 0.9736236333847046}}


{"result": {"time": "2021-02-11 10:49:45.707744", "n_pass": [83, 12, 9], "n_token": 19, "loss": [0.189662903547287, 0.04461315646767616], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def test_get_import_name_without_alias(", "self", ")", "#NEWLINE#", "import_name_with_alias", "#NEWLINE#", "expected_import_name_without_alias", "#NEWLINE#", "import_name_without_aliases", "self", "#NEWLINE#", "self", "assertEqual", "(", "import_name_without_aliases", ",", "expected_import_name_without_alias", ")"]}}
{"position": {"error_location": 10, "repair_targets": [5], "repair_candidates": [2, 10, 12, 5, 9, 15, 7, 17]}}
{"prediction": {"error_location": 0.8272377848625183, "repair_targets": [0.9563673734664917], "repair_candidates": [8.845625416142866e-05, 0.9563673734664917, 0.031569670885801315, 0.009569193236529827, 0.0021373797208070755, 4.1672592487884685e-05, 0.00011816114420071244, 0.00010805687634274364], "target_probs": 0.9563673734664917}}


{"result": {"time": "2021-02-11 10:49:45.765093", "n_pass": [84, 13, 10], "n_token": 18, "loss": [0.04732879251241684, 0.032105930149555206], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def test_get_import_name_without_alias(", "self", ")", "#NEWLINE#", "import_name_with_alias", "#NEWLINE#", "expected_import_name_without_alias", "#NEWLINE#", "import_name_without_aliases", "self", "#NEWLINE#", "self", "(", "import_name_without_aliases", ",", "expected_import_name_without_alias", ")"]}}
{"position": {"error_location": 10, "repair_targets": [5], "repair_candidates": [2, 10, 12, 5, 9, 14, 7, 16]}}
{"prediction": {"error_location": 0.9537738561630249, "repair_targets": [0.9684039950370789], "repair_candidates": [3.983325950684957e-05, 0.9684039950370789, 0.02479175478219986, 0.00527627719566226, 0.0009347221930511296, 3.155361264362e-05, 0.00032251881202682853, 0.00019930653797928244], "target_probs": 0.9684039950370789}}


{"result": {"time": "2021-02-11 10:49:45.821576", "n_pass": [85, 14, 11], "n_token": 17, "loss": [0.10144341737031937, 0.013606550171971321], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def test_get_import_name_without_alias(", "self", ")", "#NEWLINE#", "import_name_with_alias", "#NEWLINE#", "expected_import_name_without_alias", "#NEWLINE#", "import_name_without_aliases", "self", "#NEWLINE#", "self", "import_name_without_aliases", ",", "expected_import_name_without_alias", ")"]}}
{"position": {"error_location": 10, "repair_targets": [5], "repair_candidates": [2, 10, 12, 5, 9, 13, 7, 15]}}
{"prediction": {"error_location": 0.9035323858261108, "repair_targets": [0.9864856004714966], "repair_candidates": [2.1686542822862975e-05, 0.9864856004714966, 0.0121786929666996, 0.000228294768021442, 3.3689830161165446e-05, 6.449134525610134e-05, 4.774541957885958e-05, 0.0009398036054335535], "target_probs": 0.9864856004714966}}


{"result": {"time": "2021-02-11 10:49:45.877963", "n_pass": [88, 15, 12], "n_token": 16, "loss": [0.16981716454029083, 0.026577364653348923], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["def test_get_import_name_without_alias(", "self", ")", "#NEWLINE#", "import_name_with_alias", "#NEWLINE#", "expected_import_name_without_alias", "#NEWLINE#", "import_name_without_aliases", "self", "#NEWLINE#", "self", "import_name_without_aliases", ",", "expected_import_name_without_alias", ")"]}}
{"position": {"error_location": 9, "repair_targets": [4], "repair_candidates": [1, 9, 11, 4, 8, 12, 6, 14]}}
{"prediction": {"error_location": 0.8438190221786499, "repair_targets": [0.9737727046012878], "repair_candidates": [0.0011462925467640162, 0.9737727046012878, 0.02014339528977871, 0.00040614642784930766, 9.854540985543281e-05, 0.0004958088975399733, 0.00019650383910629898, 0.0037405528128147125], "target_probs": 0.9737727046012878}}


{"result": {"time": "2021-02-11 10:49:45.989167", "n_pass": [91, 17, 13], "n_token": 15, "loss": [0.12729431688785553, 0.016300005838274956], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["def test_get_import_name_without_alias(", "self", "#NEWLINE#", "import_name_with_alias", "#NEWLINE#", "expected_import_name_without_alias", "#NEWLINE#", "import_name_without_aliases", "self", "#NEWLINE#", "self", "import_name_without_aliases", ",", "expected_import_name_without_alias", ")"]}}
{"position": {"error_location": 8, "repair_targets": [3], "repair_candidates": [1, 8, 10, 3, 7, 11, 5, 13]}}
{"prediction": {"error_location": 0.8804745078086853, "repair_targets": [0.9838321208953857], "repair_candidates": [0.0009902621386572719, 0.9838321208953857, 0.013668393716216087, 0.0002570142096374184, 3.4792512451531366e-05, 6.764086720068008e-05, 5.3742198360851035e-05, 0.001096187625080347], "target_probs": 0.9838321208953857}}


{"result": {"time": "2021-02-11 10:49:46.047287", "n_pass": [92, 18, 14], "n_token": 14, "loss": [0.6255319118499756, 0.11699054390192032], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["def test_get_import_name_without_alias(", "self", "import_name_with_alias", "#NEWLINE#", "expected_import_name_without_alias", "#NEWLINE#", "import_name_without_aliases", "self", "#NEWLINE#", "self", "import_name_without_aliases", ",", "expected_import_name_without_alias", ")"]}}
{"position": {"error_location": 7, "repair_targets": [2], "repair_candidates": [1, 7, 9, 2, 6, 10, 4, 12]}}
{"prediction": {"error_location": 0.5349767804145813, "repair_targets": [0.8895936012268066], "repair_candidates": [0.012142383493483067, 0.8895936012268066, 0.08158010989427567, 0.002506034215912223, 0.0004510315484367311, 0.0014194942777976394, 0.0005102874711155891, 0.011797086335718632], "target_probs": 0.8895936012268066}}


{"result": {"time": "2021-02-11 10:49:46.156553", "n_pass": [96, 20, 15], "n_token": 13, "loss": [0.3154413104057312, 0.10161802172660828], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["def test_get_import_name_without_alias(", "self", "import_name_with_alias", "#NEWLINE#", "expected_import_name_without_alias", "import_name_without_aliases", "self", "#NEWLINE#", "self", "import_name_without_aliases", ",", "expected_import_name_without_alias", ")"]}}
{"position": {"error_location": 6, "repair_targets": [2], "repair_candidates": [1, 6, 8, 2, 5, 9, 4, 11]}}
{"prediction": {"error_location": 0.7294667959213257, "repair_targets": [0.9033745527267456], "repair_candidates": [0.01619011163711548, 0.9033745527267456, 0.027306046336889267, 0.0037113770376890898, 0.00048717879690229893, 0.000493920233566314, 0.0008749657426960766, 0.0475618802011013], "target_probs": 0.9033745527267456}}


{"result": {"time": "2021-02-11 10:49:46.373452", "n_pass": [113, 24, 16], "n_token": 12, "loss": [0.004436649847775698, 0.16705618798732758], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["def test_get_import_name_without_alias(", "self", "import_name_with_alias", "#NEWLINE#", "expected_import_name_without_alias", "import_name_without_aliases", "self", "#NEWLINE#", "self", "import_name_without_aliases", "expected_import_name_without_alias", ")"]}}
{"position": {"error_location": 6, "repair_targets": [2], "repair_candidates": [1, 6, 8, 2, 5, 9, 4, 10]}}
{"prediction": {"error_location": 0.9955730438232422, "repair_targets": [0.8461520671844482], "repair_candidates": [0.010141761042177677, 0.8461520671844482, 0.04700666666030884, 0.008202978409826756, 0.00021528470097109675, 0.00019471827545203269, 0.0007644929573871195, 0.08732204139232635], "target_probs": 0.8461520671844482}}


{"result": {"time": "2021-02-11 10:49:46.430031", "n_pass": [115, 25, 17], "n_token": 11, "loss": [0.007295278366655111, 0.1535526067018509], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["def test_get_import_name_without_alias(", "self", "import_name_with_alias", "#NEWLINE#", "expected_import_name_without_alias", "import_name_without_aliases", "self", "#NEWLINE#", "self", "import_name_without_aliases", "expected_import_name_without_alias"]}}
{"position": {"error_location": 6, "repair_targets": [2], "repair_candidates": [1, 6, 8, 2, 5, 9, 4, 10]}}
{"prediction": {"error_location": 0.9927313923835754, "repair_targets": [0.8576556444168091], "repair_candidates": [0.010753451846539974, 0.8576556444168091, 0.050255417823791504, 0.005576298572123051, 0.00017339977785013616, 0.00022538041230291128, 0.0007814507116563618, 0.07457897812128067], "target_probs": 0.8576556444168091}}




Minimal simplified tokens:

['def test_get_import_name_without_alias(', 'self', 'import_name_with_alias', '#NEWLINE#', 'expected_import_name_without_alias', 'import_name_without_aliases', 'self', '#NEWLINE#', 'self', 'import_name_without_aliases', 'expected_import_name_without_alias']
