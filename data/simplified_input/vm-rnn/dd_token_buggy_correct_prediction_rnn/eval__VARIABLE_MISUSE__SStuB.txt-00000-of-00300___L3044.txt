
Original sample:

{"has_bug": true, "bug_kind": 1, "bug_kind_name": "VARIABLE_MISUSE", "source_tokens": ["#NEWLINE#", "@", "tornado", ".", "web", ".", "asynchronous", "#NEWLINE#", "def get(", "self", ",", "jid", "=", "None", ")", ":", "#NEWLINE#", "#INDENT#", "\"\\n        A convenience URL for getting lists of previously run jobs or getting\\n        the return from a single job\\n\\n        .. http:get:: /jobs/(jid)\\n\\n            List jobs or show a single job from the job cache.\\n\\n            :status 200: |200|\\n            :status 401: |401|\\n            :status 406: |406|\\n\\n        **Example request:**\\n\\n        .. code-block:: bash\\n\\n            curl -i localhost:8000/jobs\\n\\n        .. code-block:: http\\n\\n            GET /jobs HTTP/1.1\\n            Host: localhost:8000\\n            Accept: application/x-yaml\\n\\n        **Example response:**\\n\\n        .. code-block:: http\\n\\n            HTTP/1.1 200 OK\\n            Content-Length: 165\\n            Content-Type: application/x-yaml\\n\\n            return:\\n            - '20121130104633606931':\\n                Arguments:\\n                - '3'\\n                Function: test.fib\\n                Start Time: 2012, Nov 30 10:46:33.606931\\n                Target: jerry\\n                Target-type: glob\\n\\n        **Example request:**\\n\\n        .. code-block:: bash\\n\\n            curl -i localhost:8000/jobs/20121130104633606931\\n\\n        .. code-block:: http\\n\\n            GET /jobs/20121130104633606931 HTTP/1.1\\n            Host: localhost:8000\\n            Accept: application/x-yaml\\n\\n        **Example response:**\\n\\n        .. code-block:: http\\n\\n            HTTP/1.1 200 OK\\n            Content-Length: 73\\n            Content-Type: application/x-yaml\\n\\n            info:\\n            - Arguments:\\n                - '3'\\n                Function: test.fib\\n                Minions:\\n                - jerry\\n                Start Time: 2012, Nov 30 10:46:33.606931\\n                Target: '*'\\n                Target-type: glob\\n                User: saltdev\\n                jid: '20121130104633606931'\\n            return:\\n            - jerry:\\n                - - 0\\n                - 1\\n                - 1\\n                - 2\\n                - 6.9141387939453125e-06\\n        \"", "#NEWLINE#", "if", "(", "not", "self", ".", "_verify_auth", "(", ")", ")", ":", "#NEWLINE#", "#INDENT#", "self", ".", "redirect", "(", "'/login'", ")", "#NEWLINE#", "return", "#NEWLINE#", "#UNINDENT#", "if", "jid", ":", "#NEWLINE#", "#INDENT#", "self", ".", "lowstate", "=", "[", "{", "#NEWLINE#", "#INDENT#", "'fun'", ":", "'jobs.list_job'", ",", "#NEWLINE#", "'jid'", ":", "self", ",", "#NEWLINE#", "'client'", ":", "'runner'", ",", "#NEWLINE#", "#UNINDENT#", "}", "]", "#NEWLINE#", "#UNINDENT#", "else", ":", "#NEWLINE#", "#INDENT#", "self", ".", "lowstate", "=", "[", "{", "#NEWLINE#", "#INDENT#", "'fun'", ":", "'jobs.list_jobs'", ",", "#NEWLINE#", "'client'", ":", "'runner'", ",", "#NEWLINE#", "#UNINDENT#", "}", "]", "#NEWLINE#", "#UNINDENT#", "self", ".", "disbatch", "(", ")"], "error_location": [62], "repair_targets": [11, 43], "repair_candidates": [9, 23, 32, 47, 62, 79, 102, 11, 43], "provenances": [{"datasetProvenance": {"datasetName": "ETHPy150Open", "filepath": "saltstack/salt/salt/netapi/rest_tornado/saltnado.py", "license": "apache-2.0", "note": "license: manual_eval"}}], "txt_file": "eval__VARIABLE_MISUSE__SStuB.txt-00000-of-00300", "js_count": 3044, "results": {"model": "rnn", "prob": {"loc": [[0.0008051322656683624, 1.325910119476248e-07, 6.080459513668757e-08, 5.237041356132011e-10, 4.299317499234512e-11, 3.778636084583731e-11, 3.398374984198149e-11, 8.930045036770196e-10, 4.3742495736687204e-11, 7.865930129469234e-10, 1.1540862016046205e-11, 1.3608877358350924e-09, 2.349877792351407e-10, 2.1006363315478893e-09, 5.454476315058798e-10, 1.3235734730443482e-10, 1.3441121549107038e-09, 3.2745825495617e-10, 4.915418766460178e-11, 9.550203294850235e-09, 7.166885834797299e-11, 2.369563989468304e-10, 8.283801422592774e-11, 2.892477923843728e-10, 4.59542126574064e-12, 6.037733247393762e-12, 1.6923508150412658e-09, 6.686232012498294e-09, 8.975308690706285e-11, 8.640583248897826e-10, 2.8194189205521525e-09, 7.393470558003656e-11, 8.798420325639711e-11, 2.0984316714822704e-11, 4.117800718461684e-12, 2.5086595994983085e-11, 7.426578907399062e-09, 3.0618735324949853e-10, 2.036728008469879e-10, 2.7831241755649216e-09, 2.714137963266694e-07, 1.0657829108140504e-07, 9.836484338165974e-08, 5.916469672229141e-05, 1.0297772412570794e-08, 1.4531635450509839e-08, 1.479592004471897e-10, 1.0393131910646503e-09, 5.1358139963042504e-11, 7.213413893980558e-12, 3.0610497470107134e-10, 9.42506628298645e-10, 5.775881856129317e-11, 2.0772523701140244e-09, 4.200532977005622e-11, 5.8552189763361184e-09, 6.138906050168202e-10, 1.3102171791956607e-08, 1.9680491958329327e-10, 5.39716715763916e-09, 3.214200017254143e-10, 2.700366319441372e-11, 0.9991346001625061, 2.725683714288607e-07, 1.206495875427649e-10, 2.36718467050423e-09, 9.849103477233001e-11, 2.2692432821713737e-08, 4.700635991561342e-10, 2.8859765688338257e-09, 1.2131195603615197e-08, 3.3317006931099513e-09, 2.231437479238707e-09, 4.327623592814689e-09, 2.7609459607447207e-08, 6.106766758939841e-10, 7.135303903282875e-09, 6.921196948894703e-09, 1.0350180434937073e-10, 9.403236411742455e-09, 1.1695207302597765e-10, 1.2385789442681538e-11, 8.403510109999957e-10, 2.618955274868995e-09, 1.255232168206888e-10, 2.6113384787862515e-09, 1.5357676241833929e-10, 7.881704178203108e-09, 1.6693897375574807e-09, 2.0227192365496194e-08, 3.145547156080397e-09, 1.083470202445369e-09, 8.598123102387945e-09, 2.7145585779209114e-10, 2.235954532636697e-08, 2.309117064225319e-10, 2.1584274367825174e-09, 9.908825759907813e-09, 2.953514322001638e-09, 1.3705544477105036e-09, 5.2272839390354875e-09, 5.483893339430779e-10, 4.038043510679046e-10, 5.7336888709125233e-11, 8.44359235308012e-11, 1.398511528805102e-09, 2.956147504562523e-08]], "pointer": [[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.003194954479113221, 0.0, 0.9936771988868713, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 2.617100290080998e-05, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.00011962520511588082, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0021083594765514135, 0.0, 0.0, 0.0, 9.073835099115968e-05, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.00014047707372810692, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0006084798369556665, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 3.3939511922653764e-05, 0.0, 0.0, 0.0, 0.0]], "target": [0.9957855343818665]}, "loss": [0.0008657997823320329, 0.0042233713902533054], "acc": [0.0, 1.0, 1.0, 1.0]}}


Trace of simplified code(s):

{"result": {"time": "2021-02-11 10:26:48.895231", "n_pass": [1, 1, 1], "n_token": 107, "loss": [0.0008657997823320329, 0.0042233713902533054], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "@", "tornado", ".", "web", ".", "asynchronous", "#NEWLINE#", "def get(", "self", ",", "jid", "=", "None", ")", ":", "#NEWLINE#", "#INDENT#", "\"\\n        A convenience URL for getting lists of previously run jobs or getting\\n        the return from a single job\\n\\n        .. http:get:: /jobs/(jid)\\n\\n            List jobs or show a single job from the job cache.\\n\\n            :status 200: |200|\\n            :status 401: |401|\\n            :status 406: |406|\\n\\n        **Example request:**\\n\\n        .. code-block:: bash\\n\\n            curl -i localhost:8000/jobs\\n\\n        .. code-block:: http\\n\\n            GET /jobs HTTP/1.1\\n            Host: localhost:8000\\n            Accept: application/x-yaml\\n\\n        **Example response:**\\n\\n        .. code-block:: http\\n\\n            HTTP/1.1 200 OK\\n            Content-Length: 165\\n            Content-Type: application/x-yaml\\n\\n            return:\\n            - '20121130104633606931':\\n                Arguments:\\n                - '3'\\n                Function: test.fib\\n                Start Time: 2012, Nov 30 10:46:33.606931\\n                Target: jerry\\n                Target-type: glob\\n\\n        **Example request:**\\n\\n        .. code-block:: bash\\n\\n            curl -i localhost:8000/jobs/20121130104633606931\\n\\n        .. code-block:: http\\n\\n            GET /jobs/20121130104633606931 HTTP/1.1\\n            Host: localhost:8000\\n            Accept: application/x-yaml\\n\\n        **Example response:**\\n\\n        .. code-block:: http\\n\\n            HTTP/1.1 200 OK\\n            Content-Length: 73\\n            Content-Type: application/x-yaml\\n\\n            info:\\n            - Arguments:\\n                - '3'\\n                Function: test.fib\\n                Minions:\\n                - jerry\\n                Start Time: 2012, Nov 30 10:46:33.606931\\n                Target: '*'\\n                Target-type: glob\\n                User: saltdev\\n                jid: '20121130104633606931'\\n            return:\\n            - jerry:\\n                - - 0\\n                - 1\\n                - 1\\n                - 2\\n                - 6.9141387939453125e-06\\n        \"", "#NEWLINE#", "if", "(", "not", "self", ".", "_verify_auth", "(", ")", ")", ":", "#NEWLINE#", "#INDENT#", "self", ".", "redirect", "(", "'/login'", ")", "#NEWLINE#", "return", "#NEWLINE#", "#UNINDENT#", "if", "jid", ":", "#NEWLINE#", "#INDENT#", "self", ".", "lowstate", "=", "[", "{", "#NEWLINE#", "#INDENT#", "'fun'", ":", "'jobs.list_job'", ",", "#NEWLINE#", "'jid'", ":", "self", ",", "#NEWLINE#", "'client'", ":", "'runner'", ",", "#NEWLINE#", "#UNINDENT#", "}", "]", "#NEWLINE#", "#UNINDENT#", "else", ":", "#NEWLINE#", "#INDENT#", "self", ".", "lowstate", "=", "[", "{", "#NEWLINE#", "#INDENT#", "'fun'", ":", "'jobs.list_jobs'", ",", "#NEWLINE#", "'client'", ":", "'runner'", ",", "#NEWLINE#", "#UNINDENT#", "}", "]", "#NEWLINE#", "#UNINDENT#", "self", ".", "disbatch", "(", ")"]}}
{"position": {"error_location": 62, "repair_targets": [11, 43], "repair_candidates": [9, 23, 32, 47, 62, 79, 102, 11, 43]}}
{"prediction": {"error_location": 0.9991346001625061, "repair_targets": [0.9936771988868713, 0.0021083594765514135], "repair_candidates": [0.003194954479113221, 0.9936771988868713, 2.617100290080998e-05, 0.00011962520511588082, 0.0021083594765514135, 9.073835099115968e-05, 0.00014047707372810692, 0.0006084798369556665, 3.3939511922653764e-05], "target_probs": 0.9957855343818665}}


{"result": {"time": "2021-02-11 10:26:48.993428", "n_pass": [25, 2, 2], "n_token": 93, "loss": [0.01054642628878355, 0.00881919451057911], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "@", "tornado", ".", "web", ".", "asynchronous", "#NEWLINE#", "def get(", "self", ",", "jid", "=", "None", ")", ":", "#NEWLINE#", "#INDENT#", "\"\\n        A convenience URL for getting lists of previously run jobs or getting\\n        the return from a single job\\n\\n        .. http:get:: /jobs/(jid)\\n\\n            List jobs or show a single job from the job cache.\\n\\n            :status 200: |200|\\n            :status 401: |401|\\n            :status 406: |406|\\n\\n        **Example request:**\\n\\n        .. code-block:: bash\\n\\n            curl -i localhost:8000/jobs\\n\\n        .. code-block:: http\\n\\n            GET /jobs HTTP/1.1\\n            Host: localhost:8000\\n            Accept: application/x-yaml\\n\\n        **Example response:**\\n\\n        .. code-block:: http\\n\\n            HTTP/1.1 200 OK\\n            Content-Length: 165\\n            Content-Type: application/x-yaml\\n\\n            return:\\n            - '20121130104633606931':\\n                Arguments:\\n                - '3'\\n                Function: test.fib\\n                Start Time: 2012, Nov 30 10:46:33.606931\\n                Target: jerry\\n                Target-type: glob\\n\\n        **Example request:**\\n\\n        .. code-block:: bash\\n\\n            curl -i localhost:8000/jobs/20121130104633606931\\n\\n        .. code-block:: http\\n\\n            GET /jobs/20121130104633606931 HTTP/1.1\\n            Host: localhost:8000\\n            Accept: application/x-yaml\\n\\n        **Example response:**\\n\\n        .. code-block:: http\\n\\n            HTTP/1.1 200 OK\\n            Content-Length: 73\\n            Content-Type: application/x-yaml\\n\\n            info:\\n            - Arguments:\\n                - '3'\\n                Function: test.fib\\n                Minions:\\n                - jerry\\n                Start Time: 2012, Nov 30 10:46:33.606931\\n                Target: '*'\\n                Target-type: glob\\n                User: saltdev\\n                jid: '20121130104633606931'\\n            return:\\n            - jerry:\\n                - - 0\\n                - 1\\n                - 1\\n                - 2\\n                - 6.9141387939453125e-06\\n        \"", "#NEWLINE#", "if", "(", "not", "self", ".", "_verify_auth", "(", ")", ")", ":", "#NEWLINE#", "#INDENT#", "self", ".", "redirect", "(", "'/login'", ")", "#NEWLINE#", "return", "#NEWLINE#", "#UNINDENT#", "if", "jid", ":", "#NEWLINE#", "#INDENT#", "self", ".", "lowstate", "=", "[", "{", "#NEWLINE#", "#INDENT#", "'fun'", ":", "'jobs.list_job'", ",", "#NEWLINE#", "'jid'", ":", "self", ",", "#NEWLINE#", "self", ".", "lowstate", "=", "[", "{", "#NEWLINE#", "#INDENT#", "'fun'", ":", "'jobs.list_jobs'", ",", "#NEWLINE#", "'client'", ":", "'runner'", ",", "#NEWLINE#", "#UNINDENT#", "}", "]", "#NEWLINE#", "#UNINDENT#", "self", ".", "disbatch", "(", ")"]}}
{"position": {"error_location": 62, "repair_targets": [11, 43], "repair_candidates": [9, 23, 32, 47, 62, 65, 88, 11, 43]}}
{"prediction": {"error_location": 0.9895092248916626, "repair_targets": [0.9892203211784363, 0.0019992615561932325], "repair_candidates": [0.007098810281604528, 0.9892203211784363, 5.1443694246700034e-05, 0.0004497359914239496, 0.0019992615561932325, 0.00018013466615229845, 0.0009339387761428952, 5.985130883345846e-06, 6.0280730394879356e-05], "target_probs": 0.9912195801734924}}


{"result": {"time": "2021-02-11 10:26:49.090107", "n_pass": [48, 3, 3], "n_token": 86, "loss": [0.0004766043566633016, 0.004002823028713465], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "@", "tornado", ".", "web", ".", "asynchronous", "#NEWLINE#", "def get(", "self", ",", "jid", "=", "None", ")", ":", "#NEWLINE#", "#INDENT#", "\"\\n        A convenience URL for getting lists of previously run jobs or getting\\n        the return from a single job\\n\\n        .. http:get:: /jobs/(jid)\\n\\n            List jobs or show a single job from the job cache.\\n\\n            :status 200: |200|\\n            :status 401: |401|\\n            :status 406: |406|\\n\\n        **Example request:**\\n\\n        .. code-block:: bash\\n\\n            curl -i localhost:8000/jobs\\n\\n        .. code-block:: http\\n\\n            GET /jobs HTTP/1.1\\n            Host: localhost:8000\\n            Accept: application/x-yaml\\n\\n        **Example response:**\\n\\n        .. code-block:: http\\n\\n            HTTP/1.1 200 OK\\n            Content-Length: 165\\n            Content-Type: application/x-yaml\\n\\n            return:\\n            - '20121130104633606931':\\n                Arguments:\\n                - '3'\\n                Function: test.fib\\n                Start Time: 2012, Nov 30 10:46:33.606931\\n                Target: jerry\\n                Target-type: glob\\n\\n        **Example request:**\\n\\n        .. code-block:: bash\\n\\n            curl -i localhost:8000/jobs/20121130104633606931\\n\\n        .. code-block:: http\\n\\n            GET /jobs/20121130104633606931 HTTP/1.1\\n            Host: localhost:8000\\n            Accept: application/x-yaml\\n\\n        **Example response:**\\n\\n        .. code-block:: http\\n\\n            HTTP/1.1 200 OK\\n            Content-Length: 73\\n            Content-Type: application/x-yaml\\n\\n            info:\\n            - Arguments:\\n                - '3'\\n                Function: test.fib\\n                Minions:\\n                - jerry\\n                Start Time: 2012, Nov 30 10:46:33.606931\\n                Target: '*'\\n                Target-type: glob\\n                User: saltdev\\n                jid: '20121130104633606931'\\n            return:\\n            - jerry:\\n                - - 0\\n                - 1\\n                - 1\\n                - 2\\n                - 6.9141387939453125e-06\\n        \"", "#NEWLINE#", "if", "(", "not", "self", ".", "_verify_auth", "(", ")", ")", ":", "#NEWLINE#", "#INDENT#", "self", ".", "redirect", "(", "'/login'", ")", "#NEWLINE#", "return", "#NEWLINE#", "#UNINDENT#", "if", "jid", ":", "#NEWLINE#", "#INDENT#", "self", ".", "lowstate", "=", "[", "{", "#NEWLINE#", "#INDENT#", "'fun'", ":", "'jobs.list_job'", ",", "#NEWLINE#", "'jid'", ":", "self", ",", "#NEWLINE#", "self", ".", "lowstate", "=", "[", "{", "#NEWLINE#", ":", "'runner'", ",", "#NEWLINE#", "#UNINDENT#", "}", "]", "#NEWLINE#", "#UNINDENT#", "self", ".", "disbatch", "(", ")"]}}
{"position": {"error_location": 62, "repair_targets": [11, 43], "repair_candidates": [9, 23, 32, 47, 62, 65, 81, 11, 43]}}
{"prediction": {"error_location": 0.999523401260376, "repair_targets": [0.9944702386856079, 0.0015349109889939427], "repair_candidates": [0.003427053103223443, 0.9944702386856079, 3.716478022397496e-05, 0.00013747750199399889, 0.0015349109889939427, 0.00014594642561860383, 0.00020854960894212127, 2.2506253571918933e-06, 3.6383233236847445e-05], "target_probs": 0.9960051774978638}}


{"result": {"time": "2021-02-11 10:26:49.180077", "n_pass": [49, 4, 4], "n_token": 79, "loss": [0.001763218897394836, 0.007808214984834194], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "@", "tornado", ".", "web", ".", "asynchronous", "#NEWLINE#", "def get(", "self", ",", "jid", "=", "None", ")", ":", "#NEWLINE#", "#INDENT#", "\"\\n        A convenience URL for getting lists of previously run jobs or getting\\n        the return from a single job\\n\\n        .. http:get:: /jobs/(jid)\\n\\n            List jobs or show a single job from the job cache.\\n\\n            :status 200: |200|\\n            :status 401: |401|\\n            :status 406: |406|\\n\\n        **Example request:**\\n\\n        .. code-block:: bash\\n\\n            curl -i localhost:8000/jobs\\n\\n        .. code-block:: http\\n\\n            GET /jobs HTTP/1.1\\n            Host: localhost:8000\\n            Accept: application/x-yaml\\n\\n        **Example response:**\\n\\n        .. code-block:: http\\n\\n            HTTP/1.1 200 OK\\n            Content-Length: 165\\n            Content-Type: application/x-yaml\\n\\n            return:\\n            - '20121130104633606931':\\n                Arguments:\\n                - '3'\\n                Function: test.fib\\n                Start Time: 2012, Nov 30 10:46:33.606931\\n                Target: jerry\\n                Target-type: glob\\n\\n        **Example request:**\\n\\n        .. code-block:: bash\\n\\n            curl -i localhost:8000/jobs/20121130104633606931\\n\\n        .. code-block:: http\\n\\n            GET /jobs/20121130104633606931 HTTP/1.1\\n            Host: localhost:8000\\n            Accept: application/x-yaml\\n\\n        **Example response:**\\n\\n        .. code-block:: http\\n\\n            HTTP/1.1 200 OK\\n            Content-Length: 73\\n            Content-Type: application/x-yaml\\n\\n            info:\\n            - Arguments:\\n                - '3'\\n                Function: test.fib\\n                Minions:\\n                - jerry\\n                Start Time: 2012, Nov 30 10:46:33.606931\\n                Target: '*'\\n                Target-type: glob\\n                User: saltdev\\n                jid: '20121130104633606931'\\n            return:\\n            - jerry:\\n                - - 0\\n                - 1\\n                - 1\\n                - 2\\n                - 6.9141387939453125e-06\\n        \"", "#NEWLINE#", "if", "(", "not", "self", ".", "_verify_auth", "(", ")", ")", ":", "#NEWLINE#", "#INDENT#", "self", ".", "redirect", "(", "'/login'", ")", "#NEWLINE#", "return", "#NEWLINE#", "#UNINDENT#", "if", "jid", ":", "#NEWLINE#", "#INDENT#", "self", ".", "lowstate", "=", "[", "{", "#NEWLINE#", "#INDENT#", "'fun'", ":", "'jobs.list_job'", ",", "#NEWLINE#", "'jid'", ":", "self", ",", "#NEWLINE#", "self", ".", "lowstate", "=", "[", "{", "#NEWLINE#", "#NEWLINE#", "#UNINDENT#", "self", ".", "disbatch", "(", ")"]}}
{"position": {"error_location": 62, "repair_targets": [11, 43], "repair_candidates": [9, 23, 32, 47, 62, 65, 74, 11, 43]}}
{"prediction": {"error_location": 0.9982385635375977, "repair_targets": [0.9886228442192078, 0.0035993533674627542], "repair_candidates": [0.0066068596206605434, 0.9886228442192078, 4.495023313211277e-05, 0.00025140997604466975, 0.0035993533674627542, 0.00020742953347507864, 0.0006338959210552275, 2.556432036726619e-06, 3.081063550780527e-05], "target_probs": 0.9922221899032593}}


{"result": {"time": "2021-02-11 10:26:49.267024", "n_pass": [51, 5, 5], "n_token": 73, "loss": [1.9907753085135482e-05, 0.004767139907926321], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["asynchronous", "#NEWLINE#", "def get(", "self", ",", "jid", "=", "None", ")", ":", "#NEWLINE#", "#INDENT#", "\"\\n        A convenience URL for getting lists of previously run jobs or getting\\n        the return from a single job\\n\\n        .. http:get:: /jobs/(jid)\\n\\n            List jobs or show a single job from the job cache.\\n\\n            :status 200: |200|\\n            :status 401: |401|\\n            :status 406: |406|\\n\\n        **Example request:**\\n\\n        .. code-block:: bash\\n\\n            curl -i localhost:8000/jobs\\n\\n        .. code-block:: http\\n\\n            GET /jobs HTTP/1.1\\n            Host: localhost:8000\\n            Accept: application/x-yaml\\n\\n        **Example response:**\\n\\n        .. code-block:: http\\n\\n            HTTP/1.1 200 OK\\n            Content-Length: 165\\n            Content-Type: application/x-yaml\\n\\n            return:\\n            - '20121130104633606931':\\n                Arguments:\\n                - '3'\\n                Function: test.fib\\n                Start Time: 2012, Nov 30 10:46:33.606931\\n                Target: jerry\\n                Target-type: glob\\n\\n        **Example request:**\\n\\n        .. code-block:: bash\\n\\n            curl -i localhost:8000/jobs/20121130104633606931\\n\\n        .. code-block:: http\\n\\n            GET /jobs/20121130104633606931 HTTP/1.1\\n            Host: localhost:8000\\n            Accept: application/x-yaml\\n\\n        **Example response:**\\n\\n        .. code-block:: http\\n\\n            HTTP/1.1 200 OK\\n            Content-Length: 73\\n            Content-Type: application/x-yaml\\n\\n            info:\\n            - Arguments:\\n                - '3'\\n                Function: test.fib\\n                Minions:\\n                - jerry\\n                Start Time: 2012, Nov 30 10:46:33.606931\\n                Target: '*'\\n                Target-type: glob\\n                User: saltdev\\n                jid: '20121130104633606931'\\n            return:\\n            - jerry:\\n                - - 0\\n                - 1\\n                - 1\\n                - 2\\n                - 6.9141387939453125e-06\\n        \"", "#NEWLINE#", "if", "(", "not", "self", ".", "_verify_auth", "(", ")", ")", ":", "#NEWLINE#", "#INDENT#", "self", ".", "redirect", "(", "'/login'", ")", "#NEWLINE#", "return", "#NEWLINE#", "#UNINDENT#", "if", "jid", ":", "#NEWLINE#", "#INDENT#", "self", ".", "lowstate", "=", "[", "{", "#NEWLINE#", "#INDENT#", "'fun'", ":", "'jobs.list_job'", ",", "#NEWLINE#", "'jid'", ":", "self", ",", "#NEWLINE#", "self", ".", "lowstate", "=", "[", "{", "#NEWLINE#", "#NEWLINE#", "#UNINDENT#", "self", ".", "disbatch", "(", ")"]}}
{"position": {"error_location": 56, "repair_targets": [5, 37], "repair_candidates": [3, 17, 26, 41, 56, 59, 68, 5, 37]}}
{"prediction": {"error_location": 0.999980092048645, "repair_targets": [0.9917883276939392, 0.0034559068735688925], "repair_candidates": [0.004208625294268131, 0.9917883276939392, 5.9881054767174646e-05, 0.00018712482415139675, 0.0034559068735688925, 0.0001909099955810234, 6.470173684647307e-05, 1.8160885701945517e-06, 4.2666120862122625e-05], "target_probs": 0.9952442049980164}}


{"result": {"time": "2021-02-11 10:26:49.350470", "n_pass": [53, 6, 6], "n_token": 67, "loss": [0.0018399705877527595, 0.0713028684258461], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["asynchronous", "#NEWLINE#", "def get(", "self", ",", "jid", "\"\\n        A convenience URL for getting lists of previously run jobs or getting\\n        the return from a single job\\n\\n        .. http:get:: /jobs/(jid)\\n\\n            List jobs or show a single job from the job cache.\\n\\n            :status 200: |200|\\n            :status 401: |401|\\n            :status 406: |406|\\n\\n        **Example request:**\\n\\n        .. code-block:: bash\\n\\n            curl -i localhost:8000/jobs\\n\\n        .. code-block:: http\\n\\n            GET /jobs HTTP/1.1\\n            Host: localhost:8000\\n            Accept: application/x-yaml\\n\\n        **Example response:**\\n\\n        .. code-block:: http\\n\\n            HTTP/1.1 200 OK\\n            Content-Length: 165\\n            Content-Type: application/x-yaml\\n\\n            return:\\n            - '20121130104633606931':\\n                Arguments:\\n                - '3'\\n                Function: test.fib\\n                Start Time: 2012, Nov 30 10:46:33.606931\\n                Target: jerry\\n                Target-type: glob\\n\\n        **Example request:**\\n\\n        .. code-block:: bash\\n\\n            curl -i localhost:8000/jobs/20121130104633606931\\n\\n        .. code-block:: http\\n\\n            GET /jobs/20121130104633606931 HTTP/1.1\\n            Host: localhost:8000\\n            Accept: application/x-yaml\\n\\n        **Example response:**\\n\\n        .. code-block:: http\\n\\n            HTTP/1.1 200 OK\\n            Content-Length: 73\\n            Content-Type: application/x-yaml\\n\\n            info:\\n            - Arguments:\\n                - '3'\\n                Function: test.fib\\n                Minions:\\n                - jerry\\n                Start Time: 2012, Nov 30 10:46:33.606931\\n                Target: '*'\\n                Target-type: glob\\n                User: saltdev\\n                jid: '20121130104633606931'\\n            return:\\n            - jerry:\\n                - - 0\\n                - 1\\n                - 1\\n                - 2\\n                - 6.9141387939453125e-06\\n        \"", "#NEWLINE#", "if", "(", "not", "self", ".", "_verify_auth", "(", ")", ")", ":", "#NEWLINE#", "#INDENT#", "self", ".", "redirect", "(", "'/login'", ")", "#NEWLINE#", "return", "#NEWLINE#", "#UNINDENT#", "if", "jid", ":", "#NEWLINE#", "#INDENT#", "self", ".", "lowstate", "=", "[", "{", "#NEWLINE#", "#INDENT#", "'fun'", ":", "'jobs.list_job'", ",", "#NEWLINE#", "'jid'", ":", "self", ",", "#NEWLINE#", "self", ".", "lowstate", "=", "[", "{", "#NEWLINE#", "#NEWLINE#", "#UNINDENT#", "self", ".", "disbatch", "(", ")"]}}
{"position": {"error_location": 50, "repair_targets": [5, 31], "repair_candidates": [3, 11, 20, 35, 50, 53, 62, 5, 31]}}
{"prediction": {"error_location": 0.9981617331504822, "repair_targets": [0.9036931991577148, 0.027486616745591164], "repair_candidates": [0.05532904714345932, 0.9036931991577148, 0.0007439193432219326, 0.0036255079321563244, 0.027486616745591164, 0.0013061048230156302, 0.006344383116811514, 3.713151454576291e-05, 0.0014340610941872], "target_probs": 0.9311798214912415}}


{"result": {"time": "2021-02-11 10:26:49.430923", "n_pass": [55, 7, 7], "n_token": 61, "loss": [0.5352154970169067, 0.17755575478076935], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["asynchronous", "#NEWLINE#", "def get(", "self", ",", "jid", "\"\\n        A convenience URL for getting lists of previously run jobs or getting\\n        the return from a single job\\n\\n        .. http:get:: /jobs/(jid)\\n\\n            List jobs or show a single job from the job cache.\\n\\n            :status 200: |200|\\n            :status 401: |401|\\n            :status 406: |406|\\n\\n        **Example request:**\\n\\n        .. code-block:: bash\\n\\n            curl -i localhost:8000/jobs\\n\\n        .. code-block:: http\\n\\n            GET /jobs HTTP/1.1\\n            Host: localhost:8000\\n            Accept: application/x-yaml\\n\\n        **Example response:**\\n\\n        .. code-block:: http\\n\\n            HTTP/1.1 200 OK\\n            Content-Length: 165\\n            Content-Type: application/x-yaml\\n\\n            return:\\n            - '20121130104633606931':\\n                Arguments:\\n                - '3'\\n                Function: test.fib\\n                Start Time: 2012, Nov 30 10:46:33.606931\\n                Target: jerry\\n                Target-type: glob\\n\\n        **Example request:**\\n\\n        .. code-block:: bash\\n\\n            curl -i localhost:8000/jobs/20121130104633606931\\n\\n        .. code-block:: http\\n\\n            GET /jobs/20121130104633606931 HTTP/1.1\\n            Host: localhost:8000\\n            Accept: application/x-yaml\\n\\n        **Example response:**\\n\\n        .. code-block:: http\\n\\n            HTTP/1.1 200 OK\\n            Content-Length: 73\\n            Content-Type: application/x-yaml\\n\\n            info:\\n            - Arguments:\\n                - '3'\\n                Function: test.fib\\n                Minions:\\n                - jerry\\n                Start Time: 2012, Nov 30 10:46:33.606931\\n                Target: '*'\\n                Target-type: glob\\n                User: saltdev\\n                jid: '20121130104633606931'\\n            return:\\n            - jerry:\\n                - - 0\\n                - 1\\n                - 1\\n                - 2\\n                - 6.9141387939453125e-06\\n        \"", "#NEWLINE#", "if", "(", "not", "self", "#NEWLINE#", "#INDENT#", "self", ".", "redirect", "(", "'/login'", ")", "#NEWLINE#", "return", "#NEWLINE#", "#UNINDENT#", "if", "jid", ":", "#NEWLINE#", "#INDENT#", "self", ".", "lowstate", "=", "[", "{", "#NEWLINE#", "#INDENT#", "'fun'", ":", "'jobs.list_job'", ",", "#NEWLINE#", "'jid'", ":", "self", ",", "#NEWLINE#", "self", ".", "lowstate", "=", "[", "{", "#NEWLINE#", "#NEWLINE#", "#UNINDENT#", "self", ".", "disbatch", "(", ")"]}}
{"position": {"error_location": 44, "repair_targets": [5, 25], "repair_candidates": [3, 11, 14, 29, 44, 47, 56, 5, 25]}}
{"prediction": {"error_location": 0.585543155670166, "repair_targets": [0.8139183521270752, 0.023395944386720657], "repair_candidates": [0.0211667250841856, 0.8139183521270752, 0.004957410506904125, 0.00013236835366114974, 0.023395944386720657, 0.0004638581594917923, 0.13258565962314606, 0.0003556423762347549, 0.003024067496880889], "target_probs": 0.8373143076896667}}


{"result": {"time": "2021-02-11 10:26:49.590381", "n_pass": [84, 9, 8], "n_token": 58, "loss": [0.538644015789032, 0.20936906337738037], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["asynchronous", "#NEWLINE#", "def get(", "self", ",", "jid", "\"\\n        A convenience URL for getting lists of previously run jobs or getting\\n        the return from a single job\\n\\n        .. http:get:: /jobs/(jid)\\n\\n            List jobs or show a single job from the job cache.\\n\\n            :status 200: |200|\\n            :status 401: |401|\\n            :status 406: |406|\\n\\n        **Example request:**\\n\\n        .. code-block:: bash\\n\\n            curl -i localhost:8000/jobs\\n\\n        .. code-block:: http\\n\\n            GET /jobs HTTP/1.1\\n            Host: localhost:8000\\n            Accept: application/x-yaml\\n\\n        **Example response:**\\n\\n        .. code-block:: http\\n\\n            HTTP/1.1 200 OK\\n            Content-Length: 165\\n            Content-Type: application/x-yaml\\n\\n            return:\\n            - '20121130104633606931':\\n                Arguments:\\n                - '3'\\n                Function: test.fib\\n                Start Time: 2012, Nov 30 10:46:33.606931\\n                Target: jerry\\n                Target-type: glob\\n\\n        **Example request:**\\n\\n        .. code-block:: bash\\n\\n            curl -i localhost:8000/jobs/20121130104633606931\\n\\n        .. code-block:: http\\n\\n            GET /jobs/20121130104633606931 HTTP/1.1\\n            Host: localhost:8000\\n            Accept: application/x-yaml\\n\\n        **Example response:**\\n\\n        .. code-block:: http\\n\\n            HTTP/1.1 200 OK\\n            Content-Length: 73\\n            Content-Type: application/x-yaml\\n\\n            info:\\n            - Arguments:\\n                - '3'\\n                Function: test.fib\\n                Minions:\\n                - jerry\\n                Start Time: 2012, Nov 30 10:46:33.606931\\n                Target: '*'\\n                Target-type: glob\\n                User: saltdev\\n                jid: '20121130104633606931'\\n            return:\\n            - jerry:\\n                - - 0\\n                - 1\\n                - 1\\n                - 2\\n                - 6.9141387939453125e-06\\n        \"", "#NEWLINE#", "if", "(", "not", "self", "#NEWLINE#", "#INDENT#", "self", "'/login'", ")", "#NEWLINE#", "return", "#NEWLINE#", "#UNINDENT#", "if", "jid", ":", "#NEWLINE#", "#INDENT#", "self", ".", "lowstate", "=", "[", "{", "#NEWLINE#", "#INDENT#", "'fun'", ":", "'jobs.list_job'", ",", "#NEWLINE#", "'jid'", ":", "self", ",", "#NEWLINE#", "self", ".", "lowstate", "=", "[", "{", "#NEWLINE#", "#NEWLINE#", "#UNINDENT#", "self", ".", "disbatch", "(", ")"]}}
{"position": {"error_location": 41, "repair_targets": [5, 22], "repair_candidates": [3, 11, 14, 26, 41, 44, 53, 5, 22]}}
{"prediction": {"error_location": 0.5835390686988831, "repair_targets": [0.8041362166404724, 0.006959609687328339], "repair_candidates": [0.041882600635290146, 0.8041362166404724, 0.01116790808737278, 0.007941270247101784, 0.006959609687328339, 0.00044446808169595897, 0.12009074538946152, 0.0007889388944022357, 0.006588289514183998], "target_probs": 0.8110958337783813}}


{"result": {"time": "2021-02-11 10:26:49.667399", "n_pass": [85, 10, 9], "n_token": 55, "loss": [0.07967426627874374, 0.20482595264911652], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["asynchronous", "#NEWLINE#", "def get(", "self", ",", "jid", "\"\\n        A convenience URL for getting lists of previously run jobs or getting\\n        the return from a single job\\n\\n        .. http:get:: /jobs/(jid)\\n\\n            List jobs or show a single job from the job cache.\\n\\n            :status 200: |200|\\n            :status 401: |401|\\n            :status 406: |406|\\n\\n        **Example request:**\\n\\n        .. code-block:: bash\\n\\n            curl -i localhost:8000/jobs\\n\\n        .. code-block:: http\\n\\n            GET /jobs HTTP/1.1\\n            Host: localhost:8000\\n            Accept: application/x-yaml\\n\\n        **Example response:**\\n\\n        .. code-block:: http\\n\\n            HTTP/1.1 200 OK\\n            Content-Length: 165\\n            Content-Type: application/x-yaml\\n\\n            return:\\n            - '20121130104633606931':\\n                Arguments:\\n                - '3'\\n                Function: test.fib\\n                Start Time: 2012, Nov 30 10:46:33.606931\\n                Target: jerry\\n                Target-type: glob\\n\\n        **Example request:**\\n\\n        .. code-block:: bash\\n\\n            curl -i localhost:8000/jobs/20121130104633606931\\n\\n        .. code-block:: http\\n\\n            GET /jobs/20121130104633606931 HTTP/1.1\\n            Host: localhost:8000\\n            Accept: application/x-yaml\\n\\n        **Example response:**\\n\\n        .. code-block:: http\\n\\n            HTTP/1.1 200 OK\\n            Content-Length: 73\\n            Content-Type: application/x-yaml\\n\\n            info:\\n            - Arguments:\\n                - '3'\\n                Function: test.fib\\n                Minions:\\n                - jerry\\n                Start Time: 2012, Nov 30 10:46:33.606931\\n                Target: '*'\\n                Target-type: glob\\n                User: saltdev\\n                jid: '20121130104633606931'\\n            return:\\n            - jerry:\\n                - - 0\\n                - 1\\n                - 1\\n                - 2\\n                - 6.9141387939453125e-06\\n        \"", "#NEWLINE#", "if", "(", "not", "self", "#NEWLINE#", "#INDENT#", "self", "return", "#NEWLINE#", "#UNINDENT#", "if", "jid", ":", "#NEWLINE#", "#INDENT#", "self", ".", "lowstate", "=", "[", "{", "#NEWLINE#", "#INDENT#", "'fun'", ":", "'jobs.list_job'", ",", "#NEWLINE#", "'jid'", ":", "self", ",", "#NEWLINE#", "self", ".", "lowstate", "=", "[", "{", "#NEWLINE#", "#NEWLINE#", "#UNINDENT#", "self", ".", "disbatch", "(", ")"]}}
{"position": {"error_location": 38, "repair_targets": [5, 19], "repair_candidates": [3, 11, 14, 23, 38, 41, 50, 5, 19]}}
{"prediction": {"error_location": 0.9234172105789185, "repair_targets": [0.7962856888771057, 0.018503399565815926], "repair_candidates": [0.09454619884490967, 0.7962856888771057, 0.04405282810330391, 0.0026267380453646183, 0.018503399565815926, 0.00036791019374504685, 0.03857828676700592, 0.0002856649225577712, 0.00475323386490345], "target_probs": 0.8147891163825989}}


{"result": {"time": "2021-02-11 10:26:49.743572", "n_pass": [86, 11, 10], "n_token": 52, "loss": [0.09715332090854645, 0.15188010036945343], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["asynchronous", "#NEWLINE#", "def get(", "self", ",", "jid", "\"\\n        A convenience URL for getting lists of previously run jobs or getting\\n        the return from a single job\\n\\n        .. http:get:: /jobs/(jid)\\n\\n            List jobs or show a single job from the job cache.\\n\\n            :status 200: |200|\\n            :status 401: |401|\\n            :status 406: |406|\\n\\n        **Example request:**\\n\\n        .. code-block:: bash\\n\\n            curl -i localhost:8000/jobs\\n\\n        .. code-block:: http\\n\\n            GET /jobs HTTP/1.1\\n            Host: localhost:8000\\n            Accept: application/x-yaml\\n\\n        **Example response:**\\n\\n        .. code-block:: http\\n\\n            HTTP/1.1 200 OK\\n            Content-Length: 165\\n            Content-Type: application/x-yaml\\n\\n            return:\\n            - '20121130104633606931':\\n                Arguments:\\n                - '3'\\n                Function: test.fib\\n                Start Time: 2012, Nov 30 10:46:33.606931\\n                Target: jerry\\n                Target-type: glob\\n\\n        **Example request:**\\n\\n        .. code-block:: bash\\n\\n            curl -i localhost:8000/jobs/20121130104633606931\\n\\n        .. code-block:: http\\n\\n            GET /jobs/20121130104633606931 HTTP/1.1\\n            Host: localhost:8000\\n            Accept: application/x-yaml\\n\\n        **Example response:**\\n\\n        .. code-block:: http\\n\\n            HTTP/1.1 200 OK\\n            Content-Length: 73\\n            Content-Type: application/x-yaml\\n\\n            info:\\n            - Arguments:\\n                - '3'\\n                Function: test.fib\\n                Minions:\\n                - jerry\\n                Start Time: 2012, Nov 30 10:46:33.606931\\n                Target: '*'\\n                Target-type: glob\\n                User: saltdev\\n                jid: '20121130104633606931'\\n            return:\\n            - jerry:\\n                - - 0\\n                - 1\\n                - 1\\n                - 2\\n                - 6.9141387939453125e-06\\n        \"", "#NEWLINE#", "if", "(", "not", "self", "#NEWLINE#", "#INDENT#", "self", "if", "jid", ":", "#NEWLINE#", "#INDENT#", "self", ".", "lowstate", "=", "[", "{", "#NEWLINE#", "#INDENT#", "'fun'", ":", "'jobs.list_job'", ",", "#NEWLINE#", "'jid'", ":", "self", ",", "#NEWLINE#", "self", ".", "lowstate", "=", "[", "{", "#NEWLINE#", "#NEWLINE#", "#UNINDENT#", "self", ".", "disbatch", "(", ")"]}}
{"position": {"error_location": 35, "repair_targets": [5, 16], "repair_candidates": [3, 11, 14, 20, 35, 38, 47, 5, 16]}}
{"prediction": {"error_location": 0.9074168801307678, "repair_targets": [0.8555957674980164, 0.003495537443086505], "repair_candidates": [0.07527163624763489, 0.8555957674980164, 0.010699087753891945, 0.004787534475326538, 0.003495537443086505, 0.0005330059793777764, 0.0403144396841526, 0.00045329000568017364, 0.008849787525832653], "target_probs": 0.8590912818908691}}


{"result": {"time": "2021-02-11 10:26:49.818013", "n_pass": [89, 12, 11], "n_token": 49, "loss": [0.10770442336797714, 0.05745769664645195], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["asynchronous", "#NEWLINE#", "def get(", "self", ",", "jid", "\"\\n        A convenience URL for getting lists of previously run jobs or getting\\n        the return from a single job\\n\\n        .. http:get:: /jobs/(jid)\\n\\n            List jobs or show a single job from the job cache.\\n\\n            :status 200: |200|\\n            :status 401: |401|\\n            :status 406: |406|\\n\\n        **Example request:**\\n\\n        .. code-block:: bash\\n\\n            curl -i localhost:8000/jobs\\n\\n        .. code-block:: http\\n\\n            GET /jobs HTTP/1.1\\n            Host: localhost:8000\\n            Accept: application/x-yaml\\n\\n        **Example response:**\\n\\n        .. code-block:: http\\n\\n            HTTP/1.1 200 OK\\n            Content-Length: 165\\n            Content-Type: application/x-yaml\\n\\n            return:\\n            - '20121130104633606931':\\n                Arguments:\\n                - '3'\\n                Function: test.fib\\n                Start Time: 2012, Nov 30 10:46:33.606931\\n                Target: jerry\\n                Target-type: glob\\n\\n        **Example request:**\\n\\n        .. code-block:: bash\\n\\n            curl -i localhost:8000/jobs/20121130104633606931\\n\\n        .. code-block:: http\\n\\n            GET /jobs/20121130104633606931 HTTP/1.1\\n            Host: localhost:8000\\n            Accept: application/x-yaml\\n\\n        **Example response:**\\n\\n        .. code-block:: http\\n\\n            HTTP/1.1 200 OK\\n            Content-Length: 73\\n            Content-Type: application/x-yaml\\n\\n            info:\\n            - Arguments:\\n                - '3'\\n                Function: test.fib\\n                Minions:\\n                - jerry\\n                Start Time: 2012, Nov 30 10:46:33.606931\\n                Target: '*'\\n                Target-type: glob\\n                User: saltdev\\n                jid: '20121130104633606931'\\n            return:\\n            - jerry:\\n                - - 0\\n                - 1\\n                - 1\\n                - 2\\n                - 6.9141387939453125e-06\\n        \"", "#NEWLINE#", "if", "(", "not", "self", "#NEWLINE#", "#INDENT#", "self", "if", "jid", ":", "#NEWLINE#", "#INDENT#", "self", "[", "{", "#NEWLINE#", "#INDENT#", "'fun'", ":", "'jobs.list_job'", ",", "#NEWLINE#", "'jid'", ":", "self", ",", "#NEWLINE#", "self", ".", "lowstate", "=", "[", "{", "#NEWLINE#", "#NEWLINE#", "#UNINDENT#", "self", ".", "disbatch", "(", ")"]}}
{"position": {"error_location": 32, "repair_targets": [5, 16], "repair_candidates": [3, 11, 14, 20, 32, 35, 44, 5, 16]}}
{"prediction": {"error_location": 0.8978931307792664, "repair_targets": [0.9418652653694153, 0.0022965508978813887], "repair_candidates": [0.03077087365090847, 0.9418652653694153, 0.007873962633311749, 0.002842596033588052, 0.0022965508978813887, 0.0028304620645940304, 0.007764903362840414, 0.00018231492140330374, 0.003573088441044092], "target_probs": 0.9441618323326111}}


{"result": {"time": "2021-02-11 10:26:49.890491", "n_pass": [90, 13, 12], "n_token": 45, "loss": [0.07224030792713165, 0.1603083312511444], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["asynchronous", "#NEWLINE#", "def get(", "self", ",", "jid", "\"\\n        A convenience URL for getting lists of previously run jobs or getting\\n        the return from a single job\\n\\n        .. http:get:: /jobs/(jid)\\n\\n            List jobs or show a single job from the job cache.\\n\\n            :status 200: |200|\\n            :status 401: |401|\\n            :status 406: |406|\\n\\n        **Example request:**\\n\\n        .. code-block:: bash\\n\\n            curl -i localhost:8000/jobs\\n\\n        .. code-block:: http\\n\\n            GET /jobs HTTP/1.1\\n            Host: localhost:8000\\n            Accept: application/x-yaml\\n\\n        **Example response:**\\n\\n        .. code-block:: http\\n\\n            HTTP/1.1 200 OK\\n            Content-Length: 165\\n            Content-Type: application/x-yaml\\n\\n            return:\\n            - '20121130104633606931':\\n                Arguments:\\n                - '3'\\n                Function: test.fib\\n                Start Time: 2012, Nov 30 10:46:33.606931\\n                Target: jerry\\n                Target-type: glob\\n\\n        **Example request:**\\n\\n        .. code-block:: bash\\n\\n            curl -i localhost:8000/jobs/20121130104633606931\\n\\n        .. code-block:: http\\n\\n            GET /jobs/20121130104633606931 HTTP/1.1\\n            Host: localhost:8000\\n            Accept: application/x-yaml\\n\\n        **Example response:**\\n\\n        .. code-block:: http\\n\\n            HTTP/1.1 200 OK\\n            Content-Length: 73\\n            Content-Type: application/x-yaml\\n\\n            info:\\n            - Arguments:\\n                - '3'\\n                Function: test.fib\\n                Minions:\\n                - jerry\\n                Start Time: 2012, Nov 30 10:46:33.606931\\n                Target: '*'\\n                Target-type: glob\\n                User: saltdev\\n                jid: '20121130104633606931'\\n            return:\\n            - jerry:\\n                - - 0\\n                - 1\\n                - 1\\n                - 2\\n                - 6.9141387939453125e-06\\n        \"", "#NEWLINE#", "if", "(", "not", "self", "#NEWLINE#", "#INDENT#", "self", "if", "jid", ":", "#NEWLINE#", "#INDENT#", "self", "'fun'", ":", "'jobs.list_job'", ",", "#NEWLINE#", "'jid'", ":", "self", ",", "#NEWLINE#", "self", ".", "lowstate", "=", "[", "{", "#NEWLINE#", "#NEWLINE#", "#UNINDENT#", "self", ".", "disbatch", "(", ")"]}}
{"position": {"error_location": 28, "repair_targets": [5, 16], "repair_candidates": [3, 11, 14, 20, 28, 31, 40, 5, 16]}}
{"prediction": {"error_location": 0.9303073883056641, "repair_targets": [0.8484288454055786, 0.0034522463101893663], "repair_candidates": [0.11165264248847961, 0.8484288454055786, 0.013923794962465763, 0.01517043448984623, 0.0034522463101893663, 0.0005552967777475715, 0.004469369072467089, 6.915355334058404e-05, 0.00227816728875041], "target_probs": 0.8518810868263245}}


{"result": {"time": "2021-02-11 10:26:49.963200", "n_pass": [91, 14, 13], "n_token": 41, "loss": [0.040292296558618546, 0.1226251870393753], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["asynchronous", "#NEWLINE#", "def get(", "self", ",", "jid", "\"\\n        A convenience URL for getting lists of previously run jobs or getting\\n        the return from a single job\\n\\n        .. http:get:: /jobs/(jid)\\n\\n            List jobs or show a single job from the job cache.\\n\\n            :status 200: |200|\\n            :status 401: |401|\\n            :status 406: |406|\\n\\n        **Example request:**\\n\\n        .. code-block:: bash\\n\\n            curl -i localhost:8000/jobs\\n\\n        .. code-block:: http\\n\\n            GET /jobs HTTP/1.1\\n            Host: localhost:8000\\n            Accept: application/x-yaml\\n\\n        **Example response:**\\n\\n        .. code-block:: http\\n\\n            HTTP/1.1 200 OK\\n            Content-Length: 165\\n            Content-Type: application/x-yaml\\n\\n            return:\\n            - '20121130104633606931':\\n                Arguments:\\n                - '3'\\n                Function: test.fib\\n                Start Time: 2012, Nov 30 10:46:33.606931\\n                Target: jerry\\n                Target-type: glob\\n\\n        **Example request:**\\n\\n        .. code-block:: bash\\n\\n            curl -i localhost:8000/jobs/20121130104633606931\\n\\n        .. code-block:: http\\n\\n            GET /jobs/20121130104633606931 HTTP/1.1\\n            Host: localhost:8000\\n            Accept: application/x-yaml\\n\\n        **Example response:**\\n\\n        .. code-block:: http\\n\\n            HTTP/1.1 200 OK\\n            Content-Length: 73\\n            Content-Type: application/x-yaml\\n\\n            info:\\n            - Arguments:\\n                - '3'\\n                Function: test.fib\\n                Minions:\\n                - jerry\\n                Start Time: 2012, Nov 30 10:46:33.606931\\n                Target: '*'\\n                Target-type: glob\\n                User: saltdev\\n                jid: '20121130104633606931'\\n            return:\\n            - jerry:\\n                - - 0\\n                - 1\\n                - 1\\n                - 2\\n                - 6.9141387939453125e-06\\n        \"", "#NEWLINE#", "if", "(", "not", "self", "#NEWLINE#", "#INDENT#", "self", "if", "jid", ":", "#NEWLINE#", "#INDENT#", "self", "#NEWLINE#", "'jid'", ":", "self", ",", "#NEWLINE#", "self", ".", "lowstate", "=", "[", "{", "#NEWLINE#", "#NEWLINE#", "#UNINDENT#", "self", ".", "disbatch", "(", ")"]}}
{"position": {"error_location": 24, "repair_targets": [5, 16], "repair_candidates": [3, 11, 14, 20, 24, 27, 36, 5, 16]}}
{"prediction": {"error_location": 0.9605087637901306, "repair_targets": [0.8821765780448914, 0.002418551594018936], "repair_candidates": [0.09240058064460754, 0.8821765780448914, 0.010608387179672718, 0.006103270221501589, 0.002418551594018936, 0.002161588054150343, 0.002015578793361783, 0.0002551063080318272, 0.0018604560755193233], "target_probs": 0.8845951557159424}}


{"result": {"time": "2021-02-11 10:26:50.031912", "n_pass": [94, 15, 14], "n_token": 37, "loss": [0.5635356903076172, 0.2333076149225235], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["asynchronous", "#NEWLINE#", "def get(", "self", ",", "jid", "\"\\n        A convenience URL for getting lists of previously run jobs or getting\\n        the return from a single job\\n\\n        .. http:get:: /jobs/(jid)\\n\\n            List jobs or show a single job from the job cache.\\n\\n            :status 200: |200|\\n            :status 401: |401|\\n            :status 406: |406|\\n\\n        **Example request:**\\n\\n        .. code-block:: bash\\n\\n            curl -i localhost:8000/jobs\\n\\n        .. code-block:: http\\n\\n            GET /jobs HTTP/1.1\\n            Host: localhost:8000\\n            Accept: application/x-yaml\\n\\n        **Example response:**\\n\\n        .. code-block:: http\\n\\n            HTTP/1.1 200 OK\\n            Content-Length: 165\\n            Content-Type: application/x-yaml\\n\\n            return:\\n            - '20121130104633606931':\\n                Arguments:\\n                - '3'\\n                Function: test.fib\\n                Start Time: 2012, Nov 30 10:46:33.606931\\n                Target: jerry\\n                Target-type: glob\\n\\n        **Example request:**\\n\\n        .. code-block:: bash\\n\\n            curl -i localhost:8000/jobs/20121130104633606931\\n\\n        .. code-block:: http\\n\\n            GET /jobs/20121130104633606931 HTTP/1.1\\n            Host: localhost:8000\\n            Accept: application/x-yaml\\n\\n        **Example response:**\\n\\n        .. code-block:: http\\n\\n            HTTP/1.1 200 OK\\n            Content-Length: 73\\n            Content-Type: application/x-yaml\\n\\n            info:\\n            - Arguments:\\n                - '3'\\n                Function: test.fib\\n                Minions:\\n                - jerry\\n                Start Time: 2012, Nov 30 10:46:33.606931\\n                Target: '*'\\n                Target-type: glob\\n                User: saltdev\\n                jid: '20121130104633606931'\\n            return:\\n            - jerry:\\n                - - 0\\n                - 1\\n                - 1\\n                - 2\\n                - 6.9141387939453125e-06\\n        \"", "#NEWLINE#", "if", "(", "not", "self", "#NEWLINE#", "#INDENT#", "self", "if", "jid", ":", "#NEWLINE#", "#INDENT#", "self", "#NEWLINE#", "'jid'", ":", "self", ",", "#NEWLINE#", "self", ".", "#NEWLINE#", "#NEWLINE#", "#UNINDENT#", "self", ".", "disbatch", "(", ")"]}}
{"position": {"error_location": 24, "repair_targets": [5, 16], "repair_candidates": [3, 11, 14, 20, 24, 27, 32, 5, 16]}}
{"prediction": {"error_location": 0.5691930055618286, "repair_targets": [0.7875032424926758, 0.004406718537211418], "repair_candidates": [0.16911709308624268, 0.7875032424926758, 0.016207315027713776, 0.008016674779355526, 0.004406718537211418, 0.0031951023265719414, 0.005568895488977432, 0.0028936162125319242, 0.003091299207881093], "target_probs": 0.79190993309021}}


{"result": {"time": "2021-02-11 10:26:50.098772", "n_pass": [96, 16, 15], "n_token": 33, "loss": [0.483418345451355, 0.10614179819822311], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["asynchronous", "#NEWLINE#", "def get(", "self", ",", "jid", "\"\\n        A convenience URL for getting lists of previously run jobs or getting\\n        the return from a single job\\n\\n        .. http:get:: /jobs/(jid)\\n\\n            List jobs or show a single job from the job cache.\\n\\n            :status 200: |200|\\n            :status 401: |401|\\n            :status 406: |406|\\n\\n        **Example request:**\\n\\n        .. code-block:: bash\\n\\n            curl -i localhost:8000/jobs\\n\\n        .. code-block:: http\\n\\n            GET /jobs HTTP/1.1\\n            Host: localhost:8000\\n            Accept: application/x-yaml\\n\\n        **Example response:**\\n\\n        .. code-block:: http\\n\\n            HTTP/1.1 200 OK\\n            Content-Length: 165\\n            Content-Type: application/x-yaml\\n\\n            return:\\n            - '20121130104633606931':\\n                Arguments:\\n                - '3'\\n                Function: test.fib\\n                Start Time: 2012, Nov 30 10:46:33.606931\\n                Target: jerry\\n                Target-type: glob\\n\\n        **Example request:**\\n\\n        .. code-block:: bash\\n\\n            curl -i localhost:8000/jobs/20121130104633606931\\n\\n        .. code-block:: http\\n\\n            GET /jobs/20121130104633606931 HTTP/1.1\\n            Host: localhost:8000\\n            Accept: application/x-yaml\\n\\n        **Example response:**\\n\\n        .. code-block:: http\\n\\n            HTTP/1.1 200 OK\\n            Content-Length: 73\\n            Content-Type: application/x-yaml\\n\\n            info:\\n            - Arguments:\\n                - '3'\\n                Function: test.fib\\n                Minions:\\n                - jerry\\n                Start Time: 2012, Nov 30 10:46:33.606931\\n                Target: '*'\\n                Target-type: glob\\n                User: saltdev\\n                jid: '20121130104633606931'\\n            return:\\n            - jerry:\\n                - - 0\\n                - 1\\n                - 1\\n                - 2\\n                - 6.9141387939453125e-06\\n        \"", "#NEWLINE#", "if", "(", "not", "self", "#NEWLINE#", "#INDENT#", "self", "if", "jid", ":", "#NEWLINE#", "#INDENT#", "self", "#NEWLINE#", "'jid'", ":", "self", ",", "#NEWLINE#", "self", ".", "#NEWLINE#", "#NEWLINE#", "#UNINDENT#", "self"]}}
{"position": {"error_location": 24, "repair_targets": [5, 16], "repair_candidates": [3, 11, 14, 20, 24, 27, 32, 5, 16]}}
{"prediction": {"error_location": 0.6166718602180481, "repair_targets": [0.8971031308174133, 0.0021939792204648256], "repair_candidates": [0.04498128965497017, 0.8971031308174133, 0.008934756740927696, 0.0016701724380254745, 0.0021939792204648256, 0.0037790455389767885, 0.0031803669407963753, 0.0019213405903428793, 0.03623593971133232], "target_probs": 0.8992971181869507}}


{"result": {"time": "2021-02-11 10:26:50.226795", "n_pass": [99, 18, 16], "n_token": 30, "loss": [0.6002558469772339, 0.48470234870910645], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["asynchronous", "#NEWLINE#", "def get(", "self", ",", "jid", "(", "not", "self", "#NEWLINE#", "#INDENT#", "self", "if", "jid", ":", "#NEWLINE#", "#INDENT#", "self", "#NEWLINE#", "'jid'", ":", "self", ",", "#NEWLINE#", "self", ".", "#NEWLINE#", "#NEWLINE#", "#UNINDENT#", "self"]}}
{"position": {"error_location": 21, "repair_targets": [5, 13], "repair_candidates": [3, 8, 11, 17, 21, 24, 29, 5, 13]}}
{"prediction": {"error_location": 0.548671305179596, "repair_targets": [0.5953397750854492, 0.020540732890367508], "repair_candidates": [0.07946233451366425, 0.5953397750854492, 0.1425500214099884, 0.023054616525769234, 0.020540732890367508, 0.012664685025811195, 0.015573298558592796, 0.009778979234397411, 0.10103563219308853], "target_probs": 0.6158804893493652}}


{"result": {"time": "2021-02-11 10:26:50.355258", "n_pass": [127, 20, 17], "n_token": 29, "loss": [0.3706072270870209, 0.10392457246780396], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["asynchronous", "#NEWLINE#", "def get(", "self", "jid", "(", "not", "self", "#NEWLINE#", "#INDENT#", "self", "if", "jid", ":", "#NEWLINE#", "#INDENT#", "self", "#NEWLINE#", "'jid'", ":", "self", ",", "#NEWLINE#", "self", ".", "#NEWLINE#", "#NEWLINE#", "#UNINDENT#", "self"]}}
{"position": {"error_location": 20, "repair_targets": [4, 12], "repair_candidates": [3, 7, 10, 16, 20, 23, 28, 4, 12]}}
{"prediction": {"error_location": 0.6903150081634521, "repair_targets": [0.8916451334953308, 0.00964811909943819], "repair_candidates": [0.004289079457521439, 0.8916451334953308, 0.03540860489010811, 0.02476174384355545, 0.00964811909943819, 0.003238663077354431, 0.0039046851452440023, 0.0029055702034384012, 0.02419840358197689], "target_probs": 0.9012932777404785}}


{"result": {"time": "2021-02-11 10:26:50.418117", "n_pass": [129, 21, 18], "n_token": 27, "loss": [0.33589670062065125, 0.6866125464439392], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["asynchronous", "#NEWLINE#", "def get(", "self", "jid", "self", "#NEWLINE#", "#INDENT#", "self", "if", "jid", ":", "#NEWLINE#", "#INDENT#", "self", "#NEWLINE#", "'jid'", ":", "self", ",", "#NEWLINE#", "self", ".", "#NEWLINE#", "#NEWLINE#", "#UNINDENT#", "self"]}}
{"position": {"error_location": 18, "repair_targets": [4, 10], "repair_candidates": [3, 5, 8, 14, 18, 21, 26, 4, 10]}}
{"prediction": {"error_location": 0.7146969437599182, "repair_targets": [0.5026426911354065, 0.0006353549542836845], "repair_candidates": [0.0026321911718696356, 0.5026426911354065, 0.48354867100715637, 0.003241311525925994, 0.0006353549542836845, 0.0004085919354110956, 0.00048774669994600117, 0.00026561180129647255, 0.006137849297374487], "target_probs": 0.5032780170440674}}


{"result": {"time": "2021-02-11 10:26:50.663397", "n_pass": [139, 25, 19], "n_token": 25, "loss": [0.5787471532821655, 0.6277663111686707], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["asynchronous", "#NEWLINE#", "def get(", "self", "jid", "self", "#NEWLINE#", "#INDENT#", "self", "if", "jid", ":", "#NEWLINE#", "#INDENT#", "self", "#NEWLINE#", "'jid'", ":", "self", ",", "#NEWLINE#", "self", ".", "#UNINDENT#", "self"]}}
{"position": {"error_location": 18, "repair_targets": [4, 10], "repair_candidates": [3, 5, 8, 14, 18, 21, 24, 4, 10]}}
{"prediction": {"error_location": 0.5606002807617188, "repair_targets": [0.5319064855575562, 0.0018762876279652119], "repair_candidates": [0.004487504716962576, 0.5319064855575562, 0.44693243503570557, 0.006973538082093, 0.0018762876279652119, 0.0010023916838690639, 0.0026294426061213017, 3.314843343105167e-05, 0.004158718511462212], "target_probs": 0.5337827801704407}}


{"result": {"time": "2021-02-11 10:26:50.787769", "n_pass": [142, 27, 20], "n_token": 24, "loss": [0.6219344735145569, 0.18569281697273254], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["asynchronous", "def get(", "self", "jid", "self", "#NEWLINE#", "#INDENT#", "self", "if", "jid", ":", "#NEWLINE#", "#INDENT#", "self", "#NEWLINE#", "'jid'", ":", "self", ",", "#NEWLINE#", "self", ".", "#UNINDENT#", "self"]}}
{"position": {"error_location": 17, "repair_targets": [3, 9], "repair_candidates": [2, 4, 7, 13, 17, 20, 23, 3, 9]}}
{"prediction": {"error_location": 0.5369047522544861, "repair_targets": [0.8302755951881409, 0.0002530848723836243], "repair_candidates": [0.0010835175635293126, 0.8302755951881409, 0.16594316065311432, 0.0008007654105313122, 0.0002530848723836243, 0.00021827500313520432, 0.0005722651258111, 5.174031230126275e-06, 0.0008482146658934653], "target_probs": 0.8305286765098572}}


{"result": {"time": "2021-02-11 10:26:50.908077", "n_pass": [149, 29, 21], "n_token": 22, "loss": [0.6197225451469421, 0.18515801429748535], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["asynchronous", "def get(", "self", "jid", "self", "#NEWLINE#", "#INDENT#", "self", "if", "jid", "#INDENT#", "self", "#NEWLINE#", "'jid'", ":", "self", ",", "#NEWLINE#", "self", ".", "#UNINDENT#", "self"]}}
{"position": {"error_location": 15, "repair_targets": [3, 9], "repair_candidates": [2, 4, 7, 11, 15, 18, 21, 3, 9]}}
{"prediction": {"error_location": 0.5380937457084656, "repair_targets": [0.8282888531684875, 0.0026841354556381702], "repair_candidates": [0.0013006092049181461, 0.8282888531684875, 0.1486012190580368, 0.006511030253022909, 0.0026841354556381702, 0.003731638891622424, 0.0040472885593771935, 1.9697028619702905e-05, 0.004815585445612669], "target_probs": 0.8309729695320129}}


{"result": {"time": "2021-02-11 10:26:50.967342", "n_pass": [151, 30, 22], "n_token": 20, "loss": [0.12116919457912445, 0.09393835067749023], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["asynchronous", "def get(", "self", "jid", "self", "#NEWLINE#", "#INDENT#", "self", "if", "jid", "#INDENT#", "self", ":", "self", ",", "#NEWLINE#", "self", ".", "#UNINDENT#", "self"]}}
{"position": {"error_location": 13, "repair_targets": [3, 9], "repair_candidates": [2, 4, 7, 11, 13, 16, 19, 3, 9]}}
{"prediction": {"error_location": 0.8858840465545654, "repair_targets": [0.9011093378067017, 0.009229518473148346], "repair_candidates": [0.0016376852290704846, 0.9011093378067017, 0.07656510919332504, 0.006862597074359655, 0.009229518473148346, 0.003161155618727207, 0.0004209679609630257, 1.0671967174857855e-05, 0.0010029900586232543], "target_probs": 0.9103388786315918}}


{"result": {"time": "2021-02-11 10:26:51.086734", "n_pass": [156, 32, 23], "n_token": 19, "loss": [0.1263471245765686, 0.6077818274497986], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["def get(", "self", "jid", "self", "#NEWLINE#", "#INDENT#", "self", "if", "jid", "#INDENT#", "self", ":", "self", ",", "#NEWLINE#", "self", ".", "#UNINDENT#", "self"]}}
{"position": {"error_location": 12, "repair_targets": [2, 8], "repair_candidates": [1, 3, 6, 10, 12, 15, 18, 2, 8]}}
{"prediction": {"error_location": 0.8813088536262512, "repair_targets": [0.4848414361476898, 0.05971601605415344], "repair_candidates": [0.011823884211480618, 0.4848414361476898, 0.38033777475357056, 0.04579398036003113, 0.05971601605415344, 0.012330296449363232, 0.0014705080538988113, 2.7062982553616166e-05, 0.003659007139503956], "target_probs": 0.5445574522018433}}


{"result": {"time": "2021-02-11 10:26:51.261168", "n_pass": [185, 35, 24], "n_token": 18, "loss": [0.10809461027383804, 0.4261949360370636], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["def get(", "self", "jid", "self", "#INDENT#", "self", "if", "jid", "#INDENT#", "self", ":", "self", ",", "#NEWLINE#", "self", ".", "#UNINDENT#", "self"]}}
{"position": {"error_location": 11, "repair_targets": [2, 7], "repair_candidates": [1, 3, 5, 9, 11, 14, 17, 2, 7]}}
{"prediction": {"error_location": 0.8975426554679871, "repair_targets": [0.5440480709075928, 0.1089409813284874], "repair_candidates": [0.05344580486416817, 0.5440480709075928, 0.03209197148680687, 0.17499619722366333, 0.1089409813284874, 0.06754394620656967, 0.0071215941570699215, 0.00012431952927727252, 0.01168713066726923], "target_probs": 0.6529890298843384}}


{"result": {"time": "2021-02-11 10:26:51.318625", "n_pass": [186, 36, 25], "n_token": 17, "loss": [0.09978504478931427, 0.5568498969078064], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["def get(", "self", "jid", "self", "self", "if", "jid", "#INDENT#", "self", ":", "self", ",", "#NEWLINE#", "self", ".", "#UNINDENT#", "self"]}}
{"position": {"error_location": 10, "repair_targets": [2, 6], "repair_candidates": [1, 3, 4, 8, 10, 13, 16, 2, 6]}}
{"prediction": {"error_location": 0.9050321578979492, "repair_targets": [0.36105096340179443, 0.21196028590202332], "repair_candidates": [0.06796841323375702, 0.36105096340179443, 0.024653343483805656, 0.10915598273277283, 0.21196028590202332, 0.20259453356266022, 0.0130881043151021, 0.00014560289855580777, 0.009382806718349457], "target_probs": 0.5730112791061401}}


{"result": {"time": "2021-02-11 10:26:51.434762", "n_pass": [190, 38, 26], "n_token": 16, "loss": [0.4655225872993469, 0.09654524177312851], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["def get(", "self", "jid", "self", "self", "if", "jid", "self", ":", "self", ",", "#NEWLINE#", "self", ".", "#UNINDENT#", "self"]}}
{"position": {"error_location": 9, "repair_targets": [2, 6], "repair_candidates": [1, 3, 4, 7, 9, 12, 15, 2, 6]}}
{"prediction": {"error_location": 0.6278069019317627, "repair_targets": [0.17437081038951874, 0.733597993850708], "repair_candidates": [0.01740756258368492, 0.17437081038951874, 0.012909544631838799, 0.038978636264801025, 0.733597993850708, 0.01245182380080223, 0.006312199868261814, 4.109828296350315e-05, 0.0039302934892475605], "target_probs": 0.9079688191413879}}


{"result": {"time": "2021-02-11 10:26:51.548355", "n_pass": [194, 40, 27], "n_token": 15, "loss": [0.4815220236778259, 0.1577065885066986], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["def get(", "self", "jid", "self", "self", "if", "jid", "self", ":", "self", "#NEWLINE#", "self", ".", "#UNINDENT#", "self"]}}
{"position": {"error_location": 9, "repair_targets": [2, 6], "repair_candidates": [1, 3, 4, 7, 9, 11, 14, 2, 6]}}
{"prediction": {"error_location": 0.6178423166275024, "repair_targets": [0.4605419635772705, 0.3935583531856537], "repair_candidates": [0.038676660507917404, 0.4605419635772705, 0.02471335418522358, 0.04709872603416443, 0.3935583531856537, 0.015232187695801258, 0.005832370836287737, 0.00040020840242505074, 0.013946076855063438], "target_probs": 0.8541003465652466}}


{"result": {"time": "2021-02-11 10:26:51.774085", "n_pass": [200, 44, 28], "n_token": 14, "loss": [0.3128780424594879, 0.15747325122356415], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["self", "jid", "self", "self", "if", "jid", "self", ":", "self", "#NEWLINE#", "self", ".", "#UNINDENT#", "self"]}}
{"position": {"error_location": 8, "repair_targets": [1, 5], "repair_candidates": [0, 2, 3, 6, 8, 10, 13, 1, 5]}}
{"prediction": {"error_location": 0.7313390970230103, "repair_targets": [0.03206774964928627, 0.8222318887710571], "repair_candidates": [0.12379587441682816, 0.03206774964928627, 0.0017307123634964228, 0.003548263106495142, 0.8222318887710571, 0.01098731067031622, 0.0015508688520640135, 5.529118061531335e-05, 0.004032011143863201], "target_probs": 0.8542996644973755}}


{"result": {"time": "2021-02-11 10:26:51.997006", "n_pass": [212, 48, 29], "n_token": 13, "loss": [0.31032058596611023, 0.13426101207733154], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["self", "jid", "self", "self", "if", "jid", "self", ":", "self", "#NEWLINE#", "self", "#UNINDENT#", "self"]}}
{"position": {"error_location": 8, "repair_targets": [1, 5], "repair_candidates": [0, 2, 3, 6, 8, 10, 12, 1, 5]}}
{"prediction": {"error_location": 0.733211874961853, "repair_targets": [0.03292897716164589, 0.8414328098297119], "repair_candidates": [0.0995563343167305, 0.03292897716164589, 0.0013362625613808632, 0.0023337984457612038, 0.8414328098297119, 0.016004780307412148, 0.0019433182897046208, 0.0004449829284567386, 0.004018642473965883], "target_probs": 0.8743618130683899}}




Minimal simplified tokens:

['self', 'jid', 'self', 'self', 'if', 'jid', 'self', ':', 'self', '#NEWLINE#', 'self', '#UNINDENT#', 'self']
