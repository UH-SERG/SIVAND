
Original sample:

{"has_bug": true, "bug_kind": 1, "bug_kind_name": "VARIABLE_MISUSE", "source_tokens": ["#NEWLINE#", "def make_organization_unit_orgunit_provisioning_uri(", "self", ",", "customer_id", ",", "org_unit_path", "=", "None", ",", "params", "=", "None", ")", ":", "#NEWLINE#", "#INDENT#", "\"Creates a resource feed URI for the orgunit's Provisioning API calls.\\n\\n    Using this client's Google Apps domain, create a feed URI for organization\\n    unit orgunit's provisioning in that domain. If an org_unit_path is\\n    provided, return a URI for that specific resource.\\n    If params are provided, append them as GET params.\\n\\n    Args:\\n      customer_id: string The customerId of the user.\\n      org_unit_path: string (optional) The organization unit's path for which\\n          to make a feed URI.\\n      params: dict (optional) key -> value params to append as GET vars to the\\n          URI. Example: params={'start': 'my-resource-id'}\\n\\n    Returns:\\n      A string giving the URI for organization unit provisioning for\\n          given org_unit_path\\n    \"", "#NEWLINE#", "return", "self", ".", "make_organization_unit_provisioning_uri", "(", "ORGANIZATION_UNIT_FEED", ",", "customer_id", ",", "org_unit_path", ",", "self", ")"], "error_location": [30], "repair_targets": [10], "repair_candidates": [6, 28, 2, 20, 30, 4, 26, 10], "provenances": [{"datasetProvenance": {"datasetName": "ETHPy150Open", "filepath": "acil-bwh/SlicerCIP/Scripted/attic/PicasaSnap/gdata/apps/organization/client.py", "license": "bsd-3-clause", "note": "license: bigquery_api"}}], "txt_file": "eval__VARIABLE_MISUSE__SStuB.txt-00001-of-00300", "js_count": 3542, "results": {"model": "rnn", "prob": {"loc": [[0.020525746047496796, 2.5609105591684056e-07, 5.0508802473814285e-08, 3.1911481790380947e-10, 3.642732560038553e-09, 3.292219830086651e-10, 4.364480332696985e-09, 3.106762402893537e-09, 1.5760456051339133e-07, 3.755792565840466e-09, 2.707185728922923e-07, 8.578376764489803e-08, 4.953310295263691e-08, 3.171854245920258e-08, 2.985028046964544e-08, 4.6812036202936724e-07, 2.631998263780133e-08, 1.2771289448210155e-07, 6.578297728765392e-08, 9.467379769034778e-09, 4.0823715607984923e-07, 2.8827393805386237e-08, 7.91454723980678e-09, 1.757835264015739e-07, 2.4203891371143982e-05, 3.7413178688439075e-07, 0.0021798082161694765, 1.2227177421664237e-06, 0.0051837158389389515, 1.5005258546807454e-06, 0.9716734886169434, 0.00040769780753180385]], "pointer": [[0.0, 0.0, 3.4442539345036494e-06, 0.0, 3.156199090881273e-05, 0.0, 0.009906717576086521, 0.0, 0.0, 0.0, 0.9900532364845276, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 9.304027059897635e-08, 0.0, 0.0, 0.0, 0.0, 0.0, 1.6044656092617515e-07, 0.0, 3.874639787682099e-06, 0.0, 8.976076628641749e-07, 0.0]], "target": [0.9900532364845276]}, "loss": [0.028735429048538208, 0.009996563196182251], "acc": [0.0, 1.0, 1.0, 1.0]}}


Trace of simplified code(s):

{"result": {"time": "2021-02-11 10:44:04.963429", "n_pass": [1, 1, 1], "n_token": 32, "loss": [0.028735429048538208, 0.009996563196182251], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def make_organization_unit_orgunit_provisioning_uri(", "self", ",", "customer_id", ",", "org_unit_path", "=", "None", ",", "params", "=", "None", ")", ":", "#NEWLINE#", "#INDENT#", "\"Creates a resource feed URI for the orgunit's Provisioning API calls.\\n\\n    Using this client's Google Apps domain, create a feed URI for organization\\n    unit orgunit's provisioning in that domain. If an org_unit_path is\\n    provided, return a URI for that specific resource.\\n    If params are provided, append them as GET params.\\n\\n    Args:\\n      customer_id: string The customerId of the user.\\n      org_unit_path: string (optional) The organization unit's path for which\\n          to make a feed URI.\\n      params: dict (optional) key -> value params to append as GET vars to the\\n          URI. Example: params={'start': 'my-resource-id'}\\n\\n    Returns:\\n      A string giving the URI for organization unit provisioning for\\n          given org_unit_path\\n    \"", "#NEWLINE#", "return", "self", ".", "make_organization_unit_provisioning_uri", "(", "ORGANIZATION_UNIT_FEED", ",", "customer_id", ",", "org_unit_path", ",", "self", ")"]}}
{"position": {"error_location": 30, "repair_targets": [10], "repair_candidates": [6, 28, 2, 20, 30, 4, 26, 10]}}
{"prediction": {"error_location": 0.9716734886169434, "repair_targets": [0.9900532364845276], "repair_candidates": [3.4442539345036494e-06, 3.156199090881273e-05, 0.009906717576086521, 0.9900532364845276, 9.304027059897635e-08, 1.6044656092617515e-07, 3.874639787682099e-06, 8.976076628641749e-07], "target_probs": 0.9900532364845276}}


{"result": {"time": "2021-02-11 10:44:05.026812", "n_pass": [23, 2, 2], "n_token": 28, "loss": [0.030533038079738617, 0.01819699816405773], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def make_organization_unit_orgunit_provisioning_uri(", "self", ",", "customer_id", ",", "org_unit_path", "=", "None", ",", "params", "=", "#INDENT#", "\"Creates a resource feed URI for the orgunit's Provisioning API calls.\\n\\n    Using this client's Google Apps domain, create a feed URI for organization\\n    unit orgunit's provisioning in that domain. If an org_unit_path is\\n    provided, return a URI for that specific resource.\\n    If params are provided, append them as GET params.\\n\\n    Args:\\n      customer_id: string The customerId of the user.\\n      org_unit_path: string (optional) The organization unit's path for which\\n          to make a feed URI.\\n      params: dict (optional) key -> value params to append as GET vars to the\\n          URI. Example: params={'start': 'my-resource-id'}\\n\\n    Returns:\\n      A string giving the URI for organization unit provisioning for\\n          given org_unit_path\\n    \"", "#NEWLINE#", "return", "self", ".", "make_organization_unit_provisioning_uri", "(", "ORGANIZATION_UNIT_FEED", ",", "customer_id", ",", "org_unit_path", ",", "self", ")"]}}
{"position": {"error_location": 26, "repair_targets": [10], "repair_candidates": [6, 24, 2, 16, 26, 4, 22, 10]}}
{"prediction": {"error_location": 0.9699283838272095, "repair_targets": [0.981967568397522], "repair_candidates": [3.6119447486271383e-06, 5.59373183932621e-05, 0.017963729798793793, 0.981967568397522, 1.9822243757516844e-07, 3.3611894423302147e-07, 7.116673259588424e-06, 1.42412477543985e-06], "target_probs": 0.981967568397522}}


{"result": {"time": "2021-02-11 10:44:05.153414", "n_pass": [44, 4, 3], "n_token": 26, "loss": [0.13868016004562378, 0.3036414086818695], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def make_organization_unit_orgunit_provisioning_uri(", "self", ",", "customer_id", ",", "org_unit_path", "=", "None", ",", "params", "=", "#NEWLINE#", "return", "self", ".", "make_organization_unit_provisioning_uri", "(", "ORGANIZATION_UNIT_FEED", ",", "customer_id", ",", "org_unit_path", ",", "self", ")"]}}
{"position": {"error_location": 24, "repair_targets": [10], "repair_candidates": [6, 22, 2, 14, 24, 4, 20, 10]}}
{"prediction": {"error_location": 0.8705064058303833, "repair_targets": [0.7381255030632019], "repair_candidates": [3.030266088899225e-05, 0.0008323938818648458, 0.2608163058757782, 0.7381255030632019, 2.2040721887606196e-06, 1.1286836524959654e-05, 0.00015725154662504792, 2.4805773136904463e-05], "target_probs": 0.7381255030632019}}


{"result": {"time": "2021-02-11 10:44:05.273349", "n_pass": [47, 6, 4], "n_token": 24, "loss": [0.20506569743156433, 0.00250396435149014], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def make_organization_unit_orgunit_provisioning_uri(", "self", ",", "customer_id", ",", "org_unit_path", "=", "None", ",", "params", "=", "#NEWLINE#", "return", "self", ".", "make_organization_unit_provisioning_uri", "(", "customer_id", ",", "org_unit_path", ",", "self", ")"]}}
{"position": {"error_location": 22, "repair_targets": [10], "repair_candidates": [6, 20, 2, 14, 22, 4, 18, 10]}}
{"prediction": {"error_location": 0.8145937919616699, "repair_targets": [0.9974991679191589], "repair_candidates": [1.1590705071284901e-06, 0.0001091355734388344, 0.0023822288494557142, 0.9974991679191589, 4.195814256036101e-07, 1.9289069541628123e-07, 4.671767328545684e-06, 3.0187775337253697e-06], "target_probs": 0.9974991679191589}}


{"result": {"time": "2021-02-11 10:44:05.510556", "n_pass": [59, 10, 5], "n_token": 22, "loss": [0.12982235848903656, 0.19728802144527435], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def make_organization_unit_orgunit_provisioning_uri(", "self", ",", "customer_id", ",", "org_unit_path", "=", "None", ",", "params", "=", "#NEWLINE#", "return", "self", ".", "customer_id", ",", "org_unit_path", ",", "self", ")"]}}
{"position": {"error_location": 20, "repair_targets": [10], "repair_candidates": [6, 18, 2, 14, 20, 4, 16, 10]}}
{"prediction": {"error_location": 0.8782514333724976, "repair_targets": [0.8209541440010071], "repair_candidates": [1.1143442861794028e-06, 0.1777673363685608, 0.0003052585816476494, 0.8209541440010071, 1.978601858354523e-06, 0.0009281573002226651, 3.398555054445751e-05, 8.082320164248813e-06], "target_probs": 0.8209541440010071}}


{"result": {"time": "2021-02-11 10:44:05.746006", "n_pass": [94, 14, 6], "n_token": 21, "loss": [0.018309392035007477, 0.60416179895401], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def make_organization_unit_orgunit_provisioning_uri(", "self", ",", "customer_id", ",", "org_unit_path", "=", "None", ",", "params", "=", "#NEWLINE#", "return", "self", ".", "customer_id", "org_unit_path", ",", "self", ")"]}}
{"position": {"error_location": 19, "repair_targets": [10], "repair_candidates": [6, 17, 2, 14, 19, 4, 16, 10]}}
{"prediction": {"error_location": 0.981857180595398, "repair_targets": [0.5465323328971863], "repair_candidates": [2.554415459599113e-06, 0.44657549262046814, 0.0017138427356258035, 0.5465323328971863, 4.845556759391911e-06, 0.005011276807636023, 0.00014716641453560442, 1.2557886293507181e-05], "target_probs": 0.5465323328971863}}


{"result": {"time": "2021-02-11 10:44:05.862701", "n_pass": [98, 16, 7], "n_token": 20, "loss": [0.029338039457798004, 0.6900582313537598], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def make_organization_unit_orgunit_provisioning_uri(", "self", ",", "customer_id", ",", "org_unit_path", "=", "None", ",", "params", "=", "#NEWLINE#", "return", "self", ".", "customer_id", "org_unit_path", ",", "self"]}}
{"position": {"error_location": 19, "repair_targets": [10], "repair_candidates": [6, 17, 2, 14, 19, 4, 16, 10]}}
{"prediction": {"error_location": 0.971088171005249, "repair_targets": [0.5015468597412109], "repair_candidates": [2.3859824977989774e-06, 0.4911101758480072, 0.0011056793155148625, 0.5015468597412109, 4.3377340261940844e-06, 0.006138449069112539, 8.189646905520931e-05, 1.0126273082278203e-05], "target_probs": 0.5015468597412109}}


{"result": {"time": "2021-02-11 10:44:06.095721", "n_pass": [104, 20, 8], "n_token": 19, "loss": [0.22941598296165466, 0.08402617275714874], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def make_organization_unit_orgunit_provisioning_uri(", "self", ",", "customer_id", "org_unit_path", "=", "None", ",", "params", "=", "#NEWLINE#", "return", "self", ".", "customer_id", "org_unit_path", ",", "self"]}}
{"position": {"error_location": 18, "repair_targets": [9], "repair_candidates": [5, 16, 2, 13, 18, 4, 15, 9]}}
{"prediction": {"error_location": 0.7949977517127991, "repair_targets": [0.9194071888923645], "repair_candidates": [2.3888690066087293e-06, 0.05341965705156326, 0.02100302278995514, 0.9194071888923645, 3.017573590113898e-06, 0.006046811118721962, 0.00010238266986561939, 1.5514106053160504e-05], "target_probs": 0.9194071888923645}}


{"result": {"time": "2021-02-11 10:44:06.153167", "n_pass": [106, 21, 9], "n_token": 18, "loss": [0.1750825047492981, 0.06848344206809998], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def make_organization_unit_orgunit_provisioning_uri(", "self", ",", "customer_id", "org_unit_path", "None", ",", "params", "=", "#NEWLINE#", "return", "self", ".", "customer_id", "org_unit_path", ",", "self"]}}
{"position": {"error_location": 17, "repair_targets": [8], "repair_candidates": [5, 15, 2, 12, 17, 4, 14, 8]}}
{"prediction": {"error_location": 0.8393877744674683, "repair_targets": [0.9338089227676392], "repair_candidates": [2.244438064735732e-06, 0.05646570771932602, 0.007513145916163921, 0.9338089227676392, 2.8102792839490576e-06, 0.0021651864517480135, 3.374186417204328e-05, 8.284767318400554e-06], "target_probs": 0.9338089227676392}}


{"result": {"time": "2021-02-11 10:44:06.209193", "n_pass": [107, 22, 10], "n_token": 17, "loss": [0.20035764575004578, 0.0596892274916172], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def make_organization_unit_orgunit_provisioning_uri(", "self", ",", "customer_id", "org_unit_path", ",", "params", "=", "#NEWLINE#", "return", "self", ".", "customer_id", "org_unit_path", ",", "self"]}}
{"position": {"error_location": 16, "repair_targets": [7], "repair_candidates": [5, 14, 2, 11, 16, 4, 13, 7]}}
{"prediction": {"error_location": 0.8184379935264587, "repair_targets": [0.9420572519302368], "repair_candidates": [3.1120559924602276e-06, 0.02935005910694599, 0.024287661537528038, 0.9420572519302368, 5.150895958649926e-06, 0.004232047125697136, 4.894734956906177e-05, 1.582803452038206e-05], "target_probs": 0.9420572519302368}}


{"result": {"time": "2021-02-11 10:44:06.265337", "n_pass": [108, 23, 11], "n_token": 16, "loss": [0.023371342569589615, 0.4007498025894165], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def make_organization_unit_orgunit_provisioning_uri(", "self", ",", "customer_id", "org_unit_path", "params", "=", "#NEWLINE#", "return", "self", ".", "customer_id", "org_unit_path", ",", "self"]}}
{"position": {"error_location": 15, "repair_targets": [6], "repair_candidates": [5, 13, 2, 10, 15, 4, 12, 6]}}
{"prediction": {"error_location": 0.9768995642662048, "repair_targets": [0.6698176264762878], "repair_candidates": [4.6228160499595106e-06, 0.09745470434427261, 0.22852741181850433, 0.6698176264762878, 9.800522093428299e-06, 0.0041586109437048435, 2.0490915630944073e-05, 6.755549748049816e-06], "target_probs": 0.6698176264762878}}


{"result": {"time": "2021-02-11 10:44:06.376703", "n_pass": [111, 25, 12], "n_token": 15, "loss": [0.33837181329727173, 0.6402846574783325], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def make_organization_unit_orgunit_provisioning_uri(", "self", ",", "customer_id", "org_unit_path", "params", "=", "return", "self", ".", "customer_id", "org_unit_path", ",", "self"]}}
{"position": {"error_location": 14, "repair_targets": [6], "repair_candidates": [5, 12, 2, 9, 14, 4, 11, 6]}}
{"prediction": {"error_location": 0.7129300832748413, "repair_targets": [0.527142345905304], "repair_candidates": [1.0211578228336293e-05, 0.1455758512020111, 0.2605222165584564, 0.527142345905304, 3.259124787291512e-05, 0.06642910838127136, 0.00023851600417401642, 4.9167167162522674e-05], "target_probs": 0.527142345905304}}


{"result": {"time": "2021-02-11 10:44:06.434156", "n_pass": [112, 26, 13], "n_token": 14, "loss": [0.34632056951522827, 0.5610994100570679], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def make_organization_unit_orgunit_provisioning_uri(", "self", ",", "customer_id", "org_unit_path", "params", "=", "self", ".", "customer_id", "org_unit_path", ",", "self"]}}
{"position": {"error_location": 13, "repair_targets": [6], "repair_candidates": [5, 11, 2, 8, 13, 4, 10, 6]}}
{"prediction": {"error_location": 0.7072857618331909, "repair_targets": [0.5705814361572266], "repair_candidates": [8.817287380225025e-06, 0.15398924052715302, 0.24387937784194946, 0.5705814361572266, 6.805442535551265e-05, 0.031174009665846825, 0.00024935329565778375, 4.967950007994659e-05], "target_probs": 0.5705814361572266}}


{"result": {"time": "2021-02-11 10:44:06.543570", "n_pass": [117, 28, 14], "n_token": 13, "loss": [0.29277780652046204, 0.3734143376350403], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def make_organization_unit_orgunit_provisioning_uri(", "self", ",", "customer_id", "org_unit_path", "params", "=", "self", ".", "customer_id", "org_unit_path", "self"]}}
{"position": {"error_location": 12, "repair_targets": [6], "repair_candidates": [5, 11, 2, 8, 12, 4, 10, 6]}}
{"prediction": {"error_location": 0.7461879253387451, "repair_targets": [0.6883799433708191], "repair_candidates": [2.0940547983627766e-05, 0.13933153450489044, 0.16026628017425537, 0.6883799433708191, 0.00013243142166174948, 0.009539996273815632, 0.002298149513080716, 3.075910353800282e-05], "target_probs": 0.6883799433708191}}


{"result": {"time": "2021-02-11 10:44:06.597520", "n_pass": [119, 29, 15], "n_token": 12, "loss": [0.3372223675251007, 0.6472139954566956], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["def make_organization_unit_orgunit_provisioning_uri(", "self", ",", "customer_id", "org_unit_path", "params", "=", "self", ".", "customer_id", "org_unit_path", "self"]}}
{"position": {"error_location": 11, "repair_targets": [5], "repair_candidates": [4, 10, 1, 7, 11, 3, 9, 5]}}
{"prediction": {"error_location": 0.7137501239776611, "repair_targets": [0.5235022306442261], "repair_candidates": [5.766052709077485e-05, 0.22701774537563324, 0.23528288304805756, 0.5235022306442261, 0.00014896955690346658, 0.01045999862253666, 0.0034993761219084263, 3.114630453637801e-05], "target_probs": 0.5235022306442261}}


{"result": {"time": "2021-02-11 10:44:06.811617", "n_pass": [128, 33, 16], "n_token": 11, "loss": [0.3407100737094879, 0.09985408931970596], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["def make_organization_unit_orgunit_provisioning_uri(", "self", ",", "customer_id", "org_unit_path", "params", "=", "self", "customer_id", "org_unit_path", "self"]}}
{"position": {"error_location": 10, "repair_targets": [5], "repair_candidates": [4, 9, 1, 7, 10, 3, 8, 5]}}
{"prediction": {"error_location": 0.7112650871276855, "repair_targets": [0.9049694538116455], "repair_candidates": [1.2463334314816166e-05, 0.027353815734386444, 0.06650479137897491, 0.9049694538116455, 0.00021936996199656278, 8.638423605589196e-05, 0.0008199824951589108, 3.375111919012852e-05], "target_probs": 0.9049694538116455}}


{"result": {"time": "2021-02-11 10:44:06.920178", "n_pass": [134, 35, 17], "n_token": 10, "loss": [0.2872762978076935, 0.30293047428131104], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["def make_organization_unit_orgunit_provisioning_uri(", "self", "customer_id", "org_unit_path", "params", "=", "self", "customer_id", "org_unit_path", "self"]}}
{"position": {"error_location": 9, "repair_targets": [4], "repair_candidates": [3, 8, 1, 6, 9, 2, 7, 4]}}
{"prediction": {"error_location": 0.7503043413162231, "repair_targets": [0.7386504411697388], "repair_candidates": [3.9265883970074356e-05, 0.015364295803010464, 0.24486689269542694, 0.7386504411697388, 0.00020603871962521225, 0.0001363117917208001, 0.0007131599122658372, 2.3623548258910887e-05], "target_probs": 0.7386504411697388}}


{"result": {"time": "2021-02-11 10:44:07.025022", "n_pass": [143, 37, 18], "n_token": 9, "loss": [0.445566326379776, 0.3319567143917084], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["self", "customer_id", "org_unit_path", "params", "=", "self", "customer_id", "org_unit_path", "self"]}}
{"position": {"error_location": 8, "repair_targets": [3], "repair_candidates": [2, 7, 0, 5, 8, 1, 6, 3]}}
{"prediction": {"error_location": 0.6404614448547363, "repair_targets": [0.7175183892250061], "repair_candidates": [0.01806486025452614, 0.025400366634130478, 0.23166261613368988, 0.7175183892250061, 0.0010026212548837066, 0.0010270524071529508, 0.005266962107270956, 5.7116252719424665e-05], "target_probs": 0.7175183892250061}}




Minimal simplified tokens:

['self', 'customer_id', 'org_unit_path', 'params', '=', 'self', 'customer_id', 'org_unit_path', 'self']
