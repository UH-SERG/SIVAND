
Original sample:

{"has_bug": true, "bug_kind": 1, "bug_kind_name": "VARIABLE_MISUSE", "source_tokens": ["#NEWLINE#", "def __init__(", "self", ",", "request", ",", "*", "args", ",", "**kwargs", ")", ":", "#NEWLINE#", "#INDENT#", "super", "(", "CreateNetwork", ",", "self", ")", ".", "__init__", "(", "request", ",", "*", "args", ",", "**", "kwargs", ")", "#NEWLINE#", "tenant_choices", "=", "[", "(", "''", ",", "_", "(", "'Select a project'", ")", ")", "]", "#NEWLINE#", "(", "tenants", ",", "has_more", ")", "=", "api", ".", "keystone", ".", "tenant_list", "(", "request", ")", "#NEWLINE#", "for", "tenant", "in", "tenants", ":", "#NEWLINE#", "#INDENT#", "if", "tenant", ".", "enabled", ":", "#NEWLINE#", "#INDENT#", "tenant_choices", ".", "append", "(", "(", "net_type", ".", "id", ",", "tenant", ".", "name", ")", ")", "#NEWLINE#", "#UNINDENT#", "#UNINDENT#", "self", ".", "fields", "[", "'tenant_id'", "]", ".", "choices", "=", "tenant_choices", "#NEWLINE#", "if", "api", ".", "neutron", ".", "is_port_profiles_supported", "(", ")", ":", "#NEWLINE#", "#INDENT#", "self", ".", "fields", "[", "'net_profile_id'", "]", ".", "choices", "=", "self", ".", "get_network_profile_choices", "(", "request", ")", "#NEWLINE#", "#UNINDENT#", "if", "api", ".", "neutron", ".", "is_extension_supported", "(", "request", ",", "'provider'", ")", ":", "#NEWLINE#", "#INDENT#", "neutron_settings", "=", "getattr", "(", "settings", ",", "'OPENSTACK_NEUTRON_NETWORK'", ",", "{", "#NEWLINE#", "#INDENT#", "#NEWLINE#", "#UNINDENT#", "}", ")", "#NEWLINE#", "seg_id_range", "=", "neutron_settings", ".", "get", "(", "'segmentation_id_range'", ",", "{", "#NEWLINE#", "#INDENT#", "#NEWLINE#", "#UNINDENT#", "}", ")", "#NEWLINE#", "self", ".", "seg_id_range", "=", "{", "#NEWLINE#", "#INDENT#", "'vlan'", ":", "seg_id_range", ".", "get", "(", "'vlan'", ",", "SEGMENTATION_ID_RANGE", ".", "get", "(", "'vlan'", ")", ")", ",", "#NEWLINE#", "'gre'", ":", "seg_id_range", ".", "get", "(", "'gre'", ",", "SEGMENTATION_ID_RANGE", ".", "get", "(", "'gre'", ")", ")", ",", "#NEWLINE#", "'vxlan'", ":", "seg_id_range", ".", "get", "(", "'vxlan'", ",", "SEGMENTATION_ID_RANGE", ".", "get", "(", "'vxlan'", ")", ")", ",", "#NEWLINE#", "#UNINDENT#", "}", "#NEWLINE#", "seg_id_help", "=", "(", "_", "(", "'For VLAN networks, the VLAN VID on the physical network that realizes the virtual network. Valid VLAN VIDs are %(vlan_min)s through %(vlan_max)s. For GRE or VXLAN networks, the tunnel ID. Valid tunnel IDs for GRE networks are %(gre_min)s through %(gre_max)s. For VXLAN networks, %(vxlan_min)s through %(vxlan_max)s.'", ")", "%", "{", "#NEWLINE#", "#INDENT#", "'vlan_min'", ":", "self", ".", "seg_id_range", "[", "'vlan'", "]", "[", "0", "]", ",", "#NEWLINE#", "'vlan_max'", ":", "self", ".", "seg_id_range", "[", "'vlan'", "]", "[", "1", "]", ",", "#NEWLINE#", "'gre_min'", ":", "self", ".", "seg_id_range", "[", "'gre'", "]", "[", "0", "]", ",", "#NEWLINE#", "'gre_max'", ":", "self", ".", "seg_id_range", "[", "'gre'", "]", "[", "1", "]", ",", "#NEWLINE#", "'vxlan_min'", ":", "self", ".", "seg_id_range", "[", "'vxlan'", "]", "[", "0", "]", ",", "#NEWLINE#", "'vxlan_max'", ":", "self", ".", "seg_id_range", "[", "'vxlan'", "]", "[", "1", "]", ",", "#NEWLINE#", "#UNINDENT#", "}", ")", "#NEWLINE#", "self", ".", "fields", "[", "'segmentation_id'", "]", ".", "help_text", "=", "seg_id_help", "#NEWLINE#", "supported_provider_types", "=", "neutron_settings", ".", "get", "(", "'supported_provider_types'", ",", "[", "'*'", "]", ")", "#NEWLINE#", "if", "(", "supported_provider_types", "==", "[", "'*'", "]", ")", ":", "#NEWLINE#", "#INDENT#", "network_type_choices", "=", "PROVIDER_TYPES", "#NEWLINE#", "#UNINDENT#", "else", ":", "#NEWLINE#", "#INDENT#", "network_type_choices", "=", "[", "net_type", "for", "net_type", "in", "PROVIDER_TYPES", "if", "(", "net_type", "[", "0", "]", "in", "supported_provider_types", ")", "]", "#NEWLINE#", "#UNINDENT#", "if", "(", "len", "(", "network_type_choices", ")", "==", "0", ")", ":", "#NEWLINE#", "#INDENT#", "self", ".", "_hide_provider_network_type", "(", ")", "#NEWLINE#", "#UNINDENT#", "else", ":", "#NEWLINE#", "#INDENT#", "self", ".", "fields", "[", "'network_type'", "]", ".", "choices", "=", "network_type_choices", "#NEWLINE#", "#UNINDENT#", "#UNINDENT#", "else", ":", "#NEWLINE#", "#INDENT#", "self", ".", "_hide_provider_network_type", "(", ")"], "error_location": [79], "repair_targets": [61, 68, 83], "repair_candidates": [7, 26, 160, 178, 185, 202, 219, 252, 265, 278, 291, 304, 317, 79, 377, 379, 384, 46, 63, 365, 374, 398, 426, 4, 23, 57, 126, 137, 61, 68, 83, 29, 48, 32, 74, 100, 144, 162, 343, 237, 339, 2, 18, 91, 113, 122, 176, 250, 263, 276, 289, 302, 315, 330, 406, 417, 434, 341, 356, 389], "provenances": [{"datasetProvenance": {"datasetName": "ETHPy150Open", "filepath": "CiscoSystems/avos/openstack_dashboard/dashboards/admin/networks/forms.py", "license": "apache-2.0", "note": "license: bigquery_api"}}], "txt_file": "eval__VARIABLE_MISUSE__SStuB.txt-00000-of-00300", "js_count": 872, "results": {"model": "rnn", "prob": {"loc": [[0.048346906900405884, 1.7647678305365844e-06, 6.807820795984298e-08, 1.226029500145387e-09, 9.560819336229542e-08, 3.2455471643544342e-09, 1.9637986792275797e-09, 7.327532784984214e-07, 7.392458173383076e-11, 7.378520017198298e-09, 1.0127068961196528e-08, 3.65308977512413e-10, 1.4876560427978802e-08, 2.6194708624416307e-09, 3.310571727865863e-08, 6.812619357532412e-10, 3.501465783983804e-08, 4.314619772571859e-09, 3.2876602773512786e-08, 1.1318169318430549e-10, 2.2385562847837548e-10, 1.9928068013541633e-06, 1.0064180600011241e-08, 3.6197448935126886e-05, 2.1732080313086044e-06, 8.008719305507839e-07, 7.03634714227519e-06, 1.58095573965511e-07, 1.123117421286679e-08, 2.083276558551006e-05, 5.741970454664624e-09, 9.123597988214271e-10, 5.320867746405611e-09, 1.3700120149451323e-08, 2.378229169153201e-08, 3.499222245295641e-08, 1.3937169640598768e-08, 7.026247916819273e-10, 4.284249257580086e-07, 9.283226964917901e-11, 7.733743423443684e-09, 2.0940694511750735e-08, 7.954120917474938e-09, 2.1910066649866167e-08, 3.053582720013992e-09, 8.709335475032276e-10, 5.593544472048961e-08, 1.4755090205209598e-10, 1.8418033675970946e-07, 7.304939986241266e-11, 2.620354211391174e-10, 1.6464559493556408e-08, 9.288859265099703e-11, 3.3681923916617507e-09, 1.0410418083139916e-09, 1.9428680886335314e-09, 2.317490377379272e-08, 0.00011446161079220474, 3.728644060174702e-07, 1.9326218989590416e-06, 2.985819236300813e-08, 8.905848503104608e-09, 8.776949300681736e-08, 0.0024071410298347473, 8.090486858236545e-08, 3.817624616431203e-08, 2.678273958167665e-08, 5.617882266051311e-07, 0.0007940949872136116, 1.3046168589880835e-08, 1.3598413772797358e-07, 7.74898101241206e-09, 6.851445988331761e-08, 5.443880013444868e-09, 4.446075863029364e-08, 7.1871011364521564e-09, 1.6362999843977377e-08, 8.214046109955575e-10, 1.3061669505987084e-06, 0.9406309723854065, 8.979319545687758e-07, 6.181368803481746e-07, 3.315924246294344e-08, 0.0021900010760873556, 4.0964030745271884e-07, 1.0779886139289374e-07, 1.909474356409646e-08, 1.3437135848448634e-08, 4.128726871499566e-08, 1.8658745659649867e-08, 3.3972455959485615e-09, 6.938134333722701e-08, 2.338900739751182e-10, 9.783810206442922e-09, 1.0897919233698872e-09, 6.881545573378389e-07, 5.353258725193655e-09, 4.777217554874369e-08, 7.228035947548506e-10, 1.5871849612381084e-08, 0.000608758709859103, 7.509574970754329e-07, 1.357780288202548e-08, 3.4346797406215046e-07, 6.809978275734707e-11, 3.2658591386791613e-09, 3.9363645676360193e-10, 1.0915315762360933e-08, 6.100395921748714e-08, 0.00013780816516373307, 3.676582309708465e-07, 3.7939406638543005e-07, 1.8224491915574959e-09, 1.9819557550704303e-08, 1.2725367426469347e-09, 7.517506617205072e-09, 1.3630313544510386e-09, 1.6556711557313974e-07, 3.922329128158708e-09, 9.011480450737963e-09, 5.499513622275742e-10, 1.1225600449193962e-09, 2.498866251698928e-07, 1.9276519269695314e-10, 8.919091243342336e-09, 1.2277220129419675e-08, 0.00010375090641900897, 3.2450845566245334e-08, 1.812397343314842e-08, 1.49063134813332e-06, 1.2216270217635383e-09, 4.401789283292601e-06, 1.2336524857214926e-10, 2.128093257169894e-08, 1.3277187127513912e-09, 1.3636223705759676e-08, 1.3593661307709226e-08, 9.191925346385688e-05, 1.4363911304826615e-07, 1.764136140991468e-05, 5.303652184096563e-09, 3.2602018862348814e-09, 5.3120782439464165e-08, 1.0905509828518234e-09, 7.477637176123153e-09, 4.638509132348645e-09, 4.064476044618459e-08, 5.591824336903528e-09, 4.1701765439938754e-05, 3.824284000586431e-09, 3.3447115299622965e-08, 2.2991045511844277e-08, 1.8289925129977291e-09, 8.113203620041531e-08, 1.6718712458896334e-07, 1.69611062972308e-08, 1.5738463332581887e-07, 4.0396690792476875e-07, 2.9195529549497223e-08, 1.4755779709219041e-08, 1.2967642515349098e-09, 6.027431886934664e-10, 1.2638270874276714e-08, 5.886425791246097e-10, 4.935066799660603e-10, 1.428929641278387e-09, 2.7045959996030433e-06, 7.33384908357948e-08, 3.600574283169067e-09, 3.1945670997401976e-08, 1.1682276834790173e-07, 1.025655382846935e-08, 1.9629955261279974e-07, 1.9820666352643457e-07, 2.2285727041548853e-08, 5.026313143474681e-09, 3.2612654798924723e-09, 9.868005024227244e-11, 1.4115274227233243e-10, 1.0519645599060823e-08, 1.9490145053424612e-09, 1.8813626212477175e-08, 1.4841211593008552e-09, 3.775824541918382e-09, 4.044064527697344e-10, 4.638927109112956e-08, 3.030922179902973e-10, 1.1718954695538741e-09, 4.980975354396122e-11, 3.6241032397299477e-09, 4.2059802862759454e-10, 1.3103801599356757e-08, 2.338117033318099e-09, 2.11645034831065e-09, 5.886602316707013e-11, 1.7027261378643743e-08, 1.9105744542002867e-08, 5.295030636176534e-09, 3.728270137060008e-09, 5.710679040760169e-09, 8.923595751220148e-10, 2.416618294365236e-10, 2.7554703407872694e-08, 1.5052861179754018e-09, 3.702890216672472e-10, 6.908161542806823e-11, 4.733768044218323e-09, 5.260971103204781e-10, 3.0834195197115832e-09, 9.226414299234875e-09, 1.18742027321872e-09, 1.6598834806647034e-10, 2.0691043545184584e-08, 1.5621278492972124e-08, 5.275030634521727e-09, 6.53507337133874e-09, 1.610175814903414e-08, 2.4090845984758857e-10, 3.0594926592186766e-10, 3.672270310062231e-08, 4.047228663317526e-10, 6.567371091392715e-10, 1.3134139609238815e-10, 2.218651262708704e-09, 1.0350228452082888e-09, 3.09053782565627e-09, 2.386179032143332e-09, 3.887984156847324e-09, 1.6181266049297705e-10, 6.074303726677499e-09, 1.4243370927147225e-08, 2.71857647504703e-09, 2.4442292634319074e-09, 2.1364915170352106e-08, 3.280896976320946e-07, 8.428981601582564e-08, 4.665496646794054e-07, 7.690701409046596e-09, 3.887032917759825e-10, 2.105133178886831e-09, 8.213756785835358e-08, 1.0372956937843014e-09, 1.4505221912486377e-08, 1.1511578357215058e-08, 1.1909973007817598e-09, 6.836544663713084e-10, 3.206054799420599e-08, 3.295217432253139e-09, 3.256126746009613e-08, 3.48451323350929e-10, 3.0189086828613654e-05, 3.4981714747139847e-10, 2.298372336895227e-08, 2.107570923337576e-10, 3.6293346994398235e-08, 4.6998556513244694e-07, 1.2476094601865384e-09, 1.0134306194231613e-06, 2.8788543104951714e-08, 2.6036371281179527e-08, 5.124196622574573e-09, 1.2863397458318104e-08, 3.331884768087434e-10, 2.9382758839346934e-06, 4.4106471253080315e-10, 1.4096078082559416e-08, 1.434009994083496e-10, 2.2619197181938944e-08, 3.687566447752033e-07, 6.145339792595905e-10, 1.1320006478854339e-06, 5.0128061701570914e-08, 8.790633110322688e-09, 1.4114023727529457e-08, 1.9131844997133385e-09, 2.6747179471264815e-10, 2.835857685568044e-06, 9.248521393168119e-10, 9.365490605262039e-09, 1.7554013798104506e-10, 1.5608621950491397e-08, 1.0725741361738983e-07, 1.8031558468578623e-09, 1.2948038374815951e-06, 3.934018977247433e-08, 1.4144124982351514e-08, 5.7752402859989616e-09, 1.0895305990743509e-08, 3.4810657134620726e-10, 6.558256018251996e-07, 4.891685390084888e-10, 9.64567536954064e-09, 2.1036751507441664e-10, 1.1304157609970389e-08, 6.96227502317015e-08, 1.41979061840658e-09, 1.5993177839845885e-06, 4.3458580734068164e-08, 5.465676800042729e-09, 1.7393489315509214e-08, 3.0009747464809777e-10, 3.404281578855972e-10, 4.284087935957359e-06, 8.567100362455449e-10, 5.065792674230352e-09, 2.802588439099196e-10, 2.9958637792759646e-09, 8.608650148289598e-08, 1.0021077301303194e-09, 3.0511407089761633e-07, 2.306831348164451e-08, 7.1341905716337806e-09, 8.380580673872373e-09, 2.3330295473300566e-09, 1.6420174109299523e-09, 5.007326308259508e-06, 2.275462485101798e-09, 1.1829992097034392e-08, 3.0432431574745067e-10, 3.926595493197738e-09, 9.137190204455692e-08, 1.0030350994227888e-09, 3.8732532630092464e-06, 4.8345810910177534e-08, 1.3356771688677327e-08, 4.753222881959118e-08, 2.472369260431151e-07, 1.4134882064809062e-07, 6.82231027226976e-09, 2.707791990630426e-09, 8.728297196114454e-09, 1.050750250697341e-10, 2.2503170438170628e-09, 1.4536255532604514e-10, 5.196578278798825e-09, 1.5578456302733912e-09, 2.4501198847559635e-09, 2.0510276810270511e-10, 5.0451962607667156e-09, 3.783011925406754e-05, 7.028342796644438e-09, 4.147050258751506e-09, 5.7204463388416116e-09, 4.546536924721067e-09, 1.906474533797109e-09, 9.966522052096138e-10, 1.3855835923060056e-10, 1.963762308321293e-08, 1.9801845496658643e-07, 6.012901820895422e-08, 4.159745969900541e-07, 4.237719508637383e-08, 6.8971228728287315e-09, 3.4690279449023365e-07, 2.9675870649725766e-09, 1.2176224117865786e-07, 0.000840457680169493, 3.546764730799623e-07, 8.655572969473724e-08, 1.38465594545778e-07, 4.875917447577649e-09, 2.928022269088615e-09, 7.715032168675862e-09, 1.1510464759112438e-07, 1.452579478922189e-08, 1.2284215866742443e-09, 1.6946270875450864e-07, 1.3210702491051052e-05, 9.649784971088593e-08, 3.065256635181868e-07, 1.2943179861224507e-09, 2.8101601046159885e-08, 9.868641370758269e-08, 4.199553149675239e-09, 8.232542647590435e-09, 8.97699123925122e-07, 5.65612681384664e-05, 0.0015996908769011497, 7.235961874130226e-08, 8.552285635232693e-08, 3.180959851079024e-08, 2.7200889235245995e-05, 1.3397142595295009e-07, 5.324293965713878e-07, 0.0009622180368751287, 1.5029307798286595e-09, 2.8189081149321282e-06, 6.644260253096945e-08, 2.1401878314009082e-07, 0.0006038834108039737, 7.909329013955357e-08, 1.0075223322303373e-08, 4.6693578781287215e-08, 3.087071149820986e-07, 1.5878168779792645e-09, 9.497026809413e-08, 1.1717178693970709e-07, 9.23196310509411e-08, 0.00010969310824293643, 1.0488862471902394e-06, 1.0156201213362692e-08, 5.825950779581035e-07, 9.03204355751086e-09, 6.464348167867229e-09, 1.0909348446830336e-07, 1.0006122597161493e-09, 3.865522302248792e-08, 6.634426341634025e-10, 4.088553939851636e-09, 1.2886923528299121e-08, 3.129358105979918e-07, 1.94309119905256e-08, 4.172602814378479e-07, 6.109976080637125e-09, 1.631613599784032e-07, 4.7054417251501945e-08, 2.291983269842035e-10, 6.267111274382842e-09, 9.463504979656534e-11, 3.88207110901817e-09, 1.4828301087010942e-10, 1.4777418755329563e-07, 4.723484381408127e-10, 8.138632878740282e-09, 2.4054171987586415e-09, 2.4479398064158886e-08, 9.898223652271554e-05, 3.71826587297619e-08, 7.4399228999766365e-09, 4.972148985871172e-07, 3.0421538621538957e-09, 1.0824348350979562e-07, 8.377052296282272e-08, 4.429286382112707e-10, 2.9409079616016243e-08, 5.814684844729356e-10, 3.6285436877392385e-09, 1.2978635943738936e-08, 5.745548037339177e-07]], "pointer": [[0.0, 0.0, 0.0001025528836180456, 0.0, 0.0030143738258630037, 0.0, 0.0, 0.005228946916759014, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 6.776780355721712e-05, 0.0, 0.0, 0.0, 0.0, 0.0001846339291660115, 0.0, 0.0, 1.0572851351753343e-05, 0.0, 0.0, 0.0003348170139361173, 0.0, 0.0, 0.02703041397035122, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.005135266110301018, 0.0, 0.008905339986085892, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0014117445098236203, 0.0, 0.0, 0.0, 0.2031390368938446, 0.0, 9.197958206641488e-06, 0.0, 0.0, 0.0, 0.0, 0.7253249883651733, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0022571200970560312, 0.0, 0.0, 0.0, 0.0, 3.6513039958663285e-05, 0.0, 0.0, 0.0, 4.5016262447461486e-05, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 5.317793693393469e-06, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.00032542290864512324, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 2.391583620919846e-06, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 4.006382368970662e-06, 0.0, 0.0, 0.0, 0.00010962998931063339, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0029614923987537622, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.735819569148589e-05, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0007188129820860922, 0.0, 1.3822731261825538e-06, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 2.4353250864805887e-06, 0.0, 0.0009557480225339532, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 3.6532769627228845e-06, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 6.3149032030196395e-06, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 6.270500762184383e-06, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.00027297521592117846, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.1083830031566322e-06, 0.0, 0.0006368919275701046, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 3.815701347775757e-06, 0.0, 0.0006974599091336131, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.715090434117883e-06, 0.0, 0.00017836125334724784, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 3.8894827412150335e-06, 0.0, 0.00036384304985404015, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.380810658702103e-06, 0.0, 0.0001843378267949447, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 3.6980754885007627e-06, 0.0, 0.00011584149615373462, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.2334261327850982e-06, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 2.4212533389800228e-05, 0.0, 0.0006727817235514522, 0.0, 4.821971742785536e-06, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 2.88378942059353e-05, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.00023558552493341267, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0011695025023072958, 0.0, 0.0, 6.840418791398406e-05, 0.0, 0.006052120588719845, 0.0, 0.0, 0.0, 0.0, 0.0001464422675780952, 0.0, 0.0, 0.0, 0.0, 0.0006829133490100503, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0005792179726995528, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 5.977952241664752e-06, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 2.5168708361889003e-06, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0004957400378771126, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 5.703293481928995e-06, 0.0, 0.0, 0.0, 0.0]], "target": [0.928508996963501]}, "loss": [0.06120428815484047, 0.07417520880699158], "acc": [0.0, 1.0, 1.0, 1.0]}}


Trace of simplified code(s):

{"result": {"time": "2021-02-11 10:38:37.730778", "n_pass": [1, 1, 1], "n_token": 439, "loss": [0.06120428815484047, 0.07417520880699158], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def __init__(", "self", ",", "request", ",", "*", "args", ",", "**kwargs", ")", ":", "#NEWLINE#", "#INDENT#", "super", "(", "CreateNetwork", ",", "self", ")", ".", "__init__", "(", "request", ",", "*", "args", ",", "**", "kwargs", ")", "#NEWLINE#", "tenant_choices", "=", "[", "(", "''", ",", "_", "(", "'Select a project'", ")", ")", "]", "#NEWLINE#", "(", "tenants", ",", "has_more", ")", "=", "api", ".", "keystone", ".", "tenant_list", "(", "request", ")", "#NEWLINE#", "for", "tenant", "in", "tenants", ":", "#NEWLINE#", "#INDENT#", "if", "tenant", ".", "enabled", ":", "#NEWLINE#", "#INDENT#", "tenant_choices", ".", "append", "(", "(", "net_type", ".", "id", ",", "tenant", ".", "name", ")", ")", "#NEWLINE#", "#UNINDENT#", "#UNINDENT#", "self", ".", "fields", "[", "'tenant_id'", "]", ".", "choices", "=", "tenant_choices", "#NEWLINE#", "if", "api", ".", "neutron", ".", "is_port_profiles_supported", "(", ")", ":", "#NEWLINE#", "#INDENT#", "self", ".", "fields", "[", "'net_profile_id'", "]", ".", "choices", "=", "self", ".", "get_network_profile_choices", "(", "request", ")", "#NEWLINE#", "#UNINDENT#", "if", "api", ".", "neutron", ".", "is_extension_supported", "(", "request", ",", "'provider'", ")", ":", "#NEWLINE#", "#INDENT#", "neutron_settings", "=", "getattr", "(", "settings", ",", "'OPENSTACK_NEUTRON_NETWORK'", ",", "{", "#NEWLINE#", "#INDENT#", "#NEWLINE#", "#UNINDENT#", "}", ")", "#NEWLINE#", "seg_id_range", "=", "neutron_settings", ".", "get", "(", "'segmentation_id_range'", ",", "{", "#NEWLINE#", "#INDENT#", "#NEWLINE#", "#UNINDENT#", "}", ")", "#NEWLINE#", "self", ".", "seg_id_range", "=", "{", "#NEWLINE#", "#INDENT#", "'vlan'", ":", "seg_id_range", ".", "get", "(", "'vlan'", ",", "SEGMENTATION_ID_RANGE", ".", "get", "(", "'vlan'", ")", ")", ",", "#NEWLINE#", "'gre'", ":", "seg_id_range", ".", "get", "(", "'gre'", ",", "SEGMENTATION_ID_RANGE", ".", "get", "(", "'gre'", ")", ")", ",", "#NEWLINE#", "'vxlan'", ":", "seg_id_range", ".", "get", "(", "'vxlan'", ",", "SEGMENTATION_ID_RANGE", ".", "get", "(", "'vxlan'", ")", ")", ",", "#NEWLINE#", "#UNINDENT#", "}", "#NEWLINE#", "seg_id_help", "=", "(", "_", "(", "'For VLAN networks, the VLAN VID on the physical network that realizes the virtual network. Valid VLAN VIDs are %(vlan_min)s through %(vlan_max)s. For GRE or VXLAN networks, the tunnel ID. Valid tunnel IDs for GRE networks are %(gre_min)s through %(gre_max)s. For VXLAN networks, %(vxlan_min)s through %(vxlan_max)s.'", ")", "%", "{", "#NEWLINE#", "#INDENT#", "'vlan_min'", ":", "self", ".", "seg_id_range", "[", "'vlan'", "]", "[", "0", "]", ",", "#NEWLINE#", "'vlan_max'", ":", "self", ".", "seg_id_range", "[", "'vlan'", "]", "[", "1", "]", ",", "#NEWLINE#", "'gre_min'", ":", "self", ".", "seg_id_range", "[", "'gre'", "]", "[", "0", "]", ",", "#NEWLINE#", "'gre_max'", ":", "self", ".", "seg_id_range", "[", "'gre'", "]", "[", "1", "]", ",", "#NEWLINE#", "'vxlan_min'", ":", "self", ".", "seg_id_range", "[", "'vxlan'", "]", "[", "0", "]", ",", "#NEWLINE#", "'vxlan_max'", ":", "self", ".", "seg_id_range", "[", "'vxlan'", "]", "[", "1", "]", ",", "#NEWLINE#", "#UNINDENT#", "}", ")", "#NEWLINE#", "self", ".", "fields", "[", "'segmentation_id'", "]", ".", "help_text", "=", "seg_id_help", "#NEWLINE#", "supported_provider_types", "=", "neutron_settings", ".", "get", "(", "'supported_provider_types'", ",", "[", "'*'", "]", ")", "#NEWLINE#", "if", "(", "supported_provider_types", "==", "[", "'*'", "]", ")", ":", "#NEWLINE#", "#INDENT#", "network_type_choices", "=", "PROVIDER_TYPES", "#NEWLINE#", "#UNINDENT#", "else", ":", "#NEWLINE#", "#INDENT#", "network_type_choices", "=", "[", "net_type", "for", "net_type", "in", "PROVIDER_TYPES", "if", "(", "net_type", "[", "0", "]", "in", "supported_provider_types", ")", "]", "#NEWLINE#", "#UNINDENT#", "if", "(", "len", "(", "network_type_choices", ")", "==", "0", ")", ":", "#NEWLINE#", "#INDENT#", "self", ".", "_hide_provider_network_type", "(", ")", "#NEWLINE#", "#UNINDENT#", "else", ":", "#NEWLINE#", "#INDENT#", "self", ".", "fields", "[", "'network_type'", "]", ".", "choices", "=", "network_type_choices", "#NEWLINE#", "#UNINDENT#", "#UNINDENT#", "else", ":", "#NEWLINE#", "#INDENT#", "self", ".", "_hide_provider_network_type", "(", ")"]}}
{"position": {"error_location": 79, "repair_targets": [61, 68, 83], "repair_candidates": [7, 26, 160, 178, 185, 202, 219, 252, 265, 278, 291, 304, 317, 79, 377, 379, 384, 46, 63, 365, 374, 398, 426, 4, 23, 57, 126, 137, 61, 68, 83, 29, 48, 32, 74, 100, 144, 162, 343, 237, 339, 2, 18, 91, 113, 122, 176, 250, 263, 276, 289, 302, 315, 330, 406, 417, 434, 341, 356, 389]}}
{"prediction": {"error_location": 0.9406309723854065, "repair_targets": [0.2031390368938446, 0.7253249883651733, 4.5016262447461486e-05], "repair_candidates": [0.0001025528836180456, 0.0030143738258630037, 0.005228946916759014, 6.776780355721712e-05, 0.0001846339291660115, 1.0572851351753343e-05, 0.0003348170139361173, 0.02703041397035122, 0.005135266110301018, 0.008905339986085892, 0.0014117445098236203, 0.2031390368938446, 9.197958206641488e-06, 0.7253249883651733, 0.0022571200970560312, 3.6513039958663285e-05, 4.5016262447461486e-05, 5.317793693393469e-06, 0.00032542290864512324, 2.391583620919846e-06, 4.006382368970662e-06, 0.00010962998931063339, 0.0029614923987537622, 1.735819569148589e-05, 0.0007188129820860922, 1.3822731261825538e-06, 2.4353250864805887e-06, 0.0009557480225339532, 3.6532769627228845e-06, 6.3149032030196395e-06, 6.270500762184383e-06, 0.00027297521592117846, 1.1083830031566322e-06, 0.0006368919275701046, 3.815701347775757e-06, 0.0006974599091336131, 1.715090434117883e-06, 0.00017836125334724784, 3.8894827412150335e-06, 0.00036384304985404015, 1.380810658702103e-06, 0.0001843378267949447, 3.6980754885007627e-06, 0.00011584149615373462, 1.2334261327850982e-06, 2.4212533389800228e-05, 0.0006727817235514522, 4.821971742785536e-06, 2.88378942059353e-05, 0.00023558552493341267, 0.0011695025023072958, 6.840418791398406e-05, 0.006052120588719845, 0.0001464422675780952, 0.0006829133490100503, 0.0005792179726995528, 5.977952241664752e-06, 2.5168708361889003e-06, 0.0004957400378771126, 5.703293481928995e-06], "target_probs": 0.928508996963501}}


{"result": {"time": "2021-02-11 10:38:38.063991", "n_pass": [103, 2, 2], "n_token": 425, "loss": [0.06331731379032135, 0.07666685432195663], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def __init__(", "self", ",", "request", ",", "*", "args", ",", "**kwargs", ")", ":", "#NEWLINE#", "#INDENT#", "super", "(", "CreateNetwork", ",", "self", ")", ".", "__init__", "(", "request", ",", "*", "args", ",", "**", "kwargs", ")", "#NEWLINE#", "tenant_choices", "=", "[", "(", "''", ",", "_", "(", "'Select a project'", ")", ")", "]", "#NEWLINE#", "(", "tenants", ",", "has_more", ")", "=", "api", ".", "keystone", ".", "tenant_list", "(", "request", ")", "#NEWLINE#", "for", "tenant", "in", "tenants", ":", "#NEWLINE#", "#INDENT#", "if", "tenant", ".", "enabled", ":", "#NEWLINE#", "#INDENT#", "tenant_choices", ".", "append", "(", "(", "net_type", ".", "id", ",", "tenant", ".", "name", ")", ")", "#NEWLINE#", "#UNINDENT#", "#UNINDENT#", "self", ".", "fields", "[", "'tenant_id'", "]", ".", "choices", "=", "tenant_choices", "#NEWLINE#", "if", "api", ".", "neutron", ".", "is_port_profiles_supported", "(", ")", ":", "#NEWLINE#", "#INDENT#", "self", ".", "fields", "[", "'net_profile_id'", "]", ".", "choices", "=", "self", ".", "get_network_profile_choices", "(", "request", ")", "#NEWLINE#", "#UNINDENT#", "if", "api", ".", "neutron", ".", "is_extension_supported", "(", "request", ",", "'provider'", ")", ":", "#NEWLINE#", "#INDENT#", "neutron_settings", "#NEWLINE#", "seg_id_range", "=", "neutron_settings", ".", "get", "(", "'segmentation_id_range'", ",", "{", "#NEWLINE#", "#INDENT#", "#NEWLINE#", "#UNINDENT#", "}", ")", "#NEWLINE#", "self", ".", "seg_id_range", "=", "{", "#NEWLINE#", "#INDENT#", "'vlan'", ":", "seg_id_range", ".", "get", "(", "'vlan'", ",", "SEGMENTATION_ID_RANGE", ".", "get", "(", "'vlan'", ")", ")", ",", "#NEWLINE#", "'gre'", ":", "seg_id_range", ".", "get", "(", "'gre'", ",", "SEGMENTATION_ID_RANGE", ".", "get", "(", "'gre'", ")", ")", ",", "#NEWLINE#", "'vxlan'", ":", "seg_id_range", ".", "get", "(", "'vxlan'", ",", "SEGMENTATION_ID_RANGE", ".", "get", "(", "'vxlan'", ")", ")", ",", "#NEWLINE#", "#UNINDENT#", "}", "#NEWLINE#", "seg_id_help", "=", "(", "_", "(", "'For VLAN networks, the VLAN VID on the physical network that realizes the virtual network. Valid VLAN VIDs are %(vlan_min)s through %(vlan_max)s. For GRE or VXLAN networks, the tunnel ID. Valid tunnel IDs for GRE networks are %(gre_min)s through %(gre_max)s. For VXLAN networks, %(vxlan_min)s through %(vxlan_max)s.'", ")", "%", "{", "#NEWLINE#", "#INDENT#", "'vlan_min'", ":", "self", ".", "seg_id_range", "[", "'vlan'", "]", "[", "0", "]", ",", "#NEWLINE#", "'vlan_max'", ":", "self", ".", "seg_id_range", "[", "'vlan'", "]", "[", "1", "]", ",", "#NEWLINE#", "'gre_min'", ":", "self", ".", "seg_id_range", "[", "'gre'", "]", "[", "0", "]", ",", "#NEWLINE#", "'gre_max'", ":", "self", ".", "seg_id_range", "[", "'gre'", "]", "[", "1", "]", ",", "#NEWLINE#", "'vxlan_min'", ":", "self", ".", "seg_id_range", "[", "'vxlan'", "]", "[", "0", "]", ",", "#NEWLINE#", "'vxlan_max'", ":", "self", ".", "seg_id_range", "[", "'vxlan'", "]", "[", "1", "]", ",", "#NEWLINE#", "#UNINDENT#", "}", ")", "#NEWLINE#", "self", ".", "fields", "[", "'segmentation_id'", "]", ".", "help_text", "=", "seg_id_help", "#NEWLINE#", "supported_provider_types", "=", "neutron_settings", ".", "get", "(", "'supported_provider_types'", ",", "[", "'*'", "]", ")", "#NEWLINE#", "if", "(", "supported_provider_types", "==", "[", "'*'", "]", ")", ":", "#NEWLINE#", "#INDENT#", "network_type_choices", "=", "PROVIDER_TYPES", "#NEWLINE#", "#UNINDENT#", "else", ":", "#NEWLINE#", "#INDENT#", "network_type_choices", "=", "[", "net_type", "for", "net_type", "in", "PROVIDER_TYPES", "if", "(", "net_type", "[", "0", "]", "in", "supported_provider_types", ")", "]", "#NEWLINE#", "#UNINDENT#", "if", "(", "len", "(", "network_type_choices", ")", "==", "0", ")", ":", "#NEWLINE#", "#INDENT#", "self", ".", "_hide_provider_network_type", "(", ")", "#NEWLINE#", "#UNINDENT#", "else", ":", "#NEWLINE#", "#INDENT#", "self", ".", "fields", "[", "'network_type'", "]", ".", "choices", "=", "network_type_choices", "#NEWLINE#", "#UNINDENT#", "#UNINDENT#", "else", ":", "#NEWLINE#", "#INDENT#", "self", ".", "_hide_provider_network_type", "(", ")"]}}
{"position": {"error_location": 79, "repair_targets": [61, 68, 83], "repair_candidates": [7, 26, 146, 164, 171, 188, 205, 238, 251, 264, 277, 290, 303, 79, 363, 365, 370, 46, 63, 351, 360, 384, 412, 4, 23, 57, 126, 137, 61, 68, 83, 29, 48, 32, 74, 100, 144, 148, 329, 223, 325, 2, 18, 91, 113, 122, 162, 236, 249, 262, 275, 288, 301, 316, 392, 403, 420, 327, 342, 375]}}
{"prediction": {"error_location": 0.938645601272583, "repair_targets": [0.19263407588005066, 0.7335230708122253, 4.126141357119195e-05], "repair_candidates": [0.0001072701343218796, 0.0030789147131145, 0.005521146114915609, 6.92012908984907e-05, 0.0001869672123575583, 1.121953027904965e-05, 0.0003557399322744459, 0.028251877054572105, 0.005371577106416225, 0.009412174113094807, 0.0014619579305872321, 0.19263407588005066, 9.700568625703454e-06, 0.7335230708122253, 0.002466874197125435, 3.765262954402715e-05, 4.126141357119195e-05, 4.908686150884023e-06, 0.00036130688386037946, 2.217177780039492e-06, 4.012455519841751e-06, 0.00010682481661206111, 0.001855169073678553, 4.6701788960490376e-05, 0.00044099375372752547, 1.3221228982729372e-06, 2.477954694768414e-06, 0.0015956680290400982, 6.461299108195817e-06, 7.26666439732071e-06, 6.835018666606629e-06, 0.00022215297212824225, 1.3557963711718912e-06, 0.0007423475617542863, 3.4125471302104415e-06, 0.000898639380466193, 1.8268314079250558e-06, 0.00020273316476959735, 2.8715980988636147e-06, 0.0003035161062143743, 1.2194286682642996e-06, 0.00018692352750804275, 3.545886329447967e-06, 0.00012238792260177433, 1.221647266902437e-06, 2.583994864835404e-05, 0.0006873136153444648, 4.716515377367614e-06, 2.970044079120271e-05, 0.00024111992388498038, 0.001205105916596949, 7.210001786006615e-05, 0.006090870127081871, 0.00015149977116379887, 0.0006983353523537517, 0.0005919046816416085, 6.1297050706343725e-06, 2.5901392746163765e-06, 0.0005097887478768826, 5.866871106263716e-06], "target_probs": 0.9261983633041382}}


{"result": {"time": "2021-02-11 10:38:38.362726", "n_pass": [106, 3, 3], "n_token": 411, "loss": [0.0652315691113472, 0.08103624731302261], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def __init__(", "self", ",", "request", ",", "*", "args", ",", "**kwargs", ")", ":", "#NEWLINE#", "#INDENT#", "super", "(", "CreateNetwork", ",", "self", ")", ".", "__init__", "(", "request", ",", "*", "args", ",", "**", "kwargs", ")", "#NEWLINE#", "tenant_choices", "=", "[", "(", "''", ",", "_", "(", "'Select a project'", ")", ")", "]", "#NEWLINE#", "(", "tenants", ",", "has_more", ")", "=", "api", ".", "keystone", ".", "tenant_list", "(", "request", ")", "#NEWLINE#", "for", "tenant", "in", "tenants", ":", "#NEWLINE#", "#INDENT#", "if", "tenant", ".", "enabled", ":", "#NEWLINE#", "#INDENT#", "tenant_choices", ".", "append", "(", "(", "net_type", ".", "id", ",", "tenant", ".", "name", ")", ")", "#NEWLINE#", "#UNINDENT#", "#UNINDENT#", "self", ".", "fields", "[", "'tenant_id'", "]", ".", "choices", "=", "tenant_choices", "#NEWLINE#", "if", "api", ".", "neutron", ".", "is_port_profiles_supported", "(", ")", ":", "#NEWLINE#", "#INDENT#", "self", ".", "fields", "[", "'net_profile_id'", "]", ".", "choices", "=", "self", ".", "get_network_profile_choices", "(", "request", ")", "#NEWLINE#", "#UNINDENT#", "if", "api", ".", "neutron", ".", "is_extension_supported", "(", "request", ",", "'provider'", ")", ":", "#NEWLINE#", "#INDENT#", "neutron_settings", "#NEWLINE#", "seg_id_range", "=", "neutron_settings", ".", "get", "(", "'segmentation_id_range'", ",", "{", "#NEWLINE#", "#INDENT#", "#NEWLINE#", "#UNINDENT#", "}", ")", "#NEWLINE#", "self", ".", "seg_id_range", "=", "{", "#NEWLINE#", "#INDENT#", "'vlan'", ":", "seg_id_range", ".", ":", "seg_id_range", ".", "get", "(", "'gre'", ",", "SEGMENTATION_ID_RANGE", ".", "get", "(", "'gre'", ")", ")", ",", "#NEWLINE#", "'vxlan'", ":", "seg_id_range", ".", "get", "(", "'vxlan'", ",", "SEGMENTATION_ID_RANGE", ".", "get", "(", "'vxlan'", ")", ")", ",", "#NEWLINE#", "#UNINDENT#", "}", "#NEWLINE#", "seg_id_help", "=", "(", "_", "(", "'For VLAN networks, the VLAN VID on the physical network that realizes the virtual network. Valid VLAN VIDs are %(vlan_min)s through %(vlan_max)s. For GRE or VXLAN networks, the tunnel ID. Valid tunnel IDs for GRE networks are %(gre_min)s through %(gre_max)s. For VXLAN networks, %(vxlan_min)s through %(vxlan_max)s.'", ")", "%", "{", "#NEWLINE#", "#INDENT#", "'vlan_min'", ":", "self", ".", "seg_id_range", "[", "'vlan'", "]", "[", "0", "]", ",", "#NEWLINE#", "'vlan_max'", ":", "self", ".", "seg_id_range", "[", "'vlan'", "]", "[", "1", "]", ",", "#NEWLINE#", "'gre_min'", ":", "self", ".", "seg_id_range", "[", "'gre'", "]", "[", "0", "]", ",", "#NEWLINE#", "'gre_max'", ":", "self", ".", "seg_id_range", "[", "'gre'", "]", "[", "1", "]", ",", "#NEWLINE#", "'vxlan_min'", ":", "self", ".", "seg_id_range", "[", "'vxlan'", "]", "[", "0", "]", ",", "#NEWLINE#", "'vxlan_max'", ":", "self", ".", "seg_id_range", "[", "'vxlan'", "]", "[", "1", "]", ",", "#NEWLINE#", "#UNINDENT#", "}", ")", "#NEWLINE#", "self", ".", "fields", "[", "'segmentation_id'", "]", ".", "help_text", "=", "seg_id_help", "#NEWLINE#", "supported_provider_types", "=", "neutron_settings", ".", "get", "(", "'supported_provider_types'", ",", "[", "'*'", "]", ")", "#NEWLINE#", "if", "(", "supported_provider_types", "==", "[", "'*'", "]", ")", ":", "#NEWLINE#", "#INDENT#", "network_type_choices", "=", "PROVIDER_TYPES", "#NEWLINE#", "#UNINDENT#", "else", ":", "#NEWLINE#", "#INDENT#", "network_type_choices", "=", "[", "net_type", "for", "net_type", "in", "PROVIDER_TYPES", "if", "(", "net_type", "[", "0", "]", "in", "supported_provider_types", ")", "]", "#NEWLINE#", "#UNINDENT#", "if", "(", "len", "(", "network_type_choices", ")", "==", "0", ")", ":", "#NEWLINE#", "#INDENT#", "self", ".", "_hide_provider_network_type", "(", ")", "#NEWLINE#", "#UNINDENT#", "else", ":", "#NEWLINE#", "#INDENT#", "self", ".", "fields", "[", "'network_type'", "]", ".", "choices", "=", "network_type_choices", "#NEWLINE#", "#UNINDENT#", "#UNINDENT#", "else", ":", "#NEWLINE#", "#INDENT#", "self", ".", "_hide_provider_network_type", "(", ")"]}}
{"position": {"error_location": 79, "repair_targets": [61, 68, 83], "repair_candidates": [7, 26, 146, 164, 171, 174, 191, 224, 237, 250, 263, 276, 289, 79, 349, 351, 356, 46, 63, 337, 346, 370, 398, 4, 23, 57, 126, 137, 61, 68, 83, 29, 48, 32, 74, 100, 144, 148, 315, 209, 311, 2, 18, 91, 113, 122, 162, 222, 235, 248, 261, 274, 287, 302, 378, 389, 406, 313, 328, 361]}}
{"prediction": {"error_location": 0.9368506073951721, "repair_targets": [0.20127277076244354, 0.7208353281021118, 5.213778786128387e-05], "repair_candidates": [0.00011331843415973708, 0.0034284451976418495, 0.005915737710893154, 7.617873779963702e-05, 0.00021349414600990713, 1.1359980817360338e-05, 0.0003778221143875271, 0.028748176991939545, 0.005702842026948929, 0.009864981286227703, 0.001569936634041369, 0.20127277076244354, 1.0276001376041677e-05, 0.7208353281021118, 0.003272180212661624, 4.063431333634071e-05, 5.213778786128387e-05, 5.634076387650566e-06, 0.00038977593067102134, 2.704781081774854e-06, 4.4053836063540075e-06, 0.00017136031237896532, 0.0033782580867409706, 7.775140693411231e-05, 0.0004839188768528402, 1.6617474329905235e-06, 4.396733402245445e-06, 0.0015237783081829548, 4.202137643005699e-05, 1.971879646589514e-05, 8.041056389629375e-06, 0.00020898757793474942, 1.3346826790439081e-06, 0.0007013942813500762, 3.0329026685649296e-06, 0.0006901258020661771, 1.938935383805074e-06, 0.0001982557150768116, 2.9722077670157887e-06, 0.00028529769042506814, 1.3765931043963064e-06, 0.00017806423420552164, 3.514767740853131e-06, 0.00010948457929771394, 1.168864400824532e-06, 2.439773925289046e-05, 0.0006606002571061254, 4.478938080865191e-06, 2.7680032872012816e-05, 0.00022873756824992597, 0.0011735837906599045, 6.909018702572212e-05, 0.005925559904426336, 0.00014868886501062661, 0.0006568733952008188, 0.0005818801000714302, 6.170656433823751e-06, 2.565589966252446e-06, 0.0004777128342539072, 5.929035069129895e-06], "target_probs": 0.922160267829895}}


{"result": {"time": "2021-02-11 10:38:38.677276", "n_pass": [198, 4, 4], "n_token": 404, "loss": [0.06774280965328217, 0.08438201993703842], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def __init__(", "self", ",", "request", ",", "*", "args", ",", "**kwargs", ")", ":", "#NEWLINE#", "#INDENT#", "super", "(", "CreateNetwork", ",", "self", ")", ".", "__init__", "(", "request", ",", "*", "args", ",", "**", "kwargs", ")", "#NEWLINE#", "tenant_choices", "=", "[", "(", "''", ",", "_", "(", "'Select a project'", ")", ")", "]", "#NEWLINE#", "(", "tenants", ",", "has_more", ")", "=", "api", ".", "keystone", ".", "tenant_list", "(", "request", ")", "#NEWLINE#", "for", "tenant", "in", "tenants", ":", "#NEWLINE#", "#INDENT#", "if", "tenant", ".", "enabled", ":", "#NEWLINE#", "#INDENT#", "tenant_choices", ".", "append", "(", "(", "net_type", ".", "id", ",", "tenant", ".", "name", ")", ")", "#NEWLINE#", "#UNINDENT#", "#UNINDENT#", "self", ".", "fields", "[", "'tenant_id'", "]", ".", "choices", "=", "tenant_choices", "#NEWLINE#", "if", "api", ".", "neutron", ".", "is_port_profiles_supported", "(", ")", ":", "#NEWLINE#", "#INDENT#", "self", ".", "fields", "[", "'net_profile_id'", "]", ".", "choices", "=", "self", ".", "get_network_profile_choices", "(", "request", ")", "#NEWLINE#", "#UNINDENT#", "if", "api", ".", "neutron", ".", "is_extension_supported", "(", "request", ",", "'provider'", ")", ":", "#NEWLINE#", "#INDENT#", "neutron_settings", "#NEWLINE#", "seg_id_range", "=", "neutron_settings", ".", "get", "(", "'segmentation_id_range'", ",", "{", "#NEWLINE#", "#INDENT#", "#NEWLINE#", "#UNINDENT#", "}", ")", "#NEWLINE#", "self", ".", "seg_id_range", "=", "{", "#NEWLINE#", "#INDENT#", "'vlan'", ":", "seg_id_range", ".", ":", "seg_id_range", ".", "get", "(", "'gre'", ",", ",", "#NEWLINE#", "'vxlan'", ":", "seg_id_range", ".", "get", "(", "'vxlan'", ",", "SEGMENTATION_ID_RANGE", ".", "get", "(", "'vxlan'", ")", ")", ",", "#NEWLINE#", "#UNINDENT#", "}", "#NEWLINE#", "seg_id_help", "=", "(", "_", "(", "'For VLAN networks, the VLAN VID on the physical network that realizes the virtual network. Valid VLAN VIDs are %(vlan_min)s through %(vlan_max)s. For GRE or VXLAN networks, the tunnel ID. Valid tunnel IDs for GRE networks are %(gre_min)s through %(gre_max)s. For VXLAN networks, %(vxlan_min)s through %(vxlan_max)s.'", ")", "%", "{", "#NEWLINE#", "#INDENT#", "'vlan_min'", ":", "self", ".", "seg_id_range", "[", "'vlan'", "]", "[", "0", "]", ",", "#NEWLINE#", "'vlan_max'", ":", "self", ".", "seg_id_range", "[", "'vlan'", "]", "[", "1", "]", ",", "#NEWLINE#", "'gre_min'", ":", "self", ".", "seg_id_range", "[", "'gre'", "]", "[", "0", "]", ",", "#NEWLINE#", "'gre_max'", ":", "self", ".", "seg_id_range", "[", "'gre'", "]", "[", "1", "]", ",", "#NEWLINE#", "'vxlan_min'", ":", "self", ".", "seg_id_range", "[", "'vxlan'", "]", "[", "0", "]", ",", "#NEWLINE#", "'vxlan_max'", ":", "self", ".", "seg_id_range", "[", "'vxlan'", "]", "[", "1", "]", ",", "#NEWLINE#", "#UNINDENT#", "}", ")", "#NEWLINE#", "self", ".", "fields", "[", "'segmentation_id'", "]", ".", "help_text", "=", "seg_id_help", "#NEWLINE#", "supported_provider_types", "=", "neutron_settings", ".", "get", "(", "'supported_provider_types'", ",", "[", "'*'", "]", ")", "#NEWLINE#", "if", "(", "supported_provider_types", "==", "[", "'*'", "]", ")", ":", "#NEWLINE#", "#INDENT#", "network_type_choices", "=", "PROVIDER_TYPES", "#NEWLINE#", "#UNINDENT#", "else", ":", "#NEWLINE#", "#INDENT#", "network_type_choices", "=", "[", "net_type", "for", "net_type", "in", "PROVIDER_TYPES", "if", "(", "net_type", "[", "0", "]", "in", "supported_provider_types", ")", "]", "#NEWLINE#", "#UNINDENT#", "if", "(", "len", "(", "network_type_choices", ")", "==", "0", ")", ":", "#NEWLINE#", "#INDENT#", "self", ".", "_hide_provider_network_type", "(", ")", "#NEWLINE#", "#UNINDENT#", "else", ":", "#NEWLINE#", "#INDENT#", "self", ".", "fields", "[", "'network_type'", "]", ".", "choices", "=", "network_type_choices", "#NEWLINE#", "#UNINDENT#", "#UNINDENT#", "else", ":", "#NEWLINE#", "#INDENT#", "self", ".", "_hide_provider_network_type", "(", ")"]}}
{"position": {"error_location": 79, "repair_targets": [61, 68, 83], "repair_candidates": [7, 26, 146, 164, 171, 174, 184, 217, 230, 243, 256, 269, 282, 79, 342, 344, 349, 46, 63, 330, 339, 363, 391, 4, 23, 57, 126, 137, 61, 68, 83, 29, 48, 32, 74, 100, 144, 148, 308, 202, 304, 2, 18, 91, 113, 122, 162, 215, 228, 241, 254, 267, 280, 295, 371, 382, 399, 306, 321, 354]}}
{"prediction": {"error_location": 0.9345008134841919, "repair_targets": [0.19851583242416382, 0.7205117344856262, 5.253689596429467e-05], "repair_candidates": [0.00011669255036395043, 0.003498569130897522, 0.006095648743212223, 7.781410386087373e-05, 0.0002173141692765057, 1.1750636986107565e-05, 0.0003902743919752538, 0.02947811409831047, 0.005867969710379839, 0.010166033171117306, 0.0016137710772454739, 0.19851583242416382, 1.0530993677093647e-05, 0.7205117344856262, 0.003500544698908925, 4.252101280144416e-05, 5.253689596429467e-05, 5.692607373930514e-06, 0.00040083035128191113, 2.6984150736097945e-06, 4.42267264588736e-06, 0.00017552744247950613, 0.003189308801665902, 7.325017941184342e-05, 0.00044276315020397305, 1.662261411183863e-06, 4.977222488378175e-06, 0.0016172807663679123, 4.457846807781607e-05, 2.4882079742383212e-05, 1.4348357581184246e-05, 0.00029306861688382924, 1.200705469273089e-06, 0.000966687046457082, 3.3136609545181273e-06, 0.0007425728836096823, 2.112265519826906e-06, 0.0002141679433407262, 3.1912725262372987e-06, 0.00030598053126595914, 1.4952344145058305e-06, 0.00019030772091355175, 3.763430640901788e-06, 0.00011518816609168425, 1.2218373512951075e-06, 2.4781078536761925e-05, 0.000726130441762507, 4.759074272442376e-06, 2.9552313208114356e-05, 0.00024852860951796174, 0.0012868398334831, 7.233192445710301e-05, 0.0065911998972296715, 0.00015783714479766786, 0.0006916822167113423, 0.0006286295829340816, 6.575538009201409e-06, 2.7176449748367304e-06, 0.0005079716211184859, 6.3089592003962025e-06], "target_probs": 0.9190800786018372}}


{"result": {"time": "2021-02-11 10:38:38.969803", "n_pass": [200, 5, 5], "n_token": 397, "loss": [0.06890761107206345, 0.08640877157449722], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def __init__(", "self", ",", "request", ",", "*", "args", ",", "**kwargs", ")", ":", "#NEWLINE#", "#INDENT#", "super", "(", "CreateNetwork", ",", "self", ")", ".", "__init__", "(", "request", ",", "*", "args", ",", "**", "kwargs", ")", "#NEWLINE#", "tenant_choices", "=", "[", "(", "''", ",", "_", "(", "'Select a project'", ")", ")", "]", "#NEWLINE#", "(", "tenants", ",", "has_more", ")", "=", "api", ".", "keystone", ".", "tenant_list", "(", "request", ")", "#NEWLINE#", "for", "tenant", "in", "tenants", ":", "#NEWLINE#", "#INDENT#", "if", "tenant", ".", "enabled", ":", "#NEWLINE#", "#INDENT#", "tenant_choices", ".", "append", "(", "(", "net_type", ".", "id", ",", "tenant", ".", "name", ")", ")", "#NEWLINE#", "#UNINDENT#", "#UNINDENT#", "self", ".", "fields", "[", "'tenant_id'", "]", ".", "choices", "=", "tenant_choices", "#NEWLINE#", "if", "api", ".", "neutron", ".", "is_port_profiles_supported", "(", ")", ":", "#NEWLINE#", "#INDENT#", "self", ".", "fields", "[", "'net_profile_id'", "]", ".", "choices", "=", "self", ".", "get_network_profile_choices", "(", "request", ")", "#NEWLINE#", "#UNINDENT#", "if", "api", ".", "neutron", ".", "is_extension_supported", "(", "request", ",", "'provider'", ")", ":", "#NEWLINE#", "#INDENT#", "neutron_settings", "#NEWLINE#", "seg_id_range", "=", "neutron_settings", ".", "get", "(", "'segmentation_id_range'", ",", "{", "#NEWLINE#", "#INDENT#", "#NEWLINE#", "#UNINDENT#", "}", ")", "#NEWLINE#", "self", ".", "seg_id_range", "=", "{", "#NEWLINE#", "#INDENT#", "'vlan'", ":", "seg_id_range", ".", ":", "seg_id_range", ".", "get", "(", "'gre'", ",", ",", "#NEWLINE#", "'vxlan'", ":", "seg_id_range", ".", "get", "'vxlan'", ")", ")", ",", "#NEWLINE#", "#UNINDENT#", "}", "#NEWLINE#", "seg_id_help", "=", "(", "_", "(", "'For VLAN networks, the VLAN VID on the physical network that realizes the virtual network. Valid VLAN VIDs are %(vlan_min)s through %(vlan_max)s. For GRE or VXLAN networks, the tunnel ID. Valid tunnel IDs for GRE networks are %(gre_min)s through %(gre_max)s. For VXLAN networks, %(vxlan_min)s through %(vxlan_max)s.'", ")", "%", "{", "#NEWLINE#", "#INDENT#", "'vlan_min'", ":", "self", ".", "seg_id_range", "[", "'vlan'", "]", "[", "0", "]", ",", "#NEWLINE#", "'vlan_max'", ":", "self", ".", "seg_id_range", "[", "'vlan'", "]", "[", "1", "]", ",", "#NEWLINE#", "'gre_min'", ":", "self", ".", "seg_id_range", "[", "'gre'", "]", "[", "0", "]", ",", "#NEWLINE#", "'gre_max'", ":", "self", ".", "seg_id_range", "[", "'gre'", "]", "[", "1", "]", ",", "#NEWLINE#", "'vxlan_min'", ":", "self", ".", "seg_id_range", "[", "'vxlan'", "]", "[", "0", "]", ",", "#NEWLINE#", "'vxlan_max'", ":", "self", ".", "seg_id_range", "[", "'vxlan'", "]", "[", "1", "]", ",", "#NEWLINE#", "#UNINDENT#", "}", ")", "#NEWLINE#", "self", ".", "fields", "[", "'segmentation_id'", "]", ".", "help_text", "=", "seg_id_help", "#NEWLINE#", "supported_provider_types", "=", "neutron_settings", ".", "get", "(", "'supported_provider_types'", ",", "[", "'*'", "]", ")", "#NEWLINE#", "if", "(", "supported_provider_types", "==", "[", "'*'", "]", ")", ":", "#NEWLINE#", "#INDENT#", "network_type_choices", "=", "PROVIDER_TYPES", "#NEWLINE#", "#UNINDENT#", "else", ":", "#NEWLINE#", "#INDENT#", "network_type_choices", "=", "[", "net_type", "for", "net_type", "in", "PROVIDER_TYPES", "if", "(", "net_type", "[", "0", "]", "in", "supported_provider_types", ")", "]", "#NEWLINE#", "#UNINDENT#", "if", "(", "len", "(", "network_type_choices", ")", "==", "0", ")", ":", "#NEWLINE#", "#INDENT#", "self", ".", "_hide_provider_network_type", "(", ")", "#NEWLINE#", "#UNINDENT#", "else", ":", "#NEWLINE#", "#INDENT#", "self", ".", "fields", "[", "'network_type'", "]", ".", "choices", "=", "network_type_choices", "#NEWLINE#", "#UNINDENT#", "#UNINDENT#", "else", ":", "#NEWLINE#", "#INDENT#", "self", ".", "_hide_provider_network_type", "(", ")"]}}
{"position": {"error_location": 79, "repair_targets": [61, 68, 83], "repair_candidates": [7, 26, 146, 164, 171, 174, 184, 210, 223, 236, 249, 262, 275, 79, 335, 337, 342, 46, 63, 323, 332, 356, 384, 4, 23, 57, 126, 137, 61, 68, 83, 29, 48, 32, 74, 100, 144, 148, 301, 195, 297, 2, 18, 91, 113, 122, 162, 208, 221, 234, 247, 260, 273, 288, 364, 375, 392, 299, 314, 347]}}
{"prediction": {"error_location": 0.933413028717041, "repair_targets": [0.19943706691265106, 0.7177282571792603, 5.387370038079098e-05], "repair_candidates": [0.00011826138506876305, 0.0035373750142753124, 0.006192711181938648, 7.864514918765053e-05, 0.00021971551177557558, 1.1937884664803278e-05, 0.0003967050288338214, 0.029904864728450775, 0.005964441690593958, 0.010342863388359547, 0.001632467145100236, 0.19943706691265106, 1.0697968718886841e-05, 0.7177282571792603, 0.003630822990089655, 4.3599968194030225e-05, 5.387370038079098e-05, 5.826866527058883e-06, 0.0004193162021692842, 2.7351154585630866e-06, 4.492753760132473e-06, 0.00018143108172807842, 0.003191482275724411, 7.562840619357303e-05, 0.0004559180233627558, 1.7141561556854867e-06, 5.367848189052893e-06, 0.001669959630817175, 5.7037195801967755e-05, 2.920788938354235e-05, 3.68765540770255e-05, 0.00028352392837405205, 1.4471249869529856e-06, 0.0009809202747419477, 3.4657364267332014e-06, 0.0007852340932004154, 2.2161177639645757e-06, 0.00022634460765402764, 3.29215777128411e-06, 0.000326701148878783, 1.5282033700714237e-06, 0.00020240060985088348, 3.9600272430107e-06, 0.00012270762817934155, 1.2562845768115949e-06, 2.5701445338199846e-05, 0.0007685876917093992, 4.960510523233097e-06, 3.142599234706722e-05, 0.0002614198892842978, 0.0013565706321969628, 7.550459122285247e-05, 0.006999916397035122, 0.00016456370940431952, 0.0007179010426625609, 0.0006593719008378685, 6.890061285957927e-06, 2.8319716420810437e-06, 0.0005315640009939671, 6.575808583875187e-06], "target_probs": 0.9172192215919495}}


{"result": {"time": "2021-02-11 10:38:39.257794", "n_pass": [201, 6, 6], "n_token": 390, "loss": [0.10867574065923691, 0.13466840982437134], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def __init__(", "self", ",", "request", ",", "*", "args", ",", "**kwargs", ")", ":", "#NEWLINE#", "#INDENT#", "super", "(", "CreateNetwork", ",", "self", ")", ".", "__init__", "(", "request", ",", "*", "args", ",", "**", "kwargs", ")", "#NEWLINE#", "tenant_choices", "=", "[", "(", "''", ",", "_", "(", "'Select a project'", ")", ")", "]", "#NEWLINE#", "(", "tenants", ",", "has_more", ")", "=", "api", ".", "keystone", ".", "tenant_list", "(", "request", ")", "#NEWLINE#", "for", "tenant", "in", "tenants", ":", "#NEWLINE#", "#INDENT#", "if", "tenant", ".", "enabled", ":", "#NEWLINE#", "#INDENT#", "tenant_choices", ".", "append", "(", "(", "net_type", ".", "id", ",", "tenant", ".", "name", ")", ")", "#NEWLINE#", "#UNINDENT#", "#UNINDENT#", "self", ".", "fields", "[", "'tenant_id'", "]", ".", "choices", "=", "tenant_choices", "#NEWLINE#", "if", "api", ".", "neutron", ".", "is_port_profiles_supported", "(", ")", ":", "#NEWLINE#", "#INDENT#", "self", ".", "fields", "[", "'net_profile_id'", "]", ".", "choices", "=", "self", ".", "get_network_profile_choices", "(", "request", ")", "#NEWLINE#", "#UNINDENT#", "if", "api", ".", "neutron", ".", "is_extension_supported", "(", "request", ",", "'provider'", ")", ":", "#NEWLINE#", "#INDENT#", "neutron_settings", "#NEWLINE#", "seg_id_range", "=", "neutron_settings", ".", "get", "(", "'segmentation_id_range'", ",", "{", "#NEWLINE#", "#INDENT#", "#NEWLINE#", "#UNINDENT#", "}", ")", "#NEWLINE#", "self", ".", "seg_id_range", "=", "{", "#NEWLINE#", "#INDENT#", "'vlan'", ":", "seg_id_range", ".", ":", "seg_id_range", ".", "get", "(", "'gre'", ",", ",", "#NEWLINE#", "'vxlan'", ":", "seg_id_range", ".", "get", "#NEWLINE#", "seg_id_help", "=", "(", "_", "(", "'For VLAN networks, the VLAN VID on the physical network that realizes the virtual network. Valid VLAN VIDs are %(vlan_min)s through %(vlan_max)s. For GRE or VXLAN networks, the tunnel ID. Valid tunnel IDs for GRE networks are %(gre_min)s through %(gre_max)s. For VXLAN networks, %(vxlan_min)s through %(vxlan_max)s.'", ")", "%", "{", "#NEWLINE#", "#INDENT#", "'vlan_min'", ":", "self", ".", "seg_id_range", "[", "'vlan'", "]", "[", "0", "]", ",", "#NEWLINE#", "'vlan_max'", ":", "self", ".", "seg_id_range", "[", "'vlan'", "]", "[", "1", "]", ",", "#NEWLINE#", "'gre_min'", ":", "self", ".", "seg_id_range", "[", "'gre'", "]", "[", "0", "]", ",", "#NEWLINE#", "'gre_max'", ":", "self", ".", "seg_id_range", "[", "'gre'", "]", "[", "1", "]", ",", "#NEWLINE#", "'vxlan_min'", ":", "self", ".", "seg_id_range", "[", "'vxlan'", "]", "[", "0", "]", ",", "#NEWLINE#", "'vxlan_max'", ":", "self", ".", "seg_id_range", "[", "'vxlan'", "]", "[", "1", "]", ",", "#NEWLINE#", "#UNINDENT#", "}", ")", "#NEWLINE#", "self", ".", "fields", "[", "'segmentation_id'", "]", ".", "help_text", "=", "seg_id_help", "#NEWLINE#", "supported_provider_types", "=", "neutron_settings", ".", "get", "(", "'supported_provider_types'", ",", "[", "'*'", "]", ")", "#NEWLINE#", "if", "(", "supported_provider_types", "==", "[", "'*'", "]", ")", ":", "#NEWLINE#", "#INDENT#", "network_type_choices", "=", "PROVIDER_TYPES", "#NEWLINE#", "#UNINDENT#", "else", ":", "#NEWLINE#", "#INDENT#", "network_type_choices", "=", "[", "net_type", "for", "net_type", "in", "PROVIDER_TYPES", "if", "(", "net_type", "[", "0", "]", "in", "supported_provider_types", ")", "]", "#NEWLINE#", "#UNINDENT#", "if", "(", "len", "(", "network_type_choices", ")", "==", "0", ")", ":", "#NEWLINE#", "#INDENT#", "self", ".", "_hide_provider_network_type", "(", ")", "#NEWLINE#", "#UNINDENT#", "else", ":", "#NEWLINE#", "#INDENT#", "self", ".", "fields", "[", "'network_type'", "]", ".", "choices", "=", "network_type_choices", "#NEWLINE#", "#UNINDENT#", "#UNINDENT#", "else", ":", "#NEWLINE#", "#INDENT#", "self", ".", "_hide_provider_network_type", "(", ")"]}}
{"position": {"error_location": 79, "repair_targets": [61, 68, 83], "repair_candidates": [7, 26, 146, 164, 171, 174, 184, 203, 216, 229, 242, 255, 268, 79, 328, 330, 335, 46, 63, 316, 325, 349, 377, 4, 23, 57, 126, 137, 61, 68, 83, 29, 48, 32, 74, 100, 144, 148, 294, 188, 290, 2, 18, 91, 113, 122, 162, 201, 214, 227, 240, 253, 266, 281, 357, 368, 385, 292, 307, 340]}}
{"prediction": {"error_location": 0.8970212340354919, "repair_targets": [0.2970406711101532, 0.5764830708503723, 0.0004818866727873683], "repair_candidates": [0.00015634845476597548, 0.005439879838377237, 0.008516711182892323, 0.00011719968460965902, 0.0003589776169974357, 1.4411511074285954e-05, 0.0005273593706078827, 0.03750111162662506, 0.008315344341099262, 0.013812363147735596, 0.002060303930193186, 0.2970406711101532, 1.4770826055610087e-05, 0.5764830708503723, 0.00972067192196846, 0.00010350917727919295, 0.0004818866727873683, 2.4827872039168142e-05, 0.0005578580894507468, 1.9386945496080443e-05, 2.1268588170642033e-05, 0.0006602672510780394, 0.012007741257548332, 0.00042412924813106656, 0.0006475916597992182, 2.1353156625991687e-05, 0.0001276686234632507, 0.0013888695975765586, 0.00012169858382549137, 4.524612086242996e-05, 2.206482895417139e-05, 0.0005578506970778108, 3.938362624467118e-06, 0.0018172604031860828, 6.83670168655226e-06, 0.0015070366207510233, 4.693793471233221e-06, 0.00037291014450602233, 5.87997510592686e-06, 0.0004990269662812352, 3.3892833926074672e-06, 0.0003182037326041609, 8.27375151857268e-06, 0.0001711857330519706, 1.8564693391454057e-06, 3.438901694607921e-05, 0.0011246476788073778, 7.996040949365124e-06, 4.6195887989597395e-05, 0.0003684380208142102, 0.0021255959291011095, 9.341630357084796e-05, 0.011727656237781048, 0.00021300466323737055, 0.0006798971444368362, 0.0009292041650041938, 1.1367277693352662e-05, 4.1397311179025564e-06, 0.0005905570578761399, 1.0543767530180048e-05], "target_probs": 0.8740056753158569}}


{"result": {"time": "2021-02-11 10:38:39.544506", "n_pass": [203, 7, 7], "n_token": 383, "loss": [0.13873910903930664, 0.1502515971660614], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def __init__(", "self", ",", "request", ",", "*", "args", ",", "**kwargs", ")", ":", "#NEWLINE#", "#INDENT#", "super", "(", "CreateNetwork", ",", "self", ")", ".", "__init__", "(", "request", ",", "*", "args", ",", "**", "kwargs", ")", "#NEWLINE#", "tenant_choices", "=", "[", "(", "''", ",", "_", "(", "'Select a project'", ")", ")", "]", "#NEWLINE#", "(", "tenants", ",", "has_more", ")", "=", "api", ".", "keystone", ".", "tenant_list", "(", "request", ")", "#NEWLINE#", "for", "tenant", "in", "tenants", ":", "#NEWLINE#", "#INDENT#", "if", "tenant", ".", "enabled", ":", "#NEWLINE#", "#INDENT#", "tenant_choices", ".", "append", "(", "(", "net_type", ".", "id", ",", "tenant", ".", "name", ")", ")", "#NEWLINE#", "#UNINDENT#", "#UNINDENT#", "self", ".", "fields", "[", "'tenant_id'", "]", ".", "choices", "=", "tenant_choices", "#NEWLINE#", "if", "api", ".", "neutron", ".", "is_port_profiles_supported", "(", ")", ":", "#NEWLINE#", "#INDENT#", "self", ".", "fields", "[", "'net_profile_id'", "]", ".", "choices", "=", "self", ".", "get_network_profile_choices", "(", "request", ")", "#NEWLINE#", "#UNINDENT#", "if", "api", ".", "neutron", ".", "is_extension_supported", "(", "request", ",", "'provider'", ")", ":", "#NEWLINE#", "#INDENT#", "neutron_settings", "#NEWLINE#", "seg_id_range", "=", "neutron_settings", ".", "get", "(", "'segmentation_id_range'", ",", "{", "#NEWLINE#", "#INDENT#", "#NEWLINE#", "#UNINDENT#", "}", ")", "#NEWLINE#", "self", ".", "seg_id_range", "=", "{", "#NEWLINE#", "#INDENT#", "'vlan'", ":", "seg_id_range", ".", ":", "seg_id_range", ".", "get", "(", "'gre'", ",", ",", "#NEWLINE#", "'vxlan'", ":", "seg_id_range", ".", "get", "#NEWLINE#", "seg_id_help", "=", "(", "_", "(", "'For VLAN networks, the VLAN VID on the physical network that realizes the virtual network. Valid VLAN VIDs are %(vlan_min)s through %(vlan_max)s. For GRE or VXLAN networks, the tunnel ID. Valid tunnel IDs for GRE networks are %(gre_min)s through %(gre_max)s. For VXLAN networks, %(vxlan_min)s through %(vxlan_max)s.'", "self", ".", "seg_id_range", "[", "'vlan'", "]", "[", "0", "]", ",", "#NEWLINE#", "'vlan_max'", ":", "self", ".", "seg_id_range", "[", "'vlan'", "]", "[", "1", "]", ",", "#NEWLINE#", "'gre_min'", ":", "self", ".", "seg_id_range", "[", "'gre'", "]", "[", "0", "]", ",", "#NEWLINE#", "'gre_max'", ":", "self", ".", "seg_id_range", "[", "'gre'", "]", "[", "1", "]", ",", "#NEWLINE#", "'vxlan_min'", ":", "self", ".", "seg_id_range", "[", "'vxlan'", "]", "[", "0", "]", ",", "#NEWLINE#", "'vxlan_max'", ":", "self", ".", "seg_id_range", "[", "'vxlan'", "]", "[", "1", "]", ",", "#NEWLINE#", "#UNINDENT#", "}", ")", "#NEWLINE#", "self", ".", "fields", "[", "'segmentation_id'", "]", ".", "help_text", "=", "seg_id_help", "#NEWLINE#", "supported_provider_types", "=", "neutron_settings", ".", "get", "(", "'supported_provider_types'", ",", "[", "'*'", "]", ")", "#NEWLINE#", "if", "(", "supported_provider_types", "==", "[", "'*'", "]", ")", ":", "#NEWLINE#", "#INDENT#", "network_type_choices", "=", "PROVIDER_TYPES", "#NEWLINE#", "#UNINDENT#", "else", ":", "#NEWLINE#", "#INDENT#", "network_type_choices", "=", "[", "net_type", "for", "net_type", "in", "PROVIDER_TYPES", "if", "(", "net_type", "[", "0", "]", "in", "supported_provider_types", ")", "]", "#NEWLINE#", "#UNINDENT#", "if", "(", "len", "(", "network_type_choices", ")", "==", "0", ")", ":", "#NEWLINE#", "#INDENT#", "self", ".", "_hide_provider_network_type", "(", ")", "#NEWLINE#", "#UNINDENT#", "else", ":", "#NEWLINE#", "#INDENT#", "self", ".", "fields", "[", "'network_type'", "]", ".", "choices", "=", "network_type_choices", "#NEWLINE#", "#UNINDENT#", "#UNINDENT#", "else", ":", "#NEWLINE#", "#INDENT#", "self", ".", "_hide_provider_network_type", "(", ")"]}}
{"position": {"error_location": 79, "repair_targets": [61, 68, 83], "repair_candidates": [7, 26, 146, 164, 171, 174, 184, 196, 209, 222, 235, 248, 261, 79, 321, 323, 328, 46, 63, 309, 318, 342, 370, 4, 23, 57, 126, 137, 61, 68, 83, 29, 48, 32, 74, 100, 144, 148, 287, 188, 283, 2, 18, 91, 113, 122, 162, 194, 207, 220, 233, 246, 259, 274, 350, 361, 378, 285, 300, 333]}}
{"prediction": {"error_location": 0.8704550862312317, "repair_targets": [0.3404659628868103, 0.5188148021697998, 0.0012106685899198055], "repair_candidates": [0.00016818512813188136, 0.006216163281351328, 0.009383176453411579, 0.00013080245116725564, 0.0004202323325444013, 1.518059434602037e-05, 0.0005680439644493163, 0.0400952473282814, 0.009074448607861996, 0.014863862656056881, 0.0021856408566236496, 0.3404659628868103, 1.6501686332048848e-05, 0.5188148021697998, 0.010928038507699966, 0.00015426264144480228, 0.0012106685899198055, 4.5860182581236586e-05, 0.0005917330854572356, 4.3143903894815594e-05, 4.629269824363291e-05, 0.0007357841823250055, 0.015652284026145935, 0.0005135046085342765, 0.000893332646228373, 6.195049354573712e-05, 0.0003096384753007442, 0.0012933016987517476, 0.00017283452325500548, 6.711138848913833e-05, 3.1950054108165205e-05, 0.0003151889832224697, 1.8909697246272117e-05, 0.0016039523761719465, 7.548698249593144e-06, 0.0016288047190755606, 6.1136356634960975e-06, 0.0004234941443428397, 7.1403833317162935e-06, 0.0005666561191901565, 4.167761289863847e-06, 0.0003743847191799432, 1.0690654562495183e-05, 0.0002001761458814144, 2.3219618014991283e-06, 4.156443173997104e-05, 0.0012514445697888732, 1.1151488251925912e-05, 5.671592225553468e-05, 0.00041831008275039494, 0.00243863882496953, 0.00010600325185805559, 0.012644742615520954, 0.0002447354490868747, 0.0007246239692904055, 0.001055021770298481, 1.3444310752674937e-05, 4.714552233053837e-06, 0.000637030228972435, 1.2294768566789571e-05], "target_probs": 0.8604914546012878}}


{"result": {"time": "2021-02-11 10:38:39.829088", "n_pass": [210, 8, 8], "n_token": 376, "loss": [0.13583680987358093, 0.14723654091358185], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def __init__(", "self", ",", "request", ",", "*", "args", ",", "**kwargs", ")", ":", "#NEWLINE#", "#INDENT#", "super", "(", "CreateNetwork", ",", "self", ")", ".", "__init__", "(", "request", ",", "*", "args", ",", "**", "kwargs", ")", "#NEWLINE#", "tenant_choices", "=", "[", "(", "''", ",", "_", "(", "'Select a project'", ")", ")", "]", "#NEWLINE#", "(", "tenants", ",", "has_more", ")", "=", "api", ".", "keystone", ".", "tenant_list", "(", "request", ")", "#NEWLINE#", "for", "tenant", "in", "tenants", ":", "#NEWLINE#", "#INDENT#", "if", "tenant", ".", "enabled", ":", "#NEWLINE#", "#INDENT#", "tenant_choices", ".", "append", "(", "(", "net_type", ".", "id", ",", "tenant", ".", "name", ")", ")", "#NEWLINE#", "#UNINDENT#", "#UNINDENT#", "self", ".", "fields", "[", "'tenant_id'", "]", ".", "choices", "=", "tenant_choices", "#NEWLINE#", "if", "api", ".", "neutron", ".", "is_port_profiles_supported", "(", ")", ":", "#NEWLINE#", "#INDENT#", "self", ".", "fields", "[", "'net_profile_id'", "]", ".", "choices", "=", "self", ".", "get_network_profile_choices", "(", "request", ")", "#NEWLINE#", "#UNINDENT#", "if", "api", ".", "neutron", ".", "is_extension_supported", "(", "request", ",", "'provider'", ")", ":", "#NEWLINE#", "#INDENT#", "neutron_settings", "#NEWLINE#", "seg_id_range", "=", "neutron_settings", ".", "get", "(", "'segmentation_id_range'", ",", "{", "#NEWLINE#", "#INDENT#", "#NEWLINE#", "#UNINDENT#", "}", ")", "#NEWLINE#", "self", ".", "seg_id_range", "=", "{", "#NEWLINE#", "#INDENT#", "'vlan'", ":", "seg_id_range", ".", ":", "seg_id_range", ".", "get", "(", "'gre'", ",", ",", "#NEWLINE#", "'vxlan'", ":", "seg_id_range", ".", "get", "#NEWLINE#", "seg_id_help", "=", "(", "_", "(", "'For VLAN networks, the VLAN VID on the physical network that realizes the virtual network. Valid VLAN VIDs are %(vlan_min)s through %(vlan_max)s. For GRE or VXLAN networks, the tunnel ID. Valid tunnel IDs for GRE networks are %(gre_min)s through %(gre_max)s. For VXLAN networks, %(vxlan_min)s through %(vxlan_max)s.'", "self", ".", "seg_id_range", "[", "'vlan'", "]", "[", "0", "]", ",", "#NEWLINE#", "'vlan_max'", ":", "self", ".", "seg_id_range", "[", "'vlan'", "]", "[", "1", "]", ",", "#NEWLINE#", "'gre_min'", ":", "self", ".", "seg_id_range", "[", "'gre'", "]", "[", "0", "]", ",", "#NEWLINE#", "'gre_max'", ":", "self", ".", "seg_id_range", "#NEWLINE#", "'vxlan_min'", ":", "self", ".", "seg_id_range", "[", "'vxlan'", "]", "[", "0", "]", ",", "#NEWLINE#", "'vxlan_max'", ":", "self", ".", "seg_id_range", "[", "'vxlan'", "]", "[", "1", "]", ",", "#NEWLINE#", "#UNINDENT#", "}", ")", "#NEWLINE#", "self", ".", "fields", "[", "'segmentation_id'", "]", ".", "help_text", "=", "seg_id_help", "#NEWLINE#", "supported_provider_types", "=", "neutron_settings", ".", "get", "(", "'supported_provider_types'", ",", "[", "'*'", "]", ")", "#NEWLINE#", "if", "(", "supported_provider_types", "==", "[", "'*'", "]", ")", ":", "#NEWLINE#", "#INDENT#", "network_type_choices", "=", "PROVIDER_TYPES", "#NEWLINE#", "#UNINDENT#", "else", ":", "#NEWLINE#", "#INDENT#", "network_type_choices", "=", "[", "net_type", "for", "net_type", "in", "PROVIDER_TYPES", "if", "(", "net_type", "[", "0", "]", "in", "supported_provider_types", ")", "]", "#NEWLINE#", "#UNINDENT#", "if", "(", "len", "(", "network_type_choices", ")", "==", "0", ")", ":", "#NEWLINE#", "#INDENT#", "self", ".", "_hide_provider_network_type", "(", ")", "#NEWLINE#", "#UNINDENT#", "else", ":", "#NEWLINE#", "#INDENT#", "self", ".", "fields", "[", "'network_type'", "]", ".", "choices", "=", "network_type_choices", "#NEWLINE#", "#UNINDENT#", "#UNINDENT#", "else", ":", "#NEWLINE#", "#INDENT#", "self", ".", "_hide_provider_network_type", "(", ")"]}}
{"position": {"error_location": 79, "repair_targets": [61, 68, 83], "repair_candidates": [7, 26, 146, 164, 171, 174, 184, 196, 209, 222, 235, 241, 254, 79, 314, 316, 321, 46, 63, 302, 311, 335, 363, 4, 23, 57, 126, 137, 61, 68, 83, 29, 48, 32, 74, 100, 144, 148, 280, 188, 276, 2, 18, 91, 113, 122, 162, 194, 207, 220, 233, 239, 252, 267, 343, 354, 371, 278, 293, 326]}}
{"prediction": {"error_location": 0.8729850649833679, "repair_targets": [0.3371957838535309, 0.5247727036476135, 0.0011212790850549936], "repair_candidates": [0.0001658190885791555, 0.006079173181205988, 0.009156107902526855, 0.00012845612945966423, 0.00040808808989822865, 1.488183352194028e-05, 0.0005538817495107651, 0.03945331275463104, 0.008904424495995045, 0.01460447907447815, 0.00214667827822268, 0.3371957838535309, 1.6121819498948753e-05, 0.5247727036476135, 0.010743049904704094, 0.00014455924974754453, 0.0011212790850549936, 4.387123408378102e-05, 0.0005780537030659616, 4.136248753638938e-05, 4.5426761062117293e-05, 0.0007177499355748296, 0.015305327251553535, 0.00046040749293752015, 0.0008950296323746443, 4.499787246459164e-05, 0.0002628082875162363, 0.0008736253366805613, 0.00016551022417843342, 5.3372379625216126e-05, 1.990374585147947e-05, 0.0003808349138125777, 2.2737080143997446e-05, 0.0015069375513121486, 8.1662383308867e-06, 0.0016433533746749163, 5.788797807326773e-06, 0.00031549809500575066, 6.372877578542102e-06, 0.0009796576341614127, 4.126951807847945e-06, 0.0003066410426981747, 1.2164166946604382e-05, 0.00021905517496634275, 2.326288267795462e-06, 4.187476588413119e-05, 0.0012089925585314631, 1.0629149983287789e-05, 5.3520449000643566e-05, 0.00040768354665488005, 0.002395082963630557, 0.00010362423927290365, 0.012551551684737206, 0.00024030391068663448, 0.0007353979744948447, 0.001055244472809136, 1.3464748917613178e-05, 4.7018493205541745e-06, 0.0006356335361488163, 1.2286727724131197e-05], "target_probs": 0.8630897998809814}}


{"result": {"time": "2021-02-11 10:38:40.107909", "n_pass": [212, 9, 9], "n_token": 369, "loss": [0.13263899087905884, 0.14188921451568604], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def __init__(", "self", ",", "request", ",", "*", "args", ",", "**kwargs", ")", ":", "#NEWLINE#", "#INDENT#", "super", "(", "CreateNetwork", ",", "self", ")", ".", "__init__", "(", "request", ",", "*", "args", ",", "**", "kwargs", ")", "#NEWLINE#", "tenant_choices", "=", "[", "(", "''", ",", "_", "(", "'Select a project'", ")", ")", "]", "#NEWLINE#", "(", "tenants", ",", "has_more", ")", "=", "api", ".", "keystone", ".", "tenant_list", "(", "request", ")", "#NEWLINE#", "for", "tenant", "in", "tenants", ":", "#NEWLINE#", "#INDENT#", "if", "tenant", ".", "enabled", ":", "#NEWLINE#", "#INDENT#", "tenant_choices", ".", "append", "(", "(", "net_type", ".", "id", ",", "tenant", ".", "name", ")", ")", "#NEWLINE#", "#UNINDENT#", "#UNINDENT#", "self", ".", "fields", "[", "'tenant_id'", "]", ".", "choices", "=", "tenant_choices", "#NEWLINE#", "if", "api", ".", "neutron", ".", "is_port_profiles_supported", "(", ")", ":", "#NEWLINE#", "#INDENT#", "self", ".", "fields", "[", "'net_profile_id'", "]", ".", "choices", "=", "self", ".", "get_network_profile_choices", "(", "request", ")", "#NEWLINE#", "#UNINDENT#", "if", "api", ".", "neutron", ".", "is_extension_supported", "(", "request", ",", "'provider'", ")", ":", "#NEWLINE#", "#INDENT#", "neutron_settings", "#NEWLINE#", "seg_id_range", "=", "neutron_settings", ".", "get", "(", "'segmentation_id_range'", ",", "{", "#NEWLINE#", "#INDENT#", "#NEWLINE#", "#UNINDENT#", "}", ")", "#NEWLINE#", "self", ".", "seg_id_range", "=", "{", "#NEWLINE#", "#INDENT#", "'vlan'", ":", "seg_id_range", ".", ":", "seg_id_range", ".", "get", "(", "'gre'", ",", ",", "#NEWLINE#", "'vxlan'", ":", "seg_id_range", ".", "get", "#NEWLINE#", "seg_id_help", "=", "(", "_", "(", "'For VLAN networks, the VLAN VID on the physical network that realizes the virtual network. Valid VLAN VIDs are %(vlan_min)s through %(vlan_max)s. For GRE or VXLAN networks, the tunnel ID. Valid tunnel IDs for GRE networks are %(gre_min)s through %(gre_max)s. For VXLAN networks, %(vxlan_min)s through %(vxlan_max)s.'", "self", ".", "seg_id_range", "[", "'vlan'", "]", "[", "0", "]", ",", "#NEWLINE#", "'vlan_max'", ":", "self", ".", "seg_id_range", "[", "'vlan'", "]", "[", "1", "]", ",", "#NEWLINE#", "'gre_min'", ":", "self", ".", "seg_id_range", "[", "'gre'", "]", "[", "0", "]", ",", "#NEWLINE#", "'gre_max'", ":", "self", ".", "seg_id_range", "#NEWLINE#", "'vxlan_min'", ":", "self", ".", "seg_id_range", "[", "'vxlan_max'", ":", "self", ".", "seg_id_range", "[", "'vxlan'", "]", "[", "1", "]", ",", "#NEWLINE#", "#UNINDENT#", "}", ")", "#NEWLINE#", "self", ".", "fields", "[", "'segmentation_id'", "]", ".", "help_text", "=", "seg_id_help", "#NEWLINE#", "supported_provider_types", "=", "neutron_settings", ".", "get", "(", "'supported_provider_types'", ",", "[", "'*'", "]", ")", "#NEWLINE#", "if", "(", "supported_provider_types", "==", "[", "'*'", "]", ")", ":", "#NEWLINE#", "#INDENT#", "network_type_choices", "=", "PROVIDER_TYPES", "#NEWLINE#", "#UNINDENT#", "else", ":", "#NEWLINE#", "#INDENT#", "network_type_choices", "=", "[", "net_type", "for", "net_type", "in", "PROVIDER_TYPES", "if", "(", "net_type", "[", "0", "]", "in", "supported_provider_types", ")", "]", "#NEWLINE#", "#UNINDENT#", "if", "(", "len", "(", "network_type_choices", ")", "==", "0", ")", ":", "#NEWLINE#", "#INDENT#", "self", ".", "_hide_provider_network_type", "(", ")", "#NEWLINE#", "#UNINDENT#", "else", ":", "#NEWLINE#", "#INDENT#", "self", ".", "fields", "[", "'network_type'", "]", ".", "choices", "=", "network_type_choices", "#NEWLINE#", "#UNINDENT#", "#UNINDENT#", "else", ":", "#NEWLINE#", "#INDENT#", "self", ".", "_hide_provider_network_type", "(", ")"]}}
{"position": {"error_location": 79, "repair_targets": [61, 68, 83], "repair_candidates": [7, 26, 146, 164, 171, 174, 184, 196, 209, 222, 235, 241, 247, 79, 307, 309, 314, 46, 63, 295, 304, 328, 356, 4, 23, 57, 126, 137, 61, 68, 83, 29, 48, 32, 74, 100, 144, 148, 273, 188, 269, 2, 18, 91, 113, 122, 162, 194, 207, 220, 233, 239, 245, 260, 336, 347, 364, 271, 286, 319]}}
{"prediction": {"error_location": 0.8757813572883606, "repair_targets": [0.33777451515197754, 0.5288335084915161, 0.0011093433713540435], "repair_candidates": [0.00016417208826169372, 0.0059651536867022514, 0.009016710333526134, 0.00012645746755879372, 0.0003978574532084167, 1.47957644003327e-05, 0.0005455637001432478, 0.039434488862752914, 0.008855246938765049, 0.01454064343124628, 0.0021089897491037846, 0.33777451515197754, 1.5936655472614802e-05, 0.5288335084915161, 0.010640178807079792, 0.00014141105930320919, 0.0011093433713540435, 4.230748163536191e-05, 0.0005521101993508637, 3.7103091017343104e-05, 3.745508729480207e-05, 0.0005834799958392978, 0.012299065478146076, 0.00042479814146645367, 0.0007714941166341305, 5.8308261941419914e-05, 0.0003595137968659401, 0.000925087311770767, 0.00011229771189391613, 2.8654807465500198e-05, 2.5037230443558656e-05, 0.0003634121676441282, 1.806505497370381e-05, 0.0014259832678362727, 8.410025657212827e-06, 0.0016632494516670704, 4.7058142627065536e-06, 0.0002895004872698337, 6.766014848835766e-06, 0.0007454693550243974, 1.8600543398861191e-06, 0.0004216959932819009, 6.086594567022985e-06, 0.000264516391325742, 2.630645212775562e-06, 4.6004337491467595e-05, 0.001181908301077783, 1.1326998901495244e-05, 5.527732355403714e-05, 0.000388839456718415, 0.002257385989651084, 0.00010420823673484847, 0.01208945456892252, 0.00023487095313612372, 0.0007309627835638821, 0.0010530157014727592, 1.3929537090007216e-05, 4.870775228482671e-06, 0.0006511909887194633, 1.264588445337722e-05], "target_probs": 0.8677173852920532}}


{"result": {"time": "2021-02-11 10:38:40.382497", "n_pass": [214, 10, 10], "n_token": 362, "loss": [0.12508267164230347, 0.1317266970872879], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def __init__(", "self", ",", "request", ",", "*", "args", ",", "**kwargs", ")", ":", "#NEWLINE#", "#INDENT#", "super", "(", "CreateNetwork", ",", "self", ")", ".", "__init__", "(", "request", ",", "*", "args", ",", "**", "kwargs", ")", "#NEWLINE#", "tenant_choices", "=", "[", "(", "''", ",", "_", "(", "'Select a project'", ")", ")", "]", "#NEWLINE#", "(", "tenants", ",", "has_more", ")", "=", "api", ".", "keystone", ".", "tenant_list", "(", "request", ")", "#NEWLINE#", "for", "tenant", "in", "tenants", ":", "#NEWLINE#", "#INDENT#", "if", "tenant", ".", "enabled", ":", "#NEWLINE#", "#INDENT#", "tenant_choices", ".", "append", "(", "(", "net_type", ".", "id", ",", "tenant", ".", "name", ")", ")", "#NEWLINE#", "#UNINDENT#", "#UNINDENT#", "self", ".", "fields", "[", "'tenant_id'", "]", ".", "choices", "=", "tenant_choices", "#NEWLINE#", "if", "api", ".", "neutron", ".", "is_port_profiles_supported", "(", ")", ":", "#NEWLINE#", "#INDENT#", "self", ".", "fields", "[", "'net_profile_id'", "]", ".", "choices", "=", "self", ".", "get_network_profile_choices", "(", "request", ")", "#NEWLINE#", "#UNINDENT#", "if", "api", ".", "neutron", ".", "is_extension_supported", "(", "request", ",", "'provider'", ")", ":", "#NEWLINE#", "#INDENT#", "neutron_settings", "#NEWLINE#", "seg_id_range", "=", "neutron_settings", ".", "get", "(", "'segmentation_id_range'", ",", "{", "#NEWLINE#", "#INDENT#", "#NEWLINE#", "#UNINDENT#", "}", ")", "#NEWLINE#", "self", ".", "seg_id_range", "=", "{", "#NEWLINE#", "#INDENT#", "'vlan'", ":", "seg_id_range", ".", ":", "seg_id_range", ".", "get", "(", "'gre'", ",", ",", "#NEWLINE#", "'vxlan'", ":", "seg_id_range", ".", "get", "#NEWLINE#", "seg_id_help", "=", "(", "_", "(", "'For VLAN networks, the VLAN VID on the physical network that realizes the virtual network. Valid VLAN VIDs are %(vlan_min)s through %(vlan_max)s. For GRE or VXLAN networks, the tunnel ID. Valid tunnel IDs for GRE networks are %(gre_min)s through %(gre_max)s. For VXLAN networks, %(vxlan_min)s through %(vxlan_max)s.'", "self", ".", "seg_id_range", "[", "'vlan'", "]", "[", "0", "]", ",", "#NEWLINE#", "'vlan_max'", ":", "self", ".", "seg_id_range", "[", "'vlan'", "]", "[", "1", "]", ",", "#NEWLINE#", "'gre_min'", ":", "self", ".", "seg_id_range", "[", "'gre'", "]", "[", "0", "]", ",", "#NEWLINE#", "'gre_max'", ":", "self", ".", "seg_id_range", "#NEWLINE#", "'vxlan_min'", ":", "self", ".", "seg_id_range", "[", "'vxlan_max'", ":", "self", ".", "seg_id_range", "[", "'vxlan'", "}", ")", "#NEWLINE#", "self", ".", "fields", "[", "'segmentation_id'", "]", ".", "help_text", "=", "seg_id_help", "#NEWLINE#", "supported_provider_types", "=", "neutron_settings", ".", "get", "(", "'supported_provider_types'", ",", "[", "'*'", "]", ")", "#NEWLINE#", "if", "(", "supported_provider_types", "==", "[", "'*'", "]", ")", ":", "#NEWLINE#", "#INDENT#", "network_type_choices", "=", "PROVIDER_TYPES", "#NEWLINE#", "#UNINDENT#", "else", ":", "#NEWLINE#", "#INDENT#", "network_type_choices", "=", "[", "net_type", "for", "net_type", "in", "PROVIDER_TYPES", "if", "(", "net_type", "[", "0", "]", "in", "supported_provider_types", ")", "]", "#NEWLINE#", "#UNINDENT#", "if", "(", "len", "(", "network_type_choices", ")", "==", "0", ")", ":", "#NEWLINE#", "#INDENT#", "self", ".", "_hide_provider_network_type", "(", ")", "#NEWLINE#", "#UNINDENT#", "else", ":", "#NEWLINE#", "#INDENT#", "self", ".", "fields", "[", "'network_type'", "]", ".", "choices", "=", "network_type_choices", "#NEWLINE#", "#UNINDENT#", "#UNINDENT#", "else", ":", "#NEWLINE#", "#INDENT#", "self", ".", "_hide_provider_network_type", "(", ")"]}}
{"position": {"error_location": 79, "repair_targets": [61, 68, 83], "repair_candidates": [7, 26, 146, 164, 171, 174, 184, 196, 209, 222, 235, 241, 247, 79, 300, 302, 307, 46, 63, 288, 297, 321, 349, 4, 23, 57, 126, 137, 61, 68, 83, 29, 48, 32, 74, 100, 144, 148, 266, 188, 262, 2, 18, 91, 113, 122, 162, 194, 207, 220, 233, 239, 245, 253, 329, 340, 357, 264, 279, 312]}}
{"prediction": {"error_location": 0.8824239373207092, "repair_targets": [0.33802473545074463, 0.5375468730926514, 0.0010089288698509336], "repair_candidates": [0.00016043195500969887, 0.005801352206617594, 0.008706407621502876, 0.00012334363418631256, 0.0003849399508908391, 1.4434868717216887e-05, 0.0005244049825705588, 0.038779884576797485, 0.008637895807623863, 0.014148733578622341, 0.0020600773859769106, 0.33802473545074463, 1.538450305815786e-05, 0.5375468730926514, 0.010053670033812523, 0.00013087769912090153, 0.0010089288698509336, 3.6255216400604695e-05, 0.0004986847634427249, 1.7577667676960118e-05, 3.178942279191688e-05, 0.0007190232863649726, 0.009251946583390236, 0.0004981858655810356, 0.0006490960367955267, 3.689698860398494e-05, 0.0002624488843139261, 0.0006920511950738728, 0.00011397428897907957, 3.598505281843245e-05, 1.5637029719073325e-05, 0.00035263688187114894, 1.759623410180211e-05, 0.00106951838824898, 7.608702162542613e-06, 0.0013616870855912566, 4.370163878775202e-06, 0.00024293003662023693, 5.445940132631222e-06, 0.0007070429273881018, 1.554523805680219e-06, 0.00032421620562672615, 7.472859124391107e-06, 0.00030622229678556323, 1.018645775729965e-06, 5.7931363699026406e-05, 0.0015427331672981381, 1.4500904399028514e-05, 4.8770954890642315e-05, 0.0003161290951538831, 0.0017679226584732533, 9.476486593484879e-05, 0.010465309955179691, 0.00020388320263009518, 0.0006360620027408004, 0.0008720941259525716, 1.2383141438476741e-05, 4.438306859810837e-06, 0.0005603364552371204, 1.1455635103629902e-05], "target_probs": 0.876580536365509}}


{"result": {"time": "2021-02-11 10:38:40.653722", "n_pass": [218, 11, 11], "n_token": 355, "loss": [0.11407304555177689, 0.12746524810791016], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def __init__(", "self", ",", "request", ",", "*", "args", ",", "**kwargs", ")", ":", "#NEWLINE#", "#INDENT#", "super", "(", "CreateNetwork", ",", "self", ")", ".", "__init__", "(", "request", ",", "*", "args", ",", "**", "kwargs", ")", "#NEWLINE#", "tenant_choices", "=", "[", "(", "''", ",", "_", "(", "'Select a project'", ")", ")", "]", "#NEWLINE#", "(", "tenants", ",", "has_more", ")", "=", "api", ".", "keystone", ".", "tenant_list", "(", "request", ")", "#NEWLINE#", "for", "tenant", "in", "tenants", ":", "#NEWLINE#", "#INDENT#", "if", "tenant", ".", "enabled", ":", "#NEWLINE#", "#INDENT#", "tenant_choices", ".", "append", "(", "(", "net_type", ".", "id", ",", "tenant", ".", "name", ")", ")", "#NEWLINE#", "#UNINDENT#", "#UNINDENT#", "self", ".", "fields", "[", "'tenant_id'", "]", ".", "choices", "=", "tenant_choices", "#NEWLINE#", "if", "api", ".", "neutron", ".", "is_port_profiles_supported", "(", ")", ":", "#NEWLINE#", "#INDENT#", "self", ".", "fields", "[", "'net_profile_id'", "]", ".", "choices", "=", "self", ".", "get_network_profile_choices", "(", "request", ")", "#NEWLINE#", "#UNINDENT#", "if", "api", ".", "neutron", ".", "is_extension_supported", "(", "request", ",", "'provider'", ")", ":", "#NEWLINE#", "#INDENT#", "neutron_settings", "#NEWLINE#", "seg_id_range", "=", "neutron_settings", ".", "get", "(", "'segmentation_id_range'", ",", "{", "#NEWLINE#", "#INDENT#", "#NEWLINE#", "#UNINDENT#", "}", ")", "#NEWLINE#", "self", ".", "seg_id_range", "=", "{", "#NEWLINE#", "#INDENT#", "'vlan'", ":", "seg_id_range", ".", ":", "seg_id_range", ".", "get", "(", "'gre'", ",", ",", "#NEWLINE#", "'vxlan'", ":", "seg_id_range", ".", "get", "#NEWLINE#", "seg_id_help", "=", "(", "_", "(", "'For VLAN networks, the VLAN VID on the physical network that realizes the virtual network. Valid VLAN VIDs are %(vlan_min)s through %(vlan_max)s. For GRE or VXLAN networks, the tunnel ID. Valid tunnel IDs for GRE networks are %(gre_min)s through %(gre_max)s. For VXLAN networks, %(vxlan_min)s through %(vxlan_max)s.'", "self", ".", "seg_id_range", "[", "'vlan'", "]", "[", "0", "]", ",", "#NEWLINE#", "'vlan_max'", ":", "self", ".", "seg_id_range", "[", "'vlan'", "]", "[", "1", "]", ",", "#NEWLINE#", "'gre_min'", ":", "self", ".", "seg_id_range", "[", "'gre'", "]", "[", "0", "]", ",", "#NEWLINE#", "'gre_max'", ":", "self", ".", "seg_id_range", "#NEWLINE#", "'vxlan_min'", ":", "self", ".", "seg_id_range", "[", "'vxlan_max'", ":", "self", ".", "seg_id_range", "[", "'vxlan'", "}", ")", "#NEWLINE#", "self", ".", "fields", "[", "'segmentation_id'", "]", ".", "help_text", "=", "seg_id_help", "#NEWLINE#", "supported_provider_types", "=", "neutron_settings", ".", "get", "(", "'supported_provider_types'", "(", "supported_provider_types", "==", "[", "'*'", "]", ")", ":", "#NEWLINE#", "#INDENT#", "network_type_choices", "=", "PROVIDER_TYPES", "#NEWLINE#", "#UNINDENT#", "else", ":", "#NEWLINE#", "#INDENT#", "network_type_choices", "=", "[", "net_type", "for", "net_type", "in", "PROVIDER_TYPES", "if", "(", "net_type", "[", "0", "]", "in", "supported_provider_types", ")", "]", "#NEWLINE#", "#UNINDENT#", "if", "(", "len", "(", "network_type_choices", ")", "==", "0", ")", ":", "#NEWLINE#", "#INDENT#", "self", ".", "_hide_provider_network_type", "(", ")", "#NEWLINE#", "#UNINDENT#", "else", ":", "#NEWLINE#", "#INDENT#", "self", ".", "fields", "[", "'network_type'", "]", ".", "choices", "=", "network_type_choices", "#NEWLINE#", "#UNINDENT#", "#UNINDENT#", "else", ":", "#NEWLINE#", "#INDENT#", "self", ".", "_hide_provider_network_type", "(", ")"]}}
{"position": {"error_location": 79, "repair_targets": [61, 68, 83], "repair_candidates": [7, 26, 146, 164, 171, 174, 184, 196, 209, 222, 235, 241, 247, 79, 293, 295, 300, 46, 63, 281, 290, 314, 342, 4, 23, 57, 126, 137, 61, 68, 83, 29, 48, 32, 74, 100, 144, 148, 266, 188, 262, 2, 18, 91, 113, 122, 162, 194, 207, 220, 233, 239, 245, 253, 322, 333, 350, 264, 272, 305]}}
{"prediction": {"error_location": 0.8921927809715271, "repair_targets": [0.32400044798851013, 0.5555882453918457, 0.0007352885440923274], "repair_candidates": [0.00015242518566083163, 0.0053694178350269794, 0.008157397620379925, 0.00011533328506629914, 0.0003522610932122916, 1.3836054677085485e-05, 0.0004946966073475778, 0.03700048476457596, 0.008180699311196804, 0.013468286953866482, 0.001978059997782111, 0.32400044798851013, 1.4485727660940029e-05, 0.5555882453918457, 0.009680711664259434, 0.00011448574514361098, 0.0007352885440923274, 1.7914340787683614e-05, 0.0005177846178412437, 1.5055218682391569e-05, 2.5392253519385122e-05, 0.0008330283453688025, 0.014595617540180683, 0.00035524985287338495, 0.0004978892393410206, 2.4772127289907075e-05, 0.0002378780918661505, 0.0008337324834428728, 0.00011680903844535351, 2.5663113774498925e-05, 1.1310777153994422e-05, 0.00041401301859878004, 2.091789610858541e-05, 0.0009186674142256379, 6.078932528907899e-06, 0.0015651130815967917, 3.882140390487621e-06, 0.00030565744964405894, 5.105936452309834e-06, 0.000664370134472847, 2.2158512820169562e-06, 0.00045419641537591815, 8.349999916390516e-06, 0.0003011862572748214, 1.313661300628155e-06, 4.2736810428323224e-05, 0.0003943692718166858, 6.578387001354713e-06, 9.685139229986817e-05, 0.00023554661311209202, 0.0012590779224410653, 6.279988156165928e-05, 0.007930525578558445, 0.00014398731582332402, 0.00045430538011714816, 0.0006300233653746545, 1.2316550055402331e-05, 4.448447270988254e-06, 0.0005197777063585818, 1.0918000953097362e-05], "target_probs": 0.8803240060806274}}


{"result": {"time": "2021-02-11 10:38:40.923225", "n_pass": [224, 12, 12], "n_token": 348, "loss": [0.09040399640798569, 0.10411062091588974], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def __init__(", "self", ",", "request", ",", "*", "args", ",", "**kwargs", ")", ":", "#NEWLINE#", "#INDENT#", "super", "(", "CreateNetwork", ",", "self", ")", ".", "__init__", "(", "request", ",", "*", "args", ",", "**", "kwargs", ")", "#NEWLINE#", "tenant_choices", "=", "[", "(", "''", ",", "_", "(", "'Select a project'", ")", ")", "]", "#NEWLINE#", "(", "tenants", ",", "has_more", ")", "=", "api", ".", "keystone", ".", "tenant_list", "(", "request", ")", "#NEWLINE#", "for", "tenant", "in", "tenants", ":", "#NEWLINE#", "#INDENT#", "if", "tenant", ".", "enabled", ":", "#NEWLINE#", "#INDENT#", "tenant_choices", ".", "append", "(", "(", "net_type", ".", "id", ",", "tenant", ".", "name", ")", ")", "#NEWLINE#", "#UNINDENT#", "#UNINDENT#", "self", ".", "fields", "[", "'tenant_id'", "]", ".", "choices", "=", "tenant_choices", "#NEWLINE#", "if", "api", ".", "neutron", ".", "is_port_profiles_supported", "(", ")", ":", "#NEWLINE#", "#INDENT#", "self", ".", "fields", "[", "'net_profile_id'", "]", ".", "choices", "=", "self", ".", "get_network_profile_choices", "(", "request", ")", "#NEWLINE#", "#UNINDENT#", "if", "api", ".", "neutron", ".", "is_extension_supported", "(", "request", ",", "'provider'", ")", ":", "#NEWLINE#", "#INDENT#", "neutron_settings", "#NEWLINE#", "seg_id_range", "=", "neutron_settings", ".", "get", "(", "'segmentation_id_range'", ",", "{", "#NEWLINE#", "#INDENT#", "#NEWLINE#", "#UNINDENT#", "}", ")", "#NEWLINE#", "self", ".", "seg_id_range", "=", "{", "#NEWLINE#", "#INDENT#", "'vlan'", ":", "seg_id_range", ".", ":", "seg_id_range", ".", "get", "(", "'gre'", ",", ",", "#NEWLINE#", "'vxlan'", ":", "seg_id_range", ".", "get", "#NEWLINE#", "seg_id_help", "=", "(", "_", "(", "'For VLAN networks, the VLAN VID on the physical network that realizes the virtual network. Valid VLAN VIDs are %(vlan_min)s through %(vlan_max)s. For GRE or VXLAN networks, the tunnel ID. Valid tunnel IDs for GRE networks are %(gre_min)s through %(gre_max)s. For VXLAN networks, %(vxlan_min)s through %(vxlan_max)s.'", "self", ".", "seg_id_range", "[", "'vlan'", "]", "[", "0", "]", ",", "#NEWLINE#", "'vlan_max'", ":", "self", ".", "seg_id_range", "[", "'vlan'", "]", "[", "1", "]", ",", "#NEWLINE#", "'gre_min'", ":", "self", ".", "seg_id_range", "[", "'gre'", "]", "[", "0", "]", ",", "#NEWLINE#", "'gre_max'", ":", "self", ".", "seg_id_range", "#NEWLINE#", "'vxlan_min'", ":", "self", ".", "seg_id_range", "[", "'vxlan_max'", ":", "self", ".", "seg_id_range", "[", "'vxlan'", "}", ")", "#NEWLINE#", "self", ".", "fields", "[", "'segmentation_id'", "]", ".", "help_text", "=", "seg_id_help", "#NEWLINE#", "supported_provider_types", "=", "neutron_settings", ".", "get", "(", "'supported_provider_types'", "(", "supported_provider_types", "==", "[", "'*'", "]", ")", ":", "#NEWLINE#", "#INDENT#", "network_type_choices", "=", "PROVIDER_TYPES", "#NEWLINE#", "#UNINDENT#", "else", ":", "#NEWLINE#", "#INDENT#", "network_type_choices", "=", "[", "net_type", "for", "net_type", "in", "PROVIDER_TYPES", "if", "(", "net_type", "[", "0", "]", "in", "supported_provider_types", "(", "network_type_choices", ")", "==", "0", ")", ":", "#NEWLINE#", "#INDENT#", "self", ".", "_hide_provider_network_type", "(", ")", "#NEWLINE#", "#UNINDENT#", "else", ":", "#NEWLINE#", "#INDENT#", "self", ".", "fields", "[", "'network_type'", "]", ".", "choices", "=", "network_type_choices", "#NEWLINE#", "#UNINDENT#", "#UNINDENT#", "else", ":", "#NEWLINE#", "#INDENT#", "self", ".", "_hide_provider_network_type", "(", ")"]}}
{"position": {"error_location": 79, "repair_targets": [61, 68, 83], "repair_candidates": [7, 26, 146, 164, 171, 174, 184, 196, 209, 222, 235, 241, 247, 79, 293, 295, 300, 46, 63, 281, 290, 307, 335, 4, 23, 57, 126, 137, 61, 68, 83, 29, 48, 32, 74, 100, 144, 148, 266, 188, 262, 2, 18, 91, 113, 122, 162, 194, 207, 220, 233, 239, 245, 253, 315, 326, 343, 264, 272, 305]}}
{"prediction": {"error_location": 0.9135621190071106, "repair_targets": [0.3390766382217407, 0.5613250136375427, 0.0007239847327582538], "repair_candidates": [0.00013515041791833937, 0.004630018956959248, 0.007223698776215315, 0.0001001087948679924, 0.0003049056394957006, 1.2739888916257769e-05, 0.0004439546028152108, 0.03423013910651207, 0.007522035390138626, 0.013204338029026985, 0.001931319129653275, 0.3390766382217407, 1.325394623563625e-05, 0.5613250136375427, 0.008944172412157059, 0.00010497967741684988, 0.0007239847327582538, 1.2523071745818015e-05, 0.0004755067639052868, 1.3842186490364838e-05, 1.7586680769454688e-05, 0.0005845805280841887, 0.008651698008179665, 0.000332528812577948, 0.00032814551377668977, 1.977331339730881e-05, 0.00012392511416692287, 0.0006104390486143529, 7.896504394011572e-05, 2.179711555072572e-05, 1.1336365787428804e-05, 0.00040669302688911557, 1.6052792489062995e-05, 0.001101493602618575, 6.305132956185844e-06, 0.0014045401476323605, 4.160179287282517e-06, 0.00021429294429253787, 4.3024588194384705e-06, 0.0006840036367066205, 1.678970761531673e-06, 0.00029572201310656965, 8.139442797983065e-06, 0.00023346241505350918, 1.1143981737404829e-06, 6.77490170346573e-05, 0.00017228415526915342, 4.129146873310674e-06, 9.103141928790137e-05, 0.00012759094533976167, 0.0004248053301125765, 2.837922511389479e-05, 0.0028126093093305826, 8.247992082033306e-05, 6.260706868488342e-05, 7.032445137156174e-05, 8.239409908128437e-06, 3.2323896448360756e-06, 0.0004455060698091984, 8.08484765002504e-06], "target_probs": 0.9011256098747253}}


{"result": {"time": "2021-02-11 10:38:41.188370", "n_pass": [228, 13, 13], "n_token": 341, "loss": [0.10605951398611069, 0.09108580648899078], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def __init__(", "self", ",", "request", ",", "*", "args", ",", "**kwargs", ")", ":", "#NEWLINE#", "#INDENT#", "super", "(", "CreateNetwork", ",", "self", ")", ".", "__init__", "(", "request", ",", "*", "args", ",", "**", "kwargs", ")", "#NEWLINE#", "tenant_choices", "=", "[", "(", "''", ",", "_", "(", "'Select a project'", ")", ")", "]", "#NEWLINE#", "(", "tenants", ",", "has_more", ")", "=", "api", ".", "keystone", ".", "tenant_list", "(", "request", ")", "#NEWLINE#", "for", "tenant", "in", "tenants", ":", "#NEWLINE#", "#INDENT#", "if", "tenant", ".", "enabled", ":", "#NEWLINE#", "#INDENT#", "tenant_choices", ".", "append", "(", "(", "net_type", ".", "id", ",", "tenant", ".", "name", ")", ")", "#NEWLINE#", "#UNINDENT#", "#UNINDENT#", "self", ".", "fields", "[", "'tenant_id'", "]", ".", "choices", "=", "tenant_choices", "#NEWLINE#", "if", "api", ".", "neutron", ".", "is_port_profiles_supported", "(", ")", ":", "#NEWLINE#", "#INDENT#", "self", ".", "fields", "[", "'net_profile_id'", "]", ".", "choices", "=", "self", ".", "get_network_profile_choices", "(", "request", ")", "#NEWLINE#", "#UNINDENT#", "if", "api", ".", "neutron", ".", "is_extension_supported", "(", "request", ",", "'provider'", ")", ":", "#NEWLINE#", "#INDENT#", "neutron_settings", "#NEWLINE#", "seg_id_range", "=", "neutron_settings", ".", "get", "(", "'segmentation_id_range'", ",", "{", "#NEWLINE#", "#INDENT#", "#NEWLINE#", "#UNINDENT#", "}", ")", "#NEWLINE#", "self", ".", "seg_id_range", "=", "{", "#NEWLINE#", "#INDENT#", "'vlan'", ":", "seg_id_range", ".", ":", "seg_id_range", ".", "get", "(", "'gre'", ",", ",", "#NEWLINE#", "'vxlan'", ":", "seg_id_range", ".", "get", "#NEWLINE#", "seg_id_help", "=", "(", "_", "(", "'For VLAN networks, the VLAN VID on the physical network that realizes the virtual network. Valid VLAN VIDs are %(vlan_min)s through %(vlan_max)s. For GRE or VXLAN networks, the tunnel ID. Valid tunnel IDs for GRE networks are %(gre_min)s through %(gre_max)s. For VXLAN networks, %(vxlan_min)s through %(vxlan_max)s.'", "self", ".", "seg_id_range", "[", "'vlan'", "]", "[", "0", "]", ",", "#NEWLINE#", "'vlan_max'", ":", "self", ".", "seg_id_range", "[", "'vlan'", "]", "[", "1", "]", ",", "#NEWLINE#", "'gre_min'", ":", "self", ".", "seg_id_range", "[", "'gre'", "]", "[", "0", "]", ",", "#NEWLINE#", "'gre_max'", ":", "self", ".", "seg_id_range", "#NEWLINE#", "'vxlan_min'", ":", "self", ".", "seg_id_range", "[", "'vxlan_max'", ":", "self", ".", "seg_id_range", "[", "'vxlan'", "}", ")", "#NEWLINE#", "self", ".", "fields", "[", "'segmentation_id'", "]", ".", "help_text", "=", "seg_id_help", "#NEWLINE#", "supported_provider_types", "=", "neutron_settings", ".", "get", "(", "'supported_provider_types'", "(", "supported_provider_types", "==", "[", "'*'", "]", ")", ":", "#NEWLINE#", "#INDENT#", "network_type_choices", "=", "PROVIDER_TYPES", "#NEWLINE#", "#UNINDENT#", "else", ":", "#NEWLINE#", "#INDENT#", "network_type_choices", "=", "[", "net_type", "for", "net_type", "in", "PROVIDER_TYPES", "if", "(", "net_type", "[", "0", "]", "in", "supported_provider_types", "(", "network_type_choices", ")", "==", "0", ")", ":", "#NEWLINE#", "#INDENT#", "self", ".", "_hide_provider_network_type", "(", ")", "#NEWLINE#", "#UNINDENT#", "else", ":", "#NEWLINE#", "#INDENT#", "self", "=", "network_type_choices", "#NEWLINE#", "#UNINDENT#", "#UNINDENT#", "else", ":", "#NEWLINE#", "#INDENT#", "self", ".", "_hide_provider_network_type", "(", ")"]}}
{"position": {"error_location": 79, "repair_targets": [61, 68, 83], "repair_candidates": [7, 26, 146, 164, 171, 174, 184, 196, 209, 222, 235, 241, 247, 79, 293, 295, 300, 46, 63, 281, 290, 307, 328, 4, 23, 57, 126, 137, 61, 68, 83, 29, 48, 32, 74, 100, 144, 148, 266, 188, 262, 2, 18, 91, 113, 122, 162, 194, 207, 220, 233, 239, 245, 253, 315, 326, 336, 264, 272, 305]}}
{"prediction": {"error_location": 0.8993711471557617, "repair_targets": [0.2875727415084839, 0.6246026158332825, 0.0007640126859769225], "repair_candidates": [0.00011826823902083561, 0.004171563312411308, 0.006668298039585352, 0.00010498239134903997, 0.00019389470980968326, 1.261002125829691e-05, 0.0004053220618516207, 0.031813472509384155, 0.007210551295429468, 0.009361929260194302, 0.0025449965614825487, 0.2875727415084839, 1.1394454304536339e-05, 0.6246026158332825, 0.006523857358843088, 8.757022442296147e-05, 0.0007640126859769225, 8.6037171058706e-06, 0.0005689351819455624, 1.1329831067996565e-05, 1.3793511243420653e-05, 0.00044998020166531205, 0.0075847432017326355, 0.0001717163249850273, 0.0001980712841032073, 1.1178499335073866e-05, 0.00010615507926559076, 0.0005245836800895631, 5.567814878304489e-05, 1.46309921547072e-05, 9.853624760580715e-06, 0.00026449922006577253, 1.2953479199495632e-05, 0.0009504883782938123, 5.317131581250578e-06, 0.001012046355754137, 3.59563500751392e-06, 0.00020159494306426495, 3.8985308492556214e-06, 0.0006268284050747752, 1.4615700365538942e-06, 0.0002733589499257505, 7.66715584177291e-06, 0.00023538894311059266, 1.2339667136984644e-06, 8.079366671154276e-05, 0.00017289022798649967, 4.498686848819489e-06, 8.300919580506161e-05, 0.0001577214279677719, 0.0002535287057980895, 2.21364480239572e-05, 0.0034047323279082775, 0.00013924443919677287, 4.629869727068581e-05, 5.254681673250161e-05, 9.752246114658192e-06, 2.3076116121956147e-05, 3.700442539411597e-05, 1.5158182577579282e-05], "target_probs": 0.9129393696784973}}


{"result": {"time": "2021-02-11 10:38:41.449401", "n_pass": [233, 14, 14], "n_token": 335, "loss": [0.05708404257893562, 0.08556589484214783], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def __init__(", "self", ",", "request", ",", "*", "args", ",", "**kwargs", ")", ":", "self", ")", ".", "__init__", "(", "request", ",", "*", "args", ",", "**", "kwargs", ")", "#NEWLINE#", "tenant_choices", "=", "[", "(", "''", ",", "_", "(", "'Select a project'", ")", ")", "]", "#NEWLINE#", "(", "tenants", ",", "has_more", ")", "=", "api", ".", "keystone", ".", "tenant_list", "(", "request", ")", "#NEWLINE#", "for", "tenant", "in", "tenants", ":", "#NEWLINE#", "#INDENT#", "if", "tenant", ".", "enabled", ":", "#NEWLINE#", "#INDENT#", "tenant_choices", ".", "append", "(", "(", "net_type", ".", "id", ",", "tenant", ".", "name", ")", ")", "#NEWLINE#", "#UNINDENT#", "#UNINDENT#", "self", ".", "fields", "[", "'tenant_id'", "]", ".", "choices", "=", "tenant_choices", "#NEWLINE#", "if", "api", ".", "neutron", ".", "is_port_profiles_supported", "(", ")", ":", "#NEWLINE#", "#INDENT#", "self", ".", "fields", "[", "'net_profile_id'", "]", ".", "choices", "=", "self", ".", "get_network_profile_choices", "(", "request", ")", "#NEWLINE#", "#UNINDENT#", "if", "api", ".", "neutron", ".", "is_extension_supported", "(", "request", ",", "'provider'", ")", ":", "#NEWLINE#", "#INDENT#", "neutron_settings", "#NEWLINE#", "seg_id_range", "=", "neutron_settings", ".", "get", "(", "'segmentation_id_range'", ",", "{", "#NEWLINE#", "#INDENT#", "#NEWLINE#", "#UNINDENT#", "}", ")", "#NEWLINE#", "self", ".", "seg_id_range", "=", "{", "#NEWLINE#", "#INDENT#", "'vlan'", ":", "seg_id_range", ".", ":", "seg_id_range", ".", "get", "(", "'gre'", ",", ",", "#NEWLINE#", "'vxlan'", ":", "seg_id_range", ".", "get", "#NEWLINE#", "seg_id_help", "=", "(", "_", "(", "'For VLAN networks, the VLAN VID on the physical network that realizes the virtual network. Valid VLAN VIDs are %(vlan_min)s through %(vlan_max)s. For GRE or VXLAN networks, the tunnel ID. Valid tunnel IDs for GRE networks are %(gre_min)s through %(gre_max)s. For VXLAN networks, %(vxlan_min)s through %(vxlan_max)s.'", "self", ".", "seg_id_range", "[", "'vlan'", "]", "[", "0", "]", ",", "#NEWLINE#", "'vlan_max'", ":", "self", ".", "seg_id_range", "[", "'vlan'", "]", "[", "1", "]", ",", "#NEWLINE#", "'gre_min'", ":", "self", ".", "seg_id_range", "[", "'gre'", "]", "[", "0", "]", ",", "#NEWLINE#", "'gre_max'", ":", "self", ".", "seg_id_range", "#NEWLINE#", "'vxlan_min'", ":", "self", ".", "seg_id_range", "[", "'vxlan_max'", ":", "self", ".", "seg_id_range", "[", "'vxlan'", "}", ")", "#NEWLINE#", "self", ".", "fields", "[", "'segmentation_id'", "]", ".", "help_text", "=", "seg_id_help", "#NEWLINE#", "supported_provider_types", "=", "neutron_settings", ".", "get", "(", "'supported_provider_types'", "(", "supported_provider_types", "==", "[", "'*'", "]", ")", ":", "#NEWLINE#", "#INDENT#", "network_type_choices", "=", "PROVIDER_TYPES", "#NEWLINE#", "#UNINDENT#", "else", ":", "#NEWLINE#", "#INDENT#", "network_type_choices", "=", "[", "net_type", "for", "net_type", "in", "PROVIDER_TYPES", "if", "(", "net_type", "[", "0", "]", "in", "supported_provider_types", "(", "network_type_choices", ")", "==", "0", ")", ":", "#NEWLINE#", "#INDENT#", "self", ".", "_hide_provider_network_type", "(", ")", "#NEWLINE#", "#UNINDENT#", "else", ":", "#NEWLINE#", "#INDENT#", "self", "=", "network_type_choices", "#NEWLINE#", "#UNINDENT#", "#UNINDENT#", "else", ":", "#NEWLINE#", "#INDENT#", "self", ".", "_hide_provider_network_type", "(", ")"]}}
{"position": {"error_location": 73, "repair_targets": [55, 62, 77], "repair_candidates": [7, 20, 140, 158, 165, 168, 178, 190, 203, 216, 229, 235, 241, 73, 287, 289, 294, 40, 57, 275, 284, 301, 322, 4, 17, 51, 120, 131, 55, 62, 77, 23, 42, 26, 68, 94, 138, 142, 260, 182, 256, 2, 12, 85, 107, 116, 156, 188, 201, 214, 227, 233, 239, 247, 309, 320, 330, 258, 266, 299]}}
{"prediction": {"error_location": 0.944514811038971, "repair_targets": [0.3417607247829437, 0.5756390690803528, 0.000592896540183574], "repair_candidates": [4.12780609622132e-05, 0.002574615878984332, 0.012266109697520733, 7.263972656801343e-05, 0.0002604580658953637, 1.0820403076650109e-05, 0.0002590448420960456, 0.026877062395215034, 0.006599306128919125, 0.007929365150630474, 0.0019073765724897385, 0.3417607247829437, 9.291387868870515e-06, 0.5756390690803528, 0.007617829833179712, 7.286960317287594e-05, 0.000592896540183574, 1.4382303561433218e-05, 0.0003862343728542328, 1.0528984603297431e-05, 1.5888255802565254e-05, 0.00037839525612071157, 0.006922348402440548, 0.0002502592105884105, 0.00023013880127109587, 1.641021663090214e-05, 0.00010436396405566484, 0.0004681880527641624, 5.205098932492547e-05, 1.3701001080335118e-05, 9.28974895941792e-06, 0.0002935620432253927, 1.2760693607560825e-05, 0.0007686254102736712, 5.727730695070932e-06, 0.0009621544741094112, 3.3438439004385145e-06, 0.0001416357554262504, 3.7852032619412057e-06, 0.0005713459104299545, 1.4062375157664064e-06, 0.0002703754580579698, 6.963209216337418e-06, 0.00015956001880113035, 1.1806918109869002e-06, 5.359306305763312e-05, 0.00016563161625526845, 4.015965714643244e-06, 6.363423744915053e-05, 9.896391566144302e-05, 0.0002976843388751149, 1.909593447635416e-05, 0.0024732653982937336, 0.00011131418432341889, 4.0795450331643224e-05, 4.9342728743795305e-05, 7.703235496592242e-06, 1.7269878298975527e-05, 2.145005601050798e-05, 1.0891862075368408e-05], "target_probs": 0.9179926514625549}}


{"result": {"time": "2021-02-11 10:38:41.706552", "n_pass": [237, 15, 15], "n_token": 329, "loss": [0.062026772648096085, 0.10915441066026688], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def __init__(", "self", ",", "request", ",", "*", "args", ",", "**kwargs", ")", ":", "self", ")", ".", "__init__", "(", "request", ",", "*", "args", ",", "**", "kwargs", ")", "#NEWLINE#", "tenant_choices", "=", "[", "(", ")", "]", "#NEWLINE#", "(", "tenants", ",", "has_more", ")", "=", "api", ".", "keystone", ".", "tenant_list", "(", "request", ")", "#NEWLINE#", "for", "tenant", "in", "tenants", ":", "#NEWLINE#", "#INDENT#", "if", "tenant", ".", "enabled", ":", "#NEWLINE#", "#INDENT#", "tenant_choices", ".", "append", "(", "(", "net_type", ".", "id", ",", "tenant", ".", "name", ")", ")", "#NEWLINE#", "#UNINDENT#", "#UNINDENT#", "self", ".", "fields", "[", "'tenant_id'", "]", ".", "choices", "=", "tenant_choices", "#NEWLINE#", "if", "api", ".", "neutron", ".", "is_port_profiles_supported", "(", ")", ":", "#NEWLINE#", "#INDENT#", "self", ".", "fields", "[", "'net_profile_id'", "]", ".", "choices", "=", "self", ".", "get_network_profile_choices", "(", "request", ")", "#NEWLINE#", "#UNINDENT#", "if", "api", ".", "neutron", ".", "is_extension_supported", "(", "request", ",", "'provider'", ")", ":", "#NEWLINE#", "#INDENT#", "neutron_settings", "#NEWLINE#", "seg_id_range", "=", "neutron_settings", ".", "get", "(", "'segmentation_id_range'", ",", "{", "#NEWLINE#", "#INDENT#", "#NEWLINE#", "#UNINDENT#", "}", ")", "#NEWLINE#", "self", ".", "seg_id_range", "=", "{", "#NEWLINE#", "#INDENT#", "'vlan'", ":", "seg_id_range", ".", ":", "seg_id_range", ".", "get", "(", "'gre'", ",", ",", "#NEWLINE#", "'vxlan'", ":", "seg_id_range", ".", "get", "#NEWLINE#", "seg_id_help", "=", "(", "_", "(", "'For VLAN networks, the VLAN VID on the physical network that realizes the virtual network. Valid VLAN VIDs are %(vlan_min)s through %(vlan_max)s. For GRE or VXLAN networks, the tunnel ID. Valid tunnel IDs for GRE networks are %(gre_min)s through %(gre_max)s. For VXLAN networks, %(vxlan_min)s through %(vxlan_max)s.'", "self", ".", "seg_id_range", "[", "'vlan'", "]", "[", "0", "]", ",", "#NEWLINE#", "'vlan_max'", ":", "self", ".", "seg_id_range", "[", "'vlan'", "]", "[", "1", "]", ",", "#NEWLINE#", "'gre_min'", ":", "self", ".", "seg_id_range", "[", "'gre'", "]", "[", "0", "]", ",", "#NEWLINE#", "'gre_max'", ":", "self", ".", "seg_id_range", "#NEWLINE#", "'vxlan_min'", ":", "self", ".", "seg_id_range", "[", "'vxlan_max'", ":", "self", ".", "seg_id_range", "[", "'vxlan'", "}", ")", "#NEWLINE#", "self", ".", "fields", "[", "'segmentation_id'", "]", ".", "help_text", "=", "seg_id_help", "#NEWLINE#", "supported_provider_types", "=", "neutron_settings", ".", "get", "(", "'supported_provider_types'", "(", "supported_provider_types", "==", "[", "'*'", "]", ")", ":", "#NEWLINE#", "#INDENT#", "network_type_choices", "=", "PROVIDER_TYPES", "#NEWLINE#", "#UNINDENT#", "else", ":", "#NEWLINE#", "#INDENT#", "network_type_choices", "=", "[", "net_type", "for", "net_type", "in", "PROVIDER_TYPES", "if", "(", "net_type", "[", "0", "]", "in", "supported_provider_types", "(", "network_type_choices", ")", "==", "0", ")", ":", "#NEWLINE#", "#INDENT#", "self", ".", "_hide_provider_network_type", "(", ")", "#NEWLINE#", "#UNINDENT#", "else", ":", "#NEWLINE#", "#INDENT#", "self", "=", "network_type_choices", "#NEWLINE#", "#UNINDENT#", "#UNINDENT#", "else", ":", "#NEWLINE#", "#INDENT#", "self", ".", "_hide_provider_network_type", "(", ")"]}}
{"position": {"error_location": 67, "repair_targets": [49, 56, 71], "repair_candidates": [7, 20, 134, 152, 159, 162, 172, 184, 197, 210, 223, 229, 235, 67, 281, 283, 288, 34, 51, 269, 278, 295, 316, 4, 17, 45, 114, 125, 49, 56, 71, 23, 36, 26, 62, 88, 132, 136, 254, 176, 250, 2, 12, 79, 101, 110, 150, 182, 195, 208, 221, 227, 233, 241, 303, 314, 324, 252, 260, 293]}}
{"prediction": {"error_location": 0.9398576021194458, "repair_targets": [0.32337048649787903, 0.5724802613258362, 0.000741166586522013], "repair_candidates": [4.4208067265572026e-05, 0.0023643665481358767, 0.016707036644220352, 6.955162825761363e-05, 0.00021635381563100964, 1.1609539797063917e-05, 0.00024714155006222427, 0.035309743136167526, 0.010098358616232872, 0.008409664034843445, 0.002506912685930729, 0.32337048649787903, 1.0980344086419791e-05, 0.5724802613258362, 0.007681580726057291, 8.904871356207877e-05, 0.000741166586522013, 1.3535467587644234e-05, 0.0003736241487786174, 1.0995654520229436e-05, 1.9610923118307255e-05, 0.0004938488709740341, 0.00883804727345705, 0.0002930473710875958, 0.0002796189801301807, 2.5302924768766388e-05, 0.00015355338109657168, 0.0005576223484240472, 7.518898200942203e-05, 1.718351268209517e-05, 9.363037861476187e-06, 0.0003715557686518878, 1.9606866771937348e-05, 0.0009267446584999561, 6.810806553403381e-06, 0.0010586638236418366, 3.745995627468801e-06, 0.0002695616567507386, 4.226015335007105e-06, 0.000544051406905055, 1.8058772184303962e-06, 0.00034706987207755446, 7.641349839104805e-06, 0.0002413566835457459, 1.046914348989958e-06, 4.1803614294622093e-05, 0.0002214581036241725, 4.372247076389613e-06, 7.495586760342121e-05, 0.00012568269448820502, 0.00045829566079191864, 3.482259489828721e-05, 0.0034660957753658295, 9.801835403777659e-05, 3.613652734202333e-05, 4.592420009430498e-05, 9.351134394819383e-06, 2.1721396478824317e-05, 2.4586703148088418e-05, 1.3814611520501785e-05], "target_probs": 0.8965919613838196}}


{"result": {"time": "2021-02-11 10:38:41.964366", "n_pass": [247, 16, 16], "n_token": 322, "loss": [0.04302389174699783, 0.06692663580179214], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def __init__(", "self", ",", "request", ",", "*", "args", ",", "**kwargs", ")", ":", "self", ")", ".", "__init__", "(", "request", ",", "*", "args", ",", "**", "kwargs", ")", "#NEWLINE#", "tenant_choices", "=", "[", "(", ")", "]", "#NEWLINE#", "(", "tenants", ",", "has_more", ")", "=", "api", ".", "keystone", ".", "tenant_list", "(", "request", ")", "#NEWLINE#", "for", "tenant", "in", "tenants", ":", "#NEWLINE#", "#INDENT#", "if", "tenant", ".", "enabled", ":", "#NEWLINE#", "#INDENT#", "tenant_choices", ".", "append", "(", "(", "net_type", ".", "id", ",", "tenant", ".", "name", ")", ")", "#NEWLINE#", "#UNINDENT#", "#UNINDENT#", "self", ".", "fields", "[", "'tenant_id'", "]", ".", "choices", "=", "tenant_choices", "#NEWLINE#", "if", ":", "#NEWLINE#", "#INDENT#", "self", ".", "fields", "[", "'net_profile_id'", "]", ".", "choices", "=", "self", ".", "get_network_profile_choices", "(", "request", ")", "#NEWLINE#", "#UNINDENT#", "if", "api", ".", "neutron", ".", "is_extension_supported", "(", "request", ",", "'provider'", ")", ":", "#NEWLINE#", "#INDENT#", "neutron_settings", "#NEWLINE#", "seg_id_range", "=", "neutron_settings", ".", "get", "(", "'segmentation_id_range'", ",", "{", "#NEWLINE#", "#INDENT#", "#NEWLINE#", "#UNINDENT#", "}", ")", "#NEWLINE#", "self", ".", "seg_id_range", "=", "{", "#NEWLINE#", "#INDENT#", "'vlan'", ":", "seg_id_range", ".", ":", "seg_id_range", ".", "get", "(", "'gre'", ",", ",", "#NEWLINE#", "'vxlan'", ":", "seg_id_range", ".", "get", "#NEWLINE#", "seg_id_help", "=", "(", "_", "(", "'For VLAN networks, the VLAN VID on the physical network that realizes the virtual network. Valid VLAN VIDs are %(vlan_min)s through %(vlan_max)s. For GRE or VXLAN networks, the tunnel ID. Valid tunnel IDs for GRE networks are %(gre_min)s through %(gre_max)s. For VXLAN networks, %(vxlan_min)s through %(vxlan_max)s.'", "self", ".", "seg_id_range", "[", "'vlan'", "]", "[", "0", "]", ",", "#NEWLINE#", "'vlan_max'", ":", "self", ".", "seg_id_range", "[", "'vlan'", "]", "[", "1", "]", ",", "#NEWLINE#", "'gre_min'", ":", "self", ".", "seg_id_range", "[", "'gre'", "]", "[", "0", "]", ",", "#NEWLINE#", "'gre_max'", ":", "self", ".", "seg_id_range", "#NEWLINE#", "'vxlan_min'", ":", "self", ".", "seg_id_range", "[", "'vxlan_max'", ":", "self", ".", "seg_id_range", "[", "'vxlan'", "}", ")", "#NEWLINE#", "self", ".", "fields", "[", "'segmentation_id'", "]", ".", "help_text", "=", "seg_id_help", "#NEWLINE#", "supported_provider_types", "=", "neutron_settings", ".", "get", "(", "'supported_provider_types'", "(", "supported_provider_types", "==", "[", "'*'", "]", ")", ":", "#NEWLINE#", "#INDENT#", "network_type_choices", "=", "PROVIDER_TYPES", "#NEWLINE#", "#UNINDENT#", "else", ":", "#NEWLINE#", "#INDENT#", "network_type_choices", "=", "[", "net_type", "for", "net_type", "in", "PROVIDER_TYPES", "if", "(", "net_type", "[", "0", "]", "in", "supported_provider_types", "(", "network_type_choices", ")", "==", "0", ")", ":", "#NEWLINE#", "#INDENT#", "self", ".", "_hide_provider_network_type", "(", ")", "#NEWLINE#", "#UNINDENT#", "else", ":", "#NEWLINE#", "#INDENT#", "self", "=", "network_type_choices", "#NEWLINE#", "#UNINDENT#", "#UNINDENT#", "else", ":", "#NEWLINE#", "#INDENT#", "self", ".", "_hide_provider_network_type", "(", ")"]}}
{"position": {"error_location": 67, "repair_targets": [49, 56, 71], "repair_candidates": [7, 20, 127, 145, 152, 155, 165, 177, 190, 203, 216, 222, 228, 67, 274, 276, 281, 34, 51, 262, 271, 288, 309, 4, 17, 45, 107, 118, 49, 56, 71, 23, 36, 26, 62, 88, 125, 129, 247, 169, 243, 2, 12, 79, 94, 103, 143, 175, 188, 201, 214, 220, 226, 234, 296, 307, 317, 245, 253, 286]}}
{"prediction": {"error_location": 0.9578884243965149, "repair_targets": [0.4085736870765686, 0.5256799459457397, 0.0010102043161168694], "repair_candidates": [2.757263064268045e-05, 0.001580786076374352, 0.010848652571439743, 4.42328819190152e-05, 0.00013810463133268058, 7.0539326770813204e-06, 0.0001521820668131113, 0.026232285425066948, 0.0067396461963653564, 0.005888521205633879, 0.0012512163957580924, 0.4085736870765686, 7.71205304772593e-06, 0.5256799459457397, 0.003442831104621291, 6.971716356929392e-05, 0.0010102043161168694, 2.0689503799076192e-05, 0.00022228046145755798, 6.710067282256205e-06, 9.928495273925364e-06, 0.00023455920745618641, 0.0031420420855283737, 0.00013906163803767413, 0.00013332509843166918, 1.3070477507426403e-05, 6.259461952140555e-05, 0.0002407596621196717, 3.597034083213657e-05, 1.3308494089869782e-05, 5.30446686752839e-06, 0.00011817131598945707, 7.45071474739234e-06, 0.0005001086392439902, 4.117859589314321e-06, 0.0006055315607227385, 2.199389882662217e-06, 0.0001345460768789053, 2.6825364329852164e-06, 0.00027221039636060596, 9.685501254352857e-07, 0.00016557928756810725, 4.965926564182155e-06, 0.0001168403759947978, 6.046863063602359e-07, 2.5708461180329323e-05, 9.573419811204076e-05, 2.8446320357033983e-06, 4.6155484596965834e-05, 5.427066935226321e-05, 0.00017688630032353103, 2.0470592062338255e-05, 0.001533908536657691, 5.254352799966e-05, 1.8677084881346673e-05, 2.4682709408807568e-05, 5.05407115269918e-06, 1.121123568736948e-05, 1.4557843314833008e-05, 7.342543995036976e-06], "target_probs": 0.9352638125419617}}


{"result": {"time": "2021-02-11 10:38:42.216314", "n_pass": [254, 17, 17], "n_token": 315, "loss": [0.03479856625199318, 0.060601502656936646], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def __init__(", "self", ",", "request", ",", "*", "args", ",", "**kwargs", ")", ":", "self", ")", ".", "__init__", "(", "request", ",", "*", "args", ",", "**", "kwargs", ")", "#NEWLINE#", "tenant_choices", "=", "[", "(", ")", "]", "#NEWLINE#", "(", "tenants", ",", "has_more", ")", "=", "api", ".", "keystone", ".", "tenant_list", "(", "request", ")", "#NEWLINE#", "for", "tenant", "in", "tenants", ":", "#NEWLINE#", "#INDENT#", "if", "tenant", ".", "enabled", ":", "#NEWLINE#", "#INDENT#", "tenant_choices", ".", "append", "(", "(", "net_type", ".", "id", ",", "tenant", ".", "name", ")", ")", "#NEWLINE#", "#UNINDENT#", "#UNINDENT#", "self", ".", "fields", "[", "'tenant_id'", "]", ".", "choices", "=", "tenant_choices", "#NEWLINE#", "if", ":", "#NEWLINE#", "#INDENT#", "self", ".", "fields", "[", "'net_profile_id'", "]", ".", "choices", "=", "self", ".", "get_network_profile_choices", "(", "request", ")", "#NEWLINE#", "#UNINDENT#", "if", "api", ".", "neutron", ".", "is_extension_supported", "(", "request", ",", "'provider'", ")", ":", "#NEWLINE#", "#INDENT#", "neutron_settings", "#NEWLINE#", "seg_id_range", "=", "neutron_settings", ".", "get", "(", "}", ")", "#NEWLINE#", "self", ".", "seg_id_range", "=", "{", "#NEWLINE#", "#INDENT#", "'vlan'", ":", "seg_id_range", ".", ":", "seg_id_range", ".", "get", "(", "'gre'", ",", ",", "#NEWLINE#", "'vxlan'", ":", "seg_id_range", ".", "get", "#NEWLINE#", "seg_id_help", "=", "(", "_", "(", "'For VLAN networks, the VLAN VID on the physical network that realizes the virtual network. Valid VLAN VIDs are %(vlan_min)s through %(vlan_max)s. For GRE or VXLAN networks, the tunnel ID. Valid tunnel IDs for GRE networks are %(gre_min)s through %(gre_max)s. For VXLAN networks, %(vxlan_min)s through %(vxlan_max)s.'", "self", ".", "seg_id_range", "[", "'vlan'", "]", "[", "0", "]", ",", "#NEWLINE#", "'vlan_max'", ":", "self", ".", "seg_id_range", "[", "'vlan'", "]", "[", "1", "]", ",", "#NEWLINE#", "'gre_min'", ":", "self", ".", "seg_id_range", "[", "'gre'", "]", "[", "0", "]", ",", "#NEWLINE#", "'gre_max'", ":", "self", ".", "seg_id_range", "#NEWLINE#", "'vxlan_min'", ":", "self", ".", "seg_id_range", "[", "'vxlan_max'", ":", "self", ".", "seg_id_range", "[", "'vxlan'", "}", ")", "#NEWLINE#", "self", ".", "fields", "[", "'segmentation_id'", "]", ".", "help_text", "=", "seg_id_help", "#NEWLINE#", "supported_provider_types", "=", "neutron_settings", ".", "get", "(", "'supported_provider_types'", "(", "supported_provider_types", "==", "[", "'*'", "]", ")", ":", "#NEWLINE#", "#INDENT#", "network_type_choices", "=", "PROVIDER_TYPES", "#NEWLINE#", "#UNINDENT#", "else", ":", "#NEWLINE#", "#INDENT#", "network_type_choices", "=", "[", "net_type", "for", "net_type", "in", "PROVIDER_TYPES", "if", "(", "net_type", "[", "0", "]", "in", "supported_provider_types", "(", "network_type_choices", ")", "==", "0", ")", ":", "#NEWLINE#", "#INDENT#", "self", ".", "_hide_provider_network_type", "(", ")", "#NEWLINE#", "#UNINDENT#", "else", ":", "#NEWLINE#", "#INDENT#", "self", "=", "network_type_choices", "#NEWLINE#", "#UNINDENT#", "#UNINDENT#", "else", ":", "#NEWLINE#", "#INDENT#", "self", ".", "_hide_provider_network_type", "(", ")"]}}
{"position": {"error_location": 67, "repair_targets": [49, 56, 71], "repair_candidates": [7, 20, 127, 138, 145, 148, 158, 170, 183, 196, 209, 215, 221, 67, 267, 269, 274, 34, 51, 255, 264, 281, 302, 4, 17, 45, 107, 118, 49, 56, 71, 23, 36, 26, 62, 88, 125, 129, 240, 162, 236, 2, 12, 79, 94, 103, 136, 168, 181, 194, 207, 213, 219, 227, 289, 300, 310, 238, 246, 279]}}
{"prediction": {"error_location": 0.9657998085021973, "repair_targets": [0.3860519826412201, 0.5543897151947021, 0.0007564902771264315], "repair_candidates": [2.530084748286754e-05, 0.0013935838360339403, 0.009983878582715988, 4.015244485344738e-05, 0.00012072408571839333, 6.530041900987271e-06, 0.0001380014728056267, 0.02418014407157898, 0.0061279903165996075, 0.005338232032954693, 0.0011687790974974632, 0.3860519826412201, 6.8406129685172345e-06, 0.5543897151947021, 0.0029402081854641438, 5.49027172382921e-05, 0.0007564902771264315, 1.593307933944743e-05, 0.00018629264377523214, 4.803196134162135e-06, 7.4137260526185855e-06, 0.0001897901966003701, 0.002499667927622795, 0.00020235108968336135, 0.0001443109940737486, 1.7532538549858145e-05, 0.00027357914950698614, 0.00031400693114846945, 2.444093843223527e-05, 7.765325790387578e-06, 5.047348622611025e-06, 0.0001192081836052239, 5.631830845231889e-06, 0.0003996503946837038, 3.178269480486051e-06, 0.00043694957275874913, 1.9841891116811894e-06, 0.00011295255535515025, 2.320203066119575e-06, 0.00022608066501561552, 8.421768598054769e-07, 0.00013737093831878155, 4.269941655365983e-06, 9.758016676642e-05, 5.287001840770245e-07, 2.3049340597935952e-05, 8.620309381512925e-05, 2.4132648377417354e-06, 4.105961124878377e-05, 4.6894365368643776e-05, 0.00015974516281858087, 1.9076129319728352e-05, 0.001333639957010746, 4.81383794976864e-05, 1.691663965175394e-05, 2.3872125893831253e-05, 4.380280643090373e-06, 9.878724085865542e-06, 1.3333015886018984e-05, 6.4231589931296185e-06], "target_probs": 0.9411982297897339}}


{"result": {"time": "2021-02-11 10:38:42.490153", "n_pass": [393, 18, 18], "n_token": 312, "loss": [0.0401032380759716, 0.07367269694805145], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def __init__(", "self", ",", "request", ",", "*", "args", ",", "**kwargs", ")", ":", "self", ")", ".", "__init__", "(", "request", ",", "*", "args", ",", "**", "kwargs", ")", "#NEWLINE#", "tenant_choices", "=", "[", "(", ")", "]", "#NEWLINE#", "(", "tenants", ",", "has_more", ")", "=", "api", ".", "keystone", ".", "tenant_list", "(", "request", ")", "#NEWLINE#", "for", "tenant", "in", "tenants", ":", "#NEWLINE#", "#INDENT#", "if", "tenant", ".", "enabled", ":", "#NEWLINE#", "#INDENT#", "tenant_choices", ".", "append", "(", "(", "net_type", ".", "id", ",", "tenant", ".", "name", ")", ")", "#NEWLINE#", "#UNINDENT#", "#UNINDENT#", "self", ".", "fields", "[", "'tenant_id'", "]", ".", "choices", "=", "tenant_choices", "#NEWLINE#", "if", ":", "#NEWLINE#", "#INDENT#", "self", ".", "fields", "[", "'net_profile_id'", "]", ".", "choices", "=", "self", ".", "get_network_profile_choices", "(", "request", ")", "#NEWLINE#", "#UNINDENT#", "if", "api", ".", "neutron", ".", "is_extension_supported", "(", "request", ",", "#NEWLINE#", "#INDENT#", "neutron_settings", "#NEWLINE#", "seg_id_range", "=", "neutron_settings", ".", "get", "(", "}", ")", "#NEWLINE#", "self", ".", "seg_id_range", "=", "{", "#NEWLINE#", "#INDENT#", "'vlan'", ":", "seg_id_range", ".", ":", "seg_id_range", ".", "get", "(", "'gre'", ",", ",", "#NEWLINE#", "'vxlan'", ":", "seg_id_range", ".", "get", "#NEWLINE#", "seg_id_help", "=", "(", "_", "(", "'For VLAN networks, the VLAN VID on the physical network that realizes the virtual network. Valid VLAN VIDs are %(vlan_min)s through %(vlan_max)s. For GRE or VXLAN networks, the tunnel ID. Valid tunnel IDs for GRE networks are %(gre_min)s through %(gre_max)s. For VXLAN networks, %(vxlan_min)s through %(vxlan_max)s.'", "self", ".", "seg_id_range", "[", "'vlan'", "]", "[", "0", "]", ",", "#NEWLINE#", "'vlan_max'", ":", "self", ".", "seg_id_range", "[", "'vlan'", "]", "[", "1", "]", ",", "#NEWLINE#", "'gre_min'", ":", "self", ".", "seg_id_range", "[", "'gre'", "]", "[", "0", "]", ",", "#NEWLINE#", "'gre_max'", ":", "self", ".", "seg_id_range", "#NEWLINE#", "'vxlan_min'", ":", "self", ".", "seg_id_range", "[", "'vxlan_max'", ":", "self", ".", "seg_id_range", "[", "'vxlan'", "}", ")", "#NEWLINE#", "self", ".", "fields", "[", "'segmentation_id'", "]", ".", "help_text", "=", "seg_id_help", "#NEWLINE#", "supported_provider_types", "=", "neutron_settings", ".", "get", "(", "'supported_provider_types'", "(", "supported_provider_types", "==", "[", "'*'", "]", ")", ":", "#NEWLINE#", "#INDENT#", "network_type_choices", "=", "PROVIDER_TYPES", "#NEWLINE#", "#UNINDENT#", "else", ":", "#NEWLINE#", "#INDENT#", "network_type_choices", "=", "[", "net_type", "for", "net_type", "in", "PROVIDER_TYPES", "if", "(", "net_type", "[", "0", "]", "in", "supported_provider_types", "(", "network_type_choices", ")", "==", "0", ")", ":", "#NEWLINE#", "#INDENT#", "self", ".", "_hide_provider_network_type", "(", ")", "#NEWLINE#", "#UNINDENT#", "else", ":", "#NEWLINE#", "#INDENT#", "self", "=", "network_type_choices", "#NEWLINE#", "#UNINDENT#", "#UNINDENT#", "else", ":", "#NEWLINE#", "#INDENT#", "self", ".", "_hide_provider_network_type", "(", ")"]}}
{"position": {"error_location": 67, "repair_targets": [49, 56, 71], "repair_candidates": [7, 20, 124, 135, 142, 145, 155, 167, 180, 193, 206, 212, 218, 67, 264, 266, 271, 34, 51, 252, 261, 278, 299, 4, 17, 45, 107, 118, 49, 56, 71, 23, 36, 26, 62, 88, 122, 126, 237, 159, 233, 2, 12, 79, 94, 103, 133, 165, 178, 191, 204, 210, 216, 224, 286, 297, 307, 235, 243, 276]}}
{"prediction": {"error_location": 0.9606902599334717, "repair_targets": [0.33603960275650024, 0.5922119617462158, 0.0007241566781885922], "repair_candidates": [3.065722921746783e-05, 0.00153464509639889, 0.012252501212060452, 4.691188223659992e-05, 0.00013351136294659227, 8.178367352229543e-06, 0.00017126988677773625, 0.028309455141425133, 0.0073568676598370075, 0.006445250008255243, 0.0014285979559645057, 0.33603960275650024, 7.746439223410562e-06, 0.5922119617462158, 0.004204881377518177, 6.402421422535554e-05, 0.0007241566781885922, 1.5996332876966335e-05, 0.00020303684868849814, 4.712489044322865e-06, 8.425223313679453e-06, 0.00019325801986269653, 0.0016957068582996726, 0.0010579421650618315, 0.00017204748291987926, 1.856614471762441e-05, 0.0002754457527771592, 0.0004945506807416677, 3.3017808164004236e-05, 1.2731320566672366e-05, 7.739807188045233e-06, 0.00023285196220967919, 8.110606358968653e-06, 0.0005338737973943353, 4.096976681466913e-06, 0.0006653790478594601, 2.1527500848605996e-06, 0.00012730294838547707, 2.819290784827899e-06, 0.00028908479725942016, 1.0413712061563274e-06, 0.0001871794374892488, 5.3364678933576215e-06, 0.00013333525566849858, 6.4939422372845e-07, 3.003482925123535e-05, 0.00013008691894356161, 3.1126719477470033e-06, 5.302026329445653e-05, 6.815882079536095e-05, 0.00024624436628073454, 2.509580554033164e-05, 0.0019232586491852999, 6.434262468246743e-05, 2.313923505425919e-05, 3.1730545742902905e-05, 5.7401080084673595e-06, 1.33507219288731e-05, 1.7598602426005527e-05, 8.421624443144538e-06], "target_probs": 0.9289757013320923}}


{"result": {"time": "2021-02-11 10:38:42.738977", "n_pass": [397, 19, 19], "n_token": 309, "loss": [0.07508022338151932, 0.08149448782205582], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def __init__(", "self", ",", "request", ",", "*", "args", ",", "**kwargs", ")", ":", "self", ")", ".", "__init__", "(", "request", ",", "*", "args", ",", "**", "kwargs", ")", "#NEWLINE#", "tenant_choices", "=", "[", "(", ")", "]", "#NEWLINE#", "(", "tenants", ",", "has_more", ")", "=", "api", ".", "keystone", ".", "tenant_list", "(", "request", ")", "#NEWLINE#", "for", "tenant", "in", "tenants", ":", "#NEWLINE#", "#INDENT#", "if", "tenant", ".", "enabled", ":", "#NEWLINE#", "#INDENT#", "tenant_choices", ".", "append", "(", "(", "net_type", ".", "id", ",", "tenant", ".", "name", ")", ")", "#NEWLINE#", "#UNINDENT#", "#UNINDENT#", "self", ".", "fields", "[", "'tenant_id'", "]", ".", "choices", "=", "tenant_choices", "#NEWLINE#", "if", ":", "#NEWLINE#", "#INDENT#", "self", ".", "fields", "[", "'net_profile_id'", "]", ".", "choices", "=", "self", ".", "get_network_profile_choices", "(", "request", ")", "#NEWLINE#", "#UNINDENT#", "if", "api", ".", "neutron", ".", "is_extension_supported", "(", "request", ",", "#NEWLINE#", "#INDENT#", "neutron_settings", "#NEWLINE#", "seg_id_range", "=", "neutron_settings", ".", "get", "#NEWLINE#", "self", ".", "seg_id_range", "=", "{", "#NEWLINE#", "#INDENT#", "'vlan'", ":", "seg_id_range", ".", ":", "seg_id_range", ".", "get", "(", "'gre'", ",", ",", "#NEWLINE#", "'vxlan'", ":", "seg_id_range", ".", "get", "#NEWLINE#", "seg_id_help", "=", "(", "_", "(", "'For VLAN networks, the VLAN VID on the physical network that realizes the virtual network. Valid VLAN VIDs are %(vlan_min)s through %(vlan_max)s. For GRE or VXLAN networks, the tunnel ID. Valid tunnel IDs for GRE networks are %(gre_min)s through %(gre_max)s. For VXLAN networks, %(vxlan_min)s through %(vxlan_max)s.'", "self", ".", "seg_id_range", "[", "'vlan'", "]", "[", "0", "]", ",", "#NEWLINE#", "'vlan_max'", ":", "self", ".", "seg_id_range", "[", "'vlan'", "]", "[", "1", "]", ",", "#NEWLINE#", "'gre_min'", ":", "self", ".", "seg_id_range", "[", "'gre'", "]", "[", "0", "]", ",", "#NEWLINE#", "'gre_max'", ":", "self", ".", "seg_id_range", "#NEWLINE#", "'vxlan_min'", ":", "self", ".", "seg_id_range", "[", "'vxlan_max'", ":", "self", ".", "seg_id_range", "[", "'vxlan'", "}", ")", "#NEWLINE#", "self", ".", "fields", "[", "'segmentation_id'", "]", ".", "help_text", "=", "seg_id_help", "#NEWLINE#", "supported_provider_types", "=", "neutron_settings", ".", "get", "(", "'supported_provider_types'", "(", "supported_provider_types", "==", "[", "'*'", "]", ")", ":", "#NEWLINE#", "#INDENT#", "network_type_choices", "=", "PROVIDER_TYPES", "#NEWLINE#", "#UNINDENT#", "else", ":", "#NEWLINE#", "#INDENT#", "network_type_choices", "=", "[", "net_type", "for", "net_type", "in", "PROVIDER_TYPES", "if", "(", "net_type", "[", "0", "]", "in", "supported_provider_types", "(", "network_type_choices", ")", "==", "0", ")", ":", "#NEWLINE#", "#INDENT#", "self", ".", "_hide_provider_network_type", "(", ")", "#NEWLINE#", "#UNINDENT#", "else", ":", "#NEWLINE#", "#INDENT#", "self", "=", "network_type_choices", "#NEWLINE#", "#UNINDENT#", "#UNINDENT#", "else", ":", "#NEWLINE#", "#INDENT#", "self", ".", "_hide_provider_network_type", "(", ")"]}}
{"position": {"error_location": 67, "repair_targets": [49, 56, 71], "repair_candidates": [7, 20, 124, 132, 139, 142, 152, 164, 177, 190, 203, 209, 215, 67, 261, 263, 268, 34, 51, 249, 258, 275, 296, 4, 17, 45, 107, 118, 49, 56, 71, 23, 36, 26, 62, 88, 122, 126, 234, 156, 230, 2, 12, 79, 94, 103, 130, 162, 175, 188, 201, 207, 213, 221, 283, 294, 304, 232, 240, 273]}}
{"prediction": {"error_location": 0.9276690483093262, "repair_targets": [0.3981292247772217, 0.5222877264022827, 0.0013208497548475862], "repair_candidates": [3.1920255423756316e-05, 0.001839284785091877, 0.01251343172043562, 5.1208899094490334e-05, 0.00016233215865213424, 8.163908205460757e-06, 0.00017940520774573088, 0.029016945511102676, 0.007683075964450836, 0.006694657262414694, 0.0015025754692032933, 0.3981292247772217, 8.841520866553765e-06, 0.5222877264022827, 0.004303198307752609, 9.053119720192626e-05, 0.0013208497548475862, 2.6080497264047153e-05, 0.00027227943064644933, 9.485901500738692e-06, 1.3922883226769045e-05, 0.00031934675644151866, 0.0030964077450335026, 0.00020008922729175538, 0.00011619504948612303, 0.004040728788822889, 8.729929686523974e-05, 0.00044033152516931295, 5.467746814247221e-05, 2.3892374883871526e-05, 8.828089448797982e-06, 0.0002065847220364958, 1.1875720701937098e-05, 0.0006217755144461989, 5.408997367339907e-06, 0.0007459161570295691, 2.689284656298696e-06, 0.0001464231900172308, 3.5755178942054044e-06, 0.0003442430461291224, 1.2338983879089938e-06, 0.0002131379587808624, 6.621159172937041e-06, 0.00015339779201894999, 7.224745672829158e-07, 2.9904515031375922e-05, 0.0001381166948704049, 3.6867941162199713e-06, 5.386263728723861e-05, 7.922499207779765e-05, 0.000263374560745433, 2.3701515601715073e-05, 0.002235818188637495, 6.671037408523262e-05, 2.505710108380299e-05, 3.204662789357826e-05, 7.1010149440553505e-06, 1.6125139154610224e-05, 1.8900966097135097e-05, 9.81848279479891e-06], "target_probs": 0.921737790107727}}


{"result": {"time": "2021-02-11 10:38:42.985444", "n_pass": [400, 20, 20], "n_token": 306, "loss": [0.07578739523887634, 0.0820373073220253], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def __init__(", "self", ",", "request", ",", "*", "args", ",", "**kwargs", ")", ":", "self", ")", ".", "__init__", "(", "request", ",", "*", "args", ",", "**", "kwargs", ")", "#NEWLINE#", "tenant_choices", "=", "[", "(", ")", "]", "#NEWLINE#", "(", "tenants", ",", "has_more", ")", "=", "api", ".", "keystone", ".", "tenant_list", "(", "request", ")", "#NEWLINE#", "for", "tenant", "in", "tenants", ":", "#NEWLINE#", "#INDENT#", "if", "tenant", ".", "enabled", ":", "#NEWLINE#", "#INDENT#", "tenant_choices", ".", "append", "(", "(", "net_type", ".", "id", ",", "tenant", ".", "name", ")", ")", "#NEWLINE#", "#UNINDENT#", "#UNINDENT#", "self", ".", "fields", "[", "'tenant_id'", "]", ".", "choices", "=", "tenant_choices", "#NEWLINE#", "if", ":", "#NEWLINE#", "#INDENT#", "self", ".", "fields", "[", "'net_profile_id'", "]", ".", "choices", "=", "self", ".", "get_network_profile_choices", "(", "request", ")", "#NEWLINE#", "#UNINDENT#", "if", "api", ".", "neutron", ".", "is_extension_supported", "(", "request", ",", "#NEWLINE#", "#INDENT#", "neutron_settings", "#NEWLINE#", "seg_id_range", "=", "neutron_settings", ".", "get", "#NEWLINE#", "self", ".", "seg_id_range", "=", "{", ":", "seg_id_range", ".", ":", "seg_id_range", ".", "get", "(", "'gre'", ",", ",", "#NEWLINE#", "'vxlan'", ":", "seg_id_range", ".", "get", "#NEWLINE#", "seg_id_help", "=", "(", "_", "(", "'For VLAN networks, the VLAN VID on the physical network that realizes the virtual network. Valid VLAN VIDs are %(vlan_min)s through %(vlan_max)s. For GRE or VXLAN networks, the tunnel ID. Valid tunnel IDs for GRE networks are %(gre_min)s through %(gre_max)s. For VXLAN networks, %(vxlan_min)s through %(vxlan_max)s.'", "self", ".", "seg_id_range", "[", "'vlan'", "]", "[", "0", "]", ",", "#NEWLINE#", "'vlan_max'", ":", "self", ".", "seg_id_range", "[", "'vlan'", "]", "[", "1", "]", ",", "#NEWLINE#", "'gre_min'", ":", "self", ".", "seg_id_range", "[", "'gre'", "]", "[", "0", "]", ",", "#NEWLINE#", "'gre_max'", ":", "self", ".", "seg_id_range", "#NEWLINE#", "'vxlan_min'", ":", "self", ".", "seg_id_range", "[", "'vxlan_max'", ":", "self", ".", "seg_id_range", "[", "'vxlan'", "}", ")", "#NEWLINE#", "self", ".", "fields", "[", "'segmentation_id'", "]", ".", "help_text", "=", "seg_id_help", "#NEWLINE#", "supported_provider_types", "=", "neutron_settings", ".", "get", "(", "'supported_provider_types'", "(", "supported_provider_types", "==", "[", "'*'", "]", ")", ":", "#NEWLINE#", "#INDENT#", "network_type_choices", "=", "PROVIDER_TYPES", "#NEWLINE#", "#UNINDENT#", "else", ":", "#NEWLINE#", "#INDENT#", "network_type_choices", "=", "[", "net_type", "for", "net_type", "in", "PROVIDER_TYPES", "if", "(", "net_type", "[", "0", "]", "in", "supported_provider_types", "(", "network_type_choices", ")", "==", "0", ")", ":", "#NEWLINE#", "#INDENT#", "self", ".", "_hide_provider_network_type", "(", ")", "#NEWLINE#", "#UNINDENT#", "else", ":", "#NEWLINE#", "#INDENT#", "self", "=", "network_type_choices", "#NEWLINE#", "#UNINDENT#", "#UNINDENT#", "else", ":", "#NEWLINE#", "#INDENT#", "self", ".", "_hide_provider_network_type", "(", ")"]}}
{"position": {"error_location": 67, "repair_targets": [49, 56, 71], "repair_candidates": [7, 20, 124, 132, 136, 139, 149, 161, 174, 187, 200, 206, 212, 67, 258, 260, 265, 34, 51, 246, 255, 272, 293, 4, 17, 45, 107, 118, 49, 56, 71, 23, 36, 26, 62, 88, 122, 126, 231, 153, 227, 2, 12, 79, 94, 103, 130, 159, 172, 185, 198, 204, 210, 218, 280, 291, 301, 229, 237, 270]}}
{"prediction": {"error_location": 0.9270132780075073, "repair_targets": [0.3983241021633148, 0.5216508507728577, 0.0012626899406313896], "repair_candidates": [3.135935548925772e-05, 0.0018031096551567316, 0.012292247265577316, 5.028607847634703e-05, 0.00015902040468063205, 8.022097972570919e-06, 0.00017627152556087822, 0.02858121693134308, 0.007552972063422203, 0.006589289754629135, 0.0014768276596441865, 0.3983241021633148, 8.702209925104398e-06, 0.5216508507728577, 0.004247698467224836, 8.804028038866818e-05, 0.0012626899406313896, 2.526137359382119e-05, 0.00026695634005591273, 9.210125426761806e-06, 1.2876102118752897e-05, 0.00033270259154960513, 0.003500104183331132, 0.00020654447143897414, 0.0001058015986927785, 0.0053960359655320644, 6.579897308256477e-05, 0.00041541169048286974, 5.512258212547749e-05, 1.471304949518526e-05, 7.397939498332562e-06, 0.0001958386565092951, 1.0749750799732283e-05, 0.0004994614282622933, 4.53718212156673e-06, 0.0006577172316610813, 2.5663232463557506e-06, 0.000144755351357162, 3.4506922474975e-06, 0.00034206471173092723, 1.1820357030956075e-06, 0.0002057981037069112, 6.2450781115330756e-06, 0.00014832059969194233, 6.91201478275616e-07, 2.834105907822959e-05, 0.0001421188935637474, 3.5613461477623787e-06, 4.9392954679206014e-05, 8.236765279434621e-05, 0.00027293787570670247, 2.264717113575898e-05, 0.0022856055293232203, 6.50384827167727e-05, 2.4693850718904287e-05, 3.163386645610444e-05, 7.0679270720575005e-06, 1.6264350051642396e-05, 1.8540242308517918e-05, 9.710988706501666e-06], "target_probs": 0.921237587928772}}


{"result": {"time": "2021-02-11 10:38:43.466611", "n_pass": [404, 22, 21], "n_token": 303, "loss": [0.08979633450508118, 0.08812211453914642], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def __init__(", "self", ",", "request", ",", "*", "args", ",", "**kwargs", ")", ":", "self", ")", ".", "__init__", "(", "request", ",", "*", "args", ",", "**", "kwargs", ")", "#NEWLINE#", "tenant_choices", "=", "[", "(", ")", "]", "#NEWLINE#", "(", "tenants", ",", "has_more", ")", "=", "api", ".", "keystone", ".", "tenant_list", "(", "request", ")", "#NEWLINE#", "for", "tenant", "in", "tenants", ":", "#NEWLINE#", "#INDENT#", "if", "tenant", ".", "enabled", ":", "#NEWLINE#", "#INDENT#", "tenant_choices", ".", "append", "(", "(", "net_type", ".", "id", ",", "tenant", ".", "name", ")", ")", "#NEWLINE#", "#UNINDENT#", "#UNINDENT#", "self", ".", "fields", "[", "'tenant_id'", "]", ".", "choices", "=", "tenant_choices", "#NEWLINE#", "if", ":", "#NEWLINE#", "#INDENT#", "self", ".", "fields", "[", "'net_profile_id'", "]", ".", "choices", "=", "self", ".", "get_network_profile_choices", "(", "request", ")", "#NEWLINE#", "#UNINDENT#", "if", "api", ".", "neutron", ".", "is_extension_supported", "(", "request", ",", "#NEWLINE#", "#INDENT#", "neutron_settings", "#NEWLINE#", "seg_id_range", "=", "neutron_settings", ".", "get", "#NEWLINE#", "self", ".", "seg_id_range", "=", "{", ":", "seg_id_range", ".", ":", "seg_id_range", ".", "get", "(", "'gre'", "'vxlan'", ":", "seg_id_range", ".", "get", "#NEWLINE#", "seg_id_help", "=", "(", "_", "(", "'For VLAN networks, the VLAN VID on the physical network that realizes the virtual network. Valid VLAN VIDs are %(vlan_min)s through %(vlan_max)s. For GRE or VXLAN networks, the tunnel ID. Valid tunnel IDs for GRE networks are %(gre_min)s through %(gre_max)s. For VXLAN networks, %(vxlan_min)s through %(vxlan_max)s.'", "self", ".", "seg_id_range", "[", "'vlan'", "]", "[", "0", "]", ",", "#NEWLINE#", "'vlan_max'", ":", "self", ".", "seg_id_range", "[", "'vlan'", "]", "[", "1", "]", ",", "#NEWLINE#", "'gre_min'", ":", "self", ".", "seg_id_range", "[", "'gre'", "]", "[", "0", "]", ",", "#NEWLINE#", "'gre_max'", ":", "self", ".", "seg_id_range", "#NEWLINE#", "'vxlan_min'", ":", "self", ".", "seg_id_range", "[", "'vxlan_max'", ":", "self", ".", "seg_id_range", "[", "'vxlan'", "}", ")", "#NEWLINE#", "self", ".", "fields", "[", "'segmentation_id'", "]", ".", "help_text", "=", "seg_id_help", "#NEWLINE#", "supported_provider_types", "=", "neutron_settings", ".", "get", "(", "'supported_provider_types'", "(", "supported_provider_types", "==", "[", "'*'", "]", ")", ":", "#NEWLINE#", "#INDENT#", "network_type_choices", "=", "PROVIDER_TYPES", "#NEWLINE#", "#UNINDENT#", "else", ":", "#NEWLINE#", "#INDENT#", "network_type_choices", "=", "[", "net_type", "for", "net_type", "in", "PROVIDER_TYPES", "if", "(", "net_type", "[", "0", "]", "in", "supported_provider_types", "(", "network_type_choices", ")", "==", "0", ")", ":", "#NEWLINE#", "#INDENT#", "self", ".", "_hide_provider_network_type", "(", ")", "#NEWLINE#", "#UNINDENT#", "else", ":", "#NEWLINE#", "#INDENT#", "self", "=", "network_type_choices", "#NEWLINE#", "#UNINDENT#", "#UNINDENT#", "else", ":", "#NEWLINE#", "#INDENT#", "self", ".", "_hide_provider_network_type", "(", ")"]}}
{"position": {"error_location": 67, "repair_targets": [49, 56, 71], "repair_candidates": [7, 20, 124, 132, 136, 139, 146, 158, 171, 184, 197, 203, 209, 67, 255, 257, 262, 34, 51, 243, 252, 269, 290, 4, 17, 45, 107, 118, 49, 56, 71, 23, 36, 26, 62, 88, 122, 126, 228, 150, 224, 2, 12, 79, 94, 103, 130, 156, 169, 182, 195, 201, 207, 215, 277, 288, 298, 226, 234, 267]}}
{"prediction": {"error_location": 0.9141175150871277, "repair_targets": [0.4046179950237274, 0.5096591114997864, 0.0013719819253310561], "repair_candidates": [3.188769187545404e-05, 0.0018673382000997663, 0.012395696714520454, 5.145226896274835e-05, 0.00016509630950167775, 8.09469747764524e-06, 0.00017999036936089396, 0.02895435504615307, 0.007715415675193071, 0.006735967937856913, 0.0014976119855418801, 0.4046179950237274, 9.01534986041952e-06, 0.5096591114997864, 0.004469790495932102, 9.662548109190539e-05, 0.0013719819253310561, 2.7898608095711097e-05, 0.0002906520967371762, 1.0771321285574231e-05, 1.3590927665063646e-05, 0.00040917901787906885, 0.005165943875908852, 0.0002363880630582571, 0.00010457445023348555, 0.008438605815172195, 8.699391037225723e-05, 0.0003167886461596936, 4.674825322581455e-05, 1.3674720321432687e-05, 1.0822587682923768e-05, 0.00013975297042634338, 9.800236512091942e-06, 0.00035930570447817445, 4.611256372299977e-06, 0.0006318023661151528, 2.696913725230843e-06, 0.00014656828716397285, 3.674528443298186e-06, 0.00034864232293330133, 1.2161139011368505e-06, 0.00020376741304062307, 6.515235327242408e-06, 0.00014864685363136232, 7.22136746844626e-07, 2.6801264539244585e-05, 0.00013827437942381948, 3.6231392641639104e-06, 4.6501558244926855e-05, 8.494395297020674e-05, 0.0002719785552471876, 2.202819086960517e-05, 0.0022298868279904127, 6.119075987953693e-05, 2.4267088519991376e-05, 3.0018371035112068e-05, 7.346145139308646e-06, 1.696390609140508e-05, 1.839182004914619e-05, 9.988021702156402e-06], "target_probs": 0.9156490564346313}}


{"result": {"time": "2021-02-11 10:38:43.708995", "n_pass": [407, 23, 22], "n_token": 299, "loss": [0.6956979632377625, 0.3297499716281891], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def __init__(", "self", ",", "request", ",", "*", "args", ",", "**kwargs", ")", ":", "self", ")", ".", "__init__", "(", "request", ",", "*", "args", ",", "**", "kwargs", ")", "#NEWLINE#", "tenant_choices", "=", "[", "(", ")", "]", "#NEWLINE#", "(", "tenants", ",", "has_more", ")", "=", "api", ".", "keystone", ".", "tenant_list", "(", "request", ")", "#NEWLINE#", "for", "tenant", "in", "tenants", ":", "#NEWLINE#", "#INDENT#", "if", "tenant", ".", "enabled", ":", "#NEWLINE#", "#INDENT#", "tenant_choices", ".", "append", "(", "(", "net_type", ".", "id", ",", "tenant", ".", "name", ")", ")", "#NEWLINE#", "#UNINDENT#", "#UNINDENT#", "self", ".", "fields", "[", "'tenant_id'", "]", ".", "choices", "=", "tenant_choices", "#NEWLINE#", "if", ":", "#NEWLINE#", "#INDENT#", "self", ".", "fields", "[", "'net_profile_id'", "]", ".", "choices", "=", "self", ".", "get_network_profile_choices", "(", "request", ")", "#NEWLINE#", "#UNINDENT#", "if", "api", ".", "neutron", ".", "is_extension_supported", "(", "request", ",", "#NEWLINE#", "#INDENT#", "neutron_settings", "#NEWLINE#", "seg_id_range", "=", "neutron_settings", ".", "get", "#NEWLINE#", "self", ".", "seg_id_range", "=", "{", ":", "seg_id_range", ".", ":", "seg_id_range", ".", "get", "(", "'gre'", "'vxlan'", ":", "seg_id_range", ".", "get", "#NEWLINE#", "seg_id_help", "'For VLAN networks, the VLAN VID on the physical network that realizes the virtual network. Valid VLAN VIDs are %(vlan_min)s through %(vlan_max)s. For GRE or VXLAN networks, the tunnel ID. Valid tunnel IDs for GRE networks are %(gre_min)s through %(gre_max)s. For VXLAN networks, %(vxlan_min)s through %(vxlan_max)s.'", "self", ".", "seg_id_range", "[", "'vlan'", "]", "[", "0", "]", ",", "#NEWLINE#", "'vlan_max'", ":", "self", ".", "seg_id_range", "[", "'vlan'", "]", "[", "1", "]", ",", "#NEWLINE#", "'gre_min'", ":", "self", ".", "seg_id_range", "[", "'gre'", "]", "[", "0", "]", ",", "#NEWLINE#", "'gre_max'", ":", "self", ".", "seg_id_range", "#NEWLINE#", "'vxlan_min'", ":", "self", ".", "seg_id_range", "[", "'vxlan_max'", ":", "self", ".", "seg_id_range", "[", "'vxlan'", "}", ")", "#NEWLINE#", "self", ".", "fields", "[", "'segmentation_id'", "]", ".", "help_text", "=", "seg_id_help", "#NEWLINE#", "supported_provider_types", "=", "neutron_settings", ".", "get", "(", "'supported_provider_types'", "(", "supported_provider_types", "==", "[", "'*'", "]", ")", ":", "#NEWLINE#", "#INDENT#", "network_type_choices", "=", "PROVIDER_TYPES", "#NEWLINE#", "#UNINDENT#", "else", ":", "#NEWLINE#", "#INDENT#", "network_type_choices", "=", "[", "net_type", "for", "net_type", "in", "PROVIDER_TYPES", "if", "(", "net_type", "[", "0", "]", "in", "supported_provider_types", "(", "network_type_choices", ")", "==", "0", ")", ":", "#NEWLINE#", "#INDENT#", "self", ".", "_hide_provider_network_type", "(", ")", "#NEWLINE#", "#UNINDENT#", "else", ":", "#NEWLINE#", "#INDENT#", "self", "=", "network_type_choices", "#NEWLINE#", "#UNINDENT#", "#UNINDENT#", "else", ":", "#NEWLINE#", "#INDENT#", "self", ".", "_hide_provider_network_type", "(", ")"]}}
{"position": {"error_location": 67, "repair_targets": [49, 56, 71], "repair_candidates": [7, 20, 124, 132, 136, 139, 146, 154, 167, 180, 193, 199, 205, 67, 251, 253, 258, 34, 51, 239, 248, 265, 286, 4, 17, 45, 107, 118, 49, 56, 71, 23, 36, 26, 62, 88, 122, 126, 224, 150, 220, 2, 12, 79, 94, 103, 130, 152, 165, 178, 191, 197, 203, 211, 273, 284, 294, 222, 230, 263]}}
{"prediction": {"error_location": 0.49872615933418274, "repair_targets": [0.3890637755393982, 0.32564759254455566, 0.00439212704077363], "repair_candidates": [4.1566891013644636e-05, 0.0027613388374447823, 0.015941793099045753, 6.898861465742812e-05, 0.00025176070630550385, 1.032144882628927e-05, 0.0002343313244637102, 0.036177586764097214, 0.010143356397747993, 0.008628347888588905, 0.0018326998688280582, 0.3890637755393982, 1.2591036465892103e-05, 0.32564759254455566, 0.0065643154084682465, 0.00048101547872647643, 0.00439212704077363, 0.00018112832913175225, 0.0005138470442034304, 0.00013945350656285882, 9.248404239770025e-05, 0.001150015858002007, 0.01760251261293888, 0.0009407700854353607, 0.0004999092197977006, 0.16641272604465485, 0.0010368875227868557, 0.0007207866292446852, 0.00012072101526428014, 2.9913679099990986e-05, 4.319445724831894e-05, 0.00018743591499514878, 2.550518183852546e-05, 0.001192279625684023, 1.740181505738292e-05, 0.0012628160184249282, 7.134406587283593e-06, 0.0002799226494971663, 8.398980753554497e-06, 0.0006115277064964175, 2.6830064143723575e-06, 0.00034854785189963877, 1.7017777281580493e-05, 0.00025793537497520447, 1.2978379118067096e-06, 4.8681042244425043e-05, 0.00020095806394238025, 6.814752850914374e-06, 6.91481473040767e-05, 0.0001355878630420193, 0.0003932463296223432, 3.1030816899146885e-05, 0.002926449989899993, 7.715637912042439e-05, 3.529825698933564e-05, 3.316591028124094e-05, 1.4007830941409338e-05, 2.923550346167758e-05, 2.413584661553614e-05, 1.7280592146562412e-05], "target_probs": 0.7191035151481628}}


{"result": {"time": "2021-02-11 10:38:43.948430", "n_pass": [409, 24, 23], "n_token": 295, "loss": [0.5354387760162354, 0.2788182199001312], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def __init__(", "self", ",", "request", ",", "*", "args", ",", "**kwargs", ")", ":", "self", ")", ".", "__init__", "(", "request", ",", "*", "args", ",", "**", "kwargs", ")", "#NEWLINE#", "tenant_choices", "=", "[", "(", ")", "]", "#NEWLINE#", "(", "tenants", ",", "has_more", ")", "=", "api", ".", "keystone", ".", "tenant_list", "(", "request", ")", "#NEWLINE#", "for", "tenant", "in", "tenants", ":", "#NEWLINE#", "#INDENT#", "if", "tenant", ".", "enabled", ":", "#NEWLINE#", "#INDENT#", "tenant_choices", ".", "append", "(", "(", "net_type", ".", "id", ",", "tenant", ".", "name", ")", ")", "#NEWLINE#", "#UNINDENT#", "#UNINDENT#", "self", ".", "fields", "[", "'tenant_id'", "]", ".", "choices", "=", "tenant_choices", "#NEWLINE#", "if", ":", "#NEWLINE#", "#INDENT#", "self", ".", "fields", "[", "'net_profile_id'", "]", ".", "choices", "=", "self", ".", "get_network_profile_choices", "(", "request", ")", "#NEWLINE#", "#UNINDENT#", "if", "api", ".", "neutron", ".", "is_extension_supported", "(", "request", ",", "#NEWLINE#", "#INDENT#", "neutron_settings", "#NEWLINE#", "seg_id_range", "=", "neutron_settings", ".", "get", "#NEWLINE#", "self", ".", "seg_id_range", "=", "{", ":", "seg_id_range", ".", ":", "seg_id_range", ".", "get", "(", "'gre'", "'vxlan'", ":", "seg_id_range", ".", "get", "#NEWLINE#", "seg_id_help", "'For VLAN networks, the VLAN VID on the physical network that realizes the virtual network. Valid VLAN VIDs are %(vlan_min)s through %(vlan_max)s. For GRE or VXLAN networks, the tunnel ID. Valid tunnel IDs for GRE networks are %(gre_min)s through %(gre_max)s. For VXLAN networks, %(vxlan_min)s through %(vxlan_max)s.'", "self", ".", "seg_id_range", "0", "]", ",", "#NEWLINE#", "'vlan_max'", ":", "self", ".", "seg_id_range", "[", "'vlan'", "]", "[", "1", "]", ",", "#NEWLINE#", "'gre_min'", ":", "self", ".", "seg_id_range", "[", "'gre'", "]", "[", "0", "]", ",", "#NEWLINE#", "'gre_max'", ":", "self", ".", "seg_id_range", "#NEWLINE#", "'vxlan_min'", ":", "self", ".", "seg_id_range", "[", "'vxlan_max'", ":", "self", ".", "seg_id_range", "[", "'vxlan'", "}", ")", "#NEWLINE#", "self", ".", "fields", "[", "'segmentation_id'", "]", ".", "help_text", "=", "seg_id_help", "#NEWLINE#", "supported_provider_types", "=", "neutron_settings", ".", "get", "(", "'supported_provider_types'", "(", "supported_provider_types", "==", "[", "'*'", "]", ")", ":", "#NEWLINE#", "#INDENT#", "network_type_choices", "=", "PROVIDER_TYPES", "#NEWLINE#", "#UNINDENT#", "else", ":", "#NEWLINE#", "#INDENT#", "network_type_choices", "=", "[", "net_type", "for", "net_type", "in", "PROVIDER_TYPES", "if", "(", "net_type", "[", "0", "]", "in", "supported_provider_types", "(", "network_type_choices", ")", "==", "0", ")", ":", "#NEWLINE#", "#INDENT#", "self", ".", "_hide_provider_network_type", "(", ")", "#NEWLINE#", "#UNINDENT#", "else", ":", "#NEWLINE#", "#INDENT#", "self", "=", "network_type_choices", "#NEWLINE#", "#UNINDENT#", "#UNINDENT#", "else", ":", "#NEWLINE#", "#INDENT#", "self", ".", "_hide_provider_network_type", "(", ")"]}}
{"position": {"error_location": 67, "repair_targets": [49, 56, 71], "repair_candidates": [7, 20, 124, 132, 136, 139, 146, 154, 163, 176, 189, 195, 201, 67, 247, 249, 254, 34, 51, 235, 244, 261, 282, 4, 17, 45, 107, 118, 49, 56, 71, 23, 36, 26, 62, 88, 122, 126, 220, 150, 216, 2, 12, 79, 94, 103, 130, 152, 161, 174, 187, 193, 199, 207, 269, 280, 290, 218, 226, 259]}}
{"prediction": {"error_location": 0.5854124426841736, "repair_targets": [0.4047389328479767, 0.3478909730911255, 0.004047565162181854], "repair_candidates": [4.300926593714394e-05, 0.002852480160072446, 0.016359973698854446, 7.149289740482345e-05, 0.0002606466878205538, 1.0645317161106504e-05, 0.0002456766087561846, 0.03738228604197502, 0.010529928840696812, 0.009020969271659851, 0.0019076095195487142, 0.4047389328479767, 1.3058846889180131e-05, 0.3478909730911255, 0.006715682335197926, 0.00041731615783646703, 0.004047565162181854, 0.00014742458006367087, 0.0005529990885406733, 9.892372327158228e-05, 7.54574139136821e-05, 0.0010797736467793584, 0.016339154914021492, 0.0008819993818178773, 0.000500054971780628, 0.12556691467761993, 0.0007467393297702074, 0.0007557664648629725, 0.00013612919428851455, 3.007325176440645e-05, 6.595053127966821e-05, 0.00017710540851112455, 5.229355156188831e-05, 0.00227054744027555, 3.266628482379019e-05, 0.001394149730913341, 9.985215911001433e-06, 0.00034318442340008914, 1.0375904821557924e-05, 0.0006993337883614004, 3.382388740647002e-06, 0.0004023215442430228, 2.172734275518451e-05, 0.0002942277060355991, 1.4928832570149098e-06, 6.548443343490362e-05, 0.00025039113825187087, 7.657114110770635e-06, 8.695189171703532e-05, 0.00016405053611379117, 0.0005037328228354454, 3.573014328139834e-05, 0.00340928859077394, 9.76415176410228e-05, 4.2198797018500045e-05, 4.1707444324856624e-05, 1.5918789358693175e-05, 3.3063766750274226e-05, 2.7978843718301505e-05, 1.9673809219966643e-05], "target_probs": 0.7566774487495422}}


{"result": {"time": "2021-02-11 10:38:44.185372", "n_pass": [410, 25, 24], "n_token": 291, "loss": [0.3787708580493927, 0.21917229890823364], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def __init__(", "self", ",", "request", ",", "*", "args", ",", "**kwargs", ")", ":", "self", ")", ".", "__init__", "(", "request", ",", "*", "args", ",", "**", "kwargs", ")", "#NEWLINE#", "tenant_choices", "=", "[", "(", ")", "]", "#NEWLINE#", "(", "tenants", ",", "has_more", ")", "=", "api", ".", "keystone", ".", "tenant_list", "(", "request", ")", "#NEWLINE#", "for", "tenant", "in", "tenants", ":", "#NEWLINE#", "#INDENT#", "if", "tenant", ".", "enabled", ":", "#NEWLINE#", "#INDENT#", "tenant_choices", ".", "append", "(", "(", "net_type", ".", "id", ",", "tenant", ".", "name", ")", ")", "#NEWLINE#", "#UNINDENT#", "#UNINDENT#", "self", ".", "fields", "[", "'tenant_id'", "]", ".", "choices", "=", "tenant_choices", "#NEWLINE#", "if", ":", "#NEWLINE#", "#INDENT#", "self", ".", "fields", "[", "'net_profile_id'", "]", ".", "choices", "=", "self", ".", "get_network_profile_choices", "(", "request", ")", "#NEWLINE#", "#UNINDENT#", "if", "api", ".", "neutron", ".", "is_extension_supported", "(", "request", ",", "#NEWLINE#", "#INDENT#", "neutron_settings", "#NEWLINE#", "seg_id_range", "=", "neutron_settings", ".", "get", "#NEWLINE#", "self", ".", "seg_id_range", "=", "{", ":", "seg_id_range", ".", ":", "seg_id_range", ".", "get", "(", "'gre'", "'vxlan'", ":", "seg_id_range", ".", "get", "#NEWLINE#", "seg_id_help", "'For VLAN networks, the VLAN VID on the physical network that realizes the virtual network. Valid VLAN VIDs are %(vlan_min)s through %(vlan_max)s. For GRE or VXLAN networks, the tunnel ID. Valid tunnel IDs for GRE networks are %(gre_min)s through %(gre_max)s. For VXLAN networks, %(vxlan_min)s through %(vxlan_max)s.'", "self", ".", "seg_id_range", "'vlan_max'", ":", "self", ".", "seg_id_range", "[", "'vlan'", "]", "[", "1", "]", ",", "#NEWLINE#", "'gre_min'", ":", "self", ".", "seg_id_range", "[", "'gre'", "]", "[", "0", "]", ",", "#NEWLINE#", "'gre_max'", ":", "self", ".", "seg_id_range", "#NEWLINE#", "'vxlan_min'", ":", "self", ".", "seg_id_range", "[", "'vxlan_max'", ":", "self", ".", "seg_id_range", "[", "'vxlan'", "}", ")", "#NEWLINE#", "self", ".", "fields", "[", "'segmentation_id'", "]", ".", "help_text", "=", "seg_id_help", "#NEWLINE#", "supported_provider_types", "=", "neutron_settings", ".", "get", "(", "'supported_provider_types'", "(", "supported_provider_types", "==", "[", "'*'", "]", ")", ":", "#NEWLINE#", "#INDENT#", "network_type_choices", "=", "PROVIDER_TYPES", "#NEWLINE#", "#UNINDENT#", "else", ":", "#NEWLINE#", "#INDENT#", "network_type_choices", "=", "[", "net_type", "for", "net_type", "in", "PROVIDER_TYPES", "if", "(", "net_type", "[", "0", "]", "in", "supported_provider_types", "(", "network_type_choices", ")", "==", "0", ")", ":", "#NEWLINE#", "#INDENT#", "self", ".", "_hide_provider_network_type", "(", ")", "#NEWLINE#", "#UNINDENT#", "else", ":", "#NEWLINE#", "#INDENT#", "self", "=", "network_type_choices", "#NEWLINE#", "#UNINDENT#", "#UNINDENT#", "else", ":", "#NEWLINE#", "#INDENT#", "self", ".", "_hide_provider_network_type", "(", ")"]}}
{"position": {"error_location": 67, "repair_targets": [49, 56, 71], "repair_candidates": [7, 20, 124, 132, 136, 139, 146, 154, 159, 172, 185, 191, 197, 67, 243, 245, 250, 34, 51, 231, 240, 257, 278, 4, 17, 45, 107, 118, 49, 56, 71, 23, 36, 26, 62, 88, 122, 126, 216, 150, 212, 2, 12, 79, 94, 103, 130, 152, 157, 170, 183, 189, 195, 203, 265, 276, 286, 214, 222, 255]}}
{"prediction": {"error_location": 0.6847026348114014, "repair_targets": [0.4161524474620819, 0.3835012912750244, 0.003529535373672843], "repair_candidates": [4.249296398484148e-05, 0.002761346520856023, 0.016038142144680023, 7.023083890089765e-05, 0.00025014689890667796, 1.0466805179021321e-05, 0.00024327455321326852, 0.03668078035116196, 0.010308198630809784, 0.008906490169465542, 0.001920259092003107, 0.4161524474620819, 1.272770077775931e-05, 0.3835012912750244, 0.0066119106486439705, 0.0003109686658717692, 0.003529535373672843, 0.0001033867520163767, 0.0005409953300841153, 5.946640158072114e-05, 5.4087235184852034e-05, 0.0009374218643642962, 0.014517492614686489, 0.0007334683323279023, 0.00037967105163261294, 0.0823516696691513, 0.0005007241270504892, 0.0006309188902378082, 0.00014225294580683112, 3.205592292943038e-05, 4.4966214773012325e-05, 6.458242569351569e-05, 7.61876526667038e-06, 0.0017598062986508012, 1.2865282769780606e-05, 0.002812108723446727, 1.4169908354233485e-05, 0.00034080748446285725, 1.179516675620107e-05, 0.0007067674887366593, 3.594874215195887e-06, 0.00039670648402534425, 2.2246096705202945e-05, 0.0002884389541577548, 1.5713052334831445e-06, 6.692277383990586e-05, 0.00026836871984414756, 7.755780643492471e-06, 8.843600517138839e-05, 0.00017550672055222094, 0.000553168065380305, 3.766592999454588e-05, 0.0036788261495530605, 0.00010404648492112756, 4.510214785113931e-05, 4.725969847640954e-05, 1.6863938071765006e-05, 3.619168637669645e-05, 3.0911694921087474e-05, 2.062456769635901e-05], "target_probs": 0.8031833171844482}}


{"result": {"time": "2021-02-11 10:38:44.422075", "n_pass": [413, 26, 25], "n_token": 287, "loss": [0.5770077109336853, 0.30285221338272095], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def __init__(", "self", ",", "request", ",", "*", "args", ",", "**kwargs", ")", ":", "self", ")", ".", "__init__", "(", "request", ",", "*", "args", ",", "**", "kwargs", ")", "#NEWLINE#", "tenant_choices", "=", "[", "(", ")", "]", "#NEWLINE#", "(", "tenants", ",", "has_more", ")", "=", "api", ".", "keystone", ".", "tenant_list", "(", "request", ")", "#NEWLINE#", "for", "tenant", "in", "tenants", ":", "#NEWLINE#", "#INDENT#", "if", "tenant", ".", "enabled", ":", "#NEWLINE#", "#INDENT#", "tenant_choices", ".", "append", "(", "(", "net_type", ".", "id", ",", "tenant", ".", "name", ")", ")", "#NEWLINE#", "#UNINDENT#", "#UNINDENT#", "self", ".", "fields", "[", "'tenant_id'", "]", ".", "choices", "=", "tenant_choices", "#NEWLINE#", "if", ":", "#NEWLINE#", "#INDENT#", "self", ".", "fields", "[", "'net_profile_id'", "]", ".", "choices", "=", "self", ".", "get_network_profile_choices", "(", "request", ")", "#NEWLINE#", "#UNINDENT#", "if", "api", ".", "neutron", ".", "is_extension_supported", "(", "request", ",", "#NEWLINE#", "#INDENT#", "neutron_settings", "#NEWLINE#", "seg_id_range", "=", "neutron_settings", ".", "get", "#NEWLINE#", "self", ".", "seg_id_range", "=", "{", ":", "seg_id_range", ".", ":", "seg_id_range", ".", "get", "(", "'gre'", "'vxlan'", ":", "seg_id_range", ".", "get", "#NEWLINE#", "seg_id_help", "'For VLAN networks, the VLAN VID on the physical network that realizes the virtual network. Valid VLAN VIDs are %(vlan_min)s through %(vlan_max)s. For GRE or VXLAN networks, the tunnel ID. Valid tunnel IDs for GRE networks are %(gre_min)s through %(gre_max)s. For VXLAN networks, %(vxlan_min)s through %(vxlan_max)s.'", "self", ".", "seg_id_range", "'vlan_max'", ":", "self", ".", "seg_id_range", "[", "'vlan'", "]", "#NEWLINE#", "'gre_min'", ":", "self", ".", "seg_id_range", "[", "'gre'", "]", "[", "0", "]", ",", "#NEWLINE#", "'gre_max'", ":", "self", ".", "seg_id_range", "#NEWLINE#", "'vxlan_min'", ":", "self", ".", "seg_id_range", "[", "'vxlan_max'", ":", "self", ".", "seg_id_range", "[", "'vxlan'", "}", ")", "#NEWLINE#", "self", ".", "fields", "[", "'segmentation_id'", "]", ".", "help_text", "=", "seg_id_help", "#NEWLINE#", "supported_provider_types", "=", "neutron_settings", ".", "get", "(", "'supported_provider_types'", "(", "supported_provider_types", "==", "[", "'*'", "]", ")", ":", "#NEWLINE#", "#INDENT#", "network_type_choices", "=", "PROVIDER_TYPES", "#NEWLINE#", "#UNINDENT#", "else", ":", "#NEWLINE#", "#INDENT#", "network_type_choices", "=", "[", "net_type", "for", "net_type", "in", "PROVIDER_TYPES", "if", "(", "net_type", "[", "0", "]", "in", "supported_provider_types", "(", "network_type_choices", ")", "==", "0", ")", ":", "#NEWLINE#", "#INDENT#", "self", ".", "_hide_provider_network_type", "(", ")", "#NEWLINE#", "#UNINDENT#", "else", ":", "#NEWLINE#", "#INDENT#", "self", "=", "network_type_choices", "#NEWLINE#", "#UNINDENT#", "#UNINDENT#", "else", ":", "#NEWLINE#", "#INDENT#", "self", ".", "_hide_provider_network_type", "(", ")"]}}
{"position": {"error_location": 67, "repair_targets": [49, 56, 71], "repair_candidates": [7, 20, 124, 132, 136, 139, 146, 154, 159, 168, 181, 187, 193, 67, 239, 241, 246, 34, 51, 227, 236, 253, 274, 4, 17, 45, 107, 118, 49, 56, 71, 23, 36, 26, 62, 88, 122, 126, 212, 150, 208, 2, 12, 79, 94, 103, 130, 152, 157, 166, 179, 185, 191, 199, 261, 272, 282, 210, 218, 251]}}
{"prediction": {"error_location": 0.5615761876106262, "repair_targets": [0.39310914278030396, 0.3417168855667114, 0.003882203483954072], "repair_candidates": [4.0807855839375407e-05, 0.0026729977689683437, 0.015354761853814125, 6.743380072293803e-05, 0.00024120935995597392, 1.0014319741458166e-05, 0.00023057036742102355, 0.035437457263469696, 0.00992886908352375, 0.008535710163414478, 0.0017952264752238989, 0.39310914278030396, 1.226155654876493e-05, 0.3417168855667114, 0.006536057684570551, 0.00037632830208167434, 0.003882203483954072, 0.0001407542877132073, 0.000519449939019978, 9.574207797413692e-05, 7.426324737025425e-05, 0.0010877980384975672, 0.01719856634736061, 0.0008973731310106814, 0.0003918404399883002, 0.15064366161823273, 0.0008361024665646255, 0.0007103316602297127, 0.0001658241671975702, 4.2465275328140706e-05, 3.49199581251014e-05, 5.927426173002459e-05, 6.728453627147246e-06, 0.0013344553299248219, 7.920777534309309e-06, 0.001019224408082664, 8.394059477723204e-06, 0.00017259914602618665, 1.0499873496883083e-05, 0.0005481662228703499, 3.087866616624524e-06, 0.0002995427348650992, 1.8308364815311506e-05, 0.00022130836441647261, 1.3462798733598902e-06, 5.1583705499069765e-05, 0.00017143416334874928, 5.909542323934147e-06, 6.383754225680605e-05, 0.00011665990314213559, 0.00034301273990422487, 2.9267459467519075e-05, 0.002509844722226262, 7.019886834314093e-05, 3.184131855960004e-05, 3.160898995702155e-05, 1.2730839443975128e-05, 2.6481600798433647e-05, 2.182213393098209e-05, 1.5907524357317016e-05], "target_probs": 0.7387082576751709}}


{"result": {"time": "2021-02-11 10:38:44.656094", "n_pass": [416, 27, 26], "n_token": 283, "loss": [0.47627222537994385, 0.2994290292263031], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def __init__(", "self", ",", "request", ",", "*", "args", ",", "**kwargs", ")", ":", "self", ")", ".", "__init__", "(", "request", ",", "*", "args", ",", "**", "kwargs", ")", "#NEWLINE#", "tenant_choices", "=", "[", "(", ")", "]", "#NEWLINE#", "(", "tenants", ",", "has_more", ")", "=", "api", ".", "keystone", ".", "tenant_list", "(", "request", ")", "#NEWLINE#", "for", "tenant", "in", "tenants", ":", "#NEWLINE#", "#INDENT#", "if", "tenant", ".", "enabled", ":", "#NEWLINE#", "#INDENT#", "tenant_choices", ".", "append", "(", "(", "net_type", ".", "id", ",", "tenant", ".", "name", ")", ")", "#NEWLINE#", "#UNINDENT#", "#UNINDENT#", "self", ".", "fields", "[", "'tenant_id'", "]", ".", "choices", "=", "tenant_choices", "#NEWLINE#", "if", ":", "#NEWLINE#", "#INDENT#", "self", ".", "fields", "[", "'net_profile_id'", "]", ".", "choices", "=", "self", ".", "get_network_profile_choices", "(", "request", ")", "#NEWLINE#", "#UNINDENT#", "if", "api", ".", "neutron", ".", "is_extension_supported", "(", "request", ",", "#NEWLINE#", "#INDENT#", "neutron_settings", "#NEWLINE#", "seg_id_range", "=", "neutron_settings", ".", "get", "#NEWLINE#", "self", ".", "seg_id_range", "=", "{", ":", "seg_id_range", ".", ":", "seg_id_range", ".", "get", "(", "'gre'", "'vxlan'", ":", "seg_id_range", ".", "get", "#NEWLINE#", "seg_id_help", "'For VLAN networks, the VLAN VID on the physical network that realizes the virtual network. Valid VLAN VIDs are %(vlan_min)s through %(vlan_max)s. For GRE or VXLAN networks, the tunnel ID. Valid tunnel IDs for GRE networks are %(gre_min)s through %(gre_max)s. For VXLAN networks, %(vxlan_min)s through %(vxlan_max)s.'", "self", ".", "seg_id_range", "'vlan_max'", ":", "self", ".", "seg_id_range", "[", "'vlan'", "]", "#NEWLINE#", "'gre_min'", ":", "self", ".", "seg_id_range", "[", "'gre'", ",", "#NEWLINE#", "'gre_max'", ":", "self", ".", "seg_id_range", "#NEWLINE#", "'vxlan_min'", ":", "self", ".", "seg_id_range", "[", "'vxlan_max'", ":", "self", ".", "seg_id_range", "[", "'vxlan'", "}", ")", "#NEWLINE#", "self", ".", "fields", "[", "'segmentation_id'", "]", ".", "help_text", "=", "seg_id_help", "#NEWLINE#", "supported_provider_types", "=", "neutron_settings", ".", "get", "(", "'supported_provider_types'", "(", "supported_provider_types", "==", "[", "'*'", "]", ")", ":", "#NEWLINE#", "#INDENT#", "network_type_choices", "=", "PROVIDER_TYPES", "#NEWLINE#", "#UNINDENT#", "else", ":", "#NEWLINE#", "#INDENT#", "network_type_choices", "=", "[", "net_type", "for", "net_type", "in", "PROVIDER_TYPES", "if", "(", "net_type", "[", "0", "]", "in", "supported_provider_types", "(", "network_type_choices", ")", "==", "0", ")", ":", "#NEWLINE#", "#INDENT#", "self", ".", "_hide_provider_network_type", "(", ")", "#NEWLINE#", "#UNINDENT#", "else", ":", "#NEWLINE#", "#INDENT#", "self", "=", "network_type_choices", "#NEWLINE#", "#UNINDENT#", "#UNINDENT#", "else", ":", "#NEWLINE#", "#INDENT#", "self", ".", "_hide_provider_network_type", "(", ")"]}}
{"position": {"error_location": 67, "repair_targets": [49, 56, 71], "repair_candidates": [7, 20, 124, 132, 136, 139, 146, 154, 159, 168, 177, 183, 189, 67, 235, 237, 242, 34, 51, 223, 232, 249, 270, 4, 17, 45, 107, 118, 49, 56, 71, 23, 36, 26, 62, 88, 122, 126, 208, 150, 204, 2, 12, 79, 94, 103, 130, 152, 157, 166, 175, 181, 187, 195, 257, 268, 278, 206, 214, 247]}}
{"prediction": {"error_location": 0.6210945248603821, "repair_targets": [0.3933762013912201, 0.3439040780067444, 0.003961062058806419], "repair_candidates": [4.035082383779809e-05, 0.002631103852763772, 0.015071331523358822, 6.648591079283506e-05, 0.00023564357252325863, 9.840791790338699e-06, 0.0002262998023070395, 0.03498443216085434, 0.009771245531737804, 0.008414966985583305, 0.001765968045219779, 0.3933762013912201, 1.2057651474606246e-05, 0.3439040780067444, 0.006467769853770733, 0.0003659189969766885, 0.003961062058806419, 0.0001393872225889936, 0.0005255945725366473, 9.583443898009136e-05, 7.20066309440881e-05, 0.0010981234954670072, 0.02035517804324627, 0.0006573423161171377, 0.00036093060043640435, 0.1467805802822113, 0.0008207836071960628, 0.000649758439976722, 0.00013582319661509246, 2.800198308250401e-05, 2.8842385290772654e-05, 7.24096898920834e-05, 1.079902176570613e-05, 0.0015509376535192132, 7.362944870692445e-06, 0.0009506045025773346, 5.200318355491618e-06, 0.00010499468044145033, 9.880250217975117e-06, 0.0005133404047228396, 3.125883949905983e-06, 0.00033662636997178197, 1.8157956219511107e-05, 0.00021727039711549878, 1.2936667417307035e-06, 4.723755773738958e-05, 0.0001666213065618649, 5.642039468511939e-06, 5.8533387345960364e-05, 0.00010224275320069864, 0.00029835206805728376, 2.6174553568125702e-05, 0.0022517035249620676, 6.348566239466891e-05, 2.840616798494011e-05, 2.9124095817678608e-05, 1.1068099411204457e-05, 2.3023196263238788e-05, 1.930872349475976e-05, 1.411794528394239e-05], "target_probs": 0.7412413358688354}}


{"result": {"time": "2021-02-11 10:38:44.887970", "n_pass": [417, 28, 27], "n_token": 279, "loss": [0.49860525131225586, 0.27883097529411316], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def __init__(", "self", ",", "request", ",", "*", "args", ",", "**kwargs", ")", ":", "self", ")", ".", "__init__", "(", "request", ",", "*", "args", ",", "**", "kwargs", ")", "#NEWLINE#", "tenant_choices", "=", "[", "(", ")", "]", "#NEWLINE#", "(", "tenants", ",", "has_more", ")", "=", "api", ".", "keystone", ".", "tenant_list", "(", "request", ")", "#NEWLINE#", "for", "tenant", "in", "tenants", ":", "#NEWLINE#", "#INDENT#", "if", "tenant", ".", "enabled", ":", "#NEWLINE#", "#INDENT#", "tenant_choices", ".", "append", "(", "(", "net_type", ".", "id", ",", "tenant", ".", "name", ")", ")", "#NEWLINE#", "#UNINDENT#", "#UNINDENT#", "self", ".", "fields", "[", "'tenant_id'", "]", ".", "choices", "=", "tenant_choices", "#NEWLINE#", "if", ":", "#NEWLINE#", "#INDENT#", "self", ".", "fields", "[", "'net_profile_id'", "]", ".", "choices", "=", "self", ".", "get_network_profile_choices", "(", "request", ")", "#NEWLINE#", "#UNINDENT#", "if", "api", ".", "neutron", ".", "is_extension_supported", "(", "request", ",", "#NEWLINE#", "#INDENT#", "neutron_settings", "#NEWLINE#", "seg_id_range", "=", "neutron_settings", ".", "get", "#NEWLINE#", "self", ".", "seg_id_range", "=", "{", ":", "seg_id_range", ".", ":", "seg_id_range", ".", "get", "(", "'gre'", "'vxlan'", ":", "seg_id_range", ".", "get", "#NEWLINE#", "seg_id_help", "'For VLAN networks, the VLAN VID on the physical network that realizes the virtual network. Valid VLAN VIDs are %(vlan_min)s through %(vlan_max)s. For GRE or VXLAN networks, the tunnel ID. Valid tunnel IDs for GRE networks are %(gre_min)s through %(gre_max)s. For VXLAN networks, %(vxlan_min)s through %(vxlan_max)s.'", "self", ".", "seg_id_range", "'vlan_max'", ":", "self", ".", "seg_id_range", "[", "'vlan'", "]", "#NEWLINE#", "'gre_min'", ":", "self", ".", "seg_id_range", "[", "'gre'", "self", ".", "seg_id_range", "#NEWLINE#", "'vxlan_min'", ":", "self", ".", "seg_id_range", "[", "'vxlan_max'", ":", "self", ".", "seg_id_range", "[", "'vxlan'", "}", ")", "#NEWLINE#", "self", ".", "fields", "[", "'segmentation_id'", "]", ".", "help_text", "=", "seg_id_help", "#NEWLINE#", "supported_provider_types", "=", "neutron_settings", ".", "get", "(", "'supported_provider_types'", "(", "supported_provider_types", "==", "[", "'*'", "]", ")", ":", "#NEWLINE#", "#INDENT#", "network_type_choices", "=", "PROVIDER_TYPES", "#NEWLINE#", "#UNINDENT#", "else", ":", "#NEWLINE#", "#INDENT#", "network_type_choices", "=", "[", "net_type", "for", "net_type", "in", "PROVIDER_TYPES", "if", "(", "net_type", "[", "0", "]", "in", "supported_provider_types", "(", "network_type_choices", ")", "==", "0", ")", ":", "#NEWLINE#", "#INDENT#", "self", ".", "_hide_provider_network_type", "(", ")", "#NEWLINE#", "#UNINDENT#", "else", ":", "#NEWLINE#", "#INDENT#", "self", "=", "network_type_choices", "#NEWLINE#", "#UNINDENT#", "#UNINDENT#", "else", ":", "#NEWLINE#", "#INDENT#", "self", ".", "_hide_provider_network_type", "(", ")"]}}
{"position": {"error_location": 67, "repair_targets": [49, 56, 71], "repair_candidates": [7, 20, 124, 132, 136, 139, 146, 154, 159, 168, 173, 179, 185, 67, 231, 233, 238, 34, 51, 219, 228, 245, 266, 4, 17, 45, 107, 118, 49, 56, 71, 23, 36, 26, 62, 88, 122, 126, 204, 150, 200, 2, 12, 79, 94, 103, 130, 152, 157, 166, 171, 177, 183, 191, 253, 264, 274, 202, 210, 243]}}
{"prediction": {"error_location": 0.6073771715164185, "repair_targets": [0.3994760811328888, 0.3532331883907318, 0.003958524204790592], "repair_candidates": [4.020600681542419e-05, 0.0026222937740385532, 0.014821614138782024, 6.611922435695305e-05, 0.000232503647566773, 9.689703801996075e-06, 0.0002229086821898818, 0.03463072329759598, 0.009629418142139912, 0.008307193405926228, 0.0017580627463757992, 0.3994760811328888, 1.1878459190484136e-05, 0.3532331883907318, 0.006335158366709948, 0.00033701324719004333, 0.003958524204790592, 0.00013383483747020364, 0.0005411096499301493, 9.010524809127674e-05, 7.3108276410494e-05, 0.0010728761553764343, 0.014527715742588043, 0.0006480723386630416, 0.00034070631954818964, 0.13815586268901825, 0.000511289807036519, 0.0005789358983747661, 0.0001249280321644619, 2.312362630618736e-05, 2.657523327798117e-05, 7.707720942562446e-05, 7.68141671869671e-06, 0.0015369408065453172, 6.290723831625655e-06, 0.001127544674091041, 5.262912509351736e-06, 0.0001597579539520666, 9.25307995203184e-06, 0.00046868372010067105, 3.3265089314227225e-06, 0.00032709038350731134, 2.0944795323885046e-05, 0.0002519782283343375, 1.410678009960975e-06, 6.983090133871883e-05, 0.00017644882609602064, 6.318953182926634e-06, 8.168038766598329e-05, 9.768481686478481e-05, 0.00029720095335505903, 3.0417615562328137e-05, 0.0024723783135414124, 8.092913049040362e-05, 3.2170635677175596e-05, 3.8085709093138576e-05, 1.1488967174955178e-05, 2.387893255217932e-05, 2.2786500267102383e-05, 1.4628141798311844e-05], "target_probs": 0.7566677927970886}}


{"result": {"time": "2021-02-11 10:38:45.118410", "n_pass": [422, 29, 28], "n_token": 275, "loss": [0.3474574089050293, 0.18839728832244873], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def __init__(", "self", ",", "request", ",", "*", "args", ",", "**kwargs", ")", ":", "self", ")", ".", "__init__", "(", "request", ",", "*", "args", ",", "**", "kwargs", ")", "#NEWLINE#", "tenant_choices", "=", "[", "(", ")", "]", "#NEWLINE#", "(", "tenants", ",", "has_more", ")", "=", "api", ".", "keystone", ".", "tenant_list", "(", "request", ")", "#NEWLINE#", "for", "tenant", "in", "tenants", ":", "#NEWLINE#", "#INDENT#", "if", "tenant", ".", "enabled", ":", "#NEWLINE#", "#INDENT#", "tenant_choices", ".", "append", "(", "(", "net_type", ".", "id", ",", "tenant", ".", "name", ")", ")", "#NEWLINE#", "#UNINDENT#", "#UNINDENT#", "self", ".", "fields", "[", "'tenant_id'", "]", ".", "choices", "=", "tenant_choices", "#NEWLINE#", "if", ":", "#NEWLINE#", "#INDENT#", "self", ".", "fields", "[", "'net_profile_id'", "]", ".", "choices", "=", "self", ".", "get_network_profile_choices", "(", "request", ")", "#NEWLINE#", "#UNINDENT#", "if", "api", ".", "neutron", ".", "is_extension_supported", "(", "request", ",", "#NEWLINE#", "#INDENT#", "neutron_settings", "#NEWLINE#", "seg_id_range", "=", "neutron_settings", ".", "get", "#NEWLINE#", "self", ".", "seg_id_range", "=", "{", ":", "seg_id_range", ".", ":", "seg_id_range", ".", "get", "(", "'gre'", "'vxlan'", ":", "seg_id_range", ".", "get", "#NEWLINE#", "seg_id_help", "'For VLAN networks, the VLAN VID on the physical network that realizes the virtual network. Valid VLAN VIDs are %(vlan_min)s through %(vlan_max)s. For GRE or VXLAN networks, the tunnel ID. Valid tunnel IDs for GRE networks are %(gre_min)s through %(gre_max)s. For VXLAN networks, %(vxlan_min)s through %(vxlan_max)s.'", "self", ".", "seg_id_range", "'vlan_max'", ":", "self", ".", "seg_id_range", "[", "'vlan'", "]", "#NEWLINE#", "'gre_min'", ":", "self", ".", "seg_id_range", "[", "'gre'", "self", ".", "seg_id_range", "#NEWLINE#", "'vxlan_min'", ":", "self", ".", "seg_id_range", "[", "'vxlan_max'", ":", "self", ".", "seg_id_range", "[", "self", ".", "fields", "[", "'segmentation_id'", "]", ".", "help_text", "=", "seg_id_help", "#NEWLINE#", "supported_provider_types", "=", "neutron_settings", ".", "get", "(", "'supported_provider_types'", "(", "supported_provider_types", "==", "[", "'*'", "]", ")", ":", "#NEWLINE#", "#INDENT#", "network_type_choices", "=", "PROVIDER_TYPES", "#NEWLINE#", "#UNINDENT#", "else", ":", "#NEWLINE#", "#INDENT#", "network_type_choices", "=", "[", "net_type", "for", "net_type", "in", "PROVIDER_TYPES", "if", "(", "net_type", "[", "0", "]", "in", "supported_provider_types", "(", "network_type_choices", ")", "==", "0", ")", ":", "#NEWLINE#", "#INDENT#", "self", ".", "_hide_provider_network_type", "(", ")", "#NEWLINE#", "#UNINDENT#", "else", ":", "#NEWLINE#", "#INDENT#", "self", "=", "network_type_choices", "#NEWLINE#", "#UNINDENT#", "#UNINDENT#", "else", ":", "#NEWLINE#", "#INDENT#", "self", ".", "_hide_provider_network_type", "(", ")"]}}
{"position": {"error_location": 67, "repair_targets": [49, 56, 71], "repair_candidates": [7, 20, 124, 132, 136, 139, 146, 154, 159, 168, 173, 179, 185, 67, 227, 229, 234, 34, 51, 215, 224, 241, 262, 4, 17, 45, 107, 118, 49, 56, 71, 23, 36, 26, 62, 88, 122, 126, 200, 150, 196, 2, 12, 79, 94, 103, 130, 152, 157, 166, 171, 177, 183, 187, 249, 260, 270, 198, 206, 239]}}
{"prediction": {"error_location": 0.7064821720123291, "repair_targets": [0.430069237947464, 0.3938048481941223, 0.004411462228745222], "repair_candidates": [4.1678922571009025e-05, 0.0026715423446148634, 0.01504853367805481, 6.778338138246909e-05, 0.00023174742818810046, 9.861459147941787e-06, 0.0002268094540340826, 0.03531249240040779, 0.009730040095746517, 0.008486699312925339, 0.0018354335334151983, 0.430069237947464, 1.2041147783747874e-05, 0.3938048481941223, 0.006222134456038475, 0.00030183937633410096, 0.004411462228745222, 9.901675366563722e-05, 0.00042481455602683127, 4.69806618639268e-05, 7.912144064903259e-05, 0.0010255782399326563, 0.012966214679181576, 0.0005472176126204431, 0.00023498183873016387, 0.06726624071598053, 0.0002843677648343146, 0.0004871122364420444, 9.249369031749666e-05, 1.8830305634764954e-05, 2.3388165573123842e-05, 4.8168170906137675e-05, 6.368713002302684e-06, 0.0018099001608788967, 5.7512547755322885e-06, 0.0006038515130057931, 4.062858806719305e-06, 7.960113725857809e-05, 5.747976047132397e-06, 0.00038382571074180305, 1.5259480505847023e-06, 0.000263811118202284, 2.265409648316563e-06, 0.0004204499418847263, 3.4641216188902035e-06, 5.812734889332205e-05, 0.00045726567623205483, 6.1613113757630344e-06, 7.370619277935475e-05, 0.0001352101971860975, 0.0003976475272793323, 3.300843309261836e-05, 0.0029095346108078957, 7.651392661500722e-05, 3.158448816975579e-05, 3.727127841557376e-05, 9.566151675244328e-06, 2.2457541490439326e-05, 1.7996297174249776e-05, 1.4608355741074774e-05], "target_probs": 0.8282855749130249}}


{"result": {"time": "2021-02-11 10:38:45.347131", "n_pass": [424, 30, 29], "n_token": 271, "loss": [0.28005969524383545, 0.16781379282474518], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def __init__(", "self", ",", "request", ",", "*", "args", ",", "**kwargs", ")", ":", "self", ")", ".", "__init__", "(", "request", ",", "*", "args", ",", "**", "kwargs", ")", "#NEWLINE#", "tenant_choices", "=", "[", "(", ")", "]", "#NEWLINE#", "(", "tenants", ",", "has_more", ")", "=", "api", ".", "keystone", ".", "tenant_list", "(", "request", ")", "#NEWLINE#", "for", "tenant", "in", "tenants", ":", "#NEWLINE#", "#INDENT#", "if", "tenant", ".", "enabled", ":", "#NEWLINE#", "#INDENT#", "tenant_choices", ".", "append", "(", "(", "net_type", ".", "id", ",", "tenant", ".", "name", ")", ")", "#NEWLINE#", "#UNINDENT#", "#UNINDENT#", "self", ".", "fields", "[", "'tenant_id'", "]", ".", "choices", "=", "tenant_choices", "#NEWLINE#", "if", ":", "#NEWLINE#", "#INDENT#", "self", ".", "fields", "[", "'net_profile_id'", "]", ".", "choices", "=", "self", ".", "get_network_profile_choices", "(", "request", ")", "#NEWLINE#", "#UNINDENT#", "if", "api", ".", "neutron", ".", "is_extension_supported", "(", "request", ",", "#NEWLINE#", "#INDENT#", "neutron_settings", "#NEWLINE#", "seg_id_range", "=", "neutron_settings", ".", "get", "#NEWLINE#", "self", ".", "seg_id_range", "=", "{", ":", "seg_id_range", ".", ":", "seg_id_range", ".", "get", "(", "'gre'", "'vxlan'", ":", "seg_id_range", ".", "get", "#NEWLINE#", "seg_id_help", "'For VLAN networks, the VLAN VID on the physical network that realizes the virtual network. Valid VLAN VIDs are %(vlan_min)s through %(vlan_max)s. For GRE or VXLAN networks, the tunnel ID. Valid tunnel IDs for GRE networks are %(gre_min)s through %(gre_max)s. For VXLAN networks, %(vxlan_min)s through %(vxlan_max)s.'", "self", ".", "seg_id_range", "'vlan_max'", ":", "self", ".", "seg_id_range", "[", "'vlan'", "]", "#NEWLINE#", "'gre_min'", ":", "self", ".", "seg_id_range", "[", "'gre'", "self", ".", "seg_id_range", "#NEWLINE#", "'vxlan_min'", ":", "self", ".", "seg_id_range", "[", "'vxlan_max'", ":", "self", ".", "seg_id_range", "[", "self", ".", "fields", "[", "=", "seg_id_help", "#NEWLINE#", "supported_provider_types", "=", "neutron_settings", ".", "get", "(", "'supported_provider_types'", "(", "supported_provider_types", "==", "[", "'*'", "]", ")", ":", "#NEWLINE#", "#INDENT#", "network_type_choices", "=", "PROVIDER_TYPES", "#NEWLINE#", "#UNINDENT#", "else", ":", "#NEWLINE#", "#INDENT#", "network_type_choices", "=", "[", "net_type", "for", "net_type", "in", "PROVIDER_TYPES", "if", "(", "net_type", "[", "0", "]", "in", "supported_provider_types", "(", "network_type_choices", ")", "==", "0", ")", ":", "#NEWLINE#", "#INDENT#", "self", ".", "_hide_provider_network_type", "(", ")", "#NEWLINE#", "#UNINDENT#", "else", ":", "#NEWLINE#", "#INDENT#", "self", "=", "network_type_choices", "#NEWLINE#", "#UNINDENT#", "#UNINDENT#", "else", ":", "#NEWLINE#", "#INDENT#", "self", ".", "_hide_provider_network_type", "(", ")"]}}
{"position": {"error_location": 67, "repair_targets": [49, 56, 71], "repair_candidates": [7, 20, 124, 132, 136, 139, 146, 154, 159, 168, 173, 179, 185, 67, 223, 225, 230, 34, 51, 211, 220, 237, 258, 4, 17, 45, 107, 118, 49, 56, 71, 23, 36, 26, 62, 88, 122, 126, 196, 150, 192, 2, 12, 79, 94, 103, 130, 152, 157, 166, 171, 177, 183, 187, 245, 256, 266, 194, 202, 235]}}
{"prediction": {"error_location": 0.7557386159896851, "repair_targets": [0.4344596266746521, 0.4030058681964874, 0.008045717142522335], "repair_candidates": [4.953410098096356e-05, 0.0033931622747331858, 0.01664073020219803, 8.217277354560792e-05, 0.0002923444553744048, 1.1013294169970322e-05, 0.00027282966766506433, 0.03772304952144623, 0.010913115926086903, 0.009565296582877636, 0.0023186306934803724, 0.4344596266746521, 1.445049656467745e-05, 0.4030058681964874, 0.0066169132478535175, 0.0004839534522034228, 0.008045717142522335, 0.00012451648944988847, 0.0007473411969840527, 6.215753819560632e-05, 8.435232302872464e-05, 0.0010175176430493593, 0.010435068048536777, 0.0007018392207100987, 0.00026721658650785685, 0.04091598466038704, 0.00019110918219666928, 0.000493339030072093, 0.0001229147455887869, 3.46512533724308e-05, 4.9137845053337514e-05, 7.405511132674292e-05, 6.61809599478147e-06, 0.0016566287958994508, 6.647345344390487e-06, 0.0014179081190377474, 5.367512585507939e-06, 0.0001742975291563198, 9.152425263891928e-06, 0.0006087510264478624, 2.8726635719067417e-06, 0.00038865208625793457, 2.4126204607455293e-06, 0.001649318146519363, 8.144450475811027e-06, 3.983279020758346e-05, 0.0009310510940849781, 9.426110409549437e-06, 0.00018056205590255558, 0.00010281121649313718, 0.00028519402258098125, 4.230641934555024e-05, 0.0030322070233523846, 0.00010254478547722101, 3.0147190045681782e-05, 4.050516145071015e-05, 8.584748684370425e-06, 1.814384995668661e-05, 1.6822586985654198e-05, 1.3504082744475454e-05], "target_probs": 0.845511257648468}}


{"result": {"time": "2021-02-11 10:38:45.573916", "n_pass": [428, 31, 30], "n_token": 267, "loss": [0.1820201575756073, 0.14193406701087952], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def __init__(", "self", ",", "request", ",", "*", "args", ",", "**kwargs", ")", ":", "self", ")", ".", "__init__", "(", "request", ",", "*", "args", ",", "**", "kwargs", ")", "#NEWLINE#", "tenant_choices", "=", "[", "(", ")", "]", "#NEWLINE#", "(", "tenants", ",", "has_more", ")", "=", "api", ".", "keystone", ".", "tenant_list", "(", "request", ")", "#NEWLINE#", "for", "tenant", "in", "tenants", ":", "#NEWLINE#", "#INDENT#", "if", "tenant", ".", "enabled", ":", "#NEWLINE#", "#INDENT#", "tenant_choices", ".", "append", "(", "(", "net_type", ".", "id", ",", "tenant", ".", "name", ")", ")", "#NEWLINE#", "#UNINDENT#", "#UNINDENT#", "self", ".", "fields", "[", "'tenant_id'", "]", ".", "choices", "=", "tenant_choices", "#NEWLINE#", "if", ":", "#NEWLINE#", "#INDENT#", "self", ".", "fields", "[", "'net_profile_id'", "]", ".", "choices", "=", "self", ".", "get_network_profile_choices", "(", "request", ")", "#NEWLINE#", "#UNINDENT#", "if", "api", ".", "neutron", ".", "is_extension_supported", "(", "request", ",", "#NEWLINE#", "#INDENT#", "neutron_settings", "#NEWLINE#", "seg_id_range", "=", "neutron_settings", ".", "get", "#NEWLINE#", "self", ".", "seg_id_range", "=", "{", ":", "seg_id_range", ".", ":", "seg_id_range", ".", "get", "(", "'gre'", "'vxlan'", ":", "seg_id_range", ".", "get", "#NEWLINE#", "seg_id_help", "'For VLAN networks, the VLAN VID on the physical network that realizes the virtual network. Valid VLAN VIDs are %(vlan_min)s through %(vlan_max)s. For GRE or VXLAN networks, the tunnel ID. Valid tunnel IDs for GRE networks are %(gre_min)s through %(gre_max)s. For VXLAN networks, %(vxlan_min)s through %(vxlan_max)s.'", "self", ".", "seg_id_range", "'vlan_max'", ":", "self", ".", "seg_id_range", "[", "'vlan'", "]", "#NEWLINE#", "'gre_min'", ":", "self", ".", "seg_id_range", "[", "'gre'", "self", ".", "seg_id_range", "#NEWLINE#", "'vxlan_min'", ":", "self", ".", "seg_id_range", "[", "'vxlan_max'", ":", "self", ".", "seg_id_range", "[", "self", ".", "fields", "[", "=", "seg_id_help", "#NEWLINE#", "supported_provider_types", "=", "neutron_settings", ".", "get", "(", "'supported_provider_types'", "(", "supported_provider_types", ")", ":", "#NEWLINE#", "#INDENT#", "network_type_choices", "=", "PROVIDER_TYPES", "#NEWLINE#", "#UNINDENT#", "else", ":", "#NEWLINE#", "#INDENT#", "network_type_choices", "=", "[", "net_type", "for", "net_type", "in", "PROVIDER_TYPES", "if", "(", "net_type", "[", "0", "]", "in", "supported_provider_types", "(", "network_type_choices", ")", "==", "0", ")", ":", "#NEWLINE#", "#INDENT#", "self", ".", "_hide_provider_network_type", "(", ")", "#NEWLINE#", "#UNINDENT#", "else", ":", "#NEWLINE#", "#INDENT#", "self", "=", "network_type_choices", "#NEWLINE#", "#UNINDENT#", "#UNINDENT#", "else", ":", "#NEWLINE#", "#INDENT#", "self", ".", "_hide_provider_network_type", "(", ")"]}}
{"position": {"error_location": 67, "repair_targets": [49, 56, 71], "repair_candidates": [7, 20, 124, 132, 136, 139, 146, 154, 159, 168, 173, 179, 185, 67, 219, 221, 226, 34, 51, 207, 216, 233, 254, 4, 17, 45, 107, 118, 49, 56, 71, 23, 36, 26, 62, 88, 122, 126, 196, 150, 192, 2, 12, 79, 94, 103, 130, 152, 157, 166, 171, 177, 183, 187, 241, 252, 262, 194, 202, 231]}}
{"prediction": {"error_location": 0.8335847854614258, "repair_targets": [0.43685024976730347, 0.4228387773036957, 0.007989444769918919], "repair_candidates": [4.92095023219008e-05, 0.0032129245810210705, 0.016599997878074646, 8.026809518923983e-05, 0.0002728223626036197, 1.1018800250894856e-05, 0.00027141993632540107, 0.03841593489050865, 0.011012881062924862, 0.009793976321816444, 0.002227794611826539, 0.43685024976730347, 1.416887516825227e-05, 0.4228387773036957, 0.006843458395451307, 0.00034147806582041085, 0.007989444769918919, 0.00011175975669175386, 0.001751155243255198, 5.21468828083016e-05, 5.332952059688978e-05, 0.000644125510007143, 0.00893649272620678, 0.0003504528431221843, 0.00010680383275030181, 0.02053261734545231, 9.16595890885219e-05, 0.000404573482228443, 0.00011317466851323843, 2.9464028557413258e-05, 9.226359543390572e-05, 4.0429211367154494e-05, 4.722938228951534e-06, 0.0015508828219026327, 9.026216503116302e-06, 0.0010593857150524855, 5.494543074746616e-06, 0.00013101162039674819, 1.1673554581648204e-05, 0.000419306947151199, 2.0989014046790544e-06, 0.00017354582087136805, 1.7943800685316091e-06, 0.0020378835033625364, 9.1849342425121e-06, 2.7623858841252513e-05, 0.0007807607762515545, 1.083203824236989e-05, 0.0009145305957645178, 0.00010268619371345267, 0.00016730136121623218, 6.026215851306915e-05, 0.002114551607519388, 0.00014097541861701757, 2.893120290536899e-05, 5.2782055718125775e-05, 6.115860742283985e-06, 1.2354836144368164e-05, 1.800078280211892e-05, 1.0180310709984042e-05], "target_probs": 0.8676784634590149}}


{"result": {"time": "2021-02-11 10:38:45.798139", "n_pass": [429, 32, 31], "n_token": 263, "loss": [0.1348593384027481, 0.11541516333818436], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def __init__(", "self", ",", "request", ",", "*", "args", ",", "**kwargs", ")", ":", "self", ")", ".", "__init__", "(", "request", ",", "*", "args", ",", "**", "kwargs", ")", "#NEWLINE#", "tenant_choices", "=", "[", "(", ")", "]", "#NEWLINE#", "(", "tenants", ",", "has_more", ")", "=", "api", ".", "keystone", ".", "tenant_list", "(", "request", ")", "#NEWLINE#", "for", "tenant", "in", "tenants", ":", "#NEWLINE#", "#INDENT#", "if", "tenant", ".", "enabled", ":", "#NEWLINE#", "#INDENT#", "tenant_choices", ".", "append", "(", "(", "net_type", ".", "id", ",", "tenant", ".", "name", ")", ")", "#NEWLINE#", "#UNINDENT#", "#UNINDENT#", "self", ".", "fields", "[", "'tenant_id'", "]", ".", "choices", "=", "tenant_choices", "#NEWLINE#", "if", ":", "#NEWLINE#", "#INDENT#", "self", ".", "fields", "[", "'net_profile_id'", "]", ".", "choices", "=", "self", ".", "get_network_profile_choices", "(", "request", ")", "#NEWLINE#", "#UNINDENT#", "if", "api", ".", "neutron", ".", "is_extension_supported", "(", "request", ",", "#NEWLINE#", "#INDENT#", "neutron_settings", "#NEWLINE#", "seg_id_range", "=", "neutron_settings", ".", "get", "#NEWLINE#", "self", ".", "seg_id_range", "=", "{", ":", "seg_id_range", ".", ":", "seg_id_range", ".", "get", "(", "'gre'", "'vxlan'", ":", "seg_id_range", ".", "get", "#NEWLINE#", "seg_id_help", "'For VLAN networks, the VLAN VID on the physical network that realizes the virtual network. Valid VLAN VIDs are %(vlan_min)s through %(vlan_max)s. For GRE or VXLAN networks, the tunnel ID. Valid tunnel IDs for GRE networks are %(gre_min)s through %(gre_max)s. For VXLAN networks, %(vxlan_min)s through %(vxlan_max)s.'", "self", ".", "seg_id_range", "'vlan_max'", ":", "self", ".", "seg_id_range", "[", "'vlan'", "]", "#NEWLINE#", "'gre_min'", ":", "self", ".", "seg_id_range", "[", "'gre'", "self", ".", "seg_id_range", "#NEWLINE#", "'vxlan_min'", ":", "self", ".", "seg_id_range", "[", "'vxlan_max'", ":", "self", ".", "seg_id_range", "[", "self", ".", "fields", "[", "=", "seg_id_help", "#NEWLINE#", "supported_provider_types", "=", "neutron_settings", ".", "get", "(", "'supported_provider_types'", "(", "supported_provider_types", "network_type_choices", "=", "PROVIDER_TYPES", "#NEWLINE#", "#UNINDENT#", "else", ":", "#NEWLINE#", "#INDENT#", "network_type_choices", "=", "[", "net_type", "for", "net_type", "in", "PROVIDER_TYPES", "if", "(", "net_type", "[", "0", "]", "in", "supported_provider_types", "(", "network_type_choices", ")", "==", "0", ")", ":", "#NEWLINE#", "#INDENT#", "self", ".", "_hide_provider_network_type", "(", ")", "#NEWLINE#", "#UNINDENT#", "else", ":", "#NEWLINE#", "#INDENT#", "self", "=", "network_type_choices", "#NEWLINE#", "#UNINDENT#", "#UNINDENT#", "else", ":", "#NEWLINE#", "#INDENT#", "self", ".", "_hide_provider_network_type", "(", ")"]}}
{"position": {"error_location": 67, "repair_targets": [49, 56, 71], "repair_candidates": [7, 20, 124, 132, 136, 139, 146, 154, 159, 168, 173, 179, 185, 67, 215, 217, 222, 34, 51, 203, 212, 229, 250, 4, 17, 45, 107, 118, 49, 56, 71, 23, 36, 26, 62, 88, 122, 126, 196, 150, 192, 2, 12, 79, 94, 103, 130, 152, 157, 166, 171, 177, 183, 187, 237, 248, 258, 194, 202, 227]}}
{"prediction": {"error_location": 0.8738389015197754, "repair_targets": [0.43328794836997986, 0.45040082931518555, 0.007307321764528751], "repair_candidates": [4.589237869367935e-05, 0.002765441546216607, 0.01626986637711525, 7.2660950536374e-05, 0.0002336239704163745, 1.0739251592895016e-05, 0.0002513545041438192, 0.037132881581783295, 0.010332629084587097, 0.009272987022995949, 0.002085056621581316, 0.43328794836997986, 1.297501876251772e-05, 0.45040082931518555, 0.006093684118241072, 0.0002551667275838554, 0.007307321764528751, 5.259415047476068e-05, 0.001429808558896184, 3.0346231142175384e-05, 4.2212894186377525e-05, 0.00048497028183192015, 0.00430655712261796, 0.00020201738516334444, 5.006952051189728e-05, 0.010145007632672787, 6.755225331289694e-05, 0.0003698735381476581, 6.72228925395757e-05, 2.493671672709752e-05, 6.446470797527581e-05, 1.660427551541943e-05, 3.177409553245525e-06, 0.001039782422594726, 5.043428700446384e-06, 0.0007382265757769346, 4.7776097744645085e-06, 9.531446994515136e-05, 8.843494470056612e-06, 0.00024410674814134836, 1.3536404139813385e-06, 0.00012235972099006176, 1.5017697023722576e-06, 0.0012752150651067495, 6.835612566646887e-06, 3.3569143852218986e-05, 0.00022922152129467577, 4.833041202800814e-06, 0.0013056171592324972, 2.3375778255285695e-05, 6.671248411294073e-05, 3.277822906966321e-05, 0.0013754857936874032, 0.00010679571278160438, 1.8366099538980052e-05, 3.718704465427436e-05, 4.485192221181933e-06, 8.342237379110884e-06, 1.4219113836588804e-05, 7.245940651046112e-06], "target_probs": 0.8909961581230164}}


{"result": {"time": "2021-02-11 10:38:46.018933", "n_pass": [431, 33, 32], "n_token": 259, "loss": [0.14706788957118988, 0.10533689707517624], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def __init__(", "self", ",", "request", ",", "*", "args", ",", "**kwargs", ")", ":", "self", ")", ".", "__init__", "(", "request", ",", "*", "args", ",", "**", "kwargs", ")", "#NEWLINE#", "tenant_choices", "=", "[", "(", ")", "]", "#NEWLINE#", "(", "tenants", ",", "has_more", ")", "=", "api", ".", "keystone", ".", "tenant_list", "(", "request", ")", "#NEWLINE#", "for", "tenant", "in", "tenants", ":", "#NEWLINE#", "#INDENT#", "if", "tenant", ".", "enabled", ":", "#NEWLINE#", "#INDENT#", "tenant_choices", ".", "append", "(", "(", "net_type", ".", "id", ",", "tenant", ".", "name", ")", ")", "#NEWLINE#", "#UNINDENT#", "#UNINDENT#", "self", ".", "fields", "[", "'tenant_id'", "]", ".", "choices", "=", "tenant_choices", "#NEWLINE#", "if", ":", "#NEWLINE#", "#INDENT#", "self", ".", "fields", "[", "'net_profile_id'", "]", ".", "choices", "=", "self", ".", "get_network_profile_choices", "(", "request", ")", "#NEWLINE#", "#UNINDENT#", "if", "api", ".", "neutron", ".", "is_extension_supported", "(", "request", ",", "#NEWLINE#", "#INDENT#", "neutron_settings", "#NEWLINE#", "seg_id_range", "=", "neutron_settings", ".", "get", "#NEWLINE#", "self", ".", "seg_id_range", "=", "{", ":", "seg_id_range", ".", ":", "seg_id_range", ".", "get", "(", "'gre'", "'vxlan'", ":", "seg_id_range", ".", "get", "#NEWLINE#", "seg_id_help", "'For VLAN networks, the VLAN VID on the physical network that realizes the virtual network. Valid VLAN VIDs are %(vlan_min)s through %(vlan_max)s. For GRE or VXLAN networks, the tunnel ID. Valid tunnel IDs for GRE networks are %(gre_min)s through %(gre_max)s. For VXLAN networks, %(vxlan_min)s through %(vxlan_max)s.'", "self", ".", "seg_id_range", "'vlan_max'", ":", "self", ".", "seg_id_range", "[", "'vlan'", "]", "#NEWLINE#", "'gre_min'", ":", "self", ".", "seg_id_range", "[", "'gre'", "self", ".", "seg_id_range", "#NEWLINE#", "'vxlan_min'", ":", "self", ".", "seg_id_range", "[", "'vxlan_max'", ":", "self", ".", "seg_id_range", "[", "self", ".", "fields", "[", "=", "seg_id_help", "#NEWLINE#", "supported_provider_types", "=", "neutron_settings", ".", "get", "(", "'supported_provider_types'", "(", "supported_provider_types", "network_type_choices", "=", "PROVIDER_TYPES", "#NEWLINE#", "#INDENT#", "network_type_choices", "=", "[", "net_type", "for", "net_type", "in", "PROVIDER_TYPES", "if", "(", "net_type", "[", "0", "]", "in", "supported_provider_types", "(", "network_type_choices", ")", "==", "0", ")", ":", "#NEWLINE#", "#INDENT#", "self", ".", "_hide_provider_network_type", "(", ")", "#NEWLINE#", "#UNINDENT#", "else", ":", "#NEWLINE#", "#INDENT#", "self", "=", "network_type_choices", "#NEWLINE#", "#UNINDENT#", "#UNINDENT#", "else", ":", "#NEWLINE#", "#INDENT#", "self", ".", "_hide_provider_network_type", "(", ")"]}}
{"position": {"error_location": 67, "repair_targets": [49, 56, 71], "repair_candidates": [7, 20, 124, 132, 136, 139, 146, 154, 159, 168, 173, 179, 185, 67, 211, 213, 218, 34, 51, 203, 208, 225, 246, 4, 17, 45, 107, 118, 49, 56, 71, 23, 36, 26, 62, 88, 122, 126, 196, 150, 192, 2, 12, 79, 94, 103, 130, 152, 157, 166, 171, 177, 183, 187, 233, 244, 254, 194, 202, 223]}}
{"prediction": {"error_location": 0.8632356524467468, "repair_targets": [0.4472220838069916, 0.4414081275463104, 0.011391033418476582], "repair_candidates": [4.497210466070101e-05, 0.0028371314983814955, 0.015229661017656326, 7.256672688527033e-05, 0.00023853263701312244, 1.0139341611647978e-05, 0.000246312003582716, 0.03669378161430359, 0.010408787988126278, 0.009289002977311611, 0.0019658440724015236, 0.4472220838069916, 1.3665071492141578e-05, 0.4414081275463104, 0.005330159328877926, 0.0003291071916464716, 0.011391033418476582, 5.033755587646738e-05, 0.0008875748608261347, 3.086421565967612e-05, 2.410702836641576e-05, 0.00041525199776515365, 0.00291688391007483, 0.0001441065687686205, 5.1694198191398755e-05, 0.0066808899864554405, 5.29313474544324e-05, 0.00032167849713005126, 7.954010652611032e-05, 2.4172682969947346e-05, 6.373594078468159e-05, 2.0019115254399367e-05, 3.108877763224882e-06, 0.000656557793263346, 3.7183456242928514e-06, 0.0008752450230531394, 3.9912456486490555e-06, 8.610192162450403e-05, 7.492512850149069e-06, 0.00022980186622589827, 1.572641281200049e-06, 0.000131311928271316, 1.216785449287272e-06, 0.0012664301320910454, 3.988460321124876e-06, 1.8350348909734748e-05, 0.0002988071064464748, 3.960230969823897e-06, 0.001022973796352744, 2.2849577362649143e-05, 7.334087422350422e-05, 3.0921612051315606e-05, 0.0006186118116602302, 8.09514822321944e-05, 1.2340301509539131e-05, 2.6684658223530278e-05, 2.828242259056424e-06, 5.587543455476407e-06, 1.1283036656095646e-05, 5.2400037020561285e-06], "target_probs": 0.9000212550163269}}


{"result": {"time": "2021-02-11 10:38:46.239748", "n_pass": [435, 34, 33], "n_token": 255, "loss": [0.1294228583574295, 0.09667542576789856], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def __init__(", "self", ",", "request", ",", "*", "args", ",", "**kwargs", ")", ":", "self", ")", ".", "__init__", "(", "request", ",", "*", "args", ",", "**", "kwargs", ")", "#NEWLINE#", "tenant_choices", "=", "[", "(", ")", "]", "#NEWLINE#", "(", "tenants", ",", "has_more", ")", "=", "api", ".", "keystone", ".", "tenant_list", "(", "request", ")", "#NEWLINE#", "for", "tenant", "in", "tenants", ":", "#NEWLINE#", "#INDENT#", "if", "tenant", ".", "enabled", ":", "#NEWLINE#", "#INDENT#", "tenant_choices", ".", "append", "(", "(", "net_type", ".", "id", ",", "tenant", ".", "name", ")", ")", "#NEWLINE#", "#UNINDENT#", "#UNINDENT#", "self", ".", "fields", "[", "'tenant_id'", "]", ".", "choices", "=", "tenant_choices", "#NEWLINE#", "if", ":", "#NEWLINE#", "#INDENT#", "self", ".", "fields", "[", "'net_profile_id'", "]", ".", "choices", "=", "self", ".", "get_network_profile_choices", "(", "request", ")", "#NEWLINE#", "#UNINDENT#", "if", "api", ".", "neutron", ".", "is_extension_supported", "(", "request", ",", "#NEWLINE#", "#INDENT#", "neutron_settings", "#NEWLINE#", "seg_id_range", "=", "neutron_settings", ".", "get", "#NEWLINE#", "self", ".", "seg_id_range", "=", "{", ":", "seg_id_range", ".", ":", "seg_id_range", ".", "get", "(", "'gre'", "'vxlan'", ":", "seg_id_range", ".", "get", "#NEWLINE#", "seg_id_help", "'For VLAN networks, the VLAN VID on the physical network that realizes the virtual network. Valid VLAN VIDs are %(vlan_min)s through %(vlan_max)s. For GRE or VXLAN networks, the tunnel ID. Valid tunnel IDs for GRE networks are %(gre_min)s through %(gre_max)s. For VXLAN networks, %(vxlan_min)s through %(vxlan_max)s.'", "self", ".", "seg_id_range", "'vlan_max'", ":", "self", ".", "seg_id_range", "[", "'vlan'", "]", "#NEWLINE#", "'gre_min'", ":", "self", ".", "seg_id_range", "[", "'gre'", "self", ".", "seg_id_range", "#NEWLINE#", "'vxlan_min'", ":", "self", ".", "seg_id_range", "[", "'vxlan_max'", ":", "self", ".", "seg_id_range", "[", "self", ".", "fields", "[", "=", "seg_id_help", "#NEWLINE#", "supported_provider_types", "=", "neutron_settings", ".", "get", "(", "'supported_provider_types'", "(", "supported_provider_types", "network_type_choices", "=", "PROVIDER_TYPES", "#NEWLINE#", "#INDENT#", "network_type_choices", "=", "[", "net_type", "for", "net_type", "in", "PROVIDER_TYPES", "if", "(", "net_type", "supported_provider_types", "(", "network_type_choices", ")", "==", "0", ")", ":", "#NEWLINE#", "#INDENT#", "self", ".", "_hide_provider_network_type", "(", ")", "#NEWLINE#", "#UNINDENT#", "else", ":", "#NEWLINE#", "#INDENT#", "self", "=", "network_type_choices", "#NEWLINE#", "#UNINDENT#", "#UNINDENT#", "else", ":", "#NEWLINE#", "#INDENT#", "self", ".", "_hide_provider_network_type", "(", ")"]}}
{"position": {"error_location": 67, "repair_targets": [49, 56, 71], "repair_candidates": [7, 20, 124, 132, 136, 139, 146, 154, 159, 168, 173, 179, 185, 67, 211, 213, 218, 34, 51, 203, 208, 221, 242, 4, 17, 45, 107, 118, 49, 56, 71, 23, 36, 26, 62, 88, 122, 126, 196, 150, 192, 2, 12, 79, 94, 103, 130, 152, 157, 166, 171, 177, 183, 187, 229, 240, 250, 194, 202, 219]}}
{"prediction": {"error_location": 0.8786024451255798, "repair_targets": [0.38016223907470703, 0.5220456123352051, 0.005642747972160578], "repair_candidates": [3.929254671675153e-05, 0.002384503837674856, 0.013426868245005608, 6.248251884244382e-05, 0.0002000100357690826, 8.955787961895112e-06, 0.000215519976336509, 0.032741423696279526, 0.009745676070451736, 0.008540809154510498, 0.0015570945106446743, 0.38016223907470703, 9.143326678895392e-06, 0.5220456123352051, 0.006470145657658577, 0.0003045451012440026, 0.005642747972160578, 4.239964619046077e-05, 0.0003473749675322324, 2.88725204882212e-05, 2.7343776309862733e-05, 0.00037745924782939255, 0.0027142930775880814, 0.0001417923776898533, 6.73266185913235e-05, 0.006367160007357597, 5.003055775887333e-05, 0.00041767486254684627, 6.791811028961092e-05, 1.7293972632614896e-05, 6.650404975516722e-05, 1.7607102563488297e-05, 3.2381653909396846e-06, 0.0007604103884659708, 5.427304131444544e-06, 0.0009974014246836305, 6.0009620028722566e-06, 6.70417575747706e-05, 1.2353847523627337e-05, 0.00033576454734429717, 2.0039094579260563e-06, 0.00013562414096668363, 1.5761628446853138e-06, 0.001389474724419415, 5.398772373155225e-06, 1.1517908205860294e-05, 0.00036198386806063354, 4.553077360469615e-06, 0.0008910265169106424, 1.7968846805160865e-05, 6.092932017054409e-05, 1.0496441063878592e-05, 0.00046839797869324684, 7.71999912103638e-05, 9.307084837928414e-06, 3.587029277696274e-05, 2.5261729206249584e-06, 5.755969596066279e-06, 7.99627468950348e-06, 4.62096886622021e-06], "target_probs": 0.9078506231307983}}


{"result": {"time": "2021-02-11 10:38:46.457021", "n_pass": [437, 35, 34], "n_token": 251, "loss": [0.10428968071937561, 0.10315673798322678], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def __init__(", "self", ",", "request", ",", "*", "args", ",", "**kwargs", ")", ":", "self", ")", ".", "__init__", "(", "request", ",", "*", "args", ",", "**", "kwargs", ")", "#NEWLINE#", "tenant_choices", "=", "[", "(", ")", "]", "#NEWLINE#", "(", "tenants", ",", "has_more", ")", "=", "api", ".", "keystone", ".", "tenant_list", "(", "request", ")", "#NEWLINE#", "for", "tenant", "in", "tenants", ":", "#NEWLINE#", "#INDENT#", "if", "tenant", ".", "enabled", ":", "#NEWLINE#", "#INDENT#", "tenant_choices", ".", "append", "(", "(", "net_type", ".", "id", ",", "tenant", ".", "name", ")", ")", "#NEWLINE#", "#UNINDENT#", "#UNINDENT#", "self", ".", "fields", "[", "'tenant_id'", "]", ".", "choices", "=", "tenant_choices", "#NEWLINE#", "if", ":", "#NEWLINE#", "#INDENT#", "self", ".", "fields", "[", "'net_profile_id'", "]", ".", "choices", "=", "self", ".", "get_network_profile_choices", "(", "request", ")", "#NEWLINE#", "#UNINDENT#", "if", "api", ".", "neutron", ".", "is_extension_supported", "(", "request", ",", "#NEWLINE#", "#INDENT#", "neutron_settings", "#NEWLINE#", "seg_id_range", "=", "neutron_settings", ".", "get", "#NEWLINE#", "self", ".", "seg_id_range", "=", "{", ":", "seg_id_range", ".", ":", "seg_id_range", ".", "get", "(", "'gre'", "'vxlan'", ":", "seg_id_range", ".", "get", "#NEWLINE#", "seg_id_help", "'For VLAN networks, the VLAN VID on the physical network that realizes the virtual network. Valid VLAN VIDs are %(vlan_min)s through %(vlan_max)s. For GRE or VXLAN networks, the tunnel ID. Valid tunnel IDs for GRE networks are %(gre_min)s through %(gre_max)s. For VXLAN networks, %(vxlan_min)s through %(vxlan_max)s.'", "self", ".", "seg_id_range", "'vlan_max'", ":", "self", ".", "seg_id_range", "[", "'vlan'", "]", "#NEWLINE#", "'gre_min'", ":", "self", ".", "seg_id_range", "[", "'gre'", "self", ".", "seg_id_range", "#NEWLINE#", "'vxlan_min'", ":", "self", ".", "seg_id_range", "[", "'vxlan_max'", ":", "self", ".", "seg_id_range", "[", "self", ".", "fields", "[", "=", "seg_id_help", "#NEWLINE#", "supported_provider_types", "=", "neutron_settings", ".", "get", "(", "'supported_provider_types'", "(", "supported_provider_types", "network_type_choices", "=", "PROVIDER_TYPES", "#NEWLINE#", "#INDENT#", "network_type_choices", "=", "[", "net_type", "for", "net_type", "in", "PROVIDER_TYPES", "if", "(", "net_type", "supported_provider_types", "(", "network_type_choices", ")", "#NEWLINE#", "#INDENT#", "self", ".", "_hide_provider_network_type", "(", ")", "#NEWLINE#", "#UNINDENT#", "else", ":", "#NEWLINE#", "#INDENT#", "self", "=", "network_type_choices", "#NEWLINE#", "#UNINDENT#", "#UNINDENT#", "else", ":", "#NEWLINE#", "#INDENT#", "self", ".", "_hide_provider_network_type", "(", ")"]}}
{"position": {"error_location": 67, "repair_targets": [49, 56, 71], "repair_candidates": [7, 20, 124, 132, 136, 139, 146, 154, 159, 168, 173, 179, 185, 67, 211, 213, 218, 34, 51, 203, 208, 221, 238, 4, 17, 45, 107, 118, 49, 56, 71, 23, 36, 26, 62, 88, 122, 126, 196, 150, 192, 2, 12, 79, 94, 103, 130, 152, 157, 166, 171, 177, 183, 187, 225, 236, 246, 194, 202, 219]}}
{"prediction": {"error_location": 0.9009642601013184, "repair_targets": [0.414040744304657, 0.48088082671165466, 0.007064022123813629], "repair_candidates": [4.0920553146861494e-05, 0.0025028504896909, 0.01452686171978712, 6.658176425844431e-05, 0.00021293976169545203, 9.802255590329878e-06, 0.00023789063561707735, 0.03480611369013786, 0.011157994158565998, 0.008712423034012318, 0.0019088953267782927, 0.414040744304657, 9.115574357565492e-06, 0.48088082671165466, 0.006857826374471188, 0.0002722546341829002, 0.007064022123813629, 4.6741206460865214e-05, 0.0005974253290332854, 2.3377189791062847e-05, 2.322794171050191e-05, 0.00027817432419396937, 0.0028107420075684786, 0.00018574458954390138, 4.649433321901597e-05, 0.0064962441101670265, 3.960414687753655e-05, 0.00038532164762727916, 6.653060700045899e-05, 2.3584683731314726e-05, 6.061021122150123e-05, 1.734155011945404e-05, 3.870319233101327e-06, 0.0009611471905373037, 7.1716885940986685e-06, 0.0008829526486806571, 5.891752607567469e-06, 0.00010791746171889827, 1.7113690773840062e-05, 0.00031402340391650796, 1.8819933984559611e-06, 0.00012879472342319787, 1.7086578054659185e-06, 0.0014709471724927425, 6.4810519688762724e-06, 1.337419689662056e-05, 0.00025922677014023066, 4.5613946895173285e-06, 0.0008937653619796038, 2.308869079570286e-05, 4.115965202799998e-05, 5.415669420472113e-06, 0.00031924108043313026, 5.178074206924066e-05, 9.535600838717073e-06, 3.719305095728487e-05, 2.6049699499708368e-06, 5.963904186501168e-06, 9.524675988359377e-06, 4.422319761943072e-06], "target_probs": 0.9019855856895447}}


{"result": {"time": "2021-02-11 10:38:46.672050", "n_pass": [439, 36, 35], "n_token": 247, "loss": [0.16328835487365723, 0.11234910786151886], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def __init__(", "self", ",", "request", ",", "*", "args", ",", "**kwargs", ")", ":", "self", ")", ".", "__init__", "(", "request", ",", "*", "args", ",", "**", "kwargs", ")", "#NEWLINE#", "tenant_choices", "=", "[", "(", ")", "]", "#NEWLINE#", "(", "tenants", ",", "has_more", ")", "=", "api", ".", "keystone", ".", "tenant_list", "(", "request", ")", "#NEWLINE#", "for", "tenant", "in", "tenants", ":", "#NEWLINE#", "#INDENT#", "if", "tenant", ".", "enabled", ":", "#NEWLINE#", "#INDENT#", "tenant_choices", ".", "append", "(", "(", "net_type", ".", "id", ",", "tenant", ".", "name", ")", ")", "#NEWLINE#", "#UNINDENT#", "#UNINDENT#", "self", ".", "fields", "[", "'tenant_id'", "]", ".", "choices", "=", "tenant_choices", "#NEWLINE#", "if", ":", "#NEWLINE#", "#INDENT#", "self", ".", "fields", "[", "'net_profile_id'", "]", ".", "choices", "=", "self", ".", "get_network_profile_choices", "(", "request", ")", "#NEWLINE#", "#UNINDENT#", "if", "api", ".", "neutron", ".", "is_extension_supported", "(", "request", ",", "#NEWLINE#", "#INDENT#", "neutron_settings", "#NEWLINE#", "seg_id_range", "=", "neutron_settings", ".", "get", "#NEWLINE#", "self", ".", "seg_id_range", "=", "{", ":", "seg_id_range", ".", ":", "seg_id_range", ".", "get", "(", "'gre'", "'vxlan'", ":", "seg_id_range", ".", "get", "#NEWLINE#", "seg_id_help", "'For VLAN networks, the VLAN VID on the physical network that realizes the virtual network. Valid VLAN VIDs are %(vlan_min)s through %(vlan_max)s. For GRE or VXLAN networks, the tunnel ID. Valid tunnel IDs for GRE networks are %(gre_min)s through %(gre_max)s. For VXLAN networks, %(vxlan_min)s through %(vxlan_max)s.'", "self", ".", "seg_id_range", "'vlan_max'", ":", "self", ".", "seg_id_range", "[", "'vlan'", "]", "#NEWLINE#", "'gre_min'", ":", "self", ".", "seg_id_range", "[", "'gre'", "self", ".", "seg_id_range", "#NEWLINE#", "'vxlan_min'", ":", "self", ".", "seg_id_range", "[", "'vxlan_max'", ":", "self", ".", "seg_id_range", "[", "self", ".", "fields", "[", "=", "seg_id_help", "#NEWLINE#", "supported_provider_types", "=", "neutron_settings", ".", "get", "(", "'supported_provider_types'", "(", "supported_provider_types", "network_type_choices", "=", "PROVIDER_TYPES", "#NEWLINE#", "#INDENT#", "network_type_choices", "=", "[", "net_type", "for", "net_type", "in", "PROVIDER_TYPES", "if", "(", "net_type", "supported_provider_types", "(", "network_type_choices", ")", "#NEWLINE#", "#INDENT#", "self", ".", "#UNINDENT#", "else", ":", "#NEWLINE#", "#INDENT#", "self", "=", "network_type_choices", "#NEWLINE#", "#UNINDENT#", "#UNINDENT#", "else", ":", "#NEWLINE#", "#INDENT#", "self", ".", "_hide_provider_network_type", "(", ")"]}}
{"position": {"error_location": 67, "repair_targets": [49, 56, 71], "repair_candidates": [7, 20, 124, 132, 136, 139, 146, 154, 159, 168, 173, 179, 185, 67, 211, 213, 218, 34, 51, 203, 208, 221, 234, 4, 17, 45, 107, 118, 49, 56, 71, 23, 36, 26, 62, 88, 122, 126, 196, 150, 192, 2, 12, 79, 94, 103, 130, 152, 157, 166, 171, 177, 183, 187, 225, 232, 242, 194, 202, 219]}}
{"prediction": {"error_location": 0.849346399307251, "repair_targets": [0.418917715549469, 0.46403968334198, 0.010774816386401653], "repair_candidates": [3.835469397017732e-05, 0.002379801357164979, 0.015275977551937103, 6.304340058704838e-05, 0.00019937778415624052, 9.569070243742317e-06, 0.00036591727985069156, 0.03468525409698486, 0.012493476271629333, 0.008458228781819344, 0.0020940254908055067, 0.418917715549469, 9.634128218749538e-06, 0.46403968334198, 0.00588754890486598, 0.0004905076930299401, 0.010774816386401653, 5.432566467789002e-05, 0.0014762732898816466, 3.597616887418553e-05, 3.452405144344084e-05, 0.0003474077966529876, 0.00487361429259181, 0.00019733000954147428, 8.677507867105305e-05, 0.009637952782213688, 4.8352816520491615e-05, 0.00040462121251039207, 8.070989133557305e-05, 2.31126159633277e-05, 7.065031240927055e-05, 2.83306490018731e-05, 4.018048457510304e-06, 0.0012516190763562918, 6.8891417868144345e-06, 0.000939679448492825, 5.667156528943451e-06, 0.0001515430776635185, 1.2797542694897857e-05, 0.0003378677065484226, 1.8923886955235503e-06, 0.00017660272715147585, 1.6172572259165463e-06, 0.0016406683716922998, 5.57395605937927e-06, 1.457194139220519e-05, 0.00036892088246531785, 4.4914859245182015e-06, 0.0009733100887387991, 2.120257522619795e-05, 3.8027628761483356e-05, 6.503018084913492e-06, 0.0003414037055335939, 3.743584966287017e-05, 7.632220331288408e-06, 3.80904930352699e-05, 3.943422598240431e-06, 6.859791028546169e-06, 1.356188477075193e-05, 4.79716572954203e-06], "target_probs": 0.8937321901321411}}


{"result": {"time": "2021-02-11 10:38:46.884160", "n_pass": [440, 37, 36], "n_token": 243, "loss": [0.20601902902126312, 0.14394712448120117], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def __init__(", "self", ",", "request", ",", "*", "args", ",", "**kwargs", ")", ":", "self", ")", ".", "__init__", "(", "request", ",", "*", "args", ",", "**", "kwargs", ")", "#NEWLINE#", "tenant_choices", "=", "[", "(", ")", "]", "#NEWLINE#", "(", "tenants", ",", "has_more", ")", "=", "api", ".", "keystone", ".", "tenant_list", "(", "request", ")", "#NEWLINE#", "for", "tenant", "in", "tenants", ":", "#NEWLINE#", "#INDENT#", "if", "tenant", ".", "enabled", ":", "#NEWLINE#", "#INDENT#", "tenant_choices", ".", "append", "(", "(", "net_type", ".", "id", ",", "tenant", ".", "name", ")", ")", "#NEWLINE#", "#UNINDENT#", "#UNINDENT#", "self", ".", "fields", "[", "'tenant_id'", "]", ".", "choices", "=", "tenant_choices", "#NEWLINE#", "if", ":", "#NEWLINE#", "#INDENT#", "self", ".", "fields", "[", "'net_profile_id'", "]", ".", "choices", "=", "self", ".", "get_network_profile_choices", "(", "request", ")", "#NEWLINE#", "#UNINDENT#", "if", "api", ".", "neutron", ".", "is_extension_supported", "(", "request", ",", "#NEWLINE#", "#INDENT#", "neutron_settings", "#NEWLINE#", "seg_id_range", "=", "neutron_settings", ".", "get", "#NEWLINE#", "self", ".", "seg_id_range", "=", "{", ":", "seg_id_range", ".", ":", "seg_id_range", ".", "get", "(", "'gre'", "'vxlan'", ":", "seg_id_range", ".", "get", "#NEWLINE#", "seg_id_help", "'For VLAN networks, the VLAN VID on the physical network that realizes the virtual network. Valid VLAN VIDs are %(vlan_min)s through %(vlan_max)s. For GRE or VXLAN networks, the tunnel ID. Valid tunnel IDs for GRE networks are %(gre_min)s through %(gre_max)s. For VXLAN networks, %(vxlan_min)s through %(vxlan_max)s.'", "self", ".", "seg_id_range", "'vlan_max'", ":", "self", ".", "seg_id_range", "[", "'vlan'", "]", "#NEWLINE#", "'gre_min'", ":", "self", ".", "seg_id_range", "[", "'gre'", "self", ".", "seg_id_range", "#NEWLINE#", "'vxlan_min'", ":", "self", ".", "seg_id_range", "[", "'vxlan_max'", ":", "self", ".", "seg_id_range", "[", "self", ".", "fields", "[", "=", "seg_id_help", "#NEWLINE#", "supported_provider_types", "=", "neutron_settings", ".", "get", "(", "'supported_provider_types'", "(", "supported_provider_types", "network_type_choices", "=", "PROVIDER_TYPES", "#NEWLINE#", "#INDENT#", "network_type_choices", "=", "[", "net_type", "for", "net_type", "in", "PROVIDER_TYPES", "if", "(", "net_type", "supported_provider_types", "(", "network_type_choices", ")", "#NEWLINE#", "#INDENT#", "self", ".", "#INDENT#", "self", "=", "network_type_choices", "#NEWLINE#", "#UNINDENT#", "#UNINDENT#", "else", ":", "#NEWLINE#", "#INDENT#", "self", ".", "_hide_provider_network_type", "(", ")"]}}
{"position": {"error_location": 67, "repair_targets": [49, 56, 71], "repair_candidates": [7, 20, 124, 132, 136, 139, 146, 154, 159, 168, 173, 179, 185, 67, 211, 213, 218, 34, 51, 203, 208, 221, 230, 4, 17, 45, 107, 118, 49, 56, 71, 23, 36, 26, 62, 88, 122, 126, 196, 150, 192, 2, 12, 79, 94, 103, 130, 152, 157, 166, 171, 177, 183, 187, 225, 228, 238, 194, 202, 219]}}
{"prediction": {"error_location": 0.8138176798820496, "repair_targets": [0.5089989900588989, 0.34620270133018494, 0.010731837712228298], "repair_candidates": [4.284643364371732e-05, 0.002762732794508338, 0.017652472481131554, 7.228650065371767e-05, 0.0002404595143161714, 1.4287000340118539e-05, 0.0004109726578462869, 0.04648850858211517, 0.013333509676158428, 0.012198982760310173, 0.0022936800960451365, 0.5089989900588989, 1.3754895917372778e-05, 0.34620270133018494, 0.005148164462298155, 0.0003619395720306784, 0.010731837712228298, 6.56191841699183e-05, 0.0008616588311269879, 4.067508416483179e-05, 3.741329783224501e-05, 0.0005326620303094387, 0.008406643755733967, 0.00034676925861276686, 0.00014759165060240775, 0.012454436160624027, 6.789406324969605e-05, 0.0007373398984782398, 0.00014204853505361825, 3.461296364548616e-05, 0.0002191590756410733, 4.3373616790631786e-05, 6.705199666612316e-06, 0.0014791785506531596, 1.0446913620398846e-05, 0.00139520107768476, 1.2394604709697887e-05, 0.0001357711007585749, 2.3835786123527214e-05, 0.00049865513574332, 3.2317966542905197e-06, 0.0002054270589724183, 2.8252497941139154e-06, 0.0021999976597726345, 1.0022726200986654e-05, 2.1670484784408472e-05, 0.0006678678910247982, 9.09378104552161e-06, 0.0014114601071923971, 2.5586750780348666e-05, 6.998061144258827e-05, 8.804325261735357e-06, 0.0004454962909221649, 0.00010879228648263961, 1.7021286112139933e-05, 0.00010049375850940123, 1.4180449170453358e-06, 7.391830422420753e-06, 8.761473509366624e-06, 6.565802323166281e-06], "target_probs": 0.8659335374832153}}


{"result": {"time": "2021-02-11 10:38:47.093570", "n_pass": [442, 38, 37], "n_token": 239, "loss": [0.2758232057094574, 0.14414310455322266], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def __init__(", "self", ",", "request", ",", "*", "args", ",", "**kwargs", ")", ":", "self", ")", ".", "__init__", "(", "request", ",", "*", "args", ",", "**", "kwargs", ")", "#NEWLINE#", "tenant_choices", "=", "[", "(", ")", "]", "#NEWLINE#", "(", "tenants", ",", "has_more", ")", "=", "api", ".", "keystone", ".", "tenant_list", "(", "request", ")", "#NEWLINE#", "for", "tenant", "in", "tenants", ":", "#NEWLINE#", "#INDENT#", "if", "tenant", ".", "enabled", ":", "#NEWLINE#", "#INDENT#", "tenant_choices", ".", "append", "(", "(", "net_type", ".", "id", ",", "tenant", ".", "name", ")", ")", "#NEWLINE#", "#UNINDENT#", "#UNINDENT#", "self", ".", "fields", "[", "'tenant_id'", "]", ".", "choices", "=", "tenant_choices", "#NEWLINE#", "if", ":", "#NEWLINE#", "#INDENT#", "self", ".", "fields", "[", "'net_profile_id'", "]", ".", "choices", "=", "self", ".", "get_network_profile_choices", "(", "request", ")", "#NEWLINE#", "#UNINDENT#", "if", "api", ".", "neutron", ".", "is_extension_supported", "(", "request", ",", "#NEWLINE#", "#INDENT#", "neutron_settings", "#NEWLINE#", "seg_id_range", "=", "neutron_settings", ".", "get", "#NEWLINE#", "self", ".", "seg_id_range", "=", "{", ":", "seg_id_range", ".", ":", "seg_id_range", ".", "get", "(", "'gre'", "'vxlan'", ":", "seg_id_range", ".", "get", "#NEWLINE#", "seg_id_help", "'For VLAN networks, the VLAN VID on the physical network that realizes the virtual network. Valid VLAN VIDs are %(vlan_min)s through %(vlan_max)s. For GRE or VXLAN networks, the tunnel ID. Valid tunnel IDs for GRE networks are %(gre_min)s through %(gre_max)s. For VXLAN networks, %(vxlan_min)s through %(vxlan_max)s.'", "self", ".", "seg_id_range", "'vlan_max'", ":", "self", ".", "seg_id_range", "[", "'vlan'", "]", "#NEWLINE#", "'gre_min'", ":", "self", ".", "seg_id_range", "[", "'gre'", "self", ".", "seg_id_range", "#NEWLINE#", "'vxlan_min'", ":", "self", ".", "seg_id_range", "[", "'vxlan_max'", ":", "self", ".", "seg_id_range", "[", "self", ".", "fields", "[", "=", "seg_id_help", "#NEWLINE#", "supported_provider_types", "=", "neutron_settings", ".", "get", "(", "'supported_provider_types'", "(", "supported_provider_types", "network_type_choices", "=", "PROVIDER_TYPES", "#NEWLINE#", "#INDENT#", "network_type_choices", "=", "[", "net_type", "for", "net_type", "in", "PROVIDER_TYPES", "if", "(", "net_type", "supported_provider_types", "(", "network_type_choices", ")", "#NEWLINE#", "#INDENT#", "self", ".", "#INDENT#", "self", "=", "network_type_choices", ":", "#NEWLINE#", "#INDENT#", "self", ".", "_hide_provider_network_type", "(", ")"]}}
{"position": {"error_location": 67, "repair_targets": [49, 56, 71], "repair_candidates": [7, 20, 124, 132, 136, 139, 146, 154, 159, 168, 173, 179, 185, 67, 211, 213, 218, 34, 51, 203, 208, 221, 230, 4, 17, 45, 107, 118, 49, 56, 71, 23, 36, 26, 62, 88, 122, 126, 196, 150, 192, 2, 12, 79, 94, 103, 130, 152, 157, 166, 171, 177, 183, 187, 225, 228, 234, 194, 202, 219]}}
{"prediction": {"error_location": 0.7589471340179443, "repair_targets": [0.4914586842060089, 0.36784207820892334, 0.006463102996349335], "repair_candidates": [4.355029159341939e-05, 0.0026253117248415947, 0.014377953484654427, 6.545247015310451e-05, 0.00023873685859143734, 1.2220510143379215e-05, 0.0003257710486650467, 0.050010453909635544, 0.013160062953829765, 0.01056295819580555, 0.002795193577185273, 0.4914586842060089, 1.4745767657586839e-05, 0.36784207820892334, 0.005897191818803549, 0.0003937151050195098, 0.006463102996349335, 5.999603308737278e-05, 0.0007969096768647432, 3.463532993919216e-05, 3.449174982961267e-05, 0.000477829686133191, 0.006891816854476929, 0.00029814912704750896, 0.0001577940711285919, 0.015123371034860611, 6.269232835620642e-05, 0.000481306022265926, 0.00013498708722181618, 3.906627171090804e-05, 0.00016605405835434794, 3.7427475035656244e-05, 7.517186531913467e-06, 0.0018013123190030456, 1.4424721484829206e-05, 0.0016455240547657013, 1.452899869036628e-05, 0.00017168778867926449, 2.8601727535715327e-05, 0.0004829380486626178, 3.968572855228558e-06, 0.00023247995704878122, 3.4868733109760797e-06, 0.0021676470059901476, 1.1261239706072956e-05, 1.6026697267079726e-05, 0.000618027406744659, 8.759997399465647e-06, 0.0010334827238693833, 2.6813211661647074e-05, 6.447318446589634e-05, 5.902958037040662e-06, 0.0003764830471482128, 6.882812158437446e-05, 1.242102007381618e-05, 4.945325053995475e-05, 1.9860349311784375e-06, 1.585075369803235e-05, 2.2628157239523716e-05, 9.78437401499832e-06], "target_probs": 0.8657638430595398}}


{"result": {"time": "2021-02-11 10:38:47.302548", "n_pass": [444, 39, 38], "n_token": 235, "loss": [0.13518023490905762, 0.09022077918052673], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def __init__(", "self", ",", "request", ",", "*", "args", ",", "**kwargs", ")", ":", "self", ")", ".", "__init__", "(", "request", ",", "*", "args", ",", "**", "kwargs", ")", "#NEWLINE#", "tenant_choices", "=", "[", "(", ")", "]", "#NEWLINE#", "(", "tenants", ",", "has_more", ")", "=", "api", ".", "keystone", ".", "tenant_list", "(", "request", ")", "#NEWLINE#", "for", "tenant", "in", "tenants", ":", "#NEWLINE#", "#INDENT#", "if", "tenant", ".", "enabled", ":", "#NEWLINE#", "#INDENT#", "tenant_choices", ".", "append", "(", "(", "net_type", ".", "id", ",", "tenant", ".", "name", ")", ")", "#NEWLINE#", "#UNINDENT#", "#UNINDENT#", "self", ".", "fields", "[", "'tenant_id'", "]", ".", "choices", "=", "tenant_choices", "#NEWLINE#", "if", ":", "#NEWLINE#", "#INDENT#", "self", ".", "fields", "[", "'net_profile_id'", "]", ".", "choices", "=", "self", ".", "get_network_profile_choices", "(", "request", ")", "#NEWLINE#", "#UNINDENT#", "if", "api", ".", "neutron", ".", "is_extension_supported", "(", "request", ",", "#NEWLINE#", "#INDENT#", "neutron_settings", "#NEWLINE#", "seg_id_range", "=", "neutron_settings", ".", "get", "#NEWLINE#", "self", ".", "seg_id_range", "=", "{", ":", "seg_id_range", ".", ":", "seg_id_range", ".", "get", "(", "'gre'", "'vxlan'", ":", "seg_id_range", ".", "get", "#NEWLINE#", "seg_id_help", "'For VLAN networks, the VLAN VID on the physical network that realizes the virtual network. Valid VLAN VIDs are %(vlan_min)s through %(vlan_max)s. For GRE or VXLAN networks, the tunnel ID. Valid tunnel IDs for GRE networks are %(gre_min)s through %(gre_max)s. For VXLAN networks, %(vxlan_min)s through %(vxlan_max)s.'", "self", ".", "seg_id_range", "'vlan_max'", ":", "self", ".", "seg_id_range", "[", "'vlan'", "]", "#NEWLINE#", "'gre_min'", ":", "self", ".", "seg_id_range", "[", "'gre'", "self", ".", "seg_id_range", "#NEWLINE#", "'vxlan_min'", ":", "self", ".", "seg_id_range", "[", "'vxlan_max'", ":", "self", ".", "seg_id_range", "[", "self", ".", "fields", "[", "=", "seg_id_help", "#NEWLINE#", "supported_provider_types", "=", "neutron_settings", ".", "get", "(", "'supported_provider_types'", "(", "supported_provider_types", "network_type_choices", "=", "PROVIDER_TYPES", "#NEWLINE#", "#INDENT#", "network_type_choices", "=", "[", "net_type", "for", "net_type", "in", "PROVIDER_TYPES", "if", "(", "net_type", "supported_provider_types", "(", "network_type_choices", ")", "#NEWLINE#", "#INDENT#", "self", ".", "#INDENT#", "self", "=", "network_type_choices", ":", "#NEWLINE#", "#INDENT#", "self"]}}
{"position": {"error_location": 67, "repair_targets": [49, 56, 71], "repair_candidates": [7, 20, 124, 132, 136, 139, 146, 154, 159, 168, 173, 179, 185, 67, 211, 213, 218, 34, 51, 203, 208, 221, 230, 4, 17, 45, 107, 118, 49, 56, 71, 23, 36, 26, 62, 88, 122, 126, 196, 150, 192, 2, 12, 79, 94, 103, 130, 152, 157, 166, 171, 177, 183, 187, 225, 228, 234, 194, 202, 219]}}
{"prediction": {"error_location": 0.8735584616661072, "repair_targets": [0.36569491028785706, 0.5424478650093079, 0.00558664184063673], "repair_candidates": [2.2394695406546816e-05, 0.0017418890492990613, 0.009401797316968441, 4.4839624024461955e-05, 0.0001956253981916234, 1.0091702279169112e-05, 0.0002186124911531806, 0.030056443065404892, 0.009771853685379028, 0.007521158084273338, 0.0017998077673837543, 0.36569491028785706, 9.026693987834733e-06, 0.5424478650093079, 0.005321705248206854, 0.00016988579591270536, 0.00558664184063673, 3.4811575460480526e-05, 0.0006865983596071601, 2.190343730035238e-05, 3.2054089388111606e-05, 0.00039960816502571106, 0.003899085335433483, 0.00019559943757485598, 7.094399188645184e-05, 0.009528725408017635, 5.626134225167334e-05, 0.00026770203839987516, 6.696215132251382e-05, 2.1810179532621987e-05, 6.510825915029272e-05, 1.789219277270604e-05, 4.229576006764546e-06, 0.0009617015602998435, 1.0438652680022642e-05, 0.0008431475143879652, 7.968362297106069e-06, 9.39867677516304e-05, 1.3169418707548175e-05, 0.00025590320001356304, 1.8836932440535747e-06, 0.00012578367022797465, 1.7761972230800893e-06, 0.0009863614104688168, 8.098106263787486e-06, 9.177066203847062e-06, 0.0003171134158037603, 6.236802164494293e-06, 0.00042781009688042104, 2.3487395083066076e-05, 2.8386271878844127e-05, 2.8594108698598575e-06, 0.00018636431195773184, 4.3769439798779786e-05, 1.2087081813660916e-05, 2.340718674531672e-05, 3.1143813430389855e-06, 1.7515800209366716e-05, 8.086989691946656e-05, 0.00012377290113363415], "target_probs": 0.9137294292449951}}


{"result": {"time": "2021-02-11 10:38:47.509856", "n_pass": [448, 40, 39], "n_token": 232, "loss": [0.14675016701221466, 0.1621401607990265], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def __init__(", "self", ",", "request", ",", "*", "args", ",", "self", ")", ".", "__init__", "(", "request", ",", "*", "args", ",", "**", "kwargs", ")", "#NEWLINE#", "tenant_choices", "=", "[", "(", ")", "]", "#NEWLINE#", "(", "tenants", ",", "has_more", ")", "=", "api", ".", "keystone", ".", "tenant_list", "(", "request", ")", "#NEWLINE#", "for", "tenant", "in", "tenants", ":", "#NEWLINE#", "#INDENT#", "if", "tenant", ".", "enabled", ":", "#NEWLINE#", "#INDENT#", "tenant_choices", ".", "append", "(", "(", "net_type", ".", "id", ",", "tenant", ".", "name", ")", ")", "#NEWLINE#", "#UNINDENT#", "#UNINDENT#", "self", ".", "fields", "[", "'tenant_id'", "]", ".", "choices", "=", "tenant_choices", "#NEWLINE#", "if", ":", "#NEWLINE#", "#INDENT#", "self", ".", "fields", "[", "'net_profile_id'", "]", ".", "choices", "=", "self", ".", "get_network_profile_choices", "(", "request", ")", "#NEWLINE#", "#UNINDENT#", "if", "api", ".", "neutron", ".", "is_extension_supported", "(", "request", ",", "#NEWLINE#", "#INDENT#", "neutron_settings", "#NEWLINE#", "seg_id_range", "=", "neutron_settings", ".", "get", "#NEWLINE#", "self", ".", "seg_id_range", "=", "{", ":", "seg_id_range", ".", ":", "seg_id_range", ".", "get", "(", "'gre'", "'vxlan'", ":", "seg_id_range", ".", "get", "#NEWLINE#", "seg_id_help", "'For VLAN networks, the VLAN VID on the physical network that realizes the virtual network. Valid VLAN VIDs are %(vlan_min)s through %(vlan_max)s. For GRE or VXLAN networks, the tunnel ID. Valid tunnel IDs for GRE networks are %(gre_min)s through %(gre_max)s. For VXLAN networks, %(vxlan_min)s through %(vxlan_max)s.'", "self", ".", "seg_id_range", "'vlan_max'", ":", "self", ".", "seg_id_range", "[", "'vlan'", "]", "#NEWLINE#", "'gre_min'", ":", "self", ".", "seg_id_range", "[", "'gre'", "self", ".", "seg_id_range", "#NEWLINE#", "'vxlan_min'", ":", "self", ".", "seg_id_range", "[", "'vxlan_max'", ":", "self", ".", "seg_id_range", "[", "self", ".", "fields", "[", "=", "seg_id_help", "#NEWLINE#", "supported_provider_types", "=", "neutron_settings", ".", "get", "(", "'supported_provider_types'", "(", "supported_provider_types", "network_type_choices", "=", "PROVIDER_TYPES", "#NEWLINE#", "#INDENT#", "network_type_choices", "=", "[", "net_type", "for", "net_type", "in", "PROVIDER_TYPES", "if", "(", "net_type", "supported_provider_types", "(", "network_type_choices", ")", "#NEWLINE#", "#INDENT#", "self", ".", "#INDENT#", "self", "=", "network_type_choices", ":", "#NEWLINE#", "#INDENT#", "self"]}}
{"position": {"error_location": 64, "repair_targets": [46, 53, 68], "repair_candidates": [7, 17, 121, 129, 133, 136, 143, 151, 156, 165, 170, 176, 182, 64, 208, 210, 215, 31, 48, 200, 205, 218, 227, 4, 14, 42, 104, 115, 46, 53, 68, 20, 33, 23, 59, 85, 119, 123, 193, 147, 189, 2, 9, 76, 91, 100, 127, 149, 154, 163, 168, 174, 180, 184, 222, 225, 231, 191, 199, 216]}}
{"prediction": {"error_location": 0.8635096549987793, "repair_targets": [0.471611887216568, 0.3720102906227112, 0.006699789315462112], "repair_candidates": [4.6701039536856115e-05, 0.0044940682128071785, 0.01137638371437788, 9.33348128455691e-05, 0.001660156762227416, 3.416066465433687e-05, 0.0014480407116934657, 0.05684242025017738, 0.01151208020746708, 0.010280095972120762, 0.003191983560100198, 0.471611887216568, 2.5033767087734304e-05, 0.3720102906227112, 0.005097331944853067, 0.0001930962025653571, 0.006699789315462112, 9.548569505568594e-05, 0.0008454325143247843, 5.701624104403891e-05, 5.07318509335164e-05, 0.0005817878409288824, 0.007210385054349899, 0.0003689126460812986, 8.79298968357034e-05, 0.024965208023786545, 0.00010769430082291365, 0.0004691492940764874, 0.00011906232248293236, 2.921425948443357e-05, 0.0001301199954468757, 3.166892201988958e-05, 1.0251658750348724e-05, 0.001248604035936296, 1.7538211977807805e-05, 0.0014115895610302687, 1.5763984265504405e-05, 0.00015546006034128368, 3.0055192837608047e-05, 0.0004931006697006524, 3.953029590775259e-06, 0.00019944628002122045, 3.6680735320260283e-06, 0.0019989823922514915, 1.1401095434848685e-05, 1.9134289686917327e-05, 0.0006688549765385687, 1.1959107723669149e-05, 0.0007789381197653711, 3.700096203829162e-05, 6.432235386455432e-05, 5.648376827593893e-06, 0.00042820782982744277, 8.991058712126687e-05, 2.061351369775366e-05, 4.954006362822838e-05, 5.1364945647947025e-06, 3.340582043165341e-05, 0.00019139520009048283, 0.00022939623158890754], "target_probs": 0.8503220081329346}}


{"result": {"time": "2021-02-11 10:38:47.717301", "n_pass": [454, 41, 40], "n_token": 229, "loss": [0.09141945093870163, 0.09501279145479202], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def __init__(", "self", ",", "request", ",", "*", "args", ",", "self", ")", ".", "__init__", "(", "request", ",", "*", "args", ",", "**", "kwargs", ")", "#NEWLINE#", "tenant_choices", ")", "]", "#NEWLINE#", "(", "tenants", ",", "has_more", ")", "=", "api", ".", "keystone", ".", "tenant_list", "(", "request", ")", "#NEWLINE#", "for", "tenant", "in", "tenants", ":", "#NEWLINE#", "#INDENT#", "if", "tenant", ".", "enabled", ":", "#NEWLINE#", "#INDENT#", "tenant_choices", ".", "append", "(", "(", "net_type", ".", "id", ",", "tenant", ".", "name", ")", ")", "#NEWLINE#", "#UNINDENT#", "#UNINDENT#", "self", ".", "fields", "[", "'tenant_id'", "]", ".", "choices", "=", "tenant_choices", "#NEWLINE#", "if", ":", "#NEWLINE#", "#INDENT#", "self", ".", "fields", "[", "'net_profile_id'", "]", ".", "choices", "=", "self", ".", "get_network_profile_choices", "(", "request", ")", "#NEWLINE#", "#UNINDENT#", "if", "api", ".", "neutron", ".", "is_extension_supported", "(", "request", ",", "#NEWLINE#", "#INDENT#", "neutron_settings", "#NEWLINE#", "seg_id_range", "=", "neutron_settings", ".", "get", "#NEWLINE#", "self", ".", "seg_id_range", "=", "{", ":", "seg_id_range", ".", ":", "seg_id_range", ".", "get", "(", "'gre'", "'vxlan'", ":", "seg_id_range", ".", "get", "#NEWLINE#", "seg_id_help", "'For VLAN networks, the VLAN VID on the physical network that realizes the virtual network. Valid VLAN VIDs are %(vlan_min)s through %(vlan_max)s. For GRE or VXLAN networks, the tunnel ID. Valid tunnel IDs for GRE networks are %(gre_min)s through %(gre_max)s. For VXLAN networks, %(vxlan_min)s through %(vxlan_max)s.'", "self", ".", "seg_id_range", "'vlan_max'", ":", "self", ".", "seg_id_range", "[", "'vlan'", "]", "#NEWLINE#", "'gre_min'", ":", "self", ".", "seg_id_range", "[", "'gre'", "self", ".", "seg_id_range", "#NEWLINE#", "'vxlan_min'", ":", "self", ".", "seg_id_range", "[", "'vxlan_max'", ":", "self", ".", "seg_id_range", "[", "self", ".", "fields", "[", "=", "seg_id_help", "#NEWLINE#", "supported_provider_types", "=", "neutron_settings", ".", "get", "(", "'supported_provider_types'", "(", "supported_provider_types", "network_type_choices", "=", "PROVIDER_TYPES", "#NEWLINE#", "#INDENT#", "network_type_choices", "=", "[", "net_type", "for", "net_type", "in", "PROVIDER_TYPES", "if", "(", "net_type", "supported_provider_types", "(", "network_type_choices", ")", "#NEWLINE#", "#INDENT#", "self", ".", "#INDENT#", "self", "=", "network_type_choices", ":", "#NEWLINE#", "#INDENT#", "self"]}}
{"position": {"error_location": 61, "repair_targets": [43, 50, 65], "repair_candidates": [7, 17, 118, 126, 130, 133, 140, 148, 153, 162, 167, 173, 179, 61, 205, 207, 212, 28, 45, 197, 202, 215, 224, 4, 14, 39, 101, 112, 43, 50, 65, 20, 30, 23, 56, 82, 116, 120, 190, 144, 186, 2, 9, 73, 88, 97, 124, 146, 151, 160, 165, 171, 177, 181, 219, 222, 228, 188, 196, 213]}}
{"prediction": {"error_location": 0.9126349091529846, "repair_targets": [0.45064523816108704, 0.449919730424881, 0.008796332404017448], "repair_candidates": [6.710874004056677e-05, 0.00820358470082283, 0.013750152662396431, 0.00016285813762806356, 0.0018499523866921663, 3.105348878307268e-05, 0.001947829034179449, 0.004972115624696016, 0.023016663268208504, 0.008526847697794437, 0.001552122994326055, 0.45064523816108704, 1.8525210180087015e-05, 0.449919730424881, 0.004810606129467487, 0.00022933760192245245, 0.008796332404017448, 7.662684947717935e-05, 0.0006530591053888202, 3.507730798446573e-05, 3.4254124329891056e-05, 0.00036156855640001595, 0.00413911510258913, 0.0002508549368940294, 7.080400246195495e-05, 0.008079892955720425, 6.500948074972257e-05, 0.0005610132939182222, 9.801209671422839e-05, 2.5625809939811006e-05, 0.00013846566434949636, 2.6293897462892346e-05, 7.0987198341754265e-06, 0.000981991644948721, 1.1021461432392243e-05, 0.0013021341292187572, 1.4526797713187989e-05, 0.00011858774087158963, 2.9286982680787332e-05, 0.00037414763937704265, 3.109395265710191e-06, 0.00016758835408836603, 2.7679150207404746e-06, 0.0016794619150459766, 1.0472153917362448e-05, 1.99594196601538e-05, 0.0005488610477186739, 1.2978407539776526e-05, 0.0007924811798147857, 2.7786225473391823e-05, 3.83923361368943e-05, 4.776337846124079e-06, 0.0002733164292294532, 6.679982470814139e-05, 1.5252772755047772e-05, 3.978052336606197e-05, 4.04881575377658e-06, 2.221363683929667e-05, 0.0001608144084457308, 0.00015455771062988788], "target_probs": 0.9093613028526306}}


{"result": {"time": "2021-02-11 10:38:47.920900", "n_pass": [455, 42, 41], "n_token": 226, "loss": [0.05059955269098282, 0.09701209515333176], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def __init__(", "self", ",", "request", ",", "*", "args", ",", "self", ")", ".", "__init__", "(", "request", ",", "*", "args", ",", "**", "kwargs", ")", "#NEWLINE#", "tenant_choices", "(", "tenants", ",", "has_more", ")", "=", "api", ".", "keystone", ".", "tenant_list", "(", "request", ")", "#NEWLINE#", "for", "tenant", "in", "tenants", ":", "#NEWLINE#", "#INDENT#", "if", "tenant", ".", "enabled", ":", "#NEWLINE#", "#INDENT#", "tenant_choices", ".", "append", "(", "(", "net_type", ".", "id", ",", "tenant", ".", "name", ")", ")", "#NEWLINE#", "#UNINDENT#", "#UNINDENT#", "self", ".", "fields", "[", "'tenant_id'", "]", ".", "choices", "=", "tenant_choices", "#NEWLINE#", "if", ":", "#NEWLINE#", "#INDENT#", "self", ".", "fields", "[", "'net_profile_id'", "]", ".", "choices", "=", "self", ".", "get_network_profile_choices", "(", "request", ")", "#NEWLINE#", "#UNINDENT#", "if", "api", ".", "neutron", ".", "is_extension_supported", "(", "request", ",", "#NEWLINE#", "#INDENT#", "neutron_settings", "#NEWLINE#", "seg_id_range", "=", "neutron_settings", ".", "get", "#NEWLINE#", "self", ".", "seg_id_range", "=", "{", ":", "seg_id_range", ".", ":", "seg_id_range", ".", "get", "(", "'gre'", "'vxlan'", ":", "seg_id_range", ".", "get", "#NEWLINE#", "seg_id_help", "'For VLAN networks, the VLAN VID on the physical network that realizes the virtual network. Valid VLAN VIDs are %(vlan_min)s through %(vlan_max)s. For GRE or VXLAN networks, the tunnel ID. Valid tunnel IDs for GRE networks are %(gre_min)s through %(gre_max)s. For VXLAN networks, %(vxlan_min)s through %(vxlan_max)s.'", "self", ".", "seg_id_range", "'vlan_max'", ":", "self", ".", "seg_id_range", "[", "'vlan'", "]", "#NEWLINE#", "'gre_min'", ":", "self", ".", "seg_id_range", "[", "'gre'", "self", ".", "seg_id_range", "#NEWLINE#", "'vxlan_min'", ":", "self", ".", "seg_id_range", "[", "'vxlan_max'", ":", "self", ".", "seg_id_range", "[", "self", ".", "fields", "[", "=", "seg_id_help", "#NEWLINE#", "supported_provider_types", "=", "neutron_settings", ".", "get", "(", "'supported_provider_types'", "(", "supported_provider_types", "network_type_choices", "=", "PROVIDER_TYPES", "#NEWLINE#", "#INDENT#", "network_type_choices", "=", "[", "net_type", "for", "net_type", "in", "PROVIDER_TYPES", "if", "(", "net_type", "supported_provider_types", "(", "network_type_choices", ")", "#NEWLINE#", "#INDENT#", "self", ".", "#INDENT#", "self", "=", "network_type_choices", ":", "#NEWLINE#", "#INDENT#", "self"]}}
{"position": {"error_location": 58, "repair_targets": [40, 47, 62], "repair_candidates": [7, 17, 115, 123, 127, 130, 137, 145, 150, 159, 164, 170, 176, 58, 202, 204, 209, 25, 42, 194, 199, 212, 221, 4, 14, 36, 98, 109, 40, 47, 62, 20, 27, 23, 53, 79, 113, 117, 187, 141, 183, 2, 9, 70, 85, 94, 121, 143, 148, 157, 162, 168, 174, 178, 216, 219, 225, 185, 193, 210]}}
{"prediction": {"error_location": 0.9506591558456421, "repair_targets": [0.4219093322753906, 0.47695016860961914, 0.008685513399541378], "repair_candidates": [5.309418702381663e-05, 0.005288694053888321, 0.009728442877531052, 0.00010972892050631344, 0.001785547356121242, 3.519110759953037e-05, 0.0025006395298987627, 0.022731272503733635, 0.007316580042243004, 0.011257834732532501, 0.0032440710347145796, 0.4219093322753906, 2.3954235075507313e-05, 0.47695016860961914, 0.002857499523088336, 0.00015890333452261984, 0.008685513399541378, 7.725806790404022e-05, 0.0006970950635150075, 3.9956081309355795e-05, 4.4640255509875715e-05, 0.0004539327637758106, 0.004953330382704735, 0.0002749130071606487, 7.621037366334349e-05, 0.011195867322385311, 6.36402764939703e-05, 0.0005044161807745695, 9.900105214910582e-05, 2.232233055110555e-05, 9.510392555966973e-05, 3.0255705496529117e-05, 8.847216122376267e-06, 0.0011149734491482377, 1.3298317753651645e-05, 0.0010649013565853238, 1.6046324162743986e-05, 0.0001390397228533402, 3.141670094919391e-05, 0.000330815528286621, 3.643533545982791e-06, 0.000165633435244672, 3.2537161587242736e-06, 0.0016373676480725408, 1.2203582627989817e-05, 2.3342166969086975e-05, 0.0005374699831008911, 1.5656281902920455e-05, 0.0007597568910568953, 3.077753717661835e-05, 3.340777402627282e-05, 5.32080048287753e-06, 0.00029975580400787294, 7.554067997261882e-05, 1.689671989879571e-05, 4.176537549938075e-05, 4.564805749396328e-06, 2.3858228814788163e-05, 0.00016236239753197879, 0.0001635841908864677], "target_probs": 0.9075450301170349}}


{"result": {"time": "2021-02-11 10:38:48.123722", "n_pass": [458, 43, 42], "n_token": 223, "loss": [0.056913673877716064, 0.06356338411569595], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def __init__(", "self", ",", "request", ",", "*", "args", ",", "self", ")", ".", "__init__", "(", "request", ",", "*", "args", ",", "**", "kwargs", ")", "#NEWLINE#", "tenant_choices", "(", "tenants", ",", "has_more", ")", "=", ".", "tenant_list", "(", "request", ")", "#NEWLINE#", "for", "tenant", "in", "tenants", ":", "#NEWLINE#", "#INDENT#", "if", "tenant", ".", "enabled", ":", "#NEWLINE#", "#INDENT#", "tenant_choices", ".", "append", "(", "(", "net_type", ".", "id", ",", "tenant", ".", "name", ")", ")", "#NEWLINE#", "#UNINDENT#", "#UNINDENT#", "self", ".", "fields", "[", "'tenant_id'", "]", ".", "choices", "=", "tenant_choices", "#NEWLINE#", "if", ":", "#NEWLINE#", "#INDENT#", "self", ".", "fields", "[", "'net_profile_id'", "]", ".", "choices", "=", "self", ".", "get_network_profile_choices", "(", "request", ")", "#NEWLINE#", "#UNINDENT#", "if", "api", ".", "neutron", ".", "is_extension_supported", "(", "request", ",", "#NEWLINE#", "#INDENT#", "neutron_settings", "#NEWLINE#", "seg_id_range", "=", "neutron_settings", ".", "get", "#NEWLINE#", "self", ".", "seg_id_range", "=", "{", ":", "seg_id_range", ".", ":", "seg_id_range", ".", "get", "(", "'gre'", "'vxlan'", ":", "seg_id_range", ".", "get", "#NEWLINE#", "seg_id_help", "'For VLAN networks, the VLAN VID on the physical network that realizes the virtual network. Valid VLAN VIDs are %(vlan_min)s through %(vlan_max)s. For GRE or VXLAN networks, the tunnel ID. Valid tunnel IDs for GRE networks are %(gre_min)s through %(gre_max)s. For VXLAN networks, %(vxlan_min)s through %(vxlan_max)s.'", "self", ".", "seg_id_range", "'vlan_max'", ":", "self", ".", "seg_id_range", "[", "'vlan'", "]", "#NEWLINE#", "'gre_min'", ":", "self", ".", "seg_id_range", "[", "'gre'", "self", ".", "seg_id_range", "#NEWLINE#", "'vxlan_min'", ":", "self", ".", "seg_id_range", "[", "'vxlan_max'", ":", "self", ".", "seg_id_range", "[", "self", ".", "fields", "[", "=", "seg_id_help", "#NEWLINE#", "supported_provider_types", "=", "neutron_settings", ".", "get", "(", "'supported_provider_types'", "(", "supported_provider_types", "network_type_choices", "=", "PROVIDER_TYPES", "#NEWLINE#", "#INDENT#", "network_type_choices", "=", "[", "net_type", "for", "net_type", "in", "PROVIDER_TYPES", "if", "(", "net_type", "supported_provider_types", "(", "network_type_choices", ")", "#NEWLINE#", "#INDENT#", "self", ".", "#INDENT#", "self", "=", "network_type_choices", ":", "#NEWLINE#", "#INDENT#", "self"]}}
{"position": {"error_location": 55, "repair_targets": [37, 44, 59], "repair_candidates": [7, 17, 112, 120, 124, 127, 134, 142, 147, 156, 161, 167, 173, 55, 199, 201, 206, 25, 39, 191, 196, 209, 218, 4, 14, 33, 95, 106, 37, 44, 59, 20, 27, 23, 50, 76, 110, 114, 184, 138, 180, 2, 9, 67, 82, 91, 118, 140, 145, 154, 159, 165, 171, 175, 213, 216, 222, 182, 190, 207]}}
{"prediction": {"error_location": 0.944675624370575, "repair_targets": [0.43644601106643677, 0.49596258997917175, 0.006006048060953617], "repair_candidates": [4.573755359160714e-05, 0.008032026700675488, 0.008253199979662895, 0.00017745736113283783, 0.0017898568185046315, 1.643130963202566e-05, 0.001131423399783671, 0.009892545640468597, 0.00440851179882884, 0.005083467811346054, 0.0009880183497443795, 0.43644601106643677, 1.6586194760748185e-05, 0.49596258997917175, 0.0030064270831644535, 0.00017319692415185273, 0.006006048060953617, 5.401333692134358e-05, 0.000904967775568366, 3.8614551158389077e-05, 3.783670035772957e-05, 0.0003163799992762506, 0.004411041270941496, 0.0001988452859222889, 5.533252260647714e-05, 0.007167280185967684, 4.989788794773631e-05, 0.00033893805812112987, 6.755847425665706e-05, 1.647202043386642e-05, 6.890724034747109e-05, 2.041908010141924e-05, 5.967859124211827e-06, 0.0010599647648632526, 9.547586159897037e-06, 0.0006158744217827916, 7.780216037645005e-06, 0.00011080682452302426, 2.0528343156911433e-05, 0.00024044419114943594, 2.2292947505775373e-06, 0.00012532489199656993, 1.8660769001144217e-06, 0.0011137638939544559, 8.16092415334424e-06, 1.5499286746489815e-05, 0.000338783924235031, 5.919157956668641e-06, 0.000543285976164043, 2.241429865534883e-05, 2.4608607418485917e-05, 4.09172207582742e-06, 0.00022601819364354014, 5.297246389091015e-05, 1.1385454854462296e-05, 2.850730743375607e-05, 2.8870738333353074e-06, 1.4220003322407138e-05, 0.00011141833965666592, 9.972427505999804e-05], "target_probs": 0.9384146332740784}}


{"result": {"time": "2021-02-11 10:38:48.324038", "n_pass": [459, 44, 43], "n_token": 220, "loss": [0.07190388441085815, 0.12599396705627441], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def __init__(", "self", ",", "request", ",", "*", "args", ",", "self", ")", ".", "__init__", "(", "request", ",", "*", "args", ",", "**", "kwargs", ")", "#NEWLINE#", "tenant_choices", "(", "tenants", ",", "has_more", ")", "=", "request", ")", "#NEWLINE#", "for", "tenant", "in", "tenants", ":", "#NEWLINE#", "#INDENT#", "if", "tenant", ".", "enabled", ":", "#NEWLINE#", "#INDENT#", "tenant_choices", ".", "append", "(", "(", "net_type", ".", "id", ",", "tenant", ".", "name", ")", ")", "#NEWLINE#", "#UNINDENT#", "#UNINDENT#", "self", ".", "fields", "[", "'tenant_id'", "]", ".", "choices", "=", "tenant_choices", "#NEWLINE#", "if", ":", "#NEWLINE#", "#INDENT#", "self", ".", "fields", "[", "'net_profile_id'", "]", ".", "choices", "=", "self", ".", "get_network_profile_choices", "(", "request", ")", "#NEWLINE#", "#UNINDENT#", "if", "api", ".", "neutron", ".", "is_extension_supported", "(", "request", ",", "#NEWLINE#", "#INDENT#", "neutron_settings", "#NEWLINE#", "seg_id_range", "=", "neutron_settings", ".", "get", "#NEWLINE#", "self", ".", "seg_id_range", "=", "{", ":", "seg_id_range", ".", ":", "seg_id_range", ".", "get", "(", "'gre'", "'vxlan'", ":", "seg_id_range", ".", "get", "#NEWLINE#", "seg_id_help", "'For VLAN networks, the VLAN VID on the physical network that realizes the virtual network. Valid VLAN VIDs are %(vlan_min)s through %(vlan_max)s. For GRE or VXLAN networks, the tunnel ID. Valid tunnel IDs for GRE networks are %(gre_min)s through %(gre_max)s. For VXLAN networks, %(vxlan_min)s through %(vxlan_max)s.'", "self", ".", "seg_id_range", "'vlan_max'", ":", "self", ".", "seg_id_range", "[", "'vlan'", "]", "#NEWLINE#", "'gre_min'", ":", "self", ".", "seg_id_range", "[", "'gre'", "self", ".", "seg_id_range", "#NEWLINE#", "'vxlan_min'", ":", "self", ".", "seg_id_range", "[", "'vxlan_max'", ":", "self", ".", "seg_id_range", "[", "self", ".", "fields", "[", "=", "seg_id_help", "#NEWLINE#", "supported_provider_types", "=", "neutron_settings", ".", "get", "(", "'supported_provider_types'", "(", "supported_provider_types", "network_type_choices", "=", "PROVIDER_TYPES", "#NEWLINE#", "#INDENT#", "network_type_choices", "=", "[", "net_type", "for", "net_type", "in", "PROVIDER_TYPES", "if", "(", "net_type", "supported_provider_types", "(", "network_type_choices", ")", "#NEWLINE#", "#INDENT#", "self", ".", "#INDENT#", "self", "=", "network_type_choices", ":", "#NEWLINE#", "#INDENT#", "self"]}}
{"position": {"error_location": 52, "repair_targets": [34, 41, 56], "repair_candidates": [7, 17, 109, 117, 121, 124, 131, 139, 144, 153, 158, 164, 170, 52, 196, 198, 203, 25, 36, 188, 193, 206, 215, 4, 14, 30, 92, 103, 34, 41, 56, 20, 27, 23, 47, 73, 107, 111, 181, 135, 177, 2, 9, 64, 79, 88, 115, 137, 142, 151, 156, 162, 168, 172, 210, 213, 219, 179, 187, 204]}}
{"prediction": {"error_location": 0.930620551109314, "repair_targets": [0.4541829824447632, 0.4205547273159027, 0.006882445886731148], "repair_candidates": [7.646177255082875e-05, 0.011345849372446537, 0.027305517345666885, 0.00027300685178488493, 0.0015893406234681606, 2.8586830012500286e-05, 0.0032431192230433226, 0.018068810924887657, 0.009088441729545593, 0.011512763798236847, 0.0005093095824122429, 0.4541829824447632, 3.73075163224712e-05, 0.4205547273159027, 0.0030868167523294687, 0.000124571452033706, 0.006882445886731148, 7.80190821387805e-05, 0.0006010012584738433, 5.622559183393605e-05, 5.545735257328488e-05, 0.00040475980495102704, 0.005557054653763771, 0.00033942179288715124, 5.753447112510912e-05, 0.017260905355215073, 7.8821241913829e-05, 0.0005402389797382057, 0.0001137854706030339, 2.9554643333540298e-05, 0.0001046790202963166, 2.609461807878688e-05, 8.710478141438216e-06, 0.00143381766974926, 1.4987735994509421e-05, 0.0008197328425012529, 1.2629030607058667e-05, 0.00015214362065307796, 3.7642603274434805e-05, 0.00038070400478318334, 3.1574293188896263e-06, 0.00017236670828424394, 3.269889475632226e-06, 0.0018232448492199183, 1.1907130101462826e-05, 1.9684968719957396e-05, 0.0004402648191899061, 9.928259714797605e-06, 0.0005689631216228008, 3.353774081915617e-05, 3.6627749068429694e-05, 5.395034349930938e-06, 0.00035901597584597766, 7.332038512686267e-05, 1.666482239670586e-05, 3.625913450377993e-05, 4.22556649937178e-06, 2.327925722056534e-05, 0.00014131418720353395, 0.0001436206221114844], "target_probs": 0.8816201686859131}}


{"result": {"time": "2021-02-11 10:38:48.525598", "n_pass": [464, 45, 44], "n_token": 217, "loss": [0.466630756855011, 0.24000117182731628], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def __init__(", "self", ",", "request", ",", "*", "args", ",", "self", ")", ".", "__init__", "(", "request", ",", "*", "args", ",", "**", "kwargs", ")", "#NEWLINE#", "tenant_choices", "(", "tenants", ",", "has_more", ")", "=", "request", ")", "#NEWLINE#", "for", "tenant", "in", "tenants", ":", "#NEWLINE#", "#INDENT#", "if", "tenant", "#NEWLINE#", "#INDENT#", "tenant_choices", ".", "append", "(", "(", "net_type", ".", "id", ",", "tenant", ".", "name", ")", ")", "#NEWLINE#", "#UNINDENT#", "#UNINDENT#", "self", ".", "fields", "[", "'tenant_id'", "]", ".", "choices", "=", "tenant_choices", "#NEWLINE#", "if", ":", "#NEWLINE#", "#INDENT#", "self", ".", "fields", "[", "'net_profile_id'", "]", ".", "choices", "=", "self", ".", "get_network_profile_choices", "(", "request", ")", "#NEWLINE#", "#UNINDENT#", "if", "api", ".", "neutron", ".", "is_extension_supported", "(", "request", ",", "#NEWLINE#", "#INDENT#", "neutron_settings", "#NEWLINE#", "seg_id_range", "=", "neutron_settings", ".", "get", "#NEWLINE#", "self", ".", "seg_id_range", "=", "{", ":", "seg_id_range", ".", ":", "seg_id_range", ".", "get", "(", "'gre'", "'vxlan'", ":", "seg_id_range", ".", "get", "#NEWLINE#", "seg_id_help", "'For VLAN networks, the VLAN VID on the physical network that realizes the virtual network. Valid VLAN VIDs are %(vlan_min)s through %(vlan_max)s. For GRE or VXLAN networks, the tunnel ID. Valid tunnel IDs for GRE networks are %(gre_min)s through %(gre_max)s. For VXLAN networks, %(vxlan_min)s through %(vxlan_max)s.'", "self", ".", "seg_id_range", "'vlan_max'", ":", "self", ".", "seg_id_range", "[", "'vlan'", "]", "#NEWLINE#", "'gre_min'", ":", "self", ".", "seg_id_range", "[", "'gre'", "self", ".", "seg_id_range", "#NEWLINE#", "'vxlan_min'", ":", "self", ".", "seg_id_range", "[", "'vxlan_max'", ":", "self", ".", "seg_id_range", "[", "self", ".", "fields", "[", "=", "seg_id_help", "#NEWLINE#", "supported_provider_types", "=", "neutron_settings", ".", "get", "(", "'supported_provider_types'", "(", "supported_provider_types", "network_type_choices", "=", "PROVIDER_TYPES", "#NEWLINE#", "#INDENT#", "network_type_choices", "=", "[", "net_type", "for", "net_type", "in", "PROVIDER_TYPES", "if", "(", "net_type", "supported_provider_types", "(", "network_type_choices", ")", "#NEWLINE#", "#INDENT#", "self", ".", "#INDENT#", "self", "=", "network_type_choices", ":", "#NEWLINE#", "#INDENT#", "self"]}}
{"position": {"error_location": 49, "repair_targets": [34, 41, 53], "repair_candidates": [7, 17, 106, 114, 118, 121, 128, 136, 141, 150, 155, 161, 167, 49, 193, 195, 200, 25, 36, 185, 190, 203, 212, 4, 14, 30, 89, 100, 34, 41, 53, 20, 27, 23, 44, 70, 104, 108, 178, 132, 174, 2, 9, 61, 76, 85, 112, 134, 139, 148, 153, 159, 165, 169, 207, 210, 216, 176, 184, 201]}}
{"prediction": {"error_location": 0.6271116137504578, "repair_targets": [0.7744143009185791, 0.0005187519127503037, 0.011693885549902916], "repair_candidates": [9.230997966369614e-05, 0.009909797459840775, 0.049129512161016464, 0.0002497685491107404, 0.0016949857817962766, 5.285893348627724e-05, 0.005669091362506151, 0.022429129108786583, 0.014421269297599792, 0.023483850061893463, 0.0005885465652681887, 0.7744143009185791, 4.762789831147529e-05, 0.0005187519127503037, 0.002328670583665371, 0.0004936266341246665, 0.011693885549902916, 0.0001819265162339434, 0.0010368278017267585, 0.00014357369218487293, 0.00014495292271021754, 0.0011883266270160675, 0.012399055995047092, 0.0006248875288292766, 0.00018256263865623623, 0.05222797766327858, 0.00022206187713891268, 0.0010069027775898576, 0.00020779870101250708, 4.7628356696804985e-05, 0.00018258178897667676, 7.400759204756469e-05, 2.638379555719439e-05, 0.0026105777360498905, 3.476455822237767e-05, 0.0016378721920773387, 3.5318891605129465e-05, 0.0001984478731174022, 8.156542753567919e-05, 0.0006595402373932302, 7.484289199055638e-06, 0.00022380417794920504, 7.00406963005662e-06, 0.002547535812482238, 2.9116932637407444e-05, 2.9767423256998882e-05, 0.001293483772315085, 2.2654630811302923e-05, 0.0010645500151440501, 7.858221215428784e-05, 0.00013994640903547406, 9.554200914863031e-06, 0.0010764788603410125, 0.00015342587721534073, 4.010257907793857e-05, 7.038879994070157e-05, 8.975572200142778e-06, 8.548430923838168e-05, 0.0003170042182318866, 0.0004210366460029036], "target_probs": 0.786626935005188}}


{"result": {"time": "2021-02-11 10:38:48.724269", "n_pass": [466, 46, 45], "n_token": 214, "loss": [0.0034496819134801626, 0.08299404382705688], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def __init__(", "self", ",", "request", ",", "*", "args", ",", "self", ")", ".", "__init__", "(", "request", ",", "*", "args", ",", "**", "kwargs", ")", "#NEWLINE#", "tenant_choices", "(", "tenants", ",", "has_more", ")", "=", "request", ")", "#NEWLINE#", "for", "tenant", "in", "tenants", ":", "#NEWLINE#", "#INDENT#", "if", "tenant", "#NEWLINE#", "#INDENT#", "tenant_choices", "(", "net_type", ".", "id", ",", "tenant", ".", "name", ")", ")", "#NEWLINE#", "#UNINDENT#", "#UNINDENT#", "self", ".", "fields", "[", "'tenant_id'", "]", ".", "choices", "=", "tenant_choices", "#NEWLINE#", "if", ":", "#NEWLINE#", "#INDENT#", "self", ".", "fields", "[", "'net_profile_id'", "]", ".", "choices", "=", "self", ".", "get_network_profile_choices", "(", "request", ")", "#NEWLINE#", "#UNINDENT#", "if", "api", ".", "neutron", ".", "is_extension_supported", "(", "request", ",", "#NEWLINE#", "#INDENT#", "neutron_settings", "#NEWLINE#", "seg_id_range", "=", "neutron_settings", ".", "get", "#NEWLINE#", "self", ".", "seg_id_range", "=", "{", ":", "seg_id_range", ".", ":", "seg_id_range", ".", "get", "(", "'gre'", "'vxlan'", ":", "seg_id_range", ".", "get", "#NEWLINE#", "seg_id_help", "'For VLAN networks, the VLAN VID on the physical network that realizes the virtual network. Valid VLAN VIDs are %(vlan_min)s through %(vlan_max)s. For GRE or VXLAN networks, the tunnel ID. Valid tunnel IDs for GRE networks are %(gre_min)s through %(gre_max)s. For VXLAN networks, %(vxlan_min)s through %(vxlan_max)s.'", "self", ".", "seg_id_range", "'vlan_max'", ":", "self", ".", "seg_id_range", "[", "'vlan'", "]", "#NEWLINE#", "'gre_min'", ":", "self", ".", "seg_id_range", "[", "'gre'", "self", ".", "seg_id_range", "#NEWLINE#", "'vxlan_min'", ":", "self", ".", "seg_id_range", "[", "'vxlan_max'", ":", "self", ".", "seg_id_range", "[", "self", ".", "fields", "[", "=", "seg_id_help", "#NEWLINE#", "supported_provider_types", "=", "neutron_settings", ".", "get", "(", "'supported_provider_types'", "(", "supported_provider_types", "network_type_choices", "=", "PROVIDER_TYPES", "#NEWLINE#", "#INDENT#", "network_type_choices", "=", "[", "net_type", "for", "net_type", "in", "PROVIDER_TYPES", "if", "(", "net_type", "supported_provider_types", "(", "network_type_choices", ")", "#NEWLINE#", "#INDENT#", "self", ".", "#INDENT#", "self", "=", "network_type_choices", ":", "#NEWLINE#", "#INDENT#", "self"]}}
{"position": {"error_location": 46, "repair_targets": [34, 41, 50], "repair_candidates": [7, 17, 103, 111, 115, 118, 125, 133, 138, 147, 152, 158, 164, 46, 190, 192, 197, 25, 36, 182, 187, 200, 209, 4, 14, 30, 86, 97, 34, 41, 50, 20, 27, 23, 44, 67, 101, 105, 175, 129, 171, 2, 9, 58, 73, 82, 109, 131, 136, 145, 150, 156, 162, 166, 204, 207, 213, 173, 181, 198]}}
{"prediction": {"error_location": 0.996556282043457, "repair_targets": [0.9122506380081177, 0.00016708977636881173, 0.007938902825117111], "repair_candidates": [0.00027688464615494013, 0.034856949001550674, 0.00908354390412569, 0.0024834859650582075, 0.0019385176710784435, 1.4514124814013485e-05, 0.0022133130114525557, 0.010513712652027607, 0.002703737933188677, 0.0033322323579341173, 0.0003626520046964288, 0.9122506380081177, 1.1267362424405292e-05, 0.00016708977636881173, 0.00014862263924442232, 0.00016374925326090306, 0.007938902825117111, 5.2986364607932046e-05, 0.0003900995943695307, 4.484294913709164e-05, 5.9799698647111654e-05, 0.0003145651426166296, 0.00192162673920393, 0.00012941578461322933, 4.298896237742156e-05, 0.004144355189055204, 5.3074665629537776e-05, 0.00037481679464690387, 7.671216008020565e-05, 1.7292157281190157e-05, 9.316386422142386e-05, 1.60511535796104e-05, 6.970424692553934e-06, 0.0007232193602249026, 9.56841540755704e-06, 0.0006302661495283246, 9.288118235417642e-06, 5.608465289697051e-05, 2.814278195728548e-05, 0.00020592652435880154, 2.342842890357133e-06, 0.00010537455818848684, 1.927151515701553e-06, 0.0008429631125181913, 7.681681381654926e-06, 1.3770034456683788e-05, 0.00022787947091273963, 6.965653028601082e-06, 0.0004191536863800138, 2.5870818717521615e-05, 2.0837529518757947e-05, 3.3192613955179695e-06, 0.00017977750394493341, 3.988871321780607e-05, 1.0231283340544906e-05, 2.4596503862994723e-05, 2.6716738830145914e-06, 1.714999962132424e-05, 9.736487118061632e-05, 8.927207818487659e-05], "target_probs": 0.9203566312789917}}


{"result": {"time": "2021-02-11 10:38:48.919309", "n_pass": [469, 47, 46], "n_token": 211, "loss": [0.011313099414110184, 0.30526453256607056], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def __init__(", "self", ",", "request", ",", "*", "args", ",", "self", ")", ".", "__init__", "(", "request", ",", "*", "args", ",", "**", "kwargs", ")", "#NEWLINE#", "tenant_choices", "(", "tenants", ",", "has_more", ")", "=", "request", ")", "#NEWLINE#", "for", "tenant", "in", "tenants", ":", "#NEWLINE#", "#INDENT#", "if", "tenant", "#NEWLINE#", "#INDENT#", "tenant_choices", "(", "net_type", ".", "id", ",", "tenant", ")", "#NEWLINE#", "#UNINDENT#", "#UNINDENT#", "self", ".", "fields", "[", "'tenant_id'", "]", ".", "choices", "=", "tenant_choices", "#NEWLINE#", "if", ":", "#NEWLINE#", "#INDENT#", "self", ".", "fields", "[", "'net_profile_id'", "]", ".", "choices", "=", "self", ".", "get_network_profile_choices", "(", "request", ")", "#NEWLINE#", "#UNINDENT#", "if", "api", ".", "neutron", ".", "is_extension_supported", "(", "request", ",", "#NEWLINE#", "#INDENT#", "neutron_settings", "#NEWLINE#", "seg_id_range", "=", "neutron_settings", ".", "get", "#NEWLINE#", "self", ".", "seg_id_range", "=", "{", ":", "seg_id_range", ".", ":", "seg_id_range", ".", "get", "(", "'gre'", "'vxlan'", ":", "seg_id_range", ".", "get", "#NEWLINE#", "seg_id_help", "'For VLAN networks, the VLAN VID on the physical network that realizes the virtual network. Valid VLAN VIDs are %(vlan_min)s through %(vlan_max)s. For GRE or VXLAN networks, the tunnel ID. Valid tunnel IDs for GRE networks are %(gre_min)s through %(gre_max)s. For VXLAN networks, %(vxlan_min)s through %(vxlan_max)s.'", "self", ".", "seg_id_range", "'vlan_max'", ":", "self", ".", "seg_id_range", "[", "'vlan'", "]", "#NEWLINE#", "'gre_min'", ":", "self", ".", "seg_id_range", "[", "'gre'", "self", ".", "seg_id_range", "#NEWLINE#", "'vxlan_min'", ":", "self", ".", "seg_id_range", "[", "'vxlan_max'", ":", "self", ".", "seg_id_range", "[", "self", ".", "fields", "[", "=", "seg_id_help", "#NEWLINE#", "supported_provider_types", "=", "neutron_settings", ".", "get", "(", "'supported_provider_types'", "(", "supported_provider_types", "network_type_choices", "=", "PROVIDER_TYPES", "#NEWLINE#", "#INDENT#", "network_type_choices", "=", "[", "net_type", "for", "net_type", "in", "PROVIDER_TYPES", "if", "(", "net_type", "supported_provider_types", "(", "network_type_choices", ")", "#NEWLINE#", "#INDENT#", "self", ".", "#INDENT#", "self", "=", "network_type_choices", ":", "#NEWLINE#", "#INDENT#", "self"]}}
{"position": {"error_location": 46, "repair_targets": [34, 41, 50], "repair_candidates": [7, 17, 100, 108, 112, 115, 122, 130, 135, 144, 149, 155, 161, 46, 187, 189, 194, 25, 36, 179, 184, 197, 206, 4, 14, 30, 83, 94, 34, 41, 50, 20, 27, 23, 44, 64, 98, 102, 172, 126, 168, 2, 9, 55, 70, 79, 106, 128, 133, 142, 147, 153, 159, 163, 201, 204, 210, 170, 178, 195]}}
{"prediction": {"error_location": 0.9887507557868958, "repair_targets": [0.7354364991188049, 0.0006622627843171358, 0.0008296099258586764], "repair_candidates": [0.0014782388461753726, 0.10898921638727188, 0.021486004814505577, 0.012357381172478199, 0.007518128026276827, 4.591327888192609e-05, 0.008140414953231812, 0.025455744937062263, 0.005788827780634165, 0.008563320152461529, 0.0009550604736432433, 0.7354364991188049, 2.0693905753432773e-05, 0.0006622627843171358, 0.00032800115877762437, 0.00021392921917140484, 0.0008296099258586764, 0.0001123461770475842, 0.0007725988980382681, 0.00014082406414672732, 0.00012458259880077094, 0.0009587161475792527, 0.00745001994073391, 0.00046765172737650573, 0.00012452833470888436, 0.0404471755027771, 0.00022865066421218216, 0.0007782126776874065, 0.00021365661814343184, 5.7542860304238275e-05, 0.00018350518075749278, 6.694289913866669e-05, 2.4108754587359726e-05, 0.001745132845826447, 2.760085953923408e-05, 0.0012313231127336621, 3.0508917916449718e-05, 0.00016642593254800886, 6.597158062504604e-05, 0.00047499718493781984, 7.659002221771516e-06, 0.0002245459472760558, 6.659583050350193e-06, 0.002280160551890731, 2.5101195205934346e-05, 2.5724944862304255e-05, 0.0008226672653108835, 2.144086829503067e-05, 0.0007925356039777398, 7.361212919931859e-05, 8.488151070196182e-05, 7.4328313530713785e-06, 0.000608892529271543, 0.00010405228385934606, 3.077261135331355e-05, 5.727153256884776e-05, 7.851383088564035e-06, 7.530928996857256e-05, 0.0002521372807677835, 0.0003290613822173327], "target_probs": 0.736928403377533}}


{"result": {"time": "2021-02-11 10:38:49.114744", "n_pass": [470, 48, 47], "n_token": 208, "loss": [0.0074310083873569965, 0.2172509878873825], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def __init__(", "self", ",", "request", ",", "*", "args", ",", "self", ")", ".", "__init__", "(", "request", ",", "*", "args", ",", "**", "kwargs", ")", "#NEWLINE#", "tenant_choices", "(", "tenants", ",", "has_more", ")", "=", "request", ")", "#NEWLINE#", "for", "tenant", "in", "tenants", ":", "#NEWLINE#", "#INDENT#", "if", "tenant", "#NEWLINE#", "#INDENT#", "tenant_choices", "(", "net_type", ".", "id", ",", "tenant", "#UNINDENT#", "self", ".", "fields", "[", "'tenant_id'", "]", ".", "choices", "=", "tenant_choices", "#NEWLINE#", "if", ":", "#NEWLINE#", "#INDENT#", "self", ".", "fields", "[", "'net_profile_id'", "]", ".", "choices", "=", "self", ".", "get_network_profile_choices", "(", "request", ")", "#NEWLINE#", "#UNINDENT#", "if", "api", ".", "neutron", ".", "is_extension_supported", "(", "request", ",", "#NEWLINE#", "#INDENT#", "neutron_settings", "#NEWLINE#", "seg_id_range", "=", "neutron_settings", ".", "get", "#NEWLINE#", "self", ".", "seg_id_range", "=", "{", ":", "seg_id_range", ".", ":", "seg_id_range", ".", "get", "(", "'gre'", "'vxlan'", ":", "seg_id_range", ".", "get", "#NEWLINE#", "seg_id_help", "'For VLAN networks, the VLAN VID on the physical network that realizes the virtual network. Valid VLAN VIDs are %(vlan_min)s through %(vlan_max)s. For GRE or VXLAN networks, the tunnel ID. Valid tunnel IDs for GRE networks are %(gre_min)s through %(gre_max)s. For VXLAN networks, %(vxlan_min)s through %(vxlan_max)s.'", "self", ".", "seg_id_range", "'vlan_max'", ":", "self", ".", "seg_id_range", "[", "'vlan'", "]", "#NEWLINE#", "'gre_min'", ":", "self", ".", "seg_id_range", "[", "'gre'", "self", ".", "seg_id_range", "#NEWLINE#", "'vxlan_min'", ":", "self", ".", "seg_id_range", "[", "'vxlan_max'", ":", "self", ".", "seg_id_range", "[", "self", ".", "fields", "[", "=", "seg_id_help", "#NEWLINE#", "supported_provider_types", "=", "neutron_settings", ".", "get", "(", "'supported_provider_types'", "(", "supported_provider_types", "network_type_choices", "=", "PROVIDER_TYPES", "#NEWLINE#", "#INDENT#", "network_type_choices", "=", "[", "net_type", "for", "net_type", "in", "PROVIDER_TYPES", "if", "(", "net_type", "supported_provider_types", "(", "network_type_choices", ")", "#NEWLINE#", "#INDENT#", "self", ".", "#INDENT#", "self", "=", "network_type_choices", ":", "#NEWLINE#", "#INDENT#", "self"]}}
{"position": {"error_location": 46, "repair_targets": [34, 41, 50], "repair_candidates": [7, 17, 97, 105, 109, 112, 119, 127, 132, 141, 146, 152, 158, 46, 184, 186, 191, 25, 36, 176, 181, 194, 203, 4, 14, 30, 80, 91, 34, 41, 50, 20, 27, 23, 44, 61, 95, 99, 169, 123, 165, 2, 9, 52, 67, 76, 103, 125, 130, 139, 144, 150, 156, 160, 198, 201, 207, 167, 175, 192]}}
{"prediction": {"error_location": 0.9925966262817383, "repair_targets": [0.802793562412262, 0.0005400559166446328, 0.001394339487887919], "repair_candidates": [0.0016649288590997458, 0.10514353215694427, 0.01244462002068758, 0.015348688699305058, 0.005418827757239342, 3.091212420258671e-05, 0.0044043646194040775, 0.017882201820611954, 0.003841234603896737, 0.004642502870410681, 0.0007865834631957114, 0.802793562412262, 1.626838457013946e-05, 0.0005400559166446328, 0.0003964533098042011, 0.0007176008075475693, 0.001394339487887919, 0.0005610393127426505, 0.0009267863933928311, 8.741841884329915e-05, 0.00012626992247533053, 0.0005404531839303672, 0.0031656960491091013, 0.00024091970408335328, 6.23305095359683e-05, 0.009323750622570515, 0.00012725625128950924, 0.00047913810703903437, 0.000127667241031304, 3.8600155676249415e-05, 0.00014696820289827883, 3.6598001315724105e-05, 1.406142928317422e-05, 0.001344765187241137, 1.903284282889217e-05, 0.0008625971968285739, 1.730357325868681e-05, 0.00014281985932029784, 5.499252802110277e-05, 0.0002688335080165416, 3.630098717621877e-06, 0.0001467280089855194, 4.153395821049344e-06, 0.0015302977990359068, 1.534202237962745e-05, 2.573908568592742e-05, 0.00042106735054403543, 1.4349845514516346e-05, 0.0007280402351170778, 5.47767776879482e-05, 3.8925689295865595e-05, 5.826262622576905e-06, 0.0003212587325833738, 6.922241300344467e-05, 1.8695318431127816e-05, 4.294077371014282e-05, 5.031863111071289e-06, 3.468685827101581e-05, 0.00017077411757782102, 0.00016662351845297962], "target_probs": 0.8047279715538025}}


{"result": {"time": "2021-02-11 10:38:49.306995", "n_pass": [472, 49, 48], "n_token": 205, "loss": [0.009735248982906342, 0.36044207215309143], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def __init__(", "self", ",", "request", ",", "*", "args", ",", "self", ")", ".", "__init__", "(", "request", ",", "*", "args", ",", "**", "kwargs", ")", "#NEWLINE#", "tenant_choices", "(", "tenants", ",", "has_more", ")", "=", "request", ")", "#NEWLINE#", "for", "tenant", "in", "tenants", ":", "#NEWLINE#", "#INDENT#", "if", "tenant", "#NEWLINE#", "#INDENT#", "tenant_choices", "(", "net_type", ".", "id", ",", "tenant", "#UNINDENT#", "self", ".", "]", ".", "choices", "=", "tenant_choices", "#NEWLINE#", "if", ":", "#NEWLINE#", "#INDENT#", "self", ".", "fields", "[", "'net_profile_id'", "]", ".", "choices", "=", "self", ".", "get_network_profile_choices", "(", "request", ")", "#NEWLINE#", "#UNINDENT#", "if", "api", ".", "neutron", ".", "is_extension_supported", "(", "request", ",", "#NEWLINE#", "#INDENT#", "neutron_settings", "#NEWLINE#", "seg_id_range", "=", "neutron_settings", ".", "get", "#NEWLINE#", "self", ".", "seg_id_range", "=", "{", ":", "seg_id_range", ".", ":", "seg_id_range", ".", "get", "(", "'gre'", "'vxlan'", ":", "seg_id_range", ".", "get", "#NEWLINE#", "seg_id_help", "'For VLAN networks, the VLAN VID on the physical network that realizes the virtual network. Valid VLAN VIDs are %(vlan_min)s through %(vlan_max)s. For GRE or VXLAN networks, the tunnel ID. Valid tunnel IDs for GRE networks are %(gre_min)s through %(gre_max)s. For VXLAN networks, %(vxlan_min)s through %(vxlan_max)s.'", "self", ".", "seg_id_range", "'vlan_max'", ":", "self", ".", "seg_id_range", "[", "'vlan'", "]", "#NEWLINE#", "'gre_min'", ":", "self", ".", "seg_id_range", "[", "'gre'", "self", ".", "seg_id_range", "#NEWLINE#", "'vxlan_min'", ":", "self", ".", "seg_id_range", "[", "'vxlan_max'", ":", "self", ".", "seg_id_range", "[", "self", ".", "fields", "[", "=", "seg_id_help", "#NEWLINE#", "supported_provider_types", "=", "neutron_settings", ".", "get", "(", "'supported_provider_types'", "(", "supported_provider_types", "network_type_choices", "=", "PROVIDER_TYPES", "#NEWLINE#", "#INDENT#", "network_type_choices", "=", "[", "net_type", "for", "net_type", "in", "PROVIDER_TYPES", "if", "(", "net_type", "supported_provider_types", "(", "network_type_choices", ")", "#NEWLINE#", "#INDENT#", "self", ".", "#INDENT#", "self", "=", "network_type_choices", ":", "#NEWLINE#", "#INDENT#", "self"]}}
{"position": {"error_location": 46, "repair_targets": [34, 41, 50], "repair_candidates": [7, 17, 94, 102, 106, 109, 116, 124, 129, 138, 143, 149, 155, 46, 181, 183, 188, 25, 36, 173, 178, 191, 200, 4, 14, 30, 77, 88, 34, 41, 50, 20, 27, 23, 44, 58, 92, 96, 166, 120, 162, 2, 9, 52, 64, 73, 100, 122, 127, 136, 141, 147, 153, 157, 195, 198, 204, 164, 172, 189]}}
{"prediction": {"error_location": 0.9903119802474976, "repair_targets": [0.6949663758277893, 0.0008397480705752969, 0.0015618233010172844], "repair_candidates": [0.0055678351782262325, 0.1586962640285492, 0.011506397277116776, 0.05449531599879265, 0.007560694590210915, 4.0056729631032795e-05, 0.004811958409845829, 0.019240625202655792, 0.003491536946967244, 0.004013469908386469, 0.0010641945991665125, 0.6949663758277893, 1.6223602870013565e-05, 0.0008397480705752969, 0.0007033591973595321, 0.0013973749009892344, 0.0015618233010172844, 0.0003784327709581703, 0.00040656831697560847, 0.00015015366079751402, 0.00017992356151808053, 0.0004425800289027393, 0.005163285415619612, 0.0003607410180848092, 9.189622505800799e-05, 0.012632990255951881, 0.00013030643458478153, 0.000718052324373275, 0.00016913718718569726, 4.783151962328702e-05, 0.0003049694059882313, 4.7461147914873436e-05, 1.4699805433338042e-05, 0.0023529091849923134, 2.640701313794125e-05, 0.0009392276988364756, 2.4342183678527363e-05, 0.00016686182061675936, 0.00010468487744219601, 0.000458560127299279, 4.979739969712682e-06, 0.00014066191215533763, 4.039941359224031e-06, 0.0020049146842211485, 1.7953061615116894e-05, 2.6624842575984076e-05, 0.0005465754074975848, 1.585343670740258e-05, 0.0008077726815827191, 6.06315879849717e-05, 4.956209522788413e-05, 6.9290508690755814e-06, 0.0004086245899088681, 8.229358354583383e-05, 2.2958747649681754e-05, 5.0261853175470605e-05, 6.022331945132464e-06, 4.5678691094508395e-05, 0.00020835977920796722, 0.0002040271501755342], "target_probs": 0.6973679661750793}}


{"result": {"time": "2021-02-11 10:38:49.497128", "n_pass": [473, 50, 49], "n_token": 202, "loss": [0.03129205480217934, 0.3129853904247284], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def __init__(", "self", ",", "request", ",", "*", "args", ",", "self", ")", ".", "__init__", "(", "request", ",", "*", "args", ",", "**", "kwargs", ")", "#NEWLINE#", "tenant_choices", "(", "tenants", ",", "has_more", ")", "=", "request", ")", "#NEWLINE#", "for", "tenant", "in", "tenants", ":", "#NEWLINE#", "#INDENT#", "if", "tenant", "#NEWLINE#", "#INDENT#", "tenant_choices", "(", "net_type", ".", "id", ",", "tenant", "#UNINDENT#", "self", ".", "=", "tenant_choices", "#NEWLINE#", "if", ":", "#NEWLINE#", "#INDENT#", "self", ".", "fields", "[", "'net_profile_id'", "]", ".", "choices", "=", "self", ".", "get_network_profile_choices", "(", "request", ")", "#NEWLINE#", "#UNINDENT#", "if", "api", ".", "neutron", ".", "is_extension_supported", "(", "request", ",", "#NEWLINE#", "#INDENT#", "neutron_settings", "#NEWLINE#", "seg_id_range", "=", "neutron_settings", ".", "get", "#NEWLINE#", "self", ".", "seg_id_range", "=", "{", ":", "seg_id_range", ".", ":", "seg_id_range", ".", "get", "(", "'gre'", "'vxlan'", ":", "seg_id_range", ".", "get", "#NEWLINE#", "seg_id_help", "'For VLAN networks, the VLAN VID on the physical network that realizes the virtual network. Valid VLAN VIDs are %(vlan_min)s through %(vlan_max)s. For GRE or VXLAN networks, the tunnel ID. Valid tunnel IDs for GRE networks are %(gre_min)s through %(gre_max)s. For VXLAN networks, %(vxlan_min)s through %(vxlan_max)s.'", "self", ".", "seg_id_range", "'vlan_max'", ":", "self", ".", "seg_id_range", "[", "'vlan'", "]", "#NEWLINE#", "'gre_min'", ":", "self", ".", "seg_id_range", "[", "'gre'", "self", ".", "seg_id_range", "#NEWLINE#", "'vxlan_min'", ":", "self", ".", "seg_id_range", "[", "'vxlan_max'", ":", "self", ".", "seg_id_range", "[", "self", ".", "fields", "[", "=", "seg_id_help", "#NEWLINE#", "supported_provider_types", "=", "neutron_settings", ".", "get", "(", "'supported_provider_types'", "(", "supported_provider_types", "network_type_choices", "=", "PROVIDER_TYPES", "#NEWLINE#", "#INDENT#", "network_type_choices", "=", "[", "net_type", "for", "net_type", "in", "PROVIDER_TYPES", "if", "(", "net_type", "supported_provider_types", "(", "network_type_choices", ")", "#NEWLINE#", "#INDENT#", "self", ".", "#INDENT#", "self", "=", "network_type_choices", ":", "#NEWLINE#", "#INDENT#", "self"]}}
{"position": {"error_location": 46, "repair_targets": [34, 41, 50], "repair_candidates": [7, 17, 91, 99, 103, 106, 113, 121, 126, 135, 140, 146, 152, 46, 178, 180, 185, 25, 36, 170, 175, 188, 197, 4, 14, 30, 74, 85, 34, 41, 50, 20, 27, 23, 44, 55, 89, 93, 163, 117, 159, 2, 9, 52, 61, 70, 97, 119, 124, 133, 138, 144, 150, 154, 192, 195, 201, 161, 169, 186]}}
{"prediction": {"error_location": 0.9691925644874573, "repair_targets": [0.7276066541671753, 0.000836449209600687, 0.002817481989040971], "repair_candidates": [0.001763105858117342, 0.12186244875192642, 0.01810504123568535, 0.01654638536274433, 0.006414171773940325, 4.0584709495306015e-05, 0.006262505427002907, 0.02449188008904457, 0.005342121236026287, 0.006753543857485056, 0.0009298360673710704, 0.7276066541671753, 2.100590972986538e-05, 0.000836449209600687, 0.0017638660501688719, 0.003079141490161419, 0.002817481989040971, 0.00044455667375586927, 0.009245255030691624, 0.00022089639969635755, 0.00013978061906527728, 0.0006702671525999904, 0.007022270001471043, 0.0005422131507657468, 0.00015846909082029015, 0.02242272160947323, 0.00017230422236025333, 0.0007982253446243703, 0.00030922822770662606, 7.092511077644303e-05, 0.00045165952178649604, 7.938230555737391e-05, 1.7773703802959062e-05, 0.0026327245868742466, 3.331759216962382e-05, 0.0016684570582583547, 3.419178756303154e-05, 0.00020530319306999445, 0.00012209101987536997, 0.0005494497017934918, 6.199430117703741e-06, 0.00020717663574032485, 5.242235602054279e-06, 0.0028051454573869705, 2.4251621653093025e-05, 3.7423556932481006e-05, 0.0008948203758336604, 2.339618185942527e-05, 0.0014789571287110448, 9.719002264318988e-05, 8.980381971923634e-05, 9.832998330239207e-06, 0.0006767789018340409, 0.00012714893091470003, 3.555787043296732e-05, 7.485057722078636e-05, 8.378043276024982e-06, 7.698040280956775e-05, 0.0003409132768865675, 0.00033225974766537547], "target_probs": 0.7312605977058411}}


{"result": {"time": "2021-02-11 10:38:49.685956", "n_pass": [475, 51, 50], "n_token": 199, "loss": [0.019575150683522224, 0.3184070587158203], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def __init__(", "self", ",", "request", ",", "*", "args", ",", "self", ")", ".", "__init__", "(", "request", ",", "*", "args", ",", "**", "kwargs", ")", "#NEWLINE#", "tenant_choices", "(", "tenants", ",", "has_more", ")", "=", "request", ")", "#NEWLINE#", "for", "tenant", "in", "tenants", ":", "#NEWLINE#", "#INDENT#", "if", "tenant", "#NEWLINE#", "#INDENT#", "tenant_choices", "(", "net_type", ".", "id", ",", "tenant", "#UNINDENT#", "self", ".", "=", "tenant_choices", "#NEWLINE#", "#INDENT#", "self", ".", "fields", "[", "'net_profile_id'", "]", ".", "choices", "=", "self", ".", "get_network_profile_choices", "(", "request", ")", "#NEWLINE#", "#UNINDENT#", "if", "api", ".", "neutron", ".", "is_extension_supported", "(", "request", ",", "#NEWLINE#", "#INDENT#", "neutron_settings", "#NEWLINE#", "seg_id_range", "=", "neutron_settings", ".", "get", "#NEWLINE#", "self", ".", "seg_id_range", "=", "{", ":", "seg_id_range", ".", ":", "seg_id_range", ".", "get", "(", "'gre'", "'vxlan'", ":", "seg_id_range", ".", "get", "#NEWLINE#", "seg_id_help", "'For VLAN networks, the VLAN VID on the physical network that realizes the virtual network. Valid VLAN VIDs are %(vlan_min)s through %(vlan_max)s. For GRE or VXLAN networks, the tunnel ID. Valid tunnel IDs for GRE networks are %(gre_min)s through %(gre_max)s. For VXLAN networks, %(vxlan_min)s through %(vxlan_max)s.'", "self", ".", "seg_id_range", "'vlan_max'", ":", "self", ".", "seg_id_range", "[", "'vlan'", "]", "#NEWLINE#", "'gre_min'", ":", "self", ".", "seg_id_range", "[", "'gre'", "self", ".", "seg_id_range", "#NEWLINE#", "'vxlan_min'", ":", "self", ".", "seg_id_range", "[", "'vxlan_max'", ":", "self", ".", "seg_id_range", "[", "self", ".", "fields", "[", "=", "seg_id_help", "#NEWLINE#", "supported_provider_types", "=", "neutron_settings", ".", "get", "(", "'supported_provider_types'", "(", "supported_provider_types", "network_type_choices", "=", "PROVIDER_TYPES", "#NEWLINE#", "#INDENT#", "network_type_choices", "=", "[", "net_type", "for", "net_type", "in", "PROVIDER_TYPES", "if", "(", "net_type", "supported_provider_types", "(", "network_type_choices", ")", "#NEWLINE#", "#INDENT#", "self", ".", "#INDENT#", "self", "=", "network_type_choices", ":", "#NEWLINE#", "#INDENT#", "self"]}}
{"position": {"error_location": 46, "repair_targets": [34, 41, 50], "repair_candidates": [7, 17, 88, 96, 100, 103, 110, 118, 123, 132, 137, 143, 149, 46, 175, 177, 182, 25, 36, 167, 172, 185, 194, 4, 14, 30, 71, 82, 34, 41, 50, 20, 27, 23, 44, 55, 86, 90, 160, 114, 156, 2, 9, 52, 58, 67, 94, 116, 121, 130, 135, 141, 147, 151, 189, 192, 198, 158, 166, 183]}}
{"prediction": {"error_location": 0.9806151986122131, "repair_targets": [0.7244138717651367, 0.0007503136876039207, 0.002142511075362563], "repair_candidates": [0.0017320214537903666, 0.12878979742527008, 0.018660463392734528, 0.016943451017141342, 0.006458439864218235, 4.096819611731917e-05, 0.005978839471936226, 0.02433597482740879, 0.00560102891176939, 0.006398250348865986, 0.0010175087954849005, 0.7244138717651367, 2.1744932382716797e-05, 0.0007503136876039207, 0.0008639805018901825, 0.001674623228609562, 0.002142511075362563, 0.00042690939153544605, 0.012697100639343262, 0.0005264643696136773, 0.0001618879468878731, 0.000839392829220742, 0.004412309732288122, 0.0006215150933712721, 0.00017947136075235903, 0.020749982446432114, 0.0001717966515570879, 0.0007695102249272168, 0.00022129125136416405, 6.820863927714527e-05, 0.00037339251139201224, 7.349799125222489e-05, 2.000608219532296e-05, 0.002610188676044345, 2.5622966859373264e-05, 0.0016286304453387856, 2.2337157133733854e-05, 0.00022215394710656255, 8.793699089437723e-05, 0.0004913972807116807, 6.466833838203456e-06, 0.00025445970823056996, 4.940993221680401e-06, 0.0024093722458928823, 2.2465852453024127e-05, 4.268330303602852e-05, 0.0007637589005753398, 2.2555501345777884e-05, 0.0015442639123648405, 9.725932613946497e-05, 7.296645344467834e-05, 9.768315976543818e-06, 0.0006096828728914261, 0.00012374238576740026, 3.274540358688682e-05, 7.24701167200692e-05, 7.9243127402151e-06, 6.207003025338054e-05, 0.0003233168972656131, 0.00029228863422758877], "target_probs": 0.7273066639900208}}


{"result": {"time": "2021-02-11 10:38:49.872776", "n_pass": [477, 52, 51], "n_token": 196, "loss": [0.027194248512387276, 0.3655436635017395], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def __init__(", "self", ",", "request", ",", "*", "args", ",", "self", ")", ".", "__init__", "(", "request", ",", "*", "args", ",", "**", "kwargs", ")", "#NEWLINE#", "tenant_choices", "(", "tenants", ",", "has_more", ")", "=", "request", ")", "#NEWLINE#", "for", "tenant", "in", "tenants", ":", "#NEWLINE#", "#INDENT#", "if", "tenant", "#NEWLINE#", "#INDENT#", "tenant_choices", "(", "net_type", ".", "id", ",", "tenant", "#UNINDENT#", "self", ".", "=", "tenant_choices", "#NEWLINE#", "#INDENT#", "self", ".", "]", ".", "choices", "=", "self", ".", "get_network_profile_choices", "(", "request", ")", "#NEWLINE#", "#UNINDENT#", "if", "api", ".", "neutron", ".", "is_extension_supported", "(", "request", ",", "#NEWLINE#", "#INDENT#", "neutron_settings", "#NEWLINE#", "seg_id_range", "=", "neutron_settings", ".", "get", "#NEWLINE#", "self", ".", "seg_id_range", "=", "{", ":", "seg_id_range", ".", ":", "seg_id_range", ".", "get", "(", "'gre'", "'vxlan'", ":", "seg_id_range", ".", "get", "#NEWLINE#", "seg_id_help", "'For VLAN networks, the VLAN VID on the physical network that realizes the virtual network. Valid VLAN VIDs are %(vlan_min)s through %(vlan_max)s. For GRE or VXLAN networks, the tunnel ID. Valid tunnel IDs for GRE networks are %(gre_min)s through %(gre_max)s. For VXLAN networks, %(vxlan_min)s through %(vxlan_max)s.'", "self", ".", "seg_id_range", "'vlan_max'", ":", "self", ".", "seg_id_range", "[", "'vlan'", "]", "#NEWLINE#", "'gre_min'", ":", "self", ".", "seg_id_range", "[", "'gre'", "self", ".", "seg_id_range", "#NEWLINE#", "'vxlan_min'", ":", "self", ".", "seg_id_range", "[", "'vxlan_max'", ":", "self", ".", "seg_id_range", "[", "self", ".", "fields", "[", "=", "seg_id_help", "#NEWLINE#", "supported_provider_types", "=", "neutron_settings", ".", "get", "(", "'supported_provider_types'", "(", "supported_provider_types", "network_type_choices", "=", "PROVIDER_TYPES", "#NEWLINE#", "#INDENT#", "network_type_choices", "=", "[", "net_type", "for", "net_type", "in", "PROVIDER_TYPES", "if", "(", "net_type", "supported_provider_types", "(", "network_type_choices", ")", "#NEWLINE#", "#INDENT#", "self", ".", "#INDENT#", "self", "=", "network_type_choices", ":", "#NEWLINE#", "#INDENT#", "self"]}}
{"position": {"error_location": 46, "repair_targets": [34, 41, 50], "repair_candidates": [7, 17, 85, 93, 97, 100, 107, 115, 120, 129, 134, 140, 146, 46, 172, 174, 179, 25, 36, 164, 169, 182, 191, 4, 14, 30, 68, 79, 34, 41, 50, 20, 27, 23, 44, 55, 83, 87, 157, 111, 153, 2, 9, 52, 58, 64, 91, 113, 118, 127, 132, 138, 144, 148, 186, 189, 195, 155, 163, 180]}}
{"prediction": {"error_location": 0.9731720685958862, "repair_targets": [0.6906078457832336, 0.0008893270278349519, 0.0023221950978040695], "repair_candidates": [0.0019037647871300578, 0.1379171758890152, 0.020112698897719383, 0.01851671002805233, 0.006940576713532209, 4.488504055188969e-05, 0.006591636221855879, 0.026985149830579758, 0.005968165583908558, 0.007131646387279034, 0.0010189622407779098, 0.6906078457832336, 2.298041363246739e-05, 0.0008893270278349519, 0.0010993484174832702, 0.0024376045912504196, 0.0023221950978040695, 0.0004608446906786412, 0.019223997369408607, 0.0005797904450446367, 0.00010276609827997163, 0.0008092663483694196, 0.00831619929522276, 0.0006045863847248256, 0.00032659590942785144, 0.020448535680770874, 0.00015416531823575497, 0.0012552255066111684, 0.0002864103589672595, 9.634235175326467e-05, 0.0006738899974152446, 0.00010876738815568388, 2.1131196263013408e-05, 0.005425429902970791, 3.272111644037068e-05, 0.0017417734488844872, 3.222251689294353e-05, 0.0002006829163292423, 0.00011459708184702322, 0.000598596700001508, 7.1767512963560876e-06, 0.00029994972283020616, 5.202350166655378e-06, 0.0029645266477018595, 2.3668751964578405e-05, 4.66702513222117e-05, 0.0008343518129549921, 2.376721204200294e-05, 0.001801781472750008, 0.00010231216583633795, 7.933926826808602e-05, 1.087445252778707e-05, 0.0006552547565661371, 0.00013630444300360978, 3.603086952352896e-05, 8.333204459631816e-05, 8.520936717104632e-06, 6.695112824672833e-05, 0.00036905528395436704, 0.00031967050745151937], "target_probs": 0.6938193440437317}}


{"result": {"time": "2021-02-11 10:38:50.059364", "n_pass": [478, 53, 52], "n_token": 193, "loss": [0.014884370379149914, 0.31921035051345825], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def __init__(", "self", ",", "request", ",", "*", "args", ",", "self", ")", ".", "__init__", "(", "request", ",", "*", "args", ",", "**", "kwargs", ")", "#NEWLINE#", "tenant_choices", "(", "tenants", ",", "has_more", ")", "=", "request", ")", "#NEWLINE#", "for", "tenant", "in", "tenants", ":", "#NEWLINE#", "#INDENT#", "if", "tenant", "#NEWLINE#", "#INDENT#", "tenant_choices", "(", "net_type", ".", "id", ",", "tenant", "#UNINDENT#", "self", ".", "=", "tenant_choices", "#NEWLINE#", "#INDENT#", "self", ".", "=", "self", ".", "get_network_profile_choices", "(", "request", ")", "#NEWLINE#", "#UNINDENT#", "if", "api", ".", "neutron", ".", "is_extension_supported", "(", "request", ",", "#NEWLINE#", "#INDENT#", "neutron_settings", "#NEWLINE#", "seg_id_range", "=", "neutron_settings", ".", "get", "#NEWLINE#", "self", ".", "seg_id_range", "=", "{", ":", "seg_id_range", ".", ":", "seg_id_range", ".", "get", "(", "'gre'", "'vxlan'", ":", "seg_id_range", ".", "get", "#NEWLINE#", "seg_id_help", "'For VLAN networks, the VLAN VID on the physical network that realizes the virtual network. Valid VLAN VIDs are %(vlan_min)s through %(vlan_max)s. For GRE or VXLAN networks, the tunnel ID. Valid tunnel IDs for GRE networks are %(gre_min)s through %(gre_max)s. For VXLAN networks, %(vxlan_min)s through %(vxlan_max)s.'", "self", ".", "seg_id_range", "'vlan_max'", ":", "self", ".", "seg_id_range", "[", "'vlan'", "]", "#NEWLINE#", "'gre_min'", ":", "self", ".", "seg_id_range", "[", "'gre'", "self", ".", "seg_id_range", "#NEWLINE#", "'vxlan_min'", ":", "self", ".", "seg_id_range", "[", "'vxlan_max'", ":", "self", ".", "seg_id_range", "[", "self", ".", "fields", "[", "=", "seg_id_help", "#NEWLINE#", "supported_provider_types", "=", "neutron_settings", ".", "get", "(", "'supported_provider_types'", "(", "supported_provider_types", "network_type_choices", "=", "PROVIDER_TYPES", "#NEWLINE#", "#INDENT#", "network_type_choices", "=", "[", "net_type", "for", "net_type", "in", "PROVIDER_TYPES", "if", "(", "net_type", "supported_provider_types", "(", "network_type_choices", ")", "#NEWLINE#", "#INDENT#", "self", ".", "#INDENT#", "self", "=", "network_type_choices", ":", "#NEWLINE#", "#INDENT#", "self"]}}
{"position": {"error_location": 46, "repair_targets": [34, 41, 50], "repair_candidates": [7, 17, 82, 90, 94, 97, 104, 112, 117, 126, 131, 137, 143, 46, 169, 171, 176, 25, 36, 161, 166, 179, 188, 4, 14, 30, 65, 76, 34, 41, 50, 20, 27, 23, 44, 55, 80, 84, 154, 108, 150, 2, 9, 52, 58, 61, 88, 110, 115, 124, 129, 135, 141, 145, 183, 186, 192, 152, 160, 177]}}
{"prediction": {"error_location": 0.9852256178855896, "repair_targets": [0.7240354418754578, 0.0007287182379513979, 0.001958507113158703], "repair_candidates": [0.0018528808141127229, 0.13145971298217773, 0.017675474286079407, 0.017984405159950256, 0.00664281053468585, 4.066213659825735e-05, 0.005917959846556187, 0.024203673005104065, 0.005268434062600136, 0.006172702182084322, 0.0009719805675558746, 0.7240354418754578, 2.065073567791842e-05, 0.0007287182379513979, 0.0007856793235987425, 0.0013041159836575389, 0.001958507113158703, 0.00045572954695671797, 0.01141278725117445, 0.00042955169919878244, 2.2546602849615738e-05, 0.000490932259708643, 0.006332958582788706, 0.0005054135690443218, 0.0002529062912799418, 0.017065364867448807, 0.00013878144090995193, 0.0008989645866677165, 0.0002588608185760677, 7.72895582485944e-05, 0.0007047292310744524, 6.940789899090305e-05, 1.7284670320805162e-05, 0.0038611129857599735, 2.8731661586789414e-05, 0.0019614791963249445, 2.7159663659404032e-05, 0.0002591060765553266, 7.347740029217675e-05, 0.0005263299099169672, 5.094339030620176e-06, 0.0002916123776230961, 4.426122814038536e-06, 0.0028211758472025394, 1.990461169043556e-05, 4.230286867823452e-05, 0.0006904611364006996, 1.9443057681201026e-05, 0.0016521234065294266, 8.364984387299046e-05, 5.9269517805660143e-05, 9.282918654207606e-06, 0.00053810840472579, 0.00011747177632059902, 3.027554339496419e-05, 7.236612145788968e-05, 7.115513199096313e-06, 5.016126669943333e-05, 0.0003219523641746491, 0.00026921401149593294], "target_probs": 0.7267226576805115}}


{"result": {"time": "2021-02-11 10:38:50.244153", "n_pass": [481, 54, 53], "n_token": 190, "loss": [0.013090034015476704, 0.22903849184513092], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def __init__(", "self", ",", "request", ",", "*", "args", ",", "self", ")", ".", "__init__", "(", "request", ",", "*", "args", ",", "**", "kwargs", ")", "#NEWLINE#", "tenant_choices", "(", "tenants", ",", "has_more", ")", "=", "request", ")", "#NEWLINE#", "for", "tenant", "in", "tenants", ":", "#NEWLINE#", "#INDENT#", "if", "tenant", "#NEWLINE#", "#INDENT#", "tenant_choices", "(", "net_type", ".", "id", ",", "tenant", "#UNINDENT#", "self", ".", "=", "tenant_choices", "#NEWLINE#", "#INDENT#", "self", ".", "=", "self", ".", "get_network_profile_choices", "(", "request", "if", "api", ".", "neutron", ".", "is_extension_supported", "(", "request", ",", "#NEWLINE#", "#INDENT#", "neutron_settings", "#NEWLINE#", "seg_id_range", "=", "neutron_settings", ".", "get", "#NEWLINE#", "self", ".", "seg_id_range", "=", "{", ":", "seg_id_range", ".", ":", "seg_id_range", ".", "get", "(", "'gre'", "'vxlan'", ":", "seg_id_range", ".", "get", "#NEWLINE#", "seg_id_help", "'For VLAN networks, the VLAN VID on the physical network that realizes the virtual network. Valid VLAN VIDs are %(vlan_min)s through %(vlan_max)s. For GRE or VXLAN networks, the tunnel ID. Valid tunnel IDs for GRE networks are %(gre_min)s through %(gre_max)s. For VXLAN networks, %(vxlan_min)s through %(vxlan_max)s.'", "self", ".", "seg_id_range", "'vlan_max'", ":", "self", ".", "seg_id_range", "[", "'vlan'", "]", "#NEWLINE#", "'gre_min'", ":", "self", ".", "seg_id_range", "[", "'gre'", "self", ".", "seg_id_range", "#NEWLINE#", "'vxlan_min'", ":", "self", ".", "seg_id_range", "[", "'vxlan_max'", ":", "self", ".", "seg_id_range", "[", "self", ".", "fields", "[", "=", "seg_id_help", "#NEWLINE#", "supported_provider_types", "=", "neutron_settings", ".", "get", "(", "'supported_provider_types'", "(", "supported_provider_types", "network_type_choices", "=", "PROVIDER_TYPES", "#NEWLINE#", "#INDENT#", "network_type_choices", "=", "[", "net_type", "for", "net_type", "in", "PROVIDER_TYPES", "if", "(", "net_type", "supported_provider_types", "(", "network_type_choices", ")", "#NEWLINE#", "#INDENT#", "self", ".", "#INDENT#", "self", "=", "network_type_choices", ":", "#NEWLINE#", "#INDENT#", "self"]}}
{"position": {"error_location": 46, "repair_targets": [34, 41, 50], "repair_candidates": [7, 17, 79, 87, 91, 94, 101, 109, 114, 123, 128, 134, 140, 46, 166, 168, 173, 25, 36, 158, 163, 176, 185, 4, 14, 30, 65, 73, 34, 41, 50, 20, 27, 23, 44, 55, 77, 81, 151, 105, 147, 2, 9, 52, 58, 61, 85, 107, 112, 121, 126, 132, 138, 142, 180, 183, 189, 149, 157, 174]}}
{"prediction": {"error_location": 0.9869953989982605, "repair_targets": [0.7933998107910156, 0.0005120153655298054, 0.0013860969338566065], "repair_candidates": [0.0015556510770693421, 0.1042724996805191, 0.011785621754825115, 0.015872394666075706, 0.004908994771540165, 2.8838861908297986e-05, 0.003988070413470268, 0.017598873004317284, 0.0034852074459195137, 0.0039874594658613205, 0.0007092627347446978, 0.7933998107910156, 1.5106484170246404e-05, 0.0005120153655298054, 0.0004895210149697959, 0.000767320569138974, 0.0013860969338566065, 0.00030154548585414886, 0.010609184391796589, 0.0005189853836782277, 1.1303438441245817e-05, 0.0011136626126244664, 0.00230672606267035, 0.00022765767062082887, 0.00014774504234082997, 0.010256262496113777, 8.951042400440201e-05, 0.0008276731241494417, 0.00020718842279165983, 6.12842122791335e-05, 0.0005502571002580225, 4.632266063708812e-05, 1.3162282812118065e-05, 0.0016719793202355504, 1.959676774276886e-05, 0.001201617531478405, 1.1057716619689018e-05, 0.00017679089796729386, 3.854291935567744e-05, 0.0003295911301393062, 2.975689994855202e-06, 0.00017277017468586564, 2.561743485784973e-06, 0.0015794920036569238, 1.2034098290314432e-05, 3.197301339241676e-05, 0.00039168065995909274, 1.2180681551399175e-05, 0.0013055463787168264, 5.671599501511082e-05, 3.06010915664956e-05, 6.307735020527616e-06, 0.0003230845322832465, 7.846934022381902e-05, 1.8770459064398892e-05, 5.013395275454968e-05, 4.3991353777528275e-06, 2.6046882339869626e-05, 0.00023445437545888126, 0.00015929012442938983], "target_probs": 0.7952979207038879}}


{"result": {"time": "2021-02-11 10:38:50.423677", "n_pass": [482, 55, 54], "n_token": 187, "loss": [0.009680470451712608, 0.20175492763519287], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def __init__(", "self", ",", "request", ",", "*", "args", ",", "self", ")", ".", "__init__", "(", "request", ",", "*", "args", ",", "**", "kwargs", ")", "#NEWLINE#", "tenant_choices", "(", "tenants", ",", "has_more", ")", "=", "request", ")", "#NEWLINE#", "for", "tenant", "in", "tenants", ":", "#NEWLINE#", "#INDENT#", "if", "tenant", "#NEWLINE#", "#INDENT#", "tenant_choices", "(", "net_type", ".", "id", ",", "tenant", "#UNINDENT#", "self", ".", "=", "tenant_choices", "#NEWLINE#", "#INDENT#", "self", ".", "=", "self", ".", "get_network_profile_choices", "(", "request", "neutron", ".", "is_extension_supported", "(", "request", ",", "#NEWLINE#", "#INDENT#", "neutron_settings", "#NEWLINE#", "seg_id_range", "=", "neutron_settings", ".", "get", "#NEWLINE#", "self", ".", "seg_id_range", "=", "{", ":", "seg_id_range", ".", ":", "seg_id_range", ".", "get", "(", "'gre'", "'vxlan'", ":", "seg_id_range", ".", "get", "#NEWLINE#", "seg_id_help", "'For VLAN networks, the VLAN VID on the physical network that realizes the virtual network. Valid VLAN VIDs are %(vlan_min)s through %(vlan_max)s. For GRE or VXLAN networks, the tunnel ID. Valid tunnel IDs for GRE networks are %(gre_min)s through %(gre_max)s. For VXLAN networks, %(vxlan_min)s through %(vxlan_max)s.'", "self", ".", "seg_id_range", "'vlan_max'", ":", "self", ".", "seg_id_range", "[", "'vlan'", "]", "#NEWLINE#", "'gre_min'", ":", "self", ".", "seg_id_range", "[", "'gre'", "self", ".", "seg_id_range", "#NEWLINE#", "'vxlan_min'", ":", "self", ".", "seg_id_range", "[", "'vxlan_max'", ":", "self", ".", "seg_id_range", "[", "self", ".", "fields", "[", "=", "seg_id_help", "#NEWLINE#", "supported_provider_types", "=", "neutron_settings", ".", "get", "(", "'supported_provider_types'", "(", "supported_provider_types", "network_type_choices", "=", "PROVIDER_TYPES", "#NEWLINE#", "#INDENT#", "network_type_choices", "=", "[", "net_type", "for", "net_type", "in", "PROVIDER_TYPES", "if", "(", "net_type", "supported_provider_types", "(", "network_type_choices", ")", "#NEWLINE#", "#INDENT#", "self", ".", "#INDENT#", "self", "=", "network_type_choices", ":", "#NEWLINE#", "#INDENT#", "self"]}}
{"position": {"error_location": 46, "repair_targets": [34, 41, 50], "repair_candidates": [7, 17, 76, 84, 88, 91, 98, 106, 111, 120, 125, 131, 137, 46, 163, 165, 170, 25, 36, 155, 160, 173, 182, 4, 14, 30, 65, 70, 34, 41, 50, 20, 27, 23, 44, 55, 74, 78, 148, 102, 144, 2, 9, 52, 58, 61, 82, 104, 109, 118, 123, 129, 135, 139, 177, 180, 186, 146, 154, 171]}}
{"prediction": {"error_location": 0.9903663396835327, "repair_targets": [0.8151649236679077, 0.0005223897751420736, 0.001607902580872178], "repair_candidates": [0.0020329360850155354, 0.0950656458735466, 0.00784754753112793, 0.021747173741459846, 0.004321871791034937, 2.34680155699607e-05, 0.0030596042051911354, 0.014228176325559616, 0.002415950410068035, 0.002795875072479248, 0.0006363436696119606, 0.8151649236679077, 1.0717433724494185e-05, 0.0005223897751420736, 0.0004767555510625243, 0.0005192516837269068, 0.001607902580872178, 0.0002537292893975973, 0.006437492556869984, 0.00032422682852484286, 3.583783473004587e-05, 0.0014391409931704402, 0.0013297363184392452, 0.00017102801939472556, 0.00015664803504478186, 0.008640863932669163, 7.766059570712969e-05, 0.0005546626052819192, 0.0001621076080482453, 4.783445183420554e-05, 0.0005223379703238606, 4.490186620387249e-05, 1.6282227079500444e-05, 0.001981676323339343, 2.0085262804059312e-05, 0.0011168541386723518, 1.0377968465036247e-05, 0.00013101934746373445, 3.821125574177131e-05, 0.00027004245202988386, 2.526054231566377e-06, 0.00013614777708426118, 2.1420562461571535e-06, 0.0012523725163191557, 1.033356602420099e-05, 2.391098860243801e-05, 0.0003159688494633883, 9.656812835601158e-06, 0.0011783771915361285, 4.7824461944401264e-05, 2.50461271207314e-05, 5.015233000449371e-06, 0.0002606234629638493, 6.186636892380193e-05, 1.5096255992830265e-05, 3.8852136640343815e-05, 3.448556753937737e-06, 2.151380613213405e-05, 0.00019959727069362998, 0.00013042244245298207], "target_probs": 0.8172951936721802}}


{"result": {"time": "2021-02-11 10:38:50.601802", "n_pass": [483, 56, 55], "n_token": 184, "loss": [0.02472003549337387, 0.2152319997549057], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def __init__(", "self", ",", "request", ",", "*", "args", ",", "self", ")", ".", "__init__", "(", "request", ",", "*", "args", ",", "**", "kwargs", ")", "#NEWLINE#", "tenant_choices", "(", "tenants", ",", "has_more", ")", "=", "request", ")", "#NEWLINE#", "for", "tenant", "in", "tenants", ":", "#NEWLINE#", "#INDENT#", "if", "tenant", "#NEWLINE#", "#INDENT#", "tenant_choices", "(", "net_type", ".", "id", ",", "tenant", "#UNINDENT#", "self", ".", "=", "tenant_choices", "#NEWLINE#", "#INDENT#", "self", ".", "=", "self", ".", "get_network_profile_choices", "(", "request", "(", "request", ",", "#NEWLINE#", "#INDENT#", "neutron_settings", "#NEWLINE#", "seg_id_range", "=", "neutron_settings", ".", "get", "#NEWLINE#", "self", ".", "seg_id_range", "=", "{", ":", "seg_id_range", ".", ":", "seg_id_range", ".", "get", "(", "'gre'", "'vxlan'", ":", "seg_id_range", ".", "get", "#NEWLINE#", "seg_id_help", "'For VLAN networks, the VLAN VID on the physical network that realizes the virtual network. Valid VLAN VIDs are %(vlan_min)s through %(vlan_max)s. For GRE or VXLAN networks, the tunnel ID. Valid tunnel IDs for GRE networks are %(gre_min)s through %(gre_max)s. For VXLAN networks, %(vxlan_min)s through %(vxlan_max)s.'", "self", ".", "seg_id_range", "'vlan_max'", ":", "self", ".", "seg_id_range", "[", "'vlan'", "]", "#NEWLINE#", "'gre_min'", ":", "self", ".", "seg_id_range", "[", "'gre'", "self", ".", "seg_id_range", "#NEWLINE#", "'vxlan_min'", ":", "self", ".", "seg_id_range", "[", "'vxlan_max'", ":", "self", ".", "seg_id_range", "[", "self", ".", "fields", "[", "=", "seg_id_help", "#NEWLINE#", "supported_provider_types", "=", "neutron_settings", ".", "get", "(", "'supported_provider_types'", "(", "supported_provider_types", "network_type_choices", "=", "PROVIDER_TYPES", "#NEWLINE#", "#INDENT#", "network_type_choices", "=", "[", "net_type", "for", "net_type", "in", "PROVIDER_TYPES", "if", "(", "net_type", "supported_provider_types", "(", "network_type_choices", ")", "#NEWLINE#", "#INDENT#", "self", ".", "#INDENT#", "self", "=", "network_type_choices", ":", "#NEWLINE#", "#INDENT#", "self"]}}
{"position": {"error_location": 46, "repair_targets": [34, 41, 50], "repair_candidates": [7, 17, 73, 81, 85, 88, 95, 103, 108, 117, 122, 128, 134, 46, 160, 162, 167, 25, 36, 152, 157, 170, 179, 4, 14, 30, 65, 67, 34, 41, 50, 20, 27, 23, 44, 55, 71, 75, 145, 99, 141, 2, 9, 52, 58, 61, 79, 101, 106, 115, 120, 126, 132, 136, 174, 177, 183, 143, 151, 168]}}
{"prediction": {"error_location": 0.9755832552909851, "repair_targets": [0.8043774366378784, 0.0005398920620791614, 0.001437028986401856], "repair_candidates": [0.002135609742254019, 0.09911872446537018, 0.007451757788658142, 0.024213528260588646, 0.004107333719730377, 2.2521260689245537e-05, 0.0027394630014896393, 0.014018372632563114, 0.0022465360816568136, 0.002469984581694007, 0.0006207441329024732, 0.8043774366378784, 1.056857672665501e-05, 0.0005398920620791614, 0.0007317973067983985, 0.0010478999465703964, 0.001437028986401856, 0.00023856038751546293, 0.008466958068311214, 0.0004972779424861073, 3.195621684426442e-05, 0.00010388530790805817, 0.0017636677948758006, 0.000269215990556404, 0.00036751278094016016, 0.010087396018207073, 8.457010699203238e-05, 0.000869487994350493, 0.00020286619837861508, 9.181757923215628e-05, 0.0011726898374035954, 3.9508784539066255e-05, 1.2745608728437219e-05, 0.002366625005379319, 2.1908899725531228e-05, 0.0010477975010871887, 1.300130952586187e-05, 0.0001251989888260141, 3.252827809774317e-05, 0.000302328378893435, 2.5673364234535256e-06, 0.00016253114154096693, 1.9481817616906483e-06, 0.0015163597417995334, 9.222368134942371e-06, 2.9777833333355375e-05, 0.00031262694392353296, 9.035697985382285e-06, 0.00162984780035913, 4.8236757720587775e-05, 2.275329279655125e-05, 5.4836273193359375e-06, 0.00025061023188754916, 6.395294622052461e-05, 1.4935613762645517e-05, 4.3586260289885104e-05, 3.21134143632662e-06, 1.8494522009859793e-05, 0.00023343319480773062, 0.000122483164886944], "target_probs": 0.8063543438911438}}


{"result": {"time": "2021-02-11 10:38:50.780620", "n_pass": [492, 57, 56], "n_token": 181, "loss": [0.008360624313354492, 0.20522354543209076], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def __init__(", "self", ",", "request", ",", "*", "args", ",", "self", ")", ".", "__init__", "(", "request", ",", "*", "args", ",", "**", "kwargs", ")", "#NEWLINE#", "tenant_choices", "(", "tenants", ",", "has_more", ")", "=", "request", ")", "#NEWLINE#", "for", "tenant", "in", "tenants", ":", "#NEWLINE#", "#INDENT#", "if", "tenant", "#NEWLINE#", "#INDENT#", "tenant_choices", "(", "net_type", ".", "id", ",", "tenant", "#UNINDENT#", "self", ".", "=", "tenant_choices", "#NEWLINE#", "#INDENT#", "self", ".", "=", "self", ".", "get_network_profile_choices", "(", "request", "(", "request", ",", "#NEWLINE#", "#INDENT#", "neutron_settings", "#NEWLINE#", "seg_id_range", "=", "neutron_settings", ".", "get", "#NEWLINE#", "self", ".", "seg_id_range", "=", "{", ":", "seg_id_range", ".", ":", "seg_id_range", ".", "'vxlan'", ":", "seg_id_range", ".", "get", "#NEWLINE#", "seg_id_help", "'For VLAN networks, the VLAN VID on the physical network that realizes the virtual network. Valid VLAN VIDs are %(vlan_min)s through %(vlan_max)s. For GRE or VXLAN networks, the tunnel ID. Valid tunnel IDs for GRE networks are %(gre_min)s through %(gre_max)s. For VXLAN networks, %(vxlan_min)s through %(vxlan_max)s.'", "self", ".", "seg_id_range", "'vlan_max'", ":", "self", ".", "seg_id_range", "[", "'vlan'", "]", "#NEWLINE#", "'gre_min'", ":", "self", ".", "seg_id_range", "[", "'gre'", "self", ".", "seg_id_range", "#NEWLINE#", "'vxlan_min'", ":", "self", ".", "seg_id_range", "[", "'vxlan_max'", ":", "self", ".", "seg_id_range", "[", "self", ".", "fields", "[", "=", "seg_id_help", "#NEWLINE#", "supported_provider_types", "=", "neutron_settings", ".", "get", "(", "'supported_provider_types'", "(", "supported_provider_types", "network_type_choices", "=", "PROVIDER_TYPES", "#NEWLINE#", "#INDENT#", "network_type_choices", "=", "[", "net_type", "for", "net_type", "in", "PROVIDER_TYPES", "if", "(", "net_type", "supported_provider_types", "(", "network_type_choices", ")", "#NEWLINE#", "#INDENT#", "self", ".", "#INDENT#", "self", "=", "network_type_choices", ":", "#NEWLINE#", "#INDENT#", "self"]}}
{"position": {"error_location": 46, "repair_targets": [34, 41, 50], "repair_candidates": [7, 17, 73, 81, 85, 88, 92, 100, 105, 114, 119, 125, 131, 46, 157, 159, 164, 25, 36, 149, 154, 167, 176, 4, 14, 30, 65, 67, 34, 41, 50, 20, 27, 23, 44, 55, 71, 75, 142, 96, 138, 2, 9, 52, 58, 61, 79, 98, 103, 112, 117, 123, 129, 133, 171, 174, 180, 140, 148, 165]}}
{"prediction": {"error_location": 0.9916742444038391, "repair_targets": [0.8128940463066101, 0.0004508191777858883, 0.0011203775648027658], "repair_candidates": [0.003026013495400548, 0.0957416370511055, 0.00625277915969491, 0.03425655514001846, 0.00420790771022439, 2.171864798583556e-05, 0.0025629804003983736, 0.011948260478675365, 0.0018531876849010587, 0.0020625093020498753, 0.0006623327499255538, 0.8128940463066101, 8.751884706725832e-06, 0.0004508191777858883, 0.0003359129768796265, 0.00027795444475486875, 0.0011203775648027658, 0.00020438549108803272, 0.005207803100347519, 0.00031686018337495625, 1.9268522009951994e-05, 7.605804421473294e-05, 0.0012028840137645602, 0.00017751037376001477, 0.0003078803129028529, 0.005429535638540983, 6.681920785922557e-05, 0.0006390513153746724, 0.00021871764329262078, 0.0013950951397418976, 0.00030556798446923494, 4.730732325697318e-05, 1.463532134948764e-05, 0.0020437720231711864, 1.7317728634225205e-05, 0.0007594374474138021, 1.1293219358776696e-05, 9.571748523740098e-05, 3.1287025194615126e-05, 0.0002320784260518849, 2.2536521555593936e-06, 0.00012867107579950243, 1.6752655938034877e-06, 0.0012333401245996356, 8.178295502148103e-06, 2.396086165390443e-05, 0.00023789354600012302, 7.486968570447061e-06, 0.0011980899143964052, 3.827806358458474e-05, 1.7467476936872117e-05, 4.517591605690541e-06, 0.00018987881776411086, 5.08316807099618e-05, 1.1828974493255373e-05, 3.6619214370148256e-05, 2.6824795895663556e-06, 1.477750720368931e-05, 0.00018909256323240697, 9.848444460658357e-05], "target_probs": 0.8144652247428894}}


{"result": {"time": "2021-02-11 10:38:50.975993", "n_pass": [652, 58, 57], "n_token": 179, "loss": [0.07410259544849396, 0.1351754516363144], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def __init__(", "self", ",", "request", ",", "*", "args", ",", "self", ")", ".", "__init__", "(", "request", ",", "*", "args", ",", "**", "kwargs", ")", "#NEWLINE#", "tenant_choices", "(", "tenants", ",", "has_more", ")", "=", "request", ")", "#NEWLINE#", "for", "tenant", "in", "tenants", ":", "#NEWLINE#", "#INDENT#", "if", "tenant", "#NEWLINE#", "#INDENT#", "tenant_choices", "(", "net_type", ".", "id", ",", "tenant", "#UNINDENT#", "self", ".", "=", "tenant_choices", "#NEWLINE#", "#INDENT#", "self", ".", "=", "self", ".", "get_network_profile_choices", "(", "request", "(", "request", ",", "#NEWLINE#", "#INDENT#", "neutron_settings", "#NEWLINE#", "seg_id_range", "=", "neutron_settings", ".", "get", "#NEWLINE#", "self", ".", "seg_id_range", "=", "{", ":", "seg_id_range", ".", ":", "seg_id_range", ":", "seg_id_range", ".", "get", "#NEWLINE#", "seg_id_help", "'For VLAN networks, the VLAN VID on the physical network that realizes the virtual network. Valid VLAN VIDs are %(vlan_min)s through %(vlan_max)s. For GRE or VXLAN networks, the tunnel ID. Valid tunnel IDs for GRE networks are %(gre_min)s through %(gre_max)s. For VXLAN networks, %(vxlan_min)s through %(vxlan_max)s.'", "self", ".", "seg_id_range", "'vlan_max'", ":", "self", ".", "seg_id_range", "[", "'vlan'", "]", "#NEWLINE#", "'gre_min'", ":", "self", ".", "seg_id_range", "[", "'gre'", "self", ".", "seg_id_range", "#NEWLINE#", "'vxlan_min'", ":", "self", ".", "seg_id_range", "[", "'vxlan_max'", ":", "self", ".", "seg_id_range", "[", "self", ".", "fields", "[", "=", "seg_id_help", "#NEWLINE#", "supported_provider_types", "=", "neutron_settings", ".", "get", "(", "'supported_provider_types'", "(", "supported_provider_types", "network_type_choices", "=", "PROVIDER_TYPES", "#NEWLINE#", "#INDENT#", "network_type_choices", "=", "[", "net_type", "for", "net_type", "in", "PROVIDER_TYPES", "if", "(", "net_type", "supported_provider_types", "(", "network_type_choices", ")", "#NEWLINE#", "#INDENT#", "self", ".", "#INDENT#", "self", "=", "network_type_choices", ":", "#NEWLINE#", "#INDENT#", "self"]}}
{"position": {"error_location": 46, "repair_targets": [34, 41, 50], "repair_candidates": [7, 17, 73, 81, 85, 88, 90, 98, 103, 112, 117, 123, 129, 46, 155, 157, 162, 25, 36, 147, 152, 165, 174, 4, 14, 30, 65, 67, 34, 41, 50, 20, 27, 23, 44, 55, 71, 75, 140, 94, 136, 2, 9, 52, 58, 61, 79, 96, 101, 110, 115, 121, 127, 131, 169, 172, 178, 138, 146, 163]}}
{"prediction": {"error_location": 0.9285762906074524, "repair_targets": [0.8715915679931641, 0.0004258934350218624, 0.0015452097868546844], "repair_candidates": [0.0005959525005891919, 0.051926273852586746, 0.006545639131218195, 0.005739229265600443, 0.0024144998751580715, 1.4329791156342253e-05, 0.0020746600348502398, 0.01056261919438839, 0.00222088024020195, 0.0024988988880068064, 0.00041604743455536664, 0.8715915679931641, 1.0399256098025944e-05, 0.0004258934350218624, 0.00109059177339077, 0.0016662288689985871, 0.0015452097868546844, 0.0005556283867917955, 0.005957840941846371, 0.0012073339894413948, 9.411576320417225e-05, 0.0001423509093001485, 0.002013644902035594, 0.0002760852803476155, 0.0005993740633130074, 0.017630714923143387, 0.00013977383787278086, 0.0008508828468620777, 0.000717615825124085, 0.0002965273743029684, 0.0004674264637287706, 0.0001044570017256774, 2.5019453460117802e-05, 0.002450471045449376, 2.138780473615043e-05, 0.0008262696792371571, 1.3266040696180426e-05, 0.0001038138652802445, 2.772743937384803e-05, 0.00023982614220585674, 2.512004357413389e-06, 0.00013201894762460142, 1.8252803783980198e-06, 0.0012128445087000728, 8.423414328717627e-06, 2.6992713173967786e-05, 0.000285493180854246, 8.172627531166654e-06, 0.0014474018244072795, 4.1389324906049296e-05, 2.3616279577254318e-05, 4.820902631763602e-06, 0.00024374226632062346, 5.7216650020563975e-05, 1.3253395081846975e-05, 3.861258301185444e-05, 2.695208650038694e-06, 1.8457916667102836e-05, 0.0002172133099520579, 0.0001127457435359247], "target_probs": 0.8735626339912415}}


{"result": {"time": "2021-02-11 10:38:51.151824", "n_pass": [654, 59, 58], "n_token": 177, "loss": [0.0006417360855266452, 0.5950090885162354], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def __init__(", "self", ",", "request", ",", "*", "args", ",", "self", ")", ".", "__init__", "(", "request", ",", "*", "args", ",", "**", "kwargs", ")", "#NEWLINE#", "tenant_choices", "(", "tenants", ",", "has_more", ")", "=", "request", ")", "#NEWLINE#", "for", "tenant", "in", "tenants", ":", "#NEWLINE#", "#INDENT#", "if", "tenant", "#NEWLINE#", "#INDENT#", "tenant_choices", "(", "net_type", ".", "id", ",", "tenant", "#UNINDENT#", "self", ".", "=", "tenant_choices", "#NEWLINE#", "#INDENT#", "self", ".", "=", "self", ".", "get_network_profile_choices", "(", "request", "(", "request", ",", "#NEWLINE#", "#INDENT#", "neutron_settings", "#NEWLINE#", "seg_id_range", "=", "neutron_settings", ".", "get", "#NEWLINE#", "self", ".", "seg_id_range", "=", "{", ":", "seg_id_range", ".", ":", "seg_id_range", ":", "seg_id_range", "#NEWLINE#", "seg_id_help", "'For VLAN networks, the VLAN VID on the physical network that realizes the virtual network. Valid VLAN VIDs are %(vlan_min)s through %(vlan_max)s. For GRE or VXLAN networks, the tunnel ID. Valid tunnel IDs for GRE networks are %(gre_min)s through %(gre_max)s. For VXLAN networks, %(vxlan_min)s through %(vxlan_max)s.'", "self", ".", "seg_id_range", "'vlan_max'", ":", "self", ".", "seg_id_range", "[", "'vlan'", "]", "#NEWLINE#", "'gre_min'", ":", "self", ".", "seg_id_range", "[", "'gre'", "self", ".", "seg_id_range", "#NEWLINE#", "'vxlan_min'", ":", "self", ".", "seg_id_range", "[", "'vxlan_max'", ":", "self", ".", "seg_id_range", "[", "self", ".", "fields", "[", "=", "seg_id_help", "#NEWLINE#", "supported_provider_types", "=", "neutron_settings", ".", "get", "(", "'supported_provider_types'", "(", "supported_provider_types", "network_type_choices", "=", "PROVIDER_TYPES", "#NEWLINE#", "#INDENT#", "network_type_choices", "=", "[", "net_type", "for", "net_type", "in", "PROVIDER_TYPES", "if", "(", "net_type", "supported_provider_types", "(", "network_type_choices", ")", "#NEWLINE#", "#INDENT#", "self", ".", "#INDENT#", "self", "=", "network_type_choices", ":", "#NEWLINE#", "#INDENT#", "self"]}}
{"position": {"error_location": 46, "repair_targets": [34, 41, 50], "repair_candidates": [7, 17, 73, 81, 85, 88, 90, 96, 101, 110, 115, 121, 127, 46, 153, 155, 160, 25, 36, 145, 150, 163, 172, 4, 14, 30, 65, 67, 34, 41, 50, 20, 27, 23, 44, 55, 71, 75, 138, 92, 134, 2, 9, 52, 58, 61, 79, 94, 99, 108, 113, 119, 125, 129, 167, 170, 176, 136, 144, 161]}}
{"prediction": {"error_location": 0.9993584752082825, "repair_targets": [0.5508622527122498, 0.0003592668508645147, 0.0003360553237143904], "repair_candidates": [0.02238035760819912, 0.10578972846269608, 0.0030989989172667265, 0.2956481873989105, 0.005035338457673788, 1.634634281799663e-05, 0.0012365669244900346, 0.0072347866371273994, 0.0005982156144455075, 0.000616726407315582, 0.0012121840845793486, 0.5508622527122498, 3.310832653369289e-06, 0.0003592668508645147, 0.00014458619989454746, 6.095552089391276e-05, 0.0003360553237143904, 7.876150630181655e-05, 0.0012416092213243246, 6.536305590998381e-05, 1.7869649582280545e-06, 2.359400241402909e-05, 0.0005790931754745543, 8.620809967396781e-05, 9.25313652260229e-05, 5.063898061052896e-05, 3.265336545155151e-06, 0.0004691341600846499, 0.00015232074656523764, 0.00012841734860558063, 5.160052387509495e-05, 3.7239125958876684e-05, 2.8301585643930594e-06, 0.0005072276690043509, 4.829873432754539e-06, 0.0003509310772642493, 2.9742200240434613e-06, 4.0812836232362315e-05, 7.719802852079738e-06, 0.00010110959556186572, 8.827223609841894e-07, 5.349592538550496e-05, 6.151344678073656e-07, 0.0004486636316869408, 2.5721619749674574e-06, 1.104720649891533e-05, 9.747959848027676e-05, 2.8290735372138442e-06, 0.00038485508412122726, 1.4843712051515467e-05, 8.274733772850595e-06, 2.552955947976443e-06, 8.134680683724582e-05, 2.5736773750395514e-05, 5.241578946879599e-06, 1.7618453057366423e-05, 1.383564381285396e-06, 6.208663762663491e-06, 7.618118252139539e-05, 4.43513308709953e-05], "target_probs": 0.5515575408935547}}


{"result": {"time": "2021-02-11 10:38:51.328017", "n_pass": [658, 60, 59], "n_token": 175, "loss": [0.0005635818815790117, 0.5417258739471436], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def __init__(", "self", ",", "request", ",", "*", "args", ",", "self", ")", ".", "__init__", "(", "request", ",", "*", "args", ",", "**", "kwargs", ")", "#NEWLINE#", "tenant_choices", "(", "tenants", ",", "has_more", ")", "=", "request", ")", "#NEWLINE#", "for", "tenant", "in", "tenants", ":", "#NEWLINE#", "#INDENT#", "if", "tenant", "#NEWLINE#", "#INDENT#", "tenant_choices", "(", "net_type", ".", "id", ",", "tenant", "#UNINDENT#", "self", ".", "=", "tenant_choices", "#NEWLINE#", "#INDENT#", "self", ".", "=", "self", ".", "get_network_profile_choices", "(", "request", "(", "request", ",", "#NEWLINE#", "#INDENT#", "neutron_settings", "#NEWLINE#", "seg_id_range", "=", "neutron_settings", ".", "get", "#NEWLINE#", "self", ".", "seg_id_range", "=", "{", ":", "seg_id_range", ".", ":", "seg_id_range", ":", "seg_id_range", "#NEWLINE#", "seg_id_help", "'For VLAN networks, the VLAN VID on the physical network that realizes the virtual network. Valid VLAN VIDs are %(vlan_min)s through %(vlan_max)s. For GRE or VXLAN networks, the tunnel ID. Valid tunnel IDs for GRE networks are %(gre_min)s through %(gre_max)s. For VXLAN networks, %(vxlan_min)s through %(vxlan_max)s.'", "self", ".", "seg_id_range", "self", ".", "seg_id_range", "[", "'vlan'", "]", "#NEWLINE#", "'gre_min'", ":", "self", ".", "seg_id_range", "[", "'gre'", "self", ".", "seg_id_range", "#NEWLINE#", "'vxlan_min'", ":", "self", ".", "seg_id_range", "[", "'vxlan_max'", ":", "self", ".", "seg_id_range", "[", "self", ".", "fields", "[", "=", "seg_id_help", "#NEWLINE#", "supported_provider_types", "=", "neutron_settings", ".", "get", "(", "'supported_provider_types'", "(", "supported_provider_types", "network_type_choices", "=", "PROVIDER_TYPES", "#NEWLINE#", "#INDENT#", "network_type_choices", "=", "[", "net_type", "for", "net_type", "in", "PROVIDER_TYPES", "if", "(", "net_type", "supported_provider_types", "(", "network_type_choices", ")", "#NEWLINE#", "#INDENT#", "self", ".", "#INDENT#", "self", "=", "network_type_choices", ":", "#NEWLINE#", "#INDENT#", "self"]}}
{"position": {"error_location": 46, "repair_targets": [34, 41, 50], "repair_candidates": [7, 17, 73, 81, 85, 88, 90, 96, 99, 108, 113, 119, 125, 46, 151, 153, 158, 25, 36, 143, 148, 161, 170, 4, 14, 30, 65, 67, 34, 41, 50, 20, 27, 23, 44, 55, 71, 75, 136, 92, 132, 2, 9, 52, 58, 61, 79, 94, 97, 106, 111, 117, 123, 127, 165, 168, 174, 134, 142, 159]}}
{"prediction": {"error_location": 0.9994367957115173, "repair_targets": [0.5810794234275818, 0.00033917161636054516, 0.0003247841668780893], "repair_candidates": [0.02027512900531292, 0.10463902354240417, 0.002919588703662157, 0.2704307436943054, 0.004878143779933453, 1.5352406990132295e-05, 0.00114616216160357, 0.006919071543961763, 0.0005777912447229028, 0.0005842790124006569, 0.001180146588012576, 0.5810794234275818, 3.1805179787625093e-06, 0.00033917161636054516, 0.0001323514006799087, 5.692623381037265e-05, 0.0003247841668780893, 8.223921759054065e-05, 0.0011893821647390723, 6.50370930088684e-05, 1.8043888303509448e-06, 2.116094037774019e-05, 0.0004893363220617175, 6.715018389513716e-05, 7.728725904598832e-05, 3.625401222961955e-05, 3.394204441065085e-06, 0.0002641546889208257, 9.432963997824118e-05, 4.3023315811296925e-05, 1.978897853405215e-05, 4.2959196434821934e-05, 6.431578640331281e-06, 0.0006455944967456162, 5.7059583014051896e-06, 6.25102620688267e-05, 2.0940224203513935e-06, 4.138601434533484e-05, 5.07944878336275e-06, 8.81754604051821e-05, 7.584798709103779e-07, 4.670573616749607e-05, 5.275586545394617e-07, 0.00037751003401353955, 2.2606568563787732e-06, 1.066235108737601e-05, 8.891824109014124e-05, 2.7501209842739627e-06, 0.0003507242363411933, 1.4200524674379267e-05, 7.700220521655865e-06, 2.433564759485307e-06, 7.52570922486484e-05, 2.4271526854136027e-05, 4.859456112171756e-06, 1.6622263501631096e-05, 1.3100008118271944e-06, 5.7543425100448076e-06, 6.97563955327496e-05, 4.13977395510301e-05], "target_probs": 0.5817433595657349}}


{"result": {"time": "2021-02-11 10:38:51.502503", "n_pass": [661, 61, 60], "n_token": 173, "loss": [0.0006275591440498829, 0.601332426071167], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def __init__(", "self", ",", "request", ",", "*", "args", ",", "self", ")", ".", "__init__", "(", "request", ",", "*", "args", ",", "**", "kwargs", ")", "#NEWLINE#", "tenant_choices", "(", "tenants", ",", "has_more", ")", "=", "request", ")", "#NEWLINE#", "for", "tenant", "in", "tenants", ":", "#NEWLINE#", "#INDENT#", "if", "tenant", "#NEWLINE#", "#INDENT#", "tenant_choices", "(", "net_type", ".", "id", ",", "tenant", "#UNINDENT#", "self", ".", "=", "tenant_choices", "#NEWLINE#", "#INDENT#", "self", ".", "=", "self", ".", "get_network_profile_choices", "(", "request", "(", "request", ",", "#NEWLINE#", "#INDENT#", "neutron_settings", "#NEWLINE#", "seg_id_range", "=", "neutron_settings", ".", "get", "#NEWLINE#", "self", ".", "seg_id_range", "=", "{", ":", "seg_id_range", ".", ":", "seg_id_range", ":", "seg_id_range", "#NEWLINE#", "seg_id_help", "'For VLAN networks, the VLAN VID on the physical network that realizes the virtual network. Valid VLAN VIDs are %(vlan_min)s through %(vlan_max)s. For GRE or VXLAN networks, the tunnel ID. Valid tunnel IDs for GRE networks are %(gre_min)s through %(gre_max)s. For VXLAN networks, %(vxlan_min)s through %(vxlan_max)s.'", "self", ".", "seg_id_range", "self", ".", "seg_id_range", "[", "#NEWLINE#", "'gre_min'", ":", "self", ".", "seg_id_range", "[", "'gre'", "self", ".", "seg_id_range", "#NEWLINE#", "'vxlan_min'", ":", "self", ".", "seg_id_range", "[", "'vxlan_max'", ":", "self", ".", "seg_id_range", "[", "self", ".", "fields", "[", "=", "seg_id_help", "#NEWLINE#", "supported_provider_types", "=", "neutron_settings", ".", "get", "(", "'supported_provider_types'", "(", "supported_provider_types", "network_type_choices", "=", "PROVIDER_TYPES", "#NEWLINE#", "#INDENT#", "network_type_choices", "=", "[", "net_type", "for", "net_type", "in", "PROVIDER_TYPES", "if", "(", "net_type", "supported_provider_types", "(", "network_type_choices", ")", "#NEWLINE#", "#INDENT#", "self", ".", "#INDENT#", "self", "=", "network_type_choices", ":", "#NEWLINE#", "#INDENT#", "self"]}}
{"position": {"error_location": 46, "repair_targets": [34, 41, 50], "repair_candidates": [7, 17, 73, 81, 85, 88, 90, 96, 99, 106, 111, 117, 123, 46, 149, 151, 156, 25, 36, 141, 146, 159, 168, 4, 14, 30, 65, 67, 34, 41, 50, 20, 27, 23, 44, 55, 71, 75, 134, 92, 130, 2, 9, 52, 58, 61, 79, 94, 97, 104, 109, 115, 121, 125, 163, 166, 172, 132, 140, 157]}}
{"prediction": {"error_location": 0.999372661113739, "repair_targets": [0.5473478436470032, 0.00036627904046326876, 0.0003667673154268414], "repair_candidates": [0.023062223568558693, 0.10772811621427536, 0.003149725729599595, 0.29684752225875854, 0.005203348584473133, 1.6605898053967394e-05, 0.0012518082512542605, 0.007118468172848225, 0.000597157864831388, 0.0006182341603562236, 0.0012283854885026813, 0.5473478436470032, 3.28002056448895e-06, 0.00036627904046326876, 0.00013161118840798736, 5.5728902225382626e-05, 0.0003667673154268414, 7.011288835201412e-05, 0.0013258341932669282, 5.328654879122041e-05, 1.3959643183625303e-06, 1.6745894754421897e-05, 0.000503069197293371, 5.6406202929792926e-05, 6.986671360209584e-05, 4.209142207400873e-05, 2.2615258785663173e-06, 0.0002491003542672843, 8.101142157102004e-05, 3.603571531130001e-05, 2.060658334812615e-05, 4.0843046008376405e-05, 4.236101176502416e-06, 0.000778578280005604, 3.65394930668117e-06, 9.525844507152215e-05, 3.0746573429496493e-06, 7.833982090232894e-05, 6.469319487223402e-06, 0.00013701383431907743, 1.0073471230498399e-06, 5.7524695876054466e-05, 6.023961418577528e-07, 0.00040703645208850503, 2.5469685169809964e-06, 1.2007340956188273e-05, 9.313931514043361e-05, 3.150655174977146e-06, 0.0003707588475663215, 1.6065376257756725e-05, 8.379797691304702e-06, 2.6629047624737723e-06, 8.137914846884087e-05, 2.5806397388805635e-05, 5.191431682760594e-06, 1.7568350813235156e-05, 1.4408649349206826e-06, 6.385052984114736e-06, 7.409797399304807e-05, 4.479839844861999e-05], "target_probs": 0.5480808615684509}}


{"result": {"time": "2021-02-11 10:38:51.676133", "n_pass": [662, 62, 61], "n_token": 171, "loss": [0.0005980133428238332, 0.6799299716949463], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def __init__(", "self", ",", "request", ",", "*", "args", ",", "self", ")", ".", "__init__", "(", "request", ",", "*", "args", ",", "**", "kwargs", ")", "#NEWLINE#", "tenant_choices", "(", "tenants", ",", "has_more", ")", "=", "request", ")", "#NEWLINE#", "for", "tenant", "in", "tenants", ":", "#NEWLINE#", "#INDENT#", "if", "tenant", "#NEWLINE#", "#INDENT#", "tenant_choices", "(", "net_type", ".", "id", ",", "tenant", "#UNINDENT#", "self", ".", "=", "tenant_choices", "#NEWLINE#", "#INDENT#", "self", ".", "=", "self", ".", "get_network_profile_choices", "(", "request", "(", "request", ",", "#NEWLINE#", "#INDENT#", "neutron_settings", "#NEWLINE#", "seg_id_range", "=", "neutron_settings", ".", "get", "#NEWLINE#", "self", ".", "seg_id_range", "=", "{", ":", "seg_id_range", ".", ":", "seg_id_range", ":", "seg_id_range", "#NEWLINE#", "seg_id_help", "'For VLAN networks, the VLAN VID on the physical network that realizes the virtual network. Valid VLAN VIDs are %(vlan_min)s through %(vlan_max)s. For GRE or VXLAN networks, the tunnel ID. Valid tunnel IDs for GRE networks are %(gre_min)s through %(gre_max)s. For VXLAN networks, %(vxlan_min)s through %(vxlan_max)s.'", "self", ".", "seg_id_range", "self", ".", "seg_id_range", "[", ":", "self", ".", "seg_id_range", "[", "'gre'", "self", ".", "seg_id_range", "#NEWLINE#", "'vxlan_min'", ":", "self", ".", "seg_id_range", "[", "'vxlan_max'", ":", "self", ".", "seg_id_range", "[", "self", ".", "fields", "[", "=", "seg_id_help", "#NEWLINE#", "supported_provider_types", "=", "neutron_settings", ".", "get", "(", "'supported_provider_types'", "(", "supported_provider_types", "network_type_choices", "=", "PROVIDER_TYPES", "#NEWLINE#", "#INDENT#", "network_type_choices", "=", "[", "net_type", "for", "net_type", "in", "PROVIDER_TYPES", "if", "(", "net_type", "supported_provider_types", "(", "network_type_choices", ")", "#NEWLINE#", "#INDENT#", "self", ".", "#INDENT#", "self", "=", "network_type_choices", ":", "#NEWLINE#", "#INDENT#", "self"]}}
{"position": {"error_location": 46, "repair_targets": [34, 41, 50], "repair_candidates": [7, 17, 73, 81, 85, 88, 90, 96, 99, 104, 109, 115, 121, 46, 147, 149, 154, 25, 36, 139, 144, 157, 166, 4, 14, 30, 65, 67, 34, 41, 50, 20, 27, 23, 44, 55, 71, 75, 132, 92, 128, 2, 9, 52, 58, 61, 79, 94, 97, 102, 107, 113, 119, 123, 161, 164, 170, 130, 138, 155]}}
{"prediction": {"error_location": 0.9994022846221924, "repair_targets": [0.5058832764625549, 0.00038062362000346184, 0.00038859088090248406], "repair_candidates": [0.02706444449722767, 0.10948843508958817, 0.0033116505946964025, 0.33197346329689026, 0.005443486850708723, 1.7485122953075916e-05, 0.0013301523867994547, 0.007165492977946997, 0.0005900748656131327, 0.0006197096663527191, 0.0012847554171457887, 0.5058832764625549, 3.286776973254746e-06, 0.00038062362000346184, 0.00013183463306631893, 5.576971670961939e-05, 0.00038859088090248406, 6.868905620649457e-05, 0.0012890201760455966, 5.039777170168236e-05, 1.4218524029274704e-06, 1.4921869478712324e-05, 0.0004505870456341654, 5.250754838925786e-05, 7.376613939413801e-05, 3.0293896998045966e-05, 2.1689511413569562e-06, 0.00026520961546339095, 8.216746209654957e-05, 4.37093258369714e-05, 2.316660902579315e-05, 3.344200740684755e-05, 7.2572202043375e-06, 0.000664041843265295, 7.088681286404608e-06, 0.0002069613110506907, 6.217151621967787e-06, 9.89162945188582e-05, 7.109275429684203e-06, 0.00015906021872069687, 1.3467400776789873e-06, 6.287304131546989e-05, 7.185984145507973e-07, 0.00042615446727722883, 2.947560233224067e-06, 1.1289169378869701e-05, 9.239570499630645e-05, 3.4204363146272954e-06, 0.0003512366092763841, 1.6665369912516326e-05, 8.400615115533583e-06, 2.581457238193252e-06, 8.043071284191683e-05, 2.4711296646273695e-05, 5.067090569355059e-06, 1.6865660654730164e-05, 1.4600306030843058e-06, 6.435534032789292e-06, 6.930164090590551e-05, 4.5123528252588585e-05], "target_probs": 0.5066524744033813}}


{"result": {"time": "2021-02-11 10:38:51.848065", "n_pass": [665, 63, 62], "n_token": 169, "loss": [0.0005821678787469864, 0.6705165505409241], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def __init__(", "self", ",", "request", ",", "*", "args", ",", "self", ")", ".", "__init__", "(", "request", ",", "*", "args", ",", "**", "kwargs", ")", "#NEWLINE#", "tenant_choices", "(", "tenants", ",", "has_more", ")", "=", "request", ")", "#NEWLINE#", "for", "tenant", "in", "tenants", ":", "#NEWLINE#", "#INDENT#", "if", "tenant", "#NEWLINE#", "#INDENT#", "tenant_choices", "(", "net_type", ".", "id", ",", "tenant", "#UNINDENT#", "self", ".", "=", "tenant_choices", "#NEWLINE#", "#INDENT#", "self", ".", "=", "self", ".", "get_network_profile_choices", "(", "request", "(", "request", ",", "#NEWLINE#", "#INDENT#", "neutron_settings", "#NEWLINE#", "seg_id_range", "=", "neutron_settings", ".", "get", "#NEWLINE#", "self", ".", "seg_id_range", "=", "{", ":", "seg_id_range", ".", ":", "seg_id_range", ":", "seg_id_range", "#NEWLINE#", "seg_id_help", "'For VLAN networks, the VLAN VID on the physical network that realizes the virtual network. Valid VLAN VIDs are %(vlan_min)s through %(vlan_max)s. For GRE or VXLAN networks, the tunnel ID. Valid tunnel IDs for GRE networks are %(gre_min)s through %(gre_max)s. For VXLAN networks, %(vxlan_min)s through %(vxlan_max)s.'", "self", ".", "seg_id_range", "self", ".", "seg_id_range", "[", ":", "self", ".", "seg_id_range", "self", ".", "seg_id_range", "#NEWLINE#", "'vxlan_min'", ":", "self", ".", "seg_id_range", "[", "'vxlan_max'", ":", "self", ".", "seg_id_range", "[", "self", ".", "fields", "[", "=", "seg_id_help", "#NEWLINE#", "supported_provider_types", "=", "neutron_settings", ".", "get", "(", "'supported_provider_types'", "(", "supported_provider_types", "network_type_choices", "=", "PROVIDER_TYPES", "#NEWLINE#", "#INDENT#", "network_type_choices", "=", "[", "net_type", "for", "net_type", "in", "PROVIDER_TYPES", "if", "(", "net_type", "supported_provider_types", "(", "network_type_choices", ")", "#NEWLINE#", "#INDENT#", "self", ".", "#INDENT#", "self", "=", "network_type_choices", ":", "#NEWLINE#", "#INDENT#", "self"]}}
{"position": {"error_location": 46, "repair_targets": [34, 41, 50], "repair_candidates": [7, 17, 73, 81, 85, 88, 90, 96, 99, 104, 107, 113, 119, 46, 145, 147, 152, 25, 36, 137, 142, 155, 164, 4, 14, 30, 65, 67, 34, 41, 50, 20, 27, 23, 44, 55, 71, 75, 130, 92, 126, 2, 9, 52, 58, 61, 79, 94, 97, 102, 105, 111, 117, 121, 159, 162, 168, 128, 136, 153]}}
{"prediction": {"error_location": 0.9994181394577026, "repair_targets": [0.5106642246246338, 0.0003735274076461792, 0.00040654995245859027], "repair_candidates": [0.02727028727531433, 0.10974931716918945, 0.003303579520434141, 0.32650572061538696, 0.005413967650383711, 1.741583037073724e-05, 0.0013468581018969417, 0.007180811371654272, 0.0005868167500011623, 0.0006085418863222003, 0.0012491107918322086, 0.5106642246246338, 3.3017352052411297e-06, 0.0003735274076461792, 0.0001291330554522574, 5.4678221204085276e-05, 0.00040654995245859027, 7.340413139900193e-05, 0.0012410352937877178, 5.353256347007118e-05, 1.6015253549994668e-06, 1.9482105926726945e-05, 0.000591278774663806, 4.585389615385793e-05, 6.226424738997594e-05, 2.94693854812067e-05, 1.8454884411767125e-06, 0.00023934953787829727, 7.53283966332674e-05, 3.694914630614221e-05, 2.1541354726650752e-05, 3.136434679618105e-05, 5.929785402258858e-06, 0.0006720339879393578, 7.998192813829519e-06, 0.0001440958585590124, 5.312054781825282e-06, 0.0003294067573733628, 5.344510100258049e-06, 0.00022713671205565333, 1.929676045619999e-06, 7.626621663803235e-05, 9.177983884001151e-07, 0.0004062323132529855, 3.568801503206487e-06, 1.2199778211652301e-05, 9.313576447311789e-05, 3.7844326925551286e-06, 0.0003378039109520614, 1.9012608390767127e-05, 8.25325696496293e-06, 2.4958387712104013e-06, 7.807667861925438e-05, 2.4325334379682317e-05, 5.050756044511218e-06, 1.701000837783795e-05, 1.488350562794949e-06, 6.683422725473065e-06, 7.017215102678165e-05, 4.608936797012575e-05], "target_probs": 0.5114443302154541}}


{"result": {"time": "2021-02-11 10:38:52.019147", "n_pass": [668, 64, 63], "n_token": 167, "loss": [0.0006090931710787117, 0.6695859432220459], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def __init__(", "self", ",", "request", ",", "*", "args", ",", "self", ")", ".", "__init__", "(", "request", ",", "*", "args", ",", "**", "kwargs", ")", "#NEWLINE#", "tenant_choices", "(", "tenants", ",", "has_more", ")", "=", "request", ")", "#NEWLINE#", "for", "tenant", "in", "tenants", ":", "#NEWLINE#", "#INDENT#", "if", "tenant", "#NEWLINE#", "#INDENT#", "tenant_choices", "(", "net_type", ".", "id", ",", "tenant", "#UNINDENT#", "self", ".", "=", "tenant_choices", "#NEWLINE#", "#INDENT#", "self", ".", "=", "self", ".", "get_network_profile_choices", "(", "request", "(", "request", ",", "#NEWLINE#", "#INDENT#", "neutron_settings", "#NEWLINE#", "seg_id_range", "=", "neutron_settings", ".", "get", "#NEWLINE#", "self", ".", "seg_id_range", "=", "{", ":", "seg_id_range", ".", ":", "seg_id_range", ":", "seg_id_range", "#NEWLINE#", "seg_id_help", "'For VLAN networks, the VLAN VID on the physical network that realizes the virtual network. Valid VLAN VIDs are %(vlan_min)s through %(vlan_max)s. For GRE or VXLAN networks, the tunnel ID. Valid tunnel IDs for GRE networks are %(gre_min)s through %(gre_max)s. For VXLAN networks, %(vxlan_min)s through %(vxlan_max)s.'", "self", ".", "seg_id_range", "self", ".", "seg_id_range", "[", ":", "self", ".", "seg_id_range", "self", ".", "seg_id_range", "#NEWLINE#", "self", ".", "seg_id_range", "[", "'vxlan_max'", ":", "self", ".", "seg_id_range", "[", "self", ".", "fields", "[", "=", "seg_id_help", "#NEWLINE#", "supported_provider_types", "=", "neutron_settings", ".", "get", "(", "'supported_provider_types'", "(", "supported_provider_types", "network_type_choices", "=", "PROVIDER_TYPES", "#NEWLINE#", "#INDENT#", "network_type_choices", "=", "[", "net_type", "for", "net_type", "in", "PROVIDER_TYPES", "if", "(", "net_type", "supported_provider_types", "(", "network_type_choices", ")", "#NEWLINE#", "#INDENT#", "self", ".", "#INDENT#", "self", "=", "network_type_choices", ":", "#NEWLINE#", "#INDENT#", "self"]}}
{"position": {"error_location": 46, "repair_targets": [34, 41, 50], "repair_candidates": [7, 17, 73, 81, 85, 88, 90, 96, 99, 104, 107, 111, 117, 46, 143, 145, 150, 25, 36, 135, 140, 153, 162, 4, 14, 30, 65, 67, 34, 41, 50, 20, 27, 23, 44, 55, 71, 75, 128, 92, 124, 2, 9, 52, 58, 61, 79, 94, 97, 102, 105, 109, 115, 119, 157, 160, 166, 126, 134, 151]}}
{"prediction": {"error_location": 0.9993911981582642, "repair_targets": [0.5110805034637451, 0.0003874152316711843, 0.00045260091428644955], "repair_candidates": [0.02687068283557892, 0.11224955320358276, 0.0034546132665127516, 0.3227931261062622, 0.005451135337352753, 1.8198508769273758e-05, 0.00145608966704458, 0.007591728121042252, 0.0006268350407481194, 0.0006437662523239851, 0.001243006787262857, 0.5110805034637451, 3.542563717928715e-06, 0.0003874152316711843, 0.00014537946844939142, 6.299696542555466e-05, 0.00045260091428644955, 9.062932076631114e-05, 0.0012596045853570104, 6.860124267404899e-05, 3.4225333820359083e-06, 2.2588399588130414e-05, 0.0004494350287131965, 7.196901424322277e-05, 8.446245192317292e-05, 5.919484465266578e-05, 3.6880880998069188e-06, 0.00027638289611786604, 0.0001362757757306099, 6.207401747815311e-05, 3.763967106351629e-05, 4.321929009165615e-05, 1.2908588360005524e-05, 0.0008466713479720056, 2.231957478215918e-05, 0.00014914857456460595, 9.044192665896844e-06, 0.00029486449784599245, 1.8480262951925397e-05, 0.00031525242957286537, 1.200161477754591e-06, 0.00010134508193004876, 1.4690150464957696e-06, 0.0002603953762445599, 4.908915798296221e-06, 1.2803932804672513e-05, 9.268091525882483e-05, 4.166337021160871e-06, 0.0003583738289307803, 2.218204826931469e-05, 8.338601219293196e-06, 2.525549007259542e-06, 8.145371248247102e-05, 2.5293273210991174e-05, 5.206854439165909e-06, 1.7295260477112606e-05, 1.5333824876506696e-06, 6.915976427990245e-06, 7.429244578815997e-05, 4.853638893109746e-05], "target_probs": 0.5119205117225647}}


{"result": {"time": "2021-02-11 10:38:52.356056", "n_pass": [675, 66, 64], "n_token": 165, "loss": [0.0018112935358658433, 0.6316482424736023], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def __init__(", "self", ",", "request", ",", "*", "args", ",", "self", ")", ".", "__init__", "(", "request", ",", "*", "args", ",", "**", "kwargs", ")", "#NEWLINE#", "tenant_choices", "(", "tenants", ",", "has_more", ")", "=", "request", ")", "#NEWLINE#", "for", "tenant", "in", "tenants", ":", "#NEWLINE#", "#INDENT#", "if", "tenant", "#NEWLINE#", "#INDENT#", "tenant_choices", "(", "net_type", ".", "id", ",", "tenant", "#UNINDENT#", "self", ".", "=", "tenant_choices", "#NEWLINE#", "#INDENT#", "self", ".", "=", "self", ".", "get_network_profile_choices", "(", "request", "(", "request", ",", "#NEWLINE#", "#INDENT#", "neutron_settings", "#NEWLINE#", "seg_id_range", "=", "neutron_settings", ".", "get", "#NEWLINE#", "self", ".", "seg_id_range", "=", "{", ":", "seg_id_range", ".", ":", "seg_id_range", ":", "seg_id_range", "#NEWLINE#", "seg_id_help", "'For VLAN networks, the VLAN VID on the physical network that realizes the virtual network. Valid VLAN VIDs are %(vlan_min)s through %(vlan_max)s. For GRE or VXLAN networks, the tunnel ID. Valid tunnel IDs for GRE networks are %(gre_min)s through %(gre_max)s. For VXLAN networks, %(vxlan_min)s through %(vxlan_max)s.'", "self", ".", "seg_id_range", "self", ".", "seg_id_range", "[", ":", "self", ".", "seg_id_range", "self", ".", "seg_id_range", "#NEWLINE#", "self", ".", "seg_id_range", "[", "'vxlan_max'", ":", "self", ".", "seg_id_range", "[", "self", ".", "=", "seg_id_help", "#NEWLINE#", "supported_provider_types", "=", "neutron_settings", ".", "get", "(", "'supported_provider_types'", "(", "supported_provider_types", "network_type_choices", "=", "PROVIDER_TYPES", "#NEWLINE#", "#INDENT#", "network_type_choices", "=", "[", "net_type", "for", "net_type", "in", "PROVIDER_TYPES", "if", "(", "net_type", "supported_provider_types", "(", "network_type_choices", ")", "#NEWLINE#", "#INDENT#", "self", ".", "#INDENT#", "self", "=", "network_type_choices", ":", "#NEWLINE#", "#INDENT#", "self"]}}
{"position": {"error_location": 46, "repair_targets": [34, 41, 50], "repair_candidates": [7, 17, 73, 81, 85, 88, 90, 96, 99, 104, 107, 111, 117, 46, 141, 143, 148, 25, 36, 133, 138, 151, 160, 4, 14, 30, 65, 67, 34, 41, 50, 20, 27, 23, 44, 55, 71, 75, 126, 92, 122, 2, 9, 52, 58, 61, 79, 94, 97, 102, 105, 109, 115, 119, 155, 158, 164, 124, 132, 149]}}
{"prediction": {"error_location": 0.9981904625892639, "repair_targets": [0.5310124158859253, 0.0003228325513191521, 0.000379428849555552], "repair_candidates": [0.025894833728671074, 0.11354558169841766, 0.0036344043910503387, 0.30394822359085083, 0.0051865908317267895, 1.8909990103566088e-05, 0.0013085483806207776, 0.007578604388982058, 0.0005800623912364244, 0.0006320452666841447, 0.0009783247951418161, 0.5310124158859253, 2.9396480840659933e-06, 0.0003228325513191521, 0.00010336677223676816, 4.5812987082172185e-05, 0.000379428849555552, 8.022820838959888e-05, 0.001458392129279673, 3.9870294131105766e-05, 1.077174601959996e-06, 8.734527909837198e-06, 0.0002797017805278301, 2.441765900584869e-05, 3.586525417631492e-05, 1.1876723874593154e-05, 1.8920389948107186e-06, 0.0002386463020229712, 4.932488809572533e-05, 1.3778200809611008e-05, 6.713473794661695e-06, 1.9746414182009175e-05, 2.8177535114082275e-06, 0.0006322370027191937, 4.004502898169449e-06, 8.694581629242748e-05, 2.7937708182435017e-06, 0.00040268339216709137, 9.000737009046134e-06, 0.00028180013759993017, 1.6414210222137626e-06, 4.979606455890462e-05, 1.5082090385476477e-06, 5.969512858428061e-05, 1.7198286741404445e-06, 2.521056740079075e-05, 8.639442239655182e-05, 4.014291789644631e-06, 0.0006041224696673453, 1.999606865865644e-05, 9.611197128833737e-06, 3.1360145840153564e-06, 0.00011014916526619345, 2.7174197384738363e-05, 5.47410218132427e-06, 1.575925671204459e-05, 1.4323775303637376e-06, 5.50610275240615e-06, 6.185186794027686e-05, 4.0231279854197055e-05], "target_probs": 0.531714677810669}}


{"result": {"time": "2021-02-11 10:38:52.526373", "n_pass": [679, 67, 65], "n_token": 163, "loss": [0.0028049908578395844, 0.6725083589553833], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def __init__(", "self", ",", "request", ",", "*", "args", ",", "self", ")", ".", "__init__", "(", "request", ",", "*", "args", ",", "**", "kwargs", ")", "#NEWLINE#", "tenant_choices", "(", "tenants", ",", "has_more", ")", "=", "request", ")", "#NEWLINE#", "for", "tenant", "in", "tenants", ":", "#NEWLINE#", "#INDENT#", "if", "tenant", "#NEWLINE#", "#INDENT#", "tenant_choices", "(", "net_type", ".", "id", ",", "tenant", "#UNINDENT#", "self", ".", "=", "tenant_choices", "#NEWLINE#", "#INDENT#", "self", ".", "=", "self", ".", "get_network_profile_choices", "(", "request", "(", "request", ",", "#NEWLINE#", "#INDENT#", "neutron_settings", "#NEWLINE#", "seg_id_range", "=", "neutron_settings", ".", "get", "#NEWLINE#", "self", ".", "seg_id_range", "=", "{", ":", "seg_id_range", ".", ":", "seg_id_range", ":", "seg_id_range", "#NEWLINE#", "seg_id_help", "'For VLAN networks, the VLAN VID on the physical network that realizes the virtual network. Valid VLAN VIDs are %(vlan_min)s through %(vlan_max)s. For GRE or VXLAN networks, the tunnel ID. Valid tunnel IDs for GRE networks are %(gre_min)s through %(gre_max)s. For VXLAN networks, %(vxlan_min)s through %(vxlan_max)s.'", "self", ".", "seg_id_range", "self", ".", "seg_id_range", "[", ":", "self", ".", "seg_id_range", "self", ".", "seg_id_range", "#NEWLINE#", "self", ".", "seg_id_range", "[", "'vxlan_max'", ":", "self", ".", "seg_id_range", "[", "self", ".", "=", "seg_id_help", "#NEWLINE#", "supported_provider_types", "=", "neutron_settings", "(", "'supported_provider_types'", "(", "supported_provider_types", "network_type_choices", "=", "PROVIDER_TYPES", "#NEWLINE#", "#INDENT#", "network_type_choices", "=", "[", "net_type", "for", "net_type", "in", "PROVIDER_TYPES", "if", "(", "net_type", "supported_provider_types", "(", "network_type_choices", ")", "#NEWLINE#", "#INDENT#", "self", ".", "#INDENT#", "self", "=", "network_type_choices", ":", "#NEWLINE#", "#INDENT#", "self"]}}
{"position": {"error_location": 46, "repair_targets": [34, 41, 50], "repair_candidates": [7, 17, 73, 81, 85, 88, 90, 96, 99, 104, 107, 111, 117, 46, 139, 141, 146, 25, 36, 131, 136, 149, 158, 4, 14, 30, 65, 67, 34, 41, 50, 20, 27, 23, 44, 55, 71, 75, 126, 92, 122, 2, 9, 52, 58, 61, 79, 94, 97, 102, 105, 109, 115, 119, 153, 156, 162, 124, 130, 147]}}
{"prediction": {"error_location": 0.9971988201141357, "repair_targets": [0.5097145438194275, 0.0002817740314640105, 0.0004303213208913803], "repair_candidates": [0.024229390546679497, 0.12108758836984634, 0.00389100587926805, 0.31856027245521545, 0.005505746230483055, 2.020418287429493e-05, 0.0013672796776518226, 0.0077201006934046745, 0.0006241624942049384, 0.0006992034614086151, 0.0009899060241878033, 0.5097145438194275, 2.8596139145520283e-06, 0.0002817740314640105, 0.0001058916313922964, 4.886315582552925e-05, 0.0004303213208913803, 0.00011143524170620367, 0.000796148378867656, 4.415243165567517e-05, 8.334810104315693e-07, 1.147968851000769e-05, 0.0003568005922716111, 3.188990740454756e-05, 3.9697282772976905e-05, 1.2422627150954213e-05, 2.2322665245155804e-06, 0.0002238978340756148, 4.192529013380408e-05, 1.1627331332419999e-05, 7.328525498451199e-06, 1.8767055735224858e-05, 2.833117832778953e-06, 0.0005552914808504283, 4.61656736661098e-06, 0.00010425967775518075, 3.196043508069124e-06, 0.00035793223651126027, 7.361398729699431e-06, 0.00027883247821591794, 2.0899565242871176e-06, 6.302812835201621e-05, 1.8213147541246144e-06, 6.318865052890033e-05, 2.0122390651522437e-06, 2.1979089069645852e-05, 9.389982733409852e-05, 5.266129846859258e-06, 0.0011140340939164162, 1.955037805601023e-05, 1.0242487405776046e-05, 3.338594751767232e-06, 0.00011405891564209014, 3.0295988835860044e-05, 6.070313702366548e-06, 1.7702495824778453e-05, 1.6259361927950522e-06, 6.955701337574283e-06, 7.088897109497339e-05, 4.780412928084843e-05], "target_probs": 0.5104266405105591}}


{"result": {"time": "2021-02-11 10:38:53.022992", "n_pass": [685, 70, 66], "n_token": 161, "loss": [0.001608031801879406, 0.6823945641517639], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def __init__(", "self", ",", "request", ",", "*", "args", ",", "self", ")", ".", "__init__", "(", "request", ",", "*", "args", ",", "**", "kwargs", ")", "#NEWLINE#", "tenant_choices", "(", "tenants", ",", "has_more", ")", "=", "request", ")", "#NEWLINE#", "for", "tenant", "in", "tenants", ":", "#NEWLINE#", "#INDENT#", "if", "tenant", "#NEWLINE#", "#INDENT#", "tenant_choices", "(", "net_type", ".", "id", ",", "tenant", "#UNINDENT#", "self", ".", "=", "tenant_choices", "#NEWLINE#", "#INDENT#", "self", ".", "=", "self", ".", "get_network_profile_choices", "(", "request", "(", "request", ",", "#NEWLINE#", "#INDENT#", "neutron_settings", "#NEWLINE#", "seg_id_range", "=", "neutron_settings", ".", "get", "#NEWLINE#", "self", ".", "seg_id_range", "=", "{", ":", "seg_id_range", ".", ":", "seg_id_range", ":", "seg_id_range", "#NEWLINE#", "seg_id_help", "'For VLAN networks, the VLAN VID on the physical network that realizes the virtual network. Valid VLAN VIDs are %(vlan_min)s through %(vlan_max)s. For GRE or VXLAN networks, the tunnel ID. Valid tunnel IDs for GRE networks are %(gre_min)s through %(gre_max)s. For VXLAN networks, %(vxlan_min)s through %(vxlan_max)s.'", "self", ".", "seg_id_range", "self", ".", "seg_id_range", "[", ":", "self", ".", "seg_id_range", "self", ".", "seg_id_range", "#NEWLINE#", "self", ".", "seg_id_range", "[", "'vxlan_max'", ":", "self", ".", "seg_id_range", "[", "self", ".", "=", "seg_id_help", "#NEWLINE#", "supported_provider_types", "=", "neutron_settings", "(", "'supported_provider_types'", "(", "supported_provider_types", "network_type_choices", "=", "PROVIDER_TYPES", "#NEWLINE#", "#INDENT#", "network_type_choices", "net_type", "for", "net_type", "in", "PROVIDER_TYPES", "if", "(", "net_type", "supported_provider_types", "(", "network_type_choices", ")", "#NEWLINE#", "#INDENT#", "self", ".", "#INDENT#", "self", "=", "network_type_choices", ":", "#NEWLINE#", "#INDENT#", "self"]}}
{"position": {"error_location": 46, "repair_targets": [34, 41, 50], "repair_candidates": [7, 17, 73, 81, 85, 88, 90, 96, 99, 104, 107, 111, 117, 46, 137, 139, 144, 25, 36, 131, 136, 147, 156, 4, 14, 30, 65, 67, 34, 41, 50, 20, 27, 23, 44, 55, 71, 75, 126, 92, 122, 2, 9, 52, 58, 61, 79, 94, 97, 102, 105, 109, 115, 119, 151, 154, 160, 124, 130, 145]}}
{"prediction": {"error_location": 0.9983932375907898, "repair_targets": [0.5045509338378906, 0.00031598174246028066, 0.0005383888492360711], "repair_candidates": [0.02325046993792057, 0.12909653782844543, 0.004041770473122597, 0.31425026059150696, 0.005407888442277908, 2.072108691208996e-05, 0.0014194927643984556, 0.008689051494002342, 0.0006043617613613605, 0.0007068819249980152, 0.0007745940238237381, 0.5045509338378906, 3.509381485855556e-06, 0.00031598174246028066, 0.00011571543291211128, 5.7540521083865315e-05, 0.0005383888492360711, 0.00012843134754803032, 0.0014251094544306397, 5.5318920203717425e-05, 1.4534382444253424e-06, 1.736932790663559e-05, 0.0006937244324944913, 3.365196243976243e-05, 3.220716826035641e-05, 1.7544700313010253e-05, 3.008243993463111e-06, 0.00032156636007130146, 4.582200199365616e-05, 1.766245077305939e-05, 1.0765080332930665e-05, 2.2593592802877538e-05, 3.7326333313103532e-06, 0.0006771449116058648, 5.049366336606909e-06, 0.00010841769108083099, 4.598394752974855e-06, 0.00047172984341159463, 1.0261467650707345e-05, 0.0002103134465869516, 2.030162022492732e-06, 8.278338646050543e-05, 2.39025712289731e-06, 6.708697765134275e-05, 3.0105973110039486e-06, 2.3749977117404342e-05, 0.00010931878932751715, 7.440010449499823e-06, 0.0011352996807545424, 2.3475924535887316e-05, 2.0661849703174084e-05, 8.64104731590487e-06, 0.0001649611658649519, 2.8014486815663986e-05, 6.627564289374277e-06, 2.443250377837103e-05, 1.89072261491674e-06, 6.594671958737308e-06, 6.808770558563992e-05, 5.197018981561996e-05], "target_probs": 0.5054053068161011}}


{"result": {"time": "2021-02-11 10:38:53.189245", "n_pass": [688, 71, 67], "n_token": 159, "loss": [0.0018429452320560813, 0.6300647854804993], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def __init__(", "self", ",", "request", ",", "*", "args", ",", "self", ")", ".", "__init__", "(", "request", ",", "*", "args", ",", "**", "kwargs", ")", "#NEWLINE#", "tenant_choices", "(", "tenants", ",", "has_more", ")", "=", "request", ")", "#NEWLINE#", "for", "tenant", "in", "tenants", ":", "#NEWLINE#", "#INDENT#", "if", "tenant", "#NEWLINE#", "#INDENT#", "tenant_choices", "(", "net_type", ".", "id", ",", "tenant", "#UNINDENT#", "self", ".", "=", "tenant_choices", "#NEWLINE#", "#INDENT#", "self", ".", "=", "self", ".", "get_network_profile_choices", "(", "request", "(", "request", ",", "#NEWLINE#", "#INDENT#", "neutron_settings", "#NEWLINE#", "seg_id_range", "=", "neutron_settings", ".", "get", "#NEWLINE#", "self", ".", "seg_id_range", "=", "{", ":", "seg_id_range", ".", ":", "seg_id_range", ":", "seg_id_range", "#NEWLINE#", "seg_id_help", "'For VLAN networks, the VLAN VID on the physical network that realizes the virtual network. Valid VLAN VIDs are %(vlan_min)s through %(vlan_max)s. For GRE or VXLAN networks, the tunnel ID. Valid tunnel IDs for GRE networks are %(gre_min)s through %(gre_max)s. For VXLAN networks, %(vxlan_min)s through %(vxlan_max)s.'", "self", ".", "seg_id_range", "self", ".", "seg_id_range", "[", ":", "self", ".", "seg_id_range", "self", ".", "seg_id_range", "#NEWLINE#", "self", ".", "seg_id_range", "[", "'vxlan_max'", ":", "self", ".", "seg_id_range", "[", "self", ".", "=", "seg_id_help", "#NEWLINE#", "supported_provider_types", "=", "neutron_settings", "(", "'supported_provider_types'", "(", "supported_provider_types", "network_type_choices", "=", "PROVIDER_TYPES", "#NEWLINE#", "#INDENT#", "network_type_choices", "net_type", "for", "net_type", "in", "(", "net_type", "supported_provider_types", "(", "network_type_choices", ")", "#NEWLINE#", "#INDENT#", "self", ".", "#INDENT#", "self", "=", "network_type_choices", ":", "#NEWLINE#", "#INDENT#", "self"]}}
{"position": {"error_location": 46, "repair_targets": [34, 41, 50], "repair_candidates": [7, 17, 73, 81, 85, 88, 90, 96, 99, 104, 107, 111, 117, 46, 137, 139, 142, 25, 36, 131, 136, 145, 154, 4, 14, 30, 65, 67, 34, 41, 50, 20, 27, 23, 44, 55, 71, 75, 126, 92, 122, 2, 9, 52, 58, 61, 79, 94, 97, 102, 105, 109, 115, 119, 149, 152, 158, 124, 130, 143]}}
{"prediction": {"error_location": 0.9981586337089539, "repair_targets": [0.5318034291267395, 0.00027549697551876307, 0.0004784071643371135], "repair_candidates": [0.023240357637405396, 0.12840715050697327, 0.003975383937358856, 0.2902509868144989, 0.004980588331818581, 2.1887050024815835e-05, 0.002035846933722496, 0.0070332735776901245, 0.0006659862119704485, 0.0006071780808269978, 0.0006992423441261053, 0.5318034291267395, 4.038631686853478e-06, 0.00027549697551876307, 0.00010437963646836579, 4.3678752263076603e-05, 0.0004784071643371135, 0.0001248765183845535, 0.0012383556459099054, 3.212040974176489e-05, 1.1420308965170989e-06, 1.5102964425750542e-05, 0.0005351778236217797, 4.195416113361716e-05, 3.5202760045649484e-05, 1.6100848370115273e-05, 3.764304210562841e-06, 0.00026739275199361145, 5.237048026174307e-05, 1.919160786201246e-05, 1.264372986042872e-05, 1.8386221199762076e-05, 4.694510607805569e-06, 0.000547323958016932, 6.825518084951909e-06, 0.00012126439105486497, 5.558677457884187e-06, 0.0003795009688474238, 1.4030532838660292e-05, 0.00028412413666956127, 2.475060455253697e-06, 7.333917892538011e-05, 3.1450467758986633e-06, 5.301702185533941e-05, 3.604593530326383e-06, 2.2571977751795202e-05, 0.00010457861208124086, 1.1339333468640689e-05, 0.001011742977425456, 1.5953948604874313e-05, 1.8691996956476942e-05, 1.1637823263299651e-05, 0.00010847659723367542, 1.2314130799495615e-05, 2.8393790216796333e-06, 2.7924768801312894e-05, 2.106743750118767e-06, 4.961508693668293e-06, 5.8846962929237634e-05, 4.598859595716931e-05], "target_probs": 0.5325573086738586}}


{"result": {"time": "2021-02-11 10:38:53.517483", "n_pass": [696, 73, 68], "n_token": 157, "loss": [0.0021098037250339985, 0.5938239097595215], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def __init__(", "self", ",", "request", ",", "*", "args", ",", "self", ")", ".", "__init__", "(", "request", ",", "*", "args", ",", "**", "kwargs", ")", "#NEWLINE#", "tenant_choices", "(", "tenants", ",", "has_more", ")", "=", "request", ")", "#NEWLINE#", "for", "tenant", "in", "tenants", ":", "#NEWLINE#", "#INDENT#", "if", "tenant", "#NEWLINE#", "#INDENT#", "tenant_choices", "(", "net_type", ".", "id", ",", "tenant", "#UNINDENT#", "self", ".", "=", "tenant_choices", "#NEWLINE#", "#INDENT#", "self", ".", "=", "self", ".", "get_network_profile_choices", "(", "request", "(", "request", ",", "#NEWLINE#", "#INDENT#", "neutron_settings", "#NEWLINE#", "seg_id_range", "=", "neutron_settings", ".", "get", "#NEWLINE#", "self", ".", "seg_id_range", "=", "{", ":", "seg_id_range", ".", ":", "seg_id_range", ":", "seg_id_range", "#NEWLINE#", "seg_id_help", "'For VLAN networks, the VLAN VID on the physical network that realizes the virtual network. Valid VLAN VIDs are %(vlan_min)s through %(vlan_max)s. For GRE or VXLAN networks, the tunnel ID. Valid tunnel IDs for GRE networks are %(gre_min)s through %(gre_max)s. For VXLAN networks, %(vxlan_min)s through %(vxlan_max)s.'", "self", ".", "seg_id_range", "self", ".", "seg_id_range", "[", ":", "self", ".", "seg_id_range", "self", ".", "seg_id_range", "#NEWLINE#", "self", ".", "seg_id_range", "[", "'vxlan_max'", ":", "self", ".", "seg_id_range", "[", "self", ".", "=", "seg_id_help", "#NEWLINE#", "supported_provider_types", "=", "neutron_settings", "(", "'supported_provider_types'", "(", "supported_provider_types", "network_type_choices", "=", "PROVIDER_TYPES", "#NEWLINE#", "#INDENT#", "network_type_choices", "net_type", "for", "net_type", "in", "(", "net_type", "supported_provider_types", "(", "network_type_choices", ")", "#NEWLINE#", "#INDENT#", "self", ".", "#INDENT#", "self", "=", "network_type_choices", "#INDENT#", "self"]}}
{"position": {"error_location": 46, "repair_targets": [34, 41, 50], "repair_candidates": [7, 17, 73, 81, 85, 88, 90, 96, 99, 104, 107, 111, 117, 46, 137, 139, 142, 25, 36, 131, 136, 145, 154, 4, 14, 30, 65, 67, 34, 41, 50, 20, 27, 23, 44, 55, 71, 75, 126, 92, 122, 2, 9, 52, 58, 61, 79, 94, 97, 102, 105, 109, 115, 119, 149, 152, 156, 124, 130, 143]}}
{"prediction": {"error_location": 0.9978923201560974, "repair_targets": [0.5512068867683411, 0.0003539658209774643, 0.0006507697398774326], "repair_candidates": [0.021254297345876694, 0.13295382261276245, 0.002881929511204362, 0.2690303325653076, 0.003477271879091859, 2.6368941689725034e-05, 0.0016705874586477876, 0.008275127969682217, 0.0004720600263681263, 0.0006891833618283272, 0.000733991211745888, 0.5512068867683411, 4.555673058348475e-06, 0.0003539658209774643, 0.00010028840188169852, 4.660998092731461e-05, 0.0006507697398774326, 9.693986066849902e-05, 0.001099436660297215, 4.2291765566915274e-05, 1.1565568911464652e-06, 1.492440696893027e-05, 0.0005701765767298639, 4.4392163545126095e-05, 4.1215349483536556e-05, 1.9222641640226357e-05, 3.7890592921030475e-06, 0.0003206469409633428, 6.253728497540578e-05, 2.4334689442184754e-05, 1.5206939679046627e-05, 1.937482738867402e-05, 5.099815552966902e-06, 0.0008146678446792066, 9.227328519045841e-06, 0.00017588460468687117, 6.864234364911681e-06, 0.0005229684757068753, 1.4656792700407095e-05, 0.0004403493949212134, 3.2087848467199365e-06, 8.8260363554582e-05, 3.9965289033716545e-06, 6.254670734051615e-05, 4.5411120481730904e-06, 2.668783963599708e-05, 0.0001391587284160778, 1.091038211598061e-05, 0.0011033987393602729, 1.619343129277695e-05, 2.1441481294459663e-05, 1.2968985174666159e-05, 0.00020357216999400407, 2.353204217797611e-05, 4.71149633085588e-06, 4.0884511690819636e-05, 1.474082068853022e-06, 2.2745036858395906e-06, 1.8701914086705074e-05, 1.8165988876717165e-05], "target_probs": 0.5522116422653198}}


{"result": {"time": "2021-02-11 10:38:53.683372", "n_pass": [698, 74, 69], "n_token": 156, "loss": [0.0011518517276272178, 0.5310237407684326], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["def __init__(", "self", ",", "request", ",", "*", "args", ",", "self", ")", ".", "__init__", "(", "request", ",", "*", "args", ",", "**", "kwargs", ")", "#NEWLINE#", "tenant_choices", "(", "tenants", ",", "has_more", ")", "=", "request", ")", "#NEWLINE#", "for", "tenant", "in", "tenants", ":", "#NEWLINE#", "#INDENT#", "if", "tenant", "#NEWLINE#", "#INDENT#", "tenant_choices", "(", "net_type", ".", "id", ",", "tenant", "#UNINDENT#", "self", ".", "=", "tenant_choices", "#NEWLINE#", "#INDENT#", "self", ".", "=", "self", ".", "get_network_profile_choices", "(", "request", "(", "request", ",", "#NEWLINE#", "#INDENT#", "neutron_settings", "#NEWLINE#", "seg_id_range", "=", "neutron_settings", ".", "get", "#NEWLINE#", "self", ".", "seg_id_range", "=", "{", ":", "seg_id_range", ".", ":", "seg_id_range", ":", "seg_id_range", "#NEWLINE#", "seg_id_help", "'For VLAN networks, the VLAN VID on the physical network that realizes the virtual network. Valid VLAN VIDs are %(vlan_min)s through %(vlan_max)s. For GRE or VXLAN networks, the tunnel ID. Valid tunnel IDs for GRE networks are %(gre_min)s through %(gre_max)s. For VXLAN networks, %(vxlan_min)s through %(vxlan_max)s.'", "self", ".", "seg_id_range", "self", ".", "seg_id_range", "[", ":", "self", ".", "seg_id_range", "self", ".", "seg_id_range", "#NEWLINE#", "self", ".", "seg_id_range", "[", "'vxlan_max'", ":", "self", ".", "seg_id_range", "[", "self", ".", "=", "seg_id_help", "#NEWLINE#", "supported_provider_types", "=", "neutron_settings", "(", "'supported_provider_types'", "(", "supported_provider_types", "network_type_choices", "=", "PROVIDER_TYPES", "#NEWLINE#", "#INDENT#", "network_type_choices", "net_type", "for", "net_type", "in", "(", "net_type", "supported_provider_types", "(", "network_type_choices", ")", "#NEWLINE#", "#INDENT#", "self", ".", "#INDENT#", "self", "=", "network_type_choices", "#INDENT#", "self"]}}
{"position": {"error_location": 45, "repair_targets": [33, 40, 49], "repair_candidates": [6, 16, 72, 80, 84, 87, 89, 95, 98, 103, 106, 110, 116, 45, 136, 138, 141, 24, 35, 130, 135, 144, 153, 3, 13, 29, 64, 66, 33, 40, 49, 19, 26, 22, 43, 54, 70, 74, 125, 91, 121, 1, 8, 51, 57, 60, 78, 93, 96, 101, 104, 108, 114, 118, 148, 151, 155, 123, 129, 142]}}
{"prediction": {"error_location": 0.9988489151000977, "repair_targets": [0.5869186520576477, 0.0003511377435643226, 0.0007329052896238863], "repair_candidates": [0.010419913567602634, 0.15007054805755615, 0.00209078099578619, 0.22292375564575195, 0.006560388952493668, 2.8433056286303326e-05, 0.0038719605654478073, 0.007213455159217119, 0.0008774120360612869, 0.0011174277169629931, 0.0014878255315124989, 0.5869186520576477, 4.456352144188713e-06, 0.0003511377435643226, 7.951845327625051e-05, 4.0222774259746075e-05, 0.0007329052896238863, 8.387616253457963e-05, 0.0018201539060100913, 2.2615689886151813e-05, 6.701803840769571e-07, 1.082197286450537e-05, 0.0005065664881840348, 2.9827922844560817e-05, 2.2604604964726605e-05, 1.4053319318918511e-05, 2.032486918324139e-06, 0.00022641586838290095, 4.693767914432101e-05, 2.049151953542605e-05, 1.201511167892022e-05, 1.2464130122680217e-05, 2.715672735575936e-06, 0.0004421929770614952, 4.444340902409749e-06, 0.00011642742902040482, 4.180729774816427e-06, 0.00024134838895406574, 9.7163920145249e-06, 0.000252245255978778, 1.7480207361586508e-06, 6.301655230345204e-05, 2.331146788492333e-06, 4.2739200580399483e-05, 2.8128761186962947e-06, 2.313121694896836e-05, 7.684953743591905e-05, 7.231014478747966e-06, 0.0008661765605211258, 1.1481224646558985e-05, 1.4197741620591842e-05, 9.027045052789617e-06, 0.0001160928004537709, 1.4191407899488695e-05, 2.680964371393202e-06, 2.895676516345702e-05, 5.953277764092491e-07, 1.0514698942643008e-06, 1.2455740034056362e-05, 9.634712114348076e-06], "target_probs": 0.5880026817321777}}


{"result": {"time": "2021-02-11 10:38:54.168289", "n_pass": [703, 77, 70], "n_token": 155, "loss": [0.0015393561916425824, 0.39462780952453613], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["def __init__(", "self", ",", "request", "*", "args", ",", "self", ")", ".", "__init__", "(", "request", ",", "*", "args", ",", "**", "kwargs", ")", "#NEWLINE#", "tenant_choices", "(", "tenants", ",", "has_more", ")", "=", "request", ")", "#NEWLINE#", "for", "tenant", "in", "tenants", ":", "#NEWLINE#", "#INDENT#", "if", "tenant", "#NEWLINE#", "#INDENT#", "tenant_choices", "(", "net_type", ".", "id", ",", "tenant", "#UNINDENT#", "self", ".", "=", "tenant_choices", "#NEWLINE#", "#INDENT#", "self", ".", "=", "self", ".", "get_network_profile_choices", "(", "request", "(", "request", ",", "#NEWLINE#", "#INDENT#", "neutron_settings", "#NEWLINE#", "seg_id_range", "=", "neutron_settings", ".", "get", "#NEWLINE#", "self", ".", "seg_id_range", "=", "{", ":", "seg_id_range", ".", ":", "seg_id_range", ":", "seg_id_range", "#NEWLINE#", "seg_id_help", "'For VLAN networks, the VLAN VID on the physical network that realizes the virtual network. Valid VLAN VIDs are %(vlan_min)s through %(vlan_max)s. For GRE or VXLAN networks, the tunnel ID. Valid tunnel IDs for GRE networks are %(gre_min)s through %(gre_max)s. For VXLAN networks, %(vxlan_min)s through %(vxlan_max)s.'", "self", ".", "seg_id_range", "self", ".", "seg_id_range", "[", ":", "self", ".", "seg_id_range", "self", ".", "seg_id_range", "#NEWLINE#", "self", ".", "seg_id_range", "[", "'vxlan_max'", ":", "self", ".", "seg_id_range", "[", "self", ".", "=", "seg_id_help", "#NEWLINE#", "supported_provider_types", "=", "neutron_settings", "(", "'supported_provider_types'", "(", "supported_provider_types", "network_type_choices", "=", "PROVIDER_TYPES", "#NEWLINE#", "#INDENT#", "network_type_choices", "net_type", "for", "net_type", "in", "(", "net_type", "supported_provider_types", "(", "network_type_choices", ")", "#NEWLINE#", "#INDENT#", "self", ".", "#INDENT#", "self", "=", "network_type_choices", "#INDENT#", "self"]}}
{"position": {"error_location": 44, "repair_targets": [32, 39, 48], "repair_candidates": [5, 15, 71, 79, 83, 86, 88, 94, 97, 102, 105, 109, 115, 44, 135, 137, 140, 23, 34, 129, 134, 143, 152, 3, 12, 28, 63, 65, 32, 39, 48, 18, 25, 21, 42, 53, 69, 73, 124, 90, 120, 1, 7, 50, 56, 59, 77, 92, 95, 100, 103, 107, 113, 117, 147, 150, 154, 122, 128, 141]}}
{"prediction": {"error_location": 0.9984616041183472, "repair_targets": [0.6729350686073303, 0.00046597086475230753, 0.0005297782481648028], "repair_candidates": [0.013345392420887947, 0.08778820931911469, 0.01788339577615261, 0.17819759249687195, 0.004122985526919365, 3.5609551559900865e-05, 0.005785095971077681, 0.008832485415041447, 0.0016371419187635183, 0.0012981253676116467, 0.0014515095390379429, 0.6729350686073303, 5.757852250098949e-06, 0.00046597086475230753, 0.00013321064761839807, 6.373560609063134e-05, 0.0005297782481648028, 0.00010844944335985929, 0.001707234070636332, 2.7322739697410725e-05, 9.942052656697342e-07, 1.3575761840911582e-05, 0.0005381585797294974, 3.9641341572860256e-05, 3.405247480259277e-05, 1.51166905197897e-05, 2.908716624006047e-06, 0.00025672907941043377, 5.025372956879437e-05, 2.112880611093715e-05, 1.5064262697705999e-05, 1.539969161967747e-05, 3.7475317640200956e-06, 0.00046612558071501553, 5.844193310622359e-06, 0.00012421119026839733, 5.0939020184159745e-06, 0.00034280610270798206, 1.1297179298708215e-05, 0.00027995125856250525, 2.0983711692679208e-06, 7.357432332355529e-05, 2.6732666356110713e-06, 4.828026067116298e-05, 3.5058958474110113e-06, 2.1091058442834765e-05, 8.617917774245143e-05, 9.916338967741467e-06, 0.0009103264892473817, 1.3225600014266092e-05, 1.6879896065802313e-05, 1.0366774404246826e-05, 0.00013050298730377108, 1.6248322936007753e-05, 3.155834292556392e-06, 2.9458353310474195e-05, 9.51261995396635e-07, 1.5337684544647345e-06, 1.2965638234163634e-05, 1.0916777682723477e-05], "target_probs": 0.673930823802948}}


{"result": {"time": "2021-02-11 10:38:54.333015", "n_pass": [704, 78, 71], "n_token": 154, "loss": [0.002195806708186865, 0.2870086133480072], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["def __init__(", "self", ",", "request", "args", ",", "self", ")", ".", "__init__", "(", "request", ",", "*", "args", ",", "**", "kwargs", ")", "#NEWLINE#", "tenant_choices", "(", "tenants", ",", "has_more", ")", "=", "request", ")", "#NEWLINE#", "for", "tenant", "in", "tenants", ":", "#NEWLINE#", "#INDENT#", "if", "tenant", "#NEWLINE#", "#INDENT#", "tenant_choices", "(", "net_type", ".", "id", ",", "tenant", "#UNINDENT#", "self", ".", "=", "tenant_choices", "#NEWLINE#", "#INDENT#", "self", ".", "=", "self", ".", "get_network_profile_choices", "(", "request", "(", "request", ",", "#NEWLINE#", "#INDENT#", "neutron_settings", "#NEWLINE#", "seg_id_range", "=", "neutron_settings", ".", "get", "#NEWLINE#", "self", ".", "seg_id_range", "=", "{", ":", "seg_id_range", ".", ":", "seg_id_range", ":", "seg_id_range", "#NEWLINE#", "seg_id_help", "'For VLAN networks, the VLAN VID on the physical network that realizes the virtual network. Valid VLAN VIDs are %(vlan_min)s through %(vlan_max)s. For GRE or VXLAN networks, the tunnel ID. Valid tunnel IDs for GRE networks are %(gre_min)s through %(gre_max)s. For VXLAN networks, %(vxlan_min)s through %(vxlan_max)s.'", "self", ".", "seg_id_range", "self", ".", "seg_id_range", "[", ":", "self", ".", "seg_id_range", "self", ".", "seg_id_range", "#NEWLINE#", "self", ".", "seg_id_range", "[", "'vxlan_max'", ":", "self", ".", "seg_id_range", "[", "self", ".", "=", "seg_id_help", "#NEWLINE#", "supported_provider_types", "=", "neutron_settings", "(", "'supported_provider_types'", "(", "supported_provider_types", "network_type_choices", "=", "PROVIDER_TYPES", "#NEWLINE#", "#INDENT#", "network_type_choices", "net_type", "for", "net_type", "in", "(", "net_type", "supported_provider_types", "(", "network_type_choices", ")", "#NEWLINE#", "#INDENT#", "self", ".", "#INDENT#", "self", "=", "network_type_choices", "#INDENT#", "self"]}}
{"position": {"error_location": 43, "repair_targets": [31, 38, 47], "repair_candidates": [4, 14, 70, 78, 82, 85, 87, 93, 96, 101, 104, 108, 114, 43, 134, 136, 139, 22, 33, 128, 133, 142, 151, 3, 11, 27, 62, 64, 31, 38, 47, 17, 24, 20, 41, 52, 68, 72, 123, 89, 119, 1, 6, 49, 55, 58, 76, 91, 94, 99, 102, 106, 112, 116, 146, 149, 153, 121, 127, 140]}}
{"prediction": {"error_location": 0.9978067278862, "repair_targets": [0.7488065361976624, 0.0006621924694627523, 0.0010365592315793037], "repair_candidates": [0.02527610771358013, 0.01932605728507042, 0.014044552110135555, 0.1406630575656891, 0.004346553236246109, 0.00010601021494949237, 0.015074220485985279, 0.01376909390091896, 0.0038624757435172796, 0.002863585250452161, 0.001866498845629394, 0.7488065361976624, 9.45606007007882e-06, 0.0006621924694627523, 0.00021407831809483469, 0.00010194328933721408, 0.0010365592315793037, 7.641464617336169e-05, 0.0022392573300749063, 4.896968312095851e-05, 1.384973643325793e-06, 1.9177132344339043e-05, 0.0008150627254508436, 5.133814556756988e-05, 5.217242141952738e-05, 1.893401895358693e-05, 3.5136758924636524e-06, 0.000374072726117447, 7.048299448797479e-05, 2.3784825316397473e-05, 1.7618311176192947e-05, 2.185358971473761e-05, 4.51318965133396e-06, 0.000745877216104418, 5.956217592029134e-06, 0.00020355057495180517, 6.635287718381733e-06, 0.0005548735498450696, 1.3357762327359524e-05, 0.00036642461782321334, 2.463941882524523e-06, 0.00011895860370714217, 2.995745489897672e-06, 8.150922076310962e-05, 4.3375775931053795e-06, 3.136268787784502e-05, 0.00013242157001513988, 1.2716064702544827e-05, 0.0014127533650025725, 2.0193445379845798e-05, 2.714476067922078e-05, 1.5000484381744172e-05, 0.00024079390277620405, 3.185041350661777e-05, 4.795028416992864e-06, 5.2543520723702386e-05, 1.2725132592095179e-06, 2.691596591830603e-06, 2.2247240849537775e-05, 1.7689713786239736e-05], "target_probs": 0.750505268573761}}


{"result": {"time": "2021-02-11 10:38:54.657064", "n_pass": [708, 80, 72], "n_token": 153, "loss": [0.001401038491167128, 0.18872836232185364], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["def __init__(", "self", ",", "request", "args", ",", "self", ".", "__init__", "(", "request", ",", "*", "args", ",", "**", "kwargs", ")", "#NEWLINE#", "tenant_choices", "(", "tenants", ",", "has_more", ")", "=", "request", ")", "#NEWLINE#", "for", "tenant", "in", "tenants", ":", "#NEWLINE#", "#INDENT#", "if", "tenant", "#NEWLINE#", "#INDENT#", "tenant_choices", "(", "net_type", ".", "id", ",", "tenant", "#UNINDENT#", "self", ".", "=", "tenant_choices", "#NEWLINE#", "#INDENT#", "self", ".", "=", "self", ".", "get_network_profile_choices", "(", "request", "(", "request", ",", "#NEWLINE#", "#INDENT#", "neutron_settings", "#NEWLINE#", "seg_id_range", "=", "neutron_settings", ".", "get", "#NEWLINE#", "self", ".", "seg_id_range", "=", "{", ":", "seg_id_range", ".", ":", "seg_id_range", ":", "seg_id_range", "#NEWLINE#", "seg_id_help", "'For VLAN networks, the VLAN VID on the physical network that realizes the virtual network. Valid VLAN VIDs are %(vlan_min)s through %(vlan_max)s. For GRE or VXLAN networks, the tunnel ID. Valid tunnel IDs for GRE networks are %(gre_min)s through %(gre_max)s. For VXLAN networks, %(vxlan_min)s through %(vxlan_max)s.'", "self", ".", "seg_id_range", "self", ".", "seg_id_range", "[", ":", "self", ".", "seg_id_range", "self", ".", "seg_id_range", "#NEWLINE#", "self", ".", "seg_id_range", "[", "'vxlan_max'", ":", "self", ".", "seg_id_range", "[", "self", ".", "=", "seg_id_help", "#NEWLINE#", "supported_provider_types", "=", "neutron_settings", "(", "'supported_provider_types'", "(", "supported_provider_types", "network_type_choices", "=", "PROVIDER_TYPES", "#NEWLINE#", "#INDENT#", "network_type_choices", "net_type", "for", "net_type", "in", "(", "net_type", "supported_provider_types", "(", "network_type_choices", ")", "#NEWLINE#", "#INDENT#", "self", ".", "#INDENT#", "self", "=", "network_type_choices", "#INDENT#", "self"]}}
{"position": {"error_location": 42, "repair_targets": [30, 37, 46], "repair_candidates": [4, 13, 69, 77, 81, 84, 86, 92, 95, 100, 103, 107, 113, 42, 133, 135, 138, 21, 32, 127, 132, 141, 150, 3, 10, 26, 61, 63, 30, 37, 46, 16, 23, 19, 40, 51, 67, 71, 122, 88, 118, 1, 6, 48, 54, 57, 75, 90, 93, 98, 101, 105, 111, 115, 145, 148, 152, 120, 126, 139]}}
{"prediction": {"error_location": 0.9986000657081604, "repair_targets": [0.8261250257492065, 0.0009821737185120583, 0.0009041847661137581], "repair_candidates": [0.036922603845596313, 0.02463788539171219, 0.014409859664738178, 0.01912025734782219, 0.01132213231176138, 0.0003854630922432989, 0.028208980336785316, 0.016103709116578102, 0.004776987247169018, 0.004237074870616198, 0.0019133067689836025, 0.8261250257492065, 8.943812645156868e-06, 0.0009821737185120583, 0.00020440002845134586, 0.00013899670739192516, 0.0009041847661137581, 0.0001047628466039896, 0.0037447442300617695, 5.291512206895277e-05, 1.404109639224771e-06, 1.7968195606954396e-05, 0.0010670677293092012, 4.0729362808633596e-05, 4.1258193959947675e-05, 2.1921321604168043e-05, 2.9551113129855366e-06, 0.0004285489849280566, 6.0757050960091874e-05, 2.7998918085359037e-05, 1.8506312699173577e-05, 2.3427302949130535e-05, 3.95331244362751e-06, 0.0007765904301777482, 5.749721367465099e-06, 0.000159094764967449, 6.050971023796592e-06, 0.0005882903933525085, 1.1868520232383162e-05, 0.0002930822956841439, 2.429438609397039e-06, 0.00011591912334552035, 2.981525312861777e-06, 7.96014501247555e-05, 4.246668140694965e-06, 2.917633537435904e-05, 0.00010295223910361528, 8.992709808808286e-06, 0.001295155263505876, 1.8266355255036615e-05, 2.844751361408271e-05, 1.462421005271608e-05, 0.000260629050899297, 3.12888078042306e-05, 5.005473212804645e-06, 5.158612475497648e-05, 1.1709519185387762e-06, 2.353989657422062e-06, 2.6238913051201962e-05, 1.7442614989704452e-05], "target_probs": 0.8280113935470581}}


{"result": {"time": "2021-02-11 10:38:54.819019", "n_pass": [709, 81, 73], "n_token": 152, "loss": [0.006612444296479225, 0.19189034402370453], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["def __init__(", "self", ",", "request", "args", ",", "self", "__init__", "(", "request", ",", "*", "args", ",", "**", "kwargs", ")", "#NEWLINE#", "tenant_choices", "(", "tenants", ",", "has_more", ")", "=", "request", ")", "#NEWLINE#", "for", "tenant", "in", "tenants", ":", "#NEWLINE#", "#INDENT#", "if", "tenant", "#NEWLINE#", "#INDENT#", "tenant_choices", "(", "net_type", ".", "id", ",", "tenant", "#UNINDENT#", "self", ".", "=", "tenant_choices", "#NEWLINE#", "#INDENT#", "self", ".", "=", "self", ".", "get_network_profile_choices", "(", "request", "(", "request", ",", "#NEWLINE#", "#INDENT#", "neutron_settings", "#NEWLINE#", "seg_id_range", "=", "neutron_settings", ".", "get", "#NEWLINE#", "self", ".", "seg_id_range", "=", "{", ":", "seg_id_range", ".", ":", "seg_id_range", ":", "seg_id_range", "#NEWLINE#", "seg_id_help", "'For VLAN networks, the VLAN VID on the physical network that realizes the virtual network. Valid VLAN VIDs are %(vlan_min)s through %(vlan_max)s. For GRE or VXLAN networks, the tunnel ID. Valid tunnel IDs for GRE networks are %(gre_min)s through %(gre_max)s. For VXLAN networks, %(vxlan_min)s through %(vxlan_max)s.'", "self", ".", "seg_id_range", "self", ".", "seg_id_range", "[", ":", "self", ".", "seg_id_range", "self", ".", "seg_id_range", "#NEWLINE#", "self", ".", "seg_id_range", "[", "'vxlan_max'", ":", "self", ".", "seg_id_range", "[", "self", ".", "=", "seg_id_help", "#NEWLINE#", "supported_provider_types", "=", "neutron_settings", "(", "'supported_provider_types'", "(", "supported_provider_types", "network_type_choices", "=", "PROVIDER_TYPES", "#NEWLINE#", "#INDENT#", "network_type_choices", "net_type", "for", "net_type", "in", "(", "net_type", "supported_provider_types", "(", "network_type_choices", ")", "#NEWLINE#", "#INDENT#", "self", ".", "#INDENT#", "self", "=", "network_type_choices", "#INDENT#", "self"]}}
{"position": {"error_location": 41, "repair_targets": [29, 36, 45], "repair_candidates": [4, 12, 68, 76, 80, 83, 85, 91, 94, 99, 102, 106, 112, 41, 132, 134, 137, 20, 31, 126, 131, 140, 149, 3, 9, 25, 60, 62, 29, 36, 45, 15, 22, 18, 39, 50, 66, 70, 121, 87, 117, 1, 6, 47, 53, 56, 74, 89, 92, 97, 100, 104, 110, 114, 144, 147, 151, 119, 125, 138]}}
{"prediction": {"error_location": 0.993409276008606, "repair_targets": [0.823961615562439, 0.0008209708030335605, 0.0006147910025902092], "repair_candidates": [0.014777002856135368, 0.03412581980228424, 0.026222271844744682, 0.008953802287578583, 0.005395041778683662, 0.0011614506365731359, 0.0371413379907608, 0.02451246976852417, 0.008242280222475529, 0.005720953922718763, 0.0005903108394704759, 0.823961615562439, 1.1765386261686217e-05, 0.0008209708030335605, 0.0001457911857869476, 0.00014048360753804445, 0.0006147910025902092, 5.855614290339872e-05, 0.0019723374862223864, 4.204993456369266e-05, 8.945338549892767e-07, 1.3250932170194574e-05, 0.0004485533863771707, 4.181108306511305e-05, 5.5981385230552405e-05, 1.9079630874330178e-05, 2.744155608525034e-06, 0.00042290534474886954, 6.333384953904897e-05, 1.9602986867539585e-05, 1.3658323041454423e-05, 2.4130464225891046e-05, 3.7398933727672556e-06, 0.0007922460208646953, 6.61514650346362e-06, 0.00015026914479676634, 5.653283096762607e-06, 0.0005683241761289537, 1.4399261090147775e-05, 0.00039797634235583246, 2.7946202862949576e-06, 0.00011905623250640929, 3.2178397759707877e-06, 8.10352066764608e-05, 4.458904641069239e-06, 3.269263470428996e-05, 0.0001291036169277504, 1.1253688171564136e-05, 0.0014888652367517352, 1.6991345546557568e-05, 3.187865513609722e-05, 1.3676805792783853e-05, 0.00027666427195072174, 2.403281359875109e-05, 5.3246640163706616e-06, 3.5051674785790965e-05, 1.2159175639681052e-06, 2.855484808605979e-06, 2.3836782929720357e-05, 1.981437708309386e-05], "target_probs": 0.8253973722457886}}


{"result": {"time": "2021-02-11 10:38:54.980495", "n_pass": [710, 82, 74], "n_token": 151, "loss": [0.004964287858456373, 0.19857008755207062], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["def __init__(", "self", ",", "request", "args", ",", "self", "(", "request", ",", "*", "args", ",", "**", "kwargs", ")", "#NEWLINE#", "tenant_choices", "(", "tenants", ",", "has_more", ")", "=", "request", ")", "#NEWLINE#", "for", "tenant", "in", "tenants", ":", "#NEWLINE#", "#INDENT#", "if", "tenant", "#NEWLINE#", "#INDENT#", "tenant_choices", "(", "net_type", ".", "id", ",", "tenant", "#UNINDENT#", "self", ".", "=", "tenant_choices", "#NEWLINE#", "#INDENT#", "self", ".", "=", "self", ".", "get_network_profile_choices", "(", "request", "(", "request", ",", "#NEWLINE#", "#INDENT#", "neutron_settings", "#NEWLINE#", "seg_id_range", "=", "neutron_settings", ".", "get", "#NEWLINE#", "self", ".", "seg_id_range", "=", "{", ":", "seg_id_range", ".", ":", "seg_id_range", ":", "seg_id_range", "#NEWLINE#", "seg_id_help", "'For VLAN networks, the VLAN VID on the physical network that realizes the virtual network. Valid VLAN VIDs are %(vlan_min)s through %(vlan_max)s. For GRE or VXLAN networks, the tunnel ID. Valid tunnel IDs for GRE networks are %(gre_min)s through %(gre_max)s. For VXLAN networks, %(vxlan_min)s through %(vxlan_max)s.'", "self", ".", "seg_id_range", "self", ".", "seg_id_range", "[", ":", "self", ".", "seg_id_range", "self", ".", "seg_id_range", "#NEWLINE#", "self", ".", "seg_id_range", "[", "'vxlan_max'", ":", "self", ".", "seg_id_range", "[", "self", ".", "=", "seg_id_help", "#NEWLINE#", "supported_provider_types", "=", "neutron_settings", "(", "'supported_provider_types'", "(", "supported_provider_types", "network_type_choices", "=", "PROVIDER_TYPES", "#NEWLINE#", "#INDENT#", "network_type_choices", "net_type", "for", "net_type", "in", "(", "net_type", "supported_provider_types", "(", "network_type_choices", ")", "#NEWLINE#", "#INDENT#", "self", ".", "#INDENT#", "self", "=", "network_type_choices", "#INDENT#", "self"]}}
{"position": {"error_location": 40, "repair_targets": [28, 35, 44], "repair_candidates": [4, 11, 67, 75, 79, 82, 84, 90, 93, 98, 101, 105, 111, 40, 131, 133, 136, 19, 30, 125, 130, 139, 148, 3, 8, 24, 59, 61, 28, 35, 44, 14, 21, 17, 38, 49, 65, 69, 120, 86, 116, 1, 6, 46, 52, 55, 73, 88, 91, 96, 99, 103, 109, 113, 143, 146, 150, 118, 124, 137]}}
{"prediction": {"error_location": 0.9950481057167053, "repair_targets": [0.8186511397361755, 0.0006922500324435532, 0.0005589104839600623], "repair_candidates": [0.038160309195518494, 0.015451368875801563, 0.01715252734720707, 0.00466903718188405, 0.008843358606100082, 0.0018005188321694732, 0.05739080160856247, 0.01922694966197014, 0.006425696890801191, 0.003957837820053101, 0.0013250024057924747, 0.8186511397361755, 6.997336186032044e-06, 0.0006922500324435532, 0.0001488978014094755, 0.0001016370442812331, 0.0005589104839600623, 5.964953743387014e-05, 0.0015731934690847993, 3.0824328860035166e-05, 7.347156270043342e-07, 8.952325515565462e-06, 0.00043416389962658286, 3.439023930695839e-05, 4.430524131748825e-05, 1.3384608791966457e-05, 1.8004973298957339e-06, 0.0002442444674670696, 4.642436761059798e-05, 1.2847852303821128e-05, 1.0078220839204732e-05, 1.5195282685454004e-05, 2.77516892310814e-06, 0.0005905214347876608, 5.7079450925812125e-06, 0.0001202653074869886, 3.6977148738515098e-06, 0.00039257717435248196, 8.493628229189198e-06, 0.0003080959140788764, 2.222783223260194e-06, 7.079444912960753e-05, 2.1028135961387306e-06, 5.5945685744518414e-05, 2.7321466404828243e-06, 2.3013726604403928e-05, 8.886279829312116e-05, 7.381263458228204e-06, 0.0009175013983622193, 1.2429178241291083e-05, 2.0612065782188438e-05, 1.0614271559461486e-05, 0.00017951343033928424, 1.5212393009278458e-05, 2.92245090349752e-06, 3.206718247383833e-05, 7.555826186944614e-07, 1.9074436750088353e-06, 1.4780242963752244e-05, 1.2909975339425728e-05], "target_probs": 0.8199023008346558}}


{"result": {"time": "2021-02-11 10:38:55.142410", "n_pass": [711, 83, 75], "n_token": 150, "loss": [0.0178145132958889, 0.2433246225118637], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["def __init__(", "self", ",", "request", "args", ",", "self", "request", ",", "*", "args", ",", "**", "kwargs", ")", "#NEWLINE#", "tenant_choices", "(", "tenants", ",", "has_more", ")", "=", "request", ")", "#NEWLINE#", "for", "tenant", "in", "tenants", ":", "#NEWLINE#", "#INDENT#", "if", "tenant", "#NEWLINE#", "#INDENT#", "tenant_choices", "(", "net_type", ".", "id", ",", "tenant", "#UNINDENT#", "self", ".", "=", "tenant_choices", "#NEWLINE#", "#INDENT#", "self", ".", "=", "self", ".", "get_network_profile_choices", "(", "request", "(", "request", ",", "#NEWLINE#", "#INDENT#", "neutron_settings", "#NEWLINE#", "seg_id_range", "=", "neutron_settings", ".", "get", "#NEWLINE#", "self", ".", "seg_id_range", "=", "{", ":", "seg_id_range", ".", ":", "seg_id_range", ":", "seg_id_range", "#NEWLINE#", "seg_id_help", "'For VLAN networks, the VLAN VID on the physical network that realizes the virtual network. Valid VLAN VIDs are %(vlan_min)s through %(vlan_max)s. For GRE or VXLAN networks, the tunnel ID. Valid tunnel IDs for GRE networks are %(gre_min)s through %(gre_max)s. For VXLAN networks, %(vxlan_min)s through %(vxlan_max)s.'", "self", ".", "seg_id_range", "self", ".", "seg_id_range", "[", ":", "self", ".", "seg_id_range", "self", ".", "seg_id_range", "#NEWLINE#", "self", ".", "seg_id_range", "[", "'vxlan_max'", ":", "self", ".", "seg_id_range", "[", "self", ".", "=", "seg_id_help", "#NEWLINE#", "supported_provider_types", "=", "neutron_settings", "(", "'supported_provider_types'", "(", "supported_provider_types", "network_type_choices", "=", "PROVIDER_TYPES", "#NEWLINE#", "#INDENT#", "network_type_choices", "net_type", "for", "net_type", "in", "(", "net_type", "supported_provider_types", "(", "network_type_choices", ")", "#NEWLINE#", "#INDENT#", "self", ".", "#INDENT#", "self", "=", "network_type_choices", "#INDENT#", "self"]}}
{"position": {"error_location": 39, "repair_targets": [27, 34, 43], "repair_candidates": [4, 10, 66, 74, 78, 81, 83, 89, 92, 97, 100, 104, 110, 39, 130, 132, 135, 18, 29, 124, 129, 138, 147, 3, 7, 23, 58, 60, 27, 34, 43, 13, 20, 16, 37, 48, 64, 68, 119, 85, 115, 1, 6, 45, 51, 54, 72, 87, 90, 95, 98, 102, 108, 112, 142, 145, 149, 117, 123, 136]}}
{"prediction": {"error_location": 0.9823431372642517, "repair_targets": [0.7821273803710938, 0.0010829903185367584, 0.0008065850124694407], "repair_candidates": [0.028322646394371986, 0.024172918871045113, 0.02144433930516243, 0.007028778549283743, 0.0035017284099012613, 0.002312237396836281, 0.08883289247751236, 0.01848575286567211, 0.007818883284926414, 0.00447837496176362, 0.001321743126027286, 0.7821273803710938, 7.103188636392588e-06, 0.0010829903185367584, 0.0002749446139205247, 0.00010364389163441956, 0.0008065850124694407, 5.245778811513446e-05, 0.0018580962205305696, 5.506480374606326e-05, 2.156172513423371e-06, 1.3717044566874392e-05, 0.0011512045748531818, 4.7985478886403143e-05, 7.787564391037449e-05, 2.499023321433924e-05, 2.2751967208023416e-06, 0.00040697588701732457, 7.7008742664475e-05, 1.938071181939449e-05, 1.326324218098307e-05, 2.4893659428926185e-05, 4.139587872487027e-06, 0.0008442183607257903, 7.386520792351803e-06, 0.00013776255946140736, 4.8923902795650065e-06, 0.0005088722682558, 1.4849791114102118e-05, 0.00040526402881368995, 2.097793185384944e-06, 8.679978782311082e-05, 2.4454755020997254e-06, 7.410683610942215e-05, 3.3168728350574384e-06, 2.727075661823619e-05, 0.00012548640370368958, 1.0168436347157694e-05, 0.001367288758046925, 1.8603781427373178e-05, 3.290588574600406e-05, 1.2900037290819455e-05, 0.0002455482608638704, 2.2539963538292795e-05, 4.108505891053937e-06, 4.931224975734949e-05, 9.850291462498717e-07, 2.2126703242975054e-06, 1.7936215954250656e-05, 1.6268464605673216e-05], "target_probs": 0.7840169668197632}}


{"result": {"time": "2021-02-11 10:38:55.303184", "n_pass": [713, 84, 76], "n_token": 149, "loss": [0.016435829922556877, 0.24290771782398224], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["def __init__(", "self", ",", "request", "args", ",", "self", "request", "*", "args", ",", "**", "kwargs", ")", "#NEWLINE#", "tenant_choices", "(", "tenants", ",", "has_more", ")", "=", "request", ")", "#NEWLINE#", "for", "tenant", "in", "tenants", ":", "#NEWLINE#", "#INDENT#", "if", "tenant", "#NEWLINE#", "#INDENT#", "tenant_choices", "(", "net_type", ".", "id", ",", "tenant", "#UNINDENT#", "self", ".", "=", "tenant_choices", "#NEWLINE#", "#INDENT#", "self", ".", "=", "self", ".", "get_network_profile_choices", "(", "request", "(", "request", ",", "#NEWLINE#", "#INDENT#", "neutron_settings", "#NEWLINE#", "seg_id_range", "=", "neutron_settings", ".", "get", "#NEWLINE#", "self", ".", "seg_id_range", "=", "{", ":", "seg_id_range", ".", ":", "seg_id_range", ":", "seg_id_range", "#NEWLINE#", "seg_id_help", "'For VLAN networks, the VLAN VID on the physical network that realizes the virtual network. Valid VLAN VIDs are %(vlan_min)s through %(vlan_max)s. For GRE or VXLAN networks, the tunnel ID. Valid tunnel IDs for GRE networks are %(gre_min)s through %(gre_max)s. For VXLAN networks, %(vxlan_min)s through %(vxlan_max)s.'", "self", ".", "seg_id_range", "self", ".", "seg_id_range", "[", ":", "self", ".", "seg_id_range", "self", ".", "seg_id_range", "#NEWLINE#", "self", ".", "seg_id_range", "[", "'vxlan_max'", ":", "self", ".", "seg_id_range", "[", "self", ".", "=", "seg_id_help", "#NEWLINE#", "supported_provider_types", "=", "neutron_settings", "(", "'supported_provider_types'", "(", "supported_provider_types", "network_type_choices", "=", "PROVIDER_TYPES", "#NEWLINE#", "#INDENT#", "network_type_choices", "net_type", "for", "net_type", "in", "(", "net_type", "supported_provider_types", "(", "network_type_choices", ")", "#NEWLINE#", "#INDENT#", "self", ".", "#INDENT#", "self", "=", "network_type_choices", "#INDENT#", "self"]}}
{"position": {"error_location": 38, "repair_targets": [26, 33, 42], "repair_candidates": [4, 9, 65, 73, 77, 80, 82, 88, 91, 96, 99, 103, 109, 38, 129, 131, 134, 17, 28, 123, 128, 137, 146, 3, 7, 22, 57, 59, 26, 33, 42, 12, 19, 15, 36, 47, 63, 67, 118, 84, 114, 1, 6, 44, 50, 53, 71, 86, 89, 94, 97, 101, 107, 111, 141, 144, 148, 116, 122, 135]}}
{"prediction": {"error_location": 0.9836983680725098, "repair_targets": [0.7822731733322144, 0.0011944364523515105, 0.0008762776851654053], "repair_candidates": [0.030487090349197388, 0.027809714898467064, 0.02320440486073494, 0.01146770641207695, 0.008714607916772366, 0.0024354467168450356, 0.0689130499958992, 0.018178658559918404, 0.006860991939902306, 0.005831417161971331, 0.0017200811998918653, 0.7822731733322144, 8.842948773235548e-06, 0.0011944364523515105, 0.0002585133770480752, 0.00015378309763036668, 0.0008762776851654053, 7.169414311647415e-05, 0.0030640873592346907, 6.15905737504363e-05, 1.6122860415634932e-06, 1.4076169463805854e-05, 0.0006481472519226372, 5.3001764172222465e-05, 8.457292278762907e-05, 2.45987484959187e-05, 2.7949481591349468e-06, 0.0004452064458746463, 8.866826101439074e-05, 2.1009242118452676e-05, 1.2748706467391457e-05, 2.9500146411010064e-05, 5.085361863166327e-06, 0.0011252803960815072, 9.821503226703499e-06, 0.00014921223919373006, 5.494839570019394e-06, 0.0007372624822892249, 2.0489065718720667e-05, 0.0004921082290820777, 3.2607676985207945e-06, 9.217474143952131e-05, 3.2198474855249515e-06, 8.809444261714816e-05, 4.157388957537478e-06, 3.421903966227546e-05, 0.00016217640950344503, 1.4565229321306106e-05, 0.0014446460409089923, 2.7679914637701586e-05, 4.243312287144363e-05, 1.8987839212059043e-05, 0.0003814580268226564, 2.7930311262025498e-05, 6.1757982621202245e-06, 4.301367516745813e-05, 1.2882430837635184e-06, 3.206609562766971e-06, 2.3986722226254642e-05, 2.111030880769249e-05], "target_probs": 0.7843438982963562}}


{"result": {"time": "2021-02-11 10:38:55.463917", "n_pass": [714, 85, 77], "n_token": 148, "loss": [0.01366498600691557, 0.2432369589805603], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["def __init__(", "self", ",", "request", "args", ",", "self", "request", "args", ",", "**", "kwargs", ")", "#NEWLINE#", "tenant_choices", "(", "tenants", ",", "has_more", ")", "=", "request", ")", "#NEWLINE#", "for", "tenant", "in", "tenants", ":", "#NEWLINE#", "#INDENT#", "if", "tenant", "#NEWLINE#", "#INDENT#", "tenant_choices", "(", "net_type", ".", "id", ",", "tenant", "#UNINDENT#", "self", ".", "=", "tenant_choices", "#NEWLINE#", "#INDENT#", "self", ".", "=", "self", ".", "get_network_profile_choices", "(", "request", "(", "request", ",", "#NEWLINE#", "#INDENT#", "neutron_settings", "#NEWLINE#", "seg_id_range", "=", "neutron_settings", ".", "get", "#NEWLINE#", "self", ".", "seg_id_range", "=", "{", ":", "seg_id_range", ".", ":", "seg_id_range", ":", "seg_id_range", "#NEWLINE#", "seg_id_help", "'For VLAN networks, the VLAN VID on the physical network that realizes the virtual network. Valid VLAN VIDs are %(vlan_min)s through %(vlan_max)s. For GRE or VXLAN networks, the tunnel ID. Valid tunnel IDs for GRE networks are %(gre_min)s through %(gre_max)s. For VXLAN networks, %(vxlan_min)s through %(vxlan_max)s.'", "self", ".", "seg_id_range", "self", ".", "seg_id_range", "[", ":", "self", ".", "seg_id_range", "self", ".", "seg_id_range", "#NEWLINE#", "self", ".", "seg_id_range", "[", "'vxlan_max'", ":", "self", ".", "seg_id_range", "[", "self", ".", "=", "seg_id_help", "#NEWLINE#", "supported_provider_types", "=", "neutron_settings", "(", "'supported_provider_types'", "(", "supported_provider_types", "network_type_choices", "=", "PROVIDER_TYPES", "#NEWLINE#", "#INDENT#", "network_type_choices", "net_type", "for", "net_type", "in", "(", "net_type", "supported_provider_types", "(", "network_type_choices", ")", "#NEWLINE#", "#INDENT#", "self", ".", "#INDENT#", "self", "=", "network_type_choices", "#INDENT#", "self"]}}
{"position": {"error_location": 37, "repair_targets": [25, 32, 41], "repair_candidates": [4, 8, 64, 72, 76, 79, 81, 87, 90, 95, 98, 102, 108, 37, 128, 130, 133, 16, 27, 122, 127, 136, 145, 3, 7, 21, 56, 58, 25, 32, 41, 11, 18, 14, 35, 46, 62, 66, 117, 83, 113, 1, 6, 43, 49, 52, 70, 85, 88, 93, 96, 100, 106, 110, 140, 143, 147, 115, 121, 134]}}
{"prediction": {"error_location": 0.9864278435707092, "repair_targets": [0.7823027968406677, 0.001053194864653051, 0.0007296823314391077], "repair_candidates": [0.04089682176709175, 0.023327788338065147, 0.030492505058646202, 0.025168320164084435, 0.0017492070328444242, 0.001654591760598123, 0.04192371666431427, 0.022728627547621727, 0.009140587411820889, 0.006598578300327063, 0.0010860570473596454, 0.7823027968406677, 1.2972630429430865e-05, 0.001053194864653051, 0.000254975282587111, 0.00016335435793735087, 0.0007296823314391077, 6.335830403259024e-05, 0.002298097824677825, 8.211364911403507e-05, 1.7260537106267293e-06, 2.0167732145637274e-05, 0.0008695453288964927, 8.239258750109002e-05, 0.00010239109542453662, 2.799382491502911e-05, 3.2377092793467455e-06, 0.0005358339403755963, 0.00010679928527679294, 2.154802677978296e-05, 1.4415303667192347e-05, 3.150727570755407e-05, 8.1546968431212e-06, 0.001463309396058321, 1.2816116395697463e-05, 0.00019752686785068363, 7.64746710046893e-06, 0.0009797888342291117, 2.3487462385674007e-05, 0.0006000420544296503, 3.706880079334951e-06, 0.00013159820809960365, 4.082365649082931e-06, 0.0001224644365720451, 5.014313046558527e-06, 3.390255369595252e-05, 0.00023159552074503154, 1.79918461071793e-05, 0.001802520826458931, 2.8277761884965003e-05, 4.8042129492387176e-05, 2.2653857740806416e-05, 0.0005639537121169269, 3.153204670525156e-05, 7.607975476275897e-06, 4.8770492867333815e-05, 1.5043929124658462e-06, 3.952781298721675e-06, 2.755133027676493e-05, 2.5543295123497956e-05], "target_probs": 0.7840856909751892}}


{"result": {"time": "2021-02-11 10:38:55.623151", "n_pass": [716, 86, 78], "n_token": 147, "loss": [0.012193776667118073, 0.21416983008384705], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["def __init__(", "self", ",", "request", "args", ",", "self", "request", "args", "**", "kwargs", ")", "#NEWLINE#", "tenant_choices", "(", "tenants", ",", "has_more", ")", "=", "request", ")", "#NEWLINE#", "for", "tenant", "in", "tenants", ":", "#NEWLINE#", "#INDENT#", "if", "tenant", "#NEWLINE#", "#INDENT#", "tenant_choices", "(", "net_type", ".", "id", ",", "tenant", "#UNINDENT#", "self", ".", "=", "tenant_choices", "#NEWLINE#", "#INDENT#", "self", ".", "=", "self", ".", "get_network_profile_choices", "(", "request", "(", "request", ",", "#NEWLINE#", "#INDENT#", "neutron_settings", "#NEWLINE#", "seg_id_range", "=", "neutron_settings", ".", "get", "#NEWLINE#", "self", ".", "seg_id_range", "=", "{", ":", "seg_id_range", ".", ":", "seg_id_range", ":", "seg_id_range", "#NEWLINE#", "seg_id_help", "'For VLAN networks, the VLAN VID on the physical network that realizes the virtual network. Valid VLAN VIDs are %(vlan_min)s through %(vlan_max)s. For GRE or VXLAN networks, the tunnel ID. Valid tunnel IDs for GRE networks are %(gre_min)s through %(gre_max)s. For VXLAN networks, %(vxlan_min)s through %(vxlan_max)s.'", "self", ".", "seg_id_range", "self", ".", "seg_id_range", "[", ":", "self", ".", "seg_id_range", "self", ".", "seg_id_range", "#NEWLINE#", "self", ".", "seg_id_range", "[", "'vxlan_max'", ":", "self", ".", "seg_id_range", "[", "self", ".", "=", "seg_id_help", "#NEWLINE#", "supported_provider_types", "=", "neutron_settings", "(", "'supported_provider_types'", "(", "supported_provider_types", "network_type_choices", "=", "PROVIDER_TYPES", "#NEWLINE#", "#INDENT#", "network_type_choices", "net_type", "for", "net_type", "in", "(", "net_type", "supported_provider_types", "(", "network_type_choices", ")", "#NEWLINE#", "#INDENT#", "self", ".", "#INDENT#", "self", "=", "network_type_choices", "#INDENT#", "self"]}}
{"position": {"error_location": 36, "repair_targets": [24, 31, 40], "repair_candidates": [4, 8, 63, 71, 75, 78, 80, 86, 89, 94, 97, 101, 107, 36, 127, 129, 132, 15, 26, 121, 126, 135, 144, 3, 7, 20, 55, 57, 24, 31, 40, 10, 17, 13, 34, 45, 61, 65, 116, 82, 112, 1, 6, 42, 48, 51, 69, 84, 87, 92, 95, 99, 105, 109, 139, 142, 146, 114, 120, 133]}}
{"prediction": {"error_location": 0.9878800511360168, "repair_targets": [0.8056181073188782, 0.0008364130626432598, 0.0007567618740722537], "repair_candidates": [0.04568538814783096, 0.02314961701631546, 0.04086204618215561, 0.011954806745052338, 0.000779169553425163, 0.002470480278134346, 0.023371543735265732, 0.019614234566688538, 0.00787623692303896, 0.006145540624856949, 0.0012643943773582578, 0.8056181073188782, 1.3966990081826225e-05, 0.0008364130626432598, 0.00030973899993114173, 0.00017072964692488313, 0.0007567618740722537, 9.246414992958307e-05, 0.0023918061051517725, 8.288140088552609e-05, 2.7971220788458595e-06, 1.9599232473410666e-05, 0.0007885617087595165, 6.97698415024206e-05, 9.071274689631537e-05, 3.679513247334398e-05, 3.4489878544263775e-06, 0.000428191531682387, 9.478975698584691e-05, 2.1394993382273242e-05, 1.5649135093553923e-05, 2.3025893824524246e-05, 7.5397215368866455e-06, 0.001101615489460528, 1.064002572093159e-05, 0.00016774945834185928, 6.9432612690434325e-06, 0.0006706364220008254, 2.0731200493173674e-05, 0.0005130784120410681, 3.3545043152116705e-06, 0.00010680963168852031, 3.862587618641555e-06, 0.00010586438293103129, 4.395624728203984e-06, 2.4856430172803812e-05, 0.00020541553385555744, 1.3187333934183698e-05, 0.0013133254833519459, 2.582959677965846e-05, 3.783403371926397e-05, 1.7996007954934612e-05, 0.0004698516277130693, 2.658638550201431e-05, 5.578423497354379e-06, 4.659358455683105e-05, 1.3730356158703216e-06, 3.0952846827858593e-06, 2.293592842761427e-05, 2.1378044039011e-05], "target_probs": 0.8072112798690796}}


{"result": {"time": "2021-02-11 10:38:55.783659", "n_pass": [717, 87, 79], "n_token": 146, "loss": [0.013938700780272484, 0.2050199806690216], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["def __init__(", "self", ",", "request", "args", ",", "self", "request", "args", "kwargs", ")", "#NEWLINE#", "tenant_choices", "(", "tenants", ",", "has_more", ")", "=", "request", ")", "#NEWLINE#", "for", "tenant", "in", "tenants", ":", "#NEWLINE#", "#INDENT#", "if", "tenant", "#NEWLINE#", "#INDENT#", "tenant_choices", "(", "net_type", ".", "id", ",", "tenant", "#UNINDENT#", "self", ".", "=", "tenant_choices", "#NEWLINE#", "#INDENT#", "self", ".", "=", "self", ".", "get_network_profile_choices", "(", "request", "(", "request", ",", "#NEWLINE#", "#INDENT#", "neutron_settings", "#NEWLINE#", "seg_id_range", "=", "neutron_settings", ".", "get", "#NEWLINE#", "self", ".", "seg_id_range", "=", "{", ":", "seg_id_range", ".", ":", "seg_id_range", ":", "seg_id_range", "#NEWLINE#", "seg_id_help", "'For VLAN networks, the VLAN VID on the physical network that realizes the virtual network. Valid VLAN VIDs are %(vlan_min)s through %(vlan_max)s. For GRE or VXLAN networks, the tunnel ID. Valid tunnel IDs for GRE networks are %(gre_min)s through %(gre_max)s. For VXLAN networks, %(vxlan_min)s through %(vxlan_max)s.'", "self", ".", "seg_id_range", "self", ".", "seg_id_range", "[", ":", "self", ".", "seg_id_range", "self", ".", "seg_id_range", "#NEWLINE#", "self", ".", "seg_id_range", "[", "'vxlan_max'", ":", "self", ".", "seg_id_range", "[", "self", ".", "=", "seg_id_help", "#NEWLINE#", "supported_provider_types", "=", "neutron_settings", "(", "'supported_provider_types'", "(", "supported_provider_types", "network_type_choices", "=", "PROVIDER_TYPES", "#NEWLINE#", "#INDENT#", "network_type_choices", "net_type", "for", "net_type", "in", "(", "net_type", "supported_provider_types", "(", "network_type_choices", ")", "#NEWLINE#", "#INDENT#", "self", ".", "#INDENT#", "self", "=", "network_type_choices", "#INDENT#", "self"]}}
{"position": {"error_location": 35, "repair_targets": [23, 30, 39], "repair_candidates": [4, 8, 62, 70, 74, 77, 79, 85, 88, 93, 96, 100, 106, 35, 126, 128, 131, 14, 25, 120, 125, 134, 143, 3, 7, 19, 54, 56, 23, 30, 39, 9, 16, 12, 33, 44, 60, 64, 115, 81, 111, 1, 6, 41, 47, 50, 68, 83, 86, 91, 94, 98, 104, 108, 138, 141, 145, 113, 119, 132]}}
{"prediction": {"error_location": 0.9861581325531006, "repair_targets": [0.8128426671028137, 0.0008376719197258353, 0.0009507103823125362], "repair_candidates": [0.04932672157883644, 0.023395299911499023, 0.03932832553982735, 0.008330841548740864, 0.0005257446318864822, 0.0020384895615279675, 0.010352120734751225, 0.022430140525102615, 0.011264675296843052, 0.006293023470789194, 0.0011033534538000822, 0.8128426671028137, 1.2219382369949017e-05, 0.0008376719197258353, 0.0003026047197636217, 0.00022264060680754483, 0.0009507103823125362, 0.00010419253521831706, 0.003021419048309326, 7.764375914121047e-05, 2.5292299596912926e-06, 1.8747012290987186e-05, 0.0008789980201981962, 6.720795499859378e-05, 0.00010141355596715584, 2.4537423087167554e-05, 2.403827238595113e-06, 0.00039330514846369624, 9.71459157881327e-05, 2.446664439048618e-05, 1.5716190318926238e-05, 2.2832926333649084e-05, 4.832562353840331e-06, 0.001236625132150948, 8.150870598910842e-06, 0.00018834507500287145, 7.151319550757762e-06, 0.0007240421837195754, 1.3990618754178286e-05, 0.0006034087273292243, 3.1514648526353994e-06, 0.00018240917415823787, 4.03566264139954e-06, 0.00011084976722486317, 4.107334916625405e-06, 3.5018987546209246e-05, 0.00017527352611068636, 1.2819414223486092e-05, 0.0016750952927395701, 2.150885120499879e-05, 4.371499380795285e-05, 2.0607576516340487e-05, 0.000385360443033278, 2.7771628083428368e-05, 5.760391559306299e-06, 4.790130697074346e-05, 1.409148239872593e-06, 2.782155434033484e-06, 2.537910404498689e-05, 1.8693541278480552e-05], "target_probs": 0.8146310448646545}}


{"result": {"time": "2021-02-11 10:38:55.941361", "n_pass": [719, 88, 80], "n_token": 145, "loss": [0.0208209790289402, 0.1497659981250763], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["def __init__(", "self", ",", "request", "args", ",", "self", "request", "args", "kwargs", "#NEWLINE#", "tenant_choices", "(", "tenants", ",", "has_more", ")", "=", "request", ")", "#NEWLINE#", "for", "tenant", "in", "tenants", ":", "#NEWLINE#", "#INDENT#", "if", "tenant", "#NEWLINE#", "#INDENT#", "tenant_choices", "(", "net_type", ".", "id", ",", "tenant", "#UNINDENT#", "self", ".", "=", "tenant_choices", "#NEWLINE#", "#INDENT#", "self", ".", "=", "self", ".", "get_network_profile_choices", "(", "request", "(", "request", ",", "#NEWLINE#", "#INDENT#", "neutron_settings", "#NEWLINE#", "seg_id_range", "=", "neutron_settings", ".", "get", "#NEWLINE#", "self", ".", "seg_id_range", "=", "{", ":", "seg_id_range", ".", ":", "seg_id_range", ":", "seg_id_range", "#NEWLINE#", "seg_id_help", "'For VLAN networks, the VLAN VID on the physical network that realizes the virtual network. Valid VLAN VIDs are %(vlan_min)s through %(vlan_max)s. For GRE or VXLAN networks, the tunnel ID. Valid tunnel IDs for GRE networks are %(gre_min)s through %(gre_max)s. For VXLAN networks, %(vxlan_min)s through %(vxlan_max)s.'", "self", ".", "seg_id_range", "self", ".", "seg_id_range", "[", ":", "self", ".", "seg_id_range", "self", ".", "seg_id_range", "#NEWLINE#", "self", ".", "seg_id_range", "[", "'vxlan_max'", ":", "self", ".", "seg_id_range", "[", "self", ".", "=", "seg_id_help", "#NEWLINE#", "supported_provider_types", "=", "neutron_settings", "(", "'supported_provider_types'", "(", "supported_provider_types", "network_type_choices", "=", "PROVIDER_TYPES", "#NEWLINE#", "#INDENT#", "network_type_choices", "net_type", "for", "net_type", "in", "(", "net_type", "supported_provider_types", "(", "network_type_choices", ")", "#NEWLINE#", "#INDENT#", "self", ".", "#INDENT#", "self", "=", "network_type_choices", "#INDENT#", "self"]}}
{"position": {"error_location": 34, "repair_targets": [22, 29, 38], "repair_candidates": [4, 8, 61, 69, 73, 76, 78, 84, 87, 92, 95, 99, 105, 34, 125, 127, 130, 13, 24, 119, 124, 133, 142, 3, 7, 18, 53, 55, 22, 29, 38, 9, 15, 11, 32, 43, 59, 63, 114, 80, 110, 1, 6, 40, 46, 49, 67, 82, 85, 90, 93, 97, 103, 107, 137, 140, 144, 112, 118, 131]}}
{"prediction": {"error_location": 0.9793943762779236, "repair_targets": [0.8597298860549927, 0.0007893173606134951, 0.00039014985668472946], "repair_candidates": [0.04571482911705971, 0.01923217996954918, 0.022908281534910202, 0.013854471035301685, 0.0008497464004904032, 0.0006258130306378007, 0.0011249809758737683, 0.010197249241173267, 0.009025443345308304, 0.007396111264824867, 0.0011117716785520315, 0.8597298860549927, 1.0724981621024199e-05, 0.0007893173606134951, 0.0002298299950780347, 0.0001890227140393108, 0.00039014985668472946, 7.822152838343754e-05, 0.0013933442533016205, 4.038643965031952e-05, 1.344677457382204e-06, 1.4845486475678626e-05, 0.0007113100145943463, 4.320297375670634e-05, 7.337447459576651e-05, 1.6359479559469037e-05, 1.7823698499341845e-06, 0.0002854841004591435, 5.361397415981628e-05, 1.3794799087918364e-05, 9.859534657152835e-06, 1.7171521903946996e-05, 3.88224270864157e-06, 0.0009156752494163811, 8.266098120657261e-06, 0.00011801291111623868, 5.2716336540470365e-06, 0.0006307009607553482, 1.3520206266548485e-05, 0.00035558713716454804, 2.5958818241633708e-06, 0.00010903881047852337, 3.0431356208282523e-06, 8.876992069417611e-05, 3.4136212434532354e-06, 2.2294876544037834e-05, 0.00013795265113003552, 1.082727794710081e-05, 0.0009458534768782556, 1.5747213183203712e-05, 3.642067895270884e-05, 1.4804329111939296e-05, 0.0003349892795085907, 1.9737759430427104e-05, 4.183828878012719e-06, 2.7650534320855513e-05, 1.079662865777209e-06, 2.5162594283756334e-06, 1.923280615301337e-05, 1.4998079677752685e-05], "target_probs": 0.8609094023704529}}


{"result": {"time": "2021-02-11 10:38:56.099309", "n_pass": [720, 89, 81], "n_token": 144, "loss": [0.030809342861175537, 0.12160273641347885], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["def __init__(", "self", ",", "request", "args", ",", "self", "request", "args", "kwargs", "tenant_choices", "(", "tenants", ",", "has_more", ")", "=", "request", ")", "#NEWLINE#", "for", "tenant", "in", "tenants", ":", "#NEWLINE#", "#INDENT#", "if", "tenant", "#NEWLINE#", "#INDENT#", "tenant_choices", "(", "net_type", ".", "id", ",", "tenant", "#UNINDENT#", "self", ".", "=", "tenant_choices", "#NEWLINE#", "#INDENT#", "self", ".", "=", "self", ".", "get_network_profile_choices", "(", "request", "(", "request", ",", "#NEWLINE#", "#INDENT#", "neutron_settings", "#NEWLINE#", "seg_id_range", "=", "neutron_settings", ".", "get", "#NEWLINE#", "self", ".", "seg_id_range", "=", "{", ":", "seg_id_range", ".", ":", "seg_id_range", ":", "seg_id_range", "#NEWLINE#", "seg_id_help", "'For VLAN networks, the VLAN VID on the physical network that realizes the virtual network. Valid VLAN VIDs are %(vlan_min)s through %(vlan_max)s. For GRE or VXLAN networks, the tunnel ID. Valid tunnel IDs for GRE networks are %(gre_min)s through %(gre_max)s. For VXLAN networks, %(vxlan_min)s through %(vxlan_max)s.'", "self", ".", "seg_id_range", "self", ".", "seg_id_range", "[", ":", "self", ".", "seg_id_range", "self", ".", "seg_id_range", "#NEWLINE#", "self", ".", "seg_id_range", "[", "'vxlan_max'", ":", "self", ".", "seg_id_range", "[", "self", ".", "=", "seg_id_help", "#NEWLINE#", "supported_provider_types", "=", "neutron_settings", "(", "'supported_provider_types'", "(", "supported_provider_types", "network_type_choices", "=", "PROVIDER_TYPES", "#NEWLINE#", "#INDENT#", "network_type_choices", "net_type", "for", "net_type", "in", "(", "net_type", "supported_provider_types", "(", "network_type_choices", ")", "#NEWLINE#", "#INDENT#", "self", ".", "#INDENT#", "self", "=", "network_type_choices", "#INDENT#", "self"]}}
{"position": {"error_location": 33, "repair_targets": [21, 28, 37], "repair_candidates": [4, 8, 60, 68, 72, 75, 77, 83, 86, 91, 94, 98, 104, 33, 124, 126, 129, 12, 23, 118, 123, 132, 141, 3, 7, 17, 52, 54, 21, 28, 37, 9, 14, 10, 31, 42, 58, 62, 113, 79, 109, 1, 6, 39, 45, 48, 66, 81, 84, 89, 92, 96, 102, 106, 136, 139, 143, 111, 117, 130]}}
{"prediction": {"error_location": 0.9696603417396545, "repair_targets": [0.8840785622596741, 0.0007387854857370257, 0.0006827145116403699], "repair_candidates": [0.043847884982824326, 0.016275787726044655, 0.02274765819311142, 0.007684143725782633, 0.0006024824688211083, 0.0009011491783894598, 0.00655830092728138, 0.0003021082084160298, 0.003995280712842941, 0.00309273274615407, 0.0005034889909438789, 0.8840785622596741, 1.2378346582408994e-05, 0.0007387854857370257, 0.00025940960040315986, 0.00013061323261354119, 0.0006827145116403699, 5.292502828524448e-05, 0.0012268532300367951, 5.658188456436619e-05, 1.6453353737233556e-06, 1.973257167264819e-05, 0.0007622606935910881, 5.698537643183954e-05, 9.876359399640933e-05, 3.291025495855138e-05, 2.2952931431063917e-06, 0.00032799170003272593, 6.752700573997572e-05, 1.718343628454022e-05, 1.3323691746336408e-05, 2.1171876142034307e-05, 5.829756446473766e-06, 0.0011669640662148595, 1.4886264580127317e-05, 0.00016843069170136005, 7.504732366214739e-06, 0.0007031284621916711, 2.0475408746278845e-05, 0.00047631439520046115, 2.9236075533844996e-06, 0.00011595530668273568, 3.5157438560418086e-06, 0.00011148409976158291, 3.879893483826891e-06, 2.6146446543862112e-05, 0.00024412143102381378, 1.3779261280433275e-05, 0.0011649810476228595, 1.9988205167464912e-05, 4.3540625483728945e-05, 2.000042877625674e-05, 0.0003704988048411906, 2.6570885893306695e-05, 5.081875769974431e-06, 3.946226570405997e-05, 1.2742863191306242e-06, 3.5018838389078155e-06, 2.5664605345809832e-05, 2.241773108835332e-05], "target_probs": 0.8855000734329224}}


{"result": {"time": "2021-02-11 10:38:56.256139", "n_pass": [722, 90, 82], "n_token": 143, "loss": [0.018303539603948593, 0.0961247980594635], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["def __init__(", "self", ",", "request", "args", ",", "self", "request", "args", "kwargs", "tenant_choices", "tenants", ",", "has_more", ")", "=", "request", ")", "#NEWLINE#", "for", "tenant", "in", "tenants", ":", "#NEWLINE#", "#INDENT#", "if", "tenant", "#NEWLINE#", "#INDENT#", "tenant_choices", "(", "net_type", ".", "id", ",", "tenant", "#UNINDENT#", "self", ".", "=", "tenant_choices", "#NEWLINE#", "#INDENT#", "self", ".", "=", "self", ".", "get_network_profile_choices", "(", "request", "(", "request", ",", "#NEWLINE#", "#INDENT#", "neutron_settings", "#NEWLINE#", "seg_id_range", "=", "neutron_settings", ".", "get", "#NEWLINE#", "self", ".", "seg_id_range", "=", "{", ":", "seg_id_range", ".", ":", "seg_id_range", ":", "seg_id_range", "#NEWLINE#", "seg_id_help", "'For VLAN networks, the VLAN VID on the physical network that realizes the virtual network. Valid VLAN VIDs are %(vlan_min)s through %(vlan_max)s. For GRE or VXLAN networks, the tunnel ID. Valid tunnel IDs for GRE networks are %(gre_min)s through %(gre_max)s. For VXLAN networks, %(vxlan_min)s through %(vxlan_max)s.'", "self", ".", "seg_id_range", "self", ".", "seg_id_range", "[", ":", "self", ".", "seg_id_range", "self", ".", "seg_id_range", "#NEWLINE#", "self", ".", "seg_id_range", "[", "'vxlan_max'", ":", "self", ".", "seg_id_range", "[", "self", ".", "=", "seg_id_help", "#NEWLINE#", "supported_provider_types", "=", "neutron_settings", "(", "'supported_provider_types'", "(", "supported_provider_types", "network_type_choices", "=", "PROVIDER_TYPES", "#NEWLINE#", "#INDENT#", "network_type_choices", "net_type", "for", "net_type", "in", "(", "net_type", "supported_provider_types", "(", "network_type_choices", ")", "#NEWLINE#", "#INDENT#", "self", ".", "#INDENT#", "self", "=", "network_type_choices", "#INDENT#", "self"]}}
{"position": {"error_location": 32, "repair_targets": [20, 27, 36], "repair_candidates": [4, 8, 59, 67, 71, 74, 76, 82, 85, 90, 93, 97, 103, 32, 123, 125, 128, 11, 22, 117, 122, 131, 140, 3, 7, 16, 51, 53, 20, 27, 36, 9, 13, 10, 30, 41, 57, 61, 112, 78, 108, 1, 6, 38, 44, 47, 65, 80, 83, 88, 91, 95, 101, 105, 135, 138, 142, 110, 116, 129]}}
{"prediction": {"error_location": 0.9818629622459412, "repair_targets": [0.9072742462158203, 0.0006756169605068862, 0.0004007760726381093], "repair_candidates": [0.0351998507976532, 0.010692352429032326, 0.019551340490579605, 0.004546846263110638, 0.0006553988787345588, 0.0010131732560694218, 0.007108717691153288, 0.0009087797370739281, 0.0006934040575288236, 0.003481320571154356, 0.00046641388325951993, 0.9072742462158203, 1.1500842447276227e-05, 0.0006756169605068862, 0.000270542164798826, 0.00010165398271055892, 0.0004007760726381093, 4.753982648253441e-05, 0.0013502052752301097, 4.345823617768474e-05, 2.122464820786263e-06, 1.6223862985498272e-05, 0.0008525990997441113, 5.4506133892573416e-05, 8.626595081295818e-05, 1.9410348613746464e-05, 2.2863989670440787e-06, 0.0003162080829497427, 6.327159644570202e-05, 1.768100992194377e-05, 1.2051998055540025e-05, 1.8484462998458184e-05, 5.620393494609743e-06, 0.0008330465061590075, 1.0353893230785616e-05, 0.00014748888497706503, 5.593603873421671e-06, 0.0006063345936127007, 1.7798098269850016e-05, 0.00038159292307682335, 2.377555802013376e-06, 0.00011287495726719499, 3.2469145025970647e-06, 7.650286715943366e-05, 3.2453663152409717e-06, 2.480983494024258e-05, 0.00017682705947663635, 1.0109600225405302e-05, 0.0011639631120488048, 1.844185135269072e-05, 3.157498576911166e-05, 1.6492809663759544e-05, 0.0002962352300528437, 1.995428465306759e-05, 4.2387100620544516e-06, 3.240339719923213e-05, 1.1136220336993574e-06, 2.6680233986553503e-06, 2.1817981178173795e-05, 1.9047485693590716e-05], "target_probs": 0.9083506464958191}}


{"result": {"time": "2021-02-11 10:38:56.413527", "n_pass": [724, 91, 83], "n_token": 142, "loss": [0.012018056586384773, 0.10403938591480255], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["def __init__(", "self", ",", "request", "args", ",", "self", "request", "args", "kwargs", "tenant_choices", "tenants", "has_more", ")", "=", "request", ")", "#NEWLINE#", "for", "tenant", "in", "tenants", ":", "#NEWLINE#", "#INDENT#", "if", "tenant", "#NEWLINE#", "#INDENT#", "tenant_choices", "(", "net_type", ".", "id", ",", "tenant", "#UNINDENT#", "self", ".", "=", "tenant_choices", "#NEWLINE#", "#INDENT#", "self", ".", "=", "self", ".", "get_network_profile_choices", "(", "request", "(", "request", ",", "#NEWLINE#", "#INDENT#", "neutron_settings", "#NEWLINE#", "seg_id_range", "=", "neutron_settings", ".", "get", "#NEWLINE#", "self", ".", "seg_id_range", "=", "{", ":", "seg_id_range", ".", ":", "seg_id_range", ":", "seg_id_range", "#NEWLINE#", "seg_id_help", "'For VLAN networks, the VLAN VID on the physical network that realizes the virtual network. Valid VLAN VIDs are %(vlan_min)s through %(vlan_max)s. For GRE or VXLAN networks, the tunnel ID. Valid tunnel IDs for GRE networks are %(gre_min)s through %(gre_max)s. For VXLAN networks, %(vxlan_min)s through %(vxlan_max)s.'", "self", ".", "seg_id_range", "self", ".", "seg_id_range", "[", ":", "self", ".", "seg_id_range", "self", ".", "seg_id_range", "#NEWLINE#", "self", ".", "seg_id_range", "[", "'vxlan_max'", ":", "self", ".", "seg_id_range", "[", "self", ".", "=", "seg_id_help", "#NEWLINE#", "supported_provider_types", "=", "neutron_settings", "(", "'supported_provider_types'", "(", "supported_provider_types", "network_type_choices", "=", "PROVIDER_TYPES", "#NEWLINE#", "#INDENT#", "network_type_choices", "net_type", "for", "net_type", "in", "(", "net_type", "supported_provider_types", "(", "network_type_choices", ")", "#NEWLINE#", "#INDENT#", "self", ".", "#INDENT#", "self", "=", "network_type_choices", "#INDENT#", "self"]}}
{"position": {"error_location": 31, "repair_targets": [19, 26, 35], "repair_candidates": [4, 8, 58, 66, 70, 73, 75, 81, 84, 89, 92, 96, 102, 31, 122, 124, 127, 11, 21, 116, 121, 130, 139, 3, 7, 15, 50, 52, 19, 26, 35, 9, 12, 10, 29, 40, 56, 60, 111, 77, 107, 1, 6, 37, 43, 46, 64, 79, 82, 87, 90, 94, 100, 104, 134, 137, 141, 109, 115, 128]}}
{"prediction": {"error_location": 0.9880538582801819, "repair_targets": [0.9001932144165039, 0.0006229930440895259, 0.00037362281000241637], "repair_candidates": [0.036159664392471313, 0.010243208147585392, 0.019292768090963364, 0.0058227162808179855, 0.0005940764676779509, 0.0013757739216089249, 0.011415033601224422, 0.0035830934066325426, 0.00022422467009164393, 0.0007070856518112123, 0.001303026219829917, 0.9001932144165039, 1.0403343367215712e-05, 0.0006229930440895259, 0.00026421257643960416, 9.356850205222145e-05, 0.00037362281000241637, 0.00011195308616152033, 0.0019144167890772223, 4.359447120805271e-05, 1.8042937881546095e-06, 1.497707035014173e-05, 0.0010831112740561366, 3.953164559789002e-05, 6.991621194174513e-05, 1.8405498849460855e-05, 1.8165142137149815e-06, 0.0003338622336741537, 5.8721660025184974e-05, 1.8384183931630105e-05, 1.221053025801666e-05, 2.0944522475474514e-05, 5.164128651813371e-06, 0.000808995624538511, 8.085204171948135e-06, 0.0001332923857262358, 5.8880882534140255e-06, 0.0005814392352476716, 1.5536159480689093e-05, 0.0003791479975916445, 1.8259540865983581e-06, 0.00011679522140184417, 3.185340347044985e-06, 8.650247036712244e-05, 3.466773932814249e-06, 2.6196288672508672e-05, 0.0001746346679283306, 1.2231578693899792e-05, 0.0011603356106206775, 1.674451596045401e-05, 3.176387326675467e-05, 1.4809855201747268e-05, 0.0002943826839327812, 1.8822503989213146e-05, 4.100235400983365e-06, 3.168575494782999e-05, 1.0425554819448735e-06, 2.477549060131423e-06, 2.1973944967612624e-05, 1.7066517102648504e-05], "target_probs": 0.9011898040771484}}


{"result": {"time": "2021-02-11 10:38:56.723000", "n_pass": [727, 93, 84], "n_token": 141, "loss": [0.0053232829086482525, 0.10613145679235458], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["def __init__(", "self", ",", "request", "args", ",", "self", "request", "args", "kwargs", "tenant_choices", "tenants", "has_more", ")", "request", ")", "#NEWLINE#", "for", "tenant", "in", "tenants", ":", "#NEWLINE#", "#INDENT#", "if", "tenant", "#NEWLINE#", "#INDENT#", "tenant_choices", "(", "net_type", ".", "id", ",", "tenant", "#UNINDENT#", "self", ".", "=", "tenant_choices", "#NEWLINE#", "#INDENT#", "self", ".", "=", "self", ".", "get_network_profile_choices", "(", "request", "(", "request", ",", "#NEWLINE#", "#INDENT#", "neutron_settings", "#NEWLINE#", "seg_id_range", "=", "neutron_settings", ".", "get", "#NEWLINE#", "self", ".", "seg_id_range", "=", "{", ":", "seg_id_range", ".", ":", "seg_id_range", ":", "seg_id_range", "#NEWLINE#", "seg_id_help", "'For VLAN networks, the VLAN VID on the physical network that realizes the virtual network. Valid VLAN VIDs are %(vlan_min)s through %(vlan_max)s. For GRE or VXLAN networks, the tunnel ID. Valid tunnel IDs for GRE networks are %(gre_min)s through %(gre_max)s. For VXLAN networks, %(vxlan_min)s through %(vxlan_max)s.'", "self", ".", "seg_id_range", "self", ".", "seg_id_range", "[", ":", "self", ".", "seg_id_range", "self", ".", "seg_id_range", "#NEWLINE#", "self", ".", "seg_id_range", "[", "'vxlan_max'", ":", "self", ".", "seg_id_range", "[", "self", ".", "=", "seg_id_help", "#NEWLINE#", "supported_provider_types", "=", "neutron_settings", "(", "'supported_provider_types'", "(", "supported_provider_types", "network_type_choices", "=", "PROVIDER_TYPES", "#NEWLINE#", "#INDENT#", "network_type_choices", "net_type", "for", "net_type", "in", "(", "net_type", "supported_provider_types", "(", "network_type_choices", ")", "#NEWLINE#", "#INDENT#", "self", ".", "#INDENT#", "self", "=", "network_type_choices", "#INDENT#", "self"]}}
{"position": {"error_location": 30, "repair_targets": [18, 25, 34], "repair_candidates": [4, 8, 57, 65, 69, 72, 74, 80, 83, 88, 91, 95, 101, 30, 121, 123, 126, 11, 20, 115, 120, 129, 138, 3, 7, 14, 49, 51, 18, 25, 34, 9, 12, 10, 28, 39, 55, 59, 110, 76, 106, 1, 6, 36, 42, 45, 63, 78, 81, 86, 89, 93, 99, 103, 133, 136, 140, 108, 114, 127]}}
{"prediction": {"error_location": 0.9946908354759216, "repair_targets": [0.8986564874649048, 0.00036200624890625477, 0.000287942704744637], "repair_candidates": [0.022246796637773514, 0.009227250702679157, 0.011297649703919888, 0.005215916316956282, 0.0002451340260449797, 0.0008068647584877908, 0.007764202076941729, 0.0017309753457084298, 9.308703010901809e-05, 5.818658246425912e-05, 0.03751668706536293, 0.8986564874649048, 4.760705905937357e-06, 0.00036200624890625477, 0.00017415858746971935, 5.096236054669134e-05, 0.000287942704744637, 4.4465592509368435e-05, 0.0006592824356630445, 3.4500390029279515e-05, 9.725069958221866e-07, 1.1026029824279249e-05, 0.0004054865275975317, 2.8954853405593894e-05, 4.2472845962038264e-05, 1.3926277460996062e-05, 1.2689012010014267e-06, 0.00019574660109356046, 4.2598272557370365e-05, 1.1191400517418515e-05, 8.72500277182553e-06, 1.3931854482507333e-05, 3.0214691832952667e-06, 0.0006209315615706146, 5.436647825263208e-06, 6.963941996218637e-05, 3.7778920614073286e-06, 0.0004563088295981288, 1.1146472388645634e-05, 0.000245914445258677, 1.3387960962063516e-06, 6.894220859976485e-05, 2.0359298105177004e-06, 6.43455859972164e-05, 2.2334311324812006e-06, 1.3734894309891388e-05, 0.000127228326164186, 7.423664555972209e-06, 0.0007370102684944868, 9.746235264174175e-06, 2.1220015696599148e-05, 9.544727618049365e-06, 0.00019460837938822806, 1.4693265256937593e-05, 3.007744226124487e-06, 2.400272205704823e-05, 7.563469353044638e-07, 1.654346988289035e-06, 1.4832703527645208e-05, 1.182141113531543e-05], "target_probs": 0.8993064165115356}}


{"result": {"time": "2021-02-11 10:38:56.878859", "n_pass": [729, 94, 85], "n_token": 139, "loss": [0.0339370034635067, 0.3226418197154999], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["def __init__(", "self", ",", "request", "args", ",", "self", "request", "args", "kwargs", "tenant_choices", "tenants", "has_more", ")", "request", "for", "tenant", "in", "tenants", ":", "#NEWLINE#", "#INDENT#", "if", "tenant", "#NEWLINE#", "#INDENT#", "tenant_choices", "(", "net_type", ".", "id", ",", "tenant", "#UNINDENT#", "self", ".", "=", "tenant_choices", "#NEWLINE#", "#INDENT#", "self", ".", "=", "self", ".", "get_network_profile_choices", "(", "request", "(", "request", ",", "#NEWLINE#", "#INDENT#", "neutron_settings", "#NEWLINE#", "seg_id_range", "=", "neutron_settings", ".", "get", "#NEWLINE#", "self", ".", "seg_id_range", "=", "{", ":", "seg_id_range", ".", ":", "seg_id_range", ":", "seg_id_range", "#NEWLINE#", "seg_id_help", "'For VLAN networks, the VLAN VID on the physical network that realizes the virtual network. Valid VLAN VIDs are %(vlan_min)s through %(vlan_max)s. For GRE or VXLAN networks, the tunnel ID. Valid tunnel IDs for GRE networks are %(gre_min)s through %(gre_max)s. For VXLAN networks, %(vxlan_min)s through %(vxlan_max)s.'", "self", ".", "seg_id_range", "self", ".", "seg_id_range", "[", ":", "self", ".", "seg_id_range", "self", ".", "seg_id_range", "#NEWLINE#", "self", ".", "seg_id_range", "[", "'vxlan_max'", ":", "self", ".", "seg_id_range", "[", "self", ".", "=", "seg_id_help", "#NEWLINE#", "supported_provider_types", "=", "neutron_settings", "(", "'supported_provider_types'", "(", "supported_provider_types", "network_type_choices", "=", "PROVIDER_TYPES", "#NEWLINE#", "#INDENT#", "network_type_choices", "net_type", "for", "net_type", "in", "(", "net_type", "supported_provider_types", "(", "network_type_choices", ")", "#NEWLINE#", "#INDENT#", "self", ".", "#INDENT#", "self", "=", "network_type_choices", "#INDENT#", "self"]}}
{"position": {"error_location": 28, "repair_targets": [16, 23, 32], "repair_candidates": [4, 8, 55, 63, 67, 70, 72, 78, 81, 86, 89, 93, 99, 28, 119, 121, 124, 11, 18, 113, 118, 127, 136, 3, 7, 14, 47, 49, 16, 23, 32, 9, 12, 10, 26, 37, 53, 57, 108, 74, 104, 1, 6, 34, 40, 43, 61, 76, 79, 84, 87, 91, 97, 101, 131, 134, 138, 106, 112, 125]}}
{"prediction": {"error_location": 0.9666324853897095, "repair_targets": [0.7236615419387817, 0.00033191742841154337, 0.0002397126518189907], "repair_candidates": [0.016172438859939575, 0.005059442482888699, 0.0068120104260742664, 0.0052249617874622345, 0.00022588718275073916, 0.0004997914074920118, 0.0061762696132063866, 0.000618052901700139, 3.4262131521245465e-05, 2.8372141969157383e-05, 0.228843554854393, 0.7236615419387817, 4.718572199635673e-06, 0.00033191742841154337, 9.886960469884798e-05, 4.0691786125535145e-05, 0.0002397126518189907, 5.033773049945012e-05, 0.0007144734845496714, 4.590034222928807e-05, 7.85673137215781e-07, 1.1700340110110119e-05, 0.0011105961166322231, 4.9289315938949585e-05, 7.948010170366615e-05, 2.688986023713369e-05, 2.3254849566001212e-06, 0.00023330847034230828, 6.992374983383343e-05, 1.685175084276125e-05, 9.590033187123481e-06, 1.5745323253213428e-05, 4.205972800264135e-06, 0.0005692016566172242, 8.183943464246113e-06, 6.342056440189481e-05, 3.97429357690271e-06, 0.00034585248795337975, 1.5209167031571269e-05, 0.0002134616079274565, 1.6724094393794076e-06, 7.714327512076125e-05, 1.6896818806344527e-06, 8.222978067351505e-05, 1.768926495060441e-06, 1.6376747225876898e-05, 0.0002783859963528812, 8.62901742948452e-06, 0.0013690157793462276, 1.1170794095960446e-05, 2.885837784560863e-05, 1.502016675658524e-05, 0.0002770386927295476, 1.713733399810735e-05, 3.5110226690449053e-06, 2.5510480554657988e-05, 5.274990826364956e-07, 1.6810058696137276e-06, 2.4458340703858994e-05, 2.4951110390247777e-05], "target_probs": 0.7242332100868225}}


{"result": {"time": "2021-02-11 10:38:57.033228", "n_pass": [732, 95, 86], "n_token": 137, "loss": [0.0734405368566513, 0.24509817361831665], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["def __init__(", "self", ",", "request", "args", ",", "self", "request", "args", "kwargs", "tenant_choices", "tenants", "has_more", ")", "request", "for", "tenant", "in", "tenants", "#INDENT#", "if", "tenant", "#NEWLINE#", "#INDENT#", "tenant_choices", "(", "net_type", ".", "id", ",", "tenant", "#UNINDENT#", "self", ".", "=", "tenant_choices", "#NEWLINE#", "#INDENT#", "self", ".", "=", "self", ".", "get_network_profile_choices", "(", "request", "(", "request", ",", "#NEWLINE#", "#INDENT#", "neutron_settings", "#NEWLINE#", "seg_id_range", "=", "neutron_settings", ".", "get", "#NEWLINE#", "self", ".", "seg_id_range", "=", "{", ":", "seg_id_range", ".", ":", "seg_id_range", ":", "seg_id_range", "#NEWLINE#", "seg_id_help", "'For VLAN networks, the VLAN VID on the physical network that realizes the virtual network. Valid VLAN VIDs are %(vlan_min)s through %(vlan_max)s. For GRE or VXLAN networks, the tunnel ID. Valid tunnel IDs for GRE networks are %(gre_min)s through %(gre_max)s. For VXLAN networks, %(vxlan_min)s through %(vxlan_max)s.'", "self", ".", "seg_id_range", "self", ".", "seg_id_range", "[", ":", "self", ".", "seg_id_range", "self", ".", "seg_id_range", "#NEWLINE#", "self", ".", "seg_id_range", "[", "'vxlan_max'", ":", "self", ".", "seg_id_range", "[", "self", ".", "=", "seg_id_help", "#NEWLINE#", "supported_provider_types", "=", "neutron_settings", "(", "'supported_provider_types'", "(", "supported_provider_types", "network_type_choices", "=", "PROVIDER_TYPES", "#NEWLINE#", "#INDENT#", "network_type_choices", "net_type", "for", "net_type", "in", "(", "net_type", "supported_provider_types", "(", "network_type_choices", ")", "#NEWLINE#", "#INDENT#", "self", ".", "#INDENT#", "self", "=", "network_type_choices", "#INDENT#", "self"]}}
{"position": {"error_location": 26, "repair_targets": [16, 21, 30], "repair_candidates": [4, 8, 53, 61, 65, 68, 70, 76, 79, 84, 87, 91, 97, 26, 117, 119, 122, 11, 18, 111, 116, 125, 134, 3, 7, 14, 45, 47, 16, 21, 30, 9, 12, 10, 24, 35, 51, 55, 106, 72, 102, 1, 6, 32, 38, 41, 59, 74, 77, 82, 85, 89, 95, 99, 129, 132, 136, 104, 110, 123]}}
{"prediction": {"error_location": 0.929191529750824, "repair_targets": [0.7824797630310059, 9.698283247416839e-05, 5.097021858091466e-05], "repair_candidates": [0.010789833962917328, 0.0029124566353857517, 0.003039612900465727, 0.0029010758735239506, 0.00010264051525155082, 0.0002382084057899192, 0.0024329940788447857, 0.00037066295044496655, 2.0832430891459808e-05, 2.0888812287012115e-05, 0.1909864842891693, 0.7824797630310059, 1.0922780347755179e-05, 9.698283247416839e-05, 7.25952340872027e-05, 1.4415250916499645e-05, 5.097021858091466e-05, 4.908409755444154e-05, 4.009708572993986e-05, 3.331648986204527e-05, 9.617551768315025e-07, 8.238148438977078e-06, 0.0006274692714214325, 4.4926575355930254e-05, 0.00011078353418270126, 1.0960136023641098e-05, 1.8891751096816733e-06, 0.00016646193398628384, 3.2814201404107735e-05, 7.9926940088626e-06, 4.236423592374194e-06, 9.856425094767474e-06, 2.931989456556039e-06, 0.0005354462773539126, 7.182494755397784e-06, 4.0549897676100954e-05, 1.935618001880357e-06, 0.00026542635168880224, 1.2057450476277154e-05, 0.00011618743883445859, 1.1197253115824424e-06, 4.620898107532412e-05, 1.2788943877239944e-06, 5.194103141548112e-05, 1.0073641760754981e-06, 6.690659120067721e-06, 0.00016820886230561882, 4.025354428449646e-06, 0.000672790571115911, 7.056865342747187e-06, 2.190268787671812e-05, 1.0189931344939396e-05, 0.00028140039648860693, 9.58518012339482e-06, 2.1838789052708307e-06, 1.0363704859628342e-05, 3.3644593600001826e-07, 1.5027870858830283e-06, 1.3418346497928724e-05, 1.671937025093939e-05], "target_probs": 0.7826277017593384}}


{"result": {"time": "2021-02-11 10:38:57.186505", "n_pass": [733, 96, 87], "n_token": 135, "loss": [0.1428721696138382, 0.2927287518978119], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["def __init__(", "self", ",", "request", "args", ",", "self", "request", "args", "kwargs", "tenant_choices", "tenants", "has_more", ")", "request", "for", "tenant", "in", "tenants", "tenant", "#NEWLINE#", "#INDENT#", "tenant_choices", "(", "net_type", ".", "id", ",", "tenant", "#UNINDENT#", "self", ".", "=", "tenant_choices", "#NEWLINE#", "#INDENT#", "self", ".", "=", "self", ".", "get_network_profile_choices", "(", "request", "(", "request", ",", "#NEWLINE#", "#INDENT#", "neutron_settings", "#NEWLINE#", "seg_id_range", "=", "neutron_settings", ".", "get", "#NEWLINE#", "self", ".", "seg_id_range", "=", "{", ":", "seg_id_range", ".", ":", "seg_id_range", ":", "seg_id_range", "#NEWLINE#", "seg_id_help", "'For VLAN networks, the VLAN VID on the physical network that realizes the virtual network. Valid VLAN VIDs are %(vlan_min)s through %(vlan_max)s. For GRE or VXLAN networks, the tunnel ID. Valid tunnel IDs for GRE networks are %(gre_min)s through %(gre_max)s. For VXLAN networks, %(vxlan_min)s through %(vxlan_max)s.'", "self", ".", "seg_id_range", "self", ".", "seg_id_range", "[", ":", "self", ".", "seg_id_range", "self", ".", "seg_id_range", "#NEWLINE#", "self", ".", "seg_id_range", "[", "'vxlan_max'", ":", "self", ".", "seg_id_range", "[", "self", ".", "=", "seg_id_help", "#NEWLINE#", "supported_provider_types", "=", "neutron_settings", "(", "'supported_provider_types'", "(", "supported_provider_types", "network_type_choices", "=", "PROVIDER_TYPES", "#NEWLINE#", "#INDENT#", "network_type_choices", "net_type", "for", "net_type", "in", "(", "net_type", "supported_provider_types", "(", "network_type_choices", ")", "#NEWLINE#", "#INDENT#", "self", ".", "#INDENT#", "self", "=", "network_type_choices", "#INDENT#", "self"]}}
{"position": {"error_location": 24, "repair_targets": [16, 19, 28], "repair_candidates": [4, 8, 51, 59, 63, 66, 68, 74, 77, 82, 85, 89, 95, 24, 115, 117, 120, 11, 18, 109, 114, 123, 132, 3, 7, 14, 43, 45, 16, 19, 28, 9, 12, 10, 22, 33, 49, 53, 104, 70, 100, 1, 6, 30, 36, 39, 57, 72, 75, 80, 83, 87, 93, 97, 127, 130, 134, 102, 108, 121]}}
{"prediction": {"error_location": 0.8668650388717651, "repair_targets": [0.7458214163780212, 0.00011519515101099387, 0.00028786915936507285], "repair_candidates": [0.030561940744519234, 0.009088559076189995, 0.010656625963747501, 0.007715946529060602, 0.0002219902817159891, 0.0005621559685096145, 0.005808589980006218, 0.0009096605936065316, 4.657275349018164e-05, 4.516194894677028e-05, 0.16963313519954681, 0.7458214163780212, 5.650894672726281e-05, 0.00011519515101099387, 0.0003580932680051774, 0.00011142524454044178, 0.00028786915936507285, 0.00024061820295173675, 0.000728027313016355, 0.00015951268142089248, 2.4657833819219377e-06, 2.8220985768712126e-05, 0.003448138479143381, 0.00020079263777006418, 0.0006612127763219178, 6.585806113434955e-05, 4.572087163978722e-06, 0.0006971461116336286, 0.000141421114676632, 3.751044278033078e-05, 1.8229302440886386e-05, 4.5180131564848125e-05, 7.128071501938393e-06, 0.002062013139948249, 3.285498314653523e-05, 0.00014299960457719862, 6.432009286072571e-06, 0.0009193110163323581, 4.899797204416245e-05, 0.00042697781464084983, 3.314044988655951e-06, 0.0002415730559732765, 3.1043246053741314e-06, 0.0002496884553693235, 2.8711515369650442e-06, 2.4228751499322243e-05, 0.0007156382780522108, 1.4655605809821282e-05, 0.004357181955128908, 3.052175816264935e-05, 0.00015286369307432324, 6.918979488546029e-05, 0.0017662312602624297, 3.773141361307353e-05, 7.64579453971237e-06, 4.48796090495307e-05, 9.274118042412738e-07, 4.863718004344264e-06, 7.683134754188359e-05, 6.955214485060424e-05], "target_probs": 0.7462245225906372}}


{"result": {"time": "2021-02-11 10:38:57.489570", "n_pass": [740, 98, 88], "n_token": 133, "loss": [0.09908568114042282, 0.1591491401195526], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["def __init__(", "self", ",", "request", "args", ",", "self", "request", "args", "kwargs", "tenant_choices", "tenants", "has_more", ")", "request", "for", "tenant", "in", "tenants", "tenant", "#NEWLINE#", "#INDENT#", "tenant_choices", "(", "net_type", ".", "id", ",", "tenant", "#UNINDENT#", "self", "tenant_choices", "#NEWLINE#", "#INDENT#", "self", ".", "=", "self", ".", "get_network_profile_choices", "(", "request", "(", "request", ",", "#NEWLINE#", "#INDENT#", "neutron_settings", "#NEWLINE#", "seg_id_range", "=", "neutron_settings", ".", "get", "#NEWLINE#", "self", ".", "seg_id_range", "=", "{", ":", "seg_id_range", ".", ":", "seg_id_range", ":", "seg_id_range", "#NEWLINE#", "seg_id_help", "'For VLAN networks, the VLAN VID on the physical network that realizes the virtual network. Valid VLAN VIDs are %(vlan_min)s through %(vlan_max)s. For GRE or VXLAN networks, the tunnel ID. Valid tunnel IDs for GRE networks are %(gre_min)s through %(gre_max)s. For VXLAN networks, %(vxlan_min)s through %(vxlan_max)s.'", "self", ".", "seg_id_range", "self", ".", "seg_id_range", "[", ":", "self", ".", "seg_id_range", "self", ".", "seg_id_range", "#NEWLINE#", "self", ".", "seg_id_range", "[", "'vxlan_max'", ":", "self", ".", "seg_id_range", "[", "self", ".", "=", "seg_id_help", "#NEWLINE#", "supported_provider_types", "=", "neutron_settings", "(", "'supported_provider_types'", "(", "supported_provider_types", "network_type_choices", "=", "PROVIDER_TYPES", "#NEWLINE#", "#INDENT#", "network_type_choices", "net_type", "for", "net_type", "in", "(", "net_type", "supported_provider_types", "(", "network_type_choices", ")", "#NEWLINE#", "#INDENT#", "self", ".", "#INDENT#", "self", "=", "network_type_choices", "#INDENT#", "self"]}}
{"position": {"error_location": 24, "repair_targets": [16, 19, 28], "repair_candidates": [4, 8, 49, 57, 61, 64, 66, 72, 75, 80, 83, 87, 93, 24, 113, 115, 118, 11, 18, 107, 112, 121, 130, 3, 7, 14, 41, 43, 16, 19, 28, 9, 12, 10, 22, 31, 47, 51, 102, 68, 98, 1, 6, 30, 34, 37, 55, 70, 73, 78, 81, 85, 91, 95, 125, 128, 132, 100, 106, 119]}}
{"prediction": {"error_location": 0.9056650996208191, "repair_targets": [0.852695643901825, 3.8099857192719355e-05, 0.00013544799003284425], "repair_candidates": [0.004764904733747244, 0.0038372341077774763, 0.004561236593872309, 0.0014238160802051425, 6.186695100041106e-05, 0.00014020694652572274, 0.0019371045054867864, 0.000298157159704715, 1.196596713270992e-05, 1.2477620657591615e-05, 0.12514746189117432, 0.852695643901825, 2.0057137589901686e-05, 3.8099857192719355e-05, 8.396982593694702e-05, 2.1834781364304945e-05, 0.00013544799003284425, 0.000298610219033435, 0.00010849624231923372, 4.9547776143299416e-05, 7.380308488791343e-07, 8.165826329786796e-06, 0.0007694049272686243, 7.375812856480479e-05, 0.00018472773081157357, 1.9929580957978033e-05, 1.402808948114398e-06, 0.00019205456192139536, 4.474791421671398e-05, 8.231025276472792e-06, 4.941797669744119e-06, 1.5155756045714952e-05, 3.1809208849153947e-06, 0.0005501288105733693, 9.204343768942636e-06, 3.5664616007125005e-05, 2.4700848371139728e-06, 0.00032122927950695157, 1.379888090013992e-05, 0.00011975860979873687, 1.6084862863863236e-06, 4.861729030380957e-05, 1.4526198128805845e-06, 4.862962305196561e-05, 1.1858911648232606e-06, 9.256632438336965e-06, 0.00048110424540936947, 7.224171895359177e-06, 0.0008107415633276105, 1.0575267879175954e-05, 3.848890628432855e-05, 1.5046378393890336e-05, 0.00044063347741030157, 1.0295279025740456e-05, 2.4028167899814434e-06, 1.0171385838475544e-05, 3.857846024857281e-07, 1.8833449075827957e-06, 1.5331030226661824e-05, 1.818449527490884e-05], "target_probs": 0.8528691530227661}}


{"result": {"time": "2021-02-11 10:38:57.640531", "n_pass": [743, 99, 89], "n_token": 131, "loss": [0.15440239012241364, 0.1664878875017166], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["def __init__(", "self", ",", "request", "args", ",", "self", "request", "args", "kwargs", "tenant_choices", "tenants", "has_more", ")", "request", "for", "tenant", "in", "tenants", "tenant", "#NEWLINE#", "#INDENT#", "tenant_choices", "(", "net_type", ".", "id", ",", "tenant", "#UNINDENT#", "self", "tenant_choices", "#NEWLINE#", "#INDENT#", "self", "self", ".", "get_network_profile_choices", "(", "request", "(", "request", ",", "#NEWLINE#", "#INDENT#", "neutron_settings", "#NEWLINE#", "seg_id_range", "=", "neutron_settings", ".", "get", "#NEWLINE#", "self", ".", "seg_id_range", "=", "{", ":", "seg_id_range", ".", ":", "seg_id_range", ":", "seg_id_range", "#NEWLINE#", "seg_id_help", "'For VLAN networks, the VLAN VID on the physical network that realizes the virtual network. Valid VLAN VIDs are %(vlan_min)s through %(vlan_max)s. For GRE or VXLAN networks, the tunnel ID. Valid tunnel IDs for GRE networks are %(gre_min)s through %(gre_max)s. For VXLAN networks, %(vxlan_min)s through %(vxlan_max)s.'", "self", ".", "seg_id_range", "self", ".", "seg_id_range", "[", ":", "self", ".", "seg_id_range", "self", ".", "seg_id_range", "#NEWLINE#", "self", ".", "seg_id_range", "[", "'vxlan_max'", ":", "self", ".", "seg_id_range", "[", "self", ".", "=", "seg_id_help", "#NEWLINE#", "supported_provider_types", "=", "neutron_settings", "(", "'supported_provider_types'", "(", "supported_provider_types", "network_type_choices", "=", "PROVIDER_TYPES", "#NEWLINE#", "#INDENT#", "network_type_choices", "net_type", "for", "net_type", "in", "(", "net_type", "supported_provider_types", "(", "network_type_choices", ")", "#NEWLINE#", "#INDENT#", "self", ".", "#INDENT#", "self", "=", "network_type_choices", "#INDENT#", "self"]}}
{"position": {"error_location": 24, "repair_targets": [16, 19, 28], "repair_candidates": [4, 8, 47, 55, 59, 62, 64, 70, 73, 78, 81, 85, 91, 24, 111, 113, 116, 11, 18, 105, 110, 119, 128, 3, 7, 14, 39, 41, 16, 19, 28, 9, 12, 10, 22, 31, 45, 49, 100, 66, 96, 1, 6, 30, 34, 35, 53, 68, 71, 76, 79, 83, 89, 93, 123, 126, 130, 98, 104, 117]}}
{"prediction": {"error_location": 0.856927216053009, "repair_targets": [0.8464564681053162, 3.769145769183524e-05, 0.00013896686141379178], "repair_candidates": [0.0053355079144239426, 0.004083703737705946, 0.005218264646828175, 0.001608596765436232, 6.813543586758897e-05, 0.00016295036766678095, 0.002257030922919512, 0.0003440499131102115, 1.3369429325393867e-05, 1.3968002349429298e-05, 0.12835152447223663, 0.8464564681053162, 2.195296656282153e-05, 3.769145769183524e-05, 8.334477024618536e-05, 2.241134825453628e-05, 0.00013896686141379178, 0.0003966671065427363, 0.0001540586381452158, 2.7268331905361265e-05, 6.886755272716982e-07, 1.3310145732248202e-05, 0.0007517002522945404, 7.192459452198818e-05, 0.00027661063359119, 8.432523827650584e-06, 2.0717909592349315e-06, 0.0002077873796224594, 3.928369551431388e-05, 5.075566605228232e-06, 3.213292757209274e-06, 1.3928575754107442e-05, 3.3915905532921897e-06, 0.000547445728443563, 9.481158485868946e-06, 4.287309275241569e-05, 3.6385727071319707e-06, 0.0004495978355407715, 2.0335772205726244e-05, 0.00014561643183697015, 1.7206047004947322e-06, 6.96083516231738e-05, 1.5524101399932988e-06, 8.049821190070361e-05, 1.1568306490516989e-06, 8.660077583044767e-06, 0.000575683603528887, 7.001429821684724e-06, 0.0010238729882985353, 1.0916160135820974e-05, 5.57414059585426e-05, 2.0428255083970726e-05, 0.0006627534748986363, 1.1886175343533978e-05, 2.6528446142037865e-06, 1.1167594493599609e-05, 4.069898977832054e-07, 2.1918856418778887e-06, 1.8352538972976618e-05, 2.1457193724927492e-05], "target_probs": 0.8466330766677856}}


{"result": {"time": "2021-02-11 10:38:57.790707", "n_pass": [745, 100, 90], "n_token": 129, "loss": [0.12634722888469696, 0.176091268658638], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["def __init__(", "self", ",", "request", "args", ",", "self", "request", "args", "kwargs", "tenant_choices", "tenants", "has_more", ")", "request", "for", "tenant", "in", "tenants", "tenant", "#NEWLINE#", "#INDENT#", "tenant_choices", "(", "net_type", ".", "id", ",", "tenant", "#UNINDENT#", "self", "tenant_choices", "#NEWLINE#", "#INDENT#", "self", "self", ".", "request", "(", "request", ",", "#NEWLINE#", "#INDENT#", "neutron_settings", "#NEWLINE#", "seg_id_range", "=", "neutron_settings", ".", "get", "#NEWLINE#", "self", ".", "seg_id_range", "=", "{", ":", "seg_id_range", ".", ":", "seg_id_range", ":", "seg_id_range", "#NEWLINE#", "seg_id_help", "'For VLAN networks, the VLAN VID on the physical network that realizes the virtual network. Valid VLAN VIDs are %(vlan_min)s through %(vlan_max)s. For GRE or VXLAN networks, the tunnel ID. Valid tunnel IDs for GRE networks are %(gre_min)s through %(gre_max)s. For VXLAN networks, %(vxlan_min)s through %(vxlan_max)s.'", "self", ".", "seg_id_range", "self", ".", "seg_id_range", "[", ":", "self", ".", "seg_id_range", "self", ".", "seg_id_range", "#NEWLINE#", "self", ".", "seg_id_range", "[", "'vxlan_max'", ":", "self", ".", "seg_id_range", "[", "self", ".", "=", "seg_id_help", "#NEWLINE#", "supported_provider_types", "=", "neutron_settings", "(", "'supported_provider_types'", "(", "supported_provider_types", "network_type_choices", "=", "PROVIDER_TYPES", "#NEWLINE#", "#INDENT#", "network_type_choices", "net_type", "for", "net_type", "in", "(", "net_type", "supported_provider_types", "(", "network_type_choices", ")", "#NEWLINE#", "#INDENT#", "self", ".", "#INDENT#", "self", "=", "network_type_choices", "#INDENT#", "self"]}}
{"position": {"error_location": 24, "repair_targets": [16, 19, 28], "repair_candidates": [4, 8, 45, 53, 57, 60, 62, 68, 71, 76, 79, 83, 89, 24, 109, 111, 114, 11, 18, 103, 108, 117, 126, 3, 7, 14, 37, 39, 16, 19, 28, 9, 12, 10, 22, 31, 43, 47, 98, 64, 94, 1, 6, 30, 34, 35, 51, 66, 69, 74, 77, 81, 87, 91, 121, 124, 128, 96, 102, 115]}}
{"prediction": {"error_location": 0.8813086748123169, "repair_targets": [0.8382627964019775, 4.1498555219732225e-05, 0.0002371491282247007], "repair_candidates": [0.007570798043161631, 0.005036344286054373, 0.006191421765834093, 0.002220197580754757, 8.266750228358433e-05, 0.00020098924869671464, 0.0027231567073613405, 0.0004022782086394727, 1.6584444892941974e-05, 1.7157788533950225e-05, 0.12784343957901, 0.8382627964019775, 2.647231303853914e-05, 4.1498555219732225e-05, 0.00010033264697995037, 2.8263415515539236e-05, 0.0002371491282247007, 0.0008558465633541346, 0.00037481970502994955, 8.262730989372358e-05, 2.2854765120428056e-06, 0.00012087317008990794, 0.0005430048331618309, 0.00014370410644914955, 0.0006146664964035153, 1.8277927665621974e-05, 3.586538241506787e-06, 0.00030731374863535166, 7.240271952468902e-05, 1.393029378959909e-05, 7.1119056883617304e-06, 2.324667730135843e-05, 4.827218617720064e-06, 0.0008702412014827132, 1.4184980500431266e-05, 3.9069593185558915e-05, 4.545624506135937e-06, 0.0005817553028464317, 2.957636388600804e-05, 0.00021832268976140767, 2.4217631562351016e-06, 8.561721915611997e-05, 2.9934717531432398e-06, 0.00010977116471622139, 2.1765531528217252e-06, 1.2775818504451308e-05, 0.0010730222566053271, 1.1377437658666167e-05, 0.0015489259967580438, 1.866736783995293e-05, 8.253122359747067e-05, 3.272709363955073e-05, 0.0009622271172702312, 1.7716656657285057e-05, 4.249795438227011e-06, 1.6160469385795295e-05, 5.783678034276818e-07, 3.517758614179911e-06, 2.926185516116675e-05, 3.550381734385155e-05], "target_probs": 0.8385414481163025}}


{"result": {"time": "2021-02-11 10:38:57.940149", "n_pass": [748, 101, 91], "n_token": 127, "loss": [0.1823929250240326, 0.20367108285427094], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["def __init__(", "self", ",", "request", "args", ",", "self", "request", "args", "kwargs", "tenant_choices", "tenants", "has_more", ")", "request", "for", "tenant", "in", "tenants", "tenant", "#NEWLINE#", "#INDENT#", "tenant_choices", "(", "net_type", ".", "id", ",", "tenant", "#UNINDENT#", "self", "tenant_choices", "#NEWLINE#", "#INDENT#", "self", "self", ".", "request", "(", "request", ",", "neutron_settings", "#NEWLINE#", "seg_id_range", "=", "neutron_settings", ".", "get", "#NEWLINE#", "self", ".", "seg_id_range", "=", "{", ":", "seg_id_range", ".", ":", "seg_id_range", ":", "seg_id_range", "#NEWLINE#", "seg_id_help", "'For VLAN networks, the VLAN VID on the physical network that realizes the virtual network. Valid VLAN VIDs are %(vlan_min)s through %(vlan_max)s. For GRE or VXLAN networks, the tunnel ID. Valid tunnel IDs for GRE networks are %(gre_min)s through %(gre_max)s. For VXLAN networks, %(vxlan_min)s through %(vxlan_max)s.'", "self", ".", "seg_id_range", "self", ".", "seg_id_range", "[", ":", "self", ".", "seg_id_range", "self", ".", "seg_id_range", "#NEWLINE#", "self", ".", "seg_id_range", "[", "'vxlan_max'", ":", "self", ".", "seg_id_range", "[", "self", ".", "=", "seg_id_help", "#NEWLINE#", "supported_provider_types", "=", "neutron_settings", "(", "'supported_provider_types'", "(", "supported_provider_types", "network_type_choices", "=", "PROVIDER_TYPES", "#NEWLINE#", "#INDENT#", "network_type_choices", "net_type", "for", "net_type", "in", "(", "net_type", "supported_provider_types", "(", "network_type_choices", ")", "#NEWLINE#", "#INDENT#", "self", ".", "#INDENT#", "self", "=", "network_type_choices", "#INDENT#", "self"]}}
{"position": {"error_location": 24, "repair_targets": [16, 19, 28], "repair_candidates": [4, 8, 43, 51, 55, 58, 60, 66, 69, 74, 77, 81, 87, 24, 107, 109, 112, 11, 18, 101, 106, 115, 124, 3, 7, 14, 37, 39, 16, 19, 28, 9, 12, 10, 22, 31, 41, 45, 96, 62, 92, 1, 6, 30, 34, 35, 49, 64, 67, 72, 75, 79, 85, 89, 119, 122, 126, 94, 100, 113]}}
{"prediction": {"error_location": 0.833273708820343, "repair_targets": [0.815386950969696, 5.231022441876121e-05, 0.00029132727649994195], "repair_candidates": [0.00851137563586235, 0.00567115843296051, 0.007329848129302263, 0.002457995666190982, 9.958130249287933e-05, 0.0002569402859080583, 0.003157061990350485, 0.0004997079377062619, 2.099657831422519e-05, 2.1522271708818153e-05, 0.14472363889217377, 0.815386950969696, 3.183826265740208e-05, 5.231022441876121e-05, 0.00012442890147212893, 3.785808803513646e-05, 0.00029132727649994195, 0.001087202108465135, 0.0004634407232515514, 4.934217577101663e-05, 1.5723122714916826e-06, 0.00013983729877509177, 0.0014687037328258157, 3.522340193740092e-05, 0.0006511126994155347, 2.0341733034001663e-05, 2.8713193387375213e-06, 0.00032742880284786224, 7.037886825855821e-05, 1.7343640138278715e-05, 7.884176739025861e-06, 2.363199928367976e-05, 5.983339178783353e-06, 0.0010863812640309334, 1.464911565562943e-05, 4.6800600102869794e-05, 4.840717338083778e-06, 0.0007488510455004871, 4.9058773583965376e-05, 0.00026550531038083136, 3.3666719900793396e-06, 9.873146336758509e-05, 3.221858605684247e-06, 0.0001275178510695696, 2.17331353269401e-06, 1.4968103641876951e-05, 0.0011181853478774428, 1.2702997992164455e-05, 0.0018861641874536872, 1.923370837175753e-05, 9.712164319353178e-05, 3.8338992453645915e-05, 0.0011835771147161722, 2.1165171347092837e-05, 4.746663762489334e-06, 2.0562405552482232e-05, 6.63082346363808e-07, 4.183806140645174e-06, 3.522057522786781e-05, 4.515740511124022e-05], "target_probs": 0.815730631351471}}


{"result": {"time": "2021-02-11 10:38:58.089241", "n_pass": [752, 102, 92], "n_token": 125, "loss": [0.14403870701789856, 0.1862998604774475], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["def __init__(", "self", ",", "request", "args", ",", "self", "request", "args", "kwargs", "tenant_choices", "tenants", "has_more", ")", "request", "for", "tenant", "in", "tenants", "tenant", "#NEWLINE#", "#INDENT#", "tenant_choices", "(", "net_type", ".", "id", ",", "tenant", "#UNINDENT#", "self", "tenant_choices", "#NEWLINE#", "#INDENT#", "self", "self", ".", "request", "(", "request", ",", "neutron_settings", "#NEWLINE#", "seg_id_range", "=", "neutron_settings", ".", "self", ".", "seg_id_range", "=", "{", ":", "seg_id_range", ".", ":", "seg_id_range", ":", "seg_id_range", "#NEWLINE#", "seg_id_help", "'For VLAN networks, the VLAN VID on the physical network that realizes the virtual network. Valid VLAN VIDs are %(vlan_min)s through %(vlan_max)s. For GRE or VXLAN networks, the tunnel ID. Valid tunnel IDs for GRE networks are %(gre_min)s through %(gre_max)s. For VXLAN networks, %(vxlan_min)s through %(vxlan_max)s.'", "self", ".", "seg_id_range", "self", ".", "seg_id_range", "[", ":", "self", ".", "seg_id_range", "self", ".", "seg_id_range", "#NEWLINE#", "self", ".", "seg_id_range", "[", "'vxlan_max'", ":", "self", ".", "seg_id_range", "[", "self", ".", "=", "seg_id_help", "#NEWLINE#", "supported_provider_types", "=", "neutron_settings", "(", "'supported_provider_types'", "(", "supported_provider_types", "network_type_choices", "=", "PROVIDER_TYPES", "#NEWLINE#", "#INDENT#", "network_type_choices", "net_type", "for", "net_type", "in", "(", "net_type", "supported_provider_types", "(", "network_type_choices", ")", "#NEWLINE#", "#INDENT#", "self", ".", "#INDENT#", "self", "=", "network_type_choices", "#INDENT#", "self"]}}
{"position": {"error_location": 24, "repair_targets": [16, 19, 28], "repair_candidates": [4, 8, 43, 49, 53, 56, 58, 64, 67, 72, 75, 79, 85, 24, 105, 107, 110, 11, 18, 99, 104, 113, 122, 3, 7, 14, 37, 39, 16, 19, 28, 9, 12, 10, 22, 31, 41, 45, 94, 60, 90, 1, 6, 30, 34, 35, 47, 62, 65, 70, 73, 77, 83, 87, 117, 120, 124, 92, 98, 111]}}
{"prediction": {"error_location": 0.8658541440963745, "repair_targets": [0.8297593593597412, 5.575114118983038e-05, 0.0002095701202051714], "repair_candidates": [0.008167131803929806, 0.005670132115483284, 0.00741181755438447, 0.0023045605048537254, 9.905038314172998e-05, 0.0002500613918527961, 0.0030920677818357944, 0.0004946374101564288, 2.0279396267142147e-05, 2.0726143702631816e-05, 0.13271242380142212, 0.8297593593597412, 3.2231404475169256e-05, 5.575114118983038e-05, 0.00011483331036288291, 2.961592690553516e-05, 0.0002095701202051714, 0.0005395961925387383, 0.00035375470179133117, 1.2962720575160347e-05, 6.188384986671736e-07, 0.00012005403550574556, 0.0010987797286361456, 7.904052472440526e-05, 0.00023422912636306137, 2.106299507431686e-05, 1.9062434148509055e-05, 0.000432133354479447, 6.326602306216955e-05, 1.447181602998171e-05, 7.264959549502237e-06, 1.4988754628575407e-05, 7.365767032752046e-06, 0.0010503859957680106, 1.3096372640575282e-05, 7.50884209992364e-05, 4.313250883569708e-06, 0.0006733082118444145, 2.7023585062124766e-05, 0.00016629810852464288, 2.803018560371129e-06, 9.635698370402679e-05, 3.478413191260188e-06, 0.0001108806100091897, 2.305247335243621e-06, 1.2626045645447448e-05, 0.0011435187188908458, 1.2922691894345917e-05, 0.0016177237266674638, 2.0432524252100848e-05, 0.00010019216279033571, 3.3895943488460034e-05, 0.0012532742694020271, 1.955746665771585e-05, 4.64410504719126e-06, 1.7257478248211555e-05, 6.484438586085162e-07, 4.1223279367841315e-06, 3.177864709869027e-05, 3.9243968785740435e-05], "target_probs": 0.8300246596336365}}


{"result": {"time": "2021-02-11 10:38:58.235968", "n_pass": [755, 103, 93], "n_token": 123, "loss": [0.15843167901039124, 0.18333125114440918], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["def __init__(", "self", ",", "request", "args", ",", "self", "request", "args", "kwargs", "tenant_choices", "tenants", "has_more", ")", "request", "for", "tenant", "in", "tenants", "tenant", "#NEWLINE#", "#INDENT#", "tenant_choices", "(", "net_type", ".", "id", ",", "tenant", "#UNINDENT#", "self", "tenant_choices", "#NEWLINE#", "#INDENT#", "self", "self", ".", "request", "(", "request", ",", "neutron_settings", "#NEWLINE#", "seg_id_range", "=", "neutron_settings", ".", "self", ".", "seg_id_range", "=", "seg_id_range", ".", ":", "seg_id_range", ":", "seg_id_range", "#NEWLINE#", "seg_id_help", "'For VLAN networks, the VLAN VID on the physical network that realizes the virtual network. Valid VLAN VIDs are %(vlan_min)s through %(vlan_max)s. For GRE or VXLAN networks, the tunnel ID. Valid tunnel IDs for GRE networks are %(gre_min)s through %(gre_max)s. For VXLAN networks, %(vxlan_min)s through %(vxlan_max)s.'", "self", ".", "seg_id_range", "self", ".", "seg_id_range", "[", ":", "self", ".", "seg_id_range", "self", ".", "seg_id_range", "#NEWLINE#", "self", ".", "seg_id_range", "[", "'vxlan_max'", ":", "self", ".", "seg_id_range", "[", "self", ".", "=", "seg_id_help", "#NEWLINE#", "supported_provider_types", "=", "neutron_settings", "(", "'supported_provider_types'", "(", "supported_provider_types", "network_type_choices", "=", "PROVIDER_TYPES", "#NEWLINE#", "#INDENT#", "network_type_choices", "net_type", "for", "net_type", "in", "(", "net_type", "supported_provider_types", "(", "network_type_choices", ")", "#NEWLINE#", "#INDENT#", "self", ".", "#INDENT#", "self", "=", "network_type_choices", "#INDENT#", "self"]}}
{"position": {"error_location": 24, "repair_targets": [16, 19, 28], "repair_candidates": [4, 8, 43, 49, 51, 54, 56, 62, 65, 70, 73, 77, 83, 24, 103, 105, 108, 11, 18, 97, 102, 111, 120, 3, 7, 14, 37, 39, 16, 19, 28, 9, 12, 10, 22, 31, 41, 45, 92, 58, 88, 1, 6, 30, 34, 35, 47, 60, 63, 68, 71, 75, 81, 85, 115, 118, 122, 90, 96, 109]}}
{"prediction": {"error_location": 0.8534812927246094, "repair_targets": [0.8321731090545654, 5.659583257511258e-05, 0.00026260348386131227], "repair_candidates": [0.007764339447021484, 0.0059619783423841, 0.00768246129155159, 0.002199733629822731, 9.994469291996211e-05, 0.0002542307192925364, 0.003147001378238201, 0.0005045563448220491, 2.0537372620310634e-05, 2.0828721972065978e-05, 0.12830859422683716, 0.8321731090545654, 3.3548039937159047e-05, 5.659583257511258e-05, 0.00012493968824855983, 3.383629154996015e-05, 0.00026260348386131227, 0.0008635642589069903, 0.00047352368710562587, 2.4657776521053165e-05, 9.07715900666517e-07, 0.00016920080815907568, 0.0019246867159381509, 9.987275552703068e-05, 0.0003488459624350071, 6.641613435931504e-05, 4.591556353261694e-05, 0.00021903353626839817, 0.00019923537911381572, 1.4245086276787333e-05, 3.908513463102281e-06, 1.5936160707497038e-05, 7.047061899356777e-06, 0.0009932862594723701, 1.4139554878056515e-05, 7.787539652781561e-05, 6.029246833350044e-06, 0.0006638658815063536, 3.093344275839627e-05, 0.0002436879585729912, 3.7848051306355046e-06, 0.0001314560358878225, 5.059025170339737e-06, 0.0001297817361773923, 2.970577725136536e-06, 1.3991186278872192e-05, 0.0011808752315118909, 1.5224138223857153e-05, 0.0017306592781096697, 2.196584864577744e-05, 0.00010881628259085119, 3.403506343602203e-05, 0.0013410671381279826, 2.006885733862873e-05, 4.9686836973705795e-06, 1.835936745919753e-05, 6.998909611866111e-07, 4.481906671571778e-06, 3.461471715127118e-05, 4.144898412050679e-05], "target_probs": 0.8324923515319824}}


{"result": {"time": "2021-02-11 10:38:58.384993", "n_pass": [770, 104, 94], "n_token": 121, "loss": [0.13800197839736938, 0.1878395974636078], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["def __init__(", "self", ",", "request", "args", ",", "self", "request", "args", "kwargs", "tenant_choices", "tenants", "has_more", ")", "request", "for", "tenant", "in", "tenants", "tenant", "#NEWLINE#", "#INDENT#", "tenant_choices", "(", "net_type", ".", "id", ",", "tenant", "#UNINDENT#", "self", "tenant_choices", "#NEWLINE#", "#INDENT#", "self", "self", ".", "request", "(", "request", ",", "neutron_settings", "#NEWLINE#", "seg_id_range", "=", "neutron_settings", ".", "self", ".", "seg_id_range", "=", "seg_id_range", ".", ":", "seg_id_range", ":", "seg_id_range", "#NEWLINE#", "seg_id_help", "'For VLAN networks, the VLAN VID on the physical network that realizes the virtual network. Valid VLAN VIDs are %(vlan_min)s through %(vlan_max)s. For GRE or VXLAN networks, the tunnel ID. Valid tunnel IDs for GRE networks are %(gre_min)s through %(gre_max)s. For VXLAN networks, %(vxlan_min)s through %(vxlan_max)s.'", "self", ".", "seg_id_range", "self", ".", "seg_id_range", "[", ":", "self", ".", "seg_id_range", "self", ".", "seg_id_range", "#NEWLINE#", "self", ".", "seg_id_range", "[", "self", ".", "seg_id_range", "[", "self", ".", "=", "seg_id_help", "#NEWLINE#", "supported_provider_types", "=", "neutron_settings", "(", "'supported_provider_types'", "(", "supported_provider_types", "network_type_choices", "=", "PROVIDER_TYPES", "#NEWLINE#", "#INDENT#", "network_type_choices", "net_type", "for", "net_type", "in", "(", "net_type", "supported_provider_types", "(", "network_type_choices", ")", "#NEWLINE#", "#INDENT#", "self", ".", "#INDENT#", "self", "=", "network_type_choices", "#INDENT#", "self"]}}
{"position": {"error_location": 24, "repair_targets": [16, 19, 28], "repair_candidates": [4, 8, 43, 49, 51, 54, 56, 62, 65, 70, 73, 77, 81, 24, 101, 103, 106, 11, 18, 95, 100, 109, 118, 3, 7, 14, 37, 39, 16, 19, 28, 9, 12, 10, 22, 31, 41, 45, 90, 58, 86, 1, 6, 30, 34, 35, 47, 60, 63, 68, 71, 75, 79, 83, 113, 116, 120, 88, 94, 107]}}
{"prediction": {"error_location": 0.8710969686508179, "repair_targets": [0.828432023525238, 5.815365511807613e-05, 0.00025745140737853944], "repair_candidates": [0.00814869161695242, 0.00592735456302762, 0.007598875090479851, 0.0022818909492343664, 0.00010140435915673152, 0.00025896314764395356, 0.003207380883395672, 0.0005087825120426714, 2.0964025679859333e-05, 2.1142797777429223e-05, 0.13198202848434448, 0.828432023525238, 3.3813106711022556e-05, 5.815365511807613e-05, 0.0001234260998899117, 3.41541126545053e-05, 0.00025745140737853944, 0.0007977683562785387, 0.0004593945050146431, 2.410637534921989e-05, 9.336515631730435e-07, 0.0001716840488370508, 0.0017196608241647482, 9.753236372489482e-05, 0.00028679752722382545, 0.00010858815221581608, 3.3169821108458564e-05, 0.00021477602422237396, 0.00017892831237986684, 1.7602807929506525e-05, 5.357618192647351e-06, 1.4691968317492865e-05, 9.956747817341238e-06, 0.0010271387873217463, 1.637129571463447e-05, 7.70694314269349e-05, 5.631268322758842e-06, 0.0006822779541835189, 2.328799746464938e-05, 0.00021303514949977398, 2.2896717837284086e-06, 0.0003151681739836931, 1.227447410201421e-05, 0.00013418146409094334, 3.0434091513598105e-06, 1.0848199963220395e-05, 0.0010325198527425528, 1.4592308616556693e-05, 0.0017528466414660215, 2.2752978111384436e-05, 0.00010404924978502095, 3.377353277755901e-05, 0.0012601648923009634, 2.07213652174687e-05, 4.8308202167390846e-06, 1.8141241525881924e-05, 6.883843184368743e-07, 4.131826244702097e-06, 3.222674422431737e-05, 3.856904004351236e-05], "target_probs": 0.8287476301193237}}


{"result": {"time": "2021-02-11 10:38:58.530878", "n_pass": [777, 105, 95], "n_token": 119, "loss": [0.10527236759662628, 0.1864738017320633], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["def __init__(", "self", ",", "request", "args", ",", "self", "request", "args", "kwargs", "tenant_choices", "tenants", "has_more", ")", "request", "for", "tenant", "in", "tenants", "tenant", "#NEWLINE#", "#INDENT#", "tenant_choices", "(", "net_type", ".", "id", ",", "tenant", "#UNINDENT#", "self", "tenant_choices", "#NEWLINE#", "#INDENT#", "self", "self", ".", "request", "(", "request", ",", "neutron_settings", "#NEWLINE#", "seg_id_range", "=", "neutron_settings", ".", "self", ".", "seg_id_range", "=", "seg_id_range", ".", ":", "seg_id_range", ":", "seg_id_range", "#NEWLINE#", "seg_id_help", "'For VLAN networks, the VLAN VID on the physical network that realizes the virtual network. Valid VLAN VIDs are %(vlan_min)s through %(vlan_max)s. For GRE or VXLAN networks, the tunnel ID. Valid tunnel IDs for GRE networks are %(gre_min)s through %(gre_max)s. For VXLAN networks, %(vxlan_min)s through %(vxlan_max)s.'", "self", ".", "seg_id_range", "self", ".", "seg_id_range", "[", ":", "self", ".", "seg_id_range", "self", ".", "seg_id_range", "#NEWLINE#", "self", ".", "seg_id_range", "[", "self", ".", "seg_id_range", "[", "self", ".", "=", "seg_id_help", "#NEWLINE#", "supported_provider_types", "=", "neutron_settings", "(", "supported_provider_types", "network_type_choices", "=", "PROVIDER_TYPES", "#NEWLINE#", "#INDENT#", "network_type_choices", "net_type", "for", "net_type", "in", "(", "net_type", "supported_provider_types", "(", "network_type_choices", ")", "#NEWLINE#", "#INDENT#", "self", ".", "#INDENT#", "self", "=", "network_type_choices", "#INDENT#", "self"]}}
{"position": {"error_location": 24, "repair_targets": [16, 19, 28], "repair_candidates": [4, 8, 43, 49, 51, 54, 56, 62, 65, 70, 73, 77, 81, 24, 99, 101, 104, 11, 18, 93, 98, 107, 116, 3, 7, 14, 37, 39, 16, 19, 28, 9, 12, 10, 22, 31, 41, 45, 90, 58, 86, 1, 6, 30, 34, 35, 47, 60, 63, 68, 71, 75, 79, 83, 111, 114, 118, 88, 92, 105]}}
{"prediction": {"error_location": 0.9000791311264038, "repair_targets": [0.829628586769104, 5.745101225329563e-05, 0.00019427348161116242], "repair_candidates": [0.007956485264003277, 0.005811323877424002, 0.0076524936594069, 0.002211938612163067, 9.882316953735426e-05, 0.0002626332570798695, 0.0033151910174638033, 0.0005068547907285392, 2.0704408598248847e-05, 2.078835677821189e-05, 0.13309958577156067, 0.829628586769104, 3.3413358323741704e-05, 5.745101225329563e-05, 0.00011395051114959642, 3.3289055863860995e-05, 0.00019427348161116242, 0.0005900216056033969, 0.0005657288711518049, 1.4688233932247385e-05, 1.3685867088497616e-06, 0.00010092068259837106, 0.0013336777919903398, 6.0154201491968706e-05, 0.00026485827402211726, 4.215216540615074e-05, 3.3148840884678066e-05, 0.00021224457304924726, 0.00017233141988981515, 1.4228045984054916e-05, 4.376755441626301e-06, 1.4464528248936404e-05, 6.719397788401693e-06, 0.0010546306148171425, 1.678378612268716e-05, 5.7545599702280015e-05, 5.508702997758519e-06, 0.0005504323053173721, 2.0688499716925435e-05, 0.00021569678210653365, 2.447446149744792e-06, 0.00025233259657397866, 1.1546477253432386e-05, 0.00010090912837767974, 4.057375463162316e-06, 1.1754274055419955e-05, 0.0010736226104199886, 6.72927635605447e-05, 0.0003584909427445382, 2.532285543566104e-05, 0.0001695763785392046, 3.528712841216475e-05, 0.0014094326179474592, 2.174447763536591e-05, 5.080389655631734e-06, 1.8586677470011637e-05, 7.645761002095242e-07, 3.822719463641988e-06, 2.6577077733236365e-05, 3.118343011010438e-05], "target_probs": 0.8298802971839905}}


{"result": {"time": "2021-02-11 10:38:58.674673", "n_pass": [780, 106, 96], "n_token": 117, "loss": [0.13162651658058167, 0.19606830179691315], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["def __init__(", "self", ",", "request", "args", ",", "self", "request", "args", "kwargs", "tenant_choices", "tenants", "has_more", ")", "request", "for", "tenant", "in", "tenants", "tenant", "#NEWLINE#", "#INDENT#", "tenant_choices", "(", "net_type", ".", "id", ",", "tenant", "#UNINDENT#", "self", "tenant_choices", "#NEWLINE#", "#INDENT#", "self", "self", ".", "request", "(", "request", ",", "neutron_settings", "#NEWLINE#", "seg_id_range", "=", "neutron_settings", ".", "self", ".", "seg_id_range", "=", "seg_id_range", ".", ":", "seg_id_range", ":", "seg_id_range", "#NEWLINE#", "seg_id_help", "'For VLAN networks, the VLAN VID on the physical network that realizes the virtual network. Valid VLAN VIDs are %(vlan_min)s through %(vlan_max)s. For GRE or VXLAN networks, the tunnel ID. Valid tunnel IDs for GRE networks are %(gre_min)s through %(gre_max)s. For VXLAN networks, %(vxlan_min)s through %(vxlan_max)s.'", "self", ".", "seg_id_range", "self", ".", "seg_id_range", "[", ":", "self", ".", "seg_id_range", "self", ".", "seg_id_range", "#NEWLINE#", "self", ".", "seg_id_range", "[", "self", ".", "seg_id_range", "[", "self", ".", "=", "seg_id_help", "#NEWLINE#", "supported_provider_types", "=", "neutron_settings", "(", "supported_provider_types", "network_type_choices", "=", "#INDENT#", "network_type_choices", "net_type", "for", "net_type", "in", "(", "net_type", "supported_provider_types", "(", "network_type_choices", ")", "#NEWLINE#", "#INDENT#", "self", ".", "#INDENT#", "self", "=", "network_type_choices", "#INDENT#", "self"]}}
{"position": {"error_location": 24, "repair_targets": [16, 19, 28], "repair_candidates": [4, 8, 43, 49, 51, 54, 56, 62, 65, 70, 73, 77, 81, 24, 97, 99, 102, 11, 18, 93, 96, 105, 114, 3, 7, 14, 37, 39, 16, 19, 28, 9, 12, 10, 22, 31, 41, 45, 90, 58, 86, 1, 6, 30, 34, 35, 47, 60, 63, 68, 71, 75, 79, 83, 109, 112, 116, 88, 92, 103]}}
{"prediction": {"error_location": 0.8766682744026184, "repair_targets": [0.8216456770896912, 6.313788617262617e-05, 0.0002473176864441484], "repair_candidates": [0.007460367865860462, 0.006509238854050636, 0.008502467535436153, 0.0022035157307982445, 0.00010480803030077368, 0.00028095036395825446, 0.003420004155486822, 0.0005547501496039331, 2.2129903300083242e-05, 2.2567946871276945e-05, 0.1362600475549698, 0.8216456770896912, 3.607083999668248e-05, 6.313788617262617e-05, 0.00011027070286218077, 3.5085537092527375e-05, 0.0002473176864441484, 0.0008832780295051634, 0.0007156046922318637, 2.5723727958393283e-05, 1.1358556548657361e-06, 0.00015622933278791606, 0.0018611608538776636, 0.00011057166557293385, 0.0003258049546275288, 0.00012911231897305697, 5.218415390118025e-05, 0.00021439885313156992, 0.0003228702407795936, 1.815165887819603e-05, 5.91562775298371e-06, 2.0369141566334292e-05, 8.050142241700087e-06, 0.0011191800003871322, 2.6180850909440778e-05, 6.909401417942718e-05, 6.9086595431144815e-06, 0.0006441643345169723, 3.308871964691207e-05, 0.0003416126419324428, 6.536909495480359e-06, 0.0002464387798681855, 2.2801177692599595e-05, 0.00012694403994828463, 4.872842964687152e-06, 1.5220454770314973e-05, 0.002612585434690118, 0.0001464372908230871, 0.0003109498939011246, 6.723742990288883e-05, 1.4122216271061916e-05, 1.5500785593758337e-05, 0.0016332552768290043, 3.672153252409771e-05, 6.657864560111193e-06, 4.4050793803762645e-05, 1.1056154107791372e-06, 8.21811227069702e-06, 4.152796827838756e-05, 6.957604637136683e-05], "target_probs": 0.8219560980796814}}


{"result": {"time": "2021-02-11 10:38:58.819094", "n_pass": [787, 107, 97], "n_token": 115, "loss": [0.09843175113201141, 0.15438511967658997], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["def __init__(", "self", ",", "request", "args", ",", "self", "request", "args", "kwargs", "tenant_choices", "tenants", "has_more", ")", "request", "for", "tenant", "in", "tenants", "tenant", "#NEWLINE#", "#INDENT#", "tenant_choices", "(", "net_type", ".", "id", ",", "tenant", "#UNINDENT#", "self", "tenant_choices", "#NEWLINE#", "#INDENT#", "self", "self", ".", "request", "(", "request", ",", "neutron_settings", "#NEWLINE#", "seg_id_range", "=", "neutron_settings", ".", "self", ".", "seg_id_range", "=", "seg_id_range", ".", ":", "seg_id_range", ":", "seg_id_range", "#NEWLINE#", "seg_id_help", "'For VLAN networks, the VLAN VID on the physical network that realizes the virtual network. Valid VLAN VIDs are %(vlan_min)s through %(vlan_max)s. For GRE or VXLAN networks, the tunnel ID. Valid tunnel IDs for GRE networks are %(gre_min)s through %(gre_max)s. For VXLAN networks, %(vxlan_min)s through %(vxlan_max)s.'", "self", ".", "seg_id_range", "self", ".", "seg_id_range", "[", ":", "self", ".", "seg_id_range", "self", ".", "seg_id_range", "#NEWLINE#", "self", ".", "seg_id_range", "[", "self", ".", "seg_id_range", "[", "self", ".", "=", "seg_id_help", "#NEWLINE#", "supported_provider_types", "=", "neutron_settings", "(", "supported_provider_types", "network_type_choices", "=", "#INDENT#", "network_type_choices", "net_type", "for", "net_type", "in", "(", "net_type", "supported_provider_types", "(", "network_type_choices", ")", "self", ".", "#INDENT#", "self", "=", "network_type_choices", "#INDENT#", "self"]}}
{"position": {"error_location": 24, "repair_targets": [16, 19, 28], "repair_candidates": [4, 8, 43, 49, 51, 54, 56, 62, 65, 70, 73, 77, 81, 24, 97, 99, 102, 11, 18, 93, 96, 105, 112, 3, 7, 14, 37, 39, 16, 19, 28, 9, 12, 10, 22, 31, 41, 45, 90, 58, 86, 1, 6, 30, 34, 35, 47, 60, 63, 68, 71, 75, 79, 83, 107, 110, 114, 88, 92, 103]}}
{"prediction": {"error_location": 0.9062574505805969, "repair_targets": [0.8567334413528442, 4.016515958937816e-05, 0.00016832964320201427], "repair_candidates": [0.005450157914310694, 0.005115474108606577, 0.0067501855082809925, 0.0018775280332192779, 8.474912465317175e-05, 0.00018879516574088484, 0.002166451420634985, 0.0003286362625658512, 1.8606246158014983e-05, 1.629739381314721e-05, 0.11490239948034286, 0.8567334413528442, 2.8255139113753103e-05, 4.016515958937816e-05, 7.480089698219672e-05, 3.005169128300622e-05, 0.00016832964320201427, 0.00032487072166986763, 0.00041924885590560734, 7.771192940708715e-06, 6.769624860680779e-07, 5.829079600516707e-05, 0.0005689589306712151, 4.957191413268447e-05, 0.00013826665235683322, 2.6274919946445152e-05, 1.679367051110603e-05, 0.00014360190834850073, 0.00013911473797634244, 7.70151564211119e-06, 3.066912540816702e-06, 8.39792028273223e-06, 3.5097095860692207e-06, 0.0006058927974663675, 1.0226610356767196e-05, 5.781428262707777e-05, 2.7926473649131367e-06, 0.00043906577047891915, 1.340375001745997e-05, 0.0002603061147965491, 1.8771634131553583e-06, 0.0002566774492152035, 1.0094800018123351e-05, 0.00010931285214610398, 3.509083853714401e-06, 1.1301651284156833e-05, 0.0007767429342493415, 5.6706056057009846e-05, 0.0001249754714081064, 1.9054801668971777e-05, 1.2133298696426209e-05, 1.1716473636624869e-05, 0.0011312849819660187, 2.5587274649296887e-05, 4.261829417373519e-06, 0.00011992841609753668, 1.6801865285742679e-06, 4.080986855115043e-06, 1.4478927369054873e-05, 2.4646778911119327e-05], "target_probs": 0.8569419384002686}}


{"result": {"time": "2021-02-11 10:38:59.103373", "n_pass": [794, 109, 98], "n_token": 114, "loss": [0.9792101383209229, 0.31957632303237915], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["def __init__(", "self", "request", "args", ",", "self", "request", "args", "kwargs", "tenant_choices", "tenants", "has_more", ")", "request", "for", "tenant", "in", "tenants", "tenant", "#NEWLINE#", "#INDENT#", "tenant_choices", "(", "net_type", ".", "id", ",", "tenant", "#UNINDENT#", "self", "tenant_choices", "#NEWLINE#", "#INDENT#", "self", "self", ".", "request", "(", "request", ",", "neutron_settings", "#NEWLINE#", "seg_id_range", "=", "neutron_settings", ".", "self", ".", "seg_id_range", "=", "seg_id_range", ".", ":", "seg_id_range", ":", "seg_id_range", "#NEWLINE#", "seg_id_help", "'For VLAN networks, the VLAN VID on the physical network that realizes the virtual network. Valid VLAN VIDs are %(vlan_min)s through %(vlan_max)s. For GRE or VXLAN networks, the tunnel ID. Valid tunnel IDs for GRE networks are %(gre_min)s through %(gre_max)s. For VXLAN networks, %(vxlan_min)s through %(vxlan_max)s.'", "self", ".", "seg_id_range", "self", ".", "seg_id_range", "[", ":", "self", ".", "seg_id_range", "self", ".", "seg_id_range", "#NEWLINE#", "self", ".", "seg_id_range", "[", "self", ".", "seg_id_range", "[", "self", ".", "=", "seg_id_help", "#NEWLINE#", "supported_provider_types", "=", "neutron_settings", "(", "supported_provider_types", "network_type_choices", "=", "#INDENT#", "network_type_choices", "net_type", "for", "net_type", "in", "(", "net_type", "supported_provider_types", "(", "network_type_choices", ")", "self", ".", "#INDENT#", "self", "=", "network_type_choices", "#INDENT#", "self"]}}
{"position": {"error_location": 23, "repair_targets": [15, 18, 27], "repair_candidates": [3, 7, 42, 48, 50, 53, 55, 61, 64, 69, 72, 76, 80, 23, 96, 98, 101, 10, 17, 92, 95, 104, 111, 2, 6, 13, 36, 38, 15, 18, 27, 8, 11, 9, 21, 30, 40, 44, 89, 57, 85, 1, 5, 29, 33, 34, 46, 59, 62, 67, 70, 74, 78, 82, 106, 109, 113, 87, 91, 102]}}
{"prediction": {"error_location": 0.3756076395511627, "repair_targets": [0.7259587645530701, 3.8508700527017936e-05, 0.0004595133650582284], "repair_candidates": [0.006043503526598215, 0.04636729881167412, 0.08653715252876282, 0.001438527600839734, 0.00048682003398425877, 0.0008644118206575513, 0.00856627244502306, 0.0006652657757513225, 4.0983544749906287e-05, 2.135088107024785e-05, 0.055392201989889145, 0.7259587645530701, 2.6476845960132778e-05, 3.8508700527017936e-05, 0.00020729430252686143, 0.00010334496619179845, 0.0004595133650582284, 0.0014713063137605786, 0.004206199198961258, 6.43556413706392e-05, 3.77371452486841e-06, 0.0002836353669408709, 0.010314480401575565, 0.0007021233905106783, 0.002569967182353139, 0.0003396477841306478, 0.0001834845170378685, 0.0007718244451098144, 0.0024178228341042995, 5.1296512538101524e-05, 1.700718712527305e-05, 7.322827877942473e-05, 1.5950055967550725e-05, 0.004177326802164316, 6.544151256093755e-05, 0.000331521121552214, 1.8274851754540578e-05, 0.002856152830645442, 0.00010801722237374634, 0.001345358556136489, 1.2661106666200794e-05, 0.0015770555473864079, 4.685599560616538e-05, 0.0005885065183974802, 1.7034471966326237e-05, 6.0517901147250086e-05, 0.016094397753477097, 0.0004194487992208451, 0.001510141883045435, 0.0001910323917400092, 7.967645797180012e-05, 0.00010212937922915444, 0.011824561282992363, 0.00019862577028106898, 4.706823892774992e-05, 0.0011386984260752797, 8.379404789593536e-06, 2.4449065676890314e-05, 0.00011189399083377793, 0.0003410493372939527], "target_probs": 0.7264567613601685}}


{"result": {"time": "2021-02-11 10:38:59.244336", "n_pass": [797, 110, 99], "n_token": 113, "loss": [0.0008890252211131155, 0.46384263038635254], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["def __init__(", "self", "request", "args", "self", "request", "args", "kwargs", "tenant_choices", "tenants", "has_more", ")", "request", "for", "tenant", "in", "tenants", "tenant", "#NEWLINE#", "#INDENT#", "tenant_choices", "(", "net_type", ".", "id", ",", "tenant", "#UNINDENT#", "self", "tenant_choices", "#NEWLINE#", "#INDENT#", "self", "self", ".", "request", "(", "request", ",", "neutron_settings", "#NEWLINE#", "seg_id_range", "=", "neutron_settings", ".", "self", ".", "seg_id_range", "=", "seg_id_range", ".", ":", "seg_id_range", ":", "seg_id_range", "#NEWLINE#", "seg_id_help", "'For VLAN networks, the VLAN VID on the physical network that realizes the virtual network. Valid VLAN VIDs are %(vlan_min)s through %(vlan_max)s. For GRE or VXLAN networks, the tunnel ID. Valid tunnel IDs for GRE networks are %(gre_min)s through %(gre_max)s. For VXLAN networks, %(vxlan_min)s through %(vxlan_max)s.'", "self", ".", "seg_id_range", "self", ".", "seg_id_range", "[", ":", "self", ".", "seg_id_range", "self", ".", "seg_id_range", "#NEWLINE#", "self", ".", "seg_id_range", "[", "self", ".", "seg_id_range", "[", "self", ".", "=", "seg_id_help", "#NEWLINE#", "supported_provider_types", "=", "neutron_settings", "(", "supported_provider_types", "network_type_choices", "=", "#INDENT#", "network_type_choices", "net_type", "for", "net_type", "in", "(", "net_type", "supported_provider_types", "(", "network_type_choices", ")", "self", ".", "#INDENT#", "self", "=", "network_type_choices", "#INDENT#", "self"]}}
{"position": {"error_location": 22, "repair_targets": [14, 17, 26], "repair_candidates": [3, 6, 41, 47, 49, 52, 54, 60, 63, 68, 71, 75, 79, 22, 95, 97, 100, 9, 16, 91, 94, 103, 110, 2, 5, 12, 35, 37, 14, 17, 26, 7, 10, 8, 20, 29, 39, 43, 88, 56, 84, 1, 4, 28, 32, 33, 45, 58, 61, 66, 69, 73, 77, 81, 105, 108, 112, 86, 90, 101]}}
{"prediction": {"error_location": 0.9991113543510437, "repair_targets": [0.6287320852279663, 1.897770562209189e-05, 0.0001114441838581115], "repair_candidates": [0.0025033021811395884, 0.06916069239377975, 0.008629526942968369, 0.008035981096327305, 0.0011614677496254444, 0.0002553229278419167, 0.00037586558028124273, 6.0562382714124396e-05, 9.28107874642592e-06, 8.38458799989894e-06, 0.27920031547546387, 0.6287320852279663, 5.144209808349842e-06, 1.897770562209189e-05, 2.58620384556707e-05, 1.2363028872641735e-05, 0.0001114441838581115, 0.0002024881396209821, 0.00019526614050846547, 2.1722996734752087e-06, 2.630038693496317e-07, 2.7936450351262465e-05, 0.00010288036719430238, 2.1518468201975338e-05, 2.56093389907619e-05, 4.992700269212946e-06, 7.929545972729102e-06, 5.685929863830097e-05, 3.669522993732244e-05, 5.461525233840803e-06, 2.4999462766572833e-06, 2.9192538022471126e-06, 1.1217789506190456e-06, 0.0001996566861635074, 2.8278466288611526e-06, 2.3962767954799347e-05, 1.92492370842956e-06, 0.0001308315695496276, 3.712323405125062e-06, 0.00010029578697867692, 1.1704594271577662e-06, 5.8996858570026234e-05, 4.572955731418915e-06, 2.4844301151460968e-05, 1.582505319674965e-06, 6.06715502726729e-06, 0.00010219225805485621, 2.0084367861272767e-05, 6.251195736695081e-05, 7.657579772057943e-06, 5.20665480507887e-06, 4.5279020923771895e-06, 0.00017094505892600864, 1.140257063525496e-05, 1.7782252825782052e-06, 3.557343006832525e-05, 1.1166439435328357e-06, 1.3385485999606317e-06, 5.855161361978389e-06, 6.241744813451078e-06], "target_probs": 0.6288625001907349}}


{"result": {"time": "2021-02-11 10:38:59.387736", "n_pass": [805, 111, 100], "n_token": 112, "loss": [0.0018482997547835112, 0.0768778920173645], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["def __init__(", "self", "request", "args", "self", "request", "args", "kwargs", "tenant_choices", "tenants", "has_more", "request", "for", "tenant", "in", "tenants", "tenant", "#NEWLINE#", "#INDENT#", "tenant_choices", "(", "net_type", ".", "id", ",", "tenant", "#UNINDENT#", "self", "tenant_choices", "#NEWLINE#", "#INDENT#", "self", "self", ".", "request", "(", "request", ",", "neutron_settings", "#NEWLINE#", "seg_id_range", "=", "neutron_settings", ".", "self", ".", "seg_id_range", "=", "seg_id_range", ".", ":", "seg_id_range", ":", "seg_id_range", "#NEWLINE#", "seg_id_help", "'For VLAN networks, the VLAN VID on the physical network that realizes the virtual network. Valid VLAN VIDs are %(vlan_min)s through %(vlan_max)s. For GRE or VXLAN networks, the tunnel ID. Valid tunnel IDs for GRE networks are %(gre_min)s through %(gre_max)s. For VXLAN networks, %(vxlan_min)s through %(vxlan_max)s.'", "self", ".", "seg_id_range", "self", ".", "seg_id_range", "[", ":", "self", ".", "seg_id_range", "self", ".", "seg_id_range", "#NEWLINE#", "self", ".", "seg_id_range", "[", "self", ".", "seg_id_range", "[", "self", ".", "=", "seg_id_help", "#NEWLINE#", "supported_provider_types", "=", "neutron_settings", "(", "supported_provider_types", "network_type_choices", "=", "#INDENT#", "network_type_choices", "net_type", "for", "net_type", "in", "(", "net_type", "supported_provider_types", "(", "network_type_choices", ")", "self", ".", "#INDENT#", "self", "=", "network_type_choices", "#INDENT#", "self"]}}
{"position": {"error_location": 21, "repair_targets": [13, 16, 25], "repair_candidates": [3, 6, 40, 46, 48, 51, 53, 59, 62, 67, 70, 74, 78, 21, 94, 96, 99, 9, 15, 90, 93, 102, 109, 2, 5, 11, 34, 36, 13, 16, 25, 7, 10, 8, 19, 28, 38, 42, 87, 55, 83, 1, 4, 27, 31, 32, 44, 57, 60, 65, 68, 72, 76, 80, 104, 107, 111, 85, 89, 100]}}
{"prediction": {"error_location": 0.9981533885002136, "repair_targets": [0.9258754849433899, 2.975570532726124e-05, 9.768417658051476e-05], "repair_candidates": [0.0017966313753277063, 0.04506899043917656, 0.008652457036077976, 0.008490240201354027, 0.0012675683246925473, 0.0002766553370747715, 0.0003381212009117007, 3.5028402635362e-05, 2.1666797692887485e-05, 9.777327795745805e-05, 0.006376658566296101, 0.9258754849433899, 1.289120609726524e-05, 2.975570532726124e-05, 2.301229142176453e-05, 1.2419541235431097e-05, 9.768417658051476e-05, 0.0001374776184093207, 0.00019114637689199299, 3.0050046007090714e-06, 3.077646510973864e-07, 1.662601607677061e-05, 8.880955283530056e-05, 1.571894608787261e-05, 2.257240157632623e-05, 3.158846084261313e-06, 3.862161065626424e-06, 4.743515819427557e-05, 2.212034451076761e-05, 4.639537564798957e-06, 2.0241132006049156e-06, 2.1738026134698885e-06, 1.258744987353566e-06, 0.00022870463726576418, 2.667786247911863e-06, 2.196648347307928e-05, 1.912171228468651e-06, 0.0001395537838106975, 2.3225657059811056e-06, 8.390640141442418e-05, 9.62357717071427e-07, 5.912145570619032e-05, 3.519060555845499e-06, 2.5510256818961352e-05, 1.6399586684201495e-06, 5.866949777555419e-06, 5.842715108883567e-05, 1.5675279428251088e-05, 6.385484448401257e-05, 7.185582035162952e-06, 4.507089670369169e-06, 3.6978578918933636e-06, 0.00017585366731509566, 1.0301660950062796e-05, 1.494571392868238e-06, 3.320001269457862e-05, 9.577888704370707e-07, 1.1415438621042995e-06, 5.33632328370004e-06, 5.322179276845418e-06], "target_probs": 0.9260029196739197}}


{"result": {"time": "2021-02-11 10:38:59.529332", "n_pass": [812, 112, 101], "n_token": 110, "loss": [0.02302529476583004, 0.009950327686965466], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["def __init__(", "self", "request", "args", "self", "request", "args", "kwargs", "tenant_choices", "tenants", "has_more", "request", "for", "tenant", "in", "tenants", "tenant", "#NEWLINE#", "#INDENT#", "tenant_choices", "(", "net_type", ",", "tenant", "#UNINDENT#", "self", "tenant_choices", "#NEWLINE#", "#INDENT#", "self", "self", ".", "request", "(", "request", ",", "neutron_settings", "#NEWLINE#", "seg_id_range", "=", "neutron_settings", ".", "self", ".", "seg_id_range", "=", "seg_id_range", ".", ":", "seg_id_range", ":", "seg_id_range", "#NEWLINE#", "seg_id_help", "'For VLAN networks, the VLAN VID on the physical network that realizes the virtual network. Valid VLAN VIDs are %(vlan_min)s through %(vlan_max)s. For GRE or VXLAN networks, the tunnel ID. Valid tunnel IDs for GRE networks are %(gre_min)s through %(gre_max)s. For VXLAN networks, %(vxlan_min)s through %(vxlan_max)s.'", "self", ".", "seg_id_range", "self", ".", "seg_id_range", "[", ":", "self", ".", "seg_id_range", "self", ".", "seg_id_range", "#NEWLINE#", "self", ".", "seg_id_range", "[", "self", ".", "seg_id_range", "[", "self", ".", "=", "seg_id_help", "#NEWLINE#", "supported_provider_types", "=", "neutron_settings", "(", "supported_provider_types", "network_type_choices", "=", "#INDENT#", "network_type_choices", "net_type", "for", "net_type", "in", "(", "net_type", "supported_provider_types", "(", "network_type_choices", ")", "self", ".", "#INDENT#", "self", "=", "network_type_choices", "#INDENT#", "self"]}}
{"position": {"error_location": 21, "repair_targets": [13, 16, 23], "repair_candidates": [3, 6, 38, 44, 46, 49, 51, 57, 60, 65, 68, 72, 76, 21, 92, 94, 97, 9, 15, 88, 91, 100, 107, 2, 5, 11, 32, 34, 13, 16, 23, 7, 10, 8, 19, 26, 36, 40, 85, 53, 81, 1, 4, 25, 29, 30, 42, 55, 58, 63, 66, 70, 74, 78, 102, 105, 109, 83, 87, 98]}}
{"prediction": {"error_location": 0.9772377610206604, "repair_targets": [0.9900348782539368, 2.6470266675460152e-05, 3.763737186091021e-05], "repair_candidates": [0.00012778468953911215, 0.0032434125896543264, 0.00112163124140352, 5.1106926548527554e-05, 0.0012890058569610119, 0.0007015886367298663, 0.0005122863221913576, 5.5865151807665825e-05, 1.6814217815408483e-05, 5.1360169891268015e-05, 0.0011891815811395645, 0.9900348782539368, 3.079936868743971e-05, 2.6470266675460152e-05, 1.6169025911949575e-05, 6.077957095840247e-06, 3.763737186091021e-05, 3.584105797926895e-05, 4.729891588794999e-05, 6.472429276982439e-07, 1.5165596778388135e-07, 1.1104365512437653e-05, 0.0001218689649249427, 1.2139133104938082e-05, 3.541133992257528e-05, 4.631995579984505e-06, 5.423486527433852e-06, 4.466774771572091e-05, 1.4854223991278559e-05, 3.6765452477993676e-06, 1.711057279862871e-06, 2.5354822810186306e-06, 1.0219839623459848e-06, 0.0001840259210439399, 2.5072051812458085e-06, 1.9413417248870246e-05, 1.5345265182986623e-06, 0.00014034175546839833, 3.929268132196739e-06, 7.170368917286396e-05, 7.907876806712011e-07, 7.60084149078466e-05, 3.85321754947654e-06, 3.409969576750882e-05, 1.6420198107880424e-06, 3.891439519065898e-06, 0.00013444942305795848, 1.408843763783807e-05, 6.0897211369592696e-05, 7.4101853897445835e-06, 4.454763256944716e-06, 4.463634013518458e-06, 0.0003034421824850142, 1.2516972674347926e-05, 1.9314425117045175e-06, 4.2255538573954254e-05, 1.0302550208507455e-06, 1.522346678939357e-06, 5.112898179504555e-06, 7.659136826987378e-06], "target_probs": 0.9900990128517151}}


{"result": {"time": "2021-02-11 10:38:59.677927", "n_pass": [857, 113, 102], "n_token": 109, "loss": [0.31362900137901306, 0.020232003182172775], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["self", "request", "args", "self", "request", "args", "kwargs", "tenant_choices", "tenants", "has_more", "request", "for", "tenant", "in", "tenants", "tenant", "#NEWLINE#", "#INDENT#", "tenant_choices", "(", "net_type", ",", "tenant", "#UNINDENT#", "self", "tenant_choices", "#NEWLINE#", "#INDENT#", "self", "self", ".", "request", "(", "request", ",", "neutron_settings", "#NEWLINE#", "seg_id_range", "=", "neutron_settings", ".", "self", ".", "seg_id_range", "=", "seg_id_range", ".", ":", "seg_id_range", ":", "seg_id_range", "#NEWLINE#", "seg_id_help", "'For VLAN networks, the VLAN VID on the physical network that realizes the virtual network. Valid VLAN VIDs are %(vlan_min)s through %(vlan_max)s. For GRE or VXLAN networks, the tunnel ID. Valid tunnel IDs for GRE networks are %(gre_min)s through %(gre_max)s. For VXLAN networks, %(vxlan_min)s through %(vxlan_max)s.'", "self", ".", "seg_id_range", "self", ".", "seg_id_range", "[", ":", "self", ".", "seg_id_range", "self", ".", "seg_id_range", "#NEWLINE#", "self", ".", "seg_id_range", "[", "self", ".", "seg_id_range", "[", "self", ".", "=", "seg_id_help", "#NEWLINE#", "supported_provider_types", "=", "neutron_settings", "(", "supported_provider_types", "network_type_choices", "=", "#INDENT#", "network_type_choices", "net_type", "for", "net_type", "in", "(", "net_type", "supported_provider_types", "(", "network_type_choices", ")", "self", ".", "#INDENT#", "self", "=", "network_type_choices", "#INDENT#", "self"]}}
{"position": {"error_location": 20, "repair_targets": [12, 15, 22], "repair_candidates": [2, 5, 37, 43, 45, 48, 50, 56, 59, 64, 67, 71, 75, 20, 91, 93, 96, 8, 14, 87, 90, 99, 106, 1, 4, 10, 31, 33, 12, 15, 22, 6, 9, 7, 18, 25, 35, 39, 84, 52, 80, 0, 3, 24, 28, 29, 41, 54, 57, 62, 65, 69, 73, 77, 101, 104, 108, 82, 86, 97]}}
{"prediction": {"error_location": 0.7307901382446289, "repair_targets": [0.9797937273979187, 5.280118784867227e-05, 0.0001247744366992265], "repair_candidates": [0.0015345753636211157, 0.001583069795742631, 0.0023843899834901094, 0.00012563582276925445, 0.0033762301318347454, 0.0005893547786399722, 0.0009864122839644551, 0.00020121189299970865, 5.8440567954676226e-05, 0.00020853083697147667, 0.0033170608803629875, 0.9797937273979187, 6.258097710087895e-05, 5.280118784867227e-05, 3.629751154221594e-05, 1.932760642375797e-05, 0.0001247744366992265, 0.00010965855472022668, 0.0001377444132231176, 3.6805788568017306e-06, 3.839071496258839e-07, 7.160158565966412e-05, 0.0006324445712380111, 6.397784454748034e-05, 0.00014484775601886213, 4.470788553589955e-05, 1.3647857485921122e-05, 9.484429028816521e-05, 2.6717236323747784e-05, 6.523319370899117e-06, 3.161506356263999e-06, 5.800344752060482e-06, 4.2584042603266425e-06, 0.0004573566257022321, 7.625384569109883e-06, 4.952795643475838e-05, 3.2138480037247064e-06, 0.0003726439317688346, 1.1640147931757383e-05, 0.0001400162000209093, 1.5636329635526636e-06, 0.00021140101307537407, 1.0640362233971246e-05, 9.098602458834648e-05, 3.031950654985849e-06, 8.437833457719535e-06, 0.0008971827919594944, 3.510286842356436e-05, 0.0001744395267451182, 2.0795103409909643e-05, 9.14428528631106e-06, 8.894528036762495e-06, 0.0014585905009880662, 2.6318150048609823e-05, 4.983096005162224e-06, 0.0001377589942421764, 1.8555854239821201e-06, 2.8749000193784013e-06, 1.3276616300572641e-05, 2.2232876290217973e-05], "target_probs": 0.9799712896347046}}


{"result": {"time": "2021-02-11 10:39:00.109799", "n_pass": [1021, 116, 103], "n_token": 108, "loss": [0.6905983686447144, 0.01454696524888277], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["self", "request", "args", "self", "request", "args", "kwargs", "tenant_choices", "tenants", "has_more", "request", "for", "tenant", "in", "tenants", "tenant", "#INDENT#", "tenant_choices", "(", "net_type", ",", "tenant", "#UNINDENT#", "self", "tenant_choices", "#NEWLINE#", "#INDENT#", "self", "self", ".", "request", "(", "request", ",", "neutron_settings", "#NEWLINE#", "seg_id_range", "=", "neutron_settings", ".", "self", ".", "seg_id_range", "=", "seg_id_range", ".", ":", "seg_id_range", ":", "seg_id_range", "#NEWLINE#", "seg_id_help", "'For VLAN networks, the VLAN VID on the physical network that realizes the virtual network. Valid VLAN VIDs are %(vlan_min)s through %(vlan_max)s. For GRE or VXLAN networks, the tunnel ID. Valid tunnel IDs for GRE networks are %(gre_min)s through %(gre_max)s. For VXLAN networks, %(vxlan_min)s through %(vxlan_max)s.'", "self", ".", "seg_id_range", "self", ".", "seg_id_range", "[", ":", "self", ".", "seg_id_range", "self", ".", "seg_id_range", "#NEWLINE#", "self", ".", "seg_id_range", "[", "self", ".", "seg_id_range", "[", "self", ".", "=", "seg_id_help", "#NEWLINE#", "supported_provider_types", "=", "neutron_settings", "(", "supported_provider_types", "network_type_choices", "=", "#INDENT#", "network_type_choices", "net_type", "for", "net_type", "in", "(", "net_type", "supported_provider_types", "(", "network_type_choices", ")", "self", ".", "#INDENT#", "self", "=", "network_type_choices", "#INDENT#", "self"]}}
{"position": {"error_location": 19, "repair_targets": [12, 15, 21], "repair_candidates": [2, 5, 36, 42, 44, 47, 49, 55, 58, 63, 66, 70, 74, 19, 90, 92, 95, 8, 14, 86, 89, 98, 105, 1, 4, 10, 30, 32, 12, 15, 21, 6, 9, 7, 17, 24, 34, 38, 83, 51, 79, 0, 3, 23, 27, 28, 40, 53, 56, 61, 64, 68, 72, 76, 100, 103, 107, 81, 85, 96]}}
{"prediction": {"error_location": 0.5012759566307068, "repair_targets": [0.9854674935340881, 3.3408126910217106e-05, 5.745401358581148e-05], "repair_candidates": [0.0008161728037521243, 0.0010920619824901223, 0.0017586597241461277, 0.00012683517707046121, 0.00267324922606349, 0.0001928197016241029, 0.00036557787097990513, 8.169795910362154e-05, 2.4163602574844845e-05, 0.00011097081005573273, 0.004212045576423407, 0.9854674935340881, 9.198201951221563e-06, 3.3408126910217106e-05, 8.408178109675646e-05, 4.617556896846509e-06, 5.745401358581148e-05, 5.207410504226573e-05, 6.160583870951086e-05, 3.027586672033067e-06, 3.0020936492292094e-07, 2.7226693418924697e-05, 0.000210598052944988, 1.2288661309867166e-05, 0.00012241343210916966, 3.2452451705466956e-05, 1.0195103641308378e-05, 5.754290395998396e-05, 6.559755547641544e-06, 2.3006275569059653e-06, 1.2223669045852148e-06, 3.938029294658918e-06, 2.9293094030435896e-06, 0.00032431798172183335, 6.4712744460848626e-06, 1.8077140339300968e-05, 2.3997142761800205e-06, 0.00023227307246997952, 7.82513598096557e-06, 6.59069191897288e-05, 1.4207749927663826e-06, 6.208926060935482e-05, 7.919657036836725e-06, 4.280403663869947e-05, 1.8998044879481313e-06, 2.466763362463098e-06, 0.00044446653919294477, 2.0443372704903595e-05, 6.084852429921739e-05, 1.101204088627128e-05, 4.647505647881189e-06, 3.7825961953785736e-06, 0.0008565335883758962, 1.2374228390399367e-05, 2.7048829451814527e-06, 6.773186032660306e-05, 1.2333764516370138e-06, 1.7850549056674936e-06, 6.210521405591862e-06, 1.3231850971351378e-05], "target_probs": 0.9855583310127258}}


{"result": {"time": "2021-02-11 10:39:00.249244", "n_pass": [1022, 117, 104], "n_token": 107, "loss": [0.47872287034988403, 0.0210160743445158], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["self", "request", "args", "self", "request", "args", "kwargs", "tenant_choices", "tenants", "has_more", "request", "for", "tenant", "in", "tenants", "tenant", "tenant_choices", "(", "net_type", ",", "tenant", "#UNINDENT#", "self", "tenant_choices", "#NEWLINE#", "#INDENT#", "self", "self", ".", "request", "(", "request", ",", "neutron_settings", "#NEWLINE#", "seg_id_range", "=", "neutron_settings", ".", "self", ".", "seg_id_range", "=", "seg_id_range", ".", ":", "seg_id_range", ":", "seg_id_range", "#NEWLINE#", "seg_id_help", "'For VLAN networks, the VLAN VID on the physical network that realizes the virtual network. Valid VLAN VIDs are %(vlan_min)s through %(vlan_max)s. For GRE or VXLAN networks, the tunnel ID. Valid tunnel IDs for GRE networks are %(gre_min)s through %(gre_max)s. For VXLAN networks, %(vxlan_min)s through %(vxlan_max)s.'", "self", ".", "seg_id_range", "self", ".", "seg_id_range", "[", ":", "self", ".", "seg_id_range", "self", ".", "seg_id_range", "#NEWLINE#", "self", ".", "seg_id_range", "[", "self", ".", "seg_id_range", "[", "self", ".", "=", "seg_id_help", "#NEWLINE#", "supported_provider_types", "=", "neutron_settings", "(", "supported_provider_types", "network_type_choices", "=", "#INDENT#", "network_type_choices", "net_type", "for", "net_type", "in", "(", "net_type", "supported_provider_types", "(", "network_type_choices", ")", "self", ".", "#INDENT#", "self", "=", "network_type_choices", "#INDENT#", "self"]}}
{"position": {"error_location": 18, "repair_targets": [12, 15, 20], "repair_candidates": [2, 5, 35, 41, 43, 46, 48, 54, 57, 62, 65, 69, 73, 18, 89, 91, 94, 8, 14, 85, 88, 97, 104, 1, 4, 10, 29, 31, 12, 15, 20, 6, 9, 7, 16, 23, 33, 37, 82, 50, 78, 0, 3, 22, 26, 27, 39, 52, 55, 60, 63, 67, 71, 75, 99, 102, 106, 80, 84, 95]}}
{"prediction": {"error_location": 0.6195741891860962, "repair_targets": [0.9790498614311218, 3.18697166221682e-05, 0.00012144633365096524], "repair_candidates": [0.0012101813917979598, 0.0018307942664250731, 0.0031417421996593475, 0.00025072446442209184, 0.0040189302526414394, 0.00025248955353163183, 0.0004902555956505239, 0.00011210942466277629, 2.959937228297349e-05, 0.0001412780547980219, 0.004672148730605841, 0.9790498614311218, 6.575853149115574e-06, 3.18697166221682e-05, 0.00015216432802844793, 9.273378054786008e-06, 0.00012144633365096524, 9.79772667051293e-05, 0.00010641825065249577, 4.15710792367463e-06, 4.209153701140167e-07, 4.9158072215504944e-05, 0.0006327260634861887, 2.2862808691570535e-05, 0.00022181500389706343, 2.7872807550011203e-05, 1.9901568521163426e-05, 7.249118789331988e-05, 1.2465538929973263e-05, 3.2162108709599124e-06, 1.5084086726346868e-06, 5.170200893189758e-06, 2.9896698379161535e-06, 0.00040742786950431764, 5.803541171189863e-06, 2.7737016353057697e-05, 2.691050895009539e-06, 0.0002720939228311181, 9.727902579470538e-06, 0.00011332669964758679, 2.538050011935411e-06, 0.00013430556282401085, 8.96922756510321e-06, 7.247121538966894e-05, 2.929932406914304e-06, 4.347646608948708e-06, 0.0006166535895317793, 2.8217507860972546e-05, 8.839057409204543e-05, 1.540608900540974e-05, 7.41177882446209e-06, 6.369288257701555e-06, 0.0012038303539156914, 1.9112778318230994e-05, 4.004910806543194e-06, 0.00011002619430655614, 1.7595453982721665e-06, 2.364852207392687e-06, 1.0025860319728963e-05, 1.945373514899984e-05], "target_probs": 0.9792032241821289}}


{"result": {"time": "2021-02-11 10:39:00.663161", "n_pass": [1028, 120, 105], "n_token": 106, "loss": [0.6307355761528015, 0.0188759658485651], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["self", "request", "args", "self", "request", "args", "kwargs", "tenant_choices", "tenants", "has_more", "request", "for", "tenant", "in", "tenants", "tenant", "tenant_choices", "(", "net_type", ",", "tenant", "self", "tenant_choices", "#NEWLINE#", "#INDENT#", "self", "self", ".", "request", "(", "request", ",", "neutron_settings", "#NEWLINE#", "seg_id_range", "=", "neutron_settings", ".", "self", ".", "seg_id_range", "=", "seg_id_range", ".", ":", "seg_id_range", ":", "seg_id_range", "#NEWLINE#", "seg_id_help", "'For VLAN networks, the VLAN VID on the physical network that realizes the virtual network. Valid VLAN VIDs are %(vlan_min)s through %(vlan_max)s. For GRE or VXLAN networks, the tunnel ID. Valid tunnel IDs for GRE networks are %(gre_min)s through %(gre_max)s. For VXLAN networks, %(vxlan_min)s through %(vxlan_max)s.'", "self", ".", "seg_id_range", "self", ".", "seg_id_range", "[", ":", "self", ".", "seg_id_range", "self", ".", "seg_id_range", "#NEWLINE#", "self", ".", "seg_id_range", "[", "self", ".", "seg_id_range", "[", "self", ".", "=", "seg_id_help", "#NEWLINE#", "supported_provider_types", "=", "neutron_settings", "(", "supported_provider_types", "network_type_choices", "=", "#INDENT#", "network_type_choices", "net_type", "for", "net_type", "in", "(", "net_type", "supported_provider_types", "(", "network_type_choices", ")", "self", ".", "#INDENT#", "self", "=", "network_type_choices", "#INDENT#", "self"]}}
{"position": {"error_location": 18, "repair_targets": [12, 15, 20], "repair_candidates": [2, 5, 34, 40, 42, 45, 47, 53, 56, 61, 64, 68, 72, 18, 88, 90, 93, 8, 14, 84, 87, 96, 103, 1, 4, 10, 28, 30, 12, 15, 20, 6, 9, 7, 16, 22, 32, 36, 81, 49, 77, 0, 3, 21, 25, 26, 38, 51, 54, 59, 62, 66, 70, 74, 98, 101, 105, 79, 83, 94]}}
{"prediction": {"error_location": 0.5322001576423645, "repair_targets": [0.9812086820602417, 2.2468217139248736e-05, 6.992647831793875e-05], "repair_candidates": [0.0006897665443830192, 0.0013815356651321054, 0.0029150608461350203, 0.00011842780804727226, 0.0030123800970613956, 0.00015914894174784422, 0.0003895290137734264, 0.00013050896814092994, 2.3405886167893186e-05, 0.0001547897409182042, 0.007135636638849974, 0.9812086820602417, 3.697674401337281e-06, 2.2468217139248736e-05, 0.00018663676746655256, 4.440007160155801e-06, 6.992647831793875e-05, 9.66312836681027e-06, 8.556404281989671e-06, 1.8007575590672786e-06, 1.4336976050799422e-07, 2.653125011420343e-05, 0.0001787933724699542, 1.0274923624820076e-05, 5.4503369028680027e-05, 1.14528129415703e-05, 7.95107553130947e-06, 4.399298268253915e-05, 1.271848759643035e-05, 2.832435484378948e-06, 1.4277003401730326e-06, 2.9749812711088452e-06, 2.4963778741948772e-06, 0.00033808156149461865, 5.33751381226466e-06, 1.785312451829668e-05, 1.8248100559503655e-06, 0.0001913327578222379, 5.741244422097225e-06, 6.941168976482004e-05, 1.3038618362770649e-06, 6.67872664052993e-05, 4.423730842972873e-06, 4.164436904829927e-05, 1.6832995015647612e-06, 2.9076879854983417e-06, 0.00038660658174194396, 1.545629493193701e-05, 5.952193168923259e-05, 8.489452739013359e-06, 5.260760644887341e-06, 4.3325867409294005e-06, 0.0006896929116919637, 1.1608687600528356e-05, 2.406108933428186e-06, 6.398383993655443e-05, 1.1179162129337783e-06, 1.4629628140028217e-06, 6.182926881592721e-06, 1.3457879504130688e-05], "target_probs": 0.9813010692596436}}


{"result": {"time": "2021-02-11 10:39:00.938109", "n_pass": [1032, 122, 106], "n_token": 105, "loss": [0.5659537315368652, 0.017315244302153587], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["self", "request", "args", "self", "request", "args", "kwargs", "tenant_choices", "tenants", "has_more", "request", "for", "tenant", "in", "tenants", "tenant", "tenant_choices", "(", "net_type", ",", "tenant", "self", "tenant_choices", "#NEWLINE#", "self", "self", ".", "request", "(", "request", ",", "neutron_settings", "#NEWLINE#", "seg_id_range", "=", "neutron_settings", ".", "self", ".", "seg_id_range", "=", "seg_id_range", ".", ":", "seg_id_range", ":", "seg_id_range", "#NEWLINE#", "seg_id_help", "'For VLAN networks, the VLAN VID on the physical network that realizes the virtual network. Valid VLAN VIDs are %(vlan_min)s through %(vlan_max)s. For GRE or VXLAN networks, the tunnel ID. Valid tunnel IDs for GRE networks are %(gre_min)s through %(gre_max)s. For VXLAN networks, %(vxlan_min)s through %(vxlan_max)s.'", "self", ".", "seg_id_range", "self", ".", "seg_id_range", "[", ":", "self", ".", "seg_id_range", "self", ".", "seg_id_range", "#NEWLINE#", "self", ".", "seg_id_range", "[", "self", ".", "seg_id_range", "[", "self", ".", "=", "seg_id_help", "#NEWLINE#", "supported_provider_types", "=", "neutron_settings", "(", "supported_provider_types", "network_type_choices", "=", "#INDENT#", "network_type_choices", "net_type", "for", "net_type", "in", "(", "net_type", "supported_provider_types", "(", "network_type_choices", ")", "self", ".", "#INDENT#", "self", "=", "network_type_choices", "#INDENT#", "self"]}}
{"position": {"error_location": 18, "repair_targets": [12, 15, 20], "repair_candidates": [2, 5, 33, 39, 41, 44, 46, 52, 55, 60, 63, 67, 71, 18, 87, 89, 92, 8, 14, 83, 86, 95, 102, 1, 4, 10, 27, 29, 12, 15, 20, 6, 9, 7, 16, 22, 31, 35, 80, 48, 76, 0, 3, 21, 24, 25, 37, 50, 53, 58, 61, 65, 69, 73, 97, 100, 104, 78, 82, 93]}}
{"prediction": {"error_location": 0.567818284034729, "repair_targets": [0.9827578663825989, 2.0040599338244647e-05, 5.590497676166706e-05], "repair_candidates": [0.0005065120058134198, 0.0011011871974915266, 0.002562719862908125, 9.678407514002174e-05, 0.0023518824018538, 0.0001242163561983034, 0.00033805164275690913, 0.00012500937737058848, 2.066613160423003e-05, 0.00015262966917362064, 0.007974927313625813, 0.9827578663825989, 3.0753985811315943e-06, 2.0040599338244647e-05, 0.00016868032980710268, 3.316253923912882e-06, 5.590497676166706e-05, 7.484926754841581e-06, 8.81000050867442e-06, 1.5996686215657974e-06, 6.63571100290028e-08, 3.436328552197665e-05, 0.00013817929720971733, 8.248956874012947e-06, 2.7012052669306286e-05, 1.79864600795554e-05, 6.284974915615749e-06, 3.5430097341304645e-05, 5.601632437901571e-06, 1.955731704583741e-06, 1.0154992651223438e-06, 2.12407667277148e-06, 1.474766577302944e-06, 0.00020376656902953982, 3.5896568988391664e-06, 1.6203965060412884e-05, 1.5060653595355689e-06, 0.00015132554108276963, 4.367763722257223e-06, 4.492194057093002e-05, 7.984164653862535e-07, 5.6390217650914565e-05, 2.9351281227718573e-06, 3.2484836992807686e-05, 1.3801097793475492e-06, 2.145874759662547e-06, 0.00022518816695082933, 1.3660638614965137e-05, 4.116741183679551e-05, 5.504284672497306e-06, 4.026421265734825e-06, 3.3192502542078728e-06, 0.00045017426600679755, 8.321301720570773e-06, 1.7400809610990109e-06, 4.8053036152850837e-05, 8.188218316718121e-07, 1.067341145244427e-06, 4.507095127337379e-06, 9.55709310801467e-06], "target_probs": 0.9828338027000427}}


{"result": {"time": "2021-02-11 10:39:01.076213", "n_pass": [1035, 123, 107], "n_token": 104, "loss": [0.681866466999054, 0.02043243497610092], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["self", "request", "args", "self", "request", "args", "kwargs", "tenant_choices", "tenants", "has_more", "request", "for", "tenant", "in", "tenants", "tenant", "tenant_choices", "(", "net_type", ",", "tenant", "self", "tenant_choices", "#NEWLINE#", "self", "self", "request", "(", "request", ",", "neutron_settings", "#NEWLINE#", "seg_id_range", "=", "neutron_settings", ".", "self", ".", "seg_id_range", "=", "seg_id_range", ".", ":", "seg_id_range", ":", "seg_id_range", "#NEWLINE#", "seg_id_help", "'For VLAN networks, the VLAN VID on the physical network that realizes the virtual network. Valid VLAN VIDs are %(vlan_min)s through %(vlan_max)s. For GRE or VXLAN networks, the tunnel ID. Valid tunnel IDs for GRE networks are %(gre_min)s through %(gre_max)s. For VXLAN networks, %(vxlan_min)s through %(vxlan_max)s.'", "self", ".", "seg_id_range", "self", ".", "seg_id_range", "[", ":", "self", ".", "seg_id_range", "self", ".", "seg_id_range", "#NEWLINE#", "self", ".", "seg_id_range", "[", "self", ".", "seg_id_range", "[", "self", ".", "=", "seg_id_help", "#NEWLINE#", "supported_provider_types", "=", "neutron_settings", "(", "supported_provider_types", "network_type_choices", "=", "#INDENT#", "network_type_choices", "net_type", "for", "net_type", "in", "(", "net_type", "supported_provider_types", "(", "network_type_choices", ")", "self", ".", "#INDENT#", "self", "=", "network_type_choices", "#INDENT#", "self"]}}
{"position": {"error_location": 18, "repair_targets": [12, 15, 20], "repair_candidates": [2, 5, 32, 38, 40, 43, 45, 51, 54, 59, 62, 66, 70, 18, 86, 88, 91, 8, 14, 82, 85, 94, 101, 1, 4, 10, 26, 28, 12, 15, 20, 6, 9, 7, 16, 22, 30, 34, 79, 47, 75, 0, 3, 21, 24, 25, 36, 49, 52, 57, 60, 64, 68, 72, 96, 99, 103, 77, 81, 92]}}
{"prediction": {"error_location": 0.50567227602005, "repair_targets": [0.9796419143676758, 2.9046663257759064e-05, 0.00010397636651759967], "repair_candidates": [0.0006203927332535386, 0.0012653650483116508, 0.0028195353224873543, 0.00011167755292262882, 0.002820624504238367, 0.00015869205526541919, 0.00039169943192973733, 0.00014676938008051366, 2.7514624889590777e-05, 0.0001878193870652467, 0.008502217940986156, 0.9796419143676758, 4.000047738372814e-06, 2.9046663257759064e-05, 0.0002496019296813756, 4.9853897508000955e-06, 0.00010397636651759967, 1.540257471788209e-05, 1.4238547919376288e-05, 5.265653157948691e-07, 4.3326022591827495e-07, 1.804154749152076e-06, 0.0006828376208432019, 1.1162394002894871e-05, 0.00010070193093270063, 2.1852134523214772e-05, 6.1976875258551445e-06, 4.85544660477899e-05, 9.907136700348929e-06, 2.4308947104145773e-06, 1.2392894177537528e-06, 2.748251290540793e-06, 1.7227041553269373e-06, 0.00025869489763863385, 3.625817271313281e-06, 2.191250678151846e-05, 1.4449185528064845e-06, 0.00019472953863441944, 4.832028935197741e-06, 5.7330533309141174e-05, 8.292666962006479e-07, 8.87335481820628e-05, 2.89389527097228e-06, 5.0789858505595475e-05, 1.6821880990391946e-06, 2.7443882117950125e-06, 0.00036641902988776565, 1.6199019228224643e-05, 5.499695907928981e-05, 7.168740012275521e-06, 5.783991582575254e-06, 4.316207196097821e-06, 0.0007546417764388025, 1.075859836419113e-05, 2.1071170976938447e-06, 6.104457133915275e-05, 9.263551419280702e-07, 1.3006704193685437e-06, 5.671513463312294e-06, 1.0953031051030848e-05], "target_probs": 0.9797748923301697}}


{"result": {"time": "2021-02-11 10:39:01.212980", "n_pass": [1037, 124, 108], "n_token": 103, "loss": [0.508057713508606, 0.021748006343841553], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["self", "request", "args", "self", "request", "args", "kwargs", "tenant_choices", "tenants", "has_more", "request", "for", "tenant", "in", "tenants", "tenant", "tenant_choices", "(", "net_type", ",", "tenant", "self", "tenant_choices", "#NEWLINE#", "self", "self", "request", "request", ",", "neutron_settings", "#NEWLINE#", "seg_id_range", "=", "neutron_settings", ".", "self", ".", "seg_id_range", "=", "seg_id_range", ".", ":", "seg_id_range", ":", "seg_id_range", "#NEWLINE#", "seg_id_help", "'For VLAN networks, the VLAN VID on the physical network that realizes the virtual network. Valid VLAN VIDs are %(vlan_min)s through %(vlan_max)s. For GRE or VXLAN networks, the tunnel ID. Valid tunnel IDs for GRE networks are %(gre_min)s through %(gre_max)s. For VXLAN networks, %(vxlan_min)s through %(vxlan_max)s.'", "self", ".", "seg_id_range", "self", ".", "seg_id_range", "[", ":", "self", ".", "seg_id_range", "self", ".", "seg_id_range", "#NEWLINE#", "self", ".", "seg_id_range", "[", "self", ".", "seg_id_range", "[", "self", ".", "=", "seg_id_help", "#NEWLINE#", "supported_provider_types", "=", "neutron_settings", "(", "supported_provider_types", "network_type_choices", "=", "#INDENT#", "network_type_choices", "net_type", "for", "net_type", "in", "(", "net_type", "supported_provider_types", "(", "network_type_choices", ")", "self", ".", "#INDENT#", "self", "=", "network_type_choices", "#INDENT#", "self"]}}
{"position": {"error_location": 18, "repair_targets": [12, 15, 20], "repair_candidates": [2, 5, 31, 37, 39, 42, 44, 50, 53, 58, 61, 65, 69, 18, 85, 87, 90, 8, 14, 81, 84, 93, 100, 1, 4, 10, 26, 27, 12, 15, 20, 6, 9, 7, 16, 22, 29, 33, 78, 46, 74, 0, 3, 21, 24, 25, 35, 48, 51, 56, 59, 63, 67, 71, 95, 98, 102, 76, 80, 91]}}
{"prediction": {"error_location": 0.6016630530357361, "repair_targets": [0.9783665537834167, 3.1650513847125694e-05, 8.85937042767182e-05], "repair_candidates": [0.0005019515519961715, 0.0011763933580368757, 0.0028553702868521214, 0.0001223665167344734, 0.0024232452269643545, 0.00014406848640646785, 0.0003658270288724452, 0.00012080740998499095, 2.842422873072792e-05, 0.00021563767222687602, 0.011167303659021854, 0.9783665537834167, 3.5895886867365334e-06, 3.1650513847125694e-05, 0.00030219036852940917, 4.909690687782131e-06, 8.85937042767182e-05, 1.5069930668687448e-05, 1.5879129932727665e-05, 2.2908788821496273e-07, 4.905082846562436e-07, 1.4754933545191307e-05, 0.0003479160077404231, 1.7823409507400356e-05, 3.50195296050515e-05, 9.181488167087082e-06, 5.9172152759856544e-06, 4.0025530324783176e-05, 1.3687373211723752e-05, 2.81768302556884e-06, 1.380280991725158e-06, 2.7550534014153527e-06, 1.2046456276948447e-06, 0.00022176674974616617, 3.3751757655409165e-06, 1.880865602288395e-05, 1.234220121659746e-06, 0.00016592303290963173, 3.363976929904311e-06, 4.6408691559918225e-05, 5.161163016964565e-07, 8.480915130348876e-05, 2.94524829769216e-06, 4.354632255854085e-05, 1.1205254395463271e-06, 2.486110361132887e-06, 0.00019881772459484637, 1.303903991356492e-05, 5.056396912550554e-05, 5.435796538222348e-06, 4.949009053234477e-06, 3.41325176123064e-06, 0.0006033378303982317, 9.2229984147707e-06, 1.7574205912751495e-06, 5.225304630585015e-05, 7.967727810864744e-07, 1.0878956118176575e-06, 5.1899455684178974e-06, 1.0677297723304946e-05], "target_probs": 0.9784867763519287}}


{"result": {"time": "2021-02-11 10:39:01.349927", "n_pass": [1039, 125, 109], "n_token": 102, "loss": [0.44782203435897827, 0.018820814788341522], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["self", "request", "args", "self", "request", "args", "kwargs", "tenant_choices", "tenants", "has_more", "request", "for", "tenant", "in", "tenants", "tenant", "tenant_choices", "(", "net_type", ",", "tenant", "self", "tenant_choices", "#NEWLINE#", "self", "self", "request", "request", "neutron_settings", "#NEWLINE#", "seg_id_range", "=", "neutron_settings", ".", "self", ".", "seg_id_range", "=", "seg_id_range", ".", ":", "seg_id_range", ":", "seg_id_range", "#NEWLINE#", "seg_id_help", "'For VLAN networks, the VLAN VID on the physical network that realizes the virtual network. Valid VLAN VIDs are %(vlan_min)s through %(vlan_max)s. For GRE or VXLAN networks, the tunnel ID. Valid tunnel IDs for GRE networks are %(gre_min)s through %(gre_max)s. For VXLAN networks, %(vxlan_min)s through %(vxlan_max)s.'", "self", ".", "seg_id_range", "self", ".", "seg_id_range", "[", ":", "self", ".", "seg_id_range", "self", ".", "seg_id_range", "#NEWLINE#", "self", ".", "seg_id_range", "[", "self", ".", "seg_id_range", "[", "self", ".", "=", "seg_id_help", "#NEWLINE#", "supported_provider_types", "=", "neutron_settings", "(", "supported_provider_types", "network_type_choices", "=", "#INDENT#", "network_type_choices", "net_type", "for", "net_type", "in", "(", "net_type", "supported_provider_types", "(", "network_type_choices", ")", "self", ".", "#INDENT#", "self", "=", "network_type_choices", "#INDENT#", "self"]}}
{"position": {"error_location": 18, "repair_targets": [12, 15, 20], "repair_candidates": [2, 5, 30, 36, 38, 41, 43, 49, 52, 57, 60, 64, 68, 18, 84, 86, 89, 8, 14, 80, 83, 92, 99, 1, 4, 10, 26, 27, 12, 15, 20, 6, 9, 7, 16, 22, 28, 32, 77, 45, 73, 0, 3, 21, 24, 25, 34, 47, 50, 55, 58, 62, 66, 70, 94, 97, 101, 75, 79, 90]}}
{"prediction": {"error_location": 0.6390182971954346, "repair_targets": [0.9812275767326355, 2.949895861092955e-05, 9.809691982809454e-05], "repair_candidates": [0.0004993409966118634, 0.0012596716405823827, 0.002982841804623604, 0.0001455248857382685, 0.002189447171986103, 0.0001003312281682156, 0.0002355892793275416, 5.56056693312712e-05, 2.0860597942373715e-05, 0.00015670462744310498, 0.009189766831696033, 0.9812275767326355, 2.4780974854365923e-06, 2.949895861092955e-05, 0.0003010245563928038, 5.0258031478733756e-06, 9.809691982809454e-05, 1.7558179024490528e-05, 1.1921703844564036e-05, 3.3174256941492786e-07, 5.018731599193416e-07, 3.961276433983585e-06, 0.00020419375505298376, 0.00012143194180680439, 2.7619889806373976e-05, 5.103152034280356e-06, 2.5401561742910417e-06, 3.910452505806461e-05, 8.944351066020317e-06, 2.5258507321268553e-06, 1.2098954584871535e-06, 3.1531099011772312e-06, 1.084809241547191e-06, 0.000186990451766178, 2.7946782665821956e-06, 1.937166234711185e-05, 9.45106080507685e-07, 0.00013292818039190024, 2.4644093628012342e-06, 3.5351789847481996e-05, 4.76380790814801e-07, 6.745228893123567e-05, 2.3664038053539116e-06, 2.9057964638923295e-05, 1.0276282864651876e-06, 1.6063218026829418e-06, 0.0001312957174377516, 1.1326059393468313e-05, 2.9639957574545406e-05, 3.714832018886227e-06, 3.4152017178712413e-06, 2.193162117691827e-06, 0.00033545607584528625, 6.014181053615175e-06, 1.187460838991683e-06, 3.1699299142928794e-05, 6.794190881009854e-07, 7.715298124821857e-07, 3.337845328132971e-06, 5.825154858030146e-06], "target_probs": 0.9813551902770996}}


{"result": {"time": "2021-02-11 10:39:01.888360", "n_pass": [1047, 129, 110], "n_token": 101, "loss": [0.6035090088844299, 0.019306404516100883], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["self", "request", "args", "self", "request", "args", "kwargs", "tenant_choices", "tenants", "has_more", "request", "for", "tenant", "in", "tenants", "tenant", "tenant_choices", "(", "net_type", ",", "tenant", "self", "tenant_choices", "#NEWLINE#", "self", "self", "request", "request", "neutron_settings", "#NEWLINE#", "seg_id_range", "=", "neutron_settings", ".", "self", "seg_id_range", "=", "seg_id_range", ".", ":", "seg_id_range", ":", "seg_id_range", "#NEWLINE#", "seg_id_help", "'For VLAN networks, the VLAN VID on the physical network that realizes the virtual network. Valid VLAN VIDs are %(vlan_min)s through %(vlan_max)s. For GRE or VXLAN networks, the tunnel ID. Valid tunnel IDs for GRE networks are %(gre_min)s through %(gre_max)s. For VXLAN networks, %(vxlan_min)s through %(vxlan_max)s.'", "self", ".", "seg_id_range", "self", ".", "seg_id_range", "[", ":", "self", ".", "seg_id_range", "self", ".", "seg_id_range", "#NEWLINE#", "self", ".", "seg_id_range", "[", "self", ".", "seg_id_range", "[", "self", ".", "=", "seg_id_help", "#NEWLINE#", "supported_provider_types", "=", "neutron_settings", "(", "supported_provider_types", "network_type_choices", "=", "#INDENT#", "network_type_choices", "net_type", "for", "net_type", "in", "(", "net_type", "supported_provider_types", "(", "network_type_choices", ")", "self", ".", "#INDENT#", "self", "=", "network_type_choices", "#INDENT#", "self"]}}
{"position": {"error_location": 18, "repair_targets": [12, 15, 20], "repair_candidates": [2, 5, 30, 35, 37, 40, 42, 48, 51, 56, 59, 63, 67, 18, 83, 85, 88, 8, 14, 79, 82, 91, 98, 1, 4, 10, 26, 27, 12, 15, 20, 6, 9, 7, 16, 22, 28, 32, 76, 44, 72, 0, 3, 21, 24, 25, 34, 46, 49, 54, 57, 61, 65, 69, 93, 96, 100, 74, 78, 89]}}
{"prediction": {"error_location": 0.5468891263008118, "repair_targets": [0.9806772470474243, 4.087095658178441e-05, 0.00016063213115558028], "repair_candidates": [0.0007219190592877567, 0.0015197008615359664, 0.0031165662221610546, 0.00020131419296376407, 0.0027821885887533426, 0.00012219177733641118, 0.00027281613438390195, 7.232384086819366e-05, 2.306895657966379e-05, 0.00014297223242465407, 0.007778177969157696, 0.9806772470474243, 3.5681632652995177e-06, 4.087095658178441e-05, 0.00029849703423678875, 7.201243533927482e-06, 0.00016063213115558028, 3.074897904298268e-05, 1.812679875001777e-05, 1.5635450836271048e-06, 1.9549215721781366e-06, 5.9891385717492085e-06, 0.00010198147356277332, 1.2524230442068074e-05, 2.309264164068736e-05, 1.1986858226009645e-06, 0.0001538308133604005, 3.6832268506259425e-06, 9.144294381258078e-06, 3.781854502449278e-06, 1.6545634480280569e-06, 5.489536306413356e-06, 5.448810952657368e-06, 0.00037294666981324553, 7.766777343931608e-06, 1.339764003205346e-05, 2.4006926651054528e-06, 0.00020719417079817504, 3.7546576550084865e-06, 4.296351471566595e-05, 9.330613579550118e-07, 6.923192995600402e-05, 4.375575372250751e-06, 3.991177072748542e-05, 1.3720098195335595e-06, 1.8283093368154368e-06, 0.00019613343465607613, 1.6374602637370117e-05, 3.663418465293944e-05, 5.6264411796291824e-06, 4.681083737523295e-06, 3.221344741177745e-06, 0.0005686524091288447, 8.975195669336244e-06, 1.9304904981254367e-06, 5.1568706112448126e-05, 1.104683519770333e-06, 1.205111516355828e-06, 5.048196271673078e-06, 9.363056051370222e-06], "target_probs": 0.9808787703514099}}


{"result": {"time": "2021-02-11 10:39:02.024455", "n_pass": [1049, 130, 111], "n_token": 100, "loss": [0.6630786061286926, 0.01451509352773428], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["self", "request", "args", "self", "request", "args", "kwargs", "tenant_choices", "tenants", "has_more", "request", "for", "tenant", "in", "tenants", "tenant", "tenant_choices", "(", "net_type", ",", "tenant", "self", "tenant_choices", "#NEWLINE#", "self", "self", "request", "request", "neutron_settings", "#NEWLINE#", "seg_id_range", "=", "neutron_settings", ".", "self", "seg_id_range", "seg_id_range", ".", ":", "seg_id_range", ":", "seg_id_range", "#NEWLINE#", "seg_id_help", "'For VLAN networks, the VLAN VID on the physical network that realizes the virtual network. Valid VLAN VIDs are %(vlan_min)s through %(vlan_max)s. For GRE or VXLAN networks, the tunnel ID. Valid tunnel IDs for GRE networks are %(gre_min)s through %(gre_max)s. For VXLAN networks, %(vxlan_min)s through %(vxlan_max)s.'", "self", ".", "seg_id_range", "self", ".", "seg_id_range", "[", ":", "self", ".", "seg_id_range", "self", ".", "seg_id_range", "#NEWLINE#", "self", ".", "seg_id_range", "[", "self", ".", "seg_id_range", "[", "self", ".", "=", "seg_id_help", "#NEWLINE#", "supported_provider_types", "=", "neutron_settings", "(", "supported_provider_types", "network_type_choices", "=", "#INDENT#", "network_type_choices", "net_type", "for", "net_type", "in", "(", "net_type", "supported_provider_types", "(", "network_type_choices", ")", "self", ".", "#INDENT#", "self", "=", "network_type_choices", "#INDENT#", "self"]}}
{"position": {"error_location": 18, "repair_targets": [12, 15, 20], "repair_candidates": [2, 5, 30, 35, 36, 39, 41, 47, 50, 55, 58, 62, 66, 18, 82, 84, 87, 8, 14, 78, 81, 90, 97, 1, 4, 10, 26, 27, 12, 15, 20, 6, 9, 7, 16, 22, 28, 32, 75, 43, 71, 0, 3, 21, 24, 25, 34, 45, 48, 53, 56, 60, 64, 68, 92, 95, 99, 73, 77, 88]}}
{"prediction": {"error_location": 0.5152625441551208, "repair_targets": [0.9855015873908997, 2.2233907657209784e-05, 6.589298573089764e-05], "repair_candidates": [0.000550903903786093, 0.0012219131458550692, 0.0026388391852378845, 0.0001390783436363563, 0.002239275025203824, 9.194586891680956e-05, 0.00021026897593401372, 5.100874477648176e-05, 1.6474943549837917e-05, 0.00010981917148455977, 0.005830726120620966, 0.9855015873908997, 2.4317857878486393e-06, 2.2233907657209784e-05, 0.0001678831031313166, 4.249332050676458e-06, 6.589298573089764e-05, 1.1485842151159886e-05, 7.688627192692365e-06, 2.210082783449252e-07, 4.5532303261097695e-07, 3.5036489407502813e-06, 6.0613045206991956e-05, 1.4797366020502523e-05, 1.3757666238234378e-05, 4.601922682923032e-07, 4.368255031295121e-05, 4.158666797593469e-06, 3.7724901631008834e-05, 2.4489565930707613e-06, 8.713415695638105e-07, 2.5417300548724597e-06, 1.480001174058998e-06, 0.00018544725026004016, 2.2507163066620706e-06, 1.6467811292386614e-05, 1.2285283901292132e-06, 0.00011912440095329657, 2.334351847821381e-06, 3.910323357558809e-05, 5.0033787601933e-07, 5.199590668780729e-05, 2.6606533083395334e-06, 2.8919497708557174e-05, 8.158857554008137e-07, 1.4909007859387202e-06, 9.244863031199202e-05, 9.004204912343994e-06, 2.890956966439262e-05, 3.118644599453546e-06, 3.3378787520632613e-06, 2.3377758679998806e-06, 0.00029157844255678356, 5.692870672646677e-06, 1.0961992984448443e-06, 3.0141462048050016e-05, 6.892971100569412e-07, 6.989977805460512e-07, 3.1790384582564e-06, 4.9049040171667e-06], "target_probs": 0.9855897426605225}}


{"result": {"time": "2021-02-11 10:39:02.159394", "n_pass": [1051, 131, 112], "n_token": 99, "loss": [0.7175418734550476, 0.013219868764281273], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["self", "request", "args", "self", "request", "args", "kwargs", "tenant_choices", "tenants", "has_more", "request", "for", "tenant", "in", "tenants", "tenant", "tenant_choices", "(", "net_type", ",", "tenant", "self", "tenant_choices", "#NEWLINE#", "self", "self", "request", "request", "neutron_settings", "#NEWLINE#", "seg_id_range", "=", "neutron_settings", ".", "self", "seg_id_range", "seg_id_range", ":", "seg_id_range", ":", "seg_id_range", "#NEWLINE#", "seg_id_help", "'For VLAN networks, the VLAN VID on the physical network that realizes the virtual network. Valid VLAN VIDs are %(vlan_min)s through %(vlan_max)s. For GRE or VXLAN networks, the tunnel ID. Valid tunnel IDs for GRE networks are %(gre_min)s through %(gre_max)s. For VXLAN networks, %(vxlan_min)s through %(vxlan_max)s.'", "self", ".", "seg_id_range", "self", ".", "seg_id_range", "[", ":", "self", ".", "seg_id_range", "self", ".", "seg_id_range", "#NEWLINE#", "self", ".", "seg_id_range", "[", "self", ".", "seg_id_range", "[", "self", ".", "=", "seg_id_help", "#NEWLINE#", "supported_provider_types", "=", "neutron_settings", "(", "supported_provider_types", "network_type_choices", "=", "#INDENT#", "network_type_choices", "net_type", "for", "net_type", "in", "(", "net_type", "supported_provider_types", "(", "network_type_choices", ")", "self", ".", "#INDENT#", "self", "=", "network_type_choices", "#INDENT#", "self"]}}
{"position": {"error_location": 18, "repair_targets": [12, 15, 20], "repair_candidates": [2, 5, 30, 35, 36, 38, 40, 46, 49, 54, 57, 61, 65, 18, 81, 83, 86, 8, 14, 77, 80, 89, 96, 1, 4, 10, 26, 27, 12, 15, 20, 6, 9, 7, 16, 22, 28, 32, 74, 42, 70, 0, 3, 21, 24, 25, 34, 44, 47, 52, 55, 59, 63, 67, 91, 94, 98, 72, 76, 87]}}
{"prediction": {"error_location": 0.48795023560523987, "repair_targets": [0.9867812991142273, 2.088867040583864e-05, 6.498315633507445e-05], "repair_candidates": [0.0005100975977256894, 0.0011321580968797207, 0.0023673896212130785, 0.00012649646669160575, 0.0020503862760961056, 7.596257637487724e-05, 0.00016312087245751172, 3.979992470704019e-05, 1.414823691447964e-05, 9.693493484519422e-05, 0.005370551720261574, 0.9867812991142273, 2.052249328698963e-06, 2.088867040583864e-05, 0.00015035182877909392, 3.928617388737621e-06, 6.498315633507445e-05, 1.1807087503257208e-05, 9.9736571428366e-06, 3.593830797399278e-07, 4.938695497003209e-07, 3.219915015506558e-06, 4.493214510148391e-05, 7.853590432205237e-06, 1.0503644261916634e-05, 9.063411425813683e-07, 5.0848404498538e-05, 8.814383249955426e-07, 2.7609938115347177e-05, 4.068308498972328e-06, 4.287493538868148e-06, 1.7840815189629211e-06, 1.1759884728235193e-06, 0.0001633944339118898, 2.1307560018613003e-06, 1.6369991499232128e-05, 9.00750535492989e-07, 0.00011448138684500009, 1.6709814190107863e-06, 3.346871380927041e-05, 3.9791726180737896e-07, 4.5259290345711634e-05, 2.0551951820380054e-06, 2.2002739569870755e-05, 5.883674702999997e-07, 1.562129909871146e-06, 8.253124542534351e-05, 6.742872301401803e-06, 3.5447097616270185e-05, 2.8754391223628772e-06, 3.4113056699425215e-06, 2.61206628238142e-06, 0.00026921313838101923, 5.386195425671758e-06, 9.549135029374156e-07, 2.7151107133249752e-05, 6.023196306159662e-07, 5.760851422564883e-07, 2.9517464099626523e-06, 4.113917839276837e-06], "target_probs": 0.9868671298027039}}


{"result": {"time": "2021-02-11 10:39:02.295085", "n_pass": [1052, 132, 113], "n_token": 98, "loss": [0.68802809715271, 0.015549467876553535], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["self", "request", "args", "self", "request", "args", "kwargs", "tenant_choices", "tenants", "has_more", "request", "for", "tenant", "in", "tenants", "tenant", "tenant_choices", "(", "net_type", ",", "tenant", "self", "tenant_choices", "#NEWLINE#", "self", "self", "request", "request", "neutron_settings", "#NEWLINE#", "seg_id_range", "=", "neutron_settings", ".", "self", "seg_id_range", "seg_id_range", "seg_id_range", ":", "seg_id_range", "#NEWLINE#", "seg_id_help", "'For VLAN networks, the VLAN VID on the physical network that realizes the virtual network. Valid VLAN VIDs are %(vlan_min)s through %(vlan_max)s. For GRE or VXLAN networks, the tunnel ID. Valid tunnel IDs for GRE networks are %(gre_min)s through %(gre_max)s. For VXLAN networks, %(vxlan_min)s through %(vxlan_max)s.'", "self", ".", "seg_id_range", "self", ".", "seg_id_range", "[", ":", "self", ".", "seg_id_range", "self", ".", "seg_id_range", "#NEWLINE#", "self", ".", "seg_id_range", "[", "self", ".", "seg_id_range", "[", "self", ".", "=", "seg_id_help", "#NEWLINE#", "supported_provider_types", "=", "neutron_settings", "(", "supported_provider_types", "network_type_choices", "=", "#INDENT#", "network_type_choices", "net_type", "for", "net_type", "in", "(", "net_type", "supported_provider_types", "(", "network_type_choices", ")", "self", ".", "#INDENT#", "self", "=", "network_type_choices", "#INDENT#", "self"]}}
{"position": {"error_location": 18, "repair_targets": [12, 15, 20], "repair_candidates": [2, 5, 30, 35, 36, 37, 39, 45, 48, 53, 56, 60, 64, 18, 80, 82, 85, 8, 14, 76, 79, 88, 95, 1, 4, 10, 26, 27, 12, 15, 20, 6, 9, 7, 16, 22, 28, 32, 73, 41, 69, 0, 3, 21, 24, 25, 34, 43, 46, 51, 54, 58, 62, 66, 90, 93, 97, 71, 75, 86]}}
{"prediction": {"error_location": 0.5025660991668701, "repair_targets": [0.9844539761543274, 2.217444489360787e-05, 9.464357572142035e-05], "repair_candidates": [0.0005339807248674333, 0.0012017065891996026, 0.0025905496440827847, 0.00011225576599827036, 0.002017729915678501, 8.843129762681201e-05, 0.00020989106269553304, 3.90880522900261e-05, 1.5401401469716802e-05, 0.00011237916623940691, 0.006641313433647156, 0.9844539761543274, 1.786698476280435e-06, 2.217444489360787e-05, 0.0002095556556014344, 4.081128281541169e-06, 9.464357572142035e-05, 1.527231142972596e-05, 1.008833623927785e-05, 9.427350846635818e-07, 9.005117362903547e-07, 2.7328367195877945e-06, 3.278008080087602e-05, 4.305189577280544e-06, 1.3160708476789296e-05, 1.1188318467247882e-06, 4.021730273962021e-05, 4.340617465459218e-07, 1.5963187252054922e-05, 7.827898116374854e-06, 4.7623939281038474e-06, 2.579629381216364e-06, 2.348750058445148e-06, 0.00024443783331662416, 5.340371899364982e-06, 1.0628532436385285e-05, 1.5560100337097538e-06, 0.00017029655282385647, 3.636868314060848e-06, 2.9526376238209195e-05, 6.949039175196958e-07, 3.426710463827476e-05, 4.471326064958703e-06, 2.3011971279629506e-05, 9.793726576390327e-07, 1.2709052725767833e-06, 0.00023108879395294935, 1.3861452316632494e-05, 3.5189597838325426e-05, 5.815868007630343e-06, 3.917775302397786e-06, 3.4900153877970297e-06, 0.0006033522658981383, 7.984664989635348e-06, 1.6980840200631064e-06, 4.4002521462971345e-05, 9.89428144748672e-07, 1.201490363200719e-06, 4.0202403397415765e-06, 8.851267011777963e-06], "target_probs": 0.9845708012580872}}


{"result": {"time": "2021-02-11 10:39:02.429163", "n_pass": [1054, 133, 114], "n_token": 97, "loss": [0.642825722694397, 0.017319004982709885], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["self", "request", "args", "self", "request", "args", "kwargs", "tenant_choices", "tenants", "has_more", "request", "for", "tenant", "in", "tenants", "tenant", "tenant_choices", "(", "net_type", ",", "tenant", "self", "tenant_choices", "#NEWLINE#", "self", "self", "request", "request", "neutron_settings", "#NEWLINE#", "seg_id_range", "=", "neutron_settings", ".", "self", "seg_id_range", "seg_id_range", "seg_id_range", "seg_id_range", "#NEWLINE#", "seg_id_help", "'For VLAN networks, the VLAN VID on the physical network that realizes the virtual network. Valid VLAN VIDs are %(vlan_min)s through %(vlan_max)s. For GRE or VXLAN networks, the tunnel ID. Valid tunnel IDs for GRE networks are %(gre_min)s through %(gre_max)s. For VXLAN networks, %(vxlan_min)s through %(vxlan_max)s.'", "self", ".", "seg_id_range", "self", ".", "seg_id_range", "[", ":", "self", ".", "seg_id_range", "self", ".", "seg_id_range", "#NEWLINE#", "self", ".", "seg_id_range", "[", "self", ".", "seg_id_range", "[", "self", ".", "=", "seg_id_help", "#NEWLINE#", "supported_provider_types", "=", "neutron_settings", "(", "supported_provider_types", "network_type_choices", "=", "#INDENT#", "network_type_choices", "net_type", "for", "net_type", "in", "(", "net_type", "supported_provider_types", "(", "network_type_choices", ")", "self", ".", "#INDENT#", "self", "=", "network_type_choices", "#INDENT#", "self"]}}
{"position": {"error_location": 18, "repair_targets": [12, 15, 20], "repair_candidates": [2, 5, 30, 35, 36, 37, 38, 44, 47, 52, 55, 59, 63, 18, 79, 81, 84, 8, 14, 75, 78, 87, 94, 1, 4, 10, 26, 27, 12, 15, 20, 6, 9, 7, 16, 22, 28, 32, 72, 40, 68, 0, 3, 21, 24, 25, 34, 42, 45, 50, 53, 57, 61, 65, 89, 92, 96, 70, 74, 85]}}
{"prediction": {"error_location": 0.5258045792579651, "repair_targets": [0.982720136642456, 2.2794281903770752e-05, 8.717699529370293e-05], "repair_candidates": [0.0005268173408694565, 0.0012440053978934884, 0.002783864736557007, 0.00010648347961250693, 0.0020307423546910286, 9.51838301261887e-05, 0.00023079488892108202, 3.996006489614956e-05, 1.700518259895034e-05, 0.00013006056542508304, 0.008151981979608536, 0.982720136642456, 1.6727713045838755e-06, 2.2794281903770752e-05, 0.0002617993741296232, 4.2421465877851006e-06, 8.717699529370293e-05, 1.4576047760783695e-05, 1.188879741675919e-05, 1.1437265357017168e-06, 7.709184046689188e-07, 1.5606997294526082e-06, 1.730663097987417e-05, 2.861268058040878e-06, 1.2696527846856043e-05, 1.5283397942766896e-06, 2.6025734769064002e-05, 3.7576293721031107e-07, 9.95664140646113e-06, 2.7988010060653323e-06, 3.7650277135981014e-06, 2.890305950131733e-06, 1.6550812915738788e-06, 0.00014348076365422457, 4.8994634198606946e-06, 1.2601555681612808e-05, 2.050155444521806e-06, 0.00016033384599722922, 4.082745817868272e-06, 3.3492040529381484e-05, 9.883941629595938e-07, 4.254781742929481e-05, 6.423147169698495e-06, 2.1890004063607194e-05, 1.1366379339960986e-06, 1.2049162023686222e-06, 0.0002338126942049712, 1.6374902770621702e-05, 3.4925160434795544e-05, 6.711171408824157e-06, 4.072534466104116e-06, 3.866034148813924e-06, 0.0006254414329305291, 8.389003596676048e-06, 1.8685936993279029e-06, 4.626933514373377e-05, 1.1036253226848203e-06, 1.397676783199131e-06, 4.117083335586358e-06, 9.985863471229095e-06], "target_probs": 0.9828301072120667}}


{"result": {"time": "2021-02-11 10:39:02.695485", "n_pass": [1058, 135, 115], "n_token": 96, "loss": [0.6651250123977661, 0.017280859872698784], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["self", "request", "args", "self", "request", "args", "kwargs", "tenant_choices", "tenants", "has_more", "request", "for", "tenant", "in", "tenants", "tenant", "tenant_choices", "(", "net_type", ",", "tenant", "self", "tenant_choices", "#NEWLINE#", "self", "self", "request", "request", "neutron_settings", "#NEWLINE#", "seg_id_range", "=", "neutron_settings", ".", "self", "seg_id_range", "seg_id_range", "seg_id_range", "seg_id_range", "#NEWLINE#", "seg_id_help", "self", ".", "seg_id_range", "self", ".", "seg_id_range", "[", ":", "self", ".", "seg_id_range", "self", ".", "seg_id_range", "#NEWLINE#", "self", ".", "seg_id_range", "[", "self", ".", "seg_id_range", "[", "self", ".", "=", "seg_id_help", "#NEWLINE#", "supported_provider_types", "=", "neutron_settings", "(", "supported_provider_types", "network_type_choices", "=", "#INDENT#", "network_type_choices", "net_type", "for", "net_type", "in", "(", "net_type", "supported_provider_types", "(", "network_type_choices", ")", "self", ".", "#INDENT#", "self", "=", "network_type_choices", "#INDENT#", "self"]}}
{"position": {"error_location": 18, "repair_targets": [12, 15, 20], "repair_candidates": [2, 5, 30, 35, 36, 37, 38, 43, 46, 51, 54, 58, 62, 18, 78, 80, 83, 8, 14, 74, 77, 86, 93, 1, 4, 10, 26, 27, 12, 15, 20, 6, 9, 7, 16, 22, 28, 32, 71, 40, 67, 0, 3, 21, 24, 25, 34, 41, 44, 49, 52, 56, 60, 64, 88, 91, 95, 69, 73, 84]}}
{"prediction": {"error_location": 0.5142092704772949, "repair_targets": [0.9827709794044495, 2.429120650049299e-05, 7.229048787849024e-05], "repair_candidates": [0.0005577781121246517, 0.0012652968289330602, 0.002766786143183708, 0.00010960956569761038, 0.002182037802413106, 0.00010479504999238998, 0.00024579360615462065, 4.725713370135054e-05, 1.8176242519984953e-05, 0.00013104781100992113, 0.007686693221330643, 0.9827709794044495, 1.9610918116086395e-06, 2.429120650049299e-05, 0.0002491332124918699, 4.550900030153571e-06, 7.229048787849024e-05, 1.3011263035878073e-05, 1.3655558177561034e-05, 7.395929060294293e-07, 5.183665621188993e-07, 1.2935524864587933e-06, 1.501395399827743e-05, 3.19634409606806e-06, 1.5160917428147513e-05, 2.890466475946596e-06, 2.2688345779897645e-05, 3.8666084378746746e-07, 9.18465775612276e-06, 2.747889539023163e-06, 4.133568836550694e-06, 1.325368521065684e-05, 6.116955546531244e-07, 0.00012893922394141555, 6.637509613938164e-06, 1.1623591490206309e-05, 1.8227615328214597e-06, 0.00018689240096136928, 4.967431323166238e-06, 4.923674714518711e-05, 7.791450116201304e-07, 5.308035179041326e-05, 5.736057573813014e-06, 2.773936648736708e-05, 1.1722839872163604e-06, 1.20291190341959e-06, 0.0002621487365104258, 1.5270707081072032e-05, 4.016041930299252e-05, 6.725871116941562e-06, 4.573450041789329e-06, 4.138002168474486e-06, 0.0007498712511733174, 8.844363946991507e-06, 1.981324885491631e-06, 5.175949991098605e-05, 1.1361061069692369e-06, 1.4240114296626416e-06, 4.5807487367710564e-06, 1.0542037671257276e-05], "target_probs": 0.9828675985336304}}


{"result": {"time": "2021-02-11 10:39:03.091607", "n_pass": [1065, 138, 116], "n_token": 95, "loss": [0.4774967133998871, 0.017387961968779564], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["self", "request", "args", "self", "request", "args", "kwargs", "tenant_choices", "tenants", "has_more", "request", "for", "tenant", "in", "tenants", "tenant", "tenant_choices", "(", "net_type", ",", "tenant", "self", "tenant_choices", "#NEWLINE#", "self", "self", "request", "request", "neutron_settings", "#NEWLINE#", "seg_id_range", "=", "neutron_settings", ".", "self", "seg_id_range", "seg_id_range", "seg_id_range", "seg_id_range", "#NEWLINE#", "seg_id_help", "self", ".", "seg_id_range", "self", ".", "seg_id_range", ":", "self", ".", "seg_id_range", "self", ".", "seg_id_range", "#NEWLINE#", "self", ".", "seg_id_range", "[", "self", ".", "seg_id_range", "[", "self", ".", "=", "seg_id_help", "#NEWLINE#", "supported_provider_types", "=", "neutron_settings", "(", "supported_provider_types", "network_type_choices", "=", "#INDENT#", "network_type_choices", "net_type", "for", "net_type", "in", "(", "net_type", "supported_provider_types", "(", "network_type_choices", ")", "self", ".", "#INDENT#", "self", "=", "network_type_choices", "#INDENT#", "self"]}}
{"position": {"error_location": 18, "repair_targets": [12, 15, 20], "repair_candidates": [2, 5, 30, 35, 36, 37, 38, 43, 46, 50, 53, 57, 61, 18, 77, 79, 82, 8, 14, 73, 76, 85, 92, 1, 4, 10, 26, 27, 12, 15, 20, 6, 9, 7, 16, 22, 28, 32, 70, 40, 66, 0, 3, 21, 24, 25, 34, 41, 44, 48, 51, 55, 59, 63, 87, 90, 94, 68, 72, 83]}}
{"prediction": {"error_location": 0.6203343272209167, "repair_targets": [0.9826704859733582, 2.5079141778405756e-05, 6.676027260255069e-05], "repair_candidates": [0.0005783378146588802, 0.0013126861304044724, 0.002867673058062792, 0.00011746721429517493, 0.002289051888510585, 0.00010757431300589815, 0.00024976691929623485, 5.0667156756389886e-05, 1.8842007193597965e-05, 0.00013215131184551865, 0.007525756023824215, 0.9826704859733582, 2.1017019662394887e-06, 2.5079141778405756e-05, 0.000249835749855265, 4.593530320562422e-06, 6.676027260255069e-05, 1.2985303328605369e-05, 1.5069034816406202e-05, 6.971558832447045e-07, 4.872096610597509e-07, 1.3857568319508573e-06, 1.7287658920395188e-05, 4.090108632226475e-06, 1.7447375284973532e-05, 3.6547487525240285e-06, 2.5153083697659895e-05, 4.222596885483654e-07, 9.988035344576929e-06, 3.011103444805485e-06, 4.27071972808335e-06, 1.2074855476384982e-05, 5.76620266201644e-07, 0.00016852561384439468, 1.3380671589402482e-05, 1.2953058103448711e-05, 2.6390353013994172e-06, 0.0001794844283722341, 3.953764917241642e-06, 3.43461761076469e-05, 9.569298526912462e-07, 4.152507972321473e-05, 6.531388407893246e-06, 2.3372453142656013e-05, 1.388055693496426e-06, 1.3263246501082904e-06, 0.00028101899079047143, 1.6498484910698608e-05, 3.8776455767219886e-05, 7.135772193578305e-06, 4.6097547965473495e-06, 4.121794063394191e-06, 0.0006790516781620681, 8.715642252354883e-06, 2.0134398255322594e-06, 5.264301580609754e-05, 1.1895539273609756e-06, 1.4166006394589203e-06, 4.665894721256336e-06, 1.0462082173035014e-05], "target_probs": 0.982762336730957}}


{"result": {"time": "2021-02-11 10:39:03.224362", "n_pass": [1066, 139, 117], "n_token": 94, "loss": [0.5879959464073181, 0.016530070453882217], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["self", "request", "args", "self", "request", "args", "kwargs", "tenant_choices", "tenants", "has_more", "request", "for", "tenant", "in", "tenants", "tenant", "tenant_choices", "(", "net_type", ",", "tenant", "self", "tenant_choices", "#NEWLINE#", "self", "self", "request", "request", "neutron_settings", "#NEWLINE#", "seg_id_range", "=", "neutron_settings", ".", "self", "seg_id_range", "seg_id_range", "seg_id_range", "seg_id_range", "#NEWLINE#", "seg_id_help", "self", ".", "seg_id_range", "self", ".", "seg_id_range", "self", ".", "seg_id_range", "self", ".", "seg_id_range", "#NEWLINE#", "self", ".", "seg_id_range", "[", "self", ".", "seg_id_range", "[", "self", ".", "=", "seg_id_help", "#NEWLINE#", "supported_provider_types", "=", "neutron_settings", "(", "supported_provider_types", "network_type_choices", "=", "#INDENT#", "network_type_choices", "net_type", "for", "net_type", "in", "(", "net_type", "supported_provider_types", "(", "network_type_choices", ")", "self", ".", "#INDENT#", "self", "=", "network_type_choices", "#INDENT#", "self"]}}
{"position": {"error_location": 18, "repair_targets": [12, 15, 20], "repair_candidates": [2, 5, 30, 35, 36, 37, 38, 43, 46, 49, 52, 56, 60, 18, 76, 78, 81, 8, 14, 72, 75, 84, 91, 1, 4, 10, 26, 27, 12, 15, 20, 6, 9, 7, 16, 22, 28, 32, 69, 40, 65, 0, 3, 21, 24, 25, 34, 41, 44, 47, 50, 54, 58, 62, 86, 89, 93, 67, 71, 82]}}
{"prediction": {"error_location": 0.5554392337799072, "repair_targets": [0.9835194945335388, 2.3812250219634734e-05, 6.24873791821301e-05], "repair_candidates": [0.0005743674701079726, 0.0012998641468584538, 0.0028453227132558823, 0.00012071945093339309, 0.0022650109604001045, 0.00010388857481302693, 0.00024320455850102007, 4.9475023843115196e-05, 1.810117464629002e-05, 0.00012497544230427593, 0.006968239787966013, 0.9835194945335388, 2.1097880562592763e-06, 2.3812250219634734e-05, 0.00022874402930028737, 4.329784133005887e-06, 6.24873791821301e-05, 1.2131768016843125e-05, 1.2569647878990509e-05, 5.031787395637366e-07, 4.183538067081827e-07, 1.27795851767587e-06, 1.5968791558407247e-05, 3.969646513724001e-06, 1.2977609912923072e-05, 2.8927070161444135e-06, 2.7566928110900335e-05, 4.217882008106244e-07, 9.874021088762674e-06, 3.113004822807852e-06, 4.460908712644596e-06, 7.536594239354599e-06, 3.6429281635719235e-07, 0.00011558910773601383, 1.2688540209637722e-06, 5.328222687239759e-05, 1.2715249795292038e-06, 0.00013147984282113612, 3.8104715258668875e-06, 3.5171218769392e-05, 7.243811523949262e-07, 4.848247772315517e-05, 5.902754310227465e-06, 2.5647412257967517e-05, 1.2414259344950551e-06, 1.1997868796242983e-06, 0.00024264183593913913, 1.5350771718658507e-05, 3.295062197139487e-05, 6.213265805854462e-06, 4.321302640164504e-06, 3.615390369304805e-06, 0.0006260205409489572, 7.89438945503207e-06, 1.8345335774938576e-06, 4.7474921302637085e-05, 1.1544721019163262e-06, 1.37038261982525e-06, 4.266586074663792e-06, 9.477243111177813e-06], "target_probs": 0.9836058020591736}}


{"result": {"time": "2021-02-11 10:39:03.747078", "n_pass": [1075, 143, 118], "n_token": 93, "loss": [0.33615174889564514, 0.014889449812471867], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["self", "request", "args", "self", "request", "args", "kwargs", "tenant_choices", "tenants", "has_more", "request", "for", "tenant", "in", "tenants", "tenant", "tenant_choices", "(", "net_type", ",", "tenant", "self", "tenant_choices", "#NEWLINE#", "self", "self", "request", "request", "neutron_settings", "#NEWLINE#", "seg_id_range", "=", "neutron_settings", ".", "self", "seg_id_range", "seg_id_range", "seg_id_range", "seg_id_range", "#NEWLINE#", "seg_id_help", "self", ".", "seg_id_range", "self", ".", "seg_id_range", "self", ".", "seg_id_range", "self", ".", "seg_id_range", "#NEWLINE#", "self", "seg_id_range", "[", "self", ".", "seg_id_range", "[", "self", ".", "=", "seg_id_help", "#NEWLINE#", "supported_provider_types", "=", "neutron_settings", "(", "supported_provider_types", "network_type_choices", "=", "#INDENT#", "network_type_choices", "net_type", "for", "net_type", "in", "(", "net_type", "supported_provider_types", "(", "network_type_choices", ")", "self", ".", "#INDENT#", "self", "=", "network_type_choices", "#INDENT#", "self"]}}
{"position": {"error_location": 18, "repair_targets": [12, 15, 20], "repair_candidates": [2, 5, 30, 35, 36, 37, 38, 43, 46, 49, 52, 55, 59, 18, 75, 77, 80, 8, 14, 71, 74, 83, 90, 1, 4, 10, 26, 27, 12, 15, 20, 6, 9, 7, 16, 22, 28, 32, 68, 40, 64, 0, 3, 21, 24, 25, 34, 41, 44, 47, 50, 54, 57, 61, 85, 88, 92, 66, 70, 81]}}
{"prediction": {"error_location": 0.7145144939422607, "repair_targets": [0.9851633906364441, 2.3569307813886553e-05, 3.391262725926936e-05], "repair_candidates": [0.0005722952773794532, 0.0012738306540995836, 0.0026464189868420362, 0.00015332461043726653, 0.0022772953379899263, 8.84898763615638e-05, 0.0001883861405076459, 4.630114926840179e-05, 1.652403807383962e-05, 0.00010787157953018323, 0.0060141244903206825, 0.9851633906364441, 2.4324656351382146e-06, 2.3569307813886553e-05, 0.00015750461898278445, 4.516817170951981e-06, 3.391262725926936e-05, 8.635970516479574e-06, 1.5313793483073823e-05, 1.9928009464820207e-07, 2.0303544090438663e-07, 1.678546027505945e-06, 3.0276758479885757e-05, 1.4907851436873898e-05, 1.3574323020293377e-05, 2.0440520529518835e-06, 2.7057210900238715e-05, 4.891878120361071e-07, 1.3103416677040514e-05, 5.1394622460065875e-06, 6.961973213037709e-06, 2.8586598546098685e-06, 8.661018569000589e-08, 5.5729127780068666e-05, 2.984805860251072e-07, 2.762206167972181e-05, 2.729327661654679e-07, 6.044322799425572e-05, 7.037509135443543e-07, 9.682381642051041e-05, 1.904694909171667e-05, 5.278586741042091e-07, 2.6913646706816508e-06, 2.5941179046640173e-05, 1.9805361262115184e-06, 2.065019316432881e-06, 0.0001724212197586894, 1.7851280063041486e-05, 5.299621261656284e-05, 4.631962838175241e-06, 5.088866146252258e-06, 4.002372861577896e-06, 0.0004652496718335897, 7.256227036123164e-06, 1.6669517890477437e-06, 4.6564004151150584e-05, 1.2191563882879564e-06, 1.353145648863574e-06, 4.404588253237307e-06, 8.42823828861583e-06], "target_probs": 0.9852208495140076}}


{"result": {"time": "2021-02-11 10:39:03.879037", "n_pass": [1077, 144, 119], "n_token": 92, "loss": [0.2326391637325287, 0.01673830673098564], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["self", "request", "args", "self", "request", "args", "kwargs", "tenant_choices", "tenants", "has_more", "request", "for", "tenant", "in", "tenants", "tenant", "tenant_choices", "(", "net_type", ",", "tenant", "self", "tenant_choices", "#NEWLINE#", "self", "self", "request", "request", "neutron_settings", "#NEWLINE#", "seg_id_range", "=", "neutron_settings", ".", "self", "seg_id_range", "seg_id_range", "seg_id_range", "seg_id_range", "#NEWLINE#", "seg_id_help", "self", ".", "seg_id_range", "self", ".", "seg_id_range", "self", ".", "seg_id_range", "self", ".", "seg_id_range", "#NEWLINE#", "self", "seg_id_range", "self", ".", "seg_id_range", "[", "self", ".", "=", "seg_id_help", "#NEWLINE#", "supported_provider_types", "=", "neutron_settings", "(", "supported_provider_types", "network_type_choices", "=", "#INDENT#", "network_type_choices", "net_type", "for", "net_type", "in", "(", "net_type", "supported_provider_types", "(", "network_type_choices", ")", "self", ".", "#INDENT#", "self", "=", "network_type_choices", "#INDENT#", "self"]}}
{"position": {"error_location": 18, "repair_targets": [12, 15, 20], "repair_candidates": [2, 5, 30, 35, 36, 37, 38, 43, 46, 49, 52, 55, 58, 18, 74, 76, 79, 8, 14, 70, 73, 82, 89, 1, 4, 10, 26, 27, 12, 15, 20, 6, 9, 7, 16, 22, 28, 32, 67, 40, 63, 0, 3, 21, 24, 25, 34, 41, 44, 47, 50, 54, 56, 60, 84, 87, 91, 65, 69, 80]}}
{"prediction": {"error_location": 0.7924396991729736, "repair_targets": [0.9833214282989502, 3.1367959309136495e-05, 4.8231180699076504e-05], "repair_candidates": [0.0006228244747035205, 0.0013913463335484266, 0.0029473162721842527, 0.00017690214735921472, 0.0025087129324674606, 0.00010426800872664899, 0.00021974023547954857, 5.819677244289778e-05, 2.046683948719874e-05, 0.00012833552318625152, 0.00669443653896451, 0.9833214282989502, 3.0941089335101424e-06, 3.1367959309136495e-05, 0.0002185685734730214, 5.534086994885001e-06, 4.8231180699076504e-05, 1.2380886801111046e-05, 2.262745692860335e-05, 3.893729285664449e-07, 3.2800841154312366e-07, 2.2338249436870683e-06, 4.474796514841728e-05, 2.0920750102959573e-05, 3.4579898056108505e-05, 6.813485924794804e-06, 4.383093255455606e-05, 9.337907727058337e-07, 2.9592398277600296e-05, 1.1346722203597892e-05, 1.5639121556887403e-05, 4.560271463560639e-06, 1.433371323855681e-07, 9.923170000547543e-05, 6.054814889466797e-07, 4.7827325033722445e-05, 6.794884939154144e-07, 9.315822535427287e-05, 1.0557760106166825e-06, 9.531476825941354e-05, 7.939818715385627e-06, 4.613973487721523e-06, 2.043392669293098e-06, 1.8142751287086867e-05, 8.314781553053763e-06, 2.3193529159470927e-06, 0.00024162832414731383, 2.0526791558950208e-05, 4.769109364133328e-05, 6.520151146105491e-06, 5.388544195739087e-06, 4.721990080724936e-06, 0.00045086414320394397, 8.30619774205843e-06, 2.12789086617704e-06, 6.082525578676723e-05, 1.5200753296085168e-06, 1.5392481600429164e-06, 5.235557182459161e-06, 1.002573571895482e-05], "target_probs": 0.9834010004997253}}


{"result": {"time": "2021-02-11 10:39:04.138936", "n_pass": [1081, 146, 120], "n_token": 91, "loss": [0.13202179968357086, 0.01754062995314598], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["self", "request", "args", "self", "request", "args", "kwargs", "tenant_choices", "tenants", "has_more", "request", "for", "tenant", "in", "tenants", "tenant", "tenant_choices", "(", "net_type", ",", "tenant", "self", "tenant_choices", "#NEWLINE#", "self", "self", "request", "request", "neutron_settings", "#NEWLINE#", "seg_id_range", "=", "neutron_settings", ".", "self", "seg_id_range", "seg_id_range", "seg_id_range", "seg_id_range", "#NEWLINE#", "seg_id_help", "self", ".", "seg_id_range", "self", ".", "seg_id_range", "self", ".", "seg_id_range", "self", ".", "seg_id_range", "#NEWLINE#", "self", "seg_id_range", "self", ".", "seg_id_range", "self", ".", "=", "seg_id_help", "#NEWLINE#", "supported_provider_types", "=", "neutron_settings", "(", "supported_provider_types", "network_type_choices", "=", "#INDENT#", "network_type_choices", "net_type", "for", "net_type", "in", "(", "net_type", "supported_provider_types", "(", "network_type_choices", ")", "self", ".", "#INDENT#", "self", "=", "network_type_choices", "#INDENT#", "self"]}}
{"position": {"error_location": 18, "repair_targets": [12, 15, 20], "repair_candidates": [2, 5, 30, 35, 36, 37, 38, 43, 46, 49, 52, 55, 58, 18, 73, 75, 78, 8, 14, 69, 72, 81, 88, 1, 4, 10, 26, 27, 12, 15, 20, 6, 9, 7, 16, 22, 28, 32, 66, 40, 62, 0, 3, 21, 24, 25, 34, 41, 44, 47, 50, 54, 56, 59, 83, 86, 90, 64, 68, 79]}}
{"prediction": {"error_location": 0.8763221502304077, "repair_targets": [0.9825206398963928, 3.223030944354832e-05, 5.943537689745426e-05], "repair_candidates": [0.0006616166792809963, 0.0014621939044445753, 0.0030918563716113567, 0.000185233453521505, 0.0026482909452170134, 0.00010917201143456623, 0.00023376233002636582, 6.350644980557263e-05, 2.135144495696295e-05, 0.00013080754433758557, 0.006528148427605629, 0.9825206398963928, 3.1977949674910633e-06, 3.223030944354832e-05, 0.00022502109641209245, 5.501942723640241e-06, 5.943537689745426e-05, 1.4450567505264189e-05, 1.9835924831568263e-05, 4.3592638121481286e-07, 4.3315188236192625e-07, 2.170086872865795e-06, 3.7552799767581746e-05, 1.181191601062892e-05, 2.0034425688209012e-05, 5.193267497816123e-06, 4.765475387102924e-05, 5.540055099118035e-07, 1.4219356671674177e-05, 5.3692551773565356e-06, 7.48202774047968e-06, 4.607711161952466e-06, 1.7330496859813138e-07, 0.00010244549048366025, 6.04052047492587e-07, 4.6597338950959966e-05, 7.241363846333115e-07, 0.00010322525486117229, 2.0421707631612662e-06, 8.9491848484613e-05, 2.6052233806694858e-05, 6.069755272619659e-06, 1.9709179923665943e-06, 0.0005538776749745011, 2.389072506048251e-06, 5.318485818861518e-06, 0.000307746056932956, 1.7270143871428445e-05, 3.539861427270807e-05, 6.9980619628040586e-06, 4.7873745643300936e-06, 4.691229150921572e-06, 0.0004177990776952356, 8.265540600405075e-06, 2.2002575406077085e-06, 6.277974171098322e-05, 1.5359629514932749e-06, 1.473654151595838e-06, 5.046921614848543e-06, 9.216665603162255e-06], "target_probs": 0.9826123118400574}}


{"result": {"time": "2021-02-11 10:39:04.269990", "n_pass": [1083, 147, 121], "n_token": 90, "loss": [0.09751930832862854, 0.01623712107539177], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["self", "request", "args", "self", "request", "args", "kwargs", "tenant_choices", "tenants", "has_more", "request", "for", "tenant", "in", "tenants", "tenant", "tenant_choices", "(", "net_type", ",", "tenant", "self", "tenant_choices", "#NEWLINE#", "self", "self", "request", "request", "neutron_settings", "#NEWLINE#", "seg_id_range", "=", "neutron_settings", ".", "self", "seg_id_range", "seg_id_range", "seg_id_range", "seg_id_range", "#NEWLINE#", "seg_id_help", "self", ".", "seg_id_range", "self", ".", "seg_id_range", "self", ".", "seg_id_range", "self", ".", "seg_id_range", "#NEWLINE#", "self", "seg_id_range", "self", ".", "seg_id_range", "self", "=", "seg_id_help", "#NEWLINE#", "supported_provider_types", "=", "neutron_settings", "(", "supported_provider_types", "network_type_choices", "=", "#INDENT#", "network_type_choices", "net_type", "for", "net_type", "in", "(", "net_type", "supported_provider_types", "(", "network_type_choices", ")", "self", ".", "#INDENT#", "self", "=", "network_type_choices", "#INDENT#", "self"]}}
{"position": {"error_location": 18, "repair_targets": [12, 15, 20], "repair_candidates": [2, 5, 30, 35, 36, 37, 38, 43, 46, 49, 52, 55, 58, 18, 72, 74, 77, 8, 14, 68, 71, 80, 87, 1, 4, 10, 26, 27, 12, 15, 20, 6, 9, 7, 16, 22, 28, 32, 65, 40, 61, 0, 3, 21, 24, 25, 34, 41, 44, 47, 50, 54, 56, 59, 82, 85, 89, 63, 67, 78]}}
{"prediction": {"error_location": 0.9070848226547241, "repair_targets": [0.9838160872459412, 2.9210626962594688e-05, 4.8677251470508054e-05], "repair_candidates": [0.0006205716636031866, 0.001405741786584258, 0.0029638854321092367, 0.00016186556604225188, 0.0024769422598183155, 0.000101163808722049, 0.00021591719996649772, 5.4420099331764504e-05, 1.9839153537759557e-05, 0.00012568171950988472, 0.006617133505642414, 0.9838160872459412, 2.6941663691104623e-06, 2.9210626962594688e-05, 0.00020330330880824476, 4.881501808995381e-06, 4.8677251470508054e-05, 1.103103750210721e-05, 1.612668711459264e-05, 3.134204291654896e-07, 3.3909066132764565e-07, 1.5680858496125438e-06, 2.4524357286281884e-05, 8.0412228271598e-06, 1.460257681173971e-05, 1.8588265220387257e-06, 3.687519347295165e-05, 5.075269200460752e-07, 1.033851640386274e-05, 3.6194826407154324e-06, 4.446039838512661e-06, 4.1212661017198116e-06, 1.3880888616313314e-07, 5.942283314652741e-05, 3.602200990826532e-07, 2.8095657398807816e-05, 4.240513646891486e-07, 5.869598317076452e-05, 8.45196382215363e-07, 3.5275897971587256e-05, 1.4419574654311873e-05, 9.642053555580787e-06, 2.9502953111659735e-06, 9.808901086216792e-05, 0.00010776043200166896, 1.5091313798620831e-06, 0.00012230552965775132, 1.0090437172038946e-05, 1.3977743037685286e-05, 4.4444796003517695e-06, 3.65073788088921e-06, 3.453799990893458e-06, 0.00035330592072568834, 6.715158178849379e-06, 1.7702269587971386e-06, 4.639990220312029e-05, 1.2296326303840033e-06, 1.1113731943623861e-06, 3.0696769499627408e-06, 4.608930794347543e-06], "target_probs": 0.9838939905166626}}


{"result": {"time": "2021-02-11 10:39:04.528904", "n_pass": [1086, 149, 122], "n_token": 89, "loss": [0.08882950991392136, 0.014792959205806255], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["self", "request", "args", "self", "request", "args", "kwargs", "tenant_choices", "tenants", "has_more", "request", "for", "tenant", "in", "tenants", "tenant", "tenant_choices", "(", "net_type", ",", "tenant", "self", "tenant_choices", "#NEWLINE#", "self", "self", "request", "request", "neutron_settings", "#NEWLINE#", "seg_id_range", "=", "neutron_settings", ".", "self", "seg_id_range", "seg_id_range", "seg_id_range", "seg_id_range", "#NEWLINE#", "seg_id_help", "self", ".", "seg_id_range", "self", ".", "seg_id_range", "self", ".", "seg_id_range", "self", ".", "seg_id_range", "#NEWLINE#", "self", "seg_id_range", "self", ".", "seg_id_range", "self", "=", "seg_id_help", "supported_provider_types", "=", "neutron_settings", "(", "supported_provider_types", "network_type_choices", "=", "#INDENT#", "network_type_choices", "net_type", "for", "net_type", "in", "(", "net_type", "supported_provider_types", "(", "network_type_choices", ")", "self", ".", "#INDENT#", "self", "=", "network_type_choices", "#INDENT#", "self"]}}
{"position": {"error_location": 18, "repair_targets": [12, 15, 20], "repair_candidates": [2, 5, 30, 35, 36, 37, 38, 43, 46, 49, 52, 55, 58, 18, 71, 73, 76, 8, 14, 67, 70, 79, 86, 1, 4, 10, 26, 27, 12, 15, 20, 6, 9, 7, 16, 22, 28, 32, 64, 40, 61, 0, 3, 21, 24, 25, 34, 41, 44, 47, 50, 54, 56, 59, 81, 84, 88, 62, 66, 77]}}
{"prediction": {"error_location": 0.9150013327598572, "repair_targets": [0.9852530360221863, 2.2782509404351003e-05, 4.012837234768085e-05], "repair_candidates": [0.0005365383112803102, 0.0012374988291412592, 0.0026738704182207584, 0.0001204016080009751, 0.0020220985170453787, 8.816888293949887e-05, 0.00020187351037748158, 3.8601971027674153e-05, 1.6060635971371084e-05, 0.00011234528210479766, 0.006385047920048237, 0.9852530360221863, 1.868599383669789e-06, 2.2782509404351003e-05, 0.00018546679348219186, 3.6967830965295434e-06, 4.012837234768085e-05, 7.609389285789803e-06, 1.165340199804632e-05, 2.491166242180043e-07, 2.2956594136758213e-07, 1.141591837949818e-06, 1.7087606465793215e-05, 4.7182311391225085e-06, 8.726255146029871e-06, 1.4667671166535001e-06, 2.485236655047629e-05, 3.214230730463896e-07, 8.14410304883495e-06, 3.1506901905231643e-06, 3.238123099436052e-06, 2.7723401672119508e-06, 1.2652084535602626e-07, 5.6950269936351106e-05, 4.059736795625213e-07, 2.5824707336141728e-05, 5.016874524699233e-07, 4.304431422497146e-05, 6.453483365476131e-07, 2.5858964363578707e-05, 1.076551325240871e-05, 3.863473466481082e-06, 2.2538902157975826e-06, 8.011829049792141e-05, 0.00014350363926496357, 9.943975783244241e-06, 3.382217255420983e-05, 5.535265518119559e-05, 6.422665137506556e-06, 2.993471980516915e-06, 2.720588327065343e-06, 2.2766705569665646e-06, 0.000408987863920629, 4.351929874246707e-06, 1.631248892408621e-06, 2.9469742003129795e-05, 1.9709857497218763e-06, 2.589191581137129e-06, 1.9539734239515383e-06, 6.840295554866316e-06], "target_probs": 0.9853159189224243}}


{"result": {"time": "2021-02-11 10:39:04.657757", "n_pass": [1088, 150, 123], "n_token": 88, "loss": [0.07786456495523453, 0.015353946946561337], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["self", "request", "args", "self", "request", "args", "kwargs", "tenant_choices", "tenants", "has_more", "request", "for", "tenant", "in", "tenants", "tenant", "tenant_choices", "(", "net_type", ",", "tenant", "self", "tenant_choices", "#NEWLINE#", "self", "self", "request", "request", "neutron_settings", "#NEWLINE#", "seg_id_range", "=", "neutron_settings", ".", "self", "seg_id_range", "seg_id_range", "seg_id_range", "seg_id_range", "#NEWLINE#", "seg_id_help", "self", ".", "seg_id_range", "self", ".", "seg_id_range", "self", ".", "seg_id_range", "self", ".", "seg_id_range", "#NEWLINE#", "self", "seg_id_range", "self", ".", "seg_id_range", "self", "=", "seg_id_help", "supported_provider_types", "neutron_settings", "(", "supported_provider_types", "network_type_choices", "=", "#INDENT#", "network_type_choices", "net_type", "for", "net_type", "in", "(", "net_type", "supported_provider_types", "(", "network_type_choices", ")", "self", ".", "#INDENT#", "self", "=", "network_type_choices", "#INDENT#", "self"]}}
{"position": {"error_location": 18, "repair_targets": [12, 15, 20], "repair_candidates": [2, 5, 30, 35, 36, 37, 38, 43, 46, 49, 52, 55, 58, 18, 70, 72, 75, 8, 14, 66, 69, 78, 85, 1, 4, 10, 26, 27, 12, 15, 20, 6, 9, 7, 16, 22, 28, 32, 63, 40, 61, 0, 3, 21, 24, 25, 34, 41, 44, 47, 50, 54, 56, 59, 80, 83, 87, 62, 65, 76]}}
{"prediction": {"error_location": 0.9250898957252502, "repair_targets": [0.9846978187561035, 2.677999327715952e-05, 3.875856418744661e-05], "repair_candidates": [0.0005867482395842671, 0.0013224026188254356, 0.00280375056900084, 0.00014706414367537946, 0.00229574809782207, 9.595965093467385e-05, 0.0002114091330440715, 4.9364622100256383e-05, 1.8262855519424193e-05, 0.0001181936968350783, 0.006440503988415003, 0.9846978187561035, 2.4188066163333133e-06, 2.677999327715952e-05, 0.00018673630256671458, 4.268655629857676e-06, 3.875856418744661e-05, 8.146207619574852e-06, 1.3355517694435548e-05, 2.304877284586837e-07, 2.407372505786043e-07, 1.1299813422738225e-06, 1.8346105207456276e-05, 5.632046395476209e-06, 1.300152507610619e-05, 1.967488969967235e-06, 3.5648390621645376e-05, 3.785855255955539e-07, 9.984769349102862e-06, 3.1635038340027677e-06, 3.751018311959342e-06, 4.430367880559061e-06, 1.2117618553020293e-07, 5.447245348477736e-05, 3.330374056531582e-07, 2.569661046436522e-05, 4.417371428644401e-07, 4.521057417150587e-05, 8.359634762200585e-07, 3.147048846585676e-05, 1.1048950000258628e-05, 5.886751296202419e-06, 2.5698950594232883e-06, 6.731288885930553e-05, 0.00011622507736319676, 1.608216166459897e-06, 4.453297606232809e-06, 1.7954442228074186e-05, 2.048876376647968e-05, 4.822115897695767e-06, 2.7585256248130463e-06, 2.468791308274376e-06, 0.0003622749063652009, 4.811352937394986e-06, 1.6647646816636552e-06, 3.56410164386034e-05, 1.8102605281455908e-06, 2.2956187422096264e-06, 2.450343117743614e-06, 7.294341685337713e-06], "target_probs": 0.9847633242607117}}


{"result": {"time": "2021-02-11 10:39:04.787275", "n_pass": [1090, 151, 124], "n_token": 87, "loss": [0.0737796500325203, 0.01478080078959465], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["self", "request", "args", "self", "request", "args", "kwargs", "tenant_choices", "tenants", "has_more", "request", "for", "tenant", "in", "tenants", "tenant", "tenant_choices", "(", "net_type", ",", "tenant", "self", "tenant_choices", "#NEWLINE#", "self", "self", "request", "request", "neutron_settings", "#NEWLINE#", "seg_id_range", "=", "neutron_settings", ".", "self", "seg_id_range", "seg_id_range", "seg_id_range", "seg_id_range", "#NEWLINE#", "seg_id_help", "self", ".", "seg_id_range", "self", ".", "seg_id_range", "self", ".", "seg_id_range", "self", ".", "seg_id_range", "#NEWLINE#", "self", "seg_id_range", "self", ".", "seg_id_range", "self", "=", "seg_id_help", "supported_provider_types", "neutron_settings", "supported_provider_types", "network_type_choices", "=", "#INDENT#", "network_type_choices", "net_type", "for", "net_type", "in", "(", "net_type", "supported_provider_types", "(", "network_type_choices", ")", "self", ".", "#INDENT#", "self", "=", "network_type_choices", "#INDENT#", "self"]}}
{"position": {"error_location": 18, "repair_targets": [12, 15, 20], "repair_candidates": [2, 5, 30, 35, 36, 37, 38, 43, 46, 49, 52, 55, 58, 18, 69, 71, 74, 8, 14, 65, 68, 77, 84, 1, 4, 10, 26, 27, 12, 15, 20, 6, 9, 7, 16, 22, 28, 32, 63, 40, 61, 0, 3, 21, 24, 25, 34, 41, 44, 47, 50, 54, 56, 59, 79, 82, 86, 62, 64, 75]}}
{"prediction": {"error_location": 0.9288762211799622, "repair_targets": [0.985266923904419, 2.276013583468739e-05, 3.8179503462743014e-05], "repair_candidates": [0.000553373945876956, 0.0012620497727766633, 0.00272617326118052, 0.00012490898370742798, 0.0020633526146411896, 9.089696686714888e-05, 0.00021455492242239416, 4.105057450942695e-05, 1.6302679796353914e-05, 0.00011278012971160933, 0.0064051514491438866, 0.985266923904419, 1.8897350173574523e-06, 2.276013583468739e-05, 0.00018209281552117318, 3.574303946152213e-06, 3.8179503462743014e-05, 6.713731636409648e-06, 1.0613729500619229e-05, 2.0890992402655684e-07, 2.5741931608536106e-07, 9.275022989641002e-07, 1.252009860763792e-05, 3.069885451623122e-06, 9.138496352534276e-06, 1.3282575537232333e-06, 1.7887343346956186e-05, 3.241621300276165e-07, 8.262394658231642e-06, 2.8423605726857204e-06, 3.804115294769872e-06, 3.2644375096424483e-06, 1.1434161706347368e-07, 3.892324821208604e-05, 3.6707237427435757e-07, 2.1525735064642504e-05, 4.553987196231901e-07, 4.018109757453203e-05, 8.365926760234288e-07, 2.663252416823525e-05, 4.070057457283838e-06, 1.697115067145205e-06, 8.245954177255044e-07, 6.55631665722467e-05, 6.031719021848403e-05, 5.444983344204957e-06, 4.497381269175094e-06, 6.337233571684919e-06, 6.30493104836205e-07, 2.305645466549322e-06, 2.408753971394617e-06, 1.639963329580496e-06, 0.00046941734035499394, 3.7897113998042187e-06, 1.3768531061941758e-06, 2.2881860786583275e-05, 1.5992915223250748e-06, 1.9184581105946563e-06, 1.7695741689749411e-06, 5.2188197514624335e-06], "target_probs": 0.9853278994560242}}


{"result": {"time": "2021-02-11 10:39:04.916382", "n_pass": [1093, 152, 125], "n_token": 86, "loss": [0.07174467295408249, 0.015516838058829308], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["self", "request", "args", "self", "request", "args", "kwargs", "tenant_choices", "tenants", "has_more", "request", "for", "tenant", "in", "tenants", "tenant", "tenant_choices", "(", "net_type", ",", "tenant", "self", "tenant_choices", "#NEWLINE#", "self", "self", "request", "request", "neutron_settings", "#NEWLINE#", "seg_id_range", "=", "neutron_settings", ".", "self", "seg_id_range", "seg_id_range", "seg_id_range", "seg_id_range", "#NEWLINE#", "seg_id_help", "self", ".", "seg_id_range", "self", ".", "seg_id_range", "self", ".", "seg_id_range", "self", ".", "seg_id_range", "#NEWLINE#", "self", "seg_id_range", "self", ".", "seg_id_range", "self", "=", "seg_id_help", "supported_provider_types", "neutron_settings", "supported_provider_types", "network_type_choices", "#INDENT#", "network_type_choices", "net_type", "for", "net_type", "in", "(", "net_type", "supported_provider_types", "(", "network_type_choices", ")", "self", ".", "#INDENT#", "self", "=", "network_type_choices", "#INDENT#", "self"]}}
{"position": {"error_location": 18, "repair_targets": [12, 15, 20], "repair_candidates": [2, 5, 30, 35, 36, 37, 38, 43, 46, 49, 52, 55, 58, 18, 68, 70, 73, 8, 14, 65, 67, 76, 83, 1, 4, 10, 26, 27, 12, 15, 20, 6, 9, 7, 16, 22, 28, 32, 63, 40, 61, 0, 3, 21, 24, 25, 34, 41, 44, 47, 50, 54, 56, 59, 78, 81, 85, 62, 64, 74]}}
{"prediction": {"error_location": 0.9307684302330017, "repair_targets": [0.9845458269119263, 2.5042412744369358e-05, 3.20884064421989e-05], "repair_candidates": [0.0005899639218114316, 0.0012954989215359092, 0.0027458490803837776, 0.00013568653957918286, 0.002233648905530572, 9.985166252590716e-05, 0.0002365521650062874, 4.969389920006506e-05, 1.771664210536983e-05, 0.00011692059342749417, 0.006448033265769482, 0.9845458269119263, 2.214515916421078e-06, 2.5042412744369358e-05, 0.00017866387497633696, 3.582553290470969e-06, 3.20884064421989e-05, 6.205435056472197e-06, 1.0875163752643857e-05, 1.9428274811161828e-07, 2.742748392847716e-07, 8.574298817620729e-07, 8.115114724205341e-06, 3.0721562325197738e-06, 6.4837272475415375e-06, 1.535419755782641e-06, 1.6440140825579874e-05, 2.9964755299261014e-07, 8.084325600066222e-06, 2.9137258934497368e-06, 3.254469447711017e-06, 2.8301110432948917e-06, 1.475705460052268e-07, 4.304341564420611e-05, 5.593429932559957e-07, 2.350727481825743e-05, 4.943605063090217e-07, 4.0535200241720304e-05, 1.1094833780589397e-06, 3.110268880845979e-05, 6.2877147684048396e-06, 2.239212108179345e-06, 1.4903698684065603e-06, 5.9094629250466824e-05, 0.00012286148557905108, 2.9999625894561177e-06, 4.221407834847923e-06, 1.5966914361342788e-05, 5.813469670101767e-07, 9.427510576642817e-07, 5.547814453166211e-06, 6.532454790431075e-06, 0.0007598865195177495, 3.906670372089138e-06, 1.938860123118502e-06, 2.6680323571781628e-05, 1.6104878568512504e-06, 1.8557401517682592e-06, 2.1673051833204227e-06, 4.4727412387146614e-06], "target_probs": 0.9846029281616211}}


{"result": {"time": "2021-02-11 10:39:05.043838", "n_pass": [1094, 153, 126], "n_token": 85, "loss": [0.05410722270607948, 0.019894493743777275], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["self", "request", "args", "self", "request", "args", "kwargs", "tenant_choices", "tenants", "has_more", "request", "for", "tenant", "in", "tenants", "tenant", "tenant_choices", "(", "net_type", ",", "tenant", "self", "tenant_choices", "#NEWLINE#", "self", "self", "request", "request", "neutron_settings", "#NEWLINE#", "seg_id_range", "=", "neutron_settings", ".", "self", "seg_id_range", "seg_id_range", "seg_id_range", "seg_id_range", "#NEWLINE#", "seg_id_help", "self", ".", "seg_id_range", "self", ".", "seg_id_range", "self", ".", "seg_id_range", "self", ".", "seg_id_range", "#NEWLINE#", "self", "seg_id_range", "self", ".", "seg_id_range", "self", "=", "seg_id_help", "supported_provider_types", "neutron_settings", "supported_provider_types", "network_type_choices", "network_type_choices", "net_type", "for", "net_type", "in", "(", "net_type", "supported_provider_types", "(", "network_type_choices", ")", "self", ".", "#INDENT#", "self", "=", "network_type_choices", "#INDENT#", "self"]}}
{"position": {"error_location": 18, "repair_targets": [12, 15, 20], "repair_candidates": [2, 5, 30, 35, 36, 37, 38, 43, 46, 49, 52, 55, 58, 18, 67, 69, 72, 8, 14, 65, 66, 75, 82, 1, 4, 10, 26, 27, 12, 15, 20, 6, 9, 7, 16, 22, 28, 32, 63, 40, 61, 0, 3, 21, 24, 25, 34, 41, 44, 47, 50, 54, 56, 59, 77, 80, 84, 62, 64, 73]}}
{"prediction": {"error_location": 0.9473304152488708, "repair_targets": [0.9802286028862, 3.903711694874801e-05, 3.44503641827032e-05], "repair_candidates": [0.000825227762106806, 0.0016733963275328279, 0.003320972668007016, 0.000242169204284437, 0.0033224818762391806, 0.00013310082431416959, 0.0002815480111166835, 9.719929221319035e-05, 2.6910434826277196e-05, 0.00014862393436487764, 0.007380864582955837, 0.9802286028862, 4.196132977085654e-06, 3.903711694874801e-05, 0.00020184116146992892, 5.054093435319373e-06, 3.44503641827032e-05, 9.228839189745486e-06, 1.258001611859072e-05, 2.692445093543938e-07, 4.173983541022608e-07, 9.989803402277175e-07, 1.3504626622307114e-05, 4.8641049943398684e-06, 9.036174560606014e-06, 2.2346741843648488e-06, 3.1059738830663264e-05, 3.3207140859303763e-07, 8.189946129277814e-06, 2.6798581984621705e-06, 2.8383763037709286e-06, 3.967245447711321e-06, 1.6633421751066635e-07, 5.656056237057783e-05, 6.134650902822614e-07, 3.3462543797213584e-05, 7.069463094921957e-07, 6.955647404538468e-05, 1.3940665439804434e-06, 4.109883593628183e-05, 7.2381290010525845e-06, 3.994625785708195e-06, 2.034608769463375e-06, 8.803737728158012e-05, 0.00015847256872802973, 4.119173354411032e-06, 6.175661837914959e-06, 2.8187292627990246e-05, 1.5207534715955262e-06, 1.1563953421500628e-06, 8.7449365082648e-07, 4.4716275624523405e-06, 0.0013644876889884472, 3.5212165130360518e-06, 1.7350829466522555e-06, 3.912865577149205e-05, 2.058949576166924e-06, 2.1566825125773903e-06, 2.7436392429081025e-06, 6.483812740043504e-06], "target_probs": 0.980302095413208}}


{"result": {"time": "2021-02-11 10:39:05.171359", "n_pass": [1097, 154, 127], "n_token": 84, "loss": [0.08339716494083405, 0.027469653636217117], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["self", "request", "args", "self", "request", "args", "kwargs", "tenant_choices", "tenants", "has_more", "request", "for", "tenant", "in", "tenants", "tenant", "tenant_choices", "(", "net_type", ",", "tenant", "self", "tenant_choices", "#NEWLINE#", "self", "self", "request", "request", "neutron_settings", "#NEWLINE#", "seg_id_range", "=", "neutron_settings", ".", "self", "seg_id_range", "seg_id_range", "seg_id_range", "seg_id_range", "#NEWLINE#", "seg_id_help", "self", ".", "seg_id_range", "self", ".", "seg_id_range", "self", ".", "seg_id_range", "self", ".", "seg_id_range", "#NEWLINE#", "self", "seg_id_range", "self", ".", "seg_id_range", "self", "=", "seg_id_help", "supported_provider_types", "neutron_settings", "supported_provider_types", "network_type_choices", "network_type_choices", "net_type", "net_type", "in", "(", "net_type", "supported_provider_types", "(", "network_type_choices", ")", "self", ".", "#INDENT#", "self", "=", "network_type_choices", "#INDENT#", "self"]}}
{"position": {"error_location": 18, "repair_targets": [12, 15, 20], "repair_candidates": [2, 5, 30, 35, 36, 37, 38, 43, 46, 49, 52, 55, 58, 18, 67, 68, 71, 8, 14, 65, 66, 74, 81, 1, 4, 10, 26, 27, 12, 15, 20, 6, 9, 7, 16, 22, 28, 32, 63, 40, 61, 0, 3, 21, 24, 25, 34, 41, 44, 47, 50, 54, 56, 59, 76, 79, 83, 62, 64, 72]}}
{"prediction": {"error_location": 0.9199855923652649, "repair_targets": [0.9727329611778259, 9.183039946947247e-05, 7.937366899568588e-05], "repair_candidates": [0.0013898068573325872, 0.002239334862679243, 0.003899055067449808, 0.0005128991324454546, 0.006371735129505396, 0.00023872435849625617, 0.0003422181762289256, 0.00034817133564502, 7.559153164038435e-05, 0.00027633257559500635, 0.009151658974587917, 0.9727329611778259, 1.4022917639522348e-05, 9.183039946947247e-05, 0.0003415839746594429, 1.8412623830954544e-05, 7.937366899568588e-05, 2.449367821100168e-05, 3.432564335525967e-05, 5.423788707048516e-07, 7.875920573496842e-07, 2.669751438588719e-06, 3.060168455704115e-05, 1.0279608432028908e-05, 5.29719254700467e-05, 1.675481689744629e-05, 0.00011510327749419957, 1.832977886806475e-06, 2.6001298465416767e-05, 6.115604264778085e-06, 7.607523912156466e-06, 6.752921763109043e-06, 3.066633667003771e-07, 0.0001105150586226955, 1.0383274684500066e-06, 7.746490882709622e-05, 1.2858846503149834e-06, 0.0001880743948277086, 2.008062892855378e-06, 0.00010259654663968831, 1.5664551028748974e-05, 9.757417501532473e-06, 3.872037723340327e-06, 0.00023203276214189827, 0.0002938141406048089, 1.2055434126523323e-05, 9.497904102317989e-06, 6.669791764579713e-05, 4.878468644164968e-06, 4.014380920125404e-06, 1.1379362376828794e-06, 5.200040959607577e-06, 0.00020194242824800313, 5.190996307646856e-05, 5.432125817605993e-06, 9.113350097322837e-05, 4.930494014843134e-06, 7.406858003378147e-06, 8.159915523719974e-06, 2.6577417884254828e-05], "target_probs": 0.9729042053222656}}


{"result": {"time": "2021-02-11 10:39:05.297493", "n_pass": [1099, 155, 128], "n_token": 83, "loss": [0.05280439928174019, 0.018893277272582054], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["self", "request", "args", "self", "request", "args", "kwargs", "tenant_choices", "tenants", "has_more", "request", "for", "tenant", "in", "tenants", "tenant", "tenant_choices", "(", "net_type", ",", "tenant", "self", "tenant_choices", "#NEWLINE#", "self", "self", "request", "request", "neutron_settings", "#NEWLINE#", "seg_id_range", "=", "neutron_settings", ".", "self", "seg_id_range", "seg_id_range", "seg_id_range", "seg_id_range", "#NEWLINE#", "seg_id_help", "self", ".", "seg_id_range", "self", ".", "seg_id_range", "self", ".", "seg_id_range", "self", ".", "seg_id_range", "#NEWLINE#", "self", "seg_id_range", "self", ".", "seg_id_range", "self", "=", "seg_id_help", "supported_provider_types", "neutron_settings", "supported_provider_types", "network_type_choices", "network_type_choices", "net_type", "net_type", "(", "net_type", "supported_provider_types", "(", "network_type_choices", ")", "self", ".", "#INDENT#", "self", "=", "network_type_choices", "#INDENT#", "self"]}}
{"position": {"error_location": 18, "repair_targets": [12, 15, 20], "repair_candidates": [2, 5, 30, 35, 36, 37, 38, 43, 46, 49, 52, 55, 58, 18, 67, 68, 70, 8, 14, 65, 66, 73, 80, 1, 4, 10, 26, 27, 12, 15, 20, 6, 9, 7, 16, 22, 28, 32, 63, 40, 61, 0, 3, 21, 24, 25, 34, 41, 44, 47, 50, 54, 56, 59, 75, 78, 82, 62, 64, 71]}}
{"prediction": {"error_location": 0.9485654234886169, "repair_targets": [0.9811971783638, 4.626359077519737e-05, 4.065069879288785e-05], "repair_candidates": [0.0008766900282353163, 0.0016888007521629333, 0.0032805250957608223, 0.00032269314397126436, 0.004121045116335154, 0.0001354448322672397, 0.0002107090112986043, 0.0001404004724463448, 3.730641765287146e-05, 0.00015817099483683705, 0.006604436319321394, 0.9811971783638, 6.122155809862306e-06, 4.626359077519737e-05, 0.00019565646653063595, 7.755627848382574e-06, 4.065069879288785e-05, 1.0723211744334549e-05, 1.7105339793488383e-05, 2.381967618703129e-07, 5.108907430440013e-07, 1.4820000160398195e-06, 1.2486566447478253e-05, 7.459241260221461e-06, 2.4730758013902232e-05, 6.587441930605564e-06, 4.3191925215069205e-05, 6.756627044524066e-07, 1.1603205166466068e-05, 2.9316270229173824e-06, 3.051411567867035e-06, 3.767591351788724e-06, 2.0044181781031511e-07, 5.626802521874197e-05, 4.552861696538457e-07, 3.244460094720125e-05, 6.773717586838757e-07, 7.492432632716373e-05, 1.0780903494378435e-06, 4.638300015358254e-05, 6.17532396063325e-06, 4.004312359029427e-06, 1.994047124753706e-06, 9.771526674740016e-05, 0.00010756319534266368, 4.112487204110948e-06, 3.729238187588635e-06, 3.492578616715036e-05, 1.3992901131132385e-06, 1.5344310213549761e-06, 3.0494143743453606e-07, 4.621018945272226e-07, 7.75860680732876e-05, 0.0001376077125314623, 1.50922724060365e-05, 5.153939491719939e-05, 2.904062284869724e-06, 4.544886451185448e-06, 4.656420514947968e-06, 1.3268752809381112e-05], "target_probs": 0.9812840819358826}}


{"result": {"time": "2021-02-11 10:39:05.423156", "n_pass": [1100, 156, 129], "n_token": 82, "loss": [0.07015218585729599, 0.0338309220969677], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["self", "request", "args", "self", "request", "args", "kwargs", "tenant_choices", "tenants", "has_more", "request", "for", "tenant", "in", "tenants", "tenant", "tenant_choices", "(", "net_type", ",", "tenant", "self", "tenant_choices", "#NEWLINE#", "self", "self", "request", "request", "neutron_settings", "#NEWLINE#", "seg_id_range", "=", "neutron_settings", ".", "self", "seg_id_range", "seg_id_range", "seg_id_range", "seg_id_range", "#NEWLINE#", "seg_id_help", "self", ".", "seg_id_range", "self", ".", "seg_id_range", "self", ".", "seg_id_range", "self", ".", "seg_id_range", "#NEWLINE#", "self", "seg_id_range", "self", ".", "seg_id_range", "self", "=", "seg_id_help", "supported_provider_types", "neutron_settings", "supported_provider_types", "network_type_choices", "network_type_choices", "net_type", "net_type", "net_type", "supported_provider_types", "(", "network_type_choices", ")", "self", ".", "#INDENT#", "self", "=", "network_type_choices", "#INDENT#", "self"]}}
{"position": {"error_location": 18, "repair_targets": [12, 15, 20], "repair_candidates": [2, 5, 30, 35, 36, 37, 38, 43, 46, 49, 52, 55, 58, 18, 67, 68, 69, 8, 14, 65, 66, 72, 79, 1, 4, 10, 26, 27, 12, 15, 20, 6, 9, 7, 16, 22, 28, 32, 63, 40, 61, 0, 3, 21, 24, 25, 34, 41, 44, 47, 50, 54, 56, 59, 74, 77, 81, 62, 64, 70]}}
{"prediction": {"error_location": 0.9322519302368164, "repair_targets": [0.9664804935455322, 0.00013954396126791835, 0.00011490839824546129], "repair_candidates": [0.0016628897283226252, 0.0023581800051033497, 0.004149603191763163, 0.0007068288396112621, 0.008433128707110882, 0.0003434718237258494, 0.0005443852860480547, 0.0009582688799127936, 0.00015447477926500142, 0.0004132637404836714, 0.00994079653173685, 0.9664804935455322, 2.7844243959407322e-05, 0.00013954396126791835, 0.0004727054911199957, 3.172812284901738e-05, 0.00011490839824546129, 4.526148768491112e-05, 5.4002135584596545e-05, 7.34975458271947e-07, 1.7441664112993749e-06, 4.230839294905309e-06, 5.042441262048669e-05, 1.865621561591979e-05, 0.00010726996697485447, 3.34451615344733e-05, 0.00024370438768528402, 3.3043268103938317e-06, 4.490069841267541e-05, 9.516956197330728e-06, 9.612898793420754e-06, 9.15619148145197e-06, 4.314768773383548e-07, 0.00015114656707737595, 1.3522961808121181e-06, 0.0001062706796801649, 2.0751992906298256e-06, 0.00021578290034085512, 2.1078988083900185e-06, 0.0001616313384147361, 9.872804184851702e-06, 8.04104365670355e-06, 3.5323564588907175e-06, 0.00020267738727852702, 0.00022550644644070417, 2.724131081777159e-05, 1.755615448928438e-05, 7.234766235342249e-05, 8.272993909486104e-06, 9.324448001279961e-06, 8.935182904679095e-07, 2.508277020751848e-06, 0.00011242482287343591, 0.0007561177480965853, 4.212976637063548e-05, 0.00023893624893389642, 5.0184416977572255e-06, 5.785911071143346e-06, 2.0152814613538794e-05, 2.238470369775314e-05], "target_probs": 0.9667349457740784}}


{"result": {"time": "2021-02-11 10:39:05.550273", "n_pass": [1103, 157, 130], "n_token": 81, "loss": [0.062013890594244, 0.028268251568078995], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["self", "request", "args", "self", "request", "args", "kwargs", "tenant_choices", "tenants", "has_more", "request", "for", "tenant", "in", "tenants", "tenant", "tenant_choices", "(", "net_type", ",", "tenant", "self", "tenant_choices", "#NEWLINE#", "self", "self", "request", "request", "neutron_settings", "#NEWLINE#", "seg_id_range", "=", "neutron_settings", ".", "self", "seg_id_range", "seg_id_range", "seg_id_range", "seg_id_range", "#NEWLINE#", "seg_id_help", "self", ".", "seg_id_range", "self", ".", "seg_id_range", "self", ".", "seg_id_range", "self", ".", "seg_id_range", "#NEWLINE#", "self", "seg_id_range", "self", ".", "seg_id_range", "self", "=", "seg_id_help", "supported_provider_types", "neutron_settings", "supported_provider_types", "network_type_choices", "network_type_choices", "net_type", "net_type", "net_type", "supported_provider_types", "network_type_choices", ")", "self", ".", "#INDENT#", "self", "=", "network_type_choices", "#INDENT#", "self"]}}
{"position": {"error_location": 18, "repair_targets": [12, 15, 20], "repair_candidates": [2, 5, 30, 35, 36, 37, 38, 43, 46, 49, 52, 55, 58, 18, 67, 68, 69, 8, 14, 65, 66, 71, 78, 1, 4, 10, 26, 27, 12, 15, 20, 6, 9, 7, 16, 22, 28, 32, 63, 40, 61, 0, 3, 21, 24, 25, 34, 41, 44, 47, 50, 54, 56, 59, 73, 76, 80, 62, 64, 70]}}
{"prediction": {"error_location": 0.9398698210716248, "repair_targets": [0.9719489812850952, 9.054844122147188e-05, 8.802406955510378e-05], "repair_candidates": [0.0013994668843224645, 0.002104158280417323, 0.003871373599395156, 0.0006076129502616823, 0.006745886988937855, 0.0002445883001200855, 0.00037529514520429075, 0.0005726675735786557, 9.703150863060728e-05, 0.0002926364541053772, 0.008472494781017303, 0.9719489812850952, 1.6932548533077352e-05, 9.054844122147188e-05, 0.000385656749131158, 1.9072156646871008e-05, 8.802406955510378e-05, 4.037999315187335e-05, 3.888879655278288e-05, 9.987978728531743e-07, 1.1325226978442515e-06, 3.877390099660261e-06, 3.4929249522974715e-05, 1.2069819604221266e-05, 4.804791751666926e-05, 2.587076414783951e-05, 0.00012790241453330964, 2.021201680690865e-06, 2.7518804927240126e-05, 5.635654815705493e-06, 7.601428933412535e-06, 7.2894213190011214e-06, 3.500357195207471e-07, 0.00011355347669450566, 1.2858398577009211e-06, 0.0001022652504616417, 1.3998692338645924e-06, 0.00015016499673947692, 2.384880417594104e-06, 0.0001284920726902783, 1.4586624274670612e-05, 9.71285771811381e-06, 5.598104962700745e-06, 0.00022977206390351057, 0.0003633704036474228, 1.4039394955034368e-05, 1.3946078979643062e-05, 7.269390334840864e-05, 5.711751782655483e-06, 6.303134796326049e-06, 7.030731694612768e-07, 1.3782976111542666e-06, 4.923774758935906e-05, 0.0006574001163244247, 0.00023550061450805515, 6.13606462138705e-05, 4.145709681324661e-06, 6.9006168814667035e-06, 1.5050959518703166e-05, 1.6012101696105674e-05], "target_probs": 0.9721275568008423}}


{"result": {"time": "2021-02-11 10:39:05.675086", "n_pass": [1105, 158, 131], "n_token": 80, "loss": [0.07597900182008743, 0.03063856065273285], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["self", "request", "args", "self", "request", "args", "kwargs", "tenant_choices", "tenants", "has_more", "request", "for", "tenant", "in", "tenants", "tenant", "tenant_choices", "(", "net_type", ",", "tenant", "self", "tenant_choices", "#NEWLINE#", "self", "self", "request", "request", "neutron_settings", "#NEWLINE#", "seg_id_range", "=", "neutron_settings", ".", "self", "seg_id_range", "seg_id_range", "seg_id_range", "seg_id_range", "#NEWLINE#", "seg_id_help", "self", ".", "seg_id_range", "self", ".", "seg_id_range", "self", ".", "seg_id_range", "self", ".", "seg_id_range", "#NEWLINE#", "self", "seg_id_range", "self", ".", "seg_id_range", "self", "=", "seg_id_help", "supported_provider_types", "neutron_settings", "supported_provider_types", "network_type_choices", "network_type_choices", "net_type", "net_type", "net_type", "supported_provider_types", "network_type_choices", "self", ".", "#INDENT#", "self", "=", "network_type_choices", "#INDENT#", "self"]}}
{"position": {"error_location": 18, "repair_targets": [12, 15, 20], "repair_candidates": [2, 5, 30, 35, 36, 37, 38, 43, 46, 49, 52, 55, 58, 18, 67, 68, 69, 8, 14, 65, 66, 71, 77, 1, 4, 10, 26, 27, 12, 15, 20, 6, 9, 7, 16, 22, 28, 32, 63, 40, 61, 0, 3, 21, 24, 25, 34, 41, 44, 47, 50, 54, 56, 59, 72, 75, 79, 62, 64, 70]}}
{"prediction": {"error_location": 0.9268357753753662, "repair_targets": [0.9696094393730164, 0.00011899007222382352, 9.764073183760047e-05], "repair_candidates": [0.0015055889962241054, 0.002056634984910488, 0.003738907864317298, 0.0006596487364731729, 0.006999449338763952, 0.0002579745778348297, 0.0004185036523267627, 0.0007481739157810807, 0.00011210322554688901, 0.00033383973641321063, 0.009890400804579258, 0.9696094393730164, 2.0668165234383196e-05, 0.00011899007222382352, 0.00046110275434330106, 2.3472111934097484e-05, 9.764073183760047e-05, 4.856272062170319e-05, 7.539098442066461e-05, 1.1962792996200733e-06, 2.2725866983819287e-06, 6.942102118046023e-06, 6.272824975894764e-05, 1.8818813259713352e-05, 4.730061118607409e-05, 6.723093247273937e-05, 0.00014823659148532897, 2.3208574475575006e-06, 3.269129592808895e-05, 6.936159479664639e-06, 8.550470738555305e-06, 7.540914339188021e-06, 4.839170060222386e-07, 0.0001238292461493984, 1.9261863144492963e-06, 0.00011863756662933156, 2.511722414055839e-06, 0.000202416063984856, 4.457782324607251e-06, 0.00017120032862294465, 2.556414074206259e-05, 1.1742722563212737e-05, 1.0544857104832772e-05, 0.00032731398823671043, 0.000798717956058681, 1.5797417290741578e-05, 1.7094132999773137e-05, 0.00010432232375023887, 9.096876965486445e-06, 1.2868857083958574e-05, 8.907271080715873e-07, 1.2602240531123243e-06, 2.9766477382509038e-05, 0.000251468998612836, 8.780146890785545e-05, 2.0806763131986372e-05, 1.9997733033960685e-06, 1.5719375369371846e-05, 2.2924859877093695e-05, 1.9606053683673963e-05], "target_probs": 0.9698260426521301}}


{"result": {"time": "2021-02-11 10:39:05.799639", "n_pass": [1107, 159, 132], "n_token": 79, "loss": [0.05849982425570488, 0.02816365659236908], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["self", "request", "args", "self", "request", "args", "kwargs", "tenant_choices", "tenants", "has_more", "request", "for", "tenant", "in", "tenants", "tenant", "tenant_choices", "(", "net_type", ",", "tenant", "self", "tenant_choices", "#NEWLINE#", "self", "self", "request", "request", "neutron_settings", "#NEWLINE#", "seg_id_range", "=", "neutron_settings", ".", "self", "seg_id_range", "seg_id_range", "seg_id_range", "seg_id_range", "#NEWLINE#", "seg_id_help", "self", ".", "seg_id_range", "self", ".", "seg_id_range", "self", ".", "seg_id_range", "self", ".", "seg_id_range", "#NEWLINE#", "self", "seg_id_range", "self", ".", "seg_id_range", "self", "=", "seg_id_help", "supported_provider_types", "neutron_settings", "supported_provider_types", "network_type_choices", "network_type_choices", "net_type", "net_type", "net_type", "supported_provider_types", "network_type_choices", "self", "#INDENT#", "self", "=", "network_type_choices", "#INDENT#", "self"]}}
{"position": {"error_location": 18, "repair_targets": [12, 15, 20], "repair_candidates": [2, 5, 30, 35, 36, 37, 38, 43, 46, 49, 52, 55, 58, 18, 67, 68, 69, 8, 14, 65, 66, 71, 76, 1, 4, 10, 26, 27, 12, 15, 20, 6, 9, 7, 16, 22, 28, 32, 63, 40, 61, 0, 3, 21, 24, 25, 34, 41, 44, 47, 50, 54, 56, 59, 72, 74, 78, 62, 64, 70]}}
{"prediction": {"error_location": 0.9431781768798828, "repair_targets": [0.9720280766487122, 0.00010577781358733773, 9.538783342577517e-05], "repair_candidates": [0.0014658286236226559, 0.0019582181703299284, 0.003444505389779806, 0.0005681737675331533, 0.006457505747675896, 0.00023171120847109705, 0.00035745391505770385, 0.0004733855603262782, 7.924946112325415e-05, 0.0003179239865858108, 0.009221987798810005, 0.9720280766487122, 2.0096344087505713e-05, 0.00010577781358733773, 0.0003930474631488323, 2.1609159375657327e-05, 9.538783342577517e-05, 3.989384640590288e-05, 4.4750373490387574e-05, 1.1711550769177848e-06, 1.613358904251072e-06, 4.3510076466191094e-06, 4.042824366479181e-05, 1.4206545529305004e-05, 9.579569450579584e-05, 3.780024781008251e-05, 0.00018278458446729928, 2.151057969967951e-06, 3.1512376153841615e-05, 6.83709140503197e-06, 7.908498446340673e-06, 8.736445124668535e-06, 5.094982498121681e-07, 0.00013507116818800569, 2.207436637036153e-06, 0.00010111096344189718, 1.4606987406295957e-06, 0.0001911793660838157, 3.6562091736414004e-06, 0.00016030478582251817, 1.847656130848918e-05, 8.11132849776186e-06, 7.337891929637408e-06, 0.0002590944932308048, 0.0006635627942159772, 1.4399239262274932e-05, 1.0989961083396338e-05, 7.676726818317547e-05, 7.335457212320762e-06, 9.815795237955172e-06, 8.745869308768306e-07, 1.0813929520736565e-06, 2.9503451514756307e-05, 0.00023029949807096273, 0.00010514869063626975, 3.367751560290344e-05, 4.91826212964952e-05, 7.829648893675767e-06, 8.074672223301604e-05, 3.0311604859889485e-05], "target_probs": 0.9722292423248291}}


{"result": {"time": "2021-02-11 10:39:05.924554", "n_pass": [1108, 160, 133], "n_token": 78, "loss": [0.05256747454404831, 0.0232925433665514], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["self", "request", "args", "self", "request", "args", "kwargs", "tenant_choices", "tenants", "has_more", "request", "for", "tenant", "in", "tenants", "tenant", "tenant_choices", "(", "net_type", ",", "tenant", "self", "tenant_choices", "#NEWLINE#", "self", "self", "request", "request", "neutron_settings", "#NEWLINE#", "seg_id_range", "=", "neutron_settings", ".", "self", "seg_id_range", "seg_id_range", "seg_id_range", "seg_id_range", "#NEWLINE#", "seg_id_help", "self", ".", "seg_id_range", "self", ".", "seg_id_range", "self", ".", "seg_id_range", "self", ".", "seg_id_range", "#NEWLINE#", "self", "seg_id_range", "self", ".", "seg_id_range", "self", "=", "seg_id_help", "supported_provider_types", "neutron_settings", "supported_provider_types", "network_type_choices", "network_type_choices", "net_type", "net_type", "net_type", "supported_provider_types", "network_type_choices", "self", "self", "=", "network_type_choices", "#INDENT#", "self"]}}
{"position": {"error_location": 18, "repair_targets": [12, 15, 20], "repair_candidates": [2, 5, 30, 35, 36, 37, 38, 43, 46, 49, 52, 55, 58, 18, 67, 68, 69, 8, 14, 65, 66, 71, 75, 1, 4, 10, 26, 27, 12, 15, 20, 6, 9, 7, 16, 22, 28, 32, 63, 40, 61, 0, 3, 21, 24, 25, 34, 41, 44, 47, 50, 54, 56, 59, 72, 73, 77, 62, 64, 70]}}
{"prediction": {"error_location": 0.9487901926040649, "repair_targets": [0.976816713809967, 9.063503966899589e-05, 6.92817266099155e-05], "repair_candidates": [0.0013637107331305742, 0.0017793105216696858, 0.0029107772279530764, 0.00041433778824284673, 0.005840932484716177, 0.0002057891251752153, 0.0002755843452177942, 0.00029677580459974706, 6.166160164866596e-05, 0.00022626011923421174, 0.0073403846472501755, 0.976816713809967, 1.6366861018468626e-05, 9.063503966899589e-05, 0.0003644578391686082, 1.5547524526482448e-05, 6.92817266099155e-05, 3.8978741940809414e-05, 5.065464210929349e-05, 1.001098439701309e-06, 8.745269610699324e-07, 3.4012116429948946e-06, 3.5814475268125534e-05, 1.0465724699315615e-05, 7.021843339316547e-05, 2.0702043912024237e-05, 0.0001082369199139066, 1.6294450233544922e-06, 2.241302172478754e-05, 5.03410547025851e-06, 7.278448720171582e-06, 5.956148015684448e-06, 4.1774518422244e-07, 0.00011377713963156566, 1.0770106655400014e-06, 6.807790487073362e-05, 1.0347458783144248e-06, 0.00015662121586501598, 1.710680294308986e-06, 0.00012321697431616485, 1.3010689144721255e-05, 8.005133167898748e-06, 5.160632099432405e-06, 0.0001794130657799542, 0.00038387958193197846, 6.047249826224288e-06, 9.750133358465973e-06, 7.639065734110773e-05, 7.441033176291967e-06, 9.226593647326808e-06, 6.185849201756355e-07, 6.415717734853388e-07, 1.561509088787716e-05, 0.0002109330234816298, 8.295282896142453e-05, 1.3547786693379749e-05, 2.3433126443705987e-06, 6.8216036197554786e-06, 1.4699351595481858e-05, 1.6460344340885058e-05], "target_probs": 0.9769766330718994}}


{"result": {"time": "2021-02-11 10:39:06.047786", "n_pass": [1110, 161, 134], "n_token": 77, "loss": [0.09969387203454971, 0.019034814089536667], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["self", "request", "args", "self", "request", "args", "kwargs", "tenant_choices", "tenants", "has_more", "request", "for", "tenant", "in", "tenants", "tenant", "tenant_choices", "(", "net_type", ",", "tenant", "self", "tenant_choices", "#NEWLINE#", "self", "self", "request", "request", "neutron_settings", "#NEWLINE#", "seg_id_range", "=", "neutron_settings", ".", "self", "seg_id_range", "seg_id_range", "seg_id_range", "seg_id_range", "#NEWLINE#", "seg_id_help", "self", ".", "seg_id_range", "self", ".", "seg_id_range", "self", ".", "seg_id_range", "self", ".", "seg_id_range", "#NEWLINE#", "self", "seg_id_range", "self", ".", "seg_id_range", "self", "=", "seg_id_help", "supported_provider_types", "neutron_settings", "supported_provider_types", "network_type_choices", "network_type_choices", "net_type", "net_type", "net_type", "supported_provider_types", "network_type_choices", "self", "self", "network_type_choices", "#INDENT#", "self"]}}
{"position": {"error_location": 18, "repair_targets": [12, 15, 20], "repair_candidates": [2, 5, 30, 35, 36, 37, 38, 43, 46, 49, 52, 55, 58, 18, 67, 68, 69, 8, 14, 65, 66, 71, 74, 1, 4, 10, 26, 27, 12, 15, 20, 6, 9, 7, 16, 22, 28, 32, 63, 40, 61, 0, 3, 21, 24, 25, 34, 41, 44, 47, 50, 54, 56, 59, 72, 73, 76, 62, 64, 70]}}
{"prediction": {"error_location": 0.9051146507263184, "repair_targets": [0.9810035228729248, 8.820753282634541e-05, 5.348134072846733e-05], "repair_candidates": [0.001216040924191475, 0.0014981057029217482, 0.0024193967692553997, 0.0002853076730389148, 0.004046309739351273, 0.00015440814604517072, 0.00020870789012406021, 0.00032060875673778355, 7.4407369538676e-05, 0.00023635428806301206, 0.005755212157964706, 0.9810035228729248, 1.6401045286329463e-05, 8.820753282634541e-05, 0.00031634035985916853, 1.7605823813937604e-05, 5.348134072846733e-05, 2.4692510123713873e-05, 4.560192974167876e-05, 6.449469083236181e-07, 7.716574259575282e-07, 3.5723676319321385e-06, 2.464129647705704e-05, 1.1807969713117927e-05, 3.680969894048758e-05, 2.268573734909296e-05, 9.613466681912541e-05, 1.3161873084754916e-06, 1.9525577954482287e-05, 4.997387350158533e-06, 6.79349750498659e-06, 6.494584795291303e-06, 4.4110515773354564e-07, 0.00012019791029160842, 1.2276734651095467e-06, 7.475695747416466e-05, 1.2968806686330936e-06, 0.00015956151764839888, 2.1100620415381854e-06, 0.00013862416381016374, 1.4767805623705499e-05, 1.195145432575373e-05, 6.820984253863571e-06, 0.00022981416259426624, 0.00044526555575430393, 5.744288500864059e-06, 1.4168913367029745e-05, 9.621024219086394e-05, 5.675713964592433e-06, 6.98209350957768e-06, 8.307654866257508e-07, 9.39559015478153e-07, 1.3650512300955597e-05, 0.0003845632600132376, 0.00019123057427350432, 2.1206824385444634e-05, 1.7637191831454402e-06, 7.625564194313483e-06, 9.104585842578672e-06, 1.6650968973408453e-05], "target_probs": 0.9811452031135559}}


{"result": {"time": "2021-02-11 10:39:06.170448", "n_pass": [1112, 162, 135], "n_token": 76, "loss": [0.11469557136297226, 0.04144327715039253], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["self", "request", "args", "self", "request", "args", "kwargs", "tenant_choices", "tenants", "has_more", "request", "for", "tenant", "in", "tenants", "tenant", "tenant_choices", "(", "net_type", ",", "tenant", "self", "tenant_choices", "#NEWLINE#", "self", "self", "request", "request", "neutron_settings", "#NEWLINE#", "seg_id_range", "=", "neutron_settings", ".", "self", "seg_id_range", "seg_id_range", "seg_id_range", "seg_id_range", "#NEWLINE#", "seg_id_help", "self", ".", "seg_id_range", "self", ".", "seg_id_range", "self", ".", "seg_id_range", "self", ".", "seg_id_range", "#NEWLINE#", "self", "seg_id_range", "self", ".", "seg_id_range", "self", "=", "seg_id_help", "supported_provider_types", "neutron_settings", "supported_provider_types", "network_type_choices", "network_type_choices", "net_type", "net_type", "net_type", "supported_provider_types", "network_type_choices", "self", "self", "network_type_choices", "self"]}}
{"position": {"error_location": 18, "repair_targets": [12, 15, 20], "repair_candidates": [2, 5, 30, 35, 36, 37, 38, 43, 46, 49, 52, 55, 58, 18, 67, 68, 69, 8, 14, 65, 66, 71, 74, 1, 4, 10, 26, 27, 12, 15, 20, 6, 9, 7, 16, 22, 28, 32, 63, 40, 61, 0, 3, 21, 24, 25, 34, 41, 44, 47, 50, 54, 56, 59, 72, 73, 75, 62, 64, 70]}}
{"prediction": {"error_location": 0.8916373252868652, "repair_targets": [0.9590326547622681, 0.0002794274187181145, 9.167259122477844e-05], "repair_candidates": [0.00214831018820405, 0.002160616684705019, 0.0036146806087344885, 0.0005188448121771216, 0.007226352579891682, 0.000387381121981889, 0.0008125968161039054, 0.0024889197666198015, 0.0003208931884728372, 0.000602893007453531, 0.00950702652335167, 0.9590326547622681, 8.09264020062983e-05, 0.0002794274187181145, 0.0007636116351932287, 4.174992864136584e-05, 9.167259122477844e-05, 6.036314516677521e-05, 6.267365097301081e-05, 1.0471535460965242e-06, 2.2997066935204202e-06, 4.7521239139314275e-06, 5.103185321786441e-05, 3.0012899514986202e-05, 0.00023306903312914073, 4.971240196027793e-05, 0.0003393596562091261, 4.396714302856708e-06, 6.010304423398338e-05, 1.6947944459388964e-05, 2.417641917418223e-05, 1.6925541785894893e-05, 1.0963279919451452e-06, 0.00036689781700260937, 2.2385188458429184e-06, 0.0002613402612041682, 3.464107976469677e-06, 0.0005991405341774225, 8.561085451219697e-06, 0.0004874379374086857, 5.507029709406197e-05, 4.133300535613671e-05, 3.3601379982428625e-05, 0.0008598027634434402, 0.001807463588193059, 5.5517037253594026e-05, 0.0002001595712499693, 0.0005186152993701398, 6.227458652574569e-05, 8.617446292191744e-05, 1.336495279247174e-05, 1.234604678757023e-05, 0.00010874311556108296, 0.002535064471885562, 0.0007196071674115956, 7.345805352088064e-05, 3.3453450214437908e-06, 7.513779564760625e-06, 2.7514239263837226e-05, 1.3464187759382185e-05], "target_probs": 0.9594037532806396}}


{"result": {"time": "2021-02-11 10:39:06.782621", "n_pass": [1137, 167, 136], "n_token": 75, "loss": [0.2370157390832901, 0.044343579560518265], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["self", "request", "args", "self", "request", "args", "kwargs", "tenant_choices", "tenants", "has_more", "request", "for", "tenant", "in", "tenants", "tenant", "tenant_choices", "(", "net_type", ",", "tenant", "self", "tenant_choices", "self", "self", "request", "request", "neutron_settings", "#NEWLINE#", "seg_id_range", "=", "neutron_settings", ".", "self", "seg_id_range", "seg_id_range", "seg_id_range", "seg_id_range", "#NEWLINE#", "seg_id_help", "self", ".", "seg_id_range", "self", ".", "seg_id_range", "self", ".", "seg_id_range", "self", ".", "seg_id_range", "#NEWLINE#", "self", "seg_id_range", "self", ".", "seg_id_range", "self", "=", "seg_id_help", "supported_provider_types", "neutron_settings", "supported_provider_types", "network_type_choices", "network_type_choices", "net_type", "net_type", "net_type", "supported_provider_types", "network_type_choices", "self", "self", "network_type_choices", "self"]}}
{"position": {"error_location": 18, "repair_targets": [12, 15, 20], "repair_candidates": [2, 5, 29, 34, 35, 36, 37, 42, 45, 48, 51, 54, 57, 18, 66, 67, 68, 8, 14, 64, 65, 70, 73, 1, 4, 10, 25, 26, 12, 15, 20, 6, 9, 7, 16, 22, 27, 31, 62, 39, 60, 0, 3, 21, 23, 24, 33, 40, 43, 46, 49, 53, 55, 58, 71, 72, 74, 61, 63, 69]}}
{"prediction": {"error_location": 0.7889789342880249, "repair_targets": [0.9561065435409546, 0.0003468034556135535, 0.00017190215294249356], "repair_candidates": [0.001432875171303749, 0.001402360969223082, 0.0026906540151685476, 0.0003190591523889452, 0.005191443022340536, 0.00043731744517572224, 0.0010879263281822205, 0.003452867269515991, 0.00037923557101748884, 0.0007694397936575115, 0.011444132775068283, 0.9561065435409546, 9.828580368775874e-05, 0.0003468034556135535, 0.001053715473972261, 4.064067979925312e-05, 0.00017190215294249356, 1.49398119901889e-05, 0.00012973937555216253, 1.4577039110008627e-05, 3.283528258180013e-06, 1.595837420609314e-05, 0.00014721641491632909, 7.85822412581183e-05, 0.0006009744247421622, 0.00011894919589394704, 0.00019286159658804536, 3.217007815692341e-06, 5.552475340664387e-05, 1.3429842510959134e-05, 2.5642953914939426e-05, 1.9618879377958365e-05, 1.0045654335044674e-06, 0.0005829689325764775, 4.130372872168664e-06, 0.0003301133110653609, 4.526915290625766e-06, 0.0006624489324167371, 9.30643091123784e-06, 0.0005463424022309482, 7.287838525371626e-05, 6.623557419516146e-05, 4.7456258471356705e-05, 0.0010902310023084283, 0.0029467553831636906, 4.372029798105359e-05, 0.00027115954435430467, 0.0007564315455965698, 5.7860412198351696e-05, 8.007162978174165e-05, 1.2130190953030251e-05, 1.0686352652555797e-05, 0.00013013850548304617, 0.003357014385983348, 0.0009128661477006972, 8.865050040185452e-05, 3.0998976399132516e-06, 5.825932476000162e-06, 2.9841192372259684e-05, 1.640976915950887e-05], "target_probs": 0.95662522315979}}


{"result": {"time": "2021-02-11 10:39:06.906050", "n_pass": [1143, 168, 137], "n_token": 74, "loss": [0.35284101963043213, 0.049022126942873], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["self", "request", "args", "self", "request", "args", "kwargs", "tenant_choices", "tenants", "has_more", "request", "for", "tenant", "in", "tenants", "tenant", "tenant_choices", "(", "net_type", ",", "tenant", "self", "tenant_choices", "self", "self", "request", "request", "neutron_settings", "seg_id_range", "=", "neutron_settings", ".", "self", "seg_id_range", "seg_id_range", "seg_id_range", "seg_id_range", "#NEWLINE#", "seg_id_help", "self", ".", "seg_id_range", "self", ".", "seg_id_range", "self", ".", "seg_id_range", "self", ".", "seg_id_range", "#NEWLINE#", "self", "seg_id_range", "self", ".", "seg_id_range", "self", "=", "seg_id_help", "supported_provider_types", "neutron_settings", "supported_provider_types", "network_type_choices", "network_type_choices", "net_type", "net_type", "net_type", "supported_provider_types", "network_type_choices", "self", "self", "network_type_choices", "self"]}}
{"position": {"error_location": 18, "repair_targets": [12, 15, 20], "repair_candidates": [2, 5, 28, 33, 34, 35, 36, 41, 44, 47, 50, 53, 56, 18, 65, 66, 67, 8, 14, 63, 64, 69, 72, 1, 4, 10, 25, 26, 12, 15, 20, 6, 9, 7, 16, 22, 27, 30, 61, 38, 59, 0, 3, 21, 23, 24, 32, 39, 42, 45, 48, 52, 54, 57, 70, 71, 73, 60, 62, 68]}}
{"prediction": {"error_location": 0.7026888728141785, "repair_targets": [0.95164555311203, 0.00036602371255867183, 0.0001484925305703655], "repair_candidates": [0.0012280158698558807, 0.0011282218620181084, 0.0021753248292952776, 0.00022190003073774278, 0.004575342405587435, 0.0004066307737957686, 0.0010146857239305973, 0.0031679144594818354, 0.00035201164428144693, 0.0007134523475542665, 0.009431795217096806, 0.95164555311203, 9.312501788372174e-05, 0.00036602371255867183, 0.0011380763025954366, 3.4181008231826127e-05, 0.0001484925305703655, 1.0888917131524067e-05, 7.691988867009059e-05, 1.134264311986044e-05, 1.8122857454727637e-06, 5.842101472808281e-06, 0.00010134290641872212, 8.55274120112881e-05, 1.2838027032557875e-05, 0.000164175420650281, 0.0008818131173029542, 7.2071761678671464e-06, 6.43212188151665e-05, 1.4027295947016682e-05, 3.0181265174178407e-05, 3.783246938837692e-05, 1.9734895886358572e-06, 0.0006625254754908383, 8.074563993432093e-06, 0.0004286337352823466, 9.579150173522066e-06, 0.0010743779130280018, 2.3051705284160562e-05, 0.0008012462058104575, 0.00014243717305362225, 0.00011440848174970597, 0.00012154795695096254, 0.0016397366998717189, 0.009257490746676922, 6.027915151207708e-05, 0.00038810339174233377, 0.001678192988038063, 0.00010185740393353626, 9.53660492086783e-05, 1.6602634786977433e-05, 1.4454320989898406e-05, 0.00013868494716007262, 0.0029613941442221403, 0.0007757372804917395, 8.549103222321719e-05, 3.593037718019332e-06, 4.7766084207978565e-06, 2.537334876251407e-05, 1.835270995798055e-05], "target_probs": 0.9521600604057312}}


{"result": {"time": "2021-02-11 10:39:07.026961", "n_pass": [1145, 169, 138], "n_token": 73, "loss": [0.2718575894832611, 0.04091459512710571], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["self", "request", "args", "self", "request", "args", "kwargs", "tenant_choices", "tenants", "has_more", "request", "for", "tenant", "in", "tenants", "tenant", "tenant_choices", "(", "net_type", ",", "tenant", "self", "tenant_choices", "self", "self", "request", "request", "neutron_settings", "seg_id_range", "neutron_settings", ".", "self", "seg_id_range", "seg_id_range", "seg_id_range", "seg_id_range", "#NEWLINE#", "seg_id_help", "self", ".", "seg_id_range", "self", ".", "seg_id_range", "self", ".", "seg_id_range", "self", ".", "seg_id_range", "#NEWLINE#", "self", "seg_id_range", "self", ".", "seg_id_range", "self", "=", "seg_id_help", "supported_provider_types", "neutron_settings", "supported_provider_types", "network_type_choices", "network_type_choices", "net_type", "net_type", "net_type", "supported_provider_types", "network_type_choices", "self", "self", "network_type_choices", "self"]}}
{"position": {"error_location": 18, "repair_targets": [12, 15, 20], "repair_candidates": [2, 5, 28, 32, 33, 34, 35, 40, 43, 46, 49, 52, 55, 18, 64, 65, 66, 8, 14, 62, 63, 68, 71, 1, 4, 10, 25, 26, 12, 15, 20, 6, 9, 7, 16, 22, 27, 29, 60, 37, 58, 0, 3, 21, 23, 24, 31, 38, 41, 44, 47, 51, 53, 56, 69, 70, 72, 59, 61, 67]}}
{"prediction": {"error_location": 0.7619628310203552, "repair_targets": [0.9594212770462036, 0.00034786679316312075, 0.00014199964061845094], "repair_candidates": [0.0012021185830235481, 0.0010445567313581705, 0.0019253232749179006, 0.00022644498676527292, 0.004284218419343233, 0.0003197997575625777, 0.0007969202706590295, 0.0026117837987840176, 0.0003108138917014003, 0.0006198646151460707, 0.007985911332070827, 0.9594212770462036, 9.378310642205179e-05, 0.00034786679316312075, 0.0008976826793514192, 3.1140330975176767e-05, 0.00014199964061845094, 1.1413249012548476e-05, 4.947043635183945e-05, 6.805919838370755e-06, 1.2799279147657217e-06, 3.4164074804721167e-06, 2.987131847476121e-05, 3.792784264078364e-05, 3.4978871553903446e-05, 0.0003669838479254395, 0.000410156644647941, 1.2802119272237178e-05, 4.187053855275735e-05, 9.605494597053621e-06, 1.688106385699939e-05, 2.7404299544286914e-05, 1.5612005199727719e-06, 0.0005604458274319768, 9.716302884044126e-06, 0.0003976288135163486, 6.5553904278203845e-06, 0.0008752712165005505, 1.926822733366862e-05, 0.000691956200171262, 0.00011117970279883593, 0.0001037509209709242, 0.00010181088873650879, 0.0012932030949741602, 0.007208685390651226, 5.2362640417413786e-05, 0.0003215033211745322, 0.001375970896333456, 8.662886830279604e-05, 8.150767826009542e-05, 1.4113617908151355e-05, 1.2208273801661562e-05, 0.00012103861809009686, 0.002463296987116337, 0.0006546681979671121, 6.826392927905545e-05, 3.0886342301528202e-06, 3.932557319785701e-06, 2.2364967662724666e-05, 1.561910357850138e-05], "target_probs": 0.9599111080169678}}


{"result": {"time": "2021-02-11 10:39:07.149580", "n_pass": [1147, 170, 139], "n_token": 72, "loss": [1.124263882637024, 0.08774775266647339], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["self", "request", "args", "self", "request", "args", "kwargs", "tenant_choices", "tenants", "has_more", "request", "for", "tenant", "in", "tenants", "tenant", "tenant_choices", "(", "net_type", ",", "tenant", "self", "tenant_choices", "self", "self", "request", "request", "neutron_settings", "seg_id_range", "neutron_settings", "self", "seg_id_range", "seg_id_range", "seg_id_range", "seg_id_range", "#NEWLINE#", "seg_id_help", "self", ".", "seg_id_range", "self", ".", "seg_id_range", "self", ".", "seg_id_range", "self", ".", "seg_id_range", "#NEWLINE#", "self", "seg_id_range", "self", ".", "seg_id_range", "self", "=", "seg_id_help", "supported_provider_types", "neutron_settings", "supported_provider_types", "network_type_choices", "network_type_choices", "net_type", "net_type", "net_type", "supported_provider_types", "network_type_choices", "self", "self", "network_type_choices", "self"]}}
{"position": {"error_location": 18, "repair_targets": [12, 15, 20], "repair_candidates": [2, 5, 28, 31, 32, 33, 34, 39, 42, 45, 48, 51, 54, 18, 63, 64, 65, 8, 14, 61, 62, 67, 70, 1, 4, 10, 25, 26, 12, 15, 20, 6, 9, 7, 16, 22, 27, 29, 59, 36, 57, 0, 3, 21, 23, 24, 30, 37, 40, 43, 46, 50, 52, 55, 68, 69, 71, 58, 60, 66]}}
{"prediction": {"error_location": 0.3248915672302246, "repair_targets": [0.9151085615158081, 0.0005528138717636466, 0.0003305173013359308], "repair_candidates": [0.0019251961493864655, 0.0013374059926718473, 0.002107736188918352, 0.00020058419613633305, 0.004461526870727539, 0.000632161449175328, 0.0013417801819741726, 0.005099105648696423, 0.0006187255494296551, 0.0013263345463201404, 0.02183588035404682, 0.9151085615158081, 0.0001298742281505838, 0.0005528138717636466, 0.0016164297703653574, 9.5708470325917e-05, 0.0003305173013359308, 2.3772021449985914e-05, 0.00046685285633429885, 2.721426608331967e-05, 4.724374775832985e-06, 1.2600471563928295e-05, 7.72186103858985e-05, 7.918591290945187e-05, 0.00031498417956754565, 0.0010253993095830083, 4.709999484475702e-05, 1.0231457054032944e-05, 8.021137909963727e-05, 2.3220502043841407e-05, 5.185962436371483e-05, 9.240517829312012e-05, 5.875823717360618e-06, 0.0037528336979448795, 3.523383566061966e-05, 0.0016051579732447863, 3.777267556870356e-05, 0.002767471829429269, 4.096171323908493e-05, 0.0022245533764362335, 0.0002228835510322824, 0.0001542572572361678, 0.0001382907503284514, 0.0035697270650416613, 0.005083441734313965, 0.0003092440601903945, 0.0005167836206965148, 0.0022719406988471746, 0.00022634123160969466, 0.0003793366486206651, 6.827372271800414e-05, 7.542229286627844e-05, 0.0007475343300029635, 0.011525885201990604, 0.0028236249927431345, 0.0002387133426964283, 8.20571312942775e-06, 1.3388518709689379e-05, 6.460630538640544e-05, 3.485663910396397e-05], "target_probs": 0.9159919023513794}}


{"result": {"time": "2021-02-11 10:39:07.270404", "n_pass": [1153, 171, 140], "n_token": 71, "loss": [0.8737148642539978, 0.0848640576004982], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["self", "request", "args", "self", "request", "args", "kwargs", "tenant_choices", "tenants", "has_more", "request", "for", "tenant", "in", "tenants", "tenant", "tenant_choices", "(", "net_type", ",", "tenant", "self", "tenant_choices", "self", "self", "request", "request", "neutron_settings", "seg_id_range", "neutron_settings", "self", "seg_id_range", "seg_id_range", "seg_id_range", "seg_id_range", "seg_id_help", "self", ".", "seg_id_range", "self", ".", "seg_id_range", "self", ".", "seg_id_range", "self", ".", "seg_id_range", "#NEWLINE#", "self", "seg_id_range", "self", ".", "seg_id_range", "self", "=", "seg_id_help", "supported_provider_types", "neutron_settings", "supported_provider_types", "network_type_choices", "network_type_choices", "net_type", "net_type", "net_type", "supported_provider_types", "network_type_choices", "self", "self", "network_type_choices", "self"]}}
{"position": {"error_location": 18, "repair_targets": [12, 15, 20], "repair_candidates": [2, 5, 28, 31, 32, 33, 34, 38, 41, 44, 47, 50, 53, 18, 62, 63, 64, 8, 14, 60, 61, 66, 69, 1, 4, 10, 25, 26, 12, 15, 20, 6, 9, 7, 16, 22, 27, 29, 58, 35, 56, 0, 3, 21, 23, 24, 30, 36, 39, 42, 45, 49, 51, 54, 67, 68, 70, 57, 59, 65]}}
{"prediction": {"error_location": 0.4173980951309204, "repair_targets": [0.9178118109703064, 0.0005279651959426701, 0.00029738005832768977], "repair_candidates": [0.0018415097147226334, 0.001320358831435442, 0.002107227686792612, 0.00020548628526739776, 0.004880906548351049, 0.0005858829827047884, 0.0012750857276841998, 0.004718388430774212, 0.0005737778265029192, 0.0011222267057746649, 0.01547722052782774, 0.9178118109703064, 0.0001246999454451725, 0.0005279651959426701, 0.0015932864043861628, 7.774338155286387e-05, 0.00029738005832768977, 2.2180307496455498e-05, 0.0002546964096836746, 1.5125051504583098e-05, 3.1834986202738946e-06, 9.053509529621806e-06, 7.389720849459991e-05, 7.626158185303211e-05, 0.0001743181055644527, 0.0005137676489539444, 3.256040145060979e-05, 7.040405307634501e-06, 5.883822814212181e-05, 2.2076270397519693e-05, 4.683616498368792e-05, 7.719702989561483e-05, 2.0540681362035684e-05, 0.006329332012683153, 4.383027408039197e-05, 0.0018391023622825742, 3.97127732867375e-05, 0.0029882981907576323, 5.9687616158043966e-05, 0.002603932050988078, 0.00030240064370445907, 0.00024001955171115696, 0.00024177104933187366, 0.004031299613416195, 0.00783443171530962, 0.0002542362781241536, 0.0006630711141042411, 0.0025859582237899303, 0.00022516549506690353, 0.0003593429282773286, 6.465049955295399e-05, 5.6783912441460416e-05, 0.0006153744761832058, 0.01006326638162136, 0.0023128297179937363, 0.00019461153715383261, 7.051142347336281e-06, 9.726931239129044e-06, 4.99283560202457e-05, 3.5559551179176196e-05], "target_probs": 0.9186371564865112}}


{"result": {"time": "2021-02-11 10:39:07.391106", "n_pass": [1156, 172, 141], "n_token": 70, "loss": [1.0387852191925049, 0.07041026651859283], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["self", "request", "args", "self", "request", "args", "kwargs", "tenant_choices", "tenants", "has_more", "request", "for", "tenant", "in", "tenants", "tenant", "tenant_choices", "(", "net_type", ",", "tenant", "self", "tenant_choices", "self", "self", "request", "request", "neutron_settings", "seg_id_range", "neutron_settings", "self", "seg_id_range", "seg_id_range", "seg_id_range", "seg_id_range", "seg_id_help", "self", "seg_id_range", "self", ".", "seg_id_range", "self", ".", "seg_id_range", "self", ".", "seg_id_range", "#NEWLINE#", "self", "seg_id_range", "self", ".", "seg_id_range", "self", "=", "seg_id_help", "supported_provider_types", "neutron_settings", "supported_provider_types", "network_type_choices", "network_type_choices", "net_type", "net_type", "net_type", "supported_provider_types", "network_type_choices", "self", "self", "network_type_choices", "self"]}}
{"position": {"error_location": 18, "repair_targets": [12, 15, 20], "repair_candidates": [2, 5, 28, 31, 32, 33, 34, 37, 40, 43, 46, 49, 52, 18, 61, 62, 63, 8, 14, 59, 60, 65, 68, 1, 4, 10, 25, 26, 12, 15, 20, 6, 9, 7, 16, 22, 27, 29, 57, 35, 55, 0, 3, 21, 23, 24, 30, 36, 38, 41, 44, 48, 50, 53, 66, 67, 69, 56, 58, 64]}}
{"prediction": {"error_location": 0.3538843095302582, "repair_targets": [0.9312410354614258, 0.0005013103364035487, 0.00026898927171714604], "repair_candidates": [0.0015782517148181796, 0.0010634263744577765, 0.0016054426087066531, 0.00019275234080851078, 0.004040819592773914, 0.0003893370449077338, 0.0007820531027391553, 0.0031389319337904453, 0.0004415200965013355, 0.0008698786259628832, 0.011886253952980042, 0.9312410354614258, 0.00010938211198663339, 0.0005013103364035487, 0.0012399328406900167, 7.620060932822526e-05, 0.00026898927171714604, 2.2556952899321914e-05, 0.0001435293524991721, 1.4875504348310642e-05, 2.8810159165004734e-06, 6.912423032190418e-06, 5.560205318033695e-05, 4.231030470691621e-05, 3.8711834349669516e-05, 8.008535951375961e-05, 2.8735972591675818e-05, 4.205475306662265e-06, 5.736290040658787e-05, 2.7530684747034684e-05, 8.60435247886926e-05, 0.0005072074709460139, 0.00022624309349339455, 0.00010182474215980619, 1.2500117009039968e-05, 0.00025354704121127725, 2.994421447510831e-05, 0.0035011572763323784, 7.975343760335818e-05, 0.0024428803008049726, 0.00035456469049677253, 0.0003166531096212566, 0.0003304127894807607, 0.003782175248488784, 0.014464300125837326, 0.0001459763152524829, 0.0007547822315245867, 0.003053050022572279, 0.00019664141291286796, 0.00020313478307798505, 3.7115434679435566e-05, 3.075848508160561e-05, 0.00035910020233131945, 0.0068851434625685215, 0.0016434048302471638, 0.00015611122944392264, 5.661849172611255e-06, 7.273675237229327e-06, 4.711721703642979e-05, 3.476658457657322e-05], "target_probs": 0.9320113658905029}}




Minimal simplified tokens:

['self', 'request', 'args', 'self', 'request', 'args', 'kwargs', 'tenant_choices', 'tenants', 'has_more', 'request', 'for', 'tenant', 'in', 'tenants', 'tenant', 'tenant_choices', '(', 'net_type', ',', 'tenant', 'self', 'tenant_choices', 'self', 'self', 'request', 'request', 'neutron_settings', 'seg_id_range', 'neutron_settings', 'self', 'seg_id_range', 'seg_id_range', 'seg_id_range', 'seg_id_range', 'seg_id_help', 'self', 'seg_id_range', 'self', '.', 'seg_id_range', 'self', '.', 'seg_id_range', 'self', '.', 'seg_id_range', '#NEWLINE#', 'self', 'seg_id_range', 'self', '.', 'seg_id_range', 'self', '=', 'seg_id_help', 'supported_provider_types', 'neutron_settings', 'supported_provider_types', 'network_type_choices', 'network_type_choices', 'net_type', 'net_type', 'net_type', 'supported_provider_types', 'network_type_choices', 'self', 'self', 'network_type_choices', 'self']
