
Original sample:

{"has_bug": true, "bug_kind": 1, "bug_kind_name": "VARIABLE_MISUSE", "source_tokens": ["#NEWLINE#", "@", "mock", ".", "patch", ".", "object", "(", "experiments", ".", "gmacpyutil", ",", "'MachineInfoForKey'", ")", "#NEWLINE#", "def testKnobsManualKnobReturnsList(", "self", ",", "mock_mifk", ")", ":", "#NEWLINE#", "#INDENT#", "def MifkSE(", "key", ")", ":", "#NEWLINE#", "#INDENT#", "if", "(", "key", "==", "experiments", ".", "MANUAL_ON_KNOB", ")", ":", "#NEWLINE#", "#INDENT#", "return", "'foo,bar,baz'", "#NEWLINE#", "#UNINDENT#", "else", ":", "#NEWLINE#", "#INDENT#", "return", "''", "#NEWLINE#", "#UNINDENT#", "#UNINDENT#", "mock_mifk", ".", "side_effect", "=", "MifkSE", "#NEWLINE#", "k", "=", "experiments", ".", "Knobs", "(", ")", "#NEWLINE#", "knobs", "=", "k", ".", "_GetKnobs", "(", ")", "#NEWLINE#", "self", ".", "assertSameElements", "(", "[", "'foo'", ",", "'baz'", ",", "'bar'", "]", ",", "k", "[", "experiments", ".", "MANUAL_ON_KNOB", "]", ")"], "error_location": [87], "repair_targets": [67], "repair_candidates": [16, 75, 59, 69, 87, 18, 53, 57, 67], "provenances": [{"datasetProvenance": {"datasetName": "ETHPy150Open", "filepath": "google/macops/gmacpyutil/gmacpyutil/experiments_test.py", "license": "apache-2.0", "note": "license: bigquery_api"}}], "txt_file": "eval__VARIABLE_MISUSE__SStuB.txt-00000-of-00300", "js_count": 1785, "results": {"model": "rnn", "prob": {"loc": [[0.06365934014320374, 9.241856560038286e-07, 3.3257231280003907e-07, 2.4994557534796513e-09, 3.4124305603455696e-09, 6.088826109973411e-10, 5.38377287195857e-10, 1.3979954971432562e-09, 9.713237858477441e-08, 5.439817130081792e-08, 2.200468607327366e-08, 1.479322359054791e-10, 7.938101287408017e-10, 2.4499543727074524e-08, 4.5602919840348477e-07, 9.852565341361696e-08, 1.2522482961685455e-07, 8.994759603808689e-09, 1.2262174095667433e-05, 7.108210020589922e-09, 4.222317162572153e-09, 1.308383588138895e-07, 2.5968487804561846e-08, 4.658140539959277e-09, 2.597804086690303e-05, 1.3323269598686238e-08, 1.8118443412262764e-09, 8.683336716330814e-09, 1.9366430237255372e-08, 1.0028633479208793e-09, 2.7946660097200038e-08, 0.0002247299998998642, 2.7072304398245706e-09, 5.382792522823365e-08, 7.147623382053325e-09, 8.036419446577625e-11, 1.79915851106216e-08, 2.641622753873918e-10, 1.534454896479076e-09, 3.949469196129485e-09, 2.546790112134545e-09, 3.336600551406832e-09, 1.9413548102420464e-08, 3.9937233964337793e-07, 2.31741092981963e-09, 3.7058562440961396e-08, 1.0658117055584171e-08, 1.1305969493946577e-09, 6.399726970585107e-08, 1.6845273620447188e-08, 1.9986869048693734e-08, 2.232947871050328e-08, 2.9472477791614438e-09, 1.3229670514647296e-07, 1.4951174742705575e-09, 6.80013434450899e-10, 3.103815160443446e-08, 0.00019637840159703046, 3.355542617100582e-07, 6.507699712443582e-09, 5.385737189556039e-09, 7.283362180032782e-08, 1.5010215292932116e-08, 3.040604990012241e-10, 1.6042356776324596e-08, 2.0579739157255972e-07, 1.0643023351519787e-08, 1.957103634708801e-08, 1.2648773406453984e-07, 7.326160266529769e-05, 6.066074753618977e-09, 3.708378715217009e-09, 2.689769758035254e-07, 4.563267737012211e-07, 3.5547202958952084e-09, 1.3334010873222724e-06, 3.205773646541843e-09, 7.461445505896336e-08, 3.4348817280260846e-05, 2.9877793394916807e-07, 1.2199652132949268e-07, 3.8806014401870925e-08, 2.4276279873447493e-05, 2.018470368625458e-08, 6.971869879635051e-05, 8.63777404447319e-06, 8.583178896515165e-07, 0.9207329154014587, 2.567161372368787e-09, 0.0023382434155792, 7.673712332234572e-08, 8.290333397553695e-08, 0.012591906823217869, 3.1958379054231045e-07]], "pointer": [[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.00021488522179424763, 0.0, 0.004940735176205635, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 5.245754437055439e-05, 0.0, 0.0, 0.0, 2.8122984076617286e-05, 0.0, 0.0010439185425639153, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.9937155842781067, 0.0, 2.79663754554349e-06, 0.0, 0.0, 0.0, 0.0, 0.0, 1.2350074030109681e-06, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 3.383765374564973e-07, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]], "target": [0.9937155842781067]}, "loss": [0.08258526772260666, 0.006304245907813311], "acc": [0.0, 1.0, 1.0, 1.0]}}


Trace of simplified code(s):

{"result": {"time": "2021-02-11 10:05:43.083427", "n_pass": [1, 1, 1], "n_token": 94, "loss": [0.08258526772260666, 0.006304245907813311], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "@", "mock", ".", "patch", ".", "object", "(", "experiments", ".", "gmacpyutil", ",", "'MachineInfoForKey'", ")", "#NEWLINE#", "def testKnobsManualKnobReturnsList(", "self", ",", "mock_mifk", ")", ":", "#NEWLINE#", "#INDENT#", "def MifkSE(", "key", ")", ":", "#NEWLINE#", "#INDENT#", "if", "(", "key", "==", "experiments", ".", "MANUAL_ON_KNOB", ")", ":", "#NEWLINE#", "#INDENT#", "return", "'foo,bar,baz'", "#NEWLINE#", "#UNINDENT#", "else", ":", "#NEWLINE#", "#INDENT#", "return", "''", "#NEWLINE#", "#UNINDENT#", "#UNINDENT#", "mock_mifk", ".", "side_effect", "=", "MifkSE", "#NEWLINE#", "k", "=", "experiments", ".", "Knobs", "(", ")", "#NEWLINE#", "knobs", "=", "k", ".", "_GetKnobs", "(", ")", "#NEWLINE#", "self", ".", "assertSameElements", "(", "[", "'foo'", ",", "'baz'", ",", "'bar'", "]", ",", "k", "[", "experiments", ".", "MANUAL_ON_KNOB", "]", ")"]}}
{"position": {"error_location": 87, "repair_targets": [67], "repair_candidates": [16, 75, 59, 69, 87, 18, 53, 57, 67]}}
{"prediction": {"error_location": 0.9207329154014587, "repair_targets": [0.9937155842781067], "repair_candidates": [0.00021488522179424763, 0.004940735176205635, 5.245754437055439e-05, 2.8122984076617286e-05, 0.0010439185425639153, 0.9937155842781067, 2.79663754554349e-06, 1.2350074030109681e-06, 3.383765374564973e-07], "target_probs": 0.9937155842781067}}


{"result": {"time": "2021-02-11 10:05:43.170615", "n_pass": [9, 2, 2], "n_token": 71, "loss": [0.08404598385095596, 0.004489830229431391], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "@", "mock", ".", "patch", ".", "object", "(", "experiments", ".", "gmacpyutil", ",", "'MachineInfoForKey'", ")", "#NEWLINE#", "def testKnobsManualKnobReturnsList(", "self", ",", "mock_mifk", ")", ":", "#NEWLINE#", "#INDENT#", "#NEWLINE#", "#INDENT#", "return", "''", "#NEWLINE#", "#UNINDENT#", "#UNINDENT#", "mock_mifk", ".", "side_effect", "=", "MifkSE", "#NEWLINE#", "k", "=", "experiments", ".", "Knobs", "(", ")", "#NEWLINE#", "knobs", "=", "k", ".", "_GetKnobs", "(", ")", "#NEWLINE#", "self", ".", "assertSameElements", "(", "[", "'foo'", ",", "'baz'", ",", "'bar'", "]", ",", "k", "[", "experiments", ".", "MANUAL_ON_KNOB", "]", ")"]}}
{"position": {"error_location": 64, "repair_targets": [44], "repair_candidates": [16, 52, 36, 46, 64, 18, 30, 34, 44]}}
{"prediction": {"error_location": 0.9193888902664185, "repair_targets": [0.9955202341079712], "repair_candidates": [4.241079659550451e-05, 0.0040069567039608955, 2.2428197553381324e-05, 1.763975524227135e-05, 0.0003873887471854687, 0.9955202341079712, 1.7673929733064142e-06, 8.891138350008987e-07, 2.8262567752790346e-07], "target_probs": 0.9955202341079712}}


{"result": {"time": "2021-02-11 10:05:43.250441", "n_pass": [23, 3, 3], "n_token": 60, "loss": [0.015220919623970985, 0.0018314194167032838], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": [",", "'MachineInfoForKey'", ")", "#NEWLINE#", "def testKnobsManualKnobReturnsList(", "self", ",", "mock_mifk", ")", ":", "#NEWLINE#", "#INDENT#", "#NEWLINE#", "#INDENT#", "return", "''", "#NEWLINE#", "#UNINDENT#", "#UNINDENT#", "mock_mifk", ".", "side_effect", "=", "MifkSE", "#NEWLINE#", "k", "=", "experiments", ".", "Knobs", "(", ")", "#NEWLINE#", "knobs", "=", "k", ".", "_GetKnobs", "(", ")", "#NEWLINE#", "self", ".", "assertSameElements", "(", "[", "'foo'", ",", "'baz'", ",", "'bar'", "]", ",", "k", "[", "experiments", ".", "MANUAL_ON_KNOB", "]", ")"]}}
{"position": {"error_location": 53, "repair_targets": [33], "repair_candidates": [5, 41, 25, 35, 53, 7, 19, 23, 33]}}
{"prediction": {"error_location": 0.9848944544792175, "repair_targets": [0.9981702566146851], "repair_candidates": [2.5062770873773843e-05, 0.0014861987438052893, 9.380682968185283e-06, 2.585652327979915e-05, 0.0002788733399938792, 0.9981702566146851, 3.0817047900200123e-06, 9.002617389342049e-07, 2.544094570566813e-07], "target_probs": 0.9981702566146851}}


{"result": {"time": "2021-02-11 10:05:43.327049", "n_pass": [40, 4, 4], "n_token": 54, "loss": [0.015511111356317997, 0.0008965576416812837], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": [",", "'MachineInfoForKey'", ")", "#NEWLINE#", "def testKnobsManualKnobReturnsList(", "self", ",", "mock_mifk", ")", ":", "#NEWLINE#", "#INDENT#", "#UNINDENT#", "mock_mifk", ".", "side_effect", "=", "MifkSE", "#NEWLINE#", "k", "=", "experiments", ".", "Knobs", "(", ")", "#NEWLINE#", "knobs", "=", "k", ".", "_GetKnobs", "(", ")", "#NEWLINE#", "self", ".", "assertSameElements", "(", "[", "'foo'", ",", "'baz'", ",", "'bar'", "]", ",", "k", "[", "experiments", ".", "MANUAL_ON_KNOB", "]", ")"]}}
{"position": {"error_location": 47, "repair_targets": [27], "repair_candidates": [5, 35, 19, 29, 47, 7, 13, 17, 27]}}
{"prediction": {"error_location": 0.9846087098121643, "repair_targets": [0.999103844165802], "repair_candidates": [3.277267751400359e-05, 0.0007110006990842521, 7.237282716232585e-06, 3.00842548313085e-05, 0.00011145818280056119, 0.999103844165802, 2.2400029138225364e-06, 1.127634163822222e-06, 2.7503926958161173e-07], "target_probs": 0.999103844165802}}


{"result": {"time": "2021-02-11 10:05:43.400422", "n_pass": [44, 5, 5], "n_token": 48, "loss": [0.0868578627705574, 0.011924630962312222], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": [",", "'MachineInfoForKey'", ")", "#NEWLINE#", "def testKnobsManualKnobReturnsList(", "self", ",", "mock_mifk", ")", ":", "#NEWLINE#", "#INDENT#", "#UNINDENT#", "mock_mifk", ".", "side_effect", "=", "MifkSE", "#NEWLINE#", "k", "=", "experiments", ".", "Knobs", "(", ")", "#NEWLINE#", "knobs", "=", "k", ".", "_GetKnobs", "(", ")", "#NEWLINE#", "self", "'baz'", ",", "'bar'", "]", ",", "k", "[", "experiments", ".", "MANUAL_ON_KNOB", "]", ")"]}}
{"position": {"error_location": 41, "repair_targets": [27], "repair_candidates": [5, 35, 19, 29, 41, 7, 13, 17, 27]}}
{"prediction": {"error_location": 0.9168074131011963, "repair_targets": [0.988146185874939], "repair_candidates": [0.00027601353940553963, 0.0035957759246230125, 0.00012497161515057087, 0.0004078962665516883, 0.002109967637807131, 0.988146185874939, 2.328716618649196e-05, 0.00530218705534935, 1.3649665561388247e-05], "target_probs": 0.988146185874939}}


{"result": {"time": "2021-02-11 10:05:43.470197", "n_pass": [46, 6, 6], "n_token": 42, "loss": [0.01978905126452446, 9.93062712950632e-05], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": [",", "'MachineInfoForKey'", ")", "#NEWLINE#", "def testKnobsManualKnobReturnsList(", "self", ",", "mock_mifk", ")", ":", "#NEWLINE#", "#INDENT#", "#UNINDENT#", "mock_mifk", ".", "side_effect", "=", "MifkSE", "#NEWLINE#", "k", "=", "experiments", ".", "Knobs", "(", ")", "#NEWLINE#", "knobs", "=", "k", ".", "_GetKnobs", "(", ")", "#NEWLINE#", "self", "'baz'", ",", "'bar'", "]", ",", "k"]}}
{"position": {"error_location": 41, "repair_targets": [27], "repair_candidates": [5, 35, 19, 29, 41, 7, 13, 17, 27]}}
{"prediction": {"error_location": 0.9804054498672485, "repair_targets": [0.9999006986618042], "repair_candidates": [2.246110398118617e-06, 3.779316830332391e-05, 1.7601144008949632e-06, 1.2709544535027817e-05, 4.018683102913201e-05, 0.9999006986618042, 2.095882337016519e-06, 2.236267619082355e-06, 1.7698576471048e-07], "target_probs": 0.9999006986618042}}


{"result": {"time": "2021-02-11 10:05:43.541330", "n_pass": [68, 7, 7], "n_token": 39, "loss": [0.3734930753707886, 9.119926835410297e-05], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def testKnobsManualKnobReturnsList(", "self", ",", "mock_mifk", ")", ":", "#NEWLINE#", "#INDENT#", "#UNINDENT#", "mock_mifk", ".", "side_effect", "=", "MifkSE", "#NEWLINE#", "k", "=", "experiments", ".", "Knobs", "(", ")", "#NEWLINE#", "knobs", "=", "k", ".", "_GetKnobs", "(", ")", "#NEWLINE#", "self", "'baz'", ",", "'bar'", "]", ",", "k"]}}
{"position": {"error_location": 38, "repair_targets": [24], "repair_candidates": [2, 32, 16, 26, 38, 4, 10, 14, 24]}}
{"prediction": {"error_location": 0.6883257627487183, "repair_targets": [0.9999088048934937], "repair_candidates": [1.0807517583089066e-06, 1.6700067135388963e-05, 1.5085647646628786e-06, 1.1916414223378524e-05, 5.721570414607413e-05, 0.9999088048934937, 9.865520951279905e-07, 1.6217958318520687e-06, 1.567212422060038e-07], "target_probs": 0.9999088048934937}}


{"result": {"time": "2021-02-11 10:05:43.608551", "n_pass": [70, 8, 8], "n_token": 36, "loss": [0.5427321195602417, 8.559592970414087e-05], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def testKnobsManualKnobReturnsList(", "self", ",", "mock_mifk", ")", "#UNINDENT#", "mock_mifk", ".", "side_effect", "=", "MifkSE", "#NEWLINE#", "k", "=", "experiments", ".", "Knobs", "(", ")", "#NEWLINE#", "knobs", "=", "k", ".", "_GetKnobs", "(", ")", "#NEWLINE#", "self", "'baz'", ",", "'bar'", "]", ",", "k"]}}
{"position": {"error_location": 35, "repair_targets": [21], "repair_candidates": [2, 29, 13, 23, 35, 4, 7, 11, 21]}}
{"prediction": {"error_location": 0.5811583399772644, "repair_targets": [0.9999144077301025], "repair_candidates": [8.859432796270994e-07, 2.1842820387973916e-06, 8.982435133475519e-07, 1.1740542504412588e-05, 6.790814222767949e-05, 0.9999144077301025, 8.714771979612124e-07, 1.1206135468455614e-06, 9.750875307190654e-08], "target_probs": 0.9999144077301025}}


{"result": {"time": "2021-02-11 10:05:43.674157", "n_pass": [74, 9, 9], "n_token": 33, "loss": [0.5532966256141663, 7.653529610252008e-05], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def testKnobsManualKnobReturnsList(", "self", ",", "mock_mifk", ")", "#UNINDENT#", "mock_mifk", ".", "side_effect", "=", "MifkSE", "#NEWLINE#", "k", "=", "(", ")", "#NEWLINE#", "knobs", "=", "k", ".", "_GetKnobs", "(", ")", "#NEWLINE#", "self", "'baz'", ",", "'bar'", "]", ",", "k"]}}
{"position": {"error_location": 32, "repair_targets": [18], "repair_candidates": [2, 26, 13, 20, 32, 4, 7, 11, 18]}}
{"prediction": {"error_location": 0.575050950050354, "repair_targets": [0.9999234676361084], "repair_candidates": [9.355547376799223e-07, 7.092360192473279e-06, 1.7503419940112508e-06, 7.121946055121953e-06, 5.630966188618913e-05, 0.9999234676361084, 1.7227436046596267e-06, 1.4299014310381608e-06, 1.9057770828112552e-07], "target_probs": 0.9999234676361084}}


{"result": {"time": "2021-02-11 10:05:43.801168", "n_pass": [77, 11, 10], "n_token": 30, "loss": [0.20546384155750275, 0.0033521149307489395], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def testKnobsManualKnobReturnsList(", "self", ",", "mock_mifk", ")", "#UNINDENT#", "mock_mifk", ".", "side_effect", "=", "MifkSE", "#NEWLINE#", "k", "=", "(", ")", "#NEWLINE#", "knobs", "=", "k", ")", "#NEWLINE#", "self", "'baz'", ",", "'bar'", "]", ",", "k"]}}
{"position": {"error_location": 29, "repair_targets": [18], "repair_candidates": [2, 23, 13, 20, 29, 4, 7, 11, 18]}}
{"prediction": {"error_location": 0.8142696022987366, "repair_targets": [0.9966534972190857], "repair_candidates": [3.783771171583794e-05, 0.0019287095637992024, 0.0007056908216327429, 4.8502923164051026e-05, 0.0005573309026658535, 0.9966534972190857, 4.0906297726905905e-06, 6.322428089333698e-05, 1.0808749948409968e-06], "target_probs": 0.9966534972190857}}


{"result": {"time": "2021-02-11 10:05:43.991352", "n_pass": [111, 14, 11], "n_token": 28, "loss": [0.013065207749605179, 0.00776604562997818], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def testKnobsManualKnobReturnsList(", "self", ",", "mock_mifk", ")", "#UNINDENT#", "mock_mifk", ".", "side_effect", "=", "MifkSE", "#NEWLINE#", "k", "=", "(", ")", "#NEWLINE#", "knobs", "=", "k", ")", "#NEWLINE#", "self", "'bar'", "]", ",", "k"]}}
{"position": {"error_location": 27, "repair_targets": [18], "repair_candidates": [2, 23, 13, 20, 27, 4, 7, 11, 18]}}
{"prediction": {"error_location": 0.9870197772979736, "repair_targets": [0.9922640323638916], "repair_candidates": [0.0003518961602821946, 0.004551595076918602, 0.00243955384939909, 4.513510793913156e-05, 0.00030192677513696253, 0.9922640323638916, 7.815947355993558e-06, 3.677999848150648e-05, 1.2795995871783816e-06], "target_probs": 0.9922640323638916}}


{"result": {"time": "2021-02-11 10:05:44.115255", "n_pass": [114, 16, 12], "n_token": 27, "loss": [0.029602985829114914, 0.020611610263586044], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["def testKnobsManualKnobReturnsList(", "self", ",", "mock_mifk", ")", "#UNINDENT#", "mock_mifk", ".", "side_effect", "=", "MifkSE", "#NEWLINE#", "k", "=", "(", ")", "#NEWLINE#", "knobs", "=", "k", ")", "#NEWLINE#", "self", "'bar'", "]", ",", "k"]}}
{"position": {"error_location": 26, "repair_targets": [17], "repair_candidates": [1, 22, 12, 19, 26, 3, 6, 10, 17]}}
{"prediction": {"error_location": 0.9708309173583984, "repair_targets": [0.9795993566513062], "repair_candidates": [0.00035026005934923887, 0.01864786632359028, 0.0010678854305297136, 3.38994650519453e-05, 0.00025885464856401086, 0.9795993566513062, 9.28275130718248e-06, 3.181482315994799e-05, 8.778206392889842e-07], "target_probs": 0.9795993566513062}}


{"result": {"time": "2021-02-11 10:05:44.177376", "n_pass": [115, 17, 13], "n_token": 26, "loss": [0.24611201882362366, 0.03809293359518051], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["self", ",", "mock_mifk", ")", "#UNINDENT#", "mock_mifk", ".", "side_effect", "=", "MifkSE", "#NEWLINE#", "k", "=", "(", ")", "#NEWLINE#", "knobs", "=", "k", ")", "#NEWLINE#", "self", "'bar'", "]", ",", "k"]}}
{"position": {"error_location": 25, "repair_targets": [16], "repair_candidates": [0, 21, 11, 18, 25, 2, 5, 9, 16]}}
{"prediction": {"error_location": 0.7818347215652466, "repair_targets": [0.9626234769821167], "repair_candidates": [0.002070964779704809, 0.02621997334063053, 0.008188964799046516, 0.00028385937912389636, 0.00045540608698502183, 0.9626234769821167, 3.184713932569139e-05, 0.00012350665929261595, 1.945142230397323e-06], "target_probs": 0.9626234769821167}}


{"result": {"time": "2021-02-11 10:05:44.238796", "n_pass": [117, 18, 14], "n_token": 25, "loss": [0.025541463866829872, 0.010755655355751514], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["self", "mock_mifk", ")", "#UNINDENT#", "mock_mifk", ".", "side_effect", "=", "MifkSE", "#NEWLINE#", "k", "=", "(", ")", "#NEWLINE#", "knobs", "=", "k", ")", "#NEWLINE#", "self", "'bar'", "]", ",", "k"]}}
{"position": {"error_location": 24, "repair_targets": [15], "repair_candidates": [0, 20, 10, 17, 24, 1, 4, 8, 15]}}
{"prediction": {"error_location": 0.9747819304466248, "repair_targets": [0.9893019795417786], "repair_candidates": [0.0006452442612498999, 0.006049675866961479, 0.003462009597569704, 7.45393117540516e-05, 0.000369150162441656, 0.9893019795417786, 1.87235764315119e-05, 7.73613719502464e-05, 1.3011508599447552e-06], "target_probs": 0.9893019795417786}}


{"result": {"time": "2021-02-11 10:05:44.302034", "n_pass": [119, 19, 15], "n_token": 24, "loss": [0.02247912809252739, 0.010901770554482937], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["self", "mock_mifk", "#UNINDENT#", "mock_mifk", ".", "side_effect", "=", "MifkSE", "#NEWLINE#", "k", "=", "(", ")", "#NEWLINE#", "knobs", "=", "k", ")", "#NEWLINE#", "self", "'bar'", "]", ",", "k"]}}
{"position": {"error_location": 23, "repair_targets": [14], "repair_candidates": [0, 19, 9, 16, 23, 1, 3, 7, 14]}}
{"prediction": {"error_location": 0.9777714014053345, "repair_targets": [0.9891574382781982], "repair_candidates": [0.0005864149425178766, 0.0022248495370149612, 0.007618780713528395, 7.153131446102634e-05, 0.0002687298401724547, 0.9891574382781982, 2.15234249481e-05, 4.939053178532049e-05, 1.340661015092337e-06], "target_probs": 0.9891574382781982}}


{"result": {"time": "2021-02-11 10:05:44.361777", "n_pass": [120, 20, 16], "n_token": 23, "loss": [0.035378891974687576, 0.011245541274547577], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["self", "mock_mifk", "mock_mifk", ".", "side_effect", "=", "MifkSE", "#NEWLINE#", "k", "=", "(", ")", "#NEWLINE#", "knobs", "=", "k", ")", "#NEWLINE#", "self", "'bar'", "]", ",", "k"]}}
{"position": {"error_location": 22, "repair_targets": [13], "repair_candidates": [0, 18, 8, 15, 22, 1, 2, 6, 13]}}
{"prediction": {"error_location": 0.9652397632598877, "repair_targets": [0.9888174533843994], "repair_candidates": [0.0009396446985192597, 0.008072305470705032, 0.001324316835962236, 0.00033816564246080816, 0.00040408913628198206, 0.9888174533843994, 1.9836941646644846e-05, 8.229958621086553e-05, 1.975358372874325e-06], "target_probs": 0.9888174533843994}}


{"result": {"time": "2021-02-11 10:05:44.420940", "n_pass": [122, 21, 17], "n_token": 22, "loss": [0.08615978807210922, 0.013497314415872097], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["self", "mock_mifk", "mock_mifk", "side_effect", "=", "MifkSE", "#NEWLINE#", "k", "=", "(", ")", "#NEWLINE#", "knobs", "=", "k", ")", "#NEWLINE#", "self", "'bar'", "]", ",", "k"]}}
{"position": {"error_location": 21, "repair_targets": [12], "repair_candidates": [0, 17, 7, 14, 21, 1, 2, 5, 12]}}
{"prediction": {"error_location": 0.9174476265907288, "repair_targets": [0.9865933656692505], "repair_candidates": [0.00011258183076279238, 0.000702603836543858, 0.012537452392280102, 5.524298671844008e-07, 4.17010705859866e-05, 0.9865933656692505, 3.0955413876654347e-06, 8.498913302901201e-06, 2.4059738734649727e-07], "target_probs": 0.9865933656692505}}


{"result": {"time": "2021-02-11 10:05:44.480131", "n_pass": [123, 22, 18], "n_token": 21, "loss": [0.5508211255073547, 0.09209875017404556], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["self", "mock_mifk", "mock_mifk", "=", "MifkSE", "#NEWLINE#", "k", "=", "(", ")", "#NEWLINE#", "knobs", "=", "k", ")", "#NEWLINE#", "self", "'bar'", "]", ",", "k"]}}
{"position": {"error_location": 20, "repair_targets": [11], "repair_candidates": [0, 16, 6, 13, 20, 1, 2, 4, 11]}}
{"prediction": {"error_location": 0.5764762759208679, "repair_targets": [0.9120150804519653], "repair_candidates": [0.00022818331490270793, 0.014742475003004074, 0.07286882400512695, 3.0681989301228896e-05, 0.00010053484584204853, 0.9120150804519653, 4.708543656306574e-06, 9.128289093496278e-06, 4.082265832039411e-07], "target_probs": 0.9120150804519653}}


{"result": {"time": "2021-02-11 10:05:45.127192", "n_pass": [164, 33, 19], "n_token": 20, "loss": [0.5841704607009888, 0.252020001411438], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["self", "mock_mifk", "mock_mifk", "=", "MifkSE", "#NEWLINE#", "k", "=", "(", ")", "#NEWLINE#", "knobs", "=", "k", ")", "self", "'bar'", "]", ",", "k"]}}
{"position": {"error_location": 19, "repair_targets": [11], "repair_candidates": [0, 15, 6, 13, 19, 1, 2, 4, 11]}}
{"prediction": {"error_location": 0.5575682520866394, "repair_targets": [0.7772291898727417], "repair_candidates": [0.0010202949633821845, 0.04380040243268013, 0.1772356927394867, 0.0001518092176411301, 0.0005308535182848573, 0.7772291898727417, 1.6431098629254848e-05, 1.3283195585245267e-05, 2.0762724943779176e-06], "target_probs": 0.7772291898727417}}


{"result": {"time": "2021-02-11 10:05:45.362241", "n_pass": [172, 37, 20], "n_token": 19, "loss": [0.5282143950462341, 0.0035524212289601564], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["self", "mock_mifk", "mock_mifk", "MifkSE", "#NEWLINE#", "k", "=", "(", ")", "#NEWLINE#", "knobs", "=", "k", ")", "self", "'bar'", "]", ",", "k"]}}
{"position": {"error_location": 18, "repair_targets": [10], "repair_candidates": [0, 14, 5, 12, 18, 1, 2, 3, 10]}}
{"prediction": {"error_location": 0.5896569490432739, "repair_targets": [0.9964538812637329], "repair_candidates": [0.0007220875704661012, 0.0008486278238706291, 0.00043847059714607894, 0.0012310876045376062, 0.0002564405440352857, 0.9964538812637329, 1.7274056517635472e-05, 3.049210863537155e-05, 1.6623525880277157e-06], "target_probs": 0.9964538812637329}}


{"result": {"time": "2021-02-11 10:05:45.420149", "n_pass": [174, 38, 21], "n_token": 18, "loss": [0.23360858857631683, 0.026148803532123566], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["self", "mock_mifk", "mock_mifk", "MifkSE", "k", "=", "(", ")", "#NEWLINE#", "knobs", "=", "k", ")", "self", "'bar'", "]", ",", "k"]}}
{"position": {"error_location": 17, "repair_targets": [9], "repair_candidates": [0, 13, 4, 11, 17, 1, 2, 3, 9]}}
{"prediction": {"error_location": 0.791671633720398, "repair_targets": [0.9741901159286499], "repair_candidates": [0.0007241523126140237, 0.0018112873658537865, 0.004574139602482319, 0.0170732568949461, 0.0015964293852448463, 0.9741901159286499, 9.0223165898351e-06, 1.942087328643538e-05, 2.212481831520563e-06], "target_probs": 0.9741901159286499}}


{"result": {"time": "2021-02-11 10:05:45.477772", "n_pass": [176, 39, 22], "n_token": 17, "loss": [0.016235871240496635, 0.01362262200564146], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["self", "mock_mifk", "mock_mifk", "MifkSE", "k", "(", ")", "#NEWLINE#", "knobs", "=", "k", ")", "self", "'bar'", "]", ",", "k"]}}
{"position": {"error_location": 16, "repair_targets": [8], "repair_candidates": [0, 12, 4, 10, 16, 1, 2, 3, 8]}}
{"prediction": {"error_location": 0.9838952422142029, "repair_targets": [0.9864697456359863], "repair_candidates": [0.0012115692952647805, 0.006749836262315512, 0.004954935517162085, 0.0005088024772703648, 3.208443376934156e-05, 0.9864697456359863, 3.805392043432221e-05, 3.341069896123372e-05, 1.489246074015682e-06], "target_probs": 0.9864697456359863}}


{"result": {"time": "2021-02-11 10:05:45.534854", "n_pass": [177, 40, 23], "n_token": 16, "loss": [0.04336274787783623, 0.013541720807552338], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["self", "mock_mifk", "mock_mifk", "MifkSE", "k", ")", "#NEWLINE#", "knobs", "=", "k", ")", "self", "'bar'", "]", ",", "k"]}}
{"position": {"error_location": 15, "repair_targets": [7], "repair_candidates": [0, 11, 4, 9, 15, 1, 2, 3, 7]}}
{"prediction": {"error_location": 0.9575639963150024, "repair_targets": [0.9865495562553406], "repair_candidates": [0.0026492595206946135, 0.006839234847575426, 0.0022553179878741503, 0.0012216538889333606, 0.00022388171055354178, 0.9865495562553406, 0.00012055428669555113, 0.00013819074956700206, 2.3272441467270255e-06], "target_probs": 0.9865495562553406}}


{"result": {"time": "2021-02-11 10:05:45.591393", "n_pass": [178, 41, 24], "n_token": 15, "loss": [0.021019205451011658, 0.007233732379972935], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["self", "mock_mifk", "mock_mifk", "MifkSE", "k", "#NEWLINE#", "knobs", "=", "k", ")", "self", "'bar'", "]", ",", "k"]}}
{"position": {"error_location": 14, "repair_targets": [6], "repair_candidates": [0, 10, 4, 8, 14, 1, 2, 3, 6]}}
{"prediction": {"error_location": 0.9792001843452454, "repair_targets": [0.9927923679351807], "repair_candidates": [0.001345431199297309, 0.004837468266487122, 0.0007624953286722302, 7.320767326746136e-05, 8.009952580323443e-05, 0.9927923679351807, 5.0481823564041406e-05, 5.728867472498678e-05, 1.1014125220754067e-06], "target_probs": 0.9927923679351807}}


{"result": {"time": "2021-02-11 10:05:45.647265", "n_pass": [179, 42, 25], "n_token": 14, "loss": [0.13992547988891602, 0.010234395042061806], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["self", "mock_mifk", "mock_mifk", "MifkSE", "k", "knobs", "=", "k", ")", "self", "'bar'", "]", ",", "k"]}}
{"position": {"error_location": 13, "repair_targets": [5], "repair_candidates": [0, 9, 4, 7, 13, 1, 2, 3, 5]}}
{"prediction": {"error_location": 0.8694230318069458, "repair_targets": [0.9898177981376648], "repair_candidates": [0.0040147327817976475, 0.0028994763270020485, 5.304897058522329e-05, 2.6077164875459857e-05, 0.0024436027742922306, 0.9898177981376648, 0.0006256329361349344, 0.00011506936425575987, 4.6026293603063095e-06], "target_probs": 0.9898177981376648}}




Minimal simplified tokens:

['self', 'mock_mifk', 'mock_mifk', 'MifkSE', 'k', 'knobs', '=', 'k', ')', 'self', "'bar'", ']', ',', 'k']
