
Original sample:

{"has_bug": true, "bug_kind": 1, "bug_kind_name": "VARIABLE_MISUSE", "source_tokens": ["#NEWLINE#", "def testFindOverride_plainString(", "self", ")", ":", "#NEWLINE#", "#INDENT#", "'Plain strings work as override keys.'", "#NEWLINE#", "c", "=", "ldapconnector", ".", "LDAPConnector", "(", "reactor", "=", "None", ",", "dn", "=", "'dc=example,dc=com'", ",", "factory", "=", "None", ")", "#NEWLINE#", "o", "=", "c", ".", "_findOverRide", "(", "dn", "=", "distinguishedname", ".", "DistinguishedName", "(", "'cn=foo,dc=example,dc=com'", ")", ",", "overrides", "=", "{", "#NEWLINE#", "#INDENT#", "'dc=example,dc=com'", ":", "(", "'server.example.com'", ",", "1389", ")", ",", "#NEWLINE#", "#UNINDENT#", "}", ")", "#NEWLINE#", "self", ".", "assertEquals", "(", "self", ",", "(", "'server.example.com'", ",", "1389", ")", ")"], "error_location": [65], "repair_targets": [28], "repair_candidates": [2, 61, 65, 28, 9, 30], "provenances": [{"datasetProvenance": {"datasetName": "ETHPy150Open", "filepath": "twisted/ldaptor/ldaptor/test/test_connector.py", "license": "mit", "note": "license: manual_eval"}}], "txt_file": "eval__VARIABLE_MISUSE__SStuB.txt-00000-of-00300", "js_count": 913, "results": {"model": "rnn", "prob": {"loc": [[6.442555218200141e-07, 2.9753779735158803e-12, 1.1860409572864161e-12, 1.9611638430849093e-14, 1.8886534182286155e-14, 4.947635725595367e-13, 4.7504118287676825e-14, 2.057212771444314e-13, 9.412504413039424e-13, 1.0640447941148712e-12, 3.3296634763604893e-14, 2.563526376852393e-13, 3.3441383885148e-13, 3.2788842323374203e-15, 2.444564190830223e-15, 3.2079821112897255e-13, 8.664274267662642e-14, 1.921466241325276e-12, 5.455005479444719e-13, 7.726862769411036e-13, 8.632553222601147e-14, 9.724556229717685e-14, 2.6099311107490378e-14, 8.680874595545784e-12, 5.248168978393142e-13, 5.915797907964093e-13, 4.710172342762241e-14, 2.5426161827032945e-13, 5.035018625990095e-13, 7.669989724725865e-14, 2.3099995874464874e-11, 1.0764164489222502e-13, 3.67766662392674e-14, 7.96971809293584e-14, 8.909914906568561e-13, 2.001440327489487e-13, 2.0223992429737117e-14, 2.6047020443287217e-12, 4.212739274295148e-16, 6.241964681675399e-14, 3.410089051414378e-13, 4.91268321595878e-13, 4.104275106624547e-14, 1.1474042202475054e-11, 2.318958827046691e-13, 4.1465312086708117e-13, 7.659384411440318e-12, 2.9602075998780286e-12, 3.541092115713629e-13, 9.627077645268586e-14, 5.209681969674251e-13, 2.9782266605139773e-13, 3.038101183388403e-14, 3.181806901286777e-11, 9.151459971767917e-13, 8.130341018486309e-12, 2.2172378516538416e-11, 2.163492258608346e-12, 5.82656319025876e-12, 1.6623631453587667e-13, 2.7378736756032696e-13, 1.1198043603499741e-09, 3.6061987272219265e-13, 4.036788698452698e-12, 1.0214348256099015e-09, 0.9999994039535522, 3.637133971778894e-08, 5.3685441508966036e-11, 2.3425165886908905e-12, 3.4728396916018645e-13, 4.373069961705056e-11, 6.5011785017887735e-12, 4.3891036638488146e-12]], "pointer": [[0.0, 0.0, 8.437128684590789e-08, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.00011084702418884262, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.9998831748962402, 0.0, 5.705385319743073e-06, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 2.0433784442275282e-08, 0.0, 0.0, 0.0, 2.0010250523228024e-07, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]], "target": [0.9998831748962402]}, "loss": [5.960462772236497e-07, 0.00011683192860800773], "acc": [0.0, 1.0, 1.0, 1.0]}}


Trace of simplified code(s):

{"result": {"time": "2021-02-11 10:39:24.290062", "n_pass": [1, 1, 1], "n_token": 73, "loss": [5.960462772236497e-07, 0.00011683192860800773], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def testFindOverride_plainString(", "self", ")", ":", "#NEWLINE#", "#INDENT#", "'Plain strings work as override keys.'", "#NEWLINE#", "c", "=", "ldapconnector", ".", "LDAPConnector", "(", "reactor", "=", "None", ",", "dn", "=", "'dc=example,dc=com'", ",", "factory", "=", "None", ")", "#NEWLINE#", "o", "=", "c", ".", "_findOverRide", "(", "dn", "=", "distinguishedname", ".", "DistinguishedName", "(", "'cn=foo,dc=example,dc=com'", ")", ",", "overrides", "=", "{", "#NEWLINE#", "#INDENT#", "'dc=example,dc=com'", ":", "(", "'server.example.com'", ",", "1389", ")", ",", "#NEWLINE#", "#UNINDENT#", "}", ")", "#NEWLINE#", "self", ".", "assertEquals", "(", "self", ",", "(", "'server.example.com'", ",", "1389", ")", ")"]}}
{"position": {"error_location": 65, "repair_targets": [28], "repair_candidates": [2, 61, 65, 28, 9, 30]}}
{"prediction": {"error_location": 0.9999994039535522, "repair_targets": [0.9998831748962402], "repair_candidates": [8.437128684590789e-08, 0.00011084702418884262, 0.9998831748962402, 5.705385319743073e-06, 2.0433784442275282e-08, 2.0010250523228024e-07], "target_probs": 0.9998831748962402}}


{"result": {"time": "2021-02-11 10:39:24.367160", "n_pass": [10, 2, 2], "n_token": 55, "loss": [4.768370445162873e-07, 0.0003839276032522321], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def testFindOverride_plainString(", "self", ")", ":", "#NEWLINE#", "#INDENT#", "'Plain strings work as override keys.'", "#NEWLINE#", "c", "=", "ldapconnector", ".", "LDAPConnector", "(", "reactor", "=", "None", ",", "dn", "=", "'dc=example,dc=com'", ",", "factory", "=", "None", ")", "#NEWLINE#", "o", "=", "c", ".", "_findOverRide", "(", "dn", "=", ")", ",", "#NEWLINE#", "#UNINDENT#", "}", ")", "#NEWLINE#", "self", ".", "assertEquals", "(", "self", ",", "(", "'server.example.com'", ",", "1389", ")", ")"]}}
{"position": {"error_location": 47, "repair_targets": [28], "repair_candidates": [2, 43, 47, 28, 9, 30]}}
{"prediction": {"error_location": 0.9999995231628418, "repair_targets": [0.9996161460876465], "repair_candidates": [1.1070529382095629e-07, 0.0003794190415646881, 0.9996161460876465, 4.213628471916309e-06, 2.4260906172912655e-08, 1.5311036349885399e-07], "target_probs": 0.9996161460876465}}


{"result": {"time": "2021-02-11 10:39:24.439796", "n_pass": [23, 3, 3], "n_token": 46, "loss": [2.3841855067985307e-07, 0.007917912676930428], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def testFindOverride_plainString(", "self", ")", ":", "#NEWLINE#", "#INDENT#", "'Plain strings work as override keys.'", "#NEWLINE#", "c", "=", "ldapconnector", ".", "LDAPConnector", "(", "reactor", "=", "None", "#NEWLINE#", "o", "=", "c", ".", "_findOverRide", "(", "dn", "=", ")", ",", "#NEWLINE#", "#UNINDENT#", "}", ")", "#NEWLINE#", "self", ".", "assertEquals", "(", "self", ",", "(", "'server.example.com'", ",", "1389", ")", ")"]}}
{"position": {"error_location": 38, "repair_targets": [19], "repair_candidates": [2, 34, 38, 19, 9, 21]}}
{"prediction": {"error_location": 0.9999997615814209, "repair_targets": [0.9921133518218994], "repair_candidates": [9.320324920736311e-07, 0.007835373282432556, 0.9921133518218994, 4.895258825854398e-05, 2.0435101077964646e-07, 1.1769675438699778e-06], "target_probs": 0.9921133518218994}}


{"result": {"time": "2021-02-11 10:39:24.509773", "n_pass": [40, 4, 4], "n_token": 41, "loss": [3.576278118089249e-07, 0.016199259087443352], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def testFindOverride_plainString(", "self", ")", ":", "#NEWLINE#", "#INDENT#", "'Plain strings work as override keys.'", "#NEWLINE#", "c", "=", "ldapconnector", ".", "LDAPConnector", "(", "reactor", "=", "None", "#NEWLINE#", "o", "=", "c", ".", "_findOverRide", "(", "dn", "}", ")", "#NEWLINE#", "self", ".", "assertEquals", "(", "self", ",", "(", "'server.example.com'", ",", "1389", ")", ")"]}}
{"position": {"error_location": 33, "repair_targets": [19], "repair_candidates": [2, 29, 33, 19, 9, 21]}}
{"prediction": {"error_location": 0.9999996423721313, "repair_targets": [0.9839312434196472], "repair_candidates": [2.28629710363748e-06, 0.01601308397948742, 0.9839312434196472, 4.9909489462152123e-05, 6.48708976314083e-07, 2.7686471639754018e-06], "target_probs": 0.9839312434196472}}


{"result": {"time": "2021-02-11 10:39:24.576983", "n_pass": [43, 5, 5], "n_token": 36, "loss": [7.152555099310121e-07, 0.023722385987639427], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def testFindOverride_plainString(", "self", ")", ":", "#NEWLINE#", "#INDENT#", "'Plain strings work as override keys.'", "#NEWLINE#", "c", "=", "ldapconnector", ".", "LDAPConnector", "(", "reactor", "=", "None", "#NEWLINE#", "o", "=", "c", ".", "_findOverRide", "(", "dn", "}", ")", "#NEWLINE#", "self", ".", "assertEquals", "(", "self", ",", "("]}}
{"position": {"error_location": 33, "repair_targets": [19], "repair_candidates": [2, 29, 33, 19, 9, 21]}}
{"prediction": {"error_location": 0.9999992847442627, "repair_targets": [0.9765567779541016], "repair_candidates": [1.8153308474211372e-06, 0.023413160815835, 0.9765567779541016, 2.6367619284428656e-05, 2.2165613700053655e-07, 1.7309424720224342e-06], "target_probs": 0.9765567779541016}}


{"result": {"time": "2021-02-11 10:39:24.644226", "n_pass": [45, 6, 6], "n_token": 32, "loss": [7.152555099310121e-07, 0.0017657362623140216], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def testFindOverride_plainString(", "self", ")", "#NEWLINE#", "c", "=", "ldapconnector", ".", "LDAPConnector", "(", "reactor", "=", "None", "#NEWLINE#", "o", "=", "c", ".", "_findOverRide", "(", "dn", "}", ")", "#NEWLINE#", "self", ".", "assertEquals", "(", "self", ",", "("]}}
{"position": {"error_location": 29, "repair_targets": [15], "repair_candidates": [2, 25, 29, 15, 5, 17]}}
{"prediction": {"error_location": 0.9999992847442627, "repair_targets": [0.998235821723938], "repair_candidates": [2.421885938019841e-06, 0.0017367792315781116, 0.998235821723938, 2.3136446543503553e-05, 2.0987388893445313e-07, 1.5959947177179856e-06], "target_probs": 0.998235821723938}}


{"result": {"time": "2021-02-11 10:39:24.706959", "n_pass": [47, 7, 7], "n_token": 28, "loss": [2.3841830625315197e-06, 0.0022941897623240948], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def testFindOverride_plainString(", "self", ")", "#NEWLINE#", "c", "=", "ldapconnector", "=", "None", "#NEWLINE#", "o", "=", "c", ".", "_findOverRide", "(", "dn", "}", ")", "#NEWLINE#", "self", ".", "assertEquals", "(", "self", ",", "("]}}
{"position": {"error_location": 25, "repair_targets": [11], "repair_candidates": [2, 21, 25, 11, 5, 13]}}
{"prediction": {"error_location": 0.999997615814209, "repair_targets": [0.9977084398269653], "repair_candidates": [6.287686460382247e-07, 0.0022886916995048523, 0.9977084398269653, 1.8745766965366784e-06, 5.6279816362803103e-08, 2.925200419667817e-07], "target_probs": 0.9977084398269653}}


{"result": {"time": "2021-02-11 10:39:24.769043", "n_pass": [66, 8, 8], "n_token": 26, "loss": [5.960462772236497e-07, 0.0006205576355569065], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def testFindOverride_plainString(", "self", ")", "#NEWLINE#", "c", "=", "ldapconnector", "#NEWLINE#", "o", "=", "c", ".", "_findOverRide", "(", "dn", "}", ")", "#NEWLINE#", "self", ".", "assertEquals", "(", "self", ",", "("]}}
{"position": {"error_location": 23, "repair_targets": [9], "repair_candidates": [2, 19, 23, 9, 5, 11]}}
{"prediction": {"error_location": 0.9999994039535522, "repair_targets": [0.9993796348571777], "repair_candidates": [4.183120552170294e-07, 0.0006142527563497424, 0.9993796348571777, 5.310476353770355e-06, 1.0067225275633973e-07, 2.940336685242073e-07], "target_probs": 0.9993796348571777}}


{"result": {"time": "2021-02-11 10:39:24.829963", "n_pass": [69, 9, 9], "n_token": 24, "loss": [9.536738616588991e-07, 0.0042243292555212975], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def testFindOverride_plainString(", "self", ")", "#NEWLINE#", "c", "=", "ldapconnector", "#NEWLINE#", "o", "=", "c", "(", "dn", "}", ")", "#NEWLINE#", "self", ".", "assertEquals", "(", "self", ",", "("]}}
{"position": {"error_location": 21, "repair_targets": [9], "repair_candidates": [2, 17, 21, 9, 5, 11]}}
{"prediction": {"error_location": 0.9999990463256836, "repair_targets": [0.99578458070755], "repair_candidates": [5.522499009202875e-07, 0.004199428483843803, 0.99578458070755, 1.462076761526987e-05, 5.253709218777658e-07, 3.0451116117546917e-07], "target_probs": 0.99578458070755}}


{"result": {"time": "2021-02-11 10:39:24.889444", "n_pass": [70, 10, 10], "n_token": 21, "loss": [5.125986263010418e-06, 0.0012101697502657771], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def testFindOverride_plainString(", "self", ")", "#NEWLINE#", "c", "=", "ldapconnector", "#NEWLINE#", "o", "=", "c", ")", "#NEWLINE#", "self", ".", "assertEquals", "(", "self", ",", "("]}}
{"position": {"error_location": 18, "repair_targets": [9], "repair_candidates": [2, 14, 18, 9, 5, 11]}}
{"prediction": {"error_location": 0.9999948740005493, "repair_targets": [0.9987905621528625], "repair_candidates": [9.383769565829425e-07, 0.001202695071697235, 0.9987905621528625, 4.752667791763088e-06, 1.2052508679971652e-07, 8.972998557510437e-07], "target_probs": 0.9987905621528625}}


{"result": {"time": "2021-02-11 10:39:24.946935", "n_pass": [72, 11, 11], "n_token": 18, "loss": [0.5433677434921265, 9.894860704662278e-05], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def testFindOverride_plainString(", "self", ")", "#NEWLINE#", "c", "=", "ldapconnector", "#NEWLINE#", "o", "=", "c", ")", "#NEWLINE#", "self", "self", ",", "("]}}
{"position": {"error_location": 15, "repair_targets": [9], "repair_candidates": [2, 14, 15, 9, 5, 11]}}
{"prediction": {"error_location": 0.5807890295982361, "repair_targets": [0.9999010562896729], "repair_candidates": [1.663200492885153e-07, 9.748686716193333e-05, 0.9999010562896729, 6.953245588192658e-07, 3.4711183616309427e-07, 1.924775716588556e-07], "target_probs": 0.9999010562896729}}


{"result": {"time": "2021-02-11 10:39:25.062548", "n_pass": [77, 13, 12], "n_token": 16, "loss": [0.7630985379219055, 0.0023569802287966013], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def testFindOverride_plainString(", "self", ")", "#NEWLINE#", "c", "#NEWLINE#", "o", "=", "c", ")", "#NEWLINE#", "self", "self", ",", "("]}}
{"position": {"error_location": 13, "repair_targets": [7], "repair_candidates": [2, 12, 13, 7, 5, 9]}}
{"prediction": {"error_location": 0.46621963381767273, "repair_targets": [0.9976457953453064], "repair_candidates": [8.86786324372224e-07, 0.0023454572074115276, 0.9976457953453064, 2.7619560114544583e-06, 3.778344307647785e-06, 1.319576313107973e-06], "target_probs": 0.9976457953453064}}


{"result": {"time": "2021-02-11 10:39:25.344468", "n_pass": [104, 18, 13], "n_token": 15, "loss": [0.37255632877349854, 0.004440196789801121], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def testFindOverride_plainString(", "self", ")", "#NEWLINE#", "c", "#NEWLINE#", "o", "=", "c", ")", "self", "self", ",", "("]}}
{"position": {"error_location": 12, "repair_targets": [7], "repair_candidates": [2, 11, 12, 7, 5, 9]}}
{"prediction": {"error_location": 0.6889708638191223, "repair_targets": [0.99556964635849], "repair_candidates": [7.0416881499113515e-06, 0.004269146826118231, 0.99556964635849, 2.9591108614113182e-05, 0.0001177329831989482, 6.897137609485071e-06], "target_probs": 0.99556964635849}}


{"result": {"time": "2021-02-11 10:39:25.454448", "n_pass": [107, 20, 14], "n_token": 14, "loss": [0.5293627977371216, 0.005212277639657259], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["def testFindOverride_plainString(", "self", ")", "#NEWLINE#", "c", "#NEWLINE#", "o", "=", "c", ")", "self", "self", ",", "("]}}
{"position": {"error_location": 11, "repair_targets": [6], "repair_candidates": [1, 10, 11, 6, 4, 8]}}
{"prediction": {"error_location": 0.5889801383018494, "repair_targets": [0.9948012828826904], "repair_candidates": [0.00014851472224108875, 0.004914240445941687, 0.9948012828826904, 2.200135168095585e-05, 0.00010737035336205736, 6.674674750684062e-06], "target_probs": 0.9948012828826904}}


{"result": {"time": "2021-02-11 10:39:25.564192", "n_pass": [110, 22, 15], "n_token": 13, "loss": [0.12086976319551468, 0.014409991912543774], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["def testFindOverride_plainString(", "self", "#NEWLINE#", "c", "#NEWLINE#", "o", "=", "c", ")", "self", "self", ",", "("]}}
{"position": {"error_location": 10, "repair_targets": [5], "repair_candidates": [1, 9, 10, 5, 3, 7]}}
{"prediction": {"error_location": 0.8861493468284607, "repair_targets": [0.9856933355331421], "repair_candidates": [0.0005267727538011968, 0.013454186730086803, 0.9856933355331421, 4.768487633555196e-05, 0.00026084057753905654, 1.7210042642545886e-05], "target_probs": 0.9856933355331421}}


{"result": {"time": "2021-02-11 10:39:25.618585", "n_pass": [111, 23, 16], "n_token": 12, "loss": [0.3118877708911896, 0.08297240734100342], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["def testFindOverride_plainString(", "self", "c", "#NEWLINE#", "o", "=", "c", ")", "self", "self", ",", "("]}}
{"position": {"error_location": 9, "repair_targets": [4], "repair_candidates": [1, 8, 9, 4, 2, 6]}}
{"prediction": {"error_location": 0.7320637106895447, "repair_targets": [0.9203765392303467], "repair_candidates": [0.0022661855909973383, 0.07653862237930298, 0.9203765392303467, 0.00012804755533579737, 0.0006131429108791053, 7.7482545748353e-05], "target_probs": 0.9203765392303467}}


{"result": {"time": "2021-02-11 10:39:25.836337", "n_pass": [119, 27, 17], "n_token": 10, "loss": [0.3188139796257019, 0.0686236172914505], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["def testFindOverride_plainString(", "self", "c", "#NEWLINE#", "o", "=", "c", ")", "self", "self"]}}
{"position": {"error_location": 9, "repair_targets": [4], "repair_candidates": [1, 8, 9, 4, 2, 6]}}
{"prediction": {"error_location": 0.7270107865333557, "repair_targets": [0.9336780309677124], "repair_candidates": [0.0007303798920474946, 0.06551145762205124, 0.9336780309677124, 3.0382818295038305e-05, 3.08467133436352e-05, 1.8954928236780688e-05], "target_probs": 0.9336780309677124}}




Minimal simplified tokens:

['def testFindOverride_plainString(', 'self', 'c', '#NEWLINE#', 'o', '=', 'c', ')', 'self', 'self']
