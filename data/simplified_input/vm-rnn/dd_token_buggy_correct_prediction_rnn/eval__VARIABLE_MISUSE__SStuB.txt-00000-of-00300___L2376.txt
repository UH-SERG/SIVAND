
Original sample:

{"has_bug": true, "bug_kind": 1, "bug_kind_name": "VARIABLE_MISUSE", "source_tokens": ["#NEWLINE#", "def add_description(", "self", ",", "description", ")", ":", "#NEWLINE#", "#INDENT#", "'Adds a description to the ``descriptions`` collection.\\n\\n        This is the same as calling \"foo.descriptions.add(bar)\".\\n\\n        '", "#NEWLINE#", "self", ".", "descriptions", ".", "add", "(", "self", ")"], "error_location": [17], "repair_targets": [4], "repair_candidates": [2, 11, 17, 4], "provenances": [{"datasetProvenance": {"datasetName": "ETHPy150Open", "filepath": "STIXProject/python-stix/stix/exploit_target/configuration.py", "license": "bsd-3-clause", "note": "license: bigquery_api"}}], "txt_file": "eval__VARIABLE_MISUSE__SStuB.txt-00000-of-00300", "js_count": 2376, "results": {"model": "rnn", "prob": {"loc": [[4.4570520003617276e-06, 5.551322942998205e-11, 8.144665497589187e-12, 1.3843177906064374e-12, 3.673053250441427e-10, 5.421069409344836e-12, 4.636565653984293e-13, 1.0502113935439983e-11, 7.635227519675603e-12, 1.0538333226894903e-11, 1.1323676371577385e-11, 1.4694468974951747e-09, 1.7090196445523897e-12, 3.0146347224091485e-11, 4.0082546656772244e-12, 1.7626181764152093e-11, 3.04416214458314e-10, 0.9999953508377075, 2.7199763508178876e-07]], "pointer": [[0.0, 0.0, 3.003299752890598e-05, 0.0, 0.9999693632125854, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 2.5511968715363764e-07, 0.0, 0.0, 0.0, 0.0, 0.0, 3.636024246134184e-07, 0.0]], "target": [0.9999693632125854]}, "loss": [4.6491513785440475e-06, 3.0637256713816896e-05], "acc": [0.0, 1.0, 1.0, 1.0]}}


Trace of simplified code(s):

{"result": {"time": "2021-02-11 10:17:33.687892", "n_pass": [1, 1, 1], "n_token": 19, "loss": [4.6491513785440475e-06, 3.0637256713816896e-05], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def add_description(", "self", ",", "description", ")", ":", "#NEWLINE#", "#INDENT#", "'Adds a description to the ``descriptions`` collection.\\n\\n        This is the same as calling \"foo.descriptions.add(bar)\".\\n\\n        '", "#NEWLINE#", "self", ".", "descriptions", ".", "add", "(", "self", ")"]}}
{"position": {"error_location": 17, "repair_targets": [4], "repair_candidates": [2, 11, 17, 4]}}
{"prediction": {"error_location": 0.9999953508377075, "repair_targets": [0.9999693632125854], "repair_candidates": [3.003299752890598e-05, 0.9999693632125854, 2.5511968715363764e-07, 3.636024246134184e-07], "target_probs": 0.9999693632125854}}


{"result": {"time": "2021-02-11 10:17:33.745058", "n_pass": [20, 2, 2], "n_token": 17, "loss": [0.03421974182128906, 0.5410661697387695], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["self", ",", "description", ")", ":", "#NEWLINE#", "#INDENT#", "'Adds a description to the ``descriptions`` collection.\\n\\n        This is the same as calling \"foo.descriptions.add(bar)\".\\n\\n        '", "#NEWLINE#", "self", ".", "descriptions", ".", "add", "(", "self", ")"]}}
{"position": {"error_location": 15, "repair_targets": [2], "repair_candidates": [0, 9, 15, 2]}}
{"prediction": {"error_location": 0.9663592576980591, "repair_targets": [0.5821272730827332], "repair_candidates": [0.4174956679344177, 0.5821272730827332, 5.3673247748520225e-05, 0.00032341526821255684], "target_probs": 0.5821272730827332}}


{"result": {"time": "2021-02-11 10:17:33.800897", "n_pass": [22, 3, 3], "n_token": 15, "loss": [0.023784907534718513, 0.5789700150489807], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["self", ",", "description", ")", "#INDENT#", "'Adds a description to the ``descriptions`` collection.\\n\\n        This is the same as calling \"foo.descriptions.add(bar)\".\\n\\n        '", "#NEWLINE#", "self", ".", "descriptions", ".", "add", "(", "self", ")"]}}
{"position": {"error_location": 13, "repair_targets": [2], "repair_candidates": [0, 7, 13, 2]}}
{"prediction": {"error_location": 0.976495623588562, "repair_targets": [0.5604753494262695], "repair_candidates": [0.43920081853866577, 0.5604753494262695, 6.494549597846344e-05, 0.00025890025426633656], "target_probs": 0.5604753494262695}}


{"result": {"time": "2021-02-11 10:17:33.912379", "n_pass": [25, 5, 4], "n_token": 12, "loss": [0.002001070184633136, 0.5543391704559326], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["self", ",", "description", ")", "#INDENT#", "'Adds a description to the ``descriptions`` collection.\\n\\n        This is the same as calling \"foo.descriptions.add(bar)\".\\n\\n        '", "#NEWLINE#", "self", ".", "(", "self", ")"]}}
{"position": {"error_location": 10, "repair_targets": [2], "repair_candidates": [0, 7, 10, 2]}}
{"prediction": {"error_location": 0.9980008006095886, "repair_targets": [0.574451744556427], "repair_candidates": [0.42528241872787476, 0.574451744556427, 6.678656063741073e-05, 0.00019910444098059088], "target_probs": 0.574451744556427}}


{"result": {"time": "2021-02-11 10:17:34.070856", "n_pass": [44, 8, 5], "n_token": 11, "loss": [0.0019331354415044188, 0.08616712689399719], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["self", "description", ")", "#INDENT#", "'Adds a description to the ``descriptions`` collection.\\n\\n        This is the same as calling \"foo.descriptions.add(bar)\".\\n\\n        '", "#NEWLINE#", "self", ".", "(", "self", ")"]}}
{"position": {"error_location": 9, "repair_targets": [1], "repair_candidates": [0, 6, 9, 1]}}
{"prediction": {"error_location": 0.9980687499046326, "repair_targets": [0.9174408912658691], "repair_candidates": [0.08245646953582764, 0.9174408912658691, 9.693732863524929e-06, 9.281588427256793e-05], "target_probs": 0.9174408912658691}}


{"result": {"time": "2021-02-11 10:17:34.123453", "n_pass": [46, 9, 6], "n_token": 10, "loss": [0.022443577647209167, 0.2931031882762909], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["self", "description", "#INDENT#", "'Adds a description to the ``descriptions`` collection.\\n\\n        This is the same as calling \"foo.descriptions.add(bar)\".\\n\\n        '", "#NEWLINE#", "self", ".", "(", "self", ")"]}}
{"position": {"error_location": 8, "repair_targets": [1], "repair_candidates": [0, 5, 8, 1]}}
{"prediction": {"error_location": 0.9778063893318176, "repair_targets": [0.745945155620575], "repair_candidates": [0.25225958228111267, 0.745945155620575, 2.6267320208717138e-05, 0.0017690059030428529], "target_probs": 0.745945155620575}}


{"result": {"time": "2021-02-11 10:17:34.175157", "n_pass": [47, 10, 7], "n_token": 9, "loss": [0.036316584795713425, 0.42219769954681396], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["self", "description", "'Adds a description to the ``descriptions`` collection.\\n\\n        This is the same as calling \"foo.descriptions.add(bar)\".\\n\\n        '", "#NEWLINE#", "self", ".", "(", "self", ")"]}}
{"position": {"error_location": 7, "repair_targets": [1], "repair_candidates": [0, 4, 7, 1]}}
{"prediction": {"error_location": 0.9643349647521973, "repair_targets": [0.6556044220924377], "repair_candidates": [0.33961740136146545, 0.6556044220924377, 2.470696017553564e-05, 0.004753511864691973], "target_probs": 0.6556044220924377}}


{"result": {"time": "2021-02-11 10:17:34.486586", "n_pass": [62, 16, 8], "n_token": 8, "loss": [0.02765006758272648, 0.5382602214813232], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["self", "description", "'Adds a description to the ``descriptions`` collection.\\n\\n        This is the same as calling \"foo.descriptions.add(bar)\".\\n\\n        '", "#NEWLINE#", "self", ".", "(", "self"]}}
{"position": {"error_location": 7, "repair_targets": [1], "repair_candidates": [0, 4, 7, 1]}}
{"prediction": {"error_location": 0.9727286696434021, "repair_targets": [0.5837630033493042], "repair_candidates": [0.41370829939842224, 0.5837630033493042, 1.8755681594484486e-05, 0.0025099061895161867], "target_probs": 0.5837630033493042}}




Minimal simplified tokens:

['self', 'description', '\'Adds a description to the ``descriptions`` collection.\\n\\n        This is the same as calling "foo.descriptions.add(bar)".\\n\\n        \'', '#NEWLINE#', 'self', '.', '(', 'self']
