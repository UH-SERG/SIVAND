
Original sample:

{"has_bug": true, "bug_kind": 1, "bug_kind_name": "VARIABLE_MISUSE", "source_tokens": ["#NEWLINE#", "def add_blank(", "self", ",", "value", "=", "''", ",", "before", "=", "None", ",", "after", "=", "None", ")", ":", "#NEWLINE#", "#INDENT#", "'\\n        Add a blank card.\\n\\n        Parameters\\n        ----------\\n        value : str, optional\\n            Text to be added.\\n\\n        before : str or int, optional\\n            Same as in `Header.update`\\n\\n        after : str or int, optional\\n            Same as in `Header.update`\\n        '", "#NEWLINE#", "self", ".", "_add_commentary", "(", "''", ",", "value", ",", "before", "=", "after", ",", "after", "=", "after", ")"], "error_location": [31], "repair_targets": [8, 29], "repair_candidates": [12, 31, 33, 35, 4, 27, 2, 21, 8, 29], "provenances": [{"datasetProvenance": {"datasetName": "ETHPy150Open", "filepath": "spacetelescope/PyFITS/pyfits/header.py", "license": "bsd-3-clause", "note": "license: bigquery_api"}}], "txt_file": "eval__VARIABLE_MISUSE__SStuB.txt-00000-of-00300", "js_count": 1075, "results": {"model": "rnn", "prob": {"loc": [[0.011894241906702518, 1.9265445416749571e-07, 1.01295789534106e-08, 1.407557181920538e-09, 2.6934220187513347e-08, 4.435671829838839e-09, 1.3182509528419928e-09, 3.08627279288487e-09, 3.661155378864578e-09, 1.6056146412424255e-09, 2.1025690077891568e-09, 2.9485547337060325e-10, 1.4457520514099542e-08, 9.305230475042947e-10, 9.201243100775969e-10, 9.959965074912702e-10, 7.327507489662821e-10, 3.6532310510040134e-09, 6.2149596580240996e-09, 2.4168558709902754e-08, 2.9241766785759182e-09, 1.665487969759738e-09, 1.186520239698785e-11, 4.661664387839437e-10, 3.554535332739306e-09, 3.3146278610729496e-08, 2.8839487242748874e-08, 0.01754586771130562, 1.1429132200646563e-06, 6.827435838907547e-10, 3.768846923435376e-08, 0.9704082608222961, 9.603325246132499e-09, 3.72127395564803e-08, 3.3243342301148004e-08, 0.00015011109644547105, 1.8193719864001423e-09]], "pointer": [[0.0, 0.0, 2.853257228707662e-06, 0.0, 5.019283435103716e-06, 0.0, 0.0, 0.0, 0.002457501133903861, 0.0, 0.0, 0.0, 1.2845261153415777e-05, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.9077040747106366e-07, 0.0, 0.0, 0.0, 0.0, 0.0, 1.1160123847275827e-07, 0.0, 0.9975211024284363, 0.0, 2.6219739268640296e-08, 0.0, 3.220274891191366e-07, 0.0, 3.8688966697009164e-08, 0.0]], "target": [0.9999786019325256]}, "loss": [0.03003862127661705, 2.139829666703008e-05], "acc": [0.0, 1.0, 1.0, 1.0]}}


Trace of simplified code(s):

{"result": {"time": "2021-02-11 09:52:23.916449", "n_pass": [1, 1, 1], "n_token": 37, "loss": [0.03003862127661705, 2.139829666703008e-05], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def add_blank(", "self", ",", "value", "=", "''", ",", "before", "=", "None", ",", "after", "=", "None", ")", ":", "#NEWLINE#", "#INDENT#", "'\\n        Add a blank card.\\n\\n        Parameters\\n        ----------\\n        value : str, optional\\n            Text to be added.\\n\\n        before : str or int, optional\\n            Same as in `Header.update`\\n\\n        after : str or int, optional\\n            Same as in `Header.update`\\n        '", "#NEWLINE#", "self", ".", "_add_commentary", "(", "''", ",", "value", ",", "before", "=", "after", ",", "after", "=", "after", ")"]}}
{"position": {"error_location": 31, "repair_targets": [8, 29], "repair_candidates": [12, 31, 33, 35, 4, 27, 2, 21, 8, 29]}}
{"prediction": {"error_location": 0.9704082608222961, "repair_targets": [0.002457501133903861, 0.9975211024284363], "repair_candidates": [2.853257228707662e-06, 5.019283435103716e-06, 0.002457501133903861, 1.2845261153415777e-05, 1.9077040747106366e-07, 1.1160123847275827e-07, 0.9975211024284363, 2.6219739268640296e-08, 3.220274891191366e-07, 3.8688966697009164e-08], "target_probs": 0.9999786019325256}}


{"result": {"time": "2021-02-11 09:52:23.984330", "n_pass": [25, 2, 2], "n_token": 32, "loss": [0.011709058657288551, 8.464217535220087e-05], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def add_blank(", "self", ",", "value", "=", "''", ",", "before", "=", "None", ",", "after", "=", "None", ")", ":", "#NEWLINE#", "#INDENT#", "'\\n        Add a blank card.\\n\\n        Parameters\\n        ----------\\n        value : str, optional\\n            Text to be added.\\n\\n        before : str or int, optional\\n            Same as in `Header.update`\\n\\n        after : str or int, optional\\n            Same as in `Header.update`\\n        '", "#NEWLINE#", "self", "value", ",", "before", "=", "after", ",", "after", "=", "after", ")"]}}
{"position": {"error_location": 26, "repair_targets": [8, 24], "repair_candidates": [12, 26, 28, 30, 4, 22, 2, 21, 8, 24]}}
{"prediction": {"error_location": 0.9883593320846558, "repair_targets": [0.010819624178111553, 0.9890957474708557], "repair_candidates": [5.984559265925782e-06, 6.285335985012352e-05, 0.010819624178111553, 6.4063724494189955e-06, 7.912571163615212e-06, 4.627877387974877e-07, 0.9890957474708557, 1.8436734805504784e-08, 9.471657449466875e-07, 1.0770603608989404e-07], "target_probs": 0.999915361404419}}


{"result": {"time": "2021-02-11 09:52:24.048302", "n_pass": [51, 3, 3], "n_token": 30, "loss": [0.32878586649894714, 0.025171564891934395], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["self", ",", "value", "=", "''", ",", "before", "=", "None", ",", "after", "=", "None", ")", ":", "#NEWLINE#", "#INDENT#", "'\\n        Add a blank card.\\n\\n        Parameters\\n        ----------\\n        value : str, optional\\n            Text to be added.\\n\\n        before : str or int, optional\\n            Same as in `Header.update`\\n\\n        after : str or int, optional\\n            Same as in `Header.update`\\n        '", "#NEWLINE#", "self", "value", ",", "before", "=", "after", ",", "after", "=", "after", ")"]}}
{"position": {"error_location": 24, "repair_targets": [6, 22], "repair_candidates": [10, 24, 26, 28, 2, 20, 0, 19, 6, 22]}}
{"prediction": {"error_location": 0.7197970747947693, "repair_targets": [0.00649420078843832, 0.968648374080658], "repair_candidates": [0.001974591054022312, 0.021688023582100868, 0.00649420078843832, 0.0005372039158828557, 0.0006037164130248129, 1.59474275278626e-05, 0.968648374080658, 4.974721719008812e-07, 3.05077282973798e-05, 6.9936086219968274e-06], "target_probs": 0.9751425981521606}}


{"result": {"time": "2021-02-11 09:52:24.110463", "n_pass": [53, 4, 4], "n_token": 28, "loss": [0.36846452951431274, 0.03687863424420357], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["self", ",", "value", "=", "before", "=", "None", ",", "after", "=", "None", ")", ":", "#NEWLINE#", "#INDENT#", "'\\n        Add a blank card.\\n\\n        Parameters\\n        ----------\\n        value : str, optional\\n            Text to be added.\\n\\n        before : str or int, optional\\n            Same as in `Header.update`\\n\\n        after : str or int, optional\\n            Same as in `Header.update`\\n        '", "#NEWLINE#", "self", "value", ",", "before", "=", "after", ",", "after", "=", "after", ")"]}}
{"position": {"error_location": 22, "repair_targets": [4, 20], "repair_candidates": [8, 22, 24, 26, 2, 18, 0, 17, 4, 20]}}
{"prediction": {"error_location": 0.6917957663536072, "repair_targets": [0.0011021291138604283, 0.9626909494400024], "repair_candidates": [0.0022320402786135674, 0.03262779861688614, 0.0011021291138604283, 0.000583818880841136, 0.0006913766846992075, 2.0891449821647257e-05, 0.9626909494400024, 5.623106744678807e-07, 4.263375740265474e-05, 7.871349225752056e-06], "target_probs": 0.9637930989265442}}


{"result": {"time": "2021-02-11 09:52:24.171772", "n_pass": [55, 5, 5], "n_token": 26, "loss": [0.47238224744796753, 0.02474617026746273], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["self", ",", "value", "=", "before", "=", "after", "=", "None", ")", ":", "#NEWLINE#", "#INDENT#", "'\\n        Add a blank card.\\n\\n        Parameters\\n        ----------\\n        value : str, optional\\n            Text to be added.\\n\\n        before : str or int, optional\\n            Same as in `Header.update`\\n\\n        after : str or int, optional\\n            Same as in `Header.update`\\n        '", "#NEWLINE#", "self", "value", ",", "before", "=", "after", ",", "after", "=", "after", ")"]}}
{"position": {"error_location": 20, "repair_targets": [4, 18], "repair_candidates": [6, 20, 22, 24, 2, 16, 0, 15, 4, 18]}}
{"prediction": {"error_location": 0.6235151290893555, "repair_targets": [0.006706803105771542, 0.9688507318496704], "repair_candidates": [0.0022404685150831938, 0.019228419288992882, 0.006706803105771542, 0.0019400866003707051, 0.0009514475241303444, 2.516051426937338e-05, 0.9688507318496704, 6.717812084389152e-07, 4.72782994620502e-05, 8.901314686227124e-06], "target_probs": 0.9755575060844421}}


{"result": {"time": "2021-02-11 09:52:24.231902", "n_pass": [57, 6, 6], "n_token": 24, "loss": [0.35088542103767395, 0.023399071767926216], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["self", ",", "value", "=", "before", "=", "after", "=", ":", "#NEWLINE#", "#INDENT#", "'\\n        Add a blank card.\\n\\n        Parameters\\n        ----------\\n        value : str, optional\\n            Text to be added.\\n\\n        before : str or int, optional\\n            Same as in `Header.update`\\n\\n        after : str or int, optional\\n            Same as in `Header.update`\\n        '", "#NEWLINE#", "self", "value", ",", "before", "=", "after", ",", "after", "=", "after", ")"]}}
{"position": {"error_location": 18, "repair_targets": [4, 16], "repair_candidates": [6, 18, 20, 22, 2, 14, 0, 13, 4, 16]}}
{"prediction": {"error_location": 0.7040644884109497, "repair_targets": [0.001698328647762537, 0.9751742482185364], "repair_candidates": [0.0016854841960594058, 0.019822165369987488, 0.001698328647762537, 0.0008359394851140678, 0.0007176282233558595, 1.2580547263496555e-05, 0.9751742482185364, 5.540124448089045e-07, 4.615763100446202e-05, 6.86809653416276e-06], "target_probs": 0.9768725633621216}}


{"result": {"time": "2021-02-11 09:52:24.293972", "n_pass": [58, 7, 7], "n_token": 22, "loss": [0.19409839808940887, 0.0047884006053209305], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["self", ",", "value", "=", "before", "=", "after", "=", "#INDENT#", "'\\n        Add a blank card.\\n\\n        Parameters\\n        ----------\\n        value : str, optional\\n            Text to be added.\\n\\n        before : str or int, optional\\n            Same as in `Header.update`\\n\\n        after : str or int, optional\\n            Same as in `Header.update`\\n        '", "#NEWLINE#", "self", "value", ",", "before", "=", "after", ",", "after", "=", "after", ")"]}}
{"position": {"error_location": 16, "repair_targets": [4, 14], "repair_candidates": [6, 16, 18, 20, 2, 12, 0, 11, 4, 14]}}
{"prediction": {"error_location": 0.823576807975769, "repair_targets": [0.00025831154198385775, 0.9949647188186646], "repair_candidates": [0.0011262234766036272, 0.0029615622479468584, 0.00025831154198385775, 0.0001824582868721336, 0.00048330152640119195, 7.1215663410839625e-06, 0.9949647188186646, 2.872121172003972e-07, 1.1812358025053982e-05, 4.1360417526448146e-06], "target_probs": 0.9952230453491211}}


{"result": {"time": "2021-02-11 09:52:24.354106", "n_pass": [59, 8, 8], "n_token": 20, "loss": [0.4013615548610687, 0.014740574173629284], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["self", ",", "value", "=", "before", "=", "after", "=", "#NEWLINE#", "self", "value", ",", "before", "=", "after", ",", "after", "=", "after", ")"]}}
{"position": {"error_location": 14, "repair_targets": [4, 12], "repair_candidates": [6, 14, 16, 18, 2, 10, 0, 9, 4, 12]}}
{"prediction": {"error_location": 0.6694081425666809, "repair_targets": [0.0005503528518602252, 0.9848172068595886], "repair_candidates": [0.0037441966123878956, 0.0032714728731662035, 0.0005503528518602252, 0.0037661658134311438, 0.0037000232841819525, 8.470502507407218e-05, 0.9848172068595886, 1.8891443005486508e-06, 3.936952634830959e-05, 2.4660586859681644e-05], "target_probs": 0.9853675365447998}}


{"result": {"time": "2021-02-11 09:52:24.412005", "n_pass": [84, 9, 9], "n_token": 19, "loss": [0.4172726571559906, 0.07870902121067047], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["self", ",", "value", "=", "before", "=", "after", "=", "self", "value", ",", "before", "=", "after", ",", "after", "=", "after", ")"]}}
{"position": {"error_location": 13, "repair_targets": [4, 11], "repair_candidates": [6, 13, 15, 17, 2, 9, 0, 8, 4, 11]}}
{"prediction": {"error_location": 0.6588412523269653, "repair_targets": [6.159808981465176e-05, 0.9242472648620605], "repair_candidates": [0.002356327837333083, 0.002193766413256526, 6.159808981465176e-05, 0.06713418662548065, 0.00391073152422905, 1.3536996448237915e-05, 0.9242472648620605, 5.053290351497708e-06, 2.8065360311302356e-05, 4.9469970690552145e-05], "target_probs": 0.9243088364601135}}


{"result": {"time": "2021-02-11 09:52:24.525515", "n_pass": [93, 11, 10], "n_token": 18, "loss": [0.06112926825881004, 0.013308960013091564], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["self", "value", "=", "before", "=", "after", "=", "self", "value", ",", "before", "=", "after", ",", "after", "=", "after", ")"]}}
{"position": {"error_location": 12, "repair_targets": [3, 10], "repair_candidates": [5, 12, 14, 16, 1, 8, 0, 7, 3, 10]}}
{"prediction": {"error_location": 0.9407017230987549, "repair_targets": [2.094799310725648e-05, 0.986758291721344], "repair_candidates": [0.0004966710112057626, 0.0010235110530629754, 2.094799310725648e-05, 0.011298047378659248, 0.0003894587862305343, 2.139058096872759e-06, 0.986758291721344, 7.084059916451224e-07, 3.7902207168372115e-06, 6.481332547991769e-06], "target_probs": 0.9867792129516602}}


{"result": {"time": "2021-02-11 09:52:24.581857", "n_pass": [95, 12, 11], "n_token": 17, "loss": [0.6523202657699585, 0.021158277988433838], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["self", "value", "before", "=", "after", "=", "self", "value", ",", "before", "=", "after", ",", "after", "=", "after", ")"]}}
{"position": {"error_location": 11, "repair_targets": [2, 9], "repair_candidates": [4, 11, 13, 15, 1, 7, 0, 6, 2, 9]}}
{"prediction": {"error_location": 0.5208358764648438, "repair_targets": [0.0006480352603830397, 0.9784159660339355], "repair_candidates": [0.0014922504778951406, 0.0005204548360779881, 0.0006480352603830397, 0.018241113051772118, 0.00048402915126644075, 6.774416306143394e-06, 0.9784159660339355, 5.739637344959192e-06, 6.477402348536998e-05, 0.0001209104448207654], "target_probs": 0.9790639877319336}}


{"result": {"time": "2021-02-11 09:52:24.637756", "n_pass": [97, 13, 12], "n_token": 16, "loss": [0.5177976489067078, 0.013655250892043114], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["self", "value", "before", "after", "=", "self", "value", ",", "before", "=", "after", ",", "after", "=", "after", ")"]}}
{"position": {"error_location": 10, "repair_targets": [2, 8], "repair_candidates": [3, 10, 12, 14, 1, 6, 0, 5, 2, 8]}}
{"prediction": {"error_location": 0.5958313345909119, "repair_targets": [0.0024143632035702467, 0.9840232133865356], "repair_candidates": [0.0008761468925513327, 0.00020988787582609802, 0.0024143632035702467, 0.011345041915774345, 0.0010696087265387177, 1.105382398236543e-05, 0.9840232133865356, 2.2027356862963643e-06, 1.764202352205757e-05, 3.078185545746237e-05], "target_probs": 0.9864375591278076}}


{"result": {"time": "2021-02-11 09:52:24.972523", "n_pass": [125, 19, 13], "n_token": 15, "loss": [0.29369956254959106, 0.01716352067887783], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["self", "value", "before", "after", "=", "self", "value", ",", "before", "=", "after", ",", "after", "=", "after"]}}
{"position": {"error_location": 10, "repair_targets": [2, 8], "repair_candidates": [3, 10, 12, 14, 1, 6, 0, 5, 2, 8]}}
{"prediction": {"error_location": 0.7455004453659058, "repair_targets": [0.002755845198407769, 0.9802271127700806], "repair_candidates": [0.001521933707408607, 0.0003031481464859098, 0.002755845198407769, 0.013782419264316559, 0.0013493639416992664, 1.2737101314996835e-05, 0.9802271127700806, 3.036356929442263e-06, 1.7331363778794184e-05, 2.7095135010313243e-05], "target_probs": 0.9829829335212708}}


{"result": {"time": "2021-02-11 09:52:25.027409", "n_pass": [130, 20, 14], "n_token": 14, "loss": [0.46102386713027954, 0.006442333105951548], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["self", "value", "before", "after", "self", "value", ",", "before", "=", "after", ",", "after", "=", "after"]}}
{"position": {"error_location": 9, "repair_targets": [2, 7], "repair_candidates": [3, 9, 11, 13, 1, 5, 0, 4, 2, 7]}}
{"prediction": {"error_location": 0.6306376457214355, "repair_targets": [0.0003430959477555007, 0.9932352900505066], "repair_candidates": [0.002697715535759926, 0.0005517133977264166, 0.0003430959477555007, 0.0002937460958492011, 0.002818087348714471, 1.7846981791080907e-05, 0.9932352900505066, 4.5416554712574e-06, 1.4838610695733223e-05, 2.309987394255586e-05], "target_probs": 0.9935783743858337}}




Minimal simplified tokens:

['self', 'value', 'before', 'after', 'self', 'value', ',', 'before', '=', 'after', ',', 'after', '=', 'after']
