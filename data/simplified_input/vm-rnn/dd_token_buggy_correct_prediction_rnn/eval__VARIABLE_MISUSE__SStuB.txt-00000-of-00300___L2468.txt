
Original sample:

{"has_bug": true, "bug_kind": 1, "bug_kind_name": "VARIABLE_MISUSE", "source_tokens": ["#NEWLINE#", "def to_full_dict(", "self", ")", ":", "#NEWLINE#", "#INDENT#", "'\\n        Include calculated properties that need to be available to the case\\n        details display by overriding this method.\\n        '", "#NEWLINE#", "json", "=", "self", ".", "case", ".", "to_json", "(", ")", "#NEWLINE#", "json", "[", "'status'", "]", "=", "(", "_", "(", "'Closed'", ")", "if", "json", ".", "case", ".", "closed", "else", "_", "(", "'Open'", ")", ")", "#NEWLINE#", "return", "json"], "error_location": [30], "repair_targets": [2, 11], "repair_candidates": [2, 11, 9, 19, 30, 43], "provenances": [{"datasetProvenance": {"datasetName": "ETHPy150Open", "filepath": "dimagi/commcare-hq/corehq/ex-submodules/casexml/apps/case/templatetags/case_tags.py", "license": "bsd-3-clause", "note": "license: manual_eval"}}], "txt_file": "eval__VARIABLE_MISUSE__SStuB.txt-00000-of-00300", "js_count": 2468, "results": {"model": "rnn", "prob": {"loc": [[0.002559519838541746, 3.611195253938604e-08, 1.2296183626858692e-07, 1.9357501712669034e-10, 1.167704682947246e-10, 5.244275413929245e-08, 2.53183838339055e-08, 6.328527479837476e-09, 3.854007957215799e-08, 5.144922354816117e-08, 3.4943852256219543e-09, 9.261862032872159e-07, 1.581408615169977e-10, 3.0728219968523263e-09, 1.2965942985943002e-08, 2.7842563810054344e-09, 5.747539688627512e-08, 5.7527273611412966e-08, 7.673987312273312e-08, 2.4820224098220933e-07, 2.785548502970414e-08, 4.5072681587043917e-07, 7.911281629802147e-10, 9.293081304484474e-10, 4.662949493194901e-08, 5.694238893738657e-07, 6.25262452924602e-10, 2.4351598515437445e-09, 1.6722211171327217e-08, 1.5719710688699706e-07, 0.9970008730888367, 7.941667945488007e-07, 3.060407891553041e-07, 3.888060007284366e-08, 2.8056614809202074e-08, 6.21158235958319e-09, 6.697786716358678e-07, 9.627749708585043e-10, 6.711289302074874e-09, 1.4812910009709412e-08, 1.0254869842185599e-08, 7.4460273502552354e-09, 2.5373156020691567e-08, 0.00043472202378325164]], "pointer": [[0.0, 0.0, 0.8102045655250549, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.00041595229413360357, 0.0, 0.18934495747089386, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 2.84552043012809e-05, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 5.485027486429317e-06, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 6.546722488565138e-07]], "target": [0.9995495080947876]}, "loss": [0.0030036119278520346, 0.00045059341937303543], "acc": [0.0, 1.0, 1.0, 1.0]}}


Trace of simplified code(s):

{"result": {"time": "2021-02-11 10:18:31.899550", "n_pass": [1, 1, 1], "n_token": 44, "loss": [0.0030036119278520346, 0.00045059341937303543], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def to_full_dict(", "self", ")", ":", "#NEWLINE#", "#INDENT#", "'\\n        Include calculated properties that need to be available to the case\\n        details display by overriding this method.\\n        '", "#NEWLINE#", "json", "=", "self", ".", "case", ".", "to_json", "(", ")", "#NEWLINE#", "json", "[", "'status'", "]", "=", "(", "_", "(", "'Closed'", ")", "if", "json", ".", "case", ".", "closed", "else", "_", "(", "'Open'", ")", ")", "#NEWLINE#", "return", "json"]}}
{"position": {"error_location": 30, "repair_targets": [2, 11], "repair_candidates": [2, 11, 9, 19, 30, 43]}}
{"prediction": {"error_location": 0.9970008730888367, "repair_targets": [0.8102045655250549, 0.18934495747089386], "repair_candidates": [0.8102045655250549, 0.00041595229413360357, 0.18934495747089386, 2.84552043012809e-05, 5.485027486429317e-06, 6.546722488565138e-07], "target_probs": 0.9995495080947876}}


{"result": {"time": "2021-02-11 10:18:31.970603", "n_pass": [24, 2, 2], "n_token": 38, "loss": [0.012286217883229256, 0.0021087692584842443], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def to_full_dict(", "self", ")", ":", "#NEWLINE#", "#INDENT#", "'\\n        Include calculated properties that need to be available to the case\\n        details display by overriding this method.\\n        '", "#NEWLINE#", "json", "=", "self", ".", "case", ".", "to_json", "(", ")", "#NEWLINE#", "json", "(", "'Closed'", ")", "if", "json", ".", "case", ".", "closed", "else", "_", "(", "'Open'", ")", ")", "#NEWLINE#", "return", "json"]}}
{"position": {"error_location": 24, "repair_targets": [2, 11], "repair_candidates": [2, 11, 9, 19, 24, 37]}}
{"prediction": {"error_location": 0.9877890944480896, "repair_targets": [0.8679538369178772, 0.12993960082530975], "repair_candidates": [0.8679538369178772, 0.0019927327521145344, 0.12993960082530975, 0.00010066336835734546, 1.1563703083083965e-05, 1.5144773897191044e-06], "target_probs": 0.9978934526443481}}


{"result": {"time": "2021-02-11 10:18:32.035765", "n_pass": [26, 3, 3], "n_token": 32, "loss": [0.7006276249885559, 0.004790077917277813], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def to_full_dict(", "self", ")", ":", "#NEWLINE#", "#INDENT#", "'\\n        Include calculated properties that need to be available to the case\\n        details display by overriding this method.\\n        '", "#NEWLINE#", "json", "=", "self", ".", "case", ".", "to_json", "(", ")", "#NEWLINE#", "json", "(", "'Closed'", ")", "if", "json", ".", "'Open'", ")", ")", "#NEWLINE#", "return", "json"]}}
{"position": {"error_location": 24, "repair_targets": [2, 11], "repair_candidates": [2, 11, 9, 19, 24, 31]}}
{"prediction": {"error_location": 0.4962737262248993, "repair_targets": [0.9731840491294861, 0.02203732542693615], "repair_candidates": [0.9731840491294861, 0.004200712312012911, 0.02203732542693615, 0.0005603914614766836, 1.4870215636619832e-05, 2.670113190106349e-06], "target_probs": 0.9952213764190674}}


{"result": {"time": "2021-02-11 10:18:32.225020", "n_pass": [49, 6, 4], "n_token": 30, "loss": [0.6353224515914917, 0.013054936192929745], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def to_full_dict(", "self", ")", "#INDENT#", "'\\n        Include calculated properties that need to be available to the case\\n        details display by overriding this method.\\n        '", "#NEWLINE#", "json", "=", "self", ".", "case", ".", "to_json", "(", ")", "#NEWLINE#", "json", "(", "'Closed'", ")", "if", "json", ".", "'Open'", ")", ")", "#NEWLINE#", "return", "json"]}}
{"position": {"error_location": 22, "repair_targets": [2, 9], "repair_candidates": [2, 9, 7, 17, 22, 29]}}
{"prediction": {"error_location": 0.5297645926475525, "repair_targets": [0.818150520324707, 0.16887938976287842], "repair_candidates": [0.818150520324707, 0.010978723876178265, 0.16887938976287842, 0.0019232213962823153, 5.707488890038803e-05, 1.1102766620751936e-05], "target_probs": 0.9870299100875854}}


{"result": {"time": "2021-02-11 10:18:32.287711", "n_pass": [50, 7, 5], "n_token": 28, "loss": [0.20317886769771576, 0.00349499867297709], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def to_full_dict(", "self", ")", "#NEWLINE#", "json", "=", "self", ".", "case", ".", "to_json", "(", ")", "#NEWLINE#", "json", "(", "'Closed'", ")", "if", "json", ".", "'Open'", ")", ")", "#NEWLINE#", "return", "json"]}}
{"position": {"error_location": 20, "repair_targets": [2, 7], "repair_candidates": [2, 7, 5, 15, 20, 27]}}
{"prediction": {"error_location": 0.8161321878433228, "repair_targets": [0.9352627992630005, 0.06124832108616829], "repair_candidates": [0.9352627992630005, 0.0027594435960054398, 0.06124832108616829, 0.0007053262670524418, 2.086518725263886e-05, 3.227651859560865e-06], "target_probs": 0.9965111017227173}}


{"result": {"time": "2021-02-11 10:18:32.412085", "n_pass": [55, 9, 6], "n_token": 25, "loss": [0.614251434803009, 0.00850300770252943], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def to_full_dict(", "self", ")", "#NEWLINE#", "json", "=", "self", ".", "case", ".", "to_json", "(", ")", "#NEWLINE#", "json", "if", "json", ".", "'Open'", ")", ")", "#NEWLINE#", "return", "json"]}}
{"position": {"error_location": 17, "repair_targets": [2, 7], "repair_candidates": [2, 7, 5, 15, 17, 24]}}
{"prediction": {"error_location": 0.5410457253456116, "repair_targets": [0.9511900544166565, 0.04034300148487091], "repair_candidates": [0.9511900544166565, 0.00743071548640728, 0.04034300148487091, 0.0009990803664550185, 2.9137892852304503e-05, 7.959530194057152e-06], "target_probs": 0.9915330410003662}}


{"result": {"time": "2021-02-11 10:18:32.648697", "n_pass": [83, 13, 7], "n_token": 23, "loss": [0.0592801608145237, 0.00041374180000275373], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def to_full_dict(", "self", ")", "#NEWLINE#", "json", "=", "self", ".", "case", ".", "to_json", "(", "json", "if", "json", ".", "'Open'", ")", ")", "#NEWLINE#", "return", "json"]}}
{"position": {"error_location": 15, "repair_targets": [2, 7], "repair_candidates": [2, 7, 5, 13, 15, 22]}}
{"prediction": {"error_location": 0.9424425959587097, "repair_targets": [0.9597533345222473, 0.03983301669359207], "repair_candidates": [0.9597533345222473, 0.00040718948002904654, 0.03983301669359207, 2.173595703425235e-06, 1.6002240954549052e-06, 2.6089219318237156e-06], "target_probs": 0.9995863437652588}}


{"result": {"time": "2021-02-11 10:18:32.709808", "n_pass": [86, 14, 8], "n_token": 21, "loss": [0.017988281324505806, 0.00023594302183482796], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def to_full_dict(", "self", ")", "#NEWLINE#", "json", "=", "self", ".", "case", ".", "to_json", "(", "json", "if", "json", ".", ")", "#NEWLINE#", "return", "json"]}}
{"position": {"error_location": 15, "repair_targets": [2, 7], "repair_candidates": [2, 7, 5, 13, 15, 20]}}
{"prediction": {"error_location": 0.9821726679801941, "repair_targets": [0.9754242897033691, 0.024339772760868073], "repair_candidates": [0.9754242897033691, 0.0002323166700080037, 0.024339772760868073, 7.546038318650972e-07, 5.655484756061924e-07, 2.3236029846884776e-06], "target_probs": 0.999764084815979}}


{"result": {"time": "2021-02-11 10:18:32.767409", "n_pass": [87, 15, 9], "n_token": 19, "loss": [0.0023964515421539545, 1.2993897144042421e-05], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def to_full_dict(", "self", ")", "#NEWLINE#", "json", "=", "self", ".", "case", ".", "to_json", "(", "json", "if", "json", ".", "return", "json"]}}
{"position": {"error_location": 15, "repair_targets": [2, 7], "repair_candidates": [2, 7, 5, 13, 15, 18]}}
{"prediction": {"error_location": 0.9976063966751099, "repair_targets": [0.8764595985412598, 0.12352737784385681], "repair_candidates": [0.8764595985412598, 1.2653683370444924e-05, 0.12352737784385681, 1.9624009439667134e-07, 1.2340348121142597e-07, 4.694985733522117e-08], "target_probs": 0.999987006187439}}


{"result": {"time": "2021-02-11 10:18:32.824527", "n_pass": [89, 16, 10], "n_token": 18, "loss": [0.003372578416019678, 0.00015856092795729637], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["def to_full_dict(", "self", ")", "#NEWLINE#", "json", "=", "self", ".", "case", ".", "to_json", "(", "json", "if", "json", ".", "return", "json"]}}
{"position": {"error_location": 14, "repair_targets": [1, 6], "repair_candidates": [1, 6, 4, 12, 14, 17]}}
{"prediction": {"error_location": 0.9966331124305725, "repair_targets": [0.1855567842721939, 0.8142846822738647], "repair_candidates": [0.1855567842721939, 0.00015540012100245804, 0.8142846822738647, 1.4973086308600614e-06, 1.2259313280083006e-06, 3.431230766182125e-07], "target_probs": 0.9998414516448975}}


{"result": {"time": "2021-02-11 10:18:32.881513", "n_pass": [90, 17, 11], "n_token": 17, "loss": [0.009488603100180626, 0.0001981454697670415], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["self", ")", "#NEWLINE#", "json", "=", "self", ".", "case", ".", "to_json", "(", "json", "if", "json", ".", "return", "json"]}}
{"position": {"error_location": 13, "repair_targets": [0, 5], "repair_candidates": [0, 5, 3, 11, 13, 16]}}
{"prediction": {"error_location": 0.9905562996864319, "repair_targets": [0.000561858934815973, 0.9992400407791138], "repair_candidates": [0.000561858934815973, 0.0001969793374883011, 0.9992400407791138, 5.877953981325845e-07, 5.301681653691048e-07, 1.3294130951635452e-07], "target_probs": 0.9998018741607666}}


{"result": {"time": "2021-02-11 10:18:32.937952", "n_pass": [92, 18, 12], "n_token": 16, "loss": [0.011113056913018227, 0.003754083765670657], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["self", "#NEWLINE#", "json", "=", "self", ".", "case", ".", "to_json", "(", "json", "if", "json", ".", "return", "json"]}}
{"position": {"error_location": 12, "repair_targets": [0, 4], "repair_candidates": [0, 4, 2, 10, 12, 15]}}
{"prediction": {"error_location": 0.9889484643936157, "repair_targets": [0.0007875957526266575, 0.9954653382301331], "repair_candidates": [0.0007875957526266575, 0.0037437169812619686, 0.9954653382301331, 1.7351718497593538e-06, 1.249273054781952e-06, 2.8610043045773637e-07], "target_probs": 0.9962529540061951}}


{"result": {"time": "2021-02-11 10:18:32.993867", "n_pass": [93, 19, 13], "n_token": 15, "loss": [0.006007471587508917, 0.01743575558066368], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["self", "json", "=", "self", ".", "case", ".", "to_json", "(", "json", "if", "json", ".", "return", "json"]}}
{"position": {"error_location": 11, "repair_targets": [0, 3], "repair_candidates": [0, 3, 1, 9, 11, 14]}}
{"prediction": {"error_location": 0.994010329246521, "repair_targets": [0.00041677968692965806, 0.9822986125946045], "repair_candidates": [0.00041677968692965806, 0.017282528802752495, 0.9822986125946045, 1.2176751624792814e-06, 7.258703931256605e-07, 1.181461897203917e-07], "target_probs": 0.982715368270874}}


{"result": {"time": "2021-02-11 10:18:33.051331", "n_pass": [95, 20, 14], "n_token": 14, "loss": [0.004924786742776632, 0.006843505892902613], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["self", "json", "self", ".", "case", ".", "to_json", "(", "json", "if", "json", ".", "return", "json"]}}
{"position": {"error_location": 10, "repair_targets": [0, 2], "repair_candidates": [0, 2, 1, 8, 10, 13]}}
{"prediction": {"error_location": 0.9950874447822571, "repair_targets": [0.00012153866555308923, 0.9930583238601685], "repair_candidates": [0.00012153866555308923, 0.006818865425884724, 0.9930583238601685, 6.78339915793913e-07, 5.482331175699073e-07, 6.156792409228729e-08], "target_probs": 0.9931798577308655}}


{"result": {"time": "2021-02-11 10:18:33.106118", "n_pass": [97, 21, 15], "n_token": 13, "loss": [0.0034372080117464066, 0.03026323951780796], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["self", "json", "self", "case", ".", "to_json", "(", "json", "if", "json", ".", "return", "json"]}}
{"position": {"error_location": 9, "repair_targets": [0, 2], "repair_candidates": [0, 2, 1, 7, 9, 12]}}
{"prediction": {"error_location": 0.9965685606002808, "repair_targets": [0.0003898555878549814, 0.9698002338409424], "repair_candidates": [0.0003898555878549814, 0.02980678714811802, 0.9698002338409424, 1.4464840205619112e-06, 1.2740306374325883e-06, 2.9030169912402926e-07], "target_probs": 0.9701901078224182}}


{"result": {"time": "2021-02-11 10:18:33.160160", "n_pass": [98, 22, 16], "n_token": 12, "loss": [0.0057258871383965015, 0.010231083258986473], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["self", "json", "self", ".", "to_json", "(", "json", "if", "json", ".", "return", "json"]}}
{"position": {"error_location": 8, "repair_targets": [0, 2], "repair_candidates": [0, 2, 1, 6, 8, 11]}}
{"prediction": {"error_location": 0.9942904710769653, "repair_targets": [0.00030697317561134696, 0.9895141124725342], "repair_candidates": [0.00030697317561134696, 0.010177264921367168, 0.9895141124725342, 4.656735939079226e-07, 1.0649690693753655e-06, 1.1631563978653503e-07], "target_probs": 0.9898210763931274}}


{"result": {"time": "2021-02-11 10:18:33.213343", "n_pass": [99, 23, 17], "n_token": 11, "loss": [0.0036201435141265392, 0.11287698149681091], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["self", "json", "self", "to_json", "(", "json", "if", "json", ".", "return", "json"]}}
{"position": {"error_location": 7, "repair_targets": [0, 2], "repair_candidates": [0, 2, 1, 5, 7, 10]}}
{"prediction": {"error_location": 0.9963864088058472, "repair_targets": [0.002098686760291457, 0.8911618590354919], "repair_candidates": [0.002098686760291457, 0.106717549264431, 0.8911618590354919, 8.976729077403434e-06, 1.0903398106165696e-05, 2.070004484266974e-06], "target_probs": 0.8932605385780334}}


{"result": {"time": "2021-02-11 10:18:33.266404", "n_pass": [100, 24, 18], "n_token": 9, "loss": [0.07222799211740494, 0.024854809045791626], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["self", "json", "self", "json", "if", "json", ".", "return", "json"]}}
{"position": {"error_location": 5, "repair_targets": [0, 2], "repair_candidates": [0, 2, 1, 3, 5, 8]}}
{"prediction": {"error_location": 0.9303187727928162, "repair_targets": [0.0005941466079093516, 0.9748573899269104], "repair_candidates": [0.0005941466079093516, 0.02351425215601921, 0.9748573899269104, 0.0010314654791727662, 2.002258042921312e-06, 6.975174073886592e-07], "target_probs": 0.9754515290260315}}


{"result": {"time": "2021-02-11 10:18:33.424677", "n_pass": [116, 27, 19], "n_token": 8, "loss": [0.08878729492425919, 0.03925713151693344], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["self", "json", "self", "json", "if", "json", ".", "json"]}}
{"position": {"error_location": 5, "repair_targets": [0, 2], "repair_candidates": [0, 2, 1, 3, 5, 7]}}
{"prediction": {"error_location": 0.9150401949882507, "repair_targets": [0.007948383688926697, 0.9535550475120544], "repair_candidates": [0.007948383688926697, 0.029863744974136353, 0.9535550475120544, 0.007485206238925457, 4.197492671664804e-05, 0.0011055588256567717], "target_probs": 0.9615034461021423}}




Minimal simplified tokens:

['self', 'json', 'self', 'json', 'if', 'json', '.', 'json']
