
Original sample:

{"has_bug": true, "bug_kind": 1, "bug_kind_name": "VARIABLE_MISUSE", "source_tokens": ["#NEWLINE#", "def clean_invite_code(", "self", ")", ":", "#NEWLINE#", "#INDENT#", "'Verify the invite code and return the invite object.'", "#NEWLINE#", "try", ":", "#NEWLINE#", "#INDENT#", "invite", "=", "Invite", ".", "objects", ".", "get", "(", "code", "=", "self", ".", "cleaned_data", "[", "'invite_code'", "]", ",", "consumed_at__isnull", "=", "True", ")", "#NEWLINE#", "#UNINDENT#", "except", "Invite", ".", "DoesNotExist", ":", "#NEWLINE#", "#INDENT#", "raise", "ValidationError", "(", "'Invalid invite code'", ")", "#NEWLINE#", "#UNINDENT#", "return", "self"], "error_location": [51], "repair_targets": [13], "repair_candidates": [13, 2, 23, 51], "provenances": [{"datasetProvenance": {"datasetName": "ETHPy150Open", "filepath": "ofa/connect/open_connect/accounts/forms.py", "license": "mit", "note": "license: bigquery_api"}}], "txt_file": "eval__VARIABLE_MISUSE__SStuB.txt-00001-of-00300", "js_count": 3888, "results": {"model": "transformer", "prob": {"loc": [[0.0002383190585533157, 9.720309002148042e-09, 2.9046989258318945e-09, 1.594639142954435e-10, 3.2693608931211315e-10, 2.1328902533035432e-10, 1.4161090355901962e-10, 4.2692913093667073e-10, 1.259645582285529e-10, 6.356867116030784e-11, 5.614864129199759e-10, 2.7191357498956847e-10, 1.8066630136370776e-10, 2.6828962162994685e-08, 4.3985834419224545e-10, 3.4458318509678065e-07, 1.9201736034535344e-10, 9.249593452276272e-11, 4.688112120732058e-10, 4.2175062053839696e-11, 3.0158656127987626e-10, 5.502826666559102e-11, 4.147816257127346e-10, 5.036959464632673e-06, 5.675321879117234e-10, 1.785865899606165e-11, 3.9608569202265187e-10, 2.630186379803945e-08, 1.0546542528189207e-09, 3.4783184665876377e-10, 1.3322157266237866e-10, 2.8900708493040383e-09, 1.598746024455977e-08, 2.02481165167967e-09, 3.2938918259617367e-09, 6.06805139469202e-09, 9.493907882074382e-09, 3.842954356514383e-06, 2.707214008523806e-09, 1.8475966312436753e-09, 5.393311131030032e-09, 4.485938731590977e-09, 3.663453762570157e-09, 8.728389538914527e-11, 1.0831421315415923e-09, 2.173193358601111e-08, 1.5782496802785317e-06, 1.4703217310341188e-08, 2.1578079767436975e-08, 7.603249585486083e-09, 8.325979905521308e-09, 0.9997507929801941]], "pointer": [[0.0, 0.0, 5.549209618038731e-06, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.9999897480010986, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 2.900364734159666e-06, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.7442373518861132e-06]], "target": [0.9999897480010986]}, "loss": [0.0002493547508493066, 1.025205165205989e-05], "acc": [0.0, 1.0, 1.0, 1.0]}}


Trace of simplified code(s):

{"result": {"time": "2021-02-11 12:06:55.311386", "n_pass": [1, 1, 1], "n_token": 52, "loss": [0.0002493547508493066, 1.025205165205989e-05], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def clean_invite_code(", "self", ")", ":", "#NEWLINE#", "#INDENT#", "'Verify the invite code and return the invite object.'", "#NEWLINE#", "try", ":", "#NEWLINE#", "#INDENT#", "invite", "=", "Invite", ".", "objects", ".", "get", "(", "code", "=", "self", ".", "cleaned_data", "[", "'invite_code'", "]", ",", "consumed_at__isnull", "=", "True", ")", "#NEWLINE#", "#UNINDENT#", "except", "Invite", ".", "DoesNotExist", ":", "#NEWLINE#", "#INDENT#", "raise", "ValidationError", "(", "'Invalid invite code'", ")", "#NEWLINE#", "#UNINDENT#", "return", "self"]}}
{"position": {"error_location": 51, "repair_targets": [13], "repair_candidates": [13, 2, 23, 51]}}
{"prediction": {"error_location": 0.9997507929801941, "repair_targets": [0.9999897480010986], "repair_candidates": [5.549209618038731e-06, 0.9999897480010986, 2.900364734159666e-06, 1.7442373518861132e-06], "target_probs": 0.9999897480010986}}


{"result": {"time": "2021-02-11 12:06:55.367552", "n_pass": [10, 2, 2], "n_token": 39, "loss": [3.349725011503324e-05, 4.768372718899627e-07], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def clean_invite_code(", "self", ")", ":", "#NEWLINE#", "#INDENT#", "'Verify the invite code and return the invite object.'", "#NEWLINE#", "try", ":", "#NEWLINE#", "#INDENT#", "invite", "=", "Invite", ".", "objects", ".", "get", "(", "code", "=", "self", ".", "cleaned_data", "DoesNotExist", ":", "#NEWLINE#", "#INDENT#", "raise", "ValidationError", "(", "'Invalid invite code'", ")", "#NEWLINE#", "#UNINDENT#", "return", "self"]}}
{"position": {"error_location": 38, "repair_targets": [13], "repair_candidates": [13, 2, 23, 38]}}
{"prediction": {"error_location": 0.9999665021896362, "repair_targets": [0.9999995231628418], "repair_candidates": [1.1639850328037937e-07, 0.9999995231628418, 1.6795561919025204e-07, 2.192462602579326e-07], "target_probs": 0.9999995231628418}}


{"result": {"time": "2021-02-11 12:06:55.422962", "n_pass": [19, 3, 3], "n_token": 32, "loss": [6.079655122448457e-06, 2.3841860752327193e-07], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def clean_invite_code(", "self", ")", ":", "#NEWLINE#", "#INDENT#", "'Verify the invite code and return the invite object.'", "#NEWLINE#", "try", ":", "#NEWLINE#", "#INDENT#", "invite", "=", "Invite", ".", "objects", ".", "get", "(", "code", "=", "self", ".", "(", "'Invalid invite code'", ")", "#NEWLINE#", "#UNINDENT#", "return", "self"]}}
{"position": {"error_location": 31, "repair_targets": [13], "repair_candidates": [13, 2, 23, 31]}}
{"prediction": {"error_location": 0.9999939203262329, "repair_targets": [0.9999997615814209], "repair_candidates": [5.556652382665561e-08, 0.9999997615814209, 2.3328321674398467e-07, 5.4994728770907386e-08], "target_probs": 0.9999997615814209}}


{"result": {"time": "2021-02-11 12:06:55.480470", "n_pass": [22, 4, 4], "n_token": 26, "loss": [8.22540732769994e-06, 5.960466182841628e-07], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def clean_invite_code(", "self", ")", ":", "#NEWLINE#", "#INDENT#", "invite", "=", "Invite", ".", "objects", ".", "get", "(", "code", "=", "self", ".", "(", "'Invalid invite code'", ")", "#NEWLINE#", "#UNINDENT#", "return", "self"]}}
{"position": {"error_location": 25, "repair_targets": [7], "repair_candidates": [7, 2, 17, 25]}}
{"prediction": {"error_location": 0.999991774559021, "repair_targets": [0.9999994039535522], "repair_candidates": [1.7976817900944297e-07, 0.9999994039535522, 3.492825726425508e-07, 4.609041681646886e-08], "target_probs": 0.9999994039535522}}


{"result": {"time": "2021-02-11 12:06:55.535675", "n_pass": [36, 5, 5], "n_token": 23, "loss": [1.537788011773955e-05, 3.576279254957626e-07], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def clean_invite_code(", "self", ")", ":", "#NEWLINE#", "#INDENT#", "invite", "=", ".", "get", "(", "code", "=", "self", ".", "(", "'Invalid invite code'", ")", "#NEWLINE#", "#UNINDENT#", "return", "self"]}}
{"position": {"error_location": 22, "repair_targets": [7], "repair_candidates": [7, 2, 14, 22]}}
{"prediction": {"error_location": 0.999984622001648, "repair_targets": [0.9999996423721313], "repair_candidates": [7.569386895056596e-08, 0.9999996423721313, 1.860550327137389e-07, 2.9084009867119676e-08], "target_probs": 0.9999996423721313}}


{"result": {"time": "2021-02-11 12:06:55.590870", "n_pass": [37, 6, 6], "n_token": 20, "loss": [2.7179348762729205e-05, 3.576279254957626e-07], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def clean_invite_code(", "self", ")", ":", "#NEWLINE#", "#INDENT#", "invite", "=", "code", "=", "self", ".", "(", "'Invalid invite code'", ")", "#NEWLINE#", "#UNINDENT#", "return", "self"]}}
{"position": {"error_location": 19, "repair_targets": [7], "repair_candidates": [7, 2, 11, 19]}}
{"prediction": {"error_location": 0.9999728202819824, "repair_targets": [0.9999996423721313], "repair_candidates": [1.083975149640537e-07, 0.9999996423721313, 2.3435197249455086e-07, 2.565950119048921e-08], "target_probs": 0.9999996423721313}}


{"result": {"time": "2021-02-11 12:06:55.646032", "n_pass": [39, 7, 7], "n_token": 16, "loss": [0.00041309406515210867, 8.702316335984506e-06], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def clean_invite_code(", "self", ")", ":", "#NEWLINE#", "#INDENT#", "invite", "=", "code", "=", "self", "#NEWLINE#", "#UNINDENT#", "return", "self"]}}
{"position": {"error_location": 15, "repair_targets": [7], "repair_candidates": [7, 2, 11, 15]}}
{"prediction": {"error_location": 0.9995869994163513, "repair_targets": [0.9999912977218628], "repair_candidates": [1.9817505290120607e-06, 0.9999912977218628, 6.241772098292131e-06, 4.1080704704654636e-07], "target_probs": 0.9999912977218628}}


{"result": {"time": "2021-02-11 12:06:55.700516", "n_pass": [42, 8, 8], "n_token": 13, "loss": [0.3652885854244232, 3.4570753086882178e-06], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def clean_invite_code(", "self", "#INDENT#", "invite", "=", "code", "=", "self", "#NEWLINE#", "#UNINDENT#", "return", "self"]}}
{"position": {"error_location": 12, "repair_targets": [4], "repair_candidates": [4, 2, 8, 12]}}
{"prediction": {"error_location": 0.6939963698387146, "repair_targets": [0.999996542930603], "repair_candidates": [3.2393302262789803e-06, 0.999996542930603, 3.904862921899621e-08, 1.896166139658817e-07], "target_probs": 0.999996542930603}}


{"result": {"time": "2021-02-11 12:06:55.755565", "n_pass": [57, 9, 9], "n_token": 11, "loss": [0.15233071148395538, 0.008363132365047932], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def clean_invite_code(", "self", "#INDENT#", "invite", "=", "self", "#NEWLINE#", "#UNINDENT#", "return", "self"]}}
{"position": {"error_location": 10, "repair_targets": [4], "repair_candidates": [4, 2, 6, 10]}}
{"prediction": {"error_location": 0.8587042689323425, "repair_targets": [0.9916717410087585], "repair_candidates": [0.0013322745217010379, 0.9916717410087585, 0.006993236485868692, 2.724176738411188e-06], "target_probs": 0.9916717410087585}}


{"result": {"time": "2021-02-11 12:06:55.812699", "n_pass": [59, 10, 10], "n_token": 9, "loss": [0.4007023274898529, 0.005116356536746025], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def clean_invite_code(", "self", "#INDENT#", "invite", "=", "self", "return", "self"]}}
{"position": {"error_location": 8, "repair_targets": [4], "repair_candidates": [4, 2, 6, 8]}}
{"prediction": {"error_location": 0.6698493361473083, "repair_targets": [0.9948967099189758], "repair_candidates": [0.0034707707818597555, 0.9948967099189758, 0.0014708541566506028, 0.0001616327790543437], "target_probs": 0.9948967099189758}}


{"result": {"time": "2021-02-11 12:06:55.976144", "n_pass": [72, 13, 11], "n_token": 8, "loss": [0.14578579366207123, 0.29219478368759155], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def clean_invite_code(", "self", "#INDENT#", "invite", "=", "self", "self"]}}
{"position": {"error_location": 7, "repair_targets": [4], "repair_candidates": [4, 2, 6, 7]}}
{"prediction": {"error_location": 0.8643427491188049, "repair_targets": [0.7466230988502502], "repair_candidates": [0.21545565128326416, 0.7466230988502502, 0.02887648530304432, 0.00904476922005415], "target_probs": 0.7466230988502502}}


{"result": {"time": "2021-02-11 12:06:56.030716", "n_pass": [73, 14, 12], "n_token": 7, "loss": [0.10872514545917511, 0.23875156044960022], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["def clean_invite_code(", "self", "#INDENT#", "invite", "=", "self", "self"]}}
{"position": {"error_location": 6, "repair_targets": [3], "repair_candidates": [3, 1, 5, 6]}}
{"prediction": {"error_location": 0.8969769477844238, "repair_targets": [0.7876105308532715], "repair_candidates": [0.16099946200847626, 0.7876105308532715, 0.038920242339372635, 0.012469742447137833], "target_probs": 0.7876105308532715}}




Minimal simplified tokens:

['def clean_invite_code(', 'self', '#INDENT#', 'invite', '=', 'self', 'self']
