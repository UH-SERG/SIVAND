
Original sample:

{"has_bug": true, "bug_kind": 1, "bug_kind_name": "VARIABLE_MISUSE", "source_tokens": ["#NEWLINE#", "def __init__(", "self", ",", "request", ",", "*", "args", ",", "**kwargs", ")", ":", "#NEWLINE#", "#INDENT#", "super", "(", "CreateNetwork", ",", "self", ")", ".", "__init__", "(", "request", ",", "*", "args", ",", "**", "kwargs", ")", "#NEWLINE#", "tenant_choices", "=", "[", "(", "''", ",", "_", "(", "'Select a project'", ")", ")", "]", "#NEWLINE#", "(", "tenants", ",", "has_more", ")", "=", "api", ".", "keystone", ".", "tenant_list", "(", "request", ")", "#NEWLINE#", "for", "tenant", "in", "tenants", ":", "#NEWLINE#", "#INDENT#", "if", "tenant", ".", "enabled", ":", "#NEWLINE#", "#INDENT#", "tenant_choices", ".", "append", "(", "(", "net_type", ".", "id", ",", "tenant", ".", "name", ")", ")", "#NEWLINE#", "#UNINDENT#", "#UNINDENT#", "self", ".", "fields", "[", "'tenant_id'", "]", ".", "choices", "=", "tenant_choices", "#NEWLINE#", "if", "api", ".", "neutron", ".", "is_port_profiles_supported", "(", ")", ":", "#NEWLINE#", "#INDENT#", "self", ".", "fields", "[", "'net_profile_id'", "]", ".", "choices", "=", "self", ".", "get_network_profile_choices", "(", "request", ")", "#NEWLINE#", "#UNINDENT#", "if", "api", ".", "neutron", ".", "is_extension_supported", "(", "request", ",", "'provider'", ")", ":", "#NEWLINE#", "#INDENT#", "neutron_settings", "=", "getattr", "(", "settings", ",", "'OPENSTACK_NEUTRON_NETWORK'", ",", "{", "#NEWLINE#", "#INDENT#", "#NEWLINE#", "#UNINDENT#", "}", ")", "#NEWLINE#", "seg_id_range", "=", "neutron_settings", ".", "get", "(", "'segmentation_id_range'", ",", "{", "#NEWLINE#", "#INDENT#", "#NEWLINE#", "#UNINDENT#", "}", ")", "#NEWLINE#", "self", ".", "seg_id_range", "=", "{", "#NEWLINE#", "#INDENT#", "'vlan'", ":", "seg_id_range", ".", "get", "(", "'vlan'", ",", "SEGMENTATION_ID_RANGE", ".", "get", "(", "'vlan'", ")", ")", ",", "#NEWLINE#", "'gre'", ":", "seg_id_range", ".", "get", "(", "'gre'", ",", "SEGMENTATION_ID_RANGE", ".", "get", "(", "'gre'", ")", ")", ",", "#NEWLINE#", "'vxlan'", ":", "seg_id_range", ".", "get", "(", "'vxlan'", ",", "SEGMENTATION_ID_RANGE", ".", "get", "(", "'vxlan'", ")", ")", ",", "#NEWLINE#", "#UNINDENT#", "}", "#NEWLINE#", "seg_id_help", "=", "(", "_", "(", "'For VLAN networks, the VLAN VID on the physical network that realizes the virtual network. Valid VLAN VIDs are %(vlan_min)s through %(vlan_max)s. For GRE or VXLAN networks, the tunnel ID. Valid tunnel IDs for GRE networks are %(gre_min)s through %(gre_max)s. For VXLAN networks, %(vxlan_min)s through %(vxlan_max)s.'", ")", "%", "{", "#NEWLINE#", "#INDENT#", "'vlan_min'", ":", "self", ".", "seg_id_range", "[", "'vlan'", "]", "[", "0", "]", ",", "#NEWLINE#", "'vlan_max'", ":", "self", ".", "seg_id_range", "[", "'vlan'", "]", "[", "1", "]", ",", "#NEWLINE#", "'gre_min'", ":", "self", ".", "seg_id_range", "[", "'gre'", "]", "[", "0", "]", ",", "#NEWLINE#", "'gre_max'", ":", "self", ".", "seg_id_range", "[", "'gre'", "]", "[", "1", "]", ",", "#NEWLINE#", "'vxlan_min'", ":", "self", ".", "seg_id_range", "[", "'vxlan'", "]", "[", "0", "]", ",", "#NEWLINE#", "'vxlan_max'", ":", "self", ".", "seg_id_range", "[", "'vxlan'", "]", "[", "1", "]", ",", "#NEWLINE#", "#UNINDENT#", "}", ")", "#NEWLINE#", "self", ".", "fields", "[", "'segmentation_id'", "]", ".", "help_text", "=", "seg_id_help", "#NEWLINE#", "supported_provider_types", "=", "neutron_settings", ".", "get", "(", "'supported_provider_types'", ",", "[", "'*'", "]", ")", "#NEWLINE#", "if", "(", "supported_provider_types", "==", "[", "'*'", "]", ")", ":", "#NEWLINE#", "#INDENT#", "network_type_choices", "=", "PROVIDER_TYPES", "#NEWLINE#", "#UNINDENT#", "else", ":", "#NEWLINE#", "#INDENT#", "network_type_choices", "=", "[", "net_type", "for", "net_type", "in", "PROVIDER_TYPES", "if", "(", "net_type", "[", "0", "]", "in", "supported_provider_types", ")", "]", "#NEWLINE#", "#UNINDENT#", "if", "(", "len", "(", "network_type_choices", ")", "==", "0", ")", ":", "#NEWLINE#", "#INDENT#", "self", ".", "_hide_provider_network_type", "(", ")", "#NEWLINE#", "#UNINDENT#", "else", ":", "#NEWLINE#", "#INDENT#", "self", ".", "fields", "[", "'network_type'", "]", ".", "choices", "=", "network_type_choices", "#NEWLINE#", "#UNINDENT#", "#UNINDENT#", "else", ":", "#NEWLINE#", "#INDENT#", "self", ".", "_hide_provider_network_type", "(", ")"], "error_location": [79], "repair_targets": [61, 68, 83], "repair_candidates": [7, 26, 160, 178, 185, 202, 219, 252, 265, 278, 291, 304, 317, 79, 377, 379, 384, 46, 63, 365, 374, 398, 426, 4, 23, 57, 126, 137, 61, 68, 83, 29, 48, 32, 74, 100, 144, 162, 343, 237, 339, 2, 18, 91, 113, 122, 176, 250, 263, 276, 289, 302, 315, 330, 406, 417, 434, 341, 356, 389], "provenances": [{"datasetProvenance": {"datasetName": "ETHPy150Open", "filepath": "CiscoSystems/avos/openstack_dashboard/dashboards/admin/networks/forms.py", "license": "apache-2.0", "note": "license: bigquery_api"}}], "txt_file": "eval__VARIABLE_MISUSE__SStuB.txt-00000-of-00300", "js_count": 872, "results": {"model": "transformer", "prob": {"loc": [[0.0009219087660312653, 3.2957575557546193e-10, 7.863790729700781e-10, 7.802426760239456e-11, 4.261337949174049e-09, 6.408364811028022e-11, 7.251358541404684e-11, 3.4721348018962317e-10, 6.098131721810063e-11, 4.4226700079974535e-10, 3.8824981424268046e-11, 7.255425427121764e-11, 9.297476677438965e-11, 6.886064635169831e-11, 1.059992163487955e-10, 9.436814524255155e-11, 2.524030706663183e-10, 8.561088643554982e-11, 3.084519306639777e-10, 1.5059205271672482e-10, 5.157826943325006e-11, 5.430765646213809e-12, 3.2581687348098853e-10, 1.0710229503274604e-07, 4.828207625373615e-11, 1.0028092245484288e-10, 2.629864752634603e-07, 2.925147069010592e-10, 1.480194300462756e-10, 2.2785524578239347e-08, 2.830297662903547e-10, 1.3808933163605985e-10, 3.271259485515543e-09, 2.2936456900435331e-10, 5.807991865225404e-10, 6.738082869439666e-10, 3.1026234914577344e-09, 2.6374988304489477e-10, 2.842170769568053e-11, 4.806424702685774e-10, 1.0751710632916911e-08, 2.7117297296541665e-10, 1.2074359567737503e-10, 1.4804596437656414e-10, 1.812506672527192e-10, 7.208251356916051e-11, 1.83298212164118e-08, 2.678016697288399e-10, 2.9711181070979364e-08, 7.362544601763332e-11, 3.4068292631417307e-10, 6.797529650270917e-09, 2.2169548141715012e-10, 2.4148349986319317e-11, 1.634698765240472e-10, 6.650286571430186e-11, 2.852066360858885e-10, 3.5492805182002485e-05, 1.576699548699878e-09, 9.278260937328753e-10, 2.7519928558206175e-09, 1.5545796827609593e-07, 1.3566998913194794e-10, 5.680169579136418e-06, 7.839141558108054e-10, 3.3021693712775857e-10, 1.8915838340127777e-10, 1.84374140954624e-10, 2.492860630809446e-06, 3.652338986803727e-10, 1.8821000313806735e-11, 1.0648703030469164e-09, 4.716310675334512e-10, 2.2383137010528742e-10, 4.780626117195652e-09, 8.759879627229239e-11, 8.083952951487561e-11, 2.2175257463619147e-10, 2.310359015211816e-08, 0.9985942244529724, 1.5888567128641284e-09, 3.45115852562472e-10, 1.8115503541693556e-09, 3.964232746511698e-06, 1.718183262333639e-09, 1.1975879177228421e-09, 7.082668340707698e-10, 1.4967663775067308e-09, 3.7954997478273356e-10, 2.198896897898095e-10, 2.0414431256554622e-10, 1.4752106380910845e-07, 1.57403354239527e-10, 7.582204863965103e-10, 1.3110049712494742e-09, 6.974438093720892e-08, 3.951293692239233e-08, 2.0325934269038726e-09, 3.692080252637453e-10, 6.092902848919834e-10, 9.98803079710342e-06, 3.17153692197536e-10, 1.3500450757319982e-10, 2.3473942789564717e-09, 8.729840461629834e-11, 2.4722942443267115e-11, 1.3185022518236167e-10, 4.466974568018145e-10, 1.675349525775971e-09, 6.116062101213515e-10, 6.453111933701905e-10, 2.1808196914996358e-10, 8.53837209269237e-11, 1.7540951802175186e-08, 9.341969559040209e-11, 1.2800317750194523e-10, 3.7291161825159236e-10, 3.480233701225188e-08, 7.96406673941874e-09, 6.563791732361324e-10, 1.1050696469006027e-10, 1.3368309237371534e-10, 1.4967463934922876e-09, 3.6461858532454983e-10, 9.77818867542446e-11, 6.467010815747187e-10, 6.39961363049224e-05, 3.808720006048816e-10, 1.1339219840866832e-10, 1.1369842567443555e-10, 8.516041344330816e-11, 7.445699612418366e-10, 7.492322734448109e-11, 2.3414714611647014e-11, 1.0235615133247222e-10, 1.1497630972301387e-11, 6.211262060240585e-10, 4.860508852289058e-06, 1.2718279207568628e-10, 0.00015365247963927686, 8.443051119355616e-11, 2.712712554586716e-10, 7.536941210029013e-11, 3.6687937410295746e-11, 4.876535797393444e-08, 7.32319371810064e-10, 2.471428339756443e-10, 3.705336037995721e-10, 2.6946676712213957e-07, 1.3351390826255027e-10, 5.856001239479269e-10, 5.551035672790583e-11, 7.378898603249695e-10, 1.3352714767211893e-10, 7.701617815714101e-11, 9.22596860020164e-11, 8.178885346765696e-11, 8.574520954374165e-11, 8.560761127762717e-11, 8.402951251484936e-11, 3.2660893434233174e-10, 6.553105974527185e-11, 9.497890252063712e-10, 7.82191672543675e-11, 5.137591047033041e-11, 3.3206437599631045e-10, 3.84661946739584e-09, 6.382795680881514e-11, 7.462988560469341e-10, 2.079722782877269e-10, 7.089665660098277e-11, 8.053373939942432e-11, 7.026956794220496e-11, 9.762869679352804e-11, 8.619219921124355e-11, 6.507804017896746e-11, 2.3871773446870748e-09, 8.447432336966543e-11, 3.8838456756229434e-11, 2.4540341980738845e-10, 2.6226814053842418e-09, 1.4713276430544653e-10, 7.600532703211371e-11, 7.582219296864423e-10, 1.2208255240064858e-10, 7.053081674257555e-09, 1.2504466906371192e-10, 5.848999756752349e-11, 1.3254722874833647e-09, 2.585997860293787e-09, 7.648420785599797e-11, 2.99488073229881e-10, 1.2541609417660027e-10, 6.132142710280064e-11, 5.149081161448521e-10, 7.706695726028556e-09, 2.6668436903243276e-10, 1.6304045613591e-10, 1.84922147039579e-10, 1.188204118429681e-10, 7.075930952282761e-10, 5.450494569569919e-11, 1.0446722376045159e-09, 5.593751503663036e-11, 5.7422951810215395e-11, 1.5765544425505595e-10, 3.844726759183459e-09, 8.812131579993832e-11, 7.54051154849833e-10, 1.158732831907372e-10, 3.9331291695754445e-11, 9.35722166417463e-10, 7.033185589477853e-09, 4.007011944473504e-10, 1.298674917604714e-10, 9.345088591850015e-11, 9.67232821613706e-11, 4.176985701764835e-10, 1.4762441269411397e-10, 4.684843624147561e-09, 4.987546486923122e-11, 4.5906962259367745e-11, 1.1273280087209514e-09, 2.7546291914148924e-09, 8.350242719501466e-11, 1.053102716142007e-09, 8.710562826585999e-11, 3.7383863366047265e-11, 4.050558499724133e-10, 4.432282096900053e-09, 1.3594897430024844e-10, 9.628611796763664e-11, 1.1688883194693744e-10, 1.4413843729688125e-10, 1.3243318941480453e-10, 9.662057265380497e-11, 1.1804873745191458e-10, 4.3453600717668905e-09, 2.384254460530144e-10, 2.7455324125291725e-10, 1.699701823731914e-09, 1.8295651660338308e-09, 2.1753037149352394e-09, 1.1731253468649783e-10, 3.8295902560214756e-10, 7.064548945834304e-10, 1.147272971069313e-10, 7.862271944603094e-11, 3.3276896793665856e-09, 1.9526232020172785e-10, 5.101878386426506e-08, 9.145061097282081e-11, 1.2945004790321235e-10, 2.0198822614503342e-09, 5.7663371855198875e-09, 2.4684793098472824e-10, 1.5366073968792193e-09, 7.968989912399138e-09, 1.6894484422547151e-10, 1.7403899155166158e-10, 1.5095957817123917e-10, 1.2021054152100419e-09, 1.2082307376815038e-10, 3.6264022895693415e-08, 1.308061992055798e-10, 2.6346477777217103e-10, 1.2644272295858627e-09, 4.115752627598113e-09, 3.0003352580187936e-10, 1.201271082607036e-09, 1.4022368155508502e-08, 2.289484574147238e-10, 2.380959873704569e-10, 3.3703959068098754e-10, 4.346696869106381e-08, 1.8807731760883684e-10, 2.910008056744573e-08, 1.3946334365133595e-10, 2.059543091625926e-10, 2.7572890637372893e-09, 4.31073843287777e-09, 2.122303582874352e-10, 2.29054708533738e-09, 9.515736643095352e-09, 2.0614807083596531e-10, 2.2634889795813962e-10, 1.4189349695215014e-10, 2.183734304495033e-09, 1.033618052259655e-10, 3.759378941481373e-08, 1.0004269634933394e-10, 1.5264146890903163e-10, 2.2215304595896157e-10, 1.2371816460188256e-08, 2.096845891363941e-10, 1.6024150895077582e-09, 1.1773518160396179e-08, 1.697582074910997e-10, 2.016320721498488e-10, 1.5393934738039405e-10, 1.48352174988986e-09, 1.5197680613976416e-10, 7.825674686046113e-08, 1.9863484468363168e-10, 4.3983916508949505e-10, 1.848926123315664e-09, 5.506981093361674e-09, 1.9295912090377954e-10, 9.879803641865692e-10, 8.768330950204017e-09, 2.2870405569364038e-10, 2.915983565721092e-10, 2.026576823022097e-10, 1.0010630102641471e-09, 1.3841841561834656e-10, 7.131951917926926e-08, 1.0969866681698193e-10, 1.2761557088847297e-10, 1.3949687238667963e-10, 1.0265892136374077e-08, 1.961709544806567e-10, 7.456230077806936e-10, 3.080136323774241e-08, 1.4590620378562846e-10, 2.370492413472647e-10, 3.92796573045473e-10, 2.808036581036788e-10, 1.1027640606231515e-10, 1.5590224944350695e-10, 1.9872690992794872e-10, 2.449879055177462e-08, 2.531808096506438e-10, 3.3529061749248967e-09, 1.069488830829357e-09, 5.009040293657563e-09, 1.506852198573938e-09, 4.714674206596214e-10, 1.2686958150709415e-09, 5.015595716528765e-10, 1.6364218026865274e-05, 2.7611821162842887e-10, 2.898092210656955e-09, 3.264749859344107e-10, 1.0275118533797922e-08, 1.3846436497377823e-10, 1.4353568333902444e-10, 3.2024427554233625e-09, 5.927429658214578e-09, 2.06553843473678e-10, 6.4743421734903e-10, 3.398387571351691e-09, 3.1255190102719155e-10, 2.7918550804528763e-10, 2.711228186402792e-10, 1.1750556083711672e-10, 1.0807177375227184e-09, 6.571653102582786e-06, 5.29948529504054e-10, 4.617834448161773e-10, 1.442399977236164e-09, 3.7438896427488544e-10, 3.553843608283813e-10, 2.954444466851669e-10, 4.456251756490559e-10, 2.1458547438957254e-10, 4.7488177834509315e-09, 6.119224016387648e-10, 9.183735549811445e-09, 3.1756652862924284e-10, 3.623764344151681e-10, 1.7910077587668383e-10, 5.848879713887811e-10, 3.1970276426207533e-10, 1.718644393466917e-10, 3.248583180237574e-09, 6.408097941168478e-10, 4.308009948772451e-09, 7.724739407422021e-05, 1.0359673119353374e-09, 1.705690366726742e-09, 2.566400703063465e-10, 1.6941412717130788e-09, 6.204903812978557e-10, 1.2538194926747792e-09, 3.258108699810691e-05, 5.085075693855856e-10, 3.7225018623132655e-09, 1.842721947253878e-10, 3.325365538486835e-10, 1.5942208847263828e-05, 4.154776800380233e-10, 3.041416285487486e-10, 5.198104724435382e-10, 7.405899782320091e-10, 2.3206823962507173e-10, 1.811435584864185e-10, 1.1550659317904888e-09, 2.3781290270363797e-09, 4.412811449583387e-06, 2.6789567786345003e-10, 5.719616447130704e-10, 1.0219942225830891e-08, 8.03299995966178e-11, 6.908444927233859e-10, 3.3601454951792675e-10, 2.1671857364236047e-10, 5.56220902669935e-10, 1.0577361903019167e-10, 1.3742490478918512e-09, 5.209821907214973e-08, 7.380432931469727e-10, 3.8975614402581016e-10, 3.7173347733343576e-10, 1.661680099074303e-10, 2.9438076976084915e-10, 3.2626834567395235e-10, 1.551537925914559e-10, 1.2981767838482483e-07, 1.5537413022848057e-10, 6.73128830452896e-10, 2.6363672356310985e-10, 7.148590608352379e-09, 1.4335738152126964e-09, 6.402771646207839e-10, 2.227196560511402e-08, 1.7399152951735886e-10, 4.8360059736296535e-05, 5.596219598835717e-10, 5.317650209057945e-10, 5.517344914274247e-10, 2.8199251267402303e-10, 7.914288668864344e-10, 6.286036691172114e-10, 2.630008710813314e-10, 3.302889517442509e-09, 1.1120047938018018e-10, 1.9940751272429225e-08, 2.8177611355317822e-08, 3.9493081027686117e-10]], "pointer": [[0.0, 0.0, 0.00016235257498919964, 0.0, 0.00038765359204262495, 0.0, 0.0, 3.168459443259053e-05, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 2.7289668651064858e-05, 0.0, 0.0, 0.0, 0.0, 2.10731741390191e-06, 0.0, 0.0, 5.926991661908687e-07, 0.0, 0.0, 7.083377226990706e-07, 0.0, 0.0, 0.00012960922322236001, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.001115520135499537, 0.0, 0.007369461469352245, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 6.0265960200922564e-05, 0.0, 0.0, 0.0, 0.9478744268417358, 0.0, 2.1176050722715445e-05, 0.0, 0.0, 0.0, 0.0, 0.029726672917604446, 0.0, 0.0, 0.0, 0.0, 0.0, 5.346584657672793e-05, 0.0, 0.0, 0.0, 0.0, 4.148731136410788e-07, 0.0, 0.0, 0.0, 0.011961006559431553, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.00014137529069557786, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 4.092136350664077e-06, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.8708664356381632e-05, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 3.7290644741005963e-06, 0.0, 0.0, 0.0, 5.106561002321541e-05, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 2.907381349359639e-05, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 7.201886182883754e-05, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 4.376312062959187e-05, 0.0, 4.198081569484202e-06, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 3.293688678240869e-06, 0.0, 1.2717448498733575e-06, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 6.180836749081209e-07, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 2.735845896495448e-07, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.821238925003854e-06, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.00017194503743667156, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 6.289904490586196e-07, 0.0, 2.855999525763764e-07, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.2037297665301594e-06, 0.0, 7.945719175950217e-07, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.2978053973711212e-06, 0.0, 7.412710942844569e-07, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 9.768072004590067e-07, 0.0, 8.000961884135904e-07, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.1940411468458478e-06, 0.0, 1.1173385701113148e-06, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.8358135775997653e-06, 0.0, 1.3483924021784333e-06, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 6.79606237099506e-05, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 2.0478805708989967e-06, 0.0, 3.84348641091492e-05, 0.0, 1.7351355836581206e-06, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 2.3456075723515823e-05, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.8766864741337486e-05, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 6.571420817635953e-05, 0.0, 0.0, 3.064928750973195e-05, 0.0, 5.545181193156168e-05, 0.0, 0.0, 0.0, 0.0, 3.292738983873278e-05, 0.0, 0.0, 0.0, 0.0, 3.960383764933795e-06, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.3061050594842527e-05, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 2.675637551874388e-05, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 6.899510481161997e-05, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 7.1924446274351794e-06, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 5.907709419261664e-05, 0.0, 0.0, 0.0, 0.0]], "target": [0.9895620942115784]}, "loss": [0.0014068715972825885, 0.010492762550711632], "acc": [0.0, 1.0, 1.0, 1.0]}}


Trace of simplified code(s):

{"result": {"time": "2021-02-11 11:56:43.294199", "n_pass": [1, 1, 1], "n_token": 439, "loss": [0.0014068715972825885, 0.010492762550711632], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def __init__(", "self", ",", "request", ",", "*", "args", ",", "**kwargs", ")", ":", "#NEWLINE#", "#INDENT#", "super", "(", "CreateNetwork", ",", "self", ")", ".", "__init__", "(", "request", ",", "*", "args", ",", "**", "kwargs", ")", "#NEWLINE#", "tenant_choices", "=", "[", "(", "''", ",", "_", "(", "'Select a project'", ")", ")", "]", "#NEWLINE#", "(", "tenants", ",", "has_more", ")", "=", "api", ".", "keystone", ".", "tenant_list", "(", "request", ")", "#NEWLINE#", "for", "tenant", "in", "tenants", ":", "#NEWLINE#", "#INDENT#", "if", "tenant", ".", "enabled", ":", "#NEWLINE#", "#INDENT#", "tenant_choices", ".", "append", "(", "(", "net_type", ".", "id", ",", "tenant", ".", "name", ")", ")", "#NEWLINE#", "#UNINDENT#", "#UNINDENT#", "self", ".", "fields", "[", "'tenant_id'", "]", ".", "choices", "=", "tenant_choices", "#NEWLINE#", "if", "api", ".", "neutron", ".", "is_port_profiles_supported", "(", ")", ":", "#NEWLINE#", "#INDENT#", "self", ".", "fields", "[", "'net_profile_id'", "]", ".", "choices", "=", "self", ".", "get_network_profile_choices", "(", "request", ")", "#NEWLINE#", "#UNINDENT#", "if", "api", ".", "neutron", ".", "is_extension_supported", "(", "request", ",", "'provider'", ")", ":", "#NEWLINE#", "#INDENT#", "neutron_settings", "=", "getattr", "(", "settings", ",", "'OPENSTACK_NEUTRON_NETWORK'", ",", "{", "#NEWLINE#", "#INDENT#", "#NEWLINE#", "#UNINDENT#", "}", ")", "#NEWLINE#", "seg_id_range", "=", "neutron_settings", ".", "get", "(", "'segmentation_id_range'", ",", "{", "#NEWLINE#", "#INDENT#", "#NEWLINE#", "#UNINDENT#", "}", ")", "#NEWLINE#", "self", ".", "seg_id_range", "=", "{", "#NEWLINE#", "#INDENT#", "'vlan'", ":", "seg_id_range", ".", "get", "(", "'vlan'", ",", "SEGMENTATION_ID_RANGE", ".", "get", "(", "'vlan'", ")", ")", ",", "#NEWLINE#", "'gre'", ":", "seg_id_range", ".", "get", "(", "'gre'", ",", "SEGMENTATION_ID_RANGE", ".", "get", "(", "'gre'", ")", ")", ",", "#NEWLINE#", "'vxlan'", ":", "seg_id_range", ".", "get", "(", "'vxlan'", ",", "SEGMENTATION_ID_RANGE", ".", "get", "(", "'vxlan'", ")", ")", ",", "#NEWLINE#", "#UNINDENT#", "}", "#NEWLINE#", "seg_id_help", "=", "(", "_", "(", "'For VLAN networks, the VLAN VID on the physical network that realizes the virtual network. Valid VLAN VIDs are %(vlan_min)s through %(vlan_max)s. For GRE or VXLAN networks, the tunnel ID. Valid tunnel IDs for GRE networks are %(gre_min)s through %(gre_max)s. For VXLAN networks, %(vxlan_min)s through %(vxlan_max)s.'", ")", "%", "{", "#NEWLINE#", "#INDENT#", "'vlan_min'", ":", "self", ".", "seg_id_range", "[", "'vlan'", "]", "[", "0", "]", ",", "#NEWLINE#", "'vlan_max'", ":", "self", ".", "seg_id_range", "[", "'vlan'", "]", "[", "1", "]", ",", "#NEWLINE#", "'gre_min'", ":", "self", ".", "seg_id_range", "[", "'gre'", "]", "[", "0", "]", ",", "#NEWLINE#", "'gre_max'", ":", "self", ".", "seg_id_range", "[", "'gre'", "]", "[", "1", "]", ",", "#NEWLINE#", "'vxlan_min'", ":", "self", ".", "seg_id_range", "[", "'vxlan'", "]", "[", "0", "]", ",", "#NEWLINE#", "'vxlan_max'", ":", "self", ".", "seg_id_range", "[", "'vxlan'", "]", "[", "1", "]", ",", "#NEWLINE#", "#UNINDENT#", "}", ")", "#NEWLINE#", "self", ".", "fields", "[", "'segmentation_id'", "]", ".", "help_text", "=", "seg_id_help", "#NEWLINE#", "supported_provider_types", "=", "neutron_settings", ".", "get", "(", "'supported_provider_types'", ",", "[", "'*'", "]", ")", "#NEWLINE#", "if", "(", "supported_provider_types", "==", "[", "'*'", "]", ")", ":", "#NEWLINE#", "#INDENT#", "network_type_choices", "=", "PROVIDER_TYPES", "#NEWLINE#", "#UNINDENT#", "else", ":", "#NEWLINE#", "#INDENT#", "network_type_choices", "=", "[", "net_type", "for", "net_type", "in", "PROVIDER_TYPES", "if", "(", "net_type", "[", "0", "]", "in", "supported_provider_types", ")", "]", "#NEWLINE#", "#UNINDENT#", "if", "(", "len", "(", "network_type_choices", ")", "==", "0", ")", ":", "#NEWLINE#", "#INDENT#", "self", ".", "_hide_provider_network_type", "(", ")", "#NEWLINE#", "#UNINDENT#", "else", ":", "#NEWLINE#", "#INDENT#", "self", ".", "fields", "[", "'network_type'", "]", ".", "choices", "=", "network_type_choices", "#NEWLINE#", "#UNINDENT#", "#UNINDENT#", "else", ":", "#NEWLINE#", "#INDENT#", "self", ".", "_hide_provider_network_type", "(", ")"]}}
{"position": {"error_location": 79, "repair_targets": [61, 68, 83], "repair_candidates": [7, 26, 160, 178, 185, 202, 219, 252, 265, 278, 291, 304, 317, 79, 377, 379, 384, 46, 63, 365, 374, 398, 426, 4, 23, 57, 126, 137, 61, 68, 83, 29, 48, 32, 74, 100, 144, 162, 343, 237, 339, 2, 18, 91, 113, 122, 176, 250, 263, 276, 289, 302, 315, 330, 406, 417, 434, 341, 356, 389]}}
{"prediction": {"error_location": 0.9985942244529724, "repair_targets": [0.9478744268417358, 0.029726672917604446, 0.011961006559431553], "repair_candidates": [0.00016235257498919964, 0.00038765359204262495, 3.168459443259053e-05, 2.7289668651064858e-05, 2.10731741390191e-06, 5.926991661908687e-07, 7.083377226990706e-07, 0.00012960922322236001, 0.001115520135499537, 0.007369461469352245, 6.0265960200922564e-05, 0.9478744268417358, 2.1176050722715445e-05, 0.029726672917604446, 5.346584657672793e-05, 4.148731136410788e-07, 0.011961006559431553, 0.00014137529069557786, 4.092136350664077e-06, 1.8708664356381632e-05, 3.7290644741005963e-06, 5.106561002321541e-05, 2.907381349359639e-05, 7.201886182883754e-05, 4.376312062959187e-05, 4.198081569484202e-06, 3.293688678240869e-06, 1.2717448498733575e-06, 6.180836749081209e-07, 2.735845896495448e-07, 1.821238925003854e-06, 0.00017194503743667156, 6.289904490586196e-07, 2.855999525763764e-07, 1.2037297665301594e-06, 7.945719175950217e-07, 1.2978053973711212e-06, 7.412710942844569e-07, 9.768072004590067e-07, 8.000961884135904e-07, 1.1940411468458478e-06, 1.1173385701113148e-06, 1.8358135775997653e-06, 1.3483924021784333e-06, 6.79606237099506e-05, 2.0478805708989967e-06, 3.84348641091492e-05, 1.7351355836581206e-06, 2.3456075723515823e-05, 1.8766864741337486e-05, 6.571420817635953e-05, 3.064928750973195e-05, 5.545181193156168e-05, 3.292738983873278e-05, 3.960383764933795e-06, 1.3061050594842527e-05, 2.675637551874388e-05, 6.899510481161997e-05, 7.1924446274351794e-06, 5.907709419261664e-05], "target_probs": 0.9895620942115784}}


{"result": {"time": "2021-02-11 11:56:43.425194", "n_pass": [103, 2, 2], "n_token": 425, "loss": [0.0008114859228953719, 0.014900581911206245], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def __init__(", "self", ",", "request", ",", "*", "args", ",", "**kwargs", ")", ":", "#NEWLINE#", "#INDENT#", "super", "(", "CreateNetwork", ",", "self", ")", ".", "__init__", "(", "request", ",", "*", "args", ",", "**", "kwargs", ")", "#NEWLINE#", "tenant_choices", "=", "[", "(", "''", ",", "_", "(", "'Select a project'", ")", ")", "]", "#NEWLINE#", "(", "tenants", ",", "has_more", ")", "=", "api", ".", "keystone", ".", "tenant_list", "(", "request", ")", "#NEWLINE#", "for", "tenant", "in", "tenants", ":", "#NEWLINE#", "#INDENT#", "if", "tenant", ".", "enabled", ":", "#NEWLINE#", "#INDENT#", "tenant_choices", ".", "append", "(", "(", "net_type", ".", "id", ",", "tenant", ".", "name", ")", ")", "#NEWLINE#", "#UNINDENT#", "#UNINDENT#", "self", ".", "fields", "[", "'tenant_id'", "]", ".", "choices", "=", "tenant_choices", "#NEWLINE#", "if", "api", ".", "neutron", ".", "is_port_profiles_supported", "(", ")", ":", "#NEWLINE#", "#INDENT#", "self", ".", "fields", "[", "'net_profile_id'", "]", ".", "choices", "=", "self", ".", "get_network_profile_choices", "(", "request", ")", "#NEWLINE#", "#UNINDENT#", "if", "api", ".", "neutron", ".", "is_extension_supported", "(", "request", ",", "'provider'", ")", ":", "#NEWLINE#", "#INDENT#", "neutron_settings", "#NEWLINE#", "seg_id_range", "=", "neutron_settings", ".", "get", "(", "'segmentation_id_range'", ",", "{", "#NEWLINE#", "#INDENT#", "#NEWLINE#", "#UNINDENT#", "}", ")", "#NEWLINE#", "self", ".", "seg_id_range", "=", "{", "#NEWLINE#", "#INDENT#", "'vlan'", ":", "seg_id_range", ".", "get", "(", "'vlan'", ",", "SEGMENTATION_ID_RANGE", ".", "get", "(", "'vlan'", ")", ")", ",", "#NEWLINE#", "'gre'", ":", "seg_id_range", ".", "get", "(", "'gre'", ",", "SEGMENTATION_ID_RANGE", ".", "get", "(", "'gre'", ")", ")", ",", "#NEWLINE#", "'vxlan'", ":", "seg_id_range", ".", "get", "(", "'vxlan'", ",", "SEGMENTATION_ID_RANGE", ".", "get", "(", "'vxlan'", ")", ")", ",", "#NEWLINE#", "#UNINDENT#", "}", "#NEWLINE#", "seg_id_help", "=", "(", "_", "(", "'For VLAN networks, the VLAN VID on the physical network that realizes the virtual network. Valid VLAN VIDs are %(vlan_min)s through %(vlan_max)s. For GRE or VXLAN networks, the tunnel ID. Valid tunnel IDs for GRE networks are %(gre_min)s through %(gre_max)s. For VXLAN networks, %(vxlan_min)s through %(vxlan_max)s.'", ")", "%", "{", "#NEWLINE#", "#INDENT#", "'vlan_min'", ":", "self", ".", "seg_id_range", "[", "'vlan'", "]", "[", "0", "]", ",", "#NEWLINE#", "'vlan_max'", ":", "self", ".", "seg_id_range", "[", "'vlan'", "]", "[", "1", "]", ",", "#NEWLINE#", "'gre_min'", ":", "self", ".", "seg_id_range", "[", "'gre'", "]", "[", "0", "]", ",", "#NEWLINE#", "'gre_max'", ":", "self", ".", "seg_id_range", "[", "'gre'", "]", "[", "1", "]", ",", "#NEWLINE#", "'vxlan_min'", ":", "self", ".", "seg_id_range", "[", "'vxlan'", "]", "[", "0", "]", ",", "#NEWLINE#", "'vxlan_max'", ":", "self", ".", "seg_id_range", "[", "'vxlan'", "]", "[", "1", "]", ",", "#NEWLINE#", "#UNINDENT#", "}", ")", "#NEWLINE#", "self", ".", "fields", "[", "'segmentation_id'", "]", ".", "help_text", "=", "seg_id_help", "#NEWLINE#", "supported_provider_types", "=", "neutron_settings", ".", "get", "(", "'supported_provider_types'", ",", "[", "'*'", "]", ")", "#NEWLINE#", "if", "(", "supported_provider_types", "==", "[", "'*'", "]", ")", ":", "#NEWLINE#", "#INDENT#", "network_type_choices", "=", "PROVIDER_TYPES", "#NEWLINE#", "#UNINDENT#", "else", ":", "#NEWLINE#", "#INDENT#", "network_type_choices", "=", "[", "net_type", "for", "net_type", "in", "PROVIDER_TYPES", "if", "(", "net_type", "[", "0", "]", "in", "supported_provider_types", ")", "]", "#NEWLINE#", "#UNINDENT#", "if", "(", "len", "(", "network_type_choices", ")", "==", "0", ")", ":", "#NEWLINE#", "#INDENT#", "self", ".", "_hide_provider_network_type", "(", ")", "#NEWLINE#", "#UNINDENT#", "else", ":", "#NEWLINE#", "#INDENT#", "self", ".", "fields", "[", "'network_type'", "]", ".", "choices", "=", "network_type_choices", "#NEWLINE#", "#UNINDENT#", "#UNINDENT#", "else", ":", "#NEWLINE#", "#INDENT#", "self", ".", "_hide_provider_network_type", "(", ")"]}}
{"position": {"error_location": 79, "repair_targets": [61, 68, 83], "repair_candidates": [7, 26, 146, 164, 171, 188, 205, 238, 251, 264, 277, 290, 303, 79, 363, 365, 370, 46, 63, 351, 360, 384, 412, 4, 23, 57, 126, 137, 61, 68, 83, 29, 48, 32, 74, 100, 144, 148, 329, 223, 325, 2, 18, 91, 113, 122, 162, 236, 249, 262, 275, 288, 301, 316, 392, 403, 420, 327, 342, 375]}}
{"prediction": {"error_location": 0.9991887211799622, "repair_targets": [0.9404241442680359, 0.03085305541753769, 0.013932700268924236], "repair_candidates": [0.00021219922928139567, 0.00046190954162739217, 5.1720093324547634e-05, 2.7049311029259115e-05, 2.1605515030387323e-06, 1.0910835044342093e-06, 5.755224492531852e-07, 0.0001482781517552212, 0.0017663954058662057, 0.01131743285804987, 8.210977102862671e-05, 0.9404241442680359, 3.011672197317239e-05, 0.03085305541753769, 2.983090053021442e-05, 1.4030736394943233e-07, 0.013932700268924236, 2.6357103706686758e-05, 8.968711995294143e-07, 5.792052434117068e-06, 2.187443897128105e-06, 4.234212974552065e-05, 2.237777334812563e-05, 8.31993602332659e-05, 0.00011764530063373968, 1.6754296666476876e-05, 1.2954528756381478e-06, 2.33645209846145e-06, 7.827492254364188e-07, 2.076375722026569e-06, 4.943653948430438e-07, 8.793514280114323e-05, 1.323587412116467e-06, 5.328111001290381e-07, 4.6948855469963746e-07, 3.155699630497111e-07, 7.641801857971586e-07, 8.54679001349723e-07, 1.0883389904847718e-06, 6.918477311046445e-07, 1.8063933566736523e-06, 9.404230922882562e-07, 1.0825068557096529e-06, 1.1803515462815994e-06, 1.1365676982677542e-05, 3.1688618946645875e-06, 2.5719276891322806e-05, 3.1229124033416156e-06, 9.60441684583202e-06, 1.0676352758309804e-05, 4.249800622346811e-05, 3.905446646967903e-06, 3.8918184145586565e-05, 9.252513336832635e-06, 2.919933194789337e-06, 3.2241488952422515e-05, 1.0700643542804755e-05, 1.6329126083292067e-05, 6.179900537972571e-06, 8.894975508155767e-06], "target_probs": 0.9852098822593689}}


{"result": {"time": "2021-02-11 11:56:43.527517", "n_pass": [106, 3, 3], "n_token": 411, "loss": [0.0003675738989841193, 0.015021346509456635], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def __init__(", "self", ",", "request", ",", "*", "args", ",", "**kwargs", ")", ":", "#NEWLINE#", "#INDENT#", "super", "(", "CreateNetwork", ",", "self", ")", ".", "__init__", "(", "request", ",", "*", "args", ",", "**", "kwargs", ")", "#NEWLINE#", "tenant_choices", "=", "[", "(", "''", ",", "_", "(", "'Select a project'", ")", ")", "]", "#NEWLINE#", "(", "tenants", ",", "has_more", ")", "=", "api", ".", "keystone", ".", "tenant_list", "(", "request", ")", "#NEWLINE#", "for", "tenant", "in", "tenants", ":", "#NEWLINE#", "#INDENT#", "if", "tenant", ".", "enabled", ":", "#NEWLINE#", "#INDENT#", "tenant_choices", ".", "append", "(", "(", "net_type", ".", "id", ",", "tenant", ".", "name", ")", ")", "#NEWLINE#", "#UNINDENT#", "#UNINDENT#", "self", ".", "fields", "[", "'tenant_id'", "]", ".", "choices", "=", "tenant_choices", "#NEWLINE#", "if", "api", ".", "neutron", ".", "is_port_profiles_supported", "(", ")", ":", "#NEWLINE#", "#INDENT#", "self", ".", "fields", "[", "'net_profile_id'", "]", ".", "choices", "=", "self", ".", "get_network_profile_choices", "(", "request", ")", "#NEWLINE#", "#UNINDENT#", "if", "api", ".", "neutron", ".", "is_extension_supported", "(", "request", ",", "'provider'", ")", ":", "#NEWLINE#", "#INDENT#", "neutron_settings", "#NEWLINE#", "seg_id_range", "=", "neutron_settings", ".", "get", "(", "'segmentation_id_range'", ",", "{", "#NEWLINE#", "#INDENT#", "#NEWLINE#", "#UNINDENT#", "}", ")", "#NEWLINE#", "self", ".", "seg_id_range", "=", "{", "#NEWLINE#", "#INDENT#", "'vlan'", ":", "seg_id_range", ".", ":", "seg_id_range", ".", "get", "(", "'gre'", ",", "SEGMENTATION_ID_RANGE", ".", "get", "(", "'gre'", ")", ")", ",", "#NEWLINE#", "'vxlan'", ":", "seg_id_range", ".", "get", "(", "'vxlan'", ",", "SEGMENTATION_ID_RANGE", ".", "get", "(", "'vxlan'", ")", ")", ",", "#NEWLINE#", "#UNINDENT#", "}", "#NEWLINE#", "seg_id_help", "=", "(", "_", "(", "'For VLAN networks, the VLAN VID on the physical network that realizes the virtual network. Valid VLAN VIDs are %(vlan_min)s through %(vlan_max)s. For GRE or VXLAN networks, the tunnel ID. Valid tunnel IDs for GRE networks are %(gre_min)s through %(gre_max)s. For VXLAN networks, %(vxlan_min)s through %(vxlan_max)s.'", ")", "%", "{", "#NEWLINE#", "#INDENT#", "'vlan_min'", ":", "self", ".", "seg_id_range", "[", "'vlan'", "]", "[", "0", "]", ",", "#NEWLINE#", "'vlan_max'", ":", "self", ".", "seg_id_range", "[", "'vlan'", "]", "[", "1", "]", ",", "#NEWLINE#", "'gre_min'", ":", "self", ".", "seg_id_range", "[", "'gre'", "]", "[", "0", "]", ",", "#NEWLINE#", "'gre_max'", ":", "self", ".", "seg_id_range", "[", "'gre'", "]", "[", "1", "]", ",", "#NEWLINE#", "'vxlan_min'", ":", "self", ".", "seg_id_range", "[", "'vxlan'", "]", "[", "0", "]", ",", "#NEWLINE#", "'vxlan_max'", ":", "self", ".", "seg_id_range", "[", "'vxlan'", "]", "[", "1", "]", ",", "#NEWLINE#", "#UNINDENT#", "}", ")", "#NEWLINE#", "self", ".", "fields", "[", "'segmentation_id'", "]", ".", "help_text", "=", "seg_id_help", "#NEWLINE#", "supported_provider_types", "=", "neutron_settings", ".", "get", "(", "'supported_provider_types'", ",", "[", "'*'", "]", ")", "#NEWLINE#", "if", "(", "supported_provider_types", "==", "[", "'*'", "]", ")", ":", "#NEWLINE#", "#INDENT#", "network_type_choices", "=", "PROVIDER_TYPES", "#NEWLINE#", "#UNINDENT#", "else", ":", "#NEWLINE#", "#INDENT#", "network_type_choices", "=", "[", "net_type", "for", "net_type", "in", "PROVIDER_TYPES", "if", "(", "net_type", "[", "0", "]", "in", "supported_provider_types", ")", "]", "#NEWLINE#", "#UNINDENT#", "if", "(", "len", "(", "network_type_choices", ")", "==", "0", ")", ":", "#NEWLINE#", "#INDENT#", "self", ".", "_hide_provider_network_type", "(", ")", "#NEWLINE#", "#UNINDENT#", "else", ":", "#NEWLINE#", "#INDENT#", "self", ".", "fields", "[", "'network_type'", "]", ".", "choices", "=", "network_type_choices", "#NEWLINE#", "#UNINDENT#", "#UNINDENT#", "else", ":", "#NEWLINE#", "#INDENT#", "self", ".", "_hide_provider_network_type", "(", ")"]}}
{"position": {"error_location": 79, "repair_targets": [61, 68, 83], "repair_candidates": [7, 26, 146, 164, 171, 174, 191, 224, 237, 250, 263, 276, 289, 79, 349, 351, 356, 46, 63, 337, 346, 370, 398, 4, 23, 57, 126, 137, 61, 68, 83, 29, 48, 32, 74, 100, 144, 148, 315, 209, 311, 2, 18, 91, 113, 122, 162, 222, 235, 248, 261, 274, 287, 302, 378, 389, 406, 313, 328, 361]}}
{"prediction": {"error_location": 0.9996325969696045, "repair_targets": [0.9319595694541931, 0.03819217532873154, 0.0149391433224082], "repair_candidates": [0.00024161873443517834, 0.0006906857015565038, 4.924493987346068e-05, 3.0493305530399084e-05, 3.046056463062996e-06, 8.366834549633495e-07, 6.296758101598243e-07, 0.00014674803242087364, 0.0018175507429987192, 0.011133477091789246, 0.00010763986210804433, 0.9319595694541931, 4.624961002264172e-05, 0.03819217532873154, 2.6410198188386858e-05, 7.07253917653361e-08, 0.0149391433224082, 9.006770414998755e-05, 2.2553535927727353e-06, 8.706103471922688e-06, 1.7831465584094985e-06, 4.527662167674862e-05, 2.812260208884254e-05, 9.767791925696656e-05, 0.00010106006811838597, 1.728895767882932e-05, 7.901368803686637e-07, 3.0107007660262752e-06, 7.494841156585608e-07, 5.049478772889415e-07, 4.7198511765600415e-07, 9.570099791744724e-05, 1.3248604773252737e-06, 3.218309245767159e-07, 1.3969994370199856e-06, 6.701489496663271e-07, 4.1234898162656464e-07, 2.891428891871328e-07, 5.996964773657965e-07, 7.574557798761816e-07, 8.568802627451078e-07, 7.300376410057652e-07, 7.263992642947414e-07, 5.759293912888097e-07, 6.713237326039234e-06, 6.76488696171873e-07, 1.6349807992810383e-05, 6.190799695104943e-07, 4.727985469799023e-06, 7.542635557911126e-06, 1.9905750377802178e-05, 7.279301826201845e-06, 1.8705377442529425e-05, 1.4281910807767417e-05, 1.4656802704848815e-06, 4.4730377339874394e-06, 1.7067413864424452e-06, 5.728374617319787e-06, 4.6757668314967304e-07, 1.4651811852672836e-06], "target_probs": 0.9850909113883972}}


{"result": {"time": "2021-02-11 11:56:43.649227", "n_pass": [198, 4, 4], "n_token": 404, "loss": [0.0010758809512481093, 0.013937109149992466], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def __init__(", "self", ",", "request", ",", "*", "args", ",", "**kwargs", ")", ":", "#NEWLINE#", "#INDENT#", "super", "(", "CreateNetwork", ",", "self", ")", ".", "__init__", "(", "request", ",", "*", "args", ",", "**", "kwargs", ")", "#NEWLINE#", "tenant_choices", "=", "[", "(", "''", ",", "_", "(", "'Select a project'", ")", ")", "]", "#NEWLINE#", "(", "tenants", ",", "has_more", ")", "=", "api", ".", "keystone", ".", "tenant_list", "(", "request", ")", "#NEWLINE#", "for", "tenant", "in", "tenants", ":", "#NEWLINE#", "#INDENT#", "if", "tenant", ".", "enabled", ":", "#NEWLINE#", "#INDENT#", "tenant_choices", ".", "append", "(", "(", "net_type", ".", "id", ",", "tenant", ".", "name", ")", ")", "#NEWLINE#", "#UNINDENT#", "#UNINDENT#", "self", ".", "fields", "[", "'tenant_id'", "]", ".", "choices", "=", "tenant_choices", "#NEWLINE#", "if", "api", ".", "neutron", ".", "is_port_profiles_supported", "(", ")", ":", "#NEWLINE#", "#INDENT#", "self", ".", "fields", "[", "'net_profile_id'", "]", ".", "choices", "=", "self", ".", "get_network_profile_choices", "(", "request", ")", "#NEWLINE#", "#UNINDENT#", "if", "api", ".", "neutron", ".", "is_extension_supported", "(", "request", ",", "'provider'", ")", ":", "#NEWLINE#", "#INDENT#", "neutron_settings", "#NEWLINE#", "seg_id_range", "=", "neutron_settings", ".", "get", "(", "'segmentation_id_range'", ",", "{", "#NEWLINE#", "#INDENT#", "#NEWLINE#", "#UNINDENT#", "}", ")", "#NEWLINE#", "self", ".", "seg_id_range", "=", "{", "#NEWLINE#", "#INDENT#", "'vlan'", ":", "seg_id_range", ".", ":", "seg_id_range", ".", "get", "(", "'gre'", ",", ",", "#NEWLINE#", "'vxlan'", ":", "seg_id_range", ".", "get", "(", "'vxlan'", ",", "SEGMENTATION_ID_RANGE", ".", "get", "(", "'vxlan'", ")", ")", ",", "#NEWLINE#", "#UNINDENT#", "}", "#NEWLINE#", "seg_id_help", "=", "(", "_", "(", "'For VLAN networks, the VLAN VID on the physical network that realizes the virtual network. Valid VLAN VIDs are %(vlan_min)s through %(vlan_max)s. For GRE or VXLAN networks, the tunnel ID. Valid tunnel IDs for GRE networks are %(gre_min)s through %(gre_max)s. For VXLAN networks, %(vxlan_min)s through %(vxlan_max)s.'", ")", "%", "{", "#NEWLINE#", "#INDENT#", "'vlan_min'", ":", "self", ".", "seg_id_range", "[", "'vlan'", "]", "[", "0", "]", ",", "#NEWLINE#", "'vlan_max'", ":", "self", ".", "seg_id_range", "[", "'vlan'", "]", "[", "1", "]", ",", "#NEWLINE#", "'gre_min'", ":", "self", ".", "seg_id_range", "[", "'gre'", "]", "[", "0", "]", ",", "#NEWLINE#", "'gre_max'", ":", "self", ".", "seg_id_range", "[", "'gre'", "]", "[", "1", "]", ",", "#NEWLINE#", "'vxlan_min'", ":", "self", ".", "seg_id_range", "[", "'vxlan'", "]", "[", "0", "]", ",", "#NEWLINE#", "'vxlan_max'", ":", "self", ".", "seg_id_range", "[", "'vxlan'", "]", "[", "1", "]", ",", "#NEWLINE#", "#UNINDENT#", "}", ")", "#NEWLINE#", "self", ".", "fields", "[", "'segmentation_id'", "]", ".", "help_text", "=", "seg_id_help", "#NEWLINE#", "supported_provider_types", "=", "neutron_settings", ".", "get", "(", "'supported_provider_types'", ",", "[", "'*'", "]", ")", "#NEWLINE#", "if", "(", "supported_provider_types", "==", "[", "'*'", "]", ")", ":", "#NEWLINE#", "#INDENT#", "network_type_choices", "=", "PROVIDER_TYPES", "#NEWLINE#", "#UNINDENT#", "else", ":", "#NEWLINE#", "#INDENT#", "network_type_choices", "=", "[", "net_type", "for", "net_type", "in", "PROVIDER_TYPES", "if", "(", "net_type", "[", "0", "]", "in", "supported_provider_types", ")", "]", "#NEWLINE#", "#UNINDENT#", "if", "(", "len", "(", "network_type_choices", ")", "==", "0", ")", ":", "#NEWLINE#", "#INDENT#", "self", ".", "_hide_provider_network_type", "(", ")", "#NEWLINE#", "#UNINDENT#", "else", ":", "#NEWLINE#", "#INDENT#", "self", ".", "fields", "[", "'network_type'", "]", ".", "choices", "=", "network_type_choices", "#NEWLINE#", "#UNINDENT#", "#UNINDENT#", "else", ":", "#NEWLINE#", "#INDENT#", "self", ".", "_hide_provider_network_type", "(", ")"]}}
{"position": {"error_location": 79, "repair_targets": [61, 68, 83], "repair_candidates": [7, 26, 146, 164, 171, 174, 184, 217, 230, 243, 256, 269, 282, 79, 342, 344, 349, 46, 63, 330, 339, 363, 391, 4, 23, 57, 126, 137, 61, 68, 83, 29, 48, 32, 74, 100, 144, 148, 308, 202, 304, 2, 18, 91, 113, 122, 162, 215, 228, 241, 254, 267, 280, 295, 371, 382, 399, 306, 321, 354]}}
{"prediction": {"error_location": 0.9989245533943176, "repair_targets": [0.9300656318664551, 0.03797570988535881, 0.018118243664503098], "repair_candidates": [0.00019864420755766332, 0.0005771381547674537, 4.4211257772985846e-05, 2.8937740353285335e-05, 3.3923154205695027e-06, 9.727194765218883e-07, 8.592983249400277e-07, 0.00017792075232136995, 0.001897588954307139, 0.009876505471765995, 0.0001159299208666198, 0.9300656318664551, 3.989091419498436e-05, 0.03797570988535881, 5.7992470829049125e-05, 3.1010415568744065e-07, 0.018118243664503098, 0.00011305567022645846, 4.317654202168342e-06, 1.183061431220267e-05, 4.342662577982992e-06, 5.62799941690173e-05, 2.8980599381611682e-05, 7.86585223977454e-05, 0.00011694662680383772, 1.8115422790287994e-05, 1.533252088847803e-06, 4.386759883345803e-06, 6.850244744782685e-07, 5.642273208650295e-07, 1.1266738511039875e-05, 8.262822666438296e-05, 1.3068917041891837e-06, 3.7203662373030966e-07, 2.872126515285345e-06, 5.173262707103277e-07, 1.0242317785014166e-06, 6.205333988873463e-07, 1.7070847206923645e-06, 4.699280395925598e-07, 1.5416387668665266e-06, 1.5715681911387946e-06, 1.1837130386993522e-06, 5.924283641434158e-07, 4.1840576159302145e-05, 1.4529459804180078e-06, 2.557243533374276e-05, 1.4142839290798292e-06, 6.53045162835042e-06, 1.614181383047253e-05, 4.195841393084265e-05, 2.2317377442959696e-05, 1.2696537851297762e-05, 1.3393677363637835e-05, 3.2801465295051457e-06, 1.011122549243737e-05, 1.044567943608854e-05, 4.91847240482457e-05, 5.004474587622099e-06, 1.1418762369430624e-05], "target_probs": 0.9861595630645752}}


{"result": {"time": "2021-02-11 11:56:43.750430", "n_pass": [200, 5, 5], "n_token": 397, "loss": [0.0004657614335883409, 0.020434563979506493], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def __init__(", "self", ",", "request", ",", "*", "args", ",", "**kwargs", ")", ":", "#NEWLINE#", "#INDENT#", "super", "(", "CreateNetwork", ",", "self", ")", ".", "__init__", "(", "request", ",", "*", "args", ",", "**", "kwargs", ")", "#NEWLINE#", "tenant_choices", "=", "[", "(", "''", ",", "_", "(", "'Select a project'", ")", ")", "]", "#NEWLINE#", "(", "tenants", ",", "has_more", ")", "=", "api", ".", "keystone", ".", "tenant_list", "(", "request", ")", "#NEWLINE#", "for", "tenant", "in", "tenants", ":", "#NEWLINE#", "#INDENT#", "if", "tenant", ".", "enabled", ":", "#NEWLINE#", "#INDENT#", "tenant_choices", ".", "append", "(", "(", "net_type", ".", "id", ",", "tenant", ".", "name", ")", ")", "#NEWLINE#", "#UNINDENT#", "#UNINDENT#", "self", ".", "fields", "[", "'tenant_id'", "]", ".", "choices", "=", "tenant_choices", "#NEWLINE#", "if", "api", ".", "neutron", ".", "is_port_profiles_supported", "(", ")", ":", "#NEWLINE#", "#INDENT#", "self", ".", "fields", "[", "'net_profile_id'", "]", ".", "choices", "=", "self", ".", "get_network_profile_choices", "(", "request", ")", "#NEWLINE#", "#UNINDENT#", "if", "api", ".", "neutron", ".", "is_extension_supported", "(", "request", ",", "'provider'", ")", ":", "#NEWLINE#", "#INDENT#", "neutron_settings", "#NEWLINE#", "seg_id_range", "=", "neutron_settings", ".", "get", "(", "'segmentation_id_range'", ",", "{", "#NEWLINE#", "#INDENT#", "#NEWLINE#", "#UNINDENT#", "}", ")", "#NEWLINE#", "self", ".", "seg_id_range", "=", "{", "#NEWLINE#", "#INDENT#", "'vlan'", ":", "seg_id_range", ".", ":", "seg_id_range", ".", "get", "(", "'gre'", ",", ",", "#NEWLINE#", "'vxlan'", ":", "seg_id_range", ".", "get", "'vxlan'", ")", ")", ",", "#NEWLINE#", "#UNINDENT#", "}", "#NEWLINE#", "seg_id_help", "=", "(", "_", "(", "'For VLAN networks, the VLAN VID on the physical network that realizes the virtual network. Valid VLAN VIDs are %(vlan_min)s through %(vlan_max)s. For GRE or VXLAN networks, the tunnel ID. Valid tunnel IDs for GRE networks are %(gre_min)s through %(gre_max)s. For VXLAN networks, %(vxlan_min)s through %(vxlan_max)s.'", ")", "%", "{", "#NEWLINE#", "#INDENT#", "'vlan_min'", ":", "self", ".", "seg_id_range", "[", "'vlan'", "]", "[", "0", "]", ",", "#NEWLINE#", "'vlan_max'", ":", "self", ".", "seg_id_range", "[", "'vlan'", "]", "[", "1", "]", ",", "#NEWLINE#", "'gre_min'", ":", "self", ".", "seg_id_range", "[", "'gre'", "]", "[", "0", "]", ",", "#NEWLINE#", "'gre_max'", ":", "self", ".", "seg_id_range", "[", "'gre'", "]", "[", "1", "]", ",", "#NEWLINE#", "'vxlan_min'", ":", "self", ".", "seg_id_range", "[", "'vxlan'", "]", "[", "0", "]", ",", "#NEWLINE#", "'vxlan_max'", ":", "self", ".", "seg_id_range", "[", "'vxlan'", "]", "[", "1", "]", ",", "#NEWLINE#", "#UNINDENT#", "}", ")", "#NEWLINE#", "self", ".", "fields", "[", "'segmentation_id'", "]", ".", "help_text", "=", "seg_id_help", "#NEWLINE#", "supported_provider_types", "=", "neutron_settings", ".", "get", "(", "'supported_provider_types'", ",", "[", "'*'", "]", ")", "#NEWLINE#", "if", "(", "supported_provider_types", "==", "[", "'*'", "]", ")", ":", "#NEWLINE#", "#INDENT#", "network_type_choices", "=", "PROVIDER_TYPES", "#NEWLINE#", "#UNINDENT#", "else", ":", "#NEWLINE#", "#INDENT#", "network_type_choices", "=", "[", "net_type", "for", "net_type", "in", "PROVIDER_TYPES", "if", "(", "net_type", "[", "0", "]", "in", "supported_provider_types", ")", "]", "#NEWLINE#", "#UNINDENT#", "if", "(", "len", "(", "network_type_choices", ")", "==", "0", ")", ":", "#NEWLINE#", "#INDENT#", "self", ".", "_hide_provider_network_type", "(", ")", "#NEWLINE#", "#UNINDENT#", "else", ":", "#NEWLINE#", "#INDENT#", "self", ".", "fields", "[", "'network_type'", "]", ".", "choices", "=", "network_type_choices", "#NEWLINE#", "#UNINDENT#", "#UNINDENT#", "else", ":", "#NEWLINE#", "#INDENT#", "self", ".", "_hide_provider_network_type", "(", ")"]}}
{"position": {"error_location": 79, "repair_targets": [61, 68, 83], "repair_candidates": [7, 26, 146, 164, 171, 174, 184, 210, 223, 236, 249, 262, 275, 79, 335, 337, 342, 46, 63, 323, 332, 356, 384, 4, 23, 57, 126, 137, 61, 68, 83, 29, 48, 32, 74, 100, 144, 148, 301, 195, 297, 2, 18, 91, 113, 122, 162, 208, 221, 234, 247, 260, 273, 288, 364, 375, 392, 299, 314, 347]}}
{"prediction": {"error_location": 0.9995344877243042, "repair_targets": [0.9230508804321289, 0.04322270303964615, 0.013499252498149872], "repair_candidates": [0.00019903718202840537, 0.0007836367003619671, 8.239636372309178e-05, 2.6499925297684968e-05, 2.380328169238055e-06, 1.313671077696199e-06, 6.220285513336421e-07, 0.00022414085105992854, 0.0022195978090167046, 0.012361954897642136, 0.000127273058751598, 0.9230508804321289, 5.017529838369228e-05, 0.04322270303964615, 4.3898231524508446e-05, 1.8125972189864115e-07, 0.013499252498149872, 0.0001052932275342755, 3.3145654469990404e-06, 1.2433016308932565e-05, 2.4852661226759665e-06, 5.2986230002716184e-05, 3.115502840955742e-05, 0.0001145343339885585, 0.0005462918197736144, 1.628667814657092e-05, 1.8938595758299925e-06, 1.0492719411558937e-05, 5.89854025747627e-05, 3.287274012109265e-05, 0.002874538069590926, 0.00012620037887245417, 7.09308369550854e-06, 5.423985953711963e-07, 2.458392827975331e-06, 2.888208143758675e-07, 2.3686254735366674e-06, 8.536912901035976e-07, 9.249408208233945e-07, 3.3333836313431675e-07, 1.5216720612443169e-06, 8.64716184878489e-07, 1.2947310779054533e-06, 8.230054504565487e-07, 1.4461577393376501e-06, 1.1472257028799504e-06, 1.5605372027494013e-05, 9.022884341902682e-07, 3.258923243265599e-06, 1.394050195813179e-05, 3.074127380386926e-05, 7.72011162553099e-07, 7.879109944042284e-06, 3.9434062273357995e-06, 9.862691285889014e-07, 8.005439667613246e-06, 7.10670235548605e-07, 1.935322416102281e-06, 2.7784014946519164e-06, 8.816156196189695e-07], "target_probs": 0.9797728061676025}}


{"result": {"time": "2021-02-11 11:56:43.851061", "n_pass": [201, 6, 6], "n_token": 390, "loss": [0.0003091811086051166, 0.018970543518662453], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def __init__(", "self", ",", "request", ",", "*", "args", ",", "**kwargs", ")", ":", "#NEWLINE#", "#INDENT#", "super", "(", "CreateNetwork", ",", "self", ")", ".", "__init__", "(", "request", ",", "*", "args", ",", "**", "kwargs", ")", "#NEWLINE#", "tenant_choices", "=", "[", "(", "''", ",", "_", "(", "'Select a project'", ")", ")", "]", "#NEWLINE#", "(", "tenants", ",", "has_more", ")", "=", "api", ".", "keystone", ".", "tenant_list", "(", "request", ")", "#NEWLINE#", "for", "tenant", "in", "tenants", ":", "#NEWLINE#", "#INDENT#", "if", "tenant", ".", "enabled", ":", "#NEWLINE#", "#INDENT#", "tenant_choices", ".", "append", "(", "(", "net_type", ".", "id", ",", "tenant", ".", "name", ")", ")", "#NEWLINE#", "#UNINDENT#", "#UNINDENT#", "self", ".", "fields", "[", "'tenant_id'", "]", ".", "choices", "=", "tenant_choices", "#NEWLINE#", "if", "api", ".", "neutron", ".", "is_port_profiles_supported", "(", ")", ":", "#NEWLINE#", "#INDENT#", "self", ".", "fields", "[", "'net_profile_id'", "]", ".", "choices", "=", "self", ".", "get_network_profile_choices", "(", "request", ")", "#NEWLINE#", "#UNINDENT#", "if", "api", ".", "neutron", ".", "is_extension_supported", "(", "request", ",", "'provider'", ")", ":", "#NEWLINE#", "#INDENT#", "neutron_settings", "#NEWLINE#", "seg_id_range", "=", "neutron_settings", ".", "get", "(", "'segmentation_id_range'", ",", "{", "#NEWLINE#", "#INDENT#", "#NEWLINE#", "#UNINDENT#", "}", ")", "#NEWLINE#", "self", ".", "seg_id_range", "=", "{", "#NEWLINE#", "#INDENT#", "'vlan'", ":", "seg_id_range", ".", ":", "seg_id_range", ".", "get", "(", "'gre'", ",", ",", "#NEWLINE#", "'vxlan'", ":", "seg_id_range", ".", "get", "#NEWLINE#", "seg_id_help", "=", "(", "_", "(", "'For VLAN networks, the VLAN VID on the physical network that realizes the virtual network. Valid VLAN VIDs are %(vlan_min)s through %(vlan_max)s. For GRE or VXLAN networks, the tunnel ID. Valid tunnel IDs for GRE networks are %(gre_min)s through %(gre_max)s. For VXLAN networks, %(vxlan_min)s through %(vxlan_max)s.'", ")", "%", "{", "#NEWLINE#", "#INDENT#", "'vlan_min'", ":", "self", ".", "seg_id_range", "[", "'vlan'", "]", "[", "0", "]", ",", "#NEWLINE#", "'vlan_max'", ":", "self", ".", "seg_id_range", "[", "'vlan'", "]", "[", "1", "]", ",", "#NEWLINE#", "'gre_min'", ":", "self", ".", "seg_id_range", "[", "'gre'", "]", "[", "0", "]", ",", "#NEWLINE#", "'gre_max'", ":", "self", ".", "seg_id_range", "[", "'gre'", "]", "[", "1", "]", ",", "#NEWLINE#", "'vxlan_min'", ":", "self", ".", "seg_id_range", "[", "'vxlan'", "]", "[", "0", "]", ",", "#NEWLINE#", "'vxlan_max'", ":", "self", ".", "seg_id_range", "[", "'vxlan'", "]", "[", "1", "]", ",", "#NEWLINE#", "#UNINDENT#", "}", ")", "#NEWLINE#", "self", ".", "fields", "[", "'segmentation_id'", "]", ".", "help_text", "=", "seg_id_help", "#NEWLINE#", "supported_provider_types", "=", "neutron_settings", ".", "get", "(", "'supported_provider_types'", ",", "[", "'*'", "]", ")", "#NEWLINE#", "if", "(", "supported_provider_types", "==", "[", "'*'", "]", ")", ":", "#NEWLINE#", "#INDENT#", "network_type_choices", "=", "PROVIDER_TYPES", "#NEWLINE#", "#UNINDENT#", "else", ":", "#NEWLINE#", "#INDENT#", "network_type_choices", "=", "[", "net_type", "for", "net_type", "in", "PROVIDER_TYPES", "if", "(", "net_type", "[", "0", "]", "in", "supported_provider_types", ")", "]", "#NEWLINE#", "#UNINDENT#", "if", "(", "len", "(", "network_type_choices", ")", "==", "0", ")", ":", "#NEWLINE#", "#INDENT#", "self", ".", "_hide_provider_network_type", "(", ")", "#NEWLINE#", "#UNINDENT#", "else", ":", "#NEWLINE#", "#INDENT#", "self", ".", "fields", "[", "'network_type'", "]", ".", "choices", "=", "network_type_choices", "#NEWLINE#", "#UNINDENT#", "#UNINDENT#", "else", ":", "#NEWLINE#", "#INDENT#", "self", ".", "_hide_provider_network_type", "(", ")"]}}
{"position": {"error_location": 79, "repair_targets": [61, 68, 83], "repair_candidates": [7, 26, 146, 164, 171, 174, 184, 203, 216, 229, 242, 255, 268, 79, 328, 330, 335, 46, 63, 316, 325, 349, 377, 4, 23, 57, 126, 137, 61, 68, 83, 29, 48, 32, 74, 100, 144, 148, 294, 188, 290, 2, 18, 91, 113, 122, 162, 201, 214, 227, 240, 253, 266, 281, 357, 368, 385, 292, 307, 340]}}
{"prediction": {"error_location": 0.9996908903121948, "repair_targets": [0.9348809123039246, 0.03748483583331108, 0.008842491544783115], "repair_candidates": [0.0001974358019651845, 0.000674701645039022, 7.215247751446441e-05, 2.1602580090984702e-05, 1.8223433926323196e-06, 8.862836011758191e-07, 6.628437745348492e-07, 0.00024925213074311614, 0.002510343212634325, 0.013822441920638084, 0.00012248095299582928, 0.9348809123039246, 6.283332913881168e-05, 0.03748483583331108, 4.177103619440459e-05, 8.385961081103233e-08, 0.008842491544783115, 4.6036962885409594e-05, 3.1755205327499425e-06, 6.946327175683109e-06, 1.4376860235643107e-06, 4.176701622782275e-05, 2.2510523194796406e-05, 0.00012175041774753481, 0.00029295560671016574, 1.2815643458452541e-05, 1.2550656265375437e-06, 3.975048912252532e-06, 1.324605727859307e-05, 1.3900308658776339e-05, 0.00018894046661444008, 0.00012634215818252414, 1.3430211538434378e-06, 8.12701046015718e-07, 1.2858903346568695e-06, 3.156786192448635e-07, 3.2844873203430325e-06, 4.4028470824741817e-07, 8.757893965594121e-07, 5.518459147424437e-07, 1.3750704965787008e-06, 4.325906672875135e-07, 7.553967975582054e-07, 1.0609297760311165e-06, 1.0087775308420532e-06, 6.000730991218006e-06, 2.369698449911084e-05, 8.941127589423559e-07, 2.363790372328367e-06, 9.281793609261513e-06, 2.9625301976921037e-05, 2.1594041754724458e-06, 9.782196684682276e-06, 5.077458808955271e-06, 1.3560961633629631e-06, 9.491181117482483e-06, 5.632830948343326e-07, 1.165632397714944e-06, 8.867706924320373e-07, 4.826817985303933e-07], "target_probs": 0.9812082648277283}}


{"result": {"time": "2021-02-11 11:56:43.951155", "n_pass": [203, 7, 7], "n_token": 383, "loss": [0.00022432672267314047, 0.018745262175798416], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def __init__(", "self", ",", "request", ",", "*", "args", ",", "**kwargs", ")", ":", "#NEWLINE#", "#INDENT#", "super", "(", "CreateNetwork", ",", "self", ")", ".", "__init__", "(", "request", ",", "*", "args", ",", "**", "kwargs", ")", "#NEWLINE#", "tenant_choices", "=", "[", "(", "''", ",", "_", "(", "'Select a project'", ")", ")", "]", "#NEWLINE#", "(", "tenants", ",", "has_more", ")", "=", "api", ".", "keystone", ".", "tenant_list", "(", "request", ")", "#NEWLINE#", "for", "tenant", "in", "tenants", ":", "#NEWLINE#", "#INDENT#", "if", "tenant", ".", "enabled", ":", "#NEWLINE#", "#INDENT#", "tenant_choices", ".", "append", "(", "(", "net_type", ".", "id", ",", "tenant", ".", "name", ")", ")", "#NEWLINE#", "#UNINDENT#", "#UNINDENT#", "self", ".", "fields", "[", "'tenant_id'", "]", ".", "choices", "=", "tenant_choices", "#NEWLINE#", "if", "api", ".", "neutron", ".", "is_port_profiles_supported", "(", ")", ":", "#NEWLINE#", "#INDENT#", "self", ".", "fields", "[", "'net_profile_id'", "]", ".", "choices", "=", "self", ".", "get_network_profile_choices", "(", "request", ")", "#NEWLINE#", "#UNINDENT#", "if", "api", ".", "neutron", ".", "is_extension_supported", "(", "request", ",", "'provider'", ")", ":", "#NEWLINE#", "#INDENT#", "neutron_settings", "#NEWLINE#", "seg_id_range", "=", "neutron_settings", ".", "get", "(", "'segmentation_id_range'", ",", "{", "#NEWLINE#", "#INDENT#", "#NEWLINE#", "#UNINDENT#", "}", ")", "#NEWLINE#", "self", ".", "seg_id_range", "=", "{", "#NEWLINE#", "#INDENT#", "'vlan'", ":", "seg_id_range", ".", ":", "seg_id_range", ".", "get", "(", "'gre'", ",", ",", "#NEWLINE#", "'vxlan'", ":", "seg_id_range", ".", "get", "#NEWLINE#", "seg_id_help", "=", "(", "_", "(", "'For VLAN networks, the VLAN VID on the physical network that realizes the virtual network. Valid VLAN VIDs are %(vlan_min)s through %(vlan_max)s. For GRE or VXLAN networks, the tunnel ID. Valid tunnel IDs for GRE networks are %(gre_min)s through %(gre_max)s. For VXLAN networks, %(vxlan_min)s through %(vxlan_max)s.'", "self", ".", "seg_id_range", "[", "'vlan'", "]", "[", "0", "]", ",", "#NEWLINE#", "'vlan_max'", ":", "self", ".", "seg_id_range", "[", "'vlan'", "]", "[", "1", "]", ",", "#NEWLINE#", "'gre_min'", ":", "self", ".", "seg_id_range", "[", "'gre'", "]", "[", "0", "]", ",", "#NEWLINE#", "'gre_max'", ":", "self", ".", "seg_id_range", "[", "'gre'", "]", "[", "1", "]", ",", "#NEWLINE#", "'vxlan_min'", ":", "self", ".", "seg_id_range", "[", "'vxlan'", "]", "[", "0", "]", ",", "#NEWLINE#", "'vxlan_max'", ":", "self", ".", "seg_id_range", "[", "'vxlan'", "]", "[", "1", "]", ",", "#NEWLINE#", "#UNINDENT#", "}", ")", "#NEWLINE#", "self", ".", "fields", "[", "'segmentation_id'", "]", ".", "help_text", "=", "seg_id_help", "#NEWLINE#", "supported_provider_types", "=", "neutron_settings", ".", "get", "(", "'supported_provider_types'", ",", "[", "'*'", "]", ")", "#NEWLINE#", "if", "(", "supported_provider_types", "==", "[", "'*'", "]", ")", ":", "#NEWLINE#", "#INDENT#", "network_type_choices", "=", "PROVIDER_TYPES", "#NEWLINE#", "#UNINDENT#", "else", ":", "#NEWLINE#", "#INDENT#", "network_type_choices", "=", "[", "net_type", "for", "net_type", "in", "PROVIDER_TYPES", "if", "(", "net_type", "[", "0", "]", "in", "supported_provider_types", ")", "]", "#NEWLINE#", "#UNINDENT#", "if", "(", "len", "(", "network_type_choices", ")", "==", "0", ")", ":", "#NEWLINE#", "#INDENT#", "self", ".", "_hide_provider_network_type", "(", ")", "#NEWLINE#", "#UNINDENT#", "else", ":", "#NEWLINE#", "#INDENT#", "self", ".", "fields", "[", "'network_type'", "]", ".", "choices", "=", "network_type_choices", "#NEWLINE#", "#UNINDENT#", "#UNINDENT#", "else", ":", "#NEWLINE#", "#INDENT#", "self", ".", "_hide_provider_network_type", "(", ")"]}}
{"position": {"error_location": 79, "repair_targets": [61, 68, 83], "repair_candidates": [7, 26, 146, 164, 171, 174, 184, 196, 209, 222, 235, 248, 261, 79, 321, 323, 328, 46, 63, 309, 318, 342, 370, 4, 23, 57, 126, 137, 61, 68, 83, 29, 48, 32, 74, 100, 144, 148, 287, 188, 283, 2, 18, 91, 113, 122, 162, 194, 207, 220, 233, 246, 259, 274, 350, 361, 378, 285, 300, 333]}}
{"prediction": {"error_location": 0.9997757077217102, "repair_targets": [0.9258872866630554, 0.045510485768318176, 0.010031565092504025], "repair_candidates": [0.00031218177173286676, 0.000930178735870868, 6.641863728873432e-05, 3.526128421071917e-05, 3.3212927519343793e-06, 8.319678954649135e-07, 6.499536198134592e-07, 0.00023652783420402557, 0.0024303074460476637, 0.012777760624885559, 0.00014821506920270622, 0.9258872866630554, 7.437902968376875e-05, 0.045510485768318176, 3.82099678972736e-05, 1.0474124678694352e-07, 0.010031565092504025, 0.00013327969645615667, 5.0538924369902816e-06, 1.6867928934516385e-05, 2.5945535071514314e-06, 5.583757956628688e-05, 3.2019077480072156e-05, 0.0001332137471763417, 0.0003085634089075029, 1.1424345757404808e-05, 1.1838210411951877e-06, 2.244696588604711e-06, 1.154264191427501e-05, 1.687553958618082e-05, 0.0005279227043502033, 0.00010810232197400182, 1.9249059732828755e-06, 2.467397166583396e-07, 3.277790483480203e-06, 3.8421060821747233e-07, 3.418388814679929e-06, 2.420142095616029e-07, 3.2411421670985874e-06, 5.489090995070001e-07, 1.2346356470516184e-06, 1.9030618148008216e-07, 2.132290774170542e-06, 3.293248482805211e-07, 3.525378633639775e-05, 2.7945679903496057e-07, 1.9922359570045955e-05, 1.8762334548227955e-06, 4.6342344717231754e-07, 6.747914994775783e-06, 1.5621797501808032e-05, 6.002939244353911e-06, 1.5154701941355597e-05, 2.620259692776017e-06, 5.151740651854197e-07, 2.58542922892957e-06, 5.0432709031156264e-06, 1.672388316364959e-05, 4.951215260007302e-07, 3.2405978345195763e-06], "target_probs": 0.9814293384552002}}


{"result": {"time": "2021-02-11 11:56:44.054609", "n_pass": [210, 8, 8], "n_token": 376, "loss": [0.0002882065309677273, 0.020248670130968094], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def __init__(", "self", ",", "request", ",", "*", "args", ",", "**kwargs", ")", ":", "#NEWLINE#", "#INDENT#", "super", "(", "CreateNetwork", ",", "self", ")", ".", "__init__", "(", "request", ",", "*", "args", ",", "**", "kwargs", ")", "#NEWLINE#", "tenant_choices", "=", "[", "(", "''", ",", "_", "(", "'Select a project'", ")", ")", "]", "#NEWLINE#", "(", "tenants", ",", "has_more", ")", "=", "api", ".", "keystone", ".", "tenant_list", "(", "request", ")", "#NEWLINE#", "for", "tenant", "in", "tenants", ":", "#NEWLINE#", "#INDENT#", "if", "tenant", ".", "enabled", ":", "#NEWLINE#", "#INDENT#", "tenant_choices", ".", "append", "(", "(", "net_type", ".", "id", ",", "tenant", ".", "name", ")", ")", "#NEWLINE#", "#UNINDENT#", "#UNINDENT#", "self", ".", "fields", "[", "'tenant_id'", "]", ".", "choices", "=", "tenant_choices", "#NEWLINE#", "if", "api", ".", "neutron", ".", "is_port_profiles_supported", "(", ")", ":", "#NEWLINE#", "#INDENT#", "self", ".", "fields", "[", "'net_profile_id'", "]", ".", "choices", "=", "self", ".", "get_network_profile_choices", "(", "request", ")", "#NEWLINE#", "#UNINDENT#", "if", "api", ".", "neutron", ".", "is_extension_supported", "(", "request", ",", "'provider'", ")", ":", "#NEWLINE#", "#INDENT#", "neutron_settings", "#NEWLINE#", "seg_id_range", "=", "neutron_settings", ".", "get", "(", "'segmentation_id_range'", ",", "{", "#NEWLINE#", "#INDENT#", "#NEWLINE#", "#UNINDENT#", "}", ")", "#NEWLINE#", "self", ".", "seg_id_range", "=", "{", "#NEWLINE#", "#INDENT#", "'vlan'", ":", "seg_id_range", ".", ":", "seg_id_range", ".", "get", "(", "'gre'", ",", ",", "#NEWLINE#", "'vxlan'", ":", "seg_id_range", ".", "get", "#NEWLINE#", "seg_id_help", "=", "(", "_", "(", "'For VLAN networks, the VLAN VID on the physical network that realizes the virtual network. Valid VLAN VIDs are %(vlan_min)s through %(vlan_max)s. For GRE or VXLAN networks, the tunnel ID. Valid tunnel IDs for GRE networks are %(gre_min)s through %(gre_max)s. For VXLAN networks, %(vxlan_min)s through %(vxlan_max)s.'", "self", ".", "seg_id_range", "[", "'vlan'", "]", "[", "0", "]", ",", "#NEWLINE#", "'vlan_max'", ":", "self", ".", "seg_id_range", "[", "'vlan'", "]", "[", "1", "]", ",", "#NEWLINE#", "'gre_min'", ":", "self", ".", "seg_id_range", "[", "'gre'", "]", "[", "0", "]", ",", "#NEWLINE#", "'gre_max'", ":", "self", ".", "seg_id_range", "#NEWLINE#", "'vxlan_min'", ":", "self", ".", "seg_id_range", "[", "'vxlan'", "]", "[", "0", "]", ",", "#NEWLINE#", "'vxlan_max'", ":", "self", ".", "seg_id_range", "[", "'vxlan'", "]", "[", "1", "]", ",", "#NEWLINE#", "#UNINDENT#", "}", ")", "#NEWLINE#", "self", ".", "fields", "[", "'segmentation_id'", "]", ".", "help_text", "=", "seg_id_help", "#NEWLINE#", "supported_provider_types", "=", "neutron_settings", ".", "get", "(", "'supported_provider_types'", ",", "[", "'*'", "]", ")", "#NEWLINE#", "if", "(", "supported_provider_types", "==", "[", "'*'", "]", ")", ":", "#NEWLINE#", "#INDENT#", "network_type_choices", "=", "PROVIDER_TYPES", "#NEWLINE#", "#UNINDENT#", "else", ":", "#NEWLINE#", "#INDENT#", "network_type_choices", "=", "[", "net_type", "for", "net_type", "in", "PROVIDER_TYPES", "if", "(", "net_type", "[", "0", "]", "in", "supported_provider_types", ")", "]", "#NEWLINE#", "#UNINDENT#", "if", "(", "len", "(", "network_type_choices", ")", "==", "0", ")", ":", "#NEWLINE#", "#INDENT#", "self", ".", "_hide_provider_network_type", "(", ")", "#NEWLINE#", "#UNINDENT#", "else", ":", "#NEWLINE#", "#INDENT#", "self", ".", "fields", "[", "'network_type'", "]", ".", "choices", "=", "network_type_choices", "#NEWLINE#", "#UNINDENT#", "#UNINDENT#", "else", ":", "#NEWLINE#", "#INDENT#", "self", ".", "_hide_provider_network_type", "(", ")"]}}
{"position": {"error_location": 79, "repair_targets": [61, 68, 83], "repair_candidates": [7, 26, 146, 164, 171, 174, 184, 196, 209, 222, 235, 241, 254, 79, 314, 316, 321, 46, 63, 302, 311, 335, 363, 4, 23, 57, 126, 137, 61, 68, 83, 29, 48, 32, 74, 100, 144, 148, 280, 188, 276, 2, 18, 91, 113, 122, 162, 194, 207, 220, 233, 239, 252, 267, 343, 354, 371, 278, 293, 326]}}
{"prediction": {"error_location": 0.999711811542511, "repair_targets": [0.9336702227592468, 0.037843476980924606, 0.008441251702606678], "repair_candidates": [0.0002629706577863544, 0.0011501448461785913, 7.574449409730732e-05, 3.1877050787443295e-05, 2.781828470688197e-06, 1.01754028491996e-06, 7.204027951956959e-07, 0.0003020426956936717, 0.0027582882903516293, 0.013263740576803684, 0.00020616251276805997, 0.9336702227592468, 9.794534707907587e-05, 0.037843476980924606, 4.819404421141371e-05, 2.7582368034018145e-07, 0.008441251702606678, 0.00021991411631461233, 5.857914402440656e-06, 1.182805499411188e-05, 2.7145229068992194e-06, 6.776096415705979e-05, 4.053398879477754e-05, 0.00011951666965615004, 0.00032647905754856765, 1.5820971384528093e-05, 1.5225089100567857e-06, 2.6675209028326208e-06, 1.5955749404383823e-05, 1.2046087249473203e-05, 0.000806448282673955, 7.769795774947852e-05, 4.9485811359772924e-06, 3.9164558529591886e-07, 4.834303126699524e-06, 5.760832095802471e-07, 4.859258751821471e-06, 3.659768879060721e-07, 1.4525327060255222e-05, 1.4558963812305592e-06, 3.3277717648161342e-06, 6.864128181405249e-07, 3.55580141331302e-06, 4.257845489519241e-07, 1.3270494036987657e-06, 3.537257953212247e-07, 1.2228016203152947e-05, 2.679421413631644e-07, 4.183604232821381e-06, 8.30712087918073e-06, 1.703226735116914e-05, 1.5083630842127604e-06, 1.6108597264974378e-05, 7.91250386100728e-06, 7.684409411012894e-07, 3.49622268913663e-06, 2.2356081785801507e-07, 1.6248515066763503e-06, 9.679150707597728e-07, 2.607153533062956e-07], "target_probs": 0.9799549579620361}}


{"result": {"time": "2021-02-11 11:56:44.155514", "n_pass": [212, 9, 9], "n_token": 369, "loss": [0.0003194298769813031, 0.02039690874516964], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def __init__(", "self", ",", "request", ",", "*", "args", ",", "**kwargs", ")", ":", "#NEWLINE#", "#INDENT#", "super", "(", "CreateNetwork", ",", "self", ")", ".", "__init__", "(", "request", ",", "*", "args", ",", "**", "kwargs", ")", "#NEWLINE#", "tenant_choices", "=", "[", "(", "''", ",", "_", "(", "'Select a project'", ")", ")", "]", "#NEWLINE#", "(", "tenants", ",", "has_more", ")", "=", "api", ".", "keystone", ".", "tenant_list", "(", "request", ")", "#NEWLINE#", "for", "tenant", "in", "tenants", ":", "#NEWLINE#", "#INDENT#", "if", "tenant", ".", "enabled", ":", "#NEWLINE#", "#INDENT#", "tenant_choices", ".", "append", "(", "(", "net_type", ".", "id", ",", "tenant", ".", "name", ")", ")", "#NEWLINE#", "#UNINDENT#", "#UNINDENT#", "self", ".", "fields", "[", "'tenant_id'", "]", ".", "choices", "=", "tenant_choices", "#NEWLINE#", "if", "api", ".", "neutron", ".", "is_port_profiles_supported", "(", ")", ":", "#NEWLINE#", "#INDENT#", "self", ".", "fields", "[", "'net_profile_id'", "]", ".", "choices", "=", "self", ".", "get_network_profile_choices", "(", "request", ")", "#NEWLINE#", "#UNINDENT#", "if", "api", ".", "neutron", ".", "is_extension_supported", "(", "request", ",", "'provider'", ")", ":", "#NEWLINE#", "#INDENT#", "neutron_settings", "#NEWLINE#", "seg_id_range", "=", "neutron_settings", ".", "get", "(", "'segmentation_id_range'", ",", "{", "#NEWLINE#", "#INDENT#", "#NEWLINE#", "#UNINDENT#", "}", ")", "#NEWLINE#", "self", ".", "seg_id_range", "=", "{", "#NEWLINE#", "#INDENT#", "'vlan'", ":", "seg_id_range", ".", ":", "seg_id_range", ".", "get", "(", "'gre'", ",", ",", "#NEWLINE#", "'vxlan'", ":", "seg_id_range", ".", "get", "#NEWLINE#", "seg_id_help", "=", "(", "_", "(", "'For VLAN networks, the VLAN VID on the physical network that realizes the virtual network. Valid VLAN VIDs are %(vlan_min)s through %(vlan_max)s. For GRE or VXLAN networks, the tunnel ID. Valid tunnel IDs for GRE networks are %(gre_min)s through %(gre_max)s. For VXLAN networks, %(vxlan_min)s through %(vxlan_max)s.'", "self", ".", "seg_id_range", "[", "'vlan'", "]", "[", "0", "]", ",", "#NEWLINE#", "'vlan_max'", ":", "self", ".", "seg_id_range", "[", "'vlan'", "]", "[", "1", "]", ",", "#NEWLINE#", "'gre_min'", ":", "self", ".", "seg_id_range", "[", "'gre'", "]", "[", "0", "]", ",", "#NEWLINE#", "'gre_max'", ":", "self", ".", "seg_id_range", "#NEWLINE#", "'vxlan_min'", ":", "self", ".", "seg_id_range", "[", "'vxlan_max'", ":", "self", ".", "seg_id_range", "[", "'vxlan'", "]", "[", "1", "]", ",", "#NEWLINE#", "#UNINDENT#", "}", ")", "#NEWLINE#", "self", ".", "fields", "[", "'segmentation_id'", "]", ".", "help_text", "=", "seg_id_help", "#NEWLINE#", "supported_provider_types", "=", "neutron_settings", ".", "get", "(", "'supported_provider_types'", ",", "[", "'*'", "]", ")", "#NEWLINE#", "if", "(", "supported_provider_types", "==", "[", "'*'", "]", ")", ":", "#NEWLINE#", "#INDENT#", "network_type_choices", "=", "PROVIDER_TYPES", "#NEWLINE#", "#UNINDENT#", "else", ":", "#NEWLINE#", "#INDENT#", "network_type_choices", "=", "[", "net_type", "for", "net_type", "in", "PROVIDER_TYPES", "if", "(", "net_type", "[", "0", "]", "in", "supported_provider_types", ")", "]", "#NEWLINE#", "#UNINDENT#", "if", "(", "len", "(", "network_type_choices", ")", "==", "0", ")", ":", "#NEWLINE#", "#INDENT#", "self", ".", "_hide_provider_network_type", "(", ")", "#NEWLINE#", "#UNINDENT#", "else", ":", "#NEWLINE#", "#INDENT#", "self", ".", "fields", "[", "'network_type'", "]", ".", "choices", "=", "network_type_choices", "#NEWLINE#", "#UNINDENT#", "#UNINDENT#", "else", ":", "#NEWLINE#", "#INDENT#", "self", ".", "_hide_provider_network_type", "(", ")"]}}
{"position": {"error_location": 79, "repair_targets": [61, 68, 83], "repair_candidates": [7, 26, 146, 164, 171, 174, 184, 196, 209, 222, 235, 241, 247, 79, 307, 309, 314, 46, 63, 295, 304, 328, 356, 4, 23, 57, 126, 137, 61, 68, 83, 29, 48, 32, 74, 100, 144, 148, 273, 188, 269, 2, 18, 91, 113, 122, 162, 194, 207, 220, 233, 239, 245, 260, 336, 347, 364, 271, 286, 319]}}
{"prediction": {"error_location": 0.9996806383132935, "repair_targets": [0.9305753111839294, 0.04115601256489754, 0.008078384213149548], "repair_candidates": [0.00023174202942755073, 0.0009171458659693599, 6.709089211653918e-05, 3.155698504997417e-05, 2.0739307728945278e-06, 8.035719361032534e-07, 5.543506631511264e-07, 0.00023198546841740608, 0.002761825919151306, 0.01419492345303297, 0.00014270527753978968, 0.9305753111839294, 5.880515891476534e-05, 0.04115601256489754, 3.444974572630599e-05, 1.9112624727313232e-07, 0.008078384213149548, 0.00019245242583565414, 3.0904959658073494e-06, 9.977708032238297e-06, 1.9954159142798744e-06, 4.7931975132087246e-05, 2.779465648927726e-05, 0.00011801181244663894, 0.000385748571716249, 1.543224607303273e-05, 1.0803149734783801e-06, 2.92919162347971e-06, 1.9950441128457896e-05, 1.7836160623119213e-05, 0.00044675657409243286, 0.00011227277718717232, 2.4569915240135742e-06, 4.800988335773582e-07, 3.062780479012872e-06, 6.79009644954931e-07, 2.6334719223086722e-06, 3.438875353367621e-07, 7.164064300013706e-06, 2.0725783542729914e-06, 2.265559942316031e-06, 1.2731262586385128e-06, 1.018620423565153e-06, 6.018170779498178e-07, 2.8325345624580223e-07, 1.6871588286448969e-06, 1.897653601190541e-05, 6.654663025074115e-07, 1.1298097888357006e-05, 1.2161302038293798e-05, 1.967187927220948e-05, 3.3633236284913437e-07, 4.198462647764245e-06, 3.92038327845512e-06, 1.464451202082273e-06, 9.603542821423616e-06, 3.618112316416955e-07, 4.920204901281977e-07, 1.56543296725431e-06, 3.904128789145034e-07], "target_probs": 0.9798097014427185}}


{"result": {"time": "2021-02-11 11:56:44.256543", "n_pass": [214, 10, 10], "n_token": 362, "loss": [0.0002646096108946949, 0.019476566463708878], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def __init__(", "self", ",", "request", ",", "*", "args", ",", "**kwargs", ")", ":", "#NEWLINE#", "#INDENT#", "super", "(", "CreateNetwork", ",", "self", ")", ".", "__init__", "(", "request", ",", "*", "args", ",", "**", "kwargs", ")", "#NEWLINE#", "tenant_choices", "=", "[", "(", "''", ",", "_", "(", "'Select a project'", ")", ")", "]", "#NEWLINE#", "(", "tenants", ",", "has_more", ")", "=", "api", ".", "keystone", ".", "tenant_list", "(", "request", ")", "#NEWLINE#", "for", "tenant", "in", "tenants", ":", "#NEWLINE#", "#INDENT#", "if", "tenant", ".", "enabled", ":", "#NEWLINE#", "#INDENT#", "tenant_choices", ".", "append", "(", "(", "net_type", ".", "id", ",", "tenant", ".", "name", ")", ")", "#NEWLINE#", "#UNINDENT#", "#UNINDENT#", "self", ".", "fields", "[", "'tenant_id'", "]", ".", "choices", "=", "tenant_choices", "#NEWLINE#", "if", "api", ".", "neutron", ".", "is_port_profiles_supported", "(", ")", ":", "#NEWLINE#", "#INDENT#", "self", ".", "fields", "[", "'net_profile_id'", "]", ".", "choices", "=", "self", ".", "get_network_profile_choices", "(", "request", ")", "#NEWLINE#", "#UNINDENT#", "if", "api", ".", "neutron", ".", "is_extension_supported", "(", "request", ",", "'provider'", ")", ":", "#NEWLINE#", "#INDENT#", "neutron_settings", "#NEWLINE#", "seg_id_range", "=", "neutron_settings", ".", "get", "(", "'segmentation_id_range'", ",", "{", "#NEWLINE#", "#INDENT#", "#NEWLINE#", "#UNINDENT#", "}", ")", "#NEWLINE#", "self", ".", "seg_id_range", "=", "{", "#NEWLINE#", "#INDENT#", "'vlan'", ":", "seg_id_range", ".", ":", "seg_id_range", ".", "get", "(", "'gre'", ",", ",", "#NEWLINE#", "'vxlan'", ":", "seg_id_range", ".", "get", "#NEWLINE#", "seg_id_help", "=", "(", "_", "(", "'For VLAN networks, the VLAN VID on the physical network that realizes the virtual network. Valid VLAN VIDs are %(vlan_min)s through %(vlan_max)s. For GRE or VXLAN networks, the tunnel ID. Valid tunnel IDs for GRE networks are %(gre_min)s through %(gre_max)s. For VXLAN networks, %(vxlan_min)s through %(vxlan_max)s.'", "self", ".", "seg_id_range", "[", "'vlan'", "]", "[", "0", "]", ",", "#NEWLINE#", "'vlan_max'", ":", "self", ".", "seg_id_range", "[", "'vlan'", "]", "[", "1", "]", ",", "#NEWLINE#", "'gre_min'", ":", "self", ".", "seg_id_range", "[", "'gre'", "]", "[", "0", "]", ",", "#NEWLINE#", "'gre_max'", ":", "self", ".", "seg_id_range", "#NEWLINE#", "'vxlan_min'", ":", "self", ".", "seg_id_range", "[", "'vxlan_max'", ":", "self", ".", "seg_id_range", "[", "'vxlan'", "}", ")", "#NEWLINE#", "self", ".", "fields", "[", "'segmentation_id'", "]", ".", "help_text", "=", "seg_id_help", "#NEWLINE#", "supported_provider_types", "=", "neutron_settings", ".", "get", "(", "'supported_provider_types'", ",", "[", "'*'", "]", ")", "#NEWLINE#", "if", "(", "supported_provider_types", "==", "[", "'*'", "]", ")", ":", "#NEWLINE#", "#INDENT#", "network_type_choices", "=", "PROVIDER_TYPES", "#NEWLINE#", "#UNINDENT#", "else", ":", "#NEWLINE#", "#INDENT#", "network_type_choices", "=", "[", "net_type", "for", "net_type", "in", "PROVIDER_TYPES", "if", "(", "net_type", "[", "0", "]", "in", "supported_provider_types", ")", "]", "#NEWLINE#", "#UNINDENT#", "if", "(", "len", "(", "network_type_choices", ")", "==", "0", ")", ":", "#NEWLINE#", "#INDENT#", "self", ".", "_hide_provider_network_type", "(", ")", "#NEWLINE#", "#UNINDENT#", "else", ":", "#NEWLINE#", "#INDENT#", "self", ".", "fields", "[", "'network_type'", "]", ".", "choices", "=", "network_type_choices", "#NEWLINE#", "#UNINDENT#", "#UNINDENT#", "else", ":", "#NEWLINE#", "#INDENT#", "self", ".", "_hide_provider_network_type", "(", ")"]}}
{"position": {"error_location": 79, "repair_targets": [61, 68, 83], "repair_candidates": [7, 26, 146, 164, 171, 174, 184, 196, 209, 222, 235, 241, 247, 79, 300, 302, 307, 46, 63, 288, 297, 321, 349, 4, 23, 57, 126, 137, 61, 68, 83, 29, 48, 32, 74, 100, 144, 148, 266, 188, 262, 2, 18, 91, 113, 122, 162, 194, 207, 220, 233, 239, 245, 253, 329, 340, 357, 264, 279, 312]}}
{"prediction": {"error_location": 0.999735414981842, "repair_targets": [0.9314971566200256, 0.04042942821979523, 0.008785289712250233], "repair_candidates": [0.0003147570532746613, 0.0009645381942391396, 7.621967961313203e-05, 4.658647230826318e-05, 2.3865341063356027e-06, 8.136066753650084e-07, 4.894769176644331e-07, 0.0002713522990234196, 0.00271150772459805, 0.012868089601397514, 0.00017446125275455415, 0.9314971566200256, 6.834093073848635e-05, 0.04042942821979523, 4.546023046714254e-05, 1.1698568869178416e-07, 0.008785289712250233, 0.00023440692166332155, 4.008147243439453e-06, 2.0739384126500227e-05, 2.682303374967887e-06, 4.8965906898956746e-05, 3.361659764777869e-05, 0.00015225041715893894, 0.00041210337076336145, 1.4472459952230565e-05, 1.0594595778457006e-06, 2.4722837679291843e-06, 2.227599179605022e-05, 2.1485488105099648e-05, 0.0005291660199873149, 0.00016098233754746616, 2.530598749217461e-06, 2.5543809556438646e-07, 3.0434389373112936e-06, 4.2226267282785557e-07, 2.7817452519229846e-06, 2.1869668387353158e-07, 9.497563951299526e-06, 1.1992868849119986e-06, 2.651778913786984e-06, 6.657197104686929e-07, 1.1643323887255974e-06, 2.6818386800187e-07, 1.4850129446131177e-06, 1.586201960890321e-06, 1.6909454643609934e-05, 2.4515104541933397e-06, 1.2872299066657433e-06, 5.358059297577711e-06, 1.5170016922638752e-05, 3.839739974864642e-07, 3.994082362623885e-06, 1.7495558495284058e-06, 3.222752411602414e-07, 5.160708496987354e-06, 2.471577715823514e-07, 1.2309475323490915e-06, 2.5094749389609206e-07, 2.0325681759914005e-07], "target_probs": 0.9807118773460388}}


{"result": {"time": "2021-02-11 11:56:44.359640", "n_pass": [218, 11, 11], "n_token": 355, "loss": [0.00018559163436293602, 0.018709490075707436], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def __init__(", "self", ",", "request", ",", "*", "args", ",", "**kwargs", ")", ":", "#NEWLINE#", "#INDENT#", "super", "(", "CreateNetwork", ",", "self", ")", ".", "__init__", "(", "request", ",", "*", "args", ",", "**", "kwargs", ")", "#NEWLINE#", "tenant_choices", "=", "[", "(", "''", ",", "_", "(", "'Select a project'", ")", ")", "]", "#NEWLINE#", "(", "tenants", ",", "has_more", ")", "=", "api", ".", "keystone", ".", "tenant_list", "(", "request", ")", "#NEWLINE#", "for", "tenant", "in", "tenants", ":", "#NEWLINE#", "#INDENT#", "if", "tenant", ".", "enabled", ":", "#NEWLINE#", "#INDENT#", "tenant_choices", ".", "append", "(", "(", "net_type", ".", "id", ",", "tenant", ".", "name", ")", ")", "#NEWLINE#", "#UNINDENT#", "#UNINDENT#", "self", ".", "fields", "[", "'tenant_id'", "]", ".", "choices", "=", "tenant_choices", "#NEWLINE#", "if", "api", ".", "neutron", ".", "is_port_profiles_supported", "(", ")", ":", "#NEWLINE#", "#INDENT#", "self", ".", "fields", "[", "'net_profile_id'", "]", ".", "choices", "=", "self", ".", "get_network_profile_choices", "(", "request", ")", "#NEWLINE#", "#UNINDENT#", "if", "api", ".", "neutron", ".", "is_extension_supported", "(", "request", ",", "'provider'", ")", ":", "#NEWLINE#", "#INDENT#", "neutron_settings", "#NEWLINE#", "seg_id_range", "=", "neutron_settings", ".", "get", "(", "'segmentation_id_range'", ",", "{", "#NEWLINE#", "#INDENT#", "#NEWLINE#", "#UNINDENT#", "}", ")", "#NEWLINE#", "self", ".", "seg_id_range", "=", "{", "#NEWLINE#", "#INDENT#", "'vlan'", ":", "seg_id_range", ".", ":", "seg_id_range", ".", "get", "(", "'gre'", ",", ",", "#NEWLINE#", "'vxlan'", ":", "seg_id_range", ".", "get", "#NEWLINE#", "seg_id_help", "=", "(", "_", "(", "'For VLAN networks, the VLAN VID on the physical network that realizes the virtual network. Valid VLAN VIDs are %(vlan_min)s through %(vlan_max)s. For GRE or VXLAN networks, the tunnel ID. Valid tunnel IDs for GRE networks are %(gre_min)s through %(gre_max)s. For VXLAN networks, %(vxlan_min)s through %(vxlan_max)s.'", "self", ".", "seg_id_range", "[", "'vlan'", "]", "[", "0", "]", ",", "#NEWLINE#", "'vlan_max'", ":", "self", ".", "seg_id_range", "[", "'vlan'", "]", "[", "1", "]", ",", "#NEWLINE#", "'gre_min'", ":", "self", ".", "seg_id_range", "[", "'gre'", "]", "[", "0", "]", ",", "#NEWLINE#", "'gre_max'", ":", "self", ".", "seg_id_range", "#NEWLINE#", "'vxlan_min'", ":", "self", ".", "seg_id_range", "[", "'vxlan_max'", ":", "self", ".", "seg_id_range", "[", "'vxlan'", "}", ")", "#NEWLINE#", "self", ".", "fields", "[", "'segmentation_id'", "]", ".", "help_text", "=", "seg_id_help", "#NEWLINE#", "supported_provider_types", "=", "neutron_settings", ".", "get", "(", "'supported_provider_types'", "(", "supported_provider_types", "==", "[", "'*'", "]", ")", ":", "#NEWLINE#", "#INDENT#", "network_type_choices", "=", "PROVIDER_TYPES", "#NEWLINE#", "#UNINDENT#", "else", ":", "#NEWLINE#", "#INDENT#", "network_type_choices", "=", "[", "net_type", "for", "net_type", "in", "PROVIDER_TYPES", "if", "(", "net_type", "[", "0", "]", "in", "supported_provider_types", ")", "]", "#NEWLINE#", "#UNINDENT#", "if", "(", "len", "(", "network_type_choices", ")", "==", "0", ")", ":", "#NEWLINE#", "#INDENT#", "self", ".", "_hide_provider_network_type", "(", ")", "#NEWLINE#", "#UNINDENT#", "else", ":", "#NEWLINE#", "#INDENT#", "self", ".", "fields", "[", "'network_type'", "]", ".", "choices", "=", "network_type_choices", "#NEWLINE#", "#UNINDENT#", "#UNINDENT#", "else", ":", "#NEWLINE#", "#INDENT#", "self", ".", "_hide_provider_network_type", "(", ")"]}}
{"position": {"error_location": 79, "repair_targets": [61, 68, 83], "repair_candidates": [7, 26, 146, 164, 171, 174, 184, 196, 209, 222, 235, 241, 247, 79, 293, 295, 300, 46, 63, 281, 290, 314, 342, 4, 23, 57, 126, 137, 61, 68, 83, 29, 48, 32, 74, 100, 144, 148, 266, 188, 262, 2, 18, 91, 113, 122, 162, 194, 207, 220, 233, 239, 245, 253, 322, 333, 350, 264, 272, 305]}}
{"prediction": {"error_location": 0.9998143315315247, "repair_targets": [0.9317713379859924, 0.04224613681435585, 0.0074469903483986855], "repair_candidates": [0.0002917935489676893, 0.0010675644734874368, 7.458151958417147e-05, 4.5936551032355055e-05, 2.3381292066915194e-06, 7.20917739727156e-07, 5.102389195599244e-07, 0.00027795167989097536, 0.002544916933402419, 0.012592698447406292, 0.00018336389621254057, 0.9317713379859924, 6.597456376766786e-05, 0.04224613681435585, 4.8642788897268474e-05, 8.464287759579747e-08, 0.0074469903483986855, 0.00019207301374990493, 4.895587153441738e-06, 1.6547304767300375e-05, 2.4783237222436583e-06, 4.977490971214138e-05, 3.25282926496584e-05, 0.00014648826618213207, 0.00029406475368887186, 1.3090193533571437e-05, 1.068251435754064e-06, 2.136776856787037e-06, 9.200584827340208e-06, 1.068443543772446e-05, 0.0003698786022141576, 0.00011373287998139858, 2.4266391847049817e-06, 3.0692845598423446e-07, 2.952325530714006e-06, 4.393411359160382e-07, 3.284019157945295e-06, 2.5391153712917003e-07, 1.1883855222549755e-05, 1.0838886055353214e-06, 2.8879505862278165e-06, 7.013832714619639e-07, 1.417134512848861e-06, 2.794151328089356e-07, 2.525274567233282e-06, 7.242833817144856e-07, 1.259263081010431e-05, 2.798000650727772e-06, 1.5474929568881635e-06, 4.844522209168645e-06, 8.143597369780764e-06, 6.762520570191555e-07, 1.0504241799935699e-05, 3.7503566545638023e-06, 3.109823580871307e-07, 2.222523562522838e-06, 2.1121373094956652e-07, 8.375322408937791e-07, 8.633634962507131e-08, 1.781847487336563e-07], "target_probs": 0.9814644455909729}}


{"result": {"time": "2021-02-11 11:56:44.462346", "n_pass": [224, 12, 12], "n_token": 348, "loss": [0.0002616301644593477, 0.01953704096376896], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def __init__(", "self", ",", "request", ",", "*", "args", ",", "**kwargs", ")", ":", "#NEWLINE#", "#INDENT#", "super", "(", "CreateNetwork", ",", "self", ")", ".", "__init__", "(", "request", ",", "*", "args", ",", "**", "kwargs", ")", "#NEWLINE#", "tenant_choices", "=", "[", "(", "''", ",", "_", "(", "'Select a project'", ")", ")", "]", "#NEWLINE#", "(", "tenants", ",", "has_more", ")", "=", "api", ".", "keystone", ".", "tenant_list", "(", "request", ")", "#NEWLINE#", "for", "tenant", "in", "tenants", ":", "#NEWLINE#", "#INDENT#", "if", "tenant", ".", "enabled", ":", "#NEWLINE#", "#INDENT#", "tenant_choices", ".", "append", "(", "(", "net_type", ".", "id", ",", "tenant", ".", "name", ")", ")", "#NEWLINE#", "#UNINDENT#", "#UNINDENT#", "self", ".", "fields", "[", "'tenant_id'", "]", ".", "choices", "=", "tenant_choices", "#NEWLINE#", "if", "api", ".", "neutron", ".", "is_port_profiles_supported", "(", ")", ":", "#NEWLINE#", "#INDENT#", "self", ".", "fields", "[", "'net_profile_id'", "]", ".", "choices", "=", "self", ".", "get_network_profile_choices", "(", "request", ")", "#NEWLINE#", "#UNINDENT#", "if", "api", ".", "neutron", ".", "is_extension_supported", "(", "request", ",", "'provider'", ")", ":", "#NEWLINE#", "#INDENT#", "neutron_settings", "#NEWLINE#", "seg_id_range", "=", "neutron_settings", ".", "get", "(", "'segmentation_id_range'", ",", "{", "#NEWLINE#", "#INDENT#", "#NEWLINE#", "#UNINDENT#", "}", ")", "#NEWLINE#", "self", ".", "seg_id_range", "=", "{", "#NEWLINE#", "#INDENT#", "'vlan'", ":", "seg_id_range", ".", ":", "seg_id_range", ".", "get", "(", "'gre'", ",", ",", "#NEWLINE#", "'vxlan'", ":", "seg_id_range", ".", "get", "#NEWLINE#", "seg_id_help", "=", "(", "_", "(", "'For VLAN networks, the VLAN VID on the physical network that realizes the virtual network. Valid VLAN VIDs are %(vlan_min)s through %(vlan_max)s. For GRE or VXLAN networks, the tunnel ID. Valid tunnel IDs for GRE networks are %(gre_min)s through %(gre_max)s. For VXLAN networks, %(vxlan_min)s through %(vxlan_max)s.'", "self", ".", "seg_id_range", "[", "'vlan'", "]", "[", "0", "]", ",", "#NEWLINE#", "'vlan_max'", ":", "self", ".", "seg_id_range", "[", "'vlan'", "]", "[", "1", "]", ",", "#NEWLINE#", "'gre_min'", ":", "self", ".", "seg_id_range", "[", "'gre'", "]", "[", "0", "]", ",", "#NEWLINE#", "'gre_max'", ":", "self", ".", "seg_id_range", "#NEWLINE#", "'vxlan_min'", ":", "self", ".", "seg_id_range", "[", "'vxlan_max'", ":", "self", ".", "seg_id_range", "[", "'vxlan'", "}", ")", "#NEWLINE#", "self", ".", "fields", "[", "'segmentation_id'", "]", ".", "help_text", "=", "seg_id_help", "#NEWLINE#", "supported_provider_types", "=", "neutron_settings", ".", "get", "(", "'supported_provider_types'", "(", "supported_provider_types", "==", "[", "'*'", "]", ")", ":", "#NEWLINE#", "#INDENT#", "network_type_choices", "=", "PROVIDER_TYPES", "#NEWLINE#", "#UNINDENT#", "else", ":", "#NEWLINE#", "#INDENT#", "network_type_choices", "=", "[", "net_type", "for", "net_type", "in", "PROVIDER_TYPES", "if", "(", "net_type", "[", "0", "]", "in", "supported_provider_types", "(", "network_type_choices", ")", "==", "0", ")", ":", "#NEWLINE#", "#INDENT#", "self", ".", "_hide_provider_network_type", "(", ")", "#NEWLINE#", "#UNINDENT#", "else", ":", "#NEWLINE#", "#INDENT#", "self", ".", "fields", "[", "'network_type'", "]", ".", "choices", "=", "network_type_choices", "#NEWLINE#", "#UNINDENT#", "#UNINDENT#", "else", ":", "#NEWLINE#", "#INDENT#", "self", ".", "_hide_provider_network_type", "(", ")"]}}
{"position": {"error_location": 79, "repair_targets": [61, 68, 83], "repair_candidates": [7, 26, 146, 164, 171, 174, 184, 196, 209, 222, 235, 241, 247, 79, 293, 295, 300, 46, 63, 281, 290, 307, 335, 4, 23, 57, 126, 137, 61, 68, 83, 29, 48, 32, 74, 100, 144, 148, 266, 188, 262, 2, 18, 91, 113, 122, 162, 194, 207, 220, 233, 239, 245, 253, 315, 326, 343, 264, 272, 305]}}
{"prediction": {"error_location": 0.9997385144233704, "repair_targets": [0.9215796589851379, 0.05025489255785942, 0.008818035945296288], "repair_candidates": [0.00029810977866873145, 0.001043350319378078, 6.830164784332737e-05, 5.614269684883766e-05, 2.997189540110412e-06, 7.40026337098243e-07, 5.699642429135565e-07, 0.0003027081838808954, 0.002744769910350442, 0.012802677229046822, 0.0002052645431831479, 0.9215796589851379, 7.809828093741089e-05, 0.05025489255785942, 5.6071636208798736e-05, 1.370521687249493e-07, 0.008818035945296288, 0.0002869363524951041, 6.88835461915005e-06, 1.7373546143062413e-05, 4.537060249276692e-06, 6.005233444739133e-05, 3.574014772311784e-05, 0.00015230473945848644, 0.0002948567853309214, 1.701400105957873e-05, 1.486010546614125e-06, 3.223322664780426e-06, 1.1205871487618424e-05, 1.0293436389474664e-05, 0.0005610151565633714, 0.00011413996980991215, 3.38192330673337e-06, 4.364960659586359e-07, 4.029441697639413e-06, 5.98705526044796e-07, 4.680242454924155e-06, 3.4804781989805633e-07, 1.7652779206400737e-05, 1.1729028983609169e-06, 4.1670868995424826e-06, 1.0187353609580896e-06, 2.1770920284325257e-06, 3.9834753806644585e-07, 4.386892669572262e-06, 4.948384457748034e-07, 1.2188394975964911e-05, 3.7350105230871122e-06, 9.942447150024236e-07, 5.445178430818487e-06, 8.561249160266016e-06, 7.687009997425776e-07, 2.4001092242542654e-05, 7.707875738560688e-06, 5.9063069102194277e-08, 1.7550432573898433e-07, 6.179797651384433e-07, 6.699603432025469e-07, 1.3934989340214088e-07, 3.2417656825600716e-07], "target_probs": 0.9806525707244873}}


{"result": {"time": "2021-02-11 11:56:44.563382", "n_pass": [228, 13, 13], "n_token": 341, "loss": [0.0003833036171272397, 0.022255009040236473], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def __init__(", "self", ",", "request", ",", "*", "args", ",", "**kwargs", ")", ":", "#NEWLINE#", "#INDENT#", "super", "(", "CreateNetwork", ",", "self", ")", ".", "__init__", "(", "request", ",", "*", "args", ",", "**", "kwargs", ")", "#NEWLINE#", "tenant_choices", "=", "[", "(", "''", ",", "_", "(", "'Select a project'", ")", ")", "]", "#NEWLINE#", "(", "tenants", ",", "has_more", ")", "=", "api", ".", "keystone", ".", "tenant_list", "(", "request", ")", "#NEWLINE#", "for", "tenant", "in", "tenants", ":", "#NEWLINE#", "#INDENT#", "if", "tenant", ".", "enabled", ":", "#NEWLINE#", "#INDENT#", "tenant_choices", ".", "append", "(", "(", "net_type", ".", "id", ",", "tenant", ".", "name", ")", ")", "#NEWLINE#", "#UNINDENT#", "#UNINDENT#", "self", ".", "fields", "[", "'tenant_id'", "]", ".", "choices", "=", "tenant_choices", "#NEWLINE#", "if", "api", ".", "neutron", ".", "is_port_profiles_supported", "(", ")", ":", "#NEWLINE#", "#INDENT#", "self", ".", "fields", "[", "'net_profile_id'", "]", ".", "choices", "=", "self", ".", "get_network_profile_choices", "(", "request", ")", "#NEWLINE#", "#UNINDENT#", "if", "api", ".", "neutron", ".", "is_extension_supported", "(", "request", ",", "'provider'", ")", ":", "#NEWLINE#", "#INDENT#", "neutron_settings", "#NEWLINE#", "seg_id_range", "=", "neutron_settings", ".", "get", "(", "'segmentation_id_range'", ",", "{", "#NEWLINE#", "#INDENT#", "#NEWLINE#", "#UNINDENT#", "}", ")", "#NEWLINE#", "self", ".", "seg_id_range", "=", "{", "#NEWLINE#", "#INDENT#", "'vlan'", ":", "seg_id_range", ".", ":", "seg_id_range", ".", "get", "(", "'gre'", ",", ",", "#NEWLINE#", "'vxlan'", ":", "seg_id_range", ".", "get", "#NEWLINE#", "seg_id_help", "=", "(", "_", "(", "'For VLAN networks, the VLAN VID on the physical network that realizes the virtual network. Valid VLAN VIDs are %(vlan_min)s through %(vlan_max)s. For GRE or VXLAN networks, the tunnel ID. Valid tunnel IDs for GRE networks are %(gre_min)s through %(gre_max)s. For VXLAN networks, %(vxlan_min)s through %(vxlan_max)s.'", "self", ".", "seg_id_range", "[", "'vlan'", "]", "[", "0", "]", ",", "#NEWLINE#", "'vlan_max'", ":", "self", ".", "seg_id_range", "[", "'vlan'", "]", "[", "1", "]", ",", "#NEWLINE#", "'gre_min'", ":", "self", ".", "seg_id_range", "[", "'gre'", "]", "[", "0", "]", ",", "#NEWLINE#", "'gre_max'", ":", "self", ".", "seg_id_range", "#NEWLINE#", "'vxlan_min'", ":", "self", ".", "seg_id_range", "[", "'vxlan_max'", ":", "self", ".", "seg_id_range", "[", "'vxlan'", "}", ")", "#NEWLINE#", "self", ".", "fields", "[", "'segmentation_id'", "]", ".", "help_text", "=", "seg_id_help", "#NEWLINE#", "supported_provider_types", "=", "neutron_settings", ".", "get", "(", "'supported_provider_types'", "(", "supported_provider_types", "==", "[", "'*'", "]", ")", ":", "#NEWLINE#", "#INDENT#", "network_type_choices", "=", "PROVIDER_TYPES", "#NEWLINE#", "#UNINDENT#", "else", ":", "#NEWLINE#", "#INDENT#", "network_type_choices", "=", "[", "net_type", "for", "net_type", "in", "PROVIDER_TYPES", "if", "(", "net_type", "[", "0", "]", "in", "supported_provider_types", "(", "network_type_choices", ")", "==", "0", ")", ":", "#NEWLINE#", "#INDENT#", "self", ".", "_hide_provider_network_type", "(", ")", "#NEWLINE#", "#UNINDENT#", "else", ":", "#NEWLINE#", "#INDENT#", "self", "=", "network_type_choices", "#NEWLINE#", "#UNINDENT#", "#UNINDENT#", "else", ":", "#NEWLINE#", "#INDENT#", "self", ".", "_hide_provider_network_type", "(", ")"]}}
{"position": {"error_location": 79, "repair_targets": [61, 68, 83], "repair_candidates": [7, 26, 146, 164, 171, 174, 184, 196, 209, 222, 235, 241, 247, 79, 293, 295, 300, 46, 63, 281, 290, 307, 328, 4, 23, 57, 126, 137, 61, 68, 83, 29, 48, 32, 74, 100, 144, 148, 266, 188, 262, 2, 18, 91, 113, 122, 162, 194, 207, 220, 233, 239, 245, 253, 315, 326, 336, 264, 272, 305]}}
{"prediction": {"error_location": 0.9996167421340942, "repair_targets": [0.9132906198501587, 0.05553184449672699, 0.009168335236608982], "repair_candidates": [0.00031975601450540125, 0.0010366282658651471, 7.485518290195614e-05, 6.776695227017626e-05, 3.6829339933319716e-06, 1.1833134294647607e-06, 8.464004963570915e-07, 0.00029289440135471523, 0.0028275090735405684, 0.013383008539676666, 0.00022576043556910008, 0.9132906198501587, 8.530641935067251e-05, 0.05553184449672699, 6.944628694327548e-05, 2.611557476939197e-07, 0.009168335236608982, 0.0004997436772100627, 6.921978183527244e-06, 2.7287811462883838e-05, 5.691914793715114e-06, 6.95267299306579e-05, 3.692142490763217e-05, 0.0002561298606451601, 0.0004364300984889269, 3.116371590294875e-05, 2.9895247735112207e-06, 7.829706191841979e-06, 2.4927168851718307e-05, 5.558071643463336e-05, 0.001636235392652452, 0.0001663072471274063, 2.4792696422082372e-05, 1.334590479018516e-06, 4.6382196160266176e-05, 1.7123753650594153e-06, 1.6590402083238587e-05, 9.824365179156302e-07, 6.300823588389903e-05, 3.280978262409917e-06, 1.807104126783088e-05, 2.8627052870433545e-06, 1.496721051807981e-05, 1.2683107115663006e-06, 4.119995992368786e-06, 8.203368224712904e-07, 1.836784213082865e-05, 1.1151991202495992e-05, 2.9818681923643453e-06, 8.074804100033361e-06, 1.5934958355501294e-05, 2.810890464388649e-06, 5.7029377785511315e-05, 2.5853818442556076e-05, 1.4812823678767018e-07, 1.4684695770483813e-06, 4.6698653477506014e-07, 1.0636210390657652e-05, 1.0721046237449627e-06, 4.6339488335434e-07], "target_probs": 0.9779908061027527}}


{"result": {"time": "2021-02-11 11:56:44.663644", "n_pass": [233, 14, 14], "n_token": 335, "loss": [0.0006629414856433868, 0.07935815304517746], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def __init__(", "self", ",", "request", ",", "*", "args", ",", "**kwargs", ")", ":", "self", ")", ".", "__init__", "(", "request", ",", "*", "args", ",", "**", "kwargs", ")", "#NEWLINE#", "tenant_choices", "=", "[", "(", "''", ",", "_", "(", "'Select a project'", ")", ")", "]", "#NEWLINE#", "(", "tenants", ",", "has_more", ")", "=", "api", ".", "keystone", ".", "tenant_list", "(", "request", ")", "#NEWLINE#", "for", "tenant", "in", "tenants", ":", "#NEWLINE#", "#INDENT#", "if", "tenant", ".", "enabled", ":", "#NEWLINE#", "#INDENT#", "tenant_choices", ".", "append", "(", "(", "net_type", ".", "id", ",", "tenant", ".", "name", ")", ")", "#NEWLINE#", "#UNINDENT#", "#UNINDENT#", "self", ".", "fields", "[", "'tenant_id'", "]", ".", "choices", "=", "tenant_choices", "#NEWLINE#", "if", "api", ".", "neutron", ".", "is_port_profiles_supported", "(", ")", ":", "#NEWLINE#", "#INDENT#", "self", ".", "fields", "[", "'net_profile_id'", "]", ".", "choices", "=", "self", ".", "get_network_profile_choices", "(", "request", ")", "#NEWLINE#", "#UNINDENT#", "if", "api", ".", "neutron", ".", "is_extension_supported", "(", "request", ",", "'provider'", ")", ":", "#NEWLINE#", "#INDENT#", "neutron_settings", "#NEWLINE#", "seg_id_range", "=", "neutron_settings", ".", "get", "(", "'segmentation_id_range'", ",", "{", "#NEWLINE#", "#INDENT#", "#NEWLINE#", "#UNINDENT#", "}", ")", "#NEWLINE#", "self", ".", "seg_id_range", "=", "{", "#NEWLINE#", "#INDENT#", "'vlan'", ":", "seg_id_range", ".", ":", "seg_id_range", ".", "get", "(", "'gre'", ",", ",", "#NEWLINE#", "'vxlan'", ":", "seg_id_range", ".", "get", "#NEWLINE#", "seg_id_help", "=", "(", "_", "(", "'For VLAN networks, the VLAN VID on the physical network that realizes the virtual network. Valid VLAN VIDs are %(vlan_min)s through %(vlan_max)s. For GRE or VXLAN networks, the tunnel ID. Valid tunnel IDs for GRE networks are %(gre_min)s through %(gre_max)s. For VXLAN networks, %(vxlan_min)s through %(vxlan_max)s.'", "self", ".", "seg_id_range", "[", "'vlan'", "]", "[", "0", "]", ",", "#NEWLINE#", "'vlan_max'", ":", "self", ".", "seg_id_range", "[", "'vlan'", "]", "[", "1", "]", ",", "#NEWLINE#", "'gre_min'", ":", "self", ".", "seg_id_range", "[", "'gre'", "]", "[", "0", "]", ",", "#NEWLINE#", "'gre_max'", ":", "self", ".", "seg_id_range", "#NEWLINE#", "'vxlan_min'", ":", "self", ".", "seg_id_range", "[", "'vxlan_max'", ":", "self", ".", "seg_id_range", "[", "'vxlan'", "}", ")", "#NEWLINE#", "self", ".", "fields", "[", "'segmentation_id'", "]", ".", "help_text", "=", "seg_id_help", "#NEWLINE#", "supported_provider_types", "=", "neutron_settings", ".", "get", "(", "'supported_provider_types'", "(", "supported_provider_types", "==", "[", "'*'", "]", ")", ":", "#NEWLINE#", "#INDENT#", "network_type_choices", "=", "PROVIDER_TYPES", "#NEWLINE#", "#UNINDENT#", "else", ":", "#NEWLINE#", "#INDENT#", "network_type_choices", "=", "[", "net_type", "for", "net_type", "in", "PROVIDER_TYPES", "if", "(", "net_type", "[", "0", "]", "in", "supported_provider_types", "(", "network_type_choices", ")", "==", "0", ")", ":", "#NEWLINE#", "#INDENT#", "self", ".", "_hide_provider_network_type", "(", ")", "#NEWLINE#", "#UNINDENT#", "else", ":", "#NEWLINE#", "#INDENT#", "self", "=", "network_type_choices", "#NEWLINE#", "#UNINDENT#", "#UNINDENT#", "else", ":", "#NEWLINE#", "#INDENT#", "self", ".", "_hide_provider_network_type", "(", ")"]}}
{"position": {"error_location": 73, "repair_targets": [55, 62, 77], "repair_candidates": [7, 20, 140, 158, 165, 168, 178, 190, 203, 216, 229, 235, 241, 73, 287, 289, 294, 40, 57, 275, 284, 301, 322, 4, 17, 51, 120, 131, 55, 62, 77, 23, 42, 26, 68, 94, 138, 142, 260, 182, 256, 2, 12, 85, 107, 116, 156, 188, 201, 214, 227, 233, 239, 247, 309, 320, 330, 258, 266, 299]}}
{"prediction": {"error_location": 0.9993371367454529, "repair_targets": [0.8669670820236206, 0.04602198302745819, 0.010719978250563145], "repair_candidates": [0.0006363256834447384, 0.001666153664700687, 0.00022107153199613094, 0.0002850955643225461, 1.5119659110496286e-05, 4.125476777971926e-07, 2.5443621325393906e-06, 0.00023238018911797553, 0.008227860555052757, 0.05103914439678192, 0.00022538512712344527, 0.8669670820236206, 2.9894790714024566e-05, 0.04602198302745819, 6.68370266794227e-05, 1.013234282254416e-06, 0.010719978250563145, 0.0011656490387395024, 1.3504784419637872e-06, 0.00019500656344462186, 5.935586614214117e-06, 0.00010544755787122995, 0.00010032737191068009, 0.0003981880145147443, 0.0003908074868377298, 2.5130280846497044e-05, 6.564364866790129e-06, 8.719066499907058e-06, 3.830083369393833e-05, 2.3023616449791007e-05, 0.010203761979937553, 0.00032643877784721553, 1.906585384858772e-05, 2.5703066057758406e-06, 1.227386383106932e-05, 6.142802249087254e-06, 9.31747581489617e-06, 2.2851972971693613e-06, 2.2151732991915196e-05, 7.772148819640279e-06, 1.35608433993184e-05, 6.307694548013387e-06, 7.342589469772065e-06, 4.76379591418663e-06, 1.5429664927069098e-05, 3.137490239168983e-06, 0.00017243587353732437, 3.2949687010841444e-05, 9.49802233662922e-06, 5.279927790979855e-05, 6.206880789250135e-05, 2.933014911832288e-06, 2.984152342833113e-05, 2.100771052937489e-05, 3.4732029234874062e-06, 1.0453833965584636e-05, 6.20360515313223e-06, 9.875687828753144e-05, 9.331276487500872e-06, 3.1256097372533986e-06], "target_probs": 0.9237090349197388}}


{"result": {"time": "2021-02-11 11:56:44.763531", "n_pass": [237, 15, 15], "n_token": 329, "loss": [0.001013718661852181, 0.13222190737724304], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def __init__(", "self", ",", "request", ",", "*", "args", ",", "**kwargs", ")", ":", "self", ")", ".", "__init__", "(", "request", ",", "*", "args", ",", "**", "kwargs", ")", "#NEWLINE#", "tenant_choices", "=", "[", "(", ")", "]", "#NEWLINE#", "(", "tenants", ",", "has_more", ")", "=", "api", ".", "keystone", ".", "tenant_list", "(", "request", ")", "#NEWLINE#", "for", "tenant", "in", "tenants", ":", "#NEWLINE#", "#INDENT#", "if", "tenant", ".", "enabled", ":", "#NEWLINE#", "#INDENT#", "tenant_choices", ".", "append", "(", "(", "net_type", ".", "id", ",", "tenant", ".", "name", ")", ")", "#NEWLINE#", "#UNINDENT#", "#UNINDENT#", "self", ".", "fields", "[", "'tenant_id'", "]", ".", "choices", "=", "tenant_choices", "#NEWLINE#", "if", "api", ".", "neutron", ".", "is_port_profiles_supported", "(", ")", ":", "#NEWLINE#", "#INDENT#", "self", ".", "fields", "[", "'net_profile_id'", "]", ".", "choices", "=", "self", ".", "get_network_profile_choices", "(", "request", ")", "#NEWLINE#", "#UNINDENT#", "if", "api", ".", "neutron", ".", "is_extension_supported", "(", "request", ",", "'provider'", ")", ":", "#NEWLINE#", "#INDENT#", "neutron_settings", "#NEWLINE#", "seg_id_range", "=", "neutron_settings", ".", "get", "(", "'segmentation_id_range'", ",", "{", "#NEWLINE#", "#INDENT#", "#NEWLINE#", "#UNINDENT#", "}", ")", "#NEWLINE#", "self", ".", "seg_id_range", "=", "{", "#NEWLINE#", "#INDENT#", "'vlan'", ":", "seg_id_range", ".", ":", "seg_id_range", ".", "get", "(", "'gre'", ",", ",", "#NEWLINE#", "'vxlan'", ":", "seg_id_range", ".", "get", "#NEWLINE#", "seg_id_help", "=", "(", "_", "(", "'For VLAN networks, the VLAN VID on the physical network that realizes the virtual network. Valid VLAN VIDs are %(vlan_min)s through %(vlan_max)s. For GRE or VXLAN networks, the tunnel ID. Valid tunnel IDs for GRE networks are %(gre_min)s through %(gre_max)s. For VXLAN networks, %(vxlan_min)s through %(vxlan_max)s.'", "self", ".", "seg_id_range", "[", "'vlan'", "]", "[", "0", "]", ",", "#NEWLINE#", "'vlan_max'", ":", "self", ".", "seg_id_range", "[", "'vlan'", "]", "[", "1", "]", ",", "#NEWLINE#", "'gre_min'", ":", "self", ".", "seg_id_range", "[", "'gre'", "]", "[", "0", "]", ",", "#NEWLINE#", "'gre_max'", ":", "self", ".", "seg_id_range", "#NEWLINE#", "'vxlan_min'", ":", "self", ".", "seg_id_range", "[", "'vxlan_max'", ":", "self", ".", "seg_id_range", "[", "'vxlan'", "}", ")", "#NEWLINE#", "self", ".", "fields", "[", "'segmentation_id'", "]", ".", "help_text", "=", "seg_id_help", "#NEWLINE#", "supported_provider_types", "=", "neutron_settings", ".", "get", "(", "'supported_provider_types'", "(", "supported_provider_types", "==", "[", "'*'", "]", ")", ":", "#NEWLINE#", "#INDENT#", "network_type_choices", "=", "PROVIDER_TYPES", "#NEWLINE#", "#UNINDENT#", "else", ":", "#NEWLINE#", "#INDENT#", "network_type_choices", "=", "[", "net_type", "for", "net_type", "in", "PROVIDER_TYPES", "if", "(", "net_type", "[", "0", "]", "in", "supported_provider_types", "(", "network_type_choices", ")", "==", "0", ")", ":", "#NEWLINE#", "#INDENT#", "self", ".", "_hide_provider_network_type", "(", ")", "#NEWLINE#", "#UNINDENT#", "else", ":", "#NEWLINE#", "#INDENT#", "self", "=", "network_type_choices", "#NEWLINE#", "#UNINDENT#", "#UNINDENT#", "else", ":", "#NEWLINE#", "#INDENT#", "self", ".", "_hide_provider_network_type", "(", ")"]}}
{"position": {"error_location": 67, "repair_targets": [49, 56, 71], "repair_candidates": [7, 20, 134, 152, 159, 162, 172, 184, 197, 210, 223, 229, 235, 67, 281, 283, 288, 34, 51, 269, 278, 295, 316, 4, 17, 45, 114, 125, 49, 56, 71, 23, 36, 26, 62, 88, 132, 136, 254, 176, 250, 2, 12, 79, 101, 110, 150, 182, 195, 208, 221, 227, 233, 241, 303, 314, 324, 252, 260, 293]}}
{"prediction": {"error_location": 0.9989866614341736, "repair_targets": [0.8261194825172424, 0.026022132486104965, 0.024004966020584106], "repair_candidates": [0.0005053869099356234, 0.0015961086610332131, 0.00021791952895000577, 0.0001450879208277911, 1.1319621080474462e-05, 6.050107685950934e-07, 2.3813472580513917e-06, 0.00013441876217257231, 0.005806320812553167, 0.11257027834653854, 0.0001482637890148908, 0.8261194825172424, 1.083322786143981e-05, 0.026022132486104965, 3.225278123863973e-05, 2.1007019768148893e-06, 0.024004966020584106, 0.0003475083503872156, 2.811423769344401e-07, 1.8893988453783095e-05, 3.221954614218703e-07, 6.102772749727592e-05, 8.742201316636056e-05, 0.00023951292678248137, 0.0003397705440875143, 1.201173108711373e-05, 3.82213056582259e-06, 4.382181941764429e-06, 9.11083843675442e-05, 6.042335735401139e-05, 0.00038501984090544283, 0.0003620702482294291, 3.675677362480201e-05, 1.508605009803432e-06, 3.50110640283674e-05, 2.7225005396758206e-06, 2.4205499357776716e-05, 1.9659544250316685e-06, 4.205560981063172e-05, 4.9223981477553025e-06, 2.6639181669452228e-05, 2.893414148275042e-06, 1.6436011719633825e-05, 1.538845253890031e-06, 6.563701845152536e-06, 2.3612959410002077e-07, 0.00014398230996448547, 1.4785296116315294e-05, 1.5555813661194406e-05, 2.4296576157212257e-05, 4.0945593354990706e-05, 3.4836789382097777e-06, 1.868856452347245e-05, 1.5583893400616944e-05, 1.9668059394462034e-06, 7.032730081846239e-06, 2.1247894892439945e-06, 0.00016042760398704559, 3.08208313981595e-06, 1.122968456002127e-06], "target_probs": 0.8761465549468994}}


{"result": {"time": "2021-02-11 11:56:44.866116", "n_pass": [247, 16, 16], "n_token": 322, "loss": [0.0004970983718521893, 0.14621450006961823], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def __init__(", "self", ",", "request", ",", "*", "args", ",", "**kwargs", ")", ":", "self", ")", ".", "__init__", "(", "request", ",", "*", "args", ",", "**", "kwargs", ")", "#NEWLINE#", "tenant_choices", "=", "[", "(", ")", "]", "#NEWLINE#", "(", "tenants", ",", "has_more", ")", "=", "api", ".", "keystone", ".", "tenant_list", "(", "request", ")", "#NEWLINE#", "for", "tenant", "in", "tenants", ":", "#NEWLINE#", "#INDENT#", "if", "tenant", ".", "enabled", ":", "#NEWLINE#", "#INDENT#", "tenant_choices", ".", "append", "(", "(", "net_type", ".", "id", ",", "tenant", ".", "name", ")", ")", "#NEWLINE#", "#UNINDENT#", "#UNINDENT#", "self", ".", "fields", "[", "'tenant_id'", "]", ".", "choices", "=", "tenant_choices", "#NEWLINE#", "if", ":", "#NEWLINE#", "#INDENT#", "self", ".", "fields", "[", "'net_profile_id'", "]", ".", "choices", "=", "self", ".", "get_network_profile_choices", "(", "request", ")", "#NEWLINE#", "#UNINDENT#", "if", "api", ".", "neutron", ".", "is_extension_supported", "(", "request", ",", "'provider'", ")", ":", "#NEWLINE#", "#INDENT#", "neutron_settings", "#NEWLINE#", "seg_id_range", "=", "neutron_settings", ".", "get", "(", "'segmentation_id_range'", ",", "{", "#NEWLINE#", "#INDENT#", "#NEWLINE#", "#UNINDENT#", "}", ")", "#NEWLINE#", "self", ".", "seg_id_range", "=", "{", "#NEWLINE#", "#INDENT#", "'vlan'", ":", "seg_id_range", ".", ":", "seg_id_range", ".", "get", "(", "'gre'", ",", ",", "#NEWLINE#", "'vxlan'", ":", "seg_id_range", ".", "get", "#NEWLINE#", "seg_id_help", "=", "(", "_", "(", "'For VLAN networks, the VLAN VID on the physical network that realizes the virtual network. Valid VLAN VIDs are %(vlan_min)s through %(vlan_max)s. For GRE or VXLAN networks, the tunnel ID. Valid tunnel IDs for GRE networks are %(gre_min)s through %(gre_max)s. For VXLAN networks, %(vxlan_min)s through %(vxlan_max)s.'", "self", ".", "seg_id_range", "[", "'vlan'", "]", "[", "0", "]", ",", "#NEWLINE#", "'vlan_max'", ":", "self", ".", "seg_id_range", "[", "'vlan'", "]", "[", "1", "]", ",", "#NEWLINE#", "'gre_min'", ":", "self", ".", "seg_id_range", "[", "'gre'", "]", "[", "0", "]", ",", "#NEWLINE#", "'gre_max'", ":", "self", ".", "seg_id_range", "#NEWLINE#", "'vxlan_min'", ":", "self", ".", "seg_id_range", "[", "'vxlan_max'", ":", "self", ".", "seg_id_range", "[", "'vxlan'", "}", ")", "#NEWLINE#", "self", ".", "fields", "[", "'segmentation_id'", "]", ".", "help_text", "=", "seg_id_help", "#NEWLINE#", "supported_provider_types", "=", "neutron_settings", ".", "get", "(", "'supported_provider_types'", "(", "supported_provider_types", "==", "[", "'*'", "]", ")", ":", "#NEWLINE#", "#INDENT#", "network_type_choices", "=", "PROVIDER_TYPES", "#NEWLINE#", "#UNINDENT#", "else", ":", "#NEWLINE#", "#INDENT#", "network_type_choices", "=", "[", "net_type", "for", "net_type", "in", "PROVIDER_TYPES", "if", "(", "net_type", "[", "0", "]", "in", "supported_provider_types", "(", "network_type_choices", ")", "==", "0", ")", ":", "#NEWLINE#", "#INDENT#", "self", ".", "_hide_provider_network_type", "(", ")", "#NEWLINE#", "#UNINDENT#", "else", ":", "#NEWLINE#", "#INDENT#", "self", "=", "network_type_choices", "#NEWLINE#", "#UNINDENT#", "#UNINDENT#", "else", ":", "#NEWLINE#", "#INDENT#", "self", ".", "_hide_provider_network_type", "(", ")"]}}
{"position": {"error_location": 67, "repair_targets": [49, 56, 71], "repair_candidates": [7, 20, 127, 145, 152, 155, 165, 177, 190, 203, 216, 222, 228, 67, 274, 276, 281, 34, 51, 262, 271, 288, 309, 4, 17, 45, 107, 118, 49, 56, 71, 23, 36, 26, 62, 88, 125, 129, 247, 169, 243, 2, 12, 79, 94, 103, 143, 175, 188, 201, 214, 220, 226, 234, 296, 307, 317, 245, 253, 286]}}
{"prediction": {"error_location": 0.9995028972625732, "repair_targets": [0.8202570676803589, 0.023314574733376503, 0.02040073089301586], "repair_candidates": [0.0005376554909162223, 0.0023514418862760067, 0.0002988013729918748, 0.0002436188660794869, 8.19026172393933e-06, 5.812028689433646e-07, 1.4558693237631815e-06, 0.00014351215213537216, 0.008509133942425251, 0.12166740745306015, 0.00020570875494740903, 0.8202570676803589, 1.3730608770856634e-05, 0.023314574733376503, 4.167493534623645e-05, 9.925780659614247e-07, 0.02040073089301586, 0.00013682967983186245, 4.366000325717323e-07, 2.248024793516379e-05, 4.770439772983082e-06, 4.869065378443338e-05, 9.374214278068393e-05, 0.00015919242287054658, 0.00010977622150676325, 7.893370820966084e-06, 6.238713012862718e-06, 7.930449100967962e-06, 3.2295178243657574e-05, 1.1810071555373725e-05, 0.0008082916610874236, 0.00029861091752536595, 3.1492323614656925e-05, 2.567020146670984e-06, 1.9129625798086636e-05, 3.5579620316639193e-07, 9.06050354387844e-06, 1.4082000916459947e-06, 2.1044894310762174e-05, 2.117681788149639e-06, 1.1433425243012607e-05, 1.2480304576456547e-06, 1.2014933417958673e-05, 1.167379878097563e-06, 8.196140584004752e-07, 2.1130263405666483e-07, 2.0609135390259326e-05, 6.918050075910287e-06, 1.1906899999303278e-05, 1.439811967429705e-05, 1.42251656143344e-05, 5.497735173776164e-07, 1.6935515304794535e-05, 2.0309560568421148e-05, 4.6054606173129287e-07, 1.2602178003362496e-06, 2.728525316797459e-07, 3.2594442018307745e-05, 8.444649068906074e-08, 1.8022844017195894e-07], "target_probs": 0.8639723658561707}}


{"result": {"time": "2021-02-11 11:56:44.967331", "n_pass": [254, 17, 17], "n_token": 315, "loss": [0.00021240839851088822, 0.10097479075193405], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def __init__(", "self", ",", "request", ",", "*", "args", ",", "**kwargs", ")", ":", "self", ")", ".", "__init__", "(", "request", ",", "*", "args", ",", "**", "kwargs", ")", "#NEWLINE#", "tenant_choices", "=", "[", "(", ")", "]", "#NEWLINE#", "(", "tenants", ",", "has_more", ")", "=", "api", ".", "keystone", ".", "tenant_list", "(", "request", ")", "#NEWLINE#", "for", "tenant", "in", "tenants", ":", "#NEWLINE#", "#INDENT#", "if", "tenant", ".", "enabled", ":", "#NEWLINE#", "#INDENT#", "tenant_choices", ".", "append", "(", "(", "net_type", ".", "id", ",", "tenant", ".", "name", ")", ")", "#NEWLINE#", "#UNINDENT#", "#UNINDENT#", "self", ".", "fields", "[", "'tenant_id'", "]", ".", "choices", "=", "tenant_choices", "#NEWLINE#", "if", ":", "#NEWLINE#", "#INDENT#", "self", ".", "fields", "[", "'net_profile_id'", "]", ".", "choices", "=", "self", ".", "get_network_profile_choices", "(", "request", ")", "#NEWLINE#", "#UNINDENT#", "if", "api", ".", "neutron", ".", "is_extension_supported", "(", "request", ",", "'provider'", ")", ":", "#NEWLINE#", "#INDENT#", "neutron_settings", "#NEWLINE#", "seg_id_range", "=", "neutron_settings", ".", "get", "(", "}", ")", "#NEWLINE#", "self", ".", "seg_id_range", "=", "{", "#NEWLINE#", "#INDENT#", "'vlan'", ":", "seg_id_range", ".", ":", "seg_id_range", ".", "get", "(", "'gre'", ",", ",", "#NEWLINE#", "'vxlan'", ":", "seg_id_range", ".", "get", "#NEWLINE#", "seg_id_help", "=", "(", "_", "(", "'For VLAN networks, the VLAN VID on the physical network that realizes the virtual network. Valid VLAN VIDs are %(vlan_min)s through %(vlan_max)s. For GRE or VXLAN networks, the tunnel ID. Valid tunnel IDs for GRE networks are %(gre_min)s through %(gre_max)s. For VXLAN networks, %(vxlan_min)s through %(vxlan_max)s.'", "self", ".", "seg_id_range", "[", "'vlan'", "]", "[", "0", "]", ",", "#NEWLINE#", "'vlan_max'", ":", "self", ".", "seg_id_range", "[", "'vlan'", "]", "[", "1", "]", ",", "#NEWLINE#", "'gre_min'", ":", "self", ".", "seg_id_range", "[", "'gre'", "]", "[", "0", "]", ",", "#NEWLINE#", "'gre_max'", ":", "self", ".", "seg_id_range", "#NEWLINE#", "'vxlan_min'", ":", "self", ".", "seg_id_range", "[", "'vxlan_max'", ":", "self", ".", "seg_id_range", "[", "'vxlan'", "}", ")", "#NEWLINE#", "self", ".", "fields", "[", "'segmentation_id'", "]", ".", "help_text", "=", "seg_id_help", "#NEWLINE#", "supported_provider_types", "=", "neutron_settings", ".", "get", "(", "'supported_provider_types'", "(", "supported_provider_types", "==", "[", "'*'", "]", ")", ":", "#NEWLINE#", "#INDENT#", "network_type_choices", "=", "PROVIDER_TYPES", "#NEWLINE#", "#UNINDENT#", "else", ":", "#NEWLINE#", "#INDENT#", "network_type_choices", "=", "[", "net_type", "for", "net_type", "in", "PROVIDER_TYPES", "if", "(", "net_type", "[", "0", "]", "in", "supported_provider_types", "(", "network_type_choices", ")", "==", "0", ")", ":", "#NEWLINE#", "#INDENT#", "self", ".", "_hide_provider_network_type", "(", ")", "#NEWLINE#", "#UNINDENT#", "else", ":", "#NEWLINE#", "#INDENT#", "self", "=", "network_type_choices", "#NEWLINE#", "#UNINDENT#", "#UNINDENT#", "else", ":", "#NEWLINE#", "#INDENT#", "self", ".", "_hide_provider_network_type", "(", ")"]}}
{"position": {"error_location": 67, "repair_targets": [49, 56, 71], "repair_candidates": [7, 20, 127, 138, 145, 148, 158, 170, 183, 196, 209, 215, 221, 67, 267, 269, 274, 34, 51, 255, 264, 281, 302, 4, 17, 45, 107, 118, 49, 56, 71, 23, 36, 26, 62, 88, 125, 129, 240, 162, 236, 2, 12, 79, 94, 103, 136, 168, 181, 194, 207, 213, 219, 227, 289, 300, 310, 238, 246, 279]}}
{"prediction": {"error_location": 0.9997875094413757, "repair_targets": [0.8686538934707642, 0.017988162115216255, 0.017313776537775993], "repair_candidates": [0.000559103034902364, 0.002182626398280263, 0.00019308591436129063, 0.00020784966181963682, 5.413307007984258e-06, 2.356920418833397e-07, 6.502763767457509e-07, 0.00012283545220270753, 0.005150388926267624, 0.08602914214134216, 0.0001894929155241698, 0.8686538934707642, 9.57005158852553e-06, 0.017988162115216255, 2.398948163317982e-05, 2.526738285268948e-07, 0.017313776537775993, 4.257717228028923e-05, 2.13569592233398e-07, 8.329216143465601e-06, 3.6297881251812214e-06, 3.073335756198503e-05, 0.00010944899986498058, 0.00011291542614344507, 0.00010116171324625611, 6.3309521465271246e-06, 3.201185108991922e-06, 8.161892765201628e-06, 6.871721416246146e-05, 5.578306445386261e-05, 0.0005773822776973248, 7.108756108209491e-05, 1.2559289643832017e-05, 1.7732469359543757e-06, 1.5393145076814108e-05, 4.987449528925936e-07, 8.629313924757298e-06, 5.920309718021599e-07, 1.2720041013380978e-05, 6.259757583393366e-07, 2.9896289106545737e-06, 7.266683041962096e-07, 4.810623977391515e-06, 6.547700195369544e-07, 5.843885446665809e-07, 6.445348788020056e-08, 1.2011561011604499e-05, 3.065145938307978e-05, 4.740994882013183e-06, 1.1549985174497124e-05, 9.043685167853255e-06, 4.741023929000221e-07, 1.7281676264246926e-05, 1.3125621080689598e-05, 1.7761622927991993e-07, 4.4818759192821744e-07, 9.166139847138766e-08, 7.48913771531079e-06, 7.33512948158932e-08, 1.0772598812991419e-07], "target_probs": 0.9039558172225952}}


{"result": {"time": "2021-02-11 11:56:45.090842", "n_pass": [393, 18, 18], "n_token": 312, "loss": [0.00012027494085486978, 0.07475093752145767], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def __init__(", "self", ",", "request", ",", "*", "args", ",", "**kwargs", ")", ":", "self", ")", ".", "__init__", "(", "request", ",", "*", "args", ",", "**", "kwargs", ")", "#NEWLINE#", "tenant_choices", "=", "[", "(", ")", "]", "#NEWLINE#", "(", "tenants", ",", "has_more", ")", "=", "api", ".", "keystone", ".", "tenant_list", "(", "request", ")", "#NEWLINE#", "for", "tenant", "in", "tenants", ":", "#NEWLINE#", "#INDENT#", "if", "tenant", ".", "enabled", ":", "#NEWLINE#", "#INDENT#", "tenant_choices", ".", "append", "(", "(", "net_type", ".", "id", ",", "tenant", ".", "name", ")", ")", "#NEWLINE#", "#UNINDENT#", "#UNINDENT#", "self", ".", "fields", "[", "'tenant_id'", "]", ".", "choices", "=", "tenant_choices", "#NEWLINE#", "if", ":", "#NEWLINE#", "#INDENT#", "self", ".", "fields", "[", "'net_profile_id'", "]", ".", "choices", "=", "self", ".", "get_network_profile_choices", "(", "request", ")", "#NEWLINE#", "#UNINDENT#", "if", "api", ".", "neutron", ".", "is_extension_supported", "(", "request", ",", "#NEWLINE#", "#INDENT#", "neutron_settings", "#NEWLINE#", "seg_id_range", "=", "neutron_settings", ".", "get", "(", "}", ")", "#NEWLINE#", "self", ".", "seg_id_range", "=", "{", "#NEWLINE#", "#INDENT#", "'vlan'", ":", "seg_id_range", ".", ":", "seg_id_range", ".", "get", "(", "'gre'", ",", ",", "#NEWLINE#", "'vxlan'", ":", "seg_id_range", ".", "get", "#NEWLINE#", "seg_id_help", "=", "(", "_", "(", "'For VLAN networks, the VLAN VID on the physical network that realizes the virtual network. Valid VLAN VIDs are %(vlan_min)s through %(vlan_max)s. For GRE or VXLAN networks, the tunnel ID. Valid tunnel IDs for GRE networks are %(gre_min)s through %(gre_max)s. For VXLAN networks, %(vxlan_min)s through %(vxlan_max)s.'", "self", ".", "seg_id_range", "[", "'vlan'", "]", "[", "0", "]", ",", "#NEWLINE#", "'vlan_max'", ":", "self", ".", "seg_id_range", "[", "'vlan'", "]", "[", "1", "]", ",", "#NEWLINE#", "'gre_min'", ":", "self", ".", "seg_id_range", "[", "'gre'", "]", "[", "0", "]", ",", "#NEWLINE#", "'gre_max'", ":", "self", ".", "seg_id_range", "#NEWLINE#", "'vxlan_min'", ":", "self", ".", "seg_id_range", "[", "'vxlan_max'", ":", "self", ".", "seg_id_range", "[", "'vxlan'", "}", ")", "#NEWLINE#", "self", ".", "fields", "[", "'segmentation_id'", "]", ".", "help_text", "=", "seg_id_help", "#NEWLINE#", "supported_provider_types", "=", "neutron_settings", ".", "get", "(", "'supported_provider_types'", "(", "supported_provider_types", "==", "[", "'*'", "]", ")", ":", "#NEWLINE#", "#INDENT#", "network_type_choices", "=", "PROVIDER_TYPES", "#NEWLINE#", "#UNINDENT#", "else", ":", "#NEWLINE#", "#INDENT#", "network_type_choices", "=", "[", "net_type", "for", "net_type", "in", "PROVIDER_TYPES", "if", "(", "net_type", "[", "0", "]", "in", "supported_provider_types", "(", "network_type_choices", ")", "==", "0", ")", ":", "#NEWLINE#", "#INDENT#", "self", ".", "_hide_provider_network_type", "(", ")", "#NEWLINE#", "#UNINDENT#", "else", ":", "#NEWLINE#", "#INDENT#", "self", "=", "network_type_choices", "#NEWLINE#", "#UNINDENT#", "#UNINDENT#", "else", ":", "#NEWLINE#", "#INDENT#", "self", ".", "_hide_provider_network_type", "(", ")"]}}
{"position": {"error_location": 67, "repair_targets": [49, 56, 71], "repair_candidates": [7, 20, 124, 135, 142, 145, 155, 167, 180, 193, 206, 212, 218, 67, 264, 266, 271, 34, 51, 252, 261, 278, 299, 4, 17, 45, 107, 118, 49, 56, 71, 23, 36, 26, 62, 88, 122, 126, 237, 159, 233, 2, 12, 79, 94, 103, 133, 165, 178, 191, 204, 210, 216, 224, 286, 297, 307, 235, 243, 276]}}
{"prediction": {"error_location": 0.9998797178268433, "repair_targets": [0.8977118134498596, 0.014214900322258472, 0.016047900542616844], "repair_candidates": [0.0005180910811759531, 0.0022236446384340525, 0.00019233748025726527, 0.00022488439572043717, 5.383702045946848e-06, 1.5022467891867564e-07, 5.955575943517033e-07, 0.00010790616215672344, 0.004388850647956133, 0.06332871317863464, 0.00021005414600949734, 0.8977118134498596, 5.883102403458906e-06, 0.014214900322258472, 2.4170847609639168e-05, 7.331804852128698e-08, 0.016047900542616844, 4.380065365694463e-05, 1.1759914286813e-07, 7.4894069257425144e-06, 5.282749953039456e-06, 2.4490283976774663e-05, 0.00011859880032716319, 7.25090503692627e-05, 5.648535443469882e-05, 7.860441655793693e-06, 2.6143852664972655e-06, 4.673005150834797e-06, 2.505611519154627e-05, 1.1381536751287058e-05, 7.25249556126073e-05, 0.00014501457917504013, 1.114250972023001e-05, 7.801440347066091e-07, 2.3034659534459934e-05, 6.365929152707395e-07, 1.4515217117150314e-05, 2.6959872911902494e-07, 1.3316304830368608e-05, 1.1859142432513181e-06, 1.7938129531103186e-05, 4.530257911028457e-07, 7.058234587020706e-06, 4.4567232748704555e-07, 8.284655450552236e-07, 2.1270525962790998e-07, 1.7314303477178328e-05, 5.52048186364118e-05, 8.522844723302114e-07, 5.577339379669866e-06, 3.931171249860199e-06, 2.2342420891163783e-07, 1.085542044165777e-05, 4.02507976104971e-06, 8.78889068189892e-08, 1.1212190997866855e-07, 1.0156628604818252e-07, 6.509311788249761e-06, 7.889438791153225e-08, 9.883839879876177e-08], "target_probs": 0.9279745817184448}}


{"result": {"time": "2021-02-11 11:56:45.190538", "n_pass": [397, 19, 19], "n_token": 309, "loss": [0.0001679517881711945, 0.0785696804523468], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def __init__(", "self", ",", "request", ",", "*", "args", ",", "**kwargs", ")", ":", "self", ")", ".", "__init__", "(", "request", ",", "*", "args", ",", "**", "kwargs", ")", "#NEWLINE#", "tenant_choices", "=", "[", "(", ")", "]", "#NEWLINE#", "(", "tenants", ",", "has_more", ")", "=", "api", ".", "keystone", ".", "tenant_list", "(", "request", ")", "#NEWLINE#", "for", "tenant", "in", "tenants", ":", "#NEWLINE#", "#INDENT#", "if", "tenant", ".", "enabled", ":", "#NEWLINE#", "#INDENT#", "tenant_choices", ".", "append", "(", "(", "net_type", ".", "id", ",", "tenant", ".", "name", ")", ")", "#NEWLINE#", "#UNINDENT#", "#UNINDENT#", "self", ".", "fields", "[", "'tenant_id'", "]", ".", "choices", "=", "tenant_choices", "#NEWLINE#", "if", ":", "#NEWLINE#", "#INDENT#", "self", ".", "fields", "[", "'net_profile_id'", "]", ".", "choices", "=", "self", ".", "get_network_profile_choices", "(", "request", ")", "#NEWLINE#", "#UNINDENT#", "if", "api", ".", "neutron", ".", "is_extension_supported", "(", "request", ",", "#NEWLINE#", "#INDENT#", "neutron_settings", "#NEWLINE#", "seg_id_range", "=", "neutron_settings", ".", "get", "#NEWLINE#", "self", ".", "seg_id_range", "=", "{", "#NEWLINE#", "#INDENT#", "'vlan'", ":", "seg_id_range", ".", ":", "seg_id_range", ".", "get", "(", "'gre'", ",", ",", "#NEWLINE#", "'vxlan'", ":", "seg_id_range", ".", "get", "#NEWLINE#", "seg_id_help", "=", "(", "_", "(", "'For VLAN networks, the VLAN VID on the physical network that realizes the virtual network. Valid VLAN VIDs are %(vlan_min)s through %(vlan_max)s. For GRE or VXLAN networks, the tunnel ID. Valid tunnel IDs for GRE networks are %(gre_min)s through %(gre_max)s. For VXLAN networks, %(vxlan_min)s through %(vxlan_max)s.'", "self", ".", "seg_id_range", "[", "'vlan'", "]", "[", "0", "]", ",", "#NEWLINE#", "'vlan_max'", ":", "self", ".", "seg_id_range", "[", "'vlan'", "]", "[", "1", "]", ",", "#NEWLINE#", "'gre_min'", ":", "self", ".", "seg_id_range", "[", "'gre'", "]", "[", "0", "]", ",", "#NEWLINE#", "'gre_max'", ":", "self", ".", "seg_id_range", "#NEWLINE#", "'vxlan_min'", ":", "self", ".", "seg_id_range", "[", "'vxlan_max'", ":", "self", ".", "seg_id_range", "[", "'vxlan'", "}", ")", "#NEWLINE#", "self", ".", "fields", "[", "'segmentation_id'", "]", ".", "help_text", "=", "seg_id_help", "#NEWLINE#", "supported_provider_types", "=", "neutron_settings", ".", "get", "(", "'supported_provider_types'", "(", "supported_provider_types", "==", "[", "'*'", "]", ")", ":", "#NEWLINE#", "#INDENT#", "network_type_choices", "=", "PROVIDER_TYPES", "#NEWLINE#", "#UNINDENT#", "else", ":", "#NEWLINE#", "#INDENT#", "network_type_choices", "=", "[", "net_type", "for", "net_type", "in", "PROVIDER_TYPES", "if", "(", "net_type", "[", "0", "]", "in", "supported_provider_types", "(", "network_type_choices", ")", "==", "0", ")", ":", "#NEWLINE#", "#INDENT#", "self", ".", "_hide_provider_network_type", "(", ")", "#NEWLINE#", "#UNINDENT#", "else", ":", "#NEWLINE#", "#INDENT#", "self", "=", "network_type_choices", "#NEWLINE#", "#UNINDENT#", "#UNINDENT#", "else", ":", "#NEWLINE#", "#INDENT#", "self", ".", "_hide_provider_network_type", "(", ")"]}}
{"position": {"error_location": 67, "repair_targets": [49, 56, 71], "repair_candidates": [7, 20, 124, 132, 139, 142, 152, 164, 177, 190, 203, 209, 215, 67, 261, 263, 268, 34, 51, 249, 258, 275, 296, 4, 17, 45, 107, 118, 49, 56, 71, 23, 36, 26, 62, 88, 122, 126, 234, 156, 230, 2, 12, 79, 94, 103, 130, 162, 175, 188, 201, 207, 213, 221, 283, 294, 304, 232, 240, 273]}}
{"prediction": {"error_location": 0.999832272529602, "repair_targets": [0.9008869528770447, 0.012519193813204765, 0.011031518690288067], "repair_candidates": [0.00046532502165064216, 0.002706325612962246, 0.00018105919298250228, 0.00016484841762576252, 8.313858415931463e-06, 1.3200184412198723e-07, 7.857808554945223e-07, 0.00011625422484939918, 0.004705448169261217, 0.0655595138669014, 0.0003018100978806615, 0.9008869528770447, 5.337656602932839e-06, 0.012519193813204765, 2.2904567231307738e-05, 1.3220946470937633e-07, 0.011031518690288067, 6.289605516940355e-05, 1.4064661968404835e-07, 1.0210473192273639e-05, 5.829610017826781e-06, 3.409881901461631e-05, 0.0002006428112508729, 0.0001310427614953369, 3.547065716702491e-05, 3.5197906981920823e-05, 2.1369905880419537e-06, 4.152782821620349e-06, 3.895733971148729e-05, 1.653900289966259e-05, 0.0003464463516138494, 9.242405940312892e-05, 1.4462450963037554e-05, 5.888567216061347e-07, 2.5382752937730402e-05, 7.753038744340301e-07, 1.784978485375177e-05, 2.0539080480830307e-07, 1.3146127457730472e-05, 1.4481046264336328e-06, 9.897481504594907e-06, 5.283448558657255e-07, 9.57709016802255e-06, 3.2624939194647595e-07, 1.6986663240459166e-06, 4.628107319604169e-07, 2.92596232611686e-05, 0.00013542883971240371, 4.908112600787717e-07, 6.143265181890456e-06, 5.046709247835679e-06, 2.7933228352594597e-07, 1.4855147128400858e-05, 1.950132627825951e-06, 1.435541747696334e-07, 3.723299357716314e-07, 3.734451183845522e-07, 1.6824900740175508e-05, 2.735031898737361e-07, 2.918621078151773e-07], "target_probs": 0.9244376420974731}}


{"result": {"time": "2021-02-11 11:56:45.289584", "n_pass": [400, 20, 20], "n_token": 306, "loss": [0.000192504478036426, 0.08530621230602264], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def __init__(", "self", ",", "request", ",", "*", "args", ",", "**kwargs", ")", ":", "self", ")", ".", "__init__", "(", "request", ",", "*", "args", ",", "**", "kwargs", ")", "#NEWLINE#", "tenant_choices", "=", "[", "(", ")", "]", "#NEWLINE#", "(", "tenants", ",", "has_more", ")", "=", "api", ".", "keystone", ".", "tenant_list", "(", "request", ")", "#NEWLINE#", "for", "tenant", "in", "tenants", ":", "#NEWLINE#", "#INDENT#", "if", "tenant", ".", "enabled", ":", "#NEWLINE#", "#INDENT#", "tenant_choices", ".", "append", "(", "(", "net_type", ".", "id", ",", "tenant", ".", "name", ")", ")", "#NEWLINE#", "#UNINDENT#", "#UNINDENT#", "self", ".", "fields", "[", "'tenant_id'", "]", ".", "choices", "=", "tenant_choices", "#NEWLINE#", "if", ":", "#NEWLINE#", "#INDENT#", "self", ".", "fields", "[", "'net_profile_id'", "]", ".", "choices", "=", "self", ".", "get_network_profile_choices", "(", "request", ")", "#NEWLINE#", "#UNINDENT#", "if", "api", ".", "neutron", ".", "is_extension_supported", "(", "request", ",", "#NEWLINE#", "#INDENT#", "neutron_settings", "#NEWLINE#", "seg_id_range", "=", "neutron_settings", ".", "get", "#NEWLINE#", "self", ".", "seg_id_range", "=", "{", ":", "seg_id_range", ".", ":", "seg_id_range", ".", "get", "(", "'gre'", ",", ",", "#NEWLINE#", "'vxlan'", ":", "seg_id_range", ".", "get", "#NEWLINE#", "seg_id_help", "=", "(", "_", "(", "'For VLAN networks, the VLAN VID on the physical network that realizes the virtual network. Valid VLAN VIDs are %(vlan_min)s through %(vlan_max)s. For GRE or VXLAN networks, the tunnel ID. Valid tunnel IDs for GRE networks are %(gre_min)s through %(gre_max)s. For VXLAN networks, %(vxlan_min)s through %(vxlan_max)s.'", "self", ".", "seg_id_range", "[", "'vlan'", "]", "[", "0", "]", ",", "#NEWLINE#", "'vlan_max'", ":", "self", ".", "seg_id_range", "[", "'vlan'", "]", "[", "1", "]", ",", "#NEWLINE#", "'gre_min'", ":", "self", ".", "seg_id_range", "[", "'gre'", "]", "[", "0", "]", ",", "#NEWLINE#", "'gre_max'", ":", "self", ".", "seg_id_range", "#NEWLINE#", "'vxlan_min'", ":", "self", ".", "seg_id_range", "[", "'vxlan_max'", ":", "self", ".", "seg_id_range", "[", "'vxlan'", "}", ")", "#NEWLINE#", "self", ".", "fields", "[", "'segmentation_id'", "]", ".", "help_text", "=", "seg_id_help", "#NEWLINE#", "supported_provider_types", "=", "neutron_settings", ".", "get", "(", "'supported_provider_types'", "(", "supported_provider_types", "==", "[", "'*'", "]", ")", ":", "#NEWLINE#", "#INDENT#", "network_type_choices", "=", "PROVIDER_TYPES", "#NEWLINE#", "#UNINDENT#", "else", ":", "#NEWLINE#", "#INDENT#", "network_type_choices", "=", "[", "net_type", "for", "net_type", "in", "PROVIDER_TYPES", "if", "(", "net_type", "[", "0", "]", "in", "supported_provider_types", "(", "network_type_choices", ")", "==", "0", ")", ":", "#NEWLINE#", "#INDENT#", "self", ".", "_hide_provider_network_type", "(", ")", "#NEWLINE#", "#UNINDENT#", "else", ":", "#NEWLINE#", "#INDENT#", "self", "=", "network_type_choices", "#NEWLINE#", "#UNINDENT#", "#UNINDENT#", "else", ":", "#NEWLINE#", "#INDENT#", "self", ".", "_hide_provider_network_type", "(", ")"]}}
{"position": {"error_location": 67, "repair_targets": [49, 56, 71], "repair_candidates": [7, 20, 124, 132, 136, 139, 149, 161, 174, 187, 200, 206, 212, 67, 258, 260, 265, 34, 51, 246, 255, 272, 293, 4, 17, 45, 107, 118, 49, 56, 71, 23, 36, 26, 62, 88, 122, 126, 231, 153, 227, 2, 12, 79, 94, 103, 130, 159, 172, 185, 198, 204, 210, 218, 280, 291, 301, 229, 237, 270]}}
{"prediction": {"error_location": 0.9998075366020203, "repair_targets": [0.8919923305511475, 0.01179125439375639, 0.014447511173784733], "repair_candidates": [0.0003714952908921987, 0.0023813764564692974, 0.0001827944943215698, 0.00011223772162338719, 8.232755135395564e-06, 1.2933487880673056e-07, 9.281276902584068e-07, 8.606458141002804e-05, 0.004736074712127447, 0.07253215461969376, 0.00023970846086740494, 0.8919923305511475, 5.33183992956765e-06, 0.01179125439375639, 2.4766326532699168e-05, 1.3799569842376513e-07, 0.014447511173784733, 9.248717105947435e-05, 1.4350514732086594e-07, 1.3488828699337319e-05, 3.890851985488553e-06, 3.289348751422949e-05, 0.00014995408128015697, 8.522543066646904e-05, 3.257612115703523e-05, 2.4007551473914646e-05, 1.4898847666700021e-06, 6.646824203926371e-06, 7.687344805162866e-06, 6.239256435947027e-06, 0.00021671515423804522, 0.0001110189114115201, 1.0795756679726765e-05, 6.807262593611085e-07, 1.327009522356093e-05, 1.1772331163228955e-06, 1.376512045681011e-05, 2.6066391001222655e-07, 1.1280564649496228e-05, 1.2789437278115656e-06, 6.303718237177236e-06, 1.0689776672734297e-06, 2.3709626475465484e-05, 3.6582503071258543e-07, 2.743656523307436e-06, 2.4023194100664114e-07, 5.131438229000196e-05, 9.205923561239615e-05, 1.0436533557367511e-06, 7.772333447064739e-06, 6.851228590676328e-06, 3.1973468139767647e-07, 1.6334517567884177e-05, 4.123062808503164e-06, 4.1440361542299797e-07, 5.91914954384265e-07, 9.884146265903837e-07, 3.289345477242023e-05, 9.591304888090235e-07, 4.374275022200891e-07], "target_probs": 0.9182310700416565}}


{"result": {"time": "2021-02-11 11:56:45.388616", "n_pass": [403, 21, 21], "n_token": 303, "loss": [0.00019941726350225508, 0.07427259534597397], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def __init__(", "self", ",", "request", ",", "*", "args", ",", "**kwargs", ")", ":", "self", ")", ".", "__init__", "(", "request", ",", "*", "args", ",", "**", "kwargs", ")", "#NEWLINE#", "tenant_choices", "=", "[", "(", ")", "]", "#NEWLINE#", "(", "tenants", ",", "has_more", ")", "=", "api", ".", "keystone", ".", "tenant_list", "(", "request", ")", "#NEWLINE#", "for", "tenant", "in", "tenants", ":", "#NEWLINE#", "#INDENT#", "if", "tenant", ".", "enabled", ":", "#NEWLINE#", "#INDENT#", "tenant_choices", ".", "append", "(", "(", "net_type", ".", "id", ",", "tenant", ".", "name", ")", ")", "#NEWLINE#", "#UNINDENT#", "#UNINDENT#", "self", ".", "fields", "[", "'tenant_id'", "]", ".", "choices", "=", "tenant_choices", "#NEWLINE#", "if", ":", "#NEWLINE#", "#INDENT#", "self", ".", "fields", "[", "'net_profile_id'", "]", ".", "choices", "=", "self", ".", "get_network_profile_choices", "(", "request", ")", "#NEWLINE#", "#UNINDENT#", "if", "api", ".", "neutron", ".", "is_extension_supported", "(", "request", ",", "#NEWLINE#", "#INDENT#", "neutron_settings", "#NEWLINE#", "seg_id_range", "=", "neutron_settings", ".", "get", "#NEWLINE#", "self", ".", "seg_id_range", "=", "{", ":", "seg_id_range", ".", ":", "seg_id_range", ".", ",", ",", "#NEWLINE#", "'vxlan'", ":", "seg_id_range", ".", "get", "#NEWLINE#", "seg_id_help", "=", "(", "_", "(", "'For VLAN networks, the VLAN VID on the physical network that realizes the virtual network. Valid VLAN VIDs are %(vlan_min)s through %(vlan_max)s. For GRE or VXLAN networks, the tunnel ID. Valid tunnel IDs for GRE networks are %(gre_min)s through %(gre_max)s. For VXLAN networks, %(vxlan_min)s through %(vxlan_max)s.'", "self", ".", "seg_id_range", "[", "'vlan'", "]", "[", "0", "]", ",", "#NEWLINE#", "'vlan_max'", ":", "self", ".", "seg_id_range", "[", "'vlan'", "]", "[", "1", "]", ",", "#NEWLINE#", "'gre_min'", ":", "self", ".", "seg_id_range", "[", "'gre'", "]", "[", "0", "]", ",", "#NEWLINE#", "'gre_max'", ":", "self", ".", "seg_id_range", "#NEWLINE#", "'vxlan_min'", ":", "self", ".", "seg_id_range", "[", "'vxlan_max'", ":", "self", ".", "seg_id_range", "[", "'vxlan'", "}", ")", "#NEWLINE#", "self", ".", "fields", "[", "'segmentation_id'", "]", ".", "help_text", "=", "seg_id_help", "#NEWLINE#", "supported_provider_types", "=", "neutron_settings", ".", "get", "(", "'supported_provider_types'", "(", "supported_provider_types", "==", "[", "'*'", "]", ")", ":", "#NEWLINE#", "#INDENT#", "network_type_choices", "=", "PROVIDER_TYPES", "#NEWLINE#", "#UNINDENT#", "else", ":", "#NEWLINE#", "#INDENT#", "network_type_choices", "=", "[", "net_type", "for", "net_type", "in", "PROVIDER_TYPES", "if", "(", "net_type", "[", "0", "]", "in", "supported_provider_types", "(", "network_type_choices", ")", "==", "0", ")", ":", "#NEWLINE#", "#INDENT#", "self", ".", "_hide_provider_network_type", "(", ")", "#NEWLINE#", "#UNINDENT#", "else", ":", "#NEWLINE#", "#INDENT#", "self", "=", "network_type_choices", "#NEWLINE#", "#UNINDENT#", "#UNINDENT#", "else", ":", "#NEWLINE#", "#INDENT#", "self", ".", "_hide_provider_network_type", "(", ")"]}}
{"position": {"error_location": 67, "repair_targets": [49, 56, 71], "repair_candidates": [7, 20, 124, 132, 136, 139, 146, 158, 171, 184, 197, 203, 209, 67, 255, 257, 262, 34, 51, 243, 252, 269, 290, 4, 17, 45, 107, 118, 49, 56, 71, 23, 36, 26, 62, 88, 122, 126, 228, 150, 224, 2, 12, 79, 94, 103, 130, 156, 169, 182, 195, 201, 207, 215, 277, 288, 298, 226, 234, 267]}}
{"prediction": {"error_location": 0.9998006224632263, "repair_targets": [0.9016686677932739, 0.009978425689041615, 0.016771510243415833], "repair_candidates": [0.0003019487194251269, 0.0022567708510905504, 0.0001469150447519496, 7.712777005508542e-05, 7.938827366160695e-06, 1.2548542827062192e-07, 9.396555356033787e-07, 8.637719292892143e-05, 0.004410163965076208, 0.062018994241952896, 0.00020450580632314086, 0.9016686677932739, 4.285916020307923e-06, 0.009978425689041615, 1.9998200514237396e-05, 9.466835138027818e-08, 0.016771510243415833, 7.932262815302238e-05, 1.2546639993615827e-07, 7.174581696745008e-06, 1.4643384247392532e-06, 3.2454805477755144e-05, 0.00014759488112758845, 4.9185691750608385e-05, 3.785593435168266e-05, 6.0295965340628754e-06, 7.097114576026797e-07, 8.77838465385139e-06, 8.733581489650533e-05, 0.0006107870140112936, 0.0005862221587449312, 0.00011327635002089664, 7.414507763314759e-06, 8.616319178145204e-07, 7.811268005752936e-06, 1.8071064005198423e-06, 1.3533317542169243e-05, 4.827135171581176e-07, 8.602053640061058e-06, 1.0449118690303294e-06, 8.708268069312908e-06, 1.6721132851671427e-06, 7.3496971708664205e-06, 4.2570161440380616e-07, 2.9574612199212424e-06, 2.6445397338648036e-07, 6.401572318281978e-05, 7.762075983919203e-05, 3.2745256248745136e-06, 7.324988928303355e-06, 9.665445759310387e-06, 2.2786470310620643e-07, 1.6474343283334747e-05, 3.8535426938324235e-06, 4.3825289708365744e-07, 3.7880525383116037e-07, 9.74500153461122e-07, 2.863492954929825e-05, 5.311190989232273e-07, 4.981794745617663e-07], "target_probs": 0.9284185767173767}}


{"result": {"time": "2021-02-11 11:56:45.485868", "n_pass": [404, 22, 22], "n_token": 300, "loss": [0.0009003399754874408, 0.05001024529337883], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def __init__(", "self", ",", "request", ",", "*", "args", ",", "**kwargs", ")", ":", "self", ")", ".", "__init__", "(", "request", ",", "*", "args", ",", "**", "kwargs", ")", "#NEWLINE#", "tenant_choices", "=", "[", "(", ")", "]", "#NEWLINE#", "(", "tenants", ",", "has_more", ")", "=", "api", ".", "keystone", ".", "tenant_list", "(", "request", ")", "#NEWLINE#", "for", "tenant", "in", "tenants", ":", "#NEWLINE#", "#INDENT#", "if", "tenant", ".", "enabled", ":", "#NEWLINE#", "#INDENT#", "tenant_choices", ".", "append", "(", "(", "net_type", ".", "id", ",", "tenant", ".", "name", ")", ")", "#NEWLINE#", "#UNINDENT#", "#UNINDENT#", "self", ".", "fields", "[", "'tenant_id'", "]", ".", "choices", "=", "tenant_choices", "#NEWLINE#", "if", ":", "#NEWLINE#", "#INDENT#", "self", ".", "fields", "[", "'net_profile_id'", "]", ".", "choices", "=", "self", ".", "get_network_profile_choices", "(", "request", ")", "#NEWLINE#", "#UNINDENT#", "if", "api", ".", "neutron", ".", "is_extension_supported", "(", "request", ",", "#NEWLINE#", "#INDENT#", "neutron_settings", "#NEWLINE#", "seg_id_range", "=", "neutron_settings", ".", "get", "#NEWLINE#", "self", ".", "seg_id_range", "=", "{", ":", "seg_id_range", ".", ":", "seg_id_range", ".", "'vxlan'", ":", "seg_id_range", ".", "get", "#NEWLINE#", "seg_id_help", "=", "(", "_", "(", "'For VLAN networks, the VLAN VID on the physical network that realizes the virtual network. Valid VLAN VIDs are %(vlan_min)s through %(vlan_max)s. For GRE or VXLAN networks, the tunnel ID. Valid tunnel IDs for GRE networks are %(gre_min)s through %(gre_max)s. For VXLAN networks, %(vxlan_min)s through %(vxlan_max)s.'", "self", ".", "seg_id_range", "[", "'vlan'", "]", "[", "0", "]", ",", "#NEWLINE#", "'vlan_max'", ":", "self", ".", "seg_id_range", "[", "'vlan'", "]", "[", "1", "]", ",", "#NEWLINE#", "'gre_min'", ":", "self", ".", "seg_id_range", "[", "'gre'", "]", "[", "0", "]", ",", "#NEWLINE#", "'gre_max'", ":", "self", ".", "seg_id_range", "#NEWLINE#", "'vxlan_min'", ":", "self", ".", "seg_id_range", "[", "'vxlan_max'", ":", "self", ".", "seg_id_range", "[", "'vxlan'", "}", ")", "#NEWLINE#", "self", ".", "fields", "[", "'segmentation_id'", "]", ".", "help_text", "=", "seg_id_help", "#NEWLINE#", "supported_provider_types", "=", "neutron_settings", ".", "get", "(", "'supported_provider_types'", "(", "supported_provider_types", "==", "[", "'*'", "]", ")", ":", "#NEWLINE#", "#INDENT#", "network_type_choices", "=", "PROVIDER_TYPES", "#NEWLINE#", "#UNINDENT#", "else", ":", "#NEWLINE#", "#INDENT#", "network_type_choices", "=", "[", "net_type", "for", "net_type", "in", "PROVIDER_TYPES", "if", "(", "net_type", "[", "0", "]", "in", "supported_provider_types", "(", "network_type_choices", ")", "==", "0", ")", ":", "#NEWLINE#", "#INDENT#", "self", ".", "_hide_provider_network_type", "(", ")", "#NEWLINE#", "#UNINDENT#", "else", ":", "#NEWLINE#", "#INDENT#", "self", "=", "network_type_choices", "#NEWLINE#", "#UNINDENT#", "#UNINDENT#", "else", ":", "#NEWLINE#", "#INDENT#", "self", ".", "_hide_provider_network_type", "(", ")"]}}
{"position": {"error_location": 67, "repair_targets": [49, 56, 71], "repair_candidates": [7, 20, 124, 132, 136, 139, 143, 155, 168, 181, 194, 200, 206, 67, 252, 254, 259, 34, 51, 240, 249, 266, 287, 4, 17, 45, 107, 118, 49, 56, 71, 23, 36, 26, 62, 88, 122, 126, 225, 147, 221, 2, 12, 79, 94, 103, 130, 153, 166, 179, 192, 198, 204, 212, 274, 285, 295, 223, 231, 264]}}
{"prediction": {"error_location": 0.9990999698638916, "repair_targets": [0.9185342788696289, 0.01342820469290018, 0.019257163628935814], "repair_candidates": [0.00019987997075077146, 0.001026008278131485, 8.531985804438591e-05, 3.318247036077082e-05, 9.67261348705506e-06, 2.0747400242271397e-07, 1.1576198630791623e-06, 5.1685092330444604e-05, 0.0031425508204847574, 0.041367463767528534, 0.00011389187420718372, 0.9185342788696289, 5.660120223183185e-06, 0.01342820469290018, 2.1231371647445485e-05, 1.6158007838384947e-06, 0.019257163628935814, 0.00013827427756041288, 1.2000781168808317e-07, 4.5747416152153164e-05, 1.7089572793338448e-05, 3.402438960620202e-05, 8.319944754475728e-05, 4.886339229415171e-05, 0.0001489765418227762, 1.2344012247922365e-05, 3.4196652904938674e-06, 4.642805288312957e-05, 0.0002960574929602444, 0.0011543072760105133, 0.00020970306650269777, 0.00010499356721993536, 1.721316402836237e-05, 1.894959154924436e-06, 1.1022319995390717e-05, 3.020835720235482e-06, 1.4956553968659136e-05, 2.1626071884384146e-06, 1.233385773957707e-05, 1.4097458915784955e-06, 1.3215058970672544e-05, 3.164673671562923e-06, 1.545531995361671e-05, 9.839453696258715e-07, 2.543341543059796e-05, 4.1016633645085676e-07, 7.797549915267155e-05, 5.3507003030972555e-05, 1.6695779777364805e-05, 1.602295014890842e-05, 2.278428291901946e-05, 4.062405878357822e-06, 2.254486025776714e-05, 1.2645530659938231e-05, 7.554603485004918e-07, 1.0728259667303064e-06, 2.168069158869912e-06, 2.273045902256854e-05, 4.139387783652637e-07, 1.2855754221163807e-06], "target_probs": 0.9512196779251099}}


{"result": {"time": "2021-02-11 11:56:45.583972", "n_pass": [407, 23, 23], "n_token": 296, "loss": [0.0002768848498817533, 0.058240871876478195], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def __init__(", "self", ",", "request", ",", "*", "args", ",", "**kwargs", ")", ":", "self", ")", ".", "__init__", "(", "request", ",", "*", "args", ",", "**", "kwargs", ")", "#NEWLINE#", "tenant_choices", "=", "[", "(", ")", "]", "#NEWLINE#", "(", "tenants", ",", "has_more", ")", "=", "api", ".", "keystone", ".", "tenant_list", "(", "request", ")", "#NEWLINE#", "for", "tenant", "in", "tenants", ":", "#NEWLINE#", "#INDENT#", "if", "tenant", ".", "enabled", ":", "#NEWLINE#", "#INDENT#", "tenant_choices", ".", "append", "(", "(", "net_type", ".", "id", ",", "tenant", ".", "name", ")", ")", "#NEWLINE#", "#UNINDENT#", "#UNINDENT#", "self", ".", "fields", "[", "'tenant_id'", "]", ".", "choices", "=", "tenant_choices", "#NEWLINE#", "if", ":", "#NEWLINE#", "#INDENT#", "self", ".", "fields", "[", "'net_profile_id'", "]", ".", "choices", "=", "self", ".", "get_network_profile_choices", "(", "request", ")", "#NEWLINE#", "#UNINDENT#", "if", "api", ".", "neutron", ".", "is_extension_supported", "(", "request", ",", "#NEWLINE#", "#INDENT#", "neutron_settings", "#NEWLINE#", "seg_id_range", "=", "neutron_settings", ".", "get", "#NEWLINE#", "self", ".", "seg_id_range", "=", "{", ":", "seg_id_range", ".", ":", "seg_id_range", ".", "'vxlan'", ":", "seg_id_range", ".", "get", "#NEWLINE#", "seg_id_help", "'For VLAN networks, the VLAN VID on the physical network that realizes the virtual network. Valid VLAN VIDs are %(vlan_min)s through %(vlan_max)s. For GRE or VXLAN networks, the tunnel ID. Valid tunnel IDs for GRE networks are %(gre_min)s through %(gre_max)s. For VXLAN networks, %(vxlan_min)s through %(vxlan_max)s.'", "self", ".", "seg_id_range", "[", "'vlan'", "]", "[", "0", "]", ",", "#NEWLINE#", "'vlan_max'", ":", "self", ".", "seg_id_range", "[", "'vlan'", "]", "[", "1", "]", ",", "#NEWLINE#", "'gre_min'", ":", "self", ".", "seg_id_range", "[", "'gre'", "]", "[", "0", "]", ",", "#NEWLINE#", "'gre_max'", ":", "self", ".", "seg_id_range", "#NEWLINE#", "'vxlan_min'", ":", "self", ".", "seg_id_range", "[", "'vxlan_max'", ":", "self", ".", "seg_id_range", "[", "'vxlan'", "}", ")", "#NEWLINE#", "self", ".", "fields", "[", "'segmentation_id'", "]", ".", "help_text", "=", "seg_id_help", "#NEWLINE#", "supported_provider_types", "=", "neutron_settings", ".", "get", "(", "'supported_provider_types'", "(", "supported_provider_types", "==", "[", "'*'", "]", ")", ":", "#NEWLINE#", "#INDENT#", "network_type_choices", "=", "PROVIDER_TYPES", "#NEWLINE#", "#UNINDENT#", "else", ":", "#NEWLINE#", "#INDENT#", "network_type_choices", "=", "[", "net_type", "for", "net_type", "in", "PROVIDER_TYPES", "if", "(", "net_type", "[", "0", "]", "in", "supported_provider_types", "(", "network_type_choices", ")", "==", "0", ")", ":", "#NEWLINE#", "#INDENT#", "self", ".", "_hide_provider_network_type", "(", ")", "#NEWLINE#", "#UNINDENT#", "else", ":", "#NEWLINE#", "#INDENT#", "self", "=", "network_type_choices", "#NEWLINE#", "#UNINDENT#", "#UNINDENT#", "else", ":", "#NEWLINE#", "#INDENT#", "self", ".", "_hide_provider_network_type", "(", ")"]}}
{"position": {"error_location": 67, "repair_targets": [49, 56, 71], "repair_candidates": [7, 20, 124, 132, 136, 139, 143, 151, 164, 177, 190, 196, 202, 67, 248, 250, 255, 34, 51, 236, 245, 262, 283, 4, 17, 45, 107, 118, 49, 56, 71, 23, 36, 26, 62, 88, 122, 126, 221, 147, 217, 2, 12, 79, 94, 103, 130, 149, 162, 175, 188, 194, 200, 208, 270, 281, 291, 219, 227, 260]}}
{"prediction": {"error_location": 0.9997230172157288, "repair_targets": [0.9224293828010559, 0.00967127364128828, 0.011322013102471828], "repair_candidates": [0.00017461497918702662, 0.0011614030227065086, 9.814012446440756e-05, 3.9731494325678796e-05, 5.203096407058183e-06, 1.3945191312814131e-07, 1.0770825156214414e-06, 6.853042577859014e-05, 0.0033308174461126328, 0.05044635757803917, 0.00011394967441447079, 0.9224293828010559, 3.3632406939432258e-06, 0.00967127364128828, 1.7660364392213523e-05, 3.1987966053748096e-07, 0.011322013102471828, 6.247018609428778e-05, 1.0661256766297811e-07, 2.2578642528969795e-05, 1.159689145424636e-05, 2.393926479271613e-05, 6.356957601383328e-05, 4.384487328934483e-05, 8.010314923012629e-05, 8.005750714801252e-06, 2.884894456656184e-06, 2.9154971343814395e-05, 0.00012610529665835202, 0.0003062569594476372, 3.76728166884277e-05, 2.0037084595969645e-06, 3.427243427722715e-06, 3.15975239573163e-06, 8.336978680745233e-06, 1.708678041723033e-06, 1.2621713722182903e-05, 3.3975384212681092e-06, 1.5117409930098802e-05, 1.181413949780108e-06, 1.4971099517424591e-05, 3.3855001220217673e-06, 1.0675806151994038e-05, 1.4752808965567965e-06, 4.7237945182132535e-06, 3.0228650302888127e-06, 3.299537638667971e-05, 9.567764936946332e-05, 3.992652182205347e-06, 1.2460991456464399e-05, 1.3416472938843071e-05, 7.891934501458309e-07, 1.536426498205401e-05, 1.5215085113595705e-05, 4.881072186435631e-07, 1.5709421177234617e-06, 2.985065634675266e-07, 1.5775516658322886e-05, 1.4665087633147778e-07, 2.9296811021595204e-07], "target_probs": 0.9434226751327515}}


{"result": {"time": "2021-02-11 11:56:45.681711", "n_pass": [409, 24, 24], "n_token": 292, "loss": [0.0001902399235405028, 0.05402636528015137], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def __init__(", "self", ",", "request", ",", "*", "args", ",", "**kwargs", ")", ":", "self", ")", ".", "__init__", "(", "request", ",", "*", "args", ",", "**", "kwargs", ")", "#NEWLINE#", "tenant_choices", "=", "[", "(", ")", "]", "#NEWLINE#", "(", "tenants", ",", "has_more", ")", "=", "api", ".", "keystone", ".", "tenant_list", "(", "request", ")", "#NEWLINE#", "for", "tenant", "in", "tenants", ":", "#NEWLINE#", "#INDENT#", "if", "tenant", ".", "enabled", ":", "#NEWLINE#", "#INDENT#", "tenant_choices", ".", "append", "(", "(", "net_type", ".", "id", ",", "tenant", ".", "name", ")", ")", "#NEWLINE#", "#UNINDENT#", "#UNINDENT#", "self", ".", "fields", "[", "'tenant_id'", "]", ".", "choices", "=", "tenant_choices", "#NEWLINE#", "if", ":", "#NEWLINE#", "#INDENT#", "self", ".", "fields", "[", "'net_profile_id'", "]", ".", "choices", "=", "self", ".", "get_network_profile_choices", "(", "request", ")", "#NEWLINE#", "#UNINDENT#", "if", "api", ".", "neutron", ".", "is_extension_supported", "(", "request", ",", "#NEWLINE#", "#INDENT#", "neutron_settings", "#NEWLINE#", "seg_id_range", "=", "neutron_settings", ".", "get", "#NEWLINE#", "self", ".", "seg_id_range", "=", "{", ":", "seg_id_range", ".", ":", "seg_id_range", ".", "'vxlan'", ":", "seg_id_range", ".", "get", "#NEWLINE#", "seg_id_help", "'For VLAN networks, the VLAN VID on the physical network that realizes the virtual network. Valid VLAN VIDs are %(vlan_min)s through %(vlan_max)s. For GRE or VXLAN networks, the tunnel ID. Valid tunnel IDs for GRE networks are %(gre_min)s through %(gre_max)s. For VXLAN networks, %(vxlan_min)s through %(vxlan_max)s.'", "self", ".", "seg_id_range", "0", "]", ",", "#NEWLINE#", "'vlan_max'", ":", "self", ".", "seg_id_range", "[", "'vlan'", "]", "[", "1", "]", ",", "#NEWLINE#", "'gre_min'", ":", "self", ".", "seg_id_range", "[", "'gre'", "]", "[", "0", "]", ",", "#NEWLINE#", "'gre_max'", ":", "self", ".", "seg_id_range", "#NEWLINE#", "'vxlan_min'", ":", "self", ".", "seg_id_range", "[", "'vxlan_max'", ":", "self", ".", "seg_id_range", "[", "'vxlan'", "}", ")", "#NEWLINE#", "self", ".", "fields", "[", "'segmentation_id'", "]", ".", "help_text", "=", "seg_id_help", "#NEWLINE#", "supported_provider_types", "=", "neutron_settings", ".", "get", "(", "'supported_provider_types'", "(", "supported_provider_types", "==", "[", "'*'", "]", ")", ":", "#NEWLINE#", "#INDENT#", "network_type_choices", "=", "PROVIDER_TYPES", "#NEWLINE#", "#UNINDENT#", "else", ":", "#NEWLINE#", "#INDENT#", "network_type_choices", "=", "[", "net_type", "for", "net_type", "in", "PROVIDER_TYPES", "if", "(", "net_type", "[", "0", "]", "in", "supported_provider_types", "(", "network_type_choices", ")", "==", "0", ")", ":", "#NEWLINE#", "#INDENT#", "self", ".", "_hide_provider_network_type", "(", ")", "#NEWLINE#", "#UNINDENT#", "else", ":", "#NEWLINE#", "#INDENT#", "self", "=", "network_type_choices", "#NEWLINE#", "#UNINDENT#", "#UNINDENT#", "else", ":", "#NEWLINE#", "#INDENT#", "self", ".", "_hide_provider_network_type", "(", ")"]}}
{"position": {"error_location": 67, "repair_targets": [49, 56, 71], "repair_candidates": [7, 20, 124, 132, 136, 139, 143, 151, 160, 173, 186, 192, 198, 67, 244, 246, 251, 34, 51, 232, 241, 258, 279, 4, 17, 45, 107, 118, 49, 56, 71, 23, 36, 26, 62, 88, 122, 126, 217, 147, 213, 2, 12, 79, 94, 103, 130, 149, 158, 171, 184, 190, 196, 204, 266, 277, 287, 215, 223, 256]}}
{"prediction": {"error_location": 0.9998098015785217, "repair_targets": [0.9298937916755676, 0.008357626385986805, 0.009155678562819958], "repair_candidates": [0.00019126982078887522, 0.0014239615993574262, 0.00011276087025180459, 4.8866986617213115e-05, 4.877319497609278e-06, 1.2680456507041526e-07, 8.297275826407713e-07, 4.938510392094031e-05, 0.0035331828985363245, 0.046076737344264984, 0.00014662537432741374, 0.9298937916755676, 4.023690507892752e-06, 0.008357626385986805, 1.7030419257935137e-05, 1.4326259645258688e-07, 0.009155678562819958, 5.262765262159519e-05, 1.3920384844823275e-07, 1.8932894818135537e-05, 1.0688102520362008e-05, 2.396969466644805e-05, 6.883907917654142e-05, 3.8447771657956764e-05, 9.125603537540883e-05, 6.9076381805643905e-06, 1.979514991035103e-06, 2.1715948605560698e-05, 0.00010556618508417159, 0.00023668320500291884, 4.5660166506422684e-05, 1.988314807022107e-06, 4.194923803879647e-06, 4.063863343617413e-06, 8.219499250117224e-06, 1.1215363429073477e-06, 7.4618183134589344e-06, 4.789374088431941e-06, 1.19731894301367e-05, 1.2445285619833157e-06, 8.742446880205534e-06, 1.1433872941779555e-06, 1.3021376616961788e-05, 8.582051691519155e-07, 1.1996878583886428e-06, 3.3847670692921383e-06, 2.3016327759251e-05, 9.928608051268384e-05, 1.915717575684539e-06, 6.563839178852504e-06, 8.74392208061181e-06, 6.128772724878218e-07, 2.1167872546357103e-05, 7.35085632186383e-06, 4.723328288491757e-07, 1.9728361166926334e-06, 4.768779717778671e-07, 1.425787831976777e-05, 1.3636488915835798e-07, 2.6755711246551073e-07], "target_probs": 0.9474071264266968}}


{"result": {"time": "2021-02-11 11:56:45.779268", "n_pass": [410, 25, 25], "n_token": 288, "loss": [0.00018630675913300365, 0.051509350538253784], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def __init__(", "self", ",", "request", ",", "*", "args", ",", "**kwargs", ")", ":", "self", ")", ".", "__init__", "(", "request", ",", "*", "args", ",", "**", "kwargs", ")", "#NEWLINE#", "tenant_choices", "=", "[", "(", ")", "]", "#NEWLINE#", "(", "tenants", ",", "has_more", ")", "=", "api", ".", "keystone", ".", "tenant_list", "(", "request", ")", "#NEWLINE#", "for", "tenant", "in", "tenants", ":", "#NEWLINE#", "#INDENT#", "if", "tenant", ".", "enabled", ":", "#NEWLINE#", "#INDENT#", "tenant_choices", ".", "append", "(", "(", "net_type", ".", "id", ",", "tenant", ".", "name", ")", ")", "#NEWLINE#", "#UNINDENT#", "#UNINDENT#", "self", ".", "fields", "[", "'tenant_id'", "]", ".", "choices", "=", "tenant_choices", "#NEWLINE#", "if", ":", "#NEWLINE#", "#INDENT#", "self", ".", "fields", "[", "'net_profile_id'", "]", ".", "choices", "=", "self", ".", "get_network_profile_choices", "(", "request", ")", "#NEWLINE#", "#UNINDENT#", "if", "api", ".", "neutron", ".", "is_extension_supported", "(", "request", ",", "#NEWLINE#", "#INDENT#", "neutron_settings", "#NEWLINE#", "seg_id_range", "=", "neutron_settings", ".", "get", "#NEWLINE#", "self", ".", "seg_id_range", "=", "{", ":", "seg_id_range", ".", ":", "seg_id_range", ".", "'vxlan'", ":", "seg_id_range", ".", "get", "#NEWLINE#", "seg_id_help", "'For VLAN networks, the VLAN VID on the physical network that realizes the virtual network. Valid VLAN VIDs are %(vlan_min)s through %(vlan_max)s. For GRE or VXLAN networks, the tunnel ID. Valid tunnel IDs for GRE networks are %(gre_min)s through %(gre_max)s. For VXLAN networks, %(vxlan_min)s through %(vxlan_max)s.'", "self", ".", "seg_id_range", "'vlan_max'", ":", "self", ".", "seg_id_range", "[", "'vlan'", "]", "[", "1", "]", ",", "#NEWLINE#", "'gre_min'", ":", "self", ".", "seg_id_range", "[", "'gre'", "]", "[", "0", "]", ",", "#NEWLINE#", "'gre_max'", ":", "self", ".", "seg_id_range", "#NEWLINE#", "'vxlan_min'", ":", "self", ".", "seg_id_range", "[", "'vxlan_max'", ":", "self", ".", "seg_id_range", "[", "'vxlan'", "}", ")", "#NEWLINE#", "self", ".", "fields", "[", "'segmentation_id'", "]", ".", "help_text", "=", "seg_id_help", "#NEWLINE#", "supported_provider_types", "=", "neutron_settings", ".", "get", "(", "'supported_provider_types'", "(", "supported_provider_types", "==", "[", "'*'", "]", ")", ":", "#NEWLINE#", "#INDENT#", "network_type_choices", "=", "PROVIDER_TYPES", "#NEWLINE#", "#UNINDENT#", "else", ":", "#NEWLINE#", "#INDENT#", "network_type_choices", "=", "[", "net_type", "for", "net_type", "in", "PROVIDER_TYPES", "if", "(", "net_type", "[", "0", "]", "in", "supported_provider_types", "(", "network_type_choices", ")", "==", "0", ")", ":", "#NEWLINE#", "#INDENT#", "self", ".", "_hide_provider_network_type", "(", ")", "#NEWLINE#", "#UNINDENT#", "else", ":", "#NEWLINE#", "#INDENT#", "self", "=", "network_type_choices", "#NEWLINE#", "#UNINDENT#", "#UNINDENT#", "else", ":", "#NEWLINE#", "#INDENT#", "self", ".", "_hide_provider_network_type", "(", ")"]}}
{"position": {"error_location": 67, "repair_targets": [49, 56, 71], "repair_candidates": [7, 20, 124, 132, 136, 139, 143, 151, 156, 169, 182, 188, 194, 67, 240, 242, 247, 34, 51, 228, 237, 254, 275, 4, 17, 45, 107, 118, 49, 56, 71, 23, 36, 26, 62, 88, 122, 126, 213, 147, 209, 2, 12, 79, 94, 103, 130, 149, 154, 167, 180, 186, 192, 200, 262, 273, 283, 211, 219, 252]}}
{"prediction": {"error_location": 0.9998137354850769, "repair_targets": [0.9342561960220337, 0.007526690606027842, 0.008011901751160622], "repair_candidates": [0.00019424718630034477, 0.0013105603866279125, 9.891633089864627e-05, 4.194677239865996e-05, 3.879458290612092e-06, 1.0368254521608833e-07, 7.345300900851726e-07, 4.636230005417019e-05, 0.00299055315554142, 0.0443023182451725, 0.0001467950496589765, 0.9342561960220337, 3.555197054083692e-06, 0.007526690606027842, 1.5957026334945112e-05, 1.150610202671487e-07, 0.008011901751160622, 3.501763421809301e-05, 1.2687372930031415e-07, 1.260109456779901e-05, 8.253909982158802e-06, 2.116354698955547e-05, 6.856493564555421e-05, 3.55338524968829e-05, 8.016434003366157e-05, 6.571272024302743e-06, 2.49539175456448e-06, 2.8922560886712745e-05, 0.00011637133138719946, 0.00029677574639208615, 3.772616037167609e-05, 2.0728086838062154e-06, 6.642463631578721e-06, 1.1029931556549855e-05, 1.3560592378780711e-05, 1.4826204051132663e-06, 1.150126445281785e-05, 4.328034265199676e-06, 1.5227839867293369e-05, 2.985775381603162e-06, 1.1626754712779075e-05, 1.574257680658775e-06, 1.909203092509415e-05, 8.936677886595135e-07, 2.2989854642219143e-06, 2.2340555005939677e-06, 2.0269126252969727e-05, 7.742027810309082e-05, 2.465837496856693e-06, 1.4521431694447529e-05, 1.4690449461340904e-05, 5.319713523022074e-07, 2.782230149023235e-05, 2.3634402168681845e-05, 3.447298979608604e-07, 6.451726335399144e-07, 1.7082921033306775e-07, 9.374757610203233e-06, 1.940110365694636e-07, 1.9434584430655377e-07], "target_probs": 0.9497947692871094}}


{"result": {"time": "2021-02-11 11:56:45.877487", "n_pass": [413, 26, 26], "n_token": 284, "loss": [0.00012683063687290996, 0.0473022498190403], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def __init__(", "self", ",", "request", ",", "*", "args", ",", "**kwargs", ")", ":", "self", ")", ".", "__init__", "(", "request", ",", "*", "args", ",", "**", "kwargs", ")", "#NEWLINE#", "tenant_choices", "=", "[", "(", ")", "]", "#NEWLINE#", "(", "tenants", ",", "has_more", ")", "=", "api", ".", "keystone", ".", "tenant_list", "(", "request", ")", "#NEWLINE#", "for", "tenant", "in", "tenants", ":", "#NEWLINE#", "#INDENT#", "if", "tenant", ".", "enabled", ":", "#NEWLINE#", "#INDENT#", "tenant_choices", ".", "append", "(", "(", "net_type", ".", "id", ",", "tenant", ".", "name", ")", ")", "#NEWLINE#", "#UNINDENT#", "#UNINDENT#", "self", ".", "fields", "[", "'tenant_id'", "]", ".", "choices", "=", "tenant_choices", "#NEWLINE#", "if", ":", "#NEWLINE#", "#INDENT#", "self", ".", "fields", "[", "'net_profile_id'", "]", ".", "choices", "=", "self", ".", "get_network_profile_choices", "(", "request", ")", "#NEWLINE#", "#UNINDENT#", "if", "api", ".", "neutron", ".", "is_extension_supported", "(", "request", ",", "#NEWLINE#", "#INDENT#", "neutron_settings", "#NEWLINE#", "seg_id_range", "=", "neutron_settings", ".", "get", "#NEWLINE#", "self", ".", "seg_id_range", "=", "{", ":", "seg_id_range", ".", ":", "seg_id_range", ".", "'vxlan'", ":", "seg_id_range", ".", "get", "#NEWLINE#", "seg_id_help", "'For VLAN networks, the VLAN VID on the physical network that realizes the virtual network. Valid VLAN VIDs are %(vlan_min)s through %(vlan_max)s. For GRE or VXLAN networks, the tunnel ID. Valid tunnel IDs for GRE networks are %(gre_min)s through %(gre_max)s. For VXLAN networks, %(vxlan_min)s through %(vxlan_max)s.'", "self", ".", "seg_id_range", "'vlan_max'", ":", "self", ".", "seg_id_range", "[", "'vlan'", "]", "#NEWLINE#", "'gre_min'", ":", "self", ".", "seg_id_range", "[", "'gre'", "]", "[", "0", "]", ",", "#NEWLINE#", "'gre_max'", ":", "self", ".", "seg_id_range", "#NEWLINE#", "'vxlan_min'", ":", "self", ".", "seg_id_range", "[", "'vxlan_max'", ":", "self", ".", "seg_id_range", "[", "'vxlan'", "}", ")", "#NEWLINE#", "self", ".", "fields", "[", "'segmentation_id'", "]", ".", "help_text", "=", "seg_id_help", "#NEWLINE#", "supported_provider_types", "=", "neutron_settings", ".", "get", "(", "'supported_provider_types'", "(", "supported_provider_types", "==", "[", "'*'", "]", ")", ":", "#NEWLINE#", "#INDENT#", "network_type_choices", "=", "PROVIDER_TYPES", "#NEWLINE#", "#UNINDENT#", "else", ":", "#NEWLINE#", "#INDENT#", "network_type_choices", "=", "[", "net_type", "for", "net_type", "in", "PROVIDER_TYPES", "if", "(", "net_type", "[", "0", "]", "in", "supported_provider_types", "(", "network_type_choices", ")", "==", "0", ")", ":", "#NEWLINE#", "#INDENT#", "self", ".", "_hide_provider_network_type", "(", ")", "#NEWLINE#", "#UNINDENT#", "else", ":", "#NEWLINE#", "#INDENT#", "self", "=", "network_type_choices", "#NEWLINE#", "#UNINDENT#", "#UNINDENT#", "else", ":", "#NEWLINE#", "#INDENT#", "self", ".", "_hide_provider_network_type", "(", ")"]}}
{"position": {"error_location": 67, "repair_targets": [49, 56, 71], "repair_candidates": [7, 20, 124, 132, 136, 139, 143, 151, 156, 165, 178, 184, 190, 67, 236, 238, 243, 34, 51, 224, 233, 250, 271, 4, 17, 45, 107, 118, 49, 56, 71, 23, 36, 26, 62, 88, 122, 126, 209, 147, 205, 2, 12, 79, 94, 103, 130, 149, 154, 163, 176, 182, 188, 196, 258, 269, 279, 207, 215, 248]}}
{"prediction": {"error_location": 0.9998733997344971, "repair_targets": [0.937260627746582, 0.008196860551834106, 0.00834161601960659], "repair_candidates": [0.00016771933587733656, 0.0008774110465310514, 6.548495730385184e-05, 3.401931462576613e-05, 2.1285256934788777e-06, 6.951380981945476e-08, 3.700855586430407e-07, 3.567635212675668e-05, 0.0024099163711071014, 0.04175637662410736, 7.59809699957259e-05, 0.937260627746582, 3.496801355140633e-06, 0.008196860551834106, 9.357006092614029e-06, 1.0771522340746742e-07, 0.00834161601960659, 1.9866634829668328e-05, 7.278485014694525e-08, 6.828375262557529e-06, 5.391432296164567e-06, 1.2630628589249682e-05, 4.4565214921021834e-05, 2.252432568639051e-05, 5.13834529556334e-05, 4.979905952495756e-06, 1.4910054915162618e-06, 1.59633818839211e-05, 7.415485742967576e-05, 0.000284644978819415, 2.2723619622411206e-05, 1.0046546776720788e-06, 4.175670255790465e-06, 4.664076186600141e-06, 9.031869012687821e-06, 7.494343776670576e-07, 1.0339409527659882e-05, 1.2552926591524738e-06, 7.178584382927511e-06, 1.9387623524380615e-06, 1.0329976248613093e-05, 1.1660523568934877e-06, 1.3959725947643165e-05, 3.845543972147425e-07, 1.6447722828161204e-06, 1.5673438156227348e-06, 8.719342986296397e-06, 5.9156998759135604e-05, 1.582299091751338e-06, 7.872921742091421e-06, 5.5538284868816845e-06, 1.9035373099995923e-07, 2.5277582608396187e-05, 1.416874692949932e-05, 6.751712078312266e-08, 2.413029847048165e-07, 8.685655927820335e-08, 3.3015107874234673e-06, 9.050554439227199e-08, 8.20467676021508e-08], "target_probs": 0.9537990689277649}}


{"result": {"time": "2021-02-11 11:56:45.976044", "n_pass": [416, 27, 27], "n_token": 280, "loss": [0.00011681827891152352, 0.047775737941265106], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def __init__(", "self", ",", "request", ",", "*", "args", ",", "**kwargs", ")", ":", "self", ")", ".", "__init__", "(", "request", ",", "*", "args", ",", "**", "kwargs", ")", "#NEWLINE#", "tenant_choices", "=", "[", "(", ")", "]", "#NEWLINE#", "(", "tenants", ",", "has_more", ")", "=", "api", ".", "keystone", ".", "tenant_list", "(", "request", ")", "#NEWLINE#", "for", "tenant", "in", "tenants", ":", "#NEWLINE#", "#INDENT#", "if", "tenant", ".", "enabled", ":", "#NEWLINE#", "#INDENT#", "tenant_choices", ".", "append", "(", "(", "net_type", ".", "id", ",", "tenant", ".", "name", ")", ")", "#NEWLINE#", "#UNINDENT#", "#UNINDENT#", "self", ".", "fields", "[", "'tenant_id'", "]", ".", "choices", "=", "tenant_choices", "#NEWLINE#", "if", ":", "#NEWLINE#", "#INDENT#", "self", ".", "fields", "[", "'net_profile_id'", "]", ".", "choices", "=", "self", ".", "get_network_profile_choices", "(", "request", ")", "#NEWLINE#", "#UNINDENT#", "if", "api", ".", "neutron", ".", "is_extension_supported", "(", "request", ",", "#NEWLINE#", "#INDENT#", "neutron_settings", "#NEWLINE#", "seg_id_range", "=", "neutron_settings", ".", "get", "#NEWLINE#", "self", ".", "seg_id_range", "=", "{", ":", "seg_id_range", ".", ":", "seg_id_range", ".", "'vxlan'", ":", "seg_id_range", ".", "get", "#NEWLINE#", "seg_id_help", "'For VLAN networks, the VLAN VID on the physical network that realizes the virtual network. Valid VLAN VIDs are %(vlan_min)s through %(vlan_max)s. For GRE or VXLAN networks, the tunnel ID. Valid tunnel IDs for GRE networks are %(gre_min)s through %(gre_max)s. For VXLAN networks, %(vxlan_min)s through %(vxlan_max)s.'", "self", ".", "seg_id_range", "'vlan_max'", ":", "self", ".", "seg_id_range", "[", "'vlan'", "]", "#NEWLINE#", "'gre_min'", ":", "self", ".", "seg_id_range", "[", "'gre'", ",", "#NEWLINE#", "'gre_max'", ":", "self", ".", "seg_id_range", "#NEWLINE#", "'vxlan_min'", ":", "self", ".", "seg_id_range", "[", "'vxlan_max'", ":", "self", ".", "seg_id_range", "[", "'vxlan'", "}", ")", "#NEWLINE#", "self", ".", "fields", "[", "'segmentation_id'", "]", ".", "help_text", "=", "seg_id_help", "#NEWLINE#", "supported_provider_types", "=", "neutron_settings", ".", "get", "(", "'supported_provider_types'", "(", "supported_provider_types", "==", "[", "'*'", "]", ")", ":", "#NEWLINE#", "#INDENT#", "network_type_choices", "=", "PROVIDER_TYPES", "#NEWLINE#", "#UNINDENT#", "else", ":", "#NEWLINE#", "#INDENT#", "network_type_choices", "=", "[", "net_type", "for", "net_type", "in", "PROVIDER_TYPES", "if", "(", "net_type", "[", "0", "]", "in", "supported_provider_types", "(", "network_type_choices", ")", "==", "0", ")", ":", "#NEWLINE#", "#INDENT#", "self", ".", "_hide_provider_network_type", "(", ")", "#NEWLINE#", "#UNINDENT#", "else", ":", "#NEWLINE#", "#INDENT#", "self", "=", "network_type_choices", "#NEWLINE#", "#UNINDENT#", "#UNINDENT#", "else", ":", "#NEWLINE#", "#INDENT#", "self", ".", "_hide_provider_network_type", "(", ")"]}}
{"position": {"error_location": 67, "repair_targets": [49, 56, 71], "repair_candidates": [7, 20, 124, 132, 136, 139, 143, 151, 156, 165, 174, 180, 186, 67, 232, 234, 239, 34, 51, 220, 229, 246, 267, 4, 17, 45, 107, 118, 49, 56, 71, 23, 36, 26, 62, 88, 122, 126, 205, 147, 201, 2, 12, 79, 94, 103, 130, 149, 154, 163, 172, 178, 184, 192, 254, 265, 275, 203, 211, 244]}}
{"prediction": {"error_location": 0.9998831748962402, "repair_targets": [0.9353115558624268, 0.008851931430399418, 0.009184043854475021], "repair_candidates": [0.00019431181135587394, 0.0009811308700591326, 6.628247501794249e-05, 3.7461421015905216e-05, 2.324166416656226e-06, 5.49717675824013e-08, 4.1392880234525364e-07, 3.201251820428297e-05, 0.002381738042458892, 0.042114295065402985, 9.9149503512308e-05, 0.9353115558624268, 3.5124569421896012e-06, 0.008851931430399418, 9.3186708909343e-06, 1.1112791042933168e-07, 0.009184043854475021, 1.6328094716300257e-05, 7.398431023375451e-08, 5.494897322932957e-06, 4.523739789874526e-06, 1.712426819722168e-05, 6.191984721226618e-05, 2.158089409931563e-05, 3.7277954106684774e-05, 4.431548859429313e-06, 1.1397821708669653e-06, 1.4549305888067465e-05, 7.091532461345196e-05, 0.0002578581916168332, 2.081485763483215e-05, 9.914589327308931e-07, 3.557007403287571e-06, 4.194469511276111e-06, 7.004968210821971e-06, 6.228502797966939e-07, 7.54425855120644e-06, 1.3280847497298964e-06, 3.899364855897147e-06, 1.7295210454904009e-06, 8.596879524702672e-06, 2.2713493308401667e-06, 1.1168091077706777e-05, 3.0124616046123265e-07, 2.5898345938912826e-06, 1.1842728326882934e-06, 2.1100786398164928e-05, 6.461385783040896e-05, 1.4755672737010173e-06, 5.221416358835995e-06, 2.8935123737028334e-06, 4.018118886506272e-07, 3.35432960127946e-05, 4.612161774275592e-06, 1.6536124292088061e-07, 3.324987005726143e-07, 8.014028196612344e-08, 4.626337613444775e-06, 9.696142200255053e-08, 1.5553312948668463e-07], "target_probs": 0.9533475637435913}}


{"result": {"time": "2021-02-11 11:56:46.072977", "n_pass": [417, 28, 28], "n_token": 276, "loss": [0.00023934361524879932, 0.06288843601942062], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def __init__(", "self", ",", "request", ",", "*", "args", ",", "**kwargs", ")", ":", "self", ")", ".", "__init__", "(", "request", ",", "*", "args", ",", "**", "kwargs", ")", "#NEWLINE#", "tenant_choices", "=", "[", "(", ")", "]", "#NEWLINE#", "(", "tenants", ",", "has_more", ")", "=", "api", ".", "keystone", ".", "tenant_list", "(", "request", ")", "#NEWLINE#", "for", "tenant", "in", "tenants", ":", "#NEWLINE#", "#INDENT#", "if", "tenant", ".", "enabled", ":", "#NEWLINE#", "#INDENT#", "tenant_choices", ".", "append", "(", "(", "net_type", ".", "id", ",", "tenant", ".", "name", ")", ")", "#NEWLINE#", "#UNINDENT#", "#UNINDENT#", "self", ".", "fields", "[", "'tenant_id'", "]", ".", "choices", "=", "tenant_choices", "#NEWLINE#", "if", ":", "#NEWLINE#", "#INDENT#", "self", ".", "fields", "[", "'net_profile_id'", "]", ".", "choices", "=", "self", ".", "get_network_profile_choices", "(", "request", ")", "#NEWLINE#", "#UNINDENT#", "if", "api", ".", "neutron", ".", "is_extension_supported", "(", "request", ",", "#NEWLINE#", "#INDENT#", "neutron_settings", "#NEWLINE#", "seg_id_range", "=", "neutron_settings", ".", "get", "#NEWLINE#", "self", ".", "seg_id_range", "=", "{", ":", "seg_id_range", ".", ":", "seg_id_range", ".", "'vxlan'", ":", "seg_id_range", ".", "get", "#NEWLINE#", "seg_id_help", "'For VLAN networks, the VLAN VID on the physical network that realizes the virtual network. Valid VLAN VIDs are %(vlan_min)s through %(vlan_max)s. For GRE or VXLAN networks, the tunnel ID. Valid tunnel IDs for GRE networks are %(gre_min)s through %(gre_max)s. For VXLAN networks, %(vxlan_min)s through %(vxlan_max)s.'", "self", ".", "seg_id_range", "'vlan_max'", ":", "self", ".", "seg_id_range", "[", "'vlan'", "]", "#NEWLINE#", "'gre_min'", ":", "self", ".", "seg_id_range", "[", "'gre'", "self", ".", "seg_id_range", "#NEWLINE#", "'vxlan_min'", ":", "self", ".", "seg_id_range", "[", "'vxlan_max'", ":", "self", ".", "seg_id_range", "[", "'vxlan'", "}", ")", "#NEWLINE#", "self", ".", "fields", "[", "'segmentation_id'", "]", ".", "help_text", "=", "seg_id_help", "#NEWLINE#", "supported_provider_types", "=", "neutron_settings", ".", "get", "(", "'supported_provider_types'", "(", "supported_provider_types", "==", "[", "'*'", "]", ")", ":", "#NEWLINE#", "#INDENT#", "network_type_choices", "=", "PROVIDER_TYPES", "#NEWLINE#", "#UNINDENT#", "else", ":", "#NEWLINE#", "#INDENT#", "network_type_choices", "=", "[", "net_type", "for", "net_type", "in", "PROVIDER_TYPES", "if", "(", "net_type", "[", "0", "]", "in", "supported_provider_types", "(", "network_type_choices", ")", "==", "0", ")", ":", "#NEWLINE#", "#INDENT#", "self", ".", "_hide_provider_network_type", "(", ")", "#NEWLINE#", "#UNINDENT#", "else", ":", "#NEWLINE#", "#INDENT#", "self", "=", "network_type_choices", "#NEWLINE#", "#UNINDENT#", "#UNINDENT#", "else", ":", "#NEWLINE#", "#INDENT#", "self", ".", "_hide_provider_network_type", "(", ")"]}}
{"position": {"error_location": 67, "repair_targets": [49, 56, 71], "repair_candidates": [7, 20, 124, 132, 136, 139, 143, 151, 156, 165, 170, 176, 182, 67, 228, 230, 235, 34, 51, 216, 225, 242, 263, 4, 17, 45, 107, 118, 49, 56, 71, 23, 36, 26, 62, 88, 122, 126, 201, 147, 197, 2, 12, 79, 94, 103, 130, 149, 154, 163, 168, 174, 180, 188, 250, 261, 271, 199, 207, 240]}}
{"prediction": {"error_location": 0.9997606873512268, "repair_targets": [0.917609691619873, 0.010016198270022869, 0.011422330513596535], "repair_candidates": [0.00020905351266264915, 0.001164765446446836, 9.241345833288506e-05, 4.5318869524635375e-05, 4.983466624253197e-06, 7.951027924946175e-08, 6.23975324742787e-07, 4.5815613702870905e-05, 0.003547959728166461, 0.05428440496325493, 0.00011200002336408943, 0.917609691619873, 3.8885891626705416e-06, 0.010016198270022869, 1.648655961616896e-05, 1.8117616207291576e-07, 0.011422330513596535, 4.039209306938574e-05, 1.1874574568082608e-07, 1.2131723451602738e-05, 5.9436579249450006e-06, 2.6988558602170087e-05, 9.153711289400235e-05, 2.4129965822794475e-05, 7.074019958963618e-05, 5.0868966354755685e-06, 1.8459360262568225e-06, 3.576876042643562e-05, 0.00011610341607593, 0.0005443263798952103, 5.274577415548265e-05, 1.8707934259509784e-06, 7.595524493808625e-06, 1.423475259798579e-05, 2.2459984393208288e-05, 2.073273662972497e-06, 3.038781142095104e-05, 1.4908605407981668e-05, 9.427872100786772e-06, 3.374227617314318e-06, 1.1573874871828593e-05, 1.540891571494285e-05, 3.652370287454687e-05, 1.585927179803548e-06, 6.530770406243391e-06, 2.319375653314637e-06, 8.557483670301735e-05, 4.743795216199942e-05, 6.064204171707388e-06, 1.611037805560045e-05, 1.658921792113688e-05, 5.267242499940039e-07, 1.5043544408399612e-05, 8.433617949776817e-06, 4.6141269649524475e-07, 8.237951192313631e-07, 2.091534042847343e-06, 1.5975710994098336e-05, 2.125387794649214e-07, 3.6016754734191636e-07], "target_probs": 0.9390482306480408}}


{"result": {"time": "2021-02-11 11:56:46.172250", "n_pass": [422, 29, 29], "n_token": 272, "loss": [0.00024732868769206107, 0.05797763913869858], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def __init__(", "self", ",", "request", ",", "*", "args", ",", "**kwargs", ")", ":", "self", ")", ".", "__init__", "(", "request", ",", "*", "args", ",", "**", "kwargs", ")", "#NEWLINE#", "tenant_choices", "=", "[", "(", ")", "]", "#NEWLINE#", "(", "tenants", ",", "has_more", ")", "=", "api", ".", "keystone", ".", "tenant_list", "(", "request", ")", "#NEWLINE#", "for", "tenant", "in", "tenants", ":", "#NEWLINE#", "#INDENT#", "if", "tenant", ".", "enabled", ":", "#NEWLINE#", "#INDENT#", "tenant_choices", ".", "append", "(", "(", "net_type", ".", "id", ",", "tenant", ".", "name", ")", ")", "#NEWLINE#", "#UNINDENT#", "#UNINDENT#", "self", ".", "fields", "[", "'tenant_id'", "]", ".", "choices", "=", "tenant_choices", "#NEWLINE#", "if", ":", "#NEWLINE#", "#INDENT#", "self", ".", "fields", "[", "'net_profile_id'", "]", ".", "choices", "=", "self", ".", "get_network_profile_choices", "(", "request", ")", "#NEWLINE#", "#UNINDENT#", "if", "api", ".", "neutron", ".", "is_extension_supported", "(", "request", ",", "#NEWLINE#", "#INDENT#", "neutron_settings", "#NEWLINE#", "seg_id_range", "=", "neutron_settings", ".", "get", "#NEWLINE#", "self", ".", "seg_id_range", "=", "{", ":", "seg_id_range", ".", ":", "seg_id_range", ".", "'vxlan'", ":", "seg_id_range", ".", "get", "#NEWLINE#", "seg_id_help", "'For VLAN networks, the VLAN VID on the physical network that realizes the virtual network. Valid VLAN VIDs are %(vlan_min)s through %(vlan_max)s. For GRE or VXLAN networks, the tunnel ID. Valid tunnel IDs for GRE networks are %(gre_min)s through %(gre_max)s. For VXLAN networks, %(vxlan_min)s through %(vxlan_max)s.'", "self", ".", "seg_id_range", "'vlan_max'", ":", "self", ".", "seg_id_range", "[", "'vlan'", "]", "#NEWLINE#", "'gre_min'", ":", "self", ".", "seg_id_range", "[", "'gre'", "self", ".", "seg_id_range", "#NEWLINE#", "'vxlan_min'", ":", "self", ".", "seg_id_range", "[", "'vxlan_max'", ":", "self", ".", "seg_id_range", "[", "self", ".", "fields", "[", "'segmentation_id'", "]", ".", "help_text", "=", "seg_id_help", "#NEWLINE#", "supported_provider_types", "=", "neutron_settings", ".", "get", "(", "'supported_provider_types'", "(", "supported_provider_types", "==", "[", "'*'", "]", ")", ":", "#NEWLINE#", "#INDENT#", "network_type_choices", "=", "PROVIDER_TYPES", "#NEWLINE#", "#UNINDENT#", "else", ":", "#NEWLINE#", "#INDENT#", "network_type_choices", "=", "[", "net_type", "for", "net_type", "in", "PROVIDER_TYPES", "if", "(", "net_type", "[", "0", "]", "in", "supported_provider_types", "(", "network_type_choices", ")", "==", "0", ")", ":", "#NEWLINE#", "#INDENT#", "self", ".", "_hide_provider_network_type", "(", ")", "#NEWLINE#", "#UNINDENT#", "else", ":", "#NEWLINE#", "#INDENT#", "self", "=", "network_type_choices", "#NEWLINE#", "#UNINDENT#", "#UNINDENT#", "else", ":", "#NEWLINE#", "#INDENT#", "self", ".", "_hide_provider_network_type", "(", ")"]}}
{"position": {"error_location": 67, "repair_targets": [49, 56, 71], "repair_candidates": [7, 20, 124, 132, 136, 139, 143, 151, 156, 165, 170, 176, 182, 67, 224, 226, 231, 34, 51, 212, 221, 238, 259, 4, 17, 45, 107, 118, 49, 56, 71, 23, 36, 26, 62, 88, 122, 126, 197, 147, 193, 2, 12, 79, 94, 103, 130, 149, 154, 163, 168, 174, 180, 184, 246, 257, 267, 195, 203, 236]}}
{"prediction": {"error_location": 0.9997527003288269, "repair_targets": [0.9205530881881714, 0.011147256940603256, 0.011970683000981808], "repair_candidates": [0.00026542774867266417, 0.0012317965738475323, 8.909762982511893e-05, 0.00015133371925912797, 5.0567246034916025e-06, 8.580025934179503e-08, 8.727072327019414e-07, 4.320795414969325e-05, 0.0035794598516076803, 0.04947181046009064, 0.00012638462067116052, 0.9205530881881714, 5.150768174644327e-06, 0.011147256940603256, 2.0260025848983787e-05, 2.5826176397458767e-07, 0.011970683000981808, 5.84041845286265e-05, 1.5095280048171844e-07, 2.2900108888279647e-05, 1.2651852557610255e-05, 2.991846122313291e-05, 9.691704326542094e-05, 2.503032192180399e-05, 6.301799294305965e-05, 5.8862055993813556e-06, 2.533086899347836e-06, 3.971043406636454e-05, 7.973645551828668e-05, 0.0002915498334914446, 3.752668999368325e-05, 1.7959739579964662e-06, 6.600800134037854e-06, 1.7761958588380367e-05, 1.4285288671089802e-05, 2.4395376385655254e-06, 1.9492965293466114e-05, 1.9884748326148838e-05, 6.717291398672387e-06, 5.662776402459713e-06, 6.832945018686587e-06, 2.2221385734155774e-05, 5.014653652324341e-05, 1.2681653970503248e-05, 8.941636224335525e-06, 4.5550141294370405e-06, 0.00013777460844721645, 4.02017540181987e-05, 5.486007921717828e-06, 1.666959360591136e-05, 3.172317519783974e-05, 7.761322535770887e-07, 5.35565814061556e-05, 8.752916073717643e-06, 9.067452424460498e-07, 1.4030638340045698e-06, 4.148645530221984e-06, 6.682090315734968e-05, 2.7838827918458264e-06, 1.8342384464631323e-06], "target_probs": 0.9436710476875305}}


{"result": {"time": "2021-02-11 11:56:46.269169", "n_pass": [424, 30, 30], "n_token": 268, "loss": [0.0002588890492916107, 0.05878455191850662], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def __init__(", "self", ",", "request", ",", "*", "args", ",", "**kwargs", ")", ":", "self", ")", ".", "__init__", "(", "request", ",", "*", "args", ",", "**", "kwargs", ")", "#NEWLINE#", "tenant_choices", "=", "[", "(", ")", "]", "#NEWLINE#", "(", "tenants", ",", "has_more", ")", "=", "api", ".", "keystone", ".", "tenant_list", "(", "request", ")", "#NEWLINE#", "for", "tenant", "in", "tenants", ":", "#NEWLINE#", "#INDENT#", "if", "tenant", ".", "enabled", ":", "#NEWLINE#", "#INDENT#", "tenant_choices", ".", "append", "(", "(", "net_type", ".", "id", ",", "tenant", ".", "name", ")", ")", "#NEWLINE#", "#UNINDENT#", "#UNINDENT#", "self", ".", "fields", "[", "'tenant_id'", "]", ".", "choices", "=", "tenant_choices", "#NEWLINE#", "if", ":", "#NEWLINE#", "#INDENT#", "self", ".", "fields", "[", "'net_profile_id'", "]", ".", "choices", "=", "self", ".", "get_network_profile_choices", "(", "request", ")", "#NEWLINE#", "#UNINDENT#", "if", "api", ".", "neutron", ".", "is_extension_supported", "(", "request", ",", "#NEWLINE#", "#INDENT#", "neutron_settings", "#NEWLINE#", "seg_id_range", "=", "neutron_settings", ".", "get", "#NEWLINE#", "self", ".", "seg_id_range", "=", "{", ":", "seg_id_range", ".", ":", "seg_id_range", ".", "'vxlan'", ":", "seg_id_range", ".", "get", "#NEWLINE#", "seg_id_help", "'For VLAN networks, the VLAN VID on the physical network that realizes the virtual network. Valid VLAN VIDs are %(vlan_min)s through %(vlan_max)s. For GRE or VXLAN networks, the tunnel ID. Valid tunnel IDs for GRE networks are %(gre_min)s through %(gre_max)s. For VXLAN networks, %(vxlan_min)s through %(vxlan_max)s.'", "self", ".", "seg_id_range", "'vlan_max'", ":", "self", ".", "seg_id_range", "[", "'vlan'", "]", "#NEWLINE#", "'gre_min'", ":", "self", ".", "seg_id_range", "[", "'gre'", "self", ".", "seg_id_range", "#NEWLINE#", "'vxlan_min'", ":", "self", ".", "seg_id_range", "[", "'vxlan_max'", ":", "self", ".", "seg_id_range", "[", "self", ".", "fields", "[", "=", "seg_id_help", "#NEWLINE#", "supported_provider_types", "=", "neutron_settings", ".", "get", "(", "'supported_provider_types'", "(", "supported_provider_types", "==", "[", "'*'", "]", ")", ":", "#NEWLINE#", "#INDENT#", "network_type_choices", "=", "PROVIDER_TYPES", "#NEWLINE#", "#UNINDENT#", "else", ":", "#NEWLINE#", "#INDENT#", "network_type_choices", "=", "[", "net_type", "for", "net_type", "in", "PROVIDER_TYPES", "if", "(", "net_type", "[", "0", "]", "in", "supported_provider_types", "(", "network_type_choices", ")", "==", "0", ")", ":", "#NEWLINE#", "#INDENT#", "self", ".", "_hide_provider_network_type", "(", ")", "#NEWLINE#", "#UNINDENT#", "else", ":", "#NEWLINE#", "#INDENT#", "self", "=", "network_type_choices", "#NEWLINE#", "#UNINDENT#", "#UNINDENT#", "else", ":", "#NEWLINE#", "#INDENT#", "self", ".", "_hide_provider_network_type", "(", ")"]}}
{"position": {"error_location": 67, "repair_targets": [49, 56, 71], "repair_candidates": [7, 20, 124, 132, 136, 139, 143, 151, 156, 165, 170, 176, 182, 67, 220, 222, 227, 34, 51, 208, 217, 234, 255, 4, 17, 45, 107, 118, 49, 56, 71, 23, 36, 26, 62, 88, 122, 126, 193, 147, 189, 2, 12, 79, 94, 103, 130, 149, 154, 163, 168, 174, 180, 184, 242, 253, 263, 191, 199, 232]}}
{"prediction": {"error_location": 0.9997411370277405, "repair_targets": [0.9191305637359619, 0.011198812164366245, 0.012580511160194874], "repair_candidates": [0.0002326891990378499, 0.000896733661647886, 7.598263619001955e-05, 0.0001309202634729445, 4.032597189507214e-06, 9.198200245918997e-08, 6.686956339763128e-07, 3.934160486096516e-05, 0.0032290464732795954, 0.05124916881322861, 8.419482765020803e-05, 0.9191305637359619, 4.7158196139207575e-06, 0.011198812164366245, 1.9077917386312038e-05, 3.196830391516414e-07, 0.012580511160194874, 6.597275205422193e-05, 1.2207596000735066e-07, 2.239625609945506e-05, 1.3371859495237004e-05, 2.1326273781596683e-05, 5.623452670988627e-05, 1.756437632138841e-05, 4.898154656984843e-05, 4.2043207031383645e-06, 2.111693675033166e-06, 2.691978261282202e-05, 7.236001692945138e-05, 0.0003038128779735416, 3.104926145169884e-05, 1.4079596439842135e-06, 6.860312623757636e-06, 1.8441571228322573e-05, 1.5147765225265175e-05, 1.6618257632217137e-06, 2.1979249140713364e-05, 1.903313932416495e-05, 7.891700079198927e-06, 3.7546228668361437e-06, 1.2809334293706343e-05, 2.185275843658019e-05, 6.64865001454018e-05, 8.633125617052428e-06, 1.4055067367735319e-05, 7.373706012003822e-06, 4.2607640352798626e-05, 1.914637687150389e-05, 2.2216829620447243e-06, 7.441864454449387e-06, 1.7140784621005878e-05, 3.5510362295099185e-07, 5.480177787831053e-05, 6.59817169434973e-06, 7.251385341078276e-07, 2.9748573524557287e-06, 1.2025494697809336e-06, 5.318590410752222e-05, 3.4430266282470257e-07, 5.11440930495155e-07], "target_probs": 0.9429098963737488}}


{"result": {"time": "2021-02-11 11:56:46.367334", "n_pass": [428, 31, 31], "n_token": 264, "loss": [0.0002076410164590925, 0.06280827522277832], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def __init__(", "self", ",", "request", ",", "*", "args", ",", "**kwargs", ")", ":", "self", ")", ".", "__init__", "(", "request", ",", "*", "args", ",", "**", "kwargs", ")", "#NEWLINE#", "tenant_choices", "=", "[", "(", ")", "]", "#NEWLINE#", "(", "tenants", ",", "has_more", ")", "=", "api", ".", "keystone", ".", "tenant_list", "(", "request", ")", "#NEWLINE#", "for", "tenant", "in", "tenants", ":", "#NEWLINE#", "#INDENT#", "if", "tenant", ".", "enabled", ":", "#NEWLINE#", "#INDENT#", "tenant_choices", ".", "append", "(", "(", "net_type", ".", "id", ",", "tenant", ".", "name", ")", ")", "#NEWLINE#", "#UNINDENT#", "#UNINDENT#", "self", ".", "fields", "[", "'tenant_id'", "]", ".", "choices", "=", "tenant_choices", "#NEWLINE#", "if", ":", "#NEWLINE#", "#INDENT#", "self", ".", "fields", "[", "'net_profile_id'", "]", ".", "choices", "=", "self", ".", "get_network_profile_choices", "(", "request", ")", "#NEWLINE#", "#UNINDENT#", "if", "api", ".", "neutron", ".", "is_extension_supported", "(", "request", ",", "#NEWLINE#", "#INDENT#", "neutron_settings", "#NEWLINE#", "seg_id_range", "=", "neutron_settings", ".", "get", "#NEWLINE#", "self", ".", "seg_id_range", "=", "{", ":", "seg_id_range", ".", ":", "seg_id_range", ".", "'vxlan'", ":", "seg_id_range", ".", "get", "#NEWLINE#", "seg_id_help", "'For VLAN networks, the VLAN VID on the physical network that realizes the virtual network. Valid VLAN VIDs are %(vlan_min)s through %(vlan_max)s. For GRE or VXLAN networks, the tunnel ID. Valid tunnel IDs for GRE networks are %(gre_min)s through %(gre_max)s. For VXLAN networks, %(vxlan_min)s through %(vxlan_max)s.'", "self", ".", "seg_id_range", "'vlan_max'", ":", "self", ".", "seg_id_range", "[", "'vlan'", "]", "#NEWLINE#", "'gre_min'", ":", "self", ".", "seg_id_range", "[", "'gre'", "self", ".", "seg_id_range", "#NEWLINE#", "'vxlan_min'", ":", "self", ".", "seg_id_range", "[", "'vxlan_max'", ":", "self", ".", "seg_id_range", "[", "self", ".", "fields", "[", "=", "seg_id_help", "#NEWLINE#", "supported_provider_types", "=", "neutron_settings", ".", "get", "(", "'supported_provider_types'", "(", "supported_provider_types", ")", ":", "#NEWLINE#", "#INDENT#", "network_type_choices", "=", "PROVIDER_TYPES", "#NEWLINE#", "#UNINDENT#", "else", ":", "#NEWLINE#", "#INDENT#", "network_type_choices", "=", "[", "net_type", "for", "net_type", "in", "PROVIDER_TYPES", "if", "(", "net_type", "[", "0", "]", "in", "supported_provider_types", "(", "network_type_choices", ")", "==", "0", ")", ":", "#NEWLINE#", "#INDENT#", "self", ".", "_hide_provider_network_type", "(", ")", "#NEWLINE#", "#UNINDENT#", "else", ":", "#NEWLINE#", "#INDENT#", "self", "=", "network_type_choices", "#NEWLINE#", "#UNINDENT#", "#UNINDENT#", "else", ":", "#NEWLINE#", "#INDENT#", "self", ".", "_hide_provider_network_type", "(", ")"]}}
{"position": {"error_location": 67, "repair_targets": [49, 56, 71], "repair_candidates": [7, 20, 124, 132, 136, 139, 143, 151, 156, 165, 170, 176, 182, 67, 216, 218, 223, 34, 51, 204, 213, 230, 251, 4, 17, 45, 107, 118, 49, 56, 71, 23, 36, 26, 62, 88, 122, 126, 193, 147, 189, 2, 12, 79, 94, 103, 130, 149, 154, 163, 168, 174, 180, 184, 238, 249, 259, 191, 199, 228]}}
{"prediction": {"error_location": 0.9997923970222473, "repair_targets": [0.9154251217842102, 0.010994008742272854, 0.012704364955425262], "repair_candidates": [0.00027753753238357604, 0.0009393631480634212, 7.44509234209545e-05, 0.0001507146080257371, 3.5479379221214913e-06, 6.852376088772871e-08, 6.213883807504317e-07, 4.5862372644478455e-05, 0.003111955476924777, 0.05483577027916908, 0.00011287206871202216, 0.9154251217842102, 5.735500963055529e-06, 0.010994008742272854, 1.749074726831168e-05, 3.0773864523325756e-07, 0.012704364955425262, 6.3674699049443e-05, 1.2023942019823153e-07, 2.4549226509407163e-05, 1.5120849639060907e-05, 2.2469981558970176e-05, 5.357418194762431e-05, 2.182589378207922e-05, 5.6006327213253826e-05, 4.963719220540952e-06, 2.4609596493974095e-06, 2.7952746677328832e-05, 9.259233775082976e-05, 0.0004142366233281791, 4.596904545906e-05, 1.706548687252507e-06, 9.679031791165471e-06, 2.1818859750055708e-05, 2.261854569951538e-05, 2.0568384115904337e-06, 2.8199321604915895e-05, 1.9370612790226005e-05, 9.92263449006714e-06, 4.781987172464142e-06, 1.8903478121501394e-05, 2.2510690541821532e-05, 0.00010805873898789287, 1.054403037414886e-05, 2.330613278900273e-05, 8.029243872442748e-06, 1.4023284165887162e-05, 1.909725324367173e-05, 3.642288390892645e-07, 3.117219876003219e-06, 5.708342087018536e-06, 2.2300115176676627e-07, 7.682238356210291e-05, 1.0487473218745436e-06, 5.649744707625359e-07, 8.236385156124015e-07, 3.40848799851301e-07, 2.048820533673279e-05, 1.1117582232600398e-07, 4.3301614027768665e-07], "target_probs": 0.9391235113143921}}


{"result": {"time": "2021-02-11 11:56:46.463132", "n_pass": [429, 32, 32], "n_token": 260, "loss": [0.0001705739414319396, 0.05458242446184158], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def __init__(", "self", ",", "request", ",", "*", "args", ",", "**kwargs", ")", ":", "self", ")", ".", "__init__", "(", "request", ",", "*", "args", ",", "**", "kwargs", ")", "#NEWLINE#", "tenant_choices", "=", "[", "(", ")", "]", "#NEWLINE#", "(", "tenants", ",", "has_more", ")", "=", "api", ".", "keystone", ".", "tenant_list", "(", "request", ")", "#NEWLINE#", "for", "tenant", "in", "tenants", ":", "#NEWLINE#", "#INDENT#", "if", "tenant", ".", "enabled", ":", "#NEWLINE#", "#INDENT#", "tenant_choices", ".", "append", "(", "(", "net_type", ".", "id", ",", "tenant", ".", "name", ")", ")", "#NEWLINE#", "#UNINDENT#", "#UNINDENT#", "self", ".", "fields", "[", "'tenant_id'", "]", ".", "choices", "=", "tenant_choices", "#NEWLINE#", "if", ":", "#NEWLINE#", "#INDENT#", "self", ".", "fields", "[", "'net_profile_id'", "]", ".", "choices", "=", "self", ".", "get_network_profile_choices", "(", "request", ")", "#NEWLINE#", "#UNINDENT#", "if", "api", ".", "neutron", ".", "is_extension_supported", "(", "request", ",", "#NEWLINE#", "#INDENT#", "neutron_settings", "#NEWLINE#", "seg_id_range", "=", "neutron_settings", ".", "get", "#NEWLINE#", "self", ".", "seg_id_range", "=", "{", ":", "seg_id_range", ".", ":", "seg_id_range", ".", "'vxlan'", ":", "seg_id_range", ".", "get", "#NEWLINE#", "seg_id_help", "'For VLAN networks, the VLAN VID on the physical network that realizes the virtual network. Valid VLAN VIDs are %(vlan_min)s through %(vlan_max)s. For GRE or VXLAN networks, the tunnel ID. Valid tunnel IDs for GRE networks are %(gre_min)s through %(gre_max)s. For VXLAN networks, %(vxlan_min)s through %(vxlan_max)s.'", "self", ".", "seg_id_range", "'vlan_max'", ":", "self", ".", "seg_id_range", "[", "'vlan'", "]", "#NEWLINE#", "'gre_min'", ":", "self", ".", "seg_id_range", "[", "'gre'", "self", ".", "seg_id_range", "#NEWLINE#", "'vxlan_min'", ":", "self", ".", "seg_id_range", "[", "'vxlan_max'", ":", "self", ".", "seg_id_range", "[", "self", ".", "fields", "[", "=", "seg_id_help", "#NEWLINE#", "supported_provider_types", "=", "neutron_settings", ".", "get", "(", "'supported_provider_types'", "(", "supported_provider_types", "network_type_choices", "=", "PROVIDER_TYPES", "#NEWLINE#", "#UNINDENT#", "else", ":", "#NEWLINE#", "#INDENT#", "network_type_choices", "=", "[", "net_type", "for", "net_type", "in", "PROVIDER_TYPES", "if", "(", "net_type", "[", "0", "]", "in", "supported_provider_types", "(", "network_type_choices", ")", "==", "0", ")", ":", "#NEWLINE#", "#INDENT#", "self", ".", "_hide_provider_network_type", "(", ")", "#NEWLINE#", "#UNINDENT#", "else", ":", "#NEWLINE#", "#INDENT#", "self", "=", "network_type_choices", "#NEWLINE#", "#UNINDENT#", "#UNINDENT#", "else", ":", "#NEWLINE#", "#INDENT#", "self", ".", "_hide_provider_network_type", "(", ")"]}}
{"position": {"error_location": 67, "repair_targets": [49, 56, 71], "repair_candidates": [7, 20, 124, 132, 136, 139, 143, 151, 156, 165, 170, 176, 182, 67, 212, 214, 219, 34, 51, 200, 209, 226, 247, 4, 17, 45, 107, 118, 49, 56, 71, 23, 36, 26, 62, 88, 122, 126, 193, 147, 189, 2, 12, 79, 94, 103, 130, 149, 154, 163, 168, 174, 180, 184, 234, 245, 255, 191, 199, 224]}}
{"prediction": {"error_location": 0.9998294115066528, "repair_targets": [0.9236881732940674, 0.010441284626722336, 0.012750993482768536], "repair_candidates": [0.0002544330491218716, 0.0006872758967801929, 5.840340963914059e-05, 0.0001355662097921595, 2.769451157291769e-06, 5.59418822376756e-08, 4.061791685217031e-07, 3.6434885259950534e-05, 0.0027753368485718966, 0.04791637882590294, 7.400618778774515e-05, 0.9236881732940674, 5.9263443290547e-06, 0.010441284626722336, 1.1625138540694024e-05, 3.6713711892844003e-07, 0.012750993482768536, 4.4750373490387574e-05, 7.567174975520174e-08, 1.5936529962345958e-05, 1.1104893928859383e-05, 1.594891909917351e-05, 4.042604996357113e-05, 1.554896152811125e-05, 4.303429159335792e-05, 3.364896201674128e-06, 1.451226239623793e-06, 2.2262769562075846e-05, 7.869116961956024e-05, 0.00042407531873323023, 4.902550426777452e-05, 1.0396490779385203e-06, 6.33669515082147e-06, 1.92468778550392e-05, 1.6882775526028126e-05, 1.231597480000346e-06, 2.070370283036027e-05, 1.70172679645475e-05, 9.243977729056496e-06, 3.903895049006678e-06, 1.8300406736670993e-05, 2.2056132365833037e-05, 9.469345241086558e-05, 8.60419913806254e-06, 1.60552572197048e-05, 4.981418896932155e-06, 6.110902177169919e-05, 1.3754452993453015e-05, 1.1433860436227405e-06, 1.801027735837124e-07, 3.2661530440236675e-06, 2.1157376295377617e-07, 4.5011722249910235e-05, 1.2012664001304074e-06, 4.879829020865145e-07, 3.878447216720815e-07, 2.8502390136964095e-07, 7.126345735741779e-06, 1.988755542470244e-07, 2.2953896916533267e-07], "target_probs": 0.9468804597854614}}


{"result": {"time": "2021-02-11 11:56:46.560442", "n_pass": [431, 33, 33], "n_token": 256, "loss": [0.00026174934464506805, 0.046959541738033295], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def __init__(", "self", ",", "request", ",", "*", "args", ",", "**kwargs", ")", ":", "self", ")", ".", "__init__", "(", "request", ",", "*", "args", ",", "**", "kwargs", ")", "#NEWLINE#", "tenant_choices", "=", "[", "(", ")", "]", "#NEWLINE#", "(", "tenants", ",", "has_more", ")", "=", "api", ".", "keystone", ".", "tenant_list", "(", "request", ")", "#NEWLINE#", "for", "tenant", "in", "tenants", ":", "#NEWLINE#", "#INDENT#", "if", "tenant", ".", "enabled", ":", "#NEWLINE#", "#INDENT#", "tenant_choices", ".", "append", "(", "(", "net_type", ".", "id", ",", "tenant", ".", "name", ")", ")", "#NEWLINE#", "#UNINDENT#", "#UNINDENT#", "self", ".", "fields", "[", "'tenant_id'", "]", ".", "choices", "=", "tenant_choices", "#NEWLINE#", "if", ":", "#NEWLINE#", "#INDENT#", "self", ".", "fields", "[", "'net_profile_id'", "]", ".", "choices", "=", "self", ".", "get_network_profile_choices", "(", "request", ")", "#NEWLINE#", "#UNINDENT#", "if", "api", ".", "neutron", ".", "is_extension_supported", "(", "request", ",", "#NEWLINE#", "#INDENT#", "neutron_settings", "#NEWLINE#", "seg_id_range", "=", "neutron_settings", ".", "get", "#NEWLINE#", "self", ".", "seg_id_range", "=", "{", ":", "seg_id_range", ".", ":", "seg_id_range", ".", "'vxlan'", ":", "seg_id_range", ".", "get", "#NEWLINE#", "seg_id_help", "'For VLAN networks, the VLAN VID on the physical network that realizes the virtual network. Valid VLAN VIDs are %(vlan_min)s through %(vlan_max)s. For GRE or VXLAN networks, the tunnel ID. Valid tunnel IDs for GRE networks are %(gre_min)s through %(gre_max)s. For VXLAN networks, %(vxlan_min)s through %(vxlan_max)s.'", "self", ".", "seg_id_range", "'vlan_max'", ":", "self", ".", "seg_id_range", "[", "'vlan'", "]", "#NEWLINE#", "'gre_min'", ":", "self", ".", "seg_id_range", "[", "'gre'", "self", ".", "seg_id_range", "#NEWLINE#", "'vxlan_min'", ":", "self", ".", "seg_id_range", "[", "'vxlan_max'", ":", "self", ".", "seg_id_range", "[", "self", ".", "fields", "[", "=", "seg_id_help", "#NEWLINE#", "supported_provider_types", "=", "neutron_settings", ".", "get", "(", "'supported_provider_types'", "(", "supported_provider_types", "network_type_choices", "=", "PROVIDER_TYPES", "#NEWLINE#", "#INDENT#", "network_type_choices", "=", "[", "net_type", "for", "net_type", "in", "PROVIDER_TYPES", "if", "(", "net_type", "[", "0", "]", "in", "supported_provider_types", "(", "network_type_choices", ")", "==", "0", ")", ":", "#NEWLINE#", "#INDENT#", "self", ".", "_hide_provider_network_type", "(", ")", "#NEWLINE#", "#UNINDENT#", "else", ":", "#NEWLINE#", "#INDENT#", "self", "=", "network_type_choices", "#NEWLINE#", "#UNINDENT#", "#UNINDENT#", "else", ":", "#NEWLINE#", "#INDENT#", "self", ".", "_hide_provider_network_type", "(", ")"]}}
{"position": {"error_location": 67, "repair_targets": [49, 56, 71], "repair_candidates": [7, 20, 124, 132, 136, 139, 143, 151, 156, 165, 170, 176, 182, 67, 208, 210, 215, 34, 51, 200, 205, 222, 243, 4, 17, 45, 107, 118, 49, 56, 71, 23, 36, 26, 62, 88, 122, 126, 193, 147, 189, 2, 12, 79, 94, 103, 130, 149, 154, 163, 168, 174, 180, 184, 230, 241, 251, 191, 199, 220]}}
{"prediction": {"error_location": 0.9997382760047913, "repair_targets": [0.9262968301773071, 0.013581651262938976, 0.014247531071305275], "repair_candidates": [0.00025335222017019987, 0.000753226166125387, 6.571071571670473e-05, 0.00016330715152435005, 4.035035090055317e-06, 7.806067259252814e-08, 4.943382805322472e-07, 5.24472379765939e-05, 0.002964415354654193, 0.03982514888048172, 7.522333908127621e-05, 0.9262968301773071, 7.014471520960797e-06, 0.013581651262938976, 1.609045466466341e-05, 1.3348558240977582e-06, 0.014247531071305275, 6.124129868112504e-05, 1.0905508673886288e-07, 2.397177740931511e-05, 1.4531439774145838e-05, 2.138151648978237e-05, 5.547482942347415e-05, 2.0662520910263993e-05, 5.9593163314275444e-05, 5.548527951759752e-06, 2.2977149001235375e-06, 3.697831925819628e-05, 9.05518390936777e-05, 0.00042369135189801455, 4.8799000069266185e-05, 1.668765662543592e-06, 9.988189049181528e-06, 3.143793946946971e-05, 2.6198358682449907e-05, 2.3699808480159845e-06, 3.372734136064537e-05, 3.1895368010737e-05, 1.4421188097912818e-05, 7.060155439830851e-06, 3.3545489714015275e-05, 3.7263580452417955e-05, 0.000104425402241759, 1.579957825015299e-05, 1.5090390661498532e-05, 6.437792762881145e-06, 0.00032280851155519485, 2.0006909835501574e-05, 3.4523623071436305e-06, 8.906316111279011e-07, 6.301382200035732e-06, 3.518693461046496e-07, 8.138199336826801e-05, 5.481657808559248e-06, 5.213121880842664e-07, 8.437083920398436e-07, 6.118594342297001e-07, 1.233588409377262e-05, 5.559961095968902e-07, 3.146442395518534e-07], "target_probs": 0.9541260004043579}}


{"result": {"time": "2021-02-11 11:56:46.657088", "n_pass": [435, 34, 34], "n_token": 252, "loss": [0.00029559535323642194, 0.049188341945409775], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def __init__(", "self", ",", "request", ",", "*", "args", ",", "**kwargs", ")", ":", "self", ")", ".", "__init__", "(", "request", ",", "*", "args", ",", "**", "kwargs", ")", "#NEWLINE#", "tenant_choices", "=", "[", "(", ")", "]", "#NEWLINE#", "(", "tenants", ",", "has_more", ")", "=", "api", ".", "keystone", ".", "tenant_list", "(", "request", ")", "#NEWLINE#", "for", "tenant", "in", "tenants", ":", "#NEWLINE#", "#INDENT#", "if", "tenant", ".", "enabled", ":", "#NEWLINE#", "#INDENT#", "tenant_choices", ".", "append", "(", "(", "net_type", ".", "id", ",", "tenant", ".", "name", ")", ")", "#NEWLINE#", "#UNINDENT#", "#UNINDENT#", "self", ".", "fields", "[", "'tenant_id'", "]", ".", "choices", "=", "tenant_choices", "#NEWLINE#", "if", ":", "#NEWLINE#", "#INDENT#", "self", ".", "fields", "[", "'net_profile_id'", "]", ".", "choices", "=", "self", ".", "get_network_profile_choices", "(", "request", ")", "#NEWLINE#", "#UNINDENT#", "if", "api", ".", "neutron", ".", "is_extension_supported", "(", "request", ",", "#NEWLINE#", "#INDENT#", "neutron_settings", "#NEWLINE#", "seg_id_range", "=", "neutron_settings", ".", "get", "#NEWLINE#", "self", ".", "seg_id_range", "=", "{", ":", "seg_id_range", ".", ":", "seg_id_range", ".", "'vxlan'", ":", "seg_id_range", ".", "get", "#NEWLINE#", "seg_id_help", "'For VLAN networks, the VLAN VID on the physical network that realizes the virtual network. Valid VLAN VIDs are %(vlan_min)s through %(vlan_max)s. For GRE or VXLAN networks, the tunnel ID. Valid tunnel IDs for GRE networks are %(gre_min)s through %(gre_max)s. For VXLAN networks, %(vxlan_min)s through %(vxlan_max)s.'", "self", ".", "seg_id_range", "'vlan_max'", ":", "self", ".", "seg_id_range", "[", "'vlan'", "]", "#NEWLINE#", "'gre_min'", ":", "self", ".", "seg_id_range", "[", "'gre'", "self", ".", "seg_id_range", "#NEWLINE#", "'vxlan_min'", ":", "self", ".", "seg_id_range", "[", "'vxlan_max'", ":", "self", ".", "seg_id_range", "[", "self", ".", "fields", "[", "=", "seg_id_help", "#NEWLINE#", "supported_provider_types", "=", "neutron_settings", ".", "get", "(", "'supported_provider_types'", "(", "supported_provider_types", "network_type_choices", "=", "PROVIDER_TYPES", "#NEWLINE#", "#INDENT#", "network_type_choices", "=", "[", "net_type", "for", "net_type", "in", "PROVIDER_TYPES", "if", "(", "net_type", "supported_provider_types", "(", "network_type_choices", ")", "==", "0", ")", ":", "#NEWLINE#", "#INDENT#", "self", ".", "_hide_provider_network_type", "(", ")", "#NEWLINE#", "#UNINDENT#", "else", ":", "#NEWLINE#", "#INDENT#", "self", "=", "network_type_choices", "#NEWLINE#", "#UNINDENT#", "#UNINDENT#", "else", ":", "#NEWLINE#", "#INDENT#", "self", ".", "_hide_provider_network_type", "(", ")"]}}
{"position": {"error_location": 67, "repair_targets": [49, 56, 71], "repair_candidates": [7, 20, 124, 132, 136, 139, 143, 151, 156, 165, 170, 176, 182, 67, 208, 210, 215, 34, 51, 200, 205, 218, 239, 4, 17, 45, 107, 118, 49, 56, 71, 23, 36, 26, 62, 88, 122, 126, 193, 147, 189, 2, 12, 79, 94, 103, 130, 149, 154, 163, 168, 174, 180, 184, 226, 237, 247, 191, 199, 216]}}
{"prediction": {"error_location": 0.9997044205665588, "repair_targets": [0.9209209084510803, 0.014951941557228565, 0.016128944233059883], "repair_candidates": [0.0002407963329460472, 0.0008465549908578396, 6.958584708627313e-05, 0.00017070621834136546, 3.9349069993477315e-06, 9.672547918171404e-08, 6.658806341874879e-07, 5.371253428165801e-05, 0.0030155039858072996, 0.041342951357364655, 8.326239185407758e-05, 0.9209209084510803, 8.001636160770431e-06, 0.014951941557228565, 1.926136428664904e-05, 1.812768687159405e-06, 0.016128944233059883, 7.774746336508542e-05, 1.6132995028783625e-07, 3.0756833439227194e-05, 1.6995387341012247e-05, 2.2616546630160883e-05, 5.3611202019965276e-05, 2.3587905161548406e-05, 7.04960766597651e-05, 7.408784767903853e-06, 3.105897349087172e-06, 5.009978485759348e-05, 8.916886145016178e-05, 0.00039315427420660853, 5.75396916246973e-05, 3.1943225167196942e-06, 1.3535529433283955e-05, 5.740250344388187e-05, 3.29395079461392e-05, 5.542819963011425e-06, 4.090343281859532e-05, 7.579558587167412e-05, 1.7857426428236067e-05, 1.579831041453872e-05, 4.94523010274861e-05, 6.915463745826855e-05, 0.00013907597167417407, 3.319202733109705e-05, 1.6773214156273752e-05, 1.2228086234244984e-05, 0.0004996558418497443, 2.395506453467533e-05, 3.5126156490150606e-06, 8.064643566285667e-07, 1.1828561582660768e-05, 7.621359259246674e-07, 9.95822119875811e-05, 5.715275506190665e-07, 9.438761594537937e-07, 2.2749011350242654e-06, 3.3226419304810406e-07, 1.4774737792322412e-05, 2.3326920199906453e-06, 7.006302666923148e-07], "target_probs": 0.9520018100738525}}


{"result": {"time": "2021-02-11 11:56:46.753082", "n_pass": [437, 35, 35], "n_token": 248, "loss": [0.0003471963864285499, 0.043198779225349426], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def __init__(", "self", ",", "request", ",", "*", "args", ",", "**kwargs", ")", ":", "self", ")", ".", "__init__", "(", "request", ",", "*", "args", ",", "**", "kwargs", ")", "#NEWLINE#", "tenant_choices", "=", "[", "(", ")", "]", "#NEWLINE#", "(", "tenants", ",", "has_more", ")", "=", "api", ".", "keystone", ".", "tenant_list", "(", "request", ")", "#NEWLINE#", "for", "tenant", "in", "tenants", ":", "#NEWLINE#", "#INDENT#", "if", "tenant", ".", "enabled", ":", "#NEWLINE#", "#INDENT#", "tenant_choices", ".", "append", "(", "(", "net_type", ".", "id", ",", "tenant", ".", "name", ")", ")", "#NEWLINE#", "#UNINDENT#", "#UNINDENT#", "self", ".", "fields", "[", "'tenant_id'", "]", ".", "choices", "=", "tenant_choices", "#NEWLINE#", "if", ":", "#NEWLINE#", "#INDENT#", "self", ".", "fields", "[", "'net_profile_id'", "]", ".", "choices", "=", "self", ".", "get_network_profile_choices", "(", "request", ")", "#NEWLINE#", "#UNINDENT#", "if", "api", ".", "neutron", ".", "is_extension_supported", "(", "request", ",", "#NEWLINE#", "#INDENT#", "neutron_settings", "#NEWLINE#", "seg_id_range", "=", "neutron_settings", ".", "get", "#NEWLINE#", "self", ".", "seg_id_range", "=", "{", ":", "seg_id_range", ".", ":", "seg_id_range", ".", "'vxlan'", ":", "seg_id_range", ".", "get", "#NEWLINE#", "seg_id_help", "'For VLAN networks, the VLAN VID on the physical network that realizes the virtual network. Valid VLAN VIDs are %(vlan_min)s through %(vlan_max)s. For GRE or VXLAN networks, the tunnel ID. Valid tunnel IDs for GRE networks are %(gre_min)s through %(gre_max)s. For VXLAN networks, %(vxlan_min)s through %(vxlan_max)s.'", "self", ".", "seg_id_range", "'vlan_max'", ":", "self", ".", "seg_id_range", "[", "'vlan'", "]", "#NEWLINE#", "'gre_min'", ":", "self", ".", "seg_id_range", "[", "'gre'", "self", ".", "seg_id_range", "#NEWLINE#", "'vxlan_min'", ":", "self", ".", "seg_id_range", "[", "'vxlan_max'", ":", "self", ".", "seg_id_range", "[", "self", ".", "fields", "[", "=", "seg_id_help", "#NEWLINE#", "supported_provider_types", "=", "neutron_settings", ".", "get", "(", "'supported_provider_types'", "(", "supported_provider_types", "network_type_choices", "=", "PROVIDER_TYPES", "#NEWLINE#", "#INDENT#", "network_type_choices", "=", "[", "net_type", "for", "net_type", "in", "PROVIDER_TYPES", "if", "(", "net_type", "supported_provider_types", "(", "network_type_choices", ")", "#NEWLINE#", "#INDENT#", "self", ".", "_hide_provider_network_type", "(", ")", "#NEWLINE#", "#UNINDENT#", "else", ":", "#NEWLINE#", "#INDENT#", "self", "=", "network_type_choices", "#NEWLINE#", "#UNINDENT#", "#UNINDENT#", "else", ":", "#NEWLINE#", "#INDENT#", "self", ".", "_hide_provider_network_type", "(", ")"]}}
{"position": {"error_location": 67, "repair_targets": [49, 56, 71], "repair_candidates": [7, 20, 124, 132, 136, 139, 143, 151, 156, 165, 170, 176, 182, 67, 208, 210, 215, 34, 51, 200, 205, 218, 235, 4, 17, 45, 107, 118, 49, 56, 71, 23, 36, 26, 62, 88, 122, 126, 193, 147, 189, 2, 12, 79, 94, 103, 130, 149, 154, 163, 168, 174, 180, 184, 222, 233, 243, 191, 199, 216]}}
{"prediction": {"error_location": 0.9996528625488281, "repair_targets": [0.9289678931236267, 0.014020469039678574, 0.014732684008777142], "repair_candidates": [0.00021297100465744734, 0.0006636985344812274, 7.044470839900896e-05, 0.00013645894068758935, 5.047702870797366e-06, 1.0883506718073477e-07, 8.538070233043982e-07, 4.985620762454346e-05, 0.00284796254709363, 0.03603365272283554, 7.451819692505524e-05, 0.9289678931236267, 8.127640285238158e-06, 0.014020469039678574, 2.8188133001094684e-05, 1.3781450434180442e-06, 0.014732684008777142, 7.049967825878412e-05, 2.4574589474468667e-07, 2.971176218125038e-05, 1.7819655113271438e-05, 2.8709604521282017e-05, 7.133363396860659e-05, 2.7682761356118135e-05, 8.017915388336405e-05, 7.802542313584127e-06, 4.917262231174391e-06, 8.562183211324736e-05, 7.069943967508152e-05, 0.00027346122078597546, 4.399354293127544e-05, 6.91214199832757e-06, 1.1535688827279955e-05, 9.106437209993601e-05, 2.0689069060608745e-05, 1.0619970453262795e-05, 2.8782467779819854e-05, 0.0001557061041239649, 1.4262782315199729e-05, 3.0470442652585916e-05, 2.876797952922061e-05, 0.00011539083061506972, 8.099981641862541e-05, 5.7563760492485017e-05, 1.4063407434150577e-05, 2.237252010672819e-05, 0.0004337661375757307, 1.9727267499547452e-05, 5.1603137762867846e-06, 1.661612031966797e-06, 2.4859149561962113e-05, 1.5539681044174358e-06, 8.39430867927149e-05, 1.5782890159243834e-06, 1.6686054777892423e-06, 1.6323221643688157e-05, 2.41611678575282e-06, 3.259979348513298e-05, 1.7384880266035907e-05, 1.1658923995128134e-06], "target_probs": 0.9577209949493408}}


{"result": {"time": "2021-02-11 11:56:46.850175", "n_pass": [439, 36, 36], "n_token": 244, "loss": [0.0002768848498817533, 0.04400985687971115], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def __init__(", "self", ",", "request", ",", "*", "args", ",", "**kwargs", ")", ":", "self", ")", ".", "__init__", "(", "request", ",", "*", "args", ",", "**", "kwargs", ")", "#NEWLINE#", "tenant_choices", "=", "[", "(", ")", "]", "#NEWLINE#", "(", "tenants", ",", "has_more", ")", "=", "api", ".", "keystone", ".", "tenant_list", "(", "request", ")", "#NEWLINE#", "for", "tenant", "in", "tenants", ":", "#NEWLINE#", "#INDENT#", "if", "tenant", ".", "enabled", ":", "#NEWLINE#", "#INDENT#", "tenant_choices", ".", "append", "(", "(", "net_type", ".", "id", ",", "tenant", ".", "name", ")", ")", "#NEWLINE#", "#UNINDENT#", "#UNINDENT#", "self", ".", "fields", "[", "'tenant_id'", "]", ".", "choices", "=", "tenant_choices", "#NEWLINE#", "if", ":", "#NEWLINE#", "#INDENT#", "self", ".", "fields", "[", "'net_profile_id'", "]", ".", "choices", "=", "self", ".", "get_network_profile_choices", "(", "request", ")", "#NEWLINE#", "#UNINDENT#", "if", "api", ".", "neutron", ".", "is_extension_supported", "(", "request", ",", "#NEWLINE#", "#INDENT#", "neutron_settings", "#NEWLINE#", "seg_id_range", "=", "neutron_settings", ".", "get", "#NEWLINE#", "self", ".", "seg_id_range", "=", "{", ":", "seg_id_range", ".", ":", "seg_id_range", ".", "'vxlan'", ":", "seg_id_range", ".", "get", "#NEWLINE#", "seg_id_help", "'For VLAN networks, the VLAN VID on the physical network that realizes the virtual network. Valid VLAN VIDs are %(vlan_min)s through %(vlan_max)s. For GRE or VXLAN networks, the tunnel ID. Valid tunnel IDs for GRE networks are %(gre_min)s through %(gre_max)s. For VXLAN networks, %(vxlan_min)s through %(vxlan_max)s.'", "self", ".", "seg_id_range", "'vlan_max'", ":", "self", ".", "seg_id_range", "[", "'vlan'", "]", "#NEWLINE#", "'gre_min'", ":", "self", ".", "seg_id_range", "[", "'gre'", "self", ".", "seg_id_range", "#NEWLINE#", "'vxlan_min'", ":", "self", ".", "seg_id_range", "[", "'vxlan_max'", ":", "self", ".", "seg_id_range", "[", "self", ".", "fields", "[", "=", "seg_id_help", "#NEWLINE#", "supported_provider_types", "=", "neutron_settings", ".", "get", "(", "'supported_provider_types'", "(", "supported_provider_types", "network_type_choices", "=", "PROVIDER_TYPES", "#NEWLINE#", "#INDENT#", "network_type_choices", "=", "[", "net_type", "for", "net_type", "in", "PROVIDER_TYPES", "if", "(", "net_type", "supported_provider_types", "(", "network_type_choices", ")", "#NEWLINE#", "#INDENT#", "self", ".", "#UNINDENT#", "else", ":", "#NEWLINE#", "#INDENT#", "self", "=", "network_type_choices", "#NEWLINE#", "#UNINDENT#", "#UNINDENT#", "else", ":", "#NEWLINE#", "#INDENT#", "self", ".", "_hide_provider_network_type", "(", ")"]}}
{"position": {"error_location": 67, "repair_targets": [49, 56, 71], "repair_candidates": [7, 20, 124, 132, 136, 139, 143, 151, 156, 165, 170, 176, 182, 67, 208, 210, 215, 34, 51, 200, 205, 218, 231, 4, 17, 45, 107, 118, 49, 56, 71, 23, 36, 26, 62, 88, 122, 126, 193, 147, 189, 2, 12, 79, 94, 103, 130, 149, 154, 163, 168, 174, 180, 184, 222, 229, 239, 191, 199, 216]}}
{"prediction": {"error_location": 0.9997230172157288, "repair_targets": [0.9274156093597412, 0.013978992588818073, 0.015549873001873493], "repair_candidates": [0.00022180723317433149, 0.0007045094971545041, 6.957842560950667e-05, 0.0001552243047626689, 4.252904545865022e-06, 1.0624614077414662e-07, 1.0405923376310966e-06, 4.533897663350217e-05, 0.0028782139997929335, 0.03730975091457367, 7.112918683560565e-05, 0.9274156093597412, 8.095355042314623e-06, 0.013978992588818073, 2.226083779532928e-05, 1.157857241196325e-06, 0.015549873001873493, 6.523447518702596e-05, 2.369879581465284e-07, 3.035982808796689e-05, 1.9415801943978295e-05, 2.374053292442113e-05, 6.153340655146167e-05, 3.035916233784519e-05, 6.767590821254998e-05, 8.02016984380316e-06, 3.3947560496017104e-06, 4.997289943275973e-05, 8.370514115085825e-05, 0.0003242953971493989, 4.2395149648655206e-05, 3.376851509528933e-06, 7.920589268906042e-06, 4.7567562432959676e-05, 1.4078201274969615e-05, 4.437428742676275e-06, 1.7234649931197055e-05, 5.779255661764182e-05, 1.003612851491198e-05, 1.4511882909573615e-05, 1.4923854905646294e-05, 5.7752888096729293e-05, 5.05438911204692e-05, 2.7709289497579448e-05, 1.2752601833199151e-05, 1.2370139302220196e-05, 0.00021852260397281498, 1.4935673789295834e-05, 4.192651431367267e-06, 1.367256459161581e-06, 1.8248210835736245e-05, 8.857962257025065e-07, 7.835426367819309e-05, 8.998107432489633e-07, 1.4393943956747535e-06, 7.0239684646367095e-06, 6.524009677377762e-06, 4.1177485400112346e-05, 5.7789434322330635e-06, 5.490967396326596e-07], "target_probs": 0.9569445252418518}}


{"result": {"time": "2021-02-11 11:56:46.944155", "n_pass": [440, 37, 37], "n_token": 240, "loss": [0.0003579214389901608, 0.05077299848198891], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def __init__(", "self", ",", "request", ",", "*", "args", ",", "**kwargs", ")", ":", "self", ")", ".", "__init__", "(", "request", ",", "*", "args", ",", "**", "kwargs", ")", "#NEWLINE#", "tenant_choices", "=", "[", "(", ")", "]", "#NEWLINE#", "(", "tenants", ",", "has_more", ")", "=", "api", ".", "keystone", ".", "tenant_list", "(", "request", ")", "#NEWLINE#", "for", "tenant", "in", "tenants", ":", "#NEWLINE#", "#INDENT#", "if", "tenant", ".", "enabled", ":", "#NEWLINE#", "#INDENT#", "tenant_choices", ".", "append", "(", "(", "net_type", ".", "id", ",", "tenant", ".", "name", ")", ")", "#NEWLINE#", "#UNINDENT#", "#UNINDENT#", "self", ".", "fields", "[", "'tenant_id'", "]", ".", "choices", "=", "tenant_choices", "#NEWLINE#", "if", ":", "#NEWLINE#", "#INDENT#", "self", ".", "fields", "[", "'net_profile_id'", "]", ".", "choices", "=", "self", ".", "get_network_profile_choices", "(", "request", ")", "#NEWLINE#", "#UNINDENT#", "if", "api", ".", "neutron", ".", "is_extension_supported", "(", "request", ",", "#NEWLINE#", "#INDENT#", "neutron_settings", "#NEWLINE#", "seg_id_range", "=", "neutron_settings", ".", "get", "#NEWLINE#", "self", ".", "seg_id_range", "=", "{", ":", "seg_id_range", ".", ":", "seg_id_range", ".", "'vxlan'", ":", "seg_id_range", ".", "get", "#NEWLINE#", "seg_id_help", "'For VLAN networks, the VLAN VID on the physical network that realizes the virtual network. Valid VLAN VIDs are %(vlan_min)s through %(vlan_max)s. For GRE or VXLAN networks, the tunnel ID. Valid tunnel IDs for GRE networks are %(gre_min)s through %(gre_max)s. For VXLAN networks, %(vxlan_min)s through %(vxlan_max)s.'", "self", ".", "seg_id_range", "'vlan_max'", ":", "self", ".", "seg_id_range", "[", "'vlan'", "]", "#NEWLINE#", "'gre_min'", ":", "self", ".", "seg_id_range", "[", "'gre'", "self", ".", "seg_id_range", "#NEWLINE#", "'vxlan_min'", ":", "self", ".", "seg_id_range", "[", "'vxlan_max'", ":", "self", ".", "seg_id_range", "[", "self", ".", "fields", "[", "=", "seg_id_help", "#NEWLINE#", "supported_provider_types", "=", "neutron_settings", ".", "get", "(", "'supported_provider_types'", "(", "supported_provider_types", "network_type_choices", "=", "PROVIDER_TYPES", "#NEWLINE#", "#INDENT#", "network_type_choices", "=", "[", "net_type", "for", "net_type", "in", "PROVIDER_TYPES", "if", "(", "net_type", "supported_provider_types", "(", "network_type_choices", ")", "#NEWLINE#", "#INDENT#", "self", ".", "#INDENT#", "self", "=", "network_type_choices", "#NEWLINE#", "#UNINDENT#", "#UNINDENT#", "else", ":", "#NEWLINE#", "#INDENT#", "self", ".", "_hide_provider_network_type", "(", ")"]}}
{"position": {"error_location": 67, "repair_targets": [49, 56, 71], "repair_candidates": [7, 20, 124, 132, 136, 139, 143, 151, 156, 165, 170, 176, 182, 67, 208, 210, 215, 34, 51, 200, 205, 218, 227, 4, 17, 45, 107, 118, 49, 56, 71, 23, 36, 26, 62, 88, 122, 126, 193, 147, 189, 2, 12, 79, 94, 103, 130, 149, 154, 163, 168, 174, 180, 184, 222, 225, 235, 191, 199, 216]}}
{"prediction": {"error_location": 0.9996423721313477, "repair_targets": [0.9162507057189941, 0.015885595232248306, 0.018358139321208], "repair_candidates": [0.0003058575966861099, 0.000743602286092937, 7.344061305047944e-05, 0.00016495404997840524, 6.114074949437054e-06, 1.243317626631324e-07, 9.43482746151858e-07, 5.241611506789923e-05, 0.0033850602339953184, 0.04246547818183899, 8.908173185773194e-05, 0.9162507057189941, 9.56770236371085e-06, 0.015885595232248306, 2.1938461941317655e-05, 1.7120898974098964e-06, 0.018358139321208, 0.00010844435746548697, 1.753385561187315e-07, 3.887122147716582e-05, 2.8211699827807024e-05, 2.857494655472692e-05, 7.79893234721385e-05, 2.69247484538937e-05, 7.306080806301907e-05, 7.391147846647073e-06, 5.780392712040339e-06, 4.9871010560309514e-05, 0.0001173573182313703, 0.0005745082744397223, 6.954928539926186e-05, 2.470422487022006e-06, 1.6024843716877513e-05, 4.774648914462887e-05, 3.495667624520138e-05, 4.177412392891711e-06, 4.203098069410771e-05, 5.7324214139953256e-05, 2.0478169972193427e-05, 1.478673038945999e-05, 3.3804128179326653e-05, 5.295200026012026e-05, 0.00012768233136739582, 2.518048495403491e-05, 2.4300299628521316e-05, 1.6386473362217657e-05, 0.00021354459750000387, 1.9062048522755504e-05, 5.278624485072214e-06, 1.8150136611438938e-06, 1.1137409273942467e-05, 7.365334795395029e-07, 0.00012383305875118822, 7.436557325490867e-07, 1.211162498293561e-06, 1.1848227586597204e-05, 5.755858637712663e-06, 5.922730633756146e-05, 2.9814846129738726e-06, 9.900192026179866e-07], "target_probs": 0.9504944086074829}}


{"result": {"time": "2021-02-11 11:56:47.038989", "n_pass": [442, 38, 38], "n_token": 236, "loss": [0.00030298411729745567, 0.05082417279481888], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def __init__(", "self", ",", "request", ",", "*", "args", ",", "**kwargs", ")", ":", "self", ")", ".", "__init__", "(", "request", ",", "*", "args", ",", "**", "kwargs", ")", "#NEWLINE#", "tenant_choices", "=", "[", "(", ")", "]", "#NEWLINE#", "(", "tenants", ",", "has_more", ")", "=", "api", ".", "keystone", ".", "tenant_list", "(", "request", ")", "#NEWLINE#", "for", "tenant", "in", "tenants", ":", "#NEWLINE#", "#INDENT#", "if", "tenant", ".", "enabled", ":", "#NEWLINE#", "#INDENT#", "tenant_choices", ".", "append", "(", "(", "net_type", ".", "id", ",", "tenant", ".", "name", ")", ")", "#NEWLINE#", "#UNINDENT#", "#UNINDENT#", "self", ".", "fields", "[", "'tenant_id'", "]", ".", "choices", "=", "tenant_choices", "#NEWLINE#", "if", ":", "#NEWLINE#", "#INDENT#", "self", ".", "fields", "[", "'net_profile_id'", "]", ".", "choices", "=", "self", ".", "get_network_profile_choices", "(", "request", ")", "#NEWLINE#", "#UNINDENT#", "if", "api", ".", "neutron", ".", "is_extension_supported", "(", "request", ",", "#NEWLINE#", "#INDENT#", "neutron_settings", "#NEWLINE#", "seg_id_range", "=", "neutron_settings", ".", "get", "#NEWLINE#", "self", ".", "seg_id_range", "=", "{", ":", "seg_id_range", ".", ":", "seg_id_range", ".", "'vxlan'", ":", "seg_id_range", ".", "get", "#NEWLINE#", "seg_id_help", "'For VLAN networks, the VLAN VID on the physical network that realizes the virtual network. Valid VLAN VIDs are %(vlan_min)s through %(vlan_max)s. For GRE or VXLAN networks, the tunnel ID. Valid tunnel IDs for GRE networks are %(gre_min)s through %(gre_max)s. For VXLAN networks, %(vxlan_min)s through %(vxlan_max)s.'", "self", ".", "seg_id_range", "'vlan_max'", ":", "self", ".", "seg_id_range", "[", "'vlan'", "]", "#NEWLINE#", "'gre_min'", ":", "self", ".", "seg_id_range", "[", "'gre'", "self", ".", "seg_id_range", "#NEWLINE#", "'vxlan_min'", ":", "self", ".", "seg_id_range", "[", "'vxlan_max'", ":", "self", ".", "seg_id_range", "[", "self", ".", "fields", "[", "=", "seg_id_help", "#NEWLINE#", "supported_provider_types", "=", "neutron_settings", ".", "get", "(", "'supported_provider_types'", "(", "supported_provider_types", "network_type_choices", "=", "PROVIDER_TYPES", "#NEWLINE#", "#INDENT#", "network_type_choices", "=", "[", "net_type", "for", "net_type", "in", "PROVIDER_TYPES", "if", "(", "net_type", "supported_provider_types", "(", "network_type_choices", ")", "#NEWLINE#", "#INDENT#", "self", ".", "#INDENT#", "self", "=", "network_type_choices", ":", "#NEWLINE#", "#INDENT#", "self", ".", "_hide_provider_network_type", "(", ")"]}}
{"position": {"error_location": 67, "repair_targets": [49, 56, 71], "repair_candidates": [7, 20, 124, 132, 136, 139, 143, 151, 156, 165, 170, 176, 182, 67, 208, 210, 215, 34, 51, 200, 205, 218, 227, 4, 17, 45, 107, 118, 49, 56, 71, 23, 36, 26, 62, 88, 122, 126, 193, 147, 189, 2, 12, 79, 94, 103, 130, 149, 154, 163, 168, 174, 180, 184, 222, 225, 231, 191, 199, 216]}}
{"prediction": {"error_location": 0.9996970891952515, "repair_targets": [0.9184759259223938, 0.015103660523891449, 0.016866186633706093], "repair_candidates": [0.0003430287179071456, 0.0008348012343049049, 7.557323988294229e-05, 0.00018476347031537443, 4.9561826926947106e-06, 1.0585993237555158e-07, 7.55646510697261e-07, 6.45091786282137e-05, 0.003321469994261861, 0.04278348386287689, 9.345790749648586e-05, 0.9184759259223938, 8.781446013017558e-06, 0.015103660523891449, 2.188236976508051e-05, 1.1792844816227444e-06, 0.016866186633706093, 9.680696530267596e-05, 1.844786652327457e-07, 3.6293437005952e-05, 2.9412240110104904e-05, 2.5590403311070986e-05, 7.103985990397632e-05, 2.6038624127977528e-05, 7.175302744144574e-05, 7.111479135346599e-06, 5.188356226426549e-06, 4.371737304609269e-05, 9.609657718101516e-05, 0.0004064178210683167, 5.066117228125222e-05, 1.831335794122424e-06, 1.4028550140210427e-05, 3.710825330927037e-05, 2.596339072624687e-05, 3.088883886448457e-06, 3.492256655590609e-05, 4.47753191110678e-05, 1.635344779060688e-05, 1.310139850829728e-05, 2.4312643290613778e-05, 4.825914220418781e-05, 9.9509721621871e-05, 2.4825621949275956e-05, 2.2521895516547374e-05, 9.339933058072347e-06, 0.00018696831830311567, 1.4749653928447515e-05, 4.945611635776004e-06, 1.65813548846927e-06, 1.2393960787449032e-05, 5.023035782869556e-07, 7.449537224601954e-05, 6.123299840510299e-07, 1.4771100040888996e-06, 4.379162419354543e-06, 6.771082098566694e-06, 0.00011234947305638343, 6.553138973686146e-06, 1.4896891116222832e-06], "target_probs": 0.9504457712173462}}


{"result": {"time": "2021-02-11 11:56:47.133493", "n_pass": [444, 39, 39], "n_token": 232, "loss": [0.00039736481267027557, 0.04559873789548874], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def __init__(", "self", ",", "request", ",", "*", "args", ",", "**kwargs", ")", ":", "self", ")", ".", "__init__", "(", "request", ",", "*", "args", ",", "**", "kwargs", ")", "#NEWLINE#", "tenant_choices", "=", "[", "(", ")", "]", "#NEWLINE#", "(", "tenants", ",", "has_more", ")", "=", "api", ".", "keystone", ".", "tenant_list", "(", "request", ")", "#NEWLINE#", "for", "tenant", "in", "tenants", ":", "#NEWLINE#", "#INDENT#", "if", "tenant", ".", "enabled", ":", "#NEWLINE#", "#INDENT#", "tenant_choices", ".", "append", "(", "(", "net_type", ".", "id", ",", "tenant", ".", "name", ")", ")", "#NEWLINE#", "#UNINDENT#", "#UNINDENT#", "self", ".", "fields", "[", "'tenant_id'", "]", ".", "choices", "=", "tenant_choices", "#NEWLINE#", "if", ":", "#NEWLINE#", "#INDENT#", "self", ".", "fields", "[", "'net_profile_id'", "]", ".", "choices", "=", "self", ".", "get_network_profile_choices", "(", "request", ")", "#NEWLINE#", "#UNINDENT#", "if", "api", ".", "neutron", ".", "is_extension_supported", "(", "request", ",", "#NEWLINE#", "#INDENT#", "neutron_settings", "#NEWLINE#", "seg_id_range", "=", "neutron_settings", ".", "get", "#NEWLINE#", "self", ".", "seg_id_range", "=", "{", ":", "seg_id_range", ".", ":", "seg_id_range", ".", "'vxlan'", ":", "seg_id_range", ".", "get", "#NEWLINE#", "seg_id_help", "'For VLAN networks, the VLAN VID on the physical network that realizes the virtual network. Valid VLAN VIDs are %(vlan_min)s through %(vlan_max)s. For GRE or VXLAN networks, the tunnel ID. Valid tunnel IDs for GRE networks are %(gre_min)s through %(gre_max)s. For VXLAN networks, %(vxlan_min)s through %(vxlan_max)s.'", "self", ".", "seg_id_range", "'vlan_max'", ":", "self", ".", "seg_id_range", "[", "'vlan'", "]", "#NEWLINE#", "'gre_min'", ":", "self", ".", "seg_id_range", "[", "'gre'", "self", ".", "seg_id_range", "#NEWLINE#", "'vxlan_min'", ":", "self", ".", "seg_id_range", "[", "'vxlan_max'", ":", "self", ".", "seg_id_range", "[", "self", ".", "fields", "[", "=", "seg_id_help", "#NEWLINE#", "supported_provider_types", "=", "neutron_settings", ".", "get", "(", "'supported_provider_types'", "(", "supported_provider_types", "network_type_choices", "=", "PROVIDER_TYPES", "#NEWLINE#", "#INDENT#", "network_type_choices", "=", "[", "net_type", "for", "net_type", "in", "PROVIDER_TYPES", "if", "(", "net_type", "supported_provider_types", "(", "network_type_choices", ")", "#NEWLINE#", "#INDENT#", "self", ".", "#INDENT#", "self", "=", "network_type_choices", ":", "#NEWLINE#", "#INDENT#", "self"]}}
{"position": {"error_location": 67, "repair_targets": [49, 56, 71], "repair_candidates": [7, 20, 124, 132, 136, 139, 143, 151, 156, 165, 170, 176, 182, 67, 208, 210, 215, 34, 51, 200, 205, 218, 227, 4, 17, 45, 107, 118, 49, 56, 71, 23, 36, 26, 62, 88, 122, 126, 193, 147, 189, 2, 12, 79, 94, 103, 130, 149, 154, 163, 168, 174, 180, 184, 222, 225, 231, 191, 199, 216]}}
{"prediction": {"error_location": 0.999602735042572, "repair_targets": [0.9251916408538818, 0.014305602759122849, 0.01592801883816719], "repair_candidates": [0.00038133206544443965, 0.0008589911158196628, 8.143991726683453e-05, 0.000158386625116691, 4.486086254473776e-06, 1.256486115153166e-07, 1.3295912140165456e-06, 6.0170015785843134e-05, 0.0031552654691040516, 0.038069698959589005, 9.311797475675121e-05, 0.9251916408538818, 9.168982614937704e-06, 0.014305602759122849, 2.290813426952809e-05, 1.1873430594278034e-06, 0.01592801883816719, 9.542679617879912e-05, 1.9408257401209994e-07, 3.295868737041019e-05, 3.071504761464894e-05, 2.3158017938840203e-05, 6.94167974870652e-05, 3.627880141721107e-05, 7.219478720799088e-05, 6.961166491237236e-06, 5.877501735085389e-06, 3.92530819226522e-05, 8.994516247184947e-05, 0.0003477725258562714, 4.157243893132545e-05, 3.111671048827702e-06, 1.3884405234421138e-05, 3.335702422191389e-05, 2.5626501155784354e-05, 2.774292170215631e-06, 3.802990249823779e-05, 3.723502595676109e-05, 1.707379487925209e-05, 1.181563493446447e-05, 2.3918757506180555e-05, 4.073524542036466e-05, 9.547531954012811e-05, 2.1497473426279612e-05, 2.0599722120095976e-05, 1.0777841453091241e-05, 0.00020149326883256435, 1.558220355946105e-05, 4.4948742470296565e-06, 1.4990796444180887e-06, 1.2377437997201923e-05, 4.115696867756924e-07, 5.681406400981359e-05, 6.049728540347132e-07, 1.4655074664915446e-06, 4.950590209773509e-06, 8.02738213678822e-06, 7.295577961485833e-05, 6.726396804879187e-06, 2.0288136965973536e-06], "target_probs": 0.9554252624511719}}


{"result": {"time": "2021-02-11 11:56:47.228649", "n_pass": [448, 40, 40], "n_token": 229, "loss": [0.0002475670480635017, 0.028429212048649788], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def __init__(", "self", ",", "request", ",", "*", "args", ",", "self", ")", ".", "__init__", "(", "request", ",", "*", "args", ",", "**", "kwargs", ")", "#NEWLINE#", "tenant_choices", "=", "[", "(", ")", "]", "#NEWLINE#", "(", "tenants", ",", "has_more", ")", "=", "api", ".", "keystone", ".", "tenant_list", "(", "request", ")", "#NEWLINE#", "for", "tenant", "in", "tenants", ":", "#NEWLINE#", "#INDENT#", "if", "tenant", ".", "enabled", ":", "#NEWLINE#", "#INDENT#", "tenant_choices", ".", "append", "(", "(", "net_type", ".", "id", ",", "tenant", ".", "name", ")", ")", "#NEWLINE#", "#UNINDENT#", "#UNINDENT#", "self", ".", "fields", "[", "'tenant_id'", "]", ".", "choices", "=", "tenant_choices", "#NEWLINE#", "if", ":", "#NEWLINE#", "#INDENT#", "self", ".", "fields", "[", "'net_profile_id'", "]", ".", "choices", "=", "self", ".", "get_network_profile_choices", "(", "request", ")", "#NEWLINE#", "#UNINDENT#", "if", "api", ".", "neutron", ".", "is_extension_supported", "(", "request", ",", "#NEWLINE#", "#INDENT#", "neutron_settings", "#NEWLINE#", "seg_id_range", "=", "neutron_settings", ".", "get", "#NEWLINE#", "self", ".", "seg_id_range", "=", "{", ":", "seg_id_range", ".", ":", "seg_id_range", ".", "'vxlan'", ":", "seg_id_range", ".", "get", "#NEWLINE#", "seg_id_help", "'For VLAN networks, the VLAN VID on the physical network that realizes the virtual network. Valid VLAN VIDs are %(vlan_min)s through %(vlan_max)s. For GRE or VXLAN networks, the tunnel ID. Valid tunnel IDs for GRE networks are %(gre_min)s through %(gre_max)s. For VXLAN networks, %(vxlan_min)s through %(vxlan_max)s.'", "self", ".", "seg_id_range", "'vlan_max'", ":", "self", ".", "seg_id_range", "[", "'vlan'", "]", "#NEWLINE#", "'gre_min'", ":", "self", ".", "seg_id_range", "[", "'gre'", "self", ".", "seg_id_range", "#NEWLINE#", "'vxlan_min'", ":", "self", ".", "seg_id_range", "[", "'vxlan_max'", ":", "self", ".", "seg_id_range", "[", "self", ".", "fields", "[", "=", "seg_id_help", "#NEWLINE#", "supported_provider_types", "=", "neutron_settings", ".", "get", "(", "'supported_provider_types'", "(", "supported_provider_types", "network_type_choices", "=", "PROVIDER_TYPES", "#NEWLINE#", "#INDENT#", "network_type_choices", "=", "[", "net_type", "for", "net_type", "in", "PROVIDER_TYPES", "if", "(", "net_type", "supported_provider_types", "(", "network_type_choices", ")", "#NEWLINE#", "#INDENT#", "self", ".", "#INDENT#", "self", "=", "network_type_choices", ":", "#NEWLINE#", "#INDENT#", "self"]}}
{"position": {"error_location": 64, "repair_targets": [46, 53, 68], "repair_candidates": [7, 17, 121, 129, 133, 136, 140, 148, 153, 162, 167, 173, 179, 64, 205, 207, 212, 31, 48, 197, 202, 215, 224, 4, 14, 42, 104, 115, 46, 53, 68, 20, 33, 23, 59, 85, 119, 123, 190, 144, 186, 2, 9, 76, 91, 100, 127, 146, 151, 160, 165, 171, 177, 181, 219, 222, 228, 188, 196, 213]}}
{"prediction": {"error_location": 0.9997527003288269, "repair_targets": [0.9230958819389343, 0.016440777108073235, 0.03243444487452507], "repair_candidates": [0.0003281410608906299, 0.0009638731135055423, 5.331906140781939e-05, 0.00027861178386956453, 5.6966223382914905e-06, 3.3866297144413693e-07, 1.0392813237558585e-05, 2.9000275389989838e-05, 0.0015159962931647897, 0.0229506678879261, 0.00013136438792571425, 0.9230958819389343, 2.013953007917735e-06, 0.016440777108073235, 1.729719588183798e-05, 6.541646939695056e-07, 0.03243444487452507, 0.00018941597954835743, 1.7109491068367788e-07, 3.720006498042494e-05, 1.6749212591093965e-05, 4.644535147235729e-05, 0.0001482655352447182, 3.43665960826911e-05, 6.257199129322544e-05, 5.672573479387211e-06, 2.6600434921419946e-06, 1.2901012269139756e-05, 0.0001732199889374897, 0.0002876321959774941, 3.618157279561274e-05, 1.9462370346445823e-06, 1.710525066300761e-05, 5.8137913583777845e-05, 1.626335142645985e-05, 2.011910282817553e-06, 3.969980753026903e-05, 1.0775530427054036e-05, 1.698272353678476e-05, 4.150265795033192e-06, 1.5035532669571694e-05, 1.7517086234875023e-05, 7.757989806123078e-05, 1.0136149285244755e-05, 2.6020181394414976e-05, 3.5870762076228857e-06, 0.00011136274406453595, 1.0163386832573451e-05, 2.4052699245658005e-06, 1.020732611323183e-06, 9.55184532358544e-06, 6.701742449877202e-07, 0.0002034923672908917, 5.788243129245529e-07, 7.880722705522203e-07, 1.4080818573347642e-06, 1.225146661454346e-06, 2.5512526917736977e-05, 1.9530198187567294e-06, 1.0890353223658167e-06], "target_probs": 0.9719710946083069}}


{"result": {"time": "2021-02-11 11:56:47.325037", "n_pass": [454, 41, 41], "n_token": 226, "loss": [0.0005715643637813628, 0.0163267832249403], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def __init__(", "self", ",", "request", ",", "*", "args", ",", "self", ")", ".", "__init__", "(", "request", ",", "*", "args", ",", "**", "kwargs", ")", "#NEWLINE#", "tenant_choices", ")", "]", "#NEWLINE#", "(", "tenants", ",", "has_more", ")", "=", "api", ".", "keystone", ".", "tenant_list", "(", "request", ")", "#NEWLINE#", "for", "tenant", "in", "tenants", ":", "#NEWLINE#", "#INDENT#", "if", "tenant", ".", "enabled", ":", "#NEWLINE#", "#INDENT#", "tenant_choices", ".", "append", "(", "(", "net_type", ".", "id", ",", "tenant", ".", "name", ")", ")", "#NEWLINE#", "#UNINDENT#", "#UNINDENT#", "self", ".", "fields", "[", "'tenant_id'", "]", ".", "choices", "=", "tenant_choices", "#NEWLINE#", "if", ":", "#NEWLINE#", "#INDENT#", "self", ".", "fields", "[", "'net_profile_id'", "]", ".", "choices", "=", "self", ".", "get_network_profile_choices", "(", "request", ")", "#NEWLINE#", "#UNINDENT#", "if", "api", ".", "neutron", ".", "is_extension_supported", "(", "request", ",", "#NEWLINE#", "#INDENT#", "neutron_settings", "#NEWLINE#", "seg_id_range", "=", "neutron_settings", ".", "get", "#NEWLINE#", "self", ".", "seg_id_range", "=", "{", ":", "seg_id_range", ".", ":", "seg_id_range", ".", "'vxlan'", ":", "seg_id_range", ".", "get", "#NEWLINE#", "seg_id_help", "'For VLAN networks, the VLAN VID on the physical network that realizes the virtual network. Valid VLAN VIDs are %(vlan_min)s through %(vlan_max)s. For GRE or VXLAN networks, the tunnel ID. Valid tunnel IDs for GRE networks are %(gre_min)s through %(gre_max)s. For VXLAN networks, %(vxlan_min)s through %(vxlan_max)s.'", "self", ".", "seg_id_range", "'vlan_max'", ":", "self", ".", "seg_id_range", "[", "'vlan'", "]", "#NEWLINE#", "'gre_min'", ":", "self", ".", "seg_id_range", "[", "'gre'", "self", ".", "seg_id_range", "#NEWLINE#", "'vxlan_min'", ":", "self", ".", "seg_id_range", "[", "'vxlan_max'", ":", "self", ".", "seg_id_range", "[", "self", ".", "fields", "[", "=", "seg_id_help", "#NEWLINE#", "supported_provider_types", "=", "neutron_settings", ".", "get", "(", "'supported_provider_types'", "(", "supported_provider_types", "network_type_choices", "=", "PROVIDER_TYPES", "#NEWLINE#", "#INDENT#", "network_type_choices", "=", "[", "net_type", "for", "net_type", "in", "PROVIDER_TYPES", "if", "(", "net_type", "supported_provider_types", "(", "network_type_choices", ")", "#NEWLINE#", "#INDENT#", "self", ".", "#INDENT#", "self", "=", "network_type_choices", ":", "#NEWLINE#", "#INDENT#", "self"]}}
{"position": {"error_location": 61, "repair_targets": [43, 50, 65], "repair_candidates": [7, 17, 118, 126, 130, 133, 137, 145, 150, 159, 164, 170, 176, 61, 202, 204, 209, 28, 45, 194, 199, 212, 221, 4, 14, 39, 101, 112, 43, 50, 65, 20, 30, 23, 56, 82, 116, 120, 187, 141, 183, 2, 9, 73, 88, 97, 124, 143, 148, 157, 162, 168, 174, 178, 216, 219, 225, 185, 193, 210]}}
{"prediction": {"error_location": 0.9994284510612488, "repair_targets": [0.8914316296577454, 0.028277438133955002, 0.06409667432308197], "repair_candidates": [0.00043046873179264367, 0.0014778008917346597, 6.947423389647156e-05, 0.00025851462851278484, 1.1690828614518978e-05, 5.763521926382964e-07, 3.286494029453024e-05, 0.0001336343993898481, 0.001312993816100061, 0.008611489087343216, 0.0002020482497755438, 0.8914316296577454, 3.570206672520726e-06, 0.028277438133955002, 2.938297802757006e-05, 1.1444274150562705e-06, 0.06409667432308197, 0.0005041076801717281, 1.1648311328826821e-06, 5.5637399782426655e-05, 1.537620300950948e-05, 0.0001349630911136046, 0.00032806757371872663, 0.00010166040738113225, 0.00011998292029602453, 1.8937074855784886e-05, 4.1069756662182044e-06, 3.1662231776863337e-05, 0.00014906772412359715, 0.00023232314561028033, 3.3979664294747636e-05, 7.506716428906657e-06, 1.7966645827982575e-05, 7.617564551765099e-05, 1.7526079318486154e-05, 6.479247076640604e-06, 4.779130904353224e-05, 2.829438744811341e-05, 2.3262875401997007e-05, 9.336309631180484e-06, 2.8624199330806732e-05, 4.029300907859579e-05, 4.76435488963034e-05, 3.813978037214838e-05, 1.8273194655193947e-05, 1.4957405255699996e-05, 0.00029502075631171465, 2.1020245185354725e-05, 1.2207133295305539e-05, 2.5712320166348945e-06, 4.2632847907952964e-05, 4.512781288212864e-06, 0.0009723316179588437, 1.01205648661562e-06, 1.0214265785180032e-05, 1.0164028935832903e-05, 3.358543381182244e-06, 6.884711910970509e-05, 6.006661351420917e-06, 1.5202936083369423e-05], "target_probs": 0.983805775642395}}


{"result": {"time": "2021-02-11 11:56:47.418041", "n_pass": [455, 42, 42], "n_token": 223, "loss": [0.0010370597010478377, 0.01710173301398754], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def __init__(", "self", ",", "request", ",", "*", "args", ",", "self", ")", ".", "__init__", "(", "request", ",", "*", "args", ",", "**", "kwargs", ")", "#NEWLINE#", "tenant_choices", "(", "tenants", ",", "has_more", ")", "=", "api", ".", "keystone", ".", "tenant_list", "(", "request", ")", "#NEWLINE#", "for", "tenant", "in", "tenants", ":", "#NEWLINE#", "#INDENT#", "if", "tenant", ".", "enabled", ":", "#NEWLINE#", "#INDENT#", "tenant_choices", ".", "append", "(", "(", "net_type", ".", "id", ",", "tenant", ".", "name", ")", ")", "#NEWLINE#", "#UNINDENT#", "#UNINDENT#", "self", ".", "fields", "[", "'tenant_id'", "]", ".", "choices", "=", "tenant_choices", "#NEWLINE#", "if", ":", "#NEWLINE#", "#INDENT#", "self", ".", "fields", "[", "'net_profile_id'", "]", ".", "choices", "=", "self", ".", "get_network_profile_choices", "(", "request", ")", "#NEWLINE#", "#UNINDENT#", "if", "api", ".", "neutron", ".", "is_extension_supported", "(", "request", ",", "#NEWLINE#", "#INDENT#", "neutron_settings", "#NEWLINE#", "seg_id_range", "=", "neutron_settings", ".", "get", "#NEWLINE#", "self", ".", "seg_id_range", "=", "{", ":", "seg_id_range", ".", ":", "seg_id_range", ".", "'vxlan'", ":", "seg_id_range", ".", "get", "#NEWLINE#", "seg_id_help", "'For VLAN networks, the VLAN VID on the physical network that realizes the virtual network. Valid VLAN VIDs are %(vlan_min)s through %(vlan_max)s. For GRE or VXLAN networks, the tunnel ID. Valid tunnel IDs for GRE networks are %(gre_min)s through %(gre_max)s. For VXLAN networks, %(vxlan_min)s through %(vxlan_max)s.'", "self", ".", "seg_id_range", "'vlan_max'", ":", "self", ".", "seg_id_range", "[", "'vlan'", "]", "#NEWLINE#", "'gre_min'", ":", "self", ".", "seg_id_range", "[", "'gre'", "self", ".", "seg_id_range", "#NEWLINE#", "'vxlan_min'", ":", "self", ".", "seg_id_range", "[", "'vxlan_max'", ":", "self", ".", "seg_id_range", "[", "self", ".", "fields", "[", "=", "seg_id_help", "#NEWLINE#", "supported_provider_types", "=", "neutron_settings", ".", "get", "(", "'supported_provider_types'", "(", "supported_provider_types", "network_type_choices", "=", "PROVIDER_TYPES", "#NEWLINE#", "#INDENT#", "network_type_choices", "=", "[", "net_type", "for", "net_type", "in", "PROVIDER_TYPES", "if", "(", "net_type", "supported_provider_types", "(", "network_type_choices", ")", "#NEWLINE#", "#INDENT#", "self", ".", "#INDENT#", "self", "=", "network_type_choices", ":", "#NEWLINE#", "#INDENT#", "self"]}}
{"position": {"error_location": 58, "repair_targets": [40, 47, 62], "repair_candidates": [7, 17, 115, 123, 127, 130, 134, 142, 147, 156, 161, 167, 173, 58, 199, 201, 206, 25, 42, 191, 196, 209, 218, 4, 14, 36, 98, 109, 40, 47, 62, 20, 27, 23, 53, 79, 113, 117, 184, 138, 180, 2, 9, 70, 85, 94, 121, 140, 145, 154, 159, 165, 171, 175, 213, 216, 222, 182, 190, 207]}}
{"prediction": {"error_location": 0.9989637136459351, "repair_targets": [0.872577428817749, 0.04340579733252525, 0.06706047058105469], "repair_candidates": [0.0008510267944075167, 0.0016028290847316384, 0.00017540370754431933, 0.0003939966845791787, 2.631212555570528e-05, 2.4420139652647777e-06, 6.755234790034592e-05, 7.950545841595158e-05, 0.0003687999560497701, 0.0034467275254428387, 0.0003491026582196355, 0.872577428817749, 6.869157368782908e-05, 0.04340579733252525, 4.599848034558818e-05, 2.092060412905994e-06, 0.06706047058105469, 0.0011454100022092462, 2.1387751985457726e-05, 0.00016225331637542695, 4.942480882164091e-05, 0.00015877430269028991, 0.00039501514402218163, 0.00015183792856987566, 0.0003304148849565536, 8.892351615941152e-05, 2.0844221580773592e-05, 0.00028585264226421714, 9.786335431272164e-05, 0.00042376029887236655, 0.00017278829182032496, 2.185435005230829e-05, 7.291448855539784e-05, 0.00042682208004407585, 8.512576459906995e-05, 2.8859167287009768e-05, 0.00045735048479400575, 8.847121353028342e-05, 0.00017736827430780977, 2.6112240448128432e-05, 0.0004576166102197021, 0.00017445346747990698, 0.0005579995922744274, 0.00020170328207314014, 8.91660456545651e-05, 4.268017073627561e-05, 0.0002374787873122841, 9.051710367202759e-05, 2.027904338319786e-05, 1.1262225598329678e-05, 6.0913098423043266e-05, 4.930858722218545e-06, 0.0025290383491665125, 6.149625733087305e-07, 8.545751370547805e-06, 5.67598453926621e-06, 4.05486889576423e-06, 7.585422281408682e-05, 3.027959792234469e-06, 1.0506582839298062e-05], "target_probs": 0.9830436706542969}}


{"result": {"time": "2021-02-11 11:56:47.513352", "n_pass": [458, 43, 43], "n_token": 220, "loss": [0.0010941001819446683, 0.019160576164722443], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def __init__(", "self", ",", "request", ",", "*", "args", ",", "self", ")", ".", "__init__", "(", "request", ",", "*", "args", ",", "**", "kwargs", ")", "#NEWLINE#", "tenant_choices", "(", "tenants", ",", "has_more", ")", "=", ".", "tenant_list", "(", "request", ")", "#NEWLINE#", "for", "tenant", "in", "tenants", ":", "#NEWLINE#", "#INDENT#", "if", "tenant", ".", "enabled", ":", "#NEWLINE#", "#INDENT#", "tenant_choices", ".", "append", "(", "(", "net_type", ".", "id", ",", "tenant", ".", "name", ")", ")", "#NEWLINE#", "#UNINDENT#", "#UNINDENT#", "self", ".", "fields", "[", "'tenant_id'", "]", ".", "choices", "=", "tenant_choices", "#NEWLINE#", "if", ":", "#NEWLINE#", "#INDENT#", "self", ".", "fields", "[", "'net_profile_id'", "]", ".", "choices", "=", "self", ".", "get_network_profile_choices", "(", "request", ")", "#NEWLINE#", "#UNINDENT#", "if", "api", ".", "neutron", ".", "is_extension_supported", "(", "request", ",", "#NEWLINE#", "#INDENT#", "neutron_settings", "#NEWLINE#", "seg_id_range", "=", "neutron_settings", ".", "get", "#NEWLINE#", "self", ".", "seg_id_range", "=", "{", ":", "seg_id_range", ".", ":", "seg_id_range", ".", "'vxlan'", ":", "seg_id_range", ".", "get", "#NEWLINE#", "seg_id_help", "'For VLAN networks, the VLAN VID on the physical network that realizes the virtual network. Valid VLAN VIDs are %(vlan_min)s through %(vlan_max)s. For GRE or VXLAN networks, the tunnel ID. Valid tunnel IDs for GRE networks are %(gre_min)s through %(gre_max)s. For VXLAN networks, %(vxlan_min)s through %(vxlan_max)s.'", "self", ".", "seg_id_range", "'vlan_max'", ":", "self", ".", "seg_id_range", "[", "'vlan'", "]", "#NEWLINE#", "'gre_min'", ":", "self", ".", "seg_id_range", "[", "'gre'", "self", ".", "seg_id_range", "#NEWLINE#", "'vxlan_min'", ":", "self", ".", "seg_id_range", "[", "'vxlan_max'", ":", "self", ".", "seg_id_range", "[", "self", ".", "fields", "[", "=", "seg_id_help", "#NEWLINE#", "supported_provider_types", "=", "neutron_settings", ".", "get", "(", "'supported_provider_types'", "(", "supported_provider_types", "network_type_choices", "=", "PROVIDER_TYPES", "#NEWLINE#", "#INDENT#", "network_type_choices", "=", "[", "net_type", "for", "net_type", "in", "PROVIDER_TYPES", "if", "(", "net_type", "supported_provider_types", "(", "network_type_choices", ")", "#NEWLINE#", "#INDENT#", "self", ".", "#INDENT#", "self", "=", "network_type_choices", ":", "#NEWLINE#", "#INDENT#", "self"]}}
{"position": {"error_location": 55, "repair_targets": [37, 44, 59], "repair_candidates": [7, 17, 112, 120, 124, 127, 131, 139, 144, 153, 158, 164, 170, 55, 196, 198, 203, 25, 39, 188, 193, 206, 215, 4, 14, 33, 95, 106, 37, 44, 59, 20, 27, 23, 50, 76, 110, 114, 181, 135, 177, 2, 9, 67, 82, 91, 118, 137, 142, 151, 156, 162, 168, 172, 210, 213, 219, 179, 187, 204]}}
{"prediction": {"error_location": 0.9989066123962402, "repair_targets": [0.8616666793823242, 0.06037810817360878, 0.058977000415325165], "repair_candidates": [0.001238146098330617, 0.002306924667209387, 0.0002725755039136857, 0.0005047328886575997, 2.6161467758356594e-05, 3.6990870739828097e-06, 7.538100908277556e-05, 8.501136471750215e-05, 0.0006012257072143257, 0.0029515614733099937, 0.000360359059413895, 0.8616666793823242, 0.0003291002940386534, 0.06037810817360878, 6.928481161594391e-05, 1.181605057354318e-06, 0.058977000415325165, 0.0014133622171357274, 6.506434147013351e-05, 5.406017226050608e-05, 2.208536352554802e-05, 0.00015000140410847962, 0.00030775999766774476, 0.00022223636915441602, 0.00044788880040869117, 4.703368904301897e-05, 1.256601626664633e-05, 0.00045258505269885063, 3.154014848405495e-05, 0.00014863081742078066, 0.00024946231860667467, 7.269300112966448e-05, 4.21133081545122e-05, 0.0003849490312859416, 3.49128276866395e-05, 4.846435695071705e-05, 0.0001771103125065565, 0.00015824851288925856, 8.413529576500878e-05, 2.9358807296375744e-05, 0.0001852086279541254, 0.0001600175746716559, 0.00023524786229245365, 0.00018890263163484633, 3.433433812460862e-05, 2.57656993198907e-05, 0.00036389578599482775, 2.4803266569506377e-05, 2.7821452022180893e-05, 1.6682930436218157e-05, 6.65204570395872e-05, 8.615642400400247e-06, 0.0040597557090222836, 5.370913527258381e-07, 4.711119345301995e-06, 2.5448318865528563e-06, 4.936485765938414e-06, 7.058890332700685e-05, 1.4061967021916644e-06, 1.429058647772763e-05], "target_probs": 0.9810218214988708}}


{"result": {"time": "2021-02-11 11:56:47.606405", "n_pass": [459, 44, 44], "n_token": 217, "loss": [0.001958239823579788, 0.020387114956974983], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def __init__(", "self", ",", "request", ",", "*", "args", ",", "self", ")", ".", "__init__", "(", "request", ",", "*", "args", ",", "**", "kwargs", ")", "#NEWLINE#", "tenant_choices", "(", "tenants", ",", "has_more", ")", "=", "request", ")", "#NEWLINE#", "for", "tenant", "in", "tenants", ":", "#NEWLINE#", "#INDENT#", "if", "tenant", ".", "enabled", ":", "#NEWLINE#", "#INDENT#", "tenant_choices", ".", "append", "(", "(", "net_type", ".", "id", ",", "tenant", ".", "name", ")", ")", "#NEWLINE#", "#UNINDENT#", "#UNINDENT#", "self", ".", "fields", "[", "'tenant_id'", "]", ".", "choices", "=", "tenant_choices", "#NEWLINE#", "if", ":", "#NEWLINE#", "#INDENT#", "self", ".", "fields", "[", "'net_profile_id'", "]", ".", "choices", "=", "self", ".", "get_network_profile_choices", "(", "request", ")", "#NEWLINE#", "#UNINDENT#", "if", "api", ".", "neutron", ".", "is_extension_supported", "(", "request", ",", "#NEWLINE#", "#INDENT#", "neutron_settings", "#NEWLINE#", "seg_id_range", "=", "neutron_settings", ".", "get", "#NEWLINE#", "self", ".", "seg_id_range", "=", "{", ":", "seg_id_range", ".", ":", "seg_id_range", ".", "'vxlan'", ":", "seg_id_range", ".", "get", "#NEWLINE#", "seg_id_help", "'For VLAN networks, the VLAN VID on the physical network that realizes the virtual network. Valid VLAN VIDs are %(vlan_min)s through %(vlan_max)s. For GRE or VXLAN networks, the tunnel ID. Valid tunnel IDs for GRE networks are %(gre_min)s through %(gre_max)s. For VXLAN networks, %(vxlan_min)s through %(vxlan_max)s.'", "self", ".", "seg_id_range", "'vlan_max'", ":", "self", ".", "seg_id_range", "[", "'vlan'", "]", "#NEWLINE#", "'gre_min'", ":", "self", ".", "seg_id_range", "[", "'gre'", "self", ".", "seg_id_range", "#NEWLINE#", "'vxlan_min'", ":", "self", ".", "seg_id_range", "[", "'vxlan_max'", ":", "self", ".", "seg_id_range", "[", "self", ".", "fields", "[", "=", "seg_id_help", "#NEWLINE#", "supported_provider_types", "=", "neutron_settings", ".", "get", "(", "'supported_provider_types'", "(", "supported_provider_types", "network_type_choices", "=", "PROVIDER_TYPES", "#NEWLINE#", "#INDENT#", "network_type_choices", "=", "[", "net_type", "for", "net_type", "in", "PROVIDER_TYPES", "if", "(", "net_type", "supported_provider_types", "(", "network_type_choices", ")", "#NEWLINE#", "#INDENT#", "self", ".", "#INDENT#", "self", "=", "network_type_choices", ":", "#NEWLINE#", "#INDENT#", "self"]}}
{"position": {"error_location": 52, "repair_targets": [34, 41, 56], "repair_candidates": [7, 17, 109, 117, 121, 124, 128, 136, 141, 150, 155, 161, 167, 52, 193, 195, 200, 25, 36, 185, 190, 203, 212, 4, 14, 30, 92, 103, 34, 41, 56, 20, 27, 23, 47, 73, 107, 111, 178, 132, 174, 2, 9, 64, 79, 88, 115, 134, 139, 148, 153, 159, 165, 169, 207, 210, 216, 176, 184, 201]}}
{"prediction": {"error_location": 0.9980436563491821, "repair_targets": [0.8481935858726501, 0.07426301389932632, 0.05736266076564789], "repair_candidates": [0.0023184469901025295, 0.0021968332584947348, 0.00045180722372606397, 0.0008087415480986238, 7.015098526608199e-05, 1.2050310942868236e-05, 0.00031738245161250234, 0.00013575631601270288, 0.0004957306664437056, 0.00118430913425982, 0.0004194021748844534, 0.8481935858726501, 0.0008768448024056852, 0.07426301389932632, 7.209770410554484e-05, 1.6797591797512723e-06, 0.05736266076564789, 0.002186013152822852, 8.160404104273766e-05, 0.000150939857121557, 2.7771820896305144e-05, 0.00017617634148336947, 0.0002086712047457695, 0.00032536120852455497, 0.0005084853037260473, 4.865644223173149e-05, 1.774676093191374e-05, 0.0005273413262329996, 2.0780444174306467e-05, 7.572085451101884e-05, 0.0002620787126943469, 0.00023792803403921425, 6.255588232306764e-05, 0.00032008899142965674, 3.867984560201876e-05, 5.3704057791037485e-05, 8.570237696403638e-05, 0.00017493222549092025, 3.7650344893336296e-05, 2.550999852246605e-05, 0.00029128981987014413, 0.00014960119733586907, 0.0008431753958575428, 0.00019590658484958112, 7.156373612815514e-05, 2.301618405908812e-05, 0.0006649219430983067, 4.234220250509679e-05, 1.697840343695134e-05, 7.115211246855324e-06, 7.15047208359465e-05, 1.2671661352214869e-05, 0.002665596315637231, 1.1525950185387046e-06, 7.122706392692635e-06, 3.902552634826861e-06, 5.02490775033948e-06, 8.144450839608908e-05, 7.6510423241416e-06, 3.4821953249775106e-06], "target_probs": 0.9798192977905273}}


{"result": {"time": "2021-02-11 11:56:47.701808", "n_pass": [464, 45, 45], "n_token": 214, "loss": [0.00437540840357542, 0.01771431230008602], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def __init__(", "self", ",", "request", ",", "*", "args", ",", "self", ")", ".", "__init__", "(", "request", ",", "*", "args", ",", "**", "kwargs", ")", "#NEWLINE#", "tenant_choices", "(", "tenants", ",", "has_more", ")", "=", "request", ")", "#NEWLINE#", "for", "tenant", "in", "tenants", ":", "#NEWLINE#", "#INDENT#", "if", "tenant", "#NEWLINE#", "#INDENT#", "tenant_choices", ".", "append", "(", "(", "net_type", ".", "id", ",", "tenant", ".", "name", ")", ")", "#NEWLINE#", "#UNINDENT#", "#UNINDENT#", "self", ".", "fields", "[", "'tenant_id'", "]", ".", "choices", "=", "tenant_choices", "#NEWLINE#", "if", ":", "#NEWLINE#", "#INDENT#", "self", ".", "fields", "[", "'net_profile_id'", "]", ".", "choices", "=", "self", ".", "get_network_profile_choices", "(", "request", ")", "#NEWLINE#", "#UNINDENT#", "if", "api", ".", "neutron", ".", "is_extension_supported", "(", "request", ",", "#NEWLINE#", "#INDENT#", "neutron_settings", "#NEWLINE#", "seg_id_range", "=", "neutron_settings", ".", "get", "#NEWLINE#", "self", ".", "seg_id_range", "=", "{", ":", "seg_id_range", ".", ":", "seg_id_range", ".", "'vxlan'", ":", "seg_id_range", ".", "get", "#NEWLINE#", "seg_id_help", "'For VLAN networks, the VLAN VID on the physical network that realizes the virtual network. Valid VLAN VIDs are %(vlan_min)s through %(vlan_max)s. For GRE or VXLAN networks, the tunnel ID. Valid tunnel IDs for GRE networks are %(gre_min)s through %(gre_max)s. For VXLAN networks, %(vxlan_min)s through %(vxlan_max)s.'", "self", ".", "seg_id_range", "'vlan_max'", ":", "self", ".", "seg_id_range", "[", "'vlan'", "]", "#NEWLINE#", "'gre_min'", ":", "self", ".", "seg_id_range", "[", "'gre'", "self", ".", "seg_id_range", "#NEWLINE#", "'vxlan_min'", ":", "self", ".", "seg_id_range", "[", "'vxlan_max'", ":", "self", ".", "seg_id_range", "[", "self", ".", "fields", "[", "=", "seg_id_help", "#NEWLINE#", "supported_provider_types", "=", "neutron_settings", ".", "get", "(", "'supported_provider_types'", "(", "supported_provider_types", "network_type_choices", "=", "PROVIDER_TYPES", "#NEWLINE#", "#INDENT#", "network_type_choices", "=", "[", "net_type", "for", "net_type", "in", "PROVIDER_TYPES", "if", "(", "net_type", "supported_provider_types", "(", "network_type_choices", ")", "#NEWLINE#", "#INDENT#", "self", ".", "#INDENT#", "self", "=", "network_type_choices", ":", "#NEWLINE#", "#INDENT#", "self"]}}
{"position": {"error_location": 49, "repair_targets": [34, 41, 53], "repair_candidates": [7, 17, 106, 114, 118, 121, 125, 133, 138, 147, 152, 158, 164, 49, 190, 192, 197, 25, 36, 182, 187, 200, 209, 4, 14, 30, 89, 100, 34, 41, 53, 20, 27, 23, 44, 70, 104, 108, 175, 129, 171, 2, 9, 61, 76, 85, 112, 131, 136, 145, 150, 156, 162, 166, 204, 207, 213, 173, 181, 198]}}
{"prediction": {"error_location": 0.9956342577934265, "repair_targets": [0.9267412424087524, 0.00446324935182929, 0.05123714730143547], "repair_candidates": [0.00263802008703351, 0.002223478863015771, 0.0004000140179414302, 0.0009721764945425093, 5.5756998335709795e-05, 1.4979099432821386e-05, 0.000229235491133295, 0.00014619393914472312, 0.0005840999656356871, 0.001037522335536778, 0.00035364209907129407, 0.9267412424087524, 0.00042500661220401525, 0.00446324935182929, 0.00011222405009903014, 2.857803883671295e-05, 0.05123714730143547, 0.0006698719225823879, 0.0001027492035063915, 7.745708717266098e-05, 2.24016130232485e-05, 0.00014088096213527024, 0.0001637213135836646, 0.0003151917189825326, 0.0004903858643956482, 0.00013748732453677803, 1.906616671476513e-05, 0.0003784799773711711, 1.654272637097165e-05, 5.862043326487765e-05, 0.00013306400796864182, 5.154993414180353e-05, 5.081600829726085e-05, 0.00036137670394964516, 3.908785220119171e-05, 7.016187737463042e-05, 4.110906593268737e-05, 0.00039274702430702746, 1.82970252353698e-05, 2.0654502804973163e-05, 0.00014475651551038027, 0.0001476926845498383, 0.000350552232703194, 0.00019356876146048307, 0.0001390630059177056, 2.698411299206782e-05, 0.0014991480857133865, 2.7918875275645405e-05, 1.764719854691066e-05, 2.726689217524836e-06, 5.585471080848947e-05, 1.8971502868225798e-05, 0.0017446121200919151, 2.996359398821369e-06, 1.7631957234698348e-05, 2.6811667339643463e-06, 4.516989065450616e-05, 0.00010875592852244154, 1.1573160918487702e-05, 7.396164164674701e-06], "target_probs": 0.9824416637420654}}


{"result": {"time": "2021-02-11 11:56:47.794426", "n_pass": [466, 46, 46], "n_token": 211, "loss": [0.003177833277732134, 0.018123067915439606], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def __init__(", "self", ",", "request", ",", "*", "args", ",", "self", ")", ".", "__init__", "(", "request", ",", "*", "args", ",", "**", "kwargs", ")", "#NEWLINE#", "tenant_choices", "(", "tenants", ",", "has_more", ")", "=", "request", ")", "#NEWLINE#", "for", "tenant", "in", "tenants", ":", "#NEWLINE#", "#INDENT#", "if", "tenant", "#NEWLINE#", "#INDENT#", "tenant_choices", "(", "net_type", ".", "id", ",", "tenant", ".", "name", ")", ")", "#NEWLINE#", "#UNINDENT#", "#UNINDENT#", "self", ".", "fields", "[", "'tenant_id'", "]", ".", "choices", "=", "tenant_choices", "#NEWLINE#", "if", ":", "#NEWLINE#", "#INDENT#", "self", ".", "fields", "[", "'net_profile_id'", "]", ".", "choices", "=", "self", ".", "get_network_profile_choices", "(", "request", ")", "#NEWLINE#", "#UNINDENT#", "if", "api", ".", "neutron", ".", "is_extension_supported", "(", "request", ",", "#NEWLINE#", "#INDENT#", "neutron_settings", "#NEWLINE#", "seg_id_range", "=", "neutron_settings", ".", "get", "#NEWLINE#", "self", ".", "seg_id_range", "=", "{", ":", "seg_id_range", ".", ":", "seg_id_range", ".", "'vxlan'", ":", "seg_id_range", ".", "get", "#NEWLINE#", "seg_id_help", "'For VLAN networks, the VLAN VID on the physical network that realizes the virtual network. Valid VLAN VIDs are %(vlan_min)s through %(vlan_max)s. For GRE or VXLAN networks, the tunnel ID. Valid tunnel IDs for GRE networks are %(gre_min)s through %(gre_max)s. For VXLAN networks, %(vxlan_min)s through %(vxlan_max)s.'", "self", ".", "seg_id_range", "'vlan_max'", ":", "self", ".", "seg_id_range", "[", "'vlan'", "]", "#NEWLINE#", "'gre_min'", ":", "self", ".", "seg_id_range", "[", "'gre'", "self", ".", "seg_id_range", "#NEWLINE#", "'vxlan_min'", ":", "self", ".", "seg_id_range", "[", "'vxlan_max'", ":", "self", ".", "seg_id_range", "[", "self", ".", "fields", "[", "=", "seg_id_help", "#NEWLINE#", "supported_provider_types", "=", "neutron_settings", ".", "get", "(", "'supported_provider_types'", "(", "supported_provider_types", "network_type_choices", "=", "PROVIDER_TYPES", "#NEWLINE#", "#INDENT#", "network_type_choices", "=", "[", "net_type", "for", "net_type", "in", "PROVIDER_TYPES", "if", "(", "net_type", "supported_provider_types", "(", "network_type_choices", ")", "#NEWLINE#", "#INDENT#", "self", ".", "#INDENT#", "self", "=", "network_type_choices", ":", "#NEWLINE#", "#INDENT#", "self"]}}
{"position": {"error_location": 46, "repair_targets": [34, 41, 50], "repair_candidates": [7, 17, 103, 111, 115, 118, 122, 130, 135, 144, 149, 155, 161, 46, 187, 189, 194, 25, 36, 179, 184, 197, 206, 4, 14, 30, 86, 97, 34, 41, 50, 20, 27, 23, 44, 67, 101, 105, 172, 126, 168, 2, 9, 58, 73, 82, 109, 128, 133, 142, 147, 153, 159, 163, 201, 204, 210, 170, 178, 195]}}
{"prediction": {"error_location": 0.9968273043632507, "repair_targets": [0.9712453484535217, 0.002751546213403344, 0.008043279871344566], "repair_candidates": [0.004503273405134678, 0.0038575995713472366, 0.0002555568644311279, 0.0018157738959416747, 5.139016138855368e-05, 8.329963748110458e-06, 0.00010279606067342684, 0.000254419312113896, 0.00047187082236632705, 0.0012585807126015425, 0.0006749597378075123, 0.9712453484535217, 0.00017878606740850955, 0.002751546213403344, 0.00018598666065372527, 6.163022044347599e-05, 0.008043279871344566, 0.0006137920427136123, 7.199545507319272e-05, 0.0001488394191255793, 1.1788993106165435e-05, 0.00018974464910570532, 0.00021855351224076003, 0.00022606216953136027, 0.00035288697108626366, 0.00031296914676204324, 1.182244250230724e-05, 0.0002934006042778492, 1.2361570043140091e-05, 2.1403982827905566e-05, 5.1935920055257156e-05, 1.3286600733408704e-05, 1.6070947822299786e-05, 6.476703856606036e-05, 2.731409404077567e-05, 2.998819763888605e-05, 1.4875577107886784e-05, 0.0002786667610052973, 6.6495595092419535e-06, 1.1388012353563681e-05, 2.5096300305449404e-05, 1.753435208229348e-05, 6.931379903107882e-05, 7.992141763679683e-05, 4.5975655666552484e-05, 1.2660510037676431e-05, 0.00046551661216653883, 3.6384546547196805e-05, 1.3225830116425641e-05, 2.7274882086203434e-06, 3.8386813685065135e-05, 3.650436838142923e-06, 0.00010068251140182838, 3.5348247706679103e-07, 6.232574378373101e-06, 1.1104021950814058e-06, 4.890653508482501e-05, 0.0001281709992326796, 3.7191991850704653e-06, 0.00017881694657262415], "target_probs": 0.9820401668548584}}


{"result": {"time": "2021-02-11 11:56:47.887278", "n_pass": [469, 47, 47], "n_token": 208, "loss": [0.018524382263422012, 0.25442707538604736], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def __init__(", "self", ",", "request", ",", "*", "args", ",", "self", ")", ".", "__init__", "(", "request", ",", "*", "args", ",", "**", "kwargs", ")", "#NEWLINE#", "tenant_choices", "(", "tenants", ",", "has_more", ")", "=", "request", ")", "#NEWLINE#", "for", "tenant", "in", "tenants", ":", "#NEWLINE#", "#INDENT#", "if", "tenant", "#NEWLINE#", "#INDENT#", "tenant_choices", "(", "net_type", ".", "id", ",", "tenant", ")", "#NEWLINE#", "#UNINDENT#", "#UNINDENT#", "self", ".", "fields", "[", "'tenant_id'", "]", ".", "choices", "=", "tenant_choices", "#NEWLINE#", "if", ":", "#NEWLINE#", "#INDENT#", "self", ".", "fields", "[", "'net_profile_id'", "]", ".", "choices", "=", "self", ".", "get_network_profile_choices", "(", "request", ")", "#NEWLINE#", "#UNINDENT#", "if", "api", ".", "neutron", ".", "is_extension_supported", "(", "request", ",", "#NEWLINE#", "#INDENT#", "neutron_settings", "#NEWLINE#", "seg_id_range", "=", "neutron_settings", ".", "get", "#NEWLINE#", "self", ".", "seg_id_range", "=", "{", ":", "seg_id_range", ".", ":", "seg_id_range", ".", "'vxlan'", ":", "seg_id_range", ".", "get", "#NEWLINE#", "seg_id_help", "'For VLAN networks, the VLAN VID on the physical network that realizes the virtual network. Valid VLAN VIDs are %(vlan_min)s through %(vlan_max)s. For GRE or VXLAN networks, the tunnel ID. Valid tunnel IDs for GRE networks are %(gre_min)s through %(gre_max)s. For VXLAN networks, %(vxlan_min)s through %(vxlan_max)s.'", "self", ".", "seg_id_range", "'vlan_max'", ":", "self", ".", "seg_id_range", "[", "'vlan'", "]", "#NEWLINE#", "'gre_min'", ":", "self", ".", "seg_id_range", "[", "'gre'", "self", ".", "seg_id_range", "#NEWLINE#", "'vxlan_min'", ":", "self", ".", "seg_id_range", "[", "'vxlan_max'", ":", "self", ".", "seg_id_range", "[", "self", ".", "fields", "[", "=", "seg_id_help", "#NEWLINE#", "supported_provider_types", "=", "neutron_settings", ".", "get", "(", "'supported_provider_types'", "(", "supported_provider_types", "network_type_choices", "=", "PROVIDER_TYPES", "#NEWLINE#", "#INDENT#", "network_type_choices", "=", "[", "net_type", "for", "net_type", "in", "PROVIDER_TYPES", "if", "(", "net_type", "supported_provider_types", "(", "network_type_choices", ")", "#NEWLINE#", "#INDENT#", "self", ".", "#INDENT#", "self", "=", "network_type_choices", ":", "#NEWLINE#", "#INDENT#", "self"]}}
{"position": {"error_location": 46, "repair_targets": [34, 41, 50], "repair_candidates": [7, 17, 100, 108, 112, 115, 119, 127, 132, 141, 146, 152, 158, 46, 184, 186, 191, 25, 36, 176, 181, 194, 203, 4, 14, 30, 83, 94, 34, 41, 50, 20, 27, 23, 44, 64, 98, 102, 169, 123, 165, 2, 9, 55, 70, 79, 106, 125, 130, 139, 144, 150, 156, 160, 198, 201, 207, 167, 175, 192]}}
{"prediction": {"error_location": 0.9816460013389587, "repair_targets": [0.7664831876754761, 0.008726348169147968, 0.00015101621102076024], "repair_candidates": [0.11502289772033691, 0.04206886142492294, 0.0019757624249905348, 0.0373932346701622, 0.0004606847942341119, 5.1667051593540236e-05, 0.000663112208712846, 0.0009431783691979945, 0.0011183314491063356, 0.0018149144016206264, 0.00492441188544035, 0.7664831876754761, 0.000334637938067317, 0.008726348169147968, 0.000322049658279866, 6.149426917545497e-05, 0.00015101621102076024, 0.0021752328611910343, 0.00017711050168145448, 0.0012438578996807337, 0.00021130101231392473, 0.0012168838875368237, 0.00152228819206357, 0.0011109743500128388, 0.0013009370304644108, 0.0026050447486341, 5.851908281329088e-05, 0.0004247484903316945, 5.220573802944273e-05, 3.7070993130328134e-05, 9.755911742104217e-05, 0.00011215147242182866, 0.00011101243580924347, 4.394788993522525e-05, 0.0002529272169340402, 2.459504503349308e-05, 6.811886123614386e-05, 0.000247313582804054, 3.336575537105091e-05, 3.303696576040238e-05, 8.325334056280553e-05, 2.0943774870829657e-05, 0.0001869261614046991, 7.123751856852323e-05, 0.00013836937432643026, 4.976691343472339e-05, 0.0022131013683974743, 0.00010254231165163219, 6.545020005432889e-05, 1.5415100278914906e-05, 0.00023069688177201897, 9.584972758602817e-06, 8.012291800696403e-05, 8.92459979695559e-07, 2.344137647014577e-05, 2.2936155801289715e-06, 0.00037122558569535613, 0.0004423961800057441, 1.4621472473663744e-05, 0.0002017602528212592], "target_probs": 0.7753605842590332}}


{"result": {"time": "2021-02-11 11:56:47.978129", "n_pass": [470, 48, 48], "n_token": 205, "loss": [0.0037614800967276096, 0.06613599509000778], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def __init__(", "self", ",", "request", ",", "*", "args", ",", "self", ")", ".", "__init__", "(", "request", ",", "*", "args", ",", "**", "kwargs", ")", "#NEWLINE#", "tenant_choices", "(", "tenants", ",", "has_more", ")", "=", "request", ")", "#NEWLINE#", "for", "tenant", "in", "tenants", ":", "#NEWLINE#", "#INDENT#", "if", "tenant", "#NEWLINE#", "#INDENT#", "tenant_choices", "(", "net_type", ".", "id", ",", "tenant", "#UNINDENT#", "self", ".", "fields", "[", "'tenant_id'", "]", ".", "choices", "=", "tenant_choices", "#NEWLINE#", "if", ":", "#NEWLINE#", "#INDENT#", "self", ".", "fields", "[", "'net_profile_id'", "]", ".", "choices", "=", "self", ".", "get_network_profile_choices", "(", "request", ")", "#NEWLINE#", "#UNINDENT#", "if", "api", ".", "neutron", ".", "is_extension_supported", "(", "request", ",", "#NEWLINE#", "#INDENT#", "neutron_settings", "#NEWLINE#", "seg_id_range", "=", "neutron_settings", ".", "get", "#NEWLINE#", "self", ".", "seg_id_range", "=", "{", ":", "seg_id_range", ".", ":", "seg_id_range", ".", "'vxlan'", ":", "seg_id_range", ".", "get", "#NEWLINE#", "seg_id_help", "'For VLAN networks, the VLAN VID on the physical network that realizes the virtual network. Valid VLAN VIDs are %(vlan_min)s through %(vlan_max)s. For GRE or VXLAN networks, the tunnel ID. Valid tunnel IDs for GRE networks are %(gre_min)s through %(gre_max)s. For VXLAN networks, %(vxlan_min)s through %(vxlan_max)s.'", "self", ".", "seg_id_range", "'vlan_max'", ":", "self", ".", "seg_id_range", "[", "'vlan'", "]", "#NEWLINE#", "'gre_min'", ":", "self", ".", "seg_id_range", "[", "'gre'", "self", ".", "seg_id_range", "#NEWLINE#", "'vxlan_min'", ":", "self", ".", "seg_id_range", "[", "'vxlan_max'", ":", "self", ".", "seg_id_range", "[", "self", ".", "fields", "[", "=", "seg_id_help", "#NEWLINE#", "supported_provider_types", "=", "neutron_settings", ".", "get", "(", "'supported_provider_types'", "(", "supported_provider_types", "network_type_choices", "=", "PROVIDER_TYPES", "#NEWLINE#", "#INDENT#", "network_type_choices", "=", "[", "net_type", "for", "net_type", "in", "PROVIDER_TYPES", "if", "(", "net_type", "supported_provider_types", "(", "network_type_choices", ")", "#NEWLINE#", "#INDENT#", "self", ".", "#INDENT#", "self", "=", "network_type_choices", ":", "#NEWLINE#", "#INDENT#", "self"]}}
{"position": {"error_location": 46, "repair_targets": [34, 41, 50], "repair_candidates": [7, 17, 97, 105, 109, 112, 116, 124, 129, 138, 143, 149, 155, 46, 181, 183, 188, 25, 36, 173, 178, 191, 200, 4, 14, 30, 80, 91, 34, 41, 50, 20, 27, 23, 44, 61, 95, 99, 166, 120, 162, 2, 9, 52, 67, 76, 103, 122, 127, 136, 141, 147, 153, 157, 195, 198, 204, 164, 172, 189]}}
{"prediction": {"error_location": 0.9962453246116638, "repair_targets": [0.924920380115509, 0.011021002195775509, 6.216274778125808e-05], "repair_candidates": [0.02664036490023136, 0.011229126714169979, 0.0007111890590749681, 0.014762673527002335, 0.0001820946781663224, 2.588253846624866e-05, 0.00018436858954373747, 0.0003819989215116948, 0.00038380667683668435, 0.0005243376945145428, 0.0014828583225607872, 0.924920380115509, 0.0001832713751355186, 0.011021002195775509, 0.0001381541951559484, 1.0739986464614049e-05, 6.216274778125808e-05, 0.0004939236678183079, 9.973227861337364e-05, 0.0009964050259441137, 0.00022595562040805817, 0.0004772487736772746, 0.0006607970572076738, 0.0005262972554191947, 0.00031007357756607234, 0.0006433046655729413, 2.172675885958597e-05, 6.709918670821935e-05, 9.189126285491511e-05, 0.0001059191272361204, 3.586190359783359e-05, 2.30085315706674e-05, 6.681701052002609e-05, 1.2487280400819145e-05, 0.000122796292998828, 5.34883520231233e-06, 4.502575393416919e-05, 3.919407390640117e-05, 2.3054548364598304e-05, 9.368278369947802e-06, 5.6682150898268446e-05, 9.178375876217615e-06, 0.00012823329598177224, 9.454000064579304e-06, 0.00013369819498620927, 1.979893204406835e-05, 0.0009328117012046278, 5.9037713072029874e-05, 7.442574860760942e-05, 4.158988758717896e-06, 7.218215614557266e-05, 3.4207253065687837e-06, 1.918980160553474e-05, 1.623745333745319e-06, 4.283402086002752e-05, 4.608720246324083e-06, 5.330297790351324e-05, 0.00039631794788874686, 6.251972990867216e-06, 2.4904955353122205e-05], "target_probs": 0.936003565788269}}


{"result": {"time": "2021-02-11 11:56:48.070431", "n_pass": [472, 49, 49], "n_token": 202, "loss": [0.002538912231102586, 0.09134542942047119], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def __init__(", "self", ",", "request", ",", "*", "args", ",", "self", ")", ".", "__init__", "(", "request", ",", "*", "args", ",", "**", "kwargs", ")", "#NEWLINE#", "tenant_choices", "(", "tenants", ",", "has_more", ")", "=", "request", ")", "#NEWLINE#", "for", "tenant", "in", "tenants", ":", "#NEWLINE#", "#INDENT#", "if", "tenant", "#NEWLINE#", "#INDENT#", "tenant_choices", "(", "net_type", ".", "id", ",", "tenant", "#UNINDENT#", "self", ".", "]", ".", "choices", "=", "tenant_choices", "#NEWLINE#", "if", ":", "#NEWLINE#", "#INDENT#", "self", ".", "fields", "[", "'net_profile_id'", "]", ".", "choices", "=", "self", ".", "get_network_profile_choices", "(", "request", ")", "#NEWLINE#", "#UNINDENT#", "if", "api", ".", "neutron", ".", "is_extension_supported", "(", "request", ",", "#NEWLINE#", "#INDENT#", "neutron_settings", "#NEWLINE#", "seg_id_range", "=", "neutron_settings", ".", "get", "#NEWLINE#", "self", ".", "seg_id_range", "=", "{", ":", "seg_id_range", ".", ":", "seg_id_range", ".", "'vxlan'", ":", "seg_id_range", ".", "get", "#NEWLINE#", "seg_id_help", "'For VLAN networks, the VLAN VID on the physical network that realizes the virtual network. Valid VLAN VIDs are %(vlan_min)s through %(vlan_max)s. For GRE or VXLAN networks, the tunnel ID. Valid tunnel IDs for GRE networks are %(gre_min)s through %(gre_max)s. For VXLAN networks, %(vxlan_min)s through %(vxlan_max)s.'", "self", ".", "seg_id_range", "'vlan_max'", ":", "self", ".", "seg_id_range", "[", "'vlan'", "]", "#NEWLINE#", "'gre_min'", ":", "self", ".", "seg_id_range", "[", "'gre'", "self", ".", "seg_id_range", "#NEWLINE#", "'vxlan_min'", ":", "self", ".", "seg_id_range", "[", "'vxlan_max'", ":", "self", ".", "seg_id_range", "[", "self", ".", "fields", "[", "=", "seg_id_help", "#NEWLINE#", "supported_provider_types", "=", "neutron_settings", ".", "get", "(", "'supported_provider_types'", "(", "supported_provider_types", "network_type_choices", "=", "PROVIDER_TYPES", "#NEWLINE#", "#INDENT#", "network_type_choices", "=", "[", "net_type", "for", "net_type", "in", "PROVIDER_TYPES", "if", "(", "net_type", "supported_provider_types", "(", "network_type_choices", ")", "#NEWLINE#", "#INDENT#", "self", ".", "#INDENT#", "self", "=", "network_type_choices", ":", "#NEWLINE#", "#INDENT#", "self"]}}
{"position": {"error_location": 46, "repair_targets": [34, 41, 50], "repair_candidates": [7, 17, 94, 102, 106, 109, 113, 121, 126, 135, 140, 146, 152, 46, 178, 180, 185, 25, 36, 170, 175, 188, 197, 4, 14, 30, 77, 88, 34, 41, 50, 20, 27, 23, 44, 58, 92, 96, 163, 117, 159, 2, 9, 52, 64, 73, 100, 119, 124, 133, 138, 144, 150, 154, 192, 195, 201, 161, 169, 186]}}
{"prediction": {"error_location": 0.9974642992019653, "repair_targets": [0.9031621813774109, 0.009471752680838108, 6.844440940767527e-05], "repair_candidates": [0.032919906079769135, 0.012686735019087791, 0.0007192513439804316, 0.021565016359090805, 0.00020455190679058433, 2.1283312889863737e-05, 0.00014566020399797708, 0.0005643530748784542, 0.0004951797891408205, 0.0005752649158239365, 0.001462761196307838, 0.9031621813774109, 0.00018695311155170202, 0.009471752680838108, 0.0002596708363853395, 3.7637346395058557e-06, 6.844440940767527e-05, 0.0029821109492331743, 0.00021043109882157296, 0.003307555802166462, 0.000658930919598788, 0.0007985616684891284, 0.0005269338143989444, 0.000391495501389727, 0.00036043304135091603, 0.0014810500433668494, 3.0466824682662264e-05, 4.418369644554332e-05, 0.00017187600315082818, 0.0001479966304032132, 3.0240082196542062e-05, 3.417368861846626e-05, 0.00012395631347317249, 3.136911254841834e-05, 0.00012965755013283342, 5.023515313951066e-06, 5.279932520352304e-05, 2.4085709810606204e-05, 3.6386722058523446e-05, 1.4132466276350897e-05, 7.559886580565944e-05, 1.3730600585404318e-05, 0.00013997375208418816, 1.1077434464823455e-05, 0.00011903404083568603, 1.1092720342276152e-05, 0.0028419485315680504, 9.00538798305206e-05, 7.32449916540645e-05, 4.9744830903364345e-06, 7.426218508044258e-05, 2.3645102373848204e-06, 2.7303098249831237e-05, 3.549049324647058e-06, 5.398620123742148e-05, 7.982566785358358e-06, 1.4630833902629092e-05, 0.0003031498345080763, 5.6532367125328165e-06, 1.989641532418318e-05], "target_probs": 0.9127023816108704}}


{"result": {"time": "2021-02-11 11:56:48.162488", "n_pass": [473, 50, 50], "n_token": 199, "loss": [0.0015911312075331807, 0.14726616442203522], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def __init__(", "self", ",", "request", ",", "*", "args", ",", "self", ")", ".", "__init__", "(", "request", ",", "*", "args", ",", "**", "kwargs", ")", "#NEWLINE#", "tenant_choices", "(", "tenants", ",", "has_more", ")", "=", "request", ")", "#NEWLINE#", "for", "tenant", "in", "tenants", ":", "#NEWLINE#", "#INDENT#", "if", "tenant", "#NEWLINE#", "#INDENT#", "tenant_choices", "(", "net_type", ".", "id", ",", "tenant", "#UNINDENT#", "self", ".", "=", "tenant_choices", "#NEWLINE#", "if", ":", "#NEWLINE#", "#INDENT#", "self", ".", "fields", "[", "'net_profile_id'", "]", ".", "choices", "=", "self", ".", "get_network_profile_choices", "(", "request", ")", "#NEWLINE#", "#UNINDENT#", "if", "api", ".", "neutron", ".", "is_extension_supported", "(", "request", ",", "#NEWLINE#", "#INDENT#", "neutron_settings", "#NEWLINE#", "seg_id_range", "=", "neutron_settings", ".", "get", "#NEWLINE#", "self", ".", "seg_id_range", "=", "{", ":", "seg_id_range", ".", ":", "seg_id_range", ".", "'vxlan'", ":", "seg_id_range", ".", "get", "#NEWLINE#", "seg_id_help", "'For VLAN networks, the VLAN VID on the physical network that realizes the virtual network. Valid VLAN VIDs are %(vlan_min)s through %(vlan_max)s. For GRE or VXLAN networks, the tunnel ID. Valid tunnel IDs for GRE networks are %(gre_min)s through %(gre_max)s. For VXLAN networks, %(vxlan_min)s through %(vxlan_max)s.'", "self", ".", "seg_id_range", "'vlan_max'", ":", "self", ".", "seg_id_range", "[", "'vlan'", "]", "#NEWLINE#", "'gre_min'", ":", "self", ".", "seg_id_range", "[", "'gre'", "self", ".", "seg_id_range", "#NEWLINE#", "'vxlan_min'", ":", "self", ".", "seg_id_range", "[", "'vxlan_max'", ":", "self", ".", "seg_id_range", "[", "self", ".", "fields", "[", "=", "seg_id_help", "#NEWLINE#", "supported_provider_types", "=", "neutron_settings", ".", "get", "(", "'supported_provider_types'", "(", "supported_provider_types", "network_type_choices", "=", "PROVIDER_TYPES", "#NEWLINE#", "#INDENT#", "network_type_choices", "=", "[", "net_type", "for", "net_type", "in", "PROVIDER_TYPES", "if", "(", "net_type", "supported_provider_types", "(", "network_type_choices", ")", "#NEWLINE#", "#INDENT#", "self", ".", "#INDENT#", "self", "=", "network_type_choices", ":", "#NEWLINE#", "#INDENT#", "self"]}}
{"position": {"error_location": 46, "repair_targets": [34, 41, 50], "repair_candidates": [7, 17, 91, 99, 103, 106, 110, 118, 123, 132, 137, 143, 149, 46, 175, 177, 182, 25, 36, 167, 172, 185, 194, 4, 14, 30, 74, 85, 34, 41, 50, 20, 27, 23, 44, 55, 89, 93, 160, 114, 156, 2, 9, 52, 61, 70, 97, 116, 121, 130, 135, 141, 147, 151, 189, 192, 198, 158, 166, 183]}}
{"prediction": {"error_location": 0.9984099864959717, "repair_targets": [0.8568781018257141, 0.00613373564556241, 5.240193786448799e-05], "repair_candidates": [0.04294958338141441, 0.01682109758257866, 0.0008658238803036511, 0.03283143416047096, 0.0002425144921289757, 2.629575647006277e-05, 0.0001406877563567832, 0.0008588607888668776, 0.0006967860390432179, 0.0007593324990011752, 0.002495204797014594, 0.8568781018257141, 0.00021983699116390198, 0.00613373564556241, 0.00032749975798651576, 2.4853461582097225e-06, 5.240193786448799e-05, 0.012179888784885406, 0.0005935932858847082, 0.008134027943015099, 0.0043453648686409, 0.002131854183971882, 0.0008774452144280076, 0.0008192681125365198, 0.00039222280611284077, 0.0035859779454767704, 5.52185156266205e-05, 4.25910584453959e-05, 0.0003103228809777647, 0.00035430779098533094, 0.00010317830310668796, 4.43970893684309e-05, 0.00013876915909349918, 4.7136767534539104e-05, 0.00023440882796421647, 9.96557173493784e-06, 0.00012985507783014327, 2.1030924472142942e-05, 0.00010751912486739457, 2.328581831534393e-05, 0.00015896980767138302, 2.4465123715344816e-05, 0.00029831836582161486, 2.4230326744145714e-05, 0.00019964207604061812, 3.001981349370908e-05, 0.0012722533429041505, 0.00013360544107854366, 5.205635534366593e-05, 1.2327416698099114e-05, 0.00012757196964230388, 5.3567950999422465e-06, 4.028688636026345e-05, 1.4487415000985493e-06, 4.9496804422233254e-05, 1.6646958101773635e-05, 1.9099830751656555e-05, 0.0004951281007379293, 1.0961062798742205e-05, 4.4871660065837204e-05], "target_probs": 0.8630642294883728}}


{"result": {"time": "2021-02-11 11:56:48.254776", "n_pass": [475, 51, 51], "n_token": 196, "loss": [0.0023053516633808613, 0.12807101011276245], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def __init__(", "self", ",", "request", ",", "*", "args", ",", "self", ")", ".", "__init__", "(", "request", ",", "*", "args", ",", "**", "kwargs", ")", "#NEWLINE#", "tenant_choices", "(", "tenants", ",", "has_more", ")", "=", "request", ")", "#NEWLINE#", "for", "tenant", "in", "tenants", ":", "#NEWLINE#", "#INDENT#", "if", "tenant", "#NEWLINE#", "#INDENT#", "tenant_choices", "(", "net_type", ".", "id", ",", "tenant", "#UNINDENT#", "self", ".", "=", "tenant_choices", "#NEWLINE#", "#INDENT#", "self", ".", "fields", "[", "'net_profile_id'", "]", ".", "choices", "=", "self", ".", "get_network_profile_choices", "(", "request", ")", "#NEWLINE#", "#UNINDENT#", "if", "api", ".", "neutron", ".", "is_extension_supported", "(", "request", ",", "#NEWLINE#", "#INDENT#", "neutron_settings", "#NEWLINE#", "seg_id_range", "=", "neutron_settings", ".", "get", "#NEWLINE#", "self", ".", "seg_id_range", "=", "{", ":", "seg_id_range", ".", ":", "seg_id_range", ".", "'vxlan'", ":", "seg_id_range", ".", "get", "#NEWLINE#", "seg_id_help", "'For VLAN networks, the VLAN VID on the physical network that realizes the virtual network. Valid VLAN VIDs are %(vlan_min)s through %(vlan_max)s. For GRE or VXLAN networks, the tunnel ID. Valid tunnel IDs for GRE networks are %(gre_min)s through %(gre_max)s. For VXLAN networks, %(vxlan_min)s through %(vxlan_max)s.'", "self", ".", "seg_id_range", "'vlan_max'", ":", "self", ".", "seg_id_range", "[", "'vlan'", "]", "#NEWLINE#", "'gre_min'", ":", "self", ".", "seg_id_range", "[", "'gre'", "self", ".", "seg_id_range", "#NEWLINE#", "'vxlan_min'", ":", "self", ".", "seg_id_range", "[", "'vxlan_max'", ":", "self", ".", "seg_id_range", "[", "self", ".", "fields", "[", "=", "seg_id_help", "#NEWLINE#", "supported_provider_types", "=", "neutron_settings", ".", "get", "(", "'supported_provider_types'", "(", "supported_provider_types", "network_type_choices", "=", "PROVIDER_TYPES", "#NEWLINE#", "#INDENT#", "network_type_choices", "=", "[", "net_type", "for", "net_type", "in", "PROVIDER_TYPES", "if", "(", "net_type", "supported_provider_types", "(", "network_type_choices", ")", "#NEWLINE#", "#INDENT#", "self", ".", "#INDENT#", "self", "=", "network_type_choices", ":", "#NEWLINE#", "#INDENT#", "self"]}}
{"position": {"error_location": 46, "repair_targets": [34, 41, 50], "repair_candidates": [7, 17, 88, 96, 100, 103, 107, 115, 120, 129, 134, 140, 146, 46, 172, 174, 179, 25, 36, 164, 169, 182, 191, 4, 14, 30, 71, 82, 34, 41, 50, 20, 27, 23, 44, 55, 86, 90, 157, 111, 153, 2, 9, 52, 58, 67, 94, 113, 118, 127, 132, 138, 144, 148, 186, 189, 195, 155, 163, 180]}}
{"prediction": {"error_location": 0.9976971745491028, "repair_targets": [0.8723963499069214, 0.007343234494328499, 5.1319191697984934e-05], "repair_candidates": [0.03715473785996437, 0.01514112576842308, 0.0008115260861814022, 0.023327011615037918, 0.0001905297685880214, 2.2902821001480334e-05, 0.00019641815742943436, 0.0009784793946892023, 0.0006107998779043555, 0.0007514521130360663, 0.00156758027151227, 0.8723963499069214, 0.00018622659263201058, 0.007343234494328499, 0.00047982294927351177, 2.793822204694152e-06, 5.1319191697984934e-05, 0.0074969446286559105, 0.0004899730556644499, 0.006284131668508053, 0.0028568063862621784, 0.004302436951547861, 0.0006268426077440381, 0.0006579626933671534, 0.00044352951226755977, 0.011413143016397953, 3.581149940146133e-05, 0.0001241071440745145, 0.0002539676206652075, 0.0003679170913528651, 0.00015354531933553517, 3.576020753826015e-05, 4.609215829987079e-05, 6.0730519180651754e-05, 0.00020200021390337497, 1.9035713194170967e-05, 0.00012106755457352847, 2.6886600608122535e-05, 0.00016921391943469644, 2.580298860266339e-05, 0.00012516752758529037, 5.4625972552457824e-05, 0.0004125850973650813, 4.265223105903715e-05, 0.00011404731776565313, 2.0442545064724982e-05, 0.0006942949257791042, 0.00011602362792473286, 3.6691493733087555e-05, 2.970690547954291e-05, 0.00024541784659959376, 4.282126610632986e-06, 5.1957063988083974e-05, 1.516240899945842e-06, 4.910201460006647e-05, 4.808655830856878e-06, 3.46138040185906e-05, 0.0002349388087168336, 1.1893084774783347e-05, 0.00028920540353283286], "target_probs": 0.8797909021377563}}


{"result": {"time": "2021-02-11 11:56:48.347442", "n_pass": [477, 52, 52], "n_token": 193, "loss": [0.0036032767966389656, 0.1646648645401001], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def __init__(", "self", ",", "request", ",", "*", "args", ",", "self", ")", ".", "__init__", "(", "request", ",", "*", "args", ",", "**", "kwargs", ")", "#NEWLINE#", "tenant_choices", "(", "tenants", ",", "has_more", ")", "=", "request", ")", "#NEWLINE#", "for", "tenant", "in", "tenants", ":", "#NEWLINE#", "#INDENT#", "if", "tenant", "#NEWLINE#", "#INDENT#", "tenant_choices", "(", "net_type", ".", "id", ",", "tenant", "#UNINDENT#", "self", ".", "=", "tenant_choices", "#NEWLINE#", "#INDENT#", "self", ".", "]", ".", "choices", "=", "self", ".", "get_network_profile_choices", "(", "request", ")", "#NEWLINE#", "#UNINDENT#", "if", "api", ".", "neutron", ".", "is_extension_supported", "(", "request", ",", "#NEWLINE#", "#INDENT#", "neutron_settings", "#NEWLINE#", "seg_id_range", "=", "neutron_settings", ".", "get", "#NEWLINE#", "self", ".", "seg_id_range", "=", "{", ":", "seg_id_range", ".", ":", "seg_id_range", ".", "'vxlan'", ":", "seg_id_range", ".", "get", "#NEWLINE#", "seg_id_help", "'For VLAN networks, the VLAN VID on the physical network that realizes the virtual network. Valid VLAN VIDs are %(vlan_min)s through %(vlan_max)s. For GRE or VXLAN networks, the tunnel ID. Valid tunnel IDs for GRE networks are %(gre_min)s through %(gre_max)s. For VXLAN networks, %(vxlan_min)s through %(vxlan_max)s.'", "self", ".", "seg_id_range", "'vlan_max'", ":", "self", ".", "seg_id_range", "[", "'vlan'", "]", "#NEWLINE#", "'gre_min'", ":", "self", ".", "seg_id_range", "[", "'gre'", "self", ".", "seg_id_range", "#NEWLINE#", "'vxlan_min'", ":", "self", ".", "seg_id_range", "[", "'vxlan_max'", ":", "self", ".", "seg_id_range", "[", "self", ".", "fields", "[", "=", "seg_id_help", "#NEWLINE#", "supported_provider_types", "=", "neutron_settings", ".", "get", "(", "'supported_provider_types'", "(", "supported_provider_types", "network_type_choices", "=", "PROVIDER_TYPES", "#NEWLINE#", "#INDENT#", "network_type_choices", "=", "[", "net_type", "for", "net_type", "in", "PROVIDER_TYPES", "if", "(", "net_type", "supported_provider_types", "(", "network_type_choices", ")", "#NEWLINE#", "#INDENT#", "self", ".", "#INDENT#", "self", "=", "network_type_choices", ":", "#NEWLINE#", "#INDENT#", "self"]}}
{"position": {"error_location": 46, "repair_targets": [34, 41, 50], "repair_candidates": [7, 17, 85, 93, 97, 100, 104, 112, 117, 126, 131, 137, 143, 46, 169, 171, 176, 25, 36, 161, 166, 179, 188, 4, 14, 30, 68, 79, 34, 41, 50, 20, 27, 23, 44, 55, 83, 87, 154, 108, 150, 2, 9, 52, 58, 64, 91, 110, 115, 124, 129, 135, 141, 145, 183, 186, 192, 152, 160, 177]}}
{"prediction": {"error_location": 0.9964033365249634, "repair_targets": [0.8408191800117493, 0.0073198010213673115, 3.893085158779286e-05], "repair_candidates": [0.0442684032022953, 0.013542459346354008, 0.0009357632952742279, 0.02002461440861225, 0.0002123918238794431, 2.9640994398505427e-05, 0.00026399234775453806, 0.0008948018657974899, 0.000698560441378504, 0.0012855870882049203, 0.0014731839764863253, 0.8408191800117493, 0.00015876389807090163, 0.0073198010213673115, 0.0003853568632621318, 4.862471087108133e-06, 3.893085158779286e-05, 0.015516281127929688, 0.00041759683517739177, 0.02784455567598343, 0.005867266561836004, 0.007071664556860924, 0.000671164074447006, 0.0006880215951241553, 0.0005128315533511341, 0.004813962150365114, 5.4375290346797556e-05, 0.00035839329939335585, 0.00010988940630340949, 0.00033283798256888986, 0.0001215665542986244, 4.4782907934859395e-05, 6.018674321239814e-05, 0.00014757677854504436, 0.00019217212684452534, 2.5293704311479814e-05, 9.77586314547807e-05, 3.26562840200495e-05, 0.0001568814623169601, 3.737519000424072e-05, 0.0001583974517416209, 8.950541086960584e-05, 0.00033399462699890137, 8.017360960366204e-05, 0.00010645035945344716, 2.1926462068222463e-05, 0.0009233366581611335, 0.00010703714360715821, 2.298035724379588e-05, 1.4893686966388486e-05, 0.00019037500896956772, 2.3480749860027572e-06, 4.541020098258741e-05, 1.4916705595169333e-06, 2.6307337975595146e-05, 2.0325858258729568e-06, 4.110812005819753e-05, 0.00017937833035830408, 7.61793444326031e-06, 0.00011384344543330371], "target_probs": 0.8481779098510742}}


{"result": {"time": "2021-02-11 11:56:48.437872", "n_pass": [478, 53, 53], "n_token": 190, "loss": [0.008596793748438358, 0.17725291848182678], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def __init__(", "self", ",", "request", ",", "*", "args", ",", "self", ")", ".", "__init__", "(", "request", ",", "*", "args", ",", "**", "kwargs", ")", "#NEWLINE#", "tenant_choices", "(", "tenants", ",", "has_more", ")", "=", "request", ")", "#NEWLINE#", "for", "tenant", "in", "tenants", ":", "#NEWLINE#", "#INDENT#", "if", "tenant", "#NEWLINE#", "#INDENT#", "tenant_choices", "(", "net_type", ".", "id", ",", "tenant", "#UNINDENT#", "self", ".", "=", "tenant_choices", "#NEWLINE#", "#INDENT#", "self", ".", "=", "self", ".", "get_network_profile_choices", "(", "request", ")", "#NEWLINE#", "#UNINDENT#", "if", "api", ".", "neutron", ".", "is_extension_supported", "(", "request", ",", "#NEWLINE#", "#INDENT#", "neutron_settings", "#NEWLINE#", "seg_id_range", "=", "neutron_settings", ".", "get", "#NEWLINE#", "self", ".", "seg_id_range", "=", "{", ":", "seg_id_range", ".", ":", "seg_id_range", ".", "'vxlan'", ":", "seg_id_range", ".", "get", "#NEWLINE#", "seg_id_help", "'For VLAN networks, the VLAN VID on the physical network that realizes the virtual network. Valid VLAN VIDs are %(vlan_min)s through %(vlan_max)s. For GRE or VXLAN networks, the tunnel ID. Valid tunnel IDs for GRE networks are %(gre_min)s through %(gre_max)s. For VXLAN networks, %(vxlan_min)s through %(vxlan_max)s.'", "self", ".", "seg_id_range", "'vlan_max'", ":", "self", ".", "seg_id_range", "[", "'vlan'", "]", "#NEWLINE#", "'gre_min'", ":", "self", ".", "seg_id_range", "[", "'gre'", "self", ".", "seg_id_range", "#NEWLINE#", "'vxlan_min'", ":", "self", ".", "seg_id_range", "[", "'vxlan_max'", ":", "self", ".", "seg_id_range", "[", "self", ".", "fields", "[", "=", "seg_id_help", "#NEWLINE#", "supported_provider_types", "=", "neutron_settings", ".", "get", "(", "'supported_provider_types'", "(", "supported_provider_types", "network_type_choices", "=", "PROVIDER_TYPES", "#NEWLINE#", "#INDENT#", "network_type_choices", "=", "[", "net_type", "for", "net_type", "in", "PROVIDER_TYPES", "if", "(", "net_type", "supported_provider_types", "(", "network_type_choices", ")", "#NEWLINE#", "#INDENT#", "self", ".", "#INDENT#", "self", "=", "network_type_choices", ":", "#NEWLINE#", "#INDENT#", "self"]}}
{"position": {"error_location": 46, "repair_targets": [34, 41, 50], "repair_candidates": [7, 17, 82, 90, 94, 97, 101, 109, 114, 123, 128, 134, 140, 46, 166, 168, 173, 25, 36, 158, 163, 176, 185, 4, 14, 30, 65, 76, 34, 41, 50, 20, 27, 23, 44, 55, 80, 84, 151, 105, 147, 2, 9, 52, 58, 61, 88, 107, 112, 121, 126, 132, 138, 142, 180, 183, 189, 149, 157, 174]}}
{"prediction": {"error_location": 0.9914401769638062, "repair_targets": [0.829951822757721, 0.007567239925265312, 4.886988244834356e-05], "repair_candidates": [0.048475924879312515, 0.016959967091679573, 0.0018910288345068693, 0.024539118632674217, 0.00026473283651284873, 5.2849918574793264e-05, 0.00048421300016343594, 0.0012943539768457413, 0.0010852296836674213, 0.0027013581711798906, 0.00151166133582592, 0.829951822757721, 0.0001779442245606333, 0.007567239925265312, 0.00043498186278156936, 8.026851901377086e-06, 4.886988244834356e-05, 0.025705251842737198, 0.0004450120322871953, 0.005762765184044838, 0.005279876291751862, 0.01267192605882883, 0.0009576593292877078, 0.0007721572765149176, 0.0008977474644780159, 0.0018075652187690139, 5.954191874479875e-05, 0.0012141710612922907, 0.0001447759714210406, 0.00035194336669519544, 0.00016688373580109328, 9.030149522004649e-05, 8.021874964470044e-05, 0.00033904891461133957, 0.00018995048594661057, 0.00010908875265158713, 0.00010937678598565981, 0.00016645854339003563, 0.00020671285165008157, 9.327322914032266e-05, 0.00022937085304874927, 0.00039568718057125807, 0.00043118413304910064, 0.0003827580949291587, 0.0002979044511448592, 7.144513074308634e-05, 0.0018841613782569766, 0.00015333299234043807, 4.469932900974527e-05, 3.427732735872269e-05, 0.00045430552563630044, 3.8828134165669326e-06, 9.928316285368055e-05, 3.212635192539892e-06, 3.618878326960839e-05, 3.2591619856248144e-06, 5.366605910239741e-05, 0.0002745738602243364, 1.392580452375114e-05, 6.18029516772367e-05], "target_probs": 0.837567925453186}}


{"result": {"time": "2021-02-11 11:56:48.528457", "n_pass": [481, 54, 54], "n_token": 187, "loss": [0.009435228072106838, 0.1505739539861679], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def __init__(", "self", ",", "request", ",", "*", "args", ",", "self", ")", ".", "__init__", "(", "request", ",", "*", "args", ",", "**", "kwargs", ")", "#NEWLINE#", "tenant_choices", "(", "tenants", ",", "has_more", ")", "=", "request", ")", "#NEWLINE#", "for", "tenant", "in", "tenants", ":", "#NEWLINE#", "#INDENT#", "if", "tenant", "#NEWLINE#", "#INDENT#", "tenant_choices", "(", "net_type", ".", "id", ",", "tenant", "#UNINDENT#", "self", ".", "=", "tenant_choices", "#NEWLINE#", "#INDENT#", "self", ".", "=", "self", ".", "get_network_profile_choices", "(", "request", "if", "api", ".", "neutron", ".", "is_extension_supported", "(", "request", ",", "#NEWLINE#", "#INDENT#", "neutron_settings", "#NEWLINE#", "seg_id_range", "=", "neutron_settings", ".", "get", "#NEWLINE#", "self", ".", "seg_id_range", "=", "{", ":", "seg_id_range", ".", ":", "seg_id_range", ".", "'vxlan'", ":", "seg_id_range", ".", "get", "#NEWLINE#", "seg_id_help", "'For VLAN networks, the VLAN VID on the physical network that realizes the virtual network. Valid VLAN VIDs are %(vlan_min)s through %(vlan_max)s. For GRE or VXLAN networks, the tunnel ID. Valid tunnel IDs for GRE networks are %(gre_min)s through %(gre_max)s. For VXLAN networks, %(vxlan_min)s through %(vxlan_max)s.'", "self", ".", "seg_id_range", "'vlan_max'", ":", "self", ".", "seg_id_range", "[", "'vlan'", "]", "#NEWLINE#", "'gre_min'", ":", "self", ".", "seg_id_range", "[", "'gre'", "self", ".", "seg_id_range", "#NEWLINE#", "'vxlan_min'", ":", "self", ".", "seg_id_range", "[", "'vxlan_max'", ":", "self", ".", "seg_id_range", "[", "self", ".", "fields", "[", "=", "seg_id_help", "#NEWLINE#", "supported_provider_types", "=", "neutron_settings", ".", "get", "(", "'supported_provider_types'", "(", "supported_provider_types", "network_type_choices", "=", "PROVIDER_TYPES", "#NEWLINE#", "#INDENT#", "network_type_choices", "=", "[", "net_type", "for", "net_type", "in", "PROVIDER_TYPES", "if", "(", "net_type", "supported_provider_types", "(", "network_type_choices", ")", "#NEWLINE#", "#INDENT#", "self", ".", "#INDENT#", "self", "=", "network_type_choices", ":", "#NEWLINE#", "#INDENT#", "self"]}}
{"position": {"error_location": 46, "repair_targets": [34, 41, 50], "repair_candidates": [7, 17, 79, 87, 91, 94, 98, 106, 111, 120, 125, 131, 137, 46, 163, 165, 170, 25, 36, 155, 160, 173, 182, 4, 14, 30, 65, 73, 34, 41, 50, 20, 27, 23, 44, 55, 77, 81, 148, 102, 144, 2, 9, 52, 58, 61, 85, 104, 109, 118, 123, 129, 135, 139, 177, 180, 186, 146, 154, 171]}}
{"prediction": {"error_location": 0.9906092882156372, "repair_targets": [0.8532001972198486, 0.006941130384802818, 7.274792005773634e-05], "repair_candidates": [0.044878195971250534, 0.015303084626793861, 0.0017967154271900654, 0.019789941608905792, 0.0002721684577409178, 4.638617974705994e-05, 0.0005386747070588171, 0.001613118452951312, 0.0010686861351132393, 0.001889534411020577, 0.0009520722087472677, 0.8532001972198486, 0.00020923858392052352, 0.006941130384802818, 0.0007006285595707595, 7.1766630753700156e-06, 7.274792005773634e-05, 0.019507262855768204, 0.0005268867826089263, 0.0013655379880219698, 0.007412253879010677, 0.0006065638735890388, 0.0005543247098103166, 0.001017422298900783, 0.002236458007246256, 0.00045970434439368546, 5.976302418275736e-05, 0.006045148707926273, 7.386887591565028e-05, 0.0003334048087708652, 0.00023602090368513018, 2.740598029049579e-05, 0.00011432865721872076, 0.0026265818160027266, 0.00019182141113560647, 0.00037659425288438797, 9.09617156139575e-05, 0.0005916996160522103, 0.0001196861412608996, 0.00013804972695652395, 0.00025013077538460493, 0.0007382570765912533, 0.0011196887353435159, 0.0012356454972177744, 0.00021410657791420817, 5.213299664319493e-05, 0.0014303061179816723, 9.500713349552825e-05, 8.494361827615649e-05, 6.19919374003075e-05, 0.00017435218614991754, 3.985544481110992e-06, 0.00020126864546909928, 6.8325261963764206e-06, 3.0662726203445345e-05, 2.425534376016003e-06, 3.5929406294599175e-05, 0.00025543829542584717, 3.81807785743149e-06, 1.1658520634227898e-05], "target_probs": 0.860214114189148}}


{"result": {"time": "2021-02-11 11:56:48.618738", "n_pass": [482, 55, 55], "n_token": 184, "loss": [0.0052865236066281796, 0.13422277569770813], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def __init__(", "self", ",", "request", ",", "*", "args", ",", "self", ")", ".", "__init__", "(", "request", ",", "*", "args", ",", "**", "kwargs", ")", "#NEWLINE#", "tenant_choices", "(", "tenants", ",", "has_more", ")", "=", "request", ")", "#NEWLINE#", "for", "tenant", "in", "tenants", ":", "#NEWLINE#", "#INDENT#", "if", "tenant", "#NEWLINE#", "#INDENT#", "tenant_choices", "(", "net_type", ".", "id", ",", "tenant", "#UNINDENT#", "self", ".", "=", "tenant_choices", "#NEWLINE#", "#INDENT#", "self", ".", "=", "self", ".", "get_network_profile_choices", "(", "request", "neutron", ".", "is_extension_supported", "(", "request", ",", "#NEWLINE#", "#INDENT#", "neutron_settings", "#NEWLINE#", "seg_id_range", "=", "neutron_settings", ".", "get", "#NEWLINE#", "self", ".", "seg_id_range", "=", "{", ":", "seg_id_range", ".", ":", "seg_id_range", ".", "'vxlan'", ":", "seg_id_range", ".", "get", "#NEWLINE#", "seg_id_help", "'For VLAN networks, the VLAN VID on the physical network that realizes the virtual network. Valid VLAN VIDs are %(vlan_min)s through %(vlan_max)s. For GRE or VXLAN networks, the tunnel ID. Valid tunnel IDs for GRE networks are %(gre_min)s through %(gre_max)s. For VXLAN networks, %(vxlan_min)s through %(vxlan_max)s.'", "self", ".", "seg_id_range", "'vlan_max'", ":", "self", ".", "seg_id_range", "[", "'vlan'", "]", "#NEWLINE#", "'gre_min'", ":", "self", ".", "seg_id_range", "[", "'gre'", "self", ".", "seg_id_range", "#NEWLINE#", "'vxlan_min'", ":", "self", ".", "seg_id_range", "[", "'vxlan_max'", ":", "self", ".", "seg_id_range", "[", "self", ".", "fields", "[", "=", "seg_id_help", "#NEWLINE#", "supported_provider_types", "=", "neutron_settings", ".", "get", "(", "'supported_provider_types'", "(", "supported_provider_types", "network_type_choices", "=", "PROVIDER_TYPES", "#NEWLINE#", "#INDENT#", "network_type_choices", "=", "[", "net_type", "for", "net_type", "in", "PROVIDER_TYPES", "if", "(", "net_type", "supported_provider_types", "(", "network_type_choices", ")", "#NEWLINE#", "#INDENT#", "self", ".", "#INDENT#", "self", "=", "network_type_choices", ":", "#NEWLINE#", "#INDENT#", "self"]}}
{"position": {"error_location": 46, "repair_targets": [34, 41, 50], "repair_candidates": [7, 17, 76, 84, 88, 91, 95, 103, 108, 117, 122, 128, 134, 46, 160, 162, 167, 25, 36, 152, 157, 170, 179, 4, 14, 30, 65, 70, 34, 41, 50, 20, 27, 23, 44, 55, 74, 78, 145, 99, 141, 2, 9, 52, 58, 61, 82, 101, 106, 115, 120, 126, 132, 136, 174, 177, 183, 143, 151, 168]}}
{"prediction": {"error_location": 0.9947274327278137, "repair_targets": [0.8684132695198059, 0.005937720183283091, 4.43022909166757e-05], "repair_candidates": [0.03506116569042206, 0.01220688596367836, 0.0014434295007959008, 0.014456530101597309, 0.00020768314425367862, 2.5390685550519265e-05, 0.0004313875106163323, 0.0012787387240678072, 0.0008275001309812069, 0.0013901741476729512, 0.0023100024554878473, 0.8684132695198059, 0.0001730497897369787, 0.005937720183283091, 0.00044302758760750294, 1.9573797089833533e-06, 4.43022909166757e-05, 0.01774369552731514, 0.0003500940219964832, 0.005330504849553108, 0.003398485481739044, 0.010944195091724396, 0.0017634077230468392, 0.003021470969542861, 0.001482187770307064, 0.0020132469944655895, 3.991663106717169e-05, 0.002021504333242774, 6.165463128127158e-05, 0.00033334214822389185, 0.00048773791058920324, 1.540157973067835e-05, 7.342023309320211e-05, 0.0011673857225105166, 0.00027412164490669966, 6.660215149167925e-05, 9.566238441038877e-05, 0.00015537951549049467, 0.00018180106417275965, 4.7087905841181055e-05, 0.00020705167844425887, 5.291721390676685e-05, 0.0019329475471749902, 0.00018820655532181263, 0.0005341998185031116, 1.8676941181183793e-05, 0.0007565515115857124, 6.920583109604195e-05, 4.771762905875221e-05, 1.8790640751831234e-05, 0.00010026134259533137, 3.644170192274032e-06, 0.00011676908616209403, 1.2729943819067557e-06, 5.924262950429693e-06, 6.923031037331384e-07, 5.817175770062022e-05, 0.00014893405023030937, 7.603999279126583e-07, 1.6768986824899912e-05], "target_probs": 0.8743952512741089}}


{"result": {"time": "2021-02-11 11:56:48.709186", "n_pass": [483, 56, 56], "n_token": 181, "loss": [0.007158464752137661, 0.17174358665943146], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def __init__(", "self", ",", "request", ",", "*", "args", ",", "self", ")", ".", "__init__", "(", "request", ",", "*", "args", ",", "**", "kwargs", ")", "#NEWLINE#", "tenant_choices", "(", "tenants", ",", "has_more", ")", "=", "request", ")", "#NEWLINE#", "for", "tenant", "in", "tenants", ":", "#NEWLINE#", "#INDENT#", "if", "tenant", "#NEWLINE#", "#INDENT#", "tenant_choices", "(", "net_type", ".", "id", ",", "tenant", "#UNINDENT#", "self", ".", "=", "tenant_choices", "#NEWLINE#", "#INDENT#", "self", ".", "=", "self", ".", "get_network_profile_choices", "(", "request", "(", "request", ",", "#NEWLINE#", "#INDENT#", "neutron_settings", "#NEWLINE#", "seg_id_range", "=", "neutron_settings", ".", "get", "#NEWLINE#", "self", ".", "seg_id_range", "=", "{", ":", "seg_id_range", ".", ":", "seg_id_range", ".", "'vxlan'", ":", "seg_id_range", ".", "get", "#NEWLINE#", "seg_id_help", "'For VLAN networks, the VLAN VID on the physical network that realizes the virtual network. Valid VLAN VIDs are %(vlan_min)s through %(vlan_max)s. For GRE or VXLAN networks, the tunnel ID. Valid tunnel IDs for GRE networks are %(gre_min)s through %(gre_max)s. For VXLAN networks, %(vxlan_min)s through %(vxlan_max)s.'", "self", ".", "seg_id_range", "'vlan_max'", ":", "self", ".", "seg_id_range", "[", "'vlan'", "]", "#NEWLINE#", "'gre_min'", ":", "self", ".", "seg_id_range", "[", "'gre'", "self", ".", "seg_id_range", "#NEWLINE#", "'vxlan_min'", ":", "self", ".", "seg_id_range", "[", "'vxlan_max'", ":", "self", ".", "seg_id_range", "[", "self", ".", "fields", "[", "=", "seg_id_help", "#NEWLINE#", "supported_provider_types", "=", "neutron_settings", ".", "get", "(", "'supported_provider_types'", "(", "supported_provider_types", "network_type_choices", "=", "PROVIDER_TYPES", "#NEWLINE#", "#INDENT#", "network_type_choices", "=", "[", "net_type", "for", "net_type", "in", "PROVIDER_TYPES", "if", "(", "net_type", "supported_provider_types", "(", "network_type_choices", ")", "#NEWLINE#", "#INDENT#", "self", ".", "#INDENT#", "self", "=", "network_type_choices", ":", "#NEWLINE#", "#INDENT#", "self"]}}
{"position": {"error_location": 46, "repair_targets": [34, 41, 50], "repair_candidates": [7, 17, 73, 81, 85, 88, 92, 100, 105, 114, 119, 125, 131, 46, 157, 159, 164, 25, 36, 149, 154, 167, 176, 4, 14, 30, 65, 67, 34, 41, 50, 20, 27, 23, 44, 55, 71, 75, 142, 96, 138, 2, 9, 52, 58, 61, 79, 98, 103, 112, 117, 123, 129, 133, 171, 174, 180, 140, 148, 165]}}
{"prediction": {"error_location": 0.9928673505783081, "repair_targets": [0.834648847579956, 0.007510703522711992, 3.5529479646356776e-05], "repair_candidates": [0.04518755152821541, 0.012039849534630775, 0.001732882927171886, 0.018493155017495155, 0.00020459458755794913, 3.7291825719876215e-05, 0.00039601579192094505, 0.001852886751294136, 0.000981994904577732, 0.0018691583536565304, 0.0015565595822408795, 0.834648847579956, 0.0002435529459035024, 0.007510703522711992, 0.0005190793890506029, 1.1092697604908608e-05, 3.5529479646356776e-05, 0.020682962611317635, 0.0005588239291682839, 0.010163101367652416, 0.002240978879854083, 0.000416758208302781, 0.002558415289968252, 0.010550365783274174, 0.004730198998004198, 0.010532119311392307, 6.106926593929529e-05, 0.0015288970898836851, 0.00015153571439441293, 0.0008442932739853859, 0.0034222439862787724, 4.86599346913863e-05, 7.193138299044222e-05, 0.00011107989121228456, 0.00036484666634351015, 3.421532528591342e-05, 6.090769238653593e-05, 0.00020633084932342172, 0.00011197768617421389, 4.1081806557485834e-05, 0.00016449831309728324, 3.366263990756124e-05, 0.0003224113315809518, 9.386803139932454e-05, 0.0007000748883001506, 3.122857378912158e-05, 0.0010104640386998653, 5.5824810260673985e-05, 5.676826185663231e-05, 9.605753803043626e-06, 0.00012101233005523682, 3.005020289492677e-06, 8.533839718438685e-05, 6.27197493940912e-07, 7.690687198191881e-06, 6.222667252586689e-07, 0.00011243665358051658, 0.000327832909533754, 1.5146447367442306e-06, 4.79748887300957e-05], "target_probs": 0.8421950936317444}}


{"result": {"time": "2021-02-11 11:56:48.818316", "n_pass": [644, 57, 57], "n_token": 179, "loss": [0.006310655269771814, 0.18822257220745087], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def __init__(", "self", ",", "request", ",", "*", "args", ",", "self", ")", ".", "__init__", "(", "request", ",", "*", "args", ",", "**", "kwargs", ")", "#NEWLINE#", "tenant_choices", "(", "tenants", ",", "has_more", ")", "=", "request", ")", "#NEWLINE#", "for", "tenant", "in", "tenants", ":", "#NEWLINE#", "#INDENT#", "if", "tenant", "#NEWLINE#", "#INDENT#", "tenant_choices", "(", "net_type", ".", "id", ",", "tenant", "#UNINDENT#", "self", ".", "=", "tenant_choices", "#NEWLINE#", "#INDENT#", "self", "self", ".", "get_network_profile_choices", "(", "request", "(", "request", ",", "#NEWLINE#", "#INDENT#", "neutron_settings", "#NEWLINE#", "seg_id_range", "=", "neutron_settings", ".", "get", "#NEWLINE#", "self", ".", "seg_id_range", "=", "{", ":", "seg_id_range", ".", ":", "seg_id_range", ".", "'vxlan'", ":", "seg_id_range", ".", "get", "#NEWLINE#", "seg_id_help", "'For VLAN networks, the VLAN VID on the physical network that realizes the virtual network. Valid VLAN VIDs are %(vlan_min)s through %(vlan_max)s. For GRE or VXLAN networks, the tunnel ID. Valid tunnel IDs for GRE networks are %(gre_min)s through %(gre_max)s. For VXLAN networks, %(vxlan_min)s through %(vxlan_max)s.'", "self", ".", "seg_id_range", "'vlan_max'", ":", "self", ".", "seg_id_range", "[", "'vlan'", "]", "#NEWLINE#", "'gre_min'", ":", "self", ".", "seg_id_range", "[", "'gre'", "self", ".", "seg_id_range", "#NEWLINE#", "'vxlan_min'", ":", "self", ".", "seg_id_range", "[", "'vxlan_max'", ":", "self", ".", "seg_id_range", "[", "self", ".", "fields", "[", "=", "seg_id_help", "#NEWLINE#", "supported_provider_types", "=", "neutron_settings", ".", "get", "(", "'supported_provider_types'", "(", "supported_provider_types", "network_type_choices", "=", "PROVIDER_TYPES", "#NEWLINE#", "#INDENT#", "network_type_choices", "=", "[", "net_type", "for", "net_type", "in", "PROVIDER_TYPES", "if", "(", "net_type", "supported_provider_types", "(", "network_type_choices", ")", "#NEWLINE#", "#INDENT#", "self", ".", "#INDENT#", "self", "=", "network_type_choices", ":", "#NEWLINE#", "#INDENT#", "self"]}}
{"position": {"error_location": 46, "repair_targets": [34, 41, 50], "repair_candidates": [7, 17, 71, 79, 83, 86, 90, 98, 103, 112, 117, 123, 129, 46, 155, 157, 162, 25, 36, 147, 152, 165, 174, 4, 14, 30, 63, 65, 34, 41, 50, 20, 27, 23, 44, 55, 69, 73, 140, 94, 136, 2, 9, 52, 58, 59, 77, 96, 101, 110, 115, 121, 127, 131, 169, 172, 178, 138, 146, 163]}}
{"prediction": {"error_location": 0.9937092065811157, "repair_targets": [0.8191297054290771, 0.009252582676708698, 4.7961191739887e-05], "repair_candidates": [0.04273395612835884, 0.014881864190101624, 0.0017472581239417195, 0.019107088446617126, 0.00021419658150989562, 3.956483487854712e-05, 0.0003300053649581969, 0.0017051552422344685, 0.0010637043742462993, 0.001997587503865361, 0.002594707068055868, 0.8191297054290771, 0.00029519107192754745, 0.009252582676708698, 0.0005092869396321476, 8.82447147887433e-06, 4.7961191739887e-05, 0.017528027296066284, 0.0007365019409917295, 0.002214753534644842, 0.00150121352635324, 0.0006587065290659666, 0.005321325268596411, 0.016246182844042778, 0.0074549890123307705, 0.022233085706830025, 7.08505540387705e-05, 0.0012358230305835605, 0.0002110661007463932, 0.0017090224428102374, 0.004120021127164364, 5.7130713685182855e-05, 8.504321158397943e-05, 5.5092445109039545e-05, 0.00033760382211767137, 1.4868825928715523e-05, 6.478124123532325e-05, 0.00012546942161861807, 7.949723658384755e-05, 3.080360693274997e-05, 0.00010870596452150494, 2.234677958767861e-05, 0.00023137433163356036, 3.8266014598775655e-05, 0.0003915081615559757, 4.130784873268567e-05, 0.0007605182472616434, 6.921881140442565e-05, 5.417902139015496e-05, 1.0945469512080308e-05, 0.0001092078528017737, 2.3683971903665224e-06, 7.494515739381313e-05, 3.5694864664037596e-07, 7.26118059901637e-06, 5.555160100811918e-07, 6.112722621764988e-05, 0.00024488416966050863, 1.1453957995399833e-06, 1.9254539438406937e-05], "target_probs": 0.8284302949905396}}


{"result": {"time": "2021-02-11 11:56:48.909027", "n_pass": [646, 58, 58], "n_token": 177, "loss": [0.006738320458680391, 0.2443009465932846], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def __init__(", "self", ",", "request", ",", "*", "args", ",", "self", ")", ".", "__init__", "(", "request", ",", "*", "args", ",", "**", "kwargs", ")", "#NEWLINE#", "tenant_choices", "(", "tenants", ",", "has_more", ")", "=", "request", ")", "#NEWLINE#", "for", "tenant", "in", "tenants", ":", "#NEWLINE#", "#INDENT#", "if", "tenant", "#NEWLINE#", "#INDENT#", "tenant_choices", "(", "net_type", ".", "id", ",", "tenant", "#UNINDENT#", "self", ".", "=", "tenant_choices", "#NEWLINE#", "#INDENT#", "self", "self", ".", "request", "(", "request", ",", "#NEWLINE#", "#INDENT#", "neutron_settings", "#NEWLINE#", "seg_id_range", "=", "neutron_settings", ".", "get", "#NEWLINE#", "self", ".", "seg_id_range", "=", "{", ":", "seg_id_range", ".", ":", "seg_id_range", ".", "'vxlan'", ":", "seg_id_range", ".", "get", "#NEWLINE#", "seg_id_help", "'For VLAN networks, the VLAN VID on the physical network that realizes the virtual network. Valid VLAN VIDs are %(vlan_min)s through %(vlan_max)s. For GRE or VXLAN networks, the tunnel ID. Valid tunnel IDs for GRE networks are %(gre_min)s through %(gre_max)s. For VXLAN networks, %(vxlan_min)s through %(vxlan_max)s.'", "self", ".", "seg_id_range", "'vlan_max'", ":", "self", ".", "seg_id_range", "[", "'vlan'", "]", "#NEWLINE#", "'gre_min'", ":", "self", ".", "seg_id_range", "[", "'gre'", "self", ".", "seg_id_range", "#NEWLINE#", "'vxlan_min'", ":", "self", ".", "seg_id_range", "[", "'vxlan_max'", ":", "self", ".", "seg_id_range", "[", "self", ".", "fields", "[", "=", "seg_id_help", "#NEWLINE#", "supported_provider_types", "=", "neutron_settings", ".", "get", "(", "'supported_provider_types'", "(", "supported_provider_types", "network_type_choices", "=", "PROVIDER_TYPES", "#NEWLINE#", "#INDENT#", "network_type_choices", "=", "[", "net_type", "for", "net_type", "in", "PROVIDER_TYPES", "if", "(", "net_type", "supported_provider_types", "(", "network_type_choices", ")", "#NEWLINE#", "#INDENT#", "self", ".", "#INDENT#", "self", "=", "network_type_choices", ":", "#NEWLINE#", "#INDENT#", "self"]}}
{"position": {"error_location": 46, "repair_targets": [34, 41, 50], "repair_candidates": [7, 17, 69, 77, 81, 84, 88, 96, 101, 110, 115, 121, 127, 46, 153, 155, 160, 25, 36, 145, 150, 163, 172, 4, 14, 30, 61, 63, 34, 41, 50, 20, 27, 23, 44, 55, 67, 71, 138, 92, 134, 2, 9, 52, 58, 59, 75, 94, 99, 108, 113, 119, 125, 129, 167, 170, 176, 136, 144, 161]}}
{"prediction": {"error_location": 0.9932843446731567, "repair_targets": [0.7726969122886658, 0.010492298752069473, 6.262396345846355e-05], "repair_candidates": [0.05148887261748314, 0.017983611673116684, 0.0019758781418204308, 0.029700415208935738, 0.00020399459754116833, 4.40666735812556e-05, 0.00030822010012343526, 0.0016085344832390547, 0.0011617294512689114, 0.002281653694808483, 0.002859598957002163, 0.7726969122886658, 0.00030511218938045204, 0.010492298752069473, 0.000528700475115329, 3.819835001195315e-06, 6.262396345846355e-05, 0.026576315984129906, 0.0006654976750724018, 0.000858433311805129, 0.0004991269088350236, 0.0010185906430706382, 0.012105117551982403, 0.022808758541941643, 0.0064909253269433975, 0.02851233445107937, 9.851223148871213e-05, 0.0005140498396940529, 0.0001197682722704485, 0.0007350766682066023, 0.0023296114522963762, 3.759916944545694e-05, 0.00016025315562728792, 4.7243654989870265e-05, 0.0003222612722311169, 6.277443389990367e-06, 6.188068073242903e-05, 7.190556061686948e-05, 4.1474813770037144e-05, 2.3036531274556182e-05, 8.31502111395821e-05, 2.1655932869180106e-05, 0.0001719340798445046, 2.0244464394636452e-05, 0.00021467692567966878, 6.662314262939617e-05, 0.001010544365271926, 8.194513065973297e-05, 6.745091377524659e-05, 1.3735514585277997e-05, 8.024805720197037e-05, 1.5752209492347902e-06, 5.674928615917452e-05, 3.6909509049110056e-07, 1.6701706044841558e-05, 7.421178906952264e-07, 6.306688010226935e-05, 0.00020298954041209072, 1.4623072956965188e-06, 1.4030971215106547e-05], "target_probs": 0.7832518815994263}}


{"result": {"time": "2021-02-11 11:56:49.000135", "n_pass": [649, 59, 59], "n_token": 175, "loss": [0.0039451876655220985, 0.24927471578121185], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def __init__(", "self", ",", "request", ",", "*", "args", ",", "self", ")", ".", "__init__", "(", "request", ",", "*", "args", ",", "**", "kwargs", ")", "#NEWLINE#", "tenant_choices", "(", "tenants", ",", "has_more", ")", "=", "request", ")", "#NEWLINE#", "for", "tenant", "in", "tenants", ":", "#NEWLINE#", "#INDENT#", "if", "tenant", "#NEWLINE#", "#INDENT#", "tenant_choices", "(", "net_type", ".", "id", ",", "tenant", "#UNINDENT#", "self", ".", "=", "tenant_choices", "#NEWLINE#", "#INDENT#", "self", "self", ".", "request", "(", "request", ",", "neutron_settings", "#NEWLINE#", "seg_id_range", "=", "neutron_settings", ".", "get", "#NEWLINE#", "self", ".", "seg_id_range", "=", "{", ":", "seg_id_range", ".", ":", "seg_id_range", ".", "'vxlan'", ":", "seg_id_range", ".", "get", "#NEWLINE#", "seg_id_help", "'For VLAN networks, the VLAN VID on the physical network that realizes the virtual network. Valid VLAN VIDs are %(vlan_min)s through %(vlan_max)s. For GRE or VXLAN networks, the tunnel ID. Valid tunnel IDs for GRE networks are %(gre_min)s through %(gre_max)s. For VXLAN networks, %(vxlan_min)s through %(vxlan_max)s.'", "self", ".", "seg_id_range", "'vlan_max'", ":", "self", ".", "seg_id_range", "[", "'vlan'", "]", "#NEWLINE#", "'gre_min'", ":", "self", ".", "seg_id_range", "[", "'gre'", "self", ".", "seg_id_range", "#NEWLINE#", "'vxlan_min'", ":", "self", ".", "seg_id_range", "[", "'vxlan_max'", ":", "self", ".", "seg_id_range", "[", "self", ".", "fields", "[", "=", "seg_id_help", "#NEWLINE#", "supported_provider_types", "=", "neutron_settings", ".", "get", "(", "'supported_provider_types'", "(", "supported_provider_types", "network_type_choices", "=", "PROVIDER_TYPES", "#NEWLINE#", "#INDENT#", "network_type_choices", "=", "[", "net_type", "for", "net_type", "in", "PROVIDER_TYPES", "if", "(", "net_type", "supported_provider_types", "(", "network_type_choices", ")", "#NEWLINE#", "#INDENT#", "self", ".", "#INDENT#", "self", "=", "network_type_choices", ":", "#NEWLINE#", "#INDENT#", "self"]}}
{"position": {"error_location": 46, "repair_targets": [34, 41, 50], "repair_candidates": [7, 17, 67, 75, 79, 82, 86, 94, 99, 108, 113, 119, 125, 46, 151, 153, 158, 25, 36, 143, 148, 161, 170, 4, 14, 30, 61, 63, 34, 41, 50, 20, 27, 23, 44, 55, 65, 69, 136, 90, 132, 2, 9, 52, 58, 59, 73, 92, 97, 106, 111, 117, 123, 127, 165, 168, 174, 134, 142, 159]}}
{"prediction": {"error_location": 0.9960625767707825, "repair_targets": [0.7695703506469727, 0.00964883342385292, 0.00014661230670753866], "repair_candidates": [0.045276034623384476, 0.018147844821214676, 0.0016842191107571125, 0.029368454590439796, 0.00015914904361125082, 3.449170253588818e-05, 0.0003526080690789968, 0.0014999426202848554, 0.0011143704177811742, 0.0020288291852921247, 0.0031331449281424284, 0.7695703506469727, 0.0003618919581640512, 0.00964883342385292, 0.0005146065959706903, 1.2679081464739284e-06, 0.00014661230670753866, 0.028066715225577354, 0.0009904815815389156, 0.0011976012028753757, 0.0007241432904265821, 0.0012890551006421447, 0.00909319706261158, 0.0007553540635854006, 0.010175907053053379, 0.05668024346232414, 0.0002851177705451846, 0.0002688816748559475, 0.000229736790060997, 0.0011806234251707792, 0.003428542288020253, 4.751958476845175e-05, 0.00023001543013378978, 3.1784882594365627e-05, 0.0001694137608865276, 3.147123607050162e-06, 4.84102638438344e-05, 2.2920685296412557e-05, 2.9175851523177698e-05, 1.6657510059303604e-05, 5.40163237019442e-05, 1.1849751899717376e-05, 0.00010043504153145477, 8.416310265602078e-06, 0.0001153095654444769, 4.235675078234635e-05, 0.0011019454104825854, 0.0001166648871731013, 4.421386620379053e-05, 1.1379580428183544e-05, 7.961903611430898e-05, 1.817119596125849e-06, 3.291748362244107e-05, 4.863538833888015e-07, 1.8802149497787468e-05, 1.7534598555357661e-06, 4.212098065181635e-05, 0.0001764347980497405, 3.6331944102130365e-06, 2.8530068448162638e-05], "target_probs": 0.7793658375740051}}


{"result": {"time": "2021-02-11 11:56:49.091186", "n_pass": [653, 60, 60], "n_token": 173, "loss": [0.0032862015068531036, 0.21756567060947418], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def __init__(", "self", ",", "request", ",", "*", "args", ",", "self", ")", ".", "__init__", "(", "request", ",", "*", "args", ",", "**", "kwargs", ")", "#NEWLINE#", "tenant_choices", "(", "tenants", ",", "has_more", ")", "=", "request", ")", "#NEWLINE#", "for", "tenant", "in", "tenants", ":", "#NEWLINE#", "#INDENT#", "if", "tenant", "#NEWLINE#", "#INDENT#", "tenant_choices", "(", "net_type", ".", "id", ",", "tenant", "#UNINDENT#", "self", ".", "=", "tenant_choices", "#NEWLINE#", "#INDENT#", "self", "self", ".", "request", "(", "request", ",", "neutron_settings", "#NEWLINE#", "seg_id_range", "=", "neutron_settings", ".", "self", ".", "seg_id_range", "=", "{", ":", "seg_id_range", ".", ":", "seg_id_range", ".", "'vxlan'", ":", "seg_id_range", ".", "get", "#NEWLINE#", "seg_id_help", "'For VLAN networks, the VLAN VID on the physical network that realizes the virtual network. Valid VLAN VIDs are %(vlan_min)s through %(vlan_max)s. For GRE or VXLAN networks, the tunnel ID. Valid tunnel IDs for GRE networks are %(gre_min)s through %(gre_max)s. For VXLAN networks, %(vxlan_min)s through %(vxlan_max)s.'", "self", ".", "seg_id_range", "'vlan_max'", ":", "self", ".", "seg_id_range", "[", "'vlan'", "]", "#NEWLINE#", "'gre_min'", ":", "self", ".", "seg_id_range", "[", "'gre'", "self", ".", "seg_id_range", "#NEWLINE#", "'vxlan_min'", ":", "self", ".", "seg_id_range", "[", "'vxlan_max'", ":", "self", ".", "seg_id_range", "[", "self", ".", "fields", "[", "=", "seg_id_help", "#NEWLINE#", "supported_provider_types", "=", "neutron_settings", ".", "get", "(", "'supported_provider_types'", "(", "supported_provider_types", "network_type_choices", "=", "PROVIDER_TYPES", "#NEWLINE#", "#INDENT#", "network_type_choices", "=", "[", "net_type", "for", "net_type", "in", "PROVIDER_TYPES", "if", "(", "net_type", "supported_provider_types", "(", "network_type_choices", ")", "#NEWLINE#", "#INDENT#", "self", ".", "#INDENT#", "self", "=", "network_type_choices", ":", "#NEWLINE#", "#INDENT#", "self"]}}
{"position": {"error_location": 46, "repair_targets": [34, 41, 50], "repair_candidates": [7, 17, 67, 73, 77, 80, 84, 92, 97, 106, 111, 117, 123, 46, 149, 151, 156, 25, 36, 141, 146, 159, 168, 4, 14, 30, 61, 63, 34, 41, 50, 20, 27, 23, 44, 55, 65, 69, 134, 88, 130, 2, 9, 52, 58, 59, 71, 90, 95, 104, 109, 115, 121, 125, 163, 166, 172, 132, 140, 157]}}
{"prediction": {"error_location": 0.9967191815376282, "repair_targets": [0.7915645241737366, 0.012696492485702038, 0.00021374033531174064], "repair_candidates": [0.05213143303990364, 0.021653523668646812, 0.0021304585970938206, 0.04390942305326462, 0.00017764091899152845, 5.739394327974878e-05, 0.0004069217247888446, 0.0015434602973982692, 0.0010755151743069291, 0.0024572578258812428, 0.0031874519772827625, 0.7915645241737366, 0.00046601396752521396, 0.012696492485702038, 0.0005540746496990323, 1.0286481710863882e-06, 0.00021374033531174064, 0.029916074126958847, 0.0005932564963586628, 0.0012708866270259023, 0.0009965361095964909, 0.0016423641936853528, 0.010732932947576046, 0.0004452964349184185, 0.004000290296971798, 0.005701723508536816, 0.0027498509734869003, 9.730569581734017e-05, 0.0003906884230673313, 0.00010474120790604502, 0.000814113998785615, 7.74857762735337e-05, 0.000493980769533664, 2.2463682398665696e-05, 0.001705677481368184, 3.023428462256561e-06, 0.00018190908303949982, 1.0453170034452341e-05, 0.00026271812384948134, 1.4629070392402355e-05, 0.00037349408376030624, 7.755818842269946e-06, 0.000837723957374692, 5.355121629690984e-06, 0.0002817156782839447, 3.018535062437877e-05, 0.0010767733911052346, 0.00018674881721381098, 4.822046321351081e-05, 1.0814537745318376e-05, 0.0001333622058155015, 3.503901780277374e-06, 2.992175541294273e-05, 8.217006666200177e-07, 1.6380094166379422e-05, 4.0061136132862885e-06, 6.367723835865036e-05, 0.00032927258871495724, 6.075692454032833e-06, 9.945869533112273e-05], "target_probs": 0.8044747710227966}}


{"result": {"time": "2021-02-11 11:56:49.182681", "n_pass": [656, 61, 61], "n_token": 171, "loss": [0.004007523879408836, 0.20604410767555237], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def __init__(", "self", ",", "request", ",", "*", "args", ",", "self", ")", ".", "__init__", "(", "request", ",", "*", "args", ",", "**", "kwargs", ")", "#NEWLINE#", "tenant_choices", "(", "tenants", ",", "has_more", ")", "=", "request", ")", "#NEWLINE#", "for", "tenant", "in", "tenants", ":", "#NEWLINE#", "#INDENT#", "if", "tenant", "#NEWLINE#", "#INDENT#", "tenant_choices", "(", "net_type", ".", "id", ",", "tenant", "#UNINDENT#", "self", ".", "=", "tenant_choices", "#NEWLINE#", "#INDENT#", "self", "self", ".", "request", "(", "request", ",", "neutron_settings", "#NEWLINE#", "seg_id_range", "=", "neutron_settings", ".", "self", ".", "seg_id_range", "=", "seg_id_range", ".", ":", "seg_id_range", ".", "'vxlan'", ":", "seg_id_range", ".", "get", "#NEWLINE#", "seg_id_help", "'For VLAN networks, the VLAN VID on the physical network that realizes the virtual network. Valid VLAN VIDs are %(vlan_min)s through %(vlan_max)s. For GRE or VXLAN networks, the tunnel ID. Valid tunnel IDs for GRE networks are %(gre_min)s through %(gre_max)s. For VXLAN networks, %(vxlan_min)s through %(vxlan_max)s.'", "self", ".", "seg_id_range", "'vlan_max'", ":", "self", ".", "seg_id_range", "[", "'vlan'", "]", "#NEWLINE#", "'gre_min'", ":", "self", ".", "seg_id_range", "[", "'gre'", "self", ".", "seg_id_range", "#NEWLINE#", "'vxlan_min'", ":", "self", ".", "seg_id_range", "[", "'vxlan_max'", ":", "self", ".", "seg_id_range", "[", "self", ".", "fields", "[", "=", "seg_id_help", "#NEWLINE#", "supported_provider_types", "=", "neutron_settings", ".", "get", "(", "'supported_provider_types'", "(", "supported_provider_types", "network_type_choices", "=", "PROVIDER_TYPES", "#NEWLINE#", "#INDENT#", "network_type_choices", "=", "[", "net_type", "for", "net_type", "in", "PROVIDER_TYPES", "if", "(", "net_type", "supported_provider_types", "(", "network_type_choices", ")", "#NEWLINE#", "#INDENT#", "self", ".", "#INDENT#", "self", "=", "network_type_choices", ":", "#NEWLINE#", "#INDENT#", "self"]}}
{"position": {"error_location": 46, "repair_targets": [34, 41, 50], "repair_candidates": [7, 17, 67, 73, 75, 78, 82, 90, 95, 104, 109, 115, 121, 46, 147, 149, 154, 25, 36, 139, 144, 157, 166, 4, 14, 30, 61, 63, 34, 41, 50, 20, 27, 23, 44, 55, 65, 69, 132, 86, 128, 2, 9, 52, 58, 59, 71, 88, 93, 102, 107, 113, 119, 123, 161, 164, 170, 130, 138, 155]}}
{"prediction": {"error_location": 0.996000349521637, "repair_targets": [0.7993192076683044, 0.014221031218767166, 0.0002569819043856114], "repair_candidates": [0.04673611372709274, 0.02011779323220253, 0.0023034324403852224, 0.043161261826753616, 0.0002128107298631221, 6.174591544549912e-05, 0.0005325643578544259, 0.0017275825375691056, 0.0011683790944516659, 0.00256469938904047, 0.0025598183274269104, 0.7993192076683044, 0.0005469887400977314, 0.014221031218767166, 0.0007122341194190085, 2.6651543976186076e-06, 0.0002569819043856114, 0.027406062930822372, 0.0007688215700909495, 0.0006983416969887912, 0.0005538511904887855, 0.0020288866944611073, 0.010484205558896065, 0.0004432257264852524, 0.0037523601204156876, 0.004174887202680111, 0.0023358380421996117, 0.00017146574100479484, 0.00037632937892340124, 0.00039501505671069026, 0.001010142033919692, 0.00012496176350396127, 0.0004569730081129819, 3.079927773796953e-05, 0.002948494628071785, 5.508798949449556e-06, 0.0002499834808986634, 1.1491412806208245e-05, 0.0005589715437963605, 1.6532865629415028e-05, 0.00040947721572592854, 1.4094484868110158e-05, 0.0009957198053598404, 1.1059806638513692e-05, 0.0003750304749701172, 4.425606311997399e-05, 0.001349535072222352, 0.00030975742265582085, 7.499826460843906e-05, 1.9821058231173083e-05, 0.00015706740668974817, 6.726254014211008e-06, 4.639074904844165e-05, 1.9520266505423933e-06, 2.748618680925574e-05, 1.002271892502904e-05, 0.00012467261694837362, 0.0005800502840429544, 9.113996384257916e-06, 0.00022437330335378647], "target_probs": 0.8137971758842468}}


{"result": {"time": "2021-02-11 11:56:49.272794", "n_pass": [659, 62, 62], "n_token": 169, "loss": [0.004590924363583326, 0.20129485428333282], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def __init__(", "self", ",", "request", ",", "*", "args", ",", "self", ")", ".", "__init__", "(", "request", ",", "*", "args", ",", "**", "kwargs", ")", "#NEWLINE#", "tenant_choices", "(", "tenants", ",", "has_more", ")", "=", "request", ")", "#NEWLINE#", "for", "tenant", "in", "tenants", ":", "#NEWLINE#", "#INDENT#", "if", "tenant", "#NEWLINE#", "#INDENT#", "tenant_choices", "(", "net_type", ".", "id", ",", "tenant", "#UNINDENT#", "self", ".", "=", "tenant_choices", "#NEWLINE#", "#INDENT#", "self", "self", ".", "request", "(", "request", ",", "neutron_settings", "#NEWLINE#", "seg_id_range", "=", "neutron_settings", ".", "self", ".", "seg_id_range", "=", "seg_id_range", ".", ":", "seg_id_range", ":", "seg_id_range", ".", "get", "#NEWLINE#", "seg_id_help", "'For VLAN networks, the VLAN VID on the physical network that realizes the virtual network. Valid VLAN VIDs are %(vlan_min)s through %(vlan_max)s. For GRE or VXLAN networks, the tunnel ID. Valid tunnel IDs for GRE networks are %(gre_min)s through %(gre_max)s. For VXLAN networks, %(vxlan_min)s through %(vxlan_max)s.'", "self", ".", "seg_id_range", "'vlan_max'", ":", "self", ".", "seg_id_range", "[", "'vlan'", "]", "#NEWLINE#", "'gre_min'", ":", "self", ".", "seg_id_range", "[", "'gre'", "self", ".", "seg_id_range", "#NEWLINE#", "'vxlan_min'", ":", "self", ".", "seg_id_range", "[", "'vxlan_max'", ":", "self", ".", "seg_id_range", "[", "self", ".", "fields", "[", "=", "seg_id_help", "#NEWLINE#", "supported_provider_types", "=", "neutron_settings", ".", "get", "(", "'supported_provider_types'", "(", "supported_provider_types", "network_type_choices", "=", "PROVIDER_TYPES", "#NEWLINE#", "#INDENT#", "network_type_choices", "=", "[", "net_type", "for", "net_type", "in", "PROVIDER_TYPES", "if", "(", "net_type", "supported_provider_types", "(", "network_type_choices", ")", "#NEWLINE#", "#INDENT#", "self", ".", "#INDENT#", "self", "=", "network_type_choices", ":", "#NEWLINE#", "#INDENT#", "self"]}}
{"position": {"error_location": 46, "repair_targets": [34, 41, 50], "repair_candidates": [7, 17, 67, 73, 75, 78, 80, 88, 93, 102, 107, 113, 119, 46, 145, 147, 152, 25, 36, 137, 142, 155, 164, 4, 14, 30, 61, 63, 34, 41, 50, 20, 27, 23, 44, 55, 65, 69, 130, 84, 126, 2, 9, 52, 58, 59, 71, 86, 91, 100, 105, 111, 117, 121, 159, 162, 168, 128, 136, 153]}}
{"prediction": {"error_location": 0.9954197406768799, "repair_targets": [0.8030615448951721, 0.014321410097181797, 0.00028838272555731237], "repair_candidates": [0.04596276208758354, 0.017964238300919533, 0.00254312832839787, 0.03473435714840889, 0.00023360538762062788, 7.374487177003175e-05, 0.0005784378154203296, 0.0019188780570402741, 0.0013723938027396798, 0.002949621994048357, 0.002412274479866028, 0.8030615448951721, 0.0006041392916813493, 0.014321410097181797, 0.0007948006968945265, 4.130509751121281e-06, 0.00028838272555731237, 0.027628218755126, 0.0009072331595234573, 0.0007522984524257481, 0.000622096355073154, 0.001961540197953582, 0.010078854858875275, 0.0005666806828230619, 0.003474180120974779, 0.0034410511143505573, 0.0038287355564534664, 0.00016580922238063067, 0.0002191931998822838, 0.00015086682105902582, 0.0014986625174060464, 0.00012028047058265656, 0.0006398175610229373, 3.314278001198545e-05, 0.004553175065666437, 6.314127404039027e-06, 0.0005177942803129554, 1.47627788464888e-05, 0.0009490093216300011, 2.011503602261655e-05, 0.00045910943299531937, 3.1043175113154575e-05, 0.0011450436431914568, 2.3016740669845603e-05, 0.000601722567807883, 0.00011440329399192706, 0.0017933452036231756, 0.0004155437054578215, 5.788372800452635e-05, 4.921367872157134e-05, 0.00021295301849022508, 2.0591462089214474e-05, 9.808444156078622e-05, 5.158815383765614e-06, 3.1151153962127864e-05, 3.8940539525356144e-05, 0.0002800600486807525, 0.001444200868718326, 3.486030254862271e-05, 0.0011758900946006179], "target_probs": 0.8176712989807129}}


{"result": {"time": "2021-02-11 11:56:49.362785", "n_pass": [661, 63, 63], "n_token": 167, "loss": [0.01729584112763405, 0.31755101680755615], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def __init__(", "self", ",", "request", ",", "*", "args", ",", "self", ")", ".", "__init__", "(", "request", ",", "*", "args", ",", "**", "kwargs", ")", "#NEWLINE#", "tenant_choices", "(", "tenants", ",", "has_more", ")", "=", "request", ")", "#NEWLINE#", "for", "tenant", "in", "tenants", ":", "#NEWLINE#", "#INDENT#", "if", "tenant", "#NEWLINE#", "#INDENT#", "tenant_choices", "(", "net_type", ".", "id", ",", "tenant", "#UNINDENT#", "self", ".", "=", "tenant_choices", "#NEWLINE#", "#INDENT#", "self", "self", ".", "request", "(", "request", ",", "neutron_settings", "#NEWLINE#", "seg_id_range", "=", "neutron_settings", ".", "self", ".", "seg_id_range", "=", "seg_id_range", ".", ":", "seg_id_range", ":", "seg_id_range", "#NEWLINE#", "seg_id_help", "'For VLAN networks, the VLAN VID on the physical network that realizes the virtual network. Valid VLAN VIDs are %(vlan_min)s through %(vlan_max)s. For GRE or VXLAN networks, the tunnel ID. Valid tunnel IDs for GRE networks are %(gre_min)s through %(gre_max)s. For VXLAN networks, %(vxlan_min)s through %(vxlan_max)s.'", "self", ".", "seg_id_range", "'vlan_max'", ":", "self", ".", "seg_id_range", "[", "'vlan'", "]", "#NEWLINE#", "'gre_min'", ":", "self", ".", "seg_id_range", "[", "'gre'", "self", ".", "seg_id_range", "#NEWLINE#", "'vxlan_min'", ":", "self", ".", "seg_id_range", "[", "'vxlan_max'", ":", "self", ".", "seg_id_range", "[", "self", ".", "fields", "[", "=", "seg_id_help", "#NEWLINE#", "supported_provider_types", "=", "neutron_settings", ".", "get", "(", "'supported_provider_types'", "(", "supported_provider_types", "network_type_choices", "=", "PROVIDER_TYPES", "#NEWLINE#", "#INDENT#", "network_type_choices", "=", "[", "net_type", "for", "net_type", "in", "PROVIDER_TYPES", "if", "(", "net_type", "supported_provider_types", "(", "network_type_choices", ")", "#NEWLINE#", "#INDENT#", "self", ".", "#INDENT#", "self", "=", "network_type_choices", ":", "#NEWLINE#", "#INDENT#", "self"]}}
{"position": {"error_location": 46, "repair_targets": [34, 41, 50], "repair_candidates": [7, 17, 67, 73, 75, 78, 80, 86, 91, 100, 105, 111, 117, 46, 143, 145, 150, 25, 36, 135, 140, 153, 162, 4, 14, 30, 61, 63, 34, 41, 50, 20, 27, 23, 44, 55, 65, 69, 128, 82, 124, 2, 9, 52, 58, 59, 71, 84, 89, 98, 103, 109, 115, 119, 157, 160, 166, 126, 134, 151]}}
{"prediction": {"error_location": 0.9828525185585022, "repair_targets": [0.7107132077217102, 0.016686325892806053, 0.0005299943150021136], "repair_candidates": [0.05730452015995979, 0.020049378275871277, 0.002567705698311329, 0.04015238583087921, 0.000322201318340376, 9.91517590591684e-05, 0.000673564791213721, 0.002095077885314822, 0.0012824450386688113, 0.0027665290981531143, 0.0024436230305582285, 0.7107132077217102, 0.0006177480681799352, 0.016686325892806053, 0.0009208909468725324, 1.4869138794892933e-05, 0.0005299943150021136, 0.03867665305733681, 0.0011825370602309704, 0.0029333713464438915, 0.00266269245184958, 0.002157527720555663, 0.013642147183418274, 0.0011446523712947965, 0.0020837956108152866, 0.009017188102006912, 0.01687229983508587, 0.00015394609363283962, 2.229841447842773e-05, 3.17741469189059e-05, 1.9830472410831135e-06, 0.0003599469782784581, 0.0026795396115630865, 3.5741297324420884e-05, 0.022614561021327972, 1.4596278560929932e-05, 0.0020189837086945772, 1.4897584151185583e-05, 0.005038130097091198, 2.7335312552168034e-05, 0.0019769256468862295, 2.545359166106209e-05, 0.006089005619287491, 1.9173130567651242e-05, 0.002331778174266219, 0.00028503750218078494, 0.0014558868715539575, 0.000991957844235003, 6.510149978566915e-05, 8.20000350358896e-05, 0.0002984631573781371, 2.0433333702385426e-05, 0.00014094549987930804, 3.862284302158514e-06, 2.457529444654938e-05, 4.404698483995162e-05, 0.00015114642155822366, 0.0022420943714678288, 3.8002210203558207e-05, 0.0010878370376303792], "target_probs": 0.7279295325279236}}


{"result": {"time": "2021-02-11 11:56:49.453183", "n_pass": [665, 64, 64], "n_token": 165, "loss": [0.011687025427818298, 0.2755579650402069], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def __init__(", "self", ",", "request", ",", "*", "args", ",", "self", ")", ".", "__init__", "(", "request", ",", "*", "args", ",", "**", "kwargs", ")", "#NEWLINE#", "tenant_choices", "(", "tenants", ",", "has_more", ")", "=", "request", ")", "#NEWLINE#", "for", "tenant", "in", "tenants", ":", "#NEWLINE#", "#INDENT#", "if", "tenant", "#NEWLINE#", "#INDENT#", "tenant_choices", "(", "net_type", ".", "id", ",", "tenant", "#UNINDENT#", "self", ".", "=", "tenant_choices", "#NEWLINE#", "#INDENT#", "self", "self", ".", "request", "(", "request", ",", "neutron_settings", "#NEWLINE#", "seg_id_range", "=", "neutron_settings", ".", "self", ".", "seg_id_range", "=", "seg_id_range", ".", ":", "seg_id_range", ":", "seg_id_range", "#NEWLINE#", "seg_id_help", "'For VLAN networks, the VLAN VID on the physical network that realizes the virtual network. Valid VLAN VIDs are %(vlan_min)s through %(vlan_max)s. For GRE or VXLAN networks, the tunnel ID. Valid tunnel IDs for GRE networks are %(gre_min)s through %(gre_max)s. For VXLAN networks, %(vxlan_min)s through %(vxlan_max)s.'", "self", ".", "seg_id_range", "self", ".", "seg_id_range", "[", "'vlan'", "]", "#NEWLINE#", "'gre_min'", ":", "self", ".", "seg_id_range", "[", "'gre'", "self", ".", "seg_id_range", "#NEWLINE#", "'vxlan_min'", ":", "self", ".", "seg_id_range", "[", "'vxlan_max'", ":", "self", ".", "seg_id_range", "[", "self", ".", "fields", "[", "=", "seg_id_help", "#NEWLINE#", "supported_provider_types", "=", "neutron_settings", ".", "get", "(", "'supported_provider_types'", "(", "supported_provider_types", "network_type_choices", "=", "PROVIDER_TYPES", "#NEWLINE#", "#INDENT#", "network_type_choices", "=", "[", "net_type", "for", "net_type", "in", "PROVIDER_TYPES", "if", "(", "net_type", "supported_provider_types", "(", "network_type_choices", ")", "#NEWLINE#", "#INDENT#", "self", ".", "#INDENT#", "self", "=", "network_type_choices", ":", "#NEWLINE#", "#INDENT#", "self"]}}
{"position": {"error_location": 46, "repair_targets": [34, 41, 50], "repair_candidates": [7, 17, 67, 73, 75, 78, 80, 86, 89, 98, 103, 109, 115, 46, 141, 143, 148, 25, 36, 133, 138, 151, 160, 4, 14, 30, 61, 63, 34, 41, 50, 20, 27, 23, 44, 55, 65, 69, 126, 82, 122, 2, 9, 52, 58, 59, 71, 84, 87, 96, 101, 107, 113, 117, 155, 158, 164, 124, 132, 149]}}
{"prediction": {"error_location": 0.988381028175354, "repair_targets": [0.7430805563926697, 0.015636762604117393, 0.0004311380907893181], "repair_candidates": [0.054506972432136536, 0.01918700896203518, 0.0021954725962132215, 0.03850268945097923, 0.00029371160781010985, 9.013165981741622e-05, 0.0007010509725660086, 0.002111035166308284, 0.001251045847311616, 0.002532847225666046, 0.002061887178570032, 0.7430805563926697, 0.0005139326676726341, 0.015636762604117393, 0.0009118258603848517, 1.2278433132451028e-05, 0.0004311380907893181, 0.040335167199373245, 0.0011251716641709208, 0.0038356937002390623, 0.00330936792306602, 0.0017822437221184373, 0.011779692023992538, 0.0007479799096472561, 0.00243891729041934, 0.007868263870477676, 0.012338634580373764, 0.00014585177996195853, 1.8584541976451874e-05, 2.945344203908462e-05, 1.442338202650717e-06, 9.423062147106975e-05, 0.00038815400330349803, 6.237220804905519e-05, 0.005083787254989147, 2.2363490643328987e-05, 0.002501081209629774, 1.9897654055966996e-05, 0.006976649165153503, 3.2372321584261954e-05, 0.002496205735951662, 2.0182527805445716e-05, 0.005156729836016893, 2.055211371043697e-05, 0.0029981806874275208, 0.00028171128360554576, 0.0009743237169459462, 0.0006941821193322539, 4.41767115262337e-05, 7.659813854843378e-05, 0.00024393545754719526, 1.0934993042610586e-05, 0.00012544775381684303, 1.635674493627448e-06, 1.3360512639337685e-05, 1.2767865882779006e-05, 5.878249794477597e-05, 0.0014709150418639183, 2.195144770666957e-05, 0.0003196795005351305], "target_probs": 0.7591484189033508}}


{"result": {"time": "2021-02-11 11:56:49.544022", "n_pass": [668, 65, 65], "n_token": 163, "loss": [0.013609010726213455, 0.272558331489563], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def __init__(", "self", ",", "request", ",", "*", "args", ",", "self", ")", ".", "__init__", "(", "request", ",", "*", "args", ",", "**", "kwargs", ")", "#NEWLINE#", "tenant_choices", "(", "tenants", ",", "has_more", ")", "=", "request", ")", "#NEWLINE#", "for", "tenant", "in", "tenants", ":", "#NEWLINE#", "#INDENT#", "if", "tenant", "#NEWLINE#", "#INDENT#", "tenant_choices", "(", "net_type", ".", "id", ",", "tenant", "#UNINDENT#", "self", ".", "=", "tenant_choices", "#NEWLINE#", "#INDENT#", "self", "self", ".", "request", "(", "request", ",", "neutron_settings", "#NEWLINE#", "seg_id_range", "=", "neutron_settings", ".", "self", ".", "seg_id_range", "=", "seg_id_range", ".", ":", "seg_id_range", ":", "seg_id_range", "#NEWLINE#", "seg_id_help", "'For VLAN networks, the VLAN VID on the physical network that realizes the virtual network. Valid VLAN VIDs are %(vlan_min)s through %(vlan_max)s. For GRE or VXLAN networks, the tunnel ID. Valid tunnel IDs for GRE networks are %(gre_min)s through %(gre_max)s. For VXLAN networks, %(vxlan_min)s through %(vxlan_max)s.'", "self", ".", "seg_id_range", "self", ".", "seg_id_range", "[", "#NEWLINE#", "'gre_min'", ":", "self", ".", "seg_id_range", "[", "'gre'", "self", ".", "seg_id_range", "#NEWLINE#", "'vxlan_min'", ":", "self", ".", "seg_id_range", "[", "'vxlan_max'", ":", "self", ".", "seg_id_range", "[", "self", ".", "fields", "[", "=", "seg_id_help", "#NEWLINE#", "supported_provider_types", "=", "neutron_settings", ".", "get", "(", "'supported_provider_types'", "(", "supported_provider_types", "network_type_choices", "=", "PROVIDER_TYPES", "#NEWLINE#", "#INDENT#", "network_type_choices", "=", "[", "net_type", "for", "net_type", "in", "PROVIDER_TYPES", "if", "(", "net_type", "supported_provider_types", "(", "network_type_choices", ")", "#NEWLINE#", "#INDENT#", "self", ".", "#INDENT#", "self", "=", "network_type_choices", ":", "#NEWLINE#", "#INDENT#", "self"]}}
{"position": {"error_location": 46, "repair_targets": [34, 41, 50], "repair_candidates": [7, 17, 67, 73, 75, 78, 80, 86, 89, 96, 101, 107, 113, 46, 139, 141, 146, 25, 36, 131, 136, 149, 158, 4, 14, 30, 61, 63, 34, 41, 50, 20, 27, 23, 44, 55, 65, 69, 124, 82, 120, 2, 9, 52, 58, 59, 71, 84, 87, 94, 99, 105, 111, 115, 153, 156, 162, 122, 130, 147]}}
{"prediction": {"error_location": 0.9864832758903503, "repair_targets": [0.7456467151641846, 0.01530112698674202, 0.0004811940889339894], "repair_candidates": [0.04834549129009247, 0.019438350573182106, 0.002252877689898014, 0.03922102227807045, 0.00027670885901898146, 9.055986447492614e-05, 0.000794481486082077, 0.002167056081816554, 0.0012705880217254162, 0.002446079859510064, 0.0017392659792676568, 0.7456467151641846, 0.0004978107754141092, 0.01530112698674202, 0.0009518906008452177, 1.0446249689266551e-05, 0.0004811940889339894, 0.03821249306201935, 0.001128111151047051, 0.003584762569516897, 0.0031337898690253496, 0.0017524167196825147, 0.011352591216564178, 0.0006775525398552418, 0.0031673405319452286, 0.008410886861383915, 0.010785484686493874, 0.0001993203622987494, 1.4985668713052291e-05, 3.588059189496562e-05, 1.8089023114953307e-06, 9.815079829422757e-05, 0.0004663056752178818, 6.639385537710041e-05, 0.010073043406009674, 3.6140081647317857e-05, 0.0023670773953199387, 3.013233254023362e-05, 0.010873747989535332, 3.123823626083322e-05, 0.0023513133637607098, 2.4003918952075765e-05, 0.0033292851876467466, 3.965825089835562e-05, 0.0031951230484992266, 0.00016338018758688122, 0.0009336993098258972, 0.00038437455077655613, 3.347562960698269e-05, 5.594395042862743e-05, 0.00024699216010048985, 8.441152203886304e-06, 0.00011898716184077784, 1.2901556374345091e-06, 1.629619873710908e-05, 4.2614842641341966e-06, 9.862756269285455e-05, 0.0010326630435883999, 1.2458652236091439e-05, 0.0005184008041396737], "target_probs": 0.7614290118217468}}


{"result": {"time": "2021-02-11 11:56:49.634559", "n_pass": [669, 66, 66], "n_token": 161, "loss": [0.01761026307940483, 0.29432088136672974], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def __init__(", "self", ",", "request", ",", "*", "args", ",", "self", ")", ".", "__init__", "(", "request", ",", "*", "args", ",", "**", "kwargs", ")", "#NEWLINE#", "tenant_choices", "(", "tenants", ",", "has_more", ")", "=", "request", ")", "#NEWLINE#", "for", "tenant", "in", "tenants", ":", "#NEWLINE#", "#INDENT#", "if", "tenant", "#NEWLINE#", "#INDENT#", "tenant_choices", "(", "net_type", ".", "id", ",", "tenant", "#UNINDENT#", "self", ".", "=", "tenant_choices", "#NEWLINE#", "#INDENT#", "self", "self", ".", "request", "(", "request", ",", "neutron_settings", "#NEWLINE#", "seg_id_range", "=", "neutron_settings", ".", "self", ".", "seg_id_range", "=", "seg_id_range", ".", ":", "seg_id_range", ":", "seg_id_range", "#NEWLINE#", "seg_id_help", "'For VLAN networks, the VLAN VID on the physical network that realizes the virtual network. Valid VLAN VIDs are %(vlan_min)s through %(vlan_max)s. For GRE or VXLAN networks, the tunnel ID. Valid tunnel IDs for GRE networks are %(gre_min)s through %(gre_max)s. For VXLAN networks, %(vxlan_min)s through %(vxlan_max)s.'", "self", ".", "seg_id_range", "self", ".", "seg_id_range", "[", ":", "self", ".", "seg_id_range", "[", "'gre'", "self", ".", "seg_id_range", "#NEWLINE#", "'vxlan_min'", ":", "self", ".", "seg_id_range", "[", "'vxlan_max'", ":", "self", ".", "seg_id_range", "[", "self", ".", "fields", "[", "=", "seg_id_help", "#NEWLINE#", "supported_provider_types", "=", "neutron_settings", ".", "get", "(", "'supported_provider_types'", "(", "supported_provider_types", "network_type_choices", "=", "PROVIDER_TYPES", "#NEWLINE#", "#INDENT#", "network_type_choices", "=", "[", "net_type", "for", "net_type", "in", "PROVIDER_TYPES", "if", "(", "net_type", "supported_provider_types", "(", "network_type_choices", ")", "#NEWLINE#", "#INDENT#", "self", ".", "#INDENT#", "self", "=", "network_type_choices", ":", "#NEWLINE#", "#INDENT#", "self"]}}
{"position": {"error_location": 46, "repair_targets": [34, 41, 50], "repair_candidates": [7, 17, 67, 73, 75, 78, 80, 86, 89, 94, 99, 105, 111, 46, 137, 139, 144, 25, 36, 129, 134, 147, 156, 4, 14, 30, 61, 63, 34, 41, 50, 20, 27, 23, 44, 55, 65, 69, 122, 82, 118, 2, 9, 52, 58, 59, 71, 84, 87, 92, 97, 103, 109, 113, 151, 154, 160, 120, 128, 145]}}
{"prediction": {"error_location": 0.9825440049171448, "repair_targets": [0.7291169762611389, 0.015551481395959854, 0.00036890673800371587], "repair_candidates": [0.04880578815937042, 0.01853097230195999, 0.002342668827623129, 0.04032944515347481, 0.00023232135572470725, 8.731372508918867e-05, 0.0007299932185560465, 0.002100428333505988, 0.001158068305812776, 0.002261191373690963, 0.0016508124535903335, 0.7291169762611389, 0.00045727877295576036, 0.015551481395959854, 0.0008599698776379228, 9.598627002560534e-06, 0.00036890673800371587, 0.033649612218141556, 0.0009532235562801361, 0.0035227304324507713, 0.00313985045067966, 0.0014887502184137702, 0.010739162564277649, 0.0007262068102136254, 0.0031651314347982407, 0.009301197715103626, 0.008573290891945362, 0.00018266859115101397, 1.3429536011244636e-05, 2.561709698056802e-05, 1.4021883316672756e-06, 0.00012814546062145382, 0.0003246509295422584, 6.516480061691254e-05, 0.009036324918270111, 3.186867616022937e-05, 0.016650717705488205, 1.7684993508737534e-05, 0.02171572484076023, 2.4696621039765887e-05, 0.001803580322302878, 2.040673280134797e-05, 0.003394251223653555, 2.3915952624520287e-05, 0.002940893406048417, 0.00030267087277024984, 0.0007620881078764796, 0.0006471493397839367, 3.555817966116592e-05, 4.2996322008548304e-05, 0.00019866494403686374, 7.5191182986600325e-06, 9.26512511796318e-05, 1.1771214758482529e-06, 1.070673533831723e-05, 2.830872517733951e-06, 0.0001515012700110674, 0.0005777721526101232, 9.724348274176009e-06, 0.0009035221883095801], "target_probs": 0.7450373768806458}}


{"result": {"time": "2021-02-11 11:56:49.724646", "n_pass": [672, 67, 67], "n_token": 159, "loss": [0.014546885155141354, 0.2696317434310913], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def __init__(", "self", ",", "request", ",", "*", "args", ",", "self", ")", ".", "__init__", "(", "request", ",", "*", "args", ",", "**", "kwargs", ")", "#NEWLINE#", "tenant_choices", "(", "tenants", ",", "has_more", ")", "=", "request", ")", "#NEWLINE#", "for", "tenant", "in", "tenants", ":", "#NEWLINE#", "#INDENT#", "if", "tenant", "#NEWLINE#", "#INDENT#", "tenant_choices", "(", "net_type", ".", "id", ",", "tenant", "#UNINDENT#", "self", ".", "=", "tenant_choices", "#NEWLINE#", "#INDENT#", "self", "self", ".", "request", "(", "request", ",", "neutron_settings", "#NEWLINE#", "seg_id_range", "=", "neutron_settings", ".", "self", ".", "seg_id_range", "=", "seg_id_range", ".", ":", "seg_id_range", ":", "seg_id_range", "#NEWLINE#", "seg_id_help", "'For VLAN networks, the VLAN VID on the physical network that realizes the virtual network. Valid VLAN VIDs are %(vlan_min)s through %(vlan_max)s. For GRE or VXLAN networks, the tunnel ID. Valid tunnel IDs for GRE networks are %(gre_min)s through %(gre_max)s. For VXLAN networks, %(vxlan_min)s through %(vxlan_max)s.'", "self", ".", "seg_id_range", "self", ".", "seg_id_range", "[", ":", "self", ".", "seg_id_range", "self", ".", "seg_id_range", "#NEWLINE#", "'vxlan_min'", ":", "self", ".", "seg_id_range", "[", "'vxlan_max'", ":", "self", ".", "seg_id_range", "[", "self", ".", "fields", "[", "=", "seg_id_help", "#NEWLINE#", "supported_provider_types", "=", "neutron_settings", ".", "get", "(", "'supported_provider_types'", "(", "supported_provider_types", "network_type_choices", "=", "PROVIDER_TYPES", "#NEWLINE#", "#INDENT#", "network_type_choices", "=", "[", "net_type", "for", "net_type", "in", "PROVIDER_TYPES", "if", "(", "net_type", "supported_provider_types", "(", "network_type_choices", ")", "#NEWLINE#", "#INDENT#", "self", ".", "#INDENT#", "self", "=", "network_type_choices", ":", "#NEWLINE#", "#INDENT#", "self"]}}
{"position": {"error_location": 46, "repair_targets": [34, 41, 50], "repair_candidates": [7, 17, 67, 73, 75, 78, 80, 86, 89, 94, 97, 103, 109, 46, 135, 137, 142, 25, 36, 127, 132, 145, 154, 4, 14, 30, 61, 63, 34, 41, 50, 20, 27, 23, 44, 55, 65, 69, 120, 82, 116, 2, 9, 52, 58, 59, 71, 84, 87, 92, 95, 101, 107, 111, 149, 152, 158, 118, 126, 143]}}
{"prediction": {"error_location": 0.9855581521987915, "repair_targets": [0.7467819452285767, 0.01648198626935482, 0.00039672234561294317], "repair_candidates": [0.0499073751270771, 0.021001657471060753, 0.002986116101965308, 0.04322432726621628, 0.00028024555649608374, 0.00010676700185285881, 0.0009053023532032967, 0.0023009488359093666, 0.0013748237397521734, 0.0033254683949053288, 0.0018713307799771428, 0.7467819452285767, 0.00045786830014549196, 0.01648198626935482, 0.0009497625869698822, 1.142340806836728e-05, 0.00039672234561294317, 0.03455650433897972, 0.0011155114043504, 0.0025080153718590736, 0.0027374352794140577, 0.0018959299195557833, 0.01235254481434822, 0.0014980243286117911, 0.002691554604098201, 0.008804243989288807, 0.004417726770043373, 0.000258954765740782, 1.4082449524721596e-05, 3.442379966145381e-05, 1.8960897705255775e-06, 0.00022548643755726516, 0.000497989181894809, 5.2635648899013177e-05, 0.004999780561774969, 3.950168320443481e-05, 0.014719448052346706, 2.844136361090932e-05, 0.0008704102365300059, 2.8562400984810665e-05, 0.0019631616305559874, 1.5145596989896148e-05, 0.004134529270231724, 1.5501378584303893e-05, 0.0023664492182433605, 0.0003298131050541997, 0.0008455878705717623, 0.0010484799277037382, 5.668324956786819e-05, 2.95299178105779e-05, 0.0002228345547337085, 6.879804004711332e-06, 0.00013310489885043353, 1.0263022431900026e-06, 6.909062904014718e-06, 1.854475044638093e-06, 0.0003732542390935123, 0.0004824154602829367, 1.1867685316246934e-05, 0.0012419181875884533], "target_probs": 0.7636606693267822}}


{"result": {"time": "2021-02-11 11:56:49.815080", "n_pass": [675, 68, 68], "n_token": 157, "loss": [0.022389957681298256, 0.2913014590740204], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def __init__(", "self", ",", "request", ",", "*", "args", ",", "self", ")", ".", "__init__", "(", "request", ",", "*", "args", ",", "**", "kwargs", ")", "#NEWLINE#", "tenant_choices", "(", "tenants", ",", "has_more", ")", "=", "request", ")", "#NEWLINE#", "for", "tenant", "in", "tenants", ":", "#NEWLINE#", "#INDENT#", "if", "tenant", "#NEWLINE#", "#INDENT#", "tenant_choices", "(", "net_type", ".", "id", ",", "tenant", "#UNINDENT#", "self", ".", "=", "tenant_choices", "#NEWLINE#", "#INDENT#", "self", "self", ".", "request", "(", "request", ",", "neutron_settings", "#NEWLINE#", "seg_id_range", "=", "neutron_settings", ".", "self", ".", "seg_id_range", "=", "seg_id_range", ".", ":", "seg_id_range", ":", "seg_id_range", "#NEWLINE#", "seg_id_help", "'For VLAN networks, the VLAN VID on the physical network that realizes the virtual network. Valid VLAN VIDs are %(vlan_min)s through %(vlan_max)s. For GRE or VXLAN networks, the tunnel ID. Valid tunnel IDs for GRE networks are %(gre_min)s through %(gre_max)s. For VXLAN networks, %(vxlan_min)s through %(vxlan_max)s.'", "self", ".", "seg_id_range", "self", ".", "seg_id_range", "[", ":", "self", ".", "seg_id_range", "self", ".", "seg_id_range", "#NEWLINE#", "self", ".", "seg_id_range", "[", "'vxlan_max'", ":", "self", ".", "seg_id_range", "[", "self", ".", "fields", "[", "=", "seg_id_help", "#NEWLINE#", "supported_provider_types", "=", "neutron_settings", ".", "get", "(", "'supported_provider_types'", "(", "supported_provider_types", "network_type_choices", "=", "PROVIDER_TYPES", "#NEWLINE#", "#INDENT#", "network_type_choices", "=", "[", "net_type", "for", "net_type", "in", "PROVIDER_TYPES", "if", "(", "net_type", "supported_provider_types", "(", "network_type_choices", ")", "#NEWLINE#", "#INDENT#", "self", ".", "#INDENT#", "self", "=", "network_type_choices", ":", "#NEWLINE#", "#INDENT#", "self"]}}
{"position": {"error_location": 46, "repair_targets": [34, 41, 50], "repair_candidates": [7, 17, 67, 73, 75, 78, 80, 86, 89, 94, 97, 101, 107, 46, 133, 135, 140, 25, 36, 125, 130, 143, 152, 4, 14, 30, 61, 63, 34, 41, 50, 20, 27, 23, 44, 55, 65, 69, 118, 82, 114, 2, 9, 52, 58, 59, 71, 84, 87, 92, 95, 99, 105, 109, 147, 150, 156, 116, 124, 141]}}
{"prediction": {"error_location": 0.9778587222099304, "repair_targets": [0.7296629548072815, 0.01713620498776436, 0.0004911890719085932], "repair_candidates": [0.05141263082623482, 0.021634716540575027, 0.0035945111885666847, 0.041744038462638855, 0.0003700787201523781, 0.00012601529306266457, 0.0012094913981854916, 0.002914704382419586, 0.0015861685387790203, 0.0040316893719136715, 0.0017252640100196004, 0.7296629548072815, 0.00047585208085365593, 0.01713620498776436, 0.0012007554760202765, 2.9165825253585353e-05, 0.0004911890719085932, 0.04266168922185898, 0.0013976498739793897, 0.002043560380116105, 0.0021315577905625105, 0.002157672308385372, 0.014664687216281891, 0.0018852588254958391, 0.004340737126767635, 0.008291915990412235, 0.005208567250519991, 0.0003178986080456525, 8.544288903067354e-06, 5.0669535994529724e-05, 2.7074941044702427e-06, 0.00036099422140978277, 0.00042481074342504144, 7.810369424987584e-05, 0.004734058398753405, 6.333510100375861e-05, 0.016227813437581062, 3.984412978752516e-05, 0.0009481462184339762, 4.094642281415872e-05, 0.0003884214092977345, 1.3245838090369944e-05, 0.004974722862243652, 1.9908266040147282e-05, 0.0023521985858678818, 0.00034184279502369463, 0.0014420971274375916, 0.0006916942074894905, 9.972091356758028e-05, 3.198422200512141e-05, 0.00023878725187387317, 1.4679042578791268e-05, 0.0002417451178189367, 1.5235885939546279e-06, 8.670594070281368e-06, 1.3950696029496612e-06, 0.00032664378522895277, 0.0004478294576983899, 1.1770973287639208e-05, 0.0009245793335139751], "target_probs": 0.7472903728485107}}


{"result": {"time": "2021-02-11 11:56:49.904527", "n_pass": [678, 69, 69], "n_token": 155, "loss": [0.0517190545797348, 0.37297701835632324], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def __init__(", "self", ",", "request", ",", "*", "args", ",", "self", ")", ".", "__init__", "(", "request", ",", "*", "args", ",", "**", "kwargs", ")", "#NEWLINE#", "tenant_choices", "(", "tenants", ",", "has_more", ")", "=", "request", ")", "#NEWLINE#", "for", "tenant", "in", "tenants", ":", "#NEWLINE#", "#INDENT#", "if", "tenant", "#NEWLINE#", "#INDENT#", "tenant_choices", "(", "net_type", ".", "id", ",", "tenant", "#UNINDENT#", "self", ".", "=", "tenant_choices", "#NEWLINE#", "#INDENT#", "self", "self", ".", "request", "(", "request", ",", "neutron_settings", "#NEWLINE#", "seg_id_range", "=", "neutron_settings", ".", "self", ".", "seg_id_range", "=", "seg_id_range", ".", ":", "seg_id_range", ":", "seg_id_range", "#NEWLINE#", "seg_id_help", "'For VLAN networks, the VLAN VID on the physical network that realizes the virtual network. Valid VLAN VIDs are %(vlan_min)s through %(vlan_max)s. For GRE or VXLAN networks, the tunnel ID. Valid tunnel IDs for GRE networks are %(gre_min)s through %(gre_max)s. For VXLAN networks, %(vxlan_min)s through %(vxlan_max)s.'", "self", ".", "seg_id_range", "self", ".", "seg_id_range", "[", ":", "self", ".", "seg_id_range", "self", ".", "seg_id_range", "#NEWLINE#", "self", ".", "seg_id_range", "[", "self", ".", "seg_id_range", "[", "self", ".", "fields", "[", "=", "seg_id_help", "#NEWLINE#", "supported_provider_types", "=", "neutron_settings", ".", "get", "(", "'supported_provider_types'", "(", "supported_provider_types", "network_type_choices", "=", "PROVIDER_TYPES", "#NEWLINE#", "#INDENT#", "network_type_choices", "=", "[", "net_type", "for", "net_type", "in", "PROVIDER_TYPES", "if", "(", "net_type", "supported_provider_types", "(", "network_type_choices", ")", "#NEWLINE#", "#INDENT#", "self", ".", "#INDENT#", "self", "=", "network_type_choices", ":", "#NEWLINE#", "#INDENT#", "self"]}}
{"position": {"error_location": 46, "repair_targets": [34, 41, 50], "repair_candidates": [7, 17, 67, 73, 75, 78, 80, 86, 89, 94, 97, 101, 105, 46, 131, 133, 138, 25, 36, 123, 128, 141, 150, 4, 14, 30, 61, 63, 34, 41, 50, 20, 27, 23, 44, 55, 65, 69, 116, 82, 112, 2, 9, 52, 58, 59, 71, 84, 87, 92, 95, 99, 103, 107, 145, 148, 154, 114, 122, 139]}}
{"prediction": {"error_location": 0.9495955109596252, "repair_targets": [0.6716528534889221, 0.01636972837150097, 0.0006585396477021277], "repair_candidates": [0.06004800647497177, 0.02181755192577839, 0.004352054558694363, 0.04472579061985016, 0.0004421656485646963, 0.0001649857294978574, 0.0014990329509600997, 0.0033722356893122196, 0.0018515088595449924, 0.004969742614775896, 0.0016934090526774526, 0.6716528534889221, 0.0005910760955885053, 0.01636972837150097, 0.0013704898301512003, 9.080167365027592e-05, 0.0006585396477021277, 0.04402230307459831, 0.0014618829591199756, 0.003273027716204524, 0.0031395978294312954, 0.002467317972332239, 0.01524211373180151, 0.0021415986120700836, 0.0050020827911794186, 0.011830106377601624, 0.006522475276142359, 0.0004116038035135716, 8.97155132406624e-06, 7.701425056438893e-05, 2.7308401513437275e-06, 0.0003309781022835523, 0.0010692457435652614, 0.0001189062895718962, 0.009608383290469646, 0.00010413124255137518, 0.03726258501410484, 6.352134369080886e-05, 0.0013496663887053728, 6.326669972622767e-05, 0.0007569819572381675, 5.0060581997968256e-05, 0.008407819084823132, 4.531256854534149e-05, 0.004229287151247263, 0.0004024766094516963, 0.0015384999569505453, 0.000980546697974205, 0.00012499967124313116, 4.542870738077909e-05, 0.0002143604215234518, 3.129503966192715e-05, 0.0003770982730202377, 2.043596850853646e-06, 8.536346285836771e-06, 8.98669441085076e-07, 0.0005343898665159941, 0.0004181966360192746, 6.374645636242349e-06, 0.0005818157806061208], "target_probs": 0.6886810660362244}}


{"result": {"time": "2021-02-11 11:56:49.995492", "n_pass": [682, 70, 70], "n_token": 153, "loss": [0.039767056703567505, 0.3618077337741852], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def __init__(", "self", ",", "request", ",", "*", "args", ",", "self", ")", ".", "__init__", "(", "request", ",", "*", "args", ",", "**", "kwargs", ")", "#NEWLINE#", "tenant_choices", "(", "tenants", ",", "has_more", ")", "=", "request", ")", "#NEWLINE#", "for", "tenant", "in", "tenants", ":", "#NEWLINE#", "#INDENT#", "if", "tenant", "#NEWLINE#", "#INDENT#", "tenant_choices", "(", "net_type", ".", "id", ",", "tenant", "#UNINDENT#", "self", ".", "=", "tenant_choices", "#NEWLINE#", "#INDENT#", "self", "self", ".", "request", "(", "request", ",", "neutron_settings", "#NEWLINE#", "seg_id_range", "=", "neutron_settings", ".", "self", ".", "seg_id_range", "=", "seg_id_range", ".", ":", "seg_id_range", ":", "seg_id_range", "#NEWLINE#", "seg_id_help", "'For VLAN networks, the VLAN VID on the physical network that realizes the virtual network. Valid VLAN VIDs are %(vlan_min)s through %(vlan_max)s. For GRE or VXLAN networks, the tunnel ID. Valid tunnel IDs for GRE networks are %(gre_min)s through %(gre_max)s. For VXLAN networks, %(vxlan_min)s through %(vxlan_max)s.'", "self", ".", "seg_id_range", "self", ".", "seg_id_range", "[", ":", "self", ".", "seg_id_range", "self", ".", "seg_id_range", "#NEWLINE#", "self", ".", "seg_id_range", "[", "self", ".", "seg_id_range", "[", "self", ".", "=", "seg_id_help", "#NEWLINE#", "supported_provider_types", "=", "neutron_settings", ".", "get", "(", "'supported_provider_types'", "(", "supported_provider_types", "network_type_choices", "=", "PROVIDER_TYPES", "#NEWLINE#", "#INDENT#", "network_type_choices", "=", "[", "net_type", "for", "net_type", "in", "PROVIDER_TYPES", "if", "(", "net_type", "supported_provider_types", "(", "network_type_choices", ")", "#NEWLINE#", "#INDENT#", "self", ".", "#INDENT#", "self", "=", "network_type_choices", ":", "#NEWLINE#", "#INDENT#", "self"]}}
{"position": {"error_location": 46, "repair_targets": [34, 41, 50], "repair_candidates": [7, 17, 67, 73, 75, 78, 80, 86, 89, 94, 97, 101, 105, 46, 129, 131, 136, 25, 36, 121, 126, 139, 148, 4, 14, 30, 61, 63, 34, 41, 50, 20, 27, 23, 44, 55, 65, 69, 114, 82, 110, 2, 9, 52, 58, 59, 71, 84, 87, 92, 95, 99, 103, 107, 143, 146, 152, 112, 120, 137]}}
{"prediction": {"error_location": 0.96101313829422, "repair_targets": [0.68108069896698, 0.014535960741341114, 0.0007996179047040641], "repair_candidates": [0.05276777967810631, 0.022999152541160583, 0.0041357167065143585, 0.03965291380882263, 0.0004993726615794003, 0.00018541306781116873, 0.0015026247128844261, 0.00345905520953238, 0.0017828390700742602, 0.005206923466175795, 0.0017378946067765355, 0.68108069896698, 0.0006338843959383667, 0.014535960741341114, 0.001304719946347177, 6.601322093047202e-05, 0.0007996179047040641, 0.04255526140332222, 0.0014592485968023539, 0.0035027144476771355, 0.003810631576925516, 0.002263548318296671, 0.018150608986616135, 0.0017007378628477454, 0.004245090764015913, 0.010969836264848709, 0.006662497762590647, 0.000347324792528525, 8.091330528259277e-06, 6.343406857922673e-05, 2.5710503450682154e-06, 0.0004105052794329822, 0.0009470772929489613, 0.0001071486112778075, 0.011607437394559383, 8.105250890366733e-05, 0.04128791019320488, 4.61288946098648e-05, 0.0011191414669156075, 4.068640555487946e-05, 0.0007249623304232955, 2.091187343467027e-05, 0.007271843031048775, 1.9105156752630137e-05, 0.00391544820740819, 0.0008660826715640724, 0.0009289229637943208, 0.0009503570036031306, 0.00010766116611193866, 3.4236236388096586e-05, 0.00018638726032804698, 1.5368550521088764e-05, 0.00023444868566002697, 1.3440790098684374e-06, 4.570777491608169e-06, 1.0515485655560042e-06, 0.00034650988527573645, 0.000240724824834615, 5.735204922530102e-06, 0.0003850243811029941], "target_probs": 0.6964162588119507}}


{"result": {"time": "2021-02-11 11:56:50.085500", "n_pass": [686, 71, 71], "n_token": 151, "loss": [0.04720360413193703, 0.372405081987381], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def __init__(", "self", ",", "request", ",", "*", "args", ",", "self", ")", ".", "__init__", "(", "request", ",", "*", "args", ",", "**", "kwargs", ")", "#NEWLINE#", "tenant_choices", "(", "tenants", ",", "has_more", ")", "=", "request", ")", "#NEWLINE#", "for", "tenant", "in", "tenants", ":", "#NEWLINE#", "#INDENT#", "if", "tenant", "#NEWLINE#", "#INDENT#", "tenant_choices", "(", "net_type", ".", "id", ",", "tenant", "#UNINDENT#", "self", ".", "=", "tenant_choices", "#NEWLINE#", "#INDENT#", "self", "self", ".", "request", "(", "request", ",", "neutron_settings", "#NEWLINE#", "seg_id_range", "=", "neutron_settings", ".", "self", ".", "seg_id_range", "=", "seg_id_range", ".", ":", "seg_id_range", ":", "seg_id_range", "#NEWLINE#", "seg_id_help", "'For VLAN networks, the VLAN VID on the physical network that realizes the virtual network. Valid VLAN VIDs are %(vlan_min)s through %(vlan_max)s. For GRE or VXLAN networks, the tunnel ID. Valid tunnel IDs for GRE networks are %(gre_min)s through %(gre_max)s. For VXLAN networks, %(vxlan_min)s through %(vxlan_max)s.'", "self", ".", "seg_id_range", "self", ".", "seg_id_range", "[", ":", "self", ".", "seg_id_range", "self", ".", "seg_id_range", "#NEWLINE#", "self", ".", "seg_id_range", "[", "self", ".", "seg_id_range", "[", "self", ".", "=", "seg_id_help", "#NEWLINE#", "supported_provider_types", "=", "neutron_settings", "(", "'supported_provider_types'", "(", "supported_provider_types", "network_type_choices", "=", "PROVIDER_TYPES", "#NEWLINE#", "#INDENT#", "network_type_choices", "=", "[", "net_type", "for", "net_type", "in", "PROVIDER_TYPES", "if", "(", "net_type", "supported_provider_types", "(", "network_type_choices", ")", "#NEWLINE#", "#INDENT#", "self", ".", "#INDENT#", "self", "=", "network_type_choices", ":", "#NEWLINE#", "#INDENT#", "self"]}}
{"position": {"error_location": 46, "repair_targets": [34, 41, 50], "repair_candidates": [7, 17, 67, 73, 75, 78, 80, 86, 89, 94, 97, 101, 105, 46, 127, 129, 134, 25, 36, 119, 124, 137, 146, 4, 14, 30, 61, 63, 34, 41, 50, 20, 27, 23, 44, 55, 65, 69, 114, 82, 110, 2, 9, 52, 58, 59, 71, 84, 87, 92, 95, 99, 103, 107, 141, 144, 150, 112, 118, 135]}}
{"prediction": {"error_location": 0.95389324426651, "repair_targets": [0.6735931038856506, 0.014591807499527931, 0.000890107941813767], "repair_candidates": [0.05534873530268669, 0.02272990345954895, 0.004129420500248671, 0.04106771945953369, 0.00048653935664333403, 0.0002083835133817047, 0.0017909660236909986, 0.0035476400516927242, 0.0018590058898553252, 0.005236710887402296, 0.0018785404972732067, 0.6735931038856506, 0.0006503759068436921, 0.014591807499527931, 0.0014118282124400139, 7.489575364161283e-05, 0.000890107941813767, 0.04655781388282776, 0.0014198919525370002, 0.0036643038038164377, 0.00397652480751276, 0.002744061406701803, 0.016777582466602325, 0.001743386615999043, 0.0038530356250703335, 0.010427113622426987, 0.00674290768802166, 0.000399512005969882, 8.985010026663076e-06, 7.13733970769681e-05, 3.3249484658881556e-06, 0.0005087178433313966, 0.000944682804401964, 0.00013277407560963184, 0.01227207388728857, 0.00010427144297864288, 0.03918398916721344, 5.013362169847824e-05, 0.0011435612104833126, 4.327294300310314e-05, 0.0007886942476034164, 2.596293415990658e-05, 0.010128550231456757, 2.2376540073310025e-05, 0.0041136471554636955, 0.000647113542072475, 0.0005578544805757701, 7.283735612872988e-05, 0.00010353016114095226, 3.286213177489117e-05, 0.00019174574117641896, 1.4936612387828063e-05, 0.00028073095018044114, 1.0354467576689785e-06, 3.9029564504744485e-06, 1.7741532474246924e-06, 0.00017915110220201313, 0.0003746597212739289, 8.32120258564828e-06, 0.00018128275405615568], "target_probs": 0.6890750527381897}}


{"result": {"time": "2021-02-11 11:56:50.174117", "n_pass": [687, 72, 72], "n_token": 149, "loss": [0.03165154159069061, 0.384776771068573], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def __init__(", "self", ",", "request", ",", "*", "args", ",", "self", ")", ".", "__init__", "(", "request", ",", "*", "args", ",", "**", "kwargs", ")", "#NEWLINE#", "tenant_choices", "(", "tenants", ",", "has_more", ")", "=", "request", ")", "#NEWLINE#", "for", "tenant", "in", "tenants", ":", "#NEWLINE#", "#INDENT#", "if", "tenant", "#NEWLINE#", "#INDENT#", "tenant_choices", "(", "net_type", ".", "id", ",", "tenant", "#UNINDENT#", "self", ".", "=", "tenant_choices", "#NEWLINE#", "#INDENT#", "self", "self", ".", "request", "(", "request", ",", "neutron_settings", "#NEWLINE#", "seg_id_range", "=", "neutron_settings", ".", "self", ".", "seg_id_range", "=", "seg_id_range", ".", ":", "seg_id_range", ":", "seg_id_range", "#NEWLINE#", "seg_id_help", "'For VLAN networks, the VLAN VID on the physical network that realizes the virtual network. Valid VLAN VIDs are %(vlan_min)s through %(vlan_max)s. For GRE or VXLAN networks, the tunnel ID. Valid tunnel IDs for GRE networks are %(gre_min)s through %(gre_max)s. For VXLAN networks, %(vxlan_min)s through %(vxlan_max)s.'", "self", ".", "seg_id_range", "self", ".", "seg_id_range", "[", ":", "self", ".", "seg_id_range", "self", ".", "seg_id_range", "#NEWLINE#", "self", ".", "seg_id_range", "[", "self", ".", "seg_id_range", "[", "self", ".", "=", "seg_id_help", "#NEWLINE#", "supported_provider_types", "=", "neutron_settings", "(", "supported_provider_types", "network_type_choices", "=", "PROVIDER_TYPES", "#NEWLINE#", "#INDENT#", "network_type_choices", "=", "[", "net_type", "for", "net_type", "in", "PROVIDER_TYPES", "if", "(", "net_type", "supported_provider_types", "(", "network_type_choices", ")", "#NEWLINE#", "#INDENT#", "self", ".", "#INDENT#", "self", "=", "network_type_choices", ":", "#NEWLINE#", "#INDENT#", "self"]}}
{"position": {"error_location": 46, "repair_targets": [34, 41, 50], "repair_candidates": [7, 17, 67, 73, 75, 78, 80, 86, 89, 94, 97, 101, 105, 46, 125, 127, 132, 25, 36, 117, 122, 135, 144, 4, 14, 30, 61, 63, 34, 41, 50, 20, 27, 23, 44, 55, 65, 69, 114, 82, 110, 2, 9, 52, 58, 59, 71, 84, 87, 92, 95, 99, 103, 107, 139, 142, 148, 112, 116, 133]}}
{"prediction": {"error_location": 0.9688441157341003, "repair_targets": [0.664473831653595, 0.015259630978107452, 0.0008690770482644439], "repair_candidates": [0.062086936086416245, 0.02390955202281475, 0.0038440898060798645, 0.04685831815004349, 0.000498192326631397, 0.0002089317567879334, 0.0012857626425102353, 0.0036708186380565166, 0.0018638356123119593, 0.0063965595327317715, 0.0025832965038716793, 0.664473831653595, 0.000709205458406359, 0.015259630978107452, 0.0014108550967648625, 5.9245787269901484e-05, 0.0008690770482644439, 0.04997335374355316, 0.0015319567173719406, 0.0041772667318582535, 0.004698224365711212, 0.0029497318901121616, 0.0186610110104084, 0.002759828232228756, 0.0027986320201307535, 0.011188886128365993, 0.006561536807566881, 0.0003124797949567437, 6.4274486248905305e-06, 5.90636846027337e-05, 3.383611556273536e-06, 0.0003996995510533452, 0.000775863416492939, 0.00010063938680104911, 0.00969548150897026, 7.343033939832821e-05, 0.03296351805329323, 3.67135762644466e-05, 0.0008143014856614172, 3.197186379111372e-05, 0.00065164192346856, 2.0976780433556996e-05, 0.007700944319367409, 1.8253642338095233e-05, 0.002633900847285986, 0.0004110598820261657, 0.0003333796630613506, 6.623984518228099e-05, 0.00011595094838412479, 4.778905349667184e-05, 0.00013347729691304266, 1.3287117326399311e-05, 0.0004046379472129047, 5.238898665993474e-07, 2.5637480121076806e-06, 1.3674051615453209e-06, 0.0001778407022356987, 0.0004841344489250332, 7.246243058034452e-06, 0.0002131446381099522], "target_probs": 0.6806025505065918}}


{"result": {"time": "2021-02-11 11:56:50.262976", "n_pass": [690, 73, 73], "n_token": 147, "loss": [0.028243018314242363, 0.38336849212646484], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def __init__(", "self", ",", "request", ",", "*", "args", ",", "self", ")", ".", "__init__", "(", "request", ",", "*", "args", ",", "**", "kwargs", ")", "#NEWLINE#", "tenant_choices", "(", "tenants", ",", "has_more", ")", "=", "request", ")", "#NEWLINE#", "for", "tenant", "in", "tenants", ":", "#NEWLINE#", "#INDENT#", "if", "tenant", "#NEWLINE#", "#INDENT#", "tenant_choices", "(", "net_type", ".", "id", ",", "tenant", "#UNINDENT#", "self", ".", "=", "tenant_choices", "#NEWLINE#", "#INDENT#", "self", "self", ".", "request", "(", "request", ",", "neutron_settings", "#NEWLINE#", "seg_id_range", "=", "neutron_settings", ".", "self", ".", "seg_id_range", "=", "seg_id_range", ".", ":", "seg_id_range", ":", "seg_id_range", "#NEWLINE#", "seg_id_help", "'For VLAN networks, the VLAN VID on the physical network that realizes the virtual network. Valid VLAN VIDs are %(vlan_min)s through %(vlan_max)s. For GRE or VXLAN networks, the tunnel ID. Valid tunnel IDs for GRE networks are %(gre_min)s through %(gre_max)s. For VXLAN networks, %(vxlan_min)s through %(vxlan_max)s.'", "self", ".", "seg_id_range", "self", ".", "seg_id_range", "[", ":", "self", ".", "seg_id_range", "self", ".", "seg_id_range", "#NEWLINE#", "self", ".", "seg_id_range", "[", "self", ".", "seg_id_range", "[", "self", ".", "=", "seg_id_help", "#NEWLINE#", "supported_provider_types", "=", "neutron_settings", "(", "supported_provider_types", "network_type_choices", "=", "#INDENT#", "network_type_choices", "=", "[", "net_type", "for", "net_type", "in", "PROVIDER_TYPES", "if", "(", "net_type", "supported_provider_types", "(", "network_type_choices", ")", "#NEWLINE#", "#INDENT#", "self", ".", "#INDENT#", "self", "=", "network_type_choices", ":", "#NEWLINE#", "#INDENT#", "self"]}}
{"position": {"error_location": 46, "repair_targets": [34, 41, 50], "repair_candidates": [7, 17, 67, 73, 75, 78, 80, 86, 89, 94, 97, 101, 105, 46, 123, 125, 130, 25, 36, 117, 120, 133, 142, 4, 14, 30, 61, 63, 34, 41, 50, 20, 27, 23, 44, 55, 65, 69, 114, 82, 110, 2, 9, 52, 58, 59, 71, 84, 87, 92, 95, 99, 103, 107, 137, 140, 146, 112, 116, 131]}}
{"prediction": {"error_location": 0.9721518754959106, "repair_targets": [0.6644083261489868, 0.01619793474674225, 0.0009554781718179584], "repair_candidates": [0.06810212135314941, 0.024089356884360313, 0.004004869610071182, 0.05114813148975372, 0.0005561261205002666, 0.0002207532961620018, 0.0011735586449503899, 0.0035891802981495857, 0.00190458120778203, 0.007404330186545849, 0.0022998766507953405, 0.6644083261489868, 0.0007811556570231915, 0.01619793474674225, 0.001318498281762004, 5.574824899667874e-05, 0.0009554781718179584, 0.05049728602170944, 0.001606395118869841, 0.004458580166101456, 0.005404965952038765, 0.002935042604804039, 0.02124186046421528, 0.0031815029215067625, 0.0026079900562763214, 0.010361666791141033, 0.00628556776791811, 0.0002820086956489831, 6.687344011879759e-06, 5.955762026133016e-05, 3.804030257015256e-06, 0.0003328423190396279, 0.0008198311552405357, 9.979352762456983e-05, 0.00788949802517891, 5.917608359595761e-05, 0.024113502353429794, 3.5927005228586495e-05, 0.0006718295626342297, 2.888793642341625e-05, 0.0005891008186154068, 2.2221018298296258e-05, 0.004094129893928766, 1.7228565411642194e-05, 0.0013337050331756473, 0.00031025896896608174, 0.00048149380018003285, 8.007440192159265e-05, 0.0001588759187143296, 8.095457451418042e-05, 9.26053398870863e-05, 2.3488189981435426e-05, 0.0005311209824867547, 7.528293508585193e-07, 4.516734861681471e-06, 1.7530901459394954e-06, 0.00024461204884573817, 0.000482734089018777, 4.8115430217876565e-06, 0.0002512992359697819], "target_probs": 0.6815617084503174}}


{"result": {"time": "2021-02-11 11:56:50.350909", "n_pass": [692, 74, 74], "n_token": 145, "loss": [0.042433131486177444, 0.5414815545082092], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def __init__(", "self", ",", "request", ",", "*", "args", ",", "self", ")", ".", "__init__", "(", "request", ",", "*", "args", ",", "**", "kwargs", ")", "#NEWLINE#", "tenant_choices", "(", "tenants", ",", "has_more", ")", "=", "request", ")", "#NEWLINE#", "for", "tenant", "in", "tenants", ":", "#NEWLINE#", "#INDENT#", "if", "tenant", "#NEWLINE#", "#INDENT#", "tenant_choices", "(", "net_type", ".", "id", ",", "tenant", "#UNINDENT#", "self", ".", "=", "tenant_choices", "#NEWLINE#", "#INDENT#", "self", "self", ".", "request", "(", "request", ",", "neutron_settings", "#NEWLINE#", "seg_id_range", "=", "neutron_settings", ".", "self", ".", "seg_id_range", "=", "seg_id_range", ".", ":", "seg_id_range", ":", "seg_id_range", "#NEWLINE#", "seg_id_help", "'For VLAN networks, the VLAN VID on the physical network that realizes the virtual network. Valid VLAN VIDs are %(vlan_min)s through %(vlan_max)s. For GRE or VXLAN networks, the tunnel ID. Valid tunnel IDs for GRE networks are %(gre_min)s through %(gre_max)s. For VXLAN networks, %(vxlan_min)s through %(vxlan_max)s.'", "self", ".", "seg_id_range", "self", ".", "seg_id_range", "[", ":", "self", ".", "seg_id_range", "self", ".", "seg_id_range", "#NEWLINE#", "self", ".", "seg_id_range", "[", "self", ".", "seg_id_range", "[", "self", ".", "=", "seg_id_help", "#NEWLINE#", "supported_provider_types", "=", "neutron_settings", "(", "supported_provider_types", "network_type_choices", "=", "#INDENT#", "network_type_choices", "net_type", "for", "net_type", "in", "PROVIDER_TYPES", "if", "(", "net_type", "supported_provider_types", "(", "network_type_choices", ")", "#NEWLINE#", "#INDENT#", "self", ".", "#INDENT#", "self", "=", "network_type_choices", ":", "#NEWLINE#", "#INDENT#", "self"]}}
{"position": {"error_location": 46, "repair_targets": [34, 41, 50], "repair_candidates": [7, 17, 67, 73, 75, 78, 80, 86, 89, 94, 97, 101, 105, 46, 121, 123, 128, 25, 36, 117, 120, 131, 140, 4, 14, 30, 61, 63, 34, 41, 50, 20, 27, 23, 44, 55, 65, 69, 114, 82, 110, 2, 9, 52, 58, 59, 71, 84, 87, 92, 95, 99, 103, 107, 135, 138, 144, 112, 116, 129]}}
{"prediction": {"error_location": 0.9584546685218811, "repair_targets": [0.5629878640174866, 0.017381761223077774, 0.0015158529859036207], "repair_candidates": [0.0887671709060669, 0.029832184314727783, 0.006131449248641729, 0.05575793981552124, 0.0007615121430717409, 0.0003501367464195937, 0.0023105922155082226, 0.004726950079202652, 0.003114430233836174, 0.010627864859998226, 0.003651051316410303, 0.5629878640174866, 0.0013325456529855728, 0.017381761223077774, 0.0018054393585771322, 0.00014238151197787374, 0.0015158529859036207, 0.07027889788150787, 0.0023654503747820854, 0.0046175033785402775, 0.006056589540094137, 0.0045134457759559155, 0.029019879177212715, 0.006664056796580553, 0.003773884614929557, 0.012776420451700687, 0.009403720498085022, 0.0005298228934407234, 2.6101884941454045e-05, 9.161089838016778e-05, 1.0561776434769854e-05, 0.0007320492877624929, 0.0018292255699634552, 0.00021440244745463133, 0.009934411384165287, 0.00011661762982839718, 0.023492051288485527, 7.888306572567672e-05, 0.0012817679671570659, 7.111017475835979e-05, 0.001235723844729364, 6.155446317279711e-05, 0.006573876831680536, 3.828555782092735e-05, 0.00300757959485054, 0.000705209793522954, 0.0010734788374975324, 0.0002334839664399624, 0.00010825257777469233, 0.00020529722678475082, 0.0007535854238085449, 0.0002287987881572917, 0.0006723577971570194, 2.2790570710640168e-06, 1.7755128283170052e-05, 0.00024272029986605048, 0.0022816823329776525, 0.0024388267192989588, 0.0002500649425201118, 0.0007934786844998598], "target_probs": 0.5818855166435242}}


{"result": {"time": "2021-02-11 11:56:50.439161", "n_pass": [695, 75, 75], "n_token": 143, "loss": [0.06482608616352081, 0.576233446598053], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def __init__(", "self", ",", "request", ",", "*", "args", ",", "self", ")", ".", "__init__", "(", "request", ",", "*", "args", ",", "**", "kwargs", ")", "#NEWLINE#", "tenant_choices", "(", "tenants", ",", "has_more", ")", "=", "request", ")", "#NEWLINE#", "for", "tenant", "in", "tenants", ":", "#NEWLINE#", "#INDENT#", "if", "tenant", "#NEWLINE#", "#INDENT#", "tenant_choices", "(", "net_type", ".", "id", ",", "tenant", "#UNINDENT#", "self", ".", "=", "tenant_choices", "#NEWLINE#", "#INDENT#", "self", "self", ".", "request", "(", "request", ",", "neutron_settings", "#NEWLINE#", "seg_id_range", "=", "neutron_settings", ".", "self", ".", "seg_id_range", "=", "seg_id_range", ".", ":", "seg_id_range", ":", "seg_id_range", "#NEWLINE#", "seg_id_help", "'For VLAN networks, the VLAN VID on the physical network that realizes the virtual network. Valid VLAN VIDs are %(vlan_min)s through %(vlan_max)s. For GRE or VXLAN networks, the tunnel ID. Valid tunnel IDs for GRE networks are %(gre_min)s through %(gre_max)s. For VXLAN networks, %(vxlan_min)s through %(vxlan_max)s.'", "self", ".", "seg_id_range", "self", ".", "seg_id_range", "[", ":", "self", ".", "seg_id_range", "self", ".", "seg_id_range", "#NEWLINE#", "self", ".", "seg_id_range", "[", "self", ".", "seg_id_range", "[", "self", ".", "=", "seg_id_help", "#NEWLINE#", "supported_provider_types", "=", "neutron_settings", "(", "supported_provider_types", "network_type_choices", "=", "#INDENT#", "network_type_choices", "net_type", "for", "net_type", "in", "(", "net_type", "supported_provider_types", "(", "network_type_choices", ")", "#NEWLINE#", "#INDENT#", "self", ".", "#INDENT#", "self", "=", "network_type_choices", ":", "#NEWLINE#", "#INDENT#", "self"]}}
{"position": {"error_location": 46, "repair_targets": [34, 41, 50], "repair_candidates": [7, 17, 67, 73, 75, 78, 80, 86, 89, 94, 97, 101, 105, 46, 121, 123, 126, 25, 36, 117, 120, 129, 138, 4, 14, 30, 61, 63, 34, 41, 50, 20, 27, 23, 44, 55, 65, 69, 114, 82, 110, 2, 9, 52, 58, 59, 71, 84, 87, 92, 95, 99, 103, 107, 133, 136, 142, 112, 116, 127]}}
{"prediction": {"error_location": 0.9372304677963257, "repair_targets": [0.5389048457145691, 0.021559657528996468, 0.0015467588091269135], "repair_candidates": [0.090392105281353, 0.02933875285089016, 0.007201484404504299, 0.059739354997873306, 0.0006627880502492189, 0.00033803138649091125, 0.0027916915714740753, 0.005117618013173342, 0.003443746594712138, 0.011609343811869621, 0.0028606378473341465, 0.5389048457145691, 0.0014742035418748856, 0.021559657528996468, 0.002408189931884408, 0.00011014687333954498, 0.0015467588091269135, 0.07239239662885666, 0.0024022343568503857, 0.005585063248872757, 0.007483211811631918, 0.004720747936517, 0.028876900672912598, 0.005546609405428171, 0.004647369030863047, 0.013293233700096607, 0.010633764788508415, 0.000765147851780057, 4.250405982020311e-05, 0.00014738464960828424, 2.479180329828523e-05, 0.0004156326758675277, 0.0011004403932020068, 0.00036299991188570857, 0.011478802189230919, 0.0002015046338783577, 0.02539351023733616, 0.00012967537622898817, 0.0012857012916356325, 0.00011618859571171924, 0.0007838371675461531, 0.00010741528967628255, 0.0062330905348062515, 7.040679338388145e-05, 0.002507763681933284, 0.000709341315086931, 0.001974489539861679, 0.00017511208716314286, 0.00024117418797686696, 0.00043873090180568397, 0.0017376031028106809, 0.0011607956839725375, 0.0023506279103457928, 4.973684190190397e-05, 3.1929539545672014e-05, 0.001059215166606009, 0.0004922956577502191, 0.0026404610835015774, 0.00036221594200469553, 0.0003286290157120675], "target_probs": 0.5620112419128418}}


{"result": {"time": "2021-02-11 11:56:50.527060", "n_pass": [699, 76, 76], "n_token": 141, "loss": [0.04931575059890747, 0.5709497928619385], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def __init__(", "self", ",", "request", ",", "*", "args", ",", "self", ")", ".", "__init__", "(", "request", ",", "*", "args", ",", "**", "kwargs", ")", "#NEWLINE#", "tenant_choices", "(", "tenants", ",", "has_more", ")", "=", "request", ")", "#NEWLINE#", "for", "tenant", "in", "tenants", ":", "#NEWLINE#", "#INDENT#", "if", "tenant", "#NEWLINE#", "#INDENT#", "tenant_choices", "(", "net_type", ".", "id", ",", "tenant", "#UNINDENT#", "self", ".", "=", "tenant_choices", "#NEWLINE#", "#INDENT#", "self", "self", ".", "request", "(", "request", ",", "neutron_settings", "#NEWLINE#", "seg_id_range", "=", "neutron_settings", ".", "self", ".", "seg_id_range", "=", "seg_id_range", ".", ":", "seg_id_range", ":", "seg_id_range", "#NEWLINE#", "seg_id_help", "'For VLAN networks, the VLAN VID on the physical network that realizes the virtual network. Valid VLAN VIDs are %(vlan_min)s through %(vlan_max)s. For GRE or VXLAN networks, the tunnel ID. Valid tunnel IDs for GRE networks are %(gre_min)s through %(gre_max)s. For VXLAN networks, %(vxlan_min)s through %(vxlan_max)s.'", "self", ".", "seg_id_range", "self", ".", "seg_id_range", "[", ":", "self", ".", "seg_id_range", "self", ".", "seg_id_range", "#NEWLINE#", "self", ".", "seg_id_range", "[", "self", ".", "seg_id_range", "[", "self", ".", "=", "seg_id_help", "#NEWLINE#", "supported_provider_types", "=", "neutron_settings", "(", "supported_provider_types", "network_type_choices", "=", "#INDENT#", "network_type_choices", "net_type", "for", "net_type", "in", "(", "net_type", "supported_provider_types", "(", "network_type_choices", ")", "self", ".", "#INDENT#", "self", "=", "network_type_choices", ":", "#NEWLINE#", "#INDENT#", "self"]}}
{"position": {"error_location": 46, "repair_targets": [34, 41, 50], "repair_candidates": [7, 17, 67, 73, 75, 78, 80, 86, 89, 94, 97, 101, 105, 46, 121, 123, 126, 25, 36, 117, 120, 129, 136, 4, 14, 30, 61, 63, 34, 41, 50, 20, 27, 23, 44, 55, 65, 69, 114, 82, 110, 2, 9, 52, 58, 59, 71, 84, 87, 92, 95, 99, 103, 107, 131, 134, 140, 112, 116, 127]}}
{"prediction": {"error_location": 0.9518807530403137, "repair_targets": [0.5418041348457336, 0.02159731462597847, 0.0015871139476075768], "repair_candidates": [0.09471691399812698, 0.02893718145787716, 0.007048328407108784, 0.05479675158858299, 0.0006837050314061344, 0.00031894512358121574, 0.0027339623775333166, 0.004796745255589485, 0.0033796343486756086, 0.011679484508931637, 0.003135096514597535, 0.5418041348457336, 0.001322173047810793, 0.02159731462597847, 0.002351358300074935, 8.029176387935877e-05, 0.0015871139476075768, 0.06735093146562576, 0.002341778948903084, 0.006028163246810436, 0.007537154946476221, 0.0048241522163152695, 0.030681530013680458, 0.005373768042773008, 0.004602232947945595, 0.014330231584608555, 0.012838737107813358, 0.0007429298711940646, 3.7087553209858015e-05, 0.000160225186846219, 2.453442539263051e-05, 0.0003898094000760466, 0.0011958812829107046, 0.00037365357275120914, 0.013443968258798122, 0.0002052851632470265, 0.024167733266949654, 9.409098129253834e-05, 0.0014261981705203652, 0.00010022572678280994, 0.0007779992884024978, 9.571069676894695e-05, 0.007139323279261589, 6.544360803673044e-05, 0.002717152703553438, 0.0007666745223104954, 0.0014054165221750736, 0.00018224552331957966, 0.00024091031809803098, 0.00031969352858141065, 0.0011035065399482846, 0.0010068990522995591, 0.0014717496233060956, 3.259008008171804e-05, 2.6431875085108913e-05, 0.0006845929892733693, 0.0003091196995228529, 0.0016807245556265116, 0.0003362121933605522, 0.00039815614582039416], "target_probs": 0.5649885535240173}}


{"result": {"time": "2021-02-11 11:56:50.615789", "n_pass": [703, 77, 77], "n_token": 139, "loss": [0.04331537336111069, 0.5536435842514038], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def __init__(", "self", ",", "request", ",", "*", "args", ",", "self", ")", ".", "__init__", "(", "request", ",", "*", "args", ",", "**", "kwargs", ")", "#NEWLINE#", "tenant_choices", "(", "tenants", ",", "has_more", ")", "=", "request", ")", "#NEWLINE#", "for", "tenant", "in", "tenants", ":", "#NEWLINE#", "#INDENT#", "if", "tenant", "#NEWLINE#", "#INDENT#", "tenant_choices", "(", "net_type", ".", "id", ",", "tenant", "#UNINDENT#", "self", ".", "=", "tenant_choices", "#NEWLINE#", "#INDENT#", "self", "self", ".", "request", "(", "request", ",", "neutron_settings", "#NEWLINE#", "seg_id_range", "=", "neutron_settings", ".", "self", ".", "seg_id_range", "=", "seg_id_range", ".", ":", "seg_id_range", ":", "seg_id_range", "#NEWLINE#", "seg_id_help", "'For VLAN networks, the VLAN VID on the physical network that realizes the virtual network. Valid VLAN VIDs are %(vlan_min)s through %(vlan_max)s. For GRE or VXLAN networks, the tunnel ID. Valid tunnel IDs for GRE networks are %(gre_min)s through %(gre_max)s. For VXLAN networks, %(vxlan_min)s through %(vxlan_max)s.'", "self", ".", "seg_id_range", "self", ".", "seg_id_range", "[", ":", "self", ".", "seg_id_range", "self", ".", "seg_id_range", "#NEWLINE#", "self", ".", "seg_id_range", "[", "self", ".", "seg_id_range", "[", "self", ".", "=", "seg_id_help", "#NEWLINE#", "supported_provider_types", "=", "neutron_settings", "(", "supported_provider_types", "network_type_choices", "=", "#INDENT#", "network_type_choices", "net_type", "for", "net_type", "in", "(", "net_type", "supported_provider_types", "(", "network_type_choices", ")", "self", ".", "#INDENT#", "self", "=", "network_type_choices", "#INDENT#", "self"]}}
{"position": {"error_location": 46, "repair_targets": [34, 41, 50], "repair_candidates": [7, 17, 67, 73, 75, 78, 80, 86, 89, 94, 97, 101, 105, 46, 121, 123, 126, 25, 36, 117, 120, 129, 136, 4, 14, 30, 61, 63, 34, 41, 50, 20, 27, 23, 44, 55, 65, 69, 114, 82, 110, 2, 9, 52, 58, 59, 71, 84, 87, 92, 95, 99, 103, 107, 131, 134, 138, 112, 116, 127]}}
{"prediction": {"error_location": 0.9576094746589661, "repair_targets": [0.5509220361709595, 0.02227333001792431, 0.0016561346128582954], "repair_candidates": [0.08957529813051224, 0.02945098653435707, 0.007760869804769754, 0.050977401435375214, 0.0007226317538879812, 0.0003174819576088339, 0.0038175301160663366, 0.0046368930488824844, 0.004174950998276472, 0.013631624169647694, 0.0033932016231119633, 0.5509220361709595, 0.0011806492693722248, 0.02227333001792431, 0.0023694916162639856, 7.091141742421314e-05, 0.0016561346128582954, 0.060327641665935516, 0.002657137345522642, 0.006043344736099243, 0.0075351460836827755, 0.004941947758197784, 0.034194543957710266, 0.005342480260878801, 0.0042393202893435955, 0.01632849872112274, 0.011404264718294144, 0.0007864522631280124, 4.801763498107903e-05, 0.00017306761583313346, 2.731368840613868e-05, 0.0003692334285005927, 0.0011694042477756739, 0.0003949964593630284, 0.013090644031763077, 0.00021105004998389632, 0.022547753527760506, 9.800175757845864e-05, 0.0013207703595981002, 0.00011440532398410141, 0.0007992711034603417, 9.88914180197753e-05, 0.006798481103032827, 6.75447445246391e-05, 0.002772692823782563, 0.00074898696038872, 0.0010969539871439338, 0.00018228072440251708, 0.00023282819893211126, 0.00035515695344656706, 0.001550305518321693, 0.0010566741693764925, 0.0011785877868533134, 3.5417739127296954e-05, 2.7615209546638653e-05, 0.0009006948675960302, 0.0002959944249596447, 0.001169731141999364, 0.00017324597865808755, 0.00016175011114683002], "target_probs": 0.5748514533042908}}


{"result": {"time": "2021-02-11 11:56:50.702838", "n_pass": [705, 78, 78], "n_token": 138, "loss": [0.047418951988220215, 0.5791531801223755], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["def __init__(", "self", ",", "request", ",", "*", "args", ",", "self", ")", ".", "__init__", "(", "request", ",", "*", "args", ",", "**", "kwargs", ")", "#NEWLINE#", "tenant_choices", "(", "tenants", ",", "has_more", ")", "=", "request", ")", "#NEWLINE#", "for", "tenant", "in", "tenants", ":", "#NEWLINE#", "#INDENT#", "if", "tenant", "#NEWLINE#", "#INDENT#", "tenant_choices", "(", "net_type", ".", "id", ",", "tenant", "#UNINDENT#", "self", ".", "=", "tenant_choices", "#NEWLINE#", "#INDENT#", "self", "self", ".", "request", "(", "request", ",", "neutron_settings", "#NEWLINE#", "seg_id_range", "=", "neutron_settings", ".", "self", ".", "seg_id_range", "=", "seg_id_range", ".", ":", "seg_id_range", ":", "seg_id_range", "#NEWLINE#", "seg_id_help", "'For VLAN networks, the VLAN VID on the physical network that realizes the virtual network. Valid VLAN VIDs are %(vlan_min)s through %(vlan_max)s. For GRE or VXLAN networks, the tunnel ID. Valid tunnel IDs for GRE networks are %(gre_min)s through %(gre_max)s. For VXLAN networks, %(vxlan_min)s through %(vxlan_max)s.'", "self", ".", "seg_id_range", "self", ".", "seg_id_range", "[", ":", "self", ".", "seg_id_range", "self", ".", "seg_id_range", "#NEWLINE#", "self", ".", "seg_id_range", "[", "self", ".", "seg_id_range", "[", "self", ".", "=", "seg_id_help", "#NEWLINE#", "supported_provider_types", "=", "neutron_settings", "(", "supported_provider_types", "network_type_choices", "=", "#INDENT#", "network_type_choices", "net_type", "for", "net_type", "in", "(", "net_type", "supported_provider_types", "(", "network_type_choices", ")", "self", ".", "#INDENT#", "self", "=", "network_type_choices", "#INDENT#", "self"]}}
{"position": {"error_location": 45, "repair_targets": [33, 40, 49], "repair_candidates": [6, 16, 66, 72, 74, 77, 79, 85, 88, 93, 96, 100, 104, 45, 120, 122, 125, 24, 35, 116, 119, 128, 135, 3, 13, 29, 60, 62, 33, 40, 49, 19, 26, 22, 43, 54, 64, 68, 113, 81, 109, 1, 8, 51, 57, 58, 70, 83, 86, 91, 94, 98, 102, 106, 130, 133, 137, 111, 115, 126]}}
{"prediction": {"error_location": 0.9536877870559692, "repair_targets": [0.5308288931846619, 0.025977512821555138, 0.003566332394257188], "repair_candidates": [0.008581039495766163, 0.03278476372361183, 0.01353568583726883, 0.04977875575423241, 0.0007953169988468289, 0.0006318726227618754, 0.006607175804674625, 0.005456509068608284, 0.006618552841246128, 0.016685618087649345, 0.005492561496794224, 0.5308288931846619, 0.0021072765812277794, 0.025977512821555138, 0.003170713782310486, 7.050470594549552e-05, 0.003566332394257188, 0.058472562581300735, 0.00519355246797204, 0.009316700510680676, 0.009951040148735046, 0.008935080841183662, 0.06819676607847214, 0.005561799742281437, 0.004663619678467512, 0.019006432965397835, 0.014713313430547714, 0.0013908465625718236, 3.9367721910821274e-05, 0.00018835945229511708, 8.232723484979942e-05, 0.00048447720473632216, 0.0015529077500104904, 0.0007058607880026102, 0.018722686916589737, 0.00039321795338764787, 0.0347764827311039, 0.00015631294809281826, 0.0014398953644558787, 0.0001787282817531377, 0.0015354417264461517, 0.00012580213660839945, 0.008201519958674908, 0.00011257435835432261, 0.0036828310694545507, 0.0011608091881498694, 0.0011565660824999213, 0.0002572003868408501, 0.00028282738639973104, 0.0003772401832975447, 0.0016789640067145228, 0.001124066417105496, 0.0012756662908941507, 2.5637373255449347e-05, 2.0180312276352197e-05, 0.0006782007403671741, 0.0002552609075792134, 0.0009344760910607874, 0.0001792572729755193, 0.00012411875650286674], "target_probs": 0.5603727102279663}}


{"result": {"time": "2021-02-11 11:56:51.220808", "n_pass": [715, 84, 79], "n_token": 137, "loss": [0.0502183623611927, 0.6881652474403381], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["def __init__(", "self", ",", "request", ",", "*", "args", ",", "self", ".", "__init__", "(", "request", ",", "*", "args", ",", "**", "kwargs", ")", "#NEWLINE#", "tenant_choices", "(", "tenants", ",", "has_more", ")", "=", "request", ")", "#NEWLINE#", "for", "tenant", "in", "tenants", ":", "#NEWLINE#", "#INDENT#", "if", "tenant", "#NEWLINE#", "#INDENT#", "tenant_choices", "(", "net_type", ".", "id", ",", "tenant", "#UNINDENT#", "self", ".", "=", "tenant_choices", "#NEWLINE#", "#INDENT#", "self", "self", ".", "request", "(", "request", ",", "neutron_settings", "#NEWLINE#", "seg_id_range", "=", "neutron_settings", ".", "self", ".", "seg_id_range", "=", "seg_id_range", ".", ":", "seg_id_range", ":", "seg_id_range", "#NEWLINE#", "seg_id_help", "'For VLAN networks, the VLAN VID on the physical network that realizes the virtual network. Valid VLAN VIDs are %(vlan_min)s through %(vlan_max)s. For GRE or VXLAN networks, the tunnel ID. Valid tunnel IDs for GRE networks are %(gre_min)s through %(gre_max)s. For VXLAN networks, %(vxlan_min)s through %(vxlan_max)s.'", "self", ".", "seg_id_range", "self", ".", "seg_id_range", "[", ":", "self", ".", "seg_id_range", "self", ".", "seg_id_range", "#NEWLINE#", "self", ".", "seg_id_range", "[", "self", ".", "seg_id_range", "[", "self", ".", "=", "seg_id_help", "#NEWLINE#", "supported_provider_types", "=", "neutron_settings", "(", "supported_provider_types", "network_type_choices", "=", "#INDENT#", "network_type_choices", "net_type", "for", "net_type", "in", "(", "net_type", "supported_provider_types", "(", "network_type_choices", ")", "self", ".", "#INDENT#", "self", "=", "network_type_choices", "#INDENT#", "self"]}}
{"position": {"error_location": 44, "repair_targets": [32, 39, 48], "repair_candidates": [6, 15, 65, 71, 73, 76, 78, 84, 87, 92, 95, 99, 103, 44, 119, 121, 124, 23, 34, 115, 118, 127, 134, 3, 12, 28, 59, 61, 32, 39, 48, 18, 25, 21, 42, 53, 63, 67, 112, 80, 108, 1, 8, 50, 56, 57, 69, 82, 85, 90, 93, 97, 101, 105, 129, 132, 136, 110, 114, 125]}}
{"prediction": {"error_location": 0.9510218501091003, "repair_targets": [0.4637019634246826, 0.033258624374866486, 0.005536598619073629], "repair_candidates": [0.015008530579507351, 0.05290929973125458, 0.029249779880046844, 0.020780345425009727, 0.00145536451600492, 0.0008377812337130308, 0.011929306201636791, 0.006956222467124462, 0.010822366923093796, 0.024097895249724388, 0.008137660101056099, 0.4637019634246826, 0.003417620901018381, 0.033258624374866486, 0.006211897823959589, 0.00010079346975544468, 0.005536598619073629, 0.06161322444677353, 0.0062051089480519295, 0.012365741655230522, 0.012348785996437073, 0.010396355763077736, 0.08361779153347015, 0.007847008295357227, 0.004491300787776709, 0.0340162068605423, 0.008676379919052124, 0.0017248073127120733, 0.00013047239917796105, 0.0002626079658512026, 0.00013745835167355835, 0.0007472964935004711, 0.0017066061263903975, 0.0011616053525358438, 0.00834843423217535, 0.0005133296945132315, 0.023656759411096573, 0.0002602357999421656, 0.0010754575487226248, 0.00024838917306624353, 0.0012458889978006482, 0.00018913335225079209, 0.005719400011003017, 0.00015587624511681497, 0.0038407081738114357, 0.001745746354572475, 0.001965837785974145, 0.0003831008216366172, 0.0005543001461774111, 0.0004569925076793879, 0.0017503708368167281, 0.0015549358213320374, 0.001825592014938593, 3.153517172904685e-05, 2.7028156182495877e-05, 0.0006130074616521597, 0.00037794129457324743, 0.0012773755006492138, 0.00019079353660345078, 0.0001310656516579911], "target_probs": 0.5024971961975098}}


{"result": {"time": "2021-02-11 11:56:51.308803", "n_pass": [716, 85, 80], "n_token": 136, "loss": [0.04888684302568436, 0.583721399307251], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["def __init__(", "self", ",", "request", ",", "*", "args", ",", "self", "__init__", "(", "request", ",", "*", "args", ",", "**", "kwargs", ")", "#NEWLINE#", "tenant_choices", "(", "tenants", ",", "has_more", ")", "=", "request", ")", "#NEWLINE#", "for", "tenant", "in", "tenants", ":", "#NEWLINE#", "#INDENT#", "if", "tenant", "#NEWLINE#", "#INDENT#", "tenant_choices", "(", "net_type", ".", "id", ",", "tenant", "#UNINDENT#", "self", ".", "=", "tenant_choices", "#NEWLINE#", "#INDENT#", "self", "self", ".", "request", "(", "request", ",", "neutron_settings", "#NEWLINE#", "seg_id_range", "=", "neutron_settings", ".", "self", ".", "seg_id_range", "=", "seg_id_range", ".", ":", "seg_id_range", ":", "seg_id_range", "#NEWLINE#", "seg_id_help", "'For VLAN networks, the VLAN VID on the physical network that realizes the virtual network. Valid VLAN VIDs are %(vlan_min)s through %(vlan_max)s. For GRE or VXLAN networks, the tunnel ID. Valid tunnel IDs for GRE networks are %(gre_min)s through %(gre_max)s. For VXLAN networks, %(vxlan_min)s through %(vxlan_max)s.'", "self", ".", "seg_id_range", "self", ".", "seg_id_range", "[", ":", "self", ".", "seg_id_range", "self", ".", "seg_id_range", "#NEWLINE#", "self", ".", "seg_id_range", "[", "self", ".", "seg_id_range", "[", "self", ".", "=", "seg_id_help", "#NEWLINE#", "supported_provider_types", "=", "neutron_settings", "(", "supported_provider_types", "network_type_choices", "=", "#INDENT#", "network_type_choices", "net_type", "for", "net_type", "in", "(", "net_type", "supported_provider_types", "(", "network_type_choices", ")", "self", ".", "#INDENT#", "self", "=", "network_type_choices", "#INDENT#", "self"]}}
{"position": {"error_location": 43, "repair_targets": [31, 38, 47], "repair_candidates": [6, 14, 64, 70, 72, 75, 77, 83, 86, 91, 94, 98, 102, 43, 118, 120, 123, 22, 33, 114, 117, 126, 133, 3, 11, 27, 58, 60, 31, 38, 47, 17, 24, 20, 41, 52, 62, 66, 111, 79, 107, 1, 8, 49, 55, 56, 68, 81, 84, 89, 92, 96, 100, 104, 128, 131, 135, 109, 113, 124]}}
{"prediction": {"error_location": 0.9522889852523804, "repair_targets": [0.4976288974285126, 0.053431641310453415, 0.006758122704923153], "repair_candidates": [0.016703708097338676, 0.06925750523805618, 0.017188342288136482, 0.014699322171509266, 0.0046479711309075356, 0.0009619699558243155, 0.012802389450371265, 0.0048339939676225185, 0.0078593073412776, 0.018721099942922592, 0.007296872790902853, 0.4976288974285126, 0.0034795994870364666, 0.053431641310453415, 0.006507543381303549, 6.355258665280417e-05, 0.006758122704923153, 0.033855684101581573, 0.005145811475813389, 0.008454537019133568, 0.0060649048537015915, 0.009915695525705814, 0.06845912337303162, 0.008473088964819908, 0.003926699981093407, 0.03491300344467163, 0.005337744485586882, 0.0020942864939570427, 0.0004923947271890938, 0.0003281394892837852, 0.00017189302889164537, 0.0007528592832386494, 0.0017408827552571893, 0.0020415966864675283, 0.007908252067863941, 0.0009947291109710932, 0.026484480127692223, 0.000544398499187082, 0.0010422107297927141, 0.0004126965650357306, 0.0014684650814160705, 0.00038946577114984393, 0.005281888879835606, 0.0002492216881364584, 0.005246300250291824, 0.0028757869731634855, 0.0023121177218854427, 0.0004003323847427964, 0.0006962683983147144, 0.00046178913908079267, 0.0017233466496691108, 0.0017461087554693222, 0.0016760117141529918, 3.335719884489663e-05, 3.121532790828496e-05, 0.0007156211649999022, 0.00045021611731499434, 0.0015124547062441707, 0.00020676225540228188, 0.000126270271721296], "target_probs": 0.5578186511993408}}


{"result": {"time": "2021-02-11 11:56:51.567062", "n_pass": [720, 88, 81], "n_token": 135, "loss": [0.048191510140895844, 0.5995923280715942], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["def __init__(", "self", ",", "request", ",", "*", "args", ",", "self", "__init__", "(", "request", "*", "args", ",", "**", "kwargs", ")", "#NEWLINE#", "tenant_choices", "(", "tenants", ",", "has_more", ")", "=", "request", ")", "#NEWLINE#", "for", "tenant", "in", "tenants", ":", "#NEWLINE#", "#INDENT#", "if", "tenant", "#NEWLINE#", "#INDENT#", "tenant_choices", "(", "net_type", ".", "id", ",", "tenant", "#UNINDENT#", "self", ".", "=", "tenant_choices", "#NEWLINE#", "#INDENT#", "self", "self", ".", "request", "(", "request", ",", "neutron_settings", "#NEWLINE#", "seg_id_range", "=", "neutron_settings", ".", "self", ".", "seg_id_range", "=", "seg_id_range", ".", ":", "seg_id_range", ":", "seg_id_range", "#NEWLINE#", "seg_id_help", "'For VLAN networks, the VLAN VID on the physical network that realizes the virtual network. Valid VLAN VIDs are %(vlan_min)s through %(vlan_max)s. For GRE or VXLAN networks, the tunnel ID. Valid tunnel IDs for GRE networks are %(gre_min)s through %(gre_max)s. For VXLAN networks, %(vxlan_min)s through %(vxlan_max)s.'", "self", ".", "seg_id_range", "self", ".", "seg_id_range", "[", ":", "self", ".", "seg_id_range", "self", ".", "seg_id_range", "#NEWLINE#", "self", ".", "seg_id_range", "[", "self", ".", "seg_id_range", "[", "self", ".", "=", "seg_id_help", "#NEWLINE#", "supported_provider_types", "=", "neutron_settings", "(", "supported_provider_types", "network_type_choices", "=", "#INDENT#", "network_type_choices", "net_type", "for", "net_type", "in", "(", "net_type", "supported_provider_types", "(", "network_type_choices", ")", "self", ".", "#INDENT#", "self", "=", "network_type_choices", "#INDENT#", "self"]}}
{"position": {"error_location": 42, "repair_targets": [30, 37, 46], "repair_candidates": [6, 13, 63, 69, 71, 74, 76, 82, 85, 90, 93, 97, 101, 42, 117, 119, 122, 21, 32, 113, 116, 125, 132, 3, 11, 26, 57, 59, 30, 37, 46, 16, 23, 19, 40, 51, 61, 65, 110, 78, 106, 1, 8, 48, 54, 55, 67, 80, 83, 88, 91, 95, 99, 103, 127, 130, 134, 108, 112, 123]}}
{"prediction": {"error_location": 0.9529511332511902, "repair_targets": [0.4745681881904602, 0.06695149093866348, 0.0075157335959374905], "repair_candidates": [0.0156662967056036, 0.0588839054107666, 0.02035057358443737, 0.015930188819766045, 0.0028932492714375257, 0.0010829527163878083, 0.015308995731174946, 0.0062141697853803635, 0.007128856144845486, 0.018684256821870804, 0.005642355885356665, 0.4745681881904602, 0.003240313148126006, 0.06695149093866348, 0.00757199339568615, 6.265333649935201e-05, 0.0075157335959374905, 0.047150831669569016, 0.006030164193361998, 0.010904403403401375, 0.006087233312427998, 0.008004119619727135, 0.07290515303611755, 0.008899661712348461, 0.003248337423428893, 0.03585975244641304, 0.004007060546427965, 0.0020871872548013926, 0.00040373660158365965, 0.00018650288984645158, 0.00016635753854643553, 0.0010448488174006343, 0.0017725471407175064, 0.002126477425917983, 0.007769568357616663, 0.001105636591091752, 0.023715976625680923, 0.0006662343512289226, 0.0017106994055211544, 0.00046099507017061114, 0.0013922132784500718, 0.00045191607205197215, 0.004930435214191675, 0.0002053254283964634, 0.004897098522633314, 0.0023490015882998705, 0.0031937251333147287, 0.0004669155750889331, 0.0007493814337067306, 0.00042664885404519737, 0.0012776063522323966, 0.0014876810600981116, 0.0009926366619765759, 3.70011584891472e-05, 4.4802796764997765e-05, 0.0005243953200988472, 0.0004663561994675547, 0.0018189948750659823, 0.00017122775898315012, 0.00010699015547288582], "target_probs": 0.5490354299545288}}


{"result": {"time": "2021-02-11 11:56:51.741016", "n_pass": [723, 90, 82], "n_token": 134, "loss": [0.04933050274848938, 0.58722984790802], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["def __init__(", "self", ",", "request", ",", "*", "args", ",", "self", "__init__", "(", "request", "*", "args", "**", "kwargs", ")", "#NEWLINE#", "tenant_choices", "(", "tenants", ",", "has_more", ")", "=", "request", ")", "#NEWLINE#", "for", "tenant", "in", "tenants", ":", "#NEWLINE#", "#INDENT#", "if", "tenant", "#NEWLINE#", "#INDENT#", "tenant_choices", "(", "net_type", ".", "id", ",", "tenant", "#UNINDENT#", "self", ".", "=", "tenant_choices", "#NEWLINE#", "#INDENT#", "self", "self", ".", "request", "(", "request", ",", "neutron_settings", "#NEWLINE#", "seg_id_range", "=", "neutron_settings", ".", "self", ".", "seg_id_range", "=", "seg_id_range", ".", ":", "seg_id_range", ":", "seg_id_range", "#NEWLINE#", "seg_id_help", "'For VLAN networks, the VLAN VID on the physical network that realizes the virtual network. Valid VLAN VIDs are %(vlan_min)s through %(vlan_max)s. For GRE or VXLAN networks, the tunnel ID. Valid tunnel IDs for GRE networks are %(gre_min)s through %(gre_max)s. For VXLAN networks, %(vxlan_min)s through %(vxlan_max)s.'", "self", ".", "seg_id_range", "self", ".", "seg_id_range", "[", ":", "self", ".", "seg_id_range", "self", ".", "seg_id_range", "#NEWLINE#", "self", ".", "seg_id_range", "[", "self", ".", "seg_id_range", "[", "self", ".", "=", "seg_id_help", "#NEWLINE#", "supported_provider_types", "=", "neutron_settings", "(", "supported_provider_types", "network_type_choices", "=", "#INDENT#", "network_type_choices", "net_type", "for", "net_type", "in", "(", "net_type", "supported_provider_types", "(", "network_type_choices", ")", "self", ".", "#INDENT#", "self", "=", "network_type_choices", "#INDENT#", "self"]}}
{"position": {"error_location": 41, "repair_targets": [29, 36, 45], "repair_candidates": [6, 13, 62, 68, 70, 73, 75, 81, 84, 89, 92, 96, 100, 41, 116, 118, 121, 20, 31, 112, 115, 124, 131, 3, 11, 25, 56, 58, 29, 36, 45, 15, 22, 18, 39, 50, 60, 64, 109, 77, 105, 1, 8, 47, 53, 54, 66, 79, 82, 87, 90, 94, 98, 102, 126, 129, 133, 107, 111, 122]}}
{"prediction": {"error_location": 0.9518663883209229, "repair_targets": [0.4754951298236847, 0.07330493628978729, 0.00706494553014636], "repair_candidates": [0.014343657530844212, 0.05448685586452484, 0.02338455803692341, 0.015464389696717262, 0.002911059418693185, 0.0008193752146326005, 0.01728670299053192, 0.007424050942063332, 0.006766747683286667, 0.020097918808460236, 0.0039477264508605, 0.4754951298236847, 0.0025843146722763777, 0.07330493628978729, 0.008752535097301006, 7.18206210876815e-05, 0.00706494553014636, 0.0516713410615921, 0.006684326101094484, 0.012257292866706848, 0.005175458267331123, 0.005594972521066666, 0.06500422209501266, 0.00918396096676588, 0.002846434712409973, 0.03186508268117905, 0.00280909426510334, 0.002137224655598402, 0.0003817539836745709, 0.00013403189950622618, 0.000163253367645666, 0.0018301181262359023, 0.0019379745936021209, 0.0023219981230795383, 0.007923917844891548, 0.0012676174519583583, 0.023751486092805862, 0.0007957631605677307, 0.0022769293282181025, 0.000604352680966258, 0.0014428364811465144, 0.0005825173575431108, 0.0048419758677482605, 0.00021669158013537526, 0.004977031145244837, 0.0025147031992673874, 0.004590126220136881, 0.0005281898193061352, 0.0009245758410543203, 0.0004352791584096849, 0.0008098049438558519, 0.001344824442639947, 0.0006131867412477732, 4.7523120883852243e-05, 6.605002272408456e-05, 0.00041032733861356974, 0.00041610593325458467, 0.0021865838207304478, 0.00015014955715741962, 7.611502223880962e-05], "target_probs": 0.5558649897575378}}


{"result": {"time": "2021-02-11 11:56:51.827496", "n_pass": [724, 91, 83], "n_token": 133, "loss": [0.043724425137043, 0.5106722116470337], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["def __init__(", "self", ",", "request", ",", "*", "args", ",", "self", "__init__", "(", "request", "*", "args", "kwargs", ")", "#NEWLINE#", "tenant_choices", "(", "tenants", ",", "has_more", ")", "=", "request", ")", "#NEWLINE#", "for", "tenant", "in", "tenants", ":", "#NEWLINE#", "#INDENT#", "if", "tenant", "#NEWLINE#", "#INDENT#", "tenant_choices", "(", "net_type", ".", "id", ",", "tenant", "#UNINDENT#", "self", ".", "=", "tenant_choices", "#NEWLINE#", "#INDENT#", "self", "self", ".", "request", "(", "request", ",", "neutron_settings", "#NEWLINE#", "seg_id_range", "=", "neutron_settings", ".", "self", ".", "seg_id_range", "=", "seg_id_range", ".", ":", "seg_id_range", ":", "seg_id_range", "#NEWLINE#", "seg_id_help", "'For VLAN networks, the VLAN VID on the physical network that realizes the virtual network. Valid VLAN VIDs are %(vlan_min)s through %(vlan_max)s. For GRE or VXLAN networks, the tunnel ID. Valid tunnel IDs for GRE networks are %(gre_min)s through %(gre_max)s. For VXLAN networks, %(vxlan_min)s through %(vxlan_max)s.'", "self", ".", "seg_id_range", "self", ".", "seg_id_range", "[", ":", "self", ".", "seg_id_range", "self", ".", "seg_id_range", "#NEWLINE#", "self", ".", "seg_id_range", "[", "self", ".", "seg_id_range", "[", "self", ".", "=", "seg_id_help", "#NEWLINE#", "supported_provider_types", "=", "neutron_settings", "(", "supported_provider_types", "network_type_choices", "=", "#INDENT#", "network_type_choices", "net_type", "for", "net_type", "in", "(", "net_type", "supported_provider_types", "(", "network_type_choices", ")", "self", ".", "#INDENT#", "self", "=", "network_type_choices", "#INDENT#", "self"]}}
{"position": {"error_location": 40, "repair_targets": [28, 35, 44], "repair_candidates": [6, 13, 61, 67, 69, 72, 74, 80, 83, 88, 91, 95, 99, 40, 115, 117, 120, 19, 30, 111, 114, 123, 130, 3, 11, 24, 55, 57, 28, 35, 44, 14, 21, 17, 38, 49, 59, 63, 108, 76, 104, 1, 8, 46, 52, 53, 65, 78, 81, 86, 89, 93, 97, 101, 125, 128, 132, 106, 110, 121]}}
{"prediction": {"error_location": 0.9572176933288574, "repair_targets": [0.5115606784820557, 0.08306706696748734, 0.005464320071041584], "repair_candidates": [0.01114556472748518, 0.05687937140464783, 0.014522873796522617, 0.014918595552444458, 0.003943413961678743, 0.0008615200058557093, 0.0030301883816719055, 0.005118491128087044, 0.004630123730748892, 0.0316430926322937, 0.0031151508446782827, 0.5115606784820557, 0.0016391100361943245, 0.08306706696748734, 0.006663961336016655, 6.758437666576356e-05, 0.005464320071041584, 0.05084340646862984, 0.005200027022510767, 0.011779117397964, 0.003969683311879635, 0.004581111017614603, 0.05059186741709709, 0.01070311013609171, 0.002197481459006667, 0.024694157764315605, 0.00222505209967494, 0.0019588805735111237, 0.0004069902643095702, 0.00011303539213258773, 0.00014818599447607994, 0.001185876433737576, 0.001545329694636166, 0.002524379640817642, 0.008679731748998165, 0.0012291055172681808, 0.025424066931009293, 0.0008160706493072212, 0.002515175612643361, 0.0007560350350104272, 0.0015832304488867521, 0.0006459967116825283, 0.005419656168669462, 0.0002784143725875765, 0.005578628741204739, 0.0028684474527835846, 0.004266572650521994, 0.0003438343992456794, 0.0007595342467539012, 0.00038709695218130946, 0.0005618973518721759, 0.0012854605447500944, 0.0004739284049719572, 4.4459826312959194e-05, 6.602092616958544e-05, 0.00033424291177652776, 0.0003442694724071771, 0.0021883235312998295, 0.00014487921725958586, 6.606955139432102e-05], "target_probs": 0.6000920534133911}}


{"result": {"time": "2021-02-11 11:56:51.916383", "n_pass": [726, 92, 84], "n_token": 132, "loss": [0.039297815412282944, 0.48400676250457764], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["def __init__(", "self", ",", "request", ",", "*", "args", ",", "self", "__init__", "(", "request", "*", "args", "kwargs", "#NEWLINE#", "tenant_choices", "(", "tenants", ",", "has_more", ")", "=", "request", ")", "#NEWLINE#", "for", "tenant", "in", "tenants", ":", "#NEWLINE#", "#INDENT#", "if", "tenant", "#NEWLINE#", "#INDENT#", "tenant_choices", "(", "net_type", ".", "id", ",", "tenant", "#UNINDENT#", "self", ".", "=", "tenant_choices", "#NEWLINE#", "#INDENT#", "self", "self", ".", "request", "(", "request", ",", "neutron_settings", "#NEWLINE#", "seg_id_range", "=", "neutron_settings", ".", "self", ".", "seg_id_range", "=", "seg_id_range", ".", ":", "seg_id_range", ":", "seg_id_range", "#NEWLINE#", "seg_id_help", "'For VLAN networks, the VLAN VID on the physical network that realizes the virtual network. Valid VLAN VIDs are %(vlan_min)s through %(vlan_max)s. For GRE or VXLAN networks, the tunnel ID. Valid tunnel IDs for GRE networks are %(gre_min)s through %(gre_max)s. For VXLAN networks, %(vxlan_min)s through %(vxlan_max)s.'", "self", ".", "seg_id_range", "self", ".", "seg_id_range", "[", ":", "self", ".", "seg_id_range", "self", ".", "seg_id_range", "#NEWLINE#", "self", ".", "seg_id_range", "[", "self", ".", "seg_id_range", "[", "self", ".", "=", "seg_id_help", "#NEWLINE#", "supported_provider_types", "=", "neutron_settings", "(", "supported_provider_types", "network_type_choices", "=", "#INDENT#", "network_type_choices", "net_type", "for", "net_type", "in", "(", "net_type", "supported_provider_types", "(", "network_type_choices", ")", "self", ".", "#INDENT#", "self", "=", "network_type_choices", "#INDENT#", "self"]}}
{"position": {"error_location": 39, "repair_targets": [27, 34, 43], "repair_candidates": [6, 13, 60, 66, 68, 71, 73, 79, 82, 87, 90, 94, 98, 39, 114, 116, 119, 18, 29, 110, 113, 122, 129, 3, 11, 23, 54, 56, 27, 34, 43, 14, 20, 16, 37, 48, 58, 62, 107, 75, 103, 1, 8, 45, 51, 52, 64, 77, 80, 85, 88, 92, 96, 100, 124, 127, 131, 105, 109, 120]}}
{"prediction": {"error_location": 0.9614644646644592, "repair_targets": [0.5261816382408142, 0.08534877002239227, 0.004778619855642319], "repair_candidates": [0.007690935395658016, 0.046720217913389206, 0.018549561500549316, 0.010523323900997639, 0.002725685480982065, 0.001203761319629848, 0.005371314939111471, 0.003072162624448538, 0.004330335184931755, 0.061317283660173416, 0.0032211095094680786, 0.5261816382408142, 0.0011557883117347956, 0.08534877002239227, 0.004701451398432255, 4.7121204261202365e-05, 0.004778619855642319, 0.048287469893693924, 0.003891882486641407, 0.0066438717767596245, 0.0025785816833376884, 0.004687424749135971, 0.04462837800383568, 0.008087033405900002, 0.001827050931751728, 0.01932966336607933, 0.001818008371628821, 0.002024668036028743, 0.00037860622978769243, 9.362120908917859e-05, 0.00011923113925149664, 0.001121658249758184, 0.0012134049320593476, 0.0027559311129152775, 0.0094638392329216, 0.0012350642355158925, 0.022457348182797432, 0.0007948265410959721, 0.002712660003453493, 0.0009413897059857845, 0.0016231231857091188, 0.0007513609598390758, 0.0057283123023808, 0.00034611107548698783, 0.005043596029281616, 0.0027486567851155996, 0.003470196621492505, 0.00025816363631747663, 0.0006969078676775098, 0.00032947564614005387, 0.0005765721434727311, 0.0013167217839509249, 0.0003582162025850266, 3.974536230089143e-05, 6.120566104073077e-05, 0.00028027675580233335, 0.0003323091077618301, 0.0017712903209030628, 0.00017348345136269927, 6.354477955028415e-05], "target_probs": 0.6163090467453003}}


{"result": {"time": "2021-02-11 11:56:52.089784", "n_pass": [729, 94, 85], "n_token": 131, "loss": [0.03871230408549309, 0.48730677366256714], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["def __init__(", "self", ",", "request", ",", "*", "args", ",", "self", "__init__", "(", "request", "*", "args", "kwargs", "#NEWLINE#", "tenant_choices", "tenants", ",", "has_more", ")", "=", "request", ")", "#NEWLINE#", "for", "tenant", "in", "tenants", ":", "#NEWLINE#", "#INDENT#", "if", "tenant", "#NEWLINE#", "#INDENT#", "tenant_choices", "(", "net_type", ".", "id", ",", "tenant", "#UNINDENT#", "self", ".", "=", "tenant_choices", "#NEWLINE#", "#INDENT#", "self", "self", ".", "request", "(", "request", ",", "neutron_settings", "#NEWLINE#", "seg_id_range", "=", "neutron_settings", ".", "self", ".", "seg_id_range", "=", "seg_id_range", ".", ":", "seg_id_range", ":", "seg_id_range", "#NEWLINE#", "seg_id_help", "'For VLAN networks, the VLAN VID on the physical network that realizes the virtual network. Valid VLAN VIDs are %(vlan_min)s through %(vlan_max)s. For GRE or VXLAN networks, the tunnel ID. Valid tunnel IDs for GRE networks are %(gre_min)s through %(gre_max)s. For VXLAN networks, %(vxlan_min)s through %(vxlan_max)s.'", "self", ".", "seg_id_range", "self", ".", "seg_id_range", "[", ":", "self", ".", "seg_id_range", "self", ".", "seg_id_range", "#NEWLINE#", "self", ".", "seg_id_range", "[", "self", ".", "seg_id_range", "[", "self", ".", "=", "seg_id_help", "#NEWLINE#", "supported_provider_types", "=", "neutron_settings", "(", "supported_provider_types", "network_type_choices", "=", "#INDENT#", "network_type_choices", "net_type", "for", "net_type", "in", "(", "net_type", "supported_provider_types", "(", "network_type_choices", ")", "self", ".", "#INDENT#", "self", "=", "network_type_choices", "#INDENT#", "self"]}}
{"position": {"error_location": 38, "repair_targets": [26, 33, 42], "repair_candidates": [6, 13, 59, 65, 67, 70, 72, 78, 81, 86, 89, 93, 97, 38, 113, 115, 118, 17, 28, 109, 112, 121, 128, 3, 11, 22, 53, 55, 26, 33, 42, 14, 19, 16, 36, 47, 57, 61, 106, 74, 102, 1, 8, 44, 50, 51, 63, 76, 79, 84, 87, 91, 95, 99, 123, 126, 130, 104, 108, 119]}}
{"prediction": {"error_location": 0.9620271921157837, "repair_targets": [0.5566503405570984, 0.05571586266160011, 0.0019123728852719069], "repair_candidates": [0.006720910780131817, 0.046259645372629166, 0.016166456043720245, 0.006625602953135967, 0.00247522396966815, 0.001070251571945846, 0.002749754348769784, 0.030885664746165276, 0.01272438745945692, 0.07868948578834534, 0.001984387170523405, 0.5566503405570984, 0.00024338239745702595, 0.05571586266160011, 0.001015828805975616, 3.4046501241391525e-05, 0.0019123728852719069, 0.032530199736356735, 0.004259950947016478, 0.003530010348185897, 0.0018977338913828135, 0.004640356637537479, 0.03364375978708267, 0.0046070646494627, 0.0016106488183140755, 0.01536223292350769, 0.0015829169424250722, 0.0021043363958597183, 0.00026158898253925145, 9.503190085524693e-05, 0.00010916555038420483, 0.00139226031024009, 0.0013873152201995254, 0.0029660239815711975, 0.011540395207703114, 0.0011853119358420372, 0.023041553795337677, 0.0007842634804546833, 0.002816881751641631, 0.0010150187881663442, 0.001674781902693212, 0.0008724919171072543, 0.005494305398315191, 0.000364262901712209, 0.004898471292108297, 0.0035029654391109943, 0.003071578685194254, 0.000220555390114896, 0.0006723326514475048, 0.0002948743640445173, 0.0006855478277429938, 0.0013823850313201547, 0.0003071080718655139, 3.819993435172364e-05, 6.210083665791899e-05, 0.0002246168296551332, 0.0003869077772833407, 0.0013238100800663233, 0.0001633574574952945, 7.164113776525483e-05], "target_probs": 0.6142785549163818}}


{"result": {"time": "2021-02-11 11:56:52.177143", "n_pass": [731, 95, 86], "n_token": 130, "loss": [0.042286984622478485, 0.6492717862129211], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["def __init__(", "self", ",", "request", ",", "*", "args", ",", "self", "__init__", "(", "request", "*", "args", "kwargs", "#NEWLINE#", "tenant_choices", "tenants", "has_more", ")", "=", "request", ")", "#NEWLINE#", "for", "tenant", "in", "tenants", ":", "#NEWLINE#", "#INDENT#", "if", "tenant", "#NEWLINE#", "#INDENT#", "tenant_choices", "(", "net_type", ".", "id", ",", "tenant", "#UNINDENT#", "self", ".", "=", "tenant_choices", "#NEWLINE#", "#INDENT#", "self", "self", ".", "request", "(", "request", ",", "neutron_settings", "#NEWLINE#", "seg_id_range", "=", "neutron_settings", ".", "self", ".", "seg_id_range", "=", "seg_id_range", ".", ":", "seg_id_range", ":", "seg_id_range", "#NEWLINE#", "seg_id_help", "'For VLAN networks, the VLAN VID on the physical network that realizes the virtual network. Valid VLAN VIDs are %(vlan_min)s through %(vlan_max)s. For GRE or VXLAN networks, the tunnel ID. Valid tunnel IDs for GRE networks are %(gre_min)s through %(gre_max)s. For VXLAN networks, %(vxlan_min)s through %(vxlan_max)s.'", "self", ".", "seg_id_range", "self", ".", "seg_id_range", "[", ":", "self", ".", "seg_id_range", "self", ".", "seg_id_range", "#NEWLINE#", "self", ".", "seg_id_range", "[", "self", ".", "seg_id_range", "[", "self", ".", "=", "seg_id_help", "#NEWLINE#", "supported_provider_types", "=", "neutron_settings", "(", "supported_provider_types", "network_type_choices", "=", "#INDENT#", "network_type_choices", "net_type", "for", "net_type", "in", "(", "net_type", "supported_provider_types", "(", "network_type_choices", ")", "self", ".", "#INDENT#", "self", "=", "network_type_choices", "#INDENT#", "self"]}}
{"position": {"error_location": 37, "repair_targets": [25, 32, 41], "repair_candidates": [6, 13, 58, 64, 66, 69, 71, 77, 80, 85, 88, 92, 96, 37, 112, 114, 117, 17, 27, 108, 111, 120, 127, 3, 11, 21, 52, 54, 25, 32, 41, 14, 18, 16, 35, 46, 56, 60, 105, 73, 101, 1, 8, 43, 49, 50, 62, 75, 78, 83, 86, 90, 94, 98, 122, 125, 129, 103, 107, 118]}}
{"prediction": {"error_location": 0.9585946202278137, "repair_targets": [0.4776339530944824, 0.04261862859129906, 0.0021734796464443207], "repair_candidates": [0.006618799176067114, 0.05586543306708336, 0.01748768799006939, 0.006652798503637314, 0.0031179492361843586, 0.0011757476022467017, 0.0028201292734593153, 0.02729417383670807, 0.012510011903941631, 0.1309618353843689, 0.004882980603724718, 0.4776339530944824, 0.0002515735977794975, 0.04261862859129906, 0.0016579650109633803, 3.8140409742482007e-05, 0.0021734796464443207, 0.036094218492507935, 0.005589684471487999, 0.0029524529818445444, 0.0021709438879042864, 0.007680303417146206, 0.04710490629076958, 0.00401387270539999, 0.0016787807689979672, 0.014987606555223465, 0.0016977624036371708, 0.0026582912541925907, 0.00021073392417747527, 0.0001111768651753664, 0.00014602193550672382, 0.0010719250421971083, 0.0017093917122110724, 0.0037792439106851816, 0.01436206791549921, 0.0012486983323469758, 0.025174004957079887, 0.0009552468545734882, 0.0027009875047951937, 0.0011340082855895162, 0.0016240350669249892, 0.0012023660819977522, 0.004762493539601564, 0.0003898827126249671, 0.004526194185018539, 0.00463898153975606, 0.003519919468089938, 0.0002617915451992303, 0.0007168562151491642, 0.00034169136779382825, 0.0009481236338615417, 0.0015019745333120227, 0.0003312475164420903, 4.241613714839332e-05, 5.8334153436589986e-05, 0.00020978486281819642, 0.0005556154064834118, 0.0011249930830672383, 0.00015627860557287931, 9.335516369901597e-05], "target_probs": 0.5224260687828064}}


{"result": {"time": "2021-02-11 11:56:52.264363", "n_pass": [733, 96, 87], "n_token": 129, "loss": [0.030740447342395782, 0.5955278873443604], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["def __init__(", "self", ",", "request", ",", "*", "args", ",", "self", "__init__", "(", "request", "*", "args", "kwargs", "#NEWLINE#", "tenant_choices", "tenants", "has_more", "=", "request", ")", "#NEWLINE#", "for", "tenant", "in", "tenants", ":", "#NEWLINE#", "#INDENT#", "if", "tenant", "#NEWLINE#", "#INDENT#", "tenant_choices", "(", "net_type", ".", "id", ",", "tenant", "#UNINDENT#", "self", ".", "=", "tenant_choices", "#NEWLINE#", "#INDENT#", "self", "self", ".", "request", "(", "request", ",", "neutron_settings", "#NEWLINE#", "seg_id_range", "=", "neutron_settings", ".", "self", ".", "seg_id_range", "=", "seg_id_range", ".", ":", "seg_id_range", ":", "seg_id_range", "#NEWLINE#", "seg_id_help", "'For VLAN networks, the VLAN VID on the physical network that realizes the virtual network. Valid VLAN VIDs are %(vlan_min)s through %(vlan_max)s. For GRE or VXLAN networks, the tunnel ID. Valid tunnel IDs for GRE networks are %(gre_min)s through %(gre_max)s. For VXLAN networks, %(vxlan_min)s through %(vxlan_max)s.'", "self", ".", "seg_id_range", "self", ".", "seg_id_range", "[", ":", "self", ".", "seg_id_range", "self", ".", "seg_id_range", "#NEWLINE#", "self", ".", "seg_id_range", "[", "self", ".", "seg_id_range", "[", "self", ".", "=", "seg_id_help", "#NEWLINE#", "supported_provider_types", "=", "neutron_settings", "(", "supported_provider_types", "network_type_choices", "=", "#INDENT#", "network_type_choices", "net_type", "for", "net_type", "in", "(", "net_type", "supported_provider_types", "(", "network_type_choices", ")", "self", ".", "#INDENT#", "self", "=", "network_type_choices", "#INDENT#", "self"]}}
{"position": {"error_location": 36, "repair_targets": [24, 31, 40], "repair_candidates": [6, 13, 57, 63, 65, 68, 70, 76, 79, 84, 87, 91, 95, 36, 111, 113, 116, 17, 26, 107, 110, 119, 126, 3, 11, 20, 51, 53, 24, 31, 40, 14, 18, 16, 34, 45, 55, 59, 104, 72, 100, 1, 8, 42, 48, 49, 61, 74, 77, 82, 85, 89, 93, 97, 121, 124, 128, 102, 106, 117]}}
{"prediction": {"error_location": 0.9697270393371582, "repair_targets": [0.48971766233444214, 0.05833938717842102, 0.0032144258730113506], "repair_candidates": [0.007081779185682535, 0.05640451982617378, 0.017249297350645065, 0.01069521252065897, 0.0028982851654291153, 0.0008127248729579151, 0.0017537804087623954, 0.0577550083398819, 0.0078775305300951, 0.05977631360292435, 0.006126688793301582, 0.48971766233444214, 4.88122932438273e-05, 0.05833938717842102, 0.0017765869852155447, 2.559334461693652e-05, 0.0032144258730113506, 0.04150109738111496, 0.00577907869592309, 0.002436351031064987, 0.0019285203889012337, 0.010545392520725727, 0.053151071071624756, 0.0038027784321457148, 0.0009787806775420904, 0.016209136694669724, 0.0016088637057691813, 0.0021820697002112865, 0.0001619759714230895, 0.00010799293522723019, 0.00011700351751642302, 0.0008439954253844917, 0.0014399345964193344, 0.0034455987624824047, 0.01863257586956024, 0.0008121940772980452, 0.028927763924002647, 0.0007713922532275319, 0.0025822999887168407, 0.0007696581305935979, 0.0010037898318842053, 0.0009086687350645661, 0.003447046736255288, 0.0002236736472696066, 0.004244426265358925, 0.004115469753742218, 0.0013634158531203866, 0.00020996890089008957, 0.0004155289789196104, 0.0002505939919501543, 0.0008133497321978211, 0.0009556537261232734, 0.0002382421080255881, 2.8056003429810517e-05, 2.1771371393697336e-05, 0.00013169470184948295, 0.0004763890174217522, 0.0007312468951568007, 6.984481296967715e-05, 6.202062650118023e-05], "target_probs": 0.5512714982032776}}


{"result": {"time": "2021-02-11 11:56:52.780437", "n_pass": [747, 102, 88], "n_token": 127, "loss": [0.08660437911748886, 0.6815888285636902], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["def __init__(", "self", ",", "request", ",", "*", "args", ",", "self", "__init__", "(", "request", "*", "args", "kwargs", "#NEWLINE#", "tenant_choices", "tenants", "has_more", "=", "request", ")", "#NEWLINE#", "for", "tenant", "in", "tenants", ":", "#NEWLINE#", "#INDENT#", "if", "tenant", "#NEWLINE#", "#INDENT#", "tenant_choices", "(", "net_type", ".", "id", ",", "tenant", "#UNINDENT#", "self", "tenant_choices", "#NEWLINE#", "#INDENT#", "self", "self", ".", "request", "(", "request", ",", "neutron_settings", "#NEWLINE#", "seg_id_range", "=", "neutron_settings", ".", "self", ".", "seg_id_range", "=", "seg_id_range", ".", ":", "seg_id_range", ":", "seg_id_range", "#NEWLINE#", "seg_id_help", "'For VLAN networks, the VLAN VID on the physical network that realizes the virtual network. Valid VLAN VIDs are %(vlan_min)s through %(vlan_max)s. For GRE or VXLAN networks, the tunnel ID. Valid tunnel IDs for GRE networks are %(gre_min)s through %(gre_max)s. For VXLAN networks, %(vxlan_min)s through %(vxlan_max)s.'", "self", ".", "seg_id_range", "self", ".", "seg_id_range", "[", ":", "self", ".", "seg_id_range", "self", ".", "seg_id_range", "#NEWLINE#", "self", ".", "seg_id_range", "[", "self", ".", "seg_id_range", "[", "self", ".", "=", "seg_id_help", "#NEWLINE#", "supported_provider_types", "=", "neutron_settings", "(", "supported_provider_types", "network_type_choices", "=", "#INDENT#", "network_type_choices", "net_type", "for", "net_type", "in", "(", "net_type", "supported_provider_types", "(", "network_type_choices", ")", "self", ".", "#INDENT#", "self", "=", "network_type_choices", "#INDENT#", "self"]}}
{"position": {"error_location": 36, "repair_targets": [24, 31, 40], "repair_candidates": [6, 13, 55, 61, 63, 66, 68, 74, 77, 82, 85, 89, 93, 36, 109, 111, 114, 17, 26, 105, 108, 117, 124, 3, 11, 20, 49, 51, 24, 31, 40, 14, 18, 16, 34, 43, 53, 57, 102, 70, 98, 1, 8, 42, 46, 47, 59, 72, 75, 80, 83, 87, 91, 95, 119, 122, 126, 100, 104, 115]}}
{"prediction": {"error_location": 0.9170401096343994, "repair_targets": [0.44872722029685974, 0.05509434640407562, 0.0019911674316972494], "repair_candidates": [0.008381225168704987, 0.05027966573834419, 0.023431509733200073, 0.011742948554456234, 0.004240782465785742, 0.0007421208429150283, 0.002695002593100071, 0.05346059799194336, 0.009700005874037743, 0.07702212780714035, 0.004667595494538546, 0.44872722029685974, 4.3486899812705815e-05, 0.05509434640407562, 0.0017104432918131351, 0.00010390253737568855, 0.0019911674316972494, 0.03054318018257618, 0.016644764691591263, 0.00483124703168869, 0.0024123890325427055, 0.016932088881731033, 0.05499620735645294, 0.00465026730671525, 0.0019040030892938375, 0.016033923253417015, 0.001292145112529397, 0.0046540070325136185, 0.00016275039524771273, 0.00012330593017395586, 0.0001311972737312317, 0.0007219284889288247, 0.00232624146156013, 0.004811649676412344, 0.019863367080688477, 0.001238684169948101, 0.03013468161225319, 0.0009264380787499249, 0.00287800095975399, 0.0012303662952035666, 0.0011265728389844298, 0.0020176495891064405, 0.0027719384524971247, 0.00035346054937690496, 0.005575168877840042, 0.006491993088275194, 0.0014857054920867085, 0.0003311455948278308, 0.00048245361540466547, 0.0004953891038894653, 0.001344815012998879, 0.0013886754168197513, 0.000524865637999028, 6.356980884447694e-05, 1.5608100511599332e-05, 0.0003227109555155039, 0.0006466920603998005, 0.0009622684447094798, 5.5738586524967104e-05, 6.662591476924717e-05], "target_probs": 0.5058127045631409}}


{"result": {"time": "2021-02-11 11:56:53.048598", "n_pass": [794, 105, 89], "n_token": 126, "loss": [0.06178316846489906, 0.6726017594337463], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["def __init__(", "self", ",", "request", "*", "args", ",", "self", "__init__", "(", "request", "*", "args", "kwargs", "#NEWLINE#", "tenant_choices", "tenants", "has_more", "=", "request", ")", "#NEWLINE#", "for", "tenant", "in", "tenants", ":", "#NEWLINE#", "#INDENT#", "if", "tenant", "#NEWLINE#", "#INDENT#", "tenant_choices", "(", "net_type", ".", "id", ",", "tenant", "#UNINDENT#", "self", "tenant_choices", "#NEWLINE#", "#INDENT#", "self", "self", ".", "request", "(", "request", ",", "neutron_settings", "#NEWLINE#", "seg_id_range", "=", "neutron_settings", ".", "self", ".", "seg_id_range", "=", "seg_id_range", ".", ":", "seg_id_range", ":", "seg_id_range", "#NEWLINE#", "seg_id_help", "'For VLAN networks, the VLAN VID on the physical network that realizes the virtual network. Valid VLAN VIDs are %(vlan_min)s through %(vlan_max)s. For GRE or VXLAN networks, the tunnel ID. Valid tunnel IDs for GRE networks are %(gre_min)s through %(gre_max)s. For VXLAN networks, %(vxlan_min)s through %(vxlan_max)s.'", "self", ".", "seg_id_range", "self", ".", "seg_id_range", "[", ":", "self", ".", "seg_id_range", "self", ".", "seg_id_range", "#NEWLINE#", "self", ".", "seg_id_range", "[", "self", ".", "seg_id_range", "[", "self", ".", "=", "seg_id_help", "#NEWLINE#", "supported_provider_types", "=", "neutron_settings", "(", "supported_provider_types", "network_type_choices", "=", "#INDENT#", "network_type_choices", "net_type", "for", "net_type", "in", "(", "net_type", "supported_provider_types", "(", "network_type_choices", ")", "self", ".", "#INDENT#", "self", "=", "network_type_choices", "#INDENT#", "self"]}}
{"position": {"error_location": 35, "repair_targets": [23, 30, 39], "repair_candidates": [5, 12, 54, 60, 62, 65, 67, 73, 76, 81, 84, 88, 92, 35, 108, 110, 113, 16, 25, 104, 107, 116, 123, 3, 10, 19, 48, 50, 23, 30, 39, 13, 17, 15, 33, 42, 52, 56, 101, 69, 97, 1, 7, 41, 45, 46, 58, 71, 74, 79, 82, 86, 90, 94, 118, 121, 125, 99, 103, 114]}}
{"prediction": {"error_location": 0.9400866031646729, "repair_targets": [0.44307032227516174, 0.06445502489805222, 0.0028536550235003233], "repair_candidates": [0.006728591397404671, 0.04202091321349144, 0.014108468778431416, 0.03424253687262535, 0.0024133934639394283, 0.0008275416912510991, 0.0033135225530713797, 0.04298541694879532, 0.008545910939574242, 0.08822624385356903, 0.004398093558847904, 0.44307032227516174, 5.4319712944561616e-05, 0.06445502489805222, 0.0011747059179469943, 6.355719233397394e-05, 0.0028536550235003233, 0.03675583750009537, 0.014879323542118073, 0.005999777000397444, 0.004449306521564722, 0.013253486715257168, 0.06311051547527313, 0.004851726349443197, 0.001719703315757215, 0.019796285778284073, 0.0018291297601535916, 0.003796533215790987, 8.730442641535774e-05, 8.845485717756674e-05, 0.00011323900253046304, 0.0007040848722681403, 0.0020366699900478125, 0.0044707562774419785, 0.017598148435354233, 0.0009116959990933537, 0.022684790194034576, 0.0006277633947320282, 0.0021923291496932507, 0.0008710696129128337, 0.0008207086939364672, 0.001073148800060153, 0.0016338054556399584, 0.00026050370070151985, 0.0034317434765398502, 0.005104875657707453, 0.0008327855030074716, 0.00028782602748833597, 0.00033801599056459963, 0.00043028598884120584, 0.0006684364634566009, 0.0009149875259026885, 0.00031438274891115725, 4.8804104153532535e-05, 1.0850699254660867e-05, 0.0002915058867074549, 0.00042086272151209414, 0.0007439960027113557, 3.250170630053617e-05, 2.980394674523268e-05], "target_probs": 0.5103789567947388}}


{"result": {"time": "2021-02-11 11:56:53.135665", "n_pass": [795, 106, 90], "n_token": 125, "loss": [0.08933953195810318, 0.6278051733970642], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["def __init__(", "self", ",", "request", "args", ",", "self", "__init__", "(", "request", "*", "args", "kwargs", "#NEWLINE#", "tenant_choices", "tenants", "has_more", "=", "request", ")", "#NEWLINE#", "for", "tenant", "in", "tenants", ":", "#NEWLINE#", "#INDENT#", "if", "tenant", "#NEWLINE#", "#INDENT#", "tenant_choices", "(", "net_type", ".", "id", ",", "tenant", "#UNINDENT#", "self", "tenant_choices", "#NEWLINE#", "#INDENT#", "self", "self", ".", "request", "(", "request", ",", "neutron_settings", "#NEWLINE#", "seg_id_range", "=", "neutron_settings", ".", "self", ".", "seg_id_range", "=", "seg_id_range", ".", ":", "seg_id_range", ":", "seg_id_range", "#NEWLINE#", "seg_id_help", "'For VLAN networks, the VLAN VID on the physical network that realizes the virtual network. Valid VLAN VIDs are %(vlan_min)s through %(vlan_max)s. For GRE or VXLAN networks, the tunnel ID. Valid tunnel IDs for GRE networks are %(gre_min)s through %(gre_max)s. For VXLAN networks, %(vxlan_min)s through %(vxlan_max)s.'", "self", ".", "seg_id_range", "self", ".", "seg_id_range", "[", ":", "self", ".", "seg_id_range", "self", ".", "seg_id_range", "#NEWLINE#", "self", ".", "seg_id_range", "[", "self", ".", "seg_id_range", "[", "self", ".", "=", "seg_id_help", "#NEWLINE#", "supported_provider_types", "=", "neutron_settings", "(", "supported_provider_types", "network_type_choices", "=", "#INDENT#", "network_type_choices", "net_type", "for", "net_type", "in", "(", "net_type", "supported_provider_types", "(", "network_type_choices", ")", "self", ".", "#INDENT#", "self", "=", "network_type_choices", "#INDENT#", "self"]}}
{"position": {"error_location": 34, "repair_targets": [22, 29, 38], "repair_candidates": [4, 11, 53, 59, 61, 64, 66, 72, 75, 80, 83, 87, 91, 34, 107, 109, 112, 15, 24, 103, 106, 115, 122, 3, 9, 18, 47, 49, 22, 29, 38, 12, 16, 14, 32, 41, 51, 55, 100, 68, 96, 1, 6, 40, 44, 45, 57, 70, 73, 78, 81, 85, 89, 93, 117, 120, 124, 98, 102, 113]}}
{"prediction": {"error_location": 0.9145349264144897, "repair_targets": [0.4676095247268677, 0.06412339210510254, 0.0020291439723223448], "repair_candidates": [0.005979601759463549, 0.041121046990156174, 0.030667142942547798, 0.007737279403954744, 0.0036754566244781017, 0.0033733590971678495, 0.0055318125523626804, 0.044614650309085846, 0.007935881614685059, 0.10684084892272949, 0.0044799563474953175, 0.4676095247268677, 2.4683622541488148e-05, 0.06412339210510254, 0.0010049177799373865, 0.00011195521801710129, 0.0020291439723223448, 0.01775040477514267, 0.017189189791679382, 0.0015959760639816523, 0.0016987407580018044, 0.01305234245955944, 0.05095647647976875, 0.0030492593068629503, 0.0025530902203172445, 0.013931035064160824, 0.0010907946852967143, 0.005658498965203762, 2.9794186048093252e-05, 8.058535604504868e-05, 0.00011907800944754854, 0.0007211558986455202, 0.001853530528023839, 0.002087279921397567, 0.02047223225235939, 0.0007036126917228103, 0.027010105550289154, 0.0004088834102731198, 0.0016385624185204506, 0.0007127065327949822, 0.0008606815827079117, 0.0013253408251330256, 0.0018660807982087135, 0.0003417376719880849, 0.003985709045082331, 0.003719931934028864, 0.0012247302802279592, 0.00036739613278768957, 0.00036714746966026723, 0.0006810475024394691, 0.0007656604866497219, 0.0010649514151737094, 0.0003829841734841466, 0.0001107522621168755, 1.2471945410652552e-05, 0.00036324121174402535, 0.0003594382433220744, 0.000888512993697077, 5.1203682232880965e-05, 3.696661951835267e-05], "target_probs": 0.5337620377540588}}


{"result": {"time": "2021-02-11 11:56:53.223951", "n_pass": [797, 107, 91], "n_token": 124, "loss": [0.09398718923330307, 0.6728135347366333], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["def __init__(", "self", ",", "request", "args", "self", "__init__", "(", "request", "*", "args", "kwargs", "#NEWLINE#", "tenant_choices", "tenants", "has_more", "=", "request", ")", "#NEWLINE#", "for", "tenant", "in", "tenants", ":", "#NEWLINE#", "#INDENT#", "if", "tenant", "#NEWLINE#", "#INDENT#", "tenant_choices", "(", "net_type", ".", "id", ",", "tenant", "#UNINDENT#", "self", "tenant_choices", "#NEWLINE#", "#INDENT#", "self", "self", ".", "request", "(", "request", ",", "neutron_settings", "#NEWLINE#", "seg_id_range", "=", "neutron_settings", ".", "self", ".", "seg_id_range", "=", "seg_id_range", ".", ":", "seg_id_range", ":", "seg_id_range", "#NEWLINE#", "seg_id_help", "'For VLAN networks, the VLAN VID on the physical network that realizes the virtual network. Valid VLAN VIDs are %(vlan_min)s through %(vlan_max)s. For GRE or VXLAN networks, the tunnel ID. Valid tunnel IDs for GRE networks are %(gre_min)s through %(gre_max)s. For VXLAN networks, %(vxlan_min)s through %(vxlan_max)s.'", "self", ".", "seg_id_range", "self", ".", "seg_id_range", "[", ":", "self", ".", "seg_id_range", "self", ".", "seg_id_range", "#NEWLINE#", "self", ".", "seg_id_range", "[", "self", ".", "seg_id_range", "[", "self", ".", "=", "seg_id_help", "#NEWLINE#", "supported_provider_types", "=", "neutron_settings", "(", "supported_provider_types", "network_type_choices", "=", "#INDENT#", "network_type_choices", "net_type", "for", "net_type", "in", "(", "net_type", "supported_provider_types", "(", "network_type_choices", ")", "self", ".", "#INDENT#", "self", "=", "network_type_choices", "#INDENT#", "self"]}}
{"position": {"error_location": 33, "repair_targets": [21, 28, 37], "repair_candidates": [4, 10, 52, 58, 60, 63, 65, 71, 74, 79, 82, 86, 90, 33, 106, 108, 111, 14, 23, 102, 105, 114, 121, 3, 8, 17, 46, 48, 21, 28, 37, 11, 15, 13, 31, 40, 50, 54, 99, 67, 95, 1, 5, 39, 43, 44, 56, 69, 72, 77, 80, 84, 88, 92, 116, 119, 123, 97, 101, 112]}}
{"prediction": {"error_location": 0.9102944135665894, "repair_targets": [0.45593392848968506, 0.05227907374501228, 0.0020579262636601925], "repair_candidates": [0.007110806182026863, 0.04739982634782791, 0.024714956060051918, 0.017011327669024467, 0.005508672446012497, 0.0020910438615828753, 0.009238443337380886, 0.042897894978523254, 0.0075609805062413216, 0.07476742565631866, 0.0053702471777796745, 0.45593392848968506, 2.2976881155045703e-05, 0.05227907374501228, 0.0011219754815101624, 0.00015381767298094928, 0.0020579262636601925, 0.01490485668182373, 0.022459901869297028, 0.002088534412905574, 0.0024444307200610638, 0.011418184265494347, 0.055020544677972794, 0.0037927122320979834, 0.0037908751983195543, 0.013990579172968864, 0.0010300201829522848, 0.0048226467333734035, 2.3310753022087738e-05, 8.425499254371971e-05, 0.00016396182763855904, 0.0010560626396909356, 0.0013892671559005976, 0.0017898862715810537, 0.04192028567194939, 0.000557584804482758, 0.04024896025657654, 0.0003932617255486548, 0.0019196036737412214, 0.000634993426501751, 0.0008130617788992822, 0.001085642958059907, 0.0020669130608439445, 0.000339799647917971, 0.003809252055361867, 0.003546933177858591, 0.0013908327091485262, 0.00040333933429792523, 0.00041926177800633013, 0.0006317317602224648, 0.0006269848090596497, 0.0014287795638665557, 0.0004054581804666668, 0.00012098553997930139, 1.6783638784545474e-05, 0.0002728068793658167, 0.00040411707595922053, 0.0009645388927310705, 3.322995689813979e-05, 3.361909693921916e-05], "target_probs": 0.510270893573761}}


{"result": {"time": "2021-02-11 11:56:54.352274", "n_pass": [976, 120, 92], "n_token": 123, "loss": [0.14606189727783203, 0.4811497926712036], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["def __init__(", "self", ",", "request", "args", "self", "__init__", "(", "request", "*", "args", "kwargs", "#NEWLINE#", "tenant_choices", "tenants", "has_more", "=", "request", ")", "for", "tenant", "in", "tenants", ":", "#NEWLINE#", "#INDENT#", "if", "tenant", "#NEWLINE#", "#INDENT#", "tenant_choices", "(", "net_type", ".", "id", ",", "tenant", "#UNINDENT#", "self", "tenant_choices", "#NEWLINE#", "#INDENT#", "self", "self", ".", "request", "(", "request", ",", "neutron_settings", "#NEWLINE#", "seg_id_range", "=", "neutron_settings", ".", "self", ".", "seg_id_range", "=", "seg_id_range", ".", ":", "seg_id_range", ":", "seg_id_range", "#NEWLINE#", "seg_id_help", "'For VLAN networks, the VLAN VID on the physical network that realizes the virtual network. Valid VLAN VIDs are %(vlan_min)s through %(vlan_max)s. For GRE or VXLAN networks, the tunnel ID. Valid tunnel IDs for GRE networks are %(gre_min)s through %(gre_max)s. For VXLAN networks, %(vxlan_min)s through %(vxlan_max)s.'", "self", ".", "seg_id_range", "self", ".", "seg_id_range", "[", ":", "self", ".", "seg_id_range", "self", ".", "seg_id_range", "#NEWLINE#", "self", ".", "seg_id_range", "[", "self", ".", "seg_id_range", "[", "self", ".", "=", "seg_id_help", "#NEWLINE#", "supported_provider_types", "=", "neutron_settings", "(", "supported_provider_types", "network_type_choices", "=", "#INDENT#", "network_type_choices", "net_type", "for", "net_type", "in", "(", "net_type", "supported_provider_types", "(", "network_type_choices", ")", "self", ".", "#INDENT#", "self", "=", "network_type_choices", "#INDENT#", "self"]}}
{"position": {"error_location": 32, "repair_targets": [20, 27, 36], "repair_candidates": [4, 10, 51, 57, 59, 62, 64, 70, 73, 78, 81, 85, 89, 32, 105, 107, 110, 14, 22, 101, 104, 113, 120, 3, 8, 17, 45, 47, 20, 27, 36, 11, 15, 13, 30, 39, 49, 53, 98, 66, 94, 1, 5, 38, 42, 43, 55, 68, 71, 76, 79, 83, 87, 91, 115, 118, 122, 96, 100, 111]}}
{"prediction": {"error_location": 0.8641042113304138, "repair_targets": [0.5989185571670532, 0.017850251868367195, 0.001303472206927836], "repair_candidates": [0.00617449264973402, 0.03953642398118973, 0.042011816054582596, 0.018081944435834885, 0.004250511527061462, 0.0012394663644954562, 0.024384062737226486, 0.034544143825769424, 0.010676193982362747, 0.04919587820768356, 0.0032199432607740164, 0.5989185571670532, 1.3165567906980868e-05, 0.017850251868367195, 0.0010312296217307448, 0.00011170654761372134, 0.001303472206927836, 0.012367385439574718, 0.018154622986912727, 0.0020556796807795763, 0.002670283429324627, 0.008305649273097515, 0.023824498057365417, 0.0035405426751822233, 0.004164350219070911, 0.007240078877657652, 0.001123175723478198, 0.003429009346291423, 3.2017891498981044e-05, 0.00015825139416847378, 0.00019718044495675713, 0.0011030477471649647, 0.0008975175442174077, 0.0012710497248917818, 0.020159756764769554, 0.000489044759888202, 0.019098734483122826, 0.00044403274659998715, 0.0015328152803704143, 0.0006680587539449334, 0.0007320425938814878, 0.001174737699329853, 0.00156637211330235, 0.00039117835694923997, 0.0017466836143285036, 0.001564399222843349, 0.001179813058115542, 0.0005005008424632251, 0.0005401847884058952, 0.0006636049365624785, 0.0005234689451754093, 0.0017494302010163665, 0.00039491659845225513, 0.0001500041107647121, 2.0931231119902804e-05, 0.00018411219934932888, 0.00033638940658420324, 0.0010483410442247987, 3.5619723348645493e-05, 2.7208368919673376e-05], "target_probs": 0.6180723309516907}}


{"result": {"time": "2021-02-11 11:56:54.696955", "n_pass": [982, 124, 93], "n_token": 122, "loss": [0.22013753652572632, 0.6705869436264038], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["def __init__(", "self", ",", "request", "args", "self", "__init__", "(", "request", "*", "args", "kwargs", "#NEWLINE#", "tenant_choices", "tenants", "has_more", "=", "request", ")", "for", "tenant", "in", "tenants", ":", "#INDENT#", "if", "tenant", "#NEWLINE#", "#INDENT#", "tenant_choices", "(", "net_type", ".", "id", ",", "tenant", "#UNINDENT#", "self", "tenant_choices", "#NEWLINE#", "#INDENT#", "self", "self", ".", "request", "(", "request", ",", "neutron_settings", "#NEWLINE#", "seg_id_range", "=", "neutron_settings", ".", "self", ".", "seg_id_range", "=", "seg_id_range", ".", ":", "seg_id_range", ":", "seg_id_range", "#NEWLINE#", "seg_id_help", "'For VLAN networks, the VLAN VID on the physical network that realizes the virtual network. Valid VLAN VIDs are %(vlan_min)s through %(vlan_max)s. For GRE or VXLAN networks, the tunnel ID. Valid tunnel IDs for GRE networks are %(gre_min)s through %(gre_max)s. For VXLAN networks, %(vxlan_min)s through %(vxlan_max)s.'", "self", ".", "seg_id_range", "self", ".", "seg_id_range", "[", ":", "self", ".", "seg_id_range", "self", ".", "seg_id_range", "#NEWLINE#", "self", ".", "seg_id_range", "[", "self", ".", "seg_id_range", "[", "self", ".", "=", "seg_id_help", "#NEWLINE#", "supported_provider_types", "=", "neutron_settings", "(", "supported_provider_types", "network_type_choices", "=", "#INDENT#", "network_type_choices", "net_type", "for", "net_type", "in", "(", "net_type", "supported_provider_types", "(", "network_type_choices", ")", "self", ".", "#INDENT#", "self", "=", "network_type_choices", "#INDENT#", "self"]}}
{"position": {"error_location": 31, "repair_targets": [20, 26, 35], "repair_candidates": [4, 10, 50, 56, 58, 61, 63, 69, 72, 77, 80, 84, 88, 31, 104, 106, 109, 14, 22, 100, 103, 112, 119, 3, 8, 17, 44, 46, 20, 26, 35, 11, 15, 13, 29, 38, 48, 52, 97, 65, 93, 1, 5, 37, 41, 42, 54, 67, 70, 75, 78, 82, 86, 90, 114, 117, 121, 95, 99, 110]}}
{"prediction": {"error_location": 0.8024085760116577, "repair_targets": [0.5011545419692993, 0.008937875740230083, 0.0013159147929400206], "repair_candidates": [0.00828351266682148, 0.048036858439445496, 0.0574062280356884, 0.02706967294216156, 0.004792285151779652, 0.0013475815067067742, 0.03913028910756111, 0.03999294713139534, 0.01425587572157383, 0.07267321646213531, 0.003363039344549179, 0.5011545419692993, 1.528517714177724e-05, 0.008937875740230083, 0.0011640783632174134, 0.0001603562559466809, 0.0013159147929400206, 0.014329466037452221, 0.01980842649936676, 0.0027245113160461187, 0.0037105316296219826, 0.008197402581572533, 0.023120224475860596, 0.0035574438516050577, 0.007984773255884647, 0.00808688160032034, 0.001761335413902998, 0.0038476954214274883, 5.147665797267109e-05, 0.0002540329296607524, 0.0002950638299807906, 0.001709340838715434, 0.0011341293575242162, 0.0016367791686207056, 0.021649779751896858, 0.0005438203224912286, 0.022066978737711906, 0.0006171289714984596, 0.002222105162218213, 0.0008372184820473194, 0.0009973545093089342, 0.0017651821253821254, 0.002400939352810383, 0.0005799630307592452, 0.0021385650616139174, 0.0017198574496433139, 0.001597752096131444, 0.0007856303709559143, 0.0007307546911761165, 0.000987252569757402, 0.0007861139019951224, 0.002799378242343664, 0.0007331698434427381, 0.00021850982739124447, 3.37485944328364e-05, 0.00030839754617772996, 0.00045456571388058364, 0.0016349359648302197, 5.322783545125276e-05, 2.8586990083567798e-05], "target_probs": 0.5114083290100098}}


{"result": {"time": "2021-02-11 11:56:54.954152", "n_pass": [986, 127, 94], "n_token": 121, "loss": [0.1165320947766304, 0.2963618338108063], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["def __init__(", "self", ",", "request", "args", "self", "__init__", "(", "request", "*", "args", "kwargs", "#NEWLINE#", "tenant_choices", "tenants", "has_more", "=", "request", ")", "for", "tenant", "in", "tenants", ":", "#INDENT#", "if", "tenant", "#INDENT#", "tenant_choices", "(", "net_type", ".", "id", ",", "tenant", "#UNINDENT#", "self", "tenant_choices", "#NEWLINE#", "#INDENT#", "self", "self", ".", "request", "(", "request", ",", "neutron_settings", "#NEWLINE#", "seg_id_range", "=", "neutron_settings", ".", "self", ".", "seg_id_range", "=", "seg_id_range", ".", ":", "seg_id_range", ":", "seg_id_range", "#NEWLINE#", "seg_id_help", "'For VLAN networks, the VLAN VID on the physical network that realizes the virtual network. Valid VLAN VIDs are %(vlan_min)s through %(vlan_max)s. For GRE or VXLAN networks, the tunnel ID. Valid tunnel IDs for GRE networks are %(gre_min)s through %(gre_max)s. For VXLAN networks, %(vxlan_min)s through %(vxlan_max)s.'", "self", ".", "seg_id_range", "self", ".", "seg_id_range", "[", ":", "self", ".", "seg_id_range", "self", ".", "seg_id_range", "#NEWLINE#", "self", ".", "seg_id_range", "[", "self", ".", "seg_id_range", "[", "self", ".", "=", "seg_id_help", "#NEWLINE#", "supported_provider_types", "=", "neutron_settings", "(", "supported_provider_types", "network_type_choices", "=", "#INDENT#", "network_type_choices", "net_type", "for", "net_type", "in", "(", "net_type", "supported_provider_types", "(", "network_type_choices", ")", "self", ".", "#INDENT#", "self", "=", "network_type_choices", "#INDENT#", "self"]}}
{"position": {"error_location": 30, "repair_targets": [20, 26, 34], "repair_candidates": [4, 10, 49, 55, 57, 60, 62, 68, 71, 76, 79, 83, 87, 30, 103, 105, 108, 14, 22, 99, 102, 111, 118, 3, 8, 17, 43, 45, 20, 26, 34, 11, 15, 13, 28, 37, 47, 51, 96, 64, 92, 1, 5, 36, 40, 41, 53, 66, 69, 74, 77, 81, 85, 89, 113, 116, 120, 94, 98, 109]}}
{"prediction": {"error_location": 0.8900012373924255, "repair_targets": [0.7394973635673523, 0.0033169209491461515, 0.0007040784112177789], "repair_candidates": [0.004735297057777643, 0.023743903264403343, 0.014956752769649029, 0.0175232645124197, 0.0024150104727596045, 0.0005777733167633414, 0.021222533658146858, 0.0274654608219862, 0.00809904932975769, 0.03756600245833397, 0.001176513615064323, 0.7394973635673523, 7.3661949500092305e-06, 0.0033169209491461515, 0.0006483957986347377, 5.8478744904277846e-05, 0.0007040784112177789, 0.008855951949954033, 0.010526565834879875, 0.0012858761474490166, 0.002076877048239112, 0.0028584895189851522, 0.006585962139070034, 0.002030183793976903, 0.00504275830462575, 0.005339538678526878, 0.0015288993017747998, 0.0019133605528622866, 2.665477222763002e-05, 0.0001340419694315642, 0.0001498649944551289, 0.0008162313606590033, 0.0006957704899832606, 0.0007653559441678226, 0.014724338427186012, 0.00021449652558658272, 0.01534376759082079, 0.00028177534113638103, 0.0015318962978199124, 0.00038501934614032507, 0.0005388688878156245, 0.0008357188780792058, 0.001619448303245008, 0.00029648744384758174, 0.0016030757687985897, 0.0015568535309284925, 0.0008729280671104789, 0.000482385978102684, 0.00035067007411271334, 0.0005771097494289279, 0.0005275693256407976, 0.0014426932903006673, 0.0006880193832330406, 0.0001195095683215186, 1.959818291652482e-05, 0.00026331740082241595, 0.0002727351675275713, 0.001064881682395935, 2.7923948437091894e-05, 1.2334738130448386e-05], "target_probs": 0.7435183525085449}}


{"result": {"time": "2021-02-11 11:56:55.041559", "n_pass": [987, 128, 95], "n_token": 120, "loss": [0.013424482196569443, 0.03990483656525612], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["def __init__(", "self", ",", "request", "args", "self", "__init__", "(", "request", "*", "args", "kwargs", "#NEWLINE#", "tenant_choices", "tenants", "has_more", "=", "request", ")", "for", "tenant", "in", "tenants", ":", "#INDENT#", "if", "tenant", "tenant_choices", "(", "net_type", ".", "id", ",", "tenant", "#UNINDENT#", "self", "tenant_choices", "#NEWLINE#", "#INDENT#", "self", "self", ".", "request", "(", "request", ",", "neutron_settings", "#NEWLINE#", "seg_id_range", "=", "neutron_settings", ".", "self", ".", "seg_id_range", "=", "seg_id_range", ".", ":", "seg_id_range", ":", "seg_id_range", "#NEWLINE#", "seg_id_help", "'For VLAN networks, the VLAN VID on the physical network that realizes the virtual network. Valid VLAN VIDs are %(vlan_min)s through %(vlan_max)s. For GRE or VXLAN networks, the tunnel ID. Valid tunnel IDs for GRE networks are %(gre_min)s through %(gre_max)s. For VXLAN networks, %(vxlan_min)s through %(vxlan_max)s.'", "self", ".", "seg_id_range", "self", ".", "seg_id_range", "[", ":", "self", ".", "seg_id_range", "self", ".", "seg_id_range", "#NEWLINE#", "self", ".", "seg_id_range", "[", "self", ".", "seg_id_range", "[", "self", ".", "=", "seg_id_help", "#NEWLINE#", "supported_provider_types", "=", "neutron_settings", "(", "supported_provider_types", "network_type_choices", "=", "#INDENT#", "network_type_choices", "net_type", "for", "net_type", "in", "(", "net_type", "supported_provider_types", "(", "network_type_choices", ")", "self", ".", "#INDENT#", "self", "=", "network_type_choices", "#INDENT#", "self"]}}
{"position": {"error_location": 29, "repair_targets": [20, 26, 33], "repair_candidates": [4, 10, 48, 54, 56, 59, 61, 67, 70, 75, 78, 82, 86, 29, 102, 104, 107, 14, 22, 98, 101, 110, 117, 3, 8, 17, 42, 44, 20, 26, 33, 11, 15, 13, 27, 36, 46, 50, 95, 63, 91, 1, 5, 35, 39, 40, 52, 65, 68, 73, 76, 80, 84, 88, 112, 115, 119, 93, 97, 108]}}
{"prediction": {"error_location": 0.9866652488708496, "repair_targets": [0.9607706665992737, 1.0689541340980213e-05, 9.954017878044397e-05], "repair_candidates": [0.0006784464931115508, 0.004705498926341534, 0.0017289441311731935, 0.002221958013251424, 0.00041927132406271994, 0.00023147670435719192, 0.001433406607247889, 0.009175329469144344, 0.0012685341062024236, 0.0035655279643833637, 0.0003857336414512247, 0.9607706665992737, 2.4726862193347188e-06, 1.0689541340980213e-05, 9.731059253681451e-05, 1.7695879250823054e-06, 9.954017878044397e-05, 0.001744570559822023, 0.0013264482840895653, 8.541481656720862e-05, 0.00018594089488033205, 0.00023082132975105196, 0.0008760171476751566, 0.0004667185712605715, 0.00032783180358819664, 0.0009289117297157645, 0.0002591741213109344, 0.00023884551774244756, 2.6324423743062653e-06, 1.736259218887426e-05, 1.6002721167751588e-05, 4.00731478293892e-05, 6.396108801709488e-05, 5.850649904459715e-05, 0.002016355050727725, 1.410054937878158e-05, 0.0025309566408395767, 2.129621134372428e-05, 0.00021991669200360775, 2.924414184235502e-05, 4.929810529574752e-05, 5.373519525164738e-05, 0.00017034994380082935, 2.6187768526142463e-05, 0.00021388973982539028, 0.0002901914995163679, 6.608873809454963e-05, 4.301087392377667e-05, 3.103548806393519e-05, 6.880974979139864e-05, 8.005237759789452e-05, 0.0001169036331702955, 0.00010597664368106052, 7.159869710449129e-06, 1.4152532230582437e-06, 3.168557304888964e-05, 2.9712688046856783e-05, 0.0001124865812016651, 2.9264269869599957e-06, 1.3831598835167824e-06], "target_probs": 0.9608808755874634}}


{"result": {"time": "2021-02-11 11:56:55.128824", "n_pass": [989, 129, 96], "n_token": 119, "loss": [0.29892072081565857, 0.2491404414176941], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["def __init__(", "self", ",", "request", "args", "self", "__init__", "(", "request", "*", "args", "kwargs", "#NEWLINE#", "tenant_choices", "tenants", "has_more", "=", "request", ")", "for", "tenant", "in", "tenants", ":", "#INDENT#", "if", "tenant", "tenant_choices", "net_type", ".", "id", ",", "tenant", "#UNINDENT#", "self", "tenant_choices", "#NEWLINE#", "#INDENT#", "self", "self", ".", "request", "(", "request", ",", "neutron_settings", "#NEWLINE#", "seg_id_range", "=", "neutron_settings", ".", "self", ".", "seg_id_range", "=", "seg_id_range", ".", ":", "seg_id_range", ":", "seg_id_range", "#NEWLINE#", "seg_id_help", "'For VLAN networks, the VLAN VID on the physical network that realizes the virtual network. Valid VLAN VIDs are %(vlan_min)s through %(vlan_max)s. For GRE or VXLAN networks, the tunnel ID. Valid tunnel IDs for GRE networks are %(gre_min)s through %(gre_max)s. For VXLAN networks, %(vxlan_min)s through %(vxlan_max)s.'", "self", ".", "seg_id_range", "self", ".", "seg_id_range", "[", ":", "self", ".", "seg_id_range", "self", ".", "seg_id_range", "#NEWLINE#", "self", ".", "seg_id_range", "[", "self", ".", "seg_id_range", "[", "self", ".", "=", "seg_id_help", "#NEWLINE#", "supported_provider_types", "=", "neutron_settings", "(", "supported_provider_types", "network_type_choices", "=", "#INDENT#", "network_type_choices", "net_type", "for", "net_type", "in", "(", "net_type", "supported_provider_types", "(", "network_type_choices", ")", "self", ".", "#INDENT#", "self", "=", "network_type_choices", "#INDENT#", "self"]}}
{"position": {"error_location": 28, "repair_targets": [20, 26, 32], "repair_candidates": [4, 10, 47, 53, 55, 58, 60, 66, 69, 74, 77, 81, 85, 28, 101, 103, 106, 14, 22, 97, 100, 109, 116, 3, 8, 17, 41, 43, 20, 26, 32, 11, 15, 13, 27, 35, 45, 49, 94, 62, 90, 1, 5, 34, 38, 39, 51, 64, 67, 72, 75, 79, 83, 87, 111, 114, 118, 92, 96, 107]}}
{"prediction": {"error_location": 0.7416182160377502, "repair_targets": [0.7730187773704529, 0.005649402271956205, 0.0008023196132853627], "repair_candidates": [0.0028605295810848475, 0.006349322386085987, 0.005617253482341766, 0.008947283960878849, 0.0023233473766595125, 0.0005441602552309632, 0.01482341717928648, 0.024675840511918068, 0.0062407320365309715, 0.02982349693775177, 0.0003744965943042189, 0.7730187773704529, 8.758843250689097e-06, 0.005649402271956205, 0.026109132915735245, 0.00019293140212539583, 0.0008023196132853627, 0.005054595414549112, 0.02198811247944832, 0.0017411384033039212, 0.0031210044398903847, 0.0009114173008129001, 0.003063648007810116, 0.0023619667626917362, 0.003102019662037492, 0.0030636335723102093, 0.0022735411766916513, 0.001647350611165166, 2.3550735477329e-06, 0.00012372351193334907, 7.654917862964794e-05, 0.00027151702670380473, 0.0006396317039616406, 0.0003718661901075393, 0.014110783115029335, 9.932650573318824e-05, 0.012394702062010765, 0.00013923428195994347, 0.001127016730606556, 0.0002219506714027375, 0.0004066149704158306, 0.00035499900695867836, 0.0010217932285740972, 0.000211797931115143, 0.001192242605611682, 0.0015457040863111615, 0.0006919821607880294, 0.00036570208612829447, 0.0003059431037399918, 0.0003598167095333338, 0.0008320071501657367, 0.0019224907737225294, 0.0022356510162353516, 6.385476444847882e-05, 1.8745806301012635e-05, 0.0003044272889383137, 0.00042034528451040387, 0.0014376624021679163, 2.7676409445120953e-05, 1.2394240002322476e-05], "target_probs": 0.7794705033302307}}


{"result": {"time": "2021-02-11 11:56:55.301768", "n_pass": [992, 131, 97], "n_token": 118, "loss": [0.1168895736336708, 0.13706247508525848], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["def __init__(", "self", ",", "request", "args", "self", "__init__", "(", "request", "*", "args", "kwargs", "#NEWLINE#", "tenant_choices", "tenants", "has_more", "=", "request", ")", "for", "tenant", "in", "tenants", ":", "#INDENT#", "if", "tenant", "tenant_choices", "net_type", ".", ",", "tenant", "#UNINDENT#", "self", "tenant_choices", "#NEWLINE#", "#INDENT#", "self", "self", ".", "request", "(", "request", ",", "neutron_settings", "#NEWLINE#", "seg_id_range", "=", "neutron_settings", ".", "self", ".", "seg_id_range", "=", "seg_id_range", ".", ":", "seg_id_range", ":", "seg_id_range", "#NEWLINE#", "seg_id_help", "'For VLAN networks, the VLAN VID on the physical network that realizes the virtual network. Valid VLAN VIDs are %(vlan_min)s through %(vlan_max)s. For GRE or VXLAN networks, the tunnel ID. Valid tunnel IDs for GRE networks are %(gre_min)s through %(gre_max)s. For VXLAN networks, %(vxlan_min)s through %(vxlan_max)s.'", "self", ".", "seg_id_range", "self", ".", "seg_id_range", "[", ":", "self", ".", "seg_id_range", "self", ".", "seg_id_range", "#NEWLINE#", "self", ".", "seg_id_range", "[", "self", ".", "seg_id_range", "[", "self", ".", "=", "seg_id_help", "#NEWLINE#", "supported_provider_types", "=", "neutron_settings", "(", "supported_provider_types", "network_type_choices", "=", "#INDENT#", "network_type_choices", "net_type", "for", "net_type", "in", "(", "net_type", "supported_provider_types", "(", "network_type_choices", ")", "self", ".", "#INDENT#", "self", "=", "network_type_choices", "#INDENT#", "self"]}}
{"position": {"error_location": 28, "repair_targets": [20, 26, 31], "repair_candidates": [4, 10, 46, 52, 54, 57, 59, 65, 68, 73, 76, 80, 84, 28, 100, 102, 105, 14, 22, 96, 99, 108, 115, 3, 8, 17, 40, 42, 20, 26, 31, 11, 15, 13, 27, 34, 44, 48, 93, 61, 89, 1, 5, 33, 37, 38, 50, 63, 66, 71, 74, 78, 82, 86, 110, 113, 117, 91, 95, 106]}}
{"prediction": {"error_location": 0.8896833658218384, "repair_targets": [0.8657116889953613, 0.004711236339062452, 0.001492806477472186], "repair_candidates": [0.0017873659962788224, 0.0056551797315478325, 0.0024233816657215357, 0.006959091406315565, 0.0018106205388903618, 0.00036120336153544486, 0.005736242979764938, 0.018423471599817276, 0.003911558073014021, 0.022397523745894432, 0.0004558372311294079, 0.8657116889953613, 7.69987400417449e-06, 0.004711236339062452, 0.013594045303761959, 4.249119228916243e-05, 0.001492806477472186, 0.0025450114626437426, 0.011026664637029171, 0.0010557252680882812, 0.0015722312964498997, 0.0006581346970051527, 0.00249101291410625, 0.0018309949664399028, 0.0016435387078672647, 0.0031746651511639357, 0.0011857891222462058, 0.0007684294250793755, 2.0270445020287298e-06, 8.139420242514461e-05, 5.262351260171272e-05, 0.00015325777349062264, 0.00020475618657656014, 0.00015668105334043503, 0.00453660823404789, 4.5818789658369496e-05, 0.0046315183863043785, 9.465197945246473e-05, 0.0006302743568085134, 0.0001097643980756402, 0.00013596286589745432, 0.00016982931992970407, 0.0003790993068832904, 0.00011433280451456085, 0.0003420649445615709, 0.0008561138529330492, 0.0003726286522578448, 0.00022169743897393346, 0.0001515602634754032, 0.00018637893663253635, 0.0004271141660865396, 0.0007570746820420027, 0.00089318334357813, 3.422863665036857e-05, 1.0260201634082478e-05, 0.00014134557568468153, 0.000242102105403319, 0.0004109726578462869, 1.4684030247735791e-05, 6.180542186484672e-06], "target_probs": 0.8719157576560974}}


{"result": {"time": "2021-02-11 11:56:55.388949", "n_pass": [993, 132, 98], "n_token": 117, "loss": [0.11438897997140884, 0.08272802829742432], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["def __init__(", "self", ",", "request", "args", "self", "__init__", "(", "request", "*", "args", "kwargs", "#NEWLINE#", "tenant_choices", "tenants", "has_more", "=", "request", ")", "for", "tenant", "in", "tenants", ":", "#INDENT#", "if", "tenant", "tenant_choices", "net_type", ".", "tenant", "#UNINDENT#", "self", "tenant_choices", "#NEWLINE#", "#INDENT#", "self", "self", ".", "request", "(", "request", ",", "neutron_settings", "#NEWLINE#", "seg_id_range", "=", "neutron_settings", ".", "self", ".", "seg_id_range", "=", "seg_id_range", ".", ":", "seg_id_range", ":", "seg_id_range", "#NEWLINE#", "seg_id_help", "'For VLAN networks, the VLAN VID on the physical network that realizes the virtual network. Valid VLAN VIDs are %(vlan_min)s through %(vlan_max)s. For GRE or VXLAN networks, the tunnel ID. Valid tunnel IDs for GRE networks are %(gre_min)s through %(gre_max)s. For VXLAN networks, %(vxlan_min)s through %(vxlan_max)s.'", "self", ".", "seg_id_range", "self", ".", "seg_id_range", "[", ":", "self", ".", "seg_id_range", "self", ".", "seg_id_range", "#NEWLINE#", "self", ".", "seg_id_range", "[", "self", ".", "seg_id_range", "[", "self", ".", "=", "seg_id_help", "#NEWLINE#", "supported_provider_types", "=", "neutron_settings", "(", "supported_provider_types", "network_type_choices", "=", "#INDENT#", "network_type_choices", "net_type", "for", "net_type", "in", "(", "net_type", "supported_provider_types", "(", "network_type_choices", ")", "self", ".", "#INDENT#", "self", "=", "network_type_choices", "#INDENT#", "self"]}}
{"position": {"error_location": 28, "repair_targets": [20, 26, 30], "repair_candidates": [4, 10, 45, 51, 53, 56, 58, 64, 67, 72, 75, 79, 83, 28, 99, 101, 104, 14, 22, 95, 98, 107, 114, 3, 8, 17, 39, 41, 20, 26, 30, 11, 15, 13, 27, 33, 43, 47, 92, 60, 88, 1, 5, 32, 36, 37, 49, 62, 65, 70, 73, 77, 81, 85, 109, 112, 116, 90, 94, 105]}}
{"prediction": {"error_location": 0.89191073179245, "repair_targets": [0.9168511629104614, 0.0016568828141316772, 0.00209346367046237], "repair_candidates": [0.0010299792047590017, 0.0031875225249677896, 0.004041268955916166, 0.004183544777333736, 0.0009584638755768538, 0.00016803159087430686, 0.002499023452401161, 0.011207865551114082, 0.002932425355538726, 0.016621485352516174, 0.000275007972959429, 0.9168511629104614, 6.163602847664151e-06, 0.0016568828141316772, 0.006698214914649725, 1.731469455990009e-05, 0.00209346367046237, 0.0013867657398805022, 0.005745559930801392, 0.0011629262007772923, 0.0013357066782191396, 0.0004402568156365305, 0.001447793678380549, 0.0013826608192175627, 0.001260946155525744, 0.002607799833640456, 0.0006387453177012503, 0.0004941358929499984, 1.0343707117499434e-06, 5.478684761328623e-05, 2.5916819140547886e-05, 9.50921603362076e-05, 9.870514622889459e-05, 0.00010365957132307813, 0.0017582550644874573, 3.106967778876424e-05, 0.0014207661151885986, 8.838267240207642e-05, 0.000503893184941262, 5.293175490805879e-05, 7.866601663408801e-05, 8.07720425655134e-05, 0.00024214485893025994, 6.0358026530593634e-05, 0.00021168180683162063, 0.0006020788569003344, 0.0002710135595407337, 0.00014344131341204047, 9.872153168544173e-05, 0.00011282064951956272, 0.00021351140458136797, 0.0004971196176484227, 0.0003411365323700011, 2.0400102584972046e-05, 7.134688075893791e-06, 5.319099727785215e-05, 0.00019528251141309738, 0.00019094279559794813, 7.777641258144286e-06, 6.275424766499782e-06], "target_probs": 0.920601487159729}}


{"result": {"time": "2021-02-11 11:56:55.476968", "n_pass": [995, 133, 99], "n_token": 116, "loss": [0.5873477458953857, 0.2026512771844864], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["def __init__(", "self", ",", "request", "args", "self", "__init__", "(", "request", "*", "args", "kwargs", "#NEWLINE#", "tenant_choices", "tenants", "has_more", "=", "request", ")", "for", "tenant", "in", "tenants", ":", "#INDENT#", "if", "tenant", "tenant_choices", "net_type", ".", "tenant", "self", "tenant_choices", "#NEWLINE#", "#INDENT#", "self", "self", ".", "request", "(", "request", ",", "neutron_settings", "#NEWLINE#", "seg_id_range", "=", "neutron_settings", ".", "self", ".", "seg_id_range", "=", "seg_id_range", ".", ":", "seg_id_range", ":", "seg_id_range", "#NEWLINE#", "seg_id_help", "'For VLAN networks, the VLAN VID on the physical network that realizes the virtual network. Valid VLAN VIDs are %(vlan_min)s through %(vlan_max)s. For GRE or VXLAN networks, the tunnel ID. Valid tunnel IDs for GRE networks are %(gre_min)s through %(gre_max)s. For VXLAN networks, %(vxlan_min)s through %(vxlan_max)s.'", "self", ".", "seg_id_range", "self", ".", "seg_id_range", "[", ":", "self", ".", "seg_id_range", "self", ".", "seg_id_range", "#NEWLINE#", "self", ".", "seg_id_range", "[", "self", ".", "seg_id_range", "[", "self", ".", "=", "seg_id_help", "#NEWLINE#", "supported_provider_types", "=", "neutron_settings", "(", "supported_provider_types", "network_type_choices", "=", "#INDENT#", "network_type_choices", "net_type", "for", "net_type", "in", "(", "net_type", "supported_provider_types", "(", "network_type_choices", ")", "self", ".", "#INDENT#", "self", "=", "network_type_choices", "#INDENT#", "self"]}}
{"position": {"error_location": 28, "repair_targets": [20, 26, 30], "repair_candidates": [4, 10, 44, 50, 52, 55, 57, 63, 66, 71, 74, 78, 82, 28, 98, 100, 103, 14, 22, 94, 97, 106, 113, 3, 8, 17, 38, 40, 20, 26, 30, 11, 15, 13, 27, 32, 42, 46, 91, 59, 87, 1, 5, 31, 35, 36, 48, 61, 64, 69, 72, 76, 80, 84, 108, 111, 115, 89, 93, 104]}}
{"prediction": {"error_location": 0.5557994842529297, "repair_targets": [0.8031724691390991, 0.009793021716177464, 0.003597487695515156], "repair_candidates": [0.0024355181958526373, 0.006434457842260599, 0.009967993013560772, 0.008969212882220745, 0.002433080691844225, 0.0004849512770306319, 0.007944058626890182, 0.024256275966763496, 0.007337597198784351, 0.03996169567108154, 0.0004813866689801216, 0.8031724691390991, 1.5158334463194478e-05, 0.009793021716177464, 0.021379701793193817, 0.000123407575301826, 0.003597487695515156, 0.001339066307991743, 0.009724204428493977, 0.0031764341983944178, 0.003254086244851351, 0.0009123412892222404, 0.0033041394781321287, 0.0029136589728295803, 0.003240617923438549, 0.004812593571841717, 0.0016592011088505387, 0.0010232208296656609, 1.830025325944007e-06, 8.664625056553632e-05, 3.581617056624964e-05, 0.0002343070664210245, 0.0002747654798440635, 0.0002692416892386973, 0.003139285370707512, 7.939930219436064e-05, 0.0024525364860892296, 0.0002868012525141239, 0.0013354819966480136, 0.00011150391219416633, 0.00013568905706051737, 0.00016282607975881547, 0.0004802721960004419, 0.00011914189963135868, 0.00046869140351191163, 0.0014244101475924253, 0.0009024017490446568, 0.000354879506630823, 0.0002670863177627325, 0.00024924115859903395, 0.00035089929588139057, 0.0011849086731672287, 0.0005417372449301183, 4.730892032966949e-05, 1.9666616935865022e-05, 6.82929894537665e-05, 0.00035394428414292634, 0.00037863649777136743, 1.333838008577004e-05, 2.2065114535507746e-05], "target_probs": 0.8165629506111145}}


{"result": {"time": "2021-02-11 11:56:55.564229", "n_pass": [998, 134, 100], "n_token": 115, "loss": [0.28154808282852173, 0.1573832482099533], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["def __init__(", "self", ",", "request", "args", "self", "__init__", "(", "request", "*", "args", "kwargs", "#NEWLINE#", "tenant_choices", "tenants", "has_more", "=", "request", ")", "for", "tenant", "in", "tenants", ":", "#INDENT#", "if", "tenant", "tenant_choices", "net_type", ".", "tenant", "self", "tenant_choices", "#INDENT#", "self", "self", ".", "request", "(", "request", ",", "neutron_settings", "#NEWLINE#", "seg_id_range", "=", "neutron_settings", ".", "self", ".", "seg_id_range", "=", "seg_id_range", ".", ":", "seg_id_range", ":", "seg_id_range", "#NEWLINE#", "seg_id_help", "'For VLAN networks, the VLAN VID on the physical network that realizes the virtual network. Valid VLAN VIDs are %(vlan_min)s through %(vlan_max)s. For GRE or VXLAN networks, the tunnel ID. Valid tunnel IDs for GRE networks are %(gre_min)s through %(gre_max)s. For VXLAN networks, %(vxlan_min)s through %(vxlan_max)s.'", "self", ".", "seg_id_range", "self", ".", "seg_id_range", "[", ":", "self", ".", "seg_id_range", "self", ".", "seg_id_range", "#NEWLINE#", "self", ".", "seg_id_range", "[", "self", ".", "seg_id_range", "[", "self", ".", "=", "seg_id_help", "#NEWLINE#", "supported_provider_types", "=", "neutron_settings", "(", "supported_provider_types", "network_type_choices", "=", "#INDENT#", "network_type_choices", "net_type", "for", "net_type", "in", "(", "net_type", "supported_provider_types", "(", "network_type_choices", ")", "self", ".", "#INDENT#", "self", "=", "network_type_choices", "#INDENT#", "self"]}}
{"position": {"error_location": 28, "repair_targets": [20, 26, 30], "repair_candidates": [4, 10, 43, 49, 51, 54, 56, 62, 65, 70, 73, 77, 81, 28, 97, 99, 102, 14, 22, 93, 96, 105, 112, 3, 8, 17, 37, 39, 20, 26, 30, 11, 15, 13, 27, 32, 41, 45, 90, 58, 86, 1, 5, 31, 34, 35, 47, 60, 63, 68, 71, 75, 79, 83, 107, 110, 114, 88, 92, 103]}}
{"prediction": {"error_location": 0.754614531993866, "repair_targets": [0.8373416662216187, 0.013776475563645363, 0.0032583936117589474], "repair_candidates": [0.0018066951306536794, 0.006308707408607006, 0.006999067030847073, 0.008052236400544643, 0.0018538626609370112, 0.00034356286050751805, 0.005317132920026779, 0.017584366723895073, 0.005573702044785023, 0.03381231054663658, 0.0005681804614141583, 0.8373416662216187, 1.2293513464101125e-05, 0.013776475563645363, 0.020916787907481194, 6.27236149739474e-05, 0.0032583936117589474, 0.0018597549060359597, 0.008211241103708744, 0.0019250978948548436, 0.0017411226872354746, 0.0005713782738894224, 0.002567853545770049, 0.0023335875011980534, 0.0019048976246267557, 0.004407589323818684, 0.0010067037073895335, 0.0004949242575094104, 1.2087133427485242e-06, 4.73624822916463e-05, 8.537976100342348e-06, 0.00013860386388842016, 0.0002685599320102483, 0.00014145881868898869, 0.0014212296810001135, 3.520560494507663e-05, 0.0012729830341413617, 0.000159819406690076, 0.000720792100764811, 5.3392283007269725e-05, 8.118626283248886e-05, 6.521017348859459e-05, 0.0003021381562575698, 4.68898651888594e-05, 0.00030263548251241446, 0.0012383322464302182, 0.0006367046153172851, 0.00020242315076757222, 0.00016701765707693994, 0.00014194475079420954, 0.00030151644023135304, 0.0007299356511794031, 0.00040156726026907563, 2.5746752726263367e-05, 1.0963197382807266e-05, 4.602140688803047e-05, 0.0001890777493827045, 0.0002061321138171479, 8.763734513195232e-06, 1.437169612472644e-05], "target_probs": 0.8543765544891357}}


{"result": {"time": "2021-02-11 11:56:55.651243", "n_pass": [999, 135, 101], "n_token": 114, "loss": [1.028447151184082, 0.5354365110397339], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["def __init__(", "self", ",", "request", "args", "self", "__init__", "(", "request", "*", "args", "kwargs", "#NEWLINE#", "tenant_choices", "tenants", "has_more", "=", "request", ")", "for", "tenant", "in", "tenants", ":", "#INDENT#", "if", "tenant", "tenant_choices", "net_type", ".", "tenant", "self", "tenant_choices", "self", "self", ".", "request", "(", "request", ",", "neutron_settings", "#NEWLINE#", "seg_id_range", "=", "neutron_settings", ".", "self", ".", "seg_id_range", "=", "seg_id_range", ".", ":", "seg_id_range", ":", "seg_id_range", "#NEWLINE#", "seg_id_help", "'For VLAN networks, the VLAN VID on the physical network that realizes the virtual network. Valid VLAN VIDs are %(vlan_min)s through %(vlan_max)s. For GRE or VXLAN networks, the tunnel ID. Valid tunnel IDs for GRE networks are %(gre_min)s through %(gre_max)s. For VXLAN networks, %(vxlan_min)s through %(vxlan_max)s.'", "self", ".", "seg_id_range", "self", ".", "seg_id_range", "[", ":", "self", ".", "seg_id_range", "self", ".", "seg_id_range", "#NEWLINE#", "self", ".", "seg_id_range", "[", "self", ".", "seg_id_range", "[", "self", ".", "=", "seg_id_help", "#NEWLINE#", "supported_provider_types", "=", "neutron_settings", "(", "supported_provider_types", "network_type_choices", "=", "#INDENT#", "network_type_choices", "net_type", "for", "net_type", "in", "(", "net_type", "supported_provider_types", "(", "network_type_choices", ")", "self", ".", "#INDENT#", "self", "=", "network_type_choices", "#INDENT#", "self"]}}
{"position": {"error_location": 28, "repair_targets": [20, 26, 30], "repair_candidates": [4, 10, 42, 48, 50, 53, 55, 61, 64, 69, 72, 76, 80, 28, 96, 98, 101, 14, 22, 92, 95, 104, 111, 3, 8, 17, 36, 38, 20, 26, 30, 11, 15, 13, 27, 32, 40, 44, 89, 57, 85, 1, 5, 31, 33, 34, 46, 59, 62, 67, 70, 74, 78, 82, 106, 109, 113, 87, 91, 102]}}
{"prediction": {"error_location": 0.35756173729896545, "repair_targets": [0.4901079833507538, 0.08779366314411163, 0.007512075360864401], "repair_candidates": [0.003218206111341715, 0.009823261760175228, 0.017569473013281822, 0.017302166670560837, 0.005288528744131327, 0.000993108144029975, 0.01963869296014309, 0.06257445365190506, 0.009975748136639595, 0.07980167120695114, 0.000941122998483479, 0.4901079833507538, 2.6819558115676045e-05, 0.08779366314411163, 0.1037803441286087, 7.626422302564606e-05, 0.007512075360864401, 0.005460478365421295, 0.017952237278223038, 0.00432154256850481, 0.006901275832206011, 0.0008907094015739858, 0.0063687278889119625, 0.003513126401230693, 0.003770567709580064, 0.0057982150465250015, 0.002018705476075411, 0.0008289017714560032, 9.003028935694601e-07, 0.0001317603309871629, 6.668147307209438e-06, 0.0002412825997453183, 0.0009328146697953343, 0.00027288959245197475, 0.0037266481667757034, 7.150995952542871e-05, 0.005349041894078255, 0.0002843013498932123, 0.0018401577835902572, 0.0001215900992974639, 0.0002462815318722278, 0.0001441097992938012, 0.0008825813420116901, 9.60505785769783e-05, 0.0008585808100178838, 0.0011692522093653679, 0.0014996258541941643, 0.00048334035091102123, 0.0004537322383839637, 0.00035559109528549016, 0.0008586917538195848, 0.002453768393024802, 0.0018766751745715737, 7.21940232324414e-05, 3.5314351407578215e-05, 0.00014450051821768284, 0.00048151478404179215, 0.0005961487768217921, 2.8206330171087757e-05, 3.615770401665941e-05], "target_probs": 0.5854136943817139}}


{"result": {"time": "2021-02-11 11:56:55.739637", "n_pass": [1002, 136, 102], "n_token": 113, "loss": [0.5438446998596191, 0.19927026331424713], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["def __init__(", "self", ",", "request", "args", "self", "__init__", "(", "request", "*", "args", "kwargs", "#NEWLINE#", "tenant_choices", "tenants", "has_more", "=", "request", ")", "for", "tenant", "in", "tenants", ":", "#INDENT#", "if", "tenant", "tenant_choices", "net_type", ".", "tenant", "self", "tenant_choices", "self", "self", "request", "(", "request", ",", "neutron_settings", "#NEWLINE#", "seg_id_range", "=", "neutron_settings", ".", "self", ".", "seg_id_range", "=", "seg_id_range", ".", ":", "seg_id_range", ":", "seg_id_range", "#NEWLINE#", "seg_id_help", "'For VLAN networks, the VLAN VID on the physical network that realizes the virtual network. Valid VLAN VIDs are %(vlan_min)s through %(vlan_max)s. For GRE or VXLAN networks, the tunnel ID. Valid tunnel IDs for GRE networks are %(gre_min)s through %(gre_max)s. For VXLAN networks, %(vxlan_min)s through %(vxlan_max)s.'", "self", ".", "seg_id_range", "self", ".", "seg_id_range", "[", ":", "self", ".", "seg_id_range", "self", ".", "seg_id_range", "#NEWLINE#", "self", ".", "seg_id_range", "[", "self", ".", "seg_id_range", "[", "self", ".", "=", "seg_id_help", "#NEWLINE#", "supported_provider_types", "=", "neutron_settings", "(", "supported_provider_types", "network_type_choices", "=", "#INDENT#", "network_type_choices", "net_type", "for", "net_type", "in", "(", "net_type", "supported_provider_types", "(", "network_type_choices", ")", "self", ".", "#INDENT#", "self", "=", "network_type_choices", "#INDENT#", "self"]}}
{"position": {"error_location": 28, "repair_targets": [20, 26, 30], "repair_candidates": [4, 10, 41, 47, 49, 52, 54, 60, 63, 68, 71, 75, 79, 28, 95, 97, 100, 14, 22, 91, 94, 103, 110, 3, 8, 17, 35, 37, 20, 26, 30, 11, 15, 13, 27, 32, 39, 43, 88, 56, 84, 1, 5, 31, 33, 34, 45, 58, 61, 66, 69, 73, 77, 81, 105, 108, 112, 86, 90, 101]}}
{"prediction": {"error_location": 0.5805121064186096, "repair_targets": [0.7692453265190125, 0.04444343224167824, 0.005639692768454552], "repair_candidates": [0.0013467831304296851, 0.0045618019066751, 0.006872997153550386, 0.006604794412851334, 0.0020358522888273, 0.0003065972705371678, 0.0063642230816185474, 0.02271992526948452, 0.00314471498131752, 0.02509969100356102, 0.00039735028985887766, 0.7692453265190125, 8.743911166675389e-06, 0.04444343224167824, 0.056991200894117355, 4.205507502774708e-05, 0.005639692768454552, 0.0009332369081676006, 0.016742262989282608, 0.0016343920724466443, 0.0011878045042976737, 0.0020917414221912622, 0.002682721009477973, 0.0021930010989308357, 0.0012619242770597339, 0.0032690255902707577, 0.00045670903637073934, 0.000217469350900501, 3.807952850820584e-07, 0.00010589334851829335, 1.4974611985962838e-06, 8.100060949800536e-05, 0.0003164944937452674, 9.457926353206858e-05, 0.0014899619854986668, 2.54397455137223e-05, 0.0026893182657659054, 6.395849777618423e-05, 0.0005352386506274343, 3.998669853899628e-05, 0.00010311087680747733, 5.0836879381677136e-05, 0.00038725018384866416, 3.158005711156875e-05, 0.0004132739268243313, 0.0006974898278713226, 0.0005060762050561607, 0.0001808158413041383, 0.00016162228712346405, 0.00012474429968278855, 0.00044423906365409493, 0.0009236799087375402, 0.0014552397187799215, 2.6136207452509552e-05, 1.504005558672361e-05, 8.431096648564562e-05, 0.0001818536256905645, 0.00024171477707568556, 1.5972278561093844e-05, 1.5780327885295264e-05], "target_probs": 0.8193284273147583}}


{"result": {"time": "2021-02-11 11:56:55.826995", "n_pass": [1004, 137, 103], "n_token": 112, "loss": [0.45148545503616333, 0.31829750537872314], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["def __init__(", "self", ",", "request", "args", "self", "__init__", "(", "request", "*", "args", "kwargs", "#NEWLINE#", "tenant_choices", "tenants", "has_more", "=", "request", ")", "for", "tenant", "in", "tenants", ":", "#INDENT#", "if", "tenant", "tenant_choices", "net_type", ".", "tenant", "self", "tenant_choices", "self", "self", "request", "request", ",", "neutron_settings", "#NEWLINE#", "seg_id_range", "=", "neutron_settings", ".", "self", ".", "seg_id_range", "=", "seg_id_range", ".", ":", "seg_id_range", ":", "seg_id_range", "#NEWLINE#", "seg_id_help", "'For VLAN networks, the VLAN VID on the physical network that realizes the virtual network. Valid VLAN VIDs are %(vlan_min)s through %(vlan_max)s. For GRE or VXLAN networks, the tunnel ID. Valid tunnel IDs for GRE networks are %(gre_min)s through %(gre_max)s. For VXLAN networks, %(vxlan_min)s through %(vxlan_max)s.'", "self", ".", "seg_id_range", "self", ".", "seg_id_range", "[", ":", "self", ".", "seg_id_range", "self", ".", "seg_id_range", "#NEWLINE#", "self", ".", "seg_id_range", "[", "self", ".", "seg_id_range", "[", "self", ".", "=", "seg_id_help", "#NEWLINE#", "supported_provider_types", "=", "neutron_settings", "(", "supported_provider_types", "network_type_choices", "=", "#INDENT#", "network_type_choices", "net_type", "for", "net_type", "in", "(", "net_type", "supported_provider_types", "(", "network_type_choices", ")", "self", ".", "#INDENT#", "self", "=", "network_type_choices", "#INDENT#", "self"]}}
{"position": {"error_location": 28, "repair_targets": [20, 26, 30], "repair_candidates": [4, 10, 40, 46, 48, 51, 53, 59, 62, 67, 70, 74, 78, 28, 94, 96, 99, 14, 22, 90, 93, 102, 109, 3, 8, 17, 35, 36, 20, 26, 30, 11, 15, 13, 27, 32, 38, 42, 87, 55, 83, 1, 5, 31, 33, 34, 44, 57, 60, 65, 68, 72, 76, 80, 104, 107, 111, 85, 89, 100]}}
{"prediction": {"error_location": 0.6366816759109497, "repair_targets": [0.6773989796638489, 0.04018352925777435, 0.00980387069284916], "repair_candidates": [0.0015511115780100226, 0.004921446554362774, 0.0047391559928655624, 0.00482912315055728, 0.0021444070152938366, 0.0004614947538357228, 0.00871739350259304, 0.01902422122657299, 0.0034615378826856613, 0.023458944633603096, 0.0007170246681198478, 0.6773989796638489, 1.2210710337967612e-05, 0.04018352925777435, 0.0610945038497448, 5.346664693206549e-05, 0.00980387069284916, 0.0023873145692050457, 0.06693156063556671, 0.03279280290007591, 0.006652636453509331, 0.001761044142767787, 0.0024285714607685804, 0.002389578614383936, 0.001164519228041172, 0.005055159796029329, 0.00043843002640642226, 0.00028511835262179375, 5.385346639741329e-07, 0.0002081596467178315, 1.4770654388485127e-06, 7.564061525044963e-05, 0.00038760266033932567, 0.0001222278515342623, 0.0024850708432495594, 3.4697608498390764e-05, 0.0038591506890952587, 2.971857065858785e-05, 0.0004336011770647019, 3.2843985536601394e-05, 0.00011736571468645707, 4.122183963772841e-05, 0.0005287764361128211, 2.7652899007080123e-05, 0.000628875510301441, 0.0013791690580546856, 0.00043665789416991174, 0.00017541827401146293, 0.00013756242697127163, 0.00010830048995558172, 0.00033791802707128227, 0.0005019365344196558, 0.002394050359725952, 1.6742224033805542e-05, 1.267686366190901e-05, 8.78715145518072e-05, 0.00011244694178458303, 0.00038431849679909647, 1.73083390109241e-05, 2.3828562916605733e-05], "target_probs": 0.7273863554000854}}


{"result": {"time": "2021-02-11 11:56:55.915245", "n_pass": [1006, 138, 104], "n_token": 111, "loss": [0.41168901324272156, 0.3982839286327362], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["def __init__(", "self", ",", "request", "args", "self", "__init__", "(", "request", "*", "args", "kwargs", "#NEWLINE#", "tenant_choices", "tenants", "has_more", "=", "request", ")", "for", "tenant", "in", "tenants", ":", "#INDENT#", "if", "tenant", "tenant_choices", "net_type", ".", "tenant", "self", "tenant_choices", "self", "self", "request", "request", "neutron_settings", "#NEWLINE#", "seg_id_range", "=", "neutron_settings", ".", "self", ".", "seg_id_range", "=", "seg_id_range", ".", ":", "seg_id_range", ":", "seg_id_range", "#NEWLINE#", "seg_id_help", "'For VLAN networks, the VLAN VID on the physical network that realizes the virtual network. Valid VLAN VIDs are %(vlan_min)s through %(vlan_max)s. For GRE or VXLAN networks, the tunnel ID. Valid tunnel IDs for GRE networks are %(gre_min)s through %(gre_max)s. For VXLAN networks, %(vxlan_min)s through %(vxlan_max)s.'", "self", ".", "seg_id_range", "self", ".", "seg_id_range", "[", ":", "self", ".", "seg_id_range", "self", ".", "seg_id_range", "#NEWLINE#", "self", ".", "seg_id_range", "[", "self", ".", "seg_id_range", "[", "self", ".", "=", "seg_id_help", "#NEWLINE#", "supported_provider_types", "=", "neutron_settings", "(", "supported_provider_types", "network_type_choices", "=", "#INDENT#", "network_type_choices", "net_type", "for", "net_type", "in", "(", "net_type", "supported_provider_types", "(", "network_type_choices", ")", "self", ".", "#INDENT#", "self", "=", "network_type_choices", "#INDENT#", "self"]}}
{"position": {"error_location": 28, "repair_targets": [20, 26, 30], "repair_candidates": [4, 10, 39, 45, 47, 50, 52, 58, 61, 66, 69, 73, 77, 28, 93, 95, 98, 14, 22, 89, 92, 101, 108, 3, 8, 17, 35, 36, 20, 26, 30, 11, 15, 13, 27, 32, 37, 41, 86, 54, 82, 1, 5, 31, 33, 34, 43, 56, 59, 64, 67, 71, 75, 79, 103, 106, 110, 84, 88, 99]}}
{"prediction": {"error_location": 0.662530243396759, "repair_targets": [0.6186521649360657, 0.04770155996084213, 0.005117632448673248], "repair_candidates": [0.0015352544141933322, 0.006719941273331642, 0.005361407063901424, 0.003963893745094538, 0.0027887229807674885, 0.0002543675363995135, 0.0032861754298210144, 0.019715866073966026, 0.0023462637327611446, 0.021558817476034164, 0.001389920711517334, 0.6186521649360657, 1.3515304090105928e-05, 0.04770155996084213, 0.07001516222953796, 3.61731399607379e-05, 0.005117632448673248, 0.004141745623201132, 0.13887596130371094, 0.001638739020563662, 0.002152852714061737, 0.016797751188278198, 0.0007031934801489115, 0.00357667519710958, 0.0008826812263578176, 0.006248698569834232, 0.000535894010681659, 0.000194731677765958, 1.1106104693681118e-06, 0.00011844246182590723, 1.8681283791011083e-06, 6.736270734108984e-05, 0.000408949883421883, 0.0001563091791467741, 0.0018735103076323867, 3.3288015401922166e-05, 0.0049725910648703575, 2.0785071683349088e-05, 0.00025524647207930684, 2.4628188839415088e-05, 8.378572238143533e-05, 2.7145189960720018e-05, 0.0005021113902330399, 1.8295781046617776e-05, 0.0006396055105142295, 0.0009665453108027577, 0.00032286150963045657, 0.0001536629133624956, 9.767093433765694e-05, 8.81102605490014e-05, 0.0002650983806233853, 0.00029391577118076384, 0.0017686106730252504, 1.2796129340131301e-05, 8.592857739131432e-06, 0.00010906032548518851, 7.847660890547559e-05, 0.00037335086381062865, 1.8417642422718927e-05, 3.207309782737866e-05], "target_probs": 0.671471357345581}}


{"result": {"time": "2021-02-11 11:56:58.735220", "n_pass": [1072, 171, 105], "n_token": 110, "loss": [0.7294198274612427, 0.31462547183036804], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["def __init__(", "self", ",", "request", "args", "self", "__init__", "(", "request", "*", "args", "kwargs", "#NEWLINE#", "tenant_choices", "tenants", "has_more", "=", "request", ")", "for", "tenant", "in", "tenants", ":", "#INDENT#", "if", "tenant", "tenant_choices", "net_type", ".", "tenant", "self", "tenant_choices", "self", "self", "request", "request", "neutron_settings", "#NEWLINE#", "seg_id_range", "=", "neutron_settings", ".", "self", ".", "seg_id_range", "=", "seg_id_range", ".", ":", "seg_id_range", ":", "seg_id_range", "#NEWLINE#", "seg_id_help", "'For VLAN networks, the VLAN VID on the physical network that realizes the virtual network. Valid VLAN VIDs are %(vlan_min)s through %(vlan_max)s. For GRE or VXLAN networks, the tunnel ID. Valid tunnel IDs for GRE networks are %(gre_min)s through %(gre_max)s. For VXLAN networks, %(vxlan_min)s through %(vxlan_max)s.'", "self", ".", "seg_id_range", "self", ".", "seg_id_range", "[", ":", "self", ".", "seg_id_range", "self", ".", "seg_id_range", "#NEWLINE#", "self", ".", "seg_id_range", "[", "self", ".", "seg_id_range", "[", "self", ".", "=", "seg_id_help", "#NEWLINE#", "supported_provider_types", "=", "neutron_settings", "(", "supported_provider_types", "network_type_choices", "=", "#INDENT#", "network_type_choices", "net_type", "for", "net_type", "in", "(", "net_type", "supported_provider_types", "(", "network_type_choices", "self", ".", "#INDENT#", "self", "=", "network_type_choices", "#INDENT#", "self"]}}
{"position": {"error_location": 28, "repair_targets": [20, 26, 30], "repair_candidates": [4, 10, 39, 45, 47, 50, 52, 58, 61, 66, 69, 73, 77, 28, 93, 95, 98, 14, 22, 89, 92, 101, 107, 3, 8, 17, 35, 36, 20, 26, 30, 11, 15, 13, 27, 32, 37, 41, 86, 54, 82, 1, 5, 31, 33, 34, 43, 56, 59, 64, 67, 71, 75, 79, 102, 105, 109, 84, 88, 99]}}
{"prediction": {"error_location": 0.4821885824203491, "repair_targets": [0.6599600911140442, 0.06515177339315414, 0.004950370639562607], "repair_candidates": [0.0016151382587850094, 0.00444702198728919, 0.006273938342928886, 0.007761918939650059, 0.0021282497327774763, 0.00028297887183725834, 0.005921381060034037, 0.023581383749842644, 0.0029480105731636286, 0.03350233659148216, 0.0007537346100434661, 0.6599600911140442, 1.1079513569711708e-05, 0.06515177339315414, 0.06786325573921204, 5.865172352059744e-05, 0.004950370639562607, 0.005239842459559441, 0.05370757728815079, 0.006634162273257971, 0.005562662146985531, 0.009890054352581501, 0.00022811978124082088, 0.0035520289093255997, 0.001140811713412404, 0.005584364291280508, 0.0010329597862437367, 0.0003413669764995575, 8.670021998113953e-07, 0.0002572309458628297, 1.8057062334264629e-06, 0.00011034850467694923, 0.000489064899738878, 0.00019922775391023606, 0.0041771200485527515, 4.5380413212114945e-05, 0.006196292582899332, 2.7091677111457102e-05, 0.00036729415296576917, 3.5578243114287034e-05, 7.383563934126869e-05, 3.31832270603627e-05, 0.0004952268791384995, 2.3158117983257398e-05, 0.000637930235825479, 0.0008414509939029813, 0.00039770855801180005, 0.00019974124734289944, 0.00014040608948562294, 0.0001455886522307992, 0.0003753518976736814, 0.0004157083167228848, 0.0029822939541190863, 1.2728821275231894e-05, 1.9090264686383307e-05, 0.0005775634781457484, 5.4836924391565844e-05, 0.0005166818737052381, 1.1714671018125955e-05, 1.319351122219814e-05], "target_probs": 0.7300622463226318}}




Minimal simplified tokens:

['def __init__(', 'self', ',', 'request', 'args', 'self', '__init__', '(', 'request', '*', 'args', 'kwargs', '#NEWLINE#', 'tenant_choices', 'tenants', 'has_more', '=', 'request', ')', 'for', 'tenant', 'in', 'tenants', ':', '#INDENT#', 'if', 'tenant', 'tenant_choices', 'net_type', '.', 'tenant', 'self', 'tenant_choices', 'self', 'self', 'request', 'request', 'neutron_settings', '#NEWLINE#', 'seg_id_range', '=', 'neutron_settings', '.', 'self', '.', 'seg_id_range', '=', 'seg_id_range', '.', ':', 'seg_id_range', ':', 'seg_id_range', '#NEWLINE#', 'seg_id_help', "'For VLAN networks, the VLAN VID on the physical network that realizes the virtual network. Valid VLAN VIDs are %(vlan_min)s through %(vlan_max)s. For GRE or VXLAN networks, the tunnel ID. Valid tunnel IDs for GRE networks are %(gre_min)s through %(gre_max)s. For VXLAN networks, %(vxlan_min)s through %(vxlan_max)s.'", 'self', '.', 'seg_id_range', 'self', '.', 'seg_id_range', '[', ':', 'self', '.', 'seg_id_range', 'self', '.', 'seg_id_range', '#NEWLINE#', 'self', '.', 'seg_id_range', '[', 'self', '.', 'seg_id_range', '[', 'self', '.', '=', 'seg_id_help', '#NEWLINE#', 'supported_provider_types', '=', 'neutron_settings', '(', 'supported_provider_types', 'network_type_choices', '=', '#INDENT#', 'network_type_choices', 'net_type', 'for', 'net_type', 'in', '(', 'net_type', 'supported_provider_types', '(', 'network_type_choices', 'self', '.', '#INDENT#', 'self', '=', 'network_type_choices', '#INDENT#', 'self']
