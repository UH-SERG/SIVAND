
Original sample:

{"has_bug": true, "bug_kind": 1, "bug_kind_name": "VARIABLE_MISUSE", "source_tokens": ["#NEWLINE#", "@", "patch", "(", "'socket.socket'", ")", "#NEWLINE#", "@", "patch", "(", "'select.select'", ",", "return_value", "=", "(", "True", ",", "False", ",", "False", ")", ")", "#NEWLINE#", "def test_update_returns_if_template_render_fails(", "self", ",", "mock_select", ",", "mock_socket", ")", ":", "#NEWLINE#", "#INDENT#", "'Should return None if rendering the template fails.'", "#NEWLINE#", "test_value", "=", "'test_value'", "#NEWLINE#", "mock_socket", "=", "mock_socket", "(", ")", ".", "__enter__", "(", ")", "#NEWLINE#", "mock_socket", ".", "recv", ".", "return_value", "=", "test_value", ".", "encode", "(", ")", "#NEWLINE#", "config", "=", "copy", "(", "TEST_CONFIG", ")", "#NEWLINE#", "config", "[", "tcp", ".", "CONF_VALUE_TEMPLATE", "]", "=", "\"{{ this won't work\"", "#NEWLINE#", "sensor", "=", "tcp", ".", "Sensor", "(", "test_value", ".", "hass", ",", "config", ")", "#NEWLINE#", "assert", "(", "sensor", ".", "update", "(", ")", "is", "None", ")"], "error_location": [83], "repair_targets": [24], "repair_candidates": [28, 39, 41, 49, 77, 92, 61, 68, 87, 26, 24, 35, 55, 83], "provenances": [{"datasetProvenance": {"datasetName": "ETHPy150Open", "filepath": "home-assistant/home-assistant/tests/components/sensor/test_tcp.py", "license": "apache-2.0", "note": "license: bigquery_api"}}], "txt_file": "eval__VARIABLE_MISUSE__SStuB.txt-00001-of-00300", "js_count": 4351, "results": {"model": "transformer", "prob": {"loc": [[0.049403801560401917, 6.946319075495921e-08, 8.835533193973788e-09, 1.802875182477237e-08, 7.70825359097671e-09, 6.7324719132955124e-09, 5.2749618006942e-09, 2.7968607430040038e-09, 1.7457132406306641e-09, 6.5743068766721535e-09, 1.643149616370465e-08, 2.0735759775902807e-09, 5.553253856760421e-09, 1.3148745203750423e-08, 2.1703563390929048e-08, 1.3244265240075492e-08, 4.64344074302403e-09, 8.923329630761145e-09, 5.175619044450741e-09, 1.5346893533774164e-08, 7.3402985911741325e-09, 5.310556883131312e-09, 1.3417444044705462e-08, 6.5670624493918694e-09, 1.153473203885369e-05, 6.28106544553475e-09, 6.020066507517186e-07, 7.10016001548297e-09, 8.872847274687956e-07, 6.315266087852933e-09, 1.4834486528059188e-08, 1.2005798133429835e-08, 8.615266722244996e-09, 3.387303237900596e-08, 9.7069889903878e-09, 4.14185983288462e-08, 5.149871640242054e-08, 2.2373755825810804e-07, 2.2492159246212395e-08, 7.907298709142196e-07, 9.98329596768599e-08, 8.768142834014725e-06, 1.3745753335570043e-07, 8.31196246053878e-07, 1.4610540688408946e-07, 1.3881591875986032e-08, 1.9601114331635472e-07, 4.112237093067961e-07, 7.129271750727639e-08, 1.8687824194785208e-05, 6.947723818484519e-08, 4.587557445034918e-09, 5.49849232811539e-08, 1.1432502944330736e-08, 1.4335031828238698e-08, 1.5122686818358488e-06, 7.427932757764211e-08, 6.367249838490352e-09, 7.131804977689171e-07, 1.913559088961847e-07, 6.538220986840315e-08, 2.1965922769595636e-07, 5.98561271658582e-08, 1.292658513563083e-08, 1.0436052662043949e-06, 0.00014948670286685228, 2.892092254569434e-07, 1.383232159923864e-07, 2.92672666546423e-06, 1.1300608093733899e-07, 0.0030875077936798334, 1.0726736121569047e-07, 7.481479258331092e-08, 2.3519095293522696e-07, 1.1425506727391621e-06, 1.6547568293390214e-06, 1.4271665804699296e-07, 2.8755525249835046e-07, 1.8517184230404382e-08, 9.153156952379504e-07, 1.3505311358130712e-07, 3.3130027610184243e-09, 6.466341915256635e-07, 0.9471411108970642, 2.6663056473807956e-07, 2.8225050741070845e-08, 1.9822803665192623e-07, 0.0001430605334462598, 2.1968060082144802e-07, 1.9189006650321971e-07, 9.430601011217732e-08, 1.660614827869722e-07, 7.878654287196696e-06, 8.609882939936142e-08, 1.3362662087956778e-08, 2.7506584956427105e-06, 1.0921525017693057e-06, 3.830813511740416e-06, 7.090328608683194e-07, 8.29409145808313e-07]], "pointer": [[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.8943974375724792, 0.0, 0.009472673758864403, 0.0, 0.0011556079844012856, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0023473806213587523, 0.0, 0.0, 0.0, 0.0742540955543518, 0.0, 5.133980812388472e-05, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.004696042276918888, 0.0, 0.0, 0.0, 0.0, 0.0, 8.149134373525158e-05, 0.0, 0.0, 0.0, 0.0, 0.0, 0.007835885509848595, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0006952422554604709, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0041718194261193275, 0.0, 0.0, 0.0, 0.0, 0.0, 0.00019174820045009255, 0.0, 0.0, 0.0, 0.00024227202811744064, 0.0, 0.0, 0.0, 0.0, 0.0004070236755069345, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]], "target": [0.8943974375724792]}, "loss": [0.05430709198117256, 0.11160504072904587], "acc": [0.0, 1.0, 1.0, 1.0]}}


Trace of simplified code(s):

{"result": {"time": "2021-02-11 12:12:02.523287", "n_pass": [1, 1, 1], "n_token": 100, "loss": [0.05430709198117256, 0.11160504072904587], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "@", "patch", "(", "'socket.socket'", ")", "#NEWLINE#", "@", "patch", "(", "'select.select'", ",", "return_value", "=", "(", "True", ",", "False", ",", "False", ")", ")", "#NEWLINE#", "def test_update_returns_if_template_render_fails(", "self", ",", "mock_select", ",", "mock_socket", ")", ":", "#NEWLINE#", "#INDENT#", "'Should return None if rendering the template fails.'", "#NEWLINE#", "test_value", "=", "'test_value'", "#NEWLINE#", "mock_socket", "=", "mock_socket", "(", ")", ".", "__enter__", "(", ")", "#NEWLINE#", "mock_socket", ".", "recv", ".", "return_value", "=", "test_value", ".", "encode", "(", ")", "#NEWLINE#", "config", "=", "copy", "(", "TEST_CONFIG", ")", "#NEWLINE#", "config", "[", "tcp", ".", "CONF_VALUE_TEMPLATE", "]", "=", "\"{{ this won't work\"", "#NEWLINE#", "sensor", "=", "tcp", ".", "Sensor", "(", "test_value", ".", "hass", ",", "config", ")", "#NEWLINE#", "assert", "(", "sensor", ".", "update", "(", ")", "is", "None", ")"]}}
{"position": {"error_location": 83, "repair_targets": [24], "repair_candidates": [28, 39, 41, 49, 77, 92, 61, 68, 87, 26, 24, 35, 55, 83]}}
{"prediction": {"error_location": 0.9471411108970642, "repair_targets": [0.8943974375724792], "repair_candidates": [0.8943974375724792, 0.009472673758864403, 0.0011556079844012856, 0.0023473806213587523, 0.0742540955543518, 5.133980812388472e-05, 0.004696042276918888, 8.149134373525158e-05, 0.007835885509848595, 0.0006952422554604709, 0.0041718194261193275, 0.00019174820045009255, 0.00024227202811744064, 0.0004070236755069345], "target_probs": 0.8943974375724792}}


{"result": {"time": "2021-02-11 12:12:02.581546", "n_pass": [20, 2, 2], "n_token": 88, "loss": [0.09605898708105087, 0.33984890580177307], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["return_value", "=", "(", "True", ",", "False", ",", "False", ")", ")", "#NEWLINE#", "def test_update_returns_if_template_render_fails(", "self", ",", "mock_select", ",", "mock_socket", ")", ":", "#NEWLINE#", "#INDENT#", "'Should return None if rendering the template fails.'", "#NEWLINE#", "test_value", "=", "'test_value'", "#NEWLINE#", "mock_socket", "=", "mock_socket", "(", ")", ".", "__enter__", "(", ")", "#NEWLINE#", "mock_socket", ".", "recv", ".", "return_value", "=", "test_value", ".", "encode", "(", ")", "#NEWLINE#", "config", "=", "copy", "(", "TEST_CONFIG", ")", "#NEWLINE#", "config", "[", "tcp", ".", "CONF_VALUE_TEMPLATE", "]", "=", "\"{{ this won't work\"", "#NEWLINE#", "sensor", "=", "tcp", ".", "Sensor", "(", "test_value", ".", "hass", ",", "config", ")", "#NEWLINE#", "assert", "(", "sensor", ".", "update", "(", ")", "is", "None", ")"]}}
{"position": {"error_location": 71, "repair_targets": [12], "repair_candidates": [16, 27, 29, 37, 65, 80, 49, 56, 75, 14, 12, 23, 43, 71]}}
{"prediction": {"error_location": 0.9084103107452393, "repair_targets": [0.7118778824806213], "repair_candidates": [0.7118778824806213, 0.013531295582652092, 0.0019174034241586924, 0.0033903380390256643, 0.09237177670001984, 0.000281815038761124, 0.049266353249549866, 0.00014274936984293163, 0.005667977500706911, 0.00011034582712454721, 0.11559523642063141, 0.0015784988645464182, 0.0002453765773680061, 0.0040228962898254395], "target_probs": 0.7118778824806213}}


{"result": {"time": "2021-02-11 12:12:02.699886", "n_pass": [42, 4, 3], "n_token": 82, "loss": [0.04241587594151497, 0.5337085723876953], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": [",", "False", ")", ")", "#NEWLINE#", "def test_update_returns_if_template_render_fails(", "self", ",", "mock_select", ",", "mock_socket", ")", ":", "#NEWLINE#", "#INDENT#", "'Should return None if rendering the template fails.'", "#NEWLINE#", "test_value", "=", "'test_value'", "#NEWLINE#", "mock_socket", "=", "mock_socket", "(", ")", ".", "__enter__", "(", ")", "#NEWLINE#", "mock_socket", ".", "recv", ".", "return_value", "=", "test_value", ".", "encode", "(", ")", "#NEWLINE#", "config", "=", "copy", "(", "TEST_CONFIG", ")", "#NEWLINE#", "config", "[", "tcp", ".", "CONF_VALUE_TEMPLATE", "]", "=", "\"{{ this won't work\"", "#NEWLINE#", "sensor", "=", "tcp", ".", "Sensor", "(", "test_value", ".", "hass", ",", "config", ")", "#NEWLINE#", "assert", "(", "sensor", ".", "update", "(", ")", "is", "None", ")"]}}
{"position": {"error_location": 65, "repair_targets": [6], "repair_candidates": [10, 21, 23, 31, 59, 74, 43, 50, 69, 8, 6, 17, 37, 65]}}
{"prediction": {"error_location": 0.9584711194038391, "repair_targets": [0.5864261388778687], "repair_candidates": [0.5864261388778687, 0.20251956582069397, 0.005115248262882233, 0.002039263490587473, 0.10796242207288742, 0.0004984466941095889, 0.0658060759305954, 6.60973455524072e-05, 0.008983178995549679, 0.00047793303383514285, 0.018656961619853973, 8.742323552723974e-05, 0.00011341635399730876, 0.0012477048439905047], "target_probs": 0.5864261388778687}}


{"result": {"time": "2021-02-11 12:12:02.815375", "n_pass": [54, 6, 4], "n_token": 75, "loss": [0.050379108637571335, 0.6655517220497131], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": [",", "False", ")", ")", "#NEWLINE#", "def test_update_returns_if_template_render_fails(", "self", ",", "mock_select", ",", "mock_socket", ")", ":", "#NEWLINE#", "#INDENT#", "'Should return None if rendering the template fails.'", "#NEWLINE#", "test_value", "=", "'test_value'", "#NEWLINE#", "mock_socket", "=", "mock_socket", "(", ")", ".", "__enter__", "(", ")", "#NEWLINE#", "mock_socket", ".", "recv", ".", "return_value", "=", "test_value", ".", "encode", "(", ")", "#NEWLINE#", "config", "=", "copy", "(", "TEST_CONFIG", ")", "#NEWLINE#", "config", "[", "tcp", ".", "CONF_VALUE_TEMPLATE", "]", "=", "\"{{ this won't work\"", "#NEWLINE#", "sensor", "=", "tcp", ".", "Sensor", "(", "test_value", ".", "hass", ",", "config", ")", "#NEWLINE#", "assert", "(", "sensor"]}}
{"position": {"error_location": 65, "repair_targets": [6], "repair_candidates": [10, 21, 23, 31, 59, 74, 43, 50, 69, 8, 6, 17, 37, 65]}}
{"prediction": {"error_location": 0.9508689641952515, "repair_targets": [0.5139898657798767], "repair_candidates": [0.5139898657798767, 0.24669063091278076, 0.006891531869769096, 0.0034796271938830614, 0.11467349529266357, 0.0006655480829067528, 0.09172110259532928, 7.050234853522852e-05, 0.011271289549767971, 0.0009727463475428522, 0.0072631677612662315, 0.00015954970149323344, 0.0001147593284258619, 0.0020361733622848988], "target_probs": 0.5139898657798767}}


{"result": {"time": "2021-02-11 12:12:02.990028", "n_pass": [91, 9, 5], "n_token": 72, "loss": [0.07678677886724472, 0.3158673048019409], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": [")", "#NEWLINE#", "def test_update_returns_if_template_render_fails(", "self", ",", "mock_select", ",", "mock_socket", ")", ":", "#NEWLINE#", "#INDENT#", "'Should return None if rendering the template fails.'", "#NEWLINE#", "test_value", "=", "'test_value'", "#NEWLINE#", "mock_socket", "=", "mock_socket", "(", ")", ".", "__enter__", "(", ")", "#NEWLINE#", "mock_socket", ".", "recv", ".", "return_value", "=", "test_value", ".", "encode", "(", ")", "#NEWLINE#", "config", "=", "copy", "(", "TEST_CONFIG", ")", "#NEWLINE#", "config", "[", "tcp", ".", "CONF_VALUE_TEMPLATE", "]", "=", "\"{{ this won't work\"", "#NEWLINE#", "sensor", "=", "tcp", ".", "Sensor", "(", "test_value", ".", "hass", ",", "config", ")", "#NEWLINE#", "assert", "(", "sensor"]}}
{"position": {"error_location": 62, "repair_targets": [3], "repair_candidates": [7, 18, 20, 28, 56, 71, 40, 47, 66, 5, 3, 14, 34, 62]}}
{"prediction": {"error_location": 0.9260873198509216, "repair_targets": [0.7291561961174011], "repair_candidates": [0.7291561961174011, 0.04892129823565483, 0.014827437698841095, 0.005258750636130571, 0.16282406449317932, 0.00016362729365937412, 0.028016608208417892, 0.00017330300761386752, 0.006632072385400534, 0.000508153869304806, 0.0023395752068609, 0.0003093270934186876, 0.00012617011088877916, 0.0007433339487761259], "target_probs": 0.7291561961174011}}


{"result": {"time": "2021-02-11 12:12:03.047684", "n_pass": [94, 10, 6], "n_token": 69, "loss": [0.09009400010108948, 0.2845447361469269], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": [")", "#NEWLINE#", "def test_update_returns_if_template_render_fails(", "self", ",", "mock_select", ",", "mock_socket", ")", "'Should return None if rendering the template fails.'", "#NEWLINE#", "test_value", "=", "'test_value'", "#NEWLINE#", "mock_socket", "=", "mock_socket", "(", ")", ".", "__enter__", "(", ")", "#NEWLINE#", "mock_socket", ".", "recv", ".", "return_value", "=", "test_value", ".", "encode", "(", ")", "#NEWLINE#", "config", "=", "copy", "(", "TEST_CONFIG", ")", "#NEWLINE#", "config", "[", "tcp", ".", "CONF_VALUE_TEMPLATE", "]", "=", "\"{{ this won't work\"", "#NEWLINE#", "sensor", "=", "tcp", ".", "Sensor", "(", "test_value", ".", "hass", ",", "config", ")", "#NEWLINE#", "assert", "(", "sensor"]}}
{"position": {"error_location": 59, "repair_targets": [3], "repair_candidates": [7, 15, 17, 25, 53, 68, 37, 44, 63, 5, 3, 11, 31, 59]}}
{"prediction": {"error_location": 0.9138451814651489, "repair_targets": [0.7523567080497742], "repair_candidates": [0.7523567080497742, 0.03943736478686333, 0.021557969972491264, 0.008715321309864521, 0.15069660544395447, 0.00016996709746308625, 0.01673373579978943, 0.00019140630320180207, 0.005724427290260792, 0.0011018301593139768, 0.0021557281725108624, 0.0004614383215084672, 0.0002443587000016123, 0.0004531749291345477], "target_probs": 0.7523567080497742}}


{"result": {"time": "2021-02-11 12:12:03.105048", "n_pass": [96, 11, 7], "n_token": 66, "loss": [0.2316289097070694, 0.5327231287956238], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": [")", "#NEWLINE#", "def test_update_returns_if_template_render_fails(", "self", ",", "mock_select", ",", "mock_socket", ")", "'Should return None if rendering the template fails.'", "#NEWLINE#", "test_value", "mock_socket", "=", "mock_socket", "(", ")", ".", "__enter__", "(", ")", "#NEWLINE#", "mock_socket", ".", "recv", ".", "return_value", "=", "test_value", ".", "encode", "(", ")", "#NEWLINE#", "config", "=", "copy", "(", "TEST_CONFIG", ")", "#NEWLINE#", "config", "[", "tcp", ".", "CONF_VALUE_TEMPLATE", "]", "=", "\"{{ this won't work\"", "#NEWLINE#", "sensor", "=", "tcp", ".", "Sensor", "(", "test_value", ".", "hass", ",", "config", ")", "#NEWLINE#", "assert", "(", "sensor"]}}
{"position": {"error_location": 56, "repair_targets": [3], "repair_candidates": [7, 12, 14, 22, 50, 65, 34, 41, 60, 5, 3, 11, 28, 56]}}
{"prediction": {"error_location": 0.793240487575531, "repair_targets": [0.5870043039321899], "repair_candidates": [0.5870043039321899, 0.03565753251314163, 0.02233940176665783, 0.00816221535205841, 0.31501641869544983, 0.00023285762290470302, 0.017546718940138817, 0.00021494587417691946, 0.007280060090124607, 0.0007894422742538154, 0.004377543926239014, 0.0006676947232335806, 0.0004334586556069553, 0.0002774396270979196], "target_probs": 0.5870043039321899}}


{"result": {"time": "2021-02-11 12:12:03.162367", "n_pass": [98, 12, 8], "n_token": 63, "loss": [0.3796185553073883, 0.46501225233078003], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": [")", "#NEWLINE#", "def test_update_returns_if_template_render_fails(", "self", ",", "mock_select", ",", "mock_socket", ")", "'Should return None if rendering the template fails.'", "#NEWLINE#", "test_value", "mock_socket", "=", "mock_socket", "__enter__", "(", ")", "#NEWLINE#", "mock_socket", ".", "recv", ".", "return_value", "=", "test_value", ".", "encode", "(", ")", "#NEWLINE#", "config", "=", "copy", "(", "TEST_CONFIG", ")", "#NEWLINE#", "config", "[", "tcp", ".", "CONF_VALUE_TEMPLATE", "]", "=", "\"{{ this won't work\"", "#NEWLINE#", "sensor", "=", "tcp", ".", "Sensor", "(", "test_value", ".", "hass", ",", "config", ")", "#NEWLINE#", "assert", "(", "sensor"]}}
{"position": {"error_location": 53, "repair_targets": [3], "repair_candidates": [7, 12, 14, 19, 47, 62, 31, 38, 57, 5, 3, 11, 25, 53]}}
{"prediction": {"error_location": 0.6841222047805786, "repair_targets": [0.62812739610672], "repair_candidates": [0.62812739610672, 0.025600064545869827, 0.023115692660212517, 0.01455285120755434, 0.278157502412796, 0.000316388817736879, 0.01233060285449028, 0.0005422751419246197, 0.006657553371042013, 0.0007743411115370691, 0.00794333778321743, 0.0010118255158886313, 0.0006576828891411424, 0.0002124355814885348], "target_probs": 0.62812739610672}}


{"result": {"time": "2021-02-11 12:12:03.503774", "n_pass": [108, 18, 9], "n_token": 60, "loss": [0.5114359855651855, 0.6240613460540771], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": [")", "#NEWLINE#", "def test_update_returns_if_template_render_fails(", "self", ",", "mock_select", ",", "mock_socket", ")", "'Should return None if rendering the template fails.'", "#NEWLINE#", "test_value", "mock_socket", "=", "mock_socket", "__enter__", "(", ")", "#NEWLINE#", "mock_socket", ".", "recv", ".", "return_value", "=", "test_value", ".", "encode", "(", ")", "#NEWLINE#", "config", "=", "copy", "(", "TEST_CONFIG", ")", "#NEWLINE#", "config", "[", "tcp", ".", "\"{{ this won't work\"", "#NEWLINE#", "sensor", "=", "tcp", ".", "Sensor", "(", "test_value", ".", "hass", ",", "config", ")", "#NEWLINE#", "assert", "(", "sensor"]}}
{"position": {"error_location": 50, "repair_targets": [3], "repair_candidates": [7, 12, 14, 19, 44, 59, 31, 38, 54, 5, 3, 11, 25, 50]}}
{"prediction": {"error_location": 0.5996339321136475, "repair_targets": [0.5357640981674194], "repair_candidates": [0.5357640981674194, 0.02441619336605072, 0.026441365480422974, 0.0175149068236351, 0.3382975161075592, 0.0004684292362071574, 0.021153656765818596, 0.000936910742893815, 0.012260708957910538, 0.0009448242490179837, 0.018035193905234337, 0.00164948427118361, 0.0019835024140775204, 0.00013323577877599746], "target_probs": 0.5357640981674194}}


{"result": {"time": "2021-02-11 12:12:04.249208", "n_pass": [174, 31, 10], "n_token": 58, "loss": [0.5136029720306396, 0.6299223899841309], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": [")", "#NEWLINE#", "def test_update_returns_if_template_render_fails(", "self", ",", "mock_select", ",", "mock_socket", ")", "'Should return None if rendering the template fails.'", "#NEWLINE#", "test_value", "mock_socket", "=", "mock_socket", "__enter__", "(", ")", "#NEWLINE#", "mock_socket", ".", "recv", ".", "return_value", "=", "test_value", ".", "encode", "(", ")", "#NEWLINE#", "config", "=", "copy", "(", "TEST_CONFIG", ")", "#NEWLINE#", "config", "[", "tcp", ".", "\"{{ this won't work\"", "#NEWLINE#", "sensor", "=", "tcp", ".", "Sensor", "(", "test_value", ".", "hass", ",", "config", ")", "(", "sensor"]}}
{"position": {"error_location": 50, "repair_targets": [3], "repair_candidates": [7, 12, 14, 19, 44, 57, 31, 38, 54, 5, 3, 11, 25, 50]}}
{"prediction": {"error_location": 0.5983359813690186, "repair_targets": [0.5326331257820129], "repair_candidates": [0.5326331257820129, 0.03885155916213989, 0.02526773139834404, 0.01631818152964115, 0.28208398818969727, 0.0004808362864423543, 0.03193826600909233, 0.0021212236024439335, 0.016140911728143692, 0.0014003874966874719, 0.049994096159935, 0.0007793575641699135, 0.0018779848469421268, 0.00011235513375140727], "target_probs": 0.5326331257820129}}


{"result": {"time": "2021-02-11 12:12:04.306232", "n_pass": [175, 32, 11], "n_token": 57, "loss": [0.10460550338029861, 0.11576174944639206], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def test_update_returns_if_template_render_fails(", "self", ",", "mock_select", ",", "mock_socket", ")", "'Should return None if rendering the template fails.'", "#NEWLINE#", "test_value", "mock_socket", "=", "mock_socket", "__enter__", "(", ")", "#NEWLINE#", "mock_socket", ".", "recv", ".", "return_value", "=", "test_value", ".", "encode", "(", ")", "#NEWLINE#", "config", "=", "copy", "(", "TEST_CONFIG", ")", "#NEWLINE#", "config", "[", "tcp", ".", "\"{{ this won't work\"", "#NEWLINE#", "sensor", "=", "tcp", ".", "Sensor", "(", "test_value", ".", "hass", ",", "config", ")", "(", "sensor"]}}
{"position": {"error_location": 49, "repair_targets": [2], "repair_candidates": [6, 11, 13, 18, 43, 56, 30, 37, 53, 4, 2, 10, 24, 49]}}
{"prediction": {"error_location": 0.9006797671318054, "repair_targets": [0.8906874060630798], "repair_candidates": [0.8906874060630798, 0.04639085382223129, 0.004846824333071709, 0.0022452007979154587, 0.03269616886973381, 0.000728415499906987, 0.008978319354355335, 0.000353424868080765, 0.0019878109451383352, 0.0001909042039187625, 0.010582704097032547, 9.181784116663039e-05, 0.00018905833712778986, 3.106064468738623e-05], "target_probs": 0.8906874060630798}}


{"result": {"time": "2021-02-11 12:12:04.474793", "n_pass": [179, 35, 12], "n_token": 56, "loss": [0.1880345493555069, 0.20617280900478363], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def test_update_returns_if_template_render_fails(", "self", "mock_select", ",", "mock_socket", ")", "'Should return None if rendering the template fails.'", "#NEWLINE#", "test_value", "mock_socket", "=", "mock_socket", "__enter__", "(", ")", "#NEWLINE#", "mock_socket", ".", "recv", ".", "return_value", "=", "test_value", ".", "encode", "(", ")", "#NEWLINE#", "config", "=", "copy", "(", "TEST_CONFIG", ")", "#NEWLINE#", "config", "[", "tcp", ".", "\"{{ this won't work\"", "#NEWLINE#", "sensor", "=", "tcp", ".", "Sensor", "(", "test_value", ".", "hass", ",", "config", ")", "(", "sensor"]}}
{"position": {"error_location": 48, "repair_targets": [2], "repair_candidates": [5, 10, 12, 17, 42, 55, 29, 36, 52, 3, 2, 9, 23, 48]}}
{"prediction": {"error_location": 0.8285861015319824, "repair_targets": [0.8136924505233765], "repair_candidates": [0.8136924505233765, 0.09702416509389877, 0.006615663878619671, 0.002736541209742427, 0.036848317831754684, 0.00036450158222578466, 0.021670803427696228, 0.001035594381392002, 0.0042772963643074036, 0.0004297697450965643, 0.014776239171624184, 0.00015386013546958566, 0.00033806118881329894, 3.67010070476681e-05], "target_probs": 0.8136924505233765}}


{"result": {"time": "2021-02-11 12:12:04.531837", "n_pass": [181, 36, 13], "n_token": 55, "loss": [0.2302311658859253, 0.19914165139198303], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def test_update_returns_if_template_render_fails(", "self", "mock_select", "mock_socket", ")", "'Should return None if rendering the template fails.'", "#NEWLINE#", "test_value", "mock_socket", "=", "mock_socket", "__enter__", "(", ")", "#NEWLINE#", "mock_socket", ".", "recv", ".", "return_value", "=", "test_value", ".", "encode", "(", ")", "#NEWLINE#", "config", "=", "copy", "(", "TEST_CONFIG", ")", "#NEWLINE#", "config", "[", "tcp", ".", "\"{{ this won't work\"", "#NEWLINE#", "sensor", "=", "tcp", ".", "Sensor", "(", "test_value", ".", "hass", ",", "config", ")", "(", "sensor"]}}
{"position": {"error_location": 47, "repair_targets": [2], "repair_candidates": [4, 9, 11, 16, 41, 54, 28, 35, 51, 3, 2, 8, 22, 47]}}
{"prediction": {"error_location": 0.7943500876426697, "repair_targets": [0.8194338083267212], "repair_candidates": [0.8194338083267212, 0.0539957657456398, 0.007174045778810978, 0.0033090359065681696, 0.03923652693629265, 0.0002853304904419929, 0.04263830557465553, 0.0019452734850347042, 0.007945315912365913, 0.0006296513602137566, 0.022699493914842606, 0.00020142571884207428, 0.0004756249545607716, 3.0367751605808735e-05], "target_probs": 0.8194338083267212}}


{"result": {"time": "2021-02-11 12:12:04.591643", "n_pass": [183, 37, 14], "n_token": 54, "loss": [0.16067878901958466, 0.09656210988759995], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def test_update_returns_if_template_render_fails(", "self", "mock_select", "mock_socket", "'Should return None if rendering the template fails.'", "#NEWLINE#", "test_value", "mock_socket", "=", "mock_socket", "__enter__", "(", ")", "#NEWLINE#", "mock_socket", ".", "recv", ".", "return_value", "=", "test_value", ".", "encode", "(", ")", "#NEWLINE#", "config", "=", "copy", "(", "TEST_CONFIG", ")", "#NEWLINE#", "config", "[", "tcp", ".", "\"{{ this won't work\"", "#NEWLINE#", "sensor", "=", "tcp", ".", "Sensor", "(", "test_value", ".", "hass", ",", "config", ")", "(", "sensor"]}}
{"position": {"error_location": 46, "repair_targets": [2], "repair_candidates": [4, 8, 10, 15, 40, 53, 27, 34, 50, 3, 2, 7, 21, 46]}}
{"prediction": {"error_location": 0.8515654802322388, "repair_targets": [0.9079535007476807], "repair_candidates": [0.9079535007476807, 0.01167218666523695, 0.004833435174077749, 0.0011121762217953801, 0.026840582489967346, 0.00032466521952301264, 0.03200772777199745, 0.000896007171832025, 0.0038152243942022324, 0.00024283914535772055, 0.00991892721503973, 0.00010027553071267903, 0.00027287937700748444, 9.442602276976686e-06], "target_probs": 0.9079535007476807}}


{"result": {"time": "2021-02-11 12:12:04.648100", "n_pass": [184, 38, 15], "n_token": 53, "loss": [0.15623129904270172, 0.11776699870824814], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def test_update_returns_if_template_render_fails(", "self", "mock_select", "mock_socket", "#NEWLINE#", "test_value", "mock_socket", "=", "mock_socket", "__enter__", "(", ")", "#NEWLINE#", "mock_socket", ".", "recv", ".", "return_value", "=", "test_value", ".", "encode", "(", ")", "#NEWLINE#", "config", "=", "copy", "(", "TEST_CONFIG", ")", "#NEWLINE#", "config", "[", "tcp", ".", "\"{{ this won't work\"", "#NEWLINE#", "sensor", "=", "tcp", ".", "Sensor", "(", "test_value", ".", "hass", ",", "config", ")", "(", "sensor"]}}
{"position": {"error_location": 45, "repair_targets": [2], "repair_candidates": [4, 7, 9, 14, 39, 52, 26, 33, 49, 3, 2, 6, 20, 45]}}
{"prediction": {"error_location": 0.8553612232208252, "repair_targets": [0.8889031410217285], "repair_candidates": [0.8889031410217285, 0.025851448997855186, 0.0021457751281559467, 0.0015750458696857095, 0.03065328113734722, 0.0013129687868058681, 0.03746867924928665, 0.0009431517100892961, 0.0033806494902819395, 0.00022387485660146922, 0.006954974960535765, 0.00020200251310598105, 0.00037470817915163934, 1.0274306077917572e-05], "target_probs": 0.8889031410217285}}


{"result": {"time": "2021-02-11 12:12:04.704883", "n_pass": [185, 39, 16], "n_token": 52, "loss": [0.013867105357348919, 0.0020407983101904392], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def test_update_returns_if_template_render_fails(", "self", "mock_select", "mock_socket", "test_value", "mock_socket", "=", "mock_socket", "__enter__", "(", ")", "#NEWLINE#", "mock_socket", ".", "recv", ".", "return_value", "=", "test_value", ".", "encode", "(", ")", "#NEWLINE#", "config", "=", "copy", "(", "TEST_CONFIG", ")", "#NEWLINE#", "config", "[", "tcp", ".", "\"{{ this won't work\"", "#NEWLINE#", "sensor", "=", "tcp", ".", "Sensor", "(", "test_value", ".", "hass", ",", "config", ")", "(", "sensor"]}}
{"position": {"error_location": 44, "repair_targets": [2], "repair_candidates": [4, 6, 8, 13, 38, 51, 25, 32, 48, 3, 2, 5, 19, 44]}}
{"prediction": {"error_location": 0.9862285852432251, "repair_targets": [0.9979612827301025], "repair_candidates": [0.9979612827301025, 0.00034538202453404665, 5.345981435311842e-07, 6.369214679580182e-05, 0.00023875727492850274, 0.000307823735056445, 0.0004323488683439791, 3.0516604965669103e-05, 0.0002308672555955127, 1.2285993761906866e-05, 0.00036153977271169424, 2.3383402094623307e-06, 1.2338021406321786e-05, 3.8135021895868704e-07], "target_probs": 0.9979612827301025}}


{"result": {"time": "2021-02-11 12:12:04.819358", "n_pass": [190, 41, 17], "n_token": 51, "loss": [0.008305652067065239, 0.005393719766288996], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def test_update_returns_if_template_render_fails(", "self", "mock_select", "mock_socket", "test_value", "mock_socket", "=", "mock_socket", "(", ")", "#NEWLINE#", "mock_socket", ".", "recv", ".", "return_value", "=", "test_value", ".", "encode", "(", ")", "#NEWLINE#", "config", "=", "copy", "(", "TEST_CONFIG", ")", "#NEWLINE#", "config", "[", "tcp", ".", "\"{{ this won't work\"", "#NEWLINE#", "sensor", "=", "tcp", ".", "Sensor", "(", "test_value", ".", "hass", ",", "config", ")", "(", "sensor"]}}
{"position": {"error_location": 43, "repair_targets": [2], "repair_candidates": [4, 6, 8, 12, 37, 50, 24, 31, 47, 3, 2, 5, 18, 43]}}
{"prediction": {"error_location": 0.9917287230491638, "repair_targets": [0.9946208000183105], "repair_candidates": [0.9946208000183105, 0.004436102695763111, 2.4162079625966726e-06, 2.0989866243326105e-05, 8.998031262308359e-05, 0.00010147050488740206, 0.00031861235038377345, 2.2601931050303392e-05, 0.00014952597848605365, 6.119261797721265e-06, 0.0002221917238784954, 1.3539499832404545e-06, 7.497862497984897e-06, 2.961429288461659e-07], "target_probs": 0.9946208000183105}}


{"result": {"time": "2021-02-11 12:12:04.876489", "n_pass": [191, 42, 18], "n_token": 49, "loss": [0.02184612676501274, 0.006909883581101894], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def test_update_returns_if_template_render_fails(", "self", "mock_select", "mock_socket", "test_value", "mock_socket", "=", "mock_socket", "#NEWLINE#", "mock_socket", ".", "recv", ".", "return_value", "=", "test_value", ".", "encode", "(", ")", "#NEWLINE#", "config", "=", "copy", "(", "TEST_CONFIG", ")", "#NEWLINE#", "config", "[", "tcp", ".", "\"{{ this won't work\"", "#NEWLINE#", "sensor", "=", "tcp", ".", "Sensor", "(", "test_value", ".", "hass", ",", "config", ")", "(", "sensor"]}}
{"position": {"error_location": 41, "repair_targets": [2], "repair_candidates": [4, 6, 8, 10, 35, 48, 22, 29, 45, 3, 2, 5, 16, 41]}}
{"prediction": {"error_location": 0.9783909916877747, "repair_targets": [0.9931139349937439], "repair_candidates": [0.9931139349937439, 0.004008685238659382, 0.0005160510190762579, 9.146148659056053e-05, 0.00026961928233504295, 6.277551619859878e-06, 0.001021891599521041, 3.8086047425167635e-05, 0.0003568034735508263, 1.5210300261969678e-05, 0.0005225716740824282, 3.955183274229057e-06, 3.3519398130010813e-05, 1.967820935533382e-06], "target_probs": 0.9931139349937439}}


{"result": {"time": "2021-02-11 12:12:04.936069", "n_pass": [193, 43, 19], "n_token": 47, "loss": [0.03177303448319435, 0.015966787934303284], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def test_update_returns_if_template_render_fails(", "self", "mock_select", "mock_socket", "test_value", "mock_socket", "=", "mock_socket", "#NEWLINE#", "mock_socket", ".", "return_value", "=", "test_value", ".", "encode", "(", ")", "#NEWLINE#", "config", "=", "copy", "(", "TEST_CONFIG", ")", "#NEWLINE#", "config", "[", "tcp", ".", "\"{{ this won't work\"", "#NEWLINE#", "sensor", "=", "tcp", ".", "Sensor", "(", "test_value", ".", "hass", ",", "config", ")", "(", "sensor"]}}
{"position": {"error_location": 39, "repair_targets": [2], "repair_candidates": [4, 6, 8, 10, 33, 46, 20, 27, 43, 3, 2, 5, 14, 39]}}
{"prediction": {"error_location": 0.9687265157699585, "repair_targets": [0.9841600060462952], "repair_candidates": [0.9841600060462952, 0.014828708954155445, 2.0129227777943015e-05, 0.00016567937564104795, 0.0001536471681902185, 9.233523087459616e-06, 0.00017512901104055345, 4.037559119751677e-05, 0.00030701211653649807, 1.3684983059647493e-05, 7.783192268107086e-05, 2.4419954570475966e-05, 2.1729170839535072e-05, 2.327009497093968e-06], "target_probs": 0.9841600060462952}}


{"result": {"time": "2021-02-11 12:12:04.992874", "n_pass": [194, 44, 20], "n_token": 45, "loss": [0.015029525384306908, 0.024292558431625366], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def test_update_returns_if_template_render_fails(", "self", "mock_select", "mock_socket", "test_value", "mock_socket", "=", "mock_socket", "#NEWLINE#", "mock_socket", "=", "test_value", ".", "encode", "(", ")", "#NEWLINE#", "config", "=", "copy", "(", "TEST_CONFIG", ")", "#NEWLINE#", "config", "[", "tcp", ".", "\"{{ this won't work\"", "#NEWLINE#", "sensor", "=", "tcp", ".", "Sensor", "(", "test_value", ".", "hass", ",", "config", ")", "(", "sensor"]}}
{"position": {"error_location": 37, "repair_targets": [2], "repair_candidates": [4, 6, 8, 10, 31, 44, 18, 25, 41, 3, 2, 5, 12, 37]}}
{"prediction": {"error_location": 0.9850828647613525, "repair_targets": [0.9760001301765442], "repair_candidates": [0.9760001301765442, 0.019616730511188507, 1.1158133020217065e-05, 0.0001661218557273969, 0.0005757914623245597, 7.854898285586387e-06, 0.0030370564199984074, 7.18546289135702e-05, 0.00023699674056842923, 1.2318261724431068e-05, 0.00024540803860872984, 4.460182935872581e-06, 1.1776136489061173e-05, 2.3047725790092954e-06], "target_probs": 0.9760001301765442}}


{"result": {"time": "2021-02-11 12:12:05.334065", "n_pass": [203, 50, 21], "n_token": 43, "loss": [0.019756559282541275, 0.027256660163402557], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def test_update_returns_if_template_render_fails(", "self", "mock_select", "mock_socket", "test_value", "mock_socket", "=", "mock_socket", "#NEWLINE#", "mock_socket", "=", "test_value", ".", "encode", "(", ")", "#NEWLINE#", "config", "=", "copy", "(", "TEST_CONFIG", ")", "#NEWLINE#", "config", "[", "\"{{ this won't work\"", "#NEWLINE#", "sensor", "=", "tcp", ".", "Sensor", "(", "test_value", ".", "hass", ",", "config", ")", "(", "sensor"]}}
{"position": {"error_location": 35, "repair_targets": [2], "repair_candidates": [4, 6, 8, 10, 29, 42, 18, 25, 39, 3, 2, 5, 12, 35]}}
{"prediction": {"error_location": 0.9804373383522034, "repair_targets": [0.9731114506721497], "repair_candidates": [0.9731114506721497, 0.02082109823822975, 1.3335699804883916e-05, 0.00023323431378230453, 0.0009081981261260808, 7.4272920755902305e-06, 0.004131802823394537, 5.05223979416769e-05, 0.00015853602963034064, 2.6294121198588982e-05, 0.0005182638997212052, 6.253315859794384e-06, 1.1583339983189944e-05, 2.0091065380256623e-06], "target_probs": 0.9731114506721497}}


{"result": {"time": "2021-02-11 12:12:05.390297", "n_pass": [204, 51, 22], "n_token": 41, "loss": [0.10759267210960388, 0.09473360329866409], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def test_update_returns_if_template_render_fails(", "self", "mock_select", "mock_socket", "test_value", "mock_socket", "=", "mock_socket", "#NEWLINE#", "mock_socket", "=", "test_value", ".", "encode", "(", ")", "#NEWLINE#", "config", "=", "copy", "(", "TEST_CONFIG", ")", "#NEWLINE#", "config", "[", "sensor", "=", "tcp", ".", "Sensor", "(", "test_value", ".", "hass", ",", "config", ")", "(", "sensor"]}}
{"position": {"error_location": 33, "repair_targets": [2], "repair_candidates": [4, 6, 8, 10, 27, 40, 18, 25, 37, 3, 2, 5, 12, 33]}}
{"prediction": {"error_location": 0.8979935050010681, "repair_targets": [0.9096152186393738], "repair_candidates": [0.9096152186393738, 0.00819714181125164, 8.513429747836199e-06, 0.00487498939037323, 0.012135930359363556, 0.00023438830976374447, 0.030553972348570824, 0.0020621581934392452, 0.007671973202377558, 0.01811137981712818, 0.0062681762501597404, 8.404169057030231e-05, 9.766603034222499e-05, 8.456636714981869e-05], "target_probs": 0.9096152186393738}}


{"result": {"time": "2021-02-11 12:12:05.447058", "n_pass": [206, 52, 23], "n_token": 39, "loss": [0.10650381445884705, 0.10344602167606354], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def test_update_returns_if_template_render_fails(", "self", "mock_select", "mock_socket", "test_value", "mock_socket", "=", "mock_socket", "#NEWLINE#", "mock_socket", "=", "test_value", ".", "encode", "(", ")", "#NEWLINE#", "config", "=", "copy", "(", "TEST_CONFIG", ")", "#NEWLINE#", "config", "[", "sensor", "=", "Sensor", "(", "test_value", ".", "hass", ",", "config", ")", "(", "sensor"]}}
{"position": {"error_location": 31, "repair_targets": [2], "repair_candidates": [4, 6, 8, 10, 27, 38, 18, 25, 35, 3, 2, 5, 12, 31]}}
{"prediction": {"error_location": 0.8989716172218323, "repair_targets": [0.9017246961593628], "repair_candidates": [0.9017246961593628, 0.002840609522536397, 1.0757440577435773e-05, 0.007237681187689304, 0.01924789510667324, 0.00043311394983902574, 0.04046005755662918, 0.0025660847313702106, 0.006740986835211515, 0.012323051691055298, 0.006030710879713297, 0.00010052243305835873, 0.00014452690083999187, 0.00013928234693594277], "target_probs": 0.9017246961593628}}


{"result": {"time": "2021-02-11 12:12:05.503549", "n_pass": [207, 53, 24], "n_token": 37, "loss": [0.16189570724964142, 0.11954813450574875], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def test_update_returns_if_template_render_fails(", "self", "mock_select", "mock_socket", "test_value", "mock_socket", "=", "mock_socket", "#NEWLINE#", "mock_socket", "=", "test_value", ".", "encode", "(", ")", "#NEWLINE#", "config", "=", "copy", "(", "TEST_CONFIG", ")", "#NEWLINE#", "config", "[", "sensor", "=", "test_value", ".", "hass", ",", "config", ")", "(", "sensor"]}}
{"position": {"error_location": 29, "repair_targets": [2], "repair_candidates": [4, 6, 8, 10, 27, 36, 18, 25, 33, 3, 2, 5, 12, 29]}}
{"prediction": {"error_location": 0.8505299091339111, "repair_targets": [0.8873212933540344], "repair_candidates": [0.8873212933540344, 0.0022832192480564117, 1.5555464415228926e-05, 0.010971865616738796, 0.03160903975367546, 0.0003570683766156435, 0.04198131710290909, 0.0023324943613260984, 0.007307817693799734, 0.004851271864026785, 0.010660815052688122, 0.00011216854909434915, 0.00011482078116387129, 8.127450564643368e-05], "target_probs": 0.8873212933540344}}


{"result": {"time": "2021-02-11 12:12:05.559527", "n_pass": [209, 54, 25], "n_token": 35, "loss": [0.31098175048828125, 0.15065176784992218], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def test_update_returns_if_template_render_fails(", "self", "mock_select", "mock_socket", "test_value", "mock_socket", "=", "mock_socket", "#NEWLINE#", "mock_socket", "=", "test_value", ".", "encode", "(", ")", "#NEWLINE#", "config", "=", "copy", "(", "TEST_CONFIG", ")", "#NEWLINE#", "config", "[", "sensor", "=", "test_value", ".", "config", ")", "(", "sensor"]}}
{"position": {"error_location": 29, "repair_targets": [2], "repair_candidates": [4, 6, 8, 10, 27, 34, 18, 25, 31, 3, 2, 5, 12, 29]}}
{"prediction": {"error_location": 0.7327271699905396, "repair_targets": [0.8601471781730652], "repair_candidates": [0.8601471781730652, 0.0028328620828688145, 8.83662960404763e-06, 0.013749634847044945, 0.030191611498594284, 0.00019552720186766237, 0.016579311341047287, 0.0019658345263451338, 0.05970323085784912, 0.0022955911699682474, 0.006867557298392057, 0.00013934016169514507, 0.005284730810672045, 3.8676069380017e-05], "target_probs": 0.8601471781730652}}


{"result": {"time": "2021-02-11 12:12:05.786376", "n_pass": [223, 58, 26], "n_token": 33, "loss": [0.9110438227653503, 0.25996050238609314], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def test_update_returns_if_template_render_fails(", "self", "mock_select", "mock_socket", "test_value", "mock_socket", "=", "mock_socket", "#NEWLINE#", "mock_socket", "=", "test_value", "(", ")", "#NEWLINE#", "config", "=", "copy", "(", "TEST_CONFIG", ")", "#NEWLINE#", "config", "[", "sensor", "=", "test_value", ".", "config", ")", "(", "sensor"]}}
{"position": {"error_location": 27, "repair_targets": [2], "repair_candidates": [4, 6, 8, 10, 25, 32, 16, 23, 29, 3, 2, 5, 12, 27]}}
{"prediction": {"error_location": 0.40210431814193726, "repair_targets": [0.7710820436477661], "repair_candidates": [0.7710820436477661, 0.01109754666686058, 5.500902989297174e-05, 0.03946376591920853, 0.04883773624897003, 0.00026451676967553794, 0.02036071941256523, 0.0008505976875312626, 0.06827955693006516, 0.0030745810363441706, 0.02606917917728424, 0.00013273728836793453, 0.01041184552013874, 2.0132280042162165e-05], "target_probs": 0.7710820436477661}}


{"result": {"time": "2021-02-11 12:12:06.802719", "n_pass": [283, 76, 27], "n_token": 32, "loss": [0.49913686513900757, 0.05215003713965416], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def test_update_returns_if_template_render_fails(", "self", "mock_select", "mock_socket", "test_value", "mock_socket", "=", "mock_socket", "#NEWLINE#", "mock_socket", "=", "test_value", "(", ")", "#NEWLINE#", "config", "=", "copy", "(", "TEST_CONFIG", ")", "#NEWLINE#", "config", "[", "sensor", "=", "test_value", ".", "config", ")", "sensor"]}}
{"position": {"error_location": 27, "repair_targets": [2], "repair_candidates": [4, 6, 8, 10, 25, 31, 16, 23, 29, 3, 2, 5, 12, 27]}}
{"prediction": {"error_location": 0.6070543527603149, "repair_targets": [0.9491864442825317], "repair_candidates": [0.9491864442825317, 0.002753347624093294, 1.3643062629853375e-05, 0.009538901969790459, 0.019456779584288597, 0.0001323176984442398, 0.0038005798123776913, 0.00014952362107578665, 0.013741894625127316, 7.0350848545786e-05, 0.0007677964167669415, 1.4748559806321282e-05, 0.0003722844703588635, 1.4392029470400303e-06], "target_probs": 0.9491864442825317}}


{"result": {"time": "2021-02-11 12:12:07.030036", "n_pass": [293, 80, 28], "n_token": 31, "loss": [0.028730910271406174, 0.003649628022685647], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def test_update_returns_if_template_render_fails(", "self", "mock_select", "mock_socket", "test_value", "mock_socket", "=", "mock_socket", "mock_socket", "=", "test_value", "(", ")", "#NEWLINE#", "config", "=", "copy", "(", "TEST_CONFIG", ")", "#NEWLINE#", "config", "[", "sensor", "=", "test_value", ".", "config", ")", "sensor"]}}
{"position": {"error_location": 26, "repair_targets": [2], "repair_candidates": [4, 6, 8, 9, 24, 30, 15, 22, 28, 3, 2, 5, 11, 26]}}
{"prediction": {"error_location": 0.9716778993606567, "repair_targets": [0.9963570237159729], "repair_candidates": [0.9963570237159729, 0.00033959667780436575, 4.964655317962752e-07, 1.7956288502318785e-05, 0.0003325861762277782, 0.00019350853108335286, 0.00017850285803433508, 0.00025362244923599064, 0.002002337947487831, 1.8817507225321606e-05, 0.00018176190496888012, 2.6273198727722047e-06, 0.00012006329779978842, 1.0538630021983408e-06], "target_probs": 0.9963570237159729}}


{"result": {"time": "2021-02-11 12:12:07.086674", "n_pass": [295, 81, 29], "n_token": 30, "loss": [0.2736624479293823, 0.014376189559698105], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def test_update_returns_if_template_render_fails(", "self", "mock_select", "mock_socket", "test_value", "mock_socket", "=", "mock_socket", "mock_socket", "test_value", "(", ")", "#NEWLINE#", "config", "=", "copy", "(", "TEST_CONFIG", ")", "#NEWLINE#", "config", "[", "sensor", "=", "test_value", ".", "config", ")", "sensor"]}}
{"position": {"error_location": 25, "repair_targets": [2], "repair_candidates": [4, 6, 8, 9, 23, 29, 14, 21, 27, 3, 2, 5, 10, 25]}}
{"prediction": {"error_location": 0.7605887651443481, "repair_targets": [0.9857266545295715], "repair_candidates": [0.9857266545295715, 0.0009013041853904724, 7.248822839756031e-06, 7.826824730727822e-05, 0.0003891698142979294, 0.00044265674659982324, 0.0002362858795095235, 0.0022509999107569456, 0.008424768224358559, 7.139588706195354e-05, 0.0006881237495690584, 2.4297112759086303e-05, 0.0007536882185377181, 5.10471863890416e-06], "target_probs": 0.9857266545295715}}


{"result": {"time": "2021-02-11 12:12:07.143336", "n_pass": [297, 82, 30], "n_token": 29, "loss": [0.07374455034732819, 0.013012001290917397], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def test_update_returns_if_template_render_fails(", "self", "mock_select", "mock_socket", "test_value", "mock_socket", "=", "mock_socket", "mock_socket", "test_value", ")", "#NEWLINE#", "config", "=", "copy", "(", "TEST_CONFIG", ")", "#NEWLINE#", "config", "[", "sensor", "=", "test_value", ".", "config", ")", "sensor"]}}
{"position": {"error_location": 24, "repair_targets": [2], "repair_candidates": [4, 6, 8, 9, 22, 28, 13, 20, 26, 3, 2, 5, 10, 24]}}
{"prediction": {"error_location": 0.9289089441299438, "repair_targets": [0.9870722889900208], "repair_candidates": [0.9870722889900208, 0.0009360579424537718, 2.590989606687799e-05, 0.00013456055603455752, 0.00021548003132920712, 0.0003024089673999697, 0.0003732689074240625, 0.005216323304921389, 0.005126648116856813, 3.1658368243370205e-05, 0.0002788853889796883, 1.4556066162185743e-05, 0.00026247624191455543, 9.455657163925935e-06], "target_probs": 0.9870722889900208}}


{"result": {"time": "2021-02-11 12:12:07.199418", "n_pass": [298, 83, 31], "n_token": 28, "loss": [0.05835196003317833, 0.009218855760991573], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def test_update_returns_if_template_render_fails(", "self", "mock_select", "mock_socket", "test_value", "mock_socket", "=", "mock_socket", "mock_socket", "test_value", "#NEWLINE#", "config", "=", "copy", "(", "TEST_CONFIG", ")", "#NEWLINE#", "config", "[", "sensor", "=", "test_value", ".", "config", ")", "sensor"]}}
{"position": {"error_location": 23, "repair_targets": [2], "repair_candidates": [4, 6, 8, 9, 21, 27, 12, 19, 25, 3, 2, 5, 10, 23]}}
{"prediction": {"error_location": 0.9433180093765259, "repair_targets": [0.99082350730896], "repair_candidates": [0.99082350730896, 0.0010025688679888844, 2.396075797150843e-05, 0.00017075474897865206, 0.0002586072077974677, 0.00014279154129326344, 0.00012567706289701164, 0.0011693270644173026, 0.00564070139080286, 2.669861714821309e-05, 0.0003466327325440943, 2.2684120267513208e-05, 0.00023890152806416154, 7.1852946348371916e-06], "target_probs": 0.99082350730896}}


{"result": {"time": "2021-02-11 12:12:07.258504", "n_pass": [299, 84, 32], "n_token": 27, "loss": [0.021602800115942955, 0.0011754385195672512], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def test_update_returns_if_template_render_fails(", "self", "mock_select", "mock_socket", "test_value", "mock_socket", "=", "mock_socket", "mock_socket", "test_value", "config", "=", "copy", "(", "TEST_CONFIG", ")", "#NEWLINE#", "config", "[", "sensor", "=", "test_value", ".", "config", ")", "sensor"]}}
{"position": {"error_location": 22, "repair_targets": [2], "repair_candidates": [4, 6, 8, 9, 20, 26, 11, 18, 24, 3, 2, 5, 10, 22]}}
{"prediction": {"error_location": 0.9786288738250732, "repair_targets": [0.9988252520561218], "repair_candidates": [0.9988252520561218, 0.00016004865756258368, 1.5499537084906478e-06, 5.772192253061803e-06, 0.00011955590889556333, 0.00012538077135104686, 4.7918667405610904e-05, 0.00028144571115262806, 0.0002998423296958208, 2.725134891079506e-06, 0.00010322072921553627, 2.08597703021951e-06, 2.411432797089219e-05, 1.1388624443497974e-06], "target_probs": 0.9988252520561218}}


{"result": {"time": "2021-02-11 12:12:07.314938", "n_pass": [301, 85, 33], "n_token": 26, "loss": [0.008820381946861744, 0.0007919227937236428], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def test_update_returns_if_template_render_fails(", "self", "mock_select", "mock_socket", "test_value", "mock_socket", "=", "mock_socket", "mock_socket", "test_value", "config", "copy", "(", "TEST_CONFIG", ")", "#NEWLINE#", "config", "[", "sensor", "=", "test_value", ".", "config", ")", "sensor"]}}
{"position": {"error_location": 21, "repair_targets": [2], "repair_candidates": [4, 6, 8, 9, 19, 25, 11, 17, 23, 3, 2, 5, 10, 21]}}
{"prediction": {"error_location": 0.9912183880805969, "repair_targets": [0.999208390712738], "repair_candidates": [0.999208390712738, 0.00020827571279369295, 2.9212937988631893e-06, 4.56255475000944e-06, 2.21654318011133e-05, 2.9130465918569826e-05, 1.5899241816441645e-06, 0.00016892034909687936, 0.0003023131284862757, 2.1145187929505482e-06, 2.3536211301689036e-05, 5.584289510807139e-07, 2.3711016183369793e-05, 1.7682805264485069e-06], "target_probs": 0.999208390712738}}


{"result": {"time": "2021-02-11 12:12:07.371067", "n_pass": [302, 86, 34], "n_token": 25, "loss": [0.03460143879055977, 0.001215421361848712], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def test_update_returns_if_template_render_fails(", "self", "mock_select", "mock_socket", "test_value", "mock_socket", "=", "mock_socket", "mock_socket", "test_value", "config", "(", "TEST_CONFIG", ")", "#NEWLINE#", "config", "[", "sensor", "=", "test_value", ".", "config", ")", "sensor"]}}
{"position": {"error_location": 20, "repair_targets": [2], "repair_candidates": [4, 6, 8, 9, 18, 24, 11, 16, 22, 3, 2, 5, 10, 20]}}
{"prediction": {"error_location": 0.9659902453422546, "repair_targets": [0.9987853169441223], "repair_candidates": [0.9987853169441223, 0.0001661564310779795, 5.643951681122417e-06, 1.1928479580092244e-05, 5.31998994119931e-05, 8.823247480904683e-05, 1.987707582884468e-05, 0.00039962344453670084, 0.00033294616150669754, 6.588576070498675e-06, 5.816857083118521e-05, 1.0257051599182887e-06, 6.736086652381346e-05, 3.88084754376905e-06], "target_probs": 0.9987853169441223}}


{"result": {"time": "2021-02-11 12:12:07.427974", "n_pass": [303, 87, 35], "n_token": 24, "loss": [0.009688381105661392, 0.0010636142687872052], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def test_update_returns_if_template_render_fails(", "self", "mock_select", "mock_socket", "test_value", "mock_socket", "=", "mock_socket", "mock_socket", "test_value", "config", "TEST_CONFIG", ")", "#NEWLINE#", "config", "[", "sensor", "=", "test_value", ".", "config", ")", "sensor"]}}
{"position": {"error_location": 19, "repair_targets": [2], "repair_candidates": [4, 6, 8, 9, 17, 23, 11, 15, 21, 3, 2, 5, 10, 19]}}
{"prediction": {"error_location": 0.9903584122657776, "repair_targets": [0.9989369511604309], "repair_candidates": [0.9989369511604309, 0.0002791399892885238, 1.2194368537166156e-05, 4.970246209268225e-06, 1.6327954654116184e-05, 6.491941894637421e-05, 1.251831326953834e-05, 0.00043853948591277003, 0.0001587581937201321, 8.656383215566166e-06, 1.2331723155512009e-05, 1.6141706282724044e-06, 4.063351298100315e-05, 1.2444061212590896e-05], "target_probs": 0.9989369511604309}}


{"result": {"time": "2021-02-11 12:12:07.484159", "n_pass": [304, 88, 36], "n_token": 23, "loss": [0.006493421271443367, 0.00440235948190093], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def test_update_returns_if_template_render_fails(", "self", "mock_select", "mock_socket", "test_value", "mock_socket", "=", "mock_socket", "mock_socket", "test_value", "config", ")", "#NEWLINE#", "config", "[", "sensor", "=", "test_value", ".", "config", ")", "sensor"]}}
{"position": {"error_location": 18, "repair_targets": [2], "repair_candidates": [4, 6, 8, 9, 16, 22, 11, 14, 20, 3, 2, 5, 10, 18]}}
{"prediction": {"error_location": 0.9935277104377747, "repair_targets": [0.995607316493988], "repair_candidates": [0.995607316493988, 0.0018568329978734255, 0.0001391339028486982, 5.588726253336063e-06, 0.00015676191833335906, 0.0006047399947419763, 0.0005155730177648365, 0.00046561352792195976, 0.0004110090958420187, 2.3355460143648088e-05, 4.3377545807743445e-05, 7.027017545624403e-07, 2.7935424441238865e-05, 0.00014208076754584908], "target_probs": 0.995607316493988}}


{"result": {"time": "2021-02-11 12:12:07.540014", "n_pass": [305, 89, 37], "n_token": 22, "loss": [0.01116492785513401, 0.0032859728671610355], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def test_update_returns_if_template_render_fails(", "self", "mock_select", "mock_socket", "test_value", "mock_socket", "=", "mock_socket", "mock_socket", "test_value", "config", "#NEWLINE#", "config", "[", "sensor", "=", "test_value", ".", "config", ")", "sensor"]}}
{"position": {"error_location": 17, "repair_targets": [2], "repair_candidates": [4, 6, 8, 9, 15, 21, 11, 13, 19, 3, 2, 5, 10, 17]}}
{"prediction": {"error_location": 0.9888970255851746, "repair_targets": [0.9967194199562073], "repair_candidates": [0.9967194199562073, 0.0026854982133954763, 7.192033990577329e-06, 3.449844371061772e-06, 4.714944589068182e-05, 0.0001498793571954593, 9.751413017511368e-05, 0.00010401600593468174, 9.111472900258377e-05, 6.292812486208277e-06, 1.849004729592707e-05, 9.911872211887385e-07, 1.60673134814715e-05, 5.297303505358286e-05], "target_probs": 0.9967194199562073}}


{"result": {"time": "2021-02-11 12:12:07.598227", "n_pass": [306, 90, 38], "n_token": 21, "loss": [0.00921744666993618, 0.002819276647642255], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def test_update_returns_if_template_render_fails(", "self", "mock_select", "mock_socket", "test_value", "mock_socket", "=", "mock_socket", "mock_socket", "test_value", "config", "config", "[", "sensor", "=", "test_value", ".", "config", ")", "sensor"]}}
{"position": {"error_location": 16, "repair_targets": [2], "repair_candidates": [4, 6, 8, 9, 14, 20, 11, 12, 18, 3, 2, 5, 10, 16]}}
{"prediction": {"error_location": 0.9908249974250793, "repair_targets": [0.997184693813324], "repair_candidates": [0.997184693813324, 0.0002130514767486602, 2.815244215526036e-06, 1.9172409793100087e-06, 1.5040252037579194e-05, 2.8451810067053884e-05, 7.415203526761616e-07, 7.576039479317842e-06, 0.00046538733295165, 0.0020396646577864885, 1.4112581084191334e-05, 1.618692806459876e-07, 2.5768178602447733e-05, 6.946885946490511e-07], "target_probs": 0.997184693813324}}


{"result": {"time": "2021-02-11 12:12:07.821404", "n_pass": [314, 94, 39], "n_token": 20, "loss": [0.05362161621451378, 0.004507851786911488], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def test_update_returns_if_template_render_fails(", "self", "mock_select", "mock_socket", "test_value", "mock_socket", "=", "mock_socket", "mock_socket", "test_value", "config", "config", "[", "sensor", "=", "test_value", ".", "config", "sensor"]}}
{"position": {"error_location": 16, "repair_targets": [2], "repair_candidates": [4, 6, 8, 9, 14, 19, 11, 12, 18, 3, 2, 5, 10, 16]}}
{"prediction": {"error_location": 0.9477906823158264, "repair_targets": [0.9955022931098938], "repair_candidates": [0.9955022931098938, 0.0003504364867694676, 3.0320619771373458e-05, 5.188423983781831e-06, 0.0007309182547032833, 0.0013632483314722776, 0.0004876919265370816, 9.962879630620591e-06, 0.0002755393797997385, 0.0008545174496248364, 0.00027944002067670226, 5.40060739240289e-07, 2.7730862711905502e-05, 8.220105519285426e-05], "target_probs": 0.9955022931098938}}


{"result": {"time": "2021-02-11 12:12:08.048995", "n_pass": [329, 98, 40], "n_token": 19, "loss": [0.6446784138679504, 0.23040629923343658], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def test_update_returns_if_template_render_fails(", "self", "mock_select", "mock_socket", "test_value", "mock_socket", "=", "mock_socket", "mock_socket", "test_value", "config", "config", "sensor", "=", "test_value", ".", "config", "sensor"]}}
{"position": {"error_location": 15, "repair_targets": [2], "repair_candidates": [4, 6, 8, 9, 13, 18, 11, 12, 17, 3, 2, 5, 10, 15]}}
{"prediction": {"error_location": 0.5248312950134277, "repair_targets": [0.7942108511924744], "repair_candidates": [0.7942108511924744, 0.014323641546070576, 0.0008470797329209745, 0.000269606796791777, 0.0030451249331235886, 0.003700345754623413, 0.004579778295010328, 0.0013727684272453189, 0.054898347705602646, 0.11499398201704025, 0.005180806387215853, 6.283502443693578e-05, 0.0015099192969501019, 0.0010049716802313924], "target_probs": 0.7942108511924744}}




Minimal simplified tokens:

['#NEWLINE#', 'def test_update_returns_if_template_render_fails(', 'self', 'mock_select', 'mock_socket', 'test_value', 'mock_socket', '=', 'mock_socket', 'mock_socket', 'test_value', 'config', 'config', 'sensor', '=', 'test_value', '.', 'config', 'sensor']
