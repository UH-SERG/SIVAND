
Original sample:

{"has_bug": true, "bug_kind": 1, "bug_kind_name": "VARIABLE_MISUSE", "source_tokens": ["#NEWLINE#", "def test_queue_name(", "self", ")", ":", "#NEWLINE#", "#INDENT#", "obj", "=", "amqp_queue", ".", "Queue", "(", "obj", ".", "chan", ",", "'my-queue'", ")", "#NEWLINE#", "expectation", "=", "{", "#NEWLINE#", "#INDENT#", "'arguments'", ":", "{", "#NEWLINE#", "#INDENT#", "#NEWLINE#", "#UNINDENT#", "}", ",", "#NEWLINE#", "'auto_delete'", ":", "False", ",", "#NEWLINE#", "'durable'", ":", "False", ",", "#NEWLINE#", "'exclusive'", ":", "False", ",", "#NEWLINE#", "'nowait'", ":", "False", ",", "#NEWLINE#", "'passive'", ":", "False", ",", "#NEWLINE#", "'queue'", ":", "'my-queue'", ",", "#NEWLINE#", "'ticket'", ":", "0", ",", "#NEWLINE#", "#UNINDENT#", "}", "#NEWLINE#", "self", ".", "assertDictEqual", "(", "dict", "(", "obj", ".", "_declare", "(", "False", ")", ")", ",", "expectation", ")"], "error_location": [13], "repair_targets": [2, 73], "repair_candidates": [20, 87, 7, 13, 79, 2, 73], "provenances": [{"datasetProvenance": {"datasetName": "ETHPy150Open", "filepath": "gmr/rabbitpy/tests/queue_tests.py", "license": "bsd-3-clause", "note": "license: bigquery_api"}}], "txt_file": "eval__VARIABLE_MISUSE__SStuB.txt-00001-of-00300", "js_count": 3620, "results": {"model": "transformer", "prob": {"loc": [[8.792670996626839e-05, 1.3708307822213328e-09, 1.6654269074933836e-08, 1.326409988788857e-11, 1.3686923122646633e-11, 1.9569335735214466e-11, 1.3998410069993028e-11, 2.481652661145972e-09, 1.0699044948603298e-11, 3.476926385692636e-11, 8.702132764382142e-11, 1.79896809254787e-11, 6.08347469621684e-11, 0.9999117851257324, 2.849805946780748e-10, 6.455224799140069e-09, 2.303426893668359e-11, 1.9052176503109308e-10, 6.419901069087963e-12, 2.465113616706427e-12, 4.2983330783563645e-10, 1.3144765224210042e-12, 1.3745524683750343e-11, 3.5632766268861582e-12, 1.875957288816066e-12, 3.163102158670883e-12, 2.6136603731991004e-12, 8.572346825441723e-12, 6.1391764068219334e-12, 5.644262401210964e-12, 8.517291906484648e-12, 5.865690745621155e-12, 2.1623826861050244e-12, 4.275556471367015e-12, 4.895783431435596e-12, 1.2250732546459364e-11, 9.289907385023888e-12, 3.1888425927606434e-11, 8.610807379627605e-12, 1.1942136515785684e-11, 1.1455129379778217e-11, 1.8414643074282644e-11, 4.907443548751722e-11, 1.2973456510467773e-11, 1.861359157084852e-11, 5.408133316175956e-11, 5.030770071356994e-12, 3.610001533815854e-11, 1.2128717301329583e-11, 1.753170351947997e-11, 5.884991105542525e-11, 9.36294878434163e-12, 3.1848915865717586e-11, 1.361573614272471e-11, 1.906456416345126e-11, 6.862349577474447e-11, 8.680312545139568e-12, 2.1193425486787376e-11, 8.26849526347484e-12, 1.681270921094491e-11, 3.0715156112970377e-11, 9.174026989466899e-12, 1.5226644944910106e-10, 1.4023156767739575e-11, 3.270983484071621e-11, 6.599003288254579e-11, 1.1409185228516971e-11, 1.3764998862964006e-10, 1.84307707984388e-11, 4.105965220602137e-11, 2.586929108427949e-11, 1.484647647875814e-11, 1.560524799659735e-11, 4.6573477713307554e-11, 4.288561519794065e-11, 4.405131207724233e-12, 1.796656573516131e-11, 1.8630180731449286e-11, 7.839829480049687e-11, 4.4025085799148655e-09, 1.4014285565355777e-10, 4.907161049033659e-12, 6.213185521630749e-10, 2.5509816481417147e-09, 4.270554743168731e-11, 1.5937426725565196e-11, 1.1947741407336565e-11, 2.0572507253291406e-07, 1.3693973038853002e-11]], "pointer": [[0.0, 0.0, 0.9999933242797852, 0.0, 0.0, 0.0, 0.0, 4.496172607559856e-07, 0.0, 0.0, 0.0, 0.0, 0.0, 8.855916000527486e-09, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 5.088249508844456e-06, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 9.639987865739386e-07, 0.0, 0.0, 0.0, 0.0, 0.0, 7.92047458730849e-08, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 5.8705467154140933e-08, 0.0]], "target": [0.9999942779541016]}, "loss": [8.821098163025454e-05, 5.722062269342132e-06], "acc": [0.0, 1.0, 1.0, 1.0]}}


Trace of simplified code(s):

{"result": {"time": "2021-02-11 12:03:59.644423", "n_pass": [1, 1, 1], "n_token": 89, "loss": [8.821098163025454e-05, 5.722062269342132e-06], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def test_queue_name(", "self", ")", ":", "#NEWLINE#", "#INDENT#", "obj", "=", "amqp_queue", ".", "Queue", "(", "obj", ".", "chan", ",", "'my-queue'", ")", "#NEWLINE#", "expectation", "=", "{", "#NEWLINE#", "#INDENT#", "'arguments'", ":", "{", "#NEWLINE#", "#INDENT#", "#NEWLINE#", "#UNINDENT#", "}", ",", "#NEWLINE#", "'auto_delete'", ":", "False", ",", "#NEWLINE#", "'durable'", ":", "False", ",", "#NEWLINE#", "'exclusive'", ":", "False", ",", "#NEWLINE#", "'nowait'", ":", "False", ",", "#NEWLINE#", "'passive'", ":", "False", ",", "#NEWLINE#", "'queue'", ":", "'my-queue'", ",", "#NEWLINE#", "'ticket'", ":", "0", ",", "#NEWLINE#", "#UNINDENT#", "}", "#NEWLINE#", "self", ".", "assertDictEqual", "(", "dict", "(", "obj", ".", "_declare", "(", "False", ")", ")", ",", "expectation", ")"]}}
{"position": {"error_location": 13, "repair_targets": [2, 73], "repair_candidates": [20, 87, 7, 13, 79, 2, 73]}}
{"prediction": {"error_location": 0.9999117851257324, "repair_targets": [0.9999933242797852, 9.639987865739386e-07], "repair_candidates": [0.9999933242797852, 4.496172607559856e-07, 8.855916000527486e-09, 5.088249508844456e-06, 9.639987865739386e-07, 7.92047458730849e-08, 5.8705467154140933e-08], "target_probs": 0.9999942779541016}}


{"result": {"time": "2021-02-11 12:03:59.701409", "n_pass": [9, 2, 2], "n_token": 67, "loss": [6.329813186312094e-05, 1.8477456933396752e-06], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def test_queue_name(", "self", ")", ":", "#NEWLINE#", "#INDENT#", "obj", "=", "amqp_queue", ".", "Queue", "(", "obj", ".", "chan", ",", "'my-queue'", ")", "#NEWLINE#", "expectation", "=", "#NEWLINE#", "'exclusive'", ":", "False", ",", "#NEWLINE#", "'nowait'", ":", "False", ",", "#NEWLINE#", "'passive'", ":", "False", ",", "#NEWLINE#", "'queue'", ":", "'my-queue'", ",", "#NEWLINE#", "'ticket'", ":", "0", ",", "#NEWLINE#", "#UNINDENT#", "}", "#NEWLINE#", "self", ".", "assertDictEqual", "(", "dict", "(", "obj", ".", "_declare", "(", "False", ")", ")", ",", "expectation", ")"]}}
{"position": {"error_location": 13, "repair_targets": [2, 51], "repair_candidates": [20, 65, 7, 13, 57, 2, 51]}}
{"prediction": {"error_location": 0.9999366998672485, "repair_targets": [0.9999903440475464, 7.788922630425077e-06], "repair_candidates": [0.9999903440475464, 1.2164865381691925e-07, 4.525260166587941e-09, 1.6310999626512057e-06, 7.788922630425077e-06, 5.204324793339765e-08, 1.116253329769279e-07], "target_probs": 0.999998152256012}}


{"result": {"time": "2021-02-11 12:03:59.757141", "n_pass": [10, 3, 3], "n_token": 45, "loss": [0.0001426833332516253, 3.4570753086882178e-06], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def test_queue_name(", "self", ")", ":", "#NEWLINE#", "#INDENT#", "obj", "=", "amqp_queue", ".", "Queue", "(", "obj", ".", "chan", ",", "'my-queue'", ")", "#NEWLINE#", "expectation", "=", ":", "0", ",", "#NEWLINE#", "#UNINDENT#", "}", "#NEWLINE#", "self", ".", "assertDictEqual", "(", "dict", "(", "obj", ".", "_declare", "(", "False", ")", ")", ",", "expectation", ")"]}}
{"position": {"error_location": 13, "repair_targets": [2, 29], "repair_candidates": [20, 43, 7, 13, 35, 2, 29]}}
{"prediction": {"error_location": 0.9998571872711182, "repair_targets": [0.9999861717224121, 1.0369258234277368e-05], "repair_candidates": [0.9999861717224121, 3.0579161602872773e-07, 6.9005112734998875e-09, 2.872458935598843e-06, 1.0369258234277368e-05, 1.327555452235174e-07, 1.3717516367250937e-07], "target_probs": 0.999996542930603}}


{"result": {"time": "2021-02-11 12:03:59.813663", "n_pass": [27, 4, 4], "n_token": 39, "loss": [9.345571743324399e-05, 7.748606662971724e-07], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def test_queue_name(", "self", ")", ":", "#NEWLINE#", "#INDENT#", "obj", "=", "amqp_queue", ".", "Queue", "(", "obj", ".", "chan", ",", "'my-queue'", ")", "#NEWLINE#", "expectation", "}", "#NEWLINE#", "self", ".", "assertDictEqual", "(", "dict", "(", "obj", ".", "_declare", "(", "False", ")", ")", ",", "expectation", ")"]}}
{"position": {"error_location": 13, "repair_targets": [2, 23], "repair_candidates": [20, 37, 7, 13, 29, 2, 23]}}
{"prediction": {"error_location": 0.9999065399169922, "repair_targets": [0.9999974966049194, 1.7518291315354872e-06], "repair_candidates": [0.9999974966049194, 4.261348180989444e-07, 2.020650091694165e-09, 1.762622190426555e-07, 1.7518291315354872e-06, 8.765547221400993e-08, 8.044317212352325e-08], "target_probs": 0.9999992251396179}}


{"result": {"time": "2021-02-11 12:03:59.870378", "n_pass": [50, 5, 5], "n_token": 36, "loss": [0.00028975578607060015, 1.8477456933396752e-06], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def test_queue_name(", "self", ")", ":", "#NEWLINE#", "#INDENT#", "obj", "=", "amqp_queue", ".", "Queue", "(", "obj", ".", "chan", ",", "'my-queue'", ")", "#NEWLINE#", "expectation", "}", "#NEWLINE#", "self", "dict", "(", "obj", ".", "_declare", "(", "False", ")", ")", ",", "expectation", ")"]}}
{"position": {"error_location": 13, "repair_targets": [2, 23], "repair_candidates": [20, 34, 7, 13, 26, 2, 23]}}
{"prediction": {"error_location": 0.9997101426124573, "repair_targets": [0.9999978542327881, 2.8941784080416255e-07], "repair_candidates": [0.9999978542327881, 1.5166693856372149e-06, 2.6506294936723407e-09, 2.4684868549229577e-07, 2.8941784080416255e-07, 1.0011164164325237e-07, 5.2677101791687164e-08], "target_probs": 0.999998152256012}}


{"result": {"time": "2021-02-11 12:03:59.930001", "n_pass": [52, 6, 6], "n_token": 33, "loss": [0.00013302871957421303, 1.5497220147153712e-06], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def test_queue_name(", "self", ")", ":", "#NEWLINE#", "#INDENT#", "obj", "=", "amqp_queue", ".", "Queue", "(", "obj", ".", "chan", ",", "'my-queue'", ")", "#NEWLINE#", "expectation", "}", "#NEWLINE#", "self", "dict", "(", "obj", "False", ")", ")", ",", "expectation", ")"]}}
{"position": {"error_location": 13, "repair_targets": [2, 23], "repair_candidates": [20, 31, 7, 13, 26, 2, 23]}}
{"prediction": {"error_location": 0.9998670816421509, "repair_targets": [0.9999978542327881, 6.052354706298502e-07], "repair_candidates": [0.9999978542327881, 5.591958824879839e-07, 3.086429778420552e-09, 5.812981953567942e-07, 6.052354706298502e-07, 1.4834324701951118e-07, 2.0950537304997852e-07], "target_probs": 0.9999984502792358}}


{"result": {"time": "2021-02-11 12:03:59.986161", "n_pass": [53, 7, 7], "n_token": 30, "loss": [0.00017867876158561558, 4.768372718899627e-07], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def test_queue_name(", "self", ")", ":", "#NEWLINE#", "#INDENT#", "obj", "=", "amqp_queue", ".", "Queue", "(", "obj", ".", "chan", ",", "'my-queue'", ")", "#NEWLINE#", "expectation", "}", "#NEWLINE#", "self", "dict", "(", "obj", ",", "expectation", ")"]}}
{"position": {"error_location": 13, "repair_targets": [2, 23], "repair_candidates": [20, 28, 7, 13, 26, 2, 23]}}
{"prediction": {"error_location": 0.9998214840888977, "repair_targets": [0.9999973773956299, 2.1265993837005226e-06], "repair_candidates": [0.9999973773956299, 4.0090682773552544e-07, 2.8516171646231214e-09, 5.2389207638725566e-08, 2.1265993837005226e-06, 2.4401471065971236e-08, 1.9622435232236057e-08], "target_probs": 0.9999995231628418}}


{"result": {"time": "2021-02-11 12:04:00.042618", "n_pass": [55, 8, 8], "n_token": 28, "loss": [0.09317222982645035, 0.0012354133650660515], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["self", ")", ":", "#NEWLINE#", "#INDENT#", "obj", "=", "amqp_queue", ".", "Queue", "(", "obj", ".", "chan", ",", "'my-queue'", ")", "#NEWLINE#", "expectation", "}", "#NEWLINE#", "self", "dict", "(", "obj", ",", "expectation", ")"]}}
{"position": {"error_location": 11, "repair_targets": [0, 21], "repair_candidates": [18, 26, 5, 11, 24, 0, 21]}}
{"prediction": {"error_location": 0.9110365509986877, "repair_targets": [0.9978932738304138, 0.000872073695063591], "repair_candidates": [0.9978932738304138, 0.0006437053671106696, 5.857989435753552e-06, 0.0002628396323416382, 0.000872073695063591, 0.0001418217725586146, 0.00018045365868601948], "target_probs": 0.9987653493881226}}


{"result": {"time": "2021-02-11 12:04:00.154355", "n_pass": [59, 10, 9], "n_token": 25, "loss": [0.2652873694896698, 0.0051348088309168816], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["self", ")", ":", "#NEWLINE#", "#INDENT#", "obj", "=", "(", "obj", ".", "chan", ",", "'my-queue'", ")", "#NEWLINE#", "expectation", "}", "#NEWLINE#", "self", "dict", "(", "obj", ",", "expectation", ")"]}}
{"position": {"error_location": 8, "repair_targets": [0, 18], "repair_candidates": [15, 23, 5, 8, 21, 0, 18]}}
{"prediction": {"error_location": 0.7669855356216431, "repair_targets": [0.9916675686836243, 0.0032107634469866753], "repair_candidates": [0.9916675686836243, 0.0027642950881272554, 5.05545631312998e-06, 0.00047275639371946454, 0.0032107634469866753, 0.001432353281415999, 0.0004472656291909516], "target_probs": 0.994878351688385}}


{"result": {"time": "2021-02-11 12:04:00.379337", "n_pass": [88, 14, 10], "n_token": 24, "loss": [0.6214872598648071, 0.012616374529898167], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["self", ")", ":", "#NEWLINE#", "#INDENT#", "obj", "=", "obj", ".", "chan", ",", "'my-queue'", ")", "#NEWLINE#", "expectation", "}", "#NEWLINE#", "self", "dict", "(", "obj", ",", "expectation", ")"]}}
{"position": {"error_location": 7, "repair_targets": [0, 17], "repair_candidates": [14, 22, 5, 7, 20, 0, 17]}}
{"prediction": {"error_location": 0.5371450185775757, "repair_targets": [0.9838953614234924, 0.0035675058607012033], "repair_candidates": [0.9838953614234924, 0.008119323290884495, 1.1505155271152034e-05, 0.0011697083245962858, 0.0035675058607012033, 0.0022410699166357517, 0.0009955030400305986], "target_probs": 0.9874628782272339}}


{"result": {"time": "2021-02-11 12:04:00.544979", "n_pass": [92, 17, 11], "n_token": 22, "loss": [0.5222513675689697, 0.03035736456513405], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["self", ")", ":", "#NEWLINE#", "#INDENT#", "obj", "=", "obj", ".", "chan", ")", "#NEWLINE#", "expectation", "}", "#NEWLINE#", "self", "dict", "(", "obj", ",", "expectation", ")"]}}
{"position": {"error_location": 7, "repair_targets": [0, 15], "repair_candidates": [12, 20, 5, 7, 18, 0, 15]}}
{"prediction": {"error_location": 0.5931835174560547, "repair_targets": [0.9659644365310669, 0.004134344402700663], "repair_candidates": [0.9659644365310669, 0.020629534497857094, 2.959016455861274e-05, 0.000435048685176298, 0.004134344402700663, 0.00855863094329834, 0.00024843946448527277], "target_probs": 0.9700987935066223}}


{"result": {"time": "2021-02-11 12:04:00.658792", "n_pass": [96, 19, 12], "n_token": 20, "loss": [0.31325310468673706, 0.10176952183246613], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["self", ")", ":", "#NEWLINE#", "#INDENT#", "obj", "=", "obj", ".", "chan", ")", "#NEWLINE#", "expectation", "}", "#NEWLINE#", "self", "obj", ",", "expectation", ")"]}}
{"position": {"error_location": 7, "repair_targets": [0, 15], "repair_candidates": [12, 18, 5, 7, 16, 0, 15]}}
{"prediction": {"error_location": 0.7310648560523987, "repair_targets": [0.7498555183410645, 0.15338215231895447], "repair_candidates": [0.7498555183410645, 0.012133757583796978, 8.211012027459219e-05, 0.024889325723052025, 0.15338215231895447, 0.014037245884537697, 0.04561998322606087], "target_probs": 0.9032377004623413}}


{"result": {"time": "2021-02-11 12:04:01.160122", "n_pass": [122, 28, 13], "n_token": 19, "loss": [0.14005368947982788, 0.290518194437027], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["self", ")", ":", "#NEWLINE#", "#INDENT#", "obj", "=", "obj", ".", "chan", ")", "#NEWLINE#", "expectation", "}", "#NEWLINE#", "self", "obj", "expectation", ")"]}}
{"position": {"error_location": 7, "repair_targets": [0, 15], "repair_candidates": [12, 17, 5, 7, 16, 0, 15]}}
{"prediction": {"error_location": 0.8693115711212158, "repair_targets": [0.19145618379116058, 0.5564197301864624], "repair_candidates": [0.19145618379116058, 0.002093023154884577, 1.3770015357295051e-05, 0.012951730750501156, 0.5564197301864624, 0.0008693846175447106, 0.2361961454153061], "target_probs": 0.7478759288787842}}


{"result": {"time": "2021-02-11 12:04:01.214954", "n_pass": [124, 29, 14], "n_token": 18, "loss": [0.1705150306224823, 0.0866532027721405], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["self", ")", ":", "#NEWLINE#", "#INDENT#", "obj", "=", "obj", ".", "chan", ")", "#NEWLINE#", "expectation", "}", "#NEWLINE#", "self", "obj", "expectation"]}}
{"position": {"error_location": 7, "repair_targets": [0, 15], "repair_candidates": [12, 17, 5, 7, 16, 0, 15]}}
{"prediction": {"error_location": 0.8432304263114929, "repair_targets": [0.11686406284570694, 0.8001309633255005], "repair_candidates": [0.11686406284570694, 0.02842479944229126, 5.027968290960416e-05, 0.045660682022571564, 0.8001309633255005, 0.0011794251622632146, 0.0076897842809557915], "target_probs": 0.9169950485229492}}


{"result": {"time": "2021-02-11 12:04:01.606829", "n_pass": [134, 36, 15], "n_token": 17, "loss": [0.4934256374835968, 0.24396730959415436], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["self", ")", ":", "#NEWLINE#", "#INDENT#", "obj", "=", "obj", ".", ")", "#NEWLINE#", "expectation", "}", "#NEWLINE#", "self", "obj", "expectation"]}}
{"position": {"error_location": 7, "repair_targets": [0, 14], "repair_candidates": [11, 16, 5, 7, 15, 0, 14]}}
{"prediction": {"error_location": 0.6105313301086426, "repair_targets": [0.09343046694993973, 0.6900827884674072], "repair_candidates": [0.09343046694993973, 0.06323651224374771, 0.0003960711183026433, 0.1377657949924469, 0.6900827884674072, 0.005718546453863382, 0.009369837120175362], "target_probs": 0.7835132479667664}}




Minimal simplified tokens:

['self', ')', ':', '#NEWLINE#', '#INDENT#', 'obj', '=', 'obj', '.', ')', '#NEWLINE#', 'expectation', '}', '#NEWLINE#', 'self', 'obj', 'expectation']
