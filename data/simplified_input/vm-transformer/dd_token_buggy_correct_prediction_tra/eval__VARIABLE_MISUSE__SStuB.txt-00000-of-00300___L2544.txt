
Original sample:

{"has_bug": true, "bug_kind": 1, "bug_kind_name": "VARIABLE_MISUSE", "source_tokens": ["#NEWLINE#", "def test_fromElementMinimal(", "self", ")", ":", "#NEWLINE#", "#INDENT#", "'\\n        A minimal roster item has a reference to the JID of the contact.\\n        '", "#NEWLINE#", "xml", "=", "'\\n            <item xmlns=\"jabber:iq:roster\"\\n                  jid=\"test@example.org\"/>\\n        '", "#NEWLINE#", "item", "=", "xmppim", ".", "RosterItem", ".", "fromElement", "(", "parseXml", "(", "xml", ")", ")", "#NEWLINE#", "self", ".", "assertEqual", "(", "JID", "(", "'test@example.org'", ")", ",", "xml", ".", "entity", ")", "#NEWLINE#", "self", ".", "assertEqual", "(", "''", ",", "item", ".", "name", ")", "#NEWLINE#", "self", ".", "assertFalse", "(", "item", ".", "subscriptionTo", ")", "#NEWLINE#", "self", ".", "assertFalse", "(", "item", ".", "subscriptionFrom", ")", "#NEWLINE#", "self", ".", "assertFalse", "(", "item", ".", "pendingOut", ")", "#NEWLINE#", "self", ".", "assertFalse", "(", "item", ".", "approved", ")", "#NEWLINE#", "self", ".", "assertEqual", "(", "set", "(", ")", ",", "item", ".", "groups", ")"], "error_location": [36], "repair_targets": [13, 47, 56, 65, 74, 83, 96], "repair_candidates": [13, 47, 56, 65, 74, 83, 96, 9, 23, 36, 2, 27, 41, 52, 61, 70, 79, 88], "provenances": [{"datasetProvenance": {"datasetName": "ETHPy150Open", "filepath": "ralphm/wokkel/wokkel/test/test_xmppim.py", "license": "mit", "note": "license: bigquery_api"}}], "txt_file": "eval__VARIABLE_MISUSE__SStuB.txt-00000-of-00300", "js_count": 2544, "results": {"model": "transformer", "prob": {"loc": [[0.003429361851885915, 1.7462374657384316e-08, 1.642460176753957e-07, 1.3261243492213026e-10, 2.1542208294977883e-10, 1.88545012935748e-10, 1.2926353043507532e-10, 1.714777903005782e-10, 6.590850087917488e-11, 2.0223924757090117e-09, 2.0068330330857975e-10, 2.661132980641412e-10, 8.18631620824739e-11, 4.4631417495111236e-07, 2.149587036148759e-10, 3.6530172220494705e-09, 2.1364376934229767e-10, 1.0856034127204595e-10, 5.59243262809872e-10, 1.6360683641192253e-10, 4.36186697871932e-10, 1.0786168486154324e-10, 3.5721885449646607e-09, 6.27124290986103e-06, 2.9178106597527176e-09, 2.2164405866220704e-09, 5.4598009446849e-10, 2.2924259712731043e-10, 1.4247848734161295e-10, 1.2650397396285484e-10, 9.18858600318373e-10, 4.594001845603657e-10, 1.0786468607193456e-08, 2.8308305033419856e-08, 1.914488789722668e-09, 1.9095001135838174e-09, 0.9962867498397827, 1.914397307345439e-09, 2.7484055031834487e-09, 7.26983750976018e-10, 4.4813888711026095e-10, 3.250274216437532e-10, 1.3711068391764059e-10, 4.027676456241913e-11, 8.034170551063369e-10, 4.0724303929096095e-09, 1.0950768070117078e-09, 0.00020428090647328645, 9.799654421271953e-09, 4.5592071784561483e-10, 6.708500421837016e-10, 5.096106869828532e-10, 1.761926715637685e-10, 4.461483127382593e-10, 2.126253340062334e-11, 1.9434723275146837e-10, 1.1662814358714968e-05, 9.600694461653347e-09, 5.02182850858901e-10, 8.549818630854134e-10, 5.740427022615791e-10, 1.9122033123597504e-10, 1.589926246214901e-10, 9.436811575225246e-12, 1.2808720750712155e-10, 9.376063644594979e-06, 4.520106955396841e-09, 9.236239550958203e-10, 2.6604682346054176e-10, 2.1134814731649243e-10, 2.1000644279123293e-10, 2.2794591214569948e-10, 1.0220376628344852e-11, 1.2185111253337766e-10, 1.6455709555884823e-05, 4.7180681583824935e-09, 2.877354188246528e-10, 8.491927716569592e-10, 2.466215842655828e-10, 1.4432691153309918e-10, 2.0044725601575664e-10, 1.3848520420689514e-11, 7.455573658443626e-11, 8.732213245821185e-06, 4.838769385173691e-09, 1.9275941953722509e-10, 3.631022427175168e-10, 2.6536312036640197e-10, 4.99180419222256e-10, 1.7691838272160254e-10, 1.0202049274821157e-11, 7.521418904365973e-11, 6.349942238692563e-10, 2.532022369550191e-09, 2.1279178419320033e-10, 1.0244504550227518e-10, 2.6367642931290902e-05, 1.9306380938388656e-09, 1.9380270999125315e-10, 3.020529937280969e-10]], "pointer": [[0.0, 0.0, 0.0005385134718380868, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.00010395577555755153, 0.0, 0.0, 0.0, 0.9432607889175415, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.00021473928063642234, 0.0, 0.0, 0.0, 6.215512712515192e-06, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0722208571678493e-05, 0.0, 0.0, 0.0, 0.0, 3.8980925864962046e-07, 0.0, 0.0, 0.0, 0.0, 0.0, 0.05339667946100235, 0.0, 0.0, 0.0, 0.0, 1.1248518205775326e-07, 0.0, 0.0, 0.0, 0.0005277941236272454, 0.0, 0.0, 0.0, 0.0, 6.713774070021827e-08, 0.0, 0.0, 0.0, 7.29948515072465e-05, 0.0, 0.0, 0.0, 0.0, 6.569730004457597e-08, 0.0, 0.0, 0.0, 0.0013440464390441775, 0.0, 0.0, 0.0, 0.0, 1.187122080636982e-07, 0.0, 0.0, 0.0, 0.00010777337593026459, 0.0, 0.0, 0.0, 0.0, 1.2025265050397138e-07, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0004148465523030609, 0.0, 0.0, 0.0]], "target": [0.9991249442100525]}, "loss": [0.003720031352713704, 0.0008754388545639813], "acc": [0.0, 1.0, 1.0, 1.0]}}


Trace of simplified code(s):

{"result": {"time": "2021-02-11 11:40:21.863952", "n_pass": [1, 1, 1], "n_token": 100, "loss": [0.003720031352713704, 0.0008754388545639813], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def test_fromElementMinimal(", "self", ")", ":", "#NEWLINE#", "#INDENT#", "'\\n        A minimal roster item has a reference to the JID of the contact.\\n        '", "#NEWLINE#", "xml", "=", "'\\n            <item xmlns=\"jabber:iq:roster\"\\n                  jid=\"test@example.org\"/>\\n        '", "#NEWLINE#", "item", "=", "xmppim", ".", "RosterItem", ".", "fromElement", "(", "parseXml", "(", "xml", ")", ")", "#NEWLINE#", "self", ".", "assertEqual", "(", "JID", "(", "'test@example.org'", ")", ",", "xml", ".", "entity", ")", "#NEWLINE#", "self", ".", "assertEqual", "(", "''", ",", "item", ".", "name", ")", "#NEWLINE#", "self", ".", "assertFalse", "(", "item", ".", "subscriptionTo", ")", "#NEWLINE#", "self", ".", "assertFalse", "(", "item", ".", "subscriptionFrom", ")", "#NEWLINE#", "self", ".", "assertFalse", "(", "item", ".", "pendingOut", ")", "#NEWLINE#", "self", ".", "assertFalse", "(", "item", ".", "approved", ")", "#NEWLINE#", "self", ".", "assertEqual", "(", "set", "(", ")", ",", "item", ".", "groups", ")"]}}
{"position": {"error_location": 36, "repair_targets": [13, 47, 56, 65, 74, 83, 96], "repair_candidates": [13, 47, 56, 65, 74, 83, 96, 9, 23, 36, 2, 27, 41, 52, 61, 70, 79, 88]}}
{"prediction": {"error_location": 0.9962867498397827, "repair_targets": [0.9432607889175415, 0.05339667946100235, 0.0005277941236272454, 7.29948515072465e-05, 0.0013440464390441775, 0.00010777337593026459, 0.0004148465523030609], "repair_candidates": [0.0005385134718380868, 0.00010395577555755153, 0.9432607889175415, 0.00021473928063642234, 6.215512712515192e-06, 1.0722208571678493e-05, 3.8980925864962046e-07, 0.05339667946100235, 1.1248518205775326e-07, 0.0005277941236272454, 6.713774070021827e-08, 7.29948515072465e-05, 6.569730004457597e-08, 0.0013440464390441775, 1.187122080636982e-07, 0.00010777337593026459, 1.2025265050397138e-07, 0.0004148465523030609], "target_probs": 0.9991249442100525}}


{"result": {"time": "2021-02-11 11:40:21.928890", "n_pass": [49, 2, 2], "n_token": 94, "loss": [0.2353716492652893, 0.00127891986630857], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def test_fromElementMinimal(", "self", ")", ":", "#NEWLINE#", "#INDENT#", "'\\n        A minimal roster item has a reference to the JID of the contact.\\n        '", "#NEWLINE#", "xml", "=", "'\\n            <item xmlns=\"jabber:iq:roster\"\\n                  jid=\"test@example.org\"/>\\n        '", "#NEWLINE#", "item", "=", "xmppim", ".", "RosterItem", ".", "fromElement", "(", "parseXml", "(", "xml", ")", ")", "#NEWLINE#", "self", ".", "assertEqual", "xml", ".", "entity", ")", "#NEWLINE#", "self", ".", "assertEqual", "(", "''", ",", "item", ".", "name", ")", "#NEWLINE#", "self", ".", "assertFalse", "(", "item", ".", "subscriptionTo", ")", "#NEWLINE#", "self", ".", "assertFalse", "(", "item", ".", "subscriptionFrom", ")", "#NEWLINE#", "self", ".", "assertFalse", "(", "item", ".", "pendingOut", ")", "#NEWLINE#", "self", ".", "assertFalse", "(", "item", ".", "approved", ")", "#NEWLINE#", "self", ".", "assertEqual", "(", "set", "(", ")", ",", "item", ".", "groups", ")"]}}
{"position": {"error_location": 30, "repair_targets": [13, 41, 50, 59, 68, 77, 90], "repair_candidates": [13, 41, 50, 59, 68, 77, 90, 9, 23, 30, 2, 27, 35, 46, 55, 64, 73, 82]}}
{"prediction": {"error_location": 0.7902769446372986, "repair_targets": [0.9625219702720642, 0.021191371604800224, 0.0025425157509744167, 0.0003672906314022839, 0.004808102734386921, 0.0056648156605660915, 0.001625831238925457], "repair_candidates": [4.256521788192913e-05, 0.001082897069863975, 0.9625219702720642, 0.0001397961750626564, 2.9832169730070746e-06, 2.8737895263475366e-06, 1.533439103695855e-06, 0.021191371604800224, 7.888824029578245e-07, 0.0025425157509744167, 8.10882511359523e-07, 0.0003672906314022839, 7.637110570613004e-07, 0.004808102734386921, 1.284874088014476e-06, 0.0056648156605660915, 1.7891918560053455e-06, 0.001625831238925457], "target_probs": 0.9987218976020813}}


{"result": {"time": "2021-02-11 11:40:21.991200", "n_pass": [96, 3, 3], "n_token": 91, "loss": [0.591736376285553, 0.057792339473962784], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def test_fromElementMinimal(", "self", ")", ":", "#NEWLINE#", "#INDENT#", "'\\n        A minimal roster item has a reference to the JID of the contact.\\n        '", "#NEWLINE#", "xml", "=", "'\\n            <item xmlns=\"jabber:iq:roster\"\\n                  jid=\"test@example.org\"/>\\n        '", "#NEWLINE#", "item", "=", "xmppim", ".", "RosterItem", ".", "fromElement", "(", "parseXml", "(", "xml", ")", ")", "#NEWLINE#", "self", ".", "assertEqual", "xml", ".", "entity", ")", "#NEWLINE#", "self", "''", ",", "item", ".", "name", ")", "#NEWLINE#", "self", ".", "assertFalse", "(", "item", ".", "subscriptionTo", ")", "#NEWLINE#", "self", ".", "assertFalse", "(", "item", ".", "subscriptionFrom", ")", "#NEWLINE#", "self", ".", "assertFalse", "(", "item", ".", "pendingOut", ")", "#NEWLINE#", "self", ".", "assertFalse", "(", "item", ".", "approved", ")", "#NEWLINE#", "self", ".", "assertEqual", "(", "set", "(", ")", ",", "item", ".", "groups", ")"]}}
{"position": {"error_location": 30, "repair_targets": [13, 38, 47, 56, 65, 74, 87], "repair_candidates": [13, 38, 47, 56, 65, 74, 87, 9, 23, 30, 2, 27, 35, 43, 52, 61, 70, 79]}}
{"prediction": {"error_location": 0.5533654689788818, "repair_targets": [0.8857683539390564, 0.032317355275154114, 0.010283718816936016, 0.0007484297384507954, 0.0022508958354592323, 0.010463839396834373, 0.0020133391954004765], "repair_candidates": [0.00012168273678980768, 0.05174481123685837, 0.8857683539390564, 0.004187909420579672, 7.24262054063729e-06, 4.469112172955647e-05, 3.1003790354589e-05, 0.032317355275154114, 3.8071991639299085e-06, 0.010283718816936016, 2.433379449939821e-06, 0.0007484297384507954, 2.3205654997582315e-06, 0.0022508958354592323, 3.4884153592429357e-06, 0.010463839396834373, 4.735036782221869e-06, 0.0020133391954004765], "target_probs": 0.9438459277153015}}


{"result": {"time": "2021-02-11 11:40:22.281956", "n_pass": [109, 8, 4], "n_token": 87, "loss": [0.5895897150039673, 0.06300739198923111], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def test_fromElementMinimal(", "self", ")", ":", "#NEWLINE#", "#INDENT#", "'\\n        A minimal roster item has a reference to the JID of the contact.\\n        '", "#NEWLINE#", "xml", "=", "'\\n            <item xmlns=\"jabber:iq:roster\"\\n                  jid=\"test@example.org\"/>\\n        '", "#NEWLINE#", "item", "=", "xmppim", ".", "RosterItem", ".", "fromElement", "(", "parseXml", "(", "xml", ")", ")", "#NEWLINE#", "self", ".", "assertEqual", "xml", ".", "entity", ")", "#NEWLINE#", "self", "''", ",", "item", ".", "name", ")", "#NEWLINE#", "self", ".", "assertFalse", "(", "item", ".", "subscriptionTo", ")", "#NEWLINE#", "self", ".", "assertFalse", "(", "item", ".", "subscriptionFrom", ")", "#NEWLINE#", "self", ".", "assertFalse", "(", "item", ".", "pendingOut", ")", "#NEWLINE#", "self", ".", "assertFalse", "(", "item", "self", ".", "assertEqual", "(", "set", "(", ")", ",", "item", ".", "groups", ")"]}}
{"position": {"error_location": 30, "repair_targets": [13, 38, 47, 56, 65, 74, 83], "repair_candidates": [13, 38, 47, 56, 65, 74, 83, 9, 23, 30, 2, 27, 35, 43, 52, 61, 70, 75]}}
{"prediction": {"error_location": 0.5545547604560852, "repair_targets": [0.8386650681495667, 0.035309579223394394, 0.026460696011781693, 0.0019356923876330256, 0.00119818898383528, 0.021806778386235237, 0.01356053538620472], "repair_candidates": [0.0002132164518116042, 0.05630310997366905, 0.8386650681495667, 0.004309554118663073, 1.4146317880658899e-05, 5.6004701036727056e-05, 5.5788121244404465e-05, 0.035309579223394394, 7.176618510129629e-06, 0.026460696011781693, 7.902754077804275e-06, 0.0019356923876330256, 8.661716492497362e-06, 0.00119818898383528, 9.199971827911213e-06, 0.021806778386235237, 7.86717573646456e-05, 0.01356053538620472], "target_probs": 0.9389365315437317}}


{"result": {"time": "2021-02-11 11:40:22.340097", "n_pass": [111, 9, 5], "n_token": 83, "loss": [0.4110233187675476, 0.05140850692987442], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def test_fromElementMinimal(", "self", ")", ":", "#NEWLINE#", "#INDENT#", "'\\n        A minimal roster item has a reference to the JID of the contact.\\n        '", "#NEWLINE#", "xml", "=", "'\\n            <item xmlns=\"jabber:iq:roster\"\\n                  jid=\"test@example.org\"/>\\n        '", "#NEWLINE#", "item", "=", "xmppim", ".", "RosterItem", ".", "fromElement", "(", "parseXml", "(", "xml", ")", ")", "#NEWLINE#", "self", ".", "assertEqual", "xml", ".", "entity", ")", "#NEWLINE#", "self", "''", ",", "item", ".", "name", ")", "#NEWLINE#", "self", ".", "assertFalse", "(", "item", ".", "subscriptionTo", ")", "#NEWLINE#", "self", ".", "assertFalse", "(", "item", ".", "subscriptionFrom", ")", "#NEWLINE#", "self", ".", "assertFalse", "(", "item", ".", "pendingOut", ")", "#NEWLINE#", "self", ".", "assertFalse", "(", "item", "self", ".", "assertEqual", "(", "item", ".", "groups", ")"]}}
{"position": {"error_location": 30, "repair_targets": [13, 38, 47, 56, 65, 74, 79], "repair_candidates": [13, 38, 47, 56, 65, 74, 79, 9, 23, 30, 2, 27, 35, 43, 52, 61, 70, 75]}}
{"prediction": {"error_location": 0.6629714369773865, "repair_targets": [0.884948194026947, 0.0233274195343256, 0.00936846248805523, 0.00124261190649122, 0.0009452503290958703, 0.015123983845114708, 0.014934640377759933], "repair_candidates": [0.00013508551637642086, 0.04639913886785507, 0.884948194026947, 0.003381241811439395, 1.068010624294402e-05, 6.473776011262089e-05, 4.500469731283374e-05, 0.0233274195343256, 4.693202299677068e-06, 0.00936846248805523, 5.597888957709074e-06, 0.00124261190649122, 8.467744009976741e-06, 0.0009452503290958703, 1.3061053323326632e-05, 0.015123983845114708, 4.166066355537623e-05, 0.014934640377759933], "target_probs": 0.9498905539512634}}


{"result": {"time": "2021-02-11 11:40:22.744031", "n_pass": [129, 16, 6], "n_token": 80, "loss": [0.5690683126449585, 0.10327800363302231], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def test_fromElementMinimal(", "self", ")", ":", "#NEWLINE#", "#INDENT#", "'\\n        A minimal roster item has a reference to the JID of the contact.\\n        '", "#NEWLINE#", "xml", "=", "'\\n            <item xmlns=\"jabber:iq:roster\"\\n                  jid=\"test@example.org\"/>\\n        '", "#NEWLINE#", "item", "=", "xmppim", ".", "RosterItem", ".", "fromElement", "(", "parseXml", "(", "xml", ")", ")", "#NEWLINE#", "self", ".", "assertEqual", "xml", ".", "entity", ")", "#NEWLINE#", "self", "''", ",", "item", ".", "name", ")", "#NEWLINE#", "self", ".", "assertFalse", "(", "item", "#NEWLINE#", "self", ".", "assertFalse", "(", "item", ".", "subscriptionFrom", ")", "#NEWLINE#", "self", ".", "assertFalse", "(", "item", ".", "pendingOut", ")", "#NEWLINE#", "self", ".", "assertFalse", "(", "item", "self", ".", "assertEqual", "(", "item", ".", "groups", ")"]}}
{"position": {"error_location": 30, "repair_targets": [13, 38, 47, 53, 62, 71, 76], "repair_candidates": [13, 38, 47, 53, 62, 71, 76, 9, 23, 30, 2, 27, 35, 43, 49, 58, 67, 72]}}
{"prediction": {"error_location": 0.5660524964332581, "repair_targets": [0.6952988505363464, 0.0643082857131958, 0.010988866910338402, 0.02578650787472725, 0.0013010217808187008, 0.014454728923738003, 0.08973795920610428], "repair_candidates": [0.0003807378525380045, 0.09125886857509613, 0.6952988505363464, 0.005942845717072487, 2.6332842026022263e-05, 0.00021277277846820652, 0.00011938554962398484, 0.0643082857131958, 9.098581358557567e-06, 0.010988866910338402, 1.4128855582384858e-05, 0.02578650787472725, 1.6013435015338473e-05, 0.0013010217808187008, 1.9138356947223656e-05, 0.014454728923738003, 0.00012444276944734156, 0.08973795920610428], "target_probs": 0.9018762111663818}}


{"result": {"time": "2021-02-11 11:40:23.267010", "n_pass": [208, 25, 7], "n_token": 78, "loss": [0.6303380727767944, 0.17893072962760925], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def test_fromElementMinimal(", "self", ")", ":", "#NEWLINE#", "#INDENT#", "'\\n        A minimal roster item has a reference to the JID of the contact.\\n        '", "#NEWLINE#", "xml", "=", "'\\n            <item xmlns=\"jabber:iq:roster\"\\n                  jid=\"test@example.org\"/>\\n        '", "#NEWLINE#", "item", "=", "xmppim", ".", "RosterItem", ".", "fromElement", "(", "parseXml", "(", "xml", ")", ")", "#NEWLINE#", "self", ".", "assertEqual", "xml", ".", "entity", ")", "#NEWLINE#", "self", "''", ",", "item", ".", "#NEWLINE#", "self", ".", "assertFalse", "(", "item", "#NEWLINE#", "self", ".", "assertFalse", "(", "item", ".", "subscriptionFrom", ")", "#NEWLINE#", "self", ".", "assertFalse", "(", "item", ".", "pendingOut", ")", "#NEWLINE#", "self", ".", "assertFalse", "(", "item", "self", ".", "assertEqual", "(", "item", ".", "groups", ")"]}}
{"position": {"error_location": 30, "repair_targets": [13, 38, 45, 51, 60, 69, 74], "repair_candidates": [13, 38, 45, 51, 60, 69, 74, 9, 23, 30, 2, 27, 35, 41, 47, 56, 65, 70]}}
{"prediction": {"error_location": 0.5324118137359619, "repair_targets": [0.624657928943634, 0.044482193887233734, 0.03206058219075203, 0.04169157147407532, 0.0017005102708935738, 0.0094105564057827, 0.08216049522161484], "repair_candidates": [0.0009158586035482585, 0.15144574642181396, 0.624657928943634, 0.010120229795575142, 8.054623322095722e-05, 0.0006427155458368361, 0.0002327157708350569, 0.044482193887233734, 2.4559754820074886e-05, 0.03206058219075203, 2.2861686375108548e-05, 0.04169157147407532, 2.8504273359430954e-05, 0.0017005102708935738, 2.7419586331234314e-05, 0.0094105564057827, 0.0002949955814983696, 0.08216049522161484], "target_probs": 0.8361638188362122}}


{"result": {"time": "2021-02-11 11:40:23.325383", "n_pass": [210, 26, 8], "n_token": 76, "loss": [0.672396183013916, 0.1627311110496521], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def test_fromElementMinimal(", "self", ")", ":", "#NEWLINE#", "#INDENT#", "'\\n        A minimal roster item has a reference to the JID of the contact.\\n        '", "#NEWLINE#", "xml", "=", "'\\n            <item xmlns=\"jabber:iq:roster\"\\n                  jid=\"test@example.org\"/>\\n        '", "#NEWLINE#", "item", "=", "xmppim", ".", "RosterItem", ".", "fromElement", "(", "parseXml", "(", "xml", ")", ")", "#NEWLINE#", "self", ".", "assertEqual", "xml", ".", "entity", ")", "#NEWLINE#", "self", "''", ",", "item", ".", "#NEWLINE#", "self", "(", "item", "#NEWLINE#", "self", ".", "assertFalse", "(", "item", ".", "subscriptionFrom", ")", "#NEWLINE#", "self", ".", "assertFalse", "(", "item", ".", "pendingOut", ")", "#NEWLINE#", "self", ".", "assertFalse", "(", "item", "self", ".", "assertEqual", "(", "item", ".", "groups", ")"]}}
{"position": {"error_location": 30, "repair_targets": [13, 38, 43, 49, 58, 67, 72], "repair_candidates": [13, 38, 43, 49, 58, 67, 72, 9, 23, 30, 2, 27, 35, 41, 45, 54, 63, 68]}}
{"prediction": {"error_location": 0.5104838609695435, "repair_targets": [0.5748687386512756, 0.050951529294252396, 0.0540318638086319, 0.06890326738357544, 0.0006003843736834824, 0.004189909435808659, 0.09627392888069153], "repair_candidates": [0.0012580221518874168, 0.13886846601963043, 0.5748687386512756, 0.007993570528924465, 0.00027567942743189633, 0.0006220153300091624, 0.0005450070602819324, 0.050951529294252396, 3.6593533877748996e-05, 0.0540318638086319, 7.232347707031295e-05, 0.06890326738357544, 6.298307562246919e-05, 0.0006003843736834824, 7.218373502837494e-05, 0.004189909435808659, 0.00037354370579123497, 0.09627392888069153], "target_probs": 0.8498196601867676}}


{"result": {"time": "2021-02-11 11:40:23.385432", "n_pass": [213, 27, 9], "n_token": 74, "loss": [0.39844051003456116, 0.057040367275476456], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def test_fromElementMinimal(", "self", ")", ":", "#NEWLINE#", "#INDENT#", "'\\n        A minimal roster item has a reference to the JID of the contact.\\n        '", "#NEWLINE#", "xml", "=", "'\\n            <item xmlns=\"jabber:iq:roster\"\\n                  jid=\"test@example.org\"/>\\n        '", "#NEWLINE#", "item", "=", "xmppim", ".", "RosterItem", ".", "fromElement", "(", "parseXml", "(", "xml", ")", ")", "#NEWLINE#", "self", ".", "assertEqual", "xml", ".", "entity", ")", "#NEWLINE#", "self", "''", ",", "item", ".", "#NEWLINE#", "self", "(", "item", "#NEWLINE#", "self", "(", "item", ".", "subscriptionFrom", ")", "#NEWLINE#", "self", ".", "assertFalse", "(", "item", ".", "pendingOut", ")", "#NEWLINE#", "self", ".", "assertFalse", "(", "item", "self", ".", "assertEqual", "(", "item", ".", "groups", ")"]}}
{"position": {"error_location": 30, "repair_targets": [13, 38, 43, 47, 56, 65, 70], "repair_candidates": [13, 38, 43, 47, 56, 65, 70, 9, 23, 30, 2, 27, 35, 41, 45, 52, 61, 66]}}
{"prediction": {"error_location": 0.6713661551475525, "repair_targets": [0.48242902755737305, 0.056600794196128845, 0.10467862337827682, 0.24264806509017944, 0.0006681903614662588, 0.0007610732573084533, 0.056770093739032745], "repair_candidates": [0.0019341977313160896, 0.047023266553878784, 0.48242902755737305, 0.0033337667118757963, 0.0009427893091924489, 0.0002574971003923565, 0.0008814142202027142, 0.056600794196128845, 9.139112080447376e-05, 0.10467862337827682, 4.91997052449733e-05, 0.24264806509017944, 6.51570808258839e-05, 0.0006681903614662588, 0.00010986154666170478, 0.0007610732573084533, 0.000755649118218571, 0.056770093739032745], "target_probs": 0.944555938243866}}


{"result": {"time": "2021-02-11 11:40:23.442844", "n_pass": [215, 28, 10], "n_token": 72, "loss": [0.6298057436943054, 0.19436541199684143], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def test_fromElementMinimal(", "self", ")", ":", "#NEWLINE#", "#INDENT#", "'\\n        A minimal roster item has a reference to the JID of the contact.\\n        '", "#NEWLINE#", "xml", "=", "'\\n            <item xmlns=\"jabber:iq:roster\"\\n                  jid=\"test@example.org\"/>\\n        '", "#NEWLINE#", "item", "=", "xmppim", ".", "RosterItem", ".", "fromElement", "(", "parseXml", "(", "xml", ")", ")", "#NEWLINE#", "self", ".", "assertEqual", "xml", ".", "entity", ")", "#NEWLINE#", "self", "''", ",", "item", ".", "#NEWLINE#", "self", "(", "item", "#NEWLINE#", "self", "(", "item", ")", "#NEWLINE#", "self", ".", "assertFalse", "(", "item", ".", "pendingOut", ")", "#NEWLINE#", "self", ".", "assertFalse", "(", "item", "self", ".", "assertEqual", "(", "item", ".", "groups", ")"]}}
{"position": {"error_location": 30, "repair_targets": [13, 38, 43, 47, 54, 63, 68], "repair_candidates": [13, 38, 43, 47, 54, 63, 68, 9, 23, 30, 2, 27, 35, 41, 45, 50, 59, 64]}}
{"prediction": {"error_location": 0.5326952338218689, "repair_targets": [0.6035257577896118, 0.0652410015463829, 0.10251568257808685, 0.02768035978078842, 0.0026318994350731373, 0.0003871533554047346, 0.02137511782348156], "repair_candidates": [0.005283135920763016, 0.15028531849384308, 0.6035257577896118, 0.01087207067757845, 0.0026264686603099108, 0.0005781912477687001, 0.0033054400701075792, 0.0652410015463829, 0.0002530428464524448, 0.10251568257808685, 0.0002511717320885509, 0.02768035978078842, 0.0002094543306156993, 0.0026318994350731373, 0.0002800014044623822, 0.0003871533554047346, 0.0026987052988260984, 0.02137511782348156], "target_probs": 0.8233569860458374}}


{"result": {"time": "2021-02-11 11:40:23.558399", "n_pass": [218, 30, 11], "n_token": 70, "loss": [0.6795483231544495, 0.19268320500850677], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def test_fromElementMinimal(", "self", ")", ":", "#NEWLINE#", "#INDENT#", "'\\n        A minimal roster item has a reference to the JID of the contact.\\n        '", "#NEWLINE#", "xml", "=", "'\\n            <item xmlns=\"jabber:iq:roster\"\\n                  jid=\"test@example.org\"/>\\n        '", "#NEWLINE#", "item", "=", "xmppim", ".", "RosterItem", ".", "fromElement", "(", "parseXml", "(", "xml", ")", ")", "#NEWLINE#", "self", ".", "assertEqual", "xml", ".", "entity", ")", "#NEWLINE#", "self", "''", ",", "item", ".", "#NEWLINE#", "self", "(", "item", "#NEWLINE#", "self", "(", "item", ")", "#NEWLINE#", "self", ".", "item", ".", "pendingOut", ")", "#NEWLINE#", "self", ".", "assertFalse", "(", "item", "self", ".", "assertEqual", "(", "item", ".", "groups", ")"]}}
{"position": {"error_location": 30, "repair_targets": [13, 38, 43, 47, 52, 61, 66], "repair_candidates": [13, 38, 43, 47, 52, 61, 66, 9, 23, 30, 2, 27, 35, 41, 45, 50, 57, 62]}}
{"prediction": {"error_location": 0.5068458914756775, "repair_targets": [0.5434547662734985, 0.11377131938934326, 0.11266028136014938, 0.03803174942731857, 0.003511840244755149, 0.001059268950484693, 0.01225393358618021], "repair_candidates": [0.00357458321377635, 0.13130034506320953, 0.5434547662734985, 0.006619506515562534, 0.002780388342216611, 0.0013508751289919019, 0.0038290841039270163, 0.11377131938934326, 0.00029779525357298553, 0.11266028136014938, 0.000410508771892637, 0.03803174942731857, 0.02343870885670185, 0.003511840244755149, 9.164831135421991e-05, 0.001059268950484693, 0.0015633899020031095, 0.01225393358618021], "target_probs": 0.8247432112693787}}


{"result": {"time": "2021-02-11 11:40:23.676392", "n_pass": [222, 32, 12], "n_token": 68, "loss": [0.706023633480072, 0.1665816605091095], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def test_fromElementMinimal(", "self", ")", ":", "#NEWLINE#", "#INDENT#", "'\\n        A minimal roster item has a reference to the JID of the contact.\\n        '", "#NEWLINE#", "xml", "=", "'\\n            <item xmlns=\"jabber:iq:roster\"\\n                  jid=\"test@example.org\"/>\\n        '", "#NEWLINE#", "item", "=", "xmppim", ".", "RosterItem", ".", "fromElement", "(", "parseXml", "(", "xml", ")", ")", "#NEWLINE#", "self", ".", "assertEqual", "xml", ".", "entity", ")", "#NEWLINE#", "self", "''", ",", "item", ".", "#NEWLINE#", "self", "(", "item", "#NEWLINE#", "self", "(", "item", ")", "#NEWLINE#", "self", ".", "item", ".", "pendingOut", ")", "#NEWLINE#", "self", "(", "item", "self", ".", "assertEqual", "(", "item", ".", "groups", ")"]}}
{"position": {"error_location": 30, "repair_targets": [13, 38, 43, 47, 52, 59, 64], "repair_candidates": [13, 38, 43, 47, 52, 59, 64, 9, 23, 30, 2, 27, 35, 41, 45, 50, 57, 60]}}
{"prediction": {"error_location": 0.49360305070877075, "repair_targets": [0.5353888869285583, 0.13924430310726166, 0.11221980303525925, 0.03428872302174568, 0.0051939962431788445, 0.0006067502545192838, 0.019611258059740067], "repair_candidates": [0.003448330797255039, 0.11464628577232361, 0.5353888869285583, 0.009574326686561108, 0.002636437537148595, 0.0013554091565310955, 0.0033218758180737495, 0.13924430310726166, 0.00030169548699632287, 0.11221980303525925, 0.0005385492113418877, 0.03428872302174568, 0.01660553552210331, 0.0051939962431788445, 3.280225064372644e-05, 0.0006067502545192838, 0.000985116814263165, 0.019611258059740067], "target_probs": 0.8465536832809448}}


{"result": {"time": "2021-02-11 11:40:23.734472", "n_pass": [225, 33, 13], "n_token": 66, "loss": [0.9094194173812866, 0.10504521429538727], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def test_fromElementMinimal(", "self", ")", ":", "#NEWLINE#", "#INDENT#", "'\\n        A minimal roster item has a reference to the JID of the contact.\\n        '", "#NEWLINE#", "xml", "=", "'\\n            <item xmlns=\"jabber:iq:roster\"\\n                  jid=\"test@example.org\"/>\\n        '", "#NEWLINE#", "item", "=", "xmppim", ".", "RosterItem", ".", "fromElement", "(", "parseXml", "(", "xml", ")", ")", "#NEWLINE#", "self", ".", "assertEqual", "xml", ".", "entity", ")", "#NEWLINE#", "self", "''", ",", "item", ".", "#NEWLINE#", "self", "(", "item", "#NEWLINE#", "self", "(", "item", ")", "#NEWLINE#", "self", ".", "item", ".", "pendingOut", ")", "#NEWLINE#", "self", "(", "item", "self", ".", "item", ".", "groups", ")"]}}
{"position": {"error_location": 30, "repair_targets": [13, 38, 43, 47, 52, 59, 62], "repair_candidates": [13, 38, 43, 47, 52, 59, 62, 9, 23, 30, 2, 27, 35, 41, 45, 50, 57, 60]}}
{"prediction": {"error_location": 0.4027579426765442, "repair_targets": [0.5771531462669373, 0.07327961921691895, 0.07840143889188766, 0.06870870292186737, 0.010545292869210243, 0.08293720334768295, 0.009258395060896873], "repair_candidates": [0.005660790950059891, 0.039035625755786896, 0.5771531462669373, 0.003431171178817749, 0.006245181430131197, 0.0025934865698218346, 0.003552662907168269, 0.07327961921691895, 0.00037573944428004324, 0.07840143889188766, 0.0006621827487833798, 0.06870870292186737, 0.03152204304933548, 0.010545292869210243, 0.0003773629432544112, 0.08293720334768295, 0.006259933579713106, 0.009258395060896873], "target_probs": 0.9002838134765625}}


{"result": {"time": "2021-02-11 11:40:23.962535", "n_pass": [231, 37, 14], "n_token": 65, "loss": [0.9281070232391357, 0.14451411366462708], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def test_fromElementMinimal(", "self", ":", "#NEWLINE#", "#INDENT#", "'\\n        A minimal roster item has a reference to the JID of the contact.\\n        '", "#NEWLINE#", "xml", "=", "'\\n            <item xmlns=\"jabber:iq:roster\"\\n                  jid=\"test@example.org\"/>\\n        '", "#NEWLINE#", "item", "=", "xmppim", ".", "RosterItem", ".", "fromElement", "(", "parseXml", "(", "xml", ")", ")", "#NEWLINE#", "self", ".", "assertEqual", "xml", ".", "entity", ")", "#NEWLINE#", "self", "''", ",", "item", ".", "#NEWLINE#", "self", "(", "item", "#NEWLINE#", "self", "(", "item", ")", "#NEWLINE#", "self", ".", "item", ".", "pendingOut", ")", "#NEWLINE#", "self", "(", "item", "self", ".", "item", ".", "groups", ")"]}}
{"position": {"error_location": 29, "repair_targets": [12, 37, 42, 46, 51, 58, 61], "repair_candidates": [12, 37, 42, 46, 51, 58, 61, 8, 22, 29, 2, 26, 34, 40, 44, 49, 56, 59]}}
{"prediction": {"error_location": 0.39530131220817566, "repair_targets": [0.5455101132392883, 0.07607313245534897, 0.06969426572322845, 0.06551016122102737, 0.011094199493527412, 0.08891370892524719, 0.008647083304822445], "repair_candidates": [0.014123051427304745, 0.04031288996338844, 0.5455101132392883, 0.005091916769742966, 0.012364711612462997, 0.0021204587537795305, 0.004257604945451021, 0.07607313245534897, 0.00048342393711209297, 0.06969426572322845, 0.0008068523020483553, 0.06551016122102737, 0.04646426811814308, 0.011094199493527412, 0.0005208443617448211, 0.08891370892524719, 0.008011278696358204, 0.008647083304822445], "target_probs": 0.86544269323349}}


{"result": {"time": "2021-02-11 11:40:25.170025", "n_pass": [258, 58, 15], "n_token": 63, "loss": [0.8726873397827148, 0.1802365630865097], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def test_fromElementMinimal(", "self", ":", "#NEWLINE#", "#INDENT#", "'\\n        A minimal roster item has a reference to the JID of the contact.\\n        '", "#NEWLINE#", "xml", "=", "'\\n            <item xmlns=\"jabber:iq:roster\"\\n                  jid=\"test@example.org\"/>\\n        '", "#NEWLINE#", "item", "=", "xmppim", ".", "RosterItem", ".", "fromElement", "(", "parseXml", "(", "xml", ")", ")", "#NEWLINE#", "self", ".", "assertEqual", "xml", ".", "entity", ")", "#NEWLINE#", "self", "item", ".", "#NEWLINE#", "self", "(", "item", "#NEWLINE#", "self", "(", "item", ")", "#NEWLINE#", "self", ".", "item", ".", "pendingOut", ")", "#NEWLINE#", "self", "(", "item", "self", ".", "item", ".", "groups", ")"]}}
{"position": {"error_location": 29, "repair_targets": [12, 35, 40, 44, 49, 56, 59], "repair_candidates": [12, 35, 40, 44, 49, 56, 59, 8, 22, 29, 2, 26, 34, 38, 42, 47, 54, 57]}}
{"prediction": {"error_location": 0.41782718896865845, "repair_targets": [0.622711181640625, 0.035085130482912064, 0.03977598994970322, 0.06189284473657608, 0.00998261384665966, 0.05953526496887207, 0.006089636590331793], "repair_candidates": [0.022109946236014366, 0.02040071412920952, 0.622711181640625, 0.002794241299852729, 0.015484452247619629, 0.00197582901455462, 0.02891073003411293, 0.035085130482912064, 0.005090926308184862, 0.03977598994970322, 0.0014594667591154575, 0.06189284473657608, 0.04579291492700577, 0.00998261384665966, 0.0008810209110379219, 0.05953526496887207, 0.020027173683047295, 0.006089636590331793], "target_probs": 0.8350726366043091}}


{"result": {"time": "2021-02-11 11:40:25.230214", "n_pass": [264, 59, 16], "n_token": 61, "loss": [0.5950513482093811, 0.0463159903883934], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def test_fromElementMinimal(", "self", ":", "#NEWLINE#", "#INDENT#", "'\\n        A minimal roster item has a reference to the JID of the contact.\\n        '", "#NEWLINE#", "xml", "=", "'\\n            <item xmlns=\"jabber:iq:roster\"\\n                  jid=\"test@example.org\"/>\\n        '", "#NEWLINE#", "item", "=", "xmppim", ".", "RosterItem", ".", "fromElement", "(", "parseXml", "(", "xml", ")", ")", "#NEWLINE#", "self", ".", "assertEqual", "xml", ".", "entity", ")", "#NEWLINE#", "self", "item", ".", "#NEWLINE#", "self", "(", "item", "#NEWLINE#", "self", "(", "item", "self", ".", "item", ".", "pendingOut", ")", "#NEWLINE#", "self", "(", "item", "self", ".", "item", ".", "groups", ")"]}}
{"position": {"error_location": 29, "repair_targets": [12, 35, 40, 44, 47, 54, 57], "repair_candidates": [12, 35, 40, 44, 47, 54, 57, 8, 22, 29, 2, 26, 34, 38, 42, 45, 52, 55]}}
{"prediction": {"error_location": 0.5515341758728027, "repair_targets": [0.6657329797744751, 0.024204567074775696, 0.0356997549533844, 0.17402568459510803, 0.017078759148716927, 0.034325022250413895, 0.0036734682507812977], "repair_candidates": [0.0033557077404111624, 0.008015833795070648, 0.6657329797744751, 0.0011660571908578277, 0.0038832633290439844, 0.0013122317614033818, 0.007366230245679617, 0.024204567074775696, 0.0027277495246380568, 0.0356997549533844, 0.0011839219368994236, 0.17402568459510803, 0.012424979358911514, 0.017078759148716927, 0.00013888461398892105, 0.034325022250413895, 0.003684862982481718, 0.0036734682507812977], "target_probs": 0.9547402262687683}}


{"result": {"time": "2021-02-11 11:40:25.288080", "n_pass": [267, 60, 17], "n_token": 59, "loss": [0.5794757008552551, 0.05878372862935066], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def test_fromElementMinimal(", "self", ":", "#NEWLINE#", "#INDENT#", "'\\n        A minimal roster item has a reference to the JID of the contact.\\n        '", "#NEWLINE#", "xml", "=", "'\\n            <item xmlns=\"jabber:iq:roster\"\\n                  jid=\"test@example.org\"/>\\n        '", "#NEWLINE#", "item", "=", "xmppim", ".", "RosterItem", ".", "fromElement", "(", "parseXml", "(", "xml", ")", ")", "#NEWLINE#", "self", ".", "assertEqual", "xml", ".", "entity", ")", "#NEWLINE#", "self", "item", ".", "#NEWLINE#", "self", "(", "item", "#NEWLINE#", "self", "(", "item", "self", ".", "item", ".", "#NEWLINE#", "self", "(", "item", "self", ".", "item", ".", "groups", ")"]}}
{"position": {"error_location": 29, "repair_targets": [12, 35, 40, 44, 47, 52, 55], "repair_candidates": [12, 35, 40, 44, 47, 52, 55, 8, 22, 29, 2, 26, 34, 38, 42, 45, 50, 53]}}
{"prediction": {"error_location": 0.5601919889450073, "repair_targets": [0.692176103591919, 0.03339823707938194, 0.05999240651726723, 0.12520308792591095, 0.007971282117068768, 0.019840672612190247, 0.004328896291553974], "repair_candidates": [0.002527320059016347, 0.00831521861255169, 0.692176103591919, 0.0014653820544481277, 0.0042849150486290455, 0.0019458014285191894, 0.01086901780217886, 0.03339823707938194, 0.004195586312562227, 0.05999240651726723, 0.0011606550542637706, 0.12520308792591095, 0.01703447289764881, 0.007971282117068768, 0.0002202993055107072, 0.019840672612190247, 0.005070681683719158, 0.004328896291553974], "target_probs": 0.9429106712341309}}


{"result": {"time": "2021-02-11 11:40:25.346367", "n_pass": [272, 61, 18], "n_token": 57, "loss": [0.6517985463142395, 0.05743711441755295], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def test_fromElementMinimal(", "self", ":", "#NEWLINE#", "#INDENT#", "'\\n        A minimal roster item has a reference to the JID of the contact.\\n        '", "#NEWLINE#", "xml", "=", "'\\n            <item xmlns=\"jabber:iq:roster\"\\n                  jid=\"test@example.org\"/>\\n        '", "#NEWLINE#", "item", "=", "xmppim", ".", "RosterItem", ".", "fromElement", "(", "parseXml", "(", "xml", ")", ")", "#NEWLINE#", "self", ".", "assertEqual", "xml", ".", "entity", ")", "#NEWLINE#", "self", "item", ".", "#NEWLINE#", "self", "(", "item", "#NEWLINE#", "self", "(", "item", "self", ".", "item", ".", "#NEWLINE#", "self", "(", "item", "self", ".", "item", "."]}}
{"position": {"error_location": 29, "repair_targets": [12, 35, 40, 44, 47, 52, 55], "repair_candidates": [12, 35, 40, 44, 47, 52, 55, 8, 22, 29, 2, 26, 34, 38, 42, 45, 50, 53]}}
{"prediction": {"error_location": 0.5211077332496643, "repair_targets": [0.6757305860519409, 0.04113800451159477, 0.06893512606620789, 0.12093567848205566, 0.009910378605127335, 0.023987077176570892, 0.0035444023087620735], "repair_candidates": [0.002348612528294325, 0.00901747215539217, 0.6757305860519409, 0.0017420223448425531, 0.004048937000334263, 0.002333652460947633, 0.011725354939699173, 0.04113800451159477, 0.0047149574384093285, 0.06893512606620789, 0.0013114083558321, 0.12093567848205566, 0.01422331016510725, 0.009910378605127335, 0.00031327659962698817, 0.023987077176570892, 0.004039721097797155, 0.0035444023087620735], "target_probs": 0.9441812634468079}}


{"result": {"time": "2021-02-11 11:40:26.841054", "n_pass": [351, 87, 19], "n_token": 56, "loss": [0.1793711930513382, 0.22130538523197174], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def test_fromElementMinimal(", "self", ":", "#NEWLINE#", "#INDENT#", "'\\n        A minimal roster item has a reference to the JID of the contact.\\n        '", "#NEWLINE#", "xml", "=", "'\\n            <item xmlns=\"jabber:iq:roster\"\\n                  jid=\"test@example.org\"/>\\n        '", "#NEWLINE#", "item", "=", "xmppim", ".", "RosterItem", ".", "fromElement", "(", "parseXml", "(", "xml", ")", ")", "#NEWLINE#", "self", "assertEqual", "xml", ".", "entity", ")", "#NEWLINE#", "self", "item", ".", "#NEWLINE#", "self", "(", "item", "#NEWLINE#", "self", "(", "item", "self", ".", "item", ".", "#NEWLINE#", "self", "(", "item", "self", ".", "item", "."]}}
{"position": {"error_location": 28, "repair_targets": [12, 34, 39, 43, 46, 51, 54], "repair_candidates": [12, 34, 39, 43, 46, 51, 54, 8, 22, 28, 2, 26, 33, 37, 41, 44, 49, 52]}}
{"prediction": {"error_location": 0.8357955813407898, "repair_targets": [0.569363534450531, 0.028607947751879692, 0.046794481575489044, 0.14203202724456787, 0.004346553236246109, 0.009011843241751194, 0.001315512927249074], "repair_candidates": [0.008173531852662563, 0.003802080173045397, 0.569363534450531, 0.0009053743560798466, 0.0018121436005458236, 0.0008720910409465432, 0.04217371344566345, 0.028607947751879692, 0.004765178542584181, 0.046794481575489044, 0.000903263979125768, 0.14203202724456787, 0.1235298290848732, 0.004346553236246109, 0.00013372815737966448, 0.009011843241751194, 0.01145712099969387, 0.001315512927249074], "target_probs": 0.8014718890190125}}


{"result": {"time": "2021-02-11 11:40:26.901126", "n_pass": [353, 88, 20], "n_token": 55, "loss": [0.43005454540252686, 0.016638606786727905], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def test_fromElementMinimal(", "self", ":", "#NEWLINE#", "#INDENT#", "'\\n        A minimal roster item has a reference to the JID of the contact.\\n        '", "#NEWLINE#", "xml", "=", "'\\n            <item xmlns=\"jabber:iq:roster\"\\n                  jid=\"test@example.org\"/>\\n        '", "#NEWLINE#", "item", "=", "xmppim", ".", "RosterItem", ".", "fromElement", "(", "parseXml", "(", "xml", ")", ")", "#NEWLINE#", "self", "assertEqual", "xml", "entity", ")", "#NEWLINE#", "self", "item", ".", "#NEWLINE#", "self", "(", "item", "#NEWLINE#", "self", "(", "item", "self", ".", "item", ".", "#NEWLINE#", "self", "(", "item", "self", ".", "item", "."]}}
{"position": {"error_location": 28, "repair_targets": [12, 33, 38, 42, 45, 50, 53], "repair_candidates": [12, 33, 38, 42, 45, 50, 53, 8, 22, 28, 2, 26, 32, 36, 40, 43, 48, 51]}}
{"prediction": {"error_location": 0.6504737138748169, "repair_targets": [0.6876559853553772, 0.04542025551199913, 0.08816291391849518, 0.12127143889665604, 0.013258688151836395, 0.024210134521126747, 0.0035196333192288876], "repair_candidates": [0.000720012525562197, 0.0032331235706806183, 0.6876559853553772, 0.0001947021810337901, 0.00016624387353658676, 0.001437932951375842, 0.0012839485425502062, 0.04542025551199913, 0.002163124503567815, 0.08816291391849518, 0.001027081860229373, 0.12127143889665604, 0.005383087322115898, 0.013258688151836395, 0.00011095796071458608, 0.024210134521126747, 0.0007806822541169822, 0.0035196333192288876], "target_probs": 0.9834990501403809}}


{"result": {"time": "2021-02-11 11:40:26.958907", "n_pass": [354, 89, 21], "n_token": 54, "loss": [0.8604969382286072, 0.03664903715252876], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def test_fromElementMinimal(", "self", ":", "#NEWLINE#", "#INDENT#", "'\\n        A minimal roster item has a reference to the JID of the contact.\\n        '", "#NEWLINE#", "xml", "=", "'\\n            <item xmlns=\"jabber:iq:roster\"\\n                  jid=\"test@example.org\"/>\\n        '", "#NEWLINE#", "item", "=", "xmppim", ".", "RosterItem", ".", "fromElement", "(", "parseXml", "(", "xml", ")", ")", "#NEWLINE#", "self", "assertEqual", "xml", ")", "#NEWLINE#", "self", "item", ".", "#NEWLINE#", "self", "(", "item", "#NEWLINE#", "self", "(", "item", "self", ".", "item", ".", "#NEWLINE#", "self", "(", "item", "self", ".", "item", "."]}}
{"position": {"error_location": 28, "repair_targets": [12, 32, 37, 41, 44, 49, 52], "repair_candidates": [12, 32, 37, 41, 44, 49, 52, 8, 22, 28, 2, 26, 31, 35, 39, 42, 47, 50]}}
{"prediction": {"error_location": 0.4229518473148346, "repair_targets": [0.6170248985290527, 0.06970508396625519, 0.09860522300004959, 0.12753339111804962, 0.021732980385422707, 0.022702811285853386, 0.006709952373057604], "repair_candidates": [0.0024460621643811464, 0.010026459582149982, 0.6170248985290527, 0.0008087257738225162, 0.0005238612066023052, 0.0026031145825982094, 0.0027719158679246902, 0.06970508396625519, 0.004532292485237122, 0.09860522300004959, 0.0030668615363538265, 0.12753339111804962, 0.007270568050444126, 0.021732980385422707, 0.0004168945306446403, 0.022702811285853386, 0.0015189754776656628, 0.006709952373057604], "target_probs": 0.9640144109725952}}


{"result": {"time": "2021-02-11 11:40:27.244959", "n_pass": [362, 94, 22], "n_token": 53, "loss": [1.3063949346542358, 0.07873126864433289], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def test_fromElementMinimal(", "self", ":", "#NEWLINE#", "#INDENT#", "'\\n        A minimal roster item has a reference to the JID of the contact.\\n        '", "#NEWLINE#", "xml", "=", "'\\n            <item xmlns=\"jabber:iq:roster\"\\n                  jid=\"test@example.org\"/>\\n        '", "#NEWLINE#", "item", "=", "xmppim", ".", "RosterItem", ".", "fromElement", "(", "parseXml", "(", "xml", ")", ")", "#NEWLINE#", "self", "assertEqual", "xml", ")", "#NEWLINE#", "self", "item", ".", "#NEWLINE#", "self", "item", "#NEWLINE#", "self", "(", "item", "self", ".", "item", ".", "#NEWLINE#", "self", "(", "item", "self", ".", "item", "."]}}
{"position": {"error_location": 28, "repair_targets": [12, 32, 36, 40, 43, 48, 51], "repair_candidates": [12, 32, 36, 40, 43, 48, 51, 8, 22, 28, 2, 26, 31, 35, 38, 41, 46, 49]}}
{"prediction": {"error_location": 0.270794540643692, "repair_targets": [0.4495343565940857, 0.09726280719041824, 0.1650317758321762, 0.13110984861850739, 0.019578898325562477, 0.05240524560213089, 0.009365329518914223], "repair_candidates": [0.0028001030441373587, 0.03579380363225937, 0.4495343565940857, 0.0026247124187648296, 0.0013293824158608913, 0.005832627881318331, 0.0053712246008217335, 0.09726280719041824, 0.008172556757926941, 0.1650317758321762, 0.004841758869588375, 0.13110984861850739, 0.006422370672225952, 0.019578898325562477, 0.0005603021127171814, 0.05240524560213089, 0.001962959999218583, 0.009365329518914223], "target_probs": 0.924288272857666}}


{"result": {"time": "2021-02-11 11:40:27.471147", "n_pass": [371, 98, 23], "n_token": 52, "loss": [1.1963489055633545, 0.08910749107599258], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def test_fromElementMinimal(", "self", ":", "#NEWLINE#", "#INDENT#", "'\\n        A minimal roster item has a reference to the JID of the contact.\\n        '", "#NEWLINE#", "xml", "=", "'\\n            <item xmlns=\"jabber:iq:roster\"\\n                  jid=\"test@example.org\"/>\\n        '", "#NEWLINE#", "item", "=", "xmppim", ".", "RosterItem", ".", "fromElement", "(", "parseXml", "(", "xml", ")", ")", "#NEWLINE#", "self", "assertEqual", "xml", ")", "#NEWLINE#", "self", "item", ".", "#NEWLINE#", "self", "item", "#NEWLINE#", "self", "(", "item", "self", ".", "item", "#NEWLINE#", "self", "(", "item", "self", ".", "item", "."]}}
{"position": {"error_location": 28, "repair_targets": [12, 32, 36, 40, 43, 47, 50], "repair_candidates": [12, 32, 36, 40, 43, 47, 50, 8, 22, 28, 2, 26, 31, 35, 38, 41, 45, 48]}}
{"prediction": {"error_location": 0.3022959232330322, "repair_targets": [0.43622633814811707, 0.10659830272197723, 0.16405700147151947, 0.11841646581888199, 0.006653845775872469, 0.07201320677995682, 0.010782060213387012], "repair_candidates": [0.0027138032019138336, 0.03346320986747742, 0.43622633814811707, 0.002343788044527173, 0.0010510667925700545, 0.007458053529262543, 0.006901256740093231, 0.10659830272197723, 0.008992829360067844, 0.16405700147151947, 0.004509957041591406, 0.11841646581888199, 0.011684214696288109, 0.006653845775872469, 0.00259951688349247, 0.07201320677995682, 0.003535148687660694, 0.010782060213387012], "target_probs": 0.9147472381591797}}


{"result": {"time": "2021-02-11 11:40:27.587517", "n_pass": [374, 100, 24], "n_token": 51, "loss": [1.1352144479751587, 0.07507098466157913], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def test_fromElementMinimal(", "self", ":", "#NEWLINE#", "#INDENT#", "'\\n        A minimal roster item has a reference to the JID of the contact.\\n        '", "#NEWLINE#", "xml", "=", "'\\n            <item xmlns=\"jabber:iq:roster\"\\n                  jid=\"test@example.org\"/>\\n        '", "#NEWLINE#", "item", "=", "xmppim", ".", "RosterItem", ".", "fromElement", "(", "parseXml", "(", "xml", ")", ")", "#NEWLINE#", "self", "assertEqual", "xml", ")", "#NEWLINE#", "self", "item", ".", "#NEWLINE#", "self", "item", "#NEWLINE#", "self", "(", "item", "self", ".", "item", "#NEWLINE#", "self", "item", "self", ".", "item", "."]}}
{"position": {"error_location": 28, "repair_targets": [12, 32, 36, 40, 43, 46, 49], "repair_candidates": [12, 32, 36, 40, 43, 46, 49, 8, 22, 28, 2, 26, 31, 35, 38, 41, 45, 47]}}
{"prediction": {"error_location": 0.3213531970977783, "repair_targets": [0.45839643478393555, 0.12539741396903992, 0.15427736937999725, 0.13470540940761566, 0.0067285289987921715, 0.035687047988176346, 0.012485428713262081], "repair_candidates": [0.001176432124339044, 0.026289448142051697, 0.45839643478393555, 0.0015770839527249336, 0.0016647559823468328, 0.005902083590626717, 0.0038041542284190655, 0.12539741396903992, 0.010437536984682083, 0.15427736937999725, 0.0028522612992674112, 0.13470540940761566, 0.013058940880000591, 0.0067285289987921715, 0.0041368925012648106, 0.035687047988176346, 0.001422753557562828, 0.012485428713262081], "target_probs": 0.9276776313781738}}


{"result": {"time": "2021-02-11 11:40:27.644668", "n_pass": [377, 101, 25], "n_token": 50, "loss": [1.1600496768951416, 0.1148105338215828], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def test_fromElementMinimal(", "self", ":", "#NEWLINE#", "#INDENT#", "'\\n        A minimal roster item has a reference to the JID of the contact.\\n        '", "#NEWLINE#", "xml", "=", "'\\n            <item xmlns=\"jabber:iq:roster\"\\n                  jid=\"test@example.org\"/>\\n        '", "#NEWLINE#", "item", "=", "xmppim", ".", "RosterItem", ".", "fromElement", "(", "parseXml", "(", "xml", ")", ")", "#NEWLINE#", "self", "assertEqual", "xml", ")", "#NEWLINE#", "self", "item", ".", "#NEWLINE#", "self", "item", "#NEWLINE#", "self", "(", "item", "self", ".", "item", "#NEWLINE#", "self", "item", "self", "item", "."]}}
{"position": {"error_location": 28, "repair_targets": [12, 32, 36, 40, 43, 46, 48], "repair_candidates": [12, 32, 36, 40, 43, 46, 48, 8, 22, 28, 2, 26, 31, 35, 38, 41, 45, 47]}}
{"prediction": {"error_location": 0.31347063183784485, "repair_targets": [0.4062323272228241, 0.08989173918962479, 0.12009195983409882, 0.14766249060630798, 0.009312125854194164, 0.10775528848171234, 0.01058906503021717], "repair_candidates": [0.0013410710962489247, 0.028168639168143272, 0.4062323272228241, 0.0014116712845861912, 0.0015344875864684582, 0.005121416412293911, 0.004156332928687334, 0.08989173918962479, 0.01701080985367298, 0.12009195983409882, 0.0033973469398915768, 0.14766249060630798, 0.013838250190019608, 0.009312125854194164, 0.03054216504096985, 0.10775528848171234, 0.001942868810147047, 0.01058906503021717], "target_probs": 0.8915350437164307}}


{"result": {"time": "2021-02-11 11:40:27.757540", "n_pass": [380, 103, 26], "n_token": 49, "loss": [0.20687974989414215, 0.030736777931451797], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["def test_fromElementMinimal(", "self", ":", "#NEWLINE#", "#INDENT#", "'\\n        A minimal roster item has a reference to the JID of the contact.\\n        '", "#NEWLINE#", "xml", "=", "'\\n            <item xmlns=\"jabber:iq:roster\"\\n                  jid=\"test@example.org\"/>\\n        '", "#NEWLINE#", "item", "=", "xmppim", ".", "RosterItem", ".", "fromElement", "(", "parseXml", "(", "xml", ")", ")", "#NEWLINE#", "self", "assertEqual", "xml", ")", "#NEWLINE#", "self", "item", ".", "#NEWLINE#", "self", "item", "#NEWLINE#", "self", "(", "item", "self", ".", "item", "#NEWLINE#", "self", "item", "self", "item", "."]}}
{"position": {"error_location": 27, "repair_targets": [11, 31, 35, 39, 42, 45, 47], "repair_candidates": [11, 31, 35, 39, 42, 45, 47, 7, 21, 27, 1, 25, 30, 34, 37, 40, 44, 46]}}
{"prediction": {"error_location": 0.8131174445152283, "repair_targets": [0.6986271142959595, 0.061569955199956894, 0.05885704234242439, 0.10488193482160568, 0.003944452852010727, 0.03781304880976677, 0.0040372880175709724], "repair_candidates": [0.0017987251048907638, 0.002135150833055377, 0.6986271142959595, 0.00018996139988303185, 0.0011450158199295402, 0.0010902496287599206, 0.0054609267972409725, 0.061569955199956894, 0.009403682313859463, 0.05885704234242439, 0.0011661542812362313, 0.10488193482160568, 0.003777729347348213, 0.003944452852010727, 0.003776837605983019, 0.03781304880976677, 0.0003247038694098592, 0.0040372880175709724], "target_probs": 0.969730794429779}}


{"result": {"time": "2021-02-11 11:40:27.814629", "n_pass": [381, 104, 27], "n_token": 48, "loss": [0.21202902495861053, 0.022210702300071716], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["self", ":", "#NEWLINE#", "#INDENT#", "'\\n        A minimal roster item has a reference to the JID of the contact.\\n        '", "#NEWLINE#", "xml", "=", "'\\n            <item xmlns=\"jabber:iq:roster\"\\n                  jid=\"test@example.org\"/>\\n        '", "#NEWLINE#", "item", "=", "xmppim", ".", "RosterItem", ".", "fromElement", "(", "parseXml", "(", "xml", ")", ")", "#NEWLINE#", "self", "assertEqual", "xml", ")", "#NEWLINE#", "self", "item", ".", "#NEWLINE#", "self", "item", "#NEWLINE#", "self", "(", "item", "self", ".", "item", "#NEWLINE#", "self", "item", "self", "item", "."]}}
{"position": {"error_location": 26, "repair_targets": [10, 30, 34, 38, 41, 44, 46], "repair_candidates": [10, 30, 34, 38, 41, 44, 46, 6, 20, 26, 0, 24, 29, 33, 36, 39, 43, 45]}}
{"prediction": {"error_location": 0.808941125869751, "repair_targets": [0.7035548090934753, 0.06343863159418106, 0.07966092228889465, 0.09184231609106064, 0.003875388065353036, 0.03210988640785217, 0.0035521870013326406], "repair_candidates": [0.0016859970055520535, 0.0023047507274895906, 0.7035548090934753, 0.00022652448387816548, 0.0008542839786969125, 0.0008982212748378515, 0.00268355174921453, 0.06343863159418106, 0.006223773583769798, 0.07966092228889465, 0.0011636569397524, 0.09184231609106064, 0.001998357707634568, 0.003875388065353036, 0.003738311817869544, 0.03210988640785217, 0.00018837027892004699, 0.0035521870013326406], "target_probs": 0.9780341386795044}}


{"result": {"time": "2021-02-11 11:40:27.874145", "n_pass": [383, 105, 28], "n_token": 47, "loss": [0.17574089765548706, 0.014643673785030842], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["self", "#NEWLINE#", "#INDENT#", "'\\n        A minimal roster item has a reference to the JID of the contact.\\n        '", "#NEWLINE#", "xml", "=", "'\\n            <item xmlns=\"jabber:iq:roster\"\\n                  jid=\"test@example.org\"/>\\n        '", "#NEWLINE#", "item", "=", "xmppim", ".", "RosterItem", ".", "fromElement", "(", "parseXml", "(", "xml", ")", ")", "#NEWLINE#", "self", "assertEqual", "xml", ")", "#NEWLINE#", "self", "item", ".", "#NEWLINE#", "self", "item", "#NEWLINE#", "self", "(", "item", "self", ".", "item", "#NEWLINE#", "self", "item", "self", "item", "."]}}
{"position": {"error_location": 25, "repair_targets": [9, 29, 33, 37, 40, 43, 45], "repair_candidates": [9, 29, 33, 37, 40, 43, 45, 5, 19, 25, 0, 23, 28, 32, 35, 38, 42, 44]}}
{"prediction": {"error_location": 0.8388352990150452, "repair_targets": [0.6982409954071045, 0.08177156001329422, 0.12578260898590088, 0.05089921876788139, 0.00360216130502522, 0.020980417728424072, 0.004186050966382027], "repair_candidates": [0.0016582239186391234, 0.002065404085442424, 0.6982409954071045, 0.00017864673282019794, 0.0005457531660795212, 0.000650127069093287, 0.0013245673617348075, 0.08177156001329422, 0.003339797491207719, 0.12578260898590088, 0.0006643363158218563, 0.05089921876788139, 0.0011683565098792315, 0.00360216130502522, 0.0028097317554056644, 0.020980417728424072, 0.0001319948205491528, 0.004186050966382027], "target_probs": 0.98546302318573}}


{"result": {"time": "2021-02-11 11:40:27.930393", "n_pass": [384, 106, 29], "n_token": 46, "loss": [0.25971555709838867, 0.015842335298657417], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["self", "#INDENT#", "'\\n        A minimal roster item has a reference to the JID of the contact.\\n        '", "#NEWLINE#", "xml", "=", "'\\n            <item xmlns=\"jabber:iq:roster\"\\n                  jid=\"test@example.org\"/>\\n        '", "#NEWLINE#", "item", "=", "xmppim", ".", "RosterItem", ".", "fromElement", "(", "parseXml", "(", "xml", ")", ")", "#NEWLINE#", "self", "assertEqual", "xml", ")", "#NEWLINE#", "self", "item", ".", "#NEWLINE#", "self", "item", "#NEWLINE#", "self", "(", "item", "self", ".", "item", "#NEWLINE#", "self", "item", "self", "item", "."]}}
{"position": {"error_location": 24, "repair_targets": [8, 28, 32, 36, 39, 42, 44], "repair_candidates": [8, 28, 32, 36, 39, 42, 44, 4, 18, 24, 0, 22, 27, 31, 34, 37, 41, 43]}}
{"prediction": {"error_location": 0.7712710499763489, "repair_targets": [0.551332414150238, 0.11011183261871338, 0.2592211663722992, 0.033043280243873596, 0.006906060501933098, 0.016087565571069717, 0.007580183912068605], "repair_candidates": [0.0026283275801688433, 0.0034435209818184376, 0.551332414150238, 0.0001615968212718144, 0.0005656944704242051, 0.0007391483522951603, 0.000895908335223794, 0.11011183261871338, 0.0027950797230005264, 0.2592211663722992, 0.0006677286582998931, 0.033043280243873596, 0.0006837360560894012, 0.006906060501933098, 0.0029625718016177416, 0.016087565571069717, 0.00017417114577256143, 0.007580183912068605], "target_probs": 0.9842824935913086}}


{"result": {"time": "2021-02-11 11:40:27.986715", "n_pass": [385, 107, 30], "n_token": 45, "loss": [0.49959874153137207, 0.02906356006860733], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["self", "'\\n        A minimal roster item has a reference to the JID of the contact.\\n        '", "#NEWLINE#", "xml", "=", "'\\n            <item xmlns=\"jabber:iq:roster\"\\n                  jid=\"test@example.org\"/>\\n        '", "#NEWLINE#", "item", "=", "xmppim", ".", "RosterItem", ".", "fromElement", "(", "parseXml", "(", "xml", ")", ")", "#NEWLINE#", "self", "assertEqual", "xml", ")", "#NEWLINE#", "self", "item", ".", "#NEWLINE#", "self", "item", "#NEWLINE#", "self", "(", "item", "self", ".", "item", "#NEWLINE#", "self", "item", "self", "item", "."]}}
{"position": {"error_location": 23, "repair_targets": [7, 27, 31, 35, 38, 41, 43], "repair_candidates": [7, 27, 31, 35, 38, 41, 43, 3, 17, 23, 0, 21, 26, 30, 33, 36, 40, 42]}}
{"prediction": {"error_location": 0.606774091720581, "repair_targets": [0.5679680705070496, 0.1131272241473198, 0.23693972826004028, 0.011901108548045158, 0.006809980608522892, 0.02784954570233822, 0.006759066134691238], "repair_candidates": [0.0057621970772743225, 0.012114187702536583, 0.5679680705070496, 0.0003959903260692954, 0.0014611199731007218, 0.0015555209247395396, 0.0016354421386495233, 0.1131272241473198, 0.0021105820778757334, 0.23693972826004028, 0.0007829841342754662, 0.011901108548045158, 0.0004298594139982015, 0.006809980608522892, 0.0019625688437372446, 0.02784954570233822, 0.0004347949870862067, 0.006759066134691238], "target_probs": 0.9713547229766846}}


{"result": {"time": "2021-02-11 11:40:28.043320", "n_pass": [386, 108, 31], "n_token": 44, "loss": [0.0307921189814806, 0.0019330576760694385], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["self", "#NEWLINE#", "xml", "=", "'\\n            <item xmlns=\"jabber:iq:roster\"\\n                  jid=\"test@example.org\"/>\\n        '", "#NEWLINE#", "item", "=", "xmppim", ".", "RosterItem", ".", "fromElement", "(", "parseXml", "(", "xml", ")", ")", "#NEWLINE#", "self", "assertEqual", "xml", ")", "#NEWLINE#", "self", "item", ".", "#NEWLINE#", "self", "item", "#NEWLINE#", "self", "(", "item", "self", ".", "item", "#NEWLINE#", "self", "item", "self", "item", "."]}}
{"position": {"error_location": 22, "repair_targets": [6, 26, 30, 34, 37, 40, 42], "repair_candidates": [6, 26, 30, 34, 37, 40, 42, 2, 16, 22, 0, 20, 25, 29, 32, 35, 39, 41]}}
{"prediction": {"error_location": 0.9696771502494812, "repair_targets": [0.7165197134017944, 0.04656238108873367, 0.20169445872306824, 0.009398509748280048, 0.002079435158520937, 0.018937481567263603, 0.0028768349438905716], "repair_candidates": [0.0004150084569118917, 8.8878208771348e-05, 0.7165197134017944, 1.380411868012743e-05, 0.00042013515485450625, 2.5742092475411482e-05, 0.00016645144205540419, 0.04656238108873367, 0.00014934503997210413, 0.20169445872306824, 2.5710833142511547e-05, 0.009398509748280048, 9.4114504463505e-05, 0.002079435158520937, 0.0004605502763297409, 0.018937481567263603, 7.135009218472987e-05, 0.0028768349438905716], "target_probs": 0.9980688095092773}}


{"result": {"time": "2021-02-11 11:40:28.159343", "n_pass": [389, 110, 32], "n_token": 43, "loss": [0.05104052647948265, 0.002521711401641369], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["self", "#NEWLINE#", "xml", "'\\n            <item xmlns=\"jabber:iq:roster\"\\n                  jid=\"test@example.org\"/>\\n        '", "#NEWLINE#", "item", "=", "xmppim", ".", "RosterItem", ".", "fromElement", "(", "parseXml", "(", "xml", ")", ")", "#NEWLINE#", "self", "assertEqual", "xml", ")", "#NEWLINE#", "self", "item", ".", "#NEWLINE#", "self", "item", "#NEWLINE#", "self", "(", "item", "self", ".", "item", "#NEWLINE#", "self", "item", "self", "item", "."]}}
{"position": {"error_location": 21, "repair_targets": [5, 25, 29, 33, 36, 39, 41], "repair_candidates": [5, 25, 29, 33, 36, 39, 41, 2, 15, 21, 0, 19, 24, 28, 31, 34, 38, 40]}}
{"prediction": {"error_location": 0.9502399563789368, "repair_targets": [0.6886276602745056, 0.06959487497806549, 0.20261120796203613, 0.011138173751533031, 0.002266724593937397, 0.0195620059967041, 0.0036808382719755173], "repair_candidates": [0.0007269566995091736, 0.0004037612525280565, 0.6886276602745056, 8.793774031801149e-05, 0.000535953207872808, 6.674005999229848e-05, 0.00028044646023772657, 0.06959487497806549, 9.15207783691585e-05, 0.20261120796203613, 1.9965691535617225e-05, 0.011138173751533031, 7.028848631307483e-05, 0.002266724593937397, 0.00017749873222783208, 0.0195620059967041, 5.7566514442441985e-05, 0.0036808382719755173], "target_probs": 0.9974814653396606}}


{"result": {"time": "2021-02-11 11:40:28.215824", "n_pass": [390, 111, 33], "n_token": 42, "loss": [0.3151266276836395, 0.007727301679551601], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["self", "#NEWLINE#", "xml", "#NEWLINE#", "item", "=", "xmppim", ".", "RosterItem", ".", "fromElement", "(", "parseXml", "(", "xml", ")", ")", "#NEWLINE#", "self", "assertEqual", "xml", ")", "#NEWLINE#", "self", "item", ".", "#NEWLINE#", "self", "item", "#NEWLINE#", "self", "(", "item", "self", ".", "item", "#NEWLINE#", "self", "item", "self", "item", "."]}}
{"position": {"error_location": 20, "repair_targets": [4, 24, 28, 32, 35, 38, 40], "repair_candidates": [4, 24, 28, 32, 35, 38, 40, 2, 14, 20, 0, 18, 23, 27, 30, 33, 37, 39]}}
{"prediction": {"error_location": 0.72969651222229, "repair_targets": [0.91049724817276, 0.021525442600250244, 0.04710537940263748, 0.005913896486163139, 0.0021062176674604416, 0.0038969027809798717, 0.0012574215652421117], "repair_candidates": [0.002447922248393297, 0.002478808630257845, 0.91049724817276, 0.001364382216706872, 0.0001631781633477658, 0.000519402208738029, 0.0004149392480030656, 0.021525442600250244, 6.553988350788131e-05, 0.04710537940263748, 2.5375604309374467e-05, 0.005913896486163139, 5.131490615895018e-05, 0.0021062176674604416, 0.0001065112737705931, 0.0038969027809798717, 6.018265776219778e-05, 0.0012574215652421117], "target_probs": 0.9923024773597717}}


{"result": {"time": "2021-02-11 11:40:28.272098", "n_pass": [391, 112, 34], "n_token": 41, "loss": [0.5121356248855591, 0.04234004393219948], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["self", "#NEWLINE#", "xml", "item", "=", "xmppim", ".", "RosterItem", ".", "fromElement", "(", "parseXml", "(", "xml", ")", ")", "#NEWLINE#", "self", "assertEqual", "xml", ")", "#NEWLINE#", "self", "item", ".", "#NEWLINE#", "self", "item", "#NEWLINE#", "self", "(", "item", "self", ".", "item", "#NEWLINE#", "self", "item", "self", "item", "."]}}
{"position": {"error_location": 19, "repair_targets": [3, 23, 27, 31, 34, 37, 39], "repair_candidates": [3, 23, 27, 31, 34, 37, 39, 2, 13, 19, 0, 17, 22, 26, 29, 32, 36, 38]}}
{"prediction": {"error_location": 0.599214494228363, "repair_targets": [0.2662566304206848, 0.20423491299152374, 0.3771761953830719, 0.058445509523153305, 0.009469380602240562, 0.03406793996691704, 0.008893161080777645], "repair_candidates": [0.01123188715428114, 0.011382870376110077, 0.2662566304206848, 0.007386975921690464, 0.004265302792191505, 0.0016520797507837415, 0.002687219763174653, 0.20423491299152374, 0.0011524963192641735, 0.3771761953830719, 0.00016297397087328136, 0.058445509523153305, 0.0005915721412748098, 0.009469380602240562, 0.0006464259349741042, 0.03406793996691704, 0.0002964624436572194, 0.008893161080777645], "target_probs": 0.9585437774658203}}


{"result": {"time": "2021-02-11 11:40:28.440752", "n_pass": [395, 115, 35], "n_token": 40, "loss": [0.7260326147079468, 0.0591566301882267], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["self", "#NEWLINE#", "xml", "item", "=", "xmppim", "RosterItem", ".", "fromElement", "(", "parseXml", "(", "xml", ")", ")", "#NEWLINE#", "self", "assertEqual", "xml", ")", "#NEWLINE#", "self", "item", ".", "#NEWLINE#", "self", "item", "#NEWLINE#", "self", "(", "item", "self", ".", "item", "#NEWLINE#", "self", "item", "self", "item", "."]}}
{"position": {"error_location": 18, "repair_targets": [3, 22, 26, 30, 33, 36, 38], "repair_candidates": [3, 22, 26, 30, 33, 36, 38, 2, 12, 18, 0, 16, 21, 25, 28, 31, 35, 37]}}
{"prediction": {"error_location": 0.483824759721756, "repair_targets": [0.2928731441497803, 0.12335802614688873, 0.43524909019470215, 0.044683147221803665, 0.01230840478092432, 0.023447759449481964, 0.01063955295830965], "repair_candidates": [0.018756624311208725, 0.01912352442741394, 0.2928731441497803, 0.005487238988280296, 0.00493301497772336, 0.0036707159597426653, 0.0026431926526129246, 0.12335802614688873, 0.0012550691608339548, 0.43524909019470215, 0.00022065153461880982, 0.044683147221803665, 0.0007055602036416531, 0.01230840478092432, 0.0005165854236111045, 0.023447759449481964, 0.00012864777818322182, 0.01063955295830965], "target_probs": 0.9425591230392456}}


{"result": {"time": "2021-02-11 11:40:28.555068", "n_pass": [397, 117, 36], "n_token": 39, "loss": [0.6949573755264282, 0.0398101806640625], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["self", "#NEWLINE#", "xml", "item", "=", "xmppim", "RosterItem", "fromElement", "(", "parseXml", "(", "xml", ")", ")", "#NEWLINE#", "self", "assertEqual", "xml", ")", "#NEWLINE#", "self", "item", ".", "#NEWLINE#", "self", "item", "#NEWLINE#", "self", "(", "item", "self", ".", "item", "#NEWLINE#", "self", "item", "self", "item", "."]}}
{"position": {"error_location": 17, "repair_targets": [3, 21, 25, 29, 32, 35, 37], "repair_candidates": [3, 21, 25, 29, 32, 35, 37, 2, 11, 17, 0, 15, 20, 24, 27, 30, 34, 36]}}
{"prediction": {"error_location": 0.49909576773643494, "repair_targets": [0.05601634457707405, 0.48784586787223816, 0.3347610533237457, 0.05521684139966965, 0.009351938031613827, 0.006950410548597574, 0.010829376988112926], "repair_candidates": [0.015070509165525436, 0.007631286513060331, 0.05601634457707405, 0.00018360058311372995, 0.004006658215075731, 0.0023937812075018883, 0.005075108725577593, 0.48784586787223816, 0.0028561390936374664, 0.3347610533237457, 0.00015643643564544618, 0.05521684139966965, 0.0010489588603377342, 0.009351938031613827, 0.00024301632947754115, 0.006950410548597574, 0.0003625804674811661, 0.010829376988112926], "target_probs": 0.9609718322753906}}


{"result": {"time": "2021-02-11 11:40:28.667948", "n_pass": [399, 119, 37], "n_token": 38, "loss": [0.8475468158721924, 0.05266961455345154], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["self", "#NEWLINE#", "xml", "item", "=", "xmppim", "RosterItem", "fromElement", "parseXml", "(", "xml", ")", ")", "#NEWLINE#", "self", "assertEqual", "xml", ")", "#NEWLINE#", "self", "item", ".", "#NEWLINE#", "self", "item", "#NEWLINE#", "self", "(", "item", "self", ".", "item", "#NEWLINE#", "self", "item", "self", "item", "."]}}
{"position": {"error_location": 16, "repair_targets": [3, 20, 24, 28, 31, 34, 36], "repair_candidates": [3, 20, 24, 28, 31, 34, 36, 2, 10, 16, 0, 14, 19, 23, 26, 29, 33, 35]}}
{"prediction": {"error_location": 0.42846474051475525, "repair_targets": [0.0520603284239769, 0.49908697605133057, 0.32696691155433655, 0.044251181185245514, 0.009389767423272133, 0.007094508036971092, 0.009843752719461918], "repair_candidates": [0.01850009709596634, 0.009151834063231945, 0.0520603284239769, 0.00014160829596221447, 0.00576420035213232, 0.0053130569867789745, 0.006468003150075674, 0.49908697605133057, 0.004309860058128834, 0.32696691155433655, 0.0001220845733769238, 0.044251181185245514, 0.0008560540154576302, 0.009389767423272133, 0.00024148680677171797, 0.007094508036971092, 0.00043818552512675524, 0.009843752719461918], "target_probs": 0.9486933946609497}}


{"result": {"time": "2021-02-11 11:40:28.950133", "n_pass": [405, 124, 38], "n_token": 37, "loss": [0.911350429058075, 0.05175255611538887], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["self", "#NEWLINE#", "xml", "item", "=", "xmppim", "RosterItem", "fromElement", "parseXml", "(", "xml", ")", ")", "self", "assertEqual", "xml", ")", "#NEWLINE#", "self", "item", ".", "#NEWLINE#", "self", "item", "#NEWLINE#", "self", "(", "item", "self", ".", "item", "#NEWLINE#", "self", "item", "self", "item", "."]}}
{"position": {"error_location": 15, "repair_targets": [3, 19, 23, 27, 30, 33, 35], "repair_candidates": [3, 19, 23, 27, 30, 33, 35, 2, 10, 15, 0, 13, 18, 22, 25, 28, 32, 34]}}
{"prediction": {"error_location": 0.40198105573654175, "repair_targets": [0.45003581047058105, 0.39177200198173523, 0.05870791897177696, 0.02567831426858902, 0.008472929708659649, 0.009609470143914223, 0.005287360865622759], "repair_candidates": [0.029491223394870758, 0.008708368986845016, 0.45003581047058105, 0.00047882372746244073, 0.001037677749991417, 0.001342268311418593, 0.007449643686413765, 0.39177200198173523, 0.0010963609674945474, 0.05870791897177696, 7.49147729948163e-05, 0.02567831426858902, 0.0003032081585843116, 0.008472929708659649, 0.0002718254108913243, 0.009609470143914223, 0.0001818694727262482, 0.005287360865622759], "target_probs": 0.9495638012886047}}


{"result": {"time": "2021-02-11 11:40:29.233092", "n_pass": [414, 129, 39], "n_token": 36, "loss": [0.7841889262199402, 0.03000536374747753], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["self", "#NEWLINE#", "xml", "item", "=", "xmppim", "RosterItem", "fromElement", "parseXml", "(", "xml", ")", ")", "self", "assertEqual", "xml", ")", "#NEWLINE#", "self", "item", ".", "self", "item", "#NEWLINE#", "self", "(", "item", "self", ".", "item", "#NEWLINE#", "self", "item", "self", "item", "."]}}
{"position": {"error_location": 15, "repair_targets": [3, 19, 22, 26, 29, 32, 34], "repair_candidates": [3, 19, 22, 26, 29, 32, 34, 2, 10, 15, 0, 13, 18, 21, 24, 27, 31, 33]}}
{"prediction": {"error_location": 0.4564896821975708, "repair_targets": [0.6641868352890015, 0.22126497328281403, 0.02817457728087902, 0.028997140005230904, 0.011266945861279964, 0.010711398907005787, 0.005838464945554733], "repair_candidates": [0.01733049564063549, 0.005423069931566715, 0.6641868352890015, 0.0002317142061656341, 0.00046113040298223495, 0.0008324823575094342, 0.004045387730002403, 0.22126497328281403, 0.00047215542872436345, 0.02817457728087902, 4.448524123290554e-05, 0.028997140005230904, 0.00020158469851594418, 0.011266945861279964, 0.0002555641403887421, 0.010711398907005787, 0.00026161139248870313, 0.005838464945554733], "target_probs": 0.9704403281211853}}


{"result": {"time": "2021-02-11 11:40:29.289885", "n_pass": [417, 130, 40], "n_token": 35, "loss": [1.045873999595642, 0.0488944947719574], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["self", "#NEWLINE#", "xml", "item", "=", "xmppim", "RosterItem", "fromElement", "parseXml", "(", "xml", ")", ")", "self", "assertEqual", "xml", ")", "#NEWLINE#", "self", "item", ".", "self", "item", "self", "(", "item", "self", ".", "item", "#NEWLINE#", "self", "item", "self", "item", "."]}}
{"position": {"error_location": 15, "repair_targets": [3, 19, 22, 25, 28, 31, 33], "repair_candidates": [3, 19, 22, 25, 28, 31, 33, 2, 10, 15, 0, 13, 18, 21, 23, 26, 30, 32]}}
{"prediction": {"error_location": 0.35138458013534546, "repair_targets": [0.8109996914863586, 0.000367810222087428, 0.020318515598773956, 0.10907380282878876, 0.005458004307001829, 0.0051486133597791195, 0.0009151663398370147], "repair_candidates": [0.021824587136507034, 0.01602890156209469, 0.8109996914863586, 0.001040043542161584, 0.0009219504427164793, 0.003364607924595475, 0.0006042111199349165, 0.000367810222087428, 0.0014739929465577006, 0.020318515598773956, 0.0011030345922335982, 0.10907380282878876, 0.0009702368406578898, 0.005458004307001829, 0.0002273062855238095, 0.0051486133597791195, 0.000159462375449948, 0.0009151663398370147], "target_probs": 0.9522815942764282}}


{"result": {"time": "2021-02-11 11:40:29.346318", "n_pass": [419, 131, 41], "n_token": 34, "loss": [0.8947446942329407, 0.01255378220230341], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["self", "#NEWLINE#", "xml", "item", "=", "xmppim", "RosterItem", "fromElement", "parseXml", "(", "xml", ")", ")", "self", "assertEqual", "xml", ")", "#NEWLINE#", "self", "item", ".", "self", "item", "self", "item", "self", ".", "item", "#NEWLINE#", "self", "item", "self", "item", "."]}}
{"position": {"error_location": 15, "repair_targets": [3, 19, 22, 24, 27, 30, 32], "repair_candidates": [3, 19, 22, 24, 27, 30, 32, 2, 10, 15, 0, 13, 18, 21, 23, 25, 29, 31]}}
{"prediction": {"error_location": 0.40871185064315796, "repair_targets": [0.8299779891967773, 0.009373676963150501, 0.048449575901031494, 0.06111428141593933, 0.025491934269666672, 0.011694807559251785, 0.001422431436367333], "repair_candidates": [0.009828508831560612, 0.0015685269609093666, 0.8299779891967773, 4.999550947104581e-05, 2.9170299967518076e-05, 0.00017853881581686437, 0.00022987517877481878, 0.009373676963150501, 8.81999876582995e-05, 0.048449575901031494, 0.0002299968764418736, 0.06111428141593933, 0.00021177640883252025, 0.025491934269666672, 5.0355058192508295e-05, 0.011694807559251785, 1.0306348485755734e-05, 0.001422431436367333], "target_probs": 0.987524688243866}}


{"result": {"time": "2021-02-11 11:40:29.403027", "n_pass": [422, 132, 42], "n_token": 33, "loss": [0.905284583568573, 0.01789427548646927], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["self", "#NEWLINE#", "xml", "item", "=", "xmppim", "RosterItem", "fromElement", "parseXml", "(", "xml", ")", ")", "self", "assertEqual", "xml", ")", "#NEWLINE#", "self", "item", ".", "self", "item", "self", "item", "self", "item", "#NEWLINE#", "self", "item", "self", "item", "."]}}
{"position": {"error_location": 15, "repair_targets": [3, 19, 22, 24, 26, 29, 31], "repair_candidates": [3, 19, 22, 24, 26, 29, 31, 2, 10, 15, 0, 13, 18, 21, 23, 25, 28, 30]}}
{"prediction": {"error_location": 0.40442678332328796, "repair_targets": [0.7525686025619507, 0.06607986986637115, 0.0272787157446146, 0.0480235293507576, 0.07861101627349854, 0.00797958206385374, 0.0017235461855307221], "repair_candidates": [0.011121737770736217, 0.002842988818883896, 0.7525686025619507, 0.00013055479212198406, 0.00017814678722061217, 0.0005196767160668969, 0.000233451763051562, 0.06607986986637115, 0.00029864846146665514, 0.0272787157446146, 0.001747596194036305, 0.0480235293507576, 0.0005494151264429092, 0.07861101627349854, 8.926477312343195e-05, 0.00797958206385374, 2.362053419346921e-05, 0.0017235461855307221], "target_probs": 0.9822648763656616}}


{"result": {"time": "2021-02-11 11:40:29.685354", "n_pass": [435, 137, 43], "n_token": 32, "loss": [0.904639720916748, 0.01853211224079132], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["self", "#NEWLINE#", "xml", "item", "=", "RosterItem", "fromElement", "parseXml", "(", "xml", ")", ")", "self", "assertEqual", "xml", ")", "#NEWLINE#", "self", "item", ".", "self", "item", "self", "item", "self", "item", "#NEWLINE#", "self", "item", "self", "item", "."]}}
{"position": {"error_location": 14, "repair_targets": [3, 18, 21, 23, 25, 28, 30], "repair_candidates": [3, 18, 21, 23, 25, 28, 30, 2, 9, 14, 0, 12, 17, 20, 22, 24, 27, 29]}}
{"prediction": {"error_location": 0.40468770265579224, "repair_targets": [0.8260494470596313, 0.053710389882326126, 0.012895936146378517, 0.027540573850274086, 0.05168900266289711, 0.008938140235841274, 0.0008150249486789107], "repair_candidates": [0.009797761216759682, 0.005130554083734751, 0.8260494470596313, 0.0001596533547854051, 0.00012936042912770063, 0.000458476017229259, 0.00022300780983641744, 0.053710389882326126, 0.00016200645768549293, 0.012895936146378517, 0.001813288894481957, 0.027540573850274086, 0.00040813023224473, 0.05168900266289711, 6.603177462238818e-05, 0.008938140235841274, 1.3268973816593643e-05, 0.0008150249486789107], "target_probs": 0.9816385507583618}}


{"result": {"time": "2021-02-11 11:40:29.966348", "n_pass": [441, 142, 44], "n_token": 31, "loss": [1.109083652496338, 0.01781885139644146], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["self", "#NEWLINE#", "xml", "item", "=", "RosterItem", "fromElement", "parseXml", "(", "xml", ")", "self", "assertEqual", "xml", ")", "#NEWLINE#", "self", "item", ".", "self", "item", "self", "item", "self", "item", "#NEWLINE#", "self", "item", "self", "item", "."]}}
{"position": {"error_location": 13, "repair_targets": [3, 17, 20, 22, 24, 27, 29], "repair_candidates": [3, 17, 20, 22, 24, 27, 29, 2, 9, 13, 0, 11, 16, 19, 21, 23, 26, 28]}}
{"prediction": {"error_location": 0.3298611044883728, "repair_targets": [0.8835914731025696, 0.0219024196267128, 0.009892886504530907, 0.016545550897717476, 0.038450922816991806, 0.01116106566041708, 0.0007946488913148642], "repair_candidates": [0.008003873750567436, 0.00662494171410799, 0.8835914731025696, 0.0002713954891078174, 0.00017076720541808754, 0.0005634711124002934, 0.00018242660735268146, 0.0219024196267128, 8.677258301759139e-05, 0.009892886504530907, 0.001245266990736127, 0.016545550897717476, 0.00042330980068072677, 0.038450922816991806, 7.813916454324499e-05, 0.01116106566041708, 1.0631969416863285e-05, 0.0007946488913148642], "target_probs": 0.9823389649391174}}


{"result": {"time": "2021-02-11 11:40:30.078737", "n_pass": [444, 144, 45], "n_token": 30, "loss": [1.0812979936599731, 0.029718756675720215], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["self", "#NEWLINE#", "xml", "item", "=", "RosterItem", "fromElement", "parseXml", "(", "xml", ")", "self", "xml", ")", "#NEWLINE#", "self", "item", ".", "self", "item", "self", "item", "self", "item", "#NEWLINE#", "self", "item", "self", "item", "."]}}
{"position": {"error_location": 12, "repair_targets": [3, 16, 19, 21, 23, 26, 28], "repair_candidates": [3, 16, 19, 21, 23, 26, 28, 2, 9, 12, 0, 11, 15, 18, 20, 22, 25, 27]}}
{"prediction": {"error_location": 0.33915501832962036, "repair_targets": [0.9148744940757751, 0.00799928605556488, 0.005946869030594826, 0.009438530541956425, 0.022419055923819542, 0.008961710147559643, 0.0010785525664687157], "repair_candidates": [0.00623623700812459, 0.012179406359791756, 0.9148744940757751, 0.00020166461763437837, 0.0051090409979224205, 0.0026811438146978617, 0.0006341547705233097, 0.00799928605556488, 0.00015667987463530153, 0.005946869030594826, 0.0013273207005113363, 0.009438530541956425, 0.0006389585323631763, 0.022419055923819542, 9.918383875628933e-05, 0.008961710147559643, 1.7605032553547062e-05, 0.0010785525664687157], "target_probs": 0.970718502998352}}


{"result": {"time": "2021-02-11 11:40:30.306706", "n_pass": [457, 148, 46], "n_token": 29, "loss": [0.7288958430290222, 0.01925997994840145], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["self", "#NEWLINE#", "xml", "item", "=", "RosterItem", "fromElement", "parseXml", "(", "xml", ")", "self", "xml", ")", "#NEWLINE#", "self", "item", ".", "self", "item", "self", "item", "self", "item", "self", "item", "self", "item", "."]}}
{"position": {"error_location": 12, "repair_targets": [3, 16, 19, 21, 23, 25, 27], "repair_candidates": [3, 16, 19, 21, 23, 25, 27, 2, 9, 12, 0, 11, 15, 18, 20, 22, 24, 26]}}
{"prediction": {"error_location": 0.48244133591651917, "repair_targets": [0.9193397164344788, 9.366524318465963e-05, 0.002503039548173547, 0.006849060300737619, 0.049108121544122696, 0.002234345767647028, 0.0007963808602653444], "repair_candidates": [0.004680369049310684, 0.007905395701527596, 0.9193397164344788, 0.00017423836106900126, 0.0030959169380366802, 0.0008117404649965465, 9.044074249686673e-05, 9.366524318465963e-05, 2.7284746465738863e-05, 0.002503039548173547, 0.0018534245900809765, 0.006849060300737619, 0.0002727287355810404, 0.049108121544122696, 4.5645880163647234e-05, 0.002234345767647028, 0.0001184823559015058, 0.0007963808602653444], "target_probs": 0.9809243083000183}}


{"result": {"time": "2021-02-11 11:40:30.533297", "n_pass": [468, 152, 47], "n_token": 28, "loss": [1.0815091133117676, 0.045845501124858856], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["self", "#NEWLINE#", "xml", "item", "=", "fromElement", "parseXml", "(", "xml", ")", "self", "xml", ")", "#NEWLINE#", "self", "item", ".", "self", "item", "self", "item", "self", "item", "self", "item", "self", "item", "."]}}
{"position": {"error_location": 11, "repair_targets": [3, 15, 18, 20, 22, 24, 26], "repair_candidates": [3, 15, 18, 20, 22, 24, 26, 2, 8, 11, 0, 10, 14, 17, 19, 21, 23, 25]}}
{"prediction": {"error_location": 0.3390834331512451, "repair_targets": [0.7699258923530579, 0.0012967041693627834, 0.0062428731471300125, 0.013430100865662098, 0.13356809318065643, 0.028778402134776115, 0.0019474599976092577], "repair_candidates": [0.0065306504257023335, 0.01533160638064146, 0.7699258923530579, 0.0008934515644796193, 0.010846180841326714, 0.0027261367067694664, 0.0018522150348871946, 0.0012967041693627834, 5.177444108994678e-05, 0.0062428731471300125, 0.004341216292232275, 0.013430100865662098, 0.001736564445309341, 0.13356809318065643, 0.00013977418711874634, 0.028778402134776115, 0.0003609075502026826, 0.0019474599976092577], "target_probs": 0.9551895260810852}}




Minimal simplified tokens:

['self', '#NEWLINE#', 'xml', 'item', '=', 'fromElement', 'parseXml', '(', 'xml', ')', 'self', 'xml', ')', '#NEWLINE#', 'self', 'item', '.', 'self', 'item', 'self', 'item', 'self', 'item', 'self', 'item', 'self', 'item', '.']
