
Original sample:

{"has_bug": true, "bug_kind": 1, "bug_kind_name": "VARIABLE_MISUSE", "source_tokens": ["#NEWLINE#", "def set_max_interactions(", "self", ",", "inter_max", ",", "warn", "=", "True", ")", ":", "#NEWLINE#", "#INDENT#", "'\\n        Set the maximum number of interactions a photon can have.\\n\\n        Parameters\\n        ----------\\n        inter_max : int\\n            Maximum number of interactions for a single photon. This can be\\n            used to prevent photons from getting stuck in very optically\\n            thick regions, especially if the modified random walk is not\\n            used.\\n        warn : bool, optional\\n            Whether to emit a warning whenever photons are killed for exceeding\\n            the maximum number of iterations.\\n        '", "#NEWLINE#", "self", ".", "n_inter_max", "=", "inter_max", "#NEWLINE#", "self", ".", "n_inter_max_warn", "=", "self"], "error_location": [25], "repair_targets": [6], "repair_candidates": [6, 4, 19, 2, 15, 21, 25], "provenances": [{"datasetProvenance": {"datasetName": "ETHPy150Open", "filepath": "hyperion-rt/hyperion/hyperion/conf/conf_files.py", "license": "bsd-2-clause", "note": "license: bigquery_api"}}], "txt_file": "eval__VARIABLE_MISUSE__SStuB.txt-00001-of-00300", "js_count": 3696, "results": {"model": "transformer", "prob": {"loc": [[0.00034697604132816195, 2.504763862987147e-08, 4.869033176646553e-09, 4.811386844494336e-10, 2.6171296241273012e-09, 4.498550421061509e-10, 7.244788946536573e-08, 2.5195010522338634e-09, 1.0810249362336322e-09, 9.814905832516985e-11, 7.891302056250993e-10, 1.3504758422655527e-09, 1.0014316043083227e-09, 2.8246043282109667e-09, 1.3643116636430364e-09, 8.007187801695181e-09, 5.743360786958362e-10, 7.948641050914418e-11, 1.0228496938324838e-09, 1.9985582184745e-05, 1.0167213737588554e-08, 4.444059698016645e-08, 8.699742592988002e-10, 1.0706720232622757e-10, 2.3120035663737326e-08, 0.9996328353881836]], "pointer": [[0.0, 0.0, 3.8107921795926814e-07, 0.0, 0.007098217029124498, 0.0, 0.991523265838623, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 4.4344517391436966e-08, 0.0, 0.0, 0.0, 0.0013780634617432952, 0.0, 1.4356248634328495e-08, 0.0, 0.0, 0.0, 8.200568402116915e-08]], "target": [0.991523265838623]}, "loss": [0.0003672163875307888, 0.008512865751981735], "acc": [0.0, 1.0, 1.0, 1.0]}}


Trace of simplified code(s):

{"result": {"time": "2021-02-11 12:04:06.772738", "n_pass": [1, 1, 1], "n_token": 26, "loss": [0.0003672163875307888, 0.008512865751981735], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def set_max_interactions(", "self", ",", "inter_max", ",", "warn", "=", "True", ")", ":", "#NEWLINE#", "#INDENT#", "'\\n        Set the maximum number of interactions a photon can have.\\n\\n        Parameters\\n        ----------\\n        inter_max : int\\n            Maximum number of interactions for a single photon. This can be\\n            used to prevent photons from getting stuck in very optically\\n            thick regions, especially if the modified random walk is not\\n            used.\\n        warn : bool, optional\\n            Whether to emit a warning whenever photons are killed for exceeding\\n            the maximum number of iterations.\\n        '", "#NEWLINE#", "self", ".", "n_inter_max", "=", "inter_max", "#NEWLINE#", "self", ".", "n_inter_max_warn", "=", "self"]}}
{"position": {"error_location": 25, "repair_targets": [6], "repair_candidates": [6, 4, 19, 2, 15, 21, 25]}}
{"prediction": {"error_location": 0.9996328353881836, "repair_targets": [0.991523265838623], "repair_candidates": [3.8107921795926814e-07, 0.007098217029124498, 0.991523265838623, 4.4344517391436966e-08, 0.0013780634617432952, 1.4356248634328495e-08, 8.200568402116915e-08], "target_probs": 0.991523265838623}}


{"result": {"time": "2021-02-11 12:04:06.828377", "n_pass": [23, 2, 2], "n_token": 23, "loss": [0.0023369877599179745, 0.005946819204837084], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def set_max_interactions(", "self", ",", "inter_max", ",", "warn", "=", "True", "#INDENT#", "'\\n        Set the maximum number of interactions a photon can have.\\n\\n        Parameters\\n        ----------\\n        inter_max : int\\n            Maximum number of interactions for a single photon. This can be\\n            used to prevent photons from getting stuck in very optically\\n            thick regions, especially if the modified random walk is not\\n            used.\\n        warn : bool, optional\\n            Whether to emit a warning whenever photons are killed for exceeding\\n            the maximum number of iterations.\\n        '", "#NEWLINE#", "self", ".", "n_inter_max", "=", "inter_max", "#NEWLINE#", "self", ".", "n_inter_max_warn", "=", "self"]}}
{"position": {"error_location": 22, "repair_targets": [6], "repair_candidates": [6, 4, 16, 2, 12, 18, 22]}}
{"prediction": {"error_location": 0.9976657629013062, "repair_targets": [0.994070827960968], "repair_candidates": [3.217186304027564e-07, 0.004395280499011278, 0.994070827960968, 3.7010167375228775e-07, 0.0015331500908359885, 2.1757063706218105e-08, 4.477186621443252e-08], "target_probs": 0.994070827960968}}


{"result": {"time": "2021-02-11 12:04:06.882614", "n_pass": [24, 3, 3], "n_token": 20, "loss": [0.000745018885936588, 0.002175370929762721], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def set_max_interactions(", "self", ",", "inter_max", ",", "warn", "=", "True", "self", ".", "n_inter_max", "=", "inter_max", "#NEWLINE#", "self", ".", "n_inter_max_warn", "=", "self"]}}
{"position": {"error_location": 19, "repair_targets": [6], "repair_candidates": [6, 4, 13, 2, 9, 15, 19]}}
{"prediction": {"error_location": 0.9992552399635315, "repair_targets": [0.9978269934654236], "repair_candidates": [2.786696313705761e-07, 0.0018741159001365304, 0.9978269934654236, 1.2689841355495446e-07, 0.00029857526533305645, 1.75307182104234e-08, 1.690053075265041e-08], "target_probs": 0.9978269934654236}}


{"result": {"time": "2021-02-11 12:04:06.937531", "n_pass": [44, 4, 4], "n_token": 18, "loss": [0.003001829143613577, 0.0038226498290896416], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def set_max_interactions(", "self", ",", "inter_max", ",", "warn", "=", "True", "self", "=", "inter_max", "#NEWLINE#", "self", ".", "n_inter_max_warn", "=", "self"]}}
{"position": {"error_location": 17, "repair_targets": [6], "repair_candidates": [6, 4, 11, 2, 9, 13, 17]}}
{"prediction": {"error_location": 0.9970026612281799, "repair_targets": [0.9961846470832825], "repair_candidates": [4.295572125556646e-06, 0.0027387395966798067, 0.9961846470832825, 0.00011838573118438944, 0.0009536294965073466, 1.6802920299596735e-07, 7.435664883814752e-08], "target_probs": 0.9961846470832825}}


{"result": {"time": "2021-02-11 12:04:06.992110", "n_pass": [47, 5, 5], "n_token": 16, "loss": [0.05209537595510483, 0.006391223054379225], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def set_max_interactions(", "self", ",", "inter_max", ",", "warn", "=", "True", "self", "=", "inter_max", "#NEWLINE#", "self", "=", "self"]}}
{"position": {"error_location": 15, "repair_targets": [6], "repair_candidates": [6, 4, 11, 2, 9, 13, 15]}}
{"prediction": {"error_location": 0.9492384195327759, "repair_targets": [0.9936291575431824], "repair_candidates": [0.0005109793855808675, 0.001496236422099173, 0.9936291575431824, 0.0028947624377906322, 0.0010489586275070906, 0.000418373936554417, 1.5142105667109718e-06], "target_probs": 0.9936291575431824}}


{"result": {"time": "2021-02-11 12:04:07.046468", "n_pass": [49, 6, 6], "n_token": 15, "loss": [0.02176494710147381, 0.006056072656065226], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["def set_max_interactions(", "self", ",", "inter_max", ",", "warn", "=", "True", "self", "=", "inter_max", "#NEWLINE#", "self", "=", "self"]}}
{"position": {"error_location": 14, "repair_targets": [5], "repair_candidates": [5, 3, 10, 1, 8, 12, 14]}}
{"prediction": {"error_location": 0.9784700870513916, "repair_targets": [0.9939622282981873], "repair_candidates": [0.002722496632486582, 0.0015191732672974467, 0.9939622282981873, 0.0009844513842836022, 0.00012464937753975391, 0.0006864866008982062, 4.37377309481235e-07], "target_probs": 0.9939622282981873}}


{"result": {"time": "2021-02-11 12:04:07.159723", "n_pass": [52, 8, 7], "n_token": 14, "loss": [0.06522397696971893, 0.05136929079890251], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["def set_max_interactions(", "self", "inter_max", ",", "warn", "=", "True", "self", "=", "inter_max", "#NEWLINE#", "self", "=", "self"]}}
{"position": {"error_location": 13, "repair_targets": [4], "repair_candidates": [4, 2, 9, 1, 7, 11, 13]}}
{"prediction": {"error_location": 0.9368575811386108, "repair_targets": [0.949927806854248], "repair_candidates": [0.019096337258815765, 0.022511476650834084, 0.949927806854248, 0.005013583693653345, 0.0006795631488785148, 0.0027703484520316124, 8.52038397169963e-07], "target_probs": 0.949927806854248}}


{"result": {"time": "2021-02-11 12:04:07.214548", "n_pass": [59, 9, 8], "n_token": 13, "loss": [0.12537884712219238, 0.05983893945813179], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["self", "inter_max", ",", "warn", "=", "True", "self", "=", "inter_max", "#NEWLINE#", "self", "=", "self"]}}
{"position": {"error_location": 12, "repair_targets": [3], "repair_candidates": [3, 1, 8, 0, 6, 10, 12]}}
{"prediction": {"error_location": 0.8821626305580139, "repair_targets": [0.9419162273406982], "repair_candidates": [0.00015206837269943208, 0.023741811513900757, 0.9419162273406982, 0.0030242018401622772, 0.029855642467737198, 0.0013093164889141917, 7.83834195772215e-07], "target_probs": 0.9419162273406982}}


{"result": {"time": "2021-02-11 12:04:07.268993", "n_pass": [80, 10, 9], "n_token": 12, "loss": [0.023655571043491364, 0.019333932548761368], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["self", "inter_max", "warn", "=", "True", "self", "=", "inter_max", "#NEWLINE#", "self", "=", "self"]}}
{"position": {"error_location": 11, "repair_targets": [2], "repair_candidates": [2, 1, 7, 0, 5, 9, 11]}}
{"prediction": {"error_location": 0.9766220450401306, "repair_targets": [0.9808517694473267], "repair_candidates": [0.0003512685070745647, 0.0018623237265273929, 0.9808517694473267, 0.005433061625808477, 0.011163365095853806, 0.0003380916896276176, 1.666513469444908e-07], "target_probs": 0.9808517694473267}}


{"result": {"time": "2021-02-11 12:04:07.377092", "n_pass": [83, 12, 10], "n_token": 11, "loss": [0.7093309760093689, 0.07332352548837662], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["self", "inter_max", "warn", "=", "self", "=", "inter_max", "#NEWLINE#", "self", "=", "self"]}}
{"position": {"error_location": 10, "repair_targets": [2], "repair_candidates": [2, 1, 6, 0, 4, 8, 10]}}
{"prediction": {"error_location": 0.49197322130203247, "repair_targets": [0.9293001294136047], "repair_candidates": [0.0019456165609881282, 0.00774379400536418, 0.9293001294136047, 0.028917204588651657, 0.02992316335439682, 0.0019630242604762316, 0.00020719207532238215], "target_probs": 0.9293001294136047}}


{"result": {"time": "2021-02-11 12:04:07.431451", "n_pass": [85, 13, 11], "n_token": 10, "loss": [0.2361254096031189, 0.24132640659809113], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["self", "inter_max", "warn", "=", "self", "inter_max", "#NEWLINE#", "self", "=", "self"]}}
{"position": {"error_location": 9, "repair_targets": [2], "repair_candidates": [2, 1, 5, 0, 4, 7, 9]}}
{"prediction": {"error_location": 0.789681613445282, "repair_targets": [0.7855851650238037], "repair_candidates": [0.044447869062423706, 0.04875016212463379, 0.7855851650238037, 0.03141103312373161, 0.05977032333612442, 0.0247079785913229, 0.00532744312658906], "target_probs": 0.7855851650238037}}


{"result": {"time": "2021-02-11 12:04:07.490426", "n_pass": [87, 14, 12], "n_token": 9, "loss": [0.41172003746032715, 0.42196378111839294], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["self", "inter_max", "warn", "=", "self", "inter_max", "self", "=", "self"]}}
{"position": {"error_location": 8, "repair_targets": [2], "repair_candidates": [2, 1, 5, 0, 4, 6, 8]}}
{"prediction": {"error_location": 0.6625097393989563, "repair_targets": [0.6557577848434448], "repair_candidates": [0.12216049432754517, 0.10643467307090759, 0.6557577848434448, 0.05539426952600479, 0.04996971786022186, 0.009345523081719875, 0.0009375056251883507], "target_probs": 0.6557577848434448}}




Minimal simplified tokens:

['self', 'inter_max', 'warn', '=', 'self', 'inter_max', 'self', '=', 'self']
