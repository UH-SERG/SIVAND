
Original sample:

{"has_bug": true, "bug_kind": 1, "bug_kind_name": "VARIABLE_MISUSE", "source_tokens": ["#NEWLINE#", "def add_description(", "self", ",", "description", ")", ":", "#NEWLINE#", "#INDENT#", "'Adds a description to the ``descriptions`` collection.\\n\\n        This is the same as calling \"foo.descriptions.add(bar)\".\\n\\n        '", "#NEWLINE#", "self", ".", "descriptions", ".", "add", "(", "self", ")"], "error_location": [17], "repair_targets": [4], "repair_candidates": [2, 11, 17, 4], "provenances": [{"datasetProvenance": {"datasetName": "ETHPy150Open", "filepath": "STIXProject/python-stix/stix/exploit_target/configuration.py", "license": "bsd-3-clause", "note": "license: bigquery_api"}}], "txt_file": "eval__VARIABLE_MISUSE__SStuB.txt-00000-of-00300", "js_count": 2376, "results": {"model": "transformer", "prob": {"loc": [[8.148464257828891e-05, 5.386034374055271e-08, 5.6527658109928325e-09, 3.493023370548798e-10, 3.838579587522872e-08, 2.5874605236175796e-10, 9.42504962964108e-10, 1.0712153386549517e-09, 8.873541901266435e-10, 1.1959687684637288e-09, 3.5568410439168474e-09, 2.9830282688436682e-09, 1.766970181282801e-10, 2.1812929240638823e-10, 9.70272306943798e-10, 1.674590882627669e-10, 6.106791738957895e-10, 0.9999183416366577, 2.398375720247259e-09]], "pointer": [[0.0, 0.0, 7.114634286153887e-07, 0.0, 0.9999992847442627, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 2.5097572020627013e-08, 0.0, 0.0, 0.0, 0.0, 0.0, 5.7215661541931695e-08, 0.0]], "target": [0.9999992847442627]}, "loss": [8.165503095369786e-05, 7.152560215217818e-07], "acc": [0.0, 1.0, 1.0, 1.0]}}


Trace of simplified code(s):

{"result": {"time": "2021-02-11 11:38:26.291714", "n_pass": [1, 1, 1], "n_token": 19, "loss": [8.165503095369786e-05, 7.152560215217818e-07], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def add_description(", "self", ",", "description", ")", ":", "#NEWLINE#", "#INDENT#", "'Adds a description to the ``descriptions`` collection.\\n\\n        This is the same as calling \"foo.descriptions.add(bar)\".\\n\\n        '", "#NEWLINE#", "self", ".", "descriptions", ".", "add", "(", "self", ")"]}}
{"position": {"error_location": 17, "repair_targets": [4], "repair_candidates": [2, 11, 17, 4]}}
{"prediction": {"error_location": 0.9999183416366577, "repair_targets": [0.9999992847442627], "repair_candidates": [7.114634286153887e-07, 0.9999992847442627, 2.5097572020627013e-08, 5.7215661541931695e-08], "target_probs": 0.9999992847442627}}


{"result": {"time": "2021-02-11 11:38:26.346186", "n_pass": [20, 2, 2], "n_token": 17, "loss": [9.298280929215252e-06, 1.3828373084834311e-05], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["self", ",", "description", ")", ":", "#NEWLINE#", "#INDENT#", "'Adds a description to the ``descriptions`` collection.\\n\\n        This is the same as calling \"foo.descriptions.add(bar)\".\\n\\n        '", "#NEWLINE#", "self", ".", "descriptions", ".", "add", "(", "self", ")"]}}
{"position": {"error_location": 15, "repair_targets": [2], "repair_candidates": [0, 9, 15, 2]}}
{"prediction": {"error_location": 0.999990701675415, "repair_targets": [0.9999861717224121], "repair_candidates": [1.3799720363749657e-05, 0.9999861717224121, 1.1274903677360726e-08, 1.6968465743616434e-08], "target_probs": 0.9999861717224121}}


{"result": {"time": "2021-02-11 11:38:26.399958", "n_pass": [22, 3, 3], "n_token": 15, "loss": [0.0003058442671317607, 2.1338690203265287e-05], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["self", ",", "description", ")", "#INDENT#", "'Adds a description to the ``descriptions`` collection.\\n\\n        This is the same as calling \"foo.descriptions.add(bar)\".\\n\\n        '", "#NEWLINE#", "self", ".", "descriptions", ".", "add", "(", "self", ")"]}}
{"position": {"error_location": 13, "repair_targets": [2], "repair_candidates": [0, 7, 13, 2]}}
{"prediction": {"error_location": 0.9996942281723022, "repair_targets": [0.9999786615371704], "repair_candidates": [2.1186337107792497e-05, 0.9999786615371704, 2.0802337630243528e-08, 9.433829717409026e-08], "target_probs": 0.9999786615371704}}


{"result": {"time": "2021-02-11 11:38:26.453825", "n_pass": [23, 4, 4], "n_token": 13, "loss": [4.303362584323622e-05, 0.00017227226635441184], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["self", ",", "description", ")", "#NEWLINE#", "self", ".", "descriptions", ".", "add", "(", "self", ")"]}}
{"position": {"error_location": 11, "repair_targets": [2], "repair_candidates": [0, 5, 11, 2]}}
{"prediction": {"error_location": 0.9999570846557617, "repair_targets": [0.9998277425765991], "repair_candidates": [0.00017218530410900712, 0.9998277425765991, 5.4106656932617625e-09, 1.687319262089204e-08], "target_probs": 0.9998277425765991}}


{"result": {"time": "2021-02-11 11:38:26.507795", "n_pass": [25, 5, 5], "n_token": 10, "loss": [0.4661063551902771, 0.35606053471565247], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["self", ",", "description", ")", "#NEWLINE#", "self", ".", "(", "self", ")"]}}
{"position": {"error_location": 8, "repair_targets": [2], "repair_candidates": [0, 5, 8, 2]}}
{"prediction": {"error_location": 0.6274405717849731, "repair_targets": [0.7004302144050598], "repair_candidates": [0.29819241166114807, 0.7004302144050598, 0.0009676634799689054, 0.00040971729322336614], "target_probs": 0.7004302144050598}}


{"result": {"time": "2021-02-11 11:38:26.615603", "n_pass": [41, 7, 6], "n_token": 9, "loss": [0.6024477481842041, 0.4059389531612396], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["self", "description", ")", "#NEWLINE#", "self", ".", "(", "self", ")"]}}
{"position": {"error_location": 7, "repair_targets": [1], "repair_candidates": [0, 4, 7, 1]}}
{"prediction": {"error_location": 0.5474699139595032, "repair_targets": [0.6663508415222168], "repair_candidates": [0.3322359025478363, 0.6663508415222168, 0.0009945390047505498, 0.00041866564424708486], "target_probs": 0.6663508415222168}}




Minimal simplified tokens:

['self', 'description', ')', '#NEWLINE#', 'self', '.', '(', 'self', ')']
