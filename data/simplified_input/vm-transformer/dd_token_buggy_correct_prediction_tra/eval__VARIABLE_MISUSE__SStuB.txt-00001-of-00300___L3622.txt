
Original sample:

{"has_bug": true, "bug_kind": 1, "bug_kind_name": "VARIABLE_MISUSE", "source_tokens": ["#NEWLINE#", "def _checkColinstances(", "self", ",", "table", ")", ":", "#NEWLINE#", "#INDENT#", "'Check that ``colinstances`` and ``cols`` of `table` match.'", "#NEWLINE#", "for", "colpathname", "in", "table", ".", "description", ".", "_v_pathnames", ":", "#NEWLINE#", "#INDENT#", "self", ".", "assertTrue", "(", "(", "colpathname", ".", "colinstances", "[", "colpathname", "]", "is", "table", ".", "cols", ".", "_f_col", "(", "colpathname", ")", ")", ")"], "error_location": [27], "repair_targets": [4, 14, 34], "repair_candidates": [12, 27, 31, 40, 4, 14, 34, 2, 22], "provenances": [{"datasetProvenance": {"datasetName": "ETHPy150Open", "filepath": "PyTables/PyTables/tables/tests/test_nestedtypes.py", "license": "bsd-3-clause", "note": "license: manual_eval"}}], "txt_file": "eval__VARIABLE_MISUSE__SStuB.txt-00001-of-00300", "js_count": 3622, "results": {"model": "transformer", "prob": {"loc": [[0.11323262006044388, 6.012239168740052e-07, 1.0833801979970303e-06, 5.848919570894395e-09, 5.689017257282103e-07, 4.575003931250876e-09, 1.3388947728287803e-08, 1.3230664563934624e-08, 8.75860717286514e-09, 1.2864879828100584e-08, 1.0174531439588463e-08, 6.364376137213412e-09, 2.4561452391935745e-06, 1.463509091692572e-09, 0.0014529390027746558, 7.333393625685858e-08, 4.325964297891005e-08, 1.9186273902960238e-07, 2.6565099009445703e-09, 2.397679388366214e-08, 2.72602496131924e-09, 1.6114852785520384e-09, 3.122812231026728e-08, 1.5836089772847117e-08, 1.189370602006079e-09, 5.5051563307984e-09, 3.214311661281499e-08, 0.8370062708854675, 1.1389030873942829e-07, 7.37875094358742e-09, 8.407997853510096e-09, 0.010314683429896832, 4.3116368253492965e-09, 5.0923310013217815e-09, 0.00047768899821676314, 5.97638702970471e-08, 1.722079367993956e-08, 6.023203269478472e-08, 2.8948452523991364e-09, 5.657746271481301e-08, 0.0375102162361145, 2.2417351530634733e-08, 1.7134231811155587e-08, 1.6220631948726805e-08]], "pointer": [[0.0, 0.0, 0.03263409435749054, 0.0, 0.20291464030742645, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0025258902460336685, 0.0, 0.22634951770305634, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0016768741188570857, 0.0, 0.0, 0.0, 0.0, 1.4963113699195674e-06, 0.0, 0.0, 0.0, 2.4120425223372877e-05, 0.0, 0.0, 0.5328835844993591, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0009897794807329774, 0.0, 0.0, 0.0]], "target": [0.9621477127075195]}, "loss": [0.1779237538576126, 0.0385872907936573], "acc": [0.0, 1.0, 1.0, 1.0]}}


Trace of simplified code(s):

{"result": {"time": "2021-02-11 12:04:02.277007", "n_pass": [1, 1, 1], "n_token": 44, "loss": [0.1779237538576126, 0.0385872907936573], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def _checkColinstances(", "self", ",", "table", ")", ":", "#NEWLINE#", "#INDENT#", "'Check that ``colinstances`` and ``cols`` of `table` match.'", "#NEWLINE#", "for", "colpathname", "in", "table", ".", "description", ".", "_v_pathnames", ":", "#NEWLINE#", "#INDENT#", "self", ".", "assertTrue", "(", "(", "colpathname", ".", "colinstances", "[", "colpathname", "]", "is", "table", ".", "cols", ".", "_f_col", "(", "colpathname", ")", ")", ")"]}}
{"position": {"error_location": 27, "repair_targets": [4, 14, 34], "repair_candidates": [12, 27, 31, 40, 4, 14, 34, 2, 22]}}
{"prediction": {"error_location": 0.8370062708854675, "repair_targets": [0.20291464030742645, 0.22634951770305634, 0.5328835844993591], "repair_candidates": [0.03263409435749054, 0.20291464030742645, 0.0025258902460336685, 0.22634951770305634, 0.0016768741188570857, 1.4963113699195674e-06, 2.4120425223372877e-05, 0.5328835844993591, 0.0009897794807329774], "target_probs": 0.9621477127075195}}


{"result": {"time": "2021-02-11 12:04:02.333571", "n_pass": [21, 2, 2], "n_token": 39, "loss": [0.07486920058727264, 0.02040238305926323], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def _checkColinstances(", "self", ",", "table", "#NEWLINE#", "for", "colpathname", "in", "table", ".", "description", ".", "_v_pathnames", ":", "#NEWLINE#", "#INDENT#", "self", ".", "assertTrue", "(", "(", "colpathname", ".", "colinstances", "[", "colpathname", "]", "is", "table", ".", "cols", ".", "_f_col", "(", "colpathname", ")", ")", ")"]}}
{"position": {"error_location": 22, "repair_targets": [4, 9, 29], "repair_candidates": [7, 22, 26, 35, 4, 9, 29, 2, 17]}}
{"prediction": {"error_location": 0.9278648495674133, "repair_targets": [0.28092217445373535, 0.24952279031276703, 0.44935935735702515], "repair_candidates": [0.018532870337367058, 0.28092217445373535, 0.0009021272999234498, 0.24952279031276703, 0.0004336862184572965, 5.386117436501081e-07, 2.2007889128872193e-05, 0.44935935735702515, 0.00030437519308179617], "target_probs": 0.9798043370246887}}


{"result": {"time": "2021-02-11 12:04:02.389375", "n_pass": [23, 3, 3], "n_token": 34, "loss": [0.35299715399742126, 0.09456095844507217], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def _checkColinstances(", "self", ",", "table", "#NEWLINE#", "for", "colpathname", "in", "table", "#NEWLINE#", "#INDENT#", "self", ".", "assertTrue", "(", "(", "colpathname", ".", "colinstances", "[", "colpathname", "]", "is", "table", ".", "cols", ".", "_f_col", "(", "colpathname", ")", ")", ")"]}}
{"position": {"error_location": 17, "repair_targets": [4, 9, 24], "repair_candidates": [7, 17, 21, 30, 4, 9, 24, 2, 12]}}
{"prediction": {"error_location": 0.702579140663147, "repair_targets": [0.3882863521575928, 0.10524071753025055, 0.4162452220916748], "repair_candidates": [0.08177514374256134, 0.3882863521575928, 0.003274332731962204, 0.10524071753025055, 0.003953463397920132, 4.469563009479316e-06, 0.00016095033788587898, 0.4162452220916748, 0.0010593459010124207], "target_probs": 0.9097722768783569}}


{"result": {"time": "2021-02-11 12:04:02.445755", "n_pass": [43, 4, 4], "n_token": 31, "loss": [0.14624008536338806, 0.17711450159549713], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def _checkColinstances(", "self", ",", "table", "#NEWLINE#", "for", "colpathname", "in", "table", "#NEWLINE#", "#INDENT#", "self", "(", "colpathname", ".", "colinstances", "[", "colpathname", "]", "is", "table", ".", "cols", ".", "_f_col", "(", "colpathname", ")", ")", ")"]}}
{"position": {"error_location": 14, "repair_targets": [4, 9, 21], "repair_candidates": [7, 14, 18, 27, 4, 9, 21, 2, 12]}}
{"prediction": {"error_location": 0.863950252532959, "repair_targets": [0.3975352346897125, 0.062076400965452194, 0.37807223200798035], "repair_candidates": [0.16139012575149536, 0.3975352346897125, 0.00026496293139643967, 0.062076400965452194, 0.0005789778660982847, 5.789298029412748e-06, 5.687397333531408e-06, 0.37807223200798035, 7.058905612211674e-05], "target_probs": 0.8376838564872742}}


{"result": {"time": "2021-02-11 12:04:02.500970", "n_pass": [47, 5, 5], "n_token": 28, "loss": [0.12767599523067474, 0.41360464692115784], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def _checkColinstances(", "self", ",", "table", "#NEWLINE#", "for", "colpathname", "in", "table", "#NEWLINE#", "#INDENT#", "self", "(", "colpathname", ".", "colinstances", "[", "colpathname", "]", "is", "table", "_f_col", "(", "colpathname", ")", ")", ")"]}}
{"position": {"error_location": 14, "repair_targets": [4, 9, 21], "repair_candidates": [7, 14, 18, 24, 4, 9, 21, 2, 12]}}
{"prediction": {"error_location": 0.8801383972167969, "repair_targets": [0.5487394332885742, 0.11171114444732666, 0.0008117529796436429], "repair_candidates": [0.33702918887138367, 0.5487394332885742, 0.000185969693120569, 0.11171114444732666, 0.0014517997624352574, 3.5325076623848872e-06, 5.135691480973037e-06, 0.0008117529796436429, 6.195296737132594e-05], "target_probs": 0.6612623333930969}}


{"result": {"time": "2021-02-11 12:04:02.556096", "n_pass": [49, 6, 6], "n_token": 25, "loss": [0.22427120804786682, 0.3394693434238434], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def _checkColinstances(", "self", ",", "table", "#NEWLINE#", "for", "colpathname", "in", "table", "#NEWLINE#", "#INDENT#", "self", "(", "colpathname", ".", "colinstances", "[", "colpathname", "]", "is", "table", "_f_col", "(", "colpathname"]}}
{"position": {"error_location": 14, "repair_targets": [4, 9, 21], "repair_candidates": [7, 14, 18, 24, 4, 9, 21, 2, 12]}}
{"prediction": {"error_location": 0.7990983128547668, "repair_targets": [0.6635782718658447, 0.04301493242383003, 0.005554927513003349], "repair_candidates": [0.28300371766090393, 0.6635782718658447, 0.0002516073000151664, 0.04301493242383003, 0.004519450478255749, 1.4036157153896056e-05, 4.223641099088127e-06, 0.005554927513003349, 5.878472438780591e-05], "target_probs": 0.712148129940033}}


{"result": {"time": "2021-02-11 12:04:02.614168", "n_pass": [50, 7, 7], "n_token": 23, "loss": [0.047243062406778336, 0.022878803312778473], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["self", ",", "table", "#NEWLINE#", "for", "colpathname", "in", "table", "#NEWLINE#", "#INDENT#", "self", "(", "colpathname", ".", "colinstances", "[", "colpathname", "]", "is", "table", "_f_col", "(", "colpathname"]}}
{"position": {"error_location": 12, "repair_targets": [2, 7, 19], "repair_candidates": [5, 12, 16, 22, 2, 7, 19, 0, 10]}}
{"prediction": {"error_location": 0.9538555145263672, "repair_targets": [0.7801464200019836, 0.18639996647834778, 0.01083449274301529], "repair_candidates": [0.009554953314363956, 0.7801464200019836, 5.254555435385555e-05, 0.18639996647834778, 0.01295476220548153, 4.0566585084889084e-05, 1.380130242978339e-06, 0.01083449274301529, 1.4822227058175486e-05], "target_probs": 0.9773809313774109}}


{"result": {"time": "2021-02-11 12:04:02.670035", "n_pass": [76, 8, 8], "n_token": 22, "loss": [0.30076146125793457, 0.336603581905365], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["self", "table", "#NEWLINE#", "for", "colpathname", "in", "table", "#NEWLINE#", "#INDENT#", "self", "(", "colpathname", ".", "colinstances", "[", "colpathname", "]", "is", "table", "_f_col", "(", "colpathname"]}}
{"position": {"error_location": 11, "repair_targets": [1, 6, 18], "repair_candidates": [4, 11, 15, 21, 1, 6, 18, 0, 9]}}
{"prediction": {"error_location": 0.7402544021606445, "repair_targets": [0.11366743594408035, 0.5553780794143677, 0.045146405696868896], "repair_candidates": [0.023990092799067497, 0.11366743594408035, 0.15563248097896576, 0.5553780794143677, 0.10617371648550034, 1.1301517588435672e-05, 2.7407858738115465e-07, 0.045146405696868896, 2.399225706994912e-07], "target_probs": 0.7141919136047363}}


{"result": {"time": "2021-02-11 12:04:03.002012", "n_pass": [88, 14, 9], "n_token": 20, "loss": [0.43601927161216736, 0.46778005361557007], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["self", "table", "#NEWLINE#", "for", "colpathname", "in", "table", "#NEWLINE#", "#INDENT#", "self", "(", "colpathname", ".", "colinstances", "[", "colpathname", "table", "_f_col", "(", "colpathname"]}}
{"position": {"error_location": 11, "repair_targets": [1, 6, 16], "repair_candidates": [4, 11, 15, 19, 1, 6, 16, 0, 9]}}
{"prediction": {"error_location": 0.6466051936149597, "repair_targets": [0.2675887942314148, 0.25371238589286804, 0.10509016364812851], "repair_candidates": [0.060333993285894394, 0.2675887942314148, 0.09957405179738998, 0.25371238589286804, 0.21281249821186066, 0.000490967184305191, 0.00038688682252541184, 0.10509016364812851, 1.0334820217394736e-05], "target_probs": 0.6263912916183472}}


{"result": {"time": "2021-02-11 12:04:03.334826", "n_pass": [115, 20, 10], "n_token": 19, "loss": [0.6661192178726196, 0.44684112071990967], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["self", "table", "#NEWLINE#", "for", "colpathname", "in", "table", "#NEWLINE#", "#INDENT#", "self", "(", "colpathname", ".", "colinstances", "[", "colpathname", "table", "(", "colpathname"]}}
{"position": {"error_location": 11, "repair_targets": [1, 6, 16], "repair_candidates": [4, 11, 15, 18, 1, 6, 16, 0, 9]}}
{"prediction": {"error_location": 0.5136982202529907, "repair_targets": [0.40432241559028625, 0.17007197439670563, 0.06525109708309174], "repair_candidates": [0.10227219015359879, 0.40432241559028625, 0.03124362789094448, 0.17007197439670563, 0.22643277049064636, 0.00031782782752998173, 8.286580123240128e-05, 0.06525109708309174, 5.322464403434424e-06], "target_probs": 0.639645516872406}}


{"result": {"time": "2021-02-11 12:04:03.831433", "n_pass": [131, 29, 11], "n_token": 18, "loss": [0.7099920511245728, 0.5233651995658875], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["self", "table", "#NEWLINE#", "for", "colpathname", "in", "table", "#NEWLINE#", "#INDENT#", "self", "(", "colpathname", ".", "[", "colpathname", "table", "(", "colpathname"]}}
{"position": {"error_location": 11, "repair_targets": [1, 6, 15], "repair_candidates": [4, 11, 14, 17, 1, 6, 15, 0, 9]}}
{"prediction": {"error_location": 0.4916481673717499, "repair_targets": [0.4602988660335541, 0.08378709107637405, 0.048437245190143585], "repair_candidates": [0.1708642989397049, 0.4602988660335541, 0.07655419409275055, 0.08378709107637405, 0.15929122269153595, 0.0005983258015476167, 0.0001408608368365094, 0.048437245190143585, 2.7918053092435002e-05], "target_probs": 0.5925232172012329}}




Minimal simplified tokens:

['self', 'table', '#NEWLINE#', 'for', 'colpathname', 'in', 'table', '#NEWLINE#', '#INDENT#', 'self', '(', 'colpathname', '.', '[', 'colpathname', 'table', '(', 'colpathname']
