
Original sample:

{"has_bug": true, "bug_kind": 1, "bug_kind_name": "VARIABLE_MISUSE", "source_tokens": ["#NEWLINE#", "def test_nopython_flag(", "self", ")", ":", "#NEWLINE#", "#INDENT#", "def foo(", "A", ",", "B", ")", ":", "#NEWLINE#", "#INDENT#", "pass", "#NEWLINE#", "#UNINDENT#", "guvectorize", "(", "[", "void", "(", "float32", "[", ":", "]", ",", "float32", "[", ":", "]", ")", "]", ",", "'(x)->(x)'", ",", "target", "=", "'cuda'", ",", "nopython", "=", "True", ")", "(", "self", ")", "#NEWLINE#", "with", "self", ".", "assertRaises", "(", "TypeError", ")", "as", "raises", ":", "#NEWLINE#", "#INDENT#", "guvectorize", "(", "[", "void", "(", "float32", "[", ":", "]", ",", "float32", "[", ":", "]", ")", "]", ",", "'(x)->(x)'", ",", "target", "=", "'cuda'", ",", "nopython", "=", "False", ")", "(", "foo", ")", "#NEWLINE#", "#UNINDENT#", "self", ".", "assertEqual", "(", "'nopython flag must be True'", ",", "str", "(", "raises", ".", "exception", ")", ")"], "error_location": [46], "repair_targets": [89], "repair_candidates": [2, 46, 50, 93, 57, 101, 89], "provenances": [{"datasetProvenance": {"datasetName": "ETHPy150Open", "filepath": "numba/numba/numba/cuda/tests/cudapy/test_gufunc.py", "license": "bsd-2-clause", "note": "license: bigquery_api"}}], "txt_file": "eval__VARIABLE_MISUSE__SStuB.txt-00000-of-00300", "js_count": 2098, "results": {"model": "transformer", "prob": {"loc": [[0.00010936738544842228, 3.0982807430746107e-09, 1.307802310890338e-09, 1.824186496302005e-10, 1.7770962479346508e-10, 2.1211123135689292e-10, 1.6261487989499557e-10, 1.271060895424725e-10, 5.306383332737141e-09, 8.059684170058645e-11, 1.69910201464063e-08, 4.311044229932115e-11, 1.0577960729563074e-10, 9.93970877827266e-11, 7.820927239166053e-11, 5.130953883991651e-09, 1.0860477794860657e-10, 8.839817766670421e-11, 2.260179821078623e-09, 6.686378534181969e-11, 5.031078664785582e-09, 4.2944683920076443e-10, 2.2632729024252285e-09, 1.0716719600623037e-07, 8.276098695247924e-10, 5.48906420316797e-10, 7.338639695930738e-10, 2.6230037586394417e-10, 9.848194260086984e-09, 1.0744892753322688e-09, 4.1411349349651516e-10, 5.960960058892795e-10, 3.954016558616047e-10, 2.807981347441313e-10, 3.332195352978573e-10, 6.985703127071474e-10, 9.267053791006674e-11, 1.293512380540207e-10, 9.7781871488678e-10, 3.986094565533449e-09, 7.937031587523791e-11, 8.949276042446996e-11, 1.664759580188857e-10, 1.8502267495890123e-09, 3.4453998681849285e-11, 7.200226526116182e-10, 0.9998552799224854, 6.457885892707793e-10, 1.303652602535621e-10, 3.604630482989535e-11, 1.9608488166511506e-09, 1.2070436317124233e-10, 5.652643353393216e-10, 6.098538340992832e-10, 4.381878415671281e-09, 1.916408004509762e-10, 1.3507791551958803e-09, 4.536191144932644e-10, 2.532333231997086e-10, 1.069820135257693e-10, 7.166927468160722e-11, 2.127912956950695e-09, 1.39400227472386e-10, 7.993276596174326e-10, 7.692368964029583e-10, 1.752180622816013e-09, 4.424586919071771e-08, 4.336901393564574e-10, 7.061431994692668e-10, 8.79733508263314e-10, 4.557821065009904e-10, 1.8555793701580114e-07, 1.2502151536253336e-09, 1.3286632905007423e-09, 1.576867081354294e-09, 9.236918452337761e-10, 4.2941405986596237e-10, 4.821461563331297e-10, 1.761691015289557e-09, 1.33876423835666e-10, 2.1439959529967467e-10, 1.127432591729871e-09, 1.2330865217791143e-08, 7.05584132787429e-11, 5.348363418811175e-11, 5.837193922664241e-11, 1.8124235445782233e-09, 9.582468499247376e-12, 1.0857189591817473e-09, 8.87309306563111e-06, 4.918132012754484e-10, 2.259489123579428e-10, 6.127018337132029e-11, 7.287069558881143e-11, 6.980691719116194e-11, 1.8928919195970728e-11, 1.9966877040644704e-09, 1.171918756881496e-05, 1.212790007310005e-10, 1.0457860133428198e-09, 5.558271065631004e-10, 1.4267277038015891e-05, 4.390560415235001e-10, 5.923987411726728e-10, 1.5170505129891154e-10, 3.505577772511259e-10]], "pointer": [[0.0, 0.0, 2.1806450604344718e-05, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 2.1757437025371473e-06, 0.0, 0.0, 0.0, 4.2566261981846765e-06, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0003548958629835397, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.9995808005332947, 0.0, 0.0, 0.0, 6.668377636742662e-07, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 3.534500865498558e-05, 0.0, 0.0, 0.0, 0.0]], "target": [0.9995808005332947]}, "loss": [0.0001445904199499637, 0.0004192873602733016], "acc": [0.0, 1.0, 1.0, 1.0]}}


Trace of simplified code(s):

{"result": {"time": "2021-02-11 11:34:01.986034", "n_pass": [1, 1, 1], "n_token": 106, "loss": [0.0001445904199499637, 0.0004192873602733016], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def test_nopython_flag(", "self", ")", ":", "#NEWLINE#", "#INDENT#", "def foo(", "A", ",", "B", ")", ":", "#NEWLINE#", "#INDENT#", "pass", "#NEWLINE#", "#UNINDENT#", "guvectorize", "(", "[", "void", "(", "float32", "[", ":", "]", ",", "float32", "[", ":", "]", ")", "]", ",", "'(x)->(x)'", ",", "target", "=", "'cuda'", ",", "nopython", "=", "True", ")", "(", "self", ")", "#NEWLINE#", "with", "self", ".", "assertRaises", "(", "TypeError", ")", "as", "raises", ":", "#NEWLINE#", "#INDENT#", "guvectorize", "(", "[", "void", "(", "float32", "[", ":", "]", ",", "float32", "[", ":", "]", ")", "]", ",", "'(x)->(x)'", ",", "target", "=", "'cuda'", ",", "nopython", "=", "False", ")", "(", "foo", ")", "#NEWLINE#", "#UNINDENT#", "self", ".", "assertEqual", "(", "'nopython flag must be True'", ",", "str", "(", "raises", ".", "exception", ")", ")"]}}
{"position": {"error_location": 46, "repair_targets": [89], "repair_candidates": [2, 46, 50, 93, 57, 101, 89]}}
{"prediction": {"error_location": 0.9998552799224854, "repair_targets": [0.9995808005332947], "repair_candidates": [2.1806450604344718e-05, 2.1757437025371473e-06, 4.2566261981846765e-06, 0.0003548958629835397, 0.9995808005332947, 6.668377636742662e-07, 3.534500865498558e-05], "target_probs": 0.9995808005332947}}


{"result": {"time": "2021-02-11 11:34:02.044405", "n_pass": [21, 2, 2], "n_token": 93, "loss": [0.0018941095331683755, 0.042266733944416046], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def test_nopython_flag(", "self", ")", ":", "#NEWLINE#", "#INDENT#", "def foo(", "A", ",", "B", ")", ":", "]", ",", "float32", "[", ":", "]", ")", "]", ",", "'(x)->(x)'", ",", "target", "=", "'cuda'", ",", "nopython", "=", "True", ")", "(", "self", ")", "#NEWLINE#", "with", "self", ".", "assertRaises", "(", "TypeError", ")", "as", "raises", ":", "#NEWLINE#", "#INDENT#", "guvectorize", "(", "[", "void", "(", "float32", "[", ":", "]", ",", "float32", "[", ":", "]", ")", "]", ",", "'(x)->(x)'", ",", "target", "=", "'cuda'", ",", "nopython", "=", "False", ")", "(", "foo", ")", "#NEWLINE#", "#UNINDENT#", "self", ".", "assertEqual", "(", "'nopython flag must be True'", ",", "str", "(", "raises", ".", "exception", ")", ")"]}}
{"position": {"error_location": 33, "repair_targets": [76], "repair_candidates": [2, 33, 37, 80, 44, 88, 76]}}
{"prediction": {"error_location": 0.9981077909469604, "repair_targets": [0.9586140513420105], "repair_candidates": [0.0048003774136304855, 0.00013876463344786316, 0.0003574262373149395, 0.03576894849538803, 0.9586140513420105, 3.466605630819686e-05, 0.0002858153311535716], "target_probs": 0.9586140513420105}}


{"result": {"time": "2021-02-11 11:34:02.100792", "n_pass": [22, 3, 3], "n_token": 80, "loss": [0.014695730991661549, 0.0006833026418462396], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def test_nopython_flag(", "self", ")", ":", "#NEWLINE#", "#INDENT#", "def foo(", "A", ",", "B", ")", ":", "'cuda'", ",", "nopython", "=", "True", ")", "(", "self", ")", "#NEWLINE#", "with", "self", ".", "assertRaises", "(", "TypeError", ")", "as", "raises", ":", "#NEWLINE#", "#INDENT#", "guvectorize", "(", "[", "void", "(", "float32", "[", ":", "]", ",", "float32", "[", ":", "]", ")", "]", ",", "'(x)->(x)'", ",", "target", "=", "'cuda'", ",", "nopython", "=", "False", ")", "(", "foo", ")", "#NEWLINE#", "#UNINDENT#", "self", ".", "assertEqual", "(", "'nopython flag must be True'", ",", "str", "(", "raises", ".", "exception", ")", ")"]}}
{"position": {"error_location": 20, "repair_targets": [63], "repair_candidates": [2, 20, 24, 67, 31, 75, 63]}}
{"prediction": {"error_location": 0.9854118227958679, "repair_targets": [0.999316930770874], "repair_candidates": [0.00033718516351655126, 2.811186959661427e-06, 1.8347280274610966e-05, 0.0002145717153325677, 0.999316930770874, 1.856231961028243e-06, 0.00010830859537236392], "target_probs": 0.999316930770874}}


{"result": {"time": "2021-02-11 11:34:02.157704", "n_pass": [25, 4, 4], "n_token": 67, "loss": [0.023475099354982376, 0.004368654917925596], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def test_nopython_flag(", "self", ")", ":", "#NEWLINE#", "#INDENT#", "def foo(", "A", ",", "B", ")", ":", "'cuda'", ",", "nopython", "=", "True", ")", "(", "self", ")", "#NEWLINE#", "with", "self", ".", "assertRaises", "(", "TypeError", ")", "as", "raises", ":", "#NEWLINE#", "#INDENT#", "guvectorize", "(", "[", "void", "'(x)->(x)'", ",", "target", "=", "'cuda'", ",", "nopython", "=", "False", ")", "(", "foo", ")", "#NEWLINE#", "#UNINDENT#", "self", ".", "assertEqual", "(", "'nopython flag must be True'", ",", "str", "(", "raises", ".", "exception", ")", ")"]}}
{"position": {"error_location": 20, "repair_targets": [50], "repair_candidates": [2, 20, 24, 54, 31, 62, 50]}}
{"prediction": {"error_location": 0.9767981767654419, "repair_targets": [0.9956408739089966], "repair_candidates": [0.0028403536416590214, 1.781303399184253e-05, 0.00010846960503840819, 0.0013710515340790153, 0.9956408739089966, 7.723941052972805e-06, 1.3714320630242582e-05], "target_probs": 0.9956408739089966}}


{"result": {"time": "2021-02-11 11:34:02.217121", "n_pass": [41, 5, 5], "n_token": 60, "loss": [0.01075424812734127, 0.0034390150103718042], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def test_nopython_flag(", "self", ")", ":", "#NEWLINE#", "#INDENT#", "def foo(", "A", ",", "B", ")", ":", "'cuda'", ",", "nopython", "=", "True", ")", "(", "self", ")", "#NEWLINE#", "with", "self", ".", "assertRaises", "(", "TypeError", ")", "as", "raises", ":", "#NEWLINE#", "#INDENT#", "guvectorize", "(", "[", "void", "=", "False", ")", "(", "foo", ")", "#NEWLINE#", "#UNINDENT#", "self", ".", "assertEqual", "(", "'nopython flag must be True'", ",", "str", "(", "raises", ".", "exception", ")", ")"]}}
{"position": {"error_location": 20, "repair_targets": [43], "repair_candidates": [2, 20, 24, 47, 31, 55, 43]}}
{"prediction": {"error_location": 0.989303469657898, "repair_targets": [0.996566891670227], "repair_candidates": [0.002806559670716524, 1.3511873476090841e-05, 8.764963422436267e-05, 0.0005041245021857321, 0.996566891670227, 2.9211275887064403e-06, 1.8316413843422197e-05], "target_probs": 0.996566891670227}}


{"result": {"time": "2021-02-11 11:34:02.273834", "n_pass": [45, 6, 6], "n_token": 54, "loss": [0.21539783477783203, 0.029273441061377525], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def test_nopython_flag(", "self", ")", ":", "#NEWLINE#", ":", "'cuda'", ",", "nopython", "=", "True", ")", "(", "self", ")", "#NEWLINE#", "with", "self", ".", "assertRaises", "(", "TypeError", ")", "as", "raises", ":", "#NEWLINE#", "#INDENT#", "guvectorize", "(", "[", "void", "=", "False", ")", "(", "foo", ")", "#NEWLINE#", "#UNINDENT#", "self", ".", "assertEqual", "(", "'nopython flag must be True'", ",", "str", "(", "raises", ".", "exception", ")", ")"]}}
{"position": {"error_location": 14, "repair_targets": [37], "repair_candidates": [2, 14, 18, 41, 25, 49, 37]}}
{"prediction": {"error_location": 0.8062206506729126, "repair_targets": [0.9711508750915527], "repair_candidates": [0.018191205337643623, 9.858384873950854e-05, 0.000269559386651963, 0.010224265046417713, 0.9711508750915527, 1.9822746253339574e-05, 4.567189171211794e-05], "target_probs": 0.9711508750915527}}


{"result": {"time": "2021-02-11 11:34:02.385361", "n_pass": [49, 8, 7], "n_token": 47, "loss": [0.05131473392248154, 0.0033469118643552065], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def test_nopython_flag(", "self", ")", ":", "#NEWLINE#", ":", "'cuda'", ",", "nopython", "=", "True", ")", "(", "self", ")", "#NEWLINE#", "with", "self", ".", "assertRaises", "(", "TypeError", ")", "as", "raises", "=", "False", ")", "(", "foo", ")", "#NEWLINE#", "#UNINDENT#", "self", ".", "assertEqual", "(", "'nopython flag must be True'", ",", "str", "(", "raises", ".", "exception", ")", ")"]}}
{"position": {"error_location": 14, "repair_targets": [30], "repair_candidates": [2, 14, 18, 34, 25, 42, 30]}}
{"prediction": {"error_location": 0.9499795436859131, "repair_targets": [0.9966586828231812], "repair_candidates": [0.0013949864078313112, 1.1791112228820566e-06, 2.3860873170633567e-06, 0.0006240305956453085, 0.9966586828231812, 1.3747501270700013e-06, 0.0013174267951399088], "target_probs": 0.9966586828231812}}


{"result": {"time": "2021-02-11 11:34:02.500794", "n_pass": [74, 10, 8], "n_token": 43, "loss": [0.7625799775123596, 0.015615941025316715], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def test_nopython_flag(", "self", ")", ":", "#NEWLINE#", ":", "'cuda'", ",", "nopython", "=", "True", ")", "(", "self", ")", "#NEWLINE#", "with", "self", ".", "assertRaises", "(", "TypeError", ")", "as", "raises", "=", "False", ")", "(", "foo", ")", "#NEWLINE#", "#UNINDENT#", "self", ",", "str", "(", "raises", ".", "exception", ")", ")"]}}
{"position": {"error_location": 14, "repair_targets": [30], "repair_candidates": [2, 14, 18, 34, 25, 38, 30]}}
{"prediction": {"error_location": 0.4664613604545593, "repair_targets": [0.9845053553581238], "repair_candidates": [0.011973792687058449, 0.0002903108252212405, 4.766071288031526e-05, 0.001751260133460164, 0.9845053553581238, 0.0004849656543228775, 0.0009466648916713893], "target_probs": 0.9845053553581238}}


{"result": {"time": "2021-02-11 11:34:02.612981", "n_pass": [78, 12, 9], "n_token": 40, "loss": [0.0528302937746048, 0.010431627742946148], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def test_nopython_flag(", "self", ":", "'cuda'", ",", "nopython", "=", "True", ")", "(", "self", ")", "#NEWLINE#", "with", "self", ".", "assertRaises", "(", "TypeError", ")", "as", "raises", "=", "False", ")", "(", "foo", ")", "#NEWLINE#", "#UNINDENT#", "self", ",", "str", "(", "raises", ".", "exception", ")", ")"]}}
{"position": {"error_location": 11, "repair_targets": [27], "repair_candidates": [2, 11, 15, 31, 22, 35, 27]}}
{"prediction": {"error_location": 0.9485408663749695, "repair_targets": [0.9896225929260254], "repair_candidates": [0.0026979241520166397, 0.00041528375004418194, 5.6314325775019825e-05, 0.0062915063463151455, 0.9896225929260254, 0.0007705430616624653, 0.00014581147115677595], "target_probs": 0.9896225929260254}}


{"result": {"time": "2021-02-11 11:34:02.838316", "n_pass": [84, 16, 10], "n_token": 37, "loss": [0.012167868204414845, 0.015766341239213943], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def test_nopython_flag(", "self", ":", "'cuda'", ",", "nopython", "=", "True", ")", "(", "self", ")", "#NEWLINE#", "with", "self", ".", "assertRaises", "as", "raises", "=", "False", ")", "(", "foo", ")", "#NEWLINE#", "#UNINDENT#", "self", ",", "str", "(", "raises", ".", "exception", ")", ")"]}}
{"position": {"error_location": 11, "repair_targets": [24], "repair_candidates": [2, 11, 15, 28, 19, 32, 24]}}
{"prediction": {"error_location": 0.987905740737915, "repair_targets": [0.9843572974205017], "repair_candidates": [0.003761173691600561, 0.00048684366629458964, 0.0003420841821935028, 0.008692970499396324, 0.9843572974205017, 0.000589028000831604, 0.001770551549270749], "target_probs": 0.9843572974205017}}


{"result": {"time": "2021-02-11 11:34:02.894448", "n_pass": [89, 17, 11], "n_token": 33, "loss": [0.013480585999786854, 0.048400647938251495], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def test_nopython_flag(", "self", ":", "'cuda'", ",", "nopython", "=", "True", ")", "(", "self", ")", "#NEWLINE#", "with", "self", ".", "assertRaises", "as", "raises", "=", "False", ")", "(", "foo", ")", "#NEWLINE#", "#UNINDENT#", "self", ",", "str", "(", "raises"]}}
{"position": {"error_location": 11, "repair_targets": [24], "repair_candidates": [2, 11, 15, 28, 19, 32, 24]}}
{"prediction": {"error_location": 0.9866097569465637, "repair_targets": [0.9527519941329956], "repair_candidates": [0.002743117045611143, 0.0003670263977255672, 7.865620864322409e-05, 0.02910716086626053, 0.9527519941329956, 0.0009942797478288412, 0.013957826420664787], "target_probs": 0.9527519941329956}}


{"result": {"time": "2021-02-11 11:34:03.230099", "n_pass": [123, 23, 12], "n_token": 32, "loss": [0.02451951801776886, 0.11250091344118118], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def test_nopython_flag(", "self", "'cuda'", ",", "nopython", "=", "True", ")", "(", "self", ")", "#NEWLINE#", "with", "self", ".", "assertRaises", "as", "raises", "=", "False", ")", "(", "foo", ")", "#NEWLINE#", "#UNINDENT#", "self", ",", "str", "(", "raises"]}}
{"position": {"error_location": 10, "repair_targets": [23], "repair_candidates": [2, 10, 14, 27, 18, 31, 23]}}
{"prediction": {"error_location": 0.9757787585258484, "repair_targets": [0.8935965299606323], "repair_candidates": [0.01084241084754467, 0.0012837836984544992, 9.918234718497843e-05, 0.06048865616321564, 0.8935965299606323, 0.0015666490653529763, 0.03212279826402664], "target_probs": 0.8935965299606323}}


{"result": {"time": "2021-02-11 11:34:03.565404", "n_pass": [130, 29, 13], "n_token": 30, "loss": [0.15957613289356232, 0.19642506539821625], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def test_nopython_flag(", "self", "'cuda'", ",", "nopython", "=", "True", ")", "(", "self", ")", "self", ".", "assertRaises", "as", "raises", "=", "False", ")", "(", "foo", ")", "#NEWLINE#", "#UNINDENT#", "self", ",", "str", "(", "raises"]}}
{"position": {"error_location": 10, "repair_targets": [21], "repair_candidates": [2, 10, 12, 25, 16, 29, 21]}}
{"prediction": {"error_location": 0.8525049686431885, "repair_targets": [0.8216629028320312], "repair_candidates": [0.0021315033081918955, 0.0015940339071676135, 0.00013352124369703233, 0.1500083953142166, 0.8216629028320312, 0.0021341515239328146, 0.022335441783070564], "target_probs": 0.8216629028320312}}


{"result": {"time": "2021-02-11 11:34:03.732374", "n_pass": [136, 32, 14], "n_token": 28, "loss": [0.5583567023277283, 0.5852257013320923], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def test_nopython_flag(", "self", "'cuda'", ",", "nopython", "=", "True", ")", "(", "self", ")", "self", ".", "assertRaises", "as", "raises", "=", "False", ")", "(", "foo", "#UNINDENT#", "self", ",", "str", "(", "raises"]}}
{"position": {"error_location": 10, "repair_targets": [21], "repair_candidates": [2, 10, 12, 23, 16, 27, 21]}}
{"prediction": {"error_location": 0.5721485018730164, "repair_targets": [0.5569801330566406], "repair_candidates": [0.003328726626932621, 0.0014725325163453817, 0.00021536157873924822, 0.3122686743736267, 0.5569801330566406, 0.001868833671323955, 0.12386570125818253], "target_probs": 0.5569801330566406}}


{"result": {"time": "2021-02-11 11:34:03.787983", "n_pass": [138, 33, 15], "n_token": 26, "loss": [0.009354333393275738, 0.6085466742515564], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def test_nopython_flag(", "self", "'cuda'", ",", "nopython", "=", "True", ")", "(", "self", ")", "self", ".", "assertRaises", "as", "raises", "=", "False", ")", "(", "foo", "#UNINDENT#", "self", "(", "raises"]}}
{"position": {"error_location": 10, "repair_targets": [21], "repair_candidates": [2, 10, 12, 23, 16, 25, 21]}}
{"prediction": {"error_location": 0.9906892776489258, "repair_targets": [0.5441411137580872], "repair_candidates": [0.0008759799529798329, 0.0012809066101908684, 0.00011364366218913347, 0.4195910096168518, 0.5441411137580872, 3.242998354835436e-05, 0.033964939415454865], "target_probs": 0.5441411137580872}}


{"result": {"time": "2021-02-11 11:34:04.347987", "n_pass": [175, 43, 16], "n_token": 25, "loss": [0.008877098560333252, 0.13896983861923218], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def test_nopython_flag(", "self", "'cuda'", ",", "nopython", "=", "True", ")", "(", "self", ")", "self", ".", "assertRaises", "as", "raises", "=", "False", ")", "(", "foo", "#UNINDENT#", "self", "raises"]}}
{"position": {"error_location": 10, "repair_targets": [21], "repair_candidates": [2, 10, 12, 23, 16, 24, 21]}}
{"prediction": {"error_location": 0.9911623001098633, "repair_targets": [0.8702542781829834], "repair_candidates": [0.000526601739693433, 0.001021839096210897, 0.00014679091691505164, 0.1238197386264801, 0.8702542781829834, 5.14841522090137e-05, 0.004179254174232483], "target_probs": 0.8702542781829834}}


{"result": {"time": "2021-02-11 11:34:04.794763", "n_pass": [184, 51, 17], "n_token": 24, "loss": [0.4983285069465637, 0.5363947749137878], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def test_nopython_flag(", "self", "'cuda'", ",", "nopython", "=", "True", "(", "self", ")", "self", ".", "assertRaises", "as", "raises", "=", "False", ")", "(", "foo", "#UNINDENT#", "self", "raises"]}}
{"position": {"error_location": 9, "repair_targets": [20], "repair_candidates": [2, 9, 11, 22, 15, 23, 20]}}
{"prediction": {"error_location": 0.6075452566146851, "repair_targets": [0.5848529934883118], "repair_candidates": [0.0021306367125362158, 0.004565938375890255, 0.0006769938627257943, 0.38648709654808044, 0.5848529934883118, 0.0002850874443538487, 0.02100124955177307], "target_probs": 0.5848529934883118}}


{"result": {"time": "2021-02-11 11:34:05.018577", "n_pass": [190, 55, 18], "n_token": 23, "loss": [0.8507359027862549, 0.5433987975120544], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def test_nopython_flag(", "self", "'cuda'", ",", "nopython", "=", "True", "(", "self", ")", "self", ".", "as", "raises", "=", "False", ")", "(", "foo", "#UNINDENT#", "self", "raises"]}}
{"position": {"error_location": 9, "repair_targets": [19], "repair_candidates": [2, 9, 11, 21, 14, 22, 19]}}
{"prediction": {"error_location": 0.4271004796028137, "repair_targets": [0.5807709693908691], "repair_candidates": [0.006126314867287874, 0.018869731575250626, 0.009541570208966732, 0.32247194647789, 0.5807709693908691, 0.0010150291491299868, 0.06120442971587181], "target_probs": 0.5807709693908691}}




Minimal simplified tokens:

['#NEWLINE#', 'def test_nopython_flag(', 'self', "'cuda'", ',', 'nopython', '=', 'True', '(', 'self', ')', 'self', '.', 'as', 'raises', '=', 'False', ')', '(', 'foo', '#UNINDENT#', 'self', 'raises']
