
Original sample:

{"has_bug": true, "bug_kind": 1, "bug_kind_name": "VARIABLE_MISUSE", "source_tokens": ["#NEWLINE#", "def moveRedWindowToSlice(", "self", ",", "newSlice", ")", ":", "#NEWLINE#", "#INDENT#", "' Moves the red display to the specified RAS slice\\n        :param newSlice: slice to jump (RAS format)\\n        :return:\\n        '", "#NEWLINE#", "redNodeSliceNode", "=", "slicer", ".", "app", ".", "layoutManager", "(", ")", ".", "sliceWidget", "(", "'Red'", ")", ".", "sliceLogic", "(", ")", ".", "GetSliceNode", "(", ")", "#NEWLINE#", "redNodeSliceNode", ".", "JumpSlice", "(", "0", ",", "0", ",", "self", ")"], "error_location": [42], "repair_targets": [4], "repair_candidates": [11, 34, 4, 2, 42], "provenances": [{"datasetProvenance": {"datasetName": "ETHPy150Open", "filepath": "acil-bwh/SlicerCIP/Scripted/CIP_PAARatio/CIP_PAARatio.py", "license": "bsd-3-clause", "note": "license: bigquery_api"}}], "txt_file": "eval__VARIABLE_MISUSE__SStuB.txt-00001-of-00300", "js_count": 3854, "results": {"model": "transformer", "prob": {"loc": [[0.007934458553791046, 1.9002285966962518e-07, 1.5768493710766052e-07, 6.8775257489051e-08, 2.3688080545980483e-06, 9.158564040490091e-08, 1.4361883415858756e-07, 1.3728508463373146e-07, 1.0309277342912537e-07, 2.1430632557439822e-07, 1.0142808548607718e-07, 1.6471956314489944e-06, 1.3402483034496981e-07, 3.8490785669864636e-08, 4.05029823014047e-08, 2.8141384778024303e-09, 8.500617809659161e-08, 4.283999377463488e-09, 3.417289562435144e-08, 1.653603902695977e-07, 6.786493145227723e-08, 3.773620971259106e-09, 6.974727995157082e-08, 1.392330517546725e-07, 1.134090865662074e-07, 7.08450969000296e-08, 2.572536628164812e-09, 8.563596054500522e-08, 2.2239557040393265e-07, 8.541475438050838e-08, 1.3142723354064856e-08, 6.545271276081621e-07, 3.6365238429425517e-06, 3.9165351495284995e-07, 5.112991630085162e-08, 2.3275058325111786e-08, 7.695089010439915e-09, 8.4580179304794e-08, 3.5527411910152296e-06, 1.1689726306940429e-06, 6.048403975000838e-06, 6.435978434637946e-07, 0.9920423626899719, 3.401693788873672e-07]], "pointer": [[0.0, 0.0, 2.1627343812724575e-05, 0.0, 0.9873643517494202, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.012303360737860203, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0002804234973154962, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 3.030772859347053e-05, 0.0]], "target": [0.9873643517494202]}, "loss": [0.007989354431629181, 0.012716157361865044], "acc": [0.0, 1.0, 1.0, 1.0]}}


Trace of simplified code(s):

{"result": {"time": "2021-02-11 12:06:14.796879", "n_pass": [1, 1, 1], "n_token": 44, "loss": [0.007989354431629181, 0.012716157361865044], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def moveRedWindowToSlice(", "self", ",", "newSlice", ")", ":", "#NEWLINE#", "#INDENT#", "' Moves the red display to the specified RAS slice\\n        :param newSlice: slice to jump (RAS format)\\n        :return:\\n        '", "#NEWLINE#", "redNodeSliceNode", "=", "slicer", ".", "app", ".", "layoutManager", "(", ")", ".", "sliceWidget", "(", "'Red'", ")", ".", "sliceLogic", "(", ")", ".", "GetSliceNode", "(", ")", "#NEWLINE#", "redNodeSliceNode", ".", "JumpSlice", "(", "0", ",", "0", ",", "self", ")"]}}
{"position": {"error_location": 42, "repair_targets": [4], "repair_candidates": [11, 34, 4, 2, 42]}}
{"prediction": {"error_location": 0.9920423626899719, "repair_targets": [0.9873643517494202], "repair_candidates": [2.1627343812724575e-05, 0.9873643517494202, 0.012303360737860203, 0.0002804234973154962, 3.030772859347053e-05], "target_probs": 0.9873643517494202}}


{"result": {"time": "2021-02-11 12:06:14.852158", "n_pass": [10, 2, 2], "n_token": 33, "loss": [0.010545718483626842, 0.006766750942915678], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def moveRedWindowToSlice(", "self", ",", "newSlice", ")", ":", "#NEWLINE#", "#INDENT#", "' Moves the red display to the specified RAS slice\\n        :param newSlice: slice to jump (RAS format)\\n        :return:\\n        '", "#NEWLINE#", "redNodeSliceNode", "=", "slicer", ".", "app", ".", "layoutManager", "(", ")", ".", "sliceWidget", "#NEWLINE#", "redNodeSliceNode", ".", "JumpSlice", "(", "0", ",", "0", ",", "self", ")"]}}
{"position": {"error_location": 31, "repair_targets": [4], "repair_candidates": [11, 23, 4, 2, 31]}}
{"prediction": {"error_location": 0.9895097017288208, "repair_targets": [0.9932560920715332], "repair_candidates": [4.878472100244835e-05, 0.9932560920715332, 0.006481375079602003, 0.00016884431533981115, 4.491037179832347e-05], "target_probs": 0.9932560920715332}}


{"result": {"time": "2021-02-11 12:06:14.907519", "n_pass": [22, 3, 3], "n_token": 28, "loss": [0.06415192782878876, 0.015923364087939262], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def moveRedWindowToSlice(", "self", ",", "newSlice", "#NEWLINE#", "redNodeSliceNode", "=", "slicer", ".", "app", ".", "layoutManager", "(", ")", ".", "sliceWidget", "#NEWLINE#", "redNodeSliceNode", ".", "JumpSlice", "(", "0", ",", "0", ",", "self", ")"]}}
{"position": {"error_location": 26, "repair_targets": [4], "repair_candidates": [6, 18, 4, 2, 26]}}
{"prediction": {"error_location": 0.9378625154495239, "repair_targets": [0.9842027425765991], "repair_candidates": [0.00022532166622113436, 0.9842027425765991, 0.015390558168292046, 6.755648064427078e-05, 0.00011384701792849228], "target_probs": 0.9842027425765991}}


{"result": {"time": "2021-02-11 12:06:14.962778", "n_pass": [24, 4, 4], "n_token": 22, "loss": [0.563187301158905, 0.05356739088892937], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def moveRedWindowToSlice(", "self", ",", "newSlice", "#NEWLINE#", "redNodeSliceNode", "=", "slicer", ".", "sliceWidget", "#NEWLINE#", "redNodeSliceNode", ".", "JumpSlice", "(", "0", ",", "0", ",", "self", ")"]}}
{"position": {"error_location": 20, "repair_targets": [4], "repair_candidates": [6, 12, 4, 2, 20]}}
{"prediction": {"error_location": 0.5693913102149963, "repair_targets": [0.9478420615196228], "repair_candidates": [0.00454013841226697, 0.9478420615196228, 0.04066338762640953, 0.0003971122205257416, 0.006557205691933632], "target_probs": 0.9478420615196228}}


{"result": {"time": "2021-02-11 12:06:15.017911", "n_pass": [38, 5, 5], "n_token": 19, "loss": [0.08697632700204849, 0.008139326237142086], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def moveRedWindowToSlice(", "self", ",", "newSlice", "#NEWLINE#", "redNodeSliceNode", "=", "slicer", ".", "sliceWidget", "#NEWLINE#", "redNodeSliceNode", "0", ",", "0", ",", "self", ")"]}}
{"position": {"error_location": 17, "repair_targets": [4], "repair_candidates": [6, 12, 4, 2, 17]}}
{"prediction": {"error_location": 0.9166988134384155, "repair_targets": [0.9918937087059021], "repair_candidates": [0.0006196929607540369, 0.9918937087059021, 0.007370565552264452, 2.8115766326664016e-05, 8.782679651631042e-05], "target_probs": 0.9918937087059021}}


{"result": {"time": "2021-02-11 12:06:15.075766", "n_pass": [39, 6, 6], "n_token": 16, "loss": [0.6643207669258118, 0.07123835384845734], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def moveRedWindowToSlice(", "self", ",", "newSlice", "#NEWLINE#", "redNodeSliceNode", "=", "slicer", ".", "sliceWidget", "#NEWLINE#", "redNodeSliceNode", ",", "self", ")"]}}
{"position": {"error_location": 14, "repair_targets": [4], "repair_candidates": [6, 12, 4, 2, 14]}}
{"prediction": {"error_location": 0.5146229267120361, "repair_targets": [0.931239902973175], "repair_candidates": [0.006013212259858847, 0.931239902973175, 0.05987239629030228, 0.002148565836250782, 0.0007259671692736447], "target_probs": 0.931239902973175}}


{"result": {"time": "2021-02-11 12:06:15.130807", "n_pass": [41, 7, 7], "n_token": 14, "loss": [0.5607215762138367, 0.0054413629695773125], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["self", ",", "newSlice", "#NEWLINE#", "redNodeSliceNode", "=", "slicer", ".", "sliceWidget", "#NEWLINE#", "redNodeSliceNode", ",", "self", ")"]}}
{"position": {"error_location": 12, "repair_targets": [2], "repair_candidates": [4, 10, 2, 0, 12]}}
{"prediction": {"error_location": 0.5707970261573792, "repair_targets": [0.9945734143257141], "repair_candidates": [0.0009994448628276587, 0.9945734143257141, 0.004145984537899494, 0.00021204374206718057, 6.909098010510206e-05], "target_probs": 0.9945734143257141}}


{"result": {"time": "2021-02-11 12:06:15.185292", "n_pass": [44, 8, 8], "n_token": 11, "loss": [0.2862247824668884, 0.2019347995519638], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["self", ",", "newSlice", "#NEWLINE#", "redNodeSliceNode", "sliceWidget", "#NEWLINE#", "redNodeSliceNode", ",", "self", ")"]}}
{"position": {"error_location": 9, "repair_targets": [2], "repair_candidates": [4, 7, 2, 0, 9]}}
{"prediction": {"error_location": 0.7510937452316284, "repair_targets": [0.8171482086181641], "repair_candidates": [0.006747100502252579, 0.8171482086181641, 0.09402963519096375, 0.0816856324672699, 0.000389417982660234], "target_probs": 0.8171482086181641}}


{"result": {"time": "2021-02-11 12:06:15.240637", "n_pass": [58, 9, 9], "n_token": 9, "loss": [0.5073490142822266, 0.1495255082845688], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["self", ",", "newSlice", "#NEWLINE#", "redNodeSliceNode", "redNodeSliceNode", ",", "self", ")"]}}
{"position": {"error_location": 7, "repair_targets": [2], "repair_candidates": [4, 5, 2, 0, 7]}}
{"prediction": {"error_location": 0.6020896434783936, "repair_targets": [0.8611164689064026], "repair_candidates": [0.020446881651878357, 0.8611164689064026, 0.06244191899895668, 0.054826728999614716, 0.0011680918978527188], "target_probs": 0.8611164689064026}}




Minimal simplified tokens:

['self', ',', 'newSlice', '#NEWLINE#', 'redNodeSliceNode', 'redNodeSliceNode', ',', 'self', ')']
