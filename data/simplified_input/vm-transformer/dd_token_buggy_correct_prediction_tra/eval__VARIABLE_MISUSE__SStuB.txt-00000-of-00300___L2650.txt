
Original sample:

{"has_bug": true, "bug_kind": 1, "bug_kind_name": "VARIABLE_MISUSE", "source_tokens": ["#NEWLINE#", "def _errors(", "self", ")", ":", "#NEWLINE#", "#INDENT#", "return", "ErrorDict", "(", "(", "(", "self", ",", "v", ")", "for", "(", "k", ",", "v", ")", "in", "six", ".", "iteritems", "(", "self", ".", "form", ".", "errors", ")", "if", "(", "k", "in", "[", "f", ".", "name", "for", "f", "in", "self", ".", "boundfields", "]", ")", ")", ")"], "error_location": [12], "repair_targets": [18, 35], "repair_candidates": [14, 20, 38, 42, 18, 35, 2, 12, 27, 44], "provenances": [{"datasetProvenance": {"datasetName": "ETHPy150Open", "filepath": "carljm/django-form-utils/form_utils/forms.py", "license": "bsd-3-clause", "note": "license: bigquery_api"}}], "txt_file": "eval__VARIABLE_MISUSE__SStuB.txt-00000-of-00300", "js_count": 2650, "results": {"model": "transformer", "prob": {"loc": [[0.0012492130044847727, 2.352099670588359e-08, 2.9050191141521964e-09, 4.864949415539499e-11, 1.4501110034981224e-10, 1.5599642411157078e-10, 1.5011475396065066e-10, 2.382058772454343e-09, 6.254829432172926e-10, 1.3206212789995675e-09, 6.839626820465128e-08, 4.7182675189105794e-07, 0.9983307719230652, 4.5545297666649276e-07, 3.016812479472719e-05, 8.541576335119316e-07, 1.9806513762432587e-08, 6.809837138632702e-10, 1.429110483286422e-07, 2.481250760411058e-10, 1.5430918764991475e-08, 6.625568843565688e-11, 3.511719040560912e-11, 6.556177128969054e-11, 2.1623287882466258e-10, 9.752701424226018e-11, 8.318734034951092e-10, 1.1869370837302995e-06, 5.718183704317426e-10, 1.7443277933182344e-09, 5.708986061669918e-10, 9.965093195063446e-10, 1.6783475997872443e-10, 8.54494164315156e-09, 7.687279146573189e-10, 0.0003810022317338735, 1.951998207516681e-08, 4.1104332382246866e-08, 1.549032731418265e-06, 1.1348045836356846e-09, 4.97462460113951e-10, 2.1119182846973672e-08, 2.6661768348645865e-09, 7.88229689852038e-11, 3.86302599508781e-06, 6.349924475124169e-10, 2.0223136498742633e-09, 3.2947811146044614e-10, 1.338198107880828e-09, 3.834140782643658e-10, 3.2032451691144104e-10]], "pointer": [[0.0, 0.0, 1.0138251127500553e-05, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 2.5895226940519933e-07, 0.0, 5.292515197652392e-05, 0.0, 0.0, 0.0, 0.9583179354667664, 0.0, 0.04043459892272949, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 3.530524281813996e-07, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 6.29728747298941e-05, 0.0, 0.0, 2.5546096367179416e-06, 0.0, 0.0, 0.0, 0.0011178277200087905, 0.0, 4.705127594206715e-07, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]], "target": [0.958380937576294]}, "loss": [0.0016705142334103584, 0.04250994324684143], "acc": [0.0, 1.0, 1.0, 1.0]}}


Trace of simplified code(s):

{"result": {"time": "2021-02-11 11:42:30.340147", "n_pass": [1, 1, 1], "n_token": 51, "loss": [0.0016705142334103584, 0.04250994324684143], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def _errors(", "self", ")", ":", "#NEWLINE#", "#INDENT#", "return", "ErrorDict", "(", "(", "(", "self", ",", "v", ")", "for", "(", "k", ",", "v", ")", "in", "six", ".", "iteritems", "(", "self", ".", "form", ".", "errors", ")", "if", "(", "k", "in", "[", "f", ".", "name", "for", "f", "in", "self", ".", "boundfields", "]", ")", ")", ")"]}}
{"position": {"error_location": 12, "repair_targets": [18, 35], "repair_candidates": [14, 20, 38, 42, 18, 35, 2, 12, 27, 44]}}
{"prediction": {"error_location": 0.9983307719230652, "repair_targets": [0.9583179354667664, 6.29728747298941e-05], "repair_candidates": [1.0138251127500553e-05, 2.5895226940519933e-07, 5.292515197652392e-05, 0.9583179354667664, 0.04043459892272949, 3.530524281813996e-07, 6.29728747298941e-05, 2.5546096367179416e-06, 0.0011178277200087905, 4.705127594206715e-07], "target_probs": 0.958380937576294}}


{"result": {"time": "2021-02-11 11:42:30.452235", "n_pass": [45, 3, 2], "n_token": 48, "loss": [0.006516516208648682, 0.14161668717861176], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def _errors(", "self", "#INDENT#", "return", "ErrorDict", "(", "(", "(", "self", ",", "v", ")", "for", "(", "k", ",", "v", ")", "in", "six", ".", "iteritems", "(", "self", ".", "form", ".", "errors", ")", "if", "(", "k", "in", "[", "f", ".", "name", "for", "f", "in", "self", ".", "boundfields", "]", ")", ")", ")"]}}
{"position": {"error_location": 9, "repair_targets": [15, 32], "repair_candidates": [11, 17, 35, 39, 15, 32, 2, 9, 24, 41]}}
{"prediction": {"error_location": 0.9935046434402466, "repair_targets": [0.8677991032600403, 0.00015477833221666515], "repair_candidates": [4.826971053262241e-05, 1.0353290917919367e-06, 0.0007810895331203938, 0.8677991032600403, 0.12777023017406464, 2.515923142709653e-06, 0.00015477833221666515, 3.94261132896645e-06, 0.003432983998209238, 6.061140084057115e-06], "target_probs": 0.867953896522522}}


{"result": {"time": "2021-02-11 11:42:30.675398", "n_pass": [51, 7, 3], "n_token": 45, "loss": [0.00842386856675148, 0.015291424468159676], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def _errors(", "self", "#INDENT#", "return", "ErrorDict", "(", "(", "(", "self", ",", "v", ")", "for", "(", "k", ",", "v", ".", "iteritems", "(", "self", ".", "form", ".", "errors", ")", "if", "(", "k", "in", "[", "f", ".", "name", "for", "f", "in", "self", ".", "boundfields", "]", ")", ")", ")"]}}
{"position": {"error_location": 9, "repair_targets": [15, 29], "repair_candidates": [11, 17, 32, 36, 15, 29, 2, 9, 21, 38]}}
{"prediction": {"error_location": 0.9916115403175354, "repair_targets": [0.9846431016921997, 0.00018180716142524034], "repair_candidates": [3.280792952864431e-05, 9.895728680930915e-07, 0.0026262153405696154, 0.9846431016921997, 0.010602161288261414, 2.014001893257955e-06, 0.00018180716142524034, 1.9548133423086256e-06, 0.001903650932945311, 5.2275913731136825e-06], "target_probs": 0.9848248958587646}}


{"result": {"time": "2021-02-11 11:42:30.730330", "n_pass": [52, 8, 4], "n_token": 42, "loss": [0.02636430785059929, 0.03084520809352398], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def _errors(", "self", "#INDENT#", "return", "ErrorDict", "(", "(", "(", "self", ",", "v", ")", "for", "(", "k", ",", "v", "self", ".", "form", ".", "errors", ")", "if", "(", "k", "in", "[", "f", ".", "name", "for", "f", "in", "self", ".", "boundfields", "]", ")", ")", ")"]}}
{"position": {"error_location": 9, "repair_targets": [15, 26], "repair_candidates": [11, 17, 29, 33, 15, 26, 2, 9, 18, 35]}}
{"prediction": {"error_location": 0.973980188369751, "repair_targets": [0.9692426323890686, 0.0003829920315183699], "repair_candidates": [0.01326680090278387, 0.0005792566807940602, 0.004180875141173601, 0.9692426323890686, 0.002807136857882142, 0.0030346571002155542, 0.0003829920315183699, 7.217282472993247e-06, 0.0022466927766799927, 0.004251654259860516], "target_probs": 0.9696256518363953}}


{"result": {"time": "2021-02-11 11:42:30.785885", "n_pass": [54, 9, 5], "n_token": 39, "loss": [0.06271020323038101, 0.07089226692914963], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def _errors(", "self", "#INDENT#", "return", "ErrorDict", "(", "(", "(", "self", ",", "v", ")", "for", "(", "k", ",", "v", "self", ".", "form", "if", "(", "k", "in", "[", "f", ".", "name", "for", "f", "in", "self", ".", "boundfields", "]", ")", ")", ")"]}}
{"position": {"error_location": 9, "repair_targets": [15, 23], "repair_candidates": [11, 17, 26, 30, 15, 23, 2, 9, 18, 32]}}
{"prediction": {"error_location": 0.9392156004905701, "repair_targets": [0.9308199286460876, 0.0007423244533129036], "repair_candidates": [0.02213967964053154, 0.0004568187578115612, 0.012062333524227142, 0.9308199286460876, 0.011430175974965096, 0.005088143981993198, 0.0007423244533129036, 1.6516178220626898e-05, 0.013158920221030712, 0.004085170570760965], "target_probs": 0.9315622448921204}}


{"result": {"time": "2021-02-11 11:42:30.841440", "n_pass": [59, 10, 6], "n_token": 35, "loss": [0.05745610222220421, 0.06851688772439957], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def _errors(", "self", "#INDENT#", "return", "ErrorDict", "(", "(", "(", "self", ",", "v", ")", "for", "(", "k", ",", "v", "self", ".", "form", "if", "(", "k", "in", "[", "f", ".", "name", "for", "f", "in", "self", ".", "boundfields"]}}
{"position": {"error_location": 9, "repair_targets": [15, 23], "repair_candidates": [11, 17, 26, 30, 15, 23, 2, 9, 18, 32]}}
{"prediction": {"error_location": 0.9441633224487305, "repair_targets": [0.9329904913902283, 0.0007872061687521636], "repair_candidates": [0.023153705522418022, 0.0005857634241692722, 0.011408018879592419, 0.9329904913902283, 0.009336241520941257, 0.005087548401206732, 0.0007872061687521636, 1.1224882655369584e-05, 0.012237920425832272, 0.004401837941259146], "target_probs": 0.9337776899337769}}


{"result": {"time": "2021-02-11 11:42:31.063728", "n_pass": [93, 14, 7], "n_token": 34, "loss": [0.2038920372724533, 0.3646005094051361], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["def _errors(", "self", "#INDENT#", "return", "ErrorDict", "(", "(", "(", "self", ",", "v", ")", "for", "(", "k", ",", "v", "self", ".", "form", "if", "(", "k", "in", "[", "f", ".", "name", "for", "f", "in", "self", ".", "boundfields"]}}
{"position": {"error_location": 8, "repair_targets": [14, 22], "repair_candidates": [10, 16, 25, 29, 14, 22, 1, 8, 17, 31]}}
{"prediction": {"error_location": 0.8155503273010254, "repair_targets": [0.6941332817077637, 0.00034074511495418847], "repair_candidates": [0.024040810763835907, 0.0020374285522848368, 0.1861235797405243, 0.6941332817077637, 0.05247391015291214, 0.004618562757968903, 0.00034074511495418847, 3.845282117254101e-05, 0.03141557797789574, 0.004777589812874794], "target_probs": 0.6944740414619446}}


{"result": {"time": "2021-02-11 11:42:31.174028", "n_pass": [96, 16, 8], "n_token": 33, "loss": [0.3239191174507141, 0.6757918000221252], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["def _errors(", "self", "return", "ErrorDict", "(", "(", "(", "self", ",", "v", ")", "for", "(", "k", ",", "v", "self", ".", "form", "if", "(", "k", "in", "[", "f", ".", "name", "for", "f", "in", "self", ".", "boundfields"]}}
{"position": {"error_location": 7, "repair_targets": [13, 21], "repair_candidates": [9, 15, 24, 28, 13, 21, 1, 7, 16, 30]}}
{"prediction": {"error_location": 0.7233087420463562, "repair_targets": [0.5082834362983704, 0.00047000235645100474], "repair_candidates": [0.021337192505598068, 0.0004694688250310719, 0.3452862501144409, 0.5082834362983704, 0.07919026911258698, 0.0016512195579707623, 0.00047000235645100474, 2.5813731554080732e-05, 0.04179205372929573, 0.0014942948473617435], "target_probs": 0.5087534189224243}}


{"result": {"time": "2021-02-11 11:42:31.617303", "n_pass": [108, 24, 9], "n_token": 31, "loss": [0.012249124236404896, 0.04735618084669113], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["def _errors(", "self", "return", "ErrorDict", "(", "(", "(", "self", ",", "v", ")", "for", "(", "k", ",", "v", "self", ".", "form", "k", "in", "[", "f", ".", "name", "for", "f", "in", "self", ".", "boundfields"]}}
{"position": {"error_location": 7, "repair_targets": [13, 19], "repair_candidates": [9, 15, 22, 26, 13, 19, 1, 7, 16, 28]}}
{"prediction": {"error_location": 0.9878256916999817, "repair_targets": [0.9404881596565247, 0.013259460218250751], "repair_candidates": [0.00034184742253273726, 3.942596777051222e-06, 0.034315310418605804, 0.9404881596565247, 0.005483679007738829, 1.1645278391370084e-05, 0.013259460218250751, 2.109068645950174e-06, 0.006086281035095453, 7.6235969572735485e-06], "target_probs": 0.9537476301193237}}


{"result": {"time": "2021-02-11 11:42:31.672533", "n_pass": [111, 25, 10], "n_token": 29, "loss": [0.017807018011808395, 0.04373564571142197], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["def _errors(", "self", "return", "ErrorDict", "(", "(", "(", "self", ",", "v", ")", "for", "(", "k", ",", "v", "self", ".", "form", "k", "in", "[", "f", "for", "f", "in", "self", ".", "boundfields"]}}
{"position": {"error_location": 7, "repair_targets": [13, 19], "repair_candidates": [9, 15, 22, 24, 13, 19, 1, 7, 16, 26]}}
{"prediction": {"error_location": 0.9823507070541382, "repair_targets": [0.9213470816612244, 0.03585990145802498], "repair_candidates": [0.00033887155586853623, 5.363976924854796e-06, 0.024199964478611946, 0.9213470816612244, 0.007008850574493408, 7.560322956123855e-06, 0.03585990145802498, 1.8829616692528361e-06, 0.011223120614886284, 7.358732545981184e-06], "target_probs": 0.9572069644927979}}


{"result": {"time": "2021-02-11 11:42:31.727915", "n_pass": [114, 26, 11], "n_token": 27, "loss": [0.13268440961837769, 0.04210831597447395], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["def _errors(", "self", "return", "ErrorDict", "(", "(", "(", "self", ",", "v", ")", "for", "(", "k", ",", "v", "self", ".", "form", "k", "in", "[", "f", "for", "f", "in", "self"]}}
{"position": {"error_location": 7, "repair_targets": [13, 19], "repair_candidates": [9, 15, 22, 24, 13, 19, 1, 7, 16, 26]}}
{"prediction": {"error_location": 0.8757414221763611, "repair_targets": [0.8944616317749023, 0.06430429220199585], "repair_candidates": [0.0009514789562672377, 7.996397471288219e-05, 0.010121277533471584, 0.8944616317749023, 0.003933929372578859, 8.390432412852533e-06, 0.06430429220199585, 5.38913582204259e-06, 0.026118211448192596, 1.555420385557227e-05], "target_probs": 0.9587659239768982}}


{"result": {"time": "2021-02-11 11:42:31.783299", "n_pass": [115, 27, 12], "n_token": 26, "loss": [1.0368828773498535, 0.0901341587305069], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["self", "return", "ErrorDict", "(", "(", "(", "self", ",", "v", ")", "for", "(", "k", ",", "v", "self", ".", "form", "k", "in", "[", "f", "for", "f", "in", "self"]}}
{"position": {"error_location": 6, "repair_targets": [12, 18], "repair_candidates": [8, 14, 21, 23, 12, 18, 0, 6, 15, 25]}}
{"prediction": {"error_location": 0.35455814003944397, "repair_targets": [0.6898036003112793, 0.22400496900081635], "repair_candidates": [0.0026928356382995844, 0.002678151708096266, 0.03203769400715828, 0.6898036003112793, 0.014689771458506584, 0.0003155259182676673, 0.22400496900081635, 6.579838100151392e-06, 0.033596571534872055, 0.00017430196749046445], "target_probs": 0.9138085842132568}}




Minimal simplified tokens:

['self', 'return', 'ErrorDict', '(', '(', '(', 'self', ',', 'v', ')', 'for', '(', 'k', ',', 'v', 'self', '.', 'form', 'k', 'in', '[', 'f', 'for', 'f', 'in', 'self']
