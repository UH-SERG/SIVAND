
Original sample:

{"has_bug": true, "bug_kind": 1, "bug_kind_name": "VARIABLE_MISUSE", "source_tokens": ["#NEWLINE#", "def add_blank(", "self", ",", "value", "=", "''", ",", "before", "=", "None", ",", "after", "=", "None", ")", ":", "#NEWLINE#", "#INDENT#", "'\\n        Add a blank card.\\n\\n        Parameters\\n        ----------\\n        value : str, optional\\n            Text to be added.\\n\\n        before : str or int, optional\\n            Same as in `Header.update`\\n\\n        after : str or int, optional\\n            Same as in `Header.update`\\n        '", "#NEWLINE#", "self", ".", "_add_commentary", "(", "''", ",", "value", ",", "before", "=", "after", ",", "after", "=", "after", ")"], "error_location": [31], "repair_targets": [8, 29], "repair_candidates": [12, 31, 33, 35, 4, 27, 2, 21, 8, 29], "provenances": [{"datasetProvenance": {"datasetName": "ETHPy150Open", "filepath": "spacetelescope/PyFITS/pyfits/header.py", "license": "bsd-3-clause", "note": "license: bigquery_api"}}], "txt_file": "eval__VARIABLE_MISUSE__SStuB.txt-00000-of-00300", "js_count": 1075, "results": {"model": "transformer", "prob": {"loc": [[7.919588824734092e-07, 3.072257075478757e-12, 3.886214267057042e-13, 6.106528179167584e-14, 9.08833772128581e-12, 2.690947237173752e-13, 1.263104069037721e-13, 8.12202478124753e-14, 9.663198193010647e-12, 1.2623485156487702e-12, 1.3985554793254085e-13, 8.484658559505115e-14, 7.277117797244159e-11, 2.5904575793461726e-12, 1.48617348896124e-12, 4.54297481523782e-14, 3.4106151605185764e-13, 3.38191849741723e-13, 1.356830229767847e-13, 3.6400111982741457e-13, 9.892457133401505e-14, 8.03294402025069e-14, 1.505858290709941e-13, 6.035911465871466e-15, 3.299298334535905e-11, 1.2364990975566315e-10, 2.1349447817259337e-12, 8.181062185030896e-06, 3.352146034710235e-13, 1.2388607934649132e-12, 6.5136021576428504e-12, 0.9999897480010986, 2.427098886453871e-12, 9.8132005993401e-12, 5.417710551014476e-12, 1.2248962093508453e-06, 4.843157992706626e-12]], "pointer": [[0.0, 0.0, 5.494835932040587e-06, 0.0, 2.4839216621330706e-06, 0.0, 0.0, 0.0, 0.001554566784761846, 0.0, 0.0, 0.0, 1.0116548310179496e-07, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 3.117452251899522e-08, 0.0, 0.0, 0.0, 0.0, 0.0, 1.142048122737549e-09, 0.0, 0.9984373450279236, 0.0, 2.364944906574351e-10, 0.0, 9.147331780923196e-09, 0.0, 5.517319934256193e-10, 0.0]], "target": [0.9999918937683105]}, "loss": [1.0251946150674485e-05, 8.106264431262389e-06], "acc": [0.0, 1.0, 1.0, 1.0]}}


Trace of simplified code(s):

{"result": {"time": "2021-02-11 11:16:05.953636", "n_pass": [1, 1, 1], "n_token": 37, "loss": [1.0251946150674485e-05, 8.106264431262389e-06], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def add_blank(", "self", ",", "value", "=", "''", ",", "before", "=", "None", ",", "after", "=", "None", ")", ":", "#NEWLINE#", "#INDENT#", "'\\n        Add a blank card.\\n\\n        Parameters\\n        ----------\\n        value : str, optional\\n            Text to be added.\\n\\n        before : str or int, optional\\n            Same as in `Header.update`\\n\\n        after : str or int, optional\\n            Same as in `Header.update`\\n        '", "#NEWLINE#", "self", ".", "_add_commentary", "(", "''", ",", "value", ",", "before", "=", "after", ",", "after", "=", "after", ")"]}}
{"position": {"error_location": 31, "repair_targets": [8, 29], "repair_candidates": [12, 31, 33, 35, 4, 27, 2, 21, 8, 29]}}
{"prediction": {"error_location": 0.9999897480010986, "repair_targets": [0.001554566784761846, 0.9984373450279236], "repair_candidates": [5.494835932040587e-06, 2.4839216621330706e-06, 0.001554566784761846, 1.0116548310179496e-07, 3.117452251899522e-08, 1.142048122737549e-09, 0.9984373450279236, 2.364944906574351e-10, 9.147331780923196e-09, 5.517319934256193e-10], "target_probs": 0.9999918937683105}}


{"result": {"time": "2021-02-11 11:16:06.012427", "n_pass": [25, 2, 2], "n_token": 32, "loss": [2.50339189733495e-06, 6.139297056506621e-06], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def add_blank(", "self", ",", "value", "=", "''", ",", "before", "=", "None", ",", "after", "=", "None", ")", ":", "#NEWLINE#", "#INDENT#", "'\\n        Add a blank card.\\n\\n        Parameters\\n        ----------\\n        value : str, optional\\n            Text to be added.\\n\\n        before : str or int, optional\\n            Same as in `Header.update`\\n\\n        after : str or int, optional\\n            Same as in `Header.update`\\n        '", "#NEWLINE#", "self", "value", ",", "before", "=", "after", ",", "after", "=", "after", ")"]}}
{"position": {"error_location": 26, "repair_targets": [8, 24], "repair_candidates": [12, 26, 28, 30, 4, 22, 2, 21, 8, 24]}}
{"prediction": {"error_location": 0.9999974966049194, "repair_targets": [0.004181019030511379, 0.9958128333091736], "repair_candidates": [1.4073857528273948e-06, 4.3919217205257155e-06, 0.004181019030511379, 5.2617984636071924e-08, 5.466835162337702e-08, 1.8324367090372107e-07, 0.9958128333091736, 5.969945371386842e-11, 2.011346422747806e-09, 1.288120443643237e-10], "target_probs": 0.9999938607215881}}


{"result": {"time": "2021-02-11 11:16:06.067915", "n_pass": [51, 3, 3], "n_token": 30, "loss": [2.145764938177308e-06, 3.993519385403488e-06], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["self", ",", "value", "=", "''", ",", "before", "=", "None", ",", "after", "=", "None", ")", ":", "#NEWLINE#", "#INDENT#", "'\\n        Add a blank card.\\n\\n        Parameters\\n        ----------\\n        value : str, optional\\n            Text to be added.\\n\\n        before : str or int, optional\\n            Same as in `Header.update`\\n\\n        after : str or int, optional\\n            Same as in `Header.update`\\n        '", "#NEWLINE#", "self", "value", ",", "before", "=", "after", ",", "after", "=", "after", ")"]}}
{"position": {"error_location": 24, "repair_targets": [6, 22], "repair_candidates": [10, 24, 26, 28, 2, 20, 0, 19, 6, 22]}}
{"prediction": {"error_location": 0.9999978542327881, "repair_targets": [0.012830532155930996, 0.9871654510498047], "repair_candidates": [3.232093774840905e-07, 3.5684611248143483e-06, 0.012830532155930996, 8.813169927179842e-08, 5.6400949688395485e-08, 1.0941734274183545e-07, 0.9871654510498047, 4.1996225941254295e-11, 3.660665937044172e-10, 4.8269548080792646e-11], "target_probs": 0.9999960064888}}


{"result": {"time": "2021-02-11 11:16:06.122209", "n_pass": [53, 4, 4], "n_token": 28, "loss": [6.496695277746767e-05, 9.655998837843072e-06], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["self", ",", "value", "=", "before", "=", "None", ",", "after", "=", "None", ")", ":", "#NEWLINE#", "#INDENT#", "'\\n        Add a blank card.\\n\\n        Parameters\\n        ----------\\n        value : str, optional\\n            Text to be added.\\n\\n        before : str or int, optional\\n            Same as in `Header.update`\\n\\n        after : str or int, optional\\n            Same as in `Header.update`\\n        '", "#NEWLINE#", "self", "value", ",", "before", "=", "after", ",", "after", "=", "after", ")"]}}
{"position": {"error_location": 22, "repair_targets": [4, 20], "repair_candidates": [8, 22, 24, 26, 2, 18, 0, 17, 4, 20]}}
{"prediction": {"error_location": 0.9999349117279053, "repair_targets": [0.032765813171863556, 0.9672245383262634], "repair_candidates": [1.02106457688933e-06, 7.949666724016424e-06, 0.032765813171863556, 1.3077232097202796e-07, 1.3925472330811317e-07, 4.815648821931973e-07, 0.9672245383262634, 9.795994571071276e-11, 1.964473250737342e-09, 2.0027748903750364e-10], "target_probs": 0.9999903440475464}}


{"result": {"time": "2021-02-11 11:16:06.176533", "n_pass": [55, 5, 5], "n_token": 26, "loss": [4.5060096454108134e-05, 1.0967314665322192e-05], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["self", ",", "value", "=", "before", "=", "after", "=", "None", ")", ":", "#NEWLINE#", "#INDENT#", "'\\n        Add a blank card.\\n\\n        Parameters\\n        ----------\\n        value : str, optional\\n            Text to be added.\\n\\n        before : str or int, optional\\n            Same as in `Header.update`\\n\\n        after : str or int, optional\\n            Same as in `Header.update`\\n        '", "#NEWLINE#", "self", "value", ",", "before", "=", "after", ",", "after", "=", "after", ")"]}}
{"position": {"error_location": 20, "repair_targets": [4, 18], "repair_candidates": [6, 20, 22, 24, 2, 16, 0, 15, 4, 18]}}
{"prediction": {"error_location": 0.9999550580978394, "repair_targets": [0.0418633334338665, 0.9581257104873657], "repair_candidates": [1.379092964270967e-06, 8.321929271914996e-06, 0.0418633334338665, 5.285221860162892e-08, 1.3455174041610007e-07, 1.0150509979212075e-06, 0.9581257104873657, 1.1834327962034763e-10, 1.4050830499101608e-09, 1.0100489195030704e-10], "target_probs": 0.9999890327453613}}


{"result": {"time": "2021-02-11 11:16:06.230955", "n_pass": [57, 6, 6], "n_token": 24, "loss": [6.985420623095706e-05, 2.3663324100198224e-05], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["self", ",", "value", "=", "before", "=", "after", "=", ":", "#NEWLINE#", "#INDENT#", "'\\n        Add a blank card.\\n\\n        Parameters\\n        ----------\\n        value : str, optional\\n            Text to be added.\\n\\n        before : str or int, optional\\n            Same as in `Header.update`\\n\\n        after : str or int, optional\\n            Same as in `Header.update`\\n        '", "#NEWLINE#", "self", "value", ",", "before", "=", "after", ",", "after", "=", "after", ")"]}}
{"position": {"error_location": 18, "repair_targets": [4, 16], "repair_candidates": [6, 18, 20, 22, 2, 14, 0, 13, 4, 16]}}
{"prediction": {"error_location": 0.9999302625656128, "repair_targets": [0.040825922042131424, 0.9591504335403442], "repair_candidates": [2.1549024040723452e-06, 1.9029801478609443e-05, 0.040825922042131424, 3.303224005435368e-08, 9.400291105521319e-07, 1.5236877288771211e-06, 0.9591504335403442, 2.7931060242458727e-10, 2.1978701081337704e-09, 1.3649611996235933e-10], "target_probs": 0.9999763369560242}}


{"result": {"time": "2021-02-11 11:16:06.284990", "n_pass": [58, 7, 7], "n_token": 22, "loss": [7.652943895664066e-05, 0.00010264446609653533], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["self", ",", "value", "=", "before", "=", "after", "=", "#INDENT#", "'\\n        Add a blank card.\\n\\n        Parameters\\n        ----------\\n        value : str, optional\\n            Text to be added.\\n\\n        before : str or int, optional\\n            Same as in `Header.update`\\n\\n        after : str or int, optional\\n            Same as in `Header.update`\\n        '", "#NEWLINE#", "self", "value", ",", "before", "=", "after", ",", "after", "=", "after", ")"]}}
{"position": {"error_location": 16, "repair_targets": [4, 14], "repair_candidates": [6, 16, 18, 20, 2, 12, 0, 11, 4, 14]}}
{"prediction": {"error_location": 0.9999234676361084, "repair_targets": [0.09519968181848526, 0.9046976566314697], "repair_candidates": [2.1190019197092624e-06, 7.351456588367e-05, 0.09519968181848526, 9.619150631579032e-08, 9.37621825869428e-06, 1.757558129611425e-05, 0.9046976566314697, 4.5457368424983713e-10, 4.422315402763388e-09, 2.4045257451810187e-10], "target_probs": 0.9998973608016968}}


{"result": {"time": "2021-02-11 11:16:06.341712", "n_pass": [59, 8, 8], "n_token": 20, "loss": [0.00013624693383462727, 0.005161230452358723], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["self", ",", "value", "=", "before", "=", "after", "=", "#NEWLINE#", "self", "value", ",", "before", "=", "after", ",", "after", "=", "after", ")"]}}
{"position": {"error_location": 14, "repair_targets": [4, 12], "repair_candidates": [6, 14, 16, 18, 2, 10, 0, 9, 4, 12]}}
{"prediction": {"error_location": 0.9998636245727539, "repair_targets": [0.04881802201271057, 0.9460340738296509], "repair_candidates": [6.1578825807373505e-06, 0.0019124147947877645, 0.04881802201271057, 2.2829807733160123e-07, 7.997317152330652e-05, 0.003149100812152028, 0.9460340738296509, 7.259357559519231e-10, 2.6940629727079113e-09, 4.921858476336638e-10], "target_probs": 0.9948520660400391}}


{"result": {"time": "2021-02-11 11:16:06.396362", "n_pass": [84, 9, 9], "n_token": 19, "loss": [4.303362584323622e-05, 0.0014601275324821472], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["self", ",", "value", "=", "before", "=", "after", "=", "self", "value", ",", "before", "=", "after", ",", "after", "=", "after", ")"]}}
{"position": {"error_location": 13, "repair_targets": [4, 11], "repair_candidates": [6, 13, 15, 17, 2, 9, 0, 8, 4, 11]}}
{"prediction": {"error_location": 0.9999569654464722, "repair_targets": [0.09566019475460052, 0.9028807282447815], "repair_candidates": [1.4945371731300838e-06, 0.00010074359306599945, 0.09566019475460052, 1.0338740139559377e-06, 9.314594353782013e-05, 0.001262686331756413, 0.9028807282447815, 1.4486937205404615e-09, 3.102183843139983e-09, 9.131604916667868e-10], "target_probs": 0.9985409379005432}}


{"result": {"time": "2021-02-11 11:16:06.450182", "n_pass": [87, 10, 10], "n_token": 18, "loss": [0.0012355559738352895, 0.05823209136724472], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["self", ",", "value", "=", "before", "=", "after", "=", "self", "value", "before", "=", "after", ",", "after", "=", "after", ")"]}}
{"position": {"error_location": 12, "repair_targets": [4, 10], "repair_candidates": [6, 12, 14, 16, 2, 9, 0, 8, 4, 10]}}
{"prediction": {"error_location": 0.998765230178833, "repair_targets": [0.019621551036834717, 0.9238094091415405], "repair_candidates": [7.131452548492234e-07, 0.010652285069227219, 0.019621551036834717, 1.7834471464084345e-06, 1.0446753549331333e-05, 0.045903753489255905, 0.9238094091415405, 6.6327614511862976e-09, 1.991671938483819e-09, 4.223248695200965e-10], "target_probs": 0.9434309601783752}}


{"result": {"time": "2021-02-11 11:16:06.504511", "n_pass": [93, 11, 11], "n_token": 17, "loss": [0.009364607743918896, 0.020426534116268158], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["self", "value", "=", "before", "=", "after", "=", "self", "value", "before", "=", "after", ",", "after", "=", "after", ")"]}}
{"position": {"error_location": 11, "repair_targets": [3, 9], "repair_candidates": [5, 11, 13, 15, 1, 8, 0, 7, 3, 9]}}
{"prediction": {"error_location": 0.9906789660453796, "repair_targets": [0.0948224812746048, 0.8849582076072693], "repair_candidates": [1.0751060699476511e-06, 3.217315679648891e-05, 0.0948224812746048, 1.1594957868510392e-05, 3.8487041820189916e-06, 0.02017074264585972, 0.8849582076072693, 3.516738900088967e-08, 1.3857744951550899e-09, 6.593867118986907e-10], "target_probs": 0.9797806739807129}}


{"result": {"time": "2021-02-11 11:16:06.558548", "n_pass": [95, 12, 12], "n_token": 16, "loss": [0.0025148927234113216, 0.016200106590986252], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["self", "value", "before", "=", "after", "=", "self", "value", "before", "=", "after", ",", "after", "=", "after", ")"]}}
{"position": {"error_location": 10, "repair_targets": [2, 8], "repair_candidates": [4, 10, 12, 14, 1, 7, 0, 6, 2, 8]}}
{"prediction": {"error_location": 0.997488260269165, "repair_targets": [0.02652917243540287, 0.9574012160301208], "repair_candidates": [1.151513856711972e-06, 2.7301963200443424e-05, 0.02652917243540287, 0.0003304330166429281, 5.975978183414554e-06, 0.015704747289419174, 0.9574012160301208, 3.2940320693342073e-08, 7.210810837321446e-10, 1.1066456639952094e-09], "target_probs": 0.9839304089546204}}


{"result": {"time": "2021-02-11 11:16:06.612788", "n_pass": [97, 13, 13], "n_token": 15, "loss": [0.054996270686388016, 0.1261068731546402], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["self", "value", "before", "after", "=", "self", "value", "before", "=", "after", ",", "after", "=", "after", ")"]}}
{"position": {"error_location": 9, "repair_targets": [2, 7], "repair_candidates": [3, 9, 11, 13, 1, 6, 0, 5, 2, 7]}}
{"prediction": {"error_location": 0.9464886784553528, "repair_targets": [0.14487016201019287, 0.7366504669189453], "repair_candidates": [0.0004098609206266701, 0.0016854505520313978, 0.14487016201019287, 0.015175596810877323, 0.000475824810564518, 0.10072974115610123, 0.7366504669189453, 1.997393837882555e-06, 7.938826342979155e-07, 8.103558712946324e-08], "target_probs": 0.8815206289291382}}


{"result": {"time": "2021-02-11 11:16:06.830837", "n_pass": [122, 17, 14], "n_token": 14, "loss": [0.17471569776535034, 0.27931830286979675], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["self", "value", "before", "after", "=", "self", "value", "before", "=", "after", ",", "after", "after", ")"]}}
{"position": {"error_location": 9, "repair_targets": [2, 7], "repair_candidates": [3, 9, 11, 12, 1, 6, 0, 5, 2, 7]}}
{"prediction": {"error_location": 0.8396956920623779, "repair_targets": [0.5070858597755432, 0.24921326339244843], "repair_candidates": [0.004213510546833277, 0.007706039119511843, 0.5070858597755432, 0.041430018842220306, 0.06035301461815834, 0.12716718018054962, 0.24921326339244843, 0.00013328473141882569, 0.0014920186949893832, 0.0012057560961693525], "target_probs": 0.7562991380691528}}


{"result": {"time": "2021-02-11 11:16:06.885164", "n_pass": [124, 18, 15], "n_token": 13, "loss": [0.16478098928928375, 0.5027587413787842], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["self", "value", "before", "after", "=", "self", "value", "before", "=", "after", ",", "after", "after"]}}
{"position": {"error_location": 9, "repair_targets": [2, 7], "repair_candidates": [3, 9, 11, 12, 1, 6, 0, 5, 2, 7]}}
{"prediction": {"error_location": 0.8480794429779053, "repair_targets": [0.3012700378894806, 0.30358970165252686], "repair_candidates": [0.0033341008238494396, 0.00499865273013711, 0.3012700378894806, 0.020644092932343483, 0.216950923204422, 0.1480744332075119, 0.30358970165252686, 0.00018575073045212775, 0.0006567879463545978, 0.0002954796073026955], "target_probs": 0.6048597097396851}}




Minimal simplified tokens:

['self', 'value', 'before', 'after', '=', 'self', 'value', 'before', '=', 'after', ',', 'after', 'after']
