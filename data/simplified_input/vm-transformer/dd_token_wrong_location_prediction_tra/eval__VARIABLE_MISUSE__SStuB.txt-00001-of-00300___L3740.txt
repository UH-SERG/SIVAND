
Original sample:

{"has_bug": true, "bug_kind": 1, "bug_kind_name": "VARIABLE_MISUSE", "source_tokens": ["#NEWLINE#", "def enqueue_command(", "self", ",", "command_name", ",", "args", ")", ":", "#NEWLINE#", "#INDENT#", "'Enqueue a new command into this pipeline.'", "#NEWLINE#", "assert_open", "(", "self", ")", "#NEWLINE#", "promise", "=", "Promise", "(", ")", "#NEWLINE#", "self", ".", "commands", ".", "append", "(", "(", "command_name", ",", "command_name", ",", "promise", ")", ")", "#NEWLINE#", "return", "promise"], "error_location": [33], "repair_targets": [6], "repair_candidates": [6, 2, 15, 24, 4, 31, 33, 18, 35, 40], "provenances": [{"datasetProvenance": {"datasetName": "ETHPy150Open", "filepath": "getsentry/rb/rb/clients.py", "license": "apache-2.0", "note": "license: bigquery_api"}}], "txt_file": "eval__VARIABLE_MISUSE__SStuB.txt-00001-of-00300", "js_count": 3740, "results": {"model": "transformer", "prob": {"loc": [[0.010091211646795273, 9.36389994876663e-07, 1.5040691891954339e-07, 2.752210903622654e-08, 7.355846491918783e-07, 3.318369579119462e-08, 1.3875745935365558e-05, 2.1930741667119946e-08, 7.095159304526533e-08, 9.21248144436504e-08, 3.985120500260564e-08, 3.0447657195509237e-07, 3.3932284537741e-08, 2.8474289592850255e-08, 2.4539444254401133e-08, 0.5806437730789185, 1.1762768536982549e-07, 3.0292301289591705e-07, 1.8007754931659292e-07, 1.8088798015014618e-08, 0.0001827453961595893, 2.955405943794176e-05, 2.0472953110584058e-06, 5.507546347871539e-07, 8.942529348132666e-07, 9.78826086850404e-09, 4.745913440018512e-09, 1.5719509249834118e-08, 2.2529869525556023e-08, 2.7221383902542584e-07, 6.699996220049798e-07, 0.03680439293384552, 4.919373850498232e-07, 0.35847043991088867, 8.386432455154136e-07, 0.010427425615489483, 8.144253911268606e-07, 1.6759081233885809e-07, 1.1031745117406899e-07, 6.490140691539636e-08, 0.003326521022245288]], "pointer": [[0.0, 0.0, 0.00015663998783566058, 0.0, 0.01983576826751232, 0.0, 0.9775265455245972, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0001781241298886016, 0.0, 0.0, 0.0013170832535251975, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0003491558018140495, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.00020024781406391412, 0.0, 0.00021425753948278725, 0.0, 0.00012520926247816533, 0.0, 0.0, 0.0, 0.0, 9.70296750892885e-05]], "target": [0.9775265455245972]}, "loss": [1.0259089469909668, 0.02272983081638813], "acc": [0.0, 0.0, 1.0, 0.0]}, "wrong_error_location": [15]}


Trace of simplified code(s):

{"result": {"time": "2021-02-21 05:38:14.422817", "n_pass": [1, 1, 1], "n_token": 41, "loss": [0.5436177849769592, 0.02272983081638813], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def enqueue_command(", "self", ",", "command_name", ",", "args", ")", ":", "#NEWLINE#", "#INDENT#", "'Enqueue a new command into this pipeline.'", "#NEWLINE#", "assert_open", "(", "self", ")", "#NEWLINE#", "promise", "=", "Promise", "(", ")", "#NEWLINE#", "self", ".", "commands", ".", "append", "(", "(", "command_name", ",", "command_name", ",", "promise", ")", ")", "#NEWLINE#", "return", "promise"]}}
{"position": {"error_location": 15, "repair_targets": [6], "repair_candidates": [6, 2, 15, 24, 4, 31, 33, 18, 35, 40]}}
{"prediction": {"error_location": 0.5806437730789185, "repair_targets": [0.9775265455245972], "repair_candidates": [0.00015663998783566058, 0.01983576826751232, 0.9775265455245972, 0.0001781241298886016, 0.0013170832535251975, 0.0003491558018140495, 0.00020024781406391412, 0.00021425753948278725, 0.00012520926247816533, 9.70296750892885e-05], "target_probs": 0.9775265455245972}}


{"result": {"time": "2021-02-21 05:38:14.533336", "n_pass": [25, 3, 2], "n_token": 36, "loss": [0.3847358226776123, 0.03033204935491085], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def enqueue_command(", "self", ",", "command_name", ",", "args", ")", ":", "#NEWLINE#", "#INDENT#", "'Enqueue a new command into this pipeline.'", "#NEWLINE#", "assert_open", "(", "self", ")", "#NEWLINE#", "promise", "=", "Promise", "(", ")", "#NEWLINE#", "self", "(", "command_name", ",", "command_name", ",", "promise", ")", ")", "#NEWLINE#", "return", "promise"]}}
{"position": {"error_location": 15, "repair_targets": [6], "repair_candidates": [6, 2, 15, 24, 4, 26, 28, 18, 30, 35]}}
{"prediction": {"error_location": 0.6806305050849915, "repair_targets": [0.9701233506202698], "repair_candidates": [0.001485914341174066, 0.024958297610282898, 0.9701233506202698, 0.0019866388756781816, 0.0004994938499294221, 2.974393282784149e-05, 0.00036731146974489093, 0.0003508749941829592, 9.921704986481927e-06, 0.00018849348998628557], "target_probs": 0.9701233506202698}}


{"result": {"time": "2021-02-21 05:38:14.702760", "n_pass": [54, 6, 3], "n_token": 34, "loss": [0.24119922518730164, 0.08014331012964249], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def enqueue_command(", "self", ",", "command_name", ",", "args", ")", "#INDENT#", "'Enqueue a new command into this pipeline.'", "#NEWLINE#", "assert_open", "(", "self", ")", "#NEWLINE#", "promise", "=", "Promise", "(", ")", "#NEWLINE#", "self", "(", "command_name", ",", "command_name", ",", "promise", ")", ")", "#NEWLINE#", "return", "promise"]}}
{"position": {"error_location": 13, "repair_targets": [6], "repair_candidates": [6, 2, 13, 22, 4, 24, 26, 16, 28, 33]}}
{"prediction": {"error_location": 0.7856851816177368, "repair_targets": [0.9229840636253357], "repair_candidates": [0.0014040959067642689, 0.06912564486265182, 0.9229840636253357, 0.0013400660827755928, 0.0022461763583123684, 6.436397234210745e-05, 0.001329197664745152, 0.0005381928640417755, 3.4865966881625354e-05, 0.0009335071663372219], "target_probs": 0.9229840636253357}}


{"result": {"time": "2021-02-21 05:38:14.980154", "n_pass": [94, 11, 4], "n_token": 33, "loss": [0.6378273367881775, 0.08044642210006714], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def enqueue_command(", "self", ",", "command_name", ",", "args", ")", "'Enqueue a new command into this pipeline.'", "#NEWLINE#", "assert_open", "(", "self", ")", "#NEWLINE#", "promise", "=", "Promise", "(", ")", "#NEWLINE#", "self", "(", "command_name", ",", "command_name", ",", "promise", ")", ")", "#NEWLINE#", "return", "promise"]}}
{"position": {"error_location": 12, "repair_targets": [6], "repair_candidates": [6, 2, 12, 21, 4, 23, 25, 15, 27, 32]}}
{"prediction": {"error_location": 0.5284392833709717, "repair_targets": [0.9227043390274048], "repair_candidates": [0.0019210141617804766, 0.0665978342294693, 0.9227043390274048, 0.0017578122206032276, 0.004341057501733303, 5.0556453061290085e-05, 0.0008971940842457116, 0.0004007081442978233, 5.0830713007599115e-05, 0.0012786098523065448], "target_probs": 0.9227043390274048}}


{"result": {"time": "2021-02-21 05:38:15.314075", "n_pass": [102, 17, 5], "n_token": 32, "loss": [0.7452424764633179, 0.10910090059041977], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def enqueue_command(", "self", ",", "command_name", ",", "args", ")", "'Enqueue a new command into this pipeline.'", "#NEWLINE#", "assert_open", "(", "self", ")", "#NEWLINE#", "promise", "Promise", "(", ")", "#NEWLINE#", "self", "(", "command_name", ",", "command_name", ",", "promise", ")", ")", "#NEWLINE#", "return", "promise"]}}
{"position": {"error_location": 12, "repair_targets": [6], "repair_candidates": [6, 2, 12, 20, 4, 22, 24, 15, 26, 31]}}
{"prediction": {"error_location": 0.47461920976638794, "repair_targets": [0.8966399431228638], "repair_candidates": [0.004459377843886614, 0.0776926800608635, 0.8966399431228638, 0.0030707118567079306, 0.005572202615439892, 0.00016781178419478238, 0.0010714438976719975, 0.0008066833834163845, 0.004128801170736551, 0.006390341091901064], "target_probs": 0.8966399431228638}}


{"result": {"time": "2021-02-21 05:38:16.671183", "n_pass": [109, 20, 6], "n_token": 30, "loss": [0.7521474361419678, 0.0686868205666542], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def enqueue_command(", "self", ",", "command_name", ",", "args", ")", "'Enqueue a new command into this pipeline.'", "#NEWLINE#", "assert_open", "(", "self", ")", "#NEWLINE#", "promise", "Promise", "(", ")", "#NEWLINE#", "self", "(", "command_name", ",", "command_name", ",", "promise", ")", "return", "promise"]}}
{"position": {"error_location": 12, "repair_targets": [6], "repair_candidates": [6, 2, 12, 20, 4, 22, 24, 15, 26, 29]}}
{"prediction": {"error_location": 0.4713532626628876, "repair_targets": [0.9336190223693848], "repair_candidates": [0.004244768526405096, 0.05222412571310997, 0.9336190223693848, 0.002635396784171462, 0.002624348970130086, 7.631997141288593e-05, 0.0018386115552857518, 0.0014844548422843218, 0.0011697742156684399, 8.318195614265278e-05], "target_probs": 0.9336190223693848}}


{"result": {"time": "2021-02-21 05:38:16.842053", "n_pass": [114, 23, 7], "n_token": 29, "loss": [0.4095153510570526, 0.023585736751556396], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def enqueue_command(", "self", "command_name", ",", "args", ")", "'Enqueue a new command into this pipeline.'", "#NEWLINE#", "assert_open", "(", "self", ")", "#NEWLINE#", "promise", "Promise", "(", ")", "#NEWLINE#", "self", "(", "command_name", ",", "command_name", ",", "promise", ")", "return", "promise"]}}
{"position": {"error_location": 11, "repair_targets": [5], "repair_candidates": [5, 2, 11, 19, 3, 21, 23, 14, 25, 28]}}
{"prediction": {"error_location": 0.6639719009399414, "repair_targets": [0.9766902327537537], "repair_candidates": [0.0035810349509119987, 0.0157542172819376, 0.9766902327537537, 0.0012005104217678308, 0.0013775371480733156, 4.01421966671478e-05, 0.0006509643862955272, 0.00040922433254309, 0.0002584968169685453, 3.7596557376673445e-05], "target_probs": 0.9766902327537537}}


{"result": {"time": "2021-02-21 05:38:16.899061", "n_pass": [116, 24, 8], "n_token": 28, "loss": [0.6035341024398804, 0.03471798449754715], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def enqueue_command(", "self", "command_name", "args", ")", "'Enqueue a new command into this pipeline.'", "#NEWLINE#", "assert_open", "(", "self", ")", "#NEWLINE#", "promise", "Promise", "(", ")", "#NEWLINE#", "self", "(", "command_name", ",", "command_name", ",", "promise", ")", "return", "promise"]}}
{"position": {"error_location": 10, "repair_targets": [4], "repair_candidates": [4, 2, 10, 18, 3, 20, 22, 13, 24, 27]}}
{"prediction": {"error_location": 0.546875536441803, "repair_targets": [0.9658777713775635], "repair_candidates": [0.010927755385637283, 0.01862620748579502, 0.9658777713775635, 0.0024065065663307905, 0.0011305216467007995, 7.15457063051872e-05, 0.0003902543103322387, 0.00037564747617579997, 0.000165472665685229, 2.8319889679551125e-05], "target_probs": 0.9658777713775635}}


{"result": {"time": "2021-02-21 05:38:16.960250", "n_pass": [118, 25, 9], "n_token": 27, "loss": [0.45662766695022583, 0.14595843851566315], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def enqueue_command(", "self", "command_name", "args", "'Enqueue a new command into this pipeline.'", "#NEWLINE#", "assert_open", "(", "self", ")", "#NEWLINE#", "promise", "Promise", "(", ")", "#NEWLINE#", "self", "(", "command_name", ",", "command_name", ",", "promise", ")", "return", "promise"]}}
{"position": {"error_location": 9, "repair_targets": [4], "repair_candidates": [4, 2, 9, 17, 3, 19, 21, 12, 23, 26]}}
{"prediction": {"error_location": 0.6334161758422852, "repair_targets": [0.8641936182975769], "repair_candidates": [0.04142599180340767, 0.0503220371901989, 0.8641936182975769, 0.024987149983644485, 0.0045034512877464294, 0.0007681134156882763, 0.0013993900502100587, 0.011262891814112663, 0.0009322063997387886, 0.00020526970911305398], "target_probs": 0.8641936182975769}}


{"result": {"time": "2021-02-21 05:38:17.073841", "n_pass": [120, 27, 10], "n_token": 26, "loss": [0.6387664079666138, 0.11212925612926483], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def enqueue_command(", "self", "command_name", "args", "'Enqueue a new command into this pipeline.'", "assert_open", "(", "self", ")", "#NEWLINE#", "promise", "Promise", "(", ")", "#NEWLINE#", "self", "(", "command_name", ",", "command_name", ",", "promise", ")", "return", "promise"]}}
{"position": {"error_location": 8, "repair_targets": [4], "repair_candidates": [4, 2, 8, 16, 3, 18, 20, 11, 22, 25]}}
{"prediction": {"error_location": 0.5279432535171509, "repair_targets": [0.8939287066459656], "repair_candidates": [0.036422207951545715, 0.03224002942442894, 0.8939287066459656, 0.016524331644177437, 0.0033423874992877245, 0.000606561719905585, 0.0003401620779186487, 0.015288795344531536, 0.0011741927592083812, 0.00013258916442282498], "target_probs": 0.8939287066459656}}


{"result": {"time": "2021-02-21 05:38:17.242038", "n_pass": [124, 30, 11], "n_token": 25, "loss": [0.8647401332855225, 0.1813543140888214], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def enqueue_command(", "self", "command_name", "args", "'Enqueue a new command into this pipeline.'", "assert_open", "(", "self", "#NEWLINE#", "promise", "Promise", "(", ")", "#NEWLINE#", "self", "(", "command_name", ",", "command_name", ",", "promise", ")", "return", "promise"]}}
{"position": {"error_location": 8, "repair_targets": [4], "repair_candidates": [4, 2, 8, 15, 3, 17, 19, 10, 21, 24]}}
{"prediction": {"error_location": 0.421161025762558, "repair_targets": [0.8341397643089294], "repair_candidates": [0.020800620317459106, 0.024022521451115608, 0.8341397643089294, 0.006531596649438143, 0.0036058963742107153, 0.0004981433739885688, 0.0012170046102255583, 0.10772258788347244, 0.0014011324383318424, 6.0870483139296994e-05], "target_probs": 0.8341397643089294}}


{"result": {"time": "2021-02-21 05:38:17.918183", "n_pass": [161, 42, 12], "n_token": 24, "loss": [0.05922836437821388, 0.23692084848880768], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def enqueue_command(", "self", "command_name", "args", "'Enqueue a new command into this pipeline.'", "assert_open", "(", "self", "#NEWLINE#", "promise", "Promise", "(", ")", "#NEWLINE#", "self", "command_name", ",", "command_name", ",", "promise", ")", "return", "promise"]}}
{"position": {"error_location": 8, "repair_targets": [4], "repair_candidates": [4, 2, 8, 15, 3, 16, 18, 10, 20, 23]}}
{"prediction": {"error_location": 0.9424915909767151, "repair_targets": [0.789053738117218], "repair_candidates": [0.0005500070401467383, 0.17437538504600525, 0.789053738117218, 1.5855897800065577e-05, 0.0005442861001938581, 0.0002062412240775302, 0.02068905159831047, 0.012092772871255875, 0.002463991055265069, 8.643077308079228e-06], "target_probs": 0.789053738117218}}


{"result": {"time": "2021-02-21 05:38:17.977141", "n_pass": [163, 43, 13], "n_token": 23, "loss": [0.06456048041582108, 0.1019337847828865], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def enqueue_command(", "self", "command_name", "args", "'Enqueue a new command into this pipeline.'", "assert_open", "(", "self", "#NEWLINE#", "promise", "Promise", "(", ")", "#NEWLINE#", "self", "command_name", "command_name", ",", "promise", ")", "return", "promise"]}}
{"position": {"error_location": 8, "repair_targets": [4], "repair_candidates": [4, 2, 8, 15, 3, 16, 17, 10, 19, 22]}}
{"prediction": {"error_location": 0.9374794960021973, "repair_targets": [0.9030893445014954], "repair_candidates": [0.0005303545040078461, 0.0826006680727005, 0.9030893445014954, 2.911688898166176e-05, 0.00022452897974289954, 0.0002906296867877245, 0.007320811972022057, 0.00524754635989666, 0.0006553189596161246, 1.1576221368159167e-05], "target_probs": 0.9030893445014954}}


{"result": {"time": "2021-02-21 05:38:18.033470", "n_pass": [165, 44, 14], "n_token": 22, "loss": [0.04997129738330841, 0.05144578218460083], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def enqueue_command(", "self", "command_name", "args", "'Enqueue a new command into this pipeline.'", "assert_open", "(", "self", "#NEWLINE#", "promise", "Promise", "(", ")", "#NEWLINE#", "self", "command_name", "command_name", "promise", ")", "return", "promise"]}}
{"position": {"error_location": 8, "repair_targets": [4], "repair_candidates": [4, 2, 8, 15, 3, 16, 17, 10, 18, 21]}}
{"prediction": {"error_location": 0.9512568116188049, "repair_targets": [0.9498551487922668], "repair_candidates": [0.0004956904449500144, 0.047702424228191376, 0.9498551487922668, 4.2185351048829034e-05, 0.00011826550326077268, 0.00019879013416357338, 0.001039232243783772, 0.0005103087169118226, 3.3269931009272113e-05, 4.558417003863724e-06], "target_probs": 0.9498551487922668}}


{"result": {"time": "2021-02-21 05:38:18.089285", "n_pass": [167, 45, 15], "n_token": 21, "loss": [0.6023051738739014, 0.009243881329894066], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def enqueue_command(", "self", "command_name", "args", "'Enqueue a new command into this pipeline.'", "assert_open", "(", "self", "#NEWLINE#", "promise", "Promise", "(", ")", "#NEWLINE#", "self", "command_name", "command_name", "promise", "return", "promise"]}}
{"position": {"error_location": 8, "repair_targets": [4], "repair_candidates": [4, 2, 8, 15, 3, 16, 17, 10, 18, 20]}}
{"prediction": {"error_location": 0.5475479960441589, "repair_targets": [0.9907987117767334], "repair_candidates": [0.00025762891164049506, 0.008085244335234165, 0.9907987117767334, 9.529988892609254e-05, 5.9961839724564925e-06, 1.7106545783462934e-05, 0.00030110019724816084, 0.00043203477980569005, 1.6154770037246635e-06, 5.288733063935069e-06], "target_probs": 0.9907987117767334}}


{"result": {"time": "2021-02-21 05:38:18.145438", "n_pass": [168, 46, 16], "n_token": 20, "loss": [0.46609818935394287, 0.21987703442573547], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def enqueue_command(", "self", "command_name", "args", "'Enqueue a new command into this pipeline.'", "assert_open", "(", "self", "#NEWLINE#", "promise", "Promise", "(", ")", "#NEWLINE#", "self", "command_name", "command_name", "promise", "promise"]}}
{"position": {"error_location": 8, "repair_targets": [4], "repair_candidates": [4, 2, 8, 15, 3, 16, 17, 10, 18, 19]}}
{"prediction": {"error_location": 0.6274456977844238, "repair_targets": [0.8026174902915955], "repair_candidates": [0.0008330211858265102, 0.14054889976978302, 0.8026174902915955, 8.746636740397662e-05, 0.02806260623037815, 0.0002492961357347667, 0.02114858292043209, 0.0004636606900021434, 0.0009698764188215137, 0.005019067320972681], "target_probs": 0.8026174902915955}}




Minimal simplified tokens:

['#NEWLINE#', 'def enqueue_command(', 'self', 'command_name', 'args', "'Enqueue a new command into this pipeline.'", 'assert_open', '(', 'self', '#NEWLINE#', 'promise', 'Promise', '(', ')', '#NEWLINE#', 'self', 'command_name', 'command_name', 'promise', 'promise']
