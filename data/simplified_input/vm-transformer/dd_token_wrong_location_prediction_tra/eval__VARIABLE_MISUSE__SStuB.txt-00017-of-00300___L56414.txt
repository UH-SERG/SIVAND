
Original sample:

{"has_bug": true, "bug_kind": 1, "bug_kind_name": "VARIABLE_MISUSE", "source_tokens": ["#NEWLINE#", "def test_verify_firmware_update_args_throws_for_no_firmware_url(", "self", ")", ":", "#NEWLINE#", "#INDENT#", "update_firmware_mock", "=", "mock", ".", "MagicMock", "(", ")", "#NEWLINE#", "firmware_update_args", "=", "{", "#NEWLINE#", "#INDENT#", "'firmware_update_mode'", ":", "'ilo'", ",", "#NEWLINE#", "'firmware_images'", ":", "[", "]", ",", "#NEWLINE#", "#UNINDENT#", "}", "#NEWLINE#", "update_firmware_mock", ".", "__name__", "=", "'update_firmware_mock'", "#NEWLINE#", "wrapped_func", "=", "ilo_fw_processor", ".", "verify_firmware_update_args", "(", "update_firmware_mock", ")", "#NEWLINE#", "self", ".", "assertRaises", "(", "exception", ".", "InvalidParameterValue", ",", "wrapped_func", ",", "mock", ".", "ANY", ",", "mock", ".", "ANY", ",", "**", "wrapped_func", ")"], "error_location": [68], "repair_targets": [15], "repair_candidates": [40, 57, 68, 2, 49, 7, 34, 46, 15], "provenances": [{"datasetProvenance": {"datasetName": "ETHPy150Open", "filepath": "openstack/ironic/ironic/tests/unit/drivers/modules/ilo/test_firmware_processor.py", "license": "apache-2.0", "note": "license: bigquery_api"}}], "txt_file": "eval__VARIABLE_MISUSE__SStuB.txt-00017-of-00300", "js_count": 56414, "results": {"model": "transformer", "prob": {"loc": [[0.0006056101992726326, 8.586741095939487e-09, 3.2656930493146774e-09, 3.503700454765557e-11, 6.420979720145326e-11, 9.131694012065594e-11, 5.936328512090583e-11, 8.877322765776796e-10, 6.942363350859182e-11, 3.0254410088303985e-11, 9.828095282049532e-11, 2.1867962302080102e-11, 2.704994284119522e-10, 1.8530528500537713e-10, 7.044027861002888e-11, 4.1517715487771056e-08, 6.457850920682517e-11, 1.4083575972101414e-10, 1.1323185444833683e-10, 5.960347493338958e-11, 3.9960906805802665e-10, 1.1244479652949835e-10, 2.6049623569335267e-10, 7.775345645111287e-11, 2.1161880581210823e-10, 8.268170037517564e-10, 1.945207883657929e-10, 9.93473858734717e-10, 3.223504241312014e-10, 3.527412528736562e-10, 8.086981084787226e-10, 3.257355218888591e-10, 1.5472148562345467e-10, 1.4362007416668376e-10, 6.836209376359648e-10, 4.5252607216994534e-11, 4.202153382204532e-12, 2.0553718449445313e-10, 4.1388150862076145e-07, 1.7760810877565092e-10, 6.5521761349884855e-09, 4.9561590942381883e-11, 1.1515569747766463e-10, 1.0090219632052921e-10, 8.0790686640686e-11, 5.516367362901065e-10, 0.9023218154907227, 4.615239745930921e-09, 1.2493175383099242e-09, 7.787634426215106e-11, 1.3366298345918182e-10, 7.0274376595680366e-12, 4.873814199446436e-11, 1.906661051265246e-09, 5.228074084762113e-10, 1.2729760301422033e-10, 1.910956115569462e-10, 0.04299222305417061, 2.6083929460796185e-10, 3.7473073533078605e-09, 3.976034779196169e-10, 1.6201873176413528e-10, 1.2176980257461167e-10, 4.395928954181727e-09, 3.118647562416754e-10, 1.635238472408318e-10, 1.747868516588369e-10, 1.8058300688128526e-10, 0.05407991260290146, 8.150610186774543e-10]], "pointer": [[0.0, 0.0, 1.6143583536631922e-07, 0.0, 0.0, 0.0, 0.0, 1.5104468729987275e-05, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.9999821186065674, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0531979341976694e-06, 0.0, 0.0, 0.0, 0.0, 0.0, 1.2690090898104245e-06, 0.0, 0.0, 0.0, 0.0, 0.0, 2.6261025354301637e-08, 0.0, 0.0, 2.0695871683074074e-08, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 5.728730201326471e-08, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.3242774343780184e-07, 0.0]], "target": [0.9999821186065674]}, "loss": [2.917292594909668, 1.78815535036847e-05], "acc": [0.0, 0.0, 1.0, 0.0]}, "wrong_error_location": [46]}


Trace of simplified code(s):

{"result": {"time": "2021-02-21 07:31:40.774855", "n_pass": [1, 1, 1], "n_token": 70, "loss": [0.10278414934873581, 1.78815535036847e-05], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def test_verify_firmware_update_args_throws_for_no_firmware_url(", "self", ")", ":", "#NEWLINE#", "#INDENT#", "update_firmware_mock", "=", "mock", ".", "MagicMock", "(", ")", "#NEWLINE#", "firmware_update_args", "=", "{", "#NEWLINE#", "#INDENT#", "'firmware_update_mode'", ":", "'ilo'", ",", "#NEWLINE#", "'firmware_images'", ":", "[", "]", ",", "#NEWLINE#", "#UNINDENT#", "}", "#NEWLINE#", "update_firmware_mock", ".", "__name__", "=", "'update_firmware_mock'", "#NEWLINE#", "wrapped_func", "=", "ilo_fw_processor", ".", "verify_firmware_update_args", "(", "update_firmware_mock", ")", "#NEWLINE#", "self", ".", "assertRaises", "(", "exception", ".", "InvalidParameterValue", ",", "wrapped_func", ",", "mock", ".", "ANY", ",", "mock", ".", "ANY", ",", "**", "wrapped_func", ")"]}}
{"position": {"error_location": 46, "repair_targets": [15], "repair_candidates": [40, 57, 68, 2, 49, 7, 34, 46, 15]}}
{"prediction": {"error_location": 0.9023218154907227, "repair_targets": [0.9999821186065674], "repair_candidates": [1.6143583536631922e-07, 1.5104468729987275e-05, 0.9999821186065674, 1.0531979341976694e-06, 1.2690090898104245e-06, 2.6261025354301637e-08, 2.0695871683074074e-08, 5.728730201326471e-08, 1.3242774343780184e-07], "target_probs": 0.9999821186065674}}


{"result": {"time": "2021-02-21 07:31:40.831740", "n_pass": [9, 2, 2], "n_token": 53, "loss": [0.00639227032661438, 2.2411597456084564e-05], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def test_verify_firmware_update_args_throws_for_no_firmware_url(", "self", ")", ":", "#NEWLINE#", "#INDENT#", "update_firmware_mock", "=", "mock", ".", "MagicMock", "(", ")", "#NEWLINE#", "firmware_update_args", "=", "update_firmware_mock", ".", "__name__", "=", "'update_firmware_mock'", "#NEWLINE#", "wrapped_func", "=", "ilo_fw_processor", ".", "verify_firmware_update_args", "(", "update_firmware_mock", ")", "#NEWLINE#", "self", ".", "assertRaises", "(", "exception", ".", "InvalidParameterValue", ",", "wrapped_func", ",", "mock", ".", "ANY", ",", "mock", ".", "ANY", ",", "**", "wrapped_func", ")"]}}
{"position": {"error_location": 29, "repair_targets": [15], "repair_candidates": [23, 40, 51, 2, 32, 7, 17, 29, 15]}}
{"prediction": {"error_location": 0.9936280250549316, "repair_targets": [0.9999775886535645], "repair_candidates": [3.21327149777062e-07, 1.7826430848799646e-05, 0.9999775886535645, 5.61743762617084e-09, 4.5810733695361705e-07, 2.7714939676570793e-08, 4.387183594189992e-08, 2.1527885110117495e-06, 1.5870745073698345e-06], "target_probs": 0.9999775886535645}}


{"result": {"time": "2021-02-21 07:31:40.889781", "n_pass": [39, 3, 3], "n_token": 49, "loss": [0.1505231410264969, 0.15356531739234924], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def test_verify_firmware_update_args_throws_for_no_firmware_url(", "self", ")", ":", "#NEWLINE#", "#INDENT#", "update_firmware_mock", "=", "mock", ".", "MagicMock", "(", ")", "#NEWLINE#", "firmware_update_args", "=", "update_firmware_mock", ".", "__name__", "=", "'update_firmware_mock'", "#NEWLINE#", "wrapped_func", "(", "update_firmware_mock", ")", "#NEWLINE#", "self", ".", "assertRaises", "(", "exception", ".", "InvalidParameterValue", ",", "wrapped_func", ",", "mock", ".", "ANY", ",", "mock", ".", "ANY", ",", "**", "wrapped_func", ")"]}}
{"position": {"error_location": 25, "repair_targets": [15], "repair_candidates": [23, 36, 47, 2, 28, 7, 17, 25, 15]}}
{"prediction": {"error_location": 0.8602577447891235, "repair_targets": [0.8576447367668152], "repair_candidates": [5.238248922978528e-05, 0.13912154734134674, 0.8576447367668152, 1.181723018817138e-05, 0.00030393822817131877, 1.3479248082148843e-05, 3.290907625341788e-05, 0.0011049211025238037, 0.0017142492579296231], "target_probs": 0.8576447367668152}}


{"result": {"time": "2021-02-21 07:31:40.946387", "n_pass": [41, 4, 4], "n_token": 44, "loss": [0.449455201625824, 0.3488345742225647], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def test_verify_firmware_update_args_throws_for_no_firmware_url(", "self", ")", ":", "#NEWLINE#", "#INDENT#", "update_firmware_mock", "=", "mock", ".", "MagicMock", "(", ")", "#NEWLINE#", "firmware_update_args", "=", "update_firmware_mock", ".", "__name__", "=", "'update_firmware_mock'", "#NEWLINE#", "wrapped_func", "(", "update_firmware_mock", ")", "#NEWLINE#", "self", "InvalidParameterValue", ",", "wrapped_func", ",", "mock", ".", "ANY", ",", "mock", ".", "ANY", ",", "**", "wrapped_func", ")"]}}
{"position": {"error_location": 25, "repair_targets": [15], "repair_candidates": [23, 31, 42, 2, 28, 7, 17, 25, 15]}}
{"prediction": {"error_location": 0.6379755735397339, "repair_targets": [0.7055098414421082], "repair_candidates": [8.374069147976115e-05, 0.20478029549121857, 0.7055098414421082, 0.0005281376652419567, 0.0003963653580285609, 0.0007403547060675919, 0.0010436840821057558, 0.07727595418691635, 0.009641566313803196], "target_probs": 0.7055098414421082}}


{"result": {"time": "2021-02-21 07:31:41.062528", "n_pass": [47, 6, 5], "n_token": 40, "loss": [0.08018072694540024, 0.10009056329727173], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def test_verify_firmware_update_args_throws_for_no_firmware_url(", "self", ")", ":", "#NEWLINE#", "#INDENT#", "update_firmware_mock", "(", ")", "#NEWLINE#", "firmware_update_args", "=", "update_firmware_mock", ".", "__name__", "=", "'update_firmware_mock'", "#NEWLINE#", "wrapped_func", "(", "update_firmware_mock", ")", "#NEWLINE#", "self", "InvalidParameterValue", ",", "wrapped_func", ",", "mock", ".", "ANY", ",", "mock", ".", "ANY", ",", "**", "wrapped_func", ")"]}}
{"position": {"error_location": 21, "repair_targets": [11], "repair_candidates": [19, 27, 38, 2, 24, 7, 13, 21, 11]}}
{"prediction": {"error_location": 0.9229496121406555, "repair_targets": [0.9047554731369019], "repair_candidates": [3.12501288135536e-05, 0.050569433718919754, 0.9047554731369019, 0.0015215891180559993, 0.00010820740862982348, 0.0008692317642271519, 0.00022513078874908388, 0.037559498101472855, 0.004360076505690813], "target_probs": 0.9047554731369019}}


{"result": {"time": "2021-02-21 07:31:41.119219", "n_pass": [53, 7, 6], "n_token": 35, "loss": [0.289622038602829, 0.1113002672791481], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def test_verify_firmware_update_args_throws_for_no_firmware_url(", "self", ")", ":", "#NEWLINE#", "#INDENT#", "update_firmware_mock", "(", ")", "#NEWLINE#", "firmware_update_args", "=", "update_firmware_mock", ".", "__name__", "=", "'update_firmware_mock'", "#NEWLINE#", "wrapped_func", "(", "update_firmware_mock", ")", "#NEWLINE#", "self", "InvalidParameterValue", ",", "wrapped_func", ",", "mock", "ANY", ",", "**", "wrapped_func", ")"]}}
{"position": {"error_location": 21, "repair_targets": [11], "repair_candidates": [19, 27, 33, 2, 24, 7, 13, 21, 11]}}
{"prediction": {"error_location": 0.7485464215278625, "repair_targets": [0.8946700692176819], "repair_candidates": [2.6953781343763694e-05, 0.09198213368654251, 0.8946700692176819, 0.0048590111546218395, 2.7576425054576248e-05, 0.006570032797753811, 0.00019231601618230343, 0.0013293562224134803, 0.0003425839531701058], "target_probs": 0.8946700692176819}}


{"result": {"time": "2021-02-21 07:31:41.176041", "n_pass": [78, 8, 7], "n_token": 32, "loss": [0.7756064534187317, 0.011770706623792648], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def test_verify_firmware_update_args_throws_for_no_firmware_url(", "self", ")", ":", "#NEWLINE#", "#INDENT#", "update_firmware_mock", "(", ")", "#NEWLINE#", "firmware_update_args", "=", "update_firmware_mock", ".", "__name__", "=", "'update_firmware_mock'", "#NEWLINE#", "wrapped_func", "(", "update_firmware_mock", ")", "#NEWLINE#", "self", "InvalidParameterValue", ",", "wrapped_func", ",", "**", "wrapped_func", ")"]}}
{"position": {"error_location": 21, "repair_targets": [11], "repair_candidates": [19, 27, 30, 2, 24, 7, 13, 21, 11]}}
{"prediction": {"error_location": 0.46042442321777344, "repair_targets": [0.9882982969284058], "repair_candidates": [2.6761065328173572e-06, 0.010458732955157757, 0.9882982969284058, 0.00036294941673986614, 4.93768902742886e-06, 0.0007825650973245502, 4.305868787923828e-05, 3.077485962421633e-05, 1.585969584994018e-05], "target_probs": 0.9882982969284058}}


{"result": {"time": "2021-02-21 07:31:41.349081", "n_pass": [84, 11, 8], "n_token": 30, "loss": [0.510481595993042, 0.02967405691742897], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def test_verify_firmware_update_args_throws_for_no_firmware_url(", "self", ")", ":", "#NEWLINE#", "#INDENT#", "update_firmware_mock", "#NEWLINE#", "firmware_update_args", "=", "update_firmware_mock", ".", "__name__", "=", "'update_firmware_mock'", "#NEWLINE#", "wrapped_func", "(", "update_firmware_mock", ")", "#NEWLINE#", "self", "InvalidParameterValue", ",", "wrapped_func", ",", "**", "wrapped_func", ")"]}}
{"position": {"error_location": 19, "repair_targets": [9], "repair_candidates": [17, 25, 28, 2, 22, 7, 11, 19, 9]}}
{"prediction": {"error_location": 0.6002064347267151, "repair_targets": [0.9707618951797485], "repair_candidates": [0.0001155753925559111, 0.002241329522803426, 0.9707618951797485, 0.008259466849267483, 6.163720536278561e-05, 0.017928028479218483, 0.0003308113373350352, 0.00014904950512573123, 0.0001521510857855901], "target_probs": 0.9707618951797485}}


{"result": {"time": "2021-02-21 07:31:41.802180", "n_pass": [131, 19, 9], "n_token": 29, "loss": [0.3506552278995514, 0.048696789890527725], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def test_verify_firmware_update_args_throws_for_no_firmware_url(", "self", ")", ":", "#NEWLINE#", "#INDENT#", "update_firmware_mock", "#NEWLINE#", "firmware_update_args", "=", "update_firmware_mock", "__name__", "=", "'update_firmware_mock'", "#NEWLINE#", "wrapped_func", "(", "update_firmware_mock", ")", "#NEWLINE#", "self", "InvalidParameterValue", ",", "wrapped_func", ",", "**", "wrapped_func", ")"]}}
{"position": {"error_location": 18, "repair_targets": [9], "repair_candidates": [16, 24, 27, 2, 21, 7, 11, 18, 9]}}
{"prediction": {"error_location": 0.7042264938354492, "repair_targets": [0.9524698853492737], "repair_candidates": [7.112677849363536e-05, 0.014987777918577194, 0.9524698853492737, 0.011810184456408024, 0.00010206431761616841, 0.020295388996601105, 9.46524232858792e-05, 9.574203431839123e-05, 7.313586684176698e-05], "target_probs": 0.9524698853492737}}


{"result": {"time": "2021-02-21 07:31:41.858513", "n_pass": [132, 20, 10], "n_token": 28, "loss": [0.41292592883110046, 0.008020591922104359], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def test_verify_firmware_update_args_throws_for_no_firmware_url(", "self", ")", ":", "#NEWLINE#", "#INDENT#", "update_firmware_mock", "#NEWLINE#", "firmware_update_args", "=", "update_firmware_mock", "__name__", "'update_firmware_mock'", "#NEWLINE#", "wrapped_func", "(", "update_firmware_mock", ")", "#NEWLINE#", "self", "InvalidParameterValue", ",", "wrapped_func", ",", "**", "wrapped_func", ")"]}}
{"position": {"error_location": 17, "repair_targets": [9], "repair_candidates": [15, 23, 26, 2, 20, 7, 11, 17, 9]}}
{"prediction": {"error_location": 0.6617113947868347, "repair_targets": [0.9920114874839783], "repair_candidates": [2.2866686776978895e-05, 0.0012905321782454848, 0.9920114874839783, 0.0018516439013183117, 3.209679925930686e-05, 0.004703884478658438, 4.0201506635639817e-05, 3.292074688943103e-05, 1.4421771084016655e-05], "target_probs": 0.9920114874839783}}


{"result": {"time": "2021-02-21 07:31:41.914586", "n_pass": [133, 21, 11], "n_token": 27, "loss": [0.37700730562210083, 0.012018070556223392], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def test_verify_firmware_update_args_throws_for_no_firmware_url(", "self", ")", ":", "#NEWLINE#", "#INDENT#", "update_firmware_mock", "#NEWLINE#", "firmware_update_args", "=", "update_firmware_mock", "__name__", "#NEWLINE#", "wrapped_func", "(", "update_firmware_mock", ")", "#NEWLINE#", "self", "InvalidParameterValue", ",", "wrapped_func", ",", "**", "wrapped_func", ")"]}}
{"position": {"error_location": 16, "repair_targets": [9], "repair_candidates": [14, 22, 25, 2, 19, 7, 11, 16, 9]}}
{"prediction": {"error_location": 0.6859110593795776, "repair_targets": [0.9880538582801819], "repair_candidates": [0.0001331946114078164, 0.002257636981084943, 0.9880538582801819, 0.0023181806318461895, 4.42588898295071e-05, 0.006660121958702803, 0.0003899091389030218, 0.00011888188601005822, 2.4029979613260366e-05], "target_probs": 0.9880538582801819}}


{"result": {"time": "2021-02-21 07:31:42.085964", "n_pass": [138, 24, 12], "n_token": 26, "loss": [0.41419583559036255, 0.0026786408852785826], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def test_verify_firmware_update_args_throws_for_no_firmware_url(", "self", ")", ":", "#NEWLINE#", "#INDENT#", "update_firmware_mock", "#NEWLINE#", "firmware_update_args", "=", "update_firmware_mock", "__name__", "#NEWLINE#", "wrapped_func", "(", "update_firmware_mock", "#NEWLINE#", "self", "InvalidParameterValue", ",", "wrapped_func", ",", "**", "wrapped_func", ")"]}}
{"position": {"error_location": 16, "repair_targets": [9], "repair_candidates": [14, 21, 24, 2, 18, 7, 11, 16, 9]}}
{"prediction": {"error_location": 0.6608715057373047, "repair_targets": [0.9973249435424805], "repair_candidates": [7.634935900568962e-05, 0.0006365022272802889, 0.9973249435424805, 0.0008215808193199337, 1.9672588678076863e-05, 0.0009057899005711079, 0.00016220292309299111, 4.9972146371146664e-05, 3.111515525233699e-06], "target_probs": 0.9973249435424805}}


{"result": {"time": "2021-02-21 07:31:42.198436", "n_pass": [141, 26, 13], "n_token": 25, "loss": [0.8771331310272217, 0.0063576907850801945], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def test_verify_firmware_update_args_throws_for_no_firmware_url(", "self", ")", ":", "#NEWLINE#", "#INDENT#", "update_firmware_mock", "#NEWLINE#", "firmware_update_args", "=", "update_firmware_mock", "__name__", "#NEWLINE#", "wrapped_func", "(", "update_firmware_mock", "#NEWLINE#", "self", ",", "wrapped_func", ",", "**", "wrapped_func", ")"]}}
{"position": {"error_location": 16, "repair_targets": [9], "repair_candidates": [14, 20, 23, 2, 18, 7, 11, 16, 9]}}
{"prediction": {"error_location": 0.4159737527370453, "repair_targets": [0.9936624765396118], "repair_candidates": [4.7388410166604444e-05, 0.0005838630022481084, 0.9936624765396118, 0.0018638314213603735, 2.5005589122883976e-05, 0.003383627161383629, 0.00035786465741693974, 7.283015293069184e-05, 3.0321741633088095e-06], "target_probs": 0.9936624765396118}}


{"result": {"time": "2021-02-21 07:31:42.310669", "n_pass": [144, 28, 14], "n_token": 23, "loss": [0.8104732036590576, 0.006480847019702196], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def test_verify_firmware_update_args_throws_for_no_firmware_url(", "self", ")", ":", "#NEWLINE#", "#INDENT#", "update_firmware_mock", "#NEWLINE#", "firmware_update_args", "=", "update_firmware_mock", "__name__", "#NEWLINE#", "wrapped_func", "(", "update_firmware_mock", "#NEWLINE#", "self", ",", "wrapped_func", "wrapped_func", ")"]}}
{"position": {"error_location": 16, "repair_targets": [9], "repair_candidates": [14, 20, 21, 2, 18, 7, 11, 16, 9]}}
{"prediction": {"error_location": 0.44464755058288574, "repair_targets": [0.9935401082038879], "repair_candidates": [0.00010607835429254919, 0.0007449446711689234, 0.9935401082038879, 0.0007982964161783457, 0.00022359745344147086, 0.0010706123430281878, 0.00023883000540081412, 0.0018369004828855395, 0.001440682914108038], "target_probs": 0.9935401082038879}}


{"result": {"time": "2021-02-21 07:31:42.481026", "n_pass": [149, 31, 15], "n_token": 22, "loss": [0.37253767251968384, 0.0018381670815870166], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def test_verify_firmware_update_args_throws_for_no_firmware_url(", "self", ":", "#NEWLINE#", "#INDENT#", "update_firmware_mock", "#NEWLINE#", "firmware_update_args", "=", "update_firmware_mock", "__name__", "#NEWLINE#", "wrapped_func", "(", "update_firmware_mock", "#NEWLINE#", "self", ",", "wrapped_func", "wrapped_func", ")"]}}
{"position": {"error_location": 15, "repair_targets": [8], "repair_candidates": [13, 19, 20, 2, 17, 6, 10, 15, 8]}}
{"prediction": {"error_location": 0.6889837384223938, "repair_targets": [0.9981635212898254], "repair_candidates": [2.5696319426060654e-05, 0.00022769422503188252, 0.9981635212898254, 0.00017116140224970877, 5.990799400024116e-05, 0.0002819465007632971, 4.166892540524714e-05, 0.0005427960422821343, 0.00048560803406871855], "target_probs": 0.9981635212898254}}


{"result": {"time": "2021-02-21 07:31:43.216211", "n_pass": [174, 44, 16], "n_token": 21, "loss": [0.6486810445785522, 0.005048959515988827], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def test_verify_firmware_update_args_throws_for_no_firmware_url(", "self", ":", "#NEWLINE#", "#INDENT#", "update_firmware_mock", "#NEWLINE#", "firmware_update_args", "=", "update_firmware_mock", "__name__", "#NEWLINE#", "wrapped_func", "(", "update_firmware_mock", "#NEWLINE#", "self", ",", "wrapped_func", "wrapped_func"]}}
{"position": {"error_location": 15, "repair_targets": [8], "repair_candidates": [13, 19, 20, 2, 17, 6, 10, 15, 8]}}
{"prediction": {"error_location": 0.5227347612380981, "repair_targets": [0.9949637651443481], "repair_candidates": [6.895994010847062e-05, 0.0007007717504166067, 0.9949637651443481, 0.0008818601490929723, 0.00028366237529553473, 0.001213307841680944, 0.00017675443086773157, 0.0011313658906146884, 0.000579572282731533], "target_probs": 0.9949637651443481}}




Minimal simplified tokens:

['#NEWLINE#', 'def test_verify_firmware_update_args_throws_for_no_firmware_url(', 'self', ':', '#NEWLINE#', '#INDENT#', 'update_firmware_mock', '#NEWLINE#', 'firmware_update_args', '=', 'update_firmware_mock', '__name__', '#NEWLINE#', 'wrapped_func', '(', 'update_firmware_mock', '#NEWLINE#', 'self', ',', 'wrapped_func', 'wrapped_func']
