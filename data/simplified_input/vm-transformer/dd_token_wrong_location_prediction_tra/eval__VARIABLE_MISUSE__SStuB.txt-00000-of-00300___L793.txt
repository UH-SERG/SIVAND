
Original sample:

{"has_bug": true, "bug_kind": 1, "bug_kind_name": "VARIABLE_MISUSE", "source_tokens": ["#NEWLINE#", "def bound_data(", "self", ",", "data", ",", "initial", ")", ":", "#NEWLINE#", "#INDENT#", "'\\n        Return the value that should be shown for this field on render of a\\n        bound form, given the submitted POST data for the field and the initial\\n        data, if any.\\n\\n        For most fields, this will simply be data; FileFields need to handle it\\n        a bit differently.\\n        '", "#NEWLINE#", "if", "self", ".", "disabled", ":", "#NEWLINE#", "#INDENT#", "return", "data", "#NEWLINE#", "#UNINDENT#", "return", "data"], "error_location": [21], "repair_targets": [6], "repair_candidates": [2, 14, 6, 4, 21, 25], "provenances": [{"datasetProvenance": {"datasetName": "ETHPy150Open", "filepath": "django/django/django/forms/fields.py", "license": "bsd-3-clause", "note": "license: manual_eval"}}], "txt_file": "eval__VARIABLE_MISUSE__SStuB.txt-00000-of-00300", "js_count": 793, "results": {"model": "transformer", "prob": {"loc": [[0.33816224336624146, 1.9789849829976447e-05, 2.9528198410844197e-06, 3.411281852550019e-07, 4.614291810867144e-06, 2.5460491315243416e-07, 3.276314600952901e-05, 7.890618292094587e-08, 5.882626510356204e-07, 1.0265765695294249e-06, 6.929604410288448e-07, 1.0458746146468911e-05, 2.9116934001649497e-06, 4.2841347749345005e-06, 0.11212815344333649, 8.164694804690953e-07, 8.236065127675829e-07, 3.398214403205202e-06, 4.922087100567296e-06, 4.2576172631925147e-07, 2.2191601090071345e-07, 0.0907713770866394, 2.1944206309854053e-06, 1.1515317055454943e-06, 4.074040305113158e-08, 0.45884349942207336]], "pointer": [[0.0, 0.0, 0.029728494584560394, 0.0, 0.07053973525762558, 0.0, 0.8392726182937622, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.05635187774896622, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0025281421840190887, 0.0, 0.0, 0.0, 0.0015791661571711302]], "target": [0.8392726182937622]}, "loss": [2.399411201477051, 0.17521969974040985], "acc": [0.0, 0.0, 1.0, 0.0]}, "wrong_error_location": [25]}


Trace of simplified code(s):

{"result": {"time": "2021-02-21 05:32:45.259038", "n_pass": [1, 1, 1], "n_token": 26, "loss": [0.7790461182594299, 0.17521969974040985], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def bound_data(", "self", ",", "data", ",", "initial", ")", ":", "#NEWLINE#", "#INDENT#", "'\\n        Return the value that should be shown for this field on render of a\\n        bound form, given the submitted POST data for the field and the initial\\n        data, if any.\\n\\n        For most fields, this will simply be data; FileFields need to handle it\\n        a bit differently.\\n        '", "#NEWLINE#", "if", "self", ".", "disabled", ":", "#NEWLINE#", "#INDENT#", "return", "data", "#NEWLINE#", "#UNINDENT#", "return", "data"]}}
{"position": {"error_location": 25, "repair_targets": [6], "repair_candidates": [2, 14, 6, 4, 21, 25]}}
{"prediction": {"error_location": 0.45884349942207336, "repair_targets": [0.8392726182937622], "repair_candidates": [0.029728494584560394, 0.07053973525762558, 0.8392726182937622, 0.05635187774896622, 0.0025281421840190887, 0.0015791661571711302], "target_probs": 0.8392726182937622}}


{"result": {"time": "2021-02-21 05:32:45.318823", "n_pass": [23, 2, 2], "n_token": 23, "loss": [0.8225850462913513, 0.28152063488960266], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def bound_data(", "self", ",", "data", ",", "initial", ")", ":", "#NEWLINE#", "if", "self", ".", "disabled", ":", "#NEWLINE#", "#INDENT#", "return", "data", "#NEWLINE#", "#UNINDENT#", "return", "data"]}}
{"position": {"error_location": 22, "repair_targets": [6], "repair_candidates": [2, 11, 6, 4, 18, 22]}}
{"prediction": {"error_location": 0.43929460644721985, "repair_targets": [0.7546353340148926], "repair_candidates": [0.036133039742708206, 0.09622032195329666, 0.7546353340148926, 0.10608216375112534, 0.002322596497833729, 0.004606482107192278], "target_probs": 0.7546353340148926}}


{"result": {"time": "2021-02-21 05:32:45.374292", "n_pass": [25, 3, 3], "n_token": 20, "loss": [0.39566096663475037, 0.10478148609399796], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def bound_data(", "self", ",", "data", ",", "initial", ")", ":", "#NEWLINE#", "if", "self", "#NEWLINE#", "#INDENT#", "return", "data", "#NEWLINE#", "#UNINDENT#", "return", "data"]}}
{"position": {"error_location": 19, "repair_targets": [6], "repair_candidates": [2, 11, 6, 4, 15, 19]}}
{"prediction": {"error_location": 0.6732349395751953, "repair_targets": [0.9005212783813477], "repair_candidates": [0.019514352083206177, 0.004648539237678051, 0.9005212783813477, 0.07429185509681702, 0.00046824655146338046, 0.0005557225085794926], "target_probs": 0.9005212783813477}}


{"result": {"time": "2021-02-21 05:32:45.484701", "n_pass": [46, 5, 4], "n_token": 18, "loss": [0.1162533387541771, 0.0017107449239119887], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def bound_data(", "self", ",", "data", ",", "initial", ")", ":", "#NEWLINE#", "if", "self", "#NEWLINE#", "#INDENT#", "return", "data", "return", "data"]}}
{"position": {"error_location": 17, "repair_targets": [6], "repair_candidates": [2, 11, 6, 4, 15, 17]}}
{"prediction": {"error_location": 0.8902496695518494, "repair_targets": [0.9982907176017761], "repair_candidates": [0.0009729595039971173, 0.00012930994853377342, 0.9982907176017761, 0.0006026764749549329, 2.343419055250706e-06, 1.9005733520316426e-06], "target_probs": 0.9982907176017761}}


{"result": {"time": "2021-02-21 05:32:45.539440", "n_pass": [47, 6, 5], "n_token": 17, "loss": [0.25522908568382263, 0.00312996469438076], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["def bound_data(", "self", ",", "data", ",", "initial", ")", ":", "#NEWLINE#", "if", "self", "#NEWLINE#", "#INDENT#", "return", "data", "return", "data"]}}
{"position": {"error_location": 16, "repair_targets": [5], "repair_candidates": [1, 10, 5, 3, 14, 16]}}
{"prediction": {"error_location": 0.7747389674186707, "repair_targets": [0.9968749284744263], "repair_candidates": [0.0012332233600318432, 0.0011521904962137341, 0.9968749284744263, 0.0007386314100585878, 2.9081817842779856e-07, 6.846142355243501e-07], "target_probs": 0.9968749284744263}}


{"result": {"time": "2021-02-21 05:32:45.594209", "n_pass": [48, 7, 6], "n_token": 16, "loss": [0.46417006850242615, 0.0001686953764874488], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["self", ",", "data", ",", "initial", ")", ":", "#NEWLINE#", "if", "self", "#NEWLINE#", "#INDENT#", "return", "data", "return", "data"]}}
{"position": {"error_location": 15, "repair_targets": [4], "repair_candidates": [0, 9, 4, 2, 13, 15]}}
{"prediction": {"error_location": 0.6286565661430359, "repair_targets": [0.9998313188552856], "repair_candidates": [0.00011205697228433564, 4.490825449465774e-05, 0.9998313188552856, 1.108563446905464e-05, 2.0744018058849178e-07, 4.02931362941672e-07], "target_probs": 0.9998313188552856}}


{"result": {"time": "2021-02-21 05:32:45.707241", "n_pass": [53, 9, 7], "n_token": 14, "loss": [0.6487234830856323, 0.0002456609217915684], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["self", ",", "data", ",", "initial", ")", "if", "self", "#NEWLINE#", "#INDENT#", "return", "data", "return", "data"]}}
{"position": {"error_location": 13, "repair_targets": [4], "repair_candidates": [0, 7, 4, 2, 11, 13]}}
{"prediction": {"error_location": 0.5227126479148865, "repair_targets": [0.9997543692588806], "repair_candidates": [5.772861186414957e-05, 5.480988875206094e-06, 0.9997543692588806, 0.00018242272199131548, 2.3058104758888476e-08, 3.0273366036226435e-08], "target_probs": 0.9997543692588806}}


{"result": {"time": "2021-02-21 05:32:45.978766", "n_pass": [77, 14, 8], "n_token": 13, "loss": [0.06463568657636642, 0.0017330157570540905], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["self", ",", "data", ",", "initial", ")", "if", "self", "#NEWLINE#", "#INDENT#", "data", "return", "data"]}}
{"position": {"error_location": 12, "repair_targets": [4], "repair_candidates": [0, 7, 4, 2, 10, 12]}}
{"prediction": {"error_location": 0.9374089241027832, "repair_targets": [0.9982684850692749], "repair_candidates": [0.00029484127298928797, 0.0005080253467895091, 0.9982684850692749, 0.0009199444320984185, 8.334510312124621e-06, 3.862713526814332e-07], "target_probs": 0.9982684850692749}}


{"result": {"time": "2021-02-21 05:32:46.087468", "n_pass": [81, 16, 9], "n_token": 12, "loss": [0.0017312075942754745, 0.07718013972043991], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["self", "data", ",", "initial", ")", "if", "self", "#NEWLINE#", "#INDENT#", "data", "return", "data"]}}
{"position": {"error_location": 11, "repair_targets": [3], "repair_candidates": [0, 6, 3, 1, 9, 11]}}
{"prediction": {"error_location": 0.9982702732086182, "repair_targets": [0.9257230758666992], "repair_candidates": [0.0002963782462757081, 0.00019174347107764333, 0.9257230758666992, 0.0737881287932396, 6.319164640444797e-07, 3.704731810216799e-08], "target_probs": 0.9257230758666992}}




Minimal simplified tokens:

['self', 'data', ',', 'initial', ')', 'if', 'self', '#NEWLINE#', '#INDENT#', 'data', 'return', 'data']
