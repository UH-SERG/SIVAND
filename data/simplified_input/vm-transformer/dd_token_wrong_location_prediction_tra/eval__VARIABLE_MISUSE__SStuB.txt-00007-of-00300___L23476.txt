
Original sample:

{"has_bug": true, "bug_kind": 1, "bug_kind_name": "VARIABLE_MISUSE", "source_tokens": ["#NEWLINE#", "def test_get_import_name_without_alias(", "self", ")", ":", "#NEWLINE#", "#INDENT#", "\"\\n        Test that function get_name_without_alias() will work on a string.\\n        - Note: This isn't truly needed when pipreqs is walking the AST to find imports\\n        \"", "#NEWLINE#", "import_name_with_alias", "=", "'requests as R'", "#NEWLINE#", "expected_import_name_without_alias", "=", "'requests'", "#NEWLINE#", "import_name_without_aliases", "=", "pipreqs", ".", "get_name_without_alias", "(", "import_name_with_alias", ")", "#NEWLINE#", "self", ".", "assertEqual", "(", "expected_import_name_without_alias", ",", "expected_import_name_without_alias", ")"], "error_location": [30], "repair_targets": [17], "repair_candidates": [2, 26, 9, 23, 17, 13, 30, 32], "provenances": [{"datasetProvenance": {"datasetName": "ETHPy150Open", "filepath": "bndr/pipreqs/tests/test_pipreqs.py", "license": "apache-2.0", "note": "license: bigquery_api"}}], "txt_file": "eval__VARIABLE_MISUSE__SStuB.txt-00007-of-00300", "js_count": 23476, "results": {"model": "transformer", "prob": {"loc": [[0.002026794943958521, 2.226816775419138e-08, 6.472380675859313e-08, 5.701585314987767e-10, 5.796975122152048e-10, 7.926156397886075e-10, 4.96630958579658e-10, 3.2238084424207614e-10, 3.3598096527143184e-10, 6.523214857168114e-09, 8.251020422456179e-10, 6.095478566336965e-10, 2.2762763896011506e-10, 8.011946661667935e-09, 7.453337946827787e-10, 1.1915057829270381e-09, 5.035193373359448e-10, 3.6054004226571124e-07, 1.7030842014431613e-10, 7.439290850008717e-10, 6.230502225257339e-10, 6.760073750777806e-11, 2.9271050028256695e-09, 3.033141865671496e-06, 2.4746018567611827e-09, 7.594211925976424e-10, 2.3400444248977692e-08, 6.230455040778793e-10, 2.1005909511817578e-10, 3.583601859702412e-09, 0.3260030150413513, 3.221850874979282e-08, 0.671966552734375, 2.116228436932488e-08]], "pointer": [[0.0, 0.0, 1.283766550841392e-07, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.026212111115455627, 0.0, 0.0, 0.0, 2.1563584596151486e-05, 0.0, 0.0, 0.0, 0.9734113812446594, 0.0, 0.0, 0.0, 0.0, 0.0, 0.00035441629006527364, 0.0, 0.0, 1.4063984643541971e-08, 0.0, 0.0, 0.0, 2.1925585258486535e-07, 0.0, 2.651847523793549e-07, 0.0]], "target": [0.9734113812446594]}, "loss": [1.120848536491394, 0.026948489248752594], "acc": [0.0, 0.0, 1.0, 0.0]}, "wrong_error_location": [32]}


Trace of simplified code(s):

{"result": {"time": "2021-02-21 06:22:10.974049", "n_pass": [1, 1, 1], "n_token": 34, "loss": [0.397546648979187, 0.026948489248752594], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def test_get_import_name_without_alias(", "self", ")", ":", "#NEWLINE#", "#INDENT#", "\"\\n        Test that function get_name_without_alias() will work on a string.\\n        - Note: This isn't truly needed when pipreqs is walking the AST to find imports\\n        \"", "#NEWLINE#", "import_name_with_alias", "=", "'requests as R'", "#NEWLINE#", "expected_import_name_without_alias", "=", "'requests'", "#NEWLINE#", "import_name_without_aliases", "=", "pipreqs", ".", "get_name_without_alias", "(", "import_name_with_alias", ")", "#NEWLINE#", "self", ".", "assertEqual", "(", "expected_import_name_without_alias", ",", "expected_import_name_without_alias", ")"]}}
{"position": {"error_location": 32, "repair_targets": [17], "repair_candidates": [2, 26, 9, 23, 17, 13, 30, 32]}}
{"prediction": {"error_location": 0.671966552734375, "repair_targets": [0.9734113812446594], "repair_candidates": [1.283766550841392e-07, 0.026212111115455627, 2.1563584596151486e-05, 0.9734113812446594, 0.00035441629006527364, 1.4063984643541971e-08, 2.1925585258486535e-07, 2.651847523793549e-07], "target_probs": 0.9734113812446594}}


{"result": {"time": "2021-02-21 06:22:11.030522", "n_pass": [21, 2, 2], "n_token": 30, "loss": [0.2184155136346817, 0.003507918445393443], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def test_get_import_name_without_alias(", "self", ")", "#NEWLINE#", "import_name_with_alias", "=", "'requests as R'", "#NEWLINE#", "expected_import_name_without_alias", "=", "'requests'", "#NEWLINE#", "import_name_without_aliases", "=", "pipreqs", ".", "get_name_without_alias", "(", "import_name_with_alias", ")", "#NEWLINE#", "self", ".", "assertEqual", "(", "expected_import_name_without_alias", ",", "expected_import_name_without_alias", ")"]}}
{"position": {"error_location": 28, "repair_targets": [13], "repair_candidates": [2, 22, 5, 19, 13, 9, 26, 28]}}
{"prediction": {"error_location": 0.8037914037704468, "repair_targets": [0.9964982271194458], "repair_candidates": [2.597188597519562e-07, 0.002939173486083746, 0.0003467485657893121, 0.9964982271194458, 0.00021404610015451908, 4.504207140598737e-08, 9.529194926471973e-07, 5.139918926033715e-07], "target_probs": 0.9964982271194458}}


{"result": {"time": "2021-02-21 06:22:11.087479", "n_pass": [43, 3, 3], "n_token": 28, "loss": [0.33387237787246704, 0.000921435363125056], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def test_get_import_name_without_alias(", "self", ")", "#NEWLINE#", "import_name_with_alias", "#NEWLINE#", "expected_import_name_without_alias", "=", "'requests'", "#NEWLINE#", "import_name_without_aliases", "=", "pipreqs", ".", "get_name_without_alias", "(", "import_name_with_alias", ")", "#NEWLINE#", "self", ".", "assertEqual", "(", "expected_import_name_without_alias", ",", "expected_import_name_without_alias", ")"]}}
{"position": {"error_location": 26, "repair_targets": [11], "repair_candidates": [2, 20, 5, 17, 11, 7, 24, 26]}}
{"prediction": {"error_location": 0.7161451578140259, "repair_targets": [0.9990789890289307], "repair_candidates": [1.4428262318233465e-07, 0.00014747920795343816, 8.422503742622212e-05, 0.9990789890289307, 0.0006886054761707783, 3.151835770154321e-08, 3.442882814397308e-07, 1.1214218886834715e-07], "target_probs": 0.9990789890289307}}


{"result": {"time": "2021-02-21 06:22:11.142808", "n_pass": [45, 4, 4], "n_token": 26, "loss": [0.6614827513694763, 0.0041036647744476795], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def test_get_import_name_without_alias(", "self", ")", "#NEWLINE#", "import_name_with_alias", "#NEWLINE#", "expected_import_name_without_alias", "#NEWLINE#", "import_name_without_aliases", "=", "pipreqs", ".", "get_name_without_alias", "(", "import_name_with_alias", ")", "#NEWLINE#", "self", ".", "assertEqual", "(", "expected_import_name_without_alias", ",", "expected_import_name_without_alias", ")"]}}
{"position": {"error_location": 24, "repair_targets": [9], "repair_candidates": [2, 18, 5, 15, 9, 7, 22, 24]}}
{"prediction": {"error_location": 0.5160855650901794, "repair_targets": [0.9959047436714172], "repair_candidates": [5.028578584642673e-07, 0.0005125783500261605, 9.040937584359199e-06, 0.9959047436714172, 0.0035727438516914845, 9.615632734494284e-08, 1.6584466777658236e-07, 7.20845534374348e-08], "target_probs": 0.9959047436714172}}


{"result": {"time": "2021-02-21 06:22:11.368052", "n_pass": [54, 8, 5], "n_token": 24, "loss": [0.2762918472290039, 0.0006841376889497042], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["self", ")", "#NEWLINE#", "import_name_with_alias", "#NEWLINE#", "expected_import_name_without_alias", "#NEWLINE#", "import_name_without_aliases", "=", "pipreqs", ".", "get_name_without_alias", "(", "import_name_with_alias", ")", "#NEWLINE#", "self", ".", "assertEqual", "(", "expected_import_name_without_alias", ",", "expected_import_name_without_alias", ")"]}}
{"position": {"error_location": 22, "repair_targets": [7], "repair_candidates": [0, 16, 3, 13, 7, 5, 20, 22]}}
{"prediction": {"error_location": 0.7585914731025696, "repair_targets": [0.9993160963058472], "repair_candidates": [2.744549055933021e-05, 0.000157937451149337, 5.06106334796641e-06, 0.9993160963058472, 0.00048675909056328237, 6.7444852902553976e-06, 1.3340733850952802e-08, 3.742884224777754e-09], "target_probs": 0.9993160963058472}}


{"result": {"time": "2021-02-21 06:22:11.478880", "n_pass": [60, 10, 6], "n_token": 22, "loss": [0.46467161178588867, 0.0013612828915938735], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["self", ")", "#NEWLINE#", "import_name_with_alias", "#NEWLINE#", "expected_import_name_without_alias", "#NEWLINE#", "import_name_without_aliases", "=", "pipreqs", "(", "import_name_with_alias", ")", "#NEWLINE#", "self", ".", "assertEqual", "(", "expected_import_name_without_alias", ",", "expected_import_name_without_alias", ")"]}}
{"position": {"error_location": 20, "repair_targets": [7], "repair_candidates": [0, 14, 3, 11, 7, 5, 18, 20]}}
{"prediction": {"error_location": 0.6283414363861084, "repair_targets": [0.9986396431922913], "repair_candidates": [1.188471924251644e-05, 0.000175162436789833, 8.622840141470078e-06, 0.9986396431922913, 0.001163998618721962, 7.603568974445807e-07, 3.768852341323736e-09, 1.1683691791830597e-09], "target_probs": 0.9986396431922913}}


{"result": {"time": "2021-02-21 06:22:11.648485", "n_pass": [91, 13, 7], "n_token": 21, "loss": [0.4002037048339844, 0.0048211016692221165], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["self", ")", "#NEWLINE#", "import_name_with_alias", "#NEWLINE#", "expected_import_name_without_alias", "#NEWLINE#", "import_name_without_aliases", "=", "pipreqs", "import_name_with_alias", ")", "#NEWLINE#", "self", ".", "assertEqual", "(", "expected_import_name_without_alias", ",", "expected_import_name_without_alias", ")"]}}
{"position": {"error_location": 19, "repair_targets": [7], "repair_candidates": [0, 13, 3, 10, 7, 5, 17, 19]}}
{"prediction": {"error_location": 0.670183539390564, "repair_targets": [0.9951905012130737], "repair_candidates": [8.084854925982654e-05, 0.0005482574924826622, 2.871631113521289e-05, 0.9951905012130737, 0.004143053665757179, 8.590206562075764e-06, 1.4059964748014409e-08, 3.783517055211405e-09], "target_probs": 0.9951905012130737}}


{"result": {"time": "2021-02-21 06:22:11.703545", "n_pass": [92, 14, 8], "n_token": 20, "loss": [0.2762131690979004, 0.0012976002180948853], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["self", ")", "#NEWLINE#", "import_name_with_alias", "#NEWLINE#", "expected_import_name_without_alias", "#NEWLINE#", "import_name_without_aliases", "=", "pipreqs", "import_name_with_alias", "#NEWLINE#", "self", ".", "assertEqual", "(", "expected_import_name_without_alias", ",", "expected_import_name_without_alias", ")"]}}
{"position": {"error_location": 18, "repair_targets": [7], "repair_candidates": [0, 12, 3, 10, 7, 5, 16, 18]}}
{"prediction": {"error_location": 0.7586512565612793, "repair_targets": [0.9987032413482666], "repair_candidates": [0.0001581618416821584, 0.0003397760447114706, 2.9450800866470672e-05, 0.9987032413482666, 0.0007643981371074915, 5.012901965528727e-06, 3.070518062031624e-08, 5.136001401950807e-09], "target_probs": 0.9987032413482666}}


{"result": {"time": "2021-02-21 06:22:11.815528", "n_pass": [95, 16, 9], "n_token": 19, "loss": [0.35624781250953674, 0.0025646165013313293], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["self", ")", "#NEWLINE#", "import_name_with_alias", "#NEWLINE#", "expected_import_name_without_alias", "#NEWLINE#", "import_name_without_aliases", "=", "pipreqs", "import_name_with_alias", "#NEWLINE#", "self", "assertEqual", "(", "expected_import_name_without_alias", ",", "expected_import_name_without_alias", ")"]}}
{"position": {"error_location": 17, "repair_targets": [7], "repair_candidates": [0, 12, 3, 10, 7, 5, 15, 17]}}
{"prediction": {"error_location": 0.700299084186554, "repair_targets": [0.9974386692047119], "repair_candidates": [0.0005477498052641749, 0.0007066692342050374, 9.263721585739404e-05, 0.9974386692047119, 0.0012069180374965072, 7.294844635907793e-06, 3.7020473797610975e-08, 6.976376365486203e-09], "target_probs": 0.9974386692047119}}


{"result": {"time": "2021-02-21 06:22:11.871612", "n_pass": [96, 17, 10], "n_token": 18, "loss": [0.6424307227134705, 0.005462937988340855], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["self", ")", "#NEWLINE#", "import_name_with_alias", "#NEWLINE#", "expected_import_name_without_alias", "#NEWLINE#", "import_name_without_aliases", "=", "pipreqs", "import_name_with_alias", "#NEWLINE#", "self", "(", "expected_import_name_without_alias", ",", "expected_import_name_without_alias", ")"]}}
{"position": {"error_location": 16, "repair_targets": [7], "repair_candidates": [0, 12, 3, 10, 7, 5, 14, 16]}}
{"prediction": {"error_location": 0.5260122418403625, "repair_targets": [0.994551956653595], "repair_candidates": [0.0005122158909216523, 0.0017834239406511188, 0.00036893770447932184, 0.994551956653595, 0.0027541324961930513, 2.9212676963652484e-05, 7.157385084610723e-08, 1.8548414359997878e-08], "target_probs": 0.994551956653595}}


{"result": {"time": "2021-02-21 06:22:11.930583", "n_pass": [97, 18, 11], "n_token": 17, "loss": [0.13477610051631927, 0.03375675156712532], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["self", ")", "#NEWLINE#", "import_name_with_alias", "#NEWLINE#", "expected_import_name_without_alias", "#NEWLINE#", "import_name_without_aliases", "=", "pipreqs", "import_name_with_alias", "#NEWLINE#", "self", "expected_import_name_without_alias", ",", "expected_import_name_without_alias", ")"]}}
{"position": {"error_location": 15, "repair_targets": [7], "repair_candidates": [0, 12, 3, 10, 7, 5, 13, 15]}}
{"prediction": {"error_location": 0.873911440372467, "repair_targets": [0.9668066501617432], "repair_candidates": [0.0028502412606030703, 0.003579535521566868, 0.021372845396399498, 0.9668066501617432, 0.004186893347650766, 0.00020026143465656787, 0.0009050858789123595, 9.841963037615642e-05], "target_probs": 0.9668066501617432}}


{"result": {"time": "2021-02-21 06:22:12.375075", "n_pass": [117, 26, 12], "n_token": 16, "loss": [0.42001864314079285, 0.08154705911874771], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["self", ")", "#NEWLINE#", "import_name_with_alias", "#NEWLINE#", "expected_import_name_without_alias", "#NEWLINE#", "import_name_without_aliases", "=", "pipreqs", "import_name_with_alias", "#NEWLINE#", "self", "expected_import_name_without_alias", "expected_import_name_without_alias", ")"]}}
{"position": {"error_location": 14, "repair_targets": [7], "repair_candidates": [0, 12, 3, 10, 7, 5, 13, 14]}}
{"prediction": {"error_location": 0.6570345759391785, "repair_targets": [0.9216893315315247], "repair_candidates": [0.03750087320804596, 0.00583302415907383, 0.02663540095090866, 0.9216893315315247, 0.0022494662553071976, 0.004691617097705603, 0.0009081291500478983, 0.000492085877340287], "target_probs": 0.9216893315315247}}




Minimal simplified tokens:

['self', ')', '#NEWLINE#', 'import_name_with_alias', '#NEWLINE#', 'expected_import_name_without_alias', '#NEWLINE#', 'import_name_without_aliases', '=', 'pipreqs', 'import_name_with_alias', '#NEWLINE#', 'self', 'expected_import_name_without_alias', 'expected_import_name_without_alias', ')']
