
Original sample:

{"has_bug": true, "bug_kind": 1, "bug_kind_name": "VARIABLE_MISUSE", "source_tokens": ["#NEWLINE#", "def test_ExtendedVersion_Exponential_WithLinearGrowthAndOffset_2D(", "self", ")", ":", "#NEWLINE#", "#INDENT#", "equation", "=", "pyeq2", ".", "Models_2D", ".", "Exponential", ".", "Exponential", "(", "'SSQABS'", ",", "'Linear Growth And Offset'", ")", "#NEWLINE#", "self", ".", "assertEqual", "(", "equation", ".", "extendedVersionHandler", ".", "__class__", ".", "__name__", ",", "'ExtendedVersionHandler_LinearGrowthAndOffset'", ")", "#NEWLINE#", "self", ".", "assertEqual", "(", "equation", ".", "GetDisplayHTML", "(", ")", ",", "'y = a * exp(bx)<br>y = y * x + Offset'", ")", "#NEWLINE#", "self", ".", "assertEqual", "(", "equation", ".", "GetDisplayName", "(", ")", ",", "'Exponential With Linear Growth And Offset'", ")", "#NEWLINE#", "self", ".", "assertEqual", "(", "equation", ".", "GetCoefficientDesignators", "(", ")", ",", "[", "'a'", ",", "'b'", ",", "'Offset'", "]", ")", "#NEWLINE#", "self", ".", "assertEqual", "(", "len", "(", "equation", ".", "GetDataCacheFunctions", "(", ")", ")", ",", "1", ")", "#NEWLINE#", "self", ".", "assertFalse", "(", "equation", ".", "CanLinearSolverBeUsedForSSQABS", "(", ")", ")", "#NEWLINE#", "pyeq2", ".", "dataConvertorService", "(", ")", ".", "ConvertAndSortColumnarASCII", "(", "DataForUnitTests", ".", "asciiDataInColumns_2D", ",", "fittingTarget", ",", "False", ")", "#NEWLINE#", "equation", ".", "Solve", "(", ")", "#NEWLINE#", "fittingTarget", "=", "equation", ".", "CalculateAllDataFittingTarget", "(", "equation", ".", "solvedCoefficients", ")", "#NEWLINE#", "self", ".", "assertTrue", "(", "(", "fittingTarget", "<=", "0.018", ")", ")"], "error_location": [121], "repair_targets": [7, 26, 41, 54, 67, 88, 102, 126, 134, 138], "repair_candidates": [7, 26, 41, 54, 67, 88, 102, 126, 134, 138, 2, 22, 37, 50, 63, 82, 98, 143, 121, 132, 148], "provenances": [{"datasetProvenance": {"datasetName": "ETHPy150Open", "filepath": "zunzun/pyeq2/UnitTests/Test_ExtendedVersionHandlers.py", "license": "bsd-2-clause", "note": "license: bigquery_api"}}], "txt_file": "eval__VARIABLE_MISUSE__SStuB.txt-00003-of-00300", "js_count": 11749, "results": {"model": "transformer", "prob": {"loc": [[0.14267703890800476, 4.862843638875347e-07, 2.16585976886563e-06, 1.0080091428221749e-08, 1.4845046969469422e-08, 1.4406190018689813e-08, 1.4136416481846936e-08, 8.56629611689641e-08, 4.308045120637871e-08, 8.108720976451878e-06, 4.620852678272058e-08, 1.3970364989290829e-06, 9.356500640933518e-08, 4.241131534854503e-07, 1.1477224859390844e-07, 6.103191196871194e-08, 7.840929328040147e-08, 3.0446690288954414e-05, 1.3952868194166967e-08, 3.770074727071915e-06, 1.4478389154248816e-08, 2.3846427055218555e-09, 1.592634357727718e-09, 2.4555399491532626e-08, 3.5321801039600587e-09, 2.268214274181446e-07, 0.00023850807338021696, 2.946669042103167e-07, 1.1648863619484473e-05, 2.4812754872982623e-07, 5.190909746488614e-07, 2.774389713522396e-07, 1.8489483721850775e-08, 1.57651118826152e-08, 0.0010568361030891538, 1.441297925453e-08, 3.4353786482199666e-09, 4.742735537632825e-09, 2.0929443067529974e-08, 1.6796123603057822e-08, 3.3858249537388474e-08, 2.020505007749307e-07, 1.1643630415392181e-07, 2.5136181136531377e-08, 3.992793722318311e-07, 2.489633175173367e-07, 3.7039907141434014e-08, 0.00013369192311074585, 3.076261734236141e-08, 1.0124834304292563e-08, 3.5676936960271632e-09, 3.3130049814644735e-08, 2.368768470262239e-08, 3.776065682359331e-08, 2.7417900128057227e-07, 8.786517469161481e-08, 5.600582042575297e-08, 5.689095701200131e-07, 4.631715100344991e-08, 6.191870483007733e-08, 9.192143579639378e-08, 2.7081302533815688e-08, 1.1414399203601988e-08, 1.1177047731791845e-08, 4.12054639298276e-08, 7.328343087920075e-08, 1.1402731558973755e-07, 3.670659509680263e-07, 1.102342110925747e-07, 8.197780942964528e-08, 7.944664730530349e-07, 9.289700386716504e-08, 2.506618379527481e-08, 1.2537945792701066e-07, 8.153895123541588e-07, 3.8340086661037276e-08, 6.35065362075693e-07, 4.317340440707085e-08, 5.7489899063511984e-08, 3.88268155404603e-08, 3.19099378032206e-08, 2.5641528011988157e-08, 1.3779007268510668e-08, 5.262805657935132e-08, 5.0989413580282417e-08, 5.868968244726602e-08, 1.87279525221129e-07, 7.928413765512232e-07, 2.2840222300146706e-06, 2.025437879638048e-07, 1.2656168735247775e-07, 8.407586165048997e-07, 1.8056674377930904e-07, 3.956814609296089e-08, 4.8457263090995184e-08, 3.362301868037321e-05, 4.9271733360001235e-08, 5.0112980432004406e-08, 3.33065059976434e-08, 6.220006554258362e-08, 8.492114034197584e-08, 3.3998628623521654e-07, 4.4189881009515375e-05, 3.100618357620988e-07, 1.057185201602806e-07, 1.7039858448697487e-06, 2.9709300974900543e-07, 8.122140826571922e-08, 5.136511660452925e-08, 7.273224582604598e-07, 5.5062706394437555e-08, 9.030153513833739e-09, 1.0803123586811125e-06, 8.908307336241705e-07, 7.293201065294852e-07, 7.320464590065967e-08, 1.264917131038601e-07, 0.7839910387992859, 1.0985430520804584e-07, 1.339238480113636e-07, 7.172633331720135e-08, 0.00023819801572244614, 3.9678184293734375e-08, 1.749957618812914e-07, 4.919660767654932e-08, 4.552268606516918e-08, 2.856010894447536e-08, 7.789888201159556e-08, 1.7399703011733436e-08, 1.4598843335988931e-05, 1.7924905648669665e-07, 8.199000234299092e-08, 2.628315769470646e-07, 3.903308964936514e-08, 7.611864134560165e-07, 1.3526067732527736e-07, 1.9326938627273194e-07, 7.669721640013449e-07, 0.07049008458852768, 1.0099577139044413e-06, 6.155264031804109e-07, 5.9228224102980676e-08, 5.6522861058283524e-08, 9.482906904167976e-09, 6.043281075562845e-08, 3.8536128954547166e-08, 1.3058885315331281e-06, 1.6548021449125372e-05, 0.0008238516747951508, 8.797564987617079e-07, 0.00015576527221128345, 2.726949617226637e-07, 1.8854041172744473e-07]], "pointer": [[0.0, 0.0, 0.23449592292308807, 0.0, 0.0, 0.0, 0.0, 0.07959068566560745, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0018412680365145206, 0.0, 0.0, 0.0, 0.0004379016754683107, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0015217287000268698, 0.0, 0.0, 0.0, 0.014306058175861835, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0003314742643851787, 0.0, 0.0, 0.0, 0.005759406369179487, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.002029227092862129, 0.0, 0.0, 0.0, 0.025585085153579712, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0033007569145411253, 0.0, 0.0, 0.0, 0.0, 0.0, 0.12880215048789978, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.005748316645622253, 0.0, 0.0, 0.0, 0.4246327579021454, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.00034621584927663207, 0.0, 0.0, 0.0, 0.0, 0.05912991240620613, 0.0, 0.0, 0.0, 0.0, 0.0, 0.008416520431637764, 0.0, 0.002397907664999366, 0.0, 0.0, 0.0, 0.000388146610930562, 0.0, 0.0, 0.0, 0.0, 0.000920551479794085, 0.0, 0.0, 0.0, 0.0, 1.7911928807734512e-05, 0.0, 0.0, 0.0, 0.0]], "target": [0.7410299777984619]}, "loss": [8.342408180236816, 0.29971420764923096], "acc": [0.0, 0.0, 1.0, 0.0]}, "wrong_error_location": [117]}


Trace of simplified code(s):

{"result": {"time": "2021-02-21 05:54:23.875916", "n_pass": [1, 1, 1], "n_token": 153, "loss": [0.24335774779319763, 0.29971420764923096], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def test_ExtendedVersion_Exponential_WithLinearGrowthAndOffset_2D(", "self", ")", ":", "#NEWLINE#", "#INDENT#", "equation", "=", "pyeq2", ".", "Models_2D", ".", "Exponential", ".", "Exponential", "(", "'SSQABS'", ",", "'Linear Growth And Offset'", ")", "#NEWLINE#", "self", ".", "assertEqual", "(", "equation", ".", "extendedVersionHandler", ".", "__class__", ".", "__name__", ",", "'ExtendedVersionHandler_LinearGrowthAndOffset'", ")", "#NEWLINE#", "self", ".", "assertEqual", "(", "equation", ".", "GetDisplayHTML", "(", ")", ",", "'y = a * exp(bx)<br>y = y * x + Offset'", ")", "#NEWLINE#", "self", ".", "assertEqual", "(", "equation", ".", "GetDisplayName", "(", ")", ",", "'Exponential With Linear Growth And Offset'", ")", "#NEWLINE#", "self", ".", "assertEqual", "(", "equation", ".", "GetCoefficientDesignators", "(", ")", ",", "[", "'a'", ",", "'b'", ",", "'Offset'", "]", ")", "#NEWLINE#", "self", ".", "assertEqual", "(", "len", "(", "equation", ".", "GetDataCacheFunctions", "(", ")", ")", ",", "1", ")", "#NEWLINE#", "self", ".", "assertFalse", "(", "equation", ".", "CanLinearSolverBeUsedForSSQABS", "(", ")", ")", "#NEWLINE#", "pyeq2", ".", "dataConvertorService", "(", ")", ".", "ConvertAndSortColumnarASCII", "(", "DataForUnitTests", ".", "asciiDataInColumns_2D", ",", "fittingTarget", ",", "False", ")", "#NEWLINE#", "equation", ".", "Solve", "(", ")", "#NEWLINE#", "fittingTarget", "=", "equation", ".", "CalculateAllDataFittingTarget", "(", "equation", ".", "solvedCoefficients", ")", "#NEWLINE#", "self", ".", "assertTrue", "(", "(", "fittingTarget", "<=", "0.018", ")", ")"]}}
{"position": {"error_location": 117, "repair_targets": [7, 26, 41, 54, 67, 88, 102, 126, 134, 138], "repair_candidates": [7, 26, 41, 54, 67, 88, 102, 126, 134, 138, 2, 22, 37, 50, 63, 82, 98, 143, 121, 132, 148]}}
{"prediction": {"error_location": 0.7839910387992859, "repair_targets": [0.07959068566560745, 0.0004379016754683107, 0.014306058175861835, 0.005759406369179487, 0.025585085153579712, 0.12880215048789978, 0.4246327579021454, 0.05912991240620613, 0.002397907664999366, 0.000388146610930562], "repair_candidates": [0.23449592292308807, 0.07959068566560745, 0.0018412680365145206, 0.0004379016754683107, 0.0015217287000268698, 0.014306058175861835, 0.0003314742643851787, 0.005759406369179487, 0.002029227092862129, 0.025585085153579712, 0.0033007569145411253, 0.12880215048789978, 0.005748316645622253, 0.4246327579021454, 0.00034621584927663207, 0.05912991240620613, 0.008416520431637764, 0.002397907664999366, 0.000388146610930562, 0.000920551479794085, 1.7911928807734512e-05], "target_probs": 0.7410299777984619}}


{"result": {"time": "2021-02-21 05:54:24.159856", "n_pass": [94, 5, 2], "n_token": 149, "loss": [0.13681477308273315, 0.020952710881829262], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def test_ExtendedVersion_Exponential_WithLinearGrowthAndOffset_2D(", "self", ")", ":", "#NEWLINE#", "#INDENT#", "equation", ".", "Exponential", ".", "Exponential", "(", "'SSQABS'", ",", "'Linear Growth And Offset'", ")", "#NEWLINE#", "self", ".", "assertEqual", "(", "equation", ".", "extendedVersionHandler", ".", "__class__", ".", "__name__", ",", "'ExtendedVersionHandler_LinearGrowthAndOffset'", ")", "#NEWLINE#", "self", ".", "assertEqual", "(", "equation", ".", "GetDisplayHTML", "(", ")", ",", "'y = a * exp(bx)<br>y = y * x + Offset'", ")", "#NEWLINE#", "self", ".", "assertEqual", "(", "equation", ".", "GetDisplayName", "(", ")", ",", "'Exponential With Linear Growth And Offset'", ")", "#NEWLINE#", "self", ".", "assertEqual", "(", "equation", ".", "GetCoefficientDesignators", "(", ")", ",", "[", "'a'", ",", "'b'", ",", "'Offset'", "]", ")", "#NEWLINE#", "self", ".", "assertEqual", "(", "len", "(", "equation", ".", "GetDataCacheFunctions", "(", ")", ")", ",", "1", ")", "#NEWLINE#", "self", ".", "assertFalse", "(", "equation", ".", "CanLinearSolverBeUsedForSSQABS", "(", ")", ")", "#NEWLINE#", "pyeq2", ".", "dataConvertorService", "(", ")", ".", "ConvertAndSortColumnarASCII", "(", "DataForUnitTests", ".", "asciiDataInColumns_2D", ",", "fittingTarget", ",", "False", ")", "#NEWLINE#", "equation", ".", "Solve", "(", ")", "#NEWLINE#", "fittingTarget", "=", "equation", ".", "CalculateAllDataFittingTarget", "(", "equation", ".", "solvedCoefficients", ")", "#NEWLINE#", "self", ".", "assertTrue", "(", "(", "fittingTarget", "<=", "0.018", ")", ")"]}}
{"position": {"error_location": 113, "repair_targets": [7, 22, 37, 50, 63, 84, 98, 122, 130, 134], "repair_candidates": [7, 22, 37, 50, 63, 84, 98, 122, 130, 134, 2, 18, 33, 46, 59, 78, 94, 139, 117, 128, 144]}}
{"prediction": {"error_location": 0.8721317648887634, "repair_targets": [0.03900579735636711, 0.009674220345914364, 0.019412163645029068, 0.026185404509305954, 0.05578489601612091, 0.1371595561504364, 0.6049716472625732, 0.05876189470291138, 0.0033019650727510452, 0.025007765740156174], "repair_candidates": [0.012908296659588814, 0.03900579735636711, 0.0001438547915313393, 0.009674220345914364, 0.0001711404911475256, 0.019412163645029068, 0.0001709400094114244, 0.026185404509305954, 0.00022103269293438643, 0.05578489601612091, 0.0004205440927762538, 0.1371595561504364, 0.0007624726858921349, 0.6049716472625732, 5.1839953812304884e-05, 0.05876189470291138, 0.005763399414718151, 0.0033019650727510452, 0.025007765740156174, 9.72184570855461e-05, 2.400423545623198e-05], "target_probs": 0.9792652726173401}}


{"result": {"time": "2021-02-21 05:54:24.299054", "n_pass": [96, 7, 3], "n_token": 145, "loss": [0.7773610353469849, 0.16114017367362976], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def test_ExtendedVersion_Exponential_WithLinearGrowthAndOffset_2D(", "self", ")", ":", "#NEWLINE#", "#INDENT#", "equation", ".", "Exponential", ".", "Exponential", ")", "#NEWLINE#", "self", ".", "assertEqual", "(", "equation", ".", "extendedVersionHandler", ".", "__class__", ".", "__name__", ",", "'ExtendedVersionHandler_LinearGrowthAndOffset'", ")", "#NEWLINE#", "self", ".", "assertEqual", "(", "equation", ".", "GetDisplayHTML", "(", ")", ",", "'y = a * exp(bx)<br>y = y * x + Offset'", ")", "#NEWLINE#", "self", ".", "assertEqual", "(", "equation", ".", "GetDisplayName", "(", ")", ",", "'Exponential With Linear Growth And Offset'", ")", "#NEWLINE#", "self", ".", "assertEqual", "(", "equation", ".", "GetCoefficientDesignators", "(", ")", ",", "[", "'a'", ",", "'b'", ",", "'Offset'", "]", ")", "#NEWLINE#", "self", ".", "assertEqual", "(", "len", "(", "equation", ".", "GetDataCacheFunctions", "(", ")", ")", ",", "1", ")", "#NEWLINE#", "self", ".", "assertFalse", "(", "equation", ".", "CanLinearSolverBeUsedForSSQABS", "(", ")", ")", "#NEWLINE#", "pyeq2", ".", "dataConvertorService", "(", ")", ".", "ConvertAndSortColumnarASCII", "(", "DataForUnitTests", ".", "asciiDataInColumns_2D", ",", "fittingTarget", ",", "False", ")", "#NEWLINE#", "equation", ".", "Solve", "(", ")", "#NEWLINE#", "fittingTarget", "=", "equation", ".", "CalculateAllDataFittingTarget", "(", "equation", ".", "solvedCoefficients", ")", "#NEWLINE#", "self", ".", "assertTrue", "(", "(", "fittingTarget", "<=", "0.018", ")", ")"]}}
{"position": {"error_location": 109, "repair_targets": [7, 18, 33, 46, 59, 80, 94, 118, 126, 130], "repair_candidates": [7, 18, 33, 46, 59, 80, 94, 118, 126, 130, 2, 14, 29, 42, 55, 74, 90, 135, 113, 124, 140]}}
{"prediction": {"error_location": 0.4596173167228699, "repair_targets": [0.18653948605060577, 0.0035521085374057293, 0.02103566937148571, 0.04736945778131485, 0.05414602905511856, 0.16015416383743286, 0.252053827047348, 0.1122276708483696, 0.006214246153831482, 0.007880005054175854], "repair_candidates": [0.10187306255102158, 0.18653948605060577, 0.0036919463891535997, 0.0035521085374057293, 0.00433036545291543, 0.02103566937148571, 0.004946686793118715, 0.04736945778131485, 0.003165886038914323, 0.05414602905511856, 0.003132095094770193, 0.16015416383743286, 0.0048865363933146, 0.252053827047348, 4.800917668035254e-05, 0.1122276708483696, 0.021760303527116776, 0.006214246153831482, 0.007880005054175854, 0.0006956624565646052, 0.0002968301123473793], "target_probs": 0.8511727452278137}}


{"result": {"time": "2021-02-21 05:54:24.368321", "n_pass": [99, 8, 4], "n_token": 140, "loss": [0.8546660542488098, 0.2515343725681305], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def test_ExtendedVersion_Exponential_WithLinearGrowthAndOffset_2D(", "self", ")", ":", "#NEWLINE#", "#INDENT#", "equation", ".", "Exponential", ".", "Exponential", ")", "#NEWLINE#", "self", ".", "assertEqual", "(", "equation", ".", ",", "'ExtendedVersionHandler_LinearGrowthAndOffset'", ")", "#NEWLINE#", "self", ".", "assertEqual", "(", "equation", ".", "GetDisplayHTML", "(", ")", ",", "'y = a * exp(bx)<br>y = y * x + Offset'", ")", "#NEWLINE#", "self", ".", "assertEqual", "(", "equation", ".", "GetDisplayName", "(", ")", ",", "'Exponential With Linear Growth And Offset'", ")", "#NEWLINE#", "self", ".", "assertEqual", "(", "equation", ".", "GetCoefficientDesignators", "(", ")", ",", "[", "'a'", ",", "'b'", ",", "'Offset'", "]", ")", "#NEWLINE#", "self", ".", "assertEqual", "(", "len", "(", "equation", ".", "GetDataCacheFunctions", "(", ")", ")", ",", "1", ")", "#NEWLINE#", "self", ".", "assertFalse", "(", "equation", ".", "CanLinearSolverBeUsedForSSQABS", "(", ")", ")", "#NEWLINE#", "pyeq2", ".", "dataConvertorService", "(", ")", ".", "ConvertAndSortColumnarASCII", "(", "DataForUnitTests", ".", "asciiDataInColumns_2D", ",", "fittingTarget", ",", "False", ")", "#NEWLINE#", "equation", ".", "Solve", "(", ")", "#NEWLINE#", "fittingTarget", "=", "equation", ".", "CalculateAllDataFittingTarget", "(", "equation", ".", "solvedCoefficients", ")", "#NEWLINE#", "self", ".", "assertTrue", "(", "(", "fittingTarget", "<=", "0.018", ")", ")"]}}
{"position": {"error_location": 104, "repair_targets": [7, 18, 28, 41, 54, 75, 89, 113, 121, 125], "repair_candidates": [7, 18, 28, 41, 54, 75, 89, 113, 121, 125, 2, 14, 24, 37, 50, 69, 85, 130, 108, 119, 135]}}
{"prediction": {"error_location": 0.4254252314567566, "repair_targets": [0.11040385812520981, 0.0042728339321911335, 0.010841457173228264, 0.01602017506957054, 0.06769251823425293, 0.09510975331068039, 0.29323717951774597, 0.15801191329956055, 0.009690534323453903, 0.01232644822448492], "repair_candidates": [0.08742816001176834, 0.11040385812520981, 0.0039609321393072605, 0.0042728339321911335, 0.007159566506743431, 0.010841457173228264, 0.0029522296972572803, 0.01602017506957054, 0.005755340214818716, 0.06769251823425293, 0.002513105981051922, 0.09510975331068039, 0.007602586876600981, 0.29323717951774597, 4.876100501860492e-05, 0.15801191329956055, 0.10276849567890167, 0.009690534323453903, 0.01232644822448492, 0.001032856060191989, 0.0011713160201907158], "target_probs": 0.777606725692749}}


{"result": {"time": "2021-02-21 05:54:26.831733", "n_pass": [225, 44, 5], "n_token": 137, "loss": [0.8661144971847534, 0.45023560523986816], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def test_ExtendedVersion_Exponential_WithLinearGrowthAndOffset_2D(", "self", ")", ":", "#NEWLINE#", "#INDENT#", "equation", ".", "Exponential", ".", "Exponential", ")", "#NEWLINE#", "self", ".", "assertEqual", "(", "equation", ".", ",", "'ExtendedVersionHandler_LinearGrowthAndOffset'", ")", "#NEWLINE#", "self", ".", "assertEqual", "(", "equation", ".", "GetDisplayHTML", "(", ")", ",", "'y = a * exp(bx)<br>y = y * x + Offset'", ")", "#NEWLINE#", "self", ".", "assertEqual", "(", "equation", ".", "GetDisplayName", "(", ")", ",", "'Exponential With Linear Growth And Offset'", ")", "#NEWLINE#", "self", ".", "assertEqual", "(", "equation", ".", "GetCoefficientDesignators", "(", ")", ",", "[", "'a'", ",", "'b'", ",", "'Offset'", "]", ")", "#NEWLINE#", "self", ".", "assertEqual", "(", "len", "(", "equation", ".", "GetDataCacheFunctions", "(", ")", ")", ",", "1", ")", "#NEWLINE#", "self", ".", "assertFalse", "(", "equation", ".", "CanLinearSolverBeUsedForSSQABS", "(", ")", ")", "#NEWLINE#", "pyeq2", ".", "dataConvertorService", "(", ")", ".", "ConvertAndSortColumnarASCII", "(", "DataForUnitTests", ".", "asciiDataInColumns_2D", ",", "fittingTarget", ",", "equation", ".", "Solve", "(", ")", "#NEWLINE#", "fittingTarget", "=", "equation", ".", "CalculateAllDataFittingTarget", "(", "equation", ".", "solvedCoefficients", ")", "#NEWLINE#", "self", ".", "assertTrue", "(", "(", "fittingTarget", "<=", "0.018", ")", ")"]}}
{"position": {"error_location": 104, "repair_targets": [7, 18, 28, 41, 54, 75, 89, 110, 118, 122], "repair_candidates": [7, 18, 28, 41, 54, 75, 89, 110, 118, 122, 2, 14, 24, 37, 50, 69, 85, 127, 108, 116, 132]}}
{"prediction": {"error_location": 0.42058253288269043, "repair_targets": [0.08230434358119965, 0.004214530810713768, 0.008792534470558167, 0.01224423199892044, 0.050465259701013565, 0.06886080652475357, 0.28646665811538696, 0.08476999402046204, 0.027709461748600006, 0.01165013201534748], "repair_candidates": [0.213080495595932, 0.08230434358119965, 0.007849445566534996, 0.004214530810713768, 0.014605168253183365, 0.008792534470558167, 0.006285583600401878, 0.01224423199892044, 0.008941593579947948, 0.050465259701013565, 0.00599889038130641, 0.06886080652475357, 0.018203243613243103, 0.28646665811538696, 0.00018648979312274605, 0.08476999402046204, 0.08539583534002304, 0.027709461748600006, 0.01165013201534748, 0.0016290186904370785, 0.0003462864551693201], "target_probs": 0.6374779343605042}}


{"result": {"time": "2021-02-21 05:54:26.968591", "n_pass": [229, 46, 6], "n_token": 134, "loss": [0.5605015158653259, 0.15029045939445496], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def test_ExtendedVersion_Exponential_WithLinearGrowthAndOffset_2D(", "self", ")", ":", "#NEWLINE#", "#INDENT#", "equation", ".", "Exponential", ".", "Exponential", ")", "#NEWLINE#", "self", ".", "assertEqual", "(", "equation", ".", ",", "'ExtendedVersionHandler_LinearGrowthAndOffset'", ")", "#NEWLINE#", "self", ".", "assertEqual", "(", "equation", ".", "GetDisplayHTML", "(", ")", ",", "'y = a * exp(bx)<br>y = y * x + Offset'", ")", "#NEWLINE#", "self", ".", "assertEqual", "(", "equation", ".", "GetDisplayName", "(", ")", ",", "'Exponential With Linear Growth And Offset'", ")", "#NEWLINE#", "self", ".", "assertEqual", "(", "equation", ".", "GetCoefficientDesignators", "(", ")", ",", "[", "'a'", ",", "'b'", ",", "'Offset'", "]", ")", "#NEWLINE#", "self", ".", "assertEqual", "(", "len", "(", "equation", ".", "GetDataCacheFunctions", "(", ")", ")", ",", "1", ")", "#NEWLINE#", "self", ".", "assertFalse", "(", "equation", ".", "CanLinearSolverBeUsedForSSQABS", "(", ")", ")", "#NEWLINE#", "pyeq2", ".", "dataConvertorService", "(", ")", ".", "ConvertAndSortColumnarASCII", "(", "DataForUnitTests", ".", "asciiDataInColumns_2D", ",", "fittingTarget", ",", "equation", ".", "Solve", "(", ")", "#NEWLINE#", "fittingTarget", "=", "equation", "equation", ".", "solvedCoefficients", ")", "#NEWLINE#", "self", ".", "assertTrue", "(", "(", "fittingTarget", "<=", "0.018", ")", ")"]}}
{"position": {"error_location": 104, "repair_targets": [7, 18, 28, 41, 54, 75, 89, 110, 118, 119], "repair_candidates": [7, 18, 28, 41, 54, 75, 89, 110, 118, 119, 2, 14, 24, 37, 50, 69, 85, 124, 108, 116, 129]}}
{"prediction": {"error_location": 0.5709226727485657, "repair_targets": [0.13136699795722961, 0.02294611930847168, 0.016624348238110542, 0.01790487952530384, 0.061421316117048264, 0.11035403609275818, 0.2687431573867798, 0.058786168694496155, 0.08777942508459091, 0.08453155308961868], "repair_candidates": [0.04180385172367096, 0.13136699795722961, 0.0036391541361808777, 0.02294611930847168, 0.0064247772097587585, 0.016624348238110542, 0.002298635896295309, 0.01790487952530384, 0.003618117654696107, 0.061421316117048264, 0.0013993708416819572, 0.11035403609275818, 0.006961456965655088, 0.2687431573867798, 0.0004892467986792326, 0.058786168694496155, 0.07238280028104782, 0.08777942508459091, 0.08453155308961868, 0.0004138035874348134, 0.00011081526463385671], "target_probs": 0.8604580163955688}}


{"result": {"time": "2021-02-21 05:54:27.038048", "n_pass": [232, 47, 7], "n_token": 131, "loss": [0.6274732351303101, 0.16294632852077484], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def test_ExtendedVersion_Exponential_WithLinearGrowthAndOffset_2D(", "self", ")", ":", "#NEWLINE#", "#INDENT#", "equation", ".", "Exponential", ".", "Exponential", ")", "#NEWLINE#", "self", ".", "assertEqual", "(", "equation", ".", ",", "'ExtendedVersionHandler_LinearGrowthAndOffset'", ")", "#NEWLINE#", "self", ".", "assertEqual", "(", "equation", ".", "GetDisplayHTML", "(", ")", ",", "'y = a * exp(bx)<br>y = y * x + Offset'", ")", "#NEWLINE#", "self", ".", "assertEqual", "(", "equation", ".", "GetDisplayName", "(", ")", ",", "'Exponential With Linear Growth And Offset'", ")", "#NEWLINE#", "self", ".", "assertEqual", "(", "equation", ".", "GetCoefficientDesignators", "(", ")", ",", "[", "'a'", ",", "'b'", ",", "'Offset'", "]", ")", "#NEWLINE#", "self", ".", "assertEqual", "(", "len", "(", "equation", ".", "GetDataCacheFunctions", "(", ")", ")", ",", "1", ")", "#NEWLINE#", "self", ".", "assertFalse", "(", "equation", ".", "CanLinearSolverBeUsedForSSQABS", "(", ")", ")", "#NEWLINE#", "pyeq2", ".", "dataConvertorService", "(", ")", ".", "ConvertAndSortColumnarASCII", "(", "DataForUnitTests", ".", "asciiDataInColumns_2D", ",", "fittingTarget", ",", "equation", ".", "Solve", "(", ")", "#NEWLINE#", "fittingTarget", "=", "equation", "equation", ".", "solvedCoefficients", ")", "#NEWLINE#", "self", "(", "fittingTarget", "<=", "0.018", ")", ")"]}}
{"position": {"error_location": 104, "repair_targets": [7, 18, 28, 41, 54, 75, 89, 110, 118, 119], "repair_candidates": [7, 18, 28, 41, 54, 75, 89, 110, 118, 119, 2, 14, 24, 37, 50, 69, 85, 124, 108, 116, 126]}}
{"prediction": {"error_location": 0.5339392423629761, "repair_targets": [0.1717250943183899, 0.03231963515281677, 0.024470767006278038, 0.020641734823584557, 0.06377827376127243, 0.07749414443969727, 0.20881196856498718, 0.07733672857284546, 0.090043805539608, 0.08301462233066559], "repair_candidates": [0.05528945103287697, 0.1717250943183899, 0.004381460603326559, 0.03231963515281677, 0.0065057119354605675, 0.024470767006278038, 0.0023037430364638567, 0.020641734823584557, 0.0022910856641829014, 0.06377827376127243, 0.0013106019468978047, 0.07749414443969727, 0.004179997369647026, 0.20881196856498718, 0.0004231604980304837, 0.07733672857284546, 0.07033957540988922, 0.090043805539608, 0.08301462233066559, 0.003205288667231798, 0.0001331934763584286], "target_probs": 0.8496367931365967}}


{"result": {"time": "2021-02-21 05:54:27.107986", "n_pass": [234, 48, 8], "n_token": 128, "loss": [0.5361617803573608, 0.21592286229133606], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def test_ExtendedVersion_Exponential_WithLinearGrowthAndOffset_2D(", "self", ")", ":", "#NEWLINE#", "#INDENT#", "equation", ".", "Exponential", ".", "Exponential", ")", "#NEWLINE#", "self", ".", "assertEqual", "(", "equation", ".", ",", "'ExtendedVersionHandler_LinearGrowthAndOffset'", ")", "#NEWLINE#", "self", ".", "assertEqual", "(", "equation", ".", "GetDisplayHTML", "(", ")", ",", "'y = a * exp(bx)<br>y = y * x + Offset'", ")", "#NEWLINE#", "self", ".", "assertEqual", "(", "equation", ".", "GetDisplayName", "(", ")", ",", "'Exponential With Linear Growth And Offset'", ")", "#NEWLINE#", "self", ".", "assertEqual", "(", "equation", ".", "GetCoefficientDesignators", "(", ")", ",", "[", "'a'", ",", "'b'", ",", "'Offset'", "]", ")", "#NEWLINE#", "self", ".", "assertEqual", "(", "len", "(", "equation", ".", "GetDataCacheFunctions", "(", ")", ")", ",", "1", ")", "#NEWLINE#", "self", ".", "assertFalse", "(", "equation", ".", "CanLinearSolverBeUsedForSSQABS", "(", ")", ")", "#NEWLINE#", "pyeq2", ".", "dataConvertorService", "(", ")", ".", "ConvertAndSortColumnarASCII", "(", "DataForUnitTests", ".", "asciiDataInColumns_2D", ",", "fittingTarget", ",", "equation", ".", "Solve", "(", ")", "#NEWLINE#", "fittingTarget", "=", "equation", "equation", ".", "solvedCoefficients", ")", "#NEWLINE#", "self", "(", "fittingTarget", "<="]}}
{"position": {"error_location": 104, "repair_targets": [7, 18, 28, 41, 54, 75, 89, 110, 118, 119], "repair_candidates": [7, 18, 28, 41, 54, 75, 89, 110, 118, 119, 2, 14, 24, 37, 50, 69, 85, 124, 108, 116, 126]}}
{"prediction": {"error_location": 0.5849892497062683, "repair_targets": [0.17018884420394897, 0.03001367673277855, 0.01891603320837021, 0.016395656391978264, 0.05020042881369591, 0.06134888529777527, 0.1861231029033661, 0.08233577758073807, 0.10107619315385818, 0.08919885009527206], "repair_candidates": [0.06595464795827866, 0.17018884420394897, 0.0036922255530953407, 0.03001367673277855, 0.005225527100265026, 0.01891603320837021, 0.002002130262553692, 0.016395656391978264, 0.0017685546772554517, 0.05020042881369591, 0.0012314703781157732, 0.06134888529777527, 0.003115443279966712, 0.1861231029033661, 0.0005796265904791653, 0.08233577758073807, 0.10347699373960495, 0.10107619315385818, 0.08919885009527206, 0.006813445594161749, 0.00034249178133904934], "target_probs": 0.8057974576950073}}


{"result": {"time": "2021-02-21 05:54:27.176183", "n_pass": [235, 49, 9], "n_token": 126, "loss": [0.07149776816368103, 0.22179239988327026], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["self", ")", ":", "#NEWLINE#", "#INDENT#", "equation", ".", "Exponential", ".", "Exponential", ")", "#NEWLINE#", "self", ".", "assertEqual", "(", "equation", ".", ",", "'ExtendedVersionHandler_LinearGrowthAndOffset'", ")", "#NEWLINE#", "self", ".", "assertEqual", "(", "equation", ".", "GetDisplayHTML", "(", ")", ",", "'y = a * exp(bx)<br>y = y * x + Offset'", ")", "#NEWLINE#", "self", ".", "assertEqual", "(", "equation", ".", "GetDisplayName", "(", ")", ",", "'Exponential With Linear Growth And Offset'", ")", "#NEWLINE#", "self", ".", "assertEqual", "(", "equation", ".", "GetCoefficientDesignators", "(", ")", ",", "[", "'a'", ",", "'b'", ",", "'Offset'", "]", ")", "#NEWLINE#", "self", ".", "assertEqual", "(", "len", "(", "equation", ".", "GetDataCacheFunctions", "(", ")", ")", ",", "1", ")", "#NEWLINE#", "self", ".", "assertFalse", "(", "equation", ".", "CanLinearSolverBeUsedForSSQABS", "(", ")", ")", "#NEWLINE#", "pyeq2", ".", "dataConvertorService", "(", ")", ".", "ConvertAndSortColumnarASCII", "(", "DataForUnitTests", ".", "asciiDataInColumns_2D", ",", "fittingTarget", ",", "equation", ".", "Solve", "(", ")", "#NEWLINE#", "fittingTarget", "=", "equation", "equation", ".", "solvedCoefficients", ")", "#NEWLINE#", "self", "(", "fittingTarget", "<="]}}
{"position": {"error_location": 102, "repair_targets": [5, 16, 26, 39, 52, 73, 87, 108, 116, 117], "repair_candidates": [5, 16, 26, 39, 52, 73, 87, 108, 116, 117, 0, 12, 22, 35, 48, 67, 83, 122, 106, 114, 124]}}
{"prediction": {"error_location": 0.9309984445571899, "repair_targets": [0.11730965971946716, 0.056231893599033356, 0.039023205637931824, 0.0058135692961514, 0.06352656334638596, 0.03365626931190491, 0.20142950117588043, 0.031209545210003853, 0.16763395071029663, 0.0852474644780159], "repair_candidates": [0.17972278594970703, 0.11730965971946716, 0.0005272451671771705, 0.056231893599033356, 0.0007471935823559761, 0.039023205637931824, 0.0002704331709537655, 0.0058135692961514, 0.0003955929132644087, 0.06352656334638596, 0.00014838256174698472, 0.03365626931190491, 0.00031897041480988264, 0.20142950117588043, 4.580835593515076e-05, 0.031209545210003853, 0.01535874605178833, 0.16763395071029663, 0.0852474644780159, 0.00133636430837214, 4.681808059103787e-05], "target_probs": 0.801081657409668}}


{"result": {"time": "2021-02-21 05:54:27.244236", "n_pass": [237, 50, 10], "n_token": 124, "loss": [0.09927838295698166, 0.38578397035598755], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["self", ")", "#INDENT#", "equation", ".", "Exponential", ".", "Exponential", ")", "#NEWLINE#", "self", ".", "assertEqual", "(", "equation", ".", ",", "'ExtendedVersionHandler_LinearGrowthAndOffset'", ")", "#NEWLINE#", "self", ".", "assertEqual", "(", "equation", ".", "GetDisplayHTML", "(", ")", ",", "'y = a * exp(bx)<br>y = y * x + Offset'", ")", "#NEWLINE#", "self", ".", "assertEqual", "(", "equation", ".", "GetDisplayName", "(", ")", ",", "'Exponential With Linear Growth And Offset'", ")", "#NEWLINE#", "self", ".", "assertEqual", "(", "equation", ".", "GetCoefficientDesignators", "(", ")", ",", "[", "'a'", ",", "'b'", ",", "'Offset'", "]", ")", "#NEWLINE#", "self", ".", "assertEqual", "(", "len", "(", "equation", ".", "GetDataCacheFunctions", "(", ")", ")", ",", "1", ")", "#NEWLINE#", "self", ".", "assertFalse", "(", "equation", ".", "CanLinearSolverBeUsedForSSQABS", "(", ")", ")", "#NEWLINE#", "pyeq2", ".", "dataConvertorService", "(", ")", ".", "ConvertAndSortColumnarASCII", "(", "DataForUnitTests", ".", "asciiDataInColumns_2D", ",", "fittingTarget", ",", "equation", ".", "Solve", "(", ")", "#NEWLINE#", "fittingTarget", "=", "equation", "equation", ".", "solvedCoefficients", ")", "#NEWLINE#", "self", "(", "fittingTarget", "<="]}}
{"position": {"error_location": 100, "repair_targets": [3, 14, 24, 37, 50, 71, 85, 106, 114, 115], "repair_candidates": [3, 14, 24, 37, 50, 71, 85, 106, 114, 115, 0, 10, 20, 33, 46, 65, 81, 120, 104, 112, 122]}}
{"prediction": {"error_location": 0.9054905772209167, "repair_targets": [0.010780837386846542, 0.04922366887331009, 0.0688876286149025, 0.006554100662469864, 0.11658647656440735, 0.027068203315138817, 0.1989411860704422, 0.035000406205654144, 0.11255617439746857, 0.054318733513355255], "repair_candidates": [0.3021045923233032, 0.010780837386846542, 0.00046800437849015, 0.04922366887331009, 0.0005473331548273563, 0.0688876286149025, 0.00021892855875194073, 0.006554100662469864, 0.00045413782936520875, 0.11658647656440735, 0.00011309700494166464, 0.027068203315138817, 0.0002753245353233069, 0.1989411860704422, 0.00012959688319824636, 0.035000406205654144, 0.014419874176383018, 0.11255617439746857, 0.054318733513355255, 0.0012856334215030074, 6.608432158827782e-05], "target_probs": 0.6799173951148987}}


{"result": {"time": "2021-02-21 05:54:27.312973", "n_pass": [239, 51, 11], "n_token": 122, "loss": [0.07866079360246658, 0.16209495067596436], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["self", ")", "#INDENT#", "equation", ".", "Exponential", ")", "#NEWLINE#", "self", ".", "assertEqual", "(", "equation", ".", ",", "'ExtendedVersionHandler_LinearGrowthAndOffset'", ")", "#NEWLINE#", "self", ".", "assertEqual", "(", "equation", ".", "GetDisplayHTML", "(", ")", ",", "'y = a * exp(bx)<br>y = y * x + Offset'", ")", "#NEWLINE#", "self", ".", "assertEqual", "(", "equation", ".", "GetDisplayName", "(", ")", ",", "'Exponential With Linear Growth And Offset'", ")", "#NEWLINE#", "self", ".", "assertEqual", "(", "equation", ".", "GetCoefficientDesignators", "(", ")", ",", "[", "'a'", ",", "'b'", ",", "'Offset'", "]", ")", "#NEWLINE#", "self", ".", "assertEqual", "(", "len", "(", "equation", ".", "GetDataCacheFunctions", "(", ")", ")", ",", "1", ")", "#NEWLINE#", "self", ".", "assertFalse", "(", "equation", ".", "CanLinearSolverBeUsedForSSQABS", "(", ")", ")", "#NEWLINE#", "pyeq2", ".", "dataConvertorService", "(", ")", ".", "ConvertAndSortColumnarASCII", "(", "DataForUnitTests", ".", "asciiDataInColumns_2D", ",", "fittingTarget", ",", "equation", ".", "Solve", "(", ")", "#NEWLINE#", "fittingTarget", "=", "equation", "equation", ".", "solvedCoefficients", ")", "#NEWLINE#", "self", "(", "fittingTarget", "<="]}}
{"position": {"error_location": 98, "repair_targets": [3, 12, 22, 35, 48, 69, 83, 104, 112, 113], "repair_candidates": [3, 12, 22, 35, 48, 69, 83, 104, 112, 113, 0, 8, 18, 31, 44, 63, 79, 118, 102, 110, 120]}}
{"prediction": {"error_location": 0.924353301525116, "repair_targets": [0.016521412879228592, 0.04961328208446503, 0.11967247724533081, 0.00747516518458724, 0.15477998554706573, 0.012443997897207737, 0.17617030441761017, 0.03423910588026047, 0.1763913780450821, 0.10305330157279968], "repair_candidates": [0.13817723095417023, 0.016521412879228592, 0.00030096241971477866, 0.04961328208446503, 0.00029994038050062954, 0.11967247724533081, 0.00015426015306729823, 0.00747516518458724, 0.00022809351503383368, 0.15477998554706573, 6.353887147270143e-05, 0.012443997897207737, 0.00010925911919912323, 0.17617030441761017, 0.0003437756095081568, 0.03423910588026047, 0.008943206630647182, 0.1763913780450821, 0.10305330157279968, 0.0009868121705949306, 3.249554356443696e-05], "target_probs": 0.8503604531288147}}


{"result": {"time": "2021-02-21 05:54:27.382771", "n_pass": [240, 52, 12], "n_token": 120, "loss": [0.1535949409008026, 0.11253699660301208], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["self", ")", "#INDENT#", "equation", ")", "#NEWLINE#", "self", ".", "assertEqual", "(", "equation", ".", ",", "'ExtendedVersionHandler_LinearGrowthAndOffset'", ")", "#NEWLINE#", "self", ".", "assertEqual", "(", "equation", ".", "GetDisplayHTML", "(", ")", ",", "'y = a * exp(bx)<br>y = y * x + Offset'", ")", "#NEWLINE#", "self", ".", "assertEqual", "(", "equation", ".", "GetDisplayName", "(", ")", ",", "'Exponential With Linear Growth And Offset'", ")", "#NEWLINE#", "self", ".", "assertEqual", "(", "equation", ".", "GetCoefficientDesignators", "(", ")", ",", "[", "'a'", ",", "'b'", ",", "'Offset'", "]", ")", "#NEWLINE#", "self", ".", "assertEqual", "(", "len", "(", "equation", ".", "GetDataCacheFunctions", "(", ")", ")", ",", "1", ")", "#NEWLINE#", "self", ".", "assertFalse", "(", "equation", ".", "CanLinearSolverBeUsedForSSQABS", "(", ")", ")", "#NEWLINE#", "pyeq2", ".", "dataConvertorService", "(", ")", ".", "ConvertAndSortColumnarASCII", "(", "DataForUnitTests", ".", "asciiDataInColumns_2D", ",", "fittingTarget", ",", "equation", ".", "Solve", "(", ")", "#NEWLINE#", "fittingTarget", "=", "equation", "equation", ".", "solvedCoefficients", ")", "#NEWLINE#", "self", "(", "fittingTarget", "<="]}}
{"position": {"error_location": 96, "repair_targets": [3, 10, 20, 33, 46, 67, 81, 102, 110, 111], "repair_candidates": [3, 10, 20, 33, 46, 67, 81, 102, 110, 111, 0, 6, 16, 29, 42, 61, 77, 116, 100, 108, 118]}}
{"prediction": {"error_location": 0.8576194047927856, "repair_targets": [0.45434248447418213, 0.02208751067519188, 0.03108469769358635, 0.0038830353878438473, 0.12231877446174622, 0.004983008839190006, 0.14222803711891174, 0.017838306725025177, 0.08293578773736954, 0.011862634681165218], "repair_candidates": [0.0902080312371254, 0.45434248447418213, 0.0018273586174473166, 0.02208751067519188, 0.0005072937346994877, 0.03108469769358635, 0.0004951544688083231, 0.0038830353878438473, 0.0005130788194946945, 0.12231877446174622, 0.0003611261781770736, 0.004983008839190006, 0.0003560988698154688, 0.14222803711891174, 0.00018369931785855442, 0.017838306725025177, 0.010299327783286572, 0.08293578773736954, 0.011862634681165218, 0.0016170620219781995, 6.751988985342905e-05], "target_probs": 0.8935642838478088}}


{"result": {"time": "2021-02-21 05:54:27.518596", "n_pass": [243, 54, 13], "n_token": 118, "loss": [0.5237056016921997, 0.42845064401626587], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["self", ")", "#INDENT#", "equation", ")", "#NEWLINE#", "self", ".", "equation", ".", ",", "'ExtendedVersionHandler_LinearGrowthAndOffset'", ")", "#NEWLINE#", "self", ".", "assertEqual", "(", "equation", ".", "GetDisplayHTML", "(", ")", ",", "'y = a * exp(bx)<br>y = y * x + Offset'", ")", "#NEWLINE#", "self", ".", "assertEqual", "(", "equation", ".", "GetDisplayName", "(", ")", ",", "'Exponential With Linear Growth And Offset'", ")", "#NEWLINE#", "self", ".", "assertEqual", "(", "equation", ".", "GetCoefficientDesignators", "(", ")", ",", "[", "'a'", ",", "'b'", ",", "'Offset'", "]", ")", "#NEWLINE#", "self", ".", "assertEqual", "(", "len", "(", "equation", ".", "GetDataCacheFunctions", "(", ")", ")", ",", "1", ")", "#NEWLINE#", "self", ".", "assertFalse", "(", "equation", ".", "CanLinearSolverBeUsedForSSQABS", "(", ")", ")", "#NEWLINE#", "pyeq2", ".", "dataConvertorService", "(", ")", ".", "ConvertAndSortColumnarASCII", "(", "DataForUnitTests", ".", "asciiDataInColumns_2D", ",", "fittingTarget", ",", "equation", ".", "Solve", "(", ")", "#NEWLINE#", "fittingTarget", "=", "equation", "equation", ".", "solvedCoefficients", ")", "#NEWLINE#", "self", "(", "fittingTarget", "<="]}}
{"position": {"error_location": 94, "repair_targets": [3, 8, 18, 31, 44, 65, 79, 100, 108, 109], "repair_candidates": [3, 8, 18, 31, 44, 65, 79, 100, 108, 109, 0, 6, 14, 27, 40, 59, 75, 114, 98, 106, 116]}}
{"prediction": {"error_location": 0.592321515083313, "repair_targets": [0.16847380995750427, 0.00322895054705441, 0.018915358930826187, 0.0027093165554106236, 0.09617789834737778, 0.018274612724781036, 0.22834204137325287, 0.08145678043365479, 0.03315484896302223, 0.000784137926530093], "repair_candidates": [0.15625537931919098, 0.16847380995750427, 0.10773234814405441, 0.00322895054705441, 0.005243169143795967, 0.018915358930826187, 0.0062285554595291615, 0.0027093165554106236, 0.0040990374982357025, 0.09617789834737778, 0.006662861909717321, 0.018274612724781036, 0.003414867678657174, 0.22834204137325287, 0.0013808476505801082, 0.08145678043365479, 0.04832639545202255, 0.03315484896302223, 0.000784137926530093, 0.008775954134762287, 0.000362916209269315], "target_probs": 0.6515177488327026}}


{"result": {"time": "2021-02-21 05:54:27.587053", "n_pass": [245, 55, 14], "n_token": 116, "loss": [0.05336024984717369, 0.08802395313978195], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["self", ")", "#INDENT#", "equation", ")", "#NEWLINE#", "self", ".", "equation", ".", ")", "#NEWLINE#", "self", ".", "assertEqual", "(", "equation", ".", "GetDisplayHTML", "(", ")", ",", "'y = a * exp(bx)<br>y = y * x + Offset'", ")", "#NEWLINE#", "self", ".", "assertEqual", "(", "equation", ".", "GetDisplayName", "(", ")", ",", "'Exponential With Linear Growth And Offset'", ")", "#NEWLINE#", "self", ".", "assertEqual", "(", "equation", ".", "GetCoefficientDesignators", "(", ")", ",", "[", "'a'", ",", "'b'", ",", "'Offset'", "]", ")", "#NEWLINE#", "self", ".", "assertEqual", "(", "len", "(", "equation", ".", "GetDataCacheFunctions", "(", ")", ")", ",", "1", ")", "#NEWLINE#", "self", ".", "assertFalse", "(", "equation", ".", "CanLinearSolverBeUsedForSSQABS", "(", ")", ")", "#NEWLINE#", "pyeq2", ".", "dataConvertorService", "(", ")", ".", "ConvertAndSortColumnarASCII", "(", "DataForUnitTests", ".", "asciiDataInColumns_2D", ",", "fittingTarget", ",", "equation", ".", "Solve", "(", ")", "#NEWLINE#", "fittingTarget", "=", "equation", "equation", ".", "solvedCoefficients", ")", "#NEWLINE#", "self", "(", "fittingTarget", "<="]}}
{"position": {"error_location": 92, "repair_targets": [3, 8, 16, 29, 42, 63, 77, 98, 106, 107], "repair_candidates": [3, 8, 16, 29, 42, 63, 77, 98, 106, 107, 0, 6, 12, 25, 38, 57, 73, 112, 96, 104, 114]}}
{"prediction": {"error_location": 0.9480385184288025, "repair_targets": [0.10428187251091003, 0.002805424388498068, 0.035524632781744, 0.004989520646631718, 0.07164303958415985, 0.027610795572400093, 0.46549829840660095, 0.04028298333287239, 0.1570151299238205, 0.006087243091315031], "repair_candidates": [0.052471376955509186, 0.10428187251091003, 0.016150157898664474, 0.002805424388498068, 0.0022204217966645956, 0.035524632781744, 0.0011220454471185803, 0.004989520646631718, 0.0008908360614441335, 0.07164303958415985, 0.0011978144757449627, 0.027610795572400093, 0.001037809532135725, 0.46549829840660095, 0.00048436096403747797, 0.04028298333287239, 0.007453421596437693, 0.1570151299238205, 0.006087243091315031, 0.001182131702080369, 5.06764481542632e-05], "target_probs": 0.9157389402389526}}


{"result": {"time": "2021-02-21 05:54:27.656764", "n_pass": [246, 56, 15], "n_token": 114, "loss": [0.03464082255959511, 0.08517476916313171], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["self", ")", "#INDENT#", "equation", ")", "#NEWLINE#", "self", ".", "equation", ".", "self", ".", "assertEqual", "(", "equation", ".", "GetDisplayHTML", "(", ")", ",", "'y = a * exp(bx)<br>y = y * x + Offset'", ")", "#NEWLINE#", "self", ".", "assertEqual", "(", "equation", ".", "GetDisplayName", "(", ")", ",", "'Exponential With Linear Growth And Offset'", ")", "#NEWLINE#", "self", ".", "assertEqual", "(", "equation", ".", "GetCoefficientDesignators", "(", ")", ",", "[", "'a'", ",", "'b'", ",", "'Offset'", "]", ")", "#NEWLINE#", "self", ".", "assertEqual", "(", "len", "(", "equation", ".", "GetDataCacheFunctions", "(", ")", ")", ",", "1", ")", "#NEWLINE#", "self", ".", "assertFalse", "(", "equation", ".", "CanLinearSolverBeUsedForSSQABS", "(", ")", ")", "#NEWLINE#", "pyeq2", ".", "dataConvertorService", "(", ")", ".", "ConvertAndSortColumnarASCII", "(", "DataForUnitTests", ".", "asciiDataInColumns_2D", ",", "fittingTarget", ",", "equation", ".", "Solve", "(", ")", "#NEWLINE#", "fittingTarget", "=", "equation", "equation", ".", "solvedCoefficients", ")", "#NEWLINE#", "self", "(", "fittingTarget", "<="]}}
{"position": {"error_location": 90, "repair_targets": [3, 8, 14, 27, 40, 61, 75, 96, 104, 105], "repair_candidates": [3, 8, 14, 27, 40, 61, 75, 96, 104, 105, 0, 6, 10, 23, 36, 55, 71, 110, 94, 102, 112]}}
{"prediction": {"error_location": 0.9659523963928223, "repair_targets": [0.12082131206989288, 0.00035586426383815706, 0.048489201813936234, 0.007498395629227161, 0.03238817676901817, 0.021639350801706314, 0.33383268117904663, 0.03893733024597168, 0.2843082547187805, 0.03008118085563183], "repair_candidates": [0.05762501060962677, 0.12082131206989288, 0.011387867853045464, 0.00035586426383815706, 0.00256140879355371, 0.048489201813936234, 0.0008582934970036149, 0.007498395629227161, 0.0007217740057967603, 0.03238817676901817, 0.000578082341235131, 0.021639350801706314, 0.0011141585418954492, 0.33383268117904663, 0.0002480637049302459, 0.03893733024597168, 0.0058382549323141575, 0.2843082547187805, 0.03008118085563183, 0.0006794172222726047, 3.599155388656072e-05], "target_probs": 0.9183517694473267}}


{"result": {"time": "2021-02-21 05:54:27.724652", "n_pass": [248, 57, 16], "n_token": 112, "loss": [0.05123274028301239, 0.1567200869321823], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["self", ")", "#INDENT#", "equation", ")", "#NEWLINE#", "self", ".", "equation", ".", "self", ".", "equation", ".", "GetDisplayHTML", "(", ")", ",", "'y = a * exp(bx)<br>y = y * x + Offset'", ")", "#NEWLINE#", "self", ".", "assertEqual", "(", "equation", ".", "GetDisplayName", "(", ")", ",", "'Exponential With Linear Growth And Offset'", ")", "#NEWLINE#", "self", ".", "assertEqual", "(", "equation", ".", "GetCoefficientDesignators", "(", ")", ",", "[", "'a'", ",", "'b'", ",", "'Offset'", "]", ")", "#NEWLINE#", "self", ".", "assertEqual", "(", "len", "(", "equation", ".", "GetDataCacheFunctions", "(", ")", ")", ",", "1", ")", "#NEWLINE#", "self", ".", "assertFalse", "(", "equation", ".", "CanLinearSolverBeUsedForSSQABS", "(", ")", ")", "#NEWLINE#", "pyeq2", ".", "dataConvertorService", "(", ")", ".", "ConvertAndSortColumnarASCII", "(", "DataForUnitTests", ".", "asciiDataInColumns_2D", ",", "fittingTarget", ",", "equation", ".", "Solve", "(", ")", "#NEWLINE#", "fittingTarget", "=", "equation", "equation", ".", "solvedCoefficients", ")", "#NEWLINE#", "self", "(", "fittingTarget", "<="]}}
{"position": {"error_location": 88, "repair_targets": [3, 8, 12, 25, 38, 59, 73, 94, 102, 103], "repair_candidates": [3, 8, 12, 25, 38, 59, 73, 94, 102, 103, 0, 6, 10, 21, 34, 53, 69, 108, 92, 100, 110]}}
{"prediction": {"error_location": 0.9500575065612793, "repair_targets": [0.14975197613239288, 0.0004758474533446133, 0.0005999752320349216, 0.013565931469202042, 0.03592243418097496, 0.057105906307697296, 0.3672904670238495, 0.068102166056633, 0.13339096307754517, 0.02873765118420124], "repair_candidates": [0.08459611237049103, 0.14975197613239288, 0.03342442587018013, 0.0004758474533446133, 0.006219496484845877, 0.0005999752320349216, 0.0016833391273394227, 0.013565931469202042, 0.0015736721688881516, 0.03592243418097496, 0.0013811214594170451, 0.057105906307697296, 0.002425232669338584, 0.3672904670238495, 0.0005342247895896435, 0.068102166056633, 0.010875383391976357, 0.13339096307754517, 0.02873765118420124, 0.0022775577381253242, 6.60584555589594e-05], "target_probs": 0.8549433350563049}}


{"result": {"time": "2021-02-21 05:54:27.792334", "n_pass": [250, 58, 17], "n_token": 110, "loss": [0.0469859354197979, 0.09433036297559738], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["self", ")", "#INDENT#", "equation", ")", "#NEWLINE#", "self", ".", "equation", ".", "self", ".", "equation", ".", ")", ",", "'y = a * exp(bx)<br>y = y * x + Offset'", ")", "#NEWLINE#", "self", ".", "assertEqual", "(", "equation", ".", "GetDisplayName", "(", ")", ",", "'Exponential With Linear Growth And Offset'", ")", "#NEWLINE#", "self", ".", "assertEqual", "(", "equation", ".", "GetCoefficientDesignators", "(", ")", ",", "[", "'a'", ",", "'b'", ",", "'Offset'", "]", ")", "#NEWLINE#", "self", ".", "assertEqual", "(", "len", "(", "equation", ".", "GetDataCacheFunctions", "(", ")", ")", ",", "1", ")", "#NEWLINE#", "self", ".", "assertFalse", "(", "equation", ".", "CanLinearSolverBeUsedForSSQABS", "(", ")", ")", "#NEWLINE#", "pyeq2", ".", "dataConvertorService", "(", ")", ".", "ConvertAndSortColumnarASCII", "(", "DataForUnitTests", ".", "asciiDataInColumns_2D", ",", "fittingTarget", ",", "equation", ".", "Solve", "(", ")", "#NEWLINE#", "fittingTarget", "=", "equation", "equation", ".", "solvedCoefficients", ")", "#NEWLINE#", "self", "(", "fittingTarget", "<="]}}
{"position": {"error_location": 86, "repair_targets": [3, 8, 12, 23, 36, 57, 71, 92, 100, 101], "repair_candidates": [3, 8, 12, 23, 36, 57, 71, 92, 100, 101, 0, 6, 10, 19, 32, 51, 67, 106, 90, 98, 108]}}
{"prediction": {"error_location": 0.9541008472442627, "repair_targets": [0.131791889667511, 0.000825033406727016, 0.0012409620685502887, 0.011427992954850197, 0.04790752753615379, 0.07031672447919846, 0.2833792567253113, 0.04625267907977104, 0.23570948839187622, 0.08113056421279907], "repair_candidates": [0.06372135132551193, 0.131791889667511, 0.010488756000995636, 0.000825033406727016, 0.0020660751033574343, 0.0012409620685502887, 0.0007474226877093315, 0.011427992954850197, 0.0009346009464934468, 0.04790752753615379, 0.0006430123466998339, 0.07031672447919846, 0.0012322815600782633, 0.2833792567253113, 0.0005319127230904996, 0.04625267907977104, 0.008545957505702972, 0.23570948839187622, 0.08113056421279907, 0.0010579428635537624, 4.853304199059494e-05], "target_probs": 0.9099820852279663}}


{"result": {"time": "2021-02-21 05:54:27.860272", "n_pass": [251, 59, 18], "n_token": 108, "loss": [0.02027979865670204, 0.05616903677582741], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["self", ")", "#INDENT#", "equation", ")", "#NEWLINE#", "self", ".", "equation", ".", "self", ".", "equation", ".", "'y = a * exp(bx)<br>y = y * x + Offset'", ")", "#NEWLINE#", "self", ".", "assertEqual", "(", "equation", ".", "GetDisplayName", "(", ")", ",", "'Exponential With Linear Growth And Offset'", ")", "#NEWLINE#", "self", ".", "assertEqual", "(", "equation", ".", "GetCoefficientDesignators", "(", ")", ",", "[", "'a'", ",", "'b'", ",", "'Offset'", "]", ")", "#NEWLINE#", "self", ".", "assertEqual", "(", "len", "(", "equation", ".", "GetDataCacheFunctions", "(", ")", ")", ",", "1", ")", "#NEWLINE#", "self", ".", "assertFalse", "(", "equation", ".", "CanLinearSolverBeUsedForSSQABS", "(", ")", ")", "#NEWLINE#", "pyeq2", ".", "dataConvertorService", "(", ")", ".", "ConvertAndSortColumnarASCII", "(", "DataForUnitTests", ".", "asciiDataInColumns_2D", ",", "fittingTarget", ",", "equation", ".", "Solve", "(", ")", "#NEWLINE#", "fittingTarget", "=", "equation", "equation", ".", "solvedCoefficients", ")", "#NEWLINE#", "self", "(", "fittingTarget", "<="]}}
{"position": {"error_location": 84, "repair_targets": [3, 8, 12, 21, 34, 55, 69, 90, 98, 99], "repair_candidates": [3, 8, 12, 21, 34, 55, 69, 90, 98, 99, 0, 6, 10, 17, 30, 49, 65, 104, 88, 96, 106]}}
{"prediction": {"error_location": 0.9799243211746216, "repair_targets": [0.14775174856185913, 0.0013800710439682007, 0.0009362585260532796, 0.011290364898741245, 0.045456767082214355, 0.07229938358068466, 0.30748459696769714, 0.027082735672593117, 0.21462607383728027, 0.11707133799791336], "repair_candidates": [0.04300478473305702, 0.14775174856185913, 0.004249825607985258, 0.0013800710439682007, 0.0010725257452577353, 0.0009362585260532796, 0.00032841169741004705, 0.011290364898741245, 0.00039533889503218234, 0.045456767082214355, 0.0002808753924909979, 0.07229938358068466, 0.0005521847633644938, 0.30748459696769714, 0.00015746933058835566, 0.027082735672593117, 0.003954252228140831, 0.21462607383728027, 0.11707133799791336, 0.0005969012272544205, 2.8120573915657587e-05], "target_probs": 0.9453793168067932}}


{"result": {"time": "2021-02-21 05:54:27.930117", "n_pass": [252, 60, 19], "n_token": 106, "loss": [0.044627875089645386, 0.06727396696805954], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["self", ")", "#INDENT#", "equation", ")", "#NEWLINE#", "self", ".", "equation", ".", "self", ".", "equation", ".", "#NEWLINE#", "self", ".", "assertEqual", "(", "equation", ".", "GetDisplayName", "(", ")", ",", "'Exponential With Linear Growth And Offset'", ")", "#NEWLINE#", "self", ".", "assertEqual", "(", "equation", ".", "GetCoefficientDesignators", "(", ")", ",", "[", "'a'", ",", "'b'", ",", "'Offset'", "]", ")", "#NEWLINE#", "self", ".", "assertEqual", "(", "len", "(", "equation", ".", "GetDataCacheFunctions", "(", ")", ")", ",", "1", ")", "#NEWLINE#", "self", ".", "assertFalse", "(", "equation", ".", "CanLinearSolverBeUsedForSSQABS", "(", ")", ")", "#NEWLINE#", "pyeq2", ".", "dataConvertorService", "(", ")", ".", "ConvertAndSortColumnarASCII", "(", "DataForUnitTests", ".", "asciiDataInColumns_2D", ",", "fittingTarget", ",", "equation", ".", "Solve", "(", ")", "#NEWLINE#", "fittingTarget", "=", "equation", "equation", ".", "solvedCoefficients", ")", "#NEWLINE#", "self", "(", "fittingTarget", "<="]}}
{"position": {"error_location": 82, "repair_targets": [3, 8, 12, 19, 32, 53, 67, 88, 96, 97], "repair_candidates": [3, 8, 12, 19, 32, 53, 67, 88, 96, 97, 0, 6, 10, 15, 28, 47, 63, 102, 86, 94, 104]}}
{"prediction": {"error_location": 0.9563535451889038, "repair_targets": [0.22489020228385925, 0.002255006693303585, 0.000475173321319744, 0.012849620543420315, 0.05952281877398491, 0.08493707329034805, 0.36540883779525757, 0.018870258703827858, 0.10629424452781677, 0.05943572521209717], "repair_candidates": [0.04274135082960129, 0.22489020228385925, 0.007708522491157055, 0.002255006693303585, 0.0019374279072508216, 0.000475173321319744, 0.004149746149778366, 0.012849620543420315, 0.0007749542128294706, 0.05952281877398491, 0.0005666069337166846, 0.08493707329034805, 0.0011211358942091465, 0.36540883779525757, 9.405202581547201e-05, 0.018870258703827858, 0.004707247484475374, 0.10629424452781677, 0.05943572521209717, 0.0012330677127465606, 2.6831499781110324e-05], "target_probs": 0.9349390268325806}}


{"result": {"time": "2021-02-21 05:54:27.997553", "n_pass": [254, 61, 20], "n_token": 104, "loss": [0.09107223153114319, 0.08380111306905746], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["self", ")", "#INDENT#", "equation", ")", "#NEWLINE#", "self", ".", "equation", ".", "self", ".", "equation", ".", "#NEWLINE#", "self", "(", "equation", ".", "GetDisplayName", "(", ")", ",", "'Exponential With Linear Growth And Offset'", ")", "#NEWLINE#", "self", ".", "assertEqual", "(", "equation", ".", "GetCoefficientDesignators", "(", ")", ",", "[", "'a'", ",", "'b'", ",", "'Offset'", "]", ")", "#NEWLINE#", "self", ".", "assertEqual", "(", "len", "(", "equation", ".", "GetDataCacheFunctions", "(", ")", ")", ",", "1", ")", "#NEWLINE#", "self", ".", "assertFalse", "(", "equation", ".", "CanLinearSolverBeUsedForSSQABS", "(", ")", ")", "#NEWLINE#", "pyeq2", ".", "dataConvertorService", "(", ")", ".", "ConvertAndSortColumnarASCII", "(", "DataForUnitTests", ".", "asciiDataInColumns_2D", ",", "fittingTarget", ",", "equation", ".", "Solve", "(", ")", "#NEWLINE#", "fittingTarget", "=", "equation", "equation", ".", "solvedCoefficients", ")", "#NEWLINE#", "self", "(", "fittingTarget", "<="]}}
{"position": {"error_location": 80, "repair_targets": [3, 8, 12, 17, 30, 51, 65, 86, 94, 95], "repair_candidates": [3, 8, 12, 17, 30, 51, 65, 86, 94, 95, 0, 6, 10, 15, 26, 45, 61, 100, 84, 92, 102]}}
{"prediction": {"error_location": 0.9129518866539001, "repair_targets": [0.21503157913684845, 0.00546169513836503, 0.0011099338298663497, 0.028378762304782867, 0.09670174866914749, 0.11745902895927429, 0.36278235912323, 0.02638830989599228, 0.03740009665489197, 0.028900589793920517], "repair_candidates": [0.04802911356091499, 0.21503157913684845, 0.012516503222286701, 0.00546169513836503, 0.002994447946548462, 0.0011099338298663497, 0.003480425802990794, 0.028378762304782867, 0.0011725095100700855, 0.09670174866914749, 0.0008915304206311703, 0.11745902895927429, 0.001349541824311018, 0.36278235912323, 0.00016299108392558992, 0.02638830989599228, 0.007124371360987425, 0.03740009665489197, 0.028900589793920517, 0.002605573972687125, 5.892874833079986e-05], "target_probs": 0.9196141362190247}}


{"result": {"time": "2021-02-21 05:54:28.065618", "n_pass": [256, 62, 21], "n_token": 102, "loss": [0.2931213676929474, 0.22313988208770752], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["self", ")", "#INDENT#", "equation", ")", "#NEWLINE#", "self", ".", "equation", ".", "self", ".", "equation", ".", "#NEWLINE#", "self", "(", "equation", "(", ")", ",", "'Exponential With Linear Growth And Offset'", ")", "#NEWLINE#", "self", ".", "assertEqual", "(", "equation", ".", "GetCoefficientDesignators", "(", ")", ",", "[", "'a'", ",", "'b'", ",", "'Offset'", "]", ")", "#NEWLINE#", "self", ".", "assertEqual", "(", "len", "(", "equation", ".", "GetDataCacheFunctions", "(", ")", ")", ",", "1", ")", "#NEWLINE#", "self", ".", "assertFalse", "(", "equation", ".", "CanLinearSolverBeUsedForSSQABS", "(", ")", ")", "#NEWLINE#", "pyeq2", ".", "dataConvertorService", "(", ")", ".", "ConvertAndSortColumnarASCII", "(", "DataForUnitTests", ".", "asciiDataInColumns_2D", ",", "fittingTarget", ",", "equation", ".", "Solve", "(", ")", "#NEWLINE#", "fittingTarget", "=", "equation", "equation", ".", "solvedCoefficients", ")", "#NEWLINE#", "self", "(", "fittingTarget", "<="]}}
{"position": {"error_location": 78, "repair_targets": [3, 8, 12, 17, 28, 49, 63, 84, 92, 93], "repair_candidates": [3, 8, 12, 17, 28, 49, 63, 84, 92, 93, 0, 6, 10, 15, 24, 43, 59, 98, 82, 90, 100]}}
{"prediction": {"error_location": 0.7459314465522766, "repair_targets": [0.14779432117938995, 0.0038429261185228825, 0.0012911082012578845, 0.00620872899889946, 0.08583544939756393, 0.173262819647789, 0.3197442591190338, 0.041652292013168335, 0.01223817840218544, 0.00813288800418377], "repair_candidates": [0.07237496972084045, 0.14779432117938995, 0.06287474930286407, 0.0038429261185228825, 0.016480043530464172, 0.0012911082012578845, 0.010799244977533817, 0.00620872899889946, 0.005300985183566809, 0.08583544939756393, 0.003790003713220358, 0.173262819647789, 0.005832179449498653, 0.3197442591190338, 0.00045179814333096147, 0.041652292013168335, 0.013894710689783096, 0.01223817840218544, 0.00813288800418377, 0.008115580305457115, 8.274091669591144e-05], "target_probs": 0.800002932548523}}


{"result": {"time": "2021-02-21 05:54:28.132969", "n_pass": [257, 63, 22], "n_token": 100, "loss": [0.44585251808166504, 0.2817442715167999], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["self", ")", "#INDENT#", "equation", ")", "#NEWLINE#", "self", ".", "equation", ".", "self", ".", "equation", ".", "#NEWLINE#", "self", "(", "equation", ",", "'Exponential With Linear Growth And Offset'", ")", "#NEWLINE#", "self", ".", "assertEqual", "(", "equation", ".", "GetCoefficientDesignators", "(", ")", ",", "[", "'a'", ",", "'b'", ",", "'Offset'", "]", ")", "#NEWLINE#", "self", ".", "assertEqual", "(", "len", "(", "equation", ".", "GetDataCacheFunctions", "(", ")", ")", ",", "1", ")", "#NEWLINE#", "self", ".", "assertFalse", "(", "equation", ".", "CanLinearSolverBeUsedForSSQABS", "(", ")", ")", "#NEWLINE#", "pyeq2", ".", "dataConvertorService", "(", ")", ".", "ConvertAndSortColumnarASCII", "(", "DataForUnitTests", ".", "asciiDataInColumns_2D", ",", "fittingTarget", ",", "equation", ".", "Solve", "(", ")", "#NEWLINE#", "fittingTarget", "=", "equation", "equation", ".", "solvedCoefficients", ")", "#NEWLINE#", "self", "(", "fittingTarget", "<="]}}
{"position": {"error_location": 76, "repair_targets": [3, 8, 12, 17, 26, 47, 61, 82, 90, 91], "repair_candidates": [3, 8, 12, 17, 26, 47, 61, 82, 90, 91, 0, 6, 10, 15, 22, 41, 57, 96, 80, 88, 98]}}
{"prediction": {"error_location": 0.640278160572052, "repair_targets": [0.09365987777709961, 0.002491779625415802, 0.0010475522140040994, 0.04209567606449127, 0.07832572609186172, 0.18709483742713928, 0.2681516408920288, 0.0514046773314476, 0.017509009689092636, 0.012685870751738548], "repair_candidates": [0.0999552384018898, 0.09365987777709961, 0.08072388172149658, 0.002491779625415802, 0.018445104360580444, 0.0010475522140040994, 0.006987443659454584, 0.04209567606449127, 0.005079528782516718, 0.07832572609186172, 0.003715083235874772, 0.18709483742713928, 0.005538599099963903, 0.2681516408920288, 0.00044127446017228067, 0.0514046773314476, 0.014608182944357395, 0.017509009689092636, 0.012685870751738548, 0.009975348599255085, 6.367157766362652e-05], "target_probs": 0.7544665932655334}}


{"result": {"time": "2021-02-21 05:54:28.202826", "n_pass": [258, 64, 23], "n_token": 98, "loss": [0.19607669115066528, 0.1791744828224182], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["self", ")", "#INDENT#", "equation", ")", "#NEWLINE#", "self", ".", "equation", ".", "self", ".", "equation", ".", "#NEWLINE#", "self", "(", "equation", ")", "#NEWLINE#", "self", ".", "assertEqual", "(", "equation", ".", "GetCoefficientDesignators", "(", ")", ",", "[", "'a'", ",", "'b'", ",", "'Offset'", "]", ")", "#NEWLINE#", "self", ".", "assertEqual", "(", "len", "(", "equation", ".", "GetDataCacheFunctions", "(", ")", ")", ",", "1", ")", "#NEWLINE#", "self", ".", "assertFalse", "(", "equation", ".", "CanLinearSolverBeUsedForSSQABS", "(", ")", ")", "#NEWLINE#", "pyeq2", ".", "dataConvertorService", "(", ")", ".", "ConvertAndSortColumnarASCII", "(", "DataForUnitTests", ".", "asciiDataInColumns_2D", ",", "fittingTarget", ",", "equation", ".", "Solve", "(", ")", "#NEWLINE#", "fittingTarget", "=", "equation", "equation", ".", "solvedCoefficients", ")", "#NEWLINE#", "self", "(", "fittingTarget", "<="]}}
{"position": {"error_location": 74, "repair_targets": [3, 8, 12, 17, 24, 45, 59, 80, 88, 89], "repair_candidates": [3, 8, 12, 17, 24, 45, 59, 80, 88, 89, 0, 6, 10, 15, 20, 39, 55, 94, 78, 86, 96]}}
{"prediction": {"error_location": 0.8219491839408875, "repair_targets": [0.08864717930555344, 0.0025347424671053886, 0.001175407785922289, 0.04505174979567528, 0.11023209244012833, 0.2384844422340393, 0.28522685170173645, 0.04916262626647949, 0.009864138439297676, 0.005580740049481392], "repair_candidates": [0.0775432214140892, 0.08864717930555344, 0.03930853307247162, 0.0025347424671053886, 0.011428950354456902, 0.001175407785922289, 0.014109511859714985, 0.04505174979567528, 0.0032131364569067955, 0.11023209244012833, 0.0024574093986302614, 0.2384844422340393, 0.002740677446126938, 0.28522685170173645, 0.00019657670054584742, 0.04916262626647949, 0.0053670634515583515, 0.009864138439297676, 0.005580740049481392, 0.007645780686289072, 2.9166430977056734e-05], "target_probs": 0.8359600305557251}}


{"result": {"time": "2021-02-21 05:54:28.270614", "n_pass": [259, 65, 24], "n_token": 96, "loss": [0.10491575300693512, 0.18935728073120117], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["self", ")", "#INDENT#", "equation", ")", "#NEWLINE#", "self", ".", "equation", ".", "self", ".", "equation", ".", "#NEWLINE#", "self", "(", "equation", "self", ".", "assertEqual", "(", "equation", ".", "GetCoefficientDesignators", "(", ")", ",", "[", "'a'", ",", "'b'", ",", "'Offset'", "]", ")", "#NEWLINE#", "self", ".", "assertEqual", "(", "len", "(", "equation", ".", "GetDataCacheFunctions", "(", ")", ")", ",", "1", ")", "#NEWLINE#", "self", ".", "assertFalse", "(", "equation", ".", "CanLinearSolverBeUsedForSSQABS", "(", ")", ")", "#NEWLINE#", "pyeq2", ".", "dataConvertorService", "(", ")", ".", "ConvertAndSortColumnarASCII", "(", "DataForUnitTests", ".", "asciiDataInColumns_2D", ",", "fittingTarget", ",", "equation", ".", "Solve", "(", ")", "#NEWLINE#", "fittingTarget", "=", "equation", "equation", ".", "solvedCoefficients", ")", "#NEWLINE#", "self", "(", "fittingTarget", "<="]}}
{"position": {"error_location": 72, "repair_targets": [3, 8, 12, 17, 22, 43, 57, 78, 86, 87], "repair_candidates": [3, 8, 12, 17, 22, 43, 57, 78, 86, 87, 0, 6, 10, 15, 18, 37, 53, 92, 76, 84, 94]}}
{"prediction": {"error_location": 0.9004004001617432, "repair_targets": [0.19968800246715546, 0.004118319600820541, 0.0011916866060346365, 0.04883214831352234, 0.04620199650526047, 0.15111206471920013, 0.3192552924156189, 0.04538925737142563, 0.00852231401950121, 0.0031796726398169994], "repair_candidates": [0.07134947180747986, 0.19968800246715546, 0.049805980175733566, 0.004118319600820541, 0.011871776543557644, 0.0011916866060346365, 0.00720820901915431, 0.04883214831352234, 0.01657467521727085, 0.04620199650526047, 0.0035068783909082413, 0.15111206471920013, 0.001628619502298534, 0.3192552924156189, 0.0001580224634381011, 0.04538925737142563, 0.003287761239334941, 0.00852231401950121, 0.0031796726398169994, 0.007091505918651819, 2.6409123165649362e-05], "target_probs": 0.8274908065795898}}


{"result": {"time": "2021-02-21 05:54:28.337846", "n_pass": [261, 66, 25], "n_token": 94, "loss": [0.16125603020191193, 0.41212964057922363], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["self", ")", "#INDENT#", "equation", ")", "#NEWLINE#", "self", ".", "equation", ".", "self", ".", "equation", ".", "#NEWLINE#", "self", "(", "equation", "self", ".", "equation", ".", "GetCoefficientDesignators", "(", ")", ",", "[", "'a'", ",", "'b'", ",", "'Offset'", "]", ")", "#NEWLINE#", "self", ".", "assertEqual", "(", "len", "(", "equation", ".", "GetDataCacheFunctions", "(", ")", ")", ",", "1", ")", "#NEWLINE#", "self", ".", "assertFalse", "(", "equation", ".", "CanLinearSolverBeUsedForSSQABS", "(", ")", ")", "#NEWLINE#", "pyeq2", ".", "dataConvertorService", "(", ")", ".", "ConvertAndSortColumnarASCII", "(", "DataForUnitTests", ".", "asciiDataInColumns_2D", ",", "fittingTarget", ",", "equation", ".", "Solve", "(", ")", "#NEWLINE#", "fittingTarget", "=", "equation", "equation", ".", "solvedCoefficients", ")", "#NEWLINE#", "self", "(", "fittingTarget", "<="]}}
{"position": {"error_location": 70, "repair_targets": [3, 8, 12, 17, 20, 41, 55, 76, 84, 85], "repair_candidates": [3, 8, 12, 17, 20, 41, 55, 76, 84, 85, 0, 6, 10, 15, 18, 35, 51, 90, 74, 82, 92]}}
{"prediction": {"error_location": 0.8510741591453552, "repair_targets": [0.17991413176059723, 0.0034263774286955595, 0.001551512279547751, 0.03200416639447212, 0.0021563563495874405, 0.1290093958377838, 0.25680845975875854, 0.05024721473455429, 0.005035515408962965, 0.002085238927975297], "repair_candidates": [0.11226686090230942, 0.17991413176059723, 0.08132030069828033, 0.0034263774286955595, 0.020751260221004486, 0.001551512279547751, 0.02695668675005436, 0.03200416639447212, 0.05870721489191055, 0.0021563563495874405, 0.008507024496793747, 0.1290093958377838, 0.0032702707685530186, 0.25680845975875854, 0.0003378220717422664, 0.05024721473455429, 0.008479605428874493, 0.005035515408962965, 0.002085238927975297, 0.017115313559770584, 4.9347556341672316e-05], "target_probs": 0.6622384190559387}}


{"result": {"time": "2021-02-21 05:54:28.405403", "n_pass": [263, 67, 26], "n_token": 92, "loss": [0.2273939996957779, 0.2804527282714844], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["self", ")", "#INDENT#", "equation", ")", "#NEWLINE#", "self", ".", "equation", ".", "self", ".", "equation", ".", "#NEWLINE#", "self", "(", "equation", "self", ".", "equation", ".", ")", ",", "[", "'a'", ",", "'b'", ",", "'Offset'", "]", ")", "#NEWLINE#", "self", ".", "assertEqual", "(", "len", "(", "equation", ".", "GetDataCacheFunctions", "(", ")", ")", ",", "1", ")", "#NEWLINE#", "self", ".", "assertFalse", "(", "equation", ".", "CanLinearSolverBeUsedForSSQABS", "(", ")", ")", "#NEWLINE#", "pyeq2", ".", "dataConvertorService", "(", ")", ".", "ConvertAndSortColumnarASCII", "(", "DataForUnitTests", ".", "asciiDataInColumns_2D", ",", "fittingTarget", ",", "equation", ".", "Solve", "(", ")", "#NEWLINE#", "fittingTarget", "=", "equation", "equation", ".", "solvedCoefficients", ")", "#NEWLINE#", "self", "(", "fittingTarget", "<="]}}
{"position": {"error_location": 68, "repair_targets": [3, 8, 12, 17, 20, 39, 53, 74, 82, 83], "repair_candidates": [3, 8, 12, 17, 20, 39, 53, 74, 82, 83, 0, 6, 10, 15, 18, 33, 49, 88, 72, 80, 90]}}
{"prediction": {"error_location": 0.7966069579124451, "repair_targets": [0.21329739689826965, 0.007495511323213577, 0.0032442647498100996, 0.09340052306652069, 0.003918305970728397, 0.09064280241727829, 0.2928299009799957, 0.034291822463274, 0.013087688013911247, 0.003233392024412751], "repair_candidates": [0.07433109730482101, 0.21329739689826965, 0.055176157504320145, 0.007495511323213577, 0.016790946945548058, 0.0032442647498100996, 0.015149138867855072, 0.09340052306652069, 0.04797530919313431, 0.003918305970728397, 0.006615352816879749, 0.09064280241727829, 0.0029924369882792234, 0.2928299009799957, 0.0005176247796043754, 0.034291822463274, 0.007868904620409012, 0.013087688013911247, 0.003233392024412751, 0.01709103398025036, 5.036311995354481e-05], "target_probs": 0.7554416656494141}}


{"result": {"time": "2021-02-21 05:54:28.474303", "n_pass": [264, 68, 27], "n_token": 90, "loss": [0.15600012242794037, 0.1983329802751541], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["self", ")", "#INDENT#", "equation", ")", "#NEWLINE#", "self", ".", "equation", ".", "self", ".", "equation", ".", "#NEWLINE#", "self", "(", "equation", "self", ".", "equation", ".", "[", "'a'", ",", "'b'", ",", "'Offset'", "]", ")", "#NEWLINE#", "self", ".", "assertEqual", "(", "len", "(", "equation", ".", "GetDataCacheFunctions", "(", ")", ")", ",", "1", ")", "#NEWLINE#", "self", ".", "assertFalse", "(", "equation", ".", "CanLinearSolverBeUsedForSSQABS", "(", ")", ")", "#NEWLINE#", "pyeq2", ".", "dataConvertorService", "(", ")", ".", "ConvertAndSortColumnarASCII", "(", "DataForUnitTests", ".", "asciiDataInColumns_2D", ",", "fittingTarget", ",", "equation", ".", "Solve", "(", ")", "#NEWLINE#", "fittingTarget", "=", "equation", "equation", ".", "solvedCoefficients", ")", "#NEWLINE#", "self", "(", "fittingTarget", "<="]}}
{"position": {"error_location": 66, "repair_targets": [3, 8, 12, 17, 20, 37, 51, 72, 80, 81], "repair_candidates": [3, 8, 12, 17, 20, 37, 51, 72, 80, 81, 0, 6, 10, 15, 18, 31, 47, 86, 70, 78, 88]}}
{"prediction": {"error_location": 0.8555591106414795, "repair_targets": [0.24160145223140717, 0.004426405765116215, 0.0016343251336365938, 0.11463042348623276, 0.004885395523160696, 0.06296482682228088, 0.3562571406364441, 0.019533606246113777, 0.012141820043325424, 0.0020213602110743523], "repair_candidates": [0.045130256563425064, 0.24160145223140717, 0.04245501384139061, 0.004426405765116215, 0.009767921641469002, 0.0016343251336365938, 0.015526680275797844, 0.11463042348623276, 0.04371463507413864, 0.004885395523160696, 0.0049804216250777245, 0.06296482682228088, 0.0035302231553941965, 0.3562571406364441, 0.0004182453849352896, 0.019533606246113777, 0.004157420247793198, 0.012141820043325424, 0.0020213602110743523, 0.010190971195697784, 3.1450432288693264e-05], "target_probs": 0.8200967311859131}}


{"result": {"time": "2021-02-21 05:54:28.541096", "n_pass": [265, 69, 28], "n_token": 88, "loss": [0.08958043903112411, 0.10759536176919937], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["self", ")", "#INDENT#", "equation", ")", "#NEWLINE#", "self", ".", "equation", ".", "self", ".", "equation", ".", "#NEWLINE#", "self", "(", "equation", "self", ".", "equation", ".", ",", "'b'", ",", "'Offset'", "]", ")", "#NEWLINE#", "self", ".", "assertEqual", "(", "len", "(", "equation", ".", "GetDataCacheFunctions", "(", ")", ")", ",", "1", ")", "#NEWLINE#", "self", ".", "assertFalse", "(", "equation", ".", "CanLinearSolverBeUsedForSSQABS", "(", ")", ")", "#NEWLINE#", "pyeq2", ".", "dataConvertorService", "(", ")", ".", "ConvertAndSortColumnarASCII", "(", "DataForUnitTests", ".", "asciiDataInColumns_2D", ",", "fittingTarget", ",", "equation", ".", "Solve", "(", ")", "#NEWLINE#", "fittingTarget", "=", "equation", "equation", ".", "solvedCoefficients", ")", "#NEWLINE#", "self", "(", "fittingTarget", "<="]}}
{"position": {"error_location": 64, "repair_targets": [3, 8, 12, 17, 20, 35, 49, 70, 78, 79], "repair_candidates": [3, 8, 12, 17, 20, 35, 49, 70, 78, 79, 0, 6, 10, 15, 18, 29, 45, 84, 68, 76, 86]}}
{"prediction": {"error_location": 0.9143146276473999, "repair_targets": [0.23843276500701904, 0.003711231518536806, 0.0014127460308372974, 0.1313437819480896, 0.0020144458394497633, 0.04423641785979271, 0.431118905544281, 0.02164367586374283, 0.020572299137711525, 0.0035045838449150324], "repair_candidates": [0.03623085469007492, 0.23843276500701904, 0.02183488756418228, 0.003711231518536806, 0.005493076052516699, 0.0014127460308372974, 0.00788919534534216, 0.1313437819480896, 0.01395351905375719, 0.0020144458394497633, 0.0024734842590987682, 0.04423641785979271, 0.0030323672108352184, 0.431118905544281, 0.0007116969209164381, 0.02164367586374283, 0.003354856977239251, 0.020572299137711525, 0.0035045838449150324, 0.007020249497145414, 1.4986037967901211e-05], "target_probs": 0.897990882396698}}


{"result": {"time": "2021-02-21 05:54:28.608323", "n_pass": [266, 70, 29], "n_token": 86, "loss": [0.12356104701757431, 0.1281449943780899], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["self", ")", "#INDENT#", "equation", ")", "#NEWLINE#", "self", ".", "equation", ".", "self", ".", "equation", ".", "#NEWLINE#", "self", "(", "equation", "self", ".", "equation", ".", ",", "'Offset'", "]", ")", "#NEWLINE#", "self", ".", "assertEqual", "(", "len", "(", "equation", ".", "GetDataCacheFunctions", "(", ")", ")", ",", "1", ")", "#NEWLINE#", "self", ".", "assertFalse", "(", "equation", ".", "CanLinearSolverBeUsedForSSQABS", "(", ")", ")", "#NEWLINE#", "pyeq2", ".", "dataConvertorService", "(", ")", ".", "ConvertAndSortColumnarASCII", "(", "DataForUnitTests", ".", "asciiDataInColumns_2D", ",", "fittingTarget", ",", "equation", ".", "Solve", "(", ")", "#NEWLINE#", "fittingTarget", "=", "equation", "equation", ".", "solvedCoefficients", ")", "#NEWLINE#", "self", "(", "fittingTarget", "<="]}}
{"position": {"error_location": 62, "repair_targets": [3, 8, 12, 17, 20, 33, 47, 68, 76, 77], "repair_candidates": [3, 8, 12, 17, 20, 33, 47, 68, 76, 77, 0, 6, 10, 15, 18, 27, 43, 82, 66, 74, 84]}}
{"prediction": {"error_location": 0.8837676644325256, "repair_targets": [0.18954643607139587, 0.0036604164633899927, 0.0017747835954651237, 0.11496560275554657, 0.0017767311073839664, 0.053472232073545456, 0.4544317424297333, 0.018294086679816246, 0.036607272922992706, 0.005196426995098591], "repair_candidates": [0.04078022390604019, 0.18954643607139587, 0.025669485330581665, 0.0036604164633899927, 0.0071474965661764145, 0.0017747835954651237, 0.010179445147514343, 0.11496560275554657, 0.01918787881731987, 0.0017767311073839664, 0.0027866214513778687, 0.053472232073545456, 0.004502445459365845, 0.4544317424297333, 0.0005185779882594943, 0.018294086679816246, 0.003998392727226019, 0.036607272922992706, 0.005196426995098591, 0.005491366144269705, 1.2442358638509177e-05], "target_probs": 0.8797258138656616}}


{"result": {"time": "2021-02-21 05:54:28.676040", "n_pass": [267, 71, 30], "n_token": 84, "loss": [0.06454461067914963, 0.06800521910190582], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["self", ")", "#INDENT#", "equation", ")", "#NEWLINE#", "self", ".", "equation", ".", "self", ".", "equation", ".", "#NEWLINE#", "self", "(", "equation", "self", ".", "equation", ".", "]", ")", "#NEWLINE#", "self", ".", "assertEqual", "(", "len", "(", "equation", ".", "GetDataCacheFunctions", "(", ")", ")", ",", "1", ")", "#NEWLINE#", "self", ".", "assertFalse", "(", "equation", ".", "CanLinearSolverBeUsedForSSQABS", "(", ")", ")", "#NEWLINE#", "pyeq2", ".", "dataConvertorService", "(", ")", ".", "ConvertAndSortColumnarASCII", "(", "DataForUnitTests", ".", "asciiDataInColumns_2D", ",", "fittingTarget", ",", "equation", ".", "Solve", "(", ")", "#NEWLINE#", "fittingTarget", "=", "equation", "equation", ".", "solvedCoefficients", ")", "#NEWLINE#", "self", "(", "fittingTarget", "<="]}}
{"position": {"error_location": 60, "repair_targets": [3, 8, 12, 17, 20, 31, 45, 66, 74, 75], "repair_candidates": [3, 8, 12, 17, 20, 31, 45, 66, 74, 75, 0, 6, 10, 15, 18, 25, 41, 80, 64, 72, 82]}}
{"prediction": {"error_location": 0.9374942183494568, "repair_targets": [0.1361183077096939, 0.0017802200745791197, 0.0007032658904790878, 0.12798307836055756, 0.0007810835377313197, 0.06258489191532135, 0.4764668047428131, 0.013762825168669224, 0.09977784007787704, 0.01429720688611269], "repair_candidates": [0.027087369933724403, 0.1361183077096939, 0.012347009032964706, 0.0017802200745791197, 0.002995695685967803, 0.0007032658904790878, 0.004873048514127731, 0.12798307836055756, 0.006448864005506039, 0.0007810835377313197, 0.0017042829422280192, 0.06258489191532135, 0.005371089559048414, 0.4764668047428131, 0.00027169325039722025, 0.013762825168669224, 0.0022924875374883413, 0.09977784007787704, 0.01429720688611269, 0.002344526117667556, 8.464540769637097e-06], "target_probs": 0.9342555999755859}}


{"result": {"time": "2021-02-21 05:54:28.745313", "n_pass": [268, 72, 31], "n_token": 82, "loss": [0.026545187458395958, 0.040116384625434875], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["self", ")", "#INDENT#", "equation", ")", "#NEWLINE#", "self", ".", "equation", ".", "self", ".", "equation", ".", "#NEWLINE#", "self", "(", "equation", "self", ".", "equation", ".", "#NEWLINE#", "self", ".", "assertEqual", "(", "len", "(", "equation", ".", "GetDataCacheFunctions", "(", ")", ")", ",", "1", ")", "#NEWLINE#", "self", ".", "assertFalse", "(", "equation", ".", "CanLinearSolverBeUsedForSSQABS", "(", ")", ")", "#NEWLINE#", "pyeq2", ".", "dataConvertorService", "(", ")", ".", "ConvertAndSortColumnarASCII", "(", "DataForUnitTests", ".", "asciiDataInColumns_2D", ",", "fittingTarget", ",", "equation", ".", "Solve", "(", ")", "#NEWLINE#", "fittingTarget", "=", "equation", "equation", ".", "solvedCoefficients", ")", "#NEWLINE#", "self", "(", "fittingTarget", "<="]}}
{"position": {"error_location": 58, "repair_targets": [3, 8, 12, 17, 20, 29, 43, 64, 72, 73], "repair_candidates": [3, 8, 12, 17, 20, 29, 43, 64, 72, 73, 0, 6, 10, 15, 18, 23, 39, 78, 62, 70, 80]}}
{"prediction": {"error_location": 0.9738040566444397, "repair_targets": [0.07738669216632843, 0.0006402745493687689, 0.00025939446641132236, 0.1269158571958542, 0.00022761127911508083, 0.07102324813604355, 0.4947066903114319, 0.014348587952554226, 0.11875095218420029, 0.056418340653181076], "repair_candidates": [0.01694140024483204, 0.07738669216632843, 0.0043373811058700085, 0.0006402745493687689, 0.00124912871979177, 0.00025939446641132236, 0.0031429845839738846, 0.1269158571958542, 0.0009477275889366865, 0.00022761127911508083, 0.0019071976421400905, 0.07102324813604355, 0.0066838921047747135, 0.4947066903114319, 0.00029340756009332836, 0.014348587952554226, 0.001467876136302948, 0.11875095218420029, 0.056418340653181076, 0.00234489468857646, 6.45909494778607e-06], "target_probs": 0.9606776237487793}}


{"result": {"time": "2021-02-21 05:54:28.812222", "n_pass": [270, 73, 32], "n_token": 79, "loss": [0.025679156184196472, 0.05704320967197418], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["self", ")", "#INDENT#", "equation", ")", "#NEWLINE#", "self", ".", "equation", ".", "self", ".", "equation", ".", "#NEWLINE#", "self", "(", "equation", "self", ".", "equation", ".", "#NEWLINE#", "self", ".", "(", "equation", ".", "GetDataCacheFunctions", "(", ")", ")", ",", "1", ")", "#NEWLINE#", "self", ".", "assertFalse", "(", "equation", ".", "CanLinearSolverBeUsedForSSQABS", "(", ")", ")", "#NEWLINE#", "pyeq2", ".", "dataConvertorService", "(", ")", ".", "ConvertAndSortColumnarASCII", "(", "DataForUnitTests", ".", "asciiDataInColumns_2D", ",", "fittingTarget", ",", "equation", ".", "Solve", "(", ")", "#NEWLINE#", "fittingTarget", "=", "equation", "equation", ".", "solvedCoefficients", ")", "#NEWLINE#", "self", "(", "fittingTarget", "<="]}}
{"position": {"error_location": 55, "repair_targets": [3, 8, 12, 17, 20, 26, 40, 61, 69, 70], "repair_candidates": [3, 8, 12, 17, 20, 26, 40, 61, 69, 70, 0, 6, 10, 15, 18, 23, 36, 75, 59, 67, 77]}}
{"prediction": {"error_location": 0.9746477603912354, "repair_targets": [0.094920814037323, 0.0015082149766385555, 0.0003819008998107165, 0.10261965543031693, 0.00019672508642543107, 0.051904309540987015, 0.4318317472934723, 0.017465196549892426, 0.1513083130121231, 0.09241637587547302], "repair_candidates": [0.028560150414705276, 0.094920814037323, 0.00513536436483264, 0.0015082149766385555, 0.0016304636374115944, 0.0003819008998107165, 0.003243805840611458, 0.10261965543031693, 0.001029163715429604, 0.00019672508642543107, 0.005594753660261631, 0.051904309540987015, 0.0035810882691293955, 0.4318317472934723, 0.0002751594875007868, 0.017465196549892426, 0.0028561640065163374, 0.1513083130121231, 0.09241637587547302, 0.003526667831465602, 1.393685943185119e-05], "target_probs": 0.9445532560348511}}


{"result": {"time": "2021-02-21 05:54:28.878777", "n_pass": [272, 74, 33], "n_token": 76, "loss": [0.02082284726202488, 0.01917661540210247], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["self", ")", "#INDENT#", "equation", ")", "#NEWLINE#", "self", ".", "equation", ".", "self", ".", "equation", ".", "#NEWLINE#", "self", "(", "equation", "self", ".", "equation", ".", "#NEWLINE#", "self", ".", "(", "equation", ".", ")", ",", "1", ")", "#NEWLINE#", "self", ".", "assertFalse", "(", "equation", ".", "CanLinearSolverBeUsedForSSQABS", "(", ")", ")", "#NEWLINE#", "pyeq2", ".", "dataConvertorService", "(", ")", ".", "ConvertAndSortColumnarASCII", "(", "DataForUnitTests", ".", "asciiDataInColumns_2D", ",", "fittingTarget", ",", "equation", ".", "Solve", "(", ")", "#NEWLINE#", "fittingTarget", "=", "equation", "equation", ".", "solvedCoefficients", ")", "#NEWLINE#", "self", "(", "fittingTarget", "<="]}}
{"position": {"error_location": 52, "repair_targets": [3, 8, 12, 17, 20, 26, 37, 58, 66, 67], "repair_candidates": [3, 8, 12, 17, 20, 26, 37, 58, 66, 67, 0, 6, 10, 15, 18, 23, 33, 72, 56, 64, 74]}}
{"prediction": {"error_location": 0.9793922305107117, "repair_targets": [0.06903349608182907, 0.0033020013943314552, 0.00045960256829857826, 0.07999110221862793, 0.0002036833466263488, 0.440203458070755, 0.22052904963493347, 0.00580676319077611, 0.09420119225978851, 0.06727573275566101], "repair_candidates": [0.012025011703372002, 0.06903349608182907, 0.0014823643723502755, 0.0033020013943314552, 0.0004800741735380143, 0.00045960256829857826, 0.0010763402096927166, 0.07999110221862793, 0.00028513959841802716, 0.0002036833466263488, 0.0013507960829883814, 0.440203458070755, 0.0007634072680957615, 0.22052904963493347, 6.707616557832807e-05, 0.00580676319077611, 0.0005981067661195993, 0.09420119225978851, 0.06727573275566101, 0.0008594965329393744, 6.102082352299476e-06], "target_probs": 0.9810060858726501}}


{"result": {"time": "2021-02-21 05:54:28.945355", "n_pass": [273, 75, 34], "n_token": 73, "loss": [0.1009432002902031, 0.03208032250404358], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["self", ")", "#INDENT#", "equation", ")", "#NEWLINE#", "self", ".", "equation", ".", "self", ".", "equation", ".", "#NEWLINE#", "self", "(", "equation", "self", ".", "equation", ".", "#NEWLINE#", "self", ".", "(", "equation", ".", ")", "#NEWLINE#", "self", ".", "assertFalse", "(", "equation", ".", "CanLinearSolverBeUsedForSSQABS", "(", ")", ")", "#NEWLINE#", "pyeq2", ".", "dataConvertorService", "(", ")", ".", "ConvertAndSortColumnarASCII", "(", "DataForUnitTests", ".", "asciiDataInColumns_2D", ",", "fittingTarget", ",", "equation", ".", "Solve", "(", ")", "#NEWLINE#", "fittingTarget", "=", "equation", "equation", ".", "solvedCoefficients", ")", "#NEWLINE#", "self", "(", "fittingTarget", "<="]}}
{"position": {"error_location": 49, "repair_targets": [3, 8, 12, 17, 20, 26, 34, 55, 63, 64], "repair_candidates": [3, 8, 12, 17, 20, 26, 34, 55, 63, 64, 0, 6, 10, 15, 18, 23, 30, 69, 53, 61, 71]}}
{"prediction": {"error_location": 0.9039844870567322, "repair_targets": [0.10851647704839706, 0.010135726071894169, 0.0013197107473388314, 0.1469065248966217, 0.0007269767229445279, 0.31818851828575134, 0.2340930998325348, 0.015888424590229988, 0.07087615877389908, 0.06177718937397003], "repair_candidates": [0.01817633956670761, 0.10851647704839706, 0.002788565121591091, 0.010135726071894169, 0.0009270976879633963, 0.0013197107473388314, 0.0020179226994514465, 0.1469065248966217, 0.0009689645376056433, 0.0007269767229445279, 0.0030844269786030054, 0.31818851828575134, 0.000639728270471096, 0.2340930998325348, 4.3800013372674584e-05, 0.015888424590229988, 0.0012847213074564934, 0.07087615877389908, 0.06177718937397003, 0.0016244954895228148, 1.516104930487927e-05], "target_probs": 0.9684287905693054}}


{"result": {"time": "2021-02-21 05:54:29.013752", "n_pass": [275, 76, 35], "n_token": 70, "loss": [0.4969693124294281, 0.1124386191368103], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["self", ")", "#INDENT#", "equation", ")", "#NEWLINE#", "self", ".", "equation", ".", "self", ".", "equation", ".", "#NEWLINE#", "self", "(", "equation", "self", ".", "equation", ".", "#NEWLINE#", "self", ".", "(", "equation", ".", ")", "#NEWLINE#", "self", "equation", ".", "CanLinearSolverBeUsedForSSQABS", "(", ")", ")", "#NEWLINE#", "pyeq2", ".", "dataConvertorService", "(", ")", ".", "ConvertAndSortColumnarASCII", "(", "DataForUnitTests", ".", "asciiDataInColumns_2D", ",", "fittingTarget", ",", "equation", ".", "Solve", "(", ")", "#NEWLINE#", "fittingTarget", "=", "equation", "equation", ".", "solvedCoefficients", ")", "#NEWLINE#", "self", "(", "fittingTarget", "<="]}}
{"position": {"error_location": 46, "repair_targets": [3, 8, 12, 17, 20, 26, 31, 52, 60, 61], "repair_candidates": [3, 8, 12, 17, 20, 26, 31, 52, 60, 61, 0, 6, 10, 15, 18, 23, 30, 66, 50, 58, 68]}}
{"prediction": {"error_location": 0.6083716750144958, "repair_targets": [0.11393312364816666, 0.012478201650083065, 0.002144184662029147, 0.09778957068920135, 0.0016333087114617229, 0.2832982838153839, 0.28680431842803955, 0.023385677486658096, 0.03535649925470352, 0.03682911768555641], "repair_candidates": [0.05175701528787613, 0.11393312364816666, 0.010674307122826576, 0.012478201650083065, 0.0031760225538164377, 0.002144184662029147, 0.008165398612618446, 0.09778957068920135, 0.0038491571322083473, 0.0016333087114617229, 0.011883774772286415, 0.2832982838153839, 0.006736796349287033, 0.28680431842803955, 0.0002551751385908574, 0.023385677486658096, 0.0033999807201325893, 0.03535649925470352, 0.03682911768555641, 0.006404962856322527, 4.5108128688298166e-05], "target_probs": 0.8936522006988525}}


{"result": {"time": "2021-02-21 05:54:29.080367", "n_pass": [277, 77, 36], "n_token": 67, "loss": [0.13838696479797363, 0.1422983556985855], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["self", ")", "#INDENT#", "equation", ")", "#NEWLINE#", "self", ".", "equation", ".", "self", ".", "equation", ".", "#NEWLINE#", "self", "(", "equation", "self", ".", "equation", ".", "#NEWLINE#", "self", ".", "(", "equation", ".", ")", "#NEWLINE#", "self", "equation", ".", "CanLinearSolverBeUsedForSSQABS", "#NEWLINE#", "pyeq2", ".", "dataConvertorService", "(", ")", ".", "ConvertAndSortColumnarASCII", "(", "DataForUnitTests", ".", "asciiDataInColumns_2D", ",", "fittingTarget", ",", "equation", ".", "Solve", "(", ")", "#NEWLINE#", "fittingTarget", "=", "equation", "equation", ".", "solvedCoefficients", ")", "#NEWLINE#", "self", "(", "fittingTarget", "<="]}}
{"position": {"error_location": 43, "repair_targets": [3, 8, 12, 17, 20, 26, 31, 49, 57, 58], "repair_candidates": [3, 8, 12, 17, 20, 26, 31, 49, 57, 58, 0, 6, 10, 15, 18, 23, 30, 63, 47, 55, 65]}}
{"prediction": {"error_location": 0.8707615733146667, "repair_targets": [0.09499510377645493, 0.017928827553987503, 0.0031677503138780594, 0.10761647671461105, 0.0036178401205688715, 0.19912803173065186, 0.3309628665447235, 0.03925657272338867, 0.03646651655435562, 0.03422246873378754], "repair_candidates": [0.06151258945465088, 0.09499510377645493, 0.007637004368007183, 0.017928827553987503, 0.003231128677725792, 0.0031677503138780594, 0.008559256792068481, 0.10761647671461105, 0.003416219959035516, 0.0036178401205688715, 0.01886087842285633, 0.19912803173065186, 0.021610410884022713, 0.3309628665447235, 0.0006298808730207384, 0.03925657272338867, 0.0033779493533074856, 0.03646651655435562, 0.03422246873378754, 0.0037816991098225117, 2.053018397418782e-05], "target_probs": 0.8673624396324158}}


{"result": {"time": "2021-02-21 05:54:29.147333", "n_pass": [278, 78, 37], "n_token": 64, "loss": [0.08706429600715637, 0.06650999188423157], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["self", ")", "#INDENT#", "equation", ")", "#NEWLINE#", "self", ".", "equation", ".", "self", ".", "equation", ".", "#NEWLINE#", "self", "(", "equation", "self", ".", "equation", ".", "#NEWLINE#", "self", ".", "(", "equation", ".", ")", "#NEWLINE#", "self", "equation", ".", "CanLinearSolverBeUsedForSSQABS", "dataConvertorService", "(", ")", ".", "ConvertAndSortColumnarASCII", "(", "DataForUnitTests", ".", "asciiDataInColumns_2D", ",", "fittingTarget", ",", "equation", ".", "Solve", "(", ")", "#NEWLINE#", "fittingTarget", "=", "equation", "equation", ".", "solvedCoefficients", ")", "#NEWLINE#", "self", "(", "fittingTarget", "<="]}}
{"position": {"error_location": 40, "repair_targets": [3, 8, 12, 17, 20, 26, 31, 46, 54, 55], "repair_candidates": [3, 8, 12, 17, 20, 26, 31, 46, 54, 55, 0, 6, 10, 15, 18, 23, 30, 60, 44, 52, 62]}}
{"prediction": {"error_location": 0.9166181683540344, "repair_targets": [0.07516947388648987, 0.009308154694736004, 0.002320301253348589, 0.13079386949539185, 0.0044450522400438786, 0.4736984968185425, 0.17188645899295807, 0.04319789633154869, 0.016203228384256363, 0.008630667813122272], "repair_candidates": [0.02479447051882744, 0.07516947388648987, 0.007898807525634766, 0.009308154694736004, 0.0022547596599906683, 0.002320301253348589, 0.005892119370400906, 0.13079386949539185, 0.002948745386675, 0.0044450522400438786, 0.010922052897512913, 0.4736984968185425, 0.006413187365978956, 0.17188645899295807, 0.00013497861800715327, 0.04319789633154869, 0.0015002653235569596, 0.016203228384256363, 0.008630667813122272, 0.0015817279927432537, 5.262788363324944e-06], "target_probs": 0.935653567314148}}


{"result": {"time": "2021-02-21 05:54:29.214045", "n_pass": [279, 79, 38], "n_token": 61, "loss": [0.28392910957336426, 0.12283874303102493], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["self", ")", "#INDENT#", "equation", ")", "#NEWLINE#", "self", ".", "equation", ".", "self", ".", "equation", ".", "#NEWLINE#", "self", "(", "equation", "self", ".", "equation", ".", "#NEWLINE#", "self", ".", "(", "equation", ".", ")", "#NEWLINE#", "self", "equation", ".", "CanLinearSolverBeUsedForSSQABS", ".", "ConvertAndSortColumnarASCII", "(", "DataForUnitTests", ".", "asciiDataInColumns_2D", ",", "fittingTarget", ",", "equation", ".", "Solve", "(", ")", "#NEWLINE#", "fittingTarget", "=", "equation", "equation", ".", "solvedCoefficients", ")", "#NEWLINE#", "self", "(", "fittingTarget", "<="]}}
{"position": {"error_location": 37, "repair_targets": [3, 8, 12, 17, 20, 26, 31, 43, 51, 52], "repair_candidates": [3, 8, 12, 17, 20, 26, 31, 43, 51, 52, 0, 6, 10, 15, 18, 23, 30, 57, 41, 49, 59]}}
{"prediction": {"error_location": 0.7528200149536133, "repair_targets": [0.09856311976909637, 0.010266199707984924, 0.004069808404892683, 0.2281559854745865, 0.007253962568938732, 0.2414928376674652, 0.22847586870193481, 0.05033089965581894, 0.01061949972063303, 0.0051781125366687775], "repair_candidates": [0.04146302863955498, 0.09856311976909637, 0.00736846262589097, 0.010266199707984924, 0.0025771602522581816, 0.004069808404892683, 0.005669215228408575, 0.2281559854745865, 0.0029164575971663, 0.007253962568938732, 0.015554743818938732, 0.2414928376674652, 0.032073941081762314, 0.22847586870193481, 0.0007301236037164927, 0.05033089965581894, 0.00434805266559124, 0.01061949972063303, 0.0051781125366687775, 0.0028861025348305702, 6.3768266045372e-06], "target_probs": 0.8844062685966492}}


{"result": {"time": "2021-02-21 05:54:29.617480", "n_pass": [356, 85, 39], "n_token": 60, "loss": [0.8162549138069153, 0.3518350422382355], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["self", ")", "#INDENT#", "equation", ")", "#NEWLINE#", "self", ".", "equation", ".", "self", ".", "equation", ".", "#NEWLINE#", "self", "(", "equation", "self", ".", "equation", ".", "#NEWLINE#", "self", ".", "(", "equation", ".", ")", "#NEWLINE#", "self", "equation", ".", "CanLinearSolverBeUsedForSSQABS", "ConvertAndSortColumnarASCII", "(", "DataForUnitTests", ".", "asciiDataInColumns_2D", ",", "fittingTarget", ",", "equation", ".", "Solve", "(", ")", "#NEWLINE#", "fittingTarget", "=", "equation", "equation", ".", "solvedCoefficients", ")", "#NEWLINE#", "self", "(", "fittingTarget", "<="]}}
{"position": {"error_location": 36, "repair_targets": [3, 8, 12, 17, 20, 26, 31, 42, 50, 51], "repair_candidates": [3, 8, 12, 17, 20, 26, 31, 42, 50, 51, 0, 6, 10, 15, 18, 23, 30, 56, 40, 48, 58]}}
{"prediction": {"error_location": 0.4420842230319977, "repair_targets": [0.12087631225585938, 0.010829576291143894, 0.005903606303036213, 0.21651853621006012, 0.008191625587642193, 0.07140140235424042, 0.189096599817276, 0.06348659843206406, 0.01263893861323595, 0.00445296848192811], "repair_candidates": [0.08642680197954178, 0.12087631225585938, 0.018174972385168076, 0.010829576291143894, 0.006840232759714127, 0.005903606303036213, 0.017826786264777184, 0.21651853621006012, 0.005949658807367086, 0.008191625587642193, 0.036025214940309525, 0.07140140235424042, 0.09811767935752869, 0.189096599817276, 0.0023572235368192196, 0.06348659843206406, 0.01620963029563427, 0.01263893861323595, 0.00445296848192811, 0.00865939911454916, 1.6193784176721238e-05], "target_probs": 0.7033961415290833}}


{"result": {"time": "2021-02-21 05:54:29.684412", "n_pass": [358, 86, 40], "n_token": 58, "loss": [0.0370197631418705, 0.15870057046413422], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["self", ")", "#INDENT#", "equation", ")", "#NEWLINE#", "self", ".", "equation", ".", "self", ".", "equation", ".", "#NEWLINE#", "self", "(", "equation", "self", ".", "equation", ".", "#NEWLINE#", "self", ".", "(", "equation", ".", ")", "#NEWLINE#", "self", "equation", ".", "CanLinearSolverBeUsedForSSQABS", "ConvertAndSortColumnarASCII", "(", "DataForUnitTests", ".", "fittingTarget", ",", "equation", ".", "Solve", "(", ")", "#NEWLINE#", "fittingTarget", "=", "equation", "equation", ".", "solvedCoefficients", ")", "#NEWLINE#", "self", "(", "fittingTarget", "<="]}}
{"position": {"error_location": 36, "repair_targets": [3, 8, 12, 17, 20, 26, 31, 40, 48, 49], "repair_candidates": [3, 8, 12, 17, 20, 26, 31, 40, 48, 49, 0, 6, 10, 15, 18, 23, 30, 54, 38, 46, 56]}}
{"prediction": {"error_location": 0.9636572003364563, "repair_targets": [0.017585329711437225, 0.000468415702925995, 0.00043164720409549773, 0.17033033072948456, 0.0005016549257561564, 0.14674648642539978, 0.14076365530490875, 0.02810029312968254, 0.24935828149318695, 0.09896574914455414], "repair_candidates": [0.010304158553481102, 0.017585329711437225, 0.02736089937388897, 0.000468415702925995, 0.007946331985294819, 0.00043164720409549773, 0.0098795797675848, 0.17033033072948456, 0.0096885422244668, 0.0005016549257561564, 0.021571382880210876, 0.14674648642539978, 0.0586283802986145, 0.14076365530490875, 7.491560245398432e-05, 0.02810029312968254, 0.00042322833905927837, 0.24935828149318695, 0.09896574914455414, 0.0008671850082464516, 3.519525762385456e-06], "target_probs": 0.8532518148422241}}


{"result": {"time": "2021-02-21 05:54:29.752911", "n_pass": [361, 87, 41], "n_token": 56, "loss": [0.02113032527267933, 0.1647733747959137], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["self", ")", "#INDENT#", "equation", ")", "#NEWLINE#", "self", ".", "equation", ".", "self", ".", "equation", ".", "#NEWLINE#", "self", "(", "equation", "self", ".", "equation", ".", "#NEWLINE#", "self", ".", "(", "equation", ".", ")", "#NEWLINE#", "self", "equation", ".", "CanLinearSolverBeUsedForSSQABS", "ConvertAndSortColumnarASCII", "(", "DataForUnitTests", ".", "fittingTarget", ",", "equation", ".", ")", "#NEWLINE#", "fittingTarget", "=", "equation", "equation", ".", "solvedCoefficients", ")", "#NEWLINE#", "self", "(", "fittingTarget", "<="]}}
{"position": {"error_location": 36, "repair_targets": [3, 8, 12, 17, 20, 26, 31, 40, 46, 47], "repair_candidates": [3, 8, 12, 17, 20, 26, 31, 40, 46, 47, 0, 6, 10, 15, 18, 23, 30, 52, 38, 44, 54]}}
{"prediction": {"error_location": 0.9790913462638855, "repair_targets": [0.015941761434078217, 0.00027244191733188927, 0.0002538396802265197, 0.12154234200716019, 0.00030803747358731925, 0.09464903920888901, 0.1292019933462143, 0.19272544980049133, 0.1927940845489502, 0.10039693117141724], "repair_candidates": [0.008529558777809143, 0.015941761434078217, 0.029626160860061646, 0.00027244191733188927, 0.007736751344054937, 0.0002538396802265197, 0.008065595291554928, 0.12154234200716019, 0.009164239279925823, 0.00030803747358731925, 0.020877739414572716, 0.09464903920888901, 0.06732643395662308, 0.1292019933462143, 9.973387932404876e-05, 0.19272544980049133, 0.00014796131290495396, 0.1927940845489502, 0.10039693117141724, 0.00033683754736557603, 3.0889584650140023e-06], "target_probs": 0.848085880279541}}


{"result": {"time": "2021-02-21 05:54:30.018099", "n_pass": [370, 91, 42], "n_token": 55, "loss": [0.027160951867699623, 0.2516767978668213], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["self", "#INDENT#", "equation", ")", "#NEWLINE#", "self", ".", "equation", ".", "self", ".", "equation", ".", "#NEWLINE#", "self", "(", "equation", "self", ".", "equation", ".", "#NEWLINE#", "self", ".", "(", "equation", ".", ")", "#NEWLINE#", "self", "equation", ".", "CanLinearSolverBeUsedForSSQABS", "ConvertAndSortColumnarASCII", "(", "DataForUnitTests", ".", "fittingTarget", ",", "equation", ".", ")", "#NEWLINE#", "fittingTarget", "=", "equation", "equation", ".", "solvedCoefficients", ")", "#NEWLINE#", "self", "(", "fittingTarget", "<="]}}
{"position": {"error_location": 35, "repair_targets": [2, 7, 11, 16, 19, 25, 30, 39, 45, 46], "repair_candidates": [2, 7, 11, 16, 19, 25, 30, 39, 45, 46, 0, 5, 9, 14, 17, 22, 29, 51, 37, 43, 53]}}
{"prediction": {"error_location": 0.9732047915458679, "repair_targets": [0.008571943268179893, 0.00035908041172660887, 0.00033022623392753303, 0.17843547463417053, 0.0003406621399335563, 0.06170280650258064, 0.06587085872888565, 0.15239936113357544, 0.21569672226905823, 0.09378881752490997], "repair_candidates": [0.010086465626955032, 0.008571943268179893, 0.06620604544878006, 0.00035908041172660887, 0.01263584103435278, 0.00033022623392753303, 0.010497224517166615, 0.17843547463417053, 0.013800176791846752, 0.0003406621399335563, 0.02735796570777893, 0.06170280650258064, 0.08113375306129456, 0.06587085872888565, 0.00013945723185315728, 0.15239936113357544, 0.00025752405053935945, 0.21569672226905823, 0.09378881752490997, 0.00038395263254642487, 5.715682618756546e-06], "target_probs": 0.7774959802627563}}


{"result": {"time": "2021-02-21 05:54:30.152970", "n_pass": [373, 93, 43], "n_token": 54, "loss": [0.04004952684044838, 0.648693323135376], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["self", "#INDENT#", "equation", "#NEWLINE#", "self", ".", "equation", ".", "self", ".", "equation", ".", "#NEWLINE#", "self", "(", "equation", "self", ".", "equation", ".", "#NEWLINE#", "self", ".", "(", "equation", ".", ")", "#NEWLINE#", "self", "equation", ".", "CanLinearSolverBeUsedForSSQABS", "ConvertAndSortColumnarASCII", "(", "DataForUnitTests", ".", "fittingTarget", ",", "equation", ".", ")", "#NEWLINE#", "fittingTarget", "=", "equation", "equation", ".", "solvedCoefficients", ")", "#NEWLINE#", "self", "(", "fittingTarget", "<="]}}
{"position": {"error_location": 34, "repair_targets": [2, 6, 10, 15, 18, 24, 29, 38, 44, 45], "repair_candidates": [2, 6, 10, 15, 18, 24, 29, 38, 44, 45, 0, 4, 8, 13, 16, 21, 28, 50, 36, 42, 52]}}
{"prediction": {"error_location": 0.9607419967651367, "repair_targets": [0.0024693533778190613, 0.0004442947974894196, 0.0003981514601036906, 0.06952442973852158, 0.0002841103996615857, 0.10367193818092346, 0.055004995316267014, 0.11783485114574432, 0.11067323386669159, 0.06242303177714348], "repair_candidates": [0.013397051952779293, 0.0024693533778190613, 0.17715933918952942, 0.0004442947974894196, 0.03509846329689026, 0.0003981514601036906, 0.013986334204673767, 0.06952442973852158, 0.04942113906145096, 0.0002841103996615857, 0.013883975334465504, 0.10367193818092346, 0.17344988882541656, 0.055004995316267014, 0.0001818194577936083, 0.11783485114574432, 0.00034894273267127573, 0.11067323386669159, 0.06242303177714348, 0.0003360191185493022, 8.589156095695216e-06], "target_probs": 0.5227283835411072}}


{"result": {"time": "2021-02-21 05:54:30.286068", "n_pass": [376, 95, 44], "n_token": 53, "loss": [0.014739193953573704, 0.600538432598114], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["self", "#INDENT#", "equation", "#NEWLINE#", "self", "equation", ".", "self", ".", "equation", ".", "#NEWLINE#", "self", "(", "equation", "self", ".", "equation", ".", "#NEWLINE#", "self", ".", "(", "equation", ".", ")", "#NEWLINE#", "self", "equation", ".", "CanLinearSolverBeUsedForSSQABS", "ConvertAndSortColumnarASCII", "(", "DataForUnitTests", ".", "fittingTarget", ",", "equation", ".", ")", "#NEWLINE#", "fittingTarget", "=", "equation", "equation", ".", "solvedCoefficients", ")", "#NEWLINE#", "self", "(", "fittingTarget", "<="]}}
{"position": {"error_location": 33, "repair_targets": [2, 5, 9, 14, 17, 23, 28, 37, 43, 44], "repair_candidates": [2, 5, 9, 14, 17, 23, 28, 37, 43, 44, 0, 4, 7, 12, 15, 20, 27, 49, 35, 41, 51]}}
{"prediction": {"error_location": 0.9853690266609192, "repair_targets": [0.004215905908495188, 0.0040914625860750675, 0.0003683417453430593, 0.08588986098766327, 0.0002993105154018849, 0.130910262465477, 0.0449669286608696, 0.10163476318120956, 0.11227086186408997, 0.06386851519346237], "repair_candidates": [0.007968262769281864, 0.004215905908495188, 0.16499276459217072, 0.0040914625860750675, 0.02892502397298813, 0.0003683417453430593, 0.0046058399602770805, 0.08588986098766327, 0.06615632027387619, 0.0002993105154018849, 0.03674314543604851, 0.130910262465477, 0.14162994921207428, 0.0449669286608696, 0.0001395541912643239, 0.10163476318120956, 0.0001670041965553537, 0.11227086186408997, 0.06386851519346237, 0.00014926200674381107, 6.621518878091592e-06], "target_probs": 0.5485162138938904}}


{"result": {"time": "2021-02-21 05:54:30.353751", "n_pass": [378, 96, 45], "n_token": 52, "loss": [0.006760226096957922, 0.6362616419792175], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["self", "#INDENT#", "equation", "#NEWLINE#", "self", "equation", "self", ".", "equation", ".", "#NEWLINE#", "self", "(", "equation", "self", ".", "equation", ".", "#NEWLINE#", "self", ".", "(", "equation", ".", ")", "#NEWLINE#", "self", "equation", ".", "CanLinearSolverBeUsedForSSQABS", "ConvertAndSortColumnarASCII", "(", "DataForUnitTests", ".", "fittingTarget", ",", "equation", ".", ")", "#NEWLINE#", "fittingTarget", "=", "equation", "equation", ".", "solvedCoefficients", ")", "#NEWLINE#", "self", "(", "fittingTarget", "<="]}}
{"position": {"error_location": 32, "repair_targets": [2, 5, 8, 13, 16, 22, 27, 36, 42, 43], "repair_candidates": [2, 5, 8, 13, 16, 22, 27, 36, 42, 43, 0, 4, 6, 11, 14, 19, 26, 48, 34, 40, 50]}}
{"prediction": {"error_location": 0.9932623505592346, "repair_targets": [0.006543728522956371, 0.006338674109429121, 0.0005525542073883116, 0.049827974289655685, 0.0003190896240994334, 0.14682120084762573, 0.03373410180211067, 0.10134748369455338, 0.11412113904953003, 0.06966140866279602], "repair_candidates": [0.005727085750550032, 0.006543728522956371, 0.11318788677453995, 0.006338674109429121, 0.049561966210603714, 0.0005525542073883116, 0.0027207578532397747, 0.049827974289655685, 0.10650902986526489, 0.0003190896240994334, 0.05070151388645172, 0.14682120084762573, 0.1419583112001419, 0.03373410180211067, 0.00010941281652776524, 0.10134748369455338, 0.00010006340016843751, 0.11412113904953003, 0.06966140866279602, 0.00015222080401144922, 4.421600806381321e-06], "target_probs": 0.5292673110961914}}


{"result": {"time": "2021-02-21 05:54:30.420198", "n_pass": [380, 97, 46], "n_token": 51, "loss": [0.004224305972456932, 0.4928688406944275], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["self", "#INDENT#", "equation", "#NEWLINE#", "self", "equation", "self", "equation", ".", "#NEWLINE#", "self", "(", "equation", "self", ".", "equation", ".", "#NEWLINE#", "self", ".", "(", "equation", ".", ")", "#NEWLINE#", "self", "equation", ".", "CanLinearSolverBeUsedForSSQABS", "ConvertAndSortColumnarASCII", "(", "DataForUnitTests", ".", "fittingTarget", ",", "equation", ".", ")", "#NEWLINE#", "fittingTarget", "=", "equation", "equation", ".", "solvedCoefficients", ")", "#NEWLINE#", "self", "(", "fittingTarget", "<="]}}
{"position": {"error_location": 31, "repair_targets": [2, 5, 7, 12, 15, 21, 26, 35, 41, 42], "repair_candidates": [2, 5, 7, 12, 15, 21, 26, 35, 41, 42, 0, 4, 6, 10, 13, 18, 25, 47, 33, 39, 49]}}
{"prediction": {"error_location": 0.9957844614982605, "repair_targets": [0.00846424326300621, 0.006987347733229399, 0.0005844099214300513, 0.06790471822023392, 0.0003117269079666585, 0.13350944221019745, 0.038935910910367966, 0.13407957553863525, 0.1339518278837204, 0.0861421599984169], "repair_candidates": [0.0054710302501916885, 0.00846424326300621, 0.06921335309743881, 0.006987347733229399, 0.08041530102491379, 0.0005844099214300513, 0.0037853645626455545, 0.06790471822023392, 0.06895562261343002, 0.0003117269079666585, 0.0667022317647934, 0.13350944221019745, 0.09430032223463058, 0.038935910910367966, 7.445288792951033e-05, 0.13407957553863525, 6.851651414763182e-05, 0.1339518278837204, 0.0861421599984169, 0.00013973555178381503, 2.715206619541277e-06], "target_probs": 0.6108713746070862}}


{"result": {"time": "2021-02-21 05:54:30.487188", "n_pass": [382, 98, 47], "n_token": 50, "loss": [0.0036839256063103676, 0.39857298135757446], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["self", "#INDENT#", "equation", "#NEWLINE#", "self", "equation", "self", "equation", "#NEWLINE#", "self", "(", "equation", "self", ".", "equation", ".", "#NEWLINE#", "self", ".", "(", "equation", ".", ")", "#NEWLINE#", "self", "equation", ".", "CanLinearSolverBeUsedForSSQABS", "ConvertAndSortColumnarASCII", "(", "DataForUnitTests", ".", "fittingTarget", ",", "equation", ".", ")", "#NEWLINE#", "fittingTarget", "=", "equation", "equation", ".", "solvedCoefficients", ")", "#NEWLINE#", "self", "(", "fittingTarget", "<="]}}
{"position": {"error_location": 30, "repair_targets": [2, 5, 7, 11, 14, 20, 25, 34, 40, 41], "repair_candidates": [2, 5, 7, 11, 14, 20, 25, 34, 40, 41, 0, 4, 6, 9, 12, 17, 24, 46, 32, 38, 48]}}
{"prediction": {"error_location": 0.9963228702545166, "repair_targets": [0.008036237210035324, 0.006192156579345465, 0.01482646819204092, 0.07385093718767166, 0.0003578365140128881, 0.10693218559026718, 0.03253966197371483, 0.1982768476009369, 0.14231713116168976, 0.08794785290956497], "repair_candidates": [0.004970422945916653, 0.008036237210035324, 0.052214365452528, 0.006192156579345465, 0.033301133662462234, 0.01482646819204092, 0.007511627860367298, 0.07385093718767166, 0.06539038568735123, 0.0003578365140128881, 0.08443667739629745, 0.10693218559026718, 0.0806276947259903, 0.03253966197371483, 7.441499474225566e-05, 0.1982768476009369, 7.939321949379519e-05, 0.14231713116168976, 0.08794785290956497, 0.00011461289977887645, 1.972232666958007e-06], "target_probs": 0.6712772846221924}}


{"result": {"time": "2021-02-21 05:54:30.553873", "n_pass": [383, 99, 48], "n_token": 49, "loss": [0.003702691290527582, 0.30805572867393494], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["self", "#INDENT#", "equation", "#NEWLINE#", "self", "equation", "self", "equation", "self", "(", "equation", "self", ".", "equation", ".", "#NEWLINE#", "self", ".", "(", "equation", ".", ")", "#NEWLINE#", "self", "equation", ".", "CanLinearSolverBeUsedForSSQABS", "ConvertAndSortColumnarASCII", "(", "DataForUnitTests", ".", "fittingTarget", ",", "equation", ".", ")", "#NEWLINE#", "fittingTarget", "=", "equation", "equation", ".", "solvedCoefficients", ")", "#NEWLINE#", "self", "(", "fittingTarget", "<="]}}
{"position": {"error_location": 29, "repair_targets": [2, 5, 7, 10, 13, 19, 24, 33, 39, 40], "repair_candidates": [2, 5, 7, 10, 13, 19, 24, 33, 39, 40, 0, 4, 6, 8, 11, 16, 23, 45, 31, 37, 47]}}
{"prediction": {"error_location": 0.9963042736053467, "repair_targets": [0.007198921870440245, 0.009214496240019798, 0.014323837123811245, 0.04435550048947334, 0.00036029054899699986, 0.04681048542261124, 0.013148171827197075, 0.3110713064670563, 0.19003617763519287, 0.09835515916347504], "repair_candidates": [0.005583637859672308, 0.007198921870440245, 0.04570850357413292, 0.009214496240019798, 0.019353821873664856, 0.014323837123811245, 0.0071673705242574215, 0.04435550048947334, 0.02796434797346592, 0.00036029054899699986, 0.07792934775352478, 0.04681048542261124, 0.0810605064034462, 0.013148171827197075, 5.0773360271705315e-05, 0.3110713064670563, 9.341660916106775e-05, 0.19003617763519287, 0.09835515916347504, 0.00021207572717685252, 1.8424236714054132e-06], "target_probs": 0.7348743677139282}}


{"result": {"time": "2021-02-21 05:54:30.688473", "n_pass": [388, 101, 49], "n_token": 48, "loss": [0.004539541434496641, 0.24550235271453857], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["self", "#INDENT#", "equation", "#NEWLINE#", "self", "equation", "self", "equation", "self", "(", "equation", "self", "equation", ".", "#NEWLINE#", "self", ".", "(", "equation", ".", ")", "#NEWLINE#", "self", "equation", ".", "CanLinearSolverBeUsedForSSQABS", "ConvertAndSortColumnarASCII", "(", "DataForUnitTests", ".", "fittingTarget", ",", "equation", ".", ")", "#NEWLINE#", "fittingTarget", "=", "equation", "equation", ".", "solvedCoefficients", ")", "#NEWLINE#", "self", "(", "fittingTarget", "<="]}}
{"position": {"error_location": 28, "repair_targets": [2, 5, 7, 10, 12, 18, 23, 32, 38, 39], "repair_candidates": [2, 5, 7, 10, 12, 18, 23, 32, 38, 39, 0, 4, 6, 8, 11, 15, 22, 44, 30, 36, 46]}}
{"prediction": {"error_location": 0.9954708814620972, "repair_targets": [0.007745515089482069, 0.008831534534692764, 0.01279448438435793, 0.006350698880851269, 0.0004442633653525263, 0.020192457363009453, 0.014026832766830921, 0.3593398332595825, 0.22655704617500305, 0.12602879106998444], "repair_candidates": [0.005187826696783304, 0.007745515089482069, 0.05393565818667412, 0.008831534534692764, 0.018586862832307816, 0.01279448438435793, 0.005365392658859491, 0.006350698880851269, 0.02409852296113968, 0.0004442633653525263, 0.04502585530281067, 0.020192457363009453, 0.06497350335121155, 0.014026832766830921, 5.791907824459486e-05, 0.3593398332595825, 0.00014054050552658737, 0.22655704617500305, 0.12602879106998444, 0.00031444159685634077, 2.1059354367025662e-06], "target_probs": 0.7823114395141602}}


{"result": {"time": "2021-02-21 05:54:30.755283", "n_pass": [390, 102, 50], "n_token": 47, "loss": [0.004391312599182129, 0.1191241592168808], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["self", "#INDENT#", "equation", "#NEWLINE#", "self", "equation", "self", "equation", "self", "(", "equation", "self", "equation", "#NEWLINE#", "self", ".", "(", "equation", ".", ")", "#NEWLINE#", "self", "equation", ".", "CanLinearSolverBeUsedForSSQABS", "ConvertAndSortColumnarASCII", "(", "DataForUnitTests", ".", "fittingTarget", ",", "equation", ".", ")", "#NEWLINE#", "fittingTarget", "=", "equation", "equation", ".", "solvedCoefficients", ")", "#NEWLINE#", "self", "(", "fittingTarget", "<="]}}
{"position": {"error_location": 27, "repair_targets": [2, 5, 7, 10, 12, 17, 22, 31, 37, 38], "repair_candidates": [2, 5, 7, 10, 12, 17, 22, 31, 37, 38, 0, 4, 6, 8, 11, 14, 21, 43, 29, 35, 45]}}
{"prediction": {"error_location": 0.9956182241439819, "repair_targets": [0.021627863869071007, 0.015248261392116547, 0.01346550602465868, 0.002900246065109968, 0.014303565956652164, 0.15349245071411133, 0.016223253682255745, 0.25082021951675415, 0.25814223289489746, 0.1414739340543747], "repair_candidates": [0.006493850145488977, 0.021627863869071007, 0.039944689720869064, 0.015248261392116547, 0.01026478037238121, 0.01346550602465868, 0.003153057536110282, 0.002900246065109968, 0.009613186120986938, 0.014303565956652164, 0.006964368280023336, 0.15349245071411133, 0.035380445420742035, 0.016223253682255745, 7.450888369930908e-05, 0.25082021951675415, 0.00013214100908953696, 0.25814223289489746, 0.1414739340543747, 0.00027915966347791255, 2.2739825453754747e-06], "target_probs": 0.8876975774765015}}


{"result": {"time": "2021-02-21 05:54:30.822026", "n_pass": [391, 103, 51], "n_token": 46, "loss": [0.0025221463292837143, 0.41265496611595154], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["self", "#INDENT#", "equation", "#NEWLINE#", "self", "equation", "self", "equation", "self", "(", "equation", "self", "equation", "self", ".", "(", "equation", ".", ")", "#NEWLINE#", "self", "equation", ".", "CanLinearSolverBeUsedForSSQABS", "ConvertAndSortColumnarASCII", "(", "DataForUnitTests", ".", "fittingTarget", ",", "equation", ".", ")", "#NEWLINE#", "fittingTarget", "=", "equation", "equation", ".", "solvedCoefficients", ")", "#NEWLINE#", "self", "(", "fittingTarget", "<="]}}
{"position": {"error_location": 26, "repair_targets": [2, 5, 7, 10, 12, 16, 21, 30, 36, 37], "repair_candidates": [2, 5, 7, 10, 12, 16, 21, 30, 36, 37, 0, 4, 6, 8, 11, 13, 20, 42, 28, 34, 44]}}
{"prediction": {"error_location": 0.9974809288978577, "repair_targets": [0.008415523916482925, 0.00588113022968173, 0.01587233692407608, 0.006558125838637352, 0.06905484199523926, 0.015425030142068863, 0.05136720836162567, 0.23623014986515045, 0.16968382894992828, 0.08340243995189667], "repair_candidates": [0.007518076803535223, 0.008415523916482925, 0.05068740248680115, 0.00588113022968173, 0.02937638759613037, 0.01587233692407608, 0.010022921487689018, 0.006558125838637352, 0.07878435403108597, 0.06905484199523926, 0.035630881786346436, 0.015425030142068863, 0.12593312561511993, 0.05136720836162567, 2.490294718882069e-05, 0.23623014986515045, 5.910066101932898e-05, 0.16968382894992828, 0.08340243995189667, 7.112127059372142e-05, 1.1125986247861874e-06], "target_probs": 0.6618906259536743}}


{"result": {"time": "2021-02-21 05:54:30.890950", "n_pass": [393, 104, 52], "n_token": 45, "loss": [0.002036522841081023, 0.14469188451766968], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["self", "#INDENT#", "equation", "#NEWLINE#", "self", "equation", "self", "equation", "self", "(", "equation", "self", "equation", "self", "(", "equation", ".", ")", "#NEWLINE#", "self", "equation", ".", "CanLinearSolverBeUsedForSSQABS", "ConvertAndSortColumnarASCII", "(", "DataForUnitTests", ".", "fittingTarget", ",", "equation", ".", ")", "#NEWLINE#", "fittingTarget", "=", "equation", "equation", ".", "solvedCoefficients", ")", "#NEWLINE#", "self", "(", "fittingTarget", "<="]}}
{"position": {"error_location": 25, "repair_targets": [2, 5, 7, 10, 12, 15, 20, 29, 35, 36], "repair_candidates": [2, 5, 7, 10, 12, 15, 20, 29, 35, 36, 0, 4, 6, 8, 11, 13, 19, 41, 27, 33, 43]}}
{"prediction": {"error_location": 0.9979653358459473, "repair_targets": [0.012592995539307594, 0.006969722453504801, 0.014484534971415997, 0.004211470950394869, 0.0024883393198251724, 0.1336817443370819, 0.06137557327747345, 0.23722858726978302, 0.25172173976898193, 0.1405341625213623], "repair_candidates": [0.0075830318965017796, 0.012592995539307594, 0.027737723663449287, 0.006969722453504801, 0.01419694721698761, 0.014484534971415997, 0.004477500915527344, 0.004211470950394869, 0.0017099969554692507, 0.0024883393198251724, 0.0007531577721238136, 0.1336817443370819, 0.07806414365768433, 0.06137557327747345, 4.7405646910192445e-05, 0.23722858726978302, 4.376806828076951e-05, 0.25172173976898193, 0.1405341625213623, 9.6667863545008e-05, 7.480713293261942e-07], "target_probs": 0.8652888536453247}}


{"result": {"time": "2021-02-21 05:54:30.957551", "n_pass": [394, 105, 53], "n_token": 44, "loss": [0.002991132438182831, 0.3041404187679291], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["self", "#INDENT#", "equation", "#NEWLINE#", "self", "equation", "self", "equation", "self", "(", "equation", "self", "equation", "self", "equation", ".", ")", "#NEWLINE#", "self", "equation", ".", "CanLinearSolverBeUsedForSSQABS", "ConvertAndSortColumnarASCII", "(", "DataForUnitTests", ".", "fittingTarget", ",", "equation", ".", ")", "#NEWLINE#", "fittingTarget", "=", "equation", "equation", ".", "solvedCoefficients", ")", "#NEWLINE#", "self", "(", "fittingTarget", "<="]}}
{"position": {"error_location": 24, "repair_targets": [2, 5, 7, 10, 12, 14, 19, 28, 34, 35], "repair_candidates": [2, 5, 7, 10, 12, 14, 19, 28, 34, 35, 0, 4, 6, 8, 11, 13, 18, 40, 26, 32, 42]}}
{"prediction": {"error_location": 0.9970133304595947, "repair_targets": [0.01835794933140278, 0.01581156998872757, 0.022951116785407066, 0.0033367013093084097, 0.058547504246234894, 0.0009754237253218889, 0.06410788744688034, 0.1686577945947647, 0.25570574402809143, 0.12930558621883392], "repair_candidates": [0.00777913723140955, 0.01835794933140278, 0.04209568351507187, 0.01581156998872757, 0.019693216308951378, 0.022951116785407066, 0.002586799208074808, 0.0033367013093084097, 0.0465506948530674, 0.058547504246234894, 0.053727488964796066, 0.0009754237253218889, 0.0895465761423111, 0.06410788744688034, 5.233152842265554e-05, 0.1686577945947647, 4.7811037802603096e-05, 0.25570574402809143, 0.12930558621883392, 0.00016224334831349552, 6.949621251806093e-07], "target_probs": 0.7377572655677795}}


{"result": {"time": "2021-02-21 05:54:31.023985", "n_pass": [396, 106, 54], "n_token": 43, "loss": [0.005245968233793974, 0.1702778935432434], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["self", "#INDENT#", "equation", "#NEWLINE#", "self", "equation", "self", "equation", "self", "(", "equation", "self", "equation", "self", "equation", ")", "#NEWLINE#", "self", "equation", ".", "CanLinearSolverBeUsedForSSQABS", "ConvertAndSortColumnarASCII", "(", "DataForUnitTests", ".", "fittingTarget", ",", "equation", ".", ")", "#NEWLINE#", "fittingTarget", "=", "equation", "equation", ".", "solvedCoefficients", ")", "#NEWLINE#", "self", "(", "fittingTarget", "<="]}}
{"position": {"error_location": 23, "repair_targets": [2, 5, 7, 10, 12, 14, 18, 27, 33, 34], "repair_candidates": [2, 5, 7, 10, 12, 14, 18, 27, 33, 34, 0, 4, 6, 8, 11, 13, 17, 39, 25, 31, 41]}}
{"prediction": {"error_location": 0.9947677850723267, "repair_targets": [0.021174047142267227, 0.020582642406225204, 0.015409053303301334, 0.003911756910383701, 0.0178865734487772, 0.03453231602907181, 0.04439842700958252, 0.17432956397533417, 0.3492341637611389, 0.16197185218334198], "repair_candidates": [0.010992725379765034, 0.021174047142267227, 0.04580049589276314, 0.020582642406225204, 0.014697127975523472, 0.015409053303301334, 0.0018285405822098255, 0.003911756910383701, 0.026553096249699593, 0.0178865734487772, 0.019885027781128883, 0.03453231602907181, 0.03626329079270363, 0.04439842700958252, 0.00014336974709294736, 0.17432956397533417, 0.00012595788575708866, 0.3492341637611389, 0.16197185218334198, 0.0002783634699881077, 1.5641513755326741e-06], "target_probs": 0.8434303998947144}}


{"result": {"time": "2021-02-21 05:54:31.091194", "n_pass": [397, 107, 55], "n_token": 42, "loss": [0.0031070075929164886, 0.12073855847120285], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["self", "#INDENT#", "equation", "#NEWLINE#", "self", "equation", "self", "equation", "self", "(", "equation", "self", "equation", "self", "equation", "#NEWLINE#", "self", "equation", ".", "CanLinearSolverBeUsedForSSQABS", "ConvertAndSortColumnarASCII", "(", "DataForUnitTests", ".", "fittingTarget", ",", "equation", ".", ")", "#NEWLINE#", "fittingTarget", "=", "equation", "equation", ".", "solvedCoefficients", ")", "#NEWLINE#", "self", "(", "fittingTarget", "<="]}}
{"position": {"error_location": 22, "repair_targets": [2, 5, 7, 10, 12, 14, 17, 26, 32, 33], "repair_candidates": [2, 5, 7, 10, 12, 14, 17, 26, 32, 33, 0, 4, 6, 8, 11, 13, 16, 38, 24, 30, 40]}}
{"prediction": {"error_location": 0.9968976974487305, "repair_targets": [0.02656780742108822, 0.025247978046536446, 0.014930922538042068, 0.006134312134236097, 0.02869602106511593, 0.02768339216709137, 0.04327230155467987, 0.18425682187080383, 0.3675086200237274, 0.1619674116373062], "repair_candidates": [0.008858779445290565, 0.02656780742108822, 0.03600027412176132, 0.025247978046536446, 0.011603756807744503, 0.014930922538042068, 0.0033059141132980585, 0.006134312134236097, 0.01417569536715746, 0.02869602106511593, 0.014660222455859184, 0.02768339216709137, 0.024640940129756927, 0.04327230155467987, 0.00010478954936843365, 0.18425682187080383, 6.49209541734308e-05, 0.3675086200237274, 0.1619674116373062, 0.0003180576313752681, 1.1419228940212633e-06], "target_probs": 0.8862656354904175}}


{"result": {"time": "2021-02-21 05:54:31.158862", "n_pass": [398, 108, 56], "n_token": 41, "loss": [0.003069334663450718, 0.15018218755722046], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["self", "#INDENT#", "equation", "#NEWLINE#", "self", "equation", "self", "equation", "self", "(", "equation", "self", "equation", "self", "equation", "self", "equation", ".", "CanLinearSolverBeUsedForSSQABS", "ConvertAndSortColumnarASCII", "(", "DataForUnitTests", ".", "fittingTarget", ",", "equation", ".", ")", "#NEWLINE#", "fittingTarget", "=", "equation", "equation", ".", "solvedCoefficients", ")", "#NEWLINE#", "self", "(", "fittingTarget", "<="]}}
{"position": {"error_location": 21, "repair_targets": [2, 5, 7, 10, 12, 14, 16, 25, 31, 32], "repair_candidates": [2, 5, 7, 10, 12, 14, 16, 25, 31, 32, 0, 4, 6, 8, 11, 13, 15, 37, 23, 29, 39]}}
{"prediction": {"error_location": 0.996935248374939, "repair_targets": [0.03532766178250313, 0.03367931395769119, 0.02341122180223465, 0.004569925833493471, 0.09999867528676987, 0.0709497332572937, 0.0018184740329161286, 0.11343163251876831, 0.30947038531303406, 0.16789419949054718], "repair_candidates": [0.007346262689679861, 0.03532766178250313, 0.03087593801319599, 0.03367931395769119, 0.01262802816927433, 0.02341122180223465, 0.002456461079418659, 0.004569925833493471, 0.02423621341586113, 0.09999867528676987, 0.0464947372674942, 0.0709497332572937, 0.014938296750187874, 0.0018184740329161286, 0.00010917035979218781, 0.11343163251876831, 2.4967228455352597e-05, 0.30947038531303406, 0.16789419949054718, 0.0003382270806469023, 4.622687299615791e-07], "target_probs": 0.8605511784553528}}


{"result": {"time": "2021-02-21 05:54:31.225728", "n_pass": [401, 109, 57], "n_token": 40, "loss": [0.006272984202951193, 0.28397446870803833], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["self", "#INDENT#", "equation", "#NEWLINE#", "self", "equation", "self", "equation", "self", "(", "equation", "self", "equation", "self", "equation", "self", "equation", "CanLinearSolverBeUsedForSSQABS", "ConvertAndSortColumnarASCII", "(", "DataForUnitTests", ".", "fittingTarget", ",", "equation", ".", ")", "#NEWLINE#", "fittingTarget", "=", "equation", "equation", ".", "solvedCoefficients", ")", "#NEWLINE#", "self", "(", "fittingTarget", "<="]}}
{"position": {"error_location": 20, "repair_targets": [2, 5, 7, 10, 12, 14, 16, 24, 30, 31], "repair_candidates": [2, 5, 7, 10, 12, 14, 16, 24, 30, 31, 0, 4, 6, 8, 11, 13, 15, 36, 22, 28, 38]}}
{"prediction": {"error_location": 0.9937466382980347, "repair_targets": [0.017468348145484924, 0.0171506404876709, 0.006666169036179781, 0.0019466959638521075, 0.04636865854263306, 0.03595922514796257, 0.00976280216127634, 0.13036644458770752, 0.29886212944984436, 0.18823470175266266], "repair_candidates": [0.007644677069038153, 0.017468348145484924, 0.06904428452253342, 0.0171506404876709, 0.009655123576521873, 0.006666169036179781, 0.0027912696823477745, 0.0019466959638521075, 0.0376194603741169, 0.04636865854263306, 0.06440118700265884, 0.03595922514796257, 0.055550768971443176, 0.00976280216127634, 0.00010616872896207497, 0.13036644458770752, 4.3587559048319235e-05, 0.29886212944984436, 0.18823470175266266, 0.00035699555883184075, 6.665382557002886e-07], "target_probs": 0.752785861492157}}


{"result": {"time": "2021-02-21 05:54:31.291666", "n_pass": [402, 110, 58], "n_token": 39, "loss": [0.010699407197535038, 0.3238077163696289], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["self", "#INDENT#", "equation", "#NEWLINE#", "self", "equation", "self", "equation", "self", "(", "equation", "self", "equation", "self", "equation", "self", "equation", "ConvertAndSortColumnarASCII", "(", "DataForUnitTests", ".", "fittingTarget", ",", "equation", ".", ")", "#NEWLINE#", "fittingTarget", "=", "equation", "equation", ".", "solvedCoefficients", ")", "#NEWLINE#", "self", "(", "fittingTarget", "<="]}}
{"position": {"error_location": 19, "repair_targets": [2, 5, 7, 10, 12, 14, 16, 23, 29, 30], "repair_candidates": [2, 5, 7, 10, 12, 14, 16, 23, 29, 30, 0, 4, 6, 8, 11, 13, 15, 35, 21, 27, 37]}}
{"prediction": {"error_location": 0.9893576502799988, "repair_targets": [0.02840397134423256, 0.019968820735812187, 0.005926858633756638, 0.0020837606862187386, 0.03992635756731033, 0.007125036790966988, 0.013269026763737202, 0.15014085173606873, 0.28344765305519104, 0.17309698462486267], "repair_candidates": [0.008596898056566715, 0.02840397134423256, 0.14045602083206177, 0.019968820735812187, 0.010454963892698288, 0.005926858633756638, 0.0034922990016639233, 0.0020837606862187386, 0.027927424758672714, 0.03992635756731033, 0.047016873955726624, 0.007125036790966988, 0.03769116476178169, 0.013269026763737202, 0.00011978059046668932, 0.15014085173606873, 8.611409430159256e-05, 0.28344765305519104, 0.17309698462486267, 0.0007678903639316559, 1.25511121495947e-06], "target_probs": 0.7233893275260925}}


{"result": {"time": "2021-02-21 05:54:31.548797", "n_pass": [411, 114, 59], "n_token": 37, "loss": [0.06388937681913376, 0.4253450334072113], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["self", "#INDENT#", "equation", "#NEWLINE#", "self", "equation", "self", "equation", "self", "(", "equation", "self", "equation", "self", "equation", "self", "equation", "ConvertAndSortColumnarASCII", "(", "DataForUnitTests", ".", "fittingTarget", ",", "equation", ".", ")", "#NEWLINE#", "fittingTarget", "=", "equation", "equation", ".", "solvedCoefficients", "self", "(", "fittingTarget", "<="]}}
{"position": {"error_location": 19, "repair_targets": [2, 5, 7, 10, 12, 14, 16, 23, 29, 30], "repair_candidates": [2, 5, 7, 10, 12, 14, 16, 23, 29, 30, 0, 4, 6, 8, 11, 13, 15, 33, 21, 27, 35]}}
{"prediction": {"error_location": 0.9381088614463806, "repair_targets": [0.0263952799141407, 0.024412760511040688, 0.018558792769908905, 0.008196035400032997, 0.1021067202091217, 0.010967363603413105, 0.022083235904574394, 0.2748650014400482, 0.0850406065583229, 0.08091847598552704], "repair_candidates": [0.021959958598017693, 0.0263952799141407, 0.11168286204338074, 0.024412760511040688, 0.03278401494026184, 0.018558792769908905, 0.007795702200382948, 0.008196035400032997, 0.04679648205637932, 0.1021067202091217, 0.07791025191545486, 0.010967363603413105, 0.03930959478020668, 0.022083235904574394, 0.0006818746915087104, 0.2748650014400482, 0.003367931116372347, 0.0850406065583229, 0.08091847598552704, 0.00415063789114356, 1.6409227100666612e-05], "target_probs": 0.6535442471504211}}


{"result": {"time": "2021-02-21 05:54:31.681046", "n_pass": [417, 116, 60], "n_token": 36, "loss": [0.19508470594882965, 0.591977059841156], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["self", "#INDENT#", "equation", "self", "equation", "self", "equation", "self", "(", "equation", "self", "equation", "self", "equation", "self", "equation", "ConvertAndSortColumnarASCII", "(", "DataForUnitTests", ".", "fittingTarget", ",", "equation", ".", ")", "#NEWLINE#", "fittingTarget", "=", "equation", "equation", ".", "solvedCoefficients", "self", "(", "fittingTarget", "<="]}}
{"position": {"error_location": 18, "repair_targets": [2, 4, 6, 9, 11, 13, 15, 22, 28, 29], "repair_candidates": [2, 4, 6, 9, 11, 13, 15, 22, 28, 29, 0, 3, 5, 7, 10, 12, 14, 32, 20, 26, 34]}}
{"prediction": {"error_location": 0.8227648735046387, "repair_targets": [0.0031509152613580227, 0.09824492037296295, 0.023899532854557037, 0.006162513978779316, 0.004277213476598263, 0.006433393806219101, 0.02444637566804886, 0.2931256592273712, 0.05204016715288162, 0.04145176708698273], "repair_candidates": [0.027557268738746643, 0.0031509152613580227, 0.09576431661844254, 0.09824492037296295, 0.1188204437494278, 0.023899532854557037, 0.023333970457315445, 0.006162513978779316, 0.021110346540808678, 0.004277213476598263, 0.08912324905395508, 0.006433393806219101, 0.06065165251493454, 0.02444637566804886, 0.0006443821475841105, 0.2931256592273712, 0.0034450970124453306, 0.05204016715288162, 0.04145176708698273, 0.006314429454505444, 2.3561517537018517e-06], "target_probs": 0.5532324314117432}}


{"result": {"time": "2021-02-21 05:54:31.976318", "n_pass": [442, 121, 61], "n_token": 35, "loss": [0.19139781594276428, 0.5041146278381348], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["self", "equation", "self", "equation", "self", "equation", "self", "(", "equation", "self", "equation", "self", "equation", "self", "equation", "ConvertAndSortColumnarASCII", "(", "DataForUnitTests", ".", "fittingTarget", ",", "equation", ".", ")", "#NEWLINE#", "fittingTarget", "=", "equation", "equation", ".", "solvedCoefficients", "self", "(", "fittingTarget", "<="]}}
{"position": {"error_location": 17, "repair_targets": [1, 3, 5, 8, 10, 12, 14, 21, 27, 28], "repair_candidates": [1, 3, 5, 8, 10, 12, 14, 21, 27, 28, 0, 2, 4, 6, 9, 11, 13, 31, 19, 25, 33]}}
{"prediction": {"error_location": 0.8258039355278015, "repair_targets": [0.0221857912838459, 0.08718616515398026, 0.03590060770511627, 0.014485686086118221, 0.04199250414967537, 0.01343558169901371, 0.03018975630402565, 0.22281493246555328, 0.07799816876649857, 0.05785094201564789], "repair_candidates": [0.03096649795770645, 0.0221857912838459, 0.09147254377603531, 0.08718616515398026, 0.06391824781894684, 0.03590060770511627, 0.035285353660583496, 0.014485686086118221, 0.01909538358449936, 0.04199250414967537, 0.06967872381210327, 0.01343558169901371, 0.06587615609169006, 0.03018975630402565, 0.001199997146613896, 0.22281493246555328, 0.006440628319978714, 0.07799816876649857, 0.05785094201564789, 0.012020133435726166, 6.195991318236338e-06], "target_probs": 0.6040401458740234}}


{"result": {"time": "2021-02-21 05:54:32.035060", "n_pass": [449, 122, 62], "n_token": 34, "loss": [0.12744712829589844, 0.6052893400192261], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["self", "equation", "self", "equation", "self", "equation", "self", "equation", "self", "equation", "self", "equation", "self", "equation", "ConvertAndSortColumnarASCII", "(", "DataForUnitTests", ".", "fittingTarget", ",", "equation", ".", ")", "#NEWLINE#", "fittingTarget", "=", "equation", "equation", ".", "solvedCoefficients", "self", "(", "fittingTarget", "<="]}}
{"position": {"error_location": 16, "repair_targets": [1, 3, 5, 7, 9, 11, 13, 20, 26, 27], "repair_candidates": [1, 3, 5, 7, 9, 11, 13, 20, 26, 27, 0, 2, 4, 6, 8, 10, 12, 30, 18, 24, 32]}}
{"prediction": {"error_location": 0.880340039730072, "repair_targets": [0.013178287073969841, 0.07412376254796982, 0.055467553436756134, 0.05438355728983879, 0.08902259916067123, 0.011345870792865753, 0.017399275675415993, 0.1843251734972, 0.028091110289096832, 0.018579259514808655], "repair_candidates": [0.016456635668873787, 0.013178287073969841, 0.10710051655769348, 0.07412376254796982, 0.16414609551429749, 0.055467553436756134, 0.028739865869283676, 0.05438355728983879, 0.03532232716679573, 0.08902259916067123, 0.046508822590112686, 0.011345870792865753, 0.04241623729467392, 0.017399275675415993, 0.0006671741721220315, 0.1843251734972, 0.0034299716353416443, 0.028091110289096832, 0.018579259514808655, 0.009293862618505955, 2.063951114905649e-06], "target_probs": 0.5459164381027222}}


{"result": {"time": "2021-02-21 05:54:32.212464", "n_pass": [464, 125, 63], "n_token": 32, "loss": [0.3059326410293579, 0.6148138046264648], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["self", "equation", "self", "equation", "self", "equation", "self", "equation", "self", "equation", "self", "equation", "self", "equation", "ConvertAndSortColumnarASCII", "(", "DataForUnitTests", ".", "fittingTarget", ",", "equation", ".", ")", "#NEWLINE#", "fittingTarget", "=", "equation", "equation", "self", "(", "fittingTarget", "<="]}}
{"position": {"error_location": 16, "repair_targets": [1, 3, 5, 7, 9, 11, 13, 20, 26, 27], "repair_candidates": [1, 3, 5, 7, 9, 11, 13, 20, 26, 27, 0, 2, 4, 6, 8, 10, 12, 28, 18, 24, 30]}}
{"prediction": {"error_location": 0.7364362478256226, "repair_targets": [0.03229611739516258, 0.08556027710437775, 0.03305753320455551, 0.1451646089553833, 0.1055879220366478, 0.028799809515476227, 0.03341580182313919, 0.046182386577129364, 0.028210051357746124, 0.0024670157581567764], "repair_candidates": [0.02694600820541382, 0.03229611739516258, 0.12416356056928635, 0.08556027710437775, 0.02500590868294239, 0.03305753320455551, 0.045796044170856476, 0.1451646089553833, 0.07264453172683716, 0.1055879220366478, 0.06423906981945038, 0.028799809515476227, 0.05764584243297577, 0.03341580182313919, 0.0029900630470365286, 0.046182386577129364, 0.016770869493484497, 0.028210051357746124, 0.0024670157581567764, 0.0230187326669693, 3.7799192796228454e-05], "target_probs": 0.5407415628433228}}


{"result": {"time": "2021-02-21 05:54:32.388695", "n_pass": [506, 128, 64], "n_token": 31, "loss": [0.44317543506622314, 0.5927966237068176], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["self", "equation", "self", "equation", "self", "equation", "self", "equation", "self", "equation", "self", "equation", "self", "equation", "ConvertAndSortColumnarASCII", "(", "DataForUnitTests", ".", "fittingTarget", ",", "equation", ".", ")", "#NEWLINE#", "fittingTarget", "=", "equation", "equation", "self", "fittingTarget", "<="]}}
{"position": {"error_location": 16, "repair_targets": [1, 3, 5, 7, 9, 11, 13, 20, 26, 27], "repair_candidates": [1, 3, 5, 7, 9, 11, 13, 20, 26, 27, 0, 2, 4, 6, 8, 10, 12, 28, 18, 24, 29]}}
{"prediction": {"error_location": 0.6419945359230042, "repair_targets": [0.026587437838315964, 0.0976872593164444, 0.0801812931895256, 0.059952907264232635, 0.07446962594985962, 0.018847810104489326, 0.02943841926753521, 0.07519020885229111, 0.08170870691537857, 0.008715540170669556], "repair_candidates": [0.02810775861144066, 0.026587437838315964, 0.10864148288965225, 0.0976872593164444, 0.03716180473566055, 0.0801812931895256, 0.030545484274625778, 0.059952907264232635, 0.056576963514089584, 0.07446962594985962, 0.048023950308561325, 0.018847810104489326, 0.031879935413599014, 0.02943841926753521, 0.003111452329903841, 0.07519020885229111, 0.06319408118724823, 0.08170870691537857, 0.008715540170669556, 0.03746255487203598, 0.002515298780053854], "target_probs": 0.5527791976928711}}


{"result": {"time": "2021-02-21 05:54:32.447305", "n_pass": [508, 129, 65], "n_token": 30, "loss": [0.6258578300476074, 0.5053918957710266], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["self", "equation", "self", "equation", "self", "equation", "self", "equation", "self", "equation", "self", "equation", "self", "equation", "ConvertAndSortColumnarASCII", "(", "DataForUnitTests", ".", "fittingTarget", ",", "equation", ".", ")", "#NEWLINE#", "fittingTarget", "=", "equation", "equation", "self", "fittingTarget"]}}
{"position": {"error_location": 16, "repair_targets": [1, 3, 5, 7, 9, 11, 13, 20, 26, 27], "repair_candidates": [1, 3, 5, 7, 9, 11, 13, 20, 26, 27, 0, 2, 4, 6, 8, 10, 12, 28, 18, 24, 29]}}
{"prediction": {"error_location": 0.5348024368286133, "repair_targets": [0.015012507326900959, 0.09354672580957413, 0.1109248548746109, 0.05619650334119797, 0.05872108414769173, 0.022998085245490074, 0.038612499833106995, 0.05092233046889305, 0.14967495203018188, 0.006659533828496933], "repair_candidates": [0.0261105764657259, 0.015012507326900959, 0.04963241517543793, 0.09354672580957413, 0.019335439428687096, 0.1109248548746109, 0.03893306478857994, 0.05619650334119797, 0.04576397314667702, 0.05872108414769173, 0.045246489346027374, 0.022998085245490074, 0.03709371015429497, 0.038612499833106995, 0.011688310652971268, 0.05092233046889305, 0.11504434049129486, 0.14967495203018188, 0.006659533828496933, 0.006915965583175421, 0.0009666620753705502], "target_probs": 0.603269100189209}}


{"result": {"time": "2021-02-21 05:54:32.508407", "n_pass": [523, 130, 66], "n_token": 29, "loss": [0.8048832416534424, 0.40200379490852356], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["self", "equation", "self", "equation", "self", "equation", "self", "equation", "self", "equation", "self", "equation", "self", "equation", "(", "DataForUnitTests", ".", "fittingTarget", ",", "equation", ".", ")", "#NEWLINE#", "fittingTarget", "=", "equation", "equation", "self", "fittingTarget"]}}
{"position": {"error_location": 15, "repair_targets": [1, 3, 5, 7, 9, 11, 13, 19, 25, 26], "repair_candidates": [1, 3, 5, 7, 9, 11, 13, 19, 25, 26, 0, 2, 4, 6, 8, 10, 12, 27, 17, 23, 28]}}
{"prediction": {"error_location": 0.44714006781578064, "repair_targets": [0.027343539521098137, 0.12397750467061996, 0.1071629747748375, 0.08398231118917465, 0.10399502515792847, 0.0069172196090221405, 0.0034468385856598616, 0.0160470400005579, 0.19594034552574158, 0.00016542219964321703], "repair_candidates": [0.012664238922297955, 0.027343539521098137, 0.12712298333644867, 0.12397750467061996, 0.043894603848457336, 0.1071629747748375, 0.037675339728593826, 0.08398231118917465, 0.036871615797281265, 0.10399502515792847, 0.02018759213387966, 0.0069172196090221405, 0.002965581137686968, 0.0034468385856598616, 0.006755324080586433, 0.0160470400005579, 0.04223508760333061, 0.19594034552574158, 0.00016542219964321703, 0.00053357396973297, 0.0001158473824034445], "target_probs": 0.668978214263916}}


{"result": {"time": "2021-02-21 05:54:32.682443", "n_pass": [528, 133, 67], "n_token": 28, "loss": [0.8353428840637207, 0.24585488438606262], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["self", "equation", "self", "equation", "self", "equation", "self", "equation", "self", "equation", "self", "equation", "self", "equation", "(", "DataForUnitTests", ".", "fittingTarget", "equation", ".", ")", "#NEWLINE#", "fittingTarget", "=", "equation", "equation", "self", "fittingTarget"]}}
{"position": {"error_location": 15, "repair_targets": [1, 3, 5, 7, 9, 11, 13, 18, 24, 25], "repair_candidates": [1, 3, 5, 7, 9, 11, 13, 18, 24, 25, 0, 2, 4, 6, 8, 10, 12, 26, 17, 22, 27]}}
{"prediction": {"error_location": 0.4337257444858551, "repair_targets": [0.01781790889799595, 0.07338488101959229, 0.14898814260959625, 0.18516795337200165, 0.20349478721618652, 0.0046206447295844555, 0.0005495566874742508, 0.00135069212410599, 0.14664235711097717, 1.8740023733698763e-05], "repair_candidates": [0.009898093529045582, 0.01781790889799595, 0.03668693080544472, 0.07338488101959229, 0.04312220960855484, 0.14898814260959625, 0.05449432134628296, 0.18516795337200165, 0.041597142815589905, 0.20349478721618652, 0.0189791489392519, 0.0046206447295844555, 0.001274927519261837, 0.0005495566874742508, 0.0006864897441118956, 0.00135069212410599, 0.011178079061210155, 0.14664235711097717, 1.8740023733698763e-05, 3.3868811442516744e-05, 1.3139236216375139e-05], "target_probs": 0.7820357084274292}}


{"result": {"time": "2021-02-21 05:54:32.740841", "n_pass": [530, 134, 68], "n_token": 27, "loss": [0.12122949957847595, 0.3611251413822174], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["self", "equation", "self", "equation", "self", "equation", "self", "equation", "self", "equation", "self", "equation", "self", "equation", "(", "DataForUnitTests", ".", "fittingTarget", "equation", ")", "#NEWLINE#", "fittingTarget", "=", "equation", "equation", "self", "fittingTarget"]}}
{"position": {"error_location": 15, "repair_targets": [1, 3, 5, 7, 9, 11, 13, 18, 23, 24], "repair_candidates": [1, 3, 5, 7, 9, 11, 13, 18, 23, 24, 0, 2, 4, 6, 8, 10, 12, 25, 17, 21, 26]}}
{"prediction": {"error_location": 0.8858305215835571, "repair_targets": [0.026334013789892197, 0.04681163653731346, 0.13146284222602844, 0.17799077928066254, 0.2128574401140213, 0.003578448435291648, 0.0011381942313164473, 0.0019486426608636975, 0.0947175845503807, 5.219796730671078e-05], "repair_candidates": [0.014736623503267765, 0.026334013789892197, 0.04782835394144058, 0.04681163653731346, 0.06137704849243164, 0.13146284222602844, 0.10203177481889725, 0.17799077928066254, 0.03894843906164169, 0.2128574401140213, 0.020511586219072342, 0.003578448435291648, 0.0010194863425567746, 0.0011381942313164473, 0.0017201591981574893, 0.0019486426608636975, 0.014674108475446701, 0.0947175845503807, 5.219796730671078e-05, 8.271548722404987e-05, 0.00017796694010030478], "target_probs": 0.6968917846679688}}




Minimal simplified tokens:

['self', 'equation', 'self', 'equation', 'self', 'equation', 'self', 'equation', 'self', 'equation', 'self', 'equation', 'self', 'equation', '(', 'DataForUnitTests', '.', 'fittingTarget', 'equation', ')', '#NEWLINE#', 'fittingTarget', '=', 'equation', 'equation', 'self', 'fittingTarget']
