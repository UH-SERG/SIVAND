
Original sample:

{"has_bug": true, "bug_kind": 1, "bug_kind_name": "VARIABLE_MISUSE", "source_tokens": ["#NEWLINE#", "def get_errant_logs_for_tree(", "root_node", ")", ":", "#NEWLINE#", "#INDENT#", "'Get logs that should be hidden for a node and its primary descendants.\\n    We iterate over descendants in the same way that RegistrationApproval._on_complete\\n    does.\\n    '", "#NEWLINE#", "return", "(", "log", "for", "node", "in", "root_node", ".", "node_and_primary_descendants", "(", ")", "for", "log", "in", "get_errant_logs", "(", "log", ")", ")"], "error_location": [25], "repair_targets": [13], "repair_candidates": [2, 15, 11, 21, 25, 13], "provenances": [{"datasetProvenance": {"datasetName": "ETHPy150Open", "filepath": "CenterForOpenScience/osf.io/scripts/hide_extra_registration_logs.py", "license": "apache-2.0", "note": "license: bigquery_api"}}], "txt_file": "eval__VARIABLE_MISUSE__SStuB.txt-00014-of-00300", "js_count": 47032, "results": {"model": "transformer", "prob": {"loc": [[0.007322830613702536, 6.052310936865979e-07, 2.780806873659003e-08, 2.040636770672677e-09, 3.963418926389295e-09, 5.524282808977432e-09, 3.6272413961313532e-09, 1.967121363577462e-07, 1.1864040416753596e-08, 1.5378530449083883e-08, 2.1454256966535468e-06, 0.8457303047180176, 0.00022006139624863863, 2.542644324421417e-06, 9.075760698529223e-10, 1.1029285360564245e-06, 3.3359057738380216e-08, 7.2150072583099245e-09, 2.550198132666992e-07, 0.0006897966959513724, 0.0001464973174734041, 3.28718442688114e-07, 6.204958213906764e-10, 3.0695697095239893e-09, 5.900573114558938e-07, 0.14588221907615662, 2.1630971502872853e-07, 2.0595034300185944e-07]], "pointer": [[0.0, 0.0, 0.002633561147376895, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.1027653812334393e-07, 0.0, 0.997048556804657, 0.0, 0.000315557379508391, 0.0, 0.0, 0.0, 0.0, 0.0, 2.0991262772440678e-06, 0.0, 0.0, 0.0, 1.2631168999632791e-07, 0.0, 0.0]], "target": [0.997048556804657]}, "loss": [1.9249557256698608, 0.0029558073729276657], "acc": [0.0, 0.0, 1.0, 0.0]}, "wrong_error_location": [11]}


Trace of simplified code(s):

{"result": {"time": "2021-02-21 07:13:13.189759", "n_pass": [1, 1, 1], "n_token": 28, "loss": [0.16755473613739014, 0.0029558073729276657], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def get_errant_logs_for_tree(", "root_node", ")", ":", "#NEWLINE#", "#INDENT#", "'Get logs that should be hidden for a node and its primary descendants.\\n    We iterate over descendants in the same way that RegistrationApproval._on_complete\\n    does.\\n    '", "#NEWLINE#", "return", "(", "log", "for", "node", "in", "root_node", ".", "node_and_primary_descendants", "(", ")", "for", "log", "in", "get_errant_logs", "(", "log", ")", ")"]}}
{"position": {"error_location": 11, "repair_targets": [13], "repair_candidates": [2, 15, 11, 21, 25, 13]}}
{"prediction": {"error_location": 0.8457303047180176, "repair_targets": [0.997048556804657], "repair_candidates": [0.002633561147376895, 1.1027653812334393e-07, 0.997048556804657, 0.000315557379508391, 2.0991262772440678e-06, 1.2631168999632791e-07], "target_probs": 0.997048556804657}}


{"result": {"time": "2021-02-21 07:13:13.412240", "n_pass": [44, 5, 2], "n_token": 27, "loss": [0.390757292509079, 0.010675106197595596], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["def get_errant_logs_for_tree(", "root_node", ")", ":", "#NEWLINE#", "#INDENT#", "'Get logs that should be hidden for a node and its primary descendants.\\n    We iterate over descendants in the same way that RegistrationApproval._on_complete\\n    does.\\n    '", "#NEWLINE#", "return", "(", "log", "for", "node", "in", "root_node", ".", "node_and_primary_descendants", "(", ")", "for", "log", "in", "get_errant_logs", "(", "log", ")", ")"]}}
{"position": {"error_location": 10, "repair_targets": [12], "repair_candidates": [1, 14, 10, 20, 24, 12]}}
{"prediction": {"error_location": 0.6765443682670593, "repair_targets": [0.9893816709518433], "repair_candidates": [0.010313723236322403, 1.3274159016418707e-07, 0.9893816709518433, 0.0003028405481018126, 1.475152885177522e-06, 1.288744329031033e-07], "target_probs": 0.9893816709518433}}


{"result": {"time": "2021-02-21 07:13:13.747368", "n_pass": [54, 11, 3], "n_token": 25, "loss": [0.49014919996261597, 0.09544339030981064], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["def get_errant_logs_for_tree(", "root_node", ")", ":", "#NEWLINE#", "#INDENT#", "'Get logs that should be hidden for a node and its primary descendants.\\n    We iterate over descendants in the same way that RegistrationApproval._on_complete\\n    does.\\n    '", "#NEWLINE#", "return", "(", "log", "for", "node", "in", "root_node", "(", ")", "for", "log", "in", "get_errant_logs", "(", "log", ")", ")"]}}
{"position": {"error_location": 10, "repair_targets": [12], "repair_candidates": [1, 14, 10, 18, 22, 12]}}
{"prediction": {"error_location": 0.6125349998474121, "repair_targets": [0.9089698195457458], "repair_candidates": [0.0903204008936882, 1.3417580930763506e-06, 0.9089698195457458, 0.0006926570786163211, 1.470508777856594e-05, 1.116395083045063e-06], "target_probs": 0.9089698195457458}}


{"result": {"time": "2021-02-21 07:13:13.861624", "n_pass": [57, 13, 4], "n_token": 23, "loss": [0.00482976483181119, 0.0007118135108612478], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["def get_errant_logs_for_tree(", "root_node", ")", ":", "#NEWLINE#", "#INDENT#", "'Get logs that should be hidden for a node and its primary descendants.\\n    We iterate over descendants in the same way that RegistrationApproval._on_complete\\n    does.\\n    '", "#NEWLINE#", "return", "(", "log", "for", "node", "in", "root_node", "(", ")", "for", "log", "(", "log", ")", ")"]}}
{"position": {"error_location": 10, "repair_targets": [12], "repair_candidates": [1, 14, 10, 18, 20, 12]}}
{"prediction": {"error_location": 0.9951818585395813, "repair_targets": [0.9992884397506714], "repair_candidates": [0.0006223707459867001, 1.9776277326855052e-07, 0.9992884397506714, 8.809585415292531e-05, 5.476394449033251e-07, 1.238882134657615e-07], "target_probs": 0.9992884397506714}}


{"result": {"time": "2021-02-21 07:13:13.917124", "n_pass": [59, 14, 5], "n_token": 21, "loss": [0.003162028733640909, 0.0004052148724440485], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["def get_errant_logs_for_tree(", "root_node", ")", ":", "#NEWLINE#", "#INDENT#", "'Get logs that should be hidden for a node and its primary descendants.\\n    We iterate over descendants in the same way that RegistrationApproval._on_complete\\n    does.\\n    '", "#NEWLINE#", "return", "(", "log", "for", "node", "in", "root_node", "(", ")", "for", "log", "(", "log"]}}
{"position": {"error_location": 10, "repair_targets": [12], "repair_candidates": [1, 14, 10, 18, 20, 12]}}
{"prediction": {"error_location": 0.9968430995941162, "repair_targets": [0.9995948672294617], "repair_candidates": [0.0003654266765806824, 9.930045052897185e-07, 0.9995948672294617, 3.609044142649509e-05, 2.091029273287859e-06, 5.649379772876273e-07], "target_probs": 0.9995948672294617}}


{"result": {"time": "2021-02-21 07:13:13.972548", "n_pass": [60, 15, 6], "n_token": 20, "loss": [0.0011554239317774773, 0.0003345572331454605], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["root_node", ")", ":", "#NEWLINE#", "#INDENT#", "'Get logs that should be hidden for a node and its primary descendants.\\n    We iterate over descendants in the same way that RegistrationApproval._on_complete\\n    does.\\n    '", "#NEWLINE#", "return", "(", "log", "for", "node", "in", "root_node", "(", ")", "for", "log", "(", "log"]}}
{"position": {"error_location": 9, "repair_targets": [11], "repair_candidates": [0, 13, 9, 17, 19, 11]}}
{"prediction": {"error_location": 0.9988452196121216, "repair_targets": [0.9996654987335205], "repair_candidates": [0.0002819399524014443, 1.0203408464803942e-06, 0.9996654987335205, 4.8831436288310215e-05, 2.0645684344344772e-06, 5.793989430458168e-07], "target_probs": 0.9996654987335205}}


{"result": {"time": "2021-02-21 07:13:14.028148", "n_pass": [62, 16, 7], "n_token": 19, "loss": [0.007529451511800289, 0.005647663027048111], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["root_node", ":", "#NEWLINE#", "#INDENT#", "'Get logs that should be hidden for a node and its primary descendants.\\n    We iterate over descendants in the same way that RegistrationApproval._on_complete\\n    does.\\n    '", "#NEWLINE#", "return", "(", "log", "for", "node", "in", "root_node", "(", ")", "for", "log", "(", "log"]}}
{"position": {"error_location": 8, "repair_targets": [10], "repair_candidates": [0, 12, 8, 16, 18, 10]}}
{"prediction": {"error_location": 0.9924988150596619, "repair_targets": [0.9943682551383972], "repair_candidates": [0.004903650842607021, 2.5348757844767533e-05, 0.9943682551383972, 0.0006540443282574415, 3.578315954655409e-05, 1.277565479540499e-05], "target_probs": 0.9943682551383972}}


{"result": {"time": "2021-02-21 07:13:14.249823", "n_pass": [69, 20, 8], "n_token": 17, "loss": [0.008273494429886341, 0.01832410879433155], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["root_node", ":", "#NEWLINE#", "#INDENT#", "'Get logs that should be hidden for a node and its primary descendants.\\n    We iterate over descendants in the same way that RegistrationApproval._on_complete\\n    does.\\n    '", "#NEWLINE#", "return", "(", "log", "for", "node", "in", "root_node", "for", "log", "(", "log"]}}
{"position": {"error_location": 8, "repair_targets": [10], "repair_candidates": [0, 12, 8, 14, 16, 10]}}
{"prediction": {"error_location": 0.9917607307434082, "repair_targets": [0.9818427562713623], "repair_candidates": [0.01676367036998272, 0.0001167175141745247, 0.9818427562713623, 0.0009774949867278337, 0.00021982660109642893, 7.962191011756659e-05], "target_probs": 0.9818427562713623}}


{"result": {"time": "2021-02-21 07:13:14.473759", "n_pass": [95, 24, 9], "n_token": 16, "loss": [0.013252507895231247, 0.11554247885942459], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["root_node", ":", "#NEWLINE#", "#INDENT#", "'Get logs that should be hidden for a node and its primary descendants.\\n    We iterate over descendants in the same way that RegistrationApproval._on_complete\\n    does.\\n    '", "#NEWLINE#", "return", "(", "log", "for", "node", "in", "root_node", "log", "(", "log"]}}
{"position": {"error_location": 8, "repair_targets": [10], "repair_candidates": [0, 12, 8, 13, 15, 10]}}
{"prediction": {"error_location": 0.9868349432945251, "repair_targets": [0.8908827304840088], "repair_candidates": [0.08384300768375397, 0.0012144906213507056, 0.8908827304840088, 0.016501938924193382, 0.004261590540409088, 0.0032962188124656677], "target_probs": 0.8908827304840088}}


{"result": {"time": "2021-02-21 07:13:14.529154", "n_pass": [96, 25, 10], "n_token": 15, "loss": [0.010095486417412758, 0.007314005866646767], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["root_node", ":", "#NEWLINE#", "#INDENT#", "'Get logs that should be hidden for a node and its primary descendants.\\n    We iterate over descendants in the same way that RegistrationApproval._on_complete\\n    does.\\n    '", "#NEWLINE#", "return", "(", "log", "for", "node", "in", "root_node", "log", "log"]}}
{"position": {"error_location": 8, "repair_targets": [10], "repair_candidates": [0, 12, 8, 13, 14, 10]}}
{"prediction": {"error_location": 0.9899553060531616, "repair_targets": [0.992712676525116], "repair_candidates": [0.006208452861756086, 1.5983903722371906e-05, 0.992712676525116, 0.001038860296830535, 4.212468411424197e-06, 1.97107747226255e-05], "target_probs": 0.992712676525116}}


{"result": {"time": "2021-02-21 07:13:14.807800", "n_pass": [103, 30, 11], "n_token": 14, "loss": [0.03117293119430542, 0.06719880551099777], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["root_node", ":", "#NEWLINE#", "#INDENT#", "'Get logs that should be hidden for a node and its primary descendants.\\n    We iterate over descendants in the same way that RegistrationApproval._on_complete\\n    does.\\n    '", "return", "(", "log", "for", "node", "in", "root_node", "log", "log"]}}
{"position": {"error_location": 7, "repair_targets": [9], "repair_candidates": [0, 11, 7, 12, 13, 9]}}
{"prediction": {"error_location": 0.9693080186843872, "repair_targets": [0.9350093007087708], "repair_candidates": [0.03310607746243477, 8.676870493218303e-05, 0.9350093007087708, 0.03161622956395149, 4.165630889474414e-05, 0.00013987843703944236], "target_probs": 0.9350093007087708}}




Minimal simplified tokens:

['root_node', ':', '#NEWLINE#', '#INDENT#', "'Get logs that should be hidden for a node and its primary descendants.\\n    We iterate over descendants in the same way that RegistrationApproval._on_complete\\n    does.\\n    '", 'return', '(', 'log', 'for', 'node', 'in', 'root_node', 'log', 'log']
