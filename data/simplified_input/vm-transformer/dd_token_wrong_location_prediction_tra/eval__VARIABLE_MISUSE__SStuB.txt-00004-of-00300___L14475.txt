
Original sample:

{"has_bug": true, "bug_kind": 1, "bug_kind_name": "VARIABLE_MISUSE", "source_tokens": ["#NEWLINE#", "def GetBlendMethod(", "self", ")", ":", "#NEWLINE#", "#INDENT#", "'Get the blend method'", "#NEWLINE#", "currentMethod", "=", "self", ".", "component", ".", "PropertyList", ".", "Find", "(", "'SourceBlendMode'", ")", ".", "Data", "#NEWLINE#", "for", "(", "method", ",", "idx", ")", "in", "self", ".", "kBlendMethods", ".", "iteritems", "(", ")", ":", "#NEWLINE#", "#INDENT#", "if", "(", "method", "==", "idx", ")", ":", "#NEWLINE#", "#INDENT#", "return", "method"], "error_location": [43], "repair_targets": [9], "repair_candidates": [9, 26, 43, 51, 2, 11, 31, 28, 45], "provenances": [{"datasetProvenance": {"datasetName": "ETHPy150Open", "filepath": "CountZer0/PipelineConstructionSet/python/moBu/site-packages/PyMoBu-0.2/pymobu/components/constraints.py", "license": "bsd-3-clause", "note": "license: bigquery_api"}}], "txt_file": "eval__VARIABLE_MISUSE__SStuB.txt-00004-of-00300", "js_count": 14475, "results": {"model": "transformer", "prob": {"loc": [[0.004789602477103472, 9.985538440560049e-08, 2.4276985755022906e-08, 1.4243768386990041e-09, 8.836889553442973e-10, 5.048965689979923e-10, 3.6085121002393805e-10, 5.118780954660451e-10, 2.3633492385322086e-10, 1.5036322338346508e-06, 3.984208962748426e-09, 2.0144147683254232e-08, 6.438268806974179e-10, 5.61202473381428e-10, 1.0131175898209221e-09, 1.6870582708605752e-10, 1.2783041292152575e-09, 4.2397188537712793e-10, 3.395994152555204e-09, 2.495182727102474e-08, 1.9316752286613337e-07, 1.3122081199412605e-08, 9.121842836634642e-09, 3.7143219611124323e-09, 9.62151069927586e-09, 9.57979140459031e-10, 2.2954868654778693e-06, 1.77575945059516e-08, 5.874350790691096e-06, 6.6734275883106875e-09, 5.441480155354839e-09, 3.0420487746596336e-05, 5.4206590327510185e-09, 2.1127433136314266e-09, 5.610742981332351e-09, 1.1597873772473122e-09, 8.471517958241748e-07, 1.0337274858329693e-07, 1.3752118377396982e-07, 6.693237519783679e-09, 1.0578838249841738e-08, 2.5669647740755863e-08, 3.813728000068295e-09, 0.035181280225515366, 8.904321191494091e-08, 0.0030921120196580887, 2.8922771733164154e-08, 6.40296917708838e-08, 2.1039856079596575e-08, 7.24487669856444e-09, 6.562739240933979e-09, 0.9568951725959778]], "pointer": [[0.0, 0.0, 4.331482159614097e-06, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.9933750033378601, 0.0, 5.588234489550814e-05, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 3.504530104692094e-05, 0.0, 0.006133253686130047, 0.0, 0.0, 8.970954513642937e-05, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 4.374744548840681e-06, 0.0, 0.00029922949033789337, 0.0, 0.0, 0.0, 0.0, 0.0, 3.0162125312926946e-06]], "target": [0.9933750033378601]}, "loss": [3.347241163253784, 0.006647039204835892], "acc": [0.0, 0.0, 1.0, 0.0]}, "wrong_error_location": [51]}


Trace of simplified code(s):

{"result": {"time": "2021-02-21 06:00:03.618158", "n_pass": [1, 1, 1], "n_token": 52, "loss": [0.04406144842505455, 0.006647039204835892], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def GetBlendMethod(", "self", ")", ":", "#NEWLINE#", "#INDENT#", "'Get the blend method'", "#NEWLINE#", "currentMethod", "=", "self", ".", "component", ".", "PropertyList", ".", "Find", "(", "'SourceBlendMode'", ")", ".", "Data", "#NEWLINE#", "for", "(", "method", ",", "idx", ")", "in", "self", ".", "kBlendMethods", ".", "iteritems", "(", ")", ":", "#NEWLINE#", "#INDENT#", "if", "(", "method", "==", "idx", ")", ":", "#NEWLINE#", "#INDENT#", "return", "method"]}}
{"position": {"error_location": 51, "repair_targets": [9], "repair_candidates": [9, 26, 43, 51, 2, 11, 31, 28, 45]}}
{"prediction": {"error_location": 0.9568951725959778, "repair_targets": [0.9933750033378601], "repair_candidates": [4.331482159614097e-06, 0.9933750033378601, 5.588234489550814e-05, 3.504530104692094e-05, 0.006133253686130047, 8.970954513642937e-05, 4.374744548840681e-06, 0.00029922949033789337, 3.0162125312926946e-06], "target_probs": 0.9933750033378601}}


{"result": {"time": "2021-02-21 06:00:03.673878", "n_pass": [9, 2, 2], "n_token": 39, "loss": [0.604035496711731, 0.0021593025885522366], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def GetBlendMethod(", "self", ")", ":", "#NEWLINE#", "#INDENT#", "'Get the blend method'", "#NEWLINE#", "currentMethod", "=", "self", ".", "method", ",", "idx", ")", "in", "self", ".", "kBlendMethods", ".", "iteritems", "(", ")", ":", "#NEWLINE#", "#INDENT#", "if", "(", "method", "==", "idx", ")", ":", "#NEWLINE#", "#INDENT#", "return", "method"]}}
{"position": {"error_location": 38, "repair_targets": [9], "repair_candidates": [9, 13, 30, 38, 2, 11, 18, 15, 32]}}
{"prediction": {"error_location": 0.5466013550758362, "repair_targets": [0.9978430271148682], "repair_candidates": [1.417850853613345e-05, 0.9978430271148682, 5.6309072533622384e-05, 1.304381567024393e-05, 0.00035987235605716705, 2.4711725927772932e-05, 5.428997610579245e-05, 0.0016329592326655984, 1.6555036381760146e-06], "target_probs": 0.9978430271148682}}


{"result": {"time": "2021-02-21 06:00:03.730917", "n_pass": [39, 3, 3], "n_token": 36, "loss": [0.6566476225852966, 0.0034446970093995333], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def GetBlendMethod(", "self", ")", ":", "#NEWLINE#", "#INDENT#", "'Get the blend method'", "#NEWLINE#", "currentMethod", "=", "self", ".", "method", ",", "idx", ")", "in", "self", ".", "kBlendMethods", ")", ":", "#NEWLINE#", "#INDENT#", "if", "(", "method", "==", "idx", ")", ":", "#NEWLINE#", "#INDENT#", "return", "method"]}}
{"position": {"error_location": 35, "repair_targets": [9], "repair_candidates": [9, 13, 27, 35, 2, 11, 18, 15, 29]}}
{"prediction": {"error_location": 0.5185868740081787, "repair_targets": [0.9965612292289734], "repair_candidates": [2.3404003513860516e-05, 0.9965612292289734, 8.574817911721766e-05, 1.7849541109171696e-05, 0.00030783136026002467, 3.5315577406436205e-05, 6.0873844631714746e-05, 0.0029044898692518473, 3.3013104712154018e-06], "target_probs": 0.9965612292289734}}


{"result": {"time": "2021-02-21 06:00:03.787187", "n_pass": [40, 4, 4], "n_token": 33, "loss": [0.5338208675384521, 0.0054170917719602585], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def GetBlendMethod(", "self", ")", ":", "#NEWLINE#", "#INDENT#", "'Get the blend method'", "#NEWLINE#", "currentMethod", "=", "self", ".", "method", ",", "idx", ")", "in", "self", ".", "kBlendMethods", "#INDENT#", "if", "(", "method", "==", "idx", ")", ":", "#NEWLINE#", "#INDENT#", "return", "method"]}}
{"position": {"error_location": 32, "repair_targets": [9], "repair_candidates": [9, 13, 24, 32, 2, 11, 18, 15, 26]}}
{"prediction": {"error_location": 0.5863602161407471, "repair_targets": [0.9945975542068481], "repair_candidates": [2.5712504793773405e-05, 0.9945975542068481, 9.007325570564717e-05, 1.9049177353736013e-05, 0.0005532921059057117, 3.393597580725327e-05, 3.1732182833366096e-05, 0.004645151551812887, 3.426794137340039e-06], "target_probs": 0.9945975542068481}}


{"result": {"time": "2021-02-21 06:00:03.843149", "n_pass": [45, 5, 5], "n_token": 30, "loss": [0.9812254905700684, 0.0014905708376318216], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def GetBlendMethod(", "self", "#INDENT#", "'Get the blend method'", "#NEWLINE#", "currentMethod", "=", "self", ".", "method", ",", "idx", ")", "in", "self", ".", "kBlendMethods", "#INDENT#", "if", "(", "method", "==", "idx", ")", ":", "#NEWLINE#", "#INDENT#", "return", "method"]}}
{"position": {"error_location": 29, "repair_targets": [6], "repair_candidates": [6, 10, 21, 29, 2, 8, 15, 12, 23]}}
{"prediction": {"error_location": 0.3748514950275421, "repair_targets": [0.9985105395317078], "repair_candidates": [9.035843504534569e-06, 0.9985105395317078, 0.00011738519970094785, 1.3433536878437735e-05, 0.0004105805710423738, 5.2205039537511766e-05, 1.1508879651955795e-05, 0.0008724250947125256, 2.883320576074766e-06], "target_probs": 0.9985105395317078}}


{"result": {"time": "2021-02-21 06:00:03.899259", "n_pass": [46, 6, 6], "n_token": 27, "loss": [0.7226952910423279, 0.09166103601455688], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def GetBlendMethod(", "self", "currentMethod", "=", "self", ".", "method", ",", "idx", ")", "in", "self", ".", "kBlendMethods", "#INDENT#", "if", "(", "method", "==", "idx", ")", ":", "#NEWLINE#", "#INDENT#", "return", "method"]}}
{"position": {"error_location": 26, "repair_targets": [3], "repair_candidates": [3, 7, 18, 26, 2, 5, 12, 9, 20]}}
{"prediction": {"error_location": 0.4854421317577362, "repair_targets": [0.9124143719673157], "repair_candidates": [0.0015110638923943043, 0.9124143719673157, 0.004591041244566441, 0.00011306002124911174, 0.012362324632704258, 0.0012288307771086693, 2.2893475033924915e-05, 0.06772273778915405, 3.358793765073642e-05], "target_probs": 0.9124143719673157}}


{"result": {"time": "2021-02-21 06:00:04.235896", "n_pass": [85, 12, 7], "n_token": 26, "loss": [0.6307161450386047, 0.47513991594314575], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["def GetBlendMethod(", "self", "currentMethod", "=", "self", ".", "method", ",", "idx", ")", "in", "self", ".", "kBlendMethods", "#INDENT#", "if", "(", "method", "==", "idx", ")", ":", "#NEWLINE#", "#INDENT#", "return", "method"]}}
{"position": {"error_location": 25, "repair_targets": [2], "repair_candidates": [2, 6, 17, 25, 1, 4, 11, 8, 19]}}
{"prediction": {"error_location": 0.5322104692459106, "repair_targets": [0.621798038482666], "repair_candidates": [0.08856857568025589, 0.621798038482666, 0.006965341977775097, 0.0021738014183938503, 0.10219404101371765, 0.008910409174859524, 0.00012239823990967125, 0.16870318353176117, 0.0005641428870148957], "target_probs": 0.621798038482666}}


{"result": {"time": "2021-02-21 06:00:04.515078", "n_pass": [98, 17, 8], "n_token": 24, "loss": [0.5020385980606079, 0.6096541881561279], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["def GetBlendMethod(", "self", "currentMethod", "=", "self", ".", "method", ",", "idx", ")", "in", "self", ".", "kBlendMethods", "#INDENT#", "if", "(", "method", "==", "idx", "#NEWLINE#", "#INDENT#", "return", "method"]}}
{"position": {"error_location": 23, "repair_targets": [2], "repair_candidates": [2, 6, 17, 23, 1, 4, 11, 8, 19]}}
{"prediction": {"error_location": 0.6052954196929932, "repair_targets": [0.5435388088226318], "repair_candidates": [0.13361047208309174, 0.5435388088226318, 0.017027219757437706, 0.003550236113369465, 0.21408434212207794, 0.01897314004600048, 0.00025182709214277565, 0.06766849011182785, 0.0012955120764672756], "target_probs": 0.5435388088226318}}


{"result": {"time": "2021-02-21 06:00:05.075012", "n_pass": [140, 27, 9], "n_token": 23, "loss": [0.6407572627067566, 0.43685561418533325], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["def GetBlendMethod(", "self", "currentMethod", "=", "self", ".", "method", "idx", ")", "in", "self", ".", "kBlendMethods", "#INDENT#", "if", "(", "method", "==", "idx", "#NEWLINE#", "#INDENT#", "return", "method"]}}
{"position": {"error_location": 22, "repair_targets": [2], "repair_candidates": [2, 6, 16, 22, 1, 4, 10, 7, 18]}}
{"prediction": {"error_location": 0.5268933176994324, "repair_targets": [0.6460646986961365], "repair_candidates": [0.12052741646766663, 0.6460646986961365, 0.019431373104453087, 0.001942033995874226, 0.11894096434116364, 0.027103623375296593, 0.00015783641720190644, 0.06525709480047226, 0.0005750147975049913], "target_probs": 0.6460646986961365}}


{"result": {"time": "2021-02-21 06:00:05.299543", "n_pass": [146, 31, 10], "n_token": 22, "loss": [0.6712307333946228, 0.36084669828414917], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["def GetBlendMethod(", "self", "currentMethod", "=", "self", ".", "method", "idx", ")", "in", "self", ".", "#INDENT#", "if", "(", "method", "==", "idx", "#NEWLINE#", "#INDENT#", "return", "method"]}}
{"position": {"error_location": 21, "repair_targets": [2], "repair_candidates": [2, 6, 15, 21, 1, 4, 10, 7, 17]}}
{"prediction": {"error_location": 0.5110791325569153, "repair_targets": [0.6970858573913574], "repair_candidates": [0.06508903950452805, 0.6970858573913574, 0.01672796905040741, 0.003830242669209838, 0.13339537382125854, 0.055103104561567307, 0.00047646660823374987, 0.027762802317738533, 0.0005291603156365454], "target_probs": 0.6970858573913574}}


{"result": {"time": "2021-02-21 06:00:05.465511", "n_pass": [149, 34, 11], "n_token": 21, "loss": [1.1533523797988892, 0.21759353578090668], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["def GetBlendMethod(", "self", "currentMethod", "=", "self", ".", "method", "idx", ")", "in", "self", ".", "#INDENT#", "if", "method", "==", "idx", "#NEWLINE#", "#INDENT#", "return", "method"]}}
{"position": {"error_location": 20, "repair_targets": [2], "repair_candidates": [2, 6, 14, 20, 1, 4, 10, 7, 16]}}
{"prediction": {"error_location": 0.31557711958885193, "repair_targets": [0.8044523596763611], "repair_candidates": [0.03715057671070099, 0.8044523596763611, 0.010035840794444084, 0.006620412692427635, 0.10267207026481628, 0.02062300592660904, 0.0031718744430691004, 0.01492504496127367, 0.00034882398904301226], "target_probs": 0.8044523596763611}}


{"result": {"time": "2021-02-21 06:00:05.521251", "n_pass": [151, 35, 12], "n_token": 20, "loss": [0.6136379241943359, 0.18369431793689728], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["def GetBlendMethod(", "self", "currentMethod", "=", "self", ".", "method", "idx", ")", "in", "self", ".", "#INDENT#", "if", "method", "idx", "#NEWLINE#", "#INDENT#", "return", "method"]}}
{"position": {"error_location": 19, "repair_targets": [2], "repair_candidates": [2, 6, 14, 19, 1, 4, 10, 7, 15]}}
{"prediction": {"error_location": 0.5413777828216553, "repair_targets": [0.8321901559829712], "repair_candidates": [0.0382981076836586, 0.8321901559829712, 0.013869431801140308, 0.003582678036764264, 0.056753575801849365, 0.020905358716845512, 0.004176893271505833, 0.029064888134598732, 0.0011588636552914977], "target_probs": 0.8321901559829712}}


{"result": {"time": "2021-02-21 06:00:05.577013", "n_pass": [153, 36, 13], "n_token": 19, "loss": [0.7257588505744934, 0.09889346361160278], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["def GetBlendMethod(", "self", "currentMethod", "=", "self", ".", "method", "idx", ")", "in", "self", ".", "#INDENT#", "if", "method", "idx", "#INDENT#", "return", "method"]}}
{"position": {"error_location": 18, "repair_targets": [2], "repair_candidates": [2, 6, 14, 18, 1, 4, 10, 7, 15]}}
{"prediction": {"error_location": 0.4839571714401245, "repair_targets": [0.905839204788208], "repair_candidates": [0.030530128628015518, 0.905839204788208, 0.007018585689365864, 0.0006407988257706165, 0.02234807051718235, 0.0063116238452494144, 0.0009225401445291936, 0.025870366021990776, 0.0005186655325815082], "target_probs": 0.905839204788208}}


{"result": {"time": "2021-02-21 06:00:05.801480", "n_pass": [160, 40, 14], "n_token": 18, "loss": [0.6577458381652832, 0.318901926279068], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["def GetBlendMethod(", "self", "currentMethod", "self", ".", "method", "idx", ")", "in", "self", ".", "#INDENT#", "if", "method", "idx", "#INDENT#", "return", "method"]}}
{"position": {"error_location": 17, "repair_targets": [2], "repair_candidates": [2, 5, 13, 17, 1, 3, 9, 6, 14]}}
{"prediction": {"error_location": 0.5180177092552185, "repair_targets": [0.7269468307495117], "repair_candidates": [0.09688039869070053, 0.7269468307495117, 0.013303941115736961, 0.0008172020316123962, 0.028297552838921547, 0.028207896277308464, 0.0010374760022386909, 0.10363085567951202, 0.0008778717601671815], "target_probs": 0.7269468307495117}}




Minimal simplified tokens:

['def GetBlendMethod(', 'self', 'currentMethod', 'self', '.', 'method', 'idx', ')', 'in', 'self', '.', '#INDENT#', 'if', 'method', 'idx', '#INDENT#', 'return', 'method']
