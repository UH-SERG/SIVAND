
Original sample:

{"has_bug": true, "bug_kind": 1, "bug_kind_name": "VARIABLE_MISUSE", "source_tokens": ["#NEWLINE#", "def sleep_sort(", "a", ")", ":", "#NEWLINE#", "#INDENT#", "\"\\n    Sorts the list 'a' using Sleep sort algorithm\\n\\n    >>> from pydsa import sleep_sort\\n    >>> a = [3, 4, 2]\\n    >>> sleep_sort(a)\\n    [2, 3, 4]\\n\\n    \"", "#NEWLINE#", "sleep_sort", ".", "result", "=", "[", "]", "#NEWLINE#", "def add1(", "x", ")", ":", "#NEWLINE#", "#INDENT#", "sleep_sort", ".", "result", ".", "append", "(", "x", ")", "#NEWLINE#", "#UNINDENT#", "mx", "=", "a", "[", "0", "]", "#NEWLINE#", "for", "v", "in", "a", ":", "#NEWLINE#", "#INDENT#", "if", "(", "mx", "<", "v", ")", ":", "#NEWLINE#", "#INDENT#", "mx", "=", "v", "#NEWLINE#", "#UNINDENT#", "Timer", "(", "v", ",", "add1", ",", "[", "v", "]", ")", ".", "start", "(", ")", "#NEWLINE#", "#UNINDENT#", "sleep", "(", "(", "add1", "+", "1", ")", ")", "#NEWLINE#", "return", "sleep_sort", ".", "result"], "error_location": [79], "repair_targets": [32, 48, 55], "repair_candidates": [2, 34, 42, 64, 79, 40, 50, 57, 62, 67, 32, 48, 55], "provenances": [{"datasetProvenance": {"datasetName": "ETHPy150Open", "filepath": "pydsa/pydsa/pydsa/sleep_sort.py", "license": "bsd-3-clause", "note": "license: manual_eval"}}], "txt_file": "eval__VARIABLE_MISUSE__SStuB.txt-00001-of-00300", "js_count": 5569, "results": {"model": "transformer", "prob": {"loc": [[0.034281279891729355, 3.1470449357584585e-07, 3.5255050079285866e-07, 6.943364994071999e-09, 9.525637167939749e-09, 9.055095340215757e-09, 8.051341815473734e-09, 3.851313934433165e-08, 8.029932274666862e-09, 7.120441836150349e-08, 9.439004244882199e-09, 2.401372611871011e-08, 6.816269859655222e-08, 2.8228117798789754e-07, 3.242463719743682e-08, 1.3220748940057092e-08, 8.875280741449387e-07, 2.2307069684757153e-06, 8.407371687724208e-09, 7.70691954699032e-09, 1.2949664451866738e-08, 6.7165579764605354e-09, 6.96218620532818e-08, 5.359269472648975e-09, 2.2255273179894175e-09, 7.668970347651793e-09, 4.280653609356477e-09, 3.941584836297807e-08, 7.931690925033763e-05, 5.736898245345401e-08, 2.2957234335763133e-08, 1.1090091511789524e-08, 2.9156996106394217e-07, 9.063751527094155e-09, 0.003532874397933483, 2.7884198061656207e-07, 1.5159183703872259e-06, 4.346027182577927e-08, 3.450814389793777e-08, 4.125911345909117e-08, 1.7040927957623353e-07, 4.694033606256198e-08, 0.0011469576274976134, 5.218655374505943e-08, 4.970310030216751e-08, 4.9621259989862665e-08, 8.407175045022086e-08, 1.5668407016278252e-08, 0.0003728307201527059, 2.442895947751822e-07, 0.0004714611277449876, 2.4274430643345113e-07, 1.4126885616860818e-07, 2.0793537203189771e-07, 9.161365710497194e-08, 2.1536134227062576e-06, 1.4716940199832607e-07, 0.0007030963315628469, 1.9679566776176216e-07, 1.6619225107206148e-07, 1.336219099812297e-07, 7.131913548619195e-08, 0.29635822772979736, 6.019942588864069e-07, 0.5652545690536499, 8.345979836121842e-07, 1.3514040801965166e-05, 0.04711570590734482, 4.064027621097921e-07, 6.627781772294838e-07, 9.816889701141918e-08, 4.808111953025218e-07, 1.3650671462528408e-05, 2.447866791044362e-06, 6.976254098844947e-07, 1.8022184633537108e-07, 5.193879815124092e-08, 1.036258812092683e-08, 1.3636720552767656e-07, 0.029039563611149788, 3.069049512305355e-07, 0.021354351192712784, 9.514533303445205e-07, 2.846246047738532e-07, 9.016094963953947e-07, 3.42005037623494e-08, 0.000242238660575822, 1.5726830326912022e-07, 6.514158545911641e-09]], "pointer": [[0.0, 0.0, 0.009868315421044827, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0288368109613657, 0.0, 0.00013264777953736484, 0.0, 0.0, 0.0, 0.0, 0.0, 0.013537513092160225, 0.0, 0.00014021222887095064, 0.0, 0.0, 0.0, 0.0, 0.0, 0.019969793036580086, 0.0, 0.0003131624835077673, 0.0, 0.0, 0.0, 0.0, 0.9232222437858582, 0.0, 0.0004809907404705882, 0.0, 0.0, 0.0, 0.0, 0.00022225762950256467, 0.0, 0.00019598966173361987, 0.0, 0.0, 0.0007316292612813413, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.002348321257159114, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]], "target": [0.9720288515090942]}, "loss": [3.5390961170196533, 0.02836979180574417], "acc": [0.0, 0.0, 1.0, 0.0]}, "wrong_error_location": [64]}


Trace of simplified code(s):

{"result": {"time": "2021-02-21 05:40:27.805910", "n_pass": [1, 1, 1], "n_token": 89, "loss": [0.5704792141914368, 0.02836979180574417], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def sleep_sort(", "a", ")", ":", "#NEWLINE#", "#INDENT#", "\"\\n    Sorts the list 'a' using Sleep sort algorithm\\n\\n    >>> from pydsa import sleep_sort\\n    >>> a = [3, 4, 2]\\n    >>> sleep_sort(a)\\n    [2, 3, 4]\\n\\n    \"", "#NEWLINE#", "sleep_sort", ".", "result", "=", "[", "]", "#NEWLINE#", "def add1(", "x", ")", ":", "#NEWLINE#", "#INDENT#", "sleep_sort", ".", "result", ".", "append", "(", "x", ")", "#NEWLINE#", "#UNINDENT#", "mx", "=", "a", "[", "0", "]", "#NEWLINE#", "for", "v", "in", "a", ":", "#NEWLINE#", "#INDENT#", "if", "(", "mx", "<", "v", ")", ":", "#NEWLINE#", "#INDENT#", "mx", "=", "v", "#NEWLINE#", "#UNINDENT#", "Timer", "(", "v", ",", "add1", ",", "[", "v", "]", ")", ".", "start", "(", ")", "#NEWLINE#", "#UNINDENT#", "sleep", "(", "(", "add1", "+", "1", ")", ")", "#NEWLINE#", "return", "sleep_sort", ".", "result"]}}
{"position": {"error_location": 64, "repair_targets": [32, 48, 55], "repair_candidates": [2, 34, 42, 64, 79, 40, 50, 57, 62, 67, 32, 48, 55]}}
{"prediction": {"error_location": 0.5652545690536499, "repair_targets": [0.0288368109613657, 0.019969793036580086, 0.9232222437858582], "repair_candidates": [0.009868315421044827, 0.0288368109613657, 0.00013264777953736484, 0.013537513092160225, 0.00014021222887095064, 0.019969793036580086, 0.0003131624835077673, 0.9232222437858582, 0.0004809907404705882, 0.00022225762950256467, 0.00019598966173361987, 0.0007316292612813413, 0.002348321257159114], "target_probs": 0.9720288515090942}}


{"result": {"time": "2021-02-21 05:40:28.212593", "n_pass": [57, 8, 2], "n_token": 83, "loss": [0.683714747428894, 0.017086030915379524], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def sleep_sort(", "a", ")", ":", "#NEWLINE#", "#INDENT#", "\"\\n    Sorts the list 'a' using Sleep sort algorithm\\n\\n    >>> from pydsa import sleep_sort\\n    >>> a = [3, 4, 2]\\n    >>> sleep_sort(a)\\n    [2, 3, 4]\\n\\n    \"", "#NEWLINE#", "sleep_sort", ".", "result", "=", "[", "]", "#NEWLINE#", "def add1(", "x", ")", ":", "#NEWLINE#", "#INDENT#", "sleep_sort", ".", "result", ".", "append", "(", "x", ")", "#NEWLINE#", "#UNINDENT#", "mx", "=", "a", "[", "0", "]", "#NEWLINE#", "for", "v", "in", "a", ":", "#NEWLINE#", "#INDENT#", "if", "(", "mx", "<", "v", ")", ":", "#NEWLINE#", "#INDENT#", "mx", "=", "v", "#NEWLINE#", "#UNINDENT#", "Timer", "(", "v", ",", "add1", ",", "[", "v", "]", ")", ".", "(", "(", "add1", "+", "1", ")", ")", "#NEWLINE#", "return", "sleep_sort", ".", "result"]}}
{"position": {"error_location": 64, "repair_targets": [32, 48, 55], "repair_candidates": [2, 34, 42, 64, 73, 40, 50, 57, 62, 67, 32, 48, 55]}}
{"prediction": {"error_location": 0.5047385692596436, "repair_targets": [0.017498783767223358, 0.009661899879574776, 0.9558984041213989], "repair_candidates": [0.007267747540026903, 0.017498783767223358, 4.5960481656948105e-05, 0.008071213960647583, 0.00012674432946369052, 0.009661899879574776, 0.00012796712690033019, 0.9558984041213989, 0.0004545351548586041, 4.962191451340914e-05, 7.382792682619765e-05, 0.0005333443987183273, 0.0001900405331980437], "target_probs": 0.9830591082572937}}


{"result": {"time": "2021-02-21 05:40:28.672146", "n_pass": [105, 16, 3], "n_token": 80, "loss": [0.8168082237243652, 0.015044157393276691], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def sleep_sort(", "a", ")", ":", "#NEWLINE#", "#INDENT#", "\"\\n    Sorts the list 'a' using Sleep sort algorithm\\n\\n    >>> from pydsa import sleep_sort\\n    >>> a = [3, 4, 2]\\n    >>> sleep_sort(a)\\n    [2, 3, 4]\\n\\n    \"", "#NEWLINE#", "sleep_sort", ".", "result", "=", "[", "]", "#NEWLINE#", "def add1(", "x", ")", ":", "#NEWLINE#", "#INDENT#", "sleep_sort", ".", "result", ".", "append", "(", "x", ")", "#NEWLINE#", "#UNINDENT#", "mx", "=", "a", "[", "0", "]", "#NEWLINE#", "for", "v", "in", "a", ":", "#NEWLINE#", "#INDENT#", "if", "(", "mx", "<", "v", ")", ":", "#NEWLINE#", "#INDENT#", "mx", "=", "v", "#NEWLINE#", "#UNINDENT#", "Timer", "(", "v", ",", "add1", ",", "[", "v", "]", ")", ".", "(", "(", "add1", "+", "1", ")", "sleep_sort", ".", "result"]}}
{"position": {"error_location": 64, "repair_targets": [32, 48, 55], "repair_candidates": [2, 34, 42, 64, 73, 40, 50, 57, 62, 67, 32, 48, 55]}}
{"prediction": {"error_location": 0.44183963537216187, "repair_targets": [0.01919701136648655, 0.00783110223710537, 0.9580403566360474], "repair_candidates": [0.007718605455011129, 0.01919701136648655, 4.650650225812569e-05, 0.005831793416291475, 0.00010491932334844023, 0.00783110223710537, 7.531743904110044e-05, 0.9580403566360474, 0.00037294990033842623, 1.0706618922995403e-05, 7.910306158009917e-05, 0.0005141434958204627, 0.0001775289129000157], "target_probs": 0.9850684404373169}}


{"result": {"time": "2021-02-21 05:40:28.729096", "n_pass": [106, 17, 4], "n_token": 78, "loss": [0.8029583692550659, 0.034459080547094345], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["a", ")", ":", "#NEWLINE#", "#INDENT#", "\"\\n    Sorts the list 'a' using Sleep sort algorithm\\n\\n    >>> from pydsa import sleep_sort\\n    >>> a = [3, 4, 2]\\n    >>> sleep_sort(a)\\n    [2, 3, 4]\\n\\n    \"", "#NEWLINE#", "sleep_sort", ".", "result", "=", "[", "]", "#NEWLINE#", "def add1(", "x", ")", ":", "#NEWLINE#", "#INDENT#", "sleep_sort", ".", "result", ".", "append", "(", "x", ")", "#NEWLINE#", "#UNINDENT#", "mx", "=", "a", "[", "0", "]", "#NEWLINE#", "for", "v", "in", "a", ":", "#NEWLINE#", "#INDENT#", "if", "(", "mx", "<", "v", ")", ":", "#NEWLINE#", "#INDENT#", "mx", "=", "v", "#NEWLINE#", "#UNINDENT#", "Timer", "(", "v", ",", "add1", ",", "[", "v", "]", ")", ".", "(", "(", "add1", "+", "1", ")", "sleep_sort", ".", "result"]}}
{"position": {"error_location": 62, "repair_targets": [30, 46, 53], "repair_candidates": [0, 32, 40, 62, 71, 38, 48, 55, 60, 65, 30, 46, 53]}}
{"prediction": {"error_location": 0.4480016231536865, "repair_targets": [0.039477284997701645, 0.014467300847172737, 0.9121832847595215], "repair_candidates": [0.014612562954425812, 0.039477284997701645, 0.0011032234178856015, 0.01383039727807045, 0.0021587698720395565, 0.014467300847172737, 3.5488537832861766e-05, 0.9121832847595215, 0.00043395443935878575, 3.384044248377904e-05, 0.00032470948644913733, 0.0009134018910117447, 0.00042576881241984665], "target_probs": 0.966127872467041}}


{"result": {"time": "2021-02-21 05:40:29.589855", "n_pass": [131, 32, 5], "n_token": 75, "loss": [0.3000883460044861, 0.12902319431304932], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["a", ")", ":", "#NEWLINE#", "#INDENT#", "\"\\n    Sorts the list 'a' using Sleep sort algorithm\\n\\n    >>> from pydsa import sleep_sort\\n    >>> a = [3, 4, 2]\\n    >>> sleep_sort(a)\\n    [2, 3, 4]\\n\\n    \"", "#NEWLINE#", "sleep_sort", ".", "result", "=", "[", "]", "#NEWLINE#", "def add1(", "x", ")", ":", "#NEWLINE#", "#INDENT#", "sleep_sort", ".", "result", ".", "append", "(", "x", ")", "#NEWLINE#", "#UNINDENT#", "mx", "=", "a", "[", "0", "]", "#NEWLINE#", "for", "v", "in", "a", ":", "#NEWLINE#", "#INDENT#", "if", "(", "mx", "<", "v", ")", ":", "#NEWLINE#", "#INDENT#", "mx", "=", "v", "#NEWLINE#", "#UNINDENT#", "Timer", "(", "v", ",", "add1", ",", "[", "v", "(", "(", "add1", "+", "1", ")", "sleep_sort", ".", "result"]}}
{"position": {"error_location": 62, "repair_targets": [30, 46, 53], "repair_candidates": [0, 32, 40, 62, 68, 38, 48, 55, 60, 65, 30, 46, 53]}}
{"prediction": {"error_location": 0.7407526969909668, "repair_targets": [0.07670005410909653, 0.009051555767655373, 0.7932019829750061], "repair_candidates": [0.02350761741399765, 0.07670005410909653, 0.0033662377391010523, 0.08520550280809402, 0.003635871224105358, 0.009051555767655373, 4.6228105929913e-05, 0.7932019829750061, 0.0012594519648700953, 0.0011527340393513441, 0.0003775596269406378, 0.0013585687847808003, 0.0011366974795237184], "target_probs": 0.8789535760879517}}


{"result": {"time": "2021-02-21 05:40:29.646996", "n_pass": [133, 33, 6], "n_token": 72, "loss": [0.3221123516559601, 0.26893350481987], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["a", ")", ":", "#NEWLINE#", "#INDENT#", "\"\\n    Sorts the list 'a' using Sleep sort algorithm\\n\\n    >>> from pydsa import sleep_sort\\n    >>> a = [3, 4, 2]\\n    >>> sleep_sort(a)\\n    [2, 3, 4]\\n\\n    \"", "#NEWLINE#", "sleep_sort", ".", "result", "=", "[", "]", "#NEWLINE#", "def add1(", "x", ")", ":", "#NEWLINE#", "#INDENT#", "sleep_sort", ".", "result", ".", "append", "(", "x", ")", "#NEWLINE#", "#UNINDENT#", "mx", "=", "a", "[", "0", "]", "#NEWLINE#", "for", "v", "in", "a", ":", "#NEWLINE#", "#INDENT#", "if", "(", "mx", "<", "v", ")", ":", "#NEWLINE#", "#INDENT#", "mx", "=", "v", "#NEWLINE#", "#UNINDENT#", "Timer", "(", "v", ",", "add1", ",", "[", "v", "(", "(", "add1", "sleep_sort", ".", "result"]}}
{"position": {"error_location": 62, "repair_targets": [30, 46, 53], "repair_candidates": [0, 32, 40, 62, 68, 38, 48, 55, 60, 65, 30, 46, 53]}}
{"prediction": {"error_location": 0.7246168255805969, "repair_targets": [0.15224118530750275, 0.004625680390745401, 0.6073272228240967], "repair_candidates": [0.056661903858184814, 0.15224118530750275, 0.0037708920426666737, 0.16008540987968445, 0.006480866111814976, 0.004625680390745401, 3.2835567253641784e-05, 0.6073272228240967, 0.0008406277629546821, 0.004232659935951233, 0.0007612488116137683, 0.0009872970404103398, 0.0019520955393090844], "target_probs": 0.7641940712928772}}


{"result": {"time": "2021-02-21 05:40:29.764123", "n_pass": [136, 35, 7], "n_token": 70, "loss": [0.7246484756469727, 0.26170605421066284], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["a", ")", "#INDENT#", "\"\\n    Sorts the list 'a' using Sleep sort algorithm\\n\\n    >>> from pydsa import sleep_sort\\n    >>> a = [3, 4, 2]\\n    >>> sleep_sort(a)\\n    [2, 3, 4]\\n\\n    \"", "#NEWLINE#", "sleep_sort", ".", "result", "=", "[", "]", "#NEWLINE#", "def add1(", "x", ")", ":", "#NEWLINE#", "#INDENT#", "sleep_sort", ".", "result", ".", "append", "(", "x", ")", "#NEWLINE#", "#UNINDENT#", "mx", "=", "a", "[", "0", "]", "#NEWLINE#", "for", "v", "in", "a", ":", "#NEWLINE#", "#INDENT#", "if", "(", "mx", "<", "v", ")", ":", "#NEWLINE#", "#INDENT#", "mx", "=", "v", "#NEWLINE#", "#UNINDENT#", "Timer", "(", "v", ",", "add1", ",", "[", "v", "(", "(", "add1", "sleep_sort", ".", "result"]}}
{"position": {"error_location": 60, "repair_targets": [28, 44, 51], "repair_candidates": [0, 30, 38, 60, 66, 36, 46, 53, 58, 63, 28, 44, 51]}}
{"prediction": {"error_location": 0.4844948649406433, "repair_targets": [0.16906723380088806, 0.00252444832585752, 0.5981455445289612], "repair_candidates": [0.06179043650627136, 0.16906723380088806, 0.009930960834026337, 0.1354583203792572, 0.01277882233262062, 0.00252444832585752, 1.689499185886234e-05, 0.5981455445289612, 0.00043677203939296305, 0.00222429889254272, 0.001273990492336452, 0.002030202653259039, 0.004322041757404804], "target_probs": 0.7697372436523438}}


{"result": {"time": "2021-02-21 05:40:29.821376", "n_pass": [137, 36, 8], "n_token": 68, "loss": [0.9651042222976685, 0.21003243327140808], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["a", ")", "#NEWLINE#", "sleep_sort", ".", "result", "=", "[", "]", "#NEWLINE#", "def add1(", "x", ")", ":", "#NEWLINE#", "#INDENT#", "sleep_sort", ".", "result", ".", "append", "(", "x", ")", "#NEWLINE#", "#UNINDENT#", "mx", "=", "a", "[", "0", "]", "#NEWLINE#", "for", "v", "in", "a", ":", "#NEWLINE#", "#INDENT#", "if", "(", "mx", "<", "v", ")", ":", "#NEWLINE#", "#INDENT#", "mx", "=", "v", "#NEWLINE#", "#UNINDENT#", "Timer", "(", "v", ",", "add1", ",", "[", "v", "(", "(", "add1", "sleep_sort", ".", "result"]}}
{"position": {"error_location": 58, "repair_targets": [26, 42, 49], "repair_candidates": [0, 28, 36, 58, 64, 34, 44, 51, 56, 61, 26, 42, 49]}}
{"prediction": {"error_location": 0.38094353675842285, "repair_targets": [0.14760473370552063, 0.0026438471395522356, 0.6603094339370728], "repair_candidates": [0.08592414110898972, 0.14760473370552063, 0.01818837970495224, 0.0649341270327568, 0.013197830878198147, 0.0026438471395522356, 1.2996075383853167e-05, 0.6603094339370728, 0.00037162352236919105, 0.0017626527696847916, 0.0006091283867135644, 0.0015185551019385457, 0.0029226145707070827], "target_probs": 0.8105579614639282}}


{"result": {"time": "2021-02-21 05:40:32.723468", "n_pass": [301, 87, 9], "n_token": 67, "loss": [1.0750871896743774, 0.26663634181022644], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["a", ")", "#NEWLINE#", "sleep_sort", ".", "result", "=", "[", "]", "#NEWLINE#", "def add1(", "x", ")", ":", "#NEWLINE#", "#INDENT#", "sleep_sort", ".", "result", ".", "append", "(", "x", ")", "#NEWLINE#", "#UNINDENT#", "mx", "=", "a", "[", "0", "#NEWLINE#", "for", "v", "in", "a", ":", "#NEWLINE#", "#INDENT#", "if", "(", "mx", "<", "v", ")", ":", "#NEWLINE#", "#INDENT#", "mx", "=", "v", "#NEWLINE#", "#UNINDENT#", "Timer", "(", "v", ",", "add1", ",", "[", "v", "(", "(", "add1", "sleep_sort", ".", "result"]}}
{"position": {"error_location": 57, "repair_targets": [26, 41, 48], "repair_candidates": [0, 28, 35, 57, 63, 33, 43, 50, 55, 60, 26, 41, 48]}}
{"prediction": {"error_location": 0.34126800298690796, "repair_targets": [0.08478222787380219, 0.0026504164561629295, 0.6785188913345337], "repair_candidates": [0.0821647047996521, 0.08478222787380219, 0.05111250281333923, 0.07298248261213303, 0.019733374938368797, 0.0026504164561629295, 2.3941207473399118e-05, 0.6785188913345337, 0.0003171571879647672, 0.0015033684903755784, 0.0009739189990796149, 0.001388355391100049, 0.003848698455840349], "target_probs": 0.7659515738487244}}


{"result": {"time": "2021-02-21 05:40:33.577375", "n_pass": [322, 102, 10], "n_token": 66, "loss": [0.8504312634468079, 0.22570154070854187], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["a", ")", "#NEWLINE#", "sleep_sort", ".", "result", "=", "[", "]", "#NEWLINE#", "def add1(", "x", ")", ":", "#NEWLINE#", "#INDENT#", "sleep_sort", ".", "result", ".", "append", "(", "x", ")", "#NEWLINE#", "#UNINDENT#", "mx", "=", "a", "[", "0", "#NEWLINE#", "for", "v", "in", "a", ":", "#NEWLINE#", "#INDENT#", "if", "(", "mx", "<", "v", ")", ":", "#NEWLINE#", "#INDENT#", "mx", "=", "v", "#UNINDENT#", "Timer", "(", "v", ",", "add1", ",", "[", "v", "(", "(", "add1", "sleep_sort", ".", "result"]}}
{"position": {"error_location": 56, "repair_targets": [26, 41, 48], "repair_candidates": [0, 28, 35, 56, 62, 33, 43, 50, 54, 59, 26, 41, 48]}}
{"prediction": {"error_location": 0.42723068594932556, "repair_targets": [0.08630842715501785, 0.0025136061012744904, 0.7091342210769653], "repair_candidates": [0.05678143352270126, 0.08630842715501785, 0.04159881919622421, 0.08270537853240967, 0.01585007831454277, 0.0025136061012744904, 3.1559447961626574e-05, 0.7091342210769653, 0.000583078945055604, 0.0006401189020834863, 0.000956123520154506, 0.0010215986985713243, 0.0018756174249574542], "target_probs": 0.7979562282562256}}


{"result": {"time": "2021-02-21 05:40:33.919009", "n_pass": [330, 108, 11], "n_token": 65, "loss": [1.0548139810562134, 0.23863668739795685], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["a", ")", "#NEWLINE#", "sleep_sort", ".", "result", "=", "[", "]", "#NEWLINE#", "def add1(", "x", ")", ":", "#NEWLINE#", "#INDENT#", "sleep_sort", ".", "result", ".", "append", "(", "x", ")", "#NEWLINE#", "#UNINDENT#", "mx", "=", "a", "[", "0", "#NEWLINE#", "for", "v", "in", "a", ":", "#NEWLINE#", "#INDENT#", "if", "(", "mx", "<", "v", ")", ":", "#NEWLINE#", "#INDENT#", "mx", "=", "v", "#UNINDENT#", "Timer", "(", "v", ",", "add1", ",", "v", "(", "(", "add1", "sleep_sort", ".", "result"]}}
{"position": {"error_location": 56, "repair_targets": [26, 41, 48], "repair_candidates": [0, 28, 35, 56, 61, 33, 43, 50, 54, 58, 26, 41, 48]}}
{"prediction": {"error_location": 0.3482572138309479, "repair_targets": [0.09724056720733643, 0.0031401379965245724, 0.6873202919960022], "repair_candidates": [0.052638713270425797, 0.09724056720733643, 0.05124351754784584, 0.08211179077625275, 0.022190149873495102, 0.0031401379965245724, 4.625980363925919e-05, 0.6873202919960022, 0.0007483090739697218, 0.0004938701167702675, 0.0011259533930569887, 0.0011850683949887753, 0.0005153618985787034], "target_probs": 0.7877010107040405}}


{"result": {"time": "2021-02-21 05:40:33.976699", "n_pass": [332, 109, 12], "n_token": 64, "loss": [0.9096128940582275, 0.20185032486915588], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["a", ")", "#NEWLINE#", "sleep_sort", ".", "result", "=", "[", "]", "#NEWLINE#", "def add1(", "x", ")", ":", "#NEWLINE#", "#INDENT#", "sleep_sort", ".", "result", ".", "append", "(", "x", ")", "#NEWLINE#", "#UNINDENT#", "mx", "=", "a", "[", "0", "#NEWLINE#", "for", "v", "in", "a", ":", "#NEWLINE#", "#INDENT#", "if", "(", "mx", "<", "v", ")", ":", "#NEWLINE#", "#INDENT#", "mx", "=", "v", "#UNINDENT#", "Timer", "(", "v", ",", "add1", ",", "v", "(", "add1", "sleep_sort", ".", "result"]}}
{"position": {"error_location": 56, "repair_targets": [26, 41, 48], "repair_candidates": [0, 28, 35, 56, 60, 33, 43, 50, 54, 58, 26, 41, 48]}}
{"prediction": {"error_location": 0.4026801288127899, "repair_targets": [0.08531635254621506, 0.003135653445497155, 0.7287651896476746], "repair_candidates": [0.044711217284202576, 0.08531635254621506, 0.04444699361920357, 0.0696394219994545, 0.021011533215641975, 0.003135653445497155, 4.375896605779417e-05, 0.7287651896476746, 0.0007210517069324851, 0.0003471459203865379, 0.0006818279507569969, 0.0008357326150871813, 0.0003441243025008589], "target_probs": 0.817217230796814}}


{"result": {"time": "2021-02-21 05:40:34.090632", "n_pass": [335, 111, 13], "n_token": 63, "loss": [0.7686060667037964, 0.21778419613838196], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["a", ")", "#NEWLINE#", "sleep_sort", ".", "result", "=", "[", "]", "#NEWLINE#", "def add1(", "x", ")", ":", "#NEWLINE#", "#INDENT#", "sleep_sort", ".", "result", ".", "append", "(", "x", ")", "#NEWLINE#", "#UNINDENT#", "mx", "=", "a", "[", "0", "#NEWLINE#", "for", "v", "in", "a", ":", "#NEWLINE#", "#INDENT#", "if", "(", "mx", "<", "v", ")", ":", "#NEWLINE#", "#INDENT#", "mx", "=", "v", "#UNINDENT#", "Timer", "(", "v", ",", "add1", ",", "v", "(", "add1", ".", "result"]}}
{"position": {"error_location": 56, "repair_targets": [26, 41, 48], "repair_candidates": [0, 28, 35, 56, 60, 33, 43, 50, 54, 58, 26, 41, 48]}}
{"prediction": {"error_location": 0.46365886926651, "repair_targets": [0.08163031935691833, 0.0038760958705097437, 0.7187926173210144], "repair_candidates": [0.047384876757860184, 0.08163031935691833, 0.04647151753306389, 0.0676494762301445, 0.030721062794327736, 0.0038760958705097437, 5.801567749585956e-05, 0.7187926173210144, 0.000772690458688885, 0.00029241747688502073, 0.0008110618218779564, 0.0014987338799983263, 4.105015250388533e-05], "target_probs": 0.804298996925354}}


{"result": {"time": "2021-02-21 05:40:34.206489", "n_pass": [337, 113, 14], "n_token": 62, "loss": [0.9934150576591492, 0.31215521693229675], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["a", ")", "#NEWLINE#", "sleep_sort", ".", "result", "=", "[", "]", "#NEWLINE#", "def add1(", "x", ")", ":", "#NEWLINE#", "#INDENT#", "sleep_sort", ".", "result", ".", "append", "(", "x", ")", "#NEWLINE#", "#UNINDENT#", "mx", "=", "a", "[", "0", "#NEWLINE#", "for", "v", "in", "a", ":", "#NEWLINE#", "#INDENT#", "if", "(", "mx", "<", "v", ")", ":", "#NEWLINE#", "#INDENT#", "mx", "=", "v", "#UNINDENT#", "Timer", "(", "v", ",", "add1", ",", "v", "(", "add1", "."]}}
{"position": {"error_location": 56, "repair_targets": [26, 41, 48], "repair_candidates": [0, 28, 35, 56, 60, 33, 43, 50, 54, 58, 26, 41, 48]}}
{"prediction": {"error_location": 0.37030988931655884, "repair_targets": [0.09436917304992676, 0.004474296234548092, 0.6330244541168213], "repair_candidates": [0.08513511717319489, 0.09436917304992676, 0.06685378402471542, 0.06405691057443619, 0.04446139931678772, 0.004474296234548092, 5.46181108802557e-05, 0.6330244541168213, 0.0004286914481781423, 0.0002686430816538632, 0.0025843149051070213, 0.0020533003844320774, 0.0022352905943989754], "target_probs": 0.7318679094314575}}


{"result": {"time": "2021-02-21 05:40:34.547421", "n_pass": [344, 119, 15], "n_token": 61, "loss": [1.0133734941482544, 0.26928314566612244], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["a", ")", "#NEWLINE#", "sleep_sort", ".", "result", "[", "]", "#NEWLINE#", "def add1(", "x", ")", ":", "#NEWLINE#", "#INDENT#", "sleep_sort", ".", "result", ".", "append", "(", "x", ")", "#NEWLINE#", "#UNINDENT#", "mx", "=", "a", "[", "0", "#NEWLINE#", "for", "v", "in", "a", ":", "#NEWLINE#", "#INDENT#", "if", "(", "mx", "<", "v", ")", ":", "#NEWLINE#", "#INDENT#", "mx", "=", "v", "#UNINDENT#", "Timer", "(", "v", ",", "add1", ",", "v", "(", "add1", "."]}}
{"position": {"error_location": 55, "repair_targets": [25, 40, 47], "repair_candidates": [0, 27, 34, 55, 59, 32, 42, 49, 53, 57, 25, 40, 47]}}
{"prediction": {"error_location": 0.3629923462867737, "repair_targets": [0.0820482149720192, 0.004236140288412571, 0.6776425242424011], "repair_candidates": [0.08705455809831619, 0.0820482149720192, 0.05741121992468834, 0.0465773269534111, 0.04098736494779587, 0.004236140288412571, 7.647379243280739e-05, 0.6776425242424011, 0.0005481771659106016, 0.0002701282501220703, 0.0012667225673794746, 0.0013017101446166635, 0.0005794636090286076], "target_probs": 0.7639269232749939}}


{"result": {"time": "2021-02-21 05:40:35.001564", "n_pass": [352, 127, 16], "n_token": 60, "loss": [1.014174461364746, 0.27361685037612915], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["a", ")", "#NEWLINE#", "sleep_sort", ".", "result", "[", "]", "#NEWLINE#", "def add1(", "x", ")", ":", "#INDENT#", "sleep_sort", ".", "result", ".", "append", "(", "x", ")", "#NEWLINE#", "#UNINDENT#", "mx", "=", "a", "[", "0", "#NEWLINE#", "for", "v", "in", "a", ":", "#NEWLINE#", "#INDENT#", "if", "(", "mx", "<", "v", ")", ":", "#NEWLINE#", "#INDENT#", "mx", "=", "v", "#UNINDENT#", "Timer", "(", "v", ",", "add1", ",", "v", "(", "add1", "."]}}
{"position": {"error_location": 54, "repair_targets": [24, 39, 46], "repair_candidates": [0, 26, 33, 54, 58, 31, 41, 48, 52, 56, 24, 39, 46]}}
{"prediction": {"error_location": 0.3627016842365265, "repair_targets": [0.07802712172269821, 0.0033295738976448774, 0.6792667508125305], "repair_candidates": [0.08079289644956589, 0.07802712172269821, 0.06661398708820343, 0.04435453936457634, 0.04420313239097595, 0.0033295738976448774, 7.291130168596283e-05, 0.6792667508125305, 0.0006437770207412541, 0.0002652625262271613, 0.0009666288387961686, 0.0010948007693514228, 0.0003686467243824154], "target_probs": 0.7606234550476074}}


{"result": {"time": "2021-02-21 05:40:35.058827", "n_pass": [353, 128, 17], "n_token": 59, "loss": [0.8597502708435059, 0.2159387618303299], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["a", ")", "#NEWLINE#", "sleep_sort", ".", "result", "[", "]", "#NEWLINE#", "def add1(", "x", ")", ":", "sleep_sort", ".", "result", ".", "append", "(", "x", ")", "#NEWLINE#", "#UNINDENT#", "mx", "=", "a", "[", "0", "#NEWLINE#", "for", "v", "in", "a", ":", "#NEWLINE#", "#INDENT#", "if", "(", "mx", "<", "v", ")", ":", "#NEWLINE#", "#INDENT#", "mx", "=", "v", "#UNINDENT#", "Timer", "(", "v", ",", "add1", ",", "v", "(", "add1", "."]}}
{"position": {"error_location": 53, "repair_targets": [23, 38, 45], "repair_candidates": [0, 25, 32, 53, 57, 30, 40, 47, 51, 55, 23, 38, 45]}}
{"prediction": {"error_location": 0.42326784133911133, "repair_targets": [0.062255024909973145, 0.002492413157597184, 0.7410371899604797], "repair_candidates": [0.06482381373643875, 0.062255024909973145, 0.05660594254732132, 0.031023843213915825, 0.03913212940096855, 0.002492413157597184, 5.860576493432745e-05, 0.7410371899604797, 0.0005498219979926944, 0.00023157642863225192, 0.0006128611858002841, 0.0008090416085906327, 0.000367798435036093], "target_probs": 0.8057846426963806}}


{"result": {"time": "2021-02-21 05:40:35.116057", "n_pass": [354, 129, 18], "n_token": 58, "loss": [0.9750418663024902, 0.15718333423137665], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["a", ")", "#NEWLINE#", "sleep_sort", ".", "result", "[", "]", "#NEWLINE#", "def add1(", "x", ")", ":", ".", "result", ".", "append", "(", "x", ")", "#NEWLINE#", "#UNINDENT#", "mx", "=", "a", "[", "0", "#NEWLINE#", "for", "v", "in", "a", ":", "#NEWLINE#", "#INDENT#", "if", "(", "mx", "<", "v", ")", ":", "#NEWLINE#", "#INDENT#", "mx", "=", "v", "#UNINDENT#", "Timer", "(", "v", ",", "add1", ",", "v", "(", "add1", "."]}}
{"position": {"error_location": 52, "repair_targets": [22, 37, 44], "repair_candidates": [0, 24, 31, 52, 56, 29, 39, 46, 50, 54, 22, 37, 44]}}
{"prediction": {"error_location": 0.37717655301094055, "repair_targets": [0.06332040578126907, 0.00287289684638381, 0.7883540987968445], "repair_candidates": [0.057862840592861176, 0.06332040578126907, 0.03334470093250275, 0.02151014283299446, 0.03054068610072136, 0.00287289684638381, 3.83333936042618e-05, 0.7883540987968445, 0.0005428405129350722, 0.0002160227159038186, 0.0005065396544523537, 0.0004810701357200742, 0.0004094165051355958], "target_probs": 0.854547381401062}}


{"result": {"time": "2021-02-21 05:40:35.457221", "n_pass": [360, 135, 19], "n_token": 57, "loss": [0.8036606907844543, 0.13949830830097198], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["a", ")", "#NEWLINE#", "sleep_sort", ".", "result", "[", "]", "#NEWLINE#", "def add1(", "x", ")", ":", ".", "result", ".", "append", "(", ")", "#NEWLINE#", "#UNINDENT#", "mx", "=", "a", "[", "0", "#NEWLINE#", "for", "v", "in", "a", ":", "#NEWLINE#", "#INDENT#", "if", "(", "mx", "<", "v", ")", ":", "#NEWLINE#", "#INDENT#", "mx", "=", "v", "#UNINDENT#", "Timer", "(", "v", ",", "add1", ",", "v", "(", "add1", "."]}}
{"position": {"error_location": 51, "repair_targets": [21, 36, 43], "repair_candidates": [0, 23, 30, 51, 55, 28, 38, 45, 49, 53, 21, 36, 43]}}
{"prediction": {"error_location": 0.44768714904785156, "repair_targets": [0.0619855597615242, 0.003992417361587286, 0.8038164973258972], "repair_candidates": [0.07043355703353882, 0.0619855597615242, 0.01860261708498001, 0.016759168356657028, 0.022911569103598595, 0.003992417361587286, 3.6586567148333415e-05, 0.8038164973258972, 0.0006532002589665353, 0.00018516351701691747, 0.00024301017401739955, 0.00028300826670601964, 9.76633164100349e-05], "target_probs": 0.869794487953186}}


{"result": {"time": "2021-02-21 05:40:36.311789", "n_pass": [380, 150, 20], "n_token": 56, "loss": [0.6412534713745117, 0.10874485224485397], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["a", ")", "#NEWLINE#", "sleep_sort", ".", "result", "[", "]", "#NEWLINE#", "def add1(", "x", ")", ":", ".", "result", ".", "append", "(", ")", "#NEWLINE#", "#UNINDENT#", "mx", "=", "a", "[", "0", "#NEWLINE#", "for", "v", "in", "a", ":", "#NEWLINE#", "#INDENT#", "if", "(", "mx", "v", ")", ":", "#NEWLINE#", "#INDENT#", "mx", "=", "v", "#UNINDENT#", "Timer", "(", "v", ",", "add1", ",", "v", "(", "add1", "."]}}
{"position": {"error_location": 50, "repair_targets": [21, 36, 42], "repair_candidates": [0, 23, 30, 50, 54, 28, 37, 44, 48, 52, 21, 36, 42]}}
{"prediction": {"error_location": 0.5266318917274475, "repair_targets": [0.0664060041308403, 0.002128232503309846, 0.8284249901771545], "repair_candidates": [0.07710624486207962, 0.0664060041308403, 0.003207623027265072, 0.011941542848944664, 0.008776787668466568, 0.002128232503309846, 7.849998655728996e-05, 0.8284249901771545, 0.0009790248004719615, 0.00013595193740911782, 0.00012399855768308043, 0.0005976342945359647, 9.350069740321487e-05], "target_probs": 0.8969592452049255}}


{"result": {"time": "2021-02-21 05:40:36.369096", "n_pass": [382, 151, 21], "n_token": 55, "loss": [0.7769648432731628, 0.13318730890750885], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["a", ")", "#NEWLINE#", "sleep_sort", ".", "result", "[", "]", "#NEWLINE#", "def add1(", "x", ")", ":", ".", "result", ".", "append", "(", ")", "#NEWLINE#", "#UNINDENT#", "mx", "=", "a", "[", "0", "#NEWLINE#", "for", "v", "in", "a", ":", "#NEWLINE#", "#INDENT#", "if", "(", "mx", "v", ":", "#NEWLINE#", "#INDENT#", "mx", "=", "v", "#UNINDENT#", "Timer", "(", "v", ",", "add1", ",", "v", "(", "add1", "."]}}
{"position": {"error_location": 49, "repair_targets": [21, 36, 41], "repair_candidates": [0, 23, 30, 49, 53, 28, 37, 43, 47, 51, 21, 36, 41]}}
{"prediction": {"error_location": 0.45979946851730347, "repair_targets": [0.07398414611816406, 0.0013865004293620586, 0.7999304533004761], "repair_candidates": [0.08744843304157257, 0.07398414611816406, 0.003366670338436961, 0.02180436998605728, 0.009117105044424534, 0.0013865004293620586, 0.0001169857569038868, 0.7999304533004761, 0.001171231153421104, 0.00022923710639588535, 0.00037959637120366096, 0.0005355727043934166, 0.0005297239404171705], "target_probs": 0.8753011226654053}}


{"result": {"time": "2021-02-21 05:40:36.482977", "n_pass": [384, 153, 22], "n_token": 54, "loss": [0.7638355493545532, 0.19482767581939697], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["a", ")", "#NEWLINE#", "sleep_sort", ".", "result", "[", "]", "#NEWLINE#", "def add1(", "x", ")", ":", ".", "result", ".", "append", "(", ")", "#NEWLINE#", "#UNINDENT#", "mx", "=", "a", "[", "0", "#NEWLINE#", "for", "v", "in", "a", ":", "#NEWLINE#", "#INDENT#", "if", "(", "mx", "v", ":", "#INDENT#", "mx", "=", "v", "#UNINDENT#", "Timer", "(", "v", ",", "add1", ",", "v", "(", "add1", "."]}}
{"position": {"error_location": 48, "repair_targets": [21, 36, 40], "repair_candidates": [0, 23, 30, 48, 52, 28, 37, 42, 46, 50, 21, 36, 40]}}
{"prediction": {"error_location": 0.46587610244750977, "repair_targets": [0.10778268426656723, 0.0030125754419714212, 0.7121812105178833], "repair_candidates": [0.1195971667766571, 0.10778268426656723, 0.003596795490011573, 0.035999320447444916, 0.01337250042706728, 0.0030125754419714212, 0.00034016172867268324, 0.7121812105178833, 0.0013711825013160706, 0.000423704826971516, 0.0007205922738648951, 0.0007816022844053805, 0.0008204306941479445], "target_probs": 0.8229764699935913}}


{"result": {"time": "2021-02-21 05:40:37.729736", "n_pass": [413, 175, 23], "n_token": 53, "loss": [0.8158045411109924, 0.1484910249710083], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["a", ")", "#NEWLINE#", "sleep_sort", ".", "result", "[", "]", "#NEWLINE#", "def add1(", "x", ")", ":", "result", ".", "append", "(", ")", "#NEWLINE#", "#UNINDENT#", "mx", "=", "a", "[", "0", "#NEWLINE#", "for", "v", "in", "a", ":", "#NEWLINE#", "#INDENT#", "if", "(", "mx", "v", ":", "#INDENT#", "mx", "=", "v", "#UNINDENT#", "Timer", "(", "v", ",", "add1", ",", "v", "(", "add1", "."]}}
{"position": {"error_location": 47, "repair_targets": [20, 35, 39], "repair_candidates": [0, 22, 29, 47, 51, 27, 36, 41, 45, 49, 20, 35, 39]}}
{"prediction": {"error_location": 0.4422834515571594, "repair_targets": [0.10928723961114883, 0.0036049990449100733, 0.7491154670715332], "repair_candidates": [0.08594382554292679, 0.10928723961114883, 0.0026187372859567404, 0.03259850665926933, 0.012109893374145031, 0.0036049990449100733, 0.0004189963510725647, 0.7491154670715332, 0.0018413971411064267, 0.00047944163088686764, 0.000639608595520258, 0.0008327974937856197, 0.0005090701743029058], "target_probs": 0.862007737159729}}


{"result": {"time": "2021-02-21 05:40:37.786511", "n_pass": [414, 176, 24], "n_token": 52, "loss": [0.7152789235115051, 0.2217363715171814], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["a", ")", "#NEWLINE#", "sleep_sort", ".", "result", "[", "]", "#NEWLINE#", "def add1(", "x", ")", ":", ".", "append", "(", ")", "#NEWLINE#", "#UNINDENT#", "mx", "=", "a", "[", "0", "#NEWLINE#", "for", "v", "in", "a", ":", "#NEWLINE#", "#INDENT#", "if", "(", "mx", "v", ":", "#INDENT#", "mx", "=", "v", "#UNINDENT#", "Timer", "(", "v", ",", "add1", ",", "v", "(", "add1", "."]}}
{"position": {"error_location": 46, "repair_targets": [19, 34, 38], "repair_candidates": [0, 21, 28, 46, 50, 26, 35, 40, 44, 48, 19, 34, 38]}}
{"prediction": {"error_location": 0.48905569314956665, "repair_targets": [0.09081800282001495, 0.003809459740296006, 0.7064990997314453], "repair_candidates": [0.14939479529857635, 0.09081800282001495, 0.003401876427233219, 0.026041654869914055, 0.015083842910826206, 0.003809459740296006, 0.0004361057362984866, 0.7064990997314453, 0.0024822477716952562, 0.0004074669268447906, 0.00045532817603088915, 0.0007485045935027301, 0.0004216307424940169], "target_probs": 0.8011265397071838}}


{"result": {"time": "2021-02-21 05:40:37.843234", "n_pass": [415, 177, 25], "n_token": 51, "loss": [0.6281736493110657, 0.228496253490448], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["a", ")", "#NEWLINE#", "sleep_sort", ".", "result", "[", "]", "#NEWLINE#", "def add1(", "x", ")", ":", "append", "(", ")", "#NEWLINE#", "#UNINDENT#", "mx", "=", "a", "[", "0", "#NEWLINE#", "for", "v", "in", "a", ":", "#NEWLINE#", "#INDENT#", "if", "(", "mx", "v", ":", "#INDENT#", "mx", "=", "v", "#UNINDENT#", "Timer", "(", "v", ",", "add1", ",", "v", "(", "add1", "."]}}
{"position": {"error_location": 45, "repair_targets": [18, 33, 37], "repair_candidates": [0, 20, 27, 45, 49, 25, 34, 39, 43, 47, 18, 33, 37]}}
{"prediction": {"error_location": 0.5335654020309448, "repair_targets": [0.0915006697177887, 0.004477893002331257, 0.6997506618499756], "repair_candidates": [0.15309835970401764, 0.0915006697177887, 0.003478589467704296, 0.027072429656982422, 0.015084211714565754, 0.004477893002331257, 0.0004554462502710521, 0.6997506618499756, 0.003090604906901717, 0.00041622304706834257, 0.00045210003736428916, 0.0006776067311875522, 0.0004452661669347435], "target_probs": 0.7957292795181274}}


{"result": {"time": "2021-02-21 05:40:37.900573", "n_pass": [416, 178, 26], "n_token": 50, "loss": [0.7313345670700073, 0.22387656569480896], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["a", ")", "#NEWLINE#", "sleep_sort", ".", "result", "[", "]", "#NEWLINE#", "def add1(", "x", ")", ":", "(", ")", "#NEWLINE#", "#UNINDENT#", "mx", "=", "a", "[", "0", "#NEWLINE#", "for", "v", "in", "a", ":", "#NEWLINE#", "#INDENT#", "if", "(", "mx", "v", ":", "#INDENT#", "mx", "=", "v", "#UNINDENT#", "Timer", "(", "v", ",", "add1", ",", "v", "(", "add1", "."]}}
{"position": {"error_location": 44, "repair_targets": [17, 32, 36], "repair_candidates": [0, 19, 26, 44, 48, 24, 33, 38, 42, 46, 17, 32, 36]}}
{"prediction": {"error_location": 0.4812662899494171, "repair_targets": [0.1049036756157875, 0.005920420866459608, 0.6885896921157837], "repair_candidates": [0.15031804144382477, 0.1049036756157875, 0.0035417608451098204, 0.026250440627336502, 0.01370648480951786, 0.005920420866459608, 0.000512418569996953, 0.6885896921157837, 0.003814290277659893, 0.0004485883691813797, 0.0007942047668620944, 0.000605848734267056, 0.0005941204144619405], "target_probs": 0.799413800239563}}


{"result": {"time": "2021-02-21 05:40:37.959855", "n_pass": [417, 179, 27], "n_token": 49, "loss": [0.8694931864738464, 0.2459612786769867], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["a", ")", "#NEWLINE#", "sleep_sort", ".", "result", "[", "]", "#NEWLINE#", "def add1(", "x", ")", ":", ")", "#NEWLINE#", "#UNINDENT#", "mx", "=", "a", "[", "0", "#NEWLINE#", "for", "v", "in", "a", ":", "#NEWLINE#", "#INDENT#", "if", "(", "mx", "v", ":", "#INDENT#", "mx", "=", "v", "#UNINDENT#", "Timer", "(", "v", ",", "add1", ",", "v", "(", "add1", "."]}}
{"position": {"error_location": 43, "repair_targets": [16, 31, 35], "repair_candidates": [0, 18, 25, 43, 47, 23, 32, 37, 41, 45, 16, 31, 35]}}
{"prediction": {"error_location": 0.41916394233703613, "repair_targets": [0.15056131780147552, 0.006853760220110416, 0.6245374083518982], "repair_candidates": [0.16041895747184753, 0.15056131780147552, 0.0044277505949139595, 0.029512722045183182, 0.015411082655191422, 0.006853760220110416, 0.0006208960548974574, 0.6245374083518982, 0.003993061371147633, 0.00044571462785825133, 0.0015930281952023506, 0.0007155577186495066, 0.0009087523212656379], "target_probs": 0.7819525003433228}}


{"result": {"time": "2021-02-21 05:40:38.016549", "n_pass": [418, 180, 28], "n_token": 48, "loss": [0.657761812210083, 0.24042437970638275], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["a", ")", "#NEWLINE#", "sleep_sort", ".", "result", "[", "]", "#NEWLINE#", "def add1(", "x", ")", ":", "#NEWLINE#", "#UNINDENT#", "mx", "=", "a", "[", "0", "#NEWLINE#", "for", "v", "in", "a", ":", "#NEWLINE#", "#INDENT#", "if", "(", "mx", "v", ":", "#INDENT#", "mx", "=", "v", "#UNINDENT#", "Timer", "(", "v", ",", "add1", ",", "v", "(", "add1", "."]}}
{"position": {"error_location": 42, "repair_targets": [15, 30, 34], "repair_candidates": [0, 17, 24, 42, 46, 22, 31, 36, 40, 44, 15, 30, 34]}}
{"prediction": {"error_location": 0.5180094242095947, "repair_targets": [0.19121873378753662, 0.010544152930378914, 0.5845312476158142], "repair_candidates": [0.14699403941631317, 0.19121873378753662, 0.005613185930997133, 0.03291121497750282, 0.017682477831840515, 0.010544152930378914, 0.0009008253691717982, 0.5845312476158142, 0.004616100341081619, 0.0005990521749481559, 0.002246519550681114, 0.0007824245258234441, 0.0013599488884210587], "target_probs": 0.7862941026687622}}


{"result": {"time": "2021-02-21 05:40:38.073077", "n_pass": [419, 181, 29], "n_token": 47, "loss": [0.6907587647438049, 0.258583664894104], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["a", ")", "#NEWLINE#", "sleep_sort", ".", "result", "[", "]", "#NEWLINE#", "def add1(", "x", ")", ":", "#UNINDENT#", "mx", "=", "a", "[", "0", "#NEWLINE#", "for", "v", "in", "a", ":", "#NEWLINE#", "#INDENT#", "if", "(", "mx", "v", ":", "#INDENT#", "mx", "=", "v", "#UNINDENT#", "Timer", "(", "v", ",", "add1", ",", "v", "(", "add1", "."]}}
{"position": {"error_location": 41, "repair_targets": [14, 29, 33], "repair_candidates": [0, 16, 23, 41, 45, 21, 30, 35, 39, 43, 14, 29, 33]}}
{"prediction": {"error_location": 0.5011956095695496, "repair_targets": [0.18642346560955048, 0.013722606934607029, 0.5719983577728271], "repair_candidates": [0.14724013209342957, 0.18642346560955048, 0.006762975361198187, 0.035174958407878876, 0.024085691198706627, 0.013722606934607029, 0.0011305806692689657, 0.5719983577728271, 0.005825422704219818, 0.0009651260916143656, 0.0033857442904263735, 0.0006528706871904433, 0.002632088027894497], "target_probs": 0.7721444368362427}}


{"result": {"time": "2021-02-21 05:40:38.129835", "n_pass": [420, 182, 30], "n_token": 46, "loss": [0.6705079674720764, 0.3845566213130951], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["a", ")", "#NEWLINE#", "sleep_sort", ".", "result", "[", "]", "#NEWLINE#", "def add1(", "x", ")", ":", "mx", "=", "a", "[", "0", "#NEWLINE#", "for", "v", "in", "a", ":", "#NEWLINE#", "#INDENT#", "if", "(", "mx", "v", ":", "#INDENT#", "mx", "=", "v", "#UNINDENT#", "Timer", "(", "v", ",", "add1", ",", "v", "(", "add1", "."]}}
{"position": {"error_location": 40, "repair_targets": [13, 28, 32], "repair_candidates": [0, 15, 22, 40, 44, 20, 29, 34, 38, 42, 13, 28, 32]}}
{"prediction": {"error_location": 0.5114487409591675, "repair_targets": [0.08656419068574905, 0.019350679591298103, 0.5748375058174133], "repair_candidates": [0.23224720358848572, 0.08656419068574905, 0.00731439096853137, 0.02781469188630581, 0.03294802084565163, 0.019350679591298103, 0.0014352581929415464, 0.5748375058174133, 0.008779153227806091, 0.0016021430492401123, 0.00453586969524622, 0.0005355494213290513, 0.0020354019943624735], "target_probs": 0.6807523965835571}}


{"result": {"time": "2021-02-21 05:40:38.186524", "n_pass": [422, 183, 31], "n_token": 45, "loss": [0.7517404556274414, 0.3435133099555969], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["a", ")", "#NEWLINE#", "sleep_sort", ".", "result", "[", "]", "#NEWLINE#", "def add1(", "x", ")", ":", "mx", "a", "[", "0", "#NEWLINE#", "for", "v", "in", "a", ":", "#NEWLINE#", "#INDENT#", "if", "(", "mx", "v", ":", "#INDENT#", "mx", "=", "v", "#UNINDENT#", "Timer", "(", "v", ",", "add1", ",", "v", "(", "add1", "."]}}
{"position": {"error_location": 39, "repair_targets": [13, 27, 31], "repair_candidates": [0, 14, 21, 39, 43, 19, 28, 33, 37, 41, 13, 27, 31]}}
{"prediction": {"error_location": 0.47154518961906433, "repair_targets": [0.05321382358670235, 0.042862989008426666, 0.6131972074508667], "repair_candidates": [0.23028334975242615, 0.05321382358670235, 0.008335922844707966, 0.02215740829706192, 0.01500071119517088, 0.042862989008426666, 0.0006843616138212383, 0.6131972074508667, 0.005623336415737867, 0.001617373083718121, 0.004282954148948193, 0.0006192575092427433, 0.0021212880965322256], "target_probs": 0.7092740535736084}}


{"result": {"time": "2021-02-21 05:40:38.242984", "n_pass": [424, 184, 32], "n_token": 44, "loss": [1.052781105041504, 0.4644801616668701], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["a", ")", "#NEWLINE#", "sleep_sort", ".", "result", "[", "]", "#NEWLINE#", "def add1(", "x", ")", ":", "mx", "a", "0", "#NEWLINE#", "for", "v", "in", "a", ":", "#NEWLINE#", "#INDENT#", "if", "(", "mx", "v", ":", "#INDENT#", "mx", "=", "v", "#UNINDENT#", "Timer", "(", "v", ",", "add1", ",", "v", "(", "add1", "."]}}
{"position": {"error_location": 38, "repair_targets": [13, 26, 30], "repair_candidates": [0, 14, 20, 38, 42, 18, 27, 32, 36, 40, 13, 26, 30]}}
{"prediction": {"error_location": 0.34896591305732727, "repair_targets": [0.0637221485376358, 0.06917030364274979, 0.49556925892829895], "repair_candidates": [0.28041350841522217, 0.0637221485376358, 0.014439444057643414, 0.029043499380350113, 0.025659244507551193, 0.06917030364274979, 0.0011866968125104904, 0.49556925892829895, 0.009365973062813282, 0.0024388153105974197, 0.0058067296631634235, 0.0008244683849625289, 0.002359891077503562], "target_probs": 0.6284617185592651}}


{"result": {"time": "2021-02-21 05:40:38.580645", "n_pass": [432, 190, 33], "n_token": 43, "loss": [1.1611552238464355, 0.4925118088722229], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["a", ")", "#NEWLINE#", "sleep_sort", ".", "result", "[", "]", "#NEWLINE#", "def add1(", "x", ")", ":", "mx", "a", "0", "#NEWLINE#", "for", "v", "in", "a", ":", "#INDENT#", "if", "(", "mx", "v", ":", "#INDENT#", "mx", "=", "v", "#UNINDENT#", "Timer", "(", "v", ",", "add1", ",", "v", "(", "add1", "."]}}
{"position": {"error_location": 37, "repair_targets": [13, 25, 29], "repair_candidates": [0, 14, 20, 37, 41, 18, 26, 31, 35, 39, 13, 25, 29]}}
{"prediction": {"error_location": 0.31312423944473267, "repair_targets": [0.06961885839700699, 0.04663979634642601, 0.494830846786499], "repair_candidates": [0.2891591787338257, 0.06961885839700699, 0.01643574796617031, 0.030122652649879456, 0.02971656806766987, 0.04663979634642601, 0.0009679446811787784, 0.494830846786499, 0.008072427473962307, 0.0020561038982123137, 0.008463389240205288, 0.0010712259681895375, 0.002845300128683448], "target_probs": 0.6110895276069641}}


{"result": {"time": "2021-02-21 05:40:38.639801", "n_pass": [433, 191, 34], "n_token": 42, "loss": [1.1731048822402954, 0.34836873412132263], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["a", ")", "#NEWLINE#", "sleep_sort", ".", "result", "[", "]", "#NEWLINE#", "def add1(", "x", ")", ":", "mx", "a", "0", "#NEWLINE#", "for", "v", "in", "a", ":", "if", "(", "mx", "v", ":", "#INDENT#", "mx", "=", "v", "#UNINDENT#", "Timer", "(", "v", ",", "add1", ",", "v", "(", "add1", "."]}}
{"position": {"error_location": 36, "repair_targets": [13, 24, 28], "repair_candidates": [0, 14, 20, 36, 40, 18, 25, 30, 34, 38, 13, 24, 28]}}
{"prediction": {"error_location": 0.30940479040145874, "repair_targets": [0.1590120643377304, 0.11942075192928314, 0.4274057149887085], "repair_candidates": [0.1756889373064041, 0.1590120643377304, 0.021007340401411057, 0.020490270107984543, 0.05484107881784439, 0.11942075192928314, 0.014364580623805523, 0.4274057149887085, 0.001486502238549292, 0.00030470354249700904, 0.0037312828935682774, 0.0009045434417203069, 0.0013421548064798117], "target_probs": 0.7058385610580444}}


{"result": {"time": "2021-02-21 05:40:38.696157", "n_pass": [434, 192, 35], "n_token": 41, "loss": [1.432631015777588, 0.49710339307785034], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["a", ")", "#NEWLINE#", "sleep_sort", ".", "result", "[", "]", "#NEWLINE#", "def add1(", "x", ")", ":", "mx", "a", "0", "#NEWLINE#", "for", "v", "in", "a", ":", "(", "mx", "v", ":", "#INDENT#", "mx", "=", "v", "#UNINDENT#", "Timer", "(", "v", ",", "add1", ",", "v", "(", "add1", "."]}}
{"position": {"error_location": 35, "repair_targets": [13, 23, 27], "repair_candidates": [0, 14, 20, 35, 39, 18, 24, 29, 33, 37, 13, 23, 27]}}
{"prediction": {"error_location": 0.2386801391839981, "repair_targets": [0.10797068476676941, 0.10397270321846008, 0.39634671807289124], "repair_candidates": [0.2357940971851349, 0.10797068476676941, 0.021416550502181053, 0.013846796937286854, 0.10843953490257263, 0.10397270321846008, 0.005383261013776064, 0.39634671807289124, 0.0014306100783869624, 0.0004404234350658953, 0.002362085273489356, 0.0014011384919285774, 0.0011953911744058132], "target_probs": 0.6082900762557983}}




Minimal simplified tokens:

['a', ')', '#NEWLINE#', 'sleep_sort', '.', 'result', '[', ']', '#NEWLINE#', 'def add1(', 'x', ')', ':', 'mx', 'a', '0', '#NEWLINE#', 'for', 'v', 'in', 'a', ':', '(', 'mx', 'v', ':', '#INDENT#', 'mx', '=', 'v', '#UNINDENT#', 'Timer', '(', 'v', ',', 'add1', ',', 'v', '(', 'add1', '.']
