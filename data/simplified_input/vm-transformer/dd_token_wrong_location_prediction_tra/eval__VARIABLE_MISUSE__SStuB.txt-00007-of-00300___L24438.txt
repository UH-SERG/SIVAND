
Original sample:

{"has_bug": true, "bug_kind": 1, "bug_kind_name": "VARIABLE_MISUSE", "source_tokens": ["#NEWLINE#", "def test_modularity_weight(", "self", ")", ":", "#NEWLINE#", "#INDENT#", "'Modularity matrix with weights'", "#NEWLINE#", "B", "=", "numpy", ".", "matrix", "(", "[", "[", "(", "-", "1.125", ")", ",", "0.25", ",", "0.25", ",", "0.625", ",", "0.0", "]", ",", "[", "0.25", ",", "(", "-", "0.5", ")", ",", "0.5", ",", "(", "-", "0.25", ")", ",", "0.0", "]", ",", "[", "0.25", ",", "0.5", ",", "(", "-", "0.5", ")", ",", "(", "-", "0.25", ")", ",", "0.0", "]", ",", "[", "0.625", ",", "(", "-", "0.25", ")", ",", "(", "-", "0.25", ")", ",", "(", "-", "0.125", ")", ",", "0.0", "]", ",", "[", "0.0", ",", "0.0", ",", "0.0", ",", "0.0", ",", "0.0", "]", "]", ")", "#NEWLINE#", "G_weighted", "=", "self", ".", "G", ".", "copy", "(", ")", "#NEWLINE#", "for", "(", "n1", ",", "n2", ")", "in", "G_weighted", ".", "edges", "(", ")", ":", "#NEWLINE#", "#INDENT#", "G_weighted", ".", "edge", "[", "n1", "]", "[", "n2", "]", "[", "'weight'", "]", "=", "0.5", "#NEWLINE#", "#UNINDENT#", "assert_equal", "(", "nx", ".", "modularity_matrix", "(", "G_weighted", ")", ",", "n1", ")", "#NEWLINE#", "assert_equal", "(", "nx", ".", "modularity_matrix", "(", "G_weighted", ",", "weight", "=", "'weight'", ")", ",", "(", "0.5", "*", "B", ")", ")"], "error_location": [152], "repair_targets": [9, 171], "repair_candidates": [102, 119, 127, 149, 161, 114, 131, 152, 2, 104, 116, 134, 9, 171], "provenances": [{"datasetProvenance": {"datasetName": "ETHPy150Open", "filepath": "networkx/networkx/networkx/linalg/tests/test_modularity.py", "license": "bsd-3-clause", "note": "license: manual_eval"}}], "txt_file": "eval__VARIABLE_MISUSE__SStuB.txt-00007-of-00300", "js_count": 24438, "results": {"model": "transformer", "prob": {"loc": [[0.2734610438346863, 1.3519432968678302e-06, 2.398120955149352e-07, 2.9374868759646233e-08, 4.112416007728825e-08, 4.16187617702235e-08, 3.021935768288131e-08, 4.5043545782164074e-08, 2.3953676375754185e-08, 9.912791028909851e-06, 5.711092398996698e-08, 4.860661917405196e-08, 2.3283087458025875e-08, 2.5370582079631276e-08, 1.4040051610209048e-07, 1.54743375446742e-07, 2.6616504555931897e-08, 1.753224836420486e-07, 6.761979420844e-08, 1.5624110005774128e-07, 3.104321066871307e-08, 1.4938652981300038e-08, 1.3560436684656452e-07, 1.0147966023055233e-08, 1.4151815719287697e-07, 9.733085448715428e-09, 7.306312710397833e-08, 1.4026420025459174e-08, 2.735298565426092e-08, 2.3302723306528605e-08, 1.949921646371422e-08, 5.961918958519163e-08, 4.81535607832484e-07, 1.6764037269467735e-08, 1.4430082728722482e-07, 1.2055427589530154e-07, 1.2478629969336907e-06, 6.69224391458556e-08, 4.185327640016112e-08, 6.803315955039579e-07, 3.552813865326243e-08, 1.5217733562167268e-07, 2.3572113150294172e-07, 2.9286813969520153e-06, 9.2727951539473e-08, 5.977985750860171e-08, 1.9364722447789973e-07, 9.72924922848506e-08, 7.591033579501527e-08, 2.0691200575129187e-07, 1.3212579688115511e-06, 6.080330905433584e-08, 5.534823799280275e-07, 5.1137007517354505e-08, 4.3626596379908733e-07, 1.6300916172440338e-07, 9.624886843084823e-07, 7.430590898138689e-08, 2.7854461848164647e-08, 5.31424689143023e-07, 1.862631933136072e-07, 2.3577656520501478e-06, 9.088916641530886e-08, 6.965618126741902e-08, 2.438670492210804e-07, 1.2515712910499133e-07, 9.892023911106662e-08, 3.38123470555729e-07, 1.8745545276033226e-06, 6.565809229641673e-08, 2.979890894039272e-07, 1.9132619399897521e-07, 8.06143998488551e-06, 5.0625086345235104e-08, 5.092190491495785e-08, 5.162685283721657e-07, 2.857971423964045e-07, 4.324922883824911e-06, 1.595738865489693e-07, 7.477095209651452e-08, 2.0251338810339803e-06, 3.76748175767716e-07, 3.41622069299774e-07, 1.6534107771803974e-07, 9.567656178433026e-08, 2.759288690867834e-07, 1.440379406858483e-07, 1.1424479140487165e-07, 4.6438762524303456e-07, 7.46456692013453e-07, 1.728943175294262e-07, 8.029225568861875e-07, 2.1404031258498435e-07, 8.198465479836159e-07, 2.104724927676216e-07, 6.727999561917386e-07, 1.8344189811614342e-07, 4.6315096824400825e-07, 1.5940871378461452e-07, 1.5186591895144375e-07, 2.7634547450361424e-07, 1.0199237721053578e-07, 8.200060506169393e-07, 1.7172268940157664e-07, 9.390864761371631e-06, 1.3768492124199838e-07, 2.811494823617977e-07, 1.574343855281768e-07, 1.2034178098474513e-07, 2.571985305621638e-06, 5.842115911036672e-07, 1.7835398580245965e-07, 1.9221540981106955e-07, 1.1452797110678148e-07, 8.028618140087929e-06, 1.4114560542566323e-07, 0.0001258479169337079, 4.025804400953348e-08, 1.2444967012470443e-07, 5.4992360674077645e-05, 1.7945104957561853e-07, 1.1343899330995555e-07, 2.868496267183218e-06, 1.70859834724979e-07, 4.097151418136491e-07, 2.222027575271568e-07, 1.301093135452902e-07, 0.014315225183963776, 2.2840427504888794e-07, 1.8604056606363883e-07, 5.694268452316464e-07, 0.3193766474723816, 1.4434816364428116e-07, 4.0940267354017124e-07, 0.005970755126327276, 1.0441345210665531e-07, 5.071769919595681e-07, 2.63110086962115e-06, 7.301882476440369e-08, 4.1565789388187113e-07, 1.4937165360606741e-05, 2.1730774335537717e-07, 9.462829808626338e-08, 4.596622105168535e-08, 1.4943475434847642e-07, 9.456154259623872e-08, 1.3392819653290644e-07, 3.1262885613614344e-08, 4.191441291823139e-07, 0.06132761016488075, 1.6035036765060795e-07, 1.6553829595977732e-07, 0.27882665395736694, 2.7273293312646274e-07, 1.0692787810739901e-07, 3.5156244138079273e-08, 7.878053764898141e-08, 6.049017997611372e-08, 1.270163352273812e-07, 2.5653685398197013e-08, 7.50733647691959e-07, 0.025906391441822052, 9.735132522337153e-08, 1.826549578254344e-07, 2.5711895546010055e-07, 9.670444342191331e-06, 1.6399150126744644e-07, 8.72731504841795e-08, 1.3355352166399825e-06, 0.0002350951253902167, 1.17797362975125e-07, 0.020284611731767654, 1.4746241561169882e-07, 1.0866231292538941e-07]], "pointer": [[0.0, 0.0, 0.003567826934158802, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.5151536464691162, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.01427871361374855, 0.0, 0.0037547550164163113, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.03959415853023529, 0.0, 0.35499170422554016, 0.0, 0.0, 0.0001532038440927863, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0005549483466893435, 0.0, 0.0, 0.0, 0.0005876730429008603, 0.0, 0.0, 0.025967586785554886, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0032168834004551172, 0.0, 0.0, 0.0005447923322208226, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.00012683591921813786, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.03750734403729439, 0.0, 0.0]], "target": [0.5526610016822815]}, "loss": [1.2771649360656738, 0.5930104851722717], "acc": [0.0, 0.0, 1.0, 0.0]}, "wrong_error_location": [131]}


Trace of simplified code(s):

{"result": {"time": "2021-02-21 06:25:17.673927", "n_pass": [1, 1, 1], "n_token": 174, "loss": [1.1413841247558594, 0.5930104851722717], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def test_modularity_weight(", "self", ")", ":", "#NEWLINE#", "#INDENT#", "'Modularity matrix with weights'", "#NEWLINE#", "B", "=", "numpy", ".", "matrix", "(", "[", "[", "(", "-", "1.125", ")", ",", "0.25", ",", "0.25", ",", "0.625", ",", "0.0", "]", ",", "[", "0.25", ",", "(", "-", "0.5", ")", ",", "0.5", ",", "(", "-", "0.25", ")", ",", "0.0", "]", ",", "[", "0.25", ",", "0.5", ",", "(", "-", "0.5", ")", ",", "(", "-", "0.25", ")", ",", "0.0", "]", ",", "[", "0.625", ",", "(", "-", "0.25", ")", ",", "(", "-", "0.25", ")", ",", "(", "-", "0.125", ")", ",", "0.0", "]", ",", "[", "0.0", ",", "0.0", ",", "0.0", ",", "0.0", ",", "0.0", "]", "]", ")", "#NEWLINE#", "G_weighted", "=", "self", ".", "G", ".", "copy", "(", ")", "#NEWLINE#", "for", "(", "n1", ",", "n2", ")", "in", "G_weighted", ".", "edges", "(", ")", ":", "#NEWLINE#", "#INDENT#", "G_weighted", ".", "edge", "[", "n1", "]", "[", "n2", "]", "[", "'weight'", "]", "=", "0.5", "#NEWLINE#", "#UNINDENT#", "assert_equal", "(", "nx", ".", "modularity_matrix", "(", "G_weighted", ")", ",", "n1", ")", "#NEWLINE#", "assert_equal", "(", "nx", ".", "modularity_matrix", "(", "G_weighted", ",", "weight", "=", "'weight'", ")", ",", "(", "0.5", "*", "B", ")", ")"]}}
{"position": {"error_location": 131, "repair_targets": [9, 171], "repair_candidates": [102, 119, 127, 149, 161, 114, 131, 152, 2, 104, 116, 134, 9, 171]}}
{"prediction": {"error_location": 0.3193766474723816, "repair_targets": [0.5151536464691162, 0.03750734403729439], "repair_candidates": [0.003567826934158802, 0.5151536464691162, 0.01427871361374855, 0.0037547550164163113, 0.03959415853023529, 0.35499170422554016, 0.0001532038440927863, 0.0005549483466893435, 0.0005876730429008603, 0.025967586785554886, 0.0032168834004551172, 0.0005447923322208226, 0.00012683591921813786, 0.03750734403729439], "target_probs": 0.5526610016822815}}


{"result": {"time": "2021-02-21 06:25:19.890309", "n_pass": [118, 34, 2], "n_token": 168, "loss": [1.0252572298049927, 0.6617451310157776], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def test_modularity_weight(", "self", ")", ":", "#NEWLINE#", "#INDENT#", "'Modularity matrix with weights'", "#NEWLINE#", "B", "=", "numpy", ".", "matrix", "(", "[", "[", "(", "-", "1.125", ")", ",", "0.25", ",", "0.25", ",", "0.625", ",", "0.0", "]", ",", "[", "0.25", ",", "(", "-", "0.5", ")", ",", "0.5", ",", "(", "-", "0.25", ")", ",", "0.0", "]", ",", "[", "0.25", ",", "0.5", ",", "(", "-", "0.5", ")", ",", "(", "-", "0.25", ")", ",", "0.0", "]", ",", "[", "0.625", ",", "(", "-", "0.25", ")", ",", "(", "-", "0.25", ")", ",", "(", "-", "0.125", ")", ",", "0.0", "]", ",", "[", "0.0", ",", "0.0", ",", "0.0", ",", "0.0", ",", "0.0", "]", "]", ")", "#NEWLINE#", "G_weighted", "=", "self", ".", "G", ".", "copy", "(", ")", "#NEWLINE#", "for", "(", "n1", ",", "n2", ")", "in", "G_weighted", ".", "edges", "(", ")", ":", "#NEWLINE#", "#INDENT#", "G_weighted", ".", "edge", "[", "n1", "]", "[", "n2", "]", "[", "'weight'", "(", "nx", ".", "modularity_matrix", "(", "G_weighted", ")", ",", "n1", ")", "#NEWLINE#", "assert_equal", "(", "nx", ".", "modularity_matrix", "(", "G_weighted", ",", "weight", "=", "'weight'", ")", ",", "(", "0.5", "*", "B", ")", ")"]}}
{"position": {"error_location": 131, "repair_targets": [9, 165], "repair_candidates": [102, 119, 127, 143, 155, 114, 131, 146, 2, 104, 116, 134, 9, 165]}}
{"prediction": {"error_location": 0.35870417952537537, "repair_targets": [0.48840591311454773, 0.027544217184185982], "repair_candidates": [0.002655924530699849, 0.48840591311454773, 0.011448285542428493, 0.0026355599984526634, 0.04099544137716293, 0.38977155089378357, 0.00012677190534304827, 0.0003336747467983514, 0.0003339364193379879, 0.03479951620101929, 0.0005048814346082509, 0.00036388318403624, 8.040733519010246e-05, 0.027544217184185982], "target_probs": 0.5159501433372498}}


{"result": {"time": "2021-02-21 06:25:19.957881", "n_pass": [122, 35, 3], "n_token": 162, "loss": [1.066557765007019, 0.596274197101593], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def test_modularity_weight(", "self", ")", ":", "#NEWLINE#", "#INDENT#", "'Modularity matrix with weights'", "#NEWLINE#", "B", "=", "numpy", ".", "matrix", "(", "[", "[", "(", "-", "1.125", ")", ",", "0.25", ",", "0.25", ",", "0.625", ",", "0.0", "]", ",", "[", "0.25", ",", "(", "-", "0.5", ")", ",", "0.5", ",", "(", "-", "0.25", ")", ",", "0.0", "]", ",", "[", "0.25", ",", "0.5", ",", "(", "-", "0.5", ")", ",", "(", "-", "0.25", ")", ",", "0.0", "]", ",", "[", "0.625", ",", "(", "-", "0.25", ")", ",", "(", "-", "0.25", ")", ",", "(", "-", "0.125", ")", ",", "0.0", "]", ",", "[", "0.0", ",", "0.0", ",", "0.0", ",", "0.0", ",", "0.0", "]", "]", ")", "#NEWLINE#", "G_weighted", "=", "self", ".", "G", ".", "copy", "(", ")", "#NEWLINE#", "for", "(", "n1", ",", "n2", ")", "in", "G_weighted", ".", "edges", "(", ")", ":", "#NEWLINE#", "#INDENT#", "G_weighted", ".", "edge", "[", "n1", "]", "[", "n2", "]", "[", "'weight'", "(", "nx", ".", "modularity_matrix", "(", "G_weighted", ")", ",", "n1", ")", "#NEWLINE#", "assert_equal", "(", "nx", ".", "modularity_matrix", "(", "G_weighted", "(", "0.5", "*", "B", ")", ")"]}}
{"position": {"error_location": 131, "repair_targets": [9, 159], "repair_candidates": [102, 119, 127, 143, 155, 114, 131, 146, 2, 104, 116, 134, 9, 159]}}
{"prediction": {"error_location": 0.3441912829875946, "repair_targets": [0.5465003252029419, 0.0043599167838692665], "repair_candidates": [0.0014860857045277953, 0.5465003252029419, 0.00944389309734106, 0.0016758923884481192, 0.06304582208395004, 0.3541732728481293, 8.408701251028106e-05, 0.00034530358971096575, 0.0001977794454433024, 0.017671283334493637, 0.0001587811129866168, 0.00019276539387647063, 0.0006648709531873465, 0.0043599167838692665], "target_probs": 0.5508602261543274}}


{"result": {"time": "2021-02-21 06:25:20.025947", "n_pass": [126, 36, 4], "n_token": 157, "loss": [0.7122742533683777, 0.3154526352882385], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def test_modularity_weight(", "self", ")", ":", "#NEWLINE#", "#INDENT#", "'Modularity matrix with weights'", "#NEWLINE#", "B", "[", "[", "(", "-", "1.125", ")", ",", "0.25", ",", "0.25", ",", "0.625", ",", "0.0", "]", ",", "[", "0.25", ",", "(", "-", "0.5", ")", ",", "0.5", ",", "(", "-", "0.25", ")", ",", "0.0", "]", ",", "[", "0.25", ",", "0.5", ",", "(", "-", "0.5", ")", ",", "(", "-", "0.25", ")", ",", "0.0", "]", ",", "[", "0.625", ",", "(", "-", "0.25", ")", ",", "(", "-", "0.25", ")", ",", "(", "-", "0.125", ")", ",", "0.0", "]", ",", "[", "0.0", ",", "0.0", ",", "0.0", ",", "0.0", ",", "0.0", "]", "]", ")", "#NEWLINE#", "G_weighted", "=", "self", ".", "G", ".", "copy", "(", ")", "#NEWLINE#", "for", "(", "n1", ",", "n2", ")", "in", "G_weighted", ".", "edges", "(", ")", ":", "#NEWLINE#", "#INDENT#", "G_weighted", ".", "edge", "[", "n1", "]", "[", "n2", "]", "[", "'weight'", "(", "nx", ".", "modularity_matrix", "(", "G_weighted", ")", ",", "n1", ")", "#NEWLINE#", "assert_equal", "(", "nx", ".", "modularity_matrix", "(", "G_weighted", "(", "0.5", "*", "B", ")", ")"]}}
{"position": {"error_location": 126, "repair_targets": [9, 154], "repair_candidates": [97, 114, 122, 138, 150, 109, 126, 141, 2, 99, 111, 129, 9, 154]}}
{"prediction": {"error_location": 0.49052733182907104, "repair_targets": [0.7268732190132141, 0.002585416426882148], "repair_candidates": [0.0011269820388406515, 0.7268732190132141, 0.004488538019359112, 0.001435405807569623, 0.042342737317085266, 0.2103227972984314, 7.261068094521761e-05, 0.00025963978259824216, 0.0003121295594610274, 0.00899024959653616, 0.00042540597496554255, 0.00015825788432266563, 0.0006066893110983074, 0.002585416426882148], "target_probs": 0.7294586300849915}}


{"result": {"time": "2021-02-21 06:25:21.437956", "n_pass": [216, 57, 5], "n_token": 155, "loss": [0.725702166557312, 0.24001087248325348], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def test_modularity_weight(", "self", ")", ":", "#NEWLINE#", "#INDENT#", "'Modularity matrix with weights'", "#NEWLINE#", "B", "[", "[", "1.125", ")", ",", "0.25", ",", "0.25", ",", "0.625", ",", "0.0", "]", ",", "[", "0.25", ",", "(", "-", "0.5", ")", ",", "0.5", ",", "(", "-", "0.25", ")", ",", "0.0", "]", ",", "[", "0.25", ",", "0.5", ",", "(", "-", "0.5", ")", ",", "(", "-", "0.25", ")", ",", "0.0", "]", ",", "[", "0.625", ",", "(", "-", "0.25", ")", ",", "(", "-", "0.25", ")", ",", "(", "-", "0.125", ")", ",", "0.0", "]", ",", "[", "0.0", ",", "0.0", ",", "0.0", ",", "0.0", ",", "0.0", "]", "]", ")", "#NEWLINE#", "G_weighted", "=", "self", ".", "G", ".", "copy", "(", ")", "#NEWLINE#", "for", "(", "n1", ",", "n2", ")", "in", "G_weighted", ".", "edges", "(", ")", ":", "#NEWLINE#", "#INDENT#", "G_weighted", ".", "edge", "[", "n1", "]", "[", "n2", "]", "[", "'weight'", "(", "nx", ".", "modularity_matrix", "(", "G_weighted", ")", ",", "n1", ")", "#NEWLINE#", "assert_equal", "(", "nx", ".", "modularity_matrix", "(", "G_weighted", "(", "0.5", "*", "B", ")", ")"]}}
{"position": {"error_location": 124, "repair_targets": [9, 152], "repair_candidates": [95, 112, 120, 136, 148, 107, 124, 139, 2, 97, 109, 127, 9, 152]}}
{"prediction": {"error_location": 0.4839846193790436, "repair_targets": [0.7842636108398438, 0.0023556745145469904], "repair_candidates": [0.0012300278758630157, 0.7842636108398438, 0.004415323492139578, 0.0015965633792802691, 0.034125812351703644, 0.16435663402080536, 0.00011791763245128095, 0.00022533185256179422, 0.00029228260973468423, 0.006029884796589613, 0.00020081376715097576, 0.00011775120219681412, 0.0006723381811752915, 0.0023556745145469904], "target_probs": 0.7866193056106567}}


{"result": {"time": "2021-02-21 06:25:23.862037", "n_pass": [255, 93, 6], "n_token": 152, "loss": [1.059866189956665, 0.6352466940879822], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def test_modularity_weight(", "self", ")", ":", "#NEWLINE#", "#INDENT#", "'Modularity matrix with weights'", "#NEWLINE#", "B", "[", "[", "1.125", ")", ",", "0.25", ",", "0.25", ",", "0.625", ",", "0.0", "]", ",", "[", "0.25", ",", "(", "-", "0.5", ")", ",", "0.5", ",", "(", "-", "0.25", ")", ",", "0.0", "]", ",", "[", "0.25", ",", "0.5", ",", "(", "-", "0.5", ")", ",", "(", "-", "0.25", ")", ",", "0.0", "]", ",", "[", "0.625", ",", "(", "-", "0.25", ")", ",", "(", "-", "0.25", ")", ",", "(", "-", "0.125", ")", ",", "0.0", "]", ",", "[", "0.0", ",", "0.0", ",", "0.0", ",", "0.0", ",", "0.0", "]", "]", ")", "#NEWLINE#", "G_weighted", "=", "self", ".", "G", ".", "copy", "(", ")", "#NEWLINE#", "for", "(", "n1", ",", "n2", ")", "in", "G_weighted", ".", "edges", "(", "#INDENT#", "G_weighted", ".", "edge", "[", "n1", "]", "[", "n2", "]", "[", "'weight'", "(", "nx", ".", "modularity_matrix", "(", "G_weighted", ")", ",", "n1", ")", "#NEWLINE#", "assert_equal", "(", "nx", ".", "modularity_matrix", "(", "G_weighted", "(", "0.5", "*", "B", ")", ")"]}}
{"position": {"error_location": 121, "repair_targets": [9, 149], "repair_candidates": [95, 112, 117, 133, 145, 107, 121, 136, 2, 97, 109, 124, 9, 149]}}
{"prediction": {"error_location": 0.3465021848678589, "repair_targets": [0.5260255336761475, 0.00377921131439507], "repair_candidates": [0.003098969114944339, 0.5260255336761475, 0.00799419917166233, 0.004242210183292627, 0.05928943678736687, 0.38612067699432373, 0.00033757882192730904, 0.00024833291536197066, 0.00040790243656374514, 0.00503210024908185, 0.000621914688963443, 9.672367013990879e-05, 0.0027052138466387987, 0.00377921131439507], "target_probs": 0.5298047661781311}}


{"result": {"time": "2021-02-21 06:25:23.998065", "n_pass": [260, 95, 7], "n_token": 149, "loss": [0.6764043569564819, 0.5730260610580444], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def test_modularity_weight(", "self", ")", ":", "#NEWLINE#", "#INDENT#", "'Modularity matrix with weights'", "#NEWLINE#", "B", "[", "[", "1.125", ")", ",", "0.25", ",", "0.25", ",", "0.625", ",", "0.0", "]", ",", "[", "0.25", ",", "(", "-", "0.5", ")", ",", "0.5", ",", "(", "-", "0.25", ")", ",", "0.0", "]", ",", "[", "0.25", ",", "0.5", ",", "(", "-", "0.5", ")", ",", "(", "-", "0.25", ")", ",", "0.0", "]", ",", "[", "0.625", ",", "(", "-", "0.25", ")", ",", "(", "-", "0.25", ")", ",", "(", "-", "0.125", ")", ",", "0.0", "]", ",", "[", "0.0", ",", "0.0", ",", "0.0", ",", "0.0", ",", "0.0", "]", "]", ")", "#NEWLINE#", "G_weighted", "=", "self", ".", "G", ".", "copy", "(", ")", "#NEWLINE#", "for", "(", "n1", ",", "n2", ")", "in", "G_weighted", ".", "edges", "(", "#INDENT#", "G_weighted", ".", "edge", "[", "n1", "]", "[", "n2", "]", "[", "'weight'", "modularity_matrix", "(", "G_weighted", ")", ",", "n1", ")", "#NEWLINE#", "assert_equal", "(", "nx", ".", "modularity_matrix", "(", "G_weighted", "(", "0.5", "*", "B", ")", ")"]}}
{"position": {"error_location": 121, "repair_targets": [9, 146], "repair_candidates": [95, 112, 117, 130, 142, 107, 121, 133, 2, 97, 109, 124, 9, 146]}}
{"prediction": {"error_location": 0.5084419250488281, "repair_targets": [0.5611412525177002, 0.0026754457503557205], "repair_candidates": [0.002853739308193326, 0.5611412525177002, 0.007863182574510574, 0.004726574290543795, 0.039072539657354355, 0.3772076964378357, 0.0006058050785213709, 9.492137178312987e-05, 0.00013242200657259673, 0.0031995694153010845, 0.0002235767024103552, 1.342581344943028e-05, 0.00018980282766278833, 0.0026754457503557205], "target_probs": 0.5638167262077332}}


{"result": {"time": "2021-02-21 06:25:24.066863", "n_pass": [263, 96, 8], "n_token": 146, "loss": [0.7791374325752258, 0.6111379861831665], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def test_modularity_weight(", "self", ")", ":", "#NEWLINE#", "#INDENT#", "'Modularity matrix with weights'", "#NEWLINE#", "B", "[", "[", "1.125", ")", ",", "0.25", ",", "0.25", ",", "0.625", ",", "0.0", "]", ",", "[", "0.25", ",", "(", "-", "0.5", ")", ",", "0.5", ",", "(", "-", "0.25", ")", ",", "0.0", "]", ",", "[", "0.25", ",", "0.5", ",", "(", "-", "0.5", ")", ",", "(", "-", "0.25", ")", ",", "0.0", "]", ",", "[", "0.625", ",", "(", "-", "0.25", ")", ",", "(", "-", "0.25", ")", ",", "(", "-", "0.125", ")", ",", "0.0", "]", ",", "[", "0.0", ",", "0.0", ",", "0.0", ",", "0.0", ",", "0.0", "]", "]", ")", "#NEWLINE#", "G_weighted", "=", "self", ".", "G", ".", "copy", "(", ")", "#NEWLINE#", "for", "(", "n1", ",", "n2", ")", "in", "G_weighted", ".", "edges", "(", "#INDENT#", "G_weighted", ".", "edge", "[", "n1", "]", "[", "n2", "]", "[", "'weight'", "modularity_matrix", "(", "G_weighted", ")", ",", "n1", "(", "nx", ".", "modularity_matrix", "(", "G_weighted", "(", "0.5", "*", "B", ")", ")"]}}
{"position": {"error_location": 121, "repair_targets": [9, 143], "repair_candidates": [95, 112, 117, 130, 139, 107, 121, 133, 2, 97, 109, 124, 9, 143]}}
{"prediction": {"error_location": 0.4588015377521515, "repair_targets": [0.541743278503418, 0.00098963244818151], "repair_candidates": [0.004753274377435446, 0.541743278503418, 0.004497441463172436, 0.008513228967785835, 0.06124645099043846, 0.3740096688270569, 0.0002783781965263188, 3.160605047014542e-05, 0.000436543021351099, 0.002952153328806162, 0.00015093265392351896, 8.840421651257202e-05, 0.0003089783131144941, 0.00098963244818151], "target_probs": 0.5427328944206238}}


{"result": {"time": "2021-02-21 06:25:26.967438", "n_pass": [428, 139, 9], "n_token": 144, "loss": [0.32193058729171753, 0.4090484082698822], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def test_modularity_weight(", "self", ")", ":", "#NEWLINE#", "#INDENT#", "'Modularity matrix with weights'", "#NEWLINE#", "B", "[", "[", "1.125", ")", ",", "0.25", ",", "0.25", ",", "0.625", ",", "0.0", "]", ",", "[", "0.25", ",", "(", "-", "0.5", ")", ",", "0.5", ",", "(", "-", "0.25", ")", ",", "0.0", "]", ",", "[", "0.25", ",", "0.5", ",", "(", "-", "0.5", ")", ",", "(", "-", "0.25", ")", ",", "0.0", "]", ",", "[", "0.625", ",", "(", "-", "0.25", ")", ",", "(", "-", "0.25", ")", ",", "(", "-", "0.125", ")", ",", "0.0", "]", ",", "[", "0.0", ",", "0.0", ",", "0.0", ",", "0.0", ",", "0.0", "]", "]", ")", "#NEWLINE#", "G_weighted", "=", "self", ".", "G", ".", "copy", "(", ")", "#NEWLINE#", "for", "(", "n1", ",", "n2", ")", "in", "G_weighted", ".", "edges", "(", "#INDENT#", "G_weighted", ".", "edge", "[", "n1", "]", "[", "n2", "]", "[", "'weight'", "modularity_matrix", "(", "G_weighted", ")", ",", "n1", ".", "modularity_matrix", "(", "G_weighted", "(", "0.5", "*", "B", ")", ")"]}}
{"position": {"error_location": 121, "repair_targets": [9, 141], "repair_candidates": [95, 112, 117, 130, 137, 107, 121, 133, 2, 97, 109, 124, 9, 141]}}
{"prediction": {"error_location": 0.7247485518455505, "repair_targets": [0.661869466304779, 0.0024125888012349606], "repair_candidates": [0.003966687712818384, 0.661869466304779, 0.0036609829403460026, 0.006414282135665417, 0.02315923571586609, 0.2936849594116211, 0.0001502607628935948, 1.7185957403853536e-05, 0.00017656821000855416, 0.0038731445092707872, 0.00026757491286844015, 0.00011954017099924386, 0.0002274877915624529, 0.0024125888012349606], "target_probs": 0.6642820835113525}}


{"result": {"time": "2021-02-21 06:25:27.173146", "n_pass": [433, 142, 10], "n_token": 142, "loss": [0.15941686928272247, 0.5183175802230835], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def test_modularity_weight(", "self", ")", ":", "#NEWLINE#", "#INDENT#", "'Modularity matrix with weights'", "#NEWLINE#", "B", "[", "[", "1.125", ")", ",", "0.25", ",", "0.25", ",", "0.625", ",", "0.0", "]", ",", "[", "0.25", ",", "(", "-", "0.5", ")", ",", "0.5", ",", "(", "-", "0.25", ")", ",", "0.0", "]", ",", "[", "0.25", ",", "0.5", ",", "(", "-", "0.5", ")", ",", "(", "-", "0.25", ")", ",", "0.0", "]", ",", "[", "0.625", ",", "(", "-", "0.25", ")", ",", "(", "-", "0.25", ")", ",", "(", "-", "0.125", ")", ",", "0.0", "]", ",", "[", "0.0", ",", "0.0", ",", "0.0", ",", "0.0", ",", "0.0", "]", "]", ")", "#NEWLINE#", "G_weighted", "=", "self", ".", "G", ".", "copy", "(", ")", "#NEWLINE#", "for", "(", "n1", ",", "n2", ")", "in", "G_weighted", ".", "edges", "(", "#INDENT#", "G_weighted", ".", "edge", "[", "n1", "]", "[", "n2", "]", "[", "'weight'", "modularity_matrix", "(", "G_weighted", ")", ",", "n1", ".", "modularity_matrix", "(", "G_weighted", "(", "0.5", "*", "B"]}}
{"position": {"error_location": 121, "repair_targets": [9, 141], "repair_candidates": [95, 112, 117, 130, 137, 107, 121, 133, 2, 97, 109, 124, 9, 141]}}
{"prediction": {"error_location": 0.8526408672332764, "repair_targets": [0.5920748114585876, 0.003446802729740739], "repair_candidates": [0.00189859583042562, 0.5920748114585876, 0.0035873805172741413, 0.002930633258074522, 0.01977858692407608, 0.35762208700180054, 8.921664266381413e-05, 2.9088832889101468e-05, 0.000293580669676885, 0.017547931522130966, 0.0002936225209850818, 0.00011483218258945271, 0.0002929332258645445, 0.003446802729740739], "target_probs": 0.5955216288566589}}


{"result": {"time": "2021-02-21 06:25:27.445912", "n_pass": [438, 146, 11], "n_token": 141, "loss": [0.1439504474401474, 0.6633597612380981], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def test_modularity_weight(", "self", ")", "#NEWLINE#", "#INDENT#", "'Modularity matrix with weights'", "#NEWLINE#", "B", "[", "[", "1.125", ")", ",", "0.25", ",", "0.25", ",", "0.625", ",", "0.0", "]", ",", "[", "0.25", ",", "(", "-", "0.5", ")", ",", "0.5", ",", "(", "-", "0.25", ")", ",", "0.0", "]", ",", "[", "0.25", ",", "0.5", ",", "(", "-", "0.5", ")", ",", "(", "-", "0.25", ")", ",", "0.0", "]", ",", "[", "0.625", ",", "(", "-", "0.25", ")", ",", "(", "-", "0.25", ")", ",", "(", "-", "0.125", ")", ",", "0.0", "]", ",", "[", "0.0", ",", "0.0", ",", "0.0", ",", "0.0", ",", "0.0", "]", "]", ")", "#NEWLINE#", "G_weighted", "=", "self", ".", "G", ".", "copy", "(", ")", "#NEWLINE#", "for", "(", "n1", ",", "n2", ")", "in", "G_weighted", ".", "edges", "(", "#INDENT#", "G_weighted", ".", "edge", "[", "n1", "]", "[", "n2", "]", "[", "'weight'", "modularity_matrix", "(", "G_weighted", ")", ",", "n1", ".", "modularity_matrix", "(", "G_weighted", "(", "0.5", "*", "B"]}}
{"position": {"error_location": 120, "repair_targets": [8, 140], "repair_candidates": [94, 111, 116, 129, 136, 106, 120, 132, 2, 96, 108, 123, 8, 140]}}
{"prediction": {"error_location": 0.8659305572509766, "repair_targets": [0.5117325186729431, 0.0033852639608085155], "repair_candidates": [0.0013210363686084747, 0.5117325186729431, 0.003227885579690337, 0.002532843966037035, 0.017004605382680893, 0.4292941093444824, 6.698263314319775e-05, 2.0535491785267368e-05, 0.00025856855791062117, 0.03071562573313713, 0.00020483622211031616, 7.753385580144823e-05, 0.0001576896320329979, 0.0033852639608085155], "target_probs": 0.5151177644729614}}


{"result": {"time": "2021-02-21 06:25:33.199500", "n_pass": [532, 231, 12], "n_token": 139, "loss": [0.1326148808002472, 0.6691150665283203], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def test_modularity_weight(", "self", ")", "#NEWLINE#", "#INDENT#", "'Modularity matrix with weights'", "#NEWLINE#", "B", "[", "[", "1.125", ")", ",", "0.25", ",", "0.25", ",", "0.625", ",", "0.0", "]", ",", "[", "0.25", ",", "(", "-", "0.5", ")", ",", "0.5", ",", "(", "-", "0.25", ")", ",", "0.0", "]", ",", "[", "0.25", ",", "0.5", ",", "(", "-", "0.5", ")", ",", "(", "-", "0.25", ")", ",", "0.0", "]", ",", "[", "0.625", ",", "(", "-", "0.25", ")", ",", "(", "-", "0.25", ")", ",", "(", "-", "0.125", ")", ",", "0.0", "]", ",", "[", "0.0", ",", "0.0", ",", "0.0", ",", "0.0", ",", "0.0", "]", "]", ")", "#NEWLINE#", "G_weighted", "=", "self", ".", "G", ".", "copy", "(", ")", "#NEWLINE#", "for", "(", "n1", ",", "n2", ")", "in", "G_weighted", ".", "edges", "(", "#INDENT#", "G_weighted", ".", "edge", "[", "n1", "]", "[", "n2", "]", "modularity_matrix", "(", "G_weighted", ")", ",", "n1", ".", "modularity_matrix", "(", "G_weighted", "(", "0.5", "*", "B"]}}
{"position": {"error_location": 120, "repair_targets": [8, 138], "repair_candidates": [94, 111, 116, 127, 134, 106, 120, 130, 2, 96, 108, 123, 8, 138]}}
{"prediction": {"error_location": 0.8758023381233215, "repair_targets": [0.5059951543807983, 0.006166443228721619], "repair_candidates": [0.0012460625730454922, 0.5059951543807983, 0.0032615552190691233, 0.002327441005036235, 0.018424484878778458, 0.4375683665275574, 5.3323634347179905e-05, 2.7728279746952467e-05, 0.0003181505890097469, 0.024201152846217155, 0.00015613327559549361, 8.197374700102955e-05, 0.0001720172440400347, 0.006166443228721619], "target_probs": 0.5121616125106812}}


{"result": {"time": "2021-02-21 06:25:33.268897", "n_pass": [533, 232, 13], "n_token": 137, "loss": [0.14587213099002838, 0.6885555386543274], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def test_modularity_weight(", "self", ")", "#NEWLINE#", "#INDENT#", "'Modularity matrix with weights'", "#NEWLINE#", "B", "[", "[", "1.125", ")", ",", "0.25", ",", "0.25", ",", "0.625", ",", "0.0", "]", ",", "[", "0.25", ",", "(", "-", "0.5", ")", ",", "0.5", ",", "(", "-", "0.25", ")", ",", "0.0", "]", ",", "[", "0.25", ",", "0.5", ",", "(", "-", "0.5", ")", ",", "(", "-", "0.25", ")", ",", "0.0", "]", ",", "[", "0.625", ",", "(", "-", "0.25", ")", ",", "(", "-", "0.25", ")", ",", "(", "-", "0.125", ")", ",", "0.0", "]", ",", "[", "0.0", ",", "0.0", ",", "0.0", ",", "0.0", ",", "0.0", "]", "]", ")", "#NEWLINE#", "G_weighted", "=", "self", ".", "G", ".", "copy", "(", ")", "#NEWLINE#", "for", "(", "n1", ",", "n2", ")", "in", "G_weighted", ".", "edges", "(", "#INDENT#", "G_weighted", ".", "edge", "[", "n1", "]", "[", "n2", "]", "G_weighted", ")", ",", "n1", ".", "modularity_matrix", "(", "G_weighted", "(", "0.5", "*", "B"]}}
{"position": {"error_location": 120, "repair_targets": [8, 136], "repair_candidates": [94, 111, 116, 125, 132, 106, 120, 128, 2, 96, 108, 123, 8, 136]}}
{"prediction": {"error_location": 0.8642681837081909, "repair_targets": [0.5005772113800049, 0.0017238869331777096], "repair_candidates": [0.0007417828310281038, 0.5005772113800049, 0.002267531817778945, 0.0010757625568658113, 0.012227785773575306, 0.46521908044815063, 1.5868206901359372e-05, 1.2530622370832134e-05, 0.00012222486839164048, 0.015895111486315727, 3.745168578461744e-05, 6.804443728469778e-06, 7.693173392908648e-05, 0.0017238869331777096], "target_probs": 0.5023010969161987}}


{"result": {"time": "2021-02-21 06:25:33.339297", "n_pass": [536, 233, 14], "n_token": 135, "loss": [0.25626370310783386, 0.6799682974815369], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def test_modularity_weight(", "self", ")", "#NEWLINE#", "#INDENT#", "'Modularity matrix with weights'", "#NEWLINE#", "B", "[", "[", "1.125", ")", ",", "0.25", ",", "0.25", ",", "0.625", ",", "0.0", "]", ",", "[", "0.25", ",", "(", "-", "0.5", ")", ",", "0.5", ",", "(", "-", "0.25", ")", ",", "0.0", "]", ",", "[", "0.25", ",", "0.5", ",", "(", "-", "0.5", ")", ",", "(", "-", "0.25", ")", ",", "0.0", "]", ",", "[", "0.625", ",", "(", "-", "0.25", ")", ",", "(", "-", "0.25", ")", ",", "(", "-", "0.125", ")", ",", "0.0", "]", ",", "[", "0.0", ",", "0.0", ",", "0.0", ",", "0.0", ",", "0.0", "]", "]", ")", "#NEWLINE#", "G_weighted", "=", "self", ".", "G", ".", "copy", "(", ")", "#NEWLINE#", "for", "(", "n1", ",", "n2", ")", "in", "G_weighted", ".", "edges", "(", "#INDENT#", "G_weighted", ".", "edge", "[", "n1", "]", "[", "n2", "]", "G_weighted", ")", ",", "n1", "(", "G_weighted", "(", "0.5", "*", "B"]}}
{"position": {"error_location": 120, "repair_targets": [8, 134], "repair_candidates": [94, 111, 116, 125, 130, 106, 120, 128, 2, 96, 108, 123, 8, 134]}}
{"prediction": {"error_location": 0.7739377617835999, "repair_targets": [0.506051242351532, 0.0005818279460072517], "repair_candidates": [0.000994657282717526, 0.506051242351532, 0.00404053321108222, 0.0013634231872856617, 0.032436031848192215, 0.44599291682243347, 3.0467708711512387e-05, 4.6931254473747686e-05, 0.0002779437054414302, 0.008045447990298271, 4.8709647671785206e-05, 4.6448581997537985e-05, 4.3373278458602726e-05, 0.0005818279460072517], "target_probs": 0.5066330432891846}}


{"result": {"time": "2021-02-21 06:25:39.302536", "n_pass": [635, 321, 15], "n_token": 133, "loss": [0.27731889486312866, 0.6099444627761841], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def test_modularity_weight(", "self", ")", "#NEWLINE#", "#INDENT#", "'Modularity matrix with weights'", "#NEWLINE#", "B", "[", "[", "1.125", ")", ",", "0.25", ",", "0.25", ",", "0.625", ",", "0.0", "]", ",", "[", "0.25", ",", "(", "-", "0.5", ")", ",", "0.5", ",", "(", "-", "0.25", ")", ",", "0.0", "]", ",", "[", "0.25", ",", "0.5", ",", "(", "-", "0.5", ")", ",", "(", "-", "0.25", ")", ",", "0.0", "]", ",", "[", "0.625", ",", "(", "-", "0.25", ")", ",", "(", "-", "0.25", ")", ",", "(", "-", "0.125", ")", ",", "0.0", "]", ",", "[", "0.0", ",", "0.0", ",", "0.0", ",", "0.0", ",", "0.0", "]", "]", ")", "#NEWLINE#", "G_weighted", "=", "self", ".", "G", ".", "copy", "(", ")", "#NEWLINE#", "for", "(", "n1", ",", "n2", ")", "in", "G_weighted", ".", "edges", "(", "#INDENT#", "G_weighted", ".", "edge", "[", "n1", "n2", "]", "G_weighted", ")", ",", "n1", "(", "G_weighted", "(", "0.5", "*", "B"]}}
{"position": {"error_location": 120, "repair_targets": [8, 132], "repair_candidates": [94, 111, 116, 123, 128, 106, 120, 126, 2, 96, 108, 121, 8, 132]}}
{"prediction": {"error_location": 0.7578127980232239, "repair_targets": [0.5431004762649536, 0.0002805720141623169], "repair_candidates": [0.0007518312777392566, 0.5431004762649536, 0.004995097406208515, 0.0010707814944908023, 0.028101174160838127, 0.4140118956565857, 1.3767079508397728e-05, 2.439692798361648e-05, 0.00012014785170322284, 0.007403210736811161, 6.0529710026457906e-05, 3.0410395993385464e-05, 3.5706707421923056e-05, 0.0002805720141623169], "target_probs": 0.5433810353279114}}


{"result": {"time": "2021-02-21 06:25:39.441287", "n_pass": [642, 323, 16], "n_token": 132, "loss": [0.4483247995376587, 0.648335337638855], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["def test_modularity_weight(", "self", ")", "#NEWLINE#", "#INDENT#", "'Modularity matrix with weights'", "#NEWLINE#", "B", "[", "[", "1.125", ")", ",", "0.25", ",", "0.25", ",", "0.625", ",", "0.0", "]", ",", "[", "0.25", ",", "(", "-", "0.5", ")", ",", "0.5", ",", "(", "-", "0.25", ")", ",", "0.0", "]", ",", "[", "0.25", ",", "0.5", ",", "(", "-", "0.5", ")", ",", "(", "-", "0.25", ")", ",", "0.0", "]", ",", "[", "0.625", ",", "(", "-", "0.25", ")", ",", "(", "-", "0.25", ")", ",", "(", "-", "0.125", ")", ",", "0.0", "]", ",", "[", "0.0", ",", "0.0", ",", "0.0", ",", "0.0", ",", "0.0", "]", "]", ")", "#NEWLINE#", "G_weighted", "=", "self", ".", "G", ".", "copy", "(", ")", "#NEWLINE#", "for", "(", "n1", ",", "n2", ")", "in", "G_weighted", ".", "edges", "(", "#INDENT#", "G_weighted", ".", "edge", "[", "n1", "n2", "]", "G_weighted", ")", ",", "n1", "(", "G_weighted", "(", "0.5", "*", "B"]}}
{"position": {"error_location": 119, "repair_targets": [7, 131], "repair_candidates": [93, 110, 115, 122, 127, 105, 119, 125, 1, 95, 107, 120, 7, 131]}}
{"prediction": {"error_location": 0.6386972665786743, "repair_targets": [0.5228080153465271, 0.00010754671529866755], "repair_candidates": [0.019136007875204086, 0.5228080153465271, 0.006836744025349617, 0.006371975410729647, 0.03928187116980553, 0.4026075005531311, 2.259400389448274e-05, 5.43324786121957e-05, 9.592836431693286e-05, 0.0024169946555048227, 6.130235851742327e-05, 0.00010625301365507767, 9.3021837528795e-05, 0.00010754671529866755], "target_probs": 0.5229155421257019}}


{"result": {"time": "2021-02-21 06:25:47.577676", "n_pass": [843, 444, 17], "n_token": 131, "loss": [0.1997259110212326, 0.6658806800842285], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["def test_modularity_weight(", "self", ")", "#NEWLINE#", "#INDENT#", "'Modularity matrix with weights'", "#NEWLINE#", "B", "[", "[", "1.125", ")", ",", "0.25", ",", "0.25", ",", "0.625", ",", "0.0", "]", ",", "[", "0.25", ",", "(", "-", "0.5", ")", ",", "0.5", ",", "(", "-", "0.25", ")", ",", "0.0", "]", ",", "[", "0.25", ",", "0.5", ",", "(", "-", "0.5", ")", ",", "(", "-", "0.25", ")", ",", "0.0", "]", ",", "[", "0.625", ",", "(", "-", "0.25", ")", ",", "(", "-", "0.25", ")", ",", "(", "-", "0.125", ")", ",", "0.0", "]", ",", "[", "0.0", ",", "0.0", ",", "0.0", ",", "0.0", ",", "0.0", "]", "]", ")", "#NEWLINE#", "G_weighted", "=", "self", ".", "G", ".", "copy", "(", ")", "#NEWLINE#", "for", "n1", ",", "n2", ")", "in", "G_weighted", ".", "edges", "(", "#INDENT#", "G_weighted", ".", "edge", "[", "n1", "n2", "]", "G_weighted", ")", ",", "n1", "(", "G_weighted", "(", "0.5", "*", "B"]}}
{"position": {"error_location": 118, "repair_targets": [7, 130], "repair_candidates": [93, 109, 114, 121, 126, 104, 118, 124, 1, 95, 106, 119, 7, 130]}}
{"prediction": {"error_location": 0.8189553022384644, "repair_targets": [0.5135616660118103, 0.000259140768321231], "repair_candidates": [0.023784471675753593, 0.5135616660118103, 0.0029309506062418222, 0.00863923691213131, 0.012709546834230423, 0.432727187871933, 2.4957889763754793e-05, 2.055252480204217e-05, 6.668837886536494e-05, 0.0050230505876243114, 4.384918793221004e-05, 0.0001206098313559778, 8.80602965480648e-05, 0.000259140768321231], "target_probs": 0.5138208270072937}}


{"result": {"time": "2021-02-21 06:25:48.312652", "n_pass": [859, 455, 18], "n_token": 130, "loss": [0.6647403240203857, 0.541627824306488], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["def test_modularity_weight(", "self", ")", "#NEWLINE#", "#INDENT#", "'Modularity matrix with weights'", "#NEWLINE#", "B", "[", "[", "1.125", ")", ",", "0.25", ",", "0.25", ",", "0.625", ",", "0.0", "]", ",", "[", "0.25", ",", "(", "-", "0.5", ")", ",", "0.5", ",", "(", "-", "0.25", ")", ",", "0.0", "]", ",", "[", "0.25", ",", "0.5", ",", "(", "-", "0.5", ")", ",", "(", "-", "0.25", ")", ",", "0.0", "]", ",", "[", "0.625", ",", "(", "-", "0.25", ")", ",", "(", "-", "0.25", ")", ",", "(", "-", "0.125", ")", ",", "0.0", "]", ",", "[", "0.0", ",", "0.0", ",", "0.0", ",", "0.0", ",", "0.0", "]", "]", ")", "#NEWLINE#", "G_weighted", "=", "self", ".", "G", ".", "copy", "(", ")", "#NEWLINE#", "for", "n1", ",", "n2", ")", "in", "G_weighted", ".", "edges", "(", "#INDENT#", "G_weighted", ".", "edge", "[", "n1", "n2", "G_weighted", ")", ",", "n1", "(", "G_weighted", "(", "0.5", "*", "B"]}}
{"position": {"error_location": 118, "repair_targets": [7, 129], "repair_candidates": [93, 109, 114, 120, 125, 104, 118, 123, 1, 95, 106, 119, 7, 129]}}
{"prediction": {"error_location": 0.5144071578979492, "repair_targets": [0.5816812515258789, 0.00011915522190975025], "repair_candidates": [0.029286827892065048, 0.5816812515258789, 0.005038048606365919, 0.011899189092218876, 0.02599056251347065, 0.3382742702960968, 6.616155587835237e-05, 5.112223152536899e-05, 0.00019736311514861882, 0.006843993905931711, 0.00016106457042042166, 0.00020484943524934351, 0.00018619370530359447, 0.00011915522190975025], "target_probs": 0.5818004012107849}}


{"result": {"time": "2021-02-21 06:25:48.447656", "n_pass": [862, 457, 19], "n_token": 129, "loss": [0.5524256825447083, 0.4611639976501465], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["def test_modularity_weight(", "self", ")", "#NEWLINE#", "#INDENT#", "'Modularity matrix with weights'", "#NEWLINE#", "B", "[", "[", "1.125", ")", ",", "0.25", ",", "0.25", ",", "0.625", ",", "0.0", "]", ",", "[", "0.25", ",", "(", "-", "0.5", ")", ",", "0.5", ",", "(", "-", "0.25", ")", ",", "0.0", "]", ",", "[", "0.25", ",", "0.5", ",", "(", "-", "0.5", ")", ",", "(", "-", "0.25", ")", ",", "0.0", "]", ",", "[", "0.625", ",", "(", "-", "0.25", ")", ",", "(", "-", "0.25", ")", ",", "(", "-", "0.125", ")", ",", "0.0", "]", ",", "[", "0.0", ",", "0.0", ",", "0.0", ",", "0.0", ",", "0.0", "]", "]", ")", "#NEWLINE#", "G_weighted", "=", "self", ".", "G", ".", "copy", "(", ")", "#NEWLINE#", "for", "n1", ",", "n2", ")", "in", "G_weighted", ".", "edges", "(", "#INDENT#", "G_weighted", ".", "edge", "[", "n1", "n2", "G_weighted", ")", "n1", "(", "G_weighted", "(", "0.5", "*", "B"]}}
{"position": {"error_location": 118, "repair_targets": [7, 128], "repair_candidates": [93, 109, 114, 120, 124, 104, 118, 122, 1, 95, 106, 119, 7, 128]}}
{"prediction": {"error_location": 0.5755521655082703, "repair_targets": [0.6305080056190491, 4.1217626858269796e-05], "repair_candidates": [0.031742312014102936, 0.6305080056190491, 0.003900289535522461, 0.016800405457615852, 0.026271961629390717, 0.28710368275642395, 5.1305167289683595e-05, 3.317037408123724e-05, 0.0001434520963812247, 0.0027317453641444445, 0.00014392980665434152, 0.0003457260027062148, 0.0001827848464017734, 4.1217626858269796e-05], "target_probs": 0.6305492520332336}}


{"result": {"time": "2021-02-21 06:25:48.517767", "n_pass": [864, 458, 20], "n_token": 128, "loss": [0.5914128422737122, 0.6508557200431824], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["def test_modularity_weight(", "self", ")", "#NEWLINE#", "#INDENT#", "'Modularity matrix with weights'", "#NEWLINE#", "B", "[", "[", "1.125", ")", ",", "0.25", ",", "0.25", ",", "0.625", ",", "0.0", "]", ",", "[", "0.25", ",", "(", "-", "0.5", ")", ",", "0.5", ",", "(", "-", "0.25", ")", ",", "0.0", "]", ",", "[", "0.25", ",", "0.5", ",", "(", "-", "0.5", ")", ",", "(", "-", "0.25", ")", ",", "0.0", "]", ",", "[", "0.625", ",", "(", "-", "0.25", ")", ",", "(", "-", "0.25", ")", ",", "(", "-", "0.125", ")", ",", "0.0", "]", ",", "[", "0.0", ",", "0.0", ",", "0.0", ",", "0.0", ",", "0.0", "]", "]", ")", "#NEWLINE#", "G_weighted", "=", "self", ".", "G", ".", "copy", "(", ")", "#NEWLINE#", "for", "n1", ",", "n2", ")", "in", "G_weighted", ".", "edges", "(", "#INDENT#", "G_weighted", ".", "edge", "[", "n1", "n2", "G_weighted", ")", "n1", "G_weighted", "(", "0.5", "*", "B"]}}
{"position": {"error_location": 118, "repair_targets": [7, 127], "repair_candidates": [93, 109, 114, 120, 123, 104, 118, 122, 1, 95, 106, 119, 7, 127]}}
{"prediction": {"error_location": 0.5535446405410767, "repair_targets": [0.521557629108429, 4.1580762626836076e-05], "repair_candidates": [0.050056274980306625, 0.521557629108429, 0.006013725884258747, 0.0302925705909729, 0.03234654292464256, 0.3551202118396759, 5.672640691045672e-05, 4.91997561766766e-05, 0.00015925923071336, 0.0026847252156585455, 0.0003203862579539418, 0.000825617928057909, 0.0004755697154905647, 4.1580762626836076e-05], "target_probs": 0.5215992331504822}}


{"result": {"time": "2021-02-21 06:25:49.385490", "n_pass": [881, 471, 21], "n_token": 127, "loss": [0.5874083638191223, 0.6921778917312622], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["def test_modularity_weight(", "self", ")", "#NEWLINE#", "#INDENT#", "'Modularity matrix with weights'", "#NEWLINE#", "B", "[", "[", "1.125", ",", "0.25", ",", "0.25", ",", "0.625", ",", "0.0", "]", ",", "[", "0.25", ",", "(", "-", "0.5", ")", ",", "0.5", ",", "(", "-", "0.25", ")", ",", "0.0", "]", ",", "[", "0.25", ",", "0.5", ",", "(", "-", "0.5", ")", ",", "(", "-", "0.25", ")", ",", "0.0", "]", ",", "[", "0.625", ",", "(", "-", "0.25", ")", ",", "(", "-", "0.25", ")", ",", "(", "-", "0.125", ")", ",", "0.0", "]", ",", "[", "0.0", ",", "0.0", ",", "0.0", ",", "0.0", ",", "0.0", "]", "]", ")", "#NEWLINE#", "G_weighted", "=", "self", ".", "G", ".", "copy", "(", ")", "#NEWLINE#", "for", "n1", ",", "n2", ")", "in", "G_weighted", ".", "edges", "(", "#INDENT#", "G_weighted", ".", "edge", "[", "n1", "n2", "G_weighted", ")", "n1", "G_weighted", "(", "0.5", "*", "B"]}}
{"position": {"error_location": 117, "repair_targets": [7, 126], "repair_candidates": [92, 108, 113, 119, 122, 103, 117, 121, 1, 94, 105, 118, 7, 126]}}
{"prediction": {"error_location": 0.5557658076286316, "repair_targets": [0.5004492402076721, 3.5645764000946656e-05], "repair_candidates": [0.051946233958005905, 0.5004492402076721, 0.00558751355856657, 0.05370984971523285, 0.03367851302027702, 0.34939709305763245, 4.958348654326983e-05, 3.3272055588895455e-05, 0.0001415503938915208, 0.002881695283576846, 0.00023428528220392764, 0.001144590089097619, 0.000711018918082118, 3.5645764000946656e-05], "target_probs": 0.5004848837852478}}


{"result": {"time": "2021-02-21 06:25:49.455320", "n_pass": [882, 472, 22], "n_token": 126, "loss": [1.0415947437286377, 0.6918975710868835], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["def test_modularity_weight(", "self", ")", "#NEWLINE#", "#INDENT#", "'Modularity matrix with weights'", "#NEWLINE#", "B", "[", "[", "1.125", "0.25", ",", "0.25", ",", "0.625", ",", "0.0", "]", ",", "[", "0.25", ",", "(", "-", "0.5", ")", ",", "0.5", ",", "(", "-", "0.25", ")", ",", "0.0", "]", ",", "[", "0.25", ",", "0.5", ",", "(", "-", "0.5", ")", ",", "(", "-", "0.25", ")", ",", "0.0", "]", ",", "[", "0.625", ",", "(", "-", "0.25", ")", ",", "(", "-", "0.25", ")", ",", "(", "-", "0.125", ")", ",", "0.0", "]", ",", "[", "0.0", ",", "0.0", ",", "0.0", ",", "0.0", ",", "0.0", "]", "]", ")", "#NEWLINE#", "G_weighted", "=", "self", ".", "G", ".", "copy", "(", ")", "#NEWLINE#", "for", "n1", ",", "n2", ")", "in", "G_weighted", ".", "edges", "(", "#INDENT#", "G_weighted", ".", "edge", "[", "n1", "n2", "G_weighted", ")", "n1", "G_weighted", "(", "0.5", "*", "B"]}}
{"position": {"error_location": 116, "repair_targets": [7, 125], "repair_candidates": [91, 107, 112, 118, 121, 102, 116, 120, 1, 93, 104, 117, 7, 125]}}
{"prediction": {"error_location": 0.3528914451599121, "repair_targets": [0.5005913972854614, 3.381786518730223e-05], "repair_candidates": [0.06315683573484421, 0.5005913972854614, 0.005674120970070362, 0.049064259976148605, 0.04604732617735863, 0.32792067527770996, 7.049962732708082e-05, 4.602731132763438e-05, 0.0002528264303691685, 0.0034568305127322674, 0.0002978818956762552, 0.002183491364121437, 0.0012039764551445842, 3.381786518730223e-05], "target_probs": 0.5006251931190491}}




Minimal simplified tokens:

['def test_modularity_weight(', 'self', ')', '#NEWLINE#', '#INDENT#', "'Modularity matrix with weights'", '#NEWLINE#', 'B', '[', '[', '1.125', '0.25', ',', '0.25', ',', '0.625', ',', '0.0', ']', ',', '[', '0.25', ',', '(', '-', '0.5', ')', ',', '0.5', ',', '(', '-', '0.25', ')', ',', '0.0', ']', ',', '[', '0.25', ',', '0.5', ',', '(', '-', '0.5', ')', ',', '(', '-', '0.25', ')', ',', '0.0', ']', ',', '[', '0.625', ',', '(', '-', '0.25', ')', ',', '(', '-', '0.25', ')', ',', '(', '-', '0.125', ')', ',', '0.0', ']', ',', '[', '0.0', ',', '0.0', ',', '0.0', ',', '0.0', ',', '0.0', ']', ']', ')', '#NEWLINE#', 'G_weighted', '=', 'self', '.', 'G', '.', 'copy', '(', ')', '#NEWLINE#', 'for', 'n1', ',', 'n2', ')', 'in', 'G_weighted', '.', 'edges', '(', '#INDENT#', 'G_weighted', '.', 'edge', '[', 'n1', 'n2', 'G_weighted', ')', 'n1', 'G_weighted', '(', '0.5', '*', 'B']
