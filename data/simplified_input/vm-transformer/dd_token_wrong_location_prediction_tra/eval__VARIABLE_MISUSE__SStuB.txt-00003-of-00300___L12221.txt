
Original sample:

{"has_bug": true, "bug_kind": 1, "bug_kind_name": "VARIABLE_MISUSE", "source_tokens": ["#NEWLINE#", "def test_write_calc_pr(", "self", ")", ":", "#NEWLINE#", "#INDENT#", "'Test the _write_calc_pr() method with non-default calc id.'", "#NEWLINE#", "self", ".", "workbook", ".", "set_calc_mode", "(", "'auto'", ",", "12345", ")", "#NEWLINE#", "self", ".", "workbook", ".", "_write_calc_pr", "(", ")", "#NEWLINE#", "exp", "=", "'<calcPr calcId=\"12345\" fullCalcOnLoad=\"1\"/>'", "#NEWLINE#", "got", "=", "self", ".", "fh", ".", "getvalue", "(", ")", "#NEWLINE#", "self", ".", "assertEqual", "(", "got", ",", "got", ")"], "error_location": [48], "repair_targets": [28], "repair_candidates": [28, 32, 46, 48, 2, 9, 20, 34, 42], "provenances": [{"datasetProvenance": {"datasetName": "ETHPy150Open", "filepath": "jmcnamara/XlsxWriter/xlsxwriter/test/workbook/test_write_calc_pr.py", "license": "bsd-2-clause", "note": "license: manual_eval"}}], "txt_file": "eval__VARIABLE_MISUSE__SStuB.txt-00003-of-00300", "js_count": 12221, "results": {"model": "transformer", "prob": {"loc": [[6.1164232647570316e-06, 1.6827574056410555e-10, 6.212590858423184e-11, 1.905390558873399e-12, 4.8194039904692065e-12, 4.6496595636214e-12, 2.650574855087018e-12, 1.6597949143576374e-12, 1.8647097754787012e-12, 1.2665503411682377e-12, 1.7220074107968109e-12, 1.5692151354371187e-13, 3.3865113404502045e-12, 6.095200299344183e-13, 7.268323096165652e-12, 2.275892495295917e-11, 1.6473119526447255e-12, 1.5593857802254085e-11, 3.4150059082665996e-12, 3.209617359216377e-13, 7.1120418582149014e-12, 1.5042149383720504e-12, 1.1529515677680818e-13, 2.584994718279887e-12, 3.111698995261064e-13, 2.787450131824798e-11, 1.1280591044604549e-11, 2.2803798779835738e-12, 3.5065655934474194e-10, 2.60586691114284e-11, 1.0331123456719382e-10, 1.68986474119448e-11, 1.7609577129817922e-09, 2.8371357346790305e-11, 1.1375577563255135e-10, 5.76404635826977e-12, 1.5358091317793643e-12, 1.5112728776744966e-11, 2.7738832064638785e-11, 2.229568751843658e-09, 3.940096693355599e-09, 3.925429981066486e-10, 5.0028422377002e-11, 6.3450234649709e-12, 4.962626446933238e-13, 7.864359337361737e-12, 0.508672297000885, 1.821280237734868e-09, 0.4913215637207031, 3.635191037076879e-09]], "pointer": [[0.0, 0.0, 3.345510179997291e-08, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 5.828564439980255e-07, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 3.5215583693570807e-07, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.999998927116394, 0.0, 0.0, 0.0, 4.722796731471135e-08, 0.0, 8.978855703389854e-08, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.2948319083605497e-09, 0.0, 0.0, 0.0, 6.480926906249351e-10, 0.0, 2.224041395493259e-09, 0.0]], "target": [0.999998927116394]}, "loss": [0.710656464099884, 1.0728841743912199e-06], "acc": [0.0, 0.0, 1.0, 0.0]}, "wrong_error_location": [46]}


Trace of simplified code(s):

{"result": {"time": "2021-02-21 05:55:06.638775", "n_pass": [1, 1, 1], "n_token": 50, "loss": [0.6759513020515442, 1.0728841743912199e-06], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def test_write_calc_pr(", "self", ")", ":", "#NEWLINE#", "#INDENT#", "'Test the _write_calc_pr() method with non-default calc id.'", "#NEWLINE#", "self", ".", "workbook", ".", "set_calc_mode", "(", "'auto'", ",", "12345", ")", "#NEWLINE#", "self", ".", "workbook", ".", "_write_calc_pr", "(", ")", "#NEWLINE#", "exp", "=", "'<calcPr calcId=\"12345\" fullCalcOnLoad=\"1\"/>'", "#NEWLINE#", "got", "=", "self", ".", "fh", ".", "getvalue", "(", ")", "#NEWLINE#", "self", ".", "assertEqual", "(", "got", ",", "got", ")"]}}
{"position": {"error_location": 46, "repair_targets": [28], "repair_candidates": [28, 32, 46, 48, 2, 9, 20, 34, 42]}}
{"prediction": {"error_location": 0.508672297000885, "repair_targets": [0.999998927116394], "repair_candidates": [3.345510179997291e-08, 5.828564439980255e-07, 3.5215583693570807e-07, 0.999998927116394, 4.722796731471135e-08, 8.978855703389854e-08, 1.2948319083605497e-09, 6.480926906249351e-10, 2.224041395493259e-09], "target_probs": 0.999998927116394}}


{"result": {"time": "2021-02-21 05:55:06.695689", "n_pass": [22, 2, 2], "n_token": 44, "loss": [0.5522735118865967, 1.4305124977909145e-06], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def test_write_calc_pr(", "self", ")", ":", "#NEWLINE#", "#INDENT#", "'Test the _write_calc_pr() method with non-default calc id.'", "#NEWLINE#", "self", ".", "workbook", ")", "#NEWLINE#", "self", ".", "workbook", ".", "_write_calc_pr", "(", ")", "#NEWLINE#", "exp", "=", "'<calcPr calcId=\"12345\" fullCalcOnLoad=\"1\"/>'", "#NEWLINE#", "got", "=", "self", ".", "fh", ".", "getvalue", "(", ")", "#NEWLINE#", "self", ".", "assertEqual", "(", "got", ",", "got", ")"]}}
{"position": {"error_location": 40, "repair_targets": [22], "repair_candidates": [22, 26, 40, 42, 2, 9, 14, 28, 36]}}
{"prediction": {"error_location": 0.5756396055221558, "repair_targets": [0.9999985694885254], "repair_candidates": [4.190346203358786e-08, 1.2968644114152994e-07, 8.729638238946791e-07, 0.9999985694885254, 1.7193154633332597e-07, 2.262928120444485e-07, 8.330406919832001e-10, 7.666960399888012e-09, 1.1136313204929138e-08], "target_probs": 0.9999985694885254}}


{"result": {"time": "2021-02-21 05:55:06.752672", "n_pass": [44, 3, 3], "n_token": 41, "loss": [0.5227928161621094, 1.2874686035502236e-05], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def test_write_calc_pr(", "self", ")", ":", "#NEWLINE#", "#INDENT#", "'Test the _write_calc_pr() method with non-default calc id.'", "#NEWLINE#", "self", ".", "workbook", ")", "#NEWLINE#", "self", "_write_calc_pr", "(", ")", "#NEWLINE#", "exp", "=", "'<calcPr calcId=\"12345\" fullCalcOnLoad=\"1\"/>'", "#NEWLINE#", "got", "=", "self", ".", "fh", ".", "getvalue", "(", ")", "#NEWLINE#", "self", ".", "assertEqual", "(", "got", ",", "got", ")"]}}
{"position": {"error_location": 37, "repair_targets": [19], "repair_candidates": [19, 23, 37, 39, 2, 9, 14, 25, 33]}}
{"prediction": {"error_location": 0.5928624868392944, "repair_targets": [0.9999871253967285], "repair_candidates": [2.6535060371202235e-08, 1.1125150933821715e-07, 1.1786552022385877e-05, 0.9999871253967285, 4.976047307536646e-07, 5.149892672307033e-07, 2.5663864366975986e-09, 1.4522910873893125e-08, 1.0637011271796837e-08], "target_probs": 0.9999871253967285}}


{"result": {"time": "2021-02-21 05:55:06.808750", "n_pass": [45, 4, 4], "n_token": 38, "loss": [0.40544945001602173, 2.0742631022585556e-05], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def test_write_calc_pr(", "self", ")", ":", "#NEWLINE#", "#INDENT#", "'Test the _write_calc_pr() method with non-default calc id.'", "#NEWLINE#", "self", ".", "workbook", ")", "#NEWLINE#", "self", "#NEWLINE#", "exp", "=", "'<calcPr calcId=\"12345\" fullCalcOnLoad=\"1\"/>'", "#NEWLINE#", "got", "=", "self", ".", "fh", ".", "getvalue", "(", ")", "#NEWLINE#", "self", ".", "assertEqual", "(", "got", ",", "got", ")"]}}
{"position": {"error_location": 34, "repair_targets": [16], "repair_candidates": [16, 20, 34, 36, 2, 9, 14, 22, 30]}}
{"prediction": {"error_location": 0.6666771769523621, "repair_targets": [0.9999792575836182], "repair_candidates": [8.229593362329979e-08, 9.151472823987206e-08, 2.0188472262816504e-05, 0.9999792575836182, 6.456402701360275e-08, 2.384625190643419e-07, 7.654695766134978e-10, 4.3428634022291135e-09, 2.151112177273262e-09], "target_probs": 0.9999792575836182}}


{"result": {"time": "2021-02-21 05:55:06.864551", "n_pass": [49, 5, 5], "n_token": 35, "loss": [0.41234883666038513, 4.6373490476980805e-05], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def test_write_calc_pr(", "self", ")", ":", "#NEWLINE#", "#INDENT#", "'Test the _write_calc_pr() method with non-default calc id.'", "#NEWLINE#", "self", ".", "workbook", ")", "#NEWLINE#", "self", "#NEWLINE#", "exp", "=", "'<calcPr calcId=\"12345\" fullCalcOnLoad=\"1\"/>'", "#NEWLINE#", "got", "=", "self", ".", "(", ")", "#NEWLINE#", "self", ".", "assertEqual", "(", "got", ",", "got", ")"]}}
{"position": {"error_location": 31, "repair_targets": [16], "repair_candidates": [16, 20, 31, 33, 2, 9, 14, 22, 27]}}
{"prediction": {"error_location": 0.6620933413505554, "repair_targets": [0.9999536275863647], "repair_candidates": [8.735704426499069e-08, 2.516075880976132e-07, 4.4514741603052244e-05, 0.9999536275863647, 1.2800312809702064e-08, 1.5677335341024445e-06, 8.113000271592341e-10, 1.381205372297245e-09, 4.751300464178598e-10], "target_probs": 0.9999536275863647}}


{"result": {"time": "2021-02-21 05:55:06.919888", "n_pass": [50, 6, 6], "n_token": 32, "loss": [0.23924776911735535, 0.00011420901864767075], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def test_write_calc_pr(", "self", ")", ":", "#NEWLINE#", "#INDENT#", "'Test the _write_calc_pr() method with non-default calc id.'", "#NEWLINE#", "self", ".", "workbook", ")", "#NEWLINE#", "self", "#NEWLINE#", "exp", "=", "'<calcPr calcId=\"12345\" fullCalcOnLoad=\"1\"/>'", "#NEWLINE#", "got", "=", "self", ".", "self", ".", "assertEqual", "(", "got", ",", "got", ")"]}}
{"position": {"error_location": 28, "repair_targets": [16], "repair_candidates": [16, 20, 28, 30, 2, 9, 14, 22, 24]}}
{"prediction": {"error_location": 0.7872198224067688, "repair_targets": [0.9998857975006104], "repair_candidates": [6.643880965384596e-07, 8.196066119126044e-07, 0.00011244804045418277, 0.9998857975006104, 4.1333167999368925e-09, 8.288350272778189e-08, 1.4479131493772002e-07, 8.484332347791224e-09, 5.818125536904972e-09], "target_probs": 0.9998857975006104}}


{"result": {"time": "2021-02-21 05:55:06.978670", "n_pass": [54, 7, 7], "n_token": 29, "loss": [0.19897106289863586, 0.00013626550207845867], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def test_write_calc_pr(", "self", "#INDENT#", "'Test the _write_calc_pr() method with non-default calc id.'", "#NEWLINE#", "self", ".", "workbook", ")", "#NEWLINE#", "self", "#NEWLINE#", "exp", "=", "'<calcPr calcId=\"12345\" fullCalcOnLoad=\"1\"/>'", "#NEWLINE#", "got", "=", "self", ".", "self", ".", "assertEqual", "(", "got", ",", "got", ")"]}}
{"position": {"error_location": 25, "repair_targets": [13], "repair_candidates": [13, 17, 25, 27, 2, 6, 11, 19, 21]}}
{"prediction": {"error_location": 0.8195735812187195, "repair_targets": [0.9998637437820435], "repair_candidates": [3.8808258295830456e-07, 1.915709844979574e-06, 0.00013364032201934606, 0.9998637437820435, 5.281607595719606e-09, 3.3635544127719186e-08, 2.614074787743448e-07, 1.3118587993687925e-08, 1.349513922832557e-08], "target_probs": 0.9998637437820435}}


{"result": {"time": "2021-02-21 05:55:07.034314", "n_pass": [55, 8, 8], "n_token": 26, "loss": [0.17435528337955475, 9.536747711536009e-07], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def test_write_calc_pr(", "self", "self", ".", "workbook", ")", "#NEWLINE#", "self", "#NEWLINE#", "exp", "=", "'<calcPr calcId=\"12345\" fullCalcOnLoad=\"1\"/>'", "#NEWLINE#", "got", "=", "self", ".", "self", ".", "assertEqual", "(", "got", ",", "got", ")"]}}
{"position": {"error_location": 22, "repair_targets": [10], "repair_candidates": [10, 14, 22, 24, 2, 3, 8, 16, 18]}}
{"prediction": {"error_location": 0.8399984240531921, "repair_targets": [0.9999990463256836], "repair_candidates": [9.770523945462628e-08, 1.0011405748855395e-07, 7.587968298139458e-07, 0.9999990463256836, 2.0626773622467454e-09, 5.1594462036064215e-09, 5.250681223145648e-09, 2.294439083172506e-09, 1.1256006127169371e-09], "target_probs": 0.9999990463256836}}


{"result": {"time": "2021-02-21 05:55:07.090625", "n_pass": [82, 9, 9], "n_token": 25, "loss": [0.11612608283758163, 4.768372718899627e-07], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def test_write_calc_pr(", "self", "self", "workbook", ")", "#NEWLINE#", "self", "#NEWLINE#", "exp", "=", "'<calcPr calcId=\"12345\" fullCalcOnLoad=\"1\"/>'", "#NEWLINE#", "got", "=", "self", ".", "self", ".", "assertEqual", "(", "got", ",", "got", ")"]}}
{"position": {"error_location": 21, "repair_targets": [9], "repair_candidates": [9, 13, 21, 23, 2, 3, 7, 15, 17]}}
{"prediction": {"error_location": 0.8903630375862122, "repair_targets": [0.9999995231628418], "repair_candidates": [4.098608386016167e-08, 4.639533557337927e-08, 4.045625416893017e-07, 0.9999995231628418, 1.0419287654883647e-09, 9.367517428415795e-09, 5.0748591995386505e-09, 9.226276964646729e-10, 6.264890828333591e-10], "target_probs": 0.9999995231628418}}


{"result": {"time": "2021-02-21 05:55:07.146519", "n_pass": [83, 10, 10], "n_token": 24, "loss": [0.08771619945764542, 1.3113030945532955e-06], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def test_write_calc_pr(", "self", "self", ")", "#NEWLINE#", "self", "#NEWLINE#", "exp", "=", "'<calcPr calcId=\"12345\" fullCalcOnLoad=\"1\"/>'", "#NEWLINE#", "got", "=", "self", ".", "self", ".", "assertEqual", "(", "got", ",", "got", ")"]}}
{"position": {"error_location": 20, "repair_targets": [8], "repair_candidates": [8, 12, 20, 22, 2, 3, 6, 14, 16]}}
{"prediction": {"error_location": 0.9160208106040955, "repair_targets": [0.9999986886978149], "repair_candidates": [9.80200951516963e-08, 1.1909679642485571e-07, 1.1105823887191946e-06, 0.9999986886978149, 4.709747036812928e-10, 4.09068618978381e-08, 2.480870975318794e-08, 5.778829637037575e-10, 2.889440908759866e-10], "target_probs": 0.9999986886978149}}


{"result": {"time": "2021-02-21 05:55:07.202381", "n_pass": [84, 11, 11], "n_token": 22, "loss": [0.07910377532243729, 3.576279254957626e-07], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def test_write_calc_pr(", "self", "self", "self", "#NEWLINE#", "exp", "=", "'<calcPr calcId=\"12345\" fullCalcOnLoad=\"1\"/>'", "#NEWLINE#", "got", "=", "self", ".", "self", ".", "assertEqual", "(", "got", ",", "got", ")"]}}
{"position": {"error_location": 18, "repair_targets": [6], "repair_candidates": [6, 10, 18, 20, 2, 3, 4, 12, 14]}}
{"prediction": {"error_location": 0.9239439368247986, "repair_targets": [0.9999996423721313], "repair_candidates": [5.7027854438729264e-08, 6.901674254322643e-08, 1.1634458019216254e-07, 0.9999996423721313, 2.665875520335703e-09, 9.303066406118887e-08, 2.8163983145645943e-08, 1.949707950643642e-09, 6.873829283549071e-10], "target_probs": 0.9999996423721313}}


{"result": {"time": "2021-02-21 05:55:07.258058", "n_pass": [87, 12, 12], "n_token": 20, "loss": [0.6821862459182739, 2.145769485650817e-06], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def test_write_calc_pr(", "self", "self", "self", "#NEWLINE#", "exp", "=", "got", "=", "self", ".", "self", ".", "assertEqual", "(", "got", ",", "got", ")"]}}
{"position": {"error_location": 16, "repair_targets": [6], "repair_candidates": [6, 8, 16, 18, 2, 3, 4, 10, 12]}}
{"prediction": {"error_location": 0.5055105686187744, "repair_targets": [0.9999978542327881], "repair_candidates": [3.154432022256515e-07, 3.8072653296694625e-07, 5.678703587363998e-07, 0.9999978542327881, 1.7596585166756995e-07, 6.145093038867344e-07, 9.694366553958389e-08, 1.4102333523169364e-08, 1.70988723180443e-09], "target_probs": 0.9999978542327881}}


{"result": {"time": "2021-02-21 05:55:07.372133", "n_pass": [94, 14, 13], "n_token": 19, "loss": [0.4226796329021454, 0.00010169069719268009], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["def test_write_calc_pr(", "self", "self", "self", "#NEWLINE#", "exp", "=", "got", "=", "self", ".", "self", ".", "assertEqual", "(", "got", ",", "got", ")"]}}
{"position": {"error_location": 15, "repair_targets": [5], "repair_candidates": [5, 7, 15, 17, 1, 2, 3, 9, 11]}}
{"prediction": {"error_location": 0.6552884578704834, "repair_targets": [0.9998983144760132], "repair_candidates": [6.74714392516762e-05, 1.3200027524362667e-06, 6.374852091539651e-06, 0.9998983144760132, 4.540182629853007e-08, 2.3498840164393187e-05, 2.903285121647059e-06, 5.2548809748032e-09, 5.432191918508522e-10], "target_probs": 0.9998983144760132}}


{"result": {"time": "2021-02-21 05:55:07.427491", "n_pass": [95, 15, 14], "n_token": 18, "loss": [0.4897168278694153, 0.001062182243913412], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["self", "self", "self", "#NEWLINE#", "exp", "=", "got", "=", "self", ".", "self", ".", "assertEqual", "(", "got", ",", "got", ")"]}}
{"position": {"error_location": 14, "repair_targets": [4], "repair_candidates": [4, 6, 14, 16, 0, 1, 2, 8, 10]}}
{"prediction": {"error_location": 0.6127998232841492, "repair_targets": [0.9989383816719055], "repair_candidates": [7.577545602543978e-06, 3.0445185984717682e-05, 0.000680226949043572, 0.9989383816719055, 4.561330158026067e-08, 0.0002925469307228923, 5.0766928325174376e-05, 7.925436307232303e-09, 9.159443203898832e-10], "target_probs": 0.9989383816719055}}


{"result": {"time": "2021-02-21 05:55:07.652573", "n_pass": [127, 19, 15], "n_token": 17, "loss": [0.4742184281349182, 0.02286929078400135], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["self", "self", "self", "#NEWLINE#", "exp", "=", "got", "self", ".", "self", ".", "assertEqual", "(", "got", ",", "got", ")"]}}
{"position": {"error_location": 13, "repair_targets": [4], "repair_candidates": [4, 6, 13, 15, 0, 1, 2, 7, 9]}}
{"prediction": {"error_location": 0.6223711967468262, "repair_targets": [0.9773902297019958], "repair_candidates": [0.00010462470527272671, 0.0001605539582669735, 0.02071751095354557, 0.9773902297019958, 1.3974725732168736e-07, 0.0005996554391458631, 0.001027258695103228, 2.556871825376561e-09, 5.108986012025696e-10], "target_probs": 0.9773902297019958}}


{"result": {"time": "2021-02-21 05:55:07.819659", "n_pass": [132, 22, 16], "n_token": 16, "loss": [0.6788248419761658, 0.053659457713365555], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["self", "self", "self", "#NEWLINE#", "exp", "=", "got", "self", ".", "self", ".", "(", "got", ",", "got", ")"]}}
{"position": {"error_location": 12, "repair_targets": [4], "repair_candidates": [4, 6, 12, 14, 0, 1, 2, 7, 9]}}
{"prediction": {"error_location": 0.5072126388549805, "repair_targets": [0.9477548003196716], "repair_candidates": [0.0001718438434181735, 0.00032608507899567485, 0.04868075251579285, 0.9477548003196716, 5.592584670921497e-07, 0.0009432448423467577, 0.002122691832482815, 1.089444312540877e-09, 2.2237160723914684e-10], "target_probs": 0.9477548003196716}}


{"result": {"time": "2021-02-21 05:55:08.043914", "n_pass": [141, 26, 17], "n_token": 15, "loss": [0.6295462846755981, 0.5475214123725891], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["self", "self", "self", "exp", "=", "got", "self", ".", "self", ".", "(", "got", ",", "got", ")"]}}
{"position": {"error_location": 11, "repair_targets": [3], "repair_candidates": [3, 5, 11, 13, 0, 1, 2, 6, 8]}}
{"prediction": {"error_location": 0.5328335165977478, "repair_targets": [0.5783815979957581], "repair_candidates": [0.004693212918937206, 0.010800735093653202, 0.32682785391807556, 0.5783815979957581, 0.006986913271248341, 0.022323932498693466, 0.04998534545302391, 2.0591559746208077e-07, 1.9640286552657926e-07], "target_probs": 0.5783815979957581}}


{"result": {"time": "2021-02-21 05:55:08.099179", "n_pass": [143, 27, 18], "n_token": 14, "loss": [0.3612835109233856, 0.6022307276725769], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["self", "self", "self", "exp", "got", "self", ".", "self", ".", "(", "got", ",", "got", ")"]}}
{"position": {"error_location": 10, "repair_targets": [3], "repair_candidates": [3, 4, 10, 12, 0, 1, 2, 5, 7]}}
{"prediction": {"error_location": 0.6967813968658447, "repair_targets": [0.5475887656211853], "repair_candidates": [0.10149545967578888, 0.015368258580565453, 0.12826567888259888, 0.5475887656211853, 0.042639777064323425, 0.06413614004850388, 0.1004725843667984, 1.454460925742751e-05, 1.881655953184236e-05], "target_probs": 0.5475887656211853}}




Minimal simplified tokens:

['self', 'self', 'self', 'exp', 'got', 'self', '.', 'self', '.', '(', 'got', ',', 'got', ')']
