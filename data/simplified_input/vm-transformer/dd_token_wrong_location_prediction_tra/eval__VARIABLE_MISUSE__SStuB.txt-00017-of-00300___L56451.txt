
Original sample:

{"has_bug": true, "bug_kind": 1, "bug_kind_name": "VARIABLE_MISUSE", "source_tokens": ["#NEWLINE#", "@", "classmethod", "#NEWLINE#", "def unit_attname(", "cls", ",", "unit_str", ")", ":", "#NEWLINE#", "#INDENT#", "\"\\n        Retrieves the unit attribute name for the given unit string.\\n        For example, if the given unit string is 'metre', 'm' would be returned.\\n        An exception is raised if an attribute cannot be found.\\n        \"", "#NEWLINE#", "lower", "=", "unit_str", ".", "lower", "(", ")", "#NEWLINE#", "if", "(", "unit_str", "in", "cls", ".", "UNITS", ")", ":", "#NEWLINE#", "#INDENT#", "return", "unit_str", "#NEWLINE#", "#UNINDENT#", "else", ":", "#NEWLINE#", "#INDENT#", "if", "(", "lower", "in", "cls", ".", "UNITS", ")", ":", "#NEWLINE#", "#INDENT#", "return", "unit_str", "#NEWLINE#", "#UNINDENT#", "else", ":", "#NEWLINE#", "#INDENT#", "if", "(", "lower", "in", "cls", ".", "LALIAS", ")", ":", "#NEWLINE#", "#INDENT#", "return", "cls", ".", "LALIAS", "[", "lower", "]", "#NEWLINE#", "#UNINDENT#", "else", ":", "#NEWLINE#", "#INDENT#", "raise", "Exception", "(", "(", "'Could not find a unit keyword associated with \"%s\"'", "%", "unit_str", ")", ")"], "error_location": [53], "repair_targets": [14, 18, 43, 62, 76], "repair_candidates": [7, 16, 24, 34, 53, 90, 5, 26, 45, 64, 72, 14, 18, 43, 62, 76], "provenances": [{"datasetProvenance": {"datasetName": "ETHPy150Open", "filepath": "AppScale/appscale/AppServer/lib/django-1.2/django/contrib/gis/measure.py", "license": "apache-2.0", "note": "license: github_api"}}], "txt_file": "eval__VARIABLE_MISUSE__SStuB.txt-00017-of-00300", "js_count": 56451, "results": {"model": "transformer", "prob": {"loc": [[0.05102015659213066, 4.1405715478504135e-07, 1.2431223161968319e-08, 1.5853778734253865e-08, 1.5474361347855847e-08, 1.7756201842189512e-08, 5.4941033944544415e-09, 3.185018044860044e-07, 2.3003217108907847e-09, 4.836891331905235e-09, 1.1598939586576762e-08, 1.0925975679754174e-08, 1.9048108867991687e-07, 1.6537599734078867e-08, 8.656530781081528e-07, 3.2015359252568487e-09, 3.2642262226545427e-07, 1.2192876042149692e-08, 6.672119212680627e-08, 5.856292872863378e-08, 3.379724233809611e-08, 1.5331346858715733e-08, 1.2957110051559084e-08, 8.334416179422988e-08, 0.9434928297996521, 1.031486476676946e-06, 7.238616035465384e-06, 4.16855776563807e-08, 1.2138809069028866e-08, 1.0095571489898703e-08, 9.1918280986647e-08, 2.208640559331343e-08, 1.3425037082015479e-08, 1.597617149684538e-08, 0.0008965595043264329, 1.858436426971366e-08, 2.4303250967250278e-08, 4.740472547837271e-08, 6.44295496954328e-08, 2.214347638584968e-08, 1.4349438970384654e-08, 2.6969113164909686e-08, 5.1128036915315533e-08, 0.0023548367898911238, 3.099276284501684e-07, 1.3573156138591003e-05, 1.7348314429455058e-07, 1.4722550645274168e-07, 5.683542525503071e-09, 2.353755412798364e-08, 1.2028525731011541e-08, 4.595059444056915e-09, 6.74876909911859e-09, 0.0007369195227511227, 9.728835514977163e-09, 7.1033374737794475e-09, 2.3727546150098533e-08, 1.6310549355580406e-08, 1.3669938958571493e-08, 7.14070802487754e-09, 6.765097815275567e-09, 2.6596611135687453e-08, 0.0002738744660746306, 1.3991878233809985e-07, 1.2766477084369399e-06, 6.839521660140235e-08, 6.501998495167527e-09, 5.86205661790018e-09, 4.6909402584560667e-08, 1.0397101846137957e-08, 6.92550106151657e-09, 2.3988595554413905e-09, 2.0111760932195466e-06, 2.3858062192516627e-08, 2.660882625349359e-09, 7.309417959788789e-09, 0.00010994670446962118, 6.145002373614261e-08, 3.442895035732363e-08, 1.74903220795386e-08, 1.0002591643853975e-08, 1.4872808762333989e-08, 1.881340239151541e-08, 9.70352065365887e-09, 6.2387819355080865e-09, 2.8408213559316664e-09, 2.275640476057106e-08, 6.811998787270568e-08, 3.6442276041270816e-07, 1.2039342323078017e-07, 0.0010850296821445227, 5.13616384978377e-08, 3.798563952273071e-08]], "pointer": [[0.0, 0.0, 0.0, 0.0, 0.0, 5.187603528611362e-05, 0.0, 0.0010815751738846302, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.8663162589073181, 0.0, 1.8345308490097523e-05, 0.0, 0.0019416112918406725, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0012908694334328175, 0.0, 3.429352364037186e-05, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 3.533140625222586e-05, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.10713078081607819, 0.0, 1.2559533388412092e-05, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 2.625916522447369e-06, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.021350057795643806, 0.0, 1.0493862646399066e-05, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 2.6699153750087135e-06, 0.0, 0.0, 0.0, 0.00014534321962855756, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0005752998404204845, 0.0, 0.0]], "target": [0.9968840479850769]}, "loss": [7.213031768798828, 0.0031208167783915997], "acc": [0.0, 0.0, 1.0, 0.0]}, "wrong_error_location": [24]}


Trace of simplified code(s):

{"result": {"time": "2021-02-21 07:31:44.071539", "n_pass": [1, 1, 1], "n_token": 93, "loss": [0.0581665076315403, 0.0031208167783915997], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "@", "classmethod", "#NEWLINE#", "def unit_attname(", "cls", ",", "unit_str", ")", ":", "#NEWLINE#", "#INDENT#", "\"\\n        Retrieves the unit attribute name for the given unit string.\\n        For example, if the given unit string is 'metre', 'm' would be returned.\\n        An exception is raised if an attribute cannot be found.\\n        \"", "#NEWLINE#", "lower", "=", "unit_str", ".", "lower", "(", ")", "#NEWLINE#", "if", "(", "unit_str", "in", "cls", ".", "UNITS", ")", ":", "#NEWLINE#", "#INDENT#", "return", "unit_str", "#NEWLINE#", "#UNINDENT#", "else", ":", "#NEWLINE#", "#INDENT#", "if", "(", "lower", "in", "cls", ".", "UNITS", ")", ":", "#NEWLINE#", "#INDENT#", "return", "unit_str", "#NEWLINE#", "#UNINDENT#", "else", ":", "#NEWLINE#", "#INDENT#", "if", "(", "lower", "in", "cls", ".", "LALIAS", ")", ":", "#NEWLINE#", "#INDENT#", "return", "cls", ".", "LALIAS", "[", "lower", "]", "#NEWLINE#", "#UNINDENT#", "else", ":", "#NEWLINE#", "#INDENT#", "raise", "Exception", "(", "(", "'Could not find a unit keyword associated with \"%s\"'", "%", "unit_str", ")", ")"]}}
{"position": {"error_location": 24, "repair_targets": [14, 18, 43, 62, 76], "repair_candidates": [7, 16, 24, 34, 53, 90, 5, 26, 45, 64, 72, 14, 18, 43, 62, 76]}}
{"prediction": {"error_location": 0.9434928297996521, "repair_targets": [0.8663162589073181, 0.0019416112918406725, 0.10713078081607819, 0.021350057795643806, 0.00014534321962855756], "repair_candidates": [5.187603528611362e-05, 0.0010815751738846302, 0.8663162589073181, 1.8345308490097523e-05, 0.0019416112918406725, 0.0012908694334328175, 3.429352364037186e-05, 3.533140625222586e-05, 0.10713078081607819, 1.2559533388412092e-05, 2.625916522447369e-06, 0.021350057795643806, 1.0493862646399066e-05, 2.6699153750087135e-06, 0.00014534321962855756, 0.0005752998404204845], "target_probs": 0.9968840479850769}}


{"result": {"time": "2021-02-21 07:31:44.131606", "n_pass": [44, 2, 2], "n_token": 88, "loss": [0.02742229960858822, 0.003806973807513714], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["cls", ",", "unit_str", ")", ":", "#NEWLINE#", "#INDENT#", "\"\\n        Retrieves the unit attribute name for the given unit string.\\n        For example, if the given unit string is 'metre', 'm' would be returned.\\n        An exception is raised if an attribute cannot be found.\\n        \"", "#NEWLINE#", "lower", "=", "unit_str", ".", "lower", "(", ")", "#NEWLINE#", "if", "(", "unit_str", "in", "cls", ".", "UNITS", ")", ":", "#NEWLINE#", "#INDENT#", "return", "unit_str", "#NEWLINE#", "#UNINDENT#", "else", ":", "#NEWLINE#", "#INDENT#", "if", "(", "lower", "in", "cls", ".", "UNITS", ")", ":", "#NEWLINE#", "#INDENT#", "return", "unit_str", "#NEWLINE#", "#UNINDENT#", "else", ":", "#NEWLINE#", "#INDENT#", "if", "(", "lower", "in", "cls", ".", "LALIAS", ")", ":", "#NEWLINE#", "#INDENT#", "return", "cls", ".", "LALIAS", "[", "lower", "]", "#NEWLINE#", "#UNINDENT#", "else", ":", "#NEWLINE#", "#INDENT#", "raise", "Exception", "(", "(", "'Could not find a unit keyword associated with \"%s\"'", "%", "unit_str", ")", ")"]}}
{"position": {"error_location": 19, "repair_targets": [9, 13, 38, 57, 71], "repair_candidates": [2, 11, 19, 29, 48, 85, 0, 21, 40, 59, 67, 9, 13, 38, 57, 71]}}
{"prediction": {"error_location": 0.972950279712677, "repair_targets": [0.9809081554412842, 0.0027771752793341875, 0.01119790505617857, 0.0012056570267304778, 0.00011140029528178275], "repair_candidates": [0.0017254131380468607, 0.0015891953371465206, 0.9809081554412842, 2.137750470865285e-06, 0.0027771752793341875, 0.00032817956525832415, 4.420170625962783e-06, 5.3045137065055314e-06, 0.01119790505617857, 2.617168502183631e-05, 2.714062020459096e-06, 0.0012056570267304778, 6.1997184275242034e-06, 2.168509809052921e-06, 0.00011140029528178275, 0.00010780864977277815], "target_probs": 0.9962002635002136}}


{"result": {"time": "2021-02-21 07:31:44.190231", "n_pass": [49, 3, 3], "n_token": 82, "loss": [0.09327257424592972, 0.005642388015985489], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["cls", ",", "unit_str", ")", ":", "#NEWLINE#", "#INDENT#", "\"\\n        Retrieves the unit attribute name for the given unit string.\\n        For example, if the given unit string is 'metre', 'm' would be returned.\\n        An exception is raised if an attribute cannot be found.\\n        \"", "#NEWLINE#", "lower", "=", "unit_str", ".", "lower", "(", ")", "#NEWLINE#", "if", "(", "unit_str", "in", "cls", "return", "unit_str", "#NEWLINE#", "#UNINDENT#", "else", ":", "#NEWLINE#", "#INDENT#", "if", "(", "lower", "in", "cls", ".", "UNITS", ")", ":", "#NEWLINE#", "#INDENT#", "return", "unit_str", "#NEWLINE#", "#UNINDENT#", "else", ":", "#NEWLINE#", "#INDENT#", "if", "(", "lower", "in", "cls", ".", "LALIAS", ")", ":", "#NEWLINE#", "#INDENT#", "return", "cls", ".", "LALIAS", "[", "lower", "]", "#NEWLINE#", "#UNINDENT#", "else", ":", "#NEWLINE#", "#INDENT#", "raise", "Exception", "(", "(", "'Could not find a unit keyword associated with \"%s\"'", "%", "unit_str", ")", ")"]}}
{"position": {"error_location": 19, "repair_targets": [9, 13, 32, 51, 65], "repair_candidates": [2, 11, 19, 23, 42, 79, 0, 21, 34, 53, 61, 9, 13, 32, 51, 65]}}
{"prediction": {"error_location": 0.9109450578689575, "repair_targets": [0.8104398250579834, 0.07555548846721649, 0.10744524747133255, 0.0007791518582962453, 0.0001537838688818738], "repair_candidates": [0.0016838269075378776, 0.0029077178332954645, 0.8104398250579834, 3.762611413549166e-06, 0.07555548846721649, 5.65772206755355e-05, 1.3435024811769836e-05, 3.331456639443786e-07, 0.10744524747133255, 0.0004165562568232417, 9.283273357141297e-06, 0.0007791518582962453, 1.2457704769985867e-06, 2.2406307209621446e-07, 0.0001537838688818738, 0.0005336101166903973], "target_probs": 0.9943735003471375}}


{"result": {"time": "2021-02-21 07:31:44.250686", "n_pass": [58, 4, 4], "n_token": 76, "loss": [0.09446518868207932, 0.0055707599967718124], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["cls", ",", "unit_str", ")", ":", "#NEWLINE#", "#INDENT#", "\"\\n        Retrieves the unit attribute name for the given unit string.\\n        For example, if the given unit string is 'metre', 'm' would be returned.\\n        An exception is raised if an attribute cannot be found.\\n        \"", "#NEWLINE#", "lower", "=", "unit_str", ".", "lower", "(", ")", "#NEWLINE#", "if", "(", "unit_str", "in", "cls", "return", "unit_str", "#NEWLINE#", "#UNINDENT#", "else", ":", "#NEWLINE#", "#INDENT#", "if", "(", "lower", "in", "cls", ".", "UNITS", ")", ":", "#NEWLINE#", "#INDENT#", "return", "unit_str", "#NEWLINE#", "#UNINDENT#", "else", ":", "#NEWLINE#", "#INDENT#", "if", "(", "lower", "in", "cls", ".", "LALIAS", ")", ":", "#NEWLINE#", "#INDENT#", "return", "cls", ".", "LALIAS", "[", "lower", "]", "#NEWLINE#", "#UNINDENT#", "else", "(", "'Could not find a unit keyword associated with \"%s\"'", "%", "unit_str", ")", ")"]}}
{"position": {"error_location": 19, "repair_targets": [9, 13, 32, 51, 65], "repair_candidates": [2, 11, 19, 23, 42, 73, 0, 21, 34, 53, 61, 9, 13, 32, 51, 65]}}
{"prediction": {"error_location": 0.9098594188690186, "repair_targets": [0.7496193647384644, 0.07101179659366608, 0.17279958724975586, 0.0007986279670149088, 0.0002153266395907849], "repair_candidates": [0.001852555898949504, 0.0031670352909713984, 0.7496193647384644, 4.675425316236215e-06, 0.07101179659366608, 9.675543697085232e-05, 1.503594103269279e-05, 2.975285724460264e-07, 0.17279958724975586, 0.00029780578915961087, 8.036808139877394e-06, 0.0007986279670149088, 2.8548677164508263e-06, 2.525585784951545e-07, 0.0002153266395907849, 0.00010996771015925333], "target_probs": 0.994444727897644}}


{"result": {"time": "2021-02-21 07:31:44.309918", "n_pass": [98, 5, 5], "n_token": 73, "loss": [0.090201735496521, 0.005090535152703524], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["cls", ",", "unit_str", ")", ":", "#NEWLINE#", "#INDENT#", "\"\\n        Retrieves the unit attribute name for the given unit string.\\n        For example, if the given unit string is 'metre', 'm' would be returned.\\n        An exception is raised if an attribute cannot be found.\\n        \"", "#NEWLINE#", "lower", "=", "unit_str", ".", "lower", "(", ")", "#NEWLINE#", "if", "(", "unit_str", "in", "cls", "return", "unit_str", "#NEWLINE#", "#UNINDENT#", "else", ":", "#NEWLINE#", "#INDENT#", "if", "(", "lower", "in", "cls", ".", "UNITS", ")", ":", "#NEWLINE#", "#INDENT#", "return", "unit_str", "#NEWLINE#", "#UNINDENT#", "else", ":", "#NEWLINE#", "#INDENT#", "if", "(", "lower", "in", "cls", ".", "LALIAS", ")", ":", "#NEWLINE#", "#INDENT#", "return", "cls", ".", "LALIAS", "[", "lower", "]", "#NEWLINE#", "#UNINDENT#", "else", "unit_str", ")", ")"]}}
{"position": {"error_location": 19, "repair_targets": [9, 13, 32, 51, 65], "repair_candidates": [2, 11, 19, 23, 42, 70, 0, 21, 34, 53, 61, 9, 13, 32, 51, 65]}}
{"prediction": {"error_location": 0.9137468338012695, "repair_targets": [0.7437305450439453, 0.08508380502462387, 0.16506245732307434, 0.0009332975605502725, 0.00011231194366700947], "repair_candidates": [0.001858407980762422, 0.002687613945454359, 0.7437305450439453, 3.4117172162950737e-06, 0.08508380502462387, 5.800354483653791e-05, 6.9444026848941576e-06, 1.5848831935727503e-07, 0.16506245732307434, 0.0003022072487510741, 8.5027086242917e-06, 0.0009332975605502725, 3.870918590109795e-06, 1.4532876946304896e-07, 0.00011231194366700947, 0.00014845917758066207], "target_probs": 0.994922399520874}}


{"result": {"time": "2021-02-21 07:31:44.368137", "n_pass": [101, 6, 6], "n_token": 70, "loss": [0.24086733162403107, 0.0020196554251015186], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["cls", ",", "unit_str", ")", "\"\\n        Retrieves the unit attribute name for the given unit string.\\n        For example, if the given unit string is 'metre', 'm' would be returned.\\n        An exception is raised if an attribute cannot be found.\\n        \"", "#NEWLINE#", "lower", "=", "unit_str", ".", "lower", "(", ")", "#NEWLINE#", "if", "(", "unit_str", "in", "cls", "return", "unit_str", "#NEWLINE#", "#UNINDENT#", "else", ":", "#NEWLINE#", "#INDENT#", "if", "(", "lower", "in", "cls", ".", "UNITS", ")", ":", "#NEWLINE#", "#INDENT#", "return", "unit_str", "#NEWLINE#", "#UNINDENT#", "else", ":", "#NEWLINE#", "#INDENT#", "if", "(", "lower", "in", "cls", ".", "LALIAS", ")", ":", "#NEWLINE#", "#INDENT#", "return", "cls", ".", "LALIAS", "[", "lower", "]", "#NEWLINE#", "#UNINDENT#", "else", "unit_str", ")", ")"]}}
{"position": {"error_location": 16, "repair_targets": [6, 10, 29, 48, 62], "repair_candidates": [2, 8, 16, 20, 39, 67, 0, 18, 31, 50, 58, 6, 10, 29, 48, 62]}}
{"prediction": {"error_location": 0.7859458327293396, "repair_targets": [0.9186628460884094, 0.01792638562619686, 0.060870662331581116, 0.0004383952764328569, 8.409310248680413e-05], "repair_candidates": [0.0005139422719366848, 0.0013231374323368073, 0.9186628460884094, 1.0500444886929472e-06, 0.01792638562619686, 2.7276282708044164e-05, 8.80214656717726e-07, 2.867079196278155e-08, 0.060870662331581116, 5.533718194783432e-06, 4.283897396817338e-06, 0.0004383952764328569, 1.5105161992323701e-06, 1.2543511118678907e-08, 8.409310248680413e-05, 0.0001399069733452052], "target_probs": 0.997982382774353}}


{"result": {"time": "2021-02-21 07:31:44.484594", "n_pass": [108, 8, 7], "n_token": 67, "loss": [0.2753828763961792, 0.001035511028021574], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["cls", ",", "unit_str", ")", "\"\\n        Retrieves the unit attribute name for the given unit string.\\n        For example, if the given unit string is 'metre', 'm' would be returned.\\n        An exception is raised if an attribute cannot be found.\\n        \"", "#NEWLINE#", "lower", "=", "unit_str", ".", "lower", "(", ")", "#NEWLINE#", "if", "(", "unit_str", "in", "cls", "return", "unit_str", "#NEWLINE#", "#NEWLINE#", "#INDENT#", "if", "(", "lower", "in", "cls", ".", "UNITS", ")", ":", "#NEWLINE#", "#INDENT#", "return", "unit_str", "#NEWLINE#", "#UNINDENT#", "else", ":", "#NEWLINE#", "#INDENT#", "if", "(", "lower", "in", "cls", ".", "LALIAS", ")", ":", "#NEWLINE#", "#INDENT#", "return", "cls", ".", "LALIAS", "[", "lower", "]", "#NEWLINE#", "#UNINDENT#", "else", "unit_str", ")", ")"]}}
{"position": {"error_location": 16, "repair_targets": [6, 10, 26, 45, 59], "repair_candidates": [2, 8, 16, 20, 36, 64, 0, 18, 28, 47, 55, 6, 10, 26, 45, 59]}}
{"prediction": {"error_location": 0.7592812776565552, "repair_targets": [0.9836930632591248, 0.011791967786848545, 0.0033453216310590506, 0.00010941482469206676, 2.526279422454536e-05], "repair_candidates": [0.00034757834509946406, 0.0005900406977161765, 0.9836930632591248, 1.636700403651048e-06, 0.011791967786848545, 1.1562575309653766e-05, 1.2014162393825245e-06, 4.8186429069119185e-08, 0.0033453216310590506, 2.794799456751207e-06, 9.499911357124802e-06, 0.00010941482469206676, 1.5138795106395264e-06, 6.284368581077615e-09, 2.526279422454536e-05, 6.915299309184775e-05], "target_probs": 0.9989650249481201}}


{"result": {"time": "2021-02-21 07:31:44.541831", "n_pass": [109, 9, 8], "n_token": 64, "loss": [0.16394485533237457, 0.0011859412770718336], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["cls", ",", "unit_str", ")", "\"\\n        Retrieves the unit attribute name for the given unit string.\\n        For example, if the given unit string is 'metre', 'm' would be returned.\\n        An exception is raised if an attribute cannot be found.\\n        \"", "#NEWLINE#", "lower", "=", "unit_str", ".", "lower", "(", ")", "#NEWLINE#", "if", "(", "unit_str", "in", "cls", "return", "unit_str", "#NEWLINE#", "(", "lower", "in", "cls", ".", "UNITS", ")", ":", "#NEWLINE#", "#INDENT#", "return", "unit_str", "#NEWLINE#", "#UNINDENT#", "else", ":", "#NEWLINE#", "#INDENT#", "if", "(", "lower", "in", "cls", ".", "LALIAS", ")", ":", "#NEWLINE#", "#INDENT#", "return", "cls", ".", "LALIAS", "[", "lower", "]", "#NEWLINE#", "#UNINDENT#", "else", "unit_str", ")", ")"]}}
{"position": {"error_location": 16, "repair_targets": [6, 10, 23, 42, 56], "repair_candidates": [2, 8, 16, 20, 33, 61, 0, 18, 25, 44, 52, 6, 10, 23, 42, 56]}}
{"prediction": {"error_location": 0.8487887382507324, "repair_targets": [0.9758185148239136, 0.01650809496641159, 0.005722159519791603, 0.0007231038180179894, 4.2897063394775614e-05], "repair_candidates": [0.0004388726956676692, 0.0006153701688162982, 0.9758185148239136, 2.570691094661015e-06, 0.01650809496641159, 2.7517080525285564e-05, 7.468260719178943e-06, 5.550150916633356e-08, 0.005722159519791603, 9.53341350395931e-06, 1.9144472389598377e-05, 0.0007231038180179894, 4.3383865886426065e-06, 9.54465040337027e-09, 4.2897063394775614e-05, 6.041591404937208e-05], "target_probs": 0.9988147616386414}}


{"result": {"time": "2021-02-21 07:31:44.599211", "n_pass": [112, 10, 9], "n_token": 61, "loss": [0.19266986846923828, 0.0010716695105656981], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["cls", ",", "unit_str", ")", "\"\\n        Retrieves the unit attribute name for the given unit string.\\n        For example, if the given unit string is 'metre', 'm' would be returned.\\n        An exception is raised if an attribute cannot be found.\\n        \"", "#NEWLINE#", "lower", "=", "unit_str", ".", "lower", "(", ")", "#NEWLINE#", "if", "(", "unit_str", "in", "cls", "return", "unit_str", "#NEWLINE#", "(", "lower", "in", "cls", ".", "UNITS", "#INDENT#", "return", "unit_str", "#NEWLINE#", "#UNINDENT#", "else", ":", "#NEWLINE#", "#INDENT#", "if", "(", "lower", "in", "cls", ".", "LALIAS", ")", ":", "#NEWLINE#", "#INDENT#", "return", "cls", ".", "LALIAS", "[", "lower", "]", "#NEWLINE#", "#UNINDENT#", "else", "unit_str", ")", ")"]}}
{"position": {"error_location": 16, "repair_targets": [6, 10, 23, 39, 53], "repair_candidates": [2, 8, 16, 20, 30, 58, 0, 18, 25, 41, 49, 6, 10, 23, 39, 53]}}
{"prediction": {"error_location": 0.8247541189193726, "repair_targets": [0.9797723293304443, 0.013851411640644073, 0.00429270276799798, 0.0009914552792906761, 2.0964300347259268e-05], "repair_candidates": [0.0004094596079085022, 0.0005645436467602849, 0.9797723293304443, 2.1440680484374752e-06, 0.013851411640644073, 2.404348379059229e-05, 4.300518412492238e-06, 3.140968729553606e-08, 0.00429270276799798, 5.0162584557256196e-06, 1.5178736248344649e-05, 0.0009914552792906761, 3.127598802166176e-06, 5.2602104894106105e-09, 2.0964300347259268e-05, 4.3225474655628204e-05], "target_probs": 0.9989289045333862}}


{"result": {"time": "2021-02-21 07:31:44.657113", "n_pass": [114, 11, 10], "n_token": 58, "loss": [0.5468220114707947, 0.0071269916370511055], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["cls", ",", "unit_str", ")", "\"\\n        Retrieves the unit attribute name for the given unit string.\\n        For example, if the given unit string is 'metre', 'm' would be returned.\\n        An exception is raised if an attribute cannot be found.\\n        \"", "#NEWLINE#", "lower", "=", "unit_str", ".", "lower", "(", ")", "#NEWLINE#", "if", "(", "unit_str", "in", "cls", "return", "unit_str", "#NEWLINE#", "(", "lower", "in", "cls", ".", "UNITS", "#INDENT#", "return", "unit_str", ":", "#NEWLINE#", "#INDENT#", "if", "(", "lower", "in", "cls", ".", "LALIAS", ")", ":", "#NEWLINE#", "#INDENT#", "return", "cls", ".", "LALIAS", "[", "lower", "]", "#NEWLINE#", "#UNINDENT#", "else", "unit_str", ")", ")"]}}
{"position": {"error_location": 16, "repair_targets": [6, 10, 23, 36, 50], "repair_candidates": [2, 8, 16, 20, 30, 55, 0, 18, 25, 38, 46, 6, 10, 23, 36, 50]}}
{"prediction": {"error_location": 0.5787861943244934, "repair_targets": [0.9019104838371277, 0.08138324320316315, 0.006548556964844465, 0.0027262333314865828, 0.0003298324008937925], "repair_candidates": [0.003210384864360094, 0.003358482150360942, 0.9019104838371277, 3.476308847893961e-05, 0.08138324320316315, 8.852818427840248e-05, 6.801772542530671e-05, 2.278216726381288e-07, 0.006548556964844465, 3.1109349947655573e-05, 0.00016972993034869432, 0.0027262333314865828, 1.583422090334352e-05, 6.630147453279278e-08, 0.0003298324008937925, 0.0001244506856892258], "target_probs": 0.9928983449935913}}


{"result": {"time": "2021-02-21 07:31:44.715136", "n_pass": [115, 12, 11], "n_token": 55, "loss": [0.5627248287200928, 0.00656279968097806], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["cls", ",", "unit_str", ")", "\"\\n        Retrieves the unit attribute name for the given unit string.\\n        For example, if the given unit string is 'metre', 'm' would be returned.\\n        An exception is raised if an attribute cannot be found.\\n        \"", "#NEWLINE#", "lower", "=", "unit_str", ".", "lower", "(", ")", "#NEWLINE#", "if", "(", "unit_str", "in", "cls", "return", "unit_str", "#NEWLINE#", "(", "lower", "in", "cls", ".", "UNITS", "#INDENT#", "return", "unit_str", "if", "(", "lower", "in", "cls", ".", "LALIAS", ")", ":", "#NEWLINE#", "#INDENT#", "return", "cls", ".", "LALIAS", "[", "lower", "]", "#NEWLINE#", "#UNINDENT#", "else", "unit_str", ")", ")"]}}
{"position": {"error_location": 16, "repair_targets": [6, 10, 23, 33, 47], "repair_candidates": [2, 8, 16, 20, 30, 52, 0, 18, 25, 35, 43, 6, 10, 23, 33, 47]}}
{"prediction": {"error_location": 0.569654643535614, "repair_targets": [0.9150865077972412, 0.05895581096410751, 0.006331619340926409, 0.012661540880799294, 0.000423206714913249], "repair_candidates": [0.0032831314019858837, 0.00293909152969718, 0.9150865077972412, 2.635315468069166e-05, 0.05895581096410751, 7.289466157089919e-05, 2.2700340196024626e-05, 2.9057164852019923e-07, 0.006331619340926409, 7.177243332989747e-06, 4.9104095523944125e-05, 0.012661540880799294, 1.2630051969608758e-05, 5.807189040751837e-08, 0.000423206714913249, 0.0001279968419112265], "target_probs": 0.9934586882591248}}


{"result": {"time": "2021-02-21 07:31:44.772599", "n_pass": [118, 13, 12], "n_token": 52, "loss": [0.40981537103652954, 0.007951857522130013], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["cls", ",", "unit_str", ")", "\"\\n        Retrieves the unit attribute name for the given unit string.\\n        For example, if the given unit string is 'metre', 'm' would be returned.\\n        An exception is raised if an attribute cannot be found.\\n        \"", "#NEWLINE#", "lower", "=", "unit_str", ".", "lower", "(", ")", "#NEWLINE#", "if", "(", "unit_str", "in", "cls", "return", "unit_str", "#NEWLINE#", "(", "lower", "in", "cls", ".", "UNITS", "#INDENT#", "return", "unit_str", "if", "(", "lower", "in", "cls", ".", "#NEWLINE#", "#INDENT#", "return", "cls", ".", "LALIAS", "[", "lower", "]", "#NEWLINE#", "#UNINDENT#", "else", "unit_str", ")", ")"]}}
{"position": {"error_location": 16, "repair_targets": [6, 10, 23, 33, 44], "repair_candidates": [2, 8, 16, 20, 30, 49, 0, 18, 25, 35, 40, 6, 10, 23, 33, 44]}}
{"prediction": {"error_location": 0.6637727618217468, "repair_targets": [0.9185732007026672, 0.054978951811790466, 0.005732153542339802, 0.012362432666122913, 0.0004328767827246338], "repair_candidates": [0.0035923898685723543, 0.0039587728679180145, 0.9185732007026672, 2.7131818569614552e-05, 0.054978951811790466, 5.581691220868379e-05, 3.7641188100678846e-05, 2.6870608849094424e-07, 0.005732153542339802, 2.996292823809199e-05, 8.453007467323914e-05, 0.012362432666122913, 1.7158659829874523e-05, 1.1484401341022021e-07, 0.0004328767827246338, 0.00011658466974040493], "target_probs": 0.9920796751976013}}


{"result": {"time": "2021-02-21 07:31:44.832985", "n_pass": [119, 14, 13], "n_token": 49, "loss": [0.2800343930721283, 0.00781464297324419], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["cls", ",", "unit_str", ")", "\"\\n        Retrieves the unit attribute name for the given unit string.\\n        For example, if the given unit string is 'metre', 'm' would be returned.\\n        An exception is raised if an attribute cannot be found.\\n        \"", "#NEWLINE#", "lower", "=", "unit_str", ".", "lower", "(", ")", "#NEWLINE#", "if", "(", "unit_str", "in", "cls", "return", "unit_str", "#NEWLINE#", "(", "lower", "in", "cls", ".", "UNITS", "#INDENT#", "return", "unit_str", "if", "(", "lower", "in", "cls", ".", "cls", ".", "LALIAS", "[", "lower", "]", "#NEWLINE#", "#UNINDENT#", "else", "unit_str", ")", ")"]}}
{"position": {"error_location": 16, "repair_targets": [6, 10, 23, 33, 41], "repair_candidates": [2, 8, 16, 20, 30, 46, 0, 18, 25, 35, 37, 6, 10, 23, 33, 41]}}
{"prediction": {"error_location": 0.755757749080658, "repair_targets": [0.9229695200920105, 0.06169559061527252, 0.004110494628548622, 0.002491531427949667, 0.0009486695053055882], "repair_candidates": [0.004434328060597181, 0.0020568184554576874, 0.9229695200920105, 3.946149081457406e-05, 0.06169559061527252, 8.094641816569492e-05, 0.0008522922289557755, 7.572990625703824e-07, 0.004110494628548622, 2.0011331798741594e-05, 3.699121589306742e-05, 0.002491531427949667, 1.5378687749034725e-05, 0.00011655337584670633, 0.0009486695053055882, 0.0001306056947214529], "target_probs": 0.9922158122062683}}


{"result": {"time": "2021-02-21 07:31:44.890230", "n_pass": [122, 15, 14], "n_token": 46, "loss": [0.32072168588638306, 0.021946731954813004], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["cls", ",", "unit_str", ")", "\"\\n        Retrieves the unit attribute name for the given unit string.\\n        For example, if the given unit string is 'metre', 'm' would be returned.\\n        An exception is raised if an attribute cannot be found.\\n        \"", "#NEWLINE#", "lower", "=", "unit_str", ".", "lower", "(", ")", "#NEWLINE#", "if", "(", "unit_str", "in", "cls", "return", "unit_str", "#NEWLINE#", "(", "lower", "in", "cls", ".", "UNITS", "#INDENT#", "return", "unit_str", "if", "(", "lower", "in", "cls", ".", "cls", ".", "LALIAS", "[", "lower", "]", "unit_str", ")", ")"]}}
{"position": {"error_location": 16, "repair_targets": [6, 10, 23, 33, 41], "repair_candidates": [2, 8, 16, 20, 30, 43, 0, 18, 25, 35, 37, 6, 10, 23, 33, 41]}}
{"prediction": {"error_location": 0.7256250977516174, "repair_targets": [0.8871745467185974, 0.05666908994317055, 0.015705376863479614, 0.010519484058022499, 0.008223776705563068], "repair_candidates": [0.010787079110741615, 0.005039595998823643, 0.8871745467185974, 0.00019746090401895344, 0.05666908994317055, 0.0006396708195097744, 0.0035106989089399576, 6.660423423454631e-06, 0.015705376863479614, 9.067540668183938e-05, 5.9858641179744154e-05, 0.010519484058022499, 2.7063098968937993e-05, 0.0011962774442508817, 0.008223776705563068, 0.00015269733557943255], "target_probs": 0.9782923460006714}}


{"result": {"time": "2021-02-21 07:31:45.005966", "n_pass": [172, 17, 15], "n_token": 44, "loss": [0.5788393616676331, 0.033164337277412415], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["cls", ",", "unit_str", ")", "\"\\n        Retrieves the unit attribute name for the given unit string.\\n        For example, if the given unit string is 'metre', 'm' would be returned.\\n        An exception is raised if an attribute cannot be found.\\n        \"", "#NEWLINE#", "lower", "=", "unit_str", ".", "lower", "(", ")", "#NEWLINE#", "if", "(", "unit_str", "in", "cls", "return", "unit_str", "#NEWLINE#", "(", "lower", "in", "cls", ".", "UNITS", "#INDENT#", "return", "unit_str", "if", "(", "lower", "in", "cls", ".", "cls", ".", "LALIAS", "[", "lower", "]", "unit_str"]}}
{"position": {"error_location": 16, "repair_targets": [6, 10, 23, 33, 41], "repair_candidates": [2, 8, 16, 20, 30, 43, 0, 18, 25, 35, 37, 6, 10, 23, 33, 41]}}
{"prediction": {"error_location": 0.5605485439300537, "repair_targets": [0.8577175736427307, 0.08357865363359451, 0.013483724556863308, 0.007238890044391155, 0.005360731855034828], "repair_candidates": [0.018101027235388756, 0.006644729990512133, 0.8577175736427307, 0.00030361174140125513, 0.08357865363359451, 0.000838028674479574, 0.0038381197955459356, 4.826581971428823e-06, 0.013483724556863308, 0.0001504408282926306, 0.00011097689275629818, 0.007238890044391155, 3.691150413942523e-05, 0.0019652184564620256, 0.005360731855034828, 0.0006265797419473529], "target_probs": 0.9673795700073242}}


{"result": {"time": "2021-02-21 07:31:45.063055", "n_pass": [174, 18, 16], "n_token": 43, "loss": [0.6502988934516907, 0.23285242915153503], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["cls", "unit_str", ")", "\"\\n        Retrieves the unit attribute name for the given unit string.\\n        For example, if the given unit string is 'metre', 'm' would be returned.\\n        An exception is raised if an attribute cannot be found.\\n        \"", "#NEWLINE#", "lower", "=", "unit_str", ".", "lower", "(", ")", "#NEWLINE#", "if", "(", "unit_str", "in", "cls", "return", "unit_str", "#NEWLINE#", "(", "lower", "in", "cls", ".", "UNITS", "#INDENT#", "return", "unit_str", "if", "(", "lower", "in", "cls", ".", "cls", ".", "LALIAS", "[", "lower", "]", "unit_str"]}}
{"position": {"error_location": 15, "repair_targets": [5, 9, 22, 32, 40], "repair_candidates": [1, 7, 15, 19, 29, 42, 0, 17, 24, 34, 36, 5, 9, 22, 32, 40]}}
{"prediction": {"error_location": 0.5218898057937622, "repair_targets": [0.6750273108482361, 0.07447152584791183, 0.02166585624217987, 0.00724851805716753, 0.013857265934348106], "repair_candidates": [0.12217259407043457, 0.050980232656002045, 0.6750273108482361, 0.0016182393301278353, 0.07447152584791183, 0.004536153748631477, 0.01990608125925064, 3.461370579316281e-05, 0.02166585624217987, 0.0008195396512746811, 0.000167926395079121, 0.00724851805716753, 0.00031427235808223486, 0.006425249390304089, 0.013857265934348106, 0.0007546101696789265], "target_probs": 0.7922704815864563}}


{"result": {"time": "2021-02-21 07:31:45.122334", "n_pass": [176, 19, 17], "n_token": 42, "loss": [0.5342463850975037, 0.17061638832092285], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["cls", "unit_str", "\"\\n        Retrieves the unit attribute name for the given unit string.\\n        For example, if the given unit string is 'metre', 'm' would be returned.\\n        An exception is raised if an attribute cannot be found.\\n        \"", "#NEWLINE#", "lower", "=", "unit_str", ".", "lower", "(", ")", "#NEWLINE#", "if", "(", "unit_str", "in", "cls", "return", "unit_str", "#NEWLINE#", "(", "lower", "in", "cls", ".", "UNITS", "#INDENT#", "return", "unit_str", "if", "(", "lower", "in", "cls", ".", "cls", ".", "LALIAS", "[", "lower", "]", "unit_str"]}}
{"position": {"error_location": 14, "repair_targets": [4, 8, 21, 31, 39], "repair_candidates": [1, 6, 14, 18, 28, 41, 0, 16, 23, 33, 35, 4, 8, 21, 31, 39]}}
{"prediction": {"error_location": 0.5861108303070068, "repair_targets": [0.7499393224716187, 0.05525442957878113, 0.021481018513441086, 0.00743841752409935, 0.009031697176396847], "repair_candidates": [0.09087150543928146, 0.04363485425710678, 0.7499393224716187, 0.001198156620375812, 0.05525442957878113, 0.0032889959402382374, 0.01168776210397482, 2.1586880393442698e-05, 0.021481018513441086, 0.0004050536663271487, 9.686792327556759e-05, 0.00743841752409935, 0.00023014699399936944, 0.0049875653348863125, 0.009031697176396847, 0.0004326858907006681], "target_probs": 0.843144953250885}}


{"result": {"time": "2021-02-21 07:31:45.349793", "n_pass": [182, 23, 18], "n_token": 41, "loss": [0.3880186080932617, 0.08407168835401535], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["cls", "unit_str", "\"\\n        Retrieves the unit attribute name for the given unit string.\\n        For example, if the given unit string is 'metre', 'm' would be returned.\\n        An exception is raised if an attribute cannot be found.\\n        \"", "#NEWLINE#", "lower", "=", "unit_str", "lower", "(", ")", "#NEWLINE#", "if", "(", "unit_str", "in", "cls", "return", "unit_str", "#NEWLINE#", "(", "lower", "in", "cls", ".", "UNITS", "#INDENT#", "return", "unit_str", "if", "(", "lower", "in", "cls", ".", "cls", ".", "LALIAS", "[", "lower", "]", "unit_str"]}}
{"position": {"error_location": 13, "repair_targets": [4, 7, 20, 30, 38], "repair_candidates": [1, 6, 13, 17, 27, 40, 0, 15, 22, 32, 34, 4, 7, 20, 30, 38]}}
{"prediction": {"error_location": 0.6783997416496277, "repair_targets": [0.7191805243492126, 0.12587577104568481, 0.01934734545648098, 0.01774892397224903, 0.0372127965092659], "repair_candidates": [0.031675562262535095, 0.030588293448090553, 0.7191805243492126, 0.005983083043247461, 0.12587577104568481, 0.001111530582420528, 0.007551703602075577, 2.64344066636113e-06, 0.01934734545648098, 0.00045342830708250403, 5.410873200162314e-05, 0.01774892397224903, 0.00011359109339537099, 0.002649382222443819, 0.0372127965092659, 0.00045129499631002545], "target_probs": 0.9193653464317322}}


{"result": {"time": "2021-02-21 07:31:45.466526", "n_pass": [185, 25, 19], "n_token": 40, "loss": [0.4535054564476013, 0.07409927248954773], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["cls", "unit_str", "\"\\n        Retrieves the unit attribute name for the given unit string.\\n        For example, if the given unit string is 'metre', 'm' would be returned.\\n        An exception is raised if an attribute cannot be found.\\n        \"", "#NEWLINE#", "lower", "=", "unit_str", "lower", "(", "#NEWLINE#", "if", "(", "unit_str", "in", "cls", "return", "unit_str", "#NEWLINE#", "(", "lower", "in", "cls", ".", "UNITS", "#INDENT#", "return", "unit_str", "if", "(", "lower", "in", "cls", ".", "cls", ".", "LALIAS", "[", "lower", "]", "unit_str"]}}
{"position": {"error_location": 12, "repair_targets": [4, 7, 19, 29, 37], "repair_candidates": [1, 6, 12, 16, 26, 39, 0, 14, 21, 31, 33, 4, 7, 19, 29, 37]}}
{"prediction": {"error_location": 0.6353968977928162, "repair_targets": [0.7870622873306274, 0.09687156230211258, 0.008345497772097588, 0.00807209312915802, 0.02822808362543583], "repair_candidates": [0.0290458332747221, 0.028325999155640602, 0.7870622873306274, 0.004592797718942165, 0.09687156230211258, 0.0007143318653106689, 0.005951667204499245, 1.4262907370721223e-06, 0.008345497772097588, 0.00038499096990562975, 2.3035110643832013e-05, 0.00807209312915802, 8.483770216116682e-05, 0.0021152908448129892, 0.02822808362543583, 0.0001803898485377431], "target_probs": 0.9285795092582703}}


{"result": {"time": "2021-02-21 07:31:45.523349", "n_pass": [186, 26, 20], "n_token": 39, "loss": [0.923713207244873, 0.18298277258872986], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["cls", "unit_str", "\"\\n        Retrieves the unit attribute name for the given unit string.\\n        For example, if the given unit string is 'metre', 'm' would be returned.\\n        An exception is raised if an attribute cannot be found.\\n        \"", "#NEWLINE#", "lower", "=", "unit_str", "lower", "(", "if", "(", "unit_str", "in", "cls", "return", "unit_str", "#NEWLINE#", "(", "lower", "in", "cls", ".", "UNITS", "#INDENT#", "return", "unit_str", "if", "(", "lower", "in", "cls", ".", "cls", ".", "LALIAS", "[", "lower", "]", "unit_str"]}}
{"position": {"error_location": 11, "repair_targets": [4, 7, 18, 28, 36], "repair_candidates": [1, 6, 11, 15, 25, 38, 0, 13, 20, 30, 32, 4, 7, 18, 28, 36]}}
{"prediction": {"error_location": 0.39704200625419617, "repair_targets": [0.5496162176132202, 0.2734059691429138, 0.005788886919617653, 0.0015359082026407123, 0.0024354811757802963], "repair_candidates": [0.03539438918232918, 0.03466740623116493, 0.5496162176132202, 0.008775085210800171, 0.2734059691429138, 0.0016761866863816977, 0.06452900171279907, 1.5363550119218417e-05, 0.005788886919617653, 0.004283998627215624, 3.892340464517474e-05, 0.0015359082026407123, 0.00035995981306768954, 0.017395468428730965, 0.0024354811757802963, 8.172599336830899e-05], "target_probs": 0.832782506942749}}


{"result": {"time": "2021-02-21 07:31:45.809903", "n_pass": [196, 31, 21], "n_token": 37, "loss": [0.33033356070518494, 0.05068276450037956], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["cls", "unit_str", "\"\\n        Retrieves the unit attribute name for the given unit string.\\n        For example, if the given unit string is 'metre', 'm' would be returned.\\n        An exception is raised if an attribute cannot be found.\\n        \"", "#NEWLINE#", "lower", "=", "unit_str", "lower", "(", "if", "(", "unit_str", "in", "cls", "return", "unit_str", "#NEWLINE#", "(", "lower", "in", "cls", ".", "UNITS", "unit_str", "if", "(", "lower", "in", "cls", ".", "cls", ".", "LALIAS", "[", "lower", "]", "unit_str"]}}
{"position": {"error_location": 11, "repair_targets": [4, 7, 18, 26, 34], "repair_candidates": [1, 6, 11, 15, 23, 36, 0, 13, 20, 28, 30, 4, 7, 18, 26, 34]}}
{"prediction": {"error_location": 0.7186839580535889, "repair_targets": [0.7748591899871826, 0.17406697571277618, 0.00014843443932477385, 0.000536142208147794, 0.0009694402106106281], "repair_candidates": [0.015343792736530304, 0.025130895897746086, 0.7748591899871826, 0.0027416532393544912, 0.17406697571277618, 0.00015277310740202665, 0.0015341589460149407, 4.30199179390911e-06, 0.00014843443932477385, 0.0001091593221644871, 0.0006253293831832707, 0.000536142208147794, 6.20969440205954e-05, 0.0036501851864159107, 0.0009694402106106281, 6.545285577885807e-05], "target_probs": 0.9505801796913147}}


{"result": {"time": "2021-02-21 07:31:45.867350", "n_pass": [201, 32, 22], "n_token": 35, "loss": [0.3966226875782013, 0.051842886954545975], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["cls", "unit_str", "\"\\n        Retrieves the unit attribute name for the given unit string.\\n        For example, if the given unit string is 'metre', 'm' would be returned.\\n        An exception is raised if an attribute cannot be found.\\n        \"", "#NEWLINE#", "lower", "=", "unit_str", "lower", "(", "if", "(", "unit_str", "in", "cls", "return", "unit_str", "#NEWLINE#", "(", "lower", "in", "cls", ".", "UNITS", "unit_str", "if", "(", "lower", "in", "cls", ".", "cls", "[", "lower", "]", "unit_str"]}}
{"position": {"error_location": 11, "repair_targets": [4, 7, 18, 26, 32], "repair_candidates": [1, 6, 11, 15, 23, 34, 0, 13, 20, 28, 30, 4, 7, 18, 26, 32]}}
{"prediction": {"error_location": 0.6725876927375793, "repair_targets": [0.8232478499412537, 0.12529341876506805, 7.423215720336884e-05, 0.000666499137878418, 0.00019601617532316595], "repair_candidates": [0.011385342106223106, 0.023576896637678146, 0.8232478499412537, 0.0023387607652693987, 0.12529341876506805, 0.00017208969802595675, 0.0007166897412389517, 8.819108188617975e-06, 7.423215720336884e-05, 0.00014325676602311432, 0.0005922981654293835, 0.000666499137878418, 2.5502511562081054e-05, 0.011516133323311806, 0.00019601617532316595, 4.6263099648058414e-05], "target_probs": 0.949478030204773}}


{"result": {"time": "2021-02-21 07:31:45.925020", "n_pass": [206, 33, 23], "n_token": 34, "loss": [0.9158933758735657, 0.00622909190133214], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["cls", "unit_str", "#NEWLINE#", "lower", "=", "unit_str", "lower", "(", "if", "(", "unit_str", "in", "cls", "return", "unit_str", "#NEWLINE#", "(", "lower", "in", "cls", ".", "UNITS", "unit_str", "if", "(", "lower", "in", "cls", ".", "cls", "[", "lower", "]", "unit_str"]}}
{"position": {"error_location": 10, "repair_targets": [3, 6, 17, 25, 31], "repair_candidates": [1, 5, 10, 14, 22, 33, 0, 12, 19, 27, 29, 3, 6, 17, 25, 31]}}
{"prediction": {"error_location": 0.40015897154808044, "repair_targets": [0.9886964559555054, 0.005010698456317186, 1.0411851690150797e-05, 4.195380097371526e-05, 3.073160769417882e-05], "repair_candidates": [0.0007711866055615246, 0.0018324651755392551, 0.9886964559555054, 0.0006405719323083758, 0.005010698456317186, 0.00011544598964974284, 0.0004591434553731233, 6.147089607111411e-06, 1.0411851690150797e-05, 4.6225122787291184e-05, 0.00015406669990625232, 4.195380097371526e-05, 1.2072098797943909e-05, 0.002154925838112831, 3.073160769417882e-05, 1.758403959684074e-05], "target_probs": 0.9937902688980103}}


{"result": {"time": "2021-02-21 07:31:46.095048", "n_pass": [212, 36, 24], "n_token": 33, "loss": [0.8834069967269897, 0.0109205711632967], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["cls", "unit_str", "#NEWLINE#", "lower", "=", "unit_str", "lower", "if", "(", "unit_str", "in", "cls", "return", "unit_str", "#NEWLINE#", "(", "lower", "in", "cls", ".", "UNITS", "unit_str", "if", "(", "lower", "in", "cls", ".", "cls", "[", "lower", "]", "unit_str"]}}
{"position": {"error_location": 9, "repair_targets": [3, 6, 16, 24, 30], "repair_candidates": [1, 5, 9, 13, 21, 32, 0, 11, 18, 26, 28, 3, 6, 16, 24, 30]}}
{"prediction": {"error_location": 0.41337209939956665, "repair_targets": [0.985824704170227, 0.0032273996621370316, 2.223839874204714e-05, 3.3857162634376436e-05, 3.061424649786204e-05], "repair_candidates": [0.0009774576174095273, 0.0019591867458075285, 0.985824704170227, 0.000983556266874075, 0.0032273996621370316, 0.00047714821994304657, 0.0008818971109576523, 1.6847674487507902e-05, 2.223839874204714e-05, 8.255289139924571e-05, 0.0002822029055096209, 3.3857162634376436e-05, 2.091540227411315e-05, 0.005157650448381901, 3.061424649786204e-05, 2.1795543943881057e-05], "target_probs": 0.9891388416290283}}


{"result": {"time": "2021-02-21 07:31:46.609630", "n_pass": [261, 45, 25], "n_token": 32, "loss": [0.8462597727775574, 0.00494323018938303], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["cls", "unit_str", "#NEWLINE#", "lower", "=", "unit_str", "lower", "if", "(", "unit_str", "in", "cls", "return", "unit_str", "#NEWLINE#", "lower", "in", "cls", ".", "UNITS", "unit_str", "if", "(", "lower", "in", "cls", ".", "cls", "[", "lower", "]", "unit_str"]}}
{"position": {"error_location": 9, "repair_targets": [3, 6, 15, 23, 29], "repair_candidates": [1, 5, 9, 13, 20, 31, 0, 11, 17, 25, 27, 3, 6, 15, 23, 29]}}
{"prediction": {"error_location": 0.4290165901184082, "repair_targets": [0.9785304665565491, 0.016414625570178032, 6.907167698955163e-05, 3.4768472687574103e-05, 2.0013054381706752e-05], "repair_candidates": [0.00030127636273391545, 0.0012644593371078372, 0.9785304665565491, 0.0004557805077638477, 0.016414625570178032, 0.00027686249813996255, 0.00034815704566426575, 5.288930879032705e-06, 6.907167698955163e-05, 9.668950224295259e-05, 0.000178691087057814, 3.4768472687574103e-05, 4.666543645726051e-06, 0.00199206848628819, 2.0013054381706752e-05, 7.062147687975084e-06], "target_probs": 0.9950689673423767}}


{"result": {"time": "2021-02-21 07:31:46.780072", "n_pass": [265, 48, 26], "n_token": 31, "loss": [1.1034448146820068, 0.003991931676864624], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["cls", "unit_str", "#NEWLINE#", "lower", "=", "unit_str", "lower", "if", "(", "unit_str", "in", "cls", "return", "unit_str", "#NEWLINE#", "lower", "in", "cls", ".", "unit_str", "if", "(", "lower", "in", "cls", ".", "cls", "[", "lower", "]", "unit_str"]}}
{"position": {"error_location": 9, "repair_targets": [3, 6, 15, 22, 28], "repair_candidates": [1, 5, 9, 13, 19, 30, 0, 11, 17, 24, 26, 3, 6, 15, 22, 28]}}
{"prediction": {"error_location": 0.33172640204429626, "repair_targets": [0.9886077046394348, 0.007293923292309046, 5.9314046666258946e-05, 3.9496226236224174e-05, 1.557523683004547e-05], "repair_candidates": [0.0003302251279819757, 0.0016103682573884726, 0.9886077046394348, 0.000463667995063588, 0.007293923292309046, 0.00041891689761541784, 0.00021700894285459071, 7.026726052572485e-06, 5.9314046666258946e-05, 3.040388401132077e-05, 5.652218169416301e-05, 3.9496226236224174e-05, 1.8517786202210118e-06, 0.0008392644231207669, 1.557523683004547e-05, 8.898367013898678e-06], "target_probs": 0.9960160255432129}}


{"result": {"time": "2021-02-21 07:31:47.065264", "n_pass": [274, 53, 27], "n_token": 30, "loss": [0.7836456894874573, 0.008419152349233627], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["cls", "unit_str", "#NEWLINE#", "lower", "=", "unit_str", "lower", "if", "(", "unit_str", "in", "cls", "return", "unit_str", "#NEWLINE#", "lower", "in", "cls", ".", "unit_str", "if", "(", "lower", "in", "cls", ".", "cls", "lower", "]", "unit_str"]}}
{"position": {"error_location": 9, "repair_targets": [3, 6, 15, 22, 27], "repair_candidates": [1, 5, 9, 13, 19, 29, 0, 11, 17, 24, 26, 3, 6, 15, 22, 27]}}
{"prediction": {"error_location": 0.45673784613609314, "repair_targets": [0.9199692606925964, 0.06469395011663437, 0.0019967046100646257, 0.0006454136455431581, 0.004310920834541321], "repair_candidates": [0.0007948404527269304, 0.005434274673461914, 0.9199692606925964, 0.000643982260953635, 0.06469395011663437, 0.0005563298473134637, 0.0003244142571929842, 9.250095899915323e-06, 0.0019967046100646257, 6.714231858495623e-05, 9.085421334020793e-05, 0.0006454136455431581, 3.176108066327288e-06, 0.00043742646812461317, 0.004310920834541321, 2.2059282855479978e-05], "target_probs": 0.9916161894798279}}


{"result": {"time": "2021-02-21 07:31:47.122311", "n_pass": [276, 54, 28], "n_token": 29, "loss": [0.5789989829063416, 0.0108583252876997], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["cls", "unit_str", "#NEWLINE#", "lower", "=", "unit_str", "lower", "if", "(", "unit_str", "in", "cls", "return", "unit_str", "#NEWLINE#", "lower", "in", "cls", ".", "unit_str", "if", "(", "lower", "in", "cls", ".", "cls", "lower", "unit_str"]}}
{"position": {"error_location": 9, "repair_targets": [3, 6, 15, 22, 27], "repair_candidates": [1, 5, 9, 13, 19, 28, 0, 11, 17, 24, 26, 3, 6, 15, 22, 27]}}
{"prediction": {"error_location": 0.5604591369628906, "repair_targets": [0.9405908584594727, 0.04767580330371857, 0.00017201450827997178, 0.0006510213715955615, 0.00011071933840867132], "repair_candidates": [0.0019110891735181212, 0.00406020088121295, 0.9405908584594727, 0.002548584248870611, 0.04767580330371857, 0.000946530606597662, 0.0005978327826596797, 3.3669766708044335e-05, 0.00017201450827997178, 1.7979559743253049e-06, 0.0004101519880350679, 0.0006510213715955615, 6.129573648649966e-06, 0.00015282064850907773, 0.00011071933840867132, 0.00013070221757516265], "target_probs": 0.9892004132270813}}


{"result": {"time": "2021-02-21 07:31:47.693767", "n_pass": [298, 64, 29], "n_token": 28, "loss": [0.8250018358230591, 0.023589275777339935], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["cls", "unit_str", "#NEWLINE#", "lower", "=", "unit_str", "lower", "if", "(", "unit_str", "in", "cls", "return", "unit_str", "#NEWLINE#", "lower", "in", "cls", ".", "unit_str", "(", "lower", "in", "cls", ".", "cls", "lower", "unit_str"]}}
{"position": {"error_location": 9, "repair_targets": [3, 6, 15, 21, 26], "repair_candidates": [1, 5, 9, 13, 19, 27, 0, 11, 17, 23, 25, 3, 6, 15, 21, 26]}}
{"prediction": {"error_location": 0.43823421001434326, "repair_targets": [0.9523563385009766, 0.022795621305704117, 0.00041897682240232825, 0.0010577522916719317, 5.8119014283875003e-05], "repair_candidates": [0.0013677586102858186, 0.004946387838572264, 0.9523563385009766, 0.006176261231303215, 0.022795621305704117, 0.007662801072001457, 0.0009110020473599434, 0.0003760561812669039, 0.00041897682240232825, 6.4616660893079825e-06, 0.0014957176754251122, 0.0010577522916719317, 2.1259545974317007e-05, 0.00023873172176536173, 5.8119014283875003e-05, 0.00011070168693549931], "target_probs": 0.9766867756843567}}


{"result": {"time": "2021-02-21 07:31:47.750584", "n_pass": [299, 65, 30], "n_token": 27, "loss": [0.19152164459228516, 0.0061638387851417065], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["cls", "unit_str", "#NEWLINE#", "lower", "=", "unit_str", "lower", "if", "(", "unit_str", "in", "cls", "return", "unit_str", "#NEWLINE#", "lower", "in", "cls", ".", "unit_str", "lower", "in", "cls", ".", "cls", "lower", "unit_str"]}}
{"position": {"error_location": 9, "repair_targets": [3, 6, 15, 20, 25], "repair_candidates": [1, 5, 9, 13, 19, 26, 0, 11, 17, 22, 24, 3, 6, 15, 20, 25]}}
{"prediction": {"error_location": 0.8257017731666565, "repair_targets": [0.7782456874847412, 0.16535654664039612, 0.00014498182281386107, 0.050055500119924545, 5.2456933190114796e-05], "repair_candidates": [0.0010728143388405442, 0.0032290855888277292, 0.7782456874847412, 0.0014172729570418596, 0.16535654664039612, 8.037810039240867e-05, 9.552420669933781e-05, 7.276991254911991e-06, 0.00014498182281386107, 6.08930179168965e-07, 0.00017506534641142935, 0.050055500119924545, 5.310770575306378e-06, 1.5404053556267172e-05, 5.2456933190114796e-05, 4.6125176595523953e-05], "target_probs": 0.9938551187515259}}


{"result": {"time": "2021-02-21 07:31:47.807838", "n_pass": [301, 66, 31], "n_token": 26, "loss": [0.21277639269828796, 0.006722345016896725], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["cls", "unit_str", "#NEWLINE#", "lower", "=", "unit_str", "lower", "if", "(", "unit_str", "in", "cls", "return", "unit_str", "#NEWLINE#", "lower", "in", "cls", ".", "unit_str", "lower", "cls", ".", "cls", "lower", "unit_str"]}}
{"position": {"error_location": 9, "repair_targets": [3, 6, 15, 20, 24], "repair_candidates": [1, 5, 9, 13, 19, 25, 0, 11, 17, 21, 23, 3, 6, 15, 20, 24]}}
{"prediction": {"error_location": 0.8083367347717285, "repair_targets": [0.8025527596473694, 0.19027869403362274, 0.00013885657244827598, 0.0002893685596063733, 4.048026676173322e-05], "repair_candidates": [0.0013335755793377757, 0.003460959065705538, 0.8025527596473694, 0.0014025374548509717, 0.19027869403362274, 7.365964847849682e-05, 0.00017887204012367874, 1.2626774150703568e-05, 0.00013885657244827598, 2.090695488732308e-06, 0.00011469030869193375, 0.0002893685596063733, 5.1590221119113266e-05, 3.379844201845117e-05, 4.048026676173322e-05, 3.547895175870508e-05], "target_probs": 0.993300199508667}}


{"result": {"time": "2021-02-21 07:31:47.867569", "n_pass": [303, 67, 32], "n_token": 25, "loss": [0.1747758686542511, 0.009277931414544582], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["cls", "unit_str", "#NEWLINE#", "lower", "=", "unit_str", "lower", "if", "(", "unit_str", "in", "cls", "return", "unit_str", "#NEWLINE#", "lower", "in", "cls", ".", "unit_str", "lower", "cls", "cls", "lower", "unit_str"]}}
{"position": {"error_location": 9, "repair_targets": [3, 6, 15, 20, 23], "repair_candidates": [1, 5, 9, 13, 19, 24, 0, 11, 17, 21, 22, 3, 6, 15, 20, 23]}}
{"prediction": {"error_location": 0.8396450877189636, "repair_targets": [0.8525540828704834, 0.13775071501731873, 0.0002982143487315625, 0.00012372451601549983, 3.822749567916617e-05], "repair_candidates": [0.001366437878459692, 0.004688457120209932, 0.8525540828704834, 0.0022085474338382483, 0.13775071501731873, 0.00021120582823641598, 0.0003599279443733394, 3.632955485954881e-05, 0.0002982143487315625, 3.6911151255480945e-06, 0.0002501767303328961, 0.00012372451601549983, 3.541049954947084e-05, 3.333409404149279e-05, 3.822749567916617e-05, 4.1562765545677394e-05], "target_probs": 0.9907649755477905}}


{"result": {"time": "2021-02-21 07:31:48.266307", "n_pass": [321, 74, 33], "n_token": 24, "loss": [0.524405300617218, 0.010569864884018898], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["cls", "unit_str", "#NEWLINE#", "lower", "=", "unit_str", "lower", "if", "(", "unit_str", "in", "cls", "return", "unit_str", "lower", "in", "cls", ".", "unit_str", "lower", "cls", "cls", "lower", "unit_str"]}}
{"position": {"error_location": 9, "repair_targets": [3, 6, 14, 19, 22], "repair_candidates": [1, 5, 9, 13, 18, 23, 0, 11, 16, 20, 21, 3, 6, 14, 19, 22]}}
{"prediction": {"error_location": 0.5919073224067688, "repair_targets": [0.9125308990478516, 0.04912329092621803, 0.0270396638661623, 0.00048230125685222447, 0.0003096737782470882], "repair_candidates": [0.0013681064592674375, 0.0037664216943085194, 0.9125308990478516, 0.003691690042614937, 0.04912329092621803, 0.00017859108629636467, 0.0001410621771356091, 0.00028376129921525717, 0.0270396638661623, 0.00011824622197309509, 0.0005462787230499089, 0.00048230125685222447, 0.00013349296932574362, 0.0001968297437997535, 0.0003096737782470882, 8.978410915005952e-05], "target_probs": 0.9894858002662659}}


{"result": {"time": "2021-02-21 07:31:48.322739", "n_pass": [323, 75, 34], "n_token": 23, "loss": [0.4352577328681946, 0.015366899780929089], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["cls", "unit_str", "#NEWLINE#", "lower", "=", "unit_str", "lower", "if", "(", "unit_str", "in", "cls", "return", "unit_str", "lower", "cls", ".", "unit_str", "lower", "cls", "cls", "lower", "unit_str"]}}
{"position": {"error_location": 9, "repair_targets": [3, 6, 14, 18, 21], "repair_candidates": [1, 5, 9, 13, 17, 22, 0, 11, 15, 19, 20, 3, 6, 14, 18, 21]}}
{"prediction": {"error_location": 0.6470977663993835, "repair_targets": [0.9713209271430969, 0.011401118710637093, 0.0008271599072031677, 0.0007732627564109862, 0.0004281309375073761], "repair_candidates": [0.001805004896596074, 0.0036941615398973227, 0.9713209271430969, 0.005650059785693884, 0.011401118710637093, 0.0003473517135716975, 0.00035138503881171346, 0.0007678103283978999, 0.0008271599072031677, 0.0008561524446122348, 0.0007334487745538354, 0.0007732627564109862, 0.0004317979619372636, 0.0004342652391642332, 0.0004281309375073761, 0.00017802427464630455], "target_probs": 0.9847505688667297}}


{"result": {"time": "2021-02-21 07:31:48.379524", "n_pass": [325, 76, 35], "n_token": 22, "loss": [0.5499088764190674, 0.017292382195591927], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["cls", "unit_str", "#NEWLINE#", "lower", "=", "unit_str", "lower", "if", "(", "unit_str", "in", "cls", "return", "unit_str", "lower", "cls", "unit_str", "lower", "cls", "cls", "lower", "unit_str"]}}
{"position": {"error_location": 9, "repair_targets": [3, 6, 14, 17, 20], "repair_candidates": [1, 5, 9, 13, 16, 21, 0, 11, 15, 18, 19, 3, 6, 14, 17, 20]}}
{"prediction": {"error_location": 0.5770024657249451, "repair_targets": [0.8523605465888977, 0.12907889485359192, 0.00023440865334123373, 0.0007066791877150536, 0.0004757277783937752], "repair_candidates": [0.0016888773534446955, 0.00516655296087265, 0.8523605465888977, 0.0057889195159077644, 0.12907889485359192, 0.00035145875881426036, 0.000988751300610602, 0.00030522863380610943, 0.00023440865334123373, 0.0008779152412898839, 0.00040697131771594286, 0.0007066791877150536, 0.0006915187113918364, 0.000669152766931802, 0.0004757277783937752, 0.00020828150445595384], "target_probs": 0.982856273651123}}


{"result": {"time": "2021-02-21 07:31:48.436507", "n_pass": [334, 77, 36], "n_token": 21, "loss": [0.22899474203586578, 0.3216841518878937], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["cls", "unit_str", "lower", "=", "unit_str", "lower", "if", "(", "unit_str", "in", "cls", "return", "unit_str", "lower", "cls", "unit_str", "lower", "cls", "cls", "lower", "unit_str"]}}
{"position": {"error_location": 8, "repair_targets": [2, 5, 13, 16, 19], "repair_candidates": [1, 4, 8, 12, 15, 20, 0, 10, 14, 17, 18, 2, 5, 13, 16, 19]}}
{"prediction": {"error_location": 0.7953327298164368, "repair_targets": [0.27335625886917114, 0.4469263255596161, 0.000516351661644876, 0.0023618252016603947, 0.0017663697944954038], "repair_candidates": [0.009400833398103714, 0.023868009448051453, 0.27335625886917114, 0.19847597181797028, 0.4469263255596161, 0.00864335335791111, 0.004199951887130737, 0.01814456656575203, 0.000516351661644876, 0.0037137812469154596, 0.0016468256944790483, 0.0023618252016603947, 0.003026567632332444, 0.0030588582158088684, 0.0017663697944954038, 0.0008941535488702357], "target_probs": 0.7249271273612976}}


{"result": {"time": "2021-02-21 07:31:48.721951", "n_pass": [344, 82, 37], "n_token": 20, "loss": [0.32747411727905273, 0.15674442052841187], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["cls", "unit_str", "lower", "=", "unit_str", "lower", "if", "(", "unit_str", "in", "cls", "unit_str", "lower", "cls", "unit_str", "lower", "cls", "cls", "lower", "unit_str"]}}
{"position": {"error_location": 8, "repair_targets": [2, 5, 12, 15, 18], "repair_candidates": [1, 4, 8, 11, 14, 19, 0, 10, 13, 16, 17, 2, 5, 12, 15, 18]}}
{"prediction": {"error_location": 0.720741868019104, "repair_targets": [0.42195168137550354, 0.42339369654655457, 0.004911811091005802, 0.0027512586675584316, 0.0019140660297125578], "repair_candidates": [0.009430814534425735, 0.019772272557020187, 0.42195168137550354, 0.08873961120843887, 0.42339369654655457, 0.012099630199372768, 0.003168992232531309, 0.0001907713303808123, 0.004911811091005802, 0.003428551834076643, 0.0019090465502813458, 0.0027512586675584316, 0.0028304646257311106, 0.002694131340831518, 0.0019140660297125578, 0.0008131185313686728], "target_probs": 0.8549225330352783}}




Minimal simplified tokens:

['cls', 'unit_str', 'lower', '=', 'unit_str', 'lower', 'if', '(', 'unit_str', 'in', 'cls', 'unit_str', 'lower', 'cls', 'unit_str', 'lower', 'cls', 'cls', 'lower', 'unit_str']
