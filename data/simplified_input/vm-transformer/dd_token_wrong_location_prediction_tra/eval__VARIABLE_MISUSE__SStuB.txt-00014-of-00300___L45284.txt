
Original sample:

{"has_bug": true, "bug_kind": 1, "bug_kind_name": "VARIABLE_MISUSE", "source_tokens": ["#NEWLINE#", "@", "sig", "(", "(", "(", "(", "H", "/", "int", ")", ">>", "[", "'a'", "]", ")", ">>", "[", "'a'", "]", ")", ")", "#NEWLINE#", "def take(", "n", ",", "xs", ")", ":", "#NEWLINE#", "#INDENT#", "'\\n    take :: Int -> [a] -> [a]\\n\\n    take(n), applied to a list xs, returns the prefix of xs of length n, or xs\\n    itself if n > length xs\\n    '", "#NEWLINE#", "return", "n", "[", ":", "n", "]"], "error_location": [34], "repair_targets": [26], "repair_candidates": [24, 34, 37, 26], "provenances": [{"datasetProvenance": {"datasetName": "ETHPy150Open", "filepath": "billpmurphy/hask/hask/Data/List.py", "license": "bsd-2-clause", "note": "license: bigquery_api"}}], "txt_file": "eval__VARIABLE_MISUSE__SStuB.txt-00014-of-00300", "js_count": 45284, "results": {"model": "transformer", "prob": {"loc": [[0.00024665362434461713, 1.2254194992067369e-08, 1.0703710834336633e-10, 2.3860999287528273e-10, 2.3012383665310665e-10, 3.5232539108420724e-10, 4.0730849248937773e-10, 3.712791851739894e-09, 1.8856603778427683e-10, 3.0889282243151683e-09, 7.549639385873164e-11, 2.3257457071323984e-10, 1.1955010315034542e-09, 6.010748565543622e-10, 3.8155961723518317e-10, 4.812943377174861e-10, 6.741844860158608e-10, 1.236774860302603e-08, 3.555104211017124e-09, 5.350375698043308e-10, 3.5967362421729376e-09, 2.980159730103793e-10, 1.2754004796722285e-10, 8.556429870187898e-11, 2.169109336591646e-08, 1.6908432987072786e-10, 1.1316056713894795e-07, 1.1692732893031632e-10, 6.868275947979896e-10, 4.776390949423615e-10, 4.241142437244605e-10, 3.7149521237012095e-09, 9.288382285532748e-10, 3.7072706016161305e-10, 0.054092809557914734, 1.3755232508572135e-08, 2.0153860802452073e-09, 0.9456603527069092, 1.7467156609995982e-08]], "pointer": [[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 5.294061224958568e-07, 0.0, 0.9999995231628418, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 3.108269641671768e-09, 0.0, 0.0, 5.057591234702841e-09, 0.0]], "target": [0.9999995231628418]}, "loss": [2.9170539379119873, 4.768372718899627e-07], "acc": [0.0, 0.0, 1.0, 0.0]}, "wrong_error_location": [37]}


Trace of simplified code(s):

{"result": {"time": "2021-02-21 07:09:45.652685", "n_pass": [1, 1, 1], "n_token": 39, "loss": [0.055871788412332535, 4.768372718899627e-07], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "@", "sig", "(", "(", "(", "(", "H", "/", "int", ")", ">>", "[", "'a'", "]", ")", ">>", "[", "'a'", "]", ")", ")", "#NEWLINE#", "def take(", "n", ",", "xs", ")", ":", "#NEWLINE#", "#INDENT#", "'\\n    take :: Int -> [a] -> [a]\\n\\n    take(n), applied to a list xs, returns the prefix of xs of length n, or xs\\n    itself if n > length xs\\n    '", "#NEWLINE#", "return", "n", "[", ":", "n", "]"]}}
{"position": {"error_location": 37, "repair_targets": [26], "repair_candidates": [24, 34, 37, 26]}}
{"prediction": {"error_location": 0.9456603527069092, "repair_targets": [0.9999995231628418], "repair_candidates": [5.294061224958568e-07, 0.9999995231628418, 3.108269641671768e-09, 5.057591234702841e-09], "target_probs": 0.9999995231628418}}


{"result": {"time": "2021-02-21 07:09:45.708851", "n_pass": [3, 2, 2], "n_token": 20, "loss": [0.061942290514707565, 0.00019033574790228158], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["]", ")", ")", "#NEWLINE#", "def take(", "n", ",", "xs", ")", ":", "#NEWLINE#", "#INDENT#", "'\\n    take :: Int -> [a] -> [a]\\n\\n    take(n), applied to a list xs, returns the prefix of xs of length n, or xs\\n    itself if n > length xs\\n    '", "#NEWLINE#", "return", "n", "[", ":", "n", "]"]}}
{"position": {"error_location": 18, "repair_targets": [7], "repair_candidates": [5, 15, 18, 7]}}
{"prediction": {"error_location": 0.9399372339248657, "repair_targets": [0.9998096823692322], "repair_candidates": [0.00018988382362294942, 0.9998096823692322, 1.5263027819401032e-07, 3.8505746147166064e-07], "target_probs": 0.9998096823692322}}


{"result": {"time": "2021-02-21 07:09:45.765465", "n_pass": [10, 3, 3], "n_token": 15, "loss": [0.28276219964027405, 8.67881317390129e-05], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["n", ",", "xs", ")", ":", "#NEWLINE#", "#INDENT#", "'\\n    take :: Int -> [a] -> [a]\\n\\n    take(n), applied to a list xs, returns the prefix of xs of length n, or xs\\n    itself if n > length xs\\n    '", "#NEWLINE#", "return", "n", "[", ":", "n", "]"]}}
{"position": {"error_location": 13, "repair_targets": [2], "repair_candidates": [0, 10, 13, 2]}}
{"prediction": {"error_location": 0.7536990642547607, "repair_targets": [0.999913215637207], "repair_candidates": [8.683610212756321e-05, 0.999913215637207, 4.616032001081294e-09, 3.1310712245158356e-08], "target_probs": 0.999913215637207}}


{"result": {"time": "2021-02-21 07:09:45.820836", "n_pass": [11, 4, 4], "n_token": 10, "loss": [0.11539355665445328, 0.07944481819868088], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["n", ",", "xs", ")", ":", "n", "[", ":", "n", "]"]}}
{"position": {"error_location": 8, "repair_targets": [2], "repair_candidates": [0, 5, 8, 2]}}
{"prediction": {"error_location": 0.8910154104232788, "repair_targets": [0.9236289858818054], "repair_candidates": [0.015650033950805664, 0.9236289858818054, 0.060094285756349564, 0.0006267640274018049], "target_probs": 0.9236289858818054}}


{"result": {"time": "2021-02-21 07:09:45.876736", "n_pass": [28, 5, 5], "n_token": 9, "loss": [0.0371403768658638, 0.1951000988483429], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["n", ",", "xs", ")", "n", "[", ":", "n", "]"]}}
{"position": {"error_location": 7, "repair_targets": [2], "repair_candidates": [0, 4, 7, 2]}}
{"prediction": {"error_location": 0.9635408520698547, "repair_targets": [0.8227522969245911], "repair_candidates": [0.14640170335769653, 0.8227522969245911, 0.029707377776503563, 0.0011385473189875484], "target_probs": 0.8227522969245911}}




Minimal simplified tokens:

['n', ',', 'xs', ')', 'n', '[', ':', 'n', ']']
