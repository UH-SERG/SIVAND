
Original sample:

{"has_bug": true, "bug_kind": 1, "bug_kind_name": "VARIABLE_MISUSE", "source_tokens": ["#NEWLINE#", "def color_orp_char(", "word", ",", "orp", ")", ":", "#NEWLINE#", "#INDENT#", "'Change color of the ORP letter in ``word`` to red.\\n\\n    :param word: the word to be color-coded\\n    :type word: ``unicode``\\n    :param orp: the index of the ORP letter\\n    :type orp: ``integer``\\n    :returns: word with ORP letter in red\\n    :rytpe: ``unicode``\\n    '", "#NEWLINE#", "color_red", "=", "'\\x1b[91m'", "#NEWLINE#", "color_restore", "=", "'\\x1b[0m'", "#NEWLINE#", "chars", "=", "list", "(", "word", ")", "#NEWLINE#", "chars", ".", "insert", "(", "orp", ",", "color_restore", ")", "#NEWLINE#", "chars", ".", "insert", "(", "(", "orp", "+", "2", ")", ",", "color_restore", ")", "#NEWLINE#", "return", "''", ".", "join", "(", "chars", ")"], "error_location": [32], "repair_targets": [11], "repair_candidates": [2, 23, 15, 32, 45, 11, 4, 30, 40, 19, 26, 35, 53], "provenances": [{"datasetProvenance": {"datasetName": "ETHPy150Open", "filepath": "littleq0903/spritz-cmd/bin/spritz.py", "license": "mit", "note": "license: bigquery_api"}}], "txt_file": "eval__VARIABLE_MISUSE__SStuB.txt-00011-of-00300", "js_count": 37025, "results": {"model": "transformer", "prob": {"loc": [[0.016989195719361305, 5.76524712414539e-07, 3.384355977686937e-07, 5.795187618673481e-08, 3.1709814152236504e-07, 3.2482212475315464e-08, 3.726107422608038e-08, 4.369775652435237e-08, 3.177179053182044e-08, 4.961757937849143e-08, 2.775321306103251e-08, 1.9683880054799374e-06, 1.480085956018229e-07, 3.025656098998297e-07, 7.644987221055999e-08, 3.3980932130361907e-06, 3.146014648791606e-08, 8.12018242868362e-07, 2.1187044296766544e-07, 7.676545692447689e-07, 3.365949652334166e-08, 3.865914699474615e-09, 6.566194343804455e-08, 0.0467497743666172, 2.985603032357176e-06, 3.7490215731850185e-07, 1.4934714798187088e-08, 4.608855519450117e-09, 4.771528061553454e-09, 5.218059584422008e-08, 0.5981072783470154, 3.293246436442132e-06, 0.027512764558196068, 2.569196794866002e-06, 7.708564453423605e-08, 1.6535890878799364e-08, 7.623484066243691e-09, 9.655712895906277e-10, 1.0777855052879204e-08, 4.494234673302344e-08, 0.2836393415927887, 3.5856686508850544e-07, 2.2548811102751642e-06, 1.3672405430043e-07, 1.2747473476792948e-07, 0.013731569983065128, 3.0303976927825715e-07, 2.0585756033142388e-07, 1.3356530104147168e-08, 1.1803114929875846e-08, 2.2354161188786748e-08, 1.4575087803336828e-09, 1.2810011718045189e-08, 0.013246583752334118, 1.1665526926663006e-06]], "pointer": [[0.0, 0.0, 0.00015310192247852683, 0.0, 4.340655868873e-05, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.999305009841919, 0.0, 0.0, 0.0, 0.0002654778363648802, 0.0, 0.0, 0.0, 2.860630047507584e-05, 0.0, 0.0, 0.0, 0.00017200567526742816, 0.0, 0.0, 1.5116361282707658e-06, 0.0, 0.0, 0.0, 1.2604820767592173e-05, 0.0, 1.0163972547161393e-05, 0.0, 0.0, 7.937416626191407e-07, 0.0, 0.0, 0.0, 0.0, 1.9407625586609356e-06, 0.0, 0.0, 0.0, 0.0, 3.300385060356348e-06, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 2.109534534611157e-06, 0.0]], "target": [0.999305009841919]}, "loss": [3.5931053161621094, 0.0006952317780815065], "acc": [0.0, 0.0, 1.0, 0.0]}, "wrong_error_location": [30]}


Trace of simplified code(s):

{"result": {"time": "2021-02-21 06:57:14.466339", "n_pass": [1, 1, 1], "n_token": 55, "loss": [0.5139850378036499, 0.0006952317780815065], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def color_orp_char(", "word", ",", "orp", ")", ":", "#NEWLINE#", "#INDENT#", "'Change color of the ORP letter in ``word`` to red.\\n\\n    :param word: the word to be color-coded\\n    :type word: ``unicode``\\n    :param orp: the index of the ORP letter\\n    :type orp: ``integer``\\n    :returns: word with ORP letter in red\\n    :rytpe: ``unicode``\\n    '", "#NEWLINE#", "color_red", "=", "'\\x1b[91m'", "#NEWLINE#", "color_restore", "=", "'\\x1b[0m'", "#NEWLINE#", "chars", "=", "list", "(", "word", ")", "#NEWLINE#", "chars", ".", "insert", "(", "orp", ",", "color_restore", ")", "#NEWLINE#", "chars", ".", "insert", "(", "(", "orp", "+", "2", ")", ",", "color_restore", ")", "#NEWLINE#", "return", "''", ".", "join", "(", "chars", ")"]}}
{"position": {"error_location": 30, "repair_targets": [11], "repair_candidates": [2, 23, 15, 32, 45, 11, 4, 30, 40, 19, 26, 35, 53]}}
{"prediction": {"error_location": 0.5981072783470154, "repair_targets": [0.999305009841919], "repair_candidates": [0.00015310192247852683, 4.340655868873e-05, 0.999305009841919, 0.0002654778363648802, 2.860630047507584e-05, 0.00017200567526742816, 1.5116361282707658e-06, 1.2604820767592173e-05, 1.0163972547161393e-05, 7.937416626191407e-07, 1.9407625586609356e-06, 3.300385060356348e-06, 2.109534534611157e-06], "target_probs": 0.999305009841919}}


{"result": {"time": "2021-02-21 06:57:14.525233", "n_pass": [46, 2, 2], "n_token": 52, "loss": [0.11189022660255432, 0.0002795252366922796], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def color_orp_char(", "word", ",", "orp", ")", "'Change color of the ORP letter in ``word`` to red.\\n\\n    :param word: the word to be color-coded\\n    :type word: ``unicode``\\n    :param orp: the index of the ORP letter\\n    :type orp: ``integer``\\n    :returns: word with ORP letter in red\\n    :rytpe: ``unicode``\\n    '", "#NEWLINE#", "color_red", "=", "'\\x1b[91m'", "#NEWLINE#", "color_restore", "=", "'\\x1b[0m'", "#NEWLINE#", "chars", "=", "list", "(", "word", ")", "#NEWLINE#", "chars", ".", "insert", "(", "orp", ",", "color_restore", ")", "#NEWLINE#", "chars", ".", "insert", "(", "(", "orp", "+", "2", ")", ",", "color_restore", ")", "#NEWLINE#", "return", "''", ".", "join", "(", "chars", ")"]}}
{"position": {"error_location": 27, "repair_targets": [8], "repair_candidates": [2, 20, 12, 29, 42, 8, 4, 27, 37, 16, 23, 32, 50]}}
{"prediction": {"error_location": 0.8941423296928406, "repair_targets": [0.9997205138206482], "repair_candidates": [5.836920172441751e-05, 1.4478576304099988e-05, 0.9997205138206482, 0.00014908295997884125, 2.0408293494256213e-05, 2.7436157324700616e-05, 1.220206513607991e-06, 9.617792784410994e-07, 5.163155037735123e-06, 2.2150075551508053e-07, 3.796178873471945e-07, 7.261525638568855e-07, 1.0267037851008354e-06], "target_probs": 0.9997205138206482}}


{"result": {"time": "2021-02-21 06:57:14.585565", "n_pass": [48, 3, 3], "n_token": 49, "loss": [0.15782205760478973, 0.0002761864452622831], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def color_orp_char(", "word", ",", "orp", ")", "'Change color of the ORP letter in ``word`` to red.\\n\\n    :param word: the word to be color-coded\\n    :type word: ``unicode``\\n    :param orp: the index of the ORP letter\\n    :type orp: ``integer``\\n    :returns: word with ORP letter in red\\n    :rytpe: ``unicode``\\n    '", "#NEWLINE#", "color_red", "color_restore", "=", "'\\x1b[0m'", "#NEWLINE#", "chars", "=", "list", "(", "word", ")", "#NEWLINE#", "chars", ".", "insert", "(", "orp", ",", "color_restore", ")", "#NEWLINE#", "chars", ".", "insert", "(", "(", "orp", "+", "2", ")", ",", "color_restore", ")", "#NEWLINE#", "return", "''", ".", "join", "(", "chars", ")"]}}
{"position": {"error_location": 24, "repair_targets": [8], "repair_candidates": [2, 17, 9, 26, 39, 8, 4, 24, 34, 13, 20, 29, 47]}}
{"prediction": {"error_location": 0.8540014624595642, "repair_targets": [0.9997238516807556], "repair_candidates": [4.502246156334877e-05, 1.3057315300102346e-05, 0.9997238516807556, 0.00016871231491677463, 2.0046616555191576e-05, 1.579227318870835e-05, 7.512969091294508e-07, 7.294608508345846e-07, 7.967060810187832e-06, 5.234728632785846e-07, 5.652916570397792e-07, 1.522830189060187e-06, 1.346940280200215e-06], "target_probs": 0.9997238516807556}}


{"result": {"time": "2021-02-21 06:57:14.642868", "n_pass": [58, 4, 4], "n_token": 45, "loss": [0.19134101271629333, 0.00031345034949481487], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def color_orp_char(", "word", ",", "orp", ")", "'Change color of the ORP letter in ``word`` to red.\\n\\n    :param word: the word to be color-coded\\n    :type word: ``unicode``\\n    :param orp: the index of the ORP letter\\n    :type orp: ``integer``\\n    :returns: word with ORP letter in red\\n    :rytpe: ``unicode``\\n    '", "#NEWLINE#", "color_red", "color_restore", "=", "'\\x1b[0m'", "#NEWLINE#", "chars", "=", "list", "(", "word", ")", "#NEWLINE#", "chars", ".", "insert", "(", "orp", ",", "color_restore", ")", "#NEWLINE#", "chars", ".", "insert", "(", "(", "orp", "+", "2", ")", ",", "color_restore", ")", "join", "(", "chars", ")"]}}
{"position": {"error_location": 24, "repair_targets": [8], "repair_candidates": [2, 17, 9, 26, 39, 8, 4, 24, 34, 13, 20, 29, 43]}}
{"prediction": {"error_location": 0.8258508443832397, "repair_targets": [0.999686598777771], "repair_candidates": [4.9542373744770885e-05, 2.041670995822642e-05, 0.999686598777771, 0.00016434940334875137, 1.5343941413448192e-05, 2.4965502234408632e-05, 1.9186263671144843e-06, 7.481829698008369e-07, 2.4805098291835748e-05, 2.7132939521834487e-06, 5.58166732389509e-07, 8.02346858108649e-06, 2.79155543125853e-08], "target_probs": 0.999686598777771}}


{"result": {"time": "2021-02-21 06:57:14.700741", "n_pass": [98, 5, 5], "n_token": 43, "loss": [0.6520054340362549, 0.0018794902134686708], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def color_orp_char(", "word", ",", "orp", ")", "'Change color of the ORP letter in ``word`` to red.\\n\\n    :param word: the word to be color-coded\\n    :type word: ``unicode``\\n    :param orp: the index of the ORP letter\\n    :type orp: ``integer``\\n    :returns: word with ORP letter in red\\n    :rytpe: ``unicode``\\n    '", "#NEWLINE#", "color_red", "color_restore", "=", "'\\x1b[0m'", "#NEWLINE#", "chars", "=", "list", "(", "word", ")", "#NEWLINE#", "chars", ".", "insert", "(", "orp", ",", "color_restore", ")", "#NEWLINE#", "chars", ".", "insert", "(", "(", "orp", "+", "2", ")", ",", "color_restore", ")", "chars", ")"]}}
{"position": {"error_location": 24, "repair_targets": [8], "repair_candidates": [2, 17, 9, 26, 39, 8, 4, 24, 34, 13, 20, 29, 41]}}
{"prediction": {"error_location": 0.5209999084472656, "repair_targets": [0.9981222748756409], "repair_candidates": [4.514361353358254e-05, 6.644623499596491e-05, 0.9981222748756409, 0.00035167066380381584, 5.275412695482373e-05, 1.7066169675672427e-05, 8.368786438950337e-06, 8.028730462683598e-07, 0.0013140635564923286, 1.4780692936255946e-06, 4.5925725089546177e-07, 1.931601764226798e-05, 1.4745303644758678e-07], "target_probs": 0.9981222748756409}}


{"result": {"time": "2021-02-21 06:57:14.868829", "n_pass": [102, 8, 6], "n_token": 42, "loss": [0.6860044598579407, 0.0018339273519814014], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def color_orp_char(", "word", "orp", ")", "'Change color of the ORP letter in ``word`` to red.\\n\\n    :param word: the word to be color-coded\\n    :type word: ``unicode``\\n    :param orp: the index of the ORP letter\\n    :type orp: ``integer``\\n    :returns: word with ORP letter in red\\n    :rytpe: ``unicode``\\n    '", "#NEWLINE#", "color_red", "color_restore", "=", "'\\x1b[0m'", "#NEWLINE#", "chars", "=", "list", "(", "word", ")", "#NEWLINE#", "chars", ".", "insert", "(", "orp", ",", "color_restore", ")", "#NEWLINE#", "chars", ".", "insert", "(", "(", "orp", "+", "2", ")", ",", "color_restore", ")", "chars", ")"]}}
{"position": {"error_location": 23, "repair_targets": [7], "repair_candidates": [2, 16, 8, 25, 38, 7, 3, 23, 33, 12, 19, 28, 40]}}
{"prediction": {"error_location": 0.503584086894989, "repair_targets": [0.9981677532196045], "repair_candidates": [6.129830580903217e-05, 6.124308129074052e-05, 0.9981677532196045, 0.00031483187922276556, 6.129227404017001e-05, 1.303342287428677e-05, 1.3314627722138539e-05, 4.0600403394819295e-07, 0.0012871338985860348, 1.5039518075354863e-06, 3.573040032733843e-07, 1.7649163055466488e-05, 1.5064055958191602e-07], "target_probs": 0.9981677532196045}}


{"result": {"time": "2021-02-21 06:57:14.985177", "n_pass": [105, 10, 7], "n_token": 41, "loss": [0.6601280570030212, 0.0009966689394786954], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def color_orp_char(", "word", "orp", ")", "#NEWLINE#", "color_red", "color_restore", "=", "'\\x1b[0m'", "#NEWLINE#", "chars", "=", "list", "(", "word", ")", "#NEWLINE#", "chars", ".", "insert", "(", "orp", ",", "color_restore", ")", "#NEWLINE#", "chars", ".", "insert", "(", "(", "orp", "+", "2", ")", ",", "color_restore", ")", "chars", ")"]}}
{"position": {"error_location": 22, "repair_targets": [6], "repair_candidates": [2, 15, 7, 24, 37, 6, 3, 22, 32, 11, 18, 27, 39]}}
{"prediction": {"error_location": 0.5167851448059082, "repair_targets": [0.9990038275718689], "repair_candidates": [5.95456367591396e-05, 3.709786324179731e-05, 0.9990038275718689, 0.00021055410616099834, 6.98911098879762e-05, 1.0600149835227057e-05, 1.2703038009931333e-05, 3.078229156017187e-07, 0.0005868380540050566, 1.09364623313013e-06, 4.3901590629502607e-07, 7.0728815444454085e-06, 1.2437503471574018e-07], "target_probs": 0.9990038275718689}}


{"result": {"time": "2021-02-21 06:57:15.097784", "n_pass": [110, 12, 8], "n_token": 39, "loss": [0.7207242846488953, 0.001050129416398704], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def color_orp_char(", "word", "orp", ")", "#NEWLINE#", "color_red", "color_restore", "=", "'\\x1b[0m'", "#NEWLINE#", "chars", "=", "word", ")", "#NEWLINE#", "chars", ".", "insert", "(", "orp", ",", "color_restore", ")", "#NEWLINE#", "chars", ".", "insert", "(", "(", "orp", "+", "2", ")", ",", "color_restore", ")", "chars", ")"]}}
{"position": {"error_location": 20, "repair_targets": [6], "repair_candidates": [2, 13, 7, 22, 35, 6, 3, 20, 30, 11, 16, 25, 37]}}
{"prediction": {"error_location": 0.4863998293876648, "repair_targets": [0.9989504218101501], "repair_candidates": [0.00018221257778350264, 6.723868136759847e-05, 0.9989504218101501, 0.00021698270575143397, 0.00021038066188339144, 2.0138466425123625e-05, 1.8878617993323132e-05, 2.648700501595158e-06, 0.0003178462211508304, 2.362818804613198e-06, 1.9016877104149899e-06, 7.742893103568349e-06, 1.1596813465075684e-06], "target_probs": 0.9989504218101501}}


{"result": {"time": "2021-02-21 06:57:15.154527", "n_pass": [113, 13, 9], "n_token": 37, "loss": [0.8721751570701599, 0.00202712113969028], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def color_orp_char(", "word", "orp", ")", "#NEWLINE#", "color_red", "color_restore", "=", "'\\x1b[0m'", "#NEWLINE#", "chars", "=", "word", ")", "#NEWLINE#", "chars", "(", "orp", ",", "color_restore", ")", "#NEWLINE#", "chars", ".", "insert", "(", "(", "orp", "+", "2", ")", ",", "color_restore", ")", "chars", ")"]}}
{"position": {"error_location": 18, "repair_targets": [6], "repair_candidates": [2, 13, 7, 20, 33, 6, 3, 18, 28, 11, 16, 23, 35]}}
{"prediction": {"error_location": 0.41804128885269165, "repair_targets": [0.9979749321937561], "repair_candidates": [0.0004425763327162713, 0.00012769721797667444, 0.9979749321937561, 0.00038090295856818557, 0.00038058613426983356, 5.1499708206392825e-05, 2.446814733048086e-06, 3.867280611302704e-06, 0.0005548247718252242, 6.3674087869003415e-06, 1.0686084351618774e-05, 5.995691390126012e-05, 3.590477490433841e-06], "target_probs": 0.9979749321937561}}


{"result": {"time": "2021-02-21 06:57:15.725358", "n_pass": [169, 23, 10], "n_token": 36, "loss": [1.0081113576889038, 0.0014376837061718106], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def color_orp_char(", "word", "orp", ")", "#NEWLINE#", "color_red", "color_restore", "=", "'\\x1b[0m'", "#NEWLINE#", "chars", "=", "word", ")", "#NEWLINE#", "chars", "(", "orp", ",", "color_restore", "#NEWLINE#", "chars", ".", "insert", "(", "(", "orp", "+", "2", ")", ",", "color_restore", ")", "chars", ")"]}}
{"position": {"error_location": 18, "repair_targets": [6], "repair_candidates": [2, 13, 7, 20, 32, 6, 3, 18, 27, 11, 16, 22, 34]}}
{"prediction": {"error_location": 0.36490756273269653, "repair_targets": [0.9985633492469788], "repair_candidates": [0.00030053628142923117, 0.00011935985094169155, 0.9985633492469788, 0.0003709853917825967, 0.00031528359977528453, 4.59133880212903e-05, 1.9730223357328214e-06, 8.719300240045413e-06, 0.00021572050172835588, 5.954188964096829e-06, 9.884756764222402e-06, 3.986738374806009e-05, 2.4592745830886997e-06], "target_probs": 0.9985633492469788}}


{"result": {"time": "2021-02-21 06:57:15.894825", "n_pass": [173, 26, 11], "n_token": 35, "loss": [1.1473430395126343, 0.0012089762603864074], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def color_orp_char(", "word", "orp", ")", "#NEWLINE#", "color_red", "color_restore", "=", "'\\x1b[0m'", "#NEWLINE#", "chars", "=", "word", ")", "#NEWLINE#", "chars", "(", "orp", ",", "color_restore", "#NEWLINE#", "chars", ".", "insert", "(", "orp", "+", "2", ")", ",", "color_restore", ")", "chars", ")"]}}
{"position": {"error_location": 18, "repair_targets": [6], "repair_candidates": [2, 13, 7, 20, 31, 6, 3, 18, 26, 11, 16, 22, 33]}}
{"prediction": {"error_location": 0.3174791634082794, "repair_targets": [0.9987917542457581], "repair_candidates": [0.0002636665303725749, 9.292198228649795e-05, 0.9987917542457581, 0.000329467497067526, 0.00027234485605731606, 4.665989399654791e-05, 1.496042841608869e-06, 3.5844043395627523e-06, 0.0001568353909533471, 3.2892469334910857e-06, 1.1433104191382881e-05, 2.43194772338029e-05, 2.230598511232529e-06], "target_probs": 0.9987917542457581}}




Minimal simplified tokens:

['#NEWLINE#', 'def color_orp_char(', 'word', 'orp', ')', '#NEWLINE#', 'color_red', 'color_restore', '=', "'\\x1b[0m'", '#NEWLINE#', 'chars', '=', 'word', ')', '#NEWLINE#', 'chars', '(', 'orp', ',', 'color_restore', '#NEWLINE#', 'chars', '.', 'insert', '(', 'orp', '+', '2', ')', ',', 'color_restore', ')', 'chars', ')']
