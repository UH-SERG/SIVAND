
Original sample:

{"has_bug": true, "bug_kind": 1, "bug_kind_name": "VARIABLE_MISUSE", "source_tokens": ["#NEWLINE#", "def test_schematron_call(", "self", ")", ":", "#NEWLINE#", "#INDENT#", "schema", "=", "self", ".", "parse", "(", "'<sch:schema xmlns:sch=\"http://purl.oclc.org/dsdl/schematron\">\\n  <sch:pattern id=\"number_of_entries\">\\n    <sch:title>mandatory number_of_entries tests</sch:title>\\n    <sch:rule context=\"number_of_entries\">\\n      <sch:assert test=\"text()=count(../entries/entry)\">[ERROR] number_of_entries (<sch:value-of select=\".\"/>) must equal the number of entries/entry elements (<sch:value-of select=\"count(../entries/entry)\"/>)</sch:assert>\\n    </sch:rule>\\n  </sch:pattern>\\n</sch:schema>\\n'", ")", "#NEWLINE#", "tree_valid", "=", "self", ".", "parse", "(", "'<message>\\n  <number_of_entries>0</number_of_entries>\\n  <entries>\\n  </entries>\\n</message>\\n'", ")", "#NEWLINE#", "tree_invalid", "=", "self", ".", "parse", "(", "'<message>\\n  <number_of_entries>3</number_of_entries>\\n  <entries>\\n    <entry>Entry 1</entry>\\n    <entry>Entry 2</entry>\\n  </entries>\\n</message>\\n'", ")", "#NEWLINE#", "schematron", "=", "isoschematron", ".", "Schematron", "(", "schema", ")", "#NEWLINE#", "self", ".", "assertTrue", "(", "schematron", "(", "tree_valid", ")", ",", "schematron", ".", "error_log", ")", "#NEWLINE#", "valid", "=", "schematron", "(", "valid", ")", "#NEWLINE#", "self", ".", "assertTrue", "(", "(", "not", "valid", ")", ")"], "error_location": [61], "repair_targets": [25], "repair_candidates": [2, 9, 18, 27, 43, 64, 7, 40, 25, 34, 47, 52, 59, 57, 61, 70, 16, 49], "provenances": [{"datasetProvenance": {"datasetName": "ETHPy150Open", "filepath": "cloudera/hue/desktop/core/ext-py/lxml-3.3.6/src/lxml/tests/test_isoschematron.py", "license": "apache-2.0", "note": "license: bigquery_api"}}], "txt_file": "eval__VARIABLE_MISUSE__SStuB.txt-00007-of-00300", "js_count": 23597, "results": {"model": "transformer", "prob": {"loc": [[0.14169636368751526, 1.363775822937896e-06, 2.35614584198629e-06, 5.4881439837117796e-08, 5.5877002580473345e-08, 6.753926129476895e-08, 4.5948443272436634e-08, 9.095493624045048e-06, 4.0525506506128295e-08, 1.7798576834593405e-08, 3.0306384957157206e-08, 2.0615820162106502e-08, 1.7284921227656014e-07, 4.87777299440495e-07, 1.9303146814309002e-07, 3.529516590106141e-08, 6.5029971665353514e-06, 4.683300414143332e-09, 2.5834564709725782e-08, 3.7292849697223573e-08, 1.3916355179333095e-08, 1.441935779666892e-07, 8.702443665242754e-06, 6.773990435249289e-07, 1.2382002978483797e-07, 2.3592974685016088e-05, 1.498233181962405e-08, 9.914372611774525e-08, 6.284398779143885e-08, 1.413329453470169e-08, 8.500686021761794e-07, 2.419622069282923e-05, 2.5576305233698804e-06, 4.1284519625151006e-07, 1.2361886547296308e-05, 2.5156236205248206e-08, 6.246461481396182e-08, 6.212616199263721e-08, 1.6249336098894673e-08, 2.9699111792069743e-07, 0.06889691203832626, 2.7301046429784037e-05, 1.965750016097445e-06, 2.746248739526891e-08, 4.14972625151222e-08, 1.0574129127860488e-08, 5.2211650114486474e-08, 2.336955731152557e-05, 7.692557346672402e-07, 0.36578649282455444, 1.1582457773329224e-05, 5.597301424131729e-06, 0.15530943870544434, 1.1045224255212815e-06, 2.5135877876891755e-06, 2.0019972453155788e-06, 4.3248854808553006e-07, 2.668108390935231e-05, 2.875585636274991e-08, 4.818043180421228e-06, 3.1230524655256886e-07, 0.23521701991558075, 1.0153765288123395e-05, 6.816470090598159e-07, 1.7462836865433928e-07, 3.380779745043583e-08, 1.806527150094439e-09, 2.5289496718983173e-08, 1.315689956982169e-07, 2.1357917034947604e-07, 0.032871976494789124, 3.661272103272495e-06, 3.219858626835048e-06]], "pointer": [[0.0, 0.0, 0.00010225503501715139, 0.0, 0.0, 0.0, 0.0, 0.016331957653164864, 0.0, 0.0009246023837476969, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0029989860486239195, 0.0, 0.0005239850142970681, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.9735903143882751, 0.0, 0.0006145907682366669, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0022759134881198406, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0007913492736406624, 0.0, 0.0, 4.593882113113068e-05, 0.0, 0.0, 0.0, 3.1358526030089706e-05, 0.0, 0.0009004043531604111, 0.0, 0.0, 5.8006880863104016e-06, 0.0, 0.0, 0.0, 0.0, 0.0005240610335022211, 0.0, 1.493034687882755e-05, 0.0, 9.998922178056091e-05, 0.0, 0.0, 1.1229237316001672e-05, 0.0, 0.0, 0.0, 0.0, 0.0, 0.00021236589236650616, 0.0, 0.0]], "target": [0.9735903143882751]}, "loss": [1.4472466707229614, 0.026764685288071632], "acc": [0.0, 0.0, 1.0, 0.0]}, "wrong_error_location": [49]}


Trace of simplified code(s):

{"result": {"time": "2021-02-21 06:22:15.742486", "n_pass": [1, 1, 1], "n_token": 73, "loss": [1.00570547580719, 0.026764685288071632], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def test_schematron_call(", "self", ")", ":", "#NEWLINE#", "#INDENT#", "schema", "=", "self", ".", "parse", "(", "'<sch:schema xmlns:sch=\"http://purl.oclc.org/dsdl/schematron\">\\n  <sch:pattern id=\"number_of_entries\">\\n    <sch:title>mandatory number_of_entries tests</sch:title>\\n    <sch:rule context=\"number_of_entries\">\\n      <sch:assert test=\"text()=count(../entries/entry)\">[ERROR] number_of_entries (<sch:value-of select=\".\"/>) must equal the number of entries/entry elements (<sch:value-of select=\"count(../entries/entry)\"/>)</sch:assert>\\n    </sch:rule>\\n  </sch:pattern>\\n</sch:schema>\\n'", ")", "#NEWLINE#", "tree_valid", "=", "self", ".", "parse", "(", "'<message>\\n  <number_of_entries>0</number_of_entries>\\n  <entries>\\n  </entries>\\n</message>\\n'", ")", "#NEWLINE#", "tree_invalid", "=", "self", ".", "parse", "(", "'<message>\\n  <number_of_entries>3</number_of_entries>\\n  <entries>\\n    <entry>Entry 1</entry>\\n    <entry>Entry 2</entry>\\n  </entries>\\n</message>\\n'", ")", "#NEWLINE#", "schematron", "=", "isoschematron", ".", "Schematron", "(", "schema", ")", "#NEWLINE#", "self", ".", "assertTrue", "(", "schematron", "(", "tree_valid", ")", ",", "schematron", ".", "error_log", ")", "#NEWLINE#", "valid", "=", "schematron", "(", "valid", ")", "#NEWLINE#", "self", ".", "assertTrue", "(", "(", "not", "valid", ")", ")"]}}
{"position": {"error_location": 49, "repair_targets": [25], "repair_candidates": [2, 9, 18, 27, 43, 64, 7, 40, 25, 34, 47, 52, 59, 57, 61, 70, 16, 49]}}
{"prediction": {"error_location": 0.36578649282455444, "repair_targets": [0.9735903143882751], "repair_candidates": [0.00010225503501715139, 0.016331957653164864, 0.0009246023837476969, 0.0029989860486239195, 0.0005239850142970681, 0.9735903143882751, 0.0006145907682366669, 0.0022759134881198406, 0.0007913492736406624, 4.593882113113068e-05, 3.1358526030089706e-05, 0.0009004043531604111, 5.8006880863104016e-06, 0.0005240610335022211, 1.493034687882755e-05, 9.998922178056091e-05, 1.1229237316001672e-05, 0.00021236589236650616], "target_probs": 0.9735903143882751}}


{"result": {"time": "2021-02-21 06:22:15.974952", "n_pass": [92, 5, 2], "n_token": 71, "loss": [1.1154268980026245, 0.01173518504947424], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["self", ")", ":", "#NEWLINE#", "#INDENT#", "schema", "=", "self", ".", "parse", "(", "'<sch:schema xmlns:sch=\"http://purl.oclc.org/dsdl/schematron\">\\n  <sch:pattern id=\"number_of_entries\">\\n    <sch:title>mandatory number_of_entries tests</sch:title>\\n    <sch:rule context=\"number_of_entries\">\\n      <sch:assert test=\"text()=count(../entries/entry)\">[ERROR] number_of_entries (<sch:value-of select=\".\"/>) must equal the number of entries/entry elements (<sch:value-of select=\"count(../entries/entry)\"/>)</sch:assert>\\n    </sch:rule>\\n  </sch:pattern>\\n</sch:schema>\\n'", ")", "#NEWLINE#", "tree_valid", "=", "self", ".", "parse", "(", "'<message>\\n  <number_of_entries>0</number_of_entries>\\n  <entries>\\n  </entries>\\n</message>\\n'", ")", "#NEWLINE#", "tree_invalid", "=", "self", ".", "parse", "(", "'<message>\\n  <number_of_entries>3</number_of_entries>\\n  <entries>\\n    <entry>Entry 1</entry>\\n    <entry>Entry 2</entry>\\n  </entries>\\n</message>\\n'", ")", "#NEWLINE#", "schematron", "=", "isoschematron", ".", "Schematron", "(", "schema", ")", "#NEWLINE#", "self", ".", "assertTrue", "(", "schematron", "(", "tree_valid", ")", ",", "schematron", ".", "error_log", ")", "#NEWLINE#", "valid", "=", "schematron", "(", "valid", ")", "#NEWLINE#", "self", ".", "assertTrue", "(", "(", "not", "valid", ")", ")"]}}
{"position": {"error_location": 47, "repair_targets": [23], "repair_candidates": [0, 7, 16, 25, 41, 62, 5, 38, 23, 32, 45, 50, 57, 55, 59, 68, 14, 47]}}
{"prediction": {"error_location": 0.3277752995491028, "repair_targets": [0.9883334040641785], "repair_candidates": [0.0005372683517634869, 0.0030250840354710817, 0.0008242746698670089, 0.0038239480927586555, 0.0003470152150839567, 0.9883334040641785, 0.00045579674770124257, 0.0016953309532254934, 0.00030192016856744885, 5.308805702952668e-05, 1.1260557585046627e-05, 0.0002530979982111603, 1.5693412933615036e-05, 0.00023566749587189406, 8.474394235236105e-06, 2.1627354726660997e-05, 7.798576007189695e-06, 4.929848728352226e-05], "target_probs": 0.9883334040641785}}


{"result": {"time": "2021-02-21 06:22:16.031979", "n_pass": [93, 6, 3], "n_token": 69, "loss": [0.9862699508666992, 0.02464035339653492], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["self", ")", "#INDENT#", "schema", "=", "self", ".", "parse", "(", "'<sch:schema xmlns:sch=\"http://purl.oclc.org/dsdl/schematron\">\\n  <sch:pattern id=\"number_of_entries\">\\n    <sch:title>mandatory number_of_entries tests</sch:title>\\n    <sch:rule context=\"number_of_entries\">\\n      <sch:assert test=\"text()=count(../entries/entry)\">[ERROR] number_of_entries (<sch:value-of select=\".\"/>) must equal the number of entries/entry elements (<sch:value-of select=\"count(../entries/entry)\"/>)</sch:assert>\\n    </sch:rule>\\n  </sch:pattern>\\n</sch:schema>\\n'", ")", "#NEWLINE#", "tree_valid", "=", "self", ".", "parse", "(", "'<message>\\n  <number_of_entries>0</number_of_entries>\\n  <entries>\\n  </entries>\\n</message>\\n'", ")", "#NEWLINE#", "tree_invalid", "=", "self", ".", "parse", "(", "'<message>\\n  <number_of_entries>3</number_of_entries>\\n  <entries>\\n    <entry>Entry 1</entry>\\n    <entry>Entry 2</entry>\\n  </entries>\\n</message>\\n'", ")", "#NEWLINE#", "schematron", "=", "isoschematron", ".", "Schematron", "(", "schema", ")", "#NEWLINE#", "self", ".", "assertTrue", "(", "schematron", "(", "tree_valid", ")", ",", "schematron", ".", "error_log", ")", "#NEWLINE#", "valid", "=", "schematron", "(", "valid", ")", "#NEWLINE#", "self", ".", "assertTrue", "(", "(", "not", "valid", ")", ")"]}}
{"position": {"error_location": 45, "repair_targets": [21], "repair_candidates": [0, 5, 14, 23, 39, 60, 3, 36, 21, 30, 43, 48, 55, 53, 57, 66, 12, 45]}}
{"prediction": {"error_location": 0.3729652762413025, "repair_targets": [0.9756607413291931], "repair_candidates": [0.000519481603987515, 0.015206407755613327, 0.0007783211767673492, 0.004247388336807489, 0.0002197439898736775, 0.9756607413291931, 0.00035206633037887514, 0.0016472024144604802, 0.0005885922000743449, 5.13617014803458e-05, 1.757982863637153e-05, 0.0003397058753762394, 1.5143938071560115e-05, 0.00023823657829780132, 5.232107923802687e-06, 2.623411637614481e-05, 5.5794062063796446e-06, 8.107833127724007e-05], "target_probs": 0.9756607413291931}}


{"result": {"time": "2021-02-21 06:22:16.548833", "n_pass": [109, 15, 4], "n_token": 67, "loss": [1.201164960861206, 0.01960274577140808], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["self", ")", "#INDENT#", "schema", "=", "self", ".", "parse", "(", "'<sch:schema xmlns:sch=\"http://purl.oclc.org/dsdl/schematron\">\\n  <sch:pattern id=\"number_of_entries\">\\n    <sch:title>mandatory number_of_entries tests</sch:title>\\n    <sch:rule context=\"number_of_entries\">\\n      <sch:assert test=\"text()=count(../entries/entry)\">[ERROR] number_of_entries (<sch:value-of select=\".\"/>) must equal the number of entries/entry elements (<sch:value-of select=\"count(../entries/entry)\"/>)</sch:assert>\\n    </sch:rule>\\n  </sch:pattern>\\n</sch:schema>\\n'", ")", "#NEWLINE#", "tree_valid", "=", "self", ".", "parse", "(", "'<message>\\n  <number_of_entries>0</number_of_entries>\\n  <entries>\\n  </entries>\\n</message>\\n'", ")", "#NEWLINE#", "tree_invalid", "=", "self", ".", "parse", "(", "'<message>\\n  <number_of_entries>3</number_of_entries>\\n  <entries>\\n    <entry>Entry 1</entry>\\n    <entry>Entry 2</entry>\\n  </entries>\\n</message>\\n'", ")", "#NEWLINE#", "schematron", "=", "Schematron", "(", "schema", ")", "#NEWLINE#", "self", ".", "assertTrue", "(", "schematron", "(", "tree_valid", ")", ",", "schematron", ".", "error_log", ")", "#NEWLINE#", "valid", "=", "schematron", "(", "valid", ")", "#NEWLINE#", "self", ".", "assertTrue", "(", "(", "not", "valid", ")", ")"]}}
{"position": {"error_location": 43, "repair_targets": [21], "repair_candidates": [0, 5, 14, 23, 37, 58, 3, 34, 21, 30, 41, 46, 53, 51, 55, 64, 12, 43]}}
{"prediction": {"error_location": 0.3008435368537903, "repair_targets": [0.9805881381034851], "repair_candidates": [0.0004143477708566934, 0.009809444658458233, 0.0008195386035367846, 0.005337723530828953, 0.00022278685355558991, 0.9805881381034851, 0.0003701243840623647, 0.0012100138701498508, 0.0005319523625075817, 4.8497931857127696e-05, 1.7832069715950638e-05, 0.0003685993142426014, 1.3000167200516444e-05, 0.0001902261283248663, 3.7638887988578063e-06, 1.856950984802097e-05, 2.729552761593368e-06, 3.268466389272362e-05], "target_probs": 0.9805881381034851}}


{"result": {"time": "2021-02-21 06:22:16.723257", "n_pass": [121, 18, 5], "n_token": 64, "loss": [1.0160119533538818, 0.018845414742827415], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["self", ")", "#INDENT#", "schema", "=", "self", ".", "parse", "(", "'<sch:schema xmlns:sch=\"http://purl.oclc.org/dsdl/schematron\">\\n  <sch:pattern id=\"number_of_entries\">\\n    <sch:title>mandatory number_of_entries tests</sch:title>\\n    <sch:rule context=\"number_of_entries\">\\n      <sch:assert test=\"text()=count(../entries/entry)\">[ERROR] number_of_entries (<sch:value-of select=\".\"/>) must equal the number of entries/entry elements (<sch:value-of select=\"count(../entries/entry)\"/>)</sch:assert>\\n    </sch:rule>\\n  </sch:pattern>\\n</sch:schema>\\n'", ")", "#NEWLINE#", "tree_valid", "=", "self", ".", "parse", "(", "'<message>\\n  <number_of_entries>0</number_of_entries>\\n  <entries>\\n  </entries>\\n</message>\\n'", ")", "#NEWLINE#", "tree_invalid", "=", "self", ".", "parse", "(", "'<message>\\n  <number_of_entries>3</number_of_entries>\\n  <entries>\\n    <entry>Entry 1</entry>\\n    <entry>Entry 2</entry>\\n  </entries>\\n</message>\\n'", ")", "#NEWLINE#", "schematron", "=", "Schematron", "(", "schema", ")", "#NEWLINE#", "self", ".", "assertTrue", "(", "schematron", "(", "tree_valid", ")", ",", "schematron", ".", "error_log", ")", "#NEWLINE#", "valid", "=", "schematron", "(", "valid", ")", "#NEWLINE#", "self", ".", "assertTrue", "valid", ")", ")"]}}
{"position": {"error_location": 43, "repair_targets": [21], "repair_candidates": [0, 5, 14, 23, 37, 58, 3, 34, 21, 30, 41, 46, 53, 51, 55, 61, 12, 43]}}
{"prediction": {"error_location": 0.3620359003543854, "repair_targets": [0.9813310503959656], "repair_candidates": [0.0003862567828036845, 0.008987593464553356, 0.0011605751933529973, 0.0054722735658288, 0.00034659000812098384, 0.9813310503959656, 0.0005764912348240614, 0.001127702766098082, 0.00028009258676320314, 2.87653583654901e-05, 9.005038009490818e-06, 0.00012061671441188082, 5.603307272394886e-06, 0.00011215661652386189, 1.4455516748057562e-06, 5.767436505266232e-06, 4.63472752016969e-05, 1.7387794741807738e-06], "target_probs": 0.9813310503959656}}


{"result": {"time": "2021-02-21 06:22:16.951636", "n_pass": [131, 22, 6], "n_token": 62, "loss": [1.0744996070861816, 0.02730455994606018], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["self", ")", "#INDENT#", "schema", "=", "self", ".", "parse", "(", "'<sch:schema xmlns:sch=\"http://purl.oclc.org/dsdl/schematron\">\\n  <sch:pattern id=\"number_of_entries\">\\n    <sch:title>mandatory number_of_entries tests</sch:title>\\n    <sch:rule context=\"number_of_entries\">\\n      <sch:assert test=\"text()=count(../entries/entry)\">[ERROR] number_of_entries (<sch:value-of select=\".\"/>) must equal the number of entries/entry elements (<sch:value-of select=\"count(../entries/entry)\"/>)</sch:assert>\\n    </sch:rule>\\n  </sch:pattern>\\n</sch:schema>\\n'", ")", "#NEWLINE#", "tree_valid", "=", "self", ".", "'<message>\\n  <number_of_entries>0</number_of_entries>\\n  <entries>\\n  </entries>\\n</message>\\n'", ")", "#NEWLINE#", "tree_invalid", "=", "self", ".", "parse", "(", "'<message>\\n  <number_of_entries>3</number_of_entries>\\n  <entries>\\n    <entry>Entry 1</entry>\\n    <entry>Entry 2</entry>\\n  </entries>\\n</message>\\n'", ")", "#NEWLINE#", "schematron", "=", "Schematron", "(", "schema", ")", "#NEWLINE#", "self", ".", "assertTrue", "(", "schematron", "(", "tree_valid", ")", ",", "schematron", ".", "error_log", ")", "#NEWLINE#", "valid", "=", "schematron", "(", "valid", ")", "#NEWLINE#", "self", ".", "assertTrue", "valid", ")", ")"]}}
{"position": {"error_location": 41, "repair_targets": [19], "repair_candidates": [0, 5, 14, 21, 35, 56, 3, 32, 19, 28, 39, 44, 51, 49, 53, 59, 12, 41]}}
{"prediction": {"error_location": 0.34146857261657715, "repair_targets": [0.9730648398399353], "repair_candidates": [0.0005715817678719759, 0.012813231907784939, 0.0033529074862599373, 0.0046859984286129475, 0.0006894092657603323, 0.9730648398399353, 0.0012477359268814325, 0.002100198995321989, 0.0006532931001856923, 6.550952821271494e-05, 2.3995740775717422e-05, 0.00017701645265333354, 1.5452487787115388e-05, 0.0001668749173404649, 2.402134896328789e-06, 8.05335002951324e-06, 0.0003579177428036928, 3.5121734072163235e-06], "target_probs": 0.9730648398399353}}


{"result": {"time": "2021-02-21 06:22:17.181022", "n_pass": [137, 26, 7], "n_token": 60, "loss": [0.7581098079681396, 0.02332719787955284], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["self", ")", "#INDENT#", "schema", "=", "self", ".", "parse", "(", "'<sch:schema xmlns:sch=\"http://purl.oclc.org/dsdl/schematron\">\\n  <sch:pattern id=\"number_of_entries\">\\n    <sch:title>mandatory number_of_entries tests</sch:title>\\n    <sch:rule context=\"number_of_entries\">\\n      <sch:assert test=\"text()=count(../entries/entry)\">[ERROR] number_of_entries (<sch:value-of select=\".\"/>) must equal the number of entries/entry elements (<sch:value-of select=\"count(../entries/entry)\"/>)</sch:assert>\\n    </sch:rule>\\n  </sch:pattern>\\n</sch:schema>\\n'", ")", "#NEWLINE#", "tree_valid", "=", "self", ".", "'<message>\\n  <number_of_entries>0</number_of_entries>\\n  <entries>\\n  </entries>\\n</message>\\n'", ")", "#NEWLINE#", "tree_invalid", "=", "self", ".", "parse", "(", "'<message>\\n  <number_of_entries>3</number_of_entries>\\n  <entries>\\n    <entry>Entry 1</entry>\\n    <entry>Entry 2</entry>\\n  </entries>\\n</message>\\n'", "schematron", "=", "Schematron", "(", "schema", ")", "#NEWLINE#", "self", ".", "assertTrue", "(", "schematron", "(", "tree_valid", ")", ",", "schematron", ".", "error_log", ")", "#NEWLINE#", "valid", "=", "schematron", "(", "valid", ")", "#NEWLINE#", "self", ".", "assertTrue", "valid", ")", ")"]}}
{"position": {"error_location": 39, "repair_targets": [19], "repair_candidates": [0, 5, 14, 21, 33, 54, 3, 30, 19, 26, 37, 42, 49, 47, 51, 57, 12, 39]}}
{"prediction": {"error_location": 0.46855124831199646, "repair_targets": [0.976942777633667], "repair_candidates": [0.00038280728040263057, 0.005283816251903772, 0.00015992220141924918, 0.001970297424122691, 1.9968696506111883e-05, 0.976942777633667, 9.627528197597712e-05, 0.014561797492206097, 0.00016807015344966203, 3.886338890879415e-05, 0.00014200949226506054, 4.838523454964161e-05, 2.981401166834985e-06, 0.00010231848136754707, 5.1864946726709604e-05, 3.6620522223529406e-06, 2.203967778768856e-05, 2.315869323865627e-06], "target_probs": 0.976942777633667}}


{"result": {"time": "2021-02-21 06:22:17.412173", "n_pass": [155, 30, 8], "n_token": 58, "loss": [0.5611394643783569, 0.025405818596482277], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["self", ")", "#INDENT#", "schema", "=", "self", ".", "parse", ")", "#NEWLINE#", "tree_valid", "=", "self", ".", "'<message>\\n  <number_of_entries>0</number_of_entries>\\n  <entries>\\n  </entries>\\n</message>\\n'", ")", "#NEWLINE#", "tree_invalid", "=", "self", ".", "parse", "(", "'<message>\\n  <number_of_entries>3</number_of_entries>\\n  <entries>\\n    <entry>Entry 1</entry>\\n    <entry>Entry 2</entry>\\n  </entries>\\n</message>\\n'", "schematron", "=", "Schematron", "(", "schema", ")", "#NEWLINE#", "self", ".", "assertTrue", "(", "schematron", "(", "tree_valid", ")", ",", "schematron", ".", "error_log", ")", "#NEWLINE#", "valid", "=", "schematron", "(", "valid", ")", "#NEWLINE#", "self", ".", "assertTrue", "valid", ")", ")"]}}
{"position": {"error_location": 37, "repair_targets": [17], "repair_candidates": [0, 5, 12, 19, 31, 52, 3, 28, 17, 24, 35, 40, 47, 45, 49, 55, 10, 37]}}
{"prediction": {"error_location": 0.5705586075782776, "repair_targets": [0.9749141931533813], "repair_candidates": [0.0006646057008765638, 0.005437061190605164, 0.0027520647272467613, 0.003457600250840187, 0.00020919689268339425, 0.9749141931533813, 0.0013345308834686875, 0.01027184072881937, 0.00010319578723283485, 0.0001484502136008814, 0.0001886047248262912, 3.972516060457565e-05, 3.781766963584232e-06, 0.00017739381291903555, 8.176953269867226e-05, 2.5589828510419466e-05, 0.00018699320207815617, 3.3837334285635734e-06], "target_probs": 0.9749141931533813}}


{"result": {"time": "2021-02-21 06:22:17.525413", "n_pass": [159, 32, 9], "n_token": 56, "loss": [0.8882743716239929, 0.08515198528766632], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["self", ")", "#INDENT#", "schema", "=", "self", ".", "parse", ")", "#NEWLINE#", "tree_valid", "=", "self", ".", "#NEWLINE#", "tree_invalid", "=", "self", ".", "parse", "(", "'<message>\\n  <number_of_entries>3</number_of_entries>\\n  <entries>\\n    <entry>Entry 1</entry>\\n    <entry>Entry 2</entry>\\n  </entries>\\n</message>\\n'", "schematron", "=", "Schematron", "(", "schema", ")", "#NEWLINE#", "self", ".", "assertTrue", "(", "schematron", "(", "tree_valid", ")", ",", "schematron", ".", "error_log", ")", "#NEWLINE#", "valid", "=", "schematron", "(", "valid", ")", "#NEWLINE#", "self", ".", "assertTrue", "valid", ")", ")"]}}
{"position": {"error_location": 35, "repair_targets": [15], "repair_candidates": [0, 5, 12, 17, 29, 50, 3, 26, 15, 22, 33, 38, 45, 43, 47, 53, 10, 35]}}
{"prediction": {"error_location": 0.41136497259140015, "repair_targets": [0.9183726906776428], "repair_candidates": [0.003597565460950136, 0.00838878657668829, 0.015404618345201015, 0.017573732882738113, 0.0017905783606693149, 0.9183726906776428, 0.0063533419743180275, 0.02514784224331379, 5.782466905657202e-05, 0.00047426376841031015, 0.0005075804074294865, 0.0001371112884953618, 2.125958781107329e-05, 0.001586414291523397, 0.00023523232084698975, 6.334326462820172e-05, 0.00027519860304892063, 1.2557627087517176e-05], "target_probs": 0.9183726906776428}}


{"result": {"time": "2021-02-21 06:22:17.582684", "n_pass": [162, 33, 10], "n_token": 54, "loss": [0.807939887046814, 0.05341654270887375], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["self", ")", "#INDENT#", "schema", "=", "self", ".", "parse", ")", "#NEWLINE#", "tree_valid", "=", "self", ".", "#NEWLINE#", "tree_invalid", "=", "self", "(", "'<message>\\n  <number_of_entries>3</number_of_entries>\\n  <entries>\\n    <entry>Entry 1</entry>\\n    <entry>Entry 2</entry>\\n  </entries>\\n</message>\\n'", "schematron", "=", "Schematron", "(", "schema", ")", "#NEWLINE#", "self", ".", "assertTrue", "(", "schematron", "(", "tree_valid", ")", ",", "schematron", ".", "error_log", ")", "#NEWLINE#", "valid", "=", "schematron", "(", "valid", ")", "#NEWLINE#", "self", ".", "assertTrue", "valid", ")", ")"]}}
{"position": {"error_location": 33, "repair_targets": [15], "repair_candidates": [0, 5, 12, 17, 27, 48, 3, 24, 15, 20, 31, 36, 43, 41, 45, 51, 10, 33]}}
{"prediction": {"error_location": 0.44577550888061523, "repair_targets": [0.947985053062439], "repair_candidates": [0.0024058346170932055, 0.007200268562883139, 0.00815813709050417, 0.013023524545133114, 0.0005581993027590215, 0.947985053062439, 2.2193757104105316e-05, 0.017182309180498123, 2.6827519832295366e-05, 0.00021951169765088707, 0.0008242384647019207, 9.097305155592039e-05, 3.2806383387651294e-05, 0.0017572520300745964, 0.00024942608433775604, 4.888415787718259e-05, 0.00018369090685155243, 3.0881408747518435e-05], "target_probs": 0.947985053062439}}


{"result": {"time": "2021-02-21 06:22:17.639939", "n_pass": [163, 34, 11], "n_token": 52, "loss": [0.8432575464248657, 0.037295177578926086], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["self", ")", "#INDENT#", "schema", "=", "self", ".", "parse", ")", "#NEWLINE#", "tree_valid", "=", "self", ".", "#NEWLINE#", "tree_invalid", "=", "self", "schematron", "=", "Schematron", "(", "schema", ")", "#NEWLINE#", "self", ".", "assertTrue", "(", "schematron", "(", "tree_valid", ")", ",", "schematron", ".", "error_log", ")", "#NEWLINE#", "valid", "=", "schematron", "(", "valid", ")", "#NEWLINE#", "self", ".", "assertTrue", "valid", ")", ")"]}}
{"position": {"error_location": 31, "repair_targets": [15], "repair_candidates": [0, 5, 12, 17, 25, 46, 3, 22, 15, 18, 29, 34, 41, 39, 43, 49, 10, 31]}}
{"prediction": {"error_location": 0.43030649423599243, "repair_targets": [0.9633917212486267], "repair_candidates": [0.0019945695530623198, 0.005965376738458872, 0.005293274763971567, 0.015543400309979916, 0.00047704597818665206, 0.9633917212486267, 0.000277568819001317, 0.005369322840124369, 2.1742531316704117e-05, 8.733491995371878e-05, 0.0002765650278888643, 9.71818299149163e-05, 1.818505916162394e-05, 0.0008318346226587892, 0.0001003412326099351, 2.0762960048159584e-05, 0.00022226142755243927, 1.1500497748784255e-05], "target_probs": 0.9633917212486267}}


{"result": {"time": "2021-02-21 06:22:17.756132", "n_pass": [168, 36, 12], "n_token": 50, "loss": [0.7934491038322449, 0.02649075724184513], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["self", ")", "#INDENT#", "schema", "=", "self", ".", "parse", ")", "#NEWLINE#", "tree_valid", "=", "self", ".", "#NEWLINE#", "tree_invalid", "=", "self", "schematron", "=", "Schematron", "(", "schema", ")", "#NEWLINE#", "self", "(", "schematron", "(", "tree_valid", ")", ",", "schematron", ".", "error_log", ")", "#NEWLINE#", "valid", "=", "schematron", "(", "valid", ")", "#NEWLINE#", "self", ".", "assertTrue", "valid", ")", ")"]}}
{"position": {"error_location": 29, "repair_targets": [15], "repair_candidates": [0, 5, 12, 17, 25, 44, 3, 22, 15, 18, 27, 32, 39, 37, 41, 47, 10, 29]}}
{"prediction": {"error_location": 0.4522821307182312, "repair_targets": [0.973857045173645], "repair_candidates": [0.0011021646205335855, 0.006061330903321505, 0.005878065247088671, 0.007571181282401085, 0.0004845042712986469, 0.973857045173645, 0.0001505989202996716, 0.003542883787304163, 1.74088327185018e-05, 0.00020218022109474987, 0.00016051853890530765, 9.378012327942997e-05, 3.7562720535788685e-05, 0.0005218256847001612, 0.0001617930829524994, 1.290936597797554e-05, 0.00013822315668221563, 6.066097739676479e-06], "target_probs": 0.973857045173645}}


{"result": {"time": "2021-02-21 06:22:17.927216", "n_pass": [187, 39, 13], "n_token": 48, "loss": [0.7451115250587463, 0.0198653694242239], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["self", ")", "#INDENT#", "schema", "=", "self", ".", "parse", ")", "#NEWLINE#", "tree_valid", "=", "self", ".", "#NEWLINE#", "tree_invalid", "=", "self", "schematron", "=", "schema", ")", "#NEWLINE#", "self", "(", "schematron", "(", "tree_valid", ")", ",", "schematron", ".", "error_log", ")", "#NEWLINE#", "valid", "=", "schematron", "(", "valid", ")", "#NEWLINE#", "self", ".", "assertTrue", "valid", ")", ")"]}}
{"position": {"error_location": 27, "repair_targets": [15], "repair_candidates": [0, 5, 12, 17, 23, 42, 3, 20, 15, 18, 25, 30, 37, 35, 39, 45, 10, 27]}}
{"prediction": {"error_location": 0.47468137741088867, "repair_targets": [0.9803306460380554], "repair_candidates": [0.0006997142336331308, 0.003563760546967387, 0.0033787922002375126, 0.005835809279233217, 0.00023926571884658188, 0.9803306460380554, 0.0007096243789419532, 0.004443522542715073, 1.555124981678091e-05, 8.166507177520543e-05, 7.671109051443636e-05, 5.561521538766101e-05, 1.7392738300259225e-05, 0.0002387603890383616, 8.426383283222094e-05, 5.790752311440883e-06, 0.00022113905288279057, 1.926389813888818e-06], "target_probs": 0.9803306460380554}}


{"result": {"time": "2021-02-21 06:22:17.986706", "n_pass": [201, 40, 14], "n_token": 46, "loss": [0.8281195163726807, 0.007089713122695684], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["self", ")", "#INDENT#", "schema", "=", "self", ")", "#NEWLINE#", "tree_valid", "=", "self", ".", "#NEWLINE#", "tree_invalid", "=", "self", "schematron", "=", "schema", ")", "#NEWLINE#", "self", "(", "schematron", "(", "tree_valid", ")", ",", "schematron", ".", "error_log", ")", "#NEWLINE#", "valid", "=", "schematron", "(", "valid", ")", "#NEWLINE#", "self", ".", "assertTrue", "valid", ")", ")"]}}
{"position": {"error_location": 25, "repair_targets": [13], "repair_candidates": [0, 5, 10, 15, 21, 40, 3, 18, 13, 16, 23, 28, 35, 33, 37, 43, 8, 25]}}
{"prediction": {"error_location": 0.4368700385093689, "repair_targets": [0.9929353594779968], "repair_candidates": [0.0002287588722538203, 0.0007969713769853115, 0.002375990618020296, 0.0017637837445363402, 0.00012791863991878927, 0.9929353594779968, 0.00030931003857403994, 0.0010690413182601333, 6.798772574256873e-06, 5.5072341638151556e-05, 4.4813568820245564e-05, 3.497851503198035e-05, 6.394979664037237e-06, 0.00012327992590144277, 4.665939195547253e-05, 2.651172508194577e-06, 7.096229091985151e-05, 1.2428652098606108e-06], "target_probs": 0.9929353594779968}}


{"result": {"time": "2021-02-21 06:22:18.442580", "n_pass": [270, 48, 15], "n_token": 45, "loss": [0.8482882976531982, 0.011020123958587646], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["self", ")", "#INDENT#", "schema", "=", "self", ")", "#NEWLINE#", "tree_valid", "=", "self", ".", "#NEWLINE#", "tree_invalid", "=", "self", "schematron", "schema", ")", "#NEWLINE#", "self", "(", "schematron", "(", "tree_valid", ")", ",", "schematron", ".", "error_log", ")", "#NEWLINE#", "valid", "=", "schematron", "(", "valid", ")", "#NEWLINE#", "self", ".", "assertTrue", "valid", ")", ")"]}}
{"position": {"error_location": 24, "repair_targets": [13], "repair_candidates": [0, 5, 10, 15, 20, 39, 3, 17, 13, 16, 22, 27, 34, 32, 36, 42, 8, 24]}}
{"prediction": {"error_location": 0.42814716696739197, "repair_targets": [0.9890403747558594], "repair_candidates": [0.00026838097255676985, 0.004486294463276863, 0.0013833679258823395, 0.003947413992136717, 0.00014747833483852446, 0.9890403747558594, 0.00010693666263250634, 0.00018583648488856852, 1.94235508388374e-05, 7.652870408492163e-05, 4.986513522453606e-05, 3.103691051364876e-05, 1.1592029295570683e-05, 9.73877395153977e-05, 8.915315993363038e-05, 3.7316694943001494e-06, 5.403556497185491e-05, 1.1679130693664774e-06], "target_probs": 0.9890403747558594}}


{"result": {"time": "2021-02-21 06:22:18.727514", "n_pass": [279, 53, 16], "n_token": 44, "loss": [0.4876994490623474, 0.010720049031078815], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["self", ")", "#INDENT#", "schema", "=", "self", ")", "#NEWLINE#", "tree_valid", "=", "self", ".", "#NEWLINE#", "tree_invalid", "=", "self", "schematron", "schema", ")", "#NEWLINE#", "self", "(", "schematron", "(", "tree_valid", ",", "schematron", ".", "error_log", ")", "#NEWLINE#", "valid", "=", "schematron", "(", "valid", ")", "#NEWLINE#", "self", ".", "assertTrue", "valid", ")", ")"]}}
{"position": {"error_location": 24, "repair_targets": [13], "repair_candidates": [0, 5, 10, 15, 20, 38, 3, 17, 13, 16, 22, 26, 33, 31, 35, 41, 8, 24]}}
{"prediction": {"error_location": 0.6140373945236206, "repair_targets": [0.9893372058868408], "repair_candidates": [0.0002248119271825999, 0.004886246751993895, 0.0011751195415854454, 0.003478559898212552, 0.00012513145338743925, 0.9893372058868408, 9.435783431399614e-05, 0.00018920809088740498, 2.648334157129284e-05, 8.148323831846938e-05, 7.249557529576123e-05, 1.769573282217607e-05, 1.2556950423459057e-05, 0.0001382675691274926, 0.00010186075087403879, 6.282473805185873e-06, 2.9978607926750556e-05, 2.2471565443993313e-06], "target_probs": 0.9893372058868408}}


{"result": {"time": "2021-02-21 06:22:18.784927", "n_pass": [280, 54, 17], "n_token": 43, "loss": [0.8410282135009766, 0.019176797941327095], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["self", ")", "#INDENT#", "schema", "=", "self", ")", "#NEWLINE#", "tree_valid", "=", "self", ".", "#NEWLINE#", "tree_invalid", "=", "self", "schematron", "schema", ")", "#NEWLINE#", "self", "(", "schematron", "(", "tree_valid", "schematron", ".", "error_log", ")", "#NEWLINE#", "valid", "=", "schematron", "(", "valid", ")", "#NEWLINE#", "self", ".", "assertTrue", "valid", ")", ")"]}}
{"position": {"error_location": 24, "repair_targets": [13], "repair_candidates": [0, 5, 10, 15, 20, 37, 3, 17, 13, 16, 22, 25, 32, 30, 34, 40, 8, 24]}}
{"prediction": {"error_location": 0.4312668740749359, "repair_targets": [0.9810059070587158], "repair_candidates": [0.00030235093436203897, 0.005528590176254511, 0.0015149557730183005, 0.009297122247517109, 0.0004939145292155445, 0.9810059070587158, 0.0005654199630953372, 0.00024785962887108326, 2.701251651160419e-05, 0.00015996367437765002, 2.515292180760298e-05, 5.942943971604109e-05, 3.491075403871946e-05, 0.0001561960089020431, 6.144020153442398e-05, 8.735556548344903e-06, 0.0005080436822026968, 2.995522891069413e-06], "target_probs": 0.9810059070587158}}


{"result": {"time": "2021-02-21 06:22:18.898703", "n_pass": [283, 56, 18], "n_token": 41, "loss": [0.6373934149742126, 0.023537831380963326], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["self", ")", "#INDENT#", "schema", "=", "self", ")", "#NEWLINE#", "tree_valid", "=", "self", ".", "#NEWLINE#", "tree_invalid", "=", "self", "schematron", "schema", ")", "#NEWLINE#", "self", "(", "schematron", "(", "tree_valid", "schematron", ".", "#NEWLINE#", "valid", "=", "schematron", "(", "valid", ")", "#NEWLINE#", "self", ".", "assertTrue", "valid", ")", ")"]}}
{"position": {"error_location": 24, "repair_targets": [13], "repair_candidates": [0, 5, 10, 15, 20, 35, 3, 17, 13, 16, 22, 25, 30, 28, 32, 38, 8, 24]}}
{"prediction": {"error_location": 0.5286686420440674, "repair_targets": [0.9767370223999023], "repair_candidates": [0.0003111283003818244, 0.009638153947889805, 0.0012612472055479884, 0.009949684143066406, 0.0002080748527077958, 0.9767370223999023, 0.00037531278212554753, 0.0002572887751739472, 4.858841930399649e-05, 9.321527613792568e-05, 3.365047450643033e-05, 1.997058279812336e-05, 4.2889481846941635e-05, 0.00015146227087825537, 9.430634236196056e-05, 7.2416178227285855e-06, 0.0007566018612124026, 1.4182996892486699e-05], "target_probs": 0.9767370223999023}}


{"result": {"time": "2021-02-21 06:22:19.014354", "n_pass": [290, 58, 19], "n_token": 39, "loss": [0.405813604593277, 0.028931640088558197], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["self", ")", "#INDENT#", "schema", "=", "self", ")", "#NEWLINE#", "tree_valid", "=", "self", ".", "#NEWLINE#", "tree_invalid", "=", "self", "schematron", "schema", ")", "#NEWLINE#", "self", "(", "schematron", "(", "tree_valid", "schematron", ".", "#NEWLINE#", "valid", "=", "schematron", "(", "valid", ")", "#NEWLINE#", "self", ".", "assertTrue", "valid"]}}
{"position": {"error_location": 24, "repair_targets": [13], "repair_candidates": [0, 5, 10, 15, 20, 35, 3, 17, 13, 16, 22, 25, 30, 28, 32, 38, 8, 24]}}
{"prediction": {"error_location": 0.6664343476295471, "repair_targets": [0.9714828729629517], "repair_candidates": [0.0003309585154056549, 0.015693441033363342, 0.0014790657442063093, 0.008356371894478798, 0.000370991590898484, 0.9714828729629517, 0.0006275296327657998, 0.00037921793409623206, 7.698000263189897e-05, 0.00011778383486671373, 3.95321476389654e-05, 3.088719313382171e-05, 0.0001662411232246086, 0.00016727721958886832, 0.00012182858336018398, 1.5997358786989935e-05, 0.000538687570951879, 4.385934971651295e-06], "target_probs": 0.9714828729629517}}


{"result": {"time": "2021-02-21 06:22:19.299071", "n_pass": [298, 63, 20], "n_token": 38, "loss": [0.692742109298706, 0.041934821754693985], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["self", ")", "#INDENT#", "schema", "=", "self", ")", "tree_valid", "=", "self", ".", "#NEWLINE#", "tree_invalid", "=", "self", "schematron", "schema", ")", "#NEWLINE#", "self", "(", "schematron", "(", "tree_valid", "schematron", ".", "#NEWLINE#", "valid", "=", "schematron", "(", "valid", ")", "#NEWLINE#", "self", ".", "assertTrue", "valid"]}}
{"position": {"error_location": 23, "repair_targets": [12], "repair_candidates": [0, 5, 9, 14, 19, 34, 3, 16, 12, 15, 21, 24, 29, 27, 31, 37, 7, 23]}}
{"prediction": {"error_location": 0.5002025961875916, "repair_targets": [0.9589322805404663], "repair_candidates": [0.0002480645489413291, 0.03298461064696312, 0.0016450885450467467, 0.0018896491965278983, 0.0007402767078019679, 0.9589322805404663, 0.001081434660591185, 0.0004478992777876556, 0.0001646857417654246, 0.00013330619549378753, 3.281255339970812e-05, 3.5879845654562814e-06, 0.00023274323029909283, 6.251243030419573e-05, 9.941530151991174e-05, 1.0311290679965168e-05, 0.0012880874564871192, 3.2706693673389964e-06], "target_probs": 0.9589322805404663}}


{"result": {"time": "2021-02-21 06:22:19.696766", "n_pass": [312, 70, 21], "n_token": 37, "loss": [0.7341801524162292, 0.04000223055481911], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["self", ")", "#INDENT#", "schema", "=", "self", ")", "tree_valid", "=", "self", ".", "#NEWLINE#", "tree_invalid", "=", "self", "schematron", "schema", ")", "#NEWLINE#", "self", "schematron", "(", "tree_valid", "schematron", ".", "#NEWLINE#", "valid", "=", "schematron", "(", "valid", ")", "#NEWLINE#", "self", ".", "assertTrue", "valid"]}}
{"position": {"error_location": 22, "repair_targets": [12], "repair_candidates": [0, 5, 9, 14, 19, 33, 3, 16, 12, 15, 20, 23, 28, 26, 30, 36, 7, 22]}}
{"prediction": {"error_location": 0.47989869117736816, "repair_targets": [0.960787296295166], "repair_candidates": [0.00027267681434750557, 0.031651321798563004, 0.0014197685522958636, 0.0024898876436054707, 0.0007112863822840154, 0.960787296295166, 0.0005460864049382508, 0.0004892396391369402, 0.00020683571347035468, 2.682347439986188e-05, 5.899074676563032e-05, 5.987198619550327e-06, 0.00012789078755304217, 6.917037535458803e-05, 6.358894461300224e-05, 1.5240473658195697e-05, 0.0010539742652326822, 3.982504040322965e-06], "target_probs": 0.960787296295166}}


{"result": {"time": "2021-02-21 06:22:19.866260", "n_pass": [321, 73, 22], "n_token": 35, "loss": [0.5243016481399536, 0.11473745852708817], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["self", ")", "#INDENT#", "schema", "=", "self", ")", "tree_valid", "=", "self", ".", "#NEWLINE#", "tree_invalid", "=", "self", "schematron", "schema", ")", "#NEWLINE#", "self", "schematron", "(", "tree_valid", "schematron", ".", "#NEWLINE#", "valid", "=", "schematron", "(", "valid", "self", ".", "assertTrue", "valid"]}}
{"position": {"error_location": 22, "repair_targets": [12], "repair_candidates": [0, 5, 9, 14, 19, 31, 3, 16, 12, 15, 20, 23, 28, 26, 30, 34, 7, 22]}}
{"prediction": {"error_location": 0.5919685959815979, "repair_targets": [0.8916001915931702], "repair_candidates": [0.0005063465796411037, 0.0922553688287735, 0.0027379493694752455, 0.004203088115900755, 0.0011100333649665117, 0.8916001915931702, 0.0012376895174384117, 0.0005495920777320862, 0.00035612646024674177, 0.00013998827489558607, 0.00020004984980914742, 0.0002959295525215566, 0.0003354588116053492, 0.0003339502727612853, 0.00021572371770162135, 0.000510091136675328, 0.0033064610324800014, 0.00010590174497338012], "target_probs": 0.8916001915931702}}


{"result": {"time": "2021-02-21 06:22:19.923201", "n_pass": [325, 74, 23], "n_token": 34, "loss": [0.33840885758399963, 0.014310221187770367], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["self", "#INDENT#", "schema", "=", "self", ")", "tree_valid", "=", "self", ".", "#NEWLINE#", "tree_invalid", "=", "self", "schematron", "schema", ")", "#NEWLINE#", "self", "schematron", "(", "tree_valid", "schematron", ".", "#NEWLINE#", "valid", "=", "schematron", "(", "valid", "self", ".", "assertTrue", "valid"]}}
{"position": {"error_location": 21, "repair_targets": [11], "repair_candidates": [0, 4, 8, 13, 18, 30, 2, 15, 11, 14, 19, 22, 27, 25, 29, 33, 6, 21]}}
{"prediction": {"error_location": 0.7129036784172058, "repair_targets": [0.9857916831970215], "repair_candidates": [0.0003258830402046442, 0.0011417892528697848, 0.0025092200376093388, 0.0019064341904595494, 0.00087802077177912, 0.9857916831970215, 0.0008694918360561132, 0.0012684979010373354, 4.4202002754900604e-05, 6.552192644448951e-05, 0.00020368475816212595, 0.00023064907873049378, 0.0003676846099551767, 0.00041269362554885447, 0.0002803918032441288, 0.0002824408875312656, 0.003336012829095125, 8.573171362513676e-05], "target_probs": 0.9857916831970215}}


{"result": {"time": "2021-02-21 06:22:19.981705", "n_pass": [326, 75, 24], "n_token": 33, "loss": [0.6413556337356567, 0.029962370172142982], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["self", "schema", "=", "self", ")", "tree_valid", "=", "self", ".", "#NEWLINE#", "tree_invalid", "=", "self", "schematron", "schema", ")", "#NEWLINE#", "self", "schematron", "(", "tree_valid", "schematron", ".", "#NEWLINE#", "valid", "=", "schematron", "(", "valid", "self", ".", "assertTrue", "valid"]}}
{"position": {"error_location": 20, "repair_targets": [10], "repair_candidates": [0, 3, 7, 12, 17, 29, 1, 14, 10, 13, 18, 21, 26, 24, 28, 32, 5, 20]}}
{"prediction": {"error_location": 0.5265780687332153, "repair_targets": [0.9704820513725281], "repair_candidates": [0.0009071798995137215, 0.0023393421433866024, 0.0036924323067069054, 0.009917198680341244, 0.0017723024357110262, 0.9704820513725281, 0.0007257664110511541, 0.0020368604455143213, 0.00044870818965137005, 3.28625064867083e-05, 0.0002764930250123143, 0.0002897619269788265, 0.0007988716242834926, 0.0005049821338616312, 0.00034493536804802716, 0.0001885038655018434, 0.004906489048153162, 0.00033530019572936], "target_probs": 0.9704820513725281}}


{"result": {"time": "2021-02-21 06:22:20.038732", "n_pass": [328, 76, 25], "n_token": 32, "loss": [0.7419260740280151, 0.024043424054980278], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["self", "schema", "self", ")", "tree_valid", "=", "self", ".", "#NEWLINE#", "tree_invalid", "=", "self", "schematron", "schema", ")", "#NEWLINE#", "self", "schematron", "(", "tree_valid", "schematron", ".", "#NEWLINE#", "valid", "=", "schematron", "(", "valid", "self", ".", "assertTrue", "valid"]}}
{"position": {"error_location": 19, "repair_targets": [9], "repair_candidates": [0, 2, 6, 11, 16, 28, 1, 13, 9, 12, 17, 20, 25, 23, 27, 31, 4, 19]}}
{"prediction": {"error_location": 0.47619590163230896, "repair_targets": [0.9762433171272278], "repair_candidates": [0.0005571770598180592, 0.0007307810010388494, 0.008125358261168003, 0.00415307329967618, 0.002387531101703644, 0.9762433171272278, 0.0011653103865683079, 0.000813319580629468, 0.00040199299110099673, 0.00015968400111887604, 0.00019297200196888298, 0.00021694581664633006, 0.00022975532920099795, 0.0005832092138007283, 0.00013915816089138389, 0.0004240125708747655, 0.002646727254614234, 0.0008296365267597139], "target_probs": 0.9762433171272278}}


{"result": {"time": "2021-02-21 06:22:20.094995", "n_pass": [330, 77, 26], "n_token": 31, "loss": [1.2398557662963867, 0.015056743286550045], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["self", "schema", "self", "tree_valid", "=", "self", ".", "#NEWLINE#", "tree_invalid", "=", "self", "schematron", "schema", ")", "#NEWLINE#", "self", "schematron", "(", "tree_valid", "schematron", ".", "#NEWLINE#", "valid", "=", "schematron", "(", "valid", "self", ".", "assertTrue", "valid"]}}
{"position": {"error_location": 18, "repair_targets": [8], "repair_candidates": [0, 2, 5, 10, 15, 27, 1, 12, 8, 11, 16, 19, 24, 22, 26, 30, 3, 18]}}
{"prediction": {"error_location": 0.28942596912384033, "repair_targets": [0.9850560426712036], "repair_candidates": [0.0003799038240686059, 0.0005906244041398168, 0.003162146545946598, 0.0018635618034750223, 0.0032775020226836205, 0.9850560426712036, 0.0009311879402957857, 0.0002921294653788209, 0.00031751388451084495, 7.743835885776207e-05, 0.00011187753989361227, 0.0003009304928127676, 9.32295952225104e-05, 0.0006967116496525705, 7.176461076596752e-05, 0.00027266464894637465, 0.0013918798649683595, 0.0011128728510811925], "target_probs": 0.9850560426712036}}


{"result": {"time": "2021-02-21 06:22:20.379034", "n_pass": [341, 82, 27], "n_token": 30, "loss": [1.1845011711120605, 0.009528650902211666], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["self", "schema", "self", "tree_valid", "=", "self", ".", "#NEWLINE#", "tree_invalid", "=", "self", "schematron", "schema", "#NEWLINE#", "self", "schematron", "(", "tree_valid", "schematron", ".", "#NEWLINE#", "valid", "=", "schematron", "(", "valid", "self", ".", "assertTrue", "valid"]}}
{"position": {"error_location": 17, "repair_targets": [8], "repair_candidates": [0, 2, 5, 10, 14, 26, 1, 12, 8, 11, 15, 18, 23, 21, 25, 29, 3, 17]}}
{"prediction": {"error_location": 0.3058987557888031, "repair_targets": [0.9905166029930115], "repair_candidates": [0.0002756921749096364, 0.0006991547998040915, 0.0018420758424326777, 0.0014187783235684037, 0.001996283885091543, 0.9905166029930115, 0.0002960262354463339, 5.366498226067051e-05, 0.0003824607119895518, 0.00010752130037872121, 8.575328683946282e-05, 0.00010170847235713154, 4.678663026425056e-05, 0.0006105090142227709, 4.317789353081025e-05, 0.00017996315727941692, 0.0006602703360840678, 0.0006834742380306125], "target_probs": 0.9905166029930115}}


{"result": {"time": "2021-02-21 06:22:20.548019", "n_pass": [348, 85, 28], "n_token": 29, "loss": [0.6530919671058655, 0.0032373559661209583], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["self", "schema", "self", "tree_valid", "=", "self", ".", "#NEWLINE#", "tree_invalid", "=", "self", "schematron", "schema", "#NEWLINE#", "self", "schematron", "(", "tree_valid", "schematron", "#NEWLINE#", "valid", "=", "schematron", "(", "valid", "self", ".", "assertTrue", "valid"]}}
{"position": {"error_location": 17, "repair_targets": [8], "repair_candidates": [0, 2, 5, 10, 14, 25, 1, 12, 8, 11, 15, 18, 22, 20, 24, 28, 3, 17]}}
{"prediction": {"error_location": 0.5204340815544128, "repair_targets": [0.9967678785324097], "repair_candidates": [0.00010623244452290237, 0.0003204725217074156, 0.0007301743607968092, 0.00032641543657518923, 0.0006506228819489479, 0.9967678785324097, 0.00014253835252020508, 1.9480479750200175e-05, 0.00017315585864707828, 4.610829273588024e-05, 3.043927063117735e-05, 2.9292330054886406e-06, 1.1865791748277843e-05, 0.00017320079496130347, 1.8172097043134272e-05, 3.9534879761049524e-05, 0.000351239723386243, 8.954852819442749e-05], "target_probs": 0.9967678785324097}}


{"result": {"time": "2021-02-21 06:22:20.605024", "n_pass": [358, 86, 29], "n_token": 28, "loss": [0.5552972555160522, 0.00473629729822278], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["self", "schema", "self", "tree_valid", "self", ".", "#NEWLINE#", "tree_invalid", "=", "self", "schematron", "schema", "#NEWLINE#", "self", "schematron", "(", "tree_valid", "schematron", "#NEWLINE#", "valid", "=", "schematron", "(", "valid", "self", ".", "assertTrue", "valid"]}}
{"position": {"error_location": 16, "repair_targets": [7], "repair_candidates": [0, 2, 4, 9, 13, 24, 1, 11, 7, 10, 14, 17, 21, 19, 23, 27, 3, 16]}}
{"prediction": {"error_location": 0.5739015936851501, "repair_targets": [0.9952749013900757], "repair_candidates": [0.0002393467293586582, 0.0002402441023150459, 0.0007995782070793211, 0.0006008912459947169, 0.0005160678410902619, 0.9952749013900757, 0.00041059040813706815, 0.00013828265946358442, 0.001289266743697226, 3.3760657970560715e-05, 4.379820893518627e-05, 3.355443823238602e-06, 9.408982441527769e-05, 6.46409098408185e-05, 2.102084363286849e-05, 5.824826985190157e-06, 0.00017397940973751247, 5.032117769587785e-05], "target_probs": 0.9952749013900757}}


{"result": {"time": "2021-02-21 06:22:20.663889", "n_pass": [360, 87, 30], "n_token": 27, "loss": [0.6907811760902405, 0.05411331728100777], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["self", "schema", "self", "tree_valid", "self", "#NEWLINE#", "tree_invalid", "=", "self", "schematron", "schema", "#NEWLINE#", "self", "schematron", "(", "tree_valid", "schematron", "#NEWLINE#", "valid", "=", "schematron", "(", "valid", "self", ".", "assertTrue", "valid"]}}
{"position": {"error_location": 15, "repair_targets": [6], "repair_candidates": [0, 2, 4, 8, 12, 23, 1, 10, 6, 9, 13, 16, 20, 18, 22, 26, 3, 15]}}
{"prediction": {"error_location": 0.5011844038963318, "repair_targets": [0.9473247528076172], "repair_candidates": [0.0016415753634646535, 0.0023258370347321033, 0.011773763224482536, 0.012897149659693241, 0.00806309375911951, 0.9473247528076172, 0.002336228499189019, 0.0015272024320438504, 0.006688037421554327, 0.00020148087060078979, 0.00047314632683992386, 0.0004137341456953436, 0.0006665499531663954, 0.0013899171026423573, 0.0002887252776417881, 0.00023612676886841655, 0.0012126530054956675, 0.0005400694790296257], "target_probs": 0.9473247528076172}}


{"result": {"time": "2021-02-21 06:22:21.003617", "n_pass": [395, 93, 31], "n_token": 26, "loss": [0.49615585803985596, 0.0432678647339344], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["self", "schema", "self", "tree_valid", "self", "#NEWLINE#", "tree_invalid", "=", "self", "schematron", "schema", "#NEWLINE#", "self", "schematron", "(", "tree_valid", "schematron", "#NEWLINE#", "valid", "schematron", "(", "valid", "self", ".", "assertTrue", "valid"]}}
{"position": {"error_location": 15, "repair_targets": [6], "repair_candidates": [0, 2, 4, 8, 12, 22, 1, 10, 6, 9, 13, 16, 19, 18, 21, 25, 3, 15]}}
{"prediction": {"error_location": 0.6088667511940002, "repair_targets": [0.9576548337936401], "repair_candidates": [0.0019021205371245742, 0.001956605352461338, 0.008229775354266167, 0.011033734306693077, 0.006257232744246721, 0.9576548337936401, 0.0022092326544225216, 0.0015476265689358115, 0.0065964749082922935, 0.00037865646299906075, 0.0003126263036392629, 0.00044746260391548276, 0.00024250289425253868, 0.0002418983931420371, 0.0003091921971645206, 0.00023054388293530792, 0.0003361634735483676, 0.00011345543316565454], "target_probs": 0.9576548337936401}}


{"result": {"time": "2021-02-21 06:22:21.059243", "n_pass": [396, 94, 32], "n_token": 25, "loss": [0.7448690533638, 0.018932700157165527], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["self", "schema", "self", "tree_valid", "self", "#NEWLINE#", "tree_invalid", "=", "self", "schematron", "schema", "#NEWLINE#", "self", "schematron", "(", "tree_valid", "schematron", "#NEWLINE#", "valid", "schematron", "valid", "self", ".", "assertTrue", "valid"]}}
{"position": {"error_location": 15, "repair_targets": [6], "repair_candidates": [0, 2, 4, 8, 12, 21, 1, 10, 6, 9, 13, 16, 19, 18, 20, 24, 3, 15]}}
{"prediction": {"error_location": 0.47479647397994995, "repair_targets": [0.9812453985214233], "repair_candidates": [0.0016957946354523301, 0.0008842305978760123, 0.003514946671202779, 0.003851295681670308, 0.0025043871719390154, 0.9812453985214233, 0.0013354566181078553, 0.00035040685907006264, 0.0027576147112995386, 0.000189263402717188, 0.0002386970882071182, 0.00013451934501063079, 0.00010006882075686008, 0.00038362681516446173, 0.00043681683018803596, 6.559695611940697e-05, 0.00023564050206914544, 7.622220437042415e-05], "target_probs": 0.9812453985214233}}


{"result": {"time": "2021-02-21 06:22:21.116313", "n_pass": [399, 95, 33], "n_token": 24, "loss": [1.0971544981002808, 0.03787611797451973], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["self", "schema", "self", "tree_valid", "self", "#NEWLINE#", "tree_invalid", "=", "self", "schematron", "schema", "#NEWLINE#", "self", "schematron", "(", "tree_valid", "schematron", "#NEWLINE#", "valid", "schematron", "valid", "self", "assertTrue", "valid"]}}
{"position": {"error_location": 15, "repair_targets": [6], "repair_candidates": [0, 2, 4, 8, 12, 21, 1, 10, 6, 9, 13, 16, 19, 18, 20, 23, 3, 15]}}
{"prediction": {"error_location": 0.3338196277618408, "repair_targets": [0.9628322124481201], "repair_candidates": [0.0017049653688445687, 0.0008813575841486454, 0.006430077366530895, 0.0132457809522748, 0.0042471690103411674, 0.9628322124481201, 0.0026327248197048903, 0.0008108635665848851, 0.003546676831319928, 0.0002478138776496053, 0.0002991775400005281, 0.00048070610500872135, 0.00023171069915406406, 0.0013675489462912083, 0.0005510247428901494, 0.00012273469474166632, 0.00020590840722434223, 0.00016154245531652123], "target_probs": 0.9628322124481201}}


{"result": {"time": "2021-02-21 06:22:21.173251", "n_pass": [400, 96, 34], "n_token": 23, "loss": [0.6614981889724731, 0.05266301706433296], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["self", "schema", "self", "tree_valid", "self", "#NEWLINE#", "tree_invalid", "=", "self", "schematron", "schema", "#NEWLINE#", "self", "schematron", "(", "tree_valid", "schematron", "#NEWLINE#", "valid", "schematron", "valid", "self", "valid"]}}
{"position": {"error_location": 15, "repair_targets": [6], "repair_candidates": [0, 2, 4, 8, 12, 21, 1, 10, 6, 9, 13, 16, 19, 18, 20, 22, 3, 15]}}
{"prediction": {"error_location": 0.5160775780677795, "repair_targets": [0.9486996531486511], "repair_candidates": [0.0034483049530535936, 0.0019855787977576256, 0.011652112007141113, 0.011931254528462887, 0.009841732680797577, 0.9486996531486511, 0.001868134131655097, 0.0010865344665944576, 0.0017545025330036879, 0.00017450850282330066, 0.0004496062465477735, 0.0003082002222072333, 0.00022959656780585647, 0.0020365023519843817, 0.0031966054812073708, 0.0003986051888205111, 0.0007019962067715824, 0.00023662262537982315], "target_probs": 0.9486996531486511}}




Minimal simplified tokens:

['self', 'schema', 'self', 'tree_valid', 'self', '#NEWLINE#', 'tree_invalid', '=', 'self', 'schematron', 'schema', '#NEWLINE#', 'self', 'schematron', '(', 'tree_valid', 'schematron', '#NEWLINE#', 'valid', 'schematron', 'valid', 'self', 'valid']
