
Original sample:

{"has_bug": true, "bug_kind": 1, "bug_kind_name": "VARIABLE_MISUSE", "source_tokens": ["#NEWLINE#", "def add(", "self", ",", "rule", ",", "module", ")", ":", "#NEWLINE#", "#INDENT#", "'\\n        Add a Module to this Module under the given rule. All rules within the\\n        sub-module will be accessible to this Module, with their rules prefixed\\n        by the rule provided here.\\n\\n        For example::\\n\\n            module_one = Module()\\n\\n            @module_one.route(\"/fish\")\\n            def fish(request):\\n                return \"This is fish.\"\\n\\n            module_two = Module()\\n\\n            module_two.add(\"/pie\", module_one)\\n\\n        Given that code, the request handler ``fish`` would be available from\\n        the Module ``module_two`` with the rules ``/pie/fish``.\\n        '", "#NEWLINE#", "if", "isinstance", "(", "module", ",", "Application", ")", ":", "#NEWLINE#", "#INDENT#", "raise", "TypeError", "(", "'Applications cannot be added as modules.'", ")", "#NEWLINE#", "#UNINDENT#", "module", ".", "_parents", ".", "add", "(", "self", ")", "#NEWLINE#", "if", "(", "not", "(", "'/'", "in", "rule", ")", ")", ":", "#NEWLINE#", "#INDENT#", "rule", "=", "(", "'/'", "+", "rule", ")", "#NEWLINE#", "#UNINDENT#", "self", ".", "_modules", "[", "module", "]", "=", "module", "#NEWLINE#", "self", ".", "_recalculate_routes", "(", ")"], "error_location": [64], "repair_targets": [4, 45, 51, 56], "repair_candidates": [6, 16, 30, 64, 67, 4, 45, 51, 56, 2, 36, 60, 69], "provenances": [{"datasetProvenance": {"datasetName": "ETHPy150Open", "filepath": "ecdavis/pants/pants/web/application.py", "license": "apache-2.0", "note": "license: bigquery_api"}}], "txt_file": "eval__VARIABLE_MISUSE__SStuB.txt-00014-of-00300", "js_count": 47779, "results": {"model": "transformer", "prob": {"loc": [[0.05271640047430992, 2.011883225350175e-06, 4.149891026372643e-07, 5.5806392396107185e-08, 8.194237125280779e-06, 4.987513690934975e-08, 5.764881734648952e-06, 1.9902328673992997e-08, 6.636077642951932e-08, 9.701013681251425e-08, 7.91491245877296e-08, 2.693839746825688e-07, 3.6357141652842984e-07, 4.337281325206277e-07, 6.587551126813196e-08, 4.244937770181423e-07, 0.0017543615540489554, 4.773203272634419e-07, 1.9433537090662867e-05, 3.96509314271043e-08, 1.9960467056989728e-07, 1.3515307273337385e-07, 5.880058040474978e-08, 1.4128264069768193e-07, 6.765723981061456e-08, 7.558894026260532e-07, 1.156552116299281e-06, 2.966789338643139e-07, 3.7205307990006986e-07, 1.1411645317593866e-07, 1.7847056597020128e-06, 2.9383119937165247e-08, 1.336400430318463e-07, 5.169523120684971e-08, 5.79995891314411e-08, 7.538592399214394e-07, 0.6284900307655334, 4.5549654714704957e-07, 6.587516168110596e-07, 1.8078986840919242e-06, 3.500372542930563e-07, 1.040765368998109e-06, 1.5152039622989832e-07, 6.680584192508832e-06, 1.0825808658410097e-06, 0.001539316144771874, 3.5746401749747747e-07, 5.5594973957795446e-08, 1.0290364116372075e-06, 5.902235784560617e-07, 1.847119079911863e-07, 9.906340892484877e-06, 4.152735755269532e-08, 1.4111634527580463e-07, 7.229680818454653e-07, 2.3655583447634854e-07, 0.0009327359148301184, 5.352345624487498e-07, 9.810186156755663e-07, 3.2630885016260436e-07, 1.3185516763769556e-05, 9.508335097052623e-08, 4.247391700573644e-07, 1.6274860570320016e-07, 0.0665782243013382, 6.388673767787623e-08, 1.6079677607194753e-06, 0.2478930801153183, 2.0817768131564662e-07, 1.1426261181668451e-07, 5.99965801484359e-08, 2.0794621136133173e-08, 6.1444729908544105e-06, 2.1358398498705355e-06]], "pointer": [[0.0, 0.0, 0.0028794328682124615, 0.0, 0.3437040150165558, 0.0, 0.08568235486745834, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.05883457139134407, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0027403829153627157, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0005045991274528205, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.14639095962047577, 0.0, 0.0, 0.0, 0.0, 0.0, 0.30575260519981384, 0.0, 0.0, 0.0, 0.0, 0.0323215052485466, 0.0, 0.0, 0.0, 2.1686855689040385e-05, 0.0, 0.0, 0.0, 0.02110244520008564, 0.0, 0.0, 2.60531796811847e-05, 0.0, 3.9505870518041775e-05, 0.0, 0.0, 0.0, 0.0]], "target": [0.8281691074371338]}, "loss": [2.7093780040740967, 0.18853791058063507], "acc": [0.0, 0.0, 1.0, 0.0]}, "wrong_error_location": [36]}


Trace of simplified code(s):

{"result": {"time": "2021-02-21 07:15:07.395899", "n_pass": [1, 1, 1], "n_token": 74, "loss": [0.46443524956703186, 0.18853791058063507], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def add(", "self", ",", "rule", ",", "module", ")", ":", "#NEWLINE#", "#INDENT#", "'\\n        Add a Module to this Module under the given rule. All rules within the\\n        sub-module will be accessible to this Module, with their rules prefixed\\n        by the rule provided here.\\n\\n        For example::\\n\\n            module_one = Module()\\n\\n            @module_one.route(\"/fish\")\\n            def fish(request):\\n                return \"This is fish.\"\\n\\n            module_two = Module()\\n\\n            module_two.add(\"/pie\", module_one)\\n\\n        Given that code, the request handler ``fish`` would be available from\\n        the Module ``module_two`` with the rules ``/pie/fish``.\\n        '", "#NEWLINE#", "if", "isinstance", "(", "module", ",", "Application", ")", ":", "#NEWLINE#", "#INDENT#", "raise", "TypeError", "(", "'Applications cannot be added as modules.'", ")", "#NEWLINE#", "#UNINDENT#", "module", ".", "_parents", ".", "add", "(", "self", ")", "#NEWLINE#", "if", "(", "not", "(", "'/'", "in", "rule", ")", ")", ":", "#NEWLINE#", "#INDENT#", "rule", "=", "(", "'/'", "+", "rule", ")", "#NEWLINE#", "#UNINDENT#", "self", ".", "_modules", "[", "module", "]", "=", "module", "#NEWLINE#", "self", ".", "_recalculate_routes", "(", ")"]}}
{"position": {"error_location": 36, "repair_targets": [4, 45, 51, 56], "repair_candidates": [6, 16, 30, 64, 67, 4, 45, 51, 56, 2, 36, 60, 69]}}
{"prediction": {"error_location": 0.6284900307655334, "repair_targets": [0.3437040150165558, 0.14639095962047577, 0.30575260519981384, 0.0323215052485466], "repair_candidates": [0.0028794328682124615, 0.3437040150165558, 0.08568235486745834, 0.05883457139134407, 0.0027403829153627157, 0.0005045991274528205, 0.14639095962047577, 0.30575260519981384, 0.0323215052485466, 2.1686855689040385e-05, 0.02110244520008564, 2.60531796811847e-05, 3.9505870518041775e-05], "target_probs": 0.8281691074371338}}


{"result": {"time": "2021-02-21 07:15:07.457690", "n_pass": [22, 2, 2], "n_token": 65, "loss": [0.4785333275794983, 0.17807996273040771], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def add(", "self", ",", "rule", ",", "module", ")", ":", "#NEWLINE#", "#INDENT#", "'\\n        Add a Module to this Module under the given rule. All rules within the\\n        sub-module will be accessible to this Module, with their rules prefixed\\n        by the rule provided here.\\n\\n        For example::\\n\\n            module_one = Module()\\n\\n            @module_one.route(\"/fish\")\\n            def fish(request):\\n                return \"This is fish.\"\\n\\n            module_two = Module()\\n\\n            module_two.add(\"/pie\", module_one)\\n\\n        Given that code, the request handler ``fish`` would be available from\\n        the Module ``module_two`` with the rules ``/pie/fish``.\\n        '", "#NEWLINE#", "if", "isinstance", "(", "module", ",", ")", "#NEWLINE#", "#UNINDENT#", "module", ".", "_parents", ".", "add", "(", "self", ")", "#NEWLINE#", "if", "(", "not", "(", "'/'", "in", "rule", ")", ")", ":", "#NEWLINE#", "#INDENT#", "rule", "=", "(", "'/'", "+", "rule", ")", "#NEWLINE#", "#UNINDENT#", "self", ".", "_modules", "[", "module", "]", "=", "module", "#NEWLINE#", "self", ".", "_recalculate_routes", "(", ")"]}}
{"position": {"error_location": 27, "repair_targets": [4, 36, 42, 47], "repair_candidates": [6, 16, 21, 55, 58, 4, 36, 42, 47, 2, 27, 51, 60]}}
{"prediction": {"error_location": 0.6196915507316589, "repair_targets": [0.5043849945068359, 0.06494246423244476, 0.2570149898529053, 0.010533027350902557], "repair_candidates": [0.0035120605025440454, 0.5043849945068359, 0.10749970376491547, 0.04193345457315445, 0.002127773594111204, 0.0014601473230868578, 0.06494246423244476, 0.2570149898529053, 0.010533027350902557, 1.8206859749625437e-05, 0.0065221297554671764, 2.330338793399278e-05, 2.77143426501425e-05], "target_probs": 0.8368754982948303}}


{"result": {"time": "2021-02-21 07:15:07.516662", "n_pass": [46, 3, 3], "n_token": 60, "loss": [0.38951054215431213, 0.06682422757148743], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def add(", "self", ",", "rule", ",", "module", ")", ":", "#NEWLINE#", "#INDENT#", "'\\n        Add a Module to this Module under the given rule. All rules within the\\n        sub-module will be accessible to this Module, with their rules prefixed\\n        by the rule provided here.\\n\\n        For example::\\n\\n            module_one = Module()\\n\\n            @module_one.route(\"/fish\")\\n            def fish(request):\\n                return \"This is fish.\"\\n\\n            module_two = Module()\\n\\n            module_two.add(\"/pie\", module_one)\\n\\n        Given that code, the request handler ``fish`` would be available from\\n        the Module ``module_two`` with the rules ``/pie/fish``.\\n        '", "#NEWLINE#", "if", "isinstance", "(", "module", ",", ")", "#NEWLINE#", "#UNINDENT#", "module", ".", "_parents", ".", "add", "(", "self", ")", "#NEWLINE#", "in", "rule", ")", ")", ":", "#NEWLINE#", "#INDENT#", "rule", "=", "(", "'/'", "+", "rule", ")", "#NEWLINE#", "#UNINDENT#", "self", ".", "_modules", "[", "module", "]", "=", "module", "#NEWLINE#", "self", ".", "_recalculate_routes", "(", ")"]}}
{"position": {"error_location": 27, "repair_targets": [4, 31, 37, 42], "repair_candidates": [6, 16, 21, 50, 53, 4, 31, 37, 42, 2, 27, 46, 55]}}
{"prediction": {"error_location": 0.6773883104324341, "repair_targets": [0.5056532621383667, 0.016621850430965424, 0.40556004643440247, 0.007524449378252029], "repair_candidates": [0.002687992062419653, 0.5056532621383667, 0.03696320578455925, 0.013558263890445232, 0.0009608656400814652, 0.0013870114926248789, 0.016621850430965424, 0.40556004643440247, 0.007524449378252029, 1.3675368791155051e-05, 0.009022100828588009, 3.4642216633073986e-05, 1.2615472769539338e-05], "target_probs": 0.9353595972061157}}


{"result": {"time": "2021-02-21 07:15:07.574965", "n_pass": [55, 4, 4], "n_token": 56, "loss": [0.13261842727661133, 0.03841768950223923], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def add(", "self", ",", "rule", ",", "module", ")", "#NEWLINE#", "if", "isinstance", "(", "module", ",", ")", "#NEWLINE#", "#UNINDENT#", "module", ".", "_parents", ".", "add", "(", "self", ")", "#NEWLINE#", "in", "rule", ")", ")", ":", "#NEWLINE#", "#INDENT#", "rule", "=", "(", "'/'", "+", "rule", ")", "#NEWLINE#", "#UNINDENT#", "self", ".", "_modules", "[", "module", "]", "=", "module", "#NEWLINE#", "self", ".", "_recalculate_routes", "(", ")"]}}
{"position": {"error_location": 23, "repair_targets": [4, 27, 33, 38], "repair_candidates": [6, 12, 17, 46, 49, 4, 27, 33, 38, 2, 23, 42, 51]}}
{"prediction": {"error_location": 0.8757991194725037, "repair_targets": [0.7751891016960144, 0.01926209218800068, 0.16340427100658417, 0.004455426707863808], "repair_candidates": [0.0005055464571341872, 0.7751891016960144, 0.021297505125403404, 0.010944784618914127, 0.001010649953968823, 7.35845387680456e-05, 0.01926209218800068, 0.16340427100658417, 0.004455426707863808, 7.495393674616935e-06, 0.0038188358303159475, 2.567729643487837e-05, 4.992998583475128e-06], "target_probs": 0.9623109102249146}}


{"result": {"time": "2021-02-21 07:15:07.632230", "n_pass": [56, 5, 5], "n_token": 52, "loss": [0.18600967526435852, 0.1337963491678238], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def add(", "self", ",", "rule", ",", "module", ")", "module", ",", ")", "#NEWLINE#", "#UNINDENT#", "module", ".", "_parents", ".", "add", "(", "self", ")", "#NEWLINE#", "in", "rule", ")", ")", ":", "#NEWLINE#", "#INDENT#", "rule", "=", "(", "'/'", "+", "rule", ")", "#NEWLINE#", "#UNINDENT#", "self", ".", "_modules", "[", "module", "]", "=", "module", "#NEWLINE#", "self", ".", "_recalculate_routes", "(", ")"]}}
{"position": {"error_location": 19, "repair_targets": [4, 23, 29, 34], "repair_candidates": [6, 8, 13, 42, 45, 4, 23, 29, 34, 2, 19, 38, 47]}}
{"prediction": {"error_location": 0.830265462398529, "repair_targets": [0.4352911412715912, 0.012329038232564926, 0.41433146595954895, 0.012816565111279488], "repair_candidates": [0.0002948350738734007, 0.4352911412715912, 0.06690286844968796, 0.046425528824329376, 0.003329884959384799, 5.7342102081747726e-05, 0.012329038232564926, 0.41433146595954895, 0.012816565111279488, 1.8543887563282624e-05, 0.008104518055915833, 8.861883543431759e-05, 9.660463547334075e-06], "target_probs": 0.8747681975364685}}


{"result": {"time": "2021-02-21 07:15:07.693356", "n_pass": [91, 6, 6], "n_token": 50, "loss": [0.37605777382850647, 0.0867479145526886], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def add(", "self", ",", "rule", ",", "module", ")", "module", ",", "#UNINDENT#", "module", ".", "_parents", ".", "add", "(", "self", ")", "#NEWLINE#", "in", "rule", ")", ")", ":", "#NEWLINE#", "#INDENT#", "rule", "=", "(", "'/'", "+", "rule", ")", "#NEWLINE#", "#UNINDENT#", "self", ".", "_modules", "[", "module", "]", "=", "module", "#NEWLINE#", "self", ".", "_recalculate_routes", "(", ")"]}}
{"position": {"error_location": 17, "repair_targets": [4, 21, 27, 32], "repair_candidates": [6, 8, 11, 40, 43, 4, 21, 27, 32, 2, 17, 36, 45]}}
{"prediction": {"error_location": 0.6865625381469727, "repair_targets": [0.28490057587623596, 0.005539598874747753, 0.614808201789856, 0.011659825220704079], "repair_candidates": [0.00018810633628163487, 0.28490057587623596, 0.03539257124066353, 0.03704836592078209, 0.006231406703591347, 6.594607839360833e-05, 0.005539598874747753, 0.614808201789856, 0.011659825220704079, 8.01317764853593e-06, 0.004116513300687075, 3.218675556126982e-05, 8.5962783487048e-06], "target_probs": 0.9169082045555115}}


{"result": {"time": "2021-02-21 07:15:07.750766", "n_pass": [93, 7, 7], "n_token": 48, "loss": [0.5054926872253418, 0.07971279323101044], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def add(", "self", ",", "rule", ",", "module", ")", "module", ",", "#UNINDENT#", "module", ".", "add", "(", "self", ")", "#NEWLINE#", "in", "rule", ")", ")", ":", "#NEWLINE#", "#INDENT#", "rule", "=", "(", "'/'", "+", "rule", ")", "#NEWLINE#", "#UNINDENT#", "self", ".", "_modules", "[", "module", "]", "=", "module", "#NEWLINE#", "self", ".", "_recalculate_routes", "(", ")"]}}
{"position": {"error_location": 15, "repair_targets": [4, 19, 25, 30], "repair_candidates": [6, 8, 11, 38, 41, 4, 19, 25, 30, 2, 15, 34, 43]}}
{"prediction": {"error_location": 0.6032083630561829, "repair_targets": [0.23360754549503326, 0.008812813088297844, 0.6716659069061279, 0.009295279160141945], "repair_candidates": [0.00013206606672611088, 0.23360754549503326, 0.03895672410726547, 0.022050969302654266, 0.014122051186859608, 7.719582936260849e-05, 0.008812813088297844, 0.6716659069061279, 0.009295279160141945, 6.239766207727371e-06, 0.0012232345761731267, 4.494714448810555e-05, 5.085982593300287e-06], "target_probs": 0.923381507396698}}


{"result": {"time": "2021-02-21 07:15:07.808425", "n_pass": [94, 8, 8], "n_token": 46, "loss": [0.45926976203918457, 0.049076277762651443], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def add(", "self", ",", "rule", ",", "module", ")", "module", ",", "#UNINDENT#", "module", "(", "self", ")", "#NEWLINE#", "in", "rule", ")", ")", ":", "#NEWLINE#", "#INDENT#", "rule", "=", "(", "'/'", "+", "rule", ")", "#NEWLINE#", "#UNINDENT#", "self", ".", "_modules", "[", "module", "]", "=", "module", "#NEWLINE#", "self", ".", "_recalculate_routes", "(", ")"]}}
{"position": {"error_location": 13, "repair_targets": [4, 17, 23, 28], "repair_candidates": [6, 8, 11, 36, 39, 4, 17, 23, 28, 2, 13, 32, 41]}}
{"prediction": {"error_location": 0.6317447423934937, "repair_targets": [0.25945064425468445, 0.027433952316641808, 0.654079020023346, 0.011144864372909069], "repair_candidates": [0.00013580246013589203, 0.25945064425468445, 0.02847510576248169, 0.018218137323856354, 0.00032518620719201863, 3.762763662962243e-05, 0.027433952316641808, 0.654079020023346, 0.011144864372909069, 4.998092663299758e-06, 0.0006689558504149318, 1.92355910257902e-05, 6.446102361223893e-06], "target_probs": 0.9521085023880005}}


{"result": {"time": "2021-02-21 07:15:07.865676", "n_pass": [96, 9, 9], "n_token": 44, "loss": [0.29047438502311707, 0.2490616738796234], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def add(", "self", ",", "rule", ",", "module", ")", "module", ",", "#UNINDENT#", "module", "(", "self", "in", "rule", ")", ")", ":", "#NEWLINE#", "#INDENT#", "rule", "=", "(", "'/'", "+", "rule", ")", "#NEWLINE#", "#UNINDENT#", "self", ".", "_modules", "[", "module", "]", "=", "module", "#NEWLINE#", "self", ".", "_recalculate_routes", "(", ")"]}}
{"position": {"error_location": 13, "repair_targets": [4, 15, 21, 26], "repair_candidates": [6, 8, 11, 34, 37, 4, 15, 21, 26, 2, 13, 30, 39]}}
{"prediction": {"error_location": 0.7479088306427002, "repair_targets": [0.2515740692615509, 0.022400936111807823, 0.49401232600212097, 0.011544539593160152], "repair_candidates": [0.0008927956223487854, 0.2515740692615509, 0.13693729043006897, 0.0787448063492775, 0.0016284208977594972, 0.0004332902026362717, 0.022400936111807823, 0.49401232600212097, 0.011544539593160152, 2.3950464310473762e-05, 0.00172993668820709, 5.871090979781002e-05, 1.8906432160292752e-05], "target_probs": 0.7795318961143494}}


{"result": {"time": "2021-02-21 07:15:07.923164", "n_pass": [98, 10, 10], "n_token": 42, "loss": [0.5178057551383972, 0.14848439395427704], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def add(", "self", ",", "rule", ",", "module", ")", "module", ",", "#UNINDENT#", "module", "(", "self", "in", "rule", ":", "#NEWLINE#", "#INDENT#", "rule", "=", "(", "'/'", "+", "rule", ")", "#NEWLINE#", "#UNINDENT#", "self", ".", "_modules", "[", "module", "]", "=", "module", "#NEWLINE#", "self", ".", "_recalculate_routes", "(", ")"]}}
{"position": {"error_location": 13, "repair_targets": [4, 15, 19, 24], "repair_candidates": [6, 8, 11, 32, 35, 4, 15, 19, 24, 2, 13, 28, 37]}}
{"prediction": {"error_location": 0.5958265662193298, "repair_targets": [0.21869006752967834, 0.011521703563630581, 0.6267776489257812, 0.00502406433224678], "repair_candidates": [0.0006092170951887965, 0.21869006752967834, 0.08326378464698792, 0.05212465673685074, 0.0008724655490368605, 0.00021951556846033782, 0.011521703563630581, 0.6267776489257812, 0.00502406433224678, 4.2102979932678863e-05, 0.0007734265527687967, 3.8624148146482185e-05, 4.2745166865643114e-05], "target_probs": 0.8620134592056274}}


{"result": {"time": "2021-02-21 07:15:07.980078", "n_pass": [99, 11, 11], "n_token": 40, "loss": [0.2645399868488312, 0.24579161405563354], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def add(", "self", ",", "rule", ",", "module", ")", "module", ",", "#UNINDENT#", "module", "(", "self", "in", "rule", "#INDENT#", "rule", "=", "(", "'/'", "+", "rule", ")", "#NEWLINE#", "#UNINDENT#", "self", ".", "_modules", "[", "module", "]", "=", "module", "#NEWLINE#", "self", ".", "_recalculate_routes", "(", ")"]}}
{"position": {"error_location": 13, "repair_targets": [4, 15, 17, 22], "repair_candidates": [6, 8, 11, 30, 33, 4, 15, 17, 22, 2, 13, 26, 35]}}
{"prediction": {"error_location": 0.7675589323043823, "repair_targets": [0.30438488721847534, 0.002452924381941557, 0.4731076955795288, 0.002139688702300191], "repair_candidates": [0.0009224303066730499, 0.30438488721847534, 0.14414706826210022, 0.07139060646295547, 0.0006288175354711711, 0.00030613140552304685, 0.002452924381941557, 0.4731076955795288, 0.002139688702300191, 5.008907101000659e-05, 0.00039805989945307374, 2.6914989575743675e-05, 4.462442666408606e-05], "target_probs": 0.7820851802825928}}


{"result": {"time": "2021-02-21 07:15:08.041012", "n_pass": [101, 12, 12], "n_token": 37, "loss": [0.2333446741104126, 0.33231937885284424], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def add(", "self", ",", "rule", ",", "module", ")", "module", ",", "#UNINDENT#", "module", "(", "self", "in", "rule", "#INDENT#", "rule", "=", "rule", ")", "#NEWLINE#", "#UNINDENT#", "self", ".", "_modules", "[", "module", "]", "=", "module", "#NEWLINE#", "self", ".", "_recalculate_routes", "(", ")"]}}
{"position": {"error_location": 13, "repair_targets": [4, 15, 17, 19], "repair_candidates": [6, 8, 11, 27, 30, 4, 15, 17, 19, 2, 13, 23, 32]}}
{"prediction": {"error_location": 0.7918804883956909, "repair_targets": [0.5567758083343506, 0.0016110249562188983, 0.15776994824409485, 0.0011013919720426202], "repair_candidates": [0.0016032312996685505, 0.5567758083343506, 0.17957420647144318, 0.09949982166290283, 0.0011491990881040692, 0.00045800110092386603, 0.0016110249562188983, 0.15776994824409485, 0.0011013919720426202, 5.9550457081058994e-05, 0.00027482540463097394, 4.0072241972666234e-05, 8.287939272122458e-05], "target_probs": 0.7172582149505615}}


{"result": {"time": "2021-02-21 07:15:08.098515", "n_pass": [107, 13, 13], "n_token": 34, "loss": [0.342548131942749, 0.2534998953342438], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def add(", "self", ",", "rule", ",", "module", ")", "module", ",", "#UNINDENT#", "module", "(", "self", "in", "rule", "#INDENT#", "rule", "=", "rule", ")", "#NEWLINE#", "#UNINDENT#", "self", ".", "_modules", "[", "module", "]", "=", "module", "#NEWLINE#", "self", "."]}}
{"position": {"error_location": 13, "repair_targets": [4, 15, 17, 19], "repair_candidates": [6, 8, 11, 27, 30, 4, 15, 17, 19, 2, 13, 23, 32]}}
{"prediction": {"error_location": 0.7099590301513672, "repair_targets": [0.4870298504829407, 0.002741350093856454, 0.2844971716403961, 0.0018114637350663543], "repair_candidates": [0.0016057491302490234, 0.4870298504829407, 0.14505968987941742, 0.07485790550708771, 0.0008829914731904864, 0.0007485519163310528, 0.002741350093856454, 0.2844971716403961, 0.0018114637350663543, 1.9047731257160194e-05, 0.00035864132223650813, 4.084414103999734e-05, 0.0003468202776275575], "target_probs": 0.7760798335075378}}


{"result": {"time": "2021-02-21 07:15:08.212893", "n_pass": [150, 15, 14], "n_token": 33, "loss": [0.4137101173400879, 0.11793679744005203], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["def add(", "self", ",", "rule", ",", "module", ")", "module", ",", "#UNINDENT#", "module", "(", "self", "in", "rule", "#INDENT#", "rule", "=", "rule", ")", "#NEWLINE#", "#UNINDENT#", "self", ".", "_modules", "[", "module", "]", "=", "module", "#NEWLINE#", "self", "."]}}
{"position": {"error_location": 12, "repair_targets": [3, 14, 16, 18], "repair_candidates": [5, 7, 10, 26, 29, 3, 14, 16, 18, 1, 12, 22, 31]}}
{"prediction": {"error_location": 0.6611926555633545, "repair_targets": [0.7474973797798157, 0.0046408274210989475, 0.1353151649236679, 0.0012988342205062509], "repair_candidates": [0.013870644383132458, 0.7474973797798157, 0.05876860395073891, 0.03547286242246628, 0.0002454530622344464, 0.002457996364682913, 0.0046408274210989475, 0.1353151649236679, 0.0012988342205062509, 2.027953087235801e-06, 0.0003161155909765512, 9.323266567662358e-06, 0.00010479566844878718], "target_probs": 0.8887522220611572}}


{"result": {"time": "2021-02-21 07:15:08.270225", "n_pass": [152, 16, 15], "n_token": 32, "loss": [0.8478289246559143, 0.12612424790859222], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["def add(", "self", "rule", ",", "module", ")", "module", ",", "#UNINDENT#", "module", "(", "self", "in", "rule", "#INDENT#", "rule", "=", "rule", ")", "#NEWLINE#", "#UNINDENT#", "self", ".", "_modules", "[", "module", "]", "=", "module", "#NEWLINE#", "self", "."]}}
{"position": {"error_location": 11, "repair_targets": [2, 13, 15, 17], "repair_candidates": [4, 6, 9, 25, 28, 2, 13, 15, 17, 1, 11, 21, 30]}}
{"prediction": {"error_location": 0.42834389209747314, "repair_targets": [0.5098879933357239, 0.0034019576851278543, 0.3663751780986786, 0.0018401887500658631], "repair_candidates": [0.013276825658977032, 0.5098879933357239, 0.05414516106247902, 0.048482831567525864, 0.0004684564773924649, 0.001978314947336912, 0.0034019576851278543, 0.3663751780986786, 0.0018401887500658631, 1.2432786888894043e-06, 7.353373803198338e-05, 4.624303983291611e-06, 6.364634464262053e-05], "target_probs": 0.8815053105354309}}


{"result": {"time": "2021-02-21 07:15:08.327540", "n_pass": [154, 17, 16], "n_token": 31, "loss": [1.040908932685852, 0.26235735416412354], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["def add(", "self", "rule", "module", ")", "module", ",", "#UNINDENT#", "module", "(", "self", "in", "rule", "#INDENT#", "rule", "=", "rule", ")", "#NEWLINE#", "#UNINDENT#", "self", ".", "_modules", "[", "module", "]", "=", "module", "#NEWLINE#", "self", "."]}}
{"position": {"error_location": 10, "repair_targets": [2, 12, 14, 16], "repair_candidates": [3, 5, 8, 24, 27, 2, 12, 14, 16, 1, 10, 20, 29]}}
{"prediction": {"error_location": 0.35313358902931213, "repair_targets": [0.5148738026618958, 0.006400790996849537, 0.2464229315519333, 0.0015385618899017572], "repair_candidates": [0.016111034899950027, 0.5148738026618958, 0.13146202266216278, 0.07940703630447388, 0.0006867956253699958, 0.0028215472120791674, 0.006400790996849537, 0.2464229315519333, 0.0015385618899017572, 2.6819050162885105e-06, 0.00019037524180021137, 4.0813092709868215e-06, 7.83765281084925e-05], "target_probs": 0.7692360877990723}}


{"result": {"time": "2021-02-21 07:15:08.671804", "n_pass": [165, 23, 17], "n_token": 30, "loss": [0.9318573474884033, 0.5301570296287537], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["def add(", "self", "rule", "module", ")", "module", ",", "#UNINDENT#", "module", "(", "self", "in", "rule", "rule", "=", "rule", ")", "#NEWLINE#", "#UNINDENT#", "self", ".", "_modules", "[", "module", "]", "=", "module", "#NEWLINE#", "self", "."]}}
{"position": {"error_location": 10, "repair_targets": [2, 12, 13, 15], "repair_candidates": [3, 5, 8, 23, 26, 2, 12, 13, 15, 1, 10, 19, 28]}}
{"prediction": {"error_location": 0.3938215970993042, "repair_targets": [0.5537503361701965, 0.018605118617415428, 0.014605549164116383, 0.001551535096950829], "repair_candidates": [0.01440987829118967, 0.5537503361701965, 0.3173583149909973, 0.07807882130146027, 0.0013022276107221842, 3.670860314741731e-05, 0.018605118617415428, 0.014605549164116383, 0.001551535096950829, 5.550773494178429e-07, 0.0002766981488093734, 8.56137717164529e-07, 2.3401576981996186e-05], "target_probs": 0.5885125398635864}}


{"result": {"time": "2021-02-21 07:15:08.787815", "n_pass": [169, 25, 18], "n_token": 29, "loss": [0.7240277528762817, 0.6259421110153198], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["def add(", "self", "rule", "module", ")", "module", ",", "#UNINDENT#", "module", "(", "self", "in", "rule", "rule", "=", "rule", "#NEWLINE#", "#UNINDENT#", "self", ".", "_modules", "[", "module", "]", "=", "module", "#NEWLINE#", "self", "."]}}
{"position": {"error_location": 10, "repair_targets": [2, 12, 13, 15], "repair_candidates": [3, 5, 8, 22, 25, 2, 12, 13, 15, 1, 10, 18, 27]}}
{"prediction": {"error_location": 0.4847956895828247, "repair_targets": [0.4852812588214874, 0.028301818296313286, 0.020430022850632668, 0.0007442532805725932], "repair_candidates": [0.01991085149347782, 0.4852812588214874, 0.33563655614852905, 0.10570220649242401, 0.00270190485753119, 7.036781607894227e-05, 0.028301818296313286, 0.020430022850632668, 0.0007442532805725932, 1.3792598565487424e-06, 0.001152508775703609, 1.6411918295489158e-06, 6.518077134387568e-05], "target_probs": 0.5347573757171631}}


{"result": {"time": "2021-02-21 07:15:08.844816", "n_pass": [170, 26, 19], "n_token": 28, "loss": [0.8881194591522217, 0.6759868860244751], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["def add(", "self", "rule", "module", ")", "module", ",", "#UNINDENT#", "module", "(", "self", "in", "rule", "rule", "=", "rule", "#UNINDENT#", "self", ".", "_modules", "[", "module", "]", "=", "module", "#NEWLINE#", "self", "."]}}
{"position": {"error_location": 10, "repair_targets": [2, 12, 13, 15], "repair_candidates": [3, 5, 8, 21, 24, 2, 12, 13, 15, 1, 10, 17, 26]}}
{"prediction": {"error_location": 0.41142868995666504, "repair_targets": [0.43824464082717896, 0.03870242089033127, 0.03130904585123062, 0.0003980870242230594], "repair_candidates": [0.039509065449237823, 0.43824464082717896, 0.34787753224372864, 0.09747803211212158, 0.005506816785782576, 0.0002859696978703141, 0.03870242089033127, 0.03130904585123062, 0.0003980870242230594, 4.705959327111486e-06, 0.0005516937817446887, 1.9909723505406873e-06, 0.00012995795987080783], "target_probs": 0.5086541771888733}}


{"result": {"time": "2021-02-21 07:15:08.901377", "n_pass": [172, 27, 20], "n_token": 26, "loss": [0.615688681602478, 0.6177480816841125], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["def add(", "self", "rule", "module", ")", "module", ",", "#UNINDENT#", "module", "(", "self", "in", "rule", "rule", "=", "rule", "#UNINDENT#", "self", "[", "module", "]", "=", "module", "#NEWLINE#", "self", "."]}}
{"position": {"error_location": 10, "repair_targets": [2, 12, 13, 15], "repair_candidates": [3, 5, 8, 19, 22, 2, 12, 13, 15, 1, 10, 17, 24]}}
{"prediction": {"error_location": 0.5402687788009644, "repair_targets": [0.4568844139575958, 0.0459168441593647, 0.035589344799518585, 0.0007666071760468185], "repair_candidates": [0.0553882010281086, 0.4568844139575958, 0.3090178966522217, 0.08937600255012512, 0.005722806788980961, 0.0002768434933386743, 0.0459168441593647, 0.035589344799518585, 0.0007666071760468185, 0.0006173430010676384, 8.578861161367968e-05, 1.0880276022362523e-05, 0.0003470841038506478], "target_probs": 0.5391572117805481}}


{"result": {"time": "2021-02-21 07:15:09.129726", "n_pass": [183, 31, 21], "n_token": 25, "loss": [0.6387775540351868, 0.6771084070205688], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["def add(", "self", "rule", "module", ")", "module", "#UNINDENT#", "module", "(", "self", "in", "rule", "rule", "=", "rule", "#UNINDENT#", "self", "[", "module", "]", "=", "module", "#NEWLINE#", "self", "."]}}
{"position": {"error_location": 9, "repair_targets": [2, 11, 12, 14], "repair_candidates": [3, 5, 7, 18, 21, 2, 11, 12, 14, 1, 9, 16, 23]}}
{"prediction": {"error_location": 0.5279374122619629, "repair_targets": [0.3689497113227844, 0.07256723940372467, 0.06580311805009842, 0.0007640292751602829], "repair_candidates": [0.05752527341246605, 0.3689497113227844, 0.29939714074134827, 0.12538547813892365, 0.00793264526873827, 0.0006135380826890469, 0.07256723940372467, 0.06580311805009842, 0.0007640292751602829, 0.0006325585418380797, 8.808279380900785e-05, 9.49556579143973e-06, 0.00033166634966619313], "target_probs": 0.5080840587615967}}




Minimal simplified tokens:

['def add(', 'self', 'rule', 'module', ')', 'module', '#UNINDENT#', 'module', '(', 'self', 'in', 'rule', 'rule', '=', 'rule', '#UNINDENT#', 'self', '[', 'module', ']', '=', 'module', '#NEWLINE#', 'self', '.']
