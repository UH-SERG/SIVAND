
Original sample:

{"has_bug": true, "bug_kind": 1, "bug_kind_name": "VARIABLE_MISUSE", "source_tokens": ["#NEWLINE#", "def split_sets(", "data", ",", "training_percent", "=", "None", ",", "n_test_samples", "=", "None", ",", "perm", "=", "False", ")", ":", "#NEWLINE#", "#INDENT#", "'\\n        Split data matrix into training and test matrices.\\n\\n        Training matrix size will be set using the training_percent\\n        parameter, so its samples are the firsts samples found at\\n        data matrix, the rest of samples will be testing matrix.\\n\\n        If neither training_percent or number_test_samples are set, an error\\n        will happen, only one of the parameters can be set at a time.\\n\\n        Arguments:\\n            data (numpy.ndarray): A matrix containing nxf patterns features.\\n            training_percent (float): An optional parameter used to\\n                calculate the number of patterns of training matrix.\\n            n_test_samples (int): An optional parameter used to set the\\n                number of patterns of testing matrix.\\n            perm (bool): A flag to choose if should permute(shuffle) database\\n                before splitting sets.\\n\\n        Returns:\\n            tuple: Both training and test matrices.\\n\\n    '", "#NEWLINE#", "number_of_samples", "=", "data", ".", "shape", "[", "0", "]", "#NEWLINE#", "if", "number_of_samples", ":", "#NEWLINE#", "#INDENT#", "np", ".", "random", ".", "shuffle", "(", "data", ")", "#NEWLINE#", "#UNINDENT#", "if", "(", "n_test_samples", "is not", "None", ")", ":", "#NEWLINE#", "#INDENT#", "training_samples", "=", "(", "number_of_samples", "-", "n_test_samples", ")", "#NEWLINE#", "#UNINDENT#", "else", ":", "#NEWLINE#", "#INDENT#", "if", "(", "training_percent", "is not", "None", ")", ":", "#NEWLINE#", "#INDENT#", "training_samples", "=", "round", "(", "(", "number_of_samples", "*", "training_percent", ")", ")", "#NEWLINE#", "#UNINDENT#", "else", ":", "#NEWLINE#", "#INDENT#", "raise", "Exception", "(", "'Error: Missing \"training_percent\" or \"numberTestSamples\"parameter.'", ")", "#NEWLINE#", "#UNINDENT#", "#UNINDENT#", "training_matrix", "=", "data", "[", "0", ":", "training_samples", ",", ":", "]", "#NEWLINE#", "testing_matrix", "=", "data", "[", "training_samples", ":", ",", ":", "]", "#NEWLINE#", "return", "(", "training_matrix", ",", "testing_matrix", ")"], "error_location": [31], "repair_targets": [12], "repair_candidates": [100, 123, 2, 23, 41, 102, 113, 4, 69, 83, 54, 76, 106, 115, 8, 47, 59, 111, 125, 21, 31, 57, 81, 12], "provenances": [{"datasetProvenance": {"datasetName": "ETHPy150Open", "filepath": "acba/elm/elm/mltools.py", "license": "bsd-3-clause", "note": "license: manual_eval"}}], "txt_file": "eval__VARIABLE_MISUSE__SStuB.txt-00017-of-00300", "js_count": 56480, "results": {"model": "transformer", "prob": {"loc": [[0.20632342994213104, 2.854384774764185e-06, 6.590489647351205e-07, 2.2579262903832387e-08, 1.7519886341688107e-06, 7.744996821656969e-08, 2.509672114570094e-08, 2.1175804221229555e-08, 3.297779130662093e-06, 1.1857346038368632e-07, 2.744385518838044e-08, 1.690692741362909e-08, 4.4565877033164725e-06, 3.157670391829015e-07, 9.834384400164708e-07, 4.6053440172499904e-08, 7.99363206738235e-08, 1.3612351779102028e-07, 7.899131304611728e-08, 1.3985338398470049e-07, 8.982392074585732e-08, 3.0608739507442806e-06, 7.912997546100087e-08, 0.001374384737573564, 7.261949974690651e-08, 4.472694570267777e-08, 6.971145438683379e-08, 4.351682036940474e-06, 2.4579466639806924e-07, 1.1805612132320675e-07, 1.023021383161904e-07, 0.034193895757198334, 2.2644833563845168e-07, 1.6457005358461174e-07, 1.3581089319814055e-07, 6.245355876899339e-08, 2.4316598512541532e-08, 4.4571248913882755e-09, 3.3111120956164086e-08, 1.4147627780403127e-07, 1.9487771396597964e-07, 0.01022515818476677, 2.36144103382685e-07, 3.5059827041550307e-07, 2.209995813018395e-07, 2.9798789569213113e-07, 2.0155736990545847e-07, 0.016215864568948746, 4.855364750255831e-06, 1.2309451449254993e-06, 6.258213147702918e-07, 4.115555896078149e-07, 5.530707198886375e-07, 1.5915999540538905e-07, 1.3651971357830917e-06, 1.6763497967531293e-07, 4.0431081060887664e-07, 0.0028732609935104847, 2.2871070370911184e-07, 0.006596106104552746, 6.598414188374591e-07, 5.951729349362722e-07, 2.2851402547985344e-07, 7.392785050797102e-07, 3.594721817989921e-07, 3.6081030430068495e-07, 2.882798639802786e-07, 4.2310071535212046e-07, 2.4475141913171683e-07, 0.002640548162162304, 1.5486833717659465e-06, 5.718288207390287e-07, 5.489116574608488e-07, 7.33588990442513e-07, 4.3453388798297965e-07, 2.075348959351686e-07, 4.011279088445008e-06, 6.003546104693669e-08, 5.162287308735358e-08, 3.309491489744687e-07, 1.0339384743929259e-06, 0.009862957522273064, 1.9568521736346156e-07, 0.0018135425634682178, 5.894333980904776e-07, 2.3436898288764496e-07, 5.283621931084781e-07, 2.6478630843485007e-07, 9.327383850177284e-06, 5.196213237468328e-07, 5.131288958182267e-07, 3.0705848530487856e-07, 7.03049209960227e-08, 6.157061704925582e-08, 1.7974260799746844e-06, 1.1531287782418076e-05, 1.5746941244287882e-06, 5.094902917335276e-07, 2.546481141507684e-07, 2.346326368751761e-07, 1.4760554449821939e-06, 1.8563218873168807e-07, 0.0017232828540727496, 2.488344762241468e-06, 1.71704468812095e-05, 1.0169308097829344e-06, 0.5670722126960754, 5.33488218934508e-07, 5.992325782244734e-07, 2.5127567369054304e-06, 1.5316277313104365e-06, 1.1181989066244569e-05, 3.063284452764492e-07, 0.0419018492102623, 9.557750672684051e-06, 0.08817891776561737, 9.993264029617421e-07, 1.2196070429126848e-06, 9.73936948867049e-07, 4.516458375292132e-06, 1.2053890259267064e-06, 2.593696422081848e-07, 4.4359774165059207e-07, 0.0001564516860526055, 1.8901574776464258e-06, 0.008707528933882713, 2.961415020763525e-06]], "pointer": [[0.0, 0.0, 0.00354604865424335, 0.0, 0.0031322105787694454, 0.0, 0.0, 0.0, 0.0029421208892017603, 0.0, 0.0, 0.0, 0.9718732237815857, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.004907626658678055, 0.0, 6.923192995600402e-05, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 9.138556379184593e-06, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.00024233665317296982, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0002748562255874276, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0014524925500154495, 0.0, 0.0, 0.00038815688458271325, 0.0, 0.000885866058524698, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.00029841793002560735, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.000832208024803549, 0.0, 0.0, 0.0, 0.0, 0.0004332305397838354, 0.0, 0.00027723368839360774, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0072843823581933975, 0.0, 0.00026226212503388524, 0.0, 0.0, 0.0, 2.9219965654192492e-05, 0.0, 0.0, 0.0, 0.0, 0.0002726106613408774, 0.0, 0.0004394716233946383, 0.0, 3.901190939359367e-05, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.00010657845268724486, 0.0, 2.2590108983422397e-06, 0.0]], "target": [0.9718732237815857]}, "loss": [3.3757081031799316, 0.028529910370707512], "acc": [0.0, 0.0, 1.0, 0.0]}, "wrong_error_location": [106]}


Trace of simplified code(s):

{"result": {"time": "2021-02-21 07:31:49.156677", "n_pass": [1, 1, 1], "n_token": 127, "loss": [0.5672684907913208, 0.028529910370707512], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def split_sets(", "data", ",", "training_percent", "=", "None", ",", "n_test_samples", "=", "None", ",", "perm", "=", "False", ")", ":", "#NEWLINE#", "#INDENT#", "'\\n        Split data matrix into training and test matrices.\\n\\n        Training matrix size will be set using the training_percent\\n        parameter, so its samples are the firsts samples found at\\n        data matrix, the rest of samples will be testing matrix.\\n\\n        If neither training_percent or number_test_samples are set, an error\\n        will happen, only one of the parameters can be set at a time.\\n\\n        Arguments:\\n            data (numpy.ndarray): A matrix containing nxf patterns features.\\n            training_percent (float): An optional parameter used to\\n                calculate the number of patterns of training matrix.\\n            n_test_samples (int): An optional parameter used to set the\\n                number of patterns of testing matrix.\\n            perm (bool): A flag to choose if should permute(shuffle) database\\n                before splitting sets.\\n\\n        Returns:\\n            tuple: Both training and test matrices.\\n\\n    '", "#NEWLINE#", "number_of_samples", "=", "data", ".", "shape", "[", "0", "]", "#NEWLINE#", "if", "number_of_samples", ":", "#NEWLINE#", "#INDENT#", "np", ".", "random", ".", "shuffle", "(", "data", ")", "#NEWLINE#", "#UNINDENT#", "if", "(", "n_test_samples", "is not", "None", ")", ":", "#NEWLINE#", "#INDENT#", "training_samples", "=", "(", "number_of_samples", "-", "n_test_samples", ")", "#NEWLINE#", "#UNINDENT#", "else", ":", "#NEWLINE#", "#INDENT#", "if", "(", "training_percent", "is not", "None", ")", ":", "#NEWLINE#", "#INDENT#", "training_samples", "=", "round", "(", "(", "number_of_samples", "*", "training_percent", ")", ")", "#NEWLINE#", "#UNINDENT#", "else", ":", "#NEWLINE#", "#INDENT#", "raise", "Exception", "(", "'Error: Missing \"training_percent\" or \"numberTestSamples\"parameter.'", ")", "#NEWLINE#", "#UNINDENT#", "#UNINDENT#", "training_matrix", "=", "data", "[", "0", ":", "training_samples", ",", ":", "]", "#NEWLINE#", "testing_matrix", "=", "data", "[", "training_samples", ":", ",", ":", "]", "#NEWLINE#", "return", "(", "training_matrix", ",", "testing_matrix", ")"]}}
{"position": {"error_location": 106, "repair_targets": [12], "repair_candidates": [100, 123, 2, 23, 41, 102, 113, 4, 69, 83, 54, 76, 106, 115, 8, 47, 59, 111, 125, 21, 31, 57, 81, 12]}}
{"prediction": {"error_location": 0.5670722126960754, "repair_targets": [0.9718732237815857], "repair_candidates": [0.00354604865424335, 0.0031322105787694454, 0.0029421208892017603, 0.9718732237815857, 0.004907626658678055, 6.923192995600402e-05, 9.138556379184593e-06, 0.00024233665317296982, 0.0002748562255874276, 0.0014524925500154495, 0.00038815688458271325, 0.000885866058524698, 0.00029841793002560735, 0.000832208024803549, 0.0004332305397838354, 0.00027723368839360774, 0.0072843823581933975, 0.00026226212503388524, 2.9219965654192492e-05, 0.0002726106613408774, 0.0004394716233946383, 3.901190939359367e-05, 0.00010657845268724486, 2.2590108983422397e-06], "target_probs": 0.9718732237815857}}


{"result": {"time": "2021-02-21 07:31:49.298966", "n_pass": [96, 3, 2], "n_token": 123, "loss": [1.0281541347503662, 0.018637770786881447], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def split_sets(", "data", ",", "training_percent", "=", "None", ",", "n_test_samples", "=", "None", ",", "perm", "=", "False", "'\\n        Split data matrix into training and test matrices.\\n\\n        Training matrix size will be set using the training_percent\\n        parameter, so its samples are the firsts samples found at\\n        data matrix, the rest of samples will be testing matrix.\\n\\n        If neither training_percent or number_test_samples are set, an error\\n        will happen, only one of the parameters can be set at a time.\\n\\n        Arguments:\\n            data (numpy.ndarray): A matrix containing nxf patterns features.\\n            training_percent (float): An optional parameter used to\\n                calculate the number of patterns of training matrix.\\n            n_test_samples (int): An optional parameter used to set the\\n                number of patterns of testing matrix.\\n            perm (bool): A flag to choose if should permute(shuffle) database\\n                before splitting sets.\\n\\n        Returns:\\n            tuple: Both training and test matrices.\\n\\n    '", "#NEWLINE#", "number_of_samples", "=", "data", ".", "shape", "[", "0", "]", "#NEWLINE#", "if", "number_of_samples", ":", "#NEWLINE#", "#INDENT#", "np", ".", "random", ".", "shuffle", "(", "data", ")", "#NEWLINE#", "#UNINDENT#", "if", "(", "n_test_samples", "is not", "None", ")", ":", "#NEWLINE#", "#INDENT#", "training_samples", "=", "(", "number_of_samples", "-", "n_test_samples", ")", "#NEWLINE#", "#UNINDENT#", "else", ":", "#NEWLINE#", "#INDENT#", "if", "(", "training_percent", "is not", "None", ")", ":", "#NEWLINE#", "#INDENT#", "training_samples", "=", "round", "(", "(", "number_of_samples", "*", "training_percent", ")", ")", "#NEWLINE#", "#UNINDENT#", "else", ":", "#NEWLINE#", "#INDENT#", "raise", "Exception", "(", "'Error: Missing \"training_percent\" or \"numberTestSamples\"parameter.'", ")", "#NEWLINE#", "#UNINDENT#", "#UNINDENT#", "training_matrix", "=", "data", "[", "0", ":", "training_samples", ",", ":", "]", "#NEWLINE#", "testing_matrix", "=", "data", "[", "training_samples", ":", ",", ":", "]", "#NEWLINE#", "return", "(", "training_matrix", ",", "testing_matrix", ")"]}}
{"position": {"error_location": 102, "repair_targets": [12], "repair_candidates": [96, 119, 2, 19, 37, 98, 109, 4, 65, 79, 50, 72, 102, 111, 8, 43, 55, 107, 121, 17, 27, 53, 77, 12]}}
{"prediction": {"error_location": 0.35766658186912537, "repair_targets": [0.9815348386764526], "repair_candidates": [0.00245396769605577, 0.002596597420051694, 0.0022579196374863386, 0.9815348386764526, 0.003430749522522092, 4.346023706602864e-05, 4.196758254693123e-06, 0.00018231637659482658, 0.00013828795636072755, 0.0010758754797279835, 0.0001551596069475636, 0.0008649544906802475, 0.00017721574113238603, 0.0006369933253154159, 0.00012460244761314243, 0.00021716654009651393, 0.003498378675431013, 0.0001411233242833987, 3.7207202694844455e-05, 0.00022916369198355824, 0.00012661560322158039, 4.414935392560437e-05, 2.681090154510457e-05, 2.185295898016193e-06], "target_probs": 0.9815348386764526}}


{"result": {"time": "2021-02-21 07:31:51.281581", "n_pass": [218, 33, 3], "n_token": 121, "loss": [0.7885558605194092, 0.016154007986187935], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def split_sets(", "data", ",", "training_percent", "=", "None", ",", "n_test_samples", "=", "None", ",", "perm", "=", "False", "'\\n        Split data matrix into training and test matrices.\\n\\n        Training matrix size will be set using the training_percent\\n        parameter, so its samples are the firsts samples found at\\n        data matrix, the rest of samples will be testing matrix.\\n\\n        If neither training_percent or number_test_samples are set, an error\\n        will happen, only one of the parameters can be set at a time.\\n\\n        Arguments:\\n            data (numpy.ndarray): A matrix containing nxf patterns features.\\n            training_percent (float): An optional parameter used to\\n                calculate the number of patterns of training matrix.\\n            n_test_samples (int): An optional parameter used to set the\\n                number of patterns of testing matrix.\\n            perm (bool): A flag to choose if should permute(shuffle) database\\n                before splitting sets.\\n\\n        Returns:\\n            tuple: Both training and test matrices.\\n\\n    '", "#NEWLINE#", "number_of_samples", "=", "data", ".", "shape", "[", "0", "]", "#NEWLINE#", "if", "number_of_samples", ":", "#NEWLINE#", "#INDENT#", "np", ".", "random", ".", "shuffle", "(", "data", ")", "#NEWLINE#", "#UNINDENT#", "if", "(", "n_test_samples", "is not", "None", ")", ":", "#NEWLINE#", "#INDENT#", "training_samples", "=", "(", "number_of_samples", "-", "n_test_samples", ")", "#NEWLINE#", "#UNINDENT#", "else", ":", "#NEWLINE#", "#INDENT#", "if", "(", "training_percent", "is not", "None", ")", ":", "#NEWLINE#", "#INDENT#", "training_samples", "(", "(", "number_of_samples", "*", "training_percent", ")", ")", "#NEWLINE#", "#UNINDENT#", "else", ":", "#NEWLINE#", "#INDENT#", "raise", "Exception", "(", "'Error: Missing \"training_percent\" or \"numberTestSamples\"parameter.'", ")", "#NEWLINE#", "#UNINDENT#", "#UNINDENT#", "training_matrix", "=", "data", "[", "0", ":", "training_samples", ",", ":", "]", "#NEWLINE#", "testing_matrix", "=", "data", "[", "training_samples", ":", ",", ":", "]", "#NEWLINE#", "return", "(", "training_matrix", ",", "testing_matrix", ")"]}}
{"position": {"error_location": 100, "repair_targets": [12], "repair_candidates": [94, 117, 2, 19, 37, 96, 107, 4, 65, 77, 50, 72, 100, 109, 8, 43, 55, 105, 119, 17, 27, 53, 75, 12]}}
{"prediction": {"error_location": 0.454500675201416, "repair_targets": [0.9839757680892944], "repair_candidates": [0.0019735032692551613, 0.002649537054821849, 0.0022438624873757362, 0.9839757680892944, 0.0027220346964895725, 3.4751632483676076e-05, 3.148520590912085e-06, 0.00014003344404045492, 0.00011968812032137066, 0.0008081580162979662, 8.835168409859762e-05, 0.0012797937961295247, 0.00018253913731314242, 9.226940892403945e-05, 0.0001132730467361398, 0.0005034163477830589, 0.0025230140890926123, 0.0001358742592856288, 4.9984679208137095e-05, 0.0002002870023716241, 8.072132186498493e-05, 5.6415585277136415e-05, 2.2127051124698482e-05, 1.3763043398284935e-06], "target_probs": 0.9839757680892944}}


{"result": {"time": "2021-02-21 07:31:51.349121", "n_pass": [219, 34, 4], "n_token": 119, "loss": [0.7728424668312073, 0.04076607525348663], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def split_sets(", "data", ",", "training_percent", "=", "None", ",", "n_test_samples", "=", "None", ",", "perm", "=", "False", "'\\n        Split data matrix into training and test matrices.\\n\\n        Training matrix size will be set using the training_percent\\n        parameter, so its samples are the firsts samples found at\\n        data matrix, the rest of samples will be testing matrix.\\n\\n        If neither training_percent or number_test_samples are set, an error\\n        will happen, only one of the parameters can be set at a time.\\n\\n        Arguments:\\n            data (numpy.ndarray): A matrix containing nxf patterns features.\\n            training_percent (float): An optional parameter used to\\n                calculate the number of patterns of training matrix.\\n            n_test_samples (int): An optional parameter used to set the\\n                number of patterns of testing matrix.\\n            perm (bool): A flag to choose if should permute(shuffle) database\\n                before splitting sets.\\n\\n        Returns:\\n            tuple: Both training and test matrices.\\n\\n    '", "#NEWLINE#", "number_of_samples", "=", "data", ".", "shape", "[", "0", "]", "#NEWLINE#", "if", "number_of_samples", ":", "#NEWLINE#", "#INDENT#", "np", ".", "random", ".", "shuffle", "(", "data", ")", "#NEWLINE#", "#UNINDENT#", "if", "(", "n_test_samples", "is not", "None", ")", ":", "#NEWLINE#", "#INDENT#", "training_samples", "=", "(", "number_of_samples", "-", "n_test_samples", ")", "#NEWLINE#", "#UNINDENT#", "else", ":", "#NEWLINE#", "#INDENT#", "if", "(", "training_percent", "is not", "None", ")", ":", "#NEWLINE#", "#INDENT#", "training_samples", "number_of_samples", "*", "training_percent", ")", ")", "#NEWLINE#", "#UNINDENT#", "else", ":", "#NEWLINE#", "#INDENT#", "raise", "Exception", "(", "'Error: Missing \"training_percent\" or \"numberTestSamples\"parameter.'", ")", "#NEWLINE#", "#UNINDENT#", "#UNINDENT#", "training_matrix", "=", "data", "[", "0", ":", "training_samples", ",", ":", "]", "#NEWLINE#", "testing_matrix", "=", "data", "[", "training_samples", ":", ",", ":", "]", "#NEWLINE#", "return", "(", "training_matrix", ",", "testing_matrix", ")"]}}
{"position": {"error_location": 98, "repair_targets": [12], "repair_candidates": [92, 115, 2, 19, 37, 94, 105, 4, 65, 75, 50, 72, 98, 107, 8, 43, 55, 103, 117, 17, 27, 53, 73, 12]}}
{"prediction": {"error_location": 0.46169883012771606, "repair_targets": [0.9600536823272705], "repair_candidates": [0.0035051486920565367, 0.003292987821623683, 0.003540015546604991, 0.9600536823272705, 0.006658000871539116, 6.488270446425304e-05, 2.4896182367228903e-05, 0.00024055660469457507, 0.00018720510706771165, 0.001601582276634872, 0.0005494629149325192, 0.0027442900463938713, 0.00026148228789679706, 0.00035987418959848583, 0.010196722112596035, 0.0009308885782957077, 0.004479783587157726, 0.0003486368805170059, 0.0002065833832602948, 0.0003145067603327334, 0.00020908252918161452, 0.0001700041175354272, 5.701912959921174e-05, 2.833405687852064e-06], "target_probs": 0.9600536823272705}}


{"result": {"time": "2021-02-21 07:31:51.416254", "n_pass": [222, 35, 5], "n_token": 117, "loss": [0.9603475332260132, 0.048635274171829224], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def split_sets(", "data", ",", "training_percent", "=", "None", ",", "n_test_samples", "=", "None", ",", "perm", "=", "False", "'\\n        Split data matrix into training and test matrices.\\n\\n        Training matrix size will be set using the training_percent\\n        parameter, so its samples are the firsts samples found at\\n        data matrix, the rest of samples will be testing matrix.\\n\\n        If neither training_percent or number_test_samples are set, an error\\n        will happen, only one of the parameters can be set at a time.\\n\\n        Arguments:\\n            data (numpy.ndarray): A matrix containing nxf patterns features.\\n            training_percent (float): An optional parameter used to\\n                calculate the number of patterns of training matrix.\\n            n_test_samples (int): An optional parameter used to set the\\n                number of patterns of testing matrix.\\n            perm (bool): A flag to choose if should permute(shuffle) database\\n                before splitting sets.\\n\\n        Returns:\\n            tuple: Both training and test matrices.\\n\\n    '", "#NEWLINE#", "number_of_samples", "=", "data", ".", "shape", "[", "0", "]", "#NEWLINE#", "if", "number_of_samples", ":", "#NEWLINE#", "#INDENT#", "np", ".", "random", ".", "shuffle", "(", "data", ")", "#NEWLINE#", "#UNINDENT#", "if", "(", "n_test_samples", "is not", "None", ")", ":", "#NEWLINE#", "#INDENT#", "training_samples", "=", "(", "number_of_samples", "-", "n_test_samples", ")", "#NEWLINE#", "#UNINDENT#", "else", ":", "#NEWLINE#", "#INDENT#", "if", "(", "training_percent", "is not", "None", ")", ":", "#NEWLINE#", "#INDENT#", "training_samples", "number_of_samples", "*", "training_percent", ")", "#UNINDENT#", "else", ":", "#NEWLINE#", "#INDENT#", "raise", "Exception", "(", "'Error: Missing \"training_percent\" or \"numberTestSamples\"parameter.'", ")", "#NEWLINE#", "#UNINDENT#", "#UNINDENT#", "training_matrix", "=", "data", "[", "0", ":", "training_samples", ",", ":", "]", "#NEWLINE#", "testing_matrix", "=", "data", "[", "training_samples", ":", ",", ":", "]", "#NEWLINE#", "return", "(", "training_matrix", ",", "testing_matrix", ")"]}}
{"position": {"error_location": 96, "repair_targets": [12], "repair_candidates": [90, 113, 2, 19, 37, 92, 103, 4, 65, 75, 50, 72, 96, 105, 8, 43, 55, 101, 115, 17, 27, 53, 73, 12]}}
{"prediction": {"error_location": 0.38275977969169617, "repair_targets": [0.9525284767150879], "repair_candidates": [0.0034869364462792873, 0.0031555353198200464, 0.0038217061664909124, 0.9525284767150879, 0.00684257410466671, 6.59204670228064e-05, 2.490609767846763e-05, 0.0002267997624585405, 0.0001818149903556332, 0.001959040993824601, 0.0006633932352997363, 0.0029229470528662205, 0.0002422352263238281, 0.0005786664551123977, 0.011930298991501331, 0.0009278212091885507, 0.008897103369235992, 0.0004537148051895201, 0.0002671403926797211, 0.00023954076459631324, 0.00019747276382986456, 0.00029095515492372215, 9.267886343877763e-05, 2.386849246249767e-06], "target_probs": 0.9525284767150879}}


{"result": {"time": "2021-02-21 07:31:51.484676", "n_pass": [223, 36, 6], "n_token": 115, "loss": [0.9810758829116821, 0.05677108094096184], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def split_sets(", "data", ",", "training_percent", "=", "None", ",", "n_test_samples", "=", "None", ",", "perm", "=", "False", "'\\n        Split data matrix into training and test matrices.\\n\\n        Training matrix size will be set using the training_percent\\n        parameter, so its samples are the firsts samples found at\\n        data matrix, the rest of samples will be testing matrix.\\n\\n        If neither training_percent or number_test_samples are set, an error\\n        will happen, only one of the parameters can be set at a time.\\n\\n        Arguments:\\n            data (numpy.ndarray): A matrix containing nxf patterns features.\\n            training_percent (float): An optional parameter used to\\n                calculate the number of patterns of training matrix.\\n            n_test_samples (int): An optional parameter used to set the\\n                number of patterns of testing matrix.\\n            perm (bool): A flag to choose if should permute(shuffle) database\\n                before splitting sets.\\n\\n        Returns:\\n            tuple: Both training and test matrices.\\n\\n    '", "#NEWLINE#", "number_of_samples", "=", "data", ".", "shape", "[", "0", "]", "#NEWLINE#", "if", "number_of_samples", ":", "#NEWLINE#", "#INDENT#", "np", ".", "random", ".", "shuffle", "(", "data", ")", "#NEWLINE#", "#UNINDENT#", "if", "(", "n_test_samples", "is not", "None", ")", ":", "#NEWLINE#", "#INDENT#", "training_samples", "=", "(", "number_of_samples", "-", "n_test_samples", ")", "#NEWLINE#", "#UNINDENT#", "else", ":", "#NEWLINE#", "#INDENT#", "if", "(", "training_percent", "is not", "None", ")", ":", "#NEWLINE#", "#INDENT#", "training_samples", "number_of_samples", "*", "training_percent", ")", ":", "#NEWLINE#", "#INDENT#", "raise", "Exception", "(", "'Error: Missing \"training_percent\" or \"numberTestSamples\"parameter.'", ")", "#NEWLINE#", "#UNINDENT#", "#UNINDENT#", "training_matrix", "=", "data", "[", "0", ":", "training_samples", ",", ":", "]", "#NEWLINE#", "testing_matrix", "=", "data", "[", "training_samples", ":", ",", ":", "]", "#NEWLINE#", "return", "(", "training_matrix", ",", "testing_matrix", ")"]}}
{"position": {"error_location": 94, "repair_targets": [12], "repair_candidates": [88, 111, 2, 19, 37, 90, 101, 4, 65, 75, 50, 72, 94, 103, 8, 43, 55, 99, 113, 17, 27, 53, 73, 12]}}
{"prediction": {"error_location": 0.37490755319595337, "repair_targets": [0.9448103308677673], "repair_candidates": [0.003065057098865509, 0.004934423137456179, 0.0031368571799248457, 0.9448103308677673, 0.006264289375394583, 6.352478521876037e-05, 2.0809109628316946e-05, 0.0002517843386158347, 0.00017592810036148876, 0.001886029727756977, 0.000502250506542623, 0.0016707367030903697, 0.0007106690900400281, 0.0017777676694095135, 0.017365340143442154, 0.0017408498097211123, 0.010097067803144455, 0.0005712194833904505, 0.0001871618296718225, 0.0001897123729577288, 0.00011490528413560241, 0.0003627738624345511, 9.75885268417187e-05, 3.0015123684279388e-06], "target_probs": 0.9448103308677673}}


{"result": {"time": "2021-02-21 07:31:51.551260", "n_pass": [224, 37, 7], "n_token": 113, "loss": [0.44543683528900146, 0.037471212446689606], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def split_sets(", "data", ",", "training_percent", "=", "None", ",", "n_test_samples", "=", "None", ",", "perm", "=", "False", "'\\n        Split data matrix into training and test matrices.\\n\\n        Training matrix size will be set using the training_percent\\n        parameter, so its samples are the firsts samples found at\\n        data matrix, the rest of samples will be testing matrix.\\n\\n        If neither training_percent or number_test_samples are set, an error\\n        will happen, only one of the parameters can be set at a time.\\n\\n        Arguments:\\n            data (numpy.ndarray): A matrix containing nxf patterns features.\\n            training_percent (float): An optional parameter used to\\n                calculate the number of patterns of training matrix.\\n            n_test_samples (int): An optional parameter used to set the\\n                number of patterns of testing matrix.\\n            perm (bool): A flag to choose if should permute(shuffle) database\\n                before splitting sets.\\n\\n        Returns:\\n            tuple: Both training and test matrices.\\n\\n    '", "#NEWLINE#", "number_of_samples", "=", "data", ".", "shape", "[", "0", "]", "#NEWLINE#", "if", "number_of_samples", ":", "#NEWLINE#", "#INDENT#", "np", ".", "random", ".", "shuffle", "(", "data", ")", "#NEWLINE#", "#UNINDENT#", "if", "(", "n_test_samples", "is not", "None", ")", ":", "#NEWLINE#", "#INDENT#", "training_samples", "=", "(", "number_of_samples", "-", "n_test_samples", ")", "#NEWLINE#", "#UNINDENT#", "else", ":", "#NEWLINE#", "#INDENT#", "if", "(", "training_percent", "is not", "None", ")", ":", "#NEWLINE#", "#INDENT#", "training_samples", "number_of_samples", "*", "training_percent", ")", "#INDENT#", "raise", "Exception", "(", "'Error: Missing \"training_percent\" or \"numberTestSamples\"parameter.'", ")", "#NEWLINE#", "#UNINDENT#", "#UNINDENT#", "training_matrix", "=", "data", "[", "0", ":", "training_samples", ",", ":", "]", "#NEWLINE#", "testing_matrix", "=", "data", "[", "training_samples", ":", ",", ":", "]", "#NEWLINE#", "return", "(", "training_matrix", ",", "testing_matrix", ")"]}}
{"position": {"error_location": 92, "repair_targets": [12], "repair_candidates": [86, 109, 2, 19, 37, 88, 99, 4, 65, 75, 50, 72, 92, 101, 8, 43, 55, 97, 111, 17, 27, 53, 73, 12]}}
{"prediction": {"error_location": 0.6405444145202637, "repair_targets": [0.9632221460342407], "repair_candidates": [0.0023531329352408648, 0.0022624204866588116, 0.002544412389397621, 0.9632221460342407, 0.00423813471570611, 3.8271668017841876e-05, 1.4712243682879489e-05, 0.0001931793085532263, 0.00015297181380447, 0.001435857149772346, 0.00038474390748888254, 0.002287131967023015, 0.00039360782830044627, 0.0008230467792600393, 0.009537117555737495, 0.0010165985440835357, 0.007848727516829967, 0.0005612482200376689, 5.4786825785413384e-05, 0.00014840088260825723, 9.542870975565165e-05, 0.00029244436882436275, 9.887138730846345e-05, 2.5838808141998015e-06], "target_probs": 0.9632221460342407}}


{"result": {"time": "2021-02-21 07:31:51.618314", "n_pass": [225, 38, 8], "n_token": 111, "loss": [0.15854348242282867, 0.037302229553461075], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def split_sets(", "data", ",", "training_percent", "=", "None", ",", "n_test_samples", "=", "None", ",", "perm", "=", "False", "'\\n        Split data matrix into training and test matrices.\\n\\n        Training matrix size will be set using the training_percent\\n        parameter, so its samples are the firsts samples found at\\n        data matrix, the rest of samples will be testing matrix.\\n\\n        If neither training_percent or number_test_samples are set, an error\\n        will happen, only one of the parameters can be set at a time.\\n\\n        Arguments:\\n            data (numpy.ndarray): A matrix containing nxf patterns features.\\n            training_percent (float): An optional parameter used to\\n                calculate the number of patterns of training matrix.\\n            n_test_samples (int): An optional parameter used to set the\\n                number of patterns of testing matrix.\\n            perm (bool): A flag to choose if should permute(shuffle) database\\n                before splitting sets.\\n\\n        Returns:\\n            tuple: Both training and test matrices.\\n\\n    '", "#NEWLINE#", "number_of_samples", "=", "data", ".", "shape", "[", "0", "]", "#NEWLINE#", "if", "number_of_samples", ":", "#NEWLINE#", "#INDENT#", "np", ".", "random", ".", "shuffle", "(", "data", ")", "#NEWLINE#", "#UNINDENT#", "if", "(", "n_test_samples", "is not", "None", ")", ":", "#NEWLINE#", "#INDENT#", "training_samples", "=", "(", "number_of_samples", "-", "n_test_samples", ")", "#NEWLINE#", "#UNINDENT#", "else", ":", "#NEWLINE#", "#INDENT#", "if", "(", "training_percent", "is not", "None", ")", ":", "#NEWLINE#", "#INDENT#", "training_samples", "number_of_samples", "*", "training_percent", ")", "Exception", "(", "'Error: Missing \"training_percent\" or \"numberTestSamples\"parameter.'", ")", "#NEWLINE#", "#UNINDENT#", "#UNINDENT#", "training_matrix", "=", "data", "[", "0", ":", "training_samples", ",", ":", "]", "#NEWLINE#", "testing_matrix", "=", "data", "[", "training_samples", ":", ",", ":", "]", "#NEWLINE#", "return", "(", "training_matrix", ",", "testing_matrix", ")"]}}
{"position": {"error_location": 90, "repair_targets": [12], "repair_candidates": [84, 107, 2, 19, 37, 86, 97, 4, 65, 75, 50, 72, 90, 99, 8, 43, 55, 95, 109, 17, 27, 53, 73, 12]}}
{"prediction": {"error_location": 0.8533857464790344, "repair_targets": [0.9633849263191223], "repair_candidates": [0.0018804335268214345, 0.001822765450924635, 0.002321691019460559, 0.9633849263191223, 0.003496943973004818, 3.534384450176731e-05, 2.0249452063580975e-05, 0.00021939472935628146, 0.00014724142965860665, 0.0010364428162574768, 0.0003508935042191297, 0.0011924674035981297, 0.00045110093196853995, 0.0009222718654200435, 0.015014608390629292, 0.0016720409039407969, 0.00496459798887372, 0.00034383698948659003, 1.2323189366725273e-05, 0.00012587994569912553, 0.0002040884573943913, 0.00020605020108632743, 0.00017201778246089816, 2.4628848223073874e-06], "target_probs": 0.9633849263191223}}


{"result": {"time": "2021-02-21 07:31:51.685474", "n_pass": [226, 39, 9], "n_token": 109, "loss": [0.10088425129652023, 0.025592491030693054], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def split_sets(", "data", ",", "training_percent", "=", "None", ",", "n_test_samples", "=", "None", ",", "perm", "=", "False", "'\\n        Split data matrix into training and test matrices.\\n\\n        Training matrix size will be set using the training_percent\\n        parameter, so its samples are the firsts samples found at\\n        data matrix, the rest of samples will be testing matrix.\\n\\n        If neither training_percent or number_test_samples are set, an error\\n        will happen, only one of the parameters can be set at a time.\\n\\n        Arguments:\\n            data (numpy.ndarray): A matrix containing nxf patterns features.\\n            training_percent (float): An optional parameter used to\\n                calculate the number of patterns of training matrix.\\n            n_test_samples (int): An optional parameter used to set the\\n                number of patterns of testing matrix.\\n            perm (bool): A flag to choose if should permute(shuffle) database\\n                before splitting sets.\\n\\n        Returns:\\n            tuple: Both training and test matrices.\\n\\n    '", "#NEWLINE#", "number_of_samples", "=", "data", ".", "shape", "[", "0", "]", "#NEWLINE#", "if", "number_of_samples", ":", "#NEWLINE#", "#INDENT#", "np", ".", "random", ".", "shuffle", "(", "data", ")", "#NEWLINE#", "#UNINDENT#", "if", "(", "n_test_samples", "is not", "None", ")", ":", "#NEWLINE#", "#INDENT#", "training_samples", "=", "(", "number_of_samples", "-", "n_test_samples", ")", "#NEWLINE#", "#UNINDENT#", "else", ":", "#NEWLINE#", "#INDENT#", "if", "(", "training_percent", "is not", "None", ")", ":", "#NEWLINE#", "#INDENT#", "training_samples", "number_of_samples", "*", "training_percent", ")", "'Error: Missing \"training_percent\" or \"numberTestSamples\"parameter.'", ")", "#NEWLINE#", "#UNINDENT#", "#UNINDENT#", "training_matrix", "=", "data", "[", "0", ":", "training_samples", ",", ":", "]", "#NEWLINE#", "testing_matrix", "=", "data", "[", "training_samples", ":", ",", ":", "]", "#NEWLINE#", "return", "(", "training_matrix", ",", "testing_matrix", ")"]}}
{"position": {"error_location": 88, "repair_targets": [12], "repair_candidates": [82, 105, 2, 19, 37, 84, 95, 4, 65, 75, 50, 72, 88, 97, 8, 43, 55, 93, 107, 17, 27, 53, 73, 12]}}
{"prediction": {"error_location": 0.9040379524230957, "repair_targets": [0.9747322201728821], "repair_candidates": [0.0014077129308134317, 0.0011343304067850113, 0.0022718554828315973, 0.9747322201728821, 0.002308987081050873, 2.226604010502342e-05, 1.2006933502561878e-05, 0.00015668619016651064, 0.0001281346776522696, 0.0006888534408062696, 0.0002566250623203814, 0.0016792031237855554, 0.0002793888852465898, 0.0007392986444756389, 0.00904747936874628, 0.000578868028242141, 0.0036483623553067446, 0.00036370751331560314, 9.125372343987692e-06, 8.739108307054266e-05, 0.00019088514090981334, 0.00018295933841727674, 7.214734796434641e-05, 1.5001432984718122e-06], "target_probs": 0.9747322201728821}}


{"result": {"time": "2021-02-21 07:31:51.752997", "n_pass": [227, 40, 10], "n_token": 107, "loss": [0.16883662343025208, 0.031085899099707603], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def split_sets(", "data", ",", "training_percent", "=", "None", ",", "n_test_samples", "=", "None", ",", "perm", "=", "False", "'\\n        Split data matrix into training and test matrices.\\n\\n        Training matrix size will be set using the training_percent\\n        parameter, so its samples are the firsts samples found at\\n        data matrix, the rest of samples will be testing matrix.\\n\\n        If neither training_percent or number_test_samples are set, an error\\n        will happen, only one of the parameters can be set at a time.\\n\\n        Arguments:\\n            data (numpy.ndarray): A matrix containing nxf patterns features.\\n            training_percent (float): An optional parameter used to\\n                calculate the number of patterns of training matrix.\\n            n_test_samples (int): An optional parameter used to set the\\n                number of patterns of testing matrix.\\n            perm (bool): A flag to choose if should permute(shuffle) database\\n                before splitting sets.\\n\\n        Returns:\\n            tuple: Both training and test matrices.\\n\\n    '", "#NEWLINE#", "number_of_samples", "=", "data", ".", "shape", "[", "0", "]", "#NEWLINE#", "if", "number_of_samples", ":", "#NEWLINE#", "#INDENT#", "np", ".", "random", ".", "shuffle", "(", "data", ")", "#NEWLINE#", "#UNINDENT#", "if", "(", "n_test_samples", "is not", "None", ")", ":", "#NEWLINE#", "#INDENT#", "training_samples", "=", "(", "number_of_samples", "-", "n_test_samples", ")", "#NEWLINE#", "#UNINDENT#", "else", ":", "#NEWLINE#", "#INDENT#", "if", "(", "training_percent", "is not", "None", ")", ":", "#NEWLINE#", "#INDENT#", "training_samples", "number_of_samples", "*", "training_percent", ")", "#NEWLINE#", "#UNINDENT#", "#UNINDENT#", "training_matrix", "=", "data", "[", "0", ":", "training_samples", ",", ":", "]", "#NEWLINE#", "testing_matrix", "=", "data", "[", "training_samples", ":", ",", ":", "]", "#NEWLINE#", "return", "(", "training_matrix", ",", "testing_matrix", ")"]}}
{"position": {"error_location": 86, "repair_targets": [12], "repair_candidates": [80, 103, 2, 19, 37, 82, 93, 4, 65, 75, 50, 72, 86, 95, 8, 43, 55, 91, 105, 17, 27, 53, 73, 12]}}
{"prediction": {"error_location": 0.8446468114852905, "repair_targets": [0.9693922996520996], "repair_candidates": [0.0021790440659970045, 0.0017575551755726337, 0.0024565437342971563, 0.9693922996520996, 0.0032214056700468063, 3.500354432617314e-05, 1.2414740012900438e-05, 0.0001867034734459594, 0.0001252662477781996, 0.0009822292486205697, 0.0002261556510347873, 0.0014979485422372818, 0.00031359249260276556, 0.0010151322931051254, 0.009379779919981956, 0.000361463928129524, 0.00537108164280653, 0.0005448042065836489, 1.453519053029595e-05, 0.0001785581698641181, 0.00043003883911296725, 0.00025755667593330145, 5.839576624566689e-05, 2.452656644891249e-06], "target_probs": 0.9693922996520996}}


{"result": {"time": "2021-02-21 07:31:51.819834", "n_pass": [228, 41, 11], "n_token": 105, "loss": [0.28366997838020325, 0.051137279719114304], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def split_sets(", "data", ",", "training_percent", "=", "None", ",", "n_test_samples", "=", "None", ",", "perm", "=", "False", "'\\n        Split data matrix into training and test matrices.\\n\\n        Training matrix size will be set using the training_percent\\n        parameter, so its samples are the firsts samples found at\\n        data matrix, the rest of samples will be testing matrix.\\n\\n        If neither training_percent or number_test_samples are set, an error\\n        will happen, only one of the parameters can be set at a time.\\n\\n        Arguments:\\n            data (numpy.ndarray): A matrix containing nxf patterns features.\\n            training_percent (float): An optional parameter used to\\n                calculate the number of patterns of training matrix.\\n            n_test_samples (int): An optional parameter used to set the\\n                number of patterns of testing matrix.\\n            perm (bool): A flag to choose if should permute(shuffle) database\\n                before splitting sets.\\n\\n        Returns:\\n            tuple: Both training and test matrices.\\n\\n    '", "#NEWLINE#", "number_of_samples", "=", "data", ".", "shape", "[", "0", "]", "#NEWLINE#", "if", "number_of_samples", ":", "#NEWLINE#", "#INDENT#", "np", ".", "random", ".", "shuffle", "(", "data", ")", "#NEWLINE#", "#UNINDENT#", "if", "(", "n_test_samples", "is not", "None", ")", ":", "#NEWLINE#", "#INDENT#", "training_samples", "=", "(", "number_of_samples", "-", "n_test_samples", ")", "#NEWLINE#", "#UNINDENT#", "else", ":", "#NEWLINE#", "#INDENT#", "if", "(", "training_percent", "is not", "None", ")", ":", "#NEWLINE#", "#INDENT#", "training_samples", "number_of_samples", "*", "training_percent", ")", "#UNINDENT#", "training_matrix", "=", "data", "[", "0", ":", "training_samples", ",", ":", "]", "#NEWLINE#", "testing_matrix", "=", "data", "[", "training_samples", ":", ",", ":", "]", "#NEWLINE#", "return", "(", "training_matrix", ",", "testing_matrix", ")"]}}
{"position": {"error_location": 84, "repair_targets": [12], "repair_candidates": [78, 101, 2, 19, 37, 80, 91, 4, 65, 75, 50, 72, 84, 93, 8, 43, 55, 89, 103, 17, 27, 53, 73, 12]}}
{"prediction": {"error_location": 0.7530151605606079, "repair_targets": [0.9501482248306274], "repair_candidates": [0.0031371566001325846, 0.002075368771329522, 0.0028153355233371258, 0.9501482248306274, 0.004997324198484421, 4.7658766561653465e-05, 1.8168619135394692e-05, 0.00030975512345321476, 0.00014945476141292602, 0.0014369998825713992, 0.0003122268826700747, 0.0014973061624914408, 0.00028286114684306085, 0.0017468134174123406, 0.019487250596284866, 0.00041058240458369255, 0.008410419337451458, 0.0005127202020958066, 2.4712004233151674e-05, 0.0003176446771249175, 0.0013755746185779572, 0.0004053685115650296, 7.78343019192107e-05, 3.283290197941824e-06], "target_probs": 0.9501482248306274}}


{"result": {"time": "2021-02-21 07:31:51.889068", "n_pass": [231, 42, 12], "n_token": 103, "loss": [0.98021399974823, 0.06074558570981026], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def split_sets(", "data", ",", "training_percent", "=", "None", ",", "n_test_samples", "=", "None", ",", "perm", "=", "False", "'\\n        Split data matrix into training and test matrices.\\n\\n        Training matrix size will be set using the training_percent\\n        parameter, so its samples are the firsts samples found at\\n        data matrix, the rest of samples will be testing matrix.\\n\\n        If neither training_percent or number_test_samples are set, an error\\n        will happen, only one of the parameters can be set at a time.\\n\\n        Arguments:\\n            data (numpy.ndarray): A matrix containing nxf patterns features.\\n            training_percent (float): An optional parameter used to\\n                calculate the number of patterns of training matrix.\\n            n_test_samples (int): An optional parameter used to set the\\n                number of patterns of testing matrix.\\n            perm (bool): A flag to choose if should permute(shuffle) database\\n                before splitting sets.\\n\\n        Returns:\\n            tuple: Both training and test matrices.\\n\\n    '", "#NEWLINE#", "number_of_samples", "=", "data", ".", "shape", "[", "0", "]", "#NEWLINE#", "if", "number_of_samples", ":", "#NEWLINE#", "#INDENT#", "np", ".", "random", ".", "shuffle", "(", "data", ")", "#NEWLINE#", "#UNINDENT#", "if", "(", "n_test_samples", "is not", "None", ")", ":", "#NEWLINE#", "#INDENT#", "training_samples", "=", "(", "number_of_samples", "-", "n_test_samples", ")", "#NEWLINE#", "#UNINDENT#", "else", ":", "#NEWLINE#", "#INDENT#", "if", "(", "training_percent", "is not", "None", ")", ":", "#NEWLINE#", "#INDENT#", "training_samples", "number_of_samples", "*", "training_percent", ")", "#UNINDENT#", "training_matrix", "=", "data", ":", "training_samples", ",", ":", "]", "#NEWLINE#", "testing_matrix", "=", "data", "[", "training_samples", ":", ",", ":", "]", "#NEWLINE#", "return", "(", "training_matrix", ",", "testing_matrix", ")"]}}
{"position": {"error_location": 82, "repair_targets": [12], "repair_candidates": [78, 99, 2, 19, 37, 80, 89, 4, 65, 75, 50, 72, 82, 91, 8, 43, 55, 87, 101, 17, 27, 53, 73, 12]}}
{"prediction": {"error_location": 0.37523072957992554, "repair_targets": [0.9410626292228699], "repair_candidates": [0.0036746396217495203, 0.002004563109949231, 0.0030680678319185972, 0.9410626292228699, 0.006592687219381332, 6.59381621517241e-05, 2.6443452952662483e-05, 0.0005308714462444186, 0.0001744993351167068, 0.002142030280083418, 0.0004982039681635797, 0.0014573829248547554, 0.00026347508537583053, 0.0027594694402068853, 0.024063920602202415, 0.00031909445533528924, 0.008860405534505844, 0.0010980473598465323, 3.6682336940430105e-05, 0.0002698019379749894, 0.0007697168621234596, 0.00021847934112884104, 3.9986342017073184e-05, 2.9522389013436623e-06], "target_probs": 0.9410626292228699}}


{"result": {"time": "2021-02-21 07:31:52.085939", "n_pass": [238, 45, 13], "n_token": 101, "loss": [0.9865221977233887, 0.05030034855008125], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def split_sets(", "data", ",", "training_percent", "=", "None", ",", "n_test_samples", "=", "None", ",", "perm", "=", "False", "'\\n        Split data matrix into training and test matrices.\\n\\n        Training matrix size will be set using the training_percent\\n        parameter, so its samples are the firsts samples found at\\n        data matrix, the rest of samples will be testing matrix.\\n\\n        If neither training_percent or number_test_samples are set, an error\\n        will happen, only one of the parameters can be set at a time.\\n\\n        Arguments:\\n            data (numpy.ndarray): A matrix containing nxf patterns features.\\n            training_percent (float): An optional parameter used to\\n                calculate the number of patterns of training matrix.\\n            n_test_samples (int): An optional parameter used to set the\\n                number of patterns of testing matrix.\\n            perm (bool): A flag to choose if should permute(shuffle) database\\n                before splitting sets.\\n\\n        Returns:\\n            tuple: Both training and test matrices.\\n\\n    '", "#NEWLINE#", "number_of_samples", "=", "data", ".", "shape", "[", "0", "]", "#NEWLINE#", "if", "number_of_samples", ":", "#NEWLINE#", "#INDENT#", "np", ".", "random", ".", "shuffle", "(", "data", ")", "#NEWLINE#", "#UNINDENT#", "if", "(", "n_test_samples", "is not", "None", ")", ":", "#NEWLINE#", "#INDENT#", "training_samples", "=", "(", "number_of_samples", "-", "n_test_samples", ")", "#NEWLINE#", "#UNINDENT#", "else", ":", "#NEWLINE#", "#INDENT#", "if", "(", "training_percent", "is not", "None", ")", ":", "#NEWLINE#", "#INDENT#", "training_samples", "number_of_samples", "*", "training_percent", ")", "#UNINDENT#", "training_matrix", "=", "data", ":", "training_samples", ",", ":", "]", "#NEWLINE#", "testing_matrix", "=", "data", "[", "training_samples", ":", "]", "#NEWLINE#", "return", "(", "training_matrix", ",", "testing_matrix", ")"]}}
{"position": {"error_location": 82, "repair_targets": [12], "repair_candidates": [78, 97, 2, 19, 37, 80, 89, 4, 65, 75, 50, 72, 82, 91, 8, 43, 55, 87, 99, 17, 27, 53, 73, 12]}}
{"prediction": {"error_location": 0.37287119030952454, "repair_targets": [0.9509437680244446], "repair_candidates": [0.0034279285464435816, 0.0019844900816679, 0.0028716435190290213, 0.9509437680244446, 0.006146219093352556, 6.0268423112574965e-05, 2.500138543837238e-05, 0.0005446985014714301, 0.0001697767584118992, 0.001910500694066286, 0.0004948259447701275, 0.0013409797102212906, 0.0003040728042833507, 0.002504108240827918, 0.019683515653014183, 0.00032993461354635656, 0.00500820716843009, 0.0009691386367194355, 3.9210681279655546e-05, 0.0004484990204218775, 0.000575917074456811, 0.0001785488275345415, 3.5188673791708425e-05, 3.585070999179152e-06], "target_probs": 0.9509437680244446}}


{"result": {"time": "2021-02-21 07:31:52.152995", "n_pass": [239, 46, 14], "n_token": 99, "loss": [0.9819254279136658, 0.04421075060963631], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def split_sets(", "data", ",", "training_percent", "=", "None", ",", "n_test_samples", "=", "None", ",", "perm", "=", "False", "'\\n        Split data matrix into training and test matrices.\\n\\n        Training matrix size will be set using the training_percent\\n        parameter, so its samples are the firsts samples found at\\n        data matrix, the rest of samples will be testing matrix.\\n\\n        If neither training_percent or number_test_samples are set, an error\\n        will happen, only one of the parameters can be set at a time.\\n\\n        Arguments:\\n            data (numpy.ndarray): A matrix containing nxf patterns features.\\n            training_percent (float): An optional parameter used to\\n                calculate the number of patterns of training matrix.\\n            n_test_samples (int): An optional parameter used to set the\\n                number of patterns of testing matrix.\\n            perm (bool): A flag to choose if should permute(shuffle) database\\n                before splitting sets.\\n\\n        Returns:\\n            tuple: Both training and test matrices.\\n\\n    '", "#NEWLINE#", "number_of_samples", "=", "data", ".", "shape", "[", "0", "]", "#NEWLINE#", "if", "number_of_samples", ":", "#NEWLINE#", "#INDENT#", "np", ".", "random", ".", "shuffle", "(", "data", ")", "#NEWLINE#", "#UNINDENT#", "if", "(", "n_test_samples", "is not", "None", ")", ":", "#NEWLINE#", "#INDENT#", "training_samples", "=", "(", "number_of_samples", "-", "n_test_samples", ")", "#NEWLINE#", "#UNINDENT#", "else", ":", "#NEWLINE#", "#INDENT#", "if", "(", "training_percent", "is not", "None", ")", ":", "#NEWLINE#", "#INDENT#", "training_samples", "number_of_samples", "*", "training_percent", ")", "#UNINDENT#", "training_matrix", "=", "data", ":", "training_samples", ",", ":", "]", "#NEWLINE#", "testing_matrix", "=", "data", "[", "training_samples", ":", "return", "(", "training_matrix", ",", "testing_matrix", ")"]}}
{"position": {"error_location": 82, "repair_targets": [12], "repair_candidates": [78, 95, 2, 19, 37, 80, 89, 4, 65, 75, 50, 72, 82, 91, 8, 43, 55, 87, 97, 17, 27, 53, 73, 12]}}
{"prediction": {"error_location": 0.37458914518356323, "repair_targets": [0.9567523002624512], "repair_candidates": [0.0023797182366251945, 0.00201014312915504, 0.002153949346393347, 0.9567523002624512, 0.004285979084670544, 3.884605030179955e-05, 1.4769742847420275e-05, 0.00025463776546530426, 0.00010916495375568047, 0.0011296983575448394, 0.0006478103459812701, 0.0016357583226636052, 0.0003227040870115161, 0.00253929547034204, 0.02037234976887703, 0.0003256032650824636, 0.0034321316052228212, 0.0008541157003492117, 9.897994459606707e-06, 0.00013793204561807215, 0.0002637730212882161, 7.647064194316044e-05, 0.0002509445184841752, 1.9715726011781953e-06], "target_probs": 0.9567523002624512}}


{"result": {"time": "2021-02-21 07:31:52.544399", "n_pass": [251, 52, 15], "n_token": 97, "loss": [0.782852828502655, 0.17984621226787567], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def split_sets(", "data", ",", "training_percent", "=", "None", ",", "n_test_samples", "=", "None", ",", "perm", "=", "False", "number_of_samples", "=", "data", ".", "shape", "[", "0", "]", "#NEWLINE#", "if", "number_of_samples", ":", "#NEWLINE#", "#INDENT#", "np", ".", "random", ".", "shuffle", "(", "data", ")", "#NEWLINE#", "#UNINDENT#", "if", "(", "n_test_samples", "is not", "None", ")", ":", "#NEWLINE#", "#INDENT#", "training_samples", "=", "(", "number_of_samples", "-", "n_test_samples", ")", "#NEWLINE#", "#UNINDENT#", "else", ":", "#NEWLINE#", "#INDENT#", "if", "(", "training_percent", "is not", "None", ")", ":", "#NEWLINE#", "#INDENT#", "training_samples", "number_of_samples", "*", "training_percent", ")", "#UNINDENT#", "training_matrix", "=", "data", ":", "training_samples", ",", ":", "]", "#NEWLINE#", "testing_matrix", "=", "data", "[", "training_samples", ":", "return", "(", "training_matrix", ",", "testing_matrix", ")"]}}
{"position": {"error_location": 80, "repair_targets": [12], "repair_candidates": [76, 93, 2, 17, 35, 78, 87, 4, 63, 73, 48, 70, 80, 89, 8, 41, 53, 85, 95, 15, 25, 51, 71, 12]}}
{"prediction": {"error_location": 0.45710012316703796, "repair_targets": [0.8353986740112305], "repair_candidates": [0.007559122517704964, 0.004512692801654339, 0.012047799304127693, 0.8353986740112305, 0.0051458063535392284, 0.0005175147671252489, 3.3447933674324304e-05, 0.001525725470855832, 0.0008119094418361783, 0.00457422062754631, 0.004444675054401159, 0.012263349257409573, 0.0008835798944346607, 0.0139993354678154, 0.06538491696119308, 0.0029709828086197376, 0.019495390355587006, 0.005471952259540558, 0.00012271017476450652, 0.0005736243911087513, 0.0006370617193169892, 0.00016758262063376606, 0.0014421066734939814, 1.585697100381367e-05], "target_probs": 0.8353986740112305}}


{"result": {"time": "2021-02-21 07:31:52.604752", "n_pass": [254, 53, 16], "n_token": 95, "loss": [1.0940971374511719, 0.17400911450386047], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def split_sets(", "data", ",", "training_percent", "=", "None", ",", "n_test_samples", "=", "None", ",", "perm", "=", "False", "number_of_samples", "=", "data", ".", "0", "]", "#NEWLINE#", "if", "number_of_samples", ":", "#NEWLINE#", "#INDENT#", "np", ".", "random", ".", "shuffle", "(", "data", ")", "#NEWLINE#", "#UNINDENT#", "if", "(", "n_test_samples", "is not", "None", ")", ":", "#NEWLINE#", "#INDENT#", "training_samples", "=", "(", "number_of_samples", "-", "n_test_samples", ")", "#NEWLINE#", "#UNINDENT#", "else", ":", "#NEWLINE#", "#INDENT#", "if", "(", "training_percent", "is not", "None", ")", ":", "#NEWLINE#", "#INDENT#", "training_samples", "number_of_samples", "*", "training_percent", ")", "#UNINDENT#", "training_matrix", "=", "data", ":", "training_samples", ",", ":", "]", "#NEWLINE#", "testing_matrix", "=", "data", "[", "training_samples", ":", "return", "(", "training_matrix", ",", "testing_matrix", ")"]}}
{"position": {"error_location": 78, "repair_targets": [12], "repair_candidates": [74, 91, 2, 17, 33, 76, 85, 4, 61, 71, 46, 68, 78, 87, 8, 39, 51, 83, 93, 15, 23, 49, 69, 12]}}
{"prediction": {"error_location": 0.3348417282104492, "repair_targets": [0.8402892351150513], "repair_candidates": [0.005800788290798664, 0.004615956451743841, 0.012143097817897797, 0.8402892351150513, 0.004329506773501635, 0.0002394443581579253, 2.0321040210546926e-05, 0.0009683200623840094, 0.00047066170373000205, 0.004987806081771851, 0.004330750089138746, 0.008999970741569996, 0.0005551279173232615, 0.015495107509195805, 0.06076112017035484, 0.0030180674511939287, 0.024920063093304634, 0.006093699485063553, 0.00018489260401111096, 0.00037774353404529393, 0.000582601351197809, 8.622652239864692e-05, 0.0007212642231024802, 8.239378075813875e-06], "target_probs": 0.8402892351150513}}


{"result": {"time": "2021-02-21 07:31:52.664575", "n_pass": [255, 54, 17], "n_token": 93, "loss": [1.0639604330062866, 0.13156650960445404], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def split_sets(", "data", ",", "training_percent", "=", "None", ",", "n_test_samples", "=", "None", ",", "perm", "=", "False", "number_of_samples", "=", "data", ".", "#NEWLINE#", "if", "number_of_samples", ":", "#NEWLINE#", "#INDENT#", "np", ".", "random", ".", "shuffle", "(", "data", ")", "#NEWLINE#", "#UNINDENT#", "if", "(", "n_test_samples", "is not", "None", ")", ":", "#NEWLINE#", "#INDENT#", "training_samples", "=", "(", "number_of_samples", "-", "n_test_samples", ")", "#NEWLINE#", "#UNINDENT#", "else", ":", "#NEWLINE#", "#INDENT#", "if", "(", "training_percent", "is not", "None", ")", ":", "#NEWLINE#", "#INDENT#", "training_samples", "number_of_samples", "*", "training_percent", ")", "#UNINDENT#", "training_matrix", "=", "data", ":", "training_samples", ",", ":", "]", "#NEWLINE#", "testing_matrix", "=", "data", "[", "training_samples", ":", "return", "(", "training_matrix", ",", "testing_matrix", ")"]}}
{"position": {"error_location": 76, "repair_targets": [12], "repair_candidates": [72, 89, 2, 17, 31, 74, 83, 4, 59, 69, 44, 66, 76, 85, 8, 37, 49, 81, 91, 15, 21, 47, 67, 12]}}
{"prediction": {"error_location": 0.3450864255428314, "repair_targets": [0.8767209649085999], "repair_candidates": [0.005677037872374058, 0.005173312034457922, 0.011506910435855389, 0.8767209649085999, 0.0041160439141094685, 9.819818660616875e-05, 1.2782071280525997e-05, 0.0009227902046404779, 0.0003335248911753297, 0.00410515395924449, 0.0023932731710374355, 0.009082181379199028, 0.00027225815574638546, 0.010014906525611877, 0.050725001841783524, 0.003609303617849946, 0.009881997480988503, 0.0037313494831323624, 0.00010755615949165076, 0.0003124117502011359, 0.0007798412116244435, 0.00012122607586206868, 0.0002900761319324374, 1.1914655260625295e-05], "target_probs": 0.8767209649085999}}


{"result": {"time": "2021-02-21 07:31:52.724013", "n_pass": [256, 55, 18], "n_token": 91, "loss": [1.010706901550293, 0.1257055252790451], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def split_sets(", "data", ",", "training_percent", "=", "None", ",", "n_test_samples", "=", "None", ",", "perm", "=", "False", "number_of_samples", "=", "data", ".", "number_of_samples", ":", "#NEWLINE#", "#INDENT#", "np", ".", "random", ".", "shuffle", "(", "data", ")", "#NEWLINE#", "#UNINDENT#", "if", "(", "n_test_samples", "is not", "None", ")", ":", "#NEWLINE#", "#INDENT#", "training_samples", "=", "(", "number_of_samples", "-", "n_test_samples", ")", "#NEWLINE#", "#UNINDENT#", "else", ":", "#NEWLINE#", "#INDENT#", "if", "(", "training_percent", "is not", "None", ")", ":", "#NEWLINE#", "#INDENT#", "training_samples", "number_of_samples", "*", "training_percent", ")", "#UNINDENT#", "training_matrix", "=", "data", ":", "training_samples", ",", ":", "]", "#NEWLINE#", "testing_matrix", "=", "data", "[", "training_samples", ":", "return", "(", "training_matrix", ",", "testing_matrix", ")"]}}
{"position": {"error_location": 74, "repair_targets": [12], "repair_candidates": [70, 87, 2, 17, 29, 72, 81, 4, 57, 67, 42, 64, 74, 83, 8, 35, 47, 79, 89, 15, 19, 45, 65, 12]}}
{"prediction": {"error_location": 0.3639616370201111, "repair_targets": [0.8818745017051697], "repair_candidates": [0.007599137723445892, 0.005959366913884878, 0.014585551805794239, 0.8818745017051697, 0.010239151306450367, 9.916513226926327e-05, 0.0015519997105002403, 0.001241714577190578, 0.000231326135690324, 0.004619151819497347, 0.0005766496760770679, 0.004976924974471331, 0.00012046163465129212, 0.007488197647035122, 0.03563831001520157, 0.0063162026926875114, 0.013405447825789452, 0.0018916272092610598, 0.0001754104159772396, 0.0005330930580385029, 0.0004965587286278605, 0.00014943358837626874, 0.00021159020252525806, 1.9097495169262402e-05], "target_probs": 0.8818745017051697}}


{"result": {"time": "2021-02-21 07:31:52.784706", "n_pass": [258, 56, 19], "n_token": 89, "loss": [0.914448082447052, 0.09405720233917236], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def split_sets(", "data", ",", "training_percent", "=", "None", ",", "n_test_samples", "=", "None", ",", "perm", "=", "False", "number_of_samples", "=", "data", ".", "number_of_samples", ":", "np", ".", "random", ".", "shuffle", "(", "data", ")", "#NEWLINE#", "#UNINDENT#", "if", "(", "n_test_samples", "is not", "None", ")", ":", "#NEWLINE#", "#INDENT#", "training_samples", "=", "(", "number_of_samples", "-", "n_test_samples", ")", "#NEWLINE#", "#UNINDENT#", "else", ":", "#NEWLINE#", "#INDENT#", "if", "(", "training_percent", "is not", "None", ")", ":", "#NEWLINE#", "#INDENT#", "training_samples", "number_of_samples", "*", "training_percent", ")", "#UNINDENT#", "training_matrix", "=", "data", ":", "training_samples", ",", ":", "]", "#NEWLINE#", "testing_matrix", "=", "data", "[", "training_samples", ":", "return", "(", "training_matrix", ",", "testing_matrix", ")"]}}
{"position": {"error_location": 72, "repair_targets": [12], "repair_candidates": [68, 85, 2, 17, 27, 70, 79, 4, 55, 65, 40, 62, 72, 81, 8, 33, 45, 77, 87, 15, 19, 43, 63, 12]}}
{"prediction": {"error_location": 0.4007377326488495, "repair_targets": [0.9102306962013245], "repair_candidates": [0.005179956089705229, 0.005403685383498669, 0.012109828181564808, 0.9102306962013245, 0.00721938768401742, 9.659129136707634e-05, 0.0014043326955288649, 0.0003888496139552444, 0.00015107165381778032, 0.003685750300064683, 0.00032929147710092366, 0.0018044511089101434, 7.840327452868223e-05, 0.004022149369120598, 0.02629186026751995, 0.006370197515934706, 0.012692480348050594, 0.0012746574357151985, 0.00011847001587739214, 0.0004328240465838462, 0.00042817575740627944, 0.00014418216596823186, 0.00012880847498308867, 1.3921376194048207e-05], "target_probs": 0.9102306962013245}}


{"result": {"time": "2021-02-21 07:31:52.844294", "n_pass": [259, 57, 20], "n_token": 87, "loss": [1.036329746246338, 0.10785426199436188], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def split_sets(", "data", ",", "training_percent", "=", "None", ",", "n_test_samples", "=", "None", ",", "perm", "=", "False", "number_of_samples", "=", "data", ".", "number_of_samples", ":", "random", ".", "shuffle", "(", "data", ")", "#NEWLINE#", "#UNINDENT#", "if", "(", "n_test_samples", "is not", "None", ")", ":", "#NEWLINE#", "#INDENT#", "training_samples", "=", "(", "number_of_samples", "-", "n_test_samples", ")", "#NEWLINE#", "#UNINDENT#", "else", ":", "#NEWLINE#", "#INDENT#", "if", "(", "training_percent", "is not", "None", ")", ":", "#NEWLINE#", "#INDENT#", "training_samples", "number_of_samples", "*", "training_percent", ")", "#UNINDENT#", "training_matrix", "=", "data", ":", "training_samples", ",", ":", "]", "#NEWLINE#", "testing_matrix", "=", "data", "[", "training_samples", ":", "return", "(", "training_matrix", ",", "testing_matrix", ")"]}}
{"position": {"error_location": 70, "repair_targets": [12], "repair_candidates": [66, 83, 2, 17, 25, 68, 77, 4, 53, 63, 38, 60, 70, 79, 8, 31, 43, 75, 85, 15, 19, 41, 61, 12]}}
{"prediction": {"error_location": 0.3547542989253998, "repair_targets": [0.897758424282074], "repair_candidates": [0.005815804470330477, 0.007648672442883253, 0.011295577511191368, 0.897758424282074, 0.007296295370906591, 0.00013322909944690764, 0.0013832030817866325, 0.00031390925869345665, 0.00010562935494817793, 0.003792708506807685, 0.00032386142993345857, 0.0012101985048502684, 3.772168201976456e-05, 0.0030745703261345625, 0.04230620712041855, 0.005149420350790024, 0.009909011423587799, 0.001224653096869588, 9.891176159726456e-05, 0.0003881125885527581, 0.0004185438447166234, 0.00016408070223405957, 0.00013010314432904124, 2.112854963343125e-05], "target_probs": 0.897758424282074}}


{"result": {"time": "2021-02-21 07:31:52.903910", "n_pass": [260, 58, 21], "n_token": 85, "loss": [1.161568284034729, 0.1474141776561737], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def split_sets(", "data", ",", "training_percent", "=", "None", ",", "n_test_samples", "=", "None", ",", "perm", "=", "False", "number_of_samples", "=", "data", ".", "number_of_samples", ":", "shuffle", "(", "data", ")", "#NEWLINE#", "#UNINDENT#", "if", "(", "n_test_samples", "is not", "None", ")", ":", "#NEWLINE#", "#INDENT#", "training_samples", "=", "(", "number_of_samples", "-", "n_test_samples", ")", "#NEWLINE#", "#UNINDENT#", "else", ":", "#NEWLINE#", "#INDENT#", "if", "(", "training_percent", "is not", "None", ")", ":", "#NEWLINE#", "#INDENT#", "training_samples", "number_of_samples", "*", "training_percent", ")", "#UNINDENT#", "training_matrix", "=", "data", ":", "training_samples", ",", ":", "]", "#NEWLINE#", "testing_matrix", "=", "data", "[", "training_samples", ":", "return", "(", "training_matrix", ",", "testing_matrix", ")"]}}
{"position": {"error_location": 68, "repair_targets": [12], "repair_candidates": [64, 81, 2, 17, 23, 66, 75, 4, 51, 61, 36, 58, 68, 77, 8, 29, 41, 73, 83, 15, 19, 39, 59, 12]}}
{"prediction": {"error_location": 0.31299495697021484, "repair_targets": [0.8629364967346191], "repair_candidates": [0.0067541045136749744, 0.012543718330562115, 0.010519626550376415, 0.8629364967346191, 0.005910463631153107, 0.00020021398086100817, 0.0015185029478743672, 0.00020902616961393505, 9.569486428517848e-05, 0.0041632563807070255, 0.0003962341579608619, 0.0014296408044174314, 4.886552778771147e-05, 0.003696050262078643, 0.0672137662768364, 0.0047859689220786095, 0.01443155761808157, 0.0016752110095694661, 0.0001262467703782022, 0.000385268940590322, 0.0005057321977801621, 0.00017466906865593046, 0.0002569394127931446, 2.276410123158712e-05], "target_probs": 0.8629364967346191}}


{"result": {"time": "2021-02-21 07:31:52.963644", "n_pass": [261, 59, 22], "n_token": 83, "loss": [1.0634006261825562, 0.1182968020439148], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def split_sets(", "data", ",", "training_percent", "=", "None", ",", "n_test_samples", "=", "None", ",", "perm", "=", "False", "number_of_samples", "=", "data", ".", "number_of_samples", ":", "data", ")", "#NEWLINE#", "#UNINDENT#", "if", "(", "n_test_samples", "is not", "None", ")", ":", "#NEWLINE#", "#INDENT#", "training_samples", "=", "(", "number_of_samples", "-", "n_test_samples", ")", "#NEWLINE#", "#UNINDENT#", "else", ":", "#NEWLINE#", "#INDENT#", "if", "(", "training_percent", "is not", "None", ")", ":", "#NEWLINE#", "#INDENT#", "training_samples", "number_of_samples", "*", "training_percent", ")", "#UNINDENT#", "training_matrix", "=", "data", ":", "training_samples", ",", ":", "]", "#NEWLINE#", "testing_matrix", "=", "data", "[", "training_samples", ":", "return", "(", "training_matrix", ",", "testing_matrix", ")"]}}
{"position": {"error_location": 66, "repair_targets": [12], "repair_candidates": [62, 79, 2, 17, 21, 64, 73, 4, 49, 59, 34, 56, 66, 75, 8, 27, 39, 71, 81, 15, 19, 37, 57, 12]}}
{"prediction": {"error_location": 0.34527966380119324, "repair_targets": [0.8884323239326477], "repair_candidates": [0.0070049515925347805, 0.013243138790130615, 0.008485589176416397, 0.8884323239326477, 0.005379628390073776, 0.00010603632108541206, 0.0036006616428494453, 0.00010190364992013201, 0.0001252392103197053, 0.003163464367389679, 0.0002438694646116346, 0.0010720837162807584, 9.235696052201092e-05, 0.0034108865074813366, 0.041411615908145905, 0.003443641820922494, 0.01817147247493267, 0.0012882375158369541, 0.0001302774908253923, 0.00032984494464471936, 0.0002916668017860502, 0.00011376666225260124, 0.0003447045455686748, 1.275813156098593e-05], "target_probs": 0.8884323239326477}}


{"result": {"time": "2021-02-21 07:31:53.023061", "n_pass": [263, 60, 23], "n_token": 81, "loss": [0.8296891450881958, 0.1203911155462265], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def split_sets(", "data", ",", "training_percent", "=", "None", ",", "n_test_samples", "=", "None", ",", "perm", "=", "False", "number_of_samples", "=", "data", ".", "number_of_samples", ":", "data", ")", "if", "(", "n_test_samples", "is not", "None", ")", ":", "#NEWLINE#", "#INDENT#", "training_samples", "=", "(", "number_of_samples", "-", "n_test_samples", ")", "#NEWLINE#", "#UNINDENT#", "else", ":", "#NEWLINE#", "#INDENT#", "if", "(", "training_percent", "is not", "None", ")", ":", "#NEWLINE#", "#INDENT#", "training_samples", "number_of_samples", "*", "training_percent", ")", "#UNINDENT#", "training_matrix", "=", "data", ":", "training_samples", ",", ":", "]", "#NEWLINE#", "testing_matrix", "=", "data", "[", "training_samples", ":", "return", "(", "training_matrix", ",", "testing_matrix", ")"]}}
{"position": {"error_location": 64, "repair_targets": [12], "repair_candidates": [60, 77, 2, 17, 21, 62, 71, 4, 47, 57, 32, 54, 64, 73, 8, 25, 37, 69, 79, 15, 19, 35, 55, 12]}}
{"prediction": {"error_location": 0.4361848831176758, "repair_targets": [0.8865736126899719], "repair_candidates": [0.0096977474167943, 0.016496289521455765, 0.009804166853427887, 0.8865736126899719, 0.006135993171483278, 0.00018319407536182553, 0.0033822038676589727, 0.0003354013024363667, 5.4776493925601244e-05, 0.0031891376711428165, 0.00036921369610354304, 0.0012713326141238213, 0.00025628056027926505, 0.00388256530277431, 0.03612251579761505, 0.0022510294802486897, 0.017137229442596436, 0.001425605034455657, 0.00016166805289685726, 0.0003548826207406819, 0.00038800682523287833, 0.0001688335760263726, 0.0003458628198131919, 1.249619890586473e-05], "target_probs": 0.8865736126899719}}


{"result": {"time": "2021-02-21 07:31:53.083891", "n_pass": [264, 61, 24], "n_token": 79, "loss": [0.8453601598739624, 0.10495021194219589], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def split_sets(", "data", ",", "training_percent", "=", "None", ",", "n_test_samples", "=", "None", ",", "perm", "=", "False", "number_of_samples", "=", "data", ".", "number_of_samples", ":", "data", ")", "n_test_samples", "is not", "None", ")", ":", "#NEWLINE#", "#INDENT#", "training_samples", "=", "(", "number_of_samples", "-", "n_test_samples", ")", "#NEWLINE#", "#UNINDENT#", "else", ":", "#NEWLINE#", "#INDENT#", "if", "(", "training_percent", "is not", "None", ")", ":", "#NEWLINE#", "#INDENT#", "training_samples", "number_of_samples", "*", "training_percent", ")", "#UNINDENT#", "training_matrix", "=", "data", ":", "training_samples", ",", ":", "]", "#NEWLINE#", "testing_matrix", "=", "data", "[", "training_samples", ":", "return", "(", "training_matrix", ",", "testing_matrix", ")"]}}
{"position": {"error_location": 62, "repair_targets": [12], "repair_candidates": [58, 75, 2, 17, 21, 60, 69, 4, 45, 55, 30, 52, 62, 71, 8, 23, 35, 67, 77, 15, 19, 33, 53, 12]}}
{"prediction": {"error_location": 0.4294026792049408, "repair_targets": [0.9003693461418152], "repair_candidates": [0.006259168963879347, 0.00903542060405016, 0.016007518395781517, 0.9003693461418152, 0.003717563347890973, 9.794605284696445e-05, 0.0025575170293450356, 0.00018676681793294847, 0.001785922679118812, 0.004229952115565538, 0.0008048214367590845, 0.0014404203975573182, 0.00035983012639917433, 0.005373521242290735, 0.02870962768793106, 0.002234473591670394, 0.012802809476852417, 0.0020588648039847612, 0.00022828674991615117, 0.00033514309325255454, 0.0004640884872060269, 0.0002914181968662888, 0.0006428873748518527, 6.6689049162960146e-06], "target_probs": 0.9003693461418152}}


{"result": {"time": "2021-02-21 07:31:53.143556", "n_pass": [266, 62, 25], "n_token": 77, "loss": [0.802678644657135, 0.12926410138607025], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def split_sets(", "data", ",", "training_percent", "=", "None", ",", "n_test_samples", "=", "None", ",", "perm", "=", "False", "number_of_samples", "=", "data", ".", "number_of_samples", ":", "data", ")", "n_test_samples", "is not", ":", "#NEWLINE#", "#INDENT#", "training_samples", "=", "(", "number_of_samples", "-", "n_test_samples", ")", "#NEWLINE#", "#UNINDENT#", "else", ":", "#NEWLINE#", "#INDENT#", "if", "(", "training_percent", "is not", "None", ")", ":", "#NEWLINE#", "#INDENT#", "training_samples", "number_of_samples", "*", "training_percent", ")", "#UNINDENT#", "training_matrix", "=", "data", ":", "training_samples", ",", ":", "]", "#NEWLINE#", "testing_matrix", "=", "data", "[", "training_samples", ":", "return", "(", "training_matrix", ",", "testing_matrix", ")"]}}
{"position": {"error_location": 60, "repair_targets": [12], "repair_candidates": [56, 73, 2, 17, 21, 58, 67, 4, 43, 53, 28, 50, 60, 69, 8, 23, 33, 65, 75, 15, 19, 31, 51, 12]}}
{"prediction": {"error_location": 0.4481269121170044, "repair_targets": [0.8787418603897095], "repair_candidates": [0.008358234539628029, 0.012784100137650967, 0.017460720613598824, 0.8787418603897095, 0.004627476911991835, 0.0001238532131537795, 0.0029167919419705868, 0.00017554507940076292, 0.002288822317495942, 0.005603843834251165, 0.0008572584483772516, 0.0018388048047199845, 0.0012441464932635427, 0.007261985447257757, 0.033636219799518585, 0.0019135191105306149, 0.014926483854651451, 0.002528631594032049, 0.0003476270067039877, 0.0003083566261921078, 0.0008007130236364901, 0.00036969323991797864, 0.0008835160406306386, 1.7472832496423507e-06], "target_probs": 0.8787418603897095}}


{"result": {"time": "2021-02-21 07:31:53.203190", "n_pass": [267, 63, 26], "n_token": 75, "loss": [0.7778303027153015, 0.12227891385555267], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def split_sets(", "data", ",", "training_percent", "=", "None", ",", "n_test_samples", "=", "None", ",", "perm", "=", "False", "number_of_samples", "=", "data", ".", "number_of_samples", ":", "data", ")", "n_test_samples", "is not", "#INDENT#", "training_samples", "=", "(", "number_of_samples", "-", "n_test_samples", ")", "#NEWLINE#", "#UNINDENT#", "else", ":", "#NEWLINE#", "#INDENT#", "if", "(", "training_percent", "is not", "None", ")", ":", "#NEWLINE#", "#INDENT#", "training_samples", "number_of_samples", "*", "training_percent", ")", "#UNINDENT#", "training_matrix", "=", "data", ":", "training_samples", ",", ":", "]", "#NEWLINE#", "testing_matrix", "=", "data", "[", "training_samples", ":", "return", "(", "training_matrix", ",", "testing_matrix", ")"]}}
{"position": {"error_location": 58, "repair_targets": [12], "repair_candidates": [54, 71, 2, 17, 21, 56, 65, 4, 41, 51, 26, 48, 58, 67, 8, 23, 31, 63, 73, 15, 19, 29, 49, 12]}}
{"prediction": {"error_location": 0.4594016969203949, "repair_targets": [0.8849015235900879], "repair_candidates": [0.008125459775328636, 0.012889773584902287, 0.010024838149547577, 0.8849015235900879, 0.005307401530444622, 0.00013007617963012308, 0.003351288614794612, 0.00011936028022319078, 0.000718520546797663, 0.004381923470646143, 0.0005333374720066786, 0.0010926934191957116, 0.0023623367305845022, 0.007116007152944803, 0.038965921849012375, 0.0011361519573256373, 0.015307357534766197, 0.0021130056120455265, 0.0002729803672991693, 0.0001722986198728904, 0.0004093858296982944, 0.00018757926591206342, 0.0003802012070082128, 4.723737561107555e-07], "target_probs": 0.8849015235900879}}


{"result": {"time": "2021-02-21 07:31:53.262266", "n_pass": [269, 64, 27], "n_token": 73, "loss": [0.8845316171646118, 0.2060021460056305], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def split_sets(", "data", ",", "training_percent", "=", "None", ",", "n_test_samples", "=", "None", ",", "perm", "=", "False", "number_of_samples", "=", "data", ".", "number_of_samples", ":", "data", ")", "n_test_samples", "is not", "#INDENT#", "training_samples", "number_of_samples", "-", "n_test_samples", ")", "#NEWLINE#", "#UNINDENT#", "else", ":", "#NEWLINE#", "#INDENT#", "if", "(", "training_percent", "is not", "None", ")", ":", "#NEWLINE#", "#INDENT#", "training_samples", "number_of_samples", "*", "training_percent", ")", "#UNINDENT#", "training_matrix", "=", "data", ":", "training_samples", ",", ":", "]", "#NEWLINE#", "testing_matrix", "=", "data", "[", "training_samples", ":", "return", "(", "training_matrix", ",", "testing_matrix", ")"]}}
{"position": {"error_location": 56, "repair_targets": [12], "repair_candidates": [52, 69, 2, 17, 21, 54, 63, 4, 39, 49, 26, 46, 56, 65, 8, 23, 29, 61, 71, 15, 19, 27, 47, 12]}}
{"prediction": {"error_location": 0.4129074811935425, "repair_targets": [0.8138313293457031], "repair_candidates": [0.007857980206608772, 0.011998546309769154, 0.011438315734267235, 0.8138313293457031, 0.043481431901454926, 0.00010367213690187782, 0.018209833651781082, 0.00016638865054119378, 0.00044922923552803695, 0.0021944071631878614, 0.007502640597522259, 0.0009043686441145837, 0.0023715244606137276, 0.007337433286011219, 0.05147045850753784, 0.0008313608122989535, 0.016740811988711357, 0.0019465730292722583, 0.00027530582156032324, 0.00018033469677902758, 0.0002038315578829497, 0.00012852995132561773, 0.00037536927266046405, 3.3449705938437546e-07], "target_probs": 0.8138313293457031}}


{"result": {"time": "2021-02-21 07:31:53.381966", "n_pass": [273, 66, 28], "n_token": 71, "loss": [1.1886805295944214, 0.2993972599506378], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def split_sets(", "data", ",", "training_percent", "=", "None", ",", "n_test_samples", "=", "None", ",", "perm", "=", "False", "number_of_samples", "=", "data", ".", "number_of_samples", ":", "data", ")", "n_test_samples", "is not", "#INDENT#", "training_samples", "number_of_samples", "-", "n_test_samples", ")", "#NEWLINE#", "#UNINDENT#", "#NEWLINE#", "#INDENT#", "if", "(", "training_percent", "is not", "None", ")", ":", "#NEWLINE#", "#INDENT#", "training_samples", "number_of_samples", "*", "training_percent", ")", "#UNINDENT#", "training_matrix", "=", "data", ":", "training_samples", ",", ":", "]", "#NEWLINE#", "testing_matrix", "=", "data", "[", "training_samples", ":", "return", "(", "training_matrix", ",", "testing_matrix", ")"]}}
{"position": {"error_location": 54, "repair_targets": [12], "repair_candidates": [50, 67, 2, 17, 21, 52, 61, 4, 37, 47, 26, 44, 54, 63, 8, 23, 29, 59, 69, 15, 19, 27, 45, 12]}}
{"prediction": {"error_location": 0.30462291836738586, "repair_targets": [0.7412648797035217], "repair_candidates": [0.010431948117911816, 0.008141010999679565, 0.015226601622998714, 0.7412648797035217, 0.06199870631098747, 0.00010775212285807356, 0.026571588590741158, 0.000201885006390512, 0.0005774415913037956, 0.003934913780540228, 0.016128268092870712, 0.0008605886250734329, 0.0017637867713347077, 0.00715282279998064, 0.07184097170829773, 0.0008363701053895056, 0.027242733165621758, 0.0037088615354150534, 0.00031840670271776617, 0.0003853405069094151, 0.00046355242375284433, 0.00032997754169628024, 0.0005111187347210944, 4.469147256713768e-07], "target_probs": 0.7412648797035217}}


{"result": {"time": "2021-02-21 07:31:53.440928", "n_pass": [274, 67, 29], "n_token": 69, "loss": [1.1587469577789307, 0.23523397743701935], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def split_sets(", "data", ",", "training_percent", "=", "None", ",", "n_test_samples", "=", "None", ",", "perm", "=", "False", "number_of_samples", "=", "data", ".", "number_of_samples", ":", "data", ")", "n_test_samples", "is not", "#INDENT#", "training_samples", "number_of_samples", "-", "n_test_samples", ")", "#NEWLINE#", "#UNINDENT#", "if", "(", "training_percent", "is not", "None", ")", ":", "#NEWLINE#", "#INDENT#", "training_samples", "number_of_samples", "*", "training_percent", ")", "#UNINDENT#", "training_matrix", "=", "data", ":", "training_samples", ",", ":", "]", "#NEWLINE#", "testing_matrix", "=", "data", "[", "training_samples", ":", "return", "(", "training_matrix", ",", "testing_matrix", ")"]}}
{"position": {"error_location": 52, "repair_targets": [12], "repair_candidates": [48, 65, 2, 17, 21, 50, 59, 4, 35, 45, 26, 42, 52, 61, 8, 23, 29, 57, 67, 15, 19, 27, 43, 12]}}
{"prediction": {"error_location": 0.31387919187545776, "repair_targets": [0.790385901927948], "repair_candidates": [0.007518714759498835, 0.005830986425280571, 0.014894053339958191, 0.790385901927948, 0.057949911803007126, 9.148930257651955e-05, 0.024440698325634003, 0.00016839867748785764, 0.00045913533540442586, 0.0033847736194729805, 0.015449857339262962, 0.0009328660671599209, 0.0015837388345971704, 0.0049929628148674965, 0.04938225448131561, 0.0006003154558129609, 0.01683850772678852, 0.003026581835001707, 0.0002952032664325088, 0.00037075314321555197, 0.0004940156359225512, 0.00043196813203394413, 0.0004765868070535362, 4.4587855541067256e-07], "target_probs": 0.790385901927948}}


{"result": {"time": "2021-02-21 07:31:53.677905", "n_pass": [285, 71, 30], "n_token": 67, "loss": [1.1804238557815552, 0.22948715090751648], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def split_sets(", "data", ",", "training_percent", "=", "None", ",", "n_test_samples", "=", "None", ",", "perm", "=", "False", "number_of_samples", "=", "data", ".", "number_of_samples", ":", "data", ")", "n_test_samples", "is not", "#INDENT#", "training_samples", "number_of_samples", "-", "n_test_samples", ")", "#NEWLINE#", "#UNINDENT#", "if", "(", "training_percent", "is not", "None", ")", ":", "#NEWLINE#", "#INDENT#", "training_samples", "number_of_samples", "*", "training_percent", ")", "#UNINDENT#", "training_matrix", "=", "data", ":", "training_samples", "]", "#NEWLINE#", "testing_matrix", "=", "data", "[", "training_samples", ":", "return", "(", "training_matrix", ",", "testing_matrix", ")"]}}
{"position": {"error_location": 52, "repair_targets": [12], "repair_candidates": [48, 63, 2, 17, 21, 50, 57, 4, 35, 45, 26, 42, 52, 59, 8, 23, 29, 55, 65, 15, 19, 27, 43, 12]}}
{"prediction": {"error_location": 0.3071485459804535, "repair_targets": [0.7949411869049072], "repair_candidates": [0.006367627531290054, 0.006107968743890524, 0.01433571707457304, 0.7949411869049072, 0.07320959866046906, 8.926560258259997e-05, 0.02567988634109497, 0.00018345080025028437, 0.0005214792909100652, 0.003167208982631564, 0.016645638272166252, 0.0009915170958265662, 0.0019417499424889684, 0.0038943651597946882, 0.038125138729810715, 0.0006315321079455316, 0.00938713364303112, 0.0022732457146048546, 0.00024205440422520041, 0.0001679399865679443, 0.0003709232551045716, 0.0002956661628559232, 0.0004291415389161557, 5.965348464087583e-07], "target_probs": 0.7949411869049072}}


{"result": {"time": "2021-02-21 07:31:53.795442", "n_pass": [290, 73, 31], "n_token": 65, "loss": [0.9408273696899414, 0.22491393983364105], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def split_sets(", "data", ",", "training_percent", "=", "None", ",", "n_test_samples", "=", "None", ",", "perm", "=", "False", "number_of_samples", "=", "data", ".", "number_of_samples", ":", "data", ")", "n_test_samples", "is not", "#INDENT#", "training_samples", "number_of_samples", "-", "n_test_samples", ")", "#NEWLINE#", "#UNINDENT#", "if", "(", "training_percent", "is not", "None", ")", ":", "#NEWLINE#", "#INDENT#", "training_samples", "number_of_samples", "*", "training_percent", ")", "#UNINDENT#", "training_matrix", "=", "data", ":", "training_samples", "]", "#NEWLINE#", "testing_matrix", "=", "data", "[", "training_samples", ":", "training_matrix", ",", "testing_matrix", ")"]}}
{"position": {"error_location": 52, "repair_targets": [12], "repair_candidates": [48, 61, 2, 17, 21, 50, 57, 4, 35, 45, 26, 42, 52, 59, 8, 23, 29, 55, 63, 15, 19, 27, 43, 12]}}
{"prediction": {"error_location": 0.3903047740459442, "repair_targets": [0.7985849380493164], "repair_candidates": [0.005879770964384079, 0.00626496784389019, 0.015586266294121742, 0.7985849380493164, 0.07230478525161743, 0.00012334893108345568, 0.024526111781597137, 0.00021591217955574393, 0.0007709073834121227, 0.002878505038097501, 0.018125275149941444, 0.0013619365636259317, 0.0016001572366803885, 0.0033482841681689024, 0.03794948011636734, 0.0010597888613119721, 0.006831612903624773, 0.0021089266519993544, 0.00019304026500321925, 7.353681576205418e-05, 0.00013758940622210503, 5.2848517952952534e-05, 2.177703208872117e-05, 2.915600987307698e-07], "target_probs": 0.7985849380493164}}


{"result": {"time": "2021-02-21 07:31:53.854472", "n_pass": [293, 74, 32], "n_token": 64, "loss": [0.7029290795326233, 0.2527455985546112], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["def split_sets(", "data", ",", "training_percent", "=", "None", ",", "n_test_samples", "=", "None", ",", "perm", "=", "False", "number_of_samples", "=", "data", ".", "number_of_samples", ":", "data", ")", "n_test_samples", "is not", "#INDENT#", "training_samples", "number_of_samples", "-", "n_test_samples", ")", "#NEWLINE#", "#UNINDENT#", "if", "(", "training_percent", "is not", "None", ")", ":", "#NEWLINE#", "#INDENT#", "training_samples", "number_of_samples", "*", "training_percent", ")", "#UNINDENT#", "training_matrix", "=", "data", ":", "training_samples", "]", "#NEWLINE#", "testing_matrix", "=", "data", "[", "training_samples", ":", "training_matrix", ",", "testing_matrix", ")"]}}
{"position": {"error_location": 51, "repair_targets": [11], "repair_candidates": [47, 60, 1, 16, 20, 49, 56, 3, 34, 44, 25, 41, 51, 58, 7, 22, 28, 54, 62, 14, 18, 26, 42, 11]}}
{"prediction": {"error_location": 0.4951329529285431, "repair_targets": [0.776665449142456], "repair_candidates": [0.00999467447400093, 0.02073552832007408, 0.02230091392993927, 0.776665449142456, 0.04075286537408829, 0.000713406247086823, 0.04830120876431465, 0.0013863228959962726, 0.0016306369798257947, 0.0033212541602551937, 0.009402631781995296, 0.003089598612859845, 0.005923580378293991, 0.005032556131482124, 0.024189259856939316, 0.002779327565804124, 0.021478435024619102, 0.0016677143285050988, 0.0002785000251606107, 0.00011644713958958164, 9.879085700958967e-05, 4.8305719246855006e-05, 9.084885095944628e-05, 1.7405576500095776e-06], "target_probs": 0.776665449142456}}


{"result": {"time": "2021-02-21 07:31:53.913690", "n_pass": [296, 75, 33], "n_token": 62, "loss": [0.9033528566360474, 0.1874174326658249], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["def split_sets(", "data", ",", "training_percent", ",", "n_test_samples", "=", "None", ",", "perm", "=", "False", "number_of_samples", "=", "data", ".", "number_of_samples", ":", "data", ")", "n_test_samples", "is not", "#INDENT#", "training_samples", "number_of_samples", "-", "n_test_samples", ")", "#NEWLINE#", "#UNINDENT#", "if", "(", "training_percent", "is not", "None", ")", ":", "#NEWLINE#", "#INDENT#", "training_samples", "number_of_samples", "*", "training_percent", ")", "#UNINDENT#", "training_matrix", "=", "data", ":", "training_samples", "]", "#NEWLINE#", "testing_matrix", "=", "data", "[", "training_samples", ":", "training_matrix", ",", "testing_matrix", ")"]}}
{"position": {"error_location": 49, "repair_targets": [9], "repair_candidates": [45, 58, 1, 14, 18, 47, 54, 3, 32, 42, 23, 39, 49, 56, 5, 20, 26, 52, 60, 12, 16, 24, 40, 9]}}
{"prediction": {"error_location": 0.4052088260650635, "repair_targets": [0.8290975689888], "repair_candidates": [0.006612488068640232, 0.0602484829723835, 0.01591084711253643, 0.8290975689888, 0.0143177080899477, 0.0005409341538324952, 0.022066714242100716, 0.00037903484189882874, 0.0006877246778458357, 0.0023852859158068895, 0.005437120795249939, 0.0010071848519146442, 0.007827308028936386, 0.003311190055683255, 0.01415927056223154, 0.0038515180349349976, 0.010620330460369587, 0.0011503563728183508, 0.000137611961690709, 0.00010359539737692103, 5.158997009857558e-05, 2.095157469739206e-05, 7.287657354027033e-05, 2.207363650086336e-06], "target_probs": 0.8290975689888}}


{"result": {"time": "2021-02-21 07:31:53.975106", "n_pass": [298, 76, 34], "n_token": 60, "loss": [1.201438307762146, 0.16207553446292877], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["def split_sets(", "data", ",", "training_percent", ",", "n_test_samples", ",", "perm", "=", "False", "number_of_samples", "=", "data", ".", "number_of_samples", ":", "data", ")", "n_test_samples", "is not", "#INDENT#", "training_samples", "number_of_samples", "-", "n_test_samples", ")", "#NEWLINE#", "#UNINDENT#", "if", "(", "training_percent", "is not", "None", ")", ":", "#NEWLINE#", "#INDENT#", "training_samples", "number_of_samples", "*", "training_percent", ")", "#UNINDENT#", "training_matrix", "=", "data", ":", "training_samples", "]", "#NEWLINE#", "testing_matrix", "=", "data", "[", "training_samples", ":", "training_matrix", ",", "testing_matrix", ")"]}}
{"position": {"error_location": 47, "repair_targets": [7], "repair_candidates": [43, 56, 1, 12, 16, 45, 52, 3, 30, 40, 21, 37, 47, 54, 5, 18, 24, 50, 58, 10, 14, 22, 38, 7]}}
{"prediction": {"error_location": 0.30076131224632263, "repair_targets": [0.8503769636154175], "repair_candidates": [0.005917197093367577, 0.05521504953503609, 0.005952945910394192, 0.8503769636154175, 0.01632649265229702, 0.0005548790213651955, 0.013901615515351295, 0.0004004569782409817, 0.0005882629775442183, 0.0023755826987326145, 0.00547323003411293, 0.0019469117978587747, 0.007740356028079987, 0.002681122161448002, 0.016836652532219887, 0.0032218126580119133, 0.007987035438418388, 0.002044494729489088, 9.329360182164237e-05, 8.741718193050474e-05, 0.00011940858530579135, 2.774060340016149e-05, 0.00012713232717942446, 3.983886017522309e-06], "target_probs": 0.8503769636154175}}


{"result": {"time": "2021-02-21 07:31:54.034021", "n_pass": [300, 77, 35], "n_token": 58, "loss": [1.2820448875427246, 0.10442651063203812], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["def split_sets(", "data", ",", "training_percent", ",", "n_test_samples", ",", "perm", "number_of_samples", "=", "data", ".", "number_of_samples", ":", "data", ")", "n_test_samples", "is not", "#INDENT#", "training_samples", "number_of_samples", "-", "n_test_samples", ")", "#NEWLINE#", "#UNINDENT#", "if", "(", "training_percent", "is not", "None", ")", ":", "#NEWLINE#", "#INDENT#", "training_samples", "number_of_samples", "*", "training_percent", ")", "#UNINDENT#", "training_matrix", "=", "data", ":", "training_samples", "]", "#NEWLINE#", "testing_matrix", "=", "data", "[", "training_samples", ":", "training_matrix", ",", "testing_matrix", ")"]}}
{"position": {"error_location": 45, "repair_targets": [7], "repair_candidates": [41, 54, 1, 10, 14, 43, 50, 3, 28, 38, 19, 35, 45, 52, 5, 16, 22, 48, 56, 8, 12, 20, 36, 7]}}
{"prediction": {"error_location": 0.27746933698654175, "repair_targets": [0.9008409976959229], "repair_candidates": [0.004105116240680218, 0.030557796359062195, 0.006115777418017387, 0.9008409976959229, 0.009107008576393127, 0.0002446797152515501, 0.01196512021124363, 0.000632107665296644, 0.0010195261565968394, 0.00165838364046067, 0.0036456631496548653, 0.0021723955869674683, 0.001668626326136291, 0.001682056114077568, 0.01274382695555687, 0.004575875122100115, 0.005453402176499367, 0.0013298585545271635, 6.117599696153775e-05, 8.191766391973943e-05, 0.00012991421681363136, 2.081942329823505e-05, 0.00018466328037902713, 3.4165479974035406e-06], "target_probs": 0.9008409976959229}}


{"result": {"time": "2021-02-21 07:31:54.093315", "n_pass": [309, 78, 36], "n_token": 56, "loss": [1.2107043266296387, 0.24206696450710297], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["def split_sets(", "data", ",", "training_percent", ",", "n_test_samples", ",", "perm", "number_of_samples", "=", "data", ".", "number_of_samples", ":", "data", ")", "n_test_samples", "is not", "#INDENT#", "training_samples", "number_of_samples", "-", "n_test_samples", ")", "if", "(", "training_percent", "is not", "None", ")", ":", "#NEWLINE#", "#INDENT#", "training_samples", "number_of_samples", "*", "training_percent", ")", "#UNINDENT#", "training_matrix", "=", "data", ":", "training_samples", "]", "#NEWLINE#", "testing_matrix", "=", "data", "[", "training_samples", ":", "training_matrix", ",", "testing_matrix", ")"]}}
{"position": {"error_location": 43, "repair_targets": [7], "repair_candidates": [39, 52, 1, 10, 14, 41, 48, 3, 26, 36, 19, 33, 43, 50, 5, 16, 22, 46, 54, 8, 12, 20, 34, 7]}}
{"prediction": {"error_location": 0.29798734188079834, "repair_targets": [0.7850036025047302], "repair_candidates": [0.005464639980345964, 0.03862582519650459, 0.0194532610476017, 0.7850036025047302, 0.012761007063090801, 0.0003173015429638326, 0.009607691317796707, 0.0011886439751833677, 0.004128848202526569, 0.002265870338305831, 0.01138477586209774, 0.05653431639075279, 0.003283544909209013, 0.0032143197022378445, 0.026159711182117462, 0.009174532257020473, 0.008895793929696083, 0.0016820088494569063, 0.00010469572589499876, 0.00015988387167453766, 0.00014842931705061346, 3.2734395063016564e-05, 0.00040265204734168947, 5.925768618908478e-06], "target_probs": 0.7850036025047302}}


{"result": {"time": "2021-02-21 07:31:54.151890", "n_pass": [310, 79, 37], "n_token": 54, "loss": [1.1357638835906982, 0.41272133588790894], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["def split_sets(", "data", ",", "training_percent", ",", "n_test_samples", ",", "perm", "number_of_samples", "=", "data", ".", "number_of_samples", ":", "data", ")", "n_test_samples", "is not", "#INDENT#", "training_samples", "number_of_samples", "-", "n_test_samples", ")", "training_percent", "is not", "None", ")", ":", "#NEWLINE#", "#INDENT#", "training_samples", "number_of_samples", "*", "training_percent", ")", "#UNINDENT#", "training_matrix", "=", "data", ":", "training_samples", "]", "#NEWLINE#", "testing_matrix", "=", "data", "[", "training_samples", ":", "training_matrix", ",", "testing_matrix", ")"]}}
{"position": {"error_location": 41, "repair_targets": [7], "repair_candidates": [37, 50, 1, 10, 14, 39, 46, 3, 24, 34, 19, 31, 41, 48, 5, 16, 22, 44, 52, 8, 12, 20, 32, 7]}}
{"prediction": {"error_location": 0.321176677942276, "repair_targets": [0.6618466973304749], "repair_candidates": [0.00208706664852798, 0.24241194128990173, 0.005102243740111589, 0.6618466973304749, 0.005886089522391558, 0.00014492514310404658, 0.009114202111959457, 0.0002629140217322856, 0.0018787934677675366, 0.0006707620341330767, 0.008392809890210629, 0.025477642193436623, 0.012103518471121788, 0.0011835054028779268, 0.01490121427923441, 0.001709040836431086, 0.005758790299296379, 0.000713904679287225, 3.074686537729576e-05, 9.264839172828943e-05, 3.76695825252682e-05, 9.770508768269792e-06, 0.0001824063656385988, 6.743572384948493e-07], "target_probs": 0.6618466973304749}}


{"result": {"time": "2021-02-21 07:31:54.389829", "n_pass": [393, 83, 38], "n_token": 53, "loss": [1.3479738235473633, 0.489932119846344], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["def split_sets(", "data", ",", "training_percent", ",", "n_test_samples", ",", "perm", "number_of_samples", "=", "data", ".", "number_of_samples", ":", "data", ")", "n_test_samples", "is not", "#INDENT#", "training_samples", "number_of_samples", "-", "n_test_samples", ")", "training_percent", "None", ")", ":", "#NEWLINE#", "#INDENT#", "training_samples", "number_of_samples", "*", "training_percent", ")", "#UNINDENT#", "training_matrix", "=", "data", ":", "training_samples", "]", "#NEWLINE#", "testing_matrix", "=", "data", "[", "training_samples", ":", "training_matrix", ",", "testing_matrix", ")"]}}
{"position": {"error_location": 40, "repair_targets": [7], "repair_candidates": [36, 49, 1, 10, 14, 38, 45, 3, 24, 33, 19, 30, 40, 47, 5, 16, 22, 43, 51, 8, 12, 20, 31, 7]}}
{"prediction": {"error_location": 0.2597660720348358, "repair_targets": [0.612667977809906], "repair_candidates": [0.0020927840378135443, 0.27604958415031433, 0.005622271914035082, 0.612667977809906, 0.006926518399268389, 0.00015018648991826922, 0.01070720236748457, 0.00028763170121237636, 0.0019755803514271975, 0.0008223291370086372, 0.008758896961808205, 0.03399839624762535, 0.011014348827302456, 0.0013422657502815127, 0.01609751395881176, 0.0025078163016587496, 0.007672731764614582, 0.0008676833822391927, 5.1818387873936445e-05, 0.00010327136988053098, 4.071956209372729e-05, 1.2640259228646755e-05, 0.00022906206140760332, 8.921340395318111e-07], "target_probs": 0.612667977809906}}


{"result": {"time": "2021-02-21 07:31:54.802410", "n_pass": [403, 90, 39], "n_token": 52, "loss": [1.495392084121704, 0.40068110823631287], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["def split_sets(", "data", ",", "training_percent", ",", "n_test_samples", ",", "perm", "number_of_samples", "=", "data", ".", "number_of_samples", ":", "data", ")", "n_test_samples", "is not", "#INDENT#", "training_samples", "number_of_samples", "-", "n_test_samples", ")", "training_percent", "None", ")", ":", "#NEWLINE#", "#INDENT#", "training_samples", "number_of_samples", "*", "training_percent", "#UNINDENT#", "training_matrix", "=", "data", ":", "training_samples", "]", "#NEWLINE#", "testing_matrix", "=", "data", "[", "training_samples", ":", "training_matrix", ",", "testing_matrix", ")"]}}
{"position": {"error_location": 39, "repair_targets": [7], "repair_candidates": [35, 48, 1, 10, 14, 37, 44, 3, 24, 33, 19, 30, 39, 46, 5, 16, 22, 42, 50, 8, 12, 20, 31, 7]}}
{"prediction": {"error_location": 0.22416067123413086, "repair_targets": [0.6698636412620544], "repair_candidates": [0.0021578026935458183, 0.21376720070838928, 0.006294034421443939, 0.6698636412620544, 0.008401847444474697, 0.0001866024249466136, 0.011426043696701527, 0.0004306695773266256, 0.00218931189738214, 0.0012073733378201723, 0.00969077367335558, 0.029377266764640808, 0.013609286397695541, 0.001971923978999257, 0.018447093665599823, 0.0005026545841246843, 0.0091866971924901, 0.0008047324954532087, 9.426548785995692e-05, 0.00014678866136819124, 5.4420997912529856e-05, 1.4226951861928683e-05, 0.0001743239990901202, 9.845228987614973e-07], "target_probs": 0.6698636412620544}}


{"result": {"time": "2021-02-21 07:31:55.036621", "n_pass": [410, 94, 40], "n_token": 51, "loss": [1.0578898191452026, 0.4162006378173828], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["def split_sets(", "data", ",", "training_percent", ",", "n_test_samples", ",", "perm", "number_of_samples", "=", "data", ".", "number_of_samples", ":", "data", ")", "n_test_samples", "is not", "#INDENT#", "training_samples", "number_of_samples", "-", "n_test_samples", ")", "training_percent", "None", ")", ":", "#NEWLINE#", "#INDENT#", "training_samples", "number_of_samples", "*", "training_percent", "#UNINDENT#", "training_matrix", "=", "data", ":", "training_samples", "#NEWLINE#", "testing_matrix", "=", "data", "[", "training_samples", ":", "training_matrix", ",", "testing_matrix", ")"]}}
{"position": {"error_location": 39, "repair_targets": [7], "repair_candidates": [35, 47, 1, 10, 14, 37, 43, 3, 24, 33, 19, 30, 39, 45, 5, 16, 22, 41, 49, 8, 12, 20, 31, 7]}}
{"prediction": {"error_location": 0.34718769788742065, "repair_targets": [0.6595479249954224], "repair_candidates": [0.0022978184279054403, 0.18343599140644073, 0.00606693746522069, 0.6595479249954224, 0.009801906533539295, 0.00021132195251993835, 0.01903597079217434, 0.0006650901050306857, 0.0026590442284941673, 0.0016862868797034025, 0.010959947481751442, 0.03229577839374542, 0.03447374328970909, 0.002045420231297612, 0.0194577407091856, 0.001049219397827983, 0.01247528474777937, 0.0012257519410923123, 4.654189251596108e-05, 0.00022413325496017933, 7.871877460274845e-05, 1.8626069504534826e-05, 0.0002390226727584377, 1.6796877844171831e-06], "target_probs": 0.6595479249954224}}


{"result": {"time": "2021-02-21 07:31:55.214212", "n_pass": [415, 97, 41], "n_token": 50, "loss": [1.170575737953186, 0.4399697482585907], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["def split_sets(", "data", ",", "training_percent", ",", "n_test_samples", ",", "perm", "number_of_samples", "=", "data", ".", "number_of_samples", ":", "data", ")", "n_test_samples", "is not", "#INDENT#", "training_samples", "number_of_samples", "-", "n_test_samples", ")", "training_percent", "None", ")", ":", "#NEWLINE#", "#INDENT#", "training_samples", "number_of_samples", "*", "training_percent", "#UNINDENT#", "training_matrix", "=", "data", ":", "training_samples", "#NEWLINE#", "testing_matrix", "=", "data", "training_samples", ":", "training_matrix", ",", "testing_matrix", ")"]}}
{"position": {"error_location": 39, "repair_targets": [7], "repair_candidates": [35, 46, 1, 10, 14, 37, 43, 3, 24, 33, 19, 30, 39, 44, 5, 16, 22, 41, 48, 8, 12, 20, 31, 7]}}
{"prediction": {"error_location": 0.31018829345703125, "repair_targets": [0.6440559029579163], "repair_candidates": [0.0028819937724620104, 0.18619287014007568, 0.006831394974142313, 0.6440559029579163, 0.009828934445977211, 0.0002178201830247417, 0.021709756925702095, 0.0005355793982744217, 0.002986364299431443, 0.0013573776232078671, 0.011274372227489948, 0.03996654599905014, 0.0271565243601799, 0.0018650179263204336, 0.02852046489715576, 0.0012969591189175844, 0.011423541232943535, 0.0014535444788634777, 3.7686397263314575e-05, 0.00010259544797008857, 0.0002059104444924742, 2.236131149402354e-05, 7.521170482505113e-05, 1.190123498417961e-06], "target_probs": 0.6440559029579163}}


{"result": {"time": "2021-02-21 07:31:55.273016", "n_pass": [417, 98, 42], "n_token": 49, "loss": [0.8292952179908752, 0.5964528322219849], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["def split_sets(", "data", ",", "training_percent", ",", "n_test_samples", ",", "perm", "number_of_samples", "=", "data", ".", "number_of_samples", ":", "data", ")", "n_test_samples", "is not", "#INDENT#", "training_samples", "number_of_samples", "-", "n_test_samples", ")", "training_percent", "None", ")", ":", "#NEWLINE#", "#INDENT#", "training_samples", "number_of_samples", "*", "training_percent", "#UNINDENT#", "training_matrix", "=", "data", ":", "training_samples", "#NEWLINE#", "testing_matrix", "=", "data", "training_samples", "training_matrix", ",", "testing_matrix", ")"]}}
{"position": {"error_location": 39, "repair_targets": [7], "repair_candidates": [35, 45, 1, 10, 14, 37, 43, 3, 24, 33, 19, 30, 39, 44, 5, 16, 22, 41, 47, 8, 12, 20, 31, 7]}}
{"prediction": {"error_location": 0.43635666370391846, "repair_targets": [0.5507618188858032], "repair_candidates": [0.0026746313087642193, 0.2443327158689499, 0.0073173618875443935, 0.5507618188858032, 0.008988354355096817, 0.00045567427878268063, 0.014602418057620525, 0.0013644119026139379, 0.003231773618608713, 0.0008463916601613164, 0.01070244237780571, 0.05896497890353203, 0.045434534549713135, 0.0012553139822557569, 0.03732140734791756, 0.0005475114448927343, 0.007326956372708082, 0.002082241466268897, 4.26276856160257e-05, 0.0001914091408252716, 0.00151017343159765, 4.7835378609306645e-06, 3.866816405206919e-05, 1.3946762464911444e-06], "target_probs": 0.5507618188858032}}


{"result": {"time": "2021-02-21 07:31:55.389967", "n_pass": [421, 100, 43], "n_token": 48, "loss": [0.5910511016845703, 0.5812018513679504], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["def split_sets(", "data", ",", "training_percent", ",", "n_test_samples", ",", "perm", "number_of_samples", "=", "data", ".", "number_of_samples", ":", "data", ")", "n_test_samples", "is not", "#INDENT#", "training_samples", "number_of_samples", "-", "n_test_samples", ")", "training_percent", "None", ")", ":", "#NEWLINE#", "#INDENT#", "training_samples", "number_of_samples", "*", "training_percent", "#UNINDENT#", "training_matrix", "=", "data", ":", "training_samples", "#NEWLINE#", "testing_matrix", "=", "data", "training_samples", "training_matrix", ",", "testing_matrix"]}}
{"position": {"error_location": 39, "repair_targets": [7], "repair_candidates": [35, 45, 1, 10, 14, 37, 43, 3, 24, 33, 19, 30, 39, 44, 5, 16, 22, 41, 47, 8, 12, 20, 31, 7]}}
{"prediction": {"error_location": 0.5537449717521667, "repair_targets": [0.559225857257843], "repair_candidates": [0.002751813270151615, 0.243428573012352, 0.0066980887204408646, 0.559225857257843, 0.00920159462839365, 0.00037582527147606015, 0.01656213402748108, 0.0012615533778443933, 0.003312447341158986, 0.0007412330014631152, 0.011475726030766964, 0.052438586950302124, 0.05435476079583168, 0.001031717867590487, 0.028181198984384537, 0.00047760322922840714, 0.005988870747387409, 0.0014394096797332168, 3.677712447824888e-05, 0.00014131535135675222, 0.0008383065578527749, 8.002411959751043e-06, 2.7767953724833205e-05, 7.481440889023361e-07], "target_probs": 0.559225857257843}}


{"result": {"time": "2021-02-21 07:31:55.448805", "n_pass": [422, 101, 44], "n_token": 47, "loss": [0.5571645498275757, 0.3103083670139313], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["data", ",", "training_percent", ",", "n_test_samples", ",", "perm", "number_of_samples", "=", "data", ".", "number_of_samples", ":", "data", ")", "n_test_samples", "is not", "#INDENT#", "training_samples", "number_of_samples", "-", "n_test_samples", ")", "training_percent", "None", ")", ":", "#NEWLINE#", "#INDENT#", "training_samples", "number_of_samples", "*", "training_percent", "#UNINDENT#", "training_matrix", "=", "data", ":", "training_samples", "#NEWLINE#", "testing_matrix", "=", "data", "training_samples", "training_matrix", ",", "testing_matrix"]}}
{"position": {"error_location": 38, "repair_targets": [6], "repair_candidates": [34, 44, 0, 9, 13, 36, 42, 2, 23, 32, 18, 29, 38, 43, 4, 15, 21, 40, 46, 7, 11, 19, 30, 6]}}
{"prediction": {"error_location": 0.5728309750556946, "repair_targets": [0.7332208156585693], "repair_candidates": [0.0010331962257623672, 0.06955749541521072, 0.0066219219006598, 0.7332208156585693, 0.011004607193171978, 0.00042437101365067065, 0.013659460470080376, 0.0015744703123345971, 0.0018347249133512378, 0.0009318491793237627, 0.013181137852370739, 0.029225753620266914, 0.0760975033044815, 0.001209698268212378, 0.03093419410288334, 0.0004998664953745902, 0.005589128006249666, 0.0019397367723286152, 4.221307608531788e-05, 0.00016145515837706625, 0.001214685500599444, 1.0542174095462542e-05, 3.0095276088104583e-05, 1.0431358532514423e-06], "target_probs": 0.7332208156585693}}


{"result": {"time": "2021-02-21 07:31:55.510036", "n_pass": [424, 102, 45], "n_token": 46, "loss": [0.8942432403564453, 0.2621721923351288], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["data", "training_percent", ",", "n_test_samples", ",", "perm", "number_of_samples", "=", "data", ".", "number_of_samples", ":", "data", ")", "n_test_samples", "is not", "#INDENT#", "training_samples", "number_of_samples", "-", "n_test_samples", ")", "training_percent", "None", ")", ":", "#NEWLINE#", "#INDENT#", "training_samples", "number_of_samples", "*", "training_percent", "#UNINDENT#", "training_matrix", "=", "data", ":", "training_samples", "#NEWLINE#", "testing_matrix", "=", "data", "training_samples", "training_matrix", ",", "testing_matrix"]}}
{"position": {"error_location": 37, "repair_targets": [5], "repair_candidates": [33, 43, 0, 8, 12, 35, 41, 1, 22, 31, 17, 28, 37, 42, 3, 14, 20, 39, 45, 6, 10, 18, 29, 5]}}
{"prediction": {"error_location": 0.4089169502258301, "repair_targets": [0.7693785429000854], "repair_candidates": [0.0029977131634950638, 0.04530849680304527, 0.006737124640494585, 0.7693785429000854, 0.014483731240034103, 0.0007975824410095811, 0.011663231998682022, 0.002896177116781473, 0.0036309347487986088, 0.0015215137973427773, 0.020174555480480194, 0.01203394029289484, 0.017364758998155594, 0.002034712815657258, 0.06371418386697769, 0.0010857308516278863, 0.011488351970911026, 0.005009239539504051, 0.00011354659363860264, 0.00028825097251683474, 0.007142878603190184, 4.300299769965932e-05, 8.833661559037864e-05, 3.4016989047813695e-06], "target_probs": 0.7693785429000854}}


{"result": {"time": "2021-02-21 07:31:55.568574", "n_pass": [426, 103, 46], "n_token": 45, "loss": [0.741246223449707, 0.23726417124271393], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["data", "training_percent", "n_test_samples", ",", "perm", "number_of_samples", "=", "data", ".", "number_of_samples", ":", "data", ")", "n_test_samples", "is not", "#INDENT#", "training_samples", "number_of_samples", "-", "n_test_samples", ")", "training_percent", "None", ")", ":", "#NEWLINE#", "#INDENT#", "training_samples", "number_of_samples", "*", "training_percent", "#UNINDENT#", "training_matrix", "=", "data", ":", "training_samples", "#NEWLINE#", "testing_matrix", "=", "data", "training_samples", "training_matrix", ",", "testing_matrix"]}}
{"position": {"error_location": 36, "repair_targets": [4], "repair_candidates": [32, 42, 0, 7, 11, 34, 40, 1, 21, 30, 16, 27, 36, 41, 2, 13, 19, 38, 44, 5, 9, 17, 28, 4]}}
{"prediction": {"error_location": 0.47651970386505127, "repair_targets": [0.7887828946113586], "repair_candidates": [0.0020136425737291574, 0.034611284732818604, 0.00753440335392952, 0.7887828946113586, 0.015654049813747406, 0.0009975233115255833, 0.00989440642297268, 0.004970145877450705, 0.008212817832827568, 0.0012644618982449174, 0.021420957520604134, 0.01544087566435337, 0.012782547622919083, 0.0019133670721203089, 0.048479825258255005, 0.0004045170499011874, 0.011499147862195969, 0.004499255213886499, 5.5976506700972095e-05, 0.00014908715093042701, 0.009321055375039577, 3.1183026294456795e-05, 6.502113683382049e-05, 1.5242671906889882e-06], "target_probs": 0.7887828946113586}}


{"result": {"time": "2021-02-21 07:31:55.745382", "n_pass": [433, 106, 47], "n_token": 44, "loss": [0.8848938345909119, 0.44748979806900024], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["data", "training_percent", "n_test_samples", ",", "perm", "number_of_samples", "=", "data", "number_of_samples", ":", "data", ")", "n_test_samples", "is not", "#INDENT#", "training_samples", "number_of_samples", "-", "n_test_samples", ")", "training_percent", "None", ")", ":", "#NEWLINE#", "#INDENT#", "training_samples", "number_of_samples", "*", "training_percent", "#UNINDENT#", "training_matrix", "=", "data", ":", "training_samples", "#NEWLINE#", "testing_matrix", "=", "data", "training_samples", "training_matrix", ",", "testing_matrix"]}}
{"position": {"error_location": 35, "repair_targets": [4], "repair_candidates": [31, 41, 0, 7, 10, 33, 39, 1, 20, 29, 15, 26, 35, 40, 2, 12, 18, 37, 43, 5, 8, 16, 27, 4]}}
{"prediction": {"error_location": 0.4127579629421234, "repair_targets": [0.6392307281494141], "repair_candidates": [0.0028342786245048046, 0.04707060381770134, 0.01567268744111061, 0.6392307281494141, 0.028186190873384476, 0.00832970067858696, 0.00866987369954586, 0.03738654777407646, 0.054441776126623154, 0.0025577822234481573, 0.03309747204184532, 0.00923634972423315, 0.01828639954328537, 0.004216909408569336, 0.0327049121260643, 0.0006631652940995991, 0.021256443113088608, 0.0010586552089080215, 9.365432197228074e-05, 0.0003825013409368694, 0.034457046538591385, 5.871887697139755e-05, 0.00010486115206731483, 2.7447892989584943e-06], "target_probs": 0.6392307281494141}}




Minimal simplified tokens:

['data', 'training_percent', 'n_test_samples', ',', 'perm', 'number_of_samples', '=', 'data', 'number_of_samples', ':', 'data', ')', 'n_test_samples', 'is not', '#INDENT#', 'training_samples', 'number_of_samples', '-', 'n_test_samples', ')', 'training_percent', 'None', ')', ':', '#NEWLINE#', '#INDENT#', 'training_samples', 'number_of_samples', '*', 'training_percent', '#UNINDENT#', 'training_matrix', '=', 'data', ':', 'training_samples', '#NEWLINE#', 'testing_matrix', '=', 'data', 'training_samples', 'training_matrix', ',', 'testing_matrix']
