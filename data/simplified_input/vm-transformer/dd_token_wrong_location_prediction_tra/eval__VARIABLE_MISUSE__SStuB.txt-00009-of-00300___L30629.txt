
Original sample:

{"has_bug": true, "bug_kind": 1, "bug_kind_name": "VARIABLE_MISUSE", "source_tokens": ["#NEWLINE#", "def test_wsman_get(", "self", ",", "mock_client_pywsman", ")", ":", "#NEWLINE#", "#INDENT#", "namespace", "=", "resource_uris", ".", "CIM_AssociatedPowerManagementService", "#NEWLINE#", "result_xml", "=", "test_utils", ".", "build_soap_xml", "(", "[", "{", "#NEWLINE#", "#INDENT#", "'PowerState'", ":", "'2'", ",", "#NEWLINE#", "#UNINDENT#", "}", "]", ",", "namespace", ")", "#NEWLINE#", "mock_doc", "=", "test_utils", ".", "mock_wsman_root", "(", "result_xml", ")", "#NEWLINE#", "mock_pywsman", "=", "mock_client_pywsman", ".", "Client", ".", "return_value", "#NEWLINE#", "mock_pywsman", ".", "get", ".", "return_value", "=", "mock_pywsman", "#NEWLINE#", "client", "=", "amt_common", ".", "Client", "(", "**", "self", ".", "info", ")", "#NEWLINE#", "client", ".", "wsman_get", "(", "namespace", ")", "#NEWLINE#", "mock_pywsman", ".", "get", ".", "assert_called_once_with", "(", "mock", ".", "ANY", ",", "namespace", ")"], "error_location": [60], "repair_targets": [37], "repair_candidates": [15, 43, 62, 74, 4, 48, 2, 69, 37, 46, 54, 60, 81, 9, 34, 78, 91], "provenances": [{"datasetProvenance": {"datasetName": "ETHPy150Open", "filepath": "openstack/ironic/ironic/tests/unit/drivers/modules/amt/test_common.py", "license": "apache-2.0", "note": "license: bigquery_api"}}], "txt_file": "eval__VARIABLE_MISUSE__SStuB.txt-00009-of-00300", "js_count": 30629, "results": {"model": "transformer", "prob": {"loc": [[0.012129021808505058, 1.1059275095703924e-07, 1.3820830702115927e-08, 5.885196330268627e-09, 3.9684147168372874e-07, 6.2343152862354145e-09, 7.47095452169333e-09, 8.050387911850976e-09, 6.093510585003514e-09, 5.9193723700445844e-08, 1.5454437729545134e-08, 2.66544418536796e-07, 1.815380556990931e-08, 2.013562427904958e-09, 6.450470380059414e-09, 1.8247283151140437e-07, 1.6661845236853878e-09, 3.567632633760809e-09, 5.921893198035377e-09, 3.5314127178054378e-09, 1.3464259041029436e-08, 6.90618620069472e-08, 1.1274969580199468e-07, 1.3213762528607731e-08, 5.541341163706193e-09, 6.224987636471724e-09, 1.1330389959596232e-08, 4.679450285038911e-07, 3.378593049774281e-08, 1.8496361775532932e-08, 2.196891202288498e-08, 5.5400231957491997e-08, 5.1253937982664866e-08, 1.4718914087552548e-07, 0.00025530109996907413, 6.960497955788014e-08, 1.8405671653454192e-08, 6.880380851725931e-07, 3.8516287048651066e-08, 1.9735286738153945e-09, 9.573519754724202e-09, 2.3600004173118805e-09, 1.0544413697743948e-07, 4.236196036799811e-05, 1.9608660295489244e-06, 9.721048854771652e-08, 1.9122139747196343e-06, 2.535797882785573e-08, 0.005559259559959173, 1.4930783720501495e-07, 2.0751958373921298e-08, 4.1510608639327984e-07, 4.834073141779527e-09, 6.661765041826584e-07, 2.9672182790818624e-05, 8.506817295028668e-08, 2.8429707477073407e-09, 1.0986897791553929e-07, 4.824778798706575e-09, 2.9991670658091607e-07, 0.40712031722068787, 1.60818308359012e-06, 3.9745714275341015e-06, 3.1431881097887526e-08, 5.513037848459135e-08, 3.108821289288244e-08, 6.415439735008022e-09, 1.8918008208856918e-06, 4.835969207306334e-07, 0.46093201637268066, 1.0856048504592763e-07, 2.9571934234695618e-08, 9.104788887270843e-07, 7.061552054210551e-08, 8.641546145327084e-08, 9.063802153264078e-09, 3.2840317132354357e-09, 2.05354382387668e-08, 0.0832442045211792, 2.6372174488642486e-06, 2.7359885734767886e-07, 1.7549564290675335e-05, 2.3124355763570748e-08, 2.1300343711061487e-09, 2.3308524887966087e-08, 2.018830880246014e-09, 4.0642145648916994e-08, 0.0002881564141716808, 6.307740108013604e-08, 1.3688895350583152e-08, 1.5842270784105494e-07, 0.030360329896211624, 3.611177987750125e-07]], "pointer": [[0.0, 0.0, 1.8530179659137502e-05, 0.0, 0.0012491797097027302, 0.0, 0.0, 0.0, 0.0, 0.0023135817609727383, 0.0, 0.0, 0.0, 0.0, 0.0, 0.007510415744036436, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.00045829516602680087, 0.0, 0.0, 0.9756757020950317, 0.0, 0.0, 0.0, 0.0, 0.0, 0.001998740015551448, 0.0, 0.0, 0.005666084121912718, 0.0, 0.0003420157008804381, 0.0, 0.0, 0.0, 0.0, 0.0, 0.00013427046360448003, 0.0, 0.0, 0.0, 0.0, 0.0, 8.794434688752517e-05, 0.0, 0.003386580152437091, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 3.113317507086322e-05, 0.0, 0.0, 0.0, 0.0, 7.44939679862e-05, 0.0, 0.0, 0.0, 0.000421890988945961, 0.0, 0.0, 1.4623267816205043e-05, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0006164318765513599, 0.0]], "target": [0.9756757020950317]}, "loss": [0.8986462950706482, 0.02462502010166645], "acc": [0.0, 0.0, 1.0, 0.0]}, "wrong_error_location": [69]}


Trace of simplified code(s):

{"result": {"time": "2021-02-21 06:40:45.970184", "n_pass": [1, 1, 1], "n_token": 93, "loss": [0.7745046019554138, 0.02462502010166645], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def test_wsman_get(", "self", ",", "mock_client_pywsman", ")", ":", "#NEWLINE#", "#INDENT#", "namespace", "=", "resource_uris", ".", "CIM_AssociatedPowerManagementService", "#NEWLINE#", "result_xml", "=", "test_utils", ".", "build_soap_xml", "(", "[", "{", "#NEWLINE#", "#INDENT#", "'PowerState'", ":", "'2'", ",", "#NEWLINE#", "#UNINDENT#", "}", "]", ",", "namespace", ")", "#NEWLINE#", "mock_doc", "=", "test_utils", ".", "mock_wsman_root", "(", "result_xml", ")", "#NEWLINE#", "mock_pywsman", "=", "mock_client_pywsman", ".", "Client", ".", "return_value", "#NEWLINE#", "mock_pywsman", ".", "get", ".", "return_value", "=", "mock_pywsman", "#NEWLINE#", "client", "=", "amt_common", ".", "Client", "(", "**", "self", ".", "info", ")", "#NEWLINE#", "client", ".", "wsman_get", "(", "namespace", ")", "#NEWLINE#", "mock_pywsman", ".", "get", ".", "assert_called_once_with", "(", "mock", ".", "ANY", ",", "namespace", ")"]}}
{"position": {"error_location": 69, "repair_targets": [37], "repair_candidates": [15, 43, 62, 74, 4, 48, 2, 69, 37, 46, 54, 60, 81, 9, 34, 78, 91]}}
{"prediction": {"error_location": 0.46093201637268066, "repair_targets": [0.9756757020950317], "repair_candidates": [1.8530179659137502e-05, 0.0012491797097027302, 0.0023135817609727383, 0.007510415744036436, 0.00045829516602680087, 0.9756757020950317, 0.001998740015551448, 0.005666084121912718, 0.0003420157008804381, 0.00013427046360448003, 8.794434688752517e-05, 0.003386580152437091, 3.113317507086322e-05, 7.44939679862e-05, 0.000421890988945961, 1.4623267816205043e-05, 0.0006164318765513599], "target_probs": 0.9756757020950317}}


{"result": {"time": "2021-02-21 06:40:46.266288", "n_pass": [55, 6, 2], "n_token": 87, "loss": [0.7272177338600159, 0.03644588217139244], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def test_wsman_get(", "self", ",", "mock_client_pywsman", ")", ":", "#NEWLINE#", "#INDENT#", "namespace", "=", "resource_uris", ".", "CIM_AssociatedPowerManagementService", "#NEWLINE#", "result_xml", "=", "test_utils", ".", "build_soap_xml", "(", "[", "{", "#NEWLINE#", "#INDENT#", "'PowerState'", ":", "'2'", ",", "#NEWLINE#", "#UNINDENT#", "}", "]", ",", "namespace", ")", "#NEWLINE#", "mock_doc", "=", "test_utils", ".", "mock_wsman_root", "(", "result_xml", ")", "#NEWLINE#", "mock_pywsman", "=", "mock_client_pywsman", ".", "Client", ".", "return_value", "#NEWLINE#", "mock_pywsman", ".", "get", ".", "return_value", "=", "mock_pywsman", "#NEWLINE#", "client", "self", ".", "info", ")", "#NEWLINE#", "client", ".", "wsman_get", "(", "namespace", ")", "#NEWLINE#", "mock_pywsman", ".", "get", ".", "assert_called_once_with", "(", "mock", ".", "ANY", ",", "namespace", ")"]}}
{"position": {"error_location": 63, "repair_targets": [37], "repair_candidates": [15, 43, 62, 68, 4, 48, 2, 63, 37, 46, 54, 60, 75, 9, 34, 72, 85]}}
{"prediction": {"error_location": 0.4832516610622406, "repair_targets": [0.9642102718353271], "repair_candidates": [9.643572411732748e-05, 0.0014633102109655738, 0.0013251998461782932, 0.004925265442579985, 0.00015869039634708315, 0.9642102718353271, 0.000994730624370277, 0.005922607146203518, 0.0003027765196748078, 8.556737884646282e-05, 2.4098057110677473e-05, 0.01948564499616623, 0.00012487686763051897, 0.0003474675468169153, 0.0002832468890119344, 1.2815934496757109e-05, 0.00023697286087553948], "target_probs": 0.9642102718353271}}


{"result": {"time": "2021-02-21 06:40:46.558272", "n_pass": [105, 11, 3], "n_token": 84, "loss": [0.19899265468120575, 0.0713624656200409], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def test_wsman_get(", "self", ",", "mock_client_pywsman", ")", ":", "#NEWLINE#", "#INDENT#", "namespace", "=", "resource_uris", ".", "CIM_AssociatedPowerManagementService", "#NEWLINE#", "result_xml", "=", "test_utils", ".", "build_soap_xml", "(", "[", "{", "#NEWLINE#", "#INDENT#", "'PowerState'", ":", "'2'", ",", "#NEWLINE#", "#UNINDENT#", "}", "]", ",", "namespace", ")", "#NEWLINE#", "mock_doc", "=", "test_utils", ".", "mock_wsman_root", "(", "result_xml", ")", "#NEWLINE#", "mock_pywsman", "=", "mock_client_pywsman", ".", "Client", ".", "return_value", "#NEWLINE#", "mock_pywsman", ".", "get", ".", "return_value", "=", "mock_pywsman", "#NEWLINE#", "client", "self", ".", "info", ")", "#NEWLINE#", "client", ".", "wsman_get", "(", "namespace", ")", "#NEWLINE#", "mock_pywsman", ".", "get", "mock", ".", "ANY", ",", "namespace", ")"]}}
{"position": {"error_location": 63, "repair_targets": [37], "repair_candidates": [15, 43, 62, 68, 4, 48, 2, 63, 37, 46, 54, 60, 75, 9, 34, 72, 82]}}
{"prediction": {"error_location": 0.8195558190345764, "repair_targets": [0.9311243295669556], "repair_candidates": [0.0001254384987987578, 0.0021812021732330322, 0.0009227620903402567, 0.004180021118372679, 6.515456334454939e-05, 0.9311243295669556, 0.0010841834591701627, 0.015058514662086964, 0.00031622417736798525, 0.0003979396424256265, 8.180596341844648e-05, 0.040651511400938034, 0.0001585016871104017, 0.0008053118945099413, 0.00018825252482201904, 0.00255106994882226, 0.00010770905646495521], "target_probs": 0.9311243295669556}}


{"result": {"time": "2021-02-21 06:40:46.616038", "n_pass": [106, 12, 4], "n_token": 81, "loss": [0.47789132595062256, 0.03631440922617912], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def test_wsman_get(", "self", ",", "mock_client_pywsman", ")", ":", "#NEWLINE#", "#INDENT#", "namespace", "=", "resource_uris", ".", "CIM_AssociatedPowerManagementService", "#NEWLINE#", "result_xml", "=", "test_utils", ".", "build_soap_xml", "(", "[", "{", "#NEWLINE#", "#INDENT#", "'PowerState'", ":", "'2'", ",", "#NEWLINE#", "#UNINDENT#", "}", "]", ",", "namespace", ")", "#NEWLINE#", "mock_doc", "=", "test_utils", ".", "mock_wsman_root", "(", "result_xml", ")", "#NEWLINE#", "mock_pywsman", "=", "mock_client_pywsman", ".", "Client", ".", "return_value", "#NEWLINE#", "mock_pywsman", ".", "get", ".", "return_value", "=", "mock_pywsman", "#NEWLINE#", "client", "self", ".", "info", ")", "#NEWLINE#", "client", ".", "wsman_get", "(", "namespace", ")", "#NEWLINE#", "mock_pywsman", ".", "get", ",", "namespace", ")"]}}
{"position": {"error_location": 63, "repair_targets": [37], "repair_candidates": [15, 43, 62, 68, 4, 48, 2, 63, 37, 46, 54, 60, 75, 9, 34, 72, 79]}}
{"prediction": {"error_location": 0.6200895309448242, "repair_targets": [0.9643370509147644], "repair_candidates": [3.625967292464338e-05, 0.000725029269233346, 0.0008294735453091562, 0.0035795499570667744, 9.187105752062052e-05, 0.9643370509147644, 0.0008676756406202912, 0.006937110796570778, 0.00012690895528066903, 0.00019982267986051738, 4.256824468029663e-05, 0.018623098731040955, 8.739352779230103e-05, 0.0010143236722797155, 0.00019510726269800216, 0.0022442415356636047, 6.253679021028802e-05], "target_probs": 0.9643370509147644}}


{"result": {"time": "2021-02-21 06:40:46.730643", "n_pass": [111, 14, 5], "n_token": 78, "loss": [0.22048814594745636, 0.06717228144407272], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def test_wsman_get(", "self", ",", "mock_client_pywsman", ")", "namespace", "=", "resource_uris", ".", "CIM_AssociatedPowerManagementService", "#NEWLINE#", "result_xml", "=", "test_utils", ".", "build_soap_xml", "(", "[", "{", "#NEWLINE#", "#INDENT#", "'PowerState'", ":", "'2'", ",", "#NEWLINE#", "#UNINDENT#", "}", "]", ",", "namespace", ")", "#NEWLINE#", "mock_doc", "=", "test_utils", ".", "mock_wsman_root", "(", "result_xml", ")", "#NEWLINE#", "mock_pywsman", "=", "mock_client_pywsman", ".", "Client", ".", "return_value", "#NEWLINE#", "mock_pywsman", ".", "get", ".", "return_value", "=", "mock_pywsman", "#NEWLINE#", "client", "self", ".", "info", ")", "#NEWLINE#", "client", ".", "wsman_get", "(", "namespace", ")", "#NEWLINE#", "mock_pywsman", ".", "get", ",", "namespace", ")"]}}
{"position": {"error_location": 60, "repair_targets": [34], "repair_candidates": [12, 40, 59, 65, 4, 45, 2, 60, 34, 43, 51, 57, 72, 6, 31, 69, 76]}}
{"prediction": {"error_location": 0.8021270632743835, "repair_targets": [0.9350340962409973], "repair_candidates": [2.1774956621811725e-05, 0.0022746194154024124, 0.001349087106063962, 0.005585923790931702, 0.00010234172077616677, 0.9350340962409973, 0.0022254621144384146, 0.013764796778559685, 0.0004075034521520138, 0.00025206152349710464, 0.00011989220365649089, 0.03193921223282814, 8.058636012719944e-05, 0.00260914396494627, 0.00022294896189123392, 0.003932874649763107, 7.764378096908331e-05], "target_probs": 0.9350340962409973}}


{"result": {"time": "2021-02-21 06:40:46.788693", "n_pass": [113, 15, 6], "n_token": 75, "loss": [1.0258045196533203, 0.04457221180200577], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def test_wsman_get(", "self", ",", "mock_client_pywsman", ")", "namespace", "=", "resource_uris", "result_xml", "=", "test_utils", ".", "build_soap_xml", "(", "[", "{", "#NEWLINE#", "#INDENT#", "'PowerState'", ":", "'2'", ",", "#NEWLINE#", "#UNINDENT#", "}", "]", ",", "namespace", ")", "#NEWLINE#", "mock_doc", "=", "test_utils", ".", "mock_wsman_root", "(", "result_xml", ")", "#NEWLINE#", "mock_pywsman", "=", "mock_client_pywsman", ".", "Client", ".", "return_value", "#NEWLINE#", "mock_pywsman", ".", "get", ".", "return_value", "=", "mock_pywsman", "#NEWLINE#", "client", "self", ".", "info", ")", "#NEWLINE#", "client", ".", "wsman_get", "(", "namespace", ")", "#NEWLINE#", "mock_pywsman", ".", "get", ",", "namespace", ")"]}}
{"position": {"error_location": 57, "repair_targets": [31], "repair_candidates": [9, 37, 56, 62, 4, 42, 2, 57, 31, 40, 48, 54, 69, 6, 28, 66, 73]}}
{"prediction": {"error_location": 0.3585079312324524, "repair_targets": [0.9564065337181091], "repair_candidates": [1.5046607586555183e-05, 0.0019533627200871706, 0.0016889369580894709, 0.0026353236753493547, 8.580762369092554e-05, 0.9564065337181091, 0.0036494401283562183, 0.009634085930883884, 0.00015074163093231618, 0.0002762883377727121, 7.426973024848849e-05, 0.014214037917554379, 9.28750669118017e-05, 0.002712106332182884, 0.00039620097959414124, 0.005879400297999382, 0.00013557412603404373], "target_probs": 0.9564065337181091}}


{"result": {"time": "2021-02-21 06:40:46.848274", "n_pass": [115, 16, 7], "n_token": 72, "loss": [0.5096630454063416, 0.06381341814994812], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def test_wsman_get(", "self", ",", "mock_client_pywsman", ")", "namespace", "=", "resource_uris", "result_xml", "=", "test_utils", "[", "{", "#NEWLINE#", "#INDENT#", "'PowerState'", ":", "'2'", ",", "#NEWLINE#", "#UNINDENT#", "}", "]", ",", "namespace", ")", "#NEWLINE#", "mock_doc", "=", "test_utils", ".", "mock_wsman_root", "(", "result_xml", ")", "#NEWLINE#", "mock_pywsman", "=", "mock_client_pywsman", ".", "Client", ".", "return_value", "#NEWLINE#", "mock_pywsman", ".", "get", ".", "return_value", "=", "mock_pywsman", "#NEWLINE#", "client", "self", ".", "info", ")", "#NEWLINE#", "client", ".", "wsman_get", "(", "namespace", ")", "#NEWLINE#", "mock_pywsman", ".", "get", ",", "namespace", ")"]}}
{"position": {"error_location": 54, "repair_targets": [28], "repair_candidates": [9, 34, 53, 59, 4, 39, 2, 54, 28, 37, 45, 51, 66, 6, 25, 63, 70]}}
{"prediction": {"error_location": 0.6006979942321777, "repair_targets": [0.9381800293922424], "repair_candidates": [1.7667545762378722e-05, 0.0025646688882261515, 0.0023060874082148075, 0.004555112682282925, 9.896509436657652e-05, 0.9381800293922424, 0.004511088598519564, 0.013511240482330322, 0.00020714763377327472, 0.00034148929989896715, 0.00011899322998942807, 0.016480108723044395, 6.888435746077448e-05, 0.0023193242959678173, 0.000890060851816088, 0.013675800524652004, 0.00015331593749579042], "target_probs": 0.9381800293922424}}


{"result": {"time": "2021-02-21 06:40:46.905738", "n_pass": [116, 17, 8], "n_token": 69, "loss": [0.25413778424263, 0.09240603446960449], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def test_wsman_get(", "self", ",", "mock_client_pywsman", ")", "namespace", "=", "resource_uris", "result_xml", "=", "test_utils", "#INDENT#", "'PowerState'", ":", "'2'", ",", "#NEWLINE#", "#UNINDENT#", "}", "]", ",", "namespace", ")", "#NEWLINE#", "mock_doc", "=", "test_utils", ".", "mock_wsman_root", "(", "result_xml", ")", "#NEWLINE#", "mock_pywsman", "=", "mock_client_pywsman", ".", "Client", ".", "return_value", "#NEWLINE#", "mock_pywsman", ".", "get", ".", "return_value", "=", "mock_pywsman", "#NEWLINE#", "client", "self", ".", "info", ")", "#NEWLINE#", "client", ".", "wsman_get", "(", "namespace", ")", "#NEWLINE#", "mock_pywsman", ".", "get", ",", "namespace", ")"]}}
{"position": {"error_location": 51, "repair_targets": [25], "repair_candidates": [9, 31, 50, 56, 4, 36, 2, 51, 25, 34, 42, 48, 63, 6, 22, 60, 67]}}
{"prediction": {"error_location": 0.775584876537323, "repair_targets": [0.9117348790168762], "repair_candidates": [2.1670741261914372e-05, 0.0022165447007864714, 0.0027929164934903383, 0.005371194798499346, 0.0002928930916823447, 0.9117348790168762, 0.004528636112809181, 0.015470855869352818, 0.00022893637651577592, 0.00044956832425668836, 0.00016864344070199877, 0.022938191890716553, 4.025162706966512e-05, 0.002228313125669956, 0.002896716119721532, 0.028280477970838547, 0.0003394319210201502], "target_probs": 0.9117348790168762}}


{"result": {"time": "2021-02-21 06:40:46.963456", "n_pass": [117, 18, 9], "n_token": 66, "loss": [0.0953228771686554, 0.14117589592933655], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def test_wsman_get(", "self", ",", "mock_client_pywsman", ")", "namespace", "=", "resource_uris", "result_xml", "=", "test_utils", "'2'", ",", "#NEWLINE#", "#UNINDENT#", "}", "]", ",", "namespace", ")", "#NEWLINE#", "mock_doc", "=", "test_utils", ".", "mock_wsman_root", "(", "result_xml", ")", "#NEWLINE#", "mock_pywsman", "=", "mock_client_pywsman", ".", "Client", ".", "return_value", "#NEWLINE#", "mock_pywsman", ".", "get", ".", "return_value", "=", "mock_pywsman", "#NEWLINE#", "client", "self", ".", "info", ")", "#NEWLINE#", "client", ".", "wsman_get", "(", "namespace", ")", "#NEWLINE#", "mock_pywsman", ".", "get", ",", "namespace", ")"]}}
{"position": {"error_location": 48, "repair_targets": [22], "repair_candidates": [9, 28, 47, 53, 4, 33, 2, 48, 22, 31, 39, 45, 60, 6, 19, 57, 64]}}
{"prediction": {"error_location": 0.9090792536735535, "repair_targets": [0.86833655834198], "repair_candidates": [2.5294577426393516e-05, 0.004337604157626629, 0.002535624895244837, 0.0032452887389808893, 0.0002346071705687791, 0.86833655834198, 0.0036924807354807854, 0.03142339363694191, 0.00022491491108667105, 0.002620056737214327, 0.0006438308046199381, 0.04348766803741455, 1.6550537111470476e-05, 0.001008306280709803, 0.0022980961948633194, 0.035406943410634995, 0.00046275407657958567], "target_probs": 0.86833655834198}}


{"result": {"time": "2021-02-21 06:40:47.020996", "n_pass": [118, 19, 10], "n_token": 63, "loss": [0.06764176487922668, 0.17652025818824768], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def test_wsman_get(", "self", ",", "mock_client_pywsman", ")", "namespace", "=", "resource_uris", "result_xml", "=", "test_utils", "#UNINDENT#", "}", "]", ",", "namespace", ")", "#NEWLINE#", "mock_doc", "=", "test_utils", ".", "mock_wsman_root", "(", "result_xml", ")", "#NEWLINE#", "mock_pywsman", "=", "mock_client_pywsman", ".", "Client", ".", "return_value", "#NEWLINE#", "mock_pywsman", ".", "get", ".", "return_value", "=", "mock_pywsman", "#NEWLINE#", "client", "self", ".", "info", ")", "#NEWLINE#", "client", ".", "wsman_get", "(", "namespace", ")", "#NEWLINE#", "mock_pywsman", ".", "get", ",", "namespace", ")"]}}
{"position": {"error_location": 45, "repair_targets": [19], "repair_candidates": [9, 25, 44, 50, 4, 30, 2, 45, 19, 28, 36, 42, 57, 6, 16, 54, 61]}}
{"prediction": {"error_location": 0.9345953464508057, "repair_targets": [0.8381817936897278], "repair_candidates": [2.1534970073844306e-05, 0.004747259896248579, 0.003634014632552862, 0.006490739993751049, 0.00038277654675766826, 0.8381817936897278, 0.004697278141975403, 0.03532504290342331, 0.00021114169794600457, 0.006279873661696911, 0.00038961434620432556, 0.04970358684659004, 1.3605726053356193e-05, 0.000962455291301012, 0.0023384320084005594, 0.04552013799548149, 0.001100733526982367], "target_probs": 0.8381817936897278}}


{"result": {"time": "2021-02-21 06:40:47.078242", "n_pass": [119, 20, 11], "n_token": 60, "loss": [0.06695254892110825, 0.11048287898302078], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def test_wsman_get(", "self", ",", "mock_client_pywsman", ")", "namespace", "=", "resource_uris", "result_xml", "=", "test_utils", ",", "namespace", ")", "#NEWLINE#", "mock_doc", "=", "test_utils", ".", "mock_wsman_root", "(", "result_xml", ")", "#NEWLINE#", "mock_pywsman", "=", "mock_client_pywsman", ".", "Client", ".", "return_value", "#NEWLINE#", "mock_pywsman", ".", "get", ".", "return_value", "=", "mock_pywsman", "#NEWLINE#", "client", "self", ".", "info", ")", "#NEWLINE#", "client", ".", "wsman_get", "(", "namespace", ")", "#NEWLINE#", "mock_pywsman", ".", "get", ",", "namespace", ")"]}}
{"position": {"error_location": 42, "repair_targets": [16], "repair_candidates": [9, 22, 41, 47, 4, 27, 2, 42, 16, 25, 33, 39, 54, 6, 13, 51, 58]}}
{"prediction": {"error_location": 0.9352395534515381, "repair_targets": [0.895401656627655], "repair_candidates": [1.9848392184940167e-05, 0.0033197461161762476, 0.0031290536280721426, 0.004524747375398874, 0.0001334218104602769, 0.895401656627655, 0.003821072168648243, 0.028940029442310333, 0.0004694912349805236, 0.008421841077506542, 0.0005549649358727038, 0.024987660348415375, 2.0604626115527935e-05, 0.000700916163623333, 0.0011807690607383847, 0.023851456120610237, 0.0005227851797826588], "target_probs": 0.895401656627655}}


{"result": {"time": "2021-02-21 06:40:47.138693", "n_pass": [122, 21, 12], "n_token": 57, "loss": [0.24705226719379425, 0.06690114736557007], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def test_wsman_get(", "self", ",", "mock_client_pywsman", ")", "namespace", "=", "resource_uris", "result_xml", "=", "test_utils", ",", "namespace", ")", "#NEWLINE#", "mock_doc", "=", "(", "result_xml", ")", "#NEWLINE#", "mock_pywsman", "=", "mock_client_pywsman", ".", "Client", ".", "return_value", "#NEWLINE#", "mock_pywsman", ".", "get", ".", "return_value", "=", "mock_pywsman", "#NEWLINE#", "client", "self", ".", "info", ")", "#NEWLINE#", "client", ".", "wsman_get", "(", "namespace", ")", "#NEWLINE#", "mock_pywsman", ".", "get", ",", "namespace", ")"]}}
{"position": {"error_location": 39, "repair_targets": [16], "repair_candidates": [9, 19, 38, 44, 4, 24, 2, 39, 16, 22, 30, 36, 51, 6, 13, 48, 55]}}
{"prediction": {"error_location": 0.781099796295166, "repair_targets": [0.9352876543998718], "repair_candidates": [1.8877541151596233e-05, 0.002137133851647377, 0.003707313444465399, 0.0039224326610565186, 0.00016846321523189545, 0.9352876543998718, 0.001090337405912578, 0.018343079835176468, 0.0003433838428463787, 0.007088718470185995, 0.00042019900865852833, 0.012802398763597012, 4.501737930695526e-05, 0.00038452507578767836, 0.001132376492023468, 0.012312885373830795, 0.0007951270672492683], "target_probs": 0.9352876543998718}}


{"result": {"time": "2021-02-21 06:40:47.196146", "n_pass": [126, 22, 13], "n_token": 54, "loss": [0.41369080543518066, 0.04425959289073944], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def test_wsman_get(", "self", ",", "mock_client_pywsman", ")", "namespace", "=", "resource_uris", "result_xml", "=", "test_utils", ",", "namespace", ")", "#NEWLINE#", "mock_doc", "=", "(", "result_xml", ")", "#NEWLINE#", "mock_pywsman", "=", "mock_client_pywsman", ".", "Client", "mock_pywsman", ".", "get", ".", "return_value", "=", "mock_pywsman", "#NEWLINE#", "client", "self", ".", "info", ")", "#NEWLINE#", "client", ".", "wsman_get", "(", "namespace", ")", "#NEWLINE#", "mock_pywsman", ".", "get", ",", "namespace", ")"]}}
{"position": {"error_location": 36, "repair_targets": [16], "repair_candidates": [9, 19, 35, 41, 4, 24, 2, 36, 16, 22, 27, 33, 48, 6, 13, 45, 52]}}
{"prediction": {"error_location": 0.6612053513526917, "repair_targets": [0.9567055702209473], "repair_candidates": [7.66542143537663e-06, 0.0024483096785843372, 0.006264748051762581, 0.007681247312575579, 0.0006233240128494799, 0.9567055702209473, 0.002053047763183713, 0.015691563487052917, 0.0007243594736792147, 0.000752031512092799, 0.00013642884732689708, 0.0023662333842366934, 7.278942575794645e-06, 0.0002103109727613628, 0.0010055690072476864, 0.002420778851956129, 0.0009015655377879739], "target_probs": 0.9567055702209473}}


{"result": {"time": "2021-02-21 06:40:47.425865", "n_pass": [184, 26, 14], "n_token": 53, "loss": [0.15545718371868134, 0.05173378810286522], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def test_wsman_get(", "self", ",", "mock_client_pywsman", ")", "namespace", "=", "resource_uris", "result_xml", "=", "test_utils", ",", "namespace", ")", "#NEWLINE#", "mock_doc", "=", "(", "result_xml", "#NEWLINE#", "mock_pywsman", "=", "mock_client_pywsman", ".", "Client", "mock_pywsman", ".", "get", ".", "return_value", "=", "mock_pywsman", "#NEWLINE#", "client", "self", ".", "info", ")", "#NEWLINE#", "client", ".", "wsman_get", "(", "namespace", ")", "#NEWLINE#", "mock_pywsman", ".", "get", ",", "namespace", ")"]}}
{"position": {"error_location": 35, "repair_targets": [16], "repair_candidates": [9, 19, 34, 40, 4, 23, 2, 35, 16, 21, 26, 32, 47, 6, 13, 44, 51]}}
{"prediction": {"error_location": 0.8560238480567932, "repair_targets": [0.9495816230773926], "repair_candidates": [9.490268894296605e-06, 0.003395016770809889, 0.005770048126578331, 0.004346189089119434, 0.00048755379975773394, 0.9495816230773926, 0.0009594147559255362, 0.023347148671746254, 0.0011851591989398003, 0.0009719394729472697, 0.00028393478714860976, 0.004456537310034037, 8.346110917045735e-06, 0.00042873568600043654, 0.0006069933297112584, 0.0034543508663773537, 0.0007075009634718299], "target_probs": 0.9495816230773926}}


{"result": {"time": "2021-02-21 06:40:47.482920", "n_pass": [185, 27, 15], "n_token": 52, "loss": [0.07107516378164291, 0.20392094552516937], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def test_wsman_get(", "self", ",", "mock_client_pywsman", ")", "namespace", "=", "resource_uris", "result_xml", "=", "test_utils", ",", "namespace", ")", "#NEWLINE#", "mock_doc", "=", "(", "result_xml", "mock_pywsman", "=", "mock_client_pywsman", ".", "Client", "mock_pywsman", ".", "get", ".", "return_value", "=", "mock_pywsman", "#NEWLINE#", "client", "self", ".", "info", ")", "#NEWLINE#", "client", ".", "wsman_get", "(", "namespace", ")", "#NEWLINE#", "mock_pywsman", ".", "get", ",", "namespace", ")"]}}
{"position": {"error_location": 34, "repair_targets": [16], "repair_candidates": [9, 19, 33, 39, 4, 22, 2, 34, 16, 20, 25, 31, 46, 6, 13, 43, 50]}}
{"prediction": {"error_location": 0.9313918948173523, "repair_targets": [0.8155268430709839], "repair_candidates": [2.285307527927216e-05, 0.010375901125371456, 0.0039525385946035385, 0.04424605146050453, 0.0005939046968705952, 0.8155268430709839, 0.04605945944786072, 0.0024011945351958275, 0.01082534994930029, 0.0030019113328307867, 0.0013711343053728342, 0.04640970379114151, 6.784924335079268e-05, 0.0013931768480688334, 0.0002713048306759447, 0.013156751170754433, 0.0003240002552047372], "target_probs": 0.8155268430709839}}


{"result": {"time": "2021-02-21 06:40:47.540501", "n_pass": [189, 28, 16], "n_token": 50, "loss": [0.11531123518943787, 0.22902005910873413], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def test_wsman_get(", "self", ",", "mock_client_pywsman", ")", "namespace", "=", "resource_uris", "result_xml", "=", "test_utils", ",", "namespace", ")", "#NEWLINE#", "mock_doc", "=", "(", "result_xml", "mock_pywsman", "=", "mock_client_pywsman", ".", "Client", "mock_pywsman", ".", "return_value", "=", "mock_pywsman", "#NEWLINE#", "client", "self", ".", "info", ")", "#NEWLINE#", "client", ".", "wsman_get", "(", "namespace", ")", "#NEWLINE#", "mock_pywsman", ".", "get", ",", "namespace", ")"]}}
{"position": {"error_location": 32, "repair_targets": [16], "repair_candidates": [9, 19, 31, 37, 4, 22, 2, 32, 16, 20, 25, 29, 44, 6, 13, 41, 48]}}
{"prediction": {"error_location": 0.8910886645317078, "repair_targets": [0.7953125834465027], "repair_candidates": [4.125452323933132e-05, 0.012196517549455166, 0.004760262090712786, 0.03393778204917908, 0.0005762054352089763, 0.7953125834465027, 0.03818749263882637, 0.0036322162486612797, 0.0106050418689847, 0.002806191798299551, 0.0024312620516866446, 0.07710877805948257, 0.00026831967988982797, 0.0011423473479226232, 0.00047245912719517946, 0.01568995788693428, 0.0008313960279338062], "target_probs": 0.7953125834465027}}


{"result": {"time": "2021-02-21 06:40:47.597353", "n_pass": [190, 29, 17], "n_token": 48, "loss": [0.26607856154441833, 0.19666628539562225], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def test_wsman_get(", "self", ",", "mock_client_pywsman", ")", "namespace", "=", "resource_uris", "result_xml", "=", "test_utils", ",", "namespace", ")", "#NEWLINE#", "mock_doc", "=", "(", "result_xml", "mock_pywsman", "=", "mock_client_pywsman", ".", "Client", "mock_pywsman", "=", "mock_pywsman", "#NEWLINE#", "client", "self", ".", "info", ")", "#NEWLINE#", "client", ".", "wsman_get", "(", "namespace", ")", "#NEWLINE#", "mock_pywsman", ".", "get", ",", "namespace", ")"]}}
{"position": {"error_location": 30, "repair_targets": [16], "repair_candidates": [9, 19, 29, 35, 4, 22, 2, 30, 16, 20, 25, 27, 42, 6, 13, 39, 46]}}
{"prediction": {"error_location": 0.7663788199424744, "repair_targets": [0.8214647173881531], "repair_candidates": [2.854962440324016e-05, 0.008216025307774544, 0.005387815646827221, 0.047270335257053375, 0.0006160115590319037, 0.8214647173881531, 0.04264950007200241, 0.002137856325134635, 0.007811695337295532, 0.0027158393058925867, 0.002498507732525468, 0.04946253076195717, 0.00025382041349075735, 0.0009063984616659582, 0.0005487317685037851, 0.007562713231891394, 0.0004688474291469902], "target_probs": 0.8214647173881531}}


{"result": {"time": "2021-02-21 06:40:47.711734", "n_pass": [196, 31, 18], "n_token": 46, "loss": [0.4890954792499542, 0.11697674542665482], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def test_wsman_get(", "self", ",", "mock_client_pywsman", ")", "namespace", "=", "resource_uris", "result_xml", "=", "test_utils", ",", "namespace", ")", "#NEWLINE#", "mock_doc", "=", "(", "result_xml", "mock_pywsman", "=", "mock_client_pywsman", ".", "Client", "mock_pywsman", "=", "mock_pywsman", "#NEWLINE#", "client", "self", ".", "info", ")", "#NEWLINE#", "client", "(", "namespace", ")", "#NEWLINE#", "mock_pywsman", ".", "get", ",", "namespace", ")"]}}
{"position": {"error_location": 30, "repair_targets": [16], "repair_candidates": [9, 19, 29, 35, 4, 22, 2, 30, 16, 20, 25, 27, 40, 6, 13, 37, 44]}}
{"prediction": {"error_location": 0.6131807565689087, "repair_targets": [0.8896058797836304], "repair_candidates": [0.00010617831139825284, 0.008364209905266762, 0.002780333859845996, 0.01678779348731041, 0.00044093962060287595, 0.8896058797836304, 0.018030650913715363, 0.0014304399956017733, 0.008682372979819775, 0.0013118520146235824, 0.001925107673741877, 0.04147849977016449, 0.0010927716502919793, 0.0012118550948798656, 0.0010357819264754653, 0.005519475322216749, 0.00019584331312216818], "target_probs": 0.8896058797836304}}


{"result": {"time": "2021-02-21 06:40:47.771075", "n_pass": [198, 32, 19], "n_token": 44, "loss": [0.31454625725746155, 0.13858477771282196], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def test_wsman_get(", "self", ",", "mock_client_pywsman", ")", "namespace", "=", "resource_uris", "result_xml", "=", "test_utils", ",", "namespace", ")", "#NEWLINE#", "mock_doc", "=", "(", "result_xml", "mock_pywsman", "=", "mock_client_pywsman", ".", "Client", "mock_pywsman", "=", "mock_pywsman", "#NEWLINE#", "client", "self", ".", "info", ")", "#NEWLINE#", "client", "(", "namespace", "mock_pywsman", ".", "get", ",", "namespace", ")"]}}
{"position": {"error_location": 30, "repair_targets": [16], "repair_candidates": [9, 19, 29, 35, 4, 22, 2, 30, 16, 20, 25, 27, 38, 6, 13, 37, 42]}}
{"prediction": {"error_location": 0.730120062828064, "repair_targets": [0.8705894351005554], "repair_candidates": [0.0001871921995189041, 0.009308484382927418, 0.0030917776748538017, 0.015418369323015213, 0.0005489246104843915, 0.8705894351005554, 0.01618673838675022, 0.0015294546028599143, 0.01216510497033596, 0.0013981253141537309, 0.0025210778694599867, 0.045849017798900604, 0.008916700258851051, 0.0007000250043347478, 0.0015308744041249156, 0.009995144791901112, 6.359971303027123e-05], "target_probs": 0.8705894351005554}}


{"result": {"time": "2021-02-21 06:40:47.827468", "n_pass": [200, 33, 20], "n_token": 42, "loss": [0.06429815292358398, 0.1441134363412857], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def test_wsman_get(", "self", ",", "mock_client_pywsman", ")", "namespace", "=", "resource_uris", "result_xml", "=", "test_utils", ",", "namespace", ")", "#NEWLINE#", "mock_doc", "=", "(", "result_xml", "mock_pywsman", "=", "mock_client_pywsman", ".", "Client", "mock_pywsman", "=", "mock_pywsman", "#NEWLINE#", "client", "self", ".", "info", ")", "#NEWLINE#", "client", "(", "namespace", "mock_pywsman", ".", "namespace", ")"]}}
{"position": {"error_location": 30, "repair_targets": [16], "repair_candidates": [9, 19, 29, 35, 4, 22, 2, 30, 16, 20, 25, 27, 38, 6, 13, 37, 40]}}
{"prediction": {"error_location": 0.9377252459526062, "repair_targets": [0.865789532661438], "repair_candidates": [0.0006431163637898862, 0.006477982737123966, 0.005248021800071001, 0.009306848049163818, 0.0011894811177626252, 0.865789532661438, 0.007064929697662592, 0.001497410936281085, 0.01976773701608181, 0.0007867987151257694, 0.0031930680852383375, 0.04018606245517731, 0.015545247122645378, 0.0015091926325112581, 0.008040611632168293, 0.013639413751661777, 0.0001145821443060413], "target_probs": 0.865789532661438}}


{"result": {"time": "2021-02-21 06:40:47.997657", "n_pass": [205, 36, 21], "n_token": 41, "loss": [0.18282771110534668, 0.15499021112918854], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def test_wsman_get(", "self", "mock_client_pywsman", ")", "namespace", "=", "resource_uris", "result_xml", "=", "test_utils", ",", "namespace", ")", "#NEWLINE#", "mock_doc", "=", "(", "result_xml", "mock_pywsman", "=", "mock_client_pywsman", ".", "Client", "mock_pywsman", "=", "mock_pywsman", "#NEWLINE#", "client", "self", ".", "info", ")", "#NEWLINE#", "client", "(", "namespace", "mock_pywsman", ".", "namespace", ")"]}}
{"position": {"error_location": 29, "repair_targets": [15], "repair_candidates": [8, 18, 28, 34, 3, 21, 2, 29, 15, 19, 24, 26, 37, 5, 12, 36, 39]}}
{"prediction": {"error_location": 0.8329116702079773, "repair_targets": [0.856423556804657], "repair_candidates": [0.0018535488052293658, 0.007491792552173138, 0.004433284979313612, 0.0028487290255725384, 0.0015357623342424631, 0.856423556804657, 0.003624618984758854, 0.0016347647178918123, 0.023290792480111122, 0.0008413615287281573, 0.003318627830594778, 0.046060286462306976, 0.02716316655278206, 0.0017097363015636802, 0.006292165257036686, 0.01135594304651022, 0.00012183892249595374], "target_probs": 0.856423556804657}}


{"result": {"time": "2021-02-21 06:40:48.055158", "n_pass": [207, 37, 22], "n_token": 40, "loss": [0.7761687636375427, 0.14917470514774323], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def test_wsman_get(", "self", "mock_client_pywsman", "namespace", "=", "resource_uris", "result_xml", "=", "test_utils", ",", "namespace", ")", "#NEWLINE#", "mock_doc", "=", "(", "result_xml", "mock_pywsman", "=", "mock_client_pywsman", ".", "Client", "mock_pywsman", "=", "mock_pywsman", "#NEWLINE#", "client", "self", ".", "info", ")", "#NEWLINE#", "client", "(", "namespace", "mock_pywsman", ".", "namespace", ")"]}}
{"position": {"error_location": 28, "repair_targets": [14], "repair_candidates": [7, 17, 27, 33, 3, 20, 2, 28, 14, 18, 23, 25, 36, 4, 11, 35, 38]}}
{"prediction": {"error_location": 0.4601655900478363, "repair_targets": [0.861418604850769], "repair_candidates": [0.003641105256974697, 0.0028251816984266043, 0.001212852424941957, 0.0011735495645552874, 0.0009162850910797715, 0.861418604850769, 0.002131869550794363, 0.0010722852312028408, 0.01782095432281494, 0.0006931412499397993, 0.0019026759546250105, 0.03521637246012688, 0.05638183653354645, 0.0018028876511380076, 0.0017075177747756243, 0.01000254601240158, 8.035239443415776e-05], "target_probs": 0.861418604850769}}


{"result": {"time": "2021-02-21 06:40:48.115206", "n_pass": [209, 38, 23], "n_token": 39, "loss": [0.432223379611969, 0.22389177978038788], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def test_wsman_get(", "self", "mock_client_pywsman", "namespace", "resource_uris", "result_xml", "=", "test_utils", ",", "namespace", ")", "#NEWLINE#", "mock_doc", "=", "(", "result_xml", "mock_pywsman", "=", "mock_client_pywsman", ".", "Client", "mock_pywsman", "=", "mock_pywsman", "#NEWLINE#", "client", "self", ".", "info", ")", "#NEWLINE#", "client", "(", "namespace", "mock_pywsman", ".", "namespace", ")"]}}
{"position": {"error_location": 27, "repair_targets": [13], "repair_candidates": [6, 16, 26, 32, 3, 19, 2, 27, 13, 17, 22, 24, 35, 4, 10, 34, 37]}}
{"prediction": {"error_location": 0.649064302444458, "repair_targets": [0.7994016408920288], "repair_candidates": [0.009913305751979351, 0.004987635649740696, 0.0014195924159139395, 0.0016000248724594712, 0.002235719934105873, 0.7994016408920288, 0.008752821944653988, 0.002783931326121092, 0.025773800909519196, 0.0008884593844413757, 0.0036715648602694273, 0.050603948533535004, 0.06049483269453049, 0.00449798908084631, 0.007838941179215908, 0.015002231113612652, 0.0001335041888523847], "target_probs": 0.7994016408920288}}


{"result": {"time": "2021-02-21 06:40:48.172483", "n_pass": [210, 39, 24], "n_token": 38, "loss": [0.31482866406440735, 0.0823923870921135], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def test_wsman_get(", "self", "mock_client_pywsman", "namespace", "result_xml", "=", "test_utils", ",", "namespace", ")", "#NEWLINE#", "mock_doc", "=", "(", "result_xml", "mock_pywsman", "=", "mock_client_pywsman", ".", "Client", "mock_pywsman", "=", "mock_pywsman", "#NEWLINE#", "client", "self", ".", "info", ")", "#NEWLINE#", "client", "(", "namespace", "mock_pywsman", ".", "namespace", ")"]}}
{"position": {"error_location": 26, "repair_targets": [12], "repair_candidates": [5, 15, 25, 31, 3, 18, 2, 26, 12, 16, 21, 23, 34, 4, 9, 33, 36]}}
{"prediction": {"error_location": 0.7299140095710754, "repair_targets": [0.9209105372428894], "repair_candidates": [0.002053278498351574, 0.0060598901472985744, 0.0030551147647202015, 0.001162832137197256, 0.0010620665270835161, 0.9209105372428894, 0.0009337580413557589, 0.0008211195236071944, 0.009713423438370228, 0.0003227267588954419, 0.0009888174245133996, 0.023846495896577835, 0.020591137930750847, 0.002609193790704012, 0.002268693409860134, 0.003525014268234372, 7.586755964439362e-05], "target_probs": 0.9209105372428894}}


{"result": {"time": "2021-02-21 06:40:48.228967", "n_pass": [212, 40, 25], "n_token": 37, "loss": [0.22563602030277252, 0.12039965391159058], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def test_wsman_get(", "self", "mock_client_pywsman", "namespace", "result_xml", "test_utils", ",", "namespace", ")", "#NEWLINE#", "mock_doc", "=", "(", "result_xml", "mock_pywsman", "=", "mock_client_pywsman", ".", "Client", "mock_pywsman", "=", "mock_pywsman", "#NEWLINE#", "client", "self", ".", "info", ")", "#NEWLINE#", "client", "(", "namespace", "mock_pywsman", ".", "namespace", ")"]}}
{"position": {"error_location": 25, "repair_targets": [11], "repair_candidates": [5, 14, 24, 30, 3, 17, 2, 25, 11, 15, 20, 22, 33, 4, 8, 32, 35]}}
{"prediction": {"error_location": 0.7980085015296936, "repair_targets": [0.8865660429000854], "repair_candidates": [0.005778341554105282, 0.005129004828631878, 0.0006675880285911262, 0.0039893887005746365, 0.0031648464500904083, 0.8865660429000854, 0.0215842816978693, 0.0013499603373929858, 0.013952876441180706, 0.0005504870787262917, 0.0014372507575899363, 0.02584073506295681, 0.02041594497859478, 0.002724659163504839, 0.004254776053130627, 0.0024671931751072407, 0.0001266093022422865], "target_probs": 0.8865660429000854}}


{"result": {"time": "2021-02-21 06:40:48.286205", "n_pass": [213, 41, 26], "n_token": 36, "loss": [0.46772611141204834, 0.1214345395565033], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def test_wsman_get(", "self", "mock_client_pywsman", "namespace", "result_xml", ",", "namespace", ")", "#NEWLINE#", "mock_doc", "=", "(", "result_xml", "mock_pywsman", "=", "mock_client_pywsman", ".", "Client", "mock_pywsman", "=", "mock_pywsman", "#NEWLINE#", "client", "self", ".", "info", ")", "#NEWLINE#", "client", "(", "namespace", "mock_pywsman", ".", "namespace", ")"]}}
{"position": {"error_location": 24, "repair_targets": [10], "repair_candidates": [5, 13, 23, 29, 3, 16, 2, 24, 10, 14, 19, 21, 32, 4, 7, 31, 34]}}
{"prediction": {"error_location": 0.6264251470565796, "repair_targets": [0.8856490254402161], "repair_candidates": [0.0056030224077403545, 0.007250024005770683, 0.0003438284038566053, 0.0025810219813138247, 0.005303896963596344, 0.8856490254402161, 0.002489518839865923, 0.00264275586232543, 0.016116144135594368, 0.0008039411040954292, 0.0013122532982379198, 0.03456348180770874, 0.02961892820894718, 0.001795741030946374, 0.0015403119614347816, 0.002210726495832205, 0.00017543879221193492], "target_probs": 0.8856490254402161}}


{"result": {"time": "2021-02-21 06:40:48.342816", "n_pass": [214, 42, 27], "n_token": 35, "loss": [0.23981554806232452, 0.10245935618877411], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def test_wsman_get(", "self", "mock_client_pywsman", "namespace", "result_xml", "namespace", ")", "#NEWLINE#", "mock_doc", "=", "(", "result_xml", "mock_pywsman", "=", "mock_client_pywsman", ".", "Client", "mock_pywsman", "=", "mock_pywsman", "#NEWLINE#", "client", "self", ".", "info", ")", "#NEWLINE#", "client", "(", "namespace", "mock_pywsman", ".", "namespace", ")"]}}
{"position": {"error_location": 23, "repair_targets": [9], "repair_candidates": [5, 12, 22, 28, 3, 15, 2, 23, 9, 13, 18, 20, 31, 4, 6, 30, 33]}}
{"prediction": {"error_location": 0.7867729663848877, "repair_targets": [0.9026148319244385], "repair_candidates": [0.00511594582349062, 0.0035337868612259626, 8.876926585799083e-05, 0.0013720927527174354, 0.0024643586948513985, 0.9026148319244385, 0.020426152274012566, 0.0015895150136202574, 0.009571924805641174, 0.00042908370960503817, 0.0011654725531116128, 0.025495104491710663, 0.022995876148343086, 0.0009320429526269436, 0.0007409582613036036, 0.0013761649606749415, 8.7826992967166e-05], "target_probs": 0.9026148319244385}}


{"result": {"time": "2021-02-21 06:40:48.399709", "n_pass": [216, 43, 28], "n_token": 34, "loss": [0.2358279824256897, 0.10105346143245697], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def test_wsman_get(", "self", "mock_client_pywsman", "namespace", "result_xml", "namespace", "#NEWLINE#", "mock_doc", "=", "(", "result_xml", "mock_pywsman", "=", "mock_client_pywsman", ".", "Client", "mock_pywsman", "=", "mock_pywsman", "#NEWLINE#", "client", "self", ".", "info", ")", "#NEWLINE#", "client", "(", "namespace", "mock_pywsman", ".", "namespace", ")"]}}
{"position": {"error_location": 22, "repair_targets": [8], "repair_candidates": [5, 11, 21, 27, 3, 14, 2, 22, 8, 12, 17, 19, 30, 4, 6, 29, 32]}}
{"prediction": {"error_location": 0.7899166345596313, "repair_targets": [0.9038847088813782], "repair_candidates": [0.004805414937436581, 0.002354899188503623, 0.0005323021323420107, 0.004179310519248247, 0.0022595736663788557, 0.9038847088813782, 0.01655064895749092, 0.0020183075685054064, 0.012237404473125935, 0.0004778654547408223, 0.0015175261069089174, 0.023300660774111748, 0.022954057902097702, 0.000861935259308666, 0.0009193650912493467, 0.0010323774768039584, 0.00011367773549864069], "target_probs": 0.9038847088813782}}


{"result": {"time": "2021-02-21 06:40:48.572028", "n_pass": [220, 46, 29], "n_token": 33, "loss": [0.5523455142974854, 0.21515165269374847], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def test_wsman_get(", "self", "mock_client_pywsman", "namespace", "result_xml", "namespace", "#NEWLINE#", "mock_doc", "=", "result_xml", "mock_pywsman", "=", "mock_client_pywsman", ".", "Client", "mock_pywsman", "=", "mock_pywsman", "#NEWLINE#", "client", "self", ".", "info", ")", "#NEWLINE#", "client", "(", "namespace", "mock_pywsman", ".", "namespace", ")"]}}
{"position": {"error_location": 21, "repair_targets": [8], "repair_candidates": [5, 10, 20, 26, 3, 13, 2, 21, 8, 11, 16, 18, 29, 4, 6, 28, 31]}}
{"prediction": {"error_location": 0.5755981802940369, "repair_targets": [0.8064191341400146], "repair_candidates": [0.008999078534543514, 0.008953608572483063, 0.0015021050348877907, 0.005051244515925646, 0.002525416435673833, 0.8064191341400146, 0.04208230599761009, 0.0031097950413823128, 0.016078047454357147, 0.0005325807724148035, 0.0020362844225019217, 0.02661648765206337, 0.0720759928226471, 0.0007223986904136837, 0.0003760104300454259, 0.002786940196529031, 0.00013257945829536766], "target_probs": 0.8064191341400146}}


{"result": {"time": "2021-02-21 06:40:48.628905", "n_pass": [228, 47, 30], "n_token": 31, "loss": [0.4012260437011719, 0.12640395760536194], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def test_wsman_get(", "self", "mock_client_pywsman", "namespace", "result_xml", "namespace", "#NEWLINE#", "mock_doc", "=", "result_xml", "mock_pywsman", "=", "mock_client_pywsman", ".", "Client", "mock_pywsman", "=", "mock_pywsman", "#NEWLINE#", "client", "self", ".", "#NEWLINE#", "client", "(", "namespace", "mock_pywsman", ".", "namespace", ")"]}}
{"position": {"error_location": 21, "repair_targets": [8], "repair_candidates": [5, 10, 20, 24, 3, 13, 2, 21, 8, 11, 16, 18, 27, 4, 6, 26, 29]}}
{"prediction": {"error_location": 0.6694987416267395, "repair_targets": [0.8812587857246399], "repair_candidates": [0.004733594134449959, 0.004883361514657736, 0.0009318538359366357, 0.005435633938759565, 0.0011352302972227335, 0.8812587857246399, 0.05645757541060448, 0.0018172903219237924, 0.016806067898869514, 0.0006684837862849236, 0.0012374691432341933, 0.010065432637929916, 0.012607850134372711, 0.0011214604601264, 0.0001543069665785879, 0.0004285666800569743, 0.00025711319176480174], "target_probs": 0.8812587857246399}}


{"result": {"time": "2021-02-21 06:40:48.914833", "n_pass": [270, 52, 31], "n_token": 30, "loss": [0.007962627336382866, 0.1487983614206314], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def test_wsman_get(", "self", "mock_client_pywsman", "namespace", "result_xml", "namespace", "#NEWLINE#", "mock_doc", "=", "result_xml", "mock_pywsman", "=", "mock_client_pywsman", ".", "Client", "mock_pywsman", "=", "mock_pywsman", "#NEWLINE#", "client", "self", ".", "#NEWLINE#", "client", "namespace", "mock_pywsman", ".", "namespace", ")"]}}
{"position": {"error_location": 21, "repair_targets": [8], "repair_candidates": [5, 10, 20, 24, 3, 13, 2, 21, 8, 11, 16, 18, 26, 4, 6, 25, 28]}}
{"prediction": {"error_location": 0.9920690059661865, "repair_targets": [0.8617428541183472], "repair_candidates": [3.2771946280263364e-05, 0.006119777914136648, 0.0016991505399346352, 0.0009326498256996274, 0.0019966515246778727, 0.8617428541183472, 0.10270724445581436, 0.0019672198686748743, 0.008856154978275299, 0.0013444932410493493, 0.002023360226303339, 0.004679949022829533, 9.29223187995376e-06, 0.00410398980602622, 0.0002544608141761273, 0.0010267667239531875, 0.0005032566259615123], "target_probs": 0.8617428541183472}}


{"result": {"time": "2021-02-21 06:40:48.971937", "n_pass": [272, 53, 32], "n_token": 29, "loss": [0.4095959961414337, 0.07597611844539642], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def test_wsman_get(", "self", "mock_client_pywsman", "namespace", "result_xml", "namespace", "#NEWLINE#", "mock_doc", "=", "result_xml", "mock_pywsman", "=", "mock_client_pywsman", ".", "Client", "mock_pywsman", "=", "mock_pywsman", "#NEWLINE#", "client", "self", ".", "#NEWLINE#", "client", "namespace", "mock_pywsman", "namespace", ")"]}}
{"position": {"error_location": 21, "repair_targets": [8], "repair_candidates": [5, 10, 20, 24, 3, 13, 2, 21, 8, 11, 16, 18, 26, 4, 6, 25, 27]}}
{"prediction": {"error_location": 0.6639184951782227, "repair_targets": [0.9268383383750916], "repair_candidates": [2.6439787689014338e-05, 0.00549327302724123, 0.0003346218727529049, 0.0011942273704335093, 0.0005137449479661882, 0.9268383383750916, 0.03708035498857498, 0.0015924921026453376, 0.002804839750751853, 0.0017043269472196698, 0.00038458933704532683, 0.010876401327550411, 0.0001904856035253033, 0.0077791051007807255, 0.0008725646766833961, 0.0021256913896650076, 0.0001884966914076358], "target_probs": 0.9268383383750916}}


{"result": {"time": "2021-02-21 06:40:49.029215", "n_pass": [274, 54, 33], "n_token": 28, "loss": [0.005043166223913431, 0.10037026554346085], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def test_wsman_get(", "self", "mock_client_pywsman", "namespace", "result_xml", "namespace", "#NEWLINE#", "mock_doc", "=", "result_xml", "mock_pywsman", "=", "mock_client_pywsman", ".", "Client", "mock_pywsman", "=", "mock_pywsman", "#NEWLINE#", "client", "self", ".", "#NEWLINE#", "client", "namespace", "mock_pywsman", "namespace"]}}
{"position": {"error_location": 21, "repair_targets": [8], "repair_candidates": [5, 10, 20, 24, 3, 13, 2, 21, 8, 11, 16, 18, 26, 4, 6, 25, 27]}}
{"prediction": {"error_location": 0.9949695467948914, "repair_targets": [0.9045024514198303], "repair_candidates": [6.3627026065660175e-06, 0.0027338843792676926, 0.0005490033072419465, 0.0010776871349662542, 0.0010857945308089256, 0.9045024514198303, 0.0755721852183342, 0.001007439917884767, 0.001547413063235581, 0.000492377788759768, 0.00015163548232521862, 0.0019465695368126035, 1.3643328202306293e-05, 0.003323889570310712, 0.0027438453398644924, 0.00046160753117874265, 0.00278419628739357], "target_probs": 0.9045024514198303}}


{"result": {"time": "2021-02-21 06:40:49.314298", "n_pass": [287, 59, 34], "n_token": 27, "loss": [0.0037656365893781185, 0.08904676884412766], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def test_wsman_get(", "self", "mock_client_pywsman", "namespace", "result_xml", "namespace", "#NEWLINE#", "mock_doc", "=", "result_xml", "mock_pywsman", "mock_client_pywsman", ".", "Client", "mock_pywsman", "=", "mock_pywsman", "#NEWLINE#", "client", "self", ".", "#NEWLINE#", "client", "namespace", "mock_pywsman", "namespace"]}}
{"position": {"error_location": 20, "repair_targets": [8], "repair_candidates": [5, 10, 19, 23, 3, 12, 2, 20, 8, 11, 15, 17, 25, 4, 6, 24, 26]}}
{"prediction": {"error_location": 0.9962414503097534, "repair_targets": [0.9148027896881104], "repair_candidates": [1.15443817776395e-05, 0.0024703536182641983, 0.0002530716883484274, 0.0010272831423208117, 0.000747350393794477, 0.9148027896881104, 0.06358445435762405, 0.0001408158423146233, 0.0033450350165367126, 0.0004634020442608744, 0.00030236534075811505, 0.003180749947205186, 1.3899629266234115e-05, 0.004639709834009409, 0.0018177857855334878, 0.0006438313284888864, 0.002555601764470339], "target_probs": 0.9148027896881104}}


{"result": {"time": "2021-02-21 06:40:49.370683", "n_pass": [289, 60, 35], "n_token": 26, "loss": [0.010196381248533726, 0.07565443217754364], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def test_wsman_get(", "self", "mock_client_pywsman", "namespace", "result_xml", "namespace", "#NEWLINE#", "mock_doc", "=", "result_xml", "mock_pywsman", "mock_client_pywsman", "Client", "mock_pywsman", "=", "mock_pywsman", "#NEWLINE#", "client", "self", ".", "#NEWLINE#", "client", "namespace", "mock_pywsman", "namespace"]}}
{"position": {"error_location": 19, "repair_targets": [8], "repair_candidates": [5, 10, 18, 22, 3, 12, 2, 19, 8, 11, 14, 16, 24, 4, 6, 23, 25]}}
{"prediction": {"error_location": 0.9898554086685181, "repair_targets": [0.9271365404129028], "repair_candidates": [4.084228930878453e-05, 0.0008627175120636821, 0.00018732492753770202, 0.0006256455089896917, 0.0006124985520727932, 0.9271365404129028, 0.056455615907907486, 0.0010877642780542374, 0.0029295606072992086, 0.00028682162519544363, 0.0005529585760086775, 0.002411195309832692, 0.00010804295015987009, 0.0023030703887343407, 0.0014033421175554395, 0.0008578949491493404, 0.0021381236147135496], "target_probs": 0.9271365404129028}}


{"result": {"time": "2021-02-21 06:40:49.429541", "n_pass": [290, 61, 36], "n_token": 25, "loss": [0.03510879725217819, 0.15794849395751953], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def test_wsman_get(", "self", "mock_client_pywsman", "namespace", "result_xml", "namespace", "#NEWLINE#", "mock_doc", "=", "result_xml", "mock_pywsman", "mock_client_pywsman", "mock_pywsman", "=", "mock_pywsman", "#NEWLINE#", "client", "self", ".", "#NEWLINE#", "client", "namespace", "mock_pywsman", "namespace"]}}
{"position": {"error_location": 18, "repair_targets": [8], "repair_candidates": [5, 10, 17, 21, 3, 12, 2, 18, 8, 11, 13, 15, 23, 4, 6, 22, 24]}}
{"prediction": {"error_location": 0.9655004739761353, "repair_targets": [0.8538937568664551], "repair_candidates": [3.971708792960271e-05, 0.0018576871370896697, 0.00023545548901893198, 0.0009189621196128428, 0.0007030337583273649, 0.8538937568664551, 0.09064117819070816, 0.0008603886235505342, 0.03214859962463379, 0.0007816196302883327, 0.00129369692876935, 0.007316120434552431, 0.00018899471615441144, 0.005571328569203615, 0.0010031783021986485, 0.0013798122527077794, 0.0011663330951705575], "target_probs": 0.8538937568664551}}


{"result": {"time": "2021-02-21 06:40:49.485924", "n_pass": [292, 62, 37], "n_token": 24, "loss": [0.028059201315045357, 0.22142393887043], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def test_wsman_get(", "self", "mock_client_pywsman", "namespace", "result_xml", "namespace", "#NEWLINE#", "mock_doc", "=", "result_xml", "mock_pywsman", "mock_client_pywsman", "mock_pywsman", "mock_pywsman", "#NEWLINE#", "client", "self", ".", "#NEWLINE#", "client", "namespace", "mock_pywsman", "namespace"]}}
{"position": {"error_location": 17, "repair_targets": [8], "repair_candidates": [5, 10, 16, 20, 3, 12, 2, 17, 8, 11, 13, 14, 22, 4, 6, 21, 23]}}
{"prediction": {"error_location": 0.9723310470581055, "repair_targets": [0.8013768792152405], "repair_candidates": [0.00025436386931687593, 0.0023848721757531166, 0.0005980998976156116, 0.0028180028311908245, 0.0010240096598863602, 0.8013768792152405, 0.14389479160308838, 0.004311638884246349, 0.004426167346537113, 0.008370794355869293, 0.008525089360773563, 0.007909350097179413, 0.00014189475041348487, 0.00788788590580225, 0.0012201330391690135, 0.004763504955917597, 9.243215754395351e-05], "target_probs": 0.8013768792152405}}


{"result": {"time": "2021-02-21 06:40:49.599466", "n_pass": [297, 64, 38], "n_token": 23, "loss": [0.14825892448425293, 0.5100301504135132], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def test_wsman_get(", "self", "mock_client_pywsman", "namespace", "result_xml", "namespace", "#NEWLINE#", "mock_doc", "=", "result_xml", "mock_pywsman", "mock_client_pywsman", "mock_pywsman", "mock_pywsman", "#NEWLINE#", "client", "self", "#NEWLINE#", "client", "namespace", "mock_pywsman", "namespace"]}}
{"position": {"error_location": 17, "repair_targets": [8], "repair_candidates": [5, 10, 16, 19, 3, 12, 2, 17, 8, 11, 13, 14, 21, 4, 6, 20, 22]}}
{"prediction": {"error_location": 0.86220782995224, "repair_targets": [0.6004774570465088], "repair_candidates": [0.0003830891801044345, 0.006930471397936344, 0.002371458802372217, 0.02199508063495159, 0.0029845302924513817, 0.6004774570465088, 0.266362726688385, 0.004086202941834927, 0.005093032028526068, 0.01168343797326088, 0.012536627240478992, 0.022942351177334785, 0.00032735057175159454, 0.031574975699186325, 0.007306631654500961, 0.0027618822641670704, 0.00018267708946950734], "target_probs": 0.6004774570465088}}


{"result": {"time": "2021-02-21 06:40:49.656484", "n_pass": [298, 65, 39], "n_token": 22, "loss": [0.17374657094478607, 0.2654018998146057], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def test_wsman_get(", "self", "mock_client_pywsman", "namespace", "result_xml", "namespace", "#NEWLINE#", "mock_doc", "=", "result_xml", "mock_pywsman", "mock_client_pywsman", "mock_pywsman", "mock_pywsman", "#NEWLINE#", "client", "self", "client", "namespace", "mock_pywsman", "namespace"]}}
{"position": {"error_location": 17, "repair_targets": [8], "repair_candidates": [5, 10, 16, 18, 3, 12, 2, 17, 8, 11, 13, 14, 20, 4, 6, 19, 21]}}
{"prediction": {"error_location": 0.8405099511146545, "repair_targets": [0.7668976783752441], "repair_candidates": [0.0005173778044991195, 0.0014351162826642394, 0.0009909311775118113, 0.0025629366282373667, 0.0012655023019760847, 0.7668976783752441, 0.16235259175300598, 0.006626589223742485, 0.0029173498041927814, 0.024437448009848595, 0.012115858495235443, 0.008990373462438583, 0.0006932331016287208, 0.004517745226621628, 0.00038704078178852797, 0.0003907684003934264, 0.002901592757552862], "target_probs": 0.7668976783752441}}


{"result": {"time": "2021-02-21 06:40:49.713190", "n_pass": [303, 66, 40], "n_token": 21, "loss": [0.8610069751739502, 0.4621061384677887], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["def test_wsman_get(", "self", "mock_client_pywsman", "namespace", "result_xml", "namespace", "#NEWLINE#", "mock_doc", "=", "result_xml", "mock_pywsman", "mock_client_pywsman", "mock_pywsman", "mock_pywsman", "#NEWLINE#", "client", "self", "client", "namespace", "mock_pywsman", "namespace"]}}
{"position": {"error_location": 16, "repair_targets": [7], "repair_candidates": [4, 9, 15, 17, 2, 11, 1, 16, 7, 10, 12, 13, 19, 3, 5, 18, 20]}}
{"prediction": {"error_location": 0.42273616790771484, "repair_targets": [0.6299554705619812], "repair_candidates": [0.004217292182147503, 0.00042807721183635294, 0.015471097081899643, 0.03714574873447418, 0.012163953855633736, 0.6299554705619812, 0.2928750813007355, 0.0009296327480114996, 0.00011265835928497836, 0.0002329318376723677, 0.0008745668455958366, 0.0009275383781641722, 0.0016570063307881355, 0.0009312627953477204, 0.0004915738245472312, 8.05179079179652e-05, 0.001505597960203886], "target_probs": 0.6299554705619812}}




Minimal simplified tokens:

['def test_wsman_get(', 'self', 'mock_client_pywsman', 'namespace', 'result_xml', 'namespace', '#NEWLINE#', 'mock_doc', '=', 'result_xml', 'mock_pywsman', 'mock_client_pywsman', 'mock_pywsman', 'mock_pywsman', '#NEWLINE#', 'client', 'self', 'client', 'namespace', 'mock_pywsman', 'namespace']
