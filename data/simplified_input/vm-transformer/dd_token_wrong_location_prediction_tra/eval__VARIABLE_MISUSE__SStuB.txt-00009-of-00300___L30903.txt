
Original sample:

{"has_bug": true, "bug_kind": 1, "bug_kind_name": "VARIABLE_MISUSE", "source_tokens": ["#NEWLINE#", "def plot_ibound(", "self", ",", "ibound", "=", "None", ",", "color_noflow", "=", "'black'", ",", "color_ch", "=", "'blue'", ",", "**kwargs", ")", ":", "#NEWLINE#", "#INDENT#", "\"\\n        Make a plot of ibound.  If not specified, then pull ibound from the\\n        self.ml\\n\\n        Parameters\\n        ----------\\n        ibound : numpy.ndarray\\n            ibound array to plot.  (Default is ibound in 'BAS6' package.)\\n        color_noflow : string\\n            (Default is 'black')\\n        color_ch : string\\n            Color for constant heads (Default is 'blue'.)\\n\\n        Returns\\n        -------\\n        quadmesh : matplotlib.collections.QuadMesh\\n\\n        \"", "#NEWLINE#", "if", "(", "'ax'", "in", "kwargs", ")", ":", "#NEWLINE#", "#INDENT#", "ax", "=", "kwargs", ".", "pop", "(", "'ax'", ")", "#NEWLINE#", "#UNINDENT#", "else", ":", "#NEWLINE#", "#INDENT#", "ax", "=", "self", ".", "ax", "#NEWLINE#", "#UNINDENT#", "if", "(", "ibound", "is", "None", ")", ":", "#NEWLINE#", "#INDENT#", "bas", "=", "self", ".", "model", ".", "get_package", "(", "'BAS6'", ")", "#NEWLINE#", "ibound", "=", "bas", ".", "ibound", ".", "array", "#NEWLINE#", "#UNINDENT#", "plotarray", "=", "np", ".", "zeros", "(", "ibound", ".", "shape", ",", "dtype", "=", "np", ".", "int", ")", "#NEWLINE#", "idx1", "=", "(", "ibound", "==", "0", ")", "#NEWLINE#", "idx2", "=", "(", "ibound", "<", "0", ")", "#NEWLINE#", "plotarray", "[", "idx1", "]", "=", "1", "#NEWLINE#", "plotarray", "[", "idx2", "]", "=", "2", "#NEWLINE#", "plotarray", "=", "np", ".", "ma", ".", "masked_equal", "(", "plotarray", ",", "0", ")", "#NEWLINE#", "cmap", "=", "matplotlib", ".", "colors", ".", "ListedColormap", "(", "[", "'0'", ",", "color_noflow", ",", "color_ch", "]", ")", "#NEWLINE#", "bounds", "=", "[", "0", ",", "1", ",", "2", ",", "3", "]", "#NEWLINE#", "norm", "=", "matplotlib", ".", "colors", ".", "BoundaryNorm", "(", "bounds", ",", "cmap", ".", "N", ")", "#NEWLINE#", "quadmesh", "=", "self", ".", "plot_array", "(", "plotarray", ",", "cmap", "=", "cmap", ",", "norm", "=", "cmap", ",", "**", "kwargs", ")", "#NEWLINE#", "return", "quadmesh"], "error_location": [200], "repair_targets": [171, 198], "repair_candidates": [142, 181, 194, 196, 200, 99, 117, 159, 179, 12, 155, 62, 75, 107, 124, 4, 55, 73, 77, 88, 102, 110, 186, 207, 2, 48, 64, 188, 171, 198, 32, 46, 50, 8, 153, 27, 34, 203, 82, 115, 122, 129, 137, 192], "provenances": [{"datasetProvenance": {"datasetName": "ETHPy150Open", "filepath": "modflowpy/flopy/flopy/plot/map.py", "license": "bsd-3-clause", "note": "license: manual_eval"}}], "txt_file": "eval__VARIABLE_MISUSE__SStuB.txt-00009-of-00300", "js_count": 30903, "results": {"model": "transformer", "prob": {"loc": [[0.0361621156334877, 2.8125438689130533e-07, 1.1360268814541996e-07, 4.66503147222852e-09, 4.083389057996101e-07, 6.649825134985576e-09, 3.798898973172982e-09, 3.056882080798573e-09, 1.1739263072740869e-07, 2.7303439509296368e-08, 4.7464826025134244e-07, 3.157264449882291e-09, 2.3295136486467527e-07, 3.6139393699841094e-08, 3.801417847171251e-07, 5.879833508970478e-09, 1.474170744586445e-06, 7.710077909450774e-09, 1.0035642539207856e-08, 1.2234912638575679e-08, 9.575674475570395e-09, 2.3080909627992696e-08, 1.0412175122098688e-08, 1.796525062047749e-08, 1.231796176170974e-07, 9.762183026396087e-07, 6.066662194825767e-08, 0.00277251610532403, 1.7796804030467683e-08, 3.105141388459742e-08, 1.793344495126803e-08, 1.0212382939300824e-08, 1.7102742333463539e-07, 1.3714114288632118e-08, 1.5200082259525516e-07, 1.0091229185604789e-08, 5.205417608067364e-08, 2.712474156396638e-07, 8.521185463905567e-07, 3.5191366265507895e-08, 1.9605034040637292e-08, 1.0869676714264642e-08, 2.372951257711975e-08, 1.329207410805111e-08, 1.4774288459307172e-08, 9.213580121070208e-09, 1.0194959543241566e-07, 5.748931997118234e-09, 0.00026831275317817926, 1.797793380831081e-08, 1.7057141477039295e-08, 2.4427636802215602e-08, 1.5383530893586794e-08, 1.914723135598706e-08, 2.2862275628199313e-08, 0.00016686184972058982, 2.353736476834456e-07, 4.984420698406211e-08, 3.853958574495664e-08, 4.0478290941337036e-08, 1.7215008085713635e-08, 1.2589389086770097e-08, 3.4781490398927417e-07, 1.9623517033551252e-08, 6.652521165051439e-07, 1.8447952498945597e-08, 1.6332448282696532e-08, 1.8943083546218986e-08, 2.0385698462632718e-08, 2.566823695815401e-07, 5.673437613040733e-07, 4.867271385933236e-08, 1.7583191791459285e-08, 6.411617619050958e-07, 1.284401029977289e-08, 9.231788135366514e-05, 3.1498260000262235e-08, 5.091363277642813e-07, 7.63795853231386e-08, 4.3296687124438904e-08, 3.048732111210484e-08, 2.7725473472628437e-08, 4.9042345295902123e-08, 9.50025036416946e-09, 3.443889795562427e-08, 3.338530873975287e-08, 1.566954033194179e-08, 7.186408623738316e-08, 0.0011591393267735839, 9.480054785626635e-08, 2.534651777352792e-08, 4.3999822452178705e-08, 2.2372631065081805e-05, 1.0508165360079147e-07, 1.9050207811233122e-06, 6.682543585156964e-08, 1.8766981213502731e-07, 5.526271351641299e-08, 5.8810307734802336e-08, 3.6987609064453864e-07, 1.6556393589439722e-08, 5.576858796985107e-08, 0.0021656202152371407, 5.330679897497248e-08, 2.887607706725248e-06, 7.013358072072151e-08, 5.240818268248404e-08, 7.238204489112832e-07, 1.4569113027107505e-08, 7.536198154411977e-08, 0.005613965447992086, 9.499440523086378e-08, 2.6068462375405943e-06, 1.8544220381500054e-07, 6.951509590180649e-08, 2.1477252687418513e-07, 1.2635391044568678e-07, 2.4379802198382095e-05, 1.0195508437504941e-08, 1.5782147499976418e-07, 3.856918738165405e-06, 3.746387022829367e-08, 5.136861886967381e-07, 7.322251605046404e-08, 9.616037459636573e-06, 1.231493662601224e-08, 3.545696003470766e-08, 2.193195541622117e-05, 2.627188777637457e-08, 1.7473259106282057e-07, 4.223858240948175e-08, 1.7954212694348826e-07, 2.2302703683863e-08, 6.845410904787741e-09, 3.241609292103931e-08, 4.80413824277548e-08, 9.512168475112048e-08, 3.5476830817060545e-05, 4.57409292664579e-08, 2.0307337763370015e-05, 1.7154508213934605e-07, 4.3637765401172146e-08, 3.6690147453555255e-07, 7.68846533105716e-08, 5.277789114188636e-06, 2.153627143286485e-08, 7.588546679926367e-09, 4.019056731863202e-08, 8.70630412208584e-09, 1.067801207454977e-07, 8.476752100250451e-07, 3.811477290582843e-05, 1.1391134080440679e-07, 0.0002462691627442837, 7.15182011390425e-08, 0.012519028037786484, 8.535959494793133e-08, 4.889414526587643e-07, 4.343995385625021e-08, 5.636850914925162e-07, 4.3885584943836875e-08, 5.146981493453495e-06, 4.524279574980028e-06, 9.939864042962654e-08, 3.8137459341669455e-05, 7.617168762408255e-08, 6.420839781640097e-05, 7.078988772946104e-08, 0.05343300849199295, 1.6210566400332027e-07, 7.864144180302901e-08, 8.679739949002396e-06, 3.349028787624775e-08, 2.850371458862355e-07, 4.197787717430401e-08, 2.0276798018414866e-09, 4.003540610142409e-08, 2.38945165875748e-08, 1.8801431167503324e-07, 0.0001496487093390897, 2.876741120871884e-07, 0.3971080780029297, 3.8447461747637135e-07, 3.759429034744244e-08, 6.390429234670592e-07, 1.3889469130390353e-07, 4.365970653452678e-06, 1.7952208963833982e-07, 2.7736980428016977e-06, 2.877878202411921e-08, 4.011490162270093e-08, 4.92682772801345e-07, 0.015305638313293457, 2.133748751020903e-07, 2.4882056095520966e-06, 7.67115466260293e-07, 0.07166234403848648, 2.1107892678173812e-07, 9.69672214523598e-07, 1.2890911875729216e-06, 0.38351160287857056, 1.9997203253296902e-06, 1.236921093550336e-06, 0.004550761077553034, 9.950629646482412e-06, 7.538733370893169e-07, 8.480051292281132e-07, 0.012753975577652454]], "pointer": [[0.0, 0.0, 0.001702578621916473, 0.0, 0.0006739800446666777, 0.0, 0.0, 0.0, 0.0002555172541178763, 0.0, 0.0, 0.0, 0.00029925486887805164, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.00011015115887857974, 0.0, 0.0, 0.0, 0.0, 0.0001744677865644917, 0.0, 0.00023631799558643252, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.00017822079826146364, 0.0, 0.001799481688067317, 0.0, 7.8314615166164e-06, 0.0, 0.0, 0.0, 0.0, 4.344315129856113e-06, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0003715400816872716, 0.0, 0.00029900940717197955, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.00017534868675284088, 0.0, 0.00039885431760922074, 0.0, 9.11967163119698e-06, 0.0, 0.0, 0.0, 0.0, 0.0004915262688882649, 0.0, 0.0, 0.0, 0.0, 0.0, 4.294085010769777e-05, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0005703109782189131, 0.0, 0.0, 1.2316747870499967e-06, 0.0, 0.0, 0.0, 0.0, 0.0006866000476293266, 0.0, 0.0, 1.448031071049627e-06, 0.0, 0.0, 0.0, 0.0, 6.862013833597302e-05, 0.0, 1.4107747574598761e-06, 0.0, 0.0, 0.0, 0.0, 7.630696927662939e-05, 0.0, 2.265078819618793e-06, 0.0, 0.0, 0.0, 0.0, 0.0005137614207342267, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 6.875124199723359e-06, 0.0, 0.0, 0.0, 0.0, 0.0002071089984383434, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 7.12039036443457e-05, 0.0, 1.129319025494624e-05, 0.0, 0.0, 0.0, 0.000236225183471106, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.14562533795833588, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 2.959018956971704e-06, 0.0, 1.9910647097276524e-05, 0.0, 0.0, 0.0, 0.0, 0.00011028707376681268, 0.0, 0.000341572129400447, 0.0, 0.0, 0.0, 1.4935206991140149e-06, 0.0, 1.474398573009239e-06, 0.0, 3.0459145250461006e-07, 0.0, 0.8439359664916992, 0.0, 6.944165420463833e-07, 0.0, 0.0, 0.0002674798888619989, 0.0, 0.0, 0.0, 7.417706001433544e-06]], "target": [0.9895613193511963]}, "loss": [0.9583854675292969, 0.010493545792996883], "acc": [0.0, 0.0, 1.0, 0.0]}, "wrong_error_location": [181]}


Trace of simplified code(s):

{"result": {"time": "2021-02-21 06:41:22.573368", "n_pass": [1, 1, 1], "n_token": 208, "loss": [0.9235467910766602, 0.010493545792996883], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def plot_ibound(", "self", ",", "ibound", "=", "None", ",", "color_noflow", "=", "'black'", ",", "color_ch", "=", "'blue'", ",", "**kwargs", ")", ":", "#NEWLINE#", "#INDENT#", "\"\\n        Make a plot of ibound.  If not specified, then pull ibound from the\\n        self.ml\\n\\n        Parameters\\n        ----------\\n        ibound : numpy.ndarray\\n            ibound array to plot.  (Default is ibound in 'BAS6' package.)\\n        color_noflow : string\\n            (Default is 'black')\\n        color_ch : string\\n            Color for constant heads (Default is 'blue'.)\\n\\n        Returns\\n        -------\\n        quadmesh : matplotlib.collections.QuadMesh\\n\\n        \"", "#NEWLINE#", "if", "(", "'ax'", "in", "kwargs", ")", ":", "#NEWLINE#", "#INDENT#", "ax", "=", "kwargs", ".", "pop", "(", "'ax'", ")", "#NEWLINE#", "#UNINDENT#", "else", ":", "#NEWLINE#", "#INDENT#", "ax", "=", "self", ".", "ax", "#NEWLINE#", "#UNINDENT#", "if", "(", "ibound", "is", "None", ")", ":", "#NEWLINE#", "#INDENT#", "bas", "=", "self", ".", "model", ".", "get_package", "(", "'BAS6'", ")", "#NEWLINE#", "ibound", "=", "bas", ".", "ibound", ".", "array", "#NEWLINE#", "#UNINDENT#", "plotarray", "=", "np", ".", "zeros", "(", "ibound", ".", "shape", ",", "dtype", "=", "np", ".", "int", ")", "#NEWLINE#", "idx1", "=", "(", "ibound", "==", "0", ")", "#NEWLINE#", "idx2", "=", "(", "ibound", "<", "0", ")", "#NEWLINE#", "plotarray", "[", "idx1", "]", "=", "1", "#NEWLINE#", "plotarray", "[", "idx2", "]", "=", "2", "#NEWLINE#", "plotarray", "=", "np", ".", "ma", ".", "masked_equal", "(", "plotarray", ",", "0", ")", "#NEWLINE#", "cmap", "=", "matplotlib", ".", "colors", ".", "ListedColormap", "(", "[", "'0'", ",", "color_noflow", ",", "color_ch", "]", ")", "#NEWLINE#", "bounds", "=", "[", "0", ",", "1", ",", "2", ",", "3", "]", "#NEWLINE#", "norm", "=", "matplotlib", ".", "colors", ".", "BoundaryNorm", "(", "bounds", ",", "cmap", ".", "N", ")", "#NEWLINE#", "quadmesh", "=", "self", ".", "plot_array", "(", "plotarray", ",", "cmap", "=", "cmap", ",", "norm", "=", "cmap", ",", "**", "kwargs", ")", "#NEWLINE#", "return", "quadmesh"]}}
{"position": {"error_location": 181, "repair_targets": [171, 198], "repair_candidates": [142, 181, 194, 196, 200, 99, 117, 159, 179, 12, 155, 62, 75, 107, 124, 4, 55, 73, 77, 88, 102, 110, 186, 207, 2, 48, 64, 188, 171, 198, 32, 46, 50, 8, 153, 27, 34, 203, 82, 115, 122, 129, 137, 192]}}
{"prediction": {"error_location": 0.3971080780029297, "repair_targets": [0.14562533795833588, 0.8439359664916992], "repair_candidates": [0.001702578621916473, 0.0006739800446666777, 0.0002555172541178763, 0.00029925486887805164, 0.00011015115887857974, 0.0001744677865644917, 0.00023631799558643252, 0.00017822079826146364, 0.001799481688067317, 7.8314615166164e-06, 4.344315129856113e-06, 0.0003715400816872716, 0.00029900940717197955, 0.00017534868675284088, 0.00039885431760922074, 9.11967163119698e-06, 0.0004915262688882649, 4.294085010769777e-05, 0.0005703109782189131, 1.2316747870499967e-06, 0.0006866000476293266, 1.448031071049627e-06, 6.862013833597302e-05, 1.4107747574598761e-06, 7.630696927662939e-05, 2.265078819618793e-06, 0.0005137614207342267, 6.875124199723359e-06, 0.0002071089984383434, 7.12039036443457e-05, 1.129319025494624e-05, 0.000236225183471106, 0.14562533795833588, 2.959018956971704e-06, 1.9910647097276524e-05, 0.00011028707376681268, 0.000341572129400447, 1.4935206991140149e-06, 1.474398573009239e-06, 3.0459145250461006e-07, 0.8439359664916992, 6.944165420463833e-07, 0.0002674798888619989, 7.417706001433544e-06], "target_probs": 0.9895613193511963}}


{"result": {"time": "2021-02-21 06:41:22.835242", "n_pass": [98, 4, 2], "n_token": 202, "loss": [1.3389835357666016, 0.05544953793287277], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def plot_ibound(", "self", ",", "ibound", "=", "None", ",", "color_noflow", "=", "'black'", ",", "color_ch", "=", "'blue'", ",", "**kwargs", ")", ":", "#NEWLINE#", "#INDENT#", "\"\\n        Make a plot of ibound.  If not specified, then pull ibound from the\\n        self.ml\\n\\n        Parameters\\n        ----------\\n        ibound : numpy.ndarray\\n            ibound array to plot.  (Default is ibound in 'BAS6' package.)\\n        color_noflow : string\\n            (Default is 'black')\\n        color_ch : string\\n            Color for constant heads (Default is 'blue'.)\\n\\n        Returns\\n        -------\\n        quadmesh : matplotlib.collections.QuadMesh\\n\\n        \"", "#NEWLINE#", "if", "(", "'ax'", "in", "kwargs", ")", ":", "#NEWLINE#", "#INDENT#", "ax", "=", "kwargs", ".", "else", ":", "#NEWLINE#", "#INDENT#", "ax", "=", "self", ".", "ax", "#NEWLINE#", "#UNINDENT#", "if", "(", "ibound", "is", "None", ")", ":", "#NEWLINE#", "#INDENT#", "bas", "=", "self", ".", "model", ".", "get_package", "(", "'BAS6'", ")", "#NEWLINE#", "ibound", "=", "bas", ".", "ibound", ".", "array", "#NEWLINE#", "#UNINDENT#", "plotarray", "=", "np", ".", "zeros", "(", "ibound", ".", "shape", ",", "dtype", "=", "np", ".", "int", ")", "#NEWLINE#", "idx1", "=", "(", "ibound", "==", "0", ")", "#NEWLINE#", "idx2", "=", "(", "ibound", "<", "0", ")", "#NEWLINE#", "plotarray", "[", "idx1", "]", "=", "1", "#NEWLINE#", "plotarray", "[", "idx2", "]", "=", "2", "#NEWLINE#", "plotarray", "=", "np", ".", "ma", ".", "masked_equal", "(", "plotarray", ",", "0", ")", "#NEWLINE#", "cmap", "=", "matplotlib", ".", "colors", ".", "ListedColormap", "(", "[", "'0'", ",", "color_noflow", ",", "color_ch", "]", ")", "#NEWLINE#", "bounds", "=", "[", "0", ",", "1", ",", "2", ",", "3", "]", "#NEWLINE#", "norm", "=", "matplotlib", ".", "colors", ".", "BoundaryNorm", "(", "bounds", ",", "cmap", ".", "N", ")", "#NEWLINE#", "quadmesh", "=", "self", ".", "plot_array", "(", "plotarray", ",", "cmap", "=", "cmap", ",", "norm", "=", "cmap", ",", "**", "kwargs", ")", "#NEWLINE#", "return", "quadmesh"]}}
{"position": {"error_location": 175, "repair_targets": [165, 192], "repair_candidates": [136, 175, 188, 190, 194, 93, 111, 153, 173, 12, 149, 56, 69, 101, 118, 4, 49, 67, 71, 82, 96, 104, 180, 201, 2, 42, 58, 182, 165, 192, 32, 40, 44, 8, 147, 27, 34, 197, 76, 109, 116, 123, 131, 186]}}
{"prediction": {"error_location": 0.26211193203926086, "repair_targets": [0.09949471801519394, 0.8465650677680969], "repair_candidates": [0.01645546592772007, 0.001078509958460927, 0.00036175621789880097, 0.0003690471057780087, 0.00034900798345915973, 0.0005900557152926922, 0.00031152472365647554, 0.0005197585560381413, 0.02734268829226494, 1.0786539860418998e-05, 1.0415076758363284e-05, 0.0004317956627346575, 0.0008108311449177563, 0.00022740886197425425, 0.0007358675939030945, 9.36162905418314e-06, 0.0007637417293153703, 5.862300531589426e-05, 0.00038360702455975115, 7.295882937796705e-07, 0.0003971154510509223, 1.022032847686205e-06, 5.3409494285006076e-05, 6.57172279261431e-07, 3.664918040158227e-05, 2.849249312930624e-06, 0.0008446449064649642, 1.05159897429985e-05, 0.00025611583259887993, 0.00011429231381043792, 8.096771125565283e-06, 0.0001966262498172, 0.09949471801519394, 4.053270458825864e-06, 4.559368244372308e-05, 8.863881521392614e-05, 0.000930608541239053, 4.4121366045146715e-06, 2.14495798900316e-06, 5.26162693859078e-07, 0.8465650677680969, 2.02367937163217e-06, 0.00011388181883376092, 5.369024620449636e-06], "target_probs": 0.9460597634315491}}


{"result": {"time": "2021-02-21 06:41:30.751492", "n_pass": [488, 100, 3], "n_token": 201, "loss": [1.250168800354004, 0.04137829691171646], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def plot_ibound(", "self", ",", "ibound", "=", "None", ",", "color_noflow", "=", ",", "color_ch", "=", "'blue'", ",", "**kwargs", ")", ":", "#NEWLINE#", "#INDENT#", "\"\\n        Make a plot of ibound.  If not specified, then pull ibound from the\\n        self.ml\\n\\n        Parameters\\n        ----------\\n        ibound : numpy.ndarray\\n            ibound array to plot.  (Default is ibound in 'BAS6' package.)\\n        color_noflow : string\\n            (Default is 'black')\\n        color_ch : string\\n            Color for constant heads (Default is 'blue'.)\\n\\n        Returns\\n        -------\\n        quadmesh : matplotlib.collections.QuadMesh\\n\\n        \"", "#NEWLINE#", "if", "(", "'ax'", "in", "kwargs", ")", ":", "#NEWLINE#", "#INDENT#", "ax", "=", "kwargs", ".", "else", ":", "#NEWLINE#", "#INDENT#", "ax", "=", "self", ".", "ax", "#NEWLINE#", "#UNINDENT#", "if", "(", "ibound", "is", "None", ")", ":", "#NEWLINE#", "#INDENT#", "bas", "=", "self", ".", "model", ".", "get_package", "(", "'BAS6'", ")", "#NEWLINE#", "ibound", "=", "bas", ".", "ibound", ".", "array", "#NEWLINE#", "#UNINDENT#", "plotarray", "=", "np", ".", "zeros", "(", "ibound", ".", "shape", ",", "dtype", "=", "np", ".", "int", ")", "#NEWLINE#", "idx1", "=", "(", "ibound", "==", "0", ")", "#NEWLINE#", "idx2", "=", "(", "ibound", "<", "0", ")", "#NEWLINE#", "plotarray", "[", "idx1", "]", "=", "1", "#NEWLINE#", "plotarray", "[", "idx2", "]", "=", "2", "#NEWLINE#", "plotarray", "=", "np", ".", "ma", ".", "masked_equal", "(", "plotarray", ",", "0", ")", "#NEWLINE#", "cmap", "=", "matplotlib", ".", "colors", ".", "ListedColormap", "(", "[", "'0'", ",", "color_noflow", ",", "color_ch", "]", ")", "#NEWLINE#", "bounds", "=", "[", "0", ",", "1", ",", "2", ",", "3", "]", "#NEWLINE#", "norm", "=", "matplotlib", ".", "colors", ".", "BoundaryNorm", "(", "bounds", ",", "cmap", ".", "N", ")", "#NEWLINE#", "quadmesh", "=", "self", ".", "plot_array", "(", "plotarray", ",", "cmap", "=", "cmap", ",", "norm", "=", "cmap", ",", "**", "kwargs", ")", "#NEWLINE#", "return", "quadmesh"]}}
{"position": {"error_location": 174, "repair_targets": [164, 191], "repair_candidates": [135, 174, 187, 189, 193, 92, 110, 152, 172, 11, 148, 55, 68, 100, 117, 4, 48, 66, 70, 81, 95, 103, 179, 200, 2, 41, 57, 181, 164, 191, 31, 39, 43, 8, 146, 26, 33, 196, 75, 108, 115, 122, 130, 185]}}
{"prediction": {"error_location": 0.28645646572113037, "repair_targets": [0.09964299201965332, 0.8598231077194214], "repair_candidates": [0.012401080690324306, 0.000896361714694649, 0.000982610508799553, 0.00027329495060257614, 0.00030221842462196946, 0.0004585184797178954, 0.0003344504802953452, 0.0004481213982217014, 0.018916837871074677, 1.0390239367552567e-05, 7.040364380372921e-06, 0.00032131138141267, 0.0008016801439225674, 0.00018593318236526102, 0.000727036502212286, 7.0820615292177536e-06, 0.0005826965789310634, 1.8443848603055812e-05, 0.0003145470982417464, 4.3793750137410825e-07, 0.0003169689152855426, 1.0317697842765483e-06, 4.148959487793036e-05, 7.750855957056046e-07, 3.6194047424942255e-05, 3.3645292205619626e-06, 0.0008872960461303592, 1.2724852240353357e-05, 0.00022530017304234207, 8.021849498618394e-05, 8.153292583301663e-06, 0.00017951088375411928, 0.09964299201965332, 3.1181482427200535e-06, 3.1255152862286195e-05, 7.419470784952864e-05, 0.0005662746843881905, 3.95835513700149e-06, 2.044428356384742e-06, 4.760717331464548e-07, 0.8598231077194214, 2.5792658107093303e-06, 6.107737135607749e-05, 5.808359674119856e-06], "target_probs": 0.9594660997390747}}


{"result": {"time": "2021-02-21 06:41:43.181899", "n_pass": [857, 251, 4], "n_token": 200, "loss": [0.9416359066963196, 0.026926077902317047], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def plot_ibound(", "self", ",", "ibound", "=", "None", ",", "color_noflow", "=", ",", "color_ch", "=", "'blue'", ",", "**kwargs", ")", ":", "#NEWLINE#", "#INDENT#", "\"\\n        Make a plot of ibound.  If not specified, then pull ibound from the\\n        self.ml\\n\\n        Parameters\\n        ----------\\n        ibound : numpy.ndarray\\n            ibound array to plot.  (Default is ibound in 'BAS6' package.)\\n        color_noflow : string\\n            (Default is 'black')\\n        color_ch : string\\n            Color for constant heads (Default is 'blue'.)\\n\\n        Returns\\n        -------\\n        quadmesh : matplotlib.collections.QuadMesh\\n\\n        \"", "#NEWLINE#", "if", "(", "'ax'", "in", "kwargs", ")", ":", "#NEWLINE#", "#INDENT#", "ax", "=", "kwargs", ".", "else", ":", "#NEWLINE#", "#INDENT#", "ax", "=", "self", ".", "ax", "#NEWLINE#", "#UNINDENT#", "if", "(", "ibound", "is", "None", ")", ":", "#NEWLINE#", "#INDENT#", "bas", "=", "self", ".", "model", ".", "get_package", "(", "'BAS6'", ")", "#NEWLINE#", "ibound", "=", "bas", ".", "ibound", ".", "array", "#NEWLINE#", "#UNINDENT#", "plotarray", "=", "np", ".", "zeros", "(", "ibound", ".", "shape", ",", "dtype", "=", "np", ".", "int", ")", "#NEWLINE#", "idx1", "=", "(", "ibound", "==", "0", ")", "#NEWLINE#", "idx2", "=", "(", "ibound", "<", "0", ")", "#NEWLINE#", "plotarray", "[", "idx1", "]", "=", "1", "#NEWLINE#", "plotarray", "[", "idx2", "]", "=", "2", "#NEWLINE#", "plotarray", "=", "np", ".", "ma", ".", "masked_equal", "(", "plotarray", ",", "0", ")", "cmap", "=", "matplotlib", ".", "colors", ".", "ListedColormap", "(", "[", "'0'", ",", "color_noflow", ",", "color_ch", "]", ")", "#NEWLINE#", "bounds", "=", "[", "0", ",", "1", ",", "2", ",", "3", "]", "#NEWLINE#", "norm", "=", "matplotlib", ".", "colors", ".", "BoundaryNorm", "(", "bounds", ",", "cmap", ".", "N", ")", "#NEWLINE#", "quadmesh", "=", "self", ".", "plot_array", "(", "plotarray", ",", "cmap", "=", "cmap", ",", "norm", "=", "cmap", ",", "**", "kwargs", ")", "#NEWLINE#", "return", "quadmesh"]}}
{"position": {"error_location": 173, "repair_targets": [163, 190], "repair_candidates": [134, 173, 186, 188, 192, 92, 110, 151, 171, 11, 147, 55, 68, 100, 117, 4, 48, 66, 70, 81, 95, 103, 178, 199, 2, 41, 57, 180, 163, 190, 31, 39, 43, 8, 145, 26, 33, 195, 75, 108, 115, 122, 130, 184]}}
{"prediction": {"error_location": 0.38998931646347046, "repair_targets": [0.16014151275157928, 0.8132916688919067], "repair_candidates": [0.007157986517995596, 0.0006784992292523384, 0.0006683350657112896, 0.0001740689913276583, 0.00017461684183217585, 0.0002643695625010878, 0.00026753052952699363, 0.0003113248385488987, 0.011777390725910664, 6.658163783868076e-06, 5.379474714573007e-06, 0.00036018091486766934, 0.0008224385674111545, 0.0001670898200245574, 0.000824140093754977, 6.01041301706573e-06, 0.0004361482569947839, 1.971986966964323e-05, 0.00025848078075796366, 4.527632881945465e-07, 0.0002628629154060036, 1.1705658380378736e-06, 2.7224295990890823e-05, 8.052625730670115e-07, 3.1537907489109784e-05, 4.059579623572063e-06, 0.0008899291278794408, 2.5620265660109e-05, 0.00011258875019848347, 0.00014300116163212806, 1.3433504136628471e-05, 8.627393253846094e-05, 0.16014151275157928, 1.896771550491394e-06, 2.099039193126373e-05, 5.125375901116058e-05, 0.00045868573943153024, 4.099152647540905e-06, 1.910068021970801e-06, 5.532066893465526e-07, 0.8132916688919067, 3.6937556160410168e-06, 3.631656363722868e-05, 8.123647603497375e-06], "target_probs": 0.9734331965446472}}


{"result": {"time": "2021-02-21 06:41:45.239426", "n_pass": [886, 276, 5], "n_token": 199, "loss": [0.7932074069976807, 0.2657136917114258], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def plot_ibound(", "self", ",", "ibound", "=", "None", ",", "color_noflow", "=", ",", "color_ch", "=", "'blue'", ",", "**kwargs", ")", ":", "#NEWLINE#", "#INDENT#", "\"\\n        Make a plot of ibound.  If not specified, then pull ibound from the\\n        self.ml\\n\\n        Parameters\\n        ----------\\n        ibound : numpy.ndarray\\n            ibound array to plot.  (Default is ibound in 'BAS6' package.)\\n        color_noflow : string\\n            (Default is 'black')\\n        color_ch : string\\n            Color for constant heads (Default is 'blue'.)\\n\\n        Returns\\n        -------\\n        quadmesh : matplotlib.collections.QuadMesh\\n\\n        \"", "#NEWLINE#", "if", "(", "'ax'", "in", "kwargs", ")", ":", "#NEWLINE#", "#INDENT#", "ax", "=", "kwargs", ".", "else", ":", "#NEWLINE#", "#INDENT#", "ax", "=", "self", ".", "ax", "#NEWLINE#", "#UNINDENT#", "if", "(", "ibound", "is", "None", ")", ":", "#NEWLINE#", "#INDENT#", "bas", "=", "self", ".", "model", ".", "get_package", "(", "'BAS6'", ")", "#NEWLINE#", "ibound", "=", "bas", ".", "ibound", ".", "array", "#NEWLINE#", "#UNINDENT#", "plotarray", "=", "np", ".", "zeros", "(", "ibound", ".", "shape", ",", "dtype", "=", "np", ".", "int", ")", "#NEWLINE#", "idx1", "=", "(", "ibound", "==", "0", ")", "#NEWLINE#", "idx2", "=", "(", "ibound", "<", "0", ")", "#NEWLINE#", "plotarray", "[", "idx1", "]", "=", "1", "#NEWLINE#", "plotarray", "[", "idx2", "]", "=", "2", "#NEWLINE#", "plotarray", "=", "np", ".", "ma", ".", "masked_equal", "(", "plotarray", ",", "0", ")", "cmap", "=", "matplotlib", ".", "colors", ".", "ListedColormap", "(", "[", "'0'", ",", "color_noflow", ",", "color_ch", "]", ")", "#NEWLINE#", "bounds", "=", "[", "0", ",", "1", ",", "2", ",", "3", "]", "norm", "=", "matplotlib", ".", "colors", ".", "BoundaryNorm", "(", "bounds", ",", "cmap", ".", "N", ")", "#NEWLINE#", "quadmesh", "=", "self", ".", "plot_array", "(", "plotarray", ",", "cmap", "=", "cmap", ",", "norm", "=", "cmap", ",", "**", "kwargs", ")", "#NEWLINE#", "return", "quadmesh"]}}
{"position": {"error_location": 172, "repair_targets": [162, 189], "repair_candidates": [134, 172, 185, 187, 191, 92, 110, 151, 170, 11, 147, 55, 68, 100, 117, 4, 48, 66, 70, 81, 95, 103, 177, 198, 2, 41, 57, 179, 162, 189, 31, 39, 43, 8, 145, 26, 33, 194, 75, 108, 115, 122, 130, 183]}}
{"prediction": {"error_location": 0.45239150524139404, "repair_targets": [0.0044514830224215984, 0.7622071504592896], "repair_candidates": [0.061100706458091736, 0.0065346285700798035, 0.004214474931359291, 0.0011650372762233019, 0.0018998916493728757, 0.002091595670208335, 0.003126934403553605, 0.00210806867107749, 0.09695577621459961, 5.472355769597925e-05, 3.489441587589681e-05, 0.0047287289053201675, 0.007278821896761656, 0.001754380646161735, 0.006420227233320475, 5.50642580492422e-05, 0.004779090639203787, 0.00012563639029394835, 0.0025285822339355946, 3.5913042211177526e-06, 0.002964905695989728, 1.0746387488325126e-05, 0.00029370415722951293, 7.873576578276698e-06, 0.0003695497871376574, 5.0364928029011935e-05, 0.013575098477303982, 0.0002646451466716826, 0.0012300447560846806, 0.0013782695168629289, 7.665516750421375e-05, 0.0006269418518058956, 0.0044514830224215984, 9.543206033413298e-06, 0.0002343150699744001, 0.0003382316790521145, 0.004626153036952019, 3.1253064662450925e-05, 5.859477369085653e-06, 1.231247097166488e-06, 0.7622071504592896, 8.78533592185704e-06, 0.00020621241128537804, 7.002060010563582e-05], "target_probs": 0.76665860414505}}


{"result": {"time": "2021-02-21 06:41:45.326535", "n_pass": [888, 277, 6], "n_token": 198, "loss": [0.3749089241027832, 0.37451401352882385], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def plot_ibound(", "self", ",", "ibound", "=", "None", ",", "color_noflow", "=", ",", "color_ch", "=", "'blue'", ",", "**kwargs", ")", ":", "#NEWLINE#", "#INDENT#", "\"\\n        Make a plot of ibound.  If not specified, then pull ibound from the\\n        self.ml\\n\\n        Parameters\\n        ----------\\n        ibound : numpy.ndarray\\n            ibound array to plot.  (Default is ibound in 'BAS6' package.)\\n        color_noflow : string\\n            (Default is 'black')\\n        color_ch : string\\n            Color for constant heads (Default is 'blue'.)\\n\\n        Returns\\n        -------\\n        quadmesh : matplotlib.collections.QuadMesh\\n\\n        \"", "#NEWLINE#", "if", "(", "'ax'", "in", "kwargs", ")", ":", "#NEWLINE#", "#INDENT#", "ax", "=", "kwargs", ".", "else", ":", "#NEWLINE#", "#INDENT#", "ax", "=", "self", ".", "ax", "#NEWLINE#", "#UNINDENT#", "if", "(", "ibound", "is", "None", ")", ":", "#NEWLINE#", "#INDENT#", "bas", "=", "self", ".", "model", ".", "get_package", "(", "'BAS6'", ")", "#NEWLINE#", "ibound", "=", "bas", ".", "ibound", ".", "array", "#NEWLINE#", "#UNINDENT#", "plotarray", "=", "np", ".", "zeros", "(", "ibound", ".", "shape", ",", "dtype", "=", "np", ".", "int", ")", "#NEWLINE#", "idx1", "=", "(", "ibound", "==", "0", ")", "#NEWLINE#", "idx2", "=", "(", "ibound", "<", "0", ")", "#NEWLINE#", "plotarray", "[", "idx1", "]", "=", "1", "#NEWLINE#", "plotarray", "[", "idx2", "]", "=", "2", "#NEWLINE#", "plotarray", "=", "np", ".", "ma", ".", "masked_equal", "(", "plotarray", ",", "0", ")", "cmap", "=", "matplotlib", ".", "colors", ".", "ListedColormap", "(", "[", "'0'", ",", "color_noflow", ",", "color_ch", "]", ")", "#NEWLINE#", "bounds", "=", "[", "0", ",", "1", ",", "2", ",", "3", "]", "norm", "matplotlib", ".", "colors", ".", "BoundaryNorm", "(", "bounds", ",", "cmap", ".", "N", ")", "#NEWLINE#", "quadmesh", "=", "self", ".", "plot_array", "(", "plotarray", ",", "cmap", "=", "cmap", ",", "norm", "=", "cmap", ",", "**", "kwargs", ")", "#NEWLINE#", "return", "quadmesh"]}}
{"position": {"error_location": 171, "repair_targets": [162, 188], "repair_candidates": [134, 171, 184, 186, 190, 92, 110, 151, 169, 11, 147, 55, 68, 100, 117, 4, 48, 66, 70, 81, 95, 103, 176, 197, 2, 41, 57, 178, 162, 188, 31, 39, 43, 8, 145, 26, 33, 193, 75, 108, 115, 122, 130, 182]}}
{"prediction": {"error_location": 0.6873518824577332, "repair_targets": [0.12024145573377609, 0.5673819184303284], "repair_candidates": [0.08651772141456604, 0.006674671079963446, 0.004112511873245239, 0.0009655721369199455, 0.0015860439743846655, 0.00208485615439713, 0.002556160558015108, 0.0020992890931665897, 0.1308085322380066, 5.733570287702605e-05, 4.416730735101737e-05, 0.010267939418554306, 0.01038038358092308, 0.001642982941120863, 0.019662408158183098, 5.893848720006645e-05, 0.004530695732682943, 0.00016795872943475842, 0.0020741489715874195, 3.217641960873152e-06, 0.0027314326725900173, 8.82246604305692e-06, 0.0002781380608212203, 5.227352176007116e-06, 0.00039233817369677126, 3.305168866063468e-05, 0.014646213501691818, 0.0003165175439789891, 0.001273825648240745, 0.0010447086533531547, 5.950166450929828e-05, 0.0007895540911704302, 0.12024145573377609, 1.0868608114833478e-05, 5.925894947722554e-05, 0.00033054384402930737, 0.003822001628577709, 3.073765765293501e-05, 4.329790044721449e-06, 7.789813594172301e-07, 0.5673819184303284, 5.241029612079728e-06, 0.00016697414685040712, 7.100509537849575e-05], "target_probs": 0.6876233816146851}}


{"result": {"time": "2021-02-21 06:41:45.415202", "n_pass": [889, 278, 7], "n_token": 197, "loss": [0.4193395674228668, 0.30632248520851135], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def plot_ibound(", "self", ",", "ibound", "=", "None", ",", "color_noflow", "=", ",", "color_ch", "=", "'blue'", ",", "**kwargs", ")", ":", "#NEWLINE#", "#INDENT#", "\"\\n        Make a plot of ibound.  If not specified, then pull ibound from the\\n        self.ml\\n\\n        Parameters\\n        ----------\\n        ibound : numpy.ndarray\\n            ibound array to plot.  (Default is ibound in 'BAS6' package.)\\n        color_noflow : string\\n            (Default is 'black')\\n        color_ch : string\\n            Color for constant heads (Default is 'blue'.)\\n\\n        Returns\\n        -------\\n        quadmesh : matplotlib.collections.QuadMesh\\n\\n        \"", "#NEWLINE#", "if", "(", "'ax'", "in", "kwargs", ")", ":", "#NEWLINE#", "#INDENT#", "ax", "=", "kwargs", ".", "else", ":", "#NEWLINE#", "#INDENT#", "ax", "=", "self", ".", "ax", "#NEWLINE#", "#UNINDENT#", "if", "(", "ibound", "is", "None", ")", ":", "#NEWLINE#", "#INDENT#", "bas", "=", "self", ".", "model", ".", "get_package", "(", "'BAS6'", ")", "#NEWLINE#", "ibound", "=", "bas", ".", "ibound", ".", "array", "#NEWLINE#", "#UNINDENT#", "plotarray", "=", "np", ".", "zeros", "(", "ibound", ".", "shape", ",", "dtype", "=", "np", ".", "int", ")", "#NEWLINE#", "idx1", "=", "(", "ibound", "==", "0", ")", "#NEWLINE#", "idx2", "=", "(", "ibound", "<", "0", ")", "#NEWLINE#", "plotarray", "[", "idx1", "]", "=", "1", "#NEWLINE#", "plotarray", "[", "idx2", "]", "=", "2", "#NEWLINE#", "plotarray", "=", "np", ".", "ma", ".", "masked_equal", "(", "plotarray", ",", "0", ")", "cmap", "=", "matplotlib", ".", "colors", ".", "ListedColormap", "(", "[", "'0'", ",", "color_noflow", ",", "color_ch", "]", ")", "#NEWLINE#", "bounds", "=", "[", "0", ",", "1", ",", "2", ",", "3", "]", "norm", ".", "colors", ".", "BoundaryNorm", "(", "bounds", ",", "cmap", ".", "N", ")", "#NEWLINE#", "quadmesh", "=", "self", ".", "plot_array", "(", "plotarray", ",", "cmap", "=", "cmap", ",", "norm", "=", "cmap", ",", "**", "kwargs", ")", "#NEWLINE#", "return", "quadmesh"]}}
{"position": {"error_location": 170, "repair_targets": [162, 187], "repair_candidates": [134, 170, 183, 185, 189, 92, 110, 151, 168, 11, 147, 55, 68, 100, 117, 4, 48, 66, 70, 81, 95, 103, 175, 196, 2, 41, 57, 177, 162, 187, 31, 39, 43, 8, 145, 26, 33, 192, 75, 108, 115, 122, 130, 181]}}
{"prediction": {"error_location": 0.6574808955192566, "repair_targets": [0.08231376111507416, 0.6538354158401489], "repair_candidates": [0.07186248153448105, 0.0050332569517195225, 0.0036422701086848974, 0.0007834475836716592, 0.0012487279018387198, 0.001955983228981495, 0.002345642540603876, 0.0018652405124157667, 0.10963743180036545, 4.515593172982335e-05, 2.9919921871623956e-05, 0.008410781621932983, 0.00933272484689951, 0.001271721557714045, 0.01778104156255722, 4.6280110836960375e-05, 0.003309762105345726, 8.698201418155804e-05, 0.0015217161271721125, 3.364165195307578e-06, 0.0024608299136161804, 7.778000508551486e-06, 0.00022652548796031624, 3.641534931375645e-06, 0.00037116126623004675, 2.25104686251143e-05, 0.013189735822379589, 0.00026082945987582207, 0.0012933766702190042, 0.0009283382096327841, 5.866645369678736e-05, 0.0008126723696477711, 0.08231376111507416, 8.182319106708746e-06, 0.00010226860467810184, 0.00035047330311499536, 0.003303033532574773, 2.2084383090259507e-05, 4.286408966436284e-06, 5.268620384413225e-07, 0.6538354158401489, 3.7386791973403888e-06, 0.0001356435677735135, 7.069564162520692e-05], "target_probs": 0.7361491918563843}}


{"result": {"time": "2021-02-21 06:41:45.501895", "n_pass": [890, 279, 8], "n_token": 196, "loss": [0.7414349317550659, 0.44914570450782776], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def plot_ibound(", "self", ",", "ibound", "=", "None", ",", "color_noflow", "=", ",", "color_ch", "=", "'blue'", ",", "**kwargs", ")", ":", "#NEWLINE#", "#INDENT#", "\"\\n        Make a plot of ibound.  If not specified, then pull ibound from the\\n        self.ml\\n\\n        Parameters\\n        ----------\\n        ibound : numpy.ndarray\\n            ibound array to plot.  (Default is ibound in 'BAS6' package.)\\n        color_noflow : string\\n            (Default is 'black')\\n        color_ch : string\\n            Color for constant heads (Default is 'blue'.)\\n\\n        Returns\\n        -------\\n        quadmesh : matplotlib.collections.QuadMesh\\n\\n        \"", "#NEWLINE#", "if", "(", "'ax'", "in", "kwargs", ")", ":", "#NEWLINE#", "#INDENT#", "ax", "=", "kwargs", ".", "else", ":", "#NEWLINE#", "#INDENT#", "ax", "=", "self", ".", "ax", "#NEWLINE#", "#UNINDENT#", "if", "(", "ibound", "is", "None", ")", ":", "#NEWLINE#", "#INDENT#", "bas", "=", "self", ".", "model", ".", "get_package", "(", "'BAS6'", ")", "#NEWLINE#", "ibound", "=", "bas", ".", "ibound", ".", "array", "#NEWLINE#", "#UNINDENT#", "plotarray", "=", "np", ".", "zeros", "(", "ibound", ".", "shape", ",", "dtype", "=", "np", ".", "int", ")", "#NEWLINE#", "idx1", "=", "(", "ibound", "==", "0", ")", "#NEWLINE#", "idx2", "=", "(", "ibound", "<", "0", ")", "#NEWLINE#", "plotarray", "[", "idx1", "]", "=", "1", "#NEWLINE#", "plotarray", "[", "idx2", "]", "=", "2", "#NEWLINE#", "plotarray", "=", "np", ".", "ma", ".", "masked_equal", "(", "plotarray", ",", "0", ")", "cmap", "=", "matplotlib", ".", "colors", ".", "ListedColormap", "(", "[", "'0'", ",", "color_noflow", ",", "color_ch", "]", ")", "#NEWLINE#", "bounds", "=", "[", "0", ",", "1", ",", "2", ",", "3", "]", "norm", "colors", ".", "BoundaryNorm", "(", "bounds", ",", "cmap", ".", "N", ")", "#NEWLINE#", "quadmesh", "=", "self", ".", "plot_array", "(", "plotarray", ",", "cmap", "=", "cmap", ",", "norm", "=", "cmap", ",", "**", "kwargs", ")", "#NEWLINE#", "return", "quadmesh"]}}
{"position": {"error_location": 169, "repair_targets": [162, 186], "repair_candidates": [134, 169, 182, 184, 188, 92, 110, 151, 167, 11, 147, 55, 68, 100, 117, 4, 48, 66, 70, 81, 95, 103, 174, 195, 2, 41, 57, 176, 162, 186, 31, 39, 43, 8, 145, 26, 33, 191, 75, 108, 115, 122, 130, 180]}}
{"prediction": {"error_location": 0.4764297902584076, "repair_targets": [0.0020315605215728283, 0.6361415386199951], "repair_candidates": [0.10014986991882324, 0.007674703374505043, 0.005528495647013187, 0.0011418317444622517, 0.001432568533346057, 0.003178660525009036, 0.003581042168661952, 0.003067918587476015, 0.1447644978761673, 8.093838550848886e-05, 6.527828372782096e-05, 0.006821535527706146, 0.012601801194250584, 0.0018940867157652974, 0.02889370359480381, 8.701741899130866e-05, 0.005139742512255907, 0.0002675538999028504, 0.0021785320714116096, 5.3973249123373535e-06, 0.0037189782597124577, 1.3961717741040047e-05, 0.00036320294020697474, 6.230925464478787e-06, 0.0005937848472967744, 4.372157127363607e-05, 0.01709757372736931, 0.00033398836967535317, 0.0023868640419095755, 0.001226695952937007, 9.272545139538124e-05, 0.0015179328620433807, 0.0020315605215728283, 1.081801838154206e-05, 0.0007018237956799567, 0.0006326810107566416, 0.004171145614236593, 3.549284519976936e-05, 8.855458872858435e-06, 7.895998237472668e-07, 0.6361415386199951, 4.824699772143504e-06, 0.0001952981692738831, 0.00011433698091423139], "target_probs": 0.6381731033325195}}


{"result": {"time": "2021-02-21 06:41:45.588382", "n_pass": [891, 280, 9], "n_token": 195, "loss": [0.8754239678382874, 0.5138092637062073], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def plot_ibound(", "self", ",", "ibound", "=", "None", ",", "color_noflow", "=", ",", "color_ch", "=", "'blue'", ",", "**kwargs", ")", ":", "#NEWLINE#", "#INDENT#", "\"\\n        Make a plot of ibound.  If not specified, then pull ibound from the\\n        self.ml\\n\\n        Parameters\\n        ----------\\n        ibound : numpy.ndarray\\n            ibound array to plot.  (Default is ibound in 'BAS6' package.)\\n        color_noflow : string\\n            (Default is 'black')\\n        color_ch : string\\n            Color for constant heads (Default is 'blue'.)\\n\\n        Returns\\n        -------\\n        quadmesh : matplotlib.collections.QuadMesh\\n\\n        \"", "#NEWLINE#", "if", "(", "'ax'", "in", "kwargs", ")", ":", "#NEWLINE#", "#INDENT#", "ax", "=", "kwargs", ".", "else", ":", "#NEWLINE#", "#INDENT#", "ax", "=", "self", ".", "ax", "#NEWLINE#", "#UNINDENT#", "if", "(", "ibound", "is", "None", ")", ":", "#NEWLINE#", "#INDENT#", "bas", "=", "self", ".", "model", ".", "get_package", "(", "'BAS6'", ")", "#NEWLINE#", "ibound", "=", "bas", ".", "ibound", ".", "array", "#NEWLINE#", "#UNINDENT#", "plotarray", "=", "np", ".", "zeros", "(", "ibound", ".", "shape", ",", "dtype", "=", "np", ".", "int", ")", "#NEWLINE#", "idx1", "=", "(", "ibound", "==", "0", ")", "#NEWLINE#", "idx2", "=", "(", "ibound", "<", "0", ")", "#NEWLINE#", "plotarray", "[", "idx1", "]", "=", "1", "#NEWLINE#", "plotarray", "[", "idx2", "]", "=", "2", "#NEWLINE#", "plotarray", "=", "np", ".", "ma", ".", "masked_equal", "(", "plotarray", ",", "0", ")", "cmap", "=", "matplotlib", ".", "colors", ".", "ListedColormap", "(", "[", "'0'", ",", "color_noflow", ",", "color_ch", "]", ")", "#NEWLINE#", "bounds", "=", "[", "0", ",", "1", ",", "2", ",", "3", "]", "norm", ".", "BoundaryNorm", "(", "bounds", ",", "cmap", ".", "N", ")", "#NEWLINE#", "quadmesh", "=", "self", ".", "plot_array", "(", "plotarray", ",", "cmap", "=", "cmap", ",", "norm", "=", "cmap", ",", "**", "kwargs", ")", "#NEWLINE#", "return", "quadmesh"]}}
{"position": {"error_location": 168, "repair_targets": [162, 185], "repair_candidates": [134, 168, 181, 183, 187, 92, 110, 151, 166, 11, 147, 55, 68, 100, 117, 4, 48, 66, 70, 81, 95, 103, 173, 194, 2, 41, 57, 175, 162, 185, 31, 39, 43, 8, 145, 26, 33, 190, 75, 108, 115, 122, 130, 179]}}
{"prediction": {"error_location": 0.4166852831840515, "repair_targets": [0.0009187186951749027, 0.5972937345504761], "repair_candidates": [0.10845998674631119, 0.009474987164139748, 0.007059128023684025, 0.0013542788801714778, 0.0016320880968123674, 0.004139814991503954, 0.004634390585124493, 0.003942050039768219, 0.16075029969215393, 9.988887904910371e-05, 9.173708531307057e-05, 0.006421068217605352, 0.013173583894968033, 0.0022916814778000116, 0.029246419668197632, 0.00011205903138034046, 0.006293043959885836, 0.0004674949450418353, 0.0027499613352119923, 7.067550995998317e-06, 0.004653966519981623, 2.239661080238875e-05, 0.00045835613855160773, 9.000585123430938e-06, 0.0007596656214445829, 6.297305662883446e-05, 0.018529867753386497, 0.00040129205444827676, 0.002811589976772666, 0.0013513953890651464, 0.00011434014595579356, 0.0018308247672393918, 0.0009187186951749027, 1.2265580153325573e-05, 0.0012393724173307419, 0.0008780615171417594, 0.00581663753837347, 4.72880456072744e-05, 1.1916538824152667e-05, 1.160069018624199e-06, 0.5972937345504761, 7.948679922265e-06, 0.00021399477554950863, 0.00015220229397527874], "target_probs": 0.598212480545044}}


{"result": {"time": "2021-02-21 06:41:45.757336", "n_pass": [893, 282, 10], "n_token": 194, "loss": [0.9405338764190674, 0.23322995007038116], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def plot_ibound(", "self", ",", "ibound", "=", "None", ",", "color_noflow", "=", ",", "color_ch", "=", "'blue'", ",", "**kwargs", ")", ":", "#NEWLINE#", "#INDENT#", "\"\\n        Make a plot of ibound.  If not specified, then pull ibound from the\\n        self.ml\\n\\n        Parameters\\n        ----------\\n        ibound : numpy.ndarray\\n            ibound array to plot.  (Default is ibound in 'BAS6' package.)\\n        color_noflow : string\\n            (Default is 'black')\\n        color_ch : string\\n            Color for constant heads (Default is 'blue'.)\\n\\n        Returns\\n        -------\\n        quadmesh : matplotlib.collections.QuadMesh\\n\\n        \"", "#NEWLINE#", "if", "(", "'ax'", "in", "kwargs", ")", ":", "#NEWLINE#", "#INDENT#", "ax", "=", "kwargs", ".", "else", ":", "#NEWLINE#", "#INDENT#", "ax", "=", "self", ".", "ax", "#NEWLINE#", "#UNINDENT#", "if", "(", "ibound", "is", "None", ")", ":", "#NEWLINE#", "#INDENT#", "bas", "=", "self", ".", "model", ".", "get_package", "(", "'BAS6'", ")", "#NEWLINE#", "ibound", "=", "bas", ".", "ibound", ".", "array", "#NEWLINE#", "#UNINDENT#", "plotarray", "=", "np", ".", "zeros", "(", "ibound", ".", "shape", ",", "dtype", "=", "np", ".", "int", ")", "#NEWLINE#", "idx1", "=", "(", "ibound", "==", "0", ")", "#NEWLINE#", "idx2", "=", "(", "ibound", "<", "0", ")", "#NEWLINE#", "plotarray", "[", "idx1", "]", "=", "1", "#NEWLINE#", "plotarray", "[", "idx2", "]", "=", "2", "#NEWLINE#", "plotarray", "=", "np", ".", "ma", ".", "masked_equal", "(", "plotarray", ",", "0", ")", "cmap", "=", "matplotlib", ".", "colors", ".", "ListedColormap", "(", "[", "'0'", ",", "color_noflow", ",", "color_ch", "]", ")", "#NEWLINE#", "bounds", "=", "[", "0", ",", "1", ",", "2", ",", "3", "]", "norm", ".", "(", "bounds", ",", "cmap", ".", "N", ")", "#NEWLINE#", "quadmesh", "=", "self", ".", "plot_array", "(", "plotarray", ",", "cmap", "=", "cmap", ",", "norm", "=", "cmap", ",", "**", "kwargs", ")", "#NEWLINE#", "return", "quadmesh"]}}
{"position": {"error_location": 167, "repair_targets": [162, 184], "repair_candidates": [134, 167, 180, 182, 186, 92, 110, 151, 165, 11, 147, 55, 68, 100, 117, 4, 48, 66, 70, 81, 95, 103, 172, 193, 2, 41, 57, 174, 162, 184, 31, 39, 43, 8, 145, 26, 33, 189, 75, 108, 115, 122, 130, 178]}}
{"prediction": {"error_location": 0.3904193043708801, "repair_targets": [0.032551880925893784, 0.7594195604324341], "repair_candidates": [0.045504823327064514, 0.004893600009381771, 0.004256794229149818, 0.00076499447459355, 0.0010192967019975185, 0.002348269335925579, 0.0028557239565998316, 0.0021560739260166883, 0.07932939380407333, 5.620324009214528e-05, 3.0043542210478336e-05, 0.007028913125395775, 0.005295978393405676, 0.0013611740432679653, 0.021049458533525467, 5.143838279764168e-05, 0.003976820502430201, 0.00019765700562857091, 0.001956692198291421, 4.468901352083776e-06, 0.003069030586630106, 1.6224224964389578e-05, 0.00029640039429068565, 5.99985560256755e-06, 0.0004733845416922122, 3.981618647230789e-05, 0.011635678820312023, 0.0003076573193538934, 0.001323965610936284, 0.0007594198687002063, 6.966778164496645e-05, 0.0013512364821508527, 0.032551880925893784, 1.7286778529523872e-05, 0.0004558468353934586, 0.0005806144326925278, 0.0032274960540235043, 2.8961034331587143e-05, 1.0692054274841212e-05, 8.784854230725614e-07, 0.7594195604324341, 6.1526034187409095e-06, 0.00011500371329020709, 9.916322596836835e-05], "target_probs": 0.7919714450836182}}


{"result": {"time": "2021-02-21 06:41:45.925496", "n_pass": [896, 284, 11], "n_token": 193, "loss": [1.2656760215759277, 0.23677681386470795], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def plot_ibound(", "self", ",", "ibound", "=", "None", ",", "color_noflow", "=", ",", "color_ch", "=", "'blue'", ",", "**kwargs", ")", ":", "#NEWLINE#", "#INDENT#", "\"\\n        Make a plot of ibound.  If not specified, then pull ibound from the\\n        self.ml\\n\\n        Parameters\\n        ----------\\n        ibound : numpy.ndarray\\n            ibound array to plot.  (Default is ibound in 'BAS6' package.)\\n        color_noflow : string\\n            (Default is 'black')\\n        color_ch : string\\n            Color for constant heads (Default is 'blue'.)\\n\\n        Returns\\n        -------\\n        quadmesh : matplotlib.collections.QuadMesh\\n\\n        \"", "#NEWLINE#", "if", "(", "'ax'", "in", "kwargs", ")", ":", "#NEWLINE#", "#INDENT#", "ax", "=", "kwargs", ".", "else", ":", "#NEWLINE#", "#INDENT#", "ax", "=", "self", ".", "ax", "#NEWLINE#", "#UNINDENT#", "if", "(", "ibound", "is", "None", ")", ":", "#NEWLINE#", "#INDENT#", "bas", "=", "self", ".", "model", ".", "get_package", "(", "'BAS6'", ")", "#NEWLINE#", "ibound", "=", "bas", ".", "ibound", ".", "array", "#NEWLINE#", "#UNINDENT#", "plotarray", "=", "np", ".", "zeros", "(", "ibound", ".", "shape", ",", "dtype", "=", "np", ".", "int", ")", "#NEWLINE#", "idx1", "=", "(", "ibound", "==", "0", ")", "#NEWLINE#", "idx2", "=", "(", "ibound", "<", "0", ")", "#NEWLINE#", "plotarray", "[", "idx1", "]", "=", "1", "#NEWLINE#", "plotarray", "[", "idx2", "]", "=", "2", "#NEWLINE#", "plotarray", "=", "np", ".", "ma", ".", "masked_equal", "(", "plotarray", ",", "0", ")", "cmap", "=", "matplotlib", ".", "colors", ".", "ListedColormap", "(", "[", "'0'", ",", "color_noflow", ",", "color_ch", "]", ")", "#NEWLINE#", "bounds", "=", "[", "0", ",", "1", ",", "2", ",", "3", "]", "norm", ".", "(", "bounds", "cmap", ".", "N", ")", "#NEWLINE#", "quadmesh", "=", "self", ".", "plot_array", "(", "plotarray", ",", "cmap", "=", "cmap", ",", "norm", "=", "cmap", ",", "**", "kwargs", ")", "#NEWLINE#", "return", "quadmesh"]}}
{"position": {"error_location": 166, "repair_targets": [162, 183], "repair_candidates": [134, 166, 179, 181, 185, 92, 110, 151, 165, 11, 147, 55, 68, 100, 117, 4, 48, 66, 70, 81, 95, 103, 171, 192, 2, 41, 57, 173, 162, 183, 31, 39, 43, 8, 145, 26, 33, 188, 75, 108, 115, 122, 130, 177]}}
{"prediction": {"error_location": 0.2820485532283783, "repair_targets": [0.0053619216196238995, 0.7838054895401001], "repair_candidates": [0.03197834640741348, 0.004676960874348879, 0.004736118484288454, 0.0008019778179004788, 0.0009686087723821402, 0.0020762428175657988, 0.0021881582215428352, 0.001736453385092318, 0.05008040368556976, 5.771090945927426e-05, 2.2300413547782227e-05, 0.0039682514034211636, 0.003965991083532572, 0.0013440812472254038, 0.006074694450944662, 4.789232480106875e-05, 0.0036835800856351852, 0.0004849401011597365, 0.0025071538984775543, 5.457145107357064e-06, 0.002697897609323263, 1.1710099897754844e-05, 0.00025850156089290977, 2.8549047783599235e-06, 0.000498359848279506, 2.650448186614085e-05, 0.02089996263384819, 0.000721386750228703, 0.000858872605022043, 0.0009153845021501184, 8.540123963030055e-05, 0.012685108929872513, 0.0053619216196238995, 0.0443287119269371, 0.0012959748273715377, 0.0006743763224221766, 0.002892848802730441, 8.310426346724853e-05, 1.0713589290389791e-05, 2.8577733246493153e-06, 0.7838054895401001, 9.84014059213223e-06, 0.00012629431148525327, 0.0003406556788831949], "target_probs": 0.7891674041748047}}


{"result": {"time": "2021-02-21 06:41:46.011977", "n_pass": [898, 285, 12], "n_token": 192, "loss": [1.3047361373901367, 0.11288318783044815], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def plot_ibound(", "self", ",", "ibound", "=", "None", ",", "color_noflow", "=", ",", "color_ch", "=", "'blue'", ",", "**kwargs", ")", ":", "#NEWLINE#", "#INDENT#", "\"\\n        Make a plot of ibound.  If not specified, then pull ibound from the\\n        self.ml\\n\\n        Parameters\\n        ----------\\n        ibound : numpy.ndarray\\n            ibound array to plot.  (Default is ibound in 'BAS6' package.)\\n        color_noflow : string\\n            (Default is 'black')\\n        color_ch : string\\n            Color for constant heads (Default is 'blue'.)\\n\\n        Returns\\n        -------\\n        quadmesh : matplotlib.collections.QuadMesh\\n\\n        \"", "#NEWLINE#", "if", "(", "'ax'", "in", "kwargs", ")", ":", "#NEWLINE#", "#INDENT#", "ax", "=", "kwargs", ".", "else", ":", "#NEWLINE#", "#INDENT#", "ax", "=", "self", ".", "ax", "#NEWLINE#", "#UNINDENT#", "if", "(", "ibound", "is", "None", ")", ":", "#NEWLINE#", "#INDENT#", "bas", "=", "self", ".", "model", ".", "get_package", "(", "'BAS6'", ")", "#NEWLINE#", "ibound", "=", "bas", ".", "ibound", ".", "array", "#NEWLINE#", "#UNINDENT#", "plotarray", "=", "np", ".", "zeros", "(", "ibound", ".", "shape", ",", "dtype", "=", "np", ".", "int", ")", "#NEWLINE#", "idx1", "=", "(", "ibound", "==", "0", ")", "#NEWLINE#", "idx2", "=", "(", "ibound", "<", "0", ")", "#NEWLINE#", "plotarray", "[", "idx1", "]", "=", "1", "#NEWLINE#", "plotarray", "[", "idx2", "]", "=", "2", "#NEWLINE#", "plotarray", "=", "np", ".", "ma", ".", "masked_equal", "(", "plotarray", ",", "0", ")", "cmap", "=", "matplotlib", ".", "colors", ".", "ListedColormap", "(", "[", "'0'", ",", "color_noflow", ",", "color_ch", "]", ")", "#NEWLINE#", "bounds", "=", "[", "0", ",", "1", ",", "2", ",", "3", "]", "norm", ".", "(", "bounds", "cmap", "N", ")", "#NEWLINE#", "quadmesh", "=", "self", ".", "plot_array", "(", "plotarray", ",", "cmap", "=", "cmap", ",", "norm", "=", "cmap", ",", "**", "kwargs", ")", "#NEWLINE#", "return", "quadmesh"]}}
{"position": {"error_location": 166, "repair_targets": [162, 182], "repair_candidates": [134, 166, 178, 180, 184, 92, 110, 151, 165, 11, 147, 55, 68, 100, 117, 4, 48, 66, 70, 81, 95, 103, 170, 191, 2, 41, 57, 172, 162, 182, 31, 39, 43, 8, 145, 26, 33, 187, 75, 108, 115, 122, 130, 176]}}
{"prediction": {"error_location": 0.271244078874588, "repair_targets": [0.0011038995580747724, 0.8921511173248291], "repair_candidates": [0.025047769770026207, 0.002850180957466364, 0.0029205591417849064, 0.0005126997129991651, 0.0007642701384611428, 0.0009160132030956447, 0.001512876246124506, 0.000848503434099257, 0.04669182747602463, 3.407493932172656e-05, 3.044558070541825e-05, 0.0006326675065793097, 0.000469149905256927, 0.0006683498504571617, 0.000335815129801631, 5.2506107749650255e-05, 0.0018113001715391874, 9.82536657829769e-05, 0.0010782794561237097, 3.2958423616946675e-06, 0.0014307035598903894, 1.3643247257277835e-05, 0.0001375789288431406, 5.454096481116721e-06, 0.00020275762653909624, 3.147893221466802e-05, 0.0024616639129817486, 6.207700789673254e-05, 0.00045684861834160984, 0.00014346849638968706, 4.27468003181275e-05, 0.012750494293868542, 0.0011038995580747724, 0.00010679625120246783, 4.384046405903064e-05, 0.00037114336737431586, 0.0009922374738380313, 1.805582724045962e-05, 1.2450187568902038e-05, 1.876942178569152e-06, 0.8921511173248291, 2.023377783189062e-05, 0.00015372002962976694, 6.765442321921e-06], "target_probs": 0.8932549953460693}}


{"result": {"time": "2021-02-21 06:41:46.100527", "n_pass": [899, 286, 13], "n_token": 191, "loss": [0.8473436832427979, 0.05096866935491562], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def plot_ibound(", "self", ",", "ibound", "=", "None", ",", "color_noflow", "=", ",", "color_ch", "=", "'blue'", ",", "**kwargs", ")", ":", "#NEWLINE#", "#INDENT#", "\"\\n        Make a plot of ibound.  If not specified, then pull ibound from the\\n        self.ml\\n\\n        Parameters\\n        ----------\\n        ibound : numpy.ndarray\\n            ibound array to plot.  (Default is ibound in 'BAS6' package.)\\n        color_noflow : string\\n            (Default is 'black')\\n        color_ch : string\\n            Color for constant heads (Default is 'blue'.)\\n\\n        Returns\\n        -------\\n        quadmesh : matplotlib.collections.QuadMesh\\n\\n        \"", "#NEWLINE#", "if", "(", "'ax'", "in", "kwargs", ")", ":", "#NEWLINE#", "#INDENT#", "ax", "=", "kwargs", ".", "else", ":", "#NEWLINE#", "#INDENT#", "ax", "=", "self", ".", "ax", "#NEWLINE#", "#UNINDENT#", "if", "(", "ibound", "is", "None", ")", ":", "#NEWLINE#", "#INDENT#", "bas", "=", "self", ".", "model", ".", "get_package", "(", "'BAS6'", ")", "#NEWLINE#", "ibound", "=", "bas", ".", "ibound", ".", "array", "#NEWLINE#", "#UNINDENT#", "plotarray", "=", "np", ".", "zeros", "(", "ibound", ".", "shape", ",", "dtype", "=", "np", ".", "int", ")", "#NEWLINE#", "idx1", "=", "(", "ibound", "==", "0", ")", "#NEWLINE#", "idx2", "=", "(", "ibound", "<", "0", ")", "#NEWLINE#", "plotarray", "[", "idx1", "]", "=", "1", "#NEWLINE#", "plotarray", "[", "idx2", "]", "=", "2", "#NEWLINE#", "plotarray", "=", "np", ".", "ma", ".", "masked_equal", "(", "plotarray", ",", "0", ")", "cmap", "=", "matplotlib", ".", "colors", ".", "ListedColormap", "(", "[", "'0'", ",", "color_noflow", ",", "color_ch", "]", ")", "#NEWLINE#", "bounds", "=", "[", "0", ",", "1", ",", "2", ",", "3", "]", "norm", ".", "(", "bounds", "cmap", ")", "#NEWLINE#", "quadmesh", "=", "self", ".", "plot_array", "(", "plotarray", ",", "cmap", "=", "cmap", ",", "norm", "=", "cmap", ",", "**", "kwargs", ")", "#NEWLINE#", "return", "quadmesh"]}}
{"position": {"error_location": 166, "repair_targets": [162, 181], "repair_candidates": [134, 166, 177, 179, 183, 92, 110, 151, 165, 11, 147, 55, 68, 100, 117, 4, 48, 66, 70, 81, 95, 103, 169, 190, 2, 41, 57, 171, 162, 181, 31, 39, 43, 8, 145, 26, 33, 186, 75, 108, 115, 122, 130, 175]}}
{"prediction": {"error_location": 0.4285517930984497, "repair_targets": [0.013759325258433819, 0.9365491271018982], "repair_candidates": [0.013065394014120102, 0.0013754719402641058, 0.0016598455840721726, 0.00026261984021402895, 0.00045508533366955817, 0.00048571149818599224, 0.00074823631439358, 0.00040190949221141636, 0.02276138961315155, 2.0538553144433536e-05, 1.0518577255425043e-05, 0.00034941622288897634, 0.0001259899145225063, 0.00034008536022156477, 9.62288977461867e-05, 3.4624830732354894e-05, 0.0009406562894582748, 4.16069378843531e-05, 0.0007732931990176439, 2.4240762286353856e-06, 0.0011128908954560757, 1.3118550668878015e-05, 0.00010086779366247356, 3.982681391789811e-06, 0.00015001562132965773, 2.9743474442511797e-05, 0.001643338124267757, 3.489889422780834e-05, 0.00019257723761256784, 4.858367901761085e-05, 2.0343381038401276e-05, 0.001428466523066163, 0.013759325258433819, 5.29753633600194e-05, 3.5323810152476653e-05, 0.0002805516996886581, 0.0004922933876514435, 9.05947217688663e-06, 5.092256287753116e-06, 7.356239279943111e-07, 0.9365491271018982, 1.567682011227589e-05, 6.490794476121664e-05, 5.092484570923261e-06], "target_probs": 0.9503084421157837}}


{"result": {"time": "2021-02-21 06:41:46.186328", "n_pass": [900, 287, 14], "n_token": 190, "loss": [0.2864897847175598, 0.03166268765926361], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def plot_ibound(", "self", ",", "ibound", "=", "None", ",", "color_noflow", "=", ",", "color_ch", "=", "'blue'", ",", "**kwargs", ")", ":", "#NEWLINE#", "#INDENT#", "\"\\n        Make a plot of ibound.  If not specified, then pull ibound from the\\n        self.ml\\n\\n        Parameters\\n        ----------\\n        ibound : numpy.ndarray\\n            ibound array to plot.  (Default is ibound in 'BAS6' package.)\\n        color_noflow : string\\n            (Default is 'black')\\n        color_ch : string\\n            Color for constant heads (Default is 'blue'.)\\n\\n        Returns\\n        -------\\n        quadmesh : matplotlib.collections.QuadMesh\\n\\n        \"", "#NEWLINE#", "if", "(", "'ax'", "in", "kwargs", ")", ":", "#NEWLINE#", "#INDENT#", "ax", "=", "kwargs", ".", "else", ":", "#NEWLINE#", "#INDENT#", "ax", "=", "self", ".", "ax", "#NEWLINE#", "#UNINDENT#", "if", "(", "ibound", "is", "None", ")", ":", "#NEWLINE#", "#INDENT#", "bas", "=", "self", ".", "model", ".", "get_package", "(", "'BAS6'", ")", "#NEWLINE#", "ibound", "=", "bas", ".", "ibound", ".", "array", "#NEWLINE#", "#UNINDENT#", "plotarray", "=", "np", ".", "zeros", "(", "ibound", ".", "shape", ",", "dtype", "=", "np", ".", "int", ")", "#NEWLINE#", "idx1", "=", "(", "ibound", "==", "0", ")", "#NEWLINE#", "idx2", "=", "(", "ibound", "<", "0", ")", "#NEWLINE#", "plotarray", "[", "idx1", "]", "=", "1", "#NEWLINE#", "plotarray", "[", "idx2", "]", "=", "2", "#NEWLINE#", "plotarray", "=", "np", ".", "ma", ".", "masked_equal", "(", "plotarray", ",", "0", ")", "cmap", "=", "matplotlib", ".", "colors", ".", "ListedColormap", "(", "[", "'0'", ",", "color_noflow", ",", "color_ch", "]", ")", "#NEWLINE#", "bounds", "=", "[", "0", ",", "1", ",", "2", ",", "3", "]", "norm", ".", "(", "bounds", "cmap", "#NEWLINE#", "quadmesh", "=", "self", ".", "plot_array", "(", "plotarray", ",", "cmap", "=", "cmap", ",", "norm", "=", "cmap", ",", "**", "kwargs", ")", "#NEWLINE#", "return", "quadmesh"]}}
{"position": {"error_location": 166, "repair_targets": [162, 180], "repair_candidates": [134, 166, 176, 178, 182, 92, 110, 151, 165, 11, 147, 55, 68, 100, 117, 4, 48, 66, 70, 81, 95, 103, 168, 189, 2, 41, 57, 170, 162, 180, 31, 39, 43, 8, 145, 26, 33, 185, 75, 108, 115, 122, 130, 174]}}
{"prediction": {"error_location": 0.7508948445320129, "repair_targets": [0.007187912706285715, 0.9616454243659973], "repair_candidates": [0.008097217418253422, 0.0008490979089401662, 0.0009820220293477178, 0.00016387570940423757, 0.0003088098019361496, 0.0003291616158094257, 0.0005019419477321208, 0.00027260585920885205, 0.013983932323753834, 1.2096494174329564e-05, 6.762726115994155e-06, 0.0002639310550875962, 7.396268483716995e-05, 0.00023150832566898316, 5.5064087064238265e-05, 2.4425058654742315e-05, 0.0006952937110327184, 2.3647944544791244e-05, 0.0004996840725652874, 1.2305437167015043e-06, 0.0007523566600866616, 7.829338755982462e-06, 6.770344771211967e-05, 2.250449824714451e-06, 9.4969967904035e-05, 1.5086149687704165e-05, 0.0011294626165181398, 2.5908606403390877e-05, 0.00011040416575269774, 2.556703839218244e-05, 1.5104663361853454e-05, 0.0009764914284460247, 0.007187912706285715, 2.6570456611807458e-05, 7.993457074917387e-06, 0.000191047482076101, 0.0002790298021864146, 3.6753156109625706e-06, 4.3078262024209835e-06, 3.909419774572598e-07, 0.9616454243659973, 1.1113585969724227e-05, 3.8993886846583337e-05, 4.162891400483204e-06], "target_probs": 0.968833327293396}}


{"result": {"time": "2021-02-21 06:41:46.353370", "n_pass": [903, 289, 15], "n_token": 189, "loss": [0.14010891318321228, 0.010353934951126575], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def plot_ibound(", "self", ",", "ibound", "=", "None", ",", "color_noflow", "=", ",", "color_ch", "=", "'blue'", ",", "**kwargs", ")", ":", "#NEWLINE#", "#INDENT#", "\"\\n        Make a plot of ibound.  If not specified, then pull ibound from the\\n        self.ml\\n\\n        Parameters\\n        ----------\\n        ibound : numpy.ndarray\\n            ibound array to plot.  (Default is ibound in 'BAS6' package.)\\n        color_noflow : string\\n            (Default is 'black')\\n        color_ch : string\\n            Color for constant heads (Default is 'blue'.)\\n\\n        Returns\\n        -------\\n        quadmesh : matplotlib.collections.QuadMesh\\n\\n        \"", "#NEWLINE#", "if", "(", "'ax'", "in", "kwargs", ")", ":", "#NEWLINE#", "#INDENT#", "ax", "=", "kwargs", ".", "else", ":", "#NEWLINE#", "#INDENT#", "ax", "=", "self", ".", "ax", "#NEWLINE#", "#UNINDENT#", "if", "(", "ibound", "is", "None", ")", ":", "#NEWLINE#", "#INDENT#", "bas", "=", "self", ".", "model", ".", "get_package", "(", "'BAS6'", ")", "#NEWLINE#", "ibound", "=", "bas", ".", "ibound", ".", "array", "#NEWLINE#", "#UNINDENT#", "plotarray", "=", "np", ".", "zeros", "(", "ibound", ".", "shape", ",", "dtype", "=", "np", ".", "int", ")", "#NEWLINE#", "idx1", "=", "(", "ibound", "==", "0", ")", "#NEWLINE#", "idx2", "=", "(", "ibound", "<", "0", ")", "#NEWLINE#", "plotarray", "[", "idx1", "]", "=", "1", "#NEWLINE#", "plotarray", "[", "idx2", "]", "=", "2", "#NEWLINE#", "plotarray", "=", "np", ".", "ma", ".", "masked_equal", "(", "plotarray", ",", "0", ")", "cmap", "=", "matplotlib", ".", "colors", ".", "ListedColormap", "(", "[", "'0'", ",", "color_noflow", ",", "color_ch", "]", ")", "#NEWLINE#", "bounds", "=", "[", "0", ",", "1", ",", "2", ",", "3", "]", "norm", ".", "(", "bounds", "cmap", "#NEWLINE#", "quadmesh", "self", ".", "plot_array", "(", "plotarray", ",", "cmap", "=", "cmap", ",", "norm", "=", "cmap", ",", "**", "kwargs", ")", "#NEWLINE#", "return", "quadmesh"]}}
{"position": {"error_location": 166, "repair_targets": [162, 179], "repair_candidates": [134, 166, 175, 177, 181, 92, 110, 151, 165, 11, 147, 55, 68, 100, 117, 4, 48, 66, 70, 81, 95, 103, 168, 188, 2, 41, 57, 169, 162, 179, 31, 39, 43, 8, 145, 26, 33, 184, 75, 108, 115, 122, 130, 173]}}
{"prediction": {"error_location": 0.8692633509635925, "repair_targets": [0.003187772585079074, 0.9865117073059082], "repair_candidates": [0.002486777026206255, 0.000356135715264827, 0.0005267294473014772, 7.099656068021432e-05, 7.845857908250764e-05, 0.0001130525633925572, 0.00014044389536138624, 0.00010342970927013084, 0.0027618578169494867, 3.639559281509719e-06, 3.3114142752310727e-06, 0.0001468460395699367, 2.1998826923663728e-05, 0.00014928219025023282, 1.1512241144373547e-05, 1.4616010048484895e-05, 0.00040994372102431953, 1.0066880349768326e-05, 0.00041760934982448816, 6.234495231183246e-07, 0.0006184460362419486, 5.612892437056871e-06, 4.6888511860743165e-05, 1.1772356174333254e-06, 6.819472764618695e-05, 8.207451173802838e-06, 0.0005785948596894741, 1.5096419701876584e-05, 5.531548595172353e-05, 2.58588061115006e-05, 1.0794945410452783e-05, 0.0008905536960810423, 0.003187772585079074, 3.797313911491074e-05, 4.615331818058621e-06, 3.395972089492716e-05, 2.13131497730501e-05, 9.024021892400924e-06, 3.391849759282195e-06, 4.0471718421031255e-07, 0.9865117073059082, 9.65606977842981e-06, 2.0489522285060957e-05, 7.659939910809044e-06], "target_probs": 0.9896994829177856}}


{"result": {"time": "2021-02-21 06:41:46.441045", "n_pass": [905, 290, 16], "n_token": 188, "loss": [0.28603029251098633, 0.018425190821290016], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def plot_ibound(", "self", ",", "ibound", "=", "None", ",", "color_noflow", "=", ",", "color_ch", "=", "'blue'", ",", "**kwargs", ")", ":", "#NEWLINE#", "#INDENT#", "\"\\n        Make a plot of ibound.  If not specified, then pull ibound from the\\n        self.ml\\n\\n        Parameters\\n        ----------\\n        ibound : numpy.ndarray\\n            ibound array to plot.  (Default is ibound in 'BAS6' package.)\\n        color_noflow : string\\n            (Default is 'black')\\n        color_ch : string\\n            Color for constant heads (Default is 'blue'.)\\n\\n        Returns\\n        -------\\n        quadmesh : matplotlib.collections.QuadMesh\\n\\n        \"", "#NEWLINE#", "if", "(", "'ax'", "in", "kwargs", ")", ":", "#NEWLINE#", "#INDENT#", "ax", "=", "kwargs", ".", "else", ":", "#NEWLINE#", "#INDENT#", "ax", "=", "self", ".", "ax", "#NEWLINE#", "#UNINDENT#", "if", "(", "ibound", "is", "None", ")", ":", "#NEWLINE#", "#INDENT#", "bas", "=", "self", ".", "model", ".", "get_package", "(", "'BAS6'", ")", "#NEWLINE#", "ibound", "=", "bas", ".", "ibound", ".", "array", "#NEWLINE#", "#UNINDENT#", "plotarray", "=", "np", ".", "zeros", "(", "ibound", ".", "shape", ",", "dtype", "=", "np", ".", "int", ")", "#NEWLINE#", "idx1", "=", "(", "ibound", "==", "0", ")", "#NEWLINE#", "idx2", "=", "(", "ibound", "<", "0", ")", "#NEWLINE#", "plotarray", "[", "idx1", "]", "=", "1", "#NEWLINE#", "plotarray", "[", "idx2", "]", "=", "2", "#NEWLINE#", "plotarray", "=", "np", ".", "ma", ".", "masked_equal", "(", "plotarray", ",", "0", ")", "cmap", "=", "matplotlib", ".", "colors", ".", "ListedColormap", "(", "[", "'0'", ",", "color_noflow", ",", "color_ch", "]", ")", "#NEWLINE#", "bounds", "=", "[", "0", ",", "1", ",", "2", ",", "3", "]", "norm", ".", "(", "bounds", "cmap", "#NEWLINE#", "quadmesh", "self", "plot_array", "(", "plotarray", ",", "cmap", "=", "cmap", ",", "norm", "=", "cmap", ",", "**", "kwargs", ")", "#NEWLINE#", "return", "quadmesh"]}}
{"position": {"error_location": 166, "repair_targets": [162, 178], "repair_candidates": [134, 166, 174, 176, 180, 92, 110, 151, 165, 11, 147, 55, 68, 100, 117, 4, 48, 66, 70, 81, 95, 103, 168, 187, 2, 41, 57, 169, 162, 178, 31, 39, 43, 8, 145, 26, 33, 183, 75, 108, 115, 122, 130, 172]}}
{"prediction": {"error_location": 0.7512398362159729, "repair_targets": [0.004635144025087357, 0.977108359336853], "repair_candidates": [0.005093228071928024, 0.0006295021739788353, 0.0006859035929664969, 0.000116967290523462, 0.0002475869550835341, 0.0002099270059261471, 0.00039284027297981083, 0.00017503781418781728, 0.00577830895781517, 6.917915470694425e-06, 5.3025069064460695e-06, 0.00022290274500846863, 7.584259583381936e-05, 0.00020600786956492811, 2.7887073883903213e-05, 1.934446299856063e-05, 0.0005773581797257066, 1.639713991608005e-05, 0.0004657938552554697, 1.2304095662329928e-06, 0.0006743316189385951, 7.672047104279045e-06, 6.777254020562395e-05, 2.163325689252815e-06, 9.633274021325633e-05, 1.627995152375661e-05, 0.0009060154552571476, 2.677358133951202e-05, 8.601759327575564e-05, 2.6195582904620096e-05, 1.2391713426040951e-05, 0.0010716068791225553, 0.004635144025087357, 3.0364668418769725e-05, 7.439628006977728e-06, 0.00018338994414079934, 1.1648233339656144e-05, 9.193734513246454e-06, 6.869476237625349e-06, 5.084407348476816e-07, 0.977108359336853, 1.4970871234254446e-05, 3.614976958488114e-05, 8.14020404504845e-06], "target_probs": 0.9817435145378113}}


{"result": {"time": "2021-02-21 06:41:46.526617", "n_pass": [906, 291, 17], "n_token": 187, "loss": [0.578213095664978, 0.029771195724606514], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def plot_ibound(", "self", ",", "ibound", "=", "None", ",", "color_noflow", "=", ",", "color_ch", "=", "'blue'", ",", "**kwargs", ")", ":", "#NEWLINE#", "#INDENT#", "\"\\n        Make a plot of ibound.  If not specified, then pull ibound from the\\n        self.ml\\n\\n        Parameters\\n        ----------\\n        ibound : numpy.ndarray\\n            ibound array to plot.  (Default is ibound in 'BAS6' package.)\\n        color_noflow : string\\n            (Default is 'black')\\n        color_ch : string\\n            Color for constant heads (Default is 'blue'.)\\n\\n        Returns\\n        -------\\n        quadmesh : matplotlib.collections.QuadMesh\\n\\n        \"", "#NEWLINE#", "if", "(", "'ax'", "in", "kwargs", ")", ":", "#NEWLINE#", "#INDENT#", "ax", "=", "kwargs", ".", "else", ":", "#NEWLINE#", "#INDENT#", "ax", "=", "self", ".", "ax", "#NEWLINE#", "#UNINDENT#", "if", "(", "ibound", "is", "None", ")", ":", "#NEWLINE#", "#INDENT#", "bas", "=", "self", ".", "model", ".", "get_package", "(", "'BAS6'", ")", "#NEWLINE#", "ibound", "=", "bas", ".", "ibound", ".", "array", "#NEWLINE#", "#UNINDENT#", "plotarray", "=", "np", ".", "zeros", "(", "ibound", ".", "shape", ",", "dtype", "=", "np", ".", "int", ")", "#NEWLINE#", "idx1", "=", "(", "ibound", "==", "0", ")", "#NEWLINE#", "idx2", "=", "(", "ibound", "<", "0", ")", "#NEWLINE#", "plotarray", "[", "idx1", "]", "=", "1", "#NEWLINE#", "plotarray", "[", "idx2", "]", "=", "2", "#NEWLINE#", "plotarray", "=", "np", ".", "ma", ".", "masked_equal", "(", "plotarray", ",", "0", ")", "cmap", "=", "matplotlib", ".", "colors", ".", "ListedColormap", "(", "[", "'0'", ",", "color_noflow", ",", "color_ch", "]", ")", "#NEWLINE#", "bounds", "=", "[", "0", ",", "1", ",", "2", ",", "3", "]", "norm", ".", "(", "bounds", "cmap", "#NEWLINE#", "quadmesh", "self", "(", "plotarray", ",", "cmap", "=", "cmap", ",", "norm", "=", "cmap", ",", "**", "kwargs", ")", "#NEWLINE#", "return", "quadmesh"]}}
{"position": {"error_location": 166, "repair_targets": [162, 177], "repair_candidates": [134, 166, 173, 175, 179, 92, 110, 151, 165, 11, 147, 55, 68, 100, 117, 4, 48, 66, 70, 81, 95, 103, 168, 186, 2, 41, 57, 169, 162, 177, 31, 39, 43, 8, 145, 26, 33, 182, 75, 108, 115, 122, 130, 171]}}
{"prediction": {"error_location": 0.5608997344970703, "repair_targets": [0.009256959892809391, 0.961410641670227], "repair_candidates": [0.0075221280567348, 0.0009762419504113495, 0.0010096966288983822, 0.0001754469849402085, 0.00032857622136361897, 0.0002719048352446407, 0.0006227810517884791, 0.00023087312001734972, 0.008870754390954971, 1.1401260053389706e-05, 6.910559932293836e-06, 0.0003542104095686227, 0.0001620211696717888, 0.0002738701878115535, 6.183580990182236e-05, 3.2331790862372145e-05, 0.000836067833006382, 2.6084731871378608e-05, 0.000670073670335114, 1.6832664186949842e-06, 0.000850673473905772, 1.1109907973150257e-05, 0.00011206440103705972, 2.7553030577109894e-06, 0.0001550598826725036, 1.78253303602105e-05, 0.0013730654027312994, 4.35120273323264e-05, 0.00012093258555978537, 3.473643300822005e-05, 1.6717489415896125e-05, 0.002383237238973379, 0.009256959892809391, 5.519115802599117e-05, 1.4076998922973871e-05, 0.00045580064761452377, 5.9113979659741744e-05, 0.0010689380578696728, 1.137019535235595e-05, 6.62964339426253e-07, 0.961410641670227, 2.4625878722872585e-05, 4.4838310714112595e-05, 3.104958886979148e-05], "target_probs": 0.9706676006317139}}


{"result": {"time": "2021-02-21 06:41:46.612639", "n_pass": [907, 292, 18], "n_token": 186, "loss": [0.6260525584220886, 0.021358530968427658], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def plot_ibound(", "self", ",", "ibound", "=", "None", ",", "color_noflow", "=", ",", "color_ch", "=", "'blue'", ",", "**kwargs", ")", ":", "#NEWLINE#", "#INDENT#", "\"\\n        Make a plot of ibound.  If not specified, then pull ibound from the\\n        self.ml\\n\\n        Parameters\\n        ----------\\n        ibound : numpy.ndarray\\n            ibound array to plot.  (Default is ibound in 'BAS6' package.)\\n        color_noflow : string\\n            (Default is 'black')\\n        color_ch : string\\n            Color for constant heads (Default is 'blue'.)\\n\\n        Returns\\n        -------\\n        quadmesh : matplotlib.collections.QuadMesh\\n\\n        \"", "#NEWLINE#", "if", "(", "'ax'", "in", "kwargs", ")", ":", "#NEWLINE#", "#INDENT#", "ax", "=", "kwargs", ".", "else", ":", "#NEWLINE#", "#INDENT#", "ax", "=", "self", ".", "ax", "#NEWLINE#", "#UNINDENT#", "if", "(", "ibound", "is", "None", ")", ":", "#NEWLINE#", "#INDENT#", "bas", "=", "self", ".", "model", ".", "get_package", "(", "'BAS6'", ")", "#NEWLINE#", "ibound", "=", "bas", ".", "ibound", ".", "array", "#NEWLINE#", "#UNINDENT#", "plotarray", "=", "np", ".", "zeros", "(", "ibound", ".", "shape", ",", "dtype", "=", "np", ".", "int", ")", "#NEWLINE#", "idx1", "=", "(", "ibound", "==", "0", ")", "#NEWLINE#", "idx2", "=", "(", "ibound", "<", "0", ")", "#NEWLINE#", "plotarray", "[", "idx1", "]", "=", "1", "#NEWLINE#", "plotarray", "[", "idx2", "]", "=", "2", "#NEWLINE#", "plotarray", "=", "np", ".", "ma", ".", "masked_equal", "(", "plotarray", ",", "0", ")", "cmap", "=", "matplotlib", ".", "colors", ".", "ListedColormap", "(", "[", "'0'", ",", "color_noflow", ",", "color_ch", "]", ")", "#NEWLINE#", "bounds", "=", "[", "0", ",", "1", ",", "2", ",", "3", "]", "norm", ".", "(", "bounds", "cmap", "#NEWLINE#", "quadmesh", "self", "plotarray", ",", "cmap", "=", "cmap", ",", "norm", "=", "cmap", ",", "**", "kwargs", ")", "#NEWLINE#", "return", "quadmesh"]}}
{"position": {"error_location": 166, "repair_targets": [162, 176], "repair_candidates": [134, 166, 172, 174, 178, 92, 110, 151, 165, 11, 147, 55, 68, 100, 117, 4, 48, 66, 70, 81, 95, 103, 168, 185, 2, 41, 57, 169, 162, 176, 31, 39, 43, 8, 145, 26, 33, 181, 75, 108, 115, 122, 130, 170]}}
{"prediction": {"error_location": 0.5346983075141907, "repair_targets": [0.014520715922117233, 0.964347243309021], "repair_candidates": [0.005562248639762402, 0.0006935975980013609, 0.0007202767883427441, 0.00011641501623671502, 0.0001586804137332365, 0.0002177860151277855, 0.00023533801140729338, 0.00021058759011793882, 0.006368452683091164, 4.718812306236941e-06, 4.250709025654942e-06, 0.0002719831245485693, 0.00014493847265839577, 0.00021090653899591416, 3.591905260691419e-05, 1.3561635569203645e-05, 0.0006495877169072628, 1.1957320566580165e-05, 0.0005528845940716565, 1.2829647175749415e-06, 0.0007707298500463367, 9.132436389336362e-06, 7.183923298725858e-05, 1.7139533383669914e-06, 0.00010096233745571226, 1.2798772331734654e-05, 0.0009869829518720508, 2.4661176212248392e-05, 0.00010592088801786304, 4.124813131056726e-05, 2.332687654416077e-05, 0.0012193955481052399, 0.014520715922117233, 2.443533048790414e-05, 3.932912932214094e-06, 0.0002716085873544216, 0.0010811203392222524, 0.00011904884740943089, 4.477909897104837e-06, 4.079616360286309e-07, 0.964347243309021, 1.075337604561355e-05, 5.664175841957331e-05, 5.4648262448608875e-06], "target_probs": 0.9788679480552673}}


{"result": {"time": "2021-02-21 06:41:46.698371", "n_pass": [909, 293, 19], "n_token": 185, "loss": [0.5117952823638916, 0.3817812502384186], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def plot_ibound(", "self", ",", "ibound", "=", "None", ",", "color_noflow", "=", ",", "color_ch", "=", "'blue'", ",", "**kwargs", ")", ":", "#NEWLINE#", "#INDENT#", "\"\\n        Make a plot of ibound.  If not specified, then pull ibound from the\\n        self.ml\\n\\n        Parameters\\n        ----------\\n        ibound : numpy.ndarray\\n            ibound array to plot.  (Default is ibound in 'BAS6' package.)\\n        color_noflow : string\\n            (Default is 'black')\\n        color_ch : string\\n            Color for constant heads (Default is 'blue'.)\\n\\n        Returns\\n        -------\\n        quadmesh : matplotlib.collections.QuadMesh\\n\\n        \"", "#NEWLINE#", "if", "(", "'ax'", "in", "kwargs", ")", ":", "#NEWLINE#", "#INDENT#", "ax", "=", "kwargs", ".", "else", ":", "#NEWLINE#", "#INDENT#", "ax", "=", "self", ".", "ax", "#NEWLINE#", "#UNINDENT#", "if", "(", "ibound", "is", "None", ")", ":", "#NEWLINE#", "#INDENT#", "bas", "=", "self", ".", "model", ".", "get_package", "(", "'BAS6'", ")", "#NEWLINE#", "ibound", "=", "bas", ".", "ibound", ".", "array", "#NEWLINE#", "#UNINDENT#", "plotarray", "=", "np", ".", "zeros", "(", "ibound", ".", "shape", ",", "dtype", "=", "np", ".", "int", ")", "#NEWLINE#", "idx1", "=", "(", "ibound", "==", "0", ")", "#NEWLINE#", "idx2", "=", "(", "ibound", "<", "0", ")", "#NEWLINE#", "plotarray", "[", "idx1", "]", "=", "1", "#NEWLINE#", "plotarray", "[", "idx2", "]", "=", "2", "#NEWLINE#", "plotarray", "=", "np", ".", "ma", ".", "masked_equal", "(", "plotarray", ",", "0", ")", "cmap", "=", "matplotlib", ".", "colors", ".", "ListedColormap", "(", "[", "'0'", ",", "color_noflow", ",", "color_ch", "]", ")", "#NEWLINE#", "bounds", "=", "[", "0", ",", "1", ",", "2", ",", "3", "]", "norm", ".", "(", "bounds", "cmap", "#NEWLINE#", "quadmesh", "self", "plotarray", "cmap", "=", "cmap", ",", "norm", "=", "cmap", ",", "**", "kwargs", ")", "#NEWLINE#", "return", "quadmesh"]}}
{"position": {"error_location": 166, "repair_targets": [162, 175], "repair_candidates": [134, 166, 171, 173, 177, 92, 110, 151, 165, 11, 147, 55, 68, 100, 117, 4, 48, 66, 70, 81, 95, 103, 168, 184, 2, 41, 57, 169, 162, 175, 31, 39, 43, 8, 145, 26, 33, 180, 75, 108, 115, 122, 130, 170]}}
{"prediction": {"error_location": 0.5994184613227844, "repair_targets": [0.0107434606179595, 0.6719009280204773], "repair_candidates": [0.012064599432051182, 0.0013037988683208823, 0.000990391941741109, 0.00016285304445773363, 0.0003901360323652625, 0.00033720419742166996, 0.0004515204927884042, 0.0003303517587482929, 0.016393646597862244, 1.0278220543114003e-05, 8.906423317966983e-06, 0.00037217012140899897, 0.00021607035887427628, 0.0003253211616538465, 7.930528954602778e-05, 2.9261333111207932e-05, 0.0011898056836798787, 2.8813885364797898e-05, 0.0009205485112033784, 2.6219170194963226e-06, 0.0010386105859652162, 2.5088453185162507e-05, 0.00023787560348864645, 3.132495294266846e-06, 0.0003571936977095902, 1.788876579666976e-05, 0.005152920261025429, 8.442326361546293e-05, 0.00020121349371038377, 4.587019793689251e-05, 1.423046978743514e-05, 0.0017702719196677208, 0.0107434606179595, 4.147514118812978e-05, 8.452713700535242e-06, 0.00024107471108436584, 6.52756352792494e-05, 0.27232691645622253, 1.4023736184753943e-05, 2.040695335381315e-06, 0.6719009280204773, 1.4864459444652312e-05, 7.581225509056821e-05, 9.357435374113265e-06], "target_probs": 0.6826443672180176}}


{"result": {"time": "2021-02-21 06:41:47.026809", "n_pass": [917, 297, 20], "n_token": 184, "loss": [0.5834087133407593, 0.3705115020275116], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def plot_ibound(", "self", ",", "ibound", "=", "None", ",", "color_noflow", "=", ",", "color_ch", "=", "'blue'", ",", "**kwargs", ")", ":", "#NEWLINE#", "#INDENT#", "\"\\n        Make a plot of ibound.  If not specified, then pull ibound from the\\n        self.ml\\n\\n        Parameters\\n        ----------\\n        ibound : numpy.ndarray\\n            ibound array to plot.  (Default is ibound in 'BAS6' package.)\\n        color_noflow : string\\n            (Default is 'black')\\n        color_ch : string\\n            Color for constant heads (Default is 'blue'.)\\n\\n        Returns\\n        -------\\n        quadmesh : matplotlib.collections.QuadMesh\\n\\n        \"", "#NEWLINE#", "if", "(", "'ax'", "in", "kwargs", ")", ":", "#NEWLINE#", "#INDENT#", "ax", "=", "kwargs", ".", "else", ":", "#NEWLINE#", "#INDENT#", "ax", "=", "self", ".", "ax", "#NEWLINE#", "#UNINDENT#", "if", "(", "ibound", "is", "None", ")", ":", "#NEWLINE#", "#INDENT#", "bas", "=", "self", ".", "model", ".", "get_package", "(", "'BAS6'", ")", "#NEWLINE#", "ibound", "=", "bas", ".", "ibound", ".", "array", "#NEWLINE#", "#UNINDENT#", "plotarray", "=", "np", ".", "zeros", "(", "ibound", ".", "shape", ",", "dtype", "=", "np", ".", "int", ")", "#NEWLINE#", "idx1", "=", "(", "ibound", "==", "0", ")", "#NEWLINE#", "idx2", "=", "(", "ibound", "<", "0", ")", "#NEWLINE#", "plotarray", "[", "idx1", "]", "=", "1", "#NEWLINE#", "plotarray", "[", "idx2", "]", "=", "2", "#NEWLINE#", "plotarray", "=", "np", ".", "ma", ".", "masked_equal", "(", "plotarray", ",", "0", ")", "cmap", "=", "matplotlib", ".", "colors", ".", "ListedColormap", "(", "[", "'0'", ",", "color_noflow", ",", "color_ch", "]", ")", "#NEWLINE#", "bounds", "=", "[", "0", ",", "1", ",", "2", ",", "3", "]", "norm", ".", "(", "bounds", "cmap", "#NEWLINE#", "quadmesh", "self", "plotarray", "cmap", "=", "cmap", ",", "norm", "=", "cmap", "**", "kwargs", ")", "#NEWLINE#", "return", "quadmesh"]}}
{"position": {"error_location": 166, "repair_targets": [162, 175], "repair_candidates": [134, 166, 171, 173, 177, 92, 110, 151, 165, 11, 147, 55, 68, 100, 117, 4, 48, 66, 70, 81, 95, 103, 168, 183, 2, 41, 57, 169, 162, 175, 31, 39, 43, 8, 145, 26, 33, 179, 75, 108, 115, 122, 130, 170]}}
{"prediction": {"error_location": 0.5579929947853088, "repair_targets": [0.010047328658401966, 0.6803337931632996], "repair_candidates": [0.014118659310042858, 0.001418844098225236, 0.0011017255019396544, 0.00018765956338029355, 0.0004211299819871783, 0.00036648489185608923, 0.0004919952480122447, 0.00036763676325790584, 0.019980676472187042, 1.13129717647098e-05, 9.24977121030679e-06, 0.00039221972110681236, 0.0002594349207356572, 0.0003309365129098296, 9.090440289583057e-05, 2.891511576308403e-05, 0.0012751423055306077, 3.002275298058521e-05, 0.0009513776167295873, 2.525208856241079e-06, 0.0010586499702185392, 2.256467087136116e-05, 0.0002639905724208802, 3.2424263736174908e-06, 0.00037839182186871767, 1.7913716874318197e-05, 0.005212863441556692, 8.297734166262671e-05, 0.00026356871239840984, 3.915492561645806e-05, 1.5308814909076318e-05, 0.0017012853641062975, 0.010047328658401966, 3.7021003663539886e-05, 9.286558452004101e-06, 0.000342897285008803, 7.522152009187266e-05, 0.25814369320869446, 1.4523025129165035e-05, 1.9462972886685748e-06, 0.6803337931632996, 8.249576239904854e-06, 7.930312858661637e-05, 1.0016067790274974e-05], "target_probs": 0.6903811097145081}}


{"result": {"time": "2021-02-21 06:41:47.112558", "n_pass": [918, 298, 21], "n_token": 183, "loss": [1.1323844194412231, 0.5662033557891846], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def plot_ibound(", "self", ",", "ibound", "=", "None", ",", "color_noflow", "=", ",", "color_ch", "=", "'blue'", ",", "**kwargs", ")", ":", "#NEWLINE#", "#INDENT#", "\"\\n        Make a plot of ibound.  If not specified, then pull ibound from the\\n        self.ml\\n\\n        Parameters\\n        ----------\\n        ibound : numpy.ndarray\\n            ibound array to plot.  (Default is ibound in 'BAS6' package.)\\n        color_noflow : string\\n            (Default is 'black')\\n        color_ch : string\\n            Color for constant heads (Default is 'blue'.)\\n\\n        Returns\\n        -------\\n        quadmesh : matplotlib.collections.QuadMesh\\n\\n        \"", "#NEWLINE#", "if", "(", "'ax'", "in", "kwargs", ")", ":", "#NEWLINE#", "#INDENT#", "ax", "=", "kwargs", ".", "else", ":", "#NEWLINE#", "#INDENT#", "ax", "=", "self", ".", "ax", "#NEWLINE#", "#UNINDENT#", "if", "(", "ibound", "is", "None", ")", ":", "#NEWLINE#", "#INDENT#", "bas", "=", "self", ".", "model", ".", "get_package", "(", "'BAS6'", ")", "#NEWLINE#", "ibound", "=", "bas", ".", "ibound", ".", "array", "#NEWLINE#", "#UNINDENT#", "plotarray", "=", "np", ".", "zeros", "(", "ibound", ".", "shape", ",", "dtype", "=", "np", ".", "int", ")", "#NEWLINE#", "idx1", "=", "(", "ibound", "==", "0", ")", "#NEWLINE#", "idx2", "=", "(", "ibound", "<", "0", ")", "#NEWLINE#", "plotarray", "[", "idx1", "]", "=", "1", "#NEWLINE#", "plotarray", "[", "idx2", "]", "=", "2", "#NEWLINE#", "plotarray", "=", "np", ".", "ma", ".", "masked_equal", "(", "plotarray", ",", "0", ")", "cmap", "=", "matplotlib", ".", "colors", ".", "ListedColormap", "(", "[", "'0'", ",", "color_noflow", ",", "color_ch", "]", ")", "#NEWLINE#", "bounds", "=", "[", "0", ",", "1", ",", "2", ",", "3", "]", "norm", ".", "(", "bounds", "cmap", "#NEWLINE#", "quadmesh", "self", "plotarray", "cmap", "=", "cmap", ",", "norm", "=", "cmap", "kwargs", ")", "#NEWLINE#", "return", "quadmesh"]}}
{"position": {"error_location": 166, "repair_targets": [162, 175], "repair_candidates": [134, 166, 171, 173, 177, 92, 110, 151, 165, 11, 147, 55, 68, 100, 117, 4, 48, 66, 70, 81, 95, 103, 168, 182, 2, 41, 57, 169, 162, 175, 31, 39, 43, 8, 145, 26, 33, 178, 75, 108, 115, 122, 130, 170]}}
{"prediction": {"error_location": 0.3222639560699463, "repair_targets": [0.022959357127547264, 0.5447172522544861], "repair_candidates": [0.010635053738951683, 0.0013335637049749494, 0.001156643615104258, 0.00025498520699329674, 0.0005380251677706838, 0.0003602157230488956, 0.000801414716988802, 0.0003376358945388347, 0.014198442921042442, 1.3585047781816684e-05, 1.0803091754496563e-05, 0.0004447243409231305, 0.00017575437959749252, 0.00040720394463278353, 8.579556015320122e-05, 5.0200320401927456e-05, 0.001544459373690188, 3.7267909647198394e-05, 0.0011523918947204947, 3.4892248095275136e-06, 0.0014030158054083586, 3.7716919905506074e-05, 0.0002972733636852354, 4.076964160049101e-06, 0.0004293869133107364, 2.3273625629371963e-05, 0.005618643015623093, 8.287722448585555e-05, 0.0006974850548431277, 4.088959394721314e-05, 1.8757129510049708e-05, 0.002916467608883977, 0.022959357127547264, 4.8611753300065175e-05, 1.0721066246333066e-05, 0.0003514901618473232, 5.699051689589396e-05, 0.38585832715034485, 2.999651405843906e-05, 2.8429299163690303e-06, 0.5447172522544861, 2.2540409190696664e-05, 0.0008204779587686062, 9.893875358102378e-06], "target_probs": 0.5676766037940979}}


{"result": {"time": "2021-02-21 06:41:47.197314", "n_pass": [920, 299, 22], "n_token": 182, "loss": [1.0239497423171997, 0.40355992317199707], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def plot_ibound(", "self", ",", "ibound", "=", "None", ",", "color_noflow", "=", ",", "color_ch", "=", "'blue'", ",", "**kwargs", ")", ":", "#NEWLINE#", "#INDENT#", "\"\\n        Make a plot of ibound.  If not specified, then pull ibound from the\\n        self.ml\\n\\n        Parameters\\n        ----------\\n        ibound : numpy.ndarray\\n            ibound array to plot.  (Default is ibound in 'BAS6' package.)\\n        color_noflow : string\\n            (Default is 'black')\\n        color_ch : string\\n            Color for constant heads (Default is 'blue'.)\\n\\n        Returns\\n        -------\\n        quadmesh : matplotlib.collections.QuadMesh\\n\\n        \"", "#NEWLINE#", "if", "(", "'ax'", "in", "kwargs", ")", ":", "#NEWLINE#", "#INDENT#", "ax", "=", "kwargs", ".", "else", ":", "#NEWLINE#", "#INDENT#", "ax", "=", "self", ".", "ax", "#NEWLINE#", "#UNINDENT#", "if", "(", "ibound", "is", "None", ")", ":", "#NEWLINE#", "#INDENT#", "bas", "=", "self", ".", "model", ".", "get_package", "(", "'BAS6'", ")", "#NEWLINE#", "ibound", "=", "bas", ".", "ibound", ".", "array", "#NEWLINE#", "#UNINDENT#", "plotarray", "=", "np", ".", "zeros", "(", "ibound", ".", "shape", ",", "dtype", "=", "np", ".", "int", ")", "#NEWLINE#", "idx1", "=", "(", "ibound", "==", "0", ")", "#NEWLINE#", "idx2", "=", "(", "ibound", "<", "0", ")", "#NEWLINE#", "plotarray", "[", "idx1", "]", "=", "1", "#NEWLINE#", "plotarray", "[", "idx2", "]", "=", "2", "#NEWLINE#", "plotarray", "=", "np", ".", "ma", ".", "masked_equal", "(", "plotarray", ",", "0", ")", "cmap", "=", "matplotlib", ".", "colors", ".", "ListedColormap", "(", "[", "'0'", ",", "color_noflow", ",", "color_ch", "]", ")", "#NEWLINE#", "bounds", "=", "[", "0", ",", "1", ",", "2", ",", "3", "]", "norm", ".", "(", "bounds", "cmap", "#NEWLINE#", "quadmesh", "self", "plotarray", "cmap", "=", "cmap", ",", "norm", "=", "cmap", "kwargs", "#NEWLINE#", "return", "quadmesh"]}}
{"position": {"error_location": 166, "repair_targets": [162, 175], "repair_candidates": [134, 166, 171, 173, 177, 92, 110, 151, 165, 11, 147, 55, 68, 100, 117, 4, 48, 66, 70, 81, 95, 103, 168, 181, 2, 41, 57, 169, 162, 175, 31, 39, 43, 8, 145, 26, 33, 178, 75, 108, 115, 122, 130, 170]}}
{"prediction": {"error_location": 0.3591735064983368, "repair_targets": [0.015246733091771603, 0.6526912450790405], "repair_candidates": [0.007847614586353302, 0.0009140834445133805, 0.0008842405513860285, 0.0001857568131526932, 0.0003915471024811268, 0.0002594997058622539, 0.0006665944238193333, 0.00024463620502501726, 0.01045987382531166, 9.671060979599133e-06, 7.256627213791944e-06, 0.0003055051201954484, 0.00015021627768874168, 0.00028793580713681877, 6.540183676406741e-05, 3.3241532946703956e-05, 0.0010715803364291787, 2.567394039942883e-05, 0.0008112974464893341, 2.506670853108517e-06, 0.0009717477369122207, 2.571285040176008e-05, 0.0002077601820928976, 2.7185690214537317e-06, 0.0002914523065555841, 1.5585121218464337e-05, 0.0035416996106505394, 5.1113242079736665e-05, 0.0004273168742656708, 2.853539990610443e-05, 1.7001430023810826e-05, 0.002030306728556752, 0.015246733091771603, 2.955875424959231e-05, 9.001199032354634e-06, 0.00027350796153768897, 4.692030051955953e-05, 0.29930710792541504, 1.5727247955510393e-05, 2.096966227327357e-06, 0.6526912450790405, 6.982012564549223e-06, 0.0001282231096411124, 7.823839041520841e-06], "target_probs": 0.6679379940032959}}


{"result": {"time": "2021-02-21 06:41:47.603898", "n_pass": [927, 304, 23], "n_token": 181, "loss": [0.9933091998100281, 0.5400428771972656], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def plot_ibound(", "self", "ibound", "=", "None", ",", "color_noflow", "=", ",", "color_ch", "=", "'blue'", ",", "**kwargs", ")", ":", "#NEWLINE#", "#INDENT#", "\"\\n        Make a plot of ibound.  If not specified, then pull ibound from the\\n        self.ml\\n\\n        Parameters\\n        ----------\\n        ibound : numpy.ndarray\\n            ibound array to plot.  (Default is ibound in 'BAS6' package.)\\n        color_noflow : string\\n            (Default is 'black')\\n        color_ch : string\\n            Color for constant heads (Default is 'blue'.)\\n\\n        Returns\\n        -------\\n        quadmesh : matplotlib.collections.QuadMesh\\n\\n        \"", "#NEWLINE#", "if", "(", "'ax'", "in", "kwargs", ")", ":", "#NEWLINE#", "#INDENT#", "ax", "=", "kwargs", ".", "else", ":", "#NEWLINE#", "#INDENT#", "ax", "=", "self", ".", "ax", "#NEWLINE#", "#UNINDENT#", "if", "(", "ibound", "is", "None", ")", ":", "#NEWLINE#", "#INDENT#", "bas", "=", "self", ".", "model", ".", "get_package", "(", "'BAS6'", ")", "#NEWLINE#", "ibound", "=", "bas", ".", "ibound", ".", "array", "#NEWLINE#", "#UNINDENT#", "plotarray", "=", "np", ".", "zeros", "(", "ibound", ".", "shape", ",", "dtype", "=", "np", ".", "int", ")", "#NEWLINE#", "idx1", "=", "(", "ibound", "==", "0", ")", "#NEWLINE#", "idx2", "=", "(", "ibound", "<", "0", ")", "#NEWLINE#", "plotarray", "[", "idx1", "]", "=", "1", "#NEWLINE#", "plotarray", "[", "idx2", "]", "=", "2", "#NEWLINE#", "plotarray", "=", "np", ".", "ma", ".", "masked_equal", "(", "plotarray", ",", "0", ")", "cmap", "=", "matplotlib", ".", "colors", ".", "ListedColormap", "(", "[", "'0'", ",", "color_noflow", ",", "color_ch", "]", ")", "#NEWLINE#", "bounds", "=", "[", "0", ",", "1", ",", "2", ",", "3", "]", "norm", ".", "(", "bounds", "cmap", "#NEWLINE#", "quadmesh", "self", "plotarray", "cmap", "=", "cmap", ",", "norm", "=", "cmap", "kwargs", "#NEWLINE#", "return", "quadmesh"]}}
{"position": {"error_location": 165, "repair_targets": [161, 174], "repair_candidates": [133, 165, 170, 172, 176, 91, 109, 150, 164, 10, 146, 54, 67, 99, 116, 3, 47, 65, 69, 80, 94, 102, 167, 180, 2, 40, 56, 168, 161, 174, 30, 38, 42, 7, 144, 25, 32, 177, 74, 107, 114, 121, 129, 169]}}
{"prediction": {"error_location": 0.37034910917282104, "repair_targets": [0.02050904557108879, 0.562214195728302], "repair_candidates": [0.005265871994197369, 0.0004956660559400916, 0.0004927169065922499, 0.00015697033086325973, 0.00030263030203059316, 0.00020260100427549332, 0.0005598610150627792, 0.0002486541634425521, 0.002208767458796501, 9.117524314206094e-06, 9.285371561418287e-06, 0.0002568220952525735, 5.904249337618239e-05, 0.00027665155357681215, 3.582921999623068e-05, 2.9490645829355344e-05, 0.0015588823007419705, 2.47569041675888e-05, 0.0008782146032899618, 2.2191150037542684e-06, 0.0006647505797445774, 1.4656080566055607e-05, 0.00028127399855293334, 5.038863491790835e-06, 0.0004456189926713705, 2.0476158169913106e-05, 0.003549739718437195, 6.424808816518635e-05, 0.00025689322501420975, 8.035634891712107e-06, 1.2339232853264548e-05, 0.0014056916115805507, 0.02050904557108879, 2.1452997316373512e-05, 5.329780833562836e-06, 0.00022780596918892115, 3.819260382442735e-05, 0.39709651470184326, 1.1376131624274421e-05, 1.965408273463254e-06, 0.562214195728302, 3.520009613566799e-06, 6.313630001386628e-05, 4.558229193207808e-06], "target_probs": 0.5827232599258423}}




Minimal simplified tokens:

['#NEWLINE#', 'def plot_ibound(', 'self', 'ibound', '=', 'None', ',', 'color_noflow', '=', ',', 'color_ch', '=', "'blue'", ',', '**kwargs', ')', ':', '#NEWLINE#', '#INDENT#', '"\\n        Make a plot of ibound.  If not specified, then pull ibound from the\\n        self.ml\\n\\n        Parameters\\n        ----------\\n        ibound : numpy.ndarray\\n            ibound array to plot.  (Default is ibound in \'BAS6\' package.)\\n        color_noflow : string\\n            (Default is \'black\')\\n        color_ch : string\\n            Color for constant heads (Default is \'blue\'.)\\n\\n        Returns\\n        -------\\n        quadmesh : matplotlib.collections.QuadMesh\\n\\n        "', '#NEWLINE#', 'if', '(', "'ax'", 'in', 'kwargs', ')', ':', '#NEWLINE#', '#INDENT#', 'ax', '=', 'kwargs', '.', 'else', ':', '#NEWLINE#', '#INDENT#', 'ax', '=', 'self', '.', 'ax', '#NEWLINE#', '#UNINDENT#', 'if', '(', 'ibound', 'is', 'None', ')', ':', '#NEWLINE#', '#INDENT#', 'bas', '=', 'self', '.', 'model', '.', 'get_package', '(', "'BAS6'", ')', '#NEWLINE#', 'ibound', '=', 'bas', '.', 'ibound', '.', 'array', '#NEWLINE#', '#UNINDENT#', 'plotarray', '=', 'np', '.', 'zeros', '(', 'ibound', '.', 'shape', ',', 'dtype', '=', 'np', '.', 'int', ')', '#NEWLINE#', 'idx1', '=', '(', 'ibound', '==', '0', ')', '#NEWLINE#', 'idx2', '=', '(', 'ibound', '<', '0', ')', '#NEWLINE#', 'plotarray', '[', 'idx1', ']', '=', '1', '#NEWLINE#', 'plotarray', '[', 'idx2', ']', '=', '2', '#NEWLINE#', 'plotarray', '=', 'np', '.', 'ma', '.', 'masked_equal', '(', 'plotarray', ',', '0', ')', 'cmap', '=', 'matplotlib', '.', 'colors', '.', 'ListedColormap', '(', '[', "'0'", ',', 'color_noflow', ',', 'color_ch', ']', ')', '#NEWLINE#', 'bounds', '=', '[', '0', ',', '1', ',', '2', ',', '3', ']', 'norm', '.', '(', 'bounds', 'cmap', '#NEWLINE#', 'quadmesh', 'self', 'plotarray', 'cmap', '=', 'cmap', ',', 'norm', '=', 'cmap', 'kwargs', '#NEWLINE#', 'return', 'quadmesh']
