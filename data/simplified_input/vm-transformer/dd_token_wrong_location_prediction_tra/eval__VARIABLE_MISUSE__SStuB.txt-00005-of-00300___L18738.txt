
Original sample:

{"has_bug": true, "bug_kind": 1, "bug_kind_name": "VARIABLE_MISUSE", "source_tokens": ["#NEWLINE#", "def test_setReceivedOtherSourceAllowed(", "self", ")", ":", "#NEWLINE#", "#INDENT#", "'\\n        Roster pushes can be sent from other entities, allow them.\\n        '", "#NEWLINE#", "xml", "=", "\"\\n          <iq type='set' to='this@example.org/Home' from='other@example.org'>\\n            <query xmlns='jabber:iq:roster'>\\n              <item jid='user@example.org'/>\\n            </query>\\n          </iq>\\n        \"", "#NEWLINE#", "self", ".", "service", ".", "allowAnySender", "=", "True", "#NEWLINE#", "requests", "=", "[", "]", "#NEWLINE#", "def setReceived(", "request", ")", ":", "#NEWLINE#", "#INDENT#", "requests", ".", "append", "(", "request", ")", "#NEWLINE#", "#UNINDENT#", "def cb(", "result", ")", ":", "#NEWLINE#", "#INDENT#", "self", ".", "assertEqual", "(", "1", ",", "len", "(", "requests", ")", ",", "'setReceived was not called'", ")", "#NEWLINE#", "#UNINDENT#", "self", ".", "service", ".", "setReceived", "=", "setReceived", "#NEWLINE#", "d", "=", "self", ".", "handleRequest", "(", "cb", ")", "#NEWLINE#", "d", ".", "addCallback", "(", "cb", ")", "#NEWLINE#", "return", "d"], "error_location": [75], "repair_targets": [9], "repair_candidates": [69, 78, 86, 21, 32, 54, 2, 13, 46, 61, 71, 75, 82, 9, 65, 67], "provenances": [{"datasetProvenance": {"datasetName": "ETHPy150Open", "filepath": "ralphm/wokkel/wokkel/test/test_xmppim.py", "license": "mit", "note": "license: bigquery_api"}}], "txt_file": "eval__VARIABLE_MISUSE__SStuB.txt-00005-of-00300", "js_count": 18738, "results": {"model": "transformer", "prob": {"loc": [[0.14278501272201538, 3.305495056338259e-06, 1.936685976033914e-06, 2.1863777988073707e-07, 1.692802982233843e-07, 2.0264431555006013e-07, 1.7261577056615351e-07, 2.126263893842406e-07, 1.1851336267909574e-07, 2.1997409476171015e-06, 1.2331523748798645e-06, 1.5096021570570883e-06, 1.2722148312604986e-07, 1.3986785063480056e-07, 5.1599617023612154e-08, 2.07474499802629e-08, 1.1151588807933877e-07, 5.8250520851288456e-08, 3.889915376475983e-07, 6.423373179131886e-06, 8.162852509485674e-07, 3.7046663692308357e-06, 1.166450033451838e-06, 3.1569077691528946e-05, 5.533595981432882e-07, 4.1676386786093644e-07, 4.9402824942035295e-08, 0.0021517309360206127, 7.794590715093364e-07, 4.841631948693248e-07, 2.1200476396643353e-07, 1.0933081995290195e-07, 3.9324032741205883e-07, 5.482660725419919e-08, 4.0333873130293796e-08, 5.076586262475757e-07, 0.0036575484555214643, 7.534558790212031e-07, 4.154059354277706e-07, 9.94803102116748e-08, 9.11658588620412e-08, 6.885413768031867e-06, 3.763496749797923e-07, 2.3535909576821723e-07, 1.4172591988881322e-07, 9.264646649853603e-08, 9.829611968825702e-08, 1.4855525876100728e-07, 1.6410699288371688e-07, 3.038980480596365e-07, 3.290368476882577e-05, 5.320693503563234e-07, 5.2410598527785623e-08, 4.048523294386541e-07, 0.01619059219956398, 4.914496685159975e-07, 4.2090672991434985e-07, 1.329268457084254e-06, 3.982880230068986e-07, 2.1265073257836775e-07, 2.120043660625015e-07, 1.5299569895432796e-06, 1.6480383635553153e-07, 2.0847611637009322e-08, 3.4664702752706944e-07, 1.6397214608332433e-07, 1.2509315183706349e-06, 0.001573060522787273, 2.2558106138603762e-07, 2.767205842246767e-07, 6.819585962603014e-08, 2.0570823835441843e-06, 1.8451994776569336e-07, 3.690444572157503e-08, 1.8874158058679313e-07, 0.19315578043460846, 7.636034524693969e-07, 1.0776126373457373e-06, 7.499217531403701e-07, 4.734828280561487e-07, 4.861641400566441e-08, 4.4583262592823303e-07, 0.6363927721977234, 2.0676363874372328e-06, 6.687939276162069e-06, 4.119082404940855e-06, 0.003964360803365707]], "pointer": [[0.0, 0.0, 1.5659636119380593e-05, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.9607321619987488, 0.0, 0.0, 0.0, 0.0002393277536612004, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.004842717200517654, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.011737124994397163, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 3.8415597373386845e-05, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.00882849469780922, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0003780114057008177, 0.0, 0.0, 0.0, 0.002306648762896657, 0.0, 0.0020570349879562855, 0.0, 0.005204417742788792, 0.0, 0.00018155337602365762, 0.0, 0.0, 0.0, 0.0008268229430541396, 0.0, 0.0, 0.002186596393585205, 0.0, 0.0, 0.0, 0.00014859305520076305, 0.0, 0.0, 0.0, 0.00027644302463158965]], "target": [0.9607321619987488]}, "loss": [1.6442583799362183, 0.040059614926576614], "acc": [0.0, 0.0, 1.0, 0.0]}, "wrong_error_location": [82]}


Trace of simplified code(s):

{"result": {"time": "2021-02-21 06:09:46.560128", "n_pass": [1, 1, 1], "n_token": 87, "loss": [0.4519394338130951, 0.040059614926576614], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def test_setReceivedOtherSourceAllowed(", "self", ")", ":", "#NEWLINE#", "#INDENT#", "'\\n        Roster pushes can be sent from other entities, allow them.\\n        '", "#NEWLINE#", "xml", "=", "\"\\n          <iq type='set' to='this@example.org/Home' from='other@example.org'>\\n            <query xmlns='jabber:iq:roster'>\\n              <item jid='user@example.org'/>\\n            </query>\\n          </iq>\\n        \"", "#NEWLINE#", "self", ".", "service", ".", "allowAnySender", "=", "True", "#NEWLINE#", "requests", "=", "[", "]", "#NEWLINE#", "def setReceived(", "request", ")", ":", "#NEWLINE#", "#INDENT#", "requests", ".", "append", "(", "request", ")", "#NEWLINE#", "#UNINDENT#", "def cb(", "result", ")", ":", "#NEWLINE#", "#INDENT#", "self", ".", "assertEqual", "(", "1", ",", "len", "(", "requests", ")", ",", "'setReceived was not called'", ")", "#NEWLINE#", "#UNINDENT#", "self", ".", "service", ".", "setReceived", "=", "setReceived", "#NEWLINE#", "d", "=", "self", ".", "handleRequest", "(", "cb", ")", "#NEWLINE#", "d", ".", "addCallback", "(", "cb", ")", "#NEWLINE#", "return", "d"]}}
{"position": {"error_location": 82, "repair_targets": [9], "repair_candidates": [69, 78, 86, 21, 32, 54, 2, 13, 46, 61, 71, 75, 82, 9, 65, 67]}}
{"prediction": {"error_location": 0.6363927721977234, "repair_targets": [0.9607321619987488], "repair_candidates": [1.5659636119380593e-05, 0.9607321619987488, 0.0002393277536612004, 0.004842717200517654, 0.011737124994397163, 3.8415597373386845e-05, 0.00882849469780922, 0.0003780114057008177, 0.002306648762896657, 0.0020570349879562855, 0.005204417742788792, 0.00018155337602365762, 0.0008268229430541396, 0.002186596393585205, 0.00014859305520076305, 0.00027644302463158965], "target_probs": 0.9607321619987488}}


{"result": {"time": "2021-02-21 06:09:46.619739", "n_pass": [47, 2, 2], "n_token": 82, "loss": [0.38833436369895935, 0.03031017817556858], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def test_setReceivedOtherSourceAllowed(", "self", ")", ":", "#NEWLINE#", "#INDENT#", "'\\n        Roster pushes can be sent from other entities, allow them.\\n        '", "#NEWLINE#", "xml", "=", "\"\\n          <iq type='set' to='this@example.org/Home' from='other@example.org'>\\n            <query xmlns='jabber:iq:roster'>\\n              <item jid='user@example.org'/>\\n            </query>\\n          </iq>\\n        \"", "#NEWLINE#", "self", ".", "#NEWLINE#", "requests", "=", "[", "]", "#NEWLINE#", "def setReceived(", "request", ")", ":", "#NEWLINE#", "#INDENT#", "requests", ".", "append", "(", "request", ")", "#NEWLINE#", "#UNINDENT#", "def cb(", "result", ")", ":", "#NEWLINE#", "#INDENT#", "self", ".", "assertEqual", "(", "1", ",", "len", "(", "requests", ")", ",", "'setReceived was not called'", ")", "#NEWLINE#", "#UNINDENT#", "self", ".", "service", ".", "setReceived", "=", "setReceived", "#NEWLINE#", "d", "=", "self", ".", "handleRequest", "(", "cb", ")", "#NEWLINE#", "d", ".", "addCallback", "(", "cb", ")", "#NEWLINE#", "return", "d"]}}
{"position": {"error_location": 77, "repair_targets": [9], "repair_candidates": [64, 73, 81, 16, 27, 49, 2, 13, 41, 56, 66, 70, 77, 9, 60, 62]}}
{"prediction": {"error_location": 0.6781855821609497, "repair_targets": [0.9701445698738098], "repair_candidates": [1.6207484804908745e-05, 0.9701445698738098, 0.00038185095763765275, 0.00809795968234539, 0.005071768071502447, 3.504781852825545e-05, 0.004043035674840212, 0.0004897675244137645, 0.0007785051129758358, 0.0038205499295145273, 0.0037570642307400703, 0.00016477800090797246, 0.001179294427856803, 0.0017765241209417582, 7.453985017491505e-05, 0.00016869703540578485], "target_probs": 0.9701445698738098}}


{"result": {"time": "2021-02-21 06:09:46.679242", "n_pass": [49, 3, 3], "n_token": 77, "loss": [0.28193041682243347, 0.023889759555459023], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def test_setReceivedOtherSourceAllowed(", "self", ")", ":", "#NEWLINE#", "#INDENT#", "'\\n        Roster pushes can be sent from other entities, allow them.\\n        '", "#NEWLINE#", "xml", "=", "\"\\n          <iq type='set' to='this@example.org/Home' from='other@example.org'>\\n            <query xmlns='jabber:iq:roster'>\\n              <item jid='user@example.org'/>\\n            </query>\\n          </iq>\\n        \"", "#NEWLINE#", "self", ".", "#NEWLINE#", "requests", "=", "[", "]", "#NEWLINE#", "#INDENT#", "requests", ".", "append", "(", "request", ")", "#NEWLINE#", "#UNINDENT#", "def cb(", "result", ")", ":", "#NEWLINE#", "#INDENT#", "self", ".", "assertEqual", "(", "1", ",", "len", "(", "requests", ")", ",", "'setReceived was not called'", ")", "#NEWLINE#", "#UNINDENT#", "self", ".", "service", ".", "setReceived", "=", "setReceived", "#NEWLINE#", "d", "=", "self", ".", "handleRequest", "(", "cb", ")", "#NEWLINE#", "d", ".", "addCallback", "(", "cb", ")", "#NEWLINE#", "return", "d"]}}
{"position": {"error_location": 72, "repair_targets": [9], "repair_candidates": [59, 68, 76, 16, 22, 44, 2, 13, 36, 51, 61, 65, 72, 9, 55, 57]}}
{"prediction": {"error_location": 0.754326343536377, "repair_targets": [0.9763933420181274], "repair_candidates": [7.823576197552029e-06, 0.9763933420181274, 0.00030228434479795396, 0.007597093936055899, 0.0018948547076433897, 2.5706347514642403e-05, 0.0038550719618797302, 0.00028387157362885773, 0.0012863653246313334, 0.004068582784384489, 0.002581085078418255, 9.762888657860458e-05, 0.0005014859489165246, 0.0008163942839019, 3.9330207073362544e-05, 0.00024904723977670074], "target_probs": 0.9763933420181274}}


{"result": {"time": "2021-02-21 06:09:46.736776", "n_pass": [51, 4, 4], "n_token": 72, "loss": [0.4196188747882843, 0.021274017170071602], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def test_setReceivedOtherSourceAllowed(", "self", ")", ":", "#NEWLINE#", "#INDENT#", "'\\n        Roster pushes can be sent from other entities, allow them.\\n        '", "#NEWLINE#", "xml", "=", "\"\\n          <iq type='set' to='this@example.org/Home' from='other@example.org'>\\n            <query xmlns='jabber:iq:roster'>\\n              <item jid='user@example.org'/>\\n            </query>\\n          </iq>\\n        \"", "#NEWLINE#", "self", ".", "#NEWLINE#", "requests", "=", "[", "]", "#NEWLINE#", "#INDENT#", "requests", ".", "append", "def cb(", "result", ")", ":", "#NEWLINE#", "#INDENT#", "self", ".", "assertEqual", "(", "1", ",", "len", "(", "requests", ")", ",", "'setReceived was not called'", ")", "#NEWLINE#", "#UNINDENT#", "self", ".", "service", ".", "setReceived", "=", "setReceived", "#NEWLINE#", "d", "=", "self", ".", "handleRequest", "(", "cb", ")", "#NEWLINE#", "d", ".", "addCallback", "(", "cb", ")", "#NEWLINE#", "return", "d"]}}
{"position": {"error_location": 67, "repair_targets": [9], "repair_candidates": [54, 63, 71, 16, 22, 39, 2, 13, 31, 46, 56, 60, 67, 9, 50, 52]}}
{"prediction": {"error_location": 0.6572973728179932, "repair_targets": [0.9789506793022156], "repair_candidates": [3.8006314753147308e-06, 0.9789506793022156, 0.0002444858546368778, 0.006486928090453148, 0.0005197920836508274, 1.1973706932622008e-05, 0.006398556288331747, 0.00017371527792420238, 0.000875550729688257, 0.004395053721964359, 0.0012615309096872807, 9.76801966316998e-05, 0.00013316457625478506, 0.00015023385640233755, 1.828357926569879e-05, 0.0002785349788609892], "target_probs": 0.9789506793022156}}


{"result": {"time": "2021-02-21 06:09:46.794212", "n_pass": [52, 5, 5], "n_token": 67, "loss": [0.7985521554946899, 0.019693076610565186], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def test_setReceivedOtherSourceAllowed(", "self", ")", ":", "#NEWLINE#", "#INDENT#", "'\\n        Roster pushes can be sent from other entities, allow them.\\n        '", "#NEWLINE#", "xml", "=", "\"\\n          <iq type='set' to='this@example.org/Home' from='other@example.org'>\\n            <query xmlns='jabber:iq:roster'>\\n              <item jid='user@example.org'/>\\n            </query>\\n          </iq>\\n        \"", "#NEWLINE#", "self", ".", "#NEWLINE#", "requests", "=", "[", "]", "#NEWLINE#", "#INDENT#", "requests", ".", "append", "#INDENT#", "self", ".", "assertEqual", "(", "1", ",", "len", "(", "requests", ")", ",", "'setReceived was not called'", ")", "#NEWLINE#", "#UNINDENT#", "self", ".", "service", ".", "setReceived", "=", "setReceived", "#NEWLINE#", "d", "=", "self", ".", "handleRequest", "(", "cb", ")", "#NEWLINE#", "d", ".", "addCallback", "(", "cb", ")", "#NEWLINE#", "return", "d"]}}
{"position": {"error_location": 62, "repair_targets": [9], "repair_candidates": [49, 58, 66, 16, 22, 34, 2, 13, 26, 41, 51, 55, 62, 9, 45, 47]}}
{"prediction": {"error_location": 0.4499799907207489, "repair_targets": [0.9804995656013489], "repair_candidates": [6.036313607182819e-06, 0.9804995656013489, 0.0003028124920092523, 0.00991994421929121, 0.0003702367248479277, 1.6784721083240584e-05, 0.004103838000446558, 0.0002315532765351236, 0.0005908452440053225, 0.0030892754439264536, 0.0004216526576783508, 0.00010164600826101378, 6.441320147132501e-05, 0.00011171841470059007, 6.486957136075944e-05, 0.0001047895202646032], "target_probs": 0.9804995656013489}}


{"result": {"time": "2021-02-21 06:09:46.853192", "n_pass": [90, 6, 6], "n_token": 64, "loss": [0.8866903185844421, 0.015797222033143044], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def test_setReceivedOtherSourceAllowed(", "self", ")", ":", "#NEWLINE#", "#INDENT#", "'\\n        Roster pushes can be sent from other entities, allow them.\\n        '", "#NEWLINE#", "xml", "=", "\"\\n          <iq type='set' to='this@example.org/Home' from='other@example.org'>\\n            <query xmlns='jabber:iq:roster'>\\n              <item jid='user@example.org'/>\\n            </query>\\n          </iq>\\n        \"", "#NEWLINE#", "self", ".", "#NEWLINE#", "requests", "=", "[", "]", "#NEWLINE#", "#INDENT#", "requests", ".", "append", "#INDENT#", "self", ".", ",", "len", "(", "requests", ")", ",", "'setReceived was not called'", ")", "#NEWLINE#", "#UNINDENT#", "self", ".", "service", ".", "setReceived", "=", "setReceived", "#NEWLINE#", "d", "=", "self", ".", "handleRequest", "(", "cb", ")", "#NEWLINE#", "d", ".", "addCallback", "(", "cb", ")", "#NEWLINE#", "return", "d"]}}
{"position": {"error_location": 59, "repair_targets": [9], "repair_candidates": [46, 55, 63, 16, 22, 31, 2, 13, 26, 38, 48, 52, 59, 9, 42, 44]}}
{"prediction": {"error_location": 0.4120171368122101, "repair_targets": [0.9843268990516663], "repair_candidates": [7.596062005177373e-06, 0.9843268990516663, 0.0004243692965246737, 0.010854719206690788, 0.0002364553656661883, 9.355055226478726e-05, 0.0011174512328580022, 0.0001412347482983023, 0.000232399717788212, 0.0015072583919391036, 0.00034134299494326115, 0.00012905470794066787, 0.0003091651014983654, 0.00010057204781332985, 9.609271364752203e-05, 8.175661059794948e-05], "target_probs": 0.9843268990516663}}


{"result": {"time": "2021-02-21 06:09:46.910794", "n_pass": [91, 7, 7], "n_token": 61, "loss": [0.6346246600151062, 0.09981760382652283], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def test_setReceivedOtherSourceAllowed(", "self", ")", ":", "#NEWLINE#", "#INDENT#", "'\\n        Roster pushes can be sent from other entities, allow them.\\n        '", "#NEWLINE#", "xml", "=", "\"\\n          <iq type='set' to='this@example.org/Home' from='other@example.org'>\\n            <query xmlns='jabber:iq:roster'>\\n              <item jid='user@example.org'/>\\n            </query>\\n          </iq>\\n        \"", "#NEWLINE#", "self", ".", "#NEWLINE#", "requests", "=", "[", "]", "#NEWLINE#", "#INDENT#", "requests", ".", "append", "#INDENT#", "self", ".", "requests", ")", ",", "'setReceived was not called'", ")", "#NEWLINE#", "#UNINDENT#", "self", ".", "service", ".", "setReceived", "=", "setReceived", "#NEWLINE#", "d", "=", "self", ".", "handleRequest", "(", "cb", ")", "#NEWLINE#", "d", ".", "addCallback", "(", "cb", ")", "#NEWLINE#", "return", "d"]}}
{"position": {"error_location": 56, "repair_targets": [9], "repair_candidates": [43, 52, 60, 16, 22, 28, 2, 13, 26, 35, 45, 49, 56, 9, 39, 41]}}
{"prediction": {"error_location": 0.5301344394683838, "repair_targets": [0.9050024747848511], "repair_candidates": [7.408420515275793e-06, 0.9050024747848511, 0.0005873835179954767, 0.07797952741384506, 0.009720283560454845, 0.0004006660310551524, 0.0020109026227146387, 0.0003453232639003545, 0.00029147655004635453, 0.002169042592868209, 0.0010444181971251965, 0.00013254476652946323, 3.0206124392861966e-06, 0.00021918682614341378, 2.334668351977598e-05, 6.311610923148692e-05], "target_probs": 0.9050024747848511}}


{"result": {"time": "2021-02-21 06:09:46.971382", "n_pass": [93, 8, 8], "n_token": 58, "loss": [0.5321729183197021, 0.10497556626796722], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def test_setReceivedOtherSourceAllowed(", "self", ")", ":", "#NEWLINE#", "#INDENT#", "'\\n        Roster pushes can be sent from other entities, allow them.\\n        '", "#NEWLINE#", "xml", "=", "\"\\n          <iq type='set' to='this@example.org/Home' from='other@example.org'>\\n            <query xmlns='jabber:iq:roster'>\\n              <item jid='user@example.org'/>\\n            </query>\\n          </iq>\\n        \"", "#NEWLINE#", "self", ".", "#NEWLINE#", "requests", "=", "[", "]", "#NEWLINE#", "#INDENT#", "requests", ".", "append", "#INDENT#", "self", ".", "requests", ")", ",", "#UNINDENT#", "self", ".", "service", ".", "setReceived", "=", "setReceived", "#NEWLINE#", "d", "=", "self", ".", "handleRequest", "(", "cb", ")", "#NEWLINE#", "d", ".", "addCallback", "(", "cb", ")", "#NEWLINE#", "return", "d"]}}
{"position": {"error_location": 53, "repair_targets": [9], "repair_candidates": [40, 49, 57, 16, 22, 28, 2, 13, 26, 32, 42, 46, 53, 9, 36, 38]}}
{"prediction": {"error_location": 0.5873273611068726, "repair_targets": [0.9003465175628662], "repair_candidates": [8.477817573293578e-06, 0.9003465175628662, 0.0006516731809824705, 0.08218664675951004, 0.00884455069899559, 0.0005251623806543648, 0.0024336145725101233, 7.659497350687161e-05, 0.00018736218044068664, 0.0025595177430659533, 0.0016044280491769314, 0.00013984924589749426, 8.64024696056731e-06, 0.00026185650494880974, 3.298213050584309e-05, 0.00013201423280406743], "target_probs": 0.9003465175628662}}


{"result": {"time": "2021-02-21 06:09:47.085242", "n_pass": [103, 10, 9], "n_token": 56, "loss": [0.2423931509256363, 0.11256621778011322], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["self", ")", ":", "#NEWLINE#", "#INDENT#", "'\\n        Roster pushes can be sent from other entities, allow them.\\n        '", "#NEWLINE#", "xml", "=", "\"\\n          <iq type='set' to='this@example.org/Home' from='other@example.org'>\\n            <query xmlns='jabber:iq:roster'>\\n              <item jid='user@example.org'/>\\n            </query>\\n          </iq>\\n        \"", "#NEWLINE#", "self", ".", "#NEWLINE#", "requests", "=", "[", "]", "#NEWLINE#", "#INDENT#", "requests", ".", "append", "#INDENT#", "self", ".", "requests", ")", ",", "#UNINDENT#", "self", ".", "service", ".", "setReceived", "=", "setReceived", "#NEWLINE#", "d", "=", "self", ".", "handleRequest", "(", "cb", ")", "#NEWLINE#", "d", ".", "addCallback", "(", "cb", ")", "#NEWLINE#", "return", "d"]}}
{"position": {"error_location": 51, "repair_targets": [7], "repair_candidates": [38, 47, 55, 14, 20, 26, 0, 11, 24, 30, 40, 44, 51, 7, 34, 36]}}
{"prediction": {"error_location": 0.7847476005554199, "repair_targets": [0.8935381770133972], "repair_candidates": [0.003293632296845317, 0.8935381770133972, 0.0009328389423899353, 0.0797746554017067, 0.009745508432388306, 0.0009805321460589767, 0.00218325131572783, 0.0010840902104973793, 4.63750257040374e-05, 0.0011019420344382524, 0.0038805734366178513, 0.0021218634210526943, 3.964028110203799e-06, 0.0009844101732596755, 1.771885945345275e-05, 0.000310440082103014], "target_probs": 0.8935381770133972}}


{"result": {"time": "2021-02-21 06:09:47.142330", "n_pass": [105, 11, 10], "n_token": 54, "loss": [0.24863609671592712, 0.09427567571401596], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["self", ")", "#INDENT#", "'\\n        Roster pushes can be sent from other entities, allow them.\\n        '", "#NEWLINE#", "xml", "=", "\"\\n          <iq type='set' to='this@example.org/Home' from='other@example.org'>\\n            <query xmlns='jabber:iq:roster'>\\n              <item jid='user@example.org'/>\\n            </query>\\n          </iq>\\n        \"", "#NEWLINE#", "self", ".", "#NEWLINE#", "requests", "=", "[", "]", "#NEWLINE#", "#INDENT#", "requests", ".", "append", "#INDENT#", "self", ".", "requests", ")", ",", "#UNINDENT#", "self", ".", "service", ".", "setReceived", "=", "setReceived", "#NEWLINE#", "d", "=", "self", ".", "handleRequest", "(", "cb", ")", "#NEWLINE#", "d", ".", "addCallback", "(", "cb", ")", "#NEWLINE#", "return", "d"]}}
{"position": {"error_location": 49, "repair_targets": [5], "repair_candidates": [36, 45, 53, 12, 18, 24, 0, 9, 22, 28, 38, 42, 49, 5, 32, 34]}}
{"prediction": {"error_location": 0.7798636555671692, "repair_targets": [0.9100318551063538], "repair_candidates": [0.003600148018449545, 0.9100318551063538, 0.0004857297462876886, 0.06100136414170265, 0.006138047203421593, 0.001011991873383522, 0.0017278459854424, 0.002407470252364874, 0.00011907349107787013, 0.001571988221257925, 0.005827183835208416, 0.0026681856252253056, 1.0495884453121107e-05, 0.002985437633469701, 2.4795057470328175e-05, 0.00038833889993838966], "target_probs": 0.9100318551063538}}


{"result": {"time": "2021-02-21 06:09:47.199780", "n_pass": [106, 12, 11], "n_token": 52, "loss": [0.17033930122852325, 0.13348139822483063], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["self", ")", "#NEWLINE#", "xml", "=", "\"\\n          <iq type='set' to='this@example.org/Home' from='other@example.org'>\\n            <query xmlns='jabber:iq:roster'>\\n              <item jid='user@example.org'/>\\n            </query>\\n          </iq>\\n        \"", "#NEWLINE#", "self", ".", "#NEWLINE#", "requests", "=", "[", "]", "#NEWLINE#", "#INDENT#", "requests", ".", "append", "#INDENT#", "self", ".", "requests", ")", ",", "#UNINDENT#", "self", ".", "service", ".", "setReceived", "=", "setReceived", "#NEWLINE#", "d", "=", "self", ".", "handleRequest", "(", "cb", ")", "#NEWLINE#", "d", ".", "addCallback", "(", "cb", ")", "#NEWLINE#", "return", "d"]}}
{"position": {"error_location": 47, "repair_targets": [3], "repair_candidates": [34, 43, 51, 10, 16, 22, 0, 7, 20, 26, 36, 40, 47, 3, 30, 32]}}
{"prediction": {"error_location": 0.8433786034584045, "repair_targets": [0.8750437498092651], "repair_candidates": [0.003129218704998493, 0.8750437498092651, 0.00047168502351269126, 0.09438268095254898, 0.0028490363620221615, 0.0005684476345777512, 0.0008750925189815462, 0.00471658306196332, 0.00018139730673283339, 0.0031631530728191137, 0.007403929717838764, 0.0024763508699834347, 3.232669769204222e-05, 0.004167803563177586, 1.8067812561639585e-05, 0.000520526256877929], "target_probs": 0.8750437498092651}}


{"result": {"time": "2021-02-21 06:09:47.257240", "n_pass": [108, 13, 12], "n_token": 49, "loss": [0.35429197549819946, 0.5135783553123474], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["self", ")", "#NEWLINE#", "xml", "self", ".", "#NEWLINE#", "requests", "=", "[", "]", "#NEWLINE#", "#INDENT#", "requests", ".", "append", "#INDENT#", "self", ".", "requests", ")", ",", "#UNINDENT#", "self", ".", "service", ".", "setReceived", "=", "setReceived", "#NEWLINE#", "d", "=", "self", ".", "handleRequest", "(", "cb", ")", "#NEWLINE#", "d", ".", "addCallback", "(", "cb", ")", "#NEWLINE#", "return", "d"]}}
{"position": {"error_location": 44, "repair_targets": [3], "repair_candidates": [31, 40, 48, 7, 13, 19, 0, 4, 17, 23, 33, 37, 44, 3, 27, 29]}}
{"prediction": {"error_location": 0.7016700506210327, "repair_targets": [0.5983506441116333], "repair_candidates": [0.013290892355144024, 0.5983506441116333, 0.0003368218895047903, 0.2563468813896179, 0.0811975747346878, 0.0009940079180523753, 0.002964050741866231, 0.0009106801589950919, 0.001047485857270658, 0.01963185891509056, 0.013746866956353188, 0.0016966966213658452, 0.0012931356905028224, 0.006364050786942244, 5.429744487628341e-05, 0.0017740237526595592], "target_probs": 0.5983506441116333}}


{"result": {"time": "2021-02-21 06:09:47.374358", "n_pass": [119, 15, 13], "n_token": 46, "loss": [0.9968132376670837, 0.6362332701683044], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["self", ")", "#NEWLINE#", "xml", "self", ".", "#NEWLINE#", "requests", "=", "[", "]", "#NEWLINE#", "#INDENT#", "requests", ".", "append", "#INDENT#", "self", ".", "requests", ")", ",", "#UNINDENT#", "self", ".", "service", ".", "setReceived", "=", "setReceived", "#NEWLINE#", "d", "=", "self", "cb", ")", "#NEWLINE#", "d", ".", "addCallback", "(", "cb", ")", "#NEWLINE#", "return", "d"]}}
{"position": {"error_location": 41, "repair_targets": [3], "repair_candidates": [31, 37, 45, 7, 13, 19, 0, 4, 17, 23, 33, 34, 41, 3, 27, 29]}}
{"prediction": {"error_location": 0.3690536916255951, "repair_targets": [0.5292823314666748], "repair_candidates": [0.006661667954176664, 0.5292823314666748, 0.00036076706601306796, 0.26767319440841675, 0.149995818734169, 0.0010257224785163999, 0.008168762549757957, 0.0003340582479722798, 0.005377139430493116, 0.009490718133747578, 0.0028739662375301123, 0.010406291112303734, 0.004346250556409359, 0.0022389295045286417, 0.001323055592365563, 0.0004413386923260987], "target_probs": 0.5292823314666748}}


{"result": {"time": "2021-02-21 06:09:48.000545", "n_pass": [187, 26, 14], "n_token": 45, "loss": [1.173883080482483, 0.6788244843482971], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["self", ")", "#NEWLINE#", "xml", "self", ".", "#NEWLINE#", "requests", "=", "[", "]", "#INDENT#", "requests", ".", "append", "#INDENT#", "self", ".", "requests", ")", ",", "#UNINDENT#", "self", ".", "service", ".", "setReceived", "=", "setReceived", "#NEWLINE#", "d", "=", "self", "cb", ")", "#NEWLINE#", "d", ".", "addCallback", "(", "cb", ")", "#NEWLINE#", "return", "d"]}}
{"position": {"error_location": 40, "repair_targets": [3], "repair_candidates": [30, 36, 44, 7, 12, 18, 0, 4, 16, 22, 32, 33, 40, 3, 26, 28]}}
{"prediction": {"error_location": 0.3091640770435333, "repair_targets": [0.5072128772735596], "repair_candidates": [0.0049727302975952625, 0.5072128772735596, 0.0002362037484999746, 0.2714049816131592, 0.17720288038253784, 0.0007715349784120917, 0.008661721833050251, 0.00022261693084146827, 0.00416444381698966, 0.009178209118545055, 0.0012064531911164522, 0.006775933317840099, 0.00467426422983408, 0.0012078675208613276, 0.0018531582318246365, 0.00025402469327673316], "target_probs": 0.5072128772735596}}


{"result": {"time": "2021-02-21 06:09:49.588689", "n_pass": [267, 54, 15], "n_token": 44, "loss": [1.045314073562622, 0.6305904984474182], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["self", ")", "#NEWLINE#", "xml", "self", ".", "#NEWLINE#", "requests", "=", "[", "]", "#INDENT#", "requests", ".", "append", "#INDENT#", "self", ".", "requests", ")", ",", "#UNINDENT#", "self", ".", "service", ".", "setReceived", "=", "setReceived", "#NEWLINE#", "d", "=", "self", "cb", ")", "#NEWLINE#", "d", "addCallback", "(", "cb", ")", "#NEWLINE#", "return", "d"]}}
{"position": {"error_location": 39, "repair_targets": [3], "repair_candidates": [30, 36, 43, 7, 12, 18, 0, 4, 16, 22, 32, 33, 39, 3, 26, 28]}}
{"prediction": {"error_location": 0.3515813648700714, "repair_targets": [0.5322774052619934], "repair_candidates": [0.005810281727463007, 0.5322774052619934, 0.0003220155485905707, 0.17456306517124176, 0.23479051887989044, 0.001730229239910841, 0.006144538056105375, 0.00027739492361433804, 0.004450691398233175, 0.007628761697560549, 0.014263128861784935, 0.008968190290033817, 0.0036892672069370747, 0.003853290341794491, 0.001096487045288086, 0.00013470169506035745], "target_probs": 0.5322774052619934}}




Minimal simplified tokens:

['self', ')', '#NEWLINE#', 'xml', 'self', '.', '#NEWLINE#', 'requests', '=', '[', ']', '#INDENT#', 'requests', '.', 'append', '#INDENT#', 'self', '.', 'requests', ')', ',', '#UNINDENT#', 'self', '.', 'service', '.', 'setReceived', '=', 'setReceived', '#NEWLINE#', 'd', '=', 'self', 'cb', ')', '#NEWLINE#', 'd', 'addCallback', '(', 'cb', ')', '#NEWLINE#', 'return', 'd']
