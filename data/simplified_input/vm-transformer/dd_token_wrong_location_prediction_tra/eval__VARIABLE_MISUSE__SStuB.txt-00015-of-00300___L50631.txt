
Original sample:

{"has_bug": true, "bug_kind": 1, "bug_kind_name": "VARIABLE_MISUSE", "source_tokens": ["#NEWLINE#", "def assert_truthy(", "lval", ",", "*", "args", ",", "**kwargs", ")", ":", "#NEWLINE#", "#INDENT#", "'Assert that lval evaluates truthy, not identity.'", "#NEWLINE#", "message", "=", "_get_msg", "(", "kwargs", ",", "kwargs", ",", "'assert_equal'", ")", "#NEWLINE#", "if", "message", ":", "#NEWLINE#", "#INDENT#", "assert", "lval", ",", "message", "#NEWLINE#", "#UNINDENT#", "else", ":", "#NEWLINE#", "#INDENT#", "assert", "lval", ",", "(", "'assertion failed: l == r\\nl: %r\\nr: %r\\n\\n%s'", "%", "(", "lval", ",", "True", ",", "_diff_message", "(", "lval", ",", "True", ")", ")", ")"], "error_location": [18], "repair_targets": [5], "repair_candidates": [18, 20, 5, 2, 31, 41, 47, 53, 14, 26, 33], "provenances": [{"datasetProvenance": {"datasetName": "ETHPy150Open", "filepath": "Yelp/Testify/testify/assertions.py", "license": "apache-2.0", "note": "license: manual_eval"}}], "txt_file": "eval__VARIABLE_MISUSE__SStuB.txt-00015-of-00300", "js_count": 50631, "results": {"model": "transformer", "prob": {"loc": [[0.00047670616186223924, 3.418716687519918e-08, 6.554049036822107e-08, 6.310659772523763e-10, 7.405344670807779e-10, 4.084122053882311e-07, 7.345418162607587e-10, 6.256479778699031e-09, 1.525640391797367e-09, 1.058026666278522e-09, 1.661851101175671e-09, 1.096779445042273e-09, 1.960868445394226e-08, 1.655388048860118e-09, 5.3819952938738425e-09, 7.023110426551682e-10, 3.765940892463959e-09, 3.0498583214466635e-08, 0.38858896493911743, 1.0612615142235882e-07, 0.6100334525108337, 2.411872657148706e-08, 2.5375886707479367e-06, 1.7665329199445523e-09, 1.559661733097073e-09, 3.7686502807332545e-09, 0.00022474890283774585, 5.93847060414987e-09, 3.6726810481724215e-09, 2.3588691000497874e-09, 5.568939087652325e-09, 0.00038549635792151093, 1.8728651962618414e-09, 7.737556734355167e-05, 1.3096971285264658e-09, 6.01370786501576e-10, 1.1400982380393998e-09, 1.637666335874144e-09, 1.0920160331551187e-09, 1.0150867923996998e-09, 3.0245633775294323e-10, 0.00011615424591582268, 2.2947395095229695e-09, 4.3918915726415264e-10, 3.2861176890719435e-08, 2.2332429239213525e-09, 5.063608199407099e-09, 2.9149046895327047e-05, 2.638499863039101e-09, 3.097851219990844e-08, 1.5776281392376745e-09, 4.240188478110696e-10, 4.38273950464918e-09, 6.415662937797606e-05, 2.530890608198888e-09, 3.80573908387305e-07, 4.637048522937448e-09, 3.9270369178723286e-09, 3.885455068797228e-09]], "pointer": [[0.0, 0.0, 0.0035917286295443773, 0.0, 0.0, 0.9963296055793762, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 2.773350934148766e-05, 0.0, 0.0, 0.0, 1.7670367924438324e-07, 0.0, 4.282548786704865e-07, 0.0, 0.0, 0.0, 0.0, 0.0, 5.806645617667527e-07, 0.0, 0.0, 0.0, 0.0, 4.0516712033422664e-05, 0.0, 3.4152446914959e-07, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 2.0373615825519664e-06, 0.0, 0.0, 0.0, 0.0, 0.0, 5.666374818247277e-06, 0.0, 0.0, 0.0, 0.0, 0.0, 1.2959574178239563e-06, 0.0, 0.0, 0.0, 0.0, 0.0]], "target": [0.9963296055793762]}, "loss": [0.9452329874038696, 0.003677146742120385], "acc": [0.0, 0.0, 1.0, 0.0]}, "wrong_error_location": [20]}


Trace of simplified code(s):

{"result": {"time": "2021-02-21 07:20:18.731125", "n_pass": [1, 1, 1], "n_token": 59, "loss": [0.4942413866519928, 0.003677146742120385], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def assert_truthy(", "lval", ",", "*", "args", ",", "**kwargs", ")", ":", "#NEWLINE#", "#INDENT#", "'Assert that lval evaluates truthy, not identity.'", "#NEWLINE#", "message", "=", "_get_msg", "(", "kwargs", ",", "kwargs", ",", "'assert_equal'", ")", "#NEWLINE#", "if", "message", ":", "#NEWLINE#", "#INDENT#", "assert", "lval", ",", "message", "#NEWLINE#", "#UNINDENT#", "else", ":", "#NEWLINE#", "#INDENT#", "assert", "lval", ",", "(", "'assertion failed: l == r\\nl: %r\\nr: %r\\n\\n%s'", "%", "(", "lval", ",", "True", ",", "_diff_message", "(", "lval", ",", "True", ")", ")", ")"]}}
{"position": {"error_location": 20, "repair_targets": [5], "repair_candidates": [18, 20, 5, 2, 31, 41, 47, 53, 14, 26, 33]}}
{"prediction": {"error_location": 0.6100334525108337, "repair_targets": [0.9963296055793762], "repair_candidates": [0.0035917286295443773, 0.9963296055793762, 2.773350934148766e-05, 1.7670367924438324e-07, 4.282548786704865e-07, 5.806645617667527e-07, 4.0516712033422664e-05, 3.4152446914959e-07, 2.0373615825519664e-06, 5.666374818247277e-06, 1.2959574178239563e-06], "target_probs": 0.9963296055793762}}


{"result": {"time": "2021-02-21 07:20:18.904739", "n_pass": [47, 4, 2], "n_token": 56, "loss": [0.4946920871734619, 0.0029189828783273697], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def assert_truthy(", "lval", ",", "*", "args", ",", "**kwargs", ")", "'Assert that lval evaluates truthy, not identity.'", "#NEWLINE#", "message", "=", "_get_msg", "(", "kwargs", ",", "kwargs", ",", "'assert_equal'", ")", "#NEWLINE#", "if", "message", ":", "#NEWLINE#", "#INDENT#", "assert", "lval", ",", "message", "#NEWLINE#", "#UNINDENT#", "else", ":", "#NEWLINE#", "#INDENT#", "assert", "lval", ",", "(", "'assertion failed: l == r\\nl: %r\\nr: %r\\n\\n%s'", "%", "(", "lval", ",", "True", ",", "_diff_message", "(", "lval", ",", "True", ")", ")", ")"]}}
{"position": {"error_location": 17, "repair_targets": [5], "repair_candidates": [15, 17, 5, 2, 28, 38, 44, 50, 11, 23, 30]}}
{"prediction": {"error_location": 0.6097586154937744, "repair_targets": [0.9970852732658386], "repair_candidates": [0.002873860066756606, 0.9970852732658386, 2.3005482944427058e-05, 6.055432066887079e-08, 1.688119652953901e-07, 3.4835173323699564e-07, 8.754694135859609e-06, 5.937287710366945e-07, 1.7868713939606096e-06, 4.935629931424046e-06, 1.2051586963934824e-06], "target_probs": 0.9970852732658386}}


{"result": {"time": "2021-02-21 07:20:18.961838", "n_pass": [52, 5, 3], "n_token": 52, "loss": [0.4983484745025635, 0.00425258232280612], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def assert_truthy(", "lval", ",", "*", "args", ",", "**kwargs", ")", "'Assert that lval evaluates truthy, not identity.'", "#NEWLINE#", "message", "=", "_get_msg", "(", "kwargs", ",", "kwargs", ",", "'assert_equal'", ")", "#NEWLINE#", "if", "message", "lval", ",", "message", "#NEWLINE#", "#UNINDENT#", "else", ":", "#NEWLINE#", "#INDENT#", "assert", "lval", ",", "(", "'assertion failed: l == r\\nl: %r\\nr: %r\\n\\n%s'", "%", "(", "lval", ",", "True", ",", "_diff_message", "(", "lval", ",", "True", ")", ")", ")"]}}
{"position": {"error_location": 17, "repair_targets": [5], "repair_candidates": [15, 17, 5, 2, 24, 34, 40, 46, 11, 23, 26]}}
{"prediction": {"error_location": 0.6075331568717957, "repair_targets": [0.9957564473152161], "repair_candidates": [0.004158922471106052, 0.9957564473152161, 4.6158824261510745e-05, 1.4548805893355166e-07, 5.159648139851924e-07, 1.7978446749111754e-06, 6.006467629049439e-06, 4.69884469112003e-07, 4.090601123607485e-06, 2.0700417735497467e-05, 4.7161402108031325e-06], "target_probs": 0.9957564473152161}}


{"result": {"time": "2021-02-21 07:20:19.018757", "n_pass": [54, 6, 4], "n_token": 48, "loss": [0.539070725440979, 0.003958599641919136], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def assert_truthy(", "lval", ",", "*", "args", ",", "**kwargs", ")", "'Assert that lval evaluates truthy, not identity.'", "#NEWLINE#", "message", "=", "_get_msg", "(", "kwargs", ",", "kwargs", ",", "'assert_equal'", ")", "#NEWLINE#", "if", "message", "lval", ",", "message", "#NEWLINE#", "#INDENT#", "assert", "lval", ",", "(", "'assertion failed: l == r\\nl: %r\\nr: %r\\n\\n%s'", "%", "(", "lval", ",", "True", ",", "_diff_message", "(", "lval", ",", "True", ")", ")", ")"]}}
{"position": {"error_location": 17, "repair_targets": [5], "repair_candidates": [15, 17, 5, 2, 24, 30, 36, 42, 11, 23, 26]}}
{"prediction": {"error_location": 0.5832899808883667, "repair_targets": [0.9960492253303528], "repair_candidates": [0.003807840868830681, 0.9960492253303528, 7.43467899155803e-05, 1.91005909755404e-07, 6.482261483142793e-07, 6.127330834715394e-06, 1.2605519259523135e-05, 1.574562702444382e-06, 2.4736762043175986e-06, 3.772335912799463e-05, 7.316926257772138e-06], "target_probs": 0.9960492253303528}}


{"result": {"time": "2021-02-21 07:20:19.075151", "n_pass": [56, 7, 5], "n_token": 44, "loss": [0.4686357378959656, 0.003445055801421404], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def assert_truthy(", "lval", ",", "*", "args", ",", "**kwargs", ")", "'Assert that lval evaluates truthy, not identity.'", "#NEWLINE#", "message", "=", "_get_msg", "(", "kwargs", ",", "kwargs", ",", "'assert_equal'", ")", "#NEWLINE#", "if", "message", "lval", ",", "message", "#NEWLINE#", "#INDENT#", "assert", "lval", ",", "lval", ",", "True", ",", "_diff_message", "(", "lval", ",", "True", ")", ")", ")"]}}
{"position": {"error_location": 17, "repair_targets": [5], "repair_candidates": [15, 17, 5, 2, 24, 30, 32, 38, 11, 23, 26]}}
{"prediction": {"error_location": 0.6258555054664612, "repair_targets": [0.9965608716011047], "repair_candidates": [0.0029182855505496264, 0.9965608716011047, 0.00036343661486171186, 9.244611192116281e-07, 6.763338205928449e-06, 4.668488327297382e-05, 3.661086520878598e-05, 1.820882607717067e-05, 1.1900279787369072e-05, 4.427639851201093e-06, 3.184330489602871e-05], "target_probs": 0.9965608716011047}}


{"result": {"time": "2021-02-21 07:20:19.134131", "n_pass": [59, 8, 6], "n_token": 40, "loss": [0.414474755525589, 0.0027973998803645372], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def assert_truthy(", "lval", ",", "*", "args", ",", "**kwargs", ")", "'Assert that lval evaluates truthy, not identity.'", "#NEWLINE#", "message", "=", "_get_msg", "(", "kwargs", ",", "kwargs", ",", "'assert_equal'", ")", "#NEWLINE#", "if", "message", "lval", ",", "message", "#NEWLINE#", "#INDENT#", "assert", "lval", ",", "lval", ",", "True", ",", "_diff_message", "(", "lval", ","]}}
{"position": {"error_location": 17, "repair_targets": [5], "repair_candidates": [15, 17, 5, 2, 24, 30, 32, 38, 11, 23, 26]}}
{"prediction": {"error_location": 0.6606870889663696, "repair_targets": [0.9972065091133118], "repair_candidates": [0.002200085436925292, 0.9972065091133118, 0.0004116420168429613, 1.3194053281040397e-06, 6.895964361319784e-06, 6.017713531036861e-05, 4.089928188477643e-05, 2.4107714125420898e-05, 2.8751032004947774e-05, 4.713590442406712e-06, 1.4838371498626657e-05], "target_probs": 0.9972065091133118}}


{"result": {"time": "2021-02-21 07:20:19.359018", "n_pass": [96, 12, 7], "n_token": 39, "loss": [0.46297281980514526, 0.0009748917655088007], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def assert_truthy(", "lval", "*", "args", ",", "**kwargs", ")", "'Assert that lval evaluates truthy, not identity.'", "#NEWLINE#", "message", "=", "_get_msg", "(", "kwargs", ",", "kwargs", ",", "'assert_equal'", ")", "#NEWLINE#", "if", "message", "lval", ",", "message", "#NEWLINE#", "#INDENT#", "assert", "lval", ",", "lval", ",", "True", ",", "_diff_message", "(", "lval", ","]}}
{"position": {"error_location": 16, "repair_targets": [4], "repair_candidates": [14, 16, 4, 2, 23, 29, 31, 37, 10, 22, 25]}}
{"prediction": {"error_location": 0.629409670829773, "repair_targets": [0.9990255832672119], "repair_candidates": [0.0006333363126032054, 0.9990255832672119, 0.0002496240776963532, 8.608622579231451e-07, 4.258702574588824e-06, 3.771650881390087e-05, 1.8261713194078766e-05, 7.412930244754534e-06, 1.5348719898611307e-05, 1.6691927839929122e-06, 5.996124855300877e-06], "target_probs": 0.9990255832672119}}


{"result": {"time": "2021-02-21 07:20:19.474386", "n_pass": [98, 14, 8], "n_token": 37, "loss": [0.7314293384552002, 0.0014653208199888468], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def assert_truthy(", "lval", "*", "args", ",", "**kwargs", "#NEWLINE#", "message", "=", "_get_msg", "(", "kwargs", ",", "kwargs", ",", "'assert_equal'", ")", "#NEWLINE#", "if", "message", "lval", ",", "message", "#NEWLINE#", "#INDENT#", "assert", "lval", ",", "lval", ",", "True", ",", "_diff_message", "(", "lval", ","]}}
{"position": {"error_location": 14, "repair_targets": [4], "repair_candidates": [12, 14, 4, 2, 21, 27, 29, 35, 8, 20, 23]}}
{"prediction": {"error_location": 0.48122066259384155, "repair_targets": [0.9985357522964478], "repair_candidates": [0.000803530914708972, 0.9985357522964478, 0.0004880447522737086, 2.122284740835312e-06, 1.2738712030113675e-05, 7.571469177491963e-05, 3.314983769087121e-05, 1.2725222404696979e-05, 1.812415757740382e-05, 3.239673333155224e-06, 1.48726103361696e-05], "target_probs": 0.9985357522964478}}


{"result": {"time": "2021-02-21 07:20:19.530785", "n_pass": [100, 15, 9], "n_token": 35, "loss": [0.7506683468818665, 0.0067134639248251915], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def assert_truthy(", "lval", "*", "args", ",", "**kwargs", "#NEWLINE#", "message", "(", "kwargs", ",", "kwargs", ",", "'assert_equal'", ")", "#NEWLINE#", "if", "message", "lval", ",", "message", "#NEWLINE#", "#INDENT#", "assert", "lval", ",", "lval", ",", "True", ",", "_diff_message", "(", "lval", ","]}}
{"position": {"error_location": 12, "repair_targets": [4], "repair_candidates": [10, 12, 4, 2, 19, 25, 27, 33, 8, 18, 21]}}
{"prediction": {"error_location": 0.4720509648323059, "repair_targets": [0.9933090209960938], "repair_candidates": [0.003879532217979431, 0.9933090209960938, 0.0007610096945427358, 3.470374576863833e-05, 0.00010750097862910479, 0.0005782644730061293, 0.0002997222763951868, 0.00041031846194528043, 0.00020789724658243358, 3.248854773119092e-05, 0.00037953502032905817], "target_probs": 0.9933090209960938}}


{"result": {"time": "2021-02-21 07:20:19.643093", "n_pass": [104, 17, 10], "n_token": 33, "loss": [0.518193781375885, 0.0011426776181906462], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def assert_truthy(", "lval", "*", "args", ",", "**kwargs", "#NEWLINE#", "message", "(", "kwargs", ",", "kwargs", ",", "'assert_equal'", "if", "message", "lval", ",", "message", "#NEWLINE#", "#INDENT#", "assert", "lval", ",", "lval", ",", "True", ",", "_diff_message", "(", "lval", ","]}}
{"position": {"error_location": 12, "repair_targets": [4], "repair_candidates": [10, 12, 4, 2, 17, 23, 25, 31, 8, 16, 19]}}
{"prediction": {"error_location": 0.5955953001976013, "repair_targets": [0.9988579750061035], "repair_candidates": [0.0005071850027889013, 0.9988579750061035, 0.000200158596271649, 8.074411198322196e-06, 1.5683644960517995e-05, 0.0001471420400775969, 2.419883821858093e-05, 9.273231989936903e-05, 4.804204581887461e-05, 3.84496388505795e-06, 9.509259689366445e-05], "target_probs": 0.9988579750061035}}


{"result": {"time": "2021-02-21 07:20:19.755496", "n_pass": [111, 19, 11], "n_token": 31, "loss": [0.6210123300552368, 0.0014317743480205536], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def assert_truthy(", "lval", "*", "args", ",", "**kwargs", "#NEWLINE#", "message", "(", "kwargs", ",", "kwargs", ",", "'assert_equal'", "if", "message", "lval", ",", "message", "#NEWLINE#", "#INDENT#", "assert", "lval", ",", "lval", ",", "_diff_message", "(", "lval", ","]}}
{"position": {"error_location": 12, "repair_targets": [4], "repair_candidates": [10, 12, 4, 2, 17, 23, 25, 29, 8, 16, 19]}}
{"prediction": {"error_location": 0.5374001264572144, "repair_targets": [0.9985692501068115], "repair_candidates": [0.0004626128065865487, 0.9985692501068115, 0.0003319592506159097, 1.5618283214280382e-05, 5.3453477448783815e-05, 0.00022263260325416923, 2.0751725969603285e-05, 0.00018774595810100436, 4.520855873124674e-05, 3.485810566417058e-06, 8.723698556423187e-05], "target_probs": 0.9985692501068115}}


{"result": {"time": "2021-02-21 07:20:20.040565", "n_pass": [122, 24, 12], "n_token": 29, "loss": [1.1372181177139282, 0.004690963309258223], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def assert_truthy(", "lval", "*", "args", ",", "**kwargs", "#NEWLINE#", "message", "(", "kwargs", ",", "kwargs", "if", "message", "lval", ",", "message", "#NEWLINE#", "#INDENT#", "assert", "lval", ",", "lval", ",", "_diff_message", "(", "lval", ","]}}
{"position": {"error_location": 12, "repair_targets": [4], "repair_candidates": [10, 12, 4, 2, 15, 21, 23, 27, 8, 14, 17]}}
{"prediction": {"error_location": 0.3207099437713623, "repair_targets": [0.9953200221061707], "repair_candidates": [0.0007168630254454911, 0.9953200221061707, 0.0010160407982766628, 0.00023529412283096462, 0.0005754805752076209, 0.0010479585034772754, 6.151671186671592e-06, 0.0009093979606404901, 5.0925395044032484e-05, 6.658244728896534e-06, 0.00011508579336805269], "target_probs": 0.9953200221061707}}


{"result": {"time": "2021-02-21 07:20:20.379593", "n_pass": [167, 30, 13], "n_token": 28, "loss": [1.2092684507369995, 0.008226823061704636], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def assert_truthy(", "lval", "*", "args", ",", "**kwargs", "#NEWLINE#", "message", "(", "kwargs", ",", "kwargs", "if", "message", "lval", "message", "#NEWLINE#", "#INDENT#", "assert", "lval", ",", "lval", ",", "_diff_message", "(", "lval", ","]}}
{"position": {"error_location": 12, "repair_targets": [4], "repair_candidates": [10, 12, 4, 2, 15, 20, 22, 26, 8, 14, 16]}}
{"prediction": {"error_location": 0.29841551184654236, "repair_targets": [0.9918069243431091], "repair_candidates": [0.0011436237255111337, 0.9918069243431091, 0.0018186179222539067, 0.00025549496058374643, 0.0006392213399522007, 0.001325750956311822, 1.460924863749824e-06, 0.0027248600963503122, 0.00011766322131734341, 1.2293748113734182e-05, 0.0001540106750326231], "target_probs": 0.9918069243431091}}


{"result": {"time": "2021-02-21 07:20:20.435910", "n_pass": [169, 31, 14], "n_token": 27, "loss": [1.3302109241485596, 0.004771871026605368], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def assert_truthy(", "lval", "*", "args", ",", "**kwargs", "#NEWLINE#", "message", "(", "kwargs", ",", "kwargs", "if", "message", "lval", "message", "#INDENT#", "assert", "lval", ",", "lval", ",", "_diff_message", "(", "lval", ","]}}
{"position": {"error_location": 12, "repair_targets": [4], "repair_candidates": [10, 12, 4, 2, 15, 19, 21, 25, 8, 14, 16]}}
{"prediction": {"error_location": 0.2644214928150177, "repair_targets": [0.9952394962310791], "repair_candidates": [0.0005407105199992657, 0.9952394962310791, 0.0010634490754455328, 0.00013894926814828068, 0.0004306211194489151, 0.000927115383092314, 2.6946677280648146e-06, 0.0015557417646050453, 2.551752913859673e-05, 7.910768545116298e-06, 6.77865682519041e-05], "target_probs": 0.9952394962310791}}


{"result": {"time": "2021-02-21 07:20:20.718330", "n_pass": [176, 36, 15], "n_token": 26, "loss": [1.580246090888977, 0.006707523483783007], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def assert_truthy(", "lval", "*", "args", ",", "**kwargs", "#NEWLINE#", "message", "(", "kwargs", ",", "kwargs", "if", "message", "lval", "message", "#INDENT#", "assert", "lval", ",", "lval", ",", "(", "lval", ","]}}
{"position": {"error_location": 12, "repair_targets": [4], "repair_candidates": [10, 12, 4, 2, 15, 19, 21, 24, 8, 14, 16]}}
{"prediction": {"error_location": 0.20592442154884338, "repair_targets": [0.9933149218559265], "repair_candidates": [0.00038147723535075784, 0.9933149218559265, 0.0013876623706892133, 0.0001992470643017441, 0.0008919964893721044, 0.0012210251297801733, 3.8646458051516674e-06, 0.002541942521929741, 2.2273865397437476e-05, 6.973937615839532e-06, 2.860241693269927e-05], "target_probs": 0.9933149218559265}}


{"result": {"time": "2021-02-21 07:20:21.000716", "n_pass": [183, 41, 16], "n_token": 25, "loss": [1.514312505722046, 0.003446371527388692], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def assert_truthy(", "lval", "args", ",", "**kwargs", "#NEWLINE#", "message", "(", "kwargs", ",", "kwargs", "if", "message", "lval", "message", "#INDENT#", "assert", "lval", ",", "lval", ",", "(", "lval", ","]}}
{"position": {"error_location": 11, "repair_targets": [3], "repair_candidates": [9, 11, 3, 2, 14, 18, 20, 23, 7, 13, 15]}}
{"prediction": {"error_location": 0.2199593186378479, "repair_targets": [0.9965595602989197], "repair_candidates": [0.0004191788611933589, 0.9965595602989197, 0.0009035489056259394, 0.0002167118655052036, 0.0006202965741977096, 0.0004714653769042343, 3.306708777017775e-06, 0.0007755527039989829, 1.3581872735812794e-05, 4.3888694563065656e-06, 1.2474439245124813e-05], "target_probs": 0.9965595602989197}}




Minimal simplified tokens:

['#NEWLINE#', 'def assert_truthy(', 'lval', 'args', ',', '**kwargs', '#NEWLINE#', 'message', '(', 'kwargs', ',', 'kwargs', 'if', 'message', 'lval', 'message', '#INDENT#', 'assert', 'lval', ',', 'lval', ',', '(', 'lval', ',']
