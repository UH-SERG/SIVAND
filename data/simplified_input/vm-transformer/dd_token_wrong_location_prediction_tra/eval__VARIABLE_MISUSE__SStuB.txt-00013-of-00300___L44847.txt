
Original sample:

{"has_bug": true, "bug_kind": 1, "bug_kind_name": "VARIABLE_MISUSE", "source_tokens": ["#NEWLINE#", "def _assert_field_in_model(", "model_cls", ",", "column", ")", ":", "#NEWLINE#", "#INDENT#", "assert", "(", "column", "in", "[", "field", ".", "name", "for", "field", "in", "column", ".", "_meta", ".", "fields", "]", ")"], "error_location": [20], "repair_targets": [2], "repair_candidates": [4, 11, 20, 14, 18, 2], "provenances": [{"datasetProvenance": {"datasetName": "ETHPy150Open", "filepath": "dimagi/commcare-hq/corehq/util/queries.py", "license": "bsd-3-clause", "note": "license: manual_eval"}}], "txt_file": "eval__VARIABLE_MISUSE__SStuB.txt-00013-of-00300", "js_count": 44847, "results": {"model": "transformer", "prob": {"loc": [[0.003927622921764851, 5.094586867926409e-07, 9.911435938647628e-08, 5.220830878727156e-09, 4.668646269578858e-08, 5.954976955990787e-09, 1.417002248871313e-08, 1.0135265071653521e-08, 1.2935069015895806e-08, 4.065670466957272e-08, 6.099384819435727e-08, 0.6524714231491089, 1.8642139139046776e-06, 8.277240340248682e-06, 1.7517369997221977e-05, 6.529110407882399e-08, 5.547738268774083e-09, 1.7802987883897003e-07, 8.341335622219503e-09, 3.6652016977001267e-09, 0.34356969594955444, 4.783883511549902e-08, 7.026014969824246e-08, 3.5024349642753805e-08, 8.84979769466554e-08, 8.897488896764116e-07, 1.37758240725816e-06]], "pointer": [[0.0, 0.0, 0.9998430013656616, 0.0, 2.420950295345392e-06, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.7863273171769833e-07, 0.0, 0.0, 3.7750464798591565e-07, 0.0, 0.0, 0.0, 0.0001540222583571449, 0.0, 1.87624333847225e-08, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]], "target": [0.9998430013656616]}, "loss": [1.0683653354644775, 0.00015701095981057733], "acc": [0.0, 0.0, 1.0, 0.0]}, "wrong_error_location": [11]}


Trace of simplified code(s):

{"result": {"time": "2021-02-21 07:08:05.419617", "n_pass": [1, 1, 1], "n_token": 27, "loss": [0.42698782682418823, 0.00015701095981057733], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def _assert_field_in_model(", "model_cls", ",", "column", ")", ":", "#NEWLINE#", "#INDENT#", "assert", "(", "column", "in", "[", "field", ".", "name", "for", "field", "in", "column", ".", "_meta", ".", "fields", "]", ")"]}}
{"position": {"error_location": 11, "repair_targets": [2], "repair_candidates": [4, 11, 20, 14, 18, 2]}}
{"prediction": {"error_location": 0.6524714231491089, "repair_targets": [0.9998430013656616], "repair_candidates": [0.9998430013656616, 2.420950295345392e-06, 1.7863273171769833e-07, 3.7750464798591565e-07, 0.0001540222583571449, 1.87624333847225e-08], "target_probs": 0.9998430013656616}}


{"result": {"time": "2021-02-21 07:08:05.531708", "n_pass": [27, 3, 2], "n_token": 23, "loss": [0.4355471134185791, 0.00018640109919942915], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def _assert_field_in_model(", "model_cls", ",", "column", ")", ":", "#NEWLINE#", "#INDENT#", "assert", "(", "column", "in", "[", "field", ".", "name", "for", "field", "in", "column", ".", "_meta"]}}
{"position": {"error_location": 11, "repair_targets": [2], "repair_candidates": [4, 11, 20, 14, 18, 2]}}
{"prediction": {"error_location": 0.646910548210144, "repair_targets": [0.9998136162757874], "repair_candidates": [0.9998136162757874, 4.71563089377014e-06, 2.518986264021805e-07, 1.3764770301349927e-07, 0.00018129007366951555, 5.1463256767192433e-08], "target_probs": 0.9998136162757874}}


{"result": {"time": "2021-02-21 07:08:05.587528", "n_pass": [30, 4, 3], "n_token": 20, "loss": [0.445762574672699, 4.3512336560525e-05], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def _assert_field_in_model(", "model_cls", ",", "column", ")", "assert", "(", "column", "in", "[", "field", ".", "name", "for", "field", "in", "column", ".", "_meta"]}}
{"position": {"error_location": 8, "repair_targets": [2], "repair_candidates": [4, 8, 17, 11, 15, 2]}}
{"prediction": {"error_location": 0.6403356194496155, "repair_targets": [0.999956488609314], "repair_candidates": [0.999956488609314, 1.0576696695352439e-05, 1.2395419162203325e-06, 7.333974139100974e-08, 3.1567902624374256e-05, 2.8993417444667102e-08], "target_probs": 0.999956488609314}}


{"result": {"time": "2021-02-21 07:08:05.702626", "n_pass": [53, 6, 4], "n_token": 18, "loss": [0.37306177616119385, 0.0047194091603159904], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def _assert_field_in_model(", "model_cls", ",", "column", ")", "assert", "(", "column", "in", "[", "field", "for", "field", "in", "column", ".", "_meta"]}}
{"position": {"error_location": 8, "repair_targets": [2], "repair_candidates": [4, 8, 15, 11, 13, 2]}}
{"prediction": {"error_location": 0.6886226534843445, "repair_targets": [0.9952917098999023], "repair_candidates": [0.9952917098999023, 0.00013651563494931906, 5.525456799659878e-06, 1.2578898633819335e-07, 0.004565918818116188, 1.5069218761709635e-07], "target_probs": 0.9952917098999023}}


{"result": {"time": "2021-02-21 07:08:05.757448", "n_pass": [55, 7, 5], "n_token": 16, "loss": [0.5623230934143066, 0.01871349848806858], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def _assert_field_in_model(", "model_cls", ",", "column", ")", "assert", "(", "column", "in", "[", "field", "for", "field", "in", "column"]}}
{"position": {"error_location": 8, "repair_targets": [2], "repair_candidates": [4, 8, 15, 11, 13, 2]}}
{"prediction": {"error_location": 0.5698836445808411, "repair_targets": [0.9814605116844177], "repair_candidates": [0.9814605116844177, 0.0012652032310143113, 8.326643182954285e-06, 2.9844940740986203e-07, 0.017265379428863525, 2.4601294512649474e-07], "target_probs": 0.9814605116844177}}


{"result": {"time": "2021-02-21 07:08:05.922867", "n_pass": [59, 10, 6], "n_token": 15, "loss": [0.8240740895271301, 0.2713836431503296], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def _assert_field_in_model(", "model_cls", "column", ")", "assert", "(", "column", "in", "[", "field", "for", "field", "in", "column"]}}
{"position": {"error_location": 7, "repair_targets": [2], "repair_candidates": [3, 7, 14, 10, 12, 2]}}
{"prediction": {"error_location": 0.4386409521102905, "repair_targets": [0.7623239755630493], "repair_candidates": [0.7623239755630493, 0.1978193074464798, 6.893671525176615e-05, 1.667695300966443e-06, 0.03978578373789787, 3.1179166626316146e-07], "target_probs": 0.7623239755630493}}




Minimal simplified tokens:

['#NEWLINE#', 'def _assert_field_in_model(', 'model_cls', 'column', ')', 'assert', '(', 'column', 'in', '[', 'field', 'for', 'field', 'in', 'column']
