
Original sample:

{"has_bug": true, "bug_kind": 1, "bug_kind_name": "VARIABLE_MISUSE", "source_tokens": ["#NEWLINE#", "def has_permission(", "request", ",", "context", ",", "userid", ",", "permission", ")", ":", "#NEWLINE#", "#INDENT#", "'\\n    Return True if userid has permission on context object.\\n\\n    Return True if the given userid has the given permission on the given\\n    context object, False otherwise.\\n\\n    For example:\\n\\n        if has_permission(request,\\n                          some_annotation,\\n                          \\'acct:philip@hypothes.is\\',\\n                          \\'read\\'):\\n            print \\'philip can read this annotation\\'\\n        else:\\n            print \"philip isn\\'t allowed to read this annotation\"\\n\\n    '", "#NEWLINE#", "policy", "=", "request", ".", "registry", ".", "queryUtility", "(", "authorization", ".", "IAuthorizationPolicy", ")", "#NEWLINE#", "users_principals", "=", "effective_principals", "(", "context", ",", "request", ")", "#NEWLINE#", "return", "bool", "(", "policy", ".", "permits", "(", "context", ",", "users_principals", ",", "permission", ")", ")"], "error_location": [32], "repair_targets": [6], "repair_candidates": [28, 46, 6, 4, 32, 44, 2, 17, 34, 8, 48, 15, 40], "provenances": [{"datasetProvenance": {"datasetName": "ETHPy150Open", "filepath": "hypothesis/h/h/auth/util.py", "license": "bsd-2-clause", "note": "license: github_api"}}], "txt_file": "eval__VARIABLE_MISUSE__SStuB.txt-00003-of-00300", "js_count": 12153, "results": {"model": "transformer", "prob": {"loc": [[0.013162767514586449, 3.902772505171015e-07, 6.205121394486923e-07, 1.647699399143221e-08, 2.465483532887447e-07, 1.3819766664369126e-08, 4.8474785216967575e-06, 1.1692232071425224e-08, 1.404175600328017e-05, 1.1338617156297914e-08, 2.1158978569246756e-08, 3.865447339990169e-08, 2.488661188237984e-08, 7.471479079868004e-08, 3.6491371702140896e-08, 1.0780128434362268e-07, 5.37190292249079e-09, 3.543986167642288e-06, 9.827403779638644e-09, 2.6215506210292006e-08, 2.938355869730458e-08, 2.67660693609173e-09, 4.656451579876375e-08, 1.4397590348380618e-05, 5.2283539275777e-08, 2.6581451706420012e-08, 8.24202288640663e-07, 8.863721490115495e-08, 1.0003319630413898e-06, 2.4049636948575426e-08, 4.51063186801548e-08, 4.757130156463063e-08, 0.0198369137942791, 2.004388989007566e-06, 0.8128719329833984, 2.852665829777834e-06, 1.2204145605210215e-07, 1.630215606951424e-08, 6.366975835447874e-10, 4.659318708633009e-09, 6.092417237368863e-08, 2.081338301707092e-08, 2.4097790429777888e-09, 6.528945561967703e-08, 0.07123410701751709, 1.3160034484371863e-07, 0.035670794546604156, 2.7844390615427983e-07, 0.047176606953144073, 3.7158315535634756e-07, 3.25184515759247e-07]], "pointer": [[0.0, 0.0, 0.00040818151319399476, 0.0, 0.00022231675393413752, 0.0, 0.8266701698303223, 0.0, 0.17127388715744019, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0003070628736168146, 0.0, 4.50990664830897e-05, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0008337621693499386, 0.0, 0.0, 0.0, 3.8287056668195873e-05, 0.0, 0.0001418909669155255, 0.0, 0.0, 0.0, 0.0, 0.0, 1.1229766414544429e-06, 0.0, 0.0, 0.0, 8.461467587039806e-06, 0.0, 4.7639063268434256e-05, 0.0, 2.150983618776081e-06, 0.0, 0.0]], "target": [0.8266701698303223]}, "loss": [3.920210838317871, 0.1903494894504547], "acc": [0.0, 0.0, 1.0, 0.0]}, "wrong_error_location": [34]}


Trace of simplified code(s):

{"result": {"time": "2021-02-21 05:54:40.554778", "n_pass": [1, 1, 1], "n_token": 51, "loss": [0.20718184113502502, 0.1903494894504547], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def has_permission(", "request", ",", "context", ",", "userid", ",", "permission", ")", ":", "#NEWLINE#", "#INDENT#", "'\\n    Return True if userid has permission on context object.\\n\\n    Return True if the given userid has the given permission on the given\\n    context object, False otherwise.\\n\\n    For example:\\n\\n        if has_permission(request,\\n                          some_annotation,\\n                          \\'acct:philip@hypothes.is\\',\\n                          \\'read\\'):\\n            print \\'philip can read this annotation\\'\\n        else:\\n            print \"philip isn\\'t allowed to read this annotation\"\\n\\n    '", "#NEWLINE#", "policy", "=", "request", ".", "registry", ".", "queryUtility", "(", "authorization", ".", "IAuthorizationPolicy", ")", "#NEWLINE#", "users_principals", "=", "effective_principals", "(", "context", ",", "request", ")", "#NEWLINE#", "return", "bool", "(", "policy", ".", "permits", "(", "context", ",", "users_principals", ",", "permission", ")", ")"]}}
{"position": {"error_location": 34, "repair_targets": [6], "repair_candidates": [28, 46, 6, 4, 32, 44, 2, 17, 34, 8, 48, 15, 40]}}
{"prediction": {"error_location": 0.8128719329833984, "repair_targets": [0.8266701698303223], "repair_candidates": [0.00040818151319399476, 0.00022231675393413752, 0.8266701698303223, 0.17127388715744019, 0.0003070628736168146, 4.50990664830897e-05, 0.0008337621693499386, 3.8287056668195873e-05, 0.0001418909669155255, 1.1229766414544429e-06, 8.461467587039806e-06, 4.7639063268434256e-05, 2.150983618776081e-06], "target_probs": 0.8266701698303223}}


{"result": {"time": "2021-02-21 05:54:40.611612", "n_pass": [23, 2, 2], "n_token": 45, "loss": [0.7823602557182312, 0.16032953560352325], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def has_permission(", "request", ",", "context", ",", "userid", ",", "permission", ")", ":", "#NEWLINE#", "#INDENT#", "'\\n    Return True if userid has permission on context object.\\n\\n    Return True if the given userid has the given permission on the given\\n    context object, False otherwise.\\n\\n    For example:\\n\\n        if has_permission(request,\\n                          some_annotation,\\n                          \\'acct:philip@hypothes.is\\',\\n                          \\'read\\'):\\n            print \\'philip can read this annotation\\'\\n        else:\\n            print \"philip isn\\'t allowed to read this annotation\"\\n\\n    '", "#NEWLINE#", "policy", "=", "request", ".", "IAuthorizationPolicy", ")", "#NEWLINE#", "users_principals", "=", "effective_principals", "(", "context", ",", "request", ")", "#NEWLINE#", "return", "bool", "(", "policy", ".", "permits", "(", "context", ",", "users_principals", ",", "permission", ")", ")"]}}
{"position": {"error_location": 28, "repair_targets": [6], "repair_candidates": [22, 40, 6, 4, 26, 38, 2, 17, 28, 8, 42, 15, 34]}}
{"prediction": {"error_location": 0.4573253393173218, "repair_targets": [0.8518630266189575], "repair_candidates": [0.0008230332750827074, 0.0003017804410774261, 0.8518630266189575, 0.144683375954628, 0.0001690558419795707, 8.15298844827339e-05, 0.0015501827001571655, 1.0136281161976513e-05, 0.0004219076654408127, 4.2634228520910256e-06, 3.717469735420309e-05, 5.243948180577718e-05, 1.950191972355242e-06], "target_probs": 0.8518630266189575}}


{"result": {"time": "2021-02-21 05:54:40.668790", "n_pass": [45, 3, 3], "n_token": 42, "loss": [0.22669121623039246, 0.08304934948682785], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def has_permission(", "request", ",", "context", ",", "userid", ",", "permission", ")", ":", "#NEWLINE#", "#INDENT#", "'\\n    Return True if userid has permission on context object.\\n\\n    Return True if the given userid has the given permission on the given\\n    context object, False otherwise.\\n\\n    For example:\\n\\n        if has_permission(request,\\n                          some_annotation,\\n                          \\'acct:philip@hypothes.is\\',\\n                          \\'read\\'):\\n            print \\'philip can read this annotation\\'\\n        else:\\n            print \"philip isn\\'t allowed to read this annotation\"\\n\\n    '", "#NEWLINE#", "policy", "=", "request", "#NEWLINE#", "users_principals", "=", "effective_principals", "(", "context", ",", "request", ")", "#NEWLINE#", "return", "bool", "(", "policy", ".", "permits", "(", "context", ",", "users_principals", ",", "permission", ")", ")"]}}
{"position": {"error_location": 25, "repair_targets": [6], "repair_candidates": [19, 37, 6, 4, 23, 35, 2, 17, 25, 8, 39, 15, 31]}}
{"prediction": {"error_location": 0.7971668243408203, "repair_targets": [0.9203057289123535], "repair_candidates": [7.443869253620505e-05, 7.313417154364288e-05, 0.9203057289123535, 0.07909658551216125, 3.749192546820268e-05, 5.8922560128849e-06, 0.00024321953242179006, 2.8197521260153735e-06, 2.3163865989772603e-05, 1.5184585322458588e-07, 1.1191864359716419e-05, 0.00012468715431168675, 1.3747170442002243e-06], "target_probs": 0.9203057289123535}}


{"result": {"time": "2021-02-21 05:54:40.725001", "n_pass": [48, 4, 4], "n_token": 39, "loss": [0.8090401887893677, 0.0018037722911685705], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def has_permission(", "request", ",", "context", ",", "userid", ",", "permission", ")", ":", "#NEWLINE#", "#INDENT#", "'\\n    Return True if userid has permission on context object.\\n\\n    Return True if the given userid has the given permission on the given\\n    context object, False otherwise.\\n\\n    For example:\\n\\n        if has_permission(request,\\n                          some_annotation,\\n                          \\'acct:philip@hypothes.is\\',\\n                          \\'read\\'):\\n            print \\'philip can read this annotation\\'\\n        else:\\n            print \"philip isn\\'t allowed to read this annotation\"\\n\\n    '", "#NEWLINE#", "policy", "=", "request", "#NEWLINE#", "users_principals", "=", "effective_principals", "(", "context", ",", "request", ")", "(", "policy", ".", "permits", "(", "context", ",", "users_principals", ",", "permission", ")", ")"]}}
{"position": {"error_location": 25, "repair_targets": [6], "repair_candidates": [19, 34, 6, 4, 23, 32, 2, 17, 25, 8, 36, 15, 28]}}
{"prediction": {"error_location": 0.4452853500843048, "repair_targets": [0.9981978535652161], "repair_candidates": [0.0001291191001655534, 0.00013338190910872072, 0.9981978535652161, 0.001262211473658681, 2.983177182613872e-05, 1.0321104127797298e-05, 7.200137042673305e-05, 3.18578418045945e-06, 8.497932140016928e-05, 1.9137421531922882e-06, 3.4678007068578154e-05, 3.97437070205342e-05, 6.839098887212458e-07], "target_probs": 0.9981978535652161}}


{"result": {"time": "2021-02-21 05:54:40.781617", "n_pass": [55, 5, 5], "n_token": 36, "loss": [0.7965559959411621, 0.002926335670053959], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def has_permission(", "request", ",", "context", ",", "userid", ",", "permission", "#INDENT#", "'\\n    Return True if userid has permission on context object.\\n\\n    Return True if the given userid has the given permission on the given\\n    context object, False otherwise.\\n\\n    For example:\\n\\n        if has_permission(request,\\n                          some_annotation,\\n                          \\'acct:philip@hypothes.is\\',\\n                          \\'read\\'):\\n            print \\'philip can read this annotation\\'\\n        else:\\n            print \"philip isn\\'t allowed to read this annotation\"\\n\\n    '", "#NEWLINE#", "policy", "=", "request", "#NEWLINE#", "users_principals", "=", "effective_principals", "(", "context", ",", "request", ")", "(", "policy", ".", "permits", "(", "context", ",", "users_principals", ",", "permission", ")", ")"]}}
{"position": {"error_location": 22, "repair_targets": [6], "repair_candidates": [16, 31, 6, 4, 20, 29, 2, 14, 22, 8, 33, 12, 25]}}
{"prediction": {"error_location": 0.45087912678718567, "repair_targets": [0.9970779418945312], "repair_candidates": [0.000246641953708604, 0.0001562667457619682, 0.9970779418945312, 0.0013920076889917254, 7.693137740716338e-05, 8.09994526207447e-06, 7.618070958415046e-05, 6.968884463276481e-06, 0.00017760040645953268, 1.7314249589617248e-06, 3.6776415072381496e-05, 0.0007369800005108118, 5.803483418276301e-06], "target_probs": 0.9970779418945312}}


{"result": {"time": "2021-02-21 05:54:40.897690", "n_pass": [90, 7, 6], "n_token": 35, "loss": [0.8206450939178467, 0.004476179368793964], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def has_permission(", "request", ",", "context", ",", "userid", "permission", "#INDENT#", "'\\n    Return True if userid has permission on context object.\\n\\n    Return True if the given userid has the given permission on the given\\n    context object, False otherwise.\\n\\n    For example:\\n\\n        if has_permission(request,\\n                          some_annotation,\\n                          \\'acct:philip@hypothes.is\\',\\n                          \\'read\\'):\\n            print \\'philip can read this annotation\\'\\n        else:\\n            print \"philip isn\\'t allowed to read this annotation\"\\n\\n    '", "#NEWLINE#", "policy", "=", "request", "#NEWLINE#", "users_principals", "=", "effective_principals", "(", "context", ",", "request", ")", "(", "policy", ".", "permits", "(", "context", ",", "users_principals", ",", "permission", ")", ")"]}}
{"position": {"error_location": 21, "repair_targets": [6], "repair_candidates": [15, 30, 6, 4, 19, 28, 2, 13, 21, 7, 32, 11, 24]}}
{"prediction": {"error_location": 0.44014760851860046, "repair_targets": [0.99553382396698], "repair_candidates": [0.0004292017256375402, 0.00015324937703553587, 0.99553382396698, 0.0018283019308000803, 9.154630242846906e-05, 7.191087206592783e-06, 0.00013068882981315255, 1.1567831279535312e-05, 0.00019000608881469816, 2.484618562448304e-06, 5.3131196182221174e-05, 0.0015571252442896366, 1.1709994396369439e-05], "target_probs": 0.99553382396698}}


{"result": {"time": "2021-02-21 05:54:41.065762", "n_pass": [100, 10, 7], "n_token": 33, "loss": [0.5304872393608093, 0.004364584106951952], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def has_permission(", "request", ",", "context", ",", "userid", "permission", "#INDENT#", "'\\n    Return True if userid has permission on context object.\\n\\n    Return True if the given userid has the given permission on the given\\n    context object, False otherwise.\\n\\n    For example:\\n\\n        if has_permission(request,\\n                          some_annotation,\\n                          \\'acct:philip@hypothes.is\\',\\n                          \\'read\\'):\\n            print \\'philip can read this annotation\\'\\n        else:\\n            print \"philip isn\\'t allowed to read this annotation\"\\n\\n    '", "#NEWLINE#", "policy", "=", "request", "#NEWLINE#", "users_principals", "=", "effective_principals", "(", "context", ",", "request", ")", "(", "policy", "(", "context", ",", "users_principals", ",", "permission", ")", ")"]}}
{"position": {"error_location": 21, "repair_targets": [6], "repair_candidates": [15, 28, 6, 4, 19, 26, 2, 13, 21, 7, 30, 11, 24]}}
{"prediction": {"error_location": 0.5883182287216187, "repair_targets": [0.9956449270248413], "repair_candidates": [0.00044508566497825086, 0.00011300169717287645, 0.9956449270248413, 0.0017408442217856646, 0.0009351901244372129, 9.061269338417333e-06, 0.00019532430451363325, 1.3114058674545959e-05, 0.0001852845016401261, 4.3457690480863675e-05, 3.6374378396430984e-05, 0.0006309927557595074, 7.400537924695527e-06], "target_probs": 0.9956449270248413}}


{"result": {"time": "2021-02-21 05:54:41.124504", "n_pass": [104, 11, 8], "n_token": 31, "loss": [0.3882388770580292, 0.002751018153503537], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def has_permission(", "request", ",", "context", ",", "userid", "permission", "#INDENT#", "'\\n    Return True if userid has permission on context object.\\n\\n    Return True if the given userid has the given permission on the given\\n    context object, False otherwise.\\n\\n    For example:\\n\\n        if has_permission(request,\\n                          some_annotation,\\n                          \\'acct:philip@hypothes.is\\',\\n                          \\'read\\'):\\n            print \\'philip can read this annotation\\'\\n        else:\\n            print \"philip isn\\'t allowed to read this annotation\"\\n\\n    '", "#NEWLINE#", "policy", "=", "request", "#NEWLINE#", "users_principals", "=", "effective_principals", "(", "context", ",", "request", ")", "(", "policy", "(", "context", ",", "users_principals", ",", "permission"]}}
{"position": {"error_location": 21, "repair_targets": [6], "repair_candidates": [15, 28, 6, 4, 19, 26, 2, 13, 21, 7, 30, 11, 24]}}
{"prediction": {"error_location": 0.6782504320144653, "repair_targets": [0.9972527623176575], "repair_candidates": [0.0003737314254976809, 8.750809502089396e-05, 0.9972527623176575, 0.0012024942552670836, 0.0007152897887863219, 4.570191777020227e-06, 7.135054329410195e-05, 5.458854957396397e-06, 0.00010895139712374657, 2.0281178876757622e-05, 9.77638137555914e-06, 0.00013748835772275925, 1.041350515151862e-05], "target_probs": 0.9972527623176575}}


{"result": {"time": "2021-02-21 05:54:41.291340", "n_pass": [108, 14, 9], "n_token": 30, "loss": [0.2712686359882355, 0.002459149807691574], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def has_permission(", "request", "context", ",", "userid", "permission", "#INDENT#", "'\\n    Return True if userid has permission on context object.\\n\\n    Return True if the given userid has the given permission on the given\\n    context object, False otherwise.\\n\\n    For example:\\n\\n        if has_permission(request,\\n                          some_annotation,\\n                          \\'acct:philip@hypothes.is\\',\\n                          \\'read\\'):\\n            print \\'philip can read this annotation\\'\\n        else:\\n            print \"philip isn\\'t allowed to read this annotation\"\\n\\n    '", "#NEWLINE#", "policy", "=", "request", "#NEWLINE#", "users_principals", "=", "effective_principals", "(", "context", ",", "request", ")", "(", "policy", "(", "context", ",", "users_principals", ",", "permission"]}}
{"position": {"error_location": 20, "repair_targets": [5], "repair_candidates": [14, 27, 5, 3, 18, 25, 2, 12, 20, 6, 29, 10, 23]}}
{"prediction": {"error_location": 0.7624117136001587, "repair_targets": [0.9975438714027405], "repair_candidates": [0.00016066248645074666, 4.660329068428837e-05, 0.9975438714027405, 0.0011547557078301907, 0.0007370049133896828, 4.4357161641528364e-06, 8.58856292325072e-05, 5.202650754654314e-06, 7.560090307379141e-05, 1.742635686241556e-05, 6.105040029069642e-06, 0.00015185274241957814, 1.0486396604392212e-05], "target_probs": 0.9975438714027405}}


{"result": {"time": "2021-02-21 05:54:41.347334", "n_pass": [110, 15, 10], "n_token": 29, "loss": [0.6554685831069946, 0.03636886179447174], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def has_permission(", "request", "context", "userid", "permission", "#INDENT#", "'\\n    Return True if userid has permission on context object.\\n\\n    Return True if the given userid has the given permission on the given\\n    context object, False otherwise.\\n\\n    For example:\\n\\n        if has_permission(request,\\n                          some_annotation,\\n                          \\'acct:philip@hypothes.is\\',\\n                          \\'read\\'):\\n            print \\'philip can read this annotation\\'\\n        else:\\n            print \"philip isn\\'t allowed to read this annotation\"\\n\\n    '", "#NEWLINE#", "policy", "=", "request", "#NEWLINE#", "users_principals", "=", "effective_principals", "(", "context", ",", "request", ")", "(", "policy", "(", "context", ",", "users_principals", ",", "permission"]}}
{"position": {"error_location": 19, "repair_targets": [4], "repair_candidates": [13, 26, 4, 3, 17, 24, 2, 11, 19, 5, 28, 9, 22]}}
{"prediction": {"error_location": 0.5191986560821533, "repair_targets": [0.9642845392227173], "repair_candidates": [0.00022571510635316372, 0.00011697499576257542, 0.9642845392227173, 0.012182858772575855, 0.0073896609246730804, 1.847653038566932e-05, 0.00044682685984298587, 3.40504375344608e-05, 0.0003812818613369018, 0.0005788046400994062, 3.917252615792677e-05, 0.01389230601489544, 0.0004094292235095054], "target_probs": 0.9642845392227173}}


{"result": {"time": "2021-02-21 05:54:41.403119", "n_pass": [113, 16, 11], "n_token": 27, "loss": [0.6566999554634094, 0.02961965836584568], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def has_permission(", "request", "context", "userid", "permission", "#INDENT#", "policy", "=", "request", "#NEWLINE#", "users_principals", "=", "effective_principals", "(", "context", ",", "request", ")", "(", "policy", "(", "context", ",", "users_principals", ",", "permission"]}}
{"position": {"error_location": 17, "repair_targets": [4], "repair_candidates": [11, 24, 4, 3, 15, 22, 2, 9, 17, 5, 26, 7, 20]}}
{"prediction": {"error_location": 0.5185598731040955, "repair_targets": [0.9708147048950195], "repair_candidates": [0.00023374317970592529, 0.00022672716295346618, 0.9708147048950195, 0.003714715363457799, 0.0195192638784647, 2.332533767912537e-05, 0.00022124260431155562, 3.578610994736664e-05, 0.0001952038292074576, 0.004218142479658127, 1.5686362530686893e-05, 0.0007634179783053696, 1.8114204067387618e-05], "target_probs": 0.9708147048950195}}


{"result": {"time": "2021-02-21 05:54:41.461682", "n_pass": [117, 17, 12], "n_token": 25, "loss": [0.38474613428115845, 0.01041879877448082], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def has_permission(", "request", "context", "userid", "permission", "#INDENT#", "policy", "=", "request", "#NEWLINE#", "users_principals", "=", "context", ",", "request", ")", "(", "policy", "(", "context", ",", "users_principals", ",", "permission"]}}
{"position": {"error_location": 15, "repair_targets": [4], "repair_candidates": [11, 22, 4, 3, 13, 20, 2, 9, 15, 5, 24, 7, 18]}}
{"prediction": {"error_location": 0.680623471736908, "repair_targets": [0.9896352887153625], "repair_candidates": [0.0001581099204486236, 0.0006624688394367695, 0.9896352887153625, 0.002669884357601404, 0.006202580872923136, 3.0286544642876834e-05, 0.00014269935491029173, 0.00010470679262652993, 0.0001818716700654477, 0.0001122367539210245, 7.828996785974596e-06, 8.889239688869566e-05, 3.1673757803218905e-06], "target_probs": 0.9896352887153625}}


{"result": {"time": "2021-02-21 05:54:41.685267", "n_pass": [155, 21, 13], "n_token": 24, "loss": [0.14876799285411835, 0.0035309470258653164], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def has_permission(", "request", "context", "userid", "permission", "#INDENT#", "policy", "=", "request", "#NEWLINE#", "users_principals", "=", "context", ",", "request", ")", "policy", "(", "context", ",", "users_principals", ",", "permission"]}}
{"position": {"error_location": 15, "repair_targets": [4], "repair_candidates": [11, 21, 4, 3, 13, 19, 2, 9, 15, 5, 23, 7, 17]}}
{"prediction": {"error_location": 0.8617690205574036, "repair_targets": [0.9964752793312073], "repair_candidates": [5.603123099717777e-06, 0.0002400040830252692, 0.9964752793312073, 0.0012875592801719904, 0.0019340779399499297, 2.645021822900162e-06, 1.870868436526507e-05, 1.6453698208351852e-06, 4.8060433073260356e-06, 2.6417717890581116e-05, 3.563044401744264e-07, 2.6773445824801456e-06, 9.182519278283507e-08], "target_probs": 0.9964752793312073}}


{"result": {"time": "2021-02-21 05:54:41.741231", "n_pass": [156, 22, 14], "n_token": 23, "loss": [0.9685587882995605, 0.01074149738997221], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def has_permission(", "request", "context", "userid", "permission", "#INDENT#", "policy", "=", "request", "#NEWLINE#", "users_principals", "=", "context", ",", "request", ")", "policy", "context", ",", "users_principals", ",", "permission"]}}
{"position": {"error_location": 15, "repair_targets": [4], "repair_candidates": [11, 20, 4, 3, 13, 18, 2, 9, 15, 5, 22, 7, 17]}}
{"prediction": {"error_location": 0.37962979078292847, "repair_targets": [0.9893159866333008], "repair_candidates": [5.469159077620134e-06, 0.008104764856398106, 0.9893159866333008, 0.002486436627805233, 4.117613207199611e-05, 6.918782673892565e-06, 2.001771645154804e-05, 3.3476451335445745e-06, 1.0040479537565261e-05, 5.079760398984945e-07, 4.659150363295339e-06, 6.925473030605644e-07, 5.086612731020068e-08], "target_probs": 0.9893159866333008}}




Minimal simplified tokens:

['#NEWLINE#', 'def has_permission(', 'request', 'context', 'userid', 'permission', '#INDENT#', 'policy', '=', 'request', '#NEWLINE#', 'users_principals', '=', 'context', ',', 'request', ')', 'policy', 'context', ',', 'users_principals', ',', 'permission']
