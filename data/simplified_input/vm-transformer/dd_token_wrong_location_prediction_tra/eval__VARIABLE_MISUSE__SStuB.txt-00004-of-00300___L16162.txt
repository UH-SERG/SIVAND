
Original sample:

{"has_bug": true, "bug_kind": 1, "bug_kind_name": "VARIABLE_MISUSE", "source_tokens": ["#NEWLINE#", "def connected_components(", "graph", ")", ":", "#NEWLINE#", "#INDENT#", "'\\n    Connected components.\\n\\n    @type  graph: graph, hypergraph\\n    @param graph: Graph.\\n\\n    @rtype:  dictionary\\n    @return: Pairing that associates each node to its connected component.\\n    '", "#NEWLINE#", "recursionlimit", "=", "getrecursionlimit", "(", ")", "#NEWLINE#", "setrecursionlimit", "(", "max", "(", "(", "len", "(", "graph", ".", "nodes", "(", ")", ")", "*", "2", ")", ",", "recursionlimit", ")", ")", "#NEWLINE#", "visited", "=", "{", "#NEWLINE#", "#INDENT#", "#NEWLINE#", "#UNINDENT#", "}", "#NEWLINE#", "count", "=", "1", "#NEWLINE#", "for", "each", "in", "graph", ":", "#NEWLINE#", "#INDENT#", "if", "(", "each", "not in", "visited", ")", ":", "#NEWLINE#", "#INDENT#", "_dfs", "(", "graph", ",", "visited", ",", "count", ",", "each", ")", "#NEWLINE#", "count", "=", "(", "visited", "+", "1", ")", "#NEWLINE#", "#UNINDENT#", "#UNINDENT#", "setrecursionlimit", "(", "recursionlimit", ")", "#NEWLINE#", "return", "visited"], "error_location": [79], "repair_targets": [45, 71, 76], "repair_candidates": [36, 60, 69, 79, 92, 50, 58, 73, 45, 71, 76, 9, 32, 88, 2, 22, 52, 67], "provenances": [{"datasetProvenance": {"datasetName": "ETHPy150Open", "filepath": "nerdvegas/rez/src/rez/vendor/pygraph/algorithms/accessibility.py", "license": "lgpl-3.0", "note": "license: bigquery_api"}}], "txt_file": "eval__VARIABLE_MISUSE__SStuB.txt-00004-of-00300", "js_count": 16162, "results": {"model": "transformer", "prob": {"loc": [[0.16066457331180573, 1.653207959861902e-06, 1.4625129551859573e-06, 3.854961505567189e-08, 5.6577057705453626e-08, 5.020199722594043e-08, 4.37872920144855e-08, 8.762825842723032e-08, 4.6434745826218204e-08, 1.5572763913951349e-06, 5.4643937374976304e-08, 7.246522670811828e-08, 5.466116590469028e-07, 3.514439015361859e-07, 8.886469515800854e-08, 4.183122541689954e-07, 1.5367765726637117e-08, 2.8768049276095553e-08, 6.512426153904016e-08, 7.814971070274623e-08, 2.762209483364586e-08, 1.0061644672987313e-07, 2.6468601390661206e-06, 1.1171074731919362e-07, 1.808935756741903e-08, 3.867542659463652e-07, 1.8153795622311009e-07, 2.8141705854523025e-08, 6.897437998532041e-08, 3.621553332777694e-06, 9.384836374692895e-08, 8.766554060457565e-08, 0.0004688276967499405, 1.2759032586018293e-07, 1.1884267792083847e-07, 1.0071091338659244e-07, 3.5312709201207326e-07, 4.6782807316958497e-07, 1.2592701068570022e-06, 1.4169530970775668e-07, 1.1453123960336598e-07, 1.5019196553112124e-07, 1.1239701080967279e-07, 7.064279117230399e-08, 9.746967322143973e-08, 1.0817814199981513e-06, 5.139093417483309e-08, 3.4990171116078272e-06, 3.2282616757584037e-07, 3.58870067884709e-07, 2.5001982066896744e-06, 5.5778162533215436e-08, 0.07212241739034653, 5.540632628253661e-07, 4.288048103262554e-07, 1.7959689557756064e-07, 2.703844756979379e-07, 4.366629582364112e-07, 0.006062089931219816, 2.983575768666924e-07, 0.010794696398079395, 5.149258441861093e-08, 3.1788908927410375e-07, 2.2148785205899912e-07, 8.15217902072618e-08, 4.5975685480925677e-08, 7.176921457130447e-08, 0.009342791512608528, 2.2240330110889772e-07, 0.08483052253723145, 2.51267692874535e-07, 0.0005909541505388916, 2.303476094311918e-07, 0.010326605290174484, 1.5669799324768974e-07, 2.140998986988052e-07, 8.600660294177942e-06, 2.4430359957250403e-08, 1.0273801365201507e-07, 0.013316923752427101, 4.4491289941106515e-07, 1.1363140401954297e-05, 6.036641480022809e-07, 1.2217270750625175e-06, 4.058340437040897e-07, 2.828734295690083e-07, 1.3626784323150787e-07, 1.168111083416079e-07, 0.11169201135635376, 1.8392124729871284e-06, 3.598727289499948e-06, 7.306301199605514e-07, 0.5197290182113647]], "pointer": [[0.0, 0.0, 0.004514324013143778, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.00962209701538086, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 5.355056418920867e-05, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0006408485351130366, 0.0, 0.0, 0.0, 0.002371725393459201, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.010396563448011875, 0.0, 0.0, 0.0, 0.0, 0.013002170249819756, 0.0, 0.00014837441267445683, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0014107645256444812, 0.0, 5.6743283494142815e-05, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.00021895990357734263, 0.0, 1.2751474059768952e-05, 0.0, 0.000672890164423734, 0.0, 1.582583354320377e-05, 0.0, 0.0, 0.9519838094711304, 0.0, 0.0, 0.00046946530346758664, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.004373924341052771, 0.0, 0.0, 0.0, 3.508992449496873e-05]], "target": [0.9630532264709473]}, "loss": [4.318719387054443, 0.037646595388650894], "acc": [0.0, 0.0, 1.0, 0.0]}, "wrong_error_location": [92]}


Trace of simplified code(s):

{"result": {"time": "2021-02-21 06:03:49.766783", "n_pass": [1, 1, 1], "n_token": 93, "loss": [0.6544476747512817, 0.037646595388650894], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def connected_components(", "graph", ")", ":", "#NEWLINE#", "#INDENT#", "'\\n    Connected components.\\n\\n    @type  graph: graph, hypergraph\\n    @param graph: Graph.\\n\\n    @rtype:  dictionary\\n    @return: Pairing that associates each node to its connected component.\\n    '", "#NEWLINE#", "recursionlimit", "=", "getrecursionlimit", "(", ")", "#NEWLINE#", "setrecursionlimit", "(", "max", "(", "(", "len", "(", "graph", ".", "nodes", "(", ")", ")", "*", "2", ")", ",", "recursionlimit", ")", ")", "#NEWLINE#", "visited", "=", "{", "#NEWLINE#", "#INDENT#", "#NEWLINE#", "#UNINDENT#", "}", "#NEWLINE#", "count", "=", "1", "#NEWLINE#", "for", "each", "in", "graph", ":", "#NEWLINE#", "#INDENT#", "if", "(", "each", "not in", "visited", ")", ":", "#NEWLINE#", "#INDENT#", "_dfs", "(", "graph", ",", "visited", ",", "count", ",", "each", ")", "#NEWLINE#", "count", "=", "(", "visited", "+", "1", ")", "#NEWLINE#", "#UNINDENT#", "#UNINDENT#", "setrecursionlimit", "(", "recursionlimit", ")", "#NEWLINE#", "return", "visited"]}}
{"position": {"error_location": 92, "repair_targets": [45, 71, 76], "repair_candidates": [36, 60, 69, 79, 92, 50, 58, 73, 45, 71, 76, 9, 32, 88, 2, 22, 52, 67]}}
{"prediction": {"error_location": 0.5197290182113647, "repair_targets": [0.010396563448011875, 0.000672890164423734, 0.9519838094711304], "repair_candidates": [0.004514324013143778, 0.00962209701538086, 5.355056418920867e-05, 0.0006408485351130366, 0.002371725393459201, 0.010396563448011875, 0.013002170249819756, 0.00014837441267445683, 0.0014107645256444812, 5.6743283494142815e-05, 0.00021895990357734263, 1.2751474059768952e-05, 0.000672890164423734, 1.582583354320377e-05, 0.9519838094711304, 0.00046946530346758664, 0.004373924341052771, 3.508992449496873e-05], "target_probs": 0.9630532264709473}}


{"result": {"time": "2021-02-21 06:03:49.825725", "n_pass": [21, 2, 2], "n_token": 82, "loss": [0.3054365813732147, 0.049070581793785095], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def connected_components(", "graph", ")", ":", "#NEWLINE#", "#INDENT#", "'\\n    Connected components.\\n\\n    @type  graph: graph, hypergraph\\n    @param graph: Graph.\\n\\n    @rtype:  dictionary\\n    @return: Pairing that associates each node to its connected component.\\n    '", "#NEWLINE#", "recursionlimit", "=", "graph", ".", "nodes", "(", ")", ")", "*", "2", ")", ",", "recursionlimit", ")", ")", "#NEWLINE#", "visited", "=", "{", "#NEWLINE#", "#INDENT#", "#NEWLINE#", "#UNINDENT#", "}", "#NEWLINE#", "count", "=", "1", "#NEWLINE#", "for", "each", "in", "graph", ":", "#NEWLINE#", "#INDENT#", "if", "(", "each", "not in", "visited", ")", ":", "#NEWLINE#", "#INDENT#", "_dfs", "(", "graph", ",", "visited", ",", "count", ",", "each", ")", "#NEWLINE#", "count", "=", "(", "visited", "+", "1", ")", "#NEWLINE#", "#UNINDENT#", "#UNINDENT#", "setrecursionlimit", "(", "recursionlimit", ")", "#NEWLINE#", "return", "visited"]}}
{"position": {"error_location": 81, "repair_targets": [34, 60, 65], "repair_candidates": [25, 49, 58, 68, 81, 39, 47, 62, 34, 60, 65, 9, 21, 77, 2, 11, 41, 56]}}
{"prediction": {"error_location": 0.7368014454841614, "repair_targets": [0.010441435500979424, 0.003704402130097151, 0.9379680752754211], "repair_candidates": [0.008423381485044956, 0.018978530541062355, 9.143405623035505e-05, 0.00048297998728230596, 0.001353608095087111, 0.010441435500979424, 0.006853945553302765, 8.112096111290157e-05, 0.0005681664915755391, 2.936482815130148e-05, 0.00046633771853521466, 7.262484359671362e-06, 0.003704402130097151, 1.2257552043593023e-05, 0.9379680752754211, 0.00039004997233860195, 0.010103946551680565, 4.3760683183791116e-05], "target_probs": 0.952113926410675}}


{"result": {"time": "2021-02-21 06:03:49.886767", "n_pass": [46, 3, 3], "n_token": 76, "loss": [1.391643762588501, 0.41790878772735596], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def connected_components(", "graph", ")", ":", "#NEWLINE#", "#INDENT#", "'\\n    Connected components.\\n\\n    @type  graph: graph, hypergraph\\n    @param graph: Graph.\\n\\n    @rtype:  dictionary\\n    @return: Pairing that associates each node to its connected component.\\n    '", "#NEWLINE#", "recursionlimit", "=", "graph", ".", "nodes", "(", ")", ")", "*", "2", ")", ",", "recursionlimit", ")", ")", "#NEWLINE#", "visited", "=", "{", "count", "=", "1", "#NEWLINE#", "for", "each", "in", "graph", ":", "#NEWLINE#", "#INDENT#", "if", "(", "each", "not in", "visited", ")", ":", "#NEWLINE#", "#INDENT#", "_dfs", "(", "graph", ",", "visited", ",", "count", ",", "each", ")", "#NEWLINE#", "count", "=", "(", "visited", "+", "1", ")", "#NEWLINE#", "#UNINDENT#", "#UNINDENT#", "setrecursionlimit", "(", "recursionlimit", ")", "#NEWLINE#", "return", "visited"]}}
{"position": {"error_location": 75, "repair_targets": [28, 54, 59], "repair_candidates": [25, 43, 52, 62, 75, 33, 41, 56, 28, 54, 59, 9, 21, 71, 2, 11, 35, 50]}}
{"prediction": {"error_location": 0.24866622686386108, "repair_targets": [0.007937629707157612, 0.002408607630059123, 0.648076057434082], "repair_candidates": [0.04152565076947212, 0.10304855555295944, 0.0006955917924642563, 0.006121032405644655, 0.02531469240784645, 0.007937629707157612, 0.07557608932256699, 0.0016684414586052299, 0.02892988920211792, 0.00037471417454071343, 0.0046655707992613316, 0.0007347590290009975, 0.002408607630059123, 0.00013524902169592679, 0.648076057434082, 0.003615541150793433, 0.0486181415617466, 0.0005536823300644755], "target_probs": 0.6584222912788391}}


{"result": {"time": "2021-02-21 06:03:49.944752", "n_pass": [53, 4, 4], "n_token": 70, "loss": [0.3030899167060852, 0.36131247878074646], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def connected_components(", "graph", ")", ":", "#NEWLINE#", "#INDENT#", "'\\n    Connected components.\\n\\n    @type  graph: graph, hypergraph\\n    @param graph: Graph.\\n\\n    @rtype:  dictionary\\n    @return: Pairing that associates each node to its connected component.\\n    '", "#NEWLINE#", "recursionlimit", "=", "graph", ".", "nodes", "(", ")", ")", "*", "2", ")", ",", "recursionlimit", ")", ")", "#NEWLINE#", "visited", "=", "{", "count", "=", "1", "#NEWLINE#", "for", "each", "in", "graph", ":", "#NEWLINE#", "#INDENT#", "if", "(", "each", "not in", "visited", ")", ":", "#NEWLINE#", "#INDENT#", "_dfs", "(", "graph", ",", "visited", ",", "count", ",", "each", ")", "#NEWLINE#", "count", "=", "(", "visited", "+", "(", "recursionlimit", ")", "#NEWLINE#", "return", "visited"]}}
{"position": {"error_location": 69, "repair_targets": [28, 54, 59], "repair_candidates": [25, 43, 52, 62, 69, 33, 41, 56, 28, 54, 59, 9, 21, 65, 2, 11, 35, 50]}}
{"prediction": {"error_location": 0.7385327219963074, "repair_targets": [0.00673386687412858, 0.0019199693342670798, 0.6881073713302612], "repair_candidates": [0.02363416738808155, 0.07811450213193893, 0.00039007619488984346, 0.009025800973176956, 0.013929257169365883, 0.00673386687412858, 0.11238069832324982, 0.0008566631004214287, 0.029046012088656425, 8.449750021100044e-05, 0.0028057510498911142, 0.0009692736202850938, 0.0019199693342670798, 0.00035313452826812863, 0.6881073713302612, 0.0009136880980804563, 0.029937295243144035, 0.0007980094524100423], "target_probs": 0.6967612504959106}}


{"result": {"time": "2021-02-21 06:03:50.003985", "n_pass": [92, 5, 5], "n_token": 68, "loss": [0.4013250768184662, 0.2164071798324585], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["graph", ")", ":", "#NEWLINE#", "#INDENT#", "'\\n    Connected components.\\n\\n    @type  graph: graph, hypergraph\\n    @param graph: Graph.\\n\\n    @rtype:  dictionary\\n    @return: Pairing that associates each node to its connected component.\\n    '", "#NEWLINE#", "recursionlimit", "=", "graph", ".", "nodes", "(", ")", ")", "*", "2", ")", ",", "recursionlimit", ")", ")", "#NEWLINE#", "visited", "=", "{", "count", "=", "1", "#NEWLINE#", "for", "each", "in", "graph", ":", "#NEWLINE#", "#INDENT#", "if", "(", "each", "not in", "visited", ")", ":", "#NEWLINE#", "#INDENT#", "_dfs", "(", "graph", ",", "visited", ",", "count", ",", "each", ")", "#NEWLINE#", "count", "=", "(", "visited", "+", "(", "recursionlimit", ")", "#NEWLINE#", "return", "visited"]}}
{"position": {"error_location": 67, "repair_targets": [26, 52, 57], "repair_candidates": [23, 41, 50, 60, 67, 31, 39, 54, 26, 52, 57, 7, 19, 63, 0, 9, 33, 48]}}
{"prediction": {"error_location": 0.6694324612617493, "repair_targets": [0.00631722342222929, 0.0017399895004928112, 0.7973501086235046], "repair_candidates": [0.006440950091928244, 0.03091420978307724, 0.001358947716653347, 0.00914448406547308, 0.010239089839160442, 0.00631722342222929, 0.08720645308494568, 0.0011918877717107534, 0.030489899218082428, 0.00015325823915190995, 0.00044416708988137543, 0.0017485891003161669, 0.0017399895004928112, 0.0003189095587003976, 0.7973501086235046, 0.0012702821986749768, 0.012675831094384193, 0.0009956355206668377], "target_probs": 0.8054072856903076}}


{"result": {"time": "2021-02-21 06:03:50.062082", "n_pass": [94, 6, 6], "n_token": 65, "loss": [0.6050846576690674, 0.41254058480262756], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["graph", ")", "'\\n    Connected components.\\n\\n    @type  graph: graph, hypergraph\\n    @param graph: Graph.\\n\\n    @rtype:  dictionary\\n    @return: Pairing that associates each node to its connected component.\\n    '", "#NEWLINE#", "recursionlimit", "=", "graph", ".", "nodes", "(", ")", ")", "*", "2", ")", ",", "recursionlimit", ")", ")", "#NEWLINE#", "visited", "=", "{", "count", "=", "1", "#NEWLINE#", "for", "each", "in", "graph", ":", "#NEWLINE#", "#INDENT#", "if", "(", "each", "not in", "visited", ")", ":", "#NEWLINE#", "#INDENT#", "_dfs", "(", "graph", ",", "visited", ",", "count", ",", "each", ")", "#NEWLINE#", "count", "=", "(", "visited", "+", "(", "recursionlimit", ")", "#NEWLINE#", "return", "visited"]}}
{"position": {"error_location": 64, "repair_targets": [23, 49, 54], "repair_candidates": [20, 38, 47, 57, 64, 28, 36, 51, 23, 49, 54, 4, 16, 60, 0, 6, 30, 45]}}
{"prediction": {"error_location": 0.546028196811676, "repair_targets": [0.005107952281832695, 0.0010615168139338493, 0.6557968854904175], "repair_candidates": [0.0036169562954455614, 0.020092247053980827, 0.0007267982582561672, 0.00416202750056982, 0.012910149060189724, 0.005107952281832695, 0.2327662706375122, 0.0006545213400386274, 0.0472230538725853, 0.0004723682359326631, 0.0011046068975701928, 0.0027247779071331024, 0.0010615168139338493, 0.0005488553433679044, 0.6557968854904175, 0.0005125639145262539, 0.009773767553269863, 0.0007446528179571033], "target_probs": 0.6619663238525391}}


{"result": {"time": "2021-02-21 06:03:50.122893", "n_pass": [97, 7, 7], "n_token": 62, "loss": [0.815224289894104, 0.2844790518283844], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["graph", ")", "'\\n    Connected components.\\n\\n    @type  graph: graph, hypergraph\\n    @param graph: Graph.\\n\\n    @rtype:  dictionary\\n    @return: Pairing that associates each node to its connected component.\\n    '", "#NEWLINE#", "recursionlimit", "=", "graph", ".", ")", "*", "2", ")", ",", "recursionlimit", ")", ")", "#NEWLINE#", "visited", "=", "{", "count", "=", "1", "#NEWLINE#", "for", "each", "in", "graph", ":", "#NEWLINE#", "#INDENT#", "if", "(", "each", "not in", "visited", ")", ":", "#NEWLINE#", "#INDENT#", "_dfs", "(", "graph", ",", "visited", ",", "count", ",", "each", ")", "#NEWLINE#", "count", "=", "(", "visited", "+", "(", "recursionlimit", ")", "#NEWLINE#", "return", "visited"]}}
{"position": {"error_location": 61, "repair_targets": [20, 46, 51], "repair_candidates": [17, 35, 44, 54, 61, 25, 33, 48, 20, 46, 51, 4, 13, 57, 0, 6, 27, 42]}}
{"prediction": {"error_location": 0.4425400495529175, "repair_targets": [0.002644372172653675, 0.0003947292279917747, 0.7493670582771301], "repair_candidates": [0.0037163046654313803, 0.01814376562833786, 0.001882014679722488, 0.0034693051129579544, 0.011104756034910679, 0.002644372172653675, 0.1457919180393219, 0.0006114425486885011, 0.04633462801575661, 0.0010342254536226392, 0.0006583900540135801, 0.003383708419278264, 0.0003947292279917747, 0.0007803096086718142, 0.7493670582771301, 0.0005520368576981127, 0.010012993589043617, 0.00011818499478977174], "target_probs": 0.752406120300293}}


{"result": {"time": "2021-02-21 06:03:50.238147", "n_pass": [100, 9, 8], "n_token": 59, "loss": [0.12433909624814987, 0.016874568536877632], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["graph", ")", "'\\n    Connected components.\\n\\n    @type  graph: graph, hypergraph\\n    @param graph: Graph.\\n\\n    @rtype:  dictionary\\n    @return: Pairing that associates each node to its connected component.\\n    '", "#NEWLINE#", "recursionlimit", "=", "graph", ".", ")", "*", "2", ")", ",", "recursionlimit", "visited", "=", "{", "count", "=", "1", "#NEWLINE#", "for", "each", "in", "graph", ":", "#NEWLINE#", "#INDENT#", "if", "(", "each", "not in", "visited", ")", ":", "#NEWLINE#", "#INDENT#", "_dfs", "(", "graph", ",", "visited", ",", "count", ",", "each", ")", "#NEWLINE#", "count", "=", "(", "visited", "+", "(", "recursionlimit", ")", "#NEWLINE#", "return", "visited"]}}
{"position": {"error_location": 58, "repair_targets": [17, 43, 48], "repair_candidates": [14, 32, 41, 51, 58, 22, 30, 45, 17, 43, 48, 4, 13, 54, 0, 6, 24, 39]}}
{"prediction": {"error_location": 0.8830803632736206, "repair_targets": [0.001960284309461713, 6.180188211146742e-05, 0.9812449216842651], "repair_candidates": [0.0011186200426891446, 0.003010778222233057, 0.000443311408162117, 0.004623329266905785, 0.0007447818061336875, 0.001960284309461713, 0.004547678865492344, 4.1159735701512545e-05, 0.0013849659590050578, 1.6005875295377336e-05, 0.0004931697039864957, 1.0527806807658635e-05, 6.180188211146742e-05, 1.8415621525491588e-05, 0.9812449216842651, 5.325876554707065e-05, 0.00021345890127122402, 1.3602922990685329e-05], "target_probs": 0.9832670092582703}}


{"result": {"time": "2021-02-21 06:03:50.296434", "n_pass": [105, 10, 9], "n_token": 56, "loss": [0.16532525420188904, 0.06056027486920357], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["graph", ")", "'\\n    Connected components.\\n\\n    @type  graph: graph, hypergraph\\n    @param graph: Graph.\\n\\n    @rtype:  dictionary\\n    @return: Pairing that associates each node to its connected component.\\n    '", "#NEWLINE#", "recursionlimit", "=", "graph", ".", ")", "*", "2", ")", ",", "recursionlimit", "visited", "=", "{", "count", "=", "1", "#NEWLINE#", "for", "each", "in", "graph", ":", "(", "each", "not in", "visited", ")", ":", "#NEWLINE#", "#INDENT#", "_dfs", "(", "graph", ",", "visited", ",", "count", ",", "each", ")", "#NEWLINE#", "count", "=", "(", "visited", "+", "(", "recursionlimit", ")", "#NEWLINE#", "return", "visited"]}}
{"position": {"error_location": 55, "repair_targets": [17, 40, 45], "repair_candidates": [14, 29, 38, 48, 55, 22, 27, 42, 17, 40, 45, 4, 13, 51, 0, 6, 24, 36]}}
{"prediction": {"error_location": 0.8476179838180542, "repair_targets": [0.007493187207728624, 4.835335130337626e-05, 0.9336954951286316], "repair_candidates": [0.0012369748437777162, 0.014188542030751705, 0.0015140038449317217, 0.02975456230342388, 0.0015163677744567394, 0.007493187207728624, 0.007191465701907873, 0.0004914903547614813, 0.00013760461297351867, 0.0001041717769112438, 0.0016828121151775122, 1.0119188118551392e-05, 4.835335130337626e-05, 1.112336030928418e-05, 0.9336954951286316, 8.803889795672148e-05, 0.0008075309451669455, 2.8145899705123156e-05], "target_probs": 0.9412370324134827}}


{"result": {"time": "2021-02-21 06:03:50.354020", "n_pass": [108, 11, 10], "n_token": 53, "loss": [0.04587387293577194, 0.05137123540043831], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["graph", ")", "'\\n    Connected components.\\n\\n    @type  graph: graph, hypergraph\\n    @param graph: Graph.\\n\\n    @rtype:  dictionary\\n    @return: Pairing that associates each node to its connected component.\\n    '", "#NEWLINE#", "recursionlimit", "=", "graph", ".", ")", "*", "2", ")", ",", "recursionlimit", "visited", "=", "{", "count", "=", "1", "#NEWLINE#", "for", "each", "in", "graph", ":", "(", "each", "not in", "visited", ")", ":", "(", "graph", ",", "visited", ",", "count", ",", "each", ")", "#NEWLINE#", "count", "=", "(", "visited", "+", "(", "recursionlimit", ")", "#NEWLINE#", "return", "visited"]}}
{"position": {"error_location": 52, "repair_targets": [17, 37, 42], "repair_candidates": [14, 29, 35, 45, 52, 22, 27, 39, 17, 37, 42, 4, 13, 48, 0, 6, 24, 33]}}
{"prediction": {"error_location": 0.9551626443862915, "repair_targets": [0.0038608142640441656, 0.0001731592637952417, 0.9458919763565063], "repair_candidates": [0.001146098948083818, 0.010893838480114937, 0.0010270605562254786, 0.01955275610089302, 0.0014889476587995887, 0.0038608142640441656, 0.005334715824574232, 0.0013458470348268747, 0.0013208020245656371, 0.000183973548701033, 0.007216280326247215, 0.00024091159866657108, 0.0001731592637952417, 2.182387834182009e-05, 0.9458919763565063, 4.1329971281811595e-05, 0.00024323543766513467, 1.6482908904436044e-05], "target_probs": 0.94992595911026}}


{"result": {"time": "2021-02-21 06:03:50.414553", "n_pass": [119, 12, 11], "n_token": 50, "loss": [0.04822274670004845, 0.05321008339524269], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["graph", ")", "'\\n    Connected components.\\n\\n    @type  graph: graph, hypergraph\\n    @param graph: Graph.\\n\\n    @rtype:  dictionary\\n    @return: Pairing that associates each node to its connected component.\\n    '", "#NEWLINE#", "recursionlimit", "=", "graph", ".", ")", ",", "recursionlimit", "visited", "=", "{", "count", "=", "1", "#NEWLINE#", "for", "each", "in", "graph", ":", "(", "each", "not in", "visited", ")", ":", "(", "graph", ",", "visited", ",", "count", ",", "each", ")", "#NEWLINE#", "count", "=", "(", "visited", "+", "(", "recursionlimit", ")", "#NEWLINE#", "return", "visited"]}}
{"position": {"error_location": 49, "repair_targets": [14, 34, 39], "repair_candidates": [11, 26, 32, 42, 49, 19, 24, 36, 14, 34, 39, 4, 10, 45, 0, 6, 21, 30]}}
{"prediction": {"error_location": 0.9529213905334473, "repair_targets": [0.004286790266633034, 0.00035969249438494444, 0.9435343146324158], "repair_candidates": [0.0010844484204426408, 0.00801132246851921, 0.001016157679259777, 0.010347587056457996, 0.0027227625250816345, 0.004286790266633034, 0.006360604893416166, 0.0017682538600638509, 0.007068989798426628, 0.000827580748591572, 0.010284720920026302, 0.0012712239986285567, 0.00035969249438494444, 8.760042692301795e-05, 0.9435343146324158, 0.00016815181879792362, 0.0007650481420569122, 3.476673737168312e-05], "target_probs": 0.9481807947158813}}


{"result": {"time": "2021-02-21 06:03:50.474055", "n_pass": [172, 13, 12], "n_token": 49, "loss": [0.0851629450917244, 0.09593216329813004], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["graph", ")", "'\\n    Connected components.\\n\\n    @type  graph: graph, hypergraph\\n    @param graph: Graph.\\n\\n    @rtype:  dictionary\\n    @return: Pairing that associates each node to its connected component.\\n    '", "#NEWLINE#", "recursionlimit", "=", "graph", ")", ",", "recursionlimit", "visited", "=", "{", "count", "=", "1", "#NEWLINE#", "for", "each", "in", "graph", ":", "(", "each", "not in", "visited", ")", ":", "(", "graph", ",", "visited", ",", "count", ",", "each", ")", "#NEWLINE#", "count", "=", "(", "visited", "+", "(", "recursionlimit", ")", "#NEWLINE#", "return", "visited"]}}
{"position": {"error_location": 48, "repair_targets": [13, 33, 38], "repair_candidates": [10, 25, 31, 41, 48, 18, 23, 35, 13, 33, 38, 4, 9, 44, 0, 6, 20, 29]}}
{"prediction": {"error_location": 0.9183624982833862, "repair_targets": [0.00846052821725607, 0.0008823574753478169, 0.8991827368736267], "repair_candidates": [0.001740562729537487, 0.027042772620916367, 0.0034479990135878325, 0.02117287367582321, 0.004469169769436121, 0.00846052821725607, 0.006026099435985088, 0.001351236249320209, 0.004816426429897547, 0.0009704561671242118, 0.015535031445324421, 0.0016378791769966483, 0.0008823574753478169, 0.00012747205619234592, 0.8991827368736267, 0.0003471294476184994, 0.0027313963510096073, 5.783786400570534e-05], "target_probs": 0.9085256457328796}}


{"result": {"time": "2021-02-21 06:03:50.531468", "n_pass": [173, 14, 13], "n_token": 48, "loss": [0.17121249437332153, 0.17840614914894104], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["graph", ")", "'\\n    Connected components.\\n\\n    @type  graph: graph, hypergraph\\n    @param graph: Graph.\\n\\n    @rtype:  dictionary\\n    @return: Pairing that associates each node to its connected component.\\n    '", "#NEWLINE#", "recursionlimit", "=", "graph", ",", "recursionlimit", "visited", "=", "{", "count", "=", "1", "#NEWLINE#", "for", "each", "in", "graph", ":", "(", "each", "not in", "visited", ")", ":", "(", "graph", ",", "visited", ",", "count", ",", "each", ")", "#NEWLINE#", "count", "=", "(", "visited", "+", "(", "recursionlimit", ")", "#NEWLINE#", "return", "visited"]}}
{"position": {"error_location": 47, "repair_targets": [12, 32, 37], "repair_candidates": [9, 24, 30, 40, 47, 17, 22, 34, 12, 32, 37, 4, 8, 43, 0, 6, 19, 28]}}
{"prediction": {"error_location": 0.8426424860954285, "repair_targets": [0.011372501030564308, 0.0011061199475079775, 0.8241239190101624], "repair_candidates": [0.00233653886243701, 0.06715566664934158, 0.012152651324868202, 0.03439851477742195, 0.00483242841437459, 0.011372501030564308, 0.0038750059902668, 0.0016919536283239722, 0.0015570122050121427, 0.0008162787999026477, 0.028545783832669258, 0.0014243324985727668, 0.0011061199475079775, 9.091430547414348e-05, 0.8241239190101624, 0.0004051370779052377, 0.004053811077028513, 6.140743789728731e-05], "target_probs": 0.8366025686264038}}


{"result": {"time": "2021-02-21 06:03:50.588660", "n_pass": [174, 15, 14], "n_token": 47, "loss": [0.0730319395661354, 0.08567718416452408], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["graph", ")", "'\\n    Connected components.\\n\\n    @type  graph: graph, hypergraph\\n    @param graph: Graph.\\n\\n    @rtype:  dictionary\\n    @return: Pairing that associates each node to its connected component.\\n    '", "#NEWLINE#", "recursionlimit", "=", "graph", "recursionlimit", "visited", "=", "{", "count", "=", "1", "#NEWLINE#", "for", "each", "in", "graph", ":", "(", "each", "not in", "visited", ")", ":", "(", "graph", ",", "visited", ",", "count", ",", "each", ")", "#NEWLINE#", "count", "=", "(", "visited", "+", "(", "recursionlimit", ")", "#NEWLINE#", "return", "visited"]}}
{"position": {"error_location": 46, "repair_targets": [11, 31, 36], "repair_candidates": [8, 23, 29, 39, 46, 16, 21, 33, 11, 31, 36, 4, 7, 42, 0, 6, 18, 27]}}
{"prediction": {"error_location": 0.9295711517333984, "repair_targets": [0.009489841759204865, 0.0014089902397245169, 0.9069916605949402], "repair_candidates": [0.002461083233356476, 0.03430556505918503, 0.008199379779398441, 0.013442057184875011, 0.003050379455089569, 0.009489841759204865, 0.0015278307255357504, 0.0005222821491770446, 0.0008142406004481018, 0.0006054091500118375, 0.014644824899733067, 0.0006603848887607455, 0.0014089902397245169, 9.392041101818904e-05, 0.9069916605949402, 4.622044798452407e-05, 0.0016988763818517327, 3.7063171475892887e-05], "target_probs": 0.9178904891014099}}


{"result": {"time": "2021-02-21 06:03:50.648093", "n_pass": [177, 16, 15], "n_token": 46, "loss": [0.08261336386203766, 0.08458886295557022], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["graph", ")", "'\\n    Connected components.\\n\\n    @type  graph: graph, hypergraph\\n    @param graph: Graph.\\n\\n    @rtype:  dictionary\\n    @return: Pairing that associates each node to its connected component.\\n    '", "#NEWLINE#", "recursionlimit", "=", "graph", "recursionlimit", "visited", "{", "count", "=", "1", "#NEWLINE#", "for", "each", "in", "graph", ":", "(", "each", "not in", "visited", ")", ":", "(", "graph", ",", "visited", ",", "count", ",", "each", ")", "#NEWLINE#", "count", "=", "(", "visited", "+", "(", "recursionlimit", ")", "#NEWLINE#", "return", "visited"]}}
{"position": {"error_location": 45, "repair_targets": [10, 30, 35], "repair_candidates": [8, 22, 28, 38, 45, 15, 20, 32, 10, 30, 35, 4, 7, 41, 0, 6, 17, 26]}}
{"prediction": {"error_location": 0.9207071661949158, "repair_targets": [0.010292300954461098, 0.0014592331135645509, 0.907138466835022], "repair_candidates": [0.0022251412738114595, 0.0381166897714138, 0.01143233384937048, 0.006176679395139217, 0.00325882900506258, 0.010292300954461098, 0.001749297953210771, 0.00045763709931634367, 0.00037059083115309477, 0.0008006609859876335, 0.014226827770471573, 0.0005151104414835572, 0.0014592331135645509, 0.00011365483806002885, 0.907138466835022, 5.209351729718037e-05, 0.0015713480534031987, 4.3066822399850935e-05], "target_probs": 0.9188899993896484}}


{"result": {"time": "2021-02-21 06:03:50.705494", "n_pass": [178, 17, 16], "n_token": 45, "loss": [0.0854271948337555, 0.09332726150751114], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["graph", ")", "'\\n    Connected components.\\n\\n    @type  graph: graph, hypergraph\\n    @param graph: Graph.\\n\\n    @rtype:  dictionary\\n    @return: Pairing that associates each node to its connected component.\\n    '", "#NEWLINE#", "recursionlimit", "=", "graph", "recursionlimit", "visited", "count", "=", "1", "#NEWLINE#", "for", "each", "in", "graph", ":", "(", "each", "not in", "visited", ")", ":", "(", "graph", ",", "visited", ",", "count", ",", "each", ")", "#NEWLINE#", "count", "=", "(", "visited", "+", "(", "recursionlimit", ")", "#NEWLINE#", "return", "visited"]}}
{"position": {"error_location": 44, "repair_targets": [9, 29, 34], "repair_candidates": [8, 21, 27, 37, 44, 14, 19, 31, 9, 29, 34, 4, 7, 40, 0, 6, 16, 25]}}
{"prediction": {"error_location": 0.9181200861930847, "repair_targets": [0.008052793331444263, 0.0015313633484765887, 0.9013112187385559], "repair_candidates": [0.0020436644554138184, 0.03362172469496727, 0.009328841231763363, 0.01592697761952877, 0.008517692796885967, 0.008052793331444263, 0.002178898546844721, 0.0005376826738938689, 0.0005512934294529259, 0.0014005110133439302, 0.012249346822500229, 0.0008583945455029607, 0.0015313633484765887, 0.00010067623225040734, 0.9013112187385559, 9.718079672893509e-05, 0.0016307348851114511, 6.090154420235194e-05], "target_probs": 0.9108953475952148}}


{"result": {"time": "2021-02-21 06:03:50.763555", "n_pass": [180, 18, 17], "n_token": 44, "loss": [0.2850404679775238, 0.4970569610595703], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["graph", ")", "'\\n    Connected components.\\n\\n    @type  graph: graph, hypergraph\\n    @param graph: Graph.\\n\\n    @rtype:  dictionary\\n    @return: Pairing that associates each node to its connected component.\\n    '", "#NEWLINE#", "recursionlimit", "=", "graph", "recursionlimit", "visited", "count", "1", "#NEWLINE#", "for", "each", "in", "graph", ":", "(", "each", "not in", "visited", ")", ":", "(", "graph", ",", "visited", ",", "count", ",", "each", ")", "#NEWLINE#", "count", "=", "(", "visited", "+", "(", "recursionlimit", ")", "#NEWLINE#", "return", "visited"]}}
{"position": {"error_location": 43, "repair_targets": [9, 28, 33], "repair_candidates": [8, 20, 26, 36, 43, 13, 18, 30, 9, 28, 33, 4, 7, 39, 0, 6, 15, 24]}}
{"prediction": {"error_location": 0.7519838213920593, "repair_targets": [0.007988977245986462, 0.0035329267848283052, 0.596796452999115], "repair_candidates": [0.008469994179904461, 0.10925411432981491, 0.029455777257680893, 0.10863769054412842, 0.006686305161565542, 0.007988977245986462, 0.011643992736935616, 0.0032448526471853256, 0.006341959349811077, 0.014631801284849644, 0.051989708095788956, 0.01803092285990715, 0.0035329267848283052, 0.001179455779492855, 0.596796452999115, 0.0006946943467482924, 0.020953433588147163, 0.000467005098471418], "target_probs": 0.6083183288574219}}


{"result": {"time": "2021-02-21 06:03:50.821025", "n_pass": [181, 19, 18], "n_token": 43, "loss": [0.19416633248329163, 0.24312834441661835], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["graph", ")", "'\\n    Connected components.\\n\\n    @type  graph: graph, hypergraph\\n    @param graph: Graph.\\n\\n    @rtype:  dictionary\\n    @return: Pairing that associates each node to its connected component.\\n    '", "#NEWLINE#", "recursionlimit", "=", "graph", "recursionlimit", "visited", "count", "#NEWLINE#", "for", "each", "in", "graph", ":", "(", "each", "not in", "visited", ")", ":", "(", "graph", ",", "visited", ",", "count", ",", "each", ")", "#NEWLINE#", "count", "=", "(", "visited", "+", "(", "recursionlimit", ")", "#NEWLINE#", "return", "visited"]}}
{"position": {"error_location": 42, "repair_targets": [9, 27, 32], "repair_candidates": [8, 19, 25, 35, 42, 12, 17, 29, 9, 27, 32, 4, 7, 38, 0, 6, 14, 23]}}
{"prediction": {"error_location": 0.8235208988189697, "repair_targets": [0.021336527541279793, 0.008121061138808727, 0.7547132968902588], "repair_candidates": [0.006426326464861631, 0.09952647984027863, 0.021639280021190643, 0.033157192170619965, 0.00286712939850986, 0.021336527541279793, 0.0042067053727805614, 0.0013554737670347095, 0.0008052043849602342, 0.0025255244690924883, 0.035544008016586304, 0.0014029272133484483, 0.008121061138808727, 0.0004557192442007363, 0.7547132968902588, 0.0004338376165833324, 0.005259001161903143, 0.00022435725259128958], "target_probs": 0.7841708660125732}}


{"result": {"time": "2021-02-21 06:03:50.878155", "n_pass": [182, 20, 19], "n_token": 42, "loss": [0.11029991507530212, 0.21907946467399597], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["graph", ")", "'\\n    Connected components.\\n\\n    @type  graph: graph, hypergraph\\n    @param graph: Graph.\\n\\n    @rtype:  dictionary\\n    @return: Pairing that associates each node to its connected component.\\n    '", "#NEWLINE#", "recursionlimit", "=", "graph", "recursionlimit", "visited", "count", "for", "each", "in", "graph", ":", "(", "each", "not in", "visited", ")", ":", "(", "graph", ",", "visited", ",", "count", ",", "each", ")", "#NEWLINE#", "count", "=", "(", "visited", "+", "(", "recursionlimit", ")", "#NEWLINE#", "return", "visited"]}}
{"position": {"error_location": 41, "repair_targets": [9, 26, 31], "repair_candidates": [8, 18, 24, 34, 41, 11, 16, 28, 9, 26, 31, 4, 7, 37, 0, 6, 13, 22]}}
{"prediction": {"error_location": 0.8955655097961426, "repair_targets": [0.0609516017138958, 0.0008833360043354332, 0.7414229512214661], "repair_candidates": [0.004042676649987698, 0.017928237095475197, 0.0068661365658044815, 0.07797315716743469, 0.002480754628777504, 0.0609516017138958, 0.02396198734641075, 0.0011764972005039454, 0.00779174268245697, 0.011153909377753735, 0.003800582140684128, 0.003479004604741931, 0.0008833360043354332, 0.002203594194725156, 0.7414229512214661, 0.0007431200356222689, 0.032922372221946716, 0.00021845061564818025], "target_probs": 0.8032578825950623}}


{"result": {"time": "2021-02-21 06:03:50.935991", "n_pass": [185, 21, 20], "n_token": 40, "loss": [0.12051317095756531, 0.2906416356563568], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["graph", ")", "'\\n    Connected components.\\n\\n    @type  graph: graph, hypergraph\\n    @param graph: Graph.\\n\\n    @rtype:  dictionary\\n    @return: Pairing that associates each node to its connected component.\\n    '", "#NEWLINE#", "recursionlimit", "=", "graph", "recursionlimit", "visited", "count", "for", "each", "in", "graph", "each", "not in", "visited", ")", ":", "(", "graph", ",", "visited", ",", "count", ",", "each", ")", "#NEWLINE#", "count", "=", "(", "visited", "+", "(", "recursionlimit", ")", "#NEWLINE#", "return", "visited"]}}
{"position": {"error_location": 39, "repair_targets": [9, 24, 29], "repair_candidates": [8, 16, 22, 32, 39, 11, 14, 26, 9, 24, 29, 4, 7, 35, 0, 6, 13, 20]}}
{"prediction": {"error_location": 0.8864654302597046, "repair_targets": [0.09248585253953934, 0.0009575532167218626, 0.6543402075767517], "repair_candidates": [0.005746456794440746, 0.020398538559675217, 0.007697040680795908, 0.1125384122133255, 0.004151893313974142, 0.09248585253953934, 0.024907279759645462, 0.0010490540880709887, 0.0007527850684709847, 0.012317672371864319, 0.0006720140227116644, 0.0021637524478137493, 0.0009575532167218626, 0.0026214111130684614, 0.6543402075767517, 0.0006323896814137697, 0.05636121332645416, 0.00020651445083785802], "target_probs": 0.7477836012840271}}


{"result": {"time": "2021-02-21 06:03:50.995977", "n_pass": [188, 22, 21], "n_token": 38, "loss": [0.047055311501026154, 0.07670025527477264], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["graph", ")", "'\\n    Connected components.\\n\\n    @type  graph: graph, hypergraph\\n    @param graph: Graph.\\n\\n    @rtype:  dictionary\\n    @return: Pairing that associates each node to its connected component.\\n    '", "#NEWLINE#", "recursionlimit", "=", "graph", "recursionlimit", "visited", "count", "for", "each", "in", "graph", "each", "not in", "visited", ")", "graph", ",", "visited", ",", "count", ",", "each", ")", "#NEWLINE#", "count", "=", "(", "visited", "+", "(", "recursionlimit", ")", "#NEWLINE#", "return", "visited"]}}
{"position": {"error_location": 37, "repair_targets": [9, 22, 27], "repair_candidates": [8, 16, 20, 30, 37, 11, 14, 24, 9, 22, 27, 4, 7, 33, 0, 6, 13, 18]}}
{"prediction": {"error_location": 0.9540347456932068, "repair_targets": [0.08328039944171906, 0.03293854743242264, 0.8099485039710999], "repair_candidates": [0.0026821973733603954, 0.010801644064486027, 0.0032057552598416805, 0.02745341882109642, 0.0011471493635326624, 0.08328039944171906, 0.003830266185104847, 0.00037098320899531245, 6.398316327249631e-05, 0.001872399589046836, 0.00208263355307281, 0.001925335032865405, 0.03293854743242264, 0.002005607122555375, 0.8099485039710999, 0.0001632982457522303, 0.016150450333952904, 7.748019561404362e-05], "target_probs": 0.9261674284934998}}


{"result": {"time": "2021-02-21 06:03:51.111254", "n_pass": [197, 24, 22], "n_token": 36, "loss": [0.3827067017555237, 0.32463201880455017], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["graph", ")", "'\\n    Connected components.\\n\\n    @type  graph: graph, hypergraph\\n    @param graph: Graph.\\n\\n    @rtype:  dictionary\\n    @return: Pairing that associates each node to its connected component.\\n    '", "#NEWLINE#", "recursionlimit", "=", "graph", "recursionlimit", "visited", "count", "for", "each", "in", "graph", "each", "not in", "visited", ")", "graph", ",", "visited", ",", "count", ",", "each", ")", "#NEWLINE#", "count", "=", "(", "visited", "+", "(", "recursionlimit", "return", "visited"]}}
{"position": {"error_location": 35, "repair_targets": [9, 22, 27], "repair_candidates": [8, 16, 20, 30, 35, 11, 14, 24, 9, 22, 27, 4, 7, 33, 0, 6, 13, 18]}}
{"prediction": {"error_location": 0.6820128560066223, "repair_targets": [0.17250728607177734, 0.09883279353380203, 0.45145317912101746], "repair_candidates": [0.0082026906311512, 0.04960676282644272, 0.014055832289159298, 0.13184083998203278, 0.005808554589748383, 0.17250728607177734, 0.018905041739344597, 0.0017169809434562922, 0.0003170634445268661, 0.010233826003968716, 0.01226342748850584, 0.012061752378940582, 0.09883279353380203, 0.00955776497721672, 0.45145317912101746, 0.00014355719031300396, 0.0023694653064012527, 0.00012318906374275684], "target_probs": 0.7227932810783386}}


{"result": {"time": "2021-02-21 06:03:51.168668", "n_pass": [200, 25, 23], "n_token": 35, "loss": [0.27195969223976135, 0.2206784188747406], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["graph", "'\\n    Connected components.\\n\\n    @type  graph: graph, hypergraph\\n    @param graph: Graph.\\n\\n    @rtype:  dictionary\\n    @return: Pairing that associates each node to its connected component.\\n    '", "#NEWLINE#", "recursionlimit", "=", "graph", "recursionlimit", "visited", "count", "for", "each", "in", "graph", "each", "not in", "visited", ")", "graph", ",", "visited", ",", "count", ",", "each", ")", "#NEWLINE#", "count", "=", "(", "visited", "+", "(", "recursionlimit", "return", "visited"]}}
{"position": {"error_location": 34, "repair_targets": [8, 21, 26], "repair_candidates": [7, 15, 19, 29, 34, 10, 13, 23, 8, 21, 26, 3, 6, 32, 0, 5, 12, 17]}}
{"prediction": {"error_location": 0.7618849277496338, "repair_targets": [0.1851506233215332, 0.06584634631872177, 0.5509775876998901], "repair_candidates": [0.005344822537153959, 0.046456966549158096, 0.013365371152758598, 0.06631646305322647, 0.01470781397074461, 0.1851506233215332, 0.015129250474274158, 0.0006265925476327538, 8.8803208200261e-05, 0.010108906775712967, 0.0101990457624197, 0.008936980739235878, 0.06584634631872177, 0.005840159486979246, 0.5509775876998901, 0.00011458064545877278, 0.0007191664772108197, 7.055683818180114e-05], "target_probs": 0.8019745349884033}}


{"result": {"time": "2021-02-21 06:03:51.225590", "n_pass": [201, 26, 24], "n_token": 34, "loss": [0.1561218947172165, 0.3056008219718933], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["graph", "#NEWLINE#", "recursionlimit", "=", "graph", "recursionlimit", "visited", "count", "for", "each", "in", "graph", "each", "not in", "visited", ")", "graph", ",", "visited", ",", "count", ",", "each", ")", "#NEWLINE#", "count", "=", "(", "visited", "+", "(", "recursionlimit", "return", "visited"]}}
{"position": {"error_location": 33, "repair_targets": [7, 20, 25], "repair_candidates": [6, 14, 18, 28, 33, 9, 12, 22, 7, 20, 25, 2, 5, 31, 0, 4, 11, 16]}}
{"prediction": {"error_location": 0.8554547429084778, "repair_targets": [0.07053261995315552, 0.03261803463101387, 0.6335299611091614], "repair_candidates": [0.0027159289456903934, 0.1216568797826767, 0.0042993370443582535, 0.0965392217040062, 0.01142202503979206, 0.07053261995315552, 0.009989682585000992, 0.00033140106825158, 9.938329458236694e-05, 0.0036022355780005455, 0.0061215986497700214, 0.0036146428901702166, 0.03261803463101387, 0.0023761983029544353, 0.6335299611091614, 7.025153900031e-05, 0.000458671769592911, 2.186626625189092e-05], "target_probs": 0.7366806268692017}}


{"result": {"time": "2021-02-21 06:03:51.283106", "n_pass": [202, 27, 25], "n_token": 33, "loss": [0.11014755815267563, 0.10131363570690155], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["graph", "recursionlimit", "=", "graph", "recursionlimit", "visited", "count", "for", "each", "in", "graph", "each", "not in", "visited", ")", "graph", ",", "visited", ",", "count", ",", "each", ")", "#NEWLINE#", "count", "=", "(", "visited", "+", "(", "recursionlimit", "return", "visited"]}}
{"position": {"error_location": 32, "repair_targets": [6, 19, 24], "repair_candidates": [5, 13, 17, 27, 32, 8, 11, 21, 6, 19, 24, 1, 4, 30, 0, 3, 10, 15]}}
{"prediction": {"error_location": 0.8957019448280334, "repair_targets": [0.12346024066209793, 0.029696539044380188, 0.7504928112030029], "repair_candidates": [0.0033274421002715826, 0.015808383002877235, 0.008592900820076466, 0.016697395592927933, 0.013020110316574574, 0.12346024066209793, 0.012400503270328045, 0.0014022079994902015, 0.00014311354607343674, 0.005471381824463606, 0.00968301109969616, 0.005146749783307314, 0.029696539044380188, 0.002080813981592655, 0.7504928112030029, 0.00019125976541545242, 0.0023000133223831654, 8.508496102876961e-05], "target_probs": 0.9036495685577393}}


{"result": {"time": "2021-02-21 06:03:51.343558", "n_pass": [204, 28, 26], "n_token": 32, "loss": [0.07488369196653366, 0.06352381408214569], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["graph", "recursionlimit", "graph", "recursionlimit", "visited", "count", "for", "each", "in", "graph", "each", "not in", "visited", ")", "graph", ",", "visited", ",", "count", ",", "each", ")", "#NEWLINE#", "count", "=", "(", "visited", "+", "(", "recursionlimit", "return", "visited"]}}
{"position": {"error_location": 31, "repair_targets": [5, 18, 23], "repair_candidates": [4, 12, 16, 26, 31, 7, 10, 20, 5, 18, 23, 1, 3, 29, 0, 2, 9, 14]}}
{"prediction": {"error_location": 0.9278514981269836, "repair_targets": [0.08386889845132828, 0.02063806727528572, 0.8339447975158691], "repair_candidates": [0.002087996806949377, 0.003791104070842266, 0.010756145231425762, 0.009260649792850018, 0.011287356726825237, 0.08386889845132828, 0.007590072695165873, 0.0020430691074579954, 0.00029002109658904374, 0.002959849312901497, 0.007049462758004665, 0.0022845673374831676, 0.02063806727528572, 0.0018516647396609187, 0.8339447975158691, 6.963005580473691e-05, 0.00020730384858325124, 1.9350363800185733e-05], "target_probs": 0.9384517669677734}}


{"result": {"time": "2021-02-21 06:03:51.459429", "n_pass": [250, 30, 27], "n_token": 31, "loss": [0.07111813127994537, 0.07930395007133484], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["graph", "recursionlimit", "graph", "recursionlimit", "visited", "count", "each", "in", "graph", "each", "not in", "visited", ")", "graph", ",", "visited", ",", "count", ",", "each", ")", "#NEWLINE#", "count", "=", "(", "visited", "+", "(", "recursionlimit", "return", "visited"]}}
{"position": {"error_location": 30, "repair_targets": [5, 17, 22], "repair_candidates": [4, 11, 15, 25, 30, 6, 9, 19, 5, 17, 22, 1, 3, 28, 0, 2, 8, 13]}}
{"prediction": {"error_location": 0.9313518404960632, "repair_targets": [0.017986387014389038, 0.023700552061200142, 0.8820722103118896], "repair_candidates": [0.0009456030675210059, 0.0009225796675309539, 0.0004377161676529795, 0.00014144660963211209, 0.00010191273759119213, 0.017986387014389038, 0.020326199010014534, 0.01876911148428917, 0.008921275846660137, 0.0028278969693928957, 0.01397068239748478, 0.0026742995250970125, 0.023700552061200142, 0.0060000610537827015, 0.8820722103118896, 1.7461105016991496e-05, 0.00017717573791742325, 7.514340268244268e-06], "target_probs": 0.9237591028213501}}


{"result": {"time": "2021-02-21 06:03:51.516915", "n_pass": [251, 31, 28], "n_token": 30, "loss": [0.05000792443752289, 0.12194238603115082], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["graph", "recursionlimit", "graph", "recursionlimit", "visited", "count", "each", "graph", "each", "not in", "visited", ")", "graph", ",", "visited", ",", "count", ",", "each", ")", "#NEWLINE#", "count", "=", "(", "visited", "+", "(", "recursionlimit", "return", "visited"]}}
{"position": {"error_location": 29, "repair_targets": [5, 16, 21], "repair_candidates": [4, 10, 14, 24, 29, 6, 8, 18, 5, 16, 21, 1, 3, 27, 0, 2, 7, 12]}}
{"prediction": {"error_location": 0.951221764087677, "repair_targets": [0.006677554454654455, 0.0285256989300251, 0.8499960899353027], "repair_candidates": [0.0021617126185446978, 0.002076945034787059, 0.001423908513970673, 0.0007097009220160544, 0.0004261986177880317, 0.006677554454654455, 0.002375280950218439, 0.011282374151051044, 0.013333913870155811, 0.006889316253364086, 0.053647540509700775, 0.004125781822949648, 0.0285256989300251, 0.01397476065903902, 0.8499960899353027, 0.0001063569652615115, 0.0022444080095738173, 2.24683517444646e-05], "target_probs": 0.8851993680000305}}


{"result": {"time": "2021-02-21 06:03:51.573781", "n_pass": [254, 32, 29], "n_token": 29, "loss": [0.06197836995124817, 0.074263796210289], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["graph", "recursionlimit", "graph", "recursionlimit", "visited", "count", "each", "graph", "each", "visited", ")", "graph", ",", "visited", ",", "count", ",", "each", ")", "#NEWLINE#", "count", "=", "(", "visited", "+", "(", "recursionlimit", "return", "visited"]}}
{"position": {"error_location": 28, "repair_targets": [5, 15, 20], "repair_candidates": [4, 9, 13, 23, 28, 6, 8, 17, 5, 15, 20, 1, 3, 26, 0, 2, 7, 11]}}
{"prediction": {"error_location": 0.939903199672699, "repair_targets": [0.004935198929160833, 0.02165590412914753, 0.9018356204032898], "repair_candidates": [0.0021638046018779278, 0.0022366978228092194, 0.0005270428373478353, 0.00048202104517258704, 0.0006807551253587008, 0.004935198929160833, 0.0030382168479263783, 0.003482603468000889, 0.002986893290653825, 0.005480446387082338, 0.03391408175230026, 0.0025194715708494186, 0.02165590412914753, 0.013331596739590168, 0.9018356204032898, 6.625019159400836e-05, 0.0006508625228889287, 1.2534658708318602e-05], "target_probs": 0.9284267425537109}}


{"result": {"time": "2021-02-21 06:03:51.630530", "n_pass": [256, 33, 30], "n_token": 28, "loss": [0.055812377482652664, 0.08574089407920837], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["graph", "recursionlimit", "graph", "recursionlimit", "visited", "count", "each", "graph", "each", "visited", "graph", ",", "visited", ",", "count", ",", "each", ")", "#NEWLINE#", "count", "=", "(", "visited", "+", "(", "recursionlimit", "return", "visited"]}}
{"position": {"error_location": 27, "repair_targets": [5, 14, 19], "repair_candidates": [4, 9, 12, 22, 27, 6, 8, 16, 5, 14, 19, 1, 3, 25, 0, 2, 7, 10]}}
{"prediction": {"error_location": 0.9457165598869324, "repair_targets": [0.008971070870757103, 0.023608431220054626, 0.8852525353431702], "repair_candidates": [0.0034897655714303255, 0.0027033172082155943, 0.0011175393592566252, 0.000879518804140389, 0.002111624227836728, 0.008971070870757103, 0.005115343723446131, 0.0017623782623559237, 0.003523528575897217, 0.005437582731246948, 0.03572598099708557, 0.003366895718500018, 0.023608431220054626, 0.01463839877396822, 0.8852525353431702, 0.00020149913325440139, 0.0020645596086978912, 3.0026878448552452e-05], "target_probs": 0.9178320169448853}}


{"result": {"time": "2021-02-21 06:03:51.690444", "n_pass": [258, 34, 31], "n_token": 27, "loss": [0.0691596046090126, 0.15230132639408112], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["graph", "recursionlimit", "graph", "recursionlimit", "visited", "count", "each", "graph", "each", "visited", "graph", "visited", ",", "count", ",", "each", ")", "#NEWLINE#", "count", "=", "(", "visited", "+", "(", "recursionlimit", "return", "visited"]}}
{"position": {"error_location": 26, "repair_targets": [5, 13, 18], "repair_candidates": [4, 9, 11, 21, 26, 6, 8, 15, 5, 13, 18, 1, 3, 24, 0, 2, 7, 10]}}
{"prediction": {"error_location": 0.9331777095794678, "repair_targets": [0.016105633229017258, 0.006721403915435076, 0.8359024524688721], "repair_candidates": [0.005762733519077301, 0.007297329604625702, 0.001900732284411788, 0.0020320508629083633, 0.004888227675110102, 0.016105633229017258, 0.009809792041778564, 0.0034354899544268847, 0.008680635131895542, 0.004743585363030434, 0.04547411575913429, 0.015254813246428967, 0.006721403915435076, 0.023653468117117882, 0.8359024524688721, 0.00192836148198694, 0.006277153268456459, 0.0001319835864705965], "target_probs": 0.8587294816970825}}


{"result": {"time": "2021-02-21 06:03:51.747730", "n_pass": [260, 35, 32], "n_token": 26, "loss": [0.10260514914989471, 0.41172873973846436], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["graph", "recursionlimit", "graph", "recursionlimit", "visited", "count", "each", "graph", "each", "visited", "graph", "visited", "count", ",", "each", ")", "#NEWLINE#", "count", "=", "(", "visited", "+", "(", "recursionlimit", "return", "visited"]}}
{"position": {"error_location": 25, "repair_targets": [5, 12, 17], "repair_candidates": [4, 9, 11, 20, 25, 6, 8, 14, 5, 12, 17, 1, 3, 23, 0, 2, 7, 10]}}
{"prediction": {"error_location": 0.9024832248687744, "repair_targets": [0.04821836203336716, 0.0018336140783503652, 0.61245197057724], "repair_candidates": [0.00926378183066845, 0.022559184581041336, 0.007885516621172428, 0.008067667484283447, 0.014708752743899822, 0.04821836203336716, 0.01772548444569111, 0.011002597399055958, 0.015340427868068218, 0.005903143901377916, 0.04941627383232117, 0.03372722491621971, 0.0018336140783503652, 0.07868935167789459, 0.61245197057724, 0.01658540591597557, 0.04535016417503357, 0.0012711052550002933], "target_probs": 0.6625039577484131}}


{"result": {"time": "2021-02-21 06:03:51.804785", "n_pass": [262, 36, 33], "n_token": 25, "loss": [0.12035665661096573, 0.0974048525094986], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["graph", "recursionlimit", "graph", "recursionlimit", "visited", "count", "each", "graph", "each", "visited", "graph", "visited", "count", "each", ")", "#NEWLINE#", "count", "=", "(", "visited", "+", "(", "recursionlimit", "return", "visited"]}}
{"position": {"error_location": 24, "repair_targets": [5, 12, 16], "repair_candidates": [4, 9, 11, 19, 24, 6, 8, 13, 5, 12, 16, 1, 3, 22, 0, 2, 7, 10]}}
{"prediction": {"error_location": 0.8866040706634521, "repair_targets": [0.026740698143839836, 0.007753137499094009, 0.8726948499679565], "repair_candidates": [0.0137278251349926, 0.018098242580890656, 0.007851272821426392, 0.006019070278853178, 0.003759826300665736, 0.026740698143839836, 0.006514454260468483, 0.004373891744762659, 0.007468474097549915, 0.0035219744313508272, 0.004617032594978809, 0.004174591973423958, 0.007753137499094009, 0.009774528443813324, 0.8726948499679565, 0.0012359950924292207, 0.0014623418683186173, 0.0002118391275871545], "target_probs": 0.9071886539459229}}


{"result": {"time": "2021-02-21 06:03:51.861967", "n_pass": [264, 37, 34], "n_token": 24, "loss": [0.15002544224262238, 0.11000890284776688], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["graph", "recursionlimit", "graph", "recursionlimit", "visited", "count", "each", "graph", "each", "visited", "graph", "visited", "count", "each", "#NEWLINE#", "count", "=", "(", "visited", "+", "(", "recursionlimit", "return", "visited"]}}
{"position": {"error_location": 23, "repair_targets": [5, 12, 15], "repair_candidates": [4, 9, 11, 18, 23, 6, 8, 13, 5, 12, 15, 1, 3, 21, 0, 2, 7, 10]}}
{"prediction": {"error_location": 0.8606860637664795, "repair_targets": [0.024235887452960014, 0.012338667176663876, 0.8592516183853149], "repair_candidates": [0.026272060349583626, 0.030576227232813835, 0.007338645402342081, 0.005039829295128584, 0.0028486880473792553, 0.024235887452960014, 0.008028544485569, 0.0033016568049788475, 0.007650300860404968, 0.0028222189284861088, 0.0037550898268818855, 0.0034464674536138773, 0.012338667176663876, 0.0010063441004604101, 0.8592516183853149, 0.000965686806011945, 0.0009907549247145653, 0.00013133807806298137], "target_probs": 0.8958261609077454}}


{"result": {"time": "2021-02-21 06:03:51.975995", "n_pass": [267, 39, 35], "n_token": 23, "loss": [1.1039190292358398, 0.5124464631080627], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["graph", "recursionlimit", "graph", "recursionlimit", "visited", "count", "each", "graph", "each", "visited", "graph", "visited", "count", "each", "#NEWLINE#", "count", "(", "visited", "+", "(", "recursionlimit", "return", "visited"]}}
{"position": {"error_location": 22, "repair_targets": [5, 12, 15], "repair_candidates": [4, 9, 11, 17, 22, 6, 8, 13, 5, 12, 15, 1, 3, 20, 0, 2, 7, 10]}}
{"prediction": {"error_location": 0.331569105386734, "repair_targets": [0.1271338313817978, 0.09825938194990158, 0.37363508343696594], "repair_candidates": [0.07167520374059677, 0.11750557273626328, 0.02872408926486969, 0.022172031924128532, 0.011908427812159061, 0.1271338313817978, 0.038976747542619705, 0.015563893131911755, 0.033670950680971146, 0.013723015785217285, 0.016666017472743988, 0.013745504431426525, 0.09825938194990158, 0.010455717332661152, 0.37363508343696594, 0.0027531052473932505, 0.0026645739562809467, 0.0007668485632166266], "target_probs": 0.5990282893180847}}


{"result": {"time": "2021-02-21 06:03:52.036095", "n_pass": [268, 40, 36], "n_token": 22, "loss": [0.04992321506142616, 0.041211508214473724], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["graph", "recursionlimit", "graph", "recursionlimit", "visited", "count", "each", "graph", "each", "visited", "graph", "visited", "count", "each", "#NEWLINE#", "count", "visited", "+", "(", "recursionlimit", "return", "visited"]}}
{"position": {"error_location": 21, "repair_targets": [5, 12, 15], "repair_candidates": [4, 9, 11, 16, 21, 6, 8, 13, 5, 12, 15, 1, 3, 19, 0, 2, 7, 10]}}
{"prediction": {"error_location": 0.9513024687767029, "repair_targets": [0.008426480926573277, 0.008315044455230236, 0.942884624004364], "repair_candidates": [0.010575962252914906, 0.01341948937624693, 0.0018337237415835261, 0.0014070471515879035, 0.0009716578060761094, 0.008426480926573277, 0.002574053592979908, 0.0013072628062218428, 0.002688359934836626, 0.0011961993295699358, 0.0015379496617242694, 0.0011699908645823598, 0.008315044455230236, 0.000603554246481508, 0.942884624004364, 0.0008323985966853797, 0.0002445458376314491, 1.1573419214983005e-05], "target_probs": 0.9596261382102966}}


{"result": {"time": "2021-02-21 06:03:52.149776", "n_pass": [271, 42, 37], "n_token": 21, "loss": [0.654371440410614, 0.04462207108736038], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["graph", "recursionlimit", "graph", "recursionlimit", "visited", "count", "each", "graph", "each", "visited", "graph", "visited", "count", "each", "#NEWLINE#", "count", "visited", "+", "recursionlimit", "return", "visited"]}}
{"position": {"error_location": 20, "repair_targets": [5, 12, 15], "repair_candidates": [4, 9, 11, 16, 20, 6, 8, 13, 5, 12, 15, 1, 3, 18, 0, 2, 7, 10]}}
{"prediction": {"error_location": 0.5197686553001404, "repair_targets": [0.01014601718634367, 0.012366091832518578, 0.9338467121124268], "repair_candidates": [0.00789275299757719, 0.011705233715474606, 0.002254544524475932, 0.0015704001998528838, 0.0013914174633100629, 0.01014601718634367, 0.0036141718737781048, 0.0015649334527552128, 0.0043142023496329784, 0.0020672997925430536, 0.002062644110992551, 0.0013197360094636679, 0.012366091832518578, 0.0023037290666252375, 0.9338467121124268, 0.0014053843915462494, 9.795014193514362e-05, 7.664884469704702e-05], "target_probs": 0.9563588500022888}}


{"result": {"time": "2021-02-21 06:03:52.323487", "n_pass": [292, 45, 38], "n_token": 20, "loss": [0.1778760552406311, 0.010322135873138905], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["graph", "recursionlimit", "graph", "recursionlimit", "visited", "count", "each", "graph", "each", "visited", "graph", "visited", "count", "each", "#NEWLINE#", "count", "visited", "recursionlimit", "return", "visited"]}}
{"position": {"error_location": 19, "repair_targets": [5, 12, 15], "repair_candidates": [4, 9, 11, 16, 19, 6, 8, 13, 5, 12, 15, 1, 3, 17, 0, 2, 7, 10]}}
{"prediction": {"error_location": 0.8370461463928223, "repair_targets": [0.004224258009344339, 0.02854996733367443, 0.9569567441940308], "repair_candidates": [0.001546173240058124, 0.0024856838863343, 0.0008253726409748197, 0.000546129944268614, 0.0004321219748817384, 0.004224258009344339, 0.0008244734490290284, 0.0003892379463650286, 0.0008998842095024884, 0.00038156239315867424, 0.0004549455479718745, 0.0003790005575865507, 0.02854996733367443, 0.000948880857322365, 0.9569567441940308, 0.0001166142537840642, 3.522535189404152e-05, 3.7987913401593687e-06], "target_probs": 0.989730954170227}}




Minimal simplified tokens:

['graph', 'recursionlimit', 'graph', 'recursionlimit', 'visited', 'count', 'each', 'graph', 'each', 'visited', 'graph', 'visited', 'count', 'each', '#NEWLINE#', 'count', 'visited', 'recursionlimit', 'return', 'visited']
