
Original sample:

{"has_bug": true, "bug_kind": 1, "bug_kind_name": "VARIABLE_MISUSE", "source_tokens": ["#NEWLINE#", "def insert_values(", "self", ",", "insert_values", ",", "raw_values", "=", "False", ")", ":", "#NEWLINE#", "#INDENT#", "\"\\n        Set up the insert query from the 'insert_values' dictionary. The\\n        dictionary gives the model field names and their target values.\\n\\n        If 'raw_values' is True, the values in the 'insert_values' dictionary\\n        are inserted directly into the query, rather than passed as SQL\\n        parameters. This provides a way to insert NULL and DEFAULT keywords\\n        into the query, for example.\\n        \"", "#NEWLINE#", "(", "placeholders", ",", "values", ")", "=", "(", "[", "]", ",", "[", "]", ")", "#NEWLINE#", "for", "(", "field", ",", "val", ")", "in", "insert_values", ":", "#NEWLINE#", "#INDENT#", "placeholders", ".", "append", "(", "(", "field", ",", "val", ")", ")", "#NEWLINE#", "self", ".", "columns", ".", "append", "(", "field", ".", "column", ")", "#NEWLINE#", "values", ".", "append", "(", "val", ")", "#NEWLINE#", "#UNINDENT#", "if", "raw_values", ":", "#NEWLINE#", "#INDENT#", "self", ".", "values", ".", "extend", "(", "[", "(", "None", ",", "v", ")", "for", "v", "in", "values", "]", ")", "#NEWLINE#", "#UNINDENT#", "else", ":", "#NEWLINE#", "#INDENT#", "self", ".", "params", "+=", "tuple", "(", "values", ")", "#NEWLINE#", "self", ".", "values", ".", "extend", "(", "values", ")"], "error_location": [114], "repair_targets": [16, 40], "repair_candidates": [4, 36, 18, 62, 77, 90, 105, 110, 114, 6, 71, 31, 45, 57, 2, 51, 75, 99, 108, 85, 88, 33, 47, 66, 16, 40], "provenances": [{"datasetProvenance": {"datasetName": "ETHPy150Open", "filepath": "AppScale/appscale/AppServer/lib/django-1.2/django/db/models/sql/subqueries.py", "license": "apache-2.0", "note": "license: github_api"}}], "txt_file": "eval__VARIABLE_MISUSE__SStuB.txt-00008-of-00300", "js_count": 28526, "results": {"model": "transformer", "prob": {"loc": [[0.2775304615497589, 1.7665948917056085e-06, 7.748094503767788e-07, 1.1680488576359949e-08, 3.684643388623954e-06, 8.800765449734627e-09, 6.674627002212219e-07, 5.3983558956360866e-08, 6.039388722456351e-08, 5.572000194575821e-09, 1.1282380363297762e-08, 2.4485421690201292e-08, 1.9092192715675083e-08, 8.378355431659656e-08, 2.444724955807942e-08, 6.897701965158376e-09, 1.671677409831318e-06, 2.141015720269479e-08, 6.117635166447144e-06, 1.1310843817113891e-08, 2.0485042995233016e-08, 7.821012673048244e-07, 4.629095201380551e-06, 1.179738120526963e-07, 7.179754391017923e-08, 1.4485510746453656e-06, 1.6147838266533654e-07, 1.5577238343666977e-07, 7.69775780895543e-08, 1.3923481390065717e-07, 1.3896504391652797e-08, 4.5210657617644756e-07, 5.7741086578744216e-08, 3.407091753615532e-06, 2.2653262377048122e-08, 2.0437898484715333e-08, 0.00019257230451330543, 1.66561520131836e-07, 9.515447629837581e-08, 6.354276393949476e-08, 3.183724629707285e-06, 3.9419735031742675e-08, 1.4166209538757357e-08, 5.403105163281907e-08, 4.764389416322956e-07, 0.0016678511165082455, 7.238173793666647e-07, 0.006682965438812971, 1.7706819335217006e-06, 4.018527874904976e-07, 3.296226509519329e-07, 1.68161500369024e-06, 1.2731460685699858e-07, 3.040352964944759e-07, 3.4802772574948904e-07, 4.999186486998042e-08, 1.116552766688983e-06, 0.13761276006698608, 1.3532583125197561e-06, 3.827889258900541e-07, 2.124747197740362e-06, 1.0284547897754237e-06, 1.4983113942435011e-05, 2.658281914591498e-07, 4.3171077379611233e-08, 1.2315297226450639e-06, 0.42420774698257446, 4.556530257104896e-05, 4.848326625506161e-06, 1.6710700947442092e-06, 4.583026793625322e-07, 0.001036335714161396, 2.395787078057765e-06, 1.5880465298323543e-06, 6.377695740411582e-07, 6.399347967089852e-07, 5.169843930730167e-08, 1.6986165292109945e-06, 1.659897037598057e-07, 1.463537273593829e-07, 9.991023262045928e-07, 8.20528896383621e-07, 5.7067703892244026e-05, 5.050547315477161e-06, 6.204378451002412e-07, 0.00010630877659423277, 8.717313903616741e-06, 6.609110641875304e-06, 4.3073018218819925e-07, 9.944267986838895e-08, 0.11313753575086594, 2.2787321540818084e-06, 2.378085264354013e-05, 3.295921828794235e-07, 1.7517017170121107e-07, 1.0535896421970392e-07, 3.7446372402882844e-07, 1.6242609035543865e-07, 9.242032206202566e-08, 2.113744585585664e-06, 4.283511856328914e-08, 5.522260337897933e-08, 6.230232685311421e-08, 1.1255406384691469e-08, 5.253631485402366e-08, 0.024634044617414474, 2.293943737186055e-07, 1.1385382947537437e-07, 2.550308408899582e-07, 5.194861785184912e-08, 5.5037268964497343e-08, 7.059644246965036e-08, 5.89158455355232e-09, 9.188458705011726e-08, 0.012961501255631447, 2.461852091073524e-07]], "pointer": [[0.0, 0.0, 0.1634032428264618, 0.0, 0.008851591497659683, 0.0, 0.0053357877768576145, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.035678379237651825, 0.0, 0.04940565302968025, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.02742937207221985, 0.0, 0.0267491415143013, 0.0, 0.0, 0.0007989222067408264, 0.0, 0.0, 0.0, 0.593290388584137, 0.0, 0.0, 0.0, 0.0, 0.0035745452623814344, 0.0, 0.0009751376928761601, 0.0, 0.0, 0.0, 0.03328341245651245, 0.0, 0.0, 0.0, 0.0, 0.0, 8.109409827739e-05, 0.0, 0.0, 0.0, 0.0, 0.014226504601538181, 0.0, 0.0, 0.0, 0.0014278858434408903, 0.0, 0.0, 0.0, 0.0, 0.008421859703958035, 0.0, 0.0, 0.0, 0.004785077180713415, 0.0, 0.005494007840752602, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.961672751349397e-05, 0.0, 0.0, 0.0005589047796092927, 0.0, 0.00011483542766654864, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.013899309560656548, 0.0, 0.0, 0.0, 0.0, 0.0, 0.000535819330252707, 0.0, 0.0, 0.001321069779805839, 0.0, 0.0002113411173922941, 0.0, 0.0, 0.0, 0.00012707815039902925, 0.0]], "target": [0.6289687752723694]}, "loss": [4.345771789550781, 0.4636736512184143], "acc": [0.0, 0.0, 1.0, 0.0]}, "wrong_error_location": [66]}


Trace of simplified code(s):

{"result": {"time": "2021-02-21 06:36:57.544065", "n_pass": [1, 1, 1], "n_token": 116, "loss": [0.8575320839881897, 0.4636736512184143], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def insert_values(", "self", ",", "insert_values", ",", "raw_values", "=", "False", ")", ":", "#NEWLINE#", "#INDENT#", "\"\\n        Set up the insert query from the 'insert_values' dictionary. The\\n        dictionary gives the model field names and their target values.\\n\\n        If 'raw_values' is True, the values in the 'insert_values' dictionary\\n        are inserted directly into the query, rather than passed as SQL\\n        parameters. This provides a way to insert NULL and DEFAULT keywords\\n        into the query, for example.\\n        \"", "#NEWLINE#", "(", "placeholders", ",", "values", ")", "=", "(", "[", "]", ",", "[", "]", ")", "#NEWLINE#", "for", "(", "field", ",", "val", ")", "in", "insert_values", ":", "#NEWLINE#", "#INDENT#", "placeholders", ".", "append", "(", "(", "field", ",", "val", ")", ")", "#NEWLINE#", "self", ".", "columns", ".", "append", "(", "field", ".", "column", ")", "#NEWLINE#", "values", ".", "append", "(", "val", ")", "#NEWLINE#", "#UNINDENT#", "if", "raw_values", ":", "#NEWLINE#", "#INDENT#", "self", ".", "values", ".", "extend", "(", "[", "(", "None", ",", "v", ")", "for", "v", "in", "values", "]", ")", "#NEWLINE#", "#UNINDENT#", "else", ":", "#NEWLINE#", "#INDENT#", "self", ".", "params", "+=", "tuple", "(", "values", ")", "#NEWLINE#", "self", ".", "values", ".", "extend", "(", "values", ")"]}}
{"position": {"error_location": 66, "repair_targets": [16, 40], "repair_candidates": [4, 36, 18, 62, 77, 90, 105, 110, 114, 6, 71, 31, 45, 57, 2, 51, 75, 99, 108, 85, 88, 33, 47, 66, 16, 40]}}
{"prediction": {"error_location": 0.42420774698257446, "repair_targets": [0.035678379237651825, 0.593290388584137], "repair_candidates": [0.1634032428264618, 0.008851591497659683, 0.0053357877768576145, 0.035678379237651825, 0.04940565302968025, 0.02742937207221985, 0.0267491415143013, 0.0007989222067408264, 0.593290388584137, 0.0035745452623814344, 0.0009751376928761601, 0.03328341245651245, 8.109409827739e-05, 0.014226504601538181, 0.0014278858434408903, 0.008421859703958035, 0.004785077180713415, 0.005494007840752602, 1.961672751349397e-05, 0.0005589047796092927, 0.00011483542766654864, 0.013899309560656548, 0.000535819330252707, 0.001321069779805839, 0.0002113411173922941, 0.00012707815039902925], "target_probs": 0.6289687752723694}}


{"result": {"time": "2021-02-21 06:36:57.730129", "n_pass": [95, 4, 2], "n_token": 113, "loss": [1.1410417556762695, 0.43926146626472473], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def insert_values(", "self", ",", "insert_values", ",", "raw_values", "=", "False", "#INDENT#", "\"\\n        Set up the insert query from the 'insert_values' dictionary. The\\n        dictionary gives the model field names and their target values.\\n\\n        If 'raw_values' is True, the values in the 'insert_values' dictionary\\n        are inserted directly into the query, rather than passed as SQL\\n        parameters. This provides a way to insert NULL and DEFAULT keywords\\n        into the query, for example.\\n        \"", "#NEWLINE#", "(", "placeholders", ",", "values", ")", "=", "(", "[", "]", ",", "[", "]", ")", "#NEWLINE#", "for", "(", "field", ",", "val", ")", "in", "insert_values", ":", "#NEWLINE#", "#INDENT#", "placeholders", ".", "append", "(", "(", "field", ",", "val", ")", ")", "#NEWLINE#", "self", ".", "columns", ".", "append", "(", "field", ".", "column", ")", "#NEWLINE#", "values", ".", "append", "(", "val", ")", "#NEWLINE#", "#UNINDENT#", "if", "raw_values", ":", "#NEWLINE#", "#INDENT#", "self", ".", "values", ".", "extend", "(", "[", "(", "None", ",", "v", ")", "for", "v", "in", "values", "]", ")", "#NEWLINE#", "#UNINDENT#", "else", ":", "#NEWLINE#", "#INDENT#", "self", ".", "params", "+=", "tuple", "(", "values", ")", "#NEWLINE#", "self", ".", "values", ".", "extend", "(", "values", ")"]}}
{"position": {"error_location": 63, "repair_targets": [13, 37], "repair_candidates": [4, 33, 15, 59, 74, 87, 102, 107, 111, 6, 68, 28, 42, 54, 2, 48, 72, 96, 105, 82, 85, 30, 44, 63, 13, 37]}}
{"prediction": {"error_location": 0.3194860816001892, "repair_targets": [0.02906348742544651, 0.6154487729072571], "repair_candidates": [0.12485988438129425, 0.01005244068801403, 0.005262989550828934, 0.02906348742544651, 0.04927387833595276, 0.027955632656812668, 0.02077607251703739, 0.0012697875499725342, 0.6154487729072571, 0.004930541384965181, 0.0013368353247642517, 0.03292000666260719, 0.00012413224612828344, 0.02511640265583992, 0.002076478907838464, 0.015827463939785957, 0.007402046583592892, 0.009418227709829807, 2.6205405447399244e-05, 0.0009640963980928063, 6.211980507941917e-05, 0.011379978619515896, 0.0011630248045548797, 0.0030265236273407936, 0.00016828198567964137, 9.46259533520788e-05], "target_probs": 0.6445122361183167}}


{"result": {"time": "2021-02-21 06:37:00.527636", "n_pass": [356, 51, 3], "n_token": 112, "loss": [1.2072876691818237, 0.21507027745246887], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def insert_values(", "self", ",", "insert_values", ",", "raw_values", "=", "False", "#INDENT#", "\"\\n        Set up the insert query from the 'insert_values' dictionary. The\\n        dictionary gives the model field names and their target values.\\n\\n        If 'raw_values' is True, the values in the 'insert_values' dictionary\\n        are inserted directly into the query, rather than passed as SQL\\n        parameters. This provides a way to insert NULL and DEFAULT keywords\\n        into the query, for example.\\n        \"", "#NEWLINE#", "(", "placeholders", "values", ")", "=", "(", "[", "]", ",", "[", "]", ")", "#NEWLINE#", "for", "(", "field", ",", "val", ")", "in", "insert_values", ":", "#NEWLINE#", "#INDENT#", "placeholders", ".", "append", "(", "(", "field", ",", "val", ")", ")", "#NEWLINE#", "self", ".", "columns", ".", "append", "(", "field", ".", "column", ")", "#NEWLINE#", "values", ".", "append", "(", "val", ")", "#NEWLINE#", "#UNINDENT#", "if", "raw_values", ":", "#NEWLINE#", "#INDENT#", "self", ".", "values", ".", "extend", "(", "[", "(", "None", ",", "v", ")", "for", "v", "in", "values", "]", ")", "#NEWLINE#", "#UNINDENT#", "else", ":", "#NEWLINE#", "#INDENT#", "self", ".", "params", "+=", "tuple", "(", "values", ")", "#NEWLINE#", "self", ".", "values", ".", "extend", "(", "values", ")"]}}
{"position": {"error_location": 62, "repair_targets": [13, 36], "repair_candidates": [4, 32, 14, 58, 73, 86, 101, 106, 110, 6, 67, 27, 41, 53, 2, 47, 71, 95, 104, 81, 84, 29, 43, 62, 13, 36]}}
{"prediction": {"error_location": 0.29900720715522766, "repair_targets": [0.023845292627811432, 0.7826394438743591], "repair_candidates": [0.08327248692512512, 0.0046845353208482265, 0.002642143750563264, 0.023845292627811432, 0.015228713862597942, 0.012782270088791847, 0.008454403840005398, 0.0004269930941518396, 0.7826394438743591, 0.0036751809529960155, 0.0005774582969024777, 0.023795105516910553, 7.032098073977977e-05, 0.010787592269480228, 0.0005985720781609416, 0.0031112695578485727, 0.00552682438865304, 0.006044536363333464, 1.1782733963627834e-05, 0.00044015803723596036, 2.5379882572451606e-05, 0.00851338542997837, 0.0003256208437960595, 0.002405908890068531, 7.515028119087219e-05, 3.937103247153573e-05], "target_probs": 0.8064847588539124}}


{"result": {"time": "2021-02-21 06:37:01.120037", "n_pass": [367, 61, 4], "n_token": 111, "loss": [0.5767251253128052, 0.2644558548927307], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def insert_values(", "self", ",", "insert_values", ",", "raw_values", "=", "False", "#INDENT#", "\"\\n        Set up the insert query from the 'insert_values' dictionary. The\\n        dictionary gives the model field names and their target values.\\n\\n        If 'raw_values' is True, the values in the 'insert_values' dictionary\\n        are inserted directly into the query, rather than passed as SQL\\n        parameters. This provides a way to insert NULL and DEFAULT keywords\\n        into the query, for example.\\n        \"", "#NEWLINE#", "(", "placeholders", "values", ")", "=", "(", "[", "]", ",", "[", "]", ")", "for", "(", "field", ",", "val", ")", "in", "insert_values", ":", "#NEWLINE#", "#INDENT#", "placeholders", ".", "append", "(", "(", "field", ",", "val", ")", ")", "#NEWLINE#", "self", ".", "columns", ".", "append", "(", "field", ".", "column", ")", "#NEWLINE#", "values", ".", "append", "(", "val", ")", "#NEWLINE#", "#UNINDENT#", "if", "raw_values", ":", "#NEWLINE#", "#INDENT#", "self", ".", "values", ".", "extend", "(", "[", "(", "None", ",", "v", ")", "for", "v", "in", "values", "]", ")", "#NEWLINE#", "#UNINDENT#", "else", ":", "#NEWLINE#", "#INDENT#", "self", ".", "params", "+=", "tuple", "(", "values", ")", "#NEWLINE#", "self", ".", "values", ".", "extend", "(", "values", ")"]}}
{"position": {"error_location": 61, "repair_targets": [13, 35], "repair_candidates": [4, 31, 14, 57, 72, 85, 100, 105, 109, 6, 66, 26, 40, 52, 2, 46, 70, 94, 103, 80, 83, 28, 42, 61, 13, 35]}}
{"prediction": {"error_location": 0.5617349147796631, "repair_targets": [0.10284825414419174, 0.6647753119468689], "repair_candidates": [0.09992337971925735, 0.003226598259061575, 0.0010037926258519292, 0.10284825414419174, 0.03099745139479637, 0.00193739403039217, 0.004719085525721312, 0.00033292282023467124, 0.6647753119468689, 0.0011864430271089077, 0.0007697486435063183, 0.03656536713242531, 1.6257727111224085e-05, 0.018986398354172707, 0.0005246052169241011, 0.0022394852712750435, 0.00841016136109829, 0.006891058292239904, 2.6994355266651837e-06, 0.00016111289733089507, 2.7837875677505508e-05, 0.009853397496044636, 0.0011686065699905157, 0.0032769476529210806, 8.160025026882067e-05, 7.403158087981865e-05], "target_probs": 0.7676235437393188}}


{"result": {"time": "2021-02-21 06:37:01.241242", "n_pass": [369, 63, 5], "n_token": 110, "loss": [0.8157466053962708, 0.23307333886623383], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def insert_values(", "self", ",", "insert_values", ",", "raw_values", "=", "False", "#INDENT#", "\"\\n        Set up the insert query from the 'insert_values' dictionary. The\\n        dictionary gives the model field names and their target values.\\n\\n        If 'raw_values' is True, the values in the 'insert_values' dictionary\\n        are inserted directly into the query, rather than passed as SQL\\n        parameters. This provides a way to insert NULL and DEFAULT keywords\\n        into the query, for example.\\n        \"", "#NEWLINE#", "(", "placeholders", "values", ")", "=", "(", "[", "]", ",", "[", "]", ")", "for", "field", ",", "val", ")", "in", "insert_values", ":", "#NEWLINE#", "#INDENT#", "placeholders", ".", "append", "(", "(", "field", ",", "val", ")", ")", "#NEWLINE#", "self", ".", "columns", ".", "append", "(", "field", ".", "column", ")", "#NEWLINE#", "values", ".", "append", "(", "val", ")", "#NEWLINE#", "#UNINDENT#", "if", "raw_values", ":", "#NEWLINE#", "#INDENT#", "self", ".", "values", ".", "extend", "(", "[", "(", "None", ",", "v", ")", "for", "v", "in", "values", "]", ")", "#NEWLINE#", "#UNINDENT#", "else", ":", "#NEWLINE#", "#INDENT#", "self", ".", "params", "+=", "tuple", "(", "values", ")", "#NEWLINE#", "self", ".", "values", ".", "extend", "(", "values", ")"]}}
{"position": {"error_location": 60, "repair_targets": [13, 34], "repair_candidates": [4, 30, 14, 56, 71, 84, 99, 104, 108, 6, 65, 25, 39, 51, 2, 45, 69, 93, 102, 79, 82, 27, 41, 60, 13, 34]}}
{"prediction": {"error_location": 0.44230902194976807, "repair_targets": [0.11706992238759995, 0.6750255823135376], "repair_candidates": [0.07606437802314758, 0.004082635510712862, 0.0012976400321349502, 0.11706992238759995, 0.03615237772464752, 0.0030858416575938463, 0.005062013398855925, 0.0004472050932236016, 0.6750255823135376, 0.0014570814091712236, 0.000936810567509383, 0.029655346646904945, 1.595725007064175e-05, 0.01979425735771656, 0.0008015071507543325, 0.0036098912823945284, 0.0065688989125192165, 0.007791634649038315, 3.300009666418191e-06, 0.0001884797093225643, 3.215065225958824e-05, 0.005984416697174311, 0.0012608881806954741, 0.0033751020673662424, 0.00013728519843425602, 9.94576548691839e-05], "target_probs": 0.7920954823493958}}


{"result": {"time": "2021-02-21 06:37:01.301866", "n_pass": [371, 64, 6], "n_token": 109, "loss": [0.664470374584198, 0.23541715741157532], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def insert_values(", "self", ",", "insert_values", ",", "raw_values", "=", "False", "#INDENT#", "\"\\n        Set up the insert query from the 'insert_values' dictionary. The\\n        dictionary gives the model field names and their target values.\\n\\n        If 'raw_values' is True, the values in the 'insert_values' dictionary\\n        are inserted directly into the query, rather than passed as SQL\\n        parameters. This provides a way to insert NULL and DEFAULT keywords\\n        into the query, for example.\\n        \"", "#NEWLINE#", "(", "placeholders", "values", ")", "=", "(", "[", "]", ",", "[", "]", ")", "for", "field", "val", ")", "in", "insert_values", ":", "#NEWLINE#", "#INDENT#", "placeholders", ".", "append", "(", "(", "field", ",", "val", ")", ")", "#NEWLINE#", "self", ".", "columns", ".", "append", "(", "field", ".", "column", ")", "#NEWLINE#", "values", ".", "append", "(", "val", ")", "#NEWLINE#", "#UNINDENT#", "if", "raw_values", ":", "#NEWLINE#", "#INDENT#", "self", ".", "values", ".", "extend", "(", "[", "(", "None", ",", "v", ")", "for", "v", "in", "values", "]", ")", "#NEWLINE#", "#UNINDENT#", "else", ":", "#NEWLINE#", "#INDENT#", "self", ".", "params", "+=", "tuple", "(", "values", ")", "#NEWLINE#", "self", ".", "values", ".", "extend", "(", "values", ")"]}}
{"position": {"error_location": 59, "repair_targets": [13, 33], "repair_candidates": [4, 29, 14, 55, 70, 83, 98, 103, 107, 6, 64, 25, 38, 50, 2, 44, 68, 92, 101, 78, 81, 26, 40, 59, 13, 33]}}
{"prediction": {"error_location": 0.5145459771156311, "repair_targets": [0.1308944821357727, 0.6593466401100159], "repair_candidates": [0.0634232610464096, 0.005460342857986689, 0.0016167400171980262, 0.1308944821357727, 0.0481494776904583, 0.003442768706008792, 0.002967891516163945, 0.000530452816747129, 0.6593466401100159, 0.002210663864389062, 0.002405384322628379, 0.028877759352326393, 1.2672727280005347e-05, 0.02019636146724224, 0.0008122272556647658, 0.004249613732099533, 0.00527615612372756, 0.009509587660431862, 4.065454504598165e-06, 0.00018572332919575274, 4.384640487842262e-05, 0.0036987808998674154, 0.0020781883504241705, 0.004136867355555296, 0.0002566266630310565, 0.00021352092153392732], "target_probs": 0.7902411222457886}}


{"result": {"time": "2021-02-21 06:37:01.362474", "n_pass": [373, 65, 7], "n_token": 108, "loss": [0.8560476899147034, 0.23382920026779175], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def insert_values(", "self", ",", "insert_values", ",", "raw_values", "=", "False", "#INDENT#", "\"\\n        Set up the insert query from the 'insert_values' dictionary. The\\n        dictionary gives the model field names and their target values.\\n\\n        If 'raw_values' is True, the values in the 'insert_values' dictionary\\n        are inserted directly into the query, rather than passed as SQL\\n        parameters. This provides a way to insert NULL and DEFAULT keywords\\n        into the query, for example.\\n        \"", "#NEWLINE#", "(", "placeholders", "values", ")", "=", "(", "[", "]", ",", "[", "]", ")", "for", "field", "val", "in", "insert_values", ":", "#NEWLINE#", "#INDENT#", "placeholders", ".", "append", "(", "(", "field", ",", "val", ")", ")", "#NEWLINE#", "self", ".", "columns", ".", "append", "(", "field", ".", "column", ")", "#NEWLINE#", "values", ".", "append", "(", "val", ")", "#NEWLINE#", "#UNINDENT#", "if", "raw_values", ":", "#NEWLINE#", "#INDENT#", "self", ".", "values", ".", "extend", "(", "[", "(", "None", ",", "v", ")", "for", "v", "in", "values", "]", ")", "#NEWLINE#", "#UNINDENT#", "else", ":", "#NEWLINE#", "#INDENT#", "self", ".", "params", "+=", "tuple", "(", "values", ")", "#NEWLINE#", "self", ".", "values", ".", "extend", "(", "values", ")"]}}
{"position": {"error_location": 58, "repair_targets": [13, 32], "repair_candidates": [4, 28, 14, 54, 69, 82, 97, 102, 106, 6, 63, 25, 37, 49, 2, 43, 67, 91, 100, 77, 80, 26, 39, 58, 13, 32]}}
{"prediction": {"error_location": 0.4248378574848175, "repair_targets": [0.09365285187959671, 0.6978441476821899], "repair_candidates": [0.077377088367939, 0.006069257389754057, 0.001706829760223627, 0.09365285187959671, 0.03579602763056755, 0.001237794873304665, 0.0009159101755358279, 0.0006231280858628452, 0.6978441476821899, 0.001127888448536396, 0.0010259707923978567, 0.03576524928212166, 9.799889994610567e-06, 0.012509395368397236, 0.0005794201279059052, 0.006836626213043928, 0.006847771350294352, 0.006551401689648628, 5.00892792842933e-06, 0.00016111627337522805, 7.084631215548143e-05, 0.004518873989582062, 0.0015855032252147794, 0.006806342862546444, 0.00020736684382427484, 0.0001682993897702545], "target_probs": 0.791496992111206}}


{"result": {"time": "2021-02-21 06:37:01.423706", "n_pass": [374, 66, 8], "n_token": 107, "loss": [1.0249818563461304, 0.19662688672542572], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def insert_values(", "self", ",", "insert_values", ",", "raw_values", "=", "False", "#INDENT#", "\"\\n        Set up the insert query from the 'insert_values' dictionary. The\\n        dictionary gives the model field names and their target values.\\n\\n        If 'raw_values' is True, the values in the 'insert_values' dictionary\\n        are inserted directly into the query, rather than passed as SQL\\n        parameters. This provides a way to insert NULL and DEFAULT keywords\\n        into the query, for example.\\n        \"", "#NEWLINE#", "(", "placeholders", "values", ")", "=", "(", "[", "]", ",", "[", "]", ")", "for", "field", "val", "insert_values", ":", "#NEWLINE#", "#INDENT#", "placeholders", ".", "append", "(", "(", "field", ",", "val", ")", ")", "#NEWLINE#", "self", ".", "columns", ".", "append", "(", "field", ".", "column", ")", "#NEWLINE#", "values", ".", "append", "(", "val", ")", "#NEWLINE#", "#UNINDENT#", "if", "raw_values", ":", "#NEWLINE#", "#INDENT#", "self", ".", "values", ".", "extend", "(", "[", "(", "None", ",", "v", ")", "for", "v", "in", "values", "]", ")", "#NEWLINE#", "#UNINDENT#", "else", ":", "#NEWLINE#", "#INDENT#", "self", ".", "params", "+=", "tuple", "(", "values", ")", "#NEWLINE#", "self", ".", "values", ".", "extend", "(", "values", ")"]}}
{"position": {"error_location": 57, "repair_targets": [13, 31], "repair_candidates": [4, 27, 14, 53, 68, 81, 96, 101, 105, 6, 62, 25, 36, 48, 2, 42, 66, 90, 99, 76, 79, 26, 38, 57, 13, 31]}}
{"prediction": {"error_location": 0.35880300402641296, "repair_targets": [0.05559643730521202, 0.7659006714820862], "repair_candidates": [0.0247305016964674, 0.06284493207931519, 0.001470335409976542, 0.05559643730521202, 0.026110198348760605, 0.0019359542056918144, 0.0010938565246760845, 0.01249043457210064, 0.7659006714820862, 0.001621056697331369, 0.000766480399761349, 0.015101670287549496, 1.5075708688527811e-05, 0.006197015289217234, 0.0009512393735349178, 0.009075924754142761, 0.0028123182710260153, 0.004493352025747299, 2.694756631171913e-06, 0.0001146054855780676, 3.778606696869247e-05, 0.0016900732880458236, 0.0009035445982590318, 0.0037462119944393635, 0.0001615858927834779, 0.00013614541967399418], "target_probs": 0.8214970827102661}}


{"result": {"time": "2021-02-21 06:37:01.544261", "n_pass": [377, 68, 9], "n_token": 106, "loss": [1.0920522212982178, 0.14315049350261688], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def insert_values(", "self", ",", "insert_values", ",", "raw_values", "=", "False", "#INDENT#", "\"\\n        Set up the insert query from the 'insert_values' dictionary. The\\n        dictionary gives the model field names and their target values.\\n\\n        If 'raw_values' is True, the values in the 'insert_values' dictionary\\n        are inserted directly into the query, rather than passed as SQL\\n        parameters. This provides a way to insert NULL and DEFAULT keywords\\n        into the query, for example.\\n        \"", "#NEWLINE#", "(", "placeholders", "values", ")", "=", "(", "[", "]", ",", "[", "]", ")", "for", "field", "val", "insert_values", ":", "#INDENT#", "placeholders", ".", "append", "(", "(", "field", ",", "val", ")", ")", "#NEWLINE#", "self", ".", "columns", ".", "append", "(", "field", ".", "column", ")", "#NEWLINE#", "values", ".", "append", "(", "val", ")", "#NEWLINE#", "#UNINDENT#", "if", "raw_values", ":", "#NEWLINE#", "#INDENT#", "self", ".", "values", ".", "extend", "(", "[", "(", "None", ",", "v", ")", "for", "v", "in", "values", "]", ")", "#NEWLINE#", "#UNINDENT#", "else", ":", "#NEWLINE#", "#INDENT#", "self", ".", "params", "+=", "tuple", "(", "values", ")", "#NEWLINE#", "self", ".", "values", ".", "extend", "(", "values", ")"]}}
{"position": {"error_location": 56, "repair_targets": [13, 30], "repair_candidates": [4, 27, 14, 52, 67, 80, 95, 100, 104, 6, 61, 25, 35, 47, 2, 41, 65, 89, 98, 75, 78, 26, 37, 56, 13, 30]}}
{"prediction": {"error_location": 0.3355272114276886, "repair_targets": [0.05399049445986748, 0.8126331567764282], "repair_candidates": [0.016095587983727455, 0.05527496337890625, 0.0010377051075920463, 0.05399049445986748, 0.016557015478610992, 0.0010274059604853392, 0.00074254150968045, 0.008952810429036617, 0.8126331567764282, 0.0008950997143983841, 0.0004343627661000937, 0.0116975586861372, 9.137545930570923e-06, 0.0035600361879915, 0.0005311063723638654, 0.009217859245836735, 0.0013859958853572607, 0.002837536856532097, 1.9243730093876366e-06, 6.546911754412577e-05, 2.3574884835397825e-05, 0.0007547218701802194, 0.0004517688066698611, 0.0016631941543892026, 9.047352796187624e-05, 6.848369957879186e-05], "target_probs": 0.8666236400604248}}


{"result": {"time": "2021-02-21 06:37:01.663408", "n_pass": [380, 70, 10], "n_token": 105, "loss": [0.7459969520568848, 0.1484955996274948], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def insert_values(", "self", ",", "insert_values", ",", "raw_values", "=", "False", "#INDENT#", "\"\\n        Set up the insert query from the 'insert_values' dictionary. The\\n        dictionary gives the model field names and their target values.\\n\\n        If 'raw_values' is True, the values in the 'insert_values' dictionary\\n        are inserted directly into the query, rather than passed as SQL\\n        parameters. This provides a way to insert NULL and DEFAULT keywords\\n        into the query, for example.\\n        \"", "#NEWLINE#", "(", "placeholders", "values", ")", "=", "(", "[", "]", ",", "[", "]", ")", "for", "field", "val", "insert_values", ":", "#INDENT#", "placeholders", "append", "(", "(", "field", ",", "val", ")", ")", "#NEWLINE#", "self", ".", "columns", ".", "append", "(", "field", ".", "column", ")", "#NEWLINE#", "values", ".", "append", "(", "val", ")", "#NEWLINE#", "#UNINDENT#", "if", "raw_values", ":", "#NEWLINE#", "#INDENT#", "self", ".", "values", ".", "extend", "(", "[", "(", "None", ",", "v", ")", "for", "v", "in", "values", "]", ")", "#NEWLINE#", "#UNINDENT#", "else", ":", "#NEWLINE#", "#INDENT#", "self", ".", "params", "+=", "tuple", "(", "values", ")", "#NEWLINE#", "self", ".", "values", ".", "extend", "(", "values", ")"]}}
{"position": {"error_location": 55, "repair_targets": [13, 30], "repair_candidates": [4, 27, 14, 51, 66, 79, 94, 99, 103, 6, 60, 25, 34, 46, 2, 40, 64, 88, 97, 74, 77, 26, 36, 55, 13, 30]}}
{"prediction": {"error_location": 0.4742613136768341, "repair_targets": [0.2199440598487854, 0.6420597434043884], "repair_candidates": [0.012732434086501598, 0.061237286776304245, 0.0010174314957112074, 0.2199440598487854, 0.016429807990789413, 0.0016271917847916484, 0.0007746072951704264, 0.008448968641459942, 0.6420597434043884, 0.001583844656124711, 0.0004332817916292697, 0.009751374833285809, 2.4710301659069955e-05, 0.0042658476158976555, 0.0008247704245150089, 0.013473829254508018, 0.0007605550927110016, 0.0024787872098386288, 2.4678377030795673e-06, 7.035738963168114e-05, 3.150096017634496e-05, 0.00032973094494082034, 0.0006016067345626652, 0.0007036493625491858, 0.00010763268801383674, 0.00028451651451177895], "target_probs": 0.8620038032531738}}


{"result": {"time": "2021-02-21 06:37:01.962631", "n_pass": [387, 75, 11], "n_token": 104, "loss": [0.7216501235961914, 0.15700757503509521], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def insert_values(", "self", ",", "insert_values", ",", "raw_values", "=", "False", "#INDENT#", "\"\\n        Set up the insert query from the 'insert_values' dictionary. The\\n        dictionary gives the model field names and their target values.\\n\\n        If 'raw_values' is True, the values in the 'insert_values' dictionary\\n        are inserted directly into the query, rather than passed as SQL\\n        parameters. This provides a way to insert NULL and DEFAULT keywords\\n        into the query, for example.\\n        \"", "#NEWLINE#", "(", "placeholders", "values", ")", "=", "(", "[", "]", ",", "[", "]", ")", "for", "field", "val", "insert_values", ":", "#INDENT#", "placeholders", "append", "(", "(", "field", ",", "val", ")", "#NEWLINE#", "self", ".", "columns", ".", "append", "(", "field", ".", "column", ")", "#NEWLINE#", "values", ".", "append", "(", "val", ")", "#NEWLINE#", "#UNINDENT#", "if", "raw_values", ":", "#NEWLINE#", "#INDENT#", "self", ".", "values", ".", "extend", "(", "[", "(", "None", ",", "v", ")", "for", "v", "in", "values", "]", ")", "#NEWLINE#", "#UNINDENT#", "else", ":", "#NEWLINE#", "#INDENT#", "self", ".", "params", "+=", "tuple", "(", "values", ")", "#NEWLINE#", "self", ".", "values", ".", "extend", "(", "values", ")"]}}
{"position": {"error_location": 54, "repair_targets": [13, 30], "repair_candidates": [4, 27, 14, 50, 65, 78, 93, 98, 102, 6, 59, 25, 34, 45, 2, 39, 63, 87, 96, 73, 76, 26, 36, 54, 13, 30]}}
{"prediction": {"error_location": 0.48594972491264343, "repair_targets": [0.21628493070602417, 0.6384126543998718], "repair_candidates": [0.010958212427794933, 0.07498153299093246, 0.0009478709544055164, 0.21628493070602417, 0.016399670392274857, 0.001669498160481453, 0.0007312661618925631, 0.009102360345423222, 0.6384126543998718, 0.0019235562067478895, 0.0003130776749458164, 0.008575775660574436, 2.707816929614637e-05, 0.003743039909750223, 0.0007380407187156379, 0.010536023415625095, 0.000799164641648531, 0.002095254370942712, 2.4101987037283834e-06, 7.748499047011137e-05, 3.291789835202508e-05, 0.00031387648778036237, 0.0004499255446717143, 0.000513271486852318, 0.00011398085189284757, 0.000257062230957672], "target_probs": 0.854697585105896}}


{"result": {"time": "2021-02-21 06:37:02.023077", "n_pass": [388, 76, 12], "n_token": 103, "loss": [0.5592948794364929, 0.15266719460487366], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def insert_values(", "self", ",", "insert_values", ",", "raw_values", "=", "False", "#INDENT#", "\"\\n        Set up the insert query from the 'insert_values' dictionary. The\\n        dictionary gives the model field names and their target values.\\n\\n        If 'raw_values' is True, the values in the 'insert_values' dictionary\\n        are inserted directly into the query, rather than passed as SQL\\n        parameters. This provides a way to insert NULL and DEFAULT keywords\\n        into the query, for example.\\n        \"", "#NEWLINE#", "(", "placeholders", "values", ")", "=", "(", "[", "]", ",", "[", "]", ")", "for", "field", "val", "insert_values", ":", "#INDENT#", "placeholders", "append", "(", "(", "field", ",", "val", "#NEWLINE#", "self", ".", "columns", ".", "append", "(", "field", ".", "column", ")", "#NEWLINE#", "values", ".", "append", "(", "val", ")", "#NEWLINE#", "#UNINDENT#", "if", "raw_values", ":", "#NEWLINE#", "#INDENT#", "self", ".", "values", ".", "extend", "(", "[", "(", "None", ",", "v", ")", "for", "v", "in", "values", "]", ")", "#NEWLINE#", "#UNINDENT#", "else", ":", "#NEWLINE#", "#INDENT#", "self", ".", "params", "+=", "tuple", "(", "values", ")", "#NEWLINE#", "self", ".", "values", ".", "extend", "(", "values", ")"]}}
{"position": {"error_location": 53, "repair_targets": [13, 30], "repair_candidates": [4, 27, 14, 49, 64, 77, 92, 97, 101, 6, 58, 25, 34, 44, 2, 38, 62, 86, 95, 72, 75, 26, 36, 53, 13, 30]}}
{"prediction": {"error_location": 0.5716119408607483, "repair_targets": [0.19915303587913513, 0.6592622995376587], "repair_candidates": [0.00855500902980566, 0.07259141653776169, 0.000523023831192404, 0.19915303587913513, 0.014856838621199131, 0.001833542832173407, 0.0006788172759115696, 0.00892836693674326, 0.6592622995376587, 0.0025253756903111935, 0.0005018161027692258, 0.007065462879836559, 2.993368798342999e-05, 0.0027857439126819372, 0.0007764700567349792, 0.016343308612704277, 0.0005851792520843446, 0.0017316999146714807, 2.4521930299670203e-06, 7.78262983658351e-05, 2.2213813281268813e-05, 0.00023382340441457927, 0.00030182432965375483, 0.0003732482437044382, 7.390959945041686e-05, 0.00018727620772551745], "target_probs": 0.8584153652191162}}


{"result": {"time": "2021-02-21 06:37:02.082853", "n_pass": [389, 77, 13], "n_token": 102, "loss": [0.6032638549804688, 0.0776078924536705], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def insert_values(", "self", ",", "insert_values", ",", "raw_values", "=", "False", "#INDENT#", "\"\\n        Set up the insert query from the 'insert_values' dictionary. The\\n        dictionary gives the model field names and their target values.\\n\\n        If 'raw_values' is True, the values in the 'insert_values' dictionary\\n        are inserted directly into the query, rather than passed as SQL\\n        parameters. This provides a way to insert NULL and DEFAULT keywords\\n        into the query, for example.\\n        \"", "#NEWLINE#", "(", "placeholders", "values", ")", "=", "(", "[", "]", ",", "[", "]", ")", "for", "field", "val", "insert_values", ":", "#INDENT#", "placeholders", "append", "(", "(", "field", ",", "val", "self", ".", "columns", ".", "append", "(", "field", ".", "column", ")", "#NEWLINE#", "values", ".", "append", "(", "val", ")", "#NEWLINE#", "#UNINDENT#", "if", "raw_values", ":", "#NEWLINE#", "#INDENT#", "self", ".", "values", ".", "extend", "(", "[", "(", "None", ",", "v", ")", "for", "v", "in", "values", "]", ")", "#NEWLINE#", "#UNINDENT#", "else", ":", "#NEWLINE#", "#INDENT#", "self", ".", "params", "+=", "tuple", "(", "values", ")", "#NEWLINE#", "self", ".", "values", ".", "extend", "(", "values", ")"]}}
{"position": {"error_location": 52, "repair_targets": [13, 30], "repair_candidates": [4, 27, 14, 48, 63, 76, 91, 96, 100, 6, 57, 25, 34, 43, 2, 37, 61, 85, 94, 71, 74, 26, 36, 52, 13, 30]}}
{"prediction": {"error_location": 0.547023355960846, "repair_targets": [0.14690735936164856, 0.7784198522567749], "repair_candidates": [0.002214266685768962, 0.03960691764950752, 0.00023553949722554535, 0.14690735936164856, 0.007217739708721638, 0.0009975200518965721, 0.0016450803959742188, 0.005420271307229996, 0.7784198522567749, 0.0008239997550845146, 0.00025041744811460376, 0.0011266152141615748, 2.53006728598848e-05, 0.0015957155264914036, 0.00030116335256025195, 0.011570503003895283, 4.693045775638893e-05, 0.0012119237799197435, 1.3440870816339157e-06, 7.175571954576299e-05, 1.5025877473817673e-05, 3.271933746873401e-05, 0.00012664723908528686, 3.2545871363254264e-05, 4.170110696577467e-05, 6.113243580330163e-05], "target_probs": 0.9253271818161011}}


{"result": {"time": "2021-02-21 06:37:02.143826", "n_pass": [391, 78, 14], "n_token": 101, "loss": [0.3595794439315796, 0.09446831792593002], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def insert_values(", "self", ",", "insert_values", ",", "raw_values", "=", "False", "#INDENT#", "\"\\n        Set up the insert query from the 'insert_values' dictionary. The\\n        dictionary gives the model field names and their target values.\\n\\n        If 'raw_values' is True, the values in the 'insert_values' dictionary\\n        are inserted directly into the query, rather than passed as SQL\\n        parameters. This provides a way to insert NULL and DEFAULT keywords\\n        into the query, for example.\\n        \"", "#NEWLINE#", "(", "placeholders", "values", ")", "=", "(", "[", "]", ",", "[", "]", ")", "for", "field", "val", "insert_values", ":", "#INDENT#", "placeholders", "append", "(", "(", "field", ",", "val", "self", "columns", ".", "append", "(", "field", ".", "column", ")", "#NEWLINE#", "values", ".", "append", "(", "val", ")", "#NEWLINE#", "#UNINDENT#", "if", "raw_values", ":", "#NEWLINE#", "#INDENT#", "self", ".", "values", ".", "extend", "(", "[", "(", "None", ",", "v", ")", "for", "v", "in", "values", "]", ")", "#NEWLINE#", "#UNINDENT#", "else", ":", "#NEWLINE#", "#INDENT#", "self", ".", "params", "+=", "tuple", "(", "values", ")", "#NEWLINE#", "self", ".", "values", ".", "extend", "(", "values", ")"]}}
{"position": {"error_location": 51, "repair_targets": [13, 30], "repair_candidates": [4, 27, 14, 47, 62, 75, 90, 95, 99, 6, 56, 25, 34, 42, 2, 37, 60, 84, 93, 70, 73, 26, 36, 51, 13, 30]}}
{"prediction": {"error_location": 0.6979698538780212, "repair_targets": [0.14912089705467224, 0.7607356905937195], "repair_candidates": [0.0018790564499795437, 0.06505656987428665, 0.00024181314802262932, 0.14912089705467224, 0.008003473281860352, 0.0006539031164720654, 0.0006944146589376032, 0.004404731560498476, 0.7607356905937195, 0.0008552707149647176, 0.0003181273059453815, 0.0006388407782651484, 1.9168264770996757e-05, 0.0011989842168986797, 0.0001369048550259322, 0.00461711036041379, 1.4003580872667953e-05, 0.0010759480064734817, 7.034593068055983e-07, 4.770086889038794e-05, 2.266384217364248e-05, 1.3665460755873937e-05, 0.00011167553020641208, 1.6097146726679057e-05, 3.938196095987223e-05, 8.328713738592342e-05], "target_probs": 0.9098565578460693}}


{"result": {"time": "2021-02-21 06:37:02.204592", "n_pass": [392, 79, 15], "n_token": 100, "loss": [0.7769325971603394, 0.0659487247467041], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def insert_values(", "self", ",", "insert_values", ",", "raw_values", "=", "False", "#INDENT#", "\"\\n        Set up the insert query from the 'insert_values' dictionary. The\\n        dictionary gives the model field names and their target values.\\n\\n        If 'raw_values' is True, the values in the 'insert_values' dictionary\\n        are inserted directly into the query, rather than passed as SQL\\n        parameters. This provides a way to insert NULL and DEFAULT keywords\\n        into the query, for example.\\n        \"", "#NEWLINE#", "(", "placeholders", "values", ")", "=", "(", "[", "]", ",", "[", "]", ")", "for", "field", "val", "insert_values", ":", "#INDENT#", "placeholders", "append", "(", "(", "field", ",", "val", "self", ".", "append", "(", "field", ".", "column", ")", "#NEWLINE#", "values", ".", "append", "(", "val", ")", "#NEWLINE#", "#UNINDENT#", "if", "raw_values", ":", "#NEWLINE#", "#INDENT#", "self", ".", "values", ".", "extend", "(", "[", "(", "None", ",", "v", ")", "for", "v", "in", "values", "]", ")", "#NEWLINE#", "#UNINDENT#", "else", ":", "#NEWLINE#", "#INDENT#", "self", ".", "params", "+=", "tuple", "(", "values", ")", "#NEWLINE#", "self", ".", "values", ".", "extend", "(", "values", ")"]}}
{"position": {"error_location": 50, "repair_targets": [13, 30], "repair_candidates": [4, 27, 14, 46, 61, 74, 89, 94, 98, 6, 55, 25, 34, 41, 2, 37, 59, 83, 92, 69, 72, 26, 36, 50, 13, 30]}}
{"prediction": {"error_location": 0.4598142206668854, "repair_targets": [0.16879867017269135, 0.7673801779747009], "repair_candidates": [0.0009196778410114348, 0.03809715807437897, 0.00022303887817543, 0.16879867017269135, 0.006362002342939377, 0.0010275370441377163, 0.0012547892984002829, 0.005686557851731777, 0.7673801779747009, 0.00045917200623080134, 0.00026384982629679143, 0.0003138288448099047, 1.9302744476590306e-05, 0.0009901117300614715, 0.00016977272753138095, 0.007018757984042168, 7.286234449566109e-06, 0.0007929480052553117, 7.807105930623948e-07, 5.022230470785871e-05, 1.7865406334749423e-05, 1.3765296898782253e-05, 6.658999336650595e-05, 6.632800705119735e-06, 2.650487658684142e-05, 3.2983774872263893e-05], "target_probs": 0.9361788630485535}}


{"result": {"time": "2021-02-21 06:37:02.325621", "n_pass": [394, 81, 16], "n_token": 99, "loss": [0.767737627029419, 0.05030975118279457], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def insert_values(", "self", ",", "insert_values", ",", "raw_values", "=", "False", "#INDENT#", "\"\\n        Set up the insert query from the 'insert_values' dictionary. The\\n        dictionary gives the model field names and their target values.\\n\\n        If 'raw_values' is True, the values in the 'insert_values' dictionary\\n        are inserted directly into the query, rather than passed as SQL\\n        parameters. This provides a way to insert NULL and DEFAULT keywords\\n        into the query, for example.\\n        \"", "#NEWLINE#", "(", "placeholders", "values", ")", "=", "(", "[", "]", ",", "[", "]", ")", "for", "field", "val", "insert_values", ":", "#INDENT#", "placeholders", "append", "(", "(", "field", ",", "val", "self", ".", "(", "field", ".", "column", ")", "#NEWLINE#", "values", ".", "append", "(", "val", ")", "#NEWLINE#", "#UNINDENT#", "if", "raw_values", ":", "#NEWLINE#", "#INDENT#", "self", ".", "values", ".", "extend", "(", "[", "(", "None", ",", "v", ")", "for", "v", "in", "values", "]", ")", "#NEWLINE#", "#UNINDENT#", "else", ":", "#NEWLINE#", "#INDENT#", "self", ".", "params", "+=", "tuple", "(", "values", ")", "#NEWLINE#", "self", ".", "values", ".", "extend", "(", "values", ")"]}}
{"position": {"error_location": 49, "repair_targets": [13, 30], "repair_candidates": [4, 27, 14, 45, 60, 73, 88, 93, 97, 6, 54, 25, 34, 40, 2, 37, 58, 82, 91, 68, 71, 26, 36, 49, 13, 30]}}
{"prediction": {"error_location": 0.4640617072582245, "repair_targets": [0.1599435657262802, 0.7909912467002869], "repair_candidates": [0.0006324481219053268, 0.029219595715403557, 0.00019948768022004515, 0.1599435657262802, 0.005803152918815613, 0.0005395580665208399, 0.0008944643195718527, 0.003453881246969104, 0.7909912467002869, 0.0003016094851773232, 0.00020436647173482925, 0.00017479855159763247, 1.4258649571274873e-05, 0.0009916621493175626, 0.00016788615903351456, 0.005673352628946304, 4.377565801405581e-06, 0.0006230973522178829, 5.885062819288578e-07, 3.784663203987293e-05, 1.5734944099676795e-05, 1.0072179975395557e-05, 5.500338738784194e-05, 3.5263230984128313e-06, 2.0055043933098204e-05, 2.4352802938665263e-05], "target_probs": 0.9509348273277283}}


{"result": {"time": "2021-02-21 06:37:02.385573", "n_pass": [395, 82, 17], "n_token": 98, "loss": [0.5046936869621277, 0.09272792935371399], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def insert_values(", "self", ",", "insert_values", ",", "raw_values", "=", "False", "#INDENT#", "\"\\n        Set up the insert query from the 'insert_values' dictionary. The\\n        dictionary gives the model field names and their target values.\\n\\n        If 'raw_values' is True, the values in the 'insert_values' dictionary\\n        are inserted directly into the query, rather than passed as SQL\\n        parameters. This provides a way to insert NULL and DEFAULT keywords\\n        into the query, for example.\\n        \"", "#NEWLINE#", "(", "placeholders", "values", ")", "=", "(", "[", "]", ",", "[", "]", ")", "for", "field", "val", "insert_values", ":", "#INDENT#", "placeholders", "append", "(", "(", "field", ",", "val", "self", ".", "field", ".", "column", ")", "#NEWLINE#", "values", ".", "append", "(", "val", ")", "#NEWLINE#", "#UNINDENT#", "if", "raw_values", ":", "#NEWLINE#", "#INDENT#", "self", ".", "values", ".", "extend", "(", "[", "(", "None", ",", "v", ")", "for", "v", "in", "values", "]", ")", "#NEWLINE#", "#UNINDENT#", "else", ":", "#NEWLINE#", "#INDENT#", "self", ".", "params", "+=", "tuple", "(", "values", ")", "#NEWLINE#", "self", ".", "values", ".", "extend", "(", "values", ")"]}}
{"position": {"error_location": 48, "repair_targets": [13, 30], "repair_candidates": [4, 27, 14, 44, 59, 72, 87, 92, 96, 6, 53, 25, 34, 39, 2, 37, 57, 81, 90, 67, 70, 26, 36, 48, 13, 30]}}
{"prediction": {"error_location": 0.6036904454231262, "repair_targets": [0.10556977987289429, 0.8058716654777527], "repair_candidates": [0.017500219866633415, 0.022867241874337196, 0.00022109948622528464, 0.10556977987289429, 0.0036064048763364553, 0.0008489313768222928, 0.001525484723970294, 0.0044893501326441765, 0.8058716654777527, 0.00015298034122679383, 6.0350306739564985e-05, 0.024560661986470222, 0.0002650563546922058, 0.0012094987323507667, 0.0001824019564082846, 0.01002796646207571, 3.516035576467402e-05, 0.0007235934608615935, 9.589117553332471e-07, 5.059471004642546e-05, 1.3091611435811501e-05, 8.509638428222388e-05, 6.564873910974711e-05, 1.7933953131432645e-05, 2.7568557925405912e-05, 2.1208097678027116e-05], "target_probs": 0.911441445350647}}


{"result": {"time": "2021-02-21 06:37:02.446274", "n_pass": [397, 83, 18], "n_token": 97, "loss": [0.4733671545982361, 0.10003437101840973], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def insert_values(", "self", ",", "insert_values", ",", "raw_values", "=", "False", "#INDENT#", "\"\\n        Set up the insert query from the 'insert_values' dictionary. The\\n        dictionary gives the model field names and their target values.\\n\\n        If 'raw_values' is True, the values in the 'insert_values' dictionary\\n        are inserted directly into the query, rather than passed as SQL\\n        parameters. This provides a way to insert NULL and DEFAULT keywords\\n        into the query, for example.\\n        \"", "#NEWLINE#", "(", "placeholders", "values", ")", "=", "(", "[", "]", ",", "[", "]", ")", "for", "field", "val", "insert_values", ":", "#INDENT#", "placeholders", "append", "(", "(", "field", ",", "val", "self", ".", "field", "column", ")", "#NEWLINE#", "values", ".", "append", "(", "val", ")", "#NEWLINE#", "#UNINDENT#", "if", "raw_values", ":", "#NEWLINE#", "#INDENT#", "self", ".", "values", ".", "extend", "(", "[", "(", "None", ",", "v", ")", "for", "v", "in", "values", "]", ")", "#NEWLINE#", "#UNINDENT#", "else", ":", "#NEWLINE#", "#INDENT#", "self", ".", "params", "+=", "tuple", "(", "values", ")", "#NEWLINE#", "self", ".", "values", ".", "extend", "(", "values", ")"]}}
{"position": {"error_location": 47, "repair_targets": [13, 30], "repair_candidates": [4, 27, 14, 43, 58, 71, 86, 91, 95, 6, 52, 25, 34, 39, 2, 37, 56, 80, 89, 66, 69, 26, 36, 47, 13, 30]}}
{"prediction": {"error_location": 0.6229013800621033, "repair_targets": [0.11818564683198929, 0.7866206765174866], "repair_candidates": [0.022539131343364716, 0.022246789187192917, 0.00031784785096533597, 0.11818564683198929, 0.004037878941744566, 0.0008998910197988153, 0.0012981370091438293, 0.0050864266231656075, 0.7866206765174866, 0.0001366097858408466, 3.6413417547009885e-05, 0.02377825230360031, 0.00018458571867085993, 0.0013300181599333882, 0.00022876219009049237, 0.01204267144203186, 5.147907722857781e-05, 0.0006441030418500304, 1.3959194120616303e-06, 4.783149779541418e-05, 1.742279710015282e-05, 9.130276157520711e-05, 9.807536844164133e-05, 2.125444916600827e-05, 3.155143713229336e-05, 2.5917468519764952e-05], "target_probs": 0.9048063158988953}}


{"result": {"time": "2021-02-21 06:37:02.506534", "n_pass": [398, 84, 19], "n_token": 96, "loss": [0.34925177693367004, 0.06876146048307419], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def insert_values(", "self", ",", "insert_values", ",", "raw_values", "=", "False", "#INDENT#", "\"\\n        Set up the insert query from the 'insert_values' dictionary. The\\n        dictionary gives the model field names and their target values.\\n\\n        If 'raw_values' is True, the values in the 'insert_values' dictionary\\n        are inserted directly into the query, rather than passed as SQL\\n        parameters. This provides a way to insert NULL and DEFAULT keywords\\n        into the query, for example.\\n        \"", "#NEWLINE#", "(", "placeholders", "values", ")", "=", "(", "[", "]", ",", "[", "]", ")", "for", "field", "val", "insert_values", ":", "#INDENT#", "placeholders", "append", "(", "(", "field", ",", "val", "self", ".", "field", ")", "#NEWLINE#", "values", ".", "append", "(", "val", ")", "#NEWLINE#", "#UNINDENT#", "if", "raw_values", ":", "#NEWLINE#", "#INDENT#", "self", ".", "values", ".", "extend", "(", "[", "(", "None", ",", "v", ")", "for", "v", "in", "values", "]", ")", "#NEWLINE#", "#UNINDENT#", "else", ":", "#NEWLINE#", "#INDENT#", "self", ".", "params", "+=", "tuple", "(", "values", ")", "#NEWLINE#", "self", ".", "values", ".", "extend", "(", "values", ")"]}}
{"position": {"error_location": 46, "repair_targets": [13, 30], "repair_candidates": [4, 27, 14, 42, 57, 70, 85, 90, 94, 6, 51, 25, 34, 39, 2, 37, 55, 79, 88, 65, 68, 26, 36, 46, 13, 30]}}
{"prediction": {"error_location": 0.7052156329154968, "repair_targets": [0.15340733528137207, 0.7801420092582703], "repair_candidates": [0.00969068892300129, 0.02294342592358589, 0.00030986551428213716, 0.15340733528137207, 0.0047949859872460365, 0.0006806225865148008, 0.0011185811599716544, 0.005231008864939213, 0.7801420092582703, 9.592615970177576e-05, 1.8945051124319434e-05, 0.007527722045779228, 0.00023966118169482797, 0.0011167554184794426, 0.00020305727957747877, 0.011647473089396954, 1.7649366782279685e-05, 0.0005481882835738361, 1.4551121694239555e-06, 3.872581874020398e-05, 1.845845690695569e-05, 2.296491220477037e-05, 0.00011953000648645684, 7.435349289153237e-06, 3.240066871512681e-05, 2.5216202629962936e-05], "target_probs": 0.9335493445396423}}


{"result": {"time": "2021-02-21 06:37:02.568708", "n_pass": [399, 85, 20], "n_token": 95, "loss": [0.25621598958969116, 0.056737642735242844], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def insert_values(", "self", ",", "insert_values", ",", "raw_values", "=", "False", "#INDENT#", "\"\\n        Set up the insert query from the 'insert_values' dictionary. The\\n        dictionary gives the model field names and their target values.\\n\\n        If 'raw_values' is True, the values in the 'insert_values' dictionary\\n        are inserted directly into the query, rather than passed as SQL\\n        parameters. This provides a way to insert NULL and DEFAULT keywords\\n        into the query, for example.\\n        \"", "#NEWLINE#", "(", "placeholders", "values", ")", "=", "(", "[", "]", ",", "[", "]", ")", "for", "field", "val", "insert_values", ":", "#INDENT#", "placeholders", "append", "(", "(", "field", ",", "val", "self", ".", "field", "#NEWLINE#", "values", ".", "append", "(", "val", ")", "#NEWLINE#", "#UNINDENT#", "if", "raw_values", ":", "#NEWLINE#", "#INDENT#", "self", ".", "values", ".", "extend", "(", "[", "(", "None", ",", "v", ")", "for", "v", "in", "values", "]", ")", "#NEWLINE#", "#UNINDENT#", "else", ":", "#NEWLINE#", "#INDENT#", "self", ".", "params", "+=", "tuple", "(", "values", ")", "#NEWLINE#", "self", ".", "values", ".", "extend", "(", "values", ")"]}}
{"position": {"error_location": 45, "repair_targets": [13, 30], "repair_candidates": [4, 27, 14, 41, 56, 69, 84, 89, 93, 6, 50, 25, 34, 39, 2, 37, 54, 78, 87, 64, 67, 26, 36, 45, 13, 30]}}
{"prediction": {"error_location": 0.7739748358726501, "repair_targets": [0.197880819439888, 0.7469611167907715], "repair_candidates": [0.004655915312469006, 0.023343214765191078, 0.0002789998543448746, 0.197880819439888, 0.005540447775274515, 0.0007274520467035472, 0.0009227525442838669, 0.004692201502621174, 0.7469611167907715, 7.490104326279834e-05, 1.693093690846581e-05, 0.002956910990178585, 0.0003849342465400696, 0.0007963721873238683, 0.00015497936692554504, 0.009890503250062466, 7.176630333560752e-06, 0.000465329154394567, 1.4760900057808612e-06, 3.4597396734170616e-05, 1.8518545402912423e-05, 8.353755220014136e-06, 0.00012462673475965858, 3.48450612364104e-06, 3.7509158573811874e-05, 2.0514549760264345e-05], "target_probs": 0.9448419213294983}}


{"result": {"time": "2021-02-21 06:37:02.628823", "n_pass": [400, 86, 21], "n_token": 94, "loss": [1.228270173072815, 0.21303680539131165], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def insert_values(", "self", ",", "insert_values", ",", "raw_values", "=", "False", "#INDENT#", "\"\\n        Set up the insert query from the 'insert_values' dictionary. The\\n        dictionary gives the model field names and their target values.\\n\\n        If 'raw_values' is True, the values in the 'insert_values' dictionary\\n        are inserted directly into the query, rather than passed as SQL\\n        parameters. This provides a way to insert NULL and DEFAULT keywords\\n        into the query, for example.\\n        \"", "#NEWLINE#", "(", "placeholders", "values", ")", "=", "(", "[", "]", ",", "[", "]", ")", "for", "field", "val", "insert_values", ":", "#INDENT#", "placeholders", "append", "(", "(", "field", ",", "val", "self", ".", "field", "values", ".", "append", "(", "val", ")", "#NEWLINE#", "#UNINDENT#", "if", "raw_values", ":", "#NEWLINE#", "#INDENT#", "self", ".", "values", ".", "extend", "(", "[", "(", "None", ",", "v", ")", "for", "v", "in", "values", "]", ")", "#NEWLINE#", "#UNINDENT#", "else", ":", "#NEWLINE#", "#INDENT#", "self", ".", "params", "+=", "tuple", "(", "values", ")", "#NEWLINE#", "self", ".", "values", ".", "extend", "(", "values", ")"]}}
{"position": {"error_location": 44, "repair_targets": [13, 30], "repair_candidates": [4, 27, 14, 40, 55, 68, 83, 88, 92, 6, 49, 25, 34, 39, 2, 37, 53, 77, 86, 63, 66, 26, 36, 44, 13, 30]}}
{"prediction": {"error_location": 0.29279860854148865, "repair_targets": [0.16703997552394867, 0.6410863995552063], "repair_candidates": [0.008370433934032917, 0.12345973402261734, 0.0011476355139166117, 0.16703997552394867, 0.017089853063225746, 0.0009960090974345803, 0.0015210683923214674, 0.01589765027165413, 0.6410863995552063, 4.304411049815826e-05, 1.501757560617989e-05, 0.005257582291960716, 0.001469169044867158, 0.00400895532220602, 0.00015143062046263367, 0.00951515045017004, 5.580477591138333e-05, 0.001440306194126606, 2.4618157112854533e-06, 0.00012585711374413222, 7.649302278878167e-05, 0.00012607827375177294, 0.0007279477431438863, 2.1681498765246943e-05, 0.000298811006359756, 5.5518026783829555e-05], "target_probs": 0.8081263899803162}}


{"result": {"time": "2021-02-21 06:37:02.747293", "n_pass": [403, 88, 22], "n_token": 93, "loss": [0.994542121887207, 0.1690896600484848], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def insert_values(", "self", ",", "insert_values", ",", "raw_values", "=", "False", "#INDENT#", "\"\\n        Set up the insert query from the 'insert_values' dictionary. The\\n        dictionary gives the model field names and their target values.\\n\\n        If 'raw_values' is True, the values in the 'insert_values' dictionary\\n        are inserted directly into the query, rather than passed as SQL\\n        parameters. This provides a way to insert NULL and DEFAULT keywords\\n        into the query, for example.\\n        \"", "#NEWLINE#", "(", "placeholders", "values", ")", "=", "(", "[", "]", ",", "[", "]", ")", "for", "field", "val", "insert_values", ":", "#INDENT#", "placeholders", "append", "(", "(", "field", ",", "val", "self", ".", "field", "values", ".", "(", "val", ")", "#NEWLINE#", "#UNINDENT#", "if", "raw_values", ":", "#NEWLINE#", "#INDENT#", "self", ".", "values", ".", "extend", "(", "[", "(", "None", ",", "v", ")", "for", "v", "in", "values", "]", ")", "#NEWLINE#", "#UNINDENT#", "else", ":", "#NEWLINE#", "#INDENT#", "self", ".", "params", "+=", "tuple", "(", "values", ")", "#NEWLINE#", "self", ".", "values", ".", "extend", "(", "values", ")"]}}
{"position": {"error_location": 43, "repair_targets": [13, 30], "repair_candidates": [4, 27, 14, 40, 54, 67, 82, 87, 91, 6, 48, 25, 34, 39, 2, 37, 52, 76, 85, 62, 65, 26, 36, 43, 13, 30]}}
{"prediction": {"error_location": 0.36989277601242065, "repair_targets": [0.19921940565109253, 0.645213782787323], "repair_candidates": [0.003981213551014662, 0.09982758015394211, 0.0009523476473987103, 0.19921940565109253, 0.018283391371369362, 0.0011802201624959707, 0.0010546837002038956, 0.011726869270205498, 0.645213782787323, 4.244647789164446e-05, 1.625924232939724e-05, 0.0021096046548336744, 0.0018204954685643315, 0.003625570796430111, 0.0002446633588988334, 0.008395486511290073, 2.4261573344119824e-05, 0.0011449073208495975, 1.9736778540391242e-06, 0.00010914893209701404, 6.227724952623248e-05, 6.80635857861489e-05, 0.0005421466776169837, 1.2077613064320758e-05, 0.0002931419585365802, 4.7883866500342265e-05], "target_probs": 0.8444331884384155}}


{"result": {"time": "2021-02-21 06:37:02.868433", "n_pass": [406, 90, 23], "n_token": 92, "loss": [1.0773214101791382, 0.12146785110235214], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def insert_values(", "self", ",", "insert_values", ",", "raw_values", "=", "False", "#INDENT#", "\"\\n        Set up the insert query from the 'insert_values' dictionary. The\\n        dictionary gives the model field names and their target values.\\n\\n        If 'raw_values' is True, the values in the 'insert_values' dictionary\\n        are inserted directly into the query, rather than passed as SQL\\n        parameters. This provides a way to insert NULL and DEFAULT keywords\\n        into the query, for example.\\n        \"", "#NEWLINE#", "(", "placeholders", "values", ")", "=", "(", "[", "]", ",", "[", "]", ")", "for", "field", "val", "insert_values", ":", "#INDENT#", "placeholders", "append", "(", "(", "field", ",", "val", "self", ".", "field", "values", ".", "(", "val", "#NEWLINE#", "#UNINDENT#", "if", "raw_values", ":", "#NEWLINE#", "#INDENT#", "self", ".", "values", ".", "extend", "(", "[", "(", "None", ",", "v", ")", "for", "v", "in", "values", "]", ")", "#NEWLINE#", "#UNINDENT#", "else", ":", "#NEWLINE#", "#INDENT#", "self", ".", "params", "+=", "tuple", "(", "values", ")", "#NEWLINE#", "self", ".", "values", ".", "extend", "(", "values", ")"]}}
{"position": {"error_location": 43, "repair_targets": [13, 30], "repair_candidates": [4, 27, 14, 40, 53, 66, 81, 86, 90, 6, 47, 25, 34, 39, 2, 37, 51, 75, 84, 61, 64, 26, 36, 43, 13, 30]}}
{"prediction": {"error_location": 0.3405064046382904, "repair_targets": [0.20571178197860718, 0.6799077391624451], "repair_candidates": [0.003601561300456524, 0.0692281648516655, 0.0008991988725028932, 0.20571178197860718, 0.010611803270876408, 0.0019205131102353334, 0.001206209184601903, 0.013127613812685013, 0.6799077391624451, 3.382770955795422e-05, 1.4172836927173194e-05, 0.0019801363814622164, 0.001160900923423469, 0.0010796429123729467, 3.681346424855292e-05, 0.007561309263110161, 2.3567314201500267e-05, 0.0008852099999785423, 2.119076498274808e-06, 0.00012342054105829448, 5.5193293519550934e-05, 7.855261355871335e-05, 0.0003468030190560967, 1.4842767996015027e-05, 0.0003421319997869432, 4.688216358772479e-05], "target_probs": 0.8856195211410522}}


{"result": {"time": "2021-02-21 06:37:02.928508", "n_pass": [407, 91, 24], "n_token": 91, "loss": [1.1850156784057617, 0.14637643098831177], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def insert_values(", "self", ",", "insert_values", ",", "raw_values", "=", "False", "#INDENT#", "\"\\n        Set up the insert query from the 'insert_values' dictionary. The\\n        dictionary gives the model field names and their target values.\\n\\n        If 'raw_values' is True, the values in the 'insert_values' dictionary\\n        are inserted directly into the query, rather than passed as SQL\\n        parameters. This provides a way to insert NULL and DEFAULT keywords\\n        into the query, for example.\\n        \"", "#NEWLINE#", "(", "placeholders", "values", ")", "=", "(", "[", "]", ",", "[", "]", ")", "for", "field", "val", "insert_values", ":", "#INDENT#", "placeholders", "append", "(", "(", "field", ",", "val", "self", ".", "field", "values", ".", "(", "val", "#UNINDENT#", "if", "raw_values", ":", "#NEWLINE#", "#INDENT#", "self", ".", "values", ".", "extend", "(", "[", "(", "None", ",", "v", ")", "for", "v", "in", "values", "]", ")", "#NEWLINE#", "#UNINDENT#", "else", ":", "#NEWLINE#", "#INDENT#", "self", ".", "params", "+=", "tuple", "(", "values", ")", "#NEWLINE#", "self", ".", "values", ".", "extend", "(", "values", ")"]}}
{"position": {"error_location": 43, "repair_targets": [13, 30], "repair_candidates": [4, 27, 14, 40, 52, 65, 80, 85, 89, 6, 46, 25, 34, 39, 2, 37, 50, 74, 83, 60, 63, 26, 36, 43, 13, 30]}}
{"prediction": {"error_location": 0.3057413697242737, "repair_targets": [0.19052529335021973, 0.6733071804046631], "repair_candidates": [0.0034276104997843504, 0.09270767122507095, 0.0007690031197853386, 0.19052529335021973, 0.009816977195441723, 0.0022182539105415344, 0.0013896313030272722, 0.015065817162394524, 0.6733071804046631, 7.180520333349705e-05, 1.2545624485937878e-05, 0.0021859153639525175, 0.0020875276532024145, 0.0015318479854613543, 5.500022598425858e-05, 0.002762111136689782, 2.317315920663532e-05, 0.0010192518820986152, 2.2672875275020488e-06, 0.00014871418534312397, 7.545738480985165e-05, 8.382623491343111e-05, 0.00035060287336818874, 1.7522370399092324e-05, 0.0002926852903328836, 5.240810787654482e-05], "target_probs": 0.8638324737548828}}


{"result": {"time": "2021-02-21 06:37:02.988449", "n_pass": [408, 92, 25], "n_token": 90, "loss": [0.8067131042480469, 0.13421303033828735], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def insert_values(", "self", ",", "insert_values", ",", "raw_values", "=", "False", "#INDENT#", "\"\\n        Set up the insert query from the 'insert_values' dictionary. The\\n        dictionary gives the model field names and their target values.\\n\\n        If 'raw_values' is True, the values in the 'insert_values' dictionary\\n        are inserted directly into the query, rather than passed as SQL\\n        parameters. This provides a way to insert NULL and DEFAULT keywords\\n        into the query, for example.\\n        \"", "#NEWLINE#", "(", "placeholders", "values", ")", "=", "(", "[", "]", ",", "[", "]", ")", "for", "field", "val", "insert_values", ":", "#INDENT#", "placeholders", "append", "(", "(", "field", ",", "val", "self", ".", "field", "values", ".", "(", "val", "if", "raw_values", ":", "#NEWLINE#", "#INDENT#", "self", ".", "values", ".", "extend", "(", "[", "(", "None", ",", "v", ")", "for", "v", "in", "values", "]", ")", "#NEWLINE#", "#UNINDENT#", "else", ":", "#NEWLINE#", "#INDENT#", "self", ".", "params", "+=", "tuple", "(", "values", ")", "#NEWLINE#", "self", ".", "values", ".", "extend", "(", "values", ")"]}}
{"position": {"error_location": 43, "repair_targets": [13, 30], "repair_candidates": [4, 27, 14, 40, 51, 64, 79, 84, 88, 6, 45, 25, 34, 39, 2, 37, 49, 73, 82, 59, 62, 26, 36, 43, 13, 30]}}
{"prediction": {"error_location": 0.4463226795196533, "repair_targets": [0.1576070338487625, 0.7167967557907104], "repair_candidates": [0.0013617688091471791, 0.10221800953149796, 0.0006025757757015526, 0.1576070338487625, 0.005482430569827557, 0.0012083095498383045, 0.0012245550751686096, 0.010112078860402107, 0.7167967557907104, 6.675375334452838e-05, 6.0039260461053345e-06, 0.0008086102898232639, 0.0005494458018802106, 0.0004456759197637439, 5.6783050240483135e-05, 2.8303002181928605e-05, 1.3409333405434154e-05, 0.0007953488966450095, 1.8153718883695547e-06, 0.00011764867667807266, 5.9661662817234173e-05, 4.840902329306118e-05, 0.00015450917999260128, 1.3758111890638247e-05, 0.00018923009338323027, 3.116859443252906e-05], "target_probs": 0.8744037747383118}}


{"result": {"time": "2021-02-21 06:37:03.048312", "n_pass": [409, 93, 26], "n_token": 89, "loss": [0.3537601828575134, 0.11420593410730362], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def insert_values(", "self", ",", "insert_values", ",", "raw_values", "=", "False", "#INDENT#", "\"\\n        Set up the insert query from the 'insert_values' dictionary. The\\n        dictionary gives the model field names and their target values.\\n\\n        If 'raw_values' is True, the values in the 'insert_values' dictionary\\n        are inserted directly into the query, rather than passed as SQL\\n        parameters. This provides a way to insert NULL and DEFAULT keywords\\n        into the query, for example.\\n        \"", "#NEWLINE#", "(", "placeholders", "values", ")", "=", "(", "[", "]", ",", "[", "]", ")", "for", "field", "val", "insert_values", ":", "#INDENT#", "placeholders", "append", "(", "(", "field", ",", "val", "self", ".", "field", "values", ".", "(", "val", "raw_values", ":", "#NEWLINE#", "#INDENT#", "self", ".", "values", ".", "extend", "(", "[", "(", "None", ",", "v", ")", "for", "v", "in", "values", "]", ")", "#NEWLINE#", "#UNINDENT#", "else", ":", "#NEWLINE#", "#INDENT#", "self", ".", "params", "+=", "tuple", "(", "values", ")", "#NEWLINE#", "self", ".", "values", ".", "extend", "(", "values", ")"]}}
{"position": {"error_location": 43, "repair_targets": [13, 30], "repair_candidates": [4, 27, 14, 40, 50, 63, 78, 83, 87, 6, 44, 25, 34, 39, 2, 37, 48, 72, 81, 58, 61, 26, 36, 43, 13, 30]}}
{"prediction": {"error_location": 0.702043354511261, "repair_targets": [0.17345839738845825, 0.7186158299446106], "repair_candidates": [0.0024956362321972847, 0.09074632078409195, 0.0003551375702954829, 0.17345839738845825, 0.004581407178193331, 0.0005746357492171228, 0.0006747101433575153, 0.004758878145366907, 0.7186158299446106, 3.5946155549027026e-05, 1.2100722415198106e-06, 0.0016857146983966231, 0.0005725532537326217, 0.0005081757553853095, 5.5555428843945265e-05, 4.015981176053174e-05, 1.3532129742088728e-05, 0.0004459576739463955, 6.713621587550733e-07, 4.4413154682843015e-05, 3.398137414478697e-05, 4.2977793782483786e-05, 0.00015995302237570286, 1.2389094990794547e-05, 6.381390267051756e-05, 2.1952857423457317e-05], "target_probs": 0.8920742273330688}}


{"result": {"time": "2021-02-21 06:37:03.107913", "n_pass": [411, 94, 27], "n_token": 88, "loss": [0.8300900459289551, 0.08522799611091614], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def insert_values(", "self", ",", "insert_values", ",", "raw_values", "=", "False", "#INDENT#", "\"\\n        Set up the insert query from the 'insert_values' dictionary. The\\n        dictionary gives the model field names and their target values.\\n\\n        If 'raw_values' is True, the values in the 'insert_values' dictionary\\n        are inserted directly into the query, rather than passed as SQL\\n        parameters. This provides a way to insert NULL and DEFAULT keywords\\n        into the query, for example.\\n        \"", "#NEWLINE#", "(", "placeholders", "values", ")", "=", "(", "[", "]", ",", "[", "]", ")", "for", "field", "val", "insert_values", ":", "#INDENT#", "placeholders", "append", "(", "(", "field", ",", "val", "self", ".", "field", "values", ".", "(", "val", "raw_values", "#NEWLINE#", "#INDENT#", "self", ".", "values", ".", "extend", "(", "[", "(", "None", ",", "v", ")", "for", "v", "in", "values", "]", ")", "#NEWLINE#", "#UNINDENT#", "else", ":", "#NEWLINE#", "#INDENT#", "self", ".", "params", "+=", "tuple", "(", "values", ")", "#NEWLINE#", "self", ".", "values", ".", "extend", "(", "values", ")"]}}
{"position": {"error_location": 43, "repair_targets": [13, 30], "repair_candidates": [4, 27, 14, 40, 49, 62, 77, 82, 86, 6, 44, 25, 34, 39, 2, 37, 47, 71, 80, 57, 60, 26, 36, 43, 13, 30]}}
{"prediction": {"error_location": 0.4360100328922272, "repair_targets": [0.15584725141525269, 0.7624556422233582], "repair_candidates": [0.0019077765755355358, 0.06471920758485794, 0.00045869738096371293, 0.15584725141525269, 0.002726941369473934, 0.0010688641341403127, 0.0007602087571285665, 0.006631876807659864, 0.7624556422233582, 4.737183917313814e-05, 3.4504637369536795e-06, 0.0011742262868210673, 0.000680094410199672, 0.00047213915968313813, 3.8290694647002965e-05, 2.399488766968716e-05, 2.1661991922883317e-05, 0.0005150092765688896, 1.3121011761541013e-06, 9.315360512118787e-05, 5.6049120757961646e-05, 4.805299613508396e-05, 0.00013929892156738788, 1.768221045495011e-05, 7.270199421327561e-05, 1.8912907762569375e-05], "target_probs": 0.9183028936386108}}


{"result": {"time": "2021-02-21 06:37:03.167417", "n_pass": [412, 95, 28], "n_token": 87, "loss": [0.7264345288276672, 0.06729532033205032], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def insert_values(", "self", ",", "insert_values", ",", "raw_values", "=", "False", "#INDENT#", "\"\\n        Set up the insert query from the 'insert_values' dictionary. The\\n        dictionary gives the model field names and their target values.\\n\\n        If 'raw_values' is True, the values in the 'insert_values' dictionary\\n        are inserted directly into the query, rather than passed as SQL\\n        parameters. This provides a way to insert NULL and DEFAULT keywords\\n        into the query, for example.\\n        \"", "#NEWLINE#", "(", "placeholders", "values", ")", "=", "(", "[", "]", ",", "[", "]", ")", "for", "field", "val", "insert_values", ":", "#INDENT#", "placeholders", "append", "(", "(", "field", ",", "val", "self", ".", "field", "values", ".", "(", "val", "raw_values", "#INDENT#", "self", ".", "values", ".", "extend", "(", "[", "(", "None", ",", "v", ")", "for", "v", "in", "values", "]", ")", "#NEWLINE#", "#UNINDENT#", "else", ":", "#NEWLINE#", "#INDENT#", "self", ".", "params", "+=", "tuple", "(", "values", ")", "#NEWLINE#", "self", ".", "values", ".", "extend", "(", "values", ")"]}}
{"position": {"error_location": 43, "repair_targets": [13, 30], "repair_candidates": [4, 27, 14, 40, 48, 61, 76, 81, 85, 6, 44, 25, 34, 39, 2, 37, 46, 70, 79, 56, 59, 26, 36, 43, 13, 30]}}
{"prediction": {"error_location": 0.48363029956817627, "repair_targets": [0.10208259522914886, 0.8328364491462708], "repair_candidates": [0.0005869856104254723, 0.05748502537608147, 0.0002413325710222125, 0.10208259522914886, 0.00106335140299052, 0.0006456749979406595, 0.00038216490065678954, 0.0028314681258052588, 0.8328364491462708, 6.750337342964485e-05, 3.0103085464361357e-06, 0.0003993356367573142, 0.00038873712765052915, 0.00027813948690891266, 2.385622246947605e-05, 1.1116520909126848e-05, 1.7610736904316582e-05, 0.0003340501571074128, 7.921079827610811e-07, 0.00014142750296741724, 2.2103835362941027e-05, 2.5113946321653202e-05, 7.528915739385411e-05, 8.315819286508486e-06, 3.8195827073650435e-05, 1.0307067896064837e-05], "target_probs": 0.9349190592765808}}


{"result": {"time": "2021-02-21 06:37:03.288478", "n_pass": [415, 97, 29], "n_token": 86, "loss": [0.6394322514533997, 0.03315909951925278], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def insert_values(", "self", ",", "insert_values", ",", "raw_values", "=", "False", "#INDENT#", "\"\\n        Set up the insert query from the 'insert_values' dictionary. The\\n        dictionary gives the model field names and their target values.\\n\\n        If 'raw_values' is True, the values in the 'insert_values' dictionary\\n        are inserted directly into the query, rather than passed as SQL\\n        parameters. This provides a way to insert NULL and DEFAULT keywords\\n        into the query, for example.\\n        \"", "#NEWLINE#", "(", "placeholders", "values", ")", "=", "(", "[", "]", ",", "[", "]", ")", "for", "field", "val", "insert_values", ":", "#INDENT#", "placeholders", "append", "(", "(", "field", ",", "val", "self", ".", "field", "values", ".", "(", "val", "raw_values", "#INDENT#", "self", "values", ".", "extend", "(", "[", "(", "None", ",", "v", ")", "for", "v", "in", "values", "]", ")", "#NEWLINE#", "#UNINDENT#", "else", ":", "#NEWLINE#", "#INDENT#", "self", ".", "params", "+=", "tuple", "(", "values", ")", "#NEWLINE#", "self", ".", "values", ".", "extend", "(", "values", ")"]}}
{"position": {"error_location": 43, "repair_targets": [13, 30], "repair_candidates": [4, 27, 14, 40, 47, 60, 75, 80, 84, 6, 44, 25, 34, 39, 2, 37, 46, 69, 78, 55, 58, 26, 36, 43, 13, 30]}}
{"prediction": {"error_location": 0.5275918841362, "repair_targets": [0.06049308925867081, 0.9068915247917175], "repair_candidates": [0.00018125801580026746, 0.030707675963640213, 8.166581392288208e-05, 0.06049308925867081, 0.00029303698102012277, 0.0001836256415117532, 9.219621279044077e-05, 0.0004668284091167152, 0.9068915247917175, 5.38683234481141e-05, 1.3011162991460878e-06, 0.00013998641225043684, 0.0001747798960423097, 8.99211154319346e-05, 1.152426739281509e-05, 1.1969579645665362e-05, 2.6423940653330646e-06, 4.668784458772279e-05, 4.2220480622745526e-07, 5.5985889048315585e-05, 2.2296667339105625e-06, 7.870800800446887e-06, 5.9302165027474985e-06, 9.590829677108559e-07, 2.1978808035783004e-06, 8.264831876658718e-07], "target_probs": 0.9673846364021301}}


{"result": {"time": "2021-02-21 06:37:03.347973", "n_pass": [417, 98, 30], "n_token": 85, "loss": [0.462108850479126, 0.04809289425611496], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def insert_values(", "self", ",", "insert_values", ",", "raw_values", "=", "False", "#INDENT#", "\"\\n        Set up the insert query from the 'insert_values' dictionary. The\\n        dictionary gives the model field names and their target values.\\n\\n        If 'raw_values' is True, the values in the 'insert_values' dictionary\\n        are inserted directly into the query, rather than passed as SQL\\n        parameters. This provides a way to insert NULL and DEFAULT keywords\\n        into the query, for example.\\n        \"", "#NEWLINE#", "(", "placeholders", "values", ")", "=", "(", "[", "]", ",", "[", "]", ")", "for", "field", "val", "insert_values", ":", "#INDENT#", "placeholders", "append", "(", "(", "field", ",", "val", "self", ".", "field", "values", ".", "(", "val", "raw_values", "#INDENT#", "self", "values", "extend", "(", "[", "(", "None", ",", "v", ")", "for", "v", "in", "values", "]", ")", "#NEWLINE#", "#UNINDENT#", "else", ":", "#NEWLINE#", "#INDENT#", "self", ".", "params", "+=", "tuple", "(", "values", ")", "#NEWLINE#", "self", ".", "values", ".", "extend", "(", "values", ")"]}}
{"position": {"error_location": 43, "repair_targets": [13, 30], "repair_candidates": [4, 27, 14, 40, 47, 59, 74, 79, 83, 6, 44, 25, 34, 39, 2, 37, 46, 68, 77, 54, 57, 26, 36, 43, 13, 30]}}
{"prediction": {"error_location": 0.6299537420272827, "repair_targets": [0.12120210379362106, 0.8318431377410889], "repair_candidates": [0.0008649280061945319, 0.03746401146054268, 0.00019409666128922254, 0.12120210379362106, 0.0018782351398840547, 0.0009278180659748614, 0.00046464335173368454, 0.002925583627074957, 0.8318431377410889, 0.00010844064672710374, 4.78258152725175e-06, 0.0005192431272007525, 0.0006307591684162617, 0.00035298714647069573, 3.810256748693064e-05, 1.757692007231526e-05, 6.633428711211309e-05, 0.00022273931244853884, 4.867748657488846e-07, 0.0001890957064460963, 9.041870725923218e-06, 3.2958578231045976e-05, 1.591438558534719e-05, 1.1553749573067762e-05, 1.394806349708233e-05, 1.536341869723401e-06], "target_probs": 0.9530452489852905}}


{"result": {"time": "2021-02-21 06:37:03.407364", "n_pass": [418, 99, 31], "n_token": 84, "loss": [0.6058965921401978, 0.04732887074351311], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def insert_values(", "self", ",", "insert_values", ",", "raw_values", "=", "False", "#INDENT#", "\"\\n        Set up the insert query from the 'insert_values' dictionary. The\\n        dictionary gives the model field names and their target values.\\n\\n        If 'raw_values' is True, the values in the 'insert_values' dictionary\\n        are inserted directly into the query, rather than passed as SQL\\n        parameters. This provides a way to insert NULL and DEFAULT keywords\\n        into the query, for example.\\n        \"", "#NEWLINE#", "(", "placeholders", "values", ")", "=", "(", "[", "]", ",", "[", "]", ")", "for", "field", "val", "insert_values", ":", "#INDENT#", "placeholders", "append", "(", "(", "field", ",", "val", "self", ".", "field", "values", ".", "(", "val", "raw_values", "#INDENT#", "self", "values", "(", "[", "(", "None", ",", "v", ")", "for", "v", "in", "values", "]", ")", "#NEWLINE#", "#UNINDENT#", "else", ":", "#NEWLINE#", "#INDENT#", "self", ".", "params", "+=", "tuple", "(", "values", ")", "#NEWLINE#", "self", ".", "values", ".", "extend", "(", "values", ")"]}}
{"position": {"error_location": 43, "repair_targets": [13, 30], "repair_candidates": [4, 27, 14, 40, 47, 58, 73, 78, 82, 6, 44, 25, 34, 39, 2, 37, 46, 67, 76, 53, 56, 26, 36, 43, 13, 30]}}
{"prediction": {"error_location": 0.545585036277771, "repair_targets": [0.10376758873462677, 0.850006103515625], "repair_candidates": [0.0005360992508940399, 0.03830073028802872, 0.0002542551956139505, 0.10376758873462677, 0.0012072785757482052, 0.0007918658666312695, 0.00039562402525916696, 0.0028459718450903893, 0.850006103515625, 0.00010666060552466661, 6.53251390758669e-06, 0.0004031346761621535, 0.000519268331117928, 0.0002608622016850859, 3.62415739800781e-05, 2.377372220507823e-05, 6.087567271606531e-06, 0.00015617937606293708, 7.698873787376215e-07, 0.00021376872609835118, 1.445971429347992e-05, 3.385394302313216e-05, 6.079534796299413e-05, 1.0729328096203972e-05, 3.580186239560135e-05, 5.6443686844431795e-06], "target_probs": 0.9537736773490906}}


{"result": {"time": "2021-02-21 06:37:03.467404", "n_pass": [419, 100, 32], "n_token": 83, "loss": [0.5733810663223267, 0.041577789932489395], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def insert_values(", "self", ",", "insert_values", ",", "raw_values", "=", "False", "#INDENT#", "\"\\n        Set up the insert query from the 'insert_values' dictionary. The\\n        dictionary gives the model field names and their target values.\\n\\n        If 'raw_values' is True, the values in the 'insert_values' dictionary\\n        are inserted directly into the query, rather than passed as SQL\\n        parameters. This provides a way to insert NULL and DEFAULT keywords\\n        into the query, for example.\\n        \"", "#NEWLINE#", "(", "placeholders", "values", ")", "=", "(", "[", "]", ",", "[", "]", ")", "for", "field", "val", "insert_values", ":", "#INDENT#", "placeholders", "append", "(", "(", "field", ",", "val", "self", ".", "field", "values", ".", "(", "val", "raw_values", "#INDENT#", "self", "values", "[", "(", "None", ",", "v", ")", "for", "v", "in", "values", "]", ")", "#NEWLINE#", "#UNINDENT#", "else", ":", "#NEWLINE#", "#INDENT#", "self", ".", "params", "+=", "tuple", "(", "values", ")", "#NEWLINE#", "self", ".", "values", ".", "extend", "(", "values", ")"]}}
{"position": {"error_location": 43, "repair_targets": [13, 30], "repair_candidates": [4, 27, 14, 40, 47, 57, 72, 77, 81, 6, 44, 25, 34, 39, 2, 37, 46, 66, 75, 52, 55, 26, 36, 43, 13, 30]}}
{"prediction": {"error_location": 0.5636166334152222, "repair_targets": [0.07978703826665878, 0.8794876933097839], "repair_candidates": [0.0002494407817721367, 0.03548624739050865, 0.00011675487621687353, 0.07978703826665878, 0.0009157294407486916, 0.0004807816294487566, 0.00024406409647781402, 0.0018342696130275726, 0.8794876933097839, 0.00012246206460986286, 1.0636457773216534e-05, 0.00011780342174461111, 0.0003303949488326907, 0.00016968336421996355, 1.9183677068213e-05, 1.576506474521011e-05, 7.091069710440934e-05, 0.0002705570659600198, 7.547151881226455e-07, 0.000232048929319717, 2.993454472743906e-06, 1.3704373486689292e-05, 8.74421402841108e-06, 2.952420800284017e-06, 7.812002877471969e-06, 1.5259324754879344e-06], "target_probs": 0.9592747092247009}}


{"result": {"time": "2021-02-21 06:37:03.528325", "n_pass": [420, 101, 33], "n_token": 82, "loss": [0.6101675629615784, 0.035445936024188995], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def insert_values(", "self", ",", "insert_values", ",", "raw_values", "=", "False", "#INDENT#", "\"\\n        Set up the insert query from the 'insert_values' dictionary. The\\n        dictionary gives the model field names and their target values.\\n\\n        If 'raw_values' is True, the values in the 'insert_values' dictionary\\n        are inserted directly into the query, rather than passed as SQL\\n        parameters. This provides a way to insert NULL and DEFAULT keywords\\n        into the query, for example.\\n        \"", "#NEWLINE#", "(", "placeholders", "values", ")", "=", "(", "[", "]", ",", "[", "]", ")", "for", "field", "val", "insert_values", ":", "#INDENT#", "placeholders", "append", "(", "(", "field", ",", "val", "self", ".", "field", "values", ".", "(", "val", "raw_values", "#INDENT#", "self", "values", "(", "None", ",", "v", ")", "for", "v", "in", "values", "]", ")", "#NEWLINE#", "#UNINDENT#", "else", ":", "#NEWLINE#", "#INDENT#", "self", ".", "params", "+=", "tuple", "(", "values", ")", "#NEWLINE#", "self", ".", "values", ".", "extend", "(", "values", ")"]}}
{"position": {"error_location": 43, "repair_targets": [13, 30], "repair_candidates": [4, 27, 14, 40, 47, 56, 71, 76, 80, 6, 44, 25, 34, 39, 2, 37, 46, 65, 74, 51, 54, 26, 36, 43, 13, 30]}}
{"prediction": {"error_location": 0.543259859085083, "repair_targets": [0.08417245000600815, 0.8810024857521057], "repair_candidates": [0.00022986694239079952, 0.02990499511361122, 0.0002390124136582017, 0.08417245000600815, 0.0007109915022738278, 0.0006236943881958723, 0.00024924875469878316, 0.0016672346973791718, 0.8810024857521057, 8.285554213216528e-05, 7.207718681456754e-06, 0.00013478634355124086, 0.00031019950984045863, 0.00015306175919249654, 2.9511966204154305e-05, 2.427518666081596e-05, 1.4431367389988736e-06, 8.922595043259207e-06, 7.302017479560163e-07, 0.000197048851987347, 1.1505672773637343e-05, 3.223625390091911e-05, 0.00010799054871313274, 9.49870536715025e-06, 7.416244625346735e-05, 1.4564077901013661e-05], "target_probs": 0.9651749134063721}}


{"result": {"time": "2021-02-21 06:37:03.645797", "n_pass": [422, 103, 34], "n_token": 81, "loss": [0.5728898048400879, 0.03103640303015709], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def insert_values(", "self", ",", "insert_values", ",", "raw_values", "=", "False", "#INDENT#", "\"\\n        Set up the insert query from the 'insert_values' dictionary. The\\n        dictionary gives the model field names and their target values.\\n\\n        If 'raw_values' is True, the values in the 'insert_values' dictionary\\n        are inserted directly into the query, rather than passed as SQL\\n        parameters. This provides a way to insert NULL and DEFAULT keywords\\n        into the query, for example.\\n        \"", "#NEWLINE#", "(", "placeholders", "values", ")", "=", "(", "[", "]", ",", "[", "]", ")", "for", "field", "val", "insert_values", ":", "#INDENT#", "placeholders", "append", "(", "(", "field", ",", "val", "self", ".", "field", "values", ".", "(", "val", "raw_values", "#INDENT#", "self", "values", "(", ",", "v", ")", "for", "v", "in", "values", "]", ")", "#NEWLINE#", "#UNINDENT#", "else", ":", "#NEWLINE#", "#INDENT#", "self", ".", "params", "+=", "tuple", "(", "values", ")", "#NEWLINE#", "self", ".", "values", ".", "extend", "(", "values", ")"]}}
{"position": {"error_location": 43, "repair_targets": [13, 30], "repair_candidates": [4, 27, 14, 40, 47, 55, 70, 75, 79, 6, 44, 25, 34, 39, 2, 37, 46, 64, 73, 50, 53, 26, 36, 43, 13, 30]}}
{"prediction": {"error_location": 0.5638935565948486, "repair_targets": [0.07303261756896973, 0.8964076638221741], "repair_candidates": [0.00039722403744235635, 0.025945434346795082, 0.0002117912081303075, 0.07303261756896973, 0.0005427713040262461, 0.0005500155384652317, 0.00024470745120197535, 0.001504574785940349, 0.8964076638221741, 3.930511957150884e-05, 2.894734507208341e-06, 0.00023183201847132295, 0.00027725021936930716, 0.00012227901606820524, 2.270434379170183e-05, 1.85625995072769e-05, 1.1049157819797983e-06, 4.205251570965629e-06, 6.24645508651156e-07, 0.00017792797007132322, 9.320705430582166e-06, 3.751511758309789e-05, 0.0001018024340737611, 1.5326777429436333e-05, 8.757558680372313e-05, 1.294059165957151e-05], "target_probs": 0.9694402813911438}}


{"result": {"time": "2021-02-21 06:37:03.704854", "n_pass": [423, 104, 35], "n_token": 80, "loss": [0.5096778869628906, 0.023303953930735588], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def insert_values(", "self", ",", "insert_values", ",", "raw_values", "=", "False", "#INDENT#", "\"\\n        Set up the insert query from the 'insert_values' dictionary. The\\n        dictionary gives the model field names and their target values.\\n\\n        If 'raw_values' is True, the values in the 'insert_values' dictionary\\n        are inserted directly into the query, rather than passed as SQL\\n        parameters. This provides a way to insert NULL and DEFAULT keywords\\n        into the query, for example.\\n        \"", "#NEWLINE#", "(", "placeholders", "values", ")", "=", "(", "[", "]", ",", "[", "]", ")", "for", "field", "val", "insert_values", ":", "#INDENT#", "placeholders", "append", "(", "(", "field", ",", "val", "self", ".", "field", "values", ".", "(", "val", "raw_values", "#INDENT#", "self", "values", "(", "v", ")", "for", "v", "in", "values", "]", ")", "#NEWLINE#", "#UNINDENT#", "else", ":", "#NEWLINE#", "#INDENT#", "self", ".", "params", "+=", "tuple", "(", "values", ")", "#NEWLINE#", "self", ".", "values", ".", "extend", "(", "values", ")"]}}
{"position": {"error_location": 43, "repair_targets": [13, 30], "repair_candidates": [4, 27, 14, 40, 47, 54, 69, 74, 78, 6, 44, 25, 34, 39, 2, 37, 46, 63, 72, 49, 52, 26, 36, 43, 13, 30]}}
{"prediction": {"error_location": 0.6006889939308167, "repair_targets": [0.06457169353961945, 0.9123938083648682], "repair_candidates": [0.0005027868901379406, 0.018097197636961937, 0.00019983986567240208, 0.06457169353961945, 0.0005267110536806285, 0.0005319621413946152, 0.0002864469133783132, 0.0015545752830803394, 0.9123938083648682, 4.420609911903739e-05, 1.9943890947615728e-06, 0.0002925071748904884, 0.00029142879066057503, 0.0001144359921454452, 2.2704429284203798e-05, 1.7968324755202048e-05, 1.2723035069939215e-06, 6.77215211908333e-07, 1.4586711358788307e-06, 0.00023410307767335325, 8.357560545846354e-06, 4.014560909126885e-05, 0.0001139495216193609, 2.7069923817180097e-05, 0.00010959483915939927, 1.3071759894955903e-05], "target_probs": 0.9769654870033264}}


{"result": {"time": "2021-02-21 06:37:03.764903", "n_pass": [425, 105, 36], "n_token": 79, "loss": [0.5016306638717651, 0.024651411920785904], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def insert_values(", "self", ",", "insert_values", ",", "raw_values", "=", "False", "#INDENT#", "\"\\n        Set up the insert query from the 'insert_values' dictionary. The\\n        dictionary gives the model field names and their target values.\\n\\n        If 'raw_values' is True, the values in the 'insert_values' dictionary\\n        are inserted directly into the query, rather than passed as SQL\\n        parameters. This provides a way to insert NULL and DEFAULT keywords\\n        into the query, for example.\\n        \"", "#NEWLINE#", "(", "placeholders", "values", ")", "=", "(", "[", "]", ",", "[", "]", ")", "for", "field", "val", "insert_values", ":", "#INDENT#", "placeholders", "append", "(", "(", "field", ",", "val", "self", ".", "field", "values", ".", "(", "val", "raw_values", "#INDENT#", "self", "values", "(", "v", "for", "v", "in", "values", "]", ")", "#NEWLINE#", "#UNINDENT#", "else", ":", "#NEWLINE#", "#INDENT#", "self", ".", "params", "+=", "tuple", "(", "values", ")", "#NEWLINE#", "self", ".", "values", ".", "extend", "(", "values", ")"]}}
{"position": {"error_location": 43, "repair_targets": [13, 30], "repair_candidates": [4, 27, 14, 40, 47, 53, 68, 73, 77, 6, 44, 25, 34, 39, 2, 37, 46, 62, 71, 49, 51, 26, 36, 43, 13, 30]}}
{"prediction": {"error_location": 0.6055424213409424, "repair_targets": [0.06950205564498901, 0.9061478972434998], "repair_candidates": [0.0006968190427869558, 0.017847634851932526, 0.0002185994671890512, 0.06950205564498901, 0.0006748570594936609, 0.0006577241001650691, 0.0003973415878135711, 0.0018913408275693655, 0.9061478972434998, 7.624157296959311e-05, 1.1674368352032616e-06, 0.0004439484910108149, 0.0004045697278343141, 0.00015344367420766503, 2.945626874861773e-05, 2.439084528305102e-05, 1.9021215393877355e-06, 1.1280578746664105e-06, 2.6600214368954767e-06, 0.00046869384823367, 9.32317016122397e-06, 5.265881191007793e-05, 0.00011952188651775941, 5.982112998026423e-05, 9.94452420854941e-05, 1.7418906281818636e-05], "target_probs": 0.9756499528884888}}


{"result": {"time": "2021-02-21 06:37:03.824047", "n_pass": [426, 106, 37], "n_token": 78, "loss": [0.41601160168647766, 0.041521187871694565], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def insert_values(", "self", ",", "insert_values", ",", "raw_values", "=", "False", "#INDENT#", "\"\\n        Set up the insert query from the 'insert_values' dictionary. The\\n        dictionary gives the model field names and their target values.\\n\\n        If 'raw_values' is True, the values in the 'insert_values' dictionary\\n        are inserted directly into the query, rather than passed as SQL\\n        parameters. This provides a way to insert NULL and DEFAULT keywords\\n        into the query, for example.\\n        \"", "#NEWLINE#", "(", "placeholders", "values", ")", "=", "(", "[", "]", ",", "[", "]", ")", "for", "field", "val", "insert_values", ":", "#INDENT#", "placeholders", "append", "(", "(", "field", ",", "val", "self", ".", "field", "values", ".", "(", "val", "raw_values", "#INDENT#", "self", "values", "(", "v", "v", "in", "values", "]", ")", "#NEWLINE#", "#UNINDENT#", "else", ":", "#NEWLINE#", "#INDENT#", "self", ".", "params", "+=", "tuple", "(", "values", ")", "#NEWLINE#", "self", ".", "values", ".", "extend", "(", "values", ")"]}}
{"position": {"error_location": 43, "repair_targets": [13, 30], "repair_candidates": [4, 27, 14, 40, 47, 52, 67, 72, 76, 6, 44, 25, 34, 39, 2, 37, 46, 61, 70, 49, 50, 26, 36, 43, 13, 30]}}
{"prediction": {"error_location": 0.6596725583076477, "repair_targets": [0.08712628483772278, 0.8722026944160461], "repair_candidates": [0.0010851806728169322, 0.025367364287376404, 0.00023406886612065136, 0.08712628483772278, 0.0014805004466325045, 0.0006791648920625448, 0.0004838154127355665, 0.0027255122549831867, 0.8722026944160461, 0.00016952698933891952, 5.517954377864953e-06, 0.0006875128019601107, 0.0006419002893380821, 0.00034201936796307564, 5.854350820300169e-05, 3.379905319889076e-05, 5.4133538469613995e-06, 1.4886716598994099e-05, 0.003047311445698142, 0.00311908102594316, 2.5248258680221625e-05, 5.125136158312671e-05, 0.0002420764067210257, 2.9169355912017636e-05, 0.00011080434342147782, 3.138213651254773e-05], "target_probs": 0.9593290090560913}}


{"result": {"time": "2021-02-21 06:37:03.885704", "n_pass": [428, 107, 38], "n_token": 77, "loss": [0.5848023891448975, 0.04766564443707466], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def insert_values(", "self", ",", "insert_values", ",", "raw_values", "=", "False", "#INDENT#", "\"\\n        Set up the insert query from the 'insert_values' dictionary. The\\n        dictionary gives the model field names and their target values.\\n\\n        If 'raw_values' is True, the values in the 'insert_values' dictionary\\n        are inserted directly into the query, rather than passed as SQL\\n        parameters. This provides a way to insert NULL and DEFAULT keywords\\n        into the query, for example.\\n        \"", "#NEWLINE#", "(", "placeholders", "values", ")", "=", "(", "[", "]", ",", "[", "]", ")", "for", "field", "val", "insert_values", ":", "#INDENT#", "placeholders", "append", "(", "(", "field", ",", "val", "self", ".", "field", "values", ".", "(", "val", "raw_values", "#INDENT#", "self", "values", "(", "v", "v", "values", "]", ")", "#NEWLINE#", "#UNINDENT#", "else", ":", "#NEWLINE#", "#INDENT#", "self", ".", "params", "+=", "tuple", "(", "values", ")", "#NEWLINE#", "self", ".", "values", ".", "extend", "(", "values", ")"]}}
{"position": {"error_location": 43, "repair_targets": [13, 30], "repair_candidates": [4, 27, 14, 40, 47, 51, 66, 71, 75, 6, 44, 25, 34, 39, 2, 37, 46, 60, 69, 49, 50, 26, 36, 43, 13, 30]}}
{"prediction": {"error_location": 0.5572159886360168, "repair_targets": [0.11410727351903915, 0.8393452763557434], "repair_candidates": [0.0010062060318887234, 0.0312858521938324, 0.0002744259836617857, 0.11410727351903915, 0.00285454373806715, 0.0011035430943593383, 0.0007507731788791716, 0.0038707649800926447, 0.8393452763557434, 0.0005445576389320195, 1.7949241737369448e-05, 0.0007081249495968223, 0.001007053186185658, 0.0005606531631201506, 0.00010903572547249496, 5.349314960767515e-05, 3.0009155125299003e-06, 8.031601282709744e-06, 0.0007229796028696001, 0.0007502235239371657, 8.953266660682857e-05, 6.0452879552030936e-05, 0.0005472912453114986, 3.8007277908036485e-05, 0.000100461627880577, 8.052619523368776e-05], "target_probs": 0.9534525275230408}}


{"result": {"time": "2021-02-21 06:37:03.945103", "n_pass": [430, 108, 39], "n_token": 76, "loss": [0.9154759645462036, 0.056526146829128265], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def insert_values(", "self", ",", "insert_values", ",", "raw_values", "=", "False", "#INDENT#", "\"\\n        Set up the insert query from the 'insert_values' dictionary. The\\n        dictionary gives the model field names and their target values.\\n\\n        If 'raw_values' is True, the values in the 'insert_values' dictionary\\n        are inserted directly into the query, rather than passed as SQL\\n        parameters. This provides a way to insert NULL and DEFAULT keywords\\n        into the query, for example.\\n        \"", "#NEWLINE#", "(", "placeholders", "values", ")", "=", "(", "[", "]", ",", "[", "]", ")", "for", "field", "val", "insert_values", ":", "#INDENT#", "placeholders", "append", "(", "(", "field", ",", "val", "self", ".", "field", "values", ".", "(", "val", "raw_values", "#INDENT#", "self", "values", "(", "v", "v", "values", ")", "#NEWLINE#", "#UNINDENT#", "else", ":", "#NEWLINE#", "#INDENT#", "self", ".", "params", "+=", "tuple", "(", "values", ")", "#NEWLINE#", "self", ".", "values", ".", "extend", "(", "values", ")"]}}
{"position": {"error_location": 43, "repair_targets": [13, 30], "repair_candidates": [4, 27, 14, 40, 47, 51, 65, 70, 74, 6, 44, 25, 34, 39, 2, 37, 46, 59, 68, 49, 50, 26, 36, 43, 13, 30]}}
{"prediction": {"error_location": 0.40032604336738586, "repair_targets": [0.11673492193222046, 0.8283068537712097], "repair_candidates": [0.0012716337805613875, 0.03257503733038902, 0.0005606204504147172, 0.11673492193222046, 0.003532115835696459, 0.0014552598586305976, 0.0011186434421688318, 0.0041349055245518684, 0.8283068537712097, 0.000987185281701386, 6.689930887660012e-05, 0.0007288241176865995, 0.0011531381169334054, 0.001060229609720409, 0.00026672868989408016, 0.00011337082833051682, 5.04745867146994e-06, 6.464207672252087e-06, 0.0013589132577180862, 0.001188433961942792, 0.0002595331461634487, 8.536599489161745e-05, 0.0024112435057759285, 8.183709724107757e-05, 0.00021523320174310356, 0.00032170061604119837], "target_probs": 0.9450417757034302}}


{"result": {"time": "2021-02-21 06:37:04.004154", "n_pass": [431, 109, 40], "n_token": 75, "loss": [0.9267144203186035, 0.041275300085544586], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def insert_values(", "self", ",", "insert_values", ",", "raw_values", "=", "False", "#INDENT#", "\"\\n        Set up the insert query from the 'insert_values' dictionary. The\\n        dictionary gives the model field names and their target values.\\n\\n        If 'raw_values' is True, the values in the 'insert_values' dictionary\\n        are inserted directly into the query, rather than passed as SQL\\n        parameters. This provides a way to insert NULL and DEFAULT keywords\\n        into the query, for example.\\n        \"", "#NEWLINE#", "(", "placeholders", "values", ")", "=", "(", "[", "]", ",", "[", "]", ")", "for", "field", "val", "insert_values", ":", "#INDENT#", "placeholders", "append", "(", "(", "field", ",", "val", "self", ".", "field", "values", ".", "(", "val", "raw_values", "#INDENT#", "self", "values", "(", "v", "v", "values", "#NEWLINE#", "#UNINDENT#", "else", ":", "#NEWLINE#", "#INDENT#", "self", ".", "params", "+=", "tuple", "(", "values", ")", "#NEWLINE#", "self", ".", "values", ".", "extend", "(", "values", ")"]}}
{"position": {"error_location": 43, "repair_targets": [13, 30], "repair_candidates": [4, 27, 14, 40, 47, 51, 64, 69, 73, 6, 44, 25, 34, 39, 2, 37, 46, 58, 67, 49, 50, 26, 36, 43, 13, 30]}}
{"prediction": {"error_location": 0.39585214853286743, "repair_targets": [0.11939698457717896, 0.8401679396629333], "repair_candidates": [0.0007657661917619407, 0.023350464180111885, 0.0006644566892646253, 0.11939698457717896, 0.002622005296871066, 0.0012354232603684068, 0.0009472607634961605, 0.0036263144575059414, 0.8401679396629333, 0.0006282591493800282, 4.755503323394805e-05, 0.00045149901416152716, 0.001109601929783821, 0.0007818535668775439, 0.00022248065215535462, 9.33754417928867e-05, 7.89007572166156e-06, 5.774049895990174e-06, 0.0008075801888480783, 0.0009735194034874439, 3.036908310605213e-05, 6.730906170560047e-05, 0.0015169258695095778, 5.6480432249372825e-05, 0.0001958154607564211, 0.00022707106836605817], "target_probs": 0.9595649242401123}}


{"result": {"time": "2021-02-21 06:37:04.063569", "n_pass": [432, 110, 41], "n_token": 74, "loss": [0.8254438638687134, 0.040300365537405014], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def insert_values(", "self", ",", "insert_values", ",", "raw_values", "=", "False", "#INDENT#", "\"\\n        Set up the insert query from the 'insert_values' dictionary. The\\n        dictionary gives the model field names and their target values.\\n\\n        If 'raw_values' is True, the values in the 'insert_values' dictionary\\n        are inserted directly into the query, rather than passed as SQL\\n        parameters. This provides a way to insert NULL and DEFAULT keywords\\n        into the query, for example.\\n        \"", "#NEWLINE#", "(", "placeholders", "values", ")", "=", "(", "[", "]", ",", "[", "]", ")", "for", "field", "val", "insert_values", ":", "#INDENT#", "placeholders", "append", "(", "(", "field", ",", "val", "self", ".", "field", "values", ".", "(", "val", "raw_values", "#INDENT#", "self", "values", "(", "v", "v", "values", "#UNINDENT#", "else", ":", "#NEWLINE#", "#INDENT#", "self", ".", "params", "+=", "tuple", "(", "values", ")", "#NEWLINE#", "self", ".", "values", ".", "extend", "(", "values", ")"]}}
{"position": {"error_location": 43, "repair_targets": [13, 30], "repair_candidates": [4, 27, 14, 40, 47, 51, 63, 68, 72, 6, 44, 25, 34, 39, 2, 37, 46, 57, 66, 49, 50, 26, 36, 43, 13, 30]}}
{"prediction": {"error_location": 0.43804049491882324, "repair_targets": [0.11290441453456879, 0.8475964665412903], "repair_candidates": [0.0007122375536710024, 0.022884689271450043, 0.000666577136144042, 0.11290441453456879, 0.0022541198413819075, 0.0012843710137531161, 0.0008757183677516878, 0.0036213910207152367, 0.8475964665412903, 0.0007977175991982222, 4.962668754160404e-05, 0.0003143411304336041, 0.0011394452303647995, 0.0007329111685976386, 0.00023718098236713558, 0.00010414196003694087, 7.561311576864682e-06, 1.2851446626882534e-05, 0.0009696368942968547, 0.0013559239450842142, 6.650297291344032e-05, 8.363932283828035e-05, 0.0008463936974294484, 5.115539170219563e-05, 0.00021988876687828451, 0.0002110978530254215], "target_probs": 0.9605008959770203}}


{"result": {"time": "2021-02-21 06:37:04.123295", "n_pass": [433, 111, 42], "n_token": 73, "loss": [0.5709831118583679, 0.0396052710711956], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def insert_values(", "self", ",", "insert_values", ",", "raw_values", "=", "False", "#INDENT#", "\"\\n        Set up the insert query from the 'insert_values' dictionary. The\\n        dictionary gives the model field names and their target values.\\n\\n        If 'raw_values' is True, the values in the 'insert_values' dictionary\\n        are inserted directly into the query, rather than passed as SQL\\n        parameters. This provides a way to insert NULL and DEFAULT keywords\\n        into the query, for example.\\n        \"", "#NEWLINE#", "(", "placeholders", "values", ")", "=", "(", "[", "]", ",", "[", "]", ")", "for", "field", "val", "insert_values", ":", "#INDENT#", "placeholders", "append", "(", "(", "field", ",", "val", "self", ".", "field", "values", ".", "(", "val", "raw_values", "#INDENT#", "self", "values", "(", "v", "v", "values", "else", ":", "#NEWLINE#", "#INDENT#", "self", ".", "params", "+=", "tuple", "(", "values", ")", "#NEWLINE#", "self", ".", "values", ".", "extend", "(", "values", ")"]}}
{"position": {"error_location": 43, "repair_targets": [13, 30], "repair_candidates": [4, 27, 14, 40, 47, 51, 62, 67, 71, 6, 44, 25, 34, 39, 2, 37, 46, 56, 65, 49, 50, 26, 36, 43, 13, 30]}}
{"prediction": {"error_location": 0.5649697780609131, "repair_targets": [0.1073230430483818, 0.8538457155227661], "repair_candidates": [0.0006852377555333078, 0.02519797906279564, 0.0003977792803198099, 0.1073230430483818, 0.0018389507895335555, 0.0008596775005571544, 0.000565891619771719, 0.0028882964979857206, 0.8538457155227661, 0.00042316477629356086, 1.603092641744297e-05, 0.00042868024320341647, 0.000861690437886864, 0.0004767300852108747, 9.205966489389539e-05, 4.316864942666143e-05, 1.1076069313276093e-05, 4.6862794988555834e-05, 0.0017495764186605811, 0.0014347292017191648, 0.00017803088121581823, 8.085142326308414e-05, 0.00023255527776200324, 2.2649201127933338e-05, 0.0002289371914230287, 7.060336793074384e-05], "target_probs": 0.9611687660217285}}


{"result": {"time": "2021-02-21 06:37:04.182769", "n_pass": [434, 112, 43], "n_token": 72, "loss": [0.611111044883728, 0.03961171954870224], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def insert_values(", "self", ",", "insert_values", ",", "raw_values", "=", "False", "#INDENT#", "\"\\n        Set up the insert query from the 'insert_values' dictionary. The\\n        dictionary gives the model field names and their target values.\\n\\n        If 'raw_values' is True, the values in the 'insert_values' dictionary\\n        are inserted directly into the query, rather than passed as SQL\\n        parameters. This provides a way to insert NULL and DEFAULT keywords\\n        into the query, for example.\\n        \"", "#NEWLINE#", "(", "placeholders", "values", ")", "=", "(", "[", "]", ",", "[", "]", ")", "for", "field", "val", "insert_values", ":", "#INDENT#", "placeholders", "append", "(", "(", "field", ",", "val", "self", ".", "field", "values", ".", "(", "val", "raw_values", "#INDENT#", "self", "values", "(", "v", "v", "values", ":", "#NEWLINE#", "#INDENT#", "self", ".", "params", "+=", "tuple", "(", "values", ")", "#NEWLINE#", "self", ".", "values", ".", "extend", "(", "values", ")"]}}
{"position": {"error_location": 43, "repair_targets": [13, 30], "repair_candidates": [4, 27, 14, 40, 47, 51, 61, 66, 70, 6, 44, 25, 34, 39, 2, 37, 46, 55, 64, 49, 50, 26, 36, 43, 13, 30]}}
{"prediction": {"error_location": 0.5427474975585938, "repair_targets": [0.09817397594451904, 0.8629885911941528], "repair_candidates": [0.0010968894930556417, 0.02463969588279724, 0.0004290821962058544, 0.09817397594451904, 0.0017003044486045837, 0.0007125360425561666, 0.0005001095705665648, 0.003021641867235303, 0.8629885911941528, 0.00020326711819507182, 7.277268196048681e-06, 0.0007092345040291548, 0.0008878714870661497, 0.0004670912167057395, 9.178704931400716e-05, 3.6355264455778524e-05, 2.1921969164395705e-05, 4.53717220807448e-05, 0.0017427002312615514, 0.0016593612963333726, 0.00010853832645807415, 0.00010504046076675877, 0.0001778517325874418, 3.37235105689615e-05, 0.00036588640068657696, 7.385107892332599e-05], "target_probs": 0.9611625671386719}}


{"result": {"time": "2021-02-21 06:37:04.244349", "n_pass": [435, 113, 44], "n_token": 71, "loss": [0.8628060817718506, 0.039878908544778824], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def insert_values(", "self", ",", "insert_values", ",", "raw_values", "=", "False", "#INDENT#", "\"\\n        Set up the insert query from the 'insert_values' dictionary. The\\n        dictionary gives the model field names and their target values.\\n\\n        If 'raw_values' is True, the values in the 'insert_values' dictionary\\n        are inserted directly into the query, rather than passed as SQL\\n        parameters. This provides a way to insert NULL and DEFAULT keywords\\n        into the query, for example.\\n        \"", "#NEWLINE#", "(", "placeholders", "values", ")", "=", "(", "[", "]", ",", "[", "]", ")", "for", "field", "val", "insert_values", ":", "#INDENT#", "placeholders", "append", "(", "(", "field", ",", "val", "self", ".", "field", "values", ".", "(", "val", "raw_values", "#INDENT#", "self", "values", "(", "v", "v", "values", "#NEWLINE#", "#INDENT#", "self", ".", "params", "+=", "tuple", "(", "values", ")", "#NEWLINE#", "self", ".", "values", ".", "extend", "(", "values", ")"]}}
{"position": {"error_location": 43, "repair_targets": [13, 30], "repair_candidates": [4, 27, 14, 40, 47, 51, 60, 65, 69, 6, 44, 25, 34, 39, 2, 37, 46, 54, 63, 49, 50, 26, 36, 43, 13, 30]}}
{"prediction": {"error_location": 0.4219762682914734, "repair_targets": [0.09256445616483688, 0.868341326713562], "repair_candidates": [0.001335943816229701, 0.024369610473513603, 0.000602046784479171, 0.09256445616483688, 0.0015261912485584617, 0.0008672645781189203, 0.0007193232886493206, 0.003668569726869464, 0.868341326713562, 0.000249420729232952, 1.5087925930856727e-05, 0.0008809518185444176, 0.0010854591382667422, 0.000607128778938204, 0.0001569511805428192, 6.30447975709103e-05, 2.3250793674378656e-05, 2.8652557375608012e-05, 0.000929072150029242, 0.001062543480657041, 6.054384357412346e-05, 0.00013730239879805595, 0.00021887486218474805, 5.4847445426275954e-05, 0.00027268604026176035, 0.0001594986824784428], "target_probs": 0.9609057903289795}}


{"result": {"time": "2021-02-21 06:37:04.303616", "n_pass": [436, 114, 45], "n_token": 70, "loss": [0.9001897573471069, 0.035652220249176025], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def insert_values(", "self", ",", "insert_values", ",", "raw_values", "=", "False", "#INDENT#", "\"\\n        Set up the insert query from the 'insert_values' dictionary. The\\n        dictionary gives the model field names and their target values.\\n\\n        If 'raw_values' is True, the values in the 'insert_values' dictionary\\n        are inserted directly into the query, rather than passed as SQL\\n        parameters. This provides a way to insert NULL and DEFAULT keywords\\n        into the query, for example.\\n        \"", "#NEWLINE#", "(", "placeholders", "values", ")", "=", "(", "[", "]", ",", "[", "]", ")", "for", "field", "val", "insert_values", ":", "#INDENT#", "placeholders", "append", "(", "(", "field", ",", "val", "self", ".", "field", "values", ".", "(", "val", "raw_values", "#INDENT#", "self", "values", "(", "v", "v", "values", "#INDENT#", "self", ".", "params", "+=", "tuple", "(", "values", ")", "#NEWLINE#", "self", ".", "values", ".", "extend", "(", "values", ")"]}}
{"position": {"error_location": 43, "repair_targets": [13, 30], "repair_candidates": [4, 27, 14, 40, 47, 51, 59, 64, 68, 6, 44, 25, 34, 39, 2, 37, 46, 53, 62, 49, 50, 26, 36, 43, 13, 30]}}
{"prediction": {"error_location": 0.4064925014972687, "repair_targets": [0.07836800813674927, 0.886607825756073], "repair_candidates": [0.0008696494624018669, 0.022623799741268158, 0.0006146531668491662, 0.07836800813674927, 0.0011885525891557336, 0.0006953527918085456, 0.0005133085651323199, 0.003277256153523922, 0.886607825756073, 0.0002080304839182645, 1.5975514543242753e-05, 0.0006377858808264136, 0.0008530160412192345, 0.0004053292504977435, 0.00011109549086540937, 6.026629853295162e-05, 1.7730191757436842e-05, 5.0122391257900745e-05, 0.0009556424338370562, 0.0012256785994395614, 7.681933493586257e-05, 0.00012757244985550642, 7.802773325238377e-05, 3.355428634677082e-05, 0.00029053454636596143, 9.446084004594013e-05], "target_probs": 0.9649758338928223}}


{"result": {"time": "2021-02-21 06:37:04.362368", "n_pass": [437, 115, 46], "n_token": 69, "loss": [0.6696645021438599, 0.033783137798309326], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def insert_values(", "self", ",", "insert_values", ",", "raw_values", "=", "False", "#INDENT#", "\"\\n        Set up the insert query from the 'insert_values' dictionary. The\\n        dictionary gives the model field names and their target values.\\n\\n        If 'raw_values' is True, the values in the 'insert_values' dictionary\\n        are inserted directly into the query, rather than passed as SQL\\n        parameters. This provides a way to insert NULL and DEFAULT keywords\\n        into the query, for example.\\n        \"", "#NEWLINE#", "(", "placeholders", "values", ")", "=", "(", "[", "]", ",", "[", "]", ")", "for", "field", "val", "insert_values", ":", "#INDENT#", "placeholders", "append", "(", "(", "field", ",", "val", "self", ".", "field", "values", ".", "(", "val", "raw_values", "#INDENT#", "self", "values", "(", "v", "v", "values", "self", ".", "params", "+=", "tuple", "(", "values", ")", "#NEWLINE#", "self", ".", "values", ".", "extend", "(", "values", ")"]}}
{"position": {"error_location": 43, "repair_targets": [13, 30], "repair_candidates": [4, 27, 14, 40, 47, 51, 58, 63, 67, 6, 44, 25, 34, 39, 2, 37, 46, 52, 61, 49, 50, 26, 36, 43, 13, 30]}}
{"prediction": {"error_location": 0.5118802785873413, "repair_targets": [0.08643288165330887, 0.880348265171051], "repair_candidates": [0.002214428037405014, 0.015083651058375835, 0.0003238491481170058, 0.08643288165330887, 0.0012967612128704786, 0.0009002647129818797, 0.00043613885645754635, 0.002956960815936327, 0.880348265171051, 0.0002006727590924129, 0.0002053784701274708, 0.0016242547426372766, 0.0014864145778119564, 0.0006791828200221062, 7.512413867516443e-05, 2.0134089936618693e-05, 7.973651372594759e-05, 0.00011825012188637629, 0.001991025870665908, 0.0025276108644902706, 3.772896161535755e-05, 0.0005775787867605686, 2.8022468541166745e-05, 0.0002816015330608934, 4.5058004616294056e-05, 2.9083341360092163e-05], "target_probs": 0.9667811393737793}}


{"result": {"time": "2021-02-21 06:37:04.479842", "n_pass": [440, 117, 47], "n_token": 68, "loss": [0.552614688873291, 0.02676854282617569], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def insert_values(", "self", ",", "insert_values", ",", "raw_values", "=", "False", "#INDENT#", "\"\\n        Set up the insert query from the 'insert_values' dictionary. The\\n        dictionary gives the model field names and their target values.\\n\\n        If 'raw_values' is True, the values in the 'insert_values' dictionary\\n        are inserted directly into the query, rather than passed as SQL\\n        parameters. This provides a way to insert NULL and DEFAULT keywords\\n        into the query, for example.\\n        \"", "#NEWLINE#", "(", "placeholders", "values", ")", "=", "(", "[", "]", ",", "[", "]", ")", "for", "field", "val", "insert_values", ":", "#INDENT#", "placeholders", "append", "(", "(", "field", ",", "val", "self", ".", "field", "values", ".", "(", "val", "raw_values", "#INDENT#", "self", "values", "(", "v", "v", "values", "self", ".", "+=", "tuple", "(", "values", ")", "#NEWLINE#", "self", ".", "values", ".", "extend", "(", "values", ")"]}}
{"position": {"error_location": 43, "repair_targets": [13, 30], "repair_candidates": [4, 27, 14, 40, 47, 51, 57, 62, 66, 6, 44, 25, 34, 39, 2, 37, 46, 52, 60, 49, 50, 26, 36, 43, 13, 30]}}
{"prediction": {"error_location": 0.5754432678222656, "repair_targets": [0.07567557692527771, 0.8979109525680542], "repair_candidates": [0.0015691244043409824, 0.011773384176194668, 0.00022186808928381652, 0.07567557692527771, 0.0010463802609592676, 0.0007132988539524376, 0.0003553242131602019, 0.0024789145682007074, 0.8979109525680542, 0.00017692609981168061, 0.0001653755025472492, 0.001108472584746778, 0.0013333569513633847, 0.0005465837894007564, 5.337324910215102e-05, 1.6032985513447784e-05, 5.093969957670197e-05, 0.00010043261136161163, 0.001703767222352326, 0.002332113916054368, 3.925443525076844e-05, 0.0004032457072753459, 2.868354567908682e-05, 0.0001257022813661024, 3.980527617386542e-05, 3.1189698347589e-05], "target_probs": 0.9735865592956543}}


{"result": {"time": "2021-02-21 06:37:04.539018", "n_pass": [441, 118, 48], "n_token": 67, "loss": [0.463863730430603, 0.01932651922106743], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def insert_values(", "self", ",", "insert_values", ",", "raw_values", "=", "False", "#INDENT#", "\"\\n        Set up the insert query from the 'insert_values' dictionary. The\\n        dictionary gives the model field names and their target values.\\n\\n        If 'raw_values' is True, the values in the 'insert_values' dictionary\\n        are inserted directly into the query, rather than passed as SQL\\n        parameters. This provides a way to insert NULL and DEFAULT keywords\\n        into the query, for example.\\n        \"", "#NEWLINE#", "(", "placeholders", "values", ")", "=", "(", "[", "]", ",", "[", "]", ")", "for", "field", "val", "insert_values", ":", "#INDENT#", "placeholders", "append", "(", "(", "field", ",", "val", "self", ".", "field", "values", ".", "(", "val", "raw_values", "#INDENT#", "self", "values", "(", "v", "v", "values", "self", ".", "tuple", "(", "values", ")", "#NEWLINE#", "self", ".", "values", ".", "extend", "(", "values", ")"]}}
{"position": {"error_location": 43, "repair_targets": [13, 30], "repair_candidates": [4, 27, 14, 40, 47, 51, 56, 61, 65, 6, 44, 25, 34, 39, 2, 37, 46, 52, 59, 49, 50, 26, 36, 43, 13, 30]}}
{"prediction": {"error_location": 0.6288492679595947, "repair_targets": [0.07020370662212372, 0.9106553196907043], "repair_candidates": [0.0003156751627102494, 0.010206653736531734, 0.00014867717982269824, 0.07020370662212372, 0.001005717203952372, 0.000496808672323823, 0.00028667980222962797, 0.001825210521928966, 0.9106553196907043, 0.00010750810179160908, 3.2597621611785144e-05, 0.00016225995204877108, 0.0010125485714524984, 0.00045541682629846036, 3.944312265957706e-05, 1.290566706302343e-05, 2.0006731574540026e-05, 0.00010696516983443871, 0.0012722595129162073, 0.001182983978651464, 0.00019657719531096518, 0.00010163434490095824, 4.14546302636154e-05, 1.9776396584347822e-05, 5.891772889299318e-05, 3.231687151128426e-05], "target_probs": 0.9808590412139893}}


{"result": {"time": "2021-02-21 06:37:04.600949", "n_pass": [442, 119, 49], "n_token": 66, "loss": [0.4684036374092102, 0.020095344632864], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def insert_values(", "self", ",", "insert_values", ",", "raw_values", "=", "False", "#INDENT#", "\"\\n        Set up the insert query from the 'insert_values' dictionary. The\\n        dictionary gives the model field names and their target values.\\n\\n        If 'raw_values' is True, the values in the 'insert_values' dictionary\\n        are inserted directly into the query, rather than passed as SQL\\n        parameters. This provides a way to insert NULL and DEFAULT keywords\\n        into the query, for example.\\n        \"", "#NEWLINE#", "(", "placeholders", "values", ")", "=", "(", "[", "]", ",", "[", "]", ")", "for", "field", "val", "insert_values", ":", "#INDENT#", "placeholders", "append", "(", "(", "field", ",", "val", "self", ".", "field", "values", ".", "(", "val", "raw_values", "#INDENT#", "self", "values", "(", "v", "v", "values", "self", ".", "(", "values", ")", "#NEWLINE#", "self", ".", "values", ".", "extend", "(", "values", ")"]}}
{"position": {"error_location": 43, "repair_targets": [13, 30], "repair_candidates": [4, 27, 14, 40, 47, 51, 55, 60, 64, 6, 44, 25, 34, 39, 2, 37, 46, 52, 58, 49, 50, 26, 36, 43, 13, 30]}}
{"prediction": {"error_location": 0.6260008215904236, "repair_targets": [0.07201343029737473, 0.9080917835235596], "repair_candidates": [0.00033390248427167535, 0.009568484500050545, 0.00015894806711003184, 0.07201343029737473, 0.0012033454841002822, 0.0004731124499812722, 0.0002948598994407803, 0.0017699594609439373, 0.9080917835235596, 0.00014981342246755958, 3.44637555826921e-05, 0.00017543532885611057, 0.0010361322201788425, 0.0005367220146581531, 4.7963272663764656e-05, 1.670930032560136e-05, 1.9722832803381607e-05, 0.00017874097102321684, 0.0016456154407933354, 0.0015087269712239504, 0.0002282594214193523, 0.00027650804258883, 7.967191049829125e-05, 1.8488490240997635e-05, 9.359450632473454e-05, 4.561379682854749e-05], "target_probs": 0.9801052212715149}}


{"result": {"time": "2021-02-21 06:37:04.659983", "n_pass": [443, 120, 50], "n_token": 65, "loss": [0.3902849555015564, 0.019557401537895203], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def insert_values(", "self", ",", "insert_values", ",", "raw_values", "=", "False", "#INDENT#", "\"\\n        Set up the insert query from the 'insert_values' dictionary. The\\n        dictionary gives the model field names and their target values.\\n\\n        If 'raw_values' is True, the values in the 'insert_values' dictionary\\n        are inserted directly into the query, rather than passed as SQL\\n        parameters. This provides a way to insert NULL and DEFAULT keywords\\n        into the query, for example.\\n        \"", "#NEWLINE#", "(", "placeholders", "values", ")", "=", "(", "[", "]", ",", "[", "]", ")", "for", "field", "val", "insert_values", ":", "#INDENT#", "placeholders", "append", "(", "(", "field", ",", "val", "self", ".", "field", "values", ".", "(", "val", "raw_values", "#INDENT#", "self", "values", "(", "v", "v", "values", "self", ".", "values", ")", "#NEWLINE#", "self", ".", "values", ".", "extend", "(", "values", ")"]}}
{"position": {"error_location": 43, "repair_targets": [13, 30], "repair_candidates": [4, 27, 14, 40, 47, 51, 54, 59, 63, 6, 44, 25, 34, 39, 2, 37, 46, 52, 57, 49, 50, 26, 36, 43, 13, 30]}}
{"prediction": {"error_location": 0.6768640279769897, "repair_targets": [0.06622859090566635, 0.914404034614563], "repair_candidates": [0.0011995810782536864, 0.007371899206191301, 0.00011560823622858152, 0.06622859090566635, 0.001427744864486158, 0.0005541175487451255, 0.0003023335593752563, 0.002054617740213871, 0.914404034614563, 0.0001390394172631204, 0.00019758376583922654, 0.0008316307212226093, 0.0011064504506066442, 0.000733167165890336, 3.709399243234657e-05, 9.643161320127547e-06, 2.8056043447577395e-05, 9.37532022362575e-05, 0.0010585126001387835, 0.0009687415440566838, 3.539105091476813e-05, 0.00033964848262257874, 0.0002476363442838192, 0.00018234951130580157, 0.00029156796517781913, 4.1308041545562446e-05], "target_probs": 0.9806326031684875}}


{"result": {"time": "2021-02-21 06:37:04.719342", "n_pass": [445, 121, 51], "n_token": 64, "loss": [0.48547443747520447, 0.02276257425546646], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def insert_values(", "self", ",", "insert_values", ",", "raw_values", "=", "False", "#INDENT#", "\"\\n        Set up the insert query from the 'insert_values' dictionary. The\\n        dictionary gives the model field names and their target values.\\n\\n        If 'raw_values' is True, the values in the 'insert_values' dictionary\\n        are inserted directly into the query, rather than passed as SQL\\n        parameters. This provides a way to insert NULL and DEFAULT keywords\\n        into the query, for example.\\n        \"", "#NEWLINE#", "(", "placeholders", "values", ")", "=", "(", "[", "]", ",", "[", "]", ")", "for", "field", "val", "insert_values", ":", "#INDENT#", "placeholders", "append", "(", "(", "field", ",", "val", "self", ".", "field", "values", ".", "(", "val", "raw_values", "#INDENT#", "self", "values", "(", "v", "v", "values", "self", ".", "values", "#NEWLINE#", "self", ".", "values", ".", "extend", "(", "values", ")"]}}
{"position": {"error_location": 43, "repair_targets": [13, 30], "repair_candidates": [4, 27, 14, 40, 47, 51, 54, 58, 62, 6, 44, 25, 34, 39, 2, 37, 46, 52, 56, 49, 50, 26, 36, 43, 13, 30]}}
{"prediction": {"error_location": 0.615405261516571, "repair_targets": [0.06784103810787201, 0.9096534848213196], "repair_candidates": [0.0010281284339725971, 0.00930512323975563, 0.00016669131582602859, 0.06784103810787201, 0.0016744742169976234, 0.00042954683885909617, 0.0003595906891860068, 0.002357323421165347, 0.9096534848213196, 0.0002298184554092586, 0.00018274264584761113, 0.0007070894935168326, 0.001300036208704114, 0.0007772716344334185, 4.883914880338125e-05, 1.3886460692447145e-05, 2.6662321033654734e-05, 9.730245074024424e-05, 0.001384513801895082, 0.000874401826877147, 2.6133660867344588e-05, 0.00040347440517507493, 0.00036933409865014255, 0.00019044807413592935, 0.0004955962067469954, 5.701783811673522e-05], "target_probs": 0.9774945378303528}}


{"result": {"time": "2021-02-21 06:37:04.778835", "n_pass": [446, 122, 52], "n_token": 63, "loss": [0.5469992756843567, 0.04356566444039345], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def insert_values(", "self", ",", "insert_values", ",", "raw_values", "=", "False", "#INDENT#", "\"\\n        Set up the insert query from the 'insert_values' dictionary. The\\n        dictionary gives the model field names and their target values.\\n\\n        If 'raw_values' is True, the values in the 'insert_values' dictionary\\n        are inserted directly into the query, rather than passed as SQL\\n        parameters. This provides a way to insert NULL and DEFAULT keywords\\n        into the query, for example.\\n        \"", "#NEWLINE#", "(", "placeholders", "values", ")", "=", "(", "[", "]", ",", "[", "]", ")", "for", "field", "val", "insert_values", ":", "#INDENT#", "placeholders", "append", "(", "(", "field", ",", "val", "self", ".", "field", "values", ".", "(", "val", "raw_values", "#INDENT#", "self", "values", "(", "v", "v", "values", "self", ".", "values", "self", ".", "values", ".", "extend", "(", "values", ")"]}}
{"position": {"error_location": 43, "repair_targets": [13, 30], "repair_candidates": [4, 27, 14, 40, 47, 51, 54, 57, 61, 6, 44, 25, 34, 39, 2, 37, 46, 52, 55, 49, 50, 26, 36, 43, 13, 30]}}
{"prediction": {"error_location": 0.5786837935447693, "repair_targets": [0.0836929976940155, 0.8736766576766968], "repair_candidates": [0.0033340344671159983, 0.015841299667954445, 0.00024260046484414488, 0.0836929976940155, 0.0027615546714514494, 0.0006572334677912295, 0.0005057565867900848, 0.004717376548796892, 0.8736766576766968, 0.00028303853468969464, 0.00025693525094538927, 0.0035499362275004387, 0.001944897579960525, 0.001325754215940833, 4.7265984903788194e-05, 1.741193227644544e-05, 7.334479596465826e-05, 9.164175571640953e-05, 0.0014689512318000197, 0.0019432976841926575, 5.018078081775457e-05, 0.001152887474745512, 0.00042020983528345823, 0.0014113979414105415, 0.0004514143511187285, 8.200530282920226e-05], "target_probs": 0.9573696851730347}}


{"result": {"time": "2021-02-21 06:37:04.838295", "n_pass": [448, 123, 53], "n_token": 62, "loss": [0.6125790476799011, 0.045274510979652405], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def insert_values(", "self", ",", "insert_values", ",", "raw_values", "=", "False", "#INDENT#", "\"\\n        Set up the insert query from the 'insert_values' dictionary. The\\n        dictionary gives the model field names and their target values.\\n\\n        If 'raw_values' is True, the values in the 'insert_values' dictionary\\n        are inserted directly into the query, rather than passed as SQL\\n        parameters. This provides a way to insert NULL and DEFAULT keywords\\n        into the query, for example.\\n        \"", "#NEWLINE#", "(", "placeholders", "values", ")", "=", "(", "[", "]", ",", "[", "]", ")", "for", "field", "val", "insert_values", ":", "#INDENT#", "placeholders", "append", "(", "(", "field", ",", "val", "self", ".", "field", "values", ".", "(", "val", "raw_values", "#INDENT#", "self", "values", "(", "v", "v", "values", "self", ".", "values", "self", "values", ".", "extend", "(", "values", ")"]}}
{"position": {"error_location": 43, "repair_targets": [13, 30], "repair_candidates": [4, 27, 14, 40, 47, 51, 54, 56, 60, 6, 44, 25, 34, 39, 2, 37, 46, 52, 55, 49, 50, 26, 36, 43, 13, 30]}}
{"prediction": {"error_location": 0.5419514179229736, "repair_targets": [0.08173166960477829, 0.8740034103393555], "repair_candidates": [0.0035428055562078953, 0.015450316481292248, 0.0002737663744483143, 0.08173166960477829, 0.0027451752685010433, 0.0005715906154364347, 0.0005202382453717291, 0.004915472120046616, 0.8740034103393555, 0.00037799618439748883, 0.0003019109717570245, 0.004231346771121025, 0.0019944203086197376, 0.0012786543229594827, 5.553469236474484e-05, 1.9012977645616047e-05, 8.378181519219652e-05, 0.00013559270882979035, 0.0019125558901578188, 0.0022181656677275896, 5.209906157688238e-05, 0.001232427079230547, 0.0004847453674301505, 0.0012672902084887028, 0.0004883328219875693, 0.0001115593477152288], "target_probs": 0.9557350873947144}}


{"result": {"time": "2021-02-21 06:37:04.898076", "n_pass": [450, 124, 54], "n_token": 61, "loss": [0.5327621102333069, 0.02139664813876152], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def insert_values(", "self", ",", "insert_values", ",", "raw_values", "=", "False", "#INDENT#", "\"\\n        Set up the insert query from the 'insert_values' dictionary. The\\n        dictionary gives the model field names and their target values.\\n\\n        If 'raw_values' is True, the values in the 'insert_values' dictionary\\n        are inserted directly into the query, rather than passed as SQL\\n        parameters. This provides a way to insert NULL and DEFAULT keywords\\n        into the query, for example.\\n        \"", "#NEWLINE#", "(", "placeholders", "values", ")", "=", "(", "[", "]", ",", "[", "]", ")", "for", "field", "val", "insert_values", ":", "#INDENT#", "placeholders", "append", "(", "(", "field", ",", "val", "self", ".", "field", "values", ".", "(", "val", "raw_values", "#INDENT#", "self", "values", "(", "v", "v", "values", "self", ".", "values", "self", "values", "extend", "(", "values", ")"]}}
{"position": {"error_location": 43, "repair_targets": [13, 30], "repair_candidates": [4, 27, 14, 40, 47, 51, 54, 56, 59, 6, 44, 25, 34, 39, 2, 37, 46, 52, 55, 49, 50, 26, 36, 43, 13, 30]}}
{"prediction": {"error_location": 0.5869814157485962, "repair_targets": [0.08456815034151077, 0.8942624926567078], "repair_candidates": [0.003531034104526043, 0.002478815848007798, 0.00016365543706342578, 0.08456815034151077, 0.0017512408085167408, 0.0009653475717641413, 0.00039617635775357485, 0.001093155238777399, 0.8942624926567078, 0.0001607323792995885, 0.0002189985098084435, 0.003089411184191704, 0.0018562128534540534, 0.0007554948679171503, 3.5916098568122834e-05, 1.416702798451297e-05, 3.6118341085966676e-05, 4.2821084207389504e-05, 0.0010403699707239866, 0.001657205866649747, 2.4324050173163414e-05, 0.0008184770122170448, 0.00023886373674031347, 0.0006539843743667006, 0.00010743333405116573, 3.9358448702842e-05], "target_probs": 0.9788306355476379}}


{"result": {"time": "2021-02-21 06:37:04.959655", "n_pass": [451, 125, 55], "n_token": 60, "loss": [0.5504378080368042, 0.021491222083568573], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def insert_values(", "self", ",", "insert_values", ",", "raw_values", "=", "False", "#INDENT#", "\"\\n        Set up the insert query from the 'insert_values' dictionary. The\\n        dictionary gives the model field names and their target values.\\n\\n        If 'raw_values' is True, the values in the 'insert_values' dictionary\\n        are inserted directly into the query, rather than passed as SQL\\n        parameters. This provides a way to insert NULL and DEFAULT keywords\\n        into the query, for example.\\n        \"", "#NEWLINE#", "(", "placeholders", "values", ")", "=", "(", "[", "]", ",", "[", "]", ")", "for", "field", "val", "insert_values", ":", "#INDENT#", "placeholders", "append", "(", "(", "field", ",", "val", "self", ".", "field", "values", ".", "(", "val", "raw_values", "#INDENT#", "self", "values", "(", "v", "v", "values", "self", ".", "values", "self", "values", "(", "values", ")"]}}
{"position": {"error_location": 43, "repair_targets": [13, 30], "repair_candidates": [4, 27, 14, 40, 47, 51, 54, 56, 58, 6, 44, 25, 34, 39, 2, 37, 46, 52, 55, 49, 50, 26, 36, 43, 13, 30]}}
{"prediction": {"error_location": 0.5766972899436951, "repair_targets": [0.0773860514163971, 0.9013519883155823], "repair_candidates": [0.0033207936212420464, 0.003488528775051236, 0.00015935719420667738, 0.0773860514163971, 0.0016720594139769673, 0.0008733515860512853, 0.00040323464781977236, 0.0013783700997009873, 0.9013519883155823, 0.00015383906429633498, 0.0002248154196422547, 0.002912879688665271, 0.0017597397090867162, 0.0007541965460404754, 4.2062034481205046e-05, 1.6236197552643716e-05, 3.3580352464923635e-05, 4.017731043859385e-05, 0.0009933043038472533, 0.0014842933742329478, 2.7633299396256916e-05, 0.0006638104096055031, 0.00022613891633227468, 0.0005461134132929146, 3.7250647437758744e-05, 5.0257236580364406e-05], "target_probs": 0.9787380695343018}}


{"result": {"time": "2021-02-21 06:37:05.019384", "n_pass": [452, 126, 56], "n_token": 59, "loss": [0.4994312822818756, 0.030361726880073547], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def insert_values(", "self", ",", "insert_values", ",", "raw_values", "=", "False", "#INDENT#", "\"\\n        Set up the insert query from the 'insert_values' dictionary. The\\n        dictionary gives the model field names and their target values.\\n\\n        If 'raw_values' is True, the values in the 'insert_values' dictionary\\n        are inserted directly into the query, rather than passed as SQL\\n        parameters. This provides a way to insert NULL and DEFAULT keywords\\n        into the query, for example.\\n        \"", "#NEWLINE#", "(", "placeholders", "values", ")", "=", "(", "[", "]", ",", "[", "]", ")", "for", "field", "val", "insert_values", ":", "#INDENT#", "placeholders", "append", "(", "(", "field", ",", "val", "self", ".", "field", "values", ".", "(", "val", "raw_values", "#INDENT#", "self", "values", "(", "v", "v", "values", "self", ".", "values", "self", "values", "values", ")"]}}
{"position": {"error_location": 43, "repair_targets": [13, 30], "repair_candidates": [4, 27, 14, 40, 47, 51, 54, 56, 57, 6, 44, 25, 34, 39, 2, 37, 46, 52, 55, 49, 50, 26, 36, 43, 13, 30]}}
{"prediction": {"error_location": 0.6068757176399231, "repair_targets": [0.05459333956241608, 0.9155012369155884], "repair_candidates": [0.003722958965227008, 0.008756008930504322, 0.00017656644922681153, 0.05459333956241608, 0.0013325792970135808, 0.000975241360720247, 0.00040320371044799685, 0.002977509517222643, 0.9155012369155884, 0.0002039773971773684, 0.0003840404096990824, 0.003503069281578064, 0.0015580195467919111, 0.0008561110589653254, 4.192188862361945e-05, 1.87434798135655e-05, 0.00012122361658839509, 1.7273297999054193e-05, 0.0009345657308585942, 0.0015597330639138818, 1.3984996257931925e-05, 0.0012015338288620114, 0.00016468258399982005, 0.0007690648199059069, 0.00017346306412946433, 3.996973828179762e-05], "target_probs": 0.9700945615768433}}


{"result": {"time": "2021-02-21 06:37:05.078769", "n_pass": [454, 127, 57], "n_token": 58, "loss": [0.3377757668495178, 0.03653533756732941], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def insert_values(", "self", ",", "insert_values", ",", "raw_values", "=", "False", "#INDENT#", "\"\\n        Set up the insert query from the 'insert_values' dictionary. The\\n        dictionary gives the model field names and their target values.\\n\\n        If 'raw_values' is True, the values in the 'insert_values' dictionary\\n        are inserted directly into the query, rather than passed as SQL\\n        parameters. This provides a way to insert NULL and DEFAULT keywords\\n        into the query, for example.\\n        \"", "#NEWLINE#", "(", "placeholders", "values", ")", "=", "(", "[", "]", ",", "[", "]", ")", "for", "field", "val", "insert_values", ":", "#INDENT#", "placeholders", "append", "(", "(", "field", ",", "val", "self", ".", "field", "values", ".", "(", "val", "raw_values", "#INDENT#", "self", "values", "(", "v", "v", "values", "self", ".", "values", "self", "values", "values"]}}
{"position": {"error_location": 43, "repair_targets": [13, 30], "repair_candidates": [4, 27, 14, 40, 47, 51, 54, 56, 57, 6, 44, 25, 34, 39, 2, 37, 46, 52, 55, 49, 50, 26, 36, 43, 13, 30]}}
{"prediction": {"error_location": 0.7133551836013794, "repair_targets": [0.07899127155542374, 0.8851327300071716], "repair_candidates": [0.003891897387802601, 0.01052167173475027, 0.00013880115875508636, 0.07899127155542374, 0.002986849984154105, 0.0011091007618233562, 0.0005375139880925417, 0.0043855998665094376, 0.8851327300071716, 0.0002332939038751647, 0.0003143440990243107, 0.0033907778561115265, 0.001834965543821454, 0.001544661819934845, 2.3572165446239524e-05, 9.175968443742022e-06, 8.302515925606713e-05, 4.594390338752419e-05, 0.0009051706874743104, 0.0010101482039317489, 3.569450927898288e-05, 0.0010194164933636785, 0.00026474668993614614, 0.0009826659224927425, 0.00025313018704764545, 0.0003538884629961103], "target_probs": 0.9641240239143372}}


{"result": {"time": "2021-02-21 06:37:05.138360", "n_pass": [455, 128, 58], "n_token": 57, "loss": [0.20370350778102875, 0.012784193269908428], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["def insert_values(", "self", ",", "insert_values", ",", "raw_values", "=", "False", "#INDENT#", "\"\\n        Set up the insert query from the 'insert_values' dictionary. The\\n        dictionary gives the model field names and their target values.\\n\\n        If 'raw_values' is True, the values in the 'insert_values' dictionary\\n        are inserted directly into the query, rather than passed as SQL\\n        parameters. This provides a way to insert NULL and DEFAULT keywords\\n        into the query, for example.\\n        \"", "#NEWLINE#", "(", "placeholders", "values", ")", "=", "(", "[", "]", ",", "[", "]", ")", "for", "field", "val", "insert_values", ":", "#INDENT#", "placeholders", "append", "(", "(", "field", ",", "val", "self", ".", "field", "values", ".", "(", "val", "raw_values", "#INDENT#", "self", "values", "(", "v", "v", "values", "self", ".", "values", "self", "values", "values"]}}
{"position": {"error_location": 42, "repair_targets": [12, 29], "repair_candidates": [3, 26, 13, 39, 46, 50, 53, 55, 56, 5, 43, 24, 33, 38, 1, 36, 45, 51, 54, 48, 49, 25, 35, 42, 12, 29]}}
{"prediction": {"error_location": 0.8157042860984802, "repair_targets": [0.1944313496351242, 0.7928658127784729], "repair_candidates": [0.0003465202753432095, 0.0004182109551038593, 0.00013372395187616348, 0.1944313496351242, 0.0026844132225960493, 0.0009856655960902572, 0.0004748074570670724, 8.008579607121646e-05, 0.7928658127784729, 0.0001973441831069067, 0.0001147672810475342, 0.001134052756242454, 0.001790765323676169, 0.0010141487000510097, 1.1675077985273674e-05, 6.339444553304929e-06, 3.305704376543872e-05, 3.290198583272286e-05, 0.001077914726920426, 0.0008077891543507576, 2.7689609851222485e-05, 0.00036841293331235647, 0.0001739957369863987, 0.0003260037919972092, 0.00018536823336035013, 0.00027715013129636645], "target_probs": 0.9872971773147583}}


{"result": {"time": "2021-02-21 06:37:05.197701", "n_pass": [456, 129, 59], "n_token": 56, "loss": [0.16415418684482574, 0.00523720309138298], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["self", ",", "insert_values", ",", "raw_values", "=", "False", "#INDENT#", "\"\\n        Set up the insert query from the 'insert_values' dictionary. The\\n        dictionary gives the model field names and their target values.\\n\\n        If 'raw_values' is True, the values in the 'insert_values' dictionary\\n        are inserted directly into the query, rather than passed as SQL\\n        parameters. This provides a way to insert NULL and DEFAULT keywords\\n        into the query, for example.\\n        \"", "#NEWLINE#", "(", "placeholders", "values", ")", "=", "(", "[", "]", ",", "[", "]", ")", "for", "field", "val", "insert_values", ":", "#INDENT#", "placeholders", "append", "(", "(", "field", ",", "val", "self", ".", "field", "values", ".", "(", "val", "raw_values", "#INDENT#", "self", "values", "(", "v", "v", "values", "self", ".", "values", "self", "values", "values"]}}
{"position": {"error_location": 41, "repair_targets": [11, 28], "repair_candidates": [2, 25, 12, 38, 45, 49, 52, 54, 55, 4, 42, 23, 32, 37, 0, 35, 44, 50, 53, 47, 48, 24, 34, 41, 11, 28]}}
{"prediction": {"error_location": 0.8486112356185913, "repair_targets": [0.2371319979429245, 0.7576444745063782], "repair_candidates": [9.250349830836058e-05, 8.523455471731722e-05, 4.697300391853787e-05, 0.2371319979429245, 0.0012973039411008358, 0.0002395695191808045, 0.0001212381903314963, 2.251557270938065e-05, 0.7576444745063782, 0.0001000749907689169, 8.561173308407888e-05, 0.00031764875166118145, 0.0012990497052669525, 0.0004496295878197998, 3.9144674701674376e-06, 1.9171664007444633e-06, 9.030968612933066e-06, 8.95621269592084e-06, 0.00032427700352855027, 0.00021145927894394845, 6.051748641766608e-06, 9.5496499852743e-05, 6.422536534955725e-05, 8.294545114040375e-05, 7.724608440184966e-05, 0.00018058149726130068], "target_probs": 0.9947764873504639}}


{"result": {"time": "2021-02-21 06:37:05.258922", "n_pass": [458, 130, 60], "n_token": 55, "loss": [0.3117476999759674, 0.061347220093011856], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["self", "insert_values", ",", "raw_values", "=", "False", "#INDENT#", "\"\\n        Set up the insert query from the 'insert_values' dictionary. The\\n        dictionary gives the model field names and their target values.\\n\\n        If 'raw_values' is True, the values in the 'insert_values' dictionary\\n        are inserted directly into the query, rather than passed as SQL\\n        parameters. This provides a way to insert NULL and DEFAULT keywords\\n        into the query, for example.\\n        \"", "#NEWLINE#", "(", "placeholders", "values", ")", "=", "(", "[", "]", ",", "[", "]", ")", "for", "field", "val", "insert_values", ":", "#INDENT#", "placeholders", "append", "(", "(", "field", ",", "val", "self", ".", "field", "values", ".", "(", "val", "raw_values", "#INDENT#", "self", "values", "(", "v", "v", "values", "self", ".", "values", "self", "values", "values"]}}
{"position": {"error_location": 40, "repair_targets": [10, 27], "repair_candidates": [1, 24, 11, 37, 44, 48, 51, 53, 54, 3, 41, 22, 31, 36, 0, 34, 43, 49, 52, 46, 47, 23, 33, 40, 10, 27]}}
{"prediction": {"error_location": 0.7321662306785583, "repair_targets": [0.2421945184469223, 0.6983020901679993], "repair_candidates": [0.0007864949875511229, 0.0012455604737624526, 0.011269298382103443, 0.2421945184469223, 0.009992503561079502, 0.001016521011479199, 0.0005504547152668238, 0.005828981287777424, 0.6983020901679993, 0.0021876145619899035, 0.0010860696202144027, 0.008248947560787201, 0.0045005944557487965, 0.003055458189919591, 7.112989987945184e-05, 0.00012382226123008877, 8.540033013559878e-05, 2.6938068913295865e-05, 0.0019847729708999395, 0.0018992471741512418, 3.32569979946129e-05, 0.0012059519067406654, 0.0004928091075271368, 0.0019651041366159916, 0.0005216086283326149, 0.0013248390750959516], "target_probs": 0.9404966235160828}}


{"result": {"time": "2021-02-21 06:37:05.318206", "n_pass": [460, 131, 61], "n_token": 54, "loss": [0.21947816014289856, 0.04935627803206444], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["self", "insert_values", "raw_values", "=", "False", "#INDENT#", "\"\\n        Set up the insert query from the 'insert_values' dictionary. The\\n        dictionary gives the model field names and their target values.\\n\\n        If 'raw_values' is True, the values in the 'insert_values' dictionary\\n        are inserted directly into the query, rather than passed as SQL\\n        parameters. This provides a way to insert NULL and DEFAULT keywords\\n        into the query, for example.\\n        \"", "#NEWLINE#", "(", "placeholders", "values", ")", "=", "(", "[", "]", ",", "[", "]", ")", "for", "field", "val", "insert_values", ":", "#INDENT#", "placeholders", "append", "(", "(", "field", ",", "val", "self", ".", "field", "values", ".", "(", "val", "raw_values", "#INDENT#", "self", "values", "(", "v", "v", "values", "self", ".", "values", "self", "values", "values"]}}
{"position": {"error_location": 39, "repair_targets": [9, 26], "repair_candidates": [1, 23, 10, 36, 43, 47, 50, 52, 53, 2, 40, 21, 30, 35, 0, 33, 42, 48, 51, 45, 46, 22, 32, 39, 9, 26]}}
{"prediction": {"error_location": 0.8029376864433289, "repair_targets": [0.25353845953941345, 0.6983035206794739], "repair_candidates": [0.0006539151654578745, 0.0008662868640385568, 0.0004627573653124273, 0.25353845953941345, 0.010717004537582397, 0.00046844087773934007, 0.0004672660434152931, 0.00740475719794631, 0.6983035206794739, 0.0025393373798578978, 0.0012398470425978303, 0.00993606448173523, 0.002451931592077017, 0.0032165611628443003, 5.749902265961282e-05, 5.007110667065717e-05, 0.00012249904102645814, 2.0704268536064774e-05, 0.002034013159573078, 0.0013481297064572573, 2.3292868718272075e-05, 0.0009063296020030975, 0.0003358905960340053, 0.0012239331845194101, 0.00023303837224375457, 0.0013783989707008004], "target_probs": 0.9518419504165649}}


{"result": {"time": "2021-02-21 06:37:05.376912", "n_pass": [462, 132, 62], "n_token": 53, "loss": [0.6280454993247986, 0.06350476294755936], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["self", "insert_values", "raw_values", "False", "#INDENT#", "\"\\n        Set up the insert query from the 'insert_values' dictionary. The\\n        dictionary gives the model field names and their target values.\\n\\n        If 'raw_values' is True, the values in the 'insert_values' dictionary\\n        are inserted directly into the query, rather than passed as SQL\\n        parameters. This provides a way to insert NULL and DEFAULT keywords\\n        into the query, for example.\\n        \"", "#NEWLINE#", "(", "placeholders", "values", ")", "=", "(", "[", "]", ",", "[", "]", ")", "for", "field", "val", "insert_values", ":", "#INDENT#", "placeholders", "append", "(", "(", "field", ",", "val", "self", ".", "field", "values", ".", "(", "val", "raw_values", "#INDENT#", "self", "values", "(", "v", "v", "values", "self", ".", "values", "self", "values", "values"]}}
{"position": {"error_location": 38, "repair_targets": [8, 25], "repair_candidates": [1, 22, 9, 35, 42, 46, 49, 51, 52, 2, 39, 20, 29, 34, 0, 32, 41, 47, 50, 44, 45, 21, 31, 38, 8, 25]}}
{"prediction": {"error_location": 0.5336337089538574, "repair_targets": [0.2094384729862213, 0.7290312051773071], "repair_candidates": [0.0007796633872203529, 0.000942346581723541, 0.0008727428503334522, 0.2094384729862213, 0.009973925538361073, 0.0008072360069490969, 0.0008841709932312369, 0.02021915465593338, 0.7290312051773071, 0.004057141952216625, 0.0016348736826330423, 0.007221578154712915, 0.0026338999159634113, 0.003893572371453047, 0.0001450426789233461, 0.0001496910845162347, 0.00011277196608716622, 1.9055802113143727e-05, 0.002235045190900564, 0.0009389068000018597, 2.5308116164524108e-05, 0.0008088847971521318, 0.000378799915779382, 0.0007287249900400639, 0.0001739946164889261, 0.001893828739412129], "target_probs": 0.938469648361206}}


{"result": {"time": "2021-02-21 06:37:05.435190", "n_pass": [463, 133, 63], "n_token": 52, "loss": [0.5276960730552673, 0.07878969609737396], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["self", "insert_values", "raw_values", "#INDENT#", "\"\\n        Set up the insert query from the 'insert_values' dictionary. The\\n        dictionary gives the model field names and their target values.\\n\\n        If 'raw_values' is True, the values in the 'insert_values' dictionary\\n        are inserted directly into the query, rather than passed as SQL\\n        parameters. This provides a way to insert NULL and DEFAULT keywords\\n        into the query, for example.\\n        \"", "#NEWLINE#", "(", "placeholders", "values", ")", "=", "(", "[", "]", ",", "[", "]", ")", "for", "field", "val", "insert_values", ":", "#INDENT#", "placeholders", "append", "(", "(", "field", ",", "val", "self", ".", "field", "values", ".", "(", "val", "raw_values", "#INDENT#", "self", "values", "(", "v", "v", "values", "self", ".", "values", "self", "values", "values"]}}
{"position": {"error_location": 37, "repair_targets": [7, 24], "repair_candidates": [1, 21, 8, 34, 41, 45, 48, 50, 51, 2, 38, 19, 28, 33, 0, 31, 40, 46, 49, 43, 44, 20, 30, 37, 7, 24]}}
{"prediction": {"error_location": 0.5899626016616821, "repair_targets": [0.05101872980594635, 0.8732155561447144], "repair_candidates": [0.0008096940582618117, 0.0007088079582899809, 0.000814255909062922, 0.05101872980594635, 0.003848372958600521, 0.0007530412403866649, 0.0007320106378756464, 0.04788544028997421, 0.8732155561447144, 0.0035962462425231934, 0.0014911427861079574, 0.005544030573219061, 0.002294398145750165, 0.0013200213434174657, 0.00012496882118284702, 0.00019326517940498888, 7.317938434425741e-05, 2.6194464226136915e-05, 0.0021822850685566664, 0.0011426698183640838, 2.1019881387474015e-05, 0.0005333897424861789, 0.0002703402133192867, 0.0003624524106271565, 0.0003641549847088754, 0.0006743057165294886], "target_probs": 0.9242342710494995}}


{"result": {"time": "2021-02-21 06:37:05.494249", "n_pass": [464, 134, 64], "n_token": 51, "loss": [0.6423555016517639, 0.13079434633255005], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["self", "insert_values", "raw_values", "\"\\n        Set up the insert query from the 'insert_values' dictionary. The\\n        dictionary gives the model field names and their target values.\\n\\n        If 'raw_values' is True, the values in the 'insert_values' dictionary\\n        are inserted directly into the query, rather than passed as SQL\\n        parameters. This provides a way to insert NULL and DEFAULT keywords\\n        into the query, for example.\\n        \"", "#NEWLINE#", "(", "placeholders", "values", ")", "=", "(", "[", "]", ",", "[", "]", ")", "for", "field", "val", "insert_values", ":", "#INDENT#", "placeholders", "append", "(", "(", "field", ",", "val", "self", ".", "field", "values", ".", "(", "val", "raw_values", "#INDENT#", "self", "values", "(", "v", "v", "values", "self", ".", "values", "self", "values", "values"]}}
{"position": {"error_location": 36, "repair_targets": [6, 23], "repair_candidates": [1, 20, 7, 33, 40, 44, 47, 49, 50, 2, 37, 18, 27, 32, 0, 30, 39, 45, 48, 42, 43, 19, 29, 36, 6, 23]}}
{"prediction": {"error_location": 0.5260518789291382, "repair_targets": [0.0024990171659737825, 0.87489914894104], "repair_candidates": [0.0005609125946648419, 0.0005121497088111937, 0.0004956796765327454, 0.0024990171659737825, 0.005878025200217962, 0.0005804991233162582, 0.0007163636037148535, 0.09955723583698273, 0.87489914894104, 0.0027140171732753515, 0.0010367437498643994, 0.0035340958274900913, 0.001545225502923131, 0.0009413988445885479, 0.00014061784895602614, 0.00014703143096994609, 0.00010421626211609691, 1.857758979895152e-05, 0.0014543681172654033, 0.0010718203848227859, 2.33061673498014e-05, 0.00045823247637599707, 0.0001552111643832177, 0.00020751927513629198, 0.0003665440308395773, 0.00038212741492316127], "target_probs": 0.8773981928825378}}


{"result": {"time": "2021-02-21 06:37:05.613267", "n_pass": [466, 136, 65], "n_token": 50, "loss": [0.6921119689941406, 0.12305294722318649], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["self", "insert_values", "raw_values", "\"\\n        Set up the insert query from the 'insert_values' dictionary. The\\n        dictionary gives the model field names and their target values.\\n\\n        If 'raw_values' is True, the values in the 'insert_values' dictionary\\n        are inserted directly into the query, rather than passed as SQL\\n        parameters. This provides a way to insert NULL and DEFAULT keywords\\n        into the query, for example.\\n        \"", "(", "placeholders", "values", ")", "=", "(", "[", "]", ",", "[", "]", ")", "for", "field", "val", "insert_values", ":", "#INDENT#", "placeholders", "append", "(", "(", "field", ",", "val", "self", ".", "field", "values", ".", "(", "val", "raw_values", "#INDENT#", "self", "values", "(", "v", "v", "values", "self", ".", "values", "self", "values", "values"]}}
{"position": {"error_location": 35, "repair_targets": [5, 22], "repair_candidates": [1, 19, 6, 32, 39, 43, 46, 48, 49, 2, 36, 17, 26, 31, 0, 29, 38, 44, 47, 41, 42, 18, 28, 35, 5, 22]}}
{"prediction": {"error_location": 0.5005179047584534, "repair_targets": [0.0025554243475198746, 0.8816614151000977], "repair_candidates": [0.0008594256360083818, 0.0007669366314075887, 0.0006967238732613623, 0.0025554243475198746, 0.0020546740852296352, 0.0007551327580586076, 0.0012513087131083012, 0.09297480434179306, 0.8816614151000977, 0.002108162734657526, 0.0010771278757601976, 0.0034699062816798687, 0.0018775340868160129, 0.0011000295635312796, 0.00013708659389521927, 7.55865839892067e-05, 0.0002358876372454688, 3.59866680810228e-05, 0.002554277889430523, 0.0020061314571648836, 3.9336209738394246e-05, 0.0005840931553393602, 0.00020689434313680977, 0.00023374415468424559, 0.0003486702044028789, 0.0003336709924042225], "target_probs": 0.884216845035553}}


{"result": {"time": "2021-02-21 06:37:05.671839", "n_pass": [467, 137, 66], "n_token": 49, "loss": [0.8983584046363831, 0.32212790846824646], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["self", "insert_values", "raw_values", "\"\\n        Set up the insert query from the 'insert_values' dictionary. The\\n        dictionary gives the model field names and their target values.\\n\\n        If 'raw_values' is True, the values in the 'insert_values' dictionary\\n        are inserted directly into the query, rather than passed as SQL\\n        parameters. This provides a way to insert NULL and DEFAULT keywords\\n        into the query, for example.\\n        \"", "placeholders", "values", ")", "=", "(", "[", "]", ",", "[", "]", ")", "for", "field", "val", "insert_values", ":", "#INDENT#", "placeholders", "append", "(", "(", "field", ",", "val", "self", ".", "field", "values", ".", "(", "val", "raw_values", "#INDENT#", "self", "values", "(", "v", "v", "values", "self", ".", "values", "self", "values", "values"]}}
{"position": {"error_location": 34, "repair_targets": [4, 21], "repair_candidates": [1, 18, 5, 31, 38, 42, 45, 47, 48, 2, 35, 16, 25, 30, 0, 28, 37, 43, 46, 40, 41, 17, 27, 34, 4, 21]}}
{"prediction": {"error_location": 0.40723761916160583, "repair_targets": [0.08835438638925552, 0.6362510919570923], "repair_candidates": [0.0010555803310126066, 0.0012924523325636983, 0.0012021299917250872, 0.08835438638925552, 0.006783083081245422, 0.0014511557528749108, 0.0024420390836894512, 0.2350376695394516, 0.6362510919570923, 0.002953004091978073, 0.0021243083756417036, 0.0028589621651917696, 0.003217054530978203, 0.003800259670242667, 0.0005130624049343169, 0.0001715693506412208, 0.00044109096052125096, 3.2674463000148535e-05, 0.003479936858639121, 0.0024810610339045525, 5.9622230764944106e-05, 0.0006448529311455786, 0.000410096428822726, 0.00030592898838222027, 0.0013665291480720043, 0.0012703074607998133], "target_probs": 0.7246055006980896}}


{"result": {"time": "2021-02-21 06:37:06.902963", "n_pass": [503, 158, 67], "n_token": 48, "loss": [0.7591060996055603, 0.09992950409650803], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["self", "insert_values", "raw_values", "\"\\n        Set up the insert query from the 'insert_values' dictionary. The\\n        dictionary gives the model field names and their target values.\\n\\n        If 'raw_values' is True, the values in the 'insert_values' dictionary\\n        are inserted directly into the query, rather than passed as SQL\\n        parameters. This provides a way to insert NULL and DEFAULT keywords\\n        into the query, for example.\\n        \"", "placeholders", "values", ")", "=", "(", "[", "]", ",", "[", "]", ")", "for", "field", "val", "insert_values", ":", "#INDENT#", "placeholders", "append", "(", "(", "field", ",", "val", "self", ".", "field", "values", ".", "(", "val", "raw_values", "#INDENT#", "self", "values", "v", "v", "values", "self", ".", "values", "self", "values", "values"]}}
{"position": {"error_location": 34, "repair_targets": [4, 21], "repair_candidates": [1, 18, 5, 31, 38, 41, 44, 46, 47, 2, 35, 16, 25, 30, 0, 28, 37, 42, 45, 39, 40, 17, 27, 34, 4, 21]}}
{"prediction": {"error_location": 0.4680847227573395, "repair_targets": [0.039801280945539474, 0.8650999069213867], "repair_candidates": [0.00030538352439180017, 0.0004113611357752234, 0.0003988764074165374, 0.039801280945539474, 0.00413940567523241, 0.0004706424952019006, 0.0005426254938356578, 0.08275608718395233, 0.8650999069213867, 0.0008411477319896221, 0.00017570900672581047, 0.00019793814863078296, 0.0013052872382104397, 0.0011681726900860667, 0.0001579954259796068, 4.39268333138898e-05, 9.375366062158719e-05, 2.2690701371175237e-05, 0.000616170815192163, 0.00018271681619808078, 7.734762039035559e-05, 7.553972682217136e-05, 0.00021593007841147482, 6.604759255424142e-05, 6.47037522867322e-05, 0.0007693354855291545], "target_probs": 0.9049012064933777}}


{"result": {"time": "2021-02-21 06:37:06.962465", "n_pass": [508, 159, 68], "n_token": 47, "loss": [0.677092969417572, 0.11766058951616287], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["self", "insert_values", "raw_values", "\"\\n        Set up the insert query from the 'insert_values' dictionary. The\\n        dictionary gives the model field names and their target values.\\n\\n        If 'raw_values' is True, the values in the 'insert_values' dictionary\\n        are inserted directly into the query, rather than passed as SQL\\n        parameters. This provides a way to insert NULL and DEFAULT keywords\\n        into the query, for example.\\n        \"", "placeholders", "values", ")", "=", "(", "[", "]", ",", "[", "]", ")", "for", "field", "val", "insert_values", ":", "#INDENT#", "placeholders", "append", "(", "(", "field", ",", "val", "self", ".", "field", "values", ".", "(", "val", "raw_values", "#INDENT#", "self", "values", "v", "v", "values", "self", "values", "self", "values", "values"]}}
{"position": {"error_location": 34, "repair_targets": [4, 21], "repair_candidates": [1, 18, 5, 31, 38, 41, 43, 45, 46, 2, 35, 16, 25, 30, 0, 28, 37, 42, 44, 39, 40, 17, 27, 34, 4, 21]}}
{"prediction": {"error_location": 0.508091926574707, "repair_targets": [0.04314888268709183, 0.8458488583564758], "repair_candidates": [0.0002323595545021817, 0.0003700174856930971, 0.00038650602800771594, 0.04314888268709183, 0.003197998506948352, 0.0004614983045030385, 0.00041658207192085683, 0.10077237337827682, 0.8458488583564758, 0.0008396602934226394, 4.243486910127103e-05, 0.00014279928291216493, 0.0014435357879847288, 0.0007041291682980955, 0.00010119776561623439, 4.8627425712766126e-05, 8.650968811707571e-05, 1.3207397387304809e-05, 0.001174913253635168, 0.0002455514622852206, 6.93255351507105e-05, 6.349400791805238e-05, 0.0001349030208075419, 2.358839992666617e-05, 1.6209889508900233e-05, 1.4801984434598126e-05], "target_probs": 0.8889977335929871}}


{"result": {"time": "2021-02-21 06:37:07.021643", "n_pass": [516, 160, 69], "n_token": 46, "loss": [0.5834870934486389, 0.045112185180187225], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["self", "insert_values", "raw_values", "placeholders", "values", ")", "=", "(", "[", "]", ",", "[", "]", ")", "for", "field", "val", "insert_values", ":", "#INDENT#", "placeholders", "append", "(", "(", "field", ",", "val", "self", ".", "field", "values", ".", "(", "val", "raw_values", "#INDENT#", "self", "values", "v", "v", "values", "self", "values", "self", "values", "values"]}}
{"position": {"error_location": 33, "repair_targets": [3, 20], "repair_candidates": [1, 17, 4, 30, 37, 40, 42, 44, 45, 2, 34, 15, 24, 29, 0, 27, 36, 41, 43, 38, 39, 16, 26, 33, 3, 20]}}
{"prediction": {"error_location": 0.557949423789978, "repair_targets": [0.015327519737184048, 0.9405627250671387], "repair_candidates": [7.840914622647688e-05, 0.00010940078209387138, 0.00018491398077458143, 0.015327519737184048, 0.0014263668563216925, 0.00034542594221420586, 0.00014120432024355978, 0.040444694459438324, 0.9405627250671387, 0.00034264271380379796, 1.7068288798327558e-05, 3.590089181670919e-05, 0.00046836992260068655, 0.00024362462863791734, 2.9779295800835826e-05, 1.7150003259303048e-05, 6.240225775400177e-05, 5.809970957670885e-07, 3.7260630051605403e-05, 5.243218402029015e-05, 1.287721170228906e-05, 1.2510624401329551e-05, 2.9580594855360687e-05, 6.894410489621805e-06, 5.429960765468422e-06, 4.871880719292676e-06], "target_probs": 0.9558902382850647}}


{"result": {"time": "2021-02-21 06:37:07.080182", "n_pass": [519, 161, 70], "n_token": 45, "loss": [0.14487648010253906, 0.018750423565506935], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["self", "insert_values", "raw_values", "placeholders", "values", "=", "(", "[", "]", ",", "[", "]", ")", "for", "field", "val", "insert_values", ":", "#INDENT#", "placeholders", "append", "(", "(", "field", ",", "val", "self", ".", "field", "values", ".", "(", "val", "raw_values", "#INDENT#", "self", "values", "v", "v", "values", "self", "values", "self", "values", "values"]}}
{"position": {"error_location": 32, "repair_targets": [3, 19], "repair_candidates": [1, 16, 4, 29, 36, 39, 41, 43, 44, 2, 33, 14, 23, 28, 0, 26, 35, 40, 42, 37, 38, 15, 25, 32, 3, 19]}}
{"prediction": {"error_location": 0.8651291728019714, "repair_targets": [0.03362630680203438, 0.947797954082489], "repair_candidates": [8.769601845415309e-05, 0.00014062380068935454, 0.00013284063606988639, 0.03362630680203438, 0.00023492652690038085, 0.00023645273176953197, 8.139388228300959e-05, 0.016492608934640884, 0.947797954082489, 0.00024349807063117623, 2.2123304006527178e-05, 3.740726242540404e-05, 0.0004238529072608799, 0.00018268305575475097, 1.270180018764222e-05, 3.6311255371401785e-06, 6.537849549204111e-05, 8.510349402968131e-07, 3.576062954380177e-05, 7.06927603459917e-05, 1.0180354365729727e-05, 1.0478580406925175e-05, 2.1461584765347652e-05, 8.87856640474638e-06, 1.0283270057698246e-05, 9.325889550382271e-06], "target_probs": 0.9814242720603943}}


{"result": {"time": "2021-02-21 06:37:07.835795", "n_pass": [536, 174, 71], "n_token": 44, "loss": [0.6390222907066345, 0.12357665598392487], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["self", "insert_values", "raw_values", "placeholders", "values", "=", "(", "[", "]", ",", "[", "]", ")", "for", "field", "val", "insert_values", ":", "#INDENT#", "placeholders", "append", "(", "field", ",", "val", "self", ".", "field", "values", ".", "(", "val", "raw_values", "#INDENT#", "self", "values", "v", "v", "values", "self", "values", "self", "values", "values"]}}
{"position": {"error_location": 31, "repair_targets": [3, 19], "repair_candidates": [1, 16, 4, 28, 35, 38, 40, 42, 43, 2, 32, 14, 22, 27, 0, 25, 34, 39, 41, 36, 37, 15, 24, 31, 3, 19]}}
{"prediction": {"error_location": 0.5278081893920898, "repair_targets": [0.21954944729804993, 0.664204478263855], "repair_candidates": [0.0002560925204306841, 0.0003720476815942675, 0.0003810043854173273, 0.21954944729804993, 0.0001070656071533449, 0.0005512209027074277, 0.00029442019877023995, 0.11065007001161575, 0.664204478263855, 0.0006878870190121233, 0.00013167812721803784, 5.8307123254053295e-05, 0.0013948568375781178, 0.0006042017485015094, 0.00010410916729597375, 2.3779846742399968e-05, 0.00012256964691914618, 1.464913657400757e-05, 0.00010983856191160157, 0.0001917283661896363, 3.0676885216962546e-05, 3.717989966389723e-05, 2.8529011615319178e-05, 3.403870141482912e-05, 3.678510256577283e-05, 2.3352884454652667e-05], "target_probs": 0.8837538957595825}}


{"result": {"time": "2021-02-21 06:37:07.897007", "n_pass": [537, 175, 72], "n_token": 43, "loss": [0.8361183404922485, 0.5219256281852722], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["self", "insert_values", "raw_values", "placeholders", "values", "=", "(", "[", "]", ",", "[", "]", ")", "for", "field", "val", "insert_values", ":", "#INDENT#", "placeholders", "append", "field", ",", "val", "self", ".", "field", "values", ".", "(", "val", "raw_values", "#INDENT#", "self", "values", "v", "v", "values", "self", "values", "self", "values", "values"]}}
{"position": {"error_location": 30, "repair_targets": [3, 19], "repair_candidates": [1, 16, 4, 27, 34, 37, 39, 41, 42, 2, 31, 14, 21, 26, 0, 24, 33, 38, 40, 35, 36, 15, 23, 30, 3, 19]}}
{"prediction": {"error_location": 0.4333895444869995, "repair_targets": [0.5875258445739746, 0.005850949324667454], "repair_candidates": [0.0011701345210894942, 0.0017071969341486692, 0.002094222465530038, 0.5875258445739746, 0.0006996180163696408, 0.002699383068829775, 0.001152304233983159, 0.38070255517959595, 0.005850949324667454, 0.0024372003972530365, 0.00019327973132021725, 9.656114707468078e-05, 0.007562348619103432, 0.002953204559162259, 0.0002658650919329375, 7.749307405902073e-05, 0.0005925438599660993, 0.00019485619850456715, 0.0004663148720283061, 0.0008274501306004822, 0.00011214702681172639, 0.00013424173812381923, 8.078217797446996e-05, 0.0001336125860689208, 0.00012947138748131692, 0.0001404827635269612], "target_probs": 0.5933768153190613}}


{"result": {"time": "2021-02-21 06:37:07.954842", "n_pass": [539, 176, 73], "n_token": 42, "loss": [1.0615540742874146, 0.14303810894489288], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["self", "insert_values", "raw_values", "placeholders", "values", "=", "(", "[", "]", ",", "[", "]", ")", "for", "field", "val", "insert_values", ":", "#INDENT#", "placeholders", "append", "field", "val", "self", ".", "field", "values", ".", "(", "val", "raw_values", "#INDENT#", "self", "values", "v", "v", "values", "self", "values", "self", "values", "values"]}}
{"position": {"error_location": 29, "repair_targets": [3, 19], "repair_candidates": [1, 16, 4, 26, 33, 36, 38, 40, 41, 2, 30, 14, 21, 25, 0, 23, 32, 37, 39, 34, 35, 15, 22, 29, 3, 19]}}
{"prediction": {"error_location": 0.34591782093048096, "repair_targets": [0.2801890969276428, 0.586531937122345], "repair_candidates": [0.0005288264947012067, 0.0005057670059613883, 0.0006823028670623899, 0.2801890969276428, 0.00038745286292396486, 0.0018160572508350015, 0.00027065756148658693, 0.12189040333032608, 0.586531937122345, 0.001975319115445018, 5.418436921900138e-05, 1.733288991090376e-05, 0.003701654030010104, 0.0004089027352165431, 7.539281068602577e-05, 1.3961225704406388e-05, 0.00021224815282039344, 4.093762254342437e-05, 0.00018456018005963415, 0.00021526575437746942, 4.8058605898404494e-05, 6.298110383795574e-05, 3.607506732805632e-05, 5.6310334912268445e-05, 4.283627276890911e-05, 5.153212623554282e-05], "target_probs": 0.8667210340499878}}


{"result": {"time": "2021-02-21 06:37:08.071231", "n_pass": [545, 178, 74], "n_token": 41, "loss": [1.0988661050796509, 0.251216322183609], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["self", "insert_values", "raw_values", "placeholders", "values", "=", "(", "[", "]", ",", "[", "]", ")", "for", "field", "val", "insert_values", ":", "#INDENT#", "placeholders", "append", "field", "val", "self", ".", "field", "values", "(", "val", "raw_values", "#INDENT#", "self", "values", "v", "v", "values", "self", "values", "self", "values", "values"]}}
{"position": {"error_location": 28, "repair_targets": [3, 19], "repair_candidates": [1, 16, 4, 26, 32, 35, 37, 39, 40, 2, 29, 14, 21, 25, 0, 23, 31, 36, 38, 33, 34, 15, 22, 28, 3, 19]}}
{"prediction": {"error_location": 0.33324873447418213, "repair_targets": [0.42125388979911804, 0.35660016536712646], "repair_candidates": [0.0005832691676914692, 0.0006931310053914785, 0.0006683612591587007, 0.42125388979911804, 0.0006847709883004427, 0.0024968537036329508, 0.00040485302451997995, 0.1844581514596939, 0.35660016536712646, 0.0018568492960184813, 4.515589535003528e-05, 1.5734502085251734e-05, 0.028427567332983017, 0.0008808739949017763, 4.340144732850604e-05, 1.1111930689367e-05, 0.0001584456767886877, 4.0909842937253416e-05, 0.00020160684653092176, 0.00021512557577807456, 4.46015183115378e-05, 5.556214819080196e-05, 4.359522063168697e-05, 4.4653315853793174e-05, 3.004304198839236e-05, 4.131773312110454e-05], "target_probs": 0.7778540849685669}}




Minimal simplified tokens:

['self', 'insert_values', 'raw_values', 'placeholders', 'values', '=', '(', '[', ']', ',', '[', ']', ')', 'for', 'field', 'val', 'insert_values', ':', '#INDENT#', 'placeholders', 'append', 'field', 'val', 'self', '.', 'field', 'values', '(', 'val', 'raw_values', '#INDENT#', 'self', 'values', 'v', 'v', 'values', 'self', 'values', 'self', 'values', 'values']
