
Original sample:

{"has_bug": true, "bug_kind": 1, "bug_kind_name": "VARIABLE_MISUSE", "source_tokens": ["#NEWLINE#", "def appendCMSPadding(", "str", ",", "blocksize", "=", "AES_blocksize", ")", ":", "#NEWLINE#", "#INDENT#", "'CMS padding: Pad with bytes containing the number of padding bytes\\n    Cryptographic Message Syntax (CMS) Padding\\n    Pad with bytes all of the same value as the number of padding bytes\\n    Recommended in: RFC 5652 (CMS) section 6.3.; \\n                PKCS#7 (CMS) section 10.3 (Note2)  \\n                PKCS#5 section 6.1.1 p.4, \\n                RFC 1423 (PEM) section 1.1  \\n  Each padding byte contains the number of padding bytes.\\n  '", "#NEWLINE#", "pad_len", "=", "paddingLength", "(", "len", "(", "str", ")", ",", "blocksize", ")", "#NEWLINE#", "padding", "=", "(", "chr", "(", "pad_len", ")", "*", "pad_len", ")", "#NEWLINE#", "return", "(", "str", "+", "pad_len", ")"], "error_location": [40], "repair_targets": [25], "repair_candidates": [4, 22, 25, 2, 19, 38, 13, 30, 33, 40], "provenances": [{"datasetProvenance": {"datasetName": "ETHPy150Open", "filepath": "keenlabs/KeenClient-Python/keen/Padding.py", "license": "mit", "note": "license: bigquery_api"}}], "txt_file": "eval__VARIABLE_MISUSE__SStuB.txt-00018-of-00300", "js_count": 58542, "results": {"model": "transformer", "prob": {"loc": [[0.001951584592461586, 1.8862206019321093e-08, 3.622363919930649e-08, 6.884213754609902e-10, 2.7014587899998332e-08, 1.965474005771739e-09, 5.9583879163938036e-08, 5.926938939637694e-10, 1.2228463797114841e-09, 1.6558970861169087e-09, 1.5325969382473659e-09, 5.220271770411955e-09, 1.780127045769575e-09, 3.932654024652038e-08, 1.1328435967072892e-09, 1.77686807489863e-08, 1.6486800813453328e-09, 2.41715003568288e-09, 1.4698112948963171e-08, 4.381575126899406e-05, 2.4591091385417485e-09, 2.3105908297793576e-09, 8.687768968229648e-06, 2.709894975083671e-09, 1.7455764611540303e-09, 1.7654068074079987e-07, 4.4934636567184327e-10, 1.2229187662526897e-09, 4.457975251170865e-07, 9.00565666483999e-09, 0.03295108675956726, 2.6608741876543718e-09, 7.669052948244826e-09, 0.09590035676956177, 4.486764453304204e-07, 3.4733758980109997e-08, 7.363182064068496e-09, 1.4782374435640122e-08, 0.576414942741394, 1.6335754082774656e-07, 0.29272720217704773, 8.087483820418129e-07]], "pointer": [[0.0, 0.0, 0.0003229403228033334, 0.0, 0.00039856895455159247, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 2.028049493674189e-05, 0.0, 0.0, 0.0, 0.0, 0.0, 3.1491159461438656e-05, 0.0, 0.0, 9.788566967472434e-05, 0.0, 0.0, 0.9991011619567871, 0.0, 0.0, 0.0, 0.0, 1.2621979976756847e-06, 0.0, 0.0, 1.7489082893007435e-07, 0.0, 0.0, 0.0, 0.0, 2.551511352066882e-05, 0.0, 6.75047544973495e-07, 0.0]], "target": [0.9991011619567871]}, "loss": [1.2285140752792358, 0.0008992422372102737], "acc": [0.0, 0.0, 1.0, 0.0]}, "wrong_error_location": [38]}


Trace of simplified code(s):

{"result": {"time": "2021-02-21 07:34:40.235677", "n_pass": [1, 1, 1], "n_token": 42, "loss": [0.5509275197982788, 0.0008992422372102737], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def appendCMSPadding(", "str", ",", "blocksize", "=", "AES_blocksize", ")", ":", "#NEWLINE#", "#INDENT#", "'CMS padding: Pad with bytes containing the number of padding bytes\\n    Cryptographic Message Syntax (CMS) Padding\\n    Pad with bytes all of the same value as the number of padding bytes\\n    Recommended in: RFC 5652 (CMS) section 6.3.; \\n                PKCS#7 (CMS) section 10.3 (Note2)  \\n                PKCS#5 section 6.1.1 p.4, \\n                RFC 1423 (PEM) section 1.1  \\n  Each padding byte contains the number of padding bytes.\\n  '", "#NEWLINE#", "pad_len", "=", "paddingLength", "(", "len", "(", "str", ")", ",", "blocksize", ")", "#NEWLINE#", "padding", "=", "(", "chr", "(", "pad_len", ")", "*", "pad_len", ")", "#NEWLINE#", "return", "(", "str", "+", "pad_len", ")"]}}
{"position": {"error_location": 38, "repair_targets": [25], "repair_candidates": [4, 22, 25, 2, 19, 38, 13, 30, 33, 40]}}
{"prediction": {"error_location": 0.576414942741394, "repair_targets": [0.9991011619567871], "repair_candidates": [0.0003229403228033334, 0.00039856895455159247, 2.028049493674189e-05, 3.1491159461438656e-05, 9.788566967472434e-05, 0.9991011619567871, 1.2621979976756847e-06, 1.7489082893007435e-07, 2.551511352066882e-05, 6.75047544973495e-07], "target_probs": 0.9991011619567871}}


{"result": {"time": "2021-02-21 07:34:40.292667", "n_pass": [21, 2, 2], "n_token": 37, "loss": [0.7822653651237488, 0.0022118694614619017], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def appendCMSPadding(", "str", ",", "blocksize", "#INDENT#", "'CMS padding: Pad with bytes containing the number of padding bytes\\n    Cryptographic Message Syntax (CMS) Padding\\n    Pad with bytes all of the same value as the number of padding bytes\\n    Recommended in: RFC 5652 (CMS) section 6.3.; \\n                PKCS#7 (CMS) section 10.3 (Note2)  \\n                PKCS#5 section 6.1.1 p.4, \\n                RFC 1423 (PEM) section 1.1  \\n  Each padding byte contains the number of padding bytes.\\n  '", "#NEWLINE#", "pad_len", "=", "paddingLength", "(", "len", "(", "str", ")", ",", "blocksize", ")", "#NEWLINE#", "padding", "=", "(", "chr", "(", "pad_len", ")", "*", "pad_len", ")", "#NEWLINE#", "return", "(", "str", "+", "pad_len", ")"]}}
{"position": {"error_location": 33, "repair_targets": [20], "repair_candidates": [4, 17, 20, 2, 14, 33, 8, 25, 28, 35]}}
{"prediction": {"error_location": 0.4573686718940735, "repair_targets": [0.9977905750274658], "repair_candidates": [0.0009294219198636711, 0.0009803690481930971, 2.2085254386183806e-05, 8.19004635559395e-05, 0.00018946873024106026, 0.9977905750274658, 1.3839597841069917e-06, 5.362043111745152e-07, 3.6306339552538702e-06, 5.719422233596561e-07], "target_probs": 0.9977905750274658}}


{"result": {"time": "2021-02-21 07:34:40.405555", "n_pass": [45, 4, 3], "n_token": 34, "loss": [0.7033918499946594, 0.0028634497430175543], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def appendCMSPadding(", "str", ",", "blocksize", "#INDENT#", "'CMS padding: Pad with bytes containing the number of padding bytes\\n    Cryptographic Message Syntax (CMS) Padding\\n    Pad with bytes all of the same value as the number of padding bytes\\n    Recommended in: RFC 5652 (CMS) section 6.3.; \\n                PKCS#7 (CMS) section 10.3 (Note2)  \\n                PKCS#5 section 6.1.1 p.4, \\n                RFC 1423 (PEM) section 1.1  \\n  Each padding byte contains the number of padding bytes.\\n  '", "#NEWLINE#", "pad_len", "=", "(", "str", ")", ",", "blocksize", ")", "#NEWLINE#", "padding", "=", "(", "chr", "(", "pad_len", ")", "*", "pad_len", ")", "#NEWLINE#", "return", "(", "str", "+", "pad_len", ")"]}}
{"position": {"error_location": 30, "repair_targets": [17], "repair_candidates": [4, 14, 17, 2, 11, 30, 8, 22, 25, 32]}}
{"prediction": {"error_location": 0.4949038326740265, "repair_targets": [0.997140645980835], "repair_candidates": [0.0012555936118587852, 0.0010803408222272992, 3.279107477283105e-05, 0.00010175231727771461, 0.00035585532896220684, 0.997140645980835, 2.279459977216902e-06, 9.419404136679077e-07, 2.807105556712486e-05, 1.8169765780839953e-06], "target_probs": 0.997140645980835}}


{"result": {"time": "2021-02-21 07:34:40.462171", "n_pass": [49, 5, 4], "n_token": 31, "loss": [0.7590144872665405, 0.008440671488642693], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def appendCMSPadding(", "str", ",", "blocksize", "#INDENT#", "'CMS padding: Pad with bytes containing the number of padding bytes\\n    Cryptographic Message Syntax (CMS) Padding\\n    Pad with bytes all of the same value as the number of padding bytes\\n    Recommended in: RFC 5652 (CMS) section 6.3.; \\n                PKCS#7 (CMS) section 10.3 (Note2)  \\n                PKCS#5 section 6.1.1 p.4, \\n                RFC 1423 (PEM) section 1.1  \\n  Each padding byte contains the number of padding bytes.\\n  '", "#NEWLINE#", "pad_len", "=", "(", "str", ")", ",", "blocksize", ")", "#NEWLINE#", "padding", "=", "pad_len", ")", "*", "pad_len", ")", "#NEWLINE#", "return", "(", "str", "+", "pad_len", ")"]}}
{"position": {"error_location": 27, "repair_targets": [17], "repair_candidates": [4, 14, 17, 2, 11, 27, 8, 19, 22, 29]}}
{"prediction": {"error_location": 0.46812760829925537, "repair_targets": [0.9915948510169983], "repair_candidates": [0.004027724731713533, 0.0030997535213828087, 3.385876334505156e-05, 6.883829337311909e-05, 0.0010950249852612615, 0.9915948510169983, 1.3448749314193265e-06, 1.9090943226274248e-07, 7.46837176848203e-05, 3.7451775369845564e-06], "target_probs": 0.9915948510169983}}


{"result": {"time": "2021-02-21 07:34:41.198567", "n_pass": [104, 18, 5], "n_token": 30, "loss": [0.7022855877876282, 0.006922907195985317], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def appendCMSPadding(", "str", ",", "blocksize", "#INDENT#", "'CMS padding: Pad with bytes containing the number of padding bytes\\n    Cryptographic Message Syntax (CMS) Padding\\n    Pad with bytes all of the same value as the number of padding bytes\\n    Recommended in: RFC 5652 (CMS) section 6.3.; \\n                PKCS#7 (CMS) section 10.3 (Note2)  \\n                PKCS#5 section 6.1.1 p.4, \\n                RFC 1423 (PEM) section 1.1  \\n  Each padding byte contains the number of padding bytes.\\n  '", "#NEWLINE#", "pad_len", "=", "str", ")", ",", "blocksize", ")", "#NEWLINE#", "padding", "=", "pad_len", ")", "*", "pad_len", ")", "#NEWLINE#", "return", "(", "str", "+", "pad_len", ")"]}}
{"position": {"error_location": 26, "repair_targets": [16], "repair_candidates": [4, 13, 16, 2, 10, 26, 8, 18, 21, 28]}}
{"prediction": {"error_location": 0.49545153975486755, "repair_targets": [0.9931010007858276], "repair_candidates": [0.0033179852180182934, 0.0023258074652403593, 3.1214636692311615e-05, 2.6459880245965905e-05, 0.001123188529163599, 0.9931010007858276, 1.6548294752283255e-06, 1.4764574984837964e-07, 7.014992297627032e-05, 2.3817185592633905e-06], "target_probs": 0.9931010007858276}}


{"result": {"time": "2021-02-21 07:34:41.254144", "n_pass": [106, 19, 6], "n_token": 29, "loss": [0.7043056488037109, 0.005657493602484465], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def appendCMSPadding(", "str", ",", "blocksize", "#INDENT#", "'CMS padding: Pad with bytes containing the number of padding bytes\\n    Cryptographic Message Syntax (CMS) Padding\\n    Pad with bytes all of the same value as the number of padding bytes\\n    Recommended in: RFC 5652 (CMS) section 6.3.; \\n                PKCS#7 (CMS) section 10.3 (Note2)  \\n                PKCS#5 section 6.1.1 p.4, \\n                RFC 1423 (PEM) section 1.1  \\n  Each padding byte contains the number of padding bytes.\\n  '", "#NEWLINE#", "pad_len", "=", "str", ",", "blocksize", ")", "#NEWLINE#", "padding", "=", "pad_len", ")", "*", "pad_len", ")", "#NEWLINE#", "return", "(", "str", "+", "pad_len", ")"]}}
{"position": {"error_location": 25, "repair_targets": [15], "repair_candidates": [4, 12, 15, 2, 10, 25, 8, 17, 20, 27]}}
{"prediction": {"error_location": 0.49445173144340515, "repair_targets": [0.994358479976654], "repair_candidates": [0.0020608881022781134, 0.002150274347513914, 2.7911401048186235e-05, 1.7442040189052932e-05, 0.0013516824692487717, 0.994358479976654, 1.9163667275279295e-06, 1.5702558187058457e-07, 2.9129720132914372e-05, 2.1515286334761186e-06], "target_probs": 0.994358479976654}}


{"result": {"time": "2021-02-21 07:34:41.366085", "n_pass": [109, 21, 7], "n_token": 28, "loss": [0.7711206078529358, 0.003947708755731583], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def appendCMSPadding(", "str", ",", "blocksize", "#INDENT#", "'CMS padding: Pad with bytes containing the number of padding bytes\\n    Cryptographic Message Syntax (CMS) Padding\\n    Pad with bytes all of the same value as the number of padding bytes\\n    Recommended in: RFC 5652 (CMS) section 6.3.; \\n                PKCS#7 (CMS) section 10.3 (Note2)  \\n                PKCS#5 section 6.1.1 p.4, \\n                RFC 1423 (PEM) section 1.1  \\n  Each padding byte contains the number of padding bytes.\\n  '", "#NEWLINE#", "pad_len", "=", "str", ",", "blocksize", "#NEWLINE#", "padding", "=", "pad_len", ")", "*", "pad_len", ")", "#NEWLINE#", "return", "(", "str", "+", "pad_len", ")"]}}
{"position": {"error_location": 24, "repair_targets": [14], "repair_candidates": [4, 12, 14, 2, 10, 24, 8, 16, 19, 26]}}
{"prediction": {"error_location": 0.46249446272850037, "repair_targets": [0.9960600733757019], "repair_candidates": [0.001773268450051546, 0.0015694727189838886, 1.8370865291217342e-05, 1.3884736290492583e-05, 0.0005480634863488376, 0.9960600733757019, 1.0842247775144642e-06, 1.3655386510436074e-07, 1.4543531506205909e-05, 9.644030569688766e-07], "target_probs": 0.9960600733757019}}


{"result": {"time": "2021-02-21 07:34:41.760072", "n_pass": [123, 28, 8], "n_token": 27, "loss": [0.757244884967804, 0.0043412367813289165], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def appendCMSPadding(", "str", ",", "blocksize", "'CMS padding: Pad with bytes containing the number of padding bytes\\n    Cryptographic Message Syntax (CMS) Padding\\n    Pad with bytes all of the same value as the number of padding bytes\\n    Recommended in: RFC 5652 (CMS) section 6.3.; \\n                PKCS#7 (CMS) section 10.3 (Note2)  \\n                PKCS#5 section 6.1.1 p.4, \\n                RFC 1423 (PEM) section 1.1  \\n  Each padding byte contains the number of padding bytes.\\n  '", "#NEWLINE#", "pad_len", "=", "str", ",", "blocksize", "#NEWLINE#", "padding", "=", "pad_len", ")", "*", "pad_len", ")", "#NEWLINE#", "return", "(", "str", "+", "pad_len", ")"]}}
{"position": {"error_location": 23, "repair_targets": [13], "repair_candidates": [4, 11, 13, 2, 9, 23, 7, 15, 18, 25]}}
{"prediction": {"error_location": 0.46895667910575867, "repair_targets": [0.9956681728363037], "repair_candidates": [0.001640514936298132, 0.0015616357559338212, 1.551141031086445e-05, 1.5204300325422082e-05, 0.0010900429915636778, 0.9956681728363037, 8.154010515681875e-07, 1.1121432663685482e-07, 6.718519671267131e-06, 1.2417868902048212e-06], "target_probs": 0.9956681728363037}}


{"result": {"time": "2021-02-21 07:34:41.985396", "n_pass": [129, 32, 9], "n_token": 26, "loss": [0.6101697087287903, 0.002774447901174426], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def appendCMSPadding(", "str", ",", "blocksize", "'CMS padding: Pad with bytes containing the number of padding bytes\\n    Cryptographic Message Syntax (CMS) Padding\\n    Pad with bytes all of the same value as the number of padding bytes\\n    Recommended in: RFC 5652 (CMS) section 6.3.; \\n                PKCS#7 (CMS) section 10.3 (Note2)  \\n                PKCS#5 section 6.1.1 p.4, \\n                RFC 1423 (PEM) section 1.1  \\n  Each padding byte contains the number of padding bytes.\\n  '", "#NEWLINE#", "pad_len", "=", "str", "blocksize", "#NEWLINE#", "padding", "=", "pad_len", ")", "*", "pad_len", ")", "#NEWLINE#", "return", "(", "str", "+", "pad_len", ")"]}}
{"position": {"error_location": 22, "repair_targets": [12], "repair_candidates": [4, 10, 12, 2, 9, 22, 7, 14, 17, 24]}}
{"prediction": {"error_location": 0.5432586669921875, "repair_targets": [0.9972293972969055], "repair_candidates": [0.0009362676064483821, 0.001389963086694479, 2.3558064640383236e-05, 2.4243661300715758e-06, 0.0004003427748102695, 0.9972293972969055, 1.1765830549848033e-06, 1.2339511101799872e-07, 1.5450743376277387e-05, 1.3017997844144702e-06], "target_probs": 0.9972293972969055}}


{"result": {"time": "2021-02-21 07:34:42.548991", "n_pass": [163, 42, 10], "n_token": 25, "loss": [0.2896914780139923, 0.0721900537610054], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def appendCMSPadding(", "str", ",", "blocksize", "'CMS padding: Pad with bytes containing the number of padding bytes\\n    Cryptographic Message Syntax (CMS) Padding\\n    Pad with bytes all of the same value as the number of padding bytes\\n    Recommended in: RFC 5652 (CMS) section 6.3.; \\n                PKCS#7 (CMS) section 10.3 (Note2)  \\n                PKCS#5 section 6.1.1 p.4, \\n                RFC 1423 (PEM) section 1.1  \\n  Each padding byte contains the number of padding bytes.\\n  '", "#NEWLINE#", "pad_len", "=", "str", "blocksize", "#NEWLINE#", "padding", "pad_len", ")", "*", "pad_len", ")", "#NEWLINE#", "return", "(", "str", "+", "pad_len", ")"]}}
{"position": {"error_location": 21, "repair_targets": [12], "repair_candidates": [4, 10, 12, 2, 9, 21, 7, 13, 16, 23]}}
{"prediction": {"error_location": 0.7484944462776184, "repair_targets": [0.9303540587425232], "repair_candidates": [0.005534673109650612, 0.03858062997460365, 0.0037227077409625053, 4.202128911856562e-05, 0.014528494328260422, 0.9303540587425232, 0.007161302492022514, 6.408620720321778e-06, 4.946859462506836e-06, 6.482596654677764e-05], "target_probs": 0.9303540587425232}}


{"result": {"time": "2021-02-21 07:34:42.605441", "n_pass": [165, 43, 11], "n_token": 24, "loss": [0.3389725685119629, 0.039371758699417114], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def appendCMSPadding(", "str", ",", "blocksize", "'CMS padding: Pad with bytes containing the number of padding bytes\\n    Cryptographic Message Syntax (CMS) Padding\\n    Pad with bytes all of the same value as the number of padding bytes\\n    Recommended in: RFC 5652 (CMS) section 6.3.; \\n                PKCS#7 (CMS) section 10.3 (Note2)  \\n                PKCS#5 section 6.1.1 p.4, \\n                RFC 1423 (PEM) section 1.1  \\n  Each padding byte contains the number of padding bytes.\\n  '", "#NEWLINE#", "pad_len", "=", "str", "blocksize", "#NEWLINE#", "padding", "pad_len", "*", "pad_len", ")", "#NEWLINE#", "return", "(", "str", "+", "pad_len", ")"]}}
{"position": {"error_location": 20, "repair_targets": [12], "repair_candidates": [4, 10, 12, 2, 9, 20, 7, 13, 15, 22]}}
{"prediction": {"error_location": 0.7125020027160645, "repair_targets": [0.9613932371139526], "repair_candidates": [0.003134637139737606, 0.024893397465348244, 0.0008646813221275806, 3.729452146217227e-05, 0.00898855458945036, 0.9613932371139526, 0.0006647398695349693, 4.853589530284808e-07, 9.417982255399693e-06, 1.3465803931467235e-05], "target_probs": 0.9613932371139526}}


{"result": {"time": "2021-02-21 07:34:42.829628", "n_pass": [170, 47, 12], "n_token": 23, "loss": [0.5260971188545227, 0.04445218667387962], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def appendCMSPadding(", "str", ",", "blocksize", "'CMS padding: Pad with bytes containing the number of padding bytes\\n    Cryptographic Message Syntax (CMS) Padding\\n    Pad with bytes all of the same value as the number of padding bytes\\n    Recommended in: RFC 5652 (CMS) section 6.3.; \\n                PKCS#7 (CMS) section 10.3 (Note2)  \\n                PKCS#5 section 6.1.1 p.4, \\n                RFC 1423 (PEM) section 1.1  \\n  Each padding byte contains the number of padding bytes.\\n  '", "#NEWLINE#", "pad_len", "=", "str", "blocksize", "#NEWLINE#", "padding", "pad_len", "*", "pad_len", ")", "#NEWLINE#", "(", "str", "+", "pad_len", ")"]}}
{"position": {"error_location": 19, "repair_targets": [12], "repair_candidates": [4, 10, 12, 2, 9, 19, 7, 13, 15, 21]}}
{"prediction": {"error_location": 0.5909067392349243, "repair_targets": [0.9565213322639465], "repair_candidates": [0.005598911549896002, 0.028921134769916534, 0.0008512564818374813, 6.180449418025091e-05, 0.00733128422871232, 0.9565213322639465, 0.0006743346457369626, 4.3804425331472885e-07, 1.3044198567513376e-05, 2.6352669010520913e-05], "target_probs": 0.9565213322639465}}


{"result": {"time": "2021-02-21 07:34:43.000511", "n_pass": [175, 50, 13], "n_token": 22, "loss": [0.4416213035583496, 0.05401944741606712], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def appendCMSPadding(", "str", ",", "blocksize", "'CMS padding: Pad with bytes containing the number of padding bytes\\n    Cryptographic Message Syntax (CMS) Padding\\n    Pad with bytes all of the same value as the number of padding bytes\\n    Recommended in: RFC 5652 (CMS) section 6.3.; \\n                PKCS#7 (CMS) section 10.3 (Note2)  \\n                PKCS#5 section 6.1.1 p.4, \\n                RFC 1423 (PEM) section 1.1  \\n  Each padding byte contains the number of padding bytes.\\n  '", "#NEWLINE#", "pad_len", "=", "str", "blocksize", "#NEWLINE#", "padding", "pad_len", "*", "pad_len", ")", "#NEWLINE#", "(", "str", "+", "pad_len"]}}
{"position": {"error_location": 19, "repair_targets": [12], "repair_candidates": [4, 10, 12, 2, 9, 19, 7, 13, 15, 21]}}
{"prediction": {"error_location": 0.6429930925369263, "repair_targets": [0.9474136829376221], "repair_candidates": [0.008758855983614922, 0.024827629327774048, 0.0023914421908557415, 5.98426086071413e-05, 0.004851814359426498, 0.9474136829376221, 0.011607704684138298, 1.0851514389287331e-06, 7.374098913714988e-06, 8.059287210926414e-05], "target_probs": 0.9474136829376221}}


{"result": {"time": "2021-02-21 07:34:43.168701", "n_pass": [179, 53, 14], "n_token": 21, "loss": [0.5952380895614624, 0.07644478976726532], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def appendCMSPadding(", "str", "blocksize", "'CMS padding: Pad with bytes containing the number of padding bytes\\n    Cryptographic Message Syntax (CMS) Padding\\n    Pad with bytes all of the same value as the number of padding bytes\\n    Recommended in: RFC 5652 (CMS) section 6.3.; \\n                PKCS#7 (CMS) section 10.3 (Note2)  \\n                PKCS#5 section 6.1.1 p.4, \\n                RFC 1423 (PEM) section 1.1  \\n  Each padding byte contains the number of padding bytes.\\n  '", "#NEWLINE#", "pad_len", "=", "str", "blocksize", "#NEWLINE#", "padding", "pad_len", "*", "pad_len", ")", "#NEWLINE#", "(", "str", "+", "pad_len"]}}
{"position": {"error_location": 18, "repair_targets": [11], "repair_candidates": [3, 9, 11, 2, 8, 18, 6, 12, 14, 20]}}
{"prediction": {"error_location": 0.5514312386512756, "repair_targets": [0.9264040589332581], "repair_candidates": [0.014362765476107597, 0.048629842698574066, 0.0006998350727371871, 0.0002078330871881917, 0.003964487928897142, 0.9264040589332581, 0.0056526800617575645, 2.3233997126226313e-06, 6.955627213756088e-06, 6.939556624274701e-05], "target_probs": 0.9264040589332581}}


{"result": {"time": "2021-02-21 07:34:43.449748", "n_pass": [190, 58, 15], "n_token": 20, "loss": [0.7353143095970154, 0.40242210030555725], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def appendCMSPadding(", "str", "blocksize", "'CMS padding: Pad with bytes containing the number of padding bytes\\n    Cryptographic Message Syntax (CMS) Padding\\n    Pad with bytes all of the same value as the number of padding bytes\\n    Recommended in: RFC 5652 (CMS) section 6.3.; \\n                PKCS#7 (CMS) section 10.3 (Note2)  \\n                PKCS#5 section 6.1.1 p.4, \\n                RFC 1423 (PEM) section 1.1  \\n  Each padding byte contains the number of padding bytes.\\n  '", "#NEWLINE#", "pad_len", "=", "str", "blocksize", "#NEWLINE#", "padding", "pad_len", "pad_len", ")", "#NEWLINE#", "(", "str", "+", "pad_len"]}}
{"position": {"error_location": 17, "repair_targets": [11], "repair_candidates": [3, 9, 11, 2, 8, 17, 6, 12, 13, 19]}}
{"prediction": {"error_location": 0.47935473918914795, "repair_targets": [0.6686984300613403], "repair_candidates": [0.04783700779080391, 0.06312591582536697, 0.009600130841135979, 9.829566261032596e-05, 0.014925449155271053, 0.6686984300613403, 0.18714098632335663, 0.007997805252671242, 8.833281754050404e-06, 0.0005670860409736633], "target_probs": 0.6686984300613403}}




Minimal simplified tokens:

['#NEWLINE#', 'def appendCMSPadding(', 'str', 'blocksize', "'CMS padding: Pad with bytes containing the number of padding bytes\\n    Cryptographic Message Syntax (CMS) Padding\\n    Pad with bytes all of the same value as the number of padding bytes\\n    Recommended in: RFC 5652 (CMS) section 6.3.; \\n                PKCS#7 (CMS) section 10.3 (Note2)  \\n                PKCS#5 section 6.1.1 p.4, \\n                RFC 1423 (PEM) section 1.1  \\n  Each padding byte contains the number of padding bytes.\\n  '", '#NEWLINE#', 'pad_len', '=', 'str', 'blocksize', '#NEWLINE#', 'padding', 'pad_len', 'pad_len', ')', '#NEWLINE#', '(', 'str', '+', 'pad_len']
