
Original sample:

{"has_bug": true, "bug_kind": 1, "bug_kind_name": "VARIABLE_MISUSE", "source_tokens": ["#NEWLINE#", "def test_ambiguousFailureFromGenerator(", "self", ")", ":", "#NEWLINE#", "#INDENT#", "'\\n        When a generator reraises a different exception,\\n        L{Failure._findFailure} above the generator should find the reraised\\n        exception rather than original one.\\n        '", "#NEWLINE#", "def generator(", ")", ":", "#NEWLINE#", "#INDENT#", "try", ":", "#NEWLINE#", "#INDENT#", "(", "yield", ")", "#NEWLINE#", "#UNINDENT#", "except", ":", "#NEWLINE#", "#INDENT#", "[", "]", "[", "1", "]", "#NEWLINE#", "#UNINDENT#", "#UNINDENT#", "g", "=", "generator", "(", ")", "#NEWLINE#", "g", ".", "next", "(", ")", "#NEWLINE#", "f", "=", "getDivisionFailure", "(", ")", "#NEWLINE#", "try", ":", "#NEWLINE#", "#INDENT#", "self", ".", "_throwIntoGenerator", "(", "f", ",", "f", ")", "#NEWLINE#", "#UNINDENT#", "except", ":", "#NEWLINE#", "#INDENT#", "self", ".", "assertIsInstance", "(", "Failure", "(", ")", ".", "value", ",", "IndexError", ")"], "error_location": [63], "repair_targets": [35, 41], "repair_candidates": [47, 61, 63, 37, 2, 57, 71, 35, 41], "provenances": [{"datasetProvenance": {"datasetName": "ETHPy150Open", "filepath": "nlloyd/SubliminalCollaborator/libs/twisted/test/generator_failure_tests.py", "license": "apache-2.0", "note": "license: bigquery_api"}}], "txt_file": "eval__VARIABLE_MISUSE__SStuB.txt-00014-of-00300", "js_count": 45414, "results": {"model": "transformer", "prob": {"loc": [[0.04596423730254173, 1.1489949969245572e-07, 1.364155650662724e-07, 3.5758556116149975e-09, 4.083926530284998e-09, 5.924480017682754e-09, 3.950335614177902e-09, 1.747513422856173e-08, 3.0313238585932822e-09, 7.429889592458494e-08, 7.410082547565366e-10, 1.3850539604121082e-09, 2.089477035838172e-09, 1.9602930390050233e-09, 6.664983009940784e-10, 4.244846252277057e-09, 2.5606621267826313e-09, 1.8231209875096965e-09, 1.4189599495395555e-09, 1.3050139102688263e-07, 6.356633441839676e-09, 3.560677974689952e-09, 3.654097247007826e-09, 4.15829193300965e-09, 2.0907009457005188e-09, 2.3558042183680072e-09, 1.9444370558119317e-09, 2.7751541065157426e-09, 1.6216658016432461e-09, 7.503228260929973e-09, 1.7900333659781609e-06, 4.063553493693917e-09, 5.74227998484389e-09, 8.99460506076366e-09, 1.0826990859413854e-08, 2.799121716634545e-07, 9.191973404654163e-09, 5.097246180696402e-09, 3.5280011161376024e-06, 1.936961808723936e-07, 2.719289682318049e-08, 5.640195581690932e-07, 1.2162158391504363e-08, 2.952587285776076e-09, 1.2065227394941758e-07, 3.1101279773793067e-07, 2.0445327209017705e-07, 3.493765916573466e-06, 2.387336550668806e-09, 5.07263621329912e-07, 4.384467501949985e-06, 4.412490000049729e-07, 1.9572799203615432e-07, 3.252956304322652e-08, 1.3135618814885675e-07, 9.584688598351931e-08, 4.1188567223571226e-08, 8.103293680505885e-08, 1.5982648093881835e-08, 1.9994863542649455e-09, 6.99486193411758e-08, 0.6117537021636963, 1.75583181771799e-07, 0.3421906530857086, 2.3543761074051872e-07, 9.488611141250658e-08, 3.3796823117882013e-08, 9.831122582681928e-09, 1.3424615197266121e-08, 2.0090597629973672e-08, 1.0330220234777698e-08, 1.2758316358940647e-07, 1.1595719939805349e-08, 9.608204010191912e-09, 5.631915200865478e-08, 8.066114531857238e-08, 1.752238858898636e-05, 5.5221549700945616e-05, 4.0210676388596767e-07, 4.172379419742356e-08, 4.254420815641424e-08, 9.360748265407892e-08, 1.0293544505657337e-07]], "pointer": [[0.0, 0.0, 0.00011436804197728634, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.38981103897094727, 0.0, 0.0147209782153368, 0.0, 0.0, 0.0, 0.5943207740783691, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0009885715553537011, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 2.8081083655706607e-05, 0.0, 0.0, 0.0, 9.985408269130858e-07, 0.0, 2.5946224013750907e-07, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.4906911928846966e-05, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]], "target": [0.9841318130493164]}, "loss": [1.0723870992660522, 0.015995435416698456], "acc": [0.0, 0.0, 1.0, 0.0]}, "wrong_error_location": [61]}


Trace of simplified code(s):

{"result": {"time": "2021-02-21 07:10:26.979795", "n_pass": [1, 1, 1], "n_token": 83, "loss": [0.49142542481422424, 0.015995435416698456], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def test_ambiguousFailureFromGenerator(", "self", ")", ":", "#NEWLINE#", "#INDENT#", "'\\n        When a generator reraises a different exception,\\n        L{Failure._findFailure} above the generator should find the reraised\\n        exception rather than original one.\\n        '", "#NEWLINE#", "def generator(", ")", ":", "#NEWLINE#", "#INDENT#", "try", ":", "#NEWLINE#", "#INDENT#", "(", "yield", ")", "#NEWLINE#", "#UNINDENT#", "except", ":", "#NEWLINE#", "#INDENT#", "[", "]", "[", "1", "]", "#NEWLINE#", "#UNINDENT#", "#UNINDENT#", "g", "=", "generator", "(", ")", "#NEWLINE#", "g", ".", "next", "(", ")", "#NEWLINE#", "f", "=", "getDivisionFailure", "(", ")", "#NEWLINE#", "try", ":", "#NEWLINE#", "#INDENT#", "self", ".", "_throwIntoGenerator", "(", "f", ",", "f", ")", "#NEWLINE#", "#UNINDENT#", "except", ":", "#NEWLINE#", "#INDENT#", "self", ".", "assertIsInstance", "(", "Failure", "(", ")", ".", "value", ",", "IndexError", ")"]}}
{"position": {"error_location": 61, "repair_targets": [35, 41], "repair_candidates": [47, 61, 63, 37, 2, 57, 71, 35, 41]}}
{"prediction": {"error_location": 0.6117537021636963, "repair_targets": [0.38981103897094727, 0.5943207740783691], "repair_candidates": [0.00011436804197728634, 0.38981103897094727, 0.0147209782153368, 0.5943207740783691, 0.0009885715553537011, 2.8081083655706607e-05, 9.985408269130858e-07, 2.5946224013750907e-07, 1.4906911928846966e-05], "target_probs": 0.9841318130493164}}


{"result": {"time": "2021-02-21 07:10:27.612909", "n_pass": [57, 12, 2], "n_token": 77, "loss": [0.4217892587184906, 0.020601997151970863], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def test_ambiguousFailureFromGenerator(", "self", ")", ":", "#NEWLINE#", "#INDENT#", "'\\n        When a generator reraises a different exception,\\n        L{Failure._findFailure} above the generator should find the reraised\\n        exception rather than original one.\\n        '", "#NEWLINE#", "def generator(", ")", ":", "#NEWLINE#", "#INDENT#", "try", ":", "#NEWLINE#", "#INDENT#", "(", "yield", ")", "#NEWLINE#", "#UNINDENT#", "except", ":", "#NEWLINE#", "#INDENT#", "[", "]", "[", "1", "]", "#NEWLINE#", "#UNINDENT#", "#UNINDENT#", "g", "=", "generator", "(", ")", "#NEWLINE#", "g", ".", "next", "(", ")", "#NEWLINE#", "f", "=", "getDivisionFailure", "(", ")", "#NEWLINE#", "try", ":", "#NEWLINE#", "#INDENT#", "self", ".", "_throwIntoGenerator", "(", "f", ",", "f", ")", "self", ".", "assertIsInstance", "(", "Failure", "(", ")", ".", "value", ",", "IndexError", ")"]}}
{"position": {"error_location": 61, "repair_targets": [35, 41], "repair_candidates": [47, 61, 63, 37, 2, 57, 65, 35, 41]}}
{"prediction": {"error_location": 0.6558722853660583, "repair_targets": [0.5324499011039734, 0.4471588730812073], "repair_candidates": [6.693548493785784e-05, 0.5324499011039734, 0.01956605724990368, 0.4471588730812073, 0.0006760011310689151, 9.09862865228206e-06, 3.2250270010081294e-07, 9.889507737170788e-07, 7.178157102316618e-05], "target_probs": 0.9796087741851807}}


{"result": {"time": "2021-02-21 07:10:27.670937", "n_pass": [59, 13, 3], "n_token": 71, "loss": [0.4231196343898773, 0.028454110026359558], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def test_ambiguousFailureFromGenerator(", "self", ")", ":", "#NEWLINE#", "#INDENT#", "'\\n        When a generator reraises a different exception,\\n        L{Failure._findFailure} above the generator should find the reraised\\n        exception rather than original one.\\n        '", "#NEWLINE#", "def generator(", ")", ":", "#NEWLINE#", "#INDENT#", "try", ":", "#NEWLINE#", "#INDENT#", "(", "yield", ")", "#NEWLINE#", "#UNINDENT#", "except", ":", "#NEWLINE#", "#INDENT#", "[", "]", "[", "1", "]", "#NEWLINE#", "#UNINDENT#", "#UNINDENT#", "g", "=", "generator", "(", ")", "#NEWLINE#", "g", ".", "next", "(", ")", "#NEWLINE#", "f", "=", "getDivisionFailure", "(", ")", "#NEWLINE#", "try", ":", "#NEWLINE#", "#INDENT#", "self", ".", "_throwIntoGenerator", "(", "f", ",", "f", ")", "self", ".", "assertIsInstance", "(", "Failure", "("]}}
{"position": {"error_location": 61, "repair_targets": [35, 41], "repair_candidates": [47, 61, 63, 37, 2, 57, 65, 35, 41]}}
{"prediction": {"error_location": 0.6550002694129944, "repair_targets": [0.5543835163116455, 0.41756337881088257], "repair_candidates": [5.939515176578425e-05, 0.5543835163116455, 0.027349956333637238, 0.41756337881088257, 0.0005679327878169715, 1.1030682799173519e-05, 2.83351766938722e-07, 1.299934751841647e-06, 6.317318911897019e-05], "target_probs": 0.9719468951225281}}


{"result": {"time": "2021-02-21 07:10:27.728465", "n_pass": [61, 14, 4], "n_token": 66, "loss": [0.6410097479820251, 0.03800959512591362], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def test_ambiguousFailureFromGenerator(", "self", ")", ":", ")", ":", "#NEWLINE#", "#INDENT#", "try", ":", "#NEWLINE#", "#INDENT#", "(", "yield", ")", "#NEWLINE#", "#UNINDENT#", "except", ":", "#NEWLINE#", "#INDENT#", "[", "]", "[", "1", "]", "#NEWLINE#", "#UNINDENT#", "#UNINDENT#", "g", "=", "generator", "(", ")", "#NEWLINE#", "g", ".", "next", "(", ")", "#NEWLINE#", "f", "=", "getDivisionFailure", "(", ")", "#NEWLINE#", "try", ":", "#NEWLINE#", "#INDENT#", "self", ".", "_throwIntoGenerator", "(", "f", ",", "f", ")", "self", ".", "assertIsInstance", "(", "Failure", "("]}}
{"position": {"error_location": 56, "repair_targets": [30, 36], "repair_candidates": [42, 56, 58, 32, 2, 52, 60, 30, 36]}}
{"prediction": {"error_location": 0.5267602801322937, "repair_targets": [0.3962884843349457, 0.5664151906967163], "repair_candidates": [5.21580659551546e-05, 0.3962884843349457, 0.03627663105726242, 0.5664151906967163, 0.0008931179763749242, 2.0581881472025998e-05, 6.634288070017647e-07, 1.73479281784239e-06, 5.146395051269792e-05], "target_probs": 0.9627037048339844}}


{"result": {"time": "2021-02-21 07:10:27.785757", "n_pass": [62, 15, 5], "n_token": 61, "loss": [0.6658105254173279, 0.008173217996954918], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def test_ambiguousFailureFromGenerator(", "self", ")", ":", ":", "#NEWLINE#", "#INDENT#", "(", "yield", ")", "#NEWLINE#", "#UNINDENT#", "except", ":", "#NEWLINE#", "#INDENT#", "[", "]", "[", "1", "]", "#NEWLINE#", "#UNINDENT#", "#UNINDENT#", "g", "=", "generator", "(", ")", "#NEWLINE#", "g", ".", "next", "(", ")", "#NEWLINE#", "f", "=", "getDivisionFailure", "(", ")", "#NEWLINE#", "try", ":", "#NEWLINE#", "#INDENT#", "self", ".", "_throwIntoGenerator", "(", "f", ",", "f", ")", "self", ".", "assertIsInstance", "(", "Failure", "("]}}
{"position": {"error_location": 51, "repair_targets": [25, 31], "repair_candidates": [37, 51, 53, 27, 2, 47, 55, 25, 31]}}
{"prediction": {"error_location": 0.513856828212738, "repair_targets": [0.512140154838562, 0.47971993684768677], "repair_candidates": [4.6621858928119764e-05, 0.512140154838562, 0.007874232716858387, 0.47971993684768677, 0.0001534186740173027, 3.427565025049262e-05, 8.41861947264988e-07, 6.427450784940447e-07, 2.9904420443926938e-05], "target_probs": 0.9918600916862488}}


{"result": {"time": "2021-02-21 07:10:27.842835", "n_pass": [63, 16, 6], "n_token": 56, "loss": [0.4162616431713104, 0.00455677043646574], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def test_ambiguousFailureFromGenerator(", "self", ")", ":", ")", "#NEWLINE#", "#UNINDENT#", "except", ":", "#NEWLINE#", "#INDENT#", "[", "]", "[", "1", "]", "#NEWLINE#", "#UNINDENT#", "#UNINDENT#", "g", "=", "generator", "(", ")", "#NEWLINE#", "g", ".", "next", "(", ")", "#NEWLINE#", "f", "=", "getDivisionFailure", "(", ")", "#NEWLINE#", "try", ":", "#NEWLINE#", "#INDENT#", "self", ".", "_throwIntoGenerator", "(", "f", ",", "f", ")", "self", ".", "assertIsInstance", "(", "Failure", "("]}}
{"position": {"error_location": 46, "repair_targets": [20, 26], "repair_candidates": [32, 46, 48, 22, 2, 42, 50, 20, 26]}}
{"prediction": {"error_location": 0.6595076322555542, "repair_targets": [0.42559078335762024, 0.5698627829551697], "repair_candidates": [3.937506699003279e-05, 0.42559078335762024, 0.004437477793544531, 0.5698627829551697, 1.469685412303079e-05, 2.6203348170383833e-05, 1.0858904033739236e-06, 8.161668461070803e-07, 2.6757035811897367e-05], "target_probs": 0.9954535961151123}}


{"result": {"time": "2021-02-21 07:10:27.902768", "n_pass": [64, 17, 7], "n_token": 51, "loss": [0.40523070096969604, 0.005635374691337347], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def test_ambiguousFailureFromGenerator(", "self", ")", ":", "#NEWLINE#", "#INDENT#", "[", "]", "[", "1", "]", "#NEWLINE#", "#UNINDENT#", "#UNINDENT#", "g", "=", "generator", "(", ")", "#NEWLINE#", "g", ".", "next", "(", ")", "#NEWLINE#", "f", "=", "getDivisionFailure", "(", ")", "#NEWLINE#", "try", ":", "#NEWLINE#", "#INDENT#", "self", ".", "_throwIntoGenerator", "(", "f", ",", "f", ")", "self", ".", "assertIsInstance", "(", "Failure", "("]}}
{"position": {"error_location": 41, "repair_targets": [15, 21], "repair_candidates": [27, 41, 43, 17, 2, 37, 45, 15, 21]}}
{"prediction": {"error_location": 0.6668230295181274, "repair_targets": [0.42495569586753845, 0.5694247484207153], "repair_candidates": [8.813397471385542e-06, 0.42495569586753845, 0.00559976976364851, 0.5694247484207153, 8.128156423481414e-07, 4.83080748381326e-06, 3.490705751119094e-07, 1.83869744319054e-07, 4.77205503557343e-06], "target_probs": 0.9943804740905762}}


{"result": {"time": "2021-02-21 07:10:27.959738", "n_pass": [65, 18, 8], "n_token": 46, "loss": [0.2795788645744324, 0.014511101879179478], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def test_ambiguousFailureFromGenerator(", "self", ")", ":", "1", "]", "#NEWLINE#", "#UNINDENT#", "#UNINDENT#", "g", "=", "generator", "(", ")", "#NEWLINE#", "g", ".", "next", "(", ")", "#NEWLINE#", "f", "=", "getDivisionFailure", "(", ")", "#NEWLINE#", "try", ":", "#NEWLINE#", "#INDENT#", "self", ".", "_throwIntoGenerator", "(", "f", ",", "f", ")", "self", ".", "assertIsInstance", "(", "Failure", "("]}}
{"position": {"error_location": 36, "repair_targets": [10, 16], "repair_candidates": [22, 36, 38, 12, 2, 32, 40, 10, 16]}}
{"prediction": {"error_location": 0.7561020851135254, "repair_targets": [0.45010843873023987, 0.5354852676391602], "repair_candidates": [1.4284515600593295e-05, 0.45010843873023987, 0.014345310628414154, 0.5354852676391602, 2.857863364624791e-05, 2.8169029064883944e-06, 2.0837658212258248e-06, 1.3536389360524481e-06, 1.185199562314665e-05], "target_probs": 0.9855936765670776}}


{"result": {"time": "2021-02-21 07:10:28.016187", "n_pass": [66, 19, 9], "n_token": 41, "loss": [0.27250176668167114, 0.0625753104686737], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def test_ambiguousFailureFromGenerator(", "self", ")", ":", "g", "=", "generator", "(", ")", "#NEWLINE#", "g", ".", "next", "(", ")", "#NEWLINE#", "f", "=", "getDivisionFailure", "(", ")", "#NEWLINE#", "try", ":", "#NEWLINE#", "#INDENT#", "self", ".", "_throwIntoGenerator", "(", "f", ",", "f", ")", "self", ".", "assertIsInstance", "(", "Failure", "("]}}
{"position": {"error_location": 31, "repair_targets": [5, 11], "repair_candidates": [17, 31, 33, 7, 2, 27, 35, 5, 11]}}
{"prediction": {"error_location": 0.7614721059799194, "repair_targets": [0.07348517328500748, 0.8658571243286133], "repair_candidates": [1.0403386113466695e-05, 0.07348517328500748, 0.06062807887792587, 0.8658571243286133, 7.746254595986102e-06, 1.2440202681318624e-06, 4.0854069993656594e-07, 4.2473567418710445e-07, 9.41355847317027e-06], "target_probs": 0.9393423199653625}}


{"result": {"time": "2021-02-21 07:10:28.073312", "n_pass": [70, 20, 10], "n_token": 36, "loss": [0.2087961882352829, 0.14978794753551483], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def test_ambiguousFailureFromGenerator(", "self", ")", ":", "g", "=", "generator", "(", ")", "#NEWLINE#", "g", ".", "next", "(", ")", "#NEWLINE#", "f", "=", "getDivisionFailure", "#NEWLINE#", "#INDENT#", "self", ".", "_throwIntoGenerator", "(", "f", ",", "f", ")", "self", ".", "assertIsInstance", "(", "Failure", "("]}}
{"position": {"error_location": 26, "repair_targets": [5, 11], "repair_candidates": [17, 26, 28, 7, 2, 22, 30, 5, 11]}}
{"prediction": {"error_location": 0.8115606307983398, "repair_targets": [0.11176443099975586, 0.7491260766983032], "repair_candidates": [1.9152133972966112e-05, 0.11176443099975586, 0.13861268758773804, 0.7491260766983032, 0.0004453485016711056, 3.920301878679311e-06, 1.6348702729374054e-06, 3.582099907362135e-06, 2.3226590201375075e-05], "target_probs": 0.8608905076980591}}


{"result": {"time": "2021-02-21 07:10:28.187291", "n_pass": [97, 22, 11], "n_token": 33, "loss": [0.3076062798500061, 0.17637769877910614], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["#NEWLINE#", "def test_ambiguousFailureFromGenerator(", "self", ")", ":", "g", "=", "generator", "(", ")", "#NEWLINE#", "g", ".", "next", "(", ")", "#NEWLINE#", "f", "=", "getDivisionFailure", "#NEWLINE#", "#INDENT#", "self", ".", "_throwIntoGenerator", "(", "f", ",", "f", ")", "self", ".", "assertIsInstance"]}}
{"position": {"error_location": 26, "repair_targets": [5, 11], "repair_candidates": [17, 26, 28, 7, 2, 22, 30, 5, 11]}}
{"prediction": {"error_location": 0.7352047562599182, "repair_targets": [0.10971903055906296, 0.7285822629928589], "repair_candidates": [1.457718917663442e-05, 0.10971903055906296, 0.1614479124546051, 0.7285822629928589, 0.00022367577184922993, 2.4001917608984513e-06, 1.0291307717125164e-06, 1.1322067621222232e-06, 7.881394594733138e-06], "target_probs": 0.8383013010025024}}


{"result": {"time": "2021-02-21 07:10:28.246605", "n_pass": [98, 23, 12], "n_token": 31, "loss": [0.5306409597396851, 0.007550059352070093], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["self", ")", ":", "g", "=", "generator", "(", ")", "#NEWLINE#", "g", ".", "next", "(", ")", "#NEWLINE#", "f", "=", "getDivisionFailure", "#NEWLINE#", "#INDENT#", "self", ".", "_throwIntoGenerator", "(", "f", ",", "f", ")", "self", ".", "assertIsInstance"]}}
{"position": {"error_location": 24, "repair_targets": [3, 9], "repair_candidates": [15, 24, 26, 5, 0, 20, 28, 3, 9]}}
{"prediction": {"error_location": 0.5882278680801392, "repair_targets": [0.7076520919799805, 0.2848263084888458], "repair_candidates": [0.00032477168133482337, 0.7076520919799805, 0.007062466815114021, 0.2848263084888458, 9.23805491765961e-05, 2.6015379717136966e-06, 3.502202616800787e-07, 6.990287602093304e-07, 3.838421616819687e-05], "target_probs": 0.9924783706665039}}


{"result": {"time": "2021-02-21 07:10:28.303130", "n_pass": [102, 24, 13], "n_token": 29, "loss": [0.3424749970436096, 0.007629456929862499], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["self", ")", ":", "g", "=", "generator", "#NEWLINE#", "g", ".", "next", "(", ")", "#NEWLINE#", "f", "=", "getDivisionFailure", "#NEWLINE#", "#INDENT#", "self", ".", "_throwIntoGenerator", "(", "f", ",", "f", ")", "self", ".", "assertIsInstance"]}}
{"position": {"error_location": 22, "repair_targets": [3, 7], "repair_candidates": [13, 22, 24, 5, 0, 18, 26, 3, 7]}}
{"prediction": {"error_location": 0.7100108861923218, "repair_targets": [0.8290334343910217, 0.1633661389350891], "repair_candidates": [0.0006282355752773583, 0.8290334343910217, 0.006509755272418261, 0.1633661389350891, 0.00038524300907738507, 1.55570924107451e-05, 9.964246601157356e-07, 1.9081162463407964e-06, 5.870435052202083e-05], "target_probs": 0.9923995733261108}}


{"result": {"time": "2021-02-21 07:10:28.359706", "n_pass": [104, 25, 14], "n_token": 26, "loss": [0.1638566255569458, 0.0035996176302433014], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["self", ")", ":", "g", "=", "generator", "#NEWLINE#", "g", ")", "#NEWLINE#", "f", "=", "getDivisionFailure", "#NEWLINE#", "#INDENT#", "self", ".", "_throwIntoGenerator", "(", "f", ",", "f", ")", "self", ".", "assertIsInstance"]}}
{"position": {"error_location": 19, "repair_targets": [3, 7], "repair_candidates": [10, 19, 21, 5, 0, 15, 23, 3, 7]}}
{"prediction": {"error_location": 0.8488637208938599, "repair_targets": [0.9241774678230286, 0.07222936302423477], "repair_candidates": [8.36099061416462e-05, 0.9241774678230286, 0.00347559479996562, 0.07222936302423477, 3.112067133770324e-05, 1.4092571518631303e-06, 9.916038123947146e-08, 1.0991630716716827e-07, 1.2611783404281596e-06], "target_probs": 0.9964068531990051}}


{"result": {"time": "2021-02-21 07:10:28.415760", "n_pass": [106, 26, 15], "n_token": 23, "loss": [0.25747349858283997, 0.02508452720940113], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["self", ")", ":", "g", "=", "generator", "#NEWLINE#", "g", ")", "#NEWLINE#", "f", "#INDENT#", "self", ".", "_throwIntoGenerator", "(", "f", ",", "f", ")", "self", ".", "assertIsInstance"]}}
{"position": {"error_location": 16, "repair_targets": [3, 7], "repair_candidates": [10, 16, 18, 5, 0, 12, 20, 3, 7]}}
{"prediction": {"error_location": 0.7730019688606262, "repair_targets": [0.5192150473594666, 0.45601245760917664], "repair_candidates": [3.208824637113139e-05, 0.5192150473594666, 0.024733809754252434, 0.45601245760917664, 2.0689049051725306e-06, 2.8914723770867568e-06, 4.788081042761405e-08, 1.869172727708701e-08, 1.5748016721772728e-06], "target_probs": 0.9752274751663208}}


{"result": {"time": "2021-02-21 07:10:28.473088", "n_pass": [135, 27, 16], "n_token": 22, "loss": [0.30344218015670776, 0.08658404648303986], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["self", ")", ":", "g", "=", "generator", "#NEWLINE#", "g", ")", "#NEWLINE#", "f", "self", ".", "_throwIntoGenerator", "(", "f", ",", "f", ")", "self", ".", "assertIsInstance"]}}
{"position": {"error_location": 15, "repair_targets": [3, 7], "repair_candidates": [10, 15, 17, 5, 0, 11, 19, 3, 7]}}
{"prediction": {"error_location": 0.7382726073265076, "repair_targets": [0.6303110718727112, 0.28674736618995667], "repair_candidates": [0.00012690202856902033, 0.6303110718727112, 0.08279701322317123, 0.28674736618995667, 1.0815089979132608e-07, 1.084175437426893e-05, 1.9102204262821942e-08, 7.94284389371569e-08, 6.619509804295376e-06], "target_probs": 0.9170584678649902}}


{"result": {"time": "2021-02-21 07:10:28.529579", "n_pass": [137, 28, 17], "n_token": 20, "loss": [0.4362875521183014, 0.03438042476773262], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["self", ")", ":", "g", "=", "generator", "#NEWLINE#", "g", ")", "#NEWLINE#", "f", "self", "(", "f", ",", "f", ")", "self", ".", "assertIsInstance"]}}
{"position": {"error_location": 13, "repair_targets": [3, 7], "repair_candidates": [10, 13, 15, 5, 0, 11, 17, 3, 7]}}
{"prediction": {"error_location": 0.6464319229125977, "repair_targets": [0.4854717552661896, 0.48073211312294006], "repair_candidates": [7.866782834753394e-05, 0.4854717552661896, 0.03365383297204971, 0.48073211312294006, 1.1183517045765257e-07, 5.098205292597413e-05, 1.0358293422996212e-07, 3.20363170658311e-07, 1.2154247997386847e-05], "target_probs": 0.9662038683891296}}


{"result": {"time": "2021-02-21 07:10:28.644512", "n_pass": [143, 30, 18], "n_token": 19, "loss": [0.4669594168663025, 0.024386918172240257], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["self", ":", "g", "=", "generator", "#NEWLINE#", "g", ")", "#NEWLINE#", "f", "self", "(", "f", ",", "f", ")", "self", ".", "assertIsInstance"]}}
{"position": {"error_location": 12, "repair_targets": [2, 6], "repair_candidates": [9, 12, 14, 4, 0, 10, 16, 2, 6]}}
{"prediction": {"error_location": 0.6269055008888245, "repair_targets": [0.14010518789291382, 0.8358028531074524], "repair_candidates": [9.80990007519722e-05, 0.14010518789291382, 0.023944921791553497, 0.8358028531074524, 2.364990621117613e-07, 4.082582745468244e-05, 1.511043876689655e-07, 1.2126686499414063e-07, 7.53330141378683e-06], "target_probs": 0.9759080410003662}}


{"result": {"time": "2021-02-21 07:10:28.756032", "n_pass": [146, 32, 19], "n_token": 18, "loss": [0.2295767068862915, 0.29374033212661743], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["self", ":", "g", "generator", "#NEWLINE#", "g", ")", "#NEWLINE#", "f", "self", "(", "f", ",", "f", ")", "self", ".", "assertIsInstance"]}}
{"position": {"error_location": 11, "repair_targets": [2, 5], "repair_candidates": [8, 11, 13, 3, 0, 9, 15, 2, 5]}}
{"prediction": {"error_location": 0.7948700189590454, "repair_targets": [0.33335256576538086, 0.41211745142936707], "repair_candidates": [0.0001098667416954413, 0.33335256576538086, 0.2543416917324066, 0.41211745142936707, 1.6405165297328494e-06, 6.23619562247768e-05, 8.475039408040175e-07, 5.919087584516092e-07, 1.3006529115955345e-05], "target_probs": 0.7454700469970703}}


{"result": {"time": "2021-02-21 07:10:28.927647", "n_pass": [151, 35, 20], "n_token": 17, "loss": [0.06607317924499512, 0.548510730266571], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["self", ":", "g", "generator", "#NEWLINE#", "g", ")", "f", "self", "(", "f", ",", "f", ")", "self", ".", "assertIsInstance"]}}
{"position": {"error_location": 10, "repair_targets": [2, 5], "repair_candidates": [7, 10, 12, 3, 0, 8, 14, 2, 5]}}
{"prediction": {"error_location": 0.9360622763633728, "repair_targets": [0.2620556652545929, 0.3157540261745453], "repair_candidates": [0.00028742998256348073, 0.2620556652545929, 0.4215688407421112, 0.3157540261745453, 2.9129998893040465e-06, 0.0002863973204512149, 8.074391189438757e-06, 1.4997048310760874e-05, 2.1746989659732208e-05], "target_probs": 0.5778096914291382}}


{"result": {"time": "2021-02-21 07:10:29.151722", "n_pass": [164, 39, 21], "n_token": 16, "loss": [0.23857806622982025, 0.6191598176956177], "accuracy": [0.0, 1.0, 1.0, 1.0]}}
{"sample": {"has_bug": true, "source_tokens": ["self", ":", "g", "generator", "#NEWLINE#", "g", "f", "self", "(", "f", ",", "f", ")", "self", ".", "assertIsInstance"]}}
{"position": {"error_location": 9, "repair_targets": [2, 5], "repair_candidates": [6, 9, 11, 3, 0, 7, 13, 2, 5]}}
{"prediction": {"error_location": 0.7877472043037415, "repair_targets": [0.27814632654190063, 0.2602502703666687], "repair_candidates": [0.00033349922159686685, 0.27814632654190063, 0.4560909867286682, 0.2602502703666687, 8.065652764344122e-06, 0.004684140905737877, 3.6997855659137713e-06, 2.7191403205506504e-05, 0.00045585111365653574], "target_probs": 0.5383965969085693}}




Minimal simplified tokens:

['self', ':', 'g', 'generator', '#NEWLINE#', 'g', 'f', 'self', '(', 'f', ',', 'f', ')', 'self', '.', 'assertIsInstance']
