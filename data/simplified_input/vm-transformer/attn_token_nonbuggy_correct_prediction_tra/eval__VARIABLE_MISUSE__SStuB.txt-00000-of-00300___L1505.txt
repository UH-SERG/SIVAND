
Original sample:

{"has_bug": false, "bug_kind": 0, "bug_kind_name": "NONE", "source_tokens": ["#NEWLINE#", "def run(", "self", ",", "**kwargs", ")", ":", "#NEWLINE#", "#INDENT#", "src_cloud", "=", "self", ".", "src_cloud", "#NEWLINE#", "dst_cloud", "=", "self", ".", "dst_cloud", "#NEWLINE#", "network_src", "=", "src_cloud", ".", "resources", "[", "utl", ".", "NETWORK_RESOURCE", "]", "#NEWLINE#", "identity_dst", "=", "dst_cloud", ".", "resources", "[", "utl", ".", "IDENTITY_RESOURCE", "]", "#NEWLINE#", "network_dst", "=", "dst_cloud", ".", "resources", "[", "utl", ".", "NETWORK_RESOURCE", "]", "#NEWLINE#", "search_opts_tenant", "=", "kwargs", ".", "get", "(", "'search_opts_tenant'", ",", "{", "#NEWLINE#", "#INDENT#", "#NEWLINE#", "#UNINDENT#", "}", ")", "#NEWLINE#", "tenants_src", "=", "self", ".", "get_src_tenants", "(", "search_opts_tenant", ")", "#NEWLINE#", "list_quotas", "=", "network_src", ".", "list_quotas", "(", ")", "#NEWLINE#", "tenants_without_quotas", "=", "self", ".", "get_tenants_without_quotas", "(", "tenants_src", ",", "list_quotas", ")", "#NEWLINE#", "if", "(", "not", "tenants_without_quotas", ")", ":", "#NEWLINE#", "#INDENT#", "LOG", ".", "info", "(", "'On SRC cloud all tenants have custom quotas for network'", ")", "#NEWLINE#", "LOG", ".", "info", "(", "'Difference between clouds configs default quotas will not calculated'", ")", "#NEWLINE#", "LOG", ".", "info", "(", "'Migration can proceed'", ")", "#NEWLINE#", "return", "#NEWLINE#", "#UNINDENT#", "LOG", ".", "info", "(", "'Checking default quota configuration on source and destination cloud'", ")", "#NEWLINE#", "quot", "=", "network_src", ".", "show_quota", "(", "tenants_without_quotas", "[", "0", "]", ")", "#NEWLINE#", "dst_temp_tenant", "=", "identity_dst", ".", "create_tenant", "(", "'Test Tenant For Quotas'", ")", "#NEWLINE#", "quot_default_dst", "=", "network_dst", ".", "show_quota", "(", "dst_temp_tenant", ".", "id", ")", "#NEWLINE#", "is_configs_different", "=", "False", "#NEWLINE#", "identity_dst", ".", "delete_tenant", "(", "dst_temp_tenant", ")", "#NEWLINE#", "for", "(", "item_quot", ",", "val_quot", ")", "in", "quot", ".", "iteritems", "(", ")", ":", "#NEWLINE#", "#INDENT#", "if", "(", "val_quot", "!=", "quot_default_dst", "[", "item_quot", "]", ")", ":", "#NEWLINE#", "#INDENT#", "is_configs_different", "=", "True", "#NEWLINE#", "LOG", ".", "info", "(", "'Item %s in quotas is different (SRC CLOUD: %s, DST CLOUD: %s)'", ",", "item_quot", ",", "val_quot", ",", "quot_default_dst", "[", "item_quot", "]", ")", "#NEWLINE#", "#UNINDENT#", "#UNINDENT#", "if", "(", "not", "is_configs_different", ")", ":", "#NEWLINE#", "#INDENT#", "LOG", ".", "info", "(", "'Configs on clouds is equals'", ")"], "error_location": [0], "repair_targets": [], "repair_candidates": [9, 13, 23, 32, 151, 173, 54, 76, 79, 83, 95, 137, 187, 158, 199, 221, 182, 201, 217, 223, 2, 11, 17, 72, 89, 70, 93, 43, 160, 184, 197, 219, 87, 101, 143, 149, 164, 177, 169, 207, 232, 21, 81, 139, 15, 19, 34, 45, 56], "provenances": [{"datasetProvenance": {"datasetName": "ETHPy150Open", "filepath": "MirantisWorkloadMobility/CloudFerry/cloudferry/lib/os/actions/check_config_quota_neutron.py", "license": "apache-2.0", "note": "license: bigquery_api"}}], "txt_file": "eval__VARIABLE_MISUSE__SStuB.txt-00000-of-00300", "js_count": 1505, "results": {"model": "transformer", "prob": {"loc": [[0.8568539023399353, 3.607801772886887e-06, 1.8074714489557664e-06, 4.0824438940489927e-08, 2.026856918746489e-06, 3.986573560155193e-08, 5.96662701468631e-08, 7.126395473733282e-08, 6.384794914993108e-08, 2.3642137421120424e-06, 1.2123875592351396e-07, 0.0005021999822929502, 6.904623717218783e-08, 4.120360941328727e-08, 2.2993297932316636e-07, 3.839518285531085e-06, 2.6950285558768883e-08, 0.0038077288772910833, 6.06322458907016e-08, 9.132375566878181e-08, 2.556120932695194e-07, 1.2950091559105203e-06, 7.148504721499194e-08, 0.0002934347721748054, 8.973384524324501e-08, 1.863806531332557e-08, 1.2353532952147361e-07, 7.371769470410072e-07, 2.620051304802473e-07, 4.794777197503208e-08, 2.437848820591171e-07, 1.2424732176441466e-07, 1.0713205256251968e-06, 4.677456999502283e-08, 0.003247347194701433, 9.699257930151362e-08, 1.3528805631324303e-08, 3.724061770071785e-08, 1.020472836898989e-06, 2.973766868308303e-07, 6.258746765297474e-08, 4.5549577976089495e-07, 1.1440786096272859e-07, 1.2473772130761063e-06, 2.106534324752829e-08, 0.0018796516815200448, 1.0706673236882125e-07, 3.752532506950956e-08, 1.014166031154673e-07, 8.19082003999938e-07, 7.018290375526703e-07, 6.093134174989245e-08, 1.3492103789758403e-07, 2.9175063787079125e-07, 3.684561306727119e-05, 9.23146359355087e-08, 6.860035500722006e-05, 6.501739591158184e-08, 1.6547819114975937e-08, 1.62402869818834e-07, 0.003292424837127328, 1.0891282897773635e-07, 2.2992455797066214e-06, 2.6011198883679754e-07, 1.370975013514908e-07, 1.4747995180641738e-07, 1.2479286226607655e-07, 1.8484711006294674e-07, 1.9974160636593297e-07, 1.0699650232481872e-07, 2.464924364176113e-06, 7.359459885947217e-08, 3.8172632343957957e-07, 3.736705522783268e-08, 1.5882112336385035e-07, 1.8178462823925656e-07, 0.0010707598412409425, 1.2253407248863368e-06, 1.846002959382531e-07, 6.4342893892899156e-06, 6.709764477363933e-08, 1.997842218770529e-06, 1.1807795630147666e-07, 4.793106427314342e-07, 2.0942425749126414e-07, 6.224755111361446e-07, 1.8367379084338609e-07, 4.897087364952313e-06, 1.656901957858281e-07, 2.8209067295392742e-06, 5.6148216742712975e-08, 1.2795709380952758e-07, 3.4538234672254475e-07, 0.00047028748667798936, 7.284656362571695e-07, 0.00016389100346714258, 4.0619678998154995e-07, 2.7624236054180074e-07, 2.0736590045089542e-07, 3.742699163922225e-07, 6.059909196665103e-07, 0.00050628453027457, 2.702627739381569e-07, 4.733304308501829e-07, 2.7132466584589565e-07, 1.411434169540371e-07, 4.0076077567618995e-08, 4.664983777047382e-08, 1.625590755338635e-07, 2.694107195111428e-07, 1.9432047793088714e-06, 6.165961394799524e-07, 2.9464740691764746e-07, 3.2403750793719155e-08, 7.3588694249338e-08, 1.1805452970747865e-07, 3.759257936053473e-07, 1.366293872706592e-06, 4.3032829921685334e-07, 3.306623739263159e-07, 3.925329039589087e-08, 8.275440421812164e-08, 2.2153091094878619e-07, 2.413872266515682e-07, 1.1373908819223288e-06, 4.407433493724966e-07, 3.1390729304803244e-07, 2.25079617166557e-07, 2.415781352738122e-07, 2.0502218944784545e-07, 3.178543295234704e-08, 2.9244549892837313e-08, 4.807542808293874e-08, 1.287674820105167e-07, 2.6087504920724314e-06, 4.891376761406718e-07, 3.159363473059784e-07, 7.696206694163266e-07, 5.776174205607276e-08, 1.2521400094556157e-06, 6.803116292530831e-08, 7.564480597466172e-08, 2.749167720139667e-07, 0.004376552067697048, 1.7208650433531147e-06, 0.0001042613439494744, 5.922591981288861e-07, 6.424543244065717e-07, 3.0067781153775286e-07, 1.1332987014611717e-05, 8.680365226609865e-08, 7.24008771157969e-07, 9.896984209945003e-08, 7.0948765085177e-08, 6.082025834075466e-07, 1.6781340264060418e-06, 6.121246087786858e-07, 2.8835216880906955e-07, 2.4838138870109105e-06, 3.202782750122424e-08, 1.3671606211573817e-06, 9.373118814437476e-08, 9.78586101041401e-08, 7.616222319484223e-08, 0.006963435560464859, 3.5151893484908214e-07, 1.5860089774832886e-07, 2.3179826769137435e-07, 3.6324573216006684e-07, 2.0210854927427135e-06, 5.53178324480541e-07, 2.7809837774839252e-06, 1.9127743655644736e-07, 3.256986360611336e-07, 8.277113749954879e-08, 1.349007163753413e-07, 2.2907586583187367e-07, 0.002506905933842063, 1.1955776244576555e-06, 7.013526897026168e-07, 1.9622686977527337e-06, 6.817560205263362e-08, 1.8036171240964904e-05, 4.563834409054834e-06, 3.2404732337454334e-05, 2.5758731680980418e-06, 2.787410551263747e-07, 3.1528365980193485e-06, 2.1100220237713074e-07, 4.701632576598058e-07, 2.4692253646207973e-06, 1.0058367934107082e-06, 1.4926216636013123e-06, 5.162555680726655e-07, 2.811062813634635e-07, 1.562720655101657e-07, 1.9007329399300943e-07, 0.020994631573557854, 9.435184438189026e-07, 0.01257441844791174, 9.107877758651739e-07, 0.00729539105668664, 3.852577492580167e-07, 1.2871536227976321e-06, 8.537972462363541e-07, 2.6526069518695294e-07, 1.3282750899179518e-07, 1.6069147932284977e-06, 1.9302663076814497e-06, 7.004031886026496e-06, 1.481272278169854e-07, 2.4944911913848955e-08, 6.650454764667302e-08, 3.1107913400774123e-07, 9.052025689015863e-07, 9.42585029406473e-05, 4.010953489341773e-06, 0.040492139756679535, 1.0770409062388353e-06, 0.010603713802993298, 1.9225366543196287e-07, 0.010992760770022869, 5.796379696221265e-07, 0.00967062171548605, 1.4590153796234517e-07, 4.834976152778836e-07, 2.0834774261402345e-07, 3.155346632865985e-07, 4.147802599163697e-07, 2.6492699589653057e-07, 1.8209545942227123e-06, 1.3974279227113584e-06, 0.0009154833969660103, 5.9766684898932e-06, 1.7060847312677652e-06, 4.99972372836055e-07, 3.416102742903604e-07, 5.6891188648933166e-08, 8.703359810624534e-08, 1.0475822875832819e-07, 2.8599470169865526e-07, 1.076141961675603e-05, 1.8736709535005502e-06]], "pointer": [[0.0, 0.0, 0.009133011102676392, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.046789150685071945, 0.0, 0.0003407282929401845, 0.0, 0.0011056074872612953, 0.0, 0.019040752202272415, 0.0, 0.0010863759089261293, 0.0, 0.0011041975812986493, 0.0, 0.060624364763498306, 0.0, 0.006452294532209635, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.03240925446152687, 0.0, 0.001234501600265503, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.052773624658584595, 0.0, 0.0018978507723659277, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.01050223596394062, 0.0, 0.002661283826455474, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.009081671945750713, 0.0, 0.00012130702816648409, 0.0, 0.0, 0.0, 0.00010532664600759745, 0.0, 0.0, 0.02051040157675743, 0.0, 0.00024302612291648984, 0.0, 0.0010416326113045216, 0.0, 0.0, 0.0, 0.057303354144096375, 0.0, 0.0002387482236372307, 0.0, 0.0, 0.0, 0.004598685540258884, 0.0, 0.00015374973008874804, 0.0, 0.0, 0.0, 0.0, 0.0, 0.000753084197640419, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.06735477596521378, 0.0, 0.00046640218351967633, 0.0, 0.0, 0.0, 0.005475267302244902, 0.0, 0.0, 0.0, 0.0, 0.0, 0.03420082852244377, 0.0, 0.0007806715439073741, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.09697656333446503, 0.0, 0.0007761824526824057, 0.0, 0.0, 0.0, 0.0008737383177503943, 0.0, 0.0, 0.0, 0.0, 0.03292974457144737, 0.0, 0.0, 0.0, 0.024059949442744255, 0.0, 0.0, 0.0, 0.0018125433707609773, 0.0, 0.0, 0.0, 0.0, 0.17245227098464966, 0.0, 0.08877471834421158, 0.0, 0.0, 0.00044794593122787774, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.032743729650974274, 0.0, 0.005723298992961645, 0.0, 0.00557700963690877, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0119734276086092, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.02051694504916668, 0.0, 0.041442181915044785, 0.0, 0.005787307862192392, 0.0, 0.006411120295524597, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0011371374130249023, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]], "target": [0.0]}, "loss": [0.1544881910085678, 0.0], "acc": [1.0, 0.0, 0.0, 0.0]}}


All source tokens:

['#NEWLINE#', 'def run(', 'self', ',', '**kwargs', ')', ':', '#NEWLINE#', '#INDENT#', 'src_cloud', '=', 'self', '.', 'src_cloud', '#NEWLINE#', 'dst_cloud', '=', 'self', '.', 'dst_cloud', '#NEWLINE#', 'network_src', '=', 'src_cloud', '.', 'resources', '[', 'utl', '.', 'NETWORK_RESOURCE', ']', '#NEWLINE#', 'identity_dst', '=', 'dst_cloud', '.', 'resources', '[', 'utl', '.', 'IDENTITY_RESOURCE', ']', '#NEWLINE#', 'network_dst', '=', 'dst_cloud', '.', 'resources', '[', 'utl', '.', 'NETWORK_RESOURCE', ']', '#NEWLINE#', 'search_opts_tenant', '=', 'kwargs', '.', 'get', '(', "'search_opts_tenant'", ',', '{', '#NEWLINE#', '#INDENT#', '#NEWLINE#', '#UNINDENT#', '}', ')', '#NEWLINE#', 'tenants_src', '=', 'self', '.', 'get_src_tenants', '(', 'search_opts_tenant', ')', '#NEWLINE#', 'list_quotas', '=', 'network_src', '.', 'list_quotas', '(', ')', '#NEWLINE#', 'tenants_without_quotas', '=', 'self', '.', 'get_tenants_without_quotas', '(', 'tenants_src', ',', 'list_quotas', ')', '#NEWLINE#', 'if', '(', 'not', 'tenants_without_quotas', ')', ':', '#NEWLINE#', '#INDENT#', 'LOG', '.', 'info', '(', "'On SRC cloud all tenants have custom quotas for network'", ')', '#NEWLINE#', 'LOG', '.', 'info', '(', "'Difference between clouds configs default quotas will not calculated'", ')', '#NEWLINE#', 'LOG', '.', 'info', '(', "'Migration can proceed'", ')', '#NEWLINE#', 'return', '#NEWLINE#', '#UNINDENT#', 'LOG', '.', 'info', '(', "'Checking default quota configuration on source and destination cloud'", ')', '#NEWLINE#', 'quot', '=', 'network_src', '.', 'show_quota', '(', 'tenants_without_quotas', '[', '0', ']', ')', '#NEWLINE#', 'dst_temp_tenant', '=', 'identity_dst', '.', 'create_tenant', '(', "'Test Tenant For Quotas'", ')', '#NEWLINE#', 'quot_default_dst', '=', 'network_dst', '.', 'show_quota', '(', 'dst_temp_tenant', '.', 'id', ')', '#NEWLINE#', 'is_configs_different', '=', 'False', '#NEWLINE#', 'identity_dst', '.', 'delete_tenant', '(', 'dst_temp_tenant', ')', '#NEWLINE#', 'for', '(', 'item_quot', ',', 'val_quot', ')', 'in', 'quot', '.', 'iteritems', '(', ')', ':', '#NEWLINE#', '#INDENT#', 'if', '(', 'val_quot', '!=', 'quot_default_dst', '[', 'item_quot', ']', ')', ':', '#NEWLINE#', '#INDENT#', 'is_configs_different', '=', 'True', '#NEWLINE#', 'LOG', '.', 'info', '(', "'Item %s in quotas is different (SRC CLOUD: %s, DST CLOUD: %s)'", ',', 'item_quot', ',', 'val_quot', ',', 'quot_default_dst', '[', 'item_quot', ']', ')', '#NEWLINE#', '#UNINDENT#', '#UNINDENT#', 'if', '(', 'not', 'is_configs_different', ')', ':', '#NEWLINE#', '#INDENT#', 'LOG', '.', 'info', '(', "'Configs on clouds is equals'", ')']


All attention probs:

[0.008694423362612724, 0.007462179288268089, 0.027936365455389023, 0.010959913022816181, 0.015518389642238617, 0.00840207189321518, 0.005408854689449072, 0.0052191694267094135, 0.0049495333805680275, 0.012197638861835003, 0.006561710964888334, 0.013800679706037045, 0.004621521569788456, 0.0050616757944226265, 0.007367623504251242, 0.011954073794186115, 0.007148613687604666, 0.010857611894607544, 0.004070713650435209, 0.005280304700136185, 0.005675382446497679, 0.009254342876374722, 0.00385642284527421, 0.011187191121280193, 0.0034129838459193707, 0.0036230937112122774, 0.003166853915899992, 0.00575402332469821, 0.00251348246820271, 0.0035380427725613117, 0.0027271490544080734, 0.003674856387078762, 0.0068266550078988075, 0.003018267685547471, 0.008557752706110477, 0.002125522820279002, 0.002894520992413163, 0.002731171902269125, 0.00524212745949626, 0.0030526139307767153, 0.003847128711640835, 0.0034801610745489597, 0.005008551757782698, 0.006385944318026304, 0.0030663416255265474, 0.006438056938350201, 0.0022245324216783047, 0.0028808722272515297, 0.002253711922094226, 0.005901619326323271, 0.0022308172192424536, 0.0020882701501250267, 0.001532779773697257, 0.002909818897023797, 0.00796285830438137, 0.002188435522839427, 0.006989524699747562, 0.0016635212814435363, 0.0022602220997214317, 0.001979091437533498, 0.007512565702199936, 0.0018593869172036648, 0.0020941642578691244, 0.0022799542639404535, 0.002269050804898143, 0.002469670493155718, 0.0029613550286740065, 0.0036127916537225246, 0.0028390376828610897, 0.002989726373925805, 0.007460497319698334, 0.002086668275296688, 0.005142086651176214, 0.0015294888289645314, 0.0021289633587002754, 0.001859357813373208, 0.009001608937978745, 0.0015455507673323154, 0.0028407282661646605, 0.007328175939619541, 0.0023085535503923893, 0.004304975271224976, 0.0014237245777621865, 0.0019149841973558068, 0.0019383379258215427, 0.00194663240108639, 0.0030085458420217037, 0.009837191551923752, 0.002333490876480937, 0.005197355058044195, 0.001355521846562624, 0.001945882453583181, 0.001932395389303565, 0.008290690369904041, 0.0018978058360517025, 0.009476175531744957, 0.0019938782788813114, 0.0025477763265371323, 0.0028048960957676172, 0.002832213882356882, 0.001916975830681622, 0.009129125624895096, 0.0019428110681474209, 0.002659786958247423, 0.0027255574241280556, 0.0023601772263646126, 0.002333303913474083, 0.0012496404815465212, 0.002235354157164693, 0.0021472573280334473, 0.002464628778398037, 0.002120036631822586, 0.0032523400150239468, 0.002154373098164797, 0.0012207191903144121, 0.0021115292329341173, 0.001965467119589448, 0.0037654172629117966, 0.0014010461745783687, 0.002723271492868662, 0.0030968752689659595, 0.0016006625955924392, 0.0027449121698737144, 0.00233154627494514, 0.002177261747419834, 0.0017173370579257607, 0.0030034673400223255, 0.0020966657903045416, 0.0026710855308920145, 0.0027751477900892496, 0.0023115931544452906, 0.00121097092051059, 0.002204596996307373, 0.0019248878816142678, 0.004110656678676605, 0.001308532664552331, 0.002743585268035531, 0.006960137747228146, 0.0021766810677945614, 0.0040636220946908, 0.0011591487564146519, 0.0019483125070109963, 0.0018302295356988907, 0.009092514403164387, 0.0017290666000917554, 0.004048234783113003, 0.0016198772937059402, 0.0012808612082153559, 0.002606236143037677, 0.008198929950594902, 0.002747707301750779, 0.0052291820757091045, 0.0018659482011571527, 0.00209576403722167, 0.00281937955878675, 0.002069297945126891, 0.0020797024480998516, 0.003159475512802601, 0.008649477735161781, 0.0036040088161826134, 0.005909017287194729, 0.0013656120281666517, 0.0020611933432519436, 0.0020444239489734173, 0.013105983845889568, 0.0013697397662326694, 0.0020487976726144552, 0.0011779485503211617, 0.002562884474173188, 0.006253373809158802, 0.002035347744822502, 0.0020048129372298717, 0.002874600002542138, 0.007182545028626919, 0.001640687114559114, 0.002187777543440461, 0.0021894953679293394, 0.008707505650818348, 0.0015426385216414928, 0.002660295693203807, 0.002926848828792572, 0.0030269373673945665, 0.01570628024637699, 0.0036697315517812967, 0.008825220167636871, 0.004980891942977905, 0.004310086369514465, 0.0057402243837714195, 0.003789248177781701, 0.0023942457046359777, 0.00346549553796649, 0.0022904453799128532, 0.002731079002842307, 0.003278113203123212, 0.0027946687769144773, 0.003213681047782302, 0.0021441502030938864, 0.015443303622305393, 0.0019299110863357782, 0.012580650858581066, 0.0015697964699938893, 0.00900025013834238, 0.0015427012694999576, 0.0013301699655130506, 0.0017373234732076526, 0.0022586521226912737, 0.002171907341107726, 0.006372084375470877, 0.0020516582299023867, 0.002572716446593404, 0.0026612719520926476, 0.003187955357134342, 0.001475241151638329, 0.0022046463564038277, 0.0021614795550704002, 0.0034897157456725836, 0.001778217381797731, 0.01428863126784563, 0.0016929497942328453, 0.011060886085033417, 0.0018014834495261312, 0.013609398156404495, 0.0019389366498216987, 0.012561293318867683, 0.002651366638019681, 0.0028299849946051836, 0.0033520907163619995, 0.0029641950968652964, 0.002784838667139411, 0.0027027034666389227, 0.0025381348095834255, 0.0018898304551839828, 0.014016377739608288, 0.0016767942579463124, 0.0016097859479486942, 0.002080473816022277, 0.0022708119358867407, 0.00239379471167922, 0.0011384784011170268, 0.0018192860297858715, 0.0015878095291554928, 0.0036889107432216406, 0.001677033957093954]


Top-k source tokens:

['self', 'item_quot', '**kwargs', 'val_quot', 'item_quot', 'is_configs_different', 'self', 'quot_default_dst', 'dst_temp_tenant', 'quot_default_dst']


Top-k attention probs:

[0.027936365455389023, 0.01570628024637699, 0.015518389642238617, 0.015443303622305393, 0.01428863126784563, 0.014016377739608288, 0.013800679706037045, 0.013609398156404495, 0.013105983845889568, 0.012580650858581066]
