
Original sample:

{"has_bug": false, "bug_kind": 0, "bug_kind_name": "NONE", "source_tokens": ["#NEWLINE#", "def _f_move(", "self", ",", "newparent", "=", "None", ",", "newname", "=", "None", ",", "overwrite", "=", "False", ",", "createparents", "=", "False", ")", ":", "#NEWLINE#", "#INDENT#", "'Move or rename this node.\\n\\n        Moves a node into a new parent group, or changes the name of the\\n        node. newparent can be a Group object (see :ref:`GroupClassDescr`) or a\\n        pathname in string form. If it is not specified or None, the current\\n        parent group is chosen as the new parent.  newname must be a string\\n        with a new name. If it is not specified or None, the current name is\\n        chosen as the new name. If createparents is true, the needed groups for\\n        the given new parent group path to exist will be created.\\n\\n        Moving a node across databases is not allowed, nor it is moving a node\\n        *into* itself. These result in a NodeError. However, moving a node\\n        *over* itself is allowed and simply does nothing. Moving over another\\n        existing node is similarly not allowed, unless the optional overwrite\\n        argument is true, in which case that node is recursively removed before\\n        moving.\\n\\n        Usually, only the first argument will be used, effectively moving the\\n        node to a new location without changing its name.  Using only the\\n        second argument is equivalent to renaming the node in place.\\n\\n        '", "#NEWLINE#", "self", ".", "_g_check_open", "(", ")", "#NEWLINE#", "file_", "=", "self", ".", "_v_file", "#NEWLINE#", "oldparent", "=", "self", ".", "_v_parent", "#NEWLINE#", "oldname", "=", "self", ".", "_v_name", "#NEWLINE#", "if", "(", "(", "newparent", "is", "None", ")", "and", "(", "newname", "is", "None", ")", ")", ":", "#NEWLINE#", "#INDENT#", "raise", "NodeError", "(", "'you should specify at least a ``newparent`` or a ``newname`` parameter'", ")", "#NEWLINE#", "#UNINDENT#", "if", "(", "newparent", "is", "None", ")", ":", "#NEWLINE#", "#INDENT#", "newparent", "=", "oldparent", "#NEWLINE#", "#UNINDENT#", "if", "(", "newname", "is", "None", ")", ":", "#NEWLINE#", "#INDENT#", "newname", "=", "oldname", "#NEWLINE#", "#UNINDENT#", "if", "hasattr", "(", "newparent", ",", "'_v_file'", ")", ":", "#NEWLINE#", "#INDENT#", "newfile", "=", "newparent", ".", "_v_file", "#NEWLINE#", "newpath", "=", "newparent", ".", "_v_pathname", "#NEWLINE#", "#UNINDENT#", "else", ":", "#NEWLINE#", "#INDENT#", "if", "hasattr", "(", "newparent", ",", "'startswith'", ")", ":", "#NEWLINE#", "#INDENT#", "newfile", "=", "file_", "#NEWLINE#", "newpath", "=", "newparent", "#NEWLINE#", "#UNINDENT#", "else", ":", "#NEWLINE#", "#INDENT#", "raise", "TypeError", "(", "(", "'new parent is not a node nor a path: %r'", "%", "(", "newparent", ",", ")", ")", ")", "#NEWLINE#", "#UNINDENT#", "#UNINDENT#", "if", "(", "newfile", "is not", "file_", ")", ":", "#NEWLINE#", "#INDENT#", "raise", "NodeError", "(", "'nodes can not be moved across databases; please make a copy of the node'", ")", "#NEWLINE#", "#UNINDENT#", "file_", ".", "_check_writable", "(", ")", "#NEWLINE#", "oldpath", "=", "oldparent", ".", "_v_pathname", "#NEWLINE#", "if", "(", "(", "newpath", "==", "oldpath", ")", "and", "(", "newname", "==", "oldname", ")", ")", ":", "#NEWLINE#", "#INDENT#", "return", "#NEWLINE#", "#UNINDENT#", "self", ".", "_g_check_not_contains", "(", "newpath", ")", "#NEWLINE#", "newparent", "=", "file_", ".", "_get_or_create_path", "(", "newparent", ",", "createparents", ")", "#NEWLINE#", "self", ".", "_g_check_group", "(", "newparent", ")", "#NEWLINE#", "self", ".", "_g_maybe_remove", "(", "newparent", ",", "newname", ",", "overwrite", ")", "#NEWLINE#", "oldpathname", "=", "self", ".", "_v_pathname", "#NEWLINE#", "self", ".", "_g_move", "(", "newparent", ",", "newname", ")", "#NEWLINE#", "if", "file_", ".", "is_undo_enabled", "(", ")", ":", "#NEWLINE#", "#INDENT#", "self", ".", "_g_log_move", "(", "oldpathname", ")"], "error_location": [0], "repair_targets": [], "repair_candidates": [188, 199, 37, 84, 190, 117, 142, 197, 218, 8, 58, 89, 96, 203, 245, 262, 16, 229, 4, 52, 75, 82, 104, 113, 119, 131, 144, 158, 221, 227, 236, 243, 260, 12, 247, 43, 98, 205, 250, 278, 2, 25, 33, 39, 45, 214, 232, 239, 252, 256, 274, 31, 140, 170, 182, 223, 266, 111, 138, 168], "provenances": [{"datasetProvenance": {"datasetName": "ETHPy150Open", "filepath": "PyTables/PyTables/tables/node.py", "license": "bsd-3-clause", "note": "license: manual_eval"}}], "txt_file": "eval__VARIABLE_MISUSE__SStuB.txt-00000-of-00300", "js_count": 2011, "results": {"model": "transformer", "prob": {"loc": [[0.7204104065895081, 2.8078738978365436e-06, 7.650574502804375e-07, 4.7590628327043305e-08, 6.703263352392241e-06, 7.840758087240829e-08, 5.31100177170174e-08, 3.94876700227087e-08, 1.0180158369621495e-06, 1.275343919360239e-07, 3.595461706140668e-08, 2.3803746529438286e-08, 5.549933575821342e-06, 1.8330933926336002e-07, 1.698797831295451e-07, 3.6689989713067916e-08, 6.5649392126942985e-06, 1.4195531150562601e-07, 4.0574974491391913e-07, 3.347920696228357e-08, 9.338662465552261e-08, 1.2916453329125943e-07, 7.200794982509251e-08, 3.487130015855655e-07, 6.398549601271952e-08, 2.0123646038427978e-07, 2.4473736814911717e-08, 3.6948566872752053e-08, 7.398944603664859e-07, 5.251472998679674e-07, 1.3124588349455735e-07, 1.3280621260491898e-06, 1.0857509380457486e-07, 0.00029375238227657974, 4.879583315187119e-08, 1.0932625471582469e-08, 1.9683974983308872e-07, 1.559089582769957e-06, 4.546409684280661e-07, 0.0010846933582797647, 5.950979442559401e-08, 3.028375417102325e-08, 2.5739274178704363e-07, 1.7548853747939575e-06, 5.5440455781763376e-08, 0.001305960351601243, 6.6072281867946e-08, 9.080271468064893e-08, 3.088830737851822e-07, 1.0692055241179332e-07, 9.358971908568492e-08, 1.2840092722399277e-06, 0.001978246495127678, 2.2911804080649745e-06, 4.48876107839169e-07, 1.437135779269738e-07, 2.391994939898723e-07, 5.269805001262284e-07, 0.016429463401436806, 1.3223117321103928e-06, 1.8516898592224607e-07, 8.81487807191661e-08, 5.7396388086772276e-08, 3.330731885853311e-07, 1.958237874077895e-07, 1.499856097098018e-07, 9.23828267218596e-08, 1.3285047373301495e-07, 1.7012436046570656e-06, 0.00016866963414940983, 5.773877660431026e-07, 2.843952700004593e-07, 3.650328608273412e-07, 1.9392629724279686e-07, 4.821863512916025e-07, 0.0038969796150922775, 3.149760004816926e-06, 3.55730833234702e-07, 1.5916383233616216e-07, 4.685255703407165e-07, 2.762738233741402e-07, 9.472762485529529e-08, 1.4675255442853086e-05, 2.0564786495924636e-07, 0.004279951564967632, 3.6469674569161725e-07, 2.8508065952337347e-07, 2.025812904093982e-07, 1.0927716402875376e-06, 0.02333560399711132, 2.7768821837526048e-06, 3.147998768326943e-07, 1.5917325413283834e-07, 1.1149795682285912e-06, 6.283320885813737e-07, 2.9463879513969005e-07, 6.4878367993514985e-06, 4.935871515954204e-07, 0.01801983267068863, 7.618923518748488e-07, 9.209065297000052e-07, 8.462117193630547e-07, 6.034478019500966e-07, 1.6494963119839667e-06, 0.0005023477133363485, 1.6853407487360528e-06, 4.182707016298082e-06, 3.079131261074508e-07, 6.714225264659035e-07, 6.211135996636585e-07, 2.7890149567610933e-07, 9.632541150494944e-06, 1.549776413867221e-07, 0.0005905981524847448, 4.456110502815136e-07, 6.376363614890579e-08, 5.280782033878495e-07, 5.19539480592357e-06, 0.00010786283382913098, 0.0003907125792466104, 1.3278366850499879e-06, 1.2289432334000594e-06, 1.9093552054982865e-06, 1.521457988928887e-06, 1.2860215292676003e-06, 1.164072841675079e-06, 1.6180010788957588e-06, 1.931490032802685e-06, 1.2777987876688712e-06, 4.375568209979974e-07, 1.1446404641901609e-06, 0.0014453401090577245, 5.902419388803537e-07, 1.3232738638180308e-05, 1.9918130078622198e-07, 7.294189003914653e-07, 4.6158126565387647e-07, 1.667411879680003e-07, 6.049716830602847e-06, 3.462924098585063e-07, 0.03454519435763359, 2.0775078724000196e-07, 6.9380062086565886e-06, 5.254679535937612e-07, 0.003231310285627842, 4.181950998827233e-07, 4.753422047087952e-07, 1.1871567267007777e-06, 5.489511067935382e-07, 6.75673561545409e-07, 5.373480576054135e-07, 1.7736133486323524e-06, 8.29402608815144e-08, 3.170765126014885e-07, 1.292988258683181e-06, 4.176681977696717e-05, 3.630228206930042e-07, 1.0798839866765775e-06, 0.009014512412250042, 5.3663319476982e-07, 1.3626727195514832e-06, 4.768896815221524e-07, 4.111743692192249e-07, 1.113207304115349e-06, 6.402373742275813e-07, 4.501415560298483e-07, 1.9191026012777002e-07, 7.808033615219756e-07, 0.004436961375176907, 4.760418050864246e-07, 0.035108782351017, 1.5930871199998364e-07, 3.839780902126222e-07, 3.710812848112255e-07, 1.5581524337449082e-07, 1.1842770675229985e-07, 3.07366832430489e-07, 3.2337486572942e-06, 4.164387792116031e-05, 1.1341309118506615e-06, 3.6115946500103746e-07, 1.980504862331145e-07, 1.4750273749086773e-06, 9.46449034699981e-08, 3.6367721349961357e-06, 1.5595574950566515e-05, 2.694682279980043e-06, 7.982287115737563e-07, 2.044156462943647e-05, 3.3709898161760066e-07, 0.0017559827538207173, 2.0320393900874478e-07, 2.108164238734389e-07, 5.287807312015502e-07, 2.4985553181977593e-07, 2.1843931108378456e-07, 1.453354684599617e-06, 0.010615641251206398, 1.1449178600742016e-06, 0.0016344693722203374, 4.7570048877787485e-07, 3.027008403932996e-07, 8.082127465058875e-07, 0.009905907325446606, 5.653243988490431e-07, 0.018544944003224373, 7.994659654286806e-07, 3.1469721761823166e-07, 8.362685548490845e-07, 2.6920508844341384e-07, 2.3521050707131508e-07, 1.0727276276156772e-06, 2.997974775098555e-07, 2.1898830482314224e-07, 6.41801989331725e-08, 5.618884202363006e-08, 1.4501869038952009e-08, 5.060571197645913e-07, 0.01367731112986803, 8.572291108066565e-07, 1.7434508947644645e-07, 4.674616502597928e-05, 1.3097736655254266e-06, 1.985195467568701e-06, 8.126115602635764e-08, 3.582913166155777e-08, 8.01447697540425e-07, 0.0010519733186811209, 3.549916982592549e-07, 0.0008924418361857533, 4.527769590367825e-07, 3.776434880364832e-07, 8.441365650924126e-08, 1.0163641661620204e-07, 1.2725974940508422e-08, 1.3535224070437835e-06, 0.0028647512663155794, 7.348502322201966e-07, 3.581241116989986e-07, 1.789100565474655e-07, 1.1665905219615524e-07, 5.5951105082385766e-08, 6.705689088448707e-07, 0.0012808406027033925, 4.5686982730330783e-07, 0.010354037396609783, 6.237254410734749e-07, 0.001075283158570528, 8.131189588311827e-07, 3.6985534279665444e-07, 3.0944106583774555e-06, 4.85367672808934e-06, 0.0049800267443060875, 1.5247923101924243e-07, 3.5729038927456713e-07, 2.8237701599209686e-07, 1.772714455228197e-07, 1.1829361312720721e-07, 9.908697506944009e-08, 1.1047949328713003e-06, 0.004232164938002825, 1.1834038105007494e-06, 0.03532862663269043, 1.4339275367092341e-06, 2.3406582840834744e-06, 3.7853592971259786e-07, 7.060264761094004e-05, 2.0747913254126615e-07, 2.9826962872903096e-06, 2.745408892224077e-05, 2.193596174038248e-06, 8.855529358697822e-07, 3.7131726458028425e-06, 1.1215980748602306e-06, 2.1939426630979142e-07, 1.8057001227589353e-07, 1.1595908233630325e-08, 3.4601926017785445e-06, 0.0007266504690051079, 1.9445012640062487e-06]], "pointer": [[0.0, 0.0, 0.008861914277076721, 0.0, 0.015387150458991528, 0.0, 0.0, 0.0, 0.021798070520162582, 0.0, 0.0, 0.0, 0.07859884202480316, 0.0, 0.0, 0.0, 0.07702096551656723, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.002140033058822155, 0.0, 0.0, 0.0, 0.0, 0.0, 0.026807207614183426, 0.0, 0.0013972485903650522, 0.0, 0.0, 0.0, 0.03401107341051102, 0.0, 0.0015616010641679168, 0.0, 0.0, 0.0, 0.05073235556483269, 0.0, 0.001876956201158464, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0031589209102094173, 0.0, 0.0, 0.0, 0.0, 0.0, 0.00204048422165215, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0017895818455144763, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.05322223901748657, 0.0, 0.013634685426950455, 0.0, 0.0, 0.0, 0.0, 0.003229657420888543, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.021320583298802376, 0.0, 0.00570507301017642, 0.0, 0.0, 0.0, 0.0, 0.0, 0.022732114419341087, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.023262567818164825, 0.0, 0.02292267605662346, 0.0, 0.0, 0.0, 0.035456687211990356, 0.0, 0.04398979991674423, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.13870549201965332, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.013203045353293419, 0.0, 0.013078928925096989, 0.0, 0.01875254698097706, 0.0, 0.02894008532166481, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.04437560960650444, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.00889550056308508, 0.0, 0.009956599213182926, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.006627235561609268, 0.0, 0.0, 0.0, 0.0, 0.0, 0.04087911173701286, 0.0, 0.014114254154264927, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.006802052725106478, 0.0, 0.0021636509336531162, 0.0, 0.0, 0.0, 0.010608325712382793, 0.0, 0.007757243700325489, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.001037233043462038, 0.0, 0.0, 0.0, 0.00044181643170304596, 0.0, 0.0, 0.009655985981225967, 0.0, 0.0013161804527044296, 0.0, 0.0, 0.0, 0.0014371414436027408, 0.0, 0.00140126992482692, 0.0, 0.0, 0.0008201550808735192, 0.0, 0.0, 0.0, 0.0034688501618802547, 0.0, 0.0, 0.0009805361041799188, 0.0, 0.0, 0.0, 0.0013758623972535133, 0.0, 0.002133161062374711, 0.0, 0.0020201110746711493, 0.0, 0.0, 0.0169332604855299, 0.0, 0.001709167379885912, 0.0, 0.0, 0.0, 0.001054312800988555, 0.0, 0.0, 0.0, 0.00482361251488328, 0.0, 0.006890526972711086, 0.0, 0.0, 0.0, 0.0032940658275038004, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0006559669855050743, 0.0, 0.0, 0.0, 0.0010325824841856956, 0.0]], "target": [0.0]}, "loss": [0.32793429493904114, 0.0], "acc": [1.0, 0.0, 0.0, 0.0]}}


All source tokens:

['#NEWLINE#', 'def _f_move(', 'self', ',', 'newparent', '=', 'None', ',', 'newname', '=', 'None', ',', 'overwrite', '=', 'False', ',', 'createparents', '=', 'False', ')', ':', '#NEWLINE#', '#INDENT#', "'Move or rename this node.\\n\\n        Moves a node into a new parent group, or changes the name of the\\n        node. newparent can be a Group object (see :ref:`GroupClassDescr`) or a\\n        pathname in string form. If it is not specified or None, the current\\n        parent group is chosen as the new parent.  newname must be a string\\n        with a new name. If it is not specified or None, the current name is\\n        chosen as the new name. If createparents is true, the needed groups for\\n        the given new parent group path to exist will be created.\\n\\n        Moving a node across databases is not allowed, nor it is moving a node\\n        *into* itself. These result in a NodeError. However, moving a node\\n        *over* itself is allowed and simply does nothing. Moving over another\\n        existing node is similarly not allowed, unless the optional overwrite\\n        argument is true, in which case that node is recursively removed before\\n        moving.\\n\\n        Usually, only the first argument will be used, effectively moving the\\n        node to a new location without changing its name.  Using only the\\n        second argument is equivalent to renaming the node in place.\\n\\n        '", '#NEWLINE#', 'self', '.', '_g_check_open', '(', ')', '#NEWLINE#', 'file_', '=', 'self', '.', '_v_file', '#NEWLINE#', 'oldparent', '=', 'self', '.', '_v_parent', '#NEWLINE#', 'oldname', '=', 'self', '.', '_v_name', '#NEWLINE#', 'if', '(', '(', 'newparent', 'is', 'None', ')', 'and', '(', 'newname', 'is', 'None', ')', ')', ':', '#NEWLINE#', '#INDENT#', 'raise', 'NodeError', '(', "'you should specify at least a ``newparent`` or a ``newname`` parameter'", ')', '#NEWLINE#', '#UNINDENT#', 'if', '(', 'newparent', 'is', 'None', ')', ':', '#NEWLINE#', '#INDENT#', 'newparent', '=', 'oldparent', '#NEWLINE#', '#UNINDENT#', 'if', '(', 'newname', 'is', 'None', ')', ':', '#NEWLINE#', '#INDENT#', 'newname', '=', 'oldname', '#NEWLINE#', '#UNINDENT#', 'if', 'hasattr', '(', 'newparent', ',', "'_v_file'", ')', ':', '#NEWLINE#', '#INDENT#', 'newfile', '=', 'newparent', '.', '_v_file', '#NEWLINE#', 'newpath', '=', 'newparent', '.', '_v_pathname', '#NEWLINE#', '#UNINDENT#', 'else', ':', '#NEWLINE#', '#INDENT#', 'if', 'hasattr', '(', 'newparent', ',', "'startswith'", ')', ':', '#NEWLINE#', '#INDENT#', 'newfile', '=', 'file_', '#NEWLINE#', 'newpath', '=', 'newparent', '#NEWLINE#', '#UNINDENT#', 'else', ':', '#NEWLINE#', '#INDENT#', 'raise', 'TypeError', '(', '(', "'new parent is not a node nor a path: %r'", '%', '(', 'newparent', ',', ')', ')', ')', '#NEWLINE#', '#UNINDENT#', '#UNINDENT#', 'if', '(', 'newfile', 'is not', 'file_', ')', ':', '#NEWLINE#', '#INDENT#', 'raise', 'NodeError', '(', "'nodes can not be moved across databases; please make a copy of the node'", ')', '#NEWLINE#', '#UNINDENT#', 'file_', '.', '_check_writable', '(', ')', '#NEWLINE#', 'oldpath', '=', 'oldparent', '.', '_v_pathname', '#NEWLINE#', 'if', '(', '(', 'newpath', '==', 'oldpath', ')', 'and', '(', 'newname', '==', 'oldname', ')', ')', ':', '#NEWLINE#', '#INDENT#', 'return', '#NEWLINE#', '#UNINDENT#', 'self', '.', '_g_check_not_contains', '(', 'newpath', ')', '#NEWLINE#', 'newparent', '=', 'file_', '.', '_get_or_create_path', '(', 'newparent', ',', 'createparents', ')', '#NEWLINE#', 'self', '.', '_g_check_group', '(', 'newparent', ')', '#NEWLINE#', 'self', '.', '_g_maybe_remove', '(', 'newparent', ',', 'newname', ',', 'overwrite', ')', '#NEWLINE#', 'oldpathname', '=', 'self', '.', '_v_pathname', '#NEWLINE#', 'self', '.', '_g_move', '(', 'newparent', ',', 'newname', ')', '#NEWLINE#', 'if', 'file_', '.', 'is_undo_enabled', '(', ')', ':', '#NEWLINE#', '#INDENT#', 'self', '.', '_g_log_move', '(', 'oldpathname', ')']


All attention probs:

[0.005546041764318943, 0.006810226943343878, 0.02893904782831669, 0.010114706121385098, 0.018823830410838127, 0.008133393712341785, 0.005354614928364754, 0.005157944280654192, 0.014746216125786304, 0.0059586577117443085, 0.006813955493271351, 0.007914895191788673, 0.01189064048230648, 0.00606889370828867, 0.006736378651112318, 0.005835378542542458, 0.010658708401024342, 0.005745219998061657, 0.005365161225199699, 0.004779043607413769, 0.004672775976359844, 0.00433971406891942, 0.0039856163784861565, 0.004891409073024988, 0.004143957979977131, 0.0065504759550094604, 0.002545043360441923, 0.0025774913374334574, 0.0029675671830773354, 0.0030631006229668856, 0.0034362697042524815, 0.007677830755710602, 0.0027618876192718744, 0.007441458757966757, 0.0019269074546173215, 0.002013152465224266, 0.0029555950313806534, 0.007391287479549646, 0.0031665097922086716, 0.009544355794787407, 0.004031875170767307, 0.004057046491652727, 0.00473784189671278, 0.0068833716213703156, 0.0028533742297440767, 0.006273745559155941, 0.0018910649232566357, 0.001886257203295827, 0.002661363920196891, 0.0029267992358654737, 0.00192052882630378, 0.0017679204465821385, 0.00723374355584383, 0.0017112806672230363, 0.0016480133635923266, 0.0017543844878673553, 0.0020889330189675093, 0.0016126458067446947, 0.006502280477434397, 0.0019823473412543535, 0.0018536086427047849, 0.0020556452218443155, 0.001789115951396525, 0.001823512720875442, 0.0020774619188159704, 0.0021721941884607077, 0.004727558698505163, 0.0023424336686730385, 0.001962905516847968, 0.0033174343407154083, 0.001434377278201282, 0.002237440086901188, 0.002121161902323365, 0.0031441303435713053, 0.0017484502168372273, 0.007692186161875725, 0.001669450313784182, 0.001374834799207747, 0.0014284650096669793, 0.001459426828660071, 0.0020172051154077053, 0.0019038779428228736, 0.005376738961786032, 0.0017499843379482627, 0.007648594211786985, 0.0018339966190978885, 0.00231257569976151, 0.00308966520242393, 0.001840354991145432, 0.006829633377492428, 0.001985780894756317, 0.0015875694807618856, 0.0017395680770277977, 0.0016767397755756974, 0.0018814019858837128, 0.0020518286619335413, 0.003506674198433757, 0.002534899627789855, 0.009351475164294243, 0.0020582189317792654, 0.002081233775243163, 0.0021255393512547016, 0.001515702111646533, 0.0027999980375170708, 0.007762836292386055, 0.0017887796275317669, 0.002456730930134654, 0.001414950704202056, 0.0013589902082458138, 0.0018935464322566986, 0.0020783464424312115, 0.005451953504234552, 0.002448807703331113, 0.007358533330261707, 0.0009762016707099974, 0.001359813380986452, 0.002048493828624487, 0.00423064548522234, 0.0021686023101210594, 0.007863764651119709, 0.0012770533794537187, 0.0018764941487461329, 0.0019796306733042, 0.0021322532556951046, 0.004867269191890955, 0.0018868324114009738, 0.0023295083083212376, 0.0025058076716959476, 0.0024921621661633253, 0.001432864461094141, 0.0019431518157944083, 0.007611746899783611, 0.0015696183545514941, 0.002145306905731559, 0.0012856069952249527, 0.0014114524237811565, 0.0018334264168515801, 0.0017545960145071149, 0.005039275158196688, 0.0017359041376039386, 0.018928026780486107, 0.0020112991333007812, 0.005375145934522152, 0.00189944077283144, 0.00685278233140707, 0.001805768464691937, 0.001959210028871894, 0.003982107620686293, 0.001825511222705245, 0.0019961814396083355, 0.0021967957727611065, 0.0027197031304240227, 0.0020515054930001497, 0.0020742136985063553, 0.002417608629912138, 0.0031645039562135935, 0.001927898614667356, 0.001998961204662919, 0.008352892473340034, 0.001856906688772142, 0.0015599149046465755, 0.0015065665356814861, 0.0012267861748114228, 0.0022755952086299658, 0.001952564693056047, 0.001972063211724162, 0.0023116953670978546, 0.0016072191065177321, 0.0098649887368083, 0.0014100606786087155, 0.013748802244663239, 0.0011524488218128681, 0.001621000119484961, 0.0022711572237312794, 0.0021710426080971956, 0.0032934797927737236, 0.001739830826409161, 0.001848135725595057, 0.002609742572531104, 0.0013543411623686552, 0.002071424387395382, 0.002162627875804901, 0.0039192382246255875, 0.0015087216161191463, 0.0023813252337276936, 0.002582965651527047, 0.002541252179071307, 0.0038742567412555218, 0.008191565982997417, 0.004963819868862629, 0.00578087754547596, 0.0015583356143906713, 0.0023098215460777283, 0.002753931563347578, 0.0029872036539018154, 0.001772371120750904, 0.0017308315727859735, 0.008264157921075821, 0.0015643354272469878, 0.007167542353272438, 0.0010221484117209911, 0.0017332666320726275, 0.0012981323525309563, 0.008708380162715912, 0.0013961491640657187, 0.006640551146119833, 0.001361075323075056, 0.0012599891051650047, 0.001664044801145792, 0.002039288403466344, 0.002183402655646205, 0.0022047243546694517, 0.0021250650752335787, 0.001983008813112974, 0.0031802989542484283, 0.001053361687809229, 0.0013919967459514737, 0.0014508883468806744, 0.009183560498058796, 0.001323545933701098, 0.002236919477581978, 0.006480890326201916, 0.0017116134986281395, 0.0031444611959159374, 0.0012548442464321852, 0.0016043531941249967, 0.002189172198995948, 0.007016303017735481, 0.002008651616051793, 0.009765439666807652, 0.0014118197141215205, 0.0020070881582796574, 0.0035653875675052404, 0.0009348525782115757, 0.001588861458003521, 0.0015776933869346976, 0.0048076920211315155, 0.00133909797295928, 0.002043125918135047, 0.002857724204659462, 0.0009156731539405882, 0.001581380725838244, 0.001466651912778616, 0.005887428764253855, 0.0013964053941890597, 0.010474657639861107, 0.001472880714572966, 0.00918765738606453, 0.0016463185893371701, 0.0025242981500923634, 0.005479041952639818, 0.0024651777930557728, 0.007322643417865038, 0.0022676908411085606, 0.0030252321157604456, 0.003960298374295235, 0.004590231459587812, 0.0014355469029396772, 0.002568507567048073, 0.001849647960625589, 0.0056919800117611885, 0.0015380283584818244, 0.010889866389334202, 0.0014961668057367206, 0.001967094372957945, 0.0019117080373689532, 0.004255290143191814, 0.0009200809872709215, 0.0015010314527899027, 0.0016387786017730832, 0.0014596700202673674, 0.0012920396402478218, 0.0019669951871037483, 0.0018717905040830374, 0.003166388953104615, 0.0009180555935017765, 0.0019442606717348099, 0.0015745277050882578, 0.007388928439468145, 0.00178838602732867]


Top-k source tokens:

['self', 'file_', 'newparent', 'newname', 'file_', 'overwrite', 'newname', 'createparents', 'newname', ',']


Top-k attention probs:

[0.02893904782831669, 0.018928026780486107, 0.018823830410838127, 0.014746216125786304, 0.013748802244663239, 0.01189064048230648, 0.010889866389334202, 0.010658708401024342, 0.010474657639861107, 0.010114706121385098]
