
Original sample:

{"has_bug": false, "bug_kind": 0, "bug_kind_name": "NONE", "source_tokens": ["#NEWLINE#", "def get(", "self", ",", "id", ",", "context", "=", "None", ")", ":", "#NEWLINE#", "#INDENT#", "'Return the message with the specified ID and context.\\n\\n        :param id: the message ID\\n        :param context: the message context, or ``None`` for no context\\n        '", "#NEWLINE#", "return", "self", ".", "_messages", ".", "get", "(", "self", ".", "_key_for", "(", "id", ",", "context", ")", ")"], "error_location": [0], "repair_targets": [], "repair_candidates": [2, 16, 22, 6, 28, 4, 26], "provenances": [{"datasetProvenance": {"datasetName": "ETHPy150Open", "filepath": "maraoz/proofofexistence/babel/messages/catalog.py", "license": "mit", "note": "license: bigquery_api"}}], "txt_file": "eval__VARIABLE_MISUSE__SStuB.txt-00000-of-00300", "js_count": 2928, "results": {"model": "transformer", "prob": {"loc": [[0.9989114999771118, 7.3499577410984784e-06, 1.0168120923026436e-07, 1.8162134907129257e-08, 1.8780966115627962e-07, 1.5567762190471512e-08, 3.161647555316449e-06, 9.640470466365514e-08, 8.062166045874619e-09, 2.3207566979266403e-09, 1.959656792394071e-08, 7.900445098130149e-08, 4.4308265501058486e-08, 2.316725726814184e-07, 9.720289284587125e-08, 5.1209038787192185e-08, 5.205472007219214e-06, 3.8318411554882914e-08, 5.4560289619587365e-09, 7.493870413100012e-08, 1.1315417935975347e-07, 5.985162232491348e-08, 1.190885541291209e-05, 7.123720280333146e-08, 6.999322010869946e-09, 4.2900836660919595e-08, 4.953139796270989e-05, 2.0752294105363944e-08, 0.0010097131598740816, 1.255813231182401e-07, 1.3971050805139384e-07]], "pointer": [[0.0, 0.0, 0.09631409496068954, 0.0, 0.37532350420951843, 0.0, 0.4816970229148865, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.00272429920732975, 0.0, 0.0, 0.0, 0.0, 0.0, 0.011842497624456882, 0.0, 0.0, 0.0, 0.026785213500261307, 0.0, 0.005313391797244549, 0.0, 0.0]], "target": [0.0]}, "loss": [0.0010890988633036613, 0.0], "acc": [1.0, 0.0, 0.0, 0.0]}}


All source tokens:

['#NEWLINE#', 'def get(', 'self', ',', 'id', ',', 'context', '=', 'None', ')', ':', '#NEWLINE#', '#INDENT#', "'Return the message with the specified ID and context.\\n\\n        :param id: the message ID\\n        :param context: the message context, or ``None`` for no context\\n        '", '#NEWLINE#', 'return', 'self', '.', '_messages', '.', 'get', '(', 'self', '.', '_key_for', '(', 'id', ',', 'context', ')', ')']


All attention probs:

[0.03965318948030472, 0.02084062248468399, 0.09281788021326065, 0.031206762418150902, 0.0621814988553524, 0.0286983884871006, 0.07672527432441711, 0.022779952734708786, 0.024905795231461525, 0.028802573680877686, 0.02580813504755497, 0.02688157930970192, 0.020924648270010948, 0.023864461109042168, 0.02173187956213951, 0.03441036865115166, 0.040857359766960144, 0.010004643350839615, 0.014895894564688206, 0.010674923658370972, 0.016941996291279793, 0.01476514432579279, 0.044183988124132156, 0.012054961174726486, 0.012246768921613693, 0.017239604145288467, 0.06333325803279877, 0.022567143663764, 0.07089345157146454, 0.027881715446710587, 0.03922613710165024]


Top-k source tokens:

['self', 'context', 'context', 'id', 'id', 'self', 'self', '#NEWLINE#', ')', 'return']


Top-k attention probs:

[0.09281788021326065, 0.07672527432441711, 0.07089345157146454, 0.06333325803279877, 0.0621814988553524, 0.044183988124132156, 0.040857359766960144, 0.03965318948030472, 0.03922613710165024, 0.03441036865115166]
