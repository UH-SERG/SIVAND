
Original sample:

{"has_bug": false, "bug_kind": 0, "bug_kind_name": "NONE", "source_tokens": ["#NEWLINE#", "def test_add_not_null(", "self", ")", ":", "#NEWLINE#", "#INDENT#", "self", ".", "_create_people", "(", ")", "#NEWLINE#", "def addNotNull(", ")", ":", "#NEWLINE#", "#INDENT#", "with", "self", ".", "database", ".", "transaction", "(", ")", ":", "#NEWLINE#", "#INDENT#", "migrate", "(", "self", ".", "migrator", ".", "add_not_null", "(", "'person'", ",", "'dob'", ")", ")", "#NEWLINE#", "#UNINDENT#", "#UNINDENT#", "if", "self", ".", "_exception_add_not_null", ":", "#NEWLINE#", "#INDENT#", "self", ".", "assertRaises", "(", "IntegrityError", ",", "addNotNull", ")", "#NEWLINE#", "#UNINDENT#", "Person", ".", "update", "(", "dob", "=", "datetime", ".", "date", "(", "2000", ",", "1", ",", "2", ")", ")", ".", "where", "(", "(", "Person", ".", "dob", ">>", "None", ")", ")", ".", "execute", "(", ")", "#NEWLINE#", "addNotNull", "(", ")", "#NEWLINE#", "with", "self", ".", "database", ".", "transaction", "(", ")", ":", "#NEWLINE#", "#INDENT#", "with", "self", ".", "assertRaisesCtx", "(", "(", "IntegrityError", ",", "OperationalError", ")", ")", ":", "#NEWLINE#", "#INDENT#", "Person", ".", "create", "(", "first_name", "=", "'Kirby'", ",", "last_name", "=", "'Snazebrauer'", ",", "dob", "=", "None", ")"], "error_location": [0], "repair_targets": [], "repair_candidates": [2, 7, 19, 31, 46, 52, 100, 111, 58, 95], "provenances": [{"datasetProvenance": {"datasetName": "ETHPy150Open", "filepath": "coleifer/peewee/playhouse/tests/test_migrate.py", "license": "mit", "note": "license: bigquery_api"}}], "txt_file": "eval__VARIABLE_MISUSE__SStuB.txt-00000-of-00300", "js_count": 2982, "results": {"model": "transformer", "prob": {"loc": [[0.6749321222305298, 1.0533264685363974e-05, 2.0968493572581792e-06, 3.02895870163411e-07, 2.837468286998046e-07, 2.2767542873225466e-07, 1.8555498115802038e-07, 5.813862458126096e-07, 1.9974446274773072e-07, 3.3804639087975374e-08, 1.7881554867926752e-06, 4.655465488667687e-07, 5.826987248269688e-08, 4.613246673557114e-08, 1.8673689794468373e-07, 9.700421088609801e-08, 6.644405914357776e-08, 4.947979093117283e-08, 1.1057678506176671e-07, 1.3922982589065214e-06, 1.131606097715121e-07, 8.44658032406187e-08, 3.9131117546276073e-07, 4.929760777372394e-08, 1.800010863917123e-06, 1.8183885686084977e-07, 1.20512737566969e-07, 4.248617102575736e-08, 3.1663383026625525e-08, 3.2238226594927255e-06, 1.0604408089420758e-06, 9.324855454906356e-06, 4.5041747398499865e-07, 2.2204932292879676e-07, 6.954733180464245e-07, 6.559834986319402e-08, 7.297181127796648e-06, 0.0001511912269052118, 5.471862891681667e-07, 4.449365951586515e-05, 6.881269882796914e-07, 3.2876812383619836e-07, 9.931711275612543e-08, 1.4606021636609512e-07, 2.433015140468342e-07, 1.90297058111355e-07, 0.09379716217517853, 6.116057420513243e-07, 4.483172943992031e-08, 6.517528845506604e-07, 5.028566647524713e-07, 9.95304532125374e-08, 1.0307868478776072e-06, 2.935339296072925e-07, 1.1951368605878088e-07, 7.965318786773423e-07, 0.08721025288105011, 1.0810736057464965e-06, 0.059329841285943985, 1.4290068293121294e-06, 3.0357054470186995e-07, 1.2839920771057223e-07, 4.091200935363304e-06, 3.728964088622888e-07, 2.808581029967172e-07, 2.72048168881156e-06, 5.4498464123753365e-06, 3.1473384751734557e-06, 1.6195803254959174e-05, 1.1306811984468368e-06, 3.4016789385304946e-08, 5.699517259927234e-06, 0.00012417903053574264, 9.142791554950236e-07, 0.00017604346794541925, 5.929378517066652e-07, 0.00016397275612689555, 3.3306091040685715e-07, 5.782256380371109e-07, 1.5626227423126693e-06, 1.1778483610669355e-07, 6.094118703003915e-07, 0.0017751059494912624, 0.03845902159810066, 4.262944003130542e-06, 1.9388571104173025e-07, 5.235653475210711e-07, 4.480042434806819e-07, 5.767089419350668e-07, 1.4339103699967382e-06, 1.588264694873942e-06, 2.681937871784612e-07, 1.7377184121869504e-05, 2.2010531210980844e-06, 6.482635512838897e-07, 2.854676677088719e-05, 6.210606079548597e-05, 3.1079900963959517e-06, 9.137544338955195e-07, 3.531831964664889e-07, 0.00023699563462287188, 1.0425962955196155e-06, 4.950667857883673e-07, 2.194227135987603e-06, 8.12769656022283e-07, 9.01285238796845e-06, 2.2401070509658894e-06, 1.6795908095446066e-06, 1.1457726714070304e-06, 3.985753949109494e-07, 1.2577214647535584e-06, 1.3418068647297332e-06, 1.313699726779305e-06, 9.10212349936046e-08, 3.5269702038931428e-06, 5.6485474487999454e-05, 0.04205906391143799, 1.2857462934334762e-06, 0.00015284451365005225, 6.060053010514821e-07, 6.28590044016164e-07, 3.496760882626404e-06, 7.962933068483835e-07, 4.141987233197142e-07, 4.6203490455809515e-06, 1.3267765552882338e-06, 1.0167835995389396e-07, 4.523382449406199e-05, 3.0446396976913093e-06, 7.591932080686092e-05, 0.0005969837657175958, 1.3680447636943427e-06, 9.39171059144428e-06, 7.894842565292493e-05, 7.997127249836922e-05, 1.3532209095501457e-06, 4.050069037475623e-05, 0.00012886678450740874, 5.530492671823595e-06, 2.6748739401227795e-06]], "pointer": [[0.0, 0.0, 0.04156464338302612, 0.0, 0.0, 0.0, 0.0, 0.22044828534126282, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.05089162290096283, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.3588453531265259, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.20044422149658203, 0.0, 0.0, 0.0, 0.0, 0.0, 0.014034404419362545, 0.0, 0.0, 0.0, 0.0, 0.0, 0.00027778767980635166, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.01142770517617464, 0.0, 0.0, 0.0, 0.0, 0.06484221667051315, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0372237004339695, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]], "target": [0.0]}, "loss": [0.3931431472301483, 0.0], "acc": [1.0, 0.0, 0.0, 0.0]}}


All source tokens:

['#NEWLINE#', 'def test_add_not_null(', 'self', ')', ':', '#NEWLINE#', '#INDENT#', 'self', '.', '_create_people', '(', ')', '#NEWLINE#', 'def addNotNull(', ')', ':', '#NEWLINE#', '#INDENT#', 'with', 'self', '.', 'database', '.', 'transaction', '(', ')', ':', '#NEWLINE#', '#INDENT#', 'migrate', '(', 'self', '.', 'migrator', '.', 'add_not_null', '(', "'person'", ',', "'dob'", ')', ')', '#NEWLINE#', '#UNINDENT#', '#UNINDENT#', 'if', 'self', '.', '_exception_add_not_null', ':', '#NEWLINE#', '#INDENT#', 'self', '.', 'assertRaises', '(', 'IntegrityError', ',', 'addNotNull', ')', '#NEWLINE#', '#UNINDENT#', 'Person', '.', 'update', '(', 'dob', '=', 'datetime', '.', 'date', '(', '2000', ',', '1', ',', '2', ')', ')', '.', 'where', '(', '(', 'Person', '.', 'dob', '>>', 'None', ')', ')', '.', 'execute', '(', ')', '#NEWLINE#', 'addNotNull', '(', ')', '#NEWLINE#', 'with', 'self', '.', 'database', '.', 'transaction', '(', ')', ':', '#NEWLINE#', '#INDENT#', 'with', 'self', '.', 'assertRaisesCtx', '(', '(', 'IntegrityError', ',', 'OperationalError', ')', ')', ':', '#NEWLINE#', '#INDENT#', 'Person', '.', 'create', '(', 'first_name', '=', "'Kirby'", ',', 'last_name', '=', "'Snazebrauer'", ',', 'dob', '=', 'None', ')']


All attention probs:

[0.024179430678486824, 0.011485508643090725, 0.047501638531684875, 0.014024941250681877, 0.010326892137527466, 0.010544350370764732, 0.008873557671904564, 0.029192687943577766, 0.006752706598490477, 0.007689456921070814, 0.00844544731080532, 0.008583500050008297, 0.00979752279818058, 0.022557884454727173, 0.00929437205195427, 0.007716302759945393, 0.008532615378499031, 0.008100694045424461, 0.007117194123566151, 0.019678879529237747, 0.005940150003880262, 0.006793358363211155, 0.005722035653889179, 0.0061645349487662315, 0.00674999225884676, 0.004192435648292303, 0.004322454333305359, 0.00517266383394599, 0.005403547547757626, 0.01890081912279129, 0.0043408614583313465, 0.012983120046555996, 0.003989511635154486, 0.004354486241936684, 0.0035603903234004974, 0.004040096420794725, 0.004433642607182264, 0.006158767268061638, 0.004736815579235554, 0.005820442922413349, 0.0035552228800952435, 0.003429622855037451, 0.0076066600158810616, 0.005893980152904987, 0.005413733422756195, 0.005120433401316404, 0.02094459906220436, 0.0033756885677576065, 0.004404859151691198, 0.003378296736627817, 0.00466232281178236, 0.004105399362742901, 0.007168828975409269, 0.002863375935703516, 0.0031235257629305124, 0.0032253239769488573, 0.019655760377645493, 0.003588386345654726, 0.013738241977989674, 0.0034265194553881884, 0.0049791461788117886, 0.00535424193367362, 0.008314439095556736, 0.0030503678135573864, 0.004398088436573744, 0.0037980994675308466, 0.008938677608966827, 0.004104606341570616, 0.006371592171490192, 0.0031589497812092304, 0.004630601033568382, 0.003796185366809368, 0.005709521006792784, 0.0037824618630111217, 0.006683421786874533, 0.003425060538575053, 0.0077406479977071285, 0.0031552014406770468, 0.003842912381514907, 0.0028666763100773096, 0.0036060037091374397, 0.0027466239407658577, 0.0044020069763064384, 0.016779184341430664, 0.0030464220326393843, 0.0053513143211603165, 0.0034494518768042326, 0.0045220861211419106, 0.004647011868655682, 0.004615519195795059, 0.0031331521458923817, 0.00483831437304616, 0.005290344823151827, 0.0037754641380161047, 0.005472796969115734, 0.02226458489894867, 0.007224029395729303, 0.005293050780892372, 0.006211341358721256, 0.0086994469165802, 0.013040008954703808, 0.0028540429193526506, 0.003942048642784357, 0.00428773695603013, 0.004871496930718422, 0.004564804490655661, 0.0032659212592989206, 0.0031564729288220406, 0.004604715388268232, 0.004469430074095726, 0.004992770031094551, 0.009068801999092102, 0.0030871478375047445, 0.004004430491477251, 0.0031708967871963978, 0.0038084606640040874, 0.027622077614068985, 0.0031362392473965883, 0.006255942862480879, 0.0031372206285595894, 0.0031553013250231743, 0.004739255178719759, 0.0056183780543506145, 0.006109937094151974, 0.011440795846283436, 0.006563801318407059, 0.005184867884963751, 0.007168257609009743, 0.008815072476863861, 0.006487417034804821, 0.007796745281666517, 0.0053255376406013966, 0.008879639208316803, 0.004522053059190512, 0.005842077080160379, 0.0037272702902555466, 0.011623693630099297, 0.005039153154939413, 0.004140548408031464, 0.004154002293944359]


Top-k source tokens:

['self', 'self', 'IntegrityError', '#NEWLINE#', 'def addNotNull(', 'addNotNull', 'self', 'self', 'IntegrityError', 'migrate']


Top-k attention probs:

[0.047501638531684875, 0.029192687943577766, 0.027622077614068985, 0.024179430678486824, 0.022557884454727173, 0.02226458489894867, 0.02094459906220436, 0.019678879529237747, 0.019655760377645493, 0.01890081912279129]
