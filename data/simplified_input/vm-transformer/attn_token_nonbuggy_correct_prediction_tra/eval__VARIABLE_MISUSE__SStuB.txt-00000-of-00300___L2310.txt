
Original sample:

{"has_bug": false, "bug_kind": 0, "bug_kind_name": "NONE", "source_tokens": ["#NEWLINE#", "def unpack_method(", "method", ")", ":", "#NEWLINE#", "#INDENT#", "'\\n    Given a JSON-RPC method in:  [interface].[function] notation, returns a tuple of the interface\\n    name and function.\\n\\n    For example, unpack_method(\"MyService.LoadUser\") would return: (\"MyService\", \"LoadUser\")\\n\\n    :Parameters:\\n      method\\n        String method name\\n    '", "#NEWLINE#", "pos", "=", "method", ".", "find", "(", "'.'", ")", "#NEWLINE#", "if", "(", "pos", "==", "(", "-", "1", ")", ")", ":", "#NEWLINE#", "#INDENT#", "raise", "RpcException", "(", "ERR_METHOD_NOT_FOUND", ",", "(", "'Method not found: %s'", "%", "method", ")", ")", "#NEWLINE#", "#UNINDENT#", "iface_name", "=", "method", "[", ":", "pos", "]", "#NEWLINE#", "func_name", "=", "method", "[", "(", "pos", "+", "1", ")", ":", "]", "#NEWLINE#", "return", "(", "iface_name", ",", "func_name", ")"], "error_location": [0], "repair_targets": [], "repair_candidates": [43, 65, 2, 11, 38, 45, 53, 51, 67, 9, 20, 48, 56], "provenances": [{"datasetProvenance": {"datasetName": "ETHPy150Open", "filepath": "StackHut/stackhut/stackhut_toolkit/common/barrister/runtime.py", "license": "apache-2.0", "note": "license: bigquery_api"}}], "txt_file": "eval__VARIABLE_MISUSE__SStuB.txt-00000-of-00300", "js_count": 2310, "results": {"model": "transformer", "prob": {"loc": [[0.7086635828018188, 7.834810276108328e-06, 3.760125991902896e-06, 2.774062579646852e-07, 3.717203185260587e-07, 3.6190533592161955e-07, 3.58662191501935e-07, 5.838224979015649e-07, 4.160625621807412e-07, 6.328324616333703e-06, 3.6114579415880144e-07, 1.40103766170796e-05, 2.516073323022283e-07, 9.05215458146813e-08, 7.252142495417502e-07, 7.6234287007537205e-06, 1.1971675348831923e-06, 1.300088342759409e-06, 3.75896917148566e-07, 7.069141361171205e-08, 0.006993831135332584, 3.331258540129056e-06, 1.3811685676046181e-05, 1.3598507848655572e-06, 8.262197297881357e-06, 3.3228579354727117e-07, 2.1449440623655391e-07, 6.596561661353917e-07, 4.5516645741372486e-07, 2.9910526677667804e-07, 1.4769221401422783e-08, 2.9058315931251855e-07, 4.7150874138424115e-07, 8.574288017371146e-07, 4.5898622147433343e-07, 3.5913728879677365e-07, 2.456690708640963e-06, 8.597066312177049e-07, 0.11763547360897064, 8.131602271532756e-07, 6.107557624090987e-07, 8.468643386549957e-07, 7.918765732028987e-07, 7.218212886073161e-06, 1.0403180539242385e-07, 0.020561814308166504, 2.2294291284197243e-06, 1.1432030078140087e-06, 0.07437048107385635, 8.056795763877744e-07, 1.7405102425982477e-06, 4.035305755678564e-05, 3.302644984159997e-07, 0.028333144262433052, 1.512534026915091e-07, 6.118470992078073e-07, 0.03917819261550903, 4.965082780472585e-07, 1.9697095012816135e-06, 2.943344554751093e-07, 7.734553264526767e-07, 8.130942887873971e-07, 7.154363856898271e-07, 3.302331208487885e-08, 1.4253988922519056e-07, 0.0018728513969108462, 3.118292966064473e-07, 0.002246154472231865, 3.6437768358155154e-07]], "pointer": [[0.0, 0.0, 0.15094731748104095, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.20935943722724915, 0.0, 0.07307484745979309, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.05445650964975357, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.2700849771499634, 0.0, 0.0, 0.0, 0.0, 0.15365974605083466, 0.0, 0.02567799761891365, 0.0, 0.0, 0.017436867579817772, 0.0, 0.0, 0.02087184228003025, 0.0, 0.005538647994399071, 0.0, 0.0, 0.01828988455235958, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.00043653964530676603, 0.0, 0.00016536578186787665, 0.0]], "target": [0.0]}, "loss": [0.3443743884563446, 0.0], "acc": [1.0, 0.0, 0.0, 0.0]}}


All source tokens:

['#NEWLINE#', 'def unpack_method(', 'method', ')', ':', '#NEWLINE#', '#INDENT#', '\'\\n    Given a JSON-RPC method in:  [interface].[function] notation, returns a tuple of the interface\\n    name and function.\\n\\n    For example, unpack_method("MyService.LoadUser") would return: ("MyService", "LoadUser")\\n\\n    :Parameters:\\n      method\\n        String method name\\n    \'', '#NEWLINE#', 'pos', '=', 'method', '.', 'find', '(', "'.'", ')', '#NEWLINE#', 'if', '(', 'pos', '==', '(', '-', '1', ')', ')', ':', '#NEWLINE#', '#INDENT#', 'raise', 'RpcException', '(', 'ERR_METHOD_NOT_FOUND', ',', '(', "'Method not found: %s'", '%', 'method', ')', ')', '#NEWLINE#', '#UNINDENT#', 'iface_name', '=', 'method', '[', ':', 'pos', ']', '#NEWLINE#', 'func_name', '=', 'method', '[', '(', 'pos', '+', '1', ')', ':', ']', '#NEWLINE#', 'return', '(', 'iface_name', ',', 'func_name', ')']


All attention probs:

[0.019168971106410027, 0.014250866137444973, 0.03820090368390083, 0.019165311008691788, 0.01425442285835743, 0.014872060157358646, 0.012720239348709583, 0.01694805733859539, 0.013882971368730068, 0.03870970010757446, 0.0144716901704669, 0.02887469157576561, 0.009289117529988289, 0.010132824070751667, 0.010131202638149261, 0.01318744570016861, 0.0071138604544103146, 0.011344529688358307, 0.010331767611205578, 0.007970175705850124, 0.025555916130542755, 0.007931479252874851, 0.009802094660699368, 0.00750329066067934, 0.01486478466540575, 0.006527037359774113, 0.00547431455925107, 0.007491281256079674, 0.00786187220364809, 0.007991469465196133, 0.013086964376270771, 0.012261264026165009, 0.007495296187698841, 0.010614344850182533, 0.007870984263718128, 0.007582253776490688, 0.014560308307409286, 0.008561591617763042, 0.03666999191045761, 0.0067132581025362015, 0.00542113883420825, 0.010974840261042118, 0.013341902755200863, 0.034961625933647156, 0.012237858958542347, 0.022963853552937508, 0.007613327354192734, 0.007286238018423319, 0.04514475539326668, 0.006320307031273842, 0.009232169017195702, 0.025226648896932602, 0.009149694815278053, 0.022429058328270912, 0.006046629045158625, 0.007544634398072958, 0.02400887943804264, 0.0068700541742146015, 0.012569217942655087, 0.006478914991021156, 0.008319280110299587, 0.00654107378795743, 0.010483556427061558, 0.015123873017728329, 0.012206925079226494, 0.036696817725896835, 0.01611075922846794, 0.033423829823732376, 0.013831529766321182]


Top-k source tokens:

['pos', 'pos', 'method', 'iface_name', 'method', 'iface_name', 'func_name', 'method', 'pos', 'func_name']


Top-k attention probs:

[0.04514475539326668, 0.03870970010757446, 0.03820090368390083, 0.036696817725896835, 0.03666999191045761, 0.034961625933647156, 0.033423829823732376, 0.02887469157576561, 0.025555916130542755, 0.025226648896932602]
