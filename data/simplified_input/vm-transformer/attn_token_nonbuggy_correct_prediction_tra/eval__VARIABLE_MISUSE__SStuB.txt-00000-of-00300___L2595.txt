
Original sample:

{"has_bug": false, "bug_kind": 0, "bug_kind_name": "NONE", "source_tokens": ["#NEWLINE#", "@", "pytest", ".", "fixture", "(", "autouse", "=", "True", ")", "#NEWLINE#", "def _configure_application(", "request", ",", "monkeypatch", ")", ":", "#NEWLINE#", "#INDENT#", "\"Use `pytest.mark.options` decorator to pass options to your application\\n    factory::\\n\\n        @pytest.mark.options(debug=False)\\n        def test_something(app):\\n            assert not app.debug, 'the application works not in debug mode!'\\n\\n    \"", "#NEWLINE#", "if", "(", "'app'", "not in", "request", ".", "fixturenames", ")", ":", "#NEWLINE#", "#INDENT#", "return", "#NEWLINE#", "#UNINDENT#", "app", "=", "request", ".", "getfuncargvalue", "(", "'app'", ")", "#NEWLINE#", "options", "=", "request", ".", "keywords", ".", "get", "(", "'options'", ")", "#NEWLINE#", "if", "(", "options", "is not", "None", ")", ":", "#NEWLINE#", "#INDENT#", "for", "(", "key", ",", "value", ")", "in", "options", ".", "kwargs", ".", "items", "(", ")", ":", "#NEWLINE#", "#INDENT#", "monkeypatch", ".", "setitem", "(", "app", ".", "config", ",", "key", ".", "upper", "(", ")", ",", "value", ")"], "error_location": [0], "repair_targets": [], "repair_candidates": [12, 25, 37, 46, 44, 57, 71, 66, 89, 68, 95, 35, 85, 14, 81], "provenances": [{"datasetProvenance": {"datasetName": "ETHPy150Open", "filepath": "vitalk/pytest-flask/pytest_flask/plugin.py", "license": "mit", "note": "license: github_api"}}], "txt_file": "eval__VARIABLE_MISUSE__SStuB.txt-00000-of-00300", "js_count": 2595, "results": {"model": "transformer", "prob": {"loc": [[0.9598206877708435, 1.769336813595146e-05, 2.030734869151729e-08, 2.657768618519185e-07, 1.0110038317634462e-07, 4.98056813569292e-08, 4.998714331350129e-09, 2.3200314558380342e-07, 5.914382086302794e-07, 5.925195978306874e-08, 7.42670280828861e-08, 1.75449379469228e-08, 3.9775048321644135e-07, 1.2141832428369526e-08, 3.196624618340138e-07, 1.4668434467068892e-08, 2.9715268468066824e-08, 8.236054327426245e-08, 5.628361421372574e-08, 1.9230544978654507e-07, 1.589139060342859e-07, 1.2876236610281921e-07, 1.8397095118416473e-06, 9.85158521871199e-07, 4.80294183944352e-05, 0.006535920314490795, 5.805889941257192e-06, 1.587318898543799e-08, 5.758966636904006e-08, 3.184316881288396e-07, 1.7725439249716146e-07, 1.0810644113234957e-07, 3.791129188357445e-07, 2.3483489997033757e-07, 2.1334621180812974e-07, 8.90525086560956e-07, 7.027144022231369e-08, 2.672158814220893e-07, 3.3266783816543466e-07, 1.5868732816670672e-07, 9.263121683034115e-07, 3.6272781471780036e-06, 1.6749626183809596e-06, 3.0725985311619297e-07, 1.3517280876840232e-06, 5.4528126014474765e-08, 0.0001490073773311451, 5.004476406611502e-07, 4.878397419361136e-08, 1.4298241239885101e-06, 1.322148648341681e-07, 2.262481984871556e-06, 2.0363580915727653e-05, 5.97067173657706e-06, 1.3574509694080916e-06, 3.4946640425914666e-07, 1.3222533198131714e-05, 0.00702996039763093, 1.2367272574920207e-05, 2.18003629015584e-06, 1.018255716189742e-06, 4.330635874794098e-06, 8.908147037800518e-07, 3.6792431501453393e-07, 1.9416606846789364e-06, 1.8927781297861657e-07, 1.0133973091797088e-06, 2.010770856486488e-07, 9.848227819020394e-06, 1.3603636261905194e-07, 9.989700089363396e-08, 0.0002574314421508461, 1.1191183375558467e-06, 1.384135117632468e-07, 9.958276905308594e-07, 3.0626344482698187e-07, 2.1463813482114347e-06, 4.256454303686041e-06, 2.4810308332234854e-06, 2.2565925519302255e-06, 1.5457629842785536e-07, 1.594683635630645e-05, 4.7378313183799037e-07, 1.5047479706709055e-08, 1.3453562530685303e-07, 0.022632906213402748, 2.57354849964031e-06, 1.968132750107543e-07, 3.5207233395340154e-07, 1.4486334976027138e-06, 4.0696545511309523e-07, 2.7343260100565203e-08, 1.2334739039943088e-05, 3.4471599974494893e-06, 6.166523007777869e-07, 0.0033489896450191736, 4.647990408557234e-06]], "pointer": [[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.19972935318946838, 0.0, 0.025014474987983704, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.07579987496137619, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.4013781249523163, 0.0, 0.011343712918460369, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.022044282406568527, 0.0, 0.09183485060930252, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0310719517292455e-05, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.08022929728031158, 0.0, 0.04671265184879303, 0.0, 0.0, 0.0003760379913728684, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.04229347035288811, 0.0, 0.0, 0.0, 0.00032345257932320237, 0.0, 0.0, 0.0, 0.0027783086989074945, 0.0, 0.0, 0.0, 0.0, 0.0, 0.00013175976346246898, 0.0]], "target": [0.0]}, "loss": [0.04100882261991501, 0.0], "acc": [1.0, 0.0, 0.0, 0.0]}}


All source tokens:

['#NEWLINE#', '@', 'pytest', '.', 'fixture', '(', 'autouse', '=', 'True', ')', '#NEWLINE#', 'def _configure_application(', 'request', ',', 'monkeypatch', ')', ':', '#NEWLINE#', '#INDENT#', '"Use `pytest.mark.options` decorator to pass options to your application\\n    factory::\\n\\n        @pytest.mark.options(debug=False)\\n        def test_something(app):\\n            assert not app.debug, \'the application works not in debug mode!\'\\n\\n    "', '#NEWLINE#', 'if', '(', "'app'", 'not in', 'request', '.', 'fixturenames', ')', ':', '#NEWLINE#', '#INDENT#', 'return', '#NEWLINE#', '#UNINDENT#', 'app', '=', 'request', '.', 'getfuncargvalue', '(', "'app'", ')', '#NEWLINE#', 'options', '=', 'request', '.', 'keywords', '.', 'get', '(', "'options'", ')', '#NEWLINE#', 'if', '(', 'options', 'is not', 'None', ')', ':', '#NEWLINE#', '#INDENT#', 'for', '(', 'key', ',', 'value', ')', 'in', 'options', '.', 'kwargs', '.', 'items', '(', ')', ':', '#NEWLINE#', '#INDENT#', 'monkeypatch', '.', 'setitem', '(', 'app', '.', 'config', ',', 'key', '.', 'upper', '(', ')', ',', 'value', ')']


All attention probs:

[0.018696794286370277, 0.00999415758997202, 0.019313296303153038, 0.01566125452518463, 0.010343130677938461, 0.011003933846950531, 0.01621885970234871, 0.008605931885540485, 0.010600950568914413, 0.009367845952510834, 0.013351130299270153, 0.015023413114249706, 0.0230802483856678, 0.012281480245292187, 0.03751029819250107, 0.013226731680333614, 0.00887853093445301, 0.009029352106153965, 0.008245090954005718, 0.006201236043125391, 0.008221837691962719, 0.007262248080223799, 0.006015663500875235, 0.011516915634274483, 0.007923840545117855, 0.01674991101026535, 0.004552497062832117, 0.005010545253753662, 0.004221951588988304, 0.005577687174081802, 0.006761325988918543, 0.0069294944405555725, 0.007285981439054012, 0.007855318486690521, 0.008351366966962814, 0.0261125098913908, 0.011334720067679882, 0.009471428580582142, 0.004843410570174456, 0.0050390600226819515, 0.005007987841963768, 0.012450868263840675, 0.00628728698939085, 0.009689382277429104, 0.029675493016839027, 0.012172841466963291, 0.010213159024715424, 0.00391830038279295, 0.005045345053076744, 0.0046653286553919315, 0.005389958154410124, 0.004290945827960968, 0.007812821306288242, 0.0043184468522667885, 0.006283984053879976, 0.006806787569075823, 0.0046065389178693295, 0.025333356112241745, 0.005677599459886551, 0.005230993032455444, 0.0056358096189796925, 0.00575543288141489, 0.006315416656434536, 0.00726162688806653, 0.0075440495274960995, 0.0091121606528759, 0.022622400894761086, 0.011191648431122303, 0.023100782185792923, 0.010196415707468987, 0.007624130696058273, 0.017937352880835533, 0.004089187830686569, 0.005592348054051399, 0.0037872963584959507, 0.005484948866069317, 0.0054647964425385, 0.004950116388499737, 0.00512302340939641, 0.007540019694715738, 0.0065986053086817265, 0.028641127049922943, 0.0034015749115496874, 0.006478485185652971, 0.0064298296347260475, 0.036423806101083755, 0.004666969180107117, 0.007749665528535843, 0.006728245876729488, 0.0177015233784914, 0.00410420959815383, 0.007373189553618431, 0.007139270659536123, 0.005646829027682543, 0.006979108322411776, 0.034826237708330154, 0.010233551263809204]


Top-k source tokens:

['monkeypatch', 'app', 'value', 'options', 'monkeypatch', 'app', 'options', 'value', 'request', 'key']


Top-k attention probs:

[0.03751029819250107, 0.036423806101083755, 0.034826237708330154, 0.029675493016839027, 0.028641127049922943, 0.0261125098913908, 0.025333356112241745, 0.023100782185792923, 0.0230802483856678, 0.022622400894761086]
