
Original sample:

{"has_bug": false, "bug_kind": 0, "bug_kind_name": "NONE", "source_tokens": ["#NEWLINE#", "def download_targets_data(", "targets_url", "=", "None", ")", ":", "#NEWLINE#", "#INDENT#", "'\\n    Download REP 3 targets file and unmarshal from YAML.\\n    DEPRECATED: this function is deprecated. List of targets should be obtained\\n                from the rosdistro module.\\n                The body of this function is an example.\\n\\n    :param target_url: override URL of platform targets file. Defaults\\n      to ``REP3_TARGETS_URL``.\\n    :raises: :exc:`DownloadFailure`\\n    :raises: :exc:`InvalidData` If targets file does not pass cursory validation checks.\\n    '", "#NEWLINE#", "warnings", ".", "warn", "(", "'deprecated, use rosdistro instead'", ",", "PreRep137Warning", ")", "#NEWLINE#", "if", "(", "targets_url", "is", "None", ")", ":", "#NEWLINE#", "#INDENT#", "targets_url", "=", "REP3_TARGETS_URL", "#NEWLINE#", "#UNINDENT#", "try", ":", "#NEWLINE#", "#INDENT#", "f", "=", "urlopen", "(", "targets_url", ",", "timeout", "=", "DOWNLOAD_TIMEOUT", ")", "#NEWLINE#", "text", "=", "f", ".", "read", "(", ")", "#NEWLINE#", "f", ".", "close", "(", ")", "#NEWLINE#", "targets_data", "=", "yaml", ".", "safe_load", "(", "text", ")", "#NEWLINE#", "#UNINDENT#", "except", "Exception", "as", "e", ":", "#NEWLINE#", "#INDENT#", "raise", "DownloadFailure", "(", "(", "'Failed to download target platform data for gbpdistro:\\n\\t%s'", "%", "str", "(", "e", ")", ")", ")", "#NEWLINE#", "#UNINDENT#", "if", "(", "type", "(", "targets_data", ")", "==", "list", ")", ":", "#NEWLINE#", "#INDENT#", "new_targets_data", "=", "{", "#NEWLINE#", "#INDENT#", "#NEWLINE#", "#UNINDENT#", "}", "#NEWLINE#", "for", "t", "in", "targets_data", ":", "#NEWLINE#", "#INDENT#", "platform", "=", "list", "(", "t", ".", "keys", "(", ")", ")", "[", "0", "]", "#NEWLINE#", "new_targets_data", "[", "platform", "]", "=", "t", "[", "platform", "]", "#NEWLINE#", "#UNINDENT#", "targets_data", "=", "new_targets_data", "#NEWLINE#", "#UNINDENT#", "return", "targets_data"], "error_location": [0], "repair_targets": [], "repair_candidates": [49, 69, 63, 98, 118, 147, 153, 76, 88, 106, 136, 149, 116, 126, 141, 38, 51, 57, 122, 138, 143, 2, 22, 29, 42], "provenances": [{"datasetProvenance": {"datasetName": "ETHPy150Open", "filepath": "ros-infrastructure/rosdep/src/rosdep2/rep3.py", "license": "bsd-3-clause", "note": "license: manual_eval"}}], "txt_file": "eval__VARIABLE_MISUSE__SStuB.txt-00000-of-00300", "js_count": 1511, "results": {"model": "transformer", "prob": {"loc": [[0.9031890630722046, 2.616581014081021e-06, 1.149570380221121e-06, 2.657411002360277e-08, 6.657791651321077e-09, 7.245901656460774e-09, 8.3736297895598e-09, 8.137762463888976e-09, 6.782219674761336e-09, 5.720013263044166e-08, 7.646193900257003e-09, 1.9875736612107175e-08, 1.0975188757811338e-08, 1.0970475017302306e-07, 2.3291759632115827e-08, 5.4737625760026276e-05, 1.8302738880038305e-08, 1.3152680367056746e-06, 2.346987315604565e-08, 2.266345866530628e-08, 1.1339984062885833e-08, 2.019089073712621e-08, 0.0003715944476425648, 7.135581370221189e-08, 1.2982994235244405e-08, 8.912305560215827e-09, 1.4008727511338748e-08, 1.041350028430088e-08, 6.0656777378653715e-09, 6.379380579346616e-07, 3.858362163100537e-08, 3.6468369216891006e-05, 1.2228655421608892e-08, 8.315107713485759e-09, 1.0642327907817162e-08, 1.2150720429815465e-08, 1.8934619205879244e-08, 1.5686307364148888e-08, 5.403962859418243e-07, 1.8879589447351464e-08, 1.455094444935412e-08, 9.143484192009055e-08, 0.0009925812482833862, 1.8985103267255e-08, 1.6440425909536316e-08, 6.859421830540668e-08, 6.615118763875216e-06, 5.5047660652007835e-08, 5.705890870899566e-08, 5.133233571541496e-06, 1.013876183009188e-08, 1.199213215841155e-06, 7.127216150593085e-08, 4.004668596735428e-08, 2.6478778636374045e-07, 7.424404202538426e-08, 5.698669269804668e-08, 1.7109505279222503e-07, 5.714397133260718e-08, 6.09085361702455e-07, 3.9745069102536945e-07, 6.286388298804013e-08, 6.068145808058034e-08, 9.360784360978869e-07, 3.161953188168809e-08, 7.764845122437691e-08, 7.937484980402587e-08, 3.703600270910101e-08, 4.418863284172403e-07, 0.000284519832348451, 1.3724738323617203e-07, 3.833185928669991e-07, 1.8689992486997653e-07, 3.888536639351514e-07, 2.8052227207808755e-06, 6.023255537002115e-06, 1.2227220622662571e-06, 2.7621649678621907e-07, 5.568515462073265e-07, 3.0416404683819565e-07, 5.329838614898108e-08, 1.8511380517338694e-07, 1.344194799912657e-07, 4.464653784452821e-07, 0.0002081867423839867, 1.1278889644472656e-07, 3.3424942103010835e-07, 4.3835720475726703e-07, 0.0005311435088515282, 1.791459141031737e-07, 1.294270930429775e-07, 1.4348124466323497e-07, 3.4225683975819265e-07, 2.8264921070331184e-07, 2.0039676940086792e-07, 3.424198879997675e-08, 4.5038692064736097e-07, 7.108118893484061e-07, 0.009664793498814106, 2.191227999048806e-08, 5.398644375986805e-08, 6.030644362908788e-05, 8.136789375612352e-08, 7.926081480036373e-07, 4.7664437374805857e-07, 2.415732467397902e-07, 3.5232487789471634e-06, 7.005062343523605e-07, 5.2807818065048195e-06, 4.1521042248859885e-07, 2.9000463541706267e-07, 3.386903415503184e-07, 2.149568416598413e-07, 1.2165382656803558e-07, 1.7272697050429997e-07, 1.859735903053661e-07, 8.644275339975138e-07, 8.96596574762043e-08, 0.03122510202229023, 2.2170503655161156e-07, 1.392081117046473e-07, 9.161779246369406e-08, 4.6504528654622845e-06, 5.0584088029381746e-08, 2.0919524956752866e-07, 1.4341557630359603e-07, 1.3909823792346288e-05, 4.270204669865052e-07, 1.8507805634726537e-06, 7.473085588571848e-06, 1.772913947206689e-06, 2.5941679382412985e-07, 2.4093696993077174e-06, 9.841076462180354e-06, 3.461499318291317e-07, 4.1968027630900906e-07, 1.925528067658888e-06, 4.192024860572019e-08, 0.005175021942704916, 2.1112299464220996e-08, 5.642201728051077e-08, 0.017491411417722702, 3.432000994507689e-07, 0.005016085226088762, 2.4767325612629065e-07, 2.1009235240398993e-07, 7.058667250703365e-08, 1.450034119443444e-06, 6.998955370818294e-08, 0.0006543839699588716, 2.3466972720598278e-07, 1.521065939869004e-07, 7.250205413811273e-08, 0.024941522628068924]], "pointer": [[0.0, 0.0, 0.0838300809264183, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.00023705563216935843, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.019007695838809013, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.04538609832525253, 0.0, 0.0, 0.0, 0.007610898464918137, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.10787451267242432, 0.0, 0.001289335428737104, 0.0, 0.0, 0.0, 0.0, 0.0, 0.10448778420686722, 0.0, 0.0, 0.0, 0.0, 0.0, 0.13804073631763458, 0.0, 0.0, 0.0, 0.0, 0.0, 0.002961493795737624, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.03562575951218605, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.000681004486978054, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.024818135425448418, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.13875842094421387, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.022350654006004333, 0.0, 0.0038593262434005737, 0.0, 0.0, 0.0, 0.05439912527799606, 0.0, 0.0, 0.0, 0.0024950813967734575, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1755562722682953, 0.0, 0.0024470507632941008, 0.0, 0.0, 0.001406809315085411, 0.0, 0.00046648786519654095, 0.0, 0.0, 0.0, 0.022897327318787575, 0.0, 0.0032779488246887922, 0.0, 0.0, 0.0, 0.00023498035443481058]], "target": [0.0]}, "loss": [0.1018233448266983, 0.0], "acc": [1.0, 0.0, 0.0, 0.0]}}


All source tokens:

['#NEWLINE#', 'def download_targets_data(', 'targets_url', '=', 'None', ')', ':', '#NEWLINE#', '#INDENT#', "'\\n    Download REP 3 targets file and unmarshal from YAML.\\n    DEPRECATED: this function is deprecated. List of targets should be obtained\\n                from the rosdistro module.\\n                The body of this function is an example.\\n\\n    :param target_url: override URL of platform targets file. Defaults\\n      to ``REP3_TARGETS_URL``.\\n    :raises: :exc:`DownloadFailure`\\n    :raises: :exc:`InvalidData` If targets file does not pass cursory validation checks.\\n    '", '#NEWLINE#', 'warnings', '.', 'warn', '(', "'deprecated, use rosdistro instead'", ',', 'PreRep137Warning', ')', '#NEWLINE#', 'if', '(', 'targets_url', 'is', 'None', ')', ':', '#NEWLINE#', '#INDENT#', 'targets_url', '=', 'REP3_TARGETS_URL', '#NEWLINE#', '#UNINDENT#', 'try', ':', '#NEWLINE#', '#INDENT#', 'f', '=', 'urlopen', '(', 'targets_url', ',', 'timeout', '=', 'DOWNLOAD_TIMEOUT', ')', '#NEWLINE#', 'text', '=', 'f', '.', 'read', '(', ')', '#NEWLINE#', 'f', '.', 'close', '(', ')', '#NEWLINE#', 'targets_data', '=', 'yaml', '.', 'safe_load', '(', 'text', ')', '#NEWLINE#', '#UNINDENT#', 'except', 'Exception', 'as', 'e', ':', '#NEWLINE#', '#INDENT#', 'raise', 'DownloadFailure', '(', '(', "'Failed to download target platform data for gbpdistro:\\n\\t%s'", '%', 'str', '(', 'e', ')', ')', ')', '#NEWLINE#', '#UNINDENT#', 'if', '(', 'type', '(', 'targets_data', ')', '==', 'list', ')', ':', '#NEWLINE#', '#INDENT#', 'new_targets_data', '=', '{', '#NEWLINE#', '#INDENT#', '#NEWLINE#', '#UNINDENT#', '}', '#NEWLINE#', 'for', 't', 'in', 'targets_data', ':', '#NEWLINE#', '#INDENT#', 'platform', '=', 'list', '(', 't', '.', 'keys', '(', ')', ')', '[', '0', ']', '#NEWLINE#', 'new_targets_data', '[', 'platform', ']', '=', 't', '[', 'platform', ']', '#NEWLINE#', '#UNINDENT#', 'targets_data', '=', 'new_targets_data', '#NEWLINE#', '#UNINDENT#', 'return', 'targets_data']


All attention probs:

[0.011314966715872288, 0.010152921080589294, 0.02894403226673603, 0.01621328480541706, 0.011991704814136028, 0.009898710064589977, 0.007309558801352978, 0.007633278612047434, 0.007201644591987133, 0.00935697928071022, 0.00895080715417862, 0.011782588437199593, 0.006018836982548237, 0.006617596838623285, 0.006406627595424652, 0.009148442186415195, 0.005890090949833393, 0.008170068264007568, 0.005500540137290955, 0.007744242437183857, 0.007123997900635004, 0.005079358350485563, 0.02098732441663742, 0.005096036940813065, 0.004335495643317699, 0.003746418282389641, 0.004128109663724899, 0.004323319531977177, 0.0043074991554021835, 0.012549188919365406, 0.004312767181545496, 0.007729140110313892, 0.004960948135703802, 0.0051506031304597855, 0.005367149133235216, 0.004453578963875771, 0.004976536612957716, 0.004879427142441273, 0.010171993635594845, 0.003869407344609499, 0.00430177990347147, 0.0035826817620545626, 0.015822548419237137, 0.003727862611413002, 0.003963431343436241, 0.003245212137699127, 0.0055373432114720345, 0.002687477506697178, 0.004704954102635384, 0.010262897238135338, 0.003540533594787121, 0.00801094714552164, 0.0024336392525583506, 0.002600691979750991, 0.0033165530767291784, 0.002928592963144183, 0.003908934537321329, 0.007975357584655285, 0.002235809341073036, 0.003201445797458291, 0.00369435828179121, 0.0034588773269206285, 0.004027568735182285, 0.011687402613461018, 0.0034032377880066633, 0.004159579053521156, 0.0024719310458749533, 0.0033700012136250734, 0.0037083346396684647, 0.018850276246666908, 0.003114368300884962, 0.004814289975911379, 0.004410848021507263, 0.004591390024870634, 0.008268196135759354, 0.007127468008548021, 0.008527490310370922, 0.003151320619508624, 0.004172176588326693, 0.004063363652676344, 0.0045395647175610065, 0.0038136460352689028, 0.0026009543798863888, 0.0030331762973219156, 0.008916807360947132, 0.0031185958068817854, 0.004579212050884962, 0.004623599350452423, 0.012671945616602898, 0.0027716089971363544, 0.0023406329564750195, 0.0023917206563055515, 0.0040016332641243935, 0.003990462981164455, 0.0056617301888763905, 0.003013686742633581, 0.005445141810923815, 0.0039015575312078, 0.019436191767454147, 0.003392792772501707, 0.0035343284253031015, 0.007838957011699677, 0.003227899083867669, 0.004496398381888866, 0.00488392636179924, 0.004217932466417551, 0.00949848536401987, 0.004386176820844412, 0.003654480678960681, 0.003835017094388604, 0.003850084962323308, 0.004779513459652662, 0.004288089461624622, 0.0032614439260214567, 0.004031315911561251, 0.003137414576485753, 0.016896091401576996, 0.004367091227322817, 0.02423804998397827, 0.0038823720533400774, 0.0040063937194645405, 0.004207980819046497, 0.020952923223376274, 0.005901684518903494, 0.0037892283871769905, 0.005503934342414141, 0.00824329350143671, 0.004875769838690758, 0.00395397562533617, 0.004505730699747801, 0.003838038770481944, 0.0031692401971668005, 0.0032687510829418898, 0.004683266393840313, 0.0023349907714873552, 0.004772869870066643, 0.009546589106321335, 0.004915605299174786, 0.017869945615530014, 0.002633428666740656, 0.0035827711690217257, 0.01102434191852808, 0.0029598106630146503, 0.01665033958852291, 0.0025814257096499205, 0.004094857722520828, 0.0040636369958519936, 0.011808646842837334, 0.005034165922552347, 0.01736467145383358, 0.00477999122813344, 0.005321843083947897, 0.00936980452388525, 0.018983924761414528]


Top-k source tokens:

['targets_url', 'targets_data', 'targets_url', 'platform', 'targets_data', 'targets_data', 'text', 'platform', 'new_targets_data', 't']


Top-k attention probs:

[0.02894403226673603, 0.02423804998397827, 0.02098732441663742, 0.020952923223376274, 0.019436191767454147, 0.018983924761414528, 0.018850276246666908, 0.017869945615530014, 0.01736467145383358, 0.016896091401576996]
