
Original sample:

{"has_bug": false, "bug_kind": 0, "bug_kind_name": "NONE", "source_tokens": ["#NEWLINE#", "def check_redis_deployment(", "redis_env_folder", ",", "port", ")", ":", "#NEWLINE#", "#INDENT#", "\"\\n    Verifies that a Redis instance has been deployed properly by doing a PING against the server.\\n    If the instance hasn't been started already then this method will start it itself and will\\n    close it once the verification is done.\\n\\n    @param redis_env_folder: Folder where the Redis config files are stored.\\n    @param port: Port under which the redis instance deployment to verify is running or is supposed to run.\\n\\n    @return True if the check passes. Otherwise an exception is thrown.\\n    \"", "#NEWLINE#", "started_by_us", "=", "False", "#NEWLINE#", "try", ":", "#NEWLINE#", "#INDENT#", "r", "=", "redis", ".", "StrictRedis", "(", "host", "=", "'127.0.0.1'", ",", "port", "=", "port", ",", "db", "=", "0", ")", "#NEWLINE#", "r", ".", "ping", "(", ")", "#NEWLINE#", "#UNINDENT#", "except", "ConnectionError", ":", "#NEWLINE#", "#INDENT#", "result", "=", "start_redis", ".", "delay", "(", "redis_env_folder", ",", "(", "'redis_%d.conf'", "%", "port", ")", ")", "#NEWLINE#", "while", "(", "not", "result", ".", "ready", "(", ")", ")", ":", "#NEWLINE#", "#INDENT#", "time", ".", "sleep", "(", "0.1", ")", "#NEWLINE#", "#UNINDENT#", "started_by_us", "=", "True", "#NEWLINE#", "#UNINDENT#", "r", "=", "redis", ".", "StrictRedis", "(", "host", "=", "'127.0.0.1'", ",", "port", "=", "port", ",", "db", "=", "0", ")", "#NEWLINE#", "r", ".", "ping", "(", ")", "#NEWLINE#", "if", "started_by_us", ":", "#NEWLINE#", "#INDENT#", "pass", "#NEWLINE#", "#UNINDENT#", "return", "True"], "error_location": [0], "repair_targets": [], "repair_candidates": [11, 85, 116, 2, 56, 50, 68, 19, 38, 90, 109, 4, 29, 31, 61, 100, 102], "provenances": [{"datasetProvenance": {"datasetName": "ETHPy150Open", "filepath": "weblabdeusto/weblabdeusto/tools/wcloud/wcloud/actions/redis_actions.py", "license": "bsd-2-clause", "note": "license: bigquery_api"}}], "txt_file": "eval__VARIABLE_MISUSE__SStuB.txt-00000-of-00300", "js_count": 358, "results": {"model": "transformer", "prob": {"loc": [[0.8894591927528381, 4.46279864263488e-06, 1.072158056558692e-06, 2.1564252961070451e-07, 6.768402727175271e-07, 2.090308441893285e-07, 2.7078323228124646e-07, 3.1969997849046194e-07, 2.967002785680961e-07, 6.906150815666479e-07, 2.971409287511051e-07, 7.115831522241933e-06, 6.216321821739257e-07, 4.2859169298026245e-06, 4.4522624875753536e-07, 3.860887716200523e-07, 8.560224955544982e-07, 1.0345592045268859e-06, 6.353240564749285e-07, 3.899927378370194e-06, 2.6143513309762056e-07, 4.9733010598629335e-08, 1.8113728117441497e-07, 1.69502634150831e-08, 1.6566433203024644e-07, 3.1688213653069397e-07, 7.55527253204491e-07, 4.45174882770516e-05, 2.2968102086906583e-07, 1.450765978461277e-07, 4.335406345035153e-07, 0.0009569469257257879, 1.5472615189082717e-07, 2.277842440889799e-06, 6.535694296871952e-07, 2.1089505025884137e-05, 4.55438993185453e-07, 4.948021796735702e-07, 8.695315045770258e-08, 1.6839052818795608e-07, 8.014931296429495e-08, 1.039694552673609e-06, 3.246980895710294e-06, 1.6756815739427111e-06, 1.037070319398481e-06, 3.831976755463984e-06, 3.4786935430020094e-05, 4.3995734699819877e-07, 1.2104765119147487e-06, 7.873829304116953e-07, 2.314386392754386e-06, 2.2382279496468982e-07, 1.1309539615922404e-07, 3.327458557578211e-07, 2.108432362035728e-08, 6.238967671379214e-07, 0.0020432104356586933, 9.770663922381573e-08, 7.518034408349195e-07, 1.6966811244856217e-06, 5.103312332721543e-07, 0.08300091326236725, 2.135692284355173e-06, 1.0306605418008985e-06, 1.8695164953896892e-06, 5.250807362244814e-07, 1.5423681816173485e-06, 5.124808467371622e-06, 2.888693188651814e-06, 1.0668663890101016e-06, 7.542411850636199e-08, 6.8098242991254665e-06, 4.280468147044303e-06, 2.4012061317080224e-07, 4.646528395824134e-06, 1.9825183699140325e-06, 7.781325166433817e-07, 2.1313756803920114e-07, 2.6831853006115125e-07, 2.4721076741229808e-08, 4.6999210212561593e-07, 0.00012839016562793404, 5.016443992644781e-06, 3.431903451200924e-06, 1.1342705192873836e-06, 2.1364458007155918e-06, 5.634652779917815e-07, 1.1486236871860456e-05, 6.975095061534375e-07, 6.474896849795186e-07, 1.9382796381250955e-05, 7.007184308349679e-07, 6.040535822648962e-07, 6.086467010391061e-07, 4.0858648020503097e-08, 1.151574679170153e-06, 5.126370297148242e-07, 2.9549667033279547e-06, 3.601407661335543e-05, 4.6235928152782435e-07, 1.600074455154754e-07, 5.212697828937962e-07, 0.0028557893820106983, 4.901876309304498e-07, 1.1578449630178511e-06, 5.527149937734066e-07, 8.491471089655533e-05, 1.4986557062002248e-06, 1.7507097709312802e-06, 4.0216468732978683e-07, 7.114633717719698e-07, 5.777199021395063e-07, 1.5356306903413497e-05, 1.1621821613516659e-05, 2.829993718478363e-06, 1.0051763865703833e-06, 0.011842620559036732, 1.0809714694914874e-05, 4.417220225150231e-06, 2.276433178849402e-06, 4.063833330292255e-05, 2.619881115606404e-06, 3.3418825751141412e-06, 6.511155334010255e-06, 0.009240210056304932]], "pointer": [[0.0, 0.0, 0.2033160775899887, 0.0, 0.045675091445446014, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.17864227294921875, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.17909951508045197, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.015062657184898853, 0.0, 0.003979183733463287, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.14170849323272705, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.013666625134646893, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0533721037209034, 0.0, 0.0, 0.0, 0.0, 0.0046592215076088905, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0003370728809386492, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.03859864920377731, 0.0, 0.0, 0.0, 0.0, 0.07981841266155243, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.001167667331174016, 0.0, 2.7614822101895697e-05, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.04019973799586296, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0006696216878481209, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]], "target": [0.0]}, "loss": [0.11714164167642593, 0.0], "acc": [1.0, 0.0, 0.0, 0.0]}}


All source tokens:

['#NEWLINE#', 'def check_redis_deployment(', 'redis_env_folder', ',', 'port', ')', ':', '#NEWLINE#', '#INDENT#', '"\\n    Verifies that a Redis instance has been deployed properly by doing a PING against the server.\\n    If the instance hasn\'t been started already then this method will start it itself and will\\n    close it once the verification is done.\\n\\n    @param redis_env_folder: Folder where the Redis config files are stored.\\n    @param port: Port under which the redis instance deployment to verify is running or is supposed to run.\\n\\n    @return True if the check passes. Otherwise an exception is thrown.\\n    "', '#NEWLINE#', 'started_by_us', '=', 'False', '#NEWLINE#', 'try', ':', '#NEWLINE#', '#INDENT#', 'r', '=', 'redis', '.', 'StrictRedis', '(', 'host', '=', "'127.0.0.1'", ',', 'port', '=', 'port', ',', 'db', '=', '0', ')', '#NEWLINE#', 'r', '.', 'ping', '(', ')', '#NEWLINE#', '#UNINDENT#', 'except', 'ConnectionError', ':', '#NEWLINE#', '#INDENT#', 'result', '=', 'start_redis', '.', 'delay', '(', 'redis_env_folder', ',', '(', "'redis_%d.conf'", '%', 'port', ')', ')', '#NEWLINE#', 'while', '(', 'not', 'result', '.', 'ready', '(', ')', ')', ':', '#NEWLINE#', '#INDENT#', 'time', '.', 'sleep', '(', '0.1', ')', '#NEWLINE#', '#UNINDENT#', 'started_by_us', '=', 'True', '#NEWLINE#', '#UNINDENT#', 'r', '=', 'redis', '.', 'StrictRedis', '(', 'host', '=', "'127.0.0.1'", ',', 'port', '=', 'port', ',', 'db', '=', '0', ')', '#NEWLINE#', 'r', '.', 'ping', '(', ')', '#NEWLINE#', 'if', 'started_by_us', ':', '#NEWLINE#', '#INDENT#', 'pass', '#NEWLINE#', '#UNINDENT#', 'return', 'True']


All attention probs:

[0.015592229552567005, 0.009731159545481205, 0.03428269550204277, 0.014166664332151413, 0.03531422093510628, 0.01296242792159319, 0.009539098478853703, 0.00965242087841034, 0.008930877782404423, 0.010923911817371845, 0.011007924564182758, 0.027567286044359207, 0.008708230219781399, 0.009228306822478771, 0.009024475701153278, 0.009890936315059662, 0.007858247496187687, 0.008487832732498646, 0.008221323601901531, 0.015951888635754585, 0.009199868887662888, 0.008762558922171593, 0.004602039232850075, 0.005321328062564135, 0.005613225512206554, 0.007372443098574877, 0.004196967463940382, 0.005617949180305004, 0.003794410964474082, 0.010237964801490307, 0.003963245544582605, 0.021235745400190353, 0.004960249178111553, 0.006520471069961786, 0.004108654335141182, 0.008501961827278137, 0.003920404240489006, 0.007046927232295275, 0.011702369898557663, 0.0032412726432085037, 0.003968885168433189, 0.005173214711248875, 0.0054536075331270695, 0.006171698682010174, 0.005343170836567879, 0.011261023581027985, 0.01732862927019596, 0.004105368163436651, 0.005005260929465294, 0.00537693640217185, 0.011346283368766308, 0.004615770187228918, 0.0061789932660758495, 0.0026272335089743137, 0.003627575933933258, 0.0036986535415053368, 0.02297581546008587, 0.0035365421790629625, 0.0036857069935649633, 0.008367583155632019, 0.0039024180732667446, 0.031157173216342926, 0.003236006014049053, 0.003089836798608303, 0.005405758041888475, 0.006078042555600405, 0.004429634660482407, 0.004638951737433672, 0.013986524194478989, 0.0030404471326619387, 0.004552196245640516, 0.004670932423323393, 0.004145162645727396, 0.003299401607364416, 0.0036501712165772915, 0.004754348192363977, 0.004124279599636793, 0.007228514179587364, 0.0026264453772455454, 0.004029395990073681, 0.0038936983328312635, 0.009261631406843662, 0.0029201367869973183, 0.004793985281139612, 0.004393849056214094, 0.012559611350297928, 0.004720722325146198, 0.006585758179426193, 0.0054152412340044975, 0.004556824918836355, 0.015988821163773537, 0.004964855033904314, 0.00531364232301712, 0.0029431800357997417, 0.003670334117487073, 0.004575241822749376, 0.0076834410429000854, 0.007636710070073605, 0.007502867374569178, 0.00593163538724184, 0.013265739195048809, 0.004765118006616831, 0.021773671731352806, 0.005939606577157974, 0.007518458180129528, 0.003970347344875336, 0.0068903579376637936, 0.0023324235808104277, 0.006247920915484428, 0.011884230189025402, 0.0030435603111982346, 0.006171816028654575, 0.0066663664765655994, 0.0045472620986402035, 0.005550089292228222, 0.005754575598984957, 0.02879730798304081, 0.0038707100320607424, 0.004046844318509102, 0.004306882154196501, 0.00828463677316904, 0.005838340148329735, 0.0059939296916127205, 0.009455788880586624, 0.00891602598130703]


Top-k source tokens:

['port', 'redis_env_folder', 'port', 'started_by_us', 'started_by_us', 'redis_env_folder', 'port', 'port', 'ConnectionError', 'r']


Top-k attention probs:

[0.03531422093510628, 0.03428269550204277, 0.031157173216342926, 0.02879730798304081, 0.027567286044359207, 0.02297581546008587, 0.021773671731352806, 0.021235745400190353, 0.01732862927019596, 0.015988821163773537]
