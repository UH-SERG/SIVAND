
Original sample:

{"has_bug": false, "bug_kind": 0, "bug_kind_name": "NONE", "source_tokens": ["#NEWLINE#", "def testForRegression(", "self", ")", ":", "#NEWLINE#", "#INDENT#", "\"Checks whether there's a regression.\"", "#NEWLINE#", "self", ".", "maxDiff", "=", "65536", "#NEWLINE#", "with", "open", "(", "os", ".", "path", ".", "join", "(", "DOCUMENT_ROOT", ",", "'angular-components/docs/api-docs-examples.json'", ")", ")", "as", "fd", ":", "#NEWLINE#", "#INDENT#", "prev_data", "=", "json", ".", "load", "(", "fd", ")", "#NEWLINE#", "#UNINDENT#", "checks", "=", "prev_data", "[", "self", ".", "handler", "]", "#NEWLINE#", "relevant_checks", "=", "[", "]", "#NEWLINE#", "for", "check", "in", "checks", ":", "#NEWLINE#", "#INDENT#", "if", "(", "check", "[", "'test_class'", "]", "==", "self", ".", "__class__", ".", "__name__", ")", ":", "#NEWLINE#", "#INDENT#", "relevant_checks", ".", "append", "(", "check", ")", "#NEWLINE#", "#UNINDENT#", "#UNINDENT#", "self", ".", "Run", "(", ")", "#NEWLINE#", "self", ".", "assertTrue", "(", "self", ".", "checks", ")", "#NEWLINE#", "checks_str", "=", "json", ".", "dumps", "(", "self", ".", "checks", ",", "indent", "=", "2", ",", "sort_keys", "=", "True", ",", "separators", "=", "(", "','", ",", "': '", ")", ")", "#NEWLINE#", "prev_checks_str", "=", "json", ".", "dumps", "(", "relevant_checks", ",", "indent", "=", "2", ",", "sort_keys", "=", "True", ",", "separators", "=", "(", "','", ",", "': '", ")", ")", "#NEWLINE#", "self", ".", "assertMultiLineEqual", "(", "prev_checks_str", ",", "checks_str", ")"], "error_location": [0], "repair_targets": [], "repair_candidates": [34, 46, 59, 67, 85, 44, 61, 102, 113, 105, 163, 30, 40, 2, 9, 48, 72, 90, 96, 100, 111, 157, 132, 161, 53, 81, 138], "provenances": [{"datasetProvenance": {"datasetName": "ETHPy150Open", "filepath": "google/grr/grr/gui/api_test_lib.py", "license": "apache-2.0", "note": "license: bigquery_api"}}], "txt_file": "eval__VARIABLE_MISUSE__SStuB.txt-00000-of-00300", "js_count": 2969, "results": {"model": "transformer", "prob": {"loc": [[0.8833686113357544, 2.1935024960839655e-06, 6.927005813395226e-08, 3.293675376880856e-08, 3.386762159607315e-08, 4.872214631745919e-08, 3.680638371861278e-08, 3.6394162350461556e-08, 2.3691441697337723e-08, 2.6822235099643876e-07, 1.4260916003649982e-08, 7.181502059694367e-09, 3.4898466338972867e-08, 3.6444404827307153e-07, 1.484819378561042e-08, 1.1696476009959156e-09, 1.5507274042647623e-07, 7.528808509960072e-08, 4.433169578987872e-06, 3.9742044322110814e-08, 1.0905059610877288e-07, 7.578976379818414e-08, 3.720793984030024e-08, 3.8925912804188556e-07, 1.2391518566801096e-06, 1.9898282133112843e-08, 1.2118472625388677e-07, 7.5039778835162e-08, 1.5568433653356806e-08, 5.201887915973202e-07, 3.6643089629251335e-07, 9.174896398178589e-09, 1.5013595699997495e-08, 1.1621984263854301e-08, 3.243989965540095e-07, 5.908367128881764e-09, 8.266093587394607e-09, 3.153776262365682e-08, 2.0429920866149587e-08, 6.069979008316295e-08, 0.00016078370390459895, 1.1635996344239175e-07, 5.86724588913512e-08, 3.279395599520285e-08, 2.3124341623770306e-06, 5.700159899646451e-09, 9.157318709185347e-05, 1.321262061537709e-06, 0.00013677716196980327, 2.038802762172054e-07, 3.432650075296806e-08, 6.635563920553977e-08, 8.856937228074457e-08, 1.7927687849805807e-06, 6.613957026502248e-08, 1.3561740388468024e-06, 6.33556496154597e-08, 1.368758688613525e-07, 1.669369424917022e-07, 3.861888217215892e-06, 2.389229081245503e-08, 0.0003606789105106145, 4.1376296167072724e-08, 5.138178948982386e-08, 3.6033060979434595e-08, 6.808565444771375e-08, 1.319214106842992e-07, 0.00023516536748502403, 6.236606964193925e-07, 4.4723577730110264e-07, 7.750070096790296e-08, 7.603518525911568e-08, 0.01803336665034294, 2.8933931162100635e-07, 7.781949875607097e-07, 4.597563645347691e-07, 9.686450397339286e-08, 1.755962841798464e-07, 6.561356826750853e-07, 1.8003390778176254e-07, 5.141315995160767e-08, 6.979514637350803e-07, 7.570655924382663e-08, 1.67791256444616e-08, 3.116681455139769e-07, 0.0018144933274015784, 4.660154502289515e-07, 4.3436881469460786e-07, 6.642008543167321e-08, 4.574281575742134e-08, 1.6814782455298882e-08, 9.583356330722381e-08, 1.5613285597737558e-07, 1.1421127055655234e-05, 6.674644055237877e-07, 1.2752236955293483e-07, 6.522355278093528e-08, 4.1741483158830306e-08, 3.127222569787591e-08, 2.4591668079665396e-07, 0.09301204979419708, 6.236642775547807e-07, 1.2598044918377127e-07, 5.797417088615475e-07, 9.180555338161867e-08, 6.579977252840763e-06, 1.6565811833402222e-08, 1.1347571415853963e-07, 1.4580091090010683e-07, 3.998291475681981e-08, 2.1458811261254596e-07, 0.0002788615820463747, 6.439083790610312e-07, 5.0923429029126055e-08, 6.343859837443233e-08, 8.220924740953706e-08, 1.294415937991289e-06, 2.690650217118673e-05, 3.341238752341269e-08, 1.6732472829517064e-07, 5.735041099796945e-07, 7.044190510896442e-07, 8.36597706665998e-08, 6.634374472014315e-08, 2.6608199732436333e-07, 2.661970938788727e-06, 7.400455797323957e-05, 1.2333127585861803e-07, 1.4705827311445319e-07, 1.147115995081549e-06, 2.9098688969497744e-07, 9.587139970790304e-08, 6.859413588244934e-06, 2.08400994239355e-08, 1.326497169884533e-07, 9.977828341334316e-08, 5.2850481324639986e-08, 8.462982350465609e-07, 0.0008864568662829697, 2.6178357259709628e-08, 6.026051835306134e-08, 2.982968396736396e-07, 5.305731247062795e-05, 3.345562760159737e-08, 4.7167915795398585e-07, 4.8588094614387956e-06, 6.931252301001223e-07, 5.5883226934838603e-08, 1.0690486362818774e-07, 6.758413064744673e-07, 1.2416566278261598e-05, 0.00040586889372207224, 1.637538389331894e-07, 1.7670796523816534e-06, 2.4319301701325458e-06, 3.4832848427868157e-07, 4.287004529146543e-08, 7.278128322241173e-08, 4.633023920064261e-08, 5.263426583468345e-09, 3.393077463442751e-07, 0.0005047045997343957, 2.053030527804367e-07, 0.00046381796710193157, 4.194833422843658e-07]], "pointer": [[0.0, 0.0, 3.489650407573208e-05, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.00012907602649647743, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.11511845886707306, 0.0, 0.0, 0.0, 0.04931366443634033, 0.0, 0.0, 0.0, 0.0, 0.0, 0.00012140160833951086, 0.0, 0.0, 0.0, 0.028950251638889313, 0.0, 0.00013182280235923827, 0.0, 2.7637175662675872e-05, 0.0, 0.0, 0.0, 0.0, 0.021668700501322746, 0.0, 0.0, 0.0, 0.0, 0.0, 0.7442643642425537, 0.0, 8.398311911150813e-05, 0.0, 0.0, 0.0, 0.0, 0.0, 0.001617444446310401, 0.0, 0.0, 0.0, 0.0, 0.0013093630550429225, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.017296042293310165, 0.0, 0.0, 0.0, 0.0008541467250324786, 0.0, 0.0, 0.0, 0.0, 1.036115463648457e-05, 0.0, 0.0, 0.0, 0.0, 0.0, 5.927680376771605e-06, 0.0, 0.0, 0.0, 1.81650830199942e-05, 0.0, 0.0009543454507365823, 0.0, 0.0, 0.01152273640036583, 0.0, 0.0, 0.0, 0.0, 0.0, 4.841482586925849e-05, 0.0, 0.003215053118765354, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0030251690186560154, 0.0, 0.0, 0.0, 0.0, 0.0, 0.00016617513028904796, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.752743082761299e-05, 0.0, 0.0, 0.0, 4.7768767217348795e-06, 0.0, 9.010606299852952e-05, 0.0]], "target": [0.0]}, "loss": [0.12401259690523148, 0.0], "acc": [1.0, 0.0, 0.0, 0.0]}}


All source tokens:

['#NEWLINE#', 'def testForRegression(', 'self', ')', ':', '#NEWLINE#', '#INDENT#', '"Checks whether there\'s a regression."', '#NEWLINE#', 'self', '.', 'maxDiff', '=', '65536', '#NEWLINE#', 'with', 'open', '(', 'os', '.', 'path', '.', 'join', '(', 'DOCUMENT_ROOT', ',', "'angular-components/docs/api-docs-examples.json'", ')', ')', 'as', 'fd', ':', '#NEWLINE#', '#INDENT#', 'prev_data', '=', 'json', '.', 'load', '(', 'fd', ')', '#NEWLINE#', '#UNINDENT#', 'checks', '=', 'prev_data', '[', 'self', '.', 'handler', ']', '#NEWLINE#', 'relevant_checks', '=', '[', ']', '#NEWLINE#', 'for', 'check', 'in', 'checks', ':', '#NEWLINE#', '#INDENT#', 'if', '(', 'check', '[', "'test_class'", ']', '==', 'self', '.', '__class__', '.', '__name__', ')', ':', '#NEWLINE#', '#INDENT#', 'relevant_checks', '.', 'append', '(', 'check', ')', '#NEWLINE#', '#UNINDENT#', '#UNINDENT#', 'self', '.', 'Run', '(', ')', '#NEWLINE#', 'self', '.', 'assertTrue', '(', 'self', '.', 'checks', ')', '#NEWLINE#', 'checks_str', '=', 'json', '.', 'dumps', '(', 'self', '.', 'checks', ',', 'indent', '=', '2', ',', 'sort_keys', '=', 'True', ',', 'separators', '=', '(', "','", ',', "': '", ')', ')', '#NEWLINE#', 'prev_checks_str', '=', 'json', '.', 'dumps', '(', 'relevant_checks', ',', 'indent', '=', '2', ',', 'sort_keys', '=', 'True', ',', 'separators', '=', '(', "','", ',', "': '", ')', ')', '#NEWLINE#', 'self', '.', 'assertMultiLineEqual', '(', 'prev_checks_str', ',', 'checks_str', ')']


All attention probs:

[0.012189142405986786, 0.009031611494719982, 0.03908195346593857, 0.012869026511907578, 0.008886932395398617, 0.008835405111312866, 0.00738037284463644, 0.008370495401322842, 0.007203194312751293, 0.021889638155698776, 0.006218607071787119, 0.008538985624909401, 0.006803667172789574, 0.00919993594288826, 0.006926652044057846, 0.007658978458493948, 0.008917084895074368, 0.005999308545142412, 0.0085079250857234, 0.005411679856479168, 0.006305565591901541, 0.004784916061908007, 0.004904731642454863, 0.0050658006221055984, 0.00735925417393446, 0.004267915152013302, 0.003933680709451437, 0.003516229335218668, 0.004083509091287851, 0.006624260451644659, 0.011374113149940968, 0.004648439586162567, 0.004730219021439552, 0.00465843640267849, 0.009329876862466335, 0.004238504450768232, 0.006339428015053272, 0.002798924222588539, 0.003981871996074915, 0.0033958705607801676, 0.012671622447669506, 0.0025654437486082315, 0.005516130477190018, 0.004702547565102577, 0.012375655584037304, 0.005351899657398462, 0.008887745440006256, 0.00314715807326138, 0.0110568106174469, 0.0031937421299517155, 0.00312986527569592, 0.0021304634865373373, 0.00377010484226048, 0.012286689132452011, 0.0031164062675088644, 0.0031078930478543043, 0.0026480520609766245, 0.003620470641180873, 0.003326455829665065, 0.017794812098145485, 0.004022407811135054, 0.017394207417964935, 0.0030434823129326105, 0.0029528860468417406, 0.003252617083489895, 0.0037406054325401783, 0.0026945914141833782, 0.008953055366873741, 0.0032140095718204975, 0.004384411033242941, 0.0030915136449038982, 0.002658200915902853, 0.012052536942064762, 0.002078958787024021, 0.002360315527766943, 0.0020667086355388165, 0.003357692388817668, 0.001815000781789422, 0.0027046911418437958, 0.003733908524736762, 0.0036760461516678333, 0.013528062961995602, 0.0023111735936254263, 0.0026121120899915695, 0.0029230527579784393, 0.0159902423620224, 0.0029570236802101135, 0.004699674900621176, 0.0040583829395473, 0.0038363009225577116, 0.00607119407504797, 0.0022590956650674343, 0.0030299846548587084, 0.004404636565595865, 0.003006827784702182, 0.004283198621124029, 0.0070248013362288475, 0.0024446158204227686, 0.0032798186875879765, 0.003064790042117238, 0.03567418456077576, 0.002172452164813876, 0.003038846654817462, 0.003677272005006671, 0.005146700423210859, 0.015244279988110065, 0.005789961200207472, 0.0035979340318590403, 0.0018710442818701267, 0.0021437350660562515, 0.003340954426676035, 0.014422894455492496, 0.0023466229904443026, 0.0025164890103042126, 0.0025028225500136614, 0.004713219124823809, 0.0026485915295779705, 0.006023003254085779, 0.002378706354647875, 0.005240192636847496, 0.002878802828490734, 0.0033389239106327295, 0.0030171945691108704, 0.00558554707095027, 0.0033002514392137527, 0.003311531851068139, 0.005533276125788689, 0.0037408757489174604, 0.0035309353843331337, 0.0028406335040926933, 0.0023872803431004286, 0.00441198144108057, 0.015111076645553112, 0.005006295163184404, 0.0036790932063013315, 0.0018110915552824736, 0.002347146160900593, 0.002632130403071642, 0.02245732769370079, 0.0024895055685192347, 0.005023434292525053, 0.00271904026158154, 0.006617506965994835, 0.002509309444576502, 0.006034215912222862, 0.0031894741114228964, 0.0029471677262336016, 0.0028553130105137825, 0.005765962414443493, 0.0031566321849823, 0.0037007012870162725, 0.006359281484037638, 0.0041788555681705475, 0.005432666279375553, 0.005420424044132233, 0.005121015477925539, 0.005728133022785187, 0.0077164811082184315, 0.003367586061358452, 0.005192219745367765, 0.0050571816973388195, 0.014616170898079872, 0.003958118613809347, 0.029696330428123474, 0.004041026812046766]


Top-k source tokens:

['self', 'self', 'checks_str', 'relevant_checks', 'self', 'check', 'checks', 'check', 'checks_str', 'prev_checks_str']


Top-k attention probs:

[0.03908195346593857, 0.03567418456077576, 0.029696330428123474, 0.02245732769370079, 0.021889638155698776, 0.017794812098145485, 0.017394207417964935, 0.0159902423620224, 0.015244279988110065, 0.015111076645553112]
