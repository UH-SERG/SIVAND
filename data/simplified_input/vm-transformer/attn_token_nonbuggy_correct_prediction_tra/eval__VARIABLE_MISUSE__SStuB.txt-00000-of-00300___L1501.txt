
Original sample:

{"has_bug": false, "bug_kind": 0, "bug_kind_name": "NONE", "source_tokens": ["#NEWLINE#", "def validate(", "self", ")", ":", "#NEWLINE#", "#INDENT#", "if", "(", "self", ".", "properties", "[", "'Type'", "]", "!=", "'String'", ")", ":", "#NEWLINE#", "#INDENT#", "for", "p", "in", "self", ".", "STRING_PROPERTIES", ":", "#NEWLINE#", "#INDENT#", "if", "(", "p", "in", "self", ".", "properties", ")", ":", "#NEWLINE#", "#INDENT#", "raise", "ValueError", "(", "(", "'%s can only be used with parameters of the String type.'", "%", "p", ")", ")", "#NEWLINE#", "#UNINDENT#", "#UNINDENT#", "#UNINDENT#", "if", "(", "self", ".", "properties", "[", "'Type'", "]", "!=", "'Number'", ")", ":", "#NEWLINE#", "#INDENT#", "for", "p", "in", "self", ".", "NUMBER_PROPERTIES", ":", "#NEWLINE#", "#INDENT#", "if", "(", "p", "in", "self", ".", "properties", ")", ":", "#NEWLINE#", "#INDENT#", "raise", "ValueError", "(", "(", "'%s can only be used with parameters of the Number type.'", "%", "p", ")", ")"], "error_location": [0], "repair_targets": [], "repair_candidates": [22, 32, 47, 69, 79, 94, 2, 9, 24, 34, 56, 71, 81], "provenances": [{"datasetProvenance": {"datasetName": "ETHPy150Open", "filepath": "cloudtools/troposphere/troposphere/__init__.py", "license": "bsd-2-clause", "note": "license: bigquery_api"}}], "txt_file": "eval__VARIABLE_MISUSE__SStuB.txt-00000-of-00300", "js_count": 1501, "results": {"model": "transformer", "prob": {"loc": [[0.995098888874054, 2.1516937067644903e-06, 1.2158315598753688e-07, 5.647096124050677e-09, 1.5574773470916625e-08, 2.040707869355174e-08, 1.400682592134217e-08, 6.089753146198973e-09, 5.305644368291951e-09, 3.0887974844517885e-06, 4.406361497899525e-08, 8.854405209035576e-09, 2.737344928505081e-08, 3.2242301273299745e-08, 7.52183559882269e-09, 1.0027177310689694e-08, 6.57602399201096e-08, 1.1623566997798207e-08, 1.746772326782775e-08, 9.249033539049378e-09, 1.02430801618425e-08, 1.1701757784976508e-08, 2.2976450964051764e-07, 2.7210294017976366e-09, 8.863333277986385e-06, 5.583821049981452e-08, 2.9254826117153243e-08, 4.5253415237311856e-08, 7.26925186711469e-09, 2.0639117082055236e-09, 6.953615905302968e-09, 1.2151459394260655e-08, 0.00011593467934289947, 2.353311323588514e-08, 3.961850961786695e-05, 8.433433862364836e-08, 1.7226851056761916e-08, 8.004096940794625e-09, 1.0281391382704896e-07, 1.9613283441799467e-08, 5.866531704867839e-09, 6.308806255184152e-10, 5.239462197437206e-09, 2.3331576670670984e-09, 1.223929224636322e-08, 4.3355805246392265e-05, 9.127428590716136e-09, 0.001197724137455225, 2.0678501755355683e-07, 8.59191473523424e-08, 3.837561379782528e-08, 1.5322696000907854e-08, 1.180618536267275e-08, 8.651571015150239e-09, 2.7635223887045868e-08, 2.597928130398941e-07, 0.0002140802680514753, 1.2077144617705926e-07, 3.727502928541071e-08, 9.873325979015135e-08, 2.6515888862377324e-07, 5.731729757485482e-08, 1.0534867556089011e-07, 2.5325272190457326e-07, 3.2852085496415384e-08, 2.7931861268370994e-07, 7.101242260887375e-08, 3.495205902481757e-08, 4.3750741696158e-08, 4.362928393675247e-06, 2.874714466472028e-09, 3.810529233305715e-05, 2.227109234809177e-07, 9.006752748064173e-07, 4.651137146538531e-07, 2.1404014205472777e-07, 5.092842414455845e-08, 2.271863586145173e-08, 8.654178706990479e-09, 0.0010190733009949327, 7.350876529699235e-08, 0.00022562808590009809, 2.5773741185730614e-07, 1.6593742202530848e-07, 5.61021096245895e-08, 2.943807544397714e-07, 1.0045578591189042e-07, 2.5652907353901355e-08, 2.254161080017525e-09, 6.902674432041067e-09, 5.289689131160458e-09, 1.6143543390967352e-08, 3.764052962651476e-05, 3.2549706929785316e-08, 0.001945090712979436, 2.466669002387789e-07, 1.4267763503994502e-07]], "pointer": [[0.0, 0.0, 0.050251223146915436, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.004469823092222214, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.27401968836784363, 0.0, 0.00099597976077348, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.08244182914495468, 0.0, 0.002884866902604699, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.011426065117120743, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.002944081323221326, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.5519600510597229, 0.0, 0.003238140605390072, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.008491825312376022, 0.0, 0.0012714671902358532, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.005605013575404882, 0.0, 0.0]], "target": [0.0]}, "loss": [0.004913043230772018, 0.0], "acc": [1.0, 0.0, 0.0, 0.0]}}


All source tokens:

['#NEWLINE#', 'def validate(', 'self', ')', ':', '#NEWLINE#', '#INDENT#', 'if', '(', 'self', '.', 'properties', '[', "'Type'", ']', '!=', "'String'", ')', ':', '#NEWLINE#', '#INDENT#', 'for', 'p', 'in', 'self', '.', 'STRING_PROPERTIES', ':', '#NEWLINE#', '#INDENT#', 'if', '(', 'p', 'in', 'self', '.', 'properties', ')', ':', '#NEWLINE#', '#INDENT#', 'raise', 'ValueError', '(', '(', "'%s can only be used with parameters of the String type.'", '%', 'p', ')', ')', '#NEWLINE#', '#UNINDENT#', '#UNINDENT#', '#UNINDENT#', 'if', '(', 'self', '.', 'properties', '[', "'Type'", ']', '!=', "'Number'", ')', ':', '#NEWLINE#', '#INDENT#', 'for', 'p', 'in', 'self', '.', 'NUMBER_PROPERTIES', ':', '#NEWLINE#', '#INDENT#', 'if', '(', 'p', 'in', 'self', '.', 'properties', ')', ':', '#NEWLINE#', '#INDENT#', 'raise', 'ValueError', '(', '(', "'%s can only be used with parameters of the Number type.'", '%', 'p', ')', ')']


All attention probs:

[0.019881946966052055, 0.010998559184372425, 0.06058739498257637, 0.018546216189861298, 0.012420440092682838, 0.012421437539160252, 0.011581712402403355, 0.012253573164343834, 0.00853162631392479, 0.02491936646401882, 0.009142275899648666, 0.01322541106492281, 0.009466826915740967, 0.010028539225459099, 0.008052296936511993, 0.008244824595749378, 0.011866007000207901, 0.006408747285604477, 0.007104160729795694, 0.00851579662412405, 0.00897096749395132, 0.008434769697487354, 0.03350299224257469, 0.0074335914105176926, 0.016216570511460304, 0.004595458507537842, 0.004239857662469149, 0.007198831997811794, 0.006902154069393873, 0.006900149863213301, 0.007456379011273384, 0.005115182138979435, 0.029713444411754608, 0.005582030862569809, 0.01462867297232151, 0.004397078417241573, 0.005789372604340315, 0.005860840901732445, 0.007205789443105459, 0.008270991034805775, 0.007441617548465729, 0.01126845832914114, 0.0090662045404315, 0.007325301878154278, 0.00554920919239521, 0.016621600836515427, 0.005766505375504494, 0.02067602053284645, 0.004982445854693651, 0.004703401122242212, 0.007597058080136776, 0.007585261017084122, 0.007054833695292473, 0.007046704646199942, 0.007240540347993374, 0.0049756173975765705, 0.016519779339432716, 0.003628422738984227, 0.005495014600455761, 0.004514007829129696, 0.007753401529043913, 0.0051760380156338215, 0.0057413289323449135, 0.007838894613087177, 0.005251151975244284, 0.008182825520634651, 0.009530682116746902, 0.009872348979115486, 0.009378533810377121, 0.02637750841677189, 0.009906300343573093, 0.01418117992579937, 0.0038801697082817554, 0.0048374091275036335, 0.00670970743522048, 0.007643573451787233, 0.006584125570952892, 0.00746042700484395, 0.004696724005043507, 0.033939115703105927, 0.004630490206182003, 0.016040174290537834, 0.0036770133301615715, 0.005094629712402821, 0.004287152551114559, 0.006389864720404148, 0.007770375348627567, 0.008536293171346188, 0.011037438176572323, 0.006123079918324947, 0.00645532226189971, 0.006608531344681978, 0.02173594944179058, 0.00651184655725956, 0.025990663096308708, 0.007221838925033808, 0.009277606382966042]


Top-k source tokens:

['self', 'p', 'p', 'p', 'p', 'p', 'self', "'%s can only be used with parameters of the Number type.'", 'p', '#NEWLINE#']


Top-k attention probs:

[0.06058739498257637, 0.033939115703105927, 0.03350299224257469, 0.029713444411754608, 0.02637750841677189, 0.025990663096308708, 0.02491936646401882, 0.02173594944179058, 0.02067602053284645, 0.019881946966052055]
