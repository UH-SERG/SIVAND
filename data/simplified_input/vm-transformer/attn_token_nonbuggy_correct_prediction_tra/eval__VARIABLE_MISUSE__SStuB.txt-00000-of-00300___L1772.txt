
Original sample:

{"has_bug": false, "bug_kind": 0, "bug_kind_name": "NONE", "source_tokens": ["#NEWLINE#", "def validate_dict(", "template", ",", "to_be_checked", ",", "parent", ",", "missing_log", ",", "extras_log", ")", ":", "#NEWLINE#", "#INDENT#", "'\\n    Given a dictionary as a template will check that the to_be_checked\\n    dictionary.\\n    '", "#NEWLINE#", "for", "k", "in", "to_be_checked", ":", "#NEWLINE#", "#INDENT#", "k", "=", "k", ".", "strip", "(", ")", "#NEWLINE#", "if", "(", "not", "(", "k", "in", "template", ")", ")", ":", "#NEWLINE#", "#INDENT#", "extras_log", ".", "append", "(", "(", "'Field %r in record %r'", "%", "(", "k", ",", "parent", ")", ")", ")", "#NEWLINE#", "#UNINDENT#", "#UNINDENT#", "for", "k", "in", "template", ":", "#NEWLINE#", "#INDENT#", "k", "=", "k", ".", "strip", "(", ")", "#NEWLINE#", "if", "(", "not", "(", "k", "in", "to_be_checked", ")", ")", ":", "#NEWLINE#", "#INDENT#", "missing_log", ".", "append", "(", "(", "'Field %r in record %r'", "%", "(", "k", ",", "parent", ")", ")", ")", "#NEWLINE#", "#UNINDENT#", "#UNINDENT#", "for", "(", "key", ",", "val", ")", "in", "template", ".", "iteritems", "(", ")", ":", "#NEWLINE#", "#INDENT#", "if", "isinstance", "(", "val", ",", "dict", ")", ":", "#NEWLINE#", "#INDENT#", "validate_dict", "(", "val", ",", "to_be_checked", "[", "key", "]", ",", "parent", ",", "missing_log", ",", "extras_log", ")"], "error_location": [0], "repair_targets": [], "repair_candidates": [107, 136, 109, 123, 132, 10, 44, 143, 8, 88, 141, 6, 54, 98, 139, 18, 24, 26, 36, 52, 62, 68, 70, 80, 96, 4, 20, 82, 134, 2, 38, 64, 112], "provenances": [{"datasetProvenance": {"datasetName": "ETHPy150Open", "filepath": "fluidinfo/flimp/flimp/utils.py", "license": "mit", "note": "license: bigquery_api"}}], "txt_file": "eval__VARIABLE_MISUSE__SStuB.txt-00000-of-00300", "js_count": 1772, "results": {"model": "transformer", "prob": {"loc": [[0.734281599521637, 1.7406525785190752e-06, 2.908002670665155e-06, 7.111042066298978e-08, 5.104497631691629e-06, 6.751270120730624e-08, 8.450105269730557e-06, 6.393096185774994e-08, 1.563730438647326e-05, 8.966893716433333e-08, 9.007053449749947e-05, 7.072976870858838e-08, 3.1830293778511987e-07, 5.059142722529941e-07, 3.8748899555685057e-07, 1.2308363466217997e-06, 8.330416108037753e-07, 7.421339205393451e-07, 1.8347567674936727e-05, 1.2139186367221555e-07, 0.040773626416921616, 1.508998707322462e-06, 5.73830618577631e-07, 2.5800076741688827e-07, 4.898000042885542e-06, 3.6451316987040627e-07, 9.521862011752091e-06, 1.396106199536007e-07, 4.783335612046358e-07, 3.117924734397093e-06, 2.790578037092928e-06, 1.344088559562806e-06, 1.0179080618399894e-06, 3.7922193314443575e-06, 3.464178234935389e-06, 7.300778861463186e-07, 0.002509848214685917, 1.4370076542036259e-06, 0.009249894879758358, 2.1561170626682724e-07, 6.694082088642972e-08, 5.077364448879962e-07, 5.306088723955327e-07, 3.9472286061936757e-07, 5.281056928652106e-06, 1.3949961896742025e-07, 6.180230371910511e-08, 1.2630763990273408e-07, 1.1262488897045841e-06, 3.6163185086479643e-06, 1.2365306929496e-06, 2.0718305222544586e-06, 0.0034362284932285547, 8.389300774069852e-07, 0.008429469540715218, 1.0692283467506059e-06, 1.1053915613956633e-06, 7.106217481123167e-07, 8.200631214094756e-07, 6.805522616559756e-07, 7.125572665245272e-07, 1.143048962148896e-06, 1.034822162182536e-05, 1.672128746577073e-07, 0.043892405927181244, 1.5039732943478157e-06, 5.472110160553711e-07, 3.891395294886024e-07, 8.402220373682212e-06, 2.1293517704634723e-07, 8.271403203252703e-06, 2.443107405269984e-07, 1.4296482504505548e-06, 3.928676596842706e-05, 2.964676696137758e-06, 1.6727434513086337e-06, 1.750925093801925e-06, 1.6857311493367888e-06, 7.572892627649708e-06, 2.2814142539573368e-06, 0.001528356340713799, 1.177873286906106e-06, 0.08173191547393799, 3.830345178812422e-07, 1.926613606428873e-07, 1.6821996950966422e-06, 8.334079097949143e-07, 4.33260822774173e-07, 1.1513127901707776e-05, 3.5385900787332503e-07, 1.0787059068206872e-07, 2.7542461111806915e-07, 1.0771531151476665e-06, 9.13284020498395e-06, 3.675823165849579e-07, 1.598825861037767e-06, 0.0014601462753489614, 1.4257690281738178e-06, 0.00911393016576767, 9.710029189591296e-07, 6.645001349170343e-07, 4.778128754878708e-07, 5.008315611121361e-07, 4.7015711857056885e-07, 4.0650385813023604e-07, 7.72964710904489e-07, 1.6345968845143943e-07, 6.797167770855594e-07, 3.8649838529636327e-07, 3.8226617107284255e-06, 2.097095261888171e-07, 3.787240245856083e-07, 3.881386419379851e-06, 3.5749044968724775e-07, 1.4037381106390967e-06, 3.779339022003114e-05, 1.128711119235959e-06, 3.4627510103746317e-06, 2.0038073671457823e-06, 5.123383743921295e-07, 4.606225729730795e-07, 3.0415171181630285e-07, 3.9797126305529673e-07, 0.006032134406268597, 5.418560249381699e-07, 0.0032653880771249533, 2.767215789845068e-07, 3.891571850545006e-06, 5.004175704925728e-07, 2.3516184910477023e-07, 2.0890907137527392e-07, 2.6727752810984384e-07, 0.01734115183353424, 8.68210292992444e-07, 0.017051097005605698, 4.076528057339601e-06, 0.0011572235962375998, 5.314541340339929e-07, 4.0014776914176764e-07, 0.009192715398967266, 2.6811108000401873e-07, 0.004482609685510397, 2.2593457060793298e-07, 0.00467179249972105, 5.684458983523655e-07]], "pointer": [[0.0, 0.0, 0.07942727953195572, 0.0, 0.03957309201359749, 0.0, 0.04666854813694954, 0.0, 0.0869792178273201, 0.0, 0.034026701003313065, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.01921527087688446, 0.0, 0.0005340250791050494, 0.0, 0.0, 0.0, 0.22293932735919952, 0.0, 0.0007843283819966018, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.02150742895901203, 0.0, 0.01867607608437538, 0.0, 0.0, 0.0, 0.0, 0.0, 0.03044850565493107, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0076811122708022594, 0.0, 0.011841868050396442, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.01710052229464054, 0.0, 0.005259919911623001, 0.0, 0.0, 0.0, 0.2599840760231018, 0.0, 0.0006139650940895081, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0014930319739505649, 0.0, 0.01707860268652439, 0.0, 0.0, 0.0, 0.0, 0.0, 0.018511811271309853, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.006302406545728445, 0.0, 0.011204985901713371, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.012576823122799397, 0.0, 0.016807012259960175, 0.0, 0.0, 0.0005382989183999598, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0038638408295810223, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0010502611985430121, 0.0, 0.00027070610667578876, 0.0, 0.0006253496976569295, 0.0, 0.0, 0.0013192022452130914, 0.0, 0.0015440962743014097, 0.0, 0.0035521918907761574, 0.0]], "target": [0.0]}, "loss": [0.3088628053665161, 0.0], "acc": [1.0, 0.0, 0.0, 0.0]}}


All source tokens:

['#NEWLINE#', 'def validate_dict(', 'template', ',', 'to_be_checked', ',', 'parent', ',', 'missing_log', ',', 'extras_log', ')', ':', '#NEWLINE#', '#INDENT#', "'\\n    Given a dictionary as a template will check that the to_be_checked\\n    dictionary.\\n    '", '#NEWLINE#', 'for', 'k', 'in', 'to_be_checked', ':', '#NEWLINE#', '#INDENT#', 'k', '=', 'k', '.', 'strip', '(', ')', '#NEWLINE#', 'if', '(', 'not', '(', 'k', 'in', 'template', ')', ')', ':', '#NEWLINE#', '#INDENT#', 'extras_log', '.', 'append', '(', '(', "'Field %r in record %r'", '%', '(', 'k', ',', 'parent', ')', ')', ')', '#NEWLINE#', '#UNINDENT#', '#UNINDENT#', 'for', 'k', 'in', 'template', ':', '#NEWLINE#', '#INDENT#', 'k', '=', 'k', '.', 'strip', '(', ')', '#NEWLINE#', 'if', '(', 'not', '(', 'k', 'in', 'to_be_checked', ')', ')', ':', '#NEWLINE#', '#INDENT#', 'missing_log', '.', 'append', '(', '(', "'Field %r in record %r'", '%', '(', 'k', ',', 'parent', ')', ')', ')', '#NEWLINE#', '#UNINDENT#', '#UNINDENT#', 'for', '(', 'key', ',', 'val', ')', 'in', 'template', '.', 'iteritems', '(', ')', ':', '#NEWLINE#', '#INDENT#', 'if', 'isinstance', '(', 'val', ',', 'dict', ')', ':', '#NEWLINE#', '#INDENT#', 'validate_dict', '(', 'val', ',', 'to_be_checked', '[', 'key', ']', ',', 'parent', ',', 'missing_log', ',', 'extras_log', ')']


All attention probs:

[0.00902473647147417, 0.00889084953814745, 0.019792864099144936, 0.012328850105404854, 0.019032243639230728, 0.009070610627532005, 0.020397869870066643, 0.008044037036597729, 0.021883882582187653, 0.009758276864886284, 0.016607219353318214, 0.00969164352864027, 0.007998064160346985, 0.007522851228713989, 0.0065563032403588295, 0.007397340144962072, 0.0077002327889204025, 0.007228728383779526, 0.017324721440672874, 0.008640415035188198, 0.01546614058315754, 0.006367108318954706, 0.006226672325283289, 0.0061380271799862385, 0.012472178786993027, 0.004768545739352703, 0.008771322667598724, 0.0028868005611002445, 0.00320931407622993, 0.004163918551057577, 0.004191169049590826, 0.005257884971797466, 0.005207820329815149, 0.00412411242723465, 0.00403273431584239, 0.0031808968633413315, 0.014227590523660183, 0.00405013095587492, 0.015361329540610313, 0.0035569153260439634, 0.0028281279373914003, 0.0039140391163527966, 0.006141843274235725, 0.0048909867182374, 0.012554214335978031, 0.0031458651646971703, 0.0029201123397797346, 0.0030684832017868757, 0.003183591179549694, 0.004127112217247486, 0.0031339668203145266, 0.0028238301165401936, 0.011955231428146362, 0.0029269831720739603, 0.014300568029284477, 0.0028696132358163595, 0.00297242752276361, 0.002814376028254628, 0.004109199158847332, 0.0037862753961235285, 0.004108198918402195, 0.0038849166594445705, 0.01213348563760519, 0.005493439733982086, 0.020725572481751442, 0.0038421049248427153, 0.004702751990407705, 0.005141038913279772, 0.009269886650145054, 0.0049508982338011265, 0.006399211008101702, 0.0023174493107944727, 0.0032782943453639746, 0.004805767443031073, 0.003082434879615903, 0.004426309373229742, 0.00470737973228097, 0.0039007854647934437, 0.0030067258048802614, 0.0023954336065799, 0.013210566714406013, 0.003005081322044134, 0.02322118915617466, 0.0027026343159377575, 0.00252765160985291, 0.0031428819056600332, 0.004492737352848053, 0.004968942608684301, 0.01019094604998827, 0.0022341895382851362, 0.0032492077443748713, 0.0028453513514250517, 0.0032210599165409803, 0.0043204412795603275, 0.00295581785030663, 0.003759977174922824, 0.012822202406823635, 0.003934128675609827, 0.0137334568426013, 0.003098159097135067, 0.0031390562653541565, 0.002857979154214263, 0.005145750939846039, 0.005647358018904924, 0.004872105084359646, 0.003734012134373188, 0.004981434438377619, 0.014387828297913074, 0.004262303933501244, 0.012970693409442902, 0.004429609980434179, 0.004406401887536049, 0.008608805015683174, 0.0019784115720540285, 0.0032455273903906345, 0.004053566604852676, 0.0024069836363196373, 0.0029614856466650963, 0.003701954847201705, 0.0038110045716166496, 0.005020547192543745, 0.0036303470842540264, 0.0032797232270240784, 0.010440552607178688, 0.005158037878572941, 0.012623478658497334, 0.0061304387636482716, 0.007545920088887215, 0.006272665690630674, 0.0055661676451563835, 0.008859269320964813, 0.004607982002198696, 0.022808372974395752, 0.003428358118981123, 0.014409915544092655, 0.0035570282489061356, 0.013678048737347126, 0.0030122403986752033, 0.002953257178887725, 0.014958148822188377, 0.003444804809987545, 0.012060417793691158, 0.0036357438657432795, 0.014318776316940784, 0.0037695677019655704]


Top-k source tokens:

['to_be_checked', 'val', 'missing_log', 'template', 'parent', 'template', 'to_be_checked', 'k', 'extras_log', 'to_be_checked']


Top-k attention probs:

[0.02322118915617466, 0.022808372974395752, 0.021883882582187653, 0.020725572481751442, 0.020397869870066643, 0.019792864099144936, 0.019032243639230728, 0.017324721440672874, 0.016607219353318214, 0.01546614058315754]
