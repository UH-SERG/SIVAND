
Original sample:

{"has_bug": false, "bug_kind": 0, "bug_kind_name": "NONE", "source_tokens": ["#NEWLINE#", "def get_header(", "self", ",", "name", ",", "required", "=", "False", ")", ":", "#NEWLINE#", "#INDENT#", "\"Retrieve the raw string value for the given header.\\n\\n        Args:\\n            name (str): Header name, case-insensitive (e.g., 'Content-Type')\\n            required (bool, optional): Set to ``True`` to raise\\n                ``HTTPBadRequest`` instead of returning gracefully when the\\n                header is not found (default ``False``).\\n\\n        Returns:\\n            str: The value of the specified header if it exists, or ``None`` if\\n                the header is not found and is not required.\\n\\n        Raises:\\n            HTTPBadRequest: The header was not found in the request, but\\n                it was required.\\n\\n        \"", "#NEWLINE#", "wsgi_name", "=", "name", ".", "upper", "(", ")", ".", "replace", "(", "'-'", ",", "'_'", ")", "#NEWLINE#", "try", ":", "#NEWLINE#", "#INDENT#", "return", "self", ".", "env", "[", "(", "'HTTP_'", "+", "wsgi_name", ")", "]", "#NEWLINE#", "#UNINDENT#", "except", "KeyError", ":", "#NEWLINE#", "#INDENT#", "if", "(", "wsgi_name", "in", "WSGI_CONTENT_HEADERS", ")", ":", "#NEWLINE#", "#INDENT#", "try", ":", "#NEWLINE#", "#INDENT#", "return", "self", ".", "env", "[", "wsgi_name", "]", "#NEWLINE#", "#UNINDENT#", "except", "KeyError", ":", "#NEWLINE#", "#INDENT#", "pass", "#NEWLINE#", "#UNINDENT#", "#UNINDENT#", "if", "(", "not", "required", ")", ":", "#NEWLINE#", "#INDENT#", "return", "None", "#NEWLINE#", "#UNINDENT#", "raise", "HTTPMissingHeader", "(", "name", ")"], "error_location": [0], "repair_targets": [], "repair_candidates": [4, 17, 98, 2, 35, 66, 15, 42, 54, 70, 6, 86], "provenances": [{"datasetProvenance": {"datasetName": "ETHPy150Open", "filepath": "falconry/falcon/falcon/request.py", "license": "apache-2.0", "note": "license: github_api"}}], "txt_file": "eval__VARIABLE_MISUSE__SStuB.txt-00000-of-00300", "js_count": 391, "results": {"model": "transformer", "prob": {"loc": [[0.9300767779350281, 4.98458166475757e-06, 2.1675047889857524e-07, 6.669489494015579e-08, 7.286816412488406e-07, 4.774312500899214e-08, 5.672908628184814e-06, 4.5029079842606734e-07, 2.3055019937601173e-07, 2.7613371145207566e-08, 7.782772826203654e-08, 1.3522618758088356e-07, 1.0176703568731682e-07, 4.069873966727755e-07, 1.2169388696747774e-07, 1.5132769703996019e-06, 1.746709799022028e-08, 1.0137536037291284e-06, 1.045609963057359e-07, 9.04123638179044e-08, 2.503071243609156e-07, 3.627724822763412e-07, 2.448863654080924e-07, 3.3761956785838265e-08, 6.70134932079236e-06, 0.00012158177560195327, 3.0349389135153615e-07, 0.0011547196190804243, 7.885377044658526e-07, 1.0288261620416961e-07, 1.3795353481782513e-07, 3.613481567299459e-07, 1.5986447010618576e-07, 1.2264224835689674e-07, 1.1933715882150864e-07, 0.00012155326112406328, 2.1157929097626038e-07, 1.0079799217521668e-08, 6.516705752801499e-08, 1.6427202353952453e-06, 8.54986069498409e-07, 2.3142385430219292e-07, 0.02142319455742836, 1.0873618094819903e-07, 3.065339058139216e-07, 2.109422325702326e-07, 2.1026616536801157e-07, 1.979215539904544e-06, 1.816934371845491e-07, 6.652145430052769e-07, 5.768580422227387e-07, 3.9183552758004225e-07, 5.915547376389441e-07, 9.06692093849415e-07, 0.007113993633538485, 2.047939233307261e-05, 2.1235259737295564e-06, 3.711699889663578e-07, 3.550662313500652e-06, 7.879949066591507e-07, 4.5270763848748174e-07, 2.4568018943682546e-06, 2.4570219920860836e-06, 7.139337299122417e-07, 5.175174919713754e-07, 1.474005131285594e-07, 0.00018960321904160082, 4.4419672917683783e-07, 2.9831898729071327e-08, 4.358449245955853e-07, 0.011460690759122372, 2.758552682280424e-06, 5.78135768591892e-07, 4.3891157019970706e-07, 1.0427252163935918e-05, 8.355750225064185e-08, 1.033200078381924e-06, 1.0254618700855644e-06, 6.451410285990278e-07, 1.813782773751882e-06, 6.414832682821725e-07, 5.478839852912643e-07, 5.840432208970014e-07, 4.302819149870629e-07, 2.6413008527015336e-05, 3.7794402487634216e-06, 0.006542880088090897, 8.900510124476568e-07, 4.5538608901551925e-06, 1.9490621525619645e-06, 5.769791187049123e-07, 1.6488368146383436e-06, 3.869332886097254e-06, 3.504144103771978e-07, 1.8615088492879295e-07, 3.389616765048231e-08, 2.819189148794976e-07, 4.285850081942044e-06, 0.021653978154063225, 1.3199968407207052e-06]], "pointer": [[0.0, 0.0, 0.008387591689825058, 0.0, 0.4408843517303467, 0.0, 0.1840517371892929, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.2882036864757538, 0.0, 0.036042287945747375, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0014382395893335342, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0021454899106174707, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0057498919777572155, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0009136724984273314, 0.0, 0.0, 0.0, 0.01828327588737011, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0004062180232722312, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.013493546284735203, 0.0]], "target": [0.0]}, "loss": [0.07248792052268982, 0.0], "acc": [1.0, 0.0, 0.0, 0.0]}}


All source tokens:

['#NEWLINE#', 'def get_header(', 'self', ',', 'name', ',', 'required', '=', 'False', ')', ':', '#NEWLINE#', '#INDENT#', '"Retrieve the raw string value for the given header.\\n\\n        Args:\\n            name (str): Header name, case-insensitive (e.g., \'Content-Type\')\\n            required (bool, optional): Set to ``True`` to raise\\n                ``HTTPBadRequest`` instead of returning gracefully when the\\n                header is not found (default ``False``).\\n\\n        Returns:\\n            str: The value of the specified header if it exists, or ``None`` if\\n                the header is not found and is not required.\\n\\n        Raises:\\n            HTTPBadRequest: The header was not found in the request, but\\n                it was required.\\n\\n        "', '#NEWLINE#', 'wsgi_name', '=', 'name', '.', 'upper', '(', ')', '.', 'replace', '(', "'-'", ',', "'_'", ')', '#NEWLINE#', 'try', ':', '#NEWLINE#', '#INDENT#', 'return', 'self', '.', 'env', '[', '(', "'HTTP_'", '+', 'wsgi_name', ')', ']', '#NEWLINE#', '#UNINDENT#', 'except', 'KeyError', ':', '#NEWLINE#', '#INDENT#', 'if', '(', 'wsgi_name', 'in', 'WSGI_CONTENT_HEADERS', ')', ':', '#NEWLINE#', '#INDENT#', 'try', ':', '#NEWLINE#', '#INDENT#', 'return', 'self', '.', 'env', '[', 'wsgi_name', ']', '#NEWLINE#', '#UNINDENT#', 'except', 'KeyError', ':', '#NEWLINE#', '#INDENT#', 'pass', '#NEWLINE#', '#UNINDENT#', '#UNINDENT#', 'if', '(', 'not', 'required', ')', ':', '#NEWLINE#', '#INDENT#', 'return', 'None', '#NEWLINE#', '#UNINDENT#', 'raise', 'HTTPMissingHeader', '(', 'name', ')']


All attention probs:

[0.013066831976175308, 0.010527653619647026, 0.05002796649932861, 0.015737736597657204, 0.023207146674394608, 0.012049943208694458, 0.03715280443429947, 0.009975973516702652, 0.01234971359372139, 0.010249738581478596, 0.01116370689123869, 0.012523215264081955, 0.010415855795145035, 0.009985094889998436, 0.010468932799994946, 0.03055383637547493, 0.012247147969901562, 0.023200880736112595, 0.005837674718350172, 0.00825344305485487, 0.007090685423463583, 0.006842169910669327, 0.00490683363750577, 0.0068429396487772465, 0.006016910076141357, 0.006258712615817785, 0.004423751961439848, 0.010019855573773384, 0.004969597328454256, 0.007374810986220837, 0.008230872452259064, 0.006377471145242453, 0.006819101981818676, 0.006553534418344498, 0.009480391629040241, 0.014795373193919659, 0.003830929519608617, 0.006643505766987801, 0.005377544090151787, 0.0051987050101161, 0.007137134671211243, 0.005472302436828613, 0.02945404313504696, 0.004817267879843712, 0.00382179650478065, 0.007112381514161825, 0.007487553171813488, 0.013670233078300953, 0.008307990618050098, 0.005629608407616615, 0.005568009335547686, 0.005430645775049925, 0.006120624486356974, 0.003957080654799938, 0.021176064386963844, 0.004743505269289017, 0.007349999621510506, 0.003491729497909546, 0.004461600910872221, 0.004888955969363451, 0.005574773997068405, 0.007762966211885214, 0.00553815346211195, 0.005355882458388805, 0.0061048343777656555, 0.0090688057243824, 0.017627589404582977, 0.004492979031056166, 0.006866802461445332, 0.005276905372738838, 0.023512765765190125, 0.0053976308554410934, 0.007702590432018042, 0.007467892020940781, 0.013673308305442333, 0.008252846077084541, 0.005569462198764086, 0.0060827829875051975, 0.005681103095412254, 0.01084880344569683, 0.006145205348730087, 0.005768162664026022, 0.006163029465824366, 0.008260747417807579, 0.007415706291794777, 0.005946813616901636, 0.031845126301050186, 0.005748600699007511, 0.006259353831410408, 0.006329403258860111, 0.006176669616252184, 0.007536241319030523, 0.005666994955390692, 0.006600857246667147, 0.007027844432741404, 0.014502588659524918, 0.009098172187805176, 0.01109196525067091, 0.037007104605436325, 0.010403010994195938]


Top-k source tokens:

['self', 'required', 'name', 'required', 'wsgi_name', 'wsgi_name', 'wsgi_name', 'name', 'name', 'wsgi_name']


Top-k attention probs:

[0.05002796649932861, 0.03715280443429947, 0.037007104605436325, 0.031845126301050186, 0.03055383637547493, 0.02945404313504696, 0.023512765765190125, 0.023207146674394608, 0.023200880736112595, 0.021176064386963844]
