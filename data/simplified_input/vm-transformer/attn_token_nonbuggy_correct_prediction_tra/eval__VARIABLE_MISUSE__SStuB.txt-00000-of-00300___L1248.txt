
Original sample:

{"has_bug": false, "bug_kind": 0, "bug_kind_name": "NONE", "source_tokens": ["#NEWLINE#", "@", "classmethod", "#NEWLINE#", "def append_to_run_from_text(", "cls", ",", "r", ",", "text", ")", ":", "#NEWLINE#", "#INDENT#", "'\\n        Create a \"one-shot\" ``_RunContentAppender`` instance and use it to\\n        append the run content elements corresponding to *text* to the\\n        ``<w:r>`` element *r*.\\n        '", "#NEWLINE#", "appender", "=", "cls", "(", "r", ")", "#NEWLINE#", "appender", ".", "add_text", "(", "text", ")"], "error_location": [0], "repair_targets": [], "repair_candidates": [5, 18, 7, 20, 9, 27, 16, 23], "provenances": [{"datasetProvenance": {"datasetName": "ETHPy150Open", "filepath": "python-openxml/python-docx/docx/oxml/text/run.py", "license": "mit", "note": "license: bigquery_api"}}], "txt_file": "eval__VARIABLE_MISUSE__SStuB.txt-00000-of-00300", "js_count": 1248, "results": {"model": "transformer", "prob": {"loc": [[0.9953572154045105, 2.539900378906168e-05, 1.2189038045562484e-07, 4.4841971202913555e-07, 4.3142324557265965e-07, 4.878984782408224e-06, 1.2322078646320733e-07, 1.0160719199348023e-07, 4.880478599034177e-08, 6.251381137190037e-07, 1.4232535150426884e-08, 5.5521844899431017e-08, 1.0757556623275377e-07, 1.0388567517338743e-07, 2.917279857683752e-07, 1.7831223431130638e-07, 5.061665888206335e-06, 7.516645084137963e-09, 7.803942025930155e-07, 1.0255676841097738e-07, 0.003241240046918392, 9.33487626753049e-07, 2.535526562041923e-07, 1.3631300532779278e-07, 1.5186945745426783e-07, 6.220189252559294e-09, 5.879731546087896e-08, 0.001360683236271143, 3.330367519538413e-07]], "pointer": [[0.0, 0.0, 0.0, 0.0, 0.0, 0.03299194574356079, 0.0, 0.45772600173950195, 0.0, 0.2667600214481354, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1874494105577469, 0.0, 0.010088370181620121, 0.0, 0.018493395298719406, 0.0, 0.0, 0.012283100746572018, 0.0, 0.0, 0.0, 0.014207669533789158, 0.0]], "target": [0.0]}, "loss": [0.004653457552194595, 0.0], "acc": [1.0, 0.0, 0.0, 0.0]}}


All source tokens:

['#NEWLINE#', '@', 'classmethod', '#NEWLINE#', 'def append_to_run_from_text(', 'cls', ',', 'r', ',', 'text', ')', ':', '#NEWLINE#', '#INDENT#', '\'\\n        Create a "one-shot" ``_RunContentAppender`` instance and use it to\\n        append the run content elements corresponding to *text* to the\\n        ``<w:r>`` element *r*.\\n        \'', '#NEWLINE#', 'appender', '=', 'cls', '(', 'r', ')', '#NEWLINE#', 'appender', '.', 'add_text', '(', 'text', ')']


All attention probs:

[0.03638638183474541, 0.019154449924826622, 0.03552010655403137, 0.0332006998360157, 0.020502574741840363, 0.07737120240926743, 0.024968327954411507, 0.04980619624257088, 0.027740363031625748, 0.06782088428735733, 0.037198733538389206, 0.028572889044880867, 0.025344273075461388, 0.02014239691197872, 0.0224689319729805, 0.02259640395641327, 0.05928780511021614, 0.028081834316253662, 0.03145937994122505, 0.015219307504594326, 0.051057107746601105, 0.012231623753905296, 0.02482226863503456, 0.05576646700501442, 0.01636289246380329, 0.020492156967520714, 0.023547736927866936, 0.06907935440540314, 0.04379725083708763]


Top-k source tokens:

['cls', 'text', 'text', 'appender', 'appender', 'r', 'r', ')', ')', '#NEWLINE#']


Top-k attention probs:

[0.07737120240926743, 0.06907935440540314, 0.06782088428735733, 0.05928780511021614, 0.05576646700501442, 0.051057107746601105, 0.04980619624257088, 0.04379725083708763, 0.037198733538389206, 0.03638638183474541]
