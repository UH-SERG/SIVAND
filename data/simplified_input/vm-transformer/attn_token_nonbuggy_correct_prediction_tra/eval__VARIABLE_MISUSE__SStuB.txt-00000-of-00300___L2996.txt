
Original sample:

{"has_bug": false, "bug_kind": 0, "bug_kind_name": "NONE", "source_tokens": ["#NEWLINE#", "def export(", "self", ",", "*", "args", ")", ":", "#NEWLINE#", "#INDENT#", "' copies the package recipe (conanfile.py and associated files) to your local store,\\n        where it can be shared and reused in other projects.\\n        From that store, it can be uploaded to any remote with \"upload\" command.\\n        '", "#NEWLINE#", "parser", "=", "argparse", ".", "ArgumentParser", "(", "description", "=", "self", ".", "export", ".", "__doc__", ",", "prog", "=", "'conan export'", ")", "#NEWLINE#", "parser", ".", "add_argument", "(", "'user'", ",", "help", "=", "'user_name[/channel]. By default, channel is \"testing\", e.g., phil or phil/stable'", ")", "#NEWLINE#", "parser", ".", "add_argument", "(", "'--path'", ",", "'-p'", ",", "default", "=", "None", ",", "help", "=", "(", "'Optional. Folder with a %s. Default current directory.'", "%", "CONANFILE", ")", ")", "#NEWLINE#", "parser", ".", "add_argument", "(", "'--keep-source'", ",", "'-k'", ",", "default", "=", "False", ",", "action", "=", "'store_true'", ",", "help", "=", "'Optional. Do not remove the source folder in local store. Use for testing purposes only'", ")", "#NEWLINE#", "args", "=", "parser", ".", "parse_args", "(", "*", "args", ")", "#NEWLINE#", "current_path", "=", "(", "args", ".", "path", "or", "os", ".", "getcwd", "(", ")", ")", "#NEWLINE#", "keep_source", "=", "args", ".", "keep_source", "#NEWLINE#", "self", ".", "_manager", ".", "export", "(", "args", ".", "user", ",", "current_path", ",", "keep_source", ")"], "error_location": [0], "repair_targets": [], "repair_candidates": [12, 31, 42, 63, 86, 2, 20, 114, 5, 84, 91, 97, 110, 120, 94, 124, 108, 112, 126], "provenances": [{"datasetProvenance": {"datasetName": "ETHPy150Open", "filepath": "conan-io/conan/conans/client/command.py", "license": "mit", "note": "license: bigquery_api"}}], "txt_file": "eval__VARIABLE_MISUSE__SStuB.txt-00000-of-00300", "js_count": 2996, "results": {"model": "transformer", "prob": {"loc": [[0.6399270296096802, 2.9074744816171005e-06, 1.6027241827032412e-06, 2.3896832956893377e-08, 1.932973958673756e-08, 2.2228080069908174e-06, 1.3630034878531205e-08, 5.28764552143457e-08, 6.942264718645674e-08, 4.8320366374809964e-08, 1.1707763292179152e-07, 6.156303555826526e-08, 4.03126614401117e-06, 2.221252159984033e-08, 7.383147959671987e-08, 4.9500417986791945e-08, 2.5308441564675377e-08, 9.925064148319507e-08, 2.088249146936505e-07, 1.4791996250096417e-07, 0.0006986352964304388, 3.387727645076666e-07, 5.836349714627431e-07, 2.9470442086676485e-07, 1.1850334402652152e-07, 4.874274495136888e-08, 5.062125296717568e-08, 2.0150217494574463e-07, 7.648674795746047e-07, 1.5554658716609993e-07, 6.750268966015938e-08, 3.8138985303248774e-08, 3.1736508532276275e-08, 1.6643584288544844e-08, 2.443078415126365e-07, 1.608146362741536e-07, 4.024393973622864e-08, 3.265724046741525e-08, 1.2864445864124718e-07, 7.430293749166594e-07, 2.2566699442450044e-07, 8.04583635272138e-08, 3.1249964393964547e-08, 8.195080170025903e-08, 1.774859370584636e-08, 1.8601404860874027e-07, 3.2271032068820205e-07, 2.1278852102568635e-07, 2.3130290571771184e-07, 9.547508028617813e-08, 3.5033045264754037e-07, 6.196318622642139e-07, 1.7542144803428528e-07, 7.052342709812365e-08, 5.8454155293929944e-08, 1.4475712362127524e-07, 2.6874272407440003e-07, 4.1615157897467725e-07, 1.8122479161775118e-07, 1.4938476624593022e-06, 2.8557522568917193e-07, 2.676847827842721e-07, 1.3248185837255733e-07, 3.711846119358597e-08, 4.86719535786051e-08, 2.0565964931051894e-08, 4.278186054307298e-07, 2.1860216747882077e-07, 1.5488417659526021e-07, 2.1672234140623914e-07, 1.3590532432772306e-07, 1.0838923003575474e-07, 8.134009021887323e-07, 3.154079593059578e-07, 1.0790994053877512e-07, 7.835244986154066e-08, 3.242840023176541e-07, 7.573332254651177e-07, 1.2407512883783056e-07, 6.229038262972608e-08, 3.785292506108817e-07, 1.8311419580641086e-06, 3.3819168265836197e-07, 2.668248555437458e-07, 3.5676841889653588e-06, 3.532773718006865e-08, 2.1614368961309083e-06, 2.0037884951307205e-07, 3.3604294458200457e-08, 6.544261168528465e-07, 2.0796515798338078e-07, 0.02631785161793232, 1.3227537465354544e-06, 5.380826451073517e-07, 3.075518407058553e-06, 2.8612491931312434e-08, 8.640636650625311e-08, 0.0026451675221323967, 5.495359118867782e-07, 4.505267980903227e-08, 1.477846183206566e-07, 8.311311034958635e-07, 7.937571808724897e-07, 1.8829737769010535e-07, 3.4264076020917855e-06, 1.5966721775839687e-06, 9.841427299761563e-07, 5.618739464807732e-07, 2.8306023978075245e-06, 4.4422442613267776e-08, 0.004261548165231943, 5.625109338325274e-07, 1.1276487157374504e-06, 6.004279953231162e-07, 4.979530331183923e-06, 1.7308479982602876e-07, 9.34762578452819e-09, 7.060488655952213e-07, 4.7634785005357116e-08, 3.7142984865567996e-07, 0.3224937915802002, 1.5407722457894124e-06, 2.6428885746554442e-08, 2.3473400290185964e-07, 0.0029412482399493456, 2.57615369037012e-07, 0.0006503590266220272, 1.3133002312315512e-06]], "pointer": [[0.0, 0.0, 0.2116309255361557, 0.0, 0.0, 0.02244022861123085, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.009380770847201347, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.16121312975883484, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.002049713861197233, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0032410065177828074, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0024744682013988495, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0127866817638278, 0.0, 0.001129398588091135, 0.0, 0.0, 0.0, 0.0, 0.0003867027990054339, 0.0, 0.0, 0.002675284631550312, 0.0, 0.0, 6.345137808239087e-05, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.002537389751523733, 0.0, 0.005411531310528517, 0.0, 0.0019068681867793202, 0.0, 0.5603229403495789, 0.0, 0.0, 0.0, 0.0, 0.0, 0.00025446421932429075, 0.0, 0.0, 0.0, 1.2310632882872596e-05, 0.0, 8.266532677225769e-05, 0.0]], "target": [0.0]}, "loss": [0.4464011490345001, 0.0], "acc": [1.0, 0.0, 0.0, 0.0]}}


All source tokens:

['#NEWLINE#', 'def export(', 'self', ',', '*', 'args', ')', ':', '#NEWLINE#', '#INDENT#', '\' copies the package recipe (conanfile.py and associated files) to your local store,\\n        where it can be shared and reused in other projects.\\n        From that store, it can be uploaded to any remote with "upload" command.\\n        \'', '#NEWLINE#', 'parser', '=', 'argparse', '.', 'ArgumentParser', '(', 'description', '=', 'self', '.', 'export', '.', '__doc__', ',', 'prog', '=', "'conan export'", ')', '#NEWLINE#', 'parser', '.', 'add_argument', '(', "'user'", ',', 'help', '=', '\'user_name[/channel]. By default, channel is "testing", e.g., phil or phil/stable\'', ')', '#NEWLINE#', 'parser', '.', 'add_argument', '(', "'--path'", ',', "'-p'", ',', 'default', '=', 'None', ',', 'help', '=', '(', "'Optional. Folder with a %s. Default current directory.'", '%', 'CONANFILE', ')', ')', '#NEWLINE#', 'parser', '.', 'add_argument', '(', "'--keep-source'", ',', "'-k'", ',', 'default', '=', 'False', ',', 'action', '=', "'store_true'", ',', 'help', '=', "'Optional. Do not remove the source folder in local store. Use for testing purposes only'", ')', '#NEWLINE#', 'args', '=', 'parser', '.', 'parse_args', '(', '*', 'args', ')', '#NEWLINE#', 'current_path', '=', '(', 'args', '.', 'path', 'or', 'os', '.', 'getcwd', '(', ')', ')', '#NEWLINE#', 'keep_source', '=', 'args', '.', 'keep_source', '#NEWLINE#', 'self', '.', '_manager', '.', 'export', '(', 'args', '.', 'user', ',', 'current_path', ',', 'keep_source', ')']


All attention probs:

[0.017259439453482628, 0.009441097266972065, 0.0411946065723896, 0.01485889870673418, 0.0139514384791255, 0.028356149792671204, 0.01250651478767395, 0.008378339000046253, 0.008412426337599754, 0.008116941899061203, 0.012662045657634735, 0.010473261587321758, 0.026008784770965576, 0.009832344949245453, 0.008092235773801804, 0.006110431160777807, 0.0069773816503584385, 0.0069278632290661335, 0.011153776198625565, 0.006705523934215307, 0.02211841382086277, 0.004741509910672903, 0.005207712296396494, 0.005077028181403875, 0.00569224962964654, 0.004676074255257845, 0.007201625499874353, 0.004196797031909227, 0.0059561897069215775, 0.004393924493342638, 0.006317554507404566, 0.00975130870938301, 0.004165456164628267, 0.004481636453419924, 0.004347605165094137, 0.005839165300130844, 0.004448047839105129, 0.007063107565045357, 0.004397416952997446, 0.005503108259290457, 0.0035536291543394327, 0.00592099130153656, 0.012036308646202087, 0.0034578375052660704, 0.004444757476449013, 0.004045352805405855, 0.004843948874622583, 0.0037409886717796326, 0.006316687446087599, 0.003941277973353863, 0.008366821333765984, 0.0038448572158813477, 0.003139181761071086, 0.003193090669810772, 0.0065433005802333355, 0.0032900848891586065, 0.0033016849774867296, 0.003768979338929057, 0.003333853790536523, 0.008823149837553501, 0.0032158938702195883, 0.0031140882056206465, 0.005197504069656134, 0.00776932155713439, 0.0027606897056102753, 0.004330895841121674, 0.004170381464064121, 0.006430020090192556, 0.004311853088438511, 0.00600838428363204, 0.004299640189856291, 0.006441307719796896, 0.003925615455955267, 0.004297605250030756, 0.00351095013320446, 0.007532706018537283, 0.0030149954836815596, 0.006300112698227167, 0.002904885448515415, 0.005851134657859802, 0.003278677584603429, 0.004343139007687569, 0.0028567647095769644, 0.0056660971604287624, 0.020496319979429245, 0.00465989438816905, 0.01276408601552248, 0.003987483214586973, 0.00651137949898839, 0.005384761840105057, 0.003619181690737605, 0.03992873802781105, 0.003580346703529358, 0.005569993052631617, 0.01935572922229767, 0.005517322104424238, 0.0047828434035182, 0.017704280093312263, 0.004400012083351612, 0.003796263365074992, 0.004832683131098747, 0.005519157741218805, 0.0035212875809520483, 0.0051862625405192375, 0.005769960582256317, 0.004150085616856813, 0.0027532402891665697, 0.005731452256441116, 0.015317067503929138, 0.004774693865329027, 0.01969122514128685, 0.003587188199162483, 0.005820804741233587, 0.0055983238853514194, 0.010185073129832745, 0.002235470339655876, 0.0035504510160535574, 0.002543253358453512, 0.004631932359188795, 0.00481551606208086, 0.0320531390607357, 0.0035232603549957275, 0.005215439945459366, 0.005084479693323374, 0.02434643544256687, 0.007648447994142771, 0.027299171313643456, 0.008120987564325333]


Top-k source tokens:

['self', 'args', 'args', 'args', 'keep_source', 'parser', 'current_path', 'self', 'args', 'args']


Top-k attention probs:

[0.0411946065723896, 0.03992873802781105, 0.0320531390607357, 0.028356149792671204, 0.027299171313643456, 0.026008784770965576, 0.02434643544256687, 0.02211841382086277, 0.020496319979429245, 0.01969122514128685]
