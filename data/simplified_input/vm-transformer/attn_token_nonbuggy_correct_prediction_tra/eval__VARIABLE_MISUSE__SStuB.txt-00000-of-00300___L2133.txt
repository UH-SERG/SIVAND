
Original sample:

{"has_bug": false, "bug_kind": 0, "bug_kind_name": "NONE", "source_tokens": ["#NEWLINE#", "def decode(", "self", ",", "encoded_packet", ")", ":", "#NEWLINE#", "#INDENT#", "'Decode a transmitted package.'", "#NEWLINE#", "b64", "=", "False", "#NEWLINE#", "if", "(", "not", "isinstance", "(", "encoded_packet", ",", "six", ".", "binary_type", ")", ")", ":", "#NEWLINE#", "#INDENT#", "encoded_packet", "=", "encoded_packet", ".", "encode", "(", "'utf-8'", ")", "#NEWLINE#", "#UNINDENT#", "self", ".", "packet_type", "=", "six", ".", "byte2int", "(", "encoded_packet", "[", "0", ":", "1", "]", ")", "#NEWLINE#", "if", "(", "self", ".", "packet_type", "==", "98", ")", ":", "#NEWLINE#", "#INDENT#", "self", ".", "binary", "=", "True", "#NEWLINE#", "encoded_packet", "=", "encoded_packet", "[", "1", ":", "]", "#NEWLINE#", "self", ".", "packet_type", "=", "six", ".", "byte2int", "(", "encoded_packet", "[", "0", ":", "1", "]", ")", "#NEWLINE#", "self", ".", "packet_type", "-=", "48", "#NEWLINE#", "b64", "=", "True", "#NEWLINE#", "#UNINDENT#", "else", ":", "#NEWLINE#", "#INDENT#", "if", "(", "self", ".", "packet_type", ">=", "48", ")", ":", "#NEWLINE#", "#INDENT#", "self", ".", "packet_type", "-=", "48", "#NEWLINE#", "self", ".", "binary", "=", "False", "#NEWLINE#", "#UNINDENT#", "else", ":", "#NEWLINE#", "#INDENT#", "self", ".", "binary", "=", "True", "#NEWLINE#", "#UNINDENT#", "#UNINDENT#", "self", ".", "data", "=", "None", "#NEWLINE#", "if", "(", "len", "(", "encoded_packet", ")", ">", "1", ")", ":", "#NEWLINE#", "#INDENT#", "if", "self", ".", "binary", ":", "#NEWLINE#", "#INDENT#", "if", "b64", ":", "#NEWLINE#", "#INDENT#", "self", ".", "data", "=", "base64", ".", "b64decode", "(", "encoded_packet", "[", "1", ":", "]", ")", "#NEWLINE#", "#UNINDENT#", "else", ":", "#NEWLINE#", "#INDENT#", "self", ".", "data", "=", "encoded_packet", "[", "1", ":", "]", "#NEWLINE#", "#UNINDENT#", "#UNINDENT#", "else", ":", "#NEWLINE#", "#INDENT#", "try", ":", "#NEWLINE#", "#INDENT#", "self", ".", "data", "=", "self", ".", "json", ".", "loads", "(", "encoded_packet", "[", "1", ":", "]", ".", "decode", "(", "'utf-8'", ")", ")", "#NEWLINE#", "#UNINDENT#", "except", "ValueError", ":", "#NEWLINE#", "#INDENT#", "self", ".", "data", "=", "encoded_packet", "[", "1", ":", "]", ".", "decode", "(", "'utf-8'", ")"], "error_location": [0], "repair_targets": [], "repair_candidates": [11, 103, 174, 2, 40, 58, 67, 81, 97, 114, 123, 129, 140, 148, 167, 178, 198, 218, 222, 246, 4, 20, 30, 32, 48, 73, 75, 89, 158, 186, 202, 228, 250], "provenances": [{"datasetProvenance": {"datasetName": "ETHPy150Open", "filepath": "miguelgrinberg/python-engineio/engineio/packet.py", "license": "mit", "note": "license: bigquery_api"}}], "txt_file": "eval__VARIABLE_MISUSE__SStuB.txt-00000-of-00300", "js_count": 2133, "results": {"model": "transformer", "prob": {"loc": [[0.9932639598846436, 7.212619266283582e-07, 6.264223628704713e-08, 3.822646377216188e-08, 3.0220626285881735e-06, 4.12292777696166e-08, 1.087961649659519e-07, 1.0240864867228083e-07, 8.416758845442018e-08, 2.1296033025919314e-07, 7.477900254571068e-08, 3.445821448622155e-06, 2.152324185544785e-07, 3.7573606732621556e-06, 1.3905822981996607e-07, 6.499687543737309e-08, 2.0426526248229493e-08, 2.0022817182052677e-07, 5.038151584813022e-08, 3.5309071222400235e-07, 0.0009820173727348447, 1.6086714538232627e-07, 6.915822268638294e-06, 5.450843900689506e-07, 8.616142821438189e-08, 4.0213333107885774e-08, 2.2313891179237544e-08, 6.010013464674557e-08, 5.962856874930367e-08, 3.4683321104012066e-08, 2.0972220227122307e-06, 4.051837620977494e-08, 6.943316748220241e-07, 1.572279018091649e-07, 2.0484102947193605e-07, 8.682879411026079e-07, 6.893400950502837e-06, 3.1155806823335297e-07, 1.9354177993591293e-07, 1.0067702049809668e-07, 7.975593518949609e-08, 5.22938456981592e-08, 5.956832538345225e-08, 1.883689293435964e-07, 2.7148015391276203e-08, 3.268562238645245e-07, 2.8455378497938e-08, 5.099773829897458e-07, 0.0006511688698083162, 1.5030525446491083e-06, 2.5748747134457517e-07, 4.905573973701394e-07, 1.64319303053162e-07, 1.9854307709010754e-07, 1.0332136213264675e-07, 9.011609591880188e-08, 7.847781091641082e-08, 3.0476954293590097e-07, 0.00011692340922309086, 2.174588331627092e-07, 3.2703873387163185e-08, 2.978720203827834e-07, 1.1892743714270182e-06, 1.4541217296937248e-07, 5.385099370869284e-07, 1.4815664428624586e-07, 7.651759403870528e-08, 1.9779487558935216e-07, 6.392576779035153e-08, 2.006317778580069e-08, 1.9106244053546106e-06, 1.2833547771151643e-05, 2.8437460741770337e-07, 1.1048511623812374e-05, 4.400913411473084e-08, 0.0008069149916991591, 9.160083891401882e-07, 2.9001660095673287e-07, 5.75282001591404e-07, 3.7294526578079967e-07, 3.425573993354192e-07, 1.278939265603185e-07, 9.723969895958362e-08, 4.6868212422168654e-08, 1.4098213796387427e-07, 1.6384046830353327e-07, 3.57926694505295e-07, 2.4841671830699852e-08, 4.670969815379067e-07, 0.00040814641397446394, 5.421412652140134e-07, 4.2932077803925495e-07, 4.185002069334587e-07, 2.8894157821923727e-07, 2.5609841713958303e-07, 2.726171715039527e-07, 3.6045884144186857e-07, 2.8791625936719356e-06, 2.3414939676058566e-07, 8.622159697324605e-08, 2.4374437543883687e-06, 3.319580173410941e-06, 7.3333865202585e-07, 7.2922930485219695e-06, 4.6040469214858604e-07, 8.343497938767541e-06, 6.385177471202041e-07, 5.393569608713733e-07, 3.487348863018269e-07, 2.782988133276376e-07, 4.0197522821472376e-07, 1.8961888770263613e-07, 1.4399395809050475e-07, 8.804232010106716e-08, 6.547066732309759e-05, 3.19188671937809e-07, 1.02576372285057e-07, 6.905188456585165e-07, 8.836672122924938e-07, 3.151963596792484e-07, 9.126147233473603e-07, 3.592426196519227e-07, 1.9812942753105744e-07, 4.139155407756334e-06, 1.7394749818322452e-07, 1.1577967029552383e-07, 4.153794634476071e-06, 3.1762167509441497e-06, 3.6261860714148497e-07, 1.985839901408326e-07, 9.95661650904367e-08, 7.402319823768266e-08, 3.3626781714701792e-06, 3.1156746445049066e-06, 4.149302981204528e-07, 2.7157483373230207e-07, 1.6110818990000553e-07, 2.220565704647015e-07, 1.7418535946944758e-07, 1.0816138029667854e-07, 4.1463681554887444e-07, 8.693829300909783e-08, 4.422285826422012e-08, 1.4292076002675458e-06, 1.961038151421235e-06, 5.023223366151797e-07, 2.2467925475666561e-07, 1.2678081873218616e-07, 4.6582516688431497e-07, 8.258671613248225e-08, 5.084237031383054e-08, 9.5895552476577e-07, 6.251181048355647e-07, 3.0685336582791933e-07, 2.8922290340460677e-08, 8.77149197719973e-09, 2.1251857162951637e-08, 2.1622118140385282e-07, 0.0009656163747422397, 6.788010864511307e-08, 9.729944139280633e-08, 1.3798627378491801e-06, 6.109594892222958e-07, 9.316134423897893e-07, 1.0872340681089554e-06, 2.390507916061324e-07, 1.8517937405704288e-07, 6.19089332758449e-05, 1.4111141410921846e-07, 3.8547298686353315e-08, 5.909244578106154e-07, 2.8774266525033454e-07, 7.272089419529948e-08, 1.396364410766182e-07, 0.0010966332629323006, 5.248598426987883e-07, 4.175083745394659e-07, 1.9700947007095237e-07, 5.626414463222318e-07, 8.555420549782866e-08, 2.2242588215704018e-08, 7.441476412850534e-08, 5.3352515294591285e-08, 4.520455547663005e-07, 2.8862885415037454e-08, 5.528988253900025e-07, 0.0002692601701710373, 6.194784418767085e-07, 1.9252588572271634e-06, 7.244965445352136e-07, 1.6950051531239296e-06, 3.1717552246846026e-06, 6.984139986343507e-07, 4.7291769078583457e-07, 5.916072609579714e-07, 8.446692163488478e-07, 4.218823335122579e-07, 1.1370152463996419e-07, 4.3772493540927826e-07, 8.787790761743963e-08, 3.9997619438736365e-08, 8.276207807966784e-08, 0.0003034501278307289, 1.7174568256450584e-06, 1.8949713194160722e-06, 1.023907316266559e-06, 2.0583377136063064e-06, 5.183186999602185e-07, 2.670535081961134e-07, 2.0551435397919704e-07, 3.224655529265874e-07, 4.983348844689317e-07, 3.1699693181508337e-07, 1.616588605202196e-07, 1.4939142545244977e-07, 2.3208097843507858e-07, 2.368902727312161e-07, 1.2502088964083669e-07, 2.4068225457085646e-07, 8.479456425902754e-08, 3.762398392836985e-08, 2.818128166381939e-07, 0.00039731350261718035, 1.3787241925911076e-07, 6.477733194287794e-08, 2.0179031423595006e-07, 5.841237893378093e-08, 4.0348612628804403e-07, 0.0002043576241703704, 3.1360994512397156e-07, 7.754188686703856e-07, 2.934078224825498e-07, 4.0071671492114547e-07, 1.1370478603112133e-07, 7.343888341893035e-08, 1.3076512004772667e-05, 3.92917627323186e-06, 5.682686037289386e-07, 5.056498935118725e-07, 3.976483640144579e-07, 4.4704199808620615e-07, 7.08773313817801e-07, 1.926183585965191e-07, 2.3178283470315364e-07, 3.5226668160248664e-07, 1.6696601790044951e-07, 1.1783459967773524e-06, 1.5060476243888843e-07, 2.1993772136852385e-08, 1.684294375081663e-06, 0.00020772074640262872, 4.109759856874007e-07, 7.657756100343249e-07, 8.30543029906039e-08, 3.364071972100646e-07, 1.781958616220436e-07, 4.097613626186103e-08, 2.466086243657628e-06, 4.308772076910827e-06, 5.123417281538423e-07]], "pointer": [[0.0, 0.0, 0.00498614925891161, 0.0, 0.29257431626319885, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.11223157495260239, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0031178162898868322, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.26331838965415955, 0.0, 0.0075057027861475945, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.005028112791478634, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.007931401021778584, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.001440452178940177, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.003990932367742062, 0.0, 0.0, 0.0, 0.0, 0.0, 0.13759379088878632, 0.0, 0.00017375573224853724, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0017890081508085132, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.00987877044826746, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0020754027646034956, 0.0, 0.0, 0.0, 0.0, 0.0, 0.10164066404104233, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.000268368748947978, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.001110019744373858, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0014803983503952622, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0008318463223986328, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0008810178260318935, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0038497319910675287, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0002203120238846168, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.002960312645882368, 0.0, 0.0, 0.0, 0.0004937337362207472, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.007525222841650248, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.00017063306586351246, 0.0, 0.0, 0.0, 0.005739261861890554, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0007163594709709287, 0.0, 0.0, 0.0, 0.0012465539621189237, 0.0, 0.0, 0.0, 0.0, 0.0, 0.01251602079719305, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0003032444219570607, 0.0, 0.0, 0.0, 0.0044107018038630486, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]], "target": [0.0]}, "loss": [0.006758449599146843, 0.0], "acc": [1.0, 0.0, 0.0, 0.0]}}


All source tokens:

['#NEWLINE#', 'def decode(', 'self', ',', 'encoded_packet', ')', ':', '#NEWLINE#', '#INDENT#', "'Decode a transmitted package.'", '#NEWLINE#', 'b64', '=', 'False', '#NEWLINE#', 'if', '(', 'not', 'isinstance', '(', 'encoded_packet', ',', 'six', '.', 'binary_type', ')', ')', ':', '#NEWLINE#', '#INDENT#', 'encoded_packet', '=', 'encoded_packet', '.', 'encode', '(', "'utf-8'", ')', '#NEWLINE#', '#UNINDENT#', 'self', '.', 'packet_type', '=', 'six', '.', 'byte2int', '(', 'encoded_packet', '[', '0', ':', '1', ']', ')', '#NEWLINE#', 'if', '(', 'self', '.', 'packet_type', '==', '98', ')', ':', '#NEWLINE#', '#INDENT#', 'self', '.', 'binary', '=', 'True', '#NEWLINE#', 'encoded_packet', '=', 'encoded_packet', '[', '1', ':', ']', '#NEWLINE#', 'self', '.', 'packet_type', '=', 'six', '.', 'byte2int', '(', 'encoded_packet', '[', '0', ':', '1', ']', ')', '#NEWLINE#', 'self', '.', 'packet_type', '-=', '48', '#NEWLINE#', 'b64', '=', 'True', '#NEWLINE#', '#UNINDENT#', 'else', ':', '#NEWLINE#', '#INDENT#', 'if', '(', 'self', '.', 'packet_type', '>=', '48', ')', ':', '#NEWLINE#', '#INDENT#', 'self', '.', 'packet_type', '-=', '48', '#NEWLINE#', 'self', '.', 'binary', '=', 'False', '#NEWLINE#', '#UNINDENT#', 'else', ':', '#NEWLINE#', '#INDENT#', 'self', '.', 'binary', '=', 'True', '#NEWLINE#', '#UNINDENT#', '#UNINDENT#', 'self', '.', 'data', '=', 'None', '#NEWLINE#', 'if', '(', 'len', '(', 'encoded_packet', ')', '>', '1', ')', ':', '#NEWLINE#', '#INDENT#', 'if', 'self', '.', 'binary', ':', '#NEWLINE#', '#INDENT#', 'if', 'b64', ':', '#NEWLINE#', '#INDENT#', 'self', '.', 'data', '=', 'base64', '.', 'b64decode', '(', 'encoded_packet', '[', '1', ':', ']', ')', '#NEWLINE#', '#UNINDENT#', 'else', ':', '#NEWLINE#', '#INDENT#', 'self', '.', 'data', '=', 'encoded_packet', '[', '1', ':', ']', '#NEWLINE#', '#UNINDENT#', '#UNINDENT#', 'else', ':', '#NEWLINE#', '#INDENT#', 'try', ':', '#NEWLINE#', '#INDENT#', 'self', '.', 'data', '=', 'self', '.', 'json', '.', 'loads', '(', 'encoded_packet', '[', '1', ':', ']', '.', 'decode', '(', "'utf-8'", ')', ')', '#NEWLINE#', '#UNINDENT#', 'except', 'ValueError', ':', '#NEWLINE#', '#INDENT#', 'self', '.', 'data', '=', 'encoded_packet', '[', '1', ':', ']', '.', 'decode', '(', "'utf-8'", ')']


All attention probs:

[0.013053725473582745, 0.008430272340774536, 0.030229199677705765, 0.011636701412498951, 0.02748960629105568, 0.008956697769463062, 0.005800921469926834, 0.005748402792960405, 0.005438765976577997, 0.008924733847379684, 0.00764660956338048, 0.024019716307520866, 0.0062308837659657, 0.0066617997363209724, 0.006893064361065626, 0.006500898860394955, 0.006400723475962877, 0.0050986032001674175, 0.005571388639509678, 0.005221012979745865, 0.016369305551052094, 0.004127542953938246, 0.004910958930850029, 0.0036027138121426105, 0.004285781644284725, 0.0031963898800313473, 0.0029075886122882366, 0.003161702072247863, 0.003721551038324833, 0.003801472019404173, 0.01374351792037487, 0.0028664986602962017, 0.008618504740297794, 0.0025177530478686094, 0.0023310063406825066, 0.0025816960260272026, 0.0036025408189743757, 0.0027854882646352053, 0.004213548731058836, 0.004965390078723431, 0.00946892611682415, 0.003530492540448904, 0.006175445392727852, 0.0029687683563679457, 0.003390875644981861, 0.0024078700225800276, 0.0023342608474195004, 0.002254941500723362, 0.009190071374177933, 0.0025644442066550255, 0.00251958635635674, 0.0022336740512400866, 0.002873725723475218, 0.0018439922714605927, 0.0019341808510944247, 0.002501861657947302, 0.0023409686982631683, 0.0017760010669007897, 0.012170796282589436, 0.0016307345358654857, 0.0017827895935624838, 0.0018041284056380391, 0.0029282178729772568, 0.0019299386767670512, 0.001934962347149849, 0.002405515406280756, 0.0025452899280935526, 0.004956446122378111, 0.0016889155376702547, 0.002844063099473715, 0.002046379027888179, 0.003278660122305155, 0.003101114183664322, 0.01365713495761156, 0.003940195310860872, 0.007164574693888426, 0.00179059780202806, 0.0028903891798108816, 0.0016887487145140767, 0.0014358034823089838, 0.0025957501493394375, 0.0038124360144138336, 0.001348732621408999, 0.001971751917153597, 0.0018965742783620954, 0.0025821190793067217, 0.001810553134419024, 0.0025708703324198723, 0.0024391019251197577, 0.007192428223788738, 0.0017335745505988598, 0.0023241194430738688, 0.0019021801417693496, 0.003354150103405118, 0.0014388900017365813, 0.0015576897421851754, 0.0025615219492465258, 0.00540740555152297, 0.0015007032779976726, 0.002407609950751066, 0.0017117774114012718, 0.003995828330516815, 0.003152881283313036, 0.009839088656008244, 0.0033741064835339785, 0.0026510292664170265, 0.0025537987239658833, 0.002534375060349703, 0.005322724115103483, 0.0017568249022588134, 0.002616848098114133, 0.002792532555758953, 0.0031214524060487747, 0.0015511477831751108, 0.0108801843598485, 0.0012031941441819072, 0.001537594711408019, 0.0016358066350221634, 0.0027227443642914295, 0.0016314913518726826, 0.0020419987849891186, 0.002478145295754075, 0.002455706475302577, 0.005338802933692932, 0.00158912583719939, 0.0023041979875415564, 0.0021498724818229675, 0.003190429415553808, 0.003229586174711585, 0.004379610996693373, 0.0012604861985892057, 0.0026979439426213503, 0.0020202770829200745, 0.0021297186613082886, 0.00255176261998713, 0.002514215186238289, 0.0045176912099123, 0.0019724557641893625, 0.0024065652396529913, 0.002246748423203826, 0.003926443867385387, 0.0012686289846897125, 0.0024606981314718723, 0.0020396560430526733, 0.002301003783941269, 0.00255322246812284, 0.002179540926590562, 0.0022855508141219616, 0.005351039115339518, 0.0015502827009186149, 0.0024161452893167734, 0.002425592625513673, 0.002264314331114292, 0.0030391174368560314, 0.003912455402314663, 0.002324476605281234, 0.0023232707753777504, 0.002544005401432514, 0.010437163524329662, 0.001935784355737269, 0.002025721361860633, 0.003902551718056202, 0.0015957012074068189, 0.001841904828324914, 0.002656102878972888, 0.0022224208805710077, 0.002471027197316289, 0.007680162787437439, 0.0012986840447410941, 0.0019124149112030864, 0.001561368117108941, 0.002069308189675212, 0.0023257944267243147, 0.003118307562544942, 0.029429633170366287, 0.0021237321197986603, 0.002164037199690938, 0.0020257756114006042, 0.004327097442001104, 0.0013993220636621118, 0.0023339868057519197, 0.0020179261919111013, 0.0031994646415114403, 0.0017501263646408916, 0.0021717462223023176, 0.002617721678689122, 0.009807081893086433, 0.0034239087253808975, 0.0034272531047463417, 0.003555458039045334, 0.0024191841948777437, 0.0022767281625419855, 0.0032472454477101564, 0.003212821902707219, 0.007128318306058645, 0.00263708527199924, 0.0027312187012284994, 0.0020330208353698254, 0.0039105224423110485, 0.0013597739161923528, 0.0035580855328589678, 0.0017311875708401203, 0.00868295133113861, 0.0014363053487613797, 0.0023852542508393526, 0.0017490534810349345, 0.0016261071432381868, 0.002443184843286872, 0.0024395964574068785, 0.0028566610999405384, 0.006685920991003513, 0.0021265738178044558, 0.0025222431868314743, 0.0025331107899546623, 0.0025526077952235937, 0.0018219281919300556, 0.002389832865446806, 0.001929095364175737, 0.003988404758274555, 0.0012924247421324253, 0.0020946881268173456, 0.0018081548623740673, 0.008871661499142647, 0.0013489406555891037, 0.0019485913217067719, 0.0016804125625640154, 0.0023867040872573853, 0.002297855680808425, 0.009652340784668922, 0.0017441872041672468, 0.002616513753309846, 0.0018215394811704755, 0.0017985888989642262, 0.001214576535858214, 0.0022043802309781313, 0.0019534628372639418, 0.0021594837307929993, 0.0017018434591591358, 0.0016184663400053978, 0.002544121816754341, 0.002756661968305707, 0.004030990414321423, 0.0038095060735940933, 0.0018456777324900031, 0.002575367921963334, 0.0021466827020049095, 0.004953423980623484, 0.0013139428338035941, 0.0037492886185646057, 0.0021266979165375233, 0.012866445817053318, 0.002296787453815341, 0.003301826538518071, 0.0037027401849627495, 0.004905757028609514, 0.002875335980206728, 0.0023531699553132057, 0.002368815243244171, 0.002458096481859684, 0.0017366042593494058]


Top-k source tokens:

['self', 'b64', 'encoded_packet', 'b64', 'encoded_packet', 'encoded_packet', 'encoded_packet', '#NEWLINE#', 'encoded_packet', 'self']


Top-k attention probs:

[0.030229199677705765, 0.029429633170366287, 0.02748960629105568, 0.024019716307520866, 0.016369305551052094, 0.01374351792037487, 0.01365713495761156, 0.013053725473582745, 0.012866445817053318, 0.012170796282589436]
