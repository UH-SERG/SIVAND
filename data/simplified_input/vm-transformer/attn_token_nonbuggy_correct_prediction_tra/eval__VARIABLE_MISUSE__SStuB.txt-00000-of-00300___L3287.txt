
Original sample:

{"has_bug": false, "bug_kind": 0, "bug_kind_name": "NONE", "source_tokens": ["#NEWLINE#", "def translate(", "self", ")", ":", "#NEWLINE#", "#INDENT#", "output", "=", "''", "#NEWLINE#", "for", "node", "in", "self", ".", "node_list", ":", "#NEWLINE#", "#INDENT#", "if", "isinstance", "(", "node", ",", "TextNode", ")", ":", "#NEWLINE#", "#INDENT#", "output", "+=", "node", ".", "token", ".", "replace", "(", "'.'", ",", "'\\\\.'", ")", "#NEWLINE#", "#UNINDENT#", "else", ":", "#NEWLINE#", "#INDENT#", "if", "isinstance", "(", "node", ",", "WildcardNode", ")", ":", "#NEWLINE#", "#INDENT#", "output", "+=", "'.*'", "#NEWLINE#", "#UNINDENT#", "else", ":", "#NEWLINE#", "#INDENT#", "if", "isinstance", "(", "node", ",", "OptionalNode", ")", ":", "#NEWLINE#", "#INDENT#", "output", "+=", "(", "(", "'('", "+", "RegexScribe", "(", "node", ".", "node_list", ")", ".", "translate", "(", ")", ")", "+", "')?'", ")", "#NEWLINE#", "#UNINDENT#", "else", ":", "#NEWLINE#", "#INDENT#", "if", "isinstance", "(", "node", ",", "TagNode", ")", ":", "#NEWLINE#", "#INDENT#", "if", "isinstance", "(", "node", ",", "MacroTagNode", ")", ":", "#NEWLINE#", "#INDENT#", "regex", "=", "self", ".", "macro_registry", ".", "get", "(", "node", ".", "macro", ")", "#NEWLINE#", "#UNINDENT#", "else", ":", "#NEWLINE#", "#INDENT#", "if", "isinstance", "(", "node", ",", "RegexTagNode", ")", ":", "#NEWLINE#", "#INDENT#", "regex", "=", "node", ".", "regex", "#NEWLINE#", "#UNINDENT#", "else", ":", "#NEWLINE#", "#INDENT#", "regex", "=", "'.+'", "#NEWLINE#", "#UNINDENT#", "#UNINDENT#", "if", "node", ".", "name", ":", "#NEWLINE#", "#INDENT#", "output", "+=", "(", "'(?P<%s>%s)'", "%", "(", "node", ".", "name", ",", "regex", ")", ")", "#NEWLINE#", "#UNINDENT#", "else", ":", "#NEWLINE#", "#INDENT#", "output", "+=", "regex", "#NEWLINE#", "#UNINDENT#", "#UNINDENT#", "#UNINDENT#", "#UNINDENT#", "#UNINDENT#", "#UNINDENT#", "return", "output"], "error_location": [0], "repair_targets": [], "repair_candidates": [2, 14, 125, 123, 151, 155, 162, 185, 196, 7, 30, 58, 77, 175, 194, 205, 12, 23, 32, 51, 70, 85, 106, 116, 131, 144, 153, 169, 181], "provenances": [{"datasetProvenance": {"datasetName": "ETHPy150Open", "filepath": "codysoyland/surlex/src/surlex/grammar.py", "license": "bsd-3-clause", "note": "license: bigquery_api"}}], "txt_file": "eval__VARIABLE_MISUSE__SStuB.txt-00000-of-00300", "js_count": 3287, "results": {"model": "transformer", "prob": {"loc": [[0.9598075747489929, 4.665090727939969e-06, 6.584795755770756e-06, 1.2277106442581953e-08, 3.6496611954817126e-08, 4.496281391652701e-08, 3.1587234161634115e-08, 1.281680965803389e-06, 3.8284468928395654e-08, 7.038664762148983e-08, 4.208738602073936e-08, 9.992231753130909e-08, 2.6327228397349245e-07, 1.2457249454200792e-08, 4.926409383188002e-05, 1.8960331260586827e-07, 4.564605404766553e-08, 2.357460715529669e-07, 6.508645356007037e-08, 1.7637605154163793e-08, 1.7965625431770604e-08, 8.508045823418797e-09, 3.573306983639668e-08, 6.165503873489797e-05, 1.4095814293568765e-08, 1.0202792282143491e-06, 1.188162190857156e-08, 3.537292059263564e-08, 5.5670120957529434e-08, 3.079261290395152e-08, 6.272859423006594e-07, 1.094749091379299e-08, 7.008997727098176e-06, 1.3473538729158463e-07, 4.733729497274908e-07, 1.7127631224411743e-07, 3.608490573014933e-08, 4.3455054310470587e-07, 2.1371099592215614e-06, 6.433982946418837e-08, 5.318935905052058e-07, 1.2607127075625613e-07, 1.9980470256086846e-07, 1.2793428538770968e-07, 3.880060361893811e-08, 4.370673067910502e-08, 2.142381703151841e-07, 6.536325258821307e-08, 4.2487279472425143e-08, 1.7348433800634666e-08, 1.380853262844539e-07, 9.337953815702349e-05, 9.376579868103363e-08, 2.6732861897471594e-06, 3.303143003563491e-08, 1.1540937094878245e-07, 1.0679629980359095e-07, 6.178832734349271e-08, 2.4311036668223096e-06, 7.932052881187701e-08, 1.8721743799687829e-06, 1.1518462628146153e-07, 9.834089809146462e-08, 2.5747777243623204e-08, 7.336328167184547e-08, 1.1375933439694563e-07, 6.474199665262859e-08, 4.57277060661454e-08, 4.721491109194176e-08, 9.022203073527635e-08, 7.239874685183167e-05, 6.667035989949e-08, 4.977140974915528e-07, 2.094896878190866e-08, 1.3478035043590353e-07, 1.5493844784941757e-07, 9.60589829901437e-08, 2.2210899714991683e-06, 2.4811415144654347e-08, 5.1718625826424613e-08, 3.023121735168388e-07, 6.025742322890437e-07, 1.5027779909360106e-07, 1.63190759394638e-06, 1.501220253885549e-06, 2.2364971300703473e-05, 1.194310584651248e-06, 2.0818173140924046e-07, 7.855916805965535e-07, 4.0687919522497396e-07, 2.746917893148293e-08, 5.756321570515865e-07, 3.440115960984258e-07, 2.8447782796092724e-08, 7.265268209266651e-08, 6.041097094566794e-06, 5.275682042338303e-07, 3.304738811493735e-07, 2.943840229363559e-07, 1.8827427084033843e-07, 2.83883878182678e-07, 3.518835569593648e-07, 2.229820239563196e-07, 1.3466600989886501e-07, 3.429815009781123e-08, 2.429952701277216e-07, 8.833243191475049e-05, 2.3706857632532774e-07, 1.1981973102592747e-06, 1.752404017452136e-07, 3.471709533187095e-07, 3.762694404940703e-07, 1.6295864213589084e-07, 1.6427151194875478e-07, 1.38230774382464e-07, 8.830202773424389e-07, 4.917429760098457e-05, 2.8282028097237344e-07, 1.686991708993446e-06, 3.8148036196616886e-07, 9.27289590890723e-07, 4.864229481427174e-07, 2.812849118072336e-07, 2.851321369234938e-06, 8.511003812827767e-08, 0.0008267365046776831, 6.640856895501202e-07, 1.1272926059291422e-07, 9.258050681637542e-07, 9.964178815380365e-08, 4.4776609797736455e-07, 5.346541729522869e-05, 2.2791632545704488e-06, 4.654272345305799e-07, 6.036013928678585e-07, 3.1890539275991614e-07, 2.6566883093437355e-07, 3.203441281129926e-07, 1.3311893098943983e-07, 2.860711276753136e-07, 9.806125689237888e-08, 1.57348949869629e-07, 1.6093973442821152e-07, 5.798702886750107e-07, 0.00026193633675575256, 2.0143825452123565e-07, 0.00017607188783586025, 2.4482127969349676e-07, 7.604883194289869e-07, 3.821248526492127e-07, 1.7967279575259454e-07, 5.349808361643227e-06, 4.688967081278861e-08, 0.0004805078206118196, 9.082135647986433e-07, 1.6127629578477354e-06, 6.606304623346659e-07, 3.299763022823754e-07, 2.1637443126110156e-07, 2.4174249801944825e-07, 5.150503170625598e-07, 3.3782467312448716e-07, 1.0125059816346038e-05, 1.601750483359865e-07, 3.817023753072135e-05, 1.3830890566168819e-06, 1.3227794397607795e-06, 7.153043952712324e-07, 1.450625717325238e-07, 0.0023649525828659534, 7.1304862103716e-07, 1.5407029252401117e-07, 6.440591846512689e-07, 6.944680421838711e-07, 2.369266383084323e-07, 1.377894022880355e-06, 3.552532490402882e-08, 5.781805612059543e-07, 1.6748822417866904e-06, 1.371414555251249e-07, 6.395559466909617e-06, 0.00022102650837041438, 1.6364396060453146e-06, 1.506905391579494e-07, 8.510001521244703e-07, 0.016581067815423012, 2.3943032374518225e-06, 1.6757257981225848e-06, 5.806704734823143e-07, 6.338176490316982e-07, 2.143019202094365e-07, 5.504581963577948e-07, 6.314477900559723e-07, 2.6767847316477855e-07, 2.5852177714114077e-06, 8.840165719448123e-06, 0.01836266927421093, 7.798915362400294e-07, 6.762014095329505e-07, 5.962484692645376e-07, 7.088597726578882e-07, 6.753339789611346e-07, 5.620103138426202e-07, 4.807210984836274e-07, 3.9195199974528805e-08, 0.000250940938713029]], "pointer": [[0.0, 0.0, 0.04806588590145111, 0.0, 0.0, 0.0, 0.0, 0.008296323008835316, 0.0, 0.0, 0.0, 0.0, 0.1882234662771225, 0.0, 0.0062746573239564896, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0040701464749872684, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.009438060224056244, 0.0, 0.0017069947207346559, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.007717010099440813, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.010397635400295258, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.015567312948405743, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.009777992963790894, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.005032225511968136, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.04583286494016647, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.04272284731268883, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1835799217224121, 0.0, 0.012937926687300205, 0.0, 0.0, 0.0, 0.0, 0.0, 0.011631730943918228, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.10429622232913971, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.10885300487279892, 0.0, 0.026620956137776375, 0.0, 0.007708690594881773, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.020873259752988815, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.06302247941493988, 0.0, 0.0, 0.0, 0.0, 0.0, 0.016166023910045624, 0.0, 0.0, 0.0, 0.0, 0.0, 0.03447370603680611, 0.0, 0.0, 0.0, 0.0004702000005636364, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.005257923621684313, 0.0, 7.615677895955741e-05, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0009083836921490729]], "target": [0.0]}, "loss": [0.04102209210395813, 0.0], "acc": [1.0, 0.0, 0.0, 0.0]}}


All source tokens:

['#NEWLINE#', 'def translate(', 'self', ')', ':', '#NEWLINE#', '#INDENT#', 'output', '=', "''", '#NEWLINE#', 'for', 'node', 'in', 'self', '.', 'node_list', ':', '#NEWLINE#', '#INDENT#', 'if', 'isinstance', '(', 'node', ',', 'TextNode', ')', ':', '#NEWLINE#', '#INDENT#', 'output', '+=', 'node', '.', 'token', '.', 'replace', '(', "'.'", ',', "'\\\\.'", ')', '#NEWLINE#', '#UNINDENT#', 'else', ':', '#NEWLINE#', '#INDENT#', 'if', 'isinstance', '(', 'node', ',', 'WildcardNode', ')', ':', '#NEWLINE#', '#INDENT#', 'output', '+=', "'.*'", '#NEWLINE#', '#UNINDENT#', 'else', ':', '#NEWLINE#', '#INDENT#', 'if', 'isinstance', '(', 'node', ',', 'OptionalNode', ')', ':', '#NEWLINE#', '#INDENT#', 'output', '+=', '(', '(', "'('", '+', 'RegexScribe', '(', 'node', '.', 'node_list', ')', '.', 'translate', '(', ')', ')', '+', "')?'", ')', '#NEWLINE#', '#UNINDENT#', 'else', ':', '#NEWLINE#', '#INDENT#', 'if', 'isinstance', '(', 'node', ',', 'TagNode', ')', ':', '#NEWLINE#', '#INDENT#', 'if', 'isinstance', '(', 'node', ',', 'MacroTagNode', ')', ':', '#NEWLINE#', '#INDENT#', 'regex', '=', 'self', '.', 'macro_registry', '.', 'get', '(', 'node', '.', 'macro', ')', '#NEWLINE#', '#UNINDENT#', 'else', ':', '#NEWLINE#', '#INDENT#', 'if', 'isinstance', '(', 'node', ',', 'RegexTagNode', ')', ':', '#NEWLINE#', '#INDENT#', 'regex', '=', 'node', '.', 'regex', '#NEWLINE#', '#UNINDENT#', 'else', ':', '#NEWLINE#', '#INDENT#', 'regex', '=', "'.+'", '#NEWLINE#', '#UNINDENT#', '#UNINDENT#', 'if', 'node', '.', 'name', ':', '#NEWLINE#', '#INDENT#', 'output', '+=', '(', "'(?P<%s>%s)'", '%', '(', 'node', '.', 'name', ',', 'regex', ')', ')', '#NEWLINE#', '#UNINDENT#', 'else', ':', '#NEWLINE#', '#INDENT#', 'output', '+=', 'regex', '#NEWLINE#', '#UNINDENT#', '#UNINDENT#', '#UNINDENT#', '#UNINDENT#', '#UNINDENT#', '#UNINDENT#', 'return', 'output']


All attention probs:

[0.012329842895269394, 0.007869858294725418, 0.03942740336060524, 0.012253672815859318, 0.008715981617569923, 0.007965095341205597, 0.006655541714280844, 0.02047918736934662, 0.005712591111660004, 0.005492719821631908, 0.00695923063904047, 0.007515197619795799, 0.01936204731464386, 0.0065817865543067455, 0.01436049584299326, 0.005713920574635267, 0.0053306021727621555, 0.0049992511048913, 0.006318932399153709, 0.006401624530553818, 0.006205285433679819, 0.005611094646155834, 0.004294285550713539, 0.013501658104360104, 0.0041014887392520905, 0.009394417516887188, 0.002880633343011141, 0.003305589547380805, 0.0037478674203157425, 0.004022383596748114, 0.008609320037066936, 0.004144399892538786, 0.007848422974348068, 0.0027965540066361427, 0.002909295028075576, 0.0024407890159636736, 0.0029497374780476093, 0.00319384946487844, 0.0047686356119811535, 0.003715852275490761, 0.003726598806679249, 0.002788286656141281, 0.005468930117785931, 0.004814846441149712, 0.0072524831630289555, 0.003081834176555276, 0.0033249014522880316, 0.0029993162024766207, 0.00347370863892138, 0.0030860197730362415, 0.002664618892595172, 0.007627522572875023, 0.00242805783636868, 0.00695006363093853, 0.0021489872597157955, 0.002450769767165184, 0.0026891552843153477, 0.002643084153532982, 0.005630764644593, 0.0026951106265187263, 0.004479575902223587, 0.002935983706265688, 0.003055043052881956, 0.005981338210403919, 0.002526068827137351, 0.0031693922355771065, 0.0031540768686681986, 0.0038234631065279245, 0.0035711198579519987, 0.002491327468305826, 0.007833652198314667, 0.0027172244153916836, 0.006187073420733213, 0.0026324805803596973, 0.0024879726115614176, 0.0032086309511214495, 0.003022586228325963, 0.007165722083300352, 0.004486192017793655, 0.0018960223533213139, 0.002239549532532692, 0.0021851162891834974, 0.0020801748614758253, 0.0038855522871017456, 0.002889982657507062, 0.0061790174804627895, 0.002181562129408121, 0.0028933349531143904, 0.0029749986715614796, 0.0018761339597404003, 0.002702041296288371, 0.003271878696978092, 0.0023734918795526028, 0.0019570740405470133, 0.0020881113596260548, 0.003473745658993721, 0.0025846592616289854, 0.003523354884237051, 0.0036845889408141375, 0.00930494349449873, 0.002651056507602334, 0.003236606949940324, 0.003123246366158128, 0.005152557976543903, 0.00311283185146749, 0.0024110544472932816, 0.007688323501497507, 0.002105124993249774, 0.004545689560472965, 0.0018922345479950309, 0.002510752994567156, 0.0035663938615471125, 0.002971912967041135, 0.0037522385828197002, 0.0026555026415735483, 0.0021591607946902514, 0.007674918044358492, 0.002079615369439125, 0.003242229111492634, 0.0019517093896865845, 0.002568237716332078, 0.0030058324337005615, 0.00305686192587018, 0.009489741176366806, 0.00442164484411478, 0.007242036052048206, 0.0016911423299461603, 0.0021005773451179266, 0.001602195668965578, 0.0019099568016827106, 0.0022717113606631756, 0.006156775634735823, 0.001572495442815125, 0.002159693045541644, 0.0015096475835889578, 0.0031922850757837296, 0.0031932773999869823, 0.006622932385653257, 0.00233574234880507, 0.002656850963830948, 0.0025725134182721376, 0.003625284880399704, 0.0024238554760813713, 0.002249044133350253, 0.007422274444252253, 0.0020963752176612616, 0.007930995896458626, 0.0017282263142988086, 0.0024451911449432373, 0.002810829086229205, 0.0030061383731663227, 0.011099664494395256, 0.003904734505340457, 0.008452903479337692, 0.0029264187905937433, 0.003415967570617795, 0.0036860282998532057, 0.0038501282688230276, 0.008023036643862724, 0.003219815669581294, 0.0036262627691030502, 0.003279522294178605, 0.010613339953124523, 0.00403048750013113, 0.0032651154324412346, 0.0032111655455082655, 0.002972846385091543, 0.00325981923379004, 0.003097027773037553, 0.00819181278347969, 0.0015595119912177324, 0.0028162067756056786, 0.0025387336499989033, 0.0036511931102722883, 0.0034607595298439264, 0.007793411146849394, 0.0025000465102493763, 0.003252752823755145, 0.002235082210972905, 0.0021285449620336294, 0.0028872089460492134, 0.007123501971364021, 0.002007514936849475, 0.002914522774517536, 0.0028470465913414955, 0.027339493855834007, 0.0033929331693798304, 0.004231732804328203, 0.006212388630956411, 0.006419122219085693, 0.0067308745346963406, 0.004178814124315977, 0.004638695158064365, 0.004318204242736101, 0.009019152261316776, 0.0036909733898937702, 0.024652114138007164, 0.003816319862380624, 0.003592750057578087, 0.0036013720091432333, 0.003724847687408328, 0.003674907609820366, 0.0035624997690320015, 0.0037171891890466213, 0.0051407963037490845, 0.014943300746381283]


Top-k source tokens:

['self', 'regex', 'regex', 'output', 'node', 'output', 'self', 'node', '#NEWLINE#', ')']


Top-k attention probs:

[0.03942740336060524, 0.027339493855834007, 0.024652114138007164, 0.02047918736934662, 0.01936204731464386, 0.014943300746381283, 0.01436049584299326, 0.013501658104360104, 0.012329842895269394, 0.012253672815859318]
