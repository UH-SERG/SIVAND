
Original sample:

{"has_bug": false, "bug_kind": 0, "bug_kind_name": "NONE", "source_tokens": ["#NEWLINE#", "@", "classmethod", "#NEWLINE#", "def create(", "cls", ",", "repository", ",", "args", ")", ":", "#NEWLINE#", "#INDENT#", "key", "=", "cls", "(", ")", "#NEWLINE#", "passphrase", "=", "os", ".", "environ", ".", "get", "(", "'ATTIC_PASSPHRASE'", ")", "#NEWLINE#", "if", "(", "passphrase", "is not", "None", ")", ":", "#NEWLINE#", "#INDENT#", "passphrase2", "=", "passphrase", "#NEWLINE#", "#UNINDENT#", "else", ":", "#NEWLINE#", "#INDENT#", "(", "passphrase", ",", "passphrase2", ")", "=", "(", "1", ",", "2", ")", "#NEWLINE#", "#UNINDENT#", "while", "(", "passphrase", "!=", "passphrase2", ")", ":", "#NEWLINE#", "#INDENT#", "passphrase", "=", "getpass", "(", "'Enter passphrase: '", ")", "#NEWLINE#", "if", "(", "not", "passphrase", ")", ":", "#NEWLINE#", "#INDENT#", "print", "(", "'Passphrase must not be blank'", ")", "#NEWLINE#", "continue", "#NEWLINE#", "#UNINDENT#", "passphrase2", "=", "getpass", "(", "'Enter same passphrase again: '", ")", "#NEWLINE#", "if", "(", "passphrase", "!=", "passphrase2", ")", ":", "#NEWLINE#", "#INDENT#", "print", "(", "'Passphrases do not match'", ")", "#NEWLINE#", "#UNINDENT#", "#UNINDENT#", "key", ".", "init", "(", "repository", ",", "passphrase", ")", "#NEWLINE#", "if", "passphrase", ":", "#NEWLINE#", "#INDENT#", "print", "(", "'Remember your passphrase. Your data will be inaccessible without it.'", ")", "#NEWLINE#", "#UNINDENT#", "return", "key"], "error_location": [0], "repair_targets": [], "repair_candidates": [5, 16, 9, 20, 33, 42, 50, 64, 71, 81, 103, 123, 127, 40, 52, 66, 94, 105, 14, 117, 138, 7, 121], "provenances": [{"datasetProvenance": {"datasetName": "ETHPy150Open", "filepath": "jborg/attic/attic/key.py", "license": "bsd-3-clause", "note": "license: bigquery_api"}}], "txt_file": "eval__VARIABLE_MISUSE__SStuB.txt-00000-of-00300", "js_count": 1228, "results": {"model": "transformer", "prob": {"loc": [[0.33588263392448425, 3.807970870184363e-06, 1.1813830269602477e-07, 1.4883379151342524e-07, 1.3381679764279397e-07, 2.6758764306578087e-06, 4.632542882632151e-08, 3.278439862697269e-06, 3.677099158494457e-08, 3.2108312097989256e-06, 1.9916189586410837e-08, 4.049710966569364e-08, 6.603438862384792e-08, 4.201867298547768e-08, 3.0406252449211024e-07, 6.159451260145943e-08, 4.722106041299412e-06, 5.2510822570184246e-06, 9.270443115383387e-07, 1.3506891605175042e-07, 4.5278056859388016e-07, 6.129475309535337e-07, 2.1840469344169833e-06, 1.0640749081858303e-07, 5.1304049009104347e-08, 2.2732133686531597e-07, 5.861156537889656e-08, 6.73499357617402e-07, 7.519834070990328e-06, 8.413782097704825e-07, 8.792716243988252e-08, 7.082794439838835e-08, 1.65783859529256e-07, 0.0026865266263484955, 8.737513468304314e-08, 7.0085803827169e-08, 1.1014452638846706e-07, 1.7309105260210345e-07, 9.468972450576985e-08, 4.497051619978265e-08, 1.0846400073205587e-05, 6.862349550829094e-07, 0.07427487522363663, 1.717063753403636e-07, 1.3701379941721825e-07, 1.9258392569554417e-07, 1.278111909641666e-07, 2.6568801558823907e-07, 1.1007615086100486e-07, 1.0349587853397679e-07, 3.13836608256679e-05, 1.284516173427619e-07, 0.0007744072936475277, 4.749805881942848e-08, 3.5034847201131925e-07, 6.4271921473846305e-06, 1.1850515875266865e-05, 9.065535095942323e-07, 0.0010420281905680895, 1.377488842990715e-06, 2.5203775066984235e-07, 1.3975960655443487e-07, 4.182066248858973e-08, 4.817972012460814e-07, 0.004933417774736881, 4.486909404022299e-07, 0.00443603191524744, 7.529721557375524e-08, 4.1751937374101544e-07, 2.2832838908470876e-07, 1.1741362015982304e-07, 7.43473037800868e-07, 1.4205455727278604e-06, 3.6167728012515e-07, 1.7973981130126049e-06, 3.9464252040488645e-05, 1.575183432578342e-06, 6.992647740844404e-07, 2.529132245854271e-07, 6.480273100351042e-07, 5.347057140170364e-06, 0.01634792983531952, 2.8141614620835753e-06, 1.803168515834841e-06, 1.2648229130718391e-06, 3.5359468597562227e-07, 8.589245936718726e-08, 1.7428557157472824e-06, 3.957411536248401e-05, 2.4795438093860867e-06, 1.0207071454715333e-06, 3.588103936635889e-05, 4.3605442101579683e-07, 2.9903117138019297e-07, 4.4841250200988725e-05, 9.685879120979735e-08, 2.745210849752766e-07, 3.994226062786765e-06, 0.00021054045646451414, 6.174616373755271e-07, 5.652232175634708e-07, 2.1673245953479636e-07, 5.875912734154554e-07, 0.006148288492113352, 1.151804667642864e-06, 0.0016344512114301324, 1.3300480361522204e-07, 8.586252420172968e-07, 4.5366442691374687e-07, 1.8589733485896431e-07, 7.582889338664245e-08, 2.0969212073396193e-06, 3.351172563270666e-05, 2.0834143015235895e-06, 9.31411420879158e-07, 3.336474492243724e-07, 1.4136107040485513e-07, 9.114383914266e-09, 1.2028858975554613e-07, 6.724683032643952e-08, 6.705436135234777e-07, 0.008197031915187836, 1.0516525890125195e-06, 0.274519145488739, 1.9053194364460069e-06, 3.903044785147358e-07, 8.058352563011795e-08, 0.26768648624420166, 1.538839569548145e-06, 2.8571713528435794e-07, 1.3881066251997254e-07, 1.8784117372661058e-08, 1.0352653134759748e-06, 0.00013939550262875855, 1.173028636003437e-06, 1.5409674460897804e-06, 1.073789462679997e-06, 7.990066706042853e-07, 0.00073572265682742]], "pointer": [[0.0, 0.0, 0.0, 0.0, 0.0, 0.0005191496456973255, 0.0, 0.00576173746958375, 0.0, 0.8554366230964661, 0.0, 0.0, 0.0, 0.0, 0.009371517226099968, 0.0, 0.00041333475382998586, 0.0, 0.0, 0.0, 0.005597936455160379, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0009594318107701838, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.016318656504154205, 0.0, 1.9803459508693777e-05, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.010152798146009445, 0.0, 0.02995292656123638, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.003384380368515849, 0.0, 0.0006437611300498247, 0.0, 0.0, 0.0, 0.0, 0.006638334598392248, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.00025927508249878883, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.03777623549103737, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0021650181151926517, 0.0, 0.0017568233888596296, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0047597638331353664, 0.0, 0.0, 0.0, 0.000540882465429604, 0.0, 0.00035230215871706605, 0.0, 0.0, 0.0, 0.00017371814465150237, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.007045614067465067]], "target": [0.0]}, "loss": [1.0909935235977173, 0.0], "acc": [1.0, 0.0, 0.0, 0.0]}}


All source tokens:

['#NEWLINE#', '@', 'classmethod', '#NEWLINE#', 'def create(', 'cls', ',', 'repository', ',', 'args', ')', ':', '#NEWLINE#', '#INDENT#', 'key', '=', 'cls', '(', ')', '#NEWLINE#', 'passphrase', '=', 'os', '.', 'environ', '.', 'get', '(', "'ATTIC_PASSPHRASE'", ')', '#NEWLINE#', 'if', '(', 'passphrase', 'is not', 'None', ')', ':', '#NEWLINE#', '#INDENT#', 'passphrase2', '=', 'passphrase', '#NEWLINE#', '#UNINDENT#', 'else', ':', '#NEWLINE#', '#INDENT#', '(', 'passphrase', ',', 'passphrase2', ')', '=', '(', '1', ',', '2', ')', '#NEWLINE#', '#UNINDENT#', 'while', '(', 'passphrase', '!=', 'passphrase2', ')', ':', '#NEWLINE#', '#INDENT#', 'passphrase', '=', 'getpass', '(', "'Enter passphrase: '", ')', '#NEWLINE#', 'if', '(', 'not', 'passphrase', ')', ':', '#NEWLINE#', '#INDENT#', 'print', '(', "'Passphrase must not be blank'", ')', '#NEWLINE#', 'continue', '#NEWLINE#', '#UNINDENT#', 'passphrase2', '=', 'getpass', '(', "'Enter same passphrase again: '", ')', '#NEWLINE#', 'if', '(', 'passphrase', '!=', 'passphrase2', ')', ':', '#NEWLINE#', '#INDENT#', 'print', '(', "'Passphrases do not match'", ')', '#NEWLINE#', '#UNINDENT#', '#UNINDENT#', 'key', '.', 'init', '(', 'repository', ',', 'passphrase', ')', '#NEWLINE#', 'if', 'passphrase', ':', '#NEWLINE#', '#INDENT#', 'print', '(', "'Remember your passphrase. Your data will be inaccessible without it.'", ')', '#NEWLINE#', '#UNINDENT#', 'return', 'key']


All attention probs:

[0.01131628081202507, 0.008806008845567703, 0.017237817868590355, 0.012408295646309853, 0.009586180560290813, 0.027685705572366714, 0.008355433121323586, 0.017053594812750816, 0.009336229413747787, 0.02541777677834034, 0.01101167593151331, 0.009717480279505253, 0.008860518224537373, 0.007522729225456715, 0.018345773220062256, 0.008102791383862495, 0.012017984874546528, 0.007957834750413895, 0.005987843032926321, 0.008096042089164257, 0.020358728244900703, 0.00658740708604455, 0.00770570058375597, 0.004204584285616875, 0.0048011476173996925, 0.00358798005618155, 0.0040785931050777435, 0.004029643721878529, 0.003415531013160944, 0.0032995890360325575, 0.005129826255142689, 0.005094495136290789, 0.003847061190754175, 0.015252083539962769, 0.003713849699124694, 0.004021838307380676, 0.004117780365049839, 0.00431861774995923, 0.004775278270244598, 0.004259905777871609, 0.015152102336287498, 0.003958013840019703, 0.013837871141731739, 0.004925563000142574, 0.004648725967854261, 0.011172235012054443, 0.0040856837294995785, 0.004016525577753782, 0.004164527170360088, 0.0040319995023310184, 0.016032585874199867, 0.003848194843158126, 0.016500886529684067, 0.0034614107571542263, 0.0035483965184539557, 0.0028465392533689737, 0.004444689489901066, 0.0027200535405427217, 0.006100880913436413, 0.002516964916139841, 0.003922467119991779, 0.0037988387048244476, 0.004635962191969156, 0.002741665579378605, 0.01396875362843275, 0.0033434100914746523, 0.015441110357642174, 0.003824002342298627, 0.0036811770405620337, 0.0047025661915540695, 0.004545991774648428, 0.013261298649013042, 0.0036284644156694412, 0.0028610029257833958, 0.0032036944758147, 0.006430722773075104, 0.0020521744154393673, 0.004210298880934715, 0.004477562848478556, 0.005861226469278336, 0.003714311635121703, 0.0135912811383605, 0.002877061488106847, 0.0027245325036346912, 0.0032676011323928833, 0.0035468831192702055, 0.0044499728828668594, 0.0046751247718930244, 0.006269435863941908, 0.0031907379161566496, 0.004292132332921028, 0.005647019017487764, 0.00416096206754446, 0.004574882797896862, 0.013914097100496292, 0.007139136083424091, 0.003242756938561797, 0.004457675851881504, 0.008883477188646793, 0.003309883875772357, 0.00507231755182147, 0.00589366490021348, 0.004237836226820946, 0.016456225886940956, 0.0042836773209273815, 0.013157183304429054, 0.00250956485979259, 0.0028318585827946663, 0.003526243381202221, 0.0035665296018123627, 0.004567931406199932, 0.005564156919717789, 0.006508159916847944, 0.0027870605699718, 0.004407488275319338, 0.003868263913318515, 0.004199392627924681, 0.01721951737999916, 0.0020927381701767445, 0.004258992616087198, 0.004404664505273104, 0.019400155171751976, 0.003787784604355693, 0.0187384020537138, 0.004903991241008043, 0.007040365599095821, 0.009402732364833355, 0.02938731573522091, 0.006930207367986441, 0.0055324360728263855, 0.005161584820598364, 0.006050089839845896, 0.004735799040645361, 0.007997218519449234, 0.0028750214260071516, 0.004921850748360157, 0.004811941180378199, 0.0075815217569470406, 0.017369268462061882]


Top-k source tokens:

['passphrase', 'cls', 'args', 'passphrase', 'repository', 'passphrase', 'key', 'key', 'classmethod', 'key']


Top-k attention probs:

[0.02938731573522091, 0.027685705572366714, 0.02541777677834034, 0.020358728244900703, 0.019400155171751976, 0.0187384020537138, 0.018345773220062256, 0.017369268462061882, 0.017237817868590355, 0.01721951737999916]
