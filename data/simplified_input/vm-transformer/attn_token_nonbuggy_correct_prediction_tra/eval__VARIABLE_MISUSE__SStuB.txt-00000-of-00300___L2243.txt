
Original sample:

{"has_bug": false, "bug_kind": 0, "bug_kind_name": "NONE", "source_tokens": ["#NEWLINE#", "def split(", "self", ",", "string", ",", "keep_formatting", ")", ":", "#NEWLINE#", "#INDENT#", "' Recursively splitting string by words in dictionary '", "#NEWLINE#", "if", "(", "not", "string", ")", ":", "#NEWLINE#", "#INDENT#", "return", "string", "#NEWLINE#", "#UNINDENT#", "regex", "=", "self", ".", "_get_split_regex_cache", "(", ")", "#NEWLINE#", "match", "=", "regex", ".", "match", "(", "string", ")", "#NEWLINE#", "if", "(", "not", "match", ")", ":", "#NEWLINE#", "#INDENT#", "return", "(", "[", "string", "]", "if", "self", ".", "_should_capture", "(", "string", ",", "keep_formatting", ")", "else", "[", "]", ")", "#NEWLINE#", "#UNINDENT#", "(", "unparsed", ",", "known", ",", "unknown", ")", "=", "match", ".", "groups", "(", ")", "#NEWLINE#", "splitted", "=", "(", "[", "known", "]", "if", "self", ".", "_should_capture", "(", "known", ",", "keep_formatting", ")", "else", "[", "]", ")", "#NEWLINE#", "if", "(", "unparsed", "and", "self", ".", "_should_capture", "(", "unparsed", ",", "keep_formatting", ")", ")", ":", "#NEWLINE#", "#INDENT#", "splitted", "=", "(", "[", "unparsed", "]", "+", "splitted", ")", "#NEWLINE#", "#UNINDENT#", "if", "unknown", ":", "#NEWLINE#", "#INDENT#", "splitted", ".", "extend", "(", "self", ".", "split", "(", "unknown", ",", "keep_formatting", ")", ")", "#NEWLINE#", "#UNINDENT#", "return", "splitted"], "error_location": [0], "repair_targets": [], "repair_candidates": [84, 120, 127, 136, 152, 33, 37, 45, 78, 2, 27, 56, 91, 108, 140, 4, 16, 22, 39, 53, 60, 71, 106, 112, 124, 73, 88, 95, 25, 35, 6, 62, 97, 114, 146, 75, 132, 144], "provenances": [{"datasetProvenance": {"datasetName": "ETHPy150Open", "filepath": "scrapinghub/dateparser/dateparser/languages/dictionary.py", "license": "bsd-3-clause", "note": "license: bigquery_api"}}], "txt_file": "eval__VARIABLE_MISUSE__SStuB.txt-00000-of-00300", "js_count": 2243, "results": {"model": "transformer", "prob": {"loc": [[0.5538691878318787, 2.483547405063291e-06, 2.685789013412432e-07, 3.901762113400764e-08, 3.8884932109795045e-06, 3.407035009672654e-08, 2.8523358196252957e-05, 2.9578824722875652e-08, 4.573330514290319e-08, 6.974021715677736e-08, 5.624455567954101e-08, 3.4157267236878397e-07, 1.0060612254392254e-07, 9.584900340087188e-08, 8.510621682944475e-07, 6.358648079185514e-07, 0.04298098385334015, 1.9528746975083777e-07, 3.7914008998995996e-07, 5.851719038219017e-07, 9.326559791134059e-08, 3.2929030169270845e-08, 0.02568061649799347, 8.86416131606893e-08, 4.834824096633383e-08, 3.285080538262264e-06, 4.0831821479514474e-08, 8.489346470241799e-08, 3.1896682628484996e-08, 4.387839425135098e-08, 5.063804110250203e-06, 1.5306326304198592e-06, 3.0380678595065547e-07, 2.903544782384415e-06, 8.634381742922415e-08, 3.4704592621892516e-07, 2.962681655560573e-08, 6.954917353141354e-07, 6.174402642500354e-07, 0.019016508013010025, 5.007222512176668e-07, 4.979445975550334e-07, 2.336908124789261e-07, 3.648253596111317e-06, 1.7422987639292842e-06, 0.0028676807414740324, 6.188355996528117e-07, 7.271090680660564e-07, 7.972147955115361e-07, 6.34772661101124e-08, 1.613137179390378e-08, 1.9499974257541908e-07, 1.7609041833566152e-06, 0.14877070486545563, 5.468613295533942e-08, 2.598148682864121e-07, 1.698940792493886e-07, 6.428238918942952e-08, 2.6227038318893392e-08, 6.083984089855221e-07, 0.02779804915189743, 2.909830243424949e-07, 0.003127621253952384, 1.2262384530004056e-07, 1.0129254945923094e-07, 1.0653242270564078e-06, 2.665467775386787e-07, 2.3277952720945905e-07, 9.93764928125529e-08, 8.982326704654042e-08, 3.434758966136542e-08, 1.8103603451891104e-06, 5.26465449013358e-08, 3.5258929074188927e-06, 5.499323307844861e-08, 1.0485274287930224e-05, 1.989642228750199e-08, 3.2883008316275664e-07, 5.2874629545840435e-06, 1.760276973072905e-07, 1.3522853805625346e-06, 7.362231144725229e-07, 7.023369335001917e-07, 1.5888693383203645e-07, 3.969882527599111e-06, 1.3980145752157114e-07, 1.458541737520136e-05, 3.98966813008883e-06, 0.0064661880023777485, 3.5610611348602106e-08, 1.9238984805269865e-07, 2.74243632247817e-07, 1.0278294126919718e-07, 1.0789967141988654e-08, 9.45993065215589e-07, 0.012781918048858643, 3.8780700606366736e-07, 0.0037290947511792183, 3.1872826866674586e-07, 1.6688044013335457e-07, 2.073817540804157e-06, 3.345959953549027e-07, 1.1173652865181793e-06, 7.89437194725906e-07, 1.4280752225204196e-07, 1.1922779208362044e-07, 0.05777331441640854, 4.3253425019429415e-07, 6.093576416787982e-07, 2.0064439354428032e-07, 4.8477520664391704e-08, 7.78135643031419e-07, 0.03746588155627251, 5.451464062389277e-07, 0.0025996449403464794, 1.1123474052965321e-07, 5.960903592949762e-08, 4.821266657017986e-07, 1.688974862190662e-07, 9.040258674986035e-08, 1.355789891022141e-06, 5.2289873764266304e-08, 4.744809132262162e-07, 2.836727844623965e-06, 0.029159359633922577, 4.019617350081717e-08, 5.848731632340787e-08, 0.0017409527208656073, 3.2731767873883655e-07, 2.4415541588496126e-07, 3.234987673295109e-07, 4.576751067020268e-08, 0.014885847456753254, 1.7708993027554243e-06, 1.5617849840054987e-06, 2.395063347648829e-07, 2.395524916209979e-07, 9.024633129683934e-08, 1.6982708572754746e-08, 1.5546351050943485e-07, 1.798925040930044e-05, 1.2742584942770918e-07, 1.4992669150615257e-07, 2.799819185383967e-07, 0.006139715667814016, 1.7489168158135726e-07, 0.0021360390819609165, 9.858738394541433e-07, 7.153564638429089e-07, 3.9606763380106713e-07, 4.836776952288346e-07, 2.1401547201094218e-07, 0.0008531652856618166]], "pointer": [[0.0, 0.0, 0.0013920917408540845, 0.0, 0.036280836910009384, 0.0, 0.18936023116111755, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.003220333019271493, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0027793273329734802, 0.0, 0.0, 0.013301418162882328, 0.0, 5.3718180424766615e-05, 0.0, 0.0, 0.0, 0.0, 0.0, 0.12241678684949875, 0.0, 0.0022510425187647343, 0.0, 0.11335819214582443, 0.0, 0.007400247734040022, 0.0, 0.0, 0.0, 0.0, 0.0, 0.002659208606928587, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.03979641571640968, 0.0, 0.0, 2.8054217182216235e-05, 0.0, 0.0, 0.0, 0.1551118791103363, 0.0, 0.003937915433198214, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.050374627113342285, 0.0, 0.08124665170907974, 0.0, 0.07395432144403458, 0.0, 0.0, 9.965310164261609e-05, 0.0, 0.0, 0.0, 0.0, 0.0, 0.03702321648597717, 0.0, 0.0, 0.0, 0.008337916806340218, 0.0, 0.0, 4.742407691082917e-05, 0.0, 0.0, 0.0, 0.030338238924741745, 0.0, 0.0007489202544093132, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0018623964861035347, 0.0, 0.0003620308998506516, 0.0, 0.0, 0.0, 0.00245213252492249, 0.0, 0.0009326767176389694, 0.0, 0.0, 0.0, 0.0, 0.0, 0.01377634797245264, 0.0, 0.0, 0.0, 0.0006574176368303597, 0.0, 0.0, 1.7940679754246958e-05, 0.0, 0.0, 0.0, 0.0, 0.001157407183200121, 0.0, 0.0, 0.0, 0.0005837195785716176, 0.0, 0.0, 0.0, 7.606972940266132e-05, 0.0, 0.0, 0.0, 0.0024263407103717327, 0.0, 0.00014624341565649956, 0.0, 0.0, 0.0, 0.0, 0.0, 3.0595754651585594e-05]], "target": [0.0]}, "loss": [0.590826690196991, 0.0], "acc": [1.0, 0.0, 0.0, 0.0]}}


All source tokens:

['#NEWLINE#', 'def split(', 'self', ',', 'string', ',', 'keep_formatting', ')', ':', '#NEWLINE#', '#INDENT#', "' Recursively splitting string by words in dictionary '", '#NEWLINE#', 'if', '(', 'not', 'string', ')', ':', '#NEWLINE#', '#INDENT#', 'return', 'string', '#NEWLINE#', '#UNINDENT#', 'regex', '=', 'self', '.', '_get_split_regex_cache', '(', ')', '#NEWLINE#', 'match', '=', 'regex', '.', 'match', '(', 'string', ')', '#NEWLINE#', 'if', '(', 'not', 'match', ')', ':', '#NEWLINE#', '#INDENT#', 'return', '(', '[', 'string', ']', 'if', 'self', '.', '_should_capture', '(', 'string', ',', 'keep_formatting', ')', 'else', '[', ']', ')', '#NEWLINE#', '#UNINDENT#', '(', 'unparsed', ',', 'known', ',', 'unknown', ')', '=', 'match', '.', 'groups', '(', ')', '#NEWLINE#', 'splitted', '=', '(', '[', 'known', ']', 'if', 'self', '.', '_should_capture', '(', 'known', ',', 'keep_formatting', ')', 'else', '[', ']', ')', '#NEWLINE#', 'if', '(', 'unparsed', 'and', 'self', '.', '_should_capture', '(', 'unparsed', ',', 'keep_formatting', ')', ')', ':', '#NEWLINE#', '#INDENT#', 'splitted', '=', '(', '[', 'unparsed', ']', '+', 'splitted', ')', '#NEWLINE#', '#UNINDENT#', 'if', 'unknown', ':', '#NEWLINE#', '#INDENT#', 'splitted', '.', 'extend', '(', 'self', '.', 'split', '(', 'unknown', ',', 'keep_formatting', ')', ')', '#NEWLINE#', '#UNINDENT#', 'return', 'splitted']


All attention probs:

[0.008072414435446262, 0.008310705423355103, 0.03558161482214928, 0.01306190062314272, 0.020743995904922485, 0.009478036314249039, 0.02260615862905979, 0.008751997724175453, 0.006564174313098192, 0.007674070540815592, 0.0080808000639081, 0.010201862081885338, 0.007558347657322884, 0.0071953777223825455, 0.006495142355561256, 0.005764178931713104, 0.014165505766868591, 0.0052586887031793594, 0.005489676725119352, 0.006637043319642544, 0.00641709566116333, 0.00598320784047246, 0.014069653116166592, 0.005728146061301231, 0.005360874347388744, 0.009623277932405472, 0.004691365174949169, 0.008666550740599632, 0.0025623650290071964, 0.0030805945862084627, 0.004095574840903282, 0.004205659497529268, 0.005306972190737724, 0.014198670163750648, 0.0043917689472436905, 0.008903649635612965, 0.0027654836885631084, 0.004692859016358852, 0.0038630806375294924, 0.015297351405024529, 0.002522635506466031, 0.0046726614236831665, 0.005871416535228491, 0.004140674602240324, 0.0031917085871100426, 0.011506928130984306, 0.003187386319041252, 0.0026971655897796154, 0.0036472489591687918, 0.004067088942974806, 0.0039316629990935326, 0.002905508503317833, 0.00264097866602242, 0.02171524241566658, 0.002428730484098196, 0.003110813908278942, 0.007188088726252317, 0.0018547010840848088, 0.00236542709171772, 0.0028260538820177317, 0.013269070535898209, 0.0030830365139991045, 0.012366969138383865, 0.0028217423241585493, 0.0030586833599954844, 0.0031902873888611794, 0.0034386811312288046, 0.0039785015396773815, 0.005101451184600592, 0.005107001401484013, 0.005234857555478811, 0.015486180782318115, 0.005441079847514629, 0.011465550400316715, 0.004189375787973404, 0.01324175763875246, 0.004263810347765684, 0.0027749210130423307, 0.008125401102006435, 0.0021122994367033243, 0.0026110708713531494, 0.002609941642731428, 0.002742463955655694, 0.004488910548388958, 0.010586360469460487, 0.0032220836728811264, 0.003549159038811922, 0.004633287433534861, 0.010638569481670856, 0.0024358986411243677, 0.0031707321759313345, 0.007303935941308737, 0.0018207156099379063, 0.002287479117512703, 0.0028006406500935555, 0.017990320920944214, 0.0034251173492521048, 0.0129013666883111, 0.0035008422564715147, 0.0035246354527771473, 0.0032285084016621113, 0.0033602395560592413, 0.003407552605494857, 0.0057345167733728886, 0.005706237629055977, 0.0030455964151769876, 0.01365737710148096, 0.003139808773994446, 0.006336914375424385, 0.0017439688090234995, 0.004375044722110033, 0.0041915238834917545, 0.015775684267282486, 0.003105019684880972, 0.010857249610126019, 0.0025901703629642725, 0.002478710375726223, 0.00307053467258811, 0.003765807254239917, 0.0037322344724088907, 0.012493724003434181, 0.0032476442866027355, 0.002960632788017392, 0.0034194474574178457, 0.01512463204562664, 0.005992652848362923, 0.007258559111505747, 0.012953467667102814, 0.004241091199219227, 0.005212748423218727, 0.004478715360164642, 0.004866675473749638, 0.014992551878094673, 0.003185637528076768, 0.0038526919670403004, 0.0033849698957055807, 0.01083181332796812, 0.0018201323691755533, 0.00214447476901114, 0.0029374388977885246, 0.008840572088956833, 0.0021275444887578487, 0.0037021776661276817, 0.0034012466203421354, 0.020605148747563362, 0.0028855151031166315, 0.010903333313763142, 0.0028474326245486736, 0.0030732550658285618, 0.004699948243796825, 0.004609237425029278, 0.007612822577357292, 0.013927163556218147]


Top-k source tokens:

['self', 'keep_formatting', 'string', 'string', 'unknown', 'known', 'unparsed', 'unparsed', 'string', 'unparsed']


Top-k attention probs:

[0.03558161482214928, 0.02260615862905979, 0.02171524241566658, 0.020743995904922485, 0.020605148747563362, 0.017990320920944214, 0.015775684267282486, 0.015486180782318115, 0.015297351405024529, 0.01512463204562664]
