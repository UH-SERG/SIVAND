
Original sample:

{"has_bug": false, "bug_kind": 0, "bug_kind_name": "NONE", "source_tokens": ["#NEWLINE#", "def build_image_from_git(", "self", ",", "url", ",", "image", ",", "git_path", "=", "None", ",", "git_commit", "=", "None", ",", "copy_dockerfile_to", "=", "None", ",", "stream", "=", "False", ",", "use_cache", "=", "False", ")", ":", "#NEWLINE#", "#INDENT#", "'\\n        build image from provided url and tag it\\n\\n        this operation is asynchronous and you should consume returned generator in order to wait\\n        for build to finish\\n\\n        :param url: str\\n        :param image: ImageName, name of the resulting image\\n        :param git_path: str, path to dockerfile within gitrepo\\n        :param copy_dockerfile_to: str, copy dockerfile to provided path\\n        :param stream: bool, True returns generator, False returns str\\n        :param use_cache: bool, True if you want to use cache\\n        :return: generator\\n        '", "#NEWLINE#", "logger", ".", "info", "(", "\"building image '%s' from git repo '%s' specified as URL '%s'\"", ",", "image", ",", "git_path", ",", "url", ")", "#NEWLINE#", "logger", ".", "info", "(", "\"will copy Dockerfile to '%s'\"", ",", "copy_dockerfile_to", ")", "#NEWLINE#", "temp_dir", "=", "tempfile", ".", "mkdtemp", "(", ")", "#NEWLINE#", "response", "=", "None", "#NEWLINE#", "try", ":", "#NEWLINE#", "#INDENT#", "clone_git_repo", "(", "url", ",", "temp_dir", ",", "git_commit", ")", "#NEWLINE#", "(", "df_path", ",", "df_dir", ")", "=", "figure_out_dockerfile", "(", "temp_dir", ",", "git_path", ")", "#NEWLINE#", "if", "copy_dockerfile_to", ":", "#NEWLINE#", "#INDENT#", "shutil", ".", "copyfile", "(", "df_path", ",", "copy_dockerfile_to", ")", "#NEWLINE#", "#UNINDENT#", "response", "=", "self", ".", "build_image_from_path", "(", "df_dir", ",", "image", ",", "stream", "=", "stream", ",", "use_cache", "=", "use_cache", ")", "#NEWLINE#", "#UNINDENT#", "finally", ":", "#NEWLINE#", "#INDENT#", "try", ":", "#NEWLINE#", "#INDENT#", "shutil", ".", "rmtree", "(", "temp_dir", ")", "#NEWLINE#", "#UNINDENT#", "except", "(", "IOError", ",", "OSError", ")", "as", "ex", ":", "#NEWLINE#", "#INDENT#", "logger", ".", "warning", "(", "\"Failed to remove dir '%s': %r\"", ",", "temp_dir", ",", "ex", ")", "#NEWLINE#", "#UNINDENT#", "#UNINDENT#", "logger", ".", "info", "(", "'build finished'", ")", "#NEWLINE#", "return", "response"], "error_location": [0], "repair_targets": [], "repair_candidates": [55, 75, 88, 140, 161, 83, 114, 12, 77, 81, 102, 6, 39, 116, 24, 122, 124, 151, 163, 2, 110, 8, 41, 90, 63, 108, 176, 16, 52, 94, 104, 4, 43, 73, 20, 118, 120], "provenances": [{"datasetProvenance": {"datasetName": "ETHPy150Open", "filepath": "projectatomic/atomic-reactor/atomic_reactor/core.py", "license": "bsd-3-clause", "note": "license: bigquery_api"}}], "txt_file": "eval__VARIABLE_MISUSE__SStuB.txt-00000-of-00300", "js_count": 363, "results": {"model": "transformer", "prob": {"loc": [[0.5399019718170166, 2.6057393824885366e-06, 2.0575042469772598e-07, 3.821300609274658e-08, 1.184295456369e-06, 4.569522360498013e-08, 1.25406984352594e-06, 4.641234241375969e-08, 2.257855385323637e-06, 1.5648232931653183e-07, 6.052363232811331e-08, 4.2915470288562574e-08, 2.1558130356424954e-06, 1.892331624731014e-07, 1.022654529947431e-07, 5.0655209804517654e-08, 2.8427223242033506e-06, 1.8572957571905135e-07, 1.1866043791997072e-07, 4.9020634662610973e-08, 1.1282854757155292e-06, 1.9483866253722226e-07, 2.779020462639892e-07, 7.512615951554835e-08, 8.69902032718528e-06, 2.0473201800541574e-07, 3.6853344909104635e-07, 6.35238706081509e-08, 2.124215683352304e-07, 1.3334597781522461e-07, 8.178529498081843e-08, 3.3619156170061615e-07, 7.786707101331558e-08, 1.572092998003427e-07, 2.6156008914313134e-08, 9.309706427984565e-08, 2.9178150384723267e-07, 1.0296109849150525e-06, 6.644403924838116e-07, 0.0006752987974323332, 5.535588343263953e-07, 0.009148655459284782, 1.7636654092711979e-07, 0.12786678969860077, 2.0129628808263078e-07, 1.6684739989614172e-07, 1.3137369592186587e-07, 4.779455764492013e-08, 2.0902719199966668e-07, 1.4733558373336564e-07, 2.2572912712348625e-06, 4.98563451856171e-07, 0.015181641094386578, 9.862890237855026e-07, 2.457618393236771e-07, 3.6003777950099902e-06, 1.6229557786573423e-07, 2.984691036544973e-07, 7.610979935179785e-08, 1.735013555048681e-08, 1.8848975287255598e-06, 1.561612975820026e-06, 6.335142188618192e-07, 9.8281725513516e-06, 6.528185849674628e-07, 7.799486638759845e-07, 2.8138845209468855e-07, 2.8112071959185414e-07, 3.325547766053205e-07, 3.980762812716421e-07, 2.7034704430661805e-07, 8.278538530248625e-07, 2.53736345712241e-07, 0.11502628028392792, 6.08739867402619e-07, 0.012792641296982765, 5.103120201965794e-07, 0.00026154788793064654, 5.521989123735693e-07, 3.6147466175862064e-07, 6.359703519365212e-08, 1.7247910363948904e-05, 3.7366859828580345e-07, 4.138695294386707e-05, 1.4163192929572688e-07, 1.2517045888671419e-07, 1.8169309612403595e-07, 2.016060989262769e-06, 0.03694053739309311, 6.219004262675298e-07, 0.03190021961927414, 1.8998330233443994e-06, 8.272209583992662e-07, 4.936933919452713e-07, 0.02575726993381977, 1.926463255585986e-06, 1.6864300960151013e-06, 1.0979829312418588e-06, 1.8705206628055748e-07, 8.293098119338538e-08, 1.7248041217499122e-07, 6.26374173862132e-07, 0.0006530288374051452, 5.343614475350478e-07, 0.031995370984077454, 1.5711614196334267e-06, 4.76015287631526e-07, 3.089159577029932e-07, 2.1052471765869996e-06, 3.939850756751184e-08, 4.6280425181066676e-07, 1.4298065309503727e-07, 4.728623537175736e-08, 8.672790272612474e-07, 0.004842073656618595, 8.423281769864843e-07, 0.003369922051206231, 1.794424235868064e-07, 7.6324951692186e-08, 6.64271169625863e-07, 3.303925768705085e-05, 1.8626224118634127e-07, 7.213869253064331e-07, 2.384942092703568e-07, 3.6955621908418834e-05, 1.5579981891278294e-06, 3.9020298459035985e-07, 3.3304129942735017e-07, 9.993403182306793e-06, 4.7432820338144666e-07, 4.269481053142954e-07, 3.5357857086637523e-07, 1.558785100996829e-07, 6.370918868014996e-07, 5.671055873790465e-07, 2.2709753011440625e-07, 1.539091556423955e-07, 9.060035921493181e-08, 2.5007606652138747e-08, 2.7645427280731383e-07, 0.018331265076994896, 1.866391244220722e-06, 1.035922309711168e-06, 3.4670239301703987e-07, 1.477821683693037e-06, 1.3643224292536615e-06, 3.493148369670962e-06, 2.1002458652219502e-06, 3.0991998301033163e-06, 1.158623376795731e-06, 1.2669021316469298e-06, 4.821845323021989e-06, 5.581276809607516e-07, 1.9450727961611847e-07, 8.485312008588153e-08, 3.662797780634719e-07, 8.3914464710233e-08, 1.7722937784014903e-08, 2.1898654267715756e-07, 1.1609222383412998e-05, 5.413088501882157e-07, 0.023665735498070717, 4.804629725185805e-07, 0.0008773972513154149, 1.4330220210467814e-06, 2.9080086960675544e-07, 2.0610056594705384e-07, 1.404799121473843e-07, 9.154950930678751e-08, 1.3067332815808186e-07, 8.166772431650315e-07, 1.5400231632156647e-06, 2.0388368284329772e-05, 4.3665522753144614e-06, 6.886044161547034e-07, 3.6324638585938374e-07, 0.0005219135782681406]], "pointer": [[0.0, 0.0, 0.01808505319058895, 0.0, 0.1388026773929596, 0.0, 0.08581344783306122, 0.0, 0.026345621794462204, 0.0, 0.0, 0.0, 0.148961141705513, 0.0, 0.0, 0.0, 0.03690788522362709, 0.0, 0.0, 0.0, 0.03992902487516403, 0.0, 0.0, 0.0, 0.05587046593427658, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.02689271606504917, 0.0, 0.001279105432331562, 0.0, 0.0009563995408825576, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0027808379381895065, 0.0, 0.0, 0.11888778209686279, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0660989060997963, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.03733643516898155, 0.0, 0.0004153899208176881, 0.0, 0.003378863912075758, 0.0, 0.0, 0.0, 0.022390233352780342, 0.0, 0.05209774896502495, 0.0, 0.0, 0.0, 0.0, 0.001082408707588911, 0.0, 0.0028145299293100834, 0.0, 0.0, 0.0, 0.000260231492575258, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.013465977273881435, 0.0, 0.002754547633230686, 0.0, 0.0, 0.0, 0.045254774391651154, 0.0, 0.000567415845580399, 0.0, 0.0, 0.0, 0.0007996578933671117, 0.0, 0.002920781495049596, 0.0, 0.0001414294820278883, 0.0, 1.6928368495428003e-05, 0.0, 3.315646608825773e-05, 0.0, 3.0639621400041506e-06, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.011855441145598888, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.00394296133890748, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.02940070815384388, 0.0, 1.0637662853696384e-05, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0014455883065238595]], "target": [0.0]}, "loss": [0.6163675785064697, 0.0], "acc": [1.0, 0.0, 0.0, 0.0]}}


All source tokens:

['#NEWLINE#', 'def build_image_from_git(', 'self', ',', 'url', ',', 'image', ',', 'git_path', '=', 'None', ',', 'git_commit', '=', 'None', ',', 'copy_dockerfile_to', '=', 'None', ',', 'stream', '=', 'False', ',', 'use_cache', '=', 'False', ')', ':', '#NEWLINE#', '#INDENT#', "'\\n        build image from provided url and tag it\\n\\n        this operation is asynchronous and you should consume returned generator in order to wait\\n        for build to finish\\n\\n        :param url: str\\n        :param image: ImageName, name of the resulting image\\n        :param git_path: str, path to dockerfile within gitrepo\\n        :param copy_dockerfile_to: str, copy dockerfile to provided path\\n        :param stream: bool, True returns generator, False returns str\\n        :param use_cache: bool, True if you want to use cache\\n        :return: generator\\n        '", '#NEWLINE#', 'logger', '.', 'info', '(', '"building image \'%s\' from git repo \'%s\' specified as URL \'%s\'"', ',', 'image', ',', 'git_path', ',', 'url', ')', '#NEWLINE#', 'logger', '.', 'info', '(', '"will copy Dockerfile to \'%s\'"', ',', 'copy_dockerfile_to', ')', '#NEWLINE#', 'temp_dir', '=', 'tempfile', '.', 'mkdtemp', '(', ')', '#NEWLINE#', 'response', '=', 'None', '#NEWLINE#', 'try', ':', '#NEWLINE#', '#INDENT#', 'clone_git_repo', '(', 'url', ',', 'temp_dir', ',', 'git_commit', ')', '#NEWLINE#', '(', 'df_path', ',', 'df_dir', ')', '=', 'figure_out_dockerfile', '(', 'temp_dir', ',', 'git_path', ')', '#NEWLINE#', 'if', 'copy_dockerfile_to', ':', '#NEWLINE#', '#INDENT#', 'shutil', '.', 'copyfile', '(', 'df_path', ',', 'copy_dockerfile_to', ')', '#NEWLINE#', '#UNINDENT#', 'response', '=', 'self', '.', 'build_image_from_path', '(', 'df_dir', ',', 'image', ',', 'stream', '=', 'stream', ',', 'use_cache', '=', 'use_cache', ')', '#NEWLINE#', '#UNINDENT#', 'finally', ':', '#NEWLINE#', '#INDENT#', 'try', ':', '#NEWLINE#', '#INDENT#', 'shutil', '.', 'rmtree', '(', 'temp_dir', ')', '#NEWLINE#', '#UNINDENT#', 'except', '(', 'IOError', ',', 'OSError', ')', 'as', 'ex', ':', '#NEWLINE#', '#INDENT#', 'logger', '.', 'warning', '(', '"Failed to remove dir \'%s\': %r"', ',', 'temp_dir', ',', 'ex', ')', '#NEWLINE#', '#UNINDENT#', '#UNINDENT#', 'logger', '.', 'info', '(', "'build finished'", ')', '#NEWLINE#', 'return', 'response']


All attention probs:

[0.008671609684824944, 0.008847356773912907, 0.0409458763897419, 0.012694236822426319, 0.012442179024219513, 0.008692868985235691, 0.012429015710949898, 0.007089768536388874, 0.018234673887491226, 0.006706262473016977, 0.0072271451354026794, 0.008050533942878246, 0.016685085371136665, 0.006090093404054642, 0.005494278389960527, 0.0060473219491541386, 0.01833031326532364, 0.006750074215233326, 0.00537572568282485, 0.006012137979269028, 0.011399290524423122, 0.005364152602851391, 0.005129795987159014, 0.004915429744869471, 0.011928576976060867, 0.004136149305850267, 0.0040899114683270454, 0.0026893019676208496, 0.0034912307746708393, 0.0037383928429335356, 0.0037481363397091627, 0.004302456509321928, 0.004556992556899786, 0.005228527821600437, 0.002517242217436433, 0.0032331030815839767, 0.0033005843870341778, 0.0038006165996193886, 0.0036640481557697058, 0.011186638846993446, 0.0028962483629584312, 0.013668214902281761, 0.004358197096735239, 0.0160972960293293, 0.0025211686734110117, 0.004453816916793585, 0.004294912330806255, 0.002256932435557246, 0.003037267131730914, 0.003401034977287054, 0.004522017668932676, 0.0025724677834659815, 0.012242789380252361, 0.002172719221562147, 0.003598391078412533, 0.013191469013690948, 0.0027481289580464363, 0.003151157172396779, 0.0018371151527389884, 0.0029190084896981716, 0.002872183918952942, 0.0027436898089945316, 0.0033184450585395098, 0.007159544620662928, 0.0029340770561248064, 0.0030847392044961452, 0.003865246893838048, 0.004461912903934717, 0.0033537447452545166, 0.003566631581634283, 0.003433913690969348, 0.008170628920197487, 0.0026947648730129004, 0.01590614952147007, 0.002687143860384822, 0.010086512193083763, 0.0023379253689199686, 0.01036520954221487, 0.002031960990279913, 0.003907661885023117, 0.0029914909973740578, 0.009591754525899887, 0.003178595332428813, 0.009744188748300076, 0.003324642311781645, 0.002812887541949749, 0.003760716412216425, 0.003342163050547242, 0.01510296668857336, 0.0023701349273324013, 0.014379490166902542, 0.002033391036093235, 0.0028420034795999527, 0.003475296078249812, 0.011002112179994583, 0.002631274051964283, 0.002880408428609371, 0.0032574969809502363, 0.0032908834982663393, 0.001744664739817381, 0.0033042721915990114, 0.0026282474864274263, 0.009719625115394592, 0.0036740312352776527, 0.0135298827663064, 0.002069763606414199, 0.0033184674102813005, 0.002734751906245947, 0.008399120531976223, 0.0027996222488582134, 0.006006360985338688, 0.0022172380704432726, 0.0040704840794205666, 0.0024229567497968674, 0.008748193271458149, 0.0022987478878349066, 0.010440881364047527, 0.002231186954304576, 0.0052223000675439835, 0.002427866915240884, 0.010073769837617874, 0.0024496412370353937, 0.005428492557257414, 0.0027360403910279274, 0.011008511297404766, 0.0029865046963095665, 0.003910400439053774, 0.0037397705018520355, 0.007198554929345846, 0.002859686268493533, 0.003196791745722294, 0.002897979225963354, 0.003368131350725889, 0.0024188426323235035, 0.002965732244774699, 0.0026576505042612553, 0.0032256124541163445, 0.0014368995325639844, 0.0034966785460710526, 0.0025923741050064564, 0.015046189539134502, 0.0018721939995884895, 0.0032769115641713142, 0.0027739270590245724, 0.004991163033992052, 0.005061404313892126, 0.0026259131263941526, 0.002430911874398589, 0.002521588932722807, 0.0030422781128436327, 0.00500087533146143, 0.00874005351215601, 0.004884176421910524, 0.0049959272146224976, 0.006555886007845402, 0.003721599467098713, 0.0032030486036092043, 0.003302290802821517, 0.0037109360564500093, 0.004527298267930746, 0.0035900576040148735, 0.01855480670928955, 0.0028034376446157694, 0.01163427159190178, 0.0024676236789673567, 0.003918083850294352, 0.0034598105121403933, 0.003616828704252839, 0.005336031783372164, 0.0020199052523821592, 0.0034481696784496307, 0.003143196227028966, 0.004307097755372524, 0.0035235919058322906, 0.004737336654216051, 0.005662847310304642, 0.012664126232266426]


Top-k source tokens:

['self', 'temp_dir', 'copy_dockerfile_to', 'git_path', 'git_commit', 'url', 'url', 'temp_dir', 'temp_dir', 'git_path']


Top-k attention probs:

[0.0409458763897419, 0.01855480670928955, 0.01833031326532364, 0.018234673887491226, 0.016685085371136665, 0.0160972960293293, 0.01590614952147007, 0.01510296668857336, 0.015046189539134502, 0.014379490166902542]
