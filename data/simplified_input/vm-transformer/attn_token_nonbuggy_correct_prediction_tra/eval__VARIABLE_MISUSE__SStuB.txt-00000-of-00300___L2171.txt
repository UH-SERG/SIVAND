
Original sample:

{"has_bug": false, "bug_kind": 0, "bug_kind_name": "NONE", "source_tokens": ["#NEWLINE#", "def walk_files(", "b", ",", "**kwargs", ")", ":", "#NEWLINE#", "#INDENT#", "\"\\n    Walk a blueprint's files and execute callbacks.\\n\\n    * `before_files():`\\n      Executed before files are enumerated.\\n    * `file(pathname, f):`\\n      Executed when a file is enumerated.\\n    * `after_files():`\\n      Executed after files are enumerated.\\n    \"", "#NEWLINE#", "kwargs", ".", "get", "(", "'before_files'", ",", "(", "lambda", "*", "args", ":", "None", ")", ")", "(", ")", "#NEWLINE#", "callable", "=", "kwargs", ".", "get", "(", "'file'", ",", "(", "lambda", "*", "args", ":", "None", ")", ")", "#NEWLINE#", "for", "(", "pathname", ",", "f", ")", "in", "sorted", "(", "b", ".", "get", "(", "'files'", ",", "{", "#NEWLINE#", "#INDENT#", "#NEWLINE#", "#UNINDENT#", "}", ")", ".", "iteritems", "(", ")", ")", ":", "#NEWLINE#", "#INDENT#", "if", "(", "(", "'content'", "in", "f", ")", "and", "(", "not", "isinstance", "(", "f", "[", "'content'", "]", ",", "basestring", ")", ")", ")", ":", "#NEWLINE#", "#INDENT#", "f", "[", "'content'", "]", "=", "util", ".", "json_dumps", "(", "f", "[", "'content'", "]", ")", "#NEWLINE#", "#UNINDENT#", "callable", "(", "pathname", ",", "f", ")", "#NEWLINE#", "#UNINDENT#", "kwargs", ".", "get", "(", "'after_files'", ",", "(", "lambda", "*", "args", ":", "None", ")", ")", "(", ")"], "error_location": [0], "repair_targets": [], "repair_candidates": [28, 115, 47, 117, 49, 80, 87, 99, 108, 119, 11, 30, 123, 2, 54], "provenances": [{"datasetProvenance": {"datasetName": "ETHPy150Open", "filepath": "devstructure/blueprint/blueprint/walk.py", "license": "bsd-2-clause", "note": "license: bigquery_api"}}], "txt_file": "eval__VARIABLE_MISUSE__SStuB.txt-00000-of-00300", "js_count": 2171, "results": {"model": "transformer", "prob": {"loc": [[0.9501371383666992, 3.886088052240666e-06, 1.8778849835143774e-06, 1.0760328450487577e-07, 1.4782865491724806e-06, 1.143115326840416e-07, 2.8995620482419326e-07, 4.2820107637453475e-07, 3.951384996980778e-07, 2.4608627882116707e-06, 6.677574333480152e-07, 1.740999380217545e-07, 3.0283001706266077e-07, 1.2881103828021878e-07, 5.208118523114535e-07, 2.4342547476408072e-05, 9.54752067627851e-07, 1.288295493395708e-06, 0.00017019876395352185, 1.0458326187290368e-06, 0.00022187118884176016, 4.1514863369229715e-07, 2.232046938388521e-07, 1.6109399325614504e-07, 1.2351705436230986e-07, 1.1191544217581395e-05, 1.8130907619706704e-06, 6.603328870369296e-07, 7.624825684615644e-06, 1.8673708268579503e-07, 4.217429886921309e-05, 5.72278736399312e-07, 1.2546981054128992e-07, 1.907150135593838e-06, 2.4653529180795886e-05, 5.916544409956259e-07, 8.919082006286772e-07, 0.0002134457026841119, 4.365229244740476e-07, 0.0009086789796128869, 1.0108841479450348e-06, 7.23614130038186e-06, 3.208541556887212e-06, 2.6926361442747293e-06, 3.1100507840164937e-06, 1.199109078697802e-06, 3.0640580916951876e-07, 2.9887423806940205e-06, 1.5772067172292736e-06, 7.057011316646822e-06, 2.602603217383148e-07, 2.7829901227960363e-07, 9.372780596095254e-07, 6.440442348321085e-07, 0.0005953581421636045, 1.0977564670611173e-06, 1.4175866169807705e-07, 2.1766820736957015e-06, 2.0419771317392588e-05, 6.271654910960933e-07, 2.1368654415709898e-05, 1.6726885405660141e-06, 8.727873819225351e-07, 1.261109559891338e-06, 1.1374742143743788e-06, 4.7222115995282365e-07, 2.407774388757389e-07, 3.167109241530852e-07, 1.415381944980254e-07, 1.8092976006300887e-06, 6.253280844248366e-06, 3.9204144286486553e-07, 5.162301476957509e-06, 1.384264351145248e-06, 1.96714540834364e-06, 3.0853418593324022e-06, 3.0499592185151414e-07, 1.8398098973193555e-06, 0.01012062095105648, 3.7302495456970064e-06, 0.010836495086550713, 1.3285085742609226e-06, 2.1316861875675386e-06, 2.0670493086072383e-06, 1.7497889075457351e-06, 2.426007313260925e-06, 4.2995429794245865e-06, 0.00242405803874135, 9.905555998557247e-06, 6.164796650409698e-05, 2.2485698991658865e-06, 2.3185095869848737e-06, 0.0010039352346211672, 1.8755582686935668e-06, 4.5950355342938565e-07, 3.924585030290473e-07, 2.8127369660069235e-06, 1.0516796464798972e-06, 6.327157962005003e-07, 4.5659689931198955e-05, 7.848747145544621e-07, 3.409410783206113e-05, 6.648319299529248e-07, 1.8093724918344378e-07, 5.8178193285129964e-06, 7.798660135449609e-07, 8.226612635553465e-08, 1.303002932218078e-06, 0.0016302643343806267, 2.8846998247900046e-06, 6.296201900113374e-05, 1.2900202364107827e-06, 2.220233682237449e-06, 1.1084163134000846e-06, 4.010273642052198e-07, 2.4768023649812676e-06, 4.575047967136925e-07, 0.009567872621119022, 1.1977558642684016e-06, 0.007766664959490299, 3.7672946291422704e-06, 2.0576733277266612e-06, 6.658477786913863e-07, 4.91621790388308e-07, 4.926392875859165e-07, 9.522745614276573e-08, 4.21807180828182e-06, 5.472593693411909e-05, 9.909367690852378e-07, 2.5511242256470723e-06, 0.00021567587100435048, 1.514066298113903e-06, 0.0035800717305392027, 4.578249445330584e-06, 4.386535238154465e-06, 2.6440559395268792e-06, 1.4492101172436378e-06, 1.0387124348198995e-05, 6.300127097347286e-06]], "pointer": [[0.0, 0.0, 0.024448294192552567, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.005562255159020424, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.2370864450931549, 0.0, 0.002059253863990307, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.40112248063087463, 0.0, 0.159608393907547, 0.0, 0.0, 0.0, 0.0, 0.0005474435747601092, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.07694032788276672, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.039164766669273376, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0358940064907074, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.006986579392105341, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0016248131869360805, 0.0, 0.003526761895045638, 0.0, 0.0008625286282040179, 0.0, 0.0, 0.0, 0.004565605893731117, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]], "target": [0.0]}, "loss": [0.05114881321787834, 0.0], "acc": [1.0, 0.0, 0.0, 0.0]}}


All source tokens:

['#NEWLINE#', 'def walk_files(', 'b', ',', '**kwargs', ')', ':', '#NEWLINE#', '#INDENT#', '"\\n    Walk a blueprint\'s files and execute callbacks.\\n\\n    * `before_files():`\\n      Executed before files are enumerated.\\n    * `file(pathname, f):`\\n      Executed when a file is enumerated.\\n    * `after_files():`\\n      Executed after files are enumerated.\\n    "', '#NEWLINE#', 'kwargs', '.', 'get', '(', "'before_files'", ',', '(', 'lambda', '*', 'args', ':', 'None', ')', ')', '(', ')', '#NEWLINE#', 'callable', '=', 'kwargs', '.', 'get', '(', "'file'", ',', '(', 'lambda', '*', 'args', ':', 'None', ')', ')', '#NEWLINE#', 'for', '(', 'pathname', ',', 'f', ')', 'in', 'sorted', '(', 'b', '.', 'get', '(', "'files'", ',', '{', '#NEWLINE#', '#INDENT#', '#NEWLINE#', '#UNINDENT#', '}', ')', '.', 'iteritems', '(', ')', ')', ':', '#NEWLINE#', '#INDENT#', 'if', '(', '(', "'content'", 'in', 'f', ')', 'and', '(', 'not', 'isinstance', '(', 'f', '[', "'content'", ']', ',', 'basestring', ')', ')', ')', ':', '#NEWLINE#', '#INDENT#', 'f', '[', "'content'", ']', '=', 'util', '.', 'json_dumps', '(', 'f', '[', "'content'", ']', ')', '#NEWLINE#', '#UNINDENT#', 'callable', '(', 'pathname', ',', 'f', ')', '#NEWLINE#', '#UNINDENT#', 'kwargs', '.', 'get', '(', "'after_files'", ',', '(', 'lambda', '*', 'args', ':', 'None', ')', ')', '(', ')']


All attention probs:

[0.0171513631939888, 0.00923249777406454, 0.025080759078264236, 0.015526856295764446, 0.027805451303720474, 0.013300972990691662, 0.00856826826930046, 0.008464029990136623, 0.008010952733457088, 0.012269574217498302, 0.010293313302099705, 0.01637454144656658, 0.006844092160463333, 0.007679748348891735, 0.006695127114653587, 0.007020539604127407, 0.006715857423841953, 0.006817435380071402, 0.013114405795931816, 0.00702869426459074, 0.016627298668026924, 0.006298344116657972, 0.005167838651686907, 0.00496461009606719, 0.004942531697452068, 0.006251297425478697, 0.004035196267068386, 0.005876500159502029, 0.027921529486775398, 0.005701530259102583, 0.0125967338681221, 0.0036851176992058754, 0.004194767214357853, 0.0037991635035723448, 0.00526195764541626, 0.003945895936340094, 0.0037279885727912188, 0.00863365363329649, 0.004009799100458622, 0.010668860748410225, 0.00386326783336699, 0.003489771857857704, 0.004901310428977013, 0.003399429377168417, 0.0055504064075648785, 0.005661582574248314, 0.00423022173345089, 0.021342243999242783, 0.005722803063690662, 0.02704540826380253, 0.005122671835124493, 0.003476144280284643, 0.0038288570940494537, 0.0033725984394550323, 0.011786668561398983, 0.0027018170803785324, 0.0036525283940136433, 0.0032541323453187943, 0.004747172351926565, 0.002912008436396718, 0.0035479869693517685, 0.003972887527197599, 0.0040020933374762535, 0.004231054801493883, 0.0050023929215967655, 0.007288062945008278, 0.005119623150676489, 0.003383476985618472, 0.005728717427700758, 0.005094695370644331, 0.004868282005190849, 0.004288633354008198, 0.0037203943356871605, 0.004685731139034033, 0.0043638115748763084, 0.005902525968849659, 0.0023492949549108744, 0.0027837459929287434, 0.017546694725751877, 0.003368329256772995, 0.02651534229516983, 0.0025884429924190044, 0.003736999584361911, 0.002861669519916177, 0.0036135634873062372, 0.004291001707315445, 0.003913454711437225, 0.015213399194180965, 0.003960965666919947, 0.005589635111391544, 0.00285190693102777, 0.003004483412951231, 0.009535820223391056, 0.0035458679776638746, 0.0038876235485076904, 0.003979998175054789, 0.005343183409422636, 0.005471975076943636, 0.005781108979135752, 0.011695748195052147, 0.006961805280297995, 0.006133046932518482, 0.004254551604390144, 0.005969622638076544, 0.00612703338265419, 0.002705090446397662, 0.0038802882190793753, 0.003180486150085926, 0.014177498407661915, 0.0028349515050649643, 0.006351309362798929, 0.0040750703774392605, 0.0031868943478912115, 0.004901178181171417, 0.004408030305057764, 0.008578591048717499, 0.0033984535839408636, 0.02589305303990841, 0.0033049308694899082, 0.02454022504389286, 0.003384638112038374, 0.005187976639717817, 0.005271421279758215, 0.011180681176483631, 0.005101779010146856, 0.004563271999359131, 0.0069100079126656055, 0.00793082918971777, 0.007085924036800861, 0.005272776819765568, 0.009293613024055958, 0.005214874632656574, 0.014077823609113693, 0.0045768688432872295, 0.0032378684263676405, 0.0032186920288950205, 0.003287819679826498, 0.005240984261035919, 0.004103270824998617]


Top-k source tokens:

['callable', '**kwargs', 'f', 'f', 'pathname', 'b', 'f', 'pathname', "'content'", '#NEWLINE#']


Top-k attention probs:

[0.027921529486775398, 0.027805451303720474, 0.02704540826380253, 0.02651534229516983, 0.02589305303990841, 0.025080759078264236, 0.02454022504389286, 0.021342243999242783, 0.017546694725751877, 0.0171513631939888]
