
Original sample:

{"has_bug": false, "bug_kind": 0, "bug_kind_name": "NONE", "source_tokens": ["#NEWLINE#", "def __init__(", "self", ",", "aws_access_key", ",", "aws_secret_key", ",", "region", ",", "bookkeeping", "=", "False", ",", "no_bookkeeping", "=", "None", ",", "bookkeeping_domain_name", "=", "None", ",", "sdb_access_key", "=", "None", ",", "sdb_secret_key", "=", "None", ",", "sdb_region", "=", "None", ",", "logfile", "=", "None", ",", "loglevel", "=", "'WARNING'", ",", "logtostdout", "=", "True", ")", ":", "#NEWLINE#", "#INDENT#", "'\\n        Constructor, sets up important variables and so for GlacierWrapper.\\n\\n        :param aws_access_key: your AWS access key.\\n        :type aws_access_key: str\\n        :param aws_secret_key: your AWS secret key.\\n        :type aws_secret_key: str\\n        :param region: name of your default region, see :ref:`regions`.\\n        :type region: str\\n        :param bookkeeping: whether to enable bookkeeping, see :reg:`bookkeeping`.\\n        :type bookkeeping: boolean\\n        :param bookkeeping_domain_name: your Amazon SimpleDB domain name where the bookkeeping information will be stored.\\n        :type bookkeeping_domain_name: str\\n        :param sdb_access_key: your SimpleDB access key.\\n        :type sdb_access_key: str\\n        :param sdb_secret_key: your SimpleDB secret key.\\n        :type sdb_secret_key: str\\n        :param sdb_region: name of your sdb region, see :ref:`regions`.\\n        :type sdb_region: str\\n        :param logfile: complete file name of where to log messages.\\n        :type logfile: str\\n        :param loglevel: the desired loglevel, see :py:func:`setuplogging`\\n        :type loglevel: str\\n        :param logtostdout: whether to log messages to stdout instead of to file.\\n        :type logtostdout: boolean\\n        '", "#NEWLINE#", "self", ".", "aws_access_key", "=", "aws_access_key", "#NEWLINE#", "self", ".", "aws_secret_key", "=", "aws_secret_key", "#NEWLINE#", "self", ".", "bookkeeping", "=", "bookkeeping", "#NEWLINE#", "if", "no_bookkeeping", ":", "#NEWLINE#", "#INDENT#", "self", ".", "bookkeeping", "=", "False", "#NEWLINE#", "#UNINDENT#", "self", ".", "bookkeeping_domain_name", "=", "bookkeeping_domain_name", "#NEWLINE#", "self", ".", "region", "=", "region", "#NEWLINE#", "self", ".", "sdb_access_key", "=", "(", "sdb_access_key", "if", "sdb_access_key", "else", "aws_access_key", ")", "#NEWLINE#", "self", ".", "sdb_secret_key", "=", "(", "sdb_secret_key", "if", "sdb_secret_key", "else", "aws_secret_key", ")", "#NEWLINE#", "self", ".", "sdb_region", "=", "(", "sdb_region", "if", "sdb_region", "else", "region", ")", "#NEWLINE#", "self", ".", "setuplogging", "(", "logfile", ",", "loglevel", ",", "logtostdout", ")", "#NEWLINE#", "self", ".", "logger", "=", "logging", ".", "getLogger", "(", "self", ".", "__class__", ".", "__name__", ")", "#NEWLINE#", "self", ".", "_check_region", "(", "region", ")", "#NEWLINE#", "self", ".", "logger", ".", "debug", "(", "'Creating GlacierWrapper instance with\\n    aws_access_key=%s,\\n    aws_secret_key=%s,\\n    bookkeeping=%s,\\n    nobookkeeping=%s,\\n    bookkeeping_domain_name=%s,\\n    region=%s,\\n    sdb_access_key=%s,\\n    sdb_secret_key=%s,\\n    sdb_region=%s,\\n    logfile %s,\\n    loglevel %s,\\n    logging to stdout %s.'", ",", "aws_access_key", ",", "aws_secret_key", ",", "bookkeeping", ",", "no_bookkeeping", ",", "bookkeeping_domain_name", ",", "region", ",", "sdb_access_key", ",", "sdb_secret_key", ",", "sdb_region", ",", "logfile", ",", "loglevel", ",", "logtostdout", ")"], "error_location": [0], "repair_targets": [], "repair_candidates": [10, 65, 67, 76, 174, 42, 137, 192, 14, 70, 176, 18, 83, 85, 178, 2, 51, 57, 63, 74, 81, 87, 93, 105, 117, 129, 140, 148, 155, 162, 26, 107, 110, 112, 184, 22, 95, 98, 100, 182, 30, 119, 122, 124, 186, 34, 133, 188, 6, 59, 61, 114, 172, 38, 135, 190, 4, 53, 55, 102, 170, 8, 89, 91, 126, 159, 180], "provenances": [{"datasetProvenance": {"datasetName": "ETHPy150Open", "filepath": "uskudnik/amazon-glacier-cmd-interface/glacier/GlacierWrapper.py", "license": "mit", "note": "license: bigquery_api"}}], "txt_file": "eval__VARIABLE_MISUSE__SStuB.txt-00000-of-00300", "js_count": 1921, "results": {"model": "transformer", "prob": {"loc": [[0.5488978624343872, 2.8446825695027655e-07, 1.2915062086449325e-07, 6.45914184360663e-08, 2.728108711380628e-06, 7.042923044764393e-08, 1.7807265066949185e-06, 5.307695616352248e-08, 2.2552972041012254e-06, 4.4267597587577256e-08, 1.2249175597389694e-05, 1.2548305505788448e-07, 6.450056133644466e-08, 6.032467325667312e-08, 5.759817668149481e-06, 1.621777556692905e-07, 8.987476007860096e-08, 8.404279583373864e-08, 4.927260670228861e-05, 2.413242441434704e-07, 1.136433382953328e-07, 8.259682005018476e-08, 1.3630816283694003e-05, 3.8453146089523216e-07, 1.4229632938622672e-07, 9.678507950638959e-08, 1.050474020303227e-05, 5.110310894451686e-07, 1.909208577899335e-07, 1.4363081390911248e-07, 7.18397041055141e-06, 5.291121283335087e-07, 2.428074594718055e-07, 1.6599818764007068e-07, 6.6107718339480925e-06, 4.789255854120711e-07, 2.2515783371090947e-07, 1.317727793548329e-07, 3.510244368953863e-06, 6.177293698783615e-07, 9.949314971891e-07, 2.428977836643753e-07, 3.201739673386328e-06, 8.06636592187715e-07, 2.105950670738821e-06, 6.29524436135398e-07, 6.047019951438415e-07, 6.864493684588524e-07, 2.993868690737145e-07, 9.256728503714839e-07, 2.541086701057793e-07, 1.8441244264977286e-07, 8.993717415251012e-08, 3.249299425078789e-07, 9.56543999564019e-08, 0.0008835314074531198, 7.643945423296827e-07, 2.3749926469918137e-07, 9.211723295265983e-08, 4.0142481338989455e-07, 3.0116351013020903e-07, 0.0005348766571842134, 9.248522019333905e-07, 7.000227242315304e-08, 5.3456833626341904e-08, 2.0695051716757007e-07, 5.502300268744875e-07, 0.0033070759382098913, 2.5893632482620887e-06, 5.507765195034153e-07, 0.005553394090384245, 2.7994356059934944e-06, 2.50286097980279e-06, 1.1271450830463436e-06, 1.104614213431887e-07, 9.178128834719246e-08, 1.1969298157055164e-06, 4.5932986836305645e-07, 1.1022833859897219e-05, 1.5253544916049577e-06, 5.404398848440906e-07, 1.3819587252328347e-07, 1.148188957245111e-07, 9.644080591897364e-07, 1.2777093161275843e-07, 0.0023401554208248854, 2.0139959815423936e-06, 5.85992211199482e-07, 1.446966138018979e-07, 1.5089024145709118e-06, 4.596278415647248e-07, 0.0020464689005166292, 1.7774672187442775e-06, 3.914920512215758e-07, 1.1729795801329601e-07, 9.40276152050501e-07, 5.631854378407297e-07, 7.820337941666367e-07, 0.00853053294122219, 1.4661274008176406e-06, 0.0211016945540905, 1.8171700730817975e-06, 0.03381531313061714, 1.4920359490133706e-06, 1.2692898962995969e-06, 2.948347059827938e-07, 9.674632650558124e-08, 2.9586042273876956e-06, 4.43151407125697e-07, 9.761113233253127e-07, 0.008403267711400986, 1.6984148487608763e-06, 0.015072939917445183, 3.499548029139987e-06, 0.01128343865275383, 1.0042920166597469e-06, 7.671931712138758e-07, 5.423212314781267e-07, 1.5419350063439197e-07, 6.516202120110393e-07, 3.1628039209863346e-07, 1.6474197082061437e-06, 0.004990941379219294, 1.3091132586851018e-06, 0.010693813674151897, 1.608760157978395e-06, 0.0054616681300103664, 1.4591321360057918e-06, 7.32197634079057e-07, 8.955259431786544e-07, 6.497786841919151e-08, 1.5057585400768403e-08, 4.6155000177350303e-07, 0.05202604457736015, 6.225956212801975e-07, 0.010407896712422371, 5.634825015476963e-07, 0.009015304036438465, 7.354344120358292e-07, 4.2640016317818663e-07, 2.0651459919918125e-07, 1.1584054959712375e-07, 6.28794225576712e-07, 1.8031258264272765e-07, 5.71839336771518e-07, 3.4339805665695167e-07, 4.647369777899257e-08, 3.7715622625000833e-07, 0.0006458711577579379, 5.33741854269465e-07, 1.0785254289658042e-06, 4.6222001515161537e-07, 2.1778511438697024e-07, 1.4065282130104606e-06, 5.143617727298988e-07, 3.502629652984979e-08, 5.87212589664432e-08, 3.123352030343085e-07, 2.956329296921467e-07, 0.023259295150637627, 1.2664712585319648e-06, 5.962343152532412e-07, 2.1205953260050592e-07, 3.551794591771795e-08, 5.738984327763319e-07, 9.251093757711715e-08, 6.679341968407471e-09, 4.18112534816828e-07, 5.2721123211085796e-05, 6.788545761082787e-07, 0.01988961733877659, 6.394185447788914e-07, 0.016628360375761986, 4.2742939854178985e-07, 0.033224448561668396, 3.560057564300223e-07, 0.025267336517572403, 3.3848164093797095e-07, 0.017886506393551826, 3.621697430844506e-07, 0.020701395347714424, 4.6341523329829215e-07, 0.014240900054574013, 6.297820505096752e-07, 0.016242321580648422, 6.116153485891118e-07, 0.015403595753014088, 4.776507580572797e-07, 0.016760796308517456, 4.169299359091383e-07, 0.006168894004076719, 4.6071664883129415e-07, 0.019042542204260826, 1.5078826436365489e-06]], "pointer": [[0.0, 0.0, 0.0017829237040132284, 0.0, 0.05997059494256973, 0.0, 0.0762941837310791, 0.0, 0.04147595167160034, 0.0, 0.07963907718658447, 0.0, 0.0, 0.0, 0.03403770923614502, 0.0, 0.0, 0.0, 0.09281681478023529, 0.0, 0.0, 0.0, 0.05775013193488121, 0.0, 0.0, 0.0, 0.08382848650217056, 0.0, 0.0, 0.0, 0.07428614795207977, 0.0, 0.0, 0.0, 0.04531557112932205, 0.0, 0.0, 0.0, 0.02591606229543686, 0.0, 0.0, 0.0, 0.03494355082511902, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0004208852769806981, 0.0, 0.004032299388200045, 0.0, 2.472713094903156e-05, 0.0, 0.0003636603069026023, 0.0, 0.005732499063014984, 0.0, 5.0052629376295954e-05, 0.0, 0.00023433634487446398, 0.0, 0.0037598726339638233, 0.0, 7.843691491871141e-06, 0.0, 0.0, 0.0007151877507567406, 0.0, 0.0, 0.0, 0.00020371189748402685, 0.0, 0.002946093212813139, 0.0, 0.0, 0.0, 0.0, 0.0002987106272485107, 0.0, 0.006434135138988495, 0.0, 7.30116807972081e-05, 0.0, 0.0004277000261936337, 0.0, 0.020181279629468918, 0.0, 0.0006231146398931742, 0.0, 0.0003418804844841361, 0.0, 0.02201860025525093, 0.0, 0.0, 0.006284012924879789, 0.0, 0.0055161574855446815, 0.0, 0.010527168400585651, 0.0, 0.0, 0.0002063360152533278, 0.0, 0.023213332518935204, 0.0, 0.0, 0.006567677482962608, 0.0, 0.00466765696182847, 0.0, 0.0043711173348128796, 0.0, 0.0, 0.0003864535829052329, 0.0, 0.019696790724992752, 0.0, 0.0, 0.01922186091542244, 0.0, 0.005883878096938133, 0.0, 0.014552042819559574, 0.0, 0.0, 0.0029684794135391712, 0.0, 0.0, 0.0, 0.0019491559360176325, 0.0, 0.008888873271644115, 0.0, 0.014140266925096512, 0.0, 0.0, 0.0006294966442510486, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.00013285627937875688, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.001342737814411521, 0.0, 0.0, 0.0, 0.032363083213567734, 0.0, 0.0, 0.00010998112702509388, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0006718278746120632, 0.0, 0.004816231317818165, 0.0, 0.0037490532267838717, 0.0, 0.00422801123932004, 0.0, 0.002880496671423316, 0.0, 0.008028010837733746, 0.0, 0.003064545104280114, 0.0, 0.004255150910466909, 0.0, 0.002689162502065301, 0.0, 0.00013969189603812993, 0.0, 0.00023797122412361205, 0.0, 0.004673591814935207, 0.0]], "target": [0.0]}, "loss": [0.5998428463935852, 0.0], "acc": [1.0, 0.0, 0.0, 0.0]}}


All source tokens:

['#NEWLINE#', 'def __init__(', 'self', ',', 'aws_access_key', ',', 'aws_secret_key', ',', 'region', ',', 'bookkeeping', '=', 'False', ',', 'no_bookkeeping', '=', 'None', ',', 'bookkeeping_domain_name', '=', 'None', ',', 'sdb_access_key', '=', 'None', ',', 'sdb_secret_key', '=', 'None', ',', 'sdb_region', '=', 'None', ',', 'logfile', '=', 'None', ',', 'loglevel', '=', "'WARNING'", ',', 'logtostdout', '=', 'True', ')', ':', '#NEWLINE#', '#INDENT#', "'\\n        Constructor, sets up important variables and so for GlacierWrapper.\\n\\n        :param aws_access_key: your AWS access key.\\n        :type aws_access_key: str\\n        :param aws_secret_key: your AWS secret key.\\n        :type aws_secret_key: str\\n        :param region: name of your default region, see :ref:`regions`.\\n        :type region: str\\n        :param bookkeeping: whether to enable bookkeeping, see :reg:`bookkeeping`.\\n        :type bookkeeping: boolean\\n        :param bookkeeping_domain_name: your Amazon SimpleDB domain name where the bookkeeping information will be stored.\\n        :type bookkeeping_domain_name: str\\n        :param sdb_access_key: your SimpleDB access key.\\n        :type sdb_access_key: str\\n        :param sdb_secret_key: your SimpleDB secret key.\\n        :type sdb_secret_key: str\\n        :param sdb_region: name of your sdb region, see :ref:`regions`.\\n        :type sdb_region: str\\n        :param logfile: complete file name of where to log messages.\\n        :type logfile: str\\n        :param loglevel: the desired loglevel, see :py:func:`setuplogging`\\n        :type loglevel: str\\n        :param logtostdout: whether to log messages to stdout instead of to file.\\n        :type logtostdout: boolean\\n        '", '#NEWLINE#', 'self', '.', 'aws_access_key', '=', 'aws_access_key', '#NEWLINE#', 'self', '.', 'aws_secret_key', '=', 'aws_secret_key', '#NEWLINE#', 'self', '.', 'bookkeeping', '=', 'bookkeeping', '#NEWLINE#', 'if', 'no_bookkeeping', ':', '#NEWLINE#', '#INDENT#', 'self', '.', 'bookkeeping', '=', 'False', '#NEWLINE#', '#UNINDENT#', 'self', '.', 'bookkeeping_domain_name', '=', 'bookkeeping_domain_name', '#NEWLINE#', 'self', '.', 'region', '=', 'region', '#NEWLINE#', 'self', '.', 'sdb_access_key', '=', '(', 'sdb_access_key', 'if', 'sdb_access_key', 'else', 'aws_access_key', ')', '#NEWLINE#', 'self', '.', 'sdb_secret_key', '=', '(', 'sdb_secret_key', 'if', 'sdb_secret_key', 'else', 'aws_secret_key', ')', '#NEWLINE#', 'self', '.', 'sdb_region', '=', '(', 'sdb_region', 'if', 'sdb_region', 'else', 'region', ')', '#NEWLINE#', 'self', '.', 'setuplogging', '(', 'logfile', ',', 'loglevel', ',', 'logtostdout', ')', '#NEWLINE#', 'self', '.', 'logger', '=', 'logging', '.', 'getLogger', '(', 'self', '.', '__class__', '.', '__name__', ')', '#NEWLINE#', 'self', '.', '_check_region', '(', 'region', ')', '#NEWLINE#', 'self', '.', 'logger', '.', 'debug', '(', "'Creating GlacierWrapper instance with\\n    aws_access_key=%s,\\n    aws_secret_key=%s,\\n    bookkeeping=%s,\\n    nobookkeeping=%s,\\n    bookkeeping_domain_name=%s,\\n    region=%s,\\n    sdb_access_key=%s,\\n    sdb_secret_key=%s,\\n    sdb_region=%s,\\n    logfile %s,\\n    loglevel %s,\\n    logging to stdout %s.'", ',', 'aws_access_key', ',', 'aws_secret_key', ',', 'bookkeeping', ',', 'no_bookkeeping', ',', 'bookkeeping_domain_name', ',', 'region', ',', 'sdb_access_key', ',', 'sdb_secret_key', ',', 'sdb_region', ',', 'logfile', ',', 'loglevel', ',', 'logtostdout', ')']


All attention probs:

[0.006236775778234005, 0.007797576487064362, 0.022553319111466408, 0.012124132364988327, 0.011382326483726501, 0.008533081039786339, 0.013022573664784431, 0.007042160723358393, 0.015523753128945827, 0.0073080710135400295, 0.016070684418082237, 0.0073267389088869095, 0.007357244845479727, 0.00694972975179553, 0.016980960965156555, 0.006888309493660927, 0.006000156048685312, 0.005772413685917854, 0.014805464074015617, 0.006807790137827396, 0.00561515474691987, 0.0050135208293795586, 0.011815224774181843, 0.005089371930807829, 0.004540829919278622, 0.004179982468485832, 0.012951490469276905, 0.0038465233519673347, 0.0038255241233855486, 0.004034684505313635, 0.012197130359709263, 0.0034285627771168947, 0.0035270825028419495, 0.0038015935570001602, 0.00936220958828926, 0.0030383002012968063, 0.002912975614890456, 0.003449275391176343, 0.00677892193198204, 0.0034501920454204082, 0.0045766266994178295, 0.00326710008084774, 0.01048801839351654, 0.003091497579589486, 0.003371552564203739, 0.0024683275260031223, 0.0025564287789165974, 0.003020241856575012, 0.002937174867838621, 0.003472011536359787, 0.0032036479096859694, 0.005146521143615246, 0.0016947721596807241, 0.002948859240859747, 0.002442491939291358, 0.008398106321692467, 0.003090024460107088, 0.005686707329005003, 0.0016165041597560048, 0.0034332266077399254, 0.002664754865691066, 0.009411524049937725, 0.0031858847942203283, 0.0049042003229260445, 0.0015754395863041282, 0.0034199105575680733, 0.002862767083570361, 0.01054935622960329, 0.0036402756813913584, 0.003422574372962117, 0.009739899076521397, 0.0025666397996246815, 0.002728288760408759, 0.002560201333835721, 0.003722771303728223, 0.0014700195752084255, 0.002375731011852622, 0.001887368387542665, 0.0029015156906098127, 0.003049373161047697, 0.002876183483749628, 0.004437241703271866, 0.0015342695405706763, 0.003173048375174403, 0.0021348774898797274, 0.009040904231369495, 0.003516238881275058, 0.005082929506897926, 0.002176386071369052, 0.004327095113694668, 0.002511181402951479, 0.008522260002791882, 0.003174111247062683, 0.004774138331413269, 0.001427551032975316, 0.0031953752040863037, 0.002696719253435731, 0.002180550480261445, 0.009931148029863834, 0.00288034463301301, 0.008143913000822067, 0.0024173303972929716, 0.01212329138070345, 0.002815291751176119, 0.003746484173461795, 0.0038686867337673903, 0.001446689828298986, 0.004621442407369614, 0.0020693722181022167, 0.0018841729033738375, 0.01096312329173088, 0.003924882970750332, 0.009468961507081985, 0.0020634366665035486, 0.008682197891175747, 0.0015289087314158678, 0.003041599178686738, 0.004720801953226328, 0.0013393681729212403, 0.003682492533698678, 0.002208178862929344, 0.0025315170641988516, 0.008890267461538315, 0.00323861395008862, 0.0073396326042711735, 0.002255186205729842, 0.008136986754834652, 0.002059244317933917, 0.003533822251483798, 0.004988149739801884, 0.001364378142170608, 0.002222005743533373, 0.002427552593871951, 0.014008630067110062, 0.0021803954150527716, 0.009812615811824799, 0.0020612359512597322, 0.008640163578093052, 0.001572687760926783, 0.0033158923033624887, 0.004265316296368837, 0.0013306597247719765, 0.0023244814947247505, 0.0022983497474342585, 0.002332448260858655, 0.0014603593153879046, 0.0018139524618163705, 0.002458282047882676, 0.0110467579215765, 0.0015522763133049011, 0.0016853590495884418, 0.002154765883460641, 0.003022256074473262, 0.0034235091879963875, 0.004311001859605312, 0.005428107921034098, 0.002163404133170843, 0.0032724570482969284, 0.002988776657730341, 0.015086102299392223, 0.002224522875621915, 0.0035852836444973946, 0.004334498196840286, 0.001524099730886519, 0.002176984678953886, 0.0015876191901043057, 0.0026655520778149366, 0.0027093852404505014, 0.006013678852468729, 0.0021457767579704523, 0.010415284894406796, 0.00215188879519701, 0.010700256563723087, 0.0029032768215984106, 0.0102988975122571, 0.002664989558979869, 0.00904238224029541, 0.0026649413630366325, 0.009041573852300644, 0.002908115042373538, 0.009494052268564701, 0.0029732477851212025, 0.008893970400094986, 0.003155029844492674, 0.009320228360593319, 0.0038233839441090822, 0.009364877827465534, 0.004931104369461536, 0.009500636719167233, 0.004763685166835785, 0.010498597286641598, 0.004431840963661671, 0.008489076048135757, 0.00436032610014081]


Top-k source tokens:

['self', 'no_bookkeeping', 'bookkeeping', 'region', 'region', 'bookkeeping_domain_name', 'logfile', 'aws_secret_key', 'sdb_secret_key', 'sdb_region']


Top-k attention probs:

[0.022553319111466408, 0.016980960965156555, 0.016070684418082237, 0.015523753128945827, 0.015086102299392223, 0.014805464074015617, 0.014008630067110062, 0.013022573664784431, 0.012951490469276905, 0.012197130359709263]
