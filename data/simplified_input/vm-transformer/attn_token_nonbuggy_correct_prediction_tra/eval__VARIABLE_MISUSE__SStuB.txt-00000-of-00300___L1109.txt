
Original sample:

{"has_bug": false, "bug_kind": 0, "bug_kind_name": "NONE", "source_tokens": ["#NEWLINE#", "def _parsePayload(", "self", ",", "data", ")", ":", "#NEWLINE#", "#INDENT#", "\"Parse data and extract this cell's fields.\\n\\n        Fill in this cell's attributes.\\n\\n        :param str data: bytes to parse\\n        \"", "#NEWLINE#", "(", "start", ",", "end", ")", "=", "self", ".", "payloadRange", "(", ")", "#NEWLINE#", "offset", "=", "start", "#NEWLINE#", "self", ".", "versions", "=", "[", "]", "#NEWLINE#", "while", "(", "offset", "<", "end", ")", ":", "#NEWLINE#", "#INDENT#", "v", "=", "struct", ".", "unpack", "(", "'!H'", ",", "data", "[", "offset", ":", "(", "offset", "+", "VERSIONS_LEN", ")", "]", ")", "[", "0", "]", "#NEWLINE#", "if", "(", "v", "not in", "CONN_DEFS", ".", "KNOWN_LINK_PROTOCOLS", ")", ":", "#NEWLINE#", "#INDENT#", "msg", "=", "'VersionsCell claims to support an unknown Link '", "#NEWLINE#", "msg", "+=", "'Protocol version {}.'", ".", "format", "(", "v", ")", "#NEWLINE#", "raise", "BadPayloadData", "(", "msg", ")", "#NEWLINE#", "#UNINDENT#", "self", ".", "versions", ".", "append", "(", "v", ")", "#NEWLINE#", "offset", "+=", "VERSIONS_LEN"], "error_location": [0], "repair_targets": [], "repair_candidates": [14, 38, 23, 36, 53, 56, 106, 4, 51, 2, 17, 27, 97, 12, 25, 77, 81, 93, 43, 68, 87, 103], "provenances": [{"datasetProvenance": {"datasetName": "ETHPy150Open", "filepath": "nskinkel/oppy/oppy/cell/varlen.py", "license": "bsd-3-clause", "note": "license: bigquery_api"}}], "txt_file": "eval__VARIABLE_MISUSE__SStuB.txt-00000-of-00300", "js_count": 1109, "results": {"model": "transformer", "prob": {"loc": [[0.7786623239517212, 7.562308383057825e-06, 6.308306410574005e-07, 5.023013827099021e-08, 1.1894958333868999e-05, 4.181575619099931e-08, 1.0168853492587004e-07, 1.2121041947921185e-07, 1.0247475756841595e-07, 4.82730911244289e-07, 1.1166980584675912e-07, 5.304517713966561e-09, 1.4470585938397562e-06, 3.605575571441477e-08, 5.036671154812211e-06, 5.036147499026811e-08, 5.8303005090465376e-08, 1.3870210295863217e-06, 1.037036483353404e-07, 1.0872922473481594e-07, 7.808789632690605e-07, 6.602318990189815e-06, 1.2174332653103193e-07, 1.1907073940164992e-06, 2.691602958293515e-07, 0.0012200148776173592, 3.906782097828909e-08, 5.364707362787158e-07, 5.131265723434808e-08, 7.400048129824199e-09, 9.269294878322398e-07, 8.18181342765456e-06, 3.011090541349404e-07, 7.39621413003988e-08, 2.7832463445065514e-08, 5.01324208812548e-08, 0.02446303889155388, 7.538557156294701e-07, 0.01142455730587244, 9.212184437501492e-08, 1.5604597081164684e-07, 2.015248554698701e-07, 1.242006248958205e-07, 5.469796633406077e-07, 2.164301982077177e-08, 4.9601212026573194e-08, 1.0586506959953113e-07, 5.882229103804093e-08, 2.486326877715328e-07, 1.9207660443498753e-05, 8.805820925772423e-07, 0.008190999738872051, 2.3941578319863766e-07, 0.013695383444428444, 1.730928858023617e-07, 2.421450631118205e-07, 0.013073315843939781, 3.6427945815376006e-07, 1.631255872780457e-05, 2.3761926115639653e-07, 3.343166667946207e-07, 1.0900025699811522e-06, 9.307686354986799e-07, 4.878355071014084e-07, 3.0551501595255104e-07, 4.600016723088629e-07, 3.755949933292868e-07, 1.0503521252758219e-07, 0.00712602911517024, 8.611995667706651e-07, 9.396244422532618e-06, 7.438816282956395e-07, 4.1046743604056246e-07, 8.674670937125484e-08, 5.87056433687394e-07, 2.9881940122322703e-07, 2.1857215415366227e-07, 1.8345959915677668e-06, 1.9276971841009072e-07, 5.895634785701986e-06, 3.38145923706179e-07, 4.984015049558366e-06, 1.9958457997404366e-08, 7.224150522233685e-08, 1.9993255762074114e-07, 8.646027538361523e-08, 3.732112645593588e-07, 0.005423741415143013, 2.835291184055677e-07, 6.763063424841675e-07, 2.600377912997942e-09, 1.9668267015049423e-08, 4.047130914841546e-07, 0.002785458927974105, 5.061012871010462e-07, 6.695869956274692e-07, 2.2070112493111083e-07, 5.983382038721174e-07, 7.598142559572807e-08, 3.276760196513351e-07, 2.5371068090862536e-07, 5.5209230964692324e-08, 1.1969783599852235e-06, 0.1311163455247879, 8.836358347252826e-07, 5.440320478555805e-07, 0.002534730825573206, 8.137465556501411e-06, 0.00015000520215835422]], "pointer": [[0.0, 0.0, 0.0015948083018884063, 0.0, 0.14262723922729492, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.09090612828731537, 0.0, 0.19560781121253967, 0.0, 0.0, 0.0001385382638545707, 0.0, 0.0, 0.0, 0.0, 0.0, 0.08632417023181915, 0.0, 0.0018468281487002969, 0.0, 0.0014449626905843616, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0023539166431874037, 0.0, 0.0033349553123116493, 0.0, 0.0, 0.0, 0.0, 0.032167948782444, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.01475264597684145, 0.0, 0.0064444164745509624, 0.0, 0.0, 0.007491619326174259, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.004404288716614246, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.08738221973180771, 0.0, 0.0, 0.0, 0.16641341149806976, 0.0, 0.0, 0.0, 0.0, 0.0, 0.008351891301572323, 0.0, 0.0, 0.0, 0.0, 0.0, 0.06991421431303024, 0.0, 0.0, 0.0, 0.0005174113903194666, 0.0, 0.0, 0.0, 0.0, 0.0, 0.003341275965794921, 0.0, 0.0, 0.07263926416635513, 0.0, 0.0]], "target": [0.0]}, "loss": [0.25017789006233215, 0.0], "acc": [1.0, 0.0, 0.0, 0.0]}}


All source tokens:

['#NEWLINE#', 'def _parsePayload(', 'self', ',', 'data', ')', ':', '#NEWLINE#', '#INDENT#', '"Parse data and extract this cell\'s fields.\\n\\n        Fill in this cell\'s attributes.\\n\\n        :param str data: bytes to parse\\n        "', '#NEWLINE#', '(', 'start', ',', 'end', ')', '=', 'self', '.', 'payloadRange', '(', ')', '#NEWLINE#', 'offset', '=', 'start', '#NEWLINE#', 'self', '.', 'versions', '=', '[', ']', '#NEWLINE#', 'while', '(', 'offset', '<', 'end', ')', ':', '#NEWLINE#', '#INDENT#', 'v', '=', 'struct', '.', 'unpack', '(', "'!H'", ',', 'data', '[', 'offset', ':', '(', 'offset', '+', 'VERSIONS_LEN', ')', ']', ')', '[', '0', ']', '#NEWLINE#', 'if', '(', 'v', 'not in', 'CONN_DEFS', '.', 'KNOWN_LINK_PROTOCOLS', ')', ':', '#NEWLINE#', '#INDENT#', 'msg', '=', "'VersionsCell claims to support an unknown Link '", '#NEWLINE#', 'msg', '+=', "'Protocol version {}.'", '.', 'format', '(', 'v', ')', '#NEWLINE#', 'raise', 'BadPayloadData', '(', 'msg', ')', '#NEWLINE#', '#UNINDENT#', 'self', '.', 'versions', '.', 'append', '(', 'v', ')', '#NEWLINE#', 'offset', '+=', 'VERSIONS_LEN']


All attention probs:

[0.012749368324875832, 0.009593083523213863, 0.042293328791856766, 0.014224119484424591, 0.025009507313370705, 0.01170357782393694, 0.009028683416545391, 0.009143603034317493, 0.008734093979001045, 0.014140085317194462, 0.012067713774740696, 0.011631323024630547, 0.020617732778191566, 0.010086728259921074, 0.018224555999040604, 0.009343979880213737, 0.007948925718665123, 0.01691860891878605, 0.005567119922488928, 0.007042669225484133, 0.007123738527297974, 0.005746857263147831, 0.007372519467025995, 0.019326798617839813, 0.005791516043245792, 0.0184343121945858, 0.005785632878541946, 0.013904940336942673, 0.0032412069849669933, 0.00557749206200242, 0.004775289446115494, 0.0062590898014605045, 0.0052811759524047375, 0.00597180612385273, 0.006480801850557327, 0.004179619252681732, 0.026739049702882767, 0.005516014527529478, 0.026758713647723198, 0.00508494907990098, 0.0043673282489180565, 0.005988969933241606, 0.007253477815538645, 0.01792769879102707, 0.006255391985177994, 0.009203214198350906, 0.0040428536012768745, 0.005115238018333912, 0.0037983509246259928, 0.004840003792196512, 0.0038266871124505997, 0.01921018771827221, 0.0036381431855261326, 0.023106984794139862, 0.0041990987956523895, 0.003748743562027812, 0.021094737574458122, 0.0039001263212412596, 0.006825529970228672, 0.003565742401406169, 0.004149661399424076, 0.003944683354347944, 0.003927682992070913, 0.0066960593685507774, 0.004097718745470047, 0.005851424764841795, 0.007395140826702118, 0.004569334909319878, 0.0221567302942276, 0.004869329277426004, 0.00725598307326436, 0.0029551219195127487, 0.004922134801745415, 0.003834141418337822, 0.004021236672997475, 0.0048284404911100864, 0.004253173712641001, 0.010937567800283432, 0.004441494587808847, 0.007859825156629086, 0.00609186477959156, 0.013426500372588634, 0.006534634158015251, 0.005323136691004038, 0.00312438840046525, 0.0064767696894705296, 0.005609027575701475, 0.01942754164338112, 0.00469636544585228, 0.006594870705157518, 0.006191914435476065, 0.005377248860895634, 0.004730502143502235, 0.021451245993375778, 0.0043900697492063046, 0.006788488011807203, 0.007672199048101902, 0.015464297495782375, 0.005543631501495838, 0.00675045745447278, 0.004257095046341419, 0.006445078179240227, 0.007826631888747215, 0.029646292328834534, 0.006418375298380852, 0.0076391734182834625, 0.013284718617796898, 0.0061357575468719006, 0.006385998800396919]


Top-k source tokens:

['self', 'v', 'end', 'offset', 'data', 'offset', 'v', 'msg', 'offset', 'start']


Top-k attention probs:

[0.042293328791856766, 0.029646292328834534, 0.026758713647723198, 0.026739049702882767, 0.025009507313370705, 0.023106984794139862, 0.0221567302942276, 0.021451245993375778, 0.021094737574458122, 0.020617732778191566]
