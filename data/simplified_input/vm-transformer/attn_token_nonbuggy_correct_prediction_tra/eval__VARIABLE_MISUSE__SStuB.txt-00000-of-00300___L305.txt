
Original sample:

{"has_bug": false, "bug_kind": 0, "bug_kind_name": "NONE", "source_tokens": ["#NEWLINE#", "def two_time_corr(", "labels", ",", "images", ",", "num_frames", ",", "num_bufs", ",", "num_levels", "=", "1", ")", ":", "#NEWLINE#", "#INDENT#", "'Wraps generator implementation of multi-tau two time correlation\\n\\n    This function computes two-time correlation\\n    Original code : author: Yugang Zhang\\n\\n    Returns\\n    -------\\n    results : namedtuple\\n\\n    For parameter definition, see the docstring for the `lazy_two_time()`\\n    function in this module\\n    '", "#NEWLINE#", "gen", "=", "lazy_two_time", "(", "labels", ",", "images", ",", "num_frames", ",", "num_bufs", ",", "num_levels", ")", "#NEWLINE#", "for", "result", "in", "gen", ":", "#NEWLINE#", "#INDENT#", "pass", "#NEWLINE#", "#UNINDENT#", "return", "two_time_state_to_results", "(", "result", ")"], "error_location": [0], "repair_targets": [], "repair_candidates": [19, 37, 10, 31, 8, 29, 6, 27, 2, 23, 35, 47, 4, 25], "provenances": [{"datasetProvenance": {"datasetName": "ETHPy150Open", "filepath": "scikit-beam/scikit-beam/skbeam/core/correlation.py", "license": "bsd-3-clause", "note": "license: manual_eval"}}], "txt_file": "eval__VARIABLE_MISUSE__SStuB.txt-00000-of-00300", "js_count": 305, "results": {"model": "transformer", "prob": {"loc": [[0.9968326687812805, 3.1207304118652246e-07, 2.2825742007626104e-07, 3.5736022141463764e-08, 3.5500320336723235e-06, 2.9104871401841592e-08, 1.595111456254017e-07, 1.9113453930685864e-08, 2.587230483186431e-07, 2.1452237319863343e-08, 3.406238704428688e-07, 2.6602799607644556e-07, 1.7382372163865512e-07, 1.9159736908136438e-08, 6.624853909897865e-08, 1.6008260672606411e-07, 8.494532011127376e-08, 1.5425621313625015e-07, 1.1702582014549989e-07, 1.9365472326171584e-05, 5.269136238439387e-08, 7.888557362889514e-09, 1.9121776517749822e-07, 0.002132519381120801, 8.811600196168001e-07, 8.570333739044145e-05, 1.0310236575605813e-06, 0.000330099108396098, 6.87521549025405e-07, 1.3481298083206639e-05, 5.749905085394857e-07, 5.721342677134089e-05, 4.676878688769648e-07, 2.1697795205000148e-07, 2.0765135104738874e-06, 8.247316714005137e-07, 4.325725200260422e-08, 0.00015592096315231174, 3.930942114038771e-07, 3.674356889860064e-07, 2.477621023899701e-07, 6.094903710618382e-07, 7.001155495345301e-07, 4.809240863323794e-07, 2.287327660610572e-08, 1.2455189768445507e-08, 1.1844210945355371e-07, 0.000353710085619241, 3.2363323043682612e-06]], "pointer": [[0.0, 0.0, 0.4260762929916382, 0.0, 0.12841439247131348, 0.0, 0.1111060082912445, 0.0, 0.05512215942144394, 0.0, 0.07147559523582458, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.11334779858589172, 0.0, 0.0, 0.0, 6.897949788253754e-05, 0.0, 0.0004551722959149629, 0.0, 0.0002621538587845862, 0.0, 0.0011442319955676794, 0.0, 0.00024974136613309383, 0.0, 0.0, 0.0, 0.09195450693368912, 0.0, 0.00011077915405621752, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.00021211712737567723, 0.0]], "target": [0.0]}, "loss": [0.003172010648995638, 0.0], "acc": [1.0, 0.0, 0.0, 0.0]}}


All source tokens:

['#NEWLINE#', 'def two_time_corr(', 'labels', ',', 'images', ',', 'num_frames', ',', 'num_bufs', ',', 'num_levels', '=', '1', ')', ':', '#NEWLINE#', '#INDENT#', "'Wraps generator implementation of multi-tau two time correlation\\n\\n    This function computes two-time correlation\\n    Original code : author: Yugang Zhang\\n\\n    Returns\\n    -------\\n    results : namedtuple\\n\\n    For parameter definition, see the docstring for the `lazy_two_time()`\\n    function in this module\\n    '", '#NEWLINE#', 'gen', '=', 'lazy_two_time', '(', 'labels', ',', 'images', ',', 'num_frames', ',', 'num_bufs', ',', 'num_levels', ')', '#NEWLINE#', 'for', 'result', 'in', 'gen', ':', '#NEWLINE#', '#INDENT#', 'pass', '#NEWLINE#', '#UNINDENT#', 'return', 'two_time_state_to_results', '(', 'result', ')']


All attention probs:

[0.026014812290668488, 0.02020426094532013, 0.04089481383562088, 0.021161500364542007, 0.04325593635439873, 0.01891419291496277, 0.04353972524404526, 0.01710742525756359, 0.032194774597883224, 0.01815660297870636, 0.04014340788125992, 0.017532283440232277, 0.022913582623004913, 0.011025022715330124, 0.013267516158521175, 0.0148747144266963, 0.012283151037991047, 0.01440682727843523, 0.014451779425144196, 0.03675290569663048, 0.015352629125118256, 0.014023929834365845, 0.012127101421356201, 0.02935432270169258, 0.009853393770754337, 0.02909194864332676, 0.008972681127488613, 0.03012072667479515, 0.009198915213346481, 0.028448637574911118, 0.010735245421528816, 0.029540996998548508, 0.012642870657145977, 0.017582686617970467, 0.017277531325817108, 0.03379867970943451, 0.013450787402689457, 0.030759403482079506, 0.012518874369561672, 0.012450754642486572, 0.01049130130559206, 0.01672559790313244, 0.017528871074318886, 0.013866006396710873, 0.015636887401342392, 0.016699688509106636, 0.01179590541869402, 0.028317883610725403, 0.012540512718260288]


Top-k source tokens:

['num_frames', 'images', 'labels', 'num_levels', 'gen', 'result', 'num_bufs', 'gen', 'num_frames', 'num_levels']


Top-k attention probs:

[0.04353972524404526, 0.04325593635439873, 0.04089481383562088, 0.04014340788125992, 0.03675290569663048, 0.03379867970943451, 0.032194774597883224, 0.030759403482079506, 0.03012072667479515, 0.029540996998548508]
