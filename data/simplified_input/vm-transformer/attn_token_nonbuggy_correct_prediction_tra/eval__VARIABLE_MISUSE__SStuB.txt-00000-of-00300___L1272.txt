
Original sample:

{"has_bug": false, "bug_kind": 0, "bug_kind_name": "NONE", "source_tokens": ["#NEWLINE#", "def testCursorBasics(", "self", ")", ":", "#NEWLINE#", "#INDENT#", "with", "tdrest", ".", "connect", "(", "host", "=", "host", ",", "system", "=", "system", ",", "username", "=", "self", ".", "username", ",", "password", "=", "self", ".", "password", ")", "as", "conn", ":", "#NEWLINE#", "#INDENT#", "self", ".", "assertIsNotNone", "(", "conn", ")", "#NEWLINE#", "cursor", "=", "conn", ".", "cursor", "(", ")", "#NEWLINE#", "count", "=", "0", "#NEWLINE#", "for", "row", "in", "cursor", ".", "execute", "(", "'SELECT * FROM DBC.DBCInfo'", ")", ":", "#NEWLINE#", "#INDENT#", "self", ".", "assertEqual", "(", "len", "(", "row", ")", ",", "2", ")", "#NEWLINE#", "self", ".", "assertIsNotNone", "(", "row", "[", "0", "]", ")", "#NEWLINE#", "self", ".", "assertIsNotNone", "(", "row", "[", "'InfoKey'", "]", ")", "#NEWLINE#", "self", ".", "assertIsNotNone", "(", "row", "[", "'infokey'", "]", ")", "#NEWLINE#", "self", ".", "assertIsNotNone", "(", "row", ".", "InfoKey", ")", "#NEWLINE#", "self", ".", "assertIsNotNone", "(", "row", ".", "infokey", ")", "#NEWLINE#", "self", ".", "assertIsNotNone", "(", "row", "[", "1", "]", ")", "#NEWLINE#", "self", ".", "assertIsNotNone", "(", "row", "[", "'InfoData'", "]", ")", "#NEWLINE#", "self", ".", "assertIsNotNone", "(", "row", "[", "'infodata'", "]", ")", "#NEWLINE#", "self", ".", "assertIsNotNone", "(", "row", ".", "infodata", ")", "#NEWLINE#", "self", ".", "assertIsNotNone", "(", "row", ".", "InfoData", ")", "#NEWLINE#", "row", "[", "0", "]", "=", "'test1'", "#NEWLINE#", "self", ".", "assertEqual", "(", "row", "[", "0", "]", ",", "'test1'", ")", "#NEWLINE#", "self", ".", "assertEqual", "(", "row", "[", "'InfoKey'", "]", ",", "'test1'", ")", "#NEWLINE#", "self", ".", "assertEqual", "(", "row", ".", "infokey", ",", "'test1'", ")", "#NEWLINE#", "row", "[", "'infokey'", "]", "=", "'test2'", "#NEWLINE#", "self", ".", "assertEqual", "(", "row", "[", "0", "]", ",", "'test2'", ")", "#NEWLINE#", "self", ".", "assertEqual", "(", "row", "[", "'InfoKey'", "]", ",", "'test2'", ")", "#NEWLINE#", "self", ".", "assertEqual", "(", "row", ".", "infokey", ",", "'test2'", ")", "#NEWLINE#", "row", ".", "infokey", "=", "'test3'", "#NEWLINE#", "self", ".", "assertEqual", "(", "row", "[", "0", "]", ",", "'test3'", ")", "#NEWLINE#", "self", ".", "assertEqual", "(", "row", "[", "'InfoKey'", "]", ",", "'test3'", ")", "#NEWLINE#", "self", ".", "assertEqual", "(", "row", ".", "InfoKey", ",", "'test3'", ")", "#NEWLINE#", "count", "+=", "1", "#NEWLINE#", "#UNINDENT#", "self", ".", "assertEqual", "(", "cursor", ".", "description", "[", "0", "]", "[", "0", "]", ",", "'InfoKey'", ")", "#NEWLINE#", "self", ".", "assertEqual", "(", "cursor", ".", "description", "[", "0", "]", "[", "1", "]", ",", "tdrest", ".", "STRING", ")", "#NEWLINE#", "self", ".", "assertEqual", "(", "cursor", ".", "description", "[", "1", "]", "[", "0", "]", ",", "'InfoData'", ")", "#NEWLINE#", "self", ".", "assertEqual", "(", "cursor", ".", "description", "[", "1", "]", "[", "1", "]", ",", "tdrest", ".", "STRING", ")", "#NEWLINE#", "self", ".", "assertEqual", "(", "count", ",", "3", ")"], "error_location": [0], "repair_targets": [], "repair_candidates": [52, 301, 382, 33, 41, 46, 2, 22, 28, 37, 68, 80, 90, 100, 110, 119, 128, 138, 148, 158, 167, 183, 195, 207, 225, 237, 249, 266, 278, 290, 306, 323, 342, 359, 378, 57, 74, 84, 94, 104, 114, 123, 132, 142, 152, 162, 171, 176, 187, 199, 211, 218, 229, 241, 253, 260, 270, 282, 294, 44, 48, 59, 310, 327, 346, 363], "provenances": [{"datasetProvenance": {"datasetName": "ETHPy150Open", "filepath": "Teradata/PyTd/test/test_tdrest.py", "license": "mit", "note": "license: manual_eval"}}], "txt_file": "eval__VARIABLE_MISUSE__SStuB.txt-00000-of-00300", "js_count": 1272, "results": {"model": "transformer", "prob": {"loc": [[0.9621059894561768, 1.2180252042526263e-06, 2.5466997044532036e-07, 1.2686237838011039e-08, 1.6237926558915206e-08, 1.7153874765085675e-08, 1.0461461918964687e-08, 4.864771696588832e-09, 1.4113354929179422e-08, 2.2140326905173424e-08, 1.3488141803463805e-07, 1.1235296426548302e-07, 5.608970923276502e-07, 1.6342583819550782e-07, 2.1141211448139074e-07, 1.0331421052001133e-08, 2.2346524986005534e-07, 4.4610697358393736e-08, 7.466081228812982e-07, 9.926329980203263e-09, 4.69543763870206e-08, 3.5109767537733205e-08, 4.038842234876938e-05, 4.771418105065095e-08, 9.087168351129549e-09, 9.505704667844839e-09, 1.9587826916023232e-09, 5.630077382079435e-08, 1.470801180403214e-05, 5.009739822980919e-08, 1.0837850616951528e-09, 1.093069457169804e-08, 8.350382785238253e-08, 1.5553565901882394e-07, 3.499356893144068e-08, 1.3729056114186733e-08, 7.764251463981964e-09, 1.345912181704989e-08, 1.0737548628014792e-08, 1.2373513769148303e-08, 7.579653527045593e-08, 0.0004660051199607551, 5.954821347131656e-08, 5.2543192907705816e-08, 5.235819457993784e-07, 1.7703225552168078e-08, 1.5049313333292957e-06, 3.515707547308011e-08, 5.077792053498342e-08, 1.6336630892510584e-07, 2.916972334787715e-07, 4.700464728557563e-08, 5.653620291923289e-07, 4.384667207091297e-08, 8.894876373233274e-07, 5.544165659898681e-08, 5.6059036523947725e-08, 6.820517342021049e-07, 2.8198039458970925e-08, 1.8848464833354228e-07, 4.2568146341182e-08, 2.4058872227783468e-08, 2.986510878599802e-07, 1.7263216989249486e-07, 1.7634913973552102e-08, 1.5793753505022323e-07, 5.0344244328925924e-08, 2.9150630354024543e-08, 3.244980106842377e-08, 1.1279135847530597e-08, 8.857333533285328e-09, 5.33509876277094e-08, 3.336620579830196e-08, 1.7055243972663447e-07, 7.395528518827632e-05, 3.788075986221884e-08, 4.8897888405008416e-08, 9.109876941693074e-07, 1.3303161949806963e-07, 7.580434413512194e-08, 2.6518879536752138e-08, 3.1229355101913825e-08, 3.173906293341133e-08, 1.273084535569069e-07, 6.267531716730446e-05, 2.5444990114920074e-06, 3.8812763136775175e-07, 1.58075565082072e-07, 1.4603226361487032e-07, 1.271558147664109e-07, 2.9241903121146606e-08, 3.145466820342335e-08, 2.5438293249635535e-08, 6.630074267377495e-07, 0.00010125567496288568, 1.3187867580199963e-06, 1.374032763123978e-07, 1.7294888721153256e-07, 1.582066317951103e-07, 1.1599218652236232e-07, 3.044321417178253e-08, 2.0330052308281665e-08, 5.1746749107906e-08, 1.0127525911229895e-06, 0.00010497221956029534, 1.3243496823633905e-06, 1.2948369487730815e-07, 1.1354732976087689e-07, 1.1901973806516253e-07, 6.856938483679187e-08, 3.552905170067788e-08, 3.2548612693972245e-08, 2.5487782551181226e-08, 1.7233361404578318e-07, 0.00031256681540980935, 2.151197691091511e-07, 2.2589679815609998e-07, 1.3319487379703787e-07, 1.2035393126552663e-07, 4.196209957285646e-08, 3.689120120498046e-08, 3.6521822011081895e-08, 3.685046863211028e-07, 0.0004694612289313227, 2.2687656553443958e-07, 3.205162713015852e-08, 1.0953208828823335e-07, 6.404340524568397e-08, 3.316412389153811e-08, 1.8820379921180574e-08, 5.995530472091559e-08, 4.982954351362423e-07, 8.238582267949823e-06, 2.6221559323857946e-07, 1.786149397275949e-07, 6.827561094269186e-08, 7.759607001389668e-08, 4.6518827900854376e-08, 2.5045819640467926e-08, 1.714772501770767e-08, 2.6418160103958144e-08, 2.7771525878961256e-07, 1.585095924383495e-05, 3.2756830137259385e-07, 1.2374015057048382e-07, 6.610510894233812e-08, 5.590292673218755e-08, 5.255401802628512e-08, 2.7641569033676205e-08, 1.4889821819963345e-08, 3.3626811557496694e-08, 4.5584735630654905e-07, 2.115880124620162e-05, 2.0125314392771543e-07, 4.4596657033935116e-08, 5.019868964950547e-08, 5.136256220339419e-08, 3.074137566727586e-08, 3.3534636401100215e-08, 1.9331000800093534e-08, 2.6610535996951512e-08, 1.553118380570595e-07, 0.00023937373771332204, 1.810324192774715e-07, 3.2044800946096075e-07, 6.43969215730067e-08, 3.991995356500411e-08, 7.348862851586091e-08, 2.9211468799417162e-08, 1.477645561465124e-08, 7.175549399107695e-07, 0.0001294067333219573, 1.7257454487662471e-07, 4.4676070842797344e-07, 4.097848105288904e-08, 5.749778253516524e-08, 3.375897222213098e-06, 4.0684792423917315e-08, 1.5408056697197026e-07, 1.1404800659420289e-08, 1.3423593259176414e-07, 5.135391347721452e-07, 4.2231725672081666e-08, 1.0994159538313397e-07, 2.0024600644319435e-08, 7.686627334635432e-09, 3.293192492037633e-07, 3.1728395697427914e-05, 2.763857480658771e-07, 1.5421906596202462e-07, 3.342097798508803e-08, 3.365735423699334e-08, 1.03010211205401e-06, 6.59866969954237e-08, 2.8527217921237025e-08, 4.921574259242334e-08, 1.5675245990109943e-08, 7.0746786207109835e-09, 1.0481620194013885e-07, 5.2993069402873516e-05, 7.505781809413747e-07, 1.1882465855705959e-07, 6.024624354949992e-08, 4.8360760729337926e-08, 1.0345776217945968e-06, 7.460035078565852e-08, 2.2159929002896206e-08, 2.214404304368145e-08, 1.692162321376145e-08, 5.208060205319498e-09, 3.64637031680104e-08, 0.0002089217014145106, 1.5500553729452804e-07, 6.388697126880061e-09, 2.4035710310954528e-08, 8.684618251209031e-07, 8.946067708848204e-08, 3.8657152146015505e-08, 1.5359313465523883e-06, 3.247836559694406e-07, 1.7721579581575497e-07, 3.9804003648669095e-08, 1.554250417257208e-07, 5.319001843417936e-07, 2.172112267828652e-08, 4.148270136283827e-07, 1.2508437841063369e-08, 3.5677070187034587e-09, 2.789469135677791e-07, 0.00011838518548756838, 3.5115073160341126e-07, 2.5833355721260887e-07, 6.202684232903266e-08, 7.784659317167097e-08, 2.1281407498463523e-06, 8.350446734084471e-08, 6.015334008679929e-08, 4.01563831076146e-08, 1.774714242230857e-08, 2.133214316302201e-08, 2.3656471626054554e-07, 0.0001631271152291447, 2.3862837679189397e-06, 3.350352528741496e-07, 1.686585591187395e-07, 1.296605205425294e-07, 2.036496425716905e-06, 7.085674269546871e-08, 4.3550365091959975e-08, 6.336081526114867e-08, 1.767431179189316e-08, 1.2469419274907523e-08, 1.1290522934359615e-06, 0.0015185896772891283, 1.7668574514573265e-07, 1.1390778986708483e-08, 7.005221647204962e-08, 4.350881681602914e-06, 9.204310202903798e-08, 8.768201098519057e-08, 9.071544809557963e-06, 5.059413865637907e-08, 9.822311852758503e-09, 3.9631004256079905e-07, 6.180173954817292e-07, 6.98322324410583e-08, 5.0094147496793084e-08, 4.316499513379313e-08, 5.325887286744546e-08, 4.983648409506714e-07, 0.001165619003586471, 2.419977590761846e-06, 9.062313779395481e-07, 1.7896634574299242e-07, 1.5967935951266554e-07, 1.0078176728711696e-06, 1.3587838054718304e-07, 6.60446133338155e-08, 5.7514011331250003e-08, 3.2851168896286254e-08, 1.9713510823748948e-08, 1.0531604175412212e-06, 0.0018586906371638179, 2.8930583084729733e-07, 2.870508524210891e-07, 9.226544506191203e-08, 1.0134188244137476e-07, 7.115684184100246e-07, 9.829626179680417e-08, 7.015182745817583e-08, 4.672949671657989e-08, 1.70526828213724e-08, 1.268664906461936e-08, 1.647655807346382e-07, 0.019150199368596077, 1.4400468728581473e-07, 2.4646294605190633e-07, 1.3526013731279818e-07, 1.06899062757293e-06, 1.2724387943308102e-07, 8.747588253754657e-08, 2.6730784156825393e-05, 2.7958262194260897e-07, 2.184972800023388e-06, 7.832766613091735e-08, 5.803545732874227e-08, 8.365670822740867e-08, 5.997017638037505e-08, 3.3734476545532743e-08, 4.916951183986384e-07, 0.00044306277413852513, 1.95443689676722e-07, 1.9635446335541928e-07, 2.0100148390156392e-07, 8.190320386347594e-07, 8.73461658557062e-08, 2.2362175400303386e-07, 1.6803988955871318e-06, 1.4866148490000342e-07, 1.3951343191820342e-07, 1.2259965842531528e-06, 1.0239243408705079e-07, 8.067267742717377e-08, 1.341455941883396e-07, 4.7012356674258626e-08, 3.212090859960881e-08, 8.406534561800072e-07, 0.0005199391744099557, 1.7266937391013926e-07, 3.210249133189791e-07, 4.50350142955358e-07, 2.3459697331418283e-06, 1.7071778302124585e-07, 5.820776891596324e-07, 2.77542790172447e-06, 2.6743504122350714e-07, 2.1971811747789616e-07, 0.00012551253894343972, 3.637237568909768e-07, 5.279003971736529e-07, 1.2629580226075632e-07, 7.533876100751513e-08, 1.566085074955481e-07, 5.176708484100345e-08, 1.544636063499638e-08, 1.0253593245579395e-06, 0.00034798390697687864, 2.729262007505895e-07, 1.8997654649410833e-07, 1.7358208026507782e-07, 9.991512115448131e-07, 1.1513716913214012e-07, 4.794130745722214e-07, 1.9081223854300333e-06, 1.4922098046099563e-07, 1.3408867971520522e-07, 1.1096561820522766e-06, 1.4402321824036335e-07, 1.4831610428700515e-07, 2.981863360673742e-07, 1.408182015438797e-07, 1.2741705290864047e-07, 1.054573544934101e-06, 0.0010821622563526034, 6.27288955001859e-07, 1.8549409332990763e-06, 7.662541179342952e-07, 2.3570212306367466e-06, 2.4986593416542746e-07, 1.2685379715549061e-06, 1.8598190081320354e-06, 1.9174355259110598e-07, 1.552218122924387e-07, 0.00010924672096734866, 1.6974193783880764e-07, 1.9114214921955863e-07, 1.2589656250838743e-07, 1.3918730701334425e-07, 3.0082298962952336e-07, 4.064422753913277e-08, 2.7144698933057043e-08, 4.829195859201718e-06, 0.00878426805138588, 2.217638837009872e-07, 7.639931936864741e-06, 1.731817746986053e-07]], "pointer": [[0.0, 0.0, 0.002671223133802414, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.00042957536061294377, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0005769830895587802, 0.0, 0.0, 0.0, 0.0, 0.016618162393569946, 0.0, 0.0, 0.0, 9.94250331132207e-06, 0.0, 0.0, 0.0, 5.6491389841539785e-05, 0.0, 0.0, 0.004830651916563511, 0.0, 1.957756649062503e-05, 0.0, 0.00022688352328259498, 0.0, 0.0, 0.0, 0.015053259208798409, 0.0, 0.0, 0.0, 0.0, 0.02054276131093502, 0.0, 2.3262111426447518e-05, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 2.126270192093216e-05, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0004059813218191266, 0.0, 0.0, 0.0, 0.0, 0.0, 1.5233668818837032e-05, 0.0, 0.0, 0.0, 0.0012807724997401237, 0.0, 0.0, 0.0, 0.0, 0.0, 3.2626776373945177e-05, 0.0, 0.0, 0.0, 0.002415124326944351, 0.0, 0.0, 0.0, 0.0, 0.0, 1.7085532817873172e-05, 0.0, 0.0, 0.0, 0.0007646131562069058, 0.0, 0.0, 0.0, 0.0, 0.0, 1.3366259736358188e-05, 0.0, 0.0, 0.0, 0.01941722445189953, 0.0, 0.0, 0.0, 0.0, 2.8340957214822993e-05, 0.0, 0.0, 0.0, 0.01463851984590292, 0.0, 0.0, 0.0, 0.0, 2.3070255338097923e-05, 0.0, 0.0, 0.0, 0.0010941787622869015, 0.0, 0.0, 0.0, 0.0, 0.0, 1.3788996511721052e-05, 0.0, 0.0, 0.0, 0.001158004393801093, 0.0, 0.0, 0.0, 0.0, 0.0, 1.98171674128389e-05, 0.0, 0.0, 0.0, 0.002848654054105282, 0.0, 0.0, 0.0, 0.0, 0.0, 8.654325029056054e-06, 0.0, 0.0, 0.0, 0.018470315262675285, 0.0, 0.0, 0.0, 0.0, 8.932850505516399e-06, 0.0, 0.0, 0.0, 0.009967365302145481, 0.0, 0.0, 0.0, 0.0, 0.0013750605285167694, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 5.627426799037494e-05, 0.0, 0.0, 0.0, 0.003623351687565446, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.8399772670818493e-05, 0.0, 0.0, 0.0, 0.0022791102528572083, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 2.38057182286866e-05, 0.0, 0.0, 0.0, 0.030789172276854515, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.002929526148363948, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 3.185684545314871e-05, 0.0, 0.0, 0.0, 0.0071573941968381405, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 2.703263635339681e-05, 0.0, 0.0, 0.0, 0.01131997536867857, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 3.684819967020303e-05, 0.0, 0.0, 0.0, 0.04881991073489189, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.008600834757089615, 0.0, 0.0, 0.0, 0.0, 0.0, 4.5682816562475637e-05, 0.0, 0.0, 0.0, 0.07407601922750473, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.4615996406064369e-05, 0.0, 0.0, 0.0, 0.13713254034519196, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 3.1832154490984976e-05, 0.0, 0.0, 0.0, 0.010006087832152843, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.014857352711260319, 0.0, 0.0, 0.0, 0.0, 3.0922274163458496e-05, 0.0, 0.0, 0.0, 0.15452954173088074, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 6.07567562838085e-05, 0.0, 0.0, 0.0, 0.08559199422597885, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 5.9672380302799866e-05, 0.0, 0.0, 0.0, 0.062100473791360855, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.00014862797979731113, 0.0, 0.0, 0.0, 0.20446115732192993, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.00016549858264625072, 0.0, 0.0, 0.0, 0.005876963492482901, 0.0, 0.0, 0.0]], "target": [0.0]}, "loss": [0.0386306457221508, 0.0], "acc": [1.0, 0.0, 0.0, 0.0]}}


All source tokens:

['#NEWLINE#', 'def testCursorBasics(', 'self', ')', ':', '#NEWLINE#', '#INDENT#', 'with', 'tdrest', '.', 'connect', '(', 'host', '=', 'host', ',', 'system', '=', 'system', ',', 'username', '=', 'self', '.', 'username', ',', 'password', '=', 'self', '.', 'password', ')', 'as', 'conn', ':', '#NEWLINE#', '#INDENT#', 'self', '.', 'assertIsNotNone', '(', 'conn', ')', '#NEWLINE#', 'cursor', '=', 'conn', '.', 'cursor', '(', ')', '#NEWLINE#', 'count', '=', '0', '#NEWLINE#', 'for', 'row', 'in', 'cursor', '.', 'execute', '(', "'SELECT * FROM DBC.DBCInfo'", ')', ':', '#NEWLINE#', '#INDENT#', 'self', '.', 'assertEqual', '(', 'len', '(', 'row', ')', ',', '2', ')', '#NEWLINE#', 'self', '.', 'assertIsNotNone', '(', 'row', '[', '0', ']', ')', '#NEWLINE#', 'self', '.', 'assertIsNotNone', '(', 'row', '[', "'InfoKey'", ']', ')', '#NEWLINE#', 'self', '.', 'assertIsNotNone', '(', 'row', '[', "'infokey'", ']', ')', '#NEWLINE#', 'self', '.', 'assertIsNotNone', '(', 'row', '.', 'InfoKey', ')', '#NEWLINE#', 'self', '.', 'assertIsNotNone', '(', 'row', '.', 'infokey', ')', '#NEWLINE#', 'self', '.', 'assertIsNotNone', '(', 'row', '[', '1', ']', ')', '#NEWLINE#', 'self', '.', 'assertIsNotNone', '(', 'row', '[', "'InfoData'", ']', ')', '#NEWLINE#', 'self', '.', 'assertIsNotNone', '(', 'row', '[', "'infodata'", ']', ')', '#NEWLINE#', 'self', '.', 'assertIsNotNone', '(', 'row', '.', 'infodata', ')', '#NEWLINE#', 'self', '.', 'assertIsNotNone', '(', 'row', '.', 'InfoData', ')', '#NEWLINE#', 'row', '[', '0', ']', '=', "'test1'", '#NEWLINE#', 'self', '.', 'assertEqual', '(', 'row', '[', '0', ']', ',', "'test1'", ')', '#NEWLINE#', 'self', '.', 'assertEqual', '(', 'row', '[', "'InfoKey'", ']', ',', "'test1'", ')', '#NEWLINE#', 'self', '.', 'assertEqual', '(', 'row', '.', 'infokey', ',', "'test1'", ')', '#NEWLINE#', 'row', '[', "'infokey'", ']', '=', "'test2'", '#NEWLINE#', 'self', '.', 'assertEqual', '(', 'row', '[', '0', ']', ',', "'test2'", ')', '#NEWLINE#', 'self', '.', 'assertEqual', '(', 'row', '[', "'InfoKey'", ']', ',', "'test2'", ')', '#NEWLINE#', 'self', '.', 'assertEqual', '(', 'row', '.', 'infokey', ',', "'test2'", ')', '#NEWLINE#', 'row', '.', 'infokey', '=', "'test3'", '#NEWLINE#', 'self', '.', 'assertEqual', '(', 'row', '[', '0', ']', ',', "'test3'", ')', '#NEWLINE#', 'self', '.', 'assertEqual', '(', 'row', '[', "'InfoKey'", ']', ',', "'test3'", ')', '#NEWLINE#', 'self', '.', 'assertEqual', '(', 'row', '.', 'InfoKey', ',', "'test3'", ')', '#NEWLINE#', 'count', '+=', '1', '#NEWLINE#', '#UNINDENT#', 'self', '.', 'assertEqual', '(', 'cursor', '.', 'description', '[', '0', ']', '[', '0', ']', ',', "'InfoKey'", ')', '#NEWLINE#', 'self', '.', 'assertEqual', '(', 'cursor', '.', 'description', '[', '0', ']', '[', '1', ']', ',', 'tdrest', '.', 'STRING', ')', '#NEWLINE#', 'self', '.', 'assertEqual', '(', 'cursor', '.', 'description', '[', '1', ']', '[', '0', ']', ',', "'InfoData'", ')', '#NEWLINE#', 'self', '.', 'assertEqual', '(', 'cursor', '.', 'description', '[', '1', ']', '[', '1', ']', ',', 'tdrest', '.', 'STRING', ')', '#NEWLINE#', 'self', '.', 'assertEqual', '(', 'count', ',', '3', ')']


All attention probs:

[0.010578734800219536, 0.008258963003754616, 0.03366447240114212, 0.009241458959877491, 0.0072512077167630196, 0.005979382898658514, 0.004930021706968546, 0.00843527726829052, 0.007071877364069223, 0.004174721892923117, 0.007121980655938387, 0.006376198958605528, 0.007692989427596331, 0.006652679294347763, 0.00977862998843193, 0.004959357436746359, 0.006030256859958172, 0.004377259407192469, 0.008987275883555412, 0.0044594453647732735, 0.006421711761504412, 0.004237499553710222, 0.011759044602513313, 0.0033117937855422497, 0.003225260181352496, 0.003095154417678714, 0.0034420304000377655, 0.0025843533221632242, 0.008834416046738625, 0.00262221647426486, 0.002486923709511757, 0.0029231300577521324, 0.003739298554137349, 0.006705048028379679, 0.002848732750862837, 0.002545817056670785, 0.0026981851551681757, 0.004563772585242987, 0.0029711180832237005, 0.0038733938708901405, 0.004282379988580942, 0.011106031946837902, 0.0033383555710315704, 0.0030978755094110966, 0.007838631980121136, 0.003864045487716794, 0.0032943785190582275, 0.0016376737039536238, 0.0021113611292093992, 0.002586456248536706, 0.0019124274840578437, 0.0018433332443237305, 0.007681261748075485, 0.0015983855118975043, 0.002400726545602083, 0.0018487866036593914, 0.0018649385310709476, 0.019834578037261963, 0.002296817023307085, 0.0036425741855055094, 0.001295949099585414, 0.0014262560289353132, 0.0015472249360755086, 0.0019022912019863725, 0.001360013848170638, 0.001458530081436038, 0.001815591473132372, 0.0019526154501363635, 0.003069775877520442, 0.0010905131930485368, 0.001963498070836067, 0.0016186960274353623, 0.0017595818499103189, 0.001968309748917818, 0.005094589199870825, 0.0010868741665035486, 0.0011589344358071685, 0.002822713227942586, 0.0010018793400377035, 0.0018405892187729478, 0.002569266129285097, 0.0009761414839886129, 0.0011534952791407704, 0.0011992633808404207, 0.0029908516444265842, 0.0013755776453763247, 0.0021200592163950205, 0.0016043694922700524, 0.0013149055885151029, 0.0016761873848736286, 0.002330030780285597, 0.0009208324481733143, 0.0012050328077748418, 0.0012664601672440767, 0.003971004858613014, 0.0014821443473920226, 0.002122618490830064, 0.0012436732649803162, 0.001072343555279076, 0.0017048323061317205, 0.002315833466127515, 0.0008810387225821614, 0.0014770202105864882, 0.0019889960531145334, 0.003918784204870462, 0.0014344408409669995, 0.0016611125320196152, 0.0010190214961767197, 0.0007631219341419637, 0.0017501008696854115, 0.00226775323972106, 0.001225832267664373, 0.0014866951387375593, 0.00125939364079386, 0.0065998234786093235, 0.0009012127411551774, 0.0014228099025785923, 0.0009470994700677693, 0.0017734554130584002, 0.0023354063741862774, 0.0010200819233432412, 0.0012948754010722041, 0.001444901805371046, 0.008902227506041527, 0.001212108414620161, 0.001750576077029109, 0.0013680080883204937, 0.00212474400177598, 0.002325304551050067, 0.0008648835937492549, 0.0013148513389751315, 0.001346886856481433, 0.0032240478321909904, 0.001217117183841765, 0.0019359495490789413, 0.001008020481094718, 0.0007241478306241333, 0.0017441072268411517, 0.0018879615236073732, 0.0007732132798992097, 0.0012544664787128568, 0.0012438124977052212, 0.0036364072002470493, 0.001245636958628893, 0.0015556131256744266, 0.001094370847567916, 0.000868472212459892, 0.0016414567362517118, 0.002363665262237191, 0.0009612139547243714, 0.001352158491499722, 0.001450486946851015, 0.005738412961363792, 0.0015417896211147308, 0.0013639056123793125, 0.0014211677480489016, 0.0011380750220268965, 0.0018356802174821496, 0.0027588645461946726, 0.0010406458750367165, 0.0013748089550063014, 0.0013603760162368417, 0.006689354311674833, 0.0010249958140775561, 0.001718750805594027, 0.0008054369245655835, 0.0016720740823075175, 0.002593015320599079, 0.0008828719146549702, 0.0010647028684616089, 0.0014433154137805104, 0.006316276732832193, 0.0011074248468503356, 0.0023021178785711527, 0.0010128819849342108, 0.001786914304830134, 0.0038477061316370964, 0.0017426828853785992, 0.001765481079928577, 0.001213148469105363, 0.001417804858647287, 0.0016015972942113876, 0.001692349324002862, 0.0028803464956581593, 0.001173099735751748, 0.0016726917820051312, 0.0019184817792847753, 0.0045836265198886395, 0.002155730500817299, 0.0025350458454340696, 0.0016886469675228, 0.0015506109921261668, 0.002167245838791132, 0.0013984335819259286, 0.0020915099885314703, 0.002639945363625884, 0.0010747938649728894, 0.0014346219832077622, 0.0014317877357825637, 0.004684263374656439, 0.0012037389678880572, 0.0012530279345810413, 0.0010217640083283186, 0.0009781962726265192, 0.001396087114699185, 0.0010997322387993336, 0.001738505088724196, 0.0023669209331274033, 0.0009149243123829365, 0.001213760580867529, 0.0013438325840979815, 0.007485071197152138, 0.0011214475380256772, 0.0016834941925480962, 0.0011929413303732872, 0.001545963459648192, 0.0011151108192279935, 0.0018686739495024085, 0.0029177390970289707, 0.0014910119352862239, 0.0017234896076843143, 0.001255417475476861, 0.0012442052830010653, 0.002097891643643379, 0.001972306054085493, 0.0027892347425222397, 0.0011049412423744798, 0.0015099950833246112, 0.001417313702404499, 0.004192931577563286, 0.0011724886717274785, 0.0017009119037538767, 0.0009639833588153124, 0.0009228052804246545, 0.0017853549215942621, 0.0010463958606123924, 0.0017098344396799803, 0.0022409071680158377, 0.0007668947800993919, 0.0012702574022114277, 0.0010422364575788379, 0.003791992785409093, 0.0011889365268871188, 0.0012626064708456397, 0.000995156355202198, 0.0009441665024496615, 0.0017812196165323257, 0.001102151465602219, 0.0018515640404075384, 0.0028449315577745438, 0.000978287891484797, 0.0017158577684313059, 0.002055930672213435, 0.01117765624076128, 0.0017713721608743072, 0.0017597113037481904, 0.0019059127662330866, 0.0018878792179748416, 0.0011479175882413983, 0.0015064802719280124, 0.0053332652896642685, 0.0008448164444416761, 0.0019474675646051764, 0.001079936744645238, 0.0013012398267164826, 0.001371024176478386, 0.0023801145143806934, 0.0007489885319955647, 0.001335867797024548, 0.0010336828418076038, 0.004029416479170322, 0.001095738378353417, 0.001459693070501089, 0.0009279125370085239, 0.000972556124906987, 0.001091648475266993, 0.0012657253537327051, 0.0018960111774504185, 0.00231073796749115, 0.0009000965510495007, 0.0014588962076231837, 0.0014116768725216389, 0.007496545556932688, 0.001435246434994042, 0.0015559726161882281, 0.0019395860144868493, 0.002469054190441966, 0.0024745650589466095, 0.0022326484322547913, 0.002090242924168706, 0.0030243927612900734, 0.0009021569858305156, 0.0011876786593347788, 0.0011749690165743232, 0.009829789400100708, 0.0007783941691741347, 0.001303281751461327, 0.0010831189574673772, 0.0010725395986810327, 0.000985066406428814, 0.0017593506490811706, 0.008201037533581257, 0.001148283015936613, 0.00235025305300951, 0.0018651201389729977, 0.0019007774535566568, 0.002551398007199168, 0.0008246731013059616, 0.0012624713126569986, 0.001206433167681098, 0.007944625802338123, 0.0009544621570967138, 0.0014001461677253246, 0.0012510226806625724, 0.001591904554516077, 0.0015755884815007448, 0.0014563623117282987, 0.001753508928231895, 0.0015434090746566653, 0.0014664757763966918, 0.0013193367049098015, 0.0011752932332456112, 0.001463037682697177, 0.0029303058981895447, 0.0007840584148652852, 0.0014124542940407991, 0.0012921314919367433, 0.006620112340897322, 0.0007841793121770024, 0.00144626060500741, 0.0011157495900988579, 0.0014354279264807701, 0.0010509927524253726, 0.001090371748432517, 0.0019828281365334988, 0.0010317418491467834, 0.0010697756661102176, 0.008981339633464813, 0.0009261979139409959, 0.0013040025951340795, 0.0012452604714781046, 0.0019506708486005664, 0.0027680096682161093, 0.0009523430489934981, 0.0013480449561029673, 0.0016691695200279355, 0.007876977324485779, 0.0010818318696692586, 0.0013612568145617843, 0.0012418498517945409, 0.001990352524444461, 0.0011956340167671442, 0.0012154356809332967, 0.0018277234630659223, 0.0011384140234440565, 0.0012498472351580858, 0.0013131711166352034, 0.0012693045428022742, 0.0016153299948200583, 0.0025308988988399506, 0.0007871503476053476, 0.0015908809145912528, 0.001444974448531866, 0.009309516288340092, 0.0009223064407706261, 0.0015862368745729327, 0.0010768708307296038, 0.0021677780896425247, 0.0012083587935194373, 0.001241275342181325, 0.0025625433772802353, 0.001165967551060021, 0.001277768169529736, 0.00656574871391058, 0.001048112753778696, 0.0014717879239469767, 0.0012934369733557105, 0.002070290269330144, 0.0028372302185744047, 0.0008784407982602715, 0.001803551334887743, 0.002245039213448763, 0.03400532528758049, 0.0013634833740070462, 0.0024976779241114855, 0.0012687250273302197]


Top-k source tokens:

['count', 'self', 'row', 'self', 'row', 'conn', '#NEWLINE#', 'row', 'host', 'cursor']


Top-k attention probs:

[0.03400532528758049, 0.03366447240114212, 0.019834578037261963, 0.011759044602513313, 0.01117765624076128, 0.011106031946837902, 0.010578734800219536, 0.009829789400100708, 0.00977862998843193, 0.009309516288340092]
