
Original sample:

{"has_bug": false, "bug_kind": 0, "bug_kind_name": "NONE", "source_tokens": ["#NEWLINE#", "def set(", "self", ",", "key", ",", "value", ",", "ttl", ",", "not_exists", "=", "False", ")", ":", "#NEWLINE#", "#INDENT#", "\"Sets or updates a cache entry\\n\\n        .. note:: Thread-safety is required and has to be guaranteed by the\\n           backend implementation.\\n\\n        :params key: Item key as string.\\n        :type key: `unicode string`\\n        :params value: Value to assign to the key. This can be anything that\\n          is handled by the current backend.\\n        :params ttl: Key's timeout in seconds. 0 means no timeout.\\n        :type ttl: int\\n        :params not_exists: If True, the key will be set if it doesn't exist.\\n          Otherwise, it'll always be set.\\n        :type not_exists: bool\\n\\n        :returns: True if the operation succeeds, False otherwise.\\n        \"", "#NEWLINE#", "if", "(", "ttl", "is", "None", ")", ":", "#NEWLINE#", "#INDENT#", "ttl", "=", "self", ".", "_default_ttl", "#NEWLINE#", "#UNINDENT#", "return", "self", ".", "_set", "(", "key", ",", "value", ",", "ttl", ",", "not_exists", ")"], "error_location": [0], "repair_targets": [], "repair_candidates": [4, 40, 8, 21, 28, 44, 2, 30, 36, 6, 42, 10, 46], "provenances": [{"datasetProvenance": {"datasetName": "ETHPy150Open", "filepath": "openstack/neutron/neutron/openstack/common/cache/backends.py", "license": "apache-2.0", "note": "license: bigquery_api"}}], "txt_file": "eval__VARIABLE_MISUSE__SStuB.txt-00000-of-00300", "js_count": 1503, "results": {"model": "transformer", "prob": {"loc": [[0.9763761758804321, 4.124116094317287e-05, 1.1797603605145923e-07, 1.5617954929325606e-08, 2.0176020143480855e-07, 1.516839454041019e-08, 1.6709742567400099e-06, 8.164090736784146e-09, 3.3699157029332127e-06, 9.418198665400723e-09, 3.511892600727151e-06, 3.4963514394803497e-07, 1.3352739358651888e-07, 1.2959921136257435e-08, 5.580068673793903e-08, 1.308468711158639e-07, 7.399274437602799e-08, 3.9869902934697166e-08, 1.372624183204607e-07, 2.951487658719998e-07, 5.610196041061499e-08, 0.01820124313235283, 2.999123580593732e-06, 1.8411023461339937e-07, 2.412390465167391e-08, 5.142730401530571e-07, 2.5711042894727143e-07, 9.913776466419222e-08, 5.0327325880061835e-06, 6.646394012932433e-08, 0.002134086564183235, 1.7927168016740325e-07, 3.310119467414552e-08, 5.001114118385885e-07, 8.897438164012783e-08, 8.393048034349704e-09, 9.316489268940131e-08, 6.475067948485957e-08, 1.7796801810021634e-09, 2.0659993538174604e-07, 5.754057565354742e-05, 9.864771755019319e-08, 0.0005765123059973121, 5.846557371569361e-08, 0.0017913071205839515, 7.13922290174196e-08, 0.0008006027201190591, 5.469847792483051e-07]], "pointer": [[0.0, 0.0, 0.01685531623661518, 0.0, 0.08800073713064194, 0.0, 0.06993131339550018, 0.0, 0.2962358295917511, 0.0, 0.46131598949432373, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0001449841511202976, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.06150834262371063, 0.0, 0.00029127689776942134, 0.0, 0.0, 0.0, 0.0, 0.0, 0.00042471778579056263, 0.0, 0.0, 0.0, 0.0027021262794733047, 0.0, 0.0005318540497682989, 0.0, 3.1698586099082604e-05, 0.0, 0.0020257397554814816, 0.0]], "target": [0.0]}, "loss": [0.023907359689474106, 0.0], "acc": [1.0, 0.0, 0.0, 0.0]}}


All source tokens:

['#NEWLINE#', 'def set(', 'self', ',', 'key', ',', 'value', ',', 'ttl', ',', 'not_exists', '=', 'False', ')', ':', '#NEWLINE#', '#INDENT#', '"Sets or updates a cache entry\\n\\n        .. note:: Thread-safety is required and has to be guaranteed by the\\n           backend implementation.\\n\\n        :params key: Item key as string.\\n        :type key: `unicode string`\\n        :params value: Value to assign to the key. This can be anything that\\n          is handled by the current backend.\\n        :params ttl: Key\'s timeout in seconds. 0 means no timeout.\\n        :type ttl: int\\n        :params not_exists: If True, the key will be set if it doesn\'t exist.\\n          Otherwise, it\'ll always be set.\\n        :type not_exists: bool\\n\\n        :returns: True if the operation succeeds, False otherwise.\\n        "', '#NEWLINE#', 'if', '(', 'ttl', 'is', 'None', ')', ':', '#NEWLINE#', '#INDENT#', 'ttl', '=', 'self', '.', '_default_ttl', '#NEWLINE#', '#UNINDENT#', 'return', 'self', '.', '_set', '(', 'key', ',', 'value', ',', 'ttl', ',', 'not_exists', ')']


All attention probs:

[0.022206688299775124, 0.018148226663470268, 0.06243233010172844, 0.02366163395345211, 0.03340104594826698, 0.018696479499340057, 0.040478989481925964, 0.01699085347354412, 0.05332370102405548, 0.019902639091014862, 0.04652152955532074, 0.017954718321561813, 0.0184379480779171, 0.011537049897015095, 0.01232727151364088, 0.0149061419069767, 0.012748464941978455, 0.013866656459867954, 0.013353771530091763, 0.013784214854240417, 0.010168511420488358, 0.04191237688064575, 0.010745699517428875, 0.009042855352163315, 0.00790464784950018, 0.009746946394443512, 0.010564606636762619, 0.010526798665523529, 0.02941984310746193, 0.010200207121670246, 0.03567260876297951, 0.009282533079385757, 0.0076633938588202, 0.016394291073083878, 0.01732945442199707, 0.024034174159169197, 0.02359842136502266, 0.009067107923328876, 0.011516259983181953, 0.012358011677861214, 0.027833756059408188, 0.013023355044424534, 0.041736479848623276, 0.013304511085152626, 0.03833000734448433, 0.013196838088333607, 0.038488488644361496, 0.012257473543286324]


Top-k source tokens:

['self', 'ttl', 'not_exists', 'ttl', 'value', 'value', 'not_exists', 'ttl', 'self', 'key']


Top-k attention probs:

[0.06243233010172844, 0.05332370102405548, 0.04652152955532074, 0.04191237688064575, 0.041736479848623276, 0.040478989481925964, 0.038488488644361496, 0.03833000734448433, 0.03567260876297951, 0.03340104594826698]
