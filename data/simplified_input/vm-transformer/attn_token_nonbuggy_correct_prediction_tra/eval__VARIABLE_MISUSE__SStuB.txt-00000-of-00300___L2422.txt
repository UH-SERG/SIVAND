
Original sample:

{"has_bug": false, "bug_kind": 0, "bug_kind_name": "NONE", "source_tokens": ["#NEWLINE#", "def call_program(", "self", ",", "name", ",", "*", "arguments", ")", ":", "#NEWLINE#", "#INDENT#", "'\\n        Calls the shell program on the PATH with the given arguments.\\n        \\n        '", "#NEWLINE#", "verbosity", "=", "self", ".", "options", ".", "get", "(", "'verbosity'", ",", "1", ")", "#NEWLINE#", "with", "self", ".", "devnull", "as", "null", ":", "#NEWLINE#", "#INDENT#", "try", ":", "#NEWLINE#", "#INDENT#", "subprocess", ".", "check_call", "(", "(", "(", "name", ",", ")", "+", "tuple", "(", "arguments", ")", ")", ",", "stdout", "=", "(", "null", "if", "(", "verbosity", "==", "0", ")", "else", "self", ".", "stdout", ")", ",", "stderr", "=", "(", "null", "if", "(", "verbosity", "==", "0", ")", "else", "self", ".", "stderr", ")", ")", "#NEWLINE#", "#UNINDENT#", "except", "subprocess", ".", "CalledProcessError", "as", "error", ":", "#NEWLINE#", "#INDENT#", "raise", "management", ".", "CommandError", "(", "'{name:s} failed with exit code {code:d}'", ".", "format", "(", "name", "=", "name", ",", "code", "=", "error", ".", "returncode", ")", ")", "#NEWLINE#", "#UNINDENT#", "#UNINDENT#", "return", "0"], "error_location": [0], "repair_targets": [], "repair_candidates": [7, 52, 95, 114, 4, 46, 108, 110, 2, 16, 28, 67, 83, 14, 62, 78, 32, 59, 75], "provenances": [{"datasetProvenance": {"datasetName": "ETHPy150Open", "filepath": "skibblenybbles/django-commando/commando/management/base.py", "license": "mit", "note": "license: bigquery_api"}}], "txt_file": "eval__VARIABLE_MISUSE__SStuB.txt-00000-of-00300", "js_count": 2422, "results": {"model": "transformer", "prob": {"loc": [[0.843069851398468, 6.468809715443058e-06, 7.432021789099963e-07, 8.68886758098597e-08, 2.131013388861902e-06, 7.05718505855657e-08, 7.343856367469925e-08, 2.9374627956713084e-06, 3.561472183832848e-08, 8.975975163139083e-08, 1.1584742054537855e-07, 8.647204907674677e-08, 4.771094950228871e-07, 1.2542206206944684e-07, 3.8011780816304963e-06, 1.7483783665284136e-07, 6.67138010612689e-07, 8.444605015256457e-08, 3.609713772334544e-08, 2.6653333407011814e-07, 2.689005782485765e-07, 1.1719104122676072e-06, 0.0014134153025224805, 4.925316261505941e-07, 0.0013553111348301172, 7.239090678012872e-07, 1.4109291157637927e-07, 1.5150851595535642e-07, 9.682911331765354e-05, 1.7566549104230944e-07, 6.52361862307771e-08, 3.3624289130784746e-08, 2.2334137611323968e-05, 2.3735451577522326e-06, 3.100172705217119e-07, 1.9103728732261516e-07, 1.222621676788549e-06, 1.389972226206737e-06, 5.627785526485241e-07, 4.829775548387261e-07, 2.097886095953072e-07, 1.277911962915823e-07, 5.2180634924070546e-08, 1.7176662936435605e-07, 3.580166207939328e-07, 2.001895836656331e-06, 0.04601997509598732, 9.518327601654164e-07, 2.30459122008142e-07, 2.8337333901617967e-07, 1.6445842732082383e-07, 1.2359097354419646e-06, 0.005679362919181585, 1.4864092463540146e-06, 6.415436359930027e-07, 3.7939329899927543e-07, 1.0429317143234584e-07, 8.497937074025685e-07, 3.5649488836497767e-06, 0.02505370043218136, 3.8119085274956888e-06, 2.642656454554526e-06, 0.005154093261808157, 4.452690063772025e-06, 4.1370876715518534e-05, 6.897845423736726e-07, 9.07326693777577e-07, 0.002266534138470888, 6.750637453478703e-07, 2.0141682455232512e-07, 5.776765306109155e-07, 1.0999906407960225e-06, 8.143770742208289e-07, 1.543504481560376e-06, 2.3010632048681146e-06, 0.03464416414499283, 1.3046361345914192e-05, 9.478865649725776e-06, 0.02549564093351364, 1.19818596431287e-05, 5.1958450058009475e-05, 3.0592266284656944e-06, 5.336025424185209e-05, 0.0012465894687920809, 1.6335725376848131e-06, 1.6086529512904235e-06, 1.926486675074557e-06, 2.024516561505152e-06, 1.1333453358020051e-06, 5.690009174941224e-07, 1.06701816093846e-06, 1.8202091496277717e-06, 9.960359648175654e-07, 9.812677603804332e-08, 8.012273866597752e-08, 5.079390757600777e-05, 2.620903615024872e-06, 8.790917149781308e-07, 5.413572239376663e-07, 1.1111588094081526e-07, 2.1147734230453352e-07, 4.4092774942328106e-07, 2.0812841228234902e-07, 9.717331295178155e-07, 7.746065421088133e-06, 1.040364281834627e-06, 2.994887537965951e-08, 7.603762242069934e-07, 5.7046963775064796e-05, 2.445505515424884e-06, 0.005566139239817858, 3.642432488959457e-07, 4.227421868563397e-06, 6.756782227057556e-07, 0.002359114121645689, 2.872198365366785e-06, 7.977137670422962e-07, 1.7450510085836868e-06, 2.5881222427415196e-06, 1.3792434856441105e-06, 1.780604634404881e-06, 2.2311708107736195e-06, 1.407228864991339e-06, 0.00015301132225431502]], "pointer": [[0.0, 0.0, 0.024192897602915764, 0.0, 0.08670121431350708, 0.0, 0.0, 0.19755813479423523, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.4207715690135956, 0.0, 0.001395118422806263, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0010548224672675133, 0.0, 0.0, 0.0, 0.013737892732024193, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0006951356772333384, 0.0, 0.0, 0.0, 0.0, 0.0, 0.04466891661286354, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.00564833078533411, 0.0, 0.0, 0.07345569133758545, 0.0, 0.0, 0.0, 0.0, 0.039213523268699646, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.004438498057425022, 0.0, 0.0, 0.01199079304933548, 0.0, 0.0, 0.0, 0.0, 0.03619780018925667, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.03362583369016647, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.003944684751331806, 0.0, 0.00028530810959637165, 0.0, 0.0, 0.0, 0.0004238909459672868, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]], "target": [0.0]}, "loss": [0.1707053929567337, 0.0], "acc": [1.0, 0.0, 0.0, 0.0]}}


All source tokens:

['#NEWLINE#', 'def call_program(', 'self', ',', 'name', ',', '*', 'arguments', ')', ':', '#NEWLINE#', '#INDENT#', "'\\n        Calls the shell program on the PATH with the given arguments.\\n        \\n        '", '#NEWLINE#', 'verbosity', '=', 'self', '.', 'options', '.', 'get', '(', "'verbosity'", ',', '1', ')', '#NEWLINE#', 'with', 'self', '.', 'devnull', 'as', 'null', ':', '#NEWLINE#', '#INDENT#', 'try', ':', '#NEWLINE#', '#INDENT#', 'subprocess', '.', 'check_call', '(', '(', '(', 'name', ',', ')', '+', 'tuple', '(', 'arguments', ')', ')', ',', 'stdout', '=', '(', 'null', 'if', '(', 'verbosity', '==', '0', ')', 'else', 'self', '.', 'stdout', ')', ',', 'stderr', '=', '(', 'null', 'if', '(', 'verbosity', '==', '0', ')', 'else', 'self', '.', 'stderr', ')', ')', '#NEWLINE#', '#UNINDENT#', 'except', 'subprocess', '.', 'CalledProcessError', 'as', 'error', ':', '#NEWLINE#', '#INDENT#', 'raise', 'management', '.', 'CommandError', '(', "'{name:s} failed with exit code {code:d}'", '.', 'format', '(', 'name', '=', 'name', ',', 'code', '=', 'error', '.', 'returncode', ')', ')', '#NEWLINE#', '#UNINDENT#', '#UNINDENT#', 'return', '0']


All attention probs:

[0.014054953120648861, 0.009943395853042603, 0.045588042587041855, 0.013724167831242085, 0.02348456345498562, 0.010990896262228489, 0.009836237877607346, 0.0264492966234684, 0.01048181764781475, 0.009092804044485092, 0.011154825799167156, 0.010331721045076847, 0.011996021494269371, 0.009068052284419537, 0.024199454113841057, 0.008464313112199306, 0.018201420083642006, 0.005450984463095665, 0.006974813062697649, 0.005914069712162018, 0.007143776398152113, 0.005978037137538195, 0.00797260832041502, 0.005351030733436346, 0.010171876288950443, 0.00420171907171607, 0.005859640892595053, 0.005408755503594875, 0.01635865680873394, 0.0037567003164440393, 0.003508171997964382, 0.0031584196258336306, 0.009193310514092445, 0.005704895127564669, 0.005061046220362186, 0.005826849956065416, 0.008158400654792786, 0.005842004902660847, 0.005728420335799456, 0.00526549993082881, 0.007247175555676222, 0.0031345298048108816, 0.008440658450126648, 0.004229731857776642, 0.003409954719245434, 0.003990524914115667, 0.022221552208065987, 0.0036886141169816256, 0.00342503166757524, 0.004085306078195572, 0.005500548519194126, 0.003497648984193802, 0.030630281195044518, 0.003390462137758732, 0.003172864904627204, 0.0034388285130262375, 0.00737355649471283, 0.003138605272397399, 0.003443758701905608, 0.012086433358490467, 0.004482535179704428, 0.002799282781779766, 0.019443480297923088, 0.0034606847912073135, 0.005349680781364441, 0.003318750998005271, 0.00393019150942564, 0.019933458417654037, 0.003212323412299156, 0.004633020143955946, 0.0038984441198408604, 0.004231390543282032, 0.006664442829787731, 0.003184947185218334, 0.003044817363843322, 0.013181617483496666, 0.003957028035074472, 0.002391075948253274, 0.019490312784910202, 0.003254109062254429, 0.003893011948093772, 0.0024870559573173523, 0.003683805698528886, 0.019306907430291176, 0.0027939907740801573, 0.003836636198684573, 0.0034965600352734327, 0.004378039389848709, 0.006138679105788469, 0.004757148679345846, 0.0039495909586548805, 0.006027587223798037, 0.0033132240641862154, 0.0039937919937074184, 0.004595226142555475, 0.01726355403661728, 0.007055632304400206, 0.00682697631418705, 0.008158964104950428, 0.014906303957104683, 0.008592641912400723, 0.0034663998521864414, 0.005549841094762087, 0.006713620387017727, 0.00416416535153985, 0.003212523180991411, 0.005259883124381304, 0.003973663318902254, 0.01316683180630207, 0.003864445723593235, 0.028480378910899162, 0.004339383449405432, 0.009516553021967411, 0.004198978189378977, 0.022720275446772575, 0.0026682664174586535, 0.004425960127264261, 0.003166456473991275, 0.0035426656249910593, 0.006121146958321333, 0.005988913122564554, 0.006394665688276291, 0.01016724668443203, 0.010983077809214592]


Top-k source tokens:

['self', 'arguments', 'name', 'arguments', 'verbosity', 'name', 'error', 'name', 'self', 'verbosity']


Top-k attention probs:

[0.045588042587041855, 0.030630281195044518, 0.028480378910899162, 0.0264492966234684, 0.024199454113841057, 0.02348456345498562, 0.022720275446772575, 0.022221552208065987, 0.019933458417654037, 0.019490312784910202]
