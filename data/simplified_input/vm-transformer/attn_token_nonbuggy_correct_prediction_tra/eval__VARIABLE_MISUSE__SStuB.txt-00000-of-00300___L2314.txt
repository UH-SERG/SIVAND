
Original sample:

{"has_bug": false, "bug_kind": 0, "bug_kind_name": "NONE", "source_tokens": ["#NEWLINE#", "@", "jit", "#NEWLINE#", "def avg(", "x", ",", "y", ",", "z", ")", ":", "#NEWLINE#", "#INDENT#", "'\\n  Return the average of three scalars or arrays\\n  (gets optimized into single traversal)\\n  '", "#NEWLINE#", "return", "(", "(", "(", "x", "+", "y", ")", "+", "z", ")", "/", "3.0", ")"], "error_location": [0], "repair_targets": [], "repair_candidates": [5, 20, 7, 22, 9, 25], "provenances": [{"datasetProvenance": {"datasetName": "ETHPy150Open", "filepath": "iskandr/parakeet/examples/simple_avg.py", "license": "bsd-3-clause", "note": "license: manual_eval"}}], "txt_file": "eval__VARIABLE_MISUSE__SStuB.txt-00000-of-00300", "js_count": 2314, "results": {"model": "transformer", "prob": {"loc": [[0.9956637024879456, 1.544762562843971e-05, 6.980614841722854e-08, 3.7470147162821377e-07, 3.3908551699823875e-07, 6.39007055269758e-07, 7.762836418123698e-08, 2.378861381657771e-06, 4.876109471751988e-08, 7.447513326042099e-06, 3.7912577965926175e-08, 1.9650495630685327e-07, 4.1841931874841976e-07, 3.538199280228582e-07, 1.3009240547035006e-06, 6.467454340963741e-07, 1.0869523521250812e-06, 6.785824524513373e-08, 4.2573947212076746e-07, 1.076467242455692e-06, 0.0008711162372492254, 8.691440029906516e-07, 0.0021848634351044893, 4.206701120779144e-08, 1.1589038706460997e-07, 0.0011278500314801931, 3.2648244996380527e-07, 3.891701908287359e-06, 0.00010399058373877779, 1.0777805982797872e-05]], "pointer": [[0.0, 0.0, 0.0, 0.0, 0.0, 0.02018692158162594, 0.0, 0.47840532660484314, 0.0, 0.4776763916015625, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.005567861255258322, 0.0, 0.001091814017854631, 0.0, 0.0, 0.01707165688276291, 0.0, 0.0, 0.0, 0.0]], "target": [0.0]}, "loss": [0.004345736000686884, 0.0], "acc": [1.0, 0.0, 0.0, 0.0]}}


All source tokens:

['#NEWLINE#', '@', 'jit', '#NEWLINE#', 'def avg(', 'x', ',', 'y', ',', 'z', ')', ':', '#NEWLINE#', '#INDENT#', "'\\n  Return the average of three scalars or arrays\\n  (gets optimized into single traversal)\\n  '", '#NEWLINE#', 'return', '(', '(', '(', 'x', '+', 'y', ')', '+', 'z', ')', '/', '3.0', ')']


All attention probs:

[0.0389699786901474, 0.01947750337421894, 0.03301425278186798, 0.03583250567317009, 0.02985052578151226, 0.06456194072961807, 0.02644846774637699, 0.0674450695514679, 0.028297435492277145, 0.06626052409410477, 0.03810407593846321, 0.02633316069841385, 0.024219771847128868, 0.019389735534787178, 0.027921162545681, 0.021731683984398842, 0.040403593331575394, 0.014268524013459682, 0.013881203718483448, 0.0157230906188488, 0.053215790539979935, 0.0165155790746212, 0.062469471246004105, 0.016774365678429604, 0.01926039531826973, 0.0602131113409996, 0.0177546925842762, 0.022888094186782837, 0.03951684758067131, 0.039257463067770004]


Top-k source tokens:

['y', 'z', 'x', 'y', 'z', 'x', 'return', '3.0', ')', '#NEWLINE#']


Top-k attention probs:

[0.0674450695514679, 0.06626052409410477, 0.06456194072961807, 0.062469471246004105, 0.0602131113409996, 0.053215790539979935, 0.040403593331575394, 0.03951684758067131, 0.039257463067770004, 0.0389699786901474]
