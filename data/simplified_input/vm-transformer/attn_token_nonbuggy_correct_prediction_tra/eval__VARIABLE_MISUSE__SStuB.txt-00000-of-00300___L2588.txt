
Original sample:

{"has_bug": false, "bug_kind": 0, "bug_kind_name": "NONE", "source_tokens": ["#NEWLINE#", "def startbody(", "self", ",", "ctype", ",", "plist", "=", "[", "]", ",", "prefix", "=", "1", ")", ":", "#NEWLINE#", "#INDENT#", "'Returns a file-like object for writing the body of the message.\\n\\n        The content-type is set to the provided ctype, and the optional\\n        parameter, plist, provides additional parameters for the\\n        content-type declaration.  The optional argument prefix determines\\n        where the header is inserted; 0 means append at the end, 1 means\\n        insert at the start. The default is to insert at the start.\\n\\n        '", "#NEWLINE#", "for", "(", "name", ",", "value", ")", "in", "plist", ":", "#NEWLINE#", "#INDENT#", "ctype", "=", "(", "ctype", "+", "(", "';\\n %s=\"%s\"'", "%", "(", "name", ",", "value", ")", ")", ")", "#NEWLINE#", "#UNINDENT#", "self", ".", "addheader", "(", "'Content-Type'", ",", "ctype", ",", "prefix", "=", "prefix", ")", "#NEWLINE#", "self", ".", "flushheaders", "(", ")", "#NEWLINE#", "self", ".", "_fp", ".", "write", "(", "'\\n'", ")", "#NEWLINE#", "return", "self", ".", "_fp"], "error_location": [0], "repair_targets": [], "repair_candidates": [6, 27, 24, 42, 22, 40, 4, 31, 34, 54, 2, 48, 61, 67, 77, 11, 56, 58], "provenances": [{"datasetProvenance": {"datasetName": "ETHPy150Open", "filepath": "babble/babble/include/jython/Lib/MimeWriter.py", "license": "apache-2.0", "note": "license: bigquery_api"}}], "txt_file": "eval__VARIABLE_MISUSE__SStuB.txt-00000-of-00300", "js_count": 2588, "results": {"model": "transformer", "prob": {"loc": [[0.9949246644973755, 1.547146439406788e-06, 7.346845904976362e-07, 1.7660257256579825e-08, 2.0155994207016192e-06, 1.6352080578485584e-08, 6.461807060986757e-06, 4.472279968581461e-08, 4.0378953514164095e-08, 1.0619396029198924e-08, 8.488528102645887e-09, 8.890939398042974e-07, 9.831630620737997e-08, 3.0061860343266744e-06, 1.3771119355965311e-08, 4.8100414318241747e-08, 1.0140450967810466e-07, 4.046021118142562e-08, 1.82806317639006e-07, 1.0142287720782406e-07, 3.768293765915587e-08, 1.3025557521473274e-08, 6.948494615244272e-07, 9.78032144161034e-09, 4.759451257996261e-06, 7.676091762220949e-09, 1.1198531879585971e-08, 0.0005888260202482343, 1.0899324109914232e-07, 1.0373521774909022e-07, 4.95395227062545e-08, 3.5184359148843214e-05, 3.596801079197576e-08, 1.104957263464712e-07, 0.001120127970352769, 9.089355756941586e-08, 4.089621597813675e-06, 8.387389243580401e-06, 4.03460598263905e-09, 6.197125657081415e-08, 0.0011655460111796856, 4.6399453168533e-08, 0.0008611762314103544, 1.1122586585088357e-07, 1.0340689726717756e-07, 1.3222059180861834e-07, 2.644039795995923e-07, 7.587433259459431e-08, 3.836823836422809e-08, 8.942364360109423e-08, 6.526155615915741e-09, 2.647223880103411e-07, 1.2016374967060983e-05, 5.222339041210944e-07, 0.0006913281977176666, 4.316663648751273e-08, 2.344929050934752e-08, 1.7679576558293775e-07, 2.5494620786048472e-05, 3.7647825479325547e-07, 2.169645227922956e-07, 2.8529240125863e-07, 1.210391076256201e-07, 2.1294260932336329e-07, 1.0816078201969503e-06, 4.3915395053772954e-07, 2.0281954959955328e-07, 2.0269744709366933e-06, 5.39100000196413e-08, 2.105941554475521e-08, 1.8674886348435393e-07, 4.805635853699641e-06, 1.0480723631189903e-06, 4.617163995135343e-06, 8.717783543943369e-07, 3.6398395764081215e-07, 1.236644067148518e-07, 0.0005224553751759231, 2.3557385020467336e-07, 4.956967458724648e-08]], "pointer": [[0.0, 0.0, 0.0727105364203453, 0.0, 0.33436450362205505, 0.0, 0.02148973010480404, 0.0, 0.0, 0.0, 0.0, 0.01715424656867981, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.23988044261932373, 0.0, 0.16236841678619385, 0.0, 0.0, 0.000271951372269541, 0.0, 0.0, 0.0, 0.10588251054286957, 0.0, 0.0, 4.3968695536023006e-05, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0028103571385145187, 0.0, 0.0014483567792922258, 0.0, 0.0, 0.0, 0.0, 0.0, 0.01171092689037323, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0002995556278619915, 0.0, 0.0005179555737413466, 0.0, 0.00011205442569917068, 0.0, 0.0, 0.0019771200604736805, 0.0, 0.0, 0.0, 0.0, 0.0, 0.025607425719499588, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0013499280903488398, 0.0, 0.0]], "target": [0.0]}, "loss": [0.005087999626994133, 0.0], "acc": [1.0, 0.0, 0.0, 0.0]}}


All source tokens:

['#NEWLINE#', 'def startbody(', 'self', ',', 'ctype', ',', 'plist', '=', '[', ']', ',', 'prefix', '=', '1', ')', ':', '#NEWLINE#', '#INDENT#', "'Returns a file-like object for writing the body of the message.\\n\\n        The content-type is set to the provided ctype, and the optional\\n        parameter, plist, provides additional parameters for the\\n        content-type declaration.  The optional argument prefix determines\\n        where the header is inserted; 0 means append at the end, 1 means\\n        insert at the start. The default is to insert at the start.\\n\\n        '", '#NEWLINE#', 'for', '(', 'name', ',', 'value', ')', 'in', 'plist', ':', '#NEWLINE#', '#INDENT#', 'ctype', '=', '(', 'ctype', '+', '(', '\';\\n %s="%s"\'', '%', '(', 'name', ',', 'value', ')', ')', ')', '#NEWLINE#', '#UNINDENT#', 'self', '.', 'addheader', '(', "'Content-Type'", ',', 'ctype', ',', 'prefix', '=', 'prefix', ')', '#NEWLINE#', 'self', '.', 'flushheaders', '(', ')', '#NEWLINE#', 'self', '.', '_fp', '.', 'write', '(', "'\\n'", ')', '#NEWLINE#', 'return', 'self', '.', '_fp']


All attention probs:

[0.019240515306591988, 0.011733018793165684, 0.05048884451389313, 0.016845664009451866, 0.033278174698352814, 0.013768195174634457, 0.03149139881134033, 0.011800168082118034, 0.010488458909094334, 0.01194686722010374, 0.012858405709266663, 0.027361268177628517, 0.010790872387588024, 0.01656794175505638, 0.007773953955620527, 0.008565406315028667, 0.010055563412606716, 0.00890511553734541, 0.00817252229899168, 0.010469464585185051, 0.009362355805933475, 0.007970970124006271, 0.025348491966724396, 0.009197223000228405, 0.03131287917494774, 0.008143876679241657, 0.005953408312052488, 0.028551558032631874, 0.007141798734664917, 0.007543313782662153, 0.008073968812823296, 0.026324324309825897, 0.00783628597855568, 0.005539655219763517, 0.021330062299966812, 0.0064055039547383785, 0.0077009499073028564, 0.008074430748820305, 0.007345212623476982, 0.005934759974479675, 0.023251919075846672, 0.007393461652100086, 0.030176369473338127, 0.006488518789410591, 0.0052840071730315685, 0.005259588360786438, 0.008883247151970863, 0.007588552311062813, 0.013886833563446999, 0.004895390011370182, 0.006238021422177553, 0.00560895586386323, 0.010201239958405495, 0.005555297248065472, 0.021180300042033195, 0.005343565251678228, 0.012345231138169765, 0.0057556708343327045, 0.02792479656636715, 0.0053317914716899395, 0.008179528638720512, 0.015543953515589237, 0.004672443028539419, 0.006944980006664991, 0.007697936613112688, 0.008354178629815578, 0.012301276437938213, 0.019744964316487312, 0.006076980847865343, 0.011390985921025276, 0.005591832101345062, 0.009824886918067932, 0.008388680405914783, 0.00911593809723854, 0.006772162392735481, 0.009929271414875984, 0.011078773066401482, 0.02768171951174736, 0.0055044274777174, 0.008919482119381428]


Top-k source tokens:

['self', 'ctype', 'plist', 'value', 'value', 'plist', 'prefix', 'self', 'prefix', 'ctype']


Top-k attention probs:

[0.05048884451389313, 0.033278174698352814, 0.03149139881134033, 0.03131287917494774, 0.030176369473338127, 0.028551558032631874, 0.02792479656636715, 0.02768171951174736, 0.027361268177628517, 0.026324324309825897]
