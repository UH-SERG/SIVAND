
Original sample:

{"has_bug": false, "bug_kind": 0, "bug_kind_name": "NONE", "source_tokens": ["#NEWLINE#", "def check_migrations(", "self", ")", ":", "#NEWLINE#", "#INDENT#", "\"\\n        Checks to see if the set of migrations on disk matches the\\n        migrations in the database. Prints a warning if they don't match.\\n        \"", "#NEWLINE#", "executor", "=", "MigrationExecutor", "(", "connections", "[", "DEFAULT_DB_ALIAS", "]", ")", "#NEWLINE#", "plan", "=", "executor", ".", "migration_plan", "(", "executor", ".", "loader", ".", "graph", ".", "leaf_nodes", "(", ")", ")", "#NEWLINE#", "if", "(", "plan", "and", "self", ".", "show_startup_messages", ")", ":", "#NEWLINE#", "#INDENT#", "self", ".", "stdout", ".", "write", "(", "self", ".", "style", ".", "NOTICE", "(", "'\\nYou have unapplied migrations; your app may not work properly until they are applied.'", ")", ")", "#NEWLINE#", "self", ".", "stdout", ".", "write", "(", "self", ".", "style", ".", "NOTICE", "(", "\"Run 'python manage.py migrate' to apply them.\\n\"", ")", ")"], "error_location": [0], "repair_targets": [], "repair_candidates": [2, 40, 47, 53, 63, 69, 9, 21, 25, 19, 38], "provenances": [{"datasetProvenance": {"datasetName": "ETHPy150Open", "filepath": "django-extensions/django-extensions/django_extensions/management/commands/runserver_plus.py", "license": "mit", "note": "license: bigquery_api"}}], "txt_file": "eval__VARIABLE_MISUSE__SStuB.txt-00000-of-00300", "js_count": 1363, "results": {"model": "transformer", "prob": {"loc": [[0.5853579640388489, 2.2706592517351964e-06, 2.092621798510663e-06, 2.2897605589378145e-08, 6.273618424756933e-08, 5.462739238737413e-08, 3.4994016573364206e-08, 4.4079083494352744e-08, 2.2842991498350784e-08, 6.436228545680933e-07, 3.1782295906168656e-08, 1.179709219201186e-08, 2.0032958403248813e-08, 4.504150183493039e-06, 8.591555200609946e-08, 5.28845657754573e-06, 2.8084503611580658e-08, 4.86596860582722e-08, 1.676579941545242e-08, 2.5553435989422724e-06, 6.105314476201329e-09, 2.487870369805023e-05, 1.8063843754134723e-07, 1.6919622680688917e-07, 0.00018452131189405918, 0.40760084986686707, 1.18222419587255e-06, 4.5049768004901125e-07, 8.865392260304361e-07, 6.203343616562051e-08, 3.638109831172187e-07, 4.48130457186835e-08, 1.2093979648852837e-06, 7.894410600783885e-07, 1.6828474258545612e-07, 6.515610095902957e-08, 3.354972477609408e-08, 2.3965933237946047e-08, 0.000352939561707899, 2.4245349550255924e-07, 0.0036394100170582533, 2.819166695644526e-07, 7.605603968841024e-07, 9.673942003018965e-08, 6.146730697764724e-07, 1.8466818119122763e-07, 8.001141083013863e-08, 1.609657374501694e-05, 9.238153353408052e-08, 1.0993058019437285e-08, 1.553256794295521e-07, 2.811038690708756e-08, 9.526904420908977e-08, 0.00026838784106075764, 4.62834975678561e-07, 3.749465449232048e-08, 6.267761136768968e-07, 1.1491859908119295e-07, 2.093184548357385e-06, 2.871884498745203e-05, 1.5790545830896008e-06, 7.003752102718863e-07, 2.5177536144838086e-07, 2.581638682386256e-06, 5.458968743710102e-08, 2.076441596443601e-08, 1.5560291899419099e-07, 1.8484957564623983e-08, 6.305300104259004e-08, 0.0024756165221333504, 2.379518377892964e-07, 5.264699609597301e-08, 2.0555499702368252e-07, 4.068694536840667e-08, 1.3191072412155336e-07, 1.41759182952228e-05, 4.6606837145191093e-07, 4.3353699652470823e-07]], "pointer": [[0.0, 0.0, 0.7847042679786682, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0120650390163064, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.011602010577917099, 0.0, 0.00399414449930191, 0.0, 0.0, 0.0, 0.003367134602740407, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.001006716163828969, 0.0, 0.11500423401594162, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.00029140536207705736, 0.0, 0.0, 0.0, 0.0, 0.0, 0.004030671902000904, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0011177348205819726, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0628165677189827, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]], "target": [0.0]}, "loss": [0.5355315208435059, 0.0], "acc": [1.0, 0.0, 0.0, 0.0]}}


All source tokens:

['#NEWLINE#', 'def check_migrations(', 'self', ')', ':', '#NEWLINE#', '#INDENT#', '"\\n        Checks to see if the set of migrations on disk matches the\\n        migrations in the database. Prints a warning if they don\'t match.\\n        "', '#NEWLINE#', 'executor', '=', 'MigrationExecutor', '(', 'connections', '[', 'DEFAULT_DB_ALIAS', ']', ')', '#NEWLINE#', 'plan', '=', 'executor', '.', 'migration_plan', '(', 'executor', '.', 'loader', '.', 'graph', '.', 'leaf_nodes', '(', ')', ')', '#NEWLINE#', 'if', '(', 'plan', 'and', 'self', '.', 'show_startup_messages', ')', ':', '#NEWLINE#', '#INDENT#', 'self', '.', 'stdout', '.', 'write', '(', 'self', '.', 'style', '.', 'NOTICE', '(', "'\\nYou have unapplied migrations; your app may not work properly until they are applied.'", ')', ')', '#NEWLINE#', 'self', '.', 'stdout', '.', 'write', '(', 'self', '.', 'style', '.', 'NOTICE', '(', '"Run \'python manage.py migrate\' to apply them.\\n"', ')', ')']


All attention probs:

[0.02465881034731865, 0.011717700399458408, 0.07206103205680847, 0.01811087876558304, 0.014691454358398914, 0.013902985490858555, 0.011765919625759125, 0.01657072640955448, 0.012847994454205036, 0.04074479639530182, 0.013954111374914646, 0.012240857817232609, 0.012014270760118961, 0.02160368673503399, 0.008838137611746788, 0.020502548664808273, 0.007574252784252167, 0.006818948779255152, 0.012175616808235645, 0.037195298820734024, 0.012206724844872952, 0.022151783108711243, 0.006112711038440466, 0.006310837808996439, 0.011067952960729599, 0.05029221996665001, 0.005199660547077656, 0.012619644403457642, 0.005151018965989351, 0.00710885226726532, 0.005869519896805286, 0.005605069454759359, 0.008649005554616451, 0.007788988761603832, 0.00613301619887352, 0.01010954286903143, 0.009476219303905964, 0.006569824647158384, 0.03909634053707123, 0.007772364187985659, 0.023168036714196205, 0.00503819203004241, 0.011279995553195477, 0.007483111694455147, 0.006320856977254152, 0.009158414788544178, 0.009293114766478539, 0.016602778807282448, 0.005091594997793436, 0.008926192298531532, 0.005273397080600262, 0.006610039621591568, 0.006087677553296089, 0.020674796774983406, 0.003993894439190626, 0.006582573521882296, 0.0044369325041770935, 0.006502198521047831, 0.007692023646086454, 0.010886237025260925, 0.0064709847792983055, 0.005836723372340202, 0.00978302862495184, 0.020367786288261414, 0.007084462326020002, 0.010238409973680973, 0.008370444178581238, 0.008666496723890305, 0.009111341089010239, 0.03349919989705086, 0.006123310420662165, 0.008056639693677425, 0.006950054783374071, 0.008466705679893494, 0.009249013848602772, 0.01044075470417738, 0.007690913043916225, 0.0072103505954146385]


Top-k source tokens:

['self', 'executor', 'executor', 'plan', 'plan', 'self', '#NEWLINE#', 'self', 'executor', 'connections']


Top-k attention probs:

[0.07206103205680847, 0.05029221996665001, 0.04074479639530182, 0.03909634053707123, 0.037195298820734024, 0.03349919989705086, 0.02465881034731865, 0.023168036714196205, 0.022151783108711243, 0.02160368673503399]
