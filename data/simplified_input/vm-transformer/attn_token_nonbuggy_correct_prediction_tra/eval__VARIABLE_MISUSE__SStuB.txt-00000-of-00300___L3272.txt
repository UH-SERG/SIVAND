
Original sample:

{"has_bug": false, "bug_kind": 0, "bug_kind_name": "NONE", "source_tokens": ["#NEWLINE#", "def run(", "message", ")", ":", "#NEWLINE#", "#INDENT#", "'\\n        Run\\n\\n        Run the custom plugin specific code. A returned\\n        string is the message that will be sent back\\n        to the user.\\n\\n        --\\n        @param  message:dict    The message sent by the user\\n\\n        @return str\\n    '", "#NEWLINE#", "text", "=", "message", "[", "'text'", "]", "#NEWLINE#", "if", "text", ".", "startswith", "(", "'@'", ")", ":", "#NEWLINE#", "#INDENT#", "text", "=", "text", ".", "split", "(", "' '", ",", "1", ")", "[", "1", "]", ".", "strip", "(", ")", "#NEWLINE#", "#UNINDENT#", "if", "text", ".", "startswith", "(", "'/'", ")", ":", "#NEWLINE#", "#INDENT#", "text", "=", "text", ".", "replace", "(", "'/'", ",", "''", ",", "1", ")", ".", "strip", "(", ")", "#NEWLINE#", "#UNINDENT#", "action", "=", "text", ".", "split", "(", "' '", ")", "[", "0", "]", ".", "strip", "(", ")", "#NEWLINE#", "if", "(", "action", "not in", "commands", "(", ")", ")", ":", "#NEWLINE#", "#INDENT#", "return", "\"Sorry, I don't know what to do with: {command}\"", ".", "format", "(", "command", "=", "action", ")", "#NEWLINE#", "#UNINDENT#", "for", "command", "in", "commands", "(", ")", ":", "#NEWLINE#", "#INDENT#", "text", "=", "ignore_case_replace", "(", "command", ",", "''", ",", "text", ")", ".", "strip", "(", ")", "#NEWLINE#", "#UNINDENT#", "if", "(", "text", "==", "'help'", ")", ":", "#NEWLINE#", "#INDENT#", "return", "_show_help", "(", ")", "#NEWLINE#", "#UNINDENT#", "if", "(", "text", "in", "[", "'neutral'", ",", "'explicit'", ",", "'chuck'", ",", "'all'", "]", ")", ":", "#NEWLINE#", "#INDENT#", "return", "pyjokes", ".", "get_joke", "(", "language", "=", "'en'", ",", "category", "=", "text", ")", "#NEWLINE#", "#UNINDENT#", "return", "pyjokes", ".", "get_joke", "(", "language", "=", "'en'", ",", "category", "=", "'all'", ")"], "error_location": [0], "repair_targets": [], "repair_candidates": [105, 112, 124, 2, 11, 9, 17, 26, 28, 46, 55, 57, 75, 120, 128, 138, 153, 179, 73, 91, 107], "provenances": [{"datasetProvenance": {"datasetName": "ETHPy150Open", "filepath": "leonjza/hogar/hogar/Plugins/Joke/main.py", "license": "mit", "note": "license: bigquery_api"}}], "txt_file": "eval__VARIABLE_MISUSE__SStuB.txt-00000-of-00300", "js_count": 3272, "results": {"model": "transformer", "prob": {"loc": [[0.8035293221473694, 9.007982953335159e-06, 1.9667279502755264e-06, 5.649569345678174e-08, 1.0783107029510575e-07, 1.4902657596849167e-07, 1.4015434146585903e-07, 3.4258775372109085e-07, 1.6521967438620777e-07, 1.106705440179212e-06, 3.305302698208834e-07, 0.0029218015260994434, 1.5741986771899974e-06, 1.213917812492582e-06, 4.2113975950996974e-07, 5.392324737840681e-07, 3.890418156515807e-07, 1.126752522395691e-06, 1.1982618275396817e-07, 3.254376679251436e-08, 1.2533675430859148e-07, 1.687309668341186e-05, 6.412726349935838e-08, 7.514046842516109e-07, 2.6750058168545365e-07, 1.001330360850261e-07, 3.5825264603772666e-06, 2.227077544603162e-08, 5.689620934390405e-07, 1.1671711774852156e-07, 5.428164939758062e-08, 4.865161145062302e-07, 1.535534124741389e-06, 1.4229085820716136e-07, 5.695174536413106e-07, 1.8151663994103728e-07, 3.569667512692831e-07, 4.319824995491217e-07, 5.493180310622847e-07, 1.3816473654060246e-07, 6.30098710985294e-08, 1.4914835446688812e-06, 1.2683166232818621e-06, 5.982950028737832e-07, 3.232108838346903e-07, 4.828764872399915e-07, 1.1404246151869302e-06, 1.4154728944504313e-07, 4.141410059332884e-08, 2.3244180624715227e-07, 4.047017682751175e-06, 2.0873734740689542e-07, 5.913066161156166e-07, 5.913720428907254e-07, 1.316772539894373e-07, 7.297662250493886e-06, 6.056526302700149e-08, 3.672932962217601e-06, 1.5493917260300805e-07, 5.1593392669246896e-08, 3.9634741710870003e-07, 1.1292879662505584e-06, 1.3600168813354685e-07, 1.718051976240531e-07, 1.170935064465084e-07, 2.033937107626116e-07, 1.4119808611212648e-07, 1.676783227821943e-07, 8.232156289977866e-08, 1.0746267662398168e-06, 7.13125416496041e-07, 5.055225074102054e-07, 2.975052098008746e-07, 7.1269464569923e-06, 1.1818195133628251e-07, 9.953882909030654e-06, 1.5656220853088598e-07, 1.8737863172191283e-07, 3.497653722206451e-07, 5.142711415828671e-06, 6.126304015197093e-07, 6.044331826160487e-07, 6.242239010134654e-07, 4.3387260006966244e-07, 2.13328235076915e-07, 7.282527292318264e-08, 3.913331056537572e-06, 5.333076273927873e-07, 4.485280840071937e-07, 2.885092555970914e-07, 1.4274237969402748e-07, 0.023283641785383224, 7.57186114697106e-07, 3.2636634728078207e-08, 9.394598237122409e-06, 3.2730252996771014e-07, 1.3372536500355636e-07, 1.8739713141258107e-06, 9.428915745957056e-07, 4.632900356682512e-07, 2.1934982896709698e-07, 1.2169819285645644e-07, 1.8823062930550805e-07, 6.418379427941545e-08, 1.6947680592238612e-07, 6.2195367718231864e-06, 2.737786530815356e-07, 0.011831012554466724, 4.357452496606129e-07, 4.3124981630171533e-07, 3.63276910775312e-07, 2.9144140967218846e-07, 2.5727770207595313e-06, 8.629035619378556e-08, 1.1639986752243203e-07, 3.946802826249041e-05, 3.620567099460459e-07, 1.355269660052727e-06, 4.6268729647636064e-07, 2.0842269066179142e-07, 2.0290259271860123e-05, 7.090460485414951e-08, 5.609852564703033e-07, 3.211054320217954e-07, 0.004784185905009508, 8.419502961487524e-08, 2.2855238057672977e-07, 1.0785985438133139e-07, 0.003804117441177368, 2.930358675712341e-07, 2.8037672450409445e-07, 8.956311603469658e-08, 1.9377569060452515e-06, 1.34021627218317e-06, 7.304412861230958e-07, 6.706339945594664e-07, 1.5143518794502597e-07, 6.280973252614785e-08, 0.05171575769782066, 9.900360282699694e-07, 1.7302978676525527e-06, 2.3521963044004224e-07, 7.39686129236361e-07, 4.668920894346229e-07, 1.3189392689128e-07, 4.519375096379008e-08, 5.998215328872902e-07, 2.4001134079298936e-05, 2.7556671966522117e-07, 3.167820352700801e-07, 1.9939542994507065e-07, 1.2701242724233452e-07, 5.985486239978854e-08, 0.030823102220892906, 2.2233066374610644e-06, 2.228826133432449e-06, 1.1948048950216617e-06, 3.264265728830651e-07, 1.6395792954426724e-06, 3.7780733919134946e-07, 5.318492640071781e-06, 4.1043693954634364e-07, 5.30891975358827e-06, 4.56978597185298e-07, 3.953078078211547e-07, 9.321029210695997e-07, 6.228692654985934e-07, 4.1200601685886795e-07, 1.5876659631430812e-07, 1.2923720760227297e-07, 1.5433334965564427e-07, 3.503671308635603e-08, 1.6287719972751802e-07, 1.618948431314493e-06, 3.7956391452098615e-07, 5.424951723398408e-06, 5.528273305799303e-08, 1.3009719523893182e-08, 4.9071577024051294e-08, 0.06587580591440201, 6.448993303820316e-07, 3.7292849697223573e-07, 2.6428628530084097e-07, 2.2702566582211148e-07, 2.8124011919317127e-07, 2.0241361653461354e-07, 3.938171744266583e-08, 2.8451850084820762e-06, 0.0011023320257663727, 8.671479918120895e-06, 2.2123029339127243e-05, 6.284517439780757e-07, 8.245260829653489e-08, 1.3633003845825442e-06, 3.1027328077470884e-05, 1.172046040665009e-06]], "pointer": [[0.0, 0.0, 0.05857169255614281, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.03308466076850891, 0.0, 0.00023065198911353946, 0.0, 0.0, 0.0, 0.0, 0.0, 0.009522597305476665, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.06028296798467636, 0.0, 0.0002814130566548556, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.02878371626138687, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1397886425256729, 0.0, 0.002593392739072442, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.047031156718730927, 0.0, 0.00045055709779262543, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.00399386789649725, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.41360411047935486, 0.0, 0.0049671889282763, 0.0, 0.0, 0.0, 0.0, 0.013254868797957897, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.11991303414106369, 0.0, 0.0, 0.0, 0.00010259209375362843, 0.0, 0.0, 0.0, 0.0015253229066729546, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.013538154773414135, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.03935476392507553, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.00912463665008545, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]], "target": [0.0]}, "loss": [0.2187415361404419, 0.0], "acc": [1.0, 0.0, 0.0, 0.0]}}


All source tokens:

['#NEWLINE#', 'def run(', 'message', ')', ':', '#NEWLINE#', '#INDENT#', "'\\n        Run\\n\\n        Run the custom plugin specific code. A returned\\n        string is the message that will be sent back\\n        to the user.\\n\\n        --\\n        @param  message:dict    The message sent by the user\\n\\n        @return str\\n    '", '#NEWLINE#', 'text', '=', 'message', '[', "'text'", ']', '#NEWLINE#', 'if', 'text', '.', 'startswith', '(', "'@'", ')', ':', '#NEWLINE#', '#INDENT#', 'text', '=', 'text', '.', 'split', '(', "' '", ',', '1', ')', '[', '1', ']', '.', 'strip', '(', ')', '#NEWLINE#', '#UNINDENT#', 'if', 'text', '.', 'startswith', '(', "'/'", ')', ':', '#NEWLINE#', '#INDENT#', 'text', '=', 'text', '.', 'replace', '(', "'/'", ',', "''", ',', '1', ')', '.', 'strip', '(', ')', '#NEWLINE#', '#UNINDENT#', 'action', '=', 'text', '.', 'split', '(', "' '", ')', '[', '0', ']', '.', 'strip', '(', ')', '#NEWLINE#', 'if', '(', 'action', 'not in', 'commands', '(', ')', ')', ':', '#NEWLINE#', '#INDENT#', 'return', '"Sorry, I don\'t know what to do with: {command}"', '.', 'format', '(', 'command', '=', 'action', ')', '#NEWLINE#', '#UNINDENT#', 'for', 'command', 'in', 'commands', '(', ')', ':', '#NEWLINE#', '#INDENT#', 'text', '=', 'ignore_case_replace', '(', 'command', ',', "''", ',', 'text', ')', '.', 'strip', '(', ')', '#NEWLINE#', '#UNINDENT#', 'if', '(', 'text', '==', "'help'", ')', ':', '#NEWLINE#', '#INDENT#', 'return', '_show_help', '(', ')', '#NEWLINE#', '#UNINDENT#', 'if', '(', 'text', 'in', '[', "'neutral'", ',', "'explicit'", ',', "'chuck'", ',', "'all'", ']', ')', ':', '#NEWLINE#', '#INDENT#', 'return', 'pyjokes', '.', 'get_joke', '(', 'language', '=', "'en'", ',', 'category', '=', 'text', ')', '#NEWLINE#', '#UNINDENT#', 'return', 'pyjokes', '.', 'get_joke', '(', 'language', '=', "'en'", ',', 'category', '=', "'all'", ')']


All attention probs:

[0.013477489352226257, 0.00952465645968914, 0.026985719799995422, 0.012240184471011162, 0.008661547675728798, 0.007703539449721575, 0.006353206466883421, 0.008765251375734806, 0.0064636580646038055, 0.018395178020000458, 0.006463052239269018, 0.017099155113101006, 0.006235489621758461, 0.00859290361404419, 0.005399059504270554, 0.007029054220765829, 0.00664304057136178, 0.011280665174126625, 0.00476571312174201, 0.005649735685437918, 0.005303215701133013, 0.007140258327126503, 0.0038976871874183416, 0.004417811054736376, 0.004745409358292818, 0.004236035048961639, 0.013695110566914082, 0.004092693328857422, 0.010949498042464256, 0.002691596280783415, 0.003339363494887948, 0.003115452593192458, 0.0035026210825890303, 0.0033878786489367485, 0.005551290698349476, 0.0029603380244225264, 0.003249314846470952, 0.005381441209465265, 0.0042706700041890144, 0.003071294631808996, 0.0035220247227698565, 0.003555870847776532, 0.0037505757063627243, 0.004159586038440466, 0.0035602624993771315, 0.0034984350204467773, 0.008530305698513985, 0.0025246418081223965, 0.0023999337572604418, 0.003061416558921337, 0.0044519659131765366, 0.0021639480255544186, 0.0023192770313471556, 0.002955143339931965, 0.003053652588278055, 0.010653246194124222, 0.002745606703683734, 0.008319128304719925, 0.0020831141155213118, 0.0026158189866691828, 0.002389772329479456, 0.0035734176635742188, 0.00231974758207798, 0.0020487916190177202, 0.002273543504998088, 0.004602313973009586, 0.003102931659668684, 0.0023655022960156202, 0.003704322502017021, 0.003229527734220028, 0.002983247162774205, 0.0037779929116368294, 0.0038478837814182043, 0.01925051584839821, 0.004233616404235363, 0.008282038383185863, 0.0019019923638552427, 0.0025661352556198835, 0.0022710131015628576, 0.002917941426858306, 0.0022105525713413954, 0.0023353127762675285, 0.003973824437707663, 0.0026101202238351107, 0.0020656289998441935, 0.0022484222427010536, 0.0033326924312859774, 0.0035013032611459494, 0.0036934574600309134, 0.003579697571694851, 0.002072113798931241, 0.024860963225364685, 0.002507515950128436, 0.004351834766566753, 0.003552773268893361, 0.0027042008005082607, 0.0023885779082775116, 0.0026992105413228273, 0.0033131861127913, 0.003571053734049201, 0.006326436065137386, 0.0016462304629385471, 0.002208154648542404, 0.0041974070481956005, 0.003281434066593647, 0.007923140190541744, 0.002702069468796253, 0.022271033376455307, 0.001604005228728056, 0.0029961836989969015, 0.003255023853853345, 0.003583016339689493, 0.016185710206627846, 0.003594143781810999, 0.004486781544983387, 0.0037496297154575586, 0.0019267693860456347, 0.0020783941727131605, 0.0026099705137312412, 0.002718318020924926, 0.013848615810275078, 0.004155789967626333, 0.0028330059722065926, 0.002370681846514344, 0.01360068004578352, 0.002559881890192628, 0.002415603492408991, 0.0025722328573465347, 0.014597741886973381, 0.002458557253703475, 0.001679762382991612, 0.0024164922069758177, 0.002437834395095706, 0.00185308326035738, 0.0032239167485386133, 0.0026909431908279657, 0.0034683318808674812, 0.002202932955697179, 0.02164999023079872, 0.002230098471045494, 0.0034794360399246216, 0.0016747291665524244, 0.0021799905225634575, 0.0027966240886598825, 0.002920465311035514, 0.004201329313218594, 0.0052634114399552345, 0.004213762003928423, 0.0024078518617898226, 0.0028964816592633724, 0.003118370193988085, 0.00449535483494401, 0.003111752914264798, 0.019405843690037727, 0.00419626897200942, 0.0037998382467776537, 0.004024086985737085, 0.0030775906052440405, 0.003665788332000375, 0.003052228596061468, 0.0047710007056593895, 0.002498000394552946, 0.005053655710071325, 0.0021550303790718317, 0.0022772743832319975, 0.0023596545215696096, 0.003210115944966674, 0.003114693332463503, 0.0035361014306545258, 0.003923088777810335, 0.0016553858295083046, 0.0022404922638088465, 0.002673331880941987, 0.004899258259683847, 0.003201788756996393, 0.00404918659478426, 0.002154732123017311, 0.006575423758476973, 0.0025415178388357162, 0.0381113700568676, 0.0024717433843761683, 0.0033065436873584986, 0.0034802693407982588, 0.006099152844399214, 0.004885165020823479, 0.002611387288197875, 0.0030440750997513533, 0.0047588772140443325, 0.006755871698260307, 0.005149129778146744, 0.0052957492880523205, 0.004338050726801157, 0.005446437280625105, 0.004207124467939138, 0.005370866507291794, 0.003321300959214568]


Top-k source tokens:

['text', 'message', 'action', 'action', 'text', 'text', 'action', 'text', 'message', 'command']


Top-k attention probs:

[0.0381113700568676, 0.026985719799995422, 0.024860963225364685, 0.022271033376455307, 0.02164999023079872, 0.019405843690037727, 0.01925051584839821, 0.018395178020000458, 0.017099155113101006, 0.016185710206627846]
