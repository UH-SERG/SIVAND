
Original sample:

{"has_bug": false, "bug_kind": 0, "bug_kind_name": "NONE", "source_tokens": ["#NEWLINE#", "def predict_raw(", "self", ",", "input_data", ")", ":", "#NEWLINE#", "#INDENT#", "input_data", "=", "format_data", "(", "input_data", ")", "#NEWLINE#", "super", "(", "PNN", ",", "self", ")", ".", "predict", "(", "input_data", ")", "#NEWLINE#", "if", "(", "self", ".", "classes", "is", "None", ")", ":", "#NEWLINE#", "#INDENT#", "raise", "ValueError", "(", "'Train network before predict data'", ")", "#NEWLINE#", "#UNINDENT#", "input_data_size", "=", "input_data", ".", "shape", "[", "1", "]", "#NEWLINE#", "train_data_size", "=", "self", ".", "input_train", ".", "shape", "[", "1", "]", "#NEWLINE#", "if", "(", "input_data_size", "!=", "train_data_size", ")", ":", "#NEWLINE#", "#INDENT#", "raise", "ValueError", "(", "'Input data must contains {0} features, got {1}'", ".", "format", "(", "train_data_size", ",", "input_data_size", ")", ")", "#NEWLINE#", "#UNINDENT#", "class_ratios", "=", "self", ".", "class_ratios", "#NEWLINE#", "pdf_outputs", "=", "pdf_between_data", "(", "self", ".", "input_train", ",", "input_data", ",", "self", ".", "std", ")", "#NEWLINE#", "return", "(", "dot", "(", "self", ".", "row_comb_matrix", ",", "pdf_outputs", ")", "/", "class_ratios", ".", "reshape", "(", "(", "class_ratios", ".", "size", ",", "1", ")", ")", ")"], "error_location": [0], "repair_targets": [], "repair_candidates": [4, 9, 13, 25, 48, 103, 46, 68, 84, 55, 70, 82, 2, 20, 30, 57, 91, 99, 105, 114, 95, 118, 89, 93, 121, 126], "provenances": [{"datasetProvenance": {"datasetName": "ETHPy150Open", "filepath": "itdxer/neupy/neupy/algorithms/rbfn/pnn.py", "license": "mit", "note": "license: bigquery_api"}}], "txt_file": "eval__VARIABLE_MISUSE__SStuB.txt-00000-of-00300", "js_count": 3020, "results": {"model": "transformer", "prob": {"loc": [[0.6929488778114319, 3.2661657769494923e-06, 1.2647986977754044e-06, 5.4700951324093694e-08, 2.0288248379074503e-06, 5.020781301823263e-08, 8.824342501156934e-08, 7.32620719645638e-08, 5.685081561068728e-08, 3.646622644737363e-06, 7.628126752479147e-08, 1.8522706923818077e-08, 5.91480045386561e-07, 0.0019818583969026804, 1.0165952346596896e-07, 5.541145498000333e-08, 6.749334602318413e-08, 3.6978295980816256e-08, 5.354429958970286e-06, 4.551306531652699e-08, 2.5287363314419053e-07, 6.426676435467016e-08, 4.802591746511098e-08, 3.98615185304152e-09, 6.882876846248109e-07, 0.0034635302145034075, 2.529281175611686e-07, 4.1638507752850273e-08, 5.091099808396393e-08, 8.720322597355334e-08, 3.93591180909425e-05, 7.755985365065499e-08, 7.092943405950791e-07, 1.2661214441322954e-06, 3.738677492037823e-07, 2.729224490849447e-07, 1.8304527316104213e-07, 4.636843442540339e-08, 3.656596092582731e-08, 1.2643869240491767e-07, 4.665453090524352e-08, 4.3947668615373914e-08, 0.029721975326538086, 1.3929255260336504e-07, 9.515373733393062e-08, 5.6575842677375476e-08, 1.6447670532215852e-06, 1.4229453171310524e-08, 0.006526687648147345, 1.34255998318622e-07, 1.882107270034794e-08, 4.424996546958937e-08, 4.258651097188704e-05, 1.2562857421016815e-07, 5.571911998458745e-08, 8.07226285814977e-07, 1.371939788441523e-07, 7.559722871519625e-05, 8.823728592233238e-08, 2.7494419896356703e-07, 1.8584023564471863e-07, 2.16943458752894e-08, 2.0112142351536022e-07, 0.004554344341158867, 3.20230043371339e-07, 1.2151444650498888e-07, 1.4512285417822568e-07, 3.2234913760476047e-07, 0.015269648283720016, 5.26290534708096e-07, 0.03226730599999428, 2.9167441795152627e-08, 2.049415712690461e-07, 1.2023765805224684e-07, 9.061242423058502e-08, 2.3905408852442633e-07, 7.348936037487874e-08, 3.648006696721495e-08, 4.0973753812068026e-07, 1.6697420335276547e-07, 5.855753215655568e-08, 5.862937086931197e-07, 0.038105156272649765, 1.3304628510013572e-07, 0.019955504685640335, 2.892929842346348e-07, 1.471583175316482e-07, 8.657139716206075e-08, 6.05822876309503e-08, 2.457403297739802e-06, 7.389754586029085e-08, 0.00012575990695040673, 1.2275748417778232e-07, 1.1333221664244775e-05, 3.3245254371649935e-07, 5.868264906894183e-06, 1.932440198970653e-07, 1.0408853086119052e-06, 3.847245295673929e-07, 0.00010800203017424792, 3.828637318292749e-07, 1.2872060324298218e-06, 1.798032258193416e-06, 0.07520289719104767, 6.515682002827816e-07, 9.196362225338817e-05, 3.9524735484519624e-07, 2.0505963505002e-07, 2.547898532156978e-07, 4.338579628893058e-07, 2.1742646794109532e-08, 4.020108335112127e-08, 5.272862608762807e-07, 2.7786060741163965e-07, 0.0003221077786292881, 3.2166221330953704e-07, 7.350176474574255e-06, 7.30408942217764e-07, 0.0007036259048618376, 1.44164147286574e-07, 3.938986878893047e-07, 8.17988911876455e-05, 2.8990999112465943e-07, 5.120451973539275e-08, 3.7460827684299147e-07, 1.1021065802196972e-06, 0.03800707682967186, 9.211492510985408e-07, 4.067478869274055e-07, 1.0991697081408347e-06, 0.04032887518405914, 1.4868076050333912e-06, 1.4555398593074642e-06, 1.3761414265900385e-06]], "pointer": [[0.0, 0.0, 0.03139440342783928, 0.0, 0.13315889239311218, 0.0, 0.0, 0.0, 0.0, 0.09600852429866791, 0.0, 0.0, 0.0, 0.016802361235022545, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.010777664370834827, 0.0, 0.0, 0.0, 0.0, 0.08694016188383102, 0.0, 0.0, 0.0, 0.0, 0.0002938403922598809, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.15853528678417206, 0.0, 0.01413387805223465, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.11332479119300842, 0.0, 0.0007099564536474645, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.019371166825294495, 0.0, 0.0004359472659416497, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.010224821045994759, 0.0, 0.00394453713670373, 0.0, 0.0, 0.0, 0.0, 0.12237241119146347, 0.0, 0.004875984508544207, 0.0, 0.004135130904614925, 0.0, 0.08517347276210785, 0.0, 0.0, 0.0, 0.0006804904551245272, 0.0, 0.0, 0.0, 0.06488693505525589, 0.0, 0.0007483111694455147, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.00013300689170137048, 0.0, 0.0, 0.0, 0.01642218604683876, 0.0, 0.0, 0.0010442642960697412, 0.0, 0.0, 0.0, 0.0, 0.0034715861547738314, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]], "target": [0.0]}, "loss": [0.36679884791374207, 0.0], "acc": [1.0, 0.0, 0.0, 0.0]}}


All source tokens:

['#NEWLINE#', 'def predict_raw(', 'self', ',', 'input_data', ')', ':', '#NEWLINE#', '#INDENT#', 'input_data', '=', 'format_data', '(', 'input_data', ')', '#NEWLINE#', 'super', '(', 'PNN', ',', 'self', ')', '.', 'predict', '(', 'input_data', ')', '#NEWLINE#', 'if', '(', 'self', '.', 'classes', 'is', 'None', ')', ':', '#NEWLINE#', '#INDENT#', 'raise', 'ValueError', '(', "'Train network before predict data'", ')', '#NEWLINE#', '#UNINDENT#', 'input_data_size', '=', 'input_data', '.', 'shape', '[', '1', ']', '#NEWLINE#', 'train_data_size', '=', 'self', '.', 'input_train', '.', 'shape', '[', '1', ']', '#NEWLINE#', 'if', '(', 'input_data_size', '!=', 'train_data_size', ')', ':', '#NEWLINE#', '#INDENT#', 'raise', 'ValueError', '(', "'Input data must contains {0} features, got {1}'", '.', 'format', '(', 'train_data_size', ',', 'input_data_size', ')', ')', '#NEWLINE#', '#UNINDENT#', 'class_ratios', '=', 'self', '.', 'class_ratios', '#NEWLINE#', 'pdf_outputs', '=', 'pdf_between_data', '(', 'self', '.', 'input_train', ',', 'input_data', ',', 'self', '.', 'std', ')', '#NEWLINE#', 'return', '(', 'dot', '(', 'self', '.', 'row_comb_matrix', ',', 'pdf_outputs', ')', '/', 'class_ratios', '.', 'reshape', '(', '(', 'class_ratios', '.', 'size', ',', '1', ')', ')', ')']


All attention probs:

[0.011957116425037384, 0.009540422819554806, 0.034864794462919235, 0.014991635456681252, 0.02473459206521511, 0.012962224893271923, 0.00827440619468689, 0.008160872384905815, 0.00762953469529748, 0.025122150778770447, 0.00886616576462984, 0.010928517207503319, 0.0074998135678470135, 0.022579507902264595, 0.005780048668384552, 0.008137308992445469, 0.007103876210749149, 0.006809042301028967, 0.01436547003686428, 0.007046449463814497, 0.01679571345448494, 0.006027000956237316, 0.004549228586256504, 0.006039006169885397, 0.005534018389880657, 0.018258802592754364, 0.00425803242251277, 0.005082423333078623, 0.005036612041294575, 0.003490876406431198, 0.015238787978887558, 0.003495966549962759, 0.0041578467935323715, 0.004138072952628136, 0.004143623169511557, 0.00457786163315177, 0.004262205678969622, 0.005057202186435461, 0.00496123731136322, 0.004585294518619776, 0.0039261337369680405, 0.004604519810527563, 0.010433480143547058, 0.0034321618732064962, 0.004744213540107012, 0.005240863189101219, 0.011507833376526833, 0.004659399390220642, 0.016092250123620033, 0.003615027293562889, 0.0041535524651408195, 0.0026799114421010017, 0.0045165326446294785, 0.0031094492878764868, 0.00450555793941021, 0.014335974119603634, 0.00328819639980793, 0.010442309081554413, 0.002313402481377125, 0.003496043384075165, 0.0027116728015244007, 0.0036501584108918905, 0.0033143700566142797, 0.007090896368026733, 0.0029517104849219322, 0.004406512714922428, 0.004997232463210821, 0.0035122917033731937, 0.019342735409736633, 0.004022466484457254, 0.030643358826637268, 0.004065382294356823, 0.003307006321847439, 0.004277574364095926, 0.004106787033379078, 0.003460868261754513, 0.0039461771957576275, 0.00362616335041821, 0.0053702727891504765, 0.002486464800313115, 0.005052703432738781, 0.0034217576030641794, 0.019829774275422096, 0.003468211507424712, 0.016903428360819817, 0.0033171118702739477, 0.003497849917039275, 0.005737328436225653, 0.004860652144998312, 0.017782125622034073, 0.003468806855380535, 0.009655713103711605, 0.0024297810159623623, 0.0028358586132526398, 0.004896858241409063, 0.014258268289268017, 0.006081054452806711, 0.005413210019469261, 0.00405309209600091, 0.010715795680880547, 0.002673882758244872, 0.004380068741738796, 0.004311392083764076, 0.02628599852323532, 0.004147817846387625, 0.010626358911395073, 0.002366381697356701, 0.0036419308744370937, 0.001960911089554429, 0.004976117052137852, 0.004812050145119429, 0.004639856051653624, 0.006322534754872322, 0.0035824188962578773, 0.011227716691792011, 0.0019601695239543915, 0.0043028974905610085, 0.0032531118486076593, 0.017876852303743362, 0.003318619914352894, 0.0039489902555942535, 0.008856749162077904, 0.0032445562537759542, 0.004274387843906879, 0.00477032084017992, 0.0059740557335317135, 0.02128019370138645, 0.004667580593377352, 0.0055177174508571625, 0.0063592130318284035, 0.01421127188950777, 0.004916842561215162, 0.004321693908423185, 0.0038792781997472048]


Top-k source tokens:

['self', 'train_data_size', 'input_data', 'input_data', 'input_data', 'input_data', 'class_ratios', 'train_data_size', 'input_data_size', 'input_data']


Top-k attention probs:

[0.034864794462919235, 0.030643358826637268, 0.02628599852323532, 0.025122150778770447, 0.02473459206521511, 0.022579507902264595, 0.02128019370138645, 0.019829774275422096, 0.019342735409736633, 0.018258802592754364]
