
Original sample:

{"has_bug": false, "bug_kind": 0, "bug_kind_name": "NONE", "source_tokens": ["#NEWLINE#", "def run_command(", "jboss_config", ",", "command", ",", "fail_on_error", "=", "True", ")", ":", "#NEWLINE#", "#INDENT#", "'\\n    Execute a command against jboss instance through the CLI interface.\\n\\n    jboss_config\\n           Configuration dictionary with properties specified above.\\n    command\\n           Command to execute against jboss instance\\n    fail_on_error (default=True)\\n           Is true, raise CommandExecutionException exception if execution fails.\\n           If false, \\'success\\' property of the returned dictionary is set to False\\n\\n    CLI Example:\\n\\n    .. code-block:: bash\\n\\n        salt \\'*\\' jboss7_cli.run_command \\'{\"cli_path\": \"integration.modules.sysmod.SysModuleTest.test_valid_docs\", \"controller\": \"10.11.12.13:9999\", \"cli_user\": \"jbossadm\", \"cli_password\": \"jbossadm\"}\\' my_command\\n    '", "#NEWLINE#", "cli_command_result", "=", "__call_cli", "(", "jboss_config", ",", "command", ")", "#NEWLINE#", "if", "(", "cli_command_result", "[", "'retcode'", "]", "==", "0", ")", ":", "#NEWLINE#", "#INDENT#", "cli_command_result", "[", "'success'", "]", "=", "True", "#NEWLINE#", "#UNINDENT#", "else", ":", "#NEWLINE#", "#INDENT#", "if", "fail_on_error", ":", "#NEWLINE#", "#INDENT#", "raise", "CommandExecutionError", "(", "\"Command execution failed, return code={retcode}, stdout='{stdout}', stderr='{stderr}' \"", ".", "format", "(", "**", "cli_command_result", ")", ")", "#NEWLINE#", "#UNINDENT#", "else", ":", "#NEWLINE#", "#INDENT#", "cli_command_result", "[", "'success'", "]", "=", "False", "#NEWLINE#", "#UNINDENT#", "#UNINDENT#", "return", "cli_command_result"], "error_location": [0], "repair_targets": [], "repair_candidates": [6, 49, 4, 21, 15, 26, 36, 61, 70, 80, 2, 19], "provenances": [{"datasetProvenance": {"datasetName": "ETHPy150Open", "filepath": "saltstack/salt/salt/modules/jboss7_cli.py", "license": "apache-2.0", "note": "license: manual_eval"}}], "txt_file": "eval__VARIABLE_MISUSE__SStuB.txt-00000-of-00300", "js_count": 1129, "results": {"model": "transformer", "prob": {"loc": [[0.5574122071266174, 2.012882987401099e-06, 3.7259565033309627e-07, 4.145119092413552e-08, 2.7545459033717634e-06, 2.899505169295935e-08, 5.149848334440321e-07, 1.7242511773929436e-07, 3.620220638822502e-07, 2.6966475275003177e-08, 9.473986040120508e-08, 1.7941795249498682e-07, 1.304575221183768e-07, 2.758000903213542e-07, 1.877502882052795e-07, 1.3427912790575647e-06, 4.2508865760737535e-08, 3.0117895732928446e-08, 1.346970321947083e-07, 6.062313332222402e-05, 1.4754745336631458e-07, 0.00018906916375271976, 2.6938522523778374e-07, 1.099049740105329e-07, 8.597647394026353e-08, 1.1184693704535675e-07, 0.010594186373054981, 1.5225194829326938e-06, 1.329473633404632e-07, 1.571830239299743e-07, 2.655228854564484e-07, 6.304276780610962e-07, 1.5637355943454168e-07, 4.4679080701826024e-07, 1.6042906736402074e-07, 7.775945931598471e-08, 2.6688108846428804e-05, 1.5992415001164773e-06, 1.7222495785063074e-07, 9.895604335952157e-08, 2.8041381483490113e-07, 1.4074271348363254e-05, 4.936782715958543e-07, 2.426515379738703e-07, 1.7538947361117607e-07, 1.8628691123012686e-07, 4.427358817338245e-07, 2.4132640419338713e-07, 4.450897108654317e-07, 0.00426476402208209, 5.104843125991465e-07, 5.578859827437554e-07, 2.932616780526587e-07, 7.086077857820783e-08, 1.257705264379183e-07, 3.1002412015368463e-07, 2.594335228423006e-06, 4.302506795283989e-07, 8.678964036334946e-08, 7.924309102236293e-06, 5.921501156080922e-07, 0.4137447774410248, 1.698577534625656e-06, 4.2354344031991786e-07, 2.7076501396550157e-07, 1.315293758352709e-07, 8.381655192124526e-08, 2.570582466887572e-07, 2.0563739155932126e-07, 1.19772550988273e-07, 3.2947184081422165e-05, 4.5183548991190037e-07, 4.901331180917623e-07, 1.437333736475921e-07, 4.5547523086497677e-07, 6.0466909417300485e-06, 5.537281708711816e-07, 2.6912047701443953e-07, 2.499564573099633e-07, 1.0194818855779886e-07, 0.013617810793220997]], "pointer": [[0.0, 0.0, 0.035988546907901764, 0.0, 0.22706758975982666, 0.0, 0.10229043662548065, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.029390832409262657, 0.0, 0.0, 0.0, 0.00838301982730627, 0.0, 0.0642063170671463, 0.0, 0.0, 0.0, 0.0, 0.0004481132491491735, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.002084387233480811, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.5275185704231262, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0007239847909659147, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0018115144921466708, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 8.66282352944836e-05]], "target": [0.0]}, "loss": [0.5844501256942749, 0.0], "acc": [1.0, 0.0, 0.0, 0.0]}}


All source tokens:

['#NEWLINE#', 'def run_command(', 'jboss_config', ',', 'command', ',', 'fail_on_error', '=', 'True', ')', ':', '#NEWLINE#', '#INDENT#', '\'\\n    Execute a command against jboss instance through the CLI interface.\\n\\n    jboss_config\\n           Configuration dictionary with properties specified above.\\n    command\\n           Command to execute against jboss instance\\n    fail_on_error (default=True)\\n           Is true, raise CommandExecutionException exception if execution fails.\\n           If false, \\\'success\\\' property of the returned dictionary is set to False\\n\\n    CLI Example:\\n\\n    .. code-block:: bash\\n\\n        salt \\\'*\\\' jboss7_cli.run_command \\\'{"cli_path": "integration.modules.sysmod.SysModuleTest.test_valid_docs", "controller": "10.11.12.13:9999", "cli_user": "jbossadm", "cli_password": "jbossadm"}\\\' my_command\\n    \'', '#NEWLINE#', 'cli_command_result', '=', '__call_cli', '(', 'jboss_config', ',', 'command', ')', '#NEWLINE#', 'if', '(', 'cli_command_result', '[', "'retcode'", ']', '==', '0', ')', ':', '#NEWLINE#', '#INDENT#', 'cli_command_result', '[', "'success'", ']', '=', 'True', '#NEWLINE#', '#UNINDENT#', 'else', ':', '#NEWLINE#', '#INDENT#', 'if', 'fail_on_error', ':', '#NEWLINE#', '#INDENT#', 'raise', 'CommandExecutionError', '(', '"Command execution failed, return code={retcode}, stdout=\'{stdout}\', stderr=\'{stderr}\' "', '.', 'format', '(', '**', 'cli_command_result', ')', ')', '#NEWLINE#', '#UNINDENT#', 'else', ':', '#NEWLINE#', '#INDENT#', 'cli_command_result', '[', "'success'", ']', '=', 'False', '#NEWLINE#', '#UNINDENT#', '#UNINDENT#', 'return', 'cli_command_result']


All attention probs:

[0.019284604117274284, 0.01255661342293024, 0.040856923907995224, 0.015582161955535412, 0.03290095552802086, 0.013541136868298054, 0.02763085439801216, 0.010438220575451851, 0.014534196816384792, 0.011129271239042282, 0.013586106710135937, 0.013880731537938118, 0.01153607852756977, 0.01043732836842537, 0.011762360110878944, 0.04810978099703789, 0.015047997236251831, 0.009899425320327282, 0.007789377588778734, 0.021254820749163628, 0.0073342896066606045, 0.03004484623670578, 0.0056111873127520084, 0.009018613025546074, 0.009636501781642437, 0.005721409805119038, 0.02225894294679165, 0.005704366602003574, 0.008014680817723274, 0.0049134911969304085, 0.005554748699069023, 0.009319256991147995, 0.005221374798566103, 0.006893724203109741, 0.008001097477972507, 0.007842334918677807, 0.015896974131464958, 0.007994238287210464, 0.0093849441036582, 0.006359187886118889, 0.005398645997047424, 0.007743292022496462, 0.010844212956726551, 0.009254380129277706, 0.01756126433610916, 0.007336892653256655, 0.007330502849072218, 0.007013608235865831, 0.008177559822797775, 0.025790320709347725, 0.006130795925855637, 0.00569701986387372, 0.006204391364008188, 0.008830297738313675, 0.005749024450778961, 0.007493110839277506, 0.0059777237474918365, 0.004030469339340925, 0.006655456498265266, 0.008846626617014408, 0.007286739535629749, 0.05412517115473747, 0.005772041622549295, 0.00543469563126564, 0.009608297608792782, 0.010579456575214863, 0.01689891703426838, 0.012203987687826157, 0.010308908298611641, 0.009254003874957561, 0.017343439161777496, 0.007743006572127342, 0.009801803156733513, 0.007143805269151926, 0.0070033688098192215, 0.007624348625540733, 0.009686046279966831, 0.008057848550379276, 0.00802215002477169, 0.012131743133068085, 0.03941948711872101]


Top-k source tokens:

['cli_command_result', 'cli_command_result', 'jboss_config', 'cli_command_result', 'command', 'command', 'fail_on_error', 'fail_on_error', 'cli_command_result', 'jboss_config']


Top-k attention probs:

[0.05412517115473747, 0.04810978099703789, 0.040856923907995224, 0.03941948711872101, 0.03290095552802086, 0.03004484623670578, 0.02763085439801216, 0.025790320709347725, 0.02225894294679165, 0.021254820749163628]
