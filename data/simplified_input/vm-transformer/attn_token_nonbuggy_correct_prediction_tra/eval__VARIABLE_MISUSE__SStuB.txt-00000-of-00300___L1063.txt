
Original sample:

{"has_bug": false, "bug_kind": 0, "bug_kind_name": "NONE", "source_tokens": ["#NEWLINE#", "def parse(", "self", ")", ":", "#NEWLINE#", "#INDENT#", "'\\n        Parse the relevant parts and make it easily\\n        available to the command\\n        '", "#NEWLINE#", "self", ".", "args", "=", "self", ".", "args", ".", "strip", "(", ")", "#NEWLINE#", "self", ".", "tradehandler", "=", "self", ".", "caller", ".", "ndb", ".", "tradehandler", "#NEWLINE#", "self", ".", "partA", "=", "self", ".", "tradehandler", ".", "partA", "#NEWLINE#", "self", ".", "partB", "=", "self", ".", "tradehandler", ".", "partB", "#NEWLINE#", "self", ".", "other", "=", "self", ".", "tradehandler", ".", "get_other", "(", "self", ".", "caller", ")", "#NEWLINE#", "self", ".", "msg_other", "=", "self", ".", "tradehandler", ".", "msg", "#NEWLINE#", "self", ".", "trade_started", "=", "self", ".", "tradehandler", ".", "trade_started", "#NEWLINE#", "self", ".", "emote", "=", "''", "#NEWLINE#", "self", ".", "str_caller", "=", "'Your trade action: %s'", "#NEWLINE#", "self", ".", "str_other", "=", "(", "(", "'%s:s trade action: '", "%", "self", ".", "caller", ".", "key", ")", "+", "'%s'", ")", "#NEWLINE#", "if", "(", "':'", "in", "self", ".", "args", ")", ":", "#NEWLINE#", "#INDENT#", "(", "self", ".", "args", ",", "self", ".", "emote", ")", "=", "[", "part", ".", "strip", "(", ")", "for", "part", "in", "self", ".", "args", ".", "rsplit", "(", "':'", ",", "1", ")", "]", "#NEWLINE#", "self", ".", "str_caller", "=", "(", "(", "'You say, \"'", "+", "self", ".", "emote", ")", "+", "'\"\\n  [%s]'", ")", "#NEWLINE#", "if", "self", ".", "caller", ".", "has_player", ":", "#NEWLINE#", "#INDENT#", "self", ".", "str_other", "=", "(", "(", "(", "'{c%s{n says, \"'", "%", "self", ".", "caller", ".", "key", ")", "+", "self", ".", "emote", ")", "+", "'\"\\n  [%s]'", ")", "#NEWLINE#", "#UNINDENT#", "else", ":", "#NEWLINE#", "#INDENT#", "self", ".", "str_other", "=", "(", "(", "(", "'%s says, \"'", "%", "self", ".", "caller", ".", "key", ")", "+", "self", ".", "emote", ")", "+", "'\"\\n  [%s]'", ")"], "error_location": [0], "repair_targets": [], "repair_candidates": [2, 9, 13, 21, 25, 33, 37, 43, 47, 53, 57, 63, 68, 72, 78, 82, 88, 94, 100, 108, 122, 130, 134, 148, 160, 168, 177, 185, 194, 201, 214, 223, 230, 140, 146], "provenances": [{"datasetProvenance": {"datasetName": "ETHPy150Open", "filepath": "evennia/evennia/evennia/contrib/barter.py", "license": "bsd-3-clause", "note": "license: manual_eval"}}], "txt_file": "eval__VARIABLE_MISUSE__SStuB.txt-00000-of-00300", "js_count": 1063, "results": {"model": "transformer", "prob": {"loc": [[0.9987576007843018, 1.567784352118906e-06, 1.2381011060824676e-07, 1.7051993594918713e-08, 3.4805175630481244e-08, 5.2305594522294996e-08, 4.138012599241847e-08, 1.649174308226975e-08, 2.631741402581156e-08, 7.617303054985314e-08, 3.010057980645797e-08, 3.842161788725207e-08, 4.389585228636861e-08, 1.2954936210007872e-05, 5.8197059615849867e-08, 6.110037276130242e-08, 6.948993558353322e-08, 4.2409375566876406e-08, 1.1862047699651157e-07, 1.1906089270041775e-07, 2.025101863978307e-08, 3.212586108247706e-08, 3.307289730969387e-08, 4.8505568450707415e-09, 5.829026576975593e-06, 3.0707135010743514e-05, 1.9243833548898692e-07, 4.600509484475879e-08, 2.3579229946335545e-07, 7.544284130744927e-08, 4.090476863893855e-07, 1.7453105627396326e-08, 1.683807049346342e-08, 8.752791558208628e-08, 1.9826400077249673e-08, 9.024363478715713e-09, 4.754183535737866e-08, 2.0547977328533307e-05, 1.6333213181951578e-07, 5.726529650473822e-08, 2.790284838738444e-07, 2.6981675560477925e-08, 1.2630775536592864e-08, 8.37130116337903e-08, 2.129189269339804e-08, 1.3948496579985203e-08, 4.093783800840356e-08, 1.8939670553663746e-05, 3.0949473739383393e-07, 7.457685313738693e-08, 4.598705061198416e-07, 6.598541091307197e-08, 5.088386600959893e-08, 4.591699465095189e-08, 3.4678876659199886e-08, 4.852833690449643e-09, 3.066973874865653e-08, 9.665081961429678e-06, 1.0074997192077717e-07, 1.7425332288212303e-08, 1.1241679942486371e-07, 7.950646363497071e-09, 7.59498988145424e-08, 2.293624129379168e-05, 1.0821622709045187e-07, 1.6597139662621885e-08, 4.6558842115018706e-08, 1.8007540347753093e-08, 7.078755714928775e-08, 1.2000298532655052e-08, 7.021535353146646e-09, 9.802063516417547e-08, 2.4321105229319073e-05, 1.848036959017918e-07, 4.4201673432553434e-08, 2.997869898990757e-07, 8.738663126450774e-08, 2.701427348483776e-08, 1.0428393437678096e-07, 2.1766652480437187e-08, 1.1202632599349727e-08, 9.5419999013302e-08, 3.388363984413445e-05, 3.8983429817562865e-07, 6.874392255440398e-08, 3.329173807742336e-07, 4.470036785164666e-08, 4.1365449732211346e-08, 1.219527092644057e-07, 3.3386310605010294e-08, 5.169967209894821e-08, 5.941420866406588e-08, 2.10157466540295e-07, 2.9458540495852503e-08, 1.6917898904011963e-07, 3.630802325460536e-08, 3.1716780313217896e-08, 3.3223892614842043e-07, 1.4525390952258022e-06, 4.217720928068047e-08, 2.109562586838365e-07, 3.362288225616794e-08, 9.913370746517103e-08, 3.131611947537749e-07, 2.0031556857702526e-07, 9.623347523302073e-07, 5.599898145192128e-07, 1.912033411599623e-07, 7.606019062222913e-05, 3.271841535479325e-07, 6.907644944931235e-08, 3.7393695606624533e-07, 2.7887497822121077e-07, 6.420299314413569e-08, 9.850192839166994e-08, 5.703548140445491e-07, 6.579627154223999e-08, 4.981295731454338e-08, 4.150985333239987e-08, 1.0499924485429801e-07, 1.9805811746209656e-07, 2.1747223399870563e-07, 3.180145358783193e-05, 2.3882805066932633e-07, 4.477693096305302e-07, 3.613061494434078e-08, 2.3305632623760175e-07, 5.224417520821589e-08, 2.7578256123206302e-08, 8.016796115839497e-09, 2.448629675200209e-05, 1.4376381329839205e-07, 8.331404615091742e-07, 9.764686836888359e-08, 1.0772024324978702e-05, 2.2501733099034027e-07, 4.090586287475162e-07, 2.1362305702155027e-08, 1.6066120167579356e-07, 6.165519153000787e-07, 3.394227314856835e-05, 3.309887972591241e-07, 9.129908562499622e-08, 1.049614525072684e-06, 6.31168177278596e-07, 2.75032471108716e-06, 1.6576109374000225e-07, 7.939569002246571e-09, 1.8695753169595264e-05, 1.3072876470232586e-07, 5.999987138238794e-07, 1.482741822655953e-07, 1.145572952054863e-07, 6.646981205449265e-07, 9.250165931007359e-07, 1.0280609075152825e-07, 1.3141609542799415e-06, 7.610535135427199e-08, 1.1342152106408321e-07, 3.756445110525419e-08, 2.285508173827111e-07, 5.954989390488663e-08, 9.090173307413352e-07, 1.221108618665312e-07, 2.0805859435313323e-07, 8.975740684036282e-07, 6.058769486116944e-07, 2.605416682399664e-07, 3.129928154521622e-05, 2.9494029263332777e-07, 8.16987835605687e-07, 5.4678377381378596e-08, 1.8660284695215523e-07, 3.0508437021126156e-07, 8.525900341282977e-08, 1.3647202479205589e-08, 2.152591171977747e-08, 8.175154653145e-05, 1.1933906307604047e-07, 2.208547726922916e-07, 2.759945232355676e-07, 1.2421352835190191e-07, 4.42172108705563e-07, 4.2389562082689736e-08, 2.313850799851025e-08, 5.411750407802174e-07, 6.202149904765974e-08, 8.220413860726694e-07, 4.98431120377063e-07, 5.355929033612483e-07, 1.0779006061056862e-06, 2.2100239220890217e-06, 1.291464172936685e-06, 5.502532758328016e-07, 0.0003108965465798974, 2.1599457511456421e-07, 4.3981822273053695e-07, 6.205217459864798e-07, 3.0597419709010865e-07, 5.469214414688395e-08, 6.187876522290026e-08, 2.533822953409981e-05, 2.5102255563069775e-07, 4.887747877546644e-07, 4.163330302731083e-08, 1.2704364849014382e-07, 1.1505914017106988e-06, 2.2545208366864244e-07, 4.3216385137156976e-08, 5.998124663619819e-08, 5.6142262394587306e-08, 2.891881933919649e-07, 8.868813239359952e-08, 4.827651167715885e-08, 1.722582169350062e-06, 2.6434181066292695e-08, 3.407333224458853e-07, 3.3703963708830997e-07, 3.151448311200511e-07, 6.60630860238598e-07, 1.7092614825742203e-06, 1.0081653272209223e-06, 6.340761160572583e-07, 0.000273569137789309, 1.502648387941008e-07, 2.68119350721463e-07, 4.0746070339992e-07, 2.2474110039638617e-07, 1.5624763705091027e-08, 6.006091979315897e-08, 8.833239553496242e-05, 1.4595062225453148e-07, 3.8659811707475455e-07, 2.5446048823596357e-08, 1.042658297478738e-07, 2.226988584652645e-07, 9.204639184190455e-08]], "pointer": [[0.0, 0.0, 0.16987109184265137, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.05253037065267563, 0.0, 0.0, 0.0, 0.0040593985468149185, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.04382646083831787, 0.0, 0.0, 0.0, 0.006993513088673353, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.03436356782913208, 0.0, 0.0, 0.0, 0.005342180375009775, 0.0, 0.0, 0.0, 0.0, 0.0, 0.022575940936803818, 0.0, 0.0, 0.0, 0.0034302042331546545, 0.0, 0.0, 0.0, 0.0, 0.0, 0.03728993609547615, 0.0, 0.0, 0.0, 0.014596695080399513, 0.0, 0.0, 0.0, 0.0, 0.0, 0.012174532748758793, 0.0, 0.0, 0.0, 0.0, 0.030943674966692924, 0.0, 0.0, 0.0, 0.005291294306516647, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0184469036757946, 0.0, 0.0, 0.0, 0.00253469031304121, 0.0, 0.0, 0.0, 0.0, 0.0, 0.02088567428290844, 0.0, 0.0, 0.0, 0.0, 0.0, 0.03153166174888611, 0.0, 0.0, 0.0, 0.0, 0.0, 0.033992137759923935, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.005029985215514898, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.005387063603848219, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.00781898945569992, 0.0, 0.0, 0.0, 0.017890848219394684, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0004355163255240768, 0.0, 0.0, 0.0, 0.0, 0.0, 0.2855735421180725, 0.0, 0.004869680851697922, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.018146445974707603, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.006601130124181509, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.020918553695082664, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.031814903020858765, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.006145453080534935, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.014749756082892418, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.010953495278954506, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.004056976176798344, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.008927710354328156, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]], "target": [0.0]}, "loss": [0.0012432949151843786, 0.0], "acc": [1.0, 0.0, 0.0, 0.0]}}


All source tokens:

['#NEWLINE#', 'def parse(', 'self', ')', ':', '#NEWLINE#', '#INDENT#', "'\\n        Parse the relevant parts and make it easily\\n        available to the command\\n        '", '#NEWLINE#', 'self', '.', 'args', '=', 'self', '.', 'args', '.', 'strip', '(', ')', '#NEWLINE#', 'self', '.', 'tradehandler', '=', 'self', '.', 'caller', '.', 'ndb', '.', 'tradehandler', '#NEWLINE#', 'self', '.', 'partA', '=', 'self', '.', 'tradehandler', '.', 'partA', '#NEWLINE#', 'self', '.', 'partB', '=', 'self', '.', 'tradehandler', '.', 'partB', '#NEWLINE#', 'self', '.', 'other', '=', 'self', '.', 'tradehandler', '.', 'get_other', '(', 'self', '.', 'caller', ')', '#NEWLINE#', 'self', '.', 'msg_other', '=', 'self', '.', 'tradehandler', '.', 'msg', '#NEWLINE#', 'self', '.', 'trade_started', '=', 'self', '.', 'tradehandler', '.', 'trade_started', '#NEWLINE#', 'self', '.', 'emote', '=', "''", '#NEWLINE#', 'self', '.', 'str_caller', '=', "'Your trade action: %s'", '#NEWLINE#', 'self', '.', 'str_other', '=', '(', '(', "'%s:s trade action: '", '%', 'self', '.', 'caller', '.', 'key', ')', '+', "'%s'", ')', '#NEWLINE#', 'if', '(', "':'", 'in', 'self', '.', 'args', ')', ':', '#NEWLINE#', '#INDENT#', '(', 'self', '.', 'args', ',', 'self', '.', 'emote', ')', '=', '[', 'part', '.', 'strip', '(', ')', 'for', 'part', 'in', 'self', '.', 'args', '.', 'rsplit', '(', "':'", ',', '1', ')', ']', '#NEWLINE#', 'self', '.', 'str_caller', '=', '(', '(', '\'You say, "\'', '+', 'self', '.', 'emote', ')', '+', '\'"\\n  [%s]\'', ')', '#NEWLINE#', 'if', 'self', '.', 'caller', '.', 'has_player', ':', '#NEWLINE#', '#INDENT#', 'self', '.', 'str_other', '=', '(', '(', '(', '\'{c%s{n says, "\'', '%', 'self', '.', 'caller', '.', 'key', ')', '+', 'self', '.', 'emote', ')', '+', '\'"\\n  [%s]\'', ')', '#NEWLINE#', '#UNINDENT#', 'else', ':', '#NEWLINE#', '#INDENT#', 'self', '.', 'str_other', '=', '(', '(', '(', '\'%s says, "\'', '%', 'self', '.', 'caller', '.', 'key', ')', '+', 'self', '.', 'emote', ')', '+', '\'"\\n  [%s]\'', ')']


All attention probs:

[0.020017394796013832, 0.007127650547772646, 0.039521247148513794, 0.01477647665888071, 0.010074927471578121, 0.008955220691859722, 0.007503374945372343, 0.008436467498540878, 0.006384161300957203, 0.01829124614596367, 0.006459433119744062, 0.009026902727782726, 0.006530705839395523, 0.017382176592946053, 0.005995592102408409, 0.00714432168751955, 0.005643244832754135, 0.0053277150727808475, 0.005448519717901945, 0.005390457808971405, 0.006261846981942654, 0.01195299718528986, 0.00381588377058506, 0.005027547013014555, 0.005234862677752972, 0.012680321000516415, 0.0031869052909314632, 0.003547864966094494, 0.0033900889102369547, 0.004000104498118162, 0.0033281308133155107, 0.0036018232349306345, 0.004517246503382921, 0.0087639344856143, 0.002636329270899296, 0.0030146792996674776, 0.0029221326112747192, 0.010329512879252434, 0.0031647570431232452, 0.0039782277308404446, 0.0034516106825321913, 0.0038946750573813915, 0.005387771874666214, 0.009419667534530163, 0.0025560043286532164, 0.0033023450523614883, 0.0025821614544838667, 0.009212401695549488, 0.0025406545028090477, 0.0031972366850823164, 0.0025968383997678757, 0.002323606749996543, 0.003138273488730192, 0.005111655220389366, 0.002050120383501053, 0.0028911842964589596, 0.002141611883416772, 0.006736116949468851, 0.0017960306722670794, 0.0022537854965776205, 0.0019649406895041466, 0.0018744540866464376, 0.0020841334480792284, 0.011193990707397461, 0.001918938709422946, 0.002904332708567381, 0.002511458471417427, 0.003843236481770873, 0.006391441915184259, 0.002358619589358568, 0.004455424379557371, 0.0025021019391715527, 0.0084398053586483, 0.0020941453985869884, 0.0031908333767205477, 0.0020410201977938414, 0.0022516874596476555, 0.003468677867203951, 0.005076677538454533, 0.0019882514607161283, 0.0026190378703176975, 0.0022601066157221794, 0.009653887711465359, 0.0017823934322223067, 0.0022568071726709604, 0.0018983421614393592, 0.0024082560557872057, 0.003788845846429467, 0.005962450988590717, 0.0018816333031281829, 0.003318255767226219, 0.0021256227046251297, 0.0023156425449997187, 0.0027430274058133364, 0.004540171939879656, 0.001769869471900165, 0.0028245272114872932, 0.002257018815726042, 0.005172327160835266, 0.003470228286460042, 0.0047812326811254025, 0.0018045594915747643, 0.00419197091832757, 0.0029406659305095673, 0.00238201511092484, 0.002090070629492402, 0.00265128375031054, 0.0019585357513278723, 0.0071758064441382885, 0.0016134672332555056, 0.003243552055209875, 0.0024007728789001703, 0.003462140215560794, 0.0020422632806003094, 0.0022376582492142916, 0.003365178592503071, 0.002154781948775053, 0.0027498777490109205, 0.0033750715665519238, 0.0025969897396862507, 0.003078809008002281, 0.002333704847842455, 0.011584901250898838, 0.0019457595190033317, 0.0021985520143061876, 0.0022604421246796846, 0.0024789052549749613, 0.0030589529778808355, 0.0031033996492624283, 0.003070264821872115, 0.008568446151912212, 0.0016093857120722532, 0.0022257722448557615, 0.0022326556500047445, 0.005858858581632376, 0.0016031949780881405, 0.002507368801161647, 0.0019206501310691237, 0.0023364501539617777, 0.002203172305598855, 0.013201834633946419, 0.0016489140689373016, 0.0017903532134369016, 0.002840368077158928, 0.002105886349454522, 0.00298252678476274, 0.011460082605481148, 0.00268240156583488, 0.00756114162504673, 0.0016924469964578748, 0.0023945155553519726, 0.00198403955437243, 0.002257460029795766, 0.0028198380023241043, 0.00349580985493958, 0.00267283758148551, 0.004890515003353357, 0.002216425957158208, 0.00249108811840415, 0.003768250346183777, 0.0062901596538722515, 0.001815567840822041, 0.004515132866799831, 0.002180058741942048, 0.0019198948284611106, 0.0020918860100209713, 0.0024200158659368753, 0.0019436731236055493, 0.010037588886916637, 0.0017306344816461205, 0.002540130401030183, 0.0017596026882529259, 0.0025196520145982504, 0.0032110775355249643, 0.002757928567007184, 0.003324163379147649, 0.002826835261657834, 0.008417101576924324, 0.0015205411473289132, 0.0023037330247461796, 0.001828658045269549, 0.002708726329728961, 0.0027300752699375153, 0.0031254019122570753, 0.0033407239243388176, 0.006860213819891214, 0.0027425976004451513, 0.0048089162446558475, 0.004674044903367758, 0.003261254634708166, 0.002894825302064419, 0.0029372465796768665, 0.0036469786427915096, 0.0030984566546976566, 0.008542192168533802, 0.0021972754038870335, 0.003171140793710947, 0.0020036527421325445, 0.0027112450916320086, 0.0017669323133304715, 0.0020909826271235943, 0.010076538659632206, 0.0017496375367045403, 0.0026441612280905247, 0.0016217506490647793, 0.002265149261802435, 0.002621056279167533, 0.002137512667104602, 0.0034263788256794214, 0.0037967318203300238, 0.008749670349061489, 0.0031423333566635847, 0.0036591000389307737, 0.003380299312993884, 0.005385727621614933, 0.001995996804907918, 0.005077578593045473, 0.0024802424013614655, 0.0019589224830269814, 0.002074894495308399, 0.002376677468419075, 0.0031161438673734665, 0.002432414097711444, 0.008344102650880814, 0.0020897025242447853, 0.0033014360815286636, 0.0024778342340141535, 0.002778861438855529, 0.0033007855527102947, 0.0026054817717522383, 0.009561614133417606, 0.0016510109417140484, 0.0035356965381652117, 0.001964812632650137, 0.0023484902922064066, 0.002635624259710312, 0.0026356240268796682]


Top-k source tokens:

['self', '#NEWLINE#', 'self', 'self', ')', 'part', 'self', 'self', 'self', 'part']


Top-k attention probs:

[0.039521247148513794, 0.020017394796013832, 0.01829124614596367, 0.017382176592946053, 0.01477647665888071, 0.013201834633946419, 0.012680321000516415, 0.01195299718528986, 0.011584901250898838, 0.011460082605481148]
