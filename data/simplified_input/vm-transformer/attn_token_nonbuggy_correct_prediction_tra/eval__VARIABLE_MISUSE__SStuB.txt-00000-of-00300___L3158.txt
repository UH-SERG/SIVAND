
Original sample:

{"has_bug": false, "bug_kind": 0, "bug_kind_name": "NONE", "source_tokens": ["#NEWLINE#", "def do_POST(", "self", ")", ":", "#NEWLINE#", "#INDENT#", "'Handles the HTTPS POST request.\\n\\n        It was copied out from SimpleXMLRPCServer.py and modified to shutdown the socket cleanly.\\n        '", "#NEWLINE#", "try", ":", "#NEWLINE#", "#INDENT#", "data", "=", "self", ".", "rfile", ".", "read", "(", "int", "(", "self", ".", "headers", "[", "'content-length'", "]", ")", ")", "#NEWLINE#", "response", "=", "self", ".", "server", ".", "_marshaled_dispatch", "(", "data", ",", "getattr", "(", "self", ",", "'_dispatch'", ",", "None", ")", ")", "#NEWLINE#", "#UNINDENT#", "except", ":", "#NEWLINE#", "#INDENT#", "self", ".", "send_response", "(", "500", ")", "#NEWLINE#", "self", ".", "end_headers", "(", ")", "#NEWLINE#", "#UNINDENT#", "else", ":", "#NEWLINE#", "#INDENT#", "self", ".", "send_response", "(", "200", ")", "#NEWLINE#", "self", ".", "send_header", "(", "'Content-type'", ",", "'text/xml'", ")", "#NEWLINE#", "self", ".", "send_header", "(", "'Content-length'", ",", "str", "(", "len", "(", "response", ")", ")", ")", "#NEWLINE#", "self", ".", "end_headers", "(", ")", "#NEWLINE#", "self", ".", "wfile", ".", "write", "(", "response", ")", "#NEWLINE#", "self", ".", "wfile", ".", "flush", "(", ")", "#NEWLINE#", "self", ".", "connection", ".", "shutdown", "(", ")"], "error_location": [0], "repair_targets": [], "repair_candidates": [32, 101, 118, 13, 40, 2, 15, 23, 34, 44, 57, 64, 75, 82, 91, 106, 112, 121, 129], "provenances": [{"datasetProvenance": {"datasetName": "ETHPy150Open", "filepath": "fp7-ofelia/ocf/expedient/doc/plugins/samples/aggregate/sr_manager/src/communications/XmlRpcServer.py", "license": "bsd-3-clause", "note": "license: manual_eval"}}], "txt_file": "eval__VARIABLE_MISUSE__SStuB.txt-00000-of-00300", "js_count": 3158, "results": {"model": "transformer", "prob": {"loc": [[0.9167238473892212, 6.513914740935434e-06, 7.607214911331539e-07, 9.970095504741039e-08, 1.67241779536198e-07, 2.0366906028357334e-07, 1.367465927160083e-07, 2.101394329656614e-07, 6.902935467678617e-08, 1.6071089348201895e-08, 1.0192114530127583e-07, 6.212751912926251e-08, 4.889287907872131e-08, 6.128250333858887e-06, 1.2967666407348588e-07, 4.262598395143868e-06, 5.794689883487081e-08, 2.6947294173851333e-08, 1.155314492962134e-07, 5.1824507352193905e-08, 1.393942170579976e-07, 1.6448619533093733e-07, 3.9799874684831593e-07, 0.0001229946210514754, 2.0458244875953824e-07, 5.502912614474553e-08, 1.0865571908880156e-07, 7.268123454196029e-07, 1.8306448623661709e-07, 1.4170376516631222e-07, 7.621131459245589e-08, 4.320817836855895e-08, 1.8757639281830052e-06, 7.628198517295459e-08, 2.079398427667911e-06, 7.471117413615502e-08, 1.7170872723681896e-08, 1.2066186627635034e-07, 6.368698457492883e-09, 4.428350450780272e-07, 0.0001690240897005424, 8.027112926356494e-06, 7.870626177464146e-07, 2.386701453360729e-06, 0.007945110090076923, 6.359862254612381e-07, 1.2688628885371145e-06, 9.08309289116005e-07, 1.1166600870637922e-06, 6.961167855479289e-07, 2.611668037388881e-07, 1.1187370319021284e-07, 1.2086640310826624e-07, 8.826733477462767e-08, 8.198831125127981e-08, 1.080659473018386e-07, 7.560971937436989e-08, 2.640365153183666e-07, 1.628077228588154e-07, 2.620278927167874e-08, 1.369119900118676e-06, 2.4271957954624668e-05, 7.644530910511094e-07, 2.722854901548999e-07, 3.0971884257269267e-07, 1.5038480682960653e-07, 4.998012315127198e-08, 1.2824169971281663e-05, 1.6726245348763769e-06, 6.162155727906793e-07, 3.297354851383716e-07, 2.3310055041747546e-07, 1.4157416217130958e-06, 4.0221351582658826e-07, 2.1909593783675518e-07, 2.704813368836767e-07, 1.2537877580598433e-07, 1.226105297291724e-07, 1.5872831227170536e-06, 1.431107557436917e-05, 1.760781742632389e-06, 5.472963380270812e-07, 2.658286462065007e-07, 2.1900046931477846e-07, 3.9840408305735764e-08, 1.3059835737294634e-06, 8.308428732561879e-06, 9.535282288197777e-07, 4.7255674871848896e-05, 1.1907116004294949e-06, 3.9501975379607757e-07, 2.398757601440593e-07, 1.9216689395307185e-07, 3.4704978446598034e-08, 2.9500567961804336e-06, 9.68847507465398e-06, 5.0766789172485e-07, 5.27747303635806e-08, 1.7259355900023365e-07, 7.293331805158232e-08, 1.8189632555731805e-06, 0.025601739063858986, 1.7610470877116313e-06, 1.1072329471062403e-06, 4.962507205164002e-07, 2.943274637345894e-07, 2.9659571509910165e-07, 1.0427386598621524e-07, 9.331338191032046e-08, 4.2574870349199045e-06, 2.5708632165333256e-06, 5.494372885550547e-07, 8.65577021613717e-06, 8.823518271583453e-08, 3.6251172730317194e-08, 2.5024021965691645e-07, 3.097291596532159e-07, 1.9699746189871803e-06, 0.04914200305938721, 9.675359251559712e-07, 7.45087788800447e-07, 5.400920599640813e-06, 1.3144222066330258e-07, 1.245974488028878e-07, 3.089565439040598e-07, 1.0429605623585303e-07, 5.521509228856303e-05, 2.4755127014941536e-06, 7.017150664978544e-07, 2.5770123102120124e-06, 1.2536850135802524e-07, 2.0749483553572645e-07, 3.0316371635308315e-07, 6.612658154381279e-08, 1.2504920960054733e-05, 7.858427125029266e-06]], "pointer": [[0.0, 0.0, 0.007478210609406233, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.8071990013122559, 0.0, 0.0009667795384302735, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0010911672143265605, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.04402480274438858, 0.0, 0.0015096527058631182, 0.0, 0.0, 0.0, 0.0, 0.0, 0.07586424797773361, 0.0, 0.0, 0.0, 0.0001930866710608825, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.005359170492738485, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.004055925644934177, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.006104911211878061, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.00839253980666399, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.00391162047162652, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0027173461858183146, 0.0, 0.0, 0.0, 0.0, 0.017392661422491074, 0.0, 0.0, 0.0, 0.0, 0.0, 0.006161218509078026, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0030100520234555006, 0.0, 0.0, 0.0034124983940273523, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0011551034403964877, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]], "target": [0.0]}, "loss": [0.08694900572299957, 0.0], "acc": [1.0, 0.0, 0.0, 0.0]}}


All source tokens:

['#NEWLINE#', 'def do_POST(', 'self', ')', ':', '#NEWLINE#', '#INDENT#', "'Handles the HTTPS POST request.\\n\\n        It was copied out from SimpleXMLRPCServer.py and modified to shutdown the socket cleanly.\\n        '", '#NEWLINE#', 'try', ':', '#NEWLINE#', '#INDENT#', 'data', '=', 'self', '.', 'rfile', '.', 'read', '(', 'int', '(', 'self', '.', 'headers', '[', "'content-length'", ']', ')', ')', '#NEWLINE#', 'response', '=', 'self', '.', 'server', '.', '_marshaled_dispatch', '(', 'data', ',', 'getattr', '(', 'self', ',', "'_dispatch'", ',', 'None', ')', ')', '#NEWLINE#', '#UNINDENT#', 'except', ':', '#NEWLINE#', '#INDENT#', 'self', '.', 'send_response', '(', '500', ')', '#NEWLINE#', 'self', '.', 'end_headers', '(', ')', '#NEWLINE#', '#UNINDENT#', 'else', ':', '#NEWLINE#', '#INDENT#', 'self', '.', 'send_response', '(', '200', ')', '#NEWLINE#', 'self', '.', 'send_header', '(', "'Content-type'", ',', "'text/xml'", ')', '#NEWLINE#', 'self', '.', 'send_header', '(', "'Content-length'", ',', 'str', '(', 'len', '(', 'response', ')', ')', ')', '#NEWLINE#', 'self', '.', 'end_headers', '(', ')', '#NEWLINE#', 'self', '.', 'wfile', '.', 'write', '(', 'response', ')', '#NEWLINE#', 'self', '.', 'wfile', '.', 'flush', '(', ')', '#NEWLINE#', 'self', '.', 'connection', '.', 'shutdown', '(', ')']


All attention probs:

[0.014242134056985378, 0.008795563131570816, 0.05324235558509827, 0.014362648129463196, 0.011277510784566402, 0.010545158758759499, 0.008938252925872803, 0.013216297142207623, 0.009102728217840195, 0.015766723081469536, 0.00948423519730568, 0.0102463960647583, 0.009014717303216457, 0.024465542286634445, 0.007043696939945221, 0.0158426221460104, 0.0054046278819441795, 0.007119378540664911, 0.005904486868530512, 0.0074982536025345325, 0.006571346428245306, 0.006163381040096283, 0.005404006689786911, 0.025443928316235542, 0.004768820479512215, 0.005607061553746462, 0.0036848620511591434, 0.004913011100143194, 0.0048937322571873665, 0.00513870595023036, 0.004353147931396961, 0.006184539757668972, 0.025373872369527817, 0.0049938359297811985, 0.011854158714413643, 0.0029269957449287176, 0.004188427235931158, 0.003456325735896826, 0.004084289073944092, 0.004046673886477947, 0.025196757167577744, 0.005845856387168169, 0.004122594837099314, 0.0041995178908109665, 0.019172457978129387, 0.004391748458147049, 0.00530239986255765, 0.00370354694314301, 0.0036916090175509453, 0.004228638485074043, 0.0033897985704243183, 0.00448985630646348, 0.005055716726928949, 0.0076393261551856995, 0.0036956369876861572, 0.003939591348171234, 0.0035251881927251816, 0.007863307371735573, 0.00257803313434124, 0.0036378642544150352, 0.0034221732057631016, 0.006551730912178755, 0.003389787394553423, 0.004437776282429695, 0.008135318756103516, 0.002846744144335389, 0.0045720175839960575, 0.005139820743352175, 0.004352034069597721, 0.005331439897418022, 0.005094347056001425, 0.018032561987638474, 0.004344145767390728, 0.00436599925160408, 0.0037851245142519474, 0.0057542286813259125, 0.0025457178708165884, 0.00394507497549057, 0.0031002790201455355, 0.007698602508753538, 0.0029463605023920536, 0.004919365514069796, 0.0057611786760389805, 0.002528935903683305, 0.0035224477760493755, 0.0035148716997355223, 0.006734390277415514, 0.004555780440568924, 0.00595618924126029, 0.003400019370019436, 0.0046017104759812355, 0.0077104149386286736, 0.0026635087560862303, 0.003908621612936258, 0.003576788818463683, 0.007154402323067188, 0.004636026453226805, 0.0060733710415661335, 0.00443415530025959, 0.003687036456540227, 0.004450966138392687, 0.03552130609750748, 0.0039042741991579533, 0.004958452191203833, 0.0037579056806862354, 0.005883641075342894, 0.008138527162373066, 0.0027299094945192337, 0.004835920408368111, 0.004632703028619289, 0.003919936716556549, 0.006577261723577976, 0.009263390675187111, 0.0025572520680725574, 0.004082048777490854, 0.002495297696441412, 0.005044673103839159, 0.0038610012270510197, 0.051545124500989914, 0.0032758908346295357, 0.005343693308532238, 0.010039280168712139, 0.003210612339898944, 0.004842293448746204, 0.004364225082099438, 0.0051764072850346565, 0.007999277673661709, 0.006668251007795334, 0.008191995322704315, 0.012170909903943539, 0.004105714149773121, 0.006895861122757196, 0.003579486161470413, 0.005458189640194178, 0.005085005424916744, 0.005068922881036997]


Top-k source tokens:

['self', 'response', 'response', 'self', 'response', 'data', 'data', 'self', 'else', 'self']


Top-k attention probs:

[0.05324235558509827, 0.051545124500989914, 0.03552130609750748, 0.025443928316235542, 0.025373872369527817, 0.025196757167577744, 0.024465542286634445, 0.019172457978129387, 0.018032561987638474, 0.0158426221460104]
