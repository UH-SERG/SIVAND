
Original sample:

{"has_bug": false, "bug_kind": 0, "bug_kind_name": "NONE", "source_tokens": ["#NEWLINE#", "@", "classmethod", "#NEWLINE#", "def encode_fetch_request(", "cls", ",", "payloads", "=", "(", ")", ",", "max_wait_time", "=", "100", ",", "min_bytes", "=", "4096", ")", ":", "#NEWLINE#", "#INDENT#", "'\\n        Encodes a FetchRequest struct\\n\\n        Arguments:\\n            payloads: list of FetchRequestPayload\\n            max_wait_time (int, optional): ms to block waiting for min_bytes\\n                data. Defaults to 100.\\n            min_bytes (int, optional): minimum bytes required to return before\\n                max_wait_time. Defaults to 4096.\\n\\n        Return: FetchRequest\\n        '", "#NEWLINE#", "return", "kafka", ".", "protocol", ".", "fetch", ".", "FetchRequest", "[", "0", "]", "(", "replica_id", "=", "(", "-", "1", ")", ",", "max_wait_time", "=", "max_wait_time", ",", "min_bytes", "=", "min_bytes", ",", "topics", "=", "[", "(", "topic", ",", "[", "(", "partition", ",", "payload", ".", "offset", ",", "payload", ".", "max_bytes", ")", "for", "(", "partition", ",", "payload", ")", "in", "topic_payloads", ".", "items", "(", ")", "]", ")", "for", "(", "topic", ",", "topic_payloads", ")", "in", "group_by_topic_and_partition", "(", "payloads", ")", ".", "items", "(", ")", "]", ")"], "error_location": [0], "repair_targets": [], "repair_candidates": [60, 72, 56, 86, 5, 77, 88, 62, 66, 74, 16, 48, 50, 7, 93, 12, 44, 46], "provenances": [{"datasetProvenance": {"datasetName": "ETHPy150Open", "filepath": "dpkp/kafka-python/kafka/protocol/legacy.py", "license": "apache-2.0", "note": "license: bigquery_api"}}], "txt_file": "eval__VARIABLE_MISUSE__SStuB.txt-00000-of-00300", "js_count": 2187, "results": {"model": "transformer", "prob": {"loc": [[0.49289125204086304, 1.6831295397423673e-06, 5.321199481045369e-08, 7.600301188404046e-08, 1.074278515034166e-07, 7.737032774457475e-07, 1.8869632967266625e-08, 5.853358743479475e-06, 1.1582379499941453e-07, 1.3540423537961033e-07, 7.2667654116287395e-09, 5.788578061327598e-09, 1.0876151463889983e-06, 1.0994647681172864e-07, 1.1767625096581469e-07, 7.820704972516523e-09, 2.060568817796593e-07, 5.7042310430688303e-08, 0.0010383478365838528, 8.243831395304824e-09, 3.0924706351243e-08, 2.7013783210350084e-08, 1.908707503162077e-08, 1.1185225190502024e-07, 3.608781540265227e-08, 2.368007301356556e-07, 8.169048669515178e-06, 1.2506949076396268e-07, 3.810113469171483e-08, 1.7993728818055388e-07, 1.145607484431821e-06, 5.386833095144539e-07, 3.462358932893039e-08, 1.7243350214357633e-07, 2.972244828924886e-06, 8.282812302695675e-08, 5.160631744161037e-08, 2.556468814418622e-07, 1.8862193940094585e-07, 2.813725075156981e-07, 8.348570901262065e-08, 1.310837069468107e-05, 4.294026467732692e-08, 2.8022409281902583e-08, 5.915297833780642e-07, 1.9741186463306803e-07, 0.0002005305141210556, 3.6733943886702036e-08, 2.9225205366856244e-07, 2.90732032226515e-07, 8.368169073946774e-05, 4.095974759366072e-08, 1.4371082670550095e-06, 6.835369958935189e-08, 3.9367396453826586e-08, 2.6098257421836024e-07, 0.00596538046374917, 3.554926664151026e-08, 4.188432001228648e-08, 5.933943043601175e-07, 0.0023443857207894325, 9.116969579281431e-08, 0.0386471189558506, 8.29259306556196e-07, 4.108911184630415e-07, 1.4032521278295462e-07, 0.45860809087753296, 7.185674348875182e-07, 2.49950335273752e-06, 1.6500523543072632e-06, 5.664003765559755e-06, 1.1127304588853804e-07, 2.071102244372014e-06, 5.709684103294421e-08, 4.658513717004098e-06, 1.468526189540853e-08, 5.3195652327531207e-08, 3.604836138038081e-06, 1.907791329358588e-07, 4.016766652625847e-08, 4.4553257794177625e-07, 4.123223220631189e-07, 1.9958200425662653e-07, 1.3255344128992874e-06, 3.56881332663761e-06, 7.565373039142287e-08, 3.7992540455888957e-06, 3.7960266041636714e-08, 6.676097109448165e-05, 9.113783505654283e-09, 3.170283946474228e-08, 4.580762720252096e-07, 7.498138643313723e-07, 6.623953959206119e-05, 2.5074285758819315e-07, 1.823509592213668e-07, 1.9721005273254377e-08, 6.710908564855345e-06, 1.92757829609036e-06, 3.409305975310417e-07, 2.4921721433202038e-06]], "pointer": [[0.0, 0.0, 0.0, 0.0, 0.0, 0.035661112517118454, 0.0, 0.03155607730150223, 0.0, 0.0, 0.0, 0.0, 0.0051811556331813335, 0.0, 0.0, 0.0, 0.008736062794923782, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.00024356754147447646, 0.0, 8.511319902027026e-05, 0.0, 0.0003626706311479211, 0.0, 0.0006715046474710107, 0.0, 0.0, 0.0, 0.0, 0.0, 5.530103589990176e-05, 0.0, 0.0, 0.0, 0.00026853400049731135, 0.0, 0.011764615774154663, 0.0, 0.0, 0.0, 0.00241319602355361, 0.0, 0.0, 0.0, 0.0, 0.0, 0.05206654593348503, 0.0, 0.34428170323371887, 0.0, 0.0, 3.662240851554088e-05, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.03127015382051468, 0.0, 0.4748046398162842, 0.0, 0.0, 0.0, 0.0, 0.0005413856124505401, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]], "target": [0.0]}, "loss": [0.7074668407440186, 0.0], "acc": [1.0, 0.0, 0.0, 0.0]}}


All source tokens:

['#NEWLINE#', '@', 'classmethod', '#NEWLINE#', 'def encode_fetch_request(', 'cls', ',', 'payloads', '=', '(', ')', ',', 'max_wait_time', '=', '100', ',', 'min_bytes', '=', '4096', ')', ':', '#NEWLINE#', '#INDENT#', "'\\n        Encodes a FetchRequest struct\\n\\n        Arguments:\\n            payloads: list of FetchRequestPayload\\n            max_wait_time (int, optional): ms to block waiting for min_bytes\\n                data. Defaults to 100.\\n            min_bytes (int, optional): minimum bytes required to return before\\n                max_wait_time. Defaults to 4096.\\n\\n        Return: FetchRequest\\n        '", '#NEWLINE#', 'return', 'kafka', '.', 'protocol', '.', 'fetch', '.', 'FetchRequest', '[', '0', ']', '(', 'replica_id', '=', '(', '-', '1', ')', ',', 'max_wait_time', '=', 'max_wait_time', ',', 'min_bytes', '=', 'min_bytes', ',', 'topics', '=', '[', '(', 'topic', ',', '[', '(', 'partition', ',', 'payload', '.', 'offset', ',', 'payload', '.', 'max_bytes', ')', 'for', '(', 'partition', ',', 'payload', ')', 'in', 'topic_payloads', '.', 'items', '(', ')', ']', ')', 'for', '(', 'topic', ',', 'topic_payloads', ')', 'in', 'group_by_topic_and_partition', '(', 'payloads', ')', '.', 'items', '(', ')', ']', ')']


All attention probs:

[0.015861980617046356, 0.010349360294640064, 0.01919139176607132, 0.014132572337985039, 0.009724619798362255, 0.0370987243950367, 0.011059457436203957, 0.03182078152894974, 0.010594427585601807, 0.0162276029586792, 0.011683793738484383, 0.011020404286682606, 0.023544322699308395, 0.008364594541490078, 0.009868253953754902, 0.007893098518252373, 0.016956517472863197, 0.007556109689176083, 0.025893501937389374, 0.006123194005340338, 0.006599201820790768, 0.007130707614123821, 0.00690448097884655, 0.007918288931250572, 0.007585613522678614, 0.008127440698444843, 0.010843269526958466, 0.0037840569857507944, 0.005570407025516033, 0.003892863169312477, 0.0055175782181322575, 0.004803812596946955, 0.006350439507514238, 0.005551558453589678, 0.0065101576037704945, 0.005300635006278753, 0.0052037592977285385, 0.011410580016672611, 0.004910996183753014, 0.004889479372650385, 0.003997486550360918, 0.009445537813007832, 0.00540578318759799, 0.006196051836013794, 0.01118333451449871, 0.004946216009557247, 0.02495742216706276, 0.0049498616717755795, 0.010339194908738136, 0.005069692153483629, 0.02358245477080345, 0.004225024022161961, 0.012506857514381409, 0.004007290117442608, 0.0033055690582841635, 0.004345004912465811, 0.027592308819293976, 0.0041190930642187595, 0.003910959232598543, 0.004851565696299076, 0.026377825066447258, 0.005119175650179386, 0.030566813424229622, 0.003656708402559161, 0.004986415151506662, 0.006127129774540663, 0.0392020121216774, 0.004551879595965147, 0.00676763104274869, 0.005442493595182896, 0.006606438662856817, 0.007909574545919895, 0.017316365614533424, 0.005877260118722916, 0.015486100688576698, 0.00490541709586978, 0.004080509301275015, 0.016499821096658707, 0.0029351164121180773, 0.005330201238393784, 0.0047379895113408566, 0.0037256034556776285, 0.004081868566572666, 0.004188094288110733, 0.0064167119562625885, 0.0057974751107394695, 0.017961647361516953, 0.006856937892735004, 0.019681112840771675, 0.005202912725508213, 0.004732685629278421, 0.007658208720386028, 0.005025687627494335, 0.017200982198119164, 0.005948993377387524, 0.0047692046500742435, 0.00826770719140768, 0.009854004718363285, 0.008142121136188507, 0.009211674332618713, 0.00808674655854702]


Top-k source tokens:

['payload', 'cls', 'payloads', 'payload', 'topic', 'partition', '4096', 'max_wait_time', 'min_bytes', 'max_wait_time']


Top-k attention probs:

[0.0392020121216774, 0.0370987243950367, 0.03182078152894974, 0.030566813424229622, 0.027592308819293976, 0.026377825066447258, 0.025893501937389374, 0.02495742216706276, 0.02358245477080345, 0.023544322699308395]
