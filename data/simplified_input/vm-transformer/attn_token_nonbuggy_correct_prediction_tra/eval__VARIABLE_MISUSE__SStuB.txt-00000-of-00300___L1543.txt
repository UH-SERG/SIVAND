
Original sample:

{"has_bug": false, "bug_kind": 0, "bug_kind_name": "NONE", "source_tokens": ["#NEWLINE#", "def getnode(", ")", ":", "#NEWLINE#", "#INDENT#", "'Get the hardware address as a 48-bit positive integer.\\n\\n    The first time this runs, it may launch a separate program, which could\\n    be quite slow.  If all attempts to obtain the hardware address fail, we\\n    choose a random 48-bit number with its eighth bit set to 1 as recommended\\n    in RFC 4122.\\n    '", "#NEWLINE#", "global", "_node", "#NEWLINE#", "if", "(", "_node", "is not", "None", ")", ":", "#NEWLINE#", "#INDENT#", "return", "_node", "#NEWLINE#", "#UNINDENT#", "import", "sys", "#NEWLINE#", "if", "(", "sys", ".", "platform", "==", "'win32'", ")", ":", "#NEWLINE#", "#INDENT#", "getters", "=", "[", "_windll_getnode", ",", "_netbios_getnode", ",", "_ipconfig_getnode", "]", "#NEWLINE#", "#UNINDENT#", "else", ":", "#NEWLINE#", "#INDENT#", "getters", "=", "[", "_unixdll_getnode", ",", "_ifconfig_getnode", "]", "#NEWLINE#", "#UNINDENT#", "for", "getter", "in", "(", "getters", "+", "[", "_random_getnode", "]", ")", ":", "#NEWLINE#", "#INDENT#", "try", ":", "#NEWLINE#", "#INDENT#", "_node", "=", "getter", "(", ")", "#NEWLINE#", "#UNINDENT#", "except", ":", "#NEWLINE#", "#INDENT#", "continue", "#NEWLINE#", "#UNINDENT#", "if", "(", "_node", "is not", "None", ")", ":", "#NEWLINE#", "#INDENT#", "return", "_node"], "error_location": [0], "repair_targets": [], "repair_candidates": [38, 53, 66, 9, 13, 21, 79, 95, 103, 63, 81], "provenances": [{"datasetProvenance": {"datasetName": "ETHPy150Open", "filepath": "amrdraz/kodr/app/brython/www/src/Lib/uuid.py", "license": "mit", "note": "license: bigquery_api"}}], "txt_file": "eval__VARIABLE_MISUSE__SStuB.txt-00000-of-00300", "js_count": 1543, "results": {"model": "transformer", "prob": {"loc": [[0.8751862049102783, 2.378802491875831e-06, 1.179830135811244e-07, 1.8969147674852138e-07, 1.9842258325297735e-07, 1.5887967208527698e-07, 4.995131348550785e-07, 1.160159186497367e-07, 2.459246672970039e-07, 5.408589458966162e-06, 1.1340625860611908e-07, 1.1222942930544377e-07, 1.354257932462133e-07, 0.0018702392699196935, 5.938612730460591e-07, 4.123631640595704e-07, 2.5891134214361955e-07, 1.982744635142808e-07, 2.384425101809029e-07, 1.4795929814681585e-07, 6.659286100330064e-08, 0.002091478556394577, 1.55002794599568e-07, 1.034832237678529e-07, 2.0613116191725567e-07, 3.4143261018471094e-07, 1.0035478226200212e-07, 1.4111738266819884e-07, 1.228626445026748e-07, 1.5845631423871964e-05, 3.4234423651469115e-07, 1.521265886594847e-07, 3.267855674948805e-07, 1.591603222550475e-06, 1.4184531949013035e-07, 2.0721103055620915e-07, 1.215778411278734e-07, 7.49369490904428e-08, 6.662707505711296e-07, 1.4128680447811348e-07, 4.2445196868357016e-07, 0.0028662208933383226, 1.9596582490066794e-07, 0.0005723859067074955, 1.5683455956150283e-07, 0.0009296356583945453, 1.4933138459127804e-07, 4.445559511623287e-07, 4.160430933097814e-07, 4.4720297864841996e-07, 3.288903371867491e-07, 5.165740049051237e-07, 2.472165760991629e-07, 2.4666680928930873e-06, 1.9248621185852244e-07, 7.762581617498654e-07, 0.014860899187624454, 3.159030654842354e-07, 0.004381879232823849, 3.869787121857371e-07, 3.8669466562168964e-07, 2.8596076617759536e-07, 3.3160077350657957e-07, 1.035441346175503e-05, 1.0924087234798208e-07, 3.531238519371982e-07, 0.0001985271810553968, 4.462001470528776e-07, 8.173773835551401e-07, 0.002686700550839305, 3.226800799893681e-07, 5.609999789157882e-07, 1.0298501820216188e-06, 1.047991190716857e-06, 9.051159395312425e-07, 7.599753644171869e-07, 1.939040657816804e-06, 2.192310603277292e-06, 1.1503400401124964e-06, 1.4940575056243688e-05, 2.364279083622023e-07, 0.0007891087443567812, 2.1544999981415458e-05, 4.804200216312893e-06, 2.6442498892720323e-06, 1.3105636753607541e-06, 6.076924819353735e-06, 7.283930472112843e-07, 6.703325539092475e-07, 4.249019411872723e-07, 9.665204743214417e-07, 5.782695779998903e-07, 3.09834888412297e-07, 3.27384469755998e-07, 3.349960877585545e-07, 0.00754518061876297, 4.462054221221479e-06, 2.3043899091135245e-06, 2.326134335817187e-06, 1.3035446499998216e-06, 4.882412554252369e-07, 3.817028755292995e-07, 8.42400197598181e-07, 0.08589062094688416]], "pointer": [[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.3789735436439514, 0.0, 0.0, 0.0, 0.2782079577445984, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.028575489297509193, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.18306411802768707, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.05678607150912285, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.012900966219604015, 0.0, 0.0, 0.027339478954672813, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.026313994079828262, 0.0, 5.0045022362610325e-05, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0018674662569537759, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.00592091353610158]], "target": [0.0]}, "loss": [0.13331842422485352, 0.0], "acc": [1.0, 0.0, 0.0, 0.0]}}


All source tokens:

['#NEWLINE#', 'def getnode(', ')', ':', '#NEWLINE#', '#INDENT#', "'Get the hardware address as a 48-bit positive integer.\\n\\n    The first time this runs, it may launch a separate program, which could\\n    be quite slow.  If all attempts to obtain the hardware address fail, we\\n    choose a random 48-bit number with its eighth bit set to 1 as recommended\\n    in RFC 4122.\\n    '", '#NEWLINE#', 'global', '_node', '#NEWLINE#', 'if', '(', '_node', 'is not', 'None', ')', ':', '#NEWLINE#', '#INDENT#', 'return', '_node', '#NEWLINE#', '#UNINDENT#', 'import', 'sys', '#NEWLINE#', 'if', '(', 'sys', '.', 'platform', '==', "'win32'", ')', ':', '#NEWLINE#', '#INDENT#', 'getters', '=', '[', '_windll_getnode', ',', '_netbios_getnode', ',', '_ipconfig_getnode', ']', '#NEWLINE#', '#UNINDENT#', 'else', ':', '#NEWLINE#', '#INDENT#', 'getters', '=', '[', '_unixdll_getnode', ',', '_ifconfig_getnode', ']', '#NEWLINE#', '#UNINDENT#', 'for', 'getter', 'in', '(', 'getters', '+', '[', '_random_getnode', ']', ')', ':', '#NEWLINE#', '#INDENT#', 'try', ':', '#NEWLINE#', '#INDENT#', '_node', '=', 'getter', '(', ')', '#NEWLINE#', '#UNINDENT#', 'except', ':', '#NEWLINE#', '#INDENT#', 'continue', '#NEWLINE#', '#UNINDENT#', 'if', '(', '_node', 'is not', 'None', ')', ':', '#NEWLINE#', '#INDENT#', 'return', '_node']


All attention probs:

[0.012135062366724014, 0.010831285268068314, 0.019842978566884995, 0.013744470663368702, 0.012136976234614849, 0.0109660429880023, 0.014361732639372349, 0.01136835478246212, 0.016176346689462662, 0.02933935634791851, 0.012529735453426838, 0.012490524910390377, 0.008733989670872688, 0.02500498667359352, 0.00800840649753809, 0.00799220148473978, 0.007645969744771719, 0.0077131083235144615, 0.008965397253632545, 0.009107787162065506, 0.009207199327647686, 0.019965019077062607, 0.007265070453286171, 0.007476016413420439, 0.007424470037221909, 0.009220780804753304, 0.006481134798377752, 0.0074184369295835495, 0.004447938408702612, 0.009754885919392109, 0.003913613501936197, 0.005285549443215132, 0.00527542969211936, 0.005751027725636959, 0.003909229300916195, 0.005143050104379654, 0.006190792191773653, 0.006205717101693153, 0.019664939492940903, 0.005050154868513346, 0.004592862445861101, 0.022432604804635048, 0.006898348219692707, 0.015285084955394268, 0.004725066479295492, 0.02038528397679329, 0.004800005815923214, 0.005721256602555513, 0.006346378941088915, 0.009326948784291744, 0.005105610936880112, 0.0047545647248625755, 0.004819465335458517, 0.013906111940741539, 0.00494868028908968, 0.004127296153455973, 0.028645673766732216, 0.0036096263211220503, 0.023131437599658966, 0.003708695061504841, 0.005219084210693836, 0.005285364110022783, 0.004831525031477213, 0.01783786155283451, 0.005734841339290142, 0.00478598615154624, 0.023461971431970596, 0.005484884604811668, 0.005310318432748318, 0.02312423661351204, 0.00476778345182538, 0.004231580067425966, 0.004885549191385508, 0.006333716679364443, 0.005753291770815849, 0.006817440968006849, 0.004683255217969418, 0.0051331971772015095, 0.005019129253923893, 0.019503870978951454, 0.006289578042924404, 0.012373004108667374, 0.0074506113305687904, 0.003968384582549334, 0.005817473866045475, 0.005995545536279678, 0.009514653123915195, 0.006600365974009037, 0.0068009342066943645, 0.005504366010427475, 0.007131376303732395, 0.005343631841242313, 0.005336012691259384, 0.00810595415532589, 0.005766095127910376, 0.01978454738855362, 0.007522095460444689, 0.008327418006956577, 0.007003024686127901, 0.009318237192928791, 0.008547571487724781, 0.007949559949338436, 0.01262741070240736, 0.037301093339920044]


Top-k source tokens:

['_node', '_node', '_unixdll_getnode', '_node', 'getters', '_ifconfig_getnode', '_random_getnode', '_windll_getnode', '_ipconfig_getnode', '_node']


Top-k attention probs:

[0.037301093339920044, 0.02933935634791851, 0.028645673766732216, 0.02500498667359352, 0.023461971431970596, 0.023131437599658966, 0.02312423661351204, 0.022432604804635048, 0.02038528397679329, 0.019965019077062607]
