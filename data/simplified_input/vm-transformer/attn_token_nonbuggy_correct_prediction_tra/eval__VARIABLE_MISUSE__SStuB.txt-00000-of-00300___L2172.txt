
Original sample:

{"has_bug": false, "bug_kind": 0, "bug_kind_name": "NONE", "source_tokens": ["#NEWLINE#", "def get_logger(", "self", ",", "name", ")", ":", "#NEWLINE#", "#INDENT#", "'\\n        Return mock logger instance.\\n\\n        Keep in mind that this method returns Mock class instance which means you can use all the\\n        usual Mock class methods to assert that a particular message has been logged / logger has\\n        been called with particular arguments.\\n        '", "#NEWLINE#", "return", "self", ".", "_logger"], "error_location": [0], "repair_targets": [], "repair_candidates": [4, 2, 12], "provenances": [{"datasetProvenance": {"datasetName": "ETHPy150Open", "filepath": "StackStorm/st2/st2tests/st2tests/mocks/sensor.py", "license": "apache-2.0", "note": "license: bigquery_api"}}], "txt_file": "eval__VARIABLE_MISUSE__SStuB.txt-00000-of-00300", "js_count": 2172, "results": {"model": "transformer", "prob": {"loc": [[0.8302204608917236, 0.00017636024858802557, 0.0001220013145939447, 8.920079608287779e-07, 1.3771485100733116e-05, 8.65598281052371e-07, 9.68897802522406e-06, 8.444672857876867e-06, 4.872648787568323e-06, 4.079785867361352e-06, 2.7487169063533656e-05, 2.2163142148201587e-06, 0.16914936900138855, 6.4404898694192525e-06, 0.00025306976749561727]], "pointer": [[0.0, 0.0, 0.00019509500998537987, 0.0, 0.999798595905304, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 6.3432285060116556e-06, 0.0, 0.0]], "target": [0.0]}, "loss": [0.18606401979923248, 0.0], "acc": [1.0, 0.0, 0.0, 0.0]}}


All source tokens:

['#NEWLINE#', 'def get_logger(', 'self', ',', 'name', ')', ':', '#NEWLINE#', '#INDENT#', "'\\n        Return mock logger instance.\\n\\n        Keep in mind that this method returns Mock class instance which means you can use all the\\n        usual Mock class methods to assert that a particular message has been logged / logger has\\n        been called with particular arguments.\\n        '", '#NEWLINE#', 'return', 'self', '.', '_logger']


All attention probs:

[0.08251729607582092, 0.036050304770469666, 0.13462072610855103, 0.05333887040615082, 0.12269245088100433, 0.050217702984809875, 0.052567027509212494, 0.04928942397236824, 0.04198063164949417, 0.05152290314435959, 0.05448267608880997, 0.06345054507255554, 0.12511709332466125, 0.03032698668539524, 0.05182534456253052]


Top-k source tokens:

['self', 'self', 'name', '#NEWLINE#', 'return', '#NEWLINE#', ',', ':', '_logger', "'\\n        Return mock logger instance.\\n\\n        Keep in mind that this method returns Mock class instance which means you can use all the\\n        usual Mock class methods to assert that a particular message has been logged / logger has\\n        been called with particular arguments.\\n        '"]


Top-k attention probs:

[0.13462072610855103, 0.12511709332466125, 0.12269245088100433, 0.08251729607582092, 0.06345054507255554, 0.05448267608880997, 0.05333887040615082, 0.052567027509212494, 0.05182534456253052, 0.05152290314435959]
