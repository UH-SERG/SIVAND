
Original sample:

{"has_bug": true, "bug_kind": 1, "bug_kind_name": "VARIABLE_MISUSE", "source_tokens": ["#NEWLINE#", "def test_textfield_hash(", "self", ")", ":", "#NEWLINE#", "#INDENT#", "'\\n        Regression test for #10034: the hash generation function should ignore\\n        leading/trailing whitespace so as to be friendly to broken browsers that\\n        submit it (usually in textareas).\\n        '", "#NEWLINE#", "f1", "=", "HashTestForm", "(", "{", "#NEWLINE#", "#INDENT#", "'name'", ":", "'joe'", ",", "#NEWLINE#", "'bio'", ":", "'Nothing notable.'", ",", "#NEWLINE#", "#UNINDENT#", "}", ")", "#NEWLINE#", "f2", "=", "HashTestForm", "(", "{", "#NEWLINE#", "#INDENT#", "'name'", ":", "'  joe'", ",", "#NEWLINE#", "'bio'", ":", "'Nothing notable.  '", ",", "#NEWLINE#", "#UNINDENT#", "}", ")", "#NEWLINE#", "hash1", "=", "utils", ".", "security_hash", "(", "None", ",", "f1", ")", "#NEWLINE#", "hash2", "=", "utils", ".", "security_hash", "(", "None", ",", "hash2", ")", "#NEWLINE#", "self", ".", "assertEqual", "(", "hash1", ",", "hash2", ")"], "error_location": [70], "repair_targets": [30], "repair_candidates": [9, 59, 51, 77, 62, 70, 79, 30, 2, 73], "provenances": [{"datasetProvenance": {"datasetName": "ETHPy150Open", "filepath": "AppScale/appscale/AppServer/lib/django-1.2/django/contrib/formtools/tests.py", "license": "apache-2.0", "note": "license: github_api"}}], "txt_file": "eval__VARIABLE_MISUSE__SStuB.txt-00000-of-00300", "js_count": 145, "results": {"model": "transformer", "prob": {"loc": [[7.3562579927966e-05, 6.313920497547088e-10, 2.0763597785578014e-10, 7.335299902211379e-12, 1.3392407842427456e-11, 1.2955880292209176e-11, 8.855083333259017e-12, 4.8690027704134664e-12, 6.939651544385361e-12, 2.3228559076216015e-09, 9.798432031027371e-12, 7.433779286580844e-12, 3.642962320693499e-11, 1.317075355028452e-11, 4.560180358326171e-12, 4.030513336278352e-12, 3.4015647937257754e-11, 5.605149590998115e-12, 2.1273066641569471e-10, 5.634111233110417e-12, 7.761020125174323e-12, 2.0455989332979208e-11, 1.3246181061743467e-11, 2.7910364991390324e-11, 9.845115174489383e-12, 1.2236002142063107e-11, 8.398197068326674e-12, 1.1308728259384893e-11, 1.1132170706085187e-11, 9.631114482322456e-12, 6.791355033897162e-09, 2.3617925323793365e-11, 1.0443181042152361e-10, 1.7932348661542363e-10, 2.2777181529765045e-10, 3.162984457683038e-11, 3.159680156405997e-11, 7.404677981881491e-10, 1.44542183777574e-10, 6.258121798552452e-10, 7.243679961410621e-11, 1.1651565823278531e-10, 7.193045048481395e-10, 2.3921967184925563e-10, 1.531254678610594e-09, 5.282939641304552e-10, 8.054845124227938e-10, 5.685111825748379e-10, 6.022051191045819e-10, 5.977409678337153e-10, 3.696212780290864e-10, 3.972242534899806e-09, 7.489858039333441e-11, 4.801149755540024e-11, 1.7343175506834285e-10, 7.820611519493426e-11, 1.282742356778499e-08, 4.362537886493101e-09, 1.4167815809429385e-09, 1.2070960110577289e-05, 3.0719766730413767e-09, 5.903715294408585e-10, 2.2124574172721623e-07, 7.674849644700998e-11, 7.265223145314081e-11, 1.3281048483193558e-10, 7.179252331512842e-11, 5.637376787603898e-09, 1.464040333409855e-09, 4.866074210241322e-10, 0.9995899796485901, 1.060966647870032e-09, 3.853029700850996e-11, 2.6583893072973375e-11, 1.871534524577889e-11, 5.041662616903086e-13, 1.7061687132557957e-11, 4.304451522330055e-06, 1.2653469938506134e-10, 0.00031996879260987043, 9.752835206100485e-10]], "pointer": [[0.0, 0.0, 1.0001641292944896e-08, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0014698579907417297, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.9968333840370178, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.9102672013104893e-05, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0016776168486103415, 0.0, 0.0, 3.220972644157882e-08, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 4.741737669178292e-09, 0.0, 0.0, 9.283989688135819e-10, 0.0, 0.0, 0.0, 6.186349210679509e-09, 0.0, 1.3986025670931213e-09, 0.0]], "target": [0.9968333840370178]}, "loss": [0.0004103533865418285, 0.0031716402154415846], "acc": [0.0, 1.0, 1.0, 1.0]}}


All source tokens:

['#NEWLINE#', 'def test_textfield_hash(', 'self', ')', ':', '#NEWLINE#', '#INDENT#', "'\\n        Regression test for #10034: the hash generation function should ignore\\n        leading/trailing whitespace so as to be friendly to broken browsers that\\n        submit it (usually in textareas).\\n        '", '#NEWLINE#', 'f1', '=', 'HashTestForm', '(', '{', '#NEWLINE#', '#INDENT#', "'name'", ':', "'joe'", ',', '#NEWLINE#', "'bio'", ':', "'Nothing notable.'", ',', '#NEWLINE#', '#UNINDENT#', '}', ')', '#NEWLINE#', 'f2', '=', 'HashTestForm', '(', '{', '#NEWLINE#', '#INDENT#', "'name'", ':', "'  joe'", ',', '#NEWLINE#', "'bio'", ':', "'Nothing notable.  '", ',', '#NEWLINE#', '#UNINDENT#', '}', ')', '#NEWLINE#', 'hash1', '=', 'utils', '.', 'security_hash', '(', 'None', ',', 'f1', ')', '#NEWLINE#', 'hash2', '=', 'utils', '.', 'security_hash', '(', 'None', ',', 'hash2', ')', '#NEWLINE#', 'self', '.', 'assertEqual', '(', 'hash1', ',', 'hash2', ')']


All attention probs:

[0.017656592652201653, 0.014205900952219963, 0.06346502155065536, 0.015539554879069328, 0.01114663202315569, 0.01300890650600195, 0.011493334546685219, 0.010842395946383476, 0.01275976188480854, 0.032051458954811096, 0.012529751285910606, 0.0129398787394166, 0.0109244454652071, 0.008273931220173836, 0.0101919649168849, 0.00974471028894186, 0.012195407412946224, 0.009428425692021847, 0.011304548941552639, 0.007144062779843807, 0.009022361598908901, 0.010248198173940182, 0.007544838357716799, 0.008472802117466927, 0.006227157078683376, 0.007569459266960621, 0.006892292760312557, 0.007004089187830687, 0.006342747714370489, 0.008254061453044415, 0.04612079635262489, 0.0075724441558122635, 0.009295481257140636, 0.006308261770755053, 0.007283308077603579, 0.0075218891724944115, 0.00766722159460187, 0.01152943167835474, 0.0069776857271790504, 0.006020923610776663, 0.004863593727350235, 0.007713386323302984, 0.012767087668180466, 0.007400355767458677, 0.00569348968565464, 0.005736574996262789, 0.006941870786249638, 0.006702113896608353, 0.006588935852050781, 0.006216561421751976, 0.007800540421158075, 0.022595033049583435, 0.007730002049356699, 0.008083824068307877, 0.003899090923368931, 0.006156943738460541, 0.008076674304902554, 0.004558786284178495, 0.005260121077299118, 0.03435599431395531, 0.005039964336901903, 0.008534900844097137, 0.02896677330136299, 0.01115318015217781, 0.010807553306221962, 0.008459982462227345, 0.007221102714538574, 0.012010435573756695, 0.008425912819802761, 0.008097466081380844, 0.0758993849158287, 0.006894958205521107, 0.010120688006281853, 0.01967443898320198, 0.0050956811755895615, 0.006832124665379524, 0.0082734115421772, 0.03465161845088005, 0.006704496219754219, 0.02944657765328884, 0.007826232351362705]


Top-k source tokens:

['hash2', 'self', 'f2', 'hash1', 'f1', 'f1', 'hash2', 'hash2', 'hash1', 'self']


Top-k attention probs:

[0.0758993849158287, 0.06346502155065536, 0.04612079635262489, 0.03465161845088005, 0.03435599431395531, 0.032051458954811096, 0.02944657765328884, 0.02896677330136299, 0.022595033049583435, 0.01967443898320198]
