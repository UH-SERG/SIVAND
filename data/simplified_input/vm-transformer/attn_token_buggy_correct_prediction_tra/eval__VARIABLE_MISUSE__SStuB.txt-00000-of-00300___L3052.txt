
Original sample:

{"has_bug": true, "bug_kind": 1, "bug_kind_name": "VARIABLE_MISUSE", "source_tokens": ["#NEWLINE#", "def __init__(", "self", ",", "*", "pargs", ",", "**kwargs", ")", ":", "#NEWLINE#", "#INDENT#", "'Initialize a graph with edges, name, graph attributes.\\n        \\n        Parameters\\n        sleep: float\\n            optional float that allows you to tell the\\n        dictionary to hang for the given amount of seconds on each\\n        event.  This is usefull for animations.'", "#NEWLINE#", "super", "(", "EventfulGraph", ",", "self", ")", ".", "__init__", "(", "*", "pargs", ",", "**", "kwargs", ")", "#NEWLINE#", "sleep", "=", "kwargs", ".", "get", "(", "'sleep'", ",", "0.0", ")", "#NEWLINE#", "self", ".", "graph", "=", "EventfulDict", "(", "self", ".", "graph", ",", "sleep", "=", "sleep", ")", "#NEWLINE#", "self", ".", "node", "=", "EventfulDict", "(", "kwargs", ".", "node", ",", "sleep", "=", "sleep", ")", "#NEWLINE#", "self", ".", "adj", "=", "EventfulDict", "(", "self", ".", "adj", ",", "sleep", "=", "sleep", ")", "#NEWLINE#", "if", "EventfulGraph", ".", "_constructed_callback", ":", "#NEWLINE#", "#INDENT#", "EventfulGraph", ".", "_constructed_callback", "(", "self", ")"], "error_location": [62], "repair_targets": [2, 18, 41, 47, 56, 71, 77, 97], "repair_candidates": [30, 51, 53, 66, 68, 81, 83, 2, 18, 41, 47, 56, 71, 77, 97, 5, 24, 27, 32, 62], "provenances": [{"datasetProvenance": {"datasetName": "ETHPy150Open", "filepath": "jakevdp/OpenVisConf2014/eventful_graph.py", "license": "bsd-3-clause", "note": "license: bigquery_api"}}], "txt_file": "eval__VARIABLE_MISUSE__SStuB.txt-00000-of-00300", "js_count": 3052, "results": {"model": "transformer", "prob": {"loc": [[0.00023989427427295595, 3.1011657131152504e-10, 8.688663122313756e-10, 4.048601384698536e-11, 2.835618198582246e-11, 5.839971839449731e-10, 2.2006741914881722e-11, 2.1031497376977626e-10, 1.9604286943808447e-11, 4.519548971182452e-11, 7.567635407212947e-11, 4.9900385906687106e-11, 1.1354821943809768e-10, 4.741200487767827e-11, 5.632223853968554e-12, 2.6059985766546667e-11, 5.408070102852491e-10, 2.854720279610312e-11, 8.173620003049109e-09, 7.603459528660039e-11, 3.509564514003749e-11, 1.9783187674843328e-12, 1.3736242698847434e-10, 5.24923195188709e-11, 5.455107157104067e-07, 6.025303173062824e-11, 7.733366724771429e-11, 1.1142700486743706e-06, 1.3251984232187652e-10, 8.032493420406794e-11, 1.007024352794872e-09, 2.0907980208262344e-11, 2.462028581007303e-09, 3.2345192496618935e-11, 2.327760553755276e-11, 8.078545055134612e-10, 1.5591536950410045e-09, 1.0453370807850249e-10, 2.4537506249089347e-08, 4.680830167913541e-10, 1.940619193119275e-10, 7.166995885654615e-08, 3.470940201921735e-11, 4.032292295202966e-12, 9.952195317852741e-11, 1.2185734366010337e-10, 5.356525223376707e-10, 1.7996688256971538e-05, 4.2724596083232314e-10, 2.6876591230351465e-12, 4.959891872213795e-11, 1.7795143830712234e-11, 1.3898790972299846e-11, 5.899232178308011e-07, 1.5274714826318814e-10, 1.8422505188020466e-10, 5.94771165651764e-09, 1.7671594743084995e-10, 5.8163547762835055e-12, 5.867054758690315e-11, 5.702643912641747e-10, 2.342728455673182e-09, 0.999731719493866, 1.1831499113768018e-09, 3.823592917978624e-12, 2.2732697668725876e-11, 4.3706073482585595e-11, 1.3554941891147365e-10, 4.2376009901090583e-07, 1.3768565176874858e-09, 2.2464609339412078e-10, 1.4943879023121553e-08, 6.363685273180764e-11, 2.2124344023488618e-10, 1.3656668851336207e-10, 1.0305940822963322e-10, 1.5865206370868634e-10, 4.443672878551297e-06, 3.405126458577712e-10, 2.1092440294356862e-10, 5.251785811788423e-11, 1.555523071461451e-10, 1.924580772527662e-10, 6.832820531599282e-07, 1.6809176273113735e-10, 2.5513627321949173e-10, 6.17958878512681e-11, 1.2035487770845066e-06, 3.990529018338407e-10, 2.4210695948045924e-11, 1.4792209679370671e-09, 4.332719183430811e-10, 2.822114486544791e-10, 2.5921045865295866e-10, 9.108692966552923e-11, 4.3222409158716335e-12, 1.7178157785124881e-09, 1.2091493317711866e-06, 7.835566639968761e-10]], "pointer": [[0.0, 0.0, 0.006055145990103483, 0.0, 0.0, 3.195249519194476e-05, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.02018989808857441, 0.0, 0.0, 0.0, 0.0, 0.0, 1.4804267323142994e-07, 0.0, 0.0, 4.122062193800957e-07, 0.0, 0.0, 0.00011032461770810187, 0.0, 2.5124976673396304e-05, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.18766753375530243, 0.0, 0.0, 0.0, 0.0, 0.0, 0.6011245846748352, 0.0, 0.0, 0.0, 2.313597065040085e-07, 0.0, 3.9632990223026354e-08, 0.0, 0.0, 0.028009720146656036, 0.0, 0.0, 0.0, 0.0, 0.0, 2.0775682969542686e-06, 0.0, 0.0, 0.0, 1.5519594853685703e-07, 0.0, 4.881352211327794e-08, 0.0, 0.0, 0.038666512817144394, 0.0, 0.0, 0.0, 0.0, 0.0, 0.11534163355827332, 0.0, 0.0, 0.0, 4.13241139085585e-08, 0.0, 8.858776112674605e-08, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0027743331156671047, 0.0]], "target": [0.9998294115066528]}, "loss": [0.0002681849291548133, 0.00017060304526239634], "acc": [0.0, 1.0, 1.0, 1.0]}}


All source tokens:

['#NEWLINE#', 'def __init__(', 'self', ',', '*', 'pargs', ',', '**kwargs', ')', ':', '#NEWLINE#', '#INDENT#', "'Initialize a graph with edges, name, graph attributes.\\n        \\n        Parameters\\n        sleep: float\\n            optional float that allows you to tell the\\n        dictionary to hang for the given amount of seconds on each\\n        event.  This is usefull for animations.'", '#NEWLINE#', 'super', '(', 'EventfulGraph', ',', 'self', ')', '.', '__init__', '(', '*', 'pargs', ',', '**', 'kwargs', ')', '#NEWLINE#', 'sleep', '=', 'kwargs', '.', 'get', '(', "'sleep'", ',', '0.0', ')', '#NEWLINE#', 'self', '.', 'graph', '=', 'EventfulDict', '(', 'self', '.', 'graph', ',', 'sleep', '=', 'sleep', ')', '#NEWLINE#', 'self', '.', 'node', '=', 'EventfulDict', '(', 'kwargs', '.', 'node', ',', 'sleep', '=', 'sleep', ')', '#NEWLINE#', 'self', '.', 'adj', '=', 'EventfulDict', '(', 'self', '.', 'adj', ',', 'sleep', '=', 'sleep', ')', '#NEWLINE#', 'if', 'EventfulGraph', '.', '_constructed_callback', ':', '#NEWLINE#', '#INDENT#', 'EventfulGraph', '.', '_constructed_callback', '(', 'self', ')']


All attention probs:

[0.0136650949716568, 0.010767768137156963, 0.02805374003946781, 0.014705272391438484, 0.013409556820988655, 0.030902480706572533, 0.011473056860268116, 0.02622242644429207, 0.012154288589954376, 0.011104315519332886, 0.012820403091609478, 0.011408071964979172, 0.011443284340202808, 0.010441365651786327, 0.010763619095087051, 0.008288402110338211, 0.014180571772158146, 0.007458377629518509, 0.01888578198850155, 0.0067910728976130486, 0.005218984093517065, 0.008237834088504314, 0.006458356976509094, 0.005900764372199774, 0.023136727511882782, 0.0047948723658919334, 0.005452395416796207, 0.020736539736390114, 0.0063369120471179485, 0.007534772157669067, 0.02106522023677826, 0.00672156922519207, 0.018286792561411858, 0.004623202607035637, 0.005405451636761427, 0.005916312802582979, 0.005892234854400158, 0.006382711697369814, 0.007025585509836674, 0.005092648323625326, 0.006942545063793659, 0.0154834920540452, 0.004697073251008987, 0.008888797834515572, 0.004571512341499329, 0.004960731137543917, 0.004576889332383871, 0.0226915180683136, 0.004123321734368801, 0.005333504639565945, 0.003866948653012514, 0.008624738082289696, 0.004372624214738607, 0.017977742478251457, 0.003600871888920665, 0.0056726024486124516, 0.014798944815993309, 0.0031378634739667177, 0.007243675645440817, 0.004710981156677008, 0.006319046951830387, 0.0051625315099954605, 0.06118909269571304, 0.003953695762902498, 0.006430404260754585, 0.006036862730979919, 0.01017090119421482, 0.006426625419408083, 0.02093415893614292, 0.005156188737601042, 0.007567990105599165, 0.01818409562110901, 0.0034401449374854565, 0.00830809399485588, 0.004734533838927746, 0.004139302298426628, 0.004093775525689125, 0.02007467672228813, 0.002933860756456852, 0.004515934269875288, 0.0037662722170352936, 0.011210246942937374, 0.004658254329115152, 0.018372923135757446, 0.004394239746034145, 0.0065266285091638565, 0.007890349254012108, 0.012150616385042667, 0.004868122283369303, 0.008211495354771614, 0.005199713632464409, 0.005166912917047739, 0.005281406454741955, 0.01120708230882883, 0.004254219587892294, 0.010084294714033604, 0.008783123455941677, 0.02674230746924877, 0.010024651885032654]


Top-k source tokens:

['kwargs', 'pargs', 'self', 'self', '**kwargs', 'pargs', 'self', 'sleep', 'sleep', 'kwargs']


Top-k attention probs:

[0.06118909269571304, 0.030902480706572533, 0.02805374003946781, 0.02674230746924877, 0.02622242644429207, 0.023136727511882782, 0.0226915180683136, 0.02106522023677826, 0.02093415893614292, 0.020736539736390114]
