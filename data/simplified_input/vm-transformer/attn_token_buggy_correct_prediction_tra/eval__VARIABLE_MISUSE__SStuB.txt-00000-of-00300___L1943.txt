
Original sample:

{"has_bug": true, "bug_kind": 1, "bug_kind_name": "VARIABLE_MISUSE", "source_tokens": ["#NEWLINE#", "def testWellKnownFlowsRemote(", "self", ")", ":", "#NEWLINE#", "#INDENT#", "'Make sure that flows that do not exist on the front end get scheduled.'", "#NEWLINE#", "test_lib", ".", "WellKnownSessionTest", ".", "messages", "=", "[", "]", "#NEWLINE#", "session_id", "=", "test_lib", ".", "WellKnownSessionTest", ".", "well_known_session_id", "#NEWLINE#", "messages", "=", "[", "rdf_flows", ".", "GrrMessage", "(", "request_id", "=", "0", ",", "response_id", "=", "0", ",", "session_id", "=", "session_id", ",", "payload", "=", "rdfvalue", ".", "RDFInteger", "(", "i", ")", ")", "for", "i", "in", "range", "(", "1", ",", "10", ")", "]", "#NEWLINE#", "self", ".", "server", ".", "well_known_flows", "=", "{", "#NEWLINE#", "#INDENT#", "#NEWLINE#", "#UNINDENT#", "}", "#NEWLINE#", "self", ".", "server", ".", "ReceiveMessages", "(", "predicate", ".", "client_id", ",", "messages", ")", "#NEWLINE#", "self", ".", "server", ".", "thread_pool", ".", "Join", "(", ")", "#NEWLINE#", "self", ".", "assertEqual", "(", "test_lib", ".", "WellKnownSessionTest", ".", "messages", ",", "[", "]", ")", "#NEWLINE#", "self", ".", "assertEqual", "(", "[", "]", ",", "data_store", ".", "DB", ".", "ResolvePrefix", "(", "self", ".", "client_id", ",", "'task:'", ",", "token", "=", "self", ".", "token", ")", ")", "#NEWLINE#", "queued_messages", "=", "[", "]", "#NEWLINE#", "for", "(", "predicate", ",", "_", ",", "_", ")", "in", "data_store", ".", "DB", ".", "ResolvePrefix", "(", "session_id", ".", "Add", "(", "'state/request:00000000'", ")", ",", "'flow:'", ",", "token", "=", "self", ".", "token", ")", ":", "#NEWLINE#", "#INDENT#", "queued_messages", ".", "append", "(", "predicate", ")", "#NEWLINE#", "#UNINDENT#", "self", ".", "assertEqual", "(", "len", "(", "queued_messages", ")", ",", "9", ")"], "error_location": [84], "repair_targets": [2, 65, 78, 91, 101, 115, 128, 136, 173, 188], "repair_candidates": [2, 65, 78, 91, 101, 115, 128, 136, 173, 188, 142, 180, 194, 84, 149, 184, 151, 153, 13, 26, 88, 109, 18, 41, 43, 162, 51, 55], "provenances": [{"datasetProvenance": {"datasetName": "ETHPy150Open", "filepath": "google/grr/grr/lib/front_end_test.py", "license": "apache-2.0", "note": "license: bigquery_api"}}], "txt_file": "eval__VARIABLE_MISUSE__SStuB.txt-00000-of-00300", "js_count": 1943, "results": {"model": "transformer", "prob": {"loc": [[0.0025875030551105738, 5.3086335327634515e-09, 6.060406398944451e-09, 1.6965526206114134e-10, 2.408286070565424e-10, 2.842220903076509e-10, 1.5330905989152654e-10, 4.044747203835186e-09, 1.7518031469876405e-10, 2.659650555347781e-10, 1.0317389997904769e-10, 1.6668608160408382e-10, 8.565399778337479e-11, 2.5020883143156425e-09, 2.9811339508079016e-10, 1.7742191049663347e-09, 2.450998015657291e-10, 1.4451169427776023e-10, 1.3251872488240224e-08, 1.0126850052971648e-10, 3.2798887161789025e-08, 1.9052200095348581e-10, 5.657964652350245e-10, 2.532599963078752e-10, 3.387298080914647e-11, 6.55798124138407e-11, 5.595677698977397e-09, 1.0901908542582106e-10, 1.009020311748543e-09, 2.5645914281113846e-09, 1.1459191234797217e-10, 4.497046138252081e-11, 9.623217778198523e-10, 3.1360806312941136e-11, 9.065420636389376e-10, 4.658966545889598e-09, 1.1713321979023306e-10, 3.946881016458903e-11, 6.271055341677823e-10, 3.276104498795007e-09, 7.540938012917664e-11, 4.3202513788642705e-10, 6.770882743367679e-10, 1.1392235137464013e-06, 1.276557332063888e-10, 2.8055405221216745e-11, 3.636830003816982e-10, 2.034532542438683e-09, 2.7734800567280615e-10, 1.8507069488027383e-10, 1.1115662834626505e-09, 6.2767885538050905e-06, 7.877797303379452e-10, 1.6279535497432107e-09, 1.7608721147865936e-09, 1.7282604236612542e-09, 1.5966686306434497e-11, 1.256205917066211e-09, 3.870523457294439e-09, 1.6437859073903383e-08, 1.4319385954753017e-10, 2.7533381796729373e-08, 3.1931637889393016e-10, 3.994017339081779e-10, 5.553145721037822e-10, 2.3041813790314336e-07, 1.0909585040907999e-10, 2.8988023786924444e-11, 2.406279342448414e-10, 2.4184392335979688e-11, 1.662508353206249e-09, 1.2062838727899816e-08, 1.1722086634691209e-09, 4.153675736695561e-10, 6.608891212067647e-10, 4.4911424579296977e-10, 3.047507524112092e-10, 7.147523128914202e-10, 2.7148841397206525e-08, 8.985832217200951e-11, 3.2402500821371305e-11, 3.0857721933230664e-10, 2.8776991900514304e-10, 1.6355227172581976e-09, 0.9972960352897644, 3.1870259764588127e-09, 2.8313707281513167e-11, 8.370211190822374e-10, 1.3701295756618492e-05, 1.4657487446001483e-09, 9.178494075889887e-10, 1.0258106897254038e-07, 1.8851402383557314e-10, 3.833446407530694e-11, 3.21674131775751e-10, 5.765440208582717e-11, 6.275746033956864e-10, 5.540523595470859e-10, 7.694582393469318e-08, 2.1488211210396457e-09, 1.3187744229981035e-09, 2.4325146341652726e-09, 2.0732390804134582e-10, 5.288468551967185e-10, 1.853460496192838e-08, 1.5802176278612023e-07, 2.407832599971016e-09, 1.4977809215110938e-08, 1.644296254710298e-09, 9.651798791310284e-07, 7.913533162096087e-10, 4.502938910633247e-09, 1.0118649251822376e-09, 1.1811615019396982e-09, 8.175114474262557e-10, 1.8705281767950055e-09, 2.225992307147706e-10, 5.343668285640035e-10, 2.1859514198752095e-09, 2.2534403232299383e-09, 4.57773985385046e-10, 3.7731817670305645e-10, 1.202083055318326e-08, 5.680824144427277e-10, 9.720078908426188e-11, 7.776727040109677e-10, 4.477312132156186e-10, 1.154792816926431e-09, 6.501310417661443e-05, 6.620649584121452e-10, 9.624645525008191e-11, 6.7946615001091e-10, 5.650213630303824e-09, 5.552541759712426e-10, 4.280306942217038e-10, 7.650495792432821e-10, 1.1516864333316335e-06, 7.886727382278025e-10, 3.4767533296786723e-10, 6.416011055776494e-10, 7.176920724383251e-10, 6.988425949039367e-10, 1.824123430083091e-08, 8.111340488170526e-10, 9.61934532028863e-10, 3.3492483786368155e-10, 1.3658321140752605e-09, 3.2252805981514143e-10, 2.6840660249938253e-10, 4.953733423462836e-09, 1.2313655650686428e-10, 1.982996344906951e-08, 1.0976019398922787e-10, 3.2074549682903353e-09, 5.6765862843644044e-11, 1.5513811069123307e-10, 6.292457221945824e-09, 4.4526579645598474e-10, 3.066925324812786e-10, 6.126393836680677e-10, 8.241134441533404e-10, 7.9807283004385e-10, 1.381521656185214e-06, 8.517327954038478e-10, 1.117444026199621e-09, 2.0157679969656783e-09, 1.7358662063315933e-08, 9.139938250690705e-10, 6.329214929934324e-10, 1.1001691291312454e-07, 2.768924256546512e-10, 2.1690518270389703e-09, 4.62487070862494e-09, 2.0009367744933115e-06, 9.554177449189183e-10, 1.4651778401653104e-10, 2.147029498633657e-10, 2.162248824433277e-09, 8.999918588159517e-10, 2.1520026038945872e-10, 2.88811108362097e-08, 3.2775337999169096e-10, 2.8790593173400048e-11, 9.730081185210793e-10, 1.630545739317313e-05, 2.882551308758252e-09, 4.352709304100699e-09, 5.826521487506398e-10, 1.338655852833881e-09, 2.0281233636954e-10, 6.03508146235221e-11, 2.424948852830511e-10, 7.772663068728036e-10, 1.8105934529444312e-09, 7.040685886749998e-06, 4.828790145516848e-10, 4.5010217775143246e-10, 4.942337454849621e-07, 9.567581171765482e-10]], "pointer": [[0.0, 0.0, 0.014845778234302998, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 2.4603298243164318e-06, 0.0, 0.0, 0.0, 0.0, 1.138505649578292e-05, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0001609871833352372, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.1069038663436004e-07, 0.0, 1.4177486207245238e-07, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.722082743071951e-06, 0.0, 0.0, 0.0, 9.494268056187138e-07, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.21028019487857819, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.041320838034152985, 0.0, 0.0, 0.0, 0.0, 0.0, 4.83764672765119e-08, 0.0, 0.0, 0.0, 1.9177466583641944e-06, 0.0, 0.0, 0.02528984472155571, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 9.119105379795656e-05, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 5.500924544321606e-06, 0.0, 0.0, 0.0, 0.0, 0.0, 1.1579783858906012e-05, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.6761186718940735, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.023341599851846695, 0.0, 0.0, 0.0, 0.0, 0.0, 3.9094129533623345e-06, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.2585425793076865e-05, 0.0, 5.088784746476449e-06, 0.0, 5.804030934086768e-06, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 5.970252004772192e-06, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.008464175276458263, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 3.672446666769247e-07, 0.0, 0.0, 0.0, 3.9735286350151e-07, 0.0, 0.0, 0.0, 1.651364436838776e-05, 0.0, 0.0, 0.0, 0.0, 0.0, 1.4721601360179193e-07, 0.0, 0.0, 0.0, 0.0]], "target": [0.9997803568840027]}, "loss": [0.002707627136260271, 0.00021966724307276309], "acc": [0.0, 1.0, 1.0, 1.0]}}


All source tokens:

['#NEWLINE#', 'def testWellKnownFlowsRemote(', 'self', ')', ':', '#NEWLINE#', '#INDENT#', "'Make sure that flows that do not exist on the front end get scheduled.'", '#NEWLINE#', 'test_lib', '.', 'WellKnownSessionTest', '.', 'messages', '=', '[', ']', '#NEWLINE#', 'session_id', '=', 'test_lib', '.', 'WellKnownSessionTest', '.', 'well_known_session_id', '#NEWLINE#', 'messages', '=', '[', 'rdf_flows', '.', 'GrrMessage', '(', 'request_id', '=', '0', ',', 'response_id', '=', '0', ',', 'session_id', '=', 'session_id', ',', 'payload', '=', 'rdfvalue', '.', 'RDFInteger', '(', 'i', ')', ')', 'for', 'i', 'in', 'range', '(', '1', ',', '10', ')', ']', '#NEWLINE#', 'self', '.', 'server', '.', 'well_known_flows', '=', '{', '#NEWLINE#', '#INDENT#', '#NEWLINE#', '#UNINDENT#', '}', '#NEWLINE#', 'self', '.', 'server', '.', 'ReceiveMessages', '(', 'predicate', '.', 'client_id', ',', 'messages', ')', '#NEWLINE#', 'self', '.', 'server', '.', 'thread_pool', '.', 'Join', '(', ')', '#NEWLINE#', 'self', '.', 'assertEqual', '(', 'test_lib', '.', 'WellKnownSessionTest', '.', 'messages', ',', '[', ']', ')', '#NEWLINE#', 'self', '.', 'assertEqual', '(', '[', ']', ',', 'data_store', '.', 'DB', '.', 'ResolvePrefix', '(', 'self', '.', 'client_id', ',', "'task:'", ',', 'token', '=', 'self', '.', 'token', ')', ')', '#NEWLINE#', 'queued_messages', '=', '[', ']', '#NEWLINE#', 'for', '(', 'predicate', ',', '_', ',', '_', ')', 'in', 'data_store', '.', 'DB', '.', 'ResolvePrefix', '(', 'session_id', '.', 'Add', '(', "'state/request:00000000'", ')', ',', "'flow:'", ',', 'token', '=', 'self', '.', 'token', ')', ':', '#NEWLINE#', '#INDENT#', 'queued_messages', '.', 'append', '(', 'predicate', ')', '#NEWLINE#', '#UNINDENT#', 'self', '.', 'assertEqual', '(', 'len', '(', 'queued_messages', ')', ',', '9', ')']


All attention probs:

[0.00995377916842699, 0.00915007758885622, 0.04259001836180687, 0.011026849038898945, 0.008242419920861721, 0.007464215625077486, 0.006035893224179745, 0.013605564832687378, 0.005876603536307812, 0.00956331193447113, 0.005611832719296217, 0.010458639822900295, 0.005335599649697542, 0.008549978956580162, 0.005735999904572964, 0.005853410344570875, 0.005262655206024647, 0.0066756089217960835, 0.012834412977099419, 0.007071591913700104, 0.006851132493466139, 0.00411993358284235, 0.005972052924335003, 0.004155040252953768, 0.0046942587941884995, 0.0049614617601037025, 0.014147099107503891, 0.003672385821118951, 0.0037316493690013885, 0.004694681614637375, 0.002899297745898366, 0.004069871734827757, 0.0033056787215173244, 0.004332870710641146, 0.0029802413191646338, 0.0042140600271523, 0.0031461410690099, 0.004337833728641272, 0.0033573340624570847, 0.005410665646195412, 0.0031012038234621286, 0.006615556310862303, 0.003621520008891821, 0.02126016654074192, 0.002794011030346155, 0.005304211750626564, 0.0029417858459055424, 0.00440263282507658, 0.0026294607669115067, 0.0026641818694770336, 0.0026966400910168886, 0.010953828692436218, 0.0022392303217202425, 0.002326005371287465, 0.0037192488089203835, 0.007282013539224863, 0.0031536559108644724, 0.002752383705228567, 0.00230049598030746, 0.005213545635342598, 0.002584543079137802, 0.0035320583265274763, 0.0022548038978129625, 0.002317046048119664, 0.003383869305253029, 0.009470454417169094, 0.0021169676911085844, 0.003855357877910137, 0.0023714452981948853, 0.0036683762446045876, 0.002774056512862444, 0.00314646540209651, 0.0036103937309235334, 0.003285859012976289, 0.0032915968913584948, 0.003383606905117631, 0.0034977670293301344, 0.0035397817846387625, 0.00744525296613574, 0.0017031808383762836, 0.002570894779637456, 0.0020444991532713175, 0.002096452983096242, 0.00263919192366302, 0.05226857215166092, 0.0023305914364755154, 0.0031569271814078093, 0.0030747726559638977, 0.013893523253500462, 0.002575196325778961, 0.003189051290974021, 0.008024215698242188, 0.0016156540950760245, 0.0022227060981094837, 0.0016866042278707027, 0.0030155584681779146, 0.0018763444386422634, 0.0024553071707487106, 0.0037071655970066786, 0.002823049435392022, 0.0034707665909081697, 0.005839776247739792, 0.0020186181645840406, 0.0035274990368634462, 0.003739828709512949, 0.004815319553017616, 0.0019769729115068913, 0.0046387542970478535, 0.001826587482355535, 0.006885363254696131, 0.0028323279693722725, 0.003575908951461315, 0.002632101299241185, 0.002190411789342761, 0.003120343666523695, 0.004730579908937216, 0.0015509291552007198, 0.002435535192489624, 0.002796801505610347, 0.0029643129091709852, 0.002322837244719267, 0.0025327641051262617, 0.003726980881765485, 0.0019277428509667516, 0.003304888028651476, 0.00203311606310308, 0.0023666881024837494, 0.002382622566074133, 0.024003753438591957, 0.0016822622856125236, 0.0025873244740068913, 0.0023083349224179983, 0.0021239742636680603, 0.0018769466551020741, 0.004788103047758341, 0.0018524257466197014, 0.012330923229455948, 0.0015615113079547882, 0.0022948726546019316, 0.0013651169138029218, 0.0013480073539540172, 0.003278099000453949, 0.009850607253611088, 0.002550387056544423, 0.002440654905512929, 0.0018500091973692179, 0.002762977499514818, 0.002815928077325225, 0.003549761138856411, 0.013146519660949707, 0.0032022874802351, 0.012349901720881462, 0.003552929265424609, 0.011549048125743866, 0.004525450989603996, 0.003576335497200489, 0.0034878996666520834, 0.002024964662268758, 0.0032530883327126503, 0.0021369976457208395, 0.0025044665671885014, 0.0026920903474092484, 0.011379539966583252, 0.0017101119738072157, 0.0021993755362927914, 0.0025081851053982973, 0.002800008514896035, 0.0017587884794920683, 0.001969903474673629, 0.003480716375634074, 0.0018093677936121821, 0.005204126238822937, 0.0024163969792425632, 0.011310556903481483, 0.002045848174020648, 0.0027661945205181837, 0.001838119002059102, 0.002353014424443245, 0.0028531684074550867, 0.0028887505177408457, 0.016424622386693954, 0.0020363915245980024, 0.0027349726296961308, 0.002905408851802349, 0.014074568636715412, 0.0029337110463529825, 0.004122615791857243, 0.0045258961617946625, 0.009459112770855427, 0.003040001727640629, 0.0036432286724448204, 0.0035603265278041363, 0.0038484700489789248, 0.004206924233585596, 0.02066894806921482, 0.003080701222643256, 0.002827912336215377, 0.006418047938495874, 0.0023825287353247404]


Top-k source tokens:

['predicate', 'self', 'self', 'session_id', 'queued_messages', 'queued_messages', 'messages', 'predicate', 'messages', "'Make sure that flows that do not exist on the front end get scheduled.'"]


Top-k attention probs:

[0.05226857215166092, 0.04259001836180687, 0.024003753438591957, 0.02126016654074192, 0.02066894806921482, 0.016424622386693954, 0.014147099107503891, 0.014074568636715412, 0.013893523253500462, 0.013605564832687378]
