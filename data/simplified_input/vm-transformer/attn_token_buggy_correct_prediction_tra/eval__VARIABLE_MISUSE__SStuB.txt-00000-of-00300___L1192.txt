
Original sample:

{"has_bug": true, "bug_kind": 1, "bug_kind_name": "VARIABLE_MISUSE", "source_tokens": ["#NEWLINE#", "def _argument_contiguity_check(", "self", ",", "arg_name", ")", ":", "#NEWLINE#", "#INDENT#", "'\\n        .. todo::\\n\\n            WRITEME\\n        '", "#NEWLINE#", "return", "(", "'\\n        if (!CudaNdarray_is_c_contiguous(%%(%(arg_name)s)s))\\n        {\\n            if (!(%(class_name_caps)s_COPY_NON_CONTIGUOUS)) {\\n                PyErr_SetString(PyExc_ValueError,\\n                    \"%(class)s: %(arg_name)s must be C contiguous\");\\n                %%(fail)s;\\n            }\\n        }\\n        '", "%", "{", "#NEWLINE#", "#INDENT#", "'class'", ":", "arg_name", ".", "__class__", ".", "__name__", ",", "#NEWLINE#", "'arg_name'", ":", "arg_name", ",", "#NEWLINE#", "'class_name_caps'", ":", "self", ".", "__class__", ".", "__name__", ".", "upper", "(", ")", ",", "#NEWLINE#", "#UNINDENT#", "}", ")"], "error_location": [20], "repair_targets": [2, 34], "repair_candidates": [4, 20, 29, 2, 34], "provenances": [{"datasetProvenance": {"datasetName": "ETHPy150Open", "filepath": "lisa-lab/pylearn2/pylearn2/sandbox/cuda_convnet/pool.py", "license": "bsd-3-clause", "note": "license: bigquery_api"}}], "txt_file": "eval__VARIABLE_MISUSE__SStuB.txt-00000-of-00300", "js_count": 1192, "results": {"model": "transformer", "prob": {"loc": [[0.010666681453585625, 1.9092631475814414e-07, 7.914625825833355e-07, 3.0173898935004217e-09, 1.5505540318372368e-07, 2.4444473112339438e-09, 4.712397583261918e-09, 4.673558429146851e-09, 3.3700089385746423e-09, 7.197197504638098e-08, 5.1371702447511325e-09, 1.300796470538046e-09, 2.1151185691792307e-08, 1.4226735629563336e-06, 9.633173903011993e-08, 1.9222969172005833e-07, 1.8890638386892533e-08, 3.717233854061419e-09, 5.918262768744853e-09, 3.3332576698796856e-09, 0.9867975115776062, 4.579741030852347e-08, 1.372258537912785e-07, 8.121823213969037e-08, 6.546735598078612e-09, 2.576961755096363e-08, 4.916482776451403e-09, 5.164711325278404e-08, 7.136963464660084e-09, 0.0013367400970309973, 1.1964687018917175e-08, 1.1100257601981411e-08, 7.715205363467703e-09, 1.69481939593652e-08, 0.0011951420456171036, 1.0390957427830472e-08, 1.1235537833442777e-08, 1.553771156181938e-08, 3.353734845390477e-09, 1.8831963544130303e-08, 5.3120929877081835e-09, 2.1186829712860344e-07, 7.508078425644271e-08, 4.074766479789105e-08, 2.45704612211739e-08, 2.1519992898788587e-08, 4.000597897402258e-08, 7.851008376746904e-08]], "pointer": [[0.0, 0.0, 0.7162034511566162, 0.0, 0.0012509196531027555, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 5.3762836614623666e-05, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 2.0006878912681714e-05, 0.0, 0.0, 0.0, 0.0, 0.28247180581092834, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]], "target": [0.9986752271652222]}, "loss": [0.013290387578308582, 0.0013256510719656944], "acc": [0.0, 1.0, 1.0, 1.0]}}


All source tokens:

['#NEWLINE#', 'def _argument_contiguity_check(', 'self', ',', 'arg_name', ')', ':', '#NEWLINE#', '#INDENT#', "'\\n        .. todo::\\n\\n            WRITEME\\n        '", '#NEWLINE#', 'return', '(', '\'\\n        if (!CudaNdarray_is_c_contiguous(%%(%(arg_name)s)s))\\n        {\\n            if (!(%(class_name_caps)s_COPY_NON_CONTIGUOUS)) {\\n                PyErr_SetString(PyExc_ValueError,\\n                    "%(class)s: %(arg_name)s must be C contiguous");\\n                %%(fail)s;\\n            }\\n        }\\n        \'', '%', '{', '#NEWLINE#', '#INDENT#', "'class'", ':', 'arg_name', '.', '__class__', '.', '__name__', ',', '#NEWLINE#', "'arg_name'", ':', 'arg_name', ',', '#NEWLINE#', "'class_name_caps'", ':', 'self', '.', '__class__', '.', '__name__', '.', 'upper', '(', ')', ',', '#NEWLINE#', '#UNINDENT#', '}', ')']


All attention probs:

[0.02475329488515854, 0.016899773851037025, 0.08202411234378815, 0.022333549335598946, 0.05787305161356926, 0.019925517961382866, 0.016525251790881157, 0.017579644918441772, 0.016846179962158203, 0.028472980484366417, 0.021281536668539047, 0.030044592916965485, 0.015441151335835457, 0.024812862277030945, 0.011976010166108608, 0.011543823406100273, 0.015618483535945415, 0.01394029799848795, 0.016790255904197693, 0.013805251568555832, 0.07012537866830826, 0.009112411178648472, 0.010426493361592293, 0.009444239549338818, 0.012614365667104721, 0.00905864778906107, 0.013834845274686813, 0.018288930878043175, 0.011763711459934711, 0.0601997897028923, 0.011346777901053429, 0.01422398816794157, 0.022843001410365105, 0.017002003267407417, 0.048634424805641174, 0.00941069982945919, 0.01113764476031065, 0.010347846895456314, 0.01641511730849743, 0.00989587977528572, 0.013892601244151592, 0.015116002410650253, 0.014053096063435078, 0.013092204928398132, 0.015115542337298393, 0.016568567603826523, 0.019304050132632256, 0.01824410818517208]


Top-k source tokens:

['self', 'arg_name', 'arg_name', 'arg_name', 'self', 'return', "'\\n        .. todo::\\n\\n            WRITEME\\n        '", '\'\\n        if (!CudaNdarray_is_c_contiguous(%%(%(arg_name)s)s))\\n        {\\n            if (!(%(class_name_caps)s_COPY_NON_CONTIGUOUS)) {\\n                PyErr_SetString(PyExc_ValueError,\\n                    "%(class)s: %(arg_name)s must be C contiguous");\\n                %%(fail)s;\\n            }\\n        }\\n        \'', '#NEWLINE#', "'class_name_caps'"]


Top-k attention probs:

[0.08202411234378815, 0.07012537866830826, 0.0601997897028923, 0.05787305161356926, 0.048634424805641174, 0.030044592916965485, 0.028472980484366417, 0.024812862277030945, 0.02475329488515854, 0.022843001410365105]
