
Original sample:

{"has_bug": true, "bug_kind": 1, "bug_kind_name": "VARIABLE_MISUSE", "source_tokens": ["#NEWLINE#", "def test_search_code_with_text_match(", "self", ")", ":", "#NEWLINE#", "#INDENT#", "'Test the ability to use the code search endpoint.'", "#NEWLINE#", "cassette_name", "=", "self", ".", "cassette_name", "(", "'search_code_with_text_match'", ")", "#NEWLINE#", "with", "self", ".", "recorder", ".", "use_cassette", "(", "cassette_name", ",", "match_requests_on", "=", "self", ".", "match_on", ")", ":", "#NEWLINE#", "#INDENT#", "result_iterator", "=", "self", ".", "gh", ".", "search_code", "(", "'HTTPAdapter in:file language:python repo:kennethreitz/requests'", ",", "text_match", "=", "True", ")", "#NEWLINE#", "code_result", "=", "next", "(", "result_iterator", ")", "#NEWLINE#", "#UNINDENT#", "assert", "isinstance", "(", "self", ",", "github3", ".", "search", ".", "CodeSearchResult", ")", "#NEWLINE#", "assert", "(", "len", "(", "code_result", ".", "text_matches", ")", ">", "0", ")"], "error_location": [62], "repair_targets": [51, 75], "repair_candidates": [51, 75, 2, 11, 19, 29, 38, 62, 36, 55, 9, 13, 25], "provenances": [{"datasetProvenance": {"datasetName": "ETHPy150Open", "filepath": "sigmavirus24/github3.py/tests/integration/test_github.py", "license": "bsd-3-clause", "note": "license: manual_eval"}}], "txt_file": "eval__VARIABLE_MISUSE__SStuB.txt-00000-of-00300", "js_count": 456, "results": {"model": "transformer", "prob": {"loc": [[3.584641308407299e-05, 2.922161679297375e-10, 5.6511413604187766e-11, 3.893431150397975e-12, 6.569203514494859e-12, 8.498343521956553e-12, 5.2357879316844436e-12, 4.5458086080085724e-12, 5.105358844015306e-12, 1.0618812773532937e-10, 6.8193571449437496e-12, 5.0879968641059925e-12, 2.173718670339664e-12, 1.4204676931223181e-12, 1.598898097254775e-11, 2.564118639636348e-10, 4.076406746877925e-12, 6.2982670294420284e-12, 1.3235367662955966e-12, 2.5914147563921297e-11, 3.536472763937537e-12, 2.5566783933006487e-12, 8.472884720223117e-12, 4.1801956861264866e-13, 2.295537891716659e-11, 2.584028768737312e-09, 3.674019855709476e-12, 1.8763087871603856e-12, 8.296209205727045e-12, 4.156038002633977e-08, 1.2428266749076045e-11, 1.6135536917011306e-12, 2.495862457679854e-12, 1.4625262806378103e-11, 9.246285161135237e-12, 9.085935996633321e-12, 2.4205164539381485e-09, 2.882117634828152e-11, 1.044436315211783e-09, 9.070248024878325e-12, 1.2550494497831632e-11, 2.920627628633099e-11, 7.908783003496289e-12, 2.229245676943492e-10, 5.271294511999258e-10, 2.6249589307747456e-11, 1.7016621445264946e-10, 8.071174284474125e-11, 1.6657661361385578e-10, 2.9458088746103783e-11, 5.381650680646999e-11, 1.1523810350411168e-08, 1.0407981768101315e-11, 8.267081463841919e-12, 1.2921708147928257e-10, 4.388571639424299e-08, 5.2459262628312686e-11, 1.500967128365005e-10, 1.0046118797957249e-10, 6.925851558925444e-11, 4.503334857797192e-11, 1.179498443359961e-10, 0.9999638795852661, 1.0667453032020546e-10, 1.404601324139776e-09, 8.629576914165327e-11, 2.7362912283224183e-11, 1.5289078336699902e-10, 5.70659075549429e-10, 2.495927076129334e-10, 3.027309791736599e-10, 3.077404997497979e-11, 1.5327496216688274e-11, 4.335724487769532e-11, 8.483173191686788e-11, 3.222722284590418e-07, 2.167982043888017e-10, 1.111199847414479e-11, 1.4106783449707727e-11, 3.233648071532258e-11, 1.5116267126913385e-09, 7.020575093497072e-11]], "pointer": [[0.0, 0.0, 7.569318682953963e-08, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0001533742033643648, 0.0, 1.8136374535515642e-07, 0.0, 3.4658107779250713e-06, 0.0, 0.0, 0.0, 0.0, 0.0, 1.7985026090627798e-07, 0.0, 0.0, 0.0, 0.0, 0.0, 7.323856152652297e-07, 0.0, 0.0, 0.0, 9.415229129672298e-08, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.005187447648495436, 0.0, 8.482815161414692e-08, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.993708610534668, 0.0, 0.0, 0.0, 0.00028781755827367306, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 3.0060235189921514e-08, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0006578561733476818, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]], "target": [0.994366466999054]}, "loss": [3.6238969187252223e-05, 0.0056494614109396935], "acc": [0.0, 1.0, 1.0, 1.0]}}


All source tokens:

['#NEWLINE#', 'def test_search_code_with_text_match(', 'self', ')', ':', '#NEWLINE#', '#INDENT#', "'Test the ability to use the code search endpoint.'", '#NEWLINE#', 'cassette_name', '=', 'self', '.', 'cassette_name', '(', "'search_code_with_text_match'", ')', '#NEWLINE#', 'with', 'self', '.', 'recorder', '.', 'use_cassette', '(', 'cassette_name', ',', 'match_requests_on', '=', 'self', '.', 'match_on', ')', ':', '#NEWLINE#', '#INDENT#', 'result_iterator', '=', 'self', '.', 'gh', '.', 'search_code', '(', "'HTTPAdapter in:file language:python repo:kennethreitz/requests'", ',', 'text_match', '=', 'True', ')', '#NEWLINE#', 'code_result', '=', 'next', '(', 'result_iterator', ')', '#NEWLINE#', '#UNINDENT#', 'assert', 'isinstance', '(', 'self', ',', 'github3', '.', 'search', '.', 'CodeSearchResult', ')', '#NEWLINE#', 'assert', '(', 'len', '(', 'code_result', '.', 'text_matches', ')', '>', '0', ')']


All attention probs:

[0.0185917466878891, 0.012192007154226303, 0.05496220290660858, 0.016717519611120224, 0.011402755975723267, 0.012929561547935009, 0.01116839051246643, 0.018747027963399887, 0.012440074235200882, 0.023839768022298813, 0.012691497802734375, 0.025823388248682022, 0.008232153952121735, 0.009933608584105968, 0.00923500768840313, 0.02095036767423153, 0.007066688034683466, 0.010483017191290855, 0.009419162757694721, 0.020720353350043297, 0.005885308142751455, 0.0085712606087327, 0.006236777175217867, 0.007212821859866381, 0.007775302976369858, 0.028891606256365776, 0.005871702916920185, 0.008893675170838833, 0.005329705774784088, 0.025221731513738632, 0.0050457557663321495, 0.0059547568671405315, 0.006129945162683725, 0.00684855692088604, 0.00799474772065878, 0.008445260114967823, 0.023815574124455452, 0.00729364063590765, 0.019577275961637497, 0.004529379308223724, 0.007496130187064409, 0.004562674555927515, 0.00860460102558136, 0.007084200158715248, 0.00913046021014452, 0.006891221739351749, 0.009542371146380901, 0.005491578485816717, 0.0063002207316458225, 0.004871543496847153, 0.008399785496294498, 0.037728216499090195, 0.008181118406355381, 0.007487197872251272, 0.006322524510324001, 0.02725432626903057, 0.0043724095448851585, 0.0065890345722436905, 0.006507889833301306, 0.010282231494784355, 0.007004339713603258, 0.005991892423480749, 0.08462020754814148, 0.007223827764391899, 0.0090634785592556, 0.006931106559932232, 0.006793733686208725, 0.006828234065324068, 0.007735576946288347, 0.007193353027105331, 0.011268076486885548, 0.013344206847250462, 0.0078335115686059, 0.008392666466534138, 0.008117933757603168, 0.03290145471692085, 0.005819163750857115, 0.007161332294344902, 0.0051077366806566715, 0.007161103654652834, 0.009699217043817043, 0.00763702392578125]


Top-k source tokens:

['self', 'self', 'code_result', 'code_result', 'cassette_name', 'result_iterator', 'self', 'self', 'cassette_name', 'result_iterator']


Top-k attention probs:

[0.08462020754814148, 0.05496220290660858, 0.037728216499090195, 0.03290145471692085, 0.028891606256365776, 0.02725432626903057, 0.025823388248682022, 0.025221731513738632, 0.023839768022298813, 0.023815574124455452]
