
Original sample:

{"has_bug": true, "bug_kind": 1, "bug_kind_name": "VARIABLE_MISUSE", "source_tokens": ["#NEWLINE#", "def __init__(", "self", ",", "threshold", "=", "0.9", ",", "sample_size", "=", "128", ",", "weights", "=", "(", "0.5", ",", "0.5", ")", ")", ":", "#NEWLINE#", "#INDENT#", "'\\n        Create an empty `WeightedMinHashLSH` index that accepts \\n        WeightedMinHash objects\\n        with `sample_size` samples and query\\n        Jaccard similarity threshold `threshold`.\\n        The initialized `WeightedMinHashLSH` will be optimized for the threshold by\\n        minizing the false positive and false negative.\\n\\n        Use `weights` to adjust the relative importance of \\n        minizing false positive and false negative when optimizing \\n        for the Jaccard similarity threshold.\\n        `weights` is a tuple in the format of \\n        (false_positive_weight, false_negative_weight).\\n        '", "#NEWLINE#", "super", "(", "WeightedMinHashLSH", ",", "self", ")", ".", "__init__", "(", "self", ",", "sample_size", ",", "weights", ")"], "error_location": [34], "repair_targets": [4], "repair_candidates": [2, 29, 34, 4, 8, 36, 12, 38], "provenances": [{"datasetProvenance": {"datasetName": "ETHPy150Open", "filepath": "ekzhu/datasketch/datasketch/lsh.py", "license": "mit", "note": "license: bigquery_api"}}], "txt_file": "eval__VARIABLE_MISUSE__SStuB.txt-00000-of-00300", "js_count": 3271, "results": {"model": "transformer", "prob": {"loc": [[1.3320433936314657e-05, 1.0554316309807632e-09, 4.308664189323075e-11, 1.204705779578319e-10, 2.8850055677764885e-09, 1.442925084971236e-10, 3.1505864583891707e-10, 5.877631020778651e-11, 1.348870015682735e-09, 1.8384607725074886e-10, 1.2154106610040571e-09, 7.051866035556742e-11, 1.046120190473232e-09, 2.399822285337194e-10, 3.1299762781600293e-10, 3.2925953519225004e-08, 5.778623690666507e-10, 4.745776660541878e-09, 9.016726254529317e-10, 4.3073353217515375e-10, 8.333134182691992e-09, 3.8284228565110823e-10, 1.7375512140205274e-10, 2.0234305342370362e-09, 1.6101966981985072e-10, 2.358872428984138e-12, 5.844640743601914e-11, 6.5059508891351925e-09, 4.285523047542483e-09, 3.2153071871654504e-10, 8.640703430540242e-11, 1.716315110866784e-11, 1.101078343085371e-11, 3.049865471282942e-09, 0.9999783039093018, 1.0768544278505487e-08, 7.529541562689701e-06, 9.35082500319595e-09, 8.568002272113517e-07, 1.3883154625915495e-09]], "pointer": [[0.0, 0.0, 2.970044432615282e-09, 0.0, 0.9999966621398926, 0.0, 0.0, 0.0, 3.168289140376146e-06, 0.0, 0.0, 0.0, 1.9598491007855046e-07, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 2.9112087740479353e-10, 0.0, 0.0, 0.0, 0.0, 3.8404873725639277e-10, 0.0, 1.3229712880757916e-09, 0.0, 7.275561264563635e-10, 0.0]], "target": [0.9999966621398926]}, "loss": [2.169585604860913e-05, 3.337865791763761e-06], "acc": [0.0, 1.0, 1.0, 1.0]}}


All source tokens:

['#NEWLINE#', 'def __init__(', 'self', ',', 'threshold', '=', '0.9', ',', 'sample_size', '=', '128', ',', 'weights', '=', '(', '0.5', ',', '0.5', ')', ')', ':', '#NEWLINE#', '#INDENT#', "'\\n        Create an empty `WeightedMinHashLSH` index that accepts \\n        WeightedMinHash objects\\n        with `sample_size` samples and query\\n        Jaccard similarity threshold `threshold`.\\n        The initialized `WeightedMinHashLSH` will be optimized for the threshold by\\n        minizing the false positive and false negative.\\n\\n        Use `weights` to adjust the relative importance of \\n        minizing false positive and false negative when optimizing \\n        for the Jaccard similarity threshold.\\n        `weights` is a tuple in the format of \\n        (false_positive_weight, false_negative_weight).\\n        '", '#NEWLINE#', 'super', '(', 'WeightedMinHashLSH', ',', 'self', ')', '.', '__init__', '(', 'self', ',', 'sample_size', ',', 'weights', ')']


All attention probs:

[0.024742284789681435, 0.021936524659395218, 0.05912796035408974, 0.02769116871058941, 0.0733771026134491, 0.02106623910367489, 0.02505962923169136, 0.019132090732455254, 0.05252804607152939, 0.017789242789149284, 0.02582945115864277, 0.020135147497057915, 0.05349987745285034, 0.012975240126252174, 0.012398253194987774, 0.01487936545163393, 0.012594496831297874, 0.022714341059327126, 0.01101879496127367, 0.009137769229710102, 0.012223265133798122, 0.01338361669331789, 0.012580388225615025, 0.01510930247604847, 0.014875264838337898, 0.015414207242429256, 0.012431475333869457, 0.024662761017680168, 0.013924898579716682, 0.03619135916233063, 0.012366955168545246, 0.011641895398497581, 0.01812543347477913, 0.015042874962091446, 0.08029225468635559, 0.020817581564188004, 0.048356249928474426, 0.02139424718916416, 0.04457676410675049, 0.018956175073981285]


Top-k source tokens:

['self', 'threshold', 'self', 'weights', 'sample_size', 'sample_size', 'weights', 'self', ',', '128']


Top-k attention probs:

[0.08029225468635559, 0.0733771026134491, 0.05912796035408974, 0.05349987745285034, 0.05252804607152939, 0.048356249928474426, 0.04457676410675049, 0.03619135916233063, 0.02769116871058941, 0.02582945115864277]
