
Original sample:

{"has_bug": true, "bug_kind": 1, "bug_kind_name": "VARIABLE_MISUSE", "source_tokens": ["#NEWLINE#", "def __init__(", "*", "args", ",", "**kwds", ")", ":", "#NEWLINE#", "#INDENT#", "'Initialize an ordered dictionary.  The signature is the same as\\n        regular dictionaries, but keyword arguments are not recommended because\\n        their insertion order is arbitrary.\\n\\n        '", "#NEWLINE#", "if", "(", "not", "args", ")", ":", "#NEWLINE#", "#INDENT#", "raise", "TypeError", "(", "\"descriptor '__init__' of 'OrderedDict' object needs an argument\"", ")", "#NEWLINE#", "#UNINDENT#", "self", "=", "args", "[", "0", "]", "#NEWLINE#", "args", "=", "args", "[", "1", ":", "]", "#NEWLINE#", "if", "(", "len", "(", "args", ")", ">", "1", ")", ":", "#NEWLINE#", "#INDENT#", "raise", "TypeError", "(", "(", "'expected at most 1 arguments, got %d'", "%", "len", "(", "args", ")", ")", ")", "#NEWLINE#", "#UNINDENT#", "try", ":", "#NEWLINE#", "#INDENT#", "self", ".", "__root", "#NEWLINE#", "#UNINDENT#", "except", "AttributeError", ":", "#NEWLINE#", "#INDENT#", "self", ".", "__hardroot", "=", "_Link", "(", ")", "#NEWLINE#", "self", ".", "__root", "=", "root", "=", "_proxy", "(", "self", ".", "__hardroot", ")", "#NEWLINE#", "root", ".", "prev", "=", "root", ".", "next", "=", "root", "#NEWLINE#", "self", ".", "__map", "=", "{", "#NEWLINE#", "#INDENT#", "#NEWLINE#", "#UNINDENT#", "}", "#NEWLINE#", "#UNINDENT#", "self", ".", "__update", "(", "*", "kwds", ",", "**", "kwds", ")"], "error_location": [130], "repair_targets": [3, 15, 29, 34, 36, 46, 62], "repair_candidates": [130, 133, 94, 103, 107, 111, 3, 15, 29, 34, 36, 46, 62, 27, 72, 82, 90, 98, 113, 125], "provenances": [{"datasetProvenance": {"datasetName": "ETHPy150Open", "filepath": "OpenCobolIDE/OpenCobolIDE/open_cobol_ide/extlibs/future/backports/misc.py", "license": "gpl-3.0", "note": "license: bigquery_api"}}], "txt_file": "eval__VARIABLE_MISUSE__SStuB.txt-00000-of-00300", "js_count": 2793, "results": {"model": "transformer", "prob": {"loc": [[0.017111118882894516, 4.1170753206642985e-07, 3.203702547693865e-08, 2.475668452461832e-07, 3.874639986634065e-08, 1.4597378594771726e-07, 3.217002131350455e-08, 8.086401237505925e-08, 5.267534675112984e-08, 4.263209874011409e-08, 1.4873536713366775e-07, 6.842815025720483e-08, 3.9984495714406876e-08, 7.59222302804119e-07, 1.4242486656712572e-07, 3.8928166759433225e-05, 3.46178232746297e-08, 8.84013147128826e-08, 1.2626233569790202e-07, 3.5170756973457173e-08, 2.1673170635949646e-07, 2.808950050336989e-08, 1.2221413214774657e-07, 9.442936743653263e-07, 9.717201976400247e-08, 3.55051348321922e-08, 2.6641973960295218e-08, 2.0786352195045765e-07, 2.8759737702444e-08, 8.309201803058386e-06, 1.0216995178780053e-05, 3.626156967584393e-06, 1.8583679661787755e-07, 5.916092149504948e-08, 1.0467181255080504e-06, 4.0442301951770787e-07, 2.581353510322515e-05, 1.0426250810269266e-05, 1.1893554585640231e-07, 1.356370660232642e-07, 3.858821742142027e-07, 1.3674979015831923e-07, 1.2644453306620562e-07, 1.9262136774500505e-08, 1.526157156206409e-08, 6.691780072287656e-07, 5.7974120863946155e-06, 2.7177961214874813e-08, 5.937503289032975e-08, 2.3489910461194086e-07, 6.236648886215335e-08, 1.2537681470803363e-07, 7.089933262705017e-08, 3.541491366831906e-08, 9.64255590929497e-08, 5.4649618164148706e-08, 5.132230995741338e-08, 3.7539740560532664e-07, 7.557966341664724e-07, 1.4395565983704728e-07, 3.9119022687827965e-08, 4.5736538822893635e-07, 0.00015546589565929025, 1.907075386498036e-07, 1.1709808944715405e-07, 8.980979515627041e-08, 8.300758480572767e-08, 8.153089225970689e-08, 1.0323438459636236e-07, 1.981106976245428e-07, 1.3709987456422823e-07, 1.0449532084066959e-07, 5.668531957780942e-05, 1.1756710271981774e-08, 8.663031958455747e-10, 6.559831433605723e-08, 6.020110276949708e-08, 9.871337169897743e-08, 4.914332762950835e-08, 9.306041448553515e-08, 8.104312598788965e-08, 5.100048738881924e-08, 4.3429244556136837e-07, 1.2799668880347781e-08, 6.747110647964405e-10, 1.813594430188914e-08, 2.9547533131335513e-07, 5.0602135161170736e-05, 2.7859704232469085e-07, 6.100700034039619e-08, 1.0398812122502932e-07, 1.8570807114315357e-08, 1.4061005693122297e-09, 1.285783923776762e-07, 3.4178532359874225e-07, 1.8989466354923934e-07, 4.5734656062279555e-09, 8.715279165016909e-08, 0.00020381170907057822, 2.9990388838996296e-08, 1.8343275787202629e-09, 6.057231871636759e-08, 2.7933168667004793e-08, 5.116424972584355e-07, 1.147022476999382e-08, 1.6573730166058454e-09, 1.2640226643156893e-08, 2.964494160551112e-05, 2.9380215593732828e-08, 1.9337074164127444e-09, 3.173259983668686e-07, 0.00487431138753891, 4.044255419444198e-08, 1.457749903011063e-07, 1.0634356506500353e-08, 1.8700569981433546e-09, 1.331741145804699e-06, 7.3323062679264694e-06, 1.0816034290428433e-07, 4.7928807589414646e-08, 4.9714174110704334e-08, 4.110999896056455e-08, 1.510705516238886e-07, 5.344132247842026e-08, 5.184761420196082e-08, 5.6148898863739305e-09, 7.058733153542107e-09, 9.184290550301455e-10, 3.270789648013306e-06, 4.003282185749413e-07, 0.7828254699707031, 1.8136159951609443e-07, 8.158844622130346e-08, 0.19456113874912262, 6.581132083738339e-07]], "pointer": [[0.0, 0.0, 0.0, 0.13525256514549255, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 6.506489444291219e-05, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.02716616727411747, 0.0, 6.176155875436962e-05, 0.0, 0.0, 0.0, 0.0, 0.5177091956138611, 0.0, 5.2446503104874864e-05, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.00040131047717295587, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.30522775650024414, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 3.53693358192686e-05, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0001380022004013881, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0007229039911180735, 0.0, 0.0, 0.0, 0.0005906019359827042, 0.0, 0.0, 0.0, 3.633039887063205e-05, 0.0, 0.0, 0.0, 0.0, 0.0013763121096417308, 0.0, 0.0, 0.0, 9.766354196472093e-05, 0.0, 0.0, 0.0, 7.860315236030146e-05, 0.0, 0.010948516428470612, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 3.601063508540392e-05, 0.0, 0.0, 0.0, 0.0, 4.558295358947362e-07, 0.0, 0.0, 2.9544448807428125e-06, 0.0]], "target": [0.9587700963020325]}, "loss": [0.24484553933143616, 0.04210396483540535], "acc": [0.0, 1.0, 1.0, 1.0]}}


All source tokens:

['#NEWLINE#', 'def __init__(', '*', 'args', ',', '**kwds', ')', ':', '#NEWLINE#', '#INDENT#', "'Initialize an ordered dictionary.  The signature is the same as\\n        regular dictionaries, but keyword arguments are not recommended because\\n        their insertion order is arbitrary.\\n\\n        '", '#NEWLINE#', 'if', '(', 'not', 'args', ')', ':', '#NEWLINE#', '#INDENT#', 'raise', 'TypeError', '(', '"descriptor \'__init__\' of \'OrderedDict\' object needs an argument"', ')', '#NEWLINE#', '#UNINDENT#', 'self', '=', 'args', '[', '0', ']', '#NEWLINE#', 'args', '=', 'args', '[', '1', ':', ']', '#NEWLINE#', 'if', '(', 'len', '(', 'args', ')', '>', '1', ')', ':', '#NEWLINE#', '#INDENT#', 'raise', 'TypeError', '(', '(', "'expected at most 1 arguments, got %d'", '%', 'len', '(', 'args', ')', ')', ')', '#NEWLINE#', '#UNINDENT#', 'try', ':', '#NEWLINE#', '#INDENT#', 'self', '.', '__root', '#NEWLINE#', '#UNINDENT#', 'except', 'AttributeError', ':', '#NEWLINE#', '#INDENT#', 'self', '.', '__hardroot', '=', '_Link', '(', ')', '#NEWLINE#', 'self', '.', '__root', '=', 'root', '=', '_proxy', '(', 'self', '.', '__hardroot', ')', '#NEWLINE#', 'root', '.', 'prev', '=', 'root', '.', 'next', '=', 'root', '#NEWLINE#', 'self', '.', '__map', '=', '{', '#NEWLINE#', '#INDENT#', '#NEWLINE#', '#UNINDENT#', '}', '#NEWLINE#', '#UNINDENT#', 'self', '.', '__update', '(', '*', 'kwds', ',', '**', 'kwds', ')']


All attention probs:

[0.01020787749439478, 0.00956045277416706, 0.016902906820178032, 0.020901216194033623, 0.012894212268292904, 0.04639377444982529, 0.012177370488643646, 0.008796466514468193, 0.008478326722979546, 0.008168121799826622, 0.013161218725144863, 0.009701821953058243, 0.008912562392652035, 0.007869475521147251, 0.006631908938288689, 0.017174651846289635, 0.0058412798680365086, 0.0062469118274748325, 0.007180958520621061, 0.007414152380079031, 0.008582938462495804, 0.0053791762329638, 0.005492073018103838, 0.005815751850605011, 0.004533233121037483, 0.005519920960068703, 0.0045434944331645966, 0.025048088282346725, 0.00429564481601119, 0.012776771560311317, 0.005062829703092575, 0.006802835967391729, 0.004878055304288864, 0.005443582311272621, 0.016420606523752213, 0.004508160520344973, 0.011489230208098888, 0.005634891800582409, 0.0060583362355828285, 0.0037108310498297215, 0.003150886157527566, 0.004882096778601408, 0.0069055696949362755, 0.004063405096530914, 0.003377641784027219, 0.004181679338216782, 0.009749314747750759, 0.002721637487411499, 0.0035084672272205353, 0.00575261190533638, 0.0028523015789687634, 0.0029136789962649345, 0.0036050190683454275, 0.003839402459561825, 0.005419567693024874, 0.0034767212346196175, 0.002998131327331066, 0.0034744921140372753, 0.005916987545788288, 0.0034876656718552113, 0.003246675245463848, 0.003679937217384577, 0.012973710894584656, 0.0030403758864849806, 0.003154727863147855, 0.0033565538469702005, 0.005411653779447079, 0.005514858290553093, 0.007395604625344276, 0.004365679807960987, 0.004444355610758066, 0.004109371453523636, 0.01473180204629898, 0.0024419045075774193, 0.0036488480400294065, 0.0042733848094940186, 0.0038498539943248034, 0.005547637585550547, 0.006206163205206394, 0.0036449162289500237, 0.004241134971380234, 0.003917895257472992, 0.0082863075658679, 0.002119567012414336, 0.004671901930123568, 0.0034172087907791138, 0.007789471186697483, 0.007942486554384232, 0.0040421560406684875, 0.004692083690315485, 0.014273563399910927, 0.0023311057593673468, 0.004659297876060009, 0.0037960794288665056, 0.008711454458534718, 0.004420848563313484, 0.0035370662808418274, 0.004231182858347893, 0.016992688179016113, 0.00303948693908751, 0.003630356164649129, 0.0029430065769702196, 0.00602048309519887, 0.013623302802443504, 0.0032465511467307806, 0.006326544564217329, 0.003994671627879143, 0.013557549566030502, 0.0020723585039377213, 0.004292953293770552, 0.004616653546690941, 0.02619699016213417, 0.005457698367536068, 0.010512334294617176, 0.0019984713289886713, 0.003267694963142276, 0.00415796460583806, 0.004873568192124367, 0.004267197567969561, 0.0038441200740635395, 0.0045490809716284275, 0.004868679214268923, 0.004761083517223597, 0.005575351882725954, 0.006080688443034887, 0.013926908373832703, 0.005215838085860014, 0.0053184921853244305, 0.007981042377650738, 0.00671001709997654, 0.044089894741773605, 0.004824673291295767, 0.005091001279652119, 0.04258124902844429, 0.0044851284474134445]


Top-k source tokens:

['**kwds', 'kwds', 'kwds', 'root', 'self', 'args', 'args', 'self', '*', 'args']


Top-k attention probs:

[0.04639377444982529, 0.044089894741773605, 0.04258124902844429, 0.02619699016213417, 0.025048088282346725, 0.020901216194033623, 0.017174651846289635, 0.016992688179016113, 0.016902906820178032, 0.016420606523752213]
