
Original sample:

{"has_bug": true, "bug_kind": 1, "bug_kind_name": "VARIABLE_MISUSE", "source_tokens": ["#NEWLINE#", "def ValidateCombinedSourceReferencesString(", "source_refs", ")", ":", "#NEWLINE#", "#INDENT#", "'Determines if source_refs contains a valid list of source references.\\n\\n  Args:\\n    source_refs: A multi-line string containing one source reference per line.\\n\\n  Raises:\\n    ValidationError: when the reference is malformed.\\n  '", "#NEWLINE#", "if", "(", "len", "(", "ref", ")", ">", "SOURCE_REFERENCES_MAX_SIZE", ")", ":", "#NEWLINE#", "#INDENT#", "raise", "validation", ".", "ValidationError", "(", "(", "'Total source reference(s) size exceeds the limit: %d > %d'", "%", "(", "len", "(", "source_refs", ")", ",", "SOURCE_REFERENCES_MAX_SIZE", ")", ")", ")", "#NEWLINE#", "#UNINDENT#", "for", "ref", "in", "source_refs", ".", "splitlines", "(", ")", ":", "#NEWLINE#", "#INDENT#", "ValidateSourceReference", "(", "ref", ".", "strip", "(", ")", ")"], "error_location": [13], "repair_targets": [2, 32, 44], "repair_candidates": [13, 42, 54, 2, 32, 44], "provenances": [{"datasetProvenance": {"datasetName": "ETHPy150Open", "filepath": "GoogleCloudPlatform/python-compat-runtime/appengine-compat/exported_appengine_sdk/google/appengine/api/appinfo.py", "license": "apache-2.0", "note": "license: bigquery_api"}}], "txt_file": "eval__VARIABLE_MISUSE__SStuB.txt-00000-of-00300", "js_count": 1088, "results": {"model": "transformer", "prob": {"loc": [[2.2566022380487993e-05, 7.754081265964885e-10, 2.168738788554947e-08, 2.7181357165062536e-10, 3.690904526454375e-10, 2.0816952328583938e-10, 1.878790595322144e-10, 5.836735539332949e-09, 4.088577254535153e-10, 7.557171000094343e-10, 1.3685279298680797e-10, 1.995549558930776e-10, 1.5565037037035268e-09, 0.9999685287475586, 6.292106835559252e-10, 1.0367363634244953e-09, 8.749704072386066e-09, 7.869463414245104e-10, 1.4967322936598748e-09, 8.088399394701185e-10, 2.663280429526793e-10, 1.636210784916603e-11, 4.482080817602707e-10, 5.130854421886433e-11, 5.394737781494463e-11, 2.9069097129408306e-10, 5.619044118887473e-10, 3.757750111077485e-09, 2.2008565803144364e-10, 2.041926072671174e-10, 1.5815841691857457e-10, 1.1279065459390836e-09, 8.727815838938113e-06, 3.848900642644537e-10, 4.4153625200493707e-10, 1.7748998937250349e-09, 4.4235051732677277e-10, 2.7349070230719974e-10, 1.5046774937133023e-10, 2.500188944765114e-10, 2.5329771613513685e-10, 4.2828965374219763e-10, 1.1067604610559556e-08, 8.206074708638766e-11, 1.601959898067662e-09, 2.2328475179911322e-10, 4.4324554443475606e-11, 4.1028261343889483e-10, 3.5909927809107955e-10, 1.82689430250349e-09, 1.4976174744774085e-09, 6.8073618963993e-10, 4.3909401115094226e-10, 1.701631058281805e-10, 9.716759308275869e-08, 1.984693659418113e-10, 3.191688927040026e-11, 2.0196322392251886e-09, 7.55181028821994e-10, 5.05883057666523e-10]], "pointer": [[0.0, 0.0, 0.9807327389717102, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 9.202209838576891e-08, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.019229333847761154, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.5992871027492583e-08, 0.0, 3.785614171647467e-05, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.8505900811760512e-08, 0.0, 0.0, 0.0, 0.0, 0.0]], "target": [0.9999999403953552]}, "loss": [3.1470757676288486e-05, 5.960464477539063e-08], "acc": [0.0, 1.0, 1.0, 1.0]}}


All source tokens:

['#NEWLINE#', 'def ValidateCombinedSourceReferencesString(', 'source_refs', ')', ':', '#NEWLINE#', '#INDENT#', "'Determines if source_refs contains a valid list of source references.\\n\\n  Args:\\n    source_refs: A multi-line string containing one source reference per line.\\n\\n  Raises:\\n    ValidationError: when the reference is malformed.\\n  '", '#NEWLINE#', 'if', '(', 'len', '(', 'ref', ')', '>', 'SOURCE_REFERENCES_MAX_SIZE', ')', ':', '#NEWLINE#', '#INDENT#', 'raise', 'validation', '.', 'ValidationError', '(', '(', "'Total source reference(s) size exceeds the limit: %d > %d'", '%', '(', 'len', '(', 'source_refs', ')', ',', 'SOURCE_REFERENCES_MAX_SIZE', ')', ')', ')', '#NEWLINE#', '#UNINDENT#', 'for', 'ref', 'in', 'source_refs', '.', 'splitlines', '(', ')', ':', '#NEWLINE#', '#INDENT#', 'ValidateSourceReference', '(', 'ref', '.', 'strip', '(', ')', ')']


All attention probs:

[0.029185200110077858, 0.01941520906984806, 0.06444701552391052, 0.024958234280347824, 0.01780509389936924, 0.017562076449394226, 0.01497301273047924, 0.024156149476766586, 0.015887590125203133, 0.018403097987174988, 0.014902109280228615, 0.014907249249517918, 0.01445959135890007, 0.08787249773740768, 0.009455587714910507, 0.01018579863011837, 0.018443694338202477, 0.007970751263201237, 0.00938257947564125, 0.012025738134980202, 0.012424515560269356, 0.014133956283330917, 0.018717044964432716, 0.00805218331515789, 0.008580365218222141, 0.008386649191379547, 0.008666862733662128, 0.010448041372001171, 0.007878473028540611, 0.008369935676455498, 0.008897082880139351, 0.011411129496991634, 0.04841473326086998, 0.011911601759493351, 0.014546569436788559, 0.01424875296652317, 0.01116391271352768, 0.010807663202285767, 0.010156581178307533, 0.014171126298606396, 0.011981524527072906, 0.01155132707208395, 0.045077767223119736, 0.012664712965488434, 0.02587934024631977, 0.008204571902751923, 0.00936565175652504, 0.009114096872508526, 0.00893823616206646, 0.009806770831346512, 0.010992486961185932, 0.011580533348023891, 0.025613456964492798, 0.010708353482186794, 0.025569897145032883, 0.006761861965060234, 0.010335388593375683, 0.013245843350887299, 0.01157208252698183, 0.01325064804404974]


Top-k source tokens:

['ref', 'source_refs', 'source_refs', 'ref', '#NEWLINE#', 'source_refs', 'ValidateSourceReference', 'ref', ')', "'Determines if source_refs contains a valid list of source references.\\n\\n  Args:\\n    source_refs: A multi-line string containing one source reference per line.\\n\\n  Raises:\\n    ValidationError: when the reference is malformed.\\n  '"]


Top-k attention probs:

[0.08787249773740768, 0.06444701552391052, 0.04841473326086998, 0.045077767223119736, 0.029185200110077858, 0.02587934024631977, 0.025613456964492798, 0.025569897145032883, 0.024958234280347824, 0.024156149476766586]
