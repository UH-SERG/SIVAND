
Original sample:

{"has_bug": true, "bug_kind": 1, "bug_kind_name": "VARIABLE_MISUSE", "source_tokens": ["#NEWLINE#", "def test_get_import_name_without_alias(", "self", ")", ":", "#NEWLINE#", "#INDENT#", "\"\\n        Test that function get_name_without_alias() will work on a string.\\n        - Note: This isn't truly needed when pipreqs is walking the AST to find imports\\n        \"", "#NEWLINE#", "import_name_with_alias", "=", "'requests as R'", "#NEWLINE#", "expected_import_name_without_alias", "=", "'requests'", "#NEWLINE#", "import_name_without_aliases", "=", "pipreqs", ".", "get_name_without_alias", "(", "self", ")", "#NEWLINE#", "self", ".", "assertEqual", "(", "import_name_without_aliases", ",", "expected_import_name_without_alias", ")"], "error_location": [23], "repair_targets": [9], "repair_candidates": [2, 23, 26, 9, 17, 30, 13, 32], "provenances": [{"datasetProvenance": {"datasetName": "ETHPy150Open", "filepath": "bndr/pipreqs/tests/test_pipreqs.py", "license": "apache-2.0", "note": "license: bigquery_api"}}], "txt_file": "eval__VARIABLE_MISUSE__SStuB.txt-00001-of-00300", "js_count": 4089, "results": {"model": "transformer", "prob": {"loc": [[2.530630126784672e-06, 1.9141659091115315e-10, 1.25959062624581e-10, 7.388100548011423e-12, 4.672485922480041e-12, 6.7590698663022586e-12, 4.677880912490329e-12, 4.4835125195819e-12, 4.709258590723797e-12, 1.9687036723059492e-10, 1.2947985565670006e-11, 2.696348526398662e-11, 6.633916072723567e-12, 3.0475266754592667e-09, 8.959609096304e-12, 3.952388069605739e-11, 7.195170674545448e-12, 7.178495575743682e-10, 3.966854785191626e-13, 1.3830083996427267e-12, 1.833202209824969e-12, 2.936911998319136e-12, 3.1794393506867635e-11, 0.9999874830245972, 3.542053456095928e-11, 3.5194176132430366e-12, 6.591524201460253e-12, 6.363813555981812e-13, 6.593632974685737e-13, 1.819501797492573e-12, 1.0002920134866145e-05, 2.7454930690007373e-12, 1.9932880235273842e-08, 2.7301297073761832e-12]], "pointer": [[0.0, 0.0, 5.810950387541425e-09, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.9852161407470703, 0.0, 0.0, 0.0, 0.014783689752221107, 0.0, 0.0, 0.0, 2.505066598601502e-09, 0.0, 0.0, 0.0, 0.0, 0.0, 5.392689073069334e-10, 0.0, 0.0, 1.0073290118706169e-10, 0.0, 0.0, 0.0, 4.3992529064063035e-10, 0.0, 7.162893211898336e-08, 0.0]], "target": [0.9852161407470703]}, "loss": [1.2516897186287679e-05, 0.014894229359924793], "acc": [0.0, 1.0, 1.0, 1.0]}}


All source tokens:

['#NEWLINE#', 'def test_get_import_name_without_alias(', 'self', ')', ':', '#NEWLINE#', '#INDENT#', '"\\n        Test that function get_name_without_alias() will work on a string.\\n        - Note: This isn\'t truly needed when pipreqs is walking the AST to find imports\\n        "', '#NEWLINE#', 'import_name_with_alias', '=', "'requests as R'", '#NEWLINE#', 'expected_import_name_without_alias', '=', "'requests'", '#NEWLINE#', 'import_name_without_aliases', '=', 'pipreqs', '.', 'get_name_without_alias', '(', 'self', ')', '#NEWLINE#', 'self', '.', 'assertEqual', '(', 'import_name_without_aliases', ',', 'expected_import_name_without_alias', ')']


All attention probs:

[0.027599405497312546, 0.025690700858831406, 0.07707208395004272, 0.02671763487160206, 0.017440402880311012, 0.02326895296573639, 0.02077622525393963, 0.02398287132382393, 0.021803297102451324, 0.05767345800995827, 0.020887145772576332, 0.025595104321837425, 0.02148927003145218, 0.03944401070475578, 0.01470286026597023, 0.01988399215042591, 0.019074441865086555, 0.046622637659311295, 0.016804249957203865, 0.02436825819313526, 0.00873329397290945, 0.014066105708479881, 0.014557922258973122, 0.10328750312328339, 0.010027751326560974, 0.01653459668159485, 0.03580773249268532, 0.010290723294019699, 0.018855510279536247, 0.020405789837241173, 0.05210829898715019, 0.030054116621613503, 0.060957930982112885, 0.03341572359204292]


Top-k source tokens:

['self', 'self', 'expected_import_name_without_alias', 'import_name_with_alias', 'import_name_without_aliases', 'import_name_without_aliases', 'expected_import_name_without_alias', 'self', ')', ',']


Top-k attention probs:

[0.10328750312328339, 0.07707208395004272, 0.060957930982112885, 0.05767345800995827, 0.05210829898715019, 0.046622637659311295, 0.03944401070475578, 0.03580773249268532, 0.03341572359204292, 0.030054116621613503]
