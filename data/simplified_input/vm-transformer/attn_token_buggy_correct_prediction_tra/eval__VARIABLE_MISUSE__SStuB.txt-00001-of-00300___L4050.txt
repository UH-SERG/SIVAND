
Original sample:

{"has_bug": true, "bug_kind": 1, "bug_kind_name": "VARIABLE_MISUSE", "source_tokens": ["#NEWLINE#", "@", "httpretty", ".", "activate", "#NEWLINE#", "def test_quandl_exceptions(", "self", ")", ":", "#NEWLINE#", "#INDENT#", "quandl_errors", "=", "[", "(", "'QELx04'", ",", "429", ",", "LimitExceededError", ")", ",", "(", "'QEMx01'", ",", "500", ",", "InternalServerError", ")", ",", "(", "'QEAx01'", ",", "400", ",", "AuthenticationError", ")", ",", "(", "'QEPx02'", ",", "403", ",", "ForbiddenError", ")", ",", "(", "'QESx03'", ",", "422", ",", "InvalidRequestError", ")", ",", "(", "'QECx05'", ",", "404", ",", "NotFoundError", ")", ",", "(", "'QEXx01'", ",", "503", ",", "ServiceUnavailableError", ")", ",", "(", "'QEZx02'", ",", "400", ",", "QuandlError", ")", "]", "#NEWLINE#", "httpretty", ".", "register_uri", "(", "httpretty", ".", "GET", ",", "'https://www.quandl.com/api/v3/databases'", ",", "responses", "=", "[", "httpretty", ".", "Response", "(", "body", "=", "json", ".", "dumps", "(", "{", "#NEWLINE#", "#INDENT#", "'quandl_error'", ":", "{", "#NEWLINE#", "#INDENT#", "'code'", ":", "x", "[", "0", "]", ",", "#NEWLINE#", "'message'", ":", "'something went wrong'", ",", "#NEWLINE#", "#UNINDENT#", "}", ",", "#NEWLINE#", "#UNINDENT#", "}", ")", ",", "status", "=", "self", "[", "1", "]", ")", "for", "x", "in", "quandl_errors", "]", ")", "#NEWLINE#", "for", "expected_error", "in", "quandl_errors", ":", "#NEWLINE#", "#INDENT#", "self", ".", "assertRaises", "(", "expected_error", "[", "2", "]", ",", "(", "lambda", ":", "Connection", ".", "request", "(", "'get'", ",", "'databases'", ")", ")", ")"], "error_location": [134], "repair_targets": [113, 140], "repair_candidates": [147, 157, 7, 134, 153, 113, 140, 12, 142, 149], "provenances": [{"datasetProvenance": {"datasetName": "ETHPy150Open", "filepath": "quandl/quandl-python/test/test_connection.py", "license": "mit", "note": "license: github_api"}}], "txt_file": "eval__VARIABLE_MISUSE__SStuB.txt-00001-of-00300", "js_count": 4050, "results": {"model": "transformer", "prob": {"loc": [[2.518704059184529e-05, 4.750618787241478e-10, 2.6029282895745354e-12, 3.3128721120545546e-12, 8.8261065123163e-12, 8.622932229362945e-12, 2.414732693314936e-12, 4.6608911175027856e-11, 1.2188887052455577e-12, 1.7887086126502916e-12, 1.4788384275835065e-12, 1.2959124875630557e-12, 1.4260054248538268e-10, 5.024505117523503e-12, 3.2066614988335296e-12, 6.248543783088367e-12, 1.3252765204696537e-11, 4.438197205580696e-12, 1.0879056336343673e-11, 3.878884626690171e-12, 1.8321180128566539e-09, 3.1618822143864023e-12, 3.3072594142480316e-12, 8.121813985240145e-12, 3.140618667907269e-11, 5.832264792643427e-12, 1.90726271581676e-11, 5.578906694253538e-12, 1.1633256857823682e-10, 3.9793836628665424e-12, 3.755415249606653e-12, 1.0322936949691552e-11, 4.196228087227638e-11, 6.520487275119002e-12, 2.929143386176669e-11, 6.77586372427319e-12, 5.849436213178905e-11, 5.932861840696191e-12, 7.76585479950187e-12, 1.4449731342014438e-11, 5.456455426378071e-11, 1.5669007757956877e-11, 5.657217402865733e-11, 1.3187281128201889e-11, 4.092921140896877e-11, 1.476691165180899e-11, 1.5403971501126712e-11, 2.188193723440257e-11, 5.709901995665234e-11, 1.8772315299453446e-11, 5.611641012981394e-11, 1.4314821897287722e-11, 3.463600586894877e-11, 1.0693002039374733e-11, 9.133552421325408e-12, 1.7667648594121843e-11, 5.490876850422488e-11, 1.2647034461354956e-11, 4.898547886766913e-11, 1.3636728898869244e-11, 4.3616978084859426e-11, 1.1986790032780803e-11, 9.824547425596464e-12, 3.2552849305034215e-11, 1.859031817375012e-10, 1.4687195903917427e-11, 1.2179418584779e-10, 1.2385398262537706e-11, 2.6023797006224925e-10, 8.071685680954843e-12, 8.735932983949812e-12, 2.3839581350659778e-11, 1.9438166354301956e-10, 1.727494362835369e-11, 6.603495528167969e-11, 1.5008215156764315e-11, 1.8851405159114876e-10, 6.0299009708997264e-12, 5.054504124274439e-12, 5.196345524011159e-12, 5.192362165229447e-12, 8.71918683087447e-12, 2.1246353634762905e-11, 6.266231023649427e-12, 2.0018589563797207e-10, 4.1054777633053874e-11, 3.1057940941270346e-11, 3.0761806296686345e-11, 1.8332496631856543e-10, 2.0739859482588052e-11, 8.948598806401975e-11, 3.050606295351699e-11, 9.31144397697814e-11, 3.4228828105220543e-11, 1.5561281430098717e-11, 6.603290830797803e-12, 3.335082904287745e-11, 3.0696485353587377e-09, 3.132046011433687e-11, 6.271008712310788e-10, 3.163144399187523e-11, 1.5260737118438783e-11, 1.0460056432126663e-10, 1.0493287488921865e-10, 2.2500282886861456e-11, 1.3814906683895511e-11, 1.251737602459002e-10, 1.682466492514134e-11, 3.356729824655069e-11, 1.8942873311611486e-11, 1.5466444097667065e-11, 1.0229488089930072e-10, 1.847207803384876e-11, 4.5347306354415196e-07, 1.7041808242357348e-10, 1.3559756095737896e-10, 1.8216837760487437e-11, 1.1183364997946477e-11, 1.4043812987529769e-11, 1.0769187624992682e-10, 2.030220262738691e-11, 5.635197308784257e-10, 9.8391746139459e-12, 1.8719397559818773e-11, 1.2864953026492376e-11, 8.199625006755085e-12, 8.392423908598623e-12, 1.0282848357523466e-11, 8.472585480423511e-12, 4.529912469436459e-12, 1.468366747636729e-11, 9.828782752963061e-12, 3.4253797021044363e-10, 1.3045557689661536e-11, 0.9999704360961914, 9.32822569188474e-11, 2.5161744687807186e-08, 7.103269361596887e-11, 1.9169466014545833e-10, 1.9097062819994903e-10, 1.275861860605687e-09, 4.1600065406321995e-12, 2.7557478006201563e-06, 1.3891401917653923e-11, 3.946407436949961e-11, 1.673045729733147e-11, 5.937830956093126e-12, 3.3378080854795655e-10, 2.0359504013245378e-12, 9.866973869065987e-07, 2.1246233938843062e-11, 1.400409215673859e-11, 8.263477575820577e-12, 7.522708844742709e-11, 1.0094582288122655e-11, 2.254142402249859e-12, 2.8443726540761105e-11, 2.0377059684051346e-07, 1.1881520767254017e-10, 9.595689798302942e-10, 1.911684005539982e-11, 1.678444015718039e-11, 9.768341517613077e-12, 8.719112654098637e-10, 3.50728404652223e-11, 6.251825446224046e-11, 1.6447811862496664e-11, 3.4882485355075543e-12, 1.0880243928035327e-10, 2.629087392236329e-09, 1.1758001516870564e-10, 3.6622744836734e-09, 1.1074224176566005e-10, 7.44226069659959e-11, 5.5008456123495364e-11]], "pointer": [[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.7318515688202751e-07, 0.0, 0.0, 0.0, 0.0, 0.0005273625138215721, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.2529790699481964, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0337773801438743e-06, 0.0, 0.0, 0.0, 0.0, 0.0, 0.7452883720397949, 0.0, 5.7770073908613995e-05, 0.0, 0.0, 0.0, 0.0, 0.000592613301705569, 0.0, 6.180282798595726e-05, 0.0, 0.0, 0.0, 7.090781295460147e-10, 0.0, 0.0, 0.0, 0.0004917517071589828, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]], "target": [0.998267412185669]}, "loss": [2.95634672511369e-05, 0.0017340905033051968], "acc": [0.0, 1.0, 1.0, 1.0]}}


All source tokens:

['#NEWLINE#', '@', 'httpretty', '.', 'activate', '#NEWLINE#', 'def test_quandl_exceptions(', 'self', ')', ':', '#NEWLINE#', '#INDENT#', 'quandl_errors', '=', '[', '(', "'QELx04'", ',', '429', ',', 'LimitExceededError', ')', ',', '(', "'QEMx01'", ',', '500', ',', 'InternalServerError', ')', ',', '(', "'QEAx01'", ',', '400', ',', 'AuthenticationError', ')', ',', '(', "'QEPx02'", ',', '403', ',', 'ForbiddenError', ')', ',', '(', "'QESx03'", ',', '422', ',', 'InvalidRequestError', ')', ',', '(', "'QECx05'", ',', '404', ',', 'NotFoundError', ')', ',', '(', "'QEXx01'", ',', '503', ',', 'ServiceUnavailableError', ')', ',', '(', "'QEZx02'", ',', '400', ',', 'QuandlError', ')', ']', '#NEWLINE#', 'httpretty', '.', 'register_uri', '(', 'httpretty', '.', 'GET', ',', "'https://www.quandl.com/api/v3/databases'", ',', 'responses', '=', '[', 'httpretty', '.', 'Response', '(', 'body', '=', 'json', '.', 'dumps', '(', '{', '#NEWLINE#', '#INDENT#', "'quandl_error'", ':', '{', '#NEWLINE#', '#INDENT#', "'code'", ':', 'x', '[', '0', ']', ',', '#NEWLINE#', "'message'", ':', "'something went wrong'", ',', '#NEWLINE#', '#UNINDENT#', '}', ',', '#NEWLINE#', '#UNINDENT#', '}', ')', ',', 'status', '=', 'self', '[', '1', ']', ')', 'for', 'x', 'in', 'quandl_errors', ']', ')', '#NEWLINE#', 'for', 'expected_error', 'in', 'quandl_errors', ':', '#NEWLINE#', '#INDENT#', 'self', '.', 'assertRaises', '(', 'expected_error', '[', '2', ']', ',', '(', 'lambda', ':', 'Connection', '.', 'request', '(', "'get'", ',', "'databases'", ')', ')', ')']


All attention probs:

[0.0116562619805336, 0.009648616425693035, 0.014876779168844223, 0.01119046937674284, 0.007763851899653673, 0.009211796335875988, 0.007584837730973959, 0.0461382158100605, 0.009930859319865704, 0.007238111924380064, 0.008070279844105244, 0.00881260633468628, 0.025480110198259354, 0.006291203200817108, 0.004814453888684511, 0.00614542793482542, 0.0065766796469688416, 0.006061835214495659, 0.006503368727862835, 0.006506548263132572, 0.0143594304099679, 0.005064019467681646, 0.005042507778853178, 0.0055221375077962875, 0.005709992256015539, 0.004074028693139553, 0.004701526369899511, 0.0034779913257807493, 0.0063859811052680016, 0.0031070709228515625, 0.0038149480242282152, 0.0038077710196375847, 0.004568759351968765, 0.0038532239850610495, 0.004916474688798189, 0.003606429323554039, 0.005255226045846939, 0.0030334435869008303, 0.0037423246540129185, 0.0036465763114392757, 0.003061214229092002, 0.003447647439315915, 0.005993601866066456, 0.0037164369132369757, 0.0038154616486281157, 0.002586588729172945, 0.0031837564893066883, 0.002858880441635847, 0.003467921633273363, 0.003405004972591996, 0.003567099804058671, 0.002905321540310979, 0.002780696377158165, 0.0023368194233626127, 0.0027453145012259483, 0.003144901478663087, 0.003395119681954384, 0.002786827040836215, 0.003687947988510132, 0.002851511351764202, 0.0027929518837481737, 0.002429775893688202, 0.0027127801440656185, 0.0028861623723059893, 0.004624446853995323, 0.0029460086952894926, 0.005447934381663799, 0.003500626189634204, 0.005936786066740751, 0.002719215117394924, 0.0032618544064462185, 0.003186148591339588, 0.004180183634161949, 0.0030745570547878742, 0.004114237613976002, 0.0026814094744622707, 0.005972225684672594, 0.0019625697750598192, 0.001956712920218706, 0.003951104357838631, 0.00518080685287714, 0.0021148095838725567, 0.00275562796741724, 0.0031642387621104717, 0.0069344742223620415, 0.0024652082938700914, 0.003701323177665472, 0.003541350830346346, 0.005127725191414356, 0.002846563933417201, 0.0050016120076179504, 0.002671359572559595, 0.0025977131444960833, 0.0038544891867786646, 0.0020314771682024, 0.00273300358094275, 0.0029990179464221, 0.006576473359018564, 0.0030904279556125402, 0.006228186190128326, 0.00214278232306242, 0.0028210191521793604, 0.0033735092729330063, 0.0036157560534775257, 0.004161311779171228, 0.0032740288879722357, 0.005431249737739563, 0.0027028133627027273, 0.001966313924640417, 0.0028588585555553436, 0.0035120821557939053, 0.005044382531195879, 0.004180304706096649, 0.018492626026272774, 0.002453442895784974, 0.0032388747204095125, 0.002081271493807435, 0.0016546323895454407, 0.003384533105418086, 0.004582502413541079, 0.0033418142702430487, 0.004498806782066822, 0.0026153905782848597, 0.003450328717008233, 0.003885791404172778, 0.004555305000394583, 0.004049382638186216, 0.004501778166741133, 0.004434887319803238, 0.005353028420358896, 0.0032286380883306265, 0.0030807489529252052, 0.009518478065729141, 0.002503999974578619, 0.06954950094223022, 0.0020004480611532927, 0.003912016749382019, 0.0024390672333538532, 0.001722814398817718, 0.0031284803990274668, 0.019033245742321014, 0.0035555334761738777, 0.027805523946881294, 0.002437867224216461, 0.0022052933927625418, 0.0037547610700130463, 0.003835284849628806, 0.01557680033147335, 0.004024692811071873, 0.032028526067733765, 0.0036751125007867813, 0.003741959808394313, 0.004645796492695808, 0.018736375495791435, 0.004783193580806255, 0.005452263168990612, 0.004701058380305767, 0.013579312711954117, 0.004477336071431637, 0.005196822807192802, 0.003839625045657158, 0.0030425454024225473, 0.003548435866832733, 0.0073365820571780205, 0.003350494196638465, 0.00928978156298399, 0.002379048615694046, 0.004207699093967676, 0.003288556355983019, 0.003853705246001482, 0.00291504361666739, 0.005274844355881214, 0.003311112755909562, 0.0041112517938017845, 0.0043776859529316425]


Top-k source tokens:

['self', 'self', 'quandl_errors', 'quandl_errors', 'quandl_errors', 'x', 'self', 'x', 'expected_error', 'httpretty']


Top-k attention probs:

[0.06954950094223022, 0.0461382158100605, 0.032028526067733765, 0.027805523946881294, 0.025480110198259354, 0.019033245742321014, 0.018736375495791435, 0.018492626026272774, 0.01557680033147335, 0.014876779168844223]
