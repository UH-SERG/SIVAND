
Original sample:

{"has_bug": true, "bug_kind": 1, "bug_kind_name": "VARIABLE_MISUSE", "source_tokens": ["#NEWLINE#", "def bin(", "self", ",", "s", ")", ":", "#NEWLINE#", "#INDENT#", "' Return a value as a binary string '", "#NEWLINE#", "return", "(", "str", "(", "s", ")", "if", "(", "self", "<=", "1", ")", "else", "(", "bin", "(", "(", "s", ">>", "1", ")", ")", "+", "str", "(", "(", "s", "&", "1", ")", ")", ")", ")"], "error_location": [19], "repair_targets": [4, 15, 28, 37], "repair_candidates": [2, 19, 4, 15, 28, 37], "provenances": [{"datasetProvenance": {"datasetName": "ETHPy150Open", "filepath": "timknip/pyswf/swf/stream.py", "license": "mit", "note": "license: bigquery_api"}}], "txt_file": "eval__VARIABLE_MISUSE__SStuB.txt-00000-of-00300", "js_count": 1702, "results": {"model": "transformer", "prob": {"loc": [[5.9420814068289474e-05, 2.721274094952264e-09, 2.0521322419142507e-09, 1.7337462021593808e-10, 7.964398029969288e-09, 2.0185594862276446e-10, 1.9415481722351302e-10, 1.5280308962584144e-10, 1.2596575171830438e-10, 2.4352470040511776e-10, 1.6379470002547691e-10, 3.263614378745672e-11, 1.0565113020555295e-11, 1.9116139227115525e-11, 7.371351445906171e-11, 1.94738231584779e-06, 3.312210505868052e-10, 4.1504349956866804e-10, 1.5100501404852196e-10, 0.999901294708252, 1.209721212092063e-08, 3.785225188845942e-10, 1.7086105863484136e-09, 5.7188587199163976e-11, 3.417219285317685e-11, 2.6149206064363106e-11, 2.688194389310894e-10, 7.210026464754549e-10, 4.7269186325138435e-06, 5.2451731846758776e-09, 2.5233126699220065e-10, 1.1012152301148603e-09, 3.5518160634850915e-10, 3.096808920410865e-10, 7.870456890379796e-12, 5.973363470523907e-11, 1.3638003226734696e-10, 3.2533196645090356e-05, 4.52392290295478e-10, 2.5691326843713114e-10, 2.7053279061384217e-10, 2.550204492024477e-10, 2.071929849911669e-10, 1.769412255603342e-10]], "pointer": [[0.0, 0.0, 4.977607022738084e-05, 0.0, 0.14443078637123108, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.01647268608212471, 0.0, 0.0, 0.0, 7.076084148138762e-05, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.24948161840438843, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.5894944071769714, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]], "target": [0.9998794794082642]}, "loss": [9.858122211880982e-05, 0.0001205278531415388], "acc": [0.0, 1.0, 1.0, 1.0]}}


All source tokens:

['#NEWLINE#', 'def bin(', 'self', ',', 's', ')', ':', '#NEWLINE#', '#INDENT#', "' Return a value as a binary string '", '#NEWLINE#', 'return', '(', 'str', '(', 's', ')', 'if', '(', 'self', '<=', '1', ')', 'else', '(', 'bin', '(', '(', 's', '>>', '1', ')', ')', '+', 'str', '(', '(', 's', '&', '1', ')', ')', ')', ')']


All attention probs:

[0.03069763444364071, 0.019162561744451523, 0.08954140543937683, 0.02487548254430294, 0.05086573213338852, 0.020543327555060387, 0.017161330208182335, 0.01829930953681469, 0.01752941869199276, 0.023354722186923027, 0.022780807688832283, 0.02747020497918129, 0.014922299422323704, 0.020482605323195457, 0.01441359892487526, 0.0480322390794754, 0.009869934991002083, 0.013087945990264416, 0.010114600881934166, 0.09888622909784317, 0.011622443795204163, 0.019516874104738235, 0.01036839745938778, 0.011256868951022625, 0.011469617486000061, 0.01542019471526146, 0.011586125940084457, 0.012304636649787426, 0.03601304069161415, 0.012065590359270573, 0.01918845623731613, 0.013665501959621906, 0.014552759006619453, 0.018558688461780548, 0.01547306776046753, 0.01320563443005085, 0.014278588816523552, 0.05038701370358467, 0.015718722715973854, 0.01775849238038063, 0.011901984922587872, 0.013386393897235394, 0.0188591368496418, 0.01935037598013878]


Top-k source tokens:

['self', 'self', 's', 's', 's', 's', '#NEWLINE#', 'return', ',', "' Return a value as a binary string '"]


Top-k attention probs:

[0.09888622909784317, 0.08954140543937683, 0.05086573213338852, 0.05038701370358467, 0.0480322390794754, 0.03601304069161415, 0.03069763444364071, 0.02747020497918129, 0.02487548254430294, 0.023354722186923027]
