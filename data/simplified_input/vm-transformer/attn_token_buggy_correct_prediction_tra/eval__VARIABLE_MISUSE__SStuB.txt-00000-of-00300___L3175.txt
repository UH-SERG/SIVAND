
Original sample:

{"has_bug": true, "bug_kind": 1, "bug_kind_name": "VARIABLE_MISUSE", "source_tokens": ["#NEWLINE#", "def loads(", "s", ",", "key", "=", "None", ",", "salt", "=", "'django.core.signing'", ",", "serializer", "=", "JSONSerializer", ",", "max_age", "=", "None", ")", ":", "#NEWLINE#", "#INDENT#", "'\\n    Reverse of dumps(), raises BadSignature if signature fails.\\n\\n    The serializer is expected to accept a bytestring.\\n    '", "#NEWLINE#", "base64d", "=", "force_bytes", "(", "TimestampSigner", "(", "key", ",", "salt", "=", "salt", ")", ".", "unsign", "(", "s", ",", "max_age", "=", "max_age", ")", ")", "#NEWLINE#", "decompress", "=", "False", "#NEWLINE#", "if", "(", "base64d", "[", ":", "1", "]", "==", "b'.'", ")", ":", "#NEWLINE#", "#INDENT#", "base64d", "=", "base64d", "[", "1", ":", "]", "#NEWLINE#", "decompress", "=", "True", "#NEWLINE#", "#UNINDENT#", "data", "=", "b64_decode", "(", "base64d", ")", "#NEWLINE#", "if", "decompress", ":", "#NEWLINE#", "#INDENT#", "data", "=", "zlib", ".", "decompress", "(", "data", ")", "#NEWLINE#", "#UNINDENT#", "return", "serializer", "(", ")", ".", "loads", "(", "salt", ")"], "error_location": [107], "repair_targets": [78, 90, 96], "repair_candidates": [4, 31, 2, 40, 25, 54, 65, 67, 82, 12, 101, 48, 73, 86, 94, 8, 33, 35, 107, 16, 42, 44, 78, 90, 96], "provenances": [{"datasetProvenance": {"datasetName": "ETHPy150Open", "filepath": "AppScale/appscale/AppServer/lib/django-1.5/django/core/signing.py", "license": "apache-2.0", "note": "license: github_api"}}], "txt_file": "eval__VARIABLE_MISUSE__SStuB.txt-00000-of-00300", "js_count": 3175, "results": {"model": "transformer", "prob": {"loc": [[0.005157434847205877, 2.69801461172392e-08, 3.791240654749117e-09, 4.5016659844243634e-10, 5.0019179909099876e-09, 7.50142115091279e-10, 4.345225568247457e-10, 3.24119175942883e-10, 7.865070372758964e-09, 1.9033326026374198e-09, 1.2577667796165315e-09, 3.132507864211931e-10, 2.5607803877392143e-08, 2.1334534139327843e-09, 2.765859097308976e-09, 8.579776888950619e-10, 1.3261230336070184e-08, 2.835935486444896e-09, 2.023955003593869e-09, 6.32301377923028e-10, 9.240572196311803e-10, 1.5620293947193886e-09, 7.459644013607658e-10, 1.7770033222674897e-09, 6.186574585953508e-10, 1.0390688309769303e-08, 4.26996771274446e-10, 1.7630307880267537e-08, 1.8074639562826178e-09, 3.0500117986775876e-08, 4.367004535765773e-09, 2.7441665224614553e-06, 5.56736767798327e-10, 4.878075166026008e-10, 8.565502751523013e-10, 2.5310189499805347e-08, 1.697455925819824e-10, 4.3743383915106904e-10, 3.417222338431003e-10, 6.87207135641188e-09, 8.077889219748613e-07, 5.951965587058794e-10, 5.914397860351528e-09, 2.2796422527449067e-09, 1.708942249933898e-07, 4.062134628668446e-09, 2.712812641192386e-09, 2.1222033019796527e-09, 2.4835893341901283e-08, 2.6733739666440215e-09, 1.013286965445559e-08, 3.153695526947331e-09, 7.614092467633782e-09, 1.233830637659139e-08, 2.805217263812665e-05, 7.613849106746784e-08, 1.957865158885852e-08, 2.4510288909596056e-08, 4.275650944407516e-09, 5.933380009537359e-09, 1.0585223364500962e-08, 2.7809721192539882e-09, 9.837780368116e-09, 7.397602530545555e-09, 5.893081578278725e-09, 4.345662887317303e-07, 4.292369126801532e-09, 1.4181700862536673e-05, 1.2768095025705861e-08, 1.4313942031662918e-08, 6.230534754791961e-09, 9.324676142341559e-09, 5.799217106527976e-09, 2.65262176668557e-08, 7.92123966419922e-09, 7.553401815130201e-08, 3.988713803693145e-09, 5.336399322430907e-09, 4.435954892301197e-08, 9.744550721890732e-10, 1.6958145465650887e-07, 1.9766147829614056e-08, 7.04028716427274e-05, 2.006773414109375e-08, 1.381922309917627e-08, 1.1012455836123536e-08, 4.3218329665251076e-05, 2.5095937772334764e-08, 1.4488693800274177e-08, 8.093511638662676e-09, 1.4900903622105943e-08, 1.7872652247064025e-09, 9.147151303068313e-08, 2.1060417854101843e-09, 1.0638390168793421e-09, 2.9947063495683324e-08, 8.21561286556971e-07, 8.46379961672028e-08, 2.7982926198433233e-08, 3.635835099657925e-08, 5.074439979324552e-09, 6.6745529103684476e-09, 1.4468837683523361e-08, 1.216791787328475e-07, 9.003358059089805e-09, 2.7639814881297298e-09, 4.697200406411639e-09, 0.9946802258491516, 3.314066532311699e-08]], "pointer": [[0.0, 0.0, 0.0001150268071796745, 0.0, 6.429091445170343e-05, 0.0, 0.0, 0.0, 1.2442435036064126e-05, 0.0, 0.0, 0.0, 0.0001560691453050822, 0.0, 0.0, 0.0, 9.483496796747204e-06, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0005835471674799919, 0.0, 0.0, 0.0, 0.0, 0.0, 4.588021056406433e-07, 0.0, 9.96230440364343e-08, 0.0, 4.339838266531615e-09, 0.0, 0.0, 0.0, 0.0, 1.785608105819847e-06, 0.0, 8.204058588034968e-08, 0.0, 1.1335969674064472e-07, 0.0, 0.0, 0.0, 8.246098877862096e-05, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0720567843236495e-05, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.000690253044012934, 0.0, 1.9313322354719276e-06, 0.0, 0.0, 0.0, 0.0, 0.0, 0.00017784856026992202, 0.0, 0.0, 0.0, 0.0, 0.034282390028238297, 0.0, 0.0, 0.0, 5.293219146551564e-05, 0.0, 0.0, 0.0, 2.5803094104048796e-05, 0.0, 0.0, 0.0, 0.9631330966949463, 0.0, 0.0, 0.0, 0.00043334122165106237, 0.0, 0.00016496672469656914, 0.0, 0.0, 0.0, 0.0, 3.5472183412821323e-07, 0.0, 0.0, 0.0, 0.0, 0.0, 4.886457531938504e-07, 0.0]], "target": [0.9975804686546326]}, "loss": [0.005333954934030771, 0.002422463148832321], "acc": [0.0, 1.0, 1.0, 1.0]}}


All source tokens:

['#NEWLINE#', 'def loads(', 's', ',', 'key', '=', 'None', ',', 'salt', '=', "'django.core.signing'", ',', 'serializer', '=', 'JSONSerializer', ',', 'max_age', '=', 'None', ')', ':', '#NEWLINE#', '#INDENT#', "'\\n    Reverse of dumps(), raises BadSignature if signature fails.\\n\\n    The serializer is expected to accept a bytestring.\\n    '", '#NEWLINE#', 'base64d', '=', 'force_bytes', '(', 'TimestampSigner', '(', 'key', ',', 'salt', '=', 'salt', ')', '.', 'unsign', '(', 's', ',', 'max_age', '=', 'max_age', ')', ')', '#NEWLINE#', 'decompress', '=', 'False', '#NEWLINE#', 'if', '(', 'base64d', '[', ':', '1', ']', '==', "b'.'", ')', ':', '#NEWLINE#', '#INDENT#', 'base64d', '=', 'base64d', '[', '1', ':', ']', '#NEWLINE#', 'decompress', '=', 'True', '#NEWLINE#', '#UNINDENT#', 'data', '=', 'b64_decode', '(', 'base64d', ')', '#NEWLINE#', 'if', 'decompress', ':', '#NEWLINE#', '#INDENT#', 'data', '=', 'zlib', '.', 'decompress', '(', 'data', ')', '#NEWLINE#', '#UNINDENT#', 'return', 'serializer', '(', ')', '.', 'loads', '(', 'salt', ')']


All attention probs:

[0.014708349481225014, 0.010676230303943157, 0.02344237081706524, 0.014791413210332394, 0.02305201068520546, 0.013242186047136784, 0.008905019611120224, 0.008603830821812153, 0.023167084902524948, 0.010149895213544369, 0.014085253700613976, 0.011029090732336044, 0.026436645537614822, 0.008192974142730236, 0.0067426846362650394, 0.007264402695000172, 0.02336418442428112, 0.00915591698139906, 0.007667888421565294, 0.007361294701695442, 0.007235028315335512, 0.007249980699270964, 0.006607093382626772, 0.007159494329243898, 0.007199905812740326, 0.02230372652411461, 0.0056992811150848866, 0.006044805981218815, 0.004146877210587263, 0.006229490973055363, 0.004698056261986494, 0.014966882765293121, 0.005389658268541098, 0.007601411547511816, 0.0044022430665791035, 0.015263145789504051, 0.004390391055494547, 0.0035603505093604326, 0.005368638318032026, 0.00459890253841877, 0.014306849800050259, 0.004922156222164631, 0.011946387588977814, 0.004798281937837601, 0.027003299444913864, 0.00403498625382781, 0.003431706689298153, 0.006530344486236572, 0.015310529619455338, 0.005157180596143007, 0.005803196225315332, 0.00473964586853981, 0.005428946577012539, 0.003217746037989855, 0.014535849913954735, 0.0038295977283269167, 0.004173451103270054, 0.005738332401961088, 0.002832784317433834, 0.003520948812365532, 0.006241573952138424, 0.0030080999713391066, 0.00415935879573226, 0.004657772835344076, 0.005394991021603346, 0.017251890152692795, 0.005882679484784603, 0.016036715358495712, 0.004584152717143297, 0.006515710148960352, 0.00427774153649807, 0.003226975677534938, 0.005569031462073326, 0.01627141237258911, 0.00544355483725667, 0.004763322416692972, 0.005091405473649502, 0.004850121680647135, 0.014482395723462105, 0.008635254576802254, 0.005591195076704025, 0.0040857442654669285, 0.020579271018505096, 0.003081520088016987, 0.005190071649849415, 0.006571268197149038, 0.021086784079670906, 0.005522453226149082, 0.005331345368176699, 0.004707906395196915, 0.01616358570754528, 0.0047693634405732155, 0.009725694544613361, 0.0032854487653821707, 0.004120387602597475, 0.006405954249203205, 0.016629397869110107, 0.006601694505661726, 0.009808062575757504, 0.008920205757021904, 0.01046220026910305, 0.011830204166471958, 0.00790612306445837, 0.007707987911999226, 0.005338666029274464, 0.005981472320854664, 0.005500782746821642, 0.05299258977174759, 0.004342142026871443]


Top-k source tokens:

['salt', 'max_age', 'serializer', 's', 'max_age', 'salt', 'key', 'base64d', 'decompress', 'base64d']


Top-k attention probs:

[0.05299258977174759, 0.027003299444913864, 0.026436645537614822, 0.02344237081706524, 0.02336418442428112, 0.023167084902524948, 0.02305201068520546, 0.02230372652411461, 0.021086784079670906, 0.020579271018505096]
