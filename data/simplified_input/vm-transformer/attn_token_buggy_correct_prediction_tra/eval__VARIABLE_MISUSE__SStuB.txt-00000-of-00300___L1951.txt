
Original sample:

{"has_bug": true, "bug_kind": 1, "bug_kind_name": "VARIABLE_MISUSE", "source_tokens": ["#NEWLINE#", "def test_strerrorFormatting(", "self", ")", ":", "#NEWLINE#", "#INDENT#", "'\\n        L{_ErrorFormatter.formatError} should use L{os.strerror} to format\\n        error messages if it is constructed without any better mechanism.\\n        '", "#NEWLINE#", "formatter", "=", "_ErrorFormatter", "(", "None", ",", "None", ",", "None", ")", "#NEWLINE#", "message", "=", "formatter", ".", "formatError", "(", "message", ".", "probeErrorCode", ")", "#NEWLINE#", "self", ".", "assertEqual", "(", "message", ",", "os", ".", "strerror", "(", "self", ".", "probeErrorCode", ")", ")"], "error_location": [26], "repair_targets": [2, 31, 41], "repair_candidates": [9, 22, 2, 31, 41, 20, 26, 35], "provenances": [{"datasetProvenance": {"datasetName": "ETHPy150Open", "filepath": "nlloyd/SubliminalCollaborator/libs/twisted/test/test_strerror.py", "license": "apache-2.0", "note": "license: bigquery_api"}}], "txt_file": "eval__VARIABLE_MISUSE__SStuB.txt-00000-of-00300", "js_count": 1951, "results": {"model": "transformer", "prob": {"loc": [[1.763255386322271e-05, 4.569835898582397e-10, 3.7113193074311823e-10, 2.716190120044537e-11, 2.233740276080809e-11, 2.6556798427002093e-11, 1.3334201798276268e-11, 7.970116754074663e-12, 8.155326240710803e-12, 2.0326386407365504e-10, 6.698159821932892e-12, 3.2745018502255974e-11, 2.717237025662289e-11, 1.5837052155798226e-11, 6.465068064231971e-12, 6.344303988409239e-12, 8.094361986232812e-12, 9.99093342779478e-12, 7.879094945928422e-12, 2.8557861370820392e-12, 1.0132379379967915e-09, 1.4387402944363026e-12, 8.258316253062503e-10, 7.155839809591669e-11, 1.197095374216861e-11, 3.2553668094514876e-10, 0.9999301433563232, 3.588574992718918e-10, 5.527062835186669e-11, 1.6241771816360995e-11, 1.0907559577777448e-11, 4.1244001269813424e-11, 6.838090857441692e-12, 1.3846236440392956e-12, 3.126757186500129e-11, 6.32747696727165e-06, 1.4188500201128829e-11, 8.343029739288355e-11, 2.1260984292559293e-11, 2.8684734709044646e-12, 2.7473275390765828e-11, 4.589405216393061e-05, 3.187259484116467e-11, 1.0119853739720686e-11, 1.6913852263211737e-11, 1.651593098395132e-11]], "pointer": [[0.0, 0.0, 0.04390418156981468, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0004277834086678922, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.777399484126363e-05, 0.0, 9.492299795965664e-06, 0.0, 0.0, 0.0, 5.321851972439617e-07, 0.0, 0.0, 0.0, 0.0, 0.0007034986047074199, 0.0, 0.0, 0.0, 3.5494480243869475e-07, 0.0, 0.0, 0.0, 0.0, 0.0, 0.9549363851547241, 0.0, 0.0, 0.0, 0.0]], "target": [0.999544084072113]}, "loss": [6.985420623095706e-05, 0.00045601988676935434], "acc": [0.0, 1.0, 1.0, 1.0]}}


All source tokens:

['#NEWLINE#', 'def test_strerrorFormatting(', 'self', ')', ':', '#NEWLINE#', '#INDENT#', "'\\n        L{_ErrorFormatter.formatError} should use L{os.strerror} to format\\n        error messages if it is constructed without any better mechanism.\\n        '", '#NEWLINE#', 'formatter', '=', '_ErrorFormatter', '(', 'None', ',', 'None', ',', 'None', ')', '#NEWLINE#', 'message', '=', 'formatter', '.', 'formatError', '(', 'message', '.', 'probeErrorCode', ')', '#NEWLINE#', 'self', '.', 'assertEqual', '(', 'message', ',', 'os', '.', 'strerror', '(', 'self', '.', 'probeErrorCode', ')', ')']


All attention probs:

[0.028841178864240646, 0.020600231364369392, 0.07721910625696182, 0.02248208038508892, 0.015992067754268646, 0.019504578784108162, 0.01751723140478134, 0.01932993158698082, 0.01930081471800804, 0.04362628608942032, 0.019242601469159126, 0.02706502191722393, 0.020056603476405144, 0.012360429391264915, 0.011893624439835548, 0.011502103880047798, 0.010788454674184322, 0.010956769809126854, 0.01062443945556879, 0.01758486218750477, 0.043244097381830215, 0.014431298710405827, 0.029588056728243828, 0.009277625009417534, 0.008887137286365032, 0.010801178403198719, 0.06864694505929947, 0.008566953241825104, 0.011769914999604225, 0.009746361523866653, 0.015323740430176258, 0.03462859243154526, 0.013206618838012218, 0.014463701285421848, 0.015021047554910183, 0.04840816184878349, 0.01695013791322708, 0.020562520250678062, 0.011188037693500519, 0.012318581342697144, 0.01201162301003933, 0.08252419531345367, 0.011520270258188248, 0.013868083246052265, 0.011325997300446033, 0.015230710618197918]


Top-k source tokens:

['self', 'self', 'message', 'message', 'formatter', 'message', 'self', 'formatter', '#NEWLINE#', '_ErrorFormatter']


Top-k attention probs:

[0.08252419531345367, 0.07721910625696182, 0.06864694505929947, 0.04840816184878349, 0.04362628608942032, 0.043244097381830215, 0.03462859243154526, 0.029588056728243828, 0.028841178864240646, 0.02706502191722393]
