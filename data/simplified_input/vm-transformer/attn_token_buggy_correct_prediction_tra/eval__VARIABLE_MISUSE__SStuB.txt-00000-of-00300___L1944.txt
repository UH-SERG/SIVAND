
Original sample:

{"has_bug": true, "bug_kind": 1, "bug_kind_name": "VARIABLE_MISUSE", "source_tokens": ["#NEWLINE#", "def testUpdateAndCheckIfShouldThrottle(", "self", ")", ":", "#NEWLINE#", "#INDENT#", "self", ".", "server", ".", "SetThrottleBundlesRatio", "(", "1.0", ")", "#NEWLINE#", "self", ".", "server", ".", "UpdateAndCheckIfShouldThrottle", "(", "0", ")", "#NEWLINE#", "self", ".", "server", ".", "UpdateAndCheckIfShouldThrottle", "(", "10", ")", "#NEWLINE#", "self", ".", "server", ".", "UpdateAndCheckIfShouldThrottle", "(", "20", ")", "#NEWLINE#", "self", ".", "server", ".", "UpdateAndCheckIfShouldThrottle", "(", "30", ")", "#NEWLINE#", "self", ".", "server", ".", "UpdateAndCheckIfShouldThrottle", "(", "40", ")", "#NEWLINE#", "self", ".", "server", ".", "UpdateAndCheckIfShouldThrottle", "(", "50", ")", "#NEWLINE#", "self", ".", "server", ".", "UpdateAndCheckIfShouldThrottle", "(", "60", ")", "#NEWLINE#", "self", ".", "server", ".", "SetThrottleBundlesRatio", "(", "0.3", ")", "#NEWLINE#", "result", "=", "self", ".", "server", ".", "UpdateAndCheckIfShouldThrottle", "(", "70", ")", "#NEWLINE#", "self", ".", "assertEqual", "(", "result", ",", "True", ")", "#NEWLINE#", "result", "=", "self", ".", "server", ".", "UpdateAndCheckIfShouldThrottle", "(", "80", ")", "#NEWLINE#", "self", ".", "assertEqual", "(", "self", ",", "True", ")", "#NEWLINE#", "result", "=", "self", ".", "server", ".", "UpdateAndCheckIfShouldThrottle", "(", "90", ")", "#NEWLINE#", "self", ".", "assertEqual", "(", "result", ",", "True", ")", "#NEWLINE#", "result", "=", "self", ".", "server", ".", "UpdateAndCheckIfShouldThrottle", "(", "100", ")", "#NEWLINE#", "self", ".", "assertEqual", "(", "result", ",", "False", ")", "#NEWLINE#", "result", "=", "self", ".", "server", ".", "UpdateAndCheckIfShouldThrottle", "(", "110", ")", "#NEWLINE#", "self", ".", "assertEqual", "(", "result", ",", "True", ")", "#NEWLINE#", "result", "=", "self", ".", "server", ".", "UpdateAndCheckIfShouldThrottle", "(", "120", ")", "#NEWLINE#", "self", ".", "assertEqual", "(", "result", ",", "True", ")", "#NEWLINE#", "result", "=", "self", ".", "server", ".", "UpdateAndCheckIfShouldThrottle", "(", "130", ")", "#NEWLINE#", "self", ".", "assertEqual", "(", "result", ",", "True", ")", "#NEWLINE#", "result", "=", "self", ".", "server", ".", "UpdateAndCheckIfShouldThrottle", "(", "140", ")", "#NEWLINE#", "self", ".", "assertEqual", "(", "result", ",", "False", ")", "#NEWLINE#", "self", ".", "server", ".", "SetThrottleBundlesRatio", "(", "0", ")", "#NEWLINE#", "result", "=", "self", ".", "server", ".", "UpdateAndCheckIfShouldThrottle", "(", "141", ")", "#NEWLINE#", "self", ".", "assertEqual", "(", "result", ",", "True", ")", "#NEWLINE#", "result", "=", "self", ".", "server", ".", "UpdateAndCheckIfShouldThrottle", "(", "142", ")", "#NEWLINE#", "self", ".", "assertEqual", "(", "result", ",", "True", ")", "#NEWLINE#", "result", "=", "self", ".", "server", ".", "UpdateAndCheckIfShouldThrottle", "(", "143", ")", "#NEWLINE#", "self", ".", "assertEqual", "(", "result", ",", "True", ")", "#NEWLINE#", "self", ".", "server", ".", "SetThrottleBundlesRatio", "(", "None", ")", "#NEWLINE#", "result", "=", "self", ".", "server", ".", "UpdateAndCheckIfShouldThrottle", "(", "144", ")", "#NEWLINE#", "self", ".", "assertEqual", "(", "result", ",", "False", ")", "#NEWLINE#", "result", "=", "self", ".", "server", ".", "UpdateAndCheckIfShouldThrottle", "(", "145", ")", "#NEWLINE#", "self", ".", "assertEqual", "(", "result", ",", "False", ")", "#NEWLINE#", "result", "=", "self", ".", "server", ".", "UpdateAndCheckIfShouldThrottle", "(", "146", ")", "#NEWLINE#", "self", ".", "assertEqual", "(", "result", ",", "False", ")"], "error_location": [123], "repair_targets": [88, 103, 108, 128, 143, 148, 163, 168, 183, 188, 203, 208, 223, 228, 243, 257, 272, 277, 292, 297, 312, 326, 341, 346, 361, 366, 381], "repair_candidates": [88, 103, 108, 128, 143, 148, 163, 168, 183, 188, 203, 208, 223, 228, 243, 257, 272, 277, 292, 297, 312, 326, 341, 346, 361, 366, 381, 2, 7, 16, 25, 34, 43, 52, 61, 70, 79, 90, 99, 110, 119, 123, 130, 139, 150, 159, 170, 179, 190, 199, 210, 219, 230, 239, 248, 259, 268, 279, 288, 299, 308, 317, 328, 337, 348, 357, 368, 377], "provenances": [{"datasetProvenance": {"datasetName": "ETHPy150Open", "filepath": "google/grr/grr/lib/front_end_test.py", "license": "apache-2.0", "note": "license: bigquery_api"}}], "txt_file": "eval__VARIABLE_MISUSE__SStuB.txt-00000-of-00300", "js_count": 1944, "results": {"model": "transformer", "prob": {"loc": [[6.778245733585209e-06, 1.6679975109457068e-11, 3.593110618066442e-12, 1.0544610974314028e-12, 1.4282268943899279e-12, 1.917682158902867e-12, 1.774276363851468e-12, 1.3739027276971072e-12, 8.063519470191682e-13, 9.4022798444518e-14, 8.917981370731853e-13, 5.402839634016665e-14, 9.945483022202883e-13, 3.0820088234989607e-12, 1.535136384331337e-12, 7.725971013124167e-13, 2.126481499567512e-12, 3.7278136849096255e-13, 6.687836048846485e-14, 5.726547166150231e-13, 1.5835699722008267e-13, 8.613092335706118e-13, 4.0125125444490095e-12, 9.711019965594203e-13, 4.954467283484199e-13, 1.2709189169818336e-12, 3.3255931103544356e-13, 5.638482505876917e-14, 5.375859262954363e-13, 1.3210191675359223e-13, 1.4423940557575787e-12, 3.888585634048702e-12, 1.7630428367221285e-12, 7.940385003159245e-13, 1.0759293846487883e-12, 4.0856372647037065e-13, 8.134916622704741e-14, 8.263846421399657e-13, 1.9311224982391378e-13, 1.7325638536694332e-12, 3.5825650172155443e-12, 2.002997377334448e-12, 1.1269880428182999e-12, 1.8970907744025878e-12, 7.284755481132277e-13, 1.0662636409659171e-13, 1.2015640218909773e-12, 2.500917767149502e-13, 1.8058645941468332e-12, 1.0415191278867475e-11, 4.5124472734803245e-12, 1.2969550563721177e-12, 3.1170064359459237e-12, 8.127786096066847e-13, 1.219663747168559e-13, 1.4691996534296758e-12, 2.02881155343497e-13, 2.5893831349932395e-12, 5.923099684335131e-12, 2.4065189944966203e-12, 1.2801688962366109e-12, 2.3600806638851557e-12, 7.539919209820223e-13, 1.1529850425101573e-13, 1.1831024441383287e-12, 1.8562214753551493e-13, 3.604910640830905e-12, 8.577161550449297e-12, 2.7964340912345342e-12, 1.7874352171987073e-12, 2.3546266932766846e-12, 7.12203299807479e-13, 2.5433461218159203e-13, 1.783352111817127e-12, 3.455913669386107e-13, 4.6054952386465065e-12, 9.411548797244595e-12, 6.68215526314353e-12, 3.340222196057674e-12, 4.699296073801262e-12, 1.0387390817281905e-12, 2.1614677549967182e-13, 1.9485760661269724e-12, 1.6171425635223835e-13, 2.8753572873380095e-12, 1.1860788393103228e-11, 4.172248917883037e-12, 2.2788984241350896e-12, 4.081880944362126e-10, 3.3330432597927784e-12, 2.8906732910116695e-11, 1.004191413182809e-12, 1.404504632171108e-13, 1.8297429543734367e-12, 1.9582210473382405e-13, 7.531227377843841e-12, 9.28931723209736e-11, 6.34607991156777e-12, 4.8820045228659126e-12, 3.0925435823281333e-12, 5.207292388086093e-13, 2.6442731467998803e-13, 4.37867971048167e-12, 6.374598182645741e-09, 1.2710772538671034e-11, 1.979266403551172e-11, 4.9942710557415726e-12, 3.060591927464551e-12, 3.290129502175887e-09, 1.579435258795836e-12, 5.3857172194193836e-11, 1.1548211388892615e-12, 1.6282412701115745e-13, 1.6975370761840303e-12, 2.931552841190649e-13, 7.369532935286305e-12, 1.77670204937197e-11, 4.602263882491631e-12, 2.7159234063101056e-12, 6.430714901556334e-12, 5.767113674635949e-13, 6.414994403736163e-13, 3.527190692298454e-12, 0.9999926090240479, 2.614605754125421e-11, 1.9446867727257455e-10, 1.5207377024317736e-11, 3.789980915908098e-12, 2.729511339172319e-10, 1.9219259430464097e-12, 4.5909998025450705e-11, 9.361360428158938e-13, 2.91306448364434e-13, 1.4257744290757657e-12, 4.1057137073821637e-13, 3.6320757599433984e-12, 8.932456337096273e-12, 4.1244824396102775e-12, 1.3816339565486668e-12, 2.6999995121623765e-12, 3.27296078694167e-13, 1.7389559302076474e-13, 9.179227473607443e-13, 2.1164185071143038e-08, 3.4608759000992473e-12, 4.782849897383423e-12, 1.928980846582773e-12, 1.239372428470109e-12, 5.603582875490787e-11, 8.454381400686828e-13, 4.050439983416254e-10, 7.578039216103727e-13, 2.079043995338939e-13, 9.724774154354354e-13, 2.8862681559008174e-13, 2.7177474680450953e-12, 1.0213684065174533e-11, 1.694674131927365e-12, 6.340849611867483e-13, 3.434493358114854e-12, 4.3665846763060734e-13, 5.299824842224313e-14, 8.635842149891382e-13, 4.2024872470847185e-08, 4.785021771175346e-12, 3.613481259004403e-12, 2.2702347814151924e-12, 9.110992125679895e-13, 1.1283356193825256e-10, 1.0391948803215034e-12, 1.912962843686472e-11, 7.734226670566557e-13, 2.2755614666886137e-13, 1.35989461878816e-12, 4.14606039387741e-13, 2.7167625787916094e-12, 1.0530627585214614e-11, 1.5787876648382104e-12, 4.795399103849074e-13, 8.564050510417864e-12, 5.167912538878161e-13, 1.151508088100689e-13, 5.589688868018472e-13, 2.0200475958631614e-08, 2.552386253740213e-12, 5.471988313854315e-12, 7.242555079972623e-13, 3.9675334957516017e-13, 2.2083177300680212e-11, 1.3012582276896584e-13, 2.4073510546118726e-11, 3.8952196503017067e-13, 1.920294300091982e-13, 7.88677066362875e-13, 2.508934900113946e-13, 8.787159910296494e-13, 7.407525981495411e-12, 3.2101044912524745e-12, 3.858719713114439e-13, 3.866339540192776e-12, 3.9534600094516537e-13, 5.683637832295044e-14, 2.65379217082376e-13, 2.2325286508362296e-08, 6.599999193002137e-12, 4.199609843907881e-12, 1.7372959624714635e-12, 2.6748969792628197e-13, 1.0974918890349628e-11, 2.9125034090200785e-13, 1.907010487023353e-11, 8.598188350542046e-13, 1.54341776447027e-13, 1.0027923586994336e-12, 1.8092181940966567e-13, 1.5450504374167617e-12, 1.9343315144082496e-11, 1.7724938270596846e-12, 8.263041943387672e-13, 1.698998927657236e-11, 3.7537133774565024e-13, 3.519519135223963e-14, 4.728722296544474e-13, 1.1234384089675586e-08, 5.038711960690667e-13, 3.4390274916001884e-13, 3.860236240903203e-13, 5.721830344598833e-13, 5.710526669588933e-12, 2.3923042366535974e-12, 5.994599781844467e-12, 7.180041609010368e-13, 1.8958780671676084e-13, 1.3017827918057612e-12, 3.136613961184781e-13, 4.611225897649396e-12, 2.4858113831238704e-11, 2.7697280233218713e-12, 1.0756072681833428e-12, 8.572646932603067e-12, 7.393675515582343e-13, 7.339912504828947e-14, 7.803917017809581e-13, 1.727008047680556e-08, 2.4125671078956135e-12, 2.366034668535577e-12, 6.345083421351039e-13, 5.753183303022769e-13, 1.208710995875828e-11, 5.268965602364672e-13, 3.2710322623273613e-13, 1.1578737101058945e-12, 5.902422376812683e-14, 1.575746260903954e-12, 2.5108809129092968e-11, 1.106347977640476e-12, 5.655287436262535e-13, 4.48119276061365e-12, 9.31947661403365e-13, 1.5738606598536542e-11, 5.844718697738116e-13, 1.238610857759101e-13, 1.045188241510786e-12, 3.427999529202752e-13, 4.061870631510978e-12, 1.8897316003685383e-11, 2.480671050519856e-12, 1.4994176690194538e-12, 5.714024305797372e-12, 1.2078140137344873e-12, 9.835743195385147e-14, 1.1239804659918251e-12, 6.888040360308878e-08, 6.708091113832859e-12, 6.8135982966843756e-12, 1.9147873391023307e-12, 1.7999979761915141e-12, 3.3697492712869703e-11, 2.6518557315335922e-12, 2.4849438479135344e-11, 1.049637156705363e-12, 1.7920940339338776e-13, 1.0688664580163487e-12, 2.253021852199541e-13, 2.397914115534472e-12, 1.349829970020977e-11, 2.0484918015345466e-12, 1.637716871838446e-12, 3.6283779800139193e-12, 5.959018001266969e-13, 3.347381372737976e-14, 9.619271525151962e-13, 1.6261311941434542e-07, 1.994108003722239e-12, 1.6214063078279217e-11, 1.704083597321715e-12, 1.2099514098973252e-12, 1.4292331207421682e-11, 3.0174434999252764e-12, 1.231449248129124e-10, 1.1791826196039246e-12, 1.7387968235388351e-13, 1.5585858341785053e-12, 2.856720665144613e-13, 3.3849375125766246e-12, 2.5823806634739377e-11, 3.5073265906154782e-12, 2.1944395085793378e-12, 4.1521900501217957e-11, 1.9626644059966836e-12, 9.659844267800172e-14, 3.707210753656209e-12, 5.0193396106124055e-08, 9.315939946547003e-13, 2.5373197466704855e-12, 8.42765581713506e-13, 1.7416587920135451e-12, 2.717370252425244e-11, 7.91923980818926e-13, 2.722534925368031e-13, 1.2530063792093316e-12, 1.552932045109645e-13, 7.507290795960575e-12, 1.2325178204430909e-11, 2.4554674699778234e-12, 2.900762746324559e-12, 5.6306136836381526e-11, 1.4937998754627202e-12, 2.139290133928995e-10, 1.171182725454023e-12, 1.7318263522466543e-13, 1.6308903012796083e-12, 3.141212062598292e-13, 4.528354687755032e-12, 2.2538493640866797e-11, 4.956416787410545e-12, 3.437455615290519e-12, 7.465286028240925e-11, 2.583852619711391e-12, 2.07055143972186e-13, 3.71638613980152e-12, 7.001490587299486e-08, 1.0267294826837858e-12, 5.202013299288044e-12, 1.6847765587149621e-12, 1.447349076526272e-12, 8.79719214141872e-12, 5.966910993082664e-13, 6.450213280162487e-11, 8.821955210618071e-13, 1.3262756507186751e-13, 1.3442847095895827e-12, 5.140071853391992e-13, 7.077133584026951e-12, 6.973146365885086e-11, 2.739533426499019e-12, 3.381452886794256e-12, 3.225726283306862e-11, 2.6027177375126387e-12, 2.1837786028273964e-13, 1.110610908794385e-11, 1.262160367332399e-07, 1.0023243519896585e-11, 1.1649941428215627e-11, 9.321366595260727e-12, 4.626599017093502e-12, 1.962718598758073e-10, 3.4385834023903383e-12, 1.954306161344732e-10, 1.626240158161818e-12, 2.373844664674968e-13, 1.5647485477471301e-12, 3.789733555182445e-13, 1.191788855103848e-11, 1.8518817035406698e-10, 3.756845529112596e-12, 6.512614666304151e-12, 3.0738328549162475e-11, 1.534647409151546e-12, 1.252460998411517e-13, 2.61178960403452e-11, 1.5869430569637188e-07, 3.5331900165996855e-12, 4.918924642605127e-12, 3.6725700605644285e-12]], "pointer": [[0.0, 0.0, 9.83704318002765e-09, 0.0, 0.0, 0.0, 0.0, 8.339631207832099e-09, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.5403927022816788e-08, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 9.49906731051442e-09, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 7.594145756684156e-09, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.8641385324258408e-08, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0186366417030968e-08, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 5.6659135161396534e-09, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 8.08813638286665e-09, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.3053982783617357e-08, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.04550543427467346, 0.0, 6.285054254817624e-09, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 8.879708524034413e-09, 0.0, 0.0, 0.0, 0.001538307755254209, 0.0, 0.0, 0.0, 0.0, 0.9491137266159058, 0.0, 1.0610202494376608e-08, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 9.660404032274528e-09, 0.0, 0.0, 0.0, 5.464471930505255e-11, 0.0, 0.0, 0.0, 0.0, 0.0033706184476614, 0.0, 1.6572498040545725e-08, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.4595249453464021e-08, 0.0, 0.0, 0.0, 0.000177619862370193, 0.0, 0.0, 0.0, 0.0, 0.00014097530220169574, 0.0, 1.788987624706806e-08, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 3.79662212779408e-09, 0.0, 0.0, 0.0, 9.83861718850676e-06, 0.0, 0.0, 0.0, 0.0, 0.00011697332956828177, 0.0, 1.850087016919133e-08, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 4.385557694774889e-09, 0.0, 0.0, 0.0, 8.695388373780588e-07, 0.0, 0.0, 0.0, 0.0, 4.478233222471317e-06, 0.0, 1.416318262670302e-08, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 2.7066917596130224e-09, 0.0, 0.0, 0.0, 6.865023351565469e-06, 0.0, 0.0, 0.0, 0.0, 8.761518984101713e-06, 0.0, 4.739206360682147e-09, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 3.7547027709194936e-09, 0.0, 0.0, 0.0, 3.893016398137661e-08, 0.0, 0.0, 0.0, 0.0, 1.424621018486505e-06, 0.0, 3.0375959525485996e-09, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.3711353163969875e-09, 0.0, 0.0, 0.0, 4.93993240979762e-07, 0.0, 0.0, 0.0, 0.0, 4.828320854244339e-09, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 3.81653052272668e-07, 0.0, 4.743094805803594e-09, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.4160799199913754e-09, 0.0, 0.0, 0.0, 1.5707406930687284e-07, 0.0, 0.0, 0.0, 0.0, 4.927558165945811e-07, 0.0, 3.4360190248605704e-09, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 5.099934363705927e-10, 0.0, 0.0, 0.0, 1.433253959959302e-08, 0.0, 0.0, 0.0, 0.0, 5.442244628284243e-07, 0.0, 1.0241109293929185e-08, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 2.3670225779426346e-09, 0.0, 0.0, 0.0, 5.8027884719535905e-09, 0.0, 0.0, 0.0, 0.0, 3.185505192959681e-09, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 6.802844723097223e-07, 0.0, 1.0917439396962436e-08, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 2.4489328342980343e-09, 0.0, 0.0, 0.0, 4.694815203265534e-09, 0.0, 0.0, 0.0, 0.0, 3.4717081121016236e-07, 0.0, 5.215215814757812e-09, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 2.0846033788046725e-09, 0.0, 0.0, 0.0, 8.066797896333355e-09, 0.0, 0.0, 0.0, 0.0, 5.192021035327343e-07, 0.0, 6.862937773632893e-09, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.199306098875752e-09, 0.0, 0.0, 0.0, 2.0358140062626262e-08, 0.0, 0.0, 0.0]], "target": [0.9999996423721313]}, "loss": [7.510157047363464e-06, 3.576279254957626e-07], "acc": [0.0, 1.0, 1.0, 1.0]}}


All source tokens:

['#NEWLINE#', 'def testUpdateAndCheckIfShouldThrottle(', 'self', ')', ':', '#NEWLINE#', '#INDENT#', 'self', '.', 'server', '.', 'SetThrottleBundlesRatio', '(', '1.0', ')', '#NEWLINE#', 'self', '.', 'server', '.', 'UpdateAndCheckIfShouldThrottle', '(', '0', ')', '#NEWLINE#', 'self', '.', 'server', '.', 'UpdateAndCheckIfShouldThrottle', '(', '10', ')', '#NEWLINE#', 'self', '.', 'server', '.', 'UpdateAndCheckIfShouldThrottle', '(', '20', ')', '#NEWLINE#', 'self', '.', 'server', '.', 'UpdateAndCheckIfShouldThrottle', '(', '30', ')', '#NEWLINE#', 'self', '.', 'server', '.', 'UpdateAndCheckIfShouldThrottle', '(', '40', ')', '#NEWLINE#', 'self', '.', 'server', '.', 'UpdateAndCheckIfShouldThrottle', '(', '50', ')', '#NEWLINE#', 'self', '.', 'server', '.', 'UpdateAndCheckIfShouldThrottle', '(', '60', ')', '#NEWLINE#', 'self', '.', 'server', '.', 'SetThrottleBundlesRatio', '(', '0.3', ')', '#NEWLINE#', 'result', '=', 'self', '.', 'server', '.', 'UpdateAndCheckIfShouldThrottle', '(', '70', ')', '#NEWLINE#', 'self', '.', 'assertEqual', '(', 'result', ',', 'True', ')', '#NEWLINE#', 'result', '=', 'self', '.', 'server', '.', 'UpdateAndCheckIfShouldThrottle', '(', '80', ')', '#NEWLINE#', 'self', '.', 'assertEqual', '(', 'self', ',', 'True', ')', '#NEWLINE#', 'result', '=', 'self', '.', 'server', '.', 'UpdateAndCheckIfShouldThrottle', '(', '90', ')', '#NEWLINE#', 'self', '.', 'assertEqual', '(', 'result', ',', 'True', ')', '#NEWLINE#', 'result', '=', 'self', '.', 'server', '.', 'UpdateAndCheckIfShouldThrottle', '(', '100', ')', '#NEWLINE#', 'self', '.', 'assertEqual', '(', 'result', ',', 'False', ')', '#NEWLINE#', 'result', '=', 'self', '.', 'server', '.', 'UpdateAndCheckIfShouldThrottle', '(', '110', ')', '#NEWLINE#', 'self', '.', 'assertEqual', '(', 'result', ',', 'True', ')', '#NEWLINE#', 'result', '=', 'self', '.', 'server', '.', 'UpdateAndCheckIfShouldThrottle', '(', '120', ')', '#NEWLINE#', 'self', '.', 'assertEqual', '(', 'result', ',', 'True', ')', '#NEWLINE#', 'result', '=', 'self', '.', 'server', '.', 'UpdateAndCheckIfShouldThrottle', '(', '130', ')', '#NEWLINE#', 'self', '.', 'assertEqual', '(', 'result', ',', 'True', ')', '#NEWLINE#', 'result', '=', 'self', '.', 'server', '.', 'UpdateAndCheckIfShouldThrottle', '(', '140', ')', '#NEWLINE#', 'self', '.', 'assertEqual', '(', 'result', ',', 'False', ')', '#NEWLINE#', 'self', '.', 'server', '.', 'SetThrottleBundlesRatio', '(', '0', ')', '#NEWLINE#', 'result', '=', 'self', '.', 'server', '.', 'UpdateAndCheckIfShouldThrottle', '(', '141', ')', '#NEWLINE#', 'self', '.', 'assertEqual', '(', 'result', ',', 'True', ')', '#NEWLINE#', 'result', '=', 'self', '.', 'server', '.', 'UpdateAndCheckIfShouldThrottle', '(', '142', ')', '#NEWLINE#', 'self', '.', 'assertEqual', '(', 'result', ',', 'True', ')', '#NEWLINE#', 'result', '=', 'self', '.', 'server', '.', 'UpdateAndCheckIfShouldThrottle', '(', '143', ')', '#NEWLINE#', 'self', '.', 'assertEqual', '(', 'result', ',', 'True', ')', '#NEWLINE#', 'self', '.', 'server', '.', 'SetThrottleBundlesRatio', '(', 'None', ')', '#NEWLINE#', 'result', '=', 'self', '.', 'server', '.', 'UpdateAndCheckIfShouldThrottle', '(', '144', ')', '#NEWLINE#', 'self', '.', 'assertEqual', '(', 'result', ',', 'False', ')', '#NEWLINE#', 'result', '=', 'self', '.', 'server', '.', 'UpdateAndCheckIfShouldThrottle', '(', '145', ')', '#NEWLINE#', 'self', '.', 'assertEqual', '(', 'result', ',', 'False', ')', '#NEWLINE#', 'result', '=', 'self', '.', 'server', '.', 'UpdateAndCheckIfShouldThrottle', '(', '146', ')', '#NEWLINE#', 'self', '.', 'assertEqual', '(', 'result', ',', 'False', ')']


All attention probs:

[0.011642816476523876, 0.007585734594613314, 0.032774392515420914, 0.009339478798210621, 0.0073614465072751045, 0.006118502467870712, 0.0045846314169466496, 0.016802432015538216, 0.003790960181504488, 0.006350299343466759, 0.0051482319831848145, 0.007913853973150253, 0.007367536425590515, 0.007355520036071539, 0.006325508933514357, 0.005775735713541508, 0.008174559101462364, 0.0035255395341664553, 0.004904985427856445, 0.00392897566780448, 0.004543452523648739, 0.004259184468537569, 0.005747777409851551, 0.0035327491350471973, 0.0039341747760772705, 0.006547039374709129, 0.0026223293971270323, 0.0033519500866532326, 0.0028310734778642654, 0.0026670934166759253, 0.0030044137965887785, 0.003984999377280474, 0.003077362198382616, 0.0033396296203136444, 0.005134842824190855, 0.0019815664272755384, 0.002669192850589752, 0.0023406415712088346, 0.0030752578750252724, 0.0036653196439146996, 0.005605347454547882, 0.0037566337268799543, 0.0037389725912362337, 0.005391078069806099, 0.0017618254059925675, 0.00219676923006773, 0.001744522131048143, 0.0017839791253209114, 0.002028119284659624, 0.002926074666902423, 0.0019747449550777674, 0.0019265321316197515, 0.00373472785577178, 0.001267405692487955, 0.0018209533300250769, 0.0014989268966019154, 0.0014256320428103209, 0.0014789158012717962, 0.0026900586672127247, 0.0013380234595388174, 0.001855652080848813, 0.0035158474929630756, 0.001072873710654676, 0.001644943724386394, 0.001072660437785089, 0.0013795567210763693, 0.0015956878196448088, 0.00454682856798172, 0.001496552606113255, 0.0019048874964937568, 0.0034276037476956844, 0.0010617328807711601, 0.0021538285072892904, 0.0012060990557074547, 0.001381444395519793, 0.001403587288223207, 0.0030171885155141354, 0.0010129596339538693, 0.0017882355023175478, 0.003057408845052123, 0.0009392300853505731, 0.0014448880683630705, 0.0010338816791772842, 0.0010631759651005268, 0.0012509269872680306, 0.0029931440949440002, 0.0013935251627117395, 0.0021242958027869463, 0.006898493506014347, 0.0014586510369554162, 0.00324870552867651, 0.0009283957770094275, 0.0011804784880951047, 0.0009457796695642173, 0.0010497390758246183, 0.0013504461385309696, 0.0034347730688750744, 0.0011901622638106346, 0.0017555034719407558, 0.00373181258328259, 0.001027539954520762, 0.001978099811822176, 0.0017412928864359856, 0.008476972579956055, 0.0018342942930758, 0.0017317080637440085, 0.0010767587227746844, 0.0018311552703380585, 0.014089223928749561, 0.0016370211960747838, 0.003741940949112177, 0.0011867056600749493, 0.001689807279035449, 0.0009582837228663266, 0.0011430361773818731, 0.001304658013395965, 0.0029537808150053024, 0.0009432462393306196, 0.001699999556876719, 0.0026742725167423487, 0.0010303454473614693, 0.0031662234105169773, 0.0016972963931038976, 0.0616382472217083, 0.001871519605629146, 0.0018800474936142564, 0.0013724222080782056, 0.002006805967539549, 0.0049057938158512115, 0.0018050710204988718, 0.0032077007927000523, 0.0007895224844105542, 0.0014572060899809003, 0.0008063009008765221, 0.00116913381498307, 0.0012942097382619977, 0.0020934848580509424, 0.0008608987554907799, 0.0017288007074967027, 0.0021519314032047987, 0.0007751912926323712, 0.001680798945017159, 0.0014447384746745229, 0.0064530884847044945, 0.0011774211889132857, 0.0012057574931532145, 0.0008991694776341319, 0.0016198517987504601, 0.004541296977549791, 0.0020051845349371433, 0.004724104423075914, 0.0009568279492668808, 0.0014670704258605838, 0.0011262524640187621, 0.0013953977031633258, 0.0016830225940793753, 0.0028736544772982597, 0.0011993313673883677, 0.00188967224676162, 0.0032413979060947895, 0.0009424120653420687, 0.0014577122638002038, 0.0015427644830197096, 0.006024105008691549, 0.0012044855393469334, 0.0011540603591129184, 0.0008940399275161326, 0.001634357962757349, 0.004768798593431711, 0.0012820031261071563, 0.0029219223652035, 0.0007720126886852086, 0.0013418520102277398, 0.001111034769564867, 0.0017323580104857683, 0.0015426899772137403, 0.0015075706178322434, 0.0009672874002717435, 0.001586786936968565, 0.0028609614819288254, 0.0010421611368656158, 0.0019129437860101461, 0.0015016378602012992, 0.006004053633660078, 0.0016190864844247699, 0.001594332978129387, 0.0014841192169114947, 0.002381368074566126, 0.004856585059314966, 0.0028544068336486816, 0.0037548053078353405, 0.0010678012622520328, 0.0015589267713949084, 0.001179507002234459, 0.0016780347796157002, 0.0016463909996673465, 0.002071498893201351, 0.00108516204636544, 0.001798615325242281, 0.003022387158125639, 0.0008471396286040545, 0.0013955183094367385, 0.0012844951124861836, 0.0053249625489115715, 0.0012056679697707295, 0.0013396518770605326, 0.0010968648130074143, 0.001853076508268714, 0.0047113350592553616, 0.0016238357638940215, 0.003275745315477252, 0.000877518963534385, 0.001477635814808309, 0.0009721211972646415, 0.0010578575311228633, 0.0012619532644748688, 0.0026707553770393133, 0.0010098094353452325, 0.0017450210871174932, 0.0034298107493668795, 0.0008589545032009482, 0.0015798438107594848, 0.0013543221866711974, 0.006369599606841803, 0.001728380681015551, 0.001634629676118493, 0.0016546499682590365, 0.0021196191664785147, 0.0035984779242426157, 0.0013550197472795844, 0.002849482698366046, 0.0007422723574563861, 0.0014556975802406669, 0.00085162662435323, 0.0011361580109223723, 0.001236654701642692, 0.002308738185092807, 0.001122486894018948, 0.0016127986600622535, 0.0025590788573026657, 0.0007876955787651241, 0.001461031730286777, 0.0009918557479977608, 0.006122167222201824, 0.0011192411184310913, 0.0012157545424997807, 0.0012213324662297964, 0.0017686098581179976, 0.002934879157692194, 0.0008600189466960728, 0.0016866003861650825, 0.0010896589374169707, 0.0011469495948404074, 0.001982735004276037, 0.003707997966557741, 0.002100480953231454, 0.0019256577361375093, 0.0035645917523652315, 0.0014071764890104532, 0.0028743355069309473, 0.0006568355020135641, 0.0010933331213891506, 0.0007403118652291596, 0.0012786646839231253, 0.0010439554462209344, 0.00217068730853498, 0.001084173214621842, 0.0015921981539577246, 0.002445503370836377, 0.0007799406885169446, 0.0013638363452628255, 0.0009791722986847162, 0.006081562023609877, 0.0011588637717068195, 0.0011175324907526374, 0.0012032880913466215, 0.001785272965207696, 0.004391075111925602, 0.0010648620082065463, 0.002930542454123497, 0.0007708822377026081, 0.0013118783244863153, 0.0009621209464967251, 0.0012699695071205497, 0.0014689282979816198, 0.002586463000625372, 0.0020598701667040586, 0.0027475447859615088, 0.003409899305552244, 0.0012805212754756212, 0.001735831145197153, 0.0014030146412551403, 0.0076186638325452805, 0.0012267744168639183, 0.0012921980815008283, 0.001079278183169663, 0.0016821122262626886, 0.004000010434538126, 0.001116695930249989, 0.0035525227431207895, 0.000723149161785841, 0.001124671776778996, 0.0007442830828949809, 0.0015005782479420304, 0.0010639558313414454, 0.001848256099037826, 0.0010897025931626558, 0.001640851842239499, 0.002363127190619707, 0.0008326602983288467, 0.0017200957518070936, 0.0014344758819788694, 0.0069102942943573, 0.0015171220293268561, 0.0012633168371394277, 0.001491981791332364, 0.0020036213099956512, 0.002408007625490427, 0.0011158282868564129, 0.0011847226414829493, 0.0009557616431266069, 0.0013946261024102569, 0.001369448029436171, 0.0011038347147405148, 0.0008695156429894269, 0.0013789271470159292, 0.00407858332619071, 0.001275122631341219, 0.003680468536913395, 0.0007121245143935084, 0.0010372051037847996, 0.0007459035841748118, 0.0016686513554304838, 0.0010943604866042733, 0.002357778837904334, 0.0010972198797389865, 0.0016205537831410766, 0.0020973021164536476, 0.0008154610986821353, 0.001569531625136733, 0.0011240971507504582, 0.00856800191104412, 0.001427706447429955, 0.0010605197167024016, 0.001087531796656549, 0.0019056419841945171, 0.004566768184304237, 0.0022987546399235725, 0.0036287696566432714, 0.0009308099979534745, 0.00118069292511791, 0.0008892228361219168, 0.0022089676931500435, 0.001319151371717453, 0.0017259136075153947, 0.0010950933210551739, 0.0016243429854512215, 0.002218920737504959, 0.0007756280247122049, 0.0018092819955199957, 0.001421090099029243, 0.008579878136515617, 0.0012420695275068283, 0.0010845292126759887, 0.001224992796778679, 0.0016496165189892054, 0.005583212245255709, 0.0013488559052348137, 0.004111286718398333, 0.0007945516263134778, 0.00134267657995224, 0.0008876988431438804, 0.0013549627037718892, 0.0013110878644511104, 0.0023055202327668667, 0.0011249781819060445, 0.0019330380018800497, 0.0022825810592621565, 0.0009069440420717001, 0.0021189781837165356, 0.0018314237240701914, 0.008962415158748627, 0.0012968573719263077, 0.001076066866517067, 0.0012239111820235848]


Top-k source tokens:

['self', 'self', 'self', 'result', '#NEWLINE#', ')', 'result', 'result', 'result', 'result']


Top-k attention probs:

[0.0616382472217083, 0.032774392515420914, 0.016802432015538216, 0.014089223928749561, 0.011642816476523876, 0.009339478798210621, 0.008962415158748627, 0.008579878136515617, 0.00856800191104412, 0.008476972579956055]
