
Original sample:

{"has_bug": true, "bug_kind": 1, "bug_kind_name": "VARIABLE_MISUSE", "source_tokens": ["#NEWLINE#", "def make_organization_unit_orgunit_provisioning_uri(", "self", ",", "customer_id", ",", "org_unit_path", "=", "None", ",", "params", "=", "None", ")", ":", "#NEWLINE#", "#INDENT#", "\"Creates a resource feed URI for the orgunit's Provisioning API calls.\\n\\n    Using this client's Google Apps domain, create a feed URI for organization\\n    unit orgunit's provisioning in that domain. If an org_unit_path is\\n    provided, return a URI for that specific resource.\\n    If params are provided, append them as GET params.\\n\\n    Args:\\n      customer_id: string The customerId of the user.\\n      org_unit_path: string (optional) The organization unit's path for which\\n          to make a feed URI.\\n      params: dict (optional) key -> value params to append as GET vars to the\\n          URI. Example: params={'start': 'my-resource-id'}\\n\\n    Returns:\\n      A string giving the URI for organization unit provisioning for\\n          given org_unit_path\\n    \"", "#NEWLINE#", "return", "self", ".", "make_organization_unit_provisioning_uri", "(", "ORGANIZATION_UNIT_FEED", ",", "customer_id", ",", "org_unit_path", ",", "self", ")"], "error_location": [30], "repair_targets": [10], "repair_candidates": [6, 28, 2, 20, 30, 4, 26, 10], "provenances": [{"datasetProvenance": {"datasetName": "ETHPy150Open", "filepath": "acil-bwh/SlicerCIP/Scripted/attic/PicasaSnap/gdata/apps/organization/client.py", "license": "bsd-3-clause", "note": "license: bigquery_api"}}], "txt_file": "eval__VARIABLE_MISUSE__SStuB.txt-00001-of-00300", "js_count": 3542, "results": {"model": "transformer", "prob": {"loc": [[2.2262163838604465e-05, 2.320822353740759e-11, 1.4125717089086276e-11, 1.6994006028780984e-12, 3.001277351644127e-11, 3.350387675626898e-12, 6.353775838796594e-11, 1.6625919391222155e-11, 4.798440290942896e-12, 5.118904432277471e-12, 1.875353872193841e-09, 5.5625126033076455e-11, 3.79166940900344e-11, 6.885808763457124e-12, 2.5898547195701838e-11, 5.1896206082480134e-11, 1.59361048662765e-11, 7.720601068184063e-12, 1.3104582523293384e-11, 2.9995415873340647e-12, 3.0044714546123563e-12, 7.414709471409431e-12, 5.625457239789855e-13, 8.968091547156831e-11, 5.543088210657743e-11, 3.1738646433243645e-11, 3.1252278631654917e-07, 3.704527656855916e-11, 1.5847667782509234e-06, 8.349015229169865e-11, 0.9999758005142212, 6.328401691568786e-11]], "pointer": [[0.0, 0.0, 7.834204893697461e-07, 0.0, 5.102417617308674e-06, 0.0, 5.431229146779515e-05, 0.0, 0.0, 0.0, 0.9999396800994873, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 4.812960696654045e-08, 0.0, 0.0, 0.0, 0.0, 0.0, 4.941750830766978e-08, 0.0, 2.847812652362336e-08, 0.0, 9.924757904400394e-09, 0.0]], "target": [0.9999396800994873]}, "loss": [2.4199192921514623e-05, 6.032171950209886e-05], "acc": [0.0, 1.0, 1.0, 1.0]}}


All source tokens:

['#NEWLINE#', 'def make_organization_unit_orgunit_provisioning_uri(', 'self', ',', 'customer_id', ',', 'org_unit_path', '=', 'None', ',', 'params', '=', 'None', ')', ':', '#NEWLINE#', '#INDENT#', '"Creates a resource feed URI for the orgunit\'s Provisioning API calls.\\n\\n    Using this client\'s Google Apps domain, create a feed URI for organization\\n    unit orgunit\'s provisioning in that domain. If an org_unit_path is\\n    provided, return a URI for that specific resource.\\n    If params are provided, append them as GET params.\\n\\n    Args:\\n      customer_id: string The customerId of the user.\\n      org_unit_path: string (optional) The organization unit\'s path for which\\n          to make a feed URI.\\n      params: dict (optional) key -> value params to append as GET vars to the\\n          URI. Example: params={\'start\': \'my-resource-id\'}\\n\\n    Returns:\\n      A string giving the URI for organization unit provisioning for\\n          given org_unit_path\\n    "', '#NEWLINE#', 'return', 'self', '.', 'make_organization_unit_provisioning_uri', '(', 'ORGANIZATION_UNIT_FEED', ',', 'customer_id', ',', 'org_unit_path', ',', 'self', ')']


All attention probs:

[0.025912629440426826, 0.02995913289487362, 0.07800334692001343, 0.03096812404692173, 0.051747847348451614, 0.028219470754265785, 0.06968440860509872, 0.019656186923384666, 0.019550075754523277, 0.02378803677856922, 0.06536682695150375, 0.0239192396402359, 0.019823893904685974, 0.01898050867021084, 0.015598793514072895, 0.018115658313035965, 0.014789826236665249, 0.018705671653151512, 0.015552329830825329, 0.020351720973849297, 0.03725923225283623, 0.008530459366738796, 0.014402796514332294, 0.01510260347276926, 0.015116835944354534, 0.014710749499499798, 0.05715299770236015, 0.016259126365184784, 0.05593574047088623, 0.02429363876581192, 0.09640588611364365, 0.036136213690042496]


Top-k source tokens:

['self', 'self', 'org_unit_path', 'params', 'customer_id', 'org_unit_path', 'customer_id', 'self', ')', ',']


Top-k attention probs:

[0.09640588611364365, 0.07800334692001343, 0.06968440860509872, 0.06536682695150375, 0.05715299770236015, 0.05593574047088623, 0.051747847348451614, 0.03725923225283623, 0.036136213690042496, 0.03096812404692173]
