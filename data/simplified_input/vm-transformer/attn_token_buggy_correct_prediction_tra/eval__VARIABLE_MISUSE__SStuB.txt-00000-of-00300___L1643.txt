
Original sample:

{"has_bug": true, "bug_kind": 1, "bug_kind_name": "VARIABLE_MISUSE", "source_tokens": ["#NEWLINE#", "def test_get_with_exception(", "self", ")", ":", "#NEWLINE#", "#INDENT#", "mock_handler", "=", "mock", ".", "Mock", "(", ")", "#NEWLINE#", "async", "=", "self", ".", "_makeOne", "(", "async", ")", "#NEWLINE#", "lst", "=", "[", "]", "#NEWLINE#", "bv", "=", "threading", ".", "Event", "(", ")", "#NEWLINE#", "cv", "=", "threading", ".", "Event", "(", ")", "#NEWLINE#", "def wait_for_val(", ")", ":", "#NEWLINE#", "#INDENT#", "bv", ".", "set", "(", ")", "#NEWLINE#", "try", ":", "#NEWLINE#", "#INDENT#", "val", "=", "async", ".", "get", "(", ")", "#NEWLINE#", "#UNINDENT#", "except", "ImportError", ":", "#NEWLINE#", "#INDENT#", "lst", ".", "append", "(", "'oops'", ")", "#NEWLINE#", "#UNINDENT#", "else", ":", "#NEWLINE#", "#INDENT#", "lst", ".", "append", "(", "val", ")", "#NEWLINE#", "#UNINDENT#", "cv", ".", "set", "(", ")", "#NEWLINE#", "#UNINDENT#", "th", "=", "threading", ".", "Thread", "(", "target", "=", "wait_for_val", ")", "#NEWLINE#", "th", ".", "start", "(", ")", "#NEWLINE#", "bv", ".", "wait", "(", ")", "#NEWLINE#", "async", ".", "set_exception", "(", "ImportError", ")", "#NEWLINE#", "cv", ".", "wait", "(", ")", "#NEWLINE#", "eq_", "(", "lst", ",", "[", "'oops'", "]", ")", "#NEWLINE#", "th", ".", "join", "(", ")"], "error_location": [21], "repair_targets": [7], "repair_candidates": [7, 109, 15, 21, 62, 124, 24, 74, 86, 139, 29, 50, 118, 37, 94, 131, 101, 112, 146, 2, 17], "provenances": [{"datasetProvenance": {"datasetName": "ETHPy150Open", "filepath": "cloudera/hue/desktop/core/ext-py/kazoo-2.0/kazoo/tests/test_threading_handler.py", "license": "apache-2.0", "note": "license: bigquery_api"}}], "txt_file": "eval__VARIABLE_MISUSE__SStuB.txt-00000-of-00300", "js_count": 1643, "results": {"model": "transformer", "prob": {"loc": [[1.1576588804018684e-05, 3.5106187401545697e-10, 6.101730787300141e-10, 1.1331308114037597e-10, 6.465059737559287e-11, 5.903617178448783e-11, 5.468645675188455e-11, 3.943087989455307e-08, 3.778813928434488e-10, 5.7974531425530884e-11, 2.3446536379090333e-11, 4.6589891666837246e-11, 5.413213433058672e-09, 4.764714400806724e-09, 9.260810451827695e-10, 3.2822968787371565e-09, 2.282263614206137e-11, 6.164745103287572e-11, 1.480385432295339e-11, 1.0647799482399467e-11, 1.6877740871557023e-10, 0.9999818801879883, 1.7554699915933725e-09, 2.837010903977699e-10, 3.301539597266867e-10, 1.5697702859807094e-10, 5.7559347510505177e-08, 8.534973838791871e-10, 1.330096172091899e-10, 1.6554452253458862e-10, 8.084081182246905e-10, 2.607626614636871e-10, 2.7255477388909988e-11, 1.174875821630117e-11, 1.592825649154861e-09, 5.7998148506044345e-09, 1.1241089309388386e-10, 1.132754723354168e-10, 1.2425226125767352e-10, 8.670203444083313e-11, 1.713286110205381e-11, 4.849229091191676e-12, 1.3367681406251108e-09, 3.060750541905577e-09, 8.495680547948581e-11, 1.4538757697746263e-10, 2.392667834694162e-11, 2.2072746408419164e-11, 1.613494407526339e-11, 9.547557189293343e-12, 1.9318699417958385e-11, 2.2722474943281945e-11, 8.027375639207968e-12, 8.504160570188546e-11, 4.398224007218232e-10, 9.41252978337026e-11, 1.7077266684095704e-11, 7.622644182525562e-11, 3.008746377042293e-11, 2.4381748356394617e-11, 3.057422925945019e-10, 1.3355356751065806e-11, 1.6932563129401501e-09, 3.2878762212806834e-11, 1.524159444488138e-11, 5.346941778228143e-10, 6.204856073388498e-10, 5.734284574954174e-11, 2.0169737408037847e-11, 7.236160282086956e-11, 1.6796068008639864e-11, 3.187655348013685e-11, 2.0853702445422506e-11, 1.559107877524557e-11, 3.478224652742057e-11, 2.0895070396154125e-11, 9.047621159219421e-12, 6.683795183981545e-11, 1.8198170748107145e-09, 5.415461967750446e-10, 1.017412890047531e-10, 1.606891356087381e-11, 2.585216415940117e-11, 2.1022149299110282e-11, 1.951014176604371e-11, 1.3119518492421545e-11, 1.5164173736148534e-11, 3.497723985446122e-11, 1.8760349176916158e-12, 7.343765873191188e-11, 7.073050767303357e-08, 4.696392164049712e-10, 1.2649116476470823e-10, 3.88549088736756e-11, 6.657546736121844e-11, 3.0415080176648956e-11, 3.4896725266408968e-12, 3.476184062822796e-10, 6.333695790061711e-10, 1.1092785717758957e-10, 6.168297123076982e-11, 1.2425130369031478e-10, 1.1164061342050502e-10, 2.574392365950473e-10, 6.682125686108265e-11, 1.952111432571013e-12, 3.156960456940361e-11, 3.582205495775148e-12, 3.6057129504385443e-11, 5.621280251943972e-06, 2.1455193177644105e-10, 5.958619014867494e-11, 2.2896845877640182e-11, 2.8770614363127223e-11, 2.098753462687064e-11, 4.119135865732204e-10, 2.482185290642036e-10, 1.0175624232111602e-10, 3.207788548675872e-11, 5.760407081889518e-11, 6.524866150853237e-12, 4.731059988216657e-10, 2.5118562785308995e-10, 1.1385142828501671e-10, 3.514600388498934e-09, 5.6698347405959026e-11, 7.060904812228319e-12, 7.456629202984288e-10, 8.515104732431666e-10, 1.0031178110381234e-09, 1.3171952417678767e-10, 2.548138262892241e-11, 4.1533016609252016e-11, 3.4441650920147282e-12, 2.1893094281910663e-10, 1.039914931943997e-09, 2.169717183697628e-10, 3.564613881845702e-12, 3.097310949384813e-11, 6.912937919878459e-07, 4.4405304433503545e-10, 4.293024158386061e-09, 1.3715911739708986e-09, 5.324338747669799e-10, 2.9889002384209107e-10, 5.575919934108775e-11, 1.164813384635366e-10, 1.0566493513497477e-10, 3.981304435435318e-12, 3.480927768251263e-10, 1.1773828578753864e-09]], "pointer": [[0.0, 0.0, 5.208412900969961e-08, 0.0, 0.0, 0.0, 0.0, 0.9999954700469971, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 5.172900330308039e-08, 0.0, 3.80956599599358e-09, 0.0, 0.0, 0.0, 4.2022865742730175e-10, 0.0, 0.0, 3.745628589513217e-07, 0.0, 0.0, 0.0, 0.0, 1.0779158401419409e-06, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.9629455891845282e-06, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.5562993382900459e-07, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.2982680708262251e-08, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 7.151528080839853e-08, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0543898198989154e-08, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 4.718276613857597e-07, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 3.120007363577315e-08, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0030539954186679e-07, 0.0, 0.0, 7.850126659825207e-10, 0.0, 0.0, 0.0, 0.0, 0.0, 8.34167313001899e-09, 0.0, 0.0, 0.0, 0.0, 0.0, 5.391116175701427e-08, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 3.375354040713319e-08, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 3.49429440937854e-09, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 6.575350486315301e-09, 0.0, 0.0, 0.0, 0.0]], "target": [0.9999954700469971]}, "loss": [1.811964830267243e-05, 4.529963462118758e-06], "acc": [0.0, 1.0, 1.0, 1.0]}}


All source tokens:

['#NEWLINE#', 'def test_get_with_exception(', 'self', ')', ':', '#NEWLINE#', '#INDENT#', 'mock_handler', '=', 'mock', '.', 'Mock', '(', ')', '#NEWLINE#', 'async', '=', 'self', '.', '_makeOne', '(', 'async', ')', '#NEWLINE#', 'lst', '=', '[', ']', '#NEWLINE#', 'bv', '=', 'threading', '.', 'Event', '(', ')', '#NEWLINE#', 'cv', '=', 'threading', '.', 'Event', '(', ')', '#NEWLINE#', 'def wait_for_val(', ')', ':', '#NEWLINE#', '#INDENT#', 'bv', '.', 'set', '(', ')', '#NEWLINE#', 'try', ':', '#NEWLINE#', '#INDENT#', 'val', '=', 'async', '.', 'get', '(', ')', '#NEWLINE#', '#UNINDENT#', 'except', 'ImportError', ':', '#NEWLINE#', '#INDENT#', 'lst', '.', 'append', '(', "'oops'", ')', '#NEWLINE#', '#UNINDENT#', 'else', ':', '#NEWLINE#', '#INDENT#', 'lst', '.', 'append', '(', 'val', ')', '#NEWLINE#', '#UNINDENT#', 'cv', '.', 'set', '(', ')', '#NEWLINE#', '#UNINDENT#', 'th', '=', 'threading', '.', 'Thread', '(', 'target', '=', 'wait_for_val', ')', '#NEWLINE#', 'th', '.', 'start', '(', ')', '#NEWLINE#', 'bv', '.', 'wait', '(', ')', '#NEWLINE#', 'async', '.', 'set_exception', '(', 'ImportError', ')', '#NEWLINE#', 'cv', '.', 'wait', '(', ')', '#NEWLINE#', 'eq_', '(', 'lst', ',', '[', "'oops'", ']', ')', '#NEWLINE#', 'th', '.', 'join', '(', ')']


All attention probs:

[0.011785201728343964, 0.009873059578239918, 0.046855628490448, 0.012360796332359314, 0.009637320414185524, 0.009361344389617443, 0.0076388586312532425, 0.036502495408058167, 0.007581794634461403, 0.009375185705721378, 0.006560623645782471, 0.00969198253005743, 0.008606158196926117, 0.00608790572732687, 0.007626501843333244, 0.018987635150551796, 0.008254805579781532, 0.015284731052815914, 0.0048950230702757835, 0.00648034131154418, 0.006070512812584639, 0.03462015837430954, 0.004757385700941086, 0.006306734401732683, 0.018837329000234604, 0.0046486328355968, 0.004535763058811426, 0.0039186133071780205, 0.004698711913079023, 0.01197176706045866, 0.0042321812361478806, 0.0058312914334237576, 0.003624559612944722, 0.0040445271879434586, 0.003913219552487135, 0.004117058590054512, 0.0052627502009272575, 0.011944877915084362, 0.004096463322639465, 0.004833200015127659, 0.0023756716400384903, 0.0038520745001733303, 0.005623497534543276, 0.003393051214516163, 0.0048593501560389996, 0.013134736567735672, 0.007914051413536072, 0.0034956932067871094, 0.0039051237981766462, 0.004121862817555666, 0.00982792116701603, 0.0025419709272682667, 0.002853414509445429, 0.0036058463156223297, 0.003095181193202734, 0.0038350538816303015, 0.0030139756854623556, 0.0031276096124202013, 0.0030888738110661507, 0.003349201986566186, 0.009109891019761562, 0.0032661138102412224, 0.008619792759418488, 0.002350575290620327, 0.0037215091288089752, 0.0035754782147705555, 0.0036899843253195286, 0.004823655821382999, 0.004750035237520933, 0.008198835887014866, 0.006366637535393238, 0.003982555586844683, 0.004141948651522398, 0.0037296924274414778, 0.00848290417343378, 0.002110067754983902, 0.002439864445477724, 0.0027830421458929777, 0.00578301353380084, 0.0024969058576971292, 0.004209015052765608, 0.0039126197807490826, 0.00855408888310194, 0.0031151166185736656, 0.003475015517324209, 0.003574095666408539, 0.01128691527992487, 0.0033431744668632746, 0.0035015521571040154, 0.003276875941082835, 0.02019161731004715, 0.0028647943399846554, 0.003817319869995117, 0.0037123553920537233, 0.00924752838909626, 0.002652280731126666, 0.004461539443582296, 0.004918813239783049, 0.0038649144116789103, 0.0047288150526583195, 0.0045389155857264996, 0.014165923930704594, 0.004348652437329292, 0.004539883229881525, 0.002966848202049732, 0.0033726312685757875, 0.0032006336841732264, 0.006159882061183453, 0.002716050250455737, 0.034796979278326035, 0.002614092780277133, 0.0059324102476239204, 0.009669038467109203, 0.0021150936372578144, 0.003944789990782738, 0.003752141259610653, 0.0028484631329774857, 0.004340748302638531, 0.008265343494713306, 0.0021667955443263054, 0.003780981060117483, 0.0043694325722754, 0.003605740377679467, 0.0050860135816037655, 0.009055486880242825, 0.005715701263397932, 0.004284449387341738, 0.006416875869035721, 0.005993227940052748, 0.004430725704878569, 0.005972567480057478, 0.01030239462852478, 0.002482377691194415, 0.0038311686366796494, 0.0035424616653472185, 0.0029025005642324686, 0.00460836524143815, 0.004239602014422417, 0.00337942223995924, 0.029935628175735474, 0.00327733694575727, 0.003482102882117033, 0.005153164267539978, 0.0031128341797739267, 0.0031129117123782635, 0.004679008852690458, 0.00965677760541439, 0.0028327384497970343, 0.0045938617549836636, 0.0045989565551280975, 0.005251623224467039]


Top-k source tokens:

['self', 'mock_handler', 'wait_for_val', 'async', 'lst', 'val', 'async', 'lst', 'self', 'th']


Top-k attention probs:

[0.046855628490448, 0.036502495408058167, 0.034796979278326035, 0.03462015837430954, 0.029935628175735474, 0.02019161731004715, 0.018987635150551796, 0.018837329000234604, 0.015284731052815914, 0.014165923930704594]
