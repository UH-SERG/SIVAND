
Original sample:

{"has_bug": true, "bug_kind": 1, "bug_kind_name": "VARIABLE_MISUSE", "source_tokens": ["#NEWLINE#", "def single_out_category(", "self", ",", "options", ")", ":", "#NEWLINE#", "#INDENT#", "'Singles out the votes for a chosen category and returns a prediction\\n           for this category iff the number of votes reaches at least the given\\n           threshold.\\n\\n        '", "#NEWLINE#", "if", "(", "(", "options", "is", "None", ")", "or", "any", "(", "(", "(", "option", "not in", "options", ")", "for", "option", "in", "[", "'threshold'", ",", "'category'", "]", ")", ")", ")", ":", "#NEWLINE#", "#INDENT#", "raise", "Exception", "(", "'No category and threshold information was found. Add threshold and category info. E.g. {\"threshold\": 6, \"category\": \"Iris-virginica\"}.'", ")", "#NEWLINE#", "#UNINDENT#", "length", "=", "len", "(", "self", ".", "predictions", ")", "#NEWLINE#", "if", "(", "options", "[", "'threshold'", "]", ">", "length", ")", ":", "#NEWLINE#", "#INDENT#", "raise", "Exception", "(", "(", "'You cannot set a threshold value larger than %s. The ensemble has not enough models to use this threshold value.'", "%", "length", ")", ")", "#NEWLINE#", "#UNINDENT#", "if", "(", "options", "[", "'threshold'", "]", "<", "1", ")", ":", "#NEWLINE#", "#INDENT#", "raise", "Exception", "(", "'The threshold must be a positive value'", ")", "#NEWLINE#", "#UNINDENT#", "category_predictions", "=", "[", "]", "#NEWLINE#", "rest_of_predictions", "=", "[", "]", "#NEWLINE#", "for", "prediction", "in", "option", ".", "predictions", ":", "#NEWLINE#", "#INDENT#", "if", "(", "prediction", "[", "'prediction'", "]", "==", "options", "[", "'category'", "]", ")", ":", "#NEWLINE#", "#INDENT#", "category_predictions", ".", "append", "(", "prediction", ")", "#NEWLINE#", "#UNINDENT#", "else", ":", "#NEWLINE#", "#INDENT#", "rest_of_predictions", ".", "append", "(", "prediction", ")", "#NEWLINE#", "#UNINDENT#", "#UNINDENT#", "if", "(", "len", "(", "category_predictions", ")", ">=", "options", "[", "'threshold'", "]", ")", ":", "#NEWLINE#", "#INDENT#", "return", "MultiVote", "(", "category_predictions", ")", "#NEWLINE#", "#UNINDENT#", "return", "MultiVote", "(", "rest_of_predictions", ")"], "error_location": [112], "repair_targets": [2, 52], "repair_candidates": [23, 28, 112, 110, 120, 137, 149, 2, 52, 99, 133, 158, 172, 48, 64, 75, 4, 14, 25, 59, 82, 125, 161, 104, 145, 179], "provenances": [{"datasetProvenance": {"datasetName": "ETHPy150Open", "filepath": "bigmlcom/python/bigml/multivote.py", "license": "apache-2.0", "note": "license: bigquery_api"}}], "txt_file": "eval__VARIABLE_MISUSE__SStuB.txt-00001-of-00300", "js_count": 4276, "results": {"model": "transformer", "prob": {"loc": [[0.008564764633774757, 7.75152244614219e-08, 1.7364074622605585e-08, 4.5405693094302535e-10, 3.763492628650056e-08, 4.3385128822848174e-10, 7.825642911463149e-10, 7.341450225517576e-10, 5.053173435243252e-10, 7.872039908818351e-09, 8.917531713059645e-10, 1.4424202943175146e-09, 9.163423908553625e-10, 6.619635506410759e-09, 1.247632553713629e-05, 5.492091226244611e-09, 1.7222236969871574e-09, 8.771495196846502e-10, 6.853355660751959e-10, 1.361559753831898e-09, 1.9382768723374966e-09, 3.253254776680592e-09, 1.6837642391465124e-08, 2.848228405127884e-06, 2.4280482069372056e-09, 9.370219777338207e-05, 5.594209540049633e-09, 1.0598505184589158e-08, 1.0702247088545391e-08, 1.107930969190818e-09, 3.3019425416114245e-08, 6.580184397364519e-09, 8.72827088382877e-10, 1.7356403247958951e-07, 8.882393154330259e-10, 1.3652107222483778e-09, 3.098183098959595e-10, 2.7196986329691697e-10, 1.5530176034062038e-09, 1.1203645788882e-09, 6.579754519009384e-10, 5.142313241890406e-10, 2.0110346721224914e-09, 7.614302077740831e-09, 2.3939662696648156e-07, 6.944905095451759e-09, 3.4332852116847334e-09, 1.1399563515368527e-09, 1.6767199184641868e-08, 4.744229453734761e-10, 3.6271989856118125e-09, 2.698032375292314e-08, 0.0002972909132950008, 4.727954028282966e-09, 2.0042847381773754e-08, 2.324020975663643e-09, 2.221838713012403e-09, 1.5854190182906791e-09, 8.406012774742067e-09, 6.413898518076167e-05, 9.25776699745029e-09, 1.8552688274553475e-09, 6.440771804783196e-10, 1.4153174188180628e-09, 1.798402809072286e-05, 4.5844986140686217e-10, 2.970189649786903e-09, 2.2486807971233702e-09, 1.7564426579852466e-09, 2.17858997508813e-09, 2.457653636156465e-09, 4.0750514074261446e-09, 4.086713545348175e-08, 4.944216414060065e-08, 1.905885405051322e-08, 9.808322829485405e-06, 4.708803125197392e-09, 3.2923692661057657e-09, 4.339226755689651e-09, 4.3949590633474145e-09, 2.5190176611289417e-09, 6.453785950100155e-09, 7.554464536951855e-05, 6.206690272847482e-08, 4.989173074676501e-09, 4.282983745440561e-09, 6.893764670223845e-09, 1.270336298375696e-07, 2.4917989893680215e-09, 6.7514065449358895e-09, 3.93526766728769e-09, 2.6541961961612515e-09, 2.957154743299384e-09, 4.936270503463902e-09, 1.6256481671916845e-07, 1.5295800039893948e-06, 1.4313353169370657e-08, 7.96208343700755e-09, 4.910914341849093e-09, 5.3814620315506545e-08, 1.1180297576629528e-08, 1.489222825057368e-07, 1.0510092351978528e-08, 7.513501820710644e-09, 6.230234106396892e-08, 6.0563332127117064e-09, 3.1409567213813716e-07, 9.954076674034695e-09, 1.34165620835347e-08, 2.3477600308297042e-08, 2.2326384296889046e-08, 2.1587107656984017e-09, 0.9899040460586548, 1.209235733767855e-08, 7.166138793479604e-09, 2.0667679123675953e-08, 5.429918736865602e-09, 2.6661501895119954e-09, 4.418805321648733e-09, 2.4091725947528175e-08, 0.0004812591942027211, 1.0212453815938716e-07, 1.1931361143524555e-07, 2.50237675025744e-09, 8.233524972922623e-09, 3.8947731809457764e-05, 3.241117241259417e-08, 4.2992840576516755e-07, 3.06678349382139e-09, 3.5233953532554096e-09, 1.0623054436109669e-08, 7.500830179196782e-09, 2.9865050432675844e-09, 3.528062508806329e-09, 1.6738241903624385e-09, 1.032817387169871e-09, 2.32129320210106e-08, 1.7816817489801906e-05, 1.5337894510025762e-08, 1.3784248409365318e-08, 2.3609161292625913e-09, 4.11466505312319e-09, 2.06843897565534e-09, 1.554724571306565e-09, 7.539942004086697e-10, 2.5681523574405674e-09, 2.217943162463598e-09, 6.126106844028811e-10, 1.058910914508715e-08, 5.758825136581436e-05, 9.002351752940285e-09, 1.1820984191501793e-08, 3.918609881026214e-09, 2.46396170133778e-09, 7.099851817571334e-10, 8.067989609727988e-10, 6.68100330614152e-09, 6.02804348659447e-08, 0.00011149601778015494, 1.207525079927052e-09, 3.6196174946212523e-09, 0.00012376242375466973, 3.1921118193167786e-07, 1.2265343407591445e-08, 4.071679438055753e-09, 1.0145351225787635e-08, 1.0466002287046194e-08, 8.582800248291278e-09, 2.945333532622385e-09, 5.81855286174715e-10, 6.321306256218406e-10, 2.093070747832826e-07, 0.00011095323861809447, 1.6811329217603088e-08, 8.122374772767671e-09, 3.4094209677704157e-09, 2.8293559162229087e-10, 2.630748674459227e-10, 1.446611719302382e-08, 1.0310618563380558e-05, 1.320419951156282e-08]], "pointer": [[0.0, 0.0, 0.1016068160533905, 0.0, 0.01631159894168377, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.00020467284775804728, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 3.9810453017707914e-05, 0.0, 0.00042575530824251473, 0.0, 0.0, 0.00025716322124935687, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.004058544989675283, 0.0, 0.0, 0.0, 0.8663800358772278, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0004044175730086863, 0.0, 0.0, 0.0, 0.0, 0.00018083688337355852, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 7.323030877159908e-05, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0009548584348522127, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0004763324686791748, 0.0, 0.0, 0.0, 0.0, 0.00036651286063715816, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0020260547753423452, 0.0, 1.5670790162403136e-05, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 3.474489494692534e-05, 0.0, 0.0, 0.0, 0.0, 0.0019858942832797766, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.00013888059766031802, 0.0, 0.0, 0.0, 4.7903617087285966e-05, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.00019483921641949564, 0.0, 0.0, 0.0, 6.486114580184221e-05, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.00036851520417258143, 0.0, 0.0, 0.003343078074976802, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 2.1102763639646582e-05, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.7868278519017622e-05, 0.0]], "target": [0.9679868221282959]}, "loss": [0.010147174820303917, 0.03253680467605591], "acc": [0.0, 1.0, 1.0, 1.0]}}


All source tokens:

['#NEWLINE#', 'def single_out_category(', 'self', ',', 'options', ')', ':', '#NEWLINE#', '#INDENT#', "'Singles out the votes for a chosen category and returns a prediction\\n           for this category iff the number of votes reaches at least the given\\n           threshold.\\n\\n        '", '#NEWLINE#', 'if', '(', '(', 'options', 'is', 'None', ')', 'or', 'any', '(', '(', '(', 'option', 'not in', 'options', ')', 'for', 'option', 'in', '[', "'threshold'", ',', "'category'", ']', ')', ')', ')', ':', '#NEWLINE#', '#INDENT#', 'raise', 'Exception', '(', '\'No category and threshold information was found. Add threshold and category info. E.g. {"threshold": 6, "category": "Iris-virginica"}.\'', ')', '#NEWLINE#', '#UNINDENT#', 'length', '=', 'len', '(', 'self', '.', 'predictions', ')', '#NEWLINE#', 'if', '(', 'options', '[', "'threshold'", ']', '>', 'length', ')', ':', '#NEWLINE#', '#INDENT#', 'raise', 'Exception', '(', '(', "'You cannot set a threshold value larger than %s. The ensemble has not enough models to use this threshold value.'", '%', 'length', ')', ')', '#NEWLINE#', '#UNINDENT#', 'if', '(', 'options', '[', "'threshold'", ']', '<', '1', ')', ':', '#NEWLINE#', '#INDENT#', 'raise', 'Exception', '(', "'The threshold must be a positive value'", ')', '#NEWLINE#', '#UNINDENT#', 'category_predictions', '=', '[', ']', '#NEWLINE#', 'rest_of_predictions', '=', '[', ']', '#NEWLINE#', 'for', 'prediction', 'in', 'option', '.', 'predictions', ':', '#NEWLINE#', '#INDENT#', 'if', '(', 'prediction', '[', "'prediction'", ']', '==', 'options', '[', "'category'", ']', ')', ':', '#NEWLINE#', '#INDENT#', 'category_predictions', '.', 'append', '(', 'prediction', ')', '#NEWLINE#', '#UNINDENT#', 'else', ':', '#NEWLINE#', '#INDENT#', 'rest_of_predictions', '.', 'append', '(', 'prediction', ')', '#NEWLINE#', '#UNINDENT#', '#UNINDENT#', 'if', '(', 'len', '(', 'category_predictions', ')', '>=', 'options', '[', "'threshold'", ']', ')', ':', '#NEWLINE#', '#INDENT#', 'return', 'MultiVote', '(', 'category_predictions', ')', '#NEWLINE#', '#UNINDENT#', 'return', 'MultiVote', '(', 'rest_of_predictions', ')']


All attention probs:

[0.01032225787639618, 0.008908935822546482, 0.04416893795132637, 0.0124540776014328, 0.018277989700436592, 0.009518170729279518, 0.0065856631845235825, 0.0066292062401771545, 0.006148072425276041, 0.010388822294771671, 0.007559542544186115, 0.008295305073261261, 0.005943691357970238, 0.005568529944866896, 0.013469652272760868, 0.0053332033567130566, 0.00558815523982048, 0.005371274892240763, 0.006578906439244747, 0.006707808934152126, 0.0055361902341246605, 0.004806833807379007, 0.00486413948237896, 0.014950641430914402, 0.004187867045402527, 0.012950765900313854, 0.003272613510489464, 0.0044402810744941235, 0.009190287441015244, 0.004409631248563528, 0.004037238657474518, 0.0037914684507995844, 0.004598285537213087, 0.009647625498473644, 0.003973469138145447, 0.004076978657394648, 0.004346615634858608, 0.0035219956189393997, 0.004027582239359617, 0.0041137393563985825, 0.0035048131830990314, 0.007313938345760107, 0.003964281640946865, 0.0035530400928109884, 0.0046225134283304214, 0.002553822472691536, 0.00403132988139987, 0.0037680454552173615, 0.012064991518855095, 0.00413766223937273, 0.0023399225901812315, 0.0025382614694535732, 0.013802331872284412, 0.0020620401483029127, 0.002347275149077177, 0.0018208103720098734, 0.0032914462499320507, 0.003261550795286894, 0.0023196605034172535, 0.011219767853617668, 0.0028920823242515326, 0.002574776066467166, 0.0023710632231086493, 0.002500611124560237, 0.013879547826945782, 0.002861035754904151, 0.0031854496337473392, 0.004332527052611113, 0.004189602565020323, 0.009482959285378456, 0.0031543681398034096, 0.002753093373030424, 0.0032319717574864626, 0.0044851102866232395, 0.003077904926612973, 0.01170746423304081, 0.002011300064623356, 0.0017351678106933832, 0.0035426204558461905, 0.0035331998951733112, 0.0038461070507764816, 0.0023474693298339844, 0.00851901900023222, 0.002537972293794155, 0.0022007988300174475, 0.002188592217862606, 0.002828537253662944, 0.005561268422752619, 0.00292957597412169, 0.002615534933283925, 0.002734609181061387, 0.002724268240854144, 0.004535720683634281, 0.002176071982830763, 0.002900223946198821, 0.005806464236229658, 0.0025587675627321005, 0.0038074119947850704, 0.003836976829916239, 0.007740784902125597, 0.0066463034600019455, 0.003579402808099985, 0.0028259491082280874, 0.004935509990900755, 0.008502964861690998, 0.005723254755139351, 0.003104371950030327, 0.0019932978320866823, 0.0037121991626918316, 0.0025387010537087917, 0.017914216965436935, 0.004057313781231642, 0.0407952219247818, 0.0017862318782135844, 0.002832664642482996, 0.0026727390941232443, 0.0028995254542678595, 0.0030523408204317093, 0.003976225387305021, 0.002203328302130103, 0.009417028166353703, 0.0025727327447384596, 0.003167613409459591, 0.0027341858949512243, 0.003301657037809491, 0.008276308886706829, 0.003219387261196971, 0.004137386102229357, 0.0029553088825196028, 0.002093939809128642, 0.002750317333266139, 0.0034633048344403505, 0.0031807797495275736, 0.011688845232129097, 0.001497902674600482, 0.0022613327018916607, 0.00273375166580081, 0.01169724389910698, 0.0017050581518560648, 0.003374105552211404, 0.003160554450005293, 0.0062594967894256115, 0.002849414711818099, 0.0032293577678501606, 0.0030771365854889154, 0.010993103496730328, 0.0018109636148437858, 0.0026098527014255524, 0.0031272706110030413, 0.012712054885923862, 0.0026300186291337013, 0.0039793043397367, 0.004330363590270281, 0.005481383763253689, 0.0074467104859650135, 0.004678221885114908, 0.0037696892395615578, 0.0043166689574718475, 0.01497197337448597, 0.003449134062975645, 0.003498984733596444, 0.011626560240983963, 0.002827791031450033, 0.002351507544517517, 0.0024527832865715027, 0.0026564737781882286, 0.0028965482488274574, 0.00380018656142056, 0.0033313946332782507, 0.0036668500397354364, 0.004776217043399811, 0.003391297534108162, 0.018071182072162628, 0.0032028229907155037, 0.004329614341259003, 0.0037677178625017405, 0.004564357455819845, 0.004724223166704178, 0.0037633199244737625, 0.014510204084217548, 0.003949350211769342]


Top-k source tokens:

['self', 'option', 'options', 'category_predictions', 'prediction', 'category_predictions', 'option', 'rest_of_predictions', 'length', 'self']


Top-k attention probs:

[0.04416893795132637, 0.0407952219247818, 0.018277989700436592, 0.018071182072162628, 0.017914216965436935, 0.01497197337448597, 0.014950641430914402, 0.014510204084217548, 0.013879547826945782, 0.013802331872284412]
