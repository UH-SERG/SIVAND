
Original sample:

{"has_bug": true, "bug_kind": 1, "bug_kind_name": "VARIABLE_MISUSE", "source_tokens": ["#NEWLINE#", "def testInit(", "self", ")", ":", "#NEWLINE#", "#INDENT#", "numVertices", "=", "0", "#NEWLINE#", "numFeatures", "=", "1", "#NEWLINE#", "vList", "=", "VertexList", "(", "numVertices", ",", "numVertices", ")", "#NEWLINE#", "graph", "=", "CsArrayGraph", "(", "vList", ")", "#NEWLINE#", "self", ".", "assertEquals", "(", "graph", ".", "weightMatrixDType", "(", ")", ",", "numpy", ".", "float", ")", "#NEWLINE#", "graph", "=", "CsArrayGraph", "(", "vList", ",", "dtype", "=", "numpy", ".", "int16", ")", "#NEWLINE#", "self", ".", "assertEquals", "(", "graph", ".", "weightMatrixDType", "(", ")", ",", "numpy", ".", "int16", ")", "#NEWLINE#", "graph", "=", "CsArrayGraph", "(", "numVertices", ")", "#NEWLINE#", "self", ".", "assertEquals", "(", "graph", ".", "size", ",", "numVertices", ")"], "error_location": [21], "repair_targets": [11], "repair_candidates": [15, 28, 50, 2, 31, 59, 81, 11, 7, 19, 21, 78, 89, 24, 35, 46, 63, 74, 85], "provenances": [{"datasetProvenance": {"datasetName": "ETHPy150Open", "filepath": "charanpald/APGL/apgl/graph/test/CsArrayGraphTest.py", "license": "bsd-3-clause", "note": "license: bigquery_api"}}], "txt_file": "eval__VARIABLE_MISUSE__SStuB.txt-00000-of-00300", "js_count": 1276, "results": {"model": "transformer", "prob": {"loc": [[0.010032354854047298, 3.443833520577755e-07, 8.091257086562109e-08, 6.282686371150703e-09, 8.180238708632714e-09, 8.736199319514526e-09, 8.693513464663738e-09, 1.574243810864573e-07, 1.7238342309155996e-08, 2.2028626034398258e-08, 6.052403911382953e-09, 1.2342279660515487e-06, 1.7147572251019483e-08, 1.5795869501289417e-07, 9.3797627442882e-09, 1.0171223721044953e-06, 3.2860376641963285e-09, 2.2704265134620982e-09, 1.0546212791950893e-08, 0.29556089639663696, 6.921511896962329e-08, 0.633278489112854, 3.459308928199789e-08, 1.7242550498508535e-08, 4.682233338826336e-07, 3.732876674433783e-09, 1.9368939785380235e-09, 9.252061339282136e-09, 0.00033760021324269474, 4.692521571314501e-08, 2.7215424580617764e-08, 1.862980436584394e-09, 1.4370018508458315e-09, 1.3474172888550129e-09, 6.900786164720785e-09, 1.3495746316039003e-06, 7.287209502493397e-09, 7.1903558662711475e-09, 1.5885605364474031e-07, 8.722135191874258e-08, 3.371255985484822e-08, 3.403880270980153e-07, 1.788747105990751e-08, 2.052056835566418e-08, 1.4928474456610275e-08, 7.612396935030574e-09, 4.676716969242989e-07, 1.3960852474070862e-09, 1.7630104043320216e-09, 2.5305370243700054e-08, 0.002444154815748334, 9.780926291114156e-09, 2.487521442162688e-07, 9.354553576201852e-09, 3.1122695531848876e-08, 2.974510238118455e-08, 2.727549919256944e-08, 8.450248500935231e-09, 1.7335739954660312e-08, 3.863083630761821e-09, 5.006998371470672e-09, 2.1043640163753707e-09, 8.138498763798907e-09, 1.1802072549471632e-05, 1.9025103270564614e-08, 1.2552083816785853e-08, 3.842261833142402e-07, 3.339385301615039e-08, 1.8536843171546025e-08, 2.638042531089013e-07, 2.5244148105230124e-08, 2.6683176557185107e-08, 3.185692065699186e-08, 1.0625684332410401e-08, 2.0521710553111916e-07, 1.3414910293718663e-09, 3.594941566653631e-10, 4.337818104716007e-09, 0.016666440293192863, 2.2111851905037838e-08, 3.690593075589277e-08, 3.2385558679237647e-09, 4.662542352207311e-09, 1.2233860591237544e-09, 2.3640693846971317e-09, 2.7309037250233814e-05, 2.521844955083452e-08, 4.589295343748745e-08, 2.9085164499065286e-08, 0.04163295775651932, 3.171499329823746e-08]], "pointer": [[0.0, 0.0, 5.8477426136960275e-06, 0.0, 0.0, 0.0, 0.0, 0.00015529224765487015, 0.0, 0.0, 0.0, 0.9971942901611328, 0.0, 0.0, 0.0, 0.0006586112431250513, 0.0, 0.0, 0.0, 1.8153225028072484e-05, 0.0, 8.160681318258867e-06, 0.0, 0.0, 0.00032421815558336675, 0.0, 0.0, 0.0, 6.167838728288189e-05, 0.0, 0.0, 6.760557198504102e-07, 0.0, 0.0, 0.0, 0.0002664065395947546, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.000368311331840232, 0.0, 0.0, 0.0, 0.000689629465341568, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 2.3841036522753711e-07, 0.0, 0.0, 0.0, 3.5787379601970315e-05, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.00016573455650359392, 0.0, 0.0, 0.0, 2.9588083634735085e-05, 0.0, 0.0, 1.2086415779322124e-07, 0.0, 0.0, 0.0, 2.6266277473041555e-06, 0.0, 0.0, 0.0, 1.455333040212281e-05, 0.0]], "target": [0.9971942901611328]}, "loss": [0.45684486627578735, 0.002809653291478753], "acc": [0.0, 1.0, 1.0, 1.0]}}


All source tokens:

['#NEWLINE#', 'def testInit(', 'self', ')', ':', '#NEWLINE#', '#INDENT#', 'numVertices', '=', '0', '#NEWLINE#', 'numFeatures', '=', '1', '#NEWLINE#', 'vList', '=', 'VertexList', '(', 'numVertices', ',', 'numVertices', ')', '#NEWLINE#', 'graph', '=', 'CsArrayGraph', '(', 'vList', ')', '#NEWLINE#', 'self', '.', 'assertEquals', '(', 'graph', '.', 'weightMatrixDType', '(', ')', ',', 'numpy', '.', 'float', ')', '#NEWLINE#', 'graph', '=', 'CsArrayGraph', '(', 'vList', ',', 'dtype', '=', 'numpy', '.', 'int16', ')', '#NEWLINE#', 'self', '.', 'assertEquals', '(', 'graph', '.', 'weightMatrixDType', '(', ')', ',', 'numpy', '.', 'int16', ')', '#NEWLINE#', 'graph', '=', 'CsArrayGraph', '(', 'numVertices', ')', '#NEWLINE#', 'self', '.', 'assertEquals', '(', 'graph', '.', 'size', ',', 'numVertices', ')']


All attention probs:

[0.017230089753866196, 0.011355141177773476, 0.049385394901037216, 0.01408582367002964, 0.010741130448877811, 0.011688965372741222, 0.00993043091148138, 0.030262907966971397, 0.009285368025302887, 0.013921797275543213, 0.01300735305994749, 0.03354645520448685, 0.00981409102678299, 0.014993366785347462, 0.010210838168859482, 0.02476607635617256, 0.010725896805524826, 0.00920617301017046, 0.007091367617249489, 0.0282287634909153, 0.006999472621828318, 0.03199818730354309, 0.005615611560642719, 0.008631921373307705, 0.01764209382236004, 0.007090930826961994, 0.0060280910693109035, 0.0055480352602899075, 0.02335396595299244, 0.005184889771044254, 0.0072179134003818035, 0.015336920507252216, 0.005016157403588295, 0.0054389433935284615, 0.0055854422971606255, 0.0172880906611681, 0.004277501255273819, 0.005162848625332117, 0.007124495692551136, 0.004472991451621056, 0.00555261317640543, 0.011397702619433403, 0.005800287239253521, 0.007180759683251381, 0.0033248132094740868, 0.008202051743865013, 0.01569558121263981, 0.007816307246685028, 0.004955184180289507, 0.005503377411514521, 0.02379397116601467, 0.004852613899856806, 0.008031193166971207, 0.00468455022200942, 0.008020427078008652, 0.003767140209674835, 0.004918536636978388, 0.003473450895398855, 0.006770361680537462, 0.014866018667817116, 0.0040306588634848595, 0.004791822284460068, 0.005434838123619556, 0.017496518790721893, 0.0050024366937577724, 0.0053994557820260525, 0.008943986147642136, 0.006426441948860884, 0.0070529840886592865, 0.009355402551591396, 0.0045065865851938725, 0.006516191642731428, 0.004877467639744282, 0.008145772852003574, 0.018507881090044975, 0.007738258223980665, 0.006159145385026932, 0.005305894184857607, 0.04716810956597328, 0.003512926399707794, 0.007364907767623663, 0.011866520158946514, 0.0035003344528377056, 0.005600925534963608, 0.007372269406914711, 0.020639024674892426, 0.004945629276335239, 0.00929523166269064, 0.006986640859395266, 0.03623412549495697, 0.006722734775394201]


Top-k source tokens:

['self', 'numVertices', 'numVertices', 'numFeatures', 'numVertices', 'numVertices', 'numVertices', 'vList', 'vList', 'vList']


Top-k attention probs:

[0.049385394901037216, 0.04716810956597328, 0.03623412549495697, 0.03354645520448685, 0.03199818730354309, 0.030262907966971397, 0.0282287634909153, 0.02476607635617256, 0.02379397116601467, 0.02335396595299244]
