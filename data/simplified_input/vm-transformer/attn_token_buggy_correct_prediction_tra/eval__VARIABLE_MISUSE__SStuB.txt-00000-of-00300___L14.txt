
Original sample:

{"has_bug": true, "bug_kind": 1, "bug_kind_name": "VARIABLE_MISUSE", "source_tokens": ["#NEWLINE#", "def test_csv_import_schema(", ")", ":", "#NEWLINE#", "#INDENT#", "with", "bayesdb_csv_stream", "(", "csv_data", ")", "as", "(", "bdb", ",", "f", ")", ":", "#NEWLINE#", "#INDENT#", "bdb", ".", "sql_execute", "(", "'\\n            CREATE TABLE employees(\\n                age INTEGER,\\n                gender TEXT,\\n                salary REAL,\\n                height INTEGER,\\n                division TEXT,\\n                rank INTEGER\\n            )\\n        '", ")", "#NEWLINE#", "bayeslite", ".", "bayesdb_read_csv", "(", "f", ",", "'employees'", ",", "f", ",", "header", "=", "True", ",", "create", "=", "False", ")", "#NEWLINE#", "bdb", ".", "execute", "(", "'select height from employees'", ")", ".", "fetchall", "(", ")", "#NEWLINE#", "with", "pytest", ".", "raises", "(", "apsw", ".", "SQLError", ")", ":", "#NEWLINE#", "#INDENT#", "bdb", ".", "execute", "(", "'select idontexist from employees'", ")", "#NEWLINE#", "raise", "apsw", ".", "SQLError", "(", "'BQL compiler is broken; a.k.a. sqlite3 is stupid.'", ")", "#NEWLINE#", "#UNINDENT#", "bdb", ".", "execute", "(", "'\\n            CREATE GENERATOR employees_cc FOR employees USING crosscat(\\n                age NUMERICAL,\\n                gender CATEGORICAL,\\n                salary CYCLIC,\\n                division CATEGORICAL,\\n                rank CATEGORICAL\\n            )\\n        '", ")", "#NEWLINE#", "bdb", ".", "execute", "(", "'estimate height from employees_cc'", ")", ".", "fetchall", "(", ")", "#NEWLINE#", "with", "pytest", ".", "raises", "(", "bayeslite", ".", "BQLError", ")", ":", "#NEWLINE#", "#INDENT#", "bdb", ".", "execute", "(", "'estimate predict height with confidence 0.9 from employees_cc'", ")"], "error_location": [31], "repair_targets": [13, 20, 46, 69, 85, 92, 115], "repair_candidates": [13, 20, 46, 69, 85, 92, 115, 15, 31, 35], "provenances": [{"datasetProvenance": {"datasetName": "ETHPy150Open", "filepath": "probcomp/bayeslite/tests/test_csv.py", "license": "apache-2.0", "note": "license: bigquery_api"}}], "txt_file": "eval__VARIABLE_MISUSE__SStuB.txt-00000-of-00300", "js_count": 14, "results": {"model": "transformer", "prob": {"loc": [[0.1141790822148323, 1.0739800018200185e-06, 5.322707252730652e-08, 7.842466942520332e-08, 7.872050389323704e-08, 6.23285387746364e-08, 2.633474061042307e-08, 8.267401341299774e-08, 1.5614556048149097e-07, 6.253398169064894e-05, 7.531030377094794e-08, 2.563317025305878e-07, 1.8266061374561104e-07, 2.8208109142724425e-05, 2.4413791877009317e-08, 2.5265444492106326e-06, 1.5677994014140495e-08, 3.651609858934535e-08, 5.162232241673337e-08, 3.1083455809266525e-08, 2.9034956696705194e-06, 3.479456367472267e-08, 2.7697080184907463e-08, 3.95134748032433e-07, 1.9001064401891199e-06, 1.0698261121433461e-07, 6.451639933402475e-08, 1.0669465666524047e-07, 2.1113228498848002e-08, 2.4550987021143555e-08, 1.2705469032425754e-07, 0.8213175535202026, 1.815872394672624e-07, 4.825702148991695e-07, 1.902422752664279e-07, 0.06320703774690628, 6.183275758075979e-08, 4.25372945755953e-08, 6.32240585218824e-07, 2.7159958904121595e-07, 6.968877386270833e-08, 2.3543897498257138e-08, 2.3041896213271684e-07, 6.351093588818912e-07, 1.2033495977448183e-07, 7.76838646743272e-08, 7.910989552328829e-08, 7.875639340682028e-08, 7.686083769442575e-09, 5.4564615936669725e-08, 1.3511004226529622e-07, 1.5662295993479347e-07, 1.5808892328550428e-07, 1.832306928406524e-08, 5.107020228933834e-07, 1.7795906614992418e-07, 1.5347688986366848e-07, 1.8833913983939965e-08, 8.427245745679102e-08, 1.7023504028657044e-07, 1.1541192890263119e-08, 7.225301601465617e-08, 1.1525591617100872e-05, 5.368407300920808e-07, 1.9225454650495521e-07, 4.168957445926935e-08, 3.542532738265436e-07, 1.883557558812754e-07, 1.2483830857945577e-07, 8.073099877492496e-08, 9.30765438056369e-08, 1.0543027784137848e-08, 3.850942391636636e-07, 3.585229023883585e-06, 2.875974303151452e-07, 2.5500042966086767e-07, 4.367788619674684e-08, 1.1479941122161108e-06, 2.707133717194665e-07, 3.440323226300279e-08, 2.968269541270274e-07, 7.170988283178303e-06, 8.172380603355123e-07, 7.587075288029155e-07, 2.2959832790547807e-07, 1.062754719782788e-07, 1.2940996896304569e-07, 6.323641610350705e-09, 7.087954259077378e-07, 2.5832453047769377e-06, 4.1355855273650377e-07, 2.3318486341850075e-07, 1.565060472330515e-07, 4.990416613281923e-08, 4.006271314693777e-09, 1.5624536331415584e-07, 1.8995447135239374e-06, 3.882230430463096e-07, 2.745111657986854e-07, 1.2504283830594431e-08, 4.35416814070777e-06, 3.927030434169865e-07, 2.398559217908769e-07, 1.9569570852695506e-08, 3.1275413903131266e-07, 2.760711765859014e-07, 1.9369673864844117e-08, 6.124158744569286e-07, 0.0006754887290298939, 1.4049495575818582e-06, 2.58109906781101e-07, 1.1268837596389858e-07, 3.1745003070682287e-07, 1.7631690241159959e-07, 7.820866443353225e-08, 2.572704147496552e-07, 1.0804123462548887e-07, 2.5313304785612445e-09, 1.9802565986992704e-07, 0.00046925523201934993, 8.134543350024614e-07]], "pointer": [[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.19657117128372192, 0.0, 0.013769998215138912, 0.0, 0.0, 0.0, 0.0, 0.6806449294090271, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.007270151749253273, 0.0, 0.0, 0.0, 0.004033999051898718, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.09249531477689743, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.002797850873321295, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0005345153622329235, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0008367369882762432, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.00104534684214741, 0.0, 0.0, 0.0, 0.0, 0.0]], "target": [0.9749258756637573]}, "loss": [0.19684557616710663, 0.025393836200237274], "acc": [0.0, 1.0, 1.0, 1.0]}}


All source tokens:

['#NEWLINE#', 'def test_csv_import_schema(', ')', ':', '#NEWLINE#', '#INDENT#', 'with', 'bayesdb_csv_stream', '(', 'csv_data', ')', 'as', '(', 'bdb', ',', 'f', ')', ':', '#NEWLINE#', '#INDENT#', 'bdb', '.', 'sql_execute', '(', "'\\n            CREATE TABLE employees(\\n                age INTEGER,\\n                gender TEXT,\\n                salary REAL,\\n                height INTEGER,\\n                division TEXT,\\n                rank INTEGER\\n            )\\n        '", ')', '#NEWLINE#', 'bayeslite', '.', 'bayesdb_read_csv', '(', 'f', ',', "'employees'", ',', 'f', ',', 'header', '=', 'True', ',', 'create', '=', 'False', ')', '#NEWLINE#', 'bdb', '.', 'execute', '(', "'select height from employees'", ')', '.', 'fetchall', '(', ')', '#NEWLINE#', 'with', 'pytest', '.', 'raises', '(', 'apsw', '.', 'SQLError', ')', ':', '#NEWLINE#', '#INDENT#', 'bdb', '.', 'execute', '(', "'select idontexist from employees'", ')', '#NEWLINE#', 'raise', 'apsw', '.', 'SQLError', '(', "'BQL compiler is broken; a.k.a. sqlite3 is stupid.'", ')', '#NEWLINE#', '#UNINDENT#', 'bdb', '.', 'execute', '(', "'\\n            CREATE GENERATOR employees_cc FOR employees USING crosscat(\\n                age NUMERICAL,\\n                gender CATEGORICAL,\\n                salary CYCLIC,\\n                division CATEGORICAL,\\n                rank CATEGORICAL\\n            )\\n        '", ')', '#NEWLINE#', 'bdb', '.', 'execute', '(', "'estimate height from employees_cc'", ')', '.', 'fetchall', '(', ')', '#NEWLINE#', 'with', 'pytest', '.', 'raises', '(', 'bayeslite', '.', 'BQLError', ')', ':', '#NEWLINE#', '#INDENT#', 'bdb', '.', 'execute', '(', "'estimate predict height with confidence 0.9 from employees_cc'", ')']


All attention probs:

[0.020315175876021385, 0.010124212130904198, 0.01664825715124607, 0.010758370161056519, 0.011225363239645958, 0.01039944402873516, 0.0131456283852458, 0.010199672542512417, 0.007446194998919964, 0.019913671538233757, 0.010066152550280094, 0.013653682544827461, 0.009887869469821453, 0.03167865052819252, 0.008369188755750656, 0.03840743750333786, 0.008102777414023876, 0.007894298061728477, 0.00912733655422926, 0.009015669114887714, 0.01778479479253292, 0.00587086845189333, 0.005780602339655161, 0.006777024362236261, 0.00812533963471651, 0.004896777216345072, 0.006590182427316904, 0.011171010322868824, 0.0035903670359402895, 0.00630409549921751, 0.005071369465440512, 0.05280987173318863, 0.0054486775770783424, 0.006370726972818375, 0.00508425896987319, 0.040850680321455, 0.00526627479121089, 0.008537043817341328, 0.00546225905418396, 0.005146604496985674, 0.004484663251787424, 0.009236778132617474, 0.006207250524312258, 0.0060270060785114765, 0.003521955106407404, 0.0069284988567233086, 0.0112899299710989, 0.0037389122880995274, 0.004010021220892668, 0.0048653315752744675, 0.00620456226170063, 0.004251542966812849, 0.003315129317343235, 0.004470249637961388, 0.00479445094242692, 0.00394536042585969, 0.005432310979813337, 0.005767553113400936, 0.005243584979325533, 0.0035115033388137817, 0.004398427437990904, 0.004013907164335251, 0.009963331744074821, 0.0031611176673322916, 0.0047686416655778885, 0.0043280101381242275, 0.004610471893101931, 0.006526333745568991, 0.006201022770255804, 0.011324441060423851, 0.003437177510932088, 0.005119743291288614, 0.004431599751114845, 0.008181652054190636, 0.00321205984801054, 0.005949184764176607, 0.005320047028362751, 0.006961113307625055, 0.0028874387498944998, 0.0037196986377239227, 0.004073369782418013, 0.009234827011823654, 0.0033706179820001125, 0.005860443692654371, 0.005576403811573982, 0.011005346663296223, 0.0037611396983265877, 0.006326334550976753, 0.005790961440652609, 0.0063928039744496346, 0.0035659947898238897, 0.005988063290715218, 0.013657274655997753, 0.0036445341538637877, 0.00524482736364007, 0.005822535138577223, 0.012933344580233097, 0.006915348581969738, 0.006605427246540785, 0.004825166892260313, 0.0076405503787100315, 0.004788477439433336, 0.00869528017938137, 0.011955052614212036, 0.007500284817069769, 0.003423605812713504, 0.003990571945905685, 0.004251949489116669, 0.011991158127784729, 0.003241085447371006, 0.006844168528914452, 0.004598111379891634, 0.0059516169130802155, 0.006716588512063026, 0.006097782868891954, 0.013519800268113613, 0.003163133515045047, 0.005137974862009287, 0.005421407520771027, 0.028861815109848976, 0.006534906569868326]


Top-k source tokens:

['f', 'f', 'f', 'bdb', "'estimate predict height with confidence 0.9 from employees_cc'", '#NEWLINE#', 'csv_data', 'bdb', ')', 'bdb']


Top-k attention probs:

[0.05280987173318863, 0.040850680321455, 0.03840743750333786, 0.03167865052819252, 0.028861815109848976, 0.020315175876021385, 0.019913671538233757, 0.01778479479253292, 0.01664825715124607, 0.013657274655997753]
