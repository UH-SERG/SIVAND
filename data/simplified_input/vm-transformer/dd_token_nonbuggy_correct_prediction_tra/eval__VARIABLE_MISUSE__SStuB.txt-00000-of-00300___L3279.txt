
Original sample:

{"has_bug": false, "bug_kind": 0, "bug_kind_name": "NONE", "source_tokens": ["#NEWLINE#", "def make_node(", "self", ",", "x", ")", ":", "#NEWLINE#", "#INDENT#", "x", "=", "as_tensor_variable", "(", "x", ")", "#NEWLINE#", "assert", "(", "x", ".", "ndim", "==", "2", ")", ",", "'The input of qr function should be a matrix.'", "#NEWLINE#", "q", "=", "theano", ".", "tensor", ".", "matrix", "(", "dtype", "=", "x", ".", "dtype", ")", "#NEWLINE#", "return", "Apply", "(", "self", ",", "[", "x", "]", ",", "[", "q", "]", ")"], "error_location": [0], "repair_targets": [], "repair_candidates": [4, 9, 13, 18, 37, 48, 2, 45, 27, 52], "provenances": [{"datasetProvenance": {"datasetName": "ETHPy150Open", "filepath": "rizar/attention-lvcsr/libs/Theano/theano/tensor/nlinalg.py", "license": "mit", "note": "license: bigquery_api"}}], "txt_file": "eval__VARIABLE_MISUSE__SStuB.txt-00000-of-00300", "js_count": 3279, "results": {"model": "transformer", "prob": {"loc": [[0.9285625219345093, 1.9973797407146776e-06, 2.170166908399551e-06, 4.594738101104667e-08, 1.4687360589960008e-06, 3.5396855224689716e-08, 7.195427542683319e-08, 7.798654166890628e-08, 6.942421038047542e-08, 2.278687816215097e-06, 3.987776864278203e-08, 2.441606383740691e-08, 1.3439316148833313e-07, 0.0016216463409364223, 1.584178903613065e-07, 1.0021179264185776e-07, 3.790485703092372e-09, 8.794117434263171e-09, 0.004024690482765436, 3.042202081360301e-07, 7.182356487334118e-09, 4.9472838270503416e-08, 5.284611575007148e-07, 9.956458058013595e-08, 9.337077955251516e-08, 2.0540524303669372e-07, 8.093941517017811e-08, 2.608241402413114e-06, 2.5173052975446808e-08, 9.909567211252579e-08, 1.360362347213595e-07, 8.515706184653027e-08, 2.900586935083993e-07, 9.897813235681951e-09, 1.1322091353349606e-07, 7.754201192256005e-08, 5.533376068456164e-08, 0.041452351957559586, 1.7432809045203612e-06, 4.8499938287704936e-08, 1.124092605664373e-07, 1.9591421107634233e-07, 4.320728219653347e-09, 4.521863772311008e-08, 4.726361879647811e-08, 0.0018666653195396066, 2.1081440593206935e-07, 1.561469815669625e-07, 0.022277383133769035, 1.7363625204325217e-07, 8.402668782991896e-08, 4.489910665483876e-08, 0.00017791650316212326, 3.672569803825354e-08, 2.3699155349277135e-07]], "pointer": [[0.0, 0.0, 0.20456087589263916, 0.0, 0.21074619889259338, 0.0, 0.0, 0.0, 0.0, 0.2523016929626465, 0.0, 0.0, 0.0, 0.01005859486758709, 0.0, 0.0, 0.0, 0.0, 0.12159876525402069, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.177934929728508, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.001644277828745544, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.000775246589910239, 0.0, 0.0, 0.017715828493237495, 0.0, 0.0, 0.0, 0.0026635765098035336, 0.0, 0.0]], "target": [0.0]}, "loss": [0.07411731779575348, 0.0], "acc": [1.0, 0.0, 0.0, 0.0]}}


Trace of simplified code(s):

{"result": {"time": "2021-02-11 16:15:54.930718", "n_pass": [1, 1, 1], "n_token": 55, "loss": [0.07411731779575348, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def make_node(", "self", ",", "x", ")", ":", "#NEWLINE#", "#INDENT#", "x", "=", "as_tensor_variable", "(", "x", ")", "#NEWLINE#", "assert", "(", "x", ".", "ndim", "==", "2", ")", ",", "'The input of qr function should be a matrix.'", "#NEWLINE#", "q", "=", "theano", ".", "tensor", ".", "matrix", "(", "dtype", "=", "x", ".", "dtype", ")", "#NEWLINE#", "return", "Apply", "(", "self", ",", "[", "x", "]", ",", "[", "q", "]", ")"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [4, 9, 13, 18, 37, 48, 2, 45, 27, 52]}}
{"prediction": {"error_location": 0.9285625219345093, "repair_targets": [], "repair_candidates": [0.20456087589263916, 0.21074619889259338, 0.2523016929626465, 0.01005859486758709, 0.12159876525402069, 0.177934929728508, 0.001644277828745544, 0.000775246589910239, 0.017715828493237495, 0.0026635765098035336], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 16:15:54.989232", "n_pass": [23, 2, 2], "n_token": 48, "loss": [0.21019646525382996, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def make_node(", "self", ",", "x", ")", ":", "#NEWLINE#", "#INDENT#", "x", "=", "as_tensor_variable", "(", "x", ")", "#NEWLINE#", "assert", "(", "x", ".", "q", "=", "theano", ".", "tensor", ".", "matrix", "(", "dtype", "=", "x", ".", "dtype", ")", "#NEWLINE#", "return", "Apply", "(", "self", ",", "[", "x", "]", ",", "[", "q", "]", ")"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [4, 9, 13, 18, 30, 41, 2, 38, 20, 45]}}
{"prediction": {"error_location": 0.8104251623153687, "repair_targets": [], "repair_candidates": [0.6162155270576477, 0.09368070214986801, 0.13070712983608246, 0.001961334841325879, 0.006186367478221655, 0.010701737366616726, 0.0005363438976928592, 0.11111753433942795, 0.0045547704212367535, 0.024338534101843834], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 16:15:55.045429", "n_pass": [45, 3, 3], "n_token": 45, "loss": [0.18285581469535828, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def make_node(", "self", ",", "x", ")", ":", "#NEWLINE#", "#INDENT#", "x", "=", "as_tensor_variable", "(", "x", ")", "#NEWLINE#", "assert", "(", "x", ".", "q", "tensor", ".", "matrix", "(", "dtype", "=", "x", ".", "dtype", ")", "#NEWLINE#", "return", "Apply", "(", "self", ",", "[", "x", "]", ",", "[", "q", "]", ")"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [4, 9, 13, 18, 27, 38, 2, 35, 20, 42]}}
{"prediction": {"error_location": 0.8328883051872253, "repair_targets": [], "repair_candidates": [0.6302435398101807, 0.1115720272064209, 0.10662402212619781, 0.0021175993606448174, 0.003878520568832755, 0.023257814347743988, 0.0001532485766801983, 0.0929846242070198, 0.0037720240652561188, 0.02539665624499321], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 16:15:55.154724", "n_pass": [48, 5, 4], "n_token": 41, "loss": [0.17674586176872253, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def make_node(", "self", ",", "x", ")", ":", "#NEWLINE#", "#INDENT#", "x", "=", "as_tensor_variable", "(", "x", ")", "#NEWLINE#", "assert", "(", "x", ".", "q", "tensor", ".", "matrix", "(", "dtype", "=", "x", ".", "Apply", "(", "self", ",", "[", "x", "]", ",", "[", "q", "]", ")"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [4, 9, 13, 18, 27, 34, 2, 31, 20, 38]}}
{"prediction": {"error_location": 0.8379929065704346, "repair_targets": [], "repair_candidates": [0.6004413962364197, 0.0580756701529026, 0.06438827514648438, 0.0010717277182266116, 0.0005460142274387181, 0.01729310117661953, 0.0001731895754346624, 0.11660902947187424, 0.0014189881039783359, 0.1399827003479004], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 16:15:55.210464", "n_pass": [54, 6, 5], "n_token": 38, "loss": [0.44172027707099915, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def make_node(", "self", ",", "x", ")", "x", "=", "as_tensor_variable", "(", "x", ")", "#NEWLINE#", "assert", "(", "x", ".", "q", "tensor", ".", "matrix", "(", "dtype", "=", "x", ".", "Apply", "(", "self", ",", "[", "x", "]", ",", "[", "q", "]", ")"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [4, 6, 10, 15, 24, 31, 2, 28, 17, 35]}}
{"prediction": {"error_location": 0.6429294347763062, "repair_targets": [], "repair_candidates": [0.6247393488883972, 0.09060810506343842, 0.0278789009898901, 7.738565909676254e-05, 0.0025683019775897264, 0.023819703608751297, 0.005371348466724157, 0.11866644769906998, 0.0009658851195126772, 0.1053045243024826], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 16:15:55.265363", "n_pass": [57, 7, 6], "n_token": 35, "loss": [0.05944810435175896, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def make_node(", "self", ",", "x", ")", "x", "=", "as_tensor_variable", "(", "x", ")", "x", ".", "q", "tensor", ".", "matrix", "(", "dtype", "=", "x", ".", "Apply", "(", "self", ",", "[", "x", "]", ",", "[", "q", "]", ")"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [4, 6, 10, 12, 21, 28, 2, 25, 14, 32]}}
{"prediction": {"error_location": 0.942284107208252, "repair_targets": [], "repair_candidates": [0.18840564787387848, 0.3282870650291443, 0.17255929112434387, 0.019343873485922813, 0.004974836017936468, 0.027738166972994804, 0.001250267494469881, 0.02719365805387497, 0.0006553492275997996, 0.22959181666374207], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 16:15:55.323237", "n_pass": [59, 8, 7], "n_token": 31, "loss": [0.09921598434448242, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def make_node(", "self", ",", "x", ")", "x", "=", "as_tensor_variable", "(", "x", ")", "x", ".", "q", "dtype", "=", "x", ".", "Apply", "(", "self", ",", "[", "x", "]", ",", "[", "q", "]", ")"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [4, 6, 10, 12, 17, 24, 2, 21, 14, 28]}}
{"prediction": {"error_location": 0.9055472016334534, "repair_targets": [], "repair_candidates": [0.4134378135204315, 0.27721744775772095, 0.1470809429883957, 0.01721377857029438, 0.0013851667754352093, 0.02121421881020069, 0.004095261916518211, 0.056394509971141815, 0.00035953562473878264, 0.06160129979252815], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 16:15:55.378267", "n_pass": [87, 9, 8], "n_token": 29, "loss": [0.07176797837018967, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def make_node(", "self", ",", "x", ")", "x", "=", "as_tensor_variable", "(", "x", ")", "x", ".", "q", "x", ".", "Apply", "(", "self", ",", "[", "x", "]", ",", "[", "q", "]", ")"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [4, 6, 10, 12, 15, 22, 2, 19, 14, 26]}}
{"prediction": {"error_location": 0.9307467341423035, "repair_targets": [], "repair_candidates": [0.7397427558898926, 0.09572705626487732, 0.03998205438256264, 0.002549528842791915, 0.0007657548994757235, 0.009488388895988464, 0.02572460286319256, 0.039481934159994125, 0.00013341692101676017, 0.04640446603298187], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 16:15:55.488010", "n_pass": [91, 11, 9], "n_token": 27, "loss": [0.08823388814926147, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def make_node(", "self", ",", "x", ")", "x", "=", "as_tensor_variable", "(", "x", ")", "x", ".", "q", "x", ".", "Apply", "(", "self", ",", "[", "x", "[", "q", "]", ")"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [4, 6, 10, 12, 15, 22, 2, 19, 14, 24]}}
{"prediction": {"error_location": 0.9155465960502625, "repair_targets": [], "repair_candidates": [0.7868655920028687, 0.05018964409828186, 0.03214116767048836, 0.002525859512388706, 0.0010130201699212193, 0.008416504599153996, 0.02519083023071289, 0.048684012144804, 0.00013759333523921669, 0.04483585059642792], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 16:15:55.543294", "n_pass": [93, 12, 10], "n_token": 25, "loss": [0.0906633734703064, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def make_node(", "self", ",", "x", ")", "x", "=", "as_tensor_variable", "(", "x", ")", "x", ".", "q", "x", ".", "Apply", "(", "self", ",", "[", "x", "[", "q"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [4, 6, 10, 12, 15, 22, 2, 19, 14, 24]}}
{"prediction": {"error_location": 0.9133251309394836, "repair_targets": [], "repair_candidates": [0.43901526927948, 0.2573932409286499, 0.06917187571525574, 0.003919157665222883, 0.00342195900157094, 0.00714455870911479, 0.13821057975292206, 0.010735900141298771, 0.00013111223233863711, 0.07085636258125305], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 16:15:55.598081", "n_pass": [95, 13, 11], "n_token": 24, "loss": [0.2766975462436676, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "self", ",", "x", ")", "x", "=", "as_tensor_variable", "(", "x", ")", "x", ".", "q", "x", ".", "Apply", "(", "self", ",", "[", "x", "[", "q"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [3, 5, 9, 11, 14, 21, 1, 18, 13, 23]}}
{"prediction": {"error_location": 0.7582839131355286, "repair_targets": [], "repair_candidates": [0.037193361669778824, 0.795778214931488, 0.03137500584125519, 0.014903783798217773, 0.00811859779059887, 0.0020415543112903833, 0.08705466240644455, 0.0007468314724974334, 0.0003968882083427161, 0.022390997037291527], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 16:15:55.655241", "n_pass": [97, 14, 12], "n_token": 23, "loss": [0.14777028560638428, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "self", "x", ")", "x", "=", "as_tensor_variable", "(", "x", ")", "x", ".", "q", "x", ".", "Apply", "(", "self", ",", "[", "x", "[", "q"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [2, 4, 8, 10, 13, 20, 1, 17, 12, 22]}}
{"prediction": {"error_location": 0.862629234790802, "repair_targets": [], "repair_candidates": [0.05653809383511543, 0.028126349672675133, 0.7361301779747009, 0.05552319809794426, 0.006218785885721445, 0.003727657487615943, 0.08905274420976639, 0.0010437691817060113, 0.0008052773191593587, 0.022833913564682007], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 16:15:55.710284", "n_pass": [100, 15, 13], "n_token": 21, "loss": [0.07386380434036255, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "self", "x", ")", "x", "(", "x", ")", "x", ".", "q", "x", ".", "Apply", "(", "self", ",", "[", "x", "[", "q"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [2, 4, 6, 8, 11, 18, 1, 15, 10, 20]}}
{"prediction": {"error_location": 0.9287981986999512, "repair_targets": [], "repair_candidates": [0.07003411650657654, 0.05948290973901749, 0.6057038903236389, 0.1288367658853531, 0.022576596587896347, 0.0075477235950529575, 0.05742928013205528, 0.002040817402303219, 0.0014622518792748451, 0.044885676354169846], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 16:15:55.765160", "n_pass": [105, 16, 14], "n_token": 19, "loss": [0.11872334033250809, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "self", "x", ")", "x", "(", "x", ")", "x", ".", "q", "x", ".", "self", ",", "[", "x", "[", "q"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [2, 4, 6, 8, 11, 16, 1, 13, 10, 18]}}
{"prediction": {"error_location": 0.8880535364151001, "repair_targets": [], "repair_candidates": [0.180355966091156, 0.025072310119867325, 0.09903568029403687, 0.015497741289436817, 0.010825295001268387, 0.0011965979356318712, 0.008133141323924065, 0.581578254699707, 0.0009238632046617568, 0.07738103717565536], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 16:15:55.820467", "n_pass": [134, 17, 15], "n_token": 18, "loss": [0.06436768174171448, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "self", "x", ")", "x", "(", "x", ")", "x", ".", "q", "x", ".", "self", "[", "x", "[", "q"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [2, 4, 6, 8, 11, 15, 1, 13, 10, 17]}}
{"prediction": {"error_location": 0.9376600980758667, "repair_targets": [], "repair_candidates": [0.10525716096162796, 0.019302811473608017, 0.08498657494783401, 0.010040693916380405, 0.014158935286104679, 0.002786223776638508, 0.005149851553142071, 0.681350827217102, 0.0005532539798878133, 0.07641363888978958], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 16:15:55.875703", "n_pass": [135, 18, 16], "n_token": 17, "loss": [0.468912810087204, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "self", "x", ")", "x", "(", "x", ")", "x", ".", "q", "x", ".", "self", "x", "[", "q"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [2, 4, 6, 8, 11, 14, 1, 13, 10, 16]}}
{"prediction": {"error_location": 0.6256821155548096, "repair_targets": [], "repair_candidates": [0.014821470715105534, 0.015303708612918854, 0.04449986666440964, 0.03691108524799347, 0.006402121856808662, 6.295254570432007e-05, 0.0029705490451306105, 0.1415538787841797, 0.737255871295929, 0.00021844978618901223], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 16:15:55.930598", "n_pass": [137, 19, 17], "n_token": 16, "loss": [0.2632961869239807, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "self", "x", ")", "x", "(", "x", ")", "x", ".", "q", "x", ".", "self", "x", "q"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [2, 4, 6, 8, 11, 14, 1, 13, 10, 15]}}
{"prediction": {"error_location": 0.7685142755508423, "repair_targets": [], "repair_candidates": [0.2204352766275406, 0.011982853524386883, 0.04267143830657005, 0.0031172598246484995, 0.0020925267599523067, 0.36932405829429626, 0.0026734282728284597, 0.28982609510421753, 0.0006067377398721874, 0.057270269840955734], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 16:15:55.988186", "n_pass": [142, 20, 18], "n_token": 15, "loss": [0.05117056146264076, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "self", "x", "x", "(", "x", ")", "x", ".", "q", "x", ".", "self", "x", "q"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [2, 3, 5, 7, 10, 13, 1, 12, 9, 14]}}
{"prediction": {"error_location": 0.9501165151596069, "repair_targets": [], "repair_candidates": [0.18463671207427979, 0.07363345474004745, 0.28928813338279724, 0.009266701526939869, 0.005129652563482523, 0.27129262685775757, 0.0011629239888861775, 0.12053120136260986, 0.0007986560231074691, 0.04425991326570511], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 16:15:56.043004", "n_pass": [144, 21, 19], "n_token": 14, "loss": [0.03912908583879471, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "self", "x", "x", "x", ")", "x", ".", "q", "x", ".", "self", "x", "q"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [2, 3, 4, 6, 9, 12, 1, 11, 8, 13]}}
{"prediction": {"error_location": 0.9616266489028931, "repair_targets": [], "repair_candidates": [0.12038488686084747, 0.03456977754831314, 0.4138295352458954, 0.09228344261646271, 0.0012536855647340417, 0.07484517246484756, 0.002636289456859231, 0.23205889761447906, 0.001939089735969901, 0.02619914337992668], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 16:15:56.097758", "n_pass": [146, 22, 20], "n_token": 13, "loss": [0.0005208089714869857, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "self", "x", "x", "x", "x", ".", "q", "x", ".", "self", "x", "q"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [2, 3, 4, 5, 8, 11, 1, 10, 7, 12]}}
{"prediction": {"error_location": 0.9994794726371765, "repair_targets": [], "repair_candidates": [0.3284810781478882, 0.022004447877407074, 0.01369304396212101, 0.016417773440480232, 0.017627159133553505, 0.10665882378816605, 0.08989563584327698, 0.3152645528316498, 0.03621787205338478, 0.05373963341116905], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 16:15:56.152642", "n_pass": [148, 23, 21], "n_token": 12, "loss": [0.000947503256611526, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "self", "x", "x", "x", "x", "q", "x", ".", "self", "x", "q"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [2, 3, 4, 5, 7, 10, 1, 9, 6, 11]}}
{"prediction": {"error_location": 0.9990528225898743, "repair_targets": [], "repair_candidates": [0.3484547734260559, 0.11091746389865875, 0.02051440067589283, 0.03129012510180473, 0.03934381902217865, 0.04370081052184105, 0.058799415826797485, 0.08001002669334412, 0.24277912080287933, 0.024190112948417664], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 16:15:56.207230", "n_pass": [151, 24, 22], "n_token": 11, "loss": [0.0007210753974504769, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "self", "x", "x", "x", "x", "q", "x", "self", "x", "q"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [2, 3, 4, 5, 7, 9, 1, 8, 6, 10]}}
{"prediction": {"error_location": 0.9992793202400208, "repair_targets": [], "repair_candidates": [0.17425723373889923, 0.18475721776485443, 0.08144105225801468, 0.07377772778272629, 0.07625504583120346, 0.08394601941108704, 0.0852983146905899, 0.052406277507543564, 0.12478771060705185, 0.06307333707809448], "target_probs": 0.0}}




Minimal simplified tokens:

['#NEWLINE#', 'self', 'x', 'x', 'x', 'x', 'q', 'x', 'self', 'x', 'q']
