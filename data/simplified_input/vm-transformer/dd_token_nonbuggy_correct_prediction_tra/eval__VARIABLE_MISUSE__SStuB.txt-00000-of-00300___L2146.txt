
Original sample:

{"has_bug": false, "bug_kind": 0, "bug_kind_name": "NONE", "source_tokens": ["#NEWLINE#", "def _memberAccessChainOrNoneImpl(", "pyAstNode", ")", ":", "#NEWLINE#", "#INDENT#", "if", "isinstance", "(", "pyAstNode", ",", "ast", ".", "Name", ")", ":", "#NEWLINE#", "#INDENT#", "return", "[", "pyAstNode", ".", "id", "]", "#NEWLINE#", "#UNINDENT#", "if", "isinstance", "(", "pyAstNode", ",", "ast", ".", "Expr", ")", ":", "#NEWLINE#", "#INDENT#", "return", "_memberAccessChainOrNoneImpl", "(", "pyAstNode", ".", "value", ")", "#NEWLINE#", "#UNINDENT#", "if", "isinstance", "(", "pyAstNode", ",", "ast", ".", "Attribute", ")", ":", "#NEWLINE#", "#INDENT#", "prefix", "=", "_memberAccessChainOrNoneImpl", "(", "pyAstNode", ".", "value", ")", "#NEWLINE#", "if", "(", "len", "(", "prefix", ")", "==", "0", ")", ":", "#NEWLINE#", "#INDENT#", "return", "[", "]", "#NEWLINE#", "#UNINDENT#", "prefix", ".", "append", "(", "pyAstNode", ".", "attr", ")", "#NEWLINE#", "return", "prefix", "#NEWLINE#", "#UNINDENT#", "return", "[", "]"], "error_location": [0], "repair_targets": [], "repair_candidates": [60, 73, 86, 96, 2, 10, 21, 30, 42, 51, 64, 90], "provenances": [{"datasetProvenance": {"datasetName": "ETHPy150Open", "filepath": "ufora/ufora/packages/python/pyfora/pyAst/PyAstFreeVariableAnalyses.py", "license": "apache-2.0", "note": "license: github_api"}}], "txt_file": "eval__VARIABLE_MISUSE__SStuB.txt-00000-of-00300", "js_count": 2146, "results": {"model": "transformer", "prob": {"loc": [[0.8346239328384399, 3.670418891488225e-06, 2.504560370653053e-06, 1.0596406951890458e-07, 1.83634725203774e-07, 2.32778930353561e-07, 1.985492872336181e-07, 2.1217516632532352e-07, 1.2123795386287384e-05, 2.2676588287140476e-06, 0.0018171980045735836, 3.237921077925421e-07, 6.735846454830607e-06, 5.810304628539598e-07, 2.1146371409486164e-07, 8.109444138426625e-08, 1.3024296663388668e-07, 1.7655129624927213e-07, 1.422981910081944e-07, 6.105273797629707e-08, 6.024781100677501e-07, 0.0047510783188045025, 3.812879185716156e-07, 5.113713541504694e-08, 1.761530512567333e-07, 1.0959904983565139e-07, 1.182577022973419e-07, 2.5742949105733715e-07, 3.436594124650583e-05, 5.772039457951905e-06, 0.01813667081296444, 4.6674108489241917e-07, 1.1922612429771107e-05, 9.206182198795432e-07, 3.789209657156789e-08, 4.597747249590611e-08, 3.913019099854864e-07, 1.2806744109639112e-07, 1.514068799224333e-07, 1.1957753542901628e-07, 2.4604501049907412e-06, 4.1110794768428605e-07, 0.0022610381711274385, 1.4223096513887867e-06, 1.5730316249573661e-07, 2.9699177162001433e-07, 3.824839325261564e-07, 4.845916237172787e-07, 4.395700727855001e-07, 1.2493873327912297e-05, 5.0549137995403726e-06, 0.02950262650847435, 7.219334179353609e-07, 1.937051820277702e-05, 9.979141850635642e-07, 6.141561925687711e-08, 5.2107449022287256e-08, 4.033090590382926e-07, 2.1667337080089055e-07, 2.164338326338111e-07, 6.684934987788438e-07, 1.1126012822160192e-07, 0.0002874111814890057, 6.671127721347148e-07, 0.00364698376506567, 1.8912410268967506e-06, 1.8919560318408912e-07, 7.215741106847418e-07, 9.133502203440003e-07, 3.3179034630848037e-07, 9.10726498659642e-08, 1.6843365813201672e-07, 1.1872376717292354e-06, 0.02061387337744236, 2.1780809333904472e-07, 4.733231548925687e-07, 2.016979306063149e-05, 1.8109792563336669e-06, 2.54641895480745e-06, 1.3265932921058265e-06, 9.595335086487466e-07, 5.676158139067411e-07, 0.00039907582686282694, 3.1510719509242335e-06, 1.2747287883030367e-06, 8.236737016886764e-07, 1.00442957773339e-06, 9.482814107286686e-07, 5.709876660375812e-08, 7.070293577271514e-07, 0.07463114708662033, 2.983776312248665e-06, 3.3617041594879993e-07, 6.517050792353984e-07, 3.117381197625946e-07, 3.484982258328273e-08, 0.009023519232869148, 1.1109457318525529e-06, 1.2260758239790448e-06, 9.284264592679392e-07, 0.0001131318713305518, 1.018870716507081e-05]], "pointer": [[0.0, 0.0, 0.283822238445282, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0928269624710083, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.02979557402431965, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1401146948337555, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0484623908996582, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.02076740190386772, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.17253345251083374, 0.0, 0.0, 0.0, 0.0564526729285717, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.003982860129326582, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.011291680857539177, 0.0, 0.0, 0.0, 0.13949164748191833, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0004584451671689749, 0.0, 0.0, 0.0, 0.0, 0.0]], "target": [0.0]}, "loss": [0.18077415227890015, 0.0], "acc": [1.0, 0.0, 0.0, 0.0]}}


Trace of simplified code(s):

{"result": {"time": "2021-02-11 15:49:58.582443", "n_pass": [1, 1, 1], "n_token": 102, "loss": [0.18077415227890015, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def _memberAccessChainOrNoneImpl(", "pyAstNode", ")", ":", "#NEWLINE#", "#INDENT#", "if", "isinstance", "(", "pyAstNode", ",", "ast", ".", "Name", ")", ":", "#NEWLINE#", "#INDENT#", "return", "[", "pyAstNode", ".", "id", "]", "#NEWLINE#", "#UNINDENT#", "if", "isinstance", "(", "pyAstNode", ",", "ast", ".", "Expr", ")", ":", "#NEWLINE#", "#INDENT#", "return", "_memberAccessChainOrNoneImpl", "(", "pyAstNode", ".", "value", ")", "#NEWLINE#", "#UNINDENT#", "if", "isinstance", "(", "pyAstNode", ",", "ast", ".", "Attribute", ")", ":", "#NEWLINE#", "#INDENT#", "prefix", "=", "_memberAccessChainOrNoneImpl", "(", "pyAstNode", ".", "value", ")", "#NEWLINE#", "if", "(", "len", "(", "prefix", ")", "==", "0", ")", ":", "#NEWLINE#", "#INDENT#", "return", "[", "]", "#NEWLINE#", "#UNINDENT#", "prefix", ".", "append", "(", "pyAstNode", ".", "attr", ")", "#NEWLINE#", "return", "prefix", "#NEWLINE#", "#UNINDENT#", "return", "[", "]"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [60, 73, 86, 96, 2, 10, 21, 30, 42, 51, 64, 90]}}
{"prediction": {"error_location": 0.8346239328384399, "repair_targets": [], "repair_candidates": [0.283822238445282, 0.0928269624710083, 0.02979557402431965, 0.1401146948337555, 0.0484623908996582, 0.02076740190386772, 0.17253345251083374, 0.0564526729285717, 0.003982860129326582, 0.011291680857539177, 0.13949164748191833, 0.0004584451671689749], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 15:49:58.642861", "n_pass": [46, 2, 2], "n_token": 96, "loss": [0.22573362290859222, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def _memberAccessChainOrNoneImpl(", "pyAstNode", ")", ":", "#NEWLINE#", "#INDENT#", "if", "isinstance", "(", "pyAstNode", ",", "#INDENT#", "return", "[", "pyAstNode", ".", "id", "]", "#NEWLINE#", "#UNINDENT#", "if", "isinstance", "(", "pyAstNode", ",", "ast", ".", "Expr", ")", ":", "#NEWLINE#", "#INDENT#", "return", "_memberAccessChainOrNoneImpl", "(", "pyAstNode", ".", "value", ")", "#NEWLINE#", "#UNINDENT#", "if", "isinstance", "(", "pyAstNode", ",", "ast", ".", "Attribute", ")", ":", "#NEWLINE#", "#INDENT#", "prefix", "=", "_memberAccessChainOrNoneImpl", "(", "pyAstNode", ".", "value", ")", "#NEWLINE#", "if", "(", "len", "(", "prefix", ")", "==", "0", ")", ":", "#NEWLINE#", "#INDENT#", "return", "[", "]", "#NEWLINE#", "#UNINDENT#", "prefix", ".", "append", "(", "pyAstNode", ".", "attr", ")", "#NEWLINE#", "return", "prefix", "#NEWLINE#", "#UNINDENT#", "return", "[", "]"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [54, 67, 80, 90, 2, 10, 15, 24, 36, 45, 58, 84]}}
{"prediction": {"error_location": 0.7979305386543274, "repair_targets": [], "repair_candidates": [0.4111253321170807, 0.05781233683228493, 0.021300386637449265, 0.08803000301122665, 0.06297631561756134, 0.011551450937986374, 0.1669951230287552, 0.07091443240642548, 0.008475521579384804, 0.00593562051653862, 0.09451539069414139, 0.0003679984074551612], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 15:49:58.700069", "n_pass": [47, 3, 3], "n_token": 90, "loss": [0.2940943241119385, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def _memberAccessChainOrNoneImpl(", "pyAstNode", ")", ":", "#NEWLINE#", "#INDENT#", "if", "isinstance", "(", "pyAstNode", ",", "#INDENT#", "return", "[", "pyAstNode", ".", "id", "pyAstNode", ",", "ast", ".", "Expr", ")", ":", "#NEWLINE#", "#INDENT#", "return", "_memberAccessChainOrNoneImpl", "(", "pyAstNode", ".", "value", ")", "#NEWLINE#", "#UNINDENT#", "if", "isinstance", "(", "pyAstNode", ",", "ast", ".", "Attribute", ")", ":", "#NEWLINE#", "#INDENT#", "prefix", "=", "_memberAccessChainOrNoneImpl", "(", "pyAstNode", ".", "value", ")", "#NEWLINE#", "if", "(", "len", "(", "prefix", ")", "==", "0", ")", ":", "#NEWLINE#", "#INDENT#", "return", "[", "]", "#NEWLINE#", "#UNINDENT#", "prefix", ".", "append", "(", "pyAstNode", ".", "attr", ")", "#NEWLINE#", "return", "prefix", "#NEWLINE#", "#UNINDENT#", "return", "[", "]"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [48, 61, 74, 84, 2, 10, 15, 18, 30, 39, 52, 78]}}
{"prediction": {"error_location": 0.7452061772346497, "repair_targets": [], "repair_candidates": [0.2963557839393616, 0.02912685088813305, 0.023627333343029022, 0.09295257180929184, 0.08110808581113815, 0.035935092717409134, 0.17455880343914032, 0.13034950196743011, 0.005953008309006691, 0.009565371088683605, 0.12005864828824997, 0.00040891184471547604], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 15:49:58.758448", "n_pass": [49, 4, 4], "n_token": 84, "loss": [0.23562493920326233, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def _memberAccessChainOrNoneImpl(", "pyAstNode", ")", ":", "#NEWLINE#", "#INDENT#", "if", "isinstance", "(", "pyAstNode", ",", "#INDENT#", "return", "[", "pyAstNode", ".", "id", "pyAstNode", ",", "ast", ".", "Expr", ")", "pyAstNode", ".", "value", ")", "#NEWLINE#", "#UNINDENT#", "if", "isinstance", "(", "pyAstNode", ",", "ast", ".", "Attribute", ")", ":", "#NEWLINE#", "#INDENT#", "prefix", "=", "_memberAccessChainOrNoneImpl", "(", "pyAstNode", ".", "value", ")", "#NEWLINE#", "if", "(", "len", "(", "prefix", ")", "==", "0", ")", ":", "#NEWLINE#", "#INDENT#", "return", "[", "]", "#NEWLINE#", "#UNINDENT#", "prefix", ".", "append", "(", "pyAstNode", ".", "attr", ")", "#NEWLINE#", "return", "prefix", "#NEWLINE#", "#UNINDENT#", "return", "[", "]"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [42, 55, 68, 78, 2, 10, 15, 18, 24, 33, 46, 72]}}
{"prediction": {"error_location": 0.7900768518447876, "repair_targets": [], "repair_candidates": [0.23709805309772491, 0.029517559334635735, 0.015864171087741852, 0.17992962896823883, 0.1399756669998169, 0.04094991460442543, 0.22702942788600922, 0.029780860990285873, 0.004589826799929142, 0.07116156816482544, 0.023487957194447517, 0.0006153565482236445], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 15:49:58.815301", "n_pass": [52, 5, 5], "n_token": 78, "loss": [0.34859299659729004, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def _memberAccessChainOrNoneImpl(", "pyAstNode", ")", ":", "#NEWLINE#", "#INDENT#", "if", "isinstance", "(", "pyAstNode", ",", "#INDENT#", "return", "[", "pyAstNode", ".", "id", "pyAstNode", ",", "ast", ".", "Expr", ")", "pyAstNode", ".", "value", ")", "#NEWLINE#", "#UNINDENT#", "if", "isinstance", "(", "pyAstNode", ",", "ast", "prefix", "=", "_memberAccessChainOrNoneImpl", "(", "pyAstNode", ".", "value", ")", "#NEWLINE#", "if", "(", "len", "(", "prefix", ")", "==", "0", ")", ":", "#NEWLINE#", "#INDENT#", "return", "[", "]", "#NEWLINE#", "#UNINDENT#", "prefix", ".", "append", "(", "pyAstNode", ".", "attr", ")", "#NEWLINE#", "return", "prefix", "#NEWLINE#", "#UNINDENT#", "return", "[", "]"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [36, 49, 62, 72, 2, 10, 15, 18, 24, 33, 40, 66]}}
{"prediction": {"error_location": 0.7056804299354553, "repair_targets": [], "repair_candidates": [0.10221946984529495, 0.03393709287047386, 0.021643513813614845, 0.08686268329620361, 0.04513139650225639, 0.43504801392555237, 0.21199356019496918, 0.014396598562598228, 0.00453587481752038, 0.004494747146964073, 0.03928358107805252, 0.0004534311010502279], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 15:49:58.872045", "n_pass": [55, 6, 6], "n_token": 71, "loss": [0.4118046164512634, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def _memberAccessChainOrNoneImpl(", "pyAstNode", ")", ":", "#NEWLINE#", "#INDENT#", "if", "isinstance", "(", "pyAstNode", ",", "#INDENT#", "return", "[", "pyAstNode", ".", "id", "pyAstNode", ",", "ast", ".", "Expr", ")", "pyAstNode", ".", "value", ")", "#NEWLINE#", "#UNINDENT#", "if", "isinstance", "(", "pyAstNode", ",", "ast", "prefix", "=", "_memberAccessChainOrNoneImpl", "(", "pyAstNode", ".", "value", ")", "#NEWLINE#", "if", "(", "len", "(", "prefix", "return", "[", "]", "#NEWLINE#", "#UNINDENT#", "prefix", ".", "append", "(", "pyAstNode", ".", "attr", ")", "#NEWLINE#", "return", "prefix", "#NEWLINE#", "#UNINDENT#", "return", "[", "]"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [36, 49, 55, 65, 2, 10, 15, 18, 24, 33, 40, 59]}}
{"prediction": {"error_location": 0.6624537706375122, "repair_targets": [], "repair_candidates": [0.10484937578439713, 0.025198213756084442, 0.018288906663656235, 0.10523063689470291, 0.05030795559287071, 0.4645931124687195, 0.16988933086395264, 0.01539192721247673, 0.008059236221015453, 0.0008502614800818264, 0.0368933230638504, 0.0004477658658288419], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 15:49:58.930156", "n_pass": [90, 7, 7], "n_token": 67, "loss": [1.213003396987915, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def _memberAccessChainOrNoneImpl(", "pyAstNode", ")", ":", "#NEWLINE#", "#INDENT#", "if", "isinstance", "(", "pyAstNode", ",", "#INDENT#", "return", "[", "pyAstNode", ".", "id", "pyAstNode", ",", "ast", ".", "Expr", ")", "pyAstNode", ".", "value", ")", "#NEWLINE#", "#UNINDENT#", "if", "isinstance", "(", "pyAstNode", ",", "ast", "prefix", "=", "_memberAccessChainOrNoneImpl", "(", "pyAstNode", ".", "value", ")", "#NEWLINE#", "if", "(", "len", "(", "prefix", "return", "prefix", ".", "append", "(", "pyAstNode", ".", "attr", ")", "#NEWLINE#", "return", "prefix", "#NEWLINE#", "#UNINDENT#", "return", "[", "]"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [36, 49, 51, 61, 2, 10, 15, 18, 24, 33, 40, 55]}}
{"prediction": {"error_location": 0.2973030209541321, "repair_targets": [], "repair_candidates": [0.09629034250974655, 0.039031483232975006, 0.03368527442216873, 0.07502534985542297, 0.03504767641425133, 0.29558229446411133, 0.17426951229572296, 0.013804689049720764, 0.1521083563566208, 0.038657426834106445, 0.039867013692855835, 0.0066306255757808685], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 15:49:58.988713", "n_pass": [94, 8, 8], "n_token": 63, "loss": [1.3502099514007568, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def _memberAccessChainOrNoneImpl(", "pyAstNode", ")", ":", "#NEWLINE#", "#INDENT#", "if", "isinstance", "(", "pyAstNode", ",", "#INDENT#", "return", "[", "pyAstNode", ".", "id", "pyAstNode", ",", "ast", ".", "Expr", ")", "pyAstNode", ".", "value", ")", "#NEWLINE#", "#UNINDENT#", "if", "isinstance", "(", "pyAstNode", ",", "ast", "prefix", "=", "_memberAccessChainOrNoneImpl", "(", "pyAstNode", ".", "value", ")", "#NEWLINE#", "if", "(", "len", "(", "prefix", "return", "prefix", ".", "append", "(", "pyAstNode", ".", "attr", ")", "#NEWLINE#", "return", "prefix", "#NEWLINE#"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [36, 49, 51, 61, 2, 10, 15, 18, 24, 33, 40, 55]}}
{"prediction": {"error_location": 0.2591858208179474, "repair_targets": [], "repair_candidates": [0.10680728405714035, 0.041741058230400085, 0.038482651114463806, 0.08951503783464432, 0.041588615626096725, 0.34291860461235046, 0.12657073140144348, 0.016256725415587425, 0.1134052500128746, 0.02863055281341076, 0.04652117192745209, 0.007562339771538973], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 15:49:59.045599", "n_pass": [96, 9, 9], "n_token": 60, "loss": [1.0367521047592163, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def _memberAccessChainOrNoneImpl(", "pyAstNode", "#INDENT#", "if", "isinstance", "(", "pyAstNode", ",", "#INDENT#", "return", "[", "pyAstNode", ".", "id", "pyAstNode", ",", "ast", ".", "Expr", ")", "pyAstNode", ".", "value", ")", "#NEWLINE#", "#UNINDENT#", "if", "isinstance", "(", "pyAstNode", ",", "ast", "prefix", "=", "_memberAccessChainOrNoneImpl", "(", "pyAstNode", ".", "value", ")", "#NEWLINE#", "if", "(", "len", "(", "prefix", "return", "prefix", ".", "append", "(", "pyAstNode", ".", "attr", ")", "#NEWLINE#", "return", "prefix", "#NEWLINE#"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [33, 46, 48, 58, 2, 7, 12, 15, 21, 30, 37, 52]}}
{"prediction": {"error_location": 0.3546045124530792, "repair_targets": [], "repair_candidates": [0.11822113394737244, 0.08808160573244095, 0.02341766096651554, 0.08350406587123871, 0.01168073806911707, 0.2845045030117035, 0.1895197033882141, 0.005244792904704809, 0.1049628034234047, 0.05275783687829971, 0.021667039021849632, 0.016438128426671028], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 15:49:59.102294", "n_pass": [97, 10, 10], "n_token": 57, "loss": [1.058807611465454, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def _memberAccessChainOrNoneImpl(", "pyAstNode", "(", "pyAstNode", ",", "#INDENT#", "return", "[", "pyAstNode", ".", "id", "pyAstNode", ",", "ast", ".", "Expr", ")", "pyAstNode", ".", "value", ")", "#NEWLINE#", "#UNINDENT#", "if", "isinstance", "(", "pyAstNode", ",", "ast", "prefix", "=", "_memberAccessChainOrNoneImpl", "(", "pyAstNode", ".", "value", ")", "#NEWLINE#", "if", "(", "len", "(", "prefix", "return", "prefix", ".", "append", "(", "pyAstNode", ".", "attr", ")", "#NEWLINE#", "return", "prefix", "#NEWLINE#"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [30, 43, 45, 55, 2, 4, 9, 12, 18, 27, 34, 49]}}
{"prediction": {"error_location": 0.3468691408634186, "repair_targets": [], "repair_candidates": [0.13757361471652985, 0.17711536586284637, 0.02727729082107544, 0.15542128682136536, 0.015601451508700848, 0.21682435274124146, 0.15001541376113892, 0.009338383562862873, 0.06242852658033371, 0.024867208674550056, 0.009956530295312405, 0.013580563478171825], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 15:49:59.158953", "n_pass": [99, 11, 11], "n_token": 54, "loss": [0.8091822862625122, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def _memberAccessChainOrNoneImpl(", "pyAstNode", "(", "pyAstNode", ",", "pyAstNode", ".", "id", "pyAstNode", ",", "ast", ".", "Expr", ")", "pyAstNode", ".", "value", ")", "#NEWLINE#", "#UNINDENT#", "if", "isinstance", "(", "pyAstNode", ",", "ast", "prefix", "=", "_memberAccessChainOrNoneImpl", "(", "pyAstNode", ".", "value", ")", "#NEWLINE#", "if", "(", "len", "(", "prefix", "return", "prefix", ".", "append", "(", "pyAstNode", ".", "attr", ")", "#NEWLINE#", "return", "prefix", "#NEWLINE#"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [27, 40, 42, 52, 2, 4, 6, 9, 15, 24, 31, 46]}}
{"prediction": {"error_location": 0.44522202014923096, "repair_targets": [], "repair_candidates": [0.12418676167726517, 0.1751173585653305, 0.022260064259171486, 0.25500547885894775, 0.01941012218594551, 0.11018833518028259, 0.11348678171634674, 0.013173297978937626, 0.11315302550792694, 0.0317612923681736, 0.005740131251513958, 0.016517305746674538], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 15:49:59.215536", "n_pass": [102, 12, 12], "n_token": 51, "loss": [0.8467740416526794, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def _memberAccessChainOrNoneImpl(", "pyAstNode", "(", "pyAstNode", ",", "pyAstNode", ".", "id", "pyAstNode", ",", "ast", "pyAstNode", ".", "value", ")", "#NEWLINE#", "#UNINDENT#", "if", "isinstance", "(", "pyAstNode", ",", "ast", "prefix", "=", "_memberAccessChainOrNoneImpl", "(", "pyAstNode", ".", "value", ")", "#NEWLINE#", "if", "(", "len", "(", "prefix", "return", "prefix", ".", "append", "(", "pyAstNode", ".", "attr", ")", "#NEWLINE#", "return", "prefix", "#NEWLINE#"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [24, 37, 39, 49, 2, 4, 6, 9, 12, 21, 28, 43]}}
{"prediction": {"error_location": 0.4287959039211273, "repair_targets": [], "repair_candidates": [0.11817624419927597, 0.2019028514623642, 0.014831863343715668, 0.29737237095832825, 0.015846511349081993, 0.07663439214229584, 0.0824786126613617, 0.011485060676932335, 0.04932825639843941, 0.07380153983831406, 0.0054369536228477955, 0.05270526930689812], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 15:49:59.273774", "n_pass": [104, 13, 13], "n_token": 48, "loss": [0.7939537167549133, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def _memberAccessChainOrNoneImpl(", "pyAstNode", "(", "pyAstNode", ",", "pyAstNode", ".", "id", "pyAstNode", ",", "ast", "pyAstNode", ".", "value", "if", "isinstance", "(", "pyAstNode", ",", "ast", "prefix", "=", "_memberAccessChainOrNoneImpl", "(", "pyAstNode", ".", "value", ")", "#NEWLINE#", "if", "(", "len", "(", "prefix", "return", "prefix", ".", "append", "(", "pyAstNode", ".", "attr", ")", "#NEWLINE#", "return", "prefix", "#NEWLINE#"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [21, 34, 36, 46, 2, 4, 6, 9, 12, 18, 25, 40]}}
{"prediction": {"error_location": 0.452053964138031, "repair_targets": [], "repair_candidates": [0.07831957936286926, 0.2087891399860382, 0.011053035035729408, 0.31588396430015564, 0.00531885027885437, 0.01650344394147396, 0.0911654606461525, 0.009210756979882717, 0.0471847839653492, 0.14982455968856812, 0.0072459750808775425, 0.05950040742754936], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 15:49:59.442456", "n_pass": [110, 16, 14], "n_token": 45, "loss": [0.21372154355049133, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def _memberAccessChainOrNoneImpl(", "pyAstNode", "(", "pyAstNode", ",", "pyAstNode", ".", "id", "pyAstNode", ",", "ast", "pyAstNode", ".", "value", "if", "isinstance", "(", "pyAstNode", ",", "ast", "prefix", "=", "_memberAccessChainOrNoneImpl", "(", "pyAstNode", ".", "value", ")", "#NEWLINE#", "(", "prefix", "return", "prefix", ".", "append", "(", "pyAstNode", ".", "attr", ")", "#NEWLINE#", "return", "prefix", "#NEWLINE#"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [21, 31, 33, 43, 2, 4, 6, 9, 12, 18, 25, 37]}}
{"prediction": {"error_location": 0.8075732588768005, "repair_targets": [], "repair_candidates": [0.034715961664915085, 0.07148993760347366, 0.007001183927059174, 0.05256879702210426, 0.0054750326089560986, 0.012273801490664482, 0.04463590309023857, 0.00817080121487379, 0.20522235333919525, 0.55376797914505, 0.001241976977325976, 0.003436230355873704], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 15:49:59.499295", "n_pass": [120, 17, 15], "n_token": 42, "loss": [0.5687829852104187, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def _memberAccessChainOrNoneImpl(", "pyAstNode", "(", "pyAstNode", ",", "pyAstNode", ".", "id", "pyAstNode", ",", "ast", "pyAstNode", ".", "value", "pyAstNode", ",", "ast", "prefix", "=", "_memberAccessChainOrNoneImpl", "(", "pyAstNode", ".", "value", ")", "#NEWLINE#", "(", "prefix", "return", "prefix", ".", "append", "(", "pyAstNode", ".", "attr", ")", "#NEWLINE#", "return", "prefix", "#NEWLINE#"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [18, 28, 30, 40, 2, 4, 6, 9, 12, 15, 22, 34]}}
{"prediction": {"error_location": 0.5662140846252441, "repair_targets": [], "repair_candidates": [0.031228622421622276, 0.060333605855703354, 0.011741599068045616, 0.12276390939950943, 0.002699761651456356, 0.15716537833213806, 0.2093341201543808, 0.007179508451372385, 0.17182821035385132, 0.21949568390846252, 0.00240528117865324, 0.0038242863956838846], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 15:49:59.614988", "n_pass": [160, 19, 16], "n_token": 40, "loss": [0.7487162351608276, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def _memberAccessChainOrNoneImpl(", "pyAstNode", "(", "pyAstNode", ",", "pyAstNode", ".", "id", "pyAstNode", "pyAstNode", ".", "value", "pyAstNode", ",", "ast", "prefix", "=", "_memberAccessChainOrNoneImpl", "(", "pyAstNode", ".", "value", ")", "#NEWLINE#", "(", "prefix", "return", "prefix", ".", "append", "(", "pyAstNode", ".", "attr", ")", "#NEWLINE#", "return", "prefix", "#NEWLINE#"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [16, 26, 28, 38, 2, 4, 6, 9, 10, 13, 20, 32]}}
{"prediction": {"error_location": 0.4729733467102051, "repair_targets": [], "repair_candidates": [0.09498775005340576, 0.35642945766448975, 0.01284362655133009, 0.0342550091445446, 0.047792065888643265, 0.15777212381362915, 0.08189857006072998, 0.006968532223254442, 0.08234184235334396, 0.11056847125291824, 0.009239587001502514, 0.004902943037450314], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 15:50:00.066399", "n_pass": [177, 27, 17], "n_token": 39, "loss": [0.8497466444969177, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "pyAstNode", "(", "pyAstNode", ",", "pyAstNode", ".", "id", "pyAstNode", "pyAstNode", ".", "value", "pyAstNode", ",", "ast", "prefix", "=", "_memberAccessChainOrNoneImpl", "(", "pyAstNode", ".", "value", ")", "#NEWLINE#", "(", "prefix", "return", "prefix", ".", "append", "(", "pyAstNode", ".", "attr", ")", "#NEWLINE#", "return", "prefix", "#NEWLINE#"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [15, 25, 27, 37, 1, 3, 5, 8, 9, 12, 19, 31]}}
{"prediction": {"error_location": 0.42752325534820557, "repair_targets": [], "repair_candidates": [0.6331971883773804, 0.18007712066173553, 0.07103279232978821, 0.029253842309117317, 0.016319938004016876, 0.010925516486167908, 0.01373256929218769, 0.01635364629328251, 0.009995192289352417, 0.009235466830432415, 0.009167585521936417, 0.0007090914295986295], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 15:50:00.349247", "n_pass": [188, 32, 18], "n_token": 37, "loss": [0.7275733351707458, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "pyAstNode", "(", "pyAstNode", ",", "pyAstNode", ".", "id", "pyAstNode", "pyAstNode", ".", "value", "pyAstNode", "prefix", "=", "_memberAccessChainOrNoneImpl", "(", "pyAstNode", ".", "value", ")", "#NEWLINE#", "(", "prefix", "return", "prefix", ".", "append", "(", "pyAstNode", ".", "attr", ")", "#NEWLINE#", "return", "prefix", "#NEWLINE#"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [13, 23, 25, 35, 1, 3, 5, 8, 9, 12, 17, 29]}}
{"prediction": {"error_location": 0.4830799400806427, "repair_targets": [], "repair_candidates": [0.4236670732498169, 0.27512967586517334, 0.07422836124897003, 0.016065051779150963, 0.010586217977106571, 0.05137765407562256, 0.002838721266016364, 0.12323906272649765, 0.004685118794441223, 0.002644613152369857, 0.01522020809352398, 0.0003181701176799834], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 15:50:00.405429", "n_pass": [190, 33, 19], "n_token": 35, "loss": [0.574969470500946, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "pyAstNode", "(", "pyAstNode", ",", "pyAstNode", ".", "id", "pyAstNode", "pyAstNode", ".", "value", "pyAstNode", "prefix", "=", "pyAstNode", ".", "value", ")", "#NEWLINE#", "(", "prefix", "return", "prefix", ".", "append", "(", "pyAstNode", ".", "attr", ")", "#NEWLINE#", "return", "prefix", "#NEWLINE#"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [13, 21, 23, 33, 1, 3, 5, 8, 9, 12, 15, 27]}}
{"prediction": {"error_location": 0.5627220273017883, "repair_targets": [], "repair_candidates": [0.5189374089241028, 0.16958008706569672, 0.05411524325609207, 0.01581057719886303, 0.011231007985770702, 0.035278357565402985, 0.005389982368797064, 0.16918790340423584, 0.007600843440741301, 0.0039204745553433895, 0.008535042405128479, 0.0004130904853809625], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 15:50:00.461172", "n_pass": [192, 34, 20], "n_token": 33, "loss": [0.5023853182792664, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "pyAstNode", "(", "pyAstNode", ",", "pyAstNode", ".", "id", "pyAstNode", "pyAstNode", ".", "value", "pyAstNode", "prefix", "=", "pyAstNode", ".", "#NEWLINE#", "(", "prefix", "return", "prefix", ".", "append", "(", "pyAstNode", ".", "attr", ")", "#NEWLINE#", "return", "prefix", "#NEWLINE#"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [13, 19, 21, 31, 1, 3, 5, 8, 9, 12, 15, 25]}}
{"prediction": {"error_location": 0.6050856113433838, "repair_targets": [], "repair_candidates": [0.5017752051353455, 0.14173604547977448, 0.04921166971325874, 0.024578100070357323, 0.019816091284155846, 0.033807527273893356, 0.007860061712563038, 0.19938857853412628, 0.010959247127175331, 0.0036583475302904844, 0.0068333507515490055, 0.0003757643571589142], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 15:50:00.517091", "n_pass": [193, 35, 21], "n_token": 31, "loss": [0.5652710199356079, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "pyAstNode", "(", "pyAstNode", ",", "pyAstNode", ".", "id", "pyAstNode", "pyAstNode", ".", "value", "pyAstNode", "prefix", "=", "pyAstNode", ".", "prefix", "return", "prefix", ".", "append", "(", "pyAstNode", ".", "attr", ")", "#NEWLINE#", "return", "prefix", "#NEWLINE#"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [13, 17, 19, 29, 1, 3, 5, 8, 9, 12, 15, 23]}}
{"prediction": {"error_location": 0.5682061314582825, "repair_targets": [], "repair_candidates": [0.7308753132820129, 0.09904685616493225, 0.03784548118710518, 0.038646843284368515, 0.020438319072127342, 0.028236091136932373, 0.0008996964897960424, 0.031214579939842224, 0.00324378814548254, 0.0008739421609789133, 0.00827775988727808, 0.000401385739678517], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 15:50:00.632354", "n_pass": [198, 37, 22], "n_token": 29, "loss": [0.38823142647743225, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "pyAstNode", "(", "pyAstNode", ",", "pyAstNode", ".", "id", "pyAstNode", "pyAstNode", ".", "value", "pyAstNode", "prefix", "=", "pyAstNode", ".", "prefix", "return", "prefix", ".", "append", "(", "pyAstNode", ".", "#NEWLINE#", "return", "prefix", "#NEWLINE#"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [13, 17, 19, 27, 1, 3, 5, 8, 9, 12, 15, 23]}}
{"prediction": {"error_location": 0.6782554388046265, "repair_targets": [], "repair_candidates": [0.8615649938583374, 0.060856953263282776, 0.011600591242313385, 0.02123900130391121, 0.010550910606980324, 0.018009137362241745, 0.0008843615069054067, 0.003326260019093752, 0.00397920748218894, 0.004515657667070627, 0.0028803765308111906, 0.0005925038713030517], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 15:50:00.688638", "n_pass": [199, 38, 23], "n_token": 27, "loss": [0.2258162796497345, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "pyAstNode", "(", "pyAstNode", ",", "pyAstNode", ".", "id", "pyAstNode", "pyAstNode", ".", "value", "pyAstNode", "prefix", "=", "pyAstNode", ".", "prefix", "return", "prefix", ".", "append", "(", "pyAstNode", ".", "prefix", "#NEWLINE#"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [13, 17, 19, 25, 1, 3, 5, 8, 9, 12, 15, 23]}}
{"prediction": {"error_location": 0.7978648543357849, "repair_targets": [], "repair_candidates": [0.4774833917617798, 0.006381190847605467, 0.0009748665615916252, 0.0012581251794472337, 0.00048058832180686295, 0.003359729889780283, 0.019680259749293327, 0.002061324892565608, 0.010677891783416271, 0.4736252725124359, 0.0008053207420744002, 0.00321205984801054], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 15:50:00.744941", "n_pass": [203, 39, 24], "n_token": 26, "loss": [0.14344905316829681, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "pyAstNode", "pyAstNode", ",", "pyAstNode", ".", "id", "pyAstNode", "pyAstNode", ".", "value", "pyAstNode", "prefix", "=", "pyAstNode", ".", "prefix", "return", "prefix", ".", "append", "(", "pyAstNode", ".", "prefix", "#NEWLINE#"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [12, 16, 18, 24, 1, 2, 4, 7, 8, 11, 14, 22]}}
{"prediction": {"error_location": 0.8663648366928101, "repair_targets": [], "repair_candidates": [0.36168262362480164, 0.014141901396214962, 0.001996587496250868, 0.0010160929523408413, 0.0005610018270090222, 0.0038715640548616648, 0.06813108175992966, 0.0015833729412406683, 0.01235173549503088, 0.5304144024848938, 0.0010165387066081166, 0.0032330856192857027], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 15:50:00.801152", "n_pass": [205, 40, 25], "n_token": 25, "loss": [0.12609568238258362, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "pyAstNode", "pyAstNode", "pyAstNode", ".", "id", "pyAstNode", "pyAstNode", ".", "value", "pyAstNode", "prefix", "=", "pyAstNode", ".", "prefix", "return", "prefix", ".", "append", "(", "pyAstNode", ".", "prefix", "#NEWLINE#"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [11, 15, 17, 23, 1, 2, 3, 6, 7, 10, 13, 21]}}
{"prediction": {"error_location": 0.8815307021141052, "repair_targets": [], "repair_candidates": [0.8898031115531921, 0.006334337405860424, 0.0078438026830554, 0.0049005234614014626, 0.002970515051856637, 0.0033456420060247183, 0.010771197266876698, 0.0010286426404491067, 0.03131524473428726, 0.026936588808894157, 0.0011788664851337671, 0.013571524992585182], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 15:50:00.857183", "n_pass": [207, 41, 26], "n_token": 24, "loss": [0.14167562127113342, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "pyAstNode", "pyAstNode", "pyAstNode", "id", "pyAstNode", "pyAstNode", ".", "value", "pyAstNode", "prefix", "=", "pyAstNode", ".", "prefix", "return", "prefix", ".", "append", "(", "pyAstNode", ".", "prefix", "#NEWLINE#"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [10, 14, 16, 22, 1, 2, 3, 5, 6, 9, 12, 20]}}
{"prediction": {"error_location": 0.8679025769233704, "repair_targets": [], "repair_candidates": [0.8628405332565308, 0.016541356220841408, 0.02852586656808853, 0.022361187264323235, 0.012969771400094032, 0.006241323426365852, 0.011168695986270905, 0.0007289783097803593, 0.022132225334644318, 0.0076304273679852486, 0.0003780256083700806, 0.008481677621603012], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 15:50:00.915549", "n_pass": [208, 42, 27], "n_token": 23, "loss": [0.27513012290000916, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "pyAstNode", "pyAstNode", "pyAstNode", "pyAstNode", "pyAstNode", ".", "value", "pyAstNode", "prefix", "=", "pyAstNode", ".", "prefix", "return", "prefix", ".", "append", "(", "pyAstNode", ".", "prefix", "#NEWLINE#"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [9, 13, 15, 21, 1, 2, 3, 4, 5, 8, 11, 19]}}
{"prediction": {"error_location": 0.7594732046127319, "repair_targets": [], "repair_candidates": [0.7021690607070923, 0.014042844995856285, 0.032961416989564896, 0.05676493048667908, 0.0586748830974102, 0.009241696447134018, 0.02362987957894802, 0.005149860866367817, 0.04937788099050522, 0.01783590205013752, 0.0021365731954574585, 0.02801506593823433], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 15:50:00.972242", "n_pass": [216, 43, 28], "n_token": 21, "loss": [0.423831045627594, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "pyAstNode", "pyAstNode", "pyAstNode", "pyAstNode", "pyAstNode", ".", "value", "pyAstNode", "prefix", "=", "pyAstNode", ".", "prefix", "return", "prefix", ".", "pyAstNode", ".", "prefix", "#NEWLINE#"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [9, 13, 15, 19, 1, 2, 3, 4, 5, 8, 11, 17]}}
{"prediction": {"error_location": 0.6545343995094299, "repair_targets": [], "repair_candidates": [0.11942517757415771, 0.04336095601320267, 0.06554277241230011, 0.14426274597644806, 0.1979183405637741, 0.013722595758736134, 0.0007884206133894622, 0.39699122309684753, 0.002145057311281562, 0.0035462237428873777, 0.009418975561857224, 0.002877516206353903], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 15:50:01.028964", "n_pass": [247, 44, 29], "n_token": 20, "loss": [0.4159719944000244, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "pyAstNode", "pyAstNode", "pyAstNode", "pyAstNode", "pyAstNode", ".", "value", "pyAstNode", "prefix", "=", "pyAstNode", ".", "prefix", "return", "prefix", ".", "pyAstNode", "prefix", "#NEWLINE#"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [9, 13, 15, 18, 1, 2, 3, 4, 5, 8, 11, 17]}}
{"prediction": {"error_location": 0.6596986651420593, "repair_targets": [], "repair_candidates": [0.12598365545272827, 0.05769217014312744, 0.09059908241033554, 0.16085009276866913, 0.2154449224472046, 0.016715504229068756, 0.0005865952698513865, 0.31898215413093567, 0.0009313466143794358, 0.0027879353147000074, 0.007274205330759287, 0.002152316505089402], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 15:50:01.085207", "n_pass": [249, 45, 30], "n_token": 19, "loss": [0.2508578598499298, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "pyAstNode", "pyAstNode", "pyAstNode", "pyAstNode", "pyAstNode", ".", "value", "pyAstNode", "prefix", "=", "pyAstNode", ".", "prefix", "return", "prefix", ".", "pyAstNode", "prefix"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [9, 13, 15, 18, 1, 2, 3, 4, 5, 8, 11, 17]}}
{"prediction": {"error_location": 0.778132975101471, "repair_targets": [], "repair_candidates": [0.3307299315929413, 0.054482441395521164, 0.08711069822311401, 0.1454727053642273, 0.19230012595653534, 0.01905638724565506, 0.0012396164238452911, 0.1383279412984848, 0.004351033363491297, 0.005688921548426151, 0.01658814027905464, 0.004652049392461777], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 15:50:01.141177", "n_pass": [256, 46, 31], "n_token": 18, "loss": [0.334511935710907, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "pyAstNode", "pyAstNode", "pyAstNode", "pyAstNode", "pyAstNode", "value", "pyAstNode", "prefix", "=", "pyAstNode", ".", "prefix", "return", "prefix", ".", "pyAstNode", "prefix"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [8, 12, 14, 17, 1, 2, 3, 4, 5, 7, 10, 16]}}
{"prediction": {"error_location": 0.7156872153282166, "repair_targets": [], "repair_candidates": [0.1012750118970871, 0.06680260598659515, 0.08777202665805817, 0.10537339001893997, 0.10830514132976532, 0.045420993119478226, 0.00022411873214878142, 0.46766990423202515, 0.00145621073897928, 0.0008969649206846952, 0.013097778894007206, 0.0017057412769645452], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 15:50:01.197111", "n_pass": [257, 47, 32], "n_token": 17, "loss": [0.4729645848274231, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "pyAstNode", "pyAstNode", "pyAstNode", "pyAstNode", "pyAstNode", "pyAstNode", "prefix", "=", "pyAstNode", ".", "prefix", "return", "prefix", ".", "pyAstNode", "prefix"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [7, 11, 13, 16, 1, 2, 3, 4, 5, 6, 9, 15]}}
{"prediction": {"error_location": 0.6231521368026733, "repair_targets": [], "repair_candidates": [0.23416827619075775, 0.04384616017341614, 0.058314770460128784, 0.12777358293533325, 0.11701001971960068, 0.11498790234327316, 0.0075832814909517765, 0.26834073662757874, 0.0029833598528057337, 0.0020992120262235403, 0.019279271364212036, 0.003613406093791127], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 15:50:01.255265", "n_pass": [260, 48, 33], "n_token": 16, "loss": [0.005903901532292366, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "pyAstNode", "pyAstNode", "pyAstNode", "pyAstNode", "pyAstNode", "pyAstNode", "prefix", "pyAstNode", ".", "prefix", "return", "prefix", ".", "pyAstNode", "prefix"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [7, 10, 12, 15, 1, 2, 3, 4, 5, 6, 8, 14]}}
{"prediction": {"error_location": 0.9941135048866272, "repair_targets": [], "repair_candidates": [0.6282503008842468, 0.04625425115227699, 0.060803044587373734, 0.06764265149831772, 0.06441117078065872, 0.04905911535024643, 0.008816761896014214, 0.022008147090673447, 0.006723450031131506, 0.008423859253525734, 0.02523138001561165, 0.012375799007713795], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 15:50:01.310580", "n_pass": [262, 49, 34], "n_token": 15, "loss": [0.23122012615203857, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "pyAstNode", "pyAstNode", "pyAstNode", "pyAstNode", "pyAstNode", "pyAstNode", "prefix", "pyAstNode", "prefix", "return", "prefix", ".", "pyAstNode", "prefix"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [7, 9, 11, 14, 1, 2, 3, 4, 5, 6, 8, 13]}}
{"prediction": {"error_location": 0.7935646176338196, "repair_targets": [], "repair_candidates": [0.038868047297000885, 0.06125955656170845, 0.06174992397427559, 0.06561832129955292, 0.04653662070631981, 0.1374635547399521, 0.008870957419276237, 0.5467660427093506, 0.0034857841674238443, 3.413299418753013e-05, 0.026868809014558792, 0.002478209091350436], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 15:50:01.366232", "n_pass": [264, 50, 35], "n_token": 14, "loss": [0.0037043539341539145, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "pyAstNode", "pyAstNode", "pyAstNode", "pyAstNode", "pyAstNode", "pyAstNode", "prefix", "pyAstNode", "prefix", "prefix", ".", "pyAstNode", "prefix"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [7, 9, 10, 13, 1, 2, 3, 4, 5, 6, 8, 12]}}
{"prediction": {"error_location": 0.9963024854660034, "repair_targets": [], "repair_candidates": [0.4760828912258148, 0.020941488444805145, 0.024943046271800995, 0.058030176907777786, 0.07519681751728058, 0.07007152587175369, 0.1190309077501297, 0.024203313514590263, 0.06663317233324051, 0.04529716074466705, 0.005037460941821337, 0.014532088302075863], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 15:50:01.422207", "n_pass": [266, 51, 36], "n_token": 13, "loss": [0.0024729168508201838, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "pyAstNode", "pyAstNode", "pyAstNode", "pyAstNode", "pyAstNode", "pyAstNode", "prefix", "pyAstNode", "prefix", "prefix", "pyAstNode", "prefix"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [7, 9, 10, 12, 1, 2, 3, 4, 5, 6, 8, 11]}}
{"prediction": {"error_location": 0.9975300431251526, "repair_targets": [], "repair_candidates": [0.15682023763656616, 0.05959469452500343, 0.05427980422973633, 0.07142819464206696, 0.06990230828523636, 0.06614134460687637, 0.09043101966381073, 0.0594283752143383, 0.11327262222766876, 0.1148378774523735, 0.04859468340873718, 0.09526880085468292], "target_probs": 0.0}}




Minimal simplified tokens:

['#NEWLINE#', 'pyAstNode', 'pyAstNode', 'pyAstNode', 'pyAstNode', 'pyAstNode', 'pyAstNode', 'prefix', 'pyAstNode', 'prefix', 'prefix', 'pyAstNode', 'prefix']
