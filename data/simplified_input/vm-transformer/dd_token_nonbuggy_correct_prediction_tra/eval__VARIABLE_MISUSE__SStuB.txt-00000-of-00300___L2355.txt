
Original sample:

{"has_bug": false, "bug_kind": 0, "bug_kind_name": "NONE", "source_tokens": ["#NEWLINE#", "def get_test_subprocess(", "cmd", "=", "None", ",", "stdout", "=", "DEVNULL", ",", "stderr", "=", "DEVNULL", ",", "stdin", "=", "None", ",", "wait", "=", "False", ")", ":", "#NEWLINE#", "#INDENT#", "\"Return a subprocess.Popen object to use in tests.\\n    By default stdout and stderr are redirected to /dev/null and the\\n    python interpreter is used as test process.\\n    If 'wait' is True attemps to make sure the process is in a\\n    reasonably initialized state.\\n    \"", "#NEWLINE#", "if", "(", "cmd", "is", "None", ")", ":", "#NEWLINE#", "#INDENT#", "pyline", "=", "''", "#NEWLINE#", "if", "wait", ":", "#NEWLINE#", "#INDENT#", "pyline", "+=", "(", "\"open('%s', 'w'); \"", "%", "TESTFN", ")", "#NEWLINE#", "#UNINDENT#", "pyline", "+=", "'import time; time.sleep(3600);'", "#NEWLINE#", "cmd_", "=", "[", "PYTHON", ",", "'-c'", ",", "pyline", "]", "#NEWLINE#", "#UNINDENT#", "else", ":", "#NEWLINE#", "#INDENT#", "cmd_", "=", "cmd", "#NEWLINE#", "#UNINDENT#", "sproc", "=", "subprocess", ".", "Popen", "(", "cmd_", ",", "stdout", "=", "stdout", ",", "stderr", "=", "stderr", ",", "stdin", "=", "stdin", ")", "#NEWLINE#", "if", "wait", ":", "#NEWLINE#", "#INDENT#", "if", "(", "cmd", "is", "None", ")", ":", "#NEWLINE#", "#INDENT#", "stop_at", "=", "(", "time", ".", "time", "(", ")", "+", "3", ")", "#NEWLINE#", "while", "(", "time", ".", "time", "(", ")", ">", "stop_at", ")", ":", "#NEWLINE#", "#INDENT#", "if", "os", ".", "path", ".", "exists", "(", "TESTFN", ")", ":", "#NEWLINE#", "#INDENT#", "break", "#NEWLINE#", "#UNINDENT#", "time", ".", "sleep", "(", "0.001", ")", "#NEWLINE#", "#UNINDENT#", "else", ":", "#NEWLINE#", "#INDENT#", "warn", "(", "\"couldn't make sure test file was actually created\"", ")", "#NEWLINE#", "#UNINDENT#", "#UNINDENT#", "else", ":", "#NEWLINE#", "#INDENT#", "wait_for_pid", "(", "sproc", ".", "pid", ")", "#NEWLINE#", "#UNINDENT#", "#UNINDENT#", "_subprocesses_started", ".", "add", "(", "sproc", ".", "pid", ")", "#NEWLINE#", "return", "sproc"], "error_location": [0], "repair_targets": [], "repair_candidates": [58, 73, 84, 6, 86, 88, 113, 133, 78, 178, 189, 195, 18, 41, 100, 10, 90, 92, 14, 94, 96, 2, 29, 75, 106, 36, 45, 54, 65], "provenances": [{"datasetProvenance": {"datasetName": "ETHPy150Open", "filepath": "packages/psutil/test/test_psutil.py", "license": "bsd-3-clause", "note": "license: bigquery_api"}}], "txt_file": "eval__VARIABLE_MISUSE__SStuB.txt-00000-of-00300", "js_count": 2355, "results": {"model": "transformer", "prob": {"loc": [[0.510506808757782, 4.9866116569319274e-06, 1.1160663007103722e-06, 1.7662354423464421e-07, 4.114631124707557e-08, 3.970156470245456e-08, 1.9002842464033165e-06, 2.3552128425308183e-07, 2.1165335795103601e-07, 3.036434037539948e-08, 2.802819153657765e-06, 1.8396180223589909e-07, 2.061267139197298e-07, 3.6597054275944174e-08, 7.429285233229166e-06, 2.9131157930351037e-07, 1.1927821219614998e-07, 6.031233823478033e-08, 2.6948073355015367e-06, 2.282086768445879e-07, 5.242328597887536e-07, 4.5237896983962855e-08, 1.1525184362426444e-07, 1.5434584099693893e-07, 9.765899022795566e-08, 2.6669385988498107e-07, 1.45209810398228e-07, 1.1097729668563261e-07, 5.5978887303353986e-08, 0.005652816500514746, 1.7588629930287425e-07, 5.858184692897339e-08, 6.970287103058581e-08, 1.1459513160616552e-07, 1.41901921324461e-07, 7.287201242434094e-08, 1.5430678104166873e-06, 4.762331968777289e-07, 5.26395069755381e-07, 1.8169187399053044e-07, 2.582515037374833e-07, 0.02137548290193081, 7.227516789498623e-07, 9.32987745727587e-07, 4.497324823660165e-07, 8.919317224354018e-06, 4.073758574918429e-08, 2.814804815898242e-07, 1.1429307278376655e-06, 6.074518523746519e-07, 0.00020804503583349288, 5.318569265000406e-07, 2.4708702994757914e-07, 9.865997441238505e-08, 1.324567961091816e-06, 2.1812718387081986e-07, 2.4476203179801814e-06, 1.3032099843712786e-07, 6.071755933589884e-07, 2.081641952145219e-07, 3.887337697960902e-06, 1.4604799616790842e-05, 1.853668152307364e-07, 1.4392001048690872e-06, 1.9995812294837378e-07, 0.00029350403929129243, 1.6413147818639118e-07, 1.6908980171592702e-07, 1.3281800192999071e-07, 2.063032980004209e-07, 1.8522668199238979e-07, 1.9187797306585708e-07, 1.2849305619511142e-07, 6.225752144928265e-07, 1.3361366768549487e-07, 0.0012814265210181475, 2.1837320218764944e-07, 1.6013622428090457e-07, 8.483571946271695e-06, 6.935363217053236e-08, 9.479770568532331e-08, 1.0044893627991769e-07, 8.075055291101307e-08, 1.5712370782239304e-07, 0.0007759635918773711, 9.537888701061092e-08, 1.8270802115694096e-07, 1.8129446743841982e-07, 0.01037573255598545, 4.777354334351003e-08, 2.521707074265578e-07, 1.4615902443892992e-07, 0.0007773386314511299, 6.474057556715707e-08, 3.678325697364926e-07, 1.5333263547745446e-07, 0.003166589420288801, 1.023694153445831e-06, 5.2151949603285175e-06, 4.515202363108983e-07, 0.030503174290060997, 5.044531008024933e-06, 5.420870820671553e-06, 2.7359028536011465e-06, 7.123422278709768e-07, 1.6001835945189669e-07, 0.3240111470222473, 2.423510522930883e-06, 7.407300586237398e-07, 6.732079214089026e-07, 1.3704134289582726e-06, 1.4474395584329613e-06, 7.011512934695929e-07, 0.00024206233501899987, 2.616183110148995e-07, 3.154783598802169e-07, 9.818722901400179e-07, 3.1373670594803116e-07, 2.5686225058052514e-07, 2.790587814160972e-06, 4.5536717152572237e-07, 2.2982686687100795e-07, 0.00024101699818857014, 2.24853579311457e-06, 2.3334850993705913e-06, 3.3565976309546386e-07, 4.473272383620497e-07, 1.6763392522989307e-06, 2.686343520963419e-07, 3.0654993565804034e-07, 1.0585342806734843e-06, 3.63773295930514e-07, 1.9418735064391512e-07, 0.0771295577287674, 5.66725987027894e-07, 1.3066329529465293e-06, 1.7018855942296796e-06, 8.212970215026871e-07, 3.2786763881631487e-07, 4.893488039670046e-06, 1.7960353204671264e-07, 7.364456422465082e-08, 1.7527129614336445e-07, 3.027591688464781e-08, 6.100481186877005e-07, 0.0007924219826236367, 2.0407311751569068e-07, 1.5730774975963868e-06, 1.0661844953574473e-06, 3.1199508043755486e-07, 4.652613824873697e-06, 3.348205268594029e-07, 2.47596545932538e-07, 8.463143075232438e-08, 5.779987333198733e-08, 5.048614184488542e-07, 3.0979660436969425e-07, 3.1923307687975466e-05, 1.0158323675568681e-06, 2.2378992525773356e-06, 8.764308176978375e-07, 1.006134993986052e-06, 7.638579404556367e-07, 7.224485329970776e-07, 4.854477992921602e-07, 2.479850422787422e-07, 1.7905814786445262e-07, 5.917281669098884e-06, 9.978444950320409e-07, 1.479220372857526e-06, 9.892089565255446e-07, 6.421712441806449e-07, 1.0774341490105144e-06, 3.486553339371312e-07, 5.058918191025441e-07, 2.0095869501801644e-07, 4.5463340825335763e-07, 8.987557720274708e-08, 0.0003976029984187335, 7.255403602357546e-07, 1.8534938135417178e-06, 5.184872406971408e-07, 5.01716158396448e-07, 3.5499931527738227e-07, 1.9361115732863254e-07, 7.457167328084324e-08, 1.3947828847449273e-07, 2.923721353909059e-08, 3.73998346958615e-07, 0.0018766243010759354, 9.510681024949008e-07, 1.3589476566266967e-06, 3.053399666441692e-07, 8.673467846165295e-07, 3.4594950193422846e-06, 0.010185888968408108]], "pointer": [[0.0, 0.0, 0.011731297709047794, 0.0, 0.0, 0.0, 0.05421185865998268, 0.0, 0.0, 0.0, 0.05599251016974449, 0.0, 0.0, 0.0, 0.2433318793773651, 0.0, 0.0, 0.0, 0.013320321217179298, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0003521954349707812, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.01782923750579357, 0.0, 0.0, 0.0, 0.0, 0.0001787838846212253, 0.0, 0.0, 0.0, 0.005851320922374725, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.006919789128005505, 0.0, 0.0, 0.0, 0.02033810131251812, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.00044781644828617573, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.02875223010778427, 0.0, 0.00046805141028016806, 0.0, 0.0, 0.4019477963447571, 0.0, 0.0, 0.0, 0.0, 0.0, 0.00042515690438449383, 0.0, 0.00027787889121100307, 0.0, 1.5851650232434622e-06, 0.0, 0.0006390796042978764, 0.0, 1.4322857168735936e-05, 0.0, 0.00069099833490327, 0.0, 7.685959644732065e-06, 0.0, 0.0, 0.0, 0.00020796165335923433, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0009052549139596522, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.13420121371746063, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 5.507466630660929e-05, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0007386368815787137, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 3.557366653694771e-05, 0.0, 0.0, 0.0, 0.0, 0.0, 0.00012648456322494894]], "target": [0.0]}, "loss": [0.6723513007164001, 0.0], "acc": [1.0, 0.0, 0.0, 0.0]}}


Trace of simplified code(s):

{"result": {"time": "2021-02-11 15:54:56.969387", "n_pass": [1, 1, 1], "n_token": 196, "loss": [0.6723513007164001, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def get_test_subprocess(", "cmd", "=", "None", ",", "stdout", "=", "DEVNULL", ",", "stderr", "=", "DEVNULL", ",", "stdin", "=", "None", ",", "wait", "=", "False", ")", ":", "#NEWLINE#", "#INDENT#", "\"Return a subprocess.Popen object to use in tests.\\n    By default stdout and stderr are redirected to /dev/null and the\\n    python interpreter is used as test process.\\n    If 'wait' is True attemps to make sure the process is in a\\n    reasonably initialized state.\\n    \"", "#NEWLINE#", "if", "(", "cmd", "is", "None", ")", ":", "#NEWLINE#", "#INDENT#", "pyline", "=", "''", "#NEWLINE#", "if", "wait", ":", "#NEWLINE#", "#INDENT#", "pyline", "+=", "(", "\"open('%s', 'w'); \"", "%", "TESTFN", ")", "#NEWLINE#", "#UNINDENT#", "pyline", "+=", "'import time; time.sleep(3600);'", "#NEWLINE#", "cmd_", "=", "[", "PYTHON", ",", "'-c'", ",", "pyline", "]", "#NEWLINE#", "#UNINDENT#", "else", ":", "#NEWLINE#", "#INDENT#", "cmd_", "=", "cmd", "#NEWLINE#", "#UNINDENT#", "sproc", "=", "subprocess", ".", "Popen", "(", "cmd_", ",", "stdout", "=", "stdout", ",", "stderr", "=", "stderr", ",", "stdin", "=", "stdin", ")", "#NEWLINE#", "if", "wait", ":", "#NEWLINE#", "#INDENT#", "if", "(", "cmd", "is", "None", ")", ":", "#NEWLINE#", "#INDENT#", "stop_at", "=", "(", "time", ".", "time", "(", ")", "+", "3", ")", "#NEWLINE#", "while", "(", "time", ".", "time", "(", ")", ">", "stop_at", ")", ":", "#NEWLINE#", "#INDENT#", "if", "os", ".", "path", ".", "exists", "(", "TESTFN", ")", ":", "#NEWLINE#", "#INDENT#", "break", "#NEWLINE#", "#UNINDENT#", "time", ".", "sleep", "(", "0.001", ")", "#NEWLINE#", "#UNINDENT#", "else", ":", "#NEWLINE#", "#INDENT#", "warn", "(", "\"couldn't make sure test file was actually created\"", ")", "#NEWLINE#", "#UNINDENT#", "#UNINDENT#", "else", ":", "#NEWLINE#", "#INDENT#", "wait_for_pid", "(", "sproc", ".", "pid", ")", "#NEWLINE#", "#UNINDENT#", "#UNINDENT#", "_subprocesses_started", ".", "add", "(", "sproc", ".", "pid", ")", "#NEWLINE#", "return", "sproc"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [58, 73, 84, 6, 86, 88, 113, 133, 78, 178, 189, 195, 18, 41, 100, 10, 90, 92, 14, 94, 96, 2, 29, 75, 106, 36, 45, 54, 65]}}
{"prediction": {"error_location": 0.510506808757782, "repair_targets": [], "repair_candidates": [0.011731297709047794, 0.05421185865998268, 0.05599251016974449, 0.2433318793773651, 0.013320321217179298, 0.0003521954349707812, 0.01782923750579357, 0.0001787838846212253, 0.005851320922374725, 0.006919789128005505, 0.02033810131251812, 0.00044781644828617573, 0.02875223010778427, 0.00046805141028016806, 0.4019477963447571, 0.00042515690438449383, 0.00027787889121100307, 1.5851650232434622e-06, 0.0006390796042978764, 1.4322857168735936e-05, 0.00069099833490327, 7.685959644732065e-06, 0.00020796165335923433, 0.0009052549139596522, 0.13420121371746063, 5.507466630660929e-05, 0.0007386368815787137, 3.557366653694771e-05, 0.00012648456322494894], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 15:54:57.046179", "n_pass": [26, 2, 2], "n_token": 171, "loss": [0.7294088006019592, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def get_test_subprocess(", "cmd", "=", "None", ",", "stdout", "=", "DEVNULL", ",", "stderr", "=", "DEVNULL", ",", "stdin", "=", "None", ",", "wait", "=", "False", ")", ":", "#NEWLINE#", "#INDENT#", "\"Return a subprocess.Popen object to use in tests.\\n    By default stdout and stderr are redirected to /dev/null and the\\n    python interpreter is used as test process.\\n    If 'wait' is True attemps to make sure the process is in a\\n    reasonably initialized state.\\n    \"", "#NEWLINE#", "if", "(", "cmd", "is", "None", ")", ":", "#NEWLINE#", "#INDENT#", "pyline", "=", "''", "#NEWLINE#", "if", "wait", ":", "#NEWLINE#", "#INDENT#", "pyline", "+=", "(", "\"open('%s', 'w'); \"", "%", "TESTFN", ")", "#NEWLINE#", "#UNINDENT#", "pyline", "+=", "'import time; time.sleep(3600);'", "#NEWLINE#", "cmd_", "=", "[", "PYTHON", ",", "'-c'", ",", "pyline", "]", "#NEWLINE#", "#UNINDENT#", "else", ":", "#NEWLINE#", "#INDENT#", "cmd_", "=", "cmd", "#NEWLINE#", "#UNINDENT#", "sproc", "=", "subprocess", ".", "Popen", "(", "cmd_", ",", "stdout", "=", "stdout", ",", "stderr", "=", "stderr", ",", "stdin", "=", "stdin", ")", "#NEWLINE#", "if", "wait", ":", "#NEWLINE#", "#INDENT#", "if", "(", "cmd", "is", "None", ")", ":", "#NEWLINE#", "#INDENT#", "stop_at", "=", "(", "time", ".", "time", "(", ")", "+", "3", ")", "#NEWLINE#", "while", "(", "time", ".", "time", "(", ")", ">", "stop_at", ")", ":", "#NEWLINE#", "#INDENT#", "if", "os", ".", "path", ".", "exists", "(", "TESTFN", "#UNINDENT#", "else", ":", "#NEWLINE#", "#INDENT#", "wait_for_pid", "(", "sproc", ".", "pid", ")", "#NEWLINE#", "#UNINDENT#", "#UNINDENT#", "_subprocesses_started", ".", "add", "(", "sproc", ".", "pid", ")", "#NEWLINE#", "return", "sproc"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [58, 73, 84, 6, 86, 88, 113, 133, 78, 153, 164, 170, 18, 41, 100, 10, 90, 92, 14, 94, 96, 2, 29, 75, 106, 36, 45, 54, 65]}}
{"prediction": {"error_location": 0.4821939766407013, "repair_targets": [], "repair_candidates": [0.010818186216056347, 0.06762747466564178, 0.060798175632953644, 0.2850843369960785, 0.01468199584633112, 0.00039404467679560184, 0.013584796339273453, 0.0001384527568006888, 0.003651822218671441, 0.004752864129841328, 0.012519944459199905, 0.0004321045125834644, 0.01239306665956974, 0.0004407379310578108, 0.4286903738975525, 0.0005178014980629086, 0.00021027984621468931, 2.1037762962805573e-06, 0.0004124737170059234, 1.5058812095958274e-05, 0.0004700850404333323, 8.814783541311044e-06, 0.0001922120718518272, 0.0008175002294592559, 0.08098713308572769, 7.083320087986067e-05, 0.00022133160382509232, 1.2879242603958119e-05, 5.3204836149234325e-05], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 15:54:57.195889", "n_pass": [90, 4, 3], "n_token": 165, "loss": [0.7446832656860352, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def get_test_subprocess(", "cmd", "=", "None", ",", "stdout", "=", "DEVNULL", ",", "stderr", "=", "DEVNULL", ",", "stdin", "=", "None", ",", "wait", "=", "False", ")", ":", "#NEWLINE#", "#INDENT#", "\"Return a subprocess.Popen object to use in tests.\\n    By default stdout and stderr are redirected to /dev/null and the\\n    python interpreter is used as test process.\\n    If 'wait' is True attemps to make sure the process is in a\\n    reasonably initialized state.\\n    \"", "#NEWLINE#", "if", "(", "cmd", "is", "None", ")", ":", "#NEWLINE#", "#INDENT#", "pyline", "=", "''", "#NEWLINE#", "if", "wait", ":", "#NEWLINE#", "#INDENT#", "pyline", "+=", "(", "\"open('%s', 'w'); \"", "%", "TESTFN", ")", "#NEWLINE#", "#UNINDENT#", "pyline", "+=", "'import time; time.sleep(3600);'", "#NEWLINE#", "cmd_", "=", "[", "PYTHON", ",", "'-c'", ",", "pyline", "]", "#NEWLINE#", "#UNINDENT#", "else", ":", "#NEWLINE#", "#INDENT#", "cmd_", "=", "cmd", "#NEWLINE#", "#UNINDENT#", "sproc", "=", "subprocess", ".", "Popen", "(", "cmd_", ",", "stdout", "=", "stdout", ",", "stderr", "=", "stderr", ",", "stdin", "=", "stdin", ")", "#NEWLINE#", "if", "wait", ":", "#NEWLINE#", "#INDENT#", "if", "(", "cmd", "is", "None", ")", ":", "#NEWLINE#", "#INDENT#", "stop_at", "=", "(", "time", ".", "time", "(", ")", "+", "3", ")", "#NEWLINE#", "while", "(", "time", ".", "time", "(", ")", ">", "stop_at", ")", ":", "#NEWLINE#", "#INDENT#", "if", "os", ".", "path", ".", "exists", "#INDENT#", "wait_for_pid", "(", "sproc", ".", "pid", ")", "#NEWLINE#", "#UNINDENT#", "#UNINDENT#", "_subprocesses_started", ".", "add", "(", "sproc", ".", "pid", ")", "#NEWLINE#", "return", "sproc"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [58, 73, 84, 6, 86, 88, 113, 133, 78, 147, 158, 164, 18, 41, 100, 10, 90, 92, 14, 94, 96, 2, 29, 75, 106, 36, 45, 54, 65]}}
{"prediction": {"error_location": 0.4748847186565399, "repair_targets": [], "repair_candidates": [0.012577533721923828, 0.08470603078603745, 0.0740874707698822, 0.3627423644065857, 0.017858516424894333, 0.00035443808883428574, 0.016432031989097595, 0.00014938526146579534, 0.004064405336976051, 0.00552993081510067, 0.012681422755122185, 0.00040485477074980736, 0.013508317992091179, 0.00042215408757328987, 0.3052992522716522, 0.0004131448804400861, 0.00018436461687088013, 2.166418425986194e-06, 0.0003938909212592989, 1.4775852832826786e-05, 0.0004299065622035414, 9.413401130586863e-06, 0.0002084326697513461, 0.0008597110281698406, 0.08441316336393356, 9.160997433355078e-05, 0.0018299479270353913, 0.00018496348639018834, 0.00014634283434133977], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 15:54:57.267131", "n_pass": [92, 5, 4], "n_token": 158, "loss": [0.8370225429534912, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def get_test_subprocess(", "cmd", "=", "None", ",", "stdout", "=", "DEVNULL", ",", "stderr", "=", "DEVNULL", ",", "stdin", "=", "None", ",", "wait", "=", "False", ")", ":", "#NEWLINE#", "#INDENT#", "\"Return a subprocess.Popen object to use in tests.\\n    By default stdout and stderr are redirected to /dev/null and the\\n    python interpreter is used as test process.\\n    If 'wait' is True attemps to make sure the process is in a\\n    reasonably initialized state.\\n    \"", "#NEWLINE#", "if", "(", "cmd", "is", "None", ")", ":", "#NEWLINE#", "#INDENT#", "pyline", "=", "''", "#NEWLINE#", "if", "wait", ":", "#NEWLINE#", "#INDENT#", "pyline", "+=", "(", "\"open('%s', 'w'); \"", "%", "TESTFN", ")", "#NEWLINE#", "#UNINDENT#", "pyline", "+=", "'import time; time.sleep(3600);'", "#NEWLINE#", "cmd_", "=", "[", "PYTHON", ",", "'-c'", ",", "pyline", "]", "#NEWLINE#", "#UNINDENT#", "else", ":", "#NEWLINE#", "#INDENT#", "cmd_", "=", "cmd", "#NEWLINE#", "#UNINDENT#", "sproc", "=", "subprocess", ".", "Popen", "(", "cmd_", ",", "stdout", "=", "stdout", ",", "stderr", "=", "stderr", ",", "stdin", "=", "stdin", ")", "#NEWLINE#", "if", "wait", ":", "#NEWLINE#", "#INDENT#", "if", "(", "cmd", "is", "None", ")", ":", "#NEWLINE#", "#INDENT#", "stop_at", "=", "(", "time", ".", "time", "(", ")", "+", "3", ")", "#NEWLINE#", "while", "(", "time", ".", "time", "(", ")", ">", "stop_at", ")", ":", "#NEWLINE#", "#INDENT#", "if", "os", ".", "path", ".", "exists", "#INDENT#", "wait_for_pid", "(", "sproc", ".", "pid", ")", "sproc", ".", "pid", ")", "#NEWLINE#", "return", "sproc"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [58, 73, 84, 6, 86, 88, 113, 133, 78, 147, 151, 157, 18, 41, 100, 10, 90, 92, 14, 94, 96, 2, 29, 75, 106, 36, 45, 54, 65]}}
{"prediction": {"error_location": 0.43299779295921326, "repair_targets": [], "repair_candidates": [0.012701188214123249, 0.08516191691160202, 0.06931313872337341, 0.3671795129776001, 0.015374962240457535, 0.00030400793184526265, 0.012995321303606033, 0.00012867484474554658, 0.0030021793209016323, 0.0046518887393176556, 0.011705754324793816, 0.0003078262379858643, 0.013686764054000378, 0.00046491323155350983, 0.3332918882369995, 0.0005515318480320275, 0.0001348548976238817, 2.170675770685193e-06, 0.00029133076895959675, 1.5152727428358048e-05, 0.00031625721021555364, 8.819158210826572e-06, 0.0001694438251433894, 0.0006862471927888691, 0.06627105176448822, 0.00015955072012729943, 0.0006960495957173407, 0.000273097597528249, 0.00015445364988408983], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 15:54:57.341184", "n_pass": [99, 6, 5], "n_token": 152, "loss": [0.7017754316329956, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def get_test_subprocess(", "cmd", "=", "None", ",", "stdout", "=", "DEVNULL", ",", "stderr", "=", "DEVNULL", ",", "stdin", "=", "None", ",", "wait", "=", "False", ")", ":", "#NEWLINE#", "#INDENT#", "\"Return a subprocess.Popen object to use in tests.\\n    By default stdout and stderr are redirected to /dev/null and the\\n    python interpreter is used as test process.\\n    If 'wait' is True attemps to make sure the process is in a\\n    reasonably initialized state.\\n    \"", "#NEWLINE#", "if", "(", "cmd", "pyline", "=", "''", "#NEWLINE#", "if", "wait", ":", "#NEWLINE#", "#INDENT#", "pyline", "+=", "(", "\"open('%s', 'w'); \"", "%", "TESTFN", ")", "#NEWLINE#", "#UNINDENT#", "pyline", "+=", "'import time; time.sleep(3600);'", "#NEWLINE#", "cmd_", "=", "[", "PYTHON", ",", "'-c'", ",", "pyline", "]", "#NEWLINE#", "#UNINDENT#", "else", ":", "#NEWLINE#", "#INDENT#", "cmd_", "=", "cmd", "#NEWLINE#", "#UNINDENT#", "sproc", "=", "subprocess", ".", "Popen", "(", "cmd_", ",", "stdout", "=", "stdout", ",", "stderr", "=", "stderr", ",", "stdin", "=", "stdin", ")", "#NEWLINE#", "if", "wait", ":", "#NEWLINE#", "#INDENT#", "if", "(", "cmd", "is", "None", ")", ":", "#NEWLINE#", "#INDENT#", "stop_at", "=", "(", "time", ".", "time", "(", ")", "+", "3", ")", "#NEWLINE#", "while", "(", "time", ".", "time", "(", ")", ">", "stop_at", ")", ":", "#NEWLINE#", "#INDENT#", "if", "os", ".", "path", ".", "exists", "#INDENT#", "wait_for_pid", "(", "sproc", ".", "pid", ")", "sproc", ".", "pid", ")", "#NEWLINE#", "return", "sproc"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [52, 67, 78, 6, 80, 82, 107, 127, 72, 141, 145, 151, 18, 35, 94, 10, 84, 86, 14, 88, 90, 2, 29, 69, 100, 30, 39, 48, 59]}}
{"prediction": {"error_location": 0.49570444226264954, "repair_targets": [], "repair_candidates": [0.026882655918598175, 0.06571248918771744, 0.06877666711807251, 0.41961994767189026, 0.02483290061354637, 0.0022485656663775444, 0.004357979632914066, 0.00035301418392919004, 0.006394895259290934, 0.011299001052975655, 0.00888781063258648, 0.001862520002759993, 0.007694352883845568, 0.0004882577050011605, 0.31182363629341125, 9.167219832306728e-05, 0.0003025481419172138, 3.9983988244785e-06, 0.000682258396409452, 2.3153883375925943e-05, 0.0007596711511723697, 1.4928770724509377e-05, 0.0003960137255489826, 0.0005009612068533897, 0.034535814076662064, 0.00029950294992886484, 0.0003872001252602786, 0.0002400874946033582, 0.0005274447612464428], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 15:54:57.413382", "n_pass": [102, 7, 6], "n_token": 146, "loss": [0.7851060032844543, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def get_test_subprocess(", "cmd", "=", "None", ",", "stdout", "=", "DEVNULL", ",", "stderr", "=", "DEVNULL", ",", "stdin", "=", "None", ",", "wait", "=", "False", ")", ":", "#NEWLINE#", "#INDENT#", "\"Return a subprocess.Popen object to use in tests.\\n    By default stdout and stderr are redirected to /dev/null and the\\n    python interpreter is used as test process.\\n    If 'wait' is True attemps to make sure the process is in a\\n    reasonably initialized state.\\n    \"", "#NEWLINE#", "if", "(", "cmd", "pyline", "=", "''", "#NEWLINE#", "if", "wait", ":", "#NEWLINE#", "#INDENT#", "pyline", "+=", "(", "pyline", "+=", "'import time; time.sleep(3600);'", "#NEWLINE#", "cmd_", "=", "[", "PYTHON", ",", "'-c'", ",", "pyline", "]", "#NEWLINE#", "#UNINDENT#", "else", ":", "#NEWLINE#", "#INDENT#", "cmd_", "=", "cmd", "#NEWLINE#", "#UNINDENT#", "sproc", "=", "subprocess", ".", "Popen", "(", "cmd_", ",", "stdout", "=", "stdout", ",", "stderr", "=", "stderr", ",", "stdin", "=", "stdin", ")", "#NEWLINE#", "if", "wait", ":", "#NEWLINE#", "#INDENT#", "if", "(", "cmd", "is", "None", ")", ":", "#NEWLINE#", "#INDENT#", "stop_at", "=", "(", "time", ".", "time", "(", ")", "+", "3", ")", "#NEWLINE#", "while", "(", "time", ".", "time", "(", ")", ">", "stop_at", ")", ":", "#NEWLINE#", "#INDENT#", "if", "os", ".", "path", ".", "exists", "#INDENT#", "wait_for_pid", "(", "sproc", ".", "pid", ")", "sproc", ".", "pid", ")", "#NEWLINE#", "return", "sproc"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [46, 61, 72, 6, 74, 76, 101, 121, 66, 135, 139, 145, 18, 35, 88, 10, 78, 80, 14, 82, 84, 2, 29, 63, 94, 30, 39, 42, 53]}}
{"prediction": {"error_location": 0.4560713469982147, "repair_targets": [], "repair_candidates": [0.02930215746164322, 0.05638250336050987, 0.0509059764444828, 0.46310099959373474, 0.028079047799110413, 0.0025918022729456425, 0.00573559058830142, 0.000413790374295786, 0.03446022793650627, 0.008588041178882122, 0.00871127750724554, 0.0013999469811096787, 0.0036572169046849012, 0.0002573008823674172, 0.25429296493530273, 6.085373388486914e-05, 0.0002600529696792364, 6.458430561906425e-06, 0.00019095337484031916, 1.78478494490264e-05, 0.000306366418953985, 1.2321306712692603e-05, 0.00046148739056661725, 0.0007714949315413833, 0.045660603791475296, 0.000245788338361308, 0.0016210123430937529, 0.0008613705285824835, 0.0016445190412923694], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 15:54:57.484922", "n_pass": [105, 8, 7], "n_token": 140, "loss": [0.6694114804267883, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def get_test_subprocess(", "cmd", "=", "None", ",", "stdout", "=", "DEVNULL", ",", "stderr", "=", "DEVNULL", ",", "stdin", "=", "None", ",", "wait", "=", "False", ")", ":", "#NEWLINE#", "#INDENT#", "\"Return a subprocess.Popen object to use in tests.\\n    By default stdout and stderr are redirected to /dev/null and the\\n    python interpreter is used as test process.\\n    If 'wait' is True attemps to make sure the process is in a\\n    reasonably initialized state.\\n    \"", "#NEWLINE#", "if", "(", "cmd", "pyline", "=", "''", "#NEWLINE#", "if", "wait", ":", "#NEWLINE#", "#INDENT#", "pyline", "+=", "(", "pyline", "+=", "'import time; time.sleep(3600);'", "#NEWLINE#", "cmd_", "=", "[", "PYTHON", ",", "'-c'", ",", "pyline", "#INDENT#", "cmd_", "=", "cmd", "#NEWLINE#", "#UNINDENT#", "sproc", "=", "subprocess", ".", "Popen", "(", "cmd_", ",", "stdout", "=", "stdout", ",", "stderr", "=", "stderr", ",", "stdin", "=", "stdin", ")", "#NEWLINE#", "if", "wait", ":", "#NEWLINE#", "#INDENT#", "if", "(", "cmd", "is", "None", ")", ":", "#NEWLINE#", "#INDENT#", "stop_at", "=", "(", "time", ".", "time", "(", ")", "+", "3", ")", "#NEWLINE#", "while", "(", "time", ".", "time", "(", ")", ">", "stop_at", ")", ":", "#NEWLINE#", "#INDENT#", "if", "os", ".", "path", ".", "exists", "#INDENT#", "wait_for_pid", "(", "sproc", ".", "pid", ")", "sproc", ".", "pid", ")", "#NEWLINE#", "return", "sproc"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [46, 55, 66, 6, 68, 70, 95, 115, 60, 129, 133, 139, 18, 35, 82, 10, 72, 74, 14, 76, 78, 2, 29, 57, 88, 30, 39, 42, 53]}}
{"prediction": {"error_location": 0.5120097994804382, "repair_targets": [], "repair_candidates": [0.022743793204426765, 0.056312933564186096, 0.0634147971868515, 0.3569827079772949, 0.03491411358118057, 0.0015843277797102928, 0.005816807970404625, 0.0005641922471113503, 0.038562387228012085, 0.005587659310549498, 0.014490650966763496, 0.0007246092427521944, 0.00566621171310544, 7.845312939025462e-05, 0.28915128111839294, 5.6543089158367366e-05, 0.00047688058111816645, 1.0259336704621091e-05, 0.0001387875818181783, 1.5613453797413968e-05, 0.00018616151646710932, 1.2595562111528125e-05, 0.00042356227640993893, 0.000975118950009346, 0.097345270216465, 0.00018740326049737632, 0.0014904459239915013, 0.0006360114784911275, 0.0014503682032227516], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 15:54:57.558930", "n_pass": [113, 9, 8], "n_token": 134, "loss": [0.575110912322998, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def get_test_subprocess(", "cmd", "=", "None", ",", "stdout", "=", "DEVNULL", ",", "stderr", "=", "DEVNULL", ",", "stdin", "=", "None", ",", "wait", "=", "False", ")", ":", "#NEWLINE#", "#INDENT#", "\"Return a subprocess.Popen object to use in tests.\\n    By default stdout and stderr are redirected to /dev/null and the\\n    python interpreter is used as test process.\\n    If 'wait' is True attemps to make sure the process is in a\\n    reasonably initialized state.\\n    \"", "#NEWLINE#", "if", "(", "cmd", "pyline", "=", "''", "#NEWLINE#", "if", "wait", ":", "#NEWLINE#", "#INDENT#", "pyline", "+=", "(", "pyline", "+=", "'import time; time.sleep(3600);'", "#NEWLINE#", "cmd_", "=", "[", "PYTHON", ",", "'-c'", ",", "pyline", "#INDENT#", "cmd_", "=", "cmd", "#NEWLINE#", "#UNINDENT#", "sproc", "=", "subprocess", ".", "Popen", "(", "cmd_", ",", "stdout", "=", "stdout", ",", "stderr", "=", "stderr", ",", "stdin", "=", "stdin", ")", "#NEWLINE#", "if", "wait", ":", "#NEWLINE#", "#INDENT#", "if", "(", "cmd", "is", "None", ")", ":", "#NEWLINE#", "#INDENT#", "stop_at", ")", "+", "3", ")", "#NEWLINE#", "while", "(", "time", ".", "time", "(", ")", ">", "stop_at", ")", ":", "#NEWLINE#", "#INDENT#", "if", "os", ".", "path", ".", "exists", "#INDENT#", "wait_for_pid", "(", "sproc", ".", "pid", ")", "sproc", ".", "pid", ")", "#NEWLINE#", "return", "sproc"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [46, 55, 66, 6, 68, 70, 95, 109, 60, 123, 127, 133, 18, 35, 82, 10, 72, 74, 14, 76, 78, 2, 29, 57, 88, 30, 39, 42, 53]}}
{"prediction": {"error_location": 0.5626423954963684, "repair_targets": [], "repair_candidates": [0.03721465915441513, 0.0698816329240799, 0.09605294466018677, 0.2637421488761902, 0.044435907155275345, 0.002860316075384617, 0.011060758493840694, 0.0006794001674279571, 0.04791943356394768, 0.007581219542771578, 0.03401591256260872, 0.0035752521362155676, 0.011805625632405281, 0.0001890740095404908, 0.3328462839126587, 0.00012268083810340613, 0.0010565114207565784, 1.1892505426658317e-05, 0.0004079603240825236, 7.360919698840007e-05, 0.0005177691346034408, 6.785841833334416e-05, 0.004792204592376947, 0.01619657501578331, 0.010516791604459286, 0.0011238068109378219, 0.0004762626485899091, 0.0002531622303649783, 0.0005223251646384597], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 15:54:57.629573", "n_pass": [114, 10, 9], "n_token": 128, "loss": [0.6313764452934265, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def get_test_subprocess(", "cmd", "=", "None", ",", "stdout", "=", "DEVNULL", ",", "stderr", "=", "DEVNULL", ",", "stdin", "=", "None", ",", "wait", "=", "False", ")", ":", "#NEWLINE#", "#INDENT#", "\"Return a subprocess.Popen object to use in tests.\\n    By default stdout and stderr are redirected to /dev/null and the\\n    python interpreter is used as test process.\\n    If 'wait' is True attemps to make sure the process is in a\\n    reasonably initialized state.\\n    \"", "#NEWLINE#", "if", "(", "cmd", "pyline", "=", "''", "#NEWLINE#", "if", "wait", ":", "#NEWLINE#", "#INDENT#", "pyline", "+=", "(", "pyline", "+=", "'import time; time.sleep(3600);'", "#NEWLINE#", "cmd_", "=", "[", "PYTHON", ",", "'-c'", ",", "pyline", "#INDENT#", "cmd_", "=", "cmd", "#NEWLINE#", "#UNINDENT#", "sproc", "=", "subprocess", ".", "Popen", "(", "cmd_", ",", "stdout", "=", "stdout", ",", "stderr", "=", "stderr", ",", "stdin", "=", "stdin", ")", "#NEWLINE#", "if", "wait", ":", "#NEWLINE#", "#INDENT#", "if", "(", "cmd", "is", "None", ")", ":", "#NEWLINE#", "#INDENT#", "stop_at", "(", "time", ".", "time", "(", ")", ">", "stop_at", ")", ":", "#NEWLINE#", "#INDENT#", "if", "os", ".", "path", ".", "exists", "#INDENT#", "wait_for_pid", "(", "sproc", ".", "pid", ")", "sproc", ".", "pid", ")", "#NEWLINE#", "return", "sproc"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [46, 55, 66, 6, 68, 70, 95, 103, 60, 117, 121, 127, 18, 35, 82, 10, 72, 74, 14, 76, 78, 2, 29, 57, 88, 30, 39, 42, 53]}}
{"prediction": {"error_location": 0.5318592190742493, "repair_targets": [], "repair_candidates": [0.02989283949136734, 0.0750330239534378, 0.10365989059209824, 0.2964786887168884, 0.04311550036072731, 0.002336162142455578, 0.007730564568191767, 0.0006584083894267678, 0.04169372841715813, 0.006716853938996792, 0.022027991712093353, 0.0024333351757377386, 0.008076637051999569, 0.0001400174805894494, 0.28640905022621155, 4.573638580041006e-05, 0.0008282421622425318, 1.0416663826617878e-05, 0.000263597525190562, 3.689584991661832e-05, 0.00034976142342202365, 6.10691131441854e-05, 0.0046153562143445015, 0.006983330473303795, 0.059204619377851486, 0.0005924627184867859, 0.00024170688993763179, 0.00012130649702157825, 0.00024285685503855348], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 15:54:57.700072", "n_pass": [115, 11, 10], "n_token": 122, "loss": [0.6085137724876404, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def get_test_subprocess(", "cmd", "=", "None", ",", "stdout", "=", "DEVNULL", ",", "stderr", "=", "DEVNULL", ",", "stdin", "=", "None", ",", "wait", "=", "False", ")", ":", "#NEWLINE#", "#INDENT#", "\"Return a subprocess.Popen object to use in tests.\\n    By default stdout and stderr are redirected to /dev/null and the\\n    python interpreter is used as test process.\\n    If 'wait' is True attemps to make sure the process is in a\\n    reasonably initialized state.\\n    \"", "#NEWLINE#", "if", "(", "cmd", "pyline", "=", "''", "#NEWLINE#", "if", "wait", ":", "#NEWLINE#", "#INDENT#", "pyline", "+=", "(", "pyline", "+=", "'import time; time.sleep(3600);'", "#NEWLINE#", "cmd_", "=", "[", "PYTHON", ",", "'-c'", ",", "pyline", "#INDENT#", "cmd_", "=", "cmd", "#NEWLINE#", "#UNINDENT#", "sproc", "=", "subprocess", ".", "Popen", "(", "cmd_", ",", "stdout", "=", "stdout", ",", "stderr", "=", "stderr", ",", "stdin", "=", "stdin", ")", "#NEWLINE#", "if", "wait", ":", "#NEWLINE#", "#INDENT#", "if", "(", "cmd", "is", "None", ")", ":", "#NEWLINE#", "#INDENT#", "stop_at", ">", "stop_at", ")", ":", "#NEWLINE#", "#INDENT#", "if", "os", ".", "path", ".", "exists", "#INDENT#", "wait_for_pid", "(", "sproc", ".", "pid", ")", "sproc", ".", "pid", ")", "#NEWLINE#", "return", "sproc"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [46, 55, 66, 6, 68, 70, 95, 97, 60, 111, 115, 121, 18, 35, 82, 10, 72, 74, 14, 76, 78, 2, 29, 57, 88, 30, 39, 42, 53]}}
{"prediction": {"error_location": 0.5441591143608093, "repair_targets": [], "repair_candidates": [0.037704020738601685, 0.09030631929636002, 0.11512058973312378, 0.2550557255744934, 0.051354359835386276, 0.0032675270922482014, 0.007963140495121479, 0.0006632701260969043, 0.03159766644239426, 0.008811593987047672, 0.02223188988864422, 0.004918984137475491, 0.007055714726448059, 0.00012137574231019244, 0.28498151898384094, 4.8383411922259256e-05, 0.0006858206470496953, 9.88933697954053e-06, 0.00014462227409239858, 4.610709584085271e-05, 0.00012190885172458366, 4.1973584302468225e-05, 0.00759610440582037, 0.010034318082034588, 0.05563637241721153, 0.0017884894041344523, 0.0008040253887884319, 0.00032235312392003834, 0.001565914717502892], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 15:54:57.772232", "n_pass": [117, 12, 11], "n_token": 116, "loss": [0.7574722766876221, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def get_test_subprocess(", "cmd", "=", "None", ",", "stdout", "=", "DEVNULL", ",", "stderr", "=", "DEVNULL", ",", "stdin", "=", "None", ",", "wait", "=", "False", ")", ":", "#NEWLINE#", "#INDENT#", "\"Return a subprocess.Popen object to use in tests.\\n    By default stdout and stderr are redirected to /dev/null and the\\n    python interpreter is used as test process.\\n    If 'wait' is True attemps to make sure the process is in a\\n    reasonably initialized state.\\n    \"", "#NEWLINE#", "if", "(", "cmd", "pyline", "=", "''", "#NEWLINE#", "if", "wait", ":", "#NEWLINE#", "#INDENT#", "pyline", "+=", "(", "pyline", "+=", "'import time; time.sleep(3600);'", "#NEWLINE#", "cmd_", "=", "[", "PYTHON", ",", "'-c'", ",", "pyline", "#INDENT#", "cmd_", "=", "cmd", "#NEWLINE#", "#UNINDENT#", "sproc", "=", "subprocess", ".", "Popen", "(", "cmd_", ",", "stdout", "=", "stdout", ",", "stderr", "=", "stderr", ",", "stdin", "=", "stdin", ")", "#NEWLINE#", "if", "wait", ":", "#NEWLINE#", "#INDENT#", "if", "(", "cmd", "is", "None", ")", ":", "#NEWLINE#", "#INDENT#", "stop_at", ">", "stop_at", ")", ":", "#NEWLINE#", "#INDENT#", "#INDENT#", "wait_for_pid", "(", "sproc", ".", "pid", ")", "sproc", ".", "pid", ")", "#NEWLINE#", "return", "sproc"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [46, 55, 66, 6, 68, 70, 95, 97, 60, 105, 109, 115, 18, 35, 82, 10, 72, 74, 14, 76, 78, 2, 29, 57, 88, 30, 39, 42, 53]}}
{"prediction": {"error_location": 0.4688500165939331, "repair_targets": [], "repair_candidates": [0.03588281199336052, 0.08571569621562958, 0.10684844851493835, 0.25821638107299805, 0.04649593308568001, 0.0029561931733042, 0.005671445280313492, 0.0007019482436589897, 0.02067507989704609, 0.00686693424358964, 0.018276460468769073, 0.0037019310984760523, 0.006972840987145901, 0.00012205186794744805, 0.3292369544506073, 7.052985893096775e-05, 0.0006764918798580766, 1.4500529687211383e-05, 0.00011587846529437229, 7.72487765061669e-05, 0.00010336573905078694, 4.9214449973078445e-05, 0.008258179761469364, 0.01208904292434454, 0.03594251722097397, 0.0034643751569092274, 0.005634427536278963, 0.0009755348437465727, 0.004187560640275478], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 15:54:57.846910", "n_pass": [175, 13, 12], "n_token": 113, "loss": [0.8102564811706543, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def get_test_subprocess(", "cmd", "=", "None", ",", "stdout", "=", "DEVNULL", ",", "stderr", "=", "DEVNULL", ",", "stdin", "=", "None", ",", "wait", "=", "False", ")", ":", "#NEWLINE#", "#INDENT#", "\"Return a subprocess.Popen object to use in tests.\\n    By default stdout and stderr are redirected to /dev/null and the\\n    python interpreter is used as test process.\\n    If 'wait' is True attemps to make sure the process is in a\\n    reasonably initialized state.\\n    \"", "#NEWLINE#", "if", "(", "cmd", "pyline", "=", "''", "#NEWLINE#", "if", "wait", ":", "#NEWLINE#", "#INDENT#", "pyline", "+=", "(", "pyline", "+=", "'import time; time.sleep(3600);'", "#NEWLINE#", "cmd_", "=", "[", "PYTHON", ",", "'-c'", ",", "pyline", "#INDENT#", "cmd_", "=", "cmd", "#NEWLINE#", "#UNINDENT#", "sproc", "=", "subprocess", ".", "Popen", "(", "cmd_", ",", "stdout", "=", "stdout", ",", "stderr", "=", "stderr", ",", "stdin", "=", "stdin", ")", "#NEWLINE#", "if", "wait", ":", "#NEWLINE#", "#INDENT#", "if", "(", "cmd", "is", "None", ")", ":", "#NEWLINE#", "#INDENT#", "stop_at", ">", "stop_at", ")", ":", "#NEWLINE#", "#INDENT#", "sproc", ".", "pid", ")", "sproc", ".", "pid", ")", "#NEWLINE#", "return", "sproc"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [46, 55, 66, 6, 68, 70, 95, 97, 60, 102, 106, 112, 18, 35, 82, 10, 72, 74, 14, 76, 78, 2, 29, 57, 88, 30, 39, 42, 53]}}
{"prediction": {"error_location": 0.4447439908981323, "repair_targets": [], "repair_candidates": [0.03663357347249985, 0.0891127958893776, 0.11586195230484009, 0.27360910177230835, 0.052900366485118866, 0.003478605765849352, 0.0073300679214298725, 0.0007159142987802625, 0.018933918327093124, 0.009006724692881107, 0.01871420629322529, 0.0053004552610218525, 0.006626696791499853, 9.623653022572398e-05, 0.2627023458480835, 6.236931949388236e-05, 0.0008449570159427822, 1.4055967767490074e-05, 0.0001337515568593517, 0.00011154022649861872, 0.00010548187128733844, 5.0360849854769185e-05, 0.008480563759803772, 0.011286167427897453, 0.04720522090792656, 0.004887830000370741, 0.023230912163853645, 0.000687108957208693, 0.001876668888144195], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 15:54:57.990083", "n_pass": [184, 15, 13], "n_token": 110, "loss": [0.7560323476791382, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def get_test_subprocess(", "cmd", "=", "None", ",", "stdout", "=", "DEVNULL", ",", "stderr", "=", "DEVNULL", ",", "stdin", "wait", "=", "False", ")", ":", "#NEWLINE#", "#INDENT#", "\"Return a subprocess.Popen object to use in tests.\\n    By default stdout and stderr are redirected to /dev/null and the\\n    python interpreter is used as test process.\\n    If 'wait' is True attemps to make sure the process is in a\\n    reasonably initialized state.\\n    \"", "#NEWLINE#", "if", "(", "cmd", "pyline", "=", "''", "#NEWLINE#", "if", "wait", ":", "#NEWLINE#", "#INDENT#", "pyline", "+=", "(", "pyline", "+=", "'import time; time.sleep(3600);'", "#NEWLINE#", "cmd_", "=", "[", "PYTHON", ",", "'-c'", ",", "pyline", "#INDENT#", "cmd_", "=", "cmd", "#NEWLINE#", "#UNINDENT#", "sproc", "=", "subprocess", ".", "Popen", "(", "cmd_", ",", "stdout", "=", "stdout", ",", "stderr", "=", "stderr", ",", "stdin", "=", "stdin", ")", "#NEWLINE#", "if", "wait", ":", "#NEWLINE#", "#INDENT#", "if", "(", "cmd", "is", "None", ")", ":", "#NEWLINE#", "#INDENT#", "stop_at", ">", "stop_at", ")", ":", "#NEWLINE#", "#INDENT#", "sproc", ".", "pid", ")", "sproc", ".", "pid", ")", "#NEWLINE#", "return", "sproc"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [43, 52, 63, 6, 65, 67, 92, 94, 57, 99, 103, 109, 15, 32, 79, 10, 69, 71, 14, 73, 75, 2, 26, 54, 85, 27, 36, 39, 50]}}
{"prediction": {"error_location": 0.46952569484710693, "repair_targets": [], "repair_candidates": [0.04288465157151222, 0.09936238080263138, 0.13318173587322235, 0.13700421154499054, 0.0764685794711113, 0.0063402787782251835, 0.007324616424739361, 0.0005319784395396709, 0.01708228699862957, 0.006369119510054588, 0.04145344719290733, 0.006135227624326944, 0.011720862239599228, 9.0919085778296e-05, 0.3091942071914673, 0.000169209175510332, 0.0006476150010712445, 1.9116252587991767e-05, 0.00022749743948224932, 8.784540113992989e-05, 0.00019309647905174643, 2.9670014555449598e-05, 0.0151416240260005, 0.024106306955218315, 0.0364513173699379, 0.004359473939985037, 0.02031303383409977, 0.0008927984745241702, 0.0022168708965182304], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 15:54:58.061198", "n_pass": [186, 16, 14], "n_token": 107, "loss": [0.891839861869812, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def get_test_subprocess(", "cmd", "=", "None", ",", "stdout", "=", "DEVNULL", ",", "stderr", "=", "DEVNULL", ",", "stdin", "wait", "=", "False", "#INDENT#", "\"Return a subprocess.Popen object to use in tests.\\n    By default stdout and stderr are redirected to /dev/null and the\\n    python interpreter is used as test process.\\n    If 'wait' is True attemps to make sure the process is in a\\n    reasonably initialized state.\\n    \"", "#NEWLINE#", "if", "(", "cmd", "pyline", "=", "''", "#NEWLINE#", "if", "wait", ":", "#NEWLINE#", "#INDENT#", "pyline", "+=", "(", "pyline", "+=", "'import time; time.sleep(3600);'", "#NEWLINE#", "cmd_", "=", "[", "PYTHON", ",", "'-c'", ",", "pyline", "#INDENT#", "cmd_", "=", "cmd", "#NEWLINE#", "#UNINDENT#", "sproc", "=", "subprocess", ".", "Popen", "(", "cmd_", ",", "stdout", "=", "stdout", ",", "stderr", "=", "stderr", ",", "stdin", "=", "stdin", ")", "#NEWLINE#", "if", "wait", ":", "#NEWLINE#", "#INDENT#", "if", "(", "cmd", "is", "None", ")", ":", "#NEWLINE#", "#INDENT#", "stop_at", ">", "stop_at", ")", ":", "#NEWLINE#", "#INDENT#", "sproc", ".", "pid", ")", "sproc", ".", "pid", ")", "#NEWLINE#", "return", "sproc"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [40, 49, 60, 6, 62, 64, 89, 91, 54, 96, 100, 106, 15, 29, 76, 10, 66, 68, 14, 70, 72, 2, 23, 51, 82, 24, 33, 36, 47]}}
{"prediction": {"error_location": 0.4099009335041046, "repair_targets": [], "repair_candidates": [0.04184180498123169, 0.11463560163974762, 0.16841186583042145, 0.10927946865558624, 0.07274305075407028, 0.005335323512554169, 0.008482062257826328, 0.0005579075659625232, 0.020148899406194687, 0.00908406637609005, 0.06244414299726486, 0.006605016067624092, 0.01558675616979599, 0.0001249226916115731, 0.2634555697441101, 0.0003229629364795983, 0.00028084925725124776, 1.7517199012218043e-05, 0.0001365480711683631, 5.8548135712044314e-05, 8.92428943188861e-05, 2.5961331630242057e-05, 0.010679111815989017, 0.043100640177726746, 0.028941936790943146, 0.0040425751358270645, 0.0107828788459301, 0.0005689863464795053, 0.0022157158236950636], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 15:54:58.125962", "n_pass": [187, 17, 15], "n_token": 104, "loss": [0.936909556388855, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def get_test_subprocess(", "cmd", "=", "None", ",", "stdout", "=", "DEVNULL", ",", "stderr", "=", "DEVNULL", ",", "stdin", "wait", "=", "False", "if", "(", "cmd", "pyline", "=", "''", "#NEWLINE#", "if", "wait", ":", "#NEWLINE#", "#INDENT#", "pyline", "+=", "(", "pyline", "+=", "'import time; time.sleep(3600);'", "#NEWLINE#", "cmd_", "=", "[", "PYTHON", ",", "'-c'", ",", "pyline", "#INDENT#", "cmd_", "=", "cmd", "#NEWLINE#", "#UNINDENT#", "sproc", "=", "subprocess", ".", "Popen", "(", "cmd_", ",", "stdout", "=", "stdout", ",", "stderr", "=", "stderr", ",", "stdin", "=", "stdin", ")", "#NEWLINE#", "if", "wait", ":", "#NEWLINE#", "#INDENT#", "if", "(", "cmd", "is", "None", ")", ":", "#NEWLINE#", "#INDENT#", "stop_at", ">", "stop_at", ")", ":", "#NEWLINE#", "#INDENT#", "sproc", ".", "pid", ")", "sproc", ".", "pid", ")", "#NEWLINE#", "return", "sproc"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [37, 46, 57, 6, 59, 61, 86, 88, 51, 93, 97, 103, 15, 26, 73, 10, 63, 65, 14, 67, 69, 2, 20, 48, 79, 21, 30, 33, 44]}}
{"prediction": {"error_location": 0.391836941242218, "repair_targets": [], "repair_candidates": [0.048243723809719086, 0.11476358026266098, 0.13430461287498474, 0.12849187850952148, 0.0859760195016861, 0.004358614794909954, 0.005813296884298325, 0.000827002280857414, 0.01211102306842804, 0.004998475778847933, 0.058714643120765686, 0.0028021102771162987, 0.05813874304294586, 9.631941793486476e-05, 0.21957102417945862, 0.00023482520191464573, 0.00033423633431084454, 2.5001936592161655e-05, 0.0001909306738525629, 3.3476200769655406e-05, 8.565920143155381e-05, 3.567209205357358e-05, 0.04342513531446457, 0.03707714006304741, 0.026152456179261208, 0.003845023224130273, 0.006841082591563463, 0.00045626587234437466, 0.0020519974641501904], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 15:54:58.192768", "n_pass": [191, 18, 16], "n_token": 101, "loss": [0.8958473801612854, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def get_test_subprocess(", "cmd", "=", "None", ",", "stdout", "=", "DEVNULL", ",", "stderr", "=", "DEVNULL", ",", "stdin", "wait", "=", "False", "if", "(", "cmd", "pyline", "=", "''", "#NEWLINE#", "if", "wait", "pyline", "+=", "(", "pyline", "+=", "'import time; time.sleep(3600);'", "#NEWLINE#", "cmd_", "=", "[", "PYTHON", ",", "'-c'", ",", "pyline", "#INDENT#", "cmd_", "=", "cmd", "#NEWLINE#", "#UNINDENT#", "sproc", "=", "subprocess", ".", "Popen", "(", "cmd_", ",", "stdout", "=", "stdout", ",", "stderr", "=", "stderr", ",", "stdin", "=", "stdin", ")", "#NEWLINE#", "if", "wait", ":", "#NEWLINE#", "#INDENT#", "if", "(", "cmd", "is", "None", ")", ":", "#NEWLINE#", "#INDENT#", "stop_at", ">", "stop_at", ")", ":", "#NEWLINE#", "#INDENT#", "sproc", ".", "pid", ")", "sproc", ".", "pid", ")", "#NEWLINE#", "return", "sproc"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [34, 43, 54, 6, 56, 58, 83, 85, 48, 90, 94, 100, 15, 26, 70, 10, 60, 62, 14, 64, 66, 2, 20, 45, 76, 21, 27, 30, 41]}}
{"prediction": {"error_location": 0.4082614779472351, "repair_targets": [], "repair_candidates": [0.04447828605771065, 0.0839393362402916, 0.09837257862091064, 0.083648182451725, 0.07491535693407059, 0.004405215382575989, 0.006526554469019175, 0.0028361519798636436, 0.00577199412509799, 0.00799563154578209, 0.07513848692178726, 0.012055858038365841, 0.23333333432674408, 0.0002981026191264391, 0.16583475470542908, 0.0006306131253950298, 0.00042793506872840226, 1.5485928088310175e-05, 0.00041712989332154393, 3.598481271183118e-05, 0.00020798873447347432, 1.614384018466808e-05, 0.0493495911359787, 0.02081686444580555, 0.02159889228641987, 0.0020401431247591972, 0.003138044150546193, 0.00022615880880039185, 0.0015292051248252392], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 15:54:58.257911", "n_pass": [195, 19, 17], "n_token": 98, "loss": [0.8845894932746887, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def get_test_subprocess(", "cmd", "=", "None", ",", "stdout", "=", "DEVNULL", ",", "stderr", "=", "DEVNULL", ",", "stdin", "wait", "=", "False", "if", "(", "cmd", "pyline", "=", "''", "#NEWLINE#", "if", "wait", "pyline", "+=", "(", "pyline", "+=", "'import time; time.sleep(3600);'", "#NEWLINE#", "cmd_", "=", "'-c'", ",", "pyline", "#INDENT#", "cmd_", "=", "cmd", "#NEWLINE#", "#UNINDENT#", "sproc", "=", "subprocess", ".", "Popen", "(", "cmd_", ",", "stdout", "=", "stdout", ",", "stderr", "=", "stderr", ",", "stdin", "=", "stdin", ")", "#NEWLINE#", "if", "wait", ":", "#NEWLINE#", "#INDENT#", "if", "(", "cmd", "is", "None", ")", ":", "#NEWLINE#", "#INDENT#", "stop_at", ">", "stop_at", ")", ":", "#NEWLINE#", "#INDENT#", "sproc", ".", "pid", ")", "sproc", ".", "pid", ")", "#NEWLINE#", "return", "sproc"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [34, 40, 51, 6, 53, 55, 80, 82, 45, 87, 91, 97, 15, 26, 67, 10, 57, 59, 14, 61, 63, 2, 20, 42, 73, 21, 27, 30, 38]}}
{"prediction": {"error_location": 0.41288357973098755, "repair_targets": [], "repair_candidates": [0.056551262736320496, 0.06601179391145706, 0.07287933677434921, 0.07013814896345139, 0.06804154068231583, 0.004489407874643803, 0.005599522963166237, 0.002972125541418791, 0.005337472073733807, 0.00485922209918499, 0.14803139865398407, 0.008378657512366772, 0.1855199933052063, 0.0002905745932366699, 0.18679186701774597, 0.0011298961471766233, 0.0005880278768017888, 1.924094249261543e-05, 0.0011855255579575896, 3.9102480513975024e-05, 0.0007287106127478182, 9.988706551666837e-06, 0.041280437260866165, 0.020566748455166817, 0.04144331440329552, 0.0015608144458383322, 0.0035413249861449003, 0.0003181248903274536, 0.0016964338719844818], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 15:54:58.323492", "n_pass": [200, 20, 18], "n_token": 95, "loss": [0.7099168300628662, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def get_test_subprocess(", "cmd", "=", "None", ",", "stdout", "=", "DEVNULL", ",", "stderr", "=", "DEVNULL", ",", "stdin", "wait", "=", "False", "if", "(", "cmd", "pyline", "=", "''", "#NEWLINE#", "if", "wait", "pyline", "+=", "(", "pyline", "+=", "'import time; time.sleep(3600);'", "#NEWLINE#", "cmd_", "=", "'-c'", ",", "pyline", "#INDENT#", "cmd_", "=", "cmd", "#NEWLINE#", "#UNINDENT#", "sproc", "=", "subprocess", "cmd_", ",", "stdout", "=", "stdout", ",", "stderr", "=", "stderr", ",", "stdin", "=", "stdin", ")", "#NEWLINE#", "if", "wait", ":", "#NEWLINE#", "#INDENT#", "if", "(", "cmd", "is", "None", ")", ":", "#NEWLINE#", "#INDENT#", "stop_at", ">", "stop_at", ")", ":", "#NEWLINE#", "#INDENT#", "sproc", ".", "pid", ")", "sproc", ".", "pid", ")", "#NEWLINE#", "return", "sproc"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [34, 40, 48, 6, 50, 52, 77, 79, 45, 84, 88, 94, 15, 26, 64, 10, 54, 56, 14, 58, 60, 2, 20, 42, 70, 21, 27, 30, 38]}}
{"prediction": {"error_location": 0.49168509244918823, "repair_targets": [], "repair_candidates": [0.0680081769824028, 0.09597733616828918, 0.08588630706071854, 0.10512177646160126, 0.0868852287530899, 0.006765175610780716, 0.006696690339595079, 0.0049623544327914715, 0.007384182885289192, 0.006259715184569359, 0.044571731239557266, 0.007775428239256144, 0.0700433999300003, 0.0002278855099575594, 0.22178755700588226, 0.0010228456230834126, 0.0007929261773824692, 2.4514642063877545e-05, 0.0010687223402783275, 5.907220474909991e-05, 0.0005221619503572583, 1.272103691007942e-05, 0.05095691233873367, 0.026538776233792305, 0.08788685500621796, 0.001863386482000351, 0.007177074905484915, 0.0004487239639274776, 0.003272335510700941], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 15:54:58.390405", "n_pass": [207, 21, 19], "n_token": 92, "loss": [0.7205021977424622, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def get_test_subprocess(", "cmd", "=", "None", ",", "stdout", "=", "DEVNULL", ",", "stderr", "=", "DEVNULL", ",", "stdin", "wait", "=", "False", "if", "(", "cmd", "pyline", "=", "''", "#NEWLINE#", "if", "wait", "pyline", "+=", "(", "pyline", "+=", "'import time; time.sleep(3600);'", "#NEWLINE#", "cmd_", "=", "'-c'", ",", "pyline", "#INDENT#", "cmd_", "=", "cmd", "#NEWLINE#", "#UNINDENT#", "sproc", "=", "subprocess", "cmd_", ",", "stdout", "=", "stdout", ",", "stderr", "=", "stderr", ",", "stdin", "=", "stdin", ")", "#NEWLINE#", "if", "wait", ":", "(", "cmd", "is", "None", ")", ":", "#NEWLINE#", "#INDENT#", "stop_at", ">", "stop_at", ")", ":", "#NEWLINE#", "#INDENT#", "sproc", ".", "pid", ")", "sproc", ".", "pid", ")", "#NEWLINE#", "return", "sproc"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [34, 40, 48, 6, 50, 52, 74, 76, 45, 81, 85, 91, 15, 26, 64, 10, 54, 56, 14, 58, 60, 2, 20, 42, 67, 21, 27, 30, 38]}}
{"prediction": {"error_location": 0.4865078628063202, "repair_targets": [], "repair_candidates": [0.06711027026176453, 0.09588471800088882, 0.08314437419176102, 0.11823597550392151, 0.1137002483010292, 0.00876708049327135, 0.007835173048079014, 0.005092629697173834, 0.0068711633794009686, 0.006349820178002119, 0.034483544528484344, 0.00840736459940672, 0.05797206237912178, 0.00026889765285886824, 0.23374146223068237, 0.0009252665331587195, 0.0007785739726386964, 4.066815381520428e-05, 0.0010957649210467935, 8.998665725812316e-05, 0.0005843017715960741, 2.3686034182901494e-05, 0.02668057195842266, 0.03197869285941124, 0.0793367400765419, 0.002428831299766898, 0.006579359993338585, 0.00020841950026806444, 0.0013843486085534096], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 15:54:58.455110", "n_pass": [209, 22, 20], "n_token": 89, "loss": [0.7457499504089355, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def get_test_subprocess(", "cmd", "=", "None", ",", "stdout", "=", "DEVNULL", ",", "stderr", "=", "DEVNULL", ",", "stdin", "wait", "=", "False", "if", "(", "cmd", "pyline", "=", "''", "#NEWLINE#", "if", "wait", "pyline", "+=", "(", "pyline", "+=", "'import time; time.sleep(3600);'", "#NEWLINE#", "cmd_", "=", "'-c'", ",", "pyline", "#INDENT#", "cmd_", "=", "cmd", "#NEWLINE#", "#UNINDENT#", "sproc", "=", "subprocess", "cmd_", ",", "stdout", "=", "stdout", ",", "stderr", "=", "stderr", ",", "stdin", "=", "stdin", ")", "#NEWLINE#", "if", "wait", ":", "(", "cmd", "is", "#NEWLINE#", "#INDENT#", "stop_at", ">", "stop_at", ")", ":", "#NEWLINE#", "#INDENT#", "sproc", ".", "pid", ")", "sproc", ".", "pid", ")", "#NEWLINE#", "return", "sproc"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [34, 40, 48, 6, 50, 52, 71, 73, 45, 78, 82, 88, 15, 26, 64, 10, 54, 56, 14, 58, 60, 2, 20, 42, 67, 21, 27, 30, 38]}}
{"prediction": {"error_location": 0.47437846660614014, "repair_targets": [], "repair_candidates": [0.0458013117313385, 0.04947906360030174, 0.04070935398340225, 0.07589338719844818, 0.08275129646062851, 0.007149294950067997, 0.0059248823672533035, 0.006137761287391186, 0.0050038225017488, 0.004720579832792282, 0.0346834734082222, 0.00913932267576456, 0.06290304660797119, 0.0002844209084287286, 0.432356059551239, 0.001178271952085197, 0.0008714650757610798, 5.955615051789209e-05, 0.0013401323230937123, 0.00019335576507728547, 0.0006520898314192891, 6.578065222129226e-05, 0.027242254465818405, 0.04925839602947235, 0.03924630582332611, 0.0039865500293672085, 0.011022076942026615, 0.00036007390008307993, 0.0015867204638198018], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 15:54:58.653785", "n_pass": [297, 25, 21], "n_token": 87, "loss": [0.7120817303657532, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def get_test_subprocess(", "cmd", "=", "None", ",", "stdout", "=", "DEVNULL", ",", "stderr", "=", "DEVNULL", ",", "stdin", "wait", "=", "False", "if", "(", "cmd", "pyline", "=", "''", "#NEWLINE#", "if", "wait", "pyline", "+=", "(", "pyline", "+=", "'import time; time.sleep(3600);'", "#NEWLINE#", "cmd_", "=", "'-c'", ",", "pyline", "#INDENT#", "cmd_", "=", "cmd", "#NEWLINE#", "#UNINDENT#", "sproc", "=", "subprocess", "cmd_", ",", "stdout", "=", "stdout", ",", "stderr", "=", "stderr", ",", "stdin", "=", "stdin", ")", "#NEWLINE#", "if", "wait", "cmd", "is", "#NEWLINE#", "#INDENT#", "stop_at", ">", "stop_at", ")", ":", "#NEWLINE#", "#INDENT#", "sproc", ".", "pid", ")", "sproc", ".", "pid", ")", "#NEWLINE#", "return", "sproc"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [34, 40, 48, 6, 50, 52, 69, 71, 45, 76, 80, 86, 15, 26, 64, 10, 54, 56, 14, 58, 60, 2, 20, 42, 65, 21, 27, 30, 38]}}
{"prediction": {"error_location": 0.49062177538871765, "repair_targets": [], "repair_candidates": [0.049451690167188644, 0.0747731551527977, 0.07788363844156265, 0.09000317007303238, 0.09477415680885315, 0.009393453598022461, 0.006759150419384241, 0.007728349417448044, 0.005144758615642786, 0.0044706156477332115, 0.02850515954196453, 0.0060986666940152645, 0.04283449798822403, 0.0005923712160438299, 0.3886546492576599, 0.00039873679634183645, 0.0006775681395083666, 1.9117509509669617e-05, 0.0014369364362210035, 0.00012460810830816627, 0.0006677437922917306, 6.31715010968037e-05, 0.0376218780875206, 0.037965551018714905, 0.021292757242918015, 0.003511299379169941, 0.008050714619457722, 0.00038153541390784085, 0.0007208727765828371], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 15:54:58.781446", "n_pass": [302, 27, 22], "n_token": 85, "loss": [0.8938901424407959, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def get_test_subprocess(", "cmd", "=", "None", ",", "stdout", "=", "DEVNULL", ",", "stderr", "=", "DEVNULL", ",", "stdin", "wait", "=", "False", "if", "(", "cmd", "pyline", "=", "''", "#NEWLINE#", "if", "wait", "pyline", "+=", "(", "pyline", "+=", "'import time; time.sleep(3600);'", "#NEWLINE#", "cmd_", "=", "'-c'", ",", "pyline", "#INDENT#", "cmd_", "=", "cmd", "#NEWLINE#", "#UNINDENT#", "sproc", "=", "subprocess", "cmd_", ",", "stdout", "=", "stdout", ",", "stderr", "=", "stderr", ",", "stdin", "=", "stdin", ")", "#NEWLINE#", "if", "wait", "cmd", "is", "#NEWLINE#", "#INDENT#", "stop_at", ">", "stop_at", ")", "#INDENT#", "sproc", ".", "pid", ")", "sproc", ".", "pid", ")", "#NEWLINE#", "return", "sproc"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [34, 40, 48, 6, 50, 52, 69, 71, 45, 74, 78, 84, 15, 26, 64, 10, 54, 56, 14, 58, 60, 2, 20, 42, 65, 21, 27, 30, 38]}}
{"prediction": {"error_location": 0.4090613126754761, "repair_targets": [], "repair_candidates": [0.03788343444466591, 0.06761954724788666, 0.06573856621980667, 0.07556955516338348, 0.0725177526473999, 0.008607731200754642, 0.006070267874747515, 0.006770579144358635, 0.004582107532769442, 0.0038755962159484625, 0.028671154752373695, 0.009992162697017193, 0.044487398117780685, 0.0006092068506404757, 0.38775667548179626, 0.0008513554930686951, 0.0005136604886502028, 2.1645846572937444e-05, 0.0011910179164260626, 0.0001960900117410347, 0.0004642970743589103, 6.0835482145193964e-05, 0.06601444631814957, 0.07367785274982452, 0.020461391657590866, 0.004141444806009531, 0.009390242397785187, 0.0011505081783980131, 0.0011133846128359437], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 15:54:58.847354", "n_pass": [304, 28, 23], "n_token": 83, "loss": [0.9176065921783447, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def get_test_subprocess(", "cmd", "=", "None", ",", "stdout", "=", "DEVNULL", ",", "stderr", "=", "DEVNULL", ",", "stdin", "wait", "=", "False", "if", "(", "cmd", "pyline", "=", "''", "#NEWLINE#", "if", "wait", "pyline", "+=", "(", "pyline", "+=", "'import time; time.sleep(3600);'", "#NEWLINE#", "cmd_", "=", "'-c'", ",", "pyline", "#INDENT#", "cmd_", "=", "cmd", "#NEWLINE#", "#UNINDENT#", "sproc", "=", "subprocess", "cmd_", ",", "stdout", "=", "stdout", ",", "stderr", "=", "stderr", ",", "stdin", "=", "stdin", ")", "#NEWLINE#", "if", "wait", "cmd", "is", "#NEWLINE#", "#INDENT#", "stop_at", ">", "stop_at", ")", "#INDENT#", "sproc", ")", "sproc", ".", "pid", ")", "#NEWLINE#", "return", "sproc"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [34, 40, 48, 6, 50, 52, 69, 71, 45, 74, 76, 82, 15, 26, 64, 10, 54, 56, 14, 58, 60, 2, 20, 42, 65, 21, 27, 30, 38]}}
{"prediction": {"error_location": 0.39947396516799927, "repair_targets": [], "repair_candidates": [0.044629715383052826, 0.07811588048934937, 0.07156440615653992, 0.08227293193340302, 0.07801331579685211, 0.010232859291136265, 0.0057990155182778835, 0.005551126319915056, 0.004449842032045126, 0.003396563231945038, 0.037186961621046066, 0.007614606060087681, 0.059220775961875916, 0.0005893415655009449, 0.25671491026878357, 0.001221654238179326, 0.0005146749899722636, 2.829775621648878e-05, 0.0010624119313433766, 0.0002025728317676112, 0.0004510355065576732, 7.868865941418335e-05, 0.07288169860839844, 0.11413012444972992, 0.015620599500834942, 0.0055581554770469666, 0.0342785008251667, 0.005410671699792147, 0.003208697307854891], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 15:54:58.912302", "n_pass": [306, 29, 24], "n_token": 81, "loss": [0.892473042011261, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def get_test_subprocess(", "cmd", "=", "None", ",", "stdout", "=", "DEVNULL", ",", "stderr", "=", "DEVNULL", ",", "stdin", "wait", "=", "False", "if", "(", "cmd", "pyline", "=", "''", "#NEWLINE#", "if", "wait", "pyline", "+=", "(", "pyline", "+=", "'import time; time.sleep(3600);'", "#NEWLINE#", "cmd_", "=", "'-c'", ",", "pyline", "#INDENT#", "cmd_", "=", "cmd", "#NEWLINE#", "#UNINDENT#", "sproc", "=", "subprocess", "cmd_", ",", "stdout", "=", "stdout", ",", "stderr", "=", "stderr", ",", "stdin", "=", "stdin", ")", "#NEWLINE#", "if", "wait", "cmd", "is", "#NEWLINE#", "#INDENT#", "stop_at", ">", "stop_at", ")", "#INDENT#", "sproc", ")", "sproc", ")", "#NEWLINE#", "return", "sproc"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [34, 40, 48, 6, 50, 52, 69, 71, 45, 74, 76, 80, 15, 26, 64, 10, 54, 56, 14, 58, 60, 2, 20, 42, 65, 21, 27, 30, 38]}}
{"prediction": {"error_location": 0.40964144468307495, "repair_targets": [], "repair_candidates": [0.048166509717702866, 0.08826165646314621, 0.07704152911901474, 0.08861079812049866, 0.08089511096477509, 0.009989043697714806, 0.006855136249214411, 0.005470710340887308, 0.0063064489513635635, 0.004598157946020365, 0.06349550932645798, 0.008836519904434681, 0.08937416970729828, 0.0006152833229862154, 0.14578256011009216, 0.0016326522454619408, 0.0006738506490364671, 3.469138755463064e-05, 0.0012589253019541502, 0.00019694791990332305, 0.0005495991790667176, 8.20166096673347e-05, 0.046438466757535934, 0.13572831451892853, 0.01958066038787365, 0.00808284804224968, 0.02881450019776821, 0.02958379127085209, 0.0030436140950769186], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 15:54:58.976951", "n_pass": [307, 30, 25], "n_token": 79, "loss": [0.9585685729980469, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def get_test_subprocess(", "cmd", "=", "None", ",", "stdout", "=", "DEVNULL", ",", "stderr", "=", "DEVNULL", ",", "stdin", "wait", "=", "False", "if", "(", "cmd", "pyline", "=", "''", "#NEWLINE#", "if", "wait", "pyline", "+=", "(", "pyline", "+=", "'import time; time.sleep(3600);'", "#NEWLINE#", "cmd_", "=", "'-c'", ",", "pyline", "#INDENT#", "cmd_", "=", "cmd", "#NEWLINE#", "#UNINDENT#", "sproc", "=", "subprocess", "cmd_", ",", "stdout", "=", "stdout", ",", "stderr", "=", "stderr", ",", "stdin", "=", "stdin", ")", "#NEWLINE#", "if", "wait", "cmd", "is", "#NEWLINE#", "#INDENT#", "stop_at", ">", "stop_at", ")", "#INDENT#", "sproc", ")", "sproc", "return", "sproc"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [34, 40, 48, 6, 50, 52, 69, 71, 45, 74, 76, 78, 15, 26, 64, 10, 54, 56, 14, 58, 60, 2, 20, 42, 65, 21, 27, 30, 38]}}
{"prediction": {"error_location": 0.38344135880470276, "repair_targets": [], "repair_candidates": [0.045022327452898026, 0.0925118699669838, 0.07792329043149948, 0.08748015016317368, 0.07861433923244476, 0.0088102538138628, 0.008290471509099007, 0.0056815315037965775, 0.006590480916202068, 0.005624517798423767, 0.06578228622674942, 0.009516792371869087, 0.09849818795919418, 0.0005305900704115629, 0.14980530738830566, 0.002982422476634383, 0.00067450589267537, 4.459492993191816e-05, 0.0012826889287680387, 0.0002738986222539097, 0.0005213589174672961, 0.00012332876212894917, 0.053681083023548126, 0.14629174768924713, 0.01779286563396454, 0.012664232403039932, 0.010550317354500294, 0.0048905545845627785, 0.007544071413576603], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 15:54:59.106425", "n_pass": [312, 32, 26], "n_token": 78, "loss": [1.0600228309631348, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def get_test_subprocess(", "cmd", "None", ",", "stdout", "=", "DEVNULL", ",", "stderr", "=", "DEVNULL", ",", "stdin", "wait", "=", "False", "if", "(", "cmd", "pyline", "=", "''", "#NEWLINE#", "if", "wait", "pyline", "+=", "(", "pyline", "+=", "'import time; time.sleep(3600);'", "#NEWLINE#", "cmd_", "=", "'-c'", ",", "pyline", "#INDENT#", "cmd_", "=", "cmd", "#NEWLINE#", "#UNINDENT#", "sproc", "=", "subprocess", "cmd_", ",", "stdout", "=", "stdout", ",", "stderr", "=", "stderr", ",", "stdin", "=", "stdin", ")", "#NEWLINE#", "if", "wait", "cmd", "is", "#NEWLINE#", "#INDENT#", "stop_at", ">", "stop_at", ")", "#INDENT#", "sproc", ")", "sproc", "return", "sproc"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [33, 39, 47, 5, 49, 51, 68, 70, 44, 73, 75, 77, 14, 25, 63, 9, 53, 55, 13, 57, 59, 2, 19, 41, 64, 20, 26, 29, 37]}}
{"prediction": {"error_location": 0.3464478850364685, "repair_targets": [], "repair_candidates": [0.03481961414217949, 0.09253638237714767, 0.07558725029230118, 0.08101660758256912, 0.06630490720272064, 0.005294222384691238, 0.008351120166480541, 0.0046494039706885815, 0.00782690942287445, 0.009461186826229095, 0.05388948321342468, 0.013608823530375957, 0.0824599489569664, 0.0005080020637251437, 0.1456172615289688, 0.001536794938147068, 0.0009961348259821534, 3.188538539689034e-05, 0.002194075146690011, 0.00029131220071576536, 0.0009120766189880669, 8.211464592022821e-05, 0.0519615039229393, 0.21336297690868378, 0.023105505853891373, 0.008300823159515858, 0.008110622875392437, 0.0038612703792750835, 0.0033218080643564463], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 15:54:59.170488", "n_pass": [313, 33, 27], "n_token": 77, "loss": [1.0854322910308838, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def get_test_subprocess(", "cmd", ",", "stdout", "=", "DEVNULL", ",", "stderr", "=", "DEVNULL", ",", "stdin", "wait", "=", "False", "if", "(", "cmd", "pyline", "=", "''", "#NEWLINE#", "if", "wait", "pyline", "+=", "(", "pyline", "+=", "'import time; time.sleep(3600);'", "#NEWLINE#", "cmd_", "=", "'-c'", ",", "pyline", "#INDENT#", "cmd_", "=", "cmd", "#NEWLINE#", "#UNINDENT#", "sproc", "=", "subprocess", "cmd_", ",", "stdout", "=", "stdout", ",", "stderr", "=", "stderr", ",", "stdin", "=", "stdin", ")", "#NEWLINE#", "if", "wait", "cmd", "is", "#NEWLINE#", "#INDENT#", "stop_at", ">", "stop_at", ")", "#INDENT#", "sproc", ")", "sproc", "return", "sproc"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [32, 38, 46, 4, 48, 50, 67, 69, 43, 72, 74, 76, 13, 24, 62, 8, 52, 54, 12, 56, 58, 2, 18, 40, 63, 19, 25, 28, 36]}}
{"prediction": {"error_location": 0.3377557694911957, "repair_targets": [], "repair_candidates": [0.033111587166786194, 0.11587060987949371, 0.08281374722719193, 0.08939294517040253, 0.06275192648172379, 0.005596286151558161, 0.009524966590106487, 0.0038032839074730873, 0.009312198497354984, 0.01364508643746376, 0.0330401286482811, 0.017194487154483795, 0.05302545800805092, 0.0009025604231283069, 0.1604185700416565, 0.0007036991883069277, 0.0009209466516040266, 2.416537063254509e-05, 0.001895060297101736, 0.0002585567126516253, 0.0007877431344240904, 7.62685522204265e-05, 0.05408931523561478, 0.2101895958185196, 0.020568890497088432, 0.006719422992318869, 0.00756105687469244, 0.003726198337972164, 0.0020753100980073214], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 15:54:59.299106", "n_pass": [316, 35, 28], "n_token": 76, "loss": [1.1091595888137817, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def get_test_subprocess(", "cmd", ",", "stdout", "DEVNULL", ",", "stderr", "=", "DEVNULL", ",", "stdin", "wait", "=", "False", "if", "(", "cmd", "pyline", "=", "''", "#NEWLINE#", "if", "wait", "pyline", "+=", "(", "pyline", "+=", "'import time; time.sleep(3600);'", "#NEWLINE#", "cmd_", "=", "'-c'", ",", "pyline", "#INDENT#", "cmd_", "=", "cmd", "#NEWLINE#", "#UNINDENT#", "sproc", "=", "subprocess", "cmd_", ",", "stdout", "=", "stdout", ",", "stderr", "=", "stderr", ",", "stdin", "=", "stdin", ")", "#NEWLINE#", "if", "wait", "cmd", "is", "#NEWLINE#", "#INDENT#", "stop_at", ">", "stop_at", ")", "#INDENT#", "sproc", ")", "sproc", "return", "sproc"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [31, 37, 45, 4, 47, 49, 66, 68, 42, 71, 73, 75, 12, 23, 61, 7, 51, 53, 11, 55, 57, 2, 17, 39, 62, 18, 24, 27, 35]}}
{"prediction": {"error_location": 0.32983604073524475, "repair_targets": [], "repair_candidates": [0.02483738586306572, 0.15380249917507172, 0.07050629705190659, 0.08799120038747787, 0.0588277168571949, 0.006057547405362129, 0.00829369481652975, 0.0025449469685554504, 0.0073092724196612835, 0.012405500747263432, 0.022737503051757812, 0.01471271738409996, 0.0350910909473896, 0.0009569411631673574, 0.17820771038532257, 0.0004345439374446869, 0.0011106133460998535, 1.7057480363291688e-05, 0.0025559859350323677, 0.0002797458728309721, 0.0007906858227215707, 7.456223102053627e-05, 0.06553700566291809, 0.20042869448661804, 0.02276761084794998, 0.00821397453546524, 0.007338469382375479, 0.004387841559946537, 0.001781164319254458], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 15:54:59.428614", "n_pass": [318, 37, 29], "n_token": 75, "loss": [1.2311694622039795, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def get_test_subprocess(", "cmd", ",", "stdout", "DEVNULL", "stderr", "=", "DEVNULL", ",", "stdin", "wait", "=", "False", "if", "(", "cmd", "pyline", "=", "''", "#NEWLINE#", "if", "wait", "pyline", "+=", "(", "pyline", "+=", "'import time; time.sleep(3600);'", "#NEWLINE#", "cmd_", "=", "'-c'", ",", "pyline", "#INDENT#", "cmd_", "=", "cmd", "#NEWLINE#", "#UNINDENT#", "sproc", "=", "subprocess", "cmd_", ",", "stdout", "=", "stdout", ",", "stderr", "=", "stderr", ",", "stdin", "=", "stdin", ")", "#NEWLINE#", "if", "wait", "cmd", "is", "#NEWLINE#", "#INDENT#", "stop_at", ">", "stop_at", ")", "#INDENT#", "sproc", ")", "sproc", "return", "sproc"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [30, 36, 44, 4, 46, 48, 65, 67, 41, 70, 72, 74, 11, 22, 60, 6, 50, 52, 10, 54, 56, 2, 16, 38, 61, 17, 23, 26, 34]}}
{"prediction": {"error_location": 0.2919510006904602, "repair_targets": [], "repair_candidates": [0.02430099807679653, 0.05787382274866104, 0.05661526694893837, 0.07191133499145508, 0.06320643424987793, 0.004159063100814819, 0.005465556867420673, 0.0022050458937883377, 0.0046853674575686455, 0.009578758850693703, 0.01742914877831936, 0.011477046646177769, 0.02667129598557949, 0.000725681078620255, 0.18477696180343628, 0.0002261973568238318, 0.0010641212575137615, 2.4789844246697612e-05, 0.001930554280988872, 0.0003456189879216254, 0.0007099510985426605, 9.726326243253425e-05, 0.11995147913694382, 0.2885059118270874, 0.019525358453392982, 0.013056834228336811, 0.007206765469163656, 0.004429789260029793, 0.0018435632809996605], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 15:54:59.493388", "n_pass": [320, 38, 30], "n_token": 74, "loss": [1.2233619689941406, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def get_test_subprocess(", "cmd", ",", "stdout", "DEVNULL", "stderr", "DEVNULL", ",", "stdin", "wait", "=", "False", "if", "(", "cmd", "pyline", "=", "''", "#NEWLINE#", "if", "wait", "pyline", "+=", "(", "pyline", "+=", "'import time; time.sleep(3600);'", "#NEWLINE#", "cmd_", "=", "'-c'", ",", "pyline", "#INDENT#", "cmd_", "=", "cmd", "#NEWLINE#", "#UNINDENT#", "sproc", "=", "subprocess", "cmd_", ",", "stdout", "=", "stdout", ",", "stderr", "=", "stderr", ",", "stdin", "=", "stdin", ")", "#NEWLINE#", "if", "wait", "cmd", "is", "#NEWLINE#", "#INDENT#", "stop_at", ">", "stop_at", ")", "#INDENT#", "sproc", ")", "sproc", "return", "sproc"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [29, 35, 43, 4, 45, 47, 64, 66, 40, 69, 71, 73, 10, 21, 59, 6, 49, 51, 9, 53, 55, 2, 15, 37, 60, 16, 22, 25, 33]}}
{"prediction": {"error_location": 0.2942392826080322, "repair_targets": [], "repair_candidates": [0.017249319702386856, 0.07070721685886383, 0.09390575438737869, 0.07058524340391159, 0.06383365392684937, 0.00400531617924571, 0.005108731333166361, 0.0018721423111855984, 0.0030889760237187147, 0.008631563745439053, 0.016621990129351616, 0.009444745257496834, 0.02090766839683056, 0.0009035368566401303, 0.19328470528125763, 0.0002469252794981003, 0.0009941370226442814, 2.0354060325189494e-05, 0.0013308175839483738, 0.0002762250369414687, 0.000669503235258162, 8.800436626188457e-05, 0.12973390519618988, 0.22372204065322876, 0.028038905933499336, 0.018513988703489304, 0.008249446749687195, 0.005643495358526707, 0.0023216709960252047], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 15:54:59.557625", "n_pass": [321, 39, 31], "n_token": 73, "loss": [1.02302885055542, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def get_test_subprocess(", "cmd", ",", "stdout", "DEVNULL", "stderr", ",", "stdin", "wait", "=", "False", "if", "(", "cmd", "pyline", "=", "''", "#NEWLINE#", "if", "wait", "pyline", "+=", "(", "pyline", "+=", "'import time; time.sleep(3600);'", "#NEWLINE#", "cmd_", "=", "'-c'", ",", "pyline", "#INDENT#", "cmd_", "=", "cmd", "#NEWLINE#", "#UNINDENT#", "sproc", "=", "subprocess", "cmd_", ",", "stdout", "=", "stdout", ",", "stderr", "=", "stderr", ",", "stdin", "=", "stdin", ")", "#NEWLINE#", "if", "wait", "cmd", "is", "#NEWLINE#", "#INDENT#", "stop_at", ">", "stop_at", ")", "#INDENT#", "sproc", ")", "sproc", "return", "sproc"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [28, 34, 42, 4, 44, 46, 63, 65, 39, 68, 70, 72, 9, 20, 58, 6, 48, 50, 8, 52, 54, 2, 14, 36, 59, 15, 21, 24, 32]}}
{"prediction": {"error_location": 0.3595044016838074, "repair_targets": [], "repair_candidates": [0.021303167566657066, 0.08341151475906372, 0.02754344418644905, 0.07932266592979431, 0.09908778220415115, 0.0055491006933152676, 0.008725864812731743, 0.0030769205186516047, 0.004799957387149334, 0.01252479013055563, 0.020965468138456345, 0.013116338290274143, 0.01825735718011856, 0.0008147283224388957, 0.15091685950756073, 0.0004271441139280796, 0.0008770347340032458, 2.6005289328168146e-05, 0.0012791831977665424, 0.00023664801847189665, 0.0007735848776064813, 0.00010845327778952196, 0.13830195367336273, 0.20603568851947784, 0.05443109944462776, 0.02756054513156414, 0.010292086750268936, 0.006921475753188133, 0.003313130233436823], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 15:54:59.750756", "n_pass": [326, 42, 32], "n_token": 72, "loss": [1.0386011600494385, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def get_test_subprocess(", "cmd", ",", "stdout", "DEVNULL", "stderr", ",", "stdin", "wait", "=", "if", "(", "cmd", "pyline", "=", "''", "#NEWLINE#", "if", "wait", "pyline", "+=", "(", "pyline", "+=", "'import time; time.sleep(3600);'", "#NEWLINE#", "cmd_", "=", "'-c'", ",", "pyline", "#INDENT#", "cmd_", "=", "cmd", "#NEWLINE#", "#UNINDENT#", "sproc", "=", "subprocess", "cmd_", ",", "stdout", "=", "stdout", ",", "stderr", "=", "stderr", ",", "stdin", "=", "stdin", ")", "#NEWLINE#", "if", "wait", "cmd", "is", "#NEWLINE#", "#INDENT#", "stop_at", ">", "stop_at", ")", "#INDENT#", "sproc", ")", "sproc", "return", "sproc"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [27, 33, 41, 4, 43, 45, 62, 64, 38, 67, 69, 71, 9, 19, 57, 6, 47, 49, 8, 51, 53, 2, 13, 35, 58, 14, 20, 23, 31]}}
{"prediction": {"error_location": 0.3539494276046753, "repair_targets": [], "repair_candidates": [0.020975718274712563, 0.06395122408866882, 0.019235119223594666, 0.07066221535205841, 0.08834265172481537, 0.008425652980804443, 0.013655930757522583, 0.0037072799168527126, 0.005779200233519077, 0.011997980996966362, 0.015660911798477173, 0.014109661802649498, 0.011227648705244064, 0.0007547183195129037, 0.08804184943437576, 0.0004220279515720904, 0.0006564590148627758, 2.3170330678112805e-05, 0.0011416502529755235, 0.00021269616263452917, 0.000685921753756702, 8.580258872825652e-05, 0.3073748052120209, 0.16389290988445282, 0.05299433693289757, 0.022554097697138786, 0.00650426372885704, 0.004800808150321245, 0.0021233276929706335], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 15:54:59.944034", "n_pass": [331, 45, 33], "n_token": 71, "loss": [1.0157949924468994, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def get_test_subprocess(", "cmd", ",", "stdout", "DEVNULL", "stderr", ",", "stdin", "wait", "=", "if", "(", "cmd", "pyline", "''", "#NEWLINE#", "if", "wait", "pyline", "+=", "(", "pyline", "+=", "'import time; time.sleep(3600);'", "#NEWLINE#", "cmd_", "=", "'-c'", ",", "pyline", "#INDENT#", "cmd_", "=", "cmd", "#NEWLINE#", "#UNINDENT#", "sproc", "=", "subprocess", "cmd_", ",", "stdout", "=", "stdout", ",", "stderr", "=", "stderr", ",", "stdin", "=", "stdin", ")", "#NEWLINE#", "if", "wait", "cmd", "is", "#NEWLINE#", "#INDENT#", "stop_at", ">", "stop_at", ")", "#INDENT#", "sproc", ")", "sproc", "return", "sproc"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [26, 32, 40, 4, 42, 44, 61, 63, 37, 66, 68, 70, 9, 18, 56, 6, 46, 48, 8, 50, 52, 2, 13, 34, 57, 14, 19, 22, 30]}}
{"prediction": {"error_location": 0.36211442947387695, "repair_targets": [], "repair_candidates": [0.019221901893615723, 0.06030028685927391, 0.02054976485669613, 0.06753407418727875, 0.09871294349431992, 0.0023448674473911524, 0.007713101804256439, 0.0038920578081160784, 0.005560719408094883, 0.010074114426970482, 0.014490260742604733, 0.01733667030930519, 0.009223687462508678, 0.0008297252934426069, 0.09375234693288803, 0.000416693976148963, 0.0006347650196403265, 2.7537784262676723e-05, 0.000997894792817533, 0.0002176425768993795, 0.0005680852336809039, 8.617027924628928e-05, 0.3241209387779236, 0.1347268670797348, 0.06747405230998993, 0.02663315273821354, 0.005667761899530888, 0.004722583573311567, 0.0021693892776966095], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 15:55:00.008463", "n_pass": [332, 46, 34], "n_token": 70, "loss": [1.1141079664230347, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def get_test_subprocess(", "cmd", ",", "stdout", "DEVNULL", "stderr", ",", "stdin", "wait", "=", "if", "(", "cmd", "pyline", "#NEWLINE#", "if", "wait", "pyline", "+=", "(", "pyline", "+=", "'import time; time.sleep(3600);'", "#NEWLINE#", "cmd_", "=", "'-c'", ",", "pyline", "#INDENT#", "cmd_", "=", "cmd", "#NEWLINE#", "#UNINDENT#", "sproc", "=", "subprocess", "cmd_", ",", "stdout", "=", "stdout", ",", "stderr", "=", "stderr", ",", "stdin", "=", "stdin", ")", "#NEWLINE#", "if", "wait", "cmd", "is", "#NEWLINE#", "#INDENT#", "stop_at", ">", "stop_at", ")", "#INDENT#", "sproc", ")", "sproc", "return", "sproc"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [25, 31, 39, 4, 41, 43, 60, 62, 36, 65, 67, 69, 9, 17, 55, 6, 45, 47, 8, 49, 51, 2, 13, 33, 56, 14, 18, 21, 29]}}
{"prediction": {"error_location": 0.32820791006088257, "repair_targets": [], "repair_candidates": [0.016700580716133118, 0.04991798475384712, 0.016300644725561142, 0.06393294781446457, 0.08651590347290039, 0.000928753346670419, 0.0042823366820812225, 0.005684367381036282, 0.006365868728607893, 0.009281056001782417, 0.01641593687236309, 0.020663851872086525, 0.008720816113054752, 0.0014236809220165014, 0.18940475583076477, 0.0006096160504966974, 0.0005437764339148998, 4.8812158638611436e-05, 0.0007790084346197546, 0.00026847381377592683, 0.00034947492531500757, 9.395052620675415e-05, 0.2757840156555176, 0.11697837710380554, 0.06220168247818947, 0.03094855509698391, 0.005905494559556246, 0.00570211187005043, 0.003247134853154421], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 15:55:00.073957", "n_pass": [333, 47, 35], "n_token": 69, "loss": [1.2064764499664307, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def get_test_subprocess(", "cmd", ",", "stdout", "DEVNULL", "stderr", ",", "stdin", "wait", "=", "if", "(", "cmd", "pyline", "if", "wait", "pyline", "+=", "(", "pyline", "+=", "'import time; time.sleep(3600);'", "#NEWLINE#", "cmd_", "=", "'-c'", ",", "pyline", "#INDENT#", "cmd_", "=", "cmd", "#NEWLINE#", "#UNINDENT#", "sproc", "=", "subprocess", "cmd_", ",", "stdout", "=", "stdout", ",", "stderr", "=", "stderr", ",", "stdin", "=", "stdin", ")", "#NEWLINE#", "if", "wait", "cmd", "is", "#NEWLINE#", "#INDENT#", "stop_at", ">", "stop_at", ")", "#INDENT#", "sproc", ")", "sproc", "return", "sproc"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [24, 30, 38, 4, 40, 42, 59, 61, 35, 64, 66, 68, 9, 16, 54, 6, 44, 46, 8, 48, 50, 2, 13, 32, 55, 14, 17, 20, 28]}}
{"prediction": {"error_location": 0.2992498576641083, "repair_targets": [], "repair_candidates": [0.019126955419778824, 0.060657501220703125, 0.018353935331106186, 0.05569234862923622, 0.06761430203914642, 0.0019705172162503004, 0.009671714156866074, 0.003625312587246299, 0.010218371637165546, 0.01299303025007248, 0.013234071433544159, 0.025008920580148697, 0.007070829160511494, 0.0011541531421244144, 0.17900748550891876, 0.0006126061198301613, 0.0004706434556283057, 4.8931309720501304e-05, 0.0005362631054595113, 0.00025048875249922276, 0.00018339820962864906, 8.415123738814145e-05, 0.2930607497692108, 0.1061035543680191, 0.0684976726770401, 0.030357228592038155, 0.00609208457171917, 0.005901642143726349, 0.0024011540226638317], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 15:55:00.204302", "n_pass": [338, 49, 36], "n_token": 67, "loss": [1.127039909362793, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def get_test_subprocess(", "cmd", ",", "stdout", "DEVNULL", "stderr", ",", "stdin", "wait", "=", "if", "(", "cmd", "pyline", "if", "wait", "pyline", "+=", "(", "pyline", "#NEWLINE#", "cmd_", "=", "'-c'", ",", "pyline", "#INDENT#", "cmd_", "=", "cmd", "#NEWLINE#", "#UNINDENT#", "sproc", "=", "subprocess", "cmd_", ",", "stdout", "=", "stdout", ",", "stderr", "=", "stderr", ",", "stdin", "=", "stdin", ")", "#NEWLINE#", "if", "wait", "cmd", "is", "#NEWLINE#", "#INDENT#", "stop_at", ">", "stop_at", ")", "#INDENT#", "sproc", ")", "sproc", "return", "sproc"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [22, 28, 36, 4, 38, 40, 57, 59, 33, 62, 64, 66, 9, 16, 52, 6, 42, 44, 8, 46, 48, 2, 13, 30, 53, 14, 17, 20, 26]}}
{"prediction": {"error_location": 0.32399091124534607, "repair_targets": [], "repair_candidates": [0.018339816480875015, 0.06492580473423004, 0.01855015940964222, 0.0521441213786602, 0.06638883054256439, 0.001499089878052473, 0.007923402823507786, 0.0013530246214941144, 0.006882658693939447, 0.005029606632888317, 0.010031061246991158, 0.021770192310214043, 0.005236791446805, 0.0016558208735659719, 0.20845544338226318, 0.00022209013695828617, 0.0005127828335389495, 3.8626672903774306e-05, 0.000334400509018451, 0.00019685366714838892, 0.00014608839410357177, 5.660717579303309e-05, 0.32142335176467896, 0.07752083241939545, 0.07548777759075165, 0.02259400114417076, 0.004600390791893005, 0.005525533575564623, 0.0011548259062692523], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 15:55:00.398191", "n_pass": [353, 52, 37], "n_token": 65, "loss": [0.6206696033477783, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def get_test_subprocess(", "cmd", ",", "stdout", "DEVNULL", "stderr", ",", "stdin", "wait", "=", "if", "(", "cmd", "pyline", "if", "wait", "pyline", "+=", "(", "pyline", "#NEWLINE#", "cmd_", "=", "'-c'", ",", "pyline", "#INDENT#", "cmd_", "=", "cmd", "#NEWLINE#", "#UNINDENT#", "sproc", "=", "subprocess", "cmd_", ",", "stdout", "=", "stdout", ",", "stderr", "=", "stderr", ",", "stdin", "=", "stdin", "if", "wait", "cmd", "is", "#NEWLINE#", "#INDENT#", "stop_at", ">", "stop_at", ")", "#INDENT#", "sproc", ")", "sproc", "return", "sproc"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [22, 28, 36, 4, 38, 40, 55, 57, 33, 60, 62, 64, 9, 16, 50, 6, 42, 44, 8, 46, 48, 2, 13, 30, 51, 14, 17, 20, 26]}}
{"prediction": {"error_location": 0.5375844240188599, "repair_targets": [], "repair_candidates": [0.04432308301329613, 0.11010976135730743, 0.046935293823480606, 0.06899689137935638, 0.09920594841241837, 0.0035117631778120995, 0.018436994403600693, 0.0042473324574530125, 0.017395757138729095, 0.012034987099468708, 0.022257572039961815, 0.06822081655263901, 0.01307185459882021, 0.0049030776135623455, 0.13926880061626434, 0.0002475240034982562, 0.0016908455872908235, 1.6214477000175975e-05, 0.0011542337015271187, 0.00022472845739685, 0.003892555832862854, 0.00012581956980284303, 0.15715986490249634, 0.018496787175536156, 0.13520441949367523, 0.002951019909232855, 0.0017116888193413615, 0.004005537834018469, 0.00019884428184013814], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 15:55:00.526713", "n_pass": [363, 54, 38], "n_token": 64, "loss": [0.6233358979225159, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "cmd", ",", "stdout", "DEVNULL", "stderr", ",", "stdin", "wait", "=", "if", "(", "cmd", "pyline", "if", "wait", "pyline", "+=", "(", "pyline", "#NEWLINE#", "cmd_", "=", "'-c'", ",", "pyline", "#INDENT#", "cmd_", "=", "cmd", "#NEWLINE#", "#UNINDENT#", "sproc", "=", "subprocess", "cmd_", ",", "stdout", "=", "stdout", ",", "stderr", "=", "stderr", ",", "stdin", "=", "stdin", "if", "wait", "cmd", "is", "#NEWLINE#", "#INDENT#", "stop_at", ">", "stop_at", ")", "#INDENT#", "sproc", ")", "sproc", "return", "sproc"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [21, 27, 35, 3, 37, 39, 54, 56, 32, 59, 61, 63, 8, 15, 49, 5, 41, 43, 7, 45, 47, 1, 12, 29, 50, 13, 16, 19, 25]}}
{"prediction": {"error_location": 0.5361529588699341, "repair_targets": [], "repair_candidates": [0.028655648231506348, 0.1757531315088272, 0.02949146181344986, 0.044882629066705704, 0.04560736194252968, 0.008894368074834347, 0.013533156365156174, 0.00181013869587332, 0.023151518777012825, 0.011501982808113098, 0.0272970013320446, 0.1529814749956131, 0.005433857440948486, 0.025615572929382324, 0.056510504335165024, 0.0003486522473394871, 0.0014373568119481206, 2.939904879895039e-05, 0.0007461035856977105, 0.0005000057863071561, 0.0019339603604748845, 6.611942080780864e-05, 0.13547517359256744, 0.02126082219183445, 0.17339569330215454, 0.007323811762034893, 0.0030793098267167807, 0.003088698023930192, 0.00019506773969624192], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 15:55:00.592655", "n_pass": [365, 55, 39], "n_token": 63, "loss": [0.4827655553817749, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "cmd", "stdout", "DEVNULL", "stderr", ",", "stdin", "wait", "=", "if", "(", "cmd", "pyline", "if", "wait", "pyline", "+=", "(", "pyline", "#NEWLINE#", "cmd_", "=", "'-c'", ",", "pyline", "#INDENT#", "cmd_", "=", "cmd", "#NEWLINE#", "#UNINDENT#", "sproc", "=", "subprocess", "cmd_", ",", "stdout", "=", "stdout", ",", "stderr", "=", "stderr", ",", "stdin", "=", "stdin", "if", "wait", "cmd", "is", "#NEWLINE#", "#INDENT#", "stop_at", ">", "stop_at", ")", "#INDENT#", "sproc", ")", "sproc", "return", "sproc"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [20, 26, 34, 2, 36, 38, 53, 55, 31, 58, 60, 62, 7, 14, 48, 4, 40, 42, 6, 44, 46, 1, 11, 28, 49, 12, 15, 18, 24]}}
{"prediction": {"error_location": 0.6170745491981506, "repair_targets": [], "repair_candidates": [0.055535025894641876, 0.06186797097325325, 0.0701671913266182, 0.04559377208352089, 0.05461985245347023, 0.012042886577546597, 0.016492925584316254, 0.0015699253417551517, 0.030964279547333717, 0.012977954931557178, 0.04266966134309769, 0.21466064453125, 0.007797718979418278, 0.02842148207128048, 0.039252858608961105, 0.0007037795730866492, 0.0012129644164815545, 2.8553729862323962e-05, 0.0007578829536214471, 0.0004685188177973032, 0.002368686255067587, 3.4966615203302354e-05, 0.05845590680837631, 0.0203102994710207, 0.18504643440246582, 0.02895287424325943, 0.003970046527683735, 0.002797753782942891, 0.0002572383382357657], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 15:55:00.656910", "n_pass": [367, 56, 40], "n_token": 62, "loss": [0.6921818256378174, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "cmd", "stdout", "stderr", ",", "stdin", "wait", "=", "if", "(", "cmd", "pyline", "if", "wait", "pyline", "+=", "(", "pyline", "#NEWLINE#", "cmd_", "=", "'-c'", ",", "pyline", "#INDENT#", "cmd_", "=", "cmd", "#NEWLINE#", "#UNINDENT#", "sproc", "=", "subprocess", "cmd_", ",", "stdout", "=", "stdout", ",", "stderr", "=", "stderr", ",", "stdin", "=", "stdin", "if", "wait", "cmd", "is", "#NEWLINE#", "#INDENT#", "stop_at", ">", "stop_at", ")", "#INDENT#", "sproc", ")", "sproc", "return", "sproc"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [19, 25, 33, 2, 35, 37, 52, 54, 30, 57, 59, 61, 6, 13, 47, 3, 39, 41, 5, 43, 45, 1, 10, 27, 48, 11, 14, 17, 23]}}
{"prediction": {"error_location": 0.5004828572273254, "repair_targets": [], "repair_candidates": [0.01749190129339695, 0.039126891642808914, 0.5374575257301331, 0.03404550999403, 0.03031928278505802, 0.00902265589684248, 0.013198222033679485, 0.001222763559781015, 0.021595390513539314, 0.006575784645974636, 0.023848917335271835, 0.08970271795988083, 0.008205919526517391, 0.00487350532785058, 0.021287215873599052, 0.000406650360673666, 0.00102099624928087, 3.935041240765713e-05, 0.00027622809284366667, 0.000271932571195066, 0.0021564869675785303, 5.4391992307500914e-05, 0.016772419214248657, 0.005625787656754255, 0.09702731668949127, 0.014838721603155136, 0.0013619514647871256, 0.001953578321263194, 0.00021995390125084668], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 15:55:00.721261", "n_pass": [369, 57, 41], "n_token": 61, "loss": [0.8182690739631653, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "cmd", "stdout", "stderr", "stdin", "wait", "=", "if", "(", "cmd", "pyline", "if", "wait", "pyline", "+=", "(", "pyline", "#NEWLINE#", "cmd_", "=", "'-c'", ",", "pyline", "#INDENT#", "cmd_", "=", "cmd", "#NEWLINE#", "#UNINDENT#", "sproc", "=", "subprocess", "cmd_", ",", "stdout", "=", "stdout", ",", "stderr", "=", "stderr", ",", "stdin", "=", "stdin", "if", "wait", "cmd", "is", "#NEWLINE#", "#INDENT#", "stop_at", ">", "stop_at", ")", "#INDENT#", "sproc", ")", "sproc", "return", "sproc"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [18, 24, 32, 2, 34, 36, 51, 53, 29, 56, 58, 60, 5, 12, 46, 3, 38, 40, 4, 42, 44, 1, 9, 26, 47, 10, 13, 16, 22]}}
{"prediction": {"error_location": 0.44119465351104736, "repair_targets": [], "repair_candidates": [0.007682057097554207, 0.018821068108081818, 0.6984840631484985, 0.033207762986421585, 0.023821063339710236, 0.0031261295080184937, 0.012291285209357738, 0.0025291081983596087, 0.024231908842921257, 0.005177773535251617, 0.014951132237911224, 0.04453689232468605, 0.009688016027212143, 0.0020935614593327045, 0.014439203776419163, 0.0003447894414421171, 0.0007654998335056007, 2.764556666079443e-05, 0.00019165794947184622, 0.00018346580327488482, 0.0024944101460278034, 9.433361265109852e-05, 0.017453044652938843, 0.0034333697985857725, 0.038590140640735626, 0.019437896087765694, 0.0006293374462984502, 0.0011206112103536725, 0.0001527513231849298], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 15:55:00.785305", "n_pass": [372, 58, 42], "n_token": 60, "loss": [1.015107274055481, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "cmd", "stdout", "stderr", "stdin", "wait", "if", "(", "cmd", "pyline", "if", "wait", "pyline", "+=", "(", "pyline", "#NEWLINE#", "cmd_", "=", "'-c'", ",", "pyline", "#INDENT#", "cmd_", "=", "cmd", "#NEWLINE#", "#UNINDENT#", "sproc", "=", "subprocess", "cmd_", ",", "stdout", "=", "stdout", ",", "stderr", "=", "stderr", ",", "stdin", "=", "stdin", "if", "wait", "cmd", "is", "#NEWLINE#", "#INDENT#", "stop_at", ">", "stop_at", ")", "#INDENT#", "sproc", ")", "sproc", "return", "sproc"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [17, 23, 31, 2, 33, 35, 50, 52, 28, 55, 57, 59, 5, 11, 45, 3, 37, 39, 4, 41, 43, 1, 8, 25, 46, 9, 12, 15, 21]}}
{"prediction": {"error_location": 0.3623635768890381, "repair_targets": [], "repair_candidates": [0.004916419740766287, 0.01126328855752945, 0.6904356479644775, 0.0799797922372818, 0.04170272499322891, 0.003821334568783641, 0.01119877677410841, 0.004753665067255497, 0.019917111843824387, 0.0034369404893368483, 0.010244998149573803, 0.01925504207611084, 0.008424396626651287, 0.0018297546776011586, 0.008916632272303104, 0.00032128620659932494, 0.0008993790252134204, 3.491307143121958e-05, 0.0001881036296254024, 0.0001951206213561818, 0.002501162001863122, 0.00012489111395552754, 0.025181306526064873, 0.004467605613172054, 0.02766549400985241, 0.017081797122955322, 0.000495328102260828, 0.000602969725150615, 0.0001441464846720919], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 15:55:00.850426", "n_pass": [373, 59, 43], "n_token": 59, "loss": [0.5997246503829956, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "cmd", "stdout", "stderr", "stdin", "wait", "(", "cmd", "pyline", "if", "wait", "pyline", "+=", "(", "pyline", "#NEWLINE#", "cmd_", "=", "'-c'", ",", "pyline", "#INDENT#", "cmd_", "=", "cmd", "#NEWLINE#", "#UNINDENT#", "sproc", "=", "subprocess", "cmd_", ",", "stdout", "=", "stdout", ",", "stderr", "=", "stderr", ",", "stdin", "=", "stdin", "if", "wait", "cmd", "is", "#NEWLINE#", "#INDENT#", "stop_at", ">", "stop_at", ")", "#INDENT#", "sproc", ")", "sproc", "return", "sproc"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [16, 22, 30, 2, 32, 34, 49, 51, 27, 54, 56, 58, 5, 10, 44, 3, 36, 38, 4, 40, 42, 1, 7, 24, 45, 8, 11, 14, 20]}}
{"prediction": {"error_location": 0.5489628314971924, "repair_targets": [], "repair_candidates": [0.013712719082832336, 0.03397385776042938, 0.1516273021697998, 0.02152615413069725, 0.03233115375041962, 0.010102997533977032, 0.04630152881145477, 0.04368521645665169, 0.0960783138871193, 0.010133820585906506, 0.05339598283171654, 0.04938994720578194, 0.0452922061085701, 0.004054439719766378, 0.03811144828796387, 0.0017695768037810922, 0.002621348947286606, 0.00016516700270585716, 0.0007238474208861589, 0.0010536855552345514, 0.012127713300287724, 0.0007137837819755077, 0.09384356439113617, 0.04112669453024864, 0.11501938104629517, 0.07651234418153763, 0.0024659642949700356, 0.0013677106471732259, 0.0007721100701019168], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 15:55:00.915010", "n_pass": [374, 60, 44], "n_token": 58, "loss": [1.1713206768035889, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "cmd", "stdout", "stderr", "stdin", "wait", "cmd", "pyline", "if", "wait", "pyline", "+=", "(", "pyline", "#NEWLINE#", "cmd_", "=", "'-c'", ",", "pyline", "#INDENT#", "cmd_", "=", "cmd", "#NEWLINE#", "#UNINDENT#", "sproc", "=", "subprocess", "cmd_", ",", "stdout", "=", "stdout", ",", "stderr", "=", "stderr", ",", "stdin", "=", "stdin", "if", "wait", "cmd", "is", "#NEWLINE#", "#INDENT#", "stop_at", ">", "stop_at", ")", "#INDENT#", "sproc", ")", "sproc", "return", "sproc"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [15, 21, 29, 2, 31, 33, 48, 50, 26, 53, 55, 57, 5, 9, 43, 3, 35, 37, 4, 39, 41, 1, 6, 23, 44, 7, 10, 13, 19]}}
{"prediction": {"error_location": 0.3099573254585266, "repair_targets": [], "repair_candidates": [0.0036673201248049736, 0.007510743103921413, 0.8678175210952759, 0.0023863057140260935, 0.0057623968459665775, 0.004409488756209612, 0.011598700657486916, 0.0180705264210701, 0.015635401010513306, 0.00022418485605157912, 0.008566430769860744, 0.0022090745624154806, 0.0058756242506206036, 0.00014726707013323903, 0.005068228114396334, 0.00018659494526218623, 0.0004557105712592602, 2.4166263756342232e-05, 0.00011143188021378592, 0.00029001248185522854, 0.0023476623464375734, 4.8678801249479875e-05, 0.014052322134375572, 0.006060766521841288, 0.012798385694622993, 0.003995995968580246, 0.00036108060157857835, 0.0002080977865261957, 0.00010987148561980575], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 15:55:00.978672", "n_pass": [377, 61, 45], "n_token": 57, "loss": [0.6442286372184753, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "cmd", "stdout", "stderr", "stdin", "wait", "cmd", "pyline", "wait", "pyline", "+=", "(", "pyline", "#NEWLINE#", "cmd_", "=", "'-c'", ",", "pyline", "#INDENT#", "cmd_", "=", "cmd", "#NEWLINE#", "#UNINDENT#", "sproc", "=", "subprocess", "cmd_", ",", "stdout", "=", "stdout", ",", "stderr", "=", "stderr", ",", "stdin", "=", "stdin", "if", "wait", "cmd", "is", "#NEWLINE#", "#INDENT#", "stop_at", ">", "stop_at", ")", "#INDENT#", "sproc", ")", "sproc", "return", "sproc"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [14, 20, 28, 2, 30, 32, 47, 49, 25, 52, 54, 56, 5, 8, 42, 3, 34, 36, 4, 38, 40, 1, 6, 22, 43, 7, 9, 12, 18]}}
{"prediction": {"error_location": 0.5250673890113831, "repair_targets": [], "repair_candidates": [0.0023649067152291536, 0.02520592510700226, 0.47703075408935547, 0.0027385042048990726, 0.022283712401986122, 0.051004182547330856, 0.02082604169845581, 0.02640780434012413, 0.06447073072195053, 0.003497394733130932, 0.06128178536891937, 0.007510220631957054, 0.029914334416389465, 7.851912232581526e-05, 0.025758542120456696, 0.0008444527047686279, 0.0021568576339632273, 9.758330270415172e-05, 0.0004949652939103544, 0.0009153195424005389, 0.008634830825030804, 0.00014302141789812595, 0.02887767180800438, 0.03711676597595215, 0.0759345293045044, 0.021031750366091728, 0.0021994744893163443, 0.0008162189624272287, 0.00036324100801721215], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 15:55:01.043386", "n_pass": [382, 62, 46], "n_token": 55, "loss": [0.689649224281311, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "cmd", "stdout", "stderr", "stdin", "wait", "cmd", "pyline", "wait", "pyline", "+=", "(", "pyline", "#NEWLINE#", "cmd_", ",", "pyline", "#INDENT#", "cmd_", "=", "cmd", "#NEWLINE#", "#UNINDENT#", "sproc", "=", "subprocess", "cmd_", ",", "stdout", "=", "stdout", ",", "stderr", "=", "stderr", ",", "stdin", "=", "stdin", "if", "wait", "cmd", "is", "#NEWLINE#", "#INDENT#", "stop_at", ">", "stop_at", ")", "#INDENT#", "sproc", ")", "sproc", "return", "sproc"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [14, 18, 26, 2, 28, 30, 45, 47, 23, 50, 52, 54, 5, 8, 40, 3, 32, 34, 4, 36, 38, 1, 6, 20, 41, 7, 9, 12, 16]}}
{"prediction": {"error_location": 0.5017519593238831, "repair_targets": [], "repair_candidates": [0.008092030882835388, 0.027049973607063293, 0.03361189737915993, 0.011250327341258526, 0.21246899664402008, 0.04655391722917557, 0.03579426929354668, 0.041815437376499176, 0.25260359048843384, 0.006156583316624165, 0.015042857266962528, 0.08987613022327423, 0.011715498752892017, 0.0003449227078817785, 0.016463883221149445, 0.0016627146396785975, 0.002255243482068181, 0.00012677536869887263, 0.0005420039524324238, 0.0014853968750685453, 0.004332617856562138, 0.00016985343245323747, 0.07218543440103531, 0.05643041059374809, 0.03669440373778343, 0.011806745082139969, 0.0023072457406669855, 0.0008221933385357261, 0.00033868110040202737], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 15:55:01.173255", "n_pass": [397, 64, 47], "n_token": 53, "loss": [1.2343220710754395, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "cmd", "stdout", "stderr", "stdin", "wait", "cmd", "pyline", "wait", "pyline", "+=", "(", "pyline", "#NEWLINE#", "cmd_", ",", "pyline", "#INDENT#", "cmd_", "=", "cmd", "#NEWLINE#", "#UNINDENT#", "sproc", "=", "subprocess", "cmd_", ",", "stdout", "=", "stdout", ",", "stderr", "=", "stderr", ",", "stdin", "=", "stdin", "if", "wait", "cmd", "is", "stop_at", ">", "stop_at", ")", "#INDENT#", "sproc", ")", "sproc", "return", "sproc"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [14, 18, 26, 2, 28, 30, 43, 45, 23, 48, 50, 52, 5, 8, 40, 3, 32, 34, 4, 36, 38, 1, 6, 20, 41, 7, 9, 12, 16]}}
{"prediction": {"error_location": 0.29103198647499084, "repair_targets": [], "repair_candidates": [0.00460954150184989, 0.024383937940001488, 0.011998205445706844, 0.002544482471421361, 0.0733698159456253, 0.0357336550951004, 0.02398616448044777, 0.0243813619017601, 0.21123012900352478, 0.005331483669579029, 0.01174907386302948, 0.0678786039352417, 0.014548252336680889, 0.000431851192843169, 0.016935499384999275, 0.002625860506668687, 0.004183643963187933, 0.0008217270369641483, 0.0018048005877062678, 0.011026929132640362, 0.00616003293544054, 0.0004328642971813679, 0.21215683221817017, 0.228556290268898, 0.0003015356487594545, 0.0007975518819876015, 0.0016374059487134218, 0.00028095036395825446, 0.00010160065721720457], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 15:55:01.306432", "n_pass": [473, 66, 48], "n_token": 52, "loss": [0.7808237671852112, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "cmd", "stdout", "stderr", "stdin", "wait", "cmd", "pyline", "wait", "pyline", "+=", "(", "pyline", "#NEWLINE#", "cmd_", ",", "pyline", "#INDENT#", "cmd_", "=", "cmd", "#NEWLINE#", "#UNINDENT#", "sproc", "=", "subprocess", "cmd_", ",", "stdout", "=", "stdout", ",", "stderr", "=", "stderr", ",", "stdin", "=", "stdin", "if", "wait", "cmd", "is", "stop_at", "stop_at", ")", "#INDENT#", "sproc", ")", "sproc", "return", "sproc"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [14, 18, 26, 2, 28, 30, 43, 44, 23, 47, 49, 51, 5, 8, 40, 3, 32, 34, 4, 36, 38, 1, 6, 20, 41, 7, 9, 12, 16]}}
{"prediction": {"error_location": 0.45802855491638184, "repair_targets": [], "repair_candidates": [0.007045110687613487, 0.03178516402840614, 0.020492708310484886, 0.002453048713505268, 0.029249807819724083, 0.03888949379324913, 0.045350681990385056, 0.028352970257401466, 0.3762916922569275, 0.010290591977536678, 0.017153015360236168, 0.13625861704349518, 0.011724334210157394, 0.0005778307095170021, 0.010110646486282349, 0.0036715182941406965, 0.0030593066476285458, 0.0005723042413592339, 0.0010542611125856638, 0.011990024708211422, 0.004960937891155481, 0.0010940073989331722, 0.08156091719865799, 0.11860224604606628, 0.002165238605812192, 0.0028012851253151894, 0.002144529949873686, 0.00020671916718129069, 9.10479502636008e-05], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 15:55:01.370433", "n_pass": [475, 67, 49], "n_token": 51, "loss": [0.7900827527046204, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "cmd", "stdout", "stderr", "stdin", "wait", "cmd", "pyline", "wait", "pyline", "+=", "(", "pyline", "#NEWLINE#", "cmd_", ",", "pyline", "#INDENT#", "cmd_", "=", "cmd", "#NEWLINE#", "#UNINDENT#", "sproc", "=", "subprocess", "cmd_", ",", "stdout", "=", "stdout", ",", "stderr", "=", "stderr", ",", "stdin", "=", "stdin", "if", "wait", "cmd", "is", "stop_at", "stop_at", "#INDENT#", "sproc", ")", "sproc", "return", "sproc"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [14, 18, 26, 2, 28, 30, 43, 44, 23, 46, 48, 50, 5, 8, 40, 3, 32, 34, 4, 36, 38, 1, 6, 20, 41, 7, 9, 12, 16]}}
{"prediction": {"error_location": 0.4538072645664215, "repair_targets": [], "repair_candidates": [0.0070436978712677956, 0.02644287794828415, 0.017512012273073196, 0.0021854720544070005, 0.03867572173476219, 0.03726214915513992, 0.0402437262237072, 0.029869597405195236, 0.3398491442203522, 0.009037130512297153, 0.01733890175819397, 0.13107594847679138, 0.011811114847660065, 0.0006757130613550544, 0.010439084842801094, 0.0030291059520095587, 0.0034063193015754223, 0.0003203015075996518, 0.0009894692339003086, 0.005844389088451862, 0.00476868636906147, 0.0005289780674502254, 0.08403234928846359, 0.172407329082489, 0.000994388246908784, 0.0014858481008559465, 0.002387609565630555, 0.00023255610722117126, 0.00011038004595320672], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 15:55:01.434802", "n_pass": [476, 68, 50], "n_token": 50, "loss": [0.5897597074508667, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "cmd", "stdout", "stderr", "stdin", "wait", "cmd", "pyline", "wait", "pyline", "+=", "(", "pyline", "#NEWLINE#", "cmd_", ",", "pyline", "#INDENT#", "cmd_", "=", "cmd", "#NEWLINE#", "#UNINDENT#", "sproc", "=", "subprocess", "cmd_", ",", "stdout", "=", "stdout", ",", "stderr", "=", "stderr", ",", "stdin", "=", "stdin", "if", "wait", "cmd", "is", "stop_at", "stop_at", "sproc", ")", "sproc", "return", "sproc"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [14, 18, 26, 2, 28, 30, 43, 44, 23, 45, 47, 49, 5, 8, 40, 3, 32, 34, 4, 36, 38, 1, 6, 20, 41, 7, 9, 12, 16]}}
{"prediction": {"error_location": 0.5544604659080505, "repair_targets": [], "repair_candidates": [0.007039179094135761, 0.03292497247457504, 0.01482944842427969, 0.0034057525917887688, 0.09632963687181473, 0.035937923938035965, 0.02792096510529518, 0.0389154814183712, 0.3182480037212372, 0.007343647535890341, 0.011046262457966805, 0.10213957726955414, 0.02257196605205536, 0.0003096054424531758, 0.016861997544765472, 0.0027066278271377087, 0.004319414030760527, 0.0013481162022799253, 0.0015743476105853915, 0.014178969897329807, 0.009027880616486073, 0.0005316426395438612, 0.0804995447397232, 0.14062729477882385, 0.0016386385541409254, 0.0034087130334228277, 0.0023992303758859634, 0.0016132168238982558, 0.00030191283440217376], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 15:55:01.499552", "n_pass": [478, 69, 51], "n_token": 49, "loss": [0.5360217094421387, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "cmd", "stdout", "stderr", "stdin", "wait", "cmd", "pyline", "wait", "pyline", "+=", "(", "pyline", "#NEWLINE#", "cmd_", ",", "pyline", "#INDENT#", "cmd_", "=", "cmd", "#NEWLINE#", "#UNINDENT#", "sproc", "=", "subprocess", "cmd_", ",", "stdout", "=", "stdout", ",", "stderr", "=", "stderr", ",", "stdin", "=", "stdin", "if", "wait", "cmd", "is", "stop_at", "stop_at", "sproc", "sproc", "return", "sproc"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [14, 18, 26, 2, 28, 30, 43, 44, 23, 45, 46, 48, 5, 8, 40, 3, 32, 34, 4, 36, 38, 1, 6, 20, 41, 7, 9, 12, 16]}}
{"prediction": {"error_location": 0.5850712656974792, "repair_targets": [], "repair_candidates": [0.010814362205564976, 0.027819233015179634, 0.0204961858689785, 0.005144430324435234, 0.1532687544822693, 0.0352630577981472, 0.03213411569595337, 0.0519837811589241, 0.24528150260448456, 0.008536580950021744, 0.011673146858811378, 0.09828124195337296, 0.024966424331068993, 0.0002832271275110543, 0.03223316743969917, 0.0022378182038664818, 0.005563197657465935, 0.000876458827406168, 0.001998893218114972, 0.010770213790237904, 0.01060496550053358, 0.001216956297867, 0.01926422119140625, 0.1805654615163803, 0.0012276619672775269, 0.0013577488716691732, 0.0028208098374307156, 0.0015240864595398307, 0.0017922900151461363], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 15:55:01.565425", "n_pass": [480, 70, 52], "n_token": 48, "loss": [0.3794967830181122, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "cmd", "stdout", "stderr", "stdin", "wait", "cmd", "pyline", "wait", "pyline", "+=", "(", "pyline", "#NEWLINE#", "cmd_", ",", "pyline", "#INDENT#", "cmd_", "=", "cmd", "#NEWLINE#", "#UNINDENT#", "sproc", "=", "subprocess", "cmd_", ",", "stdout", "=", "stdout", ",", "stderr", "=", "stderr", ",", "stdin", "=", "stdin", "if", "wait", "cmd", "is", "stop_at", "stop_at", "sproc", "sproc", "sproc"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [14, 18, 26, 2, 28, 30, 43, 44, 23, 45, 46, 47, 5, 8, 40, 3, 32, 34, 4, 36, 38, 1, 6, 20, 41, 7, 9, 12, 16]}}
{"prediction": {"error_location": 0.6842055320739746, "repair_targets": [], "repair_candidates": [0.008699738420546055, 0.020975308492779732, 0.01679326966404915, 0.0031204207334667444, 0.13893865048885345, 0.02539055235683918, 0.017503179609775543, 0.05363837257027626, 0.22241555154323578, 0.004831341560930014, 0.010189584456384182, 0.16931100189685822, 0.01607009954750538, 0.0005817447672598064, 0.018151264637708664, 0.0007072520675137639, 0.00723126158118248, 0.0004952950403094292, 0.0019487106474116445, 0.007873201742768288, 0.006898046005517244, 2.3668715584790334e-05, 0.11728466302156448, 0.12736286222934723, 0.0002453351335134357, 0.00023496623907703906, 0.0008504579309374094, 0.0005829862784594297, 0.0016511857975274324], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 15:55:01.630015", "n_pass": [492, 71, 53], "n_token": 47, "loss": [0.4081461727619171, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "cmd", "stdout", "stderr", "stdin", "wait", "cmd", "pyline", "wait", "pyline", "(", "pyline", "#NEWLINE#", "cmd_", ",", "pyline", "#INDENT#", "cmd_", "=", "cmd", "#NEWLINE#", "#UNINDENT#", "sproc", "=", "subprocess", "cmd_", ",", "stdout", "=", "stdout", ",", "stderr", "=", "stderr", ",", "stdin", "=", "stdin", "if", "wait", "cmd", "is", "stop_at", "stop_at", "sproc", "sproc", "sproc"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [13, 17, 25, 2, 27, 29, 42, 43, 22, 44, 45, 46, 5, 8, 39, 3, 31, 33, 4, 35, 37, 1, 6, 19, 40, 7, 9, 11, 15]}}
{"prediction": {"error_location": 0.664881706237793, "repair_targets": [], "repair_candidates": [0.011247804388403893, 0.0116503881290555, 0.011169634759426117, 0.015263558365404606, 0.01881824992597103, 0.021503765136003494, 0.06331454962491989, 0.03205353766679764, 0.04419993236660957, 0.05623926594853401, 0.01062770839780569, 0.354445219039917, 0.01955888606607914, 0.0020131452474743128, 0.020818255841732025, 0.0010864665964618325, 0.020293863490223885, 0.0012640302302315831, 0.004537839442491531, 0.009637398645281792, 0.012007178738713264, 0.0001554854097776115, 0.027838001027703285, 0.21964283287525177, 0.0008469491731375456, 0.0007645278819836676, 0.0033025103621184826, 0.000768001249525696, 0.004930985625833273], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 15:55:01.693733", "n_pass": [493, 72, 54], "n_token": 46, "loss": [0.4061446189880371, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "cmd", "stdout", "stderr", "stdin", "wait", "cmd", "pyline", "wait", "pyline", "pyline", "#NEWLINE#", "cmd_", ",", "pyline", "#INDENT#", "cmd_", "=", "cmd", "#NEWLINE#", "#UNINDENT#", "sproc", "=", "subprocess", "cmd_", ",", "stdout", "=", "stdout", ",", "stderr", "=", "stderr", ",", "stdin", "=", "stdin", "if", "wait", "cmd", "is", "stop_at", "stop_at", "sproc", "sproc", "sproc"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [12, 16, 24, 2, 26, 28, 41, 42, 21, 43, 44, 45, 5, 8, 38, 3, 30, 32, 4, 34, 36, 1, 6, 18, 39, 7, 9, 10, 14]}}
{"prediction": {"error_location": 0.6662137508392334, "repair_targets": [], "repair_candidates": [0.0030485941097140312, 0.00244498485699296, 0.027977926656603813, 0.0010448303073644638, 0.0017573949880897999, 0.009292745031416416, 0.004693392664194107, 0.0015885576140135527, 0.0217323899269104, 0.3173321783542633, 0.004079016856849194, 0.3636574447154999, 0.006751959212124348, 0.0002771108120214194, 0.01796959899365902, 0.0003377538232598454, 0.008856438100337982, 0.00028346513863652945, 0.001857208670116961, 0.0018459709826856852, 0.004282190464437008, 4.583913687383756e-05, 0.008453349582850933, 0.18070334196090698, 0.000416319613577798, 0.0001040799033944495, 0.0018342494731768966, 0.0041623469442129135, 0.003169333329424262], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 15:55:01.758063", "n_pass": [495, 73, 55], "n_token": 45, "loss": [0.5996147394180298, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "cmd", "stdout", "stderr", "stdin", "wait", "cmd", "pyline", "wait", "pyline", "pyline", "cmd_", ",", "pyline", "#INDENT#", "cmd_", "=", "cmd", "#NEWLINE#", "#UNINDENT#", "sproc", "=", "subprocess", "cmd_", ",", "stdout", "=", "stdout", ",", "stderr", "=", "stderr", ",", "stdin", "=", "stdin", "if", "wait", "cmd", "is", "stop_at", "stop_at", "sproc", "sproc", "sproc"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [11, 15, 23, 2, 25, 27, 40, 41, 20, 42, 43, 44, 5, 8, 37, 3, 29, 31, 4, 33, 35, 1, 6, 17, 38, 7, 9, 10, 13]}}
{"prediction": {"error_location": 0.5490230917930603, "repair_targets": [], "repair_candidates": [0.002729651518166065, 0.012493305839598179, 0.10562362521886826, 0.0011224464979022741, 0.004251995589584112, 0.009965193457901478, 0.0045884884893894196, 0.002361162332817912, 0.01033821888267994, 0.38184496760368347, 0.005059856455773115, 0.31450366973876953, 0.012394296936690807, 4.947066190652549e-05, 0.01267748512327671, 0.00048178547876887023, 0.002741605509072542, 0.00040141979116015136, 0.0006757353548891842, 0.0015401286073029041, 0.0033449141774326563, 0.00010980602382915094, 0.004530740901827812, 0.10110858082771301, 0.0002454854839015752, 0.000302756525343284, 0.0017697153380140662, 0.0024342313408851624, 0.0003091644903179258], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 15:55:01.823927", "n_pass": [497, 74, 56], "n_token": 44, "loss": [0.34143710136413574, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "cmd", "stdout", "stderr", "stdin", "wait", "cmd", "pyline", "wait", "pyline", "pyline", "cmd_", "pyline", "#INDENT#", "cmd_", "=", "cmd", "#NEWLINE#", "#UNINDENT#", "sproc", "=", "subprocess", "cmd_", ",", "stdout", "=", "stdout", ",", "stderr", "=", "stderr", ",", "stdin", "=", "stdin", "if", "wait", "cmd", "is", "stop_at", "stop_at", "sproc", "sproc", "sproc"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [11, 14, 22, 2, 24, 26, 39, 40, 19, 41, 42, 43, 5, 8, 36, 3, 28, 30, 4, 32, 34, 1, 6, 16, 37, 7, 9, 10, 12]}}
{"prediction": {"error_location": 0.7107481360435486, "repair_targets": [], "repair_candidates": [0.004666638094931841, 0.013012893497943878, 0.06467204540967941, 0.0002788409765344113, 0.012570583261549473, 0.0063044545240700245, 0.030270522460341454, 0.002221414353698492, 0.016061585396528244, 0.053573448210954666, 0.0037533235736191273, 0.7178111672401428, 0.011324605904519558, 0.00035234488314017653, 0.011075129732489586, 0.0006603506044484675, 0.0019516044994816184, 0.00038268489879556, 0.000735288776922971, 0.002441556192934513, 0.00336706661619246, 0.0002498782705515623, 0.003166244365274906, 0.03456024080514908, 0.00024074941757135093, 0.0002577092091087252, 0.0018593475688248873, 0.001922583905979991, 0.00025567738339304924], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 15:55:01.888380", "n_pass": [499, 75, 57], "n_token": 43, "loss": [0.7028945684432983, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "cmd", "stdout", "stderr", "stdin", "wait", "cmd", "pyline", "wait", "pyline", "pyline", "cmd_", "pyline", "cmd_", "=", "cmd", "#NEWLINE#", "#UNINDENT#", "sproc", "=", "subprocess", "cmd_", ",", "stdout", "=", "stdout", ",", "stderr", "=", "stderr", ",", "stdin", "=", "stdin", "if", "wait", "cmd", "is", "stop_at", "stop_at", "sproc", "sproc", "sproc"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [11, 13, 21, 2, 23, 25, 38, 39, 18, 40, 41, 42, 5, 8, 35, 3, 27, 29, 4, 31, 33, 1, 6, 15, 36, 7, 9, 10, 12]}}
{"prediction": {"error_location": 0.49514997005462646, "repair_targets": [], "repair_candidates": [0.00041937586502172053, 0.0009728697477839887, 0.02181108668446541, 2.737583599810023e-05, 0.000476135581266135, 0.0007127411081455648, 0.005974442698061466, 0.000520265894010663, 0.006535723339766264, 0.04704662039875984, 0.0006690846639685333, 0.9054413437843323, 0.000823222566395998, 3.9834605559008196e-05, 0.0014564496232196689, 0.0001639479596633464, 0.00013315332762431353, 3.907315112883225e-05, 4.0429473301628605e-05, 0.00021370247122831643, 0.000243903006776236, 0.00012377955135889351, 0.000684923492372036, 0.004843536764383316, 2.0329118342488073e-05, 3.0995426641311496e-05, 0.0002377915516262874, 0.00011939601245103404, 0.00017849110008683056], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 15:55:01.952836", "n_pass": [501, 76, 58], "n_token": 42, "loss": [0.7301566004753113, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "cmd", "stdout", "stderr", "stdin", "wait", "cmd", "pyline", "wait", "pyline", "pyline", "cmd_", "pyline", "cmd_", "cmd", "#NEWLINE#", "#UNINDENT#", "sproc", "=", "subprocess", "cmd_", ",", "stdout", "=", "stdout", ",", "stderr", "=", "stderr", ",", "stdin", "=", "stdin", "if", "wait", "cmd", "is", "stop_at", "stop_at", "sproc", "sproc", "sproc"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [11, 13, 20, 2, 22, 24, 37, 38, 17, 39, 40, 41, 5, 8, 34, 3, 26, 28, 4, 30, 32, 1, 6, 14, 35, 7, 9, 10, 12]}}
{"prediction": {"error_location": 0.4818335175514221, "repair_targets": [], "repair_candidates": [0.004673406481742859, 0.009472713805735111, 0.2942259609699249, 0.0007319801370613277, 0.00529487757012248, 0.02366831712424755, 0.08036716282367706, 0.008196703158318996, 0.06611183285713196, 0.07840140163898468, 0.00537157291546464, 0.18196919560432434, 0.00800935085862875, 0.024721045047044754, 0.009160610847175121, 0.004212893545627594, 0.004467559512704611, 0.0018124529160559177, 0.0013635361101478338, 0.008389993570744991, 0.005098083522170782, 0.0008994344971142709, 0.003173927078023553, 0.16599680483341217, 0.00034965123631991446, 0.0005856017814949155, 0.0008497632225044072, 1.8507271306589246e-05, 0.0024057391565293074], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 15:55:02.016922", "n_pass": [503, 77, 59], "n_token": 41, "loss": [0.6555259823799133, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "cmd", "stdout", "stderr", "stdin", "wait", "cmd", "pyline", "wait", "pyline", "pyline", "cmd_", "pyline", "cmd_", "cmd", "#UNINDENT#", "sproc", "=", "subprocess", "cmd_", ",", "stdout", "=", "stdout", ",", "stderr", "=", "stderr", ",", "stdin", "=", "stdin", "if", "wait", "cmd", "is", "stop_at", "stop_at", "sproc", "sproc", "sproc"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [11, 13, 19, 2, 21, 23, 36, 37, 16, 38, 39, 40, 5, 8, 33, 3, 25, 27, 4, 29, 31, 1, 6, 14, 34, 7, 9, 10, 12]}}
{"prediction": {"error_location": 0.5191689133644104, "repair_targets": [], "repair_candidates": [0.0037752571515738964, 0.003563823876902461, 0.09539765119552612, 0.0002241684851469472, 0.003926638513803482, 0.08391906321048737, 0.047507088631391525, 0.004212497267872095, 0.03249765560030937, 0.07189597189426422, 0.0023963807616382837, 0.25173038244247437, 0.007127564866095781, 0.10548679530620575, 0.026090050116181374, 0.0021559293381869793, 0.005807764362543821, 7.24819183233194e-05, 0.0022650861646980047, 0.0009285271517001092, 0.007711116224527359, 0.00011931435437873006, 0.0025220809038728476, 0.2356184720993042, 0.0001026998579618521, 0.00021954940166324377, 0.0003204322711098939, 3.571448542061262e-05, 0.002369869966059923], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 15:55:02.145577", "n_pass": [506, 79, 60], "n_token": 40, "loss": [0.6547566056251526, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "cmd", "stdout", "stderr", "stdin", "wait", "cmd", "pyline", "wait", "pyline", "pyline", "cmd_", "pyline", "cmd_", "cmd", "#UNINDENT#", "sproc", "subprocess", "cmd_", ",", "stdout", "=", "stdout", ",", "stderr", "=", "stderr", ",", "stdin", "=", "stdin", "if", "wait", "cmd", "is", "stop_at", "stop_at", "sproc", "sproc", "sproc"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [11, 13, 18, 2, 20, 22, 35, 36, 16, 37, 38, 39, 5, 8, 32, 3, 24, 26, 4, 28, 30, 1, 6, 14, 33, 7, 9, 10, 12]}}
{"prediction": {"error_location": 0.5195684432983398, "repair_targets": [], "repair_candidates": [0.005710622761398554, 0.0010750560322776437, 0.008956694975495338, 0.00014450996241066605, 0.003077390370890498, 0.024807991459965706, 0.05963556841015816, 0.004447586368769407, 0.03678947314620018, 0.08979668468236923, 0.00123418343719095, 0.5546005964279175, 0.005418478045612574, 0.06152181327342987, 0.0006064860499463975, 0.0015166389057412744, 0.003130207769572735, 0.0001020983254420571, 0.0017397092888131738, 0.00033218119642697275, 0.0032548606395721436, 6.429466884583235e-05, 0.00498134084045887, 0.12563763558864594, 0.00011147413169965148, 0.00019507041724864393, 0.0006744912243448198, 6.342851702356711e-05, 0.0003734339843504131], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 15:55:02.209933", "n_pass": [507, 80, 61], "n_token": 39, "loss": [0.3595924973487854, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "cmd", "stdout", "stderr", "stdin", "wait", "cmd", "pyline", "wait", "pyline", "pyline", "cmd_", "pyline", "cmd_", "cmd", "#UNINDENT#", "sproc", "cmd_", ",", "stdout", "=", "stdout", ",", "stderr", "=", "stderr", ",", "stdin", "=", "stdin", "if", "wait", "cmd", "is", "stop_at", "stop_at", "sproc", "sproc", "sproc"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [11, 13, 17, 2, 19, 21, 34, 35, 16, 36, 37, 38, 5, 8, 31, 3, 23, 25, 4, 27, 29, 1, 6, 14, 32, 7, 9, 10, 12]}}
{"prediction": {"error_location": 0.6979606747627258, "repair_targets": [], "repair_candidates": [0.0045996615663170815, 0.006061058957129717, 0.01998179778456688, 0.0002717727911658585, 0.003383689559996128, 0.03875838965177536, 0.08605483919382095, 0.007815901190042496, 0.046736229211091995, 0.11206842213869095, 0.0015983418561518192, 0.5462436676025391, 0.003555961651727557, 0.023971768096089363, 0.004591301549226046, 0.005295915063470602, 0.004169071093201637, 0.0003859539865516126, 0.0030825731810182333, 0.0014409578870981932, 0.006813988089561462, 0.00020205318287480623, 0.005993339233100414, 0.0649658665060997, 0.00011148821067763492, 0.0002437621878925711, 0.00032364987418986857, 1.1977530448348261e-05, 0.0012665612157434225], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 15:55:02.274369", "n_pass": [509, 81, 62], "n_token": 38, "loss": [0.25211602449417114, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "cmd", "stdout", "stderr", "stdin", "wait", "cmd", "pyline", "wait", "pyline", "pyline", "cmd_", "pyline", "cmd_", "cmd", "#UNINDENT#", "sproc", "cmd_", "stdout", "=", "stdout", ",", "stderr", "=", "stderr", ",", "stdin", "=", "stdin", "if", "wait", "cmd", "is", "stop_at", "stop_at", "sproc", "sproc", "sproc"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [11, 13, 17, 2, 18, 20, 33, 34, 16, 35, 36, 37, 5, 8, 30, 3, 22, 24, 4, 26, 28, 1, 6, 14, 31, 7, 9, 10, 12]}}
{"prediction": {"error_location": 0.7771545052528381, "repair_targets": [], "repair_candidates": [0.00849122554063797, 0.009107478894293308, 0.004511045292019844, 0.0008842850802466273, 0.006790531799197197, 0.002978333504870534, 0.06453763693571091, 0.009026867337524891, 0.0434921570122242, 0.1211622878909111, 0.0010763457976281643, 0.4583113193511963, 0.004773586522787809, 0.036332014948129654, 0.025554345920681953, 0.04245993494987488, 0.004446515813469887, 0.0017523460555821657, 0.004677481949329376, 0.004465037956833839, 0.008332662284374237, 0.0006984074716456234, 0.021051159128546715, 0.10584326833486557, 0.00028939987532794476, 0.0006491105305030942, 0.005068215075880289, 0.00025069009279832244, 0.0029862686060369015], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 15:55:02.340297", "n_pass": [511, 82, 63], "n_token": 37, "loss": [0.40576714277267456, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "cmd", "stdout", "stderr", "stdin", "wait", "cmd", "pyline", "wait", "pyline", "pyline", "cmd_", "pyline", "cmd_", "cmd", "#UNINDENT#", "sproc", "cmd_", "stdout", "stdout", ",", "stderr", "=", "stderr", ",", "stdin", "=", "stdin", "if", "wait", "cmd", "is", "stop_at", "stop_at", "sproc", "sproc", "sproc"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [11, 13, 17, 2, 18, 19, 32, 33, 16, 34, 35, 36, 5, 8, 29, 3, 21, 23, 4, 25, 27, 1, 6, 14, 30, 7, 9, 10, 12]}}
{"prediction": {"error_location": 0.6664654016494751, "repair_targets": [], "repair_candidates": [0.006502917036414146, 0.00094767683185637, 0.008300439454615116, 0.0007006635423749685, 0.006897117011249065, 0.002601523883640766, 0.0891975611448288, 0.014194549061357975, 0.07442937046289444, 0.13625863194465637, 0.00392643827944994, 0.3354157507419586, 0.004892411641776562, 0.006122482940554619, 0.002143525518476963, 0.007364165037870407, 0.03140054643154144, 0.03643381968140602, 0.020527765154838562, 0.006232823710888624, 0.051676999777555466, 0.0014310558326542377, 0.08737807720899582, 0.05401746556162834, 0.0017925563734024763, 0.004530330654233694, 0.0012075967388227582, 4.563167385640554e-05, 0.0034300987608730793], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 15:55:02.404355", "n_pass": [513, 83, 64], "n_token": 36, "loss": [0.21569707989692688, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "cmd", "stdout", "stderr", "stdin", "wait", "cmd", "pyline", "wait", "pyline", "pyline", "cmd_", "pyline", "cmd_", "cmd", "#UNINDENT#", "sproc", "cmd_", "stdout", "stdout", "stderr", "=", "stderr", ",", "stdin", "=", "stdin", "if", "wait", "cmd", "is", "stop_at", "stop_at", "sproc", "sproc", "sproc"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [11, 13, 17, 2, 18, 19, 31, 32, 16, 33, 34, 35, 5, 8, 28, 3, 20, 22, 4, 24, 26, 1, 6, 14, 29, 7, 9, 10, 12]}}
{"prediction": {"error_location": 0.8059794902801514, "repair_targets": [], "repair_candidates": [0.00831711944192648, 0.0004728203930426389, 0.005474214907735586, 0.0004741149314213544, 0.0036320833023637533, 0.003478625789284706, 0.0920390710234642, 0.013610156252980232, 0.07732472568750381, 0.16207118332386017, 0.0036777823697775602, 0.41452527046203613, 0.007131665945053101, 0.010501603595912457, 0.00238745822571218, 0.019795672968029976, 0.010600448586046696, 0.025090981274843216, 0.0046100192703306675, 0.006885486654937267, 0.031308043748140335, 0.0019569117575883865, 0.04252118617296219, 0.043598782271146774, 0.0011689858511090279, 0.003802267136052251, 0.001403977395966649, 2.5035989892785437e-05, 0.0021142661571502686], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 15:55:02.532266", "n_pass": [517, 85, 65], "n_token": 35, "loss": [0.413009375333786, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "cmd", "stdout", "stderr", "stdin", "wait", "cmd", "pyline", "wait", "pyline", "pyline", "cmd_", "pyline", "cmd_", "cmd", "#UNINDENT#", "sproc", "cmd_", "stdout", "stdout", "stderr", "=", "stderr", "stdin", "=", "stdin", "if", "wait", "cmd", "is", "stop_at", "stop_at", "sproc", "sproc", "sproc"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [11, 13, 17, 2, 18, 19, 30, 31, 16, 32, 33, 34, 5, 8, 27, 3, 20, 22, 4, 23, 25, 1, 6, 14, 28, 7, 9, 10, 12]}}
{"prediction": {"error_location": 0.6616561412811279, "repair_targets": [], "repair_candidates": [0.007091638632118702, 0.0029524294659495354, 0.012993797659873962, 0.0004693683295045048, 0.002643492305651307, 0.006803820375353098, 0.05413386970758438, 0.01094542071223259, 0.04784903675317764, 0.10606671124696732, 0.0035429932177066803, 0.2249736785888672, 0.005588879808783531, 0.004813072737306356, 0.0006064854096621275, 0.01747008226811886, 0.005515993572771549, 0.03451446443796158, 0.07386824488639832, 0.14867715537548065, 0.12183181196451187, 0.0024254152085632086, 0.046128835529088974, 0.048900313675403595, 0.0019794388208538294, 0.005545357707887888, 0.000866819464135915, 1.311477717536036e-05, 0.0007882412755861878], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 15:55:02.597767", "n_pass": [519, 86, 66], "n_token": 34, "loss": [0.5052255988121033, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "cmd", "stdout", "stderr", "stdin", "wait", "cmd", "pyline", "wait", "pyline", "pyline", "cmd_", "pyline", "cmd_", "cmd", "#UNINDENT#", "sproc", "cmd_", "stdout", "stdout", "stderr", "=", "stderr", "stdin", "stdin", "if", "wait", "cmd", "is", "stop_at", "stop_at", "sproc", "sproc", "sproc"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [11, 13, 17, 2, 18, 19, 29, 30, 16, 31, 32, 33, 5, 8, 26, 3, 20, 22, 4, 23, 24, 1, 6, 14, 27, 7, 9, 10, 12]}}
{"prediction": {"error_location": 0.6033694744110107, "repair_targets": [], "repair_candidates": [0.011680414900183678, 0.00047971445019356906, 0.014795479364693165, 0.0006926794885657728, 0.003108601551502943, 0.009591293521225452, 0.07077446579933167, 0.014407583512365818, 0.062487758696079254, 0.13566365838050842, 0.0038263520691543818, 0.2830793559551239, 0.005752693396061659, 0.01106943003833294, 0.0015321931568905711, 0.010033817030489445, 0.0049542817287147045, 0.035759709775447845, 0.10817538946866989, 0.06899816542863846, 0.004532553255558014, 0.034458521753549576, 0.03215373679995537, 0.062389716506004333, 0.0015162667259573936, 0.004944671411067247, 0.0022254111245274544, 1.6339137800969183e-05, 0.0008997220429591835], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 15:55:02.661537", "n_pass": [521, 87, 67], "n_token": 33, "loss": [0.4402790367603302, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "cmd", "stdout", "stderr", "stdin", "wait", "cmd", "pyline", "wait", "pyline", "pyline", "cmd_", "pyline", "cmd_", "cmd", "#UNINDENT#", "sproc", "cmd_", "stdout", "stdout", "stderr", "=", "stderr", "stdin", "stdin", "wait", "cmd", "is", "stop_at", "stop_at", "sproc", "sproc", "sproc"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [11, 13, 17, 2, 18, 19, 28, 29, 16, 30, 31, 32, 5, 8, 25, 3, 20, 22, 4, 23, 24, 1, 6, 14, 26, 7, 9, 10, 12]}}
{"prediction": {"error_location": 0.6438568234443665, "repair_targets": [], "repair_candidates": [0.010680872946977615, 0.0006750259199179709, 0.0015220565255731344, 0.0070750415325164795, 0.019607046619057655, 0.004856153856962919, 0.03764982894062996, 0.008099125698208809, 0.035335034132003784, 0.10719723999500275, 0.004094881936907768, 0.23127587139606476, 0.003892862005159259, 0.003489475464448333, 0.00011995717795798555, 0.00401467876508832, 0.002232346450909972, 0.012303797528147697, 0.016823001205921173, 0.015457689762115479, 0.0004963729297742248, 0.0018034318927675486, 0.3393692374229431, 0.12581990659236908, 0.00201164442114532, 0.0014731372939422727, 0.002452586544677615, 8.886089744919445e-06, 0.00016277810209430754], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 15:55:02.725573", "n_pass": [524, 88, 68], "n_token": 32, "loss": [0.9044188261032104, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "cmd", "stdout", "stderr", "stdin", "wait", "cmd", "pyline", "wait", "pyline", "pyline", "cmd_", "pyline", "cmd_", "cmd", "#UNINDENT#", "sproc", "cmd_", "stdout", "stdout", "stderr", "=", "stderr", "stdin", "stdin", "wait", "cmd", "stop_at", "stop_at", "sproc", "sproc", "sproc"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [11, 13, 17, 2, 18, 19, 27, 28, 16, 29, 30, 31, 5, 8, 25, 3, 20, 22, 4, 23, 24, 1, 6, 14, 26, 7, 9, 10, 12]}}
{"prediction": {"error_location": 0.40477707982063293, "repair_targets": [], "repair_candidates": [0.0346427857875824, 0.0009155906154774129, 0.0013710128841921687, 0.015576363541185856, 0.011048461310565472, 0.049803026020526886, 0.036456361413002014, 0.00926367100328207, 0.03357502073049545, 0.05974933132529259, 0.0027920876163989305, 0.20937760174274445, 0.002615514909848571, 0.4422544836997986, 0.022393452003598213, 0.00015146912483032793, 0.00023309151583816856, 0.0015387870371341705, 0.005995491985231638, 0.02054889313876629, 1.9743863958865404e-05, 2.469793616910465e-05, 0.0026898214127868414, 0.01334837730973959, 0.0031471706461161375, 0.0016034803120419383, 0.009576207026839256, 0.005582173354923725, 0.003705814480781555], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 15:55:02.791295", "n_pass": [545, 89, 69], "n_token": 31, "loss": [0.472134530544281, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "cmd", "stdout", "stderr", "stdin", "wait", "cmd", "pyline", "wait", "pyline", "pyline", "cmd_", "pyline", "cmd_", "cmd", "sproc", "cmd_", "stdout", "stdout", "stderr", "=", "stderr", "stdin", "stdin", "wait", "cmd", "stop_at", "stop_at", "sproc", "sproc", "sproc"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [11, 13, 16, 2, 17, 18, 26, 27, 15, 28, 29, 30, 5, 8, 24, 3, 19, 21, 4, 22, 23, 1, 6, 14, 25, 7, 9, 10, 12]}}
{"prediction": {"error_location": 0.6236695647239685, "repair_targets": [], "repair_candidates": [0.014353951439261436, 0.006320199929177761, 0.005910252220928669, 0.006715209688991308, 0.003555034752935171, 0.01051583606749773, 0.009481113404035568, 0.0029709518421441317, 0.009558729827404022, 0.007930312305688858, 9.161033085547388e-05, 0.12376658618450165, 2.7981597668258473e-05, 0.5840855836868286, 0.14433707296848297, 2.7767020583269186e-05, 0.001206755987368524, 0.003342166543006897, 0.002721474738791585, 0.004275898449122906, 2.8584090614458546e-05, 6.320922693703324e-05, 0.0010690827621147037, 0.004490741528570652, 0.0018522668397054076, 0.0008782887598499656, 0.020026251673698425, 0.01682402938604355, 0.013573041185736656], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 15:55:02.856636", "n_pass": [551, 90, 70], "n_token": 30, "loss": [0.012070705182850361, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "cmd", "stdout", "stderr", "stdin", "wait", "cmd", "pyline", "wait", "pyline", "pyline", "cmd_", "pyline", "cmd_", "cmd", "sproc", "cmd_", "stdout", "stdout", "stderr", "stderr", "stdin", "stdin", "wait", "cmd", "stop_at", "stop_at", "sproc", "sproc", "sproc"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [11, 13, 16, 2, 17, 18, 25, 26, 15, 27, 28, 29, 5, 8, 23, 3, 19, 20, 4, 21, 22, 1, 6, 14, 24, 7, 9, 10, 12]}}
{"prediction": {"error_location": 0.9880019426345825, "repair_targets": [], "repair_candidates": [0.03943857550621033, 0.014766606502234936, 0.009417824447154999, 0.010393049567937851, 0.0061876969411969185, 0.008708875626325607, 0.01127361599355936, 0.006099104881286621, 0.0121614346280694, 0.01905594952404499, 0.0029232960660010576, 0.19357988238334656, 0.0018737770151346922, 0.4860419034957886, 0.10103391855955124, 0.0008295106235891581, 0.0013314778916537762, 0.0017600265564396977, 0.005079115275293589, 0.005507607012987137, 0.005797893740236759, 0.0044425008818507195, 0.0027692788280546665, 0.00492130545899272, 0.0066835349425673485, 0.005386705975979567, 0.013363991864025593, 0.010467428714036942, 0.0087041100487113], "target_probs": 0.0}}




Minimal simplified tokens:

['#NEWLINE#', 'cmd', 'stdout', 'stderr', 'stdin', 'wait', 'cmd', 'pyline', 'wait', 'pyline', 'pyline', 'cmd_', 'pyline', 'cmd_', 'cmd', 'sproc', 'cmd_', 'stdout', 'stdout', 'stderr', 'stderr', 'stdin', 'stdin', 'wait', 'cmd', 'stop_at', 'stop_at', 'sproc', 'sproc', 'sproc']
