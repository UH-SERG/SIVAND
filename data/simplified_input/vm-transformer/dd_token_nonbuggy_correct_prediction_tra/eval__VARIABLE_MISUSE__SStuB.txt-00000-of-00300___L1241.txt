
Original sample:

{"has_bug": false, "bug_kind": 0, "bug_kind_name": "NONE", "source_tokens": ["#NEWLINE#", "def test_ccode_inline_function(", ")", ":", "#NEWLINE#", "#INDENT#", "x", "=", "symbols", "(", "'x'", ")", "#NEWLINE#", "g", "=", "implemented_function", "(", "'g'", ",", "Lambda", "(", "x", ",", "(", "2", "*", "x", ")", ")", ")", "#NEWLINE#", "assert", "(", "ccode", "(", "g", "(", "x", ")", ")", "==", "'2*x'", ")", "#NEWLINE#", "g", "=", "implemented_function", "(", "'g'", ",", "Lambda", "(", "x", ",", "(", "(", "2", "*", "x", ")", "/", "Catalan", ")", ")", ")", "#NEWLINE#", "assert", "(", "ccode", "(", "g", "(", "x", ")", ")", "==", "(", "'double const Catalan = %s;\\n2*x/Catalan'", "%", "Catalan", ".", "n", "(", ")", ")", ")", "#NEWLINE#", "A", "=", "IndexedBase", "(", "'A'", ")", "#NEWLINE#", "i", "=", "Idx", "(", "'i'", ",", "symbols", "(", "'n'", ",", "integer", "=", "True", ")", ")", "#NEWLINE#", "g", "=", "implemented_function", "(", "'g'", ",", "Lambda", "(", "x", ",", "(", "(", "x", "*", "(", "1", "+", "x", ")", ")", "*", "(", "2", "+", "x", ")", ")", ")", ")", "#NEWLINE#", "assert", "(", "ccode", "(", "g", "(", "A", "[", "i", "]", ")", ",", "assign_to", "=", "A", "[", "i", "]", ")", "==", "'for (int i=0; i<n; i++){\\n   A[i] = (A[i] + 1)*(A[i] + 2)*A[i];\\n}'", ")"], "error_location": [0], "repair_targets": [], "repair_candidates": [94, 148, 156, 6, 21, 26, 37, 52, 58, 72, 118, 122, 127, 134, 13, 35, 44, 70, 110, 144, 87, 146, 154], "provenances": [{"datasetProvenance": {"datasetName": "ETHPy150Open", "filepath": "sympy/sympy/sympy/printing/tests/test_ccode.py", "license": "bsd-3-clause", "note": "license: manual_eval"}}], "txt_file": "eval__VARIABLE_MISUSE__SStuB.txt-00000-of-00300", "js_count": 1241, "results": {"model": "transformer", "prob": {"loc": [[0.7329419255256653, 2.561670044087805e-06, 8.718274102648138e-08, 9.774112186278217e-08, 1.2374279378946085e-07, 9.014568291831893e-08, 1.4838328752375674e-06, 2.9369859433359125e-08, 6.26487093313699e-08, 1.233015183288444e-07, 1.8998538280357025e-06, 7.332398865855794e-08, 6.700872745568631e-08, 1.1810144314949866e-05, 2.6628722338273292e-08, 7.392685574814095e-08, 9.809064493992992e-08, 5.37447078841069e-07, 7.317715500221311e-08, 3.5075974125220455e-08, 5.1003517853587255e-08, 4.595121936290525e-05, 2.0361724750728172e-08, 3.143572513408799e-08, 7.993101462488994e-06, 2.7074850805774986e-08, 0.00017495782230980694, 5.703109096089065e-08, 3.27821325640798e-08, 2.8227807646885594e-08, 1.5271484699042048e-07, 1.2122389136948186e-07, 4.1683552609583785e-08, 1.7016225228871917e-07, 7.08827201378881e-08, 1.4718496458954178e-05, 4.882020334662229e-07, 0.0006661706138402224, 1.621728102918496e-07, 1.6678677994264035e-08, 7.544044677842976e-08, 1.589902353771322e-06, 5.512284815267776e-07, 2.9241957122394524e-07, 1.6207386579480954e-05, 4.382460971896762e-08, 2.0036900139075442e-07, 1.8779068966523482e-07, 4.765040102938656e-06, 2.555327398567897e-07, 6.737757018981938e-08, 9.301900405489505e-08, 0.00022226608416531235, 4.312411050477749e-08, 3.0964535824296036e-08, 2.2212336148186296e-07, 1.797441473172512e-05, 8.606716050962859e-08, 0.000172460509929806, 3.4091343081854575e-08, 6.651732320506198e-08, 3.672458433356951e-06, 2.553417743911268e-07, 2.0797301658603828e-07, 1.7046615141680377e-07, 7.913079684840341e-07, 3.714591230163933e-07, 6.427472243331067e-08, 4.2000726807600586e-07, 1.1433494506718489e-07, 1.9318282284075394e-05, 3.765007079437055e-07, 0.0009119306923821568, 3.5538090514819487e-07, 8.158395559121345e-08, 3.2041938879956433e-07, 3.287620131686708e-07, 6.579807632078882e-06, 2.3655295535718324e-06, 1.0227247457805788e-06, 5.374317311179766e-07, 1.4033132345048216e-07, 9.86585746431956e-07, 1.888167389552109e-06, 8.132422522066918e-07, 7.027120432212541e-07, 5.550862738346041e-07, 1.7268499732381315e-06, 2.586104699275893e-07, 8.420968100608661e-08, 2.12087570616859e-06, 7.914246452855878e-06, 1.3106484857416945e-06, 1.5391105989692733e-06, 2.1831758658663603e-06, 2.5896537181324675e-07, 8.798844675084183e-08, 1.1108774060630822e-06, 5.5827672440500464e-06, 1.021724528982304e-06, 5.796125179813316e-08, 1.1499483889565454e-06, 1.5506842828472145e-05, 1.0543657253947458e-06, 9.512245924270246e-07, 3.6053285157322534e-07, 3.696548901643837e-06, 9.446938520341064e-07, 7.576378493467928e-07, 1.0585953305053408e-06, 4.732629895443097e-05, 2.7672129476741247e-07, 4.572076193198882e-07, 5.535865170713805e-07, 1.0209556421614252e-05, 8.204152095458994e-07, 2.0213377638356178e-07, 1.311683945459663e-06, 0.007653747219592333, 1.024572213736974e-07, 2.970106152133667e-07, 9.159386991086649e-07, 0.004636365920305252, 1.7860611478681676e-07, 4.0771249132376397e-07, 2.0516838048934005e-05, 7.048114412100404e-07, 0.0075064837001264095, 7.858181447772949e-07, 1.7786024386623467e-07, 2.547854478507361e-07, 2.256152669133371e-07, 0.0004696917603723705, 9.022381846079952e-07, 0.004909893963485956, 1.899855647025106e-06, 8.033538847485033e-07, 7.681683200644329e-07, 8.402617481806374e-07, 1.4540646589011885e-06, 6.117519433246343e-07, 3.173167328895943e-07, 1.1525389709277079e-05, 1.1416132110753097e-06, 0.000187768237083219, 7.352173270191997e-06, 0.10335277020931244, 1.9197288565919735e-05, 0.0369950570166111, 2.0502313873294042e-06, 9.91169031294703e-07, 3.8061381246734527e-07, 5.814289579575416e-06, 1.7426574459022959e-06, 0.08863724768161774, 1.0113038115378004e-05, 0.010149596258997917, 1.2335674455243861e-06, 8.943397347138671e-07, 1.2786010756826727e-06, 2.4334925910807215e-05, 4.878476829617284e-06]], "pointer": [[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.05219472572207451, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.033327531069517136, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.012275944463908672, 0.0, 0.0, 0.0, 0.0, 0.015461876057088375, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.00023740630422253162, 0.0, 0.030516691505908966, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.07669716328382492, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.023069996386766434, 0.0, 0.0, 0.0, 0.0, 0.0, 0.016360372304916382, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 9.026511543197557e-05, 0.0, 0.04876381531357765, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.03772691637277603, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.14412100613117218, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.2370242327451706, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.02987823821604252, 0.0, 0.0, 0.0, 0.06384336948394775, 0.0, 0.0, 0.0, 0.0, 0.04782993346452713, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0692642405629158, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0008586655021645129, 0.0, 0.0002956395619548857, 0.0, 0.024233035743236542, 0.0, 0.0, 0.0, 0.0, 0.0, 0.00038735283305868506, 0.0, 0.035541653633117676, 0.0, 0.0, 0.0, 0.0, 0.0]], "target": [0.0]}, "loss": [0.3106888234615326, 0.0], "acc": [1.0, 0.0, 0.0, 0.0]}}


Trace of simplified code(s):

{"result": {"time": "2021-02-11 15:32:28.767639", "n_pass": [1, 1, 1], "n_token": 162, "loss": [0.3106888234615326, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def test_ccode_inline_function(", ")", ":", "#NEWLINE#", "#INDENT#", "x", "=", "symbols", "(", "'x'", ")", "#NEWLINE#", "g", "=", "implemented_function", "(", "'g'", ",", "Lambda", "(", "x", ",", "(", "2", "*", "x", ")", ")", ")", "#NEWLINE#", "assert", "(", "ccode", "(", "g", "(", "x", ")", ")", "==", "'2*x'", ")", "#NEWLINE#", "g", "=", "implemented_function", "(", "'g'", ",", "Lambda", "(", "x", ",", "(", "(", "2", "*", "x", ")", "/", "Catalan", ")", ")", ")", "#NEWLINE#", "assert", "(", "ccode", "(", "g", "(", "x", ")", ")", "==", "(", "'double const Catalan = %s;\\n2*x/Catalan'", "%", "Catalan", ".", "n", "(", ")", ")", ")", "#NEWLINE#", "A", "=", "IndexedBase", "(", "'A'", ")", "#NEWLINE#", "i", "=", "Idx", "(", "'i'", ",", "symbols", "(", "'n'", ",", "integer", "=", "True", ")", ")", "#NEWLINE#", "g", "=", "implemented_function", "(", "'g'", ",", "Lambda", "(", "x", ",", "(", "(", "x", "*", "(", "1", "+", "x", ")", ")", "*", "(", "2", "+", "x", ")", ")", ")", ")", "#NEWLINE#", "assert", "(", "ccode", "(", "g", "(", "A", "[", "i", "]", ")", ",", "assign_to", "=", "A", "[", "i", "]", ")", "==", "'for (int i=0; i<n; i++){\\n   A[i] = (A[i] + 1)*(A[i] + 2)*A[i];\\n}'", ")"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [94, 148, 156, 6, 21, 26, 37, 52, 58, 72, 118, 122, 127, 134, 13, 35, 44, 70, 110, 144, 87, 146, 154]}}
{"prediction": {"error_location": 0.7329419255256653, "repair_targets": [], "repair_candidates": [0.05219472572207451, 0.033327531069517136, 0.012275944463908672, 0.015461876057088375, 0.00023740630422253162, 0.030516691505908966, 0.07669716328382492, 0.023069996386766434, 0.016360372304916382, 9.026511543197557e-05, 0.04876381531357765, 0.03772691637277603, 0.14412100613117218, 0.2370242327451706, 0.02987823821604252, 0.06384336948394775, 0.04782993346452713, 0.0692642405629158, 0.0008586655021645129, 0.0002956395619548857, 0.024233035743236542, 0.00038735283305868506, 0.035541653633117676], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 15:32:28.903766", "n_pass": [54, 3, 2], "n_token": 152, "loss": [0.2667015492916107, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def test_ccode_inline_function(", ")", ":", "#NEWLINE#", "#INDENT#", "x", "=", "symbols", "(", "'x'", ")", "#NEWLINE#", "g", "=", "implemented_function", "(", "'g'", ",", "Lambda", "(", "x", ",", "(", "2", "*", "x", ")", ")", ")", "#NEWLINE#", "assert", "(", "ccode", "(", "g", "(", "x", ")", ")", "==", "'2*x'", ")", "#NEWLINE#", "g", "=", "implemented_function", "(", "'g'", ",", "Lambda", "(", "x", ",", "(", "(", "2", "*", "x", ")", "/", "Catalan", ")", ")", ")", "#NEWLINE#", "assert", "(", "ccode", "(", "g", "(", "x", ")", ")", "==", "(", "'double const Catalan = %s;\\n2*x/Catalan'", "%", "Catalan", ".", "n", "(", ")", ")", ")", "#NEWLINE#", "A", "=", "IndexedBase", "(", "'A'", ")", "#NEWLINE#", "i", "=", "Idx", "(", "'i'", ",", "g", "=", "implemented_function", "(", "'g'", ",", "Lambda", "(", "x", ",", "(", "(", "x", "*", "(", "1", "+", "x", ")", ")", "*", "(", "2", "+", "x", ")", ")", ")", ")", "#NEWLINE#", "assert", "(", "ccode", "(", "g", "(", "A", "[", "i", "]", ")", ",", "assign_to", "=", "A", "[", "i", "]", ")", "==", "'for (int i=0; i<n; i++){\\n   A[i] = (A[i] + 1)*(A[i] + 2)*A[i];\\n}'", ")"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [94, 138, 146, 6, 21, 26, 37, 52, 58, 72, 108, 112, 117, 124, 13, 35, 44, 70, 100, 134, 87, 136, 144]}}
{"prediction": {"error_location": 0.7659018635749817, "repair_targets": [], "repair_candidates": [0.0509202666580677, 0.04184873029589653, 0.015161648392677307, 0.01907712034881115, 0.0002988662163261324, 0.0329001285135746, 0.1184246614575386, 0.03147244453430176, 0.02235405333340168, 0.00021075383119750768, 0.05068013072013855, 0.04713424667716026, 0.15141990780830383, 0.13116219639778137, 0.02859216183423996, 0.07951999455690384, 0.07333698868751526, 0.056096531450748444, 0.003888476639986038, 0.0002831141173373908, 0.01087843906134367, 0.0002572854282334447, 0.03408188000321388], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 15:32:28.971603", "n_pass": [65, 4, 3], "n_token": 142, "loss": [0.24896755814552307, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def test_ccode_inline_function(", ")", ":", "#NEWLINE#", "#INDENT#", "x", "=", "symbols", "(", "'x'", ")", "#NEWLINE#", "g", "=", "implemented_function", "(", "'g'", ",", "Lambda", "(", "x", ",", "(", "2", "*", "x", ")", ")", ")", "#NEWLINE#", "assert", "(", "ccode", "(", "g", "(", "x", ")", ")", "==", "'2*x'", ")", "#NEWLINE#", "g", "=", "implemented_function", "(", "'g'", ",", "Lambda", "(", "x", ",", "(", "(", "2", "*", "x", ")", "g", "(", "x", ")", ")", "==", "(", "'double const Catalan = %s;\\n2*x/Catalan'", "%", "Catalan", ".", "n", "(", ")", ")", ")", "#NEWLINE#", "A", "=", "IndexedBase", "(", "'A'", ")", "#NEWLINE#", "i", "=", "Idx", "(", "'i'", ",", "g", "=", "implemented_function", "(", "'g'", ",", "Lambda", "(", "x", ",", "(", "(", "x", "*", "(", "1", "+", "x", ")", ")", "*", "(", "2", "+", "x", ")", ")", ")", ")", "#NEWLINE#", "assert", "(", "ccode", "(", "g", "(", "A", "[", "i", "]", ")", ",", "assign_to", "=", "A", "[", "i", "]", ")", "==", "'for (int i=0; i<n; i++){\\n   A[i] = (A[i] + 1)*(A[i] + 2)*A[i];\\n}'", ")"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [84, 128, 136, 6, 21, 26, 37, 52, 58, 62, 98, 102, 107, 114, 13, 35, 44, 60, 90, 124, 77, 126, 134]}}
{"prediction": {"error_location": 0.7796053290367126, "repair_targets": [], "repair_candidates": [0.04896939545869827, 0.08123784512281418, 0.006374901160597801, 0.014126614667475224, 0.0007789513329043984, 0.013476484455168247, 0.2929091155529022, 0.013389945961534977, 0.03715239465236664, 0.008917671628296375, 0.0315689817070961, 0.05481827259063721, 0.14094892144203186, 0.13081566989421844, 0.0046401419676840305, 0.010554063133895397, 0.0150901535525918, 0.04684897139668465, 0.00327321351505816, 0.0003594050940591842, 0.01956230401992798, 0.0003533642739057541, 0.02383318543434143], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 15:32:29.039590", "n_pass": [109, 5, 4], "n_token": 137, "loss": [0.4420545995235443, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def test_ccode_inline_function(", ")", ":", "#NEWLINE#", "#INDENT#", "x", "=", "symbols", "(", "'x'", ")", "#NEWLINE#", "g", "=", "implemented_function", "(", "'g'", ",", "Lambda", "(", "x", ",", "(", "2", "*", "x", ")", ")", ")", "#NEWLINE#", "assert", "(", "ccode", "(", "g", "(", "x", ")", ")", "==", "'2*x'", ")", "#NEWLINE#", "g", "=", "implemented_function", "(", "'g'", ",", "Lambda", "(", "x", ",", "(", "(", "2", "*", "x", ")", "g", "(", "x", ")", ")", ".", "n", "(", ")", ")", ")", "#NEWLINE#", "A", "=", "IndexedBase", "(", "'A'", ")", "#NEWLINE#", "i", "=", "Idx", "(", "'i'", ",", "g", "=", "implemented_function", "(", "'g'", ",", "Lambda", "(", "x", ",", "(", "(", "x", "*", "(", "1", "+", "x", ")", ")", "*", "(", "2", "+", "x", ")", ")", ")", ")", "#NEWLINE#", "assert", "(", "ccode", "(", "g", "(", "A", "[", "i", "]", ")", ",", "assign_to", "=", "A", "[", "i", "]", ")", "==", "'for (int i=0; i<n; i++){\\n   A[i] = (A[i] + 1)*(A[i] + 2)*A[i];\\n}'", ")"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [79, 123, 131, 6, 21, 26, 37, 52, 58, 62, 93, 97, 102, 109, 13, 35, 44, 60, 85, 119, 72, 121, 129]}}
{"prediction": {"error_location": 0.6427144408226013, "repair_targets": [], "repair_candidates": [0.03415841981768608, 0.05389773100614548, 0.006175701972097158, 0.01516022253781557, 0.0005413672770373523, 0.016914445906877518, 0.4795188009738922, 0.012245267629623413, 0.021189875900745392, 0.004223370924592018, 0.011895534582436085, 0.03302672505378723, 0.10346567630767822, 0.11587978154420853, 0.0019283514702692628, 0.005996149033308029, 0.012964648194611073, 0.036581069231033325, 0.002281966619193554, 0.00010467690299265087, 0.014857946895062923, 0.0001906834659166634, 0.016801591962575912], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 15:32:29.105168", "n_pass": [110, 6, 5], "n_token": 132, "loss": [0.4285337030887604, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def test_ccode_inline_function(", ")", ":", "#NEWLINE#", "#INDENT#", "x", "=", "symbols", "(", "'x'", ")", "#NEWLINE#", "g", "=", "implemented_function", "(", "'g'", ",", "Lambda", "(", "x", ",", "(", "2", "*", "x", ")", ")", ")", "#NEWLINE#", "assert", "(", "ccode", "(", "g", "(", "x", ")", ")", "==", "'2*x'", ")", "#NEWLINE#", "g", "=", "implemented_function", "(", "'g'", ",", "Lambda", "(", "x", ",", "(", "(", "2", "*", "x", ")", "g", "(", "x", ")", ")", ")", "#NEWLINE#", "A", "=", "IndexedBase", "(", "'A'", ")", "#NEWLINE#", "i", "=", "Idx", "(", "'i'", ",", "g", "=", "implemented_function", "(", "'g'", ",", "Lambda", "(", "x", ",", "(", "(", "x", "*", "(", "1", "+", "x", ")", ")", "*", "(", "2", "+", "x", ")", ")", ")", ")", "#NEWLINE#", "assert", "(", "ccode", "(", "g", "(", "A", "[", "i", "]", ")", ",", "assign_to", "=", "A", "[", "i", "]", ")", "==", "'for (int i=0; i<n; i++){\\n   A[i] = (A[i] + 1)*(A[i] + 2)*A[i];\\n}'", ")"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [74, 118, 126, 6, 21, 26, 37, 52, 58, 62, 88, 92, 97, 104, 13, 35, 44, 60, 80, 114, 67, 116, 124]}}
{"prediction": {"error_location": 0.6514636278152466, "repair_targets": [], "repair_candidates": [0.038354650139808655, 0.037593111395835876, 0.010826337151229382, 0.011613020673394203, 0.00038605034933425486, 0.02943725325167179, 0.49235624074935913, 0.021812979131937027, 0.01721218042075634, 0.00234988029114902, 0.024438897147774696, 0.02905440703034401, 0.07551560550928116, 0.054615993052721024, 0.012051671743392944, 0.024561682716012, 0.0361819714307785, 0.04958329722285271, 0.0015515423147007823, 0.00018189092224929482, 0.011312415823340416, 0.00014910836762282997, 0.01885986328125], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 15:32:29.169174", "n_pass": [113, 7, 6], "n_token": 127, "loss": [1.1016277074813843, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def test_ccode_inline_function(", ")", ":", "#NEWLINE#", "#INDENT#", "x", "=", "symbols", "(", "'x'", ")", "#NEWLINE#", "g", "=", "implemented_function", "(", "'g'", ",", "Lambda", "(", "x", ",", "(", "2", "*", "x", ")", ")", ")", "#NEWLINE#", "assert", "(", "ccode", "(", "g", "(", "x", ")", ")", "==", "'2*x'", ")", "#NEWLINE#", "g", "=", "implemented_function", "(", "'g'", ",", "Lambda", "(", "x", ",", "(", "(", "2", "*", "x", ")", "g", "(", "x", ")", ")", ")", "#NEWLINE#", "A", "=", "IndexedBase", "(", "'A'", ")", "#NEWLINE#", "i", "g", "=", "implemented_function", "(", "'g'", ",", "Lambda", "(", "x", ",", "(", "(", "x", "*", "(", "1", "+", "x", ")", ")", "*", "(", "2", "+", "x", ")", ")", ")", ")", "#NEWLINE#", "assert", "(", "ccode", "(", "g", "(", "A", "[", "i", "]", ")", ",", "assign_to", "=", "A", "[", "i", "]", ")", "==", "'for (int i=0; i<n; i++){\\n   A[i] = (A[i] + 1)*(A[i] + 2)*A[i];\\n}'", ")"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [74, 113, 121, 6, 21, 26, 37, 52, 58, 62, 83, 87, 92, 99, 13, 35, 44, 60, 75, 109, 67, 111, 119]}}
{"prediction": {"error_location": 0.33232975006103516, "repair_targets": [], "repair_candidates": [0.018512791022658348, 0.024243906140327454, 0.005568581633269787, 0.0058523258194327354, 6.444382597692311e-05, 0.015304491855204105, 0.3036501109600067, 0.01707242615520954, 0.008340391330420971, 0.00023019433137960732, 0.014846947975456715, 0.009630685672163963, 0.020166950300335884, 0.48944810032844543, 0.0109025239944458, 0.015537084080278873, 0.016131840646266937, 0.015310237184166908, 0.0010224860161542892, 4.615626312443055e-05, 0.0012782171834260225, 4.1922161472029984e-05, 0.006797173526138067], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 15:32:29.234268", "n_pass": [119, 8, 7], "n_token": 122, "loss": [0.7891820073127747, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def test_ccode_inline_function(", ")", ":", "#NEWLINE#", "#INDENT#", "x", "=", "symbols", "(", "'x'", ")", "#NEWLINE#", "g", "=", "implemented_function", "(", "'g'", ",", "Lambda", "(", "x", ",", "(", "2", "*", "x", ")", ")", ")", "#NEWLINE#", "assert", "(", "ccode", "(", "g", "(", "x", ")", ")", "==", "'2*x'", ")", "#NEWLINE#", "g", "=", "implemented_function", "(", "'g'", ",", "Lambda", "(", "x", ",", "(", "(", "2", "*", "x", ")", "g", "(", "x", ")", ")", ")", "#NEWLINE#", "A", "=", "IndexedBase", "(", "'A'", ")", "#NEWLINE#", "i", "g", "=", "implemented_function", "(", "'g'", ",", "Lambda", "(", "x", ",", "(", "(", "x", "*", "(", "1", "+", "x", ")", ")", "*", "(", "2", "+", "x", "assert", "(", "ccode", "(", "g", "(", "A", "[", "i", "]", ")", ",", "assign_to", "=", "A", "[", "i", "]", ")", "==", "'for (int i=0; i<n; i++){\\n   A[i] = (A[i] + 1)*(A[i] + 2)*A[i];\\n}'", ")"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [74, 108, 116, 6, 21, 26, 37, 52, 58, 62, 83, 87, 92, 99, 13, 35, 44, 60, 75, 104, 67, 106, 114]}}
{"prediction": {"error_location": 0.4542161822319031, "repair_targets": [], "repair_candidates": [0.018417272716760635, 0.021869009360671043, 0.005847319960594177, 0.0069905780255794525, 2.4417378881480545e-05, 0.013321250677108765, 0.21793276071548462, 0.018260037526488304, 0.016823185607790947, 0.00031884387135505676, 0.018744589760899544, 0.014206861145794392, 0.010115087032318115, 0.5362454652786255, 0.004754419904202223, 0.012286379933357239, 0.01234873291105032, 0.06476932018995285, 0.00035057845525443554, 8.175276889232919e-05, 0.0019341276492923498, 0.00017077065422199667, 0.004187238402664661], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 15:32:29.494299", "n_pass": [193, 12, 8], "n_token": 119, "loss": [0.7579311728477478, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def test_ccode_inline_function(", ")", ":", "#NEWLINE#", "#INDENT#", "x", "=", "symbols", "(", "'x'", ")", "#NEWLINE#", "g", "=", "implemented_function", "(", "'g'", ",", "Lambda", "(", "x", ",", "(", "2", "*", "x", ")", ")", ")", "#NEWLINE#", "assert", "(", "ccode", "(", "g", "(", "x", ")", ")", "==", "'2*x'", ")", "#NEWLINE#", "g", "=", "implemented_function", "(", "'g'", ",", "Lambda", "(", "x", ",", "(", "(", "2", "*", "x", ")", "g", "(", "x", ")", ")", ")", "#NEWLINE#", "A", "=", "IndexedBase", "(", "'A'", ")", "#NEWLINE#", "i", "g", "=", "implemented_function", "(", "'g'", ",", "Lambda", "(", "x", ",", "(", "(", "x", "*", "(", "1", "+", "x", ")", ")", "*", "(", "2", "+", "x", "assert", "g", "(", "A", "[", "i", "]", ")", ",", "assign_to", "=", "A", "[", "i", "]", ")", "==", "'for (int i=0; i<n; i++){\\n   A[i] = (A[i] + 1)*(A[i] + 2)*A[i];\\n}'", ")"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [74, 105, 113, 6, 21, 26, 37, 52, 58, 62, 83, 87, 92, 99, 13, 35, 44, 60, 75, 101, 67, 103, 111]}}
{"prediction": {"error_location": 0.4686349034309387, "repair_targets": [], "repair_candidates": [0.024123551324009895, 0.019081758335232735, 0.006310273427516222, 0.01084563322365284, 2.9079263185849413e-05, 0.011176347732543945, 0.1707601100206375, 0.021340735256671906, 0.03202908858656883, 0.0003338820824865252, 0.026677966117858887, 0.030314462259411812, 0.017760001122951508, 0.463692843914032, 0.007381204050034285, 0.02955448254942894, 0.03950944170355797, 0.07794185727834702, 0.0002612049866002053, 0.0004658335819840431, 0.00539974682033062, 0.0004796473076567054, 0.004530844744294882], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 15:32:29.559054", "n_pass": [196, 13, 9], "n_token": 116, "loss": [0.7950071096420288, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def test_ccode_inline_function(", ")", ":", "#NEWLINE#", "#INDENT#", "x", "=", "symbols", "(", "'x'", ")", "#NEWLINE#", "g", "=", "implemented_function", "(", "'g'", ",", "Lambda", "(", "x", ",", "(", "2", "*", "x", ")", ")", ")", "#NEWLINE#", "assert", "(", "ccode", "(", "g", "(", "x", ")", ")", "==", "'2*x'", ")", "#NEWLINE#", "g", "=", "implemented_function", "(", "'g'", ",", "Lambda", "(", "x", ",", "(", "(", "2", "*", "x", ")", "g", "(", "x", ")", ")", ")", "#NEWLINE#", "A", "=", "IndexedBase", "(", "'A'", ")", "#NEWLINE#", "i", "g", "=", "implemented_function", "(", "'g'", ",", "Lambda", "(", "x", ",", "(", "(", "x", "*", "(", "1", "+", "x", ")", ")", "*", "(", "2", "+", "x", "assert", "g", "(", "A", "[", "i", "]", "=", "A", "[", "i", "]", ")", "==", "'for (int i=0; i<n; i++){\\n   A[i] = (A[i] + 1)*(A[i] + 2)*A[i];\\n}'", ")"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [74, 105, 110, 6, 21, 26, 37, 52, 58, 62, 83, 87, 92, 99, 13, 35, 44, 60, 75, 101, 67, 103, 108]}}
{"prediction": {"error_location": 0.4515780210494995, "repair_targets": [], "repair_candidates": [0.02151934988796711, 0.016440093517303467, 0.007869131863117218, 0.011164172552525997, 2.8423884941730648e-05, 0.01198819000273943, 0.1517668068408966, 0.02223188988864422, 0.03237928822636604, 0.0002543843584135175, 0.021523891016840935, 0.029002437368035316, 0.024067489430308342, 0.4710354804992676, 0.0072645749896764755, 0.0344306156039238, 0.03630885109305382, 0.07008876651525497, 0.00038701429730281234, 0.000619719154201448, 0.013794999569654465, 0.0005487156449817121, 0.015285692177712917], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 15:32:29.623014", "n_pass": [199, 14, 10], "n_token": 113, "loss": [0.8113794326782227, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def test_ccode_inline_function(", ")", ":", "#NEWLINE#", "#INDENT#", "x", "=", "symbols", "(", "'x'", ")", "#NEWLINE#", "g", "=", "implemented_function", "(", "'g'", ",", "Lambda", "(", "x", ",", "(", "2", "*", "x", ")", ")", ")", "#NEWLINE#", "assert", "(", "ccode", "(", "g", "(", "x", ")", ")", "==", "'2*x'", ")", "#NEWLINE#", "g", "=", "implemented_function", "(", "'g'", ",", "Lambda", "(", "x", ",", "(", "(", "2", "*", "x", ")", "g", "(", "x", ")", ")", ")", "#NEWLINE#", "A", "=", "IndexedBase", "(", "'A'", ")", "#NEWLINE#", "i", "g", "=", "implemented_function", "(", "'g'", ",", "Lambda", "(", "x", ",", "(", "(", "x", "*", "(", "1", "+", "x", ")", ")", "*", "(", "2", "+", "x", "assert", "g", "(", "A", "[", "i", "]", "=", "A", "[", "i", "]", ")"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [74, 105, 110, 6, 21, 26, 37, 52, 58, 62, 83, 87, 92, 99, 13, 35, 44, 60, 75, 101, 67, 103, 108]}}
{"prediction": {"error_location": 0.4442448019981384, "repair_targets": [], "repair_candidates": [0.020285625010728836, 0.015726421028375626, 0.006850685924291611, 0.00930669717490673, 2.8538193873828277e-05, 0.011372058652341366, 0.12760013341903687, 0.019697749987244606, 0.027832427993416786, 0.00026074989000335336, 0.02094222605228424, 0.025317063555121422, 0.021758658811450005, 0.523002028465271, 0.006097826175391674, 0.027997629716992378, 0.03108690120279789, 0.07762039452791214, 0.0006152289570309222, 0.0005347633850760758, 0.011720515787601471, 0.00036103551974520087, 0.013984682969748974], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 15:32:30.949341", "n_pass": [234, 35, 11], "n_token": 110, "loss": [1.1222708225250244, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def test_ccode_inline_function(", ")", ":", "#NEWLINE#", "#INDENT#", "x", "=", "symbols", "(", "'x'", ")", "#NEWLINE#", "g", "=", "implemented_function", "(", "'g'", ",", "Lambda", "(", "x", ",", "(", "2", "*", "x", ")", ")", ")", "#NEWLINE#", "assert", "(", "ccode", "(", "g", "(", "x", ")", ")", "==", "'2*x'", ")", "#NEWLINE#", "g", "=", "implemented_function", "(", "'g'", ",", "Lambda", "(", "x", ",", "(", "(", "2", "*", "x", ")", "g", "(", "x", ")", ")", ")", "#NEWLINE#", "A", "=", "IndexedBase", "(", "'A'", ")", "#NEWLINE#", "i", "g", "=", "implemented_function", "(", "'g'", "x", ",", "(", "(", "x", "*", "(", "1", "+", "x", ")", ")", "*", "(", "2", "+", "x", "assert", "g", "(", "A", "[", "i", "]", "=", "A", "[", "i", "]", ")"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [74, 102, 107, 6, 21, 26, 37, 52, 58, 62, 80, 84, 89, 96, 13, 35, 44, 60, 75, 98, 67, 100, 105]}}
{"prediction": {"error_location": 0.3255396783351898, "repair_targets": [], "repair_candidates": [0.018532874062657356, 0.014955301769077778, 0.0048770303837955, 0.004147361498326063, 1.5988238374120556e-05, 0.012831386178731918, 0.32686764001846313, 0.013129444792866707, 0.018818756565451622, 5.9401187172625214e-05, 0.011688274331390858, 0.022667139768600464, 0.012462629936635494, 0.40781521797180176, 0.0006936230347491801, 0.006061126012355089, 0.024070754647254944, 0.07791824638843536, 0.0011876096250489354, 0.0008675287826918066, 0.012946849688887596, 0.00018162137712351978, 0.007204138208180666], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 15:32:33.086473", "n_pass": [266, 52, 12], "n_token": 108, "loss": [0.9031424522399902, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def test_ccode_inline_function(", ")", ":", "#NEWLINE#", "#INDENT#", "x", "=", "symbols", "(", "'x'", ")", "#NEWLINE#", "g", "=", "implemented_function", "(", "'g'", ",", "Lambda", "(", "x", ",", "(", "2", "*", "x", ")", ")", ")", "#NEWLINE#", "assert", "(", "ccode", "(", "g", "(", "x", ")", ")", "==", "'2*x'", "g", "=", "implemented_function", "(", "'g'", ",", "Lambda", "(", "x", ",", "(", "(", "2", "*", "x", ")", "g", "(", "x", ")", ")", ")", "#NEWLINE#", "A", "=", "IndexedBase", "(", "'A'", ")", "#NEWLINE#", "i", "g", "=", "implemented_function", "(", "'g'", "x", ",", "(", "(", "x", "*", "(", "1", "+", "x", ")", ")", "*", "(", "2", "+", "x", "assert", "g", "(", "A", "[", "i", "]", "=", "A", "[", "i", "]", ")"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [72, 100, 105, 6, 21, 26, 37, 50, 56, 60, 78, 82, 87, 94, 13, 35, 42, 58, 73, 96, 65, 98, 103]}}
{"prediction": {"error_location": 0.4052940607070923, "repair_targets": [], "repair_candidates": [0.022007619962096214, 0.022674815729260445, 0.004932458978146315, 0.006209937855601311, 0.00014296776498667896, 0.014543384313583374, 0.00115192960947752, 0.016447434201836586, 0.026636727154254913, 0.0005227279616519809, 0.012732114642858505, 0.03256966173648834, 0.013077473267912865, 0.7009201645851135, 0.0005129818455316126, 0.008153356611728668, 0.028032245114445686, 0.061324767768383026, 0.000885319197550416, 0.0010990049922838807, 0.01761781796813011, 0.0002486994781065732, 0.007556517608463764], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 15:32:33.411207", "n_pass": [278, 57, 13], "n_token": 105, "loss": [0.5004079341888428, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def test_ccode_inline_function(", ")", ":", "#NEWLINE#", "#INDENT#", "x", "=", "symbols", "(", "'x'", ")", "#NEWLINE#", "g", "=", "implemented_function", "(", "'g'", ",", "Lambda", "(", "x", ",", "(", "2", "*", "x", ")", ")", ")", "#NEWLINE#", "assert", "(", "ccode", "(", "g", "(", "x", ")", ")", "==", "'2*x'", "g", "=", "implemented_function", "(", "'g'", ",", "Lambda", "(", "x", ",", "(", "(", "2", "*", "x", ")", "g", "(", "x", ")", ")", ")", "#NEWLINE#", "A", "=", "IndexedBase", "(", "'A'", ")", "#NEWLINE#", "i", "g", "=", "x", ",", "(", "(", "x", "*", "(", "1", "+", "x", ")", ")", "*", "(", "2", "+", "x", "assert", "g", "(", "A", "[", "i", "]", "=", "A", "[", "i", "]", ")"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [72, 97, 102, 6, 21, 26, 37, 50, 56, 60, 75, 79, 84, 91, 13, 35, 42, 58, 73, 93, 65, 95, 100]}}
{"prediction": {"error_location": 0.6062833666801453, "repair_targets": [], "repair_candidates": [0.045847151428461075, 0.034090958535671234, 0.00803565513342619, 0.014651692472398281, 0.0004967040149495006, 0.0204829853028059, 0.004427340347319841, 0.03231911361217499, 0.06082047522068024, 0.001628447906114161, 0.03048616275191307, 0.07707411050796509, 0.06477056443691254, 0.25478145480155945, 0.023973336443305016, 0.016463933512568474, 0.06208866089582443, 0.12031618505716324, 0.0010637672385200858, 0.002446594648063183, 0.09861632436513901, 0.0008054097997955978, 0.024312933906912804], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 15:32:33.476567", "n_pass": [281, 58, 14], "n_token": 102, "loss": [0.7153019905090332, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def test_ccode_inline_function(", ")", ":", "#NEWLINE#", "#INDENT#", "x", "=", "symbols", "(", "'x'", ")", "#NEWLINE#", "g", "=", "implemented_function", "(", "'g'", ",", "Lambda", "(", "x", ",", "(", "2", "*", "x", ")", ")", ")", "#NEWLINE#", "assert", "(", "ccode", "(", "g", "(", "x", ")", ")", "==", "'2*x'", "g", "=", "implemented_function", "(", "'g'", ",", "Lambda", "(", "x", ",", "(", "(", "2", "*", "x", ")", "g", "(", "x", ")", ")", ")", "#NEWLINE#", "A", "=", "IndexedBase", "(", "'A'", ")", "#NEWLINE#", "i", "g", "=", "x", ",", "(", "(", "x", "*", "x", ")", ")", "*", "(", "2", "+", "x", "assert", "g", "(", "A", "[", "i", "]", "=", "A", "[", "i", "]", ")"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [72, 94, 99, 6, 21, 26, 37, 50, 56, 60, 75, 79, 81, 88, 13, 35, 42, 58, 73, 90, 65, 92, 97]}}
{"prediction": {"error_location": 0.48904427886009216, "repair_targets": [], "repair_candidates": [0.03389769420027733, 0.041367579251527786, 0.00571042113006115, 0.010317794978618622, 0.001880316762253642, 0.01741517335176468, 0.007262454368174076, 0.022582964971661568, 0.03681435063481331, 0.0037786229513585567, 0.020766988396644592, 0.12841972708702087, 0.06871414184570312, 0.2105993926525116, 0.017833400517702103, 0.006177748553454876, 0.007611572742462158, 0.03506606072187424, 0.003152790479362011, 0.005044764373451471, 0.24568656086921692, 0.002847423544153571, 0.06705203652381897], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 15:32:33.543539", "n_pass": [283, 59, 15], "n_token": 99, "loss": [0.6690955758094788, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def test_ccode_inline_function(", ")", ":", "#NEWLINE#", "#INDENT#", "x", "=", "symbols", "(", "'x'", ")", "#NEWLINE#", "g", "=", "implemented_function", "(", "'g'", ",", "Lambda", "(", "x", ",", "(", "2", "*", "x", ")", ")", ")", "#NEWLINE#", "assert", "(", "ccode", "(", "g", "(", "x", ")", ")", "==", "'2*x'", "g", "=", "implemented_function", "(", "'g'", ",", "Lambda", "(", "x", ",", "(", "(", "2", "*", "x", ")", "g", "(", "x", ")", ")", ")", "#NEWLINE#", "A", "=", "IndexedBase", "(", "'A'", ")", "#NEWLINE#", "i", "g", "=", "x", ",", "(", "(", "x", "*", "x", ")", ")", "+", "x", "assert", "g", "(", "A", "[", "i", "]", "=", "A", "[", "i", "]", ")"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [72, 91, 96, 6, 21, 26, 37, 50, 56, 60, 75, 79, 81, 85, 13, 35, 42, 58, 73, 87, 65, 89, 94]}}
{"prediction": {"error_location": 0.5121715664863586, "repair_targets": [], "repair_candidates": [0.028650429099798203, 0.03711709752678871, 0.00462591415271163, 0.009493175894021988, 0.0021554629784077406, 0.013157522305846214, 0.008869092911481857, 0.018549064174294472, 0.02930682897567749, 0.007420209236443043, 0.016668442636728287, 0.10080023109912872, 0.06105387955904007, 0.34302178025245667, 0.010322533547878265, 0.0031908031087368727, 0.004605199676007032, 0.03754117339849472, 0.0037830055225640535, 0.007313133683055639, 0.1799333691596985, 0.0050299279391765594, 0.06739170104265213], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 15:32:33.609080", "n_pass": [290, 60, 16], "n_token": 97, "loss": [0.7864460349082947, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def test_ccode_inline_function(", "#NEWLINE#", "#INDENT#", "x", "=", "symbols", "(", "'x'", ")", "#NEWLINE#", "g", "=", "implemented_function", "(", "'g'", ",", "Lambda", "(", "x", ",", "(", "2", "*", "x", ")", ")", ")", "#NEWLINE#", "assert", "(", "ccode", "(", "g", "(", "x", ")", ")", "==", "'2*x'", "g", "=", "implemented_function", "(", "'g'", ",", "Lambda", "(", "x", ",", "(", "(", "2", "*", "x", ")", "g", "(", "x", ")", ")", ")", "#NEWLINE#", "A", "=", "IndexedBase", "(", "'A'", ")", "#NEWLINE#", "i", "g", "=", "x", ",", "(", "(", "x", "*", "x", ")", ")", "+", "x", "assert", "g", "(", "A", "[", "i", "]", "=", "A", "[", "i", "]", ")"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [70, 89, 94, 4, 19, 24, 35, 48, 54, 58, 73, 77, 79, 83, 11, 33, 40, 56, 71, 85, 63, 87, 92]}}
{"prediction": {"error_location": 0.4554605185985565, "repair_targets": [], "repair_candidates": [0.024640116840600967, 0.08039125800132751, 0.0012054766993969679, 0.0038663665764033794, 0.017623182386159897, 0.006478240713477135, 0.02808074653148651, 0.004594036377966404, 0.012239138595759869, 0.012453165836632252, 0.007936322130262852, 0.13507764041423798, 0.09931012988090515, 0.3466174006462097, 0.004180253949016333, 0.001165121211670339, 0.0014646878698840737, 0.00986793078482151, 0.0066103641875088215, 0.0075194644741714, 0.11356320977210999, 0.006776950787752867, 0.0683388039469719], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 15:32:33.673834", "n_pass": [291, 61, 17], "n_token": 95, "loss": [0.6594504117965698, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def test_ccode_inline_function(", "x", "=", "symbols", "(", "'x'", ")", "#NEWLINE#", "g", "=", "implemented_function", "(", "'g'", ",", "Lambda", "(", "x", ",", "(", "2", "*", "x", ")", ")", ")", "#NEWLINE#", "assert", "(", "ccode", "(", "g", "(", "x", ")", ")", "==", "'2*x'", "g", "=", "implemented_function", "(", "'g'", ",", "Lambda", "(", "x", ",", "(", "(", "2", "*", "x", ")", "g", "(", "x", ")", ")", ")", "#NEWLINE#", "A", "=", "IndexedBase", "(", "'A'", ")", "#NEWLINE#", "i", "g", "=", "x", ",", "(", "(", "x", "*", "x", ")", ")", "+", "x", "assert", "g", "(", "A", "[", "i", "]", "=", "A", "[", "i", "]", ")"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [68, 87, 92, 2, 17, 22, 33, 46, 52, 56, 71, 75, 77, 81, 9, 31, 38, 54, 69, 83, 61, 85, 90]}}
{"prediction": {"error_location": 0.5171354413032532, "repair_targets": [], "repair_candidates": [0.026284856721758842, 0.07354549318552017, 0.0058213695883750916, 0.011711936444044113, 0.003241133876144886, 0.008991341106593609, 0.02587713859975338, 0.007137012202292681, 0.022610977292060852, 0.0016498904442414641, 0.012190807610750198, 0.14286065101623535, 0.11409486830234528, 0.34994402527809143, 0.008630199357867241, 0.0025450249668210745, 0.004657616838812828, 0.020207393914461136, 0.004875327926129103, 0.0019924533553421497, 0.06601844727993011, 0.002918244805186987, 0.08219379931688309], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 15:32:33.738392", "n_pass": [293, 62, 18], "n_token": 93, "loss": [0.6113371849060059, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def test_ccode_inline_function(", "x", "=", "'x'", ")", "#NEWLINE#", "g", "=", "implemented_function", "(", "'g'", ",", "Lambda", "(", "x", ",", "(", "2", "*", "x", ")", ")", ")", "#NEWLINE#", "assert", "(", "ccode", "(", "g", "(", "x", ")", ")", "==", "'2*x'", "g", "=", "implemented_function", "(", "'g'", ",", "Lambda", "(", "x", ",", "(", "(", "2", "*", "x", ")", "g", "(", "x", ")", ")", ")", "#NEWLINE#", "A", "=", "IndexedBase", "(", "'A'", ")", "#NEWLINE#", "i", "g", "=", "x", ",", "(", "(", "x", "*", "x", ")", ")", "+", "x", "assert", "g", "(", "A", "[", "i", "]", "=", "A", "[", "i", "]", ")"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [66, 85, 90, 2, 15, 20, 31, 44, 50, 54, 69, 73, 75, 79, 7, 29, 36, 52, 67, 81, 59, 83, 88]}}
{"prediction": {"error_location": 0.5426247715950012, "repair_targets": [], "repair_candidates": [0.03446770831942558, 0.09298481047153473, 0.009581588208675385, 0.010356887243688107, 0.0010638120584189892, 0.01063223835080862, 0.014105432666838169, 0.009528050199151039, 0.02862258441746235, 0.0009376807720400393, 0.013465765863656998, 0.1437777578830719, 0.1298222541809082, 0.27420029044151306, 0.007604679558426142, 0.0019236673833802342, 0.004019502550363541, 0.03781618922948837, 0.0032996039371937513, 0.0005950901540927589, 0.06075722724199295, 0.00108899490442127, 0.1093481183052063], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 15:32:33.804799", "n_pass": [294, 63, 19], "n_token": 91, "loss": [0.7236846089363098, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def test_ccode_inline_function(", "x", "=", "#NEWLINE#", "g", "=", "implemented_function", "(", "'g'", ",", "Lambda", "(", "x", ",", "(", "2", "*", "x", ")", ")", ")", "#NEWLINE#", "assert", "(", "ccode", "(", "g", "(", "x", ")", ")", "==", "'2*x'", "g", "=", "implemented_function", "(", "'g'", ",", "Lambda", "(", "x", ",", "(", "(", "2", "*", "x", ")", "g", "(", "x", ")", ")", ")", "#NEWLINE#", "A", "=", "IndexedBase", "(", "'A'", ")", "#NEWLINE#", "i", "g", "=", "x", ",", "(", "(", "x", "*", "x", ")", ")", "+", "x", "assert", "g", "(", "A", "[", "i", "]", "=", "A", "[", "i", "]", ")"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [64, 83, 88, 2, 13, 18, 29, 42, 48, 52, 67, 71, 73, 77, 5, 27, 34, 50, 65, 79, 57, 81, 86]}}
{"prediction": {"error_location": 0.48496195673942566, "repair_targets": [], "repair_candidates": [0.02961335889995098, 0.18256260454654694, 0.0049735791981220245, 0.005201426334679127, 0.0013866213848814368, 0.0070709348656237125, 0.02781156450510025, 0.005975342821329832, 0.02333781309425831, 0.0036046316381543875, 0.01026410423219204, 0.15350060164928436, 0.2120608538389206, 0.20986533164978027, 0.0036940251011401415, 0.0011671552201732993, 0.0024400141555815935, 0.008021977730095387, 0.002101991791278124, 0.0022487230598926544, 0.03369467705488205, 0.0031660133972764015, 0.06623668223619461], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 15:32:33.868516", "n_pass": [296, 64, 20], "n_token": 89, "loss": [0.6588857769966125, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def test_ccode_inline_function(", "x", "=", "#NEWLINE#", "g", "(", "'g'", ",", "Lambda", "(", "x", ",", "(", "2", "*", "x", ")", ")", ")", "#NEWLINE#", "assert", "(", "ccode", "(", "g", "(", "x", ")", ")", "==", "'2*x'", "g", "=", "implemented_function", "(", "'g'", ",", "Lambda", "(", "x", ",", "(", "(", "2", "*", "x", ")", "g", "(", "x", ")", ")", ")", "#NEWLINE#", "A", "=", "IndexedBase", "(", "'A'", ")", "#NEWLINE#", "i", "g", "=", "x", ",", "(", "(", "x", "*", "x", ")", ")", "+", "x", "assert", "g", "(", "A", "[", "i", "]", "=", "A", "[", "i", "]", ")"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [62, 81, 86, 2, 11, 16, 27, 40, 46, 50, 65, 69, 71, 75, 5, 25, 32, 48, 63, 77, 55, 79, 84]}}
{"prediction": {"error_location": 0.5174275636672974, "repair_targets": [], "repair_candidates": [0.03884924575686455, 0.1418139934539795, 0.009270964190363884, 0.006720026955008507, 0.010895510204136372, 0.008775425143539906, 0.056757085025310516, 0.007522631902247667, 0.02583099901676178, 0.03870759159326553, 0.01067475974559784, 0.13530409336090088, 0.20958325266838074, 0.20536307990550995, 0.005557616241276264, 0.0018047080375254154, 0.0023470742162317038, 0.008824072778224945, 0.007591948378831148, 0.0034222009126096964, 0.026134921237826347, 0.0024409957695752382, 0.03580785542726517], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 15:32:33.932273", "n_pass": [297, 65, 21], "n_token": 87, "loss": [1.1835429668426514, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def test_ccode_inline_function(", "x", "=", "#NEWLINE#", "g", ",", "Lambda", "(", "x", ",", "(", "2", "*", "x", ")", ")", ")", "#NEWLINE#", "assert", "(", "ccode", "(", "g", "(", "x", ")", ")", "==", "'2*x'", "g", "=", "implemented_function", "(", "'g'", ",", "Lambda", "(", "x", ",", "(", "(", "2", "*", "x", ")", "g", "(", "x", ")", ")", ")", "#NEWLINE#", "A", "=", "IndexedBase", "(", "'A'", ")", "#NEWLINE#", "i", "g", "=", "x", ",", "(", "(", "x", "*", "x", ")", ")", "+", "x", "assert", "g", "(", "A", "[", "i", "]", "=", "A", "[", "i", "]", ")"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [60, 79, 84, 2, 9, 14, 25, 38, 44, 48, 63, 67, 69, 73, 5, 23, 30, 46, 61, 75, 53, 77, 82]}}
{"prediction": {"error_location": 0.30619192123413086, "repair_targets": [], "repair_candidates": [0.010723887011408806, 0.03004428744316101, 0.005183085333555937, 0.002419088501483202, 0.000401883153244853, 0.0021770147141069174, 0.00865575298666954, 0.002401642734184861, 0.009652170352637768, 0.003945596050471067, 0.0032522915862500668, 0.05639340728521347, 0.07496996968984604, 0.7444442510604858, 0.002280521672219038, 0.001026732032187283, 0.0009880202123895288, 0.003920959308743477, 0.0014313277788460255, 0.0021759686060249805, 0.014416276477277279, 0.0014685437781736255, 0.017627254128456116], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 15:32:33.995869", "n_pass": [298, 66, 22], "n_token": 85, "loss": [0.9647043943405151, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def test_ccode_inline_function(", "x", "=", "#NEWLINE#", "g", "(", "x", ",", "(", "2", "*", "x", ")", ")", ")", "#NEWLINE#", "assert", "(", "ccode", "(", "g", "(", "x", ")", ")", "==", "'2*x'", "g", "=", "implemented_function", "(", "'g'", ",", "Lambda", "(", "x", ",", "(", "(", "2", "*", "x", ")", "g", "(", "x", ")", ")", ")", "#NEWLINE#", "A", "=", "IndexedBase", "(", "'A'", ")", "#NEWLINE#", "i", "g", "=", "x", ",", "(", "(", "x", "*", "x", ")", ")", "+", "x", "assert", "g", "(", "A", "[", "i", "]", "=", "A", "[", "i", "]", ")"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [58, 77, 82, 2, 7, 12, 23, 36, 42, 46, 61, 65, 67, 71, 5, 21, 28, 44, 59, 73, 51, 75, 80]}}
{"prediction": {"error_location": 0.38109588623046875, "repair_targets": [], "repair_candidates": [0.01747267134487629, 0.026768915355205536, 0.005076929461210966, 0.0020709573291242123, 0.009989732876420021, 0.0024611586704850197, 0.03968289494514465, 0.0034192148596048355, 0.01572713628411293, 0.019503865391016006, 0.0037388084456324577, 0.09533695876598358, 0.08541221171617508, 0.591584324836731, 0.00554310716688633, 0.0013990759616717696, 0.002332801930606365, 0.0059730433858931065, 0.010603882372379303, 0.00550890015438199, 0.023203380405902863, 0.004103326238691807, 0.023086735978722572], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 15:32:34.062750", "n_pass": [300, 67, 23], "n_token": 83, "loss": [0.581222414970398, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def test_ccode_inline_function(", "x", "=", "#NEWLINE#", "g", "(", "x", "2", "*", "x", ")", ")", ")", "#NEWLINE#", "assert", "(", "ccode", "(", "g", "(", "x", ")", ")", "==", "'2*x'", "g", "=", "implemented_function", "(", "'g'", ",", "Lambda", "(", "x", ",", "(", "(", "2", "*", "x", ")", "g", "(", "x", ")", ")", ")", "#NEWLINE#", "A", "=", "IndexedBase", "(", "'A'", ")", "#NEWLINE#", "i", "g", "=", "x", ",", "(", "(", "x", "*", "x", ")", ")", "+", "x", "assert", "g", "(", "A", "[", "i", "]", "=", "A", "[", "i", "]", ")"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [56, 75, 80, 2, 7, 10, 21, 34, 40, 44, 59, 63, 65, 69, 5, 19, 26, 42, 57, 71, 49, 73, 78]}}
{"prediction": {"error_location": 0.5592143535614014, "repair_targets": [], "repair_candidates": [0.05381535366177559, 0.06192418187856674, 0.017245855182409286, 0.009043971076607704, 0.01395938079804182, 0.005628377199172974, 0.06047016754746437, 0.005798310972750187, 0.041702378541231155, 0.019333206117153168, 0.008577668108046055, 0.20493873953819275, 0.08893723040819168, 0.21444758772850037, 0.027435025200247765, 0.009325764141976833, 0.014086460694670677, 0.02101973257958889, 0.010182952508330345, 0.020510269328951836, 0.04997433349490166, 0.0076344250701367855, 0.03400862216949463], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 15:32:34.126956", "n_pass": [301, 68, 24], "n_token": 81, "loss": [0.5718384385108948, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def test_ccode_inline_function(", "x", "=", "#NEWLINE#", "g", "(", "x", "x", ")", ")", ")", "#NEWLINE#", "assert", "(", "ccode", "(", "g", "(", "x", ")", ")", "==", "'2*x'", "g", "=", "implemented_function", "(", "'g'", ",", "Lambda", "(", "x", ",", "(", "(", "2", "*", "x", ")", "g", "(", "x", ")", ")", ")", "#NEWLINE#", "A", "=", "IndexedBase", "(", "'A'", ")", "#NEWLINE#", "i", "g", "=", "x", ",", "(", "(", "x", "*", "x", ")", ")", "+", "x", "assert", "g", "(", "A", "[", "i", "]", "=", "A", "[", "i", "]", ")"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [54, 73, 78, 2, 7, 8, 19, 32, 38, 42, 57, 61, 63, 67, 5, 17, 24, 40, 55, 69, 47, 71, 76]}}
{"prediction": {"error_location": 0.5644867420196533, "repair_targets": [], "repair_candidates": [0.058139968663454056, 0.0221078023314476, 0.014758816920220852, 0.008087920024991035, 0.011048119515180588, 0.00456045288592577, 0.053024303168058395, 0.006407551467418671, 0.0497402660548687, 0.013378833420574665, 0.008271248079836369, 0.18947654962539673, 0.09715861082077026, 0.22337636351585388, 0.0326240174472332, 0.025484805926680565, 0.03293589502573013, 0.037382822483778, 0.012060612440109253, 0.01441942434757948, 0.055377136915922165, 0.004850283265113831, 0.025328252464532852], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 15:32:34.190451", "n_pass": [303, 69, 25], "n_token": 79, "loss": [0.63218754529953, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def test_ccode_inline_function(", "x", "=", "#NEWLINE#", "g", "(", "x", "x", ")", "#NEWLINE#", "assert", "(", "ccode", "(", "g", "(", "x", ")", ")", "==", "'2*x'", "g", "=", "implemented_function", "(", "'g'", ",", "Lambda", "(", "x", ",", "(", "(", "2", "*", "x", ")", "g", "(", "x", ")", ")", ")", "#NEWLINE#", "A", "=", "IndexedBase", "(", "'A'", ")", "#NEWLINE#", "i", "g", "=", "x", ",", "(", "(", "x", "*", "x", ")", ")", "+", "x", "assert", "g", "(", "A", "[", "i", "]", "=", "A", "[", "i", "]", ")"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [52, 71, 76, 2, 7, 8, 17, 30, 36, 40, 55, 59, 61, 65, 5, 15, 22, 38, 53, 67, 45, 69, 74]}}
{"prediction": {"error_location": 0.5314279794692993, "repair_targets": [], "repair_candidates": [0.05316350236535072, 0.015821995213627815, 0.02592168003320694, 0.005414861720055342, 0.00824978668242693, 0.00417218916118145, 0.03247056528925896, 0.00834769755601883, 0.045847341418266296, 0.007314973045140505, 0.008833165280520916, 0.1323525309562683, 0.08447335660457611, 0.34790387749671936, 0.013636725954711437, 0.020287953317165375, 0.05345931276679039, 0.04089521989226341, 0.010494265705347061, 0.008436538279056549, 0.049833331257104874, 0.004260895773768425, 0.01840832643210888], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 15:32:34.253778", "n_pass": [304, 70, 26], "n_token": 77, "loss": [0.8506781458854675, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def test_ccode_inline_function(", "x", "=", "#NEWLINE#", "g", "(", "x", "x", ")", "(", "ccode", "(", "g", "(", "x", ")", ")", "==", "'2*x'", "g", "=", "implemented_function", "(", "'g'", ",", "Lambda", "(", "x", ",", "(", "(", "2", "*", "x", ")", "g", "(", "x", ")", ")", ")", "#NEWLINE#", "A", "=", "IndexedBase", "(", "'A'", ")", "#NEWLINE#", "i", "g", "=", "x", ",", "(", "(", "x", "*", "x", ")", ")", "+", "x", "assert", "g", "(", "A", "[", "i", "]", "=", "A", "[", "i", "]", ")"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [50, 69, 74, 2, 7, 8, 15, 28, 34, 38, 53, 57, 59, 63, 5, 13, 20, 36, 51, 65, 43, 67, 72]}}
{"prediction": {"error_location": 0.4271251857280731, "repair_targets": [], "repair_candidates": [0.02933943271636963, 0.01993037760257721, 0.03202926367521286, 0.01452683936804533, 0.006858892738819122, 0.002410212531685829, 0.035245444625616074, 0.009264006279408932, 0.030759762972593307, 0.007042400073260069, 0.007553634233772755, 0.08740881085395813, 0.0364140085875988, 0.5191594362258911, 0.004810288082808256, 0.01439481321722269, 0.03808573633432388, 0.03266054764389992, 0.010110131464898586, 0.006910196505486965, 0.037395160645246506, 0.0033213654533028603, 0.014369208365678787], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 15:32:34.320229", "n_pass": [305, 71, 27], "n_token": 75, "loss": [1.0140464305877686, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def test_ccode_inline_function(", "x", "=", "#NEWLINE#", "g", "(", "x", "x", ")", "(", "g", "(", "x", ")", ")", "==", "'2*x'", "g", "=", "implemented_function", "(", "'g'", ",", "Lambda", "(", "x", ",", "(", "(", "2", "*", "x", ")", "g", "(", "x", ")", ")", ")", "#NEWLINE#", "A", "=", "IndexedBase", "(", "'A'", ")", "#NEWLINE#", "i", "g", "=", "x", ",", "(", "(", "x", "*", "x", ")", ")", "+", "x", "assert", "g", "(", "A", "[", "i", "]", "=", "A", "[", "i", "]", ")"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [48, 67, 72, 2, 7, 8, 13, 26, 32, 36, 51, 55, 57, 61, 5, 11, 18, 34, 49, 63, 41, 65, 70]}}
{"prediction": {"error_location": 0.3627481758594513, "repair_targets": [], "repair_candidates": [0.018708623945713043, 0.015355377458035946, 0.025249790400266647, 0.010832388885319233, 0.007489860523492098, 0.0021812738850712776, 0.034490615129470825, 0.005385923199355602, 0.01622192934155464, 0.015358095057308674, 0.004893249832093716, 0.059734225273132324, 0.022994384169578552, 0.6310214996337891, 0.0022904518991708755, 0.010008200071752071, 0.02085183374583721, 0.028568878769874573, 0.008964382112026215, 0.005614225286990404, 0.03603311628103256, 0.0024546412751078606, 0.01529716793447733], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 15:32:34.384357", "n_pass": [308, 72, 28], "n_token": 73, "loss": [1.1603304147720337, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def test_ccode_inline_function(", "x", "=", "#NEWLINE#", "g", "(", "x", "x", ")", "(", "g", "(", "x", "==", "'2*x'", "g", "=", "implemented_function", "(", "'g'", ",", "Lambda", "(", "x", ",", "(", "(", "2", "*", "x", ")", "g", "(", "x", ")", ")", ")", "#NEWLINE#", "A", "=", "IndexedBase", "(", "'A'", ")", "#NEWLINE#", "i", "g", "=", "x", ",", "(", "(", "x", "*", "x", ")", ")", "+", "x", "assert", "g", "(", "A", "[", "i", "]", "=", "A", "[", "i", "]", ")"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [46, 65, 70, 2, 7, 8, 13, 24, 30, 34, 49, 53, 55, 59, 5, 11, 16, 32, 47, 61, 39, 63, 68]}}
{"prediction": {"error_location": 0.313382625579834, "repair_targets": [], "repair_candidates": [0.01577160321176052, 0.01899886131286621, 0.020009037107229233, 0.008629773743450642, 0.007659915369004011, 0.0017710394458845258, 0.0351751409471035, 0.003774171695113182, 0.009303562343120575, 0.02703212946653366, 0.0038904338143765926, 0.05391191691160202, 0.02299417182803154, 0.6414504647254944, 0.001392059144563973, 0.004596243146806955, 0.010582705028355122, 0.022520849481225014, 0.00670965388417244, 0.006005330942571163, 0.048623841255903244, 0.0031696415971964598, 0.02602747641503811], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 15:32:34.511295", "n_pass": [311, 74, 29], "n_token": 70, "loss": [0.918828010559082, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def test_ccode_inline_function(", "x", "=", "#NEWLINE#", "g", "(", "x", "x", ")", "(", "g", "(", "x", "==", "'2*x'", "g", "=", "implemented_function", "Lambda", "(", "x", ",", "(", "(", "2", "*", "x", ")", "g", "(", "x", ")", ")", ")", "#NEWLINE#", "A", "=", "IndexedBase", "(", "'A'", ")", "#NEWLINE#", "i", "g", "=", "x", ",", "(", "(", "x", "*", "x", ")", ")", "+", "x", "assert", "g", "(", "A", "[", "i", "]", "=", "A", "[", "i", "]", ")"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [43, 62, 67, 2, 7, 8, 13, 21, 27, 31, 46, 50, 52, 56, 5, 11, 16, 29, 44, 58, 36, 60, 65]}}
{"prediction": {"error_location": 0.39898642897605896, "repair_targets": [], "repair_candidates": [0.024656027555465698, 0.032848164439201355, 0.03248637914657593, 0.017116278409957886, 0.010261491872370243, 0.005029939580708742, 0.03351853787899017, 0.0031056946609169245, 0.015527748502790928, 0.031293947249650955, 0.010991260409355164, 0.10958018153905869, 0.03941807523369789, 0.3984282612800598, 0.003659238573163748, 0.006827304605394602, 0.013492262922227383, 0.037228815257549286, 0.008240408264100552, 0.009443715214729309, 0.10435661673545837, 0.0033321816008538008, 0.04915742203593254], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 15:32:34.577658", "n_pass": [313, 75, 30], "n_token": 67, "loss": [0.6449132561683655, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def test_ccode_inline_function(", "x", "=", "#NEWLINE#", "g", "(", "x", "x", ")", "(", "g", "(", "x", "==", "'2*x'", "g", "=", "implemented_function", "Lambda", "(", "x", "2", "*", "x", ")", "g", "(", "x", ")", ")", ")", "#NEWLINE#", "A", "=", "IndexedBase", "(", "'A'", ")", "#NEWLINE#", "i", "g", "=", "x", ",", "(", "(", "x", "*", "x", ")", ")", "+", "x", "assert", "g", "(", "A", "[", "i", "]", "=", "A", "[", "i", "]", ")"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [40, 59, 64, 2, 7, 8, 13, 21, 24, 28, 43, 47, 49, 53, 5, 11, 16, 26, 41, 55, 33, 57, 62]}}
{"prediction": {"error_location": 0.5247079730033875, "repair_targets": [], "repair_candidates": [0.04381547123193741, 0.04600001126527786, 0.04367375001311302, 0.029506642371416092, 0.014762789942324162, 0.008521335199475288, 0.05807585269212723, 0.013314181007444859, 0.020752236247062683, 0.018963567912578583, 0.014451587572693825, 0.17255520820617676, 0.08730575442314148, 0.2202930599451065, 0.008302893489599228, 0.01262181717902422, 0.011429764330387115, 0.030528554692864418, 0.004294760059565306, 0.012762089259922504, 0.0686909556388855, 0.00503244623541832, 0.05434518679976463], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 15:32:34.644199", "n_pass": [318, 76, 31], "n_token": 64, "loss": [0.5852733254432678, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def test_ccode_inline_function(", "x", "=", "#NEWLINE#", "g", "(", "x", "x", ")", "(", "g", "(", "x", "==", "'2*x'", "g", "=", "implemented_function", "Lambda", "(", "x", "2", "*", "x", ")", "g", "(", "x", ")", ")", ")", "#NEWLINE#", "A", "'A'", ")", "#NEWLINE#", "i", "g", "=", "x", ",", "(", "(", "x", "*", "x", ")", ")", "+", "x", "assert", "g", "(", "A", "[", "i", "]", "=", "A", "[", "i", "]", ")"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [37, 56, 61, 2, 7, 8, 13, 21, 24, 28, 40, 44, 46, 50, 5, 11, 16, 26, 38, 52, 33, 54, 59]}}
{"prediction": {"error_location": 0.5569536685943604, "repair_targets": [], "repair_candidates": [0.05577491968870163, 0.07489773631095886, 0.0483354851603508, 0.031547680497169495, 0.023716669529676437, 0.010735423304140568, 0.08950252830982208, 0.014822907745838165, 0.021649358794093132, 0.024769019335508347, 0.014565300196409225, 0.09834279119968414, 0.14028184115886688, 0.13750042021274567, 0.010997215285897255, 0.011334204114973545, 0.006965587846934795, 0.019037889316678047, 0.0015667742118239403, 0.005385341122746468, 0.10090148448944092, 0.0074174413457512856, 0.04995202273130417], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 15:32:34.707602", "n_pass": [319, 77, 32], "n_token": 61, "loss": [0.5475630760192871, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def test_ccode_inline_function(", "x", "=", "#NEWLINE#", "g", "(", "x", "x", ")", "(", "g", "(", "x", "==", "'2*x'", "g", "=", "implemented_function", "Lambda", "(", "x", "2", "*", "x", ")", "g", "(", "x", ")", ")", ")", "#NEWLINE#", "A", "i", "g", "=", "x", ",", "(", "(", "x", "*", "x", ")", ")", "+", "x", "assert", "g", "(", "A", "[", "i", "]", "=", "A", "[", "i", "]", ")"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [34, 53, 58, 2, 7, 8, 13, 21, 24, 28, 37, 41, 43, 47, 5, 11, 16, 26, 35, 49, 33, 51, 56]}}
{"prediction": {"error_location": 0.5783575773239136, "repair_targets": [], "repair_candidates": [0.014922255650162697, 0.06132889166474342, 0.010599297471344471, 0.00836930051445961, 0.02810424566268921, 0.002317087259143591, 0.05040660500526428, 0.0022784103639423847, 0.004760243464261293, 0.03602997958660126, 0.0034403514582663774, 0.01073756255209446, 0.004855945706367493, 0.7274887561798096, 0.006139193195849657, 0.0031500787008553743, 0.0014337695902213454, 0.0015603258507326245, 0.0035828810650855303, 0.00043433395330794156, 0.007887804880738258, 0.0005673292325809598, 0.009605332277715206], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 15:32:34.774288", "n_pass": [336, 78, 33], "n_token": 59, "loss": [0.5191875100135803, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def test_ccode_inline_function(", "x", "=", "#NEWLINE#", "g", "(", "x", "x", ")", "(", "g", "(", "x", "g", "=", "implemented_function", "Lambda", "(", "x", "2", "*", "x", ")", "g", "(", "x", ")", ")", ")", "#NEWLINE#", "A", "i", "g", "=", "x", ",", "(", "(", "x", "*", "x", ")", ")", "+", "x", "assert", "g", "(", "A", "[", "i", "]", "=", "A", "[", "i", "]", ")"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [32, 51, 56, 2, 7, 8, 13, 19, 22, 26, 35, 39, 41, 45, 5, 11, 14, 24, 33, 47, 31, 49, 54]}}
{"prediction": {"error_location": 0.5950037240982056, "repair_targets": [], "repair_candidates": [0.020911572501063347, 0.16465216875076294, 0.01754615269601345, 0.012904125265777111, 0.07324206084012985, 0.005940569564700127, 0.07085394859313965, 0.002809926401823759, 0.00874940212816, 0.05861427262425423, 0.0040134829469025135, 0.017474623396992683, 0.008163642138242722, 0.4829092025756836, 0.005544327199459076, 0.003905939171090722, 0.0021068609785288572, 0.0022765484172850847, 0.00907426979392767, 0.0008110473863780499, 0.013829424977302551, 0.0006622746004723012, 0.013004248961806297], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 15:32:34.841125", "n_pass": [404, 79, 34], "n_token": 58, "loss": [0.4776117205619812, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def test_ccode_inline_function(", "x", "=", "#NEWLINE#", "g", "(", "x", "x", ")", "(", "g", "(", "x", "g", "implemented_function", "Lambda", "(", "x", "2", "*", "x", ")", "g", "(", "x", ")", ")", ")", "#NEWLINE#", "A", "i", "g", "=", "x", ",", "(", "(", "x", "*", "x", ")", ")", "+", "x", "assert", "g", "(", "A", "[", "i", "]", "=", "A", "[", "i", "]", ")"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [31, 50, 55, 2, 7, 8, 13, 18, 21, 25, 34, 38, 40, 44, 5, 11, 14, 23, 32, 46, 30, 48, 53]}}
{"prediction": {"error_location": 0.6202629804611206, "repair_targets": [], "repair_candidates": [0.020887866616249084, 0.12431502342224121, 0.01244679931551218, 0.009563974104821682, 0.05756068974733353, 0.002830932382494211, 0.03676687926054001, 0.0017938028322532773, 0.007847145199775696, 0.060530778020620346, 0.0032289084047079086, 0.013400713913142681, 0.006886337883770466, 0.5976766347885132, 0.004346160218119621, 0.0034263317938894033, 0.0015649580163881183, 0.001975307008251548, 0.01007870677858591, 0.0006280623492784798, 0.010536673478782177, 0.0005274605355225503, 0.011179829016327858], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 15:32:34.904816", "n_pass": [405, 80, 35], "n_token": 57, "loss": [0.44527241587638855, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def test_ccode_inline_function(", "x", "=", "#NEWLINE#", "g", "(", "x", "x", ")", "(", "g", "(", "x", "g", "Lambda", "(", "x", "2", "*", "x", ")", "g", "(", "x", ")", ")", ")", "#NEWLINE#", "A", "i", "g", "=", "x", ",", "(", "(", "x", "*", "x", ")", ")", "+", "x", "assert", "g", "(", "A", "[", "i", "]", "=", "A", "[", "i", "]", ")"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [30, 49, 54, 2, 7, 8, 13, 17, 20, 24, 33, 37, 39, 43, 5, 11, 14, 22, 31, 45, 29, 47, 52]}}
{"prediction": {"error_location": 0.6406497955322266, "repair_targets": [], "repair_candidates": [0.01790233515202999, 0.11608187854290009, 0.012096444144845009, 0.008726386353373528, 0.05221100524067879, 0.0030668554827570915, 0.03662288561463356, 0.00233096769079566, 0.008351434022188187, 0.051031701266765594, 0.0033759870566427708, 0.014242766425013542, 0.005872035399079323, 0.6310062408447266, 0.004379393067210913, 0.003224818268790841, 0.0018116376595571637, 0.00201485981233418, 0.010389900766313076, 0.0006025818875059485, 0.006035003811120987, 0.0005495169316418469, 0.008073336444795132], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 15:32:34.970034", "n_pass": [406, 81, 36], "n_token": 56, "loss": [0.4329300820827484, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def test_ccode_inline_function(", "x", "=", "#NEWLINE#", "g", "(", "x", "x", ")", "(", "g", "(", "x", "g", "(", "x", "2", "*", "x", ")", "g", "(", "x", ")", ")", ")", "#NEWLINE#", "A", "i", "g", "=", "x", ",", "(", "(", "x", "*", "x", ")", ")", "+", "x", "assert", "g", "(", "A", "[", "i", "]", "=", "A", "[", "i", "]", ")"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [29, 48, 53, 2, 7, 8, 13, 16, 19, 23, 32, 36, 38, 42, 5, 11, 14, 21, 30, 44, 28, 46, 51]}}
{"prediction": {"error_location": 0.6486057043075562, "repair_targets": [], "repair_candidates": [0.032240595668554306, 0.15457789599895477, 0.01754871942102909, 0.014637322165071964, 0.062383994460105896, 0.005093378946185112, 0.04333318769931793, 0.002458037808537483, 0.012476804666221142, 0.05820372700691223, 0.004448075778782368, 0.02638227678835392, 0.009233430027961731, 0.5121476650238037, 0.00459497282281518, 0.0037176229525357485, 0.0023140355478972197, 0.002423890633508563, 0.013079700991511345, 0.000909055641386658, 0.0066458480432629585, 0.0009549380047246814, 0.01019477378576994], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 15:32:35.033222", "n_pass": [407, 82, 37], "n_token": 55, "loss": [0.5047686100006104, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def test_ccode_inline_function(", "x", "=", "#NEWLINE#", "g", "(", "x", "x", ")", "(", "g", "(", "x", "g", "x", "2", "*", "x", ")", "g", "(", "x", ")", ")", ")", "#NEWLINE#", "A", "i", "g", "=", "x", ",", "(", "(", "x", "*", "x", ")", ")", "+", "x", "assert", "g", "(", "A", "[", "i", "]", "=", "A", "[", "i", "]", ")"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [28, 47, 52, 2, 7, 8, 13, 15, 18, 22, 31, 35, 37, 41, 5, 11, 14, 20, 29, 43, 27, 45, 50]}}
{"prediction": {"error_location": 0.6036452651023865, "repair_targets": [], "repair_candidates": [0.06494638323783875, 0.13641278445720673, 0.029047604650259018, 0.026782317087054253, 0.04577626660466194, 0.005787245463579893, 0.08108537644147873, 0.006890811957418919, 0.028791630640625954, 0.04378627613186836, 0.008988901972770691, 0.04636797681450844, 0.018138496205210686, 0.36491280794143677, 0.013907303102314472, 0.012546353973448277, 0.007762571796774864, 0.0061218105256557465, 0.01427693571895361, 0.002715433482080698, 0.013972343876957893, 0.002321796026080847, 0.018660595640540123], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 15:32:35.096353", "n_pass": [409, 83, 38], "n_token": 54, "loss": [0.5963503122329712, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def test_ccode_inline_function(", "x", "=", "#NEWLINE#", "g", "(", "x", "x", ")", "(", "g", "(", "x", "g", "x", "*", "x", ")", "g", "(", "x", ")", ")", ")", "#NEWLINE#", "A", "i", "g", "=", "x", ",", "(", "(", "x", "*", "x", ")", ")", "+", "x", "assert", "g", "(", "A", "[", "i", "]", "=", "A", "[", "i", "]", ")"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [27, 46, 51, 2, 7, 8, 13, 15, 17, 21, 30, 34, 36, 40, 5, 11, 14, 19, 28, 42, 26, 44, 49]}}
{"prediction": {"error_location": 0.5508183240890503, "repair_targets": [], "repair_candidates": [0.0833326205611229, 0.12975792586803436, 0.037008292973041534, 0.03745807707309723, 0.03631776198744774, 0.006893913261592388, 0.06932565569877625, 0.014207238331437111, 0.021749552339315414, 0.03772589936852455, 0.008253773674368858, 0.049523014575242996, 0.020452292636036873, 0.34780779480934143, 0.019468944519758224, 0.018575133755803108, 0.009564245119690895, 0.007606917060911655, 0.013537795282900333, 0.0023959106765687466, 0.01120707392692566, 0.002348087728023529, 0.015482013113796711], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 15:32:35.159400", "n_pass": [410, 84, 39], "n_token": 53, "loss": [0.7147826552391052, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def test_ccode_inline_function(", "x", "=", "#NEWLINE#", "g", "(", "x", "x", ")", "(", "g", "(", "x", "g", "x", "x", ")", "g", "(", "x", ")", ")", ")", "#NEWLINE#", "A", "i", "g", "=", "x", ",", "(", "(", "x", "*", "x", ")", ")", "+", "x", "assert", "g", "(", "A", "[", "i", "]", "=", "A", "[", "i", "]", ")"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [26, 45, 50, 2, 7, 8, 13, 15, 16, 20, 29, 33, 35, 39, 5, 11, 14, 18, 27, 41, 25, 43, 48]}}
{"prediction": {"error_location": 0.48929840326309204, "repair_targets": [], "repair_candidates": [0.061848871409893036, 0.08480247110128403, 0.026932986453175545, 0.027029141783714294, 0.033593133091926575, 0.006451142020523548, 0.06902945041656494, 0.015589912422001362, 0.028665175661444664, 0.03766453638672829, 0.010390911251306534, 0.04227159917354584, 0.02089310996234417, 0.4062252342700958, 0.022805556654930115, 0.027411436662077904, 0.014890121296048164, 0.010263019241392612, 0.017520317807793617, 0.004479007329791784, 0.013279681093990803, 0.003595679299905896, 0.01436745747923851], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 15:32:35.224966", "n_pass": [412, 85, 40], "n_token": 52, "loss": [0.7577319145202637, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def test_ccode_inline_function(", "x", "=", "#NEWLINE#", "g", "(", "x", "x", ")", "(", "g", "(", "x", "g", "x", "x", "g", "(", "x", ")", ")", ")", "#NEWLINE#", "A", "i", "g", "=", "x", ",", "(", "(", "x", "*", "x", ")", ")", "+", "x", "assert", "g", "(", "A", "[", "i", "]", "=", "A", "[", "i", "]", ")"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [25, 44, 49, 2, 7, 8, 13, 15, 16, 19, 28, 32, 34, 38, 5, 11, 14, 17, 26, 40, 24, 42, 47]}}
{"prediction": {"error_location": 0.46872833371162415, "repair_targets": [], "repair_candidates": [0.03257597237825394, 0.07810605317354202, 0.017229294404387474, 0.013676172122359276, 0.040272343903779984, 0.006757530849426985, 0.032429225742816925, 0.007213330827653408, 0.0072464304976165295, 0.03449574485421181, 0.006518969777971506, 0.013708621263504028, 0.006752586457878351, 0.6408517956733704, 0.013601395301520824, 0.013662530109286308, 0.005027326755225658, 0.004136478062719107, 0.013426835648715496, 0.0009718619985505939, 0.004924764856696129, 0.001046821940690279, 0.0053678820841014385], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 15:32:35.288533", "n_pass": [414, 86, 41], "n_token": 51, "loss": [0.9935588836669922, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def test_ccode_inline_function(", "x", "=", "#NEWLINE#", "g", "(", "x", "x", ")", "(", "g", "(", "x", "g", "x", "x", "g", "x", ")", ")", ")", "#NEWLINE#", "A", "i", "g", "=", "x", ",", "(", "(", "x", "*", "x", ")", ")", "+", "x", "assert", "g", "(", "A", "[", "i", "]", "=", "A", "[", "i", "]", ")"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [24, 43, 48, 2, 7, 8, 13, 15, 16, 18, 27, 31, 33, 37, 5, 11, 14, 17, 25, 39, 23, 41, 46]}}
{"prediction": {"error_location": 0.3702566623687744, "repair_targets": [], "repair_candidates": [0.04218527674674988, 0.06727144122123718, 0.020968424156308174, 0.01660454086959362, 0.038942933082580566, 0.007168456446379423, 0.01932717114686966, 0.009946709498763084, 0.011727053672075272, 0.08087320625782013, 0.012401244603097439, 0.01515945978462696, 0.007056156173348427, 0.5510956048965454, 0.021726563572883606, 0.025567295029759407, 0.013267694041132927, 0.010457254014909267, 0.012171322479844093, 0.0011465993011370301, 0.006030496209859848, 0.00125859712716192, 0.007646430283784866], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 15:32:35.352181", "n_pass": [416, 87, 42], "n_token": 50, "loss": [0.9657343626022339, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def test_ccode_inline_function(", "x", "=", "#NEWLINE#", "g", "(", "x", "x", ")", "(", "g", "(", "x", "g", "x", "x", "g", "x", ")", ")", "#NEWLINE#", "A", "i", "g", "=", "x", ",", "(", "(", "x", "*", "x", ")", ")", "+", "x", "assert", "g", "(", "A", "[", "i", "]", "=", "A", "[", "i", "]", ")"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [23, 42, 47, 2, 7, 8, 13, 15, 16, 18, 26, 30, 32, 36, 5, 11, 14, 17, 24, 38, 22, 40, 45]}}
{"prediction": {"error_location": 0.38070356845855713, "repair_targets": [], "repair_candidates": [0.03262082114815712, 0.05916311591863632, 0.01917978562414646, 0.014910287223756313, 0.03191850706934929, 0.005495420191437006, 0.018781283870339394, 0.010529710911214352, 0.012239581905305386, 0.0777299553155899, 0.010491919703781605, 0.01914655975997448, 0.00682784803211689, 0.5857235789299011, 0.019138848409056664, 0.022019973024725914, 0.014310438185930252, 0.012629266828298569, 0.010768511332571507, 0.0008655470446683466, 0.005813042167574167, 0.000864956236910075, 0.008831081911921501], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 15:32:35.415403", "n_pass": [417, 88, 43], "n_token": 49, "loss": [0.9303697347640991, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def test_ccode_inline_function(", "x", "=", "#NEWLINE#", "g", "(", "x", "x", ")", "(", "g", "(", "x", "g", "x", "x", "g", "x", ")", "#NEWLINE#", "A", "i", "g", "=", "x", ",", "(", "(", "x", "*", "x", ")", ")", "+", "x", "assert", "g", "(", "A", "[", "i", "]", "=", "A", "[", "i", "]", ")"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [22, 41, 46, 2, 7, 8, 13, 15, 16, 18, 25, 29, 31, 35, 5, 11, 14, 17, 23, 37, 21, 39, 44]}}
{"prediction": {"error_location": 0.39440783858299255, "repair_targets": [], "repair_candidates": [0.050989795476198196, 0.07289578765630722, 0.026430757716298103, 0.02283417619764805, 0.0297388918697834, 0.00625784695148468, 0.020424695685505867, 0.010893289931118488, 0.021072402596473694, 0.06313271075487137, 0.010486279614269733, 0.03884805738925934, 0.00873241014778614, 0.4735991954803467, 0.025252552703022957, 0.023603178560733795, 0.02433071658015251, 0.01781570538878441, 0.010162758640944958, 0.0031084339134395123, 0.009072046726942062, 0.0016819589072838426, 0.02863634191453457], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 15:32:35.480765", "n_pass": [418, 89, 44], "n_token": 47, "loss": [0.7473179697990417, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def test_ccode_inline_function(", "x", "=", "#NEWLINE#", "g", "(", "x", "x", ")", "(", "g", "(", "x", "g", "x", "x", "g", "x", "A", "i", "g", "=", "x", ",", "(", "(", "x", "*", "x", ")", ")", "+", "x", "assert", "g", "(", "A", "[", "i", "]", "=", "A", "[", "i", "]", ")"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [20, 39, 44, 2, 7, 8, 13, 15, 16, 18, 23, 27, 29, 33, 5, 11, 14, 17, 21, 35, 19, 37, 42]}}
{"prediction": {"error_location": 0.47363510727882385, "repair_targets": [], "repair_candidates": [0.013241862878203392, 0.03066960908472538, 0.006686955224722624, 0.007126958109438419, 0.01229960285127163, 0.0027114006225019693, 0.016278307884931564, 0.00048459129175171256, 0.003937657922506332, 0.24621611833572388, 0.0028194065671414137, 0.01808592677116394, 0.025438550859689713, 0.5565590262413025, 0.0032980358228087425, 0.0038640955463051796, 0.009567664004862309, 0.005173654295504093, 0.004511366132646799, 0.0013906419044360518, 0.022214503958821297, 0.0010801531607285142, 0.006343891844153404], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 15:32:35.544407", "n_pass": [422, 90, 45], "n_token": 45, "loss": [0.6242957711219788, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def test_ccode_inline_function(", "x", "=", "#NEWLINE#", "g", "(", "x", "x", ")", "(", "g", "(", "x", "g", "x", "x", "g", "x", "A", "i", "g", "=", "x", ",", "x", "*", "x", ")", ")", "+", "x", "assert", "g", "(", "A", "[", "i", "]", "=", "A", "[", "i", "]", ")"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [20, 37, 42, 2, 7, 8, 13, 15, 16, 18, 23, 25, 27, 31, 5, 11, 14, 17, 21, 33, 19, 35, 40]}}
{"prediction": {"error_location": 0.5356385111808777, "repair_targets": [], "repair_candidates": [0.019030513241887093, 0.02642964944243431, 0.005629735998809338, 0.008102205581963062, 0.011765940114855766, 0.002406686544418335, 0.0162645373493433, 0.0010700925486162305, 0.0034485573414713144, 0.1001514419913292, 0.005748845636844635, 0.019055187702178955, 0.010249823331832886, 0.7285315990447998, 0.005970076657831669, 0.007788445334881544, 0.006489861290901899, 0.0065445676445961, 0.0031808281783014536, 0.0019350871443748474, 0.006648482289165258, 0.0016769414069131017, 0.0018808383028954268], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 15:32:35.671291", "n_pass": [432, 92, 46], "n_token": 43, "loss": [1.0809237957000732, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def test_ccode_inline_function(", "x", "=", "#NEWLINE#", "g", "(", "x", "x", ")", "(", "g", "(", "x", "g", "x", "x", "g", "x", "A", "i", "g", "=", "x", ",", "x", "*", "x", ")", ")", "+", "x", "assert", "g", "(", "A", "[", "i", "]", "=", "A", "[", "i"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [20, 37, 42, 2, 7, 8, 13, 15, 16, 18, 23, 25, 27, 31, 5, 11, 14, 17, 21, 33, 19, 35, 40]}}
{"prediction": {"error_location": 0.33928194642066956, "repair_targets": [], "repair_candidates": [0.007286881096661091, 0.042576663196086884, 0.0037277243100106716, 0.005512740928679705, 0.04924232140183449, 0.0022234944626688957, 0.06242719292640686, 0.0024820598773658276, 0.0008419937803409994, 0.16683022677898407, 0.003774461569264531, 0.008669079281389713, 0.004303776193410158, 0.5765194892883301, 0.005763232242316008, 0.006701724603772163, 0.011388659477233887, 0.020388424396514893, 0.01307920552790165, 0.0011814635945484042, 0.0036481968127191067, 0.0003920708841178566, 0.0010389435337856412], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 15:32:35.736095", "n_pass": [434, 93, 47], "n_token": 42, "loss": [1.046755313873291, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "x", "=", "#NEWLINE#", "g", "(", "x", "x", ")", "(", "g", "(", "x", "g", "x", "x", "g", "x", "A", "i", "g", "=", "x", ",", "x", "*", "x", ")", ")", "+", "x", "assert", "g", "(", "A", "[", "i", "]", "=", "A", "[", "i"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [19, 36, 41, 1, 6, 7, 12, 14, 15, 17, 22, 24, 26, 30, 4, 10, 13, 16, 20, 32, 18, 34, 39]}}
{"prediction": {"error_location": 0.3510749936103821, "repair_targets": [], "repair_candidates": [0.0046189408749341965, 0.023850692436099052, 0.004103111103177071, 0.005309735890477896, 0.037861987948417664, 0.0038547508884221315, 0.036200545728206635, 0.0037238094955682755, 0.001357241184450686, 0.3962544798851013, 0.00547590060159564, 0.0021618895698338747, 0.0029782122001051903, 0.41859471797943115, 0.00342765124514699, 0.006454562768340111, 0.013216041959822178, 0.01627986691892147, 0.008911273442208767, 0.0013025234220549464, 0.0028952499851584435, 0.00046912828111089766, 0.0006976691074669361], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 15:32:35.799665", "n_pass": [436, 94, 48], "n_token": 41, "loss": [1.263739824295044, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "x", "#NEWLINE#", "g", "(", "x", "x", ")", "(", "g", "(", "x", "g", "x", "x", "g", "x", "A", "i", "g", "=", "x", ",", "x", "*", "x", ")", ")", "+", "x", "assert", "g", "(", "A", "[", "i", "]", "=", "A", "[", "i"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [18, 35, 40, 1, 5, 6, 11, 13, 14, 16, 21, 23, 25, 29, 3, 9, 12, 15, 19, 31, 17, 33, 38]}}
{"prediction": {"error_location": 0.2825952172279358, "repair_targets": [], "repair_candidates": [0.004184032324701548, 0.027900520712137222, 0.007013664580881596, 0.0106193283572793, 0.03394843637943268, 0.006666950881481171, 0.02545272372663021, 0.005895527079701424, 0.001597229391336441, 0.3184374272823334, 0.006940456107258797, 0.001770800561644137, 0.002721842611208558, 0.4676983058452606, 0.00584633182734251, 0.012277990579605103, 0.03011324256658554, 0.017046941444277763, 0.00464998884126544, 0.0007843052153475583, 0.007088392041623592, 0.0003040523442905396, 0.0010414373828098178], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 15:32:36.244638", "n_pass": [493, 101, 49], "n_token": 40, "loss": [1.2283910512924194, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "x", "#NEWLINE#", "g", "(", "x", "x", ")", "(", "g", "(", "x", "g", "x", "x", "g", "x", "A", "i", "g", "x", ",", "x", "*", "x", ")", ")", "+", "x", "assert", "g", "(", "A", "[", "i", "]", "=", "A", "[", "i"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [18, 34, 39, 1, 5, 6, 11, 13, 14, 16, 20, 22, 24, 28, 3, 9, 12, 15, 19, 30, 17, 32, 37]}}
{"prediction": {"error_location": 0.29276320338249207, "repair_targets": [], "repair_candidates": [0.02434881590306759, 0.03624029457569122, 0.042132191359996796, 0.06674914807081223, 0.027334215119481087, 0.00787479430437088, 0.01943424716591835, 0.009936480782926083, 0.005619529634714127, 0.09041252732276917, 0.03881159797310829, 0.018345044925808907, 0.043649643659591675, 0.10298555344343185, 0.13656651973724365, 0.11112229526042938, 0.1305859237909317, 0.020266421139240265, 0.01290555763989687, 0.009872369468212128, 0.03721001371741295, 0.0020277765579521656, 0.005569063127040863], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 15:32:36.370052", "n_pass": [497, 103, 50], "n_token": 39, "loss": [1.1839622259140015, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "x", "#NEWLINE#", "g", "(", "x", "x", ")", "(", "g", "(", "x", "g", "x", "x", "g", "x", "A", "i", "g", "x", ",", "x", "x", ")", ")", "+", "x", "assert", "g", "(", "A", "[", "i", "]", "=", "A", "[", "i"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [18, 33, 38, 1, 5, 6, 11, 13, 14, 16, 20, 22, 23, 27, 3, 9, 12, 15, 19, 29, 17, 31, 36]}}
{"prediction": {"error_location": 0.30606362223625183, "repair_targets": [], "repair_candidates": [0.02454446256160736, 0.04167763888835907, 0.04924316331744194, 0.06655165553092957, 0.026591945439577103, 0.008981585502624512, 0.018180744722485542, 0.0111598651856184, 0.005884068086743355, 0.04950946196913719, 0.035289667546749115, 0.013404902070760727, 0.051169801503419876, 0.09489139914512634, 0.18915362656116486, 0.10575827956199646, 0.11304204165935516, 0.026773279532790184, 0.012762698344886303, 0.00832362100481987, 0.039239827543497086, 0.002033454366028309, 0.005832780618220568], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 15:32:36.685920", "n_pass": [505, 108, 51], "n_token": 38, "loss": [1.3159000873565674, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "x", "#NEWLINE#", "g", "(", "x", "x", ")", "(", "g", "(", "x", "g", "x", "x", "g", "x", "A", "i", "g", "x", ",", "x", "x", ")", ")", "+", "x", "assert", "g", "A", "[", "i", "]", "=", "A", "[", "i"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [18, 32, 37, 1, 5, 6, 11, 13, 14, 16, 20, 22, 23, 27, 3, 9, 12, 15, 19, 29, 17, 30, 35]}}
{"prediction": {"error_location": 0.2682327926158905, "repair_targets": [], "repair_candidates": [0.017770256847143173, 0.0214327834546566, 0.04650210961699486, 0.05635502189397812, 0.009920165874063969, 0.01125078834593296, 0.007212082855403423, 0.013583429157733917, 0.005832347087562084, 0.023372791707515717, 0.03518955782055855, 0.016078859567642212, 0.03268282115459442, 0.04065984860062599, 0.16877666115760803, 0.08504340052604675, 0.0798594206571579, 0.10708644986152649, 0.17851194739341736, 0.011282064951956272, 0.020039882510900497, 0.0036087220069020987, 0.007948588579893112], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 15:32:37.065704", "n_pass": [518, 114, 52], "n_token": 37, "loss": [1.3869240283966064, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "x", "#NEWLINE#", "g", "x", "x", ")", "(", "g", "(", "x", "g", "x", "x", "g", "x", "A", "i", "g", "x", ",", "x", "x", ")", ")", "+", "x", "assert", "g", "A", "[", "i", "]", "=", "A", "[", "i"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [17, 31, 36, 1, 4, 5, 10, 12, 13, 15, 19, 21, 22, 26, 3, 8, 11, 14, 18, 28, 16, 29, 34]}}
{"prediction": {"error_location": 0.24984262883663177, "repair_targets": [], "repair_candidates": [0.00728886853903532, 0.16073769330978394, 0.07493597269058228, 0.04484403505921364, 0.006733332294970751, 0.00600249832496047, 0.006168272811919451, 0.0020408150739967823, 0.0030168944504112005, 0.056830164045095444, 0.010064980946481228, 0.006453915033489466, 0.032996248453855515, 0.0211048386991024, 0.0973387137055397, 0.06471756100654602, 0.06284971535205841, 0.18252213299274445, 0.11204220354557037, 0.009181078523397446, 0.017642533406615257, 0.006288891192525625, 0.008198576048016548], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 15:32:37.191439", "n_pass": [522, 116, 53], "n_token": 36, "loss": [1.3838154077529907, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "x", "#NEWLINE#", "g", "x", "x", ")", "g", "(", "x", "g", "x", "x", "g", "x", "A", "i", "g", "x", ",", "x", "x", ")", ")", "+", "x", "assert", "g", "A", "[", "i", "]", "=", "A", "[", "i"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [16, 30, 35, 1, 4, 5, 9, 11, 12, 14, 18, 20, 21, 25, 3, 7, 10, 13, 17, 27, 15, 28, 33]}}
{"prediction": {"error_location": 0.2506204843521118, "repair_targets": [], "repair_candidates": [0.007855154573917389, 0.23982295393943787, 0.09158755093812943, 0.053207140415906906, 0.010589875280857086, 0.0060016377829015255, 0.004746701568365097, 0.001715784426778555, 0.0028928196988999844, 0.03378769010305405, 0.01151903998106718, 0.005471105221658945, 0.03665262088179588, 0.019587401300668716, 0.0717359334230423, 0.05168086290359497, 0.04733705520629883, 0.16134315729141235, 0.0954434722661972, 0.007637807168066502, 0.02255984954535961, 0.007270711474120617, 0.009553705342113972], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 15:32:37.256062", "n_pass": [524, 117, 54], "n_token": 35, "loss": [0.8779296278953552, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "x", "#NEWLINE#", "g", "x", "x", ")", "g", "x", "g", "x", "x", "g", "x", "A", "i", "g", "x", ",", "x", "x", ")", ")", "+", "x", "assert", "g", "A", "[", "i", "]", "=", "A", "[", "i"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [15, 29, 34, 1, 4, 5, 8, 10, 11, 13, 17, 19, 20, 24, 3, 7, 9, 12, 16, 26, 14, 27, 32]}}
{"prediction": {"error_location": 0.4156426191329956, "repair_targets": [], "repair_candidates": [0.008357894606888294, 0.2925528585910797, 0.05744113028049469, 0.03791450336575508, 0.04385755583643913, 0.027249634265899658, 0.024950608611106873, 0.006187534425407648, 0.006695266347378492, 0.02484992891550064, 0.0025065189693123102, 0.0024049642961472273, 0.00539290951564908, 0.01935887709259987, 0.01468704640865326, 0.05904342234134674, 0.06262537091970444, 0.08292416483163834, 0.20020942389965057, 0.004622986540198326, 0.0021479404531419277, 0.009363925084471703, 0.004655525088310242], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 15:32:37.319699", "n_pass": [535, 118, 55], "n_token": 34, "loss": [0.6956324577331543, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "x", "#NEWLINE#", "g", "x", "x", ")", "g", "x", "g", "x", "x", "g", "x", "A", "i", "g", "x", "x", "x", ")", ")", "+", "x", "assert", "g", "A", "[", "i", "]", "=", "A", "[", "i"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [15, 28, 33, 1, 4, 5, 8, 10, 11, 13, 17, 18, 19, 23, 3, 7, 9, 12, 16, 25, 14, 26, 31]}}
{"prediction": {"error_location": 0.49875903129577637, "repair_targets": [], "repair_candidates": [0.012294757179915905, 0.41733670234680176, 0.07548398524522781, 0.036067184060811996, 0.11397265642881393, 0.02778896875679493, 0.08882667124271393, 0.011144903488457203, 0.0200896468013525, 0.019760390743613243, 0.010428020730614662, 0.0018592687556520104, 0.0006045142654329538, 0.007574953604489565, 0.007299379911273718, 0.01963520608842373, 0.028197025880217552, 0.03417591005563736, 0.046355489641427994, 0.00705926027148962, 0.000987996463663876, 0.006920470390468836, 0.006136598996818066], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 15:32:37.383044", "n_pass": [538, 119, 56], "n_token": 33, "loss": [0.7430219650268555, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "x", "#NEWLINE#", "g", "x", "x", ")", "g", "x", "g", "x", "x", "g", "x", "A", "i", "g", "x", "x", "x", ")", "+", "x", "assert", "g", "A", "[", "i", "]", "=", "A", "[", "i"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [15, 27, 32, 1, 4, 5, 8, 10, 11, 13, 17, 18, 19, 22, 3, 7, 9, 12, 16, 24, 14, 25, 30]}}
{"prediction": {"error_location": 0.47567427158355713, "repair_targets": [], "repair_candidates": [0.012585887685418129, 0.2597166895866394, 0.12823772430419922, 0.07143519073724747, 0.08459413051605225, 0.051331695169210434, 0.0727083683013916, 0.011445984244346619, 0.02461102418601513, 0.02234407141804695, 0.011571814306080341, 0.0029208073392510414, 0.0015439506387338042, 0.00783654022961855, 0.014183607883751392, 0.04889696463942528, 0.05281015858054161, 0.02664114162325859, 0.05650859326124191, 0.013396930880844593, 0.0029259060975164175, 0.010194596834480762, 0.011558137834072113], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 15:32:37.446023", "n_pass": [539, 120, 57], "n_token": 32, "loss": [0.5135893225669861, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "x", "#NEWLINE#", "g", "x", "x", ")", "g", "x", "g", "x", "x", "g", "x", "A", "i", "g", "x", "x", "x", "+", "x", "assert", "g", "A", "[", "i", "]", "=", "A", "[", "i"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [15, 26, 31, 1, 4, 5, 8, 10, 11, 13, 17, 18, 19, 21, 3, 7, 9, 12, 16, 23, 14, 24, 29]}}
{"prediction": {"error_location": 0.598344087600708, "repair_targets": [], "repair_candidates": [0.01518278382718563, 0.32309943437576294, 0.026341350749135017, 0.021121427416801453, 0.18998514115810394, 0.02736731804907322, 0.12270497530698776, 0.005868959706276655, 0.013000226579606533, 0.021340487524867058, 0.0032758896704763174, 0.003945896402001381, 0.0018641443457454443, 0.11605870723724365, 0.000617027806583792, 0.0010889822151511908, 0.0018833959475159645, 0.05196279287338257, 0.02472405880689621, 0.01073585357517004, 0.004323133267462254, 0.008219118230044842, 0.005288878921419382], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 15:32:37.510940", "n_pass": [540, 121, 58], "n_token": 31, "loss": [0.545920729637146, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "x", "#NEWLINE#", "g", "x", "x", ")", "g", "x", "g", "x", "x", "g", "x", "A", "i", "g", "x", "x", "x", "x", "assert", "g", "A", "[", "i", "]", "=", "A", "[", "i"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [15, 25, 30, 1, 4, 5, 8, 10, 11, 13, 17, 18, 19, 20, 3, 7, 9, 12, 16, 22, 14, 23, 28]}}
{"prediction": {"error_location": 0.5793080925941467, "repair_targets": [], "repair_candidates": [0.013263097032904625, 0.19895367324352264, 0.052355457097291946, 0.05902169272303581, 0.14967428147792816, 0.0960249975323677, 0.10521075129508972, 0.011098379269242287, 0.019710730761289597, 0.014235836453735828, 0.014329364523291588, 0.006307415664196014, 0.0019319235580042005, 0.1022859439253807, 0.060865242034196854, 0.006414373405277729, 0.011790313757956028, 0.03289389982819557, 0.02240116521716118, 0.011817204765975475, 0.0012970524840056896, 0.00455860048532486, 0.003558651776984334], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 15:32:37.574182", "n_pass": [542, 122, 59], "n_token": 30, "loss": [0.4830401837825775, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "x", "#NEWLINE#", "g", "x", "x", ")", "g", "x", "g", "x", "x", "g", "x", "A", "i", "g", "x", "x", "x", "x", "g", "A", "[", "i", "]", "=", "A", "[", "i"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [15, 24, 29, 1, 4, 5, 8, 10, 11, 13, 17, 18, 19, 20, 3, 7, 9, 12, 16, 21, 14, 22, 27]}}
{"prediction": {"error_location": 0.6169049739837646, "repair_targets": [], "repair_candidates": [0.009608104825019836, 0.17706845700740814, 0.07283376902341843, 0.041331615298986435, 0.24459834396839142, 0.055126335471868515, 0.17607727646827698, 0.008555843494832516, 0.016635175794363022, 0.021533668041229248, 0.014950891956686974, 0.005336713045835495, 0.004736020229756832, 0.024219289422035217, 0.0498615987598896, 0.021914491429924965, 0.012758087366819382, 0.0085463747382164, 0.018861595541238785, 0.011199158616364002, 0.0019111952278763056, 0.0009485812042839825, 0.0013874814612790942], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 15:32:37.637776", "n_pass": [545, 123, 60], "n_token": 29, "loss": [0.5400114059448242, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "x", "#NEWLINE#", "g", "x", "x", ")", "g", "x", "g", "x", "x", "g", "x", "A", "i", "g", "x", "x", "x", "x", "g", "A", "i", "]", "=", "A", "[", "i"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [15, 23, 28, 1, 4, 5, 8, 10, 11, 13, 17, 18, 19, 20, 3, 7, 9, 12, 16, 21, 14, 22, 26]}}
{"prediction": {"error_location": 0.5827416777610779, "repair_targets": [], "repair_candidates": [0.008455413393676281, 0.14192534983158112, 0.18007276952266693, 0.14623287320137024, 0.06692740321159363, 0.21058343350887299, 0.08813095092773438, 0.008850611746311188, 0.024472758173942566, 0.007982321083545685, 0.01985968090593815, 0.002366397762671113, 0.0032450458966195583, 0.007973720319569111, 0.034888677299022675, 0.01199229247868061, 0.02519286796450615, 0.0032540750689804554, 0.004412018693983555, 0.0008384725661017001, 0.0011698186863213778, 0.00034762255381792784, 0.0008254091371782124], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 15:32:37.700795", "n_pass": [547, 124, 61], "n_token": 28, "loss": [0.7763361930847168, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "x", "#NEWLINE#", "g", "x", "x", ")", "g", "x", "g", "x", "x", "g", "x", "A", "i", "g", "x", "x", "x", "x", "g", "A", "i", "=", "A", "[", "i"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [15, 23, 27, 1, 4, 5, 8, 10, 11, 13, 17, 18, 19, 20, 3, 7, 9, 12, 16, 21, 14, 22, 25]}}
{"prediction": {"error_location": 0.4600886106491089, "repair_targets": [], "repair_candidates": [0.0021602394990622997, 0.04504024237394333, 0.024881070479750633, 0.012056486681103706, 0.031036101281642914, 0.013179512694478035, 0.028471944853663445, 0.0013903941726312041, 0.0064548770897090435, 0.004579289350658655, 0.004553647246211767, 0.0017095421208068728, 0.001775727840140462, 0.0035500081721693277, 0.007901892066001892, 0.002676407340914011, 0.036983512341976166, 0.33400440216064453, 0.4295043349266052, 0.006111891008913517, 0.0008263337658718228, 0.00044285200419835746, 0.0007092063897289336], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 15:32:37.828308", "n_pass": [550, 126, 62], "n_token": 27, "loss": [0.2628542482852936, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "x", "#NEWLINE#", "g", "x", "x", ")", "g", "x", "g", "x", "x", "g", "x", "A", "i", "g", "x", "x", "x", "x", "g", "A", "i", "=", "A", "i"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [15, 23, 26, 1, 4, 5, 8, 10, 11, 13, 17, 18, 19, 20, 3, 7, 9, 12, 16, 21, 14, 22, 25]}}
{"prediction": {"error_location": 0.7688539028167725, "repair_targets": [], "repair_candidates": [0.008289585821330547, 0.07902449369430542, 0.05413258448243141, 0.018707649782299995, 0.03312062472105026, 0.021899070590734482, 0.0337672233581543, 0.0006471739034168422, 0.007494668941944838, 0.003139154752716422, 0.004526310134679079, 0.006078287493437529, 0.004246036522090435, 0.00275959400460124, 0.007841423153877258, 0.003910565748810768, 0.0195766668766737, 0.599574089050293, 0.012057481333613396, 0.022386809810996056, 0.020415369421243668, 0.016895590350031853, 0.019509490579366684], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 15:32:37.891307", "n_pass": [554, 127, 63], "n_token": 26, "loss": [0.2525559663772583, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "x", "g", "x", "x", ")", "g", "x", "g", "x", "x", "g", "x", "A", "i", "g", "x", "x", "x", "x", "g", "A", "i", "=", "A", "i"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [14, 22, 25, 1, 3, 4, 7, 9, 10, 12, 16, 17, 18, 19, 2, 6, 8, 11, 15, 20, 13, 21, 24]}}
{"prediction": {"error_location": 0.7768126726150513, "repair_targets": [], "repair_candidates": [0.011063968762755394, 0.13665233552455902, 0.0725095123052597, 0.04344480112195015, 0.025156155228614807, 0.012951093725860119, 0.017759276553988457, 0.00073132204124704, 0.003415536368265748, 0.0013375101843848825, 0.002019846811890602, 0.004316635895520449, 0.0027783941477537155, 0.0017328050453215837, 0.0013469697441905737, 0.0018516260897740722, 0.0015014887321740389, 0.2481735348701477, 0.37522798776626587, 0.011814911849796772, 0.008309641852974892, 0.009944884106516838, 0.005959727335721254], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 15:32:37.954387", "n_pass": [558, 128, 64], "n_token": 25, "loss": [0.5156251192092896, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "x", "g", "x", "x", "g", "x", "g", "x", "x", "g", "x", "A", "i", "g", "x", "x", "x", "x", "g", "A", "i", "=", "A", "i"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [13, 21, 24, 1, 3, 4, 6, 8, 9, 11, 15, 16, 17, 18, 2, 5, 7, 10, 14, 19, 12, 20, 23]}}
{"prediction": {"error_location": 0.5971271991729736, "repair_targets": [], "repair_candidates": [0.14272764325141907, 0.1372242271900177, 0.12763896584510803, 0.04955610632896423, 0.03225073963403702, 0.07721800357103348, 0.018620029091835022, 0.06704985350370407, 0.08012343943119049, 0.009951549582183361, 0.01845427043735981, 0.007378220558166504, 0.018035436049103737, 0.012073998339474201, 0.014096400700509548, 0.022088659927248955, 0.005640641786158085, 0.09499000757932663, 0.05777430161833763, 0.0015604073414579034, 0.002270156517624855, 0.0008596956613473594, 0.0024172719568014145], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 15:32:38.018929", "n_pass": [576, 129, 65], "n_token": 24, "loss": [0.00047255316167138517, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "x", "g", "x", "x", "g", "x", "g", "x", "x", "g", "x", "A", "i", "g", "x", "x", "x", "x", "g", "A", "i", "A", "i"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [13, 21, 23, 1, 3, 4, 6, 8, 9, 11, 15, 16, 17, 18, 2, 5, 7, 10, 14, 19, 12, 20, 22]}}
{"prediction": {"error_location": 0.9995275735855103, "repair_targets": [], "repair_candidates": [0.13828320801258087, 0.051310643553733826, 0.07692921161651611, 0.04273860901594162, 0.049910563975572586, 0.049323372542858124, 0.0548241063952446, 0.0766606405377388, 0.04075063765048981, 0.040914732962846756, 0.04100336879491806, 0.05428541451692581, 0.0379757322371006, 0.01980104111135006, 0.03799820691347122, 0.05129915103316307, 0.02102631889283657, 0.01405504159629345, 0.011373498477041721, 0.021530427038669586, 0.020759915933012962, 0.02572101540863514, 0.021525152027606964], "target_probs": 0.0}}




Minimal simplified tokens:

['#NEWLINE#', 'x', 'g', 'x', 'x', 'g', 'x', 'g', 'x', 'x', 'g', 'x', 'A', 'i', 'g', 'x', 'x', 'x', 'x', 'g', 'A', 'i', 'A', 'i']
