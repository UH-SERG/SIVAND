
Original sample:

{"has_bug": false, "bug_kind": 0, "bug_kind_name": "NONE", "source_tokens": ["#NEWLINE#", "def _clean_cache(", "self", ")", ":", "#NEWLINE#", "#INDENT#", "'\\n        _clean_cache is a routine that is run to find and delete cache\\n        items that are old. This helps keep the size of your over all\\n        datastore down.\\n\\n        It only deletes the max_hits_to_clean per attempt, in order\\n        to maximize performance. Default settings are 20 hits, 50%\\n        of requests. Generally less hits cleaned on more requests will\\n        give you better performance.\\n\\n        Returns True on completion\\n        '", "#NEWLINE#", "query", "=", "_AppEngineUtilities_Cache", ".", "all", "(", ")", "#NEWLINE#", "query", ".", "filter", "(", "'timeout < '", ",", "datetime", ".", "datetime", ".", "now", "(", ")", ")", "#NEWLINE#", "results", "=", "query", ".", "fetch", "(", "self", ".", "max_hits_to_clean", ")", "#NEWLINE#", "db", ".", "delete", "(", "results", ")", "#NEWLINE#", "return", "True"], "error_location": [0], "repair_targets": [], "repair_candidates": [9, 17, 34, 32, 47, 2, 38], "provenances": [{"datasetProvenance": {"datasetName": "ETHPy150Open", "filepath": "CollabQ/CollabQ/common/appengine_utilities/cache.py", "license": "apache-2.0", "note": "license: bigquery_api"}}], "txt_file": "eval__VARIABLE_MISUSE__SStuB.txt-00000-of-00300", "js_count": 1537, "results": {"model": "transformer", "prob": {"loc": [[0.9948528409004211, 9.337351912108716e-06, 5.65132893370901e-07, 6.008775699228863e-08, 1.0342388634398958e-07, 9.128153521942295e-08, 6.658166284978506e-08, 3.449193997084876e-08, 4.8424269039060164e-08, 1.904534485674958e-07, 4.806282305480636e-08, 5.328783458935504e-08, 7.724255368657396e-08, 1.1683009226715058e-08, 1.6372941047393397e-07, 6.691065550512576e-07, 5.8809572323070824e-08, 7.304252758189023e-09, 7.381269995221373e-08, 1.2243805969092136e-08, 3.7213819581438656e-08, 1.3946521448815474e-06, 5.259032320736878e-08, 1.1452086567942388e-07, 1.7876523372706288e-07, 1.032375784859596e-08, 2.4257550990114396e-07, 4.450174628800596e-08, 1.2517209597717738e-06, 8.864678306963469e-07, 4.5535426806964097e-07, 2.070701157208532e-07, 1.927134235302219e-06, 2.0439347991896284e-08, 3.883794477133051e-07, 2.0292793578846613e-07, 4.053600122233547e-08, 1.3315867875007825e-07, 0.003909543622285128, 6.387948587871506e-07, 4.5503927736945116e-08, 7.674374273847206e-07, 4.0377520349466067e-07, 6.135310570698493e-08, 2.998582999680366e-07, 1.2221873291196061e-08, 9.677749090997168e-08, 0.0006186534301377833, 9.962311651179334e-07, 1.3953481357020792e-06, 4.875956847172347e-07, 0.0005945493467152119]], "pointer": [[0.0, 0.0, 0.012958932667970657, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.5400803089141846, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.25905656814575195, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1716102659702301, 0.0, 0.011699455790221691, 0.0, 0.0, 0.0, 0.0007482738583348691, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.003846206236630678, 0.0, 0.0, 0.0, 0.0]], "target": [0.0]}, "loss": [0.005160345695912838, 0.0], "acc": [1.0, 0.0, 0.0, 0.0]}}


Trace of simplified code(s):

{"result": {"time": "2021-02-11 15:39:50.424012", "n_pass": [1, 1, 1], "n_token": 52, "loss": [0.005160345695912838, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def _clean_cache(", "self", ")", ":", "#NEWLINE#", "#INDENT#", "'\\n        _clean_cache is a routine that is run to find and delete cache\\n        items that are old. This helps keep the size of your over all\\n        datastore down.\\n\\n        It only deletes the max_hits_to_clean per attempt, in order\\n        to maximize performance. Default settings are 20 hits, 50%\\n        of requests. Generally less hits cleaned on more requests will\\n        give you better performance.\\n\\n        Returns True on completion\\n        '", "#NEWLINE#", "query", "=", "_AppEngineUtilities_Cache", ".", "all", "(", ")", "#NEWLINE#", "query", ".", "filter", "(", "'timeout < '", ",", "datetime", ".", "datetime", ".", "now", "(", ")", ")", "#NEWLINE#", "results", "=", "query", ".", "fetch", "(", "self", ".", "max_hits_to_clean", ")", "#NEWLINE#", "db", ".", "delete", "(", "results", ")", "#NEWLINE#", "return", "True"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [9, 17, 34, 32, 47, 2, 38]}}
{"prediction": {"error_location": 0.9948528409004211, "repair_targets": [], "repair_candidates": [0.012958932667970657, 0.5400803089141846, 0.25905656814575195, 0.1716102659702301, 0.011699455790221691, 0.0007482738583348691, 0.003846206236630678], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 15:39:50.482849", "n_pass": [23, 2, 2], "n_token": 46, "loss": [0.008612984791398048, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def _clean_cache(", "self", ")", ":", "#NEWLINE#", "#INDENT#", "'\\n        _clean_cache is a routine that is run to find and delete cache\\n        items that are old. This helps keep the size of your over all\\n        datastore down.\\n\\n        It only deletes the max_hits_to_clean per attempt, in order\\n        to maximize performance. Default settings are 20 hits, 50%\\n        of requests. Generally less hits cleaned on more requests will\\n        give you better performance.\\n\\n        Returns True on completion\\n        '", "#NEWLINE#", "query", "=", "_AppEngineUtilities_Cache", ".", "all", "(", ")", "#NEWLINE#", "query", ".", "datetime", ".", "now", "(", ")", ")", "#NEWLINE#", "results", "=", "query", ".", "fetch", "(", "self", ".", "max_hits_to_clean", ")", "#NEWLINE#", "db", ".", "delete", "(", "results", ")", "#NEWLINE#", "return", "True"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [9, 17, 28, 26, 41, 2, 32]}}
{"prediction": {"error_location": 0.991424024105072, "repair_targets": [], "repair_candidates": [0.014637737534940243, 0.7226953506469727, 0.1044422835111618, 0.14398032426834106, 0.010781403630971909, 0.0006696608033962548, 0.0027931849472224712], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 15:39:50.537775", "n_pass": [24, 3, 3], "n_token": 39, "loss": [0.01307061966508627, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def _clean_cache(", "self", ")", ":", "#NEWLINE#", "#INDENT#", "'\\n        _clean_cache is a routine that is run to find and delete cache\\n        items that are old. This helps keep the size of your over all\\n        datastore down.\\n\\n        It only deletes the max_hits_to_clean per attempt, in order\\n        to maximize performance. Default settings are 20 hits, 50%\\n        of requests. Generally less hits cleaned on more requests will\\n        give you better performance.\\n\\n        Returns True on completion\\n        '", "#NEWLINE#", "query", "=", "_AppEngineUtilities_Cache", ".", "all", "(", ")", "#NEWLINE#", "query", "#NEWLINE#", "results", "=", "query", ".", "fetch", "(", "self", ".", "max_hits_to_clean", ")", "#NEWLINE#", "db", ".", "delete", "(", "results", ")", "#NEWLINE#", "return", "True"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [9, 17, 21, 19, 34, 2, 25]}}
{"prediction": {"error_location": 0.9870142936706543, "repair_targets": [], "repair_candidates": [0.21641552448272705, 0.7446028590202332, 0.005172425881028175, 0.013783593662083149, 0.006710311397910118, 0.011835194192826748, 0.0014800846111029387], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 15:39:50.593388", "n_pass": [46, 4, 4], "n_token": 35, "loss": [0.29272550344467163, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def _clean_cache(", "self", ")", ":", "#NEWLINE#", "#INDENT#", "'\\n        _clean_cache is a routine that is run to find and delete cache\\n        items that are old. This helps keep the size of your over all\\n        datastore down.\\n\\n        It only deletes the max_hits_to_clean per attempt, in order\\n        to maximize performance. Default settings are 20 hits, 50%\\n        of requests. Generally less hits cleaned on more requests will\\n        give you better performance.\\n\\n        Returns True on completion\\n        '", "#NEWLINE#", "query", "=", "_AppEngineUtilities_Cache", ".", "all", "(", ")", "#NEWLINE#", "query", "#NEWLINE#", "results", "=", "query", ".", "fetch", "(", "self", ".", ".", "delete", "(", "results", ")", "#NEWLINE#", "return", "True"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [9, 17, 21, 19, 30, 2, 25]}}
{"prediction": {"error_location": 0.7462269067764282, "repair_targets": [], "repair_candidates": [0.12137153744697571, 0.7551741003990173, 0.095694899559021, 0.006106522865593433, 0.020448502153158188, 0.0007297250558622181, 0.00047469945275224745], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 15:39:50.925821", "n_pass": [82, 10, 5], "n_token": 33, "loss": [0.03961971774697304, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def _clean_cache(", "self", ")", ":", "#NEWLINE#", "#INDENT#", "'\\n        _clean_cache is a routine that is run to find and delete cache\\n        items that are old. This helps keep the size of your over all\\n        datastore down.\\n\\n        It only deletes the max_hits_to_clean per attempt, in order\\n        to maximize performance. Default settings are 20 hits, 50%\\n        of requests. Generally less hits cleaned on more requests will\\n        give you better performance.\\n\\n        Returns True on completion\\n        '", "#NEWLINE#", "query", "=", "_AppEngineUtilities_Cache", ".", "all", "(", ")", "#NEWLINE#", "query", "#NEWLINE#", "results", "=", "query", ".", "fetch", "(", "self", ".", ".", "delete", "(", "results", "return", "True"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [9, 17, 21, 19, 30, 2, 25]}}
{"prediction": {"error_location": 0.9611546397209167, "repair_targets": [], "repair_candidates": [0.6468677520751953, 0.3357067406177521, 0.0007421585032716393, 0.0011999778216704726, 0.003482474945485592, 0.011574158445000648, 0.000426723447162658], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 15:39:50.980781", "n_pass": [84, 11, 6], "n_token": 32, "loss": [0.10288503766059875, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "self", ")", ":", "#NEWLINE#", "#INDENT#", "'\\n        _clean_cache is a routine that is run to find and delete cache\\n        items that are old. This helps keep the size of your over all\\n        datastore down.\\n\\n        It only deletes the max_hits_to_clean per attempt, in order\\n        to maximize performance. Default settings are 20 hits, 50%\\n        of requests. Generally less hits cleaned on more requests will\\n        give you better performance.\\n\\n        Returns True on completion\\n        '", "#NEWLINE#", "query", "=", "_AppEngineUtilities_Cache", ".", "all", "(", ")", "#NEWLINE#", "query", "#NEWLINE#", "results", "=", "query", ".", "fetch", "(", "self", ".", ".", "delete", "(", "results", "return", "True"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [8, 16, 20, 18, 29, 1, 24]}}
{"prediction": {"error_location": 0.9022307991981506, "repair_targets": [], "repair_candidates": [0.749388575553894, 0.23438967764377594, 0.002235568594187498, 0.0004938310594297945, 0.0035750933457165956, 0.009752378799021244, 0.00016482530918437988], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 15:39:51.036087", "n_pass": [86, 12, 7], "n_token": 31, "loss": [0.6138685345649719, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "self", ":", "#NEWLINE#", "#INDENT#", "'\\n        _clean_cache is a routine that is run to find and delete cache\\n        items that are old. This helps keep the size of your over all\\n        datastore down.\\n\\n        It only deletes the max_hits_to_clean per attempt, in order\\n        to maximize performance. Default settings are 20 hits, 50%\\n        of requests. Generally less hits cleaned on more requests will\\n        give you better performance.\\n\\n        Returns True on completion\\n        '", "#NEWLINE#", "query", "=", "_AppEngineUtilities_Cache", ".", "all", "(", ")", "#NEWLINE#", "query", "#NEWLINE#", "results", "=", "query", ".", "fetch", "(", "self", ".", ".", "delete", "(", "results", "return", "True"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [7, 15, 19, 17, 28, 1, 23]}}
{"prediction": {"error_location": 0.5412529110908508, "repair_targets": [], "repair_candidates": [0.4650742709636688, 0.43382206559181213, 0.0856909528374672, 0.001097546424716711, 0.0071071139536798, 0.006808262784034014, 0.0003997391613665968], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 15:39:51.699369", "n_pass": [131, 24, 8], "n_token": 30, "loss": [0.5176485776901245, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "self", ":", "#NEWLINE#", "#INDENT#", "'\\n        _clean_cache is a routine that is run to find and delete cache\\n        items that are old. This helps keep the size of your over all\\n        datastore down.\\n\\n        It only deletes the max_hits_to_clean per attempt, in order\\n        to maximize performance. Default settings are 20 hits, 50%\\n        of requests. Generally less hits cleaned on more requests will\\n        give you better performance.\\n\\n        Returns True on completion\\n        '", "#NEWLINE#", "query", "_AppEngineUtilities_Cache", ".", "all", "(", ")", "#NEWLINE#", "query", "#NEWLINE#", "results", "=", "query", ".", "fetch", "(", "self", ".", ".", "delete", "(", "results", "return", "True"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [7, 14, 18, 16, 27, 1, 22]}}
{"prediction": {"error_location": 0.595920205116272, "repair_targets": [], "repair_candidates": [0.1352463960647583, 0.4642028510570526, 0.3801668584346771, 0.0006941404426470399, 0.018880074843764305, 0.000300042302114889, 0.0005096172681078315], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 15:39:51.976713", "n_pass": [136, 29, 9], "n_token": 29, "loss": [0.6671558022499084, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "self", ":", "#NEWLINE#", "#INDENT#", "'\\n        _clean_cache is a routine that is run to find and delete cache\\n        items that are old. This helps keep the size of your over all\\n        datastore down.\\n\\n        It only deletes the max_hits_to_clean per attempt, in order\\n        to maximize performance. Default settings are 20 hits, 50%\\n        of requests. Generally less hits cleaned on more requests will\\n        give you better performance.\\n\\n        Returns True on completion\\n        '", "#NEWLINE#", "query", "_AppEngineUtilities_Cache", ".", "all", "(", "#NEWLINE#", "query", "#NEWLINE#", "results", "=", "query", ".", "fetch", "(", "self", ".", ".", "delete", "(", "results", "return", "True"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [7, 13, 17, 15, 26, 1, 21]}}
{"prediction": {"error_location": 0.5131661295890808, "repair_targets": [], "repair_candidates": [0.07523788511753082, 0.4986015558242798, 0.3778671324253082, 0.0008765875245444477, 0.046821773052215576, 0.00018685746181290597, 0.0004082261002622545], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 15:39:52.537314", "n_pass": [150, 39, 10], "n_token": 28, "loss": [0.038123924285173416, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "self", ":", "#NEWLINE#", "#INDENT#", "'\\n        _clean_cache is a routine that is run to find and delete cache\\n        items that are old. This helps keep the size of your over all\\n        datastore down.\\n\\n        It only deletes the max_hits_to_clean per attempt, in order\\n        to maximize performance. Default settings are 20 hits, 50%\\n        of requests. Generally less hits cleaned on more requests will\\n        give you better performance.\\n\\n        Returns True on completion\\n        '", "#NEWLINE#", "query", "_AppEngineUtilities_Cache", ".", "all", "(", "#NEWLINE#", "query", "#NEWLINE#", "results", "=", "query", ".", "fetch", "(", "self", ".", ".", "delete", "results", "return", "True"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [7, 13, 17, 15, 25, 1, 21]}}
{"prediction": {"error_location": 0.9625937342643738, "repair_targets": [], "repair_candidates": [0.4062176048755646, 0.047115571796894073, 0.01802290789783001, 0.11017075181007385, 0.020851237699389458, 9.238928214472253e-06, 0.39761263132095337], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 15:39:52.592560", "n_pass": [152, 40, 11], "n_token": 27, "loss": [0.028439780697226524, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "self", ":", "#NEWLINE#", "#INDENT#", "'\\n        _clean_cache is a routine that is run to find and delete cache\\n        items that are old. This helps keep the size of your over all\\n        datastore down.\\n\\n        It only deletes the max_hits_to_clean per attempt, in order\\n        to maximize performance. Default settings are 20 hits, 50%\\n        of requests. Generally less hits cleaned on more requests will\\n        give you better performance.\\n\\n        Returns True on completion\\n        '", "#NEWLINE#", "query", "_AppEngineUtilities_Cache", ".", "all", "(", "#NEWLINE#", "query", "#NEWLINE#", "results", "=", "query", ".", "fetch", "(", "self", ".", ".", "delete", "results", "True"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [7, 13, 17, 15, 25, 1, 21]}}
{"prediction": {"error_location": 0.9719608426094055, "repair_targets": [], "repair_candidates": [0.700441300868988, 0.060960520058870316, 0.02791287750005722, 0.1398908495903015, 0.03347255662083626, 1.4891536011418793e-05, 0.03730703890323639], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 15:39:52.647399", "n_pass": [153, 41, 12], "n_token": 26, "loss": [0.05635371059179306, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "self", ":", "#NEWLINE#", "#INDENT#", "'\\n        _clean_cache is a routine that is run to find and delete cache\\n        items that are old. This helps keep the size of your over all\\n        datastore down.\\n\\n        It only deletes the max_hits_to_clean per attempt, in order\\n        to maximize performance. Default settings are 20 hits, 50%\\n        of requests. Generally less hits cleaned on more requests will\\n        give you better performance.\\n\\n        Returns True on completion\\n        '", "#NEWLINE#", "query", "_AppEngineUtilities_Cache", ".", "all", "(", "#NEWLINE#", "query", "#NEWLINE#", "results", "=", "query", ".", "fetch", "(", "self", ".", ".", "delete", "results"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [7, 13, 17, 15, 25, 1, 21]}}
{"prediction": {"error_location": 0.9452048540115356, "repair_targets": [], "repair_candidates": [0.5864710211753845, 0.1499231457710266, 0.08867298066616058, 0.09330109506845474, 0.07007088512182236, 2.1402060156106018e-05, 0.011539428494870663], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 15:39:52.702129", "n_pass": [156, 42, 13], "n_token": 25, "loss": [0.025763968005776405, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "self", "#NEWLINE#", "#INDENT#", "'\\n        _clean_cache is a routine that is run to find and delete cache\\n        items that are old. This helps keep the size of your over all\\n        datastore down.\\n\\n        It only deletes the max_hits_to_clean per attempt, in order\\n        to maximize performance. Default settings are 20 hits, 50%\\n        of requests. Generally less hits cleaned on more requests will\\n        give you better performance.\\n\\n        Returns True on completion\\n        '", "#NEWLINE#", "query", "_AppEngineUtilities_Cache", ".", "all", "(", "#NEWLINE#", "query", "#NEWLINE#", "results", "=", "query", ".", "fetch", "(", "self", ".", ".", "delete", "results"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [6, 12, 16, 14, 24, 1, 20]}}
{"prediction": {"error_location": 0.9745650887489319, "repair_targets": [], "repair_candidates": [0.5343614220619202, 0.18850411474704742, 0.12165982276201248, 0.07220003753900528, 0.07786973565816879, 4.3110827391501516e-05, 0.005361735820770264], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 15:39:52.759747", "n_pass": [157, 43, 14], "n_token": 24, "loss": [0.026154248043894768, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "self", "#INDENT#", "'\\n        _clean_cache is a routine that is run to find and delete cache\\n        items that are old. This helps keep the size of your over all\\n        datastore down.\\n\\n        It only deletes the max_hits_to_clean per attempt, in order\\n        to maximize performance. Default settings are 20 hits, 50%\\n        of requests. Generally less hits cleaned on more requests will\\n        give you better performance.\\n\\n        Returns True on completion\\n        '", "#NEWLINE#", "query", "_AppEngineUtilities_Cache", ".", "all", "(", "#NEWLINE#", "query", "#NEWLINE#", "results", "=", "query", ".", "fetch", "(", "self", ".", ".", "delete", "results"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [5, 11, 15, 13, 23, 1, 19]}}
{"prediction": {"error_location": 0.9741846919059753, "repair_targets": [], "repair_candidates": [0.4825062155723572, 0.19316937029361725, 0.15484501421451569, 0.061569251120090485, 0.10013368725776672, 5.0577156798681244e-05, 0.007725920993834734], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 15:39:52.815160", "n_pass": [158, 44, 15], "n_token": 23, "loss": [0.03663163259625435, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "self", "'\\n        _clean_cache is a routine that is run to find and delete cache\\n        items that are old. This helps keep the size of your over all\\n        datastore down.\\n\\n        It only deletes the max_hits_to_clean per attempt, in order\\n        to maximize performance. Default settings are 20 hits, 50%\\n        of requests. Generally less hits cleaned on more requests will\\n        give you better performance.\\n\\n        Returns True on completion\\n        '", "#NEWLINE#", "query", "_AppEngineUtilities_Cache", ".", "all", "(", "#NEWLINE#", "query", "#NEWLINE#", "results", "=", "query", ".", "fetch", "(", "self", ".", ".", "delete", "results"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [4, 10, 14, 12, 22, 1, 18]}}
{"prediction": {"error_location": 0.9640311002731323, "repair_targets": [], "repair_candidates": [0.24803051352500916, 0.22771823406219482, 0.2931784689426422, 0.08944776654243469, 0.13061530888080597, 0.00016905284428503364, 0.01084071397781372], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 15:39:52.870172", "n_pass": [159, 45, 16], "n_token": 22, "loss": [0.016262495890259743, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "self", "#NEWLINE#", "query", "_AppEngineUtilities_Cache", ".", "all", "(", "#NEWLINE#", "query", "#NEWLINE#", "results", "=", "query", ".", "fetch", "(", "self", ".", ".", "delete", "results"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [3, 9, 13, 11, 21, 1, 17]}}
{"prediction": {"error_location": 0.9838688969612122, "repair_targets": [], "repair_candidates": [0.05765034258365631, 0.4283537268638611, 0.38948526978492737, 0.04786195605993271, 0.05817881226539612, 0.0026380871422588825, 0.015831753611564636], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 15:39:52.925350", "n_pass": [160, 46, 17], "n_token": 21, "loss": [0.01217516977339983, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "self", "query", "_AppEngineUtilities_Cache", ".", "all", "(", "#NEWLINE#", "query", "#NEWLINE#", "results", "=", "query", ".", "fetch", "(", "self", ".", ".", "delete", "results"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [2, 8, 12, 10, 20, 1, 16]}}
{"prediction": {"error_location": 0.9878987669944763, "repair_targets": [], "repair_candidates": [0.2376355677843094, 0.09114310145378113, 0.3769121766090393, 0.22948037087917328, 0.046973150223493576, 0.003906295169144869, 0.013949335552752018], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 15:39:52.979954", "n_pass": [162, 47, 18], "n_token": 20, "loss": [0.019688185304403305, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "self", "query", ".", "all", "(", "#NEWLINE#", "query", "#NEWLINE#", "results", "=", "query", ".", "fetch", "(", "self", ".", ".", "delete", "results"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [2, 7, 11, 9, 19, 1, 15]}}
{"prediction": {"error_location": 0.9805044531822205, "repair_targets": [], "repair_candidates": [0.25388863682746887, 0.0778178870677948, 0.18776719272136688, 0.43715041875839233, 0.03082549199461937, 0.0011091709602624178, 0.011441253125667572], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 15:39:53.034449", "n_pass": [163, 48, 19], "n_token": 19, "loss": [0.03944863751530647, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "self", "query", "all", "(", "#NEWLINE#", "query", "#NEWLINE#", "results", "=", "query", ".", "fetch", "(", "self", ".", ".", "delete", "results"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [2, 6, 10, 8, 18, 1, 14]}}
{"prediction": {"error_location": 0.9613192081451416, "repair_targets": [], "repair_candidates": [0.13152459263801575, 0.3150712549686432, 0.1870991736650467, 0.32636722922325134, 0.020019307732582092, 0.0013585645938292146, 0.018559914082288742], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 15:39:53.092355", "n_pass": [164, 49, 20], "n_token": 18, "loss": [0.018237756565213203, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "self", "query", "(", "#NEWLINE#", "query", "#NEWLINE#", "results", "=", "query", ".", "fetch", "(", "self", ".", ".", "delete", "results"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [2, 5, 9, 7, 17, 1, 13]}}
{"prediction": {"error_location": 0.981927752494812, "repair_targets": [], "repair_candidates": [0.11550398170948029, 0.4562487006187439, 0.14391419291496277, 0.25951600074768066, 0.012814904563128948, 0.0034636559430509806, 0.008538573980331421], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 15:39:53.147263", "n_pass": [165, 50, 21], "n_token": 17, "loss": [0.007963573560118675, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "self", "query", "#NEWLINE#", "query", "#NEWLINE#", "results", "=", "query", ".", "fetch", "(", "self", ".", ".", "delete", "results"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [2, 4, 8, 6, 16, 1, 12]}}
{"prediction": {"error_location": 0.9920681715011597, "repair_targets": [], "repair_candidates": [0.13876157999038696, 0.10806135088205338, 0.16634796559810638, 0.519267737865448, 0.031679607927799225, 0.023791959509253502, 0.012089798226952553], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 15:39:53.202708", "n_pass": [166, 51, 22], "n_token": 16, "loss": [0.02415117435157299, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "self", "query", "query", "#NEWLINE#", "results", "=", "query", ".", "fetch", "(", "self", ".", ".", "delete", "results"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [2, 3, 7, 5, 15, 1, 11]}}
{"prediction": {"error_location": 0.9761379957199097, "repair_targets": [], "repair_candidates": [0.06327647715806961, 0.0811564102768898, 0.046218644827604294, 0.7815195322036743, 0.006383657921105623, 0.006638624239712954, 0.014806698076426983], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 15:39:53.257077", "n_pass": [168, 52, 23], "n_token": 15, "loss": [0.0024586468935012817, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "self", "query", "query", "results", "=", "query", ".", "fetch", "(", "self", ".", ".", "delete", "results"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [2, 3, 6, 4, 14, 1, 10]}}
{"prediction": {"error_location": 0.9975444674491882, "repair_targets": [], "repair_candidates": [0.34413284063339233, 0.06853724271059036, 0.04857814684510231, 0.51090008020401, 0.0004074837197549641, 0.011407699435949326, 0.016036449000239372], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 15:39:53.311171", "n_pass": [170, 53, 24], "n_token": 14, "loss": [0.005556969437748194, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "self", "query", "query", "results", "query", ".", "fetch", "(", "self", ".", ".", "delete", "results"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [2, 3, 5, 4, 13, 1, 9]}}
{"prediction": {"error_location": 0.9944583177566528, "repair_targets": [], "repair_candidates": [0.4377875328063965, 0.08776164799928665, 0.073920339345932, 0.15105773508548737, 0.08073610067367554, 0.005994698032736778, 0.16274197399616241], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 15:39:53.365589", "n_pass": [172, 54, 25], "n_token": 13, "loss": [0.005880910903215408, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "self", "query", "query", "results", "query", "fetch", "(", "self", ".", ".", "delete", "results"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [2, 3, 5, 4, 12, 1, 8]}}
{"prediction": {"error_location": 0.9941362142562866, "repair_targets": [], "repair_candidates": [0.22100722789764404, 0.10902135074138641, 0.034871943295001984, 0.26782673597335815, 0.060815200209617615, 0.012841572053730488, 0.2936159372329712], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 15:39:53.422831", "n_pass": [173, 55, 26], "n_token": 12, "loss": [0.05984466150403023, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "self", "query", "query", "results", "query", "(", "self", ".", ".", "delete", "results"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [2, 3, 5, 4, 11, 1, 7]}}
{"prediction": {"error_location": 0.9419109225273132, "repair_targets": [], "repair_candidates": [0.2730835974216461, 0.41949352622032166, 0.11684298515319824, 0.13322530686855316, 0.014375588856637478, 0.009272659197449684, 0.03370633348822594], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 15:39:53.477544", "n_pass": [174, 56, 27], "n_token": 11, "loss": [0.0003526780928950757, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "self", "query", "query", "results", "query", "self", ".", ".", "delete", "results"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [2, 3, 5, 4, 10, 1, 6]}}
{"prediction": {"error_location": 0.9996473789215088, "repair_targets": [], "repair_candidates": [0.3021513819694519, 0.11032887548208237, 0.0682709738612175, 0.15243639051914215, 0.1018659695982933, 0.11601156741380692, 0.14893481135368347], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 15:39:53.531724", "n_pass": [176, 57, 28], "n_token": 10, "loss": [0.00036149643710814416, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "self", "query", "query", "results", "query", "self", ".", "delete", "results"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [2, 3, 5, 4, 9, 1, 6]}}
{"prediction": {"error_location": 0.999638557434082, "repair_targets": [], "repair_candidates": [0.4397755563259125, 0.08157283067703247, 0.07689229398965836, 0.06475906819105148, 0.08886167407035828, 0.16107751429080963, 0.08706111460924149], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 15:39:53.639294", "n_pass": [178, 59, 29], "n_token": 9, "loss": [0.0010309863137081265, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "self", "query", "query", "results", "query", "self", ".", "results"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [2, 3, 5, 4, 8, 1, 6]}}
{"prediction": {"error_location": 0.9989696741104126, "repair_targets": [], "repair_candidates": [0.32817861437797546, 0.20244720578193665, 0.10713250935077667, 0.11782120913267136, 0.07982037216424942, 0.040096547454595566, 0.12450352311134338], "target_probs": 0.0}}




Minimal simplified tokens:

['#NEWLINE#', 'self', 'query', 'query', 'results', 'query', 'self', '.', 'results']
