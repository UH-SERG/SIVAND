
Original sample:

{"has_bug": false, "bug_kind": 0, "bug_kind_name": "NONE", "source_tokens": ["#NEWLINE#", "def post(", "self", ",", "request", ",", "project_id", ",", "usergroup_id", ")", ":", "#NEWLINE#", "#INDENT#", "'\\n        Updates the user group based on the data entered by the user.\\n\\n        Parameter\\n        ---------\\n        request : django.http.HttpRequest\\n            Object representing the request\\n        project_id : int\\n            Identifies the project in the database\\n        usergroup_id : int\\n            Identifies the user group in the database\\n\\n        Returns\\n        -------\\n        django.http.HttpResponse\\n            Rendered template when user group updated\\n        django.http.HttpResponse\\n            Rendered template, if project or user group does not exist\\n        '", "#NEWLINE#", "data", "=", "request", ".", "POST", "#NEWLINE#", "context", "=", "self", ".", "get_context_data", "(", "project_id", ",", "usergroup_id", ")", "#NEWLINE#", "usergroup", "=", "context", ".", "get", "(", "'usergroup'", ")", "#NEWLINE#", "if", "usergroup", ":", "#NEWLINE#", "#INDENT#", "usergroup", ".", "name", "=", "strip_tags", "(", "data", ".", "get", "(", "'name'", ")", ")", "#NEWLINE#", "usergroup", ".", "description", "=", "strip_tags", "(", "data", ".", "get", "(", "'description'", ")", ")", "#NEWLINE#", "usergroup", ".", "save", "(", ")", "#NEWLINE#", "messages", ".", "success", "(", "self", ".", "request", ",", "'The user group has been updated.'", ")", "#NEWLINE#", "#UNINDENT#", "return", "self", ".", "render_to_response", "(", "context", ")"], "error_location": [0], "repair_targets": [], "repair_candidates": [21, 34, 97, 2, 23, 84, 93, 32, 42, 46, 60, 74, 8, 29, 4, 17, 86, 6, 27, 15, 52, 66], "provenances": [{"datasetProvenance": {"datasetName": "ETHPy150Open", "filepath": "ExCiteS/geokey/geokey/users/views.py", "license": "apache-2.0", "note": "license: manual_eval"}}], "txt_file": "eval__VARIABLE_MISUSE__SStuB.txt-00000-of-00300", "js_count": 2534, "results": {"model": "transformer", "prob": {"loc": [[0.729134202003479, 2.4230851067841286e-06, 1.0975346640407224e-06, 5.962155569250172e-08, 3.111207661277149e-06, 4.4780030350466404e-08, 1.8900161649071379e-06, 2.5758206234627323e-08, 1.32467903313227e-06, 1.298102514368793e-08, 4.5290082795190756e-08, 1.3789708930289635e-07, 1.0936389571725158e-07, 3.335231042456144e-07, 1.7150198061699484e-07, 2.3305046852328815e-06, 2.12512603070536e-08, 0.00229936046525836, 3.8115729239507345e-07, 1.4611831034017086e-07, 6.609868705709232e-07, 8.285242643069068e-07, 7.054959638708169e-08, 8.03171872121311e-07, 7.277643732095385e-08, 4.137985953889256e-08, 1.336081822955748e-07, 0.006082593929022551, 3.6235090306036e-07, 0.0018426821334287524, 6.448622684729344e-07, 2.2707455116233177e-07, 4.7579871420566633e-07, 1.9672429019124138e-08, 6.349439445330063e-07, 1.375951939053266e-07, 1.534531719471488e-07, 2.0521922579064267e-06, 3.7717557006544666e-06, 8.641900990369322e-07, 2.4189498617488425e-06, 5.240698328634608e-07, 0.004214722663164139, 2.5169508717226563e-06, 5.087101726530818e-06, 1.6701078493497334e-06, 4.389401965454454e-06, 2.6149109544348903e-07, 9.196971006986132e-08, 5.5205322979645643e-08, 1.227300458594982e-06, 4.260681976120395e-07, 1.2877274457423482e-05, 8.090744927358173e-07, 1.4240023915590427e-07, 1.2838310112783802e-06, 2.7837770630867453e-06, 1.7646738115217886e-06, 1.4872703104629181e-06, 6.655449737991148e-07, 2.8151402148068883e-05, 3.3734417570485675e-07, 3.2492896480107447e-06, 1.0393087279680913e-07, 4.792835284206376e-07, 1.406242375878719e-07, 1.2664750101976097e-05, 7.034572035991005e-07, 1.875788342431406e-07, 1.5662839132346562e-06, 3.0718333619006444e-06, 1.8986572740686825e-06, 1.3294020391185768e-06, 6.93677463914355e-07, 1.6861016547409235e-06, 1.837399992155042e-07, 1.3953335553651414e-07, 8.717392461221607e-07, 2.1155556169105694e-06, 1.5203953580567031e-06, 3.0699956710122933e-07, 2.8301661814111867e-07, 9.800680089711022e-08, 1.832571712157005e-07, 0.018435077741742134, 1.0529562359806732e-06, 1.1684616765705869e-05, 2.1745470348832896e-06, 1.4525550795951858e-05, 2.269393462484004e-06, 6.55054805065447e-07, 7.134775614758837e-07, 4.971401068587511e-08, 4.966653705196222e-06, 1.4132118053566955e-07, 6.333934976510136e-08, 2.326086132597993e-06, 0.23782137036323547, 1.2643212130569736e-06]], "pointer": [[0.0, 0.0, 0.007115465588867664, 0.0, 0.19719529151916504, 0.0, 0.13382260501384735, 0.0, 0.01458393968641758, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.09530645608901978, 0.0, 0.017050830647349358, 0.0, 0.0, 0.0, 0.015182781964540482, 0.0, 0.0003761481784749776, 0.0, 0.0, 0.0, 0.0005902530974708498, 0.0, 0.0005636807181872427, 0.0, 0.0, 0.05505494773387909, 0.0, 0.0005180973676033318, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 3.018597089976538e-05, 0.0, 0.0, 0.0, 0.010916110128164291, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0052695563063025475, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.07275815308094025, 0.0, 0.0, 0.0, 0.0, 0.0, 0.005161708686500788, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.25425806641578674, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0007966756238602102, 0.0, 0.10582569986581802, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0004738725256174803, 0.0, 0.0, 0.0, 0.00714942766353488, 0.0]], "target": [0.0]}, "loss": [0.3158976435661316, 0.0], "acc": [1.0, 0.0, 0.0, 0.0]}}


Trace of simplified code(s):

{"result": {"time": "2021-02-11 15:58:49.228019", "n_pass": [1, 1, 1], "n_token": 99, "loss": [0.3158976435661316, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def post(", "self", ",", "request", ",", "project_id", ",", "usergroup_id", ")", ":", "#NEWLINE#", "#INDENT#", "'\\n        Updates the user group based on the data entered by the user.\\n\\n        Parameter\\n        ---------\\n        request : django.http.HttpRequest\\n            Object representing the request\\n        project_id : int\\n            Identifies the project in the database\\n        usergroup_id : int\\n            Identifies the user group in the database\\n\\n        Returns\\n        -------\\n        django.http.HttpResponse\\n            Rendered template when user group updated\\n        django.http.HttpResponse\\n            Rendered template, if project or user group does not exist\\n        '", "#NEWLINE#", "data", "=", "request", ".", "POST", "#NEWLINE#", "context", "=", "self", ".", "get_context_data", "(", "project_id", ",", "usergroup_id", ")", "#NEWLINE#", "usergroup", "=", "context", ".", "get", "(", "'usergroup'", ")", "#NEWLINE#", "if", "usergroup", ":", "#NEWLINE#", "#INDENT#", "usergroup", ".", "name", "=", "strip_tags", "(", "data", ".", "get", "(", "'name'", ")", ")", "#NEWLINE#", "usergroup", ".", "description", "=", "strip_tags", "(", "data", ".", "get", "(", "'description'", ")", ")", "#NEWLINE#", "usergroup", ".", "save", "(", ")", "#NEWLINE#", "messages", ".", "success", "(", "self", ".", "request", ",", "'The user group has been updated.'", ")", "#NEWLINE#", "#UNINDENT#", "return", "self", ".", "render_to_response", "(", "context", ")"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [21, 34, 97, 2, 23, 84, 93, 32, 42, 46, 60, 74, 8, 29, 4, 17, 86, 6, 27, 15, 52, 66]}}
{"prediction": {"error_location": 0.729134202003479, "repair_targets": [], "repair_candidates": [0.007115465588867664, 0.19719529151916504, 0.13382260501384735, 0.01458393968641758, 0.09530645608901978, 0.017050830647349358, 0.015182781964540482, 0.0003761481784749776, 0.0005902530974708498, 0.0005636807181872427, 0.05505494773387909, 0.0005180973676033318, 3.018597089976538e-05, 0.010916110128164291, 0.0052695563063025475, 0.07275815308094025, 0.005161708686500788, 0.25425806641578674, 0.0007966756238602102, 0.10582569986581802, 0.0004738725256174803, 0.00714942766353488], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 15:58:49.291317", "n_pass": [50, 2, 2], "n_token": 93, "loss": [0.5430450439453125, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def post(", "self", ",", "request", ",", "project_id", ",", "usergroup_id", ")", ":", "#NEWLINE#", "#INDENT#", "'\\n        Updates the user group based on the data entered by the user.\\n\\n        Parameter\\n        ---------\\n        request : django.http.HttpRequest\\n            Object representing the request\\n        project_id : int\\n            Identifies the project in the database\\n        usergroup_id : int\\n            Identifies the user group in the database\\n\\n        Returns\\n        -------\\n        django.http.HttpResponse\\n            Rendered template when user group updated\\n        django.http.HttpResponse\\n            Rendered template, if project or user group does not exist\\n        '", "#NEWLINE#", "data", "=", "request", ".", "POST", "#NEWLINE#", "context", "=", "self", ".", "get_context_data", "(", "project_id", ",", "usergroup_id", ")", "#NEWLINE#", "usergroup", "=", "context", ".", "usergroup", ":", "#NEWLINE#", "#INDENT#", "usergroup", ".", "name", "=", "strip_tags", "(", "data", ".", "get", "(", "'name'", ")", ")", "#NEWLINE#", "usergroup", ".", "description", "=", "strip_tags", "(", "data", ".", "get", "(", "'description'", ")", ")", "#NEWLINE#", "usergroup", ".", "save", "(", ")", "#NEWLINE#", "messages", ".", "success", "(", "self", ".", "request", ",", "'The user group has been updated.'", ")", "#NEWLINE#", "#UNINDENT#", "return", "self", ".", "render_to_response", "(", "context", ")"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [21, 34, 91, 2, 23, 78, 87, 32, 36, 40, 54, 68, 8, 29, 4, 17, 80, 6, 27, 15, 46, 60]}}
{"prediction": {"error_location": 0.5809764862060547, "repair_targets": [], "repair_candidates": [0.03293611854314804, 0.2004101574420929, 0.10115264356136322, 0.007120219990611076, 0.05345921590924263, 0.09829487651586533, 0.01255410723388195, 0.008155073039233685, 0.0004943329840898514, 0.0002551276993472129, 0.0306464284658432, 0.008244416676461697, 0.00413303729146719, 0.015137513168156147, 0.001506722066551447, 0.03242787718772888, 0.005189347546547651, 0.30511170625686646, 0.02126767486333847, 0.05297645181417465, 0.002875471720471978, 0.005651434417814016], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 15:58:49.350044", "n_pass": [52, 3, 3], "n_token": 87, "loss": [0.49282997846603394, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def post(", "self", ",", "request", ",", "project_id", ",", "usergroup_id", ")", ":", "#NEWLINE#", "#INDENT#", "'\\n        Updates the user group based on the data entered by the user.\\n\\n        Parameter\\n        ---------\\n        request : django.http.HttpRequest\\n            Object representing the request\\n        project_id : int\\n            Identifies the project in the database\\n        usergroup_id : int\\n            Identifies the user group in the database\\n\\n        Returns\\n        -------\\n        django.http.HttpResponse\\n            Rendered template when user group updated\\n        django.http.HttpResponse\\n            Rendered template, if project or user group does not exist\\n        '", "#NEWLINE#", "data", "=", "request", ".", "POST", "#NEWLINE#", "context", "=", "self", ".", "get_context_data", "(", "project_id", ",", "usergroup_id", ")", "#NEWLINE#", "usergroup", "=", "context", ".", "usergroup", ":", "#NEWLINE#", "#INDENT#", "usergroup", ".", "name", "=", "strip_tags", "(", "data", ".", "usergroup", ".", "description", "=", "strip_tags", "(", "data", ".", "get", "(", "'description'", ")", ")", "#NEWLINE#", "usergroup", ".", "save", "(", ")", "#NEWLINE#", "messages", ".", "success", "(", "self", ".", "request", ",", "'The user group has been updated.'", ")", "#NEWLINE#", "#UNINDENT#", "return", "self", ".", "render_to_response", "(", "context", ")"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [21, 34, 85, 2, 23, 72, 81, 32, 36, 40, 48, 62, 8, 29, 4, 17, 74, 6, 27, 15, 46, 54]}}
{"prediction": {"error_location": 0.6108951568603516, "repair_targets": [], "repair_candidates": [0.027909021824598312, 0.14395716786384583, 0.07364186644554138, 0.00765021750703454, 0.09594757109880447, 0.05184127762913704, 0.030892441049218178, 0.01200099103152752, 0.0012360250111669302, 0.00026076706126332283, 0.0650651603937149, 0.037344664335250854, 0.005835891235619783, 0.04078833386301994, 0.010602469556033611, 0.004525801166892052, 0.003232165239751339, 0.27724751830101013, 0.06125300005078316, 0.035803746432065964, 0.00896779540926218, 0.003996110055595636], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 15:58:49.411028", "n_pass": [96, 4, 4], "n_token": 84, "loss": [0.5331664085388184, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def post(", "self", ",", "request", ",", "project_id", ",", "usergroup_id", ")", ":", "#NEWLINE#", "#INDENT#", "'\\n        Updates the user group based on the data entered by the user.\\n\\n        Parameter\\n        ---------\\n        request : django.http.HttpRequest\\n            Object representing the request\\n        project_id : int\\n            Identifies the project in the database\\n        usergroup_id : int\\n            Identifies the user group in the database\\n\\n        Returns\\n        -------\\n        django.http.HttpResponse\\n            Rendered template when user group updated\\n        django.http.HttpResponse\\n            Rendered template, if project or user group does not exist\\n        '", "#NEWLINE#", "data", "=", "request", ".", "POST", "#NEWLINE#", "context", "=", "self", ".", "get_context_data", "(", "project_id", ",", "usergroup_id", ")", "#NEWLINE#", "usergroup", "=", "context", ".", "usergroup", ":", "#NEWLINE#", "#INDENT#", "usergroup", ".", "name", "=", "strip_tags", "(", "data", ".", "usergroup", ".", "description", "data", ".", "get", "(", "'description'", ")", ")", "#NEWLINE#", "usergroup", ".", "save", "(", ")", "#NEWLINE#", "messages", ".", "success", "(", "self", ".", "request", ",", "'The user group has been updated.'", ")", "#NEWLINE#", "#UNINDENT#", "return", "self", ".", "render_to_response", "(", "context", ")"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [21, 34, 82, 2, 23, 69, 78, 32, 36, 40, 48, 59, 8, 29, 4, 17, 71, 6, 27, 15, 46, 51]}}
{"prediction": {"error_location": 0.5867441892623901, "repair_targets": [], "repair_candidates": [0.027177779003977776, 0.1247226893901825, 0.06601683050394058, 0.008328285068273544, 0.09177882969379425, 0.04864344000816345, 0.045725833624601364, 0.01266466174274683, 0.0016326922923326492, 0.00034766600583679974, 0.09401646256446838, 0.08200608938932419, 0.006350935436785221, 0.027556737884879112, 0.035130731761455536, 0.005175573751330376, 0.004691499751061201, 0.21164003014564514, 0.062498416751623154, 0.030585967004299164, 0.009389746934175491, 0.003919156733900309], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 15:58:49.469555", "n_pass": [98, 5, 5], "n_token": 81, "loss": [0.5293076038360596, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def post(", "self", ",", "request", ",", "project_id", ",", "usergroup_id", ")", ":", "#NEWLINE#", "#INDENT#", "'\\n        Updates the user group based on the data entered by the user.\\n\\n        Parameter\\n        ---------\\n        request : django.http.HttpRequest\\n            Object representing the request\\n        project_id : int\\n            Identifies the project in the database\\n        usergroup_id : int\\n            Identifies the user group in the database\\n\\n        Returns\\n        -------\\n        django.http.HttpResponse\\n            Rendered template when user group updated\\n        django.http.HttpResponse\\n            Rendered template, if project or user group does not exist\\n        '", "#NEWLINE#", "data", "=", "request", ".", "POST", "#NEWLINE#", "context", "=", "self", ".", "get_context_data", "(", "project_id", ",", "usergroup_id", ")", "#NEWLINE#", "usergroup", "=", "context", ".", "usergroup", ":", "#NEWLINE#", "#INDENT#", "usergroup", ".", "name", "=", "strip_tags", "(", "data", ".", "usergroup", ".", "description", "data", ".", "get", ")", "#NEWLINE#", "usergroup", ".", "save", "(", ")", "#NEWLINE#", "messages", ".", "success", "(", "self", ".", "request", ",", "'The user group has been updated.'", ")", "#NEWLINE#", "#UNINDENT#", "return", "self", ".", "render_to_response", "(", "context", ")"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [21, 34, 79, 2, 23, 66, 75, 32, 36, 40, 48, 56, 8, 29, 4, 17, 68, 6, 27, 15, 46, 51]}}
{"prediction": {"error_location": 0.5890125632286072, "repair_targets": [], "repair_candidates": [0.024586787447333336, 0.121523916721344, 0.06969987601041794, 0.009420919232070446, 0.08358064293861389, 0.044596780091524124, 0.0436510406434536, 0.012116782367229462, 0.0018422029679641128, 0.0005419518565759063, 0.08574144542217255, 0.07501785457134247, 0.007998697459697723, 0.024230213835835457, 0.03444558382034302, 0.005151157733052969, 0.007943148724734783, 0.2630055844783783, 0.042476218193769455, 0.029213618487119675, 0.008752209134399891, 0.004463385324925184], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 15:58:49.529218", "n_pass": [100, 6, 6], "n_token": 78, "loss": [0.5008538961410522, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def post(", "self", ",", "request", ",", "project_id", ",", "usergroup_id", ")", ":", "#NEWLINE#", "#INDENT#", "'\\n        Updates the user group based on the data entered by the user.\\n\\n        Parameter\\n        ---------\\n        request : django.http.HttpRequest\\n            Object representing the request\\n        project_id : int\\n            Identifies the project in the database\\n        usergroup_id : int\\n            Identifies the user group in the database\\n\\n        Returns\\n        -------\\n        django.http.HttpResponse\\n            Rendered template when user group updated\\n        django.http.HttpResponse\\n            Rendered template, if project or user group does not exist\\n        '", "#NEWLINE#", "data", "=", "request", ".", "POST", "#NEWLINE#", "context", "=", "self", ".", "get_context_data", "(", "project_id", ",", "usergroup_id", ")", "#NEWLINE#", "usergroup", "=", "context", ".", "usergroup", ":", "#NEWLINE#", "#INDENT#", "usergroup", ".", "name", "=", "strip_tags", "(", "data", ".", "usergroup", ".", "description", "data", ".", "get", ")", "#NEWLINE#", "usergroup", ")", "#NEWLINE#", "messages", ".", "success", "(", "self", ".", "request", ",", "'The user group has been updated.'", ")", "#NEWLINE#", "#UNINDENT#", "return", "self", ".", "render_to_response", "(", "context", ")"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [21, 34, 76, 2, 23, 63, 72, 32, 36, 40, 48, 56, 8, 29, 4, 17, 65, 6, 27, 15, 46, 51]}}
{"prediction": {"error_location": 0.6060130000114441, "repair_targets": [], "repair_candidates": [0.031790994107723236, 0.17010673880577087, 0.1014605239033699, 0.015834134072065353, 0.12085433304309845, 0.05313059315085411, 0.06255196034908295, 0.01494427677243948, 0.0033830213360488415, 0.0015319704543799162, 0.039415113627910614, 0.10283857583999634, 0.007995695807039738, 0.012769430875778198, 0.04405597597360611, 0.0068528661504387856, 0.014357749372720718, 0.06420151144266129, 0.053462471812963486, 0.057236894965171814, 0.015164411626756191, 0.0060608577914536], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 15:58:49.586919", "n_pass": [101, 7, 7], "n_token": 75, "loss": [0.6295509338378906, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def post(", "self", ",", "request", ",", "project_id", ",", "usergroup_id", ")", ":", "#NEWLINE#", "#INDENT#", "'\\n        Updates the user group based on the data entered by the user.\\n\\n        Parameter\\n        ---------\\n        request : django.http.HttpRequest\\n            Object representing the request\\n        project_id : int\\n            Identifies the project in the database\\n        usergroup_id : int\\n            Identifies the user group in the database\\n\\n        Returns\\n        -------\\n        django.http.HttpResponse\\n            Rendered template when user group updated\\n        django.http.HttpResponse\\n            Rendered template, if project or user group does not exist\\n        '", "#NEWLINE#", "data", "=", "request", ".", "POST", "#NEWLINE#", "context", "=", "self", ".", "get_context_data", "(", "project_id", ",", "usergroup_id", ")", "#NEWLINE#", "usergroup", "=", "context", ".", "usergroup", ":", "#NEWLINE#", "#INDENT#", "usergroup", ".", "name", "=", "strip_tags", "(", "data", ".", "usergroup", ".", "description", "data", ".", "get", ")", "#NEWLINE#", "usergroup", ".", "success", "(", "self", ".", "request", ",", "'The user group has been updated.'", ")", "#NEWLINE#", "#UNINDENT#", "return", "self", ".", "render_to_response", "(", "context", ")"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [21, 34, 73, 2, 23, 60, 69, 32, 36, 40, 48, 56, 8, 29, 4, 17, 62, 6, 27, 15, 46, 51]}}
{"prediction": {"error_location": 0.5328309535980225, "repair_targets": [], "repair_candidates": [0.019990738481283188, 0.10756928473711014, 0.05788519233465195, 0.009024366736412048, 0.08470650017261505, 0.0395052507519722, 0.043973904103040695, 0.00921399611979723, 0.0021630621049553156, 0.0008577367407269776, 0.03947732225060463, 0.0736083909869194, 0.006188045255839825, 0.013134440407156944, 0.04963220655918121, 0.0036666602827608585, 0.010990388691425323, 0.3244832158088684, 0.040937088429927826, 0.04755716770887375, 0.01141152810305357, 0.00402352400124073], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 15:58:49.645281", "n_pass": [102, 8, 8], "n_token": 72, "loss": [0.6756008267402649, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def post(", "self", ",", "request", ",", "project_id", ",", "usergroup_id", ")", ":", "#NEWLINE#", "#INDENT#", "'\\n        Updates the user group based on the data entered by the user.\\n\\n        Parameter\\n        ---------\\n        request : django.http.HttpRequest\\n            Object representing the request\\n        project_id : int\\n            Identifies the project in the database\\n        usergroup_id : int\\n            Identifies the user group in the database\\n\\n        Returns\\n        -------\\n        django.http.HttpResponse\\n            Rendered template when user group updated\\n        django.http.HttpResponse\\n            Rendered template, if project or user group does not exist\\n        '", "#NEWLINE#", "data", "=", "request", ".", "POST", "#NEWLINE#", "context", "=", "self", ".", "get_context_data", "(", "project_id", ",", "usergroup_id", ")", "#NEWLINE#", "usergroup", "=", "context", ".", "usergroup", ":", "#NEWLINE#", "#INDENT#", "usergroup", ".", "name", "=", "strip_tags", "(", "data", ".", "usergroup", ".", "description", "data", ".", "get", ")", "#NEWLINE#", "usergroup", "self", ".", "request", ",", "'The user group has been updated.'", ")", "#NEWLINE#", "#UNINDENT#", "return", "self", ".", "render_to_response", "(", "context", ")"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [21, 34, 70, 2, 23, 57, 66, 32, 36, 40, 48, 56, 8, 29, 4, 17, 59, 6, 27, 15, 46, 51]}}
{"prediction": {"error_location": 0.5088505744934082, "repair_targets": [], "repair_candidates": [0.012019123882055283, 0.06627222895622253, 0.04074207320809364, 0.005645567551255226, 0.069234699010849, 0.026264360174536705, 0.06137646362185478, 0.006798846647143364, 0.0009735316270962358, 0.0003634607419371605, 0.11006093770265579, 0.1182970479130745, 0.011802670545876026, 0.10723485797643661, 0.08579663932323456, 0.009493998251855373, 0.009517736732959747, 0.14728066325187683, 0.052029144018888474, 0.037450458854436874, 0.010492794215679169, 0.010852714069187641], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 15:58:49.703601", "n_pass": [104, 9, 9], "n_token": 68, "loss": [0.5576778054237366, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def post(", "self", ",", "request", ",", "project_id", ",", "usergroup_id", ")", ":", "#NEWLINE#", "#INDENT#", "'\\n        Updates the user group based on the data entered by the user.\\n\\n        Parameter\\n        ---------\\n        request : django.http.HttpRequest\\n            Object representing the request\\n        project_id : int\\n            Identifies the project in the database\\n        usergroup_id : int\\n            Identifies the user group in the database\\n\\n        Returns\\n        -------\\n        django.http.HttpResponse\\n            Rendered template when user group updated\\n        django.http.HttpResponse\\n            Rendered template, if project or user group does not exist\\n        '", "#NEWLINE#", "data", "=", "request", ".", "POST", "#NEWLINE#", "context", "=", "self", ".", "get_context_data", "(", "project_id", ",", "usergroup_id", ")", "#NEWLINE#", "usergroup", "=", "context", ".", "usergroup", ":", "#NEWLINE#", "#INDENT#", "usergroup", ".", "name", "=", "strip_tags", "(", "data", ".", "usergroup", ".", "description", "data", ".", "get", ")", "#NEWLINE#", "usergroup", "self", ".", "request", "#UNINDENT#", "return", "self", ".", "render_to_response", "(", "context", ")"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [21, 34, 66, 2, 23, 57, 62, 32, 36, 40, 48, 56, 8, 29, 4, 17, 59, 6, 27, 15, 46, 51]}}
{"prediction": {"error_location": 0.5725371241569519, "repair_targets": [], "repair_candidates": [0.013209838420152664, 0.07560443133115768, 0.053072407841682434, 0.005582941230386496, 0.0907403752207756, 0.03372843563556671, 0.026796851307153702, 0.01089972723275423, 0.0008027498261071742, 0.0002503452415112406, 0.08844144642353058, 0.07299412041902542, 0.01657765358686447, 0.11516918241977692, 0.04938065633177757, 0.017054716125130653, 0.013409978710114956, 0.20769114792346954, 0.043518807739019394, 0.04943352937698364, 0.013173172250390053, 0.0024674399755895138], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 15:58:49.762532", "n_pass": [110, 10, 10], "n_token": 65, "loss": [0.5080928802490234, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def post(", "self", ",", "request", ",", "project_id", ",", "usergroup_id", "#INDENT#", "'\\n        Updates the user group based on the data entered by the user.\\n\\n        Parameter\\n        ---------\\n        request : django.http.HttpRequest\\n            Object representing the request\\n        project_id : int\\n            Identifies the project in the database\\n        usergroup_id : int\\n            Identifies the user group in the database\\n\\n        Returns\\n        -------\\n        django.http.HttpResponse\\n            Rendered template when user group updated\\n        django.http.HttpResponse\\n            Rendered template, if project or user group does not exist\\n        '", "#NEWLINE#", "data", "=", "request", ".", "POST", "#NEWLINE#", "context", "=", "self", ".", "get_context_data", "(", "project_id", ",", "usergroup_id", ")", "#NEWLINE#", "usergroup", "=", "context", ".", "usergroup", ":", "#NEWLINE#", "#INDENT#", "usergroup", ".", "name", "=", "strip_tags", "(", "data", ".", "usergroup", ".", "description", "data", ".", "get", ")", "#NEWLINE#", "usergroup", "self", ".", "request", "#UNINDENT#", "return", "self", ".", "render_to_response", "(", "context", ")"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [18, 31, 63, 2, 20, 54, 59, 29, 33, 37, 45, 53, 8, 26, 4, 14, 56, 6, 24, 12, 43, 48]}}
{"prediction": {"error_location": 0.6016420125961304, "repair_targets": [], "repair_candidates": [0.012382980436086655, 0.05607420578598976, 0.03786437213420868, 0.004473340231925249, 0.0686262771487236, 0.02731332741677761, 0.03327549248933792, 0.009358036331832409, 0.0004457798204384744, 0.00010345951886847615, 0.1003875881433487, 0.09737644344568253, 0.013007896952331066, 0.12281017005443573, 0.025407927110791206, 0.014313360676169395, 0.009735014289617538, 0.24822403490543365, 0.031719598919153214, 0.07613010704517365, 0.00853748433291912, 0.0024331198073923588], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 15:58:49.819214", "n_pass": [111, 11, 11], "n_token": 62, "loss": [0.7535710334777832, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def post(", "self", ",", "request", ",", "project_id", ",", "usergroup_id", "data", "=", "request", ".", "POST", "#NEWLINE#", "context", "=", "self", ".", "get_context_data", "(", "project_id", ",", "usergroup_id", ")", "#NEWLINE#", "usergroup", "=", "context", ".", "usergroup", ":", "#NEWLINE#", "#INDENT#", "usergroup", ".", "name", "=", "strip_tags", "(", "data", ".", "usergroup", ".", "description", "data", ".", "get", ")", "#NEWLINE#", "usergroup", "self", ".", "request", "#UNINDENT#", "return", "self", ".", "render_to_response", "(", "context", ")"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [15, 28, 60, 2, 17, 51, 56, 26, 30, 34, 42, 50, 8, 23, 4, 11, 53, 6, 21, 9, 40, 45]}}
{"prediction": {"error_location": 0.4706827700138092, "repair_targets": [], "repair_candidates": [0.01054527796804905, 0.04703165590763092, 0.017481699585914612, 0.0038402508944272995, 0.010993164032697678, 0.030964715406298637, 0.07592923939228058, 0.005332898814231157, 0.00047362715122289956, 2.68843250523787e-05, 0.14006787538528442, 0.14778068661689758, 0.009596887975931168, 0.23648782074451447, 0.011652704328298569, 0.013460194692015648, 0.004217787180095911, 0.1518392264842987, 0.045180123299360275, 0.02359849587082863, 0.008246387355029583, 0.00525242555886507], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 15:58:49.934831", "n_pass": [115, 13, 12], "n_token": 59, "loss": [1.1618461608886719, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def post(", "self", ",", "request", ",", "project_id", ",", "usergroup_id", "data", "=", "request", ".", "POST", "#NEWLINE#", "context", "=", "self", "project_id", ",", "usergroup_id", ")", "#NEWLINE#", "usergroup", "=", "context", ".", "usergroup", ":", "#NEWLINE#", "#INDENT#", "usergroup", ".", "name", "=", "strip_tags", "(", "data", ".", "usergroup", ".", "description", "data", ".", "get", ")", "#NEWLINE#", "usergroup", "self", ".", "request", "#UNINDENT#", "return", "self", ".", "render_to_response", "(", "context", ")"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [15, 25, 57, 2, 17, 48, 53, 23, 27, 31, 39, 47, 8, 20, 4, 11, 50, 6, 18, 9, 37, 42]}}
{"prediction": {"error_location": 0.31290799379348755, "repair_targets": [], "repair_candidates": [0.008537370711565018, 0.11341679096221924, 0.06043887510895729, 0.005738580599427223, 0.06792925298213959, 0.034684013575315475, 0.10316236317157745, 0.0030570458620786667, 0.00048053855425678194, 9.175436571240425e-05, 0.1036812961101532, 0.06093083694577217, 0.009869405999779701, 0.2249533087015152, 0.008336885832250118, 0.0091758007183671, 0.0045435163192451, 0.09086786955595016, 0.05200021341443062, 0.021181778982281685, 0.012281189672648907, 0.004641308449208736], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 15:58:50.218739", "n_pass": [175, 18, 13], "n_token": 58, "loss": [1.0246978998184204, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def post(", "self", ",", "request", ",", "project_id", ",", "usergroup_id", "data", "=", "request", ".", "POST", "context", "=", "self", "project_id", ",", "usergroup_id", ")", "#NEWLINE#", "usergroup", "=", "context", ".", "usergroup", ":", "#NEWLINE#", "#INDENT#", "usergroup", ".", "name", "=", "strip_tags", "(", "data", ".", "usergroup", ".", "description", "data", ".", "get", ")", "#NEWLINE#", "usergroup", "self", ".", "request", "#UNINDENT#", "return", "self", ".", "render_to_response", "(", "context", ")"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [14, 24, 56, 2, 16, 47, 52, 22, 26, 30, 38, 46, 8, 19, 4, 11, 49, 6, 17, 9, 36, 41]}}
{"prediction": {"error_location": 0.35890480875968933, "repair_targets": [], "repair_candidates": [0.012241045013070107, 0.16184885799884796, 0.06905853003263474, 0.011611021123826504, 0.12168078869581223, 0.0737868919968605, 0.04461212456226349, 0.0026843289379030466, 0.0006671151495538652, 7.461373024852946e-05, 0.08091428875923157, 0.02603938989341259, 0.009304230101406574, 0.13603246212005615, 0.03222515806555748, 0.011840146034955978, 0.012575800530612469, 0.07106149196624756, 0.06684771180152893, 0.03474758565425873, 0.014136618934571743, 0.006009804084897041], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 15:58:50.446409", "n_pass": [186, 22, 14], "n_token": 56, "loss": [1.0340418815612793, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def post(", "self", ",", "request", ",", "project_id", ",", "usergroup_id", "data", "=", "request", ".", "POST", "context", "=", "self", "project_id", ",", "usergroup_id", ")", "#NEWLINE#", "usergroup", "=", "context", ".", "usergroup", ":", "#NEWLINE#", "#INDENT#", "usergroup", ".", "strip_tags", "(", "data", ".", "usergroup", ".", "description", "data", ".", "get", ")", "#NEWLINE#", "usergroup", "self", ".", "request", "#UNINDENT#", "return", "self", ".", "render_to_response", "(", "context", ")"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [14, 24, 54, 2, 16, 45, 50, 22, 26, 30, 36, 44, 8, 19, 4, 11, 47, 6, 17, 9, 34, 39]}}
{"prediction": {"error_location": 0.35556691884994507, "repair_targets": [], "repair_candidates": [0.012815984897315502, 0.1606544405221939, 0.0647353082895279, 0.012589552439749241, 0.12164405733346939, 0.05964824929833412, 0.04622376710176468, 0.003188521135598421, 0.0006223746458999813, 5.9886897361138836e-05, 0.05853106826543808, 0.024458324536681175, 0.0063333031721413136, 0.10992421954870224, 0.04416622593998909, 0.00942110363394022, 0.016256824135780334, 0.07518371939659119, 0.11580067127943039, 0.0348987877368927, 0.01732288859784603, 0.005520704668015242], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 15:58:50.503034", "n_pass": [187, 23, 15], "n_token": 54, "loss": [1.0742642879486084, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def post(", "self", ",", "request", ",", "project_id", ",", "usergroup_id", "data", "=", "request", ".", "POST", "context", "=", "self", "project_id", ",", "usergroup_id", ")", "#NEWLINE#", "usergroup", "=", "context", ".", "usergroup", ":", "#NEWLINE#", "#INDENT#", "usergroup", ".", "data", ".", "usergroup", ".", "description", "data", ".", "get", ")", "#NEWLINE#", "usergroup", "self", ".", "request", "#UNINDENT#", "return", "self", ".", "render_to_response", "(", "context", ")"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [14, 24, 52, 2, 16, 43, 48, 22, 26, 30, 34, 42, 8, 19, 4, 11, 45, 6, 17, 9, 32, 37]}}
{"prediction": {"error_location": 0.34154897928237915, "repair_targets": [], "repair_candidates": [0.004148333333432674, 0.07081978023052216, 0.049423739314079285, 0.005200655665248632, 0.6556150913238525, 0.011464806273579597, 0.02822650596499443, 0.0008685172069817781, 0.0004511122533585876, 4.0742008422967046e-05, 0.033067185431718826, 0.003808565903455019, 0.004507172852754593, 0.026216911152005196, 0.019187768921256065, 0.023575574159622192, 0.015545610338449478, 0.023868706077337265, 0.012728605419397354, 0.008170590735971928, 0.0008520902483724058, 0.002211976097896695], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 15:58:50.784263", "n_pass": [200, 28, 16], "n_token": 53, "loss": [0.48667171597480774, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "self", ",", "request", ",", "project_id", ",", "usergroup_id", "data", "=", "request", ".", "POST", "context", "=", "self", "project_id", ",", "usergroup_id", ")", "#NEWLINE#", "usergroup", "=", "context", ".", "usergroup", ":", "#NEWLINE#", "#INDENT#", "usergroup", ".", "data", ".", "usergroup", ".", "description", "data", ".", "get", ")", "#NEWLINE#", "usergroup", "self", ".", "request", "#UNINDENT#", "return", "self", ".", "render_to_response", "(", "context", ")"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [13, 23, 51, 1, 15, 42, 47, 21, 25, 29, 33, 41, 7, 18, 3, 10, 44, 5, 16, 8, 31, 36]}}
{"prediction": {"error_location": 0.6146687865257263, "repair_targets": [], "repair_candidates": [0.009127986617386341, 0.19695541262626648, 0.04345947876572609, 0.007595003116875887, 0.40925049781799316, 0.027988163754343987, 0.006643776316195726, 0.0020370592828840017, 0.0004594725032802671, 5.721672278014012e-05, 0.05472960323095322, 0.0025104882661253214, 0.015626482665538788, 0.039153020828962326, 0.04538367688655853, 0.04808051884174347, 0.02193741872906685, 0.035032618790864944, 0.007998370565474033, 0.022104622796177864, 0.001688377233222127, 0.002180736046284437], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 15:58:50.841290", "n_pass": [202, 29, 17], "n_token": 52, "loss": [0.5274117588996887, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "self", "request", ",", "project_id", ",", "usergroup_id", "data", "=", "request", ".", "POST", "context", "=", "self", "project_id", ",", "usergroup_id", ")", "#NEWLINE#", "usergroup", "=", "context", ".", "usergroup", ":", "#NEWLINE#", "#INDENT#", "usergroup", ".", "data", ".", "usergroup", ".", "description", "data", ".", "get", ")", "#NEWLINE#", "usergroup", "self", ".", "request", "#UNINDENT#", "return", "self", ".", "render_to_response", "(", "context", ")"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [12, 22, 50, 1, 14, 41, 46, 20, 24, 28, 32, 40, 6, 17, 2, 9, 43, 4, 15, 7, 30, 35]}}
{"prediction": {"error_location": 0.5901303887367249, "repair_targets": [], "repair_candidates": [0.008806905709207058, 0.11235316097736359, 0.03849916160106659, 0.005514365155249834, 0.32095468044281006, 0.03753127530217171, 0.004850207827985287, 0.0019316597608849406, 0.00034715337096713483, 6.777976523153484e-05, 0.07101265341043472, 0.002838925225660205, 0.015749741345643997, 0.07685019820928574, 0.06351012736558914, 0.08834072202444077, 0.024487381801009178, 0.08964195102453232, 0.006599730346351862, 0.026298638433218002, 0.0010583259863778949, 0.00275527429766953], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 15:58:50.900573", "n_pass": [204, 30, 18], "n_token": 51, "loss": [0.6687579154968262, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "self", "request", "project_id", ",", "usergroup_id", "data", "=", "request", ".", "POST", "context", "=", "self", "project_id", ",", "usergroup_id", ")", "#NEWLINE#", "usergroup", "=", "context", ".", "usergroup", ":", "#NEWLINE#", "#INDENT#", "usergroup", ".", "data", ".", "usergroup", ".", "description", "data", ".", "get", ")", "#NEWLINE#", "usergroup", "self", ".", "request", "#UNINDENT#", "return", "self", ".", "render_to_response", "(", "context", ")"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [11, 21, 49, 1, 13, 40, 45, 19, 23, 27, 31, 39, 5, 16, 2, 8, 42, 3, 14, 6, 29, 34]}}
{"prediction": {"error_location": 0.5123445391654968, "repair_targets": [], "repair_candidates": [0.008370336145162582, 0.09557890146970749, 0.025374246761202812, 0.010395421646535397, 0.29249468445777893, 0.026849305257201195, 0.005445603281259537, 0.001522174570709467, 0.00045132014201954007, 0.00013635045615956187, 0.06719717383384705, 0.0016933369915932417, 0.01827341318130493, 0.08558297902345657, 0.06515573710203171, 0.11203283071517944, 0.01770663447678089, 0.12979739904403687, 0.004312556236982346, 0.027883948758244514, 0.0006060812156647444, 0.00313952867873013], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 15:58:50.956939", "n_pass": [206, 31, 19], "n_token": 50, "loss": [0.5618202686309814, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "self", "request", "project_id", "usergroup_id", "data", "=", "request", ".", "POST", "context", "=", "self", "project_id", ",", "usergroup_id", ")", "#NEWLINE#", "usergroup", "=", "context", ".", "usergroup", ":", "#NEWLINE#", "#INDENT#", "usergroup", ".", "data", ".", "usergroup", ".", "description", "data", ".", "get", ")", "#NEWLINE#", "usergroup", "self", ".", "request", "#UNINDENT#", "return", "self", ".", "render_to_response", "(", "context", ")"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [10, 20, 48, 1, 12, 39, 44, 18, 22, 26, 30, 38, 4, 15, 2, 7, 41, 3, 13, 5, 28, 33]}}
{"prediction": {"error_location": 0.5701701641082764, "repair_targets": [], "repair_candidates": [0.0066121225245296955, 0.02959591895341873, 0.011677027679979801, 0.008438818156719208, 0.048034895211458206, 0.08799991011619568, 0.002885368885472417, 0.00041171806515194476, 0.000898249913007021, 0.00029848419944755733, 0.0704665333032608, 0.0003568207030184567, 0.016574155539274216, 0.12810875475406647, 0.11654230207204819, 0.16664545238018036, 0.03963204100728035, 0.22208653390407562, 0.002003011992201209, 0.03810429945588112, 0.0001699516869848594, 0.0024576219730079174], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 15:58:51.124986", "n_pass": [212, 34, 20], "n_token": 49, "loss": [0.5217207670211792, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "self", "request", "project_id", "usergroup_id", "data", "=", "request", ".", "context", "=", "self", "project_id", ",", "usergroup_id", ")", "#NEWLINE#", "usergroup", "=", "context", ".", "usergroup", ":", "#NEWLINE#", "#INDENT#", "usergroup", ".", "data", ".", "usergroup", ".", "description", "data", ".", "get", ")", "#NEWLINE#", "usergroup", "self", ".", "request", "#UNINDENT#", "return", "self", ".", "render_to_response", "(", "context", ")"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [9, 19, 47, 1, 11, 38, 43, 17, 21, 25, 29, 37, 4, 14, 2, 7, 40, 3, 12, 5, 27, 32]}}
{"prediction": {"error_location": 0.5934983491897583, "repair_targets": [], "repair_candidates": [0.006831469479948282, 0.07695605605840683, 0.05266028642654419, 0.009380034171044827, 0.09639018774032593, 0.08750145137310028, 0.002757359528914094, 0.0014315553708001971, 0.0006362644489854574, 0.000809159129858017, 0.06006115674972534, 0.00048396943020634353, 0.01552974246442318, 0.11535448580980301, 0.1210382804274559, 0.09292282164096832, 0.03758300095796585, 0.1657944917678833, 0.005812722723931074, 0.045769769698381424, 0.0003531421534717083, 0.00394261721521616], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 15:58:51.183236", "n_pass": [214, 35, 21], "n_token": 48, "loss": [0.4774587154388428, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "self", "request", "project_id", "usergroup_id", "data", "=", "request", ".", "context", "self", "project_id", ",", "usergroup_id", ")", "#NEWLINE#", "usergroup", "=", "context", ".", "usergroup", ":", "#NEWLINE#", "#INDENT#", "usergroup", ".", "data", ".", "usergroup", ".", "description", "data", ".", "get", ")", "#NEWLINE#", "usergroup", "self", ".", "request", "#UNINDENT#", "return", "self", ".", "render_to_response", "(", "context", ")"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [9, 18, 46, 1, 10, 37, 42, 16, 20, 24, 28, 36, 4, 13, 2, 7, 39, 3, 11, 5, 26, 31]}}
{"prediction": {"error_location": 0.6203579306602478, "repair_targets": [], "repair_candidates": [0.0196200143545866, 0.25983086228370667, 0.12071342021226883, 0.01145604345947504, 0.033665288239717484, 0.06793012470006943, 0.004064482636749744, 0.04758791998028755, 0.001182593870908022, 0.0060530416667461395, 0.06489884853363037, 0.00047069054562598467, 0.012711086310446262, 0.054394062608480453, 0.09411678463220596, 0.022334549576044083, 0.025663208216428757, 0.05470854789018631, 0.018968069925904274, 0.07604262232780457, 0.0014902513939887285, 0.002097532618790865], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 15:58:51.239518", "n_pass": [217, 36, 22], "n_token": 46, "loss": [0.39997631311416626, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "self", "request", "project_id", "usergroup_id", "data", "=", "request", ".", "context", "self", "project_id", ",", "usergroup_id", "usergroup", "=", "context", ".", "usergroup", ":", "#NEWLINE#", "#INDENT#", "usergroup", ".", "data", ".", "usergroup", ".", "description", "data", ".", "get", ")", "#NEWLINE#", "usergroup", "self", ".", "request", "#UNINDENT#", "return", "self", ".", "render_to_response", "(", "context", ")"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [9, 16, 44, 1, 10, 35, 40, 14, 18, 22, 26, 34, 4, 13, 2, 7, 37, 3, 11, 5, 24, 29]}}
{"prediction": {"error_location": 0.6703359484672546, "repair_targets": [], "repair_candidates": [0.017160911113023758, 0.04014325886964798, 0.003927054349333048, 0.035838354378938675, 0.00812881626188755, 0.6630011796951294, 0.0006425472674891353, 0.04884187877178192, 0.021759482100605965, 0.009588225744664669, 0.0028888348024338484, 8.780527423368767e-06, 0.004638525191694498, 0.012056504376232624, 0.05005998536944389, 0.0037674240302294493, 0.01988527551293373, 0.004650763235986233, 0.004859300795942545, 0.04640345275402069, 0.0013973122695460916, 0.0003520808240864426], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 15:58:51.296160", "n_pass": [221, 37, 23], "n_token": 44, "loss": [0.5346730947494507, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "self", "request", "project_id", "usergroup_id", "data", "=", "request", ".", "context", "self", "project_id", ",", "usergroup_id", "usergroup", "=", "context", ".", "usergroup", ":", "usergroup", ".", "data", ".", "usergroup", ".", "description", "data", ".", "get", ")", "#NEWLINE#", "usergroup", "self", ".", "request", "#UNINDENT#", "return", "self", ".", "render_to_response", "(", "context", ")"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [9, 16, 42, 1, 10, 33, 38, 14, 18, 20, 24, 32, 4, 13, 2, 7, 35, 3, 11, 5, 22, 27]}}
{"prediction": {"error_location": 0.5858607292175293, "repair_targets": [], "repair_candidates": [0.0226774699985981, 0.05113567039370537, 0.0047499509528279305, 0.04638350009918213, 0.012016051448881626, 0.6383993625640869, 0.002349531278014183, 0.06936684995889664, 0.017121192067861557, 0.007006805390119553, 0.004304006230086088, 0.0002653534756973386, 0.0010114366887137294, 0.00032720662420615554, 0.02123563550412655, 0.004281163681298494, 0.03310905396938324, 0.0011184453032910824, 0.0238198172301054, 0.030871933326125145, 0.008033491671085358, 0.00041602805140428245], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 15:58:51.353149", "n_pass": [226, 38, 24], "n_token": 42, "loss": [0.5960593819618225, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "self", "request", "project_id", "usergroup_id", "data", "=", "request", ".", "context", "self", "project_id", ",", "usergroup_id", "usergroup", "=", "context", ".", "usergroup", ":", "usergroup", ".", "data", ".", "usergroup", ".", "description", "data", ")", "#NEWLINE#", "usergroup", "self", ".", "request", "#UNINDENT#", "return", "self", ".", "render_to_response", "(", "context", ")"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [9, 16, 40, 1, 10, 31, 36, 14, 18, 20, 24, 30, 4, 13, 2, 7, 33, 3, 11, 5, 22, 27]}}
{"prediction": {"error_location": 0.5509786009788513, "repair_targets": [], "repair_candidates": [0.01809876784682274, 0.05138400197029114, 0.0026399779599159956, 0.029040386900305748, 0.0070694973692297935, 0.696457028388977, 0.0022989206481724977, 0.07482601702213287, 0.014672715216875076, 0.005123171489685774, 0.0033703295048326254, 0.0005149781936779618, 0.0008094995282590389, 0.00023881703964434564, 0.01405308861285448, 0.0035784197971224785, 0.017489874735474586, 0.0011529010953381658, 0.026199733838438988, 0.02354019694030285, 0.007185659371316433, 0.00025609214208088815], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 15:58:51.411070", "n_pass": [227, 39, 25], "n_token": 40, "loss": [0.6621532440185547, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "self", "request", "project_id", "usergroup_id", "data", "=", "request", ".", "context", "self", "project_id", ",", "usergroup_id", "usergroup", "=", "context", ".", "usergroup", ":", "usergroup", ".", "data", ".", "usergroup", ".", "description", "data", "usergroup", "self", ".", "request", "#UNINDENT#", "return", "self", ".", "render_to_response", "(", "context", ")"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [9, 16, 38, 1, 10, 29, 34, 14, 18, 20, 24, 28, 4, 13, 2, 7, 31, 3, 11, 5, 22, 27]}}
{"prediction": {"error_location": 0.5157395601272583, "repair_targets": [], "repair_candidates": [0.019704392179846764, 0.03912608325481415, 0.0057263667695224285, 0.09713100641965866, 0.014847145415842533, 0.548283576965332, 0.0010297187836840749, 0.0676732212305069, 0.036989521235227585, 0.021189795807003975, 0.006796828471124172, 0.00011540615378180519, 0.0053207287564873695, 0.002265291754156351, 0.03475821390748024, 0.012273343279957771, 0.034129682928323746, 0.008698022924363613, 0.01761506125330925, 0.01922149583697319, 0.006878616288304329, 0.00022644634009338915], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 15:58:51.467450", "n_pass": [230, 40, 26], "n_token": 38, "loss": [0.5193510055541992, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "self", "request", "project_id", "usergroup_id", "data", "=", "request", ".", "context", "self", "project_id", ",", "usergroup_id", "usergroup", "=", "context", ".", "usergroup", ":", "usergroup", ".", "data", ".", "usergroup", ".", "description", "data", "usergroup", "self", ".", "request", "self", ".", "render_to_response", "(", "context", ")"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [9, 16, 36, 1, 10, 29, 32, 14, 18, 20, 24, 28, 4, 13, 2, 7, 31, 3, 11, 5, 22, 27]}}
{"prediction": {"error_location": 0.5949066281318665, "repair_targets": [], "repair_candidates": [0.0193448755890131, 0.03698435425758362, 0.004877325613051653, 0.08778169751167297, 0.010487825609743595, 0.5078545212745667, 0.0007406915538012981, 0.13795055449008942, 0.0313710980117321, 0.019021449610590935, 0.006952631287276745, 8.926129521569237e-05, 0.0030425796285271645, 0.0029779584147036076, 0.02118927799165249, 0.007949223741889, 0.028094494715332985, 0.006620979867875576, 0.029664814472198486, 0.01492574717849493, 0.021779999136924744, 0.00029868222190998495], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 15:58:51.523746", "n_pass": [232, 41, 27], "n_token": 36, "loss": [0.14957892894744873, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "self", "request", "project_id", "usergroup_id", "data", "=", "request", ".", "context", "self", "project_id", ",", "usergroup_id", "usergroup", "=", "context", ".", "usergroup", ":", "usergroup", ".", "data", ".", "usergroup", ".", "description", "data", "usergroup", "self", ".", "request", "self", ".", "context", ")"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [9, 16, 34, 1, 10, 29, 32, 14, 18, 20, 24, 28, 4, 13, 2, 7, 31, 3, 11, 5, 22, 27]}}
{"prediction": {"error_location": 0.861070454120636, "repair_targets": [], "repair_candidates": [0.05457458272576332, 0.11077537387609482, 0.0011467667063698173, 0.07649579644203186, 0.007543058600276709, 0.28020626306533813, 0.02464684098958969, 0.16957607865333557, 0.02781648188829422, 0.008622949942946434, 0.004884628113359213, 0.14437001943588257, 0.0007715260144323111, 0.000566118978895247, 0.005025407299399376, 0.002068964298814535, 0.025146551430225372, 0.003883237252011895, 0.02497713640332222, 0.010388310998678207, 0.015430951490998268, 0.0010829309467226267], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 15:58:51.579840", "n_pass": [240, 42, 28], "n_token": 35, "loss": [0.17834682762622833, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "self", "request", "project_id", "usergroup_id", "data", "request", ".", "context", "self", "project_id", ",", "usergroup_id", "usergroup", "=", "context", ".", "usergroup", ":", "usergroup", ".", "data", ".", "usergroup", ".", "description", "data", "usergroup", "self", ".", "request", "self", ".", "context", ")"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [8, 15, 33, 1, 9, 28, 31, 13, 17, 19, 23, 27, 4, 12, 2, 6, 30, 3, 10, 5, 21, 26]}}
{"prediction": {"error_location": 0.8366522192955017, "repair_targets": [], "repair_candidates": [0.042058851569890976, 0.21895208954811096, 0.012628799304366112, 0.03176208585500717, 0.01864924468100071, 0.20455335080623627, 0.014947166666388512, 0.2142609804868698, 0.030547818168997765, 0.005372033454477787, 0.004123318940401077, 0.0935564860701561, 0.0005857038777321577, 0.00020668069191742688, 0.007369385100901127, 0.0013752024387940764, 0.04076822102069855, 0.0026920714881271124, 0.02417132817208767, 0.019066758453845978, 0.011803925968706608, 0.0005484786233864725], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 15:58:51.636268", "n_pass": [242, 43, 29], "n_token": 34, "loss": [0.2822002172470093, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "self", "request", "project_id", "usergroup_id", "data", "request", "context", "self", "project_id", ",", "usergroup_id", "usergroup", "=", "context", ".", "usergroup", ":", "usergroup", ".", "data", ".", "usergroup", ".", "description", "data", "usergroup", "self", ".", "request", "self", ".", "context", ")"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [7, 14, 32, 1, 8, 27, 30, 12, 16, 18, 22, 26, 4, 11, 2, 6, 29, 3, 9, 5, 20, 25]}}
{"prediction": {"error_location": 0.7541225552558899, "repair_targets": [], "repair_candidates": [0.03553912788629532, 0.20035648345947266, 0.005320963449776173, 0.003609156934544444, 0.022311493754386902, 0.050937220454216, 0.0369388647377491, 0.3214789927005768, 0.02603250928223133, 0.004260500892996788, 0.0062627592124044895, 0.1681506633758545, 0.0006952881813049316, 0.00027574534760788083, 0.003016361501067877, 0.001207144232466817, 0.029281729832291603, 0.0037640586961060762, 0.039427049458026886, 0.010023083537817001, 0.030719799920916557, 0.00039096196996979415], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 15:58:51.696473", "n_pass": [292, 44, 30], "n_token": 33, "loss": [0.010923940688371658, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "self", "request", "project_id", "usergroup_id", "data", "request", "context", "self", "project_id", ",", "usergroup_id", "usergroup", "context", ".", "usergroup", ":", "usergroup", ".", "data", ".", "usergroup", ".", "description", "data", "usergroup", "self", ".", "request", "self", ".", "context", ")"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [7, 13, 31, 1, 8, 26, 29, 12, 15, 17, 21, 25, 4, 11, 2, 6, 28, 3, 9, 5, 19, 24]}}
{"prediction": {"error_location": 0.9891355037689209, "repair_targets": [], "repair_candidates": [0.10083568096160889, 0.036187544465065, 0.005481334403157234, 0.012798952870070934, 0.03183041512966156, 0.060396019369363785, 0.06927821040153503, 0.0028441196773201227, 0.0639597699046135, 0.05637059733271599, 0.11475326865911484, 0.05146017670631409, 0.029872257262468338, 0.09866560250520706, 0.020940443500876427, 0.019704584032297134, 0.08180809020996094, 0.03924552723765373, 0.0009279120713472366, 0.08836138993501663, 0.0006937194848433137, 0.013584344647824764], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 15:58:51.751909", "n_pass": [294, 45, 31], "n_token": 32, "loss": [0.19916878640651703, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "self", "request", "project_id", "usergroup_id", "data", "request", "context", "self", "project_id", ",", "usergroup_id", "usergroup", "context", "usergroup", ":", "usergroup", ".", "data", ".", "usergroup", ".", "description", "data", "usergroup", "self", ".", "request", "self", ".", "context", ")"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [7, 13, 30, 1, 8, 25, 28, 12, 14, 16, 20, 24, 4, 11, 2, 6, 27, 3, 9, 5, 18, 23]}}
{"prediction": {"error_location": 0.81941157579422, "repair_targets": [], "repair_candidates": [0.053411927074193954, 0.0305805504322052, 0.005892871879041195, 0.009545101784169674, 0.027099423110485077, 0.060512322932481766, 0.01690514385700226, 0.5424894690513611, 0.019855421036481857, 0.018578216433525085, 0.007829341106116772, 0.012294556945562363, 0.005789669696241617, 0.00017888113507069647, 0.014474036172032356, 0.003506070701405406, 0.07675125449895859, 0.0069704074412584305, 0.03108181431889534, 0.024395043030381203, 0.03118325211107731, 0.0006752368062734604], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 15:58:51.807889", "n_pass": [296, 46, 32], "n_token": 31, "loss": [0.032476067543029785, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "self", "request", "project_id", "usergroup_id", "data", "request", "context", "self", "project_id", ",", "usergroup_id", "usergroup", "context", "usergroup", "usergroup", ".", "data", ".", "usergroup", ".", "description", "data", "usergroup", "self", ".", "request", "self", ".", "context", ")"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [7, 13, 29, 1, 8, 24, 27, 12, 14, 15, 19, 23, 4, 11, 2, 6, 26, 3, 9, 5, 17, 22]}}
{"prediction": {"error_location": 0.968045711517334, "repair_targets": [], "repair_candidates": [0.22233688831329346, 0.030739931389689445, 0.006411863025277853, 0.011305630207061768, 0.02940189279615879, 0.05838370695710182, 0.03563300892710686, 0.01566978171467781, 0.04628074914216995, 0.06882966309785843, 0.11678587645292282, 0.07212424278259277, 0.01840776391327381, 0.015236664563417435, 0.046440403908491135, 0.01619293913245201, 0.09330280870199203, 0.015898749232292175, 0.0016565382247790694, 0.07135725021362305, 0.0007955085020512342, 0.006808158475905657], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 15:58:51.864275", "n_pass": [298, 47, 33], "n_token": 30, "loss": [0.04366987943649292, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "self", "request", "project_id", "usergroup_id", "data", "request", "context", "self", "project_id", ",", "usergroup_id", "usergroup", "context", "usergroup", "usergroup", "data", ".", "usergroup", ".", "description", "data", "usergroup", "self", ".", "request", "self", ".", "context", ")"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [7, 13, 28, 1, 8, 23, 26, 12, 14, 15, 18, 22, 4, 11, 2, 6, 25, 3, 9, 5, 16, 21]}}
{"prediction": {"error_location": 0.9572699069976807, "repair_targets": [], "repair_candidates": [0.18515560030937195, 0.06389115750789642, 0.00884612649679184, 0.015016695484519005, 0.02887437865138054, 0.07661359012126923, 0.01962294802069664, 0.18275989592075348, 0.032107267528772354, 0.055285148322582245, 0.03793727606534958, 0.006042818538844585, 0.0014545564772561193, 0.010205895639955997, 0.05018628388643265, 0.01086958684027195, 0.0928383469581604, 0.01381732989102602, 0.021743381395936012, 0.06595228612422943, 0.013968782499432564, 0.006810551974922419], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 15:58:51.920213", "n_pass": [300, 48, 34], "n_token": 29, "loss": [0.018745293840765953, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "self", "request", "project_id", "usergroup_id", "data", "request", "context", "self", "project_id", ",", "usergroup_id", "usergroup", "context", "usergroup", "usergroup", "data", "usergroup", ".", "description", "data", "usergroup", "self", ".", "request", "self", ".", "context", ")"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [7, 13, 27, 1, 8, 22, 25, 12, 14, 15, 17, 21, 4, 11, 2, 6, 24, 3, 9, 5, 16, 20]}}
{"prediction": {"error_location": 0.981429398059845, "repair_targets": [], "repair_candidates": [0.21460366249084473, 0.06375493854284286, 0.010165407322347164, 0.02678518183529377, 0.037264999002218246, 0.09630349278450012, 0.02439090423285961, 0.08056985586881638, 0.031249482184648514, 0.075408935546875, 0.04570939019322395, 0.0034006705973297358, 0.0010627106530591846, 0.00526006892323494, 0.07168416678905487, 0.01604311726987362, 0.064028799533844, 0.014458218589425087, 0.006021113134920597, 0.09911253303289413, 0.004310439340770245, 0.008411853574216366], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 15:58:51.978448", "n_pass": [302, 49, 35], "n_token": 28, "loss": [0.03145333379507065, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "self", "request", "project_id", "usergroup_id", "data", "request", "context", "self", "project_id", ",", "usergroup_id", "usergroup", "context", "usergroup", "usergroup", "data", "usergroup", "description", "data", "usergroup", "self", ".", "request", "self", ".", "context", ")"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [7, 13, 26, 1, 8, 21, 24, 12, 14, 15, 17, 20, 4, 11, 2, 6, 23, 3, 9, 5, 16, 19]}}
{"prediction": {"error_location": 0.9690361618995667, "repair_targets": [], "repair_candidates": [0.12645672261714935, 0.06129826232790947, 0.014089470729231834, 0.026525670662522316, 0.031319402158260345, 0.10194553434848785, 0.02722031995654106, 0.23902584612369537, 0.03393784910440445, 0.044695720076560974, 0.024513058364391327, 0.005147434305399656, 0.0010125841945409775, 0.00946899875998497, 0.009103980846703053, 0.009746558032929897, 0.03524702042341232, 0.0016695590456947684, 0.040405746549367905, 0.10445395112037659, 0.04464643448591232, 0.00806978065520525], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 15:58:52.034069", "n_pass": [303, 50, 36], "n_token": 27, "loss": [0.04373287037014961, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "self", "request", "project_id", "usergroup_id", "data", "request", "context", "self", "project_id", ",", "usergroup_id", "usergroup", "context", "usergroup", "usergroup", "data", "usergroup", "data", "usergroup", "self", ".", "request", "self", ".", "context", ")"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [7, 13, 25, 1, 8, 20, 23, 12, 14, 15, 17, 19, 4, 11, 2, 6, 22, 3, 9, 5, 16, 18]}}
{"prediction": {"error_location": 0.9572095274925232, "repair_targets": [], "repair_candidates": [0.11434066295623779, 0.06962987780570984, 0.020186277106404305, 0.019928373396396637, 0.023906294256448746, 0.09846719354391098, 0.02632087469100952, 0.28177914023399353, 0.032866235822439194, 0.03724554181098938, 0.022963427007198334, 0.004126093350350857, 0.0009042968740686774, 0.007674726191908121, 0.00588323874399066, 0.00779202114790678, 0.02493780292570591, 0.0013644880382344127, 0.04066486656665802, 0.10072460770606995, 0.05071938410401344, 0.007574592251330614], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 15:58:52.090078", "n_pass": [307, 51, 37], "n_token": 26, "loss": [0.03199923783540726, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "self", "request", "project_id", "usergroup_id", "data", "request", "context", "self", "project_id", ",", "usergroup_id", "usergroup", "context", "usergroup", "usergroup", "data", "usergroup", "data", "usergroup", "self", "request", "self", ".", "context", ")"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [7, 13, 24, 1, 8, 20, 22, 12, 14, 15, 17, 19, 4, 11, 2, 6, 21, 3, 9, 5, 16, 18]}}
{"prediction": {"error_location": 0.9685073494911194, "repair_targets": [], "repair_candidates": [0.15426236391067505, 0.1328534036874771, 0.02784775383770466, 0.044240862131118774, 0.03259383141994476, 0.11897726356983185, 0.0412152037024498, 0.05239441990852356, 0.07979606837034225, 0.0798557698726654, 0.04366776719689369, 0.00930094812065363, 0.0028623102698475122, 0.017370766028761864, 0.008744679391384125, 0.016866158694028854, 0.008980670012533665, 0.00995275191962719, 0.0025356619153171778, 0.10244302451610565, 0.0015451640356332064, 0.011693157255649567], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 15:58:52.201363", "n_pass": [312, 53, 38], "n_token": 25, "loss": [0.01733626239001751, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "self", "request", "project_id", "usergroup_id", "data", "request", "context", "self", "project_id", ",", "usergroup_id", "usergroup", "context", "usergroup", "usergroup", "data", "usergroup", "data", "usergroup", "self", "request", "self", ".", "context"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [7, 13, 24, 1, 8, 20, 22, 12, 14, 15, 17, 19, 4, 11, 2, 6, 21, 3, 9, 5, 16, 18]}}
{"prediction": {"error_location": 0.9828133583068848, "repair_targets": [], "repair_candidates": [0.23853033781051636, 0.03729734942317009, 0.01147844921797514, 0.05865377560257912, 0.03256599232554436, 0.09077907353639603, 0.047417059540748596, 0.046763233840465546, 0.10250411182641983, 0.10560307651758194, 0.04078022390604019, 0.008275540545582771, 0.00254991021938622, 0.017140615731477737, 0.009057372808456421, 0.017117876559495926, 0.009538215585052967, 0.011523324996232986, 0.0027849185280501842, 0.09203395992517471, 0.0015094202244654298, 0.016096221283078194], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 15:58:52.257583", "n_pass": [323, 54, 39], "n_token": 24, "loss": [0.026616809889674187, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "self", "request", "project_id", "usergroup_id", "data", "request", "context", "self", "project_id", "usergroup_id", "usergroup", "context", "usergroup", "usergroup", "data", "usergroup", "data", "usergroup", "self", "request", "self", ".", "context"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [7, 12, 23, 1, 8, 19, 21, 11, 13, 14, 16, 18, 4, 10, 2, 6, 20, 3, 9, 5, 15, 17]}}
{"prediction": {"error_location": 0.9737343192100525, "repair_targets": [], "repair_candidates": [0.24608640372753143, 0.03011443093419075, 0.020173467695713043, 0.1274360865354538, 0.041317250579595566, 0.048265326768159866, 0.060772474855184555, 0.03124929964542389, 0.028268273919820786, 0.07484064996242523, 0.04639535769820213, 0.01358053833246231, 0.027834394946694374, 0.03329381346702576, 0.015996094793081284, 0.0454191118478775, 0.016278138384222984, 0.04013713821768761, 0.0015321130631491542, 0.0382828451693058, 0.0011194308754056692, 0.01160743460059166], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 15:58:52.316852", "n_pass": [336, 55, 40], "n_token": 23, "loss": [0.050487011671066284, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "self", "request", "project_id", "usergroup_id", "data", "request", "context", "self", "project_id", "usergroup_id", "usergroup", "context", "usergroup", "usergroup", "data", "usergroup", "data", "usergroup", "self", "request", "self", "context"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [7, 12, 22, 1, 8, 19, 21, 11, 13, 14, 16, 18, 4, 10, 2, 6, 20, 3, 9, 5, 15, 17]}}
{"prediction": {"error_location": 0.9507662653923035, "repair_targets": [], "repair_candidates": [0.10655277967453003, 0.021151326596736908, 0.02865724079310894, 0.1334388703107834, 0.04130652919411659, 0.019942473620176315, 0.0640595406293869, 0.012259521521627903, 0.02498299814760685, 0.07928357273340225, 0.06687501817941666, 0.01954156532883644, 0.04525276646018028, 0.04939158633351326, 0.016001176089048386, 0.06472044438123703, 0.020395049825310707, 0.07450538128614426, 0.0004872849094681442, 0.016671985387802124, 0.0006575388833880424, 0.09386533498764038], "target_probs": 0.0}}




Minimal simplified tokens:

['#NEWLINE#', 'self', 'request', 'project_id', 'usergroup_id', 'data', 'request', 'context', 'self', 'project_id', 'usergroup_id', 'usergroup', 'context', 'usergroup', 'usergroup', 'data', 'usergroup', 'data', 'usergroup', 'self', 'request', 'self', 'context']
