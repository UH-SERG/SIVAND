
Original sample:

{"has_bug": false, "bug_kind": 0, "bug_kind_name": "NONE", "source_tokens": ["#NEWLINE#", "def project(", "self", ",", "X", ")", ":", "#NEWLINE#", "#INDENT#", "return", "(", "np", ".", "dot", "(", "X", ",", "self", ".", "w", ")", "+", "self", ".", "b", ")"], "error_location": [0], "repair_targets": [], "repair_candidates": [4, 15, 2, 17, 22], "provenances": [{"datasetProvenance": {"datasetName": "ETHPy150Open", "filepath": "scikit-learn/scikit-learn/sklearn/linear_model/tests/test_passive_aggressive.py", "license": "bsd-3-clause", "note": "license: manual_eval"}}], "txt_file": "eval__VARIABLE_MISUSE__SStuB.txt-00000-of-00300", "js_count": 1836, "results": {"model": "transformer", "prob": {"loc": [[0.997686505317688, 1.0216745067737065e-05, 4.948579999108915e-07, 5.321868457031087e-08, 6.822446039222996e-07, 3.006978843700381e-08, 1.6857870832609478e-07, 1.10741808612147e-07, 7.662906398309133e-08, 9.00763819089434e-09, 1.7415413111621092e-08, 2.3359703504866047e-07, 4.5957273187013925e-07, 3.253044056350518e-08, 5.913261134082859e-07, 0.0006141220801509917, 2.566481498433859e-07, 0.0005380969378165901, 1.0362450666434597e-06, 4.7549399084800825e-08, 1.6759294396706537e-08, 2.729241010968053e-08, 0.0011447692522779107, 7.805415407347027e-07, 9.224318091582973e-07, 1.8536162826876534e-07]], "pointer": [[0.0, 0.0, 0.6204107999801636, 0.0, 0.3280126750469208, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.03814545273780823, 0.0, 0.009410491213202477, 0.0, 0.0, 0.0, 0.0, 0.004020556807518005, 0.0, 0.0, 0.0]], "target": [0.0]}, "loss": [0.0023161747958511114, 0.0], "acc": [1.0, 0.0, 0.0, 0.0]}}


Trace of simplified code(s):

{"result": {"time": "2021-02-11 15:41:35.809376", "n_pass": [1, 1, 1], "n_token": 26, "loss": [0.0023161747958511114, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def project(", "self", ",", "X", ")", ":", "#NEWLINE#", "#INDENT#", "return", "(", "np", ".", "dot", "(", "X", ",", "self", ".", "w", ")", "+", "self", ".", "b", ")"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [4, 15, 2, 17, 22]}}
{"prediction": {"error_location": 0.997686505317688, "repair_targets": [], "repair_candidates": [0.6204107999801636, 0.3280126750469208, 0.03814545273780823, 0.009410491213202477, 0.004020556807518005], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 15:41:35.863800", "n_pass": [9, 2, 2], "n_token": 20, "loss": [0.011668880470097065, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def project(", "self", ",", "X", ")", ".", "dot", "(", "X", ",", "self", ".", "w", ")", "+", "self", ".", "b", ")"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [4, 9, 2, 11, 16]}}
{"prediction": {"error_location": 0.9883987307548523, "repair_targets": [], "repair_candidates": [0.925355851650238, 0.003624262288212776, 0.0007926649996079504, 0.06810449808835983, 0.0021226759999990463], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 15:41:35.918060", "n_pass": [19, 3, 3], "n_token": 17, "loss": [0.08926834166049957, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def project(", "self", ",", "X", ")", "X", ",", "self", ".", "w", ")", "+", "self", ".", "b", ")"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [4, 6, 2, 8, 13]}}
{"prediction": {"error_location": 0.9145998954772949, "repair_targets": [], "repair_candidates": [0.009599486365914345, 0.43281659483909607, 0.5452145338058472, 0.012249773368239403, 0.00011961082782363519], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 15:41:35.971865", "n_pass": [21, 4, 4], "n_token": 13, "loss": [0.4839709401130676, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def project(", "self", ",", "X", ")", "X", ",", "self", "self", ".", "b", ")"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [4, 6, 2, 8, 9]}}
{"prediction": {"error_location": 0.6163311004638672, "repair_targets": [], "repair_candidates": [0.09623657912015915, 0.515749454498291, 0.3846796154975891, 0.0031367281917482615, 0.0001976319181267172], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 15:41:36.029318", "n_pass": [35, 5, 5], "n_token": 11, "loss": [0.12533815205097198, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def project(", "self", ",", "X", ")", "X", ",", "self", "self", "."]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [4, 6, 2, 8, 9]}}
{"prediction": {"error_location": 0.8821986317634583, "repair_targets": [], "repair_candidates": [0.13101595640182495, 0.4519527852535248, 0.40254247188568115, 0.011373438872396946, 0.0031154167372733355], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 15:41:36.083264", "n_pass": [37, 6, 6], "n_token": 10, "loss": [0.6266713738441467, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "self", ",", "X", ")", "X", ",", "self", "self", "."]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [3, 5, 1, 7, 8]}}
{"prediction": {"error_location": 0.534367561340332, "repair_targets": [], "repair_candidates": [0.07513686269521713, 0.5313186645507812, 0.370048463344574, 0.018261730670928955, 0.005234295967966318], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 15:41:36.137188", "n_pass": [52, 7, 7], "n_token": 9, "loss": [0.7690684199333191, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "self", "X", ")", "X", ",", "self", "self", "."]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [2, 4, 1, 6, 7]}}
{"prediction": {"error_location": 0.46344467997550964, "repair_targets": [], "repair_candidates": [0.7652866840362549, 0.16787469387054443, 0.06670299917459488, 6.761331314919516e-05, 6.803582073189318e-05], "target_probs": 0.0}}




Minimal simplified tokens:

['#NEWLINE#', 'self', 'X', ')', 'X', ',', 'self', 'self', '.']
