
Original sample:

{"has_bug": false, "bug_kind": 0, "bug_kind_name": "NONE", "source_tokens": ["#NEWLINE#", "def __getitem__(", "self", ",", "key", ")", ":", "#NEWLINE#", "#INDENT#", "'Returns the data value for this key. If the value is a list with\\nonly one element, it returns that element, otherwise it returns the list.\\nRaises KeyError if key is not found.'", "#NEWLINE#", "l", "=", "super", "(", ")", ".", "__getitem__", "(", "key", ")", "#NEWLINE#", "return", "(", "l", "[", "0", "]", "if", "(", "len", "(", "l", ")", "==", "1", ")", "else", "l", ")"], "error_location": [0], "repair_targets": [], "repair_candidates": [11, 24, 32, 38, 4, 19, 2], "provenances": [{"datasetProvenance": {"datasetName": "ETHPy150Open", "filepath": "quantmind/pulsar/pulsar/utils/structures/misc.py", "license": "bsd-3-clause", "note": "license: bigquery_api"}}], "txt_file": "eval__VARIABLE_MISUSE__SStuB.txt-00000-of-00300", "js_count": 2240, "results": {"model": "transformer", "prob": {"loc": [[0.7661654353141785, 2.111801450155326e-06, 7.343614356614125e-07, 1.177476391944765e-07, 4.269802957423963e-06, 1.1199976057696404e-07, 2.603724738037272e-07, 2.685466711227491e-07, 2.1143154071978643e-07, 1.88336315432025e-07, 2.3553560879463475e-07, 1.080527545127552e-05, 1.2286463402233494e-07, 2.2052063286537305e-08, 1.9322686739542405e-07, 7.304709583877411e-07, 3.9392423900608264e-07, 2.5742261655636867e-08, 3.332393987420801e-07, 0.0008885542047210038, 1.0867742048503715e-06, 4.0373686260863906e-07, 2.745575677920442e-08, 7.42587502600145e-08, 0.04315289109945297, 6.420332283596508e-07, 2.17739469121625e-07, 4.66466580917313e-08, 5.591412559624587e-07, 5.8831638227729854e-08, 7.182867989286024e-08, 3.2250503068098624e-07, 0.04572102800011635, 3.226487876872852e-08, 1.7717056266519648e-07, 9.806115031096851e-07, 9.019728253178982e-08, 1.66581330063309e-07, 0.14404572546482086, 3.3646375641183113e-07]], "pointer": [[0.0, 0.0, 0.325021356344223, 0.0, 0.48724105954170227, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.003025697311386466, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.18383225798606873, 0.0, 0.0, 0.0, 0.0, 7.892931171227247e-05, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 7.388915400952101e-05, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0007267832406796515, 0.0]], "target": [0.0]}, "loss": [0.26635709404945374, 0.0], "acc": [1.0, 0.0, 0.0, 0.0]}}


Trace of simplified code(s):

{"result": {"time": "2021-02-11 15:51:54.667705", "n_pass": [1, 1, 1], "n_token": 40, "loss": [0.26635709404945374, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def __getitem__(", "self", ",", "key", ")", ":", "#NEWLINE#", "#INDENT#", "'Returns the data value for this key. If the value is a list with\\nonly one element, it returns that element, otherwise it returns the list.\\nRaises KeyError if key is not found.'", "#NEWLINE#", "l", "=", "super", "(", ")", ".", "__getitem__", "(", "key", ")", "#NEWLINE#", "return", "(", "l", "[", "0", "]", "if", "(", "len", "(", "l", ")", "==", "1", ")", "else", "l", ")"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [11, 24, 32, 38, 4, 19, 2]}}
{"prediction": {"error_location": 0.7661654353141785, "repair_targets": [], "repair_candidates": [0.325021356344223, 0.48724105954170227, 0.003025697311386466, 0.18383225798606873, 7.892931171227247e-05, 7.388915400952101e-05, 0.0007267832406796515], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 15:51:54.723065", "n_pass": [21, 2, 2], "n_token": 35, "loss": [0.1132984608411789, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def __getitem__(", "self", ",", "key", "#NEWLINE#", "l", "=", "super", "(", ")", ".", "__getitem__", "(", "key", ")", "#NEWLINE#", "return", "(", "l", "[", "0", "]", "if", "(", "len", "(", "l", ")", "==", "1", ")", "else", "l", ")"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [6, 19, 27, 33, 4, 14, 2]}}
{"prediction": {"error_location": 0.8928840160369873, "repair_targets": [], "repair_candidates": [0.29966825246810913, 0.2854444980621338, 0.007003525737673044, 0.4068774878978729, 0.00011927130253752694, 0.00015037943376228213, 0.000736499612685293], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 15:51:54.833025", "n_pass": [44, 4, 3], "n_token": 33, "loss": [0.12402133643627167, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def __getitem__(", "self", ",", "key", "#NEWLINE#", "l", "=", ")", ".", "__getitem__", "(", "key", ")", "#NEWLINE#", "return", "(", "l", "[", "0", "]", "if", "(", "len", "(", "l", ")", "==", "1", ")", "else", "l", ")"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [6, 17, 25, 31, 4, 12, 2]}}
{"prediction": {"error_location": 0.8833609223365784, "repair_targets": [], "repair_candidates": [0.28233861923217773, 0.2227388620376587, 0.0014898617519065738, 0.4924063980579376, 0.00018824214930646122, 0.0001832902926253155, 0.0006547941011376679], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 15:51:54.888422", "n_pass": [45, 5, 4], "n_token": 31, "loss": [0.11556348949670792, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def __getitem__(", "self", ",", "key", "#NEWLINE#", "l", "=", "__getitem__", "(", "key", ")", "#NEWLINE#", "return", "(", "l", "[", "0", "]", "if", "(", "len", "(", "l", ")", "==", "1", ")", "else", "l", ")"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [6, 15, 23, 29, 4, 10, 2]}}
{"prediction": {"error_location": 0.8908640146255493, "repair_targets": [], "repair_candidates": [0.45012328028678894, 0.3290391266345978, 0.0034028806257992983, 0.2165854573249817, 0.00018725430709309876, 0.0001316373236477375, 0.0005303734797053039], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 15:51:54.943745", "n_pass": [46, 6, 5], "n_token": 29, "loss": [0.22804105281829834, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def __getitem__(", "self", ",", "key", "#NEWLINE#", "l", "=", "key", ")", "#NEWLINE#", "return", "(", "l", "[", "0", "]", "if", "(", "len", "(", "l", ")", "==", "1", ")", "else", "l", ")"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [6, 13, 21, 27, 4, 8, 2]}}
{"prediction": {"error_location": 0.7960914969444275, "repair_targets": [], "repair_candidates": [0.22203686833381653, 0.46735328435897827, 0.0035964783746749163, 0.3059755265712738, 0.0003569007385522127, 0.00016928010154515505, 0.0005116628017276525], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 15:51:55.002758", "n_pass": [49, 7, 6], "n_token": 26, "loss": [0.35193148255348206, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def __getitem__(", "self", ",", "key", "#NEWLINE#", "l", "=", "key", ")", "#NEWLINE#", "return", "(", "l", "if", "(", "len", "(", "l", ")", "==", "1", ")", "else", "l", ")"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [6, 13, 18, 24, 4, 8, 2]}}
{"prediction": {"error_location": 0.7033281922340393, "repair_targets": [], "repair_candidates": [0.24357694387435913, 0.39674755930900574, 0.005846732296049595, 0.3530100882053375, 0.00031627999851480126, 0.000255053979344666, 0.00024741553352214396], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 15:51:55.170172", "n_pass": [80, 10, 7], "n_token": 25, "loss": [0.40052106976509094, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def __getitem__(", "self", ",", "key", "#NEWLINE#", "l", "=", "key", ")", "#NEWLINE#", "return", "l", "if", "(", "len", "(", "l", ")", "==", "1", ")", "else", "l", ")"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [6, 12, 17, 23, 4, 8, 2]}}
{"prediction": {"error_location": 0.6699709296226501, "repair_targets": [], "repair_candidates": [0.30092284083366394, 0.3632434606552124, 0.0026426762342453003, 0.33261638879776, 0.00021025723253842443, 0.00021322560496628284, 0.00015114840061869472], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 15:51:55.336029", "n_pass": [85, 13, 8], "n_token": 23, "loss": [0.9580210447311401, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def __getitem__(", "self", ",", "key", "#NEWLINE#", "l", "=", "key", ")", "#NEWLINE#", "return", "l", "if", "(", "len", "(", "l", ")", ")", "else", "l", ")"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [6, 12, 17, 21, 4, 8, 2]}}
{"prediction": {"error_location": 0.38365137577056885, "repair_targets": [], "repair_candidates": [0.6011089086532593, 0.22655747830867767, 0.0010226952144876122, 0.1710233986377716, 5.382594099501148e-05, 0.00019461201736703515, 3.907903010258451e-05], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 15:51:55.664949", "n_pass": [97, 19, 9], "n_token": 22, "loss": [0.751008152961731, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def __getitem__(", "self", ",", "key", "#NEWLINE#", "l", "=", "key", "#NEWLINE#", "return", "l", "if", "(", "len", "(", "l", ")", ")", "else", "l", ")"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [6, 11, 16, 20, 4, 8, 2]}}
{"prediction": {"error_location": 0.47189056873321533, "repair_targets": [], "repair_candidates": [0.7754305005073547, 0.09555629640817642, 0.0008102382416836917, 0.12805746495723724, 2.6444911782164127e-05, 0.00010670429037418216, 1.2372845958452672e-05], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 15:51:55.773706", "n_pass": [99, 21, 10], "n_token": 21, "loss": [0.10163932293653488, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def __getitem__(", "self", ",", "key", "#NEWLINE#", "l", "=", "key", "#NEWLINE#", "l", "if", "(", "len", "(", "l", ")", ")", "else", "l", ")"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [6, 10, 15, 19, 4, 8, 2]}}
{"prediction": {"error_location": 0.9033552408218384, "repair_targets": [], "repair_candidates": [0.7206152677536011, 0.11782708019018173, 0.11554230004549026, 0.03227892518043518, 0.013068332336843014, 0.0006175106391310692, 5.063521530246362e-05], "target_probs": 0.0}}




Minimal simplified tokens:

['#NEWLINE#', 'def __getitem__(', 'self', ',', 'key', '#NEWLINE#', 'l', '=', 'key', '#NEWLINE#', 'l', 'if', '(', 'len', '(', 'l', ')', ')', 'else', 'l', ')']
