
Original sample:

{"has_bug": false, "bug_kind": 0, "bug_kind_name": "NONE", "source_tokens": ["#NEWLINE#", "def export(", "self", ",", "*", "args", ")", ":", "#NEWLINE#", "#INDENT#", "' copies the package recipe (conanfile.py and associated files) to your local store,\\n        where it can be shared and reused in other projects.\\n        From that store, it can be uploaded to any remote with \"upload\" command.\\n        '", "#NEWLINE#", "parser", "=", "argparse", ".", "ArgumentParser", "(", "description", "=", "self", ".", "export", ".", "__doc__", ",", "prog", "=", "'conan export'", ")", "#NEWLINE#", "parser", ".", "add_argument", "(", "'user'", ",", "help", "=", "'user_name[/channel]. By default, channel is \"testing\", e.g., phil or phil/stable'", ")", "#NEWLINE#", "parser", ".", "add_argument", "(", "'--path'", ",", "'-p'", ",", "default", "=", "None", ",", "help", "=", "(", "'Optional. Folder with a %s. Default current directory.'", "%", "CONANFILE", ")", ")", "#NEWLINE#", "parser", ".", "add_argument", "(", "'--keep-source'", ",", "'-k'", ",", "default", "=", "False", ",", "action", "=", "'store_true'", ",", "help", "=", "'Optional. Do not remove the source folder in local store. Use for testing purposes only'", ")", "#NEWLINE#", "args", "=", "parser", ".", "parse_args", "(", "*", "args", ")", "#NEWLINE#", "current_path", "=", "(", "args", ".", "path", "or", "os", ".", "getcwd", "(", ")", ")", "#NEWLINE#", "keep_source", "=", "args", ".", "keep_source", "#NEWLINE#", "self", ".", "_manager", ".", "export", "(", "args", ".", "user", ",", "current_path", ",", "keep_source", ")"], "error_location": [0], "repair_targets": [], "repair_candidates": [12, 31, 42, 63, 86, 2, 20, 114, 5, 84, 91, 97, 110, 120, 94, 124, 108, 112, 126], "provenances": [{"datasetProvenance": {"datasetName": "ETHPy150Open", "filepath": "conan-io/conan/conans/client/command.py", "license": "mit", "note": "license: bigquery_api"}}], "txt_file": "eval__VARIABLE_MISUSE__SStuB.txt-00000-of-00300", "js_count": 2996, "results": {"model": "transformer", "prob": {"loc": [[0.6399270296096802, 2.9074744816171005e-06, 1.6027241827032412e-06, 2.3896832956893377e-08, 1.932973958673756e-08, 2.2228080069908174e-06, 1.3630034878531205e-08, 5.28764552143457e-08, 6.942264718645674e-08, 4.8320366374809964e-08, 1.1707763292179152e-07, 6.156303555826526e-08, 4.03126614401117e-06, 2.221252159984033e-08, 7.383147959671987e-08, 4.9500417986791945e-08, 2.5308441564675377e-08, 9.925064148319507e-08, 2.088249146936505e-07, 1.4791996250096417e-07, 0.0006986352964304388, 3.387727645076666e-07, 5.836349714627431e-07, 2.9470442086676485e-07, 1.1850334402652152e-07, 4.874274495136888e-08, 5.062125296717568e-08, 2.0150217494574463e-07, 7.648674795746047e-07, 1.5554658716609993e-07, 6.750268966015938e-08, 3.8138985303248774e-08, 3.1736508532276275e-08, 1.6643584288544844e-08, 2.443078415126365e-07, 1.608146362741536e-07, 4.024393973622864e-08, 3.265724046741525e-08, 1.2864445864124718e-07, 7.430293749166594e-07, 2.2566699442450044e-07, 8.04583635272138e-08, 3.1249964393964547e-08, 8.195080170025903e-08, 1.774859370584636e-08, 1.8601404860874027e-07, 3.2271032068820205e-07, 2.1278852102568635e-07, 2.3130290571771184e-07, 9.547508028617813e-08, 3.5033045264754037e-07, 6.196318622642139e-07, 1.7542144803428528e-07, 7.052342709812365e-08, 5.8454155293929944e-08, 1.4475712362127524e-07, 2.6874272407440003e-07, 4.1615157897467725e-07, 1.8122479161775118e-07, 1.4938476624593022e-06, 2.8557522568917193e-07, 2.676847827842721e-07, 1.3248185837255733e-07, 3.711846119358597e-08, 4.86719535786051e-08, 2.0565964931051894e-08, 4.278186054307298e-07, 2.1860216747882077e-07, 1.5488417659526021e-07, 2.1672234140623914e-07, 1.3590532432772306e-07, 1.0838923003575474e-07, 8.134009021887323e-07, 3.154079593059578e-07, 1.0790994053877512e-07, 7.835244986154066e-08, 3.242840023176541e-07, 7.573332254651177e-07, 1.2407512883783056e-07, 6.229038262972608e-08, 3.785292506108817e-07, 1.8311419580641086e-06, 3.3819168265836197e-07, 2.668248555437458e-07, 3.5676841889653588e-06, 3.532773718006865e-08, 2.1614368961309083e-06, 2.0037884951307205e-07, 3.3604294458200457e-08, 6.544261168528465e-07, 2.0796515798338078e-07, 0.02631785161793232, 1.3227537465354544e-06, 5.380826451073517e-07, 3.075518407058553e-06, 2.8612491931312434e-08, 8.640636650625311e-08, 0.0026451675221323967, 5.495359118867782e-07, 4.505267980903227e-08, 1.477846183206566e-07, 8.311311034958635e-07, 7.937571808724897e-07, 1.8829737769010535e-07, 3.4264076020917855e-06, 1.5966721775839687e-06, 9.841427299761563e-07, 5.618739464807732e-07, 2.8306023978075245e-06, 4.4422442613267776e-08, 0.004261548165231943, 5.625109338325274e-07, 1.1276487157374504e-06, 6.004279953231162e-07, 4.979530331183923e-06, 1.7308479982602876e-07, 9.34762578452819e-09, 7.060488655952213e-07, 4.7634785005357116e-08, 3.7142984865567996e-07, 0.3224937915802002, 1.5407722457894124e-06, 2.6428885746554442e-08, 2.3473400290185964e-07, 0.0029412482399493456, 2.57615369037012e-07, 0.0006503590266220272, 1.3133002312315512e-06]], "pointer": [[0.0, 0.0, 0.2116309255361557, 0.0, 0.0, 0.02244022861123085, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.009380770847201347, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.16121312975883484, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.002049713861197233, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0032410065177828074, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0024744682013988495, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0127866817638278, 0.0, 0.001129398588091135, 0.0, 0.0, 0.0, 0.0, 0.0003867027990054339, 0.0, 0.0, 0.002675284631550312, 0.0, 0.0, 6.345137808239087e-05, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.002537389751523733, 0.0, 0.005411531310528517, 0.0, 0.0019068681867793202, 0.0, 0.5603229403495789, 0.0, 0.0, 0.0, 0.0, 0.0, 0.00025446421932429075, 0.0, 0.0, 0.0, 1.2310632882872596e-05, 0.0, 8.266532677225769e-05, 0.0]], "target": [0.0]}, "loss": [0.4464011490345001, 0.0], "acc": [1.0, 0.0, 0.0, 0.0]}}


Trace of simplified code(s):

{"result": {"time": "2021-02-11 16:10:57.847900", "n_pass": [1, 1, 1], "n_token": 128, "loss": [0.4464011490345001, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def export(", "self", ",", "*", "args", ")", ":", "#NEWLINE#", "#INDENT#", "' copies the package recipe (conanfile.py and associated files) to your local store,\\n        where it can be shared and reused in other projects.\\n        From that store, it can be uploaded to any remote with \"upload\" command.\\n        '", "#NEWLINE#", "parser", "=", "argparse", ".", "ArgumentParser", "(", "description", "=", "self", ".", "export", ".", "__doc__", ",", "prog", "=", "'conan export'", ")", "#NEWLINE#", "parser", ".", "add_argument", "(", "'user'", ",", "help", "=", "'user_name[/channel]. By default, channel is \"testing\", e.g., phil or phil/stable'", ")", "#NEWLINE#", "parser", ".", "add_argument", "(", "'--path'", ",", "'-p'", ",", "default", "=", "None", ",", "help", "=", "(", "'Optional. Folder with a %s. Default current directory.'", "%", "CONANFILE", ")", ")", "#NEWLINE#", "parser", ".", "add_argument", "(", "'--keep-source'", ",", "'-k'", ",", "default", "=", "False", ",", "action", "=", "'store_true'", ",", "help", "=", "'Optional. Do not remove the source folder in local store. Use for testing purposes only'", ")", "#NEWLINE#", "args", "=", "parser", ".", "parse_args", "(", "*", "args", ")", "#NEWLINE#", "current_path", "=", "(", "args", ".", "path", "or", "os", ".", "getcwd", "(", ")", ")", "#NEWLINE#", "keep_source", "=", "args", ".", "keep_source", "#NEWLINE#", "self", ".", "_manager", ".", "export", "(", "args", ".", "user", ",", "current_path", ",", "keep_source", ")"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [12, 31, 42, 63, 86, 2, 20, 114, 5, 84, 91, 97, 110, 120, 94, 124, 108, 112, 126]}}
{"prediction": {"error_location": 0.6399270296096802, "repair_targets": [], "repair_candidates": [0.2116309255361557, 0.02244022861123085, 0.009380770847201347, 0.16121312975883484, 0.002049713861197233, 0.0032410065177828074, 0.0024744682013988495, 0.0127866817638278, 0.001129398588091135, 0.0003867027990054339, 0.002675284631550312, 6.345137808239087e-05, 0.002537389751523733, 0.005411531310528517, 0.0019068681867793202, 0.5603229403495789, 0.00025446421932429075, 1.2310632882872596e-05, 8.266532677225769e-05], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 16:10:57.910918", "n_pass": [24, 2, 2], "n_token": 112, "loss": [0.5861380100250244, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def export(", "self", ",", "*", "args", ")", ":", "#NEWLINE#", "#INDENT#", "' copies the package recipe (conanfile.py and associated files) to your local store,\\n        where it can be shared and reused in other projects.\\n        From that store, it can be uploaded to any remote with \"upload\" command.\\n        '", "#NEWLINE#", "parser", "=", "argparse", ".", "ArgumentParser", "(", "description", "=", "self", ".", "export", ".", "__doc__", ",", "prog", "=", "'conan export'", ")", "#NEWLINE#", "parser", ".", "add_argument", "(", "'user'", ",", "help", "=", "'user_name[/channel]. By default, channel is \"testing\", e.g., phil or phil/stable'", ")", "#NEWLINE#", "parser", ".", "add_argument", "(", "'--path'", ",", "'-p'", ",", "default", "=", "None", ",", "help", "=", "(", "'Optional. Folder with a %s. Default current directory.'", "%", "CONANFILE", ")", ")", "#NEWLINE#", "parser", "=", "'Optional. Do not remove the source folder in local store. Use for testing purposes only'", ")", "#NEWLINE#", "args", "=", "parser", ".", "parse_args", "(", "*", "args", ")", "#NEWLINE#", "current_path", "=", "(", "args", ".", "path", "or", "os", ".", "getcwd", "(", ")", ")", "#NEWLINE#", "keep_source", "=", "args", ".", "keep_source", "#NEWLINE#", "self", ".", "_manager", ".", "export", "(", "args", ".", "user", ",", "current_path", ",", "keep_source", ")"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [12, 31, 42, 63, 70, 2, 20, 98, 5, 68, 75, 81, 94, 104, 78, 108, 92, 96, 110]}}
{"prediction": {"error_location": 0.5564721822738647, "repair_targets": [], "repair_candidates": [0.18561038374900818, 0.011725417338311672, 0.02873845212161541, 0.1544707864522934, 0.009506781585514545, 0.03171322122216225, 0.032950520515441895, 0.014049398712813854, 0.0008655826677568257, 0.00017526026931591332, 0.0027255879249423742, 0.0003761083644349128, 0.004414271097630262, 0.06279806792736053, 0.0017454111948609352, 0.453818678855896, 0.00416974164545536, 2.9024204195593484e-05, 0.00011730100959539413], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 16:10:57.971711", "n_pass": [55, 3, 3], "n_token": 104, "loss": [0.6315401792526245, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def export(", "self", ",", "*", "args", ")", ":", "#NEWLINE#", "#INDENT#", "' copies the package recipe (conanfile.py and associated files) to your local store,\\n        where it can be shared and reused in other projects.\\n        From that store, it can be uploaded to any remote with \"upload\" command.\\n        '", "#NEWLINE#", "parser", "=", "argparse", ".", "ArgumentParser", "(", "description", "=", "self", ".", "export", ".", "__doc__", ",", "prog", "=", "'conan export'", ")", "#NEWLINE#", "parser", ")", "#NEWLINE#", "parser", ".", "add_argument", "(", "'--path'", ",", "'-p'", ",", "default", "=", "None", ",", "help", "=", "(", "'Optional. Folder with a %s. Default current directory.'", "%", "CONANFILE", ")", ")", "#NEWLINE#", "parser", "=", "'Optional. Do not remove the source folder in local store. Use for testing purposes only'", ")", "#NEWLINE#", "args", "=", "parser", ".", "parse_args", "(", "*", "args", ")", "#NEWLINE#", "current_path", "=", "(", "args", ".", "path", "or", "os", ".", "getcwd", "(", ")", ")", "#NEWLINE#", "keep_source", "=", "args", ".", "keep_source", "#NEWLINE#", "self", ".", "_manager", ".", "export", "(", "args", ".", "user", ",", "current_path", ",", "keep_source", ")"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [12, 31, 34, 55, 62, 2, 20, 90, 5, 60, 67, 73, 86, 96, 70, 100, 84, 88, 102]}}
{"prediction": {"error_location": 0.5317720174789429, "repair_targets": [], "repair_candidates": [0.1460469663143158, 0.0034968543332070112, 0.009453651495277882, 0.0972197949886322, 0.0031775247771292925, 0.007783413864672184, 0.020608654245734215, 0.009050630033016205, 0.000644186744466424, 6.61518206470646e-05, 0.0013175164349377155, 0.00010770709195639938, 0.0025049373507499695, 0.08048108220100403, 0.001110301585868001, 0.6156674027442932, 0.0012178088072687387, 9.482857421971858e-06, 3.5887864214600995e-05], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 16:10:58.091290", "n_pass": [95, 5, 4], "n_token": 100, "loss": [0.6532689332962036, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def export(", "self", ",", "*", "args", ")", ":", "#NEWLINE#", "#INDENT#", "' copies the package recipe (conanfile.py and associated files) to your local store,\\n        where it can be shared and reused in other projects.\\n        From that store, it can be uploaded to any remote with \"upload\" command.\\n        '", "#NEWLINE#", "parser", "=", "argparse", ".", "ArgumentParser", "(", "description", "=", "self", ".", "export", ".", "__doc__", ",", "prog", "=", "'conan export'", ")", "#NEWLINE#", "parser", ")", "#NEWLINE#", "parser", ".", "'-p'", ",", "default", "=", "None", ",", "help", "=", "(", "'Optional. Folder with a %s. Default current directory.'", "%", "CONANFILE", ")", ")", "#NEWLINE#", "parser", "=", "'Optional. Do not remove the source folder in local store. Use for testing purposes only'", ")", "#NEWLINE#", "args", "=", "parser", ".", "parse_args", "(", "*", "args", ")", "#NEWLINE#", "current_path", "=", "(", "args", ".", "path", "or", "os", ".", "getcwd", "(", ")", ")", "#NEWLINE#", "keep_source", "=", "args", ".", "keep_source", "#NEWLINE#", "self", ".", "_manager", ".", "export", "(", "args", ".", "user", ",", "current_path", ",", "keep_source", ")"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [12, 31, 34, 51, 58, 2, 20, 86, 5, 56, 63, 69, 82, 92, 66, 96, 80, 84, 98]}}
{"prediction": {"error_location": 0.5203420519828796, "repair_targets": [], "repair_candidates": [0.16912643611431122, 0.010825895704329014, 0.02194991707801819, 0.0791538655757904, 0.004905226174741983, 0.022907068952918053, 0.0341334342956543, 0.00950215756893158, 0.0009350166074000299, 9.00811210158281e-05, 0.001371873775497079, 0.00012265831173863262, 0.0017813004087656736, 0.007578374817967415, 0.001380457659251988, 0.6339063048362732, 0.00027676811441779137, 5.965794571238803e-06, 4.716086186817847e-05], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 16:10:58.439200", "n_pass": [106, 11, 5], "n_token": 96, "loss": [0.5044149160385132, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def export(", "self", ",", "*", "args", ")", ":", "#NEWLINE#", "#INDENT#", "' copies the package recipe (conanfile.py and associated files) to your local store,\\n        where it can be shared and reused in other projects.\\n        From that store, it can be uploaded to any remote with \"upload\" command.\\n        '", "#NEWLINE#", "parser", "=", "argparse", ".", "ArgumentParser", "(", "description", "=", "self", ".", "export", ".", "__doc__", ",", "prog", "=", "'conan export'", ")", "#NEWLINE#", "parser", ")", "#NEWLINE#", "parser", ".", "'-p'", ",", "default", "=", "None", ",", "help", "=", "(", "'Optional. Folder with a %s. Default current directory.'", "%", "CONANFILE", ")", ")", "#NEWLINE#", "parser", "=", "'Optional. Do not remove the source folder in local store. Use for testing purposes only'", ")", "#NEWLINE#", "args", "=", "parser", ".", "parse_args", "(", "*", "args", ")", "#NEWLINE#", "current_path", "=", "(", "args", ".", "path", "or", "os", ".", "getcwd", "keep_source", "=", "args", ".", "keep_source", "#NEWLINE#", "self", ".", "_manager", ".", "export", "(", "args", ".", "user", ",", "current_path", ",", "keep_source", ")"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [12, 31, 34, 51, 58, 2, 20, 82, 5, 56, 63, 69, 78, 88, 66, 92, 76, 80, 94]}}
{"prediction": {"error_location": 0.6038587689399719, "repair_targets": [], "repair_candidates": [0.12130849063396454, 0.014842640608549118, 0.04765588417649269, 0.03815959021449089, 0.0051512569189071655, 0.03293522074818611, 0.050279807299375534, 0.013660712167620659, 0.0014419411309063435, 0.0002257447486044839, 0.002096132142469287, 0.0008224595803767443, 0.01116545032709837, 0.0054800501093268394, 0.0019383428152650595, 0.6513638496398926, 0.0004256386309862137, 1.3870952898287214e-05, 0.0010329372016713023], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 16:10:58.497565", "n_pass": [109, 12, 6], "n_token": 92, "loss": [0.29450175166130066, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def export(", "self", ",", "*", "args", ")", ":", "#NEWLINE#", "#INDENT#", "' copies the package recipe (conanfile.py and associated files) to your local store,\\n        where it can be shared and reused in other projects.\\n        From that store, it can be uploaded to any remote with \"upload\" command.\\n        '", "#NEWLINE#", "parser", "=", "argparse", ".", "ArgumentParser", "(", "description", "=", "self", ".", "export", ".", "__doc__", ",", "prog", "=", "'conan export'", ")", "#NEWLINE#", "parser", ")", "#NEWLINE#", "parser", ".", "'-p'", ",", "default", "=", "None", ",", "help", "=", "(", "'Optional. Folder with a %s. Default current directory.'", "%", "CONANFILE", ")", ")", "#NEWLINE#", "parser", "=", "'Optional. Do not remove the source folder in local store. Use for testing purposes only'", ")", "#NEWLINE#", "args", "=", "parser", ".", "parse_args", "(", "*", "args", ")", "#NEWLINE#", "current_path", "=", "(", "args", ".", "path", "or", "os", ".", "getcwd", "keep_source", "=", "args", ".", "keep_source", "#NEWLINE#", "self", ".", "args", ".", "user", ",", "current_path", ",", "keep_source", ")"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [12, 31, 34, 51, 58, 2, 20, 82, 5, 56, 63, 69, 78, 84, 66, 88, 76, 80, 90]}}
{"prediction": {"error_location": 0.7449027895927429, "repair_targets": [], "repair_candidates": [0.2459813952445984, 0.036429472267627716, 0.08573780208826065, 0.11886509507894516, 0.008279980160295963, 0.04038946330547333, 0.09244859963655472, 0.07517252117395401, 0.0028602927923202515, 0.0005700981710106134, 0.005799780134111643, 0.006050375755876303, 0.02163534052670002, 0.008087110705673695, 0.003987770527601242, 0.24341019988059998, 0.0023641656152904034, 3.1661897082813084e-05, 0.001898879068903625], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 16:10:58.557856", "n_pass": [114, 13, 7], "n_token": 88, "loss": [0.7362772822380066, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def export(", "self", ",", "*", "args", ")", ":", "parser", "=", "argparse", ".", "ArgumentParser", "(", "description", "=", "self", ".", "export", ".", "__doc__", ",", "prog", "=", "'conan export'", ")", "#NEWLINE#", "parser", ")", "#NEWLINE#", "parser", ".", "'-p'", ",", "default", "=", "None", ",", "help", "=", "(", "'Optional. Folder with a %s. Default current directory.'", "%", "CONANFILE", ")", ")", "#NEWLINE#", "parser", "=", "'Optional. Do not remove the source folder in local store. Use for testing purposes only'", ")", "#NEWLINE#", "args", "=", "parser", ".", "parse_args", "(", "*", "args", ")", "#NEWLINE#", "current_path", "=", "(", "args", ".", "path", "or", "os", ".", "getcwd", "keep_source", "=", "args", ".", "keep_source", "#NEWLINE#", "self", ".", "args", ".", "user", ",", "current_path", ",", "keep_source", ")"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [8, 27, 30, 47, 54, 2, 16, 78, 5, 52, 59, 65, 74, 80, 62, 84, 72, 76, 86]}}
{"prediction": {"error_location": 0.4788933992385864, "repair_targets": [], "repair_candidates": [0.2269553393125534, 0.023914387449622154, 0.06825097650289536, 0.2352781891822815, 0.0023184597957879305, 0.015116753056645393, 0.028319111093878746, 0.05045861750841141, 0.0021925587207078934, 0.00041911573498509824, 0.0043480596505105495, 0.014357749372720718, 0.007210950832813978, 0.007011121604591608, 0.00159502774477005, 0.31007206439971924, 0.0011208152864128351, 9.430180216440931e-05, 0.0009664188255555928], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 16:10:58.615337", "n_pass": [116, 14, 8], "n_token": 84, "loss": [0.5434447526931763, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def export(", "self", ",", "*", "args", ")", ":", "parser", "=", "argparse", ".", "self", ".", "export", ".", "__doc__", ",", "prog", "=", "'conan export'", ")", "#NEWLINE#", "parser", ")", "#NEWLINE#", "parser", ".", "'-p'", ",", "default", "=", "None", ",", "help", "=", "(", "'Optional. Folder with a %s. Default current directory.'", "%", "CONANFILE", ")", ")", "#NEWLINE#", "parser", "=", "'Optional. Do not remove the source folder in local store. Use for testing purposes only'", ")", "#NEWLINE#", "args", "=", "parser", ".", "parse_args", "(", "*", "args", ")", "#NEWLINE#", "current_path", "=", "(", "args", ".", "path", "or", "os", ".", "getcwd", "keep_source", "=", "args", ".", "keep_source", "#NEWLINE#", "self", ".", "args", ".", "user", ",", "current_path", ",", "keep_source", ")"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [8, 23, 26, 43, 50, 2, 12, 74, 5, 48, 55, 61, 70, 76, 58, 80, 68, 72, 82]}}
{"prediction": {"error_location": 0.5807443857192993, "repair_targets": [], "repair_candidates": [0.2187713235616684, 0.030328571796417236, 0.11857408285140991, 0.12705615162849426, 0.006997071672230959, 0.024903642013669014, 0.0777696892619133, 0.0716465637087822, 0.005676383152604103, 0.000803390343207866, 0.009148802608251572, 0.00896807573735714, 0.03319329395890236, 0.006930297240614891, 0.002994537353515625, 0.2525489628314972, 0.0019596093334257603, 0.0002833393809851259, 0.001446208101697266], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 16:10:58.672937", "n_pass": [118, 15, 9], "n_token": 80, "loss": [0.327877938747406, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def export(", "self", ",", "*", "args", ")", ":", "parser", "=", "argparse", ".", "self", ".", "export", ".", "'conan export'", ")", "#NEWLINE#", "parser", ")", "#NEWLINE#", "parser", ".", "'-p'", ",", "default", "=", "None", ",", "help", "=", "(", "'Optional. Folder with a %s. Default current directory.'", "%", "CONANFILE", ")", ")", "#NEWLINE#", "parser", "=", "'Optional. Do not remove the source folder in local store. Use for testing purposes only'", ")", "#NEWLINE#", "args", "=", "parser", ".", "parse_args", "(", "*", "args", ")", "#NEWLINE#", "current_path", "=", "(", "args", ".", "path", "or", "os", ".", "getcwd", "keep_source", "=", "args", ".", "keep_source", "#NEWLINE#", "self", ".", "args", ".", "user", ",", "current_path", ",", "keep_source", ")"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [8, 19, 22, 39, 46, 2, 12, 70, 5, 44, 51, 57, 66, 72, 54, 76, 64, 68, 78]}}
{"prediction": {"error_location": 0.7204508185386658, "repair_targets": [], "repair_candidates": [0.2848701477050781, 0.032525740563869476, 0.04379324987530708, 0.12687833607196808, 0.0026895632036030293, 0.008956861682236195, 0.05903997644782066, 0.05055682733654976, 0.0032772915437817574, 0.0005306508974172175, 0.008579934015870094, 0.009609278291463852, 0.005050017964094877, 0.005801735911518335, 0.002049254020676017, 0.352123886346817, 0.0017368894768878818, 0.00020760779443662614, 0.0017227673670277], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 16:10:58.730797", "n_pass": [121, 16, 10], "n_token": 76, "loss": [0.33391422033309937, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def export(", "self", ",", "*", "args", ")", ":", "parser", "=", "argparse", ".", "self", ".", "export", ".", "'conan export'", ")", "#NEWLINE#", "parser", ")", "#NEWLINE#", "parser", ".", "None", ",", "help", "=", "(", "'Optional. Folder with a %s. Default current directory.'", "%", "CONANFILE", ")", ")", "#NEWLINE#", "parser", "=", "'Optional. Do not remove the source folder in local store. Use for testing purposes only'", ")", "#NEWLINE#", "args", "=", "parser", ".", "parse_args", "(", "*", "args", ")", "#NEWLINE#", "current_path", "=", "(", "args", ".", "path", "or", "os", ".", "getcwd", "keep_source", "=", "args", ".", "keep_source", "#NEWLINE#", "self", ".", "args", ".", "user", ",", "current_path", ",", "keep_source", ")"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [8, 19, 22, 35, 42, 2, 12, 66, 5, 40, 47, 53, 62, 68, 50, 72, 60, 64, 74]}}
{"prediction": {"error_location": 0.7161152958869934, "repair_targets": [], "repair_candidates": [0.3703087568283081, 0.026236068457365036, 0.03574344143271446, 0.19613751769065857, 0.002055123448371887, 0.0117791797965765, 0.025100020691752434, 0.0425284281373024, 0.0011448808945715427, 0.00023114516807254404, 0.006169852800667286, 0.006091943476349115, 0.0034349244087934494, 0.002403090475127101, 0.0023266745265573263, 0.26534008979797363, 0.0010949034476652741, 0.00013528404815588146, 0.0017386701656505466], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 16:10:58.790868", "n_pass": [122, 17, 11], "n_token": 72, "loss": [0.5537576079368591, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def export(", "self", ",", "*", "args", ")", ":", "parser", "=", "argparse", ".", "self", ".", "export", ".", "'conan export'", ")", "#NEWLINE#", "parser", ")", "#NEWLINE#", "parser", ".", "(", "'Optional. Folder with a %s. Default current directory.'", "%", "CONANFILE", ")", ")", "#NEWLINE#", "parser", "=", "'Optional. Do not remove the source folder in local store. Use for testing purposes only'", ")", "#NEWLINE#", "args", "=", "parser", ".", "parse_args", "(", "*", "args", ")", "#NEWLINE#", "current_path", "=", "(", "args", ".", "path", "or", "os", ".", "getcwd", "keep_source", "=", "args", ".", "keep_source", "#NEWLINE#", "self", ".", "args", ".", "user", ",", "current_path", ",", "keep_source", ")"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [8, 19, 22, 31, 38, 2, 12, 62, 5, 36, 43, 49, 58, 64, 46, 68, 56, 60, 70]}}
{"prediction": {"error_location": 0.5747859477996826, "repair_targets": [], "repair_candidates": [0.3702123463153839, 0.014143507927656174, 0.01246662437915802, 0.2827587127685547, 0.0007715614628978074, 0.017312930896878242, 0.016609393060207367, 0.02312914840877056, 0.0008789824787527323, 0.00011855144839501008, 0.0025469069369137287, 0.00364683591760695, 0.001449789386242628, 0.000661506608594209, 0.0007729062344878912, 0.2509102523326874, 0.00032472735620103776, 5.502192288986407e-05, 0.0012303839903324842], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 16:10:58.848618", "n_pass": [123, 18, 12], "n_token": 68, "loss": [0.39138051867485046, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def export(", "self", ",", "*", "args", ")", ":", "parser", "=", "argparse", ".", "self", ".", "export", ".", "'conan export'", ")", "#NEWLINE#", "parser", ")", "#NEWLINE#", "parser", ".", ")", ")", "#NEWLINE#", "parser", "=", "'Optional. Do not remove the source folder in local store. Use for testing purposes only'", ")", "#NEWLINE#", "args", "=", "parser", ".", "parse_args", "(", "*", "args", ")", "#NEWLINE#", "current_path", "=", "(", "args", ".", "path", "or", "os", ".", "getcwd", "keep_source", "=", "args", ".", "keep_source", "#NEWLINE#", "self", ".", "args", ".", "user", ",", "current_path", ",", "keep_source", ")"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [8, 19, 22, 27, 34, 2, 12, 58, 5, 32, 39, 45, 54, 60, 42, 64, 52, 56, 66]}}
{"prediction": {"error_location": 0.6761229634284973, "repair_targets": [], "repair_candidates": [0.40218672156333923, 0.0354522168636322, 0.05259205773472786, 0.2085556983947754, 0.0010806682985275984, 0.004717107862234116, 0.0323210172355175, 0.03605738654732704, 0.0006545864162035286, 0.00018605924560688436, 0.004536835011094809, 0.0022266614250838757, 0.002502237679436803, 0.0005375015316531062, 0.0015931165544316173, 0.21237300336360931, 0.0009110160754062235, 5.688327655661851e-05, 0.0014592751394957304], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 16:10:58.906016", "n_pass": [125, 19, 13], "n_token": 64, "loss": [0.640628457069397, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def export(", "self", ",", "*", "args", ")", ":", "parser", "=", "argparse", ".", "self", ".", "export", ".", "'conan export'", ")", "#NEWLINE#", "parser", ")", "#NEWLINE#", "parser", ".", ")", ")", "#NEWLINE#", "parser", "args", "=", "parser", ".", "parse_args", "(", "*", "args", ")", "#NEWLINE#", "current_path", "=", "(", "args", ".", "path", "or", "os", ".", "getcwd", "keep_source", "=", "args", ".", "keep_source", "#NEWLINE#", "self", ".", "args", ".", "user", ",", "current_path", ",", "keep_source", ")"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [8, 19, 22, 27, 30, 2, 12, 54, 5, 28, 35, 41, 50, 56, 38, 60, 48, 52, 62]}}
{"prediction": {"error_location": 0.5269611477851868, "repair_targets": [], "repair_candidates": [0.12156619876623154, 0.015474180690944195, 0.014410104602575302, 0.06314324587583542, 0.0006643056985922158, 0.0031224903650581837, 0.7022891044616699, 0.022466765716671944, 0.00040267594158649445, 0.00025425435160286725, 0.0025790168438106775, 0.0022571871522814035, 0.0034583983942866325, 0.0004336419515311718, 0.0015010074712336063, 0.043776266276836395, 0.0005474557401612401, 4.6621131332358345e-05, 0.001607088721357286], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 16:10:58.964129", "n_pass": [130, 20, 14], "n_token": 60, "loss": [0.8711954355239868, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def export(", "self", ",", "*", "args", ")", ":", "parser", "=", "argparse", ".", "self", ".", "export", ".", "'conan export'", ")", "#NEWLINE#", "parser", ")", "#NEWLINE#", "parser", ".", ")", ")", "#NEWLINE#", "parser", "args", "=", "parser", ".", "parse_args", "(", "*", "args", ")", "#NEWLINE#", "current_path", "=", "(", "args", ".", "path", "keep_source", "=", "args", ".", "keep_source", "#NEWLINE#", "self", ".", "args", ".", "user", ",", "current_path", ",", "keep_source", ")"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [8, 19, 22, 27, 30, 2, 12, 50, 5, 28, 35, 41, 46, 52, 38, 56, 44, 48, 58]}}
{"prediction": {"error_location": 0.4184509813785553, "repair_targets": [], "repair_candidates": [0.08773823082447052, 0.012679031118750572, 0.010370003990828991, 0.04817182570695877, 0.0007459758198820055, 0.003933911677449942, 0.7530189156532288, 0.014078534208238125, 0.0006922476459294558, 0.00019787441124208272, 0.0019938242621719837, 0.000231145866564475, 0.0019303339067846537, 0.0006628878763876855, 0.001144491252489388, 0.06058073043823242, 0.00034673980553634465, 7.254235970322043e-05, 0.0014107904862612486], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 16:10:59.025067", "n_pass": [181, 21, 15], "n_token": 58, "loss": [0.9192646145820618, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def export(", "self", ",", "*", "args", ")", ":", "parser", "=", "argparse", ".", "self", ".", "export", ".", "'conan export'", ")", "#NEWLINE#", "parser", ")", "#NEWLINE#", "parser", ".", ")", ")", "#NEWLINE#", "parser", "args", "=", "parser", ".", "parse_args", "(", "*", "args", ")", "#NEWLINE#", "current_path", "=", "(", "args", ".", "path", "keep_source", "=", "args", ".", "keep_source", "#NEWLINE#", "self", ".", "args", ".", "current_path", ",", "keep_source", ")"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [8, 19, 22, 27, 30, 2, 12, 50, 5, 28, 35, 41, 46, 52, 38, 54, 44, 48, 56]}}
{"prediction": {"error_location": 0.3988122045993805, "repair_targets": [], "repair_candidates": [0.0552961565554142, 0.010811121203005314, 0.005582045763731003, 0.03898966684937477, 0.0010146574350073934, 0.003624135162681341, 0.3428366780281067, 0.011414053849875927, 0.0007246769964694977, 0.00016591431631240994, 0.37917986512184143, 0.00023149205662775785, 0.0012269063154235482, 0.0007029818370938301, 0.000846707436721772, 0.03448369354009628, 0.0006174743757583201, 0.11116687953472137, 0.0010848604142665863], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 16:10:59.140420", "n_pass": [189, 23, 16], "n_token": 56, "loss": [0.6986428499221802, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def export(", "self", ",", "*", "args", ")", ":", "parser", "=", "self", ".", "export", ".", "'conan export'", ")", "#NEWLINE#", "parser", ")", "#NEWLINE#", "parser", ".", ")", ")", "#NEWLINE#", "parser", "args", "=", "parser", ".", "parse_args", "(", "*", "args", ")", "#NEWLINE#", "current_path", "=", "(", "args", ".", "path", "keep_source", "=", "args", ".", "keep_source", "#NEWLINE#", "self", ".", "args", ".", "current_path", ",", "keep_source", ")"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [8, 17, 20, 25, 28, 2, 10, 48, 5, 26, 33, 39, 44, 50, 36, 52, 42, 46, 54]}}
{"prediction": {"error_location": 0.4972597062587738, "repair_targets": [], "repair_candidates": [0.04259049519896507, 0.012538919225335121, 0.007534109987318516, 0.0467478446662426, 0.0017490613972768188, 0.006728868465870619, 0.35043275356292725, 0.011476489715278149, 0.0009240576182492077, 0.0001671300851739943, 0.37951818108558655, 0.0006635963218286633, 0.001367944641970098, 0.0015394770307466388, 0.0007819634629413486, 0.039324600249528885, 0.0005769407143816352, 0.09419803321361542, 0.0011395005276426673], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 16:10:59.198179", "n_pass": [191, 24, 17], "n_token": 54, "loss": [0.9198837280273438, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def export(", "self", ",", "*", "args", ")", ":", "parser", "=", "self", ".", "'conan export'", ")", "#NEWLINE#", "parser", ")", "#NEWLINE#", "parser", ".", ")", ")", "#NEWLINE#", "parser", "args", "=", "parser", ".", "parse_args", "(", "*", "args", ")", "#NEWLINE#", "current_path", "=", "(", "args", ".", "path", "keep_source", "=", "args", ".", "keep_source", "#NEWLINE#", "self", ".", "args", ".", "current_path", ",", "keep_source", ")"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [8, 15, 18, 23, 26, 2, 10, 46, 5, 24, 31, 37, 42, 48, 34, 50, 40, 44, 52]}}
{"prediction": {"error_location": 0.3985653817653656, "repair_targets": [], "repair_candidates": [0.03877359256148338, 0.006808927748352289, 0.0050922841764986515, 0.025305384770035744, 0.002052187453955412, 0.006639012601226568, 0.24652203917503357, 0.007768271490931511, 0.0012923821341246367, 9.071767999557778e-05, 0.4570193290710449, 0.0005697889719158411, 0.0009622871875762939, 0.0011379527859389782, 0.0005349926650524139, 0.04064354673027992, 0.0006308204610832036, 0.15728235244750977, 0.0008740793564356863], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 16:10:59.257357", "n_pass": [192, 25, 18], "n_token": 52, "loss": [1.1249771118164062, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def export(", "self", ",", "*", "args", ")", ":", "parser", "=", "self", ".", "#NEWLINE#", "parser", ")", "#NEWLINE#", "parser", ".", ")", ")", "#NEWLINE#", "parser", "args", "=", "parser", ".", "parse_args", "(", "*", "args", ")", "#NEWLINE#", "current_path", "=", "(", "args", ".", "path", "keep_source", "=", "args", ".", "keep_source", "#NEWLINE#", "self", ".", "args", ".", "current_path", ",", "keep_source", ")"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [8, 13, 16, 21, 24, 2, 10, 44, 5, 22, 29, 35, 40, 46, 32, 48, 38, 42, 50]}}
{"prediction": {"error_location": 0.32465991377830505, "repair_targets": [], "repair_candidates": [0.022120412439107895, 0.004404584877192974, 0.003059354843571782, 0.01914156787097454, 0.00026809421251527965, 0.005863621365278959, 0.21941477060317993, 0.006450318265706301, 0.0016561364755034447, 5.8623176300898194e-05, 0.5353484749794006, 0.0008318072068504989, 0.0004583197587635368, 0.0012276478810235858, 0.0003177964244969189, 0.025333674624562263, 0.0005058943061158061, 0.15297245979309082, 0.0005664567579515278], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 16:10:59.371582", "n_pass": [196, 27, 19], "n_token": 50, "loss": [0.6336470246315002, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def export(", "self", ",", "*", "args", ")", ":", "parser", "=", "self", ".", "#NEWLINE#", "parser", ")", "#NEWLINE#", "parser", ".", "#NEWLINE#", "parser", "args", "=", "parser", ".", "parse_args", "(", "*", "args", ")", "#NEWLINE#", "current_path", "=", "(", "args", ".", "path", "keep_source", "=", "args", ".", "keep_source", "#NEWLINE#", "self", ".", "args", ".", "current_path", ",", "keep_source", ")"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [8, 13, 16, 19, 22, 2, 10, 42, 5, 20, 27, 33, 38, 44, 30, 46, 36, 40, 48]}}
{"prediction": {"error_location": 0.5306529402732849, "repair_targets": [], "repair_candidates": [0.030738841742277145, 0.008658074773848057, 0.0032752398401498795, 0.022226987406611443, 0.0005332769942469895, 0.018371423706412315, 0.009235212579369545, 0.01047875452786684, 0.0012468094937503338, 6.936123827472329e-05, 0.6567246913909912, 0.00112653779797256, 0.000349248293787241, 0.002126683248206973, 0.00033807175350375473, 0.034587398171424866, 0.0006679835496470332, 0.19855402410030365, 0.0006913534016348422], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 16:10:59.429405", "n_pass": [200, 28, 20], "n_token": 48, "loss": [0.46850278973579407, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def export(", "self", ",", "*", "args", ")", ":", "parser", "=", "self", ".", "#NEWLINE#", "parser", ")", "#NEWLINE#", "parser", ".", "#NEWLINE#", "parser", "args", "=", "parser", ".", "*", "args", ")", "#NEWLINE#", "current_path", "=", "(", "args", ".", "path", "keep_source", "=", "args", ".", "keep_source", "#NEWLINE#", "self", ".", "args", ".", "current_path", ",", "keep_source", ")"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [8, 13, 16, 19, 22, 2, 10, 40, 5, 20, 25, 31, 36, 42, 28, 44, 34, 38, 46]}}
{"prediction": {"error_location": 0.6259387135505676, "repair_targets": [], "repair_candidates": [0.05448321998119354, 0.024395788088440895, 0.008712057955563068, 0.029087278991937637, 0.0008985689491964877, 0.01975948177278042, 0.01609564758837223, 0.016863616183400154, 0.011697696521878242, 0.00044323361362330616, 0.6306791305541992, 0.003655986860394478, 0.0004533998144324869, 0.010023391805589199, 0.000566382659599185, 0.05972456932067871, 0.0015430485364049673, 0.10937223583459854, 0.0015452721854671836], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 16:10:59.486706", "n_pass": [202, 29, 21], "n_token": 46, "loss": [0.2881213426589966, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def export(", "self", ",", "*", "args", ")", ":", "parser", "=", "self", ".", "#NEWLINE#", "parser", ")", "#NEWLINE#", "parser", ".", "#NEWLINE#", "parser", "args", "=", "parser", ".", "*", "args", "current_path", "=", "(", "args", ".", "path", "keep_source", "=", "args", ".", "keep_source", "#NEWLINE#", "self", ".", "args", ".", "current_path", ",", "keep_source", ")"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [8, 13, 16, 19, 22, 2, 10, 38, 5, 20, 25, 29, 34, 40, 26, 42, 32, 36, 44]}}
{"prediction": {"error_location": 0.7496706247329712, "repair_targets": [], "repair_candidates": [0.11416009068489075, 0.04304260015487671, 0.020008817315101624, 0.08391963690519333, 0.00143940350972116, 0.039417196065187454, 0.052645910531282425, 0.09184673428535461, 0.018479924649000168, 0.004662162624299526, 0.07926644384860992, 0.014155934564769268, 0.0009815837256610394, 0.012615019455552101, 0.0009430077043361962, 0.11532506346702576, 0.009588656947016716, 0.29617783427238464, 0.001323970966041088], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 16:10:59.545894", "n_pass": [205, 30, 22], "n_token": 44, "loss": [0.8980467915534973, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def export(", "self", ",", "*", "args", ")", ":", "parser", "=", "self", ".", "#NEWLINE#", "parser", ")", "#NEWLINE#", "parser", ".", "#NEWLINE#", "parser", "args", "=", "parser", ".", "*", "args", "current_path", "=", "(", "args", "keep_source", "=", "args", ".", "keep_source", "#NEWLINE#", "self", ".", "args", ".", "current_path", ",", "keep_source", ")"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [8, 13, 16, 19, 22, 2, 10, 36, 5, 20, 25, 29, 32, 38, 26, 40, 30, 34, 42]}}
{"prediction": {"error_location": 0.40736451745033264, "repair_targets": [], "repair_candidates": [0.18046848475933075, 0.0664641335606575, 0.009424173273146152, 0.1908676028251648, 0.0007616549264639616, 0.06059510260820389, 0.052629612386226654, 0.09954241663217545, 0.025919083505868912, 0.0048200939781963825, 0.029811453074216843, 0.0038912531454116106, 0.00047400713083334267, 0.00270609138533473, 0.0007528567221015692, 0.21587252616882324, 0.012577168643474579, 0.04230103641748428, 0.00012128200614824891], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 16:10:59.893218", "n_pass": [279, 36, 23], "n_token": 43, "loss": [0.7088913917541504, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def export(", "self", ",", "*", "args", ")", ":", "parser", "=", "self", ".", "#NEWLINE#", "parser", ")", "#NEWLINE#", "parser", ".", "#NEWLINE#", "parser", "args", "=", "parser", ".", "*", "args", "current_path", "=", "(", "args", "keep_source", "=", "args", ".", "keep_source", "#NEWLINE#", "self", "args", ".", "current_path", ",", "keep_source", ")"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [8, 13, 16, 19, 22, 2, 10, 36, 5, 20, 25, 29, 32, 37, 26, 39, 30, 34, 41]}}
{"prediction": {"error_location": 0.49218955636024475, "repair_targets": [], "repair_candidates": [0.2004747986793518, 0.08213096112012863, 0.010135069489479065, 0.22115109860897064, 0.0009059414151124656, 0.08370913565158844, 0.0677543580532074, 0.03278840705752373, 0.03469489514827728, 0.009757719933986664, 0.054316889494657516, 0.01178587507456541, 0.000882027845364064, 0.0038487128913402557, 0.0013132328167557716, 0.13003507256507874, 0.018378762528300285, 0.03581087291240692, 0.00012610720295924693], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 16:11:00.067427", "n_pass": [285, 39, 24], "n_token": 42, "loss": [0.7111464738845825, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def export(", "self", ",", "*", "args", ")", ":", "parser", "=", "self", ".", "#NEWLINE#", "parser", ")", "#NEWLINE#", "parser", ".", "#NEWLINE#", "parser", "args", "=", "parser", ".", "*", "args", "current_path", "=", "(", "args", "keep_source", "=", "args", ".", "keep_source", "#NEWLINE#", "self", "args", ".", "current_path", ",", "keep_source"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [8, 13, 16, 19, 22, 2, 10, 36, 5, 20, 25, 29, 32, 37, 26, 39, 30, 34, 41]}}
{"prediction": {"error_location": 0.4910809099674225, "repair_targets": [], "repair_candidates": [0.16348575055599213, 0.14037565886974335, 0.011101019568741322, 0.1614840179681778, 0.0008571275975555182, 0.06252028793096542, 0.05641888827085495, 0.033372461795806885, 0.03589767962694168, 0.00703605217859149, 0.0441134013235569, 0.007977445609867573, 0.0004250464553479105, 0.0028499173931777477, 0.0008990500937215984, 0.08476231247186661, 0.021079344674944878, 0.1652757227420807, 6.875443796161562e-05], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 16:11:00.243976", "n_pass": [290, 42, 25], "n_token": 41, "loss": [0.5824304819107056, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def export(", "self", ",", "args", ")", ":", "parser", "=", "self", ".", "#NEWLINE#", "parser", ")", "#NEWLINE#", "parser", ".", "#NEWLINE#", "parser", "args", "=", "parser", ".", "*", "args", "current_path", "=", "(", "args", "keep_source", "=", "args", ".", "keep_source", "#NEWLINE#", "self", "args", ".", "current_path", ",", "keep_source"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [7, 12, 15, 18, 21, 2, 9, 35, 4, 19, 24, 28, 31, 36, 25, 38, 29, 33, 40]}}
{"prediction": {"error_location": 0.5585391521453857, "repair_targets": [], "repair_candidates": [0.07369823753833771, 0.1865105777978897, 0.014340578578412533, 0.08432561159133911, 0.004066863097250462, 0.04195424169301987, 0.035167720168828964, 0.04086429253220558, 0.013226373121142387, 0.007617042865604162, 0.033840056508779526, 0.014042848721146584, 0.00020189151109661907, 0.0057379258796572685, 0.0011341861682012677, 0.040506958961486816, 0.03590940311551094, 0.3668179214000702, 3.722463588928804e-05], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 16:11:00.302074", "n_pass": [292, 43, 26], "n_token": 40, "loss": [0.6432217359542847, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def export(", "self", ",", "args", ":", "parser", "=", "self", ".", "#NEWLINE#", "parser", ")", "#NEWLINE#", "parser", ".", "#NEWLINE#", "parser", "args", "=", "parser", ".", "*", "args", "current_path", "=", "(", "args", "keep_source", "=", "args", ".", "keep_source", "#NEWLINE#", "self", "args", ".", "current_path", ",", "keep_source"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [6, 11, 14, 17, 20, 2, 8, 34, 4, 18, 23, 27, 30, 35, 24, 37, 28, 32, 39]}}
{"prediction": {"error_location": 0.5255963206291199, "repair_targets": [], "repair_candidates": [0.11851043254137039, 0.09600759297609329, 0.022499218583106995, 0.1070508062839508, 0.024348784238100052, 0.046111855655908585, 0.04818543419241905, 0.022844884544610977, 0.010710599832236767, 0.004722834564745426, 0.03161194548010826, 0.009540565311908722, 0.00020126817980781198, 0.0029991718474775553, 0.0012008940102532506, 0.0385313555598259, 0.014316423796117306, 0.4005705416202545, 3.546175139490515e-05], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 16:11:00.419964", "n_pass": [295, 45, 27], "n_token": 39, "loss": [1.0024473667144775, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def export(", "self", ",", "args", ":", "parser", "self", ".", "#NEWLINE#", "parser", ")", "#NEWLINE#", "parser", ".", "#NEWLINE#", "parser", "args", "=", "parser", ".", "*", "args", "current_path", "=", "(", "args", "keep_source", "=", "args", ".", "keep_source", "#NEWLINE#", "self", "args", ".", "current_path", ",", "keep_source"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [6, 10, 13, 16, 19, 2, 7, 33, 4, 17, 22, 26, 29, 34, 23, 36, 27, 31, 38]}}
{"prediction": {"error_location": 0.3669802248477936, "repair_targets": [], "repair_candidates": [0.13872858881950378, 0.07863401621580124, 0.01873849518597126, 0.11040535569190979, 0.017789222300052643, 0.05077409744262695, 0.059175413101911545, 0.020410099998116493, 0.020365744829177856, 0.004809151403605938, 0.04414966702461243, 0.010713608004152775, 0.00036717872717417777, 0.0021059687715023756, 0.0014902525581419468, 0.04668597877025604, 0.006587271578609943, 0.36801716685295105, 5.265305662760511e-05], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 16:11:00.478074", "n_pass": [297, 46, 28], "n_token": 38, "loss": [0.8152023553848267, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def export(", "self", ",", "args", ":", "parser", "self", "#NEWLINE#", "parser", ")", "#NEWLINE#", "parser", ".", "#NEWLINE#", "parser", "args", "=", "parser", ".", "*", "args", "current_path", "=", "(", "args", "keep_source", "=", "args", ".", "keep_source", "#NEWLINE#", "self", "args", ".", "current_path", ",", "keep_source"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [6, 9, 12, 15, 18, 2, 7, 32, 4, 16, 21, 25, 28, 33, 22, 35, 26, 30, 37]}}
{"prediction": {"error_location": 0.44254976511001587, "repair_targets": [], "repair_candidates": [0.13672734797000885, 0.11616723984479904, 0.02184387668967247, 0.0808493122458458, 0.01811808906495571, 0.044531676918268204, 0.08738362044095993, 0.026570061221718788, 0.009738396853208542, 0.006010939367115498, 0.057886477559804916, 0.008681554347276688, 0.0005275548319332302, 0.0034099156036973, 0.0014596356777474284, 0.04990868270397186, 0.0085128303617239, 0.3215416967868805, 0.0001310774387093261], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 16:11:00.535764", "n_pass": [298, 47, 29], "n_token": 37, "loss": [0.6996943950653076, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def export(", "self", ",", "args", ":", "parser", "self", "parser", ")", "#NEWLINE#", "parser", ".", "#NEWLINE#", "parser", "args", "=", "parser", ".", "*", "args", "current_path", "=", "(", "args", "keep_source", "=", "args", ".", "keep_source", "#NEWLINE#", "self", "args", ".", "current_path", ",", "keep_source"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [6, 8, 11, 14, 17, 2, 7, 31, 4, 15, 20, 24, 27, 32, 21, 34, 25, 29, 36]}}
{"prediction": {"error_location": 0.4967370927333832, "repair_targets": [], "repair_candidates": [0.07337544858455658, 0.06940606236457825, 0.029489781707525253, 0.039948124438524246, 0.023525310680270195, 0.04825423285365105, 0.22090226411819458, 0.03721452131867409, 0.00631077541038394, 0.009217598475515842, 0.08040968328714371, 0.013628926128149033, 0.0007734374376013875, 0.004767389968037605, 0.0016596440691500902, 0.03381999582052231, 0.005897745955735445, 0.3012966811656952, 0.00010238689719699323], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 16:11:00.593246", "n_pass": [300, 48, 30], "n_token": 36, "loss": [0.6611053347587585, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def export(", "self", ",", "args", ":", "parser", "self", "parser", "#NEWLINE#", "parser", ".", "#NEWLINE#", "parser", "args", "=", "parser", ".", "*", "args", "current_path", "=", "(", "args", "keep_source", "=", "args", ".", "keep_source", "#NEWLINE#", "self", "args", ".", "current_path", ",", "keep_source"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [6, 8, 10, 13, 16, 2, 7, 30, 4, 14, 19, 23, 26, 31, 20, 33, 24, 28, 35]}}
{"prediction": {"error_location": 0.5162804126739502, "repair_targets": [], "repair_candidates": [0.09000132232904434, 0.08179652690887451, 0.025193722918629646, 0.04796557128429413, 0.013406670652329922, 0.05278945341706276, 0.18245872855186462, 0.041263431310653687, 0.011316340416669846, 0.0109662851318717, 0.15702179074287415, 0.024496007710695267, 0.000719114497769624, 0.002458905801177025, 0.0012453001691028476, 0.026678957045078278, 0.004912791308015585, 0.2252209633588791, 8.80992301972583e-05], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 16:11:00.651484", "n_pass": [301, 49, 31], "n_token": 35, "loss": [0.7556953430175781, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def export(", "self", ",", "args", ":", "parser", "self", "parser", "parser", ".", "#NEWLINE#", "parser", "args", "=", "parser", ".", "*", "args", "current_path", "=", "(", "args", "keep_source", "=", "args", ".", "keep_source", "#NEWLINE#", "self", "args", ".", "current_path", ",", "keep_source"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [6, 8, 9, 12, 15, 2, 7, 29, 4, 13, 18, 22, 25, 30, 19, 32, 23, 27, 34]}}
{"prediction": {"error_location": 0.4696838855743408, "repair_targets": [], "repair_candidates": [0.07292783260345459, 0.09157045930624008, 0.04675832763314247, 0.0665331482887268, 0.011576715856790543, 0.0031735701486468315, 0.25891128182411194, 0.029249610379338264, 0.008476627990603447, 0.007617473136633635, 0.0881408154964447, 0.02279915288090706, 0.00024762502289377153, 0.0014438077341765165, 0.000859856721945107, 0.016410982236266136, 0.0029009832069277763, 0.27037662267684937, 2.5080547857214697e-05], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 16:11:00.709305", "n_pass": [303, 50, 32], "n_token": 34, "loss": [0.7641751766204834, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def export(", "self", ",", "args", ":", "parser", "self", "parser", "parser", "#NEWLINE#", "parser", "args", "=", "parser", ".", "*", "args", "current_path", "=", "(", "args", "keep_source", "=", "args", ".", "keep_source", "#NEWLINE#", "self", "args", ".", "current_path", ",", "keep_source"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [6, 8, 9, 11, 14, 2, 7, 28, 4, 12, 17, 21, 24, 29, 18, 31, 22, 26, 33]}}
{"prediction": {"error_location": 0.4657179117202759, "repair_targets": [], "repair_candidates": [0.14081241190433502, 0.12506763637065887, 0.027308467775583267, 0.06016233563423157, 0.00651048356667161, 0.0061032758094370365, 0.24718070030212402, 0.06016748398542404, 0.00466129370033741, 0.026321081444621086, 0.10446466505527496, 0.026735667139291763, 0.0006082305335439742, 0.011302785947918892, 0.0009815272642299533, 0.04969233274459839, 0.005195166915655136, 0.0965675339102745, 0.00015695382899139076], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 16:11:00.826636", "n_pass": [307, 52, 33], "n_token": 33, "loss": [0.34718039631843567, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def export(", "self", ",", "args", ":", "parser", "self", "parser", "parser", "#NEWLINE#", "parser", "args", "parser", ".", "*", "args", "current_path", "=", "(", "args", "keep_source", "=", "args", ".", "keep_source", "#NEWLINE#", "self", "args", ".", "current_path", ",", "keep_source"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [6, 8, 9, 11, 13, 2, 7, 27, 4, 12, 16, 20, 23, 28, 17, 30, 21, 25, 32]}}
{"prediction": {"error_location": 0.7066777944564819, "repair_targets": [], "repair_candidates": [0.09481560438871384, 0.01607423834502697, 0.019665328785777092, 0.05386155843734741, 0.007646643556654453, 0.010490305721759796, 0.09076932072639465, 0.03151668235659599, 0.0132251912727952, 0.011836687102913857, 0.22427773475646973, 0.018474619835615158, 0.001682709320448339, 0.002084210515022278, 0.0012630462879315019, 0.04682617262005806, 0.00481709698215127, 0.3490988612174988, 0.0015740505186840892], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 16:11:00.884863", "n_pass": [309, 53, 34], "n_token": 32, "loss": [0.7136307954788208, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def export(", "self", ",", "args", ":", "parser", "self", "parser", "parser", "#NEWLINE#", "parser", "args", "parser", "*", "args", "current_path", "=", "(", "args", "keep_source", "=", "args", ".", "keep_source", "#NEWLINE#", "self", "args", ".", "current_path", ",", "keep_source"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [6, 8, 9, 11, 13, 2, 7, 26, 4, 12, 15, 19, 22, 27, 16, 29, 20, 24, 31]}}
{"prediction": {"error_location": 0.4898623824119568, "repair_targets": [], "repair_candidates": [0.24924732744693756, 0.028097005560994148, 0.013930697925388813, 0.09875615686178207, 0.006899063475430012, 0.006596957333385944, 0.029975812882184982, 0.03720527142286301, 0.03740603104233742, 0.017340417951345444, 0.10270421206951141, 0.0052857836708426476, 0.0008664561901241541, 0.00029785995138809085, 0.001262465724721551, 0.11906368285417557, 0.003703382797539234, 0.23993049561977386, 0.0014310175320133567], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 16:11:01.066241", "n_pass": [314, 56, 35], "n_token": 31, "loss": [0.8005083799362183, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def export(", "self", ",", "args", ":", "parser", "self", "parser", "parser", "#NEWLINE#", "parser", "args", "parser", "*", "args", "current_path", "=", "args", "keep_source", "=", "args", ".", "keep_source", "#NEWLINE#", "self", "args", ".", "current_path", ",", "keep_source"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [6, 8, 9, 11, 13, 2, 7, 25, 4, 12, 15, 18, 21, 26, 16, 28, 19, 23, 30]}}
{"prediction": {"error_location": 0.4491005837917328, "repair_targets": [], "repair_candidates": [0.2827516198158264, 0.031110333278775215, 0.016792265698313713, 0.08948041498661041, 0.008403154090046883, 0.006775439251214266, 0.03861680254340172, 0.044238775968551636, 0.0642995536327362, 0.016144022345542908, 0.10730037838220596, 0.004412600304931402, 0.0011518356623128057, 0.00024884927552193403, 0.0013549735303968191, 0.11088555306196213, 0.003012928180396557, 0.17217952013015747, 0.0008409892907366157], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 16:11:01.127073", "n_pass": [317, 57, 36], "n_token": 30, "loss": [0.44095414876937866, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def export(", "self", ",", "args", ":", "parser", "self", "parser", "parser", "#NEWLINE#", "parser", "args", "parser", "*", "args", "current_path", "=", "args", "keep_source", "args", ".", "keep_source", "#NEWLINE#", "self", "args", ".", "current_path", ",", "keep_source"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [6, 8, 9, 11, 13, 2, 7, 24, 4, 12, 15, 18, 20, 25, 16, 27, 19, 22, 29]}}
{"prediction": {"error_location": 0.6434221267700195, "repair_targets": [], "repair_candidates": [0.08129288256168365, 0.05957415699958801, 0.0417281799018383, 0.05594619736075401, 0.024449730291962624, 0.01818653754889965, 0.0874488353729248, 0.09863980114459991, 0.2030515819787979, 0.021430939435958862, 0.09891440719366074, 0.014712713658809662, 0.002243899740278721, 0.003004814963787794, 0.0018701473018154502, 0.02512647770345211, 0.013383247889578342, 0.1468409150838852, 0.0021546222269535065], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 16:11:01.185034", "n_pass": [319, 58, 37], "n_token": 29, "loss": [0.853399395942688, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def export(", "self", ",", "args", ":", "parser", "self", "parser", "parser", "#NEWLINE#", "parser", "args", "parser", "*", "args", "current_path", "=", "args", "keep_source", "args", "keep_source", "#NEWLINE#", "self", "args", ".", "current_path", ",", "keep_source"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [6, 8, 9, 11, 13, 2, 7, 23, 4, 12, 15, 18, 20, 24, 16, 26, 19, 21, 28]}}
{"prediction": {"error_location": 0.42596444487571716, "repair_targets": [], "repair_candidates": [0.010518885217607021, 0.01216479204595089, 0.027516715228557587, 0.04471630975604057, 0.014311653561890125, 0.009373270906507969, 0.07116211950778961, 0.05006936192512512, 0.15223123133182526, 0.030002320185303688, 0.40326225757598877, 0.10882259160280228, 0.0008207690552808344, 0.0004777378053404391, 0.0006612932193093002, 0.006224194075912237, 0.0003809597110375762, 0.0571117028594017, 0.0001718366693239659], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 16:11:01.242429", "n_pass": [321, 59, 38], "n_token": 28, "loss": [0.8240452408790588, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def export(", "self", ",", "args", ":", "parser", "self", "parser", "parser", "#NEWLINE#", "parser", "args", "parser", "*", "args", "current_path", "=", "args", "keep_source", "args", "keep_source", "self", "args", ".", "current_path", ",", "keep_source"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [6, 8, 9, 11, 13, 2, 7, 22, 4, 12, 15, 18, 20, 23, 16, 25, 19, 21, 27]}}
{"prediction": {"error_location": 0.4386536180973053, "repair_targets": [], "repair_candidates": [0.1469898223876953, 0.02676498144865036, 0.03371330723166466, 0.09392888098955154, 0.018783217296004295, 0.016252364963293076, 0.056645333766937256, 0.008572002872824669, 0.06818842142820358, 0.022093046456575394, 0.35920438170433044, 0.024444175884127617, 0.0070778969675302505, 0.0006699393852613866, 0.009089061990380287, 0.06270143389701843, 0.0029430773574858904, 0.04083654284477234, 0.001102019683457911], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 16:11:01.300056", "n_pass": [324, 60, 39], "n_token": 27, "loss": [0.5915517210960388, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def export(", "self", ",", "args", ":", "parser", "self", "parser", "parser", "#NEWLINE#", "parser", "args", "parser", "*", "args", "current_path", "=", "args", "keep_source", "args", "keep_source", "self", "args", "current_path", ",", "keep_source"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [6, 8, 9, 11, 13, 2, 7, 22, 4, 12, 15, 18, 20, 23, 16, 24, 19, 21, 26]}}
{"prediction": {"error_location": 0.553467869758606, "repair_targets": [], "repair_candidates": [0.45117634534835815, 0.04244258254766464, 0.06879254430532455, 0.07936912775039673, 0.05060207098722458, 0.03316351771354675, 0.060973767191171646, 0.004853059537708759, 0.06798748672008514, 0.005609250161796808, 0.0013559629442170262, 0.08597483485937119, 0.013670166954398155, 0.0003339096438139677, 0.006589863914996386, 0.020988132804632187, 0.00042336643673479557, 0.002100379904732108, 0.0035935696214437485], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 16:11:01.532676", "n_pass": [333, 64, 40], "n_token": 26, "loss": [0.5877243876457214, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def export(", "self", ",", "args", "parser", "self", "parser", "parser", "#NEWLINE#", "parser", "args", "parser", "*", "args", "current_path", "=", "args", "keep_source", "args", "keep_source", "self", "args", "current_path", ",", "keep_source"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [5, 7, 8, 10, 12, 2, 6, 21, 4, 11, 14, 17, 19, 22, 15, 23, 18, 20, 25]}}
{"prediction": {"error_location": 0.5555902123451233, "repair_targets": [], "repair_candidates": [0.13297994434833527, 0.023569118231534958, 0.03428244590759277, 0.041805729269981384, 0.04354291409254074, 0.0353442057967186, 0.12600405514240265, 0.02936284802854061, 0.16958922147750854, 0.016377970576286316, 0.001136316917836666, 0.2083200365304947, 0.011853442527353764, 0.10148346424102783, 0.00035995207144878805, 0.021732181310653687, 0.0004243214207235724, 0.0006745508289895952, 0.00115732301492244], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 16:11:01.591159", "n_pass": [338, 65, 41], "n_token": 25, "loss": [1.0019466876983643, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def export(", "self", ",", "args", "parser", "self", "parser", "parser", "parser", "args", "parser", "*", "args", "current_path", "=", "args", "keep_source", "args", "keep_source", "self", "args", "current_path", ",", "keep_source"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [5, 7, 8, 9, 11, 2, 6, 20, 4, 10, 13, 16, 18, 21, 14, 22, 17, 19, 24]}}
{"prediction": {"error_location": 0.3671639561653137, "repair_targets": [], "repair_candidates": [0.20732440054416656, 0.007407203316688538, 0.026325436308979988, 0.20094522833824158, 0.19176353514194489, 0.11907833814620972, 0.10273967683315277, 0.004242493771016598, 0.0279045719653368, 0.003655030159279704, 0.0001899423514259979, 0.09877651184797287, 0.004583779256790876, 0.00014653278049081564, 0.00021685633691959083, 0.004493508022278547, 2.3339023755397648e-05, 5.49686374142766e-05, 0.0001287127088289708], "target_probs": 0.0}}




Minimal simplified tokens:

['#NEWLINE#', 'def export(', 'self', ',', 'args', 'parser', 'self', 'parser', 'parser', 'parser', 'args', 'parser', '*', 'args', 'current_path', '=', 'args', 'keep_source', 'args', 'keep_source', 'self', 'args', 'current_path', ',', 'keep_source']
