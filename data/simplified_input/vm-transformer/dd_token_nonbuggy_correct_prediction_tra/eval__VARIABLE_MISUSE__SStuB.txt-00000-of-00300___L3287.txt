
Original sample:

{"has_bug": false, "bug_kind": 0, "bug_kind_name": "NONE", "source_tokens": ["#NEWLINE#", "def translate(", "self", ")", ":", "#NEWLINE#", "#INDENT#", "output", "=", "''", "#NEWLINE#", "for", "node", "in", "self", ".", "node_list", ":", "#NEWLINE#", "#INDENT#", "if", "isinstance", "(", "node", ",", "TextNode", ")", ":", "#NEWLINE#", "#INDENT#", "output", "+=", "node", ".", "token", ".", "replace", "(", "'.'", ",", "'\\\\.'", ")", "#NEWLINE#", "#UNINDENT#", "else", ":", "#NEWLINE#", "#INDENT#", "if", "isinstance", "(", "node", ",", "WildcardNode", ")", ":", "#NEWLINE#", "#INDENT#", "output", "+=", "'.*'", "#NEWLINE#", "#UNINDENT#", "else", ":", "#NEWLINE#", "#INDENT#", "if", "isinstance", "(", "node", ",", "OptionalNode", ")", ":", "#NEWLINE#", "#INDENT#", "output", "+=", "(", "(", "'('", "+", "RegexScribe", "(", "node", ".", "node_list", ")", ".", "translate", "(", ")", ")", "+", "')?'", ")", "#NEWLINE#", "#UNINDENT#", "else", ":", "#NEWLINE#", "#INDENT#", "if", "isinstance", "(", "node", ",", "TagNode", ")", ":", "#NEWLINE#", "#INDENT#", "if", "isinstance", "(", "node", ",", "MacroTagNode", ")", ":", "#NEWLINE#", "#INDENT#", "regex", "=", "self", ".", "macro_registry", ".", "get", "(", "node", ".", "macro", ")", "#NEWLINE#", "#UNINDENT#", "else", ":", "#NEWLINE#", "#INDENT#", "if", "isinstance", "(", "node", ",", "RegexTagNode", ")", ":", "#NEWLINE#", "#INDENT#", "regex", "=", "node", ".", "regex", "#NEWLINE#", "#UNINDENT#", "else", ":", "#NEWLINE#", "#INDENT#", "regex", "=", "'.+'", "#NEWLINE#", "#UNINDENT#", "#UNINDENT#", "if", "node", ".", "name", ":", "#NEWLINE#", "#INDENT#", "output", "+=", "(", "'(?P<%s>%s)'", "%", "(", "node", ".", "name", ",", "regex", ")", ")", "#NEWLINE#", "#UNINDENT#", "else", ":", "#NEWLINE#", "#INDENT#", "output", "+=", "regex", "#NEWLINE#", "#UNINDENT#", "#UNINDENT#", "#UNINDENT#", "#UNINDENT#", "#UNINDENT#", "#UNINDENT#", "return", "output"], "error_location": [0], "repair_targets": [], "repair_candidates": [2, 14, 125, 123, 151, 155, 162, 185, 196, 7, 30, 58, 77, 175, 194, 205, 12, 23, 32, 51, 70, 85, 106, 116, 131, 144, 153, 169, 181], "provenances": [{"datasetProvenance": {"datasetName": "ETHPy150Open", "filepath": "codysoyland/surlex/src/surlex/grammar.py", "license": "bsd-3-clause", "note": "license: bigquery_api"}}], "txt_file": "eval__VARIABLE_MISUSE__SStuB.txt-00000-of-00300", "js_count": 3287, "results": {"model": "transformer", "prob": {"loc": [[0.9598075747489929, 4.665090727939969e-06, 6.584795755770756e-06, 1.2277106442581953e-08, 3.6496611954817126e-08, 4.496281391652701e-08, 3.1587234161634115e-08, 1.281680965803389e-06, 3.8284468928395654e-08, 7.038664762148983e-08, 4.208738602073936e-08, 9.992231753130909e-08, 2.6327228397349245e-07, 1.2457249454200792e-08, 4.926409383188002e-05, 1.8960331260586827e-07, 4.564605404766553e-08, 2.357460715529669e-07, 6.508645356007037e-08, 1.7637605154163793e-08, 1.7965625431770604e-08, 8.508045823418797e-09, 3.573306983639668e-08, 6.165503873489797e-05, 1.4095814293568765e-08, 1.0202792282143491e-06, 1.188162190857156e-08, 3.537292059263564e-08, 5.5670120957529434e-08, 3.079261290395152e-08, 6.272859423006594e-07, 1.094749091379299e-08, 7.008997727098176e-06, 1.3473538729158463e-07, 4.733729497274908e-07, 1.7127631224411743e-07, 3.608490573014933e-08, 4.3455054310470587e-07, 2.1371099592215614e-06, 6.433982946418837e-08, 5.318935905052058e-07, 1.2607127075625613e-07, 1.9980470256086846e-07, 1.2793428538770968e-07, 3.880060361893811e-08, 4.370673067910502e-08, 2.142381703151841e-07, 6.536325258821307e-08, 4.2487279472425143e-08, 1.7348433800634666e-08, 1.380853262844539e-07, 9.337953815702349e-05, 9.376579868103363e-08, 2.6732861897471594e-06, 3.303143003563491e-08, 1.1540937094878245e-07, 1.0679629980359095e-07, 6.178832734349271e-08, 2.4311036668223096e-06, 7.932052881187701e-08, 1.8721743799687829e-06, 1.1518462628146153e-07, 9.834089809146462e-08, 2.5747777243623204e-08, 7.336328167184547e-08, 1.1375933439694563e-07, 6.474199665262859e-08, 4.57277060661454e-08, 4.721491109194176e-08, 9.022203073527635e-08, 7.239874685183167e-05, 6.667035989949e-08, 4.977140974915528e-07, 2.094896878190866e-08, 1.3478035043590353e-07, 1.5493844784941757e-07, 9.60589829901437e-08, 2.2210899714991683e-06, 2.4811415144654347e-08, 5.1718625826424613e-08, 3.023121735168388e-07, 6.025742322890437e-07, 1.5027779909360106e-07, 1.63190759394638e-06, 1.501220253885549e-06, 2.2364971300703473e-05, 1.194310584651248e-06, 2.0818173140924046e-07, 7.855916805965535e-07, 4.0687919522497396e-07, 2.746917893148293e-08, 5.756321570515865e-07, 3.440115960984258e-07, 2.8447782796092724e-08, 7.265268209266651e-08, 6.041097094566794e-06, 5.275682042338303e-07, 3.304738811493735e-07, 2.943840229363559e-07, 1.8827427084033843e-07, 2.83883878182678e-07, 3.518835569593648e-07, 2.229820239563196e-07, 1.3466600989886501e-07, 3.429815009781123e-08, 2.429952701277216e-07, 8.833243191475049e-05, 2.3706857632532774e-07, 1.1981973102592747e-06, 1.752404017452136e-07, 3.471709533187095e-07, 3.762694404940703e-07, 1.6295864213589084e-07, 1.6427151194875478e-07, 1.38230774382464e-07, 8.830202773424389e-07, 4.917429760098457e-05, 2.8282028097237344e-07, 1.686991708993446e-06, 3.8148036196616886e-07, 9.27289590890723e-07, 4.864229481427174e-07, 2.812849118072336e-07, 2.851321369234938e-06, 8.511003812827767e-08, 0.0008267365046776831, 6.640856895501202e-07, 1.1272926059291422e-07, 9.258050681637542e-07, 9.964178815380365e-08, 4.4776609797736455e-07, 5.346541729522869e-05, 2.2791632545704488e-06, 4.654272345305799e-07, 6.036013928678585e-07, 3.1890539275991614e-07, 2.6566883093437355e-07, 3.203441281129926e-07, 1.3311893098943983e-07, 2.860711276753136e-07, 9.806125689237888e-08, 1.57348949869629e-07, 1.6093973442821152e-07, 5.798702886750107e-07, 0.00026193633675575256, 2.0143825452123565e-07, 0.00017607188783586025, 2.4482127969349676e-07, 7.604883194289869e-07, 3.821248526492127e-07, 1.7967279575259454e-07, 5.349808361643227e-06, 4.688967081278861e-08, 0.0004805078206118196, 9.082135647986433e-07, 1.6127629578477354e-06, 6.606304623346659e-07, 3.299763022823754e-07, 2.1637443126110156e-07, 2.4174249801944825e-07, 5.150503170625598e-07, 3.3782467312448716e-07, 1.0125059816346038e-05, 1.601750483359865e-07, 3.817023753072135e-05, 1.3830890566168819e-06, 1.3227794397607795e-06, 7.153043952712324e-07, 1.450625717325238e-07, 0.0023649525828659534, 7.1304862103716e-07, 1.5407029252401117e-07, 6.440591846512689e-07, 6.944680421838711e-07, 2.369266383084323e-07, 1.377894022880355e-06, 3.552532490402882e-08, 5.781805612059543e-07, 1.6748822417866904e-06, 1.371414555251249e-07, 6.395559466909617e-06, 0.00022102650837041438, 1.6364396060453146e-06, 1.506905391579494e-07, 8.510001521244703e-07, 0.016581067815423012, 2.3943032374518225e-06, 1.6757257981225848e-06, 5.806704734823143e-07, 6.338176490316982e-07, 2.143019202094365e-07, 5.504581963577948e-07, 6.314477900559723e-07, 2.6767847316477855e-07, 2.5852177714114077e-06, 8.840165719448123e-06, 0.01836266927421093, 7.798915362400294e-07, 6.762014095329505e-07, 5.962484692645376e-07, 7.088597726578882e-07, 6.753339789611346e-07, 5.620103138426202e-07, 4.807210984836274e-07, 3.9195199974528805e-08, 0.000250940938713029]], "pointer": [[0.0, 0.0, 0.04806588590145111, 0.0, 0.0, 0.0, 0.0, 0.008296323008835316, 0.0, 0.0, 0.0, 0.0, 0.1882234662771225, 0.0, 0.0062746573239564896, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0040701464749872684, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.009438060224056244, 0.0, 0.0017069947207346559, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.007717010099440813, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.010397635400295258, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.015567312948405743, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.009777992963790894, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.005032225511968136, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.04583286494016647, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.04272284731268883, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1835799217224121, 0.0, 0.012937926687300205, 0.0, 0.0, 0.0, 0.0, 0.0, 0.011631730943918228, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.10429622232913971, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.10885300487279892, 0.0, 0.026620956137776375, 0.0, 0.007708690594881773, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.020873259752988815, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.06302247941493988, 0.0, 0.0, 0.0, 0.0, 0.0, 0.016166023910045624, 0.0, 0.0, 0.0, 0.0, 0.0, 0.03447370603680611, 0.0, 0.0, 0.0, 0.0004702000005636364, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.005257923621684313, 0.0, 7.615677895955741e-05, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0009083836921490729]], "target": [0.0]}, "loss": [0.04102209210395813, 0.0], "acc": [1.0, 0.0, 0.0, 0.0]}}


Trace of simplified code(s):

{"result": {"time": "2021-02-11 16:16:36.717804", "n_pass": [1, 1, 1], "n_token": 206, "loss": [0.04102209210395813, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def translate(", "self", ")", ":", "#NEWLINE#", "#INDENT#", "output", "=", "''", "#NEWLINE#", "for", "node", "in", "self", ".", "node_list", ":", "#NEWLINE#", "#INDENT#", "if", "isinstance", "(", "node", ",", "TextNode", ")", ":", "#NEWLINE#", "#INDENT#", "output", "+=", "node", ".", "token", ".", "replace", "(", "'.'", ",", "'\\\\.'", ")", "#NEWLINE#", "#UNINDENT#", "else", ":", "#NEWLINE#", "#INDENT#", "if", "isinstance", "(", "node", ",", "WildcardNode", ")", ":", "#NEWLINE#", "#INDENT#", "output", "+=", "'.*'", "#NEWLINE#", "#UNINDENT#", "else", ":", "#NEWLINE#", "#INDENT#", "if", "isinstance", "(", "node", ",", "OptionalNode", ")", ":", "#NEWLINE#", "#INDENT#", "output", "+=", "(", "(", "'('", "+", "RegexScribe", "(", "node", ".", "node_list", ")", ".", "translate", "(", ")", ")", "+", "')?'", ")", "#NEWLINE#", "#UNINDENT#", "else", ":", "#NEWLINE#", "#INDENT#", "if", "isinstance", "(", "node", ",", "TagNode", ")", ":", "#NEWLINE#", "#INDENT#", "if", "isinstance", "(", "node", ",", "MacroTagNode", ")", ":", "#NEWLINE#", "#INDENT#", "regex", "=", "self", ".", "macro_registry", ".", "get", "(", "node", ".", "macro", ")", "#NEWLINE#", "#UNINDENT#", "else", ":", "#NEWLINE#", "#INDENT#", "if", "isinstance", "(", "node", ",", "RegexTagNode", ")", ":", "#NEWLINE#", "#INDENT#", "regex", "=", "node", ".", "regex", "#NEWLINE#", "#UNINDENT#", "else", ":", "#NEWLINE#", "#INDENT#", "regex", "=", "'.+'", "#NEWLINE#", "#UNINDENT#", "#UNINDENT#", "if", "node", ".", "name", ":", "#NEWLINE#", "#INDENT#", "output", "+=", "(", "'(?P<%s>%s)'", "%", "(", "node", ".", "name", ",", "regex", ")", ")", "#NEWLINE#", "#UNINDENT#", "else", ":", "#NEWLINE#", "#INDENT#", "output", "+=", "regex", "#NEWLINE#", "#UNINDENT#", "#UNINDENT#", "#UNINDENT#", "#UNINDENT#", "#UNINDENT#", "#UNINDENT#", "return", "output"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [2, 14, 125, 123, 151, 155, 162, 185, 196, 7, 30, 58, 77, 175, 194, 205, 12, 23, 32, 51, 70, 85, 106, 116, 131, 144, 153, 169, 181]}}
{"prediction": {"error_location": 0.9598075747489929, "repair_targets": [], "repair_candidates": [0.04806588590145111, 0.008296323008835316, 0.1882234662771225, 0.0062746573239564896, 0.0040701464749872684, 0.009438060224056244, 0.0017069947207346559, 0.007717010099440813, 0.010397635400295258, 0.015567312948405743, 0.009777992963790894, 0.005032225511968136, 0.04583286494016647, 0.04272284731268883, 0.1835799217224121, 0.012937926687300205, 0.011631730943918228, 0.10429622232913971, 0.10885300487279892, 0.026620956137776375, 0.007708690594881773, 0.020873259752988815, 0.06302247941493988, 0.016166023910045624, 0.03447370603680611, 0.0004702000005636364, 0.005257923621684313, 7.615677895955741e-05, 0.0009083836921490729], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 16:16:36.802125", "n_pass": [47, 2, 2], "n_token": 193, "loss": [0.07845030725002289, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def translate(", "self", ")", ":", "#NEWLINE#", "#INDENT#", "output", "=", "''", "#NEWLINE#", "for", "node", "in", "self", ".", "node_list", ":", "#NEWLINE#", "#INDENT#", "if", "isinstance", "(", "node", ",", "TextNode", ")", ":", "#NEWLINE#", "#INDENT#", "output", "+=", "node", ".", "token", ".", "replace", "(", "node", ",", "WildcardNode", ")", ":", "#NEWLINE#", "#INDENT#", "output", "+=", "'.*'", "#NEWLINE#", "#UNINDENT#", "else", ":", "#NEWLINE#", "#INDENT#", "if", "isinstance", "(", "node", ",", "OptionalNode", ")", ":", "#NEWLINE#", "#INDENT#", "output", "+=", "(", "(", "'('", "+", "RegexScribe", "(", "node", ".", "node_list", ")", ".", "translate", "(", ")", ")", "+", "')?'", ")", "#NEWLINE#", "#UNINDENT#", "else", ":", "#NEWLINE#", "#INDENT#", "if", "isinstance", "(", "node", ",", "TagNode", ")", ":", "#NEWLINE#", "#INDENT#", "if", "isinstance", "(", "node", ",", "MacroTagNode", ")", ":", "#NEWLINE#", "#INDENT#", "regex", "=", "self", ".", "macro_registry", ".", "get", "(", "node", ".", "macro", ")", "#NEWLINE#", "#UNINDENT#", "else", ":", "#NEWLINE#", "#INDENT#", "if", "isinstance", "(", "node", ",", "RegexTagNode", ")", ":", "#NEWLINE#", "#INDENT#", "regex", "=", "node", ".", "regex", "#NEWLINE#", "#UNINDENT#", "else", ":", "#NEWLINE#", "#INDENT#", "regex", "=", "'.+'", "#NEWLINE#", "#UNINDENT#", "#UNINDENT#", "if", "node", ".", "name", ":", "#NEWLINE#", "#INDENT#", "output", "+=", "(", "'(?P<%s>%s)'", "%", "(", "node", ".", "name", ",", "regex", ")", ")", "#NEWLINE#", "#UNINDENT#", "else", ":", "#NEWLINE#", "#INDENT#", "output", "+=", "regex", "#NEWLINE#", "#UNINDENT#", "#UNINDENT#", "#UNINDENT#", "#UNINDENT#", "#UNINDENT#", "#UNINDENT#", "return", "output"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [2, 14, 112, 110, 138, 142, 149, 172, 183, 7, 30, 45, 64, 162, 181, 192, 12, 23, 32, 38, 57, 72, 93, 103, 118, 131, 140, 156, 168]}}
{"prediction": {"error_location": 0.9245480298995972, "repair_targets": [], "repair_candidates": [0.1448797583580017, 0.019000623375177383, 0.25800129771232605, 0.012349758297204971, 0.01802891492843628, 0.04095982015132904, 0.00048585981130599976, 0.002525871619582176, 0.011929444037377834, 0.022799018770456314, 0.0086589390411973, 0.00983455777168274, 0.08183982223272324, 0.04763542860746384, 0.07863347977399826, 0.023832028731703758, 0.03614024445414543, 0.053157027810811996, 0.01702095754444599, 0.01820606365799904, 0.003133544232696295, 0.016788488253951073, 0.04583217576146126, 0.008104613050818443, 0.013811006210744381, 0.00025360731524415314, 0.004292712081223726, 0.00010231047053821385, 0.0017626254120841622], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 16:16:36.880968", "n_pass": [51, 3, 3], "n_token": 180, "loss": [0.10372758656740189, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def translate(", "self", ")", ":", "#NEWLINE#", "#INDENT#", "output", "=", "''", "#NEWLINE#", "for", "node", "in", "self", ".", "node_list", ":", "#NEWLINE#", "#INDENT#", "if", "isinstance", "(", "node", ",", "TextNode", ")", ":", "#NEWLINE#", "#INDENT#", "output", "+=", "node", ".", "token", ".", "replace", "(", "node", ",", "WildcardNode", ")", ":", "#NEWLINE#", "#INDENT#", "output", "+=", "'.*'", "#NEWLINE#", "#UNINDENT#", "else", ":", "#NEWLINE#", "#INDENT#", "if", "isinstance", "(", "node", ",", "OptionalNode", ")", ":", "#NEWLINE#", "#INDENT#", "output", "+=", "(", "(", "'('", "+", "RegexScribe", "(", "node", ".", "node_list", ")", "#INDENT#", "if", "isinstance", "(", "node", ",", "TagNode", ")", ":", "#NEWLINE#", "#INDENT#", "if", "isinstance", "(", "node", ",", "MacroTagNode", ")", ":", "#NEWLINE#", "#INDENT#", "regex", "=", "self", ".", "macro_registry", ".", "get", "(", "node", ".", "macro", ")", "#NEWLINE#", "#UNINDENT#", "else", ":", "#NEWLINE#", "#INDENT#", "if", "isinstance", "(", "node", ",", "RegexTagNode", ")", ":", "#NEWLINE#", "#INDENT#", "regex", "=", "node", ".", "regex", "#NEWLINE#", "#UNINDENT#", "else", ":", "#NEWLINE#", "#INDENT#", "regex", "=", "'.+'", "#NEWLINE#", "#UNINDENT#", "#UNINDENT#", "if", "node", ".", "name", ":", "#NEWLINE#", "#INDENT#", "output", "+=", "(", "'(?P<%s>%s)'", "%", "(", "node", ".", "name", ",", "regex", ")", ")", "#NEWLINE#", "#UNINDENT#", "else", ":", "#NEWLINE#", "#INDENT#", "output", "+=", "regex", "#NEWLINE#", "#UNINDENT#", "#UNINDENT#", "#UNINDENT#", "#UNINDENT#", "#UNINDENT#", "#UNINDENT#", "return", "output"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [2, 14, 99, 97, 125, 129, 136, 159, 170, 7, 30, 45, 64, 149, 168, 179, 12, 23, 32, 38, 57, 72, 80, 90, 105, 118, 127, 143, 155]}}
{"prediction": {"error_location": 0.9014705419540405, "repair_targets": [], "repair_candidates": [0.10558653622865677, 0.009744804352521896, 0.2375069558620453, 0.008175648748874664, 0.019115280359983444, 0.031320445239543915, 0.0006008438067510724, 0.009668094106018543, 0.007749784737825394, 0.01534379180520773, 0.007348557002842426, 0.009914400056004524, 0.0632900521159172, 0.032055605202913284, 0.10121806710958481, 0.014168785884976387, 0.018446268513798714, 0.08297532796859741, 0.04550301656126976, 0.035096198320388794, 0.005567151587456465, 0.011600163765251637, 0.07163272053003311, 0.005686062388122082, 0.043022315949201584, 0.0006335345096886158, 0.0033520241267979145, 7.151365571189672e-05, 0.0036060535348951817], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 16:16:36.963898", "n_pass": [96, 4, 4], "n_token": 174, "loss": [0.10351994633674622, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def translate(", "self", ")", ":", "#NEWLINE#", "#INDENT#", "output", "=", "''", "#NEWLINE#", "for", "node", "in", "self", ".", "node_list", ":", "#NEWLINE#", "#INDENT#", "if", "isinstance", "(", "node", ",", "TextNode", ")", ":", "#NEWLINE#", "#INDENT#", "output", "+=", "node", ".", "token", ".", "replace", "(", "node", ",", "WildcardNode", ")", ":", "#NEWLINE#", "#INDENT#", "output", "+=", "'.*'", "#NEWLINE#", "#UNINDENT#", "else", ":", "#NEWLINE#", "#INDENT#", "if", "isinstance", "(", "node", ",", "OptionalNode", ")", ":", "#NEWLINE#", "#INDENT#", "output", "+=", "(", "(", "'('", "+", "RegexScribe", "(", "node", ".", "node_list", ")", "#INDENT#", "if", "isinstance", "(", "node", ",", "TagNode", ")", "node", ",", "MacroTagNode", ")", ":", "#NEWLINE#", "#INDENT#", "regex", "=", "self", ".", "macro_registry", ".", "get", "(", "node", ".", "macro", ")", "#NEWLINE#", "#UNINDENT#", "else", ":", "#NEWLINE#", "#INDENT#", "if", "isinstance", "(", "node", ",", "RegexTagNode", ")", ":", "#NEWLINE#", "#INDENT#", "regex", "=", "node", ".", "regex", "#NEWLINE#", "#UNINDENT#", "else", ":", "#NEWLINE#", "#INDENT#", "regex", "=", "'.+'", "#NEWLINE#", "#UNINDENT#", "#UNINDENT#", "if", "node", ".", "name", ":", "#NEWLINE#", "#INDENT#", "output", "+=", "(", "'(?P<%s>%s)'", "%", "(", "node", ".", "name", ",", "regex", ")", ")", "#NEWLINE#", "#UNINDENT#", "else", ":", "#NEWLINE#", "#INDENT#", "output", "+=", "regex", "#NEWLINE#", "#UNINDENT#", "#UNINDENT#", "#UNINDENT#", "#UNINDENT#", "#UNINDENT#", "#UNINDENT#", "return", "output"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [2, 14, 93, 91, 119, 123, 130, 153, 164, 7, 30, 45, 64, 143, 162, 173, 12, 23, 32, 38, 57, 72, 80, 84, 99, 112, 121, 137, 149]}}
{"prediction": {"error_location": 0.9016581177711487, "repair_targets": [], "repair_candidates": [0.10976734012365341, 0.014659249223768711, 0.22005829215049744, 0.010178188793361187, 0.01881694234907627, 0.04490824416279793, 0.0003523790801409632, 0.0064850011840462685, 0.012651273049414158, 0.021276552230119705, 0.010733196511864662, 0.0063925026915967464, 0.034260012209415436, 0.0679173395037651, 0.08609841018915176, 0.014696462079882622, 0.021208737045526505, 0.06662347167730331, 0.06379593908786774, 0.04001925140619278, 0.01069081760942936, 0.019949546083807945, 0.044624630361795425, 0.02011050097644329, 0.025591576471924782, 0.00191324925981462, 0.0026353884022682905, 0.0003982907219324261, 0.0031871600076556206], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 16:16:37.042591", "n_pass": [100, 5, 5], "n_token": 167, "loss": [0.08232191950082779, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def translate(", "self", ")", ":", "#NEWLINE#", "#INDENT#", "output", "=", "''", "#NEWLINE#", "for", "node", "in", "self", ".", "node_list", ":", "#NEWLINE#", "#INDENT#", "if", "isinstance", "(", "node", ",", "TextNode", ")", ":", "#NEWLINE#", "#INDENT#", "output", "+=", "node", ".", "token", ".", "replace", "(", "node", ",", "WildcardNode", ")", ":", "#NEWLINE#", "#INDENT#", "output", "+=", "'.*'", "#NEWLINE#", "#UNINDENT#", "else", ":", "#NEWLINE#", "#INDENT#", "if", "isinstance", "(", "node", ",", "OptionalNode", ")", ":", "#NEWLINE#", "#INDENT#", "output", "+=", "(", "(", "'('", "+", "RegexScribe", "(", "node", ".", "node_list", ")", "#INDENT#", "if", "isinstance", "(", "node", ",", "TagNode", ")", "node", ",", "MacroTagNode", ")", ":", "#NEWLINE#", "#INDENT#", "regex", "=", "self", ".", "macro_registry", ".", "get", "(", "node", ".", "macro", ")", "#NEWLINE#", "(", "node", ",", "RegexTagNode", ")", ":", "#NEWLINE#", "#INDENT#", "regex", "=", "node", ".", "regex", "#NEWLINE#", "#UNINDENT#", "else", ":", "#NEWLINE#", "#INDENT#", "regex", "=", "'.+'", "#NEWLINE#", "#UNINDENT#", "#UNINDENT#", "if", "node", ".", "name", ":", "#NEWLINE#", "#INDENT#", "output", "+=", "(", "'(?P<%s>%s)'", "%", "(", "node", ".", "name", ",", "regex", ")", ")", "#NEWLINE#", "#UNINDENT#", "else", ":", "#NEWLINE#", "#INDENT#", "output", "+=", "regex", "#NEWLINE#", "#UNINDENT#", "#UNINDENT#", "#UNINDENT#", "#UNINDENT#", "#UNINDENT#", "#UNINDENT#", "return", "output"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [2, 14, 93, 91, 112, 116, 123, 146, 157, 7, 30, 45, 64, 136, 155, 166, 12, 23, 32, 38, 57, 72, 80, 84, 99, 105, 114, 130, 142]}}
{"prediction": {"error_location": 0.9209756255149841, "repair_targets": [], "repair_candidates": [0.07647411525249481, 0.013033775612711906, 0.2013188749551773, 0.007078070193529129, 0.019650191068649292, 0.06283416599035263, 0.0007622052798978984, 0.005912308115512133, 0.012691916897892952, 0.02334783412516117, 0.016061093658208847, 0.01346401497721672, 0.060084372758865356, 0.05989346653223038, 0.09976942837238312, 0.012719432823359966, 0.02933601103723049, 0.16667215526103973, 0.02046150527894497, 0.01266033947467804, 0.006690619513392448, 0.013404931873083115, 0.033640630543231964, 0.018064303323626518, 0.007157111540436745, 0.0008549093618057668, 0.004667289555072784, 0.000174961649463512, 0.001119942986406386], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 16:16:37.122088", "n_pass": [114, 6, 6], "n_token": 161, "loss": [0.48322930932044983, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def translate(", "self", ")", ":", "#NEWLINE#", "#INDENT#", "output", "=", "''", "#NEWLINE#", "for", "node", "in", "self", ".", "node_list", ":", "#NEWLINE#", "#INDENT#", "if", "isinstance", "(", "node", "output", "+=", "node", ".", "token", ".", "replace", "(", "node", ",", "WildcardNode", ")", ":", "#NEWLINE#", "#INDENT#", "output", "+=", "'.*'", "#NEWLINE#", "#UNINDENT#", "else", ":", "#NEWLINE#", "#INDENT#", "if", "isinstance", "(", "node", ",", "OptionalNode", ")", ":", "#NEWLINE#", "#INDENT#", "output", "+=", "(", "(", "'('", "+", "RegexScribe", "(", "node", ".", "node_list", ")", "#INDENT#", "if", "isinstance", "(", "node", ",", "TagNode", ")", "node", ",", "MacroTagNode", ")", ":", "#NEWLINE#", "#INDENT#", "regex", "=", "self", ".", "macro_registry", ".", "get", "(", "node", ".", "macro", ")", "#NEWLINE#", "(", "node", ",", "RegexTagNode", ")", ":", "#NEWLINE#", "#INDENT#", "regex", "=", "node", ".", "regex", "#NEWLINE#", "#UNINDENT#", "else", ":", "#NEWLINE#", "#INDENT#", "regex", "=", "'.+'", "#NEWLINE#", "#UNINDENT#", "#UNINDENT#", "if", "node", ".", "name", ":", "#NEWLINE#", "#INDENT#", "output", "+=", "(", "'(?P<%s>%s)'", "%", "(", "node", ".", "name", ",", "regex", ")", ")", "#NEWLINE#", "#UNINDENT#", "else", ":", "#NEWLINE#", "#INDENT#", "output", "+=", "regex", "#NEWLINE#", "#UNINDENT#", "#UNINDENT#", "#UNINDENT#", "#UNINDENT#", "#UNINDENT#", "#UNINDENT#", "return", "output"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [2, 14, 87, 85, 106, 110, 117, 140, 151, 7, 24, 39, 58, 130, 149, 160, 12, 23, 26, 32, 51, 66, 74, 78, 93, 99, 108, 124, 136]}}
{"prediction": {"error_location": 0.616788387298584, "repair_targets": [], "repair_candidates": [0.05062945932149887, 0.030389638617634773, 0.3665723502635956, 0.004692167975008488, 0.16330046951770782, 0.13429683446884155, 0.002203773008659482, 0.04169738292694092, 0.009696083143353462, 0.0056920722126960754, 0.0019345387117937207, 0.0036586213391274214, 0.019724560901522636, 0.09065338224172592, 0.02038150280714035, 0.004683367908000946, 0.009066068567335606, 0.02274247817695141, 0.0039310576394200325, 0.0018122873734682798, 0.0005994255770929158, 0.0019455573055893183, 0.006462473887950182, 0.0007637414964847267, 0.00101033179089427, 0.0001816030271584168, 0.0005966044845990837, 4.06785293307621e-05, 0.0006414310773834586], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 16:16:37.201199", "n_pass": [118, 7, 7], "n_token": 155, "loss": [0.4954211711883545, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def translate(", "self", ")", ":", "#NEWLINE#", "#INDENT#", "output", "=", "''", "#NEWLINE#", "for", "node", "in", "self", ".", "node_list", ":", "#NEWLINE#", "#INDENT#", "if", "isinstance", "(", "node", "output", "+=", "node", ".", "token", ".", "replace", "(", "node", ",", "WildcardNode", ")", ":", "#NEWLINE#", "#INDENT#", "output", "+=", "'.*'", "if", "isinstance", "(", "node", ",", "OptionalNode", ")", ":", "#NEWLINE#", "#INDENT#", "output", "+=", "(", "(", "'('", "+", "RegexScribe", "(", "node", ".", "node_list", ")", "#INDENT#", "if", "isinstance", "(", "node", ",", "TagNode", ")", "node", ",", "MacroTagNode", ")", ":", "#NEWLINE#", "#INDENT#", "regex", "=", "self", ".", "macro_registry", ".", "get", "(", "node", ".", "macro", ")", "#NEWLINE#", "(", "node", ",", "RegexTagNode", ")", ":", "#NEWLINE#", "#INDENT#", "regex", "=", "node", ".", "regex", "#NEWLINE#", "#UNINDENT#", "else", ":", "#NEWLINE#", "#INDENT#", "regex", "=", "'.+'", "#NEWLINE#", "#UNINDENT#", "#UNINDENT#", "if", "node", ".", "name", ":", "#NEWLINE#", "#INDENT#", "output", "+=", "(", "'(?P<%s>%s)'", "%", "(", "node", ".", "name", ",", "regex", ")", ")", "#NEWLINE#", "#UNINDENT#", "else", ":", "#NEWLINE#", "#INDENT#", "output", "+=", "regex", "#NEWLINE#", "#UNINDENT#", "#UNINDENT#", "#UNINDENT#", "#UNINDENT#", "#UNINDENT#", "#UNINDENT#", "return", "output"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [2, 14, 81, 79, 100, 104, 111, 134, 145, 7, 24, 39, 52, 124, 143, 154, 12, 23, 26, 32, 45, 60, 68, 72, 87, 93, 102, 118, 130]}}
{"prediction": {"error_location": 0.6093142032623291, "repair_targets": [], "repair_candidates": [0.03687971085309982, 0.028824981302022934, 0.303924024105072, 0.005048508755862713, 0.1573893278837204, 0.21387796103954315, 0.0024217695463448763, 0.027577903121709824, 0.011261769570410252, 0.01486192923039198, 0.002177420537918806, 0.005217597354203463, 0.023296445608139038, 0.07615212351083755, 0.01754503883421421, 0.005635142792016268, 0.01424579881131649, 0.031566619873046875, 0.003297777147963643, 0.0035287218634039164, 0.0007756013073958457, 0.0009158740285784006, 0.008829038590192795, 0.0008593680104240775, 0.0016412552213296294, 0.000269760494120419, 0.0006925819325260818, 2.7706737455446273e-05, 0.001258233329281211], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 16:16:37.278838", "n_pass": [121, 8, 8], "n_token": 149, "loss": [0.465894877910614, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def translate(", "self", ")", ":", "#NEWLINE#", "#INDENT#", "output", "=", "''", "#NEWLINE#", "for", "node", "in", "self", ".", "node_list", ":", "#NEWLINE#", "#INDENT#", "if", "isinstance", "(", "node", "output", "+=", "node", ".", "token", ".", "replace", "(", "node", ",", "WildcardNode", ")", ":", "#NEWLINE#", "#INDENT#", "output", "+=", "'.*'", "if", "isinstance", "(", "node", ",", "OptionalNode", ")", ":", "#NEWLINE#", "#INDENT#", "output", "+=", "node", ".", "node_list", ")", "#INDENT#", "if", "isinstance", "(", "node", ",", "TagNode", ")", "node", ",", "MacroTagNode", ")", ":", "#NEWLINE#", "#INDENT#", "regex", "=", "self", ".", "macro_registry", ".", "get", "(", "node", ".", "macro", ")", "#NEWLINE#", "(", "node", ",", "RegexTagNode", ")", ":", "#NEWLINE#", "#INDENT#", "regex", "=", "node", ".", "regex", "#NEWLINE#", "#UNINDENT#", "else", ":", "#NEWLINE#", "#INDENT#", "regex", "=", "'.+'", "#NEWLINE#", "#UNINDENT#", "#UNINDENT#", "if", "node", ".", "name", ":", "#NEWLINE#", "#INDENT#", "output", "+=", "(", "'(?P<%s>%s)'", "%", "(", "node", ".", "name", ",", "regex", ")", ")", "#NEWLINE#", "#UNINDENT#", "else", ":", "#NEWLINE#", "#INDENT#", "output", "+=", "regex", "#NEWLINE#", "#UNINDENT#", "#UNINDENT#", "#UNINDENT#", "#UNINDENT#", "#UNINDENT#", "#UNINDENT#", "return", "output"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [2, 14, 75, 73, 94, 98, 105, 128, 139, 7, 24, 39, 52, 118, 137, 148, 12, 23, 26, 32, 45, 54, 62, 66, 81, 87, 96, 112, 124]}}
{"prediction": {"error_location": 0.6275731921195984, "repair_targets": [], "repair_candidates": [0.03914809599518776, 0.028633372858166695, 0.2633199393749237, 0.008675512857735157, 0.13855715095996857, 0.3289138376712799, 0.002021759981289506, 0.013570358976721764, 0.009678428061306477, 0.015383229590952396, 0.015018947422504425, 0.0037046819925308228, 0.014122793450951576, 0.03419186547398567, 0.032050129026174545, 0.0061602783389389515, 0.008093907497823238, 0.018177246674895287, 0.005773748736828566, 0.002174626337364316, 0.0009641170618124306, 0.0015619539190083742, 0.004899530205875635, 0.0013998092617839575, 0.001065934426151216, 0.00042220583418384194, 0.0005576290423050523, 3.307643055450171e-05, 0.001725870417430997], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 16:16:37.362651", "n_pass": [192, 9, 9], "n_token": 146, "loss": [0.4769693911075592, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def translate(", "self", ")", ":", "#NEWLINE#", "#INDENT#", "output", "=", "''", "#NEWLINE#", "for", "node", "in", "self", ".", "node_list", ":", "#NEWLINE#", "#INDENT#", "if", "isinstance", "(", "node", "output", "+=", "node", ".", "token", ".", "replace", "(", "node", ",", "WildcardNode", ")", ":", "#NEWLINE#", "#INDENT#", "output", "+=", "'.*'", "if", "isinstance", "(", "node", ",", "OptionalNode", ")", ":", "#NEWLINE#", "#INDENT#", "output", "+=", "node", ".", "node_list", "isinstance", "(", "node", ",", "TagNode", ")", "node", ",", "MacroTagNode", ")", ":", "#NEWLINE#", "#INDENT#", "regex", "=", "self", ".", "macro_registry", ".", "get", "(", "node", ".", "macro", ")", "#NEWLINE#", "(", "node", ",", "RegexTagNode", ")", ":", "#NEWLINE#", "#INDENT#", "regex", "=", "node", ".", "regex", "#NEWLINE#", "#UNINDENT#", "else", ":", "#NEWLINE#", "#INDENT#", "regex", "=", "'.+'", "#NEWLINE#", "#UNINDENT#", "#UNINDENT#", "if", "node", ".", "name", ":", "#NEWLINE#", "#INDENT#", "output", "+=", "(", "'(?P<%s>%s)'", "%", "(", "node", ".", "name", ",", "regex", ")", ")", "#NEWLINE#", "#UNINDENT#", "else", ":", "#NEWLINE#", "#INDENT#", "output", "+=", "regex", "#NEWLINE#", "#UNINDENT#", "#UNINDENT#", "#UNINDENT#", "#UNINDENT#", "#UNINDENT#", "#UNINDENT#", "return", "output"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [2, 14, 72, 70, 91, 95, 102, 125, 136, 7, 24, 39, 52, 115, 134, 145, 12, 23, 26, 32, 45, 54, 59, 63, 78, 84, 93, 109, 121]}}
{"prediction": {"error_location": 0.6206615567207336, "repair_targets": [], "repair_candidates": [0.03834908455610275, 0.025653447955846786, 0.25904378294944763, 0.007792153395712376, 0.1222408339381218, 0.34200912714004517, 0.002930851886048913, 0.014459742233157158, 0.008674713782966137, 0.03748162463307381, 0.004289452917873859, 0.00044983200496062636, 0.015124122612178326, 0.053614359349012375, 0.017958566546440125, 0.010760728269815445, 0.005606708116829395, 0.013900882564485073, 0.00691593624651432, 0.0029842460062354803, 0.0013415205758064985, 0.0018409740878269076, 0.0015536597929894924, 0.0012559574097394943, 0.0018803103594109416, 0.0003693712642416358, 0.0005475099897012115, 5.297287134453654e-05, 0.0009174822480417788], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 16:16:37.439707", "n_pass": [194, 10, 10], "n_token": 143, "loss": [0.49398311972618103, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def translate(", "self", ")", ":", "#NEWLINE#", "#INDENT#", "output", "=", "''", "#NEWLINE#", "for", "node", "in", "self", ".", "node_list", ":", "#NEWLINE#", "#INDENT#", "if", "isinstance", "(", "node", "output", "+=", "node", ".", "token", ".", "replace", "(", "node", ",", "WildcardNode", ")", ":", "#NEWLINE#", "#INDENT#", "output", "+=", "'.*'", "if", "isinstance", "(", "node", ",", "OptionalNode", ")", ":", "#NEWLINE#", "#INDENT#", "output", "+=", "node", ".", "node_list", "isinstance", "(", "node", "node", ",", "MacroTagNode", ")", ":", "#NEWLINE#", "#INDENT#", "regex", "=", "self", ".", "macro_registry", ".", "get", "(", "node", ".", "macro", ")", "#NEWLINE#", "(", "node", ",", "RegexTagNode", ")", ":", "#NEWLINE#", "#INDENT#", "regex", "=", "node", ".", "regex", "#NEWLINE#", "#UNINDENT#", "else", ":", "#NEWLINE#", "#INDENT#", "regex", "=", "'.+'", "#NEWLINE#", "#UNINDENT#", "#UNINDENT#", "if", "node", ".", "name", ":", "#NEWLINE#", "#INDENT#", "output", "+=", "(", "'(?P<%s>%s)'", "%", "(", "node", ".", "name", ",", "regex", ")", ")", "#NEWLINE#", "#UNINDENT#", "else", ":", "#NEWLINE#", "#INDENT#", "output", "+=", "regex", "#NEWLINE#", "#UNINDENT#", "#UNINDENT#", "#UNINDENT#", "#UNINDENT#", "#UNINDENT#", "#UNINDENT#", "return", "output"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [2, 14, 69, 67, 88, 92, 99, 122, 133, 7, 24, 39, 52, 112, 131, 142, 12, 23, 26, 32, 45, 54, 59, 60, 75, 81, 90, 106, 118]}}
{"prediction": {"error_location": 0.6101911067962646, "repair_targets": [], "repair_candidates": [0.031541746109724045, 0.027851462364196777, 0.27696844935417175, 0.005799420177936554, 0.11750893294811249, 0.4057579040527344, 0.002627101493999362, 0.01527453400194645, 0.007760562002658844, 0.013801656663417816, 0.004309662617743015, 0.0011186960618942976, 0.012963280081748962, 0.012850082479417324, 0.013366211205720901, 0.008206228725612164, 0.0036407560110092163, 0.015619223937392235, 0.005735545884817839, 0.0050237709656357765, 0.0016182054532691836, 0.0020269027445465326, 0.00211229152046144, 0.001525334781035781, 0.0031294715590775013, 0.00032449373975396156, 0.0005697631859220564, 8.530032209819183e-05, 0.0008830814040265977], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 16:16:37.518173", "n_pass": [196, 11, 11], "n_token": 140, "loss": [0.48466816544532776, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def translate(", "self", ")", ":", "#NEWLINE#", "#INDENT#", "output", "=", "''", "#NEWLINE#", "for", "node", "in", "self", ".", "node_list", ":", "#NEWLINE#", "#INDENT#", "if", "isinstance", "(", "node", "output", "+=", "node", ".", "token", ".", "replace", "(", "node", ",", "WildcardNode", ")", ":", "#NEWLINE#", "#INDENT#", "output", "+=", "'.*'", "if", "isinstance", "(", "node", ",", "OptionalNode", ")", ":", "#NEWLINE#", "#INDENT#", "output", "+=", "node", ".", "node_list", "isinstance", "(", "node", "node", ",", "MacroTagNode", "#INDENT#", "regex", "=", "self", ".", "macro_registry", ".", "get", "(", "node", ".", "macro", ")", "#NEWLINE#", "(", "node", ",", "RegexTagNode", ")", ":", "#NEWLINE#", "#INDENT#", "regex", "=", "node", ".", "regex", "#NEWLINE#", "#UNINDENT#", "else", ":", "#NEWLINE#", "#INDENT#", "regex", "=", "'.+'", "#NEWLINE#", "#UNINDENT#", "#UNINDENT#", "if", "node", ".", "name", ":", "#NEWLINE#", "#INDENT#", "output", "+=", "(", "'(?P<%s>%s)'", "%", "(", "node", ".", "name", ",", "regex", ")", ")", "#NEWLINE#", "#UNINDENT#", "else", ":", "#NEWLINE#", "#INDENT#", "output", "+=", "regex", "#NEWLINE#", "#UNINDENT#", "#UNINDENT#", "#UNINDENT#", "#UNINDENT#", "#UNINDENT#", "#UNINDENT#", "return", "output"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [2, 14, 66, 64, 85, 89, 96, 119, 130, 7, 24, 39, 52, 109, 128, 139, 12, 23, 26, 32, 45, 54, 59, 60, 72, 78, 87, 103, 115]}}
{"prediction": {"error_location": 0.615901529788971, "repair_targets": [], "repair_candidates": [0.039053063839673996, 0.0312812477350235, 0.2840384840965271, 0.0065648783929646015, 0.11937198042869568, 0.3755091726779938, 0.002793943276628852, 0.018377207219600677, 0.007491427008062601, 0.01523212157189846, 0.004738863091915846, 0.001257240423001349, 0.01462504267692566, 0.013690180145204067, 0.010740015655755997, 0.008161397650837898, 0.009793609380722046, 0.018324675038456917, 0.0030869501642882824, 0.003379521192982793, 0.0012668551644310355, 0.001614637323655188, 0.004030375275760889, 0.0019822646863758564, 0.0018171818228438497, 0.00025479545001871884, 0.0006092598778195679, 0.00011348502448527142, 0.0008001477690413594], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 16:16:37.595136", "n_pass": [199, 12, 12], "n_token": 137, "loss": [0.5573171377182007, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def translate(", "self", ")", ":", "#NEWLINE#", "#INDENT#", "output", "=", "''", "#NEWLINE#", "for", "node", "in", "self", ".", "node_list", ":", "#NEWLINE#", "#INDENT#", "if", "isinstance", "(", "node", "output", "+=", "node", ".", "token", ".", "replace", "(", "node", ",", "WildcardNode", ")", ":", "#NEWLINE#", "#INDENT#", "output", "+=", "'.*'", "if", "isinstance", "(", "node", ",", "OptionalNode", ")", ":", "#NEWLINE#", "#INDENT#", "output", "+=", "node", ".", "node_list", "isinstance", "(", "node", "node", ",", "MacroTagNode", "#INDENT#", "regex", "=", "self", ".", "macro_registry", "node", ".", "macro", ")", "#NEWLINE#", "(", "node", ",", "RegexTagNode", ")", ":", "#NEWLINE#", "#INDENT#", "regex", "=", "node", ".", "regex", "#NEWLINE#", "#UNINDENT#", "else", ":", "#NEWLINE#", "#INDENT#", "regex", "=", "'.+'", "#NEWLINE#", "#UNINDENT#", "#UNINDENT#", "if", "node", ".", "name", ":", "#NEWLINE#", "#INDENT#", "output", "+=", "(", "'(?P<%s>%s)'", "%", "(", "node", ".", "name", ",", "regex", ")", ")", "#NEWLINE#", "#UNINDENT#", "else", ":", "#NEWLINE#", "#INDENT#", "output", "+=", "regex", "#NEWLINE#", "#UNINDENT#", "#UNINDENT#", "#UNINDENT#", "#UNINDENT#", "#UNINDENT#", "#UNINDENT#", "return", "output"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [2, 14, 66, 64, 82, 86, 93, 116, 127, 7, 24, 39, 52, 106, 125, 136, 12, 23, 26, 32, 45, 54, 59, 60, 69, 75, 84, 100, 112]}}
{"prediction": {"error_location": 0.5727435946464539, "repair_targets": [], "repair_candidates": [0.04636231064796448, 0.0308934785425663, 0.2556372880935669, 0.007924197241663933, 0.10181158781051636, 0.3003491163253784, 0.010103005915880203, 0.018932031467556953, 0.006509592290967703, 0.03280559554696083, 0.005366854835301638, 0.00891636498272419, 0.023349232971668243, 0.023144297301769257, 0.01483068149536848, 0.0474940724670887, 0.0029813898727297783, 0.029489818960428238, 0.0029786797240376472, 0.0068355584517121315, 0.0014177862321957946, 0.002673349343240261, 0.010943669825792313, 0.0024323160760104656, 0.0031613269820809364, 0.0002796337939798832, 0.001101324101909995, 0.00012179153418401256, 0.0011535472003743052], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 16:16:37.672270", "n_pass": [201, 13, 13], "n_token": 134, "loss": [0.5794491767883301, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def translate(", "self", ")", ":", "#NEWLINE#", "#INDENT#", "output", "=", "''", "#NEWLINE#", "for", "node", "in", "self", ".", "node_list", ":", "#NEWLINE#", "#INDENT#", "if", "isinstance", "(", "node", "output", "+=", "node", ".", "token", ".", "replace", "(", "node", ",", "WildcardNode", ")", ":", "#NEWLINE#", "#INDENT#", "output", "+=", "'.*'", "if", "isinstance", "(", "node", ",", "OptionalNode", ")", ":", "#NEWLINE#", "#INDENT#", "output", "+=", "node", ".", "node_list", "isinstance", "(", "node", "node", ",", "MacroTagNode", "#INDENT#", "regex", "=", "self", ".", "macro_registry", "node", ".", "macro", "node", ",", "RegexTagNode", ")", ":", "#NEWLINE#", "#INDENT#", "regex", "=", "node", ".", "regex", "#NEWLINE#", "#UNINDENT#", "else", ":", "#NEWLINE#", "#INDENT#", "regex", "=", "'.+'", "#NEWLINE#", "#UNINDENT#", "#UNINDENT#", "if", "node", ".", "name", ":", "#NEWLINE#", "#INDENT#", "output", "+=", "(", "'(?P<%s>%s)'", "%", "(", "node", ".", "name", ",", "regex", ")", ")", "#NEWLINE#", "#UNINDENT#", "else", ":", "#NEWLINE#", "#INDENT#", "output", "+=", "regex", "#NEWLINE#", "#UNINDENT#", "#UNINDENT#", "#UNINDENT#", "#UNINDENT#", "#UNINDENT#", "#UNINDENT#", "return", "output"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [2, 14, 66, 64, 79, 83, 90, 113, 124, 7, 24, 39, 52, 103, 122, 133, 12, 23, 26, 32, 45, 54, 59, 60, 69, 72, 81, 97, 109]}}
{"prediction": {"error_location": 0.5602068901062012, "repair_targets": [], "repair_candidates": [0.031289082020521164, 0.03180590644478798, 0.20323368906974792, 0.004907667171210051, 0.05956147983670235, 0.48589521646499634, 0.004352104384452105, 0.0084402309730649, 0.007476343307644129, 0.02237056940793991, 0.006718873046338558, 0.003683573566377163, 0.012769920751452446, 0.012376459315419197, 0.011860210448503494, 0.035267096012830734, 0.0020758758764714003, 0.0026344063226133585, 0.0027021931018680334, 0.02083662338554859, 0.0013531100703403354, 0.0033677092287689447, 0.017793696373701096, 0.001426765345968306, 0.003592537948861718, 0.00016473188588861376, 0.0009554354473948479, 0.00013250693154986948, 0.0009559220052324235], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 16:16:37.750446", "n_pass": [203, 14, 14], "n_token": 131, "loss": [0.5210367441177368, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def translate(", "self", ")", ":", "#NEWLINE#", "#INDENT#", "output", "=", "''", "#NEWLINE#", "for", "node", "in", "self", ".", "node_list", ":", "#NEWLINE#", "#INDENT#", "if", "isinstance", "(", "node", "output", "+=", "node", ".", "token", ".", "replace", "(", "node", ",", "WildcardNode", ")", ":", "#NEWLINE#", "#INDENT#", "output", "+=", "'.*'", "if", "isinstance", "(", "node", ",", "OptionalNode", ")", ":", "#NEWLINE#", "#INDENT#", "output", "+=", "node", ".", "node_list", "isinstance", "(", "node", "node", ",", "MacroTagNode", "#INDENT#", "regex", "=", "self", ".", "macro_registry", "node", ".", "macro", "node", ",", "RegexTagNode", "#INDENT#", "regex", "=", "node", ".", "regex", "#NEWLINE#", "#UNINDENT#", "else", ":", "#NEWLINE#", "#INDENT#", "regex", "=", "'.+'", "#NEWLINE#", "#UNINDENT#", "#UNINDENT#", "if", "node", ".", "name", ":", "#NEWLINE#", "#INDENT#", "output", "+=", "(", "'(?P<%s>%s)'", "%", "(", "node", ".", "name", ",", "regex", ")", ")", "#NEWLINE#", "#UNINDENT#", "else", ":", "#NEWLINE#", "#INDENT#", "output", "+=", "regex", "#NEWLINE#", "#UNINDENT#", "#UNINDENT#", "#UNINDENT#", "#UNINDENT#", "#UNINDENT#", "#UNINDENT#", "return", "output"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [2, 14, 66, 64, 76, 80, 87, 110, 121, 7, 24, 39, 52, 100, 119, 130, 12, 23, 26, 32, 45, 54, 59, 60, 69, 72, 78, 94, 106]}}
{"prediction": {"error_location": 0.5939044952392578, "repair_targets": [], "repair_candidates": [0.026709653437137604, 0.029933348298072815, 0.17479966580867767, 0.004387018270790577, 0.05081930011510849, 0.5450324416160583, 0.003982871305197477, 0.005625540390610695, 0.006995828822255135, 0.019652104005217552, 0.006500625517219305, 0.0036005552392452955, 0.011291326023638248, 0.011144398711621761, 0.014395677484571934, 0.027948591858148575, 0.002065001055598259, 0.002762728603556752, 0.003884852398186922, 0.019480563700199127, 0.0018908031051978469, 0.004239236935973167, 0.015798700973391533, 0.0012888993369415402, 0.0037609601859003305, 0.00022523255029227585, 0.0007626010337844491, 8.364510722458363e-05, 0.0009378641261719167], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 16:16:37.827502", "n_pass": [206, 15, 15], "n_token": 128, "loss": [0.4481693506240845, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def translate(", "self", ")", ":", "#NEWLINE#", "#INDENT#", "output", "=", "''", "#NEWLINE#", "for", "node", "in", "self", ".", "node_list", ":", "#NEWLINE#", "#INDENT#", "if", "isinstance", "(", "node", "output", "+=", "node", ".", "token", ".", "replace", "(", "node", ",", "WildcardNode", ")", ":", "#NEWLINE#", "#INDENT#", "output", "+=", "'.*'", "if", "isinstance", "(", "node", ",", "OptionalNode", ")", ":", "#NEWLINE#", "#INDENT#", "output", "+=", "node", ".", "node_list", "isinstance", "(", "node", "node", ",", "MacroTagNode", "#INDENT#", "regex", "=", "self", ".", "macro_registry", "node", ".", "macro", "node", ",", "RegexTagNode", "#INDENT#", "regex", "=", "node", ".", "regex", ":", "#NEWLINE#", "#INDENT#", "regex", "=", "'.+'", "#NEWLINE#", "#UNINDENT#", "#UNINDENT#", "if", "node", ".", "name", ":", "#NEWLINE#", "#INDENT#", "output", "+=", "(", "'(?P<%s>%s)'", "%", "(", "node", ".", "name", ",", "regex", ")", ")", "#NEWLINE#", "#UNINDENT#", "else", ":", "#NEWLINE#", "#INDENT#", "output", "+=", "regex", "#NEWLINE#", "#UNINDENT#", "#UNINDENT#", "#UNINDENT#", "#UNINDENT#", "#UNINDENT#", "#UNINDENT#", "return", "output"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [2, 14, 66, 64, 76, 80, 84, 107, 118, 7, 24, 39, 52, 97, 116, 127, 12, 23, 26, 32, 45, 54, 59, 60, 69, 72, 78, 91, 103]}}
{"prediction": {"error_location": 0.6387965083122253, "repair_targets": [], "repair_candidates": [0.024496784433722496, 0.020041964948177338, 0.15924227237701416, 0.004480683710426092, 0.04388334974646568, 0.5844529867172241, 0.003295909147709608, 0.004607873968780041, 0.005886084400117397, 0.01725917123258114, 0.004691577982157469, 0.004010668024420738, 0.013500913046300411, 0.013156946748495102, 0.02540530450642109, 0.031860969960689545, 0.0025268420577049255, 0.002511835191398859, 0.0047551593743264675, 0.008823927491903305, 0.002465765690430999, 0.0023522586561739445, 0.011840987019240856, 0.00035169944749213755, 0.003151810960844159, 7.524101965827867e-05, 0.0003622037183959037, 3.392406870261766e-05, 0.0004749502404592931], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 16:16:37.903717", "n_pass": [207, 16, 16], "n_token": 125, "loss": [0.4733106195926666, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def translate(", "self", ")", ":", "#NEWLINE#", "#INDENT#", "output", "=", "''", "#NEWLINE#", "for", "node", "in", "self", ".", "node_list", ":", "#NEWLINE#", "#INDENT#", "if", "isinstance", "(", "node", "output", "+=", "node", ".", "token", ".", "replace", "(", "node", ",", "WildcardNode", ")", ":", "#NEWLINE#", "#INDENT#", "output", "+=", "'.*'", "if", "isinstance", "(", "node", ",", "OptionalNode", ")", ":", "#NEWLINE#", "#INDENT#", "output", "+=", "node", ".", "node_list", "isinstance", "(", "node", "node", ",", "MacroTagNode", "#INDENT#", "regex", "=", "self", ".", "macro_registry", "node", ".", "macro", "node", ",", "RegexTagNode", "#INDENT#", "regex", "=", "node", ".", "regex", "regex", "=", "'.+'", "#NEWLINE#", "#UNINDENT#", "#UNINDENT#", "if", "node", ".", "name", ":", "#NEWLINE#", "#INDENT#", "output", "+=", "(", "'(?P<%s>%s)'", "%", "(", "node", ".", "name", ",", "regex", ")", ")", "#NEWLINE#", "#UNINDENT#", "else", ":", "#NEWLINE#", "#INDENT#", "output", "+=", "regex", "#NEWLINE#", "#UNINDENT#", "#UNINDENT#", "#UNINDENT#", "#UNINDENT#", "#UNINDENT#", "#UNINDENT#", "return", "output"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [2, 14, 66, 64, 76, 80, 81, 104, 115, 7, 24, 39, 52, 94, 113, 124, 12, 23, 26, 32, 45, 54, 59, 60, 69, 72, 78, 88, 100]}}
{"prediction": {"error_location": 0.622936487197876, "repair_targets": [], "repair_candidates": [0.024417640641331673, 0.027591941878199577, 0.1703866720199585, 0.003798833116889, 0.04493901878595352, 0.576019823551178, 0.0035348304081708193, 0.004763645585626364, 0.008117455057799816, 0.01627471297979355, 0.005313384346663952, 0.005257600452750921, 0.010634961538016796, 0.010235992260277271, 0.020831240341067314, 0.029373856261372566, 0.0020222016610205173, 0.0016012104460969567, 0.004944728221744299, 0.0156413484364748, 0.002534574130550027, 0.003396788379177451, 0.004811248742043972, 0.0003220530634280294, 0.0019560311920940876, 3.9557293348480016e-05, 0.0008026307332329452, 7.99604913481744e-06, 0.0004280215362086892], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 16:16:38.056973", "n_pass": [214, 18, 17], "n_token": 121, "loss": [0.4664080739021301, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def translate(", "self", ")", ":", "#NEWLINE#", "#INDENT#", "output", "=", "''", "#NEWLINE#", "for", "node", "in", "self", ".", "node_list", ":", "#NEWLINE#", "#INDENT#", "if", "isinstance", "(", "node", "output", "+=", "node", ".", "token", ".", "replace", "(", "node", ",", "WildcardNode", ")", ":", "#NEWLINE#", "#INDENT#", "output", "+=", "'.*'", "if", "isinstance", "(", "node", ",", "OptionalNode", ")", ":", "#NEWLINE#", "#INDENT#", "output", "+=", "node", ".", "node_list", "isinstance", "(", "node", "node", ",", "MacroTagNode", "#INDENT#", "regex", "=", "self", ".", "macro_registry", "node", ".", "macro", "node", ",", "RegexTagNode", "#INDENT#", "regex", "=", "node", ".", "regex", "regex", "=", "'.+'", "#NEWLINE#", "#UNINDENT#", "#UNINDENT#", "if", "node", ".", "name", ":", "#NEWLINE#", "#INDENT#", "output", "+=", "(", "'(?P<%s>%s)'", "%", "(", "node", ".", "name", ",", "regex", "else", ":", "#NEWLINE#", "#INDENT#", "output", "+=", "regex", "#NEWLINE#", "#UNINDENT#", "#UNINDENT#", "#UNINDENT#", "#UNINDENT#", "#UNINDENT#", "#UNINDENT#", "return", "output"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [2, 14, 66, 64, 76, 80, 81, 104, 111, 7, 24, 39, 52, 94, 109, 120, 12, 23, 26, 32, 45, 54, 59, 60, 69, 72, 78, 88, 100]}}
{"prediction": {"error_location": 0.6272512078285217, "repair_targets": [], "repair_candidates": [0.023685965687036514, 0.02073930948972702, 0.16732192039489746, 0.004015590064227581, 0.05077176168560982, 0.5672140717506409, 0.003588480642065406, 0.005815271288156509, 0.006203325465321541, 0.016315778717398643, 0.003646468510851264, 0.005475657992064953, 0.010757935233414173, 0.010316065512597561, 0.025986483320593834, 0.0317365825176239, 0.002394413575530052, 0.002126566832885146, 0.010555025190114975, 0.01601201482117176, 0.002786363009363413, 0.0038576305378228426, 0.005335006397217512, 0.000350194051861763, 0.0021180883049964905, 8.229564264183864e-05, 0.0002903268614318222, 2.4544759071432054e-05, 0.000476917193736881], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 16:16:38.133621", "n_pass": [215, 19, 18], "n_token": 117, "loss": [0.49900442361831665, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def translate(", "self", ")", ":", "#NEWLINE#", "#INDENT#", "output", "=", "''", "#NEWLINE#", "for", "node", "in", "self", ".", "node_list", ":", "#NEWLINE#", "#INDENT#", "if", "isinstance", "(", "node", "output", "+=", "node", ".", "token", ".", "replace", "(", "node", ",", "WildcardNode", ")", ":", "#NEWLINE#", "#INDENT#", "output", "+=", "'.*'", "if", "isinstance", "(", "node", ",", "OptionalNode", ")", ":", "#NEWLINE#", "#INDENT#", "output", "+=", "node", ".", "node_list", "isinstance", "(", "node", "node", ",", "MacroTagNode", "#INDENT#", "regex", "=", "self", ".", "macro_registry", "node", ".", "macro", "node", ",", "RegexTagNode", "#INDENT#", "regex", "=", "node", ".", "regex", "regex", "=", "'.+'", "#NEWLINE#", "#UNINDENT#", "#UNINDENT#", "if", "node", ".", "name", ":", "#NEWLINE#", "#INDENT#", "output", "+=", "(", "'(?P<%s>%s)'", "%", "(", "node", ".", "name", ",", "regex", "output", "+=", "regex", "#NEWLINE#", "#UNINDENT#", "#UNINDENT#", "#UNINDENT#", "#UNINDENT#", "#UNINDENT#", "#UNINDENT#", "return", "output"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [2, 14, 66, 64, 76, 80, 81, 104, 107, 7, 24, 39, 52, 94, 105, 116, 12, 23, 26, 32, 45, 54, 59, 60, 69, 72, 78, 88, 100]}}
{"prediction": {"error_location": 0.6071346998214722, "repair_targets": [], "repair_candidates": [0.019511016085743904, 0.0223846435546875, 0.11893557012081146, 0.0033915285021066666, 0.05569086968898773, 0.5816748142242432, 0.0023030091542750597, 0.007961929775774479, 0.008916032500565052, 0.011812882497906685, 0.009040138684213161, 0.0049864123575389385, 0.007086560130119324, 0.006598701234906912, 0.04126462712883949, 0.027063356712460518, 0.002455522073432803, 0.0022843496408313513, 0.035243503749370575, 0.013346209190785885, 0.001681770198047161, 0.002279406413435936, 0.0029133290518075228, 7.93668077676557e-05, 0.0015419411938637495, 0.0003134998551104218, 0.009129616431891918, 2.2783557142247446e-05, 8.660004823468626e-05], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 16:16:38.209150", "n_pass": [217, 20, 19], "n_token": 113, "loss": [0.46061715483665466, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def translate(", "self", ")", ":", "#NEWLINE#", "#INDENT#", "output", "=", "''", "#NEWLINE#", "for", "node", "in", "self", ".", "node_list", ":", "#NEWLINE#", "#INDENT#", "if", "isinstance", "(", "node", "output", "+=", "node", ".", "token", ".", "replace", "(", "node", ",", "WildcardNode", ")", ":", "#NEWLINE#", "#INDENT#", "output", "+=", "'.*'", "if", "isinstance", "(", "node", ",", "OptionalNode", ")", ":", "#NEWLINE#", "#INDENT#", "output", "+=", "node", ".", "node_list", "isinstance", "(", "node", "node", ",", "MacroTagNode", "#INDENT#", "regex", "=", "self", ".", "macro_registry", "node", ".", "macro", "node", ",", "RegexTagNode", "#INDENT#", "regex", "=", "node", ".", "regex", "regex", "=", "'.+'", "#NEWLINE#", "#UNINDENT#", "#UNINDENT#", "if", "node", ".", "name", ":", "#NEWLINE#", "#INDENT#", "output", "+=", "(", "'(?P<%s>%s)'", "%", "(", "node", ".", "name", ",", "regex", "output", "+=", "regex", "#NEWLINE#", "#UNINDENT#", "#UNINDENT#", "return", "output"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [2, 14, 66, 64, 76, 80, 81, 104, 107, 7, 24, 39, 52, 94, 105, 112, 12, 23, 26, 32, 45, 54, 59, 60, 69, 72, 78, 88, 100]}}
{"prediction": {"error_location": 0.6308940649032593, "repair_targets": [], "repair_candidates": [0.019803348928689957, 0.023063065484166145, 0.12004432082176208, 0.0038675926625728607, 0.055564507842063904, 0.609319806098938, 0.002765364944934845, 0.007486096117645502, 0.007596718147397041, 0.012009453028440475, 0.005188056267797947, 0.006491397973150015, 0.0064040678553283215, 0.006025553215295076, 0.023188145831227303, 0.0326940082013607, 0.0027910941280424595, 0.0023365565575659275, 0.022510908544063568, 0.015742860734462738, 0.0011280621401965618, 0.0015420810086652637, 0.0034990308340638876, 0.00022977235494181514, 0.001622478011995554, 0.00026294749113731086, 0.006489949766546488, 3.94888520531822e-05, 0.00029329676181077957], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 16:16:38.286319", "n_pass": [220, 21, 20], "n_token": 110, "loss": [0.5208568572998047, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def translate(", "self", "#INDENT#", "output", "=", "''", "#NEWLINE#", "for", "node", "in", "self", ".", "node_list", ":", "#NEWLINE#", "#INDENT#", "if", "isinstance", "(", "node", "output", "+=", "node", ".", "token", ".", "replace", "(", "node", ",", "WildcardNode", ")", ":", "#NEWLINE#", "#INDENT#", "output", "+=", "'.*'", "if", "isinstance", "(", "node", ",", "OptionalNode", ")", ":", "#NEWLINE#", "#INDENT#", "output", "+=", "node", ".", "node_list", "isinstance", "(", "node", "node", ",", "MacroTagNode", "#INDENT#", "regex", "=", "self", ".", "macro_registry", "node", ".", "macro", "node", ",", "RegexTagNode", "#INDENT#", "regex", "=", "node", ".", "regex", "regex", "=", "'.+'", "#NEWLINE#", "#UNINDENT#", "#UNINDENT#", "if", "node", ".", "name", ":", "#NEWLINE#", "#INDENT#", "output", "+=", "(", "'(?P<%s>%s)'", "%", "(", "node", ".", "name", ",", "regex", "output", "+=", "regex", "#NEWLINE#", "#UNINDENT#", "#UNINDENT#", "return", "output"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [2, 11, 63, 61, 73, 77, 78, 101, 104, 4, 21, 36, 49, 91, 102, 109, 9, 20, 23, 29, 42, 51, 56, 57, 66, 69, 75, 85, 97]}}
{"prediction": {"error_location": 0.5940112471580505, "repair_targets": [], "repair_candidates": [0.06343827396631241, 0.18602564930915833, 0.10200829803943634, 0.004689344204962254, 0.019691195338964462, 0.40224283933639526, 0.0038007572293281555, 0.0072532943449914455, 0.006812471896409988, 0.0114207174628973, 0.007370032835751772, 0.00648750364780426, 0.004528599791228771, 0.004052316304296255, 0.0481448732316494, 0.024821314960718155, 0.0020804794039577246, 0.001960305729880929, 0.03649033233523369, 0.01571575738489628, 0.002303862711414695, 0.0028584380634129047, 0.004185600206255913, 0.0007626630831509829, 0.0018195529701188207, 0.0009141262271441519, 0.026701072230935097, 7.234220538521186e-05, 0.0013479493791237473], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 16:16:38.362614", "n_pass": [222, 22, 21], "n_token": 107, "loss": [0.30304819345474243, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def translate(", "self", "#INDENT#", "output", "=", "node", "in", "self", ".", "node_list", ":", "#NEWLINE#", "#INDENT#", "if", "isinstance", "(", "node", "output", "+=", "node", ".", "token", ".", "replace", "(", "node", ",", "WildcardNode", ")", ":", "#NEWLINE#", "#INDENT#", "output", "+=", "'.*'", "if", "isinstance", "(", "node", ",", "OptionalNode", ")", ":", "#NEWLINE#", "#INDENT#", "output", "+=", "node", ".", "node_list", "isinstance", "(", "node", "node", ",", "MacroTagNode", "#INDENT#", "regex", "=", "self", ".", "macro_registry", "node", ".", "macro", "node", ",", "RegexTagNode", "#INDENT#", "regex", "=", "node", ".", "regex", "regex", "=", "'.+'", "#NEWLINE#", "#UNINDENT#", "#UNINDENT#", "if", "node", ".", "name", ":", "#NEWLINE#", "#INDENT#", "output", "+=", "(", "'(?P<%s>%s)'", "%", "(", "node", ".", "name", ",", "regex", "output", "+=", "regex", "#NEWLINE#", "#UNINDENT#", "#UNINDENT#", "return", "output"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [2, 8, 60, 58, 70, 74, 75, 98, 101, 4, 18, 33, 46, 88, 99, 106, 6, 17, 20, 26, 39, 48, 53, 54, 63, 66, 72, 82, 94]}}
{"prediction": {"error_location": 0.738563597202301, "repair_targets": [], "repair_candidates": [0.1181071326136589, 0.20973163843154907, 0.10499564558267593, 0.023348551243543625, 0.03179824724793434, 0.04124930873513222, 0.02850388176739216, 0.02284659631550312, 0.0018743015825748444, 0.01824936270713806, 0.010005700401961803, 0.010202408768236637, 0.008142548613250256, 0.00736467819660902, 0.12381283193826675, 0.0542670302093029, 0.002759466413408518, 0.0038003830704838037, 0.09566613286733627, 0.03951253369450569, 0.008177757263183594, 0.010325146839022636, 0.009057330898940563, 0.002092163311317563, 0.003718436462804675, 0.001078359317034483, 0.00827216450124979, 0.00014024722622707486, 0.000900018319953233], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 16:16:38.438803", "n_pass": [224, 23, 22], "n_token": 104, "loss": [0.3330749571323395, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def translate(", "self", "#INDENT#", "output", "=", "node", "in", "self", "#NEWLINE#", "#INDENT#", "if", "isinstance", "(", "node", "output", "+=", "node", ".", "token", ".", "replace", "(", "node", ",", "WildcardNode", ")", ":", "#NEWLINE#", "#INDENT#", "output", "+=", "'.*'", "if", "isinstance", "(", "node", ",", "OptionalNode", ")", ":", "#NEWLINE#", "#INDENT#", "output", "+=", "node", ".", "node_list", "isinstance", "(", "node", "node", ",", "MacroTagNode", "#INDENT#", "regex", "=", "self", ".", "macro_registry", "node", ".", "macro", "node", ",", "RegexTagNode", "#INDENT#", "regex", "=", "node", ".", "regex", "regex", "=", "'.+'", "#NEWLINE#", "#UNINDENT#", "#UNINDENT#", "if", "node", ".", "name", ":", "#NEWLINE#", "#INDENT#", "output", "+=", "(", "'(?P<%s>%s)'", "%", "(", "node", ".", "name", ",", "regex", "output", "+=", "regex", "#NEWLINE#", "#UNINDENT#", "#UNINDENT#", "return", "output"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [2, 8, 57, 55, 67, 71, 72, 95, 98, 4, 15, 30, 43, 85, 96, 103, 6, 14, 17, 23, 36, 45, 50, 51, 60, 63, 69, 79, 91]}}
{"prediction": {"error_location": 0.7167163491249084, "repair_targets": [], "repair_candidates": [0.09877481311559677, 0.13975994288921356, 0.0632067620754242, 0.0464966855943203, 0.023108860477805138, 0.02140394039452076, 0.04531124234199524, 0.02431684359908104, 0.0014432407915592194, 0.046458687633275986, 0.006716863252222538, 0.019911667332053185, 0.012931174598634243, 0.012495329603552818, 0.11165028810501099, 0.04878418147563934, 0.004112151451408863, 0.0038171077612787485, 0.11553405225276947, 0.07629629969596863, 0.008400933817029, 0.00970553420484066, 0.026319313794374466, 0.004786130040884018, 0.015101712197065353, 0.0013373125111684203, 0.011085673235356808, 0.00012617476750165224, 0.0006070069503039122], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 16:16:38.515934", "n_pass": [225, 24, 23], "n_token": 101, "loss": [0.4934324622154236, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def translate(", "self", "#INDENT#", "output", "=", "node", "in", "self", "isinstance", "(", "node", "output", "+=", "node", ".", "token", ".", "replace", "(", "node", ",", "WildcardNode", ")", ":", "#NEWLINE#", "#INDENT#", "output", "+=", "'.*'", "if", "isinstance", "(", "node", ",", "OptionalNode", ")", ":", "#NEWLINE#", "#INDENT#", "output", "+=", "node", ".", "node_list", "isinstance", "(", "node", "node", ",", "MacroTagNode", "#INDENT#", "regex", "=", "self", ".", "macro_registry", "node", ".", "macro", "node", ",", "RegexTagNode", "#INDENT#", "regex", "=", "node", ".", "regex", "regex", "=", "'.+'", "#NEWLINE#", "#UNINDENT#", "#UNINDENT#", "if", "node", ".", "name", ":", "#NEWLINE#", "#INDENT#", "output", "+=", "(", "'(?P<%s>%s)'", "%", "(", "node", ".", "name", ",", "regex", "output", "+=", "regex", "#NEWLINE#", "#UNINDENT#", "#UNINDENT#", "return", "output"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [2, 8, 54, 52, 64, 68, 69, 92, 95, 4, 12, 27, 40, 82, 93, 100, 6, 11, 14, 20, 33, 42, 47, 48, 57, 60, 66, 76, 88]}}
{"prediction": {"error_location": 0.6105270981788635, "repair_targets": [], "repair_candidates": [0.1671725958585739, 0.04817265644669533, 0.07908199727535248, 0.05287434905767441, 0.037619758397340775, 0.017969083040952682, 0.05294269323348999, 0.003701851237565279, 0.0039008986204862595, 0.07950711995363235, 0.011002068407833576, 0.04009309783577919, 0.0040357583202421665, 0.003842756384983659, 0.0956820547580719, 0.01190910954028368, 0.0034422960598021746, 0.0034888400696218014, 0.07145479321479797, 0.13176091015338898, 0.00459543289616704, 0.0048552812077105045, 0.041707564145326614, 0.0016258382238447666, 0.02358117327094078, 0.0006076629506424069, 0.0030674529261887074, 8.311080455314368e-05, 0.00022182532120496035], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 16:16:38.591603", "n_pass": [228, 25, 24], "n_token": 98, "loss": [0.5801975727081299, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def translate(", "self", "#INDENT#", "output", "=", "node", "in", "self", "isinstance", "(", "node", "output", "+=", "node", "replace", "(", "node", ",", "WildcardNode", ")", ":", "#NEWLINE#", "#INDENT#", "output", "+=", "'.*'", "if", "isinstance", "(", "node", ",", "OptionalNode", ")", ":", "#NEWLINE#", "#INDENT#", "output", "+=", "node", ".", "node_list", "isinstance", "(", "node", "node", ",", "MacroTagNode", "#INDENT#", "regex", "=", "self", ".", "macro_registry", "node", ".", "macro", "node", ",", "RegexTagNode", "#INDENT#", "regex", "=", "node", ".", "regex", "regex", "=", "'.+'", "#NEWLINE#", "#UNINDENT#", "#UNINDENT#", "if", "node", ".", "name", ":", "#NEWLINE#", "#INDENT#", "output", "+=", "(", "'(?P<%s>%s)'", "%", "(", "node", ".", "name", ",", "regex", "output", "+=", "regex", "#NEWLINE#", "#UNINDENT#", "#UNINDENT#", "return", "output"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [2, 8, 51, 49, 61, 65, 66, 89, 92, 4, 12, 24, 37, 79, 90, 97, 6, 11, 14, 17, 30, 39, 44, 45, 54, 57, 63, 73, 85]}}
{"prediction": {"error_location": 0.5597878098487854, "repair_targets": [], "repair_candidates": [0.3618325889110565, 0.04519969969987869, 0.07312005013227463, 0.07203561812639236, 0.04486174136400223, 0.0030774646438658237, 0.004577546380460262, 0.0012281129602342844, 0.002413980895653367, 0.04498959332704544, 0.007589111570268869, 0.05076638236641884, 0.0029169435147196054, 0.0027680941857397556, 0.04976073279976845, 0.014002056792378426, 0.0032880757935345173, 0.003958118613809347, 0.0569884330034256, 0.09950709342956543, 0.004923638422042131, 0.0058746375143527985, 0.0293465293943882, 0.0013006787048652768, 0.009738840162754059, 0.0007041595526970923, 0.0029753048438578844, 6.000930079608224e-05, 0.00019478518515825272], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 16:16:38.667221", "n_pass": [230, 26, 25], "n_token": 95, "loss": [0.7564355134963989, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def translate(", "self", "#INDENT#", "output", "=", "node", "in", "self", "isinstance", "(", "node", "output", "+=", "node", "replace", "(", "node", ":", "#NEWLINE#", "#INDENT#", "output", "+=", "'.*'", "if", "isinstance", "(", "node", ",", "OptionalNode", ")", ":", "#NEWLINE#", "#INDENT#", "output", "+=", "node", ".", "node_list", "isinstance", "(", "node", "node", ",", "MacroTagNode", "#INDENT#", "regex", "=", "self", ".", "macro_registry", "node", ".", "macro", "node", ",", "RegexTagNode", "#INDENT#", "regex", "=", "node", ".", "regex", "regex", "=", "'.+'", "#NEWLINE#", "#UNINDENT#", "#UNINDENT#", "if", "node", ".", "name", ":", "#NEWLINE#", "#INDENT#", "output", "+=", "(", "'(?P<%s>%s)'", "%", "(", "node", ".", "name", ",", "regex", "output", "+=", "regex", "#NEWLINE#", "#UNINDENT#", "#UNINDENT#", "return", "output"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [2, 8, 48, 46, 58, 62, 63, 86, 89, 4, 12, 21, 34, 76, 87, 94, 6, 11, 14, 17, 27, 36, 41, 42, 51, 54, 60, 70, 82]}}
{"prediction": {"error_location": 0.46933645009994507, "repair_targets": [], "repair_candidates": [0.3470633029937744, 0.04518526792526245, 0.0954696536064148, 0.08538854867219925, 0.055190254002809525, 0.002891489304602146, 0.008881993591785431, 0.0011399659560993314, 0.0018251053988933563, 0.037418317049741745, 0.006185334641486406, 0.059689994901418686, 0.0034516234882175922, 0.0032747199293226004, 0.04894682765007019, 0.012616465799510479, 0.003424816532060504, 0.004468732979148626, 0.05685238167643547, 0.0745081901550293, 0.0047982847318053246, 0.005478515289723873, 0.021214494481682777, 0.0016316501423716545, 0.009093539789319038, 0.0005991524667479098, 0.0029710407834500074, 4.8406131099909544e-05, 0.0002919366233982146], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 16:16:38.743407", "n_pass": [231, 27, 26], "n_token": 92, "loss": [0.7138243317604065, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def translate(", "self", "#INDENT#", "output", "=", "node", "in", "self", "isinstance", "(", "node", "output", "+=", "node", "replace", "(", "node", "output", "+=", "'.*'", "if", "isinstance", "(", "node", ",", "OptionalNode", ")", ":", "#NEWLINE#", "#INDENT#", "output", "+=", "node", ".", "node_list", "isinstance", "(", "node", "node", ",", "MacroTagNode", "#INDENT#", "regex", "=", "self", ".", "macro_registry", "node", ".", "macro", "node", ",", "RegexTagNode", "#INDENT#", "regex", "=", "node", ".", "regex", "regex", "=", "'.+'", "#NEWLINE#", "#UNINDENT#", "#UNINDENT#", "if", "node", ".", "name", ":", "#NEWLINE#", "#INDENT#", "output", "+=", "(", "'(?P<%s>%s)'", "%", "(", "node", ".", "name", ",", "regex", "output", "+=", "regex", "#NEWLINE#", "#UNINDENT#", "#UNINDENT#", "return", "output"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [2, 8, 45, 43, 55, 59, 60, 83, 86, 4, 12, 18, 31, 73, 84, 91, 6, 11, 14, 17, 24, 33, 38, 39, 48, 51, 57, 67, 79]}}
{"prediction": {"error_location": 0.48976758122444153, "repair_targets": [], "repair_candidates": [0.34475019574165344, 0.08235263079404831, 0.062228087335824966, 0.12837961316108704, 0.029956696555018425, 0.03490815684199333, 0.011168270371854305, 0.006945414934307337, 0.01454745139926672, 0.039764344692230225, 0.007038119714707136, 0.022009380161762238, 0.013010767288506031, 0.011177795007824898, 0.04867976903915405, 0.006228151265531778, 0.004805585369467735, 0.02203505113720894, 0.041874200105667114, 0.03441741317510605, 0.006052487529814243, 0.006852773483842611, 0.005198215134441853, 0.0034848367795348167, 0.004046692978590727, 0.0009548437665216625, 0.006781408097594976, 6.226707773748785e-05, 0.0002894157078117132], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 16:16:38.893225", "n_pass": [235, 29, 27], "n_token": 89, "loss": [0.6694936156272888, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def translate(", "self", "#INDENT#", "output", "=", "node", "in", "self", "isinstance", "(", "node", "output", "+=", "node", "replace", "(", "node", "output", "+=", "'.*'", "if", "isinstance", "(", "node", ",", "OptionalNode", "#INDENT#", "output", "+=", "node", ".", "node_list", "isinstance", "(", "node", "node", ",", "MacroTagNode", "#INDENT#", "regex", "=", "self", ".", "macro_registry", "node", ".", "macro", "node", ",", "RegexTagNode", "#INDENT#", "regex", "=", "node", ".", "regex", "regex", "=", "'.+'", "#NEWLINE#", "#UNINDENT#", "#UNINDENT#", "if", "node", ".", "name", ":", "#NEWLINE#", "#INDENT#", "output", "+=", "(", "'(?P<%s>%s)'", "%", "(", "node", ".", "name", ",", "regex", "output", "+=", "regex", "#NEWLINE#", "#UNINDENT#", "#UNINDENT#", "return", "output"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [2, 8, 42, 40, 52, 56, 57, 80, 83, 4, 12, 18, 28, 70, 81, 88, 6, 11, 14, 17, 24, 30, 35, 36, 45, 48, 54, 64, 76]}}
{"prediction": {"error_location": 0.5119677186012268, "repair_targets": [], "repair_candidates": [0.331039160490036, 0.06618835777044296, 0.0699704959988594, 0.13498139381408691, 0.034861642867326736, 0.0275606419891119, 0.012635878287255764, 0.014626845717430115, 0.019808625802397728, 0.03703446686267853, 0.013586259447038174, 0.01534801721572876, 0.01608440838754177, 0.012683620676398277, 0.048981450498104095, 0.004621740896254778, 0.004399992059916258, 0.017497528344392776, 0.04743531346321106, 0.02346874587237835, 0.0037440883461385965, 0.004339831415563822, 0.004438324365764856, 0.015325997024774551, 0.0034471754916012287, 0.0012983501655980945, 0.014053487218916416, 9.35380085138604e-05, 0.0004446189268492162], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 16:16:39.125755", "n_pass": [318, 32, 28], "n_token": 87, "loss": [0.7132532596588135, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def translate(", "self", "#INDENT#", "output", "=", "node", "in", "self", "isinstance", "(", "node", "output", "+=", "node", "replace", "(", "node", "output", "if", "isinstance", "(", "node", ",", "OptionalNode", "#INDENT#", "output", "+=", "node", ".", "node_list", "isinstance", "(", "node", "node", ",", "MacroTagNode", "#INDENT#", "regex", "=", "self", ".", "macro_registry", "node", ".", "macro", "node", ",", "RegexTagNode", "#INDENT#", "regex", "=", "node", ".", "regex", "regex", "=", "'.+'", "#NEWLINE#", "#UNINDENT#", "#UNINDENT#", "if", "node", ".", "name", ":", "#NEWLINE#", "#INDENT#", "output", "+=", "(", "'(?P<%s>%s)'", "%", "(", "node", ".", "name", ",", "regex", "output", "+=", "regex", "#NEWLINE#", "#UNINDENT#", "#UNINDENT#", "return", "output"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [2, 8, 40, 38, 50, 54, 55, 78, 81, 4, 12, 18, 26, 68, 79, 86, 6, 11, 14, 17, 22, 28, 33, 34, 43, 46, 52, 62, 74]}}
{"prediction": {"error_location": 0.49004730582237244, "repair_targets": [], "repair_candidates": [0.17753036320209503, 0.08183848857879639, 0.10317527502775192, 0.06380967795848846, 0.056007929146289825, 0.025985494256019592, 0.020529435947537422, 0.03651568666100502, 0.015794500708580017, 0.05903228744864464, 0.012791953980922699, 0.01772804744541645, 0.028137536719441414, 0.022624047473073006, 0.0578375980257988, 0.00401404220610857, 0.006390977185219526, 0.018127931281924248, 0.05427267774939537, 0.022631602361798286, 0.005300246644765139, 0.005525359883904457, 0.004804003052413464, 0.08336728811264038, 0.0037599396891891956, 0.0013655306538566947, 0.010422373190522194, 0.00013346750347409397, 0.0005461867549456656], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 16:16:39.201765", "n_pass": [319, 33, 29], "n_token": 85, "loss": [0.522693395614624, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def translate(", "self", "#INDENT#", "output", "=", "node", "in", "self", "isinstance", "(", "node", "output", "+=", "node", "replace", "(", "node", "output", "(", "node", ",", "OptionalNode", "#INDENT#", "output", "+=", "node", ".", "node_list", "isinstance", "(", "node", "node", ",", "MacroTagNode", "#INDENT#", "regex", "=", "self", ".", "macro_registry", "node", ".", "macro", "node", ",", "RegexTagNode", "#INDENT#", "regex", "=", "node", ".", "regex", "regex", "=", "'.+'", "#NEWLINE#", "#UNINDENT#", "#UNINDENT#", "if", "node", ".", "name", ":", "#NEWLINE#", "#INDENT#", "output", "+=", "(", "'(?P<%s>%s)'", "%", "(", "node", ".", "name", ",", "regex", "output", "+=", "regex", "#NEWLINE#", "#UNINDENT#", "#UNINDENT#", "return", "output"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [2, 8, 38, 36, 48, 52, 53, 76, 79, 4, 12, 18, 24, 66, 77, 84, 6, 11, 14, 17, 20, 26, 31, 32, 41, 44, 50, 60, 72]}}
{"prediction": {"error_location": 0.5929213762283325, "repair_targets": [], "repair_candidates": [0.08797133713960648, 0.06941299885511398, 0.09712681919336319, 0.04331750050187111, 0.06340781599283218, 0.01154459547251463, 0.011316346935927868, 0.006888200528919697, 0.002056777011603117, 0.03145914897322655, 0.012743019498884678, 0.018471771851181984, 0.05782059207558632, 0.04911087825894356, 0.10522615164518356, 0.0050854431465268135, 0.008959795348346233, 0.01813598722219467, 0.08837317675352097, 0.04909539595246315, 0.0066543687134981155, 0.006638084538280964, 0.011761372908949852, 0.11605120450258255, 0.008261206559836864, 0.001443985616788268, 0.010896340943872929, 0.0002056799567071721, 0.0005639332230202854], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 16:16:39.276726", "n_pass": [321, 34, 30], "n_token": 83, "loss": [0.4342744052410126, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def translate(", "self", "#INDENT#", "output", "=", "node", "in", "self", "isinstance", "(", "node", "output", "+=", "node", "replace", "(", "node", "output", "(", "node", "#INDENT#", "output", "+=", "node", ".", "node_list", "isinstance", "(", "node", "node", ",", "MacroTagNode", "#INDENT#", "regex", "=", "self", ".", "macro_registry", "node", ".", "macro", "node", ",", "RegexTagNode", "#INDENT#", "regex", "=", "node", ".", "regex", "regex", "=", "'.+'", "#NEWLINE#", "#UNINDENT#", "#UNINDENT#", "if", "node", ".", "name", ":", "#NEWLINE#", "#INDENT#", "output", "+=", "(", "'(?P<%s>%s)'", "%", "(", "node", ".", "name", ",", "regex", "output", "+=", "regex", "#NEWLINE#", "#UNINDENT#", "#UNINDENT#", "return", "output"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [2, 8, 36, 34, 46, 50, 51, 74, 77, 4, 12, 18, 22, 64, 75, 82, 6, 11, 14, 17, 20, 24, 29, 30, 39, 42, 48, 58, 70]}}
{"prediction": {"error_location": 0.6477344632148743, "repair_targets": [], "repair_candidates": [0.16271819174289703, 0.04917200282216072, 0.10296665132045746, 0.05996452271938324, 0.06545461714267731, 0.012070518918335438, 0.01258847676217556, 0.007610991131514311, 0.001419025706127286, 0.009655124507844448, 0.009337707422673702, 0.018763406202197075, 0.05244128033518791, 0.052344296127557755, 0.13315609097480774, 0.004411807283759117, 0.009942672215402126, 0.010854964144527912, 0.096575528383255, 0.04608772322535515, 0.006591652985662222, 0.007648186758160591, 0.0213143490254879, 0.020101167261600494, 0.010084271430969238, 0.0021907517220824957, 0.013683944009244442, 0.00028500205371528864, 0.0005651647807098925], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 16:16:39.353504", "n_pass": [324, 35, 31], "n_token": 81, "loss": [0.40515264868736267, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def translate(", "self", "#INDENT#", "output", "=", "node", "in", "self", "isinstance", "(", "node", "output", "+=", "node", "replace", "(", "node", "output", "(", "node", "#INDENT#", "output", "+=", "node", "isinstance", "(", "node", "node", ",", "MacroTagNode", "#INDENT#", "regex", "=", "self", ".", "macro_registry", "node", ".", "macro", "node", ",", "RegexTagNode", "#INDENT#", "regex", "=", "node", ".", "regex", "regex", "=", "'.+'", "#NEWLINE#", "#UNINDENT#", "#UNINDENT#", "if", "node", ".", "name", ":", "#NEWLINE#", "#INDENT#", "output", "+=", "(", "'(?P<%s>%s)'", "%", "(", "node", ".", "name", ",", "regex", "output", "+=", "regex", "#NEWLINE#", "#UNINDENT#", "#UNINDENT#", "return", "output"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [2, 8, 34, 32, 44, 48, 49, 72, 75, 4, 12, 18, 22, 62, 73, 80, 6, 11, 14, 17, 20, 24, 27, 28, 37, 40, 46, 56, 68]}}
{"prediction": {"error_location": 0.6668750643730164, "repair_targets": [], "repair_candidates": [0.28943100571632385, 0.0440436489880085, 0.09190870821475983, 0.07840433716773987, 0.057690996676683426, 0.011611350812017918, 0.009765555150806904, 0.006354027893394232, 0.0013723900774493814, 0.0028297677636146545, 0.007937281392514706, 0.007910145446658134, 0.05269481614232063, 0.061767756938934326, 0.09166090190410614, 0.005633355583995581, 0.009229857474565506, 0.008093207143247128, 0.06879284232854843, 0.029930762946605682, 0.010266942903399467, 0.013476710766553879, 0.014635242521762848, 0.003803617088124156, 0.006791715044528246, 0.002522367052733898, 0.010831992141902447, 0.00021965548512525856, 0.00038906748523004353], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 16:16:39.428714", "n_pass": [325, 36, 32], "n_token": 79, "loss": [0.6450469493865967, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def translate(", "self", "#INDENT#", "output", "=", "node", "in", "self", "isinstance", "(", "node", "output", "+=", "node", "replace", "(", "node", "output", "(", "node", "#INDENT#", "output", "+=", "node", "node", "node", ",", "MacroTagNode", "#INDENT#", "regex", "=", "self", ".", "macro_registry", "node", ".", "macro", "node", ",", "RegexTagNode", "#INDENT#", "regex", "=", "node", ".", "regex", "regex", "=", "'.+'", "#NEWLINE#", "#UNINDENT#", "#UNINDENT#", "if", "node", ".", "name", ":", "#NEWLINE#", "#INDENT#", "output", "+=", "(", "'(?P<%s>%s)'", "%", "(", "node", ".", "name", ",", "regex", "output", "+=", "regex", "#NEWLINE#", "#UNINDENT#", "#UNINDENT#", "return", "output"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [2, 8, 32, 30, 42, 46, 47, 70, 73, 4, 12, 18, 22, 60, 71, 78, 6, 11, 14, 17, 20, 24, 25, 26, 35, 38, 44, 54, 66]}}
{"prediction": {"error_location": 0.5246378779411316, "repair_targets": [], "repair_candidates": [0.11242569237947464, 0.06002065911889076, 0.05236618220806122, 0.17242449522018433, 0.0377008356153965, 0.07460157573223114, 0.011419123038649559, 0.004959590267390013, 0.002646062057465315, 0.0029330241959542036, 0.008151230402290821, 0.035188253968954086, 0.03927675634622574, 0.047691553831100464, 0.23201148211956024, 0.002355611650273204, 0.005625659599900246, 0.00777096813544631, 0.030914975330233574, 0.00881260633468628, 0.011846963316202164, 0.014850770123302937, 0.0051235356368124485, 0.0003141065826639533, 0.0013588797301054, 0.0073638116009533405, 0.009502309374511242, 0.00013305869651958346, 0.00021022194414399564], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 16:16:39.504623", "n_pass": [327, 37, 33], "n_token": 77, "loss": [0.4382924437522888, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def translate(", "self", "#INDENT#", "output", "=", "node", "in", "self", "isinstance", "(", "node", "output", "+=", "node", "replace", "(", "node", "output", "(", "node", "#INDENT#", "output", "+=", "node", "node", "node", "#INDENT#", "regex", "=", "self", ".", "macro_registry", "node", ".", "macro", "node", ",", "RegexTagNode", "#INDENT#", "regex", "=", "node", ".", "regex", "regex", "=", "'.+'", "#NEWLINE#", "#UNINDENT#", "#UNINDENT#", "if", "node", ".", "name", ":", "#NEWLINE#", "#INDENT#", "output", "+=", "(", "'(?P<%s>%s)'", "%", "(", "node", ".", "name", ",", "regex", "output", "+=", "regex", "#NEWLINE#", "#UNINDENT#", "#UNINDENT#", "return", "output"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [2, 8, 30, 28, 40, 44, 45, 68, 71, 4, 12, 18, 22, 58, 69, 76, 6, 11, 14, 17, 20, 24, 25, 26, 33, 36, 42, 52, 64]}}
{"prediction": {"error_location": 0.6451370120048523, "repair_targets": [], "repair_candidates": [0.2615472078323364, 0.06851470470428467, 0.06503837555646896, 0.16896605491638184, 0.04152151197195053, 0.02909219078719616, 0.015996646136045456, 0.010985019616782665, 0.0024611842818558216, 0.0011361395008862019, 0.009085950441658497, 0.017644569277763367, 0.013060721568763256, 0.04645270109176636, 0.11734941601753235, 0.0029577871318906546, 0.005695816595107317, 0.005438335705548525, 0.05252876505255699, 0.014994182623922825, 0.008825787343084812, 0.009603999555110931, 0.012206715531647205, 0.0007904196972958744, 0.0027012627106159925, 0.004364592023193836, 0.010643383488059044, 0.00016920454800128937, 0.00022734679805580527], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 16:16:39.581364", "n_pass": [330, 38, 34], "n_token": 75, "loss": [0.4801137447357178, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def translate(", "self", "#INDENT#", "output", "=", "node", "in", "self", "isinstance", "(", "node", "output", "+=", "node", "replace", "(", "node", "output", "(", "node", "#INDENT#", "output", "+=", "node", "node", "node", "#INDENT#", "regex", "=", "self", "node", ".", "macro", "node", ",", "RegexTagNode", "#INDENT#", "regex", "=", "node", ".", "regex", "regex", "=", "'.+'", "#NEWLINE#", "#UNINDENT#", "#UNINDENT#", "if", "node", ".", "name", ":", "#NEWLINE#", "#INDENT#", "output", "+=", "(", "'(?P<%s>%s)'", "%", "(", "node", ".", "name", ",", "regex", "output", "+=", "regex", "#NEWLINE#", "#UNINDENT#", "#UNINDENT#", "return", "output"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [2, 8, 30, 28, 38, 42, 43, 66, 69, 4, 12, 18, 22, 56, 67, 74, 6, 11, 14, 17, 20, 24, 25, 26, 31, 34, 40, 50, 62]}}
{"prediction": {"error_location": 0.6187129616737366, "repair_targets": [], "repair_candidates": [0.3208596706390381, 0.057078767567873, 0.05454205721616745, 0.15828144550323486, 0.03475148230791092, 0.025803782045841217, 0.014902673661708832, 0.010489275678992271, 0.0023345628287643194, 0.0017200990114361048, 0.006738768424838781, 0.01393535453826189, 0.010088837705552578, 0.045555830001831055, 0.07180080562829971, 0.019772285595536232, 0.037393853068351746, 0.002063233172520995, 0.041327010840177536, 0.02917741984128952, 0.007650573737919331, 0.00838713999837637, 0.00843238178640604, 0.0009796408703550696, 0.0026882574893534184, 0.00496717169880867, 0.00800043623894453, 0.00011830836592707783, 0.00015876078396104276], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 16:16:39.656120", "n_pass": [333, 39, 35], "n_token": 73, "loss": [0.524147093296051, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def translate(", "self", "#INDENT#", "output", "=", "node", "in", "self", "isinstance", "(", "node", "output", "+=", "node", "replace", "(", "node", "output", "(", "node", "#INDENT#", "output", "+=", "node", "node", "node", "#INDENT#", "regex", "=", "self", "node", ".", "macro", "node", "#INDENT#", "regex", "=", "node", ".", "regex", "regex", "=", "'.+'", "#NEWLINE#", "#UNINDENT#", "#UNINDENT#", "if", "node", ".", "name", ":", "#NEWLINE#", "#INDENT#", "output", "+=", "(", "'(?P<%s>%s)'", "%", "(", "node", ".", "name", ",", "regex", "output", "+=", "regex", "#NEWLINE#", "#UNINDENT#", "#UNINDENT#", "return", "output"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [2, 8, 30, 28, 36, 40, 41, 64, 67, 4, 12, 18, 22, 54, 65, 72, 6, 11, 14, 17, 20, 24, 25, 26, 31, 34, 38, 48, 60]}}
{"prediction": {"error_location": 0.5920601487159729, "repair_targets": [], "repair_candidates": [0.2838369607925415, 0.06684970110654831, 0.05040154978632927, 0.1560494303703308, 0.02922230213880539, 0.029754871502518654, 0.01694841869175434, 0.009288168512284756, 0.00190535478759557, 0.002294061239808798, 0.006705166772007942, 0.014478147029876709, 0.010700661689043045, 0.048928193747997284, 0.05476752296090126, 0.02254394441843033, 0.04484859108924866, 0.002179450588300824, 0.039742741733789444, 0.04587320238351822, 0.009127656929194927, 0.008717711083590984, 0.015601882711052895, 0.0009910714579746127, 0.004575682803988457, 0.007872367277741432, 0.015477489680051804, 0.00014873749751131982, 0.00016891038103494793], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 16:16:39.727197", "n_pass": [338, 40, 36], "n_token": 71, "loss": [0.5032503604888916, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def translate(", "self", "#INDENT#", "output", "=", "node", "in", "self", "isinstance", "(", "node", "output", "+=", "node", "replace", "(", "node", "output", "(", "node", "#INDENT#", "output", "+=", "node", "node", "node", "#INDENT#", "regex", "=", "self", "node", ".", "macro", "node", "#INDENT#", "regex", "=", "node", ".", "regex", "regex", "=", "#UNINDENT#", "#UNINDENT#", "if", "node", ".", "name", ":", "#NEWLINE#", "#INDENT#", "output", "+=", "(", "'(?P<%s>%s)'", "%", "(", "node", ".", "name", ",", "regex", "output", "+=", "regex", "#NEWLINE#", "#UNINDENT#", "#UNINDENT#", "return", "output"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [2, 8, 30, 28, 36, 40, 41, 62, 65, 4, 12, 18, 22, 52, 63, 70, 6, 11, 14, 17, 20, 24, 25, 26, 31, 34, 38, 46, 58]}}
{"prediction": {"error_location": 0.6045624017715454, "repair_targets": [], "repair_candidates": [0.24269402027130127, 0.07131899148225784, 0.047895628958940506, 0.15854030847549438, 0.026024555787444115, 0.030855419114232063, 0.01642470806837082, 0.008281780406832695, 0.0020437019411474466, 0.002498001093044877, 0.0077351354993879795, 0.013467996381223202, 0.010145716369152069, 0.043932411819696426, 0.09656837582588196, 0.018472634255886078, 0.034445952624082565, 0.0021921019069850445, 0.06084563955664635, 0.03757273405790329, 0.007316606119275093, 0.009632827714085579, 0.01654926873743534, 0.0010182735277339816, 0.003553176298737526, 0.008416879922151566, 0.02116728387773037, 0.0002187043137382716, 0.00017121352721005678], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 16:16:39.798383", "n_pass": [339, 41, 37], "n_token": 69, "loss": [0.48629647493362427, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def translate(", "self", "#INDENT#", "output", "=", "node", "in", "self", "isinstance", "(", "node", "output", "+=", "node", "replace", "(", "node", "output", "(", "node", "#INDENT#", "output", "+=", "node", "node", "node", "#INDENT#", "regex", "=", "self", "node", ".", "macro", "node", "#INDENT#", "regex", "=", "node", ".", "regex", "regex", "=", "if", "node", ".", "name", ":", "#NEWLINE#", "#INDENT#", "output", "+=", "(", "'(?P<%s>%s)'", "%", "(", "node", ".", "name", ",", "regex", "output", "+=", "regex", "#NEWLINE#", "#UNINDENT#", "#UNINDENT#", "return", "output"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [2, 8, 30, 28, 36, 40, 41, 60, 63, 4, 12, 18, 22, 50, 61, 68, 6, 11, 14, 17, 20, 24, 25, 26, 31, 34, 38, 44, 56]}}
{"prediction": {"error_location": 0.6148995161056519, "repair_targets": [], "repair_candidates": [0.28000888228416443, 0.06432458013296127, 0.04375086724758148, 0.13240423798561096, 0.022975360974669456, 0.025519702583551407, 0.015606165863573551, 0.007284519262611866, 0.0022162620443850756, 0.0020363687071949244, 0.007363421376794577, 0.009222729131579399, 0.007782390341162682, 0.03586577624082565, 0.16619142889976501, 0.01657441072165966, 0.033541977405548096, 0.0019772863015532494, 0.043794211000204086, 0.028531011193990707, 0.007165668532252312, 0.009114381857216358, 0.01819750852882862, 0.0011416078777983785, 0.001727176015265286, 0.0032010236755013466, 0.012301352806389332, 6.859670975245535e-05, 0.00011120247654616833], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 16:16:39.869558", "n_pass": [341, 42, 38], "n_token": 67, "loss": [0.8572837710380554, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def translate(", "self", "#INDENT#", "output", "=", "node", "in", "self", "isinstance", "(", "node", "output", "+=", "node", "replace", "(", "node", "output", "(", "node", "#INDENT#", "output", "+=", "node", "node", "node", "#INDENT#", "regex", "=", "self", "node", ".", "macro", "node", "#INDENT#", "regex", "=", "node", ".", "regex", "regex", "=", "if", "node", ":", "#NEWLINE#", "#INDENT#", "output", "+=", "(", "'(?P<%s>%s)'", "%", "(", "node", ".", "name", ",", "regex", "output", "+=", "regex", "#NEWLINE#", "#UNINDENT#", "#UNINDENT#", "return", "output"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [2, 8, 30, 28, 36, 40, 41, 58, 61, 4, 12, 18, 22, 48, 59, 66, 6, 11, 14, 17, 20, 24, 25, 26, 31, 34, 38, 44, 54]}}
{"prediction": {"error_location": 0.4243130087852478, "repair_targets": [], "repair_candidates": [0.11144282668828964, 0.022188011556863785, 0.0177098847925663, 0.06851164996623993, 0.010099057108163834, 0.011522583663463593, 0.011821843683719635, 0.005345514509826899, 0.0016561810625717044, 0.0014964588917791843, 0.003719466272741556, 0.004724414553493261, 0.004192525986582041, 0.01722116954624653, 0.27420946955680847, 0.009474866092205048, 0.014498514123260975, 0.002079539466649294, 0.14935559034347534, 0.010081317275762558, 0.073607437312603, 0.14789637923240662, 0.005214265547692776, 0.00036376973730511963, 0.0021279205102473497, 0.014556998386979103, 0.0047624558210372925, 6.77863645250909e-05, 5.201238673180342e-05], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 16:16:39.940039", "n_pass": [342, 43, 39], "n_token": 65, "loss": [0.7906168699264526, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def translate(", "self", "#INDENT#", "output", "=", "node", "in", "self", "isinstance", "(", "node", "output", "+=", "node", "replace", "(", "node", "output", "(", "node", "#INDENT#", "output", "+=", "node", "node", "node", "#INDENT#", "regex", "=", "self", "node", ".", "macro", "node", "#INDENT#", "regex", "=", "node", ".", "regex", "regex", "=", "if", "node", "#INDENT#", "output", "+=", "(", "'(?P<%s>%s)'", "%", "(", "node", ".", "name", ",", "regex", "output", "+=", "regex", "#NEWLINE#", "#UNINDENT#", "#UNINDENT#", "return", "output"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [2, 8, 30, 28, 36, 40, 41, 56, 59, 4, 12, 18, 22, 46, 57, 64, 6, 11, 14, 17, 20, 24, 25, 26, 31, 34, 38, 44, 52]}}
{"prediction": {"error_location": 0.45356497168540955, "repair_targets": [], "repair_candidates": [0.12535534799098969, 0.018149303272366524, 0.017757810652256012, 0.051783207803964615, 0.010067029856145382, 0.009126263670623302, 0.009996483102440834, 0.004558469634503126, 0.0010969741269946098, 0.0013536784099414945, 0.0025484540965408087, 0.0037623820826411247, 0.0036535339895635843, 0.014219209551811218, 0.2559831738471985, 0.00933107640594244, 0.013149662874639034, 0.0015661388169974089, 0.08158611506223679, 0.009606347419321537, 0.08193280547857285, 0.22064277529716492, 0.006662340369075537, 0.0004738593997899443, 0.0036854594945907593, 0.037308525294065475, 0.004458673298358917, 0.00011811766307801008, 6.672763993265107e-05], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 16:16:40.011578", "n_pass": [344, 44, 40], "n_token": 63, "loss": [0.6827918291091919, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def translate(", "self", "#INDENT#", "output", "=", "node", "in", "self", "isinstance", "(", "node", "output", "+=", "node", "replace", "(", "node", "output", "(", "node", "#INDENT#", "output", "+=", "node", "node", "node", "#INDENT#", "regex", "=", "self", "node", ".", "macro", "node", "#INDENT#", "regex", "=", "node", ".", "regex", "regex", "=", "if", "node", "#INDENT#", "output", "'(?P<%s>%s)'", "%", "(", "node", ".", "name", ",", "regex", "output", "+=", "regex", "#NEWLINE#", "#UNINDENT#", "#UNINDENT#", "return", "output"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [2, 8, 30, 28, 36, 40, 41, 54, 57, 4, 12, 18, 22, 46, 55, 62, 6, 11, 14, 17, 20, 24, 25, 26, 31, 34, 38, 44, 50]}}
{"prediction": {"error_location": 0.5052046179771423, "repair_targets": [], "repair_candidates": [0.19139191508293152, 0.018201520666480064, 0.0264313742518425, 0.07492171227931976, 0.016382766887545586, 0.013906977139413357, 0.010621222667396069, 0.005034554284065962, 0.0011388303246349096, 0.002263046568259597, 0.002369488123804331, 0.004990651737898588, 0.004975638817995787, 0.017410332337021828, 0.279584139585495, 0.011847213841974735, 0.014815819449722767, 0.0016183402622118592, 0.0583326630294323, 0.011674067936837673, 0.037848588079214096, 0.14553004503250122, 0.010446229949593544, 0.0005279200267978013, 0.007028070744127035, 0.02431238815188408, 0.00615855073556304, 0.00011410854494897649, 0.00012181072088424116], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 16:16:40.083650", "n_pass": [345, 45, 41], "n_token": 61, "loss": [0.7403618097305298, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def translate(", "self", "#INDENT#", "output", "=", "node", "in", "self", "isinstance", "(", "node", "output", "+=", "node", "replace", "(", "node", "output", "(", "node", "#INDENT#", "output", "+=", "node", "node", "node", "#INDENT#", "regex", "=", "self", "node", ".", "macro", "node", "#INDENT#", "regex", "=", "node", ".", "regex", "regex", "=", "if", "node", "#INDENT#", "output", "(", "node", ".", "name", ",", "regex", "output", "+=", "regex", "#NEWLINE#", "#UNINDENT#", "#UNINDENT#", "return", "output"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [2, 8, 30, 28, 36, 40, 41, 52, 55, 4, 12, 18, 22, 46, 53, 60, 6, 11, 14, 17, 20, 24, 25, 26, 31, 34, 38, 44, 48]}}
{"prediction": {"error_location": 0.47694131731987, "repair_targets": [], "repair_candidates": [0.16750568151474, 0.03370927646756172, 0.02716609463095665, 0.059551265090703964, 0.01654907688498497, 0.018740631639957428, 0.01152346283197403, 0.005350408609956503, 0.0014575985260307789, 0.0029655019752681255, 0.00594044616445899, 0.005535338539630175, 0.006208889186382294, 0.020219041034579277, 0.241053506731987, 0.016262540593743324, 0.018651099875569344, 0.0023026615381240845, 0.06229453906416893, 0.016471542418003082, 0.05087574943900108, 0.16004392504692078, 0.009036422707140446, 0.0009657240589149296, 0.008952637203037739, 0.011314425617456436, 0.018906135112047195, 4.492901643970981e-05, 0.0004014096048194915], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 16:16:40.153869", "n_pass": [347, 46, 42], "n_token": 59, "loss": [0.7437022924423218, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def translate(", "self", "#INDENT#", "output", "=", "node", "in", "self", "isinstance", "(", "node", "output", "+=", "node", "replace", "(", "node", "output", "(", "node", "#INDENT#", "output", "+=", "node", "node", "node", "#INDENT#", "regex", "=", "self", "node", ".", "macro", "node", "#INDENT#", "regex", "=", "node", ".", "regex", "regex", "=", "if", "node", "#INDENT#", "output", "(", "node", ",", "regex", "output", "+=", "regex", "#NEWLINE#", "#UNINDENT#", "#UNINDENT#", "return", "output"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [2, 8, 30, 28, 36, 40, 41, 50, 53, 4, 12, 18, 22, 46, 51, 58, 6, 11, 14, 17, 20, 24, 25, 26, 31, 34, 38, 44, 48]}}
{"prediction": {"error_location": 0.4753507673740387, "repair_targets": [], "repair_candidates": [0.1733379364013672, 0.03336381912231445, 0.03223432973027229, 0.06693147867918015, 0.020897720009088516, 0.02498183399438858, 0.01461806520819664, 0.0065860627219080925, 0.0018373399507254362, 0.0049121445044875145, 0.008414535783231258, 0.006882145069539547, 0.00839228741824627, 0.028763236477971077, 0.2056228518486023, 0.03506262227892876, 0.021644072607159615, 0.0026528413873165846, 0.08589513599872589, 0.02847949229180813, 0.04401947557926178, 0.08234241604804993, 0.008519746363162994, 0.0009786547161638737, 0.0044418503530323505, 0.003090095706284046, 0.043483760207891464, 3.122715133940801e-05, 0.0015828879550099373], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 16:16:40.225107", "n_pass": [351, 47, 43], "n_token": 57, "loss": [0.7279242277145386, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def translate(", "self", "#INDENT#", "output", "=", "node", "in", "self", "isinstance", "(", "node", "output", "+=", "node", "replace", "(", "node", "output", "(", "node", "#INDENT#", "output", "+=", "node", "node", "node", "#INDENT#", "regex", "=", "self", "node", ".", "macro", "node", "#INDENT#", "regex", "=", "node", ".", "regex", "regex", "=", "if", "node", "#INDENT#", "output", "(", "node", ",", "regex", "output", "+=", "regex", "#NEWLINE#", "return", "output"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [2, 8, 30, 28, 36, 40, 41, 50, 53, 4, 12, 18, 22, 46, 51, 56, 6, 11, 14, 17, 20, 24, 25, 26, 31, 34, 38, 44, 48]}}
{"prediction": {"error_location": 0.4829104244709015, "repair_targets": [], "repair_candidates": [0.15111783146858215, 0.031292542815208435, 0.03406514227390289, 0.07199566066265106, 0.024509454146027565, 0.02440951205790043, 0.011989197693765163, 0.005554618779569864, 0.001466660643927753, 0.005386510398238897, 0.00999676063656807, 0.007649302948266268, 0.0087966313585639, 0.030766740441322327, 0.18377503752708435, 0.03731730580329895, 0.02258884720504284, 0.0023256787098944187, 0.09388255327939987, 0.031116051599383354, 0.03832031786441803, 0.10611394047737122, 0.010604849085211754, 0.0012925238115713, 0.005212212912738323, 0.005272458307445049, 0.0400259904563427, 7.2596209065523e-05, 0.0030831315089017153], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 16:16:40.368058", "n_pass": [356, 49, 44], "n_token": 56, "loss": [1.1544597148895264, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def translate(", "self", "output", "=", "node", "in", "self", "isinstance", "(", "node", "output", "+=", "node", "replace", "(", "node", "output", "(", "node", "#INDENT#", "output", "+=", "node", "node", "node", "#INDENT#", "regex", "=", "self", "node", ".", "macro", "node", "#INDENT#", "regex", "=", "node", ".", "regex", "regex", "=", "if", "node", "#INDENT#", "output", "(", "node", ",", "regex", "output", "+=", "regex", "#NEWLINE#", "return", "output"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [2, 7, 29, 27, 35, 39, 40, 49, 52, 3, 11, 17, 21, 45, 50, 55, 5, 10, 13, 16, 19, 23, 24, 25, 30, 33, 37, 43, 47]}}
{"prediction": {"error_location": 0.31522780656814575, "repair_targets": [], "repair_candidates": [0.15791232883930206, 0.025079447776079178, 0.019726166501641273, 0.13339154422283173, 0.011894624680280685, 0.01550982054322958, 0.014246812090277672, 0.0033041127026081085, 0.0005647141952067614, 0.003015093971043825, 0.006031358148902655, 0.004418059252202511, 0.005316009745001793, 0.021105600520968437, 0.23828792572021484, 0.02458246797323227, 0.020564496517181396, 0.0015644255327060819, 0.11182944476604462, 0.02622913010418415, 0.030536381527781487, 0.07115430384874344, 0.007237933110445738, 0.0009230463765561581, 0.00894099660217762, 0.007814008742570877, 0.028012186288833618, 3.284408012405038e-05, 0.0007746596238575876], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 16:16:40.439192", "n_pass": [358, 50, 45], "n_token": 55, "loss": [1.3525211811065674, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def translate(", "self", "output", "node", "in", "self", "isinstance", "(", "node", "output", "+=", "node", "replace", "(", "node", "output", "(", "node", "#INDENT#", "output", "+=", "node", "node", "node", "#INDENT#", "regex", "=", "self", "node", ".", "macro", "node", "#INDENT#", "regex", "=", "node", ".", "regex", "regex", "=", "if", "node", "#INDENT#", "output", "(", "node", ",", "regex", "output", "+=", "regex", "#NEWLINE#", "return", "output"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [2, 6, 28, 26, 34, 38, 39, 48, 51, 3, 10, 16, 20, 44, 49, 54, 4, 9, 12, 15, 18, 22, 23, 24, 29, 32, 36, 42, 46]}}
{"prediction": {"error_location": 0.25858747959136963, "repair_targets": [], "repair_candidates": [0.14557476341724396, 0.019014308229088783, 0.01765388436615467, 0.139384463429451, 0.011450582183897495, 0.011976025998592377, 0.009740070439875126, 0.0033199077006429434, 0.0007959902286529541, 0.001896555069833994, 0.0061729298904538155, 0.005361491348594427, 0.005416460335254669, 0.01726282201707363, 0.2584708631038666, 0.019229862838983536, 0.010634941048920155, 0.0014824391109868884, 0.14691007137298584, 0.018671678379178047, 0.03015812113881111, 0.07610210031270981, 0.00558479456230998, 0.0009222850203514099, 0.008249128237366676, 0.010560243390500546, 0.016391603276133537, 6.594256410608068e-05, 0.001545641804113984], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 16:16:40.510163", "n_pass": [360, 51, 46], "n_token": 54, "loss": [1.0885971784591675, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def translate(", "self", "output", "node", "self", "isinstance", "(", "node", "output", "+=", "node", "replace", "(", "node", "output", "(", "node", "#INDENT#", "output", "+=", "node", "node", "node", "#INDENT#", "regex", "=", "self", "node", ".", "macro", "node", "#INDENT#", "regex", "=", "node", ".", "regex", "regex", "=", "if", "node", "#INDENT#", "output", "(", "node", ",", "regex", "output", "+=", "regex", "#NEWLINE#", "return", "output"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [2, 5, 27, 25, 33, 37, 38, 47, 50, 3, 9, 15, 19, 43, 48, 53, 4, 8, 11, 14, 17, 21, 22, 23, 28, 31, 35, 41, 45]}}
{"prediction": {"error_location": 0.33668845891952515, "repair_targets": [], "repair_candidates": [0.15496735274791718, 0.021521473303437233, 0.023754386231303215, 0.11545123904943466, 0.019391492009162903, 0.01576516591012478, 0.01070255134254694, 0.005591487046331167, 0.001549357664771378, 0.0017945356667041779, 0.009617751464247704, 0.010392379015684128, 0.009435592219233513, 0.022910602390766144, 0.2110029011964798, 0.021063603460788727, 0.023027094081044197, 0.002366744913160801, 0.15071247518062592, 0.03844975307583809, 0.025705156847834587, 0.05546649545431137, 0.01072572823613882, 0.0005911170737817883, 0.014328639954328537, 0.003765739733353257, 0.01676253043115139, 7.685559103265405e-05, 0.0031097400933504105], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 16:16:40.582093", "n_pass": [362, 52, 47], "n_token": 53, "loss": [0.9135886430740356, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def translate(", "self", "output", "node", "self", "(", "node", "output", "+=", "node", "replace", "(", "node", "output", "(", "node", "#INDENT#", "output", "+=", "node", "node", "node", "#INDENT#", "regex", "=", "self", "node", ".", "macro", "node", "#INDENT#", "regex", "=", "node", ".", "regex", "regex", "=", "if", "node", "#INDENT#", "output", "(", "node", ",", "regex", "output", "+=", "regex", "#NEWLINE#", "return", "output"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [2, 5, 26, 24, 32, 36, 37, 46, 49, 3, 8, 14, 18, 42, 47, 52, 4, 7, 10, 13, 16, 20, 21, 22, 27, 30, 34, 40, 44]}}
{"prediction": {"error_location": 0.40108224749565125, "repair_targets": [], "repair_candidates": [0.13712847232818604, 0.03416282683610916, 0.01597953401505947, 0.06599001586437225, 0.018646826967597008, 0.03215314447879791, 0.013534008525311947, 0.004733945708721876, 0.001789070083759725, 0.0018612354760989547, 0.016730016097426414, 0.014568207785487175, 0.011614033952355385, 0.020258750766515732, 0.2185376137495041, 0.021272020414471626, 0.015148419886827469, 0.002209009835496545, 0.16030080616474152, 0.023038901388645172, 0.04418547451496124, 0.06770903617143631, 0.005837620235979557, 0.0010422932682558894, 0.013208367861807346, 0.0058361864648759365, 0.02767908200621605, 8.535887900507078e-05, 0.004759778268635273], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 16:16:40.653167", "n_pass": [363, 53, 48], "n_token": 52, "loss": [0.9725638031959534, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def translate(", "self", "output", "node", "self", "node", "output", "+=", "node", "replace", "(", "node", "output", "(", "node", "#INDENT#", "output", "+=", "node", "node", "node", "#INDENT#", "regex", "=", "self", "node", ".", "macro", "node", "#INDENT#", "regex", "=", "node", ".", "regex", "regex", "=", "if", "node", "#INDENT#", "output", "(", "node", ",", "regex", "output", "+=", "regex", "#NEWLINE#", "return", "output"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [2, 5, 25, 23, 31, 35, 36, 45, 48, 3, 7, 13, 17, 41, 46, 51, 4, 6, 9, 12, 15, 19, 20, 21, 26, 29, 33, 39, 43]}}
{"prediction": {"error_location": 0.37811243534088135, "repair_targets": [], "repair_candidates": [0.09313695132732391, 0.041566092520952225, 0.019955528900027275, 0.024767540395259857, 0.007789065130054951, 0.03713002800941467, 0.018282096832990646, 0.004429282620549202, 0.000976736075244844, 0.0013169386656954885, 0.013428354635834694, 0.008729892782866955, 0.007519762963056564, 0.017914345487952232, 0.25965186953544617, 0.018724758177995682, 0.010129093192517757, 0.0027345267590135336, 0.14714564383029938, 0.024236587807536125, 0.07388247549533844, 0.10007425397634506, 0.0059812916442751884, 0.0021246704272925854, 0.0195129606872797, 0.008996935561299324, 0.025645164772868156, 0.00027310760924592614, 0.0039440905675292015], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 16:16:40.938043", "n_pass": [392, 57, 49], "n_token": 51, "loss": [1.0459281206130981, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "self", "output", "node", "self", "node", "output", "+=", "node", "replace", "(", "node", "output", "(", "node", "#INDENT#", "output", "+=", "node", "node", "node", "#INDENT#", "regex", "=", "self", "node", ".", "macro", "node", "#INDENT#", "regex", "=", "node", ".", "regex", "regex", "=", "if", "node", "#INDENT#", "output", "(", "node", ",", "regex", "output", "+=", "regex", "#NEWLINE#", "return", "output"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [1, 4, 24, 22, 30, 34, 35, 44, 47, 2, 6, 12, 16, 40, 45, 50, 3, 5, 8, 11, 14, 18, 19, 20, 25, 28, 32, 38, 42]}}
{"prediction": {"error_location": 0.3513655662536621, "repair_targets": [], "repair_candidates": [0.008214232511818409, 0.027747808024287224, 0.016640588641166687, 0.00820594746619463, 0.006753482390195131, 0.03379279002547264, 0.01561738085001707, 0.0037571717984974384, 0.0003217271587345749, 0.0013101936783641577, 0.008710750378668308, 0.007184004411101341, 0.006026874762028456, 0.015616360120475292, 0.2854454219341278, 0.012469626031816006, 0.009427035227417946, 0.0025477344170212746, 0.1455516368150711, 0.02756338380277157, 0.11323369294404984, 0.14910462498664856, 0.0057573458179831505, 0.001048730337060988, 0.01999838836491108, 0.012083354406058788, 0.052423831075429916, 0.00027323749964125454, 0.003172663738951087], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 16:16:41.010477", "n_pass": [399, 58, 50], "n_token": 50, "loss": [1.1649224758148193, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "self", "output", "node", "self", "node", "output", "node", "replace", "(", "node", "output", "(", "node", "#INDENT#", "output", "+=", "node", "node", "node", "#INDENT#", "regex", "=", "self", "node", ".", "macro", "node", "#INDENT#", "regex", "=", "node", ".", "regex", "regex", "=", "if", "node", "#INDENT#", "output", "(", "node", ",", "regex", "output", "+=", "regex", "#NEWLINE#", "return", "output"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [1, 4, 23, 21, 29, 33, 34, 43, 46, 2, 6, 11, 15, 39, 44, 49, 3, 5, 7, 10, 13, 17, 18, 19, 24, 27, 31, 37, 41]}}
{"prediction": {"error_location": 0.3119468688964844, "repair_targets": [], "repair_candidates": [0.008865181356668472, 0.015476849861443043, 0.004981979727745056, 0.005528767127543688, 0.008277024142444134, 0.00042699332698248327, 0.015840092673897743, 0.004690192639827728, 0.0011510496260598302, 0.0009577824384905398, 0.00889689102768898, 0.004080336540937424, 0.0042758663184940815, 0.012731323018670082, 0.2891557812690735, 0.011112497188150883, 0.0032964348793029785, 0.002694561146199703, 0.16167892515659332, 0.024118391796946526, 0.12810677289962769, 0.18940304219722748, 0.0022968787234276533, 0.0010484564118087292, 0.020402997732162476, 0.006994166877120733, 0.061539385467767715, 0.00018284078396391124, 0.0017885551787912846], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 16:16:41.081639", "n_pass": [401, 59, 51], "n_token": 49, "loss": [0.8310984969139099, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "self", "output", "node", "self", "node", "output", "node", "(", "node", "output", "(", "node", "#INDENT#", "output", "+=", "node", "node", "node", "#INDENT#", "regex", "=", "self", "node", ".", "macro", "node", "#INDENT#", "regex", "=", "node", ".", "regex", "regex", "=", "if", "node", "#INDENT#", "output", "(", "node", ",", "regex", "output", "+=", "regex", "#NEWLINE#", "return", "output"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [1, 4, 22, 20, 28, 32, 33, 42, 45, 2, 6, 10, 14, 38, 43, 48, 3, 5, 7, 9, 12, 16, 17, 18, 23, 26, 30, 36, 40]}}
{"prediction": {"error_location": 0.43557050824165344, "repair_targets": [], "repair_candidates": [0.009677929803729057, 0.02881571277976036, 0.0018317765789106488, 0.01745934598147869, 0.014944600872695446, 0.012204409576952457, 0.010071891359984875, 0.007574452552944422, 0.005259866360574961, 0.001123403781093657, 0.015176579356193542, 0.006731174420565367, 0.004829679150134325, 0.022781234234571457, 0.24370743334293365, 0.01745930127799511, 0.004980346187949181, 0.0021659028716385365, 0.09054549783468246, 0.016440976411104202, 0.11963734775781631, 0.1555902510881424, 0.001738492283038795, 0.0006778989336453378, 0.005460178945213556, 0.006661974359303713, 0.17529627680778503, 5.368288475438021e-05, 0.001102308975532651], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 16:16:41.152452", "n_pass": [402, 60, 52], "n_token": 48, "loss": [0.7197693586349487, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "self", "output", "node", "self", "node", "output", "node", "node", "output", "(", "node", "#INDENT#", "output", "+=", "node", "node", "node", "#INDENT#", "regex", "=", "self", "node", ".", "macro", "node", "#INDENT#", "regex", "=", "node", ".", "regex", "regex", "=", "if", "node", "#INDENT#", "output", "(", "node", ",", "regex", "output", "+=", "regex", "#NEWLINE#", "return", "output"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [1, 4, 21, 19, 27, 31, 32, 41, 44, 2, 6, 9, 13, 37, 42, 47, 3, 5, 7, 8, 11, 15, 16, 17, 22, 25, 29, 35, 39]}}
{"prediction": {"error_location": 0.48686453700065613, "repair_targets": [], "repair_candidates": [0.007115773856639862, 0.008101732470095158, 0.005489945411682129, 0.037943996489048004, 0.01873278059065342, 0.025664670392870903, 0.013531655073165894, 0.0133387865498662, 0.009135697036981583, 0.004431650973856449, 0.01513277180492878, 0.007212475407868624, 0.005507368594408035, 0.02011224254965782, 0.19145436584949493, 0.002258435357362032, 0.004276071209460497, 0.006957074627280235, 0.10549947619438171, 0.022540176287293434, 0.16776634752750397, 0.18968965113162994, 0.007107322569936514, 0.0020047889556735754, 0.011721744202077389, 0.007028118707239628, 0.08873249590396881, 6.914592086104676e-05, 0.0014432222815230489], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 16:16:41.297798", "n_pass": [475, 62, 53], "n_token": 47, "loss": [0.8095662593841553, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "self", "output", "node", "self", "node", "output", "node", "node", "output", "(", "node", "#INDENT#", "output", "+=", "node", "node", "node", "regex", "=", "self", "node", ".", "macro", "node", "#INDENT#", "regex", "=", "node", ".", "regex", "regex", "=", "if", "node", "#INDENT#", "output", "(", "node", ",", "regex", "output", "+=", "regex", "#NEWLINE#", "return", "output"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [1, 4, 20, 18, 26, 30, 31, 40, 43, 2, 6, 9, 13, 36, 41, 46, 3, 5, 7, 8, 11, 15, 16, 17, 21, 24, 28, 34, 38]}}
{"prediction": {"error_location": 0.44505104422569275, "repair_targets": [], "repair_candidates": [0.013298425823450089, 0.012612754479050636, 0.005603207275271416, 0.008119146339595318, 0.01960710808634758, 0.015717003494501114, 0.022055521607398987, 0.015030735172331333, 0.01183169987052679, 0.008160638622939587, 0.02657601423561573, 0.03722125664353371, 0.03082454763352871, 0.03198679909110069, 0.3304081857204437, 0.005249200854450464, 0.006406525615602732, 0.011655794456601143, 0.038689985871315, 0.025418348610401154, 0.08982275426387787, 0.10803239047527313, 0.005023537669330835, 0.001827384578064084, 0.009119434282183647, 0.0008629373041912913, 0.1040581539273262, 8.43274756334722e-05, 0.004696134012192488], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 16:16:41.510112", "n_pass": [480, 65, 54], "n_token": 46, "loss": [0.664023756980896, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "self", "output", "node", "self", "node", "output", "node", "node", "output", "(", "node", "#INDENT#", "output", "+=", "node", "node", "node", "regex", "=", "self", "node", ".", "node", "#INDENT#", "regex", "=", "node", ".", "regex", "regex", "=", "if", "node", "#INDENT#", "output", "(", "node", ",", "regex", "output", "+=", "regex", "#NEWLINE#", "return", "output"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [1, 4, 20, 18, 25, 29, 30, 39, 42, 2, 6, 9, 13, 35, 40, 45, 3, 5, 7, 8, 11, 15, 16, 17, 21, 23, 27, 33, 37]}}
{"prediction": {"error_location": 0.5147758722305298, "repair_targets": [], "repair_candidates": [0.011640436016023159, 0.013520544394850731, 0.009502609260380268, 0.008394062519073486, 0.02215511165559292, 0.025089873000979424, 0.012623779475688934, 0.0123861413449049, 0.015441667288541794, 0.007272687274962664, 0.03236791491508484, 0.021994678303599358, 0.02808365970849991, 0.028978455811738968, 0.1984076201915741, 0.006804943084716797, 0.006500100251287222, 0.0043098581954836845, 0.04265710338950157, 0.01879057288169861, 0.08764079213142395, 0.09452047944068909, 0.005168462637811899, 0.0016483879880979657, 0.010661444626748562, 0.0015112918335944414, 0.26863670349121094, 6.462673627538607e-05, 0.003225976135581732], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 16:16:41.580874", "n_pass": [482, 66, 55], "n_token": 45, "loss": [0.7235006093978882, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "self", "output", "node", "self", "node", "output", "node", "node", "output", "(", "node", "#INDENT#", "output", "+=", "node", "node", "node", "regex", "=", "self", "node", ".", "node", "regex", "=", "node", ".", "regex", "regex", "=", "if", "node", "#INDENT#", "output", "(", "node", ",", "regex", "output", "+=", "regex", "#NEWLINE#", "return", "output"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [1, 4, 20, 18, 24, 28, 29, 38, 41, 2, 6, 9, 13, 34, 39, 44, 3, 5, 7, 8, 11, 15, 16, 17, 21, 23, 26, 32, 36]}}
{"prediction": {"error_location": 0.4850512444972992, "repair_targets": [], "repair_candidates": [0.02118084393441677, 0.013799963518977165, 0.004333969205617905, 0.08780371397733688, 0.006715771276503801, 0.01815153658390045, 0.0050022355280816555, 0.008186197839677334, 0.009879294782876968, 0.0030241385102272034, 0.021945586428046227, 0.0094304783269763, 0.018832748755812645, 0.01556408777832985, 0.0110033443197608, 0.03456716984510422, 0.006603202782571316, 0.002963197883218527, 0.03057122975587845, 0.0014738431200385094, 0.033473748713731766, 0.04234769567847252, 0.004092903807759285, 0.002100544748827815, 0.009111632592976093, 0.0020309998653829098, 0.5740525722503662, 3.736171856871806e-05, 0.001719999243505299], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 16:16:41.653360", "n_pass": [484, 67, 56], "n_token": 44, "loss": [0.6386753916740417, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "self", "output", "node", "self", "node", "output", "node", "node", "output", "(", "node", "#INDENT#", "output", "+=", "node", "node", "node", "regex", "=", "self", "node", ".", "node", "regex", "node", ".", "regex", "regex", "=", "if", "node", "#INDENT#", "output", "(", "node", ",", "regex", "output", "+=", "regex", "#NEWLINE#", "return", "output"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [1, 4, 20, 18, 24, 27, 28, 37, 40, 2, 6, 9, 13, 33, 38, 43, 3, 5, 7, 8, 11, 15, 16, 17, 21, 23, 25, 31, 35]}}
{"prediction": {"error_location": 0.5279913544654846, "repair_targets": [], "repair_candidates": [0.021710122004151344, 0.023219648748636246, 0.0030039045959711075, 0.025697782635688782, 0.004658243153244257, 0.07900933176279068, 0.0025196278002113104, 0.005427791737020016, 0.01442701555788517, 0.0016051118727773428, 0.04571084305644035, 0.009724969044327736, 0.018285537138581276, 0.015062139369547367, 0.011348570697009563, 0.052929118275642395, 0.0005617625429295003, 0.002160190138965845, 0.020032916218042374, 0.006202091462910175, 0.06469985842704773, 0.09413495659828186, 0.003928425256162882, 0.0013998986687511206, 0.008269901387393475, 0.002641824306920171, 0.4601094126701355, 4.358417936600745e-05, 0.00147545849904418], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 16:16:41.723771", "n_pass": [486, 68, 57], "n_token": 43, "loss": [0.7063599228858948, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "self", "output", "node", "self", "node", "output", "node", "node", "output", "(", "node", "#INDENT#", "output", "+=", "node", "node", "node", "regex", "=", "self", "node", ".", "node", "regex", "node", "regex", "regex", "=", "if", "node", "#INDENT#", "output", "(", "node", ",", "regex", "output", "+=", "regex", "#NEWLINE#", "return", "output"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [1, 4, 20, 18, 24, 26, 27, 36, 39, 2, 6, 9, 13, 32, 37, 42, 3, 5, 7, 8, 11, 15, 16, 17, 21, 23, 25, 30, 34]}}
{"prediction": {"error_location": 0.4934370815753937, "repair_targets": [], "repair_candidates": [0.012459362857043743, 0.015528508462011814, 0.0019871152471750975, 0.024115514010190964, 0.002460010349750519, 0.055787865072488785, 0.002669311361387372, 0.0017684476915746927, 0.007410738617181778, 0.00027063157176598907, 0.022844843566417694, 0.0022547899279743433, 0.008997446857392788, 0.007238544523715973, 0.008836721070110798, 0.020470136776566505, 0.00012923212489113212, 0.0007289513014256954, 0.02111320197582245, 0.006696193944662809, 0.010704824700951576, 0.009109359234571457, 0.0012168784160166979, 0.0004623586719390005, 0.0029726619832217693, 0.0011117046233266592, 0.7501656413078308, 2.577506711531896e-05, 0.00046321400441229343], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 16:16:41.794450", "n_pass": [489, 69, 58], "n_token": 42, "loss": [0.9208092093467712, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "self", "output", "node", "self", "node", "output", "node", "node", "output", "(", "node", "#INDENT#", "output", "+=", "node", "node", "node", "regex", "=", "self", "node", ".", "node", "regex", "node", "regex", "regex", "if", "node", "#INDENT#", "output", "(", "node", ",", "regex", "output", "+=", "regex", "#NEWLINE#", "return", "output"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [1, 4, 20, 18, 24, 26, 27, 35, 38, 2, 6, 9, 13, 31, 36, 41, 3, 5, 7, 8, 11, 15, 16, 17, 21, 23, 25, 29, 33]}}
{"prediction": {"error_location": 0.3981967270374298, "repair_targets": [], "repair_candidates": [0.019425038248300552, 0.015306069515645504, 0.004289272241294384, 0.22698558866977692, 0.009668960236012936, 0.015392066910862923, 0.007969433441758156, 0.003146752016618848, 0.00994675699621439, 0.0010896367020905018, 0.0193389393389225, 0.0051357923075556755, 0.019542725756764412, 0.015908535569906235, 0.01589323952794075, 0.31844326853752136, 0.0002610717492643744, 0.0020170300267636776, 0.02152351103723049, 0.012181505560874939, 0.02045384608209133, 0.01958344876766205, 0.0018697474151849747, 0.0004265792667865753, 0.0025948279071599245, 0.006527991965413094, 0.20354774594306946, 9.15879281819798e-05, 0.0014390833675861359], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 16:16:41.865850", "n_pass": [490, 70, 59], "n_token": 41, "loss": [0.8778564929962158, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "self", "output", "node", "self", "node", "output", "node", "node", "output", "(", "node", "#INDENT#", "output", "+=", "node", "node", "node", "regex", "=", "self", "node", ".", "node", "regex", "node", "regex", "regex", "node", "#INDENT#", "output", "(", "node", ",", "regex", "output", "+=", "regex", "#NEWLINE#", "return", "output"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [1, 4, 20, 18, 24, 26, 27, 34, 37, 2, 6, 9, 13, 30, 35, 40, 3, 5, 7, 8, 11, 15, 16, 17, 21, 23, 25, 28, 32]}}
{"prediction": {"error_location": 0.4156729578971863, "repair_targets": [], "repair_candidates": [0.02081853710114956, 0.019559649750590324, 0.0070961047895252705, 0.04336179047822952, 0.009011899121105671, 0.034717049449682236, 0.005645208992063999, 0.0066085499711334705, 0.014907452277839184, 0.010193470865488052, 0.03174477815628052, 0.01637483574450016, 0.03080717660486698, 0.02538125216960907, 0.0060181403532624245, 0.2515307068824768, 0.0003632545121945441, 0.003364220494404435, 0.010906338691711426, 0.016071921214461327, 0.02166787162423134, 0.00791206769645214, 0.018265603110194206, 0.0004591700271703303, 0.004450483713299036, 0.004622852895408869, 0.3751697540283203, 0.00012067023635609075, 0.002849219599738717], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 16:16:41.938825", "n_pass": [492, 71, 60], "n_token": 40, "loss": [0.42775654792785645, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "self", "output", "node", "self", "node", "output", "node", "node", "output", "(", "node", "#INDENT#", "output", "+=", "node", "node", "node", "regex", "=", "self", "node", ".", "node", "regex", "node", "regex", "regex", "node", "output", "(", "node", ",", "regex", "output", "+=", "regex", "#NEWLINE#", "return", "output"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [1, 4, 20, 18, 24, 26, 27, 33, 36, 2, 6, 9, 13, 29, 34, 39, 3, 5, 7, 8, 11, 15, 16, 17, 21, 23, 25, 28, 31]}}
{"prediction": {"error_location": 0.6519700884819031, "repair_targets": [], "repair_candidates": [0.01782022789120674, 0.02037237025797367, 0.003761473810300231, 0.006500688381493092, 0.0017694724956527352, 0.003928884863853455, 0.0013762902235612273, 0.0020861097145825624, 0.003349249716848135, 0.0008200674201361835, 0.006404801271855831, 0.001965730916708708, 0.011324023827910423, 0.008909604512155056, 0.0009846034226939082, 0.0019258892862126231, 0.0003462629101704806, 0.001268958207219839, 0.003943054936826229, 0.00603786064311862, 0.009869522415101528, 0.0009661586373113096, 0.0018871267093345523, 0.0024395326618105173, 0.0011924243299290538, 0.0007843072526156902, 0.8776763081550598, 3.11725634674076e-05, 0.0002579638676252216], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 16:16:42.009322", "n_pass": [494, 72, 61], "n_token": 39, "loss": [0.8250011801719666, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "self", "output", "node", "self", "node", "output", "node", "node", "output", "(", "node", "#INDENT#", "output", "+=", "node", "node", "node", "regex", "=", "self", "node", ".", "node", "regex", "node", "regex", "regex", "node", "output", "node", ",", "regex", "output", "+=", "regex", "#NEWLINE#", "return", "output"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [1, 4, 20, 18, 24, 26, 27, 32, 35, 2, 6, 9, 13, 29, 33, 38, 3, 5, 7, 8, 11, 15, 16, 17, 21, 23, 25, 28, 30]}}
{"prediction": {"error_location": 0.43823450803756714, "repair_targets": [], "repair_candidates": [0.024226054549217224, 0.009662630967795849, 0.003546568099409342, 0.06759924441576004, 0.003718317486345768, 0.01865685172379017, 0.007101790048182011, 0.004900440573692322, 0.009703557938337326, 0.008554695174098015, 0.014175946824252605, 0.002903224201872945, 0.011125040240585804, 0.007988321594893932, 0.004505918826907873, 0.6513844132423401, 0.00015658298798371106, 0.0019804092589765787, 0.01014116033911705, 0.005363182630389929, 0.052560608834028244, 0.05677665024995804, 0.002607649192214012, 0.002042328240349889, 0.005771799013018608, 0.006667752284556627, 0.005653354339301586, 0.00013057843898423016, 0.00039496045792475343], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 16:16:42.080431", "n_pass": [496, 73, 62], "n_token": 38, "loss": [0.8854050040245056, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "self", "output", "node", "self", "node", "output", "node", "node", "output", "(", "node", "#INDENT#", "output", "+=", "node", "node", "node", "regex", "=", "self", "node", ".", "node", "regex", "node", "regex", "regex", "node", "output", "node", "regex", "output", "+=", "regex", "#NEWLINE#", "return", "output"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [1, 4, 20, 18, 24, 26, 27, 31, 34, 2, 6, 9, 13, 29, 32, 37, 3, 5, 7, 8, 11, 15, 16, 17, 21, 23, 25, 28, 30]}}
{"prediction": {"error_location": 0.4125470519065857, "repair_targets": [], "repair_candidates": [0.016663188114762306, 0.03391041234135628, 0.007042102050036192, 0.049020830541849136, 0.005938338115811348, 0.008380498737096786, 0.005208348855376244, 0.005306611303240061, 0.008578872308135033, 0.003219492733478546, 0.016314487904310226, 0.03812878578901291, 0.13065873086452484, 0.13825297355651855, 0.001837647520005703, 0.08413469046354294, 0.00020684133050963283, 0.0027706476394087076, 0.0032724321354180574, 0.007501297164708376, 0.004091006703674793, 0.009199322201311588, 0.011512449942529202, 0.013723866082727909, 0.02133091166615486, 0.0006986980442889035, 0.37244656682014465, 4.6753189963055775e-05, 0.0006031692028045654], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 16:16:42.151233", "n_pass": [499, 74, 63], "n_token": 37, "loss": [0.486922949552536, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "self", "output", "node", "self", "node", "output", "node", "node", "output", "(", "node", "#INDENT#", "output", "+=", "node", "node", "node", "regex", "=", "self", "node", ".", "node", "regex", "node", "regex", "regex", "node", "output", "node", "regex", "output", "regex", "#NEWLINE#", "return", "output"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [1, 4, 20, 18, 24, 26, 27, 31, 33, 2, 6, 9, 13, 29, 32, 36, 3, 5, 7, 8, 11, 15, 16, 17, 21, 23, 25, 28, 30]}}
{"prediction": {"error_location": 0.6145143508911133, "repair_targets": [], "repair_candidates": [0.05680239945650101, 0.04496689885854721, 0.011494322679936886, 0.1398276835680008, 0.019050924107432365, 0.012270729057490826, 0.0071035451255738735, 0.009638553485274315, 0.015014123171567917, 0.0016972026787698269, 0.0398135706782341, 0.03458811342716217, 0.03248187527060509, 0.03526471182703972, 0.013020644895732403, 0.16139408946037292, 0.0007845779764465988, 0.005420707166194916, 0.01696721278131008, 0.01528318040072918, 0.04216572642326355, 0.03592226281762123, 0.02558869495987892, 0.010296548716723919, 0.010389267466962337, 0.016575124114751816, 0.0024708088021725416, 0.1830872893333435, 0.0006192268920131028], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 16:16:42.223946", "n_pass": [501, 75, 64], "n_token": 36, "loss": [0.5376683473587036, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "self", "output", "node", "self", "node", "output", "node", "node", "output", "(", "node", "#INDENT#", "output", "+=", "node", "node", "node", "regex", "=", "self", "node", ".", "node", "regex", "node", "regex", "regex", "node", "output", "node", "regex", "output", "regex", "return", "output"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [1, 4, 20, 18, 24, 26, 27, 31, 33, 2, 6, 9, 13, 29, 32, 35, 3, 5, 7, 8, 11, 15, 16, 17, 21, 23, 25, 28, 30]}}
{"prediction": {"error_location": 0.5841085314750671, "repair_targets": [], "repair_candidates": [0.028986388817429543, 0.02578313648700714, 0.008452026173472404, 0.11061699688434601, 0.006603870075196028, 0.005608903709799051, 0.009814680553972721, 0.017671022564172745, 0.010996954515576363, 0.004699542187154293, 0.006210308521986008, 0.09901630878448486, 0.2469426393508911, 0.2241661697626114, 0.004057072103023529, 0.09421105682849884, 0.000308997870888561, 0.0031623111572116613, 0.0022010093089193106, 0.01132762897759676, 0.007894851267337799, 0.0044922963716089725, 0.009815200231969357, 0.015000537969172001, 0.029488688334822655, 0.0017242473550140858, 0.007415450178086758, 0.0002906649897340685, 0.003041141666471958], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 16:16:42.294775", "n_pass": [502, 76, 65], "n_token": 35, "loss": [0.1575237214565277, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "self", "output", "node", "self", "node", "output", "node", "node", "output", "(", "node", "#INDENT#", "output", "+=", "node", "node", "node", "regex", "=", "self", "node", ".", "node", "regex", "node", "regex", "regex", "node", "output", "node", "regex", "output", "regex", "output"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [1, 4, 20, 18, 24, 26, 27, 31, 33, 2, 6, 9, 13, 29, 32, 34, 3, 5, 7, 8, 11, 15, 16, 17, 21, 23, 25, 28, 30]}}
{"prediction": {"error_location": 0.8542566299438477, "repair_targets": [], "repair_candidates": [0.061841558665037155, 0.03386813402175903, 0.00293510383926332, 0.09747786074876785, 0.0016110504511743784, 0.013980453833937645, 0.0017136594979092479, 0.0013534704921767116, 0.029733313247561455, 0.00015050127694848925, 0.00942493136972189, 0.0031984278466552496, 0.0035750761162489653, 0.007722224108874798, 0.5194923877716064, 0.09620559960603714, 0.0001170937466667965, 0.0009999721078202128, 0.015217377804219723, 0.002884624060243368, 0.032336704432964325, 0.005095465108752251, 0.0032954346388578415, 0.018124490976333618, 0.003124506212770939, 0.0043965596705675125, 0.020227378234267235, 0.0037651737220585346, 0.006131486501544714], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 16:16:42.436253", "n_pass": [516, 78, 66], "n_token": 34, "loss": [0.39436689019203186, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "self", "output", "node", "self", "node", "output", "node", "node", "output", "(", "node", "output", "+=", "node", "node", "node", "regex", "=", "self", "node", ".", "node", "regex", "node", "regex", "regex", "node", "output", "node", "regex", "output", "regex", "output"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [1, 4, 19, 17, 23, 25, 26, 30, 32, 2, 6, 9, 12, 28, 31, 33, 3, 5, 7, 8, 11, 14, 15, 16, 20, 22, 24, 27, 29]}}
{"prediction": {"error_location": 0.6741067171096802, "repair_targets": [], "repair_candidates": [0.01783016137778759, 0.00836834404617548, 0.0011199262226000428, 0.06789910793304443, 0.0006657724734395742, 0.011095806024968624, 0.0015003057196736336, 0.0013561761006712914, 0.03573484718799591, 0.0029229470528662205, 0.6578789353370667, 0.0035984679125249386, 0.0037515300791710615, 0.0036177528090775013, 0.06362484395503998, 0.06541179120540619, 0.00015620264457538724, 0.0005250064423307776, 0.0029465225525200367, 0.0013521017972379923, 0.006007807329297066, 0.001190071925520897, 0.0010278162080794573, 0.015776120126247406, 0.005430853925645351, 0.0018078475259244442, 0.009314863942563534, 0.001602408941835165, 0.0064855716191232204], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 16:16:42.507897", "n_pass": [518, 79, 67], "n_token": 33, "loss": [0.030980058014392853, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "self", "output", "node", "self", "node", "output", "node", "node", "output", "(", "node", "output", "node", "node", "node", "regex", "=", "self", "node", ".", "node", "regex", "node", "regex", "regex", "node", "output", "node", "regex", "output", "regex", "output"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [1, 4, 18, 16, 22, 24, 25, 29, 31, 2, 6, 9, 12, 27, 30, 32, 3, 5, 7, 8, 11, 13, 14, 15, 19, 21, 23, 26, 28]}}
{"prediction": {"error_location": 0.9694948792457581, "repair_targets": [], "repair_candidates": [0.03673581779003143, 0.015993639826774597, 0.007705184165388346, 0.01270190067589283, 0.004069369286298752, 0.02358042076230049, 0.012575341388583183, 0.03032020479440689, 0.08179198205471039, 0.04575848579406738, 0.13911175727844238, 0.17207492887973785, 0.11999548226594925, 0.050240371376276016, 0.0831715390086174, 0.006699865683913231, 0.01654752902686596, 0.0017750263214111328, 0.006202579941600561, 0.003990367520600557, 0.011163986288011074, 0.004544448107481003, 0.005218401085585356, 0.03271223604679108, 0.025653842836618423, 0.006088681984692812, 0.02440720982849598, 0.005328688304871321, 0.013840687461197376], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 16:16:42.578489", "n_pass": [523, 80, 68], "n_token": 32, "loss": [0.06333667039871216, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "self", "output", "node", "self", "node", "output", "node", "node", "output", "(", "node", "output", "node", "node", "node", "regex", "self", "node", ".", "node", "regex", "node", "regex", "regex", "node", "output", "node", "regex", "output", "regex", "output"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [1, 4, 17, 16, 21, 23, 24, 28, 30, 2, 6, 9, 12, 26, 29, 31, 3, 5, 7, 8, 11, 13, 14, 15, 18, 20, 22, 25, 27]}}
{"prediction": {"error_location": 0.9386276006698608, "repair_targets": [], "repair_candidates": [0.2140931934118271, 0.05804932489991188, 0.015830663964152336, 0.026586076244711876, 0.009215873666107655, 0.05948982760310173, 0.0196011271327734, 0.012968390248715878, 0.08201444149017334, 0.013142386451363564, 0.05868911370635033, 0.014395471662282944, 0.010895996354520321, 0.0012856167741119862, 0.053990986198186874, 0.0042750840075314045, 0.006616638973355293, 0.004538329783827066, 0.04709772765636444, 0.013133521191775799, 0.0574958436191082, 0.008437417447566986, 0.011175843887031078, 0.0602513924241066, 0.020961683243513107, 0.010726073756814003, 0.0620986670255661, 0.010011954233050346, 0.03293128311634064], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 16:16:42.648996", "n_pass": [526, 81, 69], "n_token": 31, "loss": [0.45613908767700195, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "self", "output", "node", "self", "node", "output", "node", "node", "output", "(", "node", "output", "node", "node", "node", "regex", "self", "node", "node", "regex", "node", "regex", "regex", "node", "output", "node", "regex", "output", "regex", "output"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [1, 4, 17, 16, 20, 22, 23, 27, 29, 2, 6, 9, 12, 25, 28, 30, 3, 5, 7, 8, 11, 13, 14, 15, 18, 19, 21, 24, 26]}}
{"prediction": {"error_location": 0.6337255835533142, "repair_targets": [], "repair_candidates": [0.10123565793037415, 0.08213605731725693, 0.016770627349615097, 0.0072542475536465645, 0.005894015543162823, 0.04020056128501892, 0.019153540953993797, 0.024114735424518585, 0.1412496417760849, 0.014394483529031277, 0.11009177565574646, 0.030053459107875824, 0.05973215773701668, 0.054015759378671646, 0.11588404327630997, 0.002619287697598338, 0.024477673694491386, 0.0013412669068202376, 0.013610283844172955, 0.008708924986422062, 0.012291007675230503, 0.0027036054525524378, 0.006795608904212713, 0.04322969168424606, 0.008480023592710495, 0.003951800987124443, 0.031666237860918045, 0.0033917296677827835, 0.014552089385688305], "target_probs": 0.0}}




Minimal simplified tokens:

['#NEWLINE#', 'self', 'output', 'node', 'self', 'node', 'output', 'node', 'node', 'output', '(', 'node', 'output', 'node', 'node', 'node', 'regex', 'self', 'node', 'node', 'regex', 'node', 'regex', 'regex', 'node', 'output', 'node', 'regex', 'output', 'regex', 'output']
