
Original sample:

{"has_bug": false, "bug_kind": 0, "bug_kind_name": "NONE", "source_tokens": ["#NEWLINE#", "def _net_input(", "self", ",", "X", ")", ":", "#NEWLINE#", "#INDENT#", "'Compute the linear net input.'", "#NEWLINE#", "return", "(", "np", ".", "dot", "(", "X", ",", "self", ".", "w_", "[", "1", ":", "]", ")", "+", "self", ".", "w_", "[", "0", "]", ")"], "error_location": [0], "repair_targets": [], "repair_candidates": [2, 19, 28, 4, 17], "provenances": [{"datasetProvenance": {"datasetName": "ETHPy150Open", "filepath": "rasbt/mlxtend/mlxtend/classifier/adaline.py", "license": "bsd-3-clause", "note": "license: manual_eval"}}], "txt_file": "eval__VARIABLE_MISUSE__SStuB.txt-00000-of-00300", "js_count": 2302, "results": {"model": "transformer", "prob": {"loc": [[0.9725209474563599, 2.2469124814961106e-05, 6.858014671706769e-07, 3.7941407526886906e-07, 1.337156277259055e-06, 3.900337617324112e-07, 9.136282983490673e-07, 5.884444362891372e-07, 4.4466600002124324e-07, 4.2942764366671327e-07, 2.7477707931211626e-07, 1.6872444774662654e-08, 5.29160217865865e-08, 1.9294780884138163e-07, 3.4507752388890367e-07, 7.93539811638766e-08, 1.289202941734402e-06, 0.00017955897783394903, 1.8876085050578695e-06, 0.003563916077837348, 8.110076805678545e-07, 2.676201802387368e-06, 4.957779538017348e-07, 4.4102009155722044e-07, 2.411053174000699e-06, 4.651754352380522e-06, 1.676994401123011e-07, 3.1414182899425214e-07, 0.02368232235312462, 6.288942131504882e-07, 2.6718969365902012e-06, 1.3508398524209042e-06, 1.129313886849559e-06, 1.2439868442015722e-06, 2.3288591819436988e-06]], "pointer": [[0.0, 0.0, 0.007898131385445595, 0.0, 0.8592978119850159, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.13041841983795166, 0.0, 0.0012976611033082008, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0010879258625209332, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]], "target": [0.0]}, "loss": [0.027863524854183197, 0.0], "acc": [1.0, 0.0, 0.0, 0.0]}}


Trace of simplified code(s):

{"result": {"time": "2021-02-11 15:53:03.653363", "n_pass": [1, 1, 1], "n_token": 35, "loss": [0.027863524854183197, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def _net_input(", "self", ",", "X", ")", ":", "#NEWLINE#", "#INDENT#", "'Compute the linear net input.'", "#NEWLINE#", "return", "(", "np", ".", "dot", "(", "X", ",", "self", ".", "w_", "[", "1", ":", "]", ")", "+", "self", ".", "w_", "[", "0", "]", ")"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [2, 19, 28, 4, 17]}}
{"prediction": {"error_location": 0.9725209474563599, "repair_targets": [], "repair_candidates": [0.007898131385445595, 0.8592978119850159, 0.13041841983795166, 0.0012976611033082008, 0.0010879258625209332], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 15:53:03.708100", "n_pass": [9, 2, 2], "n_token": 26, "loss": [0.6756729483604431, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def _net_input(", "self", ",", "X", ")", ":", "#NEWLINE#", "X", ",", "self", ".", "w_", "[", "1", ":", "]", ")", "+", "self", ".", "w_", "[", "0", "]", ")"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [2, 10, 19, 4, 8]}}
{"prediction": {"error_location": 0.5088137984275818, "repair_targets": [], "repair_candidates": [6.571103585883975e-05, 0.37074947357177734, 0.6290993690490723, 8.421587699558586e-05, 1.297913286180119e-06], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 15:53:03.929660", "n_pass": [39, 6, 3], "n_token": 24, "loss": [0.5725111961364746, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def _net_input(", "self", ",", "X", ")", ":", "#NEWLINE#", "X", ",", "self", ".", "w_", "[", "]", ")", "+", "self", ".", "w_", "[", "0", "]", ")"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [2, 10, 17, 4, 8]}}
{"prediction": {"error_location": 0.5641071200370789, "repair_targets": [], "repair_candidates": [0.00019086872634943575, 0.4008534550666809, 0.5987520217895508, 0.0002003246045205742, 3.3028040888893884e-06], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 15:53:04.092626", "n_pass": [43, 9, 4], "n_token": 21, "loss": [0.5262542963027954, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def _net_input(", "self", ",", "X", ")", ":", "#NEWLINE#", "X", ",", "self", ".", "w_", "[", "]", ")", "+", "self", ".", "w_", "["]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [2, 10, 17, 4, 8]}}
{"prediction": {"error_location": 0.5908137559890747, "repair_targets": [], "repair_candidates": [0.00011817098129540682, 0.3609054982662201, 0.6385172605514526, 0.0004539133224170655, 5.198650342208566e-06], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 15:53:04.423290", "n_pass": [77, 15, 5], "n_token": 20, "loss": [0.6087499260902405, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def _net_input(", "self", "X", ")", ":", "#NEWLINE#", "X", ",", "self", ".", "w_", "[", "]", ")", "+", "self", ".", "w_", "["]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [2, 9, 16, 3, 7]}}
{"prediction": {"error_location": 0.5440305471420288, "repair_targets": [], "repair_candidates": [0.00013144506374374032, 0.5752913355827332, 0.42392590641975403, 0.0006444106111302972, 6.90082561050076e-06], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 15:53:04.531808", "n_pass": [80, 17, 6], "n_token": 19, "loss": [0.6438077092170715, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def _net_input(", "self", "X", ")", "#NEWLINE#", "X", ",", "self", ".", "w_", "[", "]", ")", "+", "self", ".", "w_", "["]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [2, 8, 15, 3, 6]}}
{"prediction": {"error_location": 0.525288462638855, "repair_targets": [], "repair_candidates": [0.00013871524424757808, 0.41415128111839294, 0.5849736928939819, 0.0007298355340026319, 6.517309884657152e-06], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 15:53:04.589727", "n_pass": [81, 18, 7], "n_token": 18, "loss": [0.6846448183059692, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def _net_input(", "self", "X", ")", "X", ",", "self", ".", "w_", "[", "]", ")", "+", "self", ".", "w_", "["]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [2, 7, 14, 3, 5]}}
{"prediction": {"error_location": 0.5042693018913269, "repair_targets": [], "repair_candidates": [0.00020744807261507958, 0.35584887862205505, 0.6423991918563843, 0.0015301909297704697, 1.4217663192539476e-05], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 15:53:04.643960", "n_pass": [83, 19, 8], "n_token": 17, "loss": [0.5101680755615234, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def _net_input(", "self", "X", ")", "X", "self", ".", "w_", "[", "]", ")", "+", "self", ".", "w_", "["]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [2, 6, 13, 3, 5]}}
{"prediction": {"error_location": 0.600394606590271, "repair_targets": [], "repair_candidates": [0.0037619369104504585, 0.5172306299209595, 0.4644470810890198, 0.013467677868902683, 0.0010927441762760282], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 15:53:04.698648", "n_pass": [85, 20, 9], "n_token": 16, "loss": [0.485856294631958, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def _net_input(", "self", "X", ")", "X", "self", "w_", "[", "]", ")", "+", "self", ".", "w_", "["]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [2, 6, 12, 3, 5]}}
{"prediction": {"error_location": 0.6151701807975769, "repair_targets": [], "repair_candidates": [0.01981908082962036, 0.21250154078006744, 0.6953001618385315, 0.07202374190092087, 0.00035547136212699115], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 15:53:04.806607", "n_pass": [87, 22, 10], "n_token": 15, "loss": [0.3017076849937439, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def _net_input(", "self", "X", ")", "X", "self", "w_", "]", ")", "+", "self", ".", "w_", "["]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [2, 6, 11, 3, 5]}}
{"prediction": {"error_location": 0.7395541071891785, "repair_targets": [], "repair_candidates": [0.19376349449157715, 0.30299559235572815, 0.40732645988464355, 0.09367004781961441, 0.002244443167001009], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 15:53:04.860323", "n_pass": [88, 23, 11], "n_token": 14, "loss": [0.40542712807655334, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def _net_input(", "self", "X", ")", "X", "self", "w_", ")", "+", "self", ".", "w_", "["]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [2, 6, 10, 3, 5]}}
{"prediction": {"error_location": 0.6666919589042664, "repair_targets": [], "repair_candidates": [0.09838246554136276, 0.41908371448516846, 0.4469869136810303, 0.03448616713285446, 0.0010606430005282164], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 15:53:04.914725", "n_pass": [89, 24, 12], "n_token": 13, "loss": [0.1295311599969864, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def _net_input(", "self", "X", ")", "X", "self", "w_", "+", "self", ".", "w_", "["]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [2, 6, 9, 3, 5]}}
{"prediction": {"error_location": 0.8785073161125183, "repair_targets": [], "repair_candidates": [0.04677741974592209, 0.4078534245491028, 0.5136929750442505, 0.03083866462111473, 0.0008374813478440046], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 15:53:04.968866", "n_pass": [90, 25, 13], "n_token": 12, "loss": [0.019993558526039124, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def _net_input(", "self", "X", ")", "X", "self", "w_", "self", ".", "w_", "["]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [2, 6, 8, 3, 5]}}
{"prediction": {"error_location": 0.9802047610282898, "repair_targets": [], "repair_candidates": [0.021235959604382515, 0.42794084548950195, 0.5149217247962952, 0.03403253108263016, 0.0018690142314881086], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 15:53:05.027440", "n_pass": [92, 26, 14], "n_token": 11, "loss": [0.023235546424984932, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def _net_input(", "self", "X", ")", "X", "self", "w_", "self", "w_", "["]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [2, 6, 8, 3, 5]}}
{"prediction": {"error_location": 0.9770324230194092, "repair_targets": [], "repair_candidates": [0.05946847051382065, 0.1980079859495163, 0.4667588174343109, 0.22669868171215057, 0.04906594753265381], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 15:53:05.135304", "n_pass": [95, 28, 15], "n_token": 10, "loss": [0.15800823271274567, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "self", "X", ")", "X", "self", "w_", "self", "w_", "["]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [1, 5, 7, 2, 4]}}
{"prediction": {"error_location": 0.8538428544998169, "repair_targets": [], "repair_candidates": [0.007990466430783272, 0.4881103038787842, 0.2769875228404999, 0.18931907415390015, 0.037592656910419464], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 15:53:05.243727", "n_pass": [101, 30, 16], "n_token": 9, "loss": [0.5584830641746521, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "self", "X", ")", "X", "self", "self", "w_", "["]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [1, 5, 6, 2, 4]}}
{"prediction": {"error_location": 0.5720762014389038, "repair_targets": [], "repair_candidates": [0.05555574595928192, 0.6551781892776489, 0.2286785989999771, 0.04842067137360573, 0.012166813015937805], "target_probs": 0.0}}




Minimal simplified tokens:

['#NEWLINE#', 'self', 'X', ')', 'X', 'self', 'self', 'w_', '[']
